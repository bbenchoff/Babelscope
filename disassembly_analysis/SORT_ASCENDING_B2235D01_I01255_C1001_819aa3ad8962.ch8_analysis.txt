
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B2235D01_I01255_C1001_819aa3ad8962.ch8
ROM Size: 3584 bytes
Instructions Found: 1791

DISCOVERY INFORMATION:
Batch: 2235
Instance: 1255
Direction: ascending
Final Array: [0, 0, 1, 62, 75, 129, 219, 238]
Operations: R:0 W:1 C:22 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 105
Sort Array References:
  $208: LD I, $C31 ; Load C31 into I
  $22C: LD I, $B9D ; Load B9D into I
  $232: LD I, $530 ; Load 530 into I
  $24A: LD I, $E7A ; Load E7A into I
  $298: LD I, $220 ; Load 220 into I
  $2BC: LD I, $9AD ; Load 9AD into I
  $2E4: LD I, $1D4 ; Load 1D4 into I
  $352: LD I, $3EE ; Load 3EE into I
  $354: LD I, $65C ; Load 65C into I
  $376: LD I, $BED ; Load BED into I
  $3A4: LD I, $FB2 ; Load FB2 into I
  $3E2: LD I, $62C ; Load 62C into I
  $416: LD I, $C14 ; Load C14 into I
  $422: LD I, $715 ; Load 715 into I
  $436: LD I, $40A ; Load 40A into I
  $43E: LD I, $25C ; Load 25C into I
  $442: LD I, $8DA ; Load 8DA into I
  $456: LD I, $992 ; Load 992 into I
  $4B4: ADD I, VF ; I ADDRESS MANIPULATION
  $4E4: LD I, $13D ; Load 13D into I
  $4F2: LD I, $79E ; Load 79E into I
  $510: LD I, $61D ; Load 61D into I
  $53C: LD I, $1D8 ; Load 1D8 into I
  $540: LD I, $D58 ; Load D58 into I
  $54E: LD I, $CFA ; Load CFA into I
  $580: LD I, $A7F ; Load A7F into I
  $58E: LD I, $40A ; Load 40A into I
  $5C6: LD I, $167 ; Load 167 into I
  $5E6: LD I, $65F ; Load 65F into I
  $60A: LD I, $B11 ; Load B11 into I
  $624: LD I, $F6D ; Load F6D into I
  $628: LD I, $2EE ; Load 2EE into I
  $644: LD I, $3D8 ; Load 3D8 into I
  $650: LD I, $B14 ; Load B14 into I
  $678: LD I, $78D ; Load 78D into I
  $682: LD I, $95F ; Load 95F into I
  $6B2: LD I, $77D ; Load 77D into I
  $6E8: LD I, $EB9 ; Load EB9 into I
  $752: LD I, $628 ; Load 628 into I
  $75C: LD I, $F0F ; Load F0F into I
  $766: LD I, $CFA ; Load CFA into I
  $776: LD I, $2BB ; Load 2BB into I
  $7AE: LD I, $897 ; Load 897 into I
  $7DC: ADD I, V3 ; I ADDRESS MANIPULATION
  $7F4: LD I, $565 ; Load 565 into I
  $812: LD I, $C1E ; Load C1E into I
  $836: LD I, $0CE ; Load 0CE into I
  $878: LD I, $070 ; Load 070 into I
  $88E: LD I, $912 ; Load 912 into I
  $890: LD I, $74D ; Load 74D into I
  $8A0: LD I, $8BB ; Load 8BB into I
  $8A2: LD I, $DF4 ; Load DF4 into I
  $8AC: LD I, $217 ; Load 217 into I
  $8D8: LD I, $DB5 ; Load DB5 into I
  $8DE: LD I, $FF2 ; Load FF2 into I
  $8E2: LD I, $FCB ; Load FCB into I
  $8E8: LD I, $2CE ; Load 2CE into I
  $8EC: LD I, $C3A ; Load C3A into I
  $8F2: LD I, $B04 ; Load B04 into I
  $8F4: LD I, $6CF ; Load 6CF into I
  $912: LD I, $BD6 ; Load BD6 into I
  $916: LD I, $C1C ; Load C1C into I
  $922: LD I, $B0A ; Load B0A into I
  $992: LD I, $097 ; Load 097 into I
  $9BA: LD I, $971 ; Load 971 into I
  $A20: LD I, $606 ; Load 606 into I
  $A2E: LD I, $410 ; Load 410 into I
  $A40: LD I, $336 ; Load 336 into I
  $A82: LD I, $8A7 ; Load 8A7 into I
  $A84: LD I, $A4C ; Load A4C into I
  $AA0: LD I, $A3F ; Load A3F into I
  $AA8: LD I, $B88 ; Load B88 into I
  $AC8: LD I, $FB7 ; Load FB7 into I
  $B12: LD I, $63B ; Load 63B into I
  $B48: LD I, $0AA ; Load 0AA into I
  $B62: LD I, $3F2 ; Load 3F2 into I
  $B6C: LD I, $108 ; Load 108 into I
  $B8C: LD I, $8F5 ; Load 8F5 into I
  $BE2: LD I, $124 ; Load 124 into I
  $BE4: LD I, $304 ; Load 304 into I
  $BE6: LD I, $652 ; Load 652 into I
  $BFE: LD I, $C50 ; Load C50 into I
  $C04: LD I, $45B ; Load 45B into I
  $C16: LD I, $7AE ; Load 7AE into I
  $C36: LD I, $7E7 ; Load 7E7 into I
  $C5C: LD I, $618 ; Load 618 into I
  $C94: LD I, $2E9 ; Load 2E9 into I
  $CD8: LD I, $977 ; Load 977 into I
  $CEA: LD I, $C55 ; Load C55 into I
  $CFC: LD I, $3D9 ; Load 3D9 into I
  $D52: LD I, $340 ; Load 340 into I
  $D60: LD I, $67C ; Load 67C into I
  $D80: LD I, $A46 ; Load A46 into I
  $E10: LD I, $898 ; Load 898 into I
  $E1C: LD I, $702 ; Load 702 into I
  $E32: LD I, $B64 ; Load B64 into I
  $E3E: LD I, $4F3 ; Load 4F3 into I
  $E72: LD I, $65D ; Load 65D into I
  $E88: LD I, $670 ; Load 670 into I
  $F14: LD I, $E5C ; Load E5C into I
  $F38: LD I, $DA0 ; Load DA0 into I
  $F7C: LD I, $08E ; Load 08E into I
  $FBA: LD I, $1FA ; Load 1FA into I
  $FDA: LD I, $E8F ; Load E8F into I
  $FE0: LD I, $7B7 ; Load 7B7 into I

CONTROL FLOW ANALYSIS:
Jumps: 227
Calls: 115
Branches: 254
Loops: 125
Loop Structures:
  $240 -> $0A4 (backward jump)
  $31A -> $06A (backward jump)
  $3A0 -> $2FC (backward jump)
  $3FE -> $1B9 (backward jump)
  $40C -> $160 (backward jump)
  $46C -> $3EC (backward jump)
  $54A -> $4CE (backward jump)
  $5D4 -> $126 (backward jump)
  $5DE -> $39E (backward jump)
  $5EE -> $3F7 (backward jump)
  $5F8 -> $104 (backward jump)
  $62C -> $2B4 (backward jump)
  $634 -> $1EB (backward jump)
  $638 -> $636 (backward jump)
  $64C -> $195 (backward jump)
  $65E -> $0B1 (backward jump)
  $680 -> $66B (backward jump)
  $730 -> $567 (backward jump)
  $7D0 -> $6DD (backward jump)
  $7D2 -> $12F (backward jump)
  $7E8 -> $41A (backward jump)
  $7EA -> $1E2 (backward jump)
  $81C -> $6EA (backward jump)
  $82C -> $47A (backward jump)
  $868 -> $831 (backward jump)
  $87C -> $382 (backward jump)
  $884 -> $266 (backward jump)
  $892 -> $0C4 (backward jump)
  $898 -> $66B (backward jump)
  $8A8 -> $46D (backward jump)
  $93E -> $0C0 (backward jump)
  $968 -> $175 (backward jump)
  $978 -> $577 (backward jump)
  $97E -> $1BC (backward jump)
  $9A0 -> $31B (backward jump)
  $9A4 -> $2F8 (backward jump)
  $9AE -> $7B4 (backward jump)
  $9B6 -> $40C (backward jump)
  $9C8 -> $1C5 (backward jump)
  $9D2 -> $0D1 (backward jump)
  $9F0 -> $445 (backward jump)
  $9FA -> $074 (backward jump)
  $A32 -> $451 (backward jump)
  $A4A -> $977 (backward jump)
  $A56 -> $26C (backward jump)
  $A6C -> $081 (backward jump)
  $A90 -> $551 (backward jump)
  $A96 -> $2E6 (backward jump)
  $ACC -> $6D5 (backward jump)
  $AEC -> $365 (backward jump)
  $AF2 -> $567 (backward jump)
  $B08 -> $2C6 (backward jump)
  $B22 -> $AC1 (backward jump)
  $B40 -> $934 (backward jump)
  $B4A -> $2DF (backward jump)
  $B60 -> $347 (backward jump)
  $B6E -> $AC4 (backward jump)
  $B72 -> $47E (backward jump)
  $B8E -> $152 (backward jump)
  $B94 -> $B29 (backward jump)
  $BA2 -> $3B4 (backward jump)
  $BB8 -> $BB2 (backward jump)
  $BF8 -> $188 (backward jump)
  $C08 -> $168 (backward jump)
  $C0C -> $B62 (backward jump)
  $C0E -> $A0C (backward jump)
  $C20 -> $1D3 (backward jump)
  $C26 -> $508 (backward jump)
  $C2C -> $AC5 (backward jump)
  $C46 -> $BDA (backward jump)
  $C50 -> $AEB (backward jump)
  $C68 -> $375 (backward jump)
  $C72 -> $3DD (backward jump)
  $C92 -> $034 (backward jump)
  $C98 -> $2ED (backward jump)
  $CA4 -> $57A (backward jump)
  $CC4 -> $7D8 (backward jump)
  $CCC -> $43D (backward jump)
  $CD0 -> $C31 (backward jump)
  $CDC -> $8E7 (backward jump)
  $CF6 -> $A9A (backward jump)
  $D0A -> $3A5 (backward jump)
  $D14 -> $104 (backward jump)
  $D1A -> $95D (backward jump)
  $D38 -> $4FA (backward jump)
  $D40 -> $7A1 (backward jump)
  $D42 -> $2F2 (backward jump)
  $D4C -> $82D (backward jump)
  $D5C -> $330 (backward jump)
  $D82 -> $A58 (backward jump)
  $D98 -> $0F4 (backward jump)
  $D9A -> $70F (backward jump)
  $DC0 -> $386 (backward jump)
  $DC2 -> $752 (backward jump)
  $DD2 -> $01E (backward jump)
  $DE8 -> $934 (backward jump)
  $DFC -> $218 (backward jump)
  $E26 -> $2D2 (backward jump)
  $E70 -> $806 (backward jump)
  $E7E -> $D37 (backward jump)
  $EAC -> $49A (backward jump)
  $EB2 -> $2E8 (backward jump)
  $ED8 -> $188 (backward jump)
  $F06 -> $A04 (backward jump)
  $F18 -> $BB5 (backward jump)
  $F1C -> $85D (backward jump)
  $F2E -> $40C (backward jump)
  $F3E -> $310 (backward jump)
  $F4A -> $350 (backward jump)
  $F64 -> $049 (backward jump)
  $F6A -> $DC5 (backward jump)
  $F74 -> $A85 (backward jump)
  $F84 -> $E9F (backward jump)
  $F9E -> $006 (backward jump)
  $FA0 -> $7B9 (backward jump)
  $FAC -> $2D7 (backward jump)
  $FB0 -> $11D (backward jump)
  $FBE -> $708 (backward jump)
  $FC4 -> $AF5 (backward jump)
  $FCC -> $79C (backward jump)
  $FCE -> $3BE (backward jump)
  $FE2 -> $DA3 (backward jump)
  $FEA -> $251 (backward jump)
  $FEE -> $BE2 (backward jump)
  $FFA -> $1F1 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $28DD   CALL     $8DD            ; Call subroutine at 8DD
$202    $12D6   JP       $2D6            ; Jump to 2D6
$204    $9AB8   UNKNOWN  $9AB8           ; Unknown 9xxx instruction
$206    $888C   UNKNOWN  888C            ; Unknown 8xxx instruction
$208    $AC31   LD       I, $C31         ; Load C31 into I
$20A    $C906   RND      V9, #06         ; V9 = random & 06
$20C    $995F   UNKNOWN  $995F           ; Unknown 9xxx instruction
$20E    $6775   LD       V7, #75         ; Load 117 into V7
$210    $9A24   UNKNOWN  $9A24           ; Unknown 9xxx instruction
$212    $2608   CALL     $608            ; Call subroutine at 608
$214    $1720   JP       $720            ; Jump to 720
$216    $DD4E   DRW      VD, V4, #E      ; Draw 14-byte sprite at VD, V4
$218    $22BB   CALL     $2BB            ; Call subroutine at 2BB
$21A    $2E17   CALL     $E17            ; Call subroutine at E17
$21C    $2FA7   CALL     $FA7            ; Call subroutine at FA7
$21E    $069C   SYS      $69C            ; System call to 69C
$220    $011F   SYS      $11F            ; System call to 11F
$222    $85DF   UNKNOWN  85DF            ; Unknown 8xxx instruction
$224    $3F11   SE       VF, #11         ; Skip if VF == 17
$226    $3ED4   SE       VE, #D4         ; Skip if VE == 212
$228    $CD2A   RND      VD, #2A         ; VD = random & 2A
$22A    $0B2E   SYS      $B2E            ; System call to B2E
$22C    $AB9D   LD       I, $B9D         ; Load B9D into I
$22E    $B89F   JP       V0, $89F        ; Jump to V0 + 89F
$230    $B77A   JP       V0, $77A        ; Jump to V0 + 77A
$232    $A530   LD       I, $530         ; Load 530 into I
$234    $FEE9   UNKNOWN  FEE9            ; Unknown Fxxx instruction
$236    $C56C   RND      V5, #6C         ; V5 = random & 6C
$238    $7645   ADD      V6, #45         ; Add 69 to V6
$23A    $4B08   SNE      VB, #08         ; Skip if VB != 8
$23C    $C77C   RND      V7, #7C         ; V7 = random & 7C
$23E    $00A1   SYS      $0A1            ; System call to 0A1
$240    $10A4   JP       $0A4            ; Jump to 0A4
$242    $303F   SE       V0, #3F         ; Skip if V0 == 63
$244    $ECF3   UNKNOWN  $ECF3           ; Unknown Exxx instruction
$246    $F5C3   UNKNOWN  F5C3            ; Unknown Fxxx instruction
$248    $8FAF   UNKNOWN  8FAF            ; Unknown 8xxx instruction
$24A    $AE7A   LD       I, $E7A         ; Load E7A into I
$24C    $5367   UNKNOWN  $5367           ; Unknown 5xxx instruction
$24E    $D9EA   DRW      V9, VE, #A      ; Draw 10-byte sprite at V9, VE
$250    $B4D2   JP       V0, $4D2        ; Jump to V0 + 4D2
$252    $D0FC   DRW      V0, VF, #C      ; Draw 12-byte sprite at V0, VF
$254    $DC40   DRW      VC, V4, #0      ; Draw 0-byte sprite at VC, V4
$256    $B747   JP       V0, $747        ; Jump to V0 + 747
$258    $CE5F   RND      VE, #5F         ; VE = random & 5F
$25A    $E693   UNKNOWN  $E693           ; Unknown Exxx instruction
$25C    $5CAE   UNKNOWN  $5CAE           ; Unknown 5xxx instruction
$25E    $F25A   UNKNOWN  F25A            ; Unknown Fxxx instruction
$260    $9817   UNKNOWN  $9817           ; Unknown 9xxx instruction
$262    $D47C   DRW      V4, V7, #C      ; Draw 12-byte sprite at V4, V7
$264    $66FE   LD       V6, #FE         ; Load 254 into V6
$266    $E066   UNKNOWN  $E066           ; Unknown Exxx instruction
$268    $7819   ADD      V8, #19         ; Add 25 to V8
$26A    $D94A   DRW      V9, V4, #A      ; Draw 10-byte sprite at V9, V4
$26C    $1571   JP       $571            ; Jump to 571
$26E    $CBCD   RND      VB, #CD         ; VB = random & CD
$270    $D85F   DRW      V8, V5, #F      ; Draw 15-byte sprite at V8, V5
$272    $5515   UNKNOWN  $5515           ; Unknown 5xxx instruction
$274    $1FCA   JP       $FCA            ; Jump to FCA
$276    $3956   SE       V9, #56         ; Skip if V9 == 86
$278    $04D3   SYS      $4D3            ; System call to 4D3
$27A    $7AA8   ADD      VA, #A8         ; Add 168 to VA
$27C    $1461   JP       $461            ; Jump to 461
$27E    $4F7B   SNE      VF, #7B         ; Skip if VF != 123
$280    $48A5   SNE      V8, #A5         ; Skip if V8 != 165
$282    $1924   JP       $924            ; Jump to 924
$284    $9CEC   UNKNOWN  $9CEC           ; Unknown 9xxx instruction
$286    $3932   SE       V9, #32         ; Skip if V9 == 50
$288    $BC3E   JP       V0, $C3E        ; Jump to V0 + C3E
$28A    $30AB   SE       V0, #AB         ; Skip if V0 == 171
$28C    $3D9D   SE       VD, #9D         ; Skip if VD == 157
$28E    $CB7A   RND      VB, #7A         ; VB = random & 7A
$290    $FAAD   UNKNOWN  FAAD            ; Unknown Fxxx instruction
$292    $0331   SYS      $331            ; System call to 331
$294    $6A63   LD       VA, #63         ; Load 99 into VA
$296    $D9BC   DRW      V9, VB, #C      ; Draw 12-byte sprite at V9, VB
$298    $A220   LD       I, $220         ; Load 220 into I
$29A    $DE70   DRW      VE, V7, #0      ; Draw 0-byte sprite at VE, V7
$29C    $068B   SYS      $68B            ; System call to 68B
$29E    $2F14   CALL     $F14            ; Call subroutine at F14
$2A0    $5AE2   UNKNOWN  $5AE2           ; Unknown 5xxx instruction
$2A2    $34A6   SE       V4, #A6         ; Skip if V4 == 166
$2A4    $C5C4   RND      V5, #C4         ; V5 = random & C4
$2A6    $889F   UNKNOWN  889F            ; Unknown 8xxx instruction
$2A8    $2476   CALL     $476            ; Call subroutine at 476
$2AA    $E89C   UNKNOWN  $E89C           ; Unknown Exxx instruction
$2AC    $015F   SYS      $15F            ; System call to 15F
$2AE    $D992   DRW      V9, V9, #2      ; Draw 2-byte sprite at V9, V9
$2B0    $BAEE   JP       V0, $AEE        ; Jump to V0 + AEE
$2B2    $824E   SHL      V2              ; V2 <<= 1, VF = MSB
$2B4    $221A   CALL     $21A            ; Call subroutine at 21A
$2B6    $2525   CALL     $525            ; Call subroutine at 525
$2B8    $8F9B   UNKNOWN  8F9B            ; Unknown 8xxx instruction
$2BA    $387D   SE       V8, #7D         ; Skip if V8 == 125
$2BC    $A9AD   LD       I, $9AD         ; Load 9AD into I
$2BE    $4A39   SNE      VA, #39         ; Skip if VA != 57
$2C0    $75CF   ADD      V5, #CF         ; Add 207 to V5
$2C2    $C773   RND      V7, #73         ; V7 = random & 73
$2C4    $337E   SE       V3, #7E         ; Skip if V3 == 126
$2C6    $4360   SNE      V3, #60         ; Skip if V3 != 96
$2C8    $215C   CALL     $15C            ; Call subroutine at 15C
$2CA    $08EF   SYS      $8EF            ; System call to 8EF
$2CC    $D17B   DRW      V1, V7, #B      ; Draw 11-byte sprite at V1, V7
$2CE    $4F47   SNE      VF, #47         ; Skip if VF != 71
$2D0    $2F1F   CALL     $F1F            ; Call subroutine at F1F
$2D2    $1D5E   JP       $D5E            ; Jump to D5E
$2D4    $2BDB   CALL     $BDB            ; Call subroutine at BDB
$2D6    $25EB   CALL     $5EB            ; Call subroutine at 5EB
$2D8    $8B14   ADD      VB, V1          ; VB += V1, VF = carry
$2DA    $0328   SYS      $328            ; System call to 328
$2DC    $15D7   JP       $5D7            ; Jump to 5D7
$2DE    $F2D5   UNKNOWN  F2D5            ; Unknown Fxxx instruction
$2E0    $5CD9   UNKNOWN  $5CD9           ; Unknown 5xxx instruction
$2E2    $8FE2   AND      VF, VE          ; VF &= VE
$2E4    $A1D4   LD       I, $1D4         ; Load 1D4 into I
$2E6    $3DB3   SE       VD, #B3         ; Skip if VD == 179
$2E8    $226B   CALL     $26B            ; Call subroutine at 26B
$2EA    $06EC   SYS      $6EC            ; System call to 6EC
$2EC    $1B80   JP       $B80            ; Jump to B80
$2EE    $0770   SYS      $770            ; System call to 770
$2F0    $301C   SE       V0, #1C         ; Skip if V0 == 28
$2F2    $88D7   SUBN     V8, VD          ; V8 = VD - V8, VF = !borrow
$2F4    $F15E   UNKNOWN  F15E            ; Unknown Fxxx instruction
$2F6    $20AA   CALL     $0AA            ; Call subroutine at 0AA
$2F8    $2E90   CALL     $E90            ; Call subroutine at E90
$2FA    $86AF   UNKNOWN  86AF            ; Unknown 8xxx instruction
$2FC    $B4BF   JP       V0, $4BF        ; Jump to V0 + 4BF
$2FE    $8822   AND      V8, V2          ; V8 &= V2
$302    $013E   SYS      $13E            ; System call to 13E
$304    $4B81   SNE      VB, #81         ; Skip if VB != 129
$306    $DBEE   DRW      VB, VE, #E      ; Draw 14-byte sprite at VB, VE
$308    $B42E   JP       V0, $42E        ; Jump to V0 + 42E
$30A    $43AB   SNE      V3, #AB         ; Skip if V3 != 171
$30C    $7617   ADD      V6, #17         ; Add 23 to V6
$30E    $42A3   SNE      V2, #A3         ; Skip if V2 != 163
$310    $CDAB   RND      VD, #AB         ; VD = random & AB
$312    $DFAD   DRW      VF, VA, #D      ; Draw 13-byte sprite at VF, VA
$314    $7113   ADD      V1, #13         ; Add 19 to V1
$316    $F3AF   UNKNOWN  F3AF            ; Unknown Fxxx instruction
$318    $DCD3   DRW      VC, VD, #3      ; Draw 3-byte sprite at VC, VD
$31A    $B06A   JP       V0, $06A        ; Jump to V0 + 06A
$31C    $CCEB   RND      VC, #EB         ; VC = random & EB
$31E    $87D2   AND      V7, VD          ; V7 &= VD
$320    $2941   CALL     $941            ; Call subroutine at 941
$322    $42A6   SNE      V2, #A6         ; Skip if V2 != 166
$324    $77B2   ADD      V7, #B2         ; Add 178 to V7
$326    $EE15   UNKNOWN  $EE15           ; Unknown Exxx instruction
$328    $8E41   OR       VE, V4          ; VE |= V4
$32A    $0A69   SYS      $A69            ; System call to A69
$32C    $2394   CALL     $394            ; Call subroutine at 394
$32E    $6A76   LD       VA, #76         ; Load 118 into VA
$330    $5068   UNKNOWN  $5068           ; Unknown 5xxx instruction
$332    $802D   UNKNOWN  802D            ; Unknown 8xxx instruction
$334    $3EA8   SE       VE, #A8         ; Skip if VE == 168
$336    $27E7   CALL     $7E7            ; Call subroutine at 7E7
$338    $8089   UNKNOWN  8089            ; Unknown 8xxx instruction
$33A    $EB2B   UNKNOWN  $EB2B           ; Unknown Exxx instruction
$33C    $9423   UNKNOWN  $9423           ; Unknown 9xxx instruction
$33E    $68F5   LD       V8, #F5         ; Load 245 into V8
$340    $5DDC   UNKNOWN  $5DDC           ; Unknown 5xxx instruction
$342    $5487   UNKNOWN  $5487           ; Unknown 5xxx instruction
$344    $4D51   SNE      VD, #51         ; Skip if VD != 81
$346    $C8F9   RND      V8, #F9         ; V8 = random & F9
$348    $5682   UNKNOWN  $5682           ; Unknown 5xxx instruction
$34A    $B6C6   JP       V0, $6C6        ; Jump to V0 + 6C6
$34C    $9D7E   UNKNOWN  $9D7E           ; Unknown 9xxx instruction
$34E    $4B01   SNE      VB, #01         ; Skip if VB != 1
$350    $D71C   DRW      V7, V1, #C      ; Draw 12-byte sprite at V7, V1
$352    $A3EE   LD       I, $3EE         ; Load 3EE into I
$354    $A65C   LD       I, $65C         ; Load 65C into I
$356    $4D3B   SNE      VD, #3B         ; Skip if VD != 59
$358    $7859   ADD      V8, #59         ; Add 89 to V8
$35A    $C352   RND      V3, #52         ; V3 = random & 52
$35C    $095F   SYS      $95F            ; System call to 95F
$35E    $6BF5   LD       VB, #F5         ; Load 245 into VB
$360    $FDA7   UNKNOWN  FDA7            ; Unknown Fxxx instruction
$362    $D90F   DRW      V9, V0, #F      ; Draw 15-byte sprite at V9, V0
$364    $C99D   RND      V9, #9D         ; V9 = random & 9D
$366    $967F   UNKNOWN  $967F           ; Unknown 9xxx instruction
$368    $25AD   CALL     $5AD            ; Call subroutine at 5AD
$36A    $D488   DRW      V4, V8, #8      ; Draw 8-byte sprite at V4, V8
$36C    $6CCE   LD       VC, #CE         ; Load 206 into VC
$36E    $9408   UNKNOWN  $9408           ; Unknown 9xxx instruction
$370    $9FAA   UNKNOWN  $9FAA           ; Unknown 9xxx instruction
$372    $BE3B   JP       V0, $E3B        ; Jump to V0 + E3B
$374    $D853   DRW      V8, V5, #3      ; Draw 3-byte sprite at V8, V5
$376    $ABED   LD       I, $BED         ; Load BED into I
$378    $CA42   RND      VA, #42         ; VA = random & 42
$37A    $C8C1   RND      V8, #C1         ; V8 = random & C1
$37C    $E881   UNKNOWN  $E881           ; Unknown Exxx instruction
$37E    $FA2D   UNKNOWN  FA2D            ; Unknown Fxxx instruction
$380    $B809   JP       V0, $809        ; Jump to V0 + 809
$382    $8ABB   UNKNOWN  8ABB            ; Unknown 8xxx instruction
$384    $2226   CALL     $226            ; Call subroutine at 226
$386    $0F74   SYS      $F74            ; System call to F74
$388    $B796   JP       V0, $796        ; Jump to V0 + 796
$38A    $F3A5   UNKNOWN  F3A5            ; Unknown Fxxx instruction
$38C    $8DB3   XOR      VD, VB          ; VD ^= VB
$38E    $EC11   UNKNOWN  $EC11           ; Unknown Exxx instruction
$390    $4D95   SNE      VD, #95         ; Skip if VD != 149
$392    $2189   CALL     $189            ; Call subroutine at 189
$394    $B916   JP       V0, $916        ; Jump to V0 + 916
$396    $407F   SNE      V0, #7F         ; Skip if V0 != 127
$398    $CFFE   RND      VF, #FE         ; VF = random & FE
$39A    $5A56   UNKNOWN  $5A56           ; Unknown 5xxx instruction
$39C    $CFAE   RND      VF, #AE         ; VF = random & AE
$39E    $E403   UNKNOWN  $E403           ; Unknown Exxx instruction
$3A0    $B2FC   JP       V0, $2FC        ; Jump to V0 + 2FC
$3A2    $662F   LD       V6, #2F         ; Load 47 into V6
$3A4    $AFB2   LD       I, $FB2         ; Load FB2 into I
$3A6    $233A   CALL     $33A            ; Call subroutine at 33A
$3A8    $CB9F   RND      VB, #9F         ; VB = random & 9F
$3AA    $5593   UNKNOWN  $5593           ; Unknown 5xxx instruction
$3AC    $3E9D   SE       VE, #9D         ; Skip if VE == 157
$3AE    $F0C5   UNKNOWN  F0C5            ; Unknown Fxxx instruction
$3B0    $9D88   UNKNOWN  $9D88           ; Unknown 9xxx instruction
$3B2    $6A05   LD       VA, #05         ; Load 5 into VA
$3B4    $5A5F   UNKNOWN  $5A5F           ; Unknown 5xxx instruction
$3B6    $82B6   SHR      V2              ; V2 >>= 1, VF = LSB
$3B8    $4425   SNE      V4, #25         ; Skip if V4 != 37
$3BA    $3EDB   SE       VE, #DB         ; Skip if VE == 219
$3BC    $4452   SNE      V4, #52         ; Skip if V4 != 82
$3BE    $9D11   UNKNOWN  $9D11           ; Unknown 9xxx instruction
$3C0    $3C4F   SE       VC, #4F         ; Skip if VC == 79
$3C2    $DA01   DRW      VA, V0, #1      ; Draw 1-byte sprite at VA, V0
$3C4    $53B3   UNKNOWN  $53B3           ; Unknown 5xxx instruction
$3C6    $9712   UNKNOWN  $9712           ; Unknown 9xxx instruction
$3C8    $8352   AND      V3, V5          ; V3 &= V5
$3CA    $9DCD   UNKNOWN  $9DCD           ; Unknown 9xxx instruction
$3CC    $E479   UNKNOWN  $E479           ; Unknown Exxx instruction
$3CE    $843C   UNKNOWN  843C            ; Unknown 8xxx instruction
$3D0    $7BA8   ADD      VB, #A8         ; Add 168 to VB
$3D2    $5A34   UNKNOWN  $5A34           ; Unknown 5xxx instruction
$3D4    $FB42   UNKNOWN  FB42            ; Unknown Fxxx instruction
$3D6    $697F   LD       V9, #7F         ; Load 127 into V9
$3D8    $D43C   DRW      V4, V3, #C      ; Draw 12-byte sprite at V4, V3
$3DA    $547F   UNKNOWN  $547F           ; Unknown 5xxx instruction
$3DC    $6AC7   LD       VA, #C7         ; Load 199 into VA
$3DE    $19E0   JP       $9E0            ; Jump to 9E0
$3E0    $F991   UNKNOWN  F991            ; Unknown Fxxx instruction
$3E2    $A62C   LD       I, $62C         ; Load 62C into I
$3E4    $B4F4   JP       V0, $4F4        ; Jump to V0 + 4F4
$3E6    $8B22   AND      VB, V2          ; VB &= V2
$3E8    $D373   DRW      V3, V7, #3      ; Draw 3-byte sprite at V3, V7
$3EA    $9E91   UNKNOWN  $9E91           ; Unknown 9xxx instruction
$3EC    $BCAF   JP       V0, $CAF        ; Jump to V0 + CAF
$3EE    $4F24   SNE      VF, #24         ; Skip if VF != 36
$3F0    $EA8E   UNKNOWN  $EA8E           ; Unknown Exxx instruction
$3F2    $845F   UNKNOWN  845F            ; Unknown 8xxx instruction
$3F4    $1F65   JP       $F65            ; Jump to F65
$3F6    $36B5   SE       V6, #B5         ; Skip if V6 == 181
$3F8    $1AA4   JP       $AA4            ; Jump to AA4
$3FA    $909B   UNKNOWN  $909B           ; Unknown 9xxx instruction
$3FC    $CA1A   RND      VA, #1A         ; VA = random & 1A
$3FE    $11B9   JP       $1B9            ; Jump to 1B9
$400    $5BE1   UNKNOWN  $5BE1           ; Unknown 5xxx instruction
$402    $8D4F   UNKNOWN  8D4F            ; Unknown 8xxx instruction
$404    $8209   UNKNOWN  8209            ; Unknown 8xxx instruction
$406    $2B9C   CALL     $B9C            ; Call subroutine at B9C
$408    $4193   SNE      V1, #93         ; Skip if V1 != 147
$40A    $9B06   UNKNOWN  $9B06           ; Unknown 9xxx instruction
$40C    $1160   JP       $160            ; Jump to 160
$40E    $DDA6   DRW      VD, VA, #6      ; Draw 6-byte sprite at VD, VA
$410    $3AF7   SE       VA, #F7         ; Skip if VA == 247
$412    $F2CF   UNKNOWN  F2CF            ; Unknown Fxxx instruction
$414    $B827   JP       V0, $827        ; Jump to V0 + 827
$416    $AC14   LD       I, $C14         ; Load C14 into I
$418    $1F3D   JP       $F3D            ; Jump to F3D
$41A    $CEED   RND      VE, #ED         ; VE = random & ED
$41C    $9ECF   UNKNOWN  $9ECF           ; Unknown 9xxx instruction
$41E    $EBE3   UNKNOWN  $EBE3           ; Unknown Exxx instruction
$420    $6B2A   LD       VB, #2A         ; Load 42 into VB
$422    $A715   LD       I, $715         ; Load 715 into I
$424    $2D55   CALL     $D55            ; Call subroutine at D55
$426    $0749   SYS      $749            ; System call to 749
$428    $3793   SE       V7, #93         ; Skip if V7 == 147
$42A    $F673   UNKNOWN  F673            ; Unknown Fxxx instruction
$42C    $0CD0   SYS      $CD0            ; System call to CD0
$42E    $E392   UNKNOWN  $E392           ; Unknown Exxx instruction
$430    $9A4B   UNKNOWN  $9A4B           ; Unknown 9xxx instruction
$432    $15B9   JP       $5B9            ; Jump to 5B9
$434    $51B8   UNKNOWN  $51B8           ; Unknown 5xxx instruction
$436    $A40A   LD       I, $40A         ; Load 40A into I
$438    $603B   LD       V0, #3B         ; Load 59 into V0
$43A    $3F6E   SE       VF, #6E         ; Skip if VF == 110
$43C    $C8B1   RND      V8, #B1         ; V8 = random & B1
$43E    $A25C   LD       I, $25C         ; Load 25C into I
$440    $5AD2   UNKNOWN  $5AD2           ; Unknown 5xxx instruction
$442    $A8DA   LD       I, $8DA         ; Load 8DA into I
$444    $85B1   OR       V5, VB          ; V5 |= VB
$446    $E65D   UNKNOWN  $E65D           ; Unknown Exxx instruction
$448    $5849   UNKNOWN  $5849           ; Unknown 5xxx instruction
$44A    $30B2   SE       V0, #B2         ; Skip if V0 == 178
$44C    $863D   UNKNOWN  863D            ; Unknown 8xxx instruction
$44E    $164A   JP       $64A            ; Jump to 64A
$450    $39D6   SE       V9, #D6         ; Skip if V9 == 214
$452    $3359   SE       V3, #59         ; Skip if V3 == 89
$454    $D830   DRW      V8, V3, #0      ; Draw 0-byte sprite at V8, V3
$456    $A992   LD       I, $992         ; Load 992 into I
$458    $2DDD   CALL     $DDD            ; Call subroutine at DDD
$45A    $0094   SYS      $094            ; System call to 094
$45C    $4F9B   SNE      VF, #9B         ; Skip if VF != 155
$45E    $3D53   SE       VD, #53         ; Skip if VD == 83
$460    $53B0   SE       V3, VB          ; Skip if V3 == VB
$462    $038D   SYS      $38D            ; System call to 38D
$464    $32F1   SE       V2, #F1         ; Skip if V2 == 241
$466    $3A27   SE       VA, #27         ; Skip if VA == 39
$468    $8DF3   XOR      VD, VF          ; VD ^= VF
$46A    $686F   LD       V8, #6F         ; Load 111 into V8
$46C    $13EC   JP       $3EC            ; Jump to 3EC
$46E    $9C2B   UNKNOWN  $9C2B           ; Unknown 9xxx instruction
$470    $9347   UNKNOWN  $9347           ; Unknown 9xxx instruction
$472    $1A9A   JP       $A9A            ; Jump to A9A
$474    $9AE1   UNKNOWN  $9AE1           ; Unknown 9xxx instruction
$476    $F6CB   UNKNOWN  F6CB            ; Unknown Fxxx instruction
$478    $C6A5   RND      V6, #A5         ; V6 = random & A5
$47A    $0D64   SYS      $D64            ; System call to D64
$47C    $7D76   ADD      VD, #76         ; Add 118 to VD
$47E    $168B   JP       $68B            ; Jump to 68B
$480    $354B   SE       V5, #4B         ; Skip if V5 == 75
$482    $834E   SHL      V3              ; V3 <<= 1, VF = MSB
$484    $CEB8   RND      VE, #B8         ; VE = random & B8
$486    $96BB   UNKNOWN  $96BB           ; Unknown 9xxx instruction
$488    $32B2   SE       V2, #B2         ; Skip if V2 == 178
$48A    $0130   SYS      $130            ; System call to 130
$48C    $6ABF   LD       VA, #BF         ; Load 191 into VA
$48E    $E907   UNKNOWN  $E907           ; Unknown Exxx instruction
$490    $D404   DRW      V4, V0, #4      ; Draw 4-byte sprite at V4, V0
$492    $0BA2   SYS      $BA2            ; System call to BA2
$494    $BB80   JP       V0, $B80        ; Jump to V0 + B80
$496    $503D   UNKNOWN  $503D           ; Unknown 5xxx instruction
$498    $82E2   AND      V2, VE          ; V2 &= VE
$49A    $9CCF   UNKNOWN  $9CCF           ; Unknown 9xxx instruction
$49C    $8EE6   SHR      VE              ; VE >>= 1, VF = LSB
$49E    $7B8B   ADD      VB, #8B         ; Add 139 to VB
$4A0    $D5ED   DRW      V5, VE, #D      ; Draw 13-byte sprite at V5, VE
$4A2    $21D7   CALL     $1D7            ; Call subroutine at 1D7
$4A4    $3CFE   SE       VC, #FE         ; Skip if VC == 254
$4A6    $D444   DRW      V4, V4, #4      ; Draw 4-byte sprite at V4, V4
$4A8    $8642   AND      V6, V4          ; V6 &= V4
$4AA    $66BB   LD       V6, #BB         ; Load 187 into V6
$4AC    $01AA   SYS      $1AA            ; System call to 1AA
$4AE    $51CA   UNKNOWN  $51CA           ; Unknown 5xxx instruction
$4B0    $EE42   UNKNOWN  $EE42           ; Unknown Exxx instruction
$4B2    $54E7   UNKNOWN  $54E7           ; Unknown 5xxx instruction
$4B4    $FF1E   ADD      I, VF           ; I += VF
$4B6    $22E4   CALL     $2E4            ; Call subroutine at 2E4
$4B8    $2913   CALL     $913            ; Call subroutine at 913
$4BA    $7D90   ADD      VD, #90         ; Add 144 to VD
$4BC    $3E1E   SE       VE, #1E         ; Skip if VE == 30
$4BE    $BE57   JP       V0, $E57        ; Jump to V0 + E57
$4C0    $D9B2   DRW      V9, VB, #2      ; Draw 2-byte sprite at V9, VB
$4C2    $5F48   UNKNOWN  $5F48           ; Unknown 5xxx instruction
$4C4    $F6D9   UNKNOWN  F6D9            ; Unknown Fxxx instruction
$4C6    $5392   UNKNOWN  $5392           ; Unknown 5xxx instruction
$4C8    $DB67   DRW      VB, V6, #7      ; Draw 7-byte sprite at VB, V6
$4CA    $404A   SNE      V0, #4A         ; Skip if V0 != 74
$4CC    $3E3C   SE       VE, #3C         ; Skip if VE == 60
$4CE    $3DE7   SE       VD, #E7         ; Skip if VD == 231
$4D0    $5BDD   UNKNOWN  $5BDD           ; Unknown 5xxx instruction
$4D2    $0CEA   SYS      $CEA            ; System call to CEA
$4D4    $70A9   ADD      V0, #A9         ; Add 169 to V0
$4D6    $F516   UNKNOWN  F516            ; Unknown Fxxx instruction
$4D8    $604C   LD       V0, #4C         ; Load 76 into V0
$4DA    $C1D7   RND      V1, #D7         ; V1 = random & D7
$4DC    $94EA   UNKNOWN  $94EA           ; Unknown 9xxx instruction
$4DE    $586A   UNKNOWN  $586A           ; Unknown 5xxx instruction
$4E0    $8A10   LD       VA, V1          ; VA = V1
$4E2    $6B40   LD       VB, #40         ; Load 64 into VB
$4E4    $A13D   LD       I, $13D         ; Load 13D into I
$4E6    $556C   UNKNOWN  $556C           ; Unknown 5xxx instruction
$4E8    $3B4E   SE       VB, #4E         ; Skip if VB == 78
$4EA    $65F9   LD       V5, #F9         ; Load 249 into V5
$4EC    $591B   UNKNOWN  $591B           ; Unknown 5xxx instruction
$4EE    $EEFB   UNKNOWN  $EEFB           ; Unknown Exxx instruction
$4F0    $3777   SE       V7, #77         ; Skip if V7 == 119
$4F2    $A79E   LD       I, $79E         ; Load 79E into I
$4F4    $43C4   SNE      V3, #C4         ; Skip if V3 != 196
$4F6    $BCE0   JP       V0, $CE0        ; Jump to V0 + CE0
$4F8    $6AB4   LD       VA, #B4         ; Load 180 into VA
$4FA    $D13C   DRW      V1, V3, #C      ; Draw 12-byte sprite at V1, V3
$4FC    $42FD   SNE      V2, #FD         ; Skip if V2 != 253
$4FE    $0BAA   SYS      $BAA            ; System call to BAA
$500    $E9C8   UNKNOWN  $E9C8           ; Unknown Exxx instruction
$502    $905D   UNKNOWN  $905D           ; Unknown 9xxx instruction
$504    $CE2A   RND      VE, #2A         ; VE = random & 2A
$506    $3BC5   SE       VB, #C5         ; Skip if VB == 197
$508    $883A   UNKNOWN  883A            ; Unknown 8xxx instruction
$50A    $EEBA   UNKNOWN  $EEBA           ; Unknown Exxx instruction
$50C    $C2BB   RND      V2, #BB         ; V2 = random & BB
$50E    $EEF4   UNKNOWN  $EEF4           ; Unknown Exxx instruction
$510    $A61D   LD       I, $61D         ; Load 61D into I
$512    $E844   UNKNOWN  $E844           ; Unknown Exxx instruction
$514    $750D   ADD      V5, #0D         ; Add 13 to V5
$516    $CDC5   RND      VD, #C5         ; VD = random & C5
$518    $B7B9   JP       V0, $7B9        ; Jump to V0 + 7B9
$51A    $FD00   UNKNOWN  FD00            ; Unknown Fxxx instruction
$51C    $D78A   DRW      V7, V8, #A      ; Draw 10-byte sprite at V7, V8
$51E    $4205   SNE      V2, #05         ; Skip if V2 != 5
$520    $02C7   SYS      $2C7            ; System call to 2C7
$522    $76E0   ADD      V6, #E0         ; Add 224 to V6
$524    $59BD   UNKNOWN  $59BD           ; Unknown 5xxx instruction
$526    $FC1D   UNKNOWN  FC1D            ; Unknown Fxxx instruction
$528    $CC44   RND      VC, #44         ; VC = random & 44
$52A    $B7EB   JP       V0, $7EB        ; Jump to V0 + 7EB
$52C    $4E9D   SNE      VE, #9D         ; Skip if VE != 157
$52E    $7647   ADD      V6, #47         ; Add 71 to V6
$530    $48C0   SNE      V8, #C0         ; Skip if V8 != 192
$532    $EA85   UNKNOWN  $EA85           ; Unknown Exxx instruction
$534    $F524   UNKNOWN  F524            ; Unknown Fxxx instruction
$536    $0066   SYS      $066            ; System call to 066
$538    $84B3   XOR      V4, VB          ; V4 ^= VB
$53A    $955D   UNKNOWN  $955D           ; Unknown 9xxx instruction
$53C    $A1D8   LD       I, $1D8         ; Load 1D8 into I
$53E    $0183   SYS      $183            ; System call to 183
$540    $AD58   LD       I, $D58         ; Load D58 into I
$542    $4E93   SNE      VE, #93         ; Skip if VE != 147
$544    $DA10   DRW      VA, V1, #0      ; Draw 0-byte sprite at VA, V1
$546    $5C97   UNKNOWN  $5C97           ; Unknown 5xxx instruction
$548    $B88C   JP       V0, $88C        ; Jump to V0 + 88C
$54A    $B4CE   JP       V0, $4CE        ; Jump to V0 + 4CE
$54C    $BDDE   JP       V0, $DDE        ; Jump to V0 + DDE
$54E    $ACFA   LD       I, $CFA         ; Load CFA into I
$550    $48FE   SNE      V8, #FE         ; Skip if V8 != 254
$552    $D240   DRW      V2, V4, #0      ; Draw 0-byte sprite at V2, V4
$554    $39E4   SE       V9, #E4         ; Skip if V9 == 228
$556    $B9C9   JP       V0, $9C9        ; Jump to V0 + 9C9
$558    $D115   DRW      V1, V1, #5      ; Draw 5-byte sprite at V1, V1
$55A    $7B7F   ADD      VB, #7F         ; Add 127 to VB
$55C    $EF14   UNKNOWN  $EF14           ; Unknown Exxx instruction
$55E    $F3A9   UNKNOWN  F3A9            ; Unknown Fxxx instruction
$560    $E1BB   UNKNOWN  $E1BB           ; Unknown Exxx instruction
$562    $F3B5   UNKNOWN  F3B5            ; Unknown Fxxx instruction
$564    $E448   UNKNOWN  $E448           ; Unknown Exxx instruction
$566    $2C58   CALL     $C58            ; Call subroutine at C58
$568    $4F17   SNE      VF, #17         ; Skip if VF != 23
$56A    $3599   SE       V5, #99         ; Skip if V5 == 153
$56C    $8A97   SUBN     VA, V9          ; VA = V9 - VA, VF = !borrow
$56E    $39AA   SE       V9, #AA         ; Skip if V9 == 170
$570    $E18C   UNKNOWN  $E18C           ; Unknown Exxx instruction
$572    $FD5B   UNKNOWN  FD5B            ; Unknown Fxxx instruction
$574    $B9C8   JP       V0, $9C8        ; Jump to V0 + 9C8
$576    $4111   SNE      V1, #11         ; Skip if V1 != 17
$578    $3153   SE       V1, #53         ; Skip if V1 == 83
$57A    $8C40   LD       VC, V4          ; VC = V4
$57C    $8753   XOR      V7, V5          ; V7 ^= V5
$57E    $3AD3   SE       VA, #D3         ; Skip if VA == 211
$580    $AA7F   LD       I, $A7F         ; Load A7F into I
$582    $0F7A   SYS      $F7A            ; System call to F7A
$584    $08F5   SYS      $8F5            ; System call to 8F5
$586    $0DCE   SYS      $DCE            ; System call to DCE
$588    $DA7D   DRW      VA, V7, #D      ; Draw 13-byte sprite at VA, V7
$58A    $FCCC   UNKNOWN  FCCC            ; Unknown Fxxx instruction
$58C    $491A   SNE      V9, #1A         ; Skip if V9 != 26
$58E    $A40A   LD       I, $40A         ; Load 40A into I
$590    $F9F4   UNKNOWN  F9F4            ; Unknown Fxxx instruction
$592    $20F4   CALL     $0F4            ; Call subroutine at 0F4
$594    $50D0   SE       V0, VD          ; Skip if V0 == VD
$596    $DD76   DRW      VD, V7, #6      ; Draw 6-byte sprite at VD, V7
$598    $7D8F   ADD      VD, #8F         ; Add 143 to VD
$59A    $CC29   RND      VC, #29         ; VC = random & 29
$59C    $1D2C   JP       $D2C            ; Jump to D2C
$59E    $6AE3   LD       VA, #E3         ; Load 227 into VA
$5A0    $29C9   CALL     $9C9            ; Call subroutine at 9C9
$5A2    $8174   ADD      V1, V7          ; V1 += V7, VF = carry
$5A4    $1764   JP       $764            ; Jump to 764
$5A6    $E9DE   UNKNOWN  $E9DE           ; Unknown Exxx instruction
$5A8    $E3B8   UNKNOWN  $E3B8           ; Unknown Exxx instruction
$5AA    $99F8   UNKNOWN  $99F8           ; Unknown 9xxx instruction
$5AC    $28A7   CALL     $8A7            ; Call subroutine at 8A7
$5AE    $65C4   LD       V5, #C4         ; Load 196 into V5
$5B0    $2018   CALL     $018            ; Call subroutine at 018
$5B2    $306C   SE       V0, #6C         ; Skip if V0 == 108
$5B4    $4A2D   SNE      VA, #2D         ; Skip if VA != 45
$5B6    $9A83   UNKNOWN  $9A83           ; Unknown 9xxx instruction
$5B8    $046D   SYS      $46D            ; System call to 46D
$5BA    $62AF   LD       V2, #AF         ; Load 175 into V2
$5BC    $0CF9   SYS      $CF9            ; System call to CF9
$5BE    $5B18   UNKNOWN  $5B18           ; Unknown 5xxx instruction
$5C0    $3CA7   SE       VC, #A7         ; Skip if VC == 167
$5C2    $0EC0   SYS      $EC0            ; System call to EC0
$5C4    $181C   JP       $81C            ; Jump to 81C
$5C6    $A167   LD       I, $167         ; Load 167 into I
$5C8    $D87E   DRW      V8, V7, #E      ; Draw 14-byte sprite at V8, V7
$5CA    $EA06   UNKNOWN  $EA06           ; Unknown Exxx instruction
$5CC    $BF7B   JP       V0, $F7B        ; Jump to V0 + F7B
$5CE    $E4DB   UNKNOWN  $E4DB           ; Unknown Exxx instruction
$5D0    $989D   UNKNOWN  $989D           ; Unknown 9xxx instruction
$5D2    $DA82   DRW      VA, V8, #2      ; Draw 2-byte sprite at VA, V8
$5D4    $B126   JP       V0, $126        ; Jump to V0 + 126
$5D6    $74FF   ADD      V4, #FF         ; Add 255 to V4
$5D8    $3349   SE       V3, #49         ; Skip if V3 == 73
$5DA    $FD44   UNKNOWN  FD44            ; Unknown Fxxx instruction
$5DC    $5982   UNKNOWN  $5982           ; Unknown 5xxx instruction
$5DE    $139E   JP       $39E            ; Jump to 39E
$5E0    $5C95   UNKNOWN  $5C95           ; Unknown 5xxx instruction
$5E2    $38E9   SE       V8, #E9         ; Skip if V8 == 233
$5E4    $248A   CALL     $48A            ; Call subroutine at 48A
$5E6    $A65F   LD       I, $65F         ; Load 65F into I
$5E8    $8575   SUB      V5, V7          ; V5 -= V7, VF = !borrow
$5EA    $37DF   SE       V7, #DF         ; Skip if V7 == 223
$5EC    $889A   UNKNOWN  889A            ; Unknown 8xxx instruction
$5EE    $B3F7   JP       V0, $3F7        ; Jump to V0 + 3F7
$5F0    $571B   UNKNOWN  $571B           ; Unknown 5xxx instruction
$5F2    $27C7   CALL     $7C7            ; Call subroutine at 7C7
$5F4    $6AE1   LD       VA, #E1         ; Load 225 into VA
$5F6    $26B6   CALL     $6B6            ; Call subroutine at 6B6
$5F8    $B104   JP       V0, $104        ; Jump to V0 + 104
$5FA    $42EC   SNE      V2, #EC         ; Skip if V2 != 236
$5FC    $3161   SE       V1, #61         ; Skip if V1 == 97
$5FE    $D355   DRW      V3, V5, #5      ; Draw 5-byte sprite at V3, V5
$600    $2AC1   CALL     $AC1            ; Call subroutine at AC1
$602    $278A   CALL     $78A            ; Call subroutine at 78A
$604    $2256   CALL     $256            ; Call subroutine at 256
$606    $6B64   LD       VB, #64         ; Load 100 into VB
$608    $965D   UNKNOWN  $965D           ; Unknown 9xxx instruction
$60A    $AB11   LD       I, $B11         ; Load B11 into I
$60C    $0D3F   SYS      $D3F            ; System call to D3F
$60E    $F702   UNKNOWN  F702            ; Unknown Fxxx instruction
$610    $2B41   CALL     $B41            ; Call subroutine at B41
$612    $7023   ADD      V0, #23         ; Add 35 to V0
$614    $EE06   UNKNOWN  $EE06           ; Unknown Exxx instruction
$616    $852B   UNKNOWN  852B            ; Unknown 8xxx instruction
$618    $DFB1   DRW      VF, VB, #1      ; Draw 1-byte sprite at VF, VB
$61A    $CEB4   RND      VE, #B4         ; VE = random & B4
$61C    $4953   SNE      V9, #53         ; Skip if V9 != 83
$61E    $E1AA   UNKNOWN  $E1AA           ; Unknown Exxx instruction
$620    $8F42   AND      VF, V4          ; VF &= V4
$622    $1AB8   JP       $AB8            ; Jump to AB8
$624    $AF6D   LD       I, $F6D         ; Load F6D into I
$626    $2C76   CALL     $C76            ; Call subroutine at C76
$628    $A2EE   LD       I, $2EE         ; Load 2EE into I
$62A    $3707   SE       V7, #07         ; Skip if V7 == 7
$62C    $12B4   JP       $2B4            ; Jump to 2B4
$62E    $E824   UNKNOWN  $E824           ; Unknown Exxx instruction
$630    $475C   SNE      V7, #5C         ; Skip if V7 != 92
$632    $7774   ADD      V7, #74         ; Add 116 to V7
$634    $11EB   JP       $1EB            ; Jump to 1EB
$636    $9172   UNKNOWN  $9172           ; Unknown 9xxx instruction
$638    $1636   JP       $636            ; Jump to 636
$63A    $0D16   SYS      $D16            ; System call to D16
$63C    $1A36   JP       $A36            ; Jump to A36
$63E    $64AF   LD       V4, #AF         ; Load 175 into V4
$640    $69A4   LD       V9, #A4         ; Load 164 into V9
$642    $86C8   UNKNOWN  86C8            ; Unknown 8xxx instruction
$644    $A3D8   LD       I, $3D8         ; Load 3D8 into I
$646    $F9BD   UNKNOWN  F9BD            ; Unknown Fxxx instruction
$648    $BF4E   JP       V0, $F4E        ; Jump to V0 + F4E
$64A    $93A5   UNKNOWN  $93A5           ; Unknown 9xxx instruction
$64C    $1195   JP       $195            ; Jump to 195
$64E    $6074   LD       V0, #74         ; Load 116 into V0
$650    $AB14   LD       I, $B14         ; Load B14 into I
$652    $376B   SE       V7, #6B         ; Skip if V7 == 107
$654    $3C18   SE       VC, #18         ; Skip if VC == 24
$656    $3DBE   SE       VD, #BE         ; Skip if VD == 190
$658    $C42D   RND      V4, #2D         ; V4 = random & 2D
$65A    $0D65   SYS      $D65            ; System call to D65
$65C    $23C1   CALL     $3C1            ; Call subroutine at 3C1
$65E    $B0B1   JP       V0, $0B1        ; Jump to V0 + 0B1
$660    $DC6C   DRW      VC, V6, #C      ; Draw 12-byte sprite at VC, V6
$662    $FBB9   UNKNOWN  FBB9            ; Unknown Fxxx instruction
$664    $5569   UNKNOWN  $5569           ; Unknown 5xxx instruction
$666    $28B5   CALL     $8B5            ; Call subroutine at 8B5
$668    $C1B2   RND      V1, #B2         ; V1 = random & B2
$66A    $98DC   UNKNOWN  $98DC           ; Unknown 9xxx instruction
$66C    $47B9   SNE      V7, #B9         ; Skip if V7 != 185
$66E    $821E   SHL      V2              ; V2 <<= 1, VF = MSB
$670    $89F4   ADD      V9, VF          ; V9 += VF, VF = carry
$672    $6596   LD       V5, #96         ; Load 150 into V5
$674    $87F8   UNKNOWN  87F8            ; Unknown 8xxx instruction
$676    $C91D   RND      V9, #1D         ; V9 = random & 1D
$678    $A78D   LD       I, $78D         ; Load 78D into I
$67A    $F910   UNKNOWN  F910            ; Unknown Fxxx instruction
$67C    $4DA9   SNE      VD, #A9         ; Skip if VD != 169
$67E    $D4C2   DRW      V4, VC, #2      ; Draw 2-byte sprite at V4, VC
$680    $166B   JP       $66B            ; Jump to 66B
$682    $A95F   LD       I, $95F         ; Load 95F into I
$684    $3F6E   SE       VF, #6E         ; Skip if VF == 110
$686    $3C4B   SE       VC, #4B         ; Skip if VC == 75
$688    $F8DA   UNKNOWN  F8DA            ; Unknown Fxxx instruction
$68A    $937E   UNKNOWN  $937E           ; Unknown 9xxx instruction
$68C    $4D8A   SNE      VD, #8A         ; Skip if VD != 138
$68E    $998B   UNKNOWN  $998B           ; Unknown 9xxx instruction
$690    $6A78   LD       VA, #78         ; Load 120 into VA
$692    $4172   SNE      V1, #72         ; Skip if V1 != 114
$694    $9CEE   UNKNOWN  $9CEE           ; Unknown 9xxx instruction
$696    $C8A4   RND      V8, #A4         ; V8 = random & A4
$698    $8650   LD       V6, V5          ; V6 = V5
$69A    $2884   CALL     $884            ; Call subroutine at 884
$69C    $1CE8   JP       $CE8            ; Jump to CE8
$69E    $1D10   JP       $D10            ; Jump to D10
$6A0    $99D2   UNKNOWN  $99D2           ; Unknown 9xxx instruction
$6A2    $6E58   LD       VE, #58         ; Load 88 into VE
$6A4    $36EB   SE       V6, #EB         ; Skip if V6 == 235
$6A6    $CEA1   RND      VE, #A1         ; VE = random & A1
$6A8    $0C37   SYS      $C37            ; System call to C37
$6AA    $BE07   JP       V0, $E07        ; Jump to V0 + E07
$6AC    $5AF6   UNKNOWN  $5AF6           ; Unknown 5xxx instruction
$6AE    $D603   DRW      V6, V0, #3      ; Draw 3-byte sprite at V6, V0
$6B0    $6E1B   LD       VE, #1B         ; Load 27 into VE
$6B2    $A77D   LD       I, $77D         ; Load 77D into I
$6B4    $48F6   SNE      V8, #F6         ; Skip if V8 != 246
$6B6    $F36E   UNKNOWN  F36E            ; Unknown Fxxx instruction
$6B8    $8094   ADD      V0, V9          ; V0 += V9, VF = carry
$6BA    $D134   DRW      V1, V3, #4      ; Draw 4-byte sprite at V1, V3
$6BC    $0B0F   SYS      $B0F            ; System call to B0F
$6BE    $458C   SNE      V5, #8C         ; Skip if V5 != 140
$6C0    $9E68   UNKNOWN  $9E68           ; Unknown 9xxx instruction
$6C2    $4CAC   SNE      VC, #AC         ; Skip if VC != 172
$6C4    $2E5F   CALL     $E5F            ; Call subroutine at E5F
$6C6    $8956   SHR      V9              ; V9 >>= 1, VF = LSB
$6C8    $C932   RND      V9, #32         ; V9 = random & 32
$6CA    $35A8   SE       V5, #A8         ; Skip if V5 == 168
$6CC    $895D   UNKNOWN  895D            ; Unknown 8xxx instruction
$6CE    $96C8   UNKNOWN  $96C8           ; Unknown 9xxx instruction
$6D0    $FCBD   UNKNOWN  FCBD            ; Unknown Fxxx instruction
$6D2    $6F29   LD       VF, #29         ; Load 41 into VF
$6D4    $2272   CALL     $272            ; Call subroutine at 272
$6D6    $E9A7   UNKNOWN  $E9A7           ; Unknown Exxx instruction
$6D8    $7093   ADD      V0, #93         ; Add 147 to V0
$6DA    $99ED   UNKNOWN  $99ED           ; Unknown 9xxx instruction
$6DC    $CCFA   RND      VC, #FA         ; VC = random & FA
$6DE    $8454   ADD      V4, V5          ; V4 += V5, VF = carry
$6E0    $2103   CALL     $103            ; Call subroutine at 103
$6E2    $5A6E   UNKNOWN  $5A6E           ; Unknown 5xxx instruction
$6E4    $1EC4   JP       $EC4            ; Jump to EC4
$6E6    $2572   CALL     $572            ; Call subroutine at 572
$6E8    $AEB9   LD       I, $EB9         ; Load EB9 into I
$6EA    $7D1E   ADD      VD, #1E         ; Add 30 to VD
$6EC    $BDDF   JP       V0, $DDF        ; Jump to V0 + DDF
$6EE    $8394   ADD      V3, V9          ; V3 += V9, VF = carry
$6F0    $86EA   UNKNOWN  86EA            ; Unknown 8xxx instruction
$6F2    $4B60   SNE      VB, #60         ; Skip if VB != 96
$6F4    $E7D1   UNKNOWN  $E7D1           ; Unknown Exxx instruction
$6F6    $C72A   RND      V7, #2A         ; V7 = random & 2A
$6F8    $6985   LD       V9, #85         ; Load 133 into V9
$6FA    $8D92   AND      VD, V9          ; VD &= V9
$6FC    $31EE   SE       V1, #EE         ; Skip if V1 == 238
$6FE    $FD0E   UNKNOWN  FD0E            ; Unknown Fxxx instruction
$700    $3033   SE       V0, #33         ; Skip if V0 == 51
$702    $1CAD   JP       $CAD            ; Jump to CAD
$704    $EF14   UNKNOWN  $EF14           ; Unknown Exxx instruction
$706    $C688   RND      V6, #88         ; V6 = random & 88
$708    $5EE1   UNKNOWN  $5EE1           ; Unknown 5xxx instruction
$70A    $F47A   UNKNOWN  F47A            ; Unknown Fxxx instruction
$70C    $3534   SE       V5, #34         ; Skip if V5 == 52
$70E    $C9EC   RND      V9, #EC         ; V9 = random & EC
$710    $CF69   RND      VF, #69         ; VF = random & 69
$712    $DE30   DRW      VE, V3, #0      ; Draw 0-byte sprite at VE, V3
$714    $666D   LD       V6, #6D         ; Load 109 into V6
$716    $0229   SYS      $229            ; System call to 229
$718    $6629   LD       V6, #29         ; Load 41 into V6
$71A    $1BAA   JP       $BAA            ; Jump to BAA
$71C    $D2B3   DRW      V2, VB, #3      ; Draw 3-byte sprite at V2, VB
$71E    $F285   UNKNOWN  F285            ; Unknown Fxxx instruction
$720    $1FF0   JP       $FF0            ; Jump to FF0
$722    $BE7C   JP       V0, $E7C        ; Jump to V0 + E7C
$724    $7A8B   ADD      VA, #8B         ; Add 139 to VA
$726    $4458   SNE      V4, #58         ; Skip if V4 != 88
$728    $6794   LD       V7, #94         ; Load 148 into V7
$72A    $9445   UNKNOWN  $9445           ; Unknown 9xxx instruction
$72C    $2858   CALL     $858            ; Call subroutine at 858
$72E    $FB61   UNKNOWN  FB61            ; Unknown Fxxx instruction
$730    $B567   JP       V0, $567        ; Jump to V0 + 567
$732    $5C12   UNKNOWN  $5C12           ; Unknown 5xxx instruction
$734    $BFE3   JP       V0, $FE3        ; Jump to V0 + FE3
$736    $7B9C   ADD      VB, #9C         ; Add 156 to VB
$738    $E74E   UNKNOWN  $E74E           ; Unknown Exxx instruction
$73A    $7A1A   ADD      VA, #1A         ; Add 26 to VA
$73C    $02F6   SYS      $2F6            ; System call to 2F6
$73E    $05C7   SYS      $5C7            ; System call to 5C7
$740    $36ED   SE       V6, #ED         ; Skip if V6 == 237
$742    $5CF9   UNKNOWN  $5CF9           ; Unknown 5xxx instruction
$744    $3EE4   SE       VE, #E4         ; Skip if VE == 228
$746    $1F66   JP       $F66            ; Jump to F66
$748    $61B9   LD       V1, #B9         ; Load 185 into V1
$74A    $EF5F   UNKNOWN  $EF5F           ; Unknown Exxx instruction
$74C    $0340   SYS      $340            ; System call to 340
$74E    $E522   UNKNOWN  $E522           ; Unknown Exxx instruction
$750    $216B   CALL     $16B            ; Call subroutine at 16B
$752    $A628   LD       I, $628         ; Load 628 into I
$754    $604F   LD       V0, #4F         ; Load 79 into V0
$756    $2512   CALL     $512            ; Call subroutine at 512
$758    $61A6   LD       V1, #A6         ; Load 166 into V1
$75A    $70F5   ADD      V0, #F5         ; Add 245 to V0
$75C    $AF0F   LD       I, $F0F         ; Load F0F into I
$75E    $C619   RND      V6, #19         ; V6 = random & 19
$760    $4738   SNE      V7, #38         ; Skip if V7 != 56
$762    $36F5   SE       V6, #F5         ; Skip if V6 == 245
$764    $F7FF   UNKNOWN  F7FF            ; Unknown Fxxx instruction
$766    $ACFA   LD       I, $CFA         ; Load CFA into I
$768    $996D   UNKNOWN  $996D           ; Unknown 9xxx instruction
$76A    $E8BB   UNKNOWN  $E8BB           ; Unknown Exxx instruction
$76C    $46D6   SNE      V6, #D6         ; Skip if V6 != 214
$76E    $C7DE   RND      V7, #DE         ; V7 = random & DE
$770    $7A85   ADD      VA, #85         ; Add 133 to VA
$772    $94CE   UNKNOWN  $94CE           ; Unknown 9xxx instruction
$774    $6D0B   LD       VD, #0B         ; Load 11 into VD
$776    $A2BB   LD       I, $2BB         ; Load 2BB into I
$778    $655F   LD       V5, #5F         ; Load 95 into V5
$77A    $F2F6   UNKNOWN  F2F6            ; Unknown Fxxx instruction
$77C    $DD10   DRW      VD, V1, #0      ; Draw 0-byte sprite at VD, V1
$77E    $0D70   SYS      $D70            ; System call to D70
$780    $B7CF   JP       V0, $7CF        ; Jump to V0 + 7CF
$782    $9EE1   UNKNOWN  $9EE1           ; Unknown 9xxx instruction
$784    $4072   SNE      V0, #72         ; Skip if V0 != 114
$786    $68F7   LD       V8, #F7         ; Load 247 into V8
$788    $9F36   UNKNOWN  $9F36           ; Unknown 9xxx instruction
$78A    $692C   LD       V9, #2C         ; Load 44 into V9
$78C    $CE4C   RND      VE, #4C         ; VE = random & 4C
$78E    $01C4   SYS      $1C4            ; System call to 1C4
$790    $0D72   SYS      $D72            ; System call to D72
$792    $3DEC   SE       VD, #EC         ; Skip if VD == 236
$794    $CE93   RND      VE, #93         ; VE = random & 93
$796    $C17A   RND      V1, #7A         ; V1 = random & 7A
$798    $983E   UNKNOWN  $983E           ; Unknown 9xxx instruction
$79A    $4FDF   SNE      VF, #DF         ; Skip if VF != 223
$79C    $E3E1   UNKNOWN  $E3E1           ; Unknown Exxx instruction
$79E    $90B9   UNKNOWN  $90B9           ; Unknown 9xxx instruction
$7A0    $C5F9   RND      V5, #F9         ; V5 = random & F9
$7A2    $F8D6   UNKNOWN  F8D6            ; Unknown Fxxx instruction
$7A4    $99FC   UNKNOWN  $99FC           ; Unknown 9xxx instruction
$7A6    $54DF   UNKNOWN  $54DF           ; Unknown 5xxx instruction
$7A8    $739C   ADD      V3, #9C         ; Add 156 to V3
$7AA    $1FDC   JP       $FDC            ; Jump to FDC
$7AC    $C48C   RND      V4, #8C         ; V4 = random & 8C
$7AE    $A897   LD       I, $897         ; Load 897 into I
$7B0    $68D2   LD       V8, #D2         ; Load 210 into V8
$7B2    $9F07   UNKNOWN  $9F07           ; Unknown 9xxx instruction
$7B4    $F65D   UNKNOWN  F65D            ; Unknown Fxxx instruction
$7B6    $D007   DRW      V0, V0, #7      ; Draw 7-byte sprite at V0, V0
$7B8    $F30C   UNKNOWN  F30C            ; Unknown Fxxx instruction
$7BA    $1978   JP       $978            ; Jump to 978
$7BC    $399A   SE       V9, #9A         ; Skip if V9 == 154
$7BE    $DE92   DRW      VE, V9, #2      ; Draw 2-byte sprite at VE, V9
$7C0    $B9DE   JP       V0, $9DE        ; Jump to V0 + 9DE
$7C2    $61A7   LD       V1, #A7         ; Load 167 into V1
$7C4    $C725   RND      V7, #25         ; V7 = random & 25
$7C6    $811C   UNKNOWN  811C            ; Unknown 8xxx instruction
$7C8    $F6CC   UNKNOWN  F6CC            ; Unknown Fxxx instruction
$7CA    $5489   UNKNOWN  $5489           ; Unknown 5xxx instruction
$7CC    $6F29   LD       VF, #29         ; Load 41 into VF
$7CE    $3092   SE       V0, #92         ; Skip if V0 == 146
$7D0    $B6DD   JP       V0, $6DD        ; Jump to V0 + 6DD
$7D2    $112F   JP       $12F            ; Jump to 12F
$7D4    $CBB4   RND      VB, #B4         ; VB = random & B4
$7D6    $C769   RND      V7, #69         ; V7 = random & 69
$7D8    $4144   SNE      V1, #44         ; Skip if V1 != 68
$7DA    $DCD9   DRW      VC, VD, #9      ; Draw 9-byte sprite at VC, VD
$7DC    $F31E   ADD      I, V3           ; I += V3
$7DE    $8D30   LD       VD, V3          ; VD = V3
$7E0    $3C0D   SE       VC, #0D         ; Skip if VC == 13
$7E2    $D9C1   DRW      V9, VC, #1      ; Draw 1-byte sprite at V9, VC
$7E4    $4C2E   SNE      VC, #2E         ; Skip if VC != 46
$7E6    $0DFD   SYS      $DFD            ; System call to DFD
$7E8    $B41A   JP       V0, $41A        ; Jump to V0 + 41A
$7EA    $11E2   JP       $1E2            ; Jump to 1E2
$7EC    $3608   SE       V6, #08         ; Skip if V6 == 8
$7EE    $99E0   SNE      V9, VE          ; Skip if V9 != VE
$7F0    $C314   RND      V3, #14         ; V3 = random & 14
$7F2    $BAA7   JP       V0, $AA7        ; Jump to V0 + AA7
$7F4    $A565   LD       I, $565         ; Load 565 into I
$7F6    $1F87   JP       $F87            ; Jump to F87
$7F8    $7EDC   ADD      VE, #DC         ; Add 220 to VE
$7FA    $845B   UNKNOWN  845B            ; Unknown 8xxx instruction
$7FC    $5A21   UNKNOWN  $5A21           ; Unknown 5xxx instruction
$7FE    $0847   SYS      $847            ; System call to 847
$800    $7D51   ADD      VD, #51         ; Add 81 to VD
$802    $BF36   JP       V0, $F36        ; Jump to V0 + F36
$804    $BCAD   JP       V0, $CAD        ; Jump to V0 + CAD
$806    $6E20   LD       VE, #20         ; Load 32 into VE
$808    $3109   SE       V1, #09         ; Skip if V1 == 9
$80A    $BF60   JP       V0, $F60        ; Jump to V0 + F60
$80C    $8BF2   AND      VB, VF          ; VB &= VF
$80E    $399E   SE       V9, #9E         ; Skip if V9 == 158
$810    $3EBC   SE       VE, #BC         ; Skip if VE == 188
$812    $AC1E   LD       I, $C1E         ; Load C1E into I
$814    $79F1   ADD      V9, #F1         ; Add 241 to V9
$816    $94B1   UNKNOWN  $94B1           ; Unknown 9xxx instruction
$818    $296D   CALL     $96D            ; Call subroutine at 96D
$81A    $6116   LD       V1, #16         ; Load 22 into V1
$81C    $B6EA   JP       V0, $6EA        ; Jump to V0 + 6EA
$81E    $EF84   UNKNOWN  $EF84           ; Unknown Exxx instruction
$820    $CA54   RND      VA, #54         ; VA = random & 54
$822    $0400   SYS      $400            ; System call to 400
$824    $4B53   SNE      VB, #53         ; Skip if VB != 83
$826    $F15F   UNKNOWN  F15F            ; Unknown Fxxx instruction
$828    $6251   LD       V2, #51         ; Load 81 into V2
$82A    $E523   UNKNOWN  $E523           ; Unknown Exxx instruction
$82C    $B47A   JP       V0, $47A        ; Jump to V0 + 47A
$82E    $F6ED   UNKNOWN  F6ED            ; Unknown Fxxx instruction
$830    $ECFD   UNKNOWN  $ECFD           ; Unknown Exxx instruction
$832    $48F0   SNE      V8, #F0         ; Skip if V8 != 240
$834    $58D0   SE       V8, VD          ; Skip if V8 == VD
$836    $A0CE   LD       I, $0CE         ; Load 0CE into I
$838    $48F0   SNE      V8, #F0         ; Skip if V8 != 240
$83A    $F509   UNKNOWN  F509            ; Unknown Fxxx instruction
$83C    $E368   UNKNOWN  $E368           ; Unknown Exxx instruction
$83E    $5653   UNKNOWN  $5653           ; Unknown 5xxx instruction
$840    $64A0   LD       V4, #A0         ; Load 160 into V4
$842    $3625   SE       V6, #25         ; Skip if V6 == 37
$844    $0A9B   SYS      $A9B            ; System call to A9B
$846    $9810   SNE      V8, V1          ; Skip if V8 != V1
$848    $F8A0   UNKNOWN  F8A0            ; Unknown Fxxx instruction
$84A    $3B48   SE       VB, #48         ; Skip if VB == 72
$84C    $8E0F   UNKNOWN  8E0F            ; Unknown 8xxx instruction
$84E    $3E73   SE       VE, #73         ; Skip if VE == 115
$850    $3971   SE       V9, #71         ; Skip if V9 == 113
$852    $6927   LD       V9, #27         ; Load 39 into V9
$854    $BDC9   JP       V0, $DC9        ; Jump to V0 + DC9
$856    $8226   SHR      V2              ; V2 >>= 1, VF = LSB
$858    $763B   ADD      V6, #3B         ; Add 59 to V6
$85A    $2A4F   CALL     $A4F            ; Call subroutine at A4F
$85C    $F50B   UNKNOWN  F50B            ; Unknown Fxxx instruction
$85E    $B9FB   JP       V0, $9FB        ; Jump to V0 + 9FB
$860    $2574   CALL     $574            ; Call subroutine at 574
$862    $556E   UNKNOWN  $556E           ; Unknown 5xxx instruction
$864    $48EE   SNE      V8, #EE         ; Skip if V8 != 238
$866    $FCB5   UNKNOWN  FCB5            ; Unknown Fxxx instruction
$868    $1831   JP       $831            ; Jump to 831
$86A    $7C41   ADD      VC, #41         ; Add 65 to VC
$86C    $ED6C   UNKNOWN  $ED6C           ; Unknown Exxx instruction
$86E    $4F39   SNE      VF, #39         ; Skip if VF != 57
$870    $7370   ADD      V3, #70         ; Add 112 to V3
$872    $8B95   SUB      VB, V9          ; VB -= V9, VF = !borrow
$874    $9A68   UNKNOWN  $9A68           ; Unknown 9xxx instruction
$876    $2B62   CALL     $B62            ; Call subroutine at B62
$878    $A070   LD       I, $070         ; Load 070 into I
$87A    $34C5   SE       V4, #C5         ; Skip if V4 == 197
$87C    $1382   JP       $382            ; Jump to 382
$87E    $9905   UNKNOWN  $9905           ; Unknown 9xxx instruction
$880    $ED9D   UNKNOWN  $ED9D           ; Unknown Exxx instruction
$882    $F2C1   UNKNOWN  F2C1            ; Unknown Fxxx instruction
$884    $1266   JP       $266            ; Jump to 266
$886    $F520   UNKNOWN  F520            ; Unknown Fxxx instruction
$888    $2FB2   CALL     $FB2            ; Call subroutine at FB2
$88A    $EF62   UNKNOWN  $EF62           ; Unknown Exxx instruction
$88C    $F3C8   UNKNOWN  F3C8            ; Unknown Fxxx instruction
$88E    $A912   LD       I, $912         ; Load 912 into I
$890    $A74D   LD       I, $74D         ; Load 74D into I
$892    $B0C4   JP       V0, $0C4        ; Jump to V0 + 0C4
$894    $CC51   RND      VC, #51         ; VC = random & 51
$896    $6723   LD       V7, #23         ; Load 35 into V7
$898    $B66B   JP       V0, $66B        ; Jump to V0 + 66B
$89A    $661D   LD       V6, #1D         ; Load 29 into V6
$89C    $E97E   UNKNOWN  $E97E           ; Unknown Exxx instruction
$89E    $D83B   DRW      V8, V3, #B      ; Draw 11-byte sprite at V8, V3
$8A0    $A8BB   LD       I, $8BB         ; Load 8BB into I
$8A2    $ADF4   LD       I, $DF4         ; Load DF4 into I
$8A4    $218E   CALL     $18E            ; Call subroutine at 18E
$8A6    $96EF   UNKNOWN  $96EF           ; Unknown 9xxx instruction
$8A8    $B46D   JP       V0, $46D        ; Jump to V0 + 46D
$8AA    $389F   SE       V8, #9F         ; Skip if V8 == 159
$8AC    $A217   LD       I, $217         ; Load 217 into I
$8AE    $B942   JP       V0, $942        ; Jump to V0 + 942
$8B0    $BA4A   JP       V0, $A4A        ; Jump to V0 + A4A
$8B2    $4B68   SNE      VB, #68         ; Skip if VB != 104
$8B4    $D539   DRW      V5, V3, #9      ; Draw 9-byte sprite at V5, V3
$8B6    $F10E   UNKNOWN  F10E            ; Unknown Fxxx instruction
$8B8    $ED2D   UNKNOWN  $ED2D           ; Unknown Exxx instruction
$8BA    $350E   SE       V5, #0E         ; Skip if V5 == 14
$8BC    $895C   UNKNOWN  895C            ; Unknown 8xxx instruction
$8BE    $637C   LD       V3, #7C         ; Load 124 into V3
$8C0    $9E96   UNKNOWN  $9E96           ; Unknown 9xxx instruction
$8C2    $E003   UNKNOWN  $E003           ; Unknown Exxx instruction
$8C4    $E85F   UNKNOWN  $E85F           ; Unknown Exxx instruction
$8C6    $347D   SE       V4, #7D         ; Skip if V4 == 125
$8C8    $DEA9   DRW      VE, VA, #9      ; Draw 9-byte sprite at VE, VA
$8CA    $5B45   UNKNOWN  $5B45           ; Unknown 5xxx instruction
$8CC    $9302   UNKNOWN  $9302           ; Unknown 9xxx instruction
$8CE    $C5AF   RND      V5, #AF         ; V5 = random & AF
$8D0    $73BE   ADD      V3, #BE         ; Add 190 to V3
$8D2    $EF58   UNKNOWN  $EF58           ; Unknown Exxx instruction
$8D4    $08D5   SYS      $8D5            ; System call to 8D5
$8D6    $EFBD   UNKNOWN  $EFBD           ; Unknown Exxx instruction
$8D8    $ADB5   LD       I, $DB5         ; Load DB5 into I
$8DA    $0E42   SYS      $E42            ; System call to E42
$8DC    $1AB5   JP       $AB5            ; Jump to AB5
$8DE    $AFF2   LD       I, $FF2         ; Load FF2 into I
$8E0    $0DDE   SYS      $DDE            ; System call to DDE
$8E2    $AFCB   LD       I, $FCB         ; Load FCB into I
$8E4    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$8E6    $E794   UNKNOWN  $E794           ; Unknown Exxx instruction
$8E8    $A2CE   LD       I, $2CE         ; Load 2CE into I
$8EA    $6BF6   LD       VB, #F6         ; Load 246 into VB
$8EC    $AC3A   LD       I, $C3A         ; Load C3A into I
$8EE    $FAAD   UNKNOWN  FAAD            ; Unknown Fxxx instruction
$8F0    $6E45   LD       VE, #45         ; Load 69 into VE
$8F2    $AB04   LD       I, $B04         ; Load B04 into I
$8F4    $A6CF   LD       I, $6CF         ; Load 6CF into I
$8F6    $65B3   LD       V5, #B3         ; Load 179 into V5
$8F8    $3460   SE       V4, #60         ; Skip if V4 == 96
$8FA    $75D5   ADD      V5, #D5         ; Add 213 to V5
$8FC    $232F   CALL     $32F            ; Call subroutine at 32F
$8FE    $C250   RND      V2, #50         ; V2 = random & 50
$900    $43DE   SNE      V3, #DE         ; Skip if V3 != 222
$902    $D958   DRW      V9, V5, #8      ; Draw 8-byte sprite at V9, V5
$904    $9840   SNE      V8, V4          ; Skip if V8 != V4
$906    $67EB   LD       V7, #EB         ; Load 235 into V7
$908    $852F   UNKNOWN  852F            ; Unknown 8xxx instruction
$90A    $DD43   DRW      VD, V4, #3      ; Draw 3-byte sprite at VD, V4
$90C    $6E43   LD       VE, #43         ; Load 67 into VE
$90E    $0306   SYS      $306            ; System call to 306
$910    $39AF   SE       V9, #AF         ; Skip if V9 == 175
$912    $ABD6   LD       I, $BD6         ; Load BD6 into I
$914    $09C4   SYS      $9C4            ; System call to 9C4
$916    $AC1C   LD       I, $C1C         ; Load C1C into I
$918    $40DC   SNE      V0, #DC         ; Skip if V0 != 220
$91A    $CAE8   RND      VA, #E8         ; VA = random & E8
$91C    $C4A3   RND      V4, #A3         ; V4 = random & A3
$91E    $8F1E   SHL      VF              ; VF <<= 1, VF = MSB
$920    $419A   SNE      V1, #9A         ; Skip if V1 != 154
$922    $AB0A   LD       I, $B0A         ; Load B0A into I
$924    $28EE   CALL     $8EE            ; Call subroutine at 8EE
$926    $73E4   ADD      V3, #E4         ; Add 228 to V3
$928    $47F2   SNE      V7, #F2         ; Skip if V7 != 242
$92A    $426D   SNE      V2, #6D         ; Skip if V2 != 109
$92C    $F915   LD       DT, V9          ; Delay timer = V9
$92E    $E360   UNKNOWN  $E360           ; Unknown Exxx instruction
$930    $BA8F   JP       V0, $A8F        ; Jump to V0 + A8F
$932    $7DEF   ADD      VD, #EF         ; Add 239 to VD
$934    $C1A8   RND      V1, #A8         ; V1 = random & A8
$936    $3DA7   SE       VD, #A7         ; Skip if VD == 167
$938    $C7BC   RND      V7, #BC         ; V7 = random & BC
$93A    $7E26   ADD      VE, #26         ; Add 38 to VE
$93C    $3E7D   SE       VE, #7D         ; Skip if VE == 125
$93E    $10C0   JP       $0C0            ; Jump to 0C0
$940    $1A23   JP       $A23            ; Jump to A23
$942    $8B68   UNKNOWN  8B68            ; Unknown 8xxx instruction
$944    $9246   UNKNOWN  $9246           ; Unknown 9xxx instruction
$946    $F4F4   UNKNOWN  F4F4            ; Unknown Fxxx instruction
$948    $F8E5   UNKNOWN  F8E5            ; Unknown Fxxx instruction
$94A    $849E   SHL      V4              ; V4 <<= 1, VF = MSB
$94C    $F1DB   UNKNOWN  F1DB            ; Unknown Fxxx instruction
$94E    $0570   SYS      $570            ; System call to 570
$950    $8D2F   UNKNOWN  8D2F            ; Unknown 8xxx instruction
$952    $3CFE   SE       VC, #FE         ; Skip if VC == 254
$954    $9242   UNKNOWN  $9242           ; Unknown 9xxx instruction
$956    $CC0C   RND      VC, #0C         ; VC = random & 0C
$958    $9E24   UNKNOWN  $9E24           ; Unknown 9xxx instruction
$95A    $67BB   LD       V7, #BB         ; Load 187 into V7
$95C    $4F54   SNE      VF, #54         ; Skip if VF != 84
$95E    $D65E   DRW      V6, V5, #E      ; Draw 14-byte sprite at V6, V5
$960    $69DC   LD       V9, #DC         ; Load 220 into V9
$962    $CF93   RND      VF, #93         ; VF = random & 93
$964    $2B44   CALL     $B44            ; Call subroutine at B44
$966    $23DB   CALL     $3DB            ; Call subroutine at 3DB
$968    $B175   JP       V0, $175        ; Jump to V0 + 175
$96A    $4950   SNE      V9, #50         ; Skip if V9 != 80
$96C    $FCE3   UNKNOWN  FCE3            ; Unknown Fxxx instruction
$96E    $1F1F   JP       $F1F            ; Jump to F1F
$970    $2374   CALL     $374            ; Call subroutine at 374
$972    $7DB8   ADD      VD, #B8         ; Add 184 to VD
$974    $E810   UNKNOWN  $E810           ; Unknown Exxx instruction
$976    $C646   RND      V6, #46         ; V6 = random & 46
$978    $B577   JP       V0, $577        ; Jump to V0 + 577
$97A    $1C49   JP       $C49            ; Jump to C49
$97C    $4DAE   SNE      VD, #AE         ; Skip if VD != 174
$97E    $11BC   JP       $1BC            ; Jump to 1BC
$980    $E039   UNKNOWN  $E039           ; Unknown Exxx instruction
$982    $471F   SNE      V7, #1F         ; Skip if V7 != 31
$984    $80B6   SHR      V0              ; V0 >>= 1, VF = LSB
$986    $8AD6   SHR      VA              ; VA >>= 1, VF = LSB
$988    $D5D9   DRW      V5, VD, #9      ; Draw 9-byte sprite at V5, VD
$98A    $0C60   SYS      $C60            ; System call to C60
$98C    $923D   UNKNOWN  $923D           ; Unknown 9xxx instruction
$98E    $C219   RND      V2, #19         ; V2 = random & 19
$990    $BD8E   JP       V0, $D8E        ; Jump to V0 + D8E
$992    $A097   LD       I, $097         ; Load 097 into I
$994    $BF0A   JP       V0, $F0A        ; Jump to V0 + F0A
$996    $5356   UNKNOWN  $5356           ; Unknown 5xxx instruction
$998    $40EB   SNE      V0, #EB         ; Skip if V0 != 235
$99A    $C896   RND      V8, #96         ; V8 = random & 96
$99C    $9BA4   UNKNOWN  $9BA4           ; Unknown 9xxx instruction
$99E    $618C   LD       V1, #8C         ; Load 140 into V1
$9A0    $131B   JP       $31B            ; Jump to 31B
$9A2    $DF26   DRW      VF, V2, #6      ; Draw 6-byte sprite at VF, V2
$9A4    $12F8   JP       $2F8            ; Jump to 2F8
$9A6    $8AB5   SUB      VA, VB          ; VA -= VB, VF = !borrow
$9A8    $EEF4   UNKNOWN  $EEF4           ; Unknown Exxx instruction
$9AA    $6D37   LD       VD, #37         ; Load 55 into VD
$9AC    $9A54   UNKNOWN  $9A54           ; Unknown 9xxx instruction
$9AE    $17B4   JP       $7B4            ; Jump to 7B4
$9B0    $5049   UNKNOWN  $5049           ; Unknown 5xxx instruction
$9B2    $8043   XOR      V0, V4          ; V0 ^= V4
$9B4    $7658   ADD      V6, #58         ; Add 88 to V6
$9B6    $B40C   JP       V0, $40C        ; Jump to V0 + 40C
$9B8    $609A   LD       V0, #9A         ; Load 154 into V0
$9BA    $A971   LD       I, $971         ; Load 971 into I
$9BC    $C06A   RND      V0, #6A         ; V0 = random & 6A
$9BE    $BE96   JP       V0, $E96        ; Jump to V0 + E96
$9C0    $9CAD   UNKNOWN  $9CAD           ; Unknown 9xxx instruction
$9C2    $FE52   UNKNOWN  FE52            ; Unknown Fxxx instruction
$9C4    $1ED0   JP       $ED0            ; Jump to ED0
$9C6    $C10D   RND      V1, #0D         ; V1 = random & 0D
$9C8    $11C5   JP       $1C5            ; Jump to 1C5
$9CA    $FF0B   UNKNOWN  FF0B            ; Unknown Fxxx instruction
$9CC    $C282   RND      V2, #82         ; V2 = random & 82
$9CE    $0EAE   SYS      $EAE            ; System call to EAE
$9D0    $D42E   DRW      V4, V2, #E      ; Draw 14-byte sprite at V4, V2
$9D2    $10D1   JP       $0D1            ; Jump to 0D1
$9D4    $660D   LD       V6, #0D         ; Load 13 into V6
$9D6    $31BE   SE       V1, #BE         ; Skip if V1 == 190
$9D8    $4F28   SNE      VF, #28         ; Skip if VF != 40
$9DA    $99E5   UNKNOWN  $99E5           ; Unknown 9xxx instruction
$9DC    $E3DD   UNKNOWN  $E3DD           ; Unknown Exxx instruction
$9DE    $3CEE   SE       VC, #EE         ; Skip if VC == 238
$9E0    $E750   UNKNOWN  $E750           ; Unknown Exxx instruction
$9E2    $602C   LD       V0, #2C         ; Load 44 into V0
$9E4    $3436   SE       V4, #36         ; Skip if V4 == 54
$9E6    $D2EC   DRW      V2, VE, #C      ; Draw 12-byte sprite at V2, VE
$9E8    $DC4F   DRW      VC, V4, #F      ; Draw 15-byte sprite at VC, V4
$9EA    $C056   RND      V0, #56         ; V0 = random & 56
$9EC    $6046   LD       V0, #46         ; Load 70 into V0
$9EE    $3306   SE       V3, #06         ; Skip if V3 == 6
$9F0    $1445   JP       $445            ; Jump to 445
$9F2    $726C   ADD      V2, #6C         ; Add 108 to V2
$9F4    $464A   SNE      V6, #4A         ; Skip if V6 != 74
$9F6    $9BE6   UNKNOWN  $9BE6           ; Unknown 9xxx instruction
$9F8    $F447   UNKNOWN  F447            ; Unknown Fxxx instruction
$9FA    $1074   JP       $074            ; Jump to 074
$9FC    $0647   SYS      $647            ; System call to 647
$9FE    $C9F5   RND      V9, #F5         ; V9 = random & F5
$A00    $7932   ADD      V9, #32         ; Add 50 to V9
$A02    $7AF6   ADD      VA, #F6         ; Add 246 to VA
$A04    $FDD8   UNKNOWN  FDD8            ; Unknown Fxxx instruction
$A06    $F8BA   UNKNOWN  F8BA            ; Unknown Fxxx instruction
$A08    $FF32   UNKNOWN  FF32            ; Unknown Fxxx instruction
$A0A    $3DA5   SE       VD, #A5         ; Skip if VD == 165
$A0C    $BDAE   JP       V0, $DAE        ; Jump to V0 + DAE
$A0E    $9F69   UNKNOWN  $9F69           ; Unknown 9xxx instruction
$A10    $FA84   UNKNOWN  FA84            ; Unknown Fxxx instruction
$A12    $014F   SYS      $14F            ; System call to 14F
$A14    $6D64   LD       VD, #64         ; Load 100 into VD
$A16    $6C6E   LD       VC, #6E         ; Load 110 into VC
$A18    $9F9D   UNKNOWN  $9F9D           ; Unknown 9xxx instruction
$A1A    $27E2   CALL     $7E2            ; Call subroutine at 7E2
$A1C    $5F79   UNKNOWN  $5F79           ; Unknown 5xxx instruction
$A1E    $C621   RND      V6, #21         ; V6 = random & 21
$A20    $A606   LD       I, $606         ; Load 606 into I
$A22    $5405   UNKNOWN  $5405           ; Unknown 5xxx instruction
$A24    $C754   RND      V7, #54         ; V7 = random & 54
$A26    $F48F   UNKNOWN  F48F            ; Unknown Fxxx instruction
$A28    $DAA4   DRW      VA, VA, #4      ; Draw 4-byte sprite at VA, VA
$A2A    $2DF5   CALL     $DF5            ; Call subroutine at DF5
$A2C    $5FC4   UNKNOWN  $5FC4           ; Unknown 5xxx instruction
$A2E    $A410   LD       I, $410         ; Load 410 into I
$A30    $983A   UNKNOWN  $983A           ; Unknown 9xxx instruction
$A32    $1451   JP       $451            ; Jump to 451
$A34    $F636   UNKNOWN  F636            ; Unknown Fxxx instruction
$A36    $7E6F   ADD      VE, #6F         ; Add 111 to VE
$A38    $DD6A   DRW      VD, V6, #A      ; Draw 10-byte sprite at VD, V6
$A3A    $CB76   RND      VB, #76         ; VB = random & 76
$A3C    $7E06   ADD      VE, #06         ; Add 6 to VE
$A3E    $9F17   UNKNOWN  $9F17           ; Unknown 9xxx instruction
$A40    $A336   LD       I, $336         ; Load 336 into I
$A42    $2B4C   CALL     $B4C            ; Call subroutine at B4C
$A44    $2875   CALL     $875            ; Call subroutine at 875
$A46    $25BF   CALL     $5BF            ; Call subroutine at 5BF
$A48    $791B   ADD      V9, #1B         ; Add 27 to V9
$A4A    $B977   JP       V0, $977        ; Jump to V0 + 977
$A4C    $2E20   CALL     $E20            ; Call subroutine at E20
$A4E    $D11E   DRW      V1, V1, #E      ; Draw 14-byte sprite at V1, V1
$A50    $9A2A   UNKNOWN  $9A2A           ; Unknown 9xxx instruction
$A52    $9BA3   UNKNOWN  $9BA3           ; Unknown 9xxx instruction
$A54    $1FD4   JP       $FD4            ; Jump to FD4
$A56    $126C   JP       $26C            ; Jump to 26C
$A58    $268B   CALL     $68B            ; Call subroutine at 68B
$A5A    $1F9A   JP       $F9A            ; Jump to F9A
$A5C    $4A96   SNE      VA, #96         ; Skip if VA != 150
$A5E    $F05B   UNKNOWN  F05B            ; Unknown Fxxx instruction
$A60    $9ACF   UNKNOWN  $9ACF           ; Unknown 9xxx instruction
$A62    $E6B6   UNKNOWN  $E6B6           ; Unknown Exxx instruction
$A64    $2704   CALL     $704            ; Call subroutine at 704
$A66    $CB02   RND      VB, #02         ; VB = random & 02
$A68    $94EB   UNKNOWN  $94EB           ; Unknown 9xxx instruction
$A6A    $69BD   LD       V9, #BD         ; Load 189 into V9
$A6C    $1081   JP       $081            ; Jump to 081
$A6E    $0B53   SYS      $B53            ; System call to B53
$A70    $C392   RND      V3, #92         ; V3 = random & 92
$A72    $3FDF   SE       VF, #DF         ; Skip if VF == 223
$A74    $C534   RND      V5, #34         ; V5 = random & 34
$A76    $9E5A   UNKNOWN  $9E5A           ; Unknown 9xxx instruction
$A78    $69CE   LD       V9, #CE         ; Load 206 into V9
$A7A    $0D24   SYS      $D24            ; System call to D24
$A7C    $797F   ADD      V9, #7F         ; Add 127 to V9
$A7E    $79AB   ADD      V9, #AB         ; Add 171 to V9
$A80    $6471   LD       V4, #71         ; Load 113 into V4
$A82    $A8A7   LD       I, $8A7         ; Load 8A7 into I
$A84    $AA4C   LD       I, $A4C         ; Load A4C into I
$A86    $3C65   SE       VC, #65         ; Skip if VC == 101
$A88    $C543   RND      V5, #43         ; V5 = random & 43
$A8A    $42C6   SNE      V2, #C6         ; Skip if V2 != 198
$A8C    $0035   SYS      $035            ; System call to 035
$A8E    $C82D   RND      V8, #2D         ; V8 = random & 2D
$A90    $B551   JP       V0, $551        ; Jump to V0 + 551
$A92    $E835   UNKNOWN  $E835           ; Unknown Exxx instruction
$A94    $1CF7   JP       $CF7            ; Jump to CF7
$A96    $12E6   JP       $2E6            ; Jump to 2E6
$A98    $BCA4   JP       V0, $CA4        ; Jump to V0 + CA4
$A9A    $7DAF   ADD      VD, #AF         ; Add 175 to VD
$A9C    $776A   ADD      V7, #6A         ; Add 106 to V7
$A9E    $6FB7   LD       VF, #B7         ; Load 183 into VF
$AA0    $AA3F   LD       I, $A3F         ; Load A3F into I
$AA2    $6FCA   LD       VF, #CA         ; Load 202 into VF
$AA4    $DA73   DRW      VA, V7, #3      ; Draw 3-byte sprite at VA, V7
$AA6    $221F   CALL     $21F            ; Call subroutine at 21F
$AA8    $AB88   LD       I, $B88         ; Load B88 into I
$AAA    $E2C9   UNKNOWN  $E2C9           ; Unknown Exxx instruction
$AAC    $CE6F   RND      VE, #6F         ; VE = random & 6F
$AAE    $575F   UNKNOWN  $575F           ; Unknown 5xxx instruction
$AB0    $E2E4   UNKNOWN  $E2E4           ; Unknown Exxx instruction
$AB2    $C5CD   RND      V5, #CD         ; V5 = random & CD
$AB4    $64A5   LD       V4, #A5         ; Load 165 into V4
$AB6    $89C5   SUB      V9, VC          ; V9 -= VC, VF = !borrow
$AB8    $9887   UNKNOWN  $9887           ; Unknown 9xxx instruction
$ABA    $460C   SNE      V6, #0C         ; Skip if V6 != 12
$ABC    $C692   RND      V6, #92         ; V6 = random & 92
$ABE    $4D33   SNE      VD, #33         ; Skip if VD != 51
$AC0    $D0E5   DRW      V0, VE, #5      ; Draw 5-byte sprite at V0, VE
$AC2    $1D2C   JP       $D2C            ; Jump to D2C
$AC4    $62A2   LD       V2, #A2         ; Load 162 into V2
$AC6    $0D38   SYS      $D38            ; System call to D38
$AC8    $AFB7   LD       I, $FB7         ; Load FB7 into I
$ACA    $D43F   DRW      V4, V3, #F      ; Draw 15-byte sprite at V4, V3
$ACC    $B6D5   JP       V0, $6D5        ; Jump to V0 + 6D5
$ACE    $82B9   UNKNOWN  82B9            ; Unknown 8xxx instruction
$AD0    $4436   SNE      V4, #36         ; Skip if V4 != 54
$AD2    $049E   SYS      $49E            ; System call to 49E
$AD4    $5DEE   UNKNOWN  $5DEE           ; Unknown 5xxx instruction
$AD6    $BBE5   JP       V0, $BE5        ; Jump to V0 + BE5
$AD8    $8DD0   LD       VD, VD          ; VD = VD
$ADA    $D7C5   DRW      V7, VC, #5      ; Draw 5-byte sprite at V7, VC
$ADC    $4FA7   SNE      VF, #A7         ; Skip if VF != 167
$ADE    $DB54   DRW      VB, V5, #4      ; Draw 4-byte sprite at VB, V5
$AE0    $F79F   UNKNOWN  F79F            ; Unknown Fxxx instruction
$AE2    $4C41   SNE      VC, #41         ; Skip if VC != 65
$AE4    $0948   SYS      $948            ; System call to 948
$AE6    $0CC5   SYS      $CC5            ; System call to CC5
$AE8    $84F7   SUBN     V4, VF          ; V4 = VF - V4, VF = !borrow
$AEA    $D961   DRW      V9, V6, #1      ; Draw 1-byte sprite at V9, V6
$AEC    $B365   JP       V0, $365        ; Jump to V0 + 365
$AEE    $FF0B   UNKNOWN  FF0B            ; Unknown Fxxx instruction
$AF0    $32F0   SE       V2, #F0         ; Skip if V2 == 240
$AF2    $B567   JP       V0, $567        ; Jump to V0 + 567
$AF4    $FD53   UNKNOWN  FD53            ; Unknown Fxxx instruction
$AF6    $05C3   SYS      $5C3            ; System call to 5C3
$AF8    $CA92   RND      VA, #92         ; VA = random & 92
$AFA    $57FA   UNKNOWN  $57FA           ; Unknown 5xxx instruction
$AFC    $0700   SYS      $700            ; System call to 700
$AFE    $FDEE   UNKNOWN  FDEE            ; Unknown Fxxx instruction
$B00    $FD8B   UNKNOWN  FD8B            ; Unknown Fxxx instruction
$B02    $FB64   UNKNOWN  FB64            ; Unknown Fxxx instruction
$B04    $9CF3   UNKNOWN  $9CF3           ; Unknown 9xxx instruction
$B06    $550A   UNKNOWN  $550A           ; Unknown 5xxx instruction
$B08    $B2C6   JP       V0, $2C6        ; Jump to V0 + 2C6
$B0A    $D14D   DRW      V1, V4, #D      ; Draw 13-byte sprite at V1, V4
$B0C    $0116   SYS      $116            ; System call to 116
$B0E    $9B84   UNKNOWN  $9B84           ; Unknown 9xxx instruction
$B10    $5C65   UNKNOWN  $5C65           ; Unknown 5xxx instruction
$B12    $A63B   LD       I, $63B         ; Load 63B into I
$B14    $7E44   ADD      VE, #44         ; Add 68 to VE
$B16    $54FF   UNKNOWN  $54FF           ; Unknown 5xxx instruction
$B18    $9FAB   UNKNOWN  $9FAB           ; Unknown 9xxx instruction
$B1A    $45DD   SNE      V5, #DD         ; Skip if V5 != 221
$B1C    $0EA5   SYS      $EA5            ; System call to EA5
$B1E    $EA15   UNKNOWN  $EA15           ; Unknown Exxx instruction
$B20    $825F   UNKNOWN  825F            ; Unknown 8xxx instruction
$B22    $BAC1   JP       V0, $AC1        ; Jump to V0 + AC1
$B24    $4B38   SNE      VB, #38         ; Skip if VB != 56
$B26    $8C4D   UNKNOWN  8C4D            ; Unknown 8xxx instruction
$B28    $0262   SYS      $262            ; System call to 262
$B2A    $691F   LD       V9, #1F         ; Load 31 into V9
$B2C    $9A47   UNKNOWN  $9A47           ; Unknown 9xxx instruction
$B2E    $42C6   SNE      V2, #C6         ; Skip if V2 != 198
$B30    $739E   ADD      V3, #9E         ; Add 158 to V3
$B32    $DF9A   DRW      VF, V9, #A      ; Draw 10-byte sprite at VF, V9
$B34    $EE83   UNKNOWN  $EE83           ; Unknown Exxx instruction
$B36    $E7C2   UNKNOWN  $E7C2           ; Unknown Exxx instruction
$B38    $5A73   UNKNOWN  $5A73           ; Unknown 5xxx instruction
$B3A    $405D   SNE      V0, #5D         ; Skip if V0 != 93
$B3C    $F508   UNKNOWN  F508            ; Unknown Fxxx instruction
$B3E    $5840   SE       V8, V4          ; Skip if V8 == V4
$B40    $1934   JP       $934            ; Jump to 934
$B42    $0345   SYS      $345            ; System call to 345
$B44    $4CAE   SNE      VC, #AE         ; Skip if VC != 174
$B46    $E2B3   UNKNOWN  $E2B3           ; Unknown Exxx instruction
$B48    $A0AA   LD       I, $0AA         ; Load 0AA into I
$B4A    $B2DF   JP       V0, $2DF        ; Jump to V0 + 2DF
$B4C    $06CC   SYS      $6CC            ; System call to 6CC
$B4E    $C582   RND      V5, #82         ; V5 = random & 82
$B50    $90BF   UNKNOWN  $90BF           ; Unknown 9xxx instruction
$B52    $F66E   UNKNOWN  F66E            ; Unknown Fxxx instruction
$B54    $2743   CALL     $743            ; Call subroutine at 743
$B56    $5774   UNKNOWN  $5774           ; Unknown 5xxx instruction
$B58    $7F3C   ADD      VF, #3C         ; Add 60 to VF
$B5A    $E346   UNKNOWN  $E346           ; Unknown Exxx instruction
$B5C    $554B   UNKNOWN  $554B           ; Unknown 5xxx instruction
$B5E    $2B59   CALL     $B59            ; Call subroutine at B59
$B60    $1347   JP       $347            ; Jump to 347
$B62    $A3F2   LD       I, $3F2         ; Load 3F2 into I
$B64    $452B   SNE      V5, #2B         ; Skip if V5 != 43
$B66    $2BE8   CALL     $BE8            ; Call subroutine at BE8
$B68    $C71A   RND      V7, #1A         ; V7 = random & 1A
$B6A    $7C7B   ADD      VC, #7B         ; Add 123 to VC
$B6C    $A108   LD       I, $108         ; Load 108 into I
$B6E    $1AC4   JP       $AC4            ; Jump to AC4
$B70    $EE3D   UNKNOWN  $EE3D           ; Unknown Exxx instruction
$B72    $B47E   JP       V0, $47E        ; Jump to V0 + 47E
$B74    $01BF   SYS      $1BF            ; System call to 1BF
$B76    $5D17   UNKNOWN  $5D17           ; Unknown 5xxx instruction
$B78    $45E6   SNE      V5, #E6         ; Skip if V5 != 230
$B7A    $371C   SE       V7, #1C         ; Skip if V7 == 28
$B7C    $1D3D   JP       $D3D            ; Jump to D3D
$B7E    $0353   SYS      $353            ; System call to 353
$B80    $3168   SE       V1, #68         ; Skip if V1 == 104
$B82    $2388   CALL     $388            ; Call subroutine at 388
$B84    $F535   UNKNOWN  F535            ; Unknown Fxxx instruction
$B86    $CC54   RND      VC, #54         ; VC = random & 54
$B88    $5AA1   UNKNOWN  $5AA1           ; Unknown 5xxx instruction
$B8A    $380C   SE       V8, #0C         ; Skip if V8 == 12
$B8C    $A8F5   LD       I, $8F5         ; Load 8F5 into I
$B8E    $1152   JP       $152            ; Jump to 152
$B90    $7997   ADD      V9, #97         ; Add 151 to V9
$B92    $4749   SNE      V7, #49         ; Skip if V7 != 73
$B94    $1B29   JP       $B29            ; Jump to B29
$B96    $04B6   SYS      $4B6            ; System call to 4B6
$B98    $21A8   CALL     $1A8            ; Call subroutine at 1A8
$B9A    $BF04   JP       V0, $F04        ; Jump to V0 + F04
$B9C    $7FB0   ADD      VF, #B0         ; Add 176 to VF
$B9E    $9C98   UNKNOWN  $9C98           ; Unknown 9xxx instruction
$BA0    $DEEF   DRW      VE, VE, #F      ; Draw 15-byte sprite at VE, VE
$BA2    $13B4   JP       $3B4            ; Jump to 3B4
$BA4    $F66F   UNKNOWN  F66F            ; Unknown Fxxx instruction
$BA6    $60C8   LD       V0, #C8         ; Load 200 into V0
$BA8    $6D7B   LD       VD, #7B         ; Load 123 into VD
$BAA    $00FA   SYS      $0FA            ; System call to 0FA
$BAC    $0E60   SYS      $E60            ; System call to E60
$BAE    $3782   SE       V7, #82         ; Skip if V7 == 130
$BB0    $3F8B   SE       VF, #8B         ; Skip if VF == 139
$BB2    $6690   LD       V6, #90         ; Load 144 into V6
$BB4    $C35B   RND      V3, #5B         ; V3 = random & 5B
$BB6    $BBBB   JP       V0, $BBB        ; Jump to V0 + BBB
$BB8    $1BB2   JP       $BB2            ; Jump to BB2
$BBA    $D8AF   DRW      V8, VA, #F      ; Draw 15-byte sprite at V8, VA
$BBC    $78A1   ADD      V8, #A1         ; Add 161 to V8
$BBE    $9E67   UNKNOWN  $9E67           ; Unknown 9xxx instruction
$BC0    $80A8   UNKNOWN  80A8            ; Unknown 8xxx instruction
$BC2    $0FF2   SYS      $FF2            ; System call to FF2
$BC4    $5EE9   UNKNOWN  $5EE9           ; Unknown 5xxx instruction
$BC6    $BBDB   JP       V0, $BDB        ; Jump to V0 + BDB
$BC8    $76A1   ADD      V6, #A1         ; Add 161 to V6
$BCA    $6BB9   LD       VB, #B9         ; Load 185 into VB
$BCC    $26FF   CALL     $6FF            ; Call subroutine at 6FF
$BCE    $66D9   LD       V6, #D9         ; Load 217 into V6
$BD0    $0E3B   SYS      $E3B            ; System call to E3B
$BD2    $9F5C   UNKNOWN  $9F5C           ; Unknown 9xxx instruction
$BD4    $FC5B   UNKNOWN  FC5B            ; Unknown Fxxx instruction
$BD6    $70FB   ADD      V0, #FB         ; Add 251 to V0
$BD8    $44D6   SNE      V4, #D6         ; Skip if V4 != 214
$BDA    $95F9   UNKNOWN  $95F9           ; Unknown 9xxx instruction
$BDC    $67E3   LD       V7, #E3         ; Load 227 into V7
$BDE    $67DD   LD       V7, #DD         ; Load 221 into V7
$BE0    $E441   UNKNOWN  $E441           ; Unknown Exxx instruction
$BE2    $A124   LD       I, $124         ; Load 124 into I
$BE4    $A304   LD       I, $304         ; Load 304 into I
$BE6    $A652   LD       I, $652         ; Load 652 into I
$BE8    $C9EA   RND      V9, #EA         ; V9 = random & EA
$BEA    $EF34   UNKNOWN  $EF34           ; Unknown Exxx instruction
$BEC    $31E7   SE       V1, #E7         ; Skip if V1 == 231
$BEE    $C832   RND      V8, #32         ; V8 = random & 32
$BF0    $E2CB   UNKNOWN  $E2CB           ; Unknown Exxx instruction
$BF2    $DC91   DRW      VC, V9, #1      ; Draw 1-byte sprite at VC, V9
$BF4    $C1C8   RND      V1, #C8         ; V1 = random & C8
$BF6    $F244   UNKNOWN  F244            ; Unknown Fxxx instruction
$BF8    $1188   JP       $188            ; Jump to 188
$BFA    $4A45   SNE      VA, #45         ; Skip if VA != 69
$BFC    $F159   UNKNOWN  F159            ; Unknown Fxxx instruction
$BFE    $AC50   LD       I, $C50         ; Load C50 into I
$C00    $20AE   CALL     $0AE            ; Call subroutine at 0AE
$C02    $4410   SNE      V4, #10         ; Skip if V4 != 16
$C04    $A45B   LD       I, $45B         ; Load 45B into I
$C06    $C170   RND      V1, #70         ; V1 = random & 70
$C08    $B168   JP       V0, $168        ; Jump to V0 + 168
$C0A    $C1BA   RND      V1, #BA         ; V1 = random & BA
$C0C    $1B62   JP       $B62            ; Jump to B62
$C0E    $1A0C   JP       $A0C            ; Jump to A0C
$C10    $38B5   SE       V8, #B5         ; Skip if V8 == 181
$C12    $F727   UNKNOWN  F727            ; Unknown Fxxx instruction
$C14    $4F1E   SNE      VF, #1E         ; Skip if VF != 30
$C16    $A7AE   LD       I, $7AE         ; Load 7AE into I
$C18    $5C0D   UNKNOWN  $5C0D           ; Unknown 5xxx instruction
$C1A    $9285   UNKNOWN  $9285           ; Unknown 9xxx instruction
$C1C    $DD64   DRW      VD, V6, #4      ; Draw 4-byte sprite at VD, V6
$C1E    $8658   UNKNOWN  8658            ; Unknown 8xxx instruction
$C20    $B1D3   JP       V0, $1D3        ; Jump to V0 + 1D3
$C22    $C2F7   RND      V2, #F7         ; V2 = random & F7
$C24    $D885   DRW      V8, V8, #5      ; Draw 5-byte sprite at V8, V8
$C26    $B508   JP       V0, $508        ; Jump to V0 + 508
$C28    $28D1   CALL     $8D1            ; Call subroutine at 8D1
$C2A    $1C9A   JP       $C9A            ; Jump to C9A
$C2C    $BAC5   JP       V0, $AC5        ; Jump to V0 + AC5
$C2E    $313E   SE       V1, #3E         ; Skip if V1 == 62
$C30    $882E   SHL      V8              ; V8 <<= 1, VF = MSB
$C32    $E9BA   UNKNOWN  $E9BA           ; Unknown Exxx instruction
$C34    $3687   SE       V6, #87         ; Skip if V6 == 135
$C36    $A7E7   LD       I, $7E7         ; Load 7E7 into I
$C38    $9614   UNKNOWN  $9614           ; Unknown 9xxx instruction
$C3A    $BF27   JP       V0, $F27        ; Jump to V0 + F27
$C3C    $72B1   ADD      V2, #B1         ; Add 177 to V2
$C3E    $97CA   UNKNOWN  $97CA           ; Unknown 9xxx instruction
$C40    $D5E3   DRW      V5, VE, #3      ; Draw 3-byte sprite at V5, VE
$C42    $BC64   JP       V0, $C64        ; Jump to V0 + C64
$C44    $1CEA   JP       $CEA            ; Jump to CEA
$C46    $1BDA   JP       $BDA            ; Jump to BDA
$C48    $770E   ADD      V7, #0E         ; Add 14 to V7
$C4A    $80D3   XOR      V0, VD          ; V0 ^= VD
$C4C    $2DB4   CALL     $DB4            ; Call subroutine at DB4
$C4E    $3131   SE       V1, #31         ; Skip if V1 == 49
$C50    $BAEB   JP       V0, $AEB        ; Jump to V0 + AEB
$C52    $97D2   UNKNOWN  $97D2           ; Unknown 9xxx instruction
$C54    $DA61   DRW      VA, V6, #1      ; Draw 1-byte sprite at VA, V6
$C56    $51ED   UNKNOWN  $51ED           ; Unknown 5xxx instruction
$C58    $CC64   RND      VC, #64         ; VC = random & 64
$C5A    $F97B   UNKNOWN  F97B            ; Unknown Fxxx instruction
$C5C    $A618   LD       I, $618         ; Load 618 into I
$C5E    $FB6F   UNKNOWN  FB6F            ; Unknown Fxxx instruction
$C60    $763B   ADD      V6, #3B         ; Add 59 to V6
$C62    $921B   UNKNOWN  $921B           ; Unknown 9xxx instruction
$C64    $D924   DRW      V9, V2, #4      ; Draw 4-byte sprite at V9, V2
$C66    $8AA1   OR       VA, VA          ; VA |= VA
$C68    $B375   JP       V0, $375        ; Jump to V0 + 375
$C6A    $DA4F   DRW      VA, V4, #F      ; Draw 15-byte sprite at VA, V4
$C6C    $256B   CALL     $56B            ; Call subroutine at 56B
$C6E    $556B   UNKNOWN  $556B           ; Unknown 5xxx instruction
$C70    $E9EB   UNKNOWN  $E9EB           ; Unknown Exxx instruction
$C72    $B3DD   JP       V0, $3DD        ; Jump to V0 + 3DD
$C74    $0A4B   SYS      $A4B            ; System call to A4B
$C76    $9509   UNKNOWN  $9509           ; Unknown 9xxx instruction
$C78    $D5E2   DRW      V5, VE, #2      ; Draw 2-byte sprite at V5, VE
$C7A    $64BC   LD       V4, #BC         ; Load 188 into V4
$C7C    $D464   DRW      V4, V6, #4      ; Draw 4-byte sprite at V4, V6
$C7E    $7065   ADD      V0, #65         ; Add 101 to V0
$C80    $C188   RND      V1, #88         ; V1 = random & 88
$C82    $270E   CALL     $70E            ; Call subroutine at 70E
$C84    $7FEB   ADD      VF, #EB         ; Add 235 to VF
$C86    $07C6   SYS      $7C6            ; System call to 7C6
$C88    $0D28   SYS      $D28            ; System call to D28
$C8A    $F6DA   UNKNOWN  F6DA            ; Unknown Fxxx instruction
$C8C    $2A04   CALL     $A04            ; Call subroutine at A04
$C8E    $1CF0   JP       $CF0            ; Jump to CF0
$C90    $DF03   DRW      VF, V0, #3      ; Draw 3-byte sprite at VF, V0
$C92    $1034   JP       $034            ; Jump to 034
$C94    $A2E9   LD       I, $2E9         ; Load 2E9 into I
$C96    $4687   SNE      V6, #87         ; Skip if V6 != 135
$C98    $12ED   JP       $2ED            ; Jump to 2ED
$C9A    $0DCD   SYS      $DCD            ; System call to DCD
$C9C    $E3D9   UNKNOWN  $E3D9           ; Unknown Exxx instruction
$C9E    $2AEF   CALL     $AEF            ; Call subroutine at AEF
$CA0    $4878   SNE      V8, #78         ; Skip if V8 != 120
$CA2    $87BE   SHL      V7              ; V7 <<= 1, VF = MSB
$CA4    $157A   JP       $57A            ; Jump to 57A
$CA6    $5B7C   UNKNOWN  $5B7C           ; Unknown 5xxx instruction
$CA8    $3625   SE       V6, #25         ; Skip if V6 == 37
$CAA    $ED13   UNKNOWN  $ED13           ; Unknown Exxx instruction
$CAC    $FB12   UNKNOWN  FB12            ; Unknown Fxxx instruction
$CAE    $002F   SYS      $02F            ; System call to 02F
$CB0    $D759   DRW      V7, V5, #9      ; Draw 9-byte sprite at V7, V5
$CB2    $F10D   UNKNOWN  F10D            ; Unknown Fxxx instruction
$CB4    $9FEA   UNKNOWN  $9FEA           ; Unknown 9xxx instruction
$CB6    $8CEB   UNKNOWN  8CEB            ; Unknown 8xxx instruction
$CB8    $8D43   XOR      VD, V4          ; VD ^= V4
$CBA    $DE58   DRW      VE, V5, #8      ; Draw 8-byte sprite at VE, V5
$CBC    $7E60   ADD      VE, #60         ; Add 96 to VE
$CBE    $F615   LD       DT, V6          ; Delay timer = V6
$CC0    $441F   SNE      V4, #1F         ; Skip if V4 != 31
$CC2    $CA87   RND      VA, #87         ; VA = random & 87
$CC4    $B7D8   JP       V0, $7D8        ; Jump to V0 + 7D8
$CC6    $8E14   ADD      VE, V1          ; VE += V1, VF = carry
$CC8    $C406   RND      V4, #06         ; V4 = random & 06
$CCA    $85B7   SUBN     V5, VB          ; V5 = VB - V5, VF = !borrow
$CCC    $143D   JP       $43D            ; Jump to 43D
$CCE    $910F   UNKNOWN  $910F           ; Unknown 9xxx instruction
$CD0    $1C31   JP       $C31            ; Jump to C31
$CD2    $7501   ADD      V5, #01         ; Add 1 to V5
$CD4    $027C   SYS      $27C            ; System call to 27C
$CD6    $43CC   SNE      V3, #CC         ; Skip if V3 != 204
$CD8    $A977   LD       I, $977         ; Load 977 into I
$CDA    $2BD5   CALL     $BD5            ; Call subroutine at BD5
$CDC    $18E7   JP       $8E7            ; Jump to 8E7
$CDE    $9A97   UNKNOWN  $9A97           ; Unknown 9xxx instruction
$CE0    $E963   UNKNOWN  $E963           ; Unknown Exxx instruction
$CE2    $7473   ADD      V4, #73         ; Add 115 to V4
$CE4    $0F09   SYS      $F09            ; System call to F09
$CE6    $81F4   ADD      V1, VF          ; V1 += VF, VF = carry
$CE8    $D8BE   DRW      V8, VB, #E      ; Draw 14-byte sprite at V8, VB
$CEA    $AC55   LD       I, $C55         ; Load C55 into I
$CEC    $632F   LD       V3, #2F         ; Load 47 into V3
$CEE    $C460   RND      V4, #60         ; V4 = random & 60
$CF0    $FEC2   UNKNOWN  FEC2            ; Unknown Fxxx instruction
$CF2    $E794   UNKNOWN  $E794           ; Unknown Exxx instruction
$CF4    $F9E5   UNKNOWN  F9E5            ; Unknown Fxxx instruction
$CF6    $BA9A   JP       V0, $A9A        ; Jump to V0 + A9A
$CF8    $C5D4   RND      V5, #D4         ; V5 = random & D4
$CFA    $47E3   SNE      V7, #E3         ; Skip if V7 != 227
$CFC    $A3D9   LD       I, $3D9         ; Load 3D9 into I
$CFE    $5F14   UNKNOWN  $5F14           ; Unknown 5xxx instruction
$D00    $40A4   SNE      V0, #A4         ; Skip if V0 != 164
$D02    $C98F   RND      V9, #8F         ; V9 = random & 8F
$D04    $36C0   SE       V6, #C0         ; Skip if V6 == 192
$D06    $6160   LD       V1, #60         ; Load 96 into V1
$D08    $DD4F   DRW      VD, V4, #F      ; Draw 15-byte sprite at VD, V4
$D0A    $13A5   JP       $3A5            ; Jump to 3A5
$D0C    $4783   SNE      V7, #83         ; Skip if V7 != 131
$D0E    $3221   SE       V2, #21         ; Skip if V2 == 33
$D10    $F657   UNKNOWN  F657            ; Unknown Fxxx instruction
$D12    $EC0E   UNKNOWN  $EC0E           ; Unknown Exxx instruction
$D14    $1104   JP       $104            ; Jump to 104
$D16    $0F2C   SYS      $F2C            ; System call to F2C
$D18    $32A6   SE       V2, #A6         ; Skip if V2 == 166
$D1A    $195D   JP       $95D            ; Jump to 95D
$D1C    $806F   UNKNOWN  806F            ; Unknown 8xxx instruction
$D1E    $2404   CALL     $404            ; Call subroutine at 404
$D20    $F3E1   UNKNOWN  F3E1            ; Unknown Fxxx instruction
$D22    $D0D5   DRW      V0, VD, #5      ; Draw 5-byte sprite at V0, VD
$D24    $F862   UNKNOWN  F862            ; Unknown Fxxx instruction
$D26    $763B   ADD      V6, #3B         ; Add 59 to V6
$D28    $9680   SNE      V6, V8          ; Skip if V6 != V8
$D2A    $4304   SNE      V3, #04         ; Skip if V3 != 4
$D2C    $C1D0   RND      V1, #D0         ; V1 = random & D0
$D2E    $0169   SYS      $169            ; System call to 169
$D30    $8032   AND      V0, V3          ; V0 &= V3
$D32    $7817   ADD      V8, #17         ; Add 23 to V8
$D34    $1F9F   JP       $F9F            ; Jump to F9F
$D36    $DBEE   DRW      VB, VE, #E      ; Draw 14-byte sprite at VB, VE
$D38    $B4FA   JP       V0, $4FA        ; Jump to V0 + 4FA
$D3A    $3528   SE       V5, #28         ; Skip if V5 == 40
$D3C    $4E7B   SNE      VE, #7B         ; Skip if VE != 123
$D3E    $DCA1   DRW      VC, VA, #1      ; Draw 1-byte sprite at VC, VA
$D40    $17A1   JP       $7A1            ; Jump to 7A1
$D42    $B2F2   JP       V0, $2F2        ; Jump to V0 + 2F2
$D44    $C1E3   RND      V1, #E3         ; V1 = random & E3
$D46    $338B   SE       V3, #8B         ; Skip if V3 == 139
$D48    $0BDC   SYS      $BDC            ; System call to BDC
$D4A    $84FD   UNKNOWN  84FD            ; Unknown 8xxx instruction
$D4C    $B82D   JP       V0, $82D        ; Jump to V0 + 82D
$D4E    $2F6F   CALL     $F6F            ; Call subroutine at F6F
$D50    $3C52   SE       VC, #52         ; Skip if VC == 82
$D52    $A340   LD       I, $340         ; Load 340 into I
$D54    $DED9   DRW      VE, VD, #9      ; Draw 9-byte sprite at VE, VD
$D56    $7F7B   ADD      VF, #7B         ; Add 123 to VF
$D58    $693F   LD       V9, #3F         ; Load 63 into V9
$D5A    $92FF   UNKNOWN  $92FF           ; Unknown 9xxx instruction
$D5C    $1330   JP       $330            ; Jump to 330
$D5E    $0561   SYS      $561            ; System call to 561
$D60    $A67C   LD       I, $67C         ; Load 67C into I
$D62    $8C59   UNKNOWN  8C59            ; Unknown 8xxx instruction
$D64    $DE2A   DRW      VE, V2, #A      ; Draw 10-byte sprite at VE, V2
$D66    $5648   UNKNOWN  $5648           ; Unknown 5xxx instruction
$D68    $2CA8   CALL     $CA8            ; Call subroutine at CA8
$D6A    $FDE4   UNKNOWN  FDE4            ; Unknown Fxxx instruction
$D6C    $E3A6   UNKNOWN  $E3A6           ; Unknown Exxx instruction
$D6E    $E117   UNKNOWN  $E117           ; Unknown Exxx instruction
$D70    $1EDA   JP       $EDA            ; Jump to EDA
$D72    $0A9A   SYS      $A9A            ; System call to A9A
$D74    $0920   SYS      $920            ; System call to 920
$D76    $8D1B   UNKNOWN  8D1B            ; Unknown 8xxx instruction
$D78    $31E6   SE       V1, #E6         ; Skip if V1 == 230
$D7A    $865E   SHL      V6              ; V6 <<= 1, VF = MSB
$D7C    $915F   UNKNOWN  $915F           ; Unknown 9xxx instruction
$D7E    $933E   UNKNOWN  $933E           ; Unknown 9xxx instruction
$D80    $AA46   LD       I, $A46         ; Load A46 into I
$D82    $BA58   JP       V0, $A58        ; Jump to V0 + A58
$D84    $69C2   LD       V9, #C2         ; Load 194 into V9
$D86    $7EAB   ADD      VE, #AB         ; Add 171 to VE
$D88    $62AD   LD       V2, #AD         ; Load 173 into V2
$D8A    $DAC2   DRW      VA, VC, #2      ; Draw 2-byte sprite at VA, VC
$D8C    $802A   UNKNOWN  802A            ; Unknown 8xxx instruction
$D8E    $9A2A   UNKNOWN  $9A2A           ; Unknown 9xxx instruction
$D90    $0EAB   SYS      $EAB            ; System call to EAB
$D92    $6EE9   LD       VE, #E9         ; Load 233 into VE
$D94    $E213   UNKNOWN  $E213           ; Unknown Exxx instruction
$D96    $6333   LD       V3, #33         ; Load 51 into V3
$D98    $B0F4   JP       V0, $0F4        ; Jump to V0 + 0F4
$D9A    $B70F   JP       V0, $70F        ; Jump to V0 + 70F
$D9C    $5146   UNKNOWN  $5146           ; Unknown 5xxx instruction
$D9E    $C79F   RND      V7, #9F         ; V7 = random & 9F
$DA0    $8026   SHR      V0              ; V0 >>= 1, VF = LSB
$DA2    $E78C   UNKNOWN  $E78C           ; Unknown Exxx instruction
$DA4    $D56B   DRW      V5, V6, #B      ; Draw 11-byte sprite at V5, V6
$DA6    $22B1   CALL     $2B1            ; Call subroutine at 2B1
$DA8    $EE41   UNKNOWN  $EE41           ; Unknown Exxx instruction
$DAA    $7875   ADD      V8, #75         ; Add 117 to V8
$DAC    $2524   CALL     $524            ; Call subroutine at 524
$DAE    $8C18   UNKNOWN  8C18            ; Unknown 8xxx instruction
$DB0    $375D   SE       V7, #5D         ; Skip if V7 == 93
$DB2    $C873   RND      V8, #73         ; V8 = random & 73
$DB4    $D5B3   DRW      V5, VB, #3      ; Draw 3-byte sprite at V5, VB
$DB6    $D9EC   DRW      V9, VE, #C      ; Draw 12-byte sprite at V9, VE
$DB8    $30F1   SE       V0, #F1         ; Skip if V0 == 241
$DBA    $C948   RND      V9, #48         ; V9 = random & 48
$DBC    $7FD2   ADD      VF, #D2         ; Add 210 to VF
$DBE    $3DC6   SE       VD, #C6         ; Skip if VD == 198
$DC0    $B386   JP       V0, $386        ; Jump to V0 + 386
$DC2    $B752   JP       V0, $752        ; Jump to V0 + 752
$DC4    $84FB   UNKNOWN  84FB            ; Unknown 8xxx instruction
$DC6    $2AA1   CALL     $AA1            ; Call subroutine at AA1
$DC8    $453E   SNE      V5, #3E         ; Skip if V5 != 62
$DCA    $7270   ADD      V2, #70         ; Add 112 to V2
$DCC    $0B07   SYS      $B07            ; System call to B07
$DCE    $23BA   CALL     $3BA            ; Call subroutine at 3BA
$DD0    $4F6A   SNE      VF, #6A         ; Skip if VF != 106
$DD2    $B01E   JP       V0, $01E        ; Jump to V0 + 01E
$DD4    $9C11   UNKNOWN  $9C11           ; Unknown 9xxx instruction
$DD6    $6923   LD       V9, #23         ; Load 35 into V9
$DD8    $5351   UNKNOWN  $5351           ; Unknown 5xxx instruction
$DDA    $DF24   DRW      VF, V2, #4      ; Draw 4-byte sprite at VF, V2
$DDC    $5869   UNKNOWN  $5869           ; Unknown 5xxx instruction
$DDE    $0AF9   SYS      $AF9            ; System call to AF9
$DE0    $3D2C   SE       VD, #2C         ; Skip if VD == 44
$DE2    $43A1   SNE      V3, #A1         ; Skip if V3 != 161
$DE4    $E1D3   UNKNOWN  $E1D3           ; Unknown Exxx instruction
$DE6    $8876   SHR      V8              ; V8 >>= 1, VF = LSB
$DE8    $1934   JP       $934            ; Jump to 934
$DEA    $5E5E   UNKNOWN  $5E5E           ; Unknown 5xxx instruction
$DEC    $4649   SNE      V6, #49         ; Skip if V6 != 73
$DEE    $E117   UNKNOWN  $E117           ; Unknown Exxx instruction
$DF0    $ED2C   UNKNOWN  $ED2C           ; Unknown Exxx instruction
$DF2    $8DD7   SUBN     VD, VD          ; VD = VD - VD, VF = !borrow
$DF4    $D598   DRW      V5, V9, #8      ; Draw 8-byte sprite at V5, V9
$DF6    $835D   UNKNOWN  835D            ; Unknown 8xxx instruction
$DF8    $4463   SNE      V4, #63         ; Skip if V4 != 99
$DFA    $0C8F   SYS      $C8F            ; System call to C8F
$DFC    $B218   JP       V0, $218        ; Jump to V0 + 218
$DFE    $E222   UNKNOWN  $E222           ; Unknown Exxx instruction
$E00    $EF49   UNKNOWN  $EF49           ; Unknown Exxx instruction
$E02    $515C   UNKNOWN  $515C           ; Unknown 5xxx instruction
$E04    $4A99   SNE      VA, #99         ; Skip if VA != 153
$E06    $CC7A   RND      VC, #7A         ; VC = random & 7A
$E08    $91C3   UNKNOWN  $91C3           ; Unknown 9xxx instruction
$E0A    $4781   SNE      V7, #81         ; Skip if V7 != 129
$E0C    $8A2C   UNKNOWN  8A2C            ; Unknown 8xxx instruction
$E0E    $9E3D   UNKNOWN  $9E3D           ; Unknown 9xxx instruction
$E10    $A898   LD       I, $898         ; Load 898 into I
$E12    $7195   ADD      V1, #95         ; Add 149 to V1
$E14    $7598   ADD      V5, #98         ; Add 152 to V5
$E16    $FB5C   UNKNOWN  FB5C            ; Unknown Fxxx instruction
$E18    $0D2A   SYS      $D2A            ; System call to D2A
$E1A    $CAD5   RND      VA, #D5         ; VA = random & D5
$E1C    $A702   LD       I, $702         ; Load 702 into I
$E1E    $F175   UNKNOWN  F175            ; Unknown Fxxx instruction
$E20    $DA14   DRW      VA, V1, #4      ; Draw 4-byte sprite at VA, V1
$E22    $D4B7   DRW      V4, VB, #7      ; Draw 7-byte sprite at V4, VB
$E24    $5ED1   UNKNOWN  $5ED1           ; Unknown 5xxx instruction
$E26    $B2D2   JP       V0, $2D2        ; Jump to V0 + 2D2
$E28    $0DE1   SYS      $DE1            ; System call to DE1
$E2A    $C141   RND      V1, #41         ; V1 = random & 41
$E2C    $065F   SYS      $65F            ; System call to 65F
$E2E    $4670   SNE      V6, #70         ; Skip if V6 != 112
$E30    $3650   SE       V6, #50         ; Skip if V6 == 80
$E32    $AB64   LD       I, $B64         ; Load B64 into I
$E34    $59ED   UNKNOWN  $59ED           ; Unknown 5xxx instruction
$E36    $548B   UNKNOWN  $548B           ; Unknown 5xxx instruction
$E38    $CEE0   RND      VE, #E0         ; VE = random & E0
$E3A    $9E48   UNKNOWN  $9E48           ; Unknown 9xxx instruction
$E3C    $940F   UNKNOWN  $940F           ; Unknown 9xxx instruction
$E3E    $A4F3   LD       I, $4F3         ; Load 4F3 into I
$E40    $C469   RND      V4, #69         ; V4 = random & 69
$E42    $ECDD   UNKNOWN  $ECDD           ; Unknown Exxx instruction
$E44    $2D4B   CALL     $D4B            ; Call subroutine at D4B
$E46    $C2C1   RND      V2, #C1         ; V2 = random & C1
$E48    $E3CB   UNKNOWN  $E3CB           ; Unknown Exxx instruction
$E4A    $637A   LD       V3, #7A         ; Load 122 into V3
$E4C    $0E89   SYS      $E89            ; System call to E89
$E4E    $9B09   UNKNOWN  $9B09           ; Unknown 9xxx instruction
$E50    $6C41   LD       VC, #41         ; Load 65 into VC
$E52    $6C85   LD       VC, #85         ; Load 133 into VC
$E54    $5763   UNKNOWN  $5763           ; Unknown 5xxx instruction
$E56    $E8FB   UNKNOWN  $E8FB           ; Unknown Exxx instruction
$E58    $38B7   SE       V8, #B7         ; Skip if V8 == 183
$E5A    $539F   UNKNOWN  $539F           ; Unknown 5xxx instruction
$E5C    $77BC   ADD      V7, #BC         ; Add 188 to V7
$E5E    $8072   AND      V0, V7          ; V0 &= V7
$E60    $BE98   JP       V0, $E98        ; Jump to V0 + E98
$E62    $0EEE   SYS      $EEE            ; System call to EEE
$E64    $5875   UNKNOWN  $5875           ; Unknown 5xxx instruction
$E66    $8008   UNKNOWN  8008            ; Unknown 8xxx instruction
$E68    $84CB   UNKNOWN  84CB            ; Unknown 8xxx instruction
$E6A    $22C3   CALL     $2C3            ; Call subroutine at 2C3
$E6C    $233C   CALL     $33C            ; Call subroutine at 33C
$E6E    $6D17   LD       VD, #17         ; Load 23 into VD
$E70    $B806   JP       V0, $806        ; Jump to V0 + 806
$E72    $A65D   LD       I, $65D         ; Load 65D into I
$E74    $551C   UNKNOWN  $551C           ; Unknown 5xxx instruction
$E76    $EA0E   UNKNOWN  $EA0E           ; Unknown Exxx instruction
$E78    $D4A3   DRW      V4, VA, #3      ; Draw 3-byte sprite at V4, VA
$E7A    $CEE3   RND      VE, #E3         ; VE = random & E3
$E7C    $4337   SNE      V3, #37         ; Skip if V3 != 55
$E7E    $1D37   JP       $D37            ; Jump to D37
$E80    $38FD   SE       V8, #FD         ; Skip if V8 == 253
$E82    $E174   UNKNOWN  $E174           ; Unknown Exxx instruction
$E84    $6311   LD       V3, #11         ; Load 17 into V3
$E86    $3B17   SE       VB, #17         ; Skip if VB == 23
$E88    $A670   LD       I, $670         ; Load 670 into I
$E8A    $6596   LD       V5, #96         ; Load 150 into V5
$E8C    $2699   CALL     $699            ; Call subroutine at 699
$E8E    $20C8   CALL     $0C8            ; Call subroutine at 0C8
$E90    $D2AE   DRW      V2, VA, #E      ; Draw 14-byte sprite at V2, VA
$E92    $E205   UNKNOWN  $E205           ; Unknown Exxx instruction
$E94    $3DF5   SE       VD, #F5         ; Skip if VD == 245
$E96    $00C5   SYS      $0C5            ; System call to 0C5
$E98    $8323   XOR      V3, V2          ; V3 ^= V2
$E9A    $511A   UNKNOWN  $511A           ; Unknown 5xxx instruction
$E9C    $3393   SE       V3, #93         ; Skip if V3 == 147
$E9E    $26EB   CALL     $6EB            ; Call subroutine at 6EB
$EA0    $5749   UNKNOWN  $5749           ; Unknown 5xxx instruction
$EA2    $8894   ADD      V8, V9          ; V8 += V9, VF = carry
$EA4    $C6F9   RND      V6, #F9         ; V6 = random & F9
$EA6    $F9A5   UNKNOWN  F9A5            ; Unknown Fxxx instruction
$EA8    $789E   ADD      V8, #9E         ; Add 158 to V8
$EAA    $F17E   UNKNOWN  F17E            ; Unknown Fxxx instruction
$EAC    $B49A   JP       V0, $49A        ; Jump to V0 + 49A
$EAE    $309D   SE       V0, #9D         ; Skip if V0 == 157
$EB0    $2495   CALL     $495            ; Call subroutine at 495
$EB2    $B2E8   JP       V0, $2E8        ; Jump to V0 + 2E8
$EB4    $776C   ADD      V7, #6C         ; Add 108 to V7
$EB6    $C13C   RND      V1, #3C         ; V1 = random & 3C
$EB8    $CEFC   RND      VE, #FC         ; VE = random & FC
$EBA    $D3C4   DRW      V3, VC, #4      ; Draw 4-byte sprite at V3, VC
$EBC    $88F9   UNKNOWN  88F9            ; Unknown 8xxx instruction
$EBE    $4E46   SNE      VE, #46         ; Skip if VE != 70
$EC0    $5AE9   UNKNOWN  $5AE9           ; Unknown 5xxx instruction
$EC2    $450B   SNE      V5, #0B         ; Skip if V5 != 11
$EC4    $C316   RND      V3, #16         ; V3 = random & 16
$EC6    $23C1   CALL     $3C1            ; Call subroutine at 3C1
$EC8    $7929   ADD      V9, #29         ; Add 41 to V9
$ECA    $893B   UNKNOWN  893B            ; Unknown 8xxx instruction
$ECC    $92D9   UNKNOWN  $92D9           ; Unknown 9xxx instruction
$ECE    $0878   SYS      $878            ; System call to 878
$ED0    $4994   SNE      V9, #94         ; Skip if V9 != 148
$ED2    $3CA2   SE       VC, #A2         ; Skip if VC == 162
$ED4    $0AF8   SYS      $AF8            ; System call to AF8
$ED6    $2C79   CALL     $C79            ; Call subroutine at C79
$ED8    $B188   JP       V0, $188        ; Jump to V0 + 188
$EDA    $2419   CALL     $419            ; Call subroutine at 419
$EDC    $673C   LD       V7, #3C         ; Load 60 into V7
$EDE    $46A7   SNE      V6, #A7         ; Skip if V6 != 167
$EE0    $27F0   CALL     $7F0            ; Call subroutine at 7F0
$EE2    $2AAB   CALL     $AAB            ; Call subroutine at AAB
$EE4    $D9AD   DRW      V9, VA, #D      ; Draw 13-byte sprite at V9, VA
$EE6    $388E   SE       V8, #8E         ; Skip if V8 == 142
$EE8    $C1E9   RND      V1, #E9         ; V1 = random & E9
$EEA    $310C   SE       V1, #0C         ; Skip if V1 == 12
$EEC    $09A0   SYS      $9A0            ; System call to 9A0
$EEE    $8C49   UNKNOWN  8C49            ; Unknown 8xxx instruction
$EF0    $E69C   UNKNOWN  $E69C           ; Unknown Exxx instruction
$EF2    $E548   UNKNOWN  $E548           ; Unknown Exxx instruction
$EF4    $90AD   UNKNOWN  $90AD           ; Unknown 9xxx instruction
$EF6    $41F9   SNE      V1, #F9         ; Skip if V1 != 249
$EF8    $0AC7   SYS      $AC7            ; System call to AC7
$EFA    $440C   SNE      V4, #0C         ; Skip if V4 != 12
$EFC    $E156   UNKNOWN  $E156           ; Unknown Exxx instruction
$EFE    $1FC7   JP       $FC7            ; Jump to FC7
$F00    $4D78   SNE      VD, #78         ; Skip if VD != 120
$F02    $8809   UNKNOWN  8809            ; Unknown 8xxx instruction
$F04    $50F8   UNKNOWN  $50F8           ; Unknown 5xxx instruction
$F06    $1A04   JP       $A04            ; Jump to A04
$F08    $DC19   DRW      VC, V1, #9      ; Draw 9-byte sprite at VC, V1
$F0A    $6CFF   LD       VC, #FF         ; Load 255 into VC
$F0C    $C502   RND      V5, #02         ; V5 = random & 02
$F0E    $06FF   SYS      $6FF            ; System call to 6FF
$F10    $F891   UNKNOWN  F891            ; Unknown Fxxx instruction
$F12    $763E   ADD      V6, #3E         ; Add 62 to V6
$F14    $AE5C   LD       I, $E5C         ; Load E5C into I
$F16    $D0DF   DRW      V0, VD, #F      ; Draw 15-byte sprite at V0, VD
$F18    $BBB5   JP       V0, $BB5        ; Jump to V0 + BB5
$F1A    $EE6D   UNKNOWN  $EE6D           ; Unknown Exxx instruction
$F1C    $185D   JP       $85D            ; Jump to 85D
$F1E    $4E36   SNE      VE, #36         ; Skip if VE != 54
$F20    $64EC   LD       V4, #EC         ; Load 236 into V4
$F22    $3E1C   SE       VE, #1C         ; Skip if VE == 28
$F24    $DCF1   DRW      VC, VF, #1      ; Draw 1-byte sprite at VC, VF
$F26    $888F   UNKNOWN  888F            ; Unknown 8xxx instruction
$F28    $61D2   LD       V1, #D2         ; Load 210 into V1
$F2A    $7A4A   ADD      VA, #4A         ; Add 74 to VA
$F2C    $66C9   LD       V6, #C9         ; Load 201 into V6
$F2E    $B40C   JP       V0, $40C        ; Jump to V0 + 40C
$F30    $2A80   CALL     $A80            ; Call subroutine at A80
$F32    $E5B1   UNKNOWN  $E5B1           ; Unknown Exxx instruction
$F34    $26B2   CALL     $6B2            ; Call subroutine at 6B2
$F36    $E69C   UNKNOWN  $E69C           ; Unknown Exxx instruction
$F38    $ADA0   LD       I, $DA0         ; Load DA0 into I
$F3A    $3ED3   SE       VE, #D3         ; Skip if VE == 211
$F3C    $5A18   UNKNOWN  $5A18           ; Unknown 5xxx instruction
$F3E    $1310   JP       $310            ; Jump to 310
$F40    $7502   ADD      V5, #02         ; Add 2 to V5
$F42    $23DD   CALL     $3DD            ; Call subroutine at 3DD
$F44    $D8A4   DRW      V8, VA, #4      ; Draw 4-byte sprite at V8, VA
$F46    $E7B3   UNKNOWN  $E7B3           ; Unknown Exxx instruction
$F48    $8B03   XOR      VB, V0          ; VB ^= V0
$F4A    $1350   JP       $350            ; Jump to 350
$F4C    $3825   SE       V8, #25         ; Skip if V8 == 37
$F4E    $2013   CALL     $013            ; Call subroutine at 013
$F50    $76FE   ADD      V6, #FE         ; Add 254 to V6
$F52    $25EC   CALL     $5EC            ; Call subroutine at 5EC
$F54    $6CB0   LD       VC, #B0         ; Load 176 into VC
$F56    $EB7C   UNKNOWN  $EB7C           ; Unknown Exxx instruction
$F58    $5847   UNKNOWN  $5847           ; Unknown 5xxx instruction
$F5A    $0ABB   SYS      $ABB            ; System call to ABB
$F5C    $5F48   UNKNOWN  $5F48           ; Unknown 5xxx instruction
$F5E    $96F0   SNE      V6, VF          ; Skip if V6 != VF
$F60    $59C8   UNKNOWN  $59C8           ; Unknown 5xxx instruction
$F62    $EEA3   UNKNOWN  $EEA3           ; Unknown Exxx instruction
$F64    $1049   JP       $049            ; Jump to 049
$F66    $531B   UNKNOWN  $531B           ; Unknown 5xxx instruction
$F68    $713C   ADD      V1, #3C         ; Add 60 to V1
$F6A    $1DC5   JP       $DC5            ; Jump to DC5
$F6C    $73EC   ADD      V3, #EC         ; Add 236 to V3
$F6E    $3408   SE       V4, #08         ; Skip if V4 == 8
$F70    $C4C0   RND      V4, #C0         ; V4 = random & C0
$F72    $D1A2   DRW      V1, VA, #2      ; Draw 2-byte sprite at V1, VA
$F74    $1A85   JP       $A85            ; Jump to A85
$F76    $28FB   CALL     $8FB            ; Call subroutine at 8FB
$F78    $4ABD   SNE      VA, #BD         ; Skip if VA != 189
$F7A    $9A0F   UNKNOWN  $9A0F           ; Unknown 9xxx instruction
$F7C    $A08E   LD       I, $08E         ; Load 08E into I
$F7E    $8932   AND      V9, V3          ; V9 &= V3
$F80    $4732   SNE      V7, #32         ; Skip if V7 != 50
$F82    $01FC   SYS      $1FC            ; System call to 1FC
$F84    $BE9F   JP       V0, $E9F        ; Jump to V0 + E9F
$F86    $827D   UNKNOWN  827D            ; Unknown 8xxx instruction
$F88    $86E7   SUBN     V6, VE          ; V6 = VE - V6, VF = !borrow
$F8A    $6812   LD       V8, #12         ; Load 18 into V8
$F8C    $C499   RND      V4, #99         ; V4 = random & 99
$F8E    $E81B   UNKNOWN  $E81B           ; Unknown Exxx instruction
$F90    $0500   SYS      $500            ; System call to 500
$F92    $5FED   UNKNOWN  $5FED           ; Unknown 5xxx instruction
$F94    $2540   CALL     $540            ; Call subroutine at 540
$F96    $61A5   LD       V1, #A5         ; Load 165 into V1
$F98    $D3CA   DRW      V3, VC, #A      ; Draw 10-byte sprite at V3, VC
$F9A    $2278   CALL     $278            ; Call subroutine at 278
$F9C    $923A   UNKNOWN  $923A           ; Unknown 9xxx instruction
$F9E    $1006   JP       $006            ; Jump to 006
$FA0    $17B9   JP       $7B9            ; Jump to 7B9
$FA2    $29BB   CALL     $9BB            ; Call subroutine at 9BB
$FA4    $31F5   SE       V1, #F5         ; Skip if V1 == 245
$FA6    $65FE   LD       V5, #FE         ; Load 254 into V5
$FA8    $FDEF   UNKNOWN  FDEF            ; Unknown Fxxx instruction
$FAA    $65DB   LD       V5, #DB         ; Load 219 into V5
$FAC    $12D7   JP       $2D7            ; Jump to 2D7
$FAE    $5BC6   UNKNOWN  $5BC6           ; Unknown 5xxx instruction
$FB0    $111D   JP       $11D            ; Jump to 11D
$FB2    $D85E   DRW      V8, V5, #E      ; Draw 14-byte sprite at V8, V5
$FB4    $C177   RND      V1, #77         ; V1 = random & 77
$FB6    $4AB6   SNE      VA, #B6         ; Skip if VA != 182
$FB8    $5DEE   UNKNOWN  $5DEE           ; Unknown 5xxx instruction
$FBA    $A1FA   LD       I, $1FA         ; Load 1FA into I
$FBC    $37E0   SE       V7, #E0         ; Skip if V7 == 224
$FBE    $B708   JP       V0, $708        ; Jump to V0 + 708
$FC0    $9E74   UNKNOWN  $9E74           ; Unknown 9xxx instruction
$FC2    $9A6B   UNKNOWN  $9A6B           ; Unknown 9xxx instruction
$FC4    $1AF5   JP       $AF5            ; Jump to AF5
$FC6    $CDDD   RND      VD, #DD         ; VD = random & DD
$FC8    $7BD3   ADD      VB, #D3         ; Add 211 to VB
$FCA    $5E66   UNKNOWN  $5E66           ; Unknown 5xxx instruction
$FCC    $179C   JP       $79C            ; Jump to 79C
$FCE    $B3BE   JP       V0, $3BE        ; Jump to V0 + 3BE
$FD0    $68EA   LD       V8, #EA         ; Load 234 into V8
$FD2    $F0A4   UNKNOWN  F0A4            ; Unknown Fxxx instruction
$FD4    $4D9F   SNE      VD, #9F         ; Skip if VD != 159
$FD6    $8F04   ADD      VF, V0          ; VF += V0, VF = carry
$FD8    $C544   RND      V5, #44         ; V5 = random & 44
$FDA    $AE8F   LD       I, $E8F         ; Load E8F into I
$FDC    $3325   SE       V3, #25         ; Skip if V3 == 37
$FDE    $7A63   ADD      VA, #63         ; Add 99 to VA
$FE0    $A7B7   LD       I, $7B7         ; Load 7B7 into I
$FE2    $BDA3   JP       V0, $DA3        ; Jump to V0 + DA3
$FE4    $E24F   UNKNOWN  $E24F           ; Unknown Exxx instruction
$FE6    $259D   CALL     $59D            ; Call subroutine at 59D
$FE8    $0862   SYS      $862            ; System call to 862
$FEA    $1251   JP       $251            ; Jump to 251
$FEC    $9B82   UNKNOWN  $9B82           ; Unknown 9xxx instruction
$FEE    $BBE2   JP       V0, $BE2        ; Jump to V0 + BE2
$FF0    $CD97   RND      VD, #97         ; VD = random & 97
$FF2    $7F19   ADD      VF, #19         ; Add 25 to VF
$FF4    $9385   UNKNOWN  $9385           ; Unknown 9xxx instruction
$FF6    $93A2   UNKNOWN  $93A2           ; Unknown 9xxx instruction
$FF8    $E40F   UNKNOWN  $E40F           ; Unknown Exxx instruction
$FFA    $B1F1   JP       V0, $1F1        ; Jump to V0 + 1F1
$FFC    $8D4A   UNKNOWN  8D4A            ; Unknown 8xxx instruction
$FFE    $F7D9   UNKNOWN  F7D9            ; Unknown Fxxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 469 (26.2%)
  JP      : 227 (12.7%)
  LD      : 221 (12.3%)
  SE      : 132 ( 7.4%)
  RND     : 124 ( 6.9%)
  SNE     : 122 ( 6.8%)
  CALL    : 115 ( 6.4%)
  SYS     : 114 ( 6.4%)
  DRW     : 112 ( 6.3%)
  ADD     : 104 ( 5.8%)
  AND     :  13 ( 0.7%)
  XOR     :   9 ( 0.5%)
  SHL     :   8 ( 0.4%)
  SHR     :   8 ( 0.4%)
  SUBN    :   6 ( 0.3%)
  SUB     :   4 ( 0.2%)
  OR      :   3 ( 0.2%)

Memory Operations: 325 (18.1%)
Arithmetic Operations: 139 (7.8%)
