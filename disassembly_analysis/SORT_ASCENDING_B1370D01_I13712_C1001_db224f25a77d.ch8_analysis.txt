
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B1370D01_I13712_C1001_db224f25a77d.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 1370
Instance: 13712
Direction: ascending
Final Array: [31, 55, 99, 137, 144, 197, 202, 209]
Operations: R:0 W:8 C:20 S:1

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 121
Sort Array References:
  $20E: LD I, $913 ; Load 913 into I
  $210: LD I, $B83 ; Load B83 into I
  $21A: LD I, $F9A ; Load F9A into I
  $232: LD I, $BF0 ; Load BF0 into I
  $24A: LD I, $87B ; Load 87B into I
  $250: LD I, $A0A ; Load A0A into I
  $26E: LD I, $36F ; Load 36F into I
  $276: LD I, $D21 ; Load D21 into I
  $314: LD I, $CFA ; Load CFA into I
  $32A: LD I, $A3A ; Load A3A into I
  $382: LD I, $B4B ; Load B4B into I
  $3BA: LD I, $8C6 ; Load 8C6 into I
  $3CC: LD I, $83A ; Load 83A into I
  $3E6: LD I, $F5E ; Load F5E into I
  $402: LD I, $1FB ; Load 1FB into I
  $408: LD I, $1DD ; Load 1DD into I
  $40C: LD I, $7DD ; Load 7DD into I
  $44E: LD I, $195 ; Load 195 into I
  $4C6: LD I, $5E6 ; Load 5E6 into I
  $4DE: LD I, $29C ; Load 29C into I
  $4E0: LD I, $C73 ; Load C73 into I
  $4E6: LD I, $4A4 ; Load 4A4 into I
  $4E8: LD I, $BF2 ; Load BF2 into I
  $4EA: LD I, $D37 ; Load D37 into I
  $50C: LD I, $2C3 ; Load 2C3 into I
  $50E: LD I, $DB6 ; Load DB6 into I
  $514: LD I, $49C ; Load 49C into I
  $52C: LD I, $E94 ; Load E94 into I
  $57E: LD I, $0C0 ; Load 0C0 into I
  $5CA: LD I, $CC6 ; Load CC6 into I
  $5E2: LD I, $2FA ; Load 2FA into I
  $604: LD I, $D35 ; Load D35 into I
  $622: LD I, $6A6 ; Load 6A6 into I
  $62A: LD I, $4CF ; Load 4CF into I
  $63E: LD I, $1E0 ; Load 1E0 into I
  $64A: LD I, $456 ; Load 456 into I
  $668: LD I, $054 ; Load 054 into I
  $676: LD I, $B58 ; Load B58 into I
  $68C: LD I, $CE0 ; Load CE0 into I
  $69A: LD I, $0FE ; Load 0FE into I
  $700: LD I, $3C0 ; Load 3C0 into I
  $70E: LD I, $559 ; Load 559 into I
  $714: LD I, $CA5 ; Load CA5 into I
  $748: LD I, $731 ; Load 731 into I
  $76C: LD I, $F86 ; Load F86 into I
  $77A: LD I, $26F ; Load 26F into I
  $790: LD I, $BB4 ; Load BB4 into I
  $7B0: LD I, $D91 ; Load D91 into I
  $7BA: LD I, $A38 ; Load A38 into I
  $7C4: LD I, $0FD ; Load 0FD into I
  $7F4: LD I, $C54 ; Load C54 into I
  $80A: LD I, $65A ; Load 65A into I
  $81A: LD I, $DD3 ; Load DD3 into I
  $828: LD I, $635 ; Load 635 into I
  $846: LD I, $E5A ; Load E5A into I
  $874: LD I, $2FC ; Load 2FC into I
  $892: LD I, $238 ; Load 238 into I
  $8A8: LD I, $823 ; Load 823 into I
  $8AC: LD I, $DF2 ; Load DF2 into I
  $8DA: LD I, $B60 ; Load B60 into I
  $8E6: LD I, $D51 ; Load D51 into I
  $928: LD I, $408 ; Load 408 into I
  $92E: LD I, $841 ; Load 841 into I
  $930: LD I, $BCC ; Load BCC into I
  $968: LD I, $073 ; Load 073 into I
  $97A: LD I, $99E ; Load 99E into I
  $994: LD I, $0EB ; Load 0EB into I
  $9BC: LD I, $30F ; Load 30F into I
  $9D0: LD I, $0FC ; Load 0FC into I
  $9FA: LD I, $31F ; Load 31F into I
  $A08: LD I, $FD9 ; Load FD9 into I
  $A0E: LD I, $6B5 ; Load 6B5 into I
  $A5E: LD I, $FF8 ; Load FF8 into I
  $A7E: LD I, $AEB ; Load AEB into I
  $A94: LD I, $188 ; Load 188 into I
  $AA8: LD I, $9F9 ; Load 9F9 into I
  $AF6: LD I, $120 ; Load 120 into I
  $B02: LD I, $05C ; Load 05C into I
  $B14: LD I, $64D ; Load 64D into I
  $B1A: LD I, $704 ; Load 704 into I
  $B1C: LD I, $E4D ; Load E4D into I
  $B1E: LD I, $7B9 ; Load 7B9 into I
  $B5A: LD I, $93E ; Load 93E into I
  $C02: LD I, $EEE ; Load EEE into I
  $C06: LD I, $F65 ; Load F65 into I
  $C1A: LD I, $B34 ; Load B34 into I
  $C1C: LD I, $EDB ; Load EDB into I
  $C5E: LD I, $13D ; Load 13D into I
  $C7A: LD I, $DE6 ; Load DE6 into I
  $CB4: LD I, $6EF ; Load 6EF into I
  $CDE: LD I, $147 ; Load 147 into I
  $CF6: LD I, $43A ; Load 43A into I
  $D42: LD I, $312 ; Load 312 into I
  $D4E: LD I, $B60 ; Load B60 into I
  $D62: LD I, $522 ; Load 522 into I
  $D64: LD I, $5E3 ; Load 5E3 into I
  $D88: LD I, $D71 ; Load D71 into I
  $DA6: LD I, $05A ; Load 05A into I
  $DB2: LD I, $7C0 ; Load 7C0 into I
  $DC2: LD I, $157 ; Load 157 into I
  $DF2: LD I, $DB6 ; Load DB6 into I
  $E1C: LD I, $969 ; Load 969 into I
  $E5A: LD I, $0C5 ; Load 0C5 into I
  $E7A: LD I, $AEB ; Load AEB into I
  $E94: LD I, $4E3 ; Load 4E3 into I
  $EA0: LD I, $EFD ; Load EFD into I
  $EB0: LD I, $8EF ; Load 8EF into I
  $EC0: LD I, $826 ; Load 826 into I
  $EC2: LD I, $796 ; Load 796 into I
  $EE0: LD I, $B4D ; Load B4D into I
  $EF6: LD I, $975 ; Load 975 into I
  $F00: LD I, $A8F ; Load A8F into I
  $F0C: LD I, $92B ; Load 92B into I
  $F14: LD I, $2BC ; Load 2BC into I
  $F6A: LD I, $D9A ; Load D9A into I
  $F6C: LD I, $1BD ; Load 1BD into I
  $F70: LD I, $360 ; Load 360 into I
  $F82: LD I, $279 ; Load 279 into I
  $F84: LD I, $294 ; Load 294 into I
  $F8C: LD I, $593 ; Load 593 into I
  $FFE: LD I, $6CB ; Load 6CB into I

CONTROL FLOW ANALYSIS:
Jumps: 242
Calls: 103
Branches: 242
Loops: 137
Loop Structures:
  $234 -> $016 (backward jump)
  $2C0 -> $146 (backward jump)
  $2D0 -> $228 (backward jump)
  $31A -> $0B6 (backward jump)
  $348 -> $1AD (backward jump)
  $358 -> $25A (backward jump)
  $3BE -> $29E (backward jump)
  $3C0 -> $2A6 (backward jump)
  $49C -> $245 (backward jump)
  $4BA -> $4B7 (backward jump)
  $4E4 -> $111 (backward jump)
  $4F4 -> $10A (backward jump)
  $57A -> $106 (backward jump)
  $5BE -> $047 (backward jump)
  $5CE -> $16E (backward jump)
  $5EE -> $11F (backward jump)
  $628 -> $0AC (backward jump)
  $62E -> $0C3 (backward jump)
  $648 -> $600 (backward jump)
  $65E -> $0E2 (backward jump)
  $69C -> $3BC (backward jump)
  $6B8 -> $1F7 (backward jump)
  $73E -> $21F (backward jump)
  $77E -> $6D6 (backward jump)
  $79E -> $64E (backward jump)
  $7D4 -> $4FB (backward jump)
  $7F0 -> $3DF (backward jump)
  $812 -> $449 (backward jump)
  $826 -> $052 (backward jump)
  $82E -> $612 (backward jump)
  $83C -> $2B4 (backward jump)
  $89E -> $1A7 (backward jump)
  $8A2 -> $527 (backward jump)
  $8B4 -> $7D3 (backward jump)
  $8BC -> $205 (backward jump)
  $8BE -> $288 (backward jump)
  $8CC -> $497 (backward jump)
  $8CE -> $3BE (backward jump)
  $914 -> $5B7 (backward jump)
  $920 -> $52B (backward jump)
  $95C -> $1AA (backward jump)
  $972 -> $10B (backward jump)
  $974 -> $0DC (backward jump)
  $984 -> $68C (backward jump)
  $992 -> $044 (backward jump)
  $9A2 -> $3A2 (backward jump)
  $9D8 -> $2F1 (backward jump)
  $9DA -> $325 (backward jump)
  $9F0 -> $015 (backward jump)
  $9F8 -> $9B3 (backward jump)
  $A00 -> $01B (backward jump)
  $A1A -> $05A (backward jump)
  $A34 -> $09A (backward jump)
  $A46 -> $13C (backward jump)
  $A54 -> $7B5 (backward jump)
  $A56 -> $533 (backward jump)
  $A6C -> $130 (backward jump)
  $A76 -> $06B (backward jump)
  $A9C -> $74F (backward jump)
  $AAC -> $17D (backward jump)
  $AC0 -> $8DF (backward jump)
  $AC8 -> $74B (backward jump)
  $AFA -> $6BD (backward jump)
  $B00 -> $428 (backward jump)
  $B06 -> $772 (backward jump)
  $B18 -> $13B (backward jump)
  $B20 -> $97B (backward jump)
  $B26 -> $062 (backward jump)
  $B30 -> $05D (backward jump)
  $B3E -> $23B (backward jump)
  $B60 -> $4E3 (backward jump)
  $B7A -> $B79 (backward jump)
  $B96 -> $220 (backward jump)
  $BAC -> $3AC (backward jump)
  $BB0 -> $438 (backward jump)
  $BB4 -> $374 (backward jump)
  $BFA -> $A7F (backward jump)
  $BFC -> $75A (backward jump)
  $C14 -> $227 (backward jump)
  $C16 -> $843 (backward jump)
  $C1E -> $195 (backward jump)
  $C48 -> $6AD (backward jump)
  $C50 -> $3D0 (backward jump)
  $C56 -> $3B5 (backward jump)
  $C92 -> $223 (backward jump)
  $C9C -> $B39 (backward jump)
  $CB2 -> $B61 (backward jump)
  $CCC -> $4E0 (backward jump)
  $CD2 -> $A71 (backward jump)
  $CE0 -> $575 (backward jump)
  $CF2 -> $0F7 (backward jump)
  $CF4 -> $833 (backward jump)
  $D18 -> $840 (backward jump)
  $D2E -> $1B0 (backward jump)
  $D3A -> $187 (backward jump)
  $D58 -> $324 (backward jump)
  $D5E -> $D0C (backward jump)
  $D6E -> $406 (backward jump)
  $D8A -> $215 (backward jump)
  $D8E -> $2BB (backward jump)
  $DBE -> $728 (backward jump)
  $DE8 -> $AC5 (backward jump)
  $DEA -> $045 (backward jump)
  $E36 -> $879 (backward jump)
  $E3E -> $D01 (backward jump)
  $E70 -> $45C (backward jump)
  $E7C -> $4DB (backward jump)
  $E84 -> $659 (backward jump)
  $E96 -> $8BF (backward jump)
  $EA4 -> $1B8 (backward jump)
  $EAA -> $02C (backward jump)
  $EAC -> $5B3 (backward jump)
  $EAE -> $803 (backward jump)
  $EB4 -> $BF2 (backward jump)
  $EBC -> $479 (backward jump)
  $ECE -> $BCF (backward jump)
  $ED6 -> $EBE (backward jump)
  $EEC -> $3F4 (backward jump)
  $EEE -> $900 (backward jump)
  $EF2 -> $265 (backward jump)
  $EF4 -> $860 (backward jump)
  $EF8 -> $116 (backward jump)
  $F1C -> $12A (backward jump)
  $F22 -> $E88 (backward jump)
  $F2A -> $A83 (backward jump)
  $F64 -> $242 (backward jump)
  $F72 -> $6B8 (backward jump)
  $F7A -> $EFA (backward jump)
  $FA4 -> $AAF (backward jump)
  $FAA -> $41D (backward jump)
  $FB0 -> $1A7 (backward jump)
  $FBA -> $673 (backward jump)
  $FBC -> $A8D (backward jump)
  $FCE -> $745 (backward jump)
  $FE2 -> $395 (backward jump)
  $FE8 -> $F4D (backward jump)
  $FF6 -> $FE6 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $7BB7   ADD      VB, #B7         ; Add 183 to VB
$202    $1616   JP       $616            ; Jump to 616
$204    $2770   CALL     $770            ; Call subroutine at 770
$206    $B8CC   JP       V0, $8CC        ; Jump to V0 + 8CC
$208    $4981   SNE      V9, #81         ; Skip if V9 != 129
$20A    $58CD   UNKNOWN  $58CD           ; Unknown 5xxx instruction
$20C    $E163   UNKNOWN  $E163           ; Unknown Exxx instruction
$20E    $A913   LD       I, $913         ; Load 913 into I
$210    $AB83   LD       I, $B83         ; Load B83 into I
$212    $4304   SNE      V3, #04         ; Skip if V3 != 4
$214    $9A39   UNKNOWN  $9A39           ; Unknown 9xxx instruction
$216    $41EC   SNE      V1, #EC         ; Skip if V1 != 236
$218    $B43C   JP       V0, $43C        ; Jump to V0 + 43C
$21A    $AF9A   LD       I, $F9A         ; Load F9A into I
$21C    $C362   RND      V3, #62         ; V3 = random & 62
$21E    $20B0   CALL     $0B0            ; Call subroutine at 0B0
$220    $9C1E   UNKNOWN  $9C1E           ; Unknown 9xxx instruction
$222    $C14A   RND      V1, #4A         ; V1 = random & 4A
$224    $8AF1   OR       VA, VF          ; VA |= VF
$226    $0EE4   SYS      $EE4            ; System call to EE4
$228    $6A59   LD       VA, #59         ; Load 89 into VA
$22A    $CD92   RND      VD, #92         ; VD = random & 92
$22C    $2EDD   CALL     $EDD            ; Call subroutine at EDD
$22E    $FB2F   UNKNOWN  FB2F            ; Unknown Fxxx instruction
$230    $542A   UNKNOWN  $542A           ; Unknown 5xxx instruction
$232    $ABF0   LD       I, $BF0         ; Load BF0 into I
$234    $B016   JP       V0, $016        ; Jump to V0 + 016
$236    $BA9F   JP       V0, $A9F        ; Jump to V0 + A9F
$238    $22D7   CALL     $2D7            ; Call subroutine at 2D7
$23A    $1313   JP       $313            ; Jump to 313
$23C    $1AD6   JP       $AD6            ; Jump to AD6
$23E    $0D80   SYS      $D80            ; System call to D80
$240    $D567   DRW      V5, V6, #7      ; Draw 7-byte sprite at V5, V6
$242    $E79B   UNKNOWN  $E79B           ; Unknown Exxx instruction
$244    $E3F9   UNKNOWN  $E3F9           ; Unknown Exxx instruction
$246    $F5AC   UNKNOWN  F5AC            ; Unknown Fxxx instruction
$248    $3F46   SE       VF, #46         ; Skip if VF == 70
$24A    $A87B   LD       I, $87B         ; Load 87B into I
$24C    $B7CE   JP       V0, $7CE        ; Jump to V0 + 7CE
$24E    $CCBE   RND      VC, #BE         ; VC = random & BE
$250    $AA0A   LD       I, $A0A         ; Load A0A into I
$252    $6810   LD       V8, #10         ; Load 16 into V8
$254    $5908   UNKNOWN  $5908           ; Unknown 5xxx instruction
$256    $FB10   UNKNOWN  FB10            ; Unknown Fxxx instruction
$258    $5289   UNKNOWN  $5289           ; Unknown 5xxx instruction
$25A    $8C33   XOR      VC, V3          ; VC ^= V3
$25C    $1A41   JP       $A41            ; Jump to A41
$25E    $CF94   RND      VF, #94         ; VF = random & 94
$260    $74F5   ADD      V4, #F5         ; Add 245 to V4
$262    $88BD   UNKNOWN  88BD            ; Unknown 8xxx instruction
$264    $CF68   RND      VF, #68         ; VF = random & 68
$266    $4C2D   SNE      VC, #2D         ; Skip if VC != 45
$268    $D54B   DRW      V5, V4, #B      ; Draw 11-byte sprite at V5, V4
$26A    $CA7F   RND      VA, #7F         ; VA = random & 7F
$26C    $556E   UNKNOWN  $556E           ; Unknown 5xxx instruction
$26E    $A36F   LD       I, $36F         ; Load 36F into I
$270    $3134   SE       V1, #34         ; Skip if V1 == 52
$272    $09FE   SYS      $9FE            ; System call to 9FE
$274    $57C3   UNKNOWN  $57C3           ; Unknown 5xxx instruction
$276    $AD21   LD       I, $D21         ; Load D21 into I
$278    $690A   LD       V9, #0A         ; Load 10 into V9
$27A    $1E71   JP       $E71            ; Jump to E71
$27C    $DEDB   DRW      VE, VD, #B      ; Draw 11-byte sprite at VE, VD
$27E    $5D86   UNKNOWN  $5D86           ; Unknown 5xxx instruction
$280    $EA8A   UNKNOWN  $EA8A           ; Unknown Exxx instruction
$282    $E7F2   UNKNOWN  $E7F2           ; Unknown Exxx instruction
$284    $B9E5   JP       V0, $9E5        ; Jump to V0 + 9E5
$286    $E5C9   UNKNOWN  $E5C9           ; Unknown Exxx instruction
$288    $E328   UNKNOWN  $E328           ; Unknown Exxx instruction
$28A    $9D87   UNKNOWN  $9D87           ; Unknown 9xxx instruction
$28C    $C061   RND      V0, #61         ; V0 = random & 61
$28E    $293B   CALL     $93B            ; Call subroutine at 93B
$290    $956C   UNKNOWN  $956C           ; Unknown 9xxx instruction
$292    $710B   ADD      V1, #0B         ; Add 11 to V1
$294    $D8CC   DRW      V8, VC, #C      ; Draw 12-byte sprite at V8, VC
$296    $1DB4   JP       $DB4            ; Jump to DB4
$298    $D985   DRW      V9, V8, #5      ; Draw 5-byte sprite at V9, V8
$29A    $0849   SYS      $849            ; System call to 849
$29C    $E089   UNKNOWN  $E089           ; Unknown Exxx instruction
$29E    $2051   CALL     $051            ; Call subroutine at 051
$2A0    $FA20   UNKNOWN  FA20            ; Unknown Fxxx instruction
$2A2    $13A7   JP       $3A7            ; Jump to 3A7
$2A4    $C1D9   RND      V1, #D9         ; V1 = random & D9
$2A6    $2D1C   CALL     $D1C            ; Call subroutine at D1C
$2A8    $F3E9   UNKNOWN  F3E9            ; Unknown Fxxx instruction
$2AA    $551B   UNKNOWN  $551B           ; Unknown 5xxx instruction
$2AC    $3AC6   SE       VA, #C6         ; Skip if VA == 198
$2AE    $BD48   JP       V0, $D48        ; Jump to V0 + D48
$2B0    $07E0   SYS      $7E0            ; System call to 7E0
$2B2    $D493   DRW      V4, V9, #3      ; Draw 3-byte sprite at V4, V9
$2B4    $6C22   LD       VC, #22         ; Load 34 into VC
$2B6    $2809   CALL     $809            ; Call subroutine at 809
$2B8    $3B03   SE       VB, #03         ; Skip if VB == 3
$2BA    $53D5   UNKNOWN  $53D5           ; Unknown 5xxx instruction
$2BC    $C41E   RND      V4, #1E         ; V4 = random & 1E
$2BE    $9494   UNKNOWN  $9494           ; Unknown 9xxx instruction
$2C0    $1146   JP       $146            ; Jump to 146
$2C2    $6463   LD       V4, #63         ; Load 99 into V4
$2C4    $1329   JP       $329            ; Jump to 329
$2C6    $EB07   UNKNOWN  $EB07           ; Unknown Exxx instruction
$2C8    $4131   SNE      V1, #31         ; Skip if V1 != 49
$2CA    $5110   SE       V1, V1          ; Skip if V1 == V1
$2CC    $1FE8   JP       $FE8            ; Jump to FE8
$2CE    $4C7D   SNE      VC, #7D         ; Skip if VC != 125
$2D0    $1228   JP       $228            ; Jump to 228
$2D2    $13DA   JP       $3DA            ; Jump to 3DA
$2D4    $59D8   UNKNOWN  $59D8           ; Unknown 5xxx instruction
$2D6    $CCDD   RND      VC, #DD         ; VC = random & DD
$2D8    $C2A8   RND      V2, #A8         ; V2 = random & A8
$2DA    $4D54   SNE      VD, #54         ; Skip if VD != 84
$2DC    $86C6   SHR      V6              ; V6 >>= 1, VF = LSB
$2DE    $0347   SYS      $347            ; System call to 347
$2E0    $DCE1   DRW      VC, VE, #1      ; Draw 1-byte sprite at VC, VE
$2E2    $2539   CALL     $539            ; Call subroutine at 539
$2E4    $55C2   UNKNOWN  $55C2           ; Unknown 5xxx instruction
$2E6    $76AB   ADD      V6, #AB         ; Add 171 to V6
$2E8    $6B0F   LD       VB, #0F         ; Load 15 into VB
$2EA    $7684   ADD      V6, #84         ; Add 132 to V6
$2EC    $02D5   SYS      $2D5            ; System call to 2D5
$2EE    $6198   LD       V1, #98         ; Load 152 into V1
$2F0    $13E0   JP       $3E0            ; Jump to 3E0
$2F2    $BFF4   JP       V0, $FF4        ; Jump to V0 + FF4
$2F4    $5F57   UNKNOWN  $5F57           ; Unknown 5xxx instruction
$2F6    $3B5A   SE       VB, #5A         ; Skip if VB == 90
$2F8    $BA62   JP       V0, $A62        ; Jump to V0 + A62
$2FA    $D791   DRW      V7, V9, #1      ; Draw 1-byte sprite at V7, V9
$2FC    $1A00   JP       $A00            ; Jump to A00
$2FE    $2390   CALL     $390            ; Call subroutine at 390
$300    $1F37   JP       $F37            ; Jump to F37
$302    $6389   LD       V3, #89         ; Load 137 into V3
$304    $90C5   UNKNOWN  $90C5           ; Unknown 9xxx instruction
$306    $CAD1   RND      VA, #D1         ; VA = random & D1
$308    $24B9   CALL     $4B9            ; Call subroutine at 4B9
$30A    $C8E0   RND      V8, #E0         ; V8 = random & E0
$30C    $6102   LD       V1, #02         ; Load 2 into V1
$30E    $8524   ADD      V5, V2          ; V5 += V2, VF = carry
$310    $D372   DRW      V3, V7, #2      ; Draw 2-byte sprite at V3, V7
$312    $EA9B   UNKNOWN  $EA9B           ; Unknown Exxx instruction
$314    $ACFA   LD       I, $CFA         ; Load CFA into I
$316    $BFB6   JP       V0, $FB6        ; Jump to V0 + FB6
$318    $76CF   ADD      V6, #CF         ; Add 207 to V6
$31A    $10B6   JP       $0B6            ; Jump to 0B6
$31C    $92DA   UNKNOWN  $92DA           ; Unknown 9xxx instruction
$31E    $7F04   ADD      VF, #04         ; Add 4 to VF
$320    $7529   ADD      V5, #29         ; Add 41 to V5
$322    $75BF   ADD      V5, #BF         ; Add 191 to V5
$324    $4AF0   SNE      VA, #F0         ; Skip if VA != 240
$326    $283D   CALL     $83D            ; Call subroutine at 83D
$328    $00C4   SYS      $0C4            ; System call to 0C4
$32A    $AA3A   LD       I, $A3A         ; Load A3A into I
$32C    $F4B2   UNKNOWN  F4B2            ; Unknown Fxxx instruction
$32E    $5954   UNKNOWN  $5954           ; Unknown 5xxx instruction
$330    $E83D   UNKNOWN  $E83D           ; Unknown Exxx instruction
$332    $1E9D   JP       $E9D            ; Jump to E9D
$334    $4DCA   SNE      VD, #CA         ; Skip if VD != 202
$336    $E45C   UNKNOWN  $E45C           ; Unknown Exxx instruction
$338    $799D   ADD      V9, #9D         ; Add 157 to V9
$33A    $729E   ADD      V2, #9E         ; Add 158 to V2
$33C    $C492   RND      V4, #92         ; V4 = random & 92
$33E    $420F   SNE      V2, #0F         ; Skip if V2 != 15
$340    $2F45   CALL     $F45            ; Call subroutine at F45
$342    $E29F   UNKNOWN  $E29F           ; Unknown Exxx instruction
$344    $D52C   DRW      V5, V2, #C      ; Draw 12-byte sprite at V5, V2
$346    $4DFB   SNE      VD, #FB         ; Skip if VD != 251
$348    $11AD   JP       $1AD            ; Jump to 1AD
$34A    $0760   SYS      $760            ; System call to 760
$34C    $82CC   UNKNOWN  82CC            ; Unknown 8xxx instruction
$34E    $EFEA   UNKNOWN  $EFEA           ; Unknown Exxx instruction
$350    $7E44   ADD      VE, #44         ; Add 68 to VE
$352    $3922   SE       V9, #22         ; Skip if V9 == 34
$354    $DDA8   DRW      VD, VA, #8      ; Draw 8-byte sprite at VD, VA
$356    $734C   ADD      V3, #4C         ; Add 76 to V3
$358    $B25A   JP       V0, $25A        ; Jump to V0 + 25A
$35A    $FCB6   UNKNOWN  FCB6            ; Unknown Fxxx instruction
$35C    $F1B0   UNKNOWN  F1B0            ; Unknown Fxxx instruction
$35E    $884A   UNKNOWN  884A            ; Unknown 8xxx instruction
$360    $359C   SE       V5, #9C         ; Skip if V5 == 156
$362    $29A8   CALL     $9A8            ; Call subroutine at 9A8
$364    $50FB   UNKNOWN  $50FB           ; Unknown 5xxx instruction
$366    $6B91   LD       VB, #91         ; Load 145 into VB
$368    $DCE7   DRW      VC, VE, #7      ; Draw 7-byte sprite at VC, VE
$36A    $6A46   LD       VA, #46         ; Load 70 into VA
$36C    $D40F   DRW      V4, V0, #F      ; Draw 15-byte sprite at V4, V0
$36E    $CE13   RND      VE, #13         ; VE = random & 13
$370    $572E   UNKNOWN  $572E           ; Unknown 5xxx instruction
$372    $277B   CALL     $77B            ; Call subroutine at 77B
$374    $DDD0   DRW      VD, VD, #0      ; Draw 0-byte sprite at VD, VD
$376    $E4C0   UNKNOWN  $E4C0           ; Unknown Exxx instruction
$378    $2F3E   CALL     $F3E            ; Call subroutine at F3E
$37A    $5289   UNKNOWN  $5289           ; Unknown 5xxx instruction
$37C    $36EE   SE       V6, #EE         ; Skip if V6 == 238
$37E    $7AA9   ADD      VA, #A9         ; Add 169 to VA
$380    $C0E3   RND      V0, #E3         ; V0 = random & E3
$382    $AB4B   LD       I, $B4B         ; Load B4B into I
$384    $CB0C   RND      VB, #0C         ; VB = random & 0C
$386    $1B61   JP       $B61            ; Jump to B61
$388    $445F   SNE      V4, #5F         ; Skip if V4 != 95
$38A    $E342   UNKNOWN  $E342           ; Unknown Exxx instruction
$38C    $07EE   SYS      $7EE            ; System call to 7EE
$38E    $CCD2   RND      VC, #D2         ; VC = random & D2
$390    $0F83   SYS      $F83            ; System call to F83
$392    $EC79   UNKNOWN  $EC79           ; Unknown Exxx instruction
$394    $0FC2   SYS      $FC2            ; System call to FC2
$396    $3872   SE       V8, #72         ; Skip if V8 == 114
$398    $B540   JP       V0, $540        ; Jump to V0 + 540
$39A    $4B5A   SNE      VB, #5A         ; Skip if VB != 90
$39C    $1B26   JP       $B26            ; Jump to B26
$39E    $4BAF   SNE      VB, #AF         ; Skip if VB != 175
$3A0    $B6BB   JP       V0, $6BB        ; Jump to V0 + 6BB
$3A2    $F2D5   UNKNOWN  F2D5            ; Unknown Fxxx instruction
$3A4    $DFDA   DRW      VF, VD, #A      ; Draw 10-byte sprite at VF, VD
$3A6    $F5A8   UNKNOWN  F5A8            ; Unknown Fxxx instruction
$3A8    $71EC   ADD      V1, #EC         ; Add 236 to V1
$3AA    $885E   SHL      V8              ; V8 <<= 1, VF = MSB
$3AC    $DBB1   DRW      VB, VB, #1      ; Draw 1-byte sprite at VB, VB
$3AE    $DAA6   DRW      VA, VA, #6      ; Draw 6-byte sprite at VA, VA
$3B0    $CC41   RND      VC, #41         ; VC = random & 41
$3B2    $7A6D   ADD      VA, #6D         ; Add 109 to VA
$3B4    $51C6   UNKNOWN  $51C6           ; Unknown 5xxx instruction
$3B6    $7A45   ADD      VA, #45         ; Add 69 to VA
$3B8    $E936   UNKNOWN  $E936           ; Unknown Exxx instruction
$3BA    $A8C6   LD       I, $8C6         ; Load 8C6 into I
$3BC    $E2E5   UNKNOWN  $E2E5           ; Unknown Exxx instruction
$3BE    $B29E   JP       V0, $29E        ; Jump to V0 + 29E
$3C0    $B2A6   JP       V0, $2A6        ; Jump to V0 + 2A6
$3C2    $1F9C   JP       $F9C            ; Jump to F9C
$3C4    $EDE9   UNKNOWN  $EDE9           ; Unknown Exxx instruction
$3C6    $E3C9   UNKNOWN  $E3C9           ; Unknown Exxx instruction
$3C8    $9E08   UNKNOWN  $9E08           ; Unknown 9xxx instruction
$3CA    $3CFC   SE       VC, #FC         ; Skip if VC == 252
$3CC    $A83A   LD       I, $83A         ; Load 83A into I
$3CE    $C2C4   RND      V2, #C4         ; V2 = random & C4
$3D0    $5226   UNKNOWN  $5226           ; Unknown 5xxx instruction
$3D2    $C322   RND      V3, #22         ; V3 = random & 22
$3D4    $D474   DRW      V4, V7, #4      ; Draw 4-byte sprite at V4, V7
$3D6    $3399   SE       V3, #99         ; Skip if V3 == 153
$3D8    $1603   JP       $603            ; Jump to 603
$3DA    $4DB4   SNE      VD, #B4         ; Skip if VD != 180
$3DC    $56B1   UNKNOWN  $56B1           ; Unknown 5xxx instruction
$3DE    $FFDF   UNKNOWN  FFDF            ; Unknown Fxxx instruction
$3E0    $E094   UNKNOWN  $E094           ; Unknown Exxx instruction
$3E2    $BAF7   JP       V0, $AF7        ; Jump to V0 + AF7
$3E4    $7D8E   ADD      VD, #8E         ; Add 142 to VD
$3E6    $AF5E   LD       I, $F5E         ; Load F5E into I
$3E8    $E9DD   UNKNOWN  $E9DD           ; Unknown Exxx instruction
$3EA    $6D85   LD       VD, #85         ; Load 133 into VD
$3EC    $030B   SYS      $30B            ; System call to 30B
$3EE    $FBA2   UNKNOWN  FBA2            ; Unknown Fxxx instruction
$3F0    $CE37   RND      VE, #37         ; VE = random & 37
$3F2    $FCE3   UNKNOWN  FCE3            ; Unknown Fxxx instruction
$3F4    $5944   UNKNOWN  $5944           ; Unknown 5xxx instruction
$3F6    $9DE4   UNKNOWN  $9DE4           ; Unknown 9xxx instruction
$3F8    $502D   UNKNOWN  $502D           ; Unknown 5xxx instruction
$3FA    $D13A   DRW      V1, V3, #A      ; Draw 10-byte sprite at V1, V3
$3FC    $FFAF   UNKNOWN  FFAF            ; Unknown Fxxx instruction
$3FE    $9BD2   UNKNOWN  $9BD2           ; Unknown 9xxx instruction
$400    $7394   ADD      V3, #94         ; Add 148 to V3
$402    $A1FB   LD       I, $1FB         ; Load 1FB into I
$404    $6299   LD       V2, #99         ; Load 153 into V2
$406    $CDC0   RND      VD, #C0         ; VD = random & C0
$408    $A1DD   LD       I, $1DD         ; Load 1DD into I
$40A    $0F6F   SYS      $F6F            ; System call to F6F
$40C    $A7DD   LD       I, $7DD         ; Load 7DD into I
$40E    $2F6B   CALL     $F6B            ; Call subroutine at F6B
$410    $6209   LD       V2, #09         ; Load 9 into V2
$412    $08F0   SYS      $8F0            ; System call to 8F0
$414    $C81A   RND      V8, #1A         ; V8 = random & 1A
$416    $B60C   JP       V0, $60C        ; Jump to V0 + 60C
$418    $EA2D   UNKNOWN  $EA2D           ; Unknown Exxx instruction
$41A    $359E   SE       V5, #9E         ; Skip if V5 == 158
$41C    $7927   ADD      V9, #27         ; Add 39 to V9
$41E    $C6C8   RND      V6, #C8         ; V6 = random & C8
$420    $8C44   ADD      VC, V4          ; VC += V4, VF = carry
$422    $29E8   CALL     $9E8            ; Call subroutine at 9E8
$424    $9D41   UNKNOWN  $9D41           ; Unknown 9xxx instruction
$426    $F23A   UNKNOWN  F23A            ; Unknown Fxxx instruction
$428    $3AD6   SE       VA, #D6         ; Skip if VA == 214
$42A    $CE2B   RND      VE, #2B         ; VE = random & 2B
$42C    $CFA7   RND      VF, #A7         ; VF = random & A7
$42E    $3F16   SE       VF, #16         ; Skip if VF == 22
$430    $DC44   DRW      VC, V4, #4      ; Draw 4-byte sprite at VC, V4
$432    $5FB4   UNKNOWN  $5FB4           ; Unknown 5xxx instruction
$434    $6D35   LD       VD, #35         ; Load 53 into VD
$436    $D35A   DRW      V3, V5, #A      ; Draw 10-byte sprite at V3, V5
$438    $91AB   UNKNOWN  $91AB           ; Unknown 9xxx instruction
$43A    $4F19   SNE      VF, #19         ; Skip if VF != 25
$43C    $CAB9   RND      VA, #B9         ; VA = random & B9
$43E    $2680   CALL     $680            ; Call subroutine at 680
$440    $D92F   DRW      V9, V2, #F      ; Draw 15-byte sprite at V9, V2
$442    $C32D   RND      V3, #2D         ; V3 = random & 2D
$444    $169C   JP       $69C            ; Jump to 69C
$446    $B6BD   JP       V0, $6BD        ; Jump to V0 + 6BD
$448    $DBD0   DRW      VB, VD, #0      ; Draw 0-byte sprite at VB, VD
$44A    $80A5   SUB      V0, VA          ; V0 -= VA, VF = !borrow
$44C    $154E   JP       $54E            ; Jump to 54E
$44E    $A195   LD       I, $195         ; Load 195 into I
$450    $CF92   RND      VF, #92         ; VF = random & 92
$452    $9246   UNKNOWN  $9246           ; Unknown 9xxx instruction
$454    $F21B   UNKNOWN  F21B            ; Unknown Fxxx instruction
$456    $6E8E   LD       VE, #8E         ; Load 142 into VE
$458    $D894   DRW      V8, V9, #4      ; Draw 4-byte sprite at V8, V9
$45A    $48F2   SNE      V8, #F2         ; Skip if V8 != 242
$45C    $14E9   JP       $4E9            ; Jump to 4E9
$45E    $E2A4   UNKNOWN  $E2A4           ; Unknown Exxx instruction
$460    $C66E   RND      V6, #6E         ; V6 = random & 6E
$462    $46A5   SNE      V6, #A5         ; Skip if V6 != 165
$464    $30B4   SE       V0, #B4         ; Skip if V0 == 180
$466    $FC86   UNKNOWN  FC86            ; Unknown Fxxx instruction
$468    $4356   SNE      V3, #56         ; Skip if V3 != 86
$46A    $5A9D   UNKNOWN  $5A9D           ; Unknown 5xxx instruction
$46C    $D0B7   DRW      V0, VB, #7      ; Draw 7-byte sprite at V0, VB
$46E    $BB98   JP       V0, $B98        ; Jump to V0 + B98
$470    $2923   CALL     $923            ; Call subroutine at 923
$472    $1857   JP       $857            ; Jump to 857
$474    $06C7   SYS      $6C7            ; System call to 6C7
$476    $4361   SNE      V3, #61         ; Skip if V3 != 97
$478    $C786   RND      V7, #86         ; V7 = random & 86
$47A    $5C79   UNKNOWN  $5C79           ; Unknown 5xxx instruction
$47C    $2722   CALL     $722            ; Call subroutine at 722
$47E    $5407   UNKNOWN  $5407           ; Unknown 5xxx instruction
$480    $4EB5   SNE      VE, #B5         ; Skip if VE != 181
$482    $82FE   SHL      V2              ; V2 <<= 1, VF = MSB
$484    $8D85   SUB      VD, V8          ; VD -= V8, VF = !borrow
$486    $F0F9   UNKNOWN  F0F9            ; Unknown Fxxx instruction
$488    $2DC4   CALL     $DC4            ; Call subroutine at DC4
$48A    $5EEC   UNKNOWN  $5EEC           ; Unknown 5xxx instruction
$48C    $43C2   SNE      V3, #C2         ; Skip if V3 != 194
$48E    $4586   SNE      V5, #86         ; Skip if V5 != 134
$490    $9C97   UNKNOWN  $9C97           ; Unknown 9xxx instruction
$492    $C982   RND      V9, #82         ; V9 = random & 82
$494    $1DA4   JP       $DA4            ; Jump to DA4
$496    $F80E   UNKNOWN  F80E            ; Unknown Fxxx instruction
$498    $6E9A   LD       VE, #9A         ; Load 154 into VE
$49A    $62AE   LD       V2, #AE         ; Load 174 into V2
$49C    $1245   JP       $245            ; Jump to 245
$49E    $284D   CALL     $84D            ; Call subroutine at 84D
$4A0    $0803   SYS      $803            ; System call to 803
$4A2    $0873   SYS      $873            ; System call to 873
$4A4    $E800   UNKNOWN  $E800           ; Unknown Exxx instruction
$4A6    $BA6B   JP       V0, $A6B        ; Jump to V0 + A6B
$4A8    $CD50   RND      VD, #50         ; VD = random & 50
$4AA    $1D87   JP       $D87            ; Jump to D87
$4AC    $DCB0   DRW      VC, VB, #0      ; Draw 0-byte sprite at VC, VB
$4AE    $942E   UNKNOWN  $942E           ; Unknown 9xxx instruction
$4B0    $0E2A   SYS      $E2A            ; System call to E2A
$4B2    $C934   RND      V9, #34         ; V9 = random & 34
$4B4    $297C   CALL     $97C            ; Call subroutine at 97C
$4B6    $3589   SE       V5, #89         ; Skip if V5 == 137
$4B8    $22A9   CALL     $2A9            ; Call subroutine at 2A9
$4BA    $14B7   JP       $4B7            ; Jump to 4B7
$4BC    $FF98   UNKNOWN  FF98            ; Unknown Fxxx instruction
$4BE    $1706   JP       $706            ; Jump to 706
$4C0    $1CB2   JP       $CB2            ; Jump to CB2
$4C2    $7B57   ADD      VB, #57         ; Add 87 to VB
$4C4    $F9D3   UNKNOWN  F9D3            ; Unknown Fxxx instruction
$4C6    $A5E6   LD       I, $5E6         ; Load 5E6 into I
$4C8    $D43E   DRW      V4, V3, #E      ; Draw 14-byte sprite at V4, V3
$4CA    $D385   DRW      V3, V8, #5      ; Draw 5-byte sprite at V3, V8
$4CC    $66A8   LD       V6, #A8         ; Load 168 into V6
$4CE    $9E32   UNKNOWN  $9E32           ; Unknown 9xxx instruction
$4D0    $308B   SE       V0, #8B         ; Skip if V0 == 139
$4D2    $B897   JP       V0, $897        ; Jump to V0 + 897
$4D4    $8C79   UNKNOWN  8C79            ; Unknown 8xxx instruction
$4D6    $5E17   UNKNOWN  $5E17           ; Unknown 5xxx instruction
$4D8    $C935   RND      V9, #35         ; V9 = random & 35
$4DA    $CA82   RND      VA, #82         ; VA = random & 82
$4DC    $C078   RND      V0, #78         ; V0 = random & 78
$4DE    $A29C   LD       I, $29C         ; Load 29C into I
$4E0    $AC73   LD       I, $C73         ; Load C73 into I
$4E2    $E5D2   UNKNOWN  $E5D2           ; Unknown Exxx instruction
$4E4    $1111   JP       $111            ; Jump to 111
$4E6    $A4A4   LD       I, $4A4         ; Load 4A4 into I
$4E8    $ABF2   LD       I, $BF2         ; Load BF2 into I
$4EA    $AD37   LD       I, $D37         ; Load D37 into I
$4EC    $FCFE   UNKNOWN  FCFE            ; Unknown Fxxx instruction
$4EE    $86F7   SUBN     V6, VF          ; V6 = VF - V6, VF = !borrow
$4F0    $D42E   DRW      V4, V2, #E      ; Draw 14-byte sprite at V4, V2
$4F2    $3014   SE       V0, #14         ; Skip if V0 == 20
$4F4    $110A   JP       $10A            ; Jump to 10A
$4F6    $618E   LD       V1, #8E         ; Load 142 into V1
$4F8    $96BA   UNKNOWN  $96BA           ; Unknown 9xxx instruction
$4FA    $5B13   UNKNOWN  $5B13           ; Unknown 5xxx instruction
$4FC    $971A   UNKNOWN  $971A           ; Unknown 9xxx instruction
$4FE    $3C76   SE       VC, #76         ; Skip if VC == 118
$500    $7462   ADD      V4, #62         ; Add 98 to V4
$502    $C589   RND      V5, #89         ; V5 = random & 89
$504    $744E   ADD      V4, #4E         ; Add 78 to V4
$506    $309A   SE       V0, #9A         ; Skip if V0 == 154
$508    $D4C7   DRW      V4, VC, #7      ; Draw 7-byte sprite at V4, VC
$50A    $3C1D   SE       VC, #1D         ; Skip if VC == 29
$50C    $A2C3   LD       I, $2C3         ; Load 2C3 into I
$50E    $ADB6   LD       I, $DB6         ; Load DB6 into I
$510    $9D88   UNKNOWN  $9D88           ; Unknown 9xxx instruction
$512    $D5F2   DRW      V5, VF, #2      ; Draw 2-byte sprite at V5, VF
$514    $A49C   LD       I, $49C         ; Load 49C into I
$516    $B847   JP       V0, $847        ; Jump to V0 + 847
$518    $FF7C   UNKNOWN  FF7C            ; Unknown Fxxx instruction
$51A    $7EE9   ADD      VE, #E9         ; Add 233 to VE
$51C    $FEF1   UNKNOWN  FEF1            ; Unknown Fxxx instruction
$51E    $4721   SNE      V7, #21         ; Skip if V7 != 33
$520    $779F   ADD      V7, #9F         ; Add 159 to V7
$522    $3631   SE       V6, #31         ; Skip if V6 == 49
$524    $54B9   UNKNOWN  $54B9           ; Unknown 5xxx instruction
$526    $F11C   UNKNOWN  F11C            ; Unknown Fxxx instruction
$528    $7758   ADD      V7, #58         ; Add 88 to V7
$52A    $7202   ADD      V2, #02         ; Add 2 to V2
$52C    $AE94   LD       I, $E94         ; Load E94 into I
$52E    $4455   SNE      V4, #55         ; Skip if V4 != 85
$530    $560E   UNKNOWN  $560E           ; Unknown 5xxx instruction
$532    $506D   UNKNOWN  $506D           ; Unknown 5xxx instruction
$534    $49C3   SNE      V9, #C3         ; Skip if V9 != 195
$536    $27D9   CALL     $7D9            ; Call subroutine at 7D9
$538    $D166   DRW      V1, V6, #6      ; Draw 6-byte sprite at V1, V6
$53A    $7601   ADD      V6, #01         ; Add 1 to V6
$53C    $C86A   RND      V8, #6A         ; V8 = random & 6A
$53E    $2C1F   CALL     $C1F            ; Call subroutine at C1F
$540    $606B   LD       V0, #6B         ; Load 107 into V0
$542    $411D   SNE      V1, #1D         ; Skip if V1 != 29
$544    $82B8   UNKNOWN  82B8            ; Unknown 8xxx instruction
$546    $C5AE   RND      V5, #AE         ; V5 = random & AE
$548    $6F24   LD       VF, #24         ; Load 36 into VF
$54A    $6660   LD       V6, #60         ; Load 96 into V6
$54C    $F9AD   UNKNOWN  F9AD            ; Unknown Fxxx instruction
$54E    $33B7   SE       V3, #B7         ; Skip if V3 == 183
$550    $32D6   SE       V2, #D6         ; Skip if V2 == 214
$552    $476C   SNE      V7, #6C         ; Skip if V7 != 108
$554    $8913   XOR      V9, V1          ; V9 ^= V1
$556    $9629   UNKNOWN  $9629           ; Unknown 9xxx instruction
$558    $33D4   SE       V3, #D4         ; Skip if V3 == 212
$55A    $9E1A   UNKNOWN  $9E1A           ; Unknown 9xxx instruction
$55C    $F7DE   UNKNOWN  F7DE            ; Unknown Fxxx instruction
$55E    $1AFB   JP       $AFB            ; Jump to AFB
$560    $8B22   AND      VB, V2          ; VB &= V2
$562    $77D5   ADD      V7, #D5         ; Add 213 to V7
$564    $5CC0   SE       VC, VC          ; Skip if VC == VC
$566    $5E22   UNKNOWN  $5E22           ; Unknown 5xxx instruction
$568    $05D9   SYS      $5D9            ; System call to 5D9
$56A    $1A21   JP       $A21            ; Jump to A21
$56C    $3202   SE       V2, #02         ; Skip if V2 == 2
$56E    $EEE0   UNKNOWN  $EEE0           ; Unknown Exxx instruction
$570    $489F   SNE      V8, #9F         ; Skip if V8 != 159
$572    $D6B7   DRW      V6, VB, #7      ; Draw 7-byte sprite at V6, VB
$574    $EDD1   UNKNOWN  $EDD1           ; Unknown Exxx instruction
$576    $0103   SYS      $103            ; System call to 103
$578    $FB50   UNKNOWN  FB50            ; Unknown Fxxx instruction
$57A    $1106   JP       $106            ; Jump to 106
$57C    $37C2   SE       V7, #C2         ; Skip if V7 == 194
$57E    $A0C0   LD       I, $0C0         ; Load 0C0 into I
$580    $C470   RND      V4, #70         ; V4 = random & 70
$582    $E44B   UNKNOWN  $E44B           ; Unknown Exxx instruction
$584    $4D9C   SNE      VD, #9C         ; Skip if VD != 156
$586    $06F3   SYS      $6F3            ; System call to 6F3
$588    $6B04   LD       VB, #04         ; Load 4 into VB
$58A    $D8E5   DRW      V8, VE, #5      ; Draw 5-byte sprite at V8, VE
$58C    $8CF2   AND      VC, VF          ; VC &= VF
$58E    $7316   ADD      V3, #16         ; Add 22 to V3
$590    $FF94   UNKNOWN  FF94            ; Unknown Fxxx instruction
$592    $DE03   DRW      VE, V0, #3      ; Draw 3-byte sprite at VE, V0
$594    $27B6   CALL     $7B6            ; Call subroutine at 7B6
$596    $D3B1   DRW      V3, VB, #1      ; Draw 1-byte sprite at V3, VB
$598    $C90A   RND      V9, #0A         ; V9 = random & 0A
$59A    $F484   UNKNOWN  F484            ; Unknown Fxxx instruction
$59C    $FF23   UNKNOWN  FF23            ; Unknown Fxxx instruction
$59E    $F832   UNKNOWN  F832            ; Unknown Fxxx instruction
$5A0    $619E   LD       V1, #9E         ; Load 158 into V1
$5A2    $50A5   UNKNOWN  $50A5           ; Unknown 5xxx instruction
$5A4    $0461   SYS      $461            ; System call to 461
$5A6    $D21C   DRW      V2, V1, #C      ; Draw 12-byte sprite at V2, V1
$5A8    $BB5F   JP       V0, $B5F        ; Jump to V0 + B5F
$5AA    $52AE   UNKNOWN  $52AE           ; Unknown 5xxx instruction
$5AC    $EC07   UNKNOWN  $EC07           ; Unknown Exxx instruction
$5AE    $B969   JP       V0, $969        ; Jump to V0 + 969
$5B0    $9B29   UNKNOWN  $9B29           ; Unknown 9xxx instruction
$5B2    $38BB   SE       V8, #BB         ; Skip if V8 == 187
$5B4    $4F3C   SNE      VF, #3C         ; Skip if VF != 60
$5B6    $7136   ADD      V1, #36         ; Add 54 to V1
$5B8    $6819   LD       V8, #19         ; Load 25 into V8
$5BA    $8E1D   UNKNOWN  8E1D            ; Unknown 8xxx instruction
$5BC    $2928   CALL     $928            ; Call subroutine at 928
$5BE    $B047   JP       V0, $047        ; Jump to V0 + 047
$5C0    $8B3D   UNKNOWN  8B3D            ; Unknown 8xxx instruction
$5C2    $7A6E   ADD      VA, #6E         ; Add 110 to VA
$5C4    $CD74   RND      VD, #74         ; VD = random & 74
$5C6    $55B1   UNKNOWN  $55B1           ; Unknown 5xxx instruction
$5C8    $4655   SNE      V6, #55         ; Skip if V6 != 85
$5CA    $ACC6   LD       I, $CC6         ; Load CC6 into I
$5CC    $E209   UNKNOWN  $E209           ; Unknown Exxx instruction
$5CE    $B16E   JP       V0, $16E        ; Jump to V0 + 16E
$5D0    $FF6F   UNKNOWN  FF6F            ; Unknown Fxxx instruction
$5D2    $6C3F   LD       VC, #3F         ; Load 63 into VC
$5D4    $1E33   JP       $E33            ; Jump to E33
$5D6    $2794   CALL     $794            ; Call subroutine at 794
$5D8    $4F7E   SNE      VF, #7E         ; Skip if VF != 126
$5DA    $801D   UNKNOWN  801D            ; Unknown 8xxx instruction
$5DC    $55B8   UNKNOWN  $55B8           ; Unknown 5xxx instruction
$5DE    $2E5C   CALL     $E5C            ; Call subroutine at E5C
$5E0    $63E7   LD       V3, #E7         ; Load 231 into V3
$5E2    $A2FA   LD       I, $2FA         ; Load 2FA into I
$5E4    $384B   SE       V8, #4B         ; Skip if V8 == 75
$5E6    $6180   LD       V1, #80         ; Load 128 into V1
$5E8    $6ACD   LD       VA, #CD         ; Load 205 into VA
$5EA    $9542   UNKNOWN  $9542           ; Unknown 9xxx instruction
$5EC    $7E73   ADD      VE, #73         ; Add 115 to VE
$5EE    $111F   JP       $11F            ; Jump to 11F
$5F0    $D01F   DRW      V0, V1, #F      ; Draw 15-byte sprite at V0, V1
$5F2    $01B3   SYS      $1B3            ; System call to 1B3
$5F4    $E67D   UNKNOWN  $E67D           ; Unknown Exxx instruction
$5F6    $E2B5   UNKNOWN  $E2B5           ; Unknown Exxx instruction
$5F8    $38C9   SE       V8, #C9         ; Skip if V8 == 201
$5FA    $3648   SE       V6, #48         ; Skip if V6 == 72
$5FC    $5F03   UNKNOWN  $5F03           ; Unknown 5xxx instruction
$5FE    $66D2   LD       V6, #D2         ; Load 210 into V6
$600    $400D   SNE      V0, #0D         ; Skip if V0 != 13
$602    $0974   SYS      $974            ; System call to 974
$604    $AD35   LD       I, $D35         ; Load D35 into I
$606    $8944   ADD      V9, V4          ; V9 += V4, VF = carry
$608    $0AC7   SYS      $AC7            ; System call to AC7
$60A    $9B23   UNKNOWN  $9B23           ; Unknown 9xxx instruction
$60C    $9258   UNKNOWN  $9258           ; Unknown 9xxx instruction
$60E    $030A   SYS      $30A            ; System call to 30A
$610    $B7D9   JP       V0, $7D9        ; Jump to V0 + 7D9
$612    $5859   UNKNOWN  $5859           ; Unknown 5xxx instruction
$614    $F93B   UNKNOWN  F93B            ; Unknown Fxxx instruction
$616    $3D45   SE       VD, #45         ; Skip if VD == 69
$618    $0C3C   SYS      $C3C            ; System call to C3C
$61A    $D1E0   DRW      V1, VE, #0      ; Draw 0-byte sprite at V1, VE
$61C    $2FDD   CALL     $FDD            ; Call subroutine at FDD
$61E    $2CC0   CALL     $CC0            ; Call subroutine at CC0
$620    $33A7   SE       V3, #A7         ; Skip if V3 == 167
$622    $A6A6   LD       I, $6A6         ; Load 6A6 into I
$624    $2C13   CALL     $C13            ; Call subroutine at C13
$626    $3DF9   SE       VD, #F9         ; Skip if VD == 249
$628    $B0AC   JP       V0, $0AC        ; Jump to V0 + 0AC
$62A    $A4CF   LD       I, $4CF         ; Load 4CF into I
$62C    $53E5   UNKNOWN  $53E5           ; Unknown 5xxx instruction
$62E    $10C3   JP       $0C3            ; Jump to 0C3
$630    $9243   UNKNOWN  $9243           ; Unknown 9xxx instruction
$632    $0CD2   SYS      $CD2            ; System call to CD2
$634    $41B6   SNE      V1, #B6         ; Skip if V1 != 182
$636    $9FD1   UNKNOWN  $9FD1           ; Unknown 9xxx instruction
$638    $BC40   JP       V0, $C40        ; Jump to V0 + C40
$63A    $C4B7   RND      V4, #B7         ; V4 = random & B7
$63C    $514C   UNKNOWN  $514C           ; Unknown 5xxx instruction
$63E    $A1E0   LD       I, $1E0         ; Load 1E0 into I
$640    $D2E9   DRW      V2, VE, #9      ; Draw 9-byte sprite at V2, VE
$642    $4B8C   SNE      VB, #8C         ; Skip if VB != 140
$644    $C94F   RND      V9, #4F         ; V9 = random & 4F
$646    $5A31   UNKNOWN  $5A31           ; Unknown 5xxx instruction
$648    $1600   JP       $600            ; Jump to 600
$64A    $A456   LD       I, $456         ; Load 456 into I
$64C    $1D62   JP       $D62            ; Jump to D62
$64E    $693A   LD       V9, #3A         ; Load 58 into V9
$650    $1AD0   JP       $AD0            ; Jump to AD0
$652    $0B0D   SYS      $B0D            ; System call to B0D
$654    $81C0   LD       V1, VC          ; V1 = VC
$656    $BC78   JP       V0, $C78        ; Jump to V0 + C78
$658    $52BB   UNKNOWN  $52BB           ; Unknown 5xxx instruction
$65A    $9703   UNKNOWN  $9703           ; Unknown 9xxx instruction
$65C    $9ABC   UNKNOWN  $9ABC           ; Unknown 9xxx instruction
$65E    $B0E2   JP       V0, $0E2        ; Jump to V0 + 0E2
$660    $01F1   SYS      $1F1            ; System call to 1F1
$662    $9E9B   UNKNOWN  $9E9B           ; Unknown 9xxx instruction
$664    $2065   CALL     $065            ; Call subroutine at 065
$666    $3C02   SE       VC, #02         ; Skip if VC == 2
$668    $A054   LD       I, $054         ; Load 054 into I
$66A    $4634   SNE      V6, #34         ; Skip if V6 != 52
$66C    $F30E   UNKNOWN  F30E            ; Unknown Fxxx instruction
$66E    $FD66   UNKNOWN  FD66            ; Unknown Fxxx instruction
$670    $C4BA   RND      V4, #BA         ; V4 = random & BA
$672    $CCF8   RND      VC, #F8         ; VC = random & F8
$674    $07E5   SYS      $7E5            ; System call to 7E5
$676    $AB58   LD       I, $B58         ; Load B58 into I
$678    $49EC   SNE      V9, #EC         ; Skip if V9 != 236
$67A    $DC62   DRW      VC, V6, #2      ; Draw 2-byte sprite at VC, V6
$67C    $2EAE   CALL     $EAE            ; Call subroutine at EAE
$67E    $2A8A   CALL     $A8A            ; Call subroutine at A8A
$680    $283F   CALL     $83F            ; Call subroutine at 83F
$682    $8BED   UNKNOWN  8BED            ; Unknown 8xxx instruction
$684    $E3C4   UNKNOWN  $E3C4           ; Unknown Exxx instruction
$686    $FB15   LD       DT, VB          ; Delay timer = VB
$688    $8A3A   UNKNOWN  8A3A            ; Unknown 8xxx instruction
$68A    $22E5   CALL     $2E5            ; Call subroutine at 2E5
$68C    $ACE0   LD       I, $CE0         ; Load CE0 into I
$68E    $C970   RND      V9, #70         ; V9 = random & 70
$690    $64C6   LD       V4, #C6         ; Load 198 into V4
$692    $8D1D   UNKNOWN  8D1D            ; Unknown 8xxx instruction
$694    $FA51   UNKNOWN  FA51            ; Unknown Fxxx instruction
$696    $F33E   UNKNOWN  F33E            ; Unknown Fxxx instruction
$698    $E474   UNKNOWN  $E474           ; Unknown Exxx instruction
$69A    $A0FE   LD       I, $0FE         ; Load 0FE into I
$69C    $13BC   JP       $3BC            ; Jump to 3BC
$69E    $1BDF   JP       $BDF            ; Jump to BDF
$6A0    $40ED   SNE      V0, #ED         ; Skip if V0 != 237
$6A2    $533D   UNKNOWN  $533D           ; Unknown 5xxx instruction
$6A4    $BE4E   JP       V0, $E4E        ; Jump to V0 + E4E
$6A6    $5C6A   UNKNOWN  $5C6A           ; Unknown 5xxx instruction
$6A8    $E465   UNKNOWN  $E465           ; Unknown Exxx instruction
$6AA    $62C1   LD       V2, #C1         ; Load 193 into V2
$6AC    $0F9E   SYS      $F9E            ; System call to F9E
$6AE    $DAA4   DRW      VA, VA, #4      ; Draw 4-byte sprite at VA, VA
$6B0    $96BB   UNKNOWN  $96BB           ; Unknown 9xxx instruction
$6B2    $FFDB   UNKNOWN  FFDB            ; Unknown Fxxx instruction
$6B4    $1C20   JP       $C20            ; Jump to C20
$6B6    $3E38   SE       VE, #38         ; Skip if VE == 56
$6B8    $11F7   JP       $1F7            ; Jump to 1F7
$6BA    $8CC6   SHR      VC              ; VC >>= 1, VF = LSB
$6BC    $5A2E   UNKNOWN  $5A2E           ; Unknown 5xxx instruction
$6BE    $5EDA   UNKNOWN  $5EDA           ; Unknown 5xxx instruction
$6C0    $1E47   JP       $E47            ; Jump to E47
$6C2    $6BD4   LD       VB, #D4         ; Load 212 into VB
$6C4    $7B38   ADD      VB, #38         ; Add 56 to VB
$6C6    $DE7D   DRW      VE, V7, #D      ; Draw 13-byte sprite at VE, V7
$6C8    $0994   SYS      $994            ; System call to 994
$6CA    $03E3   SYS      $3E3            ; System call to 3E3
$6CC    $DA2D   DRW      VA, V2, #D      ; Draw 13-byte sprite at VA, V2
$6CE    $1C65   JP       $C65            ; Jump to C65
$6D0    $C70A   RND      V7, #0A         ; V7 = random & 0A
$6D2    $5D8B   UNKNOWN  $5D8B           ; Unknown 5xxx instruction
$6D4    $CE1E   RND      VE, #1E         ; VE = random & 1E
$6D6    $CAB1   RND      VA, #B1         ; VA = random & B1
$6D8    $CC39   RND      VC, #39         ; VC = random & 39
$6DA    $FEBB   UNKNOWN  FEBB            ; Unknown Fxxx instruction
$6DC    $3DC0   SE       VD, #C0         ; Skip if VD == 192
$6DE    $DBE3   DRW      VB, VE, #3      ; Draw 3-byte sprite at VB, VE
$6E0    $9249   UNKNOWN  $9249           ; Unknown 9xxx instruction
$6E2    $0BEB   SYS      $BEB            ; System call to BEB
$6E4    $D2F9   DRW      V2, VF, #9      ; Draw 9-byte sprite at V2, VF
$6E6    $E5E3   UNKNOWN  $E5E3           ; Unknown Exxx instruction
$6E8    $954E   UNKNOWN  $954E           ; Unknown 9xxx instruction
$6EA    $001C   SYS      $01C            ; System call to 01C
$6EC    $94E6   UNKNOWN  $94E6           ; Unknown 9xxx instruction
$6EE    $19B7   JP       $9B7            ; Jump to 9B7
$6F0    $4B07   SNE      VB, #07         ; Skip if VB != 7
$6F2    $1C24   JP       $C24            ; Jump to C24
$6F4    $3DFE   SE       VD, #FE         ; Skip if VD == 254
$6F6    $BF58   JP       V0, $F58        ; Jump to V0 + F58
$6F8    $3838   SE       V8, #38         ; Skip if V8 == 56
$6FA    $0D82   SYS      $D82            ; System call to D82
$6FC    $9C9F   UNKNOWN  $9C9F           ; Unknown 9xxx instruction
$6FE    $ED53   UNKNOWN  $ED53           ; Unknown Exxx instruction
$700    $A3C0   LD       I, $3C0         ; Load 3C0 into I
$702    $8782   AND      V7, V8          ; V7 &= V8
$704    $57F1   UNKNOWN  $57F1           ; Unknown 5xxx instruction
$706    $4F6C   SNE      VF, #6C         ; Skip if VF != 108
$708    $0C32   SYS      $C32            ; System call to C32
$70A    $91B7   UNKNOWN  $91B7           ; Unknown 9xxx instruction
$70C    $45F9   SNE      V5, #F9         ; Skip if V5 != 249
$70E    $A559   LD       I, $559         ; Load 559 into I
$710    $5A70   SE       VA, V7          ; Skip if VA == V7
$712    $FB0A   LD       VB, K           ; Wait for key press, store in VB
$714    $ACA5   LD       I, $CA5         ; Load CA5 into I
$716    $0F33   SYS      $F33            ; System call to F33
$718    $2A8B   CALL     $A8B            ; Call subroutine at A8B
$71A    $63E4   LD       V3, #E4         ; Load 228 into V3
$71C    $9C38   UNKNOWN  $9C38           ; Unknown 9xxx instruction
$71E    $2942   CALL     $942            ; Call subroutine at 942
$720    $6EAE   LD       VE, #AE         ; Load 174 into VE
$722    $8791   OR       V7, V9          ; V7 |= V9
$724    $47C4   SNE      V7, #C4         ; Skip if V7 != 196
$726    $CFD6   RND      VF, #D6         ; VF = random & D6
$728    $BB19   JP       V0, $B19        ; Jump to V0 + B19
$72A    $F700   UNKNOWN  F700            ; Unknown Fxxx instruction
$72C    $E51F   UNKNOWN  $E51F           ; Unknown Exxx instruction
$72E    $9E91   UNKNOWN  $9E91           ; Unknown 9xxx instruction
$730    $0BFA   SYS      $BFA            ; System call to BFA
$732    $FA8C   UNKNOWN  FA8C            ; Unknown Fxxx instruction
$734    $044F   SYS      $44F            ; System call to 44F
$736    $FFD7   UNKNOWN  FFD7            ; Unknown Fxxx instruction
$738    $4DAC   SNE      VD, #AC         ; Skip if VD != 172
$73A    $07F1   SYS      $7F1            ; System call to 7F1
$73C    $70AF   ADD      V0, #AF         ; Add 175 to V0
$73E    $B21F   JP       V0, $21F        ; Jump to V0 + 21F
$740    $302B   SE       V0, #2B         ; Skip if V0 == 43
$742    $C20E   RND      V2, #0E         ; V2 = random & 0E
$744    $4C98   SNE      VC, #98         ; Skip if VC != 152
$746    $4700   SNE      V7, #00         ; Skip if V7 != 0
$748    $A731   LD       I, $731         ; Load 731 into I
$74A    $D8F2   DRW      V8, VF, #2      ; Draw 2-byte sprite at V8, VF
$74C    $2F54   CALL     $F54            ; Call subroutine at F54
$74E    $87BD   UNKNOWN  87BD            ; Unknown 8xxx instruction
$750    $CF78   RND      VF, #78         ; VF = random & 78
$752    $1C12   JP       $C12            ; Jump to C12
$754    $7F76   ADD      VF, #76         ; Add 118 to VF
$756    $871C   UNKNOWN  871C            ; Unknown 8xxx instruction
$758    $4CCB   SNE      VC, #CB         ; Skip if VC != 203
$75A    $B7BA   JP       V0, $7BA        ; Jump to V0 + 7BA
$75C    $0604   SYS      $604            ; System call to 604
$75E    $6B6D   LD       VB, #6D         ; Load 109 into VB
$760    $7433   ADD      V4, #33         ; Add 51 to V4
$762    $336F   SE       V3, #6F         ; Skip if V3 == 111
$764    $1F12   JP       $F12            ; Jump to F12
$766    $E456   UNKNOWN  $E456           ; Unknown Exxx instruction
$768    $CD3A   RND      VD, #3A         ; VD = random & 3A
$76A    $0BD2   SYS      $BD2            ; System call to BD2
$76C    $AF86   LD       I, $F86         ; Load F86 into I
$76E    $F5D9   UNKNOWN  F5D9            ; Unknown Fxxx instruction
$770    $F381   UNKNOWN  F381            ; Unknown Fxxx instruction
$772    $CBCB   RND      VB, #CB         ; VB = random & CB
$774    $E758   UNKNOWN  $E758           ; Unknown Exxx instruction
$776    $8A87   SUBN     VA, V8          ; VA = V8 - VA, VF = !borrow
$778    $80D0   LD       V0, VD          ; V0 = VD
$77A    $A26F   LD       I, $26F         ; Load 26F into I
$77C    $3F04   SE       VF, #04         ; Skip if VF == 4
$77E    $B6D6   JP       V0, $6D6        ; Jump to V0 + 6D6
$780    $76AF   ADD      V6, #AF         ; Add 175 to V6
$782    $1F35   JP       $F35            ; Jump to F35
$784    $678F   LD       V7, #8F         ; Load 143 into V7
$786    $CEC6   RND      VE, #C6         ; VE = random & C6
$788    $69F8   LD       V9, #F8         ; Load 248 into V9
$78A    $E2B1   UNKNOWN  $E2B1           ; Unknown Exxx instruction
$78C    $7904   ADD      V9, #04         ; Add 4 to V9
$78E    $661E   LD       V6, #1E         ; Load 30 into V6
$790    $ABB4   LD       I, $BB4         ; Load BB4 into I
$792    $F7E3   UNKNOWN  F7E3            ; Unknown Fxxx instruction
$794    $2634   CALL     $634            ; Call subroutine at 634
$796    $2042   CALL     $042            ; Call subroutine at 042
$798    $66B2   LD       V6, #B2         ; Load 178 into V6
$79A    $47E8   SNE      V7, #E8         ; Skip if V7 != 232
$79C    $CCF8   RND      VC, #F8         ; VC = random & F8
$79E    $B64E   JP       V0, $64E        ; Jump to V0 + 64E
$7A0    $6CE8   LD       VC, #E8         ; Load 232 into VC
$7A2    $7158   ADD      V1, #58         ; Add 88 to V1
$7A4    $8940   LD       V9, V4          ; V9 = V4
$7A6    $357F   SE       V5, #7F         ; Skip if V5 == 127
$7A8    $E99B   UNKNOWN  $E99B           ; Unknown Exxx instruction
$7AA    $55A5   UNKNOWN  $55A5           ; Unknown 5xxx instruction
$7AC    $5094   UNKNOWN  $5094           ; Unknown 5xxx instruction
$7AE    $5D12   UNKNOWN  $5D12           ; Unknown 5xxx instruction
$7B0    $AD91   LD       I, $D91         ; Load D91 into I
$7B2    $DE90   DRW      VE, V9, #0      ; Draw 0-byte sprite at VE, V9
$7B4    $5BFC   UNKNOWN  $5BFC           ; Unknown 5xxx instruction
$7B6    $55E2   UNKNOWN  $55E2           ; Unknown 5xxx instruction
$7B8    $7BE4   ADD      VB, #E4         ; Add 228 to VB
$7BA    $AA38   LD       I, $A38         ; Load A38 into I
$7BC    $17F0   JP       $7F0            ; Jump to 7F0
$7BE    $EEEB   UNKNOWN  $EEEB           ; Unknown Exxx instruction
$7C0    $1B87   JP       $B87            ; Jump to B87
$7C2    $9821   UNKNOWN  $9821           ; Unknown 9xxx instruction
$7C4    $A0FD   LD       I, $0FD         ; Load 0FD into I
$7C6    $404A   SNE      V0, #4A         ; Skip if V0 != 74
$7C8    $BD7B   JP       V0, $D7B        ; Jump to V0 + D7B
$7CA    $44CB   SNE      V4, #CB         ; Skip if V4 != 203
$7CC    $3DAE   SE       VD, #AE         ; Skip if VD == 174
$7CE    $4E00   SNE      VE, #00         ; Skip if VE != 0
$7D0    $D743   DRW      V7, V4, #3      ; Draw 3-byte sprite at V7, V4
$7D2    $ECCD   UNKNOWN  $ECCD           ; Unknown Exxx instruction
$7D4    $B4FB   JP       V0, $4FB        ; Jump to V0 + 4FB
$7D6    $0D5D   SYS      $D5D            ; System call to D5D
$7D8    $F9AA   UNKNOWN  F9AA            ; Unknown Fxxx instruction
$7DA    $FBCB   UNKNOWN  FBCB            ; Unknown Fxxx instruction
$7DC    $8D5F   UNKNOWN  8D5F            ; Unknown 8xxx instruction
$7DE    $C7CC   RND      V7, #CC         ; V7 = random & CC
$7E0    $2634   CALL     $634            ; Call subroutine at 634
$7E2    $6B3C   LD       VB, #3C         ; Load 60 into VB
$7E4    $0CE8   SYS      $CE8            ; System call to CE8
$7E6    $262E   CALL     $62E            ; Call subroutine at 62E
$7E8    $5E20   SE       VE, V2          ; Skip if VE == V2
$7EA    $BF4E   JP       V0, $F4E        ; Jump to V0 + F4E
$7EC    $BD31   JP       V0, $D31        ; Jump to V0 + D31
$7EE    $DC56   DRW      VC, V5, #6      ; Draw 6-byte sprite at VC, V5
$7F0    $B3DF   JP       V0, $3DF        ; Jump to V0 + 3DF
$7F2    $18FA   JP       $8FA            ; Jump to 8FA
$7F4    $AC54   LD       I, $C54         ; Load C54 into I
$7F6    $5E04   UNKNOWN  $5E04           ; Unknown 5xxx instruction
$7F8    $8792   AND      V7, V9          ; V7 &= V9
$7FA    $2BDE   CALL     $BDE            ; Call subroutine at BDE
$7FC    $3609   SE       V6, #09         ; Skip if V6 == 9
$7FE    $0C8F   SYS      $C8F            ; System call to C8F
$800    $997C   UNKNOWN  $997C           ; Unknown 9xxx instruction
$802    $39AA   SE       V9, #AA         ; Skip if V9 == 170
$804    $D0CE   DRW      V0, VC, #E      ; Draw 14-byte sprite at V0, VC
$806    $834F   UNKNOWN  834F            ; Unknown 8xxx instruction
$808    $F347   UNKNOWN  F347            ; Unknown Fxxx instruction
$80A    $A65A   LD       I, $65A         ; Load 65A into I
$80C    $BE73   JP       V0, $E73        ; Jump to V0 + E73
$80E    $4A4E   SNE      VA, #4E         ; Skip if VA != 78
$810    $94EE   UNKNOWN  $94EE           ; Unknown 9xxx instruction
$812    $B449   JP       V0, $449        ; Jump to V0 + 449
$814    $68CB   LD       V8, #CB         ; Load 203 into V8
$816    $0D74   SYS      $D74            ; System call to D74
$818    $D70B   DRW      V7, V0, #B      ; Draw 11-byte sprite at V7, V0
$81A    $ADD3   LD       I, $DD3         ; Load DD3 into I
$81C    $625E   LD       V2, #5E         ; Load 94 into V2
$81E    $6B50   LD       VB, #50         ; Load 80 into VB
$820    $6350   LD       V3, #50         ; Load 80 into V3
$822    $23AE   CALL     $3AE            ; Call subroutine at 3AE
$824    $E10C   UNKNOWN  $E10C           ; Unknown Exxx instruction
$826    $1052   JP       $052            ; Jump to 052
$828    $A635   LD       I, $635         ; Load 635 into I
$82A    $986F   UNKNOWN  $986F           ; Unknown 9xxx instruction
$82C    $8C80   LD       VC, V8          ; VC = V8
$82E    $B612   JP       V0, $612        ; Jump to V0 + 612
$830    $D712   DRW      V7, V1, #2      ; Draw 2-byte sprite at V7, V1
$832    $E6AD   UNKNOWN  $E6AD           ; Unknown Exxx instruction
$834    $90F7   UNKNOWN  $90F7           ; Unknown 9xxx instruction
$836    $F707   LD       V7, DT          ; V7 = delay timer
$838    $CF55   RND      VF, #55         ; VF = random & 55
$83A    $49D5   SNE      V9, #D5         ; Skip if V9 != 213
$83C    $B2B4   JP       V0, $2B4        ; Jump to V0 + 2B4
$83E    $C83F   RND      V8, #3F         ; V8 = random & 3F
$840    $50A5   UNKNOWN  $50A5           ; Unknown 5xxx instruction
$842    $6536   LD       V5, #36         ; Load 54 into V5
$844    $CDCC   RND      VD, #CC         ; VD = random & CC
$846    $AE5A   LD       I, $E5A         ; Load E5A into I
$848    $5DE7   UNKNOWN  $5DE7           ; Unknown 5xxx instruction
$84A    $312D   SE       V1, #2D         ; Skip if V1 == 45
$84C    $E888   UNKNOWN  $E888           ; Unknown Exxx instruction
$84E    $1F77   JP       $F77            ; Jump to F77
$850    $7656   ADD      V6, #56         ; Add 86 to V6
$852    $4F4D   SNE      VF, #4D         ; Skip if VF != 77
$854    $023C   SYS      $23C            ; System call to 23C
$856    $9DF1   UNKNOWN  $9DF1           ; Unknown 9xxx instruction
$858    $CA4D   RND      VA, #4D         ; VA = random & 4D
$85A    $FFCC   UNKNOWN  FFCC            ; Unknown Fxxx instruction
$85C    $48CA   SNE      V8, #CA         ; Skip if V8 != 202
$85E    $6BB0   LD       VB, #B0         ; Load 176 into VB
$860    $6420   LD       V4, #20         ; Load 32 into V4
$862    $57AC   UNKNOWN  $57AC           ; Unknown 5xxx instruction
$864    $8B86   SHR      VB              ; VB >>= 1, VF = LSB
$866    $4EC9   SNE      VE, #C9         ; Skip if VE != 201
$868    $3308   SE       V3, #08         ; Skip if V3 == 8
$86A    $996C   UNKNOWN  $996C           ; Unknown 9xxx instruction
$86C    $64D4   LD       V4, #D4         ; Load 212 into V4
$86E    $0E74   SYS      $E74            ; System call to E74
$870    $4484   SNE      V4, #84         ; Skip if V4 != 132
$872    $5E47   UNKNOWN  $5E47           ; Unknown 5xxx instruction
$874    $A2FC   LD       I, $2FC         ; Load 2FC into I
$876    $341D   SE       V4, #1D         ; Skip if V4 == 29
$878    $5FF8   UNKNOWN  $5FF8           ; Unknown 5xxx instruction
$87A    $56E5   UNKNOWN  $56E5           ; Unknown 5xxx instruction
$87C    $FA6D   UNKNOWN  FA6D            ; Unknown Fxxx instruction
$87E    $9557   UNKNOWN  $9557           ; Unknown 9xxx instruction
$880    $D773   DRW      V7, V7, #3      ; Draw 3-byte sprite at V7, V7
$882    $680F   LD       V8, #0F         ; Load 15 into V8
$884    $3F9C   SE       VF, #9C         ; Skip if VF == 156
$886    $44BA   SNE      V4, #BA         ; Skip if V4 != 186
$888    $4364   SNE      V3, #64         ; Skip if V3 != 100
$88A    $BD63   JP       V0, $D63        ; Jump to V0 + D63
$88C    $04F4   SYS      $4F4            ; System call to 4F4
$88E    $3B2F   SE       VB, #2F         ; Skip if VB == 47
$890    $85AC   UNKNOWN  85AC            ; Unknown 8xxx instruction
$892    $A238   LD       I, $238         ; Load 238 into I
$894    $8044   ADD      V0, V4          ; V0 += V4, VF = carry
$896    $83A4   ADD      V3, VA          ; V3 += VA, VF = carry
$898    $88DE   SHL      V8              ; V8 <<= 1, VF = MSB
$89A    $1C8D   JP       $C8D            ; Jump to C8D
$89C    $D0DA   DRW      V0, VD, #A      ; Draw 10-byte sprite at V0, VD
$89E    $11A7   JP       $1A7            ; Jump to 1A7
$8A0    $D55B   DRW      V5, V5, #B      ; Draw 11-byte sprite at V5, V5
$8A2    $1527   JP       $527            ; Jump to 527
$8A4    $75C4   ADD      V5, #C4         ; Add 196 to V5
$8A6    $CB94   RND      VB, #94         ; VB = random & 94
$8A8    $A823   LD       I, $823         ; Load 823 into I
$8AA    $2B42   CALL     $B42            ; Call subroutine at B42
$8AC    $ADF2   LD       I, $DF2         ; Load DF2 into I
$8AE    $3E95   SE       VE, #95         ; Skip if VE == 149
$8B0    $7B69   ADD      VB, #69         ; Add 105 to VB
$8B2    $7721   ADD      V7, #21         ; Add 33 to V7
$8B4    $17D3   JP       $7D3            ; Jump to 7D3
$8B6    $3BBB   SE       VB, #BB         ; Skip if VB == 187
$8B8    $E1D3   UNKNOWN  $E1D3           ; Unknown Exxx instruction
$8BA    $3942   SE       V9, #42         ; Skip if V9 == 66
$8BC    $1205   JP       $205            ; Jump to 205
$8BE    $B288   JP       V0, $288        ; Jump to V0 + 288
$8C0    $5D0F   UNKNOWN  $5D0F           ; Unknown 5xxx instruction
$8C2    $7A7D   ADD      VA, #7D         ; Add 125 to VA
$8C4    $93FD   UNKNOWN  $93FD           ; Unknown 9xxx instruction
$8C6    $057E   SYS      $57E            ; System call to 57E
$8C8    $26F1   CALL     $6F1            ; Call subroutine at 6F1
$8CA    $832E   SHL      V3              ; V3 <<= 1, VF = MSB
$8CC    $B497   JP       V0, $497        ; Jump to V0 + 497
$8CE    $13BE   JP       $3BE            ; Jump to 3BE
$8D0    $ED06   UNKNOWN  $ED06           ; Unknown Exxx instruction
$8D2    $2B02   CALL     $B02            ; Call subroutine at B02
$8D4    $8A15   SUB      VA, V1          ; VA -= V1, VF = !borrow
$8D6    $C650   RND      V6, #50         ; V6 = random & 50
$8D8    $E108   UNKNOWN  $E108           ; Unknown Exxx instruction
$8DA    $AB60   LD       I, $B60         ; Load B60 into I
$8DC    $7A3E   ADD      VA, #3E         ; Add 62 to VA
$8DE    $5532   UNKNOWN  $5532           ; Unknown 5xxx instruction
$8E0    $0698   SYS      $698            ; System call to 698
$8E2    $4B17   SNE      VB, #17         ; Skip if VB != 23
$8E4    $E348   UNKNOWN  $E348           ; Unknown Exxx instruction
$8E6    $AD51   LD       I, $D51         ; Load D51 into I
$8E8    $2992   CALL     $992            ; Call subroutine at 992
$8EA    $DF42   DRW      VF, V4, #2      ; Draw 2-byte sprite at VF, V4
$8EC    $D5B6   DRW      V5, VB, #6      ; Draw 6-byte sprite at V5, VB
$8EE    $35B2   SE       V5, #B2         ; Skip if V5 == 178
$8F0    $41F7   SNE      V1, #F7         ; Skip if V1 != 247
$8F2    $EBD7   UNKNOWN  $EBD7           ; Unknown Exxx instruction
$8F4    $8F24   ADD      VF, V2          ; VF += V2, VF = carry
$8F6    $EB9E   SKP      VB              ; Skip if key VB pressed
$8F8    $6000   LD       V0, #00         ; Load 0 into V0
$8FA    $D0D6   DRW      V0, VD, #6      ; Draw 6-byte sprite at V0, VD
$8FC    $E333   UNKNOWN  $E333           ; Unknown Exxx instruction
$8FE    $379D   SE       V7, #9D         ; Skip if V7 == 157
$900    $7545   ADD      V5, #45         ; Add 69 to V5
$902    $FA46   UNKNOWN  FA46            ; Unknown Fxxx instruction
$904    $0FAC   SYS      $FAC            ; System call to FAC
$906    $F0EE   UNKNOWN  F0EE            ; Unknown Fxxx instruction
$908    $5E5D   UNKNOWN  $5E5D           ; Unknown 5xxx instruction
$90A    $5707   UNKNOWN  $5707           ; Unknown 5xxx instruction
$90C    $28A5   CALL     $8A5            ; Call subroutine at 8A5
$90E    $31E8   SE       V1, #E8         ; Skip if V1 == 232
$910    $02AE   SYS      $2AE            ; System call to 2AE
$912    $08DC   SYS      $8DC            ; System call to 8DC
$914    $15B7   JP       $5B7            ; Jump to 5B7
$916    $45D7   SNE      V5, #D7         ; Skip if V5 != 215
$918    $22ED   CALL     $2ED            ; Call subroutine at 2ED
$91A    $D789   DRW      V7, V8, #9      ; Draw 9-byte sprite at V7, V8
$91C    $1F99   JP       $F99            ; Jump to F99
$91E    $08BF   SYS      $8BF            ; System call to 8BF
$920    $B52B   JP       V0, $52B        ; Jump to V0 + 52B
$922    $6377   LD       V3, #77         ; Load 119 into V3
$924    $BC7F   JP       V0, $C7F        ; Jump to V0 + C7F
$926    $4A81   SNE      VA, #81         ; Skip if VA != 129
$928    $A408   LD       I, $408         ; Load 408 into I
$92A    $BB3A   JP       V0, $B3A        ; Jump to V0 + B3A
$92C    $032B   SYS      $32B            ; System call to 32B
$92E    $A841   LD       I, $841         ; Load 841 into I
$930    $ABCC   LD       I, $BCC         ; Load BCC into I
$932    $31BF   SE       V1, #BF         ; Skip if V1 == 191
$934    $6343   LD       V3, #43         ; Load 67 into V3
$936    $F20C   UNKNOWN  F20C            ; Unknown Fxxx instruction
$938    $CA42   RND      VA, #42         ; VA = random & 42
$93A    $FA0E   UNKNOWN  FA0E            ; Unknown Fxxx instruction
$93C    $C5EB   RND      V5, #EB         ; V5 = random & EB
$93E    $BDD1   JP       V0, $DD1        ; Jump to V0 + DD1
$940    $62A6   LD       V2, #A6         ; Load 166 into V2
$942    $346B   SE       V4, #6B         ; Skip if V4 == 107
$944    $6586   LD       V5, #86         ; Load 134 into V5
$946    $2B6D   CALL     $B6D            ; Call subroutine at B6D
$948    $91E1   UNKNOWN  $91E1           ; Unknown 9xxx instruction
$94A    $ED90   UNKNOWN  $ED90           ; Unknown Exxx instruction
$94C    $8DC4   ADD      VD, VC          ; VD += VC, VF = carry
$94E    $E9FA   UNKNOWN  $E9FA           ; Unknown Exxx instruction
$950    $0098   SYS      $098            ; System call to 098
$952    $C19A   RND      V1, #9A         ; V1 = random & 9A
$954    $9CD5   UNKNOWN  $9CD5           ; Unknown 9xxx instruction
$956    $4ECC   SNE      VE, #CC         ; Skip if VE != 204
$958    $3507   SE       V5, #07         ; Skip if V5 == 7
$95A    $1B0F   JP       $B0F            ; Jump to B0F
$95C    $B1AA   JP       V0, $1AA        ; Jump to V0 + 1AA
$95E    $9427   UNKNOWN  $9427           ; Unknown 9xxx instruction
$960    $918A   UNKNOWN  $918A           ; Unknown 9xxx instruction
$962    $D35B   DRW      V3, V5, #B      ; Draw 11-byte sprite at V3, V5
$964    $3266   SE       V2, #66         ; Skip if V2 == 102
$966    $99F1   UNKNOWN  $99F1           ; Unknown 9xxx instruction
$968    $A073   LD       I, $073         ; Load 073 into I
$96A    $51F3   UNKNOWN  $51F3           ; Unknown 5xxx instruction
$96C    $3C34   SE       VC, #34         ; Skip if VC == 52
$96E    $2432   CALL     $432            ; Call subroutine at 432
$970    $0E98   SYS      $E98            ; System call to E98
$972    $B10B   JP       V0, $10B        ; Jump to V0 + 10B
$974    $B0DC   JP       V0, $0DC        ; Jump to V0 + 0DC
$976    $72E2   ADD      V2, #E2         ; Add 226 to V2
$978    $1CA4   JP       $CA4            ; Jump to CA4
$97A    $A99E   LD       I, $99E         ; Load 99E into I
$97C    $4392   SNE      V3, #92         ; Skip if V3 != 146
$97E    $E34B   UNKNOWN  $E34B           ; Unknown Exxx instruction
$980    $4B11   SNE      VB, #11         ; Skip if VB != 17
$982    $9601   UNKNOWN  $9601           ; Unknown 9xxx instruction
$984    $B68C   JP       V0, $68C        ; Jump to V0 + 68C
$986    $34D6   SE       V4, #D6         ; Skip if V4 == 214
$988    $CEED   RND      VE, #ED         ; VE = random & ED
$98A    $BA6F   JP       V0, $A6F        ; Jump to V0 + A6F
$98C    $D853   DRW      V8, V5, #3      ; Draw 3-byte sprite at V8, V5
$98E    $99B5   UNKNOWN  $99B5           ; Unknown 9xxx instruction
$990    $E435   UNKNOWN  $E435           ; Unknown Exxx instruction
$992    $B044   JP       V0, $044        ; Jump to V0 + 044
$994    $A0EB   LD       I, $0EB         ; Load 0EB into I
$996    $D3F8   DRW      V3, VF, #8      ; Draw 8-byte sprite at V3, VF
$998    $5556   UNKNOWN  $5556           ; Unknown 5xxx instruction
$99A    $079B   SYS      $79B            ; System call to 79B
$99C    $5C05   UNKNOWN  $5C05           ; Unknown 5xxx instruction
$99E    $68F6   LD       V8, #F6         ; Load 246 into V8
$9A0    $3286   SE       V2, #86         ; Skip if V2 == 134
$9A2    $13A2   JP       $3A2            ; Jump to 3A2
$9A4    $4005   SNE      V0, #05         ; Skip if V0 != 5
$9A6    $C14C   RND      V1, #4C         ; V1 = random & 4C
$9A8    $8974   ADD      V9, V7          ; V9 += V7, VF = carry
$9AA    $CA50   RND      VA, #50         ; VA = random & 50
$9AC    $06B2   SYS      $6B2            ; System call to 6B2
$9AE    $C2F7   RND      V2, #F7         ; V2 = random & F7
$9B0    $2DEE   CALL     $DEE            ; Call subroutine at DEE
$9B2    $890D   UNKNOWN  890D            ; Unknown 8xxx instruction
$9B4    $F2ED   UNKNOWN  F2ED            ; Unknown Fxxx instruction
$9B6    $D3E9   DRW      V3, VE, #9      ; Draw 9-byte sprite at V3, VE
$9B8    $869B   UNKNOWN  869B            ; Unknown 8xxx instruction
$9BA    $D0A8   DRW      V0, VA, #8      ; Draw 8-byte sprite at V0, VA
$9BC    $A30F   LD       I, $30F         ; Load 30F into I
$9BE    $6D45   LD       VD, #45         ; Load 69 into VD
$9C0    $EF4B   UNKNOWN  $EF4B           ; Unknown Exxx instruction
$9C2    $EEF0   UNKNOWN  $EEF0           ; Unknown Exxx instruction
$9C4    $6794   LD       V7, #94         ; Load 148 into V7
$9C6    $88D3   XOR      V8, VD          ; V8 ^= VD
$9C8    $ED79   UNKNOWN  $ED79           ; Unknown Exxx instruction
$9CA    $FA1C   UNKNOWN  FA1C            ; Unknown Fxxx instruction
$9CC    $446F   SNE      V4, #6F         ; Skip if V4 != 111
$9CE    $6B47   LD       VB, #47         ; Load 71 into VB
$9D0    $A0FC   LD       I, $0FC         ; Load 0FC into I
$9D2    $2B8C   CALL     $B8C            ; Call subroutine at B8C
$9D4    $CF92   RND      VF, #92         ; VF = random & 92
$9D6    $3CDA   SE       VC, #DA         ; Skip if VC == 218
$9D8    $B2F1   JP       V0, $2F1        ; Jump to V0 + 2F1
$9DA    $1325   JP       $325            ; Jump to 325
$9DC    $CEF7   RND      VE, #F7         ; VE = random & F7
$9DE    $64B5   LD       V4, #B5         ; Load 181 into V4
$9E0    $0E2A   SYS      $E2A            ; System call to E2A
$9E2    $BCCC   JP       V0, $CCC        ; Jump to V0 + CCC
$9E4    $47D7   SNE      V7, #D7         ; Skip if V7 != 215
$9E6    $F0CB   UNKNOWN  F0CB            ; Unknown Fxxx instruction
$9E8    $BABD   JP       V0, $ABD        ; Jump to V0 + ABD
$9EA    $D07B   DRW      V0, V7, #B      ; Draw 11-byte sprite at V0, V7
$9EC    $DBB8   DRW      VB, VB, #8      ; Draw 8-byte sprite at VB, VB
$9EE    $4051   SNE      V0, #51         ; Skip if V0 != 81
$9F0    $B015   JP       V0, $015        ; Jump to V0 + 015
$9F2    $FDF3   UNKNOWN  FDF3            ; Unknown Fxxx instruction
$9F4    $428E   SNE      V2, #8E         ; Skip if V2 != 142
$9F6    $D77E   DRW      V7, V7, #E      ; Draw 14-byte sprite at V7, V7
$9F8    $B9B3   JP       V0, $9B3        ; Jump to V0 + 9B3
$9FA    $A31F   LD       I, $31F         ; Load 31F into I
$9FC    $D158   DRW      V1, V5, #8      ; Draw 8-byte sprite at V1, V5
$9FE    $5756   UNKNOWN  $5756           ; Unknown 5xxx instruction
$A00    $B01B   JP       V0, $01B        ; Jump to V0 + 01B
$A02    $D8B8   DRW      V8, VB, #8      ; Draw 8-byte sprite at V8, VB
$A04    $EB5D   UNKNOWN  $EB5D           ; Unknown Exxx instruction
$A06    $634B   LD       V3, #4B         ; Load 75 into V3
$A08    $AFD9   LD       I, $FD9         ; Load FD9 into I
$A0A    $E989   UNKNOWN  $E989           ; Unknown Exxx instruction
$A0C    $5674   UNKNOWN  $5674           ; Unknown 5xxx instruction
$A0E    $A6B5   LD       I, $6B5         ; Load 6B5 into I
$A10    $26AF   CALL     $6AF            ; Call subroutine at 6AF
$A12    $5505   UNKNOWN  $5505           ; Unknown 5xxx instruction
$A14    $5F99   UNKNOWN  $5F99           ; Unknown 5xxx instruction
$A16    $FC6A   UNKNOWN  FC6A            ; Unknown Fxxx instruction
$A18    $45CE   SNE      V5, #CE         ; Skip if V5 != 206
$A1A    $B05A   JP       V0, $05A        ; Jump to V0 + 05A
$A1C    $6EC9   LD       VE, #C9         ; Load 201 into VE
$A1E    $CBA1   RND      VB, #A1         ; VB = random & A1
$A20    $3862   SE       V8, #62         ; Skip if V8 == 98
$A22    $58AA   UNKNOWN  $58AA           ; Unknown 5xxx instruction
$A24    $09CB   SYS      $9CB            ; System call to 9CB
$A26    $247E   CALL     $47E            ; Call subroutine at 47E
$A28    $232D   CALL     $32D            ; Call subroutine at 32D
$A2A    $7543   ADD      V5, #43         ; Add 67 to V5
$A2C    $8AD6   SHR      VA              ; VA >>= 1, VF = LSB
$A2E    $CC57   RND      VC, #57         ; VC = random & 57
$A30    $9676   UNKNOWN  $9676           ; Unknown 9xxx instruction
$A32    $4A20   SNE      VA, #20         ; Skip if VA != 32
$A34    $109A   JP       $09A            ; Jump to 09A
$A36    $84C8   UNKNOWN  84C8            ; Unknown 8xxx instruction
$A38    $463A   SNE      V6, #3A         ; Skip if V6 != 58
$A3A    $4B05   SNE      VB, #05         ; Skip if VB != 5
$A3C    $EA69   UNKNOWN  $EA69           ; Unknown Exxx instruction
$A3E    $06ED   SYS      $6ED            ; System call to 6ED
$A40    $F6AC   UNKNOWN  F6AC            ; Unknown Fxxx instruction
$A42    $59DC   UNKNOWN  $59DC           ; Unknown 5xxx instruction
$A44    $C6EA   RND      V6, #EA         ; V6 = random & EA
$A46    $113C   JP       $13C            ; Jump to 13C
$A48    $6D90   LD       VD, #90         ; Load 144 into VD
$A4A    $D5E0   DRW      V5, VE, #0      ; Draw 0-byte sprite at V5, VE
$A4C    $94D3   UNKNOWN  $94D3           ; Unknown 9xxx instruction
$A4E    $3AA6   SE       VA, #A6         ; Skip if VA == 166
$A50    $6159   LD       V1, #59         ; Load 89 into V1
$A52    $C813   RND      V8, #13         ; V8 = random & 13
$A54    $17B5   JP       $7B5            ; Jump to 7B5
$A56    $B533   JP       V0, $533        ; Jump to V0 + 533
$A58    $713F   ADD      V1, #3F         ; Add 63 to V1
$A5A    $D261   DRW      V2, V6, #1      ; Draw 1-byte sprite at V2, V6
$A5C    $6428   LD       V4, #28         ; Load 40 into V4
$A5E    $AFF8   LD       I, $FF8         ; Load FF8 into I
$A60    $7A15   ADD      VA, #15         ; Add 21 to VA
$A62    $E2F9   UNKNOWN  $E2F9           ; Unknown Exxx instruction
$A64    $D667   DRW      V6, V6, #7      ; Draw 7-byte sprite at V6, V6
$A66    $49BA   SNE      V9, #BA         ; Skip if V9 != 186
$A68    $4706   SNE      V7, #06         ; Skip if V7 != 6
$A6A    $591E   UNKNOWN  $591E           ; Unknown 5xxx instruction
$A6C    $1130   JP       $130            ; Jump to 130
$A6E    $EBBB   UNKNOWN  $EBBB           ; Unknown Exxx instruction
$A70    $79AD   ADD      V9, #AD         ; Add 173 to V9
$A72    $CE40   RND      VE, #40         ; VE = random & 40
$A74    $98CE   UNKNOWN  $98CE           ; Unknown 9xxx instruction
$A76    $B06B   JP       V0, $06B        ; Jump to V0 + 06B
$A78    $5B5F   UNKNOWN  $5B5F           ; Unknown 5xxx instruction
$A7A    $697D   LD       V9, #7D         ; Load 125 into V9
$A7C    $576A   UNKNOWN  $576A           ; Unknown 5xxx instruction
$A7E    $AAEB   LD       I, $AEB         ; Load AEB into I
$A80    $C13F   RND      V1, #3F         ; V1 = random & 3F
$A82    $6809   LD       V8, #09         ; Load 9 into V8
$A84    $577A   UNKNOWN  $577A           ; Unknown 5xxx instruction
$A86    $0A99   SYS      $A99            ; System call to A99
$A88    $6F6C   LD       VF, #6C         ; Load 108 into VF
$A8A    $FE08   UNKNOWN  FE08            ; Unknown Fxxx instruction
$A8C    $6E3D   LD       VE, #3D         ; Load 61 into VE
$A8E    $8645   SUB      V6, V4          ; V6 -= V4, VF = !borrow
$A90    $7691   ADD      V6, #91         ; Add 145 to V6
$A92    $E2D9   UNKNOWN  $E2D9           ; Unknown Exxx instruction
$A94    $A188   LD       I, $188         ; Load 188 into I
$A96    $4CE9   SNE      VC, #E9         ; Skip if VC != 233
$A98    $5F2A   UNKNOWN  $5F2A           ; Unknown 5xxx instruction
$A9A    $666E   LD       V6, #6E         ; Load 110 into V6
$A9C    $174F   JP       $74F            ; Jump to 74F
$A9E    $7FCD   ADD      VF, #CD         ; Add 205 to VF
$AA0    $452B   SNE      V5, #2B         ; Skip if V5 != 43
$AA2    $4417   SNE      V4, #17         ; Skip if V4 != 23
$AA4    $96BC   UNKNOWN  $96BC           ; Unknown 9xxx instruction
$AA6    $FE9E   UNKNOWN  FE9E            ; Unknown Fxxx instruction
$AA8    $A9F9   LD       I, $9F9         ; Load 9F9 into I
$AAA    $E972   UNKNOWN  $E972           ; Unknown Exxx instruction
$AAC    $B17D   JP       V0, $17D        ; Jump to V0 + 17D
$AAE    $4AB7   SNE      VA, #B7         ; Skip if VA != 183
$AB0    $DFAA   DRW      VF, VA, #A      ; Draw 10-byte sprite at VF, VA
$AB2    $D026   DRW      V0, V2, #6      ; Draw 6-byte sprite at V0, V2
$AB4    $D042   DRW      V0, V4, #2      ; Draw 2-byte sprite at V0, V4
$AB6    $338F   SE       V3, #8F         ; Skip if V3 == 143
$AB8    $666F   LD       V6, #6F         ; Load 111 into V6
$ABA    $1F70   JP       $F70            ; Jump to F70
$ABC    $3B45   SE       VB, #45         ; Skip if VB == 69
$ABE    $0DFF   SYS      $DFF            ; System call to DFF
$AC0    $B8DF   JP       V0, $8DF        ; Jump to V0 + 8DF
$AC2    $3ED3   SE       VE, #D3         ; Skip if VE == 211
$AC4    $0609   SYS      $609            ; System call to 609
$AC6    $DBBC   DRW      VB, VB, #C      ; Draw 12-byte sprite at VB, VB
$AC8    $174B   JP       $74B            ; Jump to 74B
$ACA    $53B0   SE       V3, VB          ; Skip if V3 == VB
$ACC    $91E6   UNKNOWN  $91E6           ; Unknown 9xxx instruction
$ACE    $62C8   LD       V2, #C8         ; Load 200 into V2
$AD0    $3271   SE       V2, #71         ; Skip if V2 == 113
$AD2    $1F82   JP       $F82            ; Jump to F82
$AD4    $EE08   UNKNOWN  $EE08           ; Unknown Exxx instruction
$AD6    $532C   UNKNOWN  $532C           ; Unknown 5xxx instruction
$AD8    $3189   SE       V1, #89         ; Skip if V1 == 137
$ADA    $63A7   LD       V3, #A7         ; Load 167 into V3
$ADC    $2793   CALL     $793            ; Call subroutine at 793
$ADE    $6DF7   LD       VD, #F7         ; Load 247 into VD
$AE0    $FB3D   UNKNOWN  FB3D            ; Unknown Fxxx instruction
$AE2    $E4CF   UNKNOWN  $E4CF           ; Unknown Exxx instruction
$AE4    $21C1   CALL     $1C1            ; Call subroutine at 1C1
$AE6    $9D8A   UNKNOWN  $9D8A           ; Unknown 9xxx instruction
$AE8    $7770   ADD      V7, #70         ; Add 112 to V7
$AEA    $8A2B   UNKNOWN  8A2B            ; Unknown 8xxx instruction
$AEC    $6D18   LD       VD, #18         ; Load 24 into VD
$AEE    $744F   ADD      V4, #4F         ; Add 79 to V4
$AF0    $2526   CALL     $526            ; Call subroutine at 526
$AF2    $9BAE   UNKNOWN  $9BAE           ; Unknown 9xxx instruction
$AF4    $FCD2   UNKNOWN  FCD2            ; Unknown Fxxx instruction
$AF6    $A120   LD       I, $120         ; Load 120 into I
$AF8    $8F94   ADD      VF, V9          ; VF += V9, VF = carry
$AFA    $16BD   JP       $6BD            ; Jump to 6BD
$AFC    $2761   CALL     $761            ; Call subroutine at 761
$AFE    $75D9   ADD      V5, #D9         ; Add 217 to V5
$B00    $1428   JP       $428            ; Jump to 428
$B02    $A05C   LD       I, $05C         ; Load 05C into I
$B04    $3380   SE       V3, #80         ; Skip if V3 == 128
$B06    $1772   JP       $772            ; Jump to 772
$B08    $4BCE   SNE      VB, #CE         ; Skip if VB != 206
$B0A    $3D38   SE       VD, #38         ; Skip if VD == 56
$B0C    $DA4E   DRW      VA, V4, #E      ; Draw 14-byte sprite at VA, V4
$B0E    $FA36   UNKNOWN  FA36            ; Unknown Fxxx instruction
$B10    $057E   SYS      $57E            ; System call to 57E
$B12    $9C5D   UNKNOWN  $9C5D           ; Unknown 9xxx instruction
$B14    $A64D   LD       I, $64D         ; Load 64D into I
$B16    $C96D   RND      V9, #6D         ; V9 = random & 6D
$B18    $B13B   JP       V0, $13B        ; Jump to V0 + 13B
$B1A    $A704   LD       I, $704         ; Load 704 into I
$B1C    $AE4D   LD       I, $E4D         ; Load E4D into I
$B1E    $A7B9   LD       I, $7B9         ; Load 7B9 into I
$B20    $197B   JP       $97B            ; Jump to 97B
$B22    $FEEF   UNKNOWN  FEEF            ; Unknown Fxxx instruction
$B24    $C583   RND      V5, #83         ; V5 = random & 83
$B26    $B062   JP       V0, $062        ; Jump to V0 + 062
$B28    $E6CA   UNKNOWN  $E6CA           ; Unknown Exxx instruction
$B2A    $69F1   LD       V9, #F1         ; Load 241 into V9
$B2C    $4CBF   SNE      VC, #BF         ; Skip if VC != 191
$B2E    $855D   UNKNOWN  855D            ; Unknown 8xxx instruction
$B30    $B05D   JP       V0, $05D        ; Jump to V0 + 05D
$B32    $0768   SYS      $768            ; System call to 768
$B34    $C614   RND      V6, #14         ; V6 = random & 14
$B36    $5033   UNKNOWN  $5033           ; Unknown 5xxx instruction
$B38    $D8DE   DRW      V8, VD, #E      ; Draw 14-byte sprite at V8, VD
$B3A    $CC9D   RND      VC, #9D         ; VC = random & 9D
$B3C    $3366   SE       V3, #66         ; Skip if V3 == 102
$B3E    $123B   JP       $23B            ; Jump to 23B
$B40    $CD1A   RND      VD, #1A         ; VD = random & 1A
$B42    $3B10   SE       VB, #10         ; Skip if VB == 16
$B44    $D893   DRW      V8, V9, #3      ; Draw 3-byte sprite at V8, V9
$B46    $074B   SYS      $74B            ; System call to 74B
$B48    $F43C   UNKNOWN  F43C            ; Unknown Fxxx instruction
$B4A    $C5A0   RND      V5, #A0         ; V5 = random & A0
$B4C    $E52B   UNKNOWN  $E52B           ; Unknown Exxx instruction
$B4E    $5334   UNKNOWN  $5334           ; Unknown 5xxx instruction
$B50    $588D   UNKNOWN  $588D           ; Unknown 5xxx instruction
$B52    $3E2A   SE       VE, #2A         ; Skip if VE == 42
$B54    $D032   DRW      V0, V3, #2      ; Draw 2-byte sprite at V0, V3
$B56    $F1CA   UNKNOWN  F1CA            ; Unknown Fxxx instruction
$B58    $C056   RND      V0, #56         ; V0 = random & 56
$B5A    $A93E   LD       I, $93E         ; Load 93E into I
$B5C    $4973   SNE      V9, #73         ; Skip if V9 != 115
$B5E    $E62A   UNKNOWN  $E62A           ; Unknown Exxx instruction
$B60    $B4E3   JP       V0, $4E3        ; Jump to V0 + 4E3
$B62    $4BFC   SNE      VB, #FC         ; Skip if VB != 252
$B64    $7766   ADD      V7, #66         ; Add 102 to V7
$B66    $F72F   UNKNOWN  F72F            ; Unknown Fxxx instruction
$B68    $DB52   DRW      VB, V5, #2      ; Draw 2-byte sprite at VB, V5
$B6A    $8BC2   AND      VB, VC          ; VB &= VC
$B6C    $CFB6   RND      VF, #B6         ; VF = random & B6
$B6E    $CA28   RND      VA, #28         ; VA = random & 28
$B70    $3A6C   SE       VA, #6C         ; Skip if VA == 108
$B72    $2830   CALL     $830            ; Call subroutine at 830
$B74    $D350   DRW      V3, V5, #0      ; Draw 0-byte sprite at V3, V5
$B76    $C740   RND      V7, #40         ; V7 = random & 40
$B78    $BD4C   JP       V0, $D4C        ; Jump to V0 + D4C
$B7A    $1B79   JP       $B79            ; Jump to B79
$B7C    $4471   SNE      V4, #71         ; Skip if V4 != 113
$B7E    $9C6B   UNKNOWN  $9C6B           ; Unknown 9xxx instruction
$B80    $7EEA   ADD      VE, #EA         ; Add 234 to VE
$B82    $FBD3   UNKNOWN  FBD3            ; Unknown Fxxx instruction
$B84    $FE6A   UNKNOWN  FE6A            ; Unknown Fxxx instruction
$B86    $CFC9   RND      VF, #C9         ; VF = random & C9
$B88    $70CD   ADD      V0, #CD         ; Add 205 to V0
$B8A    $D818   DRW      V8, V1, #8      ; Draw 8-byte sprite at V8, V1
$B8C    $8E15   SUB      VE, V1          ; VE -= V1, VF = !borrow
$B8E    $9E56   UNKNOWN  $9E56           ; Unknown 9xxx instruction
$B90    $E6F7   UNKNOWN  $E6F7           ; Unknown Exxx instruction
$B92    $27D7   CALL     $7D7            ; Call subroutine at 7D7
$B94    $FAFE   UNKNOWN  FAFE            ; Unknown Fxxx instruction
$B96    $B220   JP       V0, $220        ; Jump to V0 + 220
$B98    $60F7   LD       V0, #F7         ; Load 247 into V0
$B9A    $D51E   DRW      V5, V1, #E      ; Draw 14-byte sprite at V5, V1
$B9C    $6415   LD       V4, #15         ; Load 21 into V4
$B9E    $FFBE   UNKNOWN  FFBE            ; Unknown Fxxx instruction
$BA0    $3BE5   SE       VB, #E5         ; Skip if VB == 229
$BA2    $7A22   ADD      VA, #22         ; Add 34 to VA
$BA4    $F89D   UNKNOWN  F89D            ; Unknown Fxxx instruction
$BA6    $8236   SHR      V2              ; V2 >>= 1, VF = LSB
$BA8    $1DDA   JP       $DDA            ; Jump to DDA
$BAA    $8650   LD       V6, V5          ; V6 = V5
$BAC    $13AC   JP       $3AC            ; Jump to 3AC
$BAE    $1F7D   JP       $F7D            ; Jump to F7D
$BB0    $B438   JP       V0, $438        ; Jump to V0 + 438
$BB2    $EF29   UNKNOWN  $EF29           ; Unknown Exxx instruction
$BB4    $B374   JP       V0, $374        ; Jump to V0 + 374
$BB6    $1F54   JP       $F54            ; Jump to F54
$BB8    $8B82   AND      VB, V8          ; VB &= V8
$BBA    $0220   SYS      $220            ; System call to 220
$BBC    $6380   LD       V3, #80         ; Load 128 into V3
$BBE    $5761   UNKNOWN  $5761           ; Unknown 5xxx instruction
$BC0    $9644   UNKNOWN  $9644           ; Unknown 9xxx instruction
$BC2    $4B9E   SNE      VB, #9E         ; Skip if VB != 158
$BC4    $C92D   RND      V9, #2D         ; V9 = random & 2D
$BC6    $F79E   UNKNOWN  F79E            ; Unknown Fxxx instruction
$BC8    $9791   UNKNOWN  $9791           ; Unknown 9xxx instruction
$BCA    $E33D   UNKNOWN  $E33D           ; Unknown Exxx instruction
$BCC    $62CA   LD       V2, #CA         ; Load 202 into V2
$BCE    $6A5C   LD       VA, #5C         ; Load 92 into VA
$BD0    $BEBF   JP       V0, $EBF        ; Jump to V0 + EBF
$BD2    $85EC   UNKNOWN  85EC            ; Unknown 8xxx instruction
$BD4    $E461   UNKNOWN  $E461           ; Unknown Exxx instruction
$BD6    $901C   UNKNOWN  $901C           ; Unknown 9xxx instruction
$BD8    $D41A   DRW      V4, V1, #A      ; Draw 10-byte sprite at V4, V1
$BDA    $DF84   DRW      VF, V8, #4      ; Draw 4-byte sprite at VF, V8
$BDC    $644E   LD       V4, #4E         ; Load 78 into V4
$BDE    $C1C6   RND      V1, #C6         ; V1 = random & C6
$BE0    $98F4   UNKNOWN  $98F4           ; Unknown 9xxx instruction
$BE2    $6ECF   LD       VE, #CF         ; Load 207 into VE
$BE4    $0AF2   SYS      $AF2            ; System call to AF2
$BE6    $EE2A   UNKNOWN  $EE2A           ; Unknown Exxx instruction
$BE8    $0AF5   SYS      $AF5            ; System call to AF5
$BEA    $9434   UNKNOWN  $9434           ; Unknown 9xxx instruction
$BEC    $95D7   UNKNOWN  $95D7           ; Unknown 9xxx instruction
$BEE    $22DD   CALL     $2DD            ; Call subroutine at 2DD
$BF0    $0901   SYS      $901            ; System call to 901
$BF2    $CEC8   RND      VE, #C8         ; VE = random & C8
$BF4    $DB3C   DRW      VB, V3, #C      ; Draw 12-byte sprite at VB, V3
$BF6    $36A2   SE       V6, #A2         ; Skip if V6 == 162
$BF8    $E2E9   UNKNOWN  $E2E9           ; Unknown Exxx instruction
$BFA    $1A7F   JP       $A7F            ; Jump to A7F
$BFC    $B75A   JP       V0, $75A        ; Jump to V0 + 75A
$BFE    $3086   SE       V0, #86         ; Skip if V0 == 134
$C00    $2385   CALL     $385            ; Call subroutine at 385
$C02    $AEEE   LD       I, $EEE         ; Load EEE into I
$C04    $041E   SYS      $41E            ; System call to 41E
$C06    $AF65   LD       I, $F65         ; Load F65 into I
$C08    $384D   SE       V8, #4D         ; Skip if V8 == 77
$C0A    $2D3D   CALL     $D3D            ; Call subroutine at D3D
$C0C    $33DF   SE       V3, #DF         ; Skip if V3 == 223
$C0E    $EA7A   UNKNOWN  $EA7A           ; Unknown Exxx instruction
$C10    $FB95   UNKNOWN  FB95            ; Unknown Fxxx instruction
$C12    $D071   DRW      V0, V7, #1      ; Draw 1-byte sprite at V0, V7
$C14    $1227   JP       $227            ; Jump to 227
$C16    $1843   JP       $843            ; Jump to 843
$C18    $FECE   UNKNOWN  FECE            ; Unknown Fxxx instruction
$C1A    $AB34   LD       I, $B34         ; Load B34 into I
$C1C    $AEDB   LD       I, $EDB         ; Load EDB into I
$C1E    $B195   JP       V0, $195        ; Jump to V0 + 195
$C20    $8CC2   AND      VC, VC          ; VC &= VC
$C22    $06FE   SYS      $6FE            ; System call to 6FE
$C24    $1DDB   JP       $DDB            ; Jump to DDB
$C26    $FCED   UNKNOWN  FCED            ; Unknown Fxxx instruction
$C28    $4DD4   SNE      VD, #D4         ; Skip if VD != 212
$C2A    $5598   UNKNOWN  $5598           ; Unknown 5xxx instruction
$C2C    $2D34   CALL     $D34            ; Call subroutine at D34
$C2E    $4EC8   SNE      VE, #C8         ; Skip if VE != 200
$C30    $1DD5   JP       $DD5            ; Jump to DD5
$C32    $2D6C   CALL     $D6C            ; Call subroutine at D6C
$C34    $CC36   RND      VC, #36         ; VC = random & 36
$C36    $F472   UNKNOWN  F472            ; Unknown Fxxx instruction
$C38    $F93A   UNKNOWN  F93A            ; Unknown Fxxx instruction
$C3A    $D1AC   DRW      V1, VA, #C      ; Draw 12-byte sprite at V1, VA
$C3C    $CF61   RND      VF, #61         ; VF = random & 61
$C3E    $4E6F   SNE      VE, #6F         ; Skip if VE != 111
$C40    $7044   ADD      V0, #44         ; Add 68 to V0
$C42    $894F   UNKNOWN  894F            ; Unknown 8xxx instruction
$C44    $3B97   SE       VB, #97         ; Skip if VB == 151
$C46    $E6BE   UNKNOWN  $E6BE           ; Unknown Exxx instruction
$C48    $16AD   JP       $6AD            ; Jump to 6AD
$C4A    $77F5   ADD      V7, #F5         ; Add 245 to V7
$C4C    $2CF5   CALL     $CF5            ; Call subroutine at CF5
$C4E    $80EA   UNKNOWN  80EA            ; Unknown 8xxx instruction
$C50    $13D0   JP       $3D0            ; Jump to 3D0
$C52    $95E3   UNKNOWN  $95E3           ; Unknown 9xxx instruction
$C54    $0BF6   SYS      $BF6            ; System call to BF6
$C56    $B3B5   JP       V0, $3B5        ; Jump to V0 + 3B5
$C58    $EC88   UNKNOWN  $EC88           ; Unknown Exxx instruction
$C5A    $27E9   CALL     $7E9            ; Call subroutine at 7E9
$C5C    $F353   UNKNOWN  F353            ; Unknown Fxxx instruction
$C5E    $A13D   LD       I, $13D         ; Load 13D into I
$C60    $90B5   UNKNOWN  $90B5           ; Unknown 9xxx instruction
$C62    $F052   UNKNOWN  F052            ; Unknown Fxxx instruction
$C64    $E68D   UNKNOWN  $E68D           ; Unknown Exxx instruction
$C66    $C6C9   RND      V6, #C9         ; V6 = random & C9
$C68    $BFEC   JP       V0, $FEC        ; Jump to V0 + FEC
$C6A    $36B0   SE       V6, #B0         ; Skip if V6 == 176
$C6C    $FFB0   UNKNOWN  FFB0            ; Unknown Fxxx instruction
$C6E    $266A   CALL     $66A            ; Call subroutine at 66A
$C70    $6D6E   LD       VD, #6E         ; Load 110 into VD
$C72    $437B   SNE      V3, #7B         ; Skip if V3 != 123
$C74    $FC7E   UNKNOWN  FC7E            ; Unknown Fxxx instruction
$C76    $D344   DRW      V3, V4, #4      ; Draw 4-byte sprite at V3, V4
$C78    $BF36   JP       V0, $F36        ; Jump to V0 + F36
$C7A    $ADE6   LD       I, $DE6         ; Load DE6 into I
$C7C    $6CD8   LD       VC, #D8         ; Load 216 into VC
$C7E    $2A78   CALL     $A78            ; Call subroutine at A78
$C80    $9864   UNKNOWN  $9864           ; Unknown 9xxx instruction
$C82    $DD68   DRW      VD, V6, #8      ; Draw 8-byte sprite at VD, V6
$C84    $3CA9   SE       VC, #A9         ; Skip if VC == 169
$C86    $CABD   RND      VA, #BD         ; VA = random & BD
$C88    $E7F6   UNKNOWN  $E7F6           ; Unknown Exxx instruction
$C8A    $F82F   UNKNOWN  F82F            ; Unknown Fxxx instruction
$C8C    $890C   UNKNOWN  890C            ; Unknown 8xxx instruction
$C8E    $E9B5   UNKNOWN  $E9B5           ; Unknown Exxx instruction
$C90    $608B   LD       V0, #8B         ; Load 139 into V0
$C92    $1223   JP       $223            ; Jump to 223
$C94    $EF09   UNKNOWN  $EF09           ; Unknown Exxx instruction
$C96    $D846   DRW      V8, V4, #6      ; Draw 6-byte sprite at V8, V4
$C98    $6142   LD       V1, #42         ; Load 66 into V1
$C9A    $C03A   RND      V0, #3A         ; V0 = random & 3A
$C9C    $1B39   JP       $B39            ; Jump to B39
$C9E    $E7A3   UNKNOWN  $E7A3           ; Unknown Exxx instruction
$CA0    $5309   UNKNOWN  $5309           ; Unknown 5xxx instruction
$CA2    $3072   SE       V0, #72         ; Skip if V0 == 114
$CA4    $04AC   SYS      $4AC            ; System call to 4AC
$CA6    $8458   UNKNOWN  8458            ; Unknown 8xxx instruction
$CA8    $82A9   UNKNOWN  82A9            ; Unknown 8xxx instruction
$CAA    $78BC   ADD      V8, #BC         ; Add 188 to V8
$CAC    $9F73   UNKNOWN  $9F73           ; Unknown 9xxx instruction
$CAE    $0341   SYS      $341            ; System call to 341
$CB0    $6228   LD       V2, #28         ; Load 40 into V2
$CB2    $BB61   JP       V0, $B61        ; Jump to V0 + B61
$CB4    $A6EF   LD       I, $6EF         ; Load 6EF into I
$CB6    $E1DA   UNKNOWN  $E1DA           ; Unknown Exxx instruction
$CB8    $E653   UNKNOWN  $E653           ; Unknown Exxx instruction
$CBA    $4161   SNE      V1, #61         ; Skip if V1 != 97
$CBC    $4B40   SNE      VB, #40         ; Skip if VB != 64
$CBE    $8FB7   SUBN     VF, VB          ; VF = VB - VF, VF = !borrow
$CC0    $BF5E   JP       V0, $F5E        ; Jump to V0 + F5E
$CC2    $BE7C   JP       V0, $E7C        ; Jump to V0 + E7C
$CC4    $3C6D   SE       VC, #6D         ; Skip if VC == 109
$CC6    $2A3A   CALL     $A3A            ; Call subroutine at A3A
$CC8    $5AC8   UNKNOWN  $5AC8           ; Unknown 5xxx instruction
$CCA    $C1A9   RND      V1, #A9         ; V1 = random & A9
$CCC    $B4E0   JP       V0, $4E0        ; Jump to V0 + 4E0
$CCE    $612A   LD       V1, #2A         ; Load 42 into V1
$CD0    $D0C3   DRW      V0, VC, #3      ; Draw 3-byte sprite at V0, VC
$CD2    $BA71   JP       V0, $A71        ; Jump to V0 + A71
$CD4    $4930   SNE      V9, #30         ; Skip if V9 != 48
$CD6    $F359   UNKNOWN  F359            ; Unknown Fxxx instruction
$CD8    $F744   UNKNOWN  F744            ; Unknown Fxxx instruction
$CDA    $62E7   LD       V2, #E7         ; Load 231 into V2
$CDC    $62E5   LD       V2, #E5         ; Load 229 into V2
$CDE    $A147   LD       I, $147         ; Load 147 into I
$CE0    $B575   JP       V0, $575        ; Jump to V0 + 575
$CE2    $E60F   UNKNOWN  $E60F           ; Unknown Exxx instruction
$CE4    $2607   CALL     $607            ; Call subroutine at 607
$CE6    $2FDE   CALL     $FDE            ; Call subroutine at FDE
$CE8    $00C7   SYS      $0C7            ; System call to 0C7
$CEA    $769E   ADD      V6, #9E         ; Add 158 to V6
$CEC    $270C   CALL     $70C            ; Call subroutine at 70C
$CEE    $92DB   UNKNOWN  $92DB           ; Unknown 9xxx instruction
$CF0    $4A49   SNE      VA, #49         ; Skip if VA != 73
$CF2    $10F7   JP       $0F7            ; Jump to 0F7
$CF4    $B833   JP       V0, $833        ; Jump to V0 + 833
$CF6    $A43A   LD       I, $43A         ; Load 43A into I
$CF8    $D885   DRW      V8, V8, #5      ; Draw 5-byte sprite at V8, V8
$CFA    $F8D8   UNKNOWN  F8D8            ; Unknown Fxxx instruction
$CFC    $3878   SE       V8, #78         ; Skip if V8 == 120
$CFE    $8DAB   UNKNOWN  8DAB            ; Unknown 8xxx instruction
$D00    $240A   CALL     $40A            ; Call subroutine at 40A
$D02    $F55B   UNKNOWN  F55B            ; Unknown Fxxx instruction
$D04    $6D3C   LD       VD, #3C         ; Load 60 into VD
$D06    $4296   SNE      V2, #96         ; Skip if V2 != 150
$D08    $9854   UNKNOWN  $9854           ; Unknown 9xxx instruction
$D0A    $F9A3   UNKNOWN  F9A3            ; Unknown Fxxx instruction
$D0C    $D0B3   DRW      V0, VB, #3      ; Draw 3-byte sprite at V0, VB
$D0E    $8EAB   UNKNOWN  8EAB            ; Unknown 8xxx instruction
$D10    $74B8   ADD      V4, #B8         ; Add 184 to V4
$D12    $D806   DRW      V8, V0, #6      ; Draw 6-byte sprite at V8, V0
$D14    $9847   UNKNOWN  $9847           ; Unknown 9xxx instruction
$D16    $3D7B   SE       VD, #7B         ; Skip if VD == 123
$D18    $1840   JP       $840            ; Jump to 840
$D1A    $D60B   DRW      V6, V0, #B      ; Draw 11-byte sprite at V6, V0
$D1C    $C37C   RND      V3, #7C         ; V3 = random & 7C
$D1E    $3EDD   SE       VE, #DD         ; Skip if VE == 221
$D20    $991C   UNKNOWN  $991C           ; Unknown 9xxx instruction
$D22    $977F   UNKNOWN  $977F           ; Unknown 9xxx instruction
$D24    $6D30   LD       VD, #30         ; Load 48 into VD
$D26    $E58E   UNKNOWN  $E58E           ; Unknown Exxx instruction
$D28    $7C0D   ADD      VC, #0D         ; Add 13 to VC
$D2A    $3FB9   SE       VF, #B9         ; Skip if VF == 185
$D2C    $FFDE   UNKNOWN  FFDE            ; Unknown Fxxx instruction
$D2E    $11B0   JP       $1B0            ; Jump to 1B0
$D30    $0EE7   SYS      $EE7            ; System call to EE7
$D32    $3A00   SE       VA, #00         ; Skip if VA == 0
$D34    $E0C6   UNKNOWN  $E0C6           ; Unknown Exxx instruction
$D36    $8948   UNKNOWN  8948            ; Unknown 8xxx instruction
$D38    $2EDA   CALL     $EDA            ; Call subroutine at EDA
$D3A    $B187   JP       V0, $187        ; Jump to V0 + 187
$D3C    $F972   UNKNOWN  F972            ; Unknown Fxxx instruction
$D3E    $957C   UNKNOWN  $957C           ; Unknown 9xxx instruction
$D40    $6442   LD       V4, #42         ; Load 66 into V4
$D42    $A312   LD       I, $312         ; Load 312 into I
$D44    $9F22   UNKNOWN  $9F22           ; Unknown 9xxx instruction
$D46    $24CB   CALL     $4CB            ; Call subroutine at 4CB
$D48    $80EC   UNKNOWN  80EC            ; Unknown 8xxx instruction
$D4A    $0522   SYS      $522            ; System call to 522
$D4C    $C9C8   RND      V9, #C8         ; V9 = random & C8
$D4E    $AB60   LD       I, $B60         ; Load B60 into I
$D50    $F504   UNKNOWN  F504            ; Unknown Fxxx instruction
$D52    $8B35   SUB      VB, V3          ; VB -= V3, VF = !borrow
$D54    $3C34   SE       VC, #34         ; Skip if VC == 52
$D56    $6EB1   LD       VE, #B1         ; Load 177 into VE
$D58    $B324   JP       V0, $324        ; Jump to V0 + 324
$D5A    $765B   ADD      V6, #5B         ; Add 91 to V6
$D5C    $7FB7   ADD      VF, #B7         ; Add 183 to VF
$D5E    $BD0C   JP       V0, $D0C        ; Jump to V0 + D0C
$D60    $1D7B   JP       $D7B            ; Jump to D7B
$D62    $A522   LD       I, $522         ; Load 522 into I
$D64    $A5E3   LD       I, $5E3         ; Load 5E3 into I
$D66    $5275   UNKNOWN  $5275           ; Unknown 5xxx instruction
$D68    $EEC4   UNKNOWN  $EEC4           ; Unknown Exxx instruction
$D6A    $4CA4   SNE      VC, #A4         ; Skip if VC != 164
$D6C    $DF84   DRW      VF, V8, #4      ; Draw 4-byte sprite at VF, V8
$D6E    $1406   JP       $406            ; Jump to 406
$D70    $3D1C   SE       VD, #1C         ; Skip if VD == 28
$D72    $2DBE   CALL     $DBE            ; Call subroutine at DBE
$D74    $8AF8   UNKNOWN  8AF8            ; Unknown 8xxx instruction
$D76    $2151   CALL     $151            ; Call subroutine at 151
$D78    $4223   SNE      V2, #23         ; Skip if V2 != 35
$D7A    $2E0F   CALL     $E0F            ; Call subroutine at E0F
$D7C    $9469   UNKNOWN  $9469           ; Unknown 9xxx instruction
$D7E    $40DC   SNE      V0, #DC         ; Skip if V0 != 220
$D80    $7F9D   ADD      VF, #9D         ; Add 157 to VF
$D82    $9727   UNKNOWN  $9727           ; Unknown 9xxx instruction
$D84    $0B99   SYS      $B99            ; System call to B99
$D86    $8A62   AND      VA, V6          ; VA &= V6
$D88    $AD71   LD       I, $D71         ; Load D71 into I
$D8A    $B215   JP       V0, $215        ; Jump to V0 + 215
$D8C    $459E   SNE      V5, #9E         ; Skip if V5 != 158
$D8E    $12BB   JP       $2BB            ; Jump to 2BB
$D90    $7959   ADD      V9, #59         ; Add 89 to V9
$D92    $8234   ADD      V2, V3          ; V2 += V3, VF = carry
$D94    $8F52   AND      VF, V5          ; VF &= V5
$D96    $8F9A   UNKNOWN  8F9A            ; Unknown 8xxx instruction
$D98    $7B2E   ADD      VB, #2E         ; Add 46 to VB
$D9A    $2082   CALL     $082            ; Call subroutine at 082
$D9C    $9A9E   UNKNOWN  $9A9E           ; Unknown 9xxx instruction
$D9E    $6E21   LD       VE, #21         ; Load 33 into VE
$DA0    $0A37   SYS      $A37            ; System call to A37
$DA2    $3379   SE       V3, #79         ; Skip if V3 == 121
$DA4    $C22B   RND      V2, #2B         ; V2 = random & 2B
$DA6    $A05A   LD       I, $05A         ; Load 05A into I
$DA8    $C149   RND      V1, #49         ; V1 = random & 49
$DAA    $E6A2   UNKNOWN  $E6A2           ; Unknown Exxx instruction
$DAC    $DBF9   DRW      VB, VF, #9      ; Draw 9-byte sprite at VB, VF
$DAE    $DCEE   DRW      VC, VE, #E      ; Draw 14-byte sprite at VC, VE
$DB0    $D816   DRW      V8, V1, #6      ; Draw 6-byte sprite at V8, V1
$DB2    $A7C0   LD       I, $7C0         ; Load 7C0 into I
$DB4    $33C2   SE       V3, #C2         ; Skip if V3 == 194
$DB6    $932C   UNKNOWN  $932C           ; Unknown 9xxx instruction
$DB8    $8045   SUB      V0, V4          ; V0 -= V4, VF = !borrow
$DBA    $EBD0   UNKNOWN  $EBD0           ; Unknown Exxx instruction
$DBC    $C890   RND      V8, #90         ; V8 = random & 90
$DBE    $B728   JP       V0, $728        ; Jump to V0 + 728
$DC0    $3A94   SE       VA, #94         ; Skip if VA == 148
$DC2    $A157   LD       I, $157         ; Load 157 into I
$DC4    $91CF   UNKNOWN  $91CF           ; Unknown 9xxx instruction
$DC6    $F4F4   UNKNOWN  F4F4            ; Unknown Fxxx instruction
$DC8    $2BCB   CALL     $BCB            ; Call subroutine at BCB
$DCA    $BE6F   JP       V0, $E6F        ; Jump to V0 + E6F
$DCC    $98F6   UNKNOWN  $98F6           ; Unknown 9xxx instruction
$DCE    $3DFA   SE       VD, #FA         ; Skip if VD == 250
$DD0    $64E8   LD       V4, #E8         ; Load 232 into V4
$DD2    $3AFE   SE       VA, #FE         ; Skip if VA == 254
$DD4    $E58F   UNKNOWN  $E58F           ; Unknown Exxx instruction
$DD6    $3F0C   SE       VF, #0C         ; Skip if VF == 12
$DD8    $3EB3   SE       VE, #B3         ; Skip if VE == 179
$DDA    $9977   UNKNOWN  $9977           ; Unknown 9xxx instruction
$DDC    $7F77   ADD      VF, #77         ; Add 119 to VF
$DDE    $DCFD   DRW      VC, VF, #D      ; Draw 13-byte sprite at VC, VF
$DE0    $CEE2   RND      VE, #E2         ; VE = random & E2
$DE2    $F041   UNKNOWN  F041            ; Unknown Fxxx instruction
$DE4    $373F   SE       V7, #3F         ; Skip if V7 == 63
$DE6    $211E   CALL     $11E            ; Call subroutine at 11E
$DE8    $1AC5   JP       $AC5            ; Jump to AC5
$DEA    $1045   JP       $045            ; Jump to 045
$DEC    $247C   CALL     $47C            ; Call subroutine at 47C
$DEE    $DE0A   DRW      VE, V0, #A      ; Draw 10-byte sprite at VE, V0
$DF0    $272C   CALL     $72C            ; Call subroutine at 72C
$DF2    $ADB6   LD       I, $DB6         ; Load DB6 into I
$DF4    $F40F   UNKNOWN  F40F            ; Unknown Fxxx instruction
$DF6    $F98F   UNKNOWN  F98F            ; Unknown Fxxx instruction
$DF8    $3172   SE       V1, #72         ; Skip if V1 == 114
$DFA    $764E   ADD      V6, #4E         ; Add 78 to V6
$DFC    $55D9   UNKNOWN  $55D9           ; Unknown 5xxx instruction
$DFE    $6F08   LD       VF, #08         ; Load 8 into VF
$E00    $6052   LD       V0, #52         ; Load 82 into V0
$E02    $E476   UNKNOWN  $E476           ; Unknown Exxx instruction
$E04    $2803   CALL     $803            ; Call subroutine at 803
$E06    $EBD1   UNKNOWN  $EBD1           ; Unknown Exxx instruction
$E08    $9BDE   UNKNOWN  $9BDE           ; Unknown 9xxx instruction
$E0A    $CCDE   RND      VC, #DE         ; VC = random & DE
$E0C    $8119   UNKNOWN  8119            ; Unknown 8xxx instruction
$E0E    $4D3F   SNE      VD, #3F         ; Skip if VD != 63
$E10    $74FD   ADD      V4, #FD         ; Add 253 to V4
$E12    $29C4   CALL     $9C4            ; Call subroutine at 9C4
$E14    $0E4A   SYS      $E4A            ; System call to E4A
$E16    $F522   UNKNOWN  F522            ; Unknown Fxxx instruction
$E18    $4C28   SNE      VC, #28         ; Skip if VC != 40
$E1A    $CB30   RND      VB, #30         ; VB = random & 30
$E1C    $A969   LD       I, $969         ; Load 969 into I
$E1E    $5519   UNKNOWN  $5519           ; Unknown 5xxx instruction
$E20    $E913   UNKNOWN  $E913           ; Unknown Exxx instruction
$E22    $C4AB   RND      V4, #AB         ; V4 = random & AB
$E24    $D069   DRW      V0, V6, #9      ; Draw 9-byte sprite at V0, V6
$E26    $D43D   DRW      V4, V3, #D      ; Draw 13-byte sprite at V4, V3
$E28    $4275   SNE      V2, #75         ; Skip if V2 != 117
$E2A    $48E3   SNE      V8, #E3         ; Skip if V8 != 227
$E2C    $731F   ADD      V3, #1F         ; Add 31 to V3
$E2E    $75C9   ADD      V5, #C9         ; Add 201 to V5
$E30    $3F98   SE       VF, #98         ; Skip if VF == 152
$E32    $30A9   SE       V0, #A9         ; Skip if V0 == 169
$E34    $5D3F   UNKNOWN  $5D3F           ; Unknown 5xxx instruction
$E36    $1879   JP       $879            ; Jump to 879
$E38    $7961   ADD      V9, #61         ; Add 97 to V9
$E3A    $7A47   ADD      VA, #47         ; Add 71 to VA
$E3C    $3652   SE       V6, #52         ; Skip if V6 == 82
$E3E    $1D01   JP       $D01            ; Jump to D01
$E40    $3CD8   SE       VC, #D8         ; Skip if VC == 216
$E42    $231B   CALL     $31B            ; Call subroutine at 31B
$E44    $3D3D   SE       VD, #3D         ; Skip if VD == 61
$E46    $212E   CALL     $12E            ; Call subroutine at 12E
$E48    $4BEE   SNE      VB, #EE         ; Skip if VB != 238
$E4A    $2BE6   CALL     $BE6            ; Call subroutine at BE6
$E4C    $DD15   DRW      VD, V1, #5      ; Draw 5-byte sprite at VD, V1
$E4E    $BFFB   JP       V0, $FFB        ; Jump to V0 + FFB
$E50    $6681   LD       V6, #81         ; Load 129 into V6
$E52    $608B   LD       V0, #8B         ; Load 139 into V0
$E54    $964D   UNKNOWN  $964D           ; Unknown 9xxx instruction
$E56    $7BCD   ADD      VB, #CD         ; Add 205 to VB
$E58    $5DE9   UNKNOWN  $5DE9           ; Unknown 5xxx instruction
$E5A    $A0C5   LD       I, $0C5         ; Load 0C5 into I
$E5C    $C615   RND      V6, #15         ; V6 = random & 15
$E5E    $DB28   DRW      VB, V2, #8      ; Draw 8-byte sprite at VB, V2
$E60    $2998   CALL     $998            ; Call subroutine at 998
$E62    $7765   ADD      V7, #65         ; Add 101 to V7
$E64    $F618   LD       ST, V6          ; Sound timer = V6
$E66    $E05D   UNKNOWN  $E05D           ; Unknown Exxx instruction
$E68    $F2BC   UNKNOWN  F2BC            ; Unknown Fxxx instruction
$E6A    $0648   SYS      $648            ; System call to 648
$E6C    $1F9B   JP       $F9B            ; Jump to F9B
$E6E    $C848   RND      V8, #48         ; V8 = random & 48
$E70    $B45C   JP       V0, $45C        ; Jump to V0 + 45C
$E72    $2278   CALL     $278            ; Call subroutine at 278
$E74    $852F   UNKNOWN  852F            ; Unknown 8xxx instruction
$E76    $4B4D   SNE      VB, #4D         ; Skip if VB != 77
$E78    $F415   LD       DT, V4          ; Delay timer = V4
$E7A    $AAEB   LD       I, $AEB         ; Load AEB into I
$E7C    $B4DB   JP       V0, $4DB        ; Jump to V0 + 4DB
$E7E    $FB18   LD       ST, VB          ; Sound timer = VB
$E80    $2742   CALL     $742            ; Call subroutine at 742
$E82    $5471   UNKNOWN  $5471           ; Unknown 5xxx instruction
$E84    $1659   JP       $659            ; Jump to 659
$E86    $2B7A   CALL     $B7A            ; Call subroutine at B7A
$E88    $EF64   UNKNOWN  $EF64           ; Unknown Exxx instruction
$E8A    $55D2   UNKNOWN  $55D2           ; Unknown 5xxx instruction
$E8C    $8247   SUBN     V2, V4          ; V2 = V4 - V2, VF = !borrow
$E8E    $6252   LD       V2, #52         ; Load 82 into V2
$E90    $38A8   SE       V8, #A8         ; Skip if V8 == 168
$E92    $F8CB   UNKNOWN  F8CB            ; Unknown Fxxx instruction
$E94    $A4E3   LD       I, $4E3         ; Load 4E3 into I
$E96    $B8BF   JP       V0, $8BF        ; Jump to V0 + 8BF
$E98    $0E5C   SYS      $E5C            ; System call to E5C
$E9A    $EF02   UNKNOWN  $EF02           ; Unknown Exxx instruction
$E9C    $E5CB   UNKNOWN  $E5CB           ; Unknown Exxx instruction
$E9E    $80D1   OR       V0, VD          ; V0 |= VD
$EA0    $AEFD   LD       I, $EFD         ; Load EFD into I
$EA2    $1EDE   JP       $EDE            ; Jump to EDE
$EA4    $B1B8   JP       V0, $1B8        ; Jump to V0 + 1B8
$EA6    $9AF7   UNKNOWN  $9AF7           ; Unknown 9xxx instruction
$EA8    $9AAB   UNKNOWN  $9AAB           ; Unknown 9xxx instruction
$EAA    $102C   JP       $02C            ; Jump to 02C
$EAC    $15B3   JP       $5B3            ; Jump to 5B3
$EAE    $1803   JP       $803            ; Jump to 803
$EB0    $A8EF   LD       I, $8EF         ; Load 8EF into I
$EB2    $E516   UNKNOWN  $E516           ; Unknown Exxx instruction
$EB4    $1BF2   JP       $BF2            ; Jump to BF2
$EB6    $5F01   UNKNOWN  $5F01           ; Unknown 5xxx instruction
$EB8    $1F65   JP       $F65            ; Jump to F65
$EBA    $39CA   SE       V9, #CA         ; Skip if V9 == 202
$EBC    $1479   JP       $479            ; Jump to 479
$EBE    $0A22   SYS      $A22            ; System call to A22
$EC0    $A826   LD       I, $826         ; Load 826 into I
$EC2    $A796   LD       I, $796         ; Load 796 into I
$EC4    $F5C7   UNKNOWN  F5C7            ; Unknown Fxxx instruction
$EC6    $011E   SYS      $11E            ; System call to 11E
$EC8    $8F2C   UNKNOWN  8F2C            ; Unknown 8xxx instruction
$ECA    $EE78   UNKNOWN  $EE78           ; Unknown Exxx instruction
$ECC    $5C5B   UNKNOWN  $5C5B           ; Unknown 5xxx instruction
$ECE    $BBCF   JP       V0, $BCF        ; Jump to V0 + BCF
$ED0    $6FFC   LD       VF, #FC         ; Load 252 into VF
$ED2    $6453   LD       V4, #53         ; Load 83 into V4
$ED4    $5254   UNKNOWN  $5254           ; Unknown 5xxx instruction
$ED6    $1EBE   JP       $EBE            ; Jump to EBE
$ED8    $FFB7   UNKNOWN  FFB7            ; Unknown Fxxx instruction
$EDA    $92DB   UNKNOWN  $92DB           ; Unknown 9xxx instruction
$EDC    $709A   ADD      V0, #9A         ; Add 154 to V0
$EDE    $EC76   UNKNOWN  $EC76           ; Unknown Exxx instruction
$EE0    $AB4D   LD       I, $B4D         ; Load B4D into I
$EE2    $9685   UNKNOWN  $9685           ; Unknown 9xxx instruction
$EE4    $C112   RND      V1, #12         ; V1 = random & 12
$EE6    $8823   XOR      V8, V2          ; V8 ^= V2
$EE8    $6536   LD       V5, #36         ; Load 54 into V5
$EEA    $D46B   DRW      V4, V6, #B      ; Draw 11-byte sprite at V4, V6
$EEC    $13F4   JP       $3F4            ; Jump to 3F4
$EEE    $B900   JP       V0, $900        ; Jump to V0 + 900
$EF0    $C0C3   RND      V0, #C3         ; V0 = random & C3
$EF2    $B265   JP       V0, $265        ; Jump to V0 + 265
$EF4    $1860   JP       $860            ; Jump to 860
$EF6    $A975   LD       I, $975         ; Load 975 into I
$EF8    $B116   JP       V0, $116        ; Jump to V0 + 116
$EFA    $C1A5   RND      V1, #A5         ; V1 = random & A5
$EFC    $689A   LD       V8, #9A         ; Load 154 into V8
$EFE    $C6AF   RND      V6, #AF         ; V6 = random & AF
$F00    $AA8F   LD       I, $A8F         ; Load A8F into I
$F02    $35AF   SE       V5, #AF         ; Skip if V5 == 175
$F04    $EFD1   UNKNOWN  $EFD1           ; Unknown Exxx instruction
$F06    $FC22   UNKNOWN  FC22            ; Unknown Fxxx instruction
$F08    $FC33   LD       B, VC           ; Store BCD of VC at I, I+1, I+2
$F0A    $E0FB   UNKNOWN  $E0FB           ; Unknown Exxx instruction
$F0C    $A92B   LD       I, $92B         ; Load 92B into I
$F0E    $46D7   SNE      V6, #D7         ; Skip if V6 != 215
$F10    $D384   DRW      V3, V8, #4      ; Draw 4-byte sprite at V3, V8
$F12    $6242   LD       V2, #42         ; Load 66 into V2
$F14    $A2BC   LD       I, $2BC         ; Load 2BC into I
$F16    $DEC1   DRW      VE, VC, #1      ; Draw 1-byte sprite at VE, VC
$F18    $4080   SNE      V0, #80         ; Skip if V0 != 128
$F1A    $FFC4   UNKNOWN  FFC4            ; Unknown Fxxx instruction
$F1C    $112A   JP       $12A            ; Jump to 12A
$F1E    $690E   LD       V9, #0E         ; Load 14 into V9
$F20    $90CC   UNKNOWN  $90CC           ; Unknown 9xxx instruction
$F22    $1E88   JP       $E88            ; Jump to E88
$F24    $9D6D   UNKNOWN  $9D6D           ; Unknown 9xxx instruction
$F26    $C6C1   RND      V6, #C1         ; V6 = random & C1
$F28    $47EC   SNE      V7, #EC         ; Skip if V7 != 236
$F2A    $BA83   JP       V0, $A83        ; Jump to V0 + A83
$F2C    $9D71   UNKNOWN  $9D71           ; Unknown 9xxx instruction
$F2E    $0150   SYS      $150            ; System call to 150
$F30    $E110   UNKNOWN  $E110           ; Unknown Exxx instruction
$F32    $4C8B   SNE      VC, #8B         ; Skip if VC != 139
$F34    $4434   SNE      V4, #34         ; Skip if V4 != 52
$F36    $DC38   DRW      VC, V3, #8      ; Draw 8-byte sprite at VC, V3
$F38    $FA26   UNKNOWN  FA26            ; Unknown Fxxx instruction
$F3A    $E484   UNKNOWN  $E484           ; Unknown Exxx instruction
$F3C    $42B0   SNE      V2, #B0         ; Skip if V2 != 176
$F3E    $8835   SUB      V8, V3          ; V8 -= V3, VF = !borrow
$F40    $6C02   LD       VC, #02         ; Load 2 into VC
$F42    $0626   SYS      $626            ; System call to 626
$F44    $C585   RND      V5, #85         ; V5 = random & 85
$F46    $4184   SNE      V1, #84         ; Skip if V1 != 132
$F48    $753B   ADD      V5, #3B         ; Add 59 to V5
$F4A    $E2B5   UNKNOWN  $E2B5           ; Unknown Exxx instruction
$F4C    $9A0D   UNKNOWN  $9A0D           ; Unknown 9xxx instruction
$F4E    $0571   SYS      $571            ; System call to 571
$F50    $FDAD   UNKNOWN  FDAD            ; Unknown Fxxx instruction
$F52    $3E34   SE       VE, #34         ; Skip if VE == 52
$F54    $E1E0   UNKNOWN  $E1E0           ; Unknown Exxx instruction
$F56    $06F0   SYS      $6F0            ; System call to 6F0
$F58    $CF4C   RND      VF, #4C         ; VF = random & 4C
$F5A    $0431   SYS      $431            ; System call to 431
$F5C    $7E5F   ADD      VE, #5F         ; Add 95 to VE
$F5E    $E19D   UNKNOWN  $E19D           ; Unknown Exxx instruction
$F60    $6634   LD       V6, #34         ; Load 52 into V6
$F62    $FC0F   UNKNOWN  FC0F            ; Unknown Fxxx instruction
$F64    $B242   JP       V0, $242        ; Jump to V0 + 242
$F66    $8AEE   SHL      VA              ; VA <<= 1, VF = MSB
$F68    $6E50   LD       VE, #50         ; Load 80 into VE
$F6A    $AD9A   LD       I, $D9A         ; Load D9A into I
$F6C    $A1BD   LD       I, $1BD         ; Load 1BD into I
$F6E    $CFCC   RND      VF, #CC         ; VF = random & CC
$F70    $A360   LD       I, $360         ; Load 360 into I
$F72    $B6B8   JP       V0, $6B8        ; Jump to V0 + 6B8
$F74    $E2A2   UNKNOWN  $E2A2           ; Unknown Exxx instruction
$F76    $0876   SYS      $876            ; System call to 876
$F78    $FEDA   UNKNOWN  FEDA            ; Unknown Fxxx instruction
$F7A    $BEFA   JP       V0, $EFA        ; Jump to V0 + EFA
$F7C    $0770   SYS      $770            ; System call to 770
$F7E    $66B2   LD       V6, #B2         ; Load 178 into V6
$F80    $0293   SYS      $293            ; System call to 293
$F82    $A279   LD       I, $279         ; Load 279 into I
$F84    $A294   LD       I, $294         ; Load 294 into I
$F86    $D3E9   DRW      V3, VE, #9      ; Draw 9-byte sprite at V3, VE
$F88    $08D5   SYS      $8D5            ; System call to 8D5
$F8A    $9374   UNKNOWN  $9374           ; Unknown 9xxx instruction
$F8C    $A593   LD       I, $593         ; Load 593 into I
$F8E    $222C   CALL     $22C            ; Call subroutine at 22C
$F90    $34F3   SE       V4, #F3         ; Skip if V4 == 243
$F92    $8611   OR       V6, V1          ; V6 |= V1
$F94    $3708   SE       V7, #08         ; Skip if V7 == 8
$F96    $F034   UNKNOWN  F034            ; Unknown Fxxx instruction
$F98    $2E63   CALL     $E63            ; Call subroutine at E63
$F9A    $35EF   SE       V5, #EF         ; Skip if V5 == 239
$F9C    $008C   SYS      $08C            ; System call to 08C
$F9E    $88A2   AND      V8, VA          ; V8 &= VA
$FA0    $7CDC   ADD      VC, #DC         ; Add 220 to VC
$FA2    $4C2E   SNE      VC, #2E         ; Skip if VC != 46
$FA4    $1AAF   JP       $AAF            ; Jump to AAF
$FA6    $3C1A   SE       VC, #1A         ; Skip if VC == 26
$FA8    $F3BF   UNKNOWN  F3BF            ; Unknown Fxxx instruction
$FAA    $B41D   JP       V0, $41D        ; Jump to V0 + 41D
$FAC    $5207   UNKNOWN  $5207           ; Unknown 5xxx instruction
$FAE    $8E90   LD       VE, V9          ; VE = V9
$FB0    $11A7   JP       $1A7            ; Jump to 1A7
$FB2    $F5C8   UNKNOWN  F5C8            ; Unknown Fxxx instruction
$FB4    $7126   ADD      V1, #26         ; Add 38 to V1
$FB6    $851E   SHL      V5              ; V5 <<= 1, VF = MSB
$FB8    $9821   UNKNOWN  $9821           ; Unknown 9xxx instruction
$FBA    $1673   JP       $673            ; Jump to 673
$FBC    $BA8D   JP       V0, $A8D        ; Jump to V0 + A8D
$FBE    $E2C5   UNKNOWN  $E2C5           ; Unknown Exxx instruction
$FC0    $286A   CALL     $86A            ; Call subroutine at 86A
$FC2    $3294   SE       V2, #94         ; Skip if V2 == 148
$FC4    $EA9C   UNKNOWN  $EA9C           ; Unknown Exxx instruction
$FC6    $DB4A   DRW      VB, V4, #A      ; Draw 10-byte sprite at VB, V4
$FC8    $DB57   DRW      VB, V5, #7      ; Draw 7-byte sprite at VB, V5
$FCA    $076E   SYS      $76E            ; System call to 76E
$FCC    $97AF   UNKNOWN  $97AF           ; Unknown 9xxx instruction
$FCE    $B745   JP       V0, $745        ; Jump to V0 + 745
$FD0    $86F2   AND      V6, VF          ; V6 &= VF
$FD2    $4978   SNE      V9, #78         ; Skip if V9 != 120
$FD4    $908F   UNKNOWN  $908F           ; Unknown 9xxx instruction
$FD6    $8BED   UNKNOWN  8BED            ; Unknown 8xxx instruction
$FD8    $EDC0   UNKNOWN  $EDC0           ; Unknown Exxx instruction
$FDA    $F6D8   UNKNOWN  F6D8            ; Unknown Fxxx instruction
$FDC    $03E2   SYS      $3E2            ; System call to 3E2
$FDE    $8861   OR       V8, V6          ; V8 |= V6
$FE0    $4360   SNE      V3, #60         ; Skip if V3 != 96
$FE2    $B395   JP       V0, $395        ; Jump to V0 + 395
$FE4    $EAE1   UNKNOWN  $EAE1           ; Unknown Exxx instruction
$FE6    $37DA   SE       V7, #DA         ; Skip if V7 == 218
$FE8    $1F4D   JP       $F4D            ; Jump to F4D
$FEA    $5B56   UNKNOWN  $5B56           ; Unknown 5xxx instruction
$FEC    $CB11   RND      VB, #11         ; VB = random & 11
$FEE    $3EC2   SE       VE, #C2         ; Skip if VE == 194
$FF0    $85AB   UNKNOWN  85AB            ; Unknown 8xxx instruction
$FF2    $5CC8   UNKNOWN  $5CC8           ; Unknown 5xxx instruction
$FF4    $888F   UNKNOWN  888F            ; Unknown 8xxx instruction
$FF6    $BFE6   JP       V0, $FE6        ; Jump to V0 + FE6
$FF8    $90C4   UNKNOWN  $90C4           ; Unknown 9xxx instruction
$FFA    $F814   UNKNOWN  F814            ; Unknown Fxxx instruction
$FFC    $FCBE   UNKNOWN  FCBE            ; Unknown Fxxx instruction
$FFE    $A6CB   LD       I, $6CB         ; Load 6CB into I

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 475 (26.5%)
  LD      : 249 (13.9%)
  JP      : 242 (13.5%)
  SE      : 125 ( 7.0%)
  RND     : 123 ( 6.9%)
  SNE     : 116 ( 6.5%)
  DRW     : 115 ( 6.4%)
  CALL    : 103 ( 5.7%)
  SYS     : 103 ( 5.7%)
  ADD     :  97 ( 5.4%)
  AND     :  11 ( 0.6%)
  SUB     :   8 ( 0.4%)
  SHL     :   6 ( 0.3%)
  OR      :   5 ( 0.3%)
  SHR     :   5 ( 0.3%)
  XOR     :   4 ( 0.2%)
  SUBN    :   4 ( 0.2%)
  SKP     :   1 ( 0.1%)

Memory Operations: 346 (19.3%)
Arithmetic Operations: 129 (7.2%)
