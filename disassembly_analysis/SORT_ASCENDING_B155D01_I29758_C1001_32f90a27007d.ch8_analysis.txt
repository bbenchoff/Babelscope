
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B155D01_I29758_C1001_32f90a27007d.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 155
Instance: 29758
Direction: ascending
Final Array: [32, 32, 32, 32, 32, 81, 171, 254]
Operations: R:0 W:5 C:30 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 123
Sort Array References:
  $21C: LD I, $C3A ; Load C3A into I
  $22E: LD I, $2C5 ; Load 2C5 into I
  $236: LD I, $CE5 ; Load CE5 into I
  $276: LD I, $3BC ; Load 3BC into I
  $292: LD I, $741 ; Load 741 into I
  $2B6: LD I, $88A ; Load 88A into I
  $2DC: LD I, $17E ; Load 17E into I
  $306: LD I, $BFE ; Load BFE into I
  $334: LD I, $8CF ; Load 8CF into I
  $340: LD I, $30F ; Load 30F into I
  $34A: LD I, $BF9 ; Load BF9 into I
  $370: LD I, $49D ; Load 49D into I
  $3AC: LD I, $395 ; Load 395 into I
  $3B2: LD I, $02B ; Load 02B into I
  $3CA: LD I, $495 ; Load 495 into I
  $3E6: LD I, $974 ; Load 974 into I
  $400: LD I, $A26 ; Load A26 into I
  $416: LD I, $44D ; Load 44D into I
  $45E: LD I, $CEC ; Load CEC into I
  $4A2: LD I, $13A ; Load 13A into I
  $4B2: LD I, $F61 ; Load F61 into I
  $4D8: LD I, $ABA ; Load ABA into I
  $4F0: LD I, $C45 ; Load C45 into I
  $514: LD I, $599 ; Load 599 into I
  $51C: LD I, $6FF ; Load 6FF into I
  $526: LD I, $F22 ; Load F22 into I
  $560: LD I, $235 ; Load 235 into I
  $564: LD I, $589 ; Load 589 into I
  $578: LD I, $90A ; Load 90A into I
  $57E: LD I, $1E1 ; Load 1E1 into I
  $59E: LD I, $FFC ; Load FFC into I
  $5B2: LD I, $F23 ; Load F23 into I
  $5C2: LD I, $29A ; Load 29A into I
  $5DA: LD I, $12A ; Load 12A into I
  $61C: LD I, $BC8 ; Load BC8 into I
  $620: LD I, $03A ; Load 03A into I
  $624: LD I, $103 ; Load 103 into I
  $632: LD I, $62A ; Load 62A into I
  $634: LD I, $1D8 ; Load 1D8 into I
  $642: LD I, $BBF ; Load BBF into I
  $656: LD I, $625 ; Load 625 into I
  $682: LD I, $6BB ; Load 6BB into I
  $688: LD I, $A23 ; Load A23 into I
  $694: LD I, $F83 ; Load F83 into I
  $69C: LD I, $874 ; Load 874 into I
  $6A0: LD I, $2FF ; Load 2FF into I
  $6B0: LD I, $330 ; Load 330 into I
  $6C0: LD I, $ACF ; Load ACF into I
  $6D2: LD I, $3F2 ; Load 3F2 into I
  $6FA: LD I, $503 ; Load 503 into I
  $71C: LD I, $265 ; Load 265 into I
  $730: LD I, $3D0 ; Load 3D0 into I
  $74E: LD I, $B2D ; Load B2D into I
  $758: LD I, $68A ; Load 68A into I
  $77E: LD I, $190 ; Load 190 into I
  $7BC: LD I, $77F ; Load 77F into I
  $7C8: LD I, $6C3 ; Load 6C3 into I
  $7CA: LD I, $510 ; Load 510 into I
  $7DC: LD I, $893 ; Load 893 into I
  $7E0: LD I, $55A ; Load 55A into I
  $7F4: LD I, $E93 ; Load E93 into I
  $7FC: LD I, $C11 ; Load C11 into I
  $804: LD I, $0BA ; Load 0BA into I
  $816: LD V2, [I] ; Load V0-V2 from I
  $824: LD I, $287 ; Load 287 into I
  $826: LD I, $1C7 ; Load 1C7 into I
  $836: LD I, $74D ; Load 74D into I
  $84C: LD I, $428 ; Load 428 into I
  $858: LD I, $7C4 ; Load 7C4 into I
  $862: ADD I, V0 ; I ADDRESS MANIPULATION
  $8A0: LD I, $513 ; Load 513 into I
  $8C0: LD I, $FF7 ; Load FF7 into I
  $8CC: LD I, $B69 ; Load B69 into I
  $8E8: LD I, $7E5 ; Load 7E5 into I
  $938: LD I, $D7B ; Load D7B into I
  $978: LD I, $620 ; Load 620 into I
  $97A: LD I, $5EC ; Load 5EC into I
  $98A: LD I, $A70 ; Load A70 into I
  $9E2: LD I, $58C ; Load 58C into I
  $9F8: LD I, $84A ; Load 84A into I
  $A14: LD I, $214 ; Load 214 into I
  $A52: LD I, $8A4 ; Load 8A4 into I
  $A54: ADD I, V2 ; I ADDRESS MANIPULATION
  $A82: LD [I], V0 ; Store V0-V0 at I
  $A96: LD I, $E83 ; Load E83 into I
  $AA4: LD I, $ED9 ; Load ED9 into I
  $AC4: LD I, $E5B ; Load E5B into I
  $ACA: LD I, $5B0 ; Load 5B0 into I
  $B0E: LD I, $ED3 ; Load ED3 into I
  $B18: LD I, $995 ; Load 995 into I
  $B20: LD I, $5D2 ; Load 5D2 into I
  $B4E: LD I, $A04 ; Load A04 into I
  $B5E: LD I, $7C0 ; Load 7C0 into I
  $B6E: LD I, $664 ; Load 664 into I
  $B90: LD I, $181 ; Load 181 into I
  $C3A: LD I, $5D1 ; Load 5D1 into I
  $C54: LD I, $19A ; Load 19A into I
  $C6A: LD I, $FB8 ; Load FB8 into I
  $C7A: LD I, $766 ; Load 766 into I
  $CBA: LD I, $C09 ; Load C09 into I
  $CF2: LD I, $9ED ; Load 9ED into I
  $D6E: LD I, $6F9 ; Load 6F9 into I
  $E0C: LD I, $3A7 ; Load 3A7 into I
  $E44: LD I, $D19 ; Load D19 into I
  $E50: LD I, $4C8 ; Load 4C8 into I
  $E56: LD I, $0BD ; Load 0BD into I
  $E58: LD I, $7AD ; Load 7AD into I
  $E74: LD I, $029 ; Load 029 into I
  $E82: LD I, $1FF ; Load 1FF into I
  $E90: LD I, $317 ; Load 317 into I
  $E9C: LD I, $4AC ; Load 4AC into I
  $EA8: LD I, $8A3 ; Load 8A3 into I
  $ECA: LD I, $F37 ; Load F37 into I
  $EE8: LD I, $EAC ; Load EAC into I
  $EEA: LD I, $C93 ; Load C93 into I
  $F16: LD I, $C6D ; Load C6D into I
  $F22: LD I, $1C5 ; Load 1C5 into I
  $F54: LD I, $5F6 ; Load 5F6 into I
  $F5E: LD I, $950 ; Load 950 into I
  $F66: LD I, $153 ; Load 153 into I
  $F88: LD I, $37F ; Load 37F into I
  $F8C: LD I, $E72 ; Load E72 into I
  $FE4: LD I, $142 ; Load 142 into I

CONTROL FLOW ANALYSIS:
Jumps: 223
Calls: 116
Branches: 249
Loops: 127
Loop Structures:
  $20A -> $11C (backward jump)
  $310 -> $27A (backward jump)
  $34C -> $297 (backward jump)
  $3C2 -> $33A (backward jump)
  $456 -> $0DE (backward jump)
  $466 -> $378 (backward jump)
  $4EE -> $2D6 (backward jump)
  $50C -> $1FC (backward jump)
  $54E -> $1D0 (backward jump)
  $554 -> $29E (backward jump)
  $592 -> $50A (backward jump)
  $5BE -> $0AA (backward jump)
  $5E0 -> $031 (backward jump)
  $5EE -> $45F (backward jump)
  $602 -> $422 (backward jump)
  $638 -> $10F (backward jump)
  $63E -> $2F5 (backward jump)
  $678 -> $491 (backward jump)
  $686 -> $1B3 (backward jump)
  $6BC -> $254 (backward jump)
  $6D6 -> $565 (backward jump)
  $6E8 -> $47C (backward jump)
  $6EE -> $67B (backward jump)
  $6F4 -> $175 (backward jump)
  $6F8 -> $434 (backward jump)
  $71A -> $1FC (backward jump)
  $738 -> $261 (backward jump)
  $73C -> $01C (backward jump)
  $75C -> $71E (backward jump)
  $7AA -> $5EF (backward jump)
  $7E6 -> $09B (backward jump)
  $802 -> $4DE (backward jump)
  $80C -> $5AB (backward jump)
  $80E -> $06F (backward jump)
  $82E -> $11A (backward jump)
  $838 -> $234 (backward jump)
  $860 -> $1F9 (backward jump)
  $8D0 -> $490 (backward jump)
  $8DA -> $7C2 (backward jump)
  $90E -> $2B8 (backward jump)
  $92A -> $44F (backward jump)
  $92E -> $879 (backward jump)
  $93A -> $445 (backward jump)
  $942 -> $8A7 (backward jump)
  $962 -> $183 (backward jump)
  $970 -> $73A (backward jump)
  $9A6 -> $605 (backward jump)
  $9EA -> $239 (backward jump)
  $A04 -> $33D (backward jump)
  $A0A -> $00F (backward jump)
  $A3E -> $96F (backward jump)
  $A60 -> $6C5 (backward jump)
  $A62 -> $3B8 (backward jump)
  $A92 -> $046 (backward jump)
  $AAA -> $2E6 (backward jump)
  $AC2 -> $1E4 (backward jump)
  $ADE -> $AAD (backward jump)
  $AE2 -> $555 (backward jump)
  $AEC -> $117 (backward jump)
  $AFA -> $AC3 (backward jump)
  $B08 -> $8D7 (backward jump)
  $B38 -> $864 (backward jump)
  $B4A -> $31E (backward jump)
  $B54 -> $464 (backward jump)
  $B5C -> $70C (backward jump)
  $B7A -> $726 (backward jump)
  $B84 -> $9CF (backward jump)
  $B8C -> $4C0 (backward jump)
  $B9A -> $7EF (backward jump)
  $BDA -> $46B (backward jump)
  $BDC -> $A91 (backward jump)
  $C00 -> $A58 (backward jump)
  $C06 -> $810 (backward jump)
  $C16 -> $1DD (backward jump)
  $C18 -> $B96 (backward jump)
  $C24 -> $11B (backward jump)
  $C34 -> $7AE (backward jump)
  $C82 -> $BBD (backward jump)
  $C88 -> $92B (backward jump)
  $C9A -> $95D (backward jump)
  $CAA -> $C5F (backward jump)
  $CB8 -> $BDA (backward jump)
  $CBE -> $1CD (backward jump)
  $CC6 -> $97C (backward jump)
  $CD4 -> $C31 (backward jump)
  $CF4 -> $945 (backward jump)
  $CFC -> $447 (backward jump)
  $D0C -> $CD0 (backward jump)
  $D38 -> $32A (backward jump)
  $D68 -> $2C4 (backward jump)
  $D88 -> $697 (backward jump)
  $D8A -> $B66 (backward jump)
  $DA2 -> $879 (backward jump)
  $DAE -> $AFE (backward jump)
  $DEE -> $4A4 (backward jump)
  $E30 -> $732 (backward jump)
  $E5A -> $1BF (backward jump)
  $E60 -> $54C (backward jump)
  $E64 -> $3D1 (backward jump)
  $E6A -> $151 (backward jump)
  $E88 -> $2C5 (backward jump)
  $EAC -> $09C (backward jump)
  $EAE -> $DD3 (backward jump)
  $EBA -> $9FE (backward jump)
  $EBC -> $49F (backward jump)
  $ED8 -> $AC7 (backward jump)
  $EE2 -> $030 (backward jump)
  $EEE -> $8AF (backward jump)
  $F1C -> $012 (backward jump)
  $F26 -> $DC7 (backward jump)
  $F36 -> $44D (backward jump)
  $F3E -> $E93 (backward jump)
  $F40 -> $165 (backward jump)
  $F44 -> $1E4 (backward jump)
  $F48 -> $705 (backward jump)
  $F60 -> $418 (backward jump)
  $F6E -> $20D (backward jump)
  $F78 -> $0EE (backward jump)
  $F98 -> $2EE (backward jump)
  $F9C -> $8BD (backward jump)
  $FA8 -> $8CB (backward jump)
  $FD2 -> $1F6 (backward jump)
  $FD8 -> $067 (backward jump)
  $FDA -> $066 (backward jump)
  $FEA -> $75C (backward jump)
  $FFC -> $72B (backward jump)
  $FFE -> $B2D (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $D630   DRW      V6, V3, #0      ; Draw 0-byte sprite at V6, V3
$202    $D983   DRW      V9, V8, #3      ; Draw 3-byte sprite at V9, V8
$204    $6184   LD       V1, #84         ; Load 132 into V1
$206    $EA89   UNKNOWN  $EA89           ; Unknown Exxx instruction
$208    $4A66   SNE      VA, #66         ; Skip if VA != 102
$20A    $B11C   JP       V0, $11C        ; Jump to V0 + 11C
$20C    $C548   RND      V5, #48         ; V5 = random & 48
$20E    $B995   JP       V0, $995        ; Jump to V0 + 995
$210    $7E75   ADD      VE, #75         ; Add 117 to VE
$212    $CE87   RND      VE, #87         ; VE = random & 87
$214    $5B01   UNKNOWN  $5B01           ; Unknown 5xxx instruction
$216    $5E2B   UNKNOWN  $5E2B           ; Unknown 5xxx instruction
$218    $9142   UNKNOWN  $9142           ; Unknown 9xxx instruction
$21A    $F9F9   UNKNOWN  F9F9            ; Unknown Fxxx instruction
$21C    $AC3A   LD       I, $C3A         ; Load C3A into I
$21E    $85B9   UNKNOWN  85B9            ; Unknown 8xxx instruction
$220    $5DA8   UNKNOWN  $5DA8           ; Unknown 5xxx instruction
$222    $0EE1   SYS      $EE1            ; System call to EE1
$224    $207F   CALL     $07F            ; Call subroutine at 07F
$226    $23CC   CALL     $3CC            ; Call subroutine at 3CC
$228    $296E   CALL     $96E            ; Call subroutine at 96E
$22A    $FA94   UNKNOWN  FA94            ; Unknown Fxxx instruction
$22C    $E9A5   UNKNOWN  $E9A5           ; Unknown Exxx instruction
$22E    $A2C5   LD       I, $2C5         ; Load 2C5 into I
$230    $2F9D   CALL     $F9D            ; Call subroutine at F9D
$232    $C26A   RND      V2, #6A         ; V2 = random & 6A
$234    $2345   CALL     $345            ; Call subroutine at 345
$236    $ACE5   LD       I, $CE5         ; Load CE5 into I
$238    $2182   CALL     $182            ; Call subroutine at 182
$23A    $176A   JP       $76A            ; Jump to 76A
$23C    $3958   SE       V9, #58         ; Skip if V9 == 88
$23E    $7D9F   ADD      VD, #9F         ; Add 159 to VD
$240    $F379   UNKNOWN  F379            ; Unknown Fxxx instruction
$242    $1509   JP       $509            ; Jump to 509
$244    $CCD4   RND      VC, #D4         ; VC = random & D4
$246    $7191   ADD      V1, #91         ; Add 145 to V1
$248    $9034   UNKNOWN  $9034           ; Unknown 9xxx instruction
$24A    $E543   UNKNOWN  $E543           ; Unknown Exxx instruction
$24C    $8987   SUBN     V9, V8          ; V9 = V8 - V9, VF = !borrow
$24E    $9BF9   UNKNOWN  $9BF9           ; Unknown 9xxx instruction
$250    $7BA6   ADD      VB, #A6         ; Add 166 to VB
$252    $ED0A   UNKNOWN  $ED0A           ; Unknown Exxx instruction
$254    $C055   RND      V0, #55         ; V0 = random & 55
$256    $38E4   SE       V8, #E4         ; Skip if V8 == 228
$258    $1B95   JP       $B95            ; Jump to B95
$25A    $F6A0   UNKNOWN  F6A0            ; Unknown Fxxx instruction
$25C    $BD29   JP       V0, $D29        ; Jump to V0 + D29
$25E    $DA78   DRW      VA, V7, #8      ; Draw 8-byte sprite at VA, V7
$260    $501B   UNKNOWN  $501B           ; Unknown 5xxx instruction
$262    $6152   LD       V1, #52         ; Load 82 into V1
$264    $3306   SE       V3, #06         ; Skip if V3 == 6
$266    $1571   JP       $571            ; Jump to 571
$268    $EE1F   UNKNOWN  $EE1F           ; Unknown Exxx instruction
$26A    $06D9   SYS      $6D9            ; System call to 6D9
$26C    $1ABB   JP       $ABB            ; Jump to ABB
$26E    $67D5   LD       V7, #D5         ; Load 213 into V7
$270    $1CE2   JP       $CE2            ; Jump to CE2
$272    $001E   SYS      $01E            ; System call to 01E
$274    $B778   JP       V0, $778        ; Jump to V0 + 778
$276    $A3BC   LD       I, $3BC         ; Load 3BC into I
$278    $4555   SNE      V5, #55         ; Skip if V5 != 85
$27A    $6D24   LD       VD, #24         ; Load 36 into VD
$27C    $3421   SE       V4, #21         ; Skip if V4 == 33
$27E    $8B98   UNKNOWN  8B98            ; Unknown 8xxx instruction
$280    $08A2   SYS      $8A2            ; System call to 8A2
$282    $2B33   CALL     $B33            ; Call subroutine at B33
$284    $6876   LD       V8, #76         ; Load 118 into V8
$286    $BD1E   JP       V0, $D1E        ; Jump to V0 + D1E
$288    $E9E4   UNKNOWN  $E9E4           ; Unknown Exxx instruction
$28A    $EDDB   UNKNOWN  $EDDB           ; Unknown Exxx instruction
$28C    $190D   JP       $90D            ; Jump to 90D
$28E    $6EDF   LD       VE, #DF         ; Load 223 into VE
$290    $2F01   CALL     $F01            ; Call subroutine at F01
$292    $A741   LD       I, $741         ; Load 741 into I
$294    $D457   DRW      V4, V5, #7      ; Draw 7-byte sprite at V4, V5
$296    $8160   LD       V1, V6          ; V1 = V6
$298    $4975   SNE      V9, #75         ; Skip if V9 != 117
$29A    $C55E   RND      V5, #5E         ; V5 = random & 5E
$29C    $C424   RND      V4, #24         ; V4 = random & 24
$29E    $601D   LD       V0, #1D         ; Load 29 into V0
$2A0    $C5CA   RND      V5, #CA         ; V5 = random & CA
$2A2    $C270   RND      V2, #70         ; V2 = random & 70
$2A4    $250C   CALL     $50C            ; Call subroutine at 50C
$2A6    $C9A2   RND      V9, #A2         ; V9 = random & A2
$2A8    $2E1D   CALL     $E1D            ; Call subroutine at E1D
$2AA    $F999   UNKNOWN  F999            ; Unknown Fxxx instruction
$2AC    $F1ED   UNKNOWN  F1ED            ; Unknown Fxxx instruction
$2AE    $04FF   SYS      $4FF            ; System call to 4FF
$2B0    $760C   ADD      V6, #0C         ; Add 12 to V6
$2B2    $8475   SUB      V4, V7          ; V4 -= V7, VF = !borrow
$2B4    $1D31   JP       $D31            ; Jump to D31
$2B6    $A88A   LD       I, $88A         ; Load 88A into I
$2B8    $6E43   LD       VE, #43         ; Load 67 into VE
$2BA    $DBAE   DRW      VB, VA, #E      ; Draw 14-byte sprite at VB, VA
$2BC    $4F31   SNE      VF, #31         ; Skip if VF != 49
$2BE    $D74D   DRW      V7, V4, #D      ; Draw 13-byte sprite at V7, V4
$2C0    $3423   SE       V4, #23         ; Skip if V4 == 35
$2C2    $E369   UNKNOWN  $E369           ; Unknown Exxx instruction
$2C4    $98F0   SNE      V8, VF          ; Skip if V8 != VF
$2C6    $FD45   UNKNOWN  FD45            ; Unknown Fxxx instruction
$2C8    $581C   UNKNOWN  $581C           ; Unknown 5xxx instruction
$2CA    $5E24   UNKNOWN  $5E24           ; Unknown 5xxx instruction
$2CC    $3B49   SE       VB, #49         ; Skip if VB == 73
$2CE    $DAF7   DRW      VA, VF, #7      ; Draw 7-byte sprite at VA, VF
$2D0    $3664   SE       V6, #64         ; Skip if V6 == 100
$2D2    $DB85   DRW      VB, V8, #5      ; Draw 5-byte sprite at VB, V8
$2D4    $883A   UNKNOWN  883A            ; Unknown 8xxx instruction
$2D6    $6935   LD       V9, #35         ; Load 53 into V9
$2D8    $02EE   SYS      $2EE            ; System call to 2EE
$2DA    $FF2D   UNKNOWN  FF2D            ; Unknown Fxxx instruction
$2DC    $A17E   LD       I, $17E         ; Load 17E into I
$2DE    $8DC5   SUB      VD, VC          ; VD -= VC, VF = !borrow
$2E0    $0372   SYS      $372            ; System call to 372
$2E2    $8CA1   OR       VC, VA          ; VC |= VA
$2E4    $DBBA   DRW      VB, VB, #A      ; Draw 10-byte sprite at VB, VB
$2E6    $5DF4   UNKNOWN  $5DF4           ; Unknown 5xxx instruction
$2E8    $6C74   LD       VC, #74         ; Load 116 into VC
$2EA    $9C30   SNE      VC, V3          ; Skip if VC != V3
$2EC    $47A7   SNE      V7, #A7         ; Skip if V7 != 167
$2EE    $4BCF   SNE      VB, #CF         ; Skip if VB != 207
$2F0    $B8A2   JP       V0, $8A2        ; Jump to V0 + 8A2
$2F2    $08C9   SYS      $8C9            ; System call to 8C9
$2F4    $CC51   RND      VC, #51         ; VC = random & 51
$2F6    $90FA   UNKNOWN  $90FA           ; Unknown 9xxx instruction
$2F8    $D284   DRW      V2, V8, #4      ; Draw 4-byte sprite at V2, V8
$2FA    $DAD4   DRW      VA, VD, #4      ; Draw 4-byte sprite at VA, VD
$2FC    $F2AB   UNKNOWN  F2AB            ; Unknown Fxxx instruction
$2FE    $5944   UNKNOWN  $5944           ; Unknown 5xxx instruction
$300    $2020   CALL     $020            ; Call subroutine at 020
$302    $2020   CALL     $020            ; Call subroutine at 020
$304    $2051   CALL     $051            ; Call subroutine at 051
$306    $ABFE   LD       I, $BFE         ; Load BFE into I
$308    $D885   DRW      V8, V8, #5      ; Draw 5-byte sprite at V8, V8
$30A    $3140   SE       V1, #40         ; Skip if V1 == 64
$30C    $5ADD   UNKNOWN  $5ADD           ; Unknown 5xxx instruction
$30E    $5CFC   UNKNOWN  $5CFC           ; Unknown 5xxx instruction
$310    $B27A   JP       V0, $27A        ; Jump to V0 + 27A
$312    $4DEF   SNE      VD, #EF         ; Skip if VD != 239
$314    $FD03   UNKNOWN  FD03            ; Unknown Fxxx instruction
$316    $21F6   CALL     $1F6            ; Call subroutine at 1F6
$318    $EF79   UNKNOWN  $EF79           ; Unknown Exxx instruction
$31A    $4B63   SNE      VB, #63         ; Skip if VB != 99
$31C    $726D   ADD      V2, #6D         ; Add 109 to V2
$31E    $DAEC   DRW      VA, VE, #C      ; Draw 12-byte sprite at VA, VE
$320    $13EC   JP       $3EC            ; Jump to 3EC
$322    $8437   SUBN     V4, V3          ; V4 = V3 - V4, VF = !borrow
$324    $7C34   ADD      VC, #34         ; Add 52 to VC
$326    $3088   SE       V0, #88         ; Skip if V0 == 136
$328    $9615   UNKNOWN  $9615           ; Unknown 9xxx instruction
$32A    $E7A6   UNKNOWN  $E7A6           ; Unknown Exxx instruction
$32C    $3B4E   SE       VB, #4E         ; Skip if VB == 78
$32E    $B6BC   JP       V0, $6BC        ; Jump to V0 + 6BC
$330    $7382   ADD      V3, #82         ; Add 130 to V3
$332    $09DF   SYS      $9DF            ; System call to 9DF
$334    $A8CF   LD       I, $8CF         ; Load 8CF into I
$336    $26AC   CALL     $6AC            ; Call subroutine at 6AC
$338    $F142   UNKNOWN  F142            ; Unknown Fxxx instruction
$33A    $E564   UNKNOWN  $E564           ; Unknown Exxx instruction
$33C    $EC30   UNKNOWN  $EC30           ; Unknown Exxx instruction
$33E    $58D3   UNKNOWN  $58D3           ; Unknown 5xxx instruction
$340    $A30F   LD       I, $30F         ; Load 30F into I
$342    $77B9   ADD      V7, #B9         ; Add 185 to V7
$344    $553D   UNKNOWN  $553D           ; Unknown 5xxx instruction
$346    $291C   CALL     $91C            ; Call subroutine at 91C
$348    $EF4F   UNKNOWN  $EF4F           ; Unknown Exxx instruction
$34A    $ABF9   LD       I, $BF9         ; Load BF9 into I
$34C    $1297   JP       $297            ; Jump to 297
$34E    $782D   ADD      V8, #2D         ; Add 45 to V8
$350    $043C   SYS      $43C            ; System call to 43C
$352    $E873   UNKNOWN  $E873           ; Unknown Exxx instruction
$354    $FBB9   UNKNOWN  FBB9            ; Unknown Fxxx instruction
$356    $216B   CALL     $16B            ; Call subroutine at 16B
$358    $7DC6   ADD      VD, #C6         ; Add 198 to VD
$35A    $2663   CALL     $663            ; Call subroutine at 663
$35C    $8B19   UNKNOWN  8B19            ; Unknown 8xxx instruction
$35E    $236F   CALL     $36F            ; Call subroutine at 36F
$360    $890C   UNKNOWN  890C            ; Unknown 8xxx instruction
$362    $3CC7   SE       VC, #C7         ; Skip if VC == 199
$364    $B452   JP       V0, $452        ; Jump to V0 + 452
$366    $60A4   LD       V0, #A4         ; Load 164 into V0
$368    $ECE9   UNKNOWN  $ECE9           ; Unknown Exxx instruction
$36A    $44D8   SNE      V4, #D8         ; Skip if V4 != 216
$36C    $EF23   UNKNOWN  $EF23           ; Unknown Exxx instruction
$36E    $21C7   CALL     $1C7            ; Call subroutine at 1C7
$370    $A49D   LD       I, $49D         ; Load 49D into I
$372    $9B20   SNE      VB, V2          ; Skip if VB != V2
$374    $9B90   SNE      VB, V9          ; Skip if VB != V9
$376    $66FE   LD       V6, #FE         ; Load 254 into V6
$378    $EABC   UNKNOWN  $EABC           ; Unknown Exxx instruction
$37A    $B7C3   JP       V0, $7C3        ; Jump to V0 + 7C3
$37C    $C9A7   RND      V9, #A7         ; V9 = random & A7
$37E    $4DB0   SNE      VD, #B0         ; Skip if VD != 176
$380    $0232   SYS      $232            ; System call to 232
$382    $5B03   UNKNOWN  $5B03           ; Unknown 5xxx instruction
$384    $5BA5   UNKNOWN  $5BA5           ; Unknown 5xxx instruction
$386    $261E   CALL     $61E            ; Call subroutine at 61E
$388    $5795   UNKNOWN  $5795           ; Unknown 5xxx instruction
$38A    $26B3   CALL     $6B3            ; Call subroutine at 6B3
$38C    $E276   UNKNOWN  $E276           ; Unknown Exxx instruction
$38E    $B3CE   JP       V0, $3CE        ; Jump to V0 + 3CE
$390    $EAF6   UNKNOWN  $EAF6           ; Unknown Exxx instruction
$392    $5438   UNKNOWN  $5438           ; Unknown 5xxx instruction
$394    $D4DB   DRW      V4, VD, #B      ; Draw 11-byte sprite at V4, VD
$396    $CE51   RND      VE, #51         ; VE = random & 51
$398    $81AD   UNKNOWN  81AD            ; Unknown 8xxx instruction
$39A    $EEC4   UNKNOWN  $EEC4           ; Unknown Exxx instruction
$39C    $960F   UNKNOWN  $960F           ; Unknown 9xxx instruction
$39E    $1949   JP       $949            ; Jump to 949
$3A0    $083C   SYS      $83C            ; System call to 83C
$3A2    $F948   UNKNOWN  F948            ; Unknown Fxxx instruction
$3A4    $B4F0   JP       V0, $4F0        ; Jump to V0 + 4F0
$3A6    $32DA   SE       V2, #DA         ; Skip if V2 == 218
$3A8    $8D9C   UNKNOWN  8D9C            ; Unknown 8xxx instruction
$3AA    $2ED4   CALL     $ED4            ; Call subroutine at ED4
$3AC    $A395   LD       I, $395         ; Load 395 into I
$3AE    $B5F7   JP       V0, $5F7        ; Jump to V0 + 5F7
$3B0    $3E19   SE       VE, #19         ; Skip if VE == 25
$3B2    $A02B   LD       I, $02B         ; Load 02B into I
$3B4    $2EE3   CALL     $EE3            ; Call subroutine at EE3
$3B6    $2039   CALL     $039            ; Call subroutine at 039
$3B8    $9923   UNKNOWN  $9923           ; Unknown 9xxx instruction
$3BA    $C81E   RND      V8, #1E         ; V8 = random & 1E
$3BC    $94AA   UNKNOWN  $94AA           ; Unknown 9xxx instruction
$3BE    $DBC3   DRW      VB, VC, #3      ; Draw 3-byte sprite at VB, VC
$3C0    $5C37   UNKNOWN  $5C37           ; Unknown 5xxx instruction
$3C2    $133A   JP       $33A            ; Jump to 33A
$3C4    $5434   UNKNOWN  $5434           ; Unknown 5xxx instruction
$3C6    $0609   SYS      $609            ; System call to 609
$3C8    $9CA8   UNKNOWN  $9CA8           ; Unknown 9xxx instruction
$3CA    $A495   LD       I, $495         ; Load 495 into I
$3CC    $14A4   JP       $4A4            ; Jump to 4A4
$3CE    $B51F   JP       V0, $51F        ; Jump to V0 + 51F
$3D0    $0634   SYS      $634            ; System call to 634
$3D2    $DE25   DRW      VE, V2, #5      ; Draw 5-byte sprite at VE, V2
$3D4    $3471   SE       V4, #71         ; Skip if V4 == 113
$3D6    $3696   SE       V6, #96         ; Skip if V6 == 150
$3D8    $DC87   DRW      VC, V8, #7      ; Draw 7-byte sprite at VC, V8
$3DA    $D0C4   DRW      V0, VC, #4      ; Draw 4-byte sprite at V0, VC
$3DC    $6F1B   LD       VF, #1B         ; Load 27 into VF
$3DE    $B626   JP       V0, $626        ; Jump to V0 + 626
$3E0    $7928   ADD      V9, #28         ; Add 40 to V9
$3E2    $F57E   UNKNOWN  F57E            ; Unknown Fxxx instruction
$3E4    $D549   DRW      V5, V4, #9      ; Draw 9-byte sprite at V5, V4
$3E6    $A974   LD       I, $974         ; Load 974 into I
$3E8    $1D60   JP       $D60            ; Jump to D60
$3EA    $8024   ADD      V0, V2          ; V0 += V2, VF = carry
$3EC    $F70D   UNKNOWN  F70D            ; Unknown Fxxx instruction
$3EE    $2F06   CALL     $F06            ; Call subroutine at F06
$3F0    $BD2A   JP       V0, $D2A        ; Jump to V0 + D2A
$3F2    $3D91   SE       VD, #91         ; Skip if VD == 145
$3F4    $F978   UNKNOWN  F978            ; Unknown Fxxx instruction
$3F6    $B70F   JP       V0, $70F        ; Jump to V0 + 70F
$3F8    $DF9F   DRW      VF, V9, #F      ; Draw 15-byte sprite at VF, V9
$3FA    $00C2   SYS      $0C2            ; System call to 0C2
$3FC    $00C5   SYS      $0C5            ; System call to 0C5
$3FE    $8A62   AND      VA, V6          ; VA &= V6
$400    $AA26   LD       I, $A26         ; Load A26 into I
$402    $07C3   SYS      $7C3            ; System call to 7C3
$404    $8014   ADD      V0, V1          ; V0 += V1, VF = carry
$406    $7ABA   ADD      VA, #BA         ; Add 186 to VA
$408    $7E8E   ADD      VE, #8E         ; Add 142 to VE
$40A    $7940   ADD      V9, #40         ; Add 64 to V9
$40C    $B9D9   JP       V0, $9D9        ; Jump to V0 + 9D9
$40E    $1742   JP       $742            ; Jump to 742
$410    $0C74   SYS      $C74            ; System call to C74
$412    $7C8A   ADD      VC, #8A         ; Add 138 to VC
$414    $B7B3   JP       V0, $7B3        ; Jump to V0 + 7B3
$416    $A44D   LD       I, $44D         ; Load 44D into I
$418    $F06E   UNKNOWN  F06E            ; Unknown Fxxx instruction
$41A    $D998   DRW      V9, V9, #8      ; Draw 8-byte sprite at V9, V9
$41C    $06FD   SYS      $6FD            ; System call to 6FD
$41E    $98BA   UNKNOWN  $98BA           ; Unknown 9xxx instruction
$420    $E49C   UNKNOWN  $E49C           ; Unknown Exxx instruction
$422    $D1E1   DRW      V1, VE, #1      ; Draw 1-byte sprite at V1, VE
$424    $D2D5   DRW      V2, VD, #5      ; Draw 5-byte sprite at V2, VD
$426    $18DD   JP       $8DD            ; Jump to 8DD
$428    $04F2   SYS      $4F2            ; System call to 4F2
$42A    $95F2   UNKNOWN  $95F2           ; Unknown 9xxx instruction
$42C    $D7BE   DRW      V7, VB, #E      ; Draw 14-byte sprite at V7, VB
$42E    $97E1   UNKNOWN  $97E1           ; Unknown 9xxx instruction
$430    $C87E   RND      V8, #7E         ; V8 = random & 7E
$432    $86CD   UNKNOWN  86CD            ; Unknown 8xxx instruction
$434    $8221   OR       V2, V2          ; V2 |= V2
$436    $95D1   UNKNOWN  $95D1           ; Unknown 9xxx instruction
$438    $4944   SNE      V9, #44         ; Skip if V9 != 68
$43A    $67C1   LD       V7, #C1         ; Load 193 into V7
$43C    $935D   UNKNOWN  $935D           ; Unknown 9xxx instruction
$43E    $3DDF   SE       VD, #DF         ; Skip if VD == 223
$440    $73D1   ADD      V3, #D1         ; Add 209 to V3
$442    $0207   SYS      $207            ; System call to 207
$444    $172C   JP       $72C            ; Jump to 72C
$446    $2716   CALL     $716            ; Call subroutine at 716
$448    $77DE   ADD      V7, #DE         ; Add 222 to V7
$44A    $C327   RND      V3, #27         ; V3 = random & 27
$44C    $5EDD   UNKNOWN  $5EDD           ; Unknown 5xxx instruction
$44E    $7E66   ADD      VE, #66         ; Add 102 to VE
$450    $3D35   SE       VD, #35         ; Skip if VD == 53
$452    $D532   DRW      V5, V3, #2      ; Draw 2-byte sprite at V5, V3
$454    $FBDA   UNKNOWN  FBDA            ; Unknown Fxxx instruction
$456    $10DE   JP       $0DE            ; Jump to 0DE
$458    $8108   UNKNOWN  8108            ; Unknown 8xxx instruction
$45A    $960D   UNKNOWN  $960D           ; Unknown 9xxx instruction
$45C    $C434   RND      V4, #34         ; V4 = random & 34
$45E    $ACEC   LD       I, $CEC         ; Load CEC into I
$460    $0A58   SYS      $A58            ; System call to A58
$462    $3798   SE       V7, #98         ; Skip if V7 == 152
$464    $34B6   SE       V4, #B6         ; Skip if V4 == 182
$466    $1378   JP       $378            ; Jump to 378
$468    $562F   UNKNOWN  $562F           ; Unknown 5xxx instruction
$46A    $BF7E   JP       V0, $F7E        ; Jump to V0 + F7E
$46C    $D746   DRW      V7, V4, #6      ; Draw 6-byte sprite at V7, V4
$46E    $7185   ADD      V1, #85         ; Add 133 to V1
$470    $FEE3   UNKNOWN  FEE3            ; Unknown Fxxx instruction
$472    $8201   OR       V2, V0          ; V2 |= V0
$474    $1B82   JP       $B82            ; Jump to B82
$476    $75F5   ADD      V5, #F5         ; Add 245 to V5
$478    $5306   UNKNOWN  $5306           ; Unknown 5xxx instruction
$47A    $4B05   SNE      VB, #05         ; Skip if VB != 5
$47C    $3501   SE       V5, #01         ; Skip if V5 == 1
$47E    $0189   SYS      $189            ; System call to 189
$480    $4689   SNE      V6, #89         ; Skip if V6 != 137
$482    $D127   DRW      V1, V2, #7      ; Draw 7-byte sprite at V1, V2
$484    $CA30   RND      VA, #30         ; VA = random & 30
$486    $0364   SYS      $364            ; System call to 364
$488    $B652   JP       V0, $652        ; Jump to V0 + 652
$48A    $38E1   SE       V8, #E1         ; Skip if V8 == 225
$48C    $48DB   SNE      V8, #DB         ; Skip if V8 != 219
$48E    $89E6   SHR      V9              ; V9 >>= 1, VF = LSB
$490    $2705   CALL     $705            ; Call subroutine at 705
$492    $70C2   ADD      V0, #C2         ; Add 194 to V0
$494    $20CC   CALL     $0CC            ; Call subroutine at 0CC
$496    $BFA4   JP       V0, $FA4        ; Jump to V0 + FA4
$498    $E001   UNKNOWN  $E001           ; Unknown Exxx instruction
$49A    $3A90   SE       VA, #90         ; Skip if VA == 144
$49C    $B76F   JP       V0, $76F        ; Jump to V0 + 76F
$49E    $63C3   LD       V3, #C3         ; Load 195 into V3
$4A0    $94E6   UNKNOWN  $94E6           ; Unknown 9xxx instruction
$4A2    $A13A   LD       I, $13A         ; Load 13A into I
$4A4    $FE0E   UNKNOWN  FE0E            ; Unknown Fxxx instruction
$4A6    $C951   RND      V9, #51         ; V9 = random & 51
$4A8    $0479   SYS      $479            ; System call to 479
$4AA    $CCEF   RND      VC, #EF         ; VC = random & EF
$4AC    $D74A   DRW      V7, V4, #A      ; Draw 10-byte sprite at V7, V4
$4AE    $8F1A   UNKNOWN  8F1A            ; Unknown 8xxx instruction
$4B0    $E93B   UNKNOWN  $E93B           ; Unknown Exxx instruction
$4B2    $AF61   LD       I, $F61         ; Load F61 into I
$4B4    $5FE8   UNKNOWN  $5FE8           ; Unknown 5xxx instruction
$4B6    $F12C   UNKNOWN  F12C            ; Unknown Fxxx instruction
$4B8    $6F5E   LD       VF, #5E         ; Load 94 into VF
$4BA    $6A0E   LD       VA, #0E         ; Load 14 into VA
$4BC    $EA2D   UNKNOWN  $EA2D           ; Unknown Exxx instruction
$4BE    $E7F0   UNKNOWN  $E7F0           ; Unknown Exxx instruction
$4C0    $2E48   CALL     $E48            ; Call subroutine at E48
$4C2    $BAA3   JP       V0, $AA3        ; Jump to V0 + AA3
$4C4    $7A77   ADD      VA, #77         ; Add 119 to VA
$4C6    $15EC   JP       $5EC            ; Jump to 5EC
$4C8    $356B   SE       V5, #6B         ; Skip if V5 == 107
$4CA    $0ABE   SYS      $ABE            ; System call to ABE
$4CC    $D0E5   DRW      V0, VE, #5      ; Draw 5-byte sprite at V0, VE
$4CE    $FDFB   UNKNOWN  FDFB            ; Unknown Fxxx instruction
$4D0    $FAB8   UNKNOWN  FAB8            ; Unknown Fxxx instruction
$4D2    $6A5E   LD       VA, #5E         ; Load 94 into VA
$4D4    $282B   CALL     $82B            ; Call subroutine at 82B
$4D6    $E3C7   UNKNOWN  $E3C7           ; Unknown Exxx instruction
$4D8    $AABA   LD       I, $ABA         ; Load ABA into I
$4DA    $2230   CALL     $230            ; Call subroutine at 230
$4DC    $EB32   UNKNOWN  $EB32           ; Unknown Exxx instruction
$4DE    $75D8   ADD      V5, #D8         ; Add 216 to V5
$4E0    $C44B   RND      V4, #4B         ; V4 = random & 4B
$4E2    $E45C   UNKNOWN  $E45C           ; Unknown Exxx instruction
$4E4    $67F5   LD       V7, #F5         ; Load 245 into V7
$4E6    $653F   LD       V5, #3F         ; Load 63 into V5
$4E8    $FC06   UNKNOWN  FC06            ; Unknown Fxxx instruction
$4EA    $EC07   UNKNOWN  $EC07           ; Unknown Exxx instruction
$4EC    $3827   SE       V8, #27         ; Skip if V8 == 39
$4EE    $12D6   JP       $2D6            ; Jump to 2D6
$4F0    $AC45   LD       I, $C45         ; Load C45 into I
$4F2    $FF34   UNKNOWN  FF34            ; Unknown Fxxx instruction
$4F4    $CFEB   RND      VF, #EB         ; VF = random & EB
$4F6    $40E5   SNE      V0, #E5         ; Skip if V0 != 229
$4F8    $604A   LD       V0, #4A         ; Load 74 into V0
$4FA    $9A40   SNE      VA, V4          ; Skip if VA != V4
$4FC    $9C3A   UNKNOWN  $9C3A           ; Unknown 9xxx instruction
$4FE    $FB7A   UNKNOWN  FB7A            ; Unknown Fxxx instruction
$500    $2E49   CALL     $E49            ; Call subroutine at E49
$502    $BBA0   JP       V0, $BA0        ; Jump to V0 + BA0
$504    $5D98   UNKNOWN  $5D98           ; Unknown 5xxx instruction
$506    $280D   CALL     $80D            ; Call subroutine at 80D
$508    $C592   RND      V5, #92         ; V5 = random & 92
$50A    $3A19   SE       VA, #19         ; Skip if VA == 25
$50C    $11FC   JP       $1FC            ; Jump to 1FC
$50E    $3014   SE       V0, #14         ; Skip if V0 == 20
$510    $88E8   UNKNOWN  88E8            ; Unknown 8xxx instruction
$512    $BDA1   JP       V0, $DA1        ; Jump to V0 + DA1
$514    $A599   LD       I, $599         ; Load 599 into I
$516    $32AB   SE       V2, #AB         ; Skip if V2 == 171
$518    $71CE   ADD      V1, #CE         ; Add 206 to V1
$51A    $F23A   UNKNOWN  F23A            ; Unknown Fxxx instruction
$51C    $A6FF   LD       I, $6FF         ; Load 6FF into I
$51E    $3C89   SE       VC, #89         ; Skip if VC == 137
$520    $6CFF   LD       VC, #FF         ; Load 255 into VC
$522    $51F9   UNKNOWN  $51F9           ; Unknown 5xxx instruction
$524    $7B6F   ADD      VB, #6F         ; Add 111 to VB
$526    $AF22   LD       I, $F22         ; Load F22 into I
$528    $E82D   UNKNOWN  $E82D           ; Unknown Exxx instruction
$52A    $3A63   SE       VA, #63         ; Skip if VA == 99
$52C    $0A78   SYS      $A78            ; System call to A78
$52E    $455C   SNE      V5, #5C         ; Skip if V5 != 92
$530    $5055   UNKNOWN  $5055           ; Unknown 5xxx instruction
$532    $B98D   JP       V0, $98D        ; Jump to V0 + 98D
$534    $E38D   UNKNOWN  $E38D           ; Unknown Exxx instruction
$536    $41F2   SNE      V1, #F2         ; Skip if V1 != 242
$538    $94BE   UNKNOWN  $94BE           ; Unknown 9xxx instruction
$53A    $7B64   ADD      VB, #64         ; Add 100 to VB
$53C    $7248   ADD      V2, #48         ; Add 72 to V2
$53E    $16F8   JP       $6F8            ; Jump to 6F8
$540    $6AE2   LD       VA, #E2         ; Load 226 into VA
$542    $9928   UNKNOWN  $9928           ; Unknown 9xxx instruction
$544    $9A13   UNKNOWN  $9A13           ; Unknown 9xxx instruction
$546    $317A   SE       V1, #7A         ; Skip if V1 == 122
$548    $682A   LD       V8, #2A         ; Load 42 into V8
$54A    $90E3   UNKNOWN  $90E3           ; Unknown 9xxx instruction
$54C    $2E23   CALL     $E23            ; Call subroutine at E23
$54E    $B1D0   JP       V0, $1D0        ; Jump to V0 + 1D0
$550    $8813   XOR      V8, V1          ; V8 ^= V1
$552    $7934   ADD      V9, #34         ; Add 52 to V9
$554    $129E   JP       $29E            ; Jump to 29E
$556    $D641   DRW      V6, V4, #1      ; Draw 1-byte sprite at V6, V4
$558    $FF7B   UNKNOWN  FF7B            ; Unknown Fxxx instruction
$55A    $C539   RND      V5, #39         ; V5 = random & 39
$55C    $8D00   LD       VD, V0          ; VD = V0
$55E    $E737   UNKNOWN  $E737           ; Unknown Exxx instruction
$560    $A235   LD       I, $235         ; Load 235 into I
$562    $07F6   SYS      $7F6            ; System call to 7F6
$564    $A589   LD       I, $589         ; Load 589 into I
$566    $DEF8   DRW      VE, VF, #8      ; Draw 8-byte sprite at VE, VF
$568    $E1F8   UNKNOWN  $E1F8           ; Unknown Exxx instruction
$56A    $7896   ADD      V8, #96         ; Add 150 to V8
$56C    $824E   SHL      V2              ; V2 <<= 1, VF = MSB
$56E    $4EBC   SNE      VE, #BC         ; Skip if VE != 188
$570    $8271   OR       V2, V7          ; V2 |= V7
$572    $F191   UNKNOWN  F191            ; Unknown Fxxx instruction
$574    $8505   SUB      V5, V0          ; V5 -= V0, VF = !borrow
$576    $27E2   CALL     $7E2            ; Call subroutine at 7E2
$578    $A90A   LD       I, $90A         ; Load 90A into I
$57A    $70EC   ADD      V0, #EC         ; Add 236 to V0
$57C    $3239   SE       V2, #39         ; Skip if V2 == 57
$57E    $A1E1   LD       I, $1E1         ; Load 1E1 into I
$580    $4C46   SNE      VC, #46         ; Skip if VC != 70
$582    $1A39   JP       $A39            ; Jump to A39
$584    $1DC7   JP       $DC7            ; Jump to DC7
$586    $CC35   RND      VC, #35         ; VC = random & 35
$588    $7417   ADD      V4, #17         ; Add 23 to V4
$58A    $4FE4   SNE      VF, #E4         ; Skip if VF != 228
$58C    $3A89   SE       VA, #89         ; Skip if VA == 137
$58E    $D3E6   DRW      V3, VE, #6      ; Draw 6-byte sprite at V3, VE
$590    $CFF3   RND      VF, #F3         ; VF = random & F3
$592    $150A   JP       $50A            ; Jump to 50A
$594    $3816   SE       V8, #16         ; Skip if V8 == 22
$596    $EB94   UNKNOWN  $EB94           ; Unknown Exxx instruction
$598    $CA1F   RND      VA, #1F         ; VA = random & 1F
$59A    $1C78   JP       $C78            ; Jump to C78
$59C    $FFCE   UNKNOWN  FFCE            ; Unknown Fxxx instruction
$59E    $AFFC   LD       I, $FFC         ; Load FFC into I
$5A0    $D5C3   DRW      V5, VC, #3      ; Draw 3-byte sprite at V5, VC
$5A2    $74CA   ADD      V4, #CA         ; Add 202 to V4
$5A4    $B64A   JP       V0, $64A        ; Jump to V0 + 64A
$5A6    $F553   UNKNOWN  F553            ; Unknown Fxxx instruction
$5A8    $03FB   SYS      $3FB            ; System call to 3FB
$5AA    $40EE   SNE      V0, #EE         ; Skip if V0 != 238
$5AC    $21A0   CALL     $1A0            ; Call subroutine at 1A0
$5AE    $0E34   SYS      $E34            ; System call to E34
$5B0    $3202   SE       V2, #02         ; Skip if V2 == 2
$5B2    $AF23   LD       I, $F23         ; Load F23 into I
$5B4    $4A54   SNE      VA, #54         ; Skip if VA != 84
$5B6    $457C   SNE      V5, #7C         ; Skip if V5 != 124
$5B8    $718A   ADD      V1, #8A         ; Add 138 to V1
$5BA    $F150   UNKNOWN  F150            ; Unknown Fxxx instruction
$5BC    $20A0   CALL     $0A0            ; Call subroutine at 0A0
$5BE    $10AA   JP       $0AA            ; Jump to 0AA
$5C0    $428B   SNE      V2, #8B         ; Skip if V2 != 139
$5C2    $A29A   LD       I, $29A         ; Load 29A into I
$5C4    $16D2   JP       $6D2            ; Jump to 6D2
$5C6    $827E   SHL      V2              ; V2 <<= 1, VF = MSB
$5C8    $F920   UNKNOWN  F920            ; Unknown Fxxx instruction
$5CA    $4DAB   SNE      VD, #AB         ; Skip if VD != 171
$5CC    $CA8F   RND      VA, #8F         ; VA = random & 8F
$5CE    $3D81   SE       VD, #81         ; Skip if VD == 129
$5D0    $2E24   CALL     $E24            ; Call subroutine at E24
$5D2    $805F   UNKNOWN  805F            ; Unknown 8xxx instruction
$5D4    $D175   DRW      V1, V7, #5      ; Draw 5-byte sprite at V1, V7
$5D6    $6E83   LD       VE, #83         ; Load 131 into VE
$5D8    $67B1   LD       V7, #B1         ; Load 177 into V7
$5DA    $A12A   LD       I, $12A         ; Load 12A into I
$5DC    $BF76   JP       V0, $F76        ; Jump to V0 + F76
$5DE    $4786   SNE      V7, #86         ; Skip if V7 != 134
$5E0    $B031   JP       V0, $031        ; Jump to V0 + 031
$5E2    $D012   DRW      V0, V1, #2      ; Draw 2-byte sprite at V0, V1
$5E4    $160F   JP       $60F            ; Jump to 60F
$5E6    $BC26   JP       V0, $C26        ; Jump to V0 + C26
$5E8    $C150   RND      V1, #50         ; V1 = random & 50
$5EA    $9A84   UNKNOWN  $9A84           ; Unknown 9xxx instruction
$5EC    $4D47   SNE      VD, #47         ; Skip if VD != 71
$5EE    $B45F   JP       V0, $45F        ; Jump to V0 + 45F
$5F0    $BC9D   JP       V0, $C9D        ; Jump to V0 + C9D
$5F2    $BBB6   JP       V0, $BB6        ; Jump to V0 + BB6
$5F4    $0C8B   SYS      $C8B            ; System call to C8B
$5F6    $E0E8   UNKNOWN  $E0E8           ; Unknown Exxx instruction
$5F8    $1E3C   JP       $E3C            ; Jump to E3C
$5FA    $9DD2   UNKNOWN  $9DD2           ; Unknown 9xxx instruction
$5FC    $DF33   DRW      VF, V3, #3      ; Draw 3-byte sprite at VF, V3
$5FE    $79BA   ADD      V9, #BA         ; Add 186 to V9
$600    $7801   ADD      V8, #01         ; Add 1 to V8
$602    $1422   JP       $422            ; Jump to 422
$604    $07FF   SYS      $7FF            ; System call to 7FF
$606    $3AC9   SE       VA, #C9         ; Skip if VA == 201
$608    $402D   SNE      V0, #2D         ; Skip if V0 != 45
$60A    $FEC0   UNKNOWN  FEC0            ; Unknown Fxxx instruction
$60C    $9AE5   UNKNOWN  $9AE5           ; Unknown 9xxx instruction
$60E    $7924   ADD      V9, #24         ; Add 36 to V9
$610    $6412   LD       V4, #12         ; Load 18 into V4
$612    $32EC   SE       V2, #EC         ; Skip if V2 == 236
$614    $FB32   UNKNOWN  FB32            ; Unknown Fxxx instruction
$616    $680A   LD       V8, #0A         ; Load 10 into V8
$618    $3C6F   SE       VC, #6F         ; Skip if VC == 111
$61A    $CC5E   RND      VC, #5E         ; VC = random & 5E
$61C    $ABC8   LD       I, $BC8         ; Load BC8 into I
$61E    $042A   SYS      $42A            ; System call to 42A
$620    $A03A   LD       I, $03A         ; Load 03A into I
$622    $0058   SYS      $058            ; System call to 058
$624    $A103   LD       I, $103         ; Load 103 into I
$626    $DFF9   DRW      VF, VF, #9      ; Draw 9-byte sprite at VF, VF
$628    $1FF5   JP       $FF5            ; Jump to FF5
$62A    $7B46   ADD      VB, #46         ; Add 70 to VB
$62C    $8825   SUB      V8, V2          ; V8 -= V2, VF = !borrow
$62E    $CC11   RND      VC, #11         ; VC = random & 11
$630    $9980   SNE      V9, V8          ; Skip if V9 != V8
$632    $A62A   LD       I, $62A         ; Load 62A into I
$634    $A1D8   LD       I, $1D8         ; Load 1D8 into I
$636    $F618   LD       ST, V6          ; Sound timer = V6
$638    $110F   JP       $10F            ; Jump to 10F
$63A    $8C28   UNKNOWN  8C28            ; Unknown 8xxx instruction
$63C    $C623   RND      V6, #23         ; V6 = random & 23
$63E    $12F5   JP       $2F5            ; Jump to 2F5
$640    $4AC4   SNE      VA, #C4         ; Skip if VA != 196
$642    $ABBF   LD       I, $BBF         ; Load BBF into I
$644    $341A   SE       V4, #1A         ; Skip if V4 == 26
$646    $D317   DRW      V3, V1, #7      ; Draw 7-byte sprite at V3, V1
$648    $6366   LD       V3, #66         ; Load 102 into V3
$64A    $4ED1   SNE      VE, #D1         ; Skip if VE != 209
$64C    $628F   LD       V2, #8F         ; Load 143 into V2
$64E    $68B1   LD       V8, #B1         ; Load 177 into V8
$650    $4E11   SNE      VE, #11         ; Skip if VE != 17
$652    $B796   JP       V0, $796        ; Jump to V0 + 796
$654    $5159   UNKNOWN  $5159           ; Unknown 5xxx instruction
$656    $A625   LD       I, $625         ; Load 625 into I
$658    $2AAA   CALL     $AAA            ; Call subroutine at AAA
$65A    $29AD   CALL     $9AD            ; Call subroutine at 9AD
$65C    $B95E   JP       V0, $95E        ; Jump to V0 + 95E
$65E    $2CD7   CALL     $CD7            ; Call subroutine at CD7
$660    $6EF4   LD       VE, #F4         ; Load 244 into VE
$662    $F73E   UNKNOWN  F73E            ; Unknown Fxxx instruction
$664    $0ECB   SYS      $ECB            ; System call to ECB
$666    $D22E   DRW      V2, V2, #E      ; Draw 14-byte sprite at V2, V2
$668    $4DC0   SNE      VD, #C0         ; Skip if VD != 192
$66A    $E68C   UNKNOWN  $E68C           ; Unknown Exxx instruction
$66C    $1BDF   JP       $BDF            ; Jump to BDF
$66E    $7C19   ADD      VC, #19         ; Add 25 to VC
$670    $0E5F   SYS      $E5F            ; System call to E5F
$672    $8AF5   SUB      VA, VF          ; VA -= VF, VF = !borrow
$674    $7E7F   ADD      VE, #7F         ; Add 127 to VE
$676    $BE0A   JP       V0, $E0A        ; Jump to V0 + E0A
$678    $1491   JP       $491            ; Jump to 491
$67A    $99FF   UNKNOWN  $99FF           ; Unknown 9xxx instruction
$67C    $038C   SYS      $38C            ; System call to 38C
$67E    $4652   SNE      V6, #52         ; Skip if V6 != 82
$680    $4810   SNE      V8, #10         ; Skip if V8 != 16
$682    $A6BB   LD       I, $6BB         ; Load 6BB into I
$684    $26C3   CALL     $6C3            ; Call subroutine at 6C3
$686    $11B3   JP       $1B3            ; Jump to 1B3
$688    $AA23   LD       I, $A23         ; Load A23 into I
$68A    $B75A   JP       V0, $75A        ; Jump to V0 + 75A
$68C    $ED66   UNKNOWN  $ED66           ; Unknown Exxx instruction
$68E    $E663   UNKNOWN  $E663           ; Unknown Exxx instruction
$690    $B6EE   JP       V0, $6EE        ; Jump to V0 + 6EE
$692    $0197   SYS      $197            ; System call to 197
$694    $AF83   LD       I, $F83         ; Load F83 into I
$696    $C839   RND      V8, #39         ; V8 = random & 39
$698    $930A   UNKNOWN  $930A           ; Unknown 9xxx instruction
$69A    $1DC2   JP       $DC2            ; Jump to DC2
$69C    $A874   LD       I, $874         ; Load 874 into I
$69E    $C967   RND      V9, #67         ; V9 = random & 67
$6A0    $A2FF   LD       I, $2FF         ; Load 2FF into I
$6A2    $253D   CALL     $53D            ; Call subroutine at 53D
$6A4    $3B0B   SE       VB, #0B         ; Skip if VB == 11
$6A6    $523F   UNKNOWN  $523F           ; Unknown 5xxx instruction
$6A8    $EB9F   UNKNOWN  $EB9F           ; Unknown Exxx instruction
$6AA    $7746   ADD      V7, #46         ; Add 70 to V7
$6AC    $052D   SYS      $52D            ; System call to 52D
$6AE    $3110   SE       V1, #10         ; Skip if V1 == 16
$6B0    $A330   LD       I, $330         ; Load 330 into I
$6B2    $1911   JP       $911            ; Jump to 911
$6B4    $BA2B   JP       V0, $A2B        ; Jump to V0 + A2B
$6B6    $E27F   UNKNOWN  $E27F           ; Unknown Exxx instruction
$6B8    $1D49   JP       $D49            ; Jump to D49
$6BA    $D8F8   DRW      V8, VF, #8      ; Draw 8-byte sprite at V8, VF
$6BC    $1254   JP       $254            ; Jump to 254
$6BE    $3961   SE       V9, #61         ; Skip if V9 == 97
$6C0    $AACF   LD       I, $ACF         ; Load ACF into I
$6C2    $F514   UNKNOWN  F514            ; Unknown Fxxx instruction
$6C4    $86C7   SUBN     V6, VC          ; V6 = VC - V6, VF = !borrow
$6C6    $3103   SE       V1, #03         ; Skip if V1 == 3
$6C8    $F09B   UNKNOWN  F09B            ; Unknown Fxxx instruction
$6CA    $0F05   SYS      $F05            ; System call to F05
$6CC    $1F35   JP       $F35            ; Jump to F35
$6CE    $9953   UNKNOWN  $9953           ; Unknown 9xxx instruction
$6D0    $81C9   UNKNOWN  81C9            ; Unknown 8xxx instruction
$6D2    $A3F2   LD       I, $3F2         ; Load 3F2 into I
$6D4    $2833   CALL     $833            ; Call subroutine at 833
$6D6    $B565   JP       V0, $565        ; Jump to V0 + 565
$6D8    $062D   SYS      $62D            ; System call to 62D
$6DA    $CBEA   RND      VB, #EA         ; VB = random & EA
$6DC    $E96C   UNKNOWN  $E96C           ; Unknown Exxx instruction
$6DE    $3CA0   SE       VC, #A0         ; Skip if VC == 160
$6E0    $D154   DRW      V1, V5, #4      ; Draw 4-byte sprite at V1, V5
$6E2    $8056   SHR      V0              ; V0 >>= 1, VF = LSB
$6E4    $61B4   LD       V1, #B4         ; Load 180 into V1
$6E6    $BAE4   JP       V0, $AE4        ; Jump to V0 + AE4
$6E8    $147C   JP       $47C            ; Jump to 47C
$6EA    $88BF   UNKNOWN  88BF            ; Unknown 8xxx instruction
$6EC    $F0FE   UNKNOWN  F0FE            ; Unknown Fxxx instruction
$6EE    $B67B   JP       V0, $67B        ; Jump to V0 + 67B
$6F0    $09C4   SYS      $9C4            ; System call to 9C4
$6F2    $E72E   UNKNOWN  $E72E           ; Unknown Exxx instruction
$6F4    $B175   JP       V0, $175        ; Jump to V0 + 175
$6F6    $E722   UNKNOWN  $E722           ; Unknown Exxx instruction
$6F8    $1434   JP       $434            ; Jump to 434
$6FA    $A503   LD       I, $503         ; Load 503 into I
$6FC    $23DA   CALL     $3DA            ; Call subroutine at 3DA
$6FE    $63B1   LD       V3, #B1         ; Load 177 into V3
$700    $2D7C   CALL     $D7C            ; Call subroutine at D7C
$702    $26E0   CALL     $6E0            ; Call subroutine at 6E0
$704    $9799   UNKNOWN  $9799           ; Unknown 9xxx instruction
$706    $3B56   SE       VB, #56         ; Skip if VB == 86
$708    $6A71   LD       VA, #71         ; Load 113 into VA
$70A    $723A   ADD      V2, #3A         ; Add 58 to V2
$70C    $D0A6   DRW      V0, VA, #6      ; Draw 6-byte sprite at V0, VA
$70E    $3348   SE       V3, #48         ; Skip if V3 == 72
$710    $B9CA   JP       V0, $9CA        ; Jump to V0 + 9CA
$712    $5249   UNKNOWN  $5249           ; Unknown 5xxx instruction
$714    $1FB0   JP       $FB0            ; Jump to FB0
$716    $3881   SE       V8, #81         ; Skip if V8 == 129
$718    $BFA0   JP       V0, $FA0        ; Jump to V0 + FA0
$71A    $11FC   JP       $1FC            ; Jump to 1FC
$71C    $A265   LD       I, $265         ; Load 265 into I
$71E    $42BF   SNE      V2, #BF         ; Skip if V2 != 191
$720    $2084   CALL     $084            ; Call subroutine at 084
$722    $30CC   SE       V0, #CC         ; Skip if V0 == 204
$724    $EBD9   UNKNOWN  $EBD9           ; Unknown Exxx instruction
$726    $C534   RND      V5, #34         ; V5 = random & 34
$728    $BA04   JP       V0, $A04        ; Jump to V0 + A04
$72A    $4E79   SNE      VE, #79         ; Skip if VE != 121
$72C    $BE99   JP       V0, $E99        ; Jump to V0 + E99
$72E    $89BD   UNKNOWN  89BD            ; Unknown 8xxx instruction
$730    $A3D0   LD       I, $3D0         ; Load 3D0 into I
$732    $F82A   UNKNOWN  F82A            ; Unknown Fxxx instruction
$734    $06F3   SYS      $6F3            ; System call to 6F3
$736    $3746   SE       V7, #46         ; Skip if V7 == 70
$738    $1261   JP       $261            ; Jump to 261
$73A    $990E   UNKNOWN  $990E           ; Unknown 9xxx instruction
$73C    $101C   JP       $01C            ; Jump to 01C
$73E    $3F23   SE       VF, #23         ; Skip if VF == 35
$740    $0068   SYS      $068            ; System call to 068
$742    $9775   UNKNOWN  $9775           ; Unknown 9xxx instruction
$744    $B972   JP       V0, $972        ; Jump to V0 + 972
$746    $7135   ADD      V1, #35         ; Add 53 to V1
$748    $1C68   JP       $C68            ; Jump to C68
$74A    $C60B   RND      V6, #0B         ; V6 = random & 0B
$74C    $F753   UNKNOWN  F753            ; Unknown Fxxx instruction
$74E    $AB2D   LD       I, $B2D         ; Load B2D into I
$750    $96C9   UNKNOWN  $96C9           ; Unknown 9xxx instruction
$752    $2539   CALL     $539            ; Call subroutine at 539
$754    $4630   SNE      V6, #30         ; Skip if V6 != 48
$756    $866D   UNKNOWN  866D            ; Unknown 8xxx instruction
$758    $A68A   LD       I, $68A         ; Load 68A into I
$75A    $DFAD   DRW      VF, VA, #D      ; Draw 13-byte sprite at VF, VA
$75C    $B71E   JP       V0, $71E        ; Jump to V0 + 71E
$75E    $740E   ADD      V4, #0E         ; Add 14 to V4
$760    $728A   ADD      V2, #8A         ; Add 138 to V2
$762    $E56D   UNKNOWN  $E56D           ; Unknown Exxx instruction
$764    $EE32   UNKNOWN  $EE32           ; Unknown Exxx instruction
$766    $CA49   RND      VA, #49         ; VA = random & 49
$768    $9CE9   UNKNOWN  $9CE9           ; Unknown 9xxx instruction
$76A    $035B   SYS      $35B            ; System call to 35B
$76C    $69C6   LD       V9, #C6         ; Load 198 into V9
$76E    $3310   SE       V3, #10         ; Skip if V3 == 16
$770    $6F2B   LD       VF, #2B         ; Load 43 into VF
$772    $BF9B   JP       V0, $F9B        ; Jump to V0 + F9B
$774    $CA2A   RND      VA, #2A         ; VA = random & 2A
$776    $D8A3   DRW      V8, VA, #3      ; Draw 3-byte sprite at V8, VA
$778    $BC0D   JP       V0, $C0D        ; Jump to V0 + C0D
$77A    $F4B8   UNKNOWN  F4B8            ; Unknown Fxxx instruction
$77C    $5529   UNKNOWN  $5529           ; Unknown 5xxx instruction
$77E    $A190   LD       I, $190         ; Load 190 into I
$780    $BDA3   JP       V0, $DA3        ; Jump to V0 + DA3
$782    $53D8   UNKNOWN  $53D8           ; Unknown 5xxx instruction
$784    $8021   OR       V0, V2          ; V0 |= V2
$786    $BB0F   JP       V0, $B0F        ; Jump to V0 + B0F
$788    $553E   UNKNOWN  $553E           ; Unknown 5xxx instruction
$78A    $9E38   UNKNOWN  $9E38           ; Unknown 9xxx instruction
$78C    $7FEC   ADD      VF, #EC         ; Add 236 to VF
$78E    $5D62   UNKNOWN  $5D62           ; Unknown 5xxx instruction
$790    $0F48   SYS      $F48            ; System call to F48
$792    $64EC   LD       V4, #EC         ; Load 236 into V4
$794    $C7D7   RND      V7, #D7         ; V7 = random & D7
$796    $669B   LD       V6, #9B         ; Load 155 into V6
$798    $888C   UNKNOWN  888C            ; Unknown 8xxx instruction
$79A    $DCAC   DRW      VC, VA, #C      ; Draw 12-byte sprite at VC, VA
$79C    $7C35   ADD      VC, #35         ; Add 53 to VC
$79E    $3145   SE       V1, #45         ; Skip if V1 == 69
$7A0    $BD55   JP       V0, $D55        ; Jump to V0 + D55
$7A2    $7962   ADD      V9, #62         ; Add 98 to V9
$7A4    $3BC5   SE       VB, #C5         ; Skip if VB == 197
$7A6    $F9E4   UNKNOWN  F9E4            ; Unknown Fxxx instruction
$7A8    $07F7   SYS      $7F7            ; System call to 7F7
$7AA    $15EF   JP       $5EF            ; Jump to 5EF
$7AC    $CDDA   RND      VD, #DA         ; VD = random & DA
$7AE    $9B42   UNKNOWN  $9B42           ; Unknown 9xxx instruction
$7B0    $83B9   UNKNOWN  83B9            ; Unknown 8xxx instruction
$7B2    $8146   SHR      V1              ; V1 >>= 1, VF = LSB
$7B4    $61B1   LD       V1, #B1         ; Load 177 into V1
$7B6    $7DCA   ADD      VD, #CA         ; Add 202 to VD
$7B8    $8E92   AND      VE, V9          ; VE &= V9
$7BA    $8D45   SUB      VD, V4          ; VD -= V4, VF = !borrow
$7BC    $A77F   LD       I, $77F         ; Load 77F into I
$7BE    $03B6   SYS      $3B6            ; System call to 3B6
$7C0    $0688   SYS      $688            ; System call to 688
$7C2    $9D08   UNKNOWN  $9D08           ; Unknown 9xxx instruction
$7C4    $625B   LD       V2, #5B         ; Load 91 into V2
$7C6    $DE9E   DRW      VE, V9, #E      ; Draw 14-byte sprite at VE, V9
$7C8    $A6C3   LD       I, $6C3         ; Load 6C3 into I
$7CA    $A510   LD       I, $510         ; Load 510 into I
$7CC    $4DFB   SNE      VD, #FB         ; Skip if VD != 251
$7CE    $DB5D   DRW      VB, V5, #D      ; Draw 13-byte sprite at VB, V5
$7D0    $18B2   JP       $8B2            ; Jump to 8B2
$7D2    $5E3C   UNKNOWN  $5E3C           ; Unknown 5xxx instruction
$7D4    $8AFE   SHL      VA              ; VA <<= 1, VF = MSB
$7D6    $8F37   SUBN     VF, V3          ; VF = V3 - VF, VF = !borrow
$7D8    $E3E9   UNKNOWN  $E3E9           ; Unknown Exxx instruction
$7DA    $EB55   UNKNOWN  $EB55           ; Unknown Exxx instruction
$7DC    $A893   LD       I, $893         ; Load 893 into I
$7DE    $C505   RND      V5, #05         ; V5 = random & 05
$7E0    $A55A   LD       I, $55A         ; Load 55A into I
$7E2    $865A   UNKNOWN  865A            ; Unknown 8xxx instruction
$7E4    $2FD8   CALL     $FD8            ; Call subroutine at FD8
$7E6    $109B   JP       $09B            ; Jump to 09B
$7E8    $766D   ADD      V6, #6D         ; Add 109 to V6
$7EA    $515E   UNKNOWN  $515E           ; Unknown 5xxx instruction
$7EC    $7553   ADD      V5, #53         ; Add 83 to V5
$7EE    $0ED7   SYS      $ED7            ; System call to ED7
$7F0    $745E   ADD      V4, #5E         ; Add 94 to V4
$7F2    $9A49   UNKNOWN  $9A49           ; Unknown 9xxx instruction
$7F4    $AE93   LD       I, $E93         ; Load E93 into I
$7F6    $6930   LD       V9, #30         ; Load 48 into V9
$7F8    $82B5   SUB      V2, VB          ; V2 -= VB, VF = !borrow
$7FA    $5BD3   UNKNOWN  $5BD3           ; Unknown 5xxx instruction
$7FC    $AC11   LD       I, $C11         ; Load C11 into I
$7FE    $93B8   UNKNOWN  $93B8           ; Unknown 9xxx instruction
$800    $4742   SNE      V7, #42         ; Skip if V7 != 66
$802    $B4DE   JP       V0, $4DE        ; Jump to V0 + 4DE
$804    $A0BA   LD       I, $0BA         ; Load 0BA into I
$806    $DB51   DRW      VB, V5, #1      ; Draw 1-byte sprite at VB, V5
$808    $81E6   SHR      V1              ; V1 >>= 1, VF = LSB
$80A    $0F3E   SYS      $F3E            ; System call to F3E
$80C    $15AB   JP       $5AB            ; Jump to 5AB
$80E    $B06F   JP       V0, $06F        ; Jump to V0 + 06F
$810    $E59C   UNKNOWN  $E59C           ; Unknown Exxx instruction
$812    $357F   SE       V5, #7F         ; Skip if V5 == 127
$814    $47DB   SNE      V7, #DB         ; Skip if V7 != 219
$816    $F265   LD       V2, [I]         ; Load V0-V2 from I
$818    $C344   RND      V3, #44         ; V3 = random & 44
$81A    $8ECD   UNKNOWN  8ECD            ; Unknown 8xxx instruction
$81C    $FF7E   UNKNOWN  FF7E            ; Unknown Fxxx instruction
$81E    $EB08   UNKNOWN  $EB08           ; Unknown Exxx instruction
$820    $931B   UNKNOWN  $931B           ; Unknown 9xxx instruction
$822    $774A   ADD      V7, #4A         ; Add 74 to V7
$824    $A287   LD       I, $287         ; Load 287 into I
$826    $A1C7   LD       I, $1C7         ; Load 1C7 into I
$828    $0BA6   SYS      $BA6            ; System call to BA6
$82A    $8DCF   UNKNOWN  8DCF            ; Unknown 8xxx instruction
$82C    $F2B0   UNKNOWN  F2B0            ; Unknown Fxxx instruction
$82E    $111A   JP       $11A            ; Jump to 11A
$830    $84CB   UNKNOWN  84CB            ; Unknown 8xxx instruction
$832    $3479   SE       V4, #79         ; Skip if V4 == 121
$834    $DCF2   DRW      VC, VF, #2      ; Draw 2-byte sprite at VC, VF
$836    $A74D   LD       I, $74D         ; Load 74D into I
$838    $B234   JP       V0, $234        ; Jump to V0 + 234
$83A    $CFBC   RND      VF, #BC         ; VF = random & BC
$83C    $F8CA   UNKNOWN  F8CA            ; Unknown Fxxx instruction
$83E    $C081   RND      V0, #81         ; V0 = random & 81
$840    $F327   UNKNOWN  F327            ; Unknown Fxxx instruction
$842    $863B   UNKNOWN  863B            ; Unknown 8xxx instruction
$844    $033B   SYS      $33B            ; System call to 33B
$846    $9024   UNKNOWN  $9024           ; Unknown 9xxx instruction
$848    $2932   CALL     $932            ; Call subroutine at 932
$84A    $990D   UNKNOWN  $990D           ; Unknown 9xxx instruction
$84C    $A428   LD       I, $428         ; Load 428 into I
$84E    $BB93   JP       V0, $B93        ; Jump to V0 + B93
$850    $6243   LD       V2, #43         ; Load 67 into V2
$852    $3D23   SE       VD, #23         ; Skip if VD == 35
$854    $6C36   LD       VC, #36         ; Load 54 into VC
$856    $BFAD   JP       V0, $FAD        ; Jump to V0 + FAD
$858    $A7C4   LD       I, $7C4         ; Load 7C4 into I
$85A    $86A8   UNKNOWN  86A8            ; Unknown 8xxx instruction
$85C    $70C0   ADD      V0, #C0         ; Add 192 to V0
$85E    $C879   RND      V8, #79         ; V8 = random & 79
$860    $11F9   JP       $1F9            ; Jump to 1F9
$862    $F01E   ADD      I, V0           ; I += V0
$864    $BDDA   JP       V0, $DDA        ; Jump to V0 + DDA
$866    $62A5   LD       V2, #A5         ; Load 165 into V2
$868    $065A   SYS      $65A            ; System call to 65A
$86A    $4799   SNE      V7, #99         ; Skip if V7 != 153
$86C    $552D   UNKNOWN  $552D           ; Unknown 5xxx instruction
$86E    $C89C   RND      V8, #9C         ; V8 = random & 9C
$870    $EBC2   UNKNOWN  $EBC2           ; Unknown Exxx instruction
$872    $FF77   UNKNOWN  FF77            ; Unknown Fxxx instruction
$874    $F89B   UNKNOWN  F89B            ; Unknown Fxxx instruction
$876    $4A59   SNE      VA, #59         ; Skip if VA != 89
$878    $ECB5   UNKNOWN  $ECB5           ; Unknown Exxx instruction
$87A    $58B2   UNKNOWN  $58B2           ; Unknown 5xxx instruction
$87C    $6522   LD       V5, #22         ; Load 34 into V5
$87E    $DEF4   DRW      VE, VF, #4      ; Draw 4-byte sprite at VE, VF
$880    $2E48   CALL     $E48            ; Call subroutine at E48
$882    $297F   CALL     $97F            ; Call subroutine at 97F
$884    $83D9   UNKNOWN  83D9            ; Unknown 8xxx instruction
$886    $7D19   ADD      VD, #19         ; Add 25 to VD
$888    $0C31   SYS      $C31            ; System call to C31
$88A    $DFEF   DRW      VF, VE, #F      ; Draw 15-byte sprite at VF, VE
$88C    $5A18   UNKNOWN  $5A18           ; Unknown 5xxx instruction
$88E    $4F9D   SNE      VF, #9D         ; Skip if VF != 157
$890    $C9C3   RND      V9, #C3         ; V9 = random & C3
$892    $4A49   SNE      VA, #49         ; Skip if VA != 73
$894    $E08E   UNKNOWN  $E08E           ; Unknown Exxx instruction
$896    $D411   DRW      V4, V1, #1      ; Draw 1-byte sprite at V4, V1
$898    $4623   SNE      V6, #23         ; Skip if V6 != 35
$89A    $33A0   SE       V3, #A0         ; Skip if V3 == 160
$89C    $8805   SUB      V8, V0          ; V8 -= V0, VF = !borrow
$89E    $BD6D   JP       V0, $D6D        ; Jump to V0 + D6D
$8A0    $A513   LD       I, $513         ; Load 513 into I
$8A2    $7DEE   ADD      VD, #EE         ; Add 238 to VD
$8A4    $81CB   UNKNOWN  81CB            ; Unknown 8xxx instruction
$8A6    $406A   SNE      V0, #6A         ; Skip if V0 != 106
$8A8    $4046   SNE      V0, #46         ; Skip if V0 != 70
$8AA    $5C6C   UNKNOWN  $5C6C           ; Unknown 5xxx instruction
$8AC    $FB0C   UNKNOWN  FB0C            ; Unknown Fxxx instruction
$8AE    $BB65   JP       V0, $B65        ; Jump to V0 + B65
$8B0    $2504   CALL     $504            ; Call subroutine at 504
$8B2    $602D   LD       V0, #2D         ; Load 45 into V0
$8B4    $84ED   UNKNOWN  84ED            ; Unknown 8xxx instruction
$8B6    $2F6C   CALL     $F6C            ; Call subroutine at F6C
$8B8    $4A85   SNE      VA, #85         ; Skip if VA != 133
$8BA    $5D6C   UNKNOWN  $5D6C           ; Unknown 5xxx instruction
$8BC    $5006   UNKNOWN  $5006           ; Unknown 5xxx instruction
$8BE    $33D4   SE       V3, #D4         ; Skip if V3 == 212
$8C0    $AFF7   LD       I, $FF7         ; Load FF7 into I
$8C2    $9145   UNKNOWN  $9145           ; Unknown 9xxx instruction
$8C4    $F97E   UNKNOWN  F97E            ; Unknown Fxxx instruction
$8C6    $5E58   UNKNOWN  $5E58           ; Unknown 5xxx instruction
$8C8    $5A81   UNKNOWN  $5A81           ; Unknown 5xxx instruction
$8CA    $CA85   RND      VA, #85         ; VA = random & 85
$8CC    $AB69   LD       I, $B69         ; Load B69 into I
$8CE    $F486   UNKNOWN  F486            ; Unknown Fxxx instruction
$8D0    $B490   JP       V0, $490        ; Jump to V0 + 490
$8D2    $5437   UNKNOWN  $5437           ; Unknown 5xxx instruction
$8D4    $FEC5   UNKNOWN  FEC5            ; Unknown Fxxx instruction
$8D6    $DD1B   DRW      VD, V1, #B      ; Draw 11-byte sprite at VD, V1
$8D8    $C0DC   RND      V0, #DC         ; V0 = random & DC
$8DA    $17C2   JP       $7C2            ; Jump to 7C2
$8DC    $2DA0   CALL     $DA0            ; Call subroutine at DA0
$8DE    $45ED   SNE      V5, #ED         ; Skip if V5 != 237
$8E0    $22C1   CALL     $2C1            ; Call subroutine at 2C1
$8E2    $D440   DRW      V4, V4, #0      ; Draw 0-byte sprite at V4, V4
$8E4    $816F   UNKNOWN  816F            ; Unknown 8xxx instruction
$8E6    $979B   UNKNOWN  $979B           ; Unknown 9xxx instruction
$8E8    $A7E5   LD       I, $7E5         ; Load 7E5 into I
$8EA    $22D7   CALL     $2D7            ; Call subroutine at 2D7
$8EC    $6EF5   LD       VE, #F5         ; Load 245 into VE
$8EE    $81DD   UNKNOWN  81DD            ; Unknown 8xxx instruction
$8F0    $FF4A   UNKNOWN  FF4A            ; Unknown Fxxx instruction
$8F2    $59CA   UNKNOWN  $59CA           ; Unknown 5xxx instruction
$8F4    $2019   CALL     $019            ; Call subroutine at 019
$8F6    $E3B2   UNKNOWN  $E3B2           ; Unknown Exxx instruction
$8F8    $C013   RND      V0, #13         ; V0 = random & 13
$8FA    $3194   SE       V1, #94         ; Skip if V1 == 148
$8FC    $E923   UNKNOWN  $E923           ; Unknown Exxx instruction
$8FE    $CFC7   RND      VF, #C7         ; VF = random & C7
$900    $D861   DRW      V8, V6, #1      ; Draw 1-byte sprite at V8, V6
$902    $326A   SE       V2, #6A         ; Skip if V2 == 106
$904    $8CA4   ADD      VC, VA          ; VC += VA, VF = carry
$906    $BC2E   JP       V0, $C2E        ; Jump to V0 + C2E
$908    $734A   ADD      V3, #4A         ; Add 74 to V3
$90A    $ECA2   UNKNOWN  $ECA2           ; Unknown Exxx instruction
$90C    $3A3C   SE       VA, #3C         ; Skip if VA == 60
$90E    $B2B8   JP       V0, $2B8        ; Jump to V0 + 2B8
$910    $D818   DRW      V8, V1, #8      ; Draw 8-byte sprite at V8, V1
$912    $C5C0   RND      V5, #C0         ; V5 = random & C0
$914    $F8D3   UNKNOWN  F8D3            ; Unknown Fxxx instruction
$916    $CF37   RND      VF, #37         ; VF = random & 37
$918    $9FA6   UNKNOWN  $9FA6           ; Unknown 9xxx instruction
$91A    $2AB9   CALL     $AB9            ; Call subroutine at AB9
$91C    $DFA5   DRW      VF, VA, #5      ; Draw 5-byte sprite at VF, VA
$91E    $FE4B   UNKNOWN  FE4B            ; Unknown Fxxx instruction
$920    $73FD   ADD      V3, #FD         ; Add 253 to V3
$922    $DBD6   DRW      VB, VD, #6      ; Draw 6-byte sprite at VB, VD
$924    $D3B8   DRW      V3, VB, #8      ; Draw 8-byte sprite at V3, VB
$926    $9B62   UNKNOWN  $9B62           ; Unknown 9xxx instruction
$928    $9CAD   UNKNOWN  $9CAD           ; Unknown 9xxx instruction
$92A    $144F   JP       $44F            ; Jump to 44F
$92C    $3C6A   SE       VC, #6A         ; Skip if VC == 106
$92E    $1879   JP       $879            ; Jump to 879
$930    $82DC   UNKNOWN  82DC            ; Unknown 8xxx instruction
$932    $E9F8   UNKNOWN  $E9F8           ; Unknown Exxx instruction
$934    $20EA   CALL     $0EA            ; Call subroutine at 0EA
$936    $8A2E   SHL      VA              ; VA <<= 1, VF = MSB
$938    $AD7B   LD       I, $D7B         ; Load D7B into I
$93A    $B445   JP       V0, $445        ; Jump to V0 + 445
$93C    $1A12   JP       $A12            ; Jump to A12
$93E    $04FC   SYS      $4FC            ; System call to 4FC
$940    $5960   SE       V9, V6          ; Skip if V9 == V6
$942    $18A7   JP       $8A7            ; Jump to 8A7
$944    $6A2B   LD       VA, #2B         ; Load 43 into VA
$946    $36F0   SE       V6, #F0         ; Skip if V6 == 240
$948    $CE58   RND      VE, #58         ; VE = random & 58
$94A    $36AA   SE       V6, #AA         ; Skip if V6 == 170
$94C    $4B17   SNE      VB, #17         ; Skip if VB != 23
$94E    $75F0   ADD      V5, #F0         ; Add 240 to V5
$950    $6EE2   LD       VE, #E2         ; Load 226 into VE
$952    $8823   XOR      V8, V2          ; V8 ^= V2
$954    $EE93   UNKNOWN  $EE93           ; Unknown Exxx instruction
$956    $6131   LD       V1, #31         ; Load 49 into V1
$958    $C066   RND      V0, #66         ; V0 = random & 66
$95A    $7A2B   ADD      VA, #2B         ; Add 43 to VA
$95C    $637A   LD       V3, #7A         ; Load 122 into V3
$95E    $9B31   UNKNOWN  $9B31           ; Unknown 9xxx instruction
$960    $E9E1   UNKNOWN  $E9E1           ; Unknown Exxx instruction
$962    $B183   JP       V0, $183        ; Jump to V0 + 183
$964    $04DB   SYS      $4DB            ; System call to 4DB
$966    $4B42   SNE      VB, #42         ; Skip if VB != 66
$968    $674A   LD       V7, #4A         ; Load 74 into V7
$96A    $39EE   SE       V9, #EE         ; Skip if V9 == 238
$96C    $2676   CALL     $676            ; Call subroutine at 676
$96E    $7DE6   ADD      VD, #E6         ; Add 230 to VD
$970    $173A   JP       $73A            ; Jump to 73A
$972    $04CD   SYS      $4CD            ; System call to 4CD
$974    $40B4   SNE      V0, #B4         ; Skip if V0 != 180
$976    $392C   SE       V9, #2C         ; Skip if V9 == 44
$978    $A620   LD       I, $620         ; Load 620 into I
$97A    $A5EC   LD       I, $5EC         ; Load 5EC into I
$97C    $5658   UNKNOWN  $5658           ; Unknown 5xxx instruction
$97E    $D3C6   DRW      V3, VC, #6      ; Draw 6-byte sprite at V3, VC
$980    $79DE   ADD      V9, #DE         ; Add 222 to V9
$982    $9FA4   UNKNOWN  $9FA4           ; Unknown 9xxx instruction
$984    $8CD8   UNKNOWN  8CD8            ; Unknown 8xxx instruction
$986    $456C   SNE      V5, #6C         ; Skip if V5 != 108
$988    $8EAD   UNKNOWN  8EAD            ; Unknown 8xxx instruction
$98A    $AA70   LD       I, $A70         ; Load A70 into I
$98C    $1F77   JP       $F77            ; Jump to F77
$98E    $9475   UNKNOWN  $9475           ; Unknown 9xxx instruction
$990    $E228   UNKNOWN  $E228           ; Unknown Exxx instruction
$992    $4A1F   SNE      VA, #1F         ; Skip if VA != 31
$994    $FB14   UNKNOWN  FB14            ; Unknown Fxxx instruction
$996    $5267   UNKNOWN  $5267           ; Unknown 5xxx instruction
$998    $49E8   SNE      V9, #E8         ; Skip if V9 != 232
$99A    $9D9E   UNKNOWN  $9D9E           ; Unknown 9xxx instruction
$99C    $DA76   DRW      VA, V7, #6      ; Draw 6-byte sprite at VA, V7
$99E    $9913   UNKNOWN  $9913           ; Unknown 9xxx instruction
$9A0    $5C92   UNKNOWN  $5C92           ; Unknown 5xxx instruction
$9A2    $4D6A   SNE      VD, #6A         ; Skip if VD != 106
$9A4    $282A   CALL     $82A            ; Call subroutine at 82A
$9A6    $B605   JP       V0, $605        ; Jump to V0 + 605
$9A8    $CD74   RND      VD, #74         ; VD = random & 74
$9AA    $5544   UNKNOWN  $5544           ; Unknown 5xxx instruction
$9AC    $DDAA   DRW      VD, VA, #A      ; Draw 10-byte sprite at VD, VA
$9AE    $311A   SE       V1, #1A         ; Skip if V1 == 26
$9B0    $2239   CALL     $239            ; Call subroutine at 239
$9B2    $7475   ADD      V4, #75         ; Add 117 to V4
$9B4    $2D1A   CALL     $D1A            ; Call subroutine at D1A
$9B6    $7DE5   ADD      VD, #E5         ; Add 229 to VD
$9B8    $7510   ADD      V5, #10         ; Add 16 to V5
$9BA    $DDAC   DRW      VD, VA, #C      ; Draw 12-byte sprite at VD, VA
$9BC    $089F   SYS      $89F            ; System call to 89F
$9BE    $9029   UNKNOWN  $9029           ; Unknown 9xxx instruction
$9C0    $FB52   UNKNOWN  FB52            ; Unknown Fxxx instruction
$9C2    $EB7B   UNKNOWN  $EB7B           ; Unknown Exxx instruction
$9C4    $C12C   RND      V1, #2C         ; V1 = random & 2C
$9C6    $5DAF   UNKNOWN  $5DAF           ; Unknown 5xxx instruction
$9C8    $4AAB   SNE      VA, #AB         ; Skip if VA != 171
$9CA    $DDDF   DRW      VD, VD, #F      ; Draw 15-byte sprite at VD, VD
$9CC    $979E   UNKNOWN  $979E           ; Unknown 9xxx instruction
$9CE    $5B63   UNKNOWN  $5B63           ; Unknown 5xxx instruction
$9D0    $2703   CALL     $703            ; Call subroutine at 703
$9D2    $632A   LD       V3, #2A         ; Load 42 into V3
$9D4    $80C9   UNKNOWN  80C9            ; Unknown 8xxx instruction
$9D6    $F55D   UNKNOWN  F55D            ; Unknown Fxxx instruction
$9D8    $8A6C   UNKNOWN  8A6C            ; Unknown 8xxx instruction
$9DA    $70EA   ADD      V0, #EA         ; Add 234 to V0
$9DC    $DC05   DRW      VC, V0, #5      ; Draw 5-byte sprite at VC, V0
$9DE    $066C   SYS      $66C            ; System call to 66C
$9E0    $CDCD   RND      VD, #CD         ; VD = random & CD
$9E2    $A58C   LD       I, $58C         ; Load 58C into I
$9E4    $54AC   UNKNOWN  $54AC           ; Unknown 5xxx instruction
$9E6    $641C   LD       V4, #1C         ; Load 28 into V4
$9E8    $F092   UNKNOWN  F092            ; Unknown Fxxx instruction
$9EA    $B239   JP       V0, $239        ; Jump to V0 + 239
$9EC    $094F   SYS      $94F            ; System call to 94F
$9EE    $6E42   LD       VE, #42         ; Load 66 into VE
$9F0    $98A1   UNKNOWN  $98A1           ; Unknown 9xxx instruction
$9F2    $0589   SYS      $589            ; System call to 589
$9F4    $4D0F   SNE      VD, #0F         ; Skip if VD != 15
$9F6    $5E22   UNKNOWN  $5E22           ; Unknown 5xxx instruction
$9F8    $A84A   LD       I, $84A         ; Load 84A into I
$9FA    $E30E   UNKNOWN  $E30E           ; Unknown Exxx instruction
$9FC    $F81A   UNKNOWN  F81A            ; Unknown Fxxx instruction
$9FE    $37F7   SE       V7, #F7         ; Skip if V7 == 247
$A00    $7C1A   ADD      VC, #1A         ; Add 26 to VC
$A02    $E238   UNKNOWN  $E238           ; Unknown Exxx instruction
$A04    $B33D   JP       V0, $33D        ; Jump to V0 + 33D
$A06    $2873   CALL     $873            ; Call subroutine at 873
$A08    $5D69   UNKNOWN  $5D69           ; Unknown 5xxx instruction
$A0A    $B00F   JP       V0, $00F        ; Jump to V0 + 00F
$A0C    $0BCB   SYS      $BCB            ; System call to BCB
$A0E    $E9BE   UNKNOWN  $E9BE           ; Unknown Exxx instruction
$A10    $D009   DRW      V0, V0, #9      ; Draw 9-byte sprite at V0, V0
$A12    $3AD4   SE       VA, #D4         ; Skip if VA == 212
$A14    $A214   LD       I, $214         ; Load 214 into I
$A16    $935B   UNKNOWN  $935B           ; Unknown 9xxx instruction
$A18    $E039   UNKNOWN  $E039           ; Unknown Exxx instruction
$A1A    $F88C   UNKNOWN  F88C            ; Unknown Fxxx instruction
$A1C    $6CC3   LD       VC, #C3         ; Load 195 into VC
$A1E    $6D72   LD       VD, #72         ; Load 114 into VD
$A20    $780A   ADD      V8, #0A         ; Add 10 to V8
$A22    $93C6   UNKNOWN  $93C6           ; Unknown 9xxx instruction
$A24    $8E56   SHR      VE              ; VE >>= 1, VF = LSB
$A26    $4B2E   SNE      VB, #2E         ; Skip if VB != 46
$A28    $8C77   SUBN     VC, V7          ; VC = V7 - VC, VF = !borrow
$A2A    $C788   RND      V7, #88         ; V7 = random & 88
$A2C    $D854   DRW      V8, V5, #4      ; Draw 4-byte sprite at V8, V5
$A2E    $1E87   JP       $E87            ; Jump to E87
$A30    $55C8   UNKNOWN  $55C8           ; Unknown 5xxx instruction
$A32    $38A4   SE       V8, #A4         ; Skip if V8 == 164
$A34    $8764   ADD      V7, V6          ; V7 += V6, VF = carry
$A36    $340D   SE       V4, #0D         ; Skip if V4 == 13
$A38    $F2EF   UNKNOWN  F2EF            ; Unknown Fxxx instruction
$A3A    $2B7C   CALL     $B7C            ; Call subroutine at B7C
$A3C    $FDCE   UNKNOWN  FDCE            ; Unknown Fxxx instruction
$A3E    $B96F   JP       V0, $96F        ; Jump to V0 + 96F
$A40    $C0FD   RND      V0, #FD         ; V0 = random & FD
$A42    $5080   SE       V0, V8          ; Skip if V0 == V8
$A44    $8093   XOR      V0, V9          ; V0 ^= V9
$A46    $90B6   UNKNOWN  $90B6           ; Unknown 9xxx instruction
$A48    $9C82   UNKNOWN  $9C82           ; Unknown 9xxx instruction
$A4A    $5640   SE       V6, V4          ; Skip if V6 == V4
$A4C    $492D   SNE      V9, #2D         ; Skip if V9 != 45
$A4E    $F701   UNKNOWN  F701            ; Unknown Fxxx instruction
$A50    $45A1   SNE      V5, #A1         ; Skip if V5 != 161
$A52    $A8A4   LD       I, $8A4         ; Load 8A4 into I
$A54    $F21E   ADD      I, V2           ; I += V2
$A56    $73BE   ADD      V3, #BE         ; Add 190 to V3
$A58    $49B6   SNE      V9, #B6         ; Skip if V9 != 182
$A5A    $895B   UNKNOWN  895B            ; Unknown 8xxx instruction
$A5C    $5D09   UNKNOWN  $5D09           ; Unknown 5xxx instruction
$A5E    $D985   DRW      V9, V8, #5      ; Draw 5-byte sprite at V9, V8
$A60    $16C5   JP       $6C5            ; Jump to 6C5
$A62    $13B8   JP       $3B8            ; Jump to 3B8
$A64    $EE1C   UNKNOWN  $EE1C           ; Unknown Exxx instruction
$A66    $3018   SE       V0, #18         ; Skip if V0 == 24
$A68    $813C   UNKNOWN  813C            ; Unknown 8xxx instruction
$A6A    $E40C   UNKNOWN  $E40C           ; Unknown Exxx instruction
$A6C    $6B73   LD       VB, #73         ; Load 115 into VB
$A6E    $3765   SE       V7, #65         ; Skip if V7 == 101
$A70    $F906   UNKNOWN  F906            ; Unknown Fxxx instruction
$A72    $91A0   SNE      V1, VA          ; Skip if V1 != VA
$A74    $5874   UNKNOWN  $5874           ; Unknown 5xxx instruction
$A76    $8FB5   SUB      VF, VB          ; VF -= VB, VF = !borrow
$A78    $93FE   UNKNOWN  $93FE           ; Unknown 9xxx instruction
$A7A    $008A   SYS      $08A            ; System call to 08A
$A7C    $E135   UNKNOWN  $E135           ; Unknown Exxx instruction
$A7E    $4358   SNE      V3, #58         ; Skip if V3 != 88
$A80    $2246   CALL     $246            ; Call subroutine at 246
$A82    $F055   LD       [I], V0         ; Store V0-V0 at I
$A84    $CA3B   RND      VA, #3B         ; VA = random & 3B
$A86    $0F7C   SYS      $F7C            ; System call to F7C
$A88    $033C   SYS      $33C            ; System call to 33C
$A8A    $2F29   CALL     $F29            ; Call subroutine at F29
$A8C    $F805   UNKNOWN  F805            ; Unknown Fxxx instruction
$A8E    $9316   UNKNOWN  $9316           ; Unknown 9xxx instruction
$A90    $F7B5   UNKNOWN  F7B5            ; Unknown Fxxx instruction
$A92    $1046   JP       $046            ; Jump to 046
$A94    $2268   CALL     $268            ; Call subroutine at 268
$A96    $AE83   LD       I, $E83         ; Load E83 into I
$A98    $4965   SNE      V9, #65         ; Skip if V9 != 101
$A9A    $DADA   DRW      VA, VD, #A      ; Draw 10-byte sprite at VA, VD
$A9C    $88C4   ADD      V8, VC          ; V8 += VC, VF = carry
$A9E    $27DD   CALL     $7DD            ; Call subroutine at 7DD
$AA0    $932A   UNKNOWN  $932A           ; Unknown 9xxx instruction
$AA2    $C800   RND      V8, #00         ; V8 = random & 00
$AA4    $AED9   LD       I, $ED9         ; Load ED9 into I
$AA6    $F494   UNKNOWN  F494            ; Unknown Fxxx instruction
$AA8    $6DF9   LD       VD, #F9         ; Load 249 into VD
$AAA    $12E6   JP       $2E6            ; Jump to 2E6
$AAC    $6E01   LD       VE, #01         ; Load 1 into VE
$AAE    $4A5A   SNE      VA, #5A         ; Skip if VA != 90
$AB0    $EB78   UNKNOWN  $EB78           ; Unknown Exxx instruction
$AB2    $E74A   UNKNOWN  $E74A           ; Unknown Exxx instruction
$AB4    $FB4C   UNKNOWN  FB4C            ; Unknown Fxxx instruction
$AB6    $7363   ADD      V3, #63         ; Add 99 to V3
$AB8    $EAAC   UNKNOWN  $EAAC           ; Unknown Exxx instruction
$ABA    $587D   UNKNOWN  $587D           ; Unknown 5xxx instruction
$ABC    $3978   SE       V9, #78         ; Skip if V9 == 120
$ABE    $69C3   LD       V9, #C3         ; Load 195 into V9
$AC0    $FFA7   UNKNOWN  FFA7            ; Unknown Fxxx instruction
$AC2    $11E4   JP       $1E4            ; Jump to 1E4
$AC4    $AE5B   LD       I, $E5B         ; Load E5B into I
$AC6    $4C85   SNE      VC, #85         ; Skip if VC != 133
$AC8    $3A51   SE       VA, #51         ; Skip if VA == 81
$ACA    $A5B0   LD       I, $5B0         ; Load 5B0 into I
$ACC    $4BA3   SNE      VB, #A3         ; Skip if VB != 163
$ACE    $8787   SUBN     V7, V8          ; V7 = V8 - V7, VF = !borrow
$AD0    $66B0   LD       V6, #B0         ; Load 176 into V6
$AD2    $F0D3   UNKNOWN  F0D3            ; Unknown Fxxx instruction
$AD4    $FCC4   UNKNOWN  FCC4            ; Unknown Fxxx instruction
$AD6    $5779   UNKNOWN  $5779           ; Unknown 5xxx instruction
$AD8    $38A9   SE       V8, #A9         ; Skip if V8 == 169
$ADA    $7FC8   ADD      VF, #C8         ; Add 200 to VF
$ADC    $CFB4   RND      VF, #B4         ; VF = random & B4
$ADE    $BAAD   JP       V0, $AAD        ; Jump to V0 + AAD
$AE0    $65DC   LD       V5, #DC         ; Load 220 into V5
$AE2    $B555   JP       V0, $555        ; Jump to V0 + 555
$AE4    $3337   SE       V3, #37         ; Skip if V3 == 55
$AE6    $3D6E   SE       VD, #6E         ; Skip if VD == 110
$AE8    $38BA   SE       V8, #BA         ; Skip if V8 == 186
$AEA    $F69C   UNKNOWN  F69C            ; Unknown Fxxx instruction
$AEC    $1117   JP       $117            ; Jump to 117
$AEE    $7E6A   ADD      VE, #6A         ; Add 106 to VE
$AF0    $F1ED   UNKNOWN  F1ED            ; Unknown Fxxx instruction
$AF2    $97D7   UNKNOWN  $97D7           ; Unknown 9xxx instruction
$AF4    $43D8   SNE      V3, #D8         ; Skip if V3 != 216
$AF6    $9212   UNKNOWN  $9212           ; Unknown 9xxx instruction
$AF8    $F725   UNKNOWN  F725            ; Unknown Fxxx instruction
$AFA    $1AC3   JP       $AC3            ; Jump to AC3
$AFC    $4891   SNE      V8, #91         ; Skip if V8 != 145
$AFE    $1FDC   JP       $FDC            ; Jump to FDC
$B00    $21E6   CALL     $1E6            ; Call subroutine at 1E6
$B02    $FF6E   UNKNOWN  FF6E            ; Unknown Fxxx instruction
$B04    $5DFC   UNKNOWN  $5DFC           ; Unknown 5xxx instruction
$B06    $3709   SE       V7, #09         ; Skip if V7 == 9
$B08    $18D7   JP       $8D7            ; Jump to 8D7
$B0A    $8145   SUB      V1, V4          ; V1 -= V4, VF = !borrow
$B0C    $7F2E   ADD      VF, #2E         ; Add 46 to VF
$B0E    $AED3   LD       I, $ED3         ; Load ED3 into I
$B10    $337D   SE       V3, #7D         ; Skip if V3 == 125
$B12    $EED1   UNKNOWN  $EED1           ; Unknown Exxx instruction
$B14    $57A4   UNKNOWN  $57A4           ; Unknown 5xxx instruction
$B16    $5122   UNKNOWN  $5122           ; Unknown 5xxx instruction
$B18    $A995   LD       I, $995         ; Load 995 into I
$B1A    $75C8   ADD      V5, #C8         ; Add 200 to V5
$B1C    $EEE8   UNKNOWN  $EEE8           ; Unknown Exxx instruction
$B1E    $7725   ADD      V7, #25         ; Add 37 to V7
$B20    $A5D2   LD       I, $5D2         ; Load 5D2 into I
$B22    $9E00   SNE      VE, V0          ; Skip if VE != V0
$B24    $986F   UNKNOWN  $986F           ; Unknown 9xxx instruction
$B26    $2C1A   CALL     $C1A            ; Call subroutine at C1A
$B28    $346E   SE       V4, #6E         ; Skip if V4 == 110
$B2A    $8695   SUB      V6, V9          ; V6 -= V9, VF = !borrow
$B2C    $E858   UNKNOWN  $E858           ; Unknown Exxx instruction
$B2E    $5EA1   UNKNOWN  $5EA1           ; Unknown 5xxx instruction
$B30    $C9B4   RND      V9, #B4         ; V9 = random & B4
$B32    $C886   RND      V8, #86         ; V8 = random & 86
$B34    $E45F   UNKNOWN  $E45F           ; Unknown Exxx instruction
$B36    $0D3F   SYS      $D3F            ; System call to D3F
$B38    $B864   JP       V0, $864        ; Jump to V0 + 864
$B3A    $3771   SE       V7, #71         ; Skip if V7 == 113
$B3C    $2740   CALL     $740            ; Call subroutine at 740
$B3E    $7D8C   ADD      VD, #8C         ; Add 140 to VD
$B40    $E950   UNKNOWN  $E950           ; Unknown Exxx instruction
$B42    $209A   CALL     $09A            ; Call subroutine at 09A
$B44    $8340   LD       V3, V4          ; V3 = V4
$B46    $F145   UNKNOWN  F145            ; Unknown Fxxx instruction
$B48    $6694   LD       V6, #94         ; Load 148 into V6
$B4A    $B31E   JP       V0, $31E        ; Jump to V0 + 31E
$B4C    $5547   UNKNOWN  $5547           ; Unknown 5xxx instruction
$B4E    $AA04   LD       I, $A04         ; Load A04 into I
$B50    $3775   SE       V7, #75         ; Skip if V7 == 117
$B52    $2E1C   CALL     $E1C            ; Call subroutine at E1C
$B54    $1464   JP       $464            ; Jump to 464
$B56    $4B47   SNE      VB, #47         ; Skip if VB != 71
$B58    $2C0B   CALL     $C0B            ; Call subroutine at C0B
$B5A    $5A27   UNKNOWN  $5A27           ; Unknown 5xxx instruction
$B5C    $B70C   JP       V0, $70C        ; Jump to V0 + 70C
$B5E    $A7C0   LD       I, $7C0         ; Load 7C0 into I
$B60    $6400   LD       V4, #00         ; Load 0 into V4
$B62    $3B1D   SE       VB, #1D         ; Skip if VB == 29
$B64    $51D7   UNKNOWN  $51D7           ; Unknown 5xxx instruction
$B66    $6D1A   LD       VD, #1A         ; Load 26 into VD
$B68    $E83D   UNKNOWN  $E83D           ; Unknown Exxx instruction
$B6A    $78DC   ADD      V8, #DC         ; Add 220 to V8
$B6C    $327B   SE       V2, #7B         ; Skip if V2 == 123
$B6E    $A664   LD       I, $664         ; Load 664 into I
$B70    $89DF   UNKNOWN  89DF            ; Unknown 8xxx instruction
$B72    $DB30   DRW      VB, V3, #0      ; Draw 0-byte sprite at VB, V3
$B74    $2B65   CALL     $B65            ; Call subroutine at B65
$B76    $DEEB   DRW      VE, VE, #B      ; Draw 11-byte sprite at VE, VE
$B78    $F93A   UNKNOWN  F93A            ; Unknown Fxxx instruction
$B7A    $1726   JP       $726            ; Jump to 726
$B7C    $0BFB   SYS      $BFB            ; System call to BFB
$B7E    $75A8   ADD      V5, #A8         ; Add 168 to V5
$B80    $7AF3   ADD      VA, #F3         ; Add 243 to VA
$B82    $D129   DRW      V1, V2, #9      ; Draw 9-byte sprite at V1, V2
$B84    $19CF   JP       $9CF            ; Jump to 9CF
$B86    $0A3E   SYS      $A3E            ; System call to A3E
$B88    $D754   DRW      V7, V5, #4      ; Draw 4-byte sprite at V7, V5
$B8A    $9D1A   UNKNOWN  $9D1A           ; Unknown 9xxx instruction
$B8C    $14C0   JP       $4C0            ; Jump to 4C0
$B8E    $921D   UNKNOWN  $921D           ; Unknown 9xxx instruction
$B90    $A181   LD       I, $181         ; Load 181 into I
$B92    $0EA6   SYS      $EA6            ; System call to EA6
$B94    $024B   SYS      $24B            ; System call to 24B
$B96    $852B   UNKNOWN  852B            ; Unknown 8xxx instruction
$B98    $FB74   UNKNOWN  FB74            ; Unknown Fxxx instruction
$B9A    $B7EF   JP       V0, $7EF        ; Jump to V0 + 7EF
$B9C    $C7D6   RND      V7, #D6         ; V7 = random & D6
$B9E    $33A3   SE       V3, #A3         ; Skip if V3 == 163
$BA0    $742A   ADD      V4, #2A         ; Add 42 to V4
$BA2    $CC9E   RND      VC, #9E         ; VC = random & 9E
$BA4    $5E02   UNKNOWN  $5E02           ; Unknown 5xxx instruction
$BA6    $F226   UNKNOWN  F226            ; Unknown Fxxx instruction
$BA8    $5BD7   UNKNOWN  $5BD7           ; Unknown 5xxx instruction
$BAA    $4D7E   SNE      VD, #7E         ; Skip if VD != 126
$BAC    $7E82   ADD      VE, #82         ; Add 130 to VE
$BAE    $F970   UNKNOWN  F970            ; Unknown Fxxx instruction
$BB0    $630A   LD       V3, #0A         ; Load 10 into V3
$BB2    $C8A5   RND      V8, #A5         ; V8 = random & A5
$BB4    $2D0A   CALL     $D0A            ; Call subroutine at D0A
$BB6    $6C73   LD       VC, #73         ; Load 115 into VC
$BB8    $6F3D   LD       VF, #3D         ; Load 61 into VF
$BBA    $22FD   CALL     $2FD            ; Call subroutine at 2FD
$BBC    $629C   LD       V2, #9C         ; Load 156 into V2
$BBE    $50B3   UNKNOWN  $50B3           ; Unknown 5xxx instruction
$BC0    $9807   UNKNOWN  $9807           ; Unknown 9xxx instruction
$BC2    $09F2   SYS      $9F2            ; System call to 9F2
$BC4    $99B2   UNKNOWN  $99B2           ; Unknown 9xxx instruction
$BC6    $F4BD   UNKNOWN  F4BD            ; Unknown Fxxx instruction
$BC8    $1FCE   JP       $FCE            ; Jump to FCE
$BCA    $0E09   SYS      $E09            ; System call to E09
$BCC    $D5CC   DRW      V5, VC, #C      ; Draw 12-byte sprite at V5, VC
$BCE    $9152   UNKNOWN  $9152           ; Unknown 9xxx instruction
$BD0    $F380   UNKNOWN  F380            ; Unknown Fxxx instruction
$BD2    $FFC5   UNKNOWN  FFC5            ; Unknown Fxxx instruction
$BD4    $9276   UNKNOWN  $9276           ; Unknown 9xxx instruction
$BD6    $0F9B   SYS      $F9B            ; System call to F9B
$BD8    $367D   SE       V6, #7D         ; Skip if V6 == 125
$BDA    $B46B   JP       V0, $46B        ; Jump to V0 + 46B
$BDC    $1A91   JP       $A91            ; Jump to A91
$BDE    $0E99   SYS      $E99            ; System call to E99
$BE0    $9503   UNKNOWN  $9503           ; Unknown 9xxx instruction
$BE2    $6369   LD       V3, #69         ; Load 105 into V3
$BE4    $E9A0   UNKNOWN  $E9A0           ; Unknown Exxx instruction
$BE6    $003C   SYS      $03C            ; System call to 03C
$BE8    $E047   UNKNOWN  $E047           ; Unknown Exxx instruction
$BEA    $36F4   SE       V6, #F4         ; Skip if V6 == 244
$BEC    $433E   SNE      V3, #3E         ; Skip if V3 != 62
$BEE    $F545   UNKNOWN  F545            ; Unknown Fxxx instruction
$BF0    $8F23   XOR      VF, V2          ; VF ^= V2
$BF2    $4020   SNE      V0, #20         ; Skip if V0 != 32
$BF4    $8549   UNKNOWN  8549            ; Unknown 8xxx instruction
$BF6    $CDAB   RND      VD, #AB         ; VD = random & AB
$BF8    $4C59   SNE      VC, #59         ; Skip if VC != 89
$BFA    $3439   SE       V4, #39         ; Skip if V4 == 57
$BFC    $9FF3   UNKNOWN  $9FF3           ; Unknown 9xxx instruction
$BFE    $269F   CALL     $69F            ; Call subroutine at 69F
$C00    $1A58   JP       $A58            ; Jump to A58
$C02    $8093   XOR      V0, V9          ; V0 ^= V9
$C04    $9B9A   UNKNOWN  $9B9A           ; Unknown 9xxx instruction
$C06    $1810   JP       $810            ; Jump to 810
$C08    $667D   LD       V6, #7D         ; Load 125 into V6
$C0A    $4219   SNE      V2, #19         ; Skip if V2 != 25
$C0C    $91A7   UNKNOWN  $91A7           ; Unknown 9xxx instruction
$C0E    $FECB   UNKNOWN  FECB            ; Unknown Fxxx instruction
$C10    $406C   SNE      V0, #6C         ; Skip if V0 != 108
$C12    $1CBC   JP       $CBC            ; Jump to CBC
$C14    $259B   CALL     $59B            ; Call subroutine at 59B
$C16    $11DD   JP       $1DD            ; Jump to 1DD
$C18    $1B96   JP       $B96            ; Jump to B96
$C1A    $7A7C   ADD      VA, #7C         ; Add 124 to VA
$C1C    $518C   UNKNOWN  $518C           ; Unknown 5xxx instruction
$C1E    $70F4   ADD      V0, #F4         ; Add 244 to V0
$C20    $CA34   RND      VA, #34         ; VA = random & 34
$C22    $4175   SNE      V1, #75         ; Skip if V1 != 117
$C24    $111B   JP       $11B            ; Jump to 11B
$C26    $8747   SUBN     V7, V4          ; V7 = V4 - V7, VF = !borrow
$C28    $DAB6   DRW      VA, VB, #6      ; Draw 6-byte sprite at VA, VB
$C2A    $7478   ADD      V4, #78         ; Add 120 to V4
$C2C    $E1F1   UNKNOWN  $E1F1           ; Unknown Exxx instruction
$C2E    $3283   SE       V2, #83         ; Skip if V2 == 131
$C30    $8E8B   UNKNOWN  8E8B            ; Unknown 8xxx instruction
$C32    $F0B0   UNKNOWN  F0B0            ; Unknown Fxxx instruction
$C34    $17AE   JP       $7AE            ; Jump to 7AE
$C36    $EA38   UNKNOWN  $EA38           ; Unknown Exxx instruction
$C38    $F170   UNKNOWN  F170            ; Unknown Fxxx instruction
$C3A    $A5D1   LD       I, $5D1         ; Load 5D1 into I
$C3C    $C55C   RND      V5, #5C         ; V5 = random & 5C
$C3E    $8085   SUB      V0, V8          ; V0 -= V8, VF = !borrow
$C40    $7B9A   ADD      VB, #9A         ; Add 154 to VB
$C42    $23C5   CALL     $3C5            ; Call subroutine at 3C5
$C44    $6AC7   LD       VA, #C7         ; Load 199 into VA
$C46    $3091   SE       V0, #91         ; Skip if V0 == 145
$C48    $C5BA   RND      V5, #BA         ; V5 = random & BA
$C4A    $92B4   UNKNOWN  $92B4           ; Unknown 9xxx instruction
$C4C    $DFF2   DRW      VF, VF, #2      ; Draw 2-byte sprite at VF, VF
$C4E    $91C0   SNE      V1, VC          ; Skip if V1 != VC
$C50    $D6EC   DRW      V6, VE, #C      ; Draw 12-byte sprite at V6, VE
$C52    $8462   AND      V4, V6          ; V4 &= V6
$C54    $A19A   LD       I, $19A         ; Load 19A into I
$C56    $5248   UNKNOWN  $5248           ; Unknown 5xxx instruction
$C58    $40F5   SNE      V0, #F5         ; Skip if V0 != 245
$C5A    $82A2   AND      V2, VA          ; V2 &= VA
$C5C    $6A31   LD       VA, #31         ; Load 49 into VA
$C5E    $CEE3   RND      VE, #E3         ; VE = random & E3
$C60    $3435   SE       V4, #35         ; Skip if V4 == 53
$C62    $4A19   SNE      VA, #19         ; Skip if VA != 25
$C64    $DBFA   DRW      VB, VF, #A      ; Draw 10-byte sprite at VB, VF
$C66    $9DF4   UNKNOWN  $9DF4           ; Unknown 9xxx instruction
$C68    $DA4D   DRW      VA, V4, #D      ; Draw 13-byte sprite at VA, V4
$C6A    $AFB8   LD       I, $FB8         ; Load FB8 into I
$C6C    $3E3F   SE       VE, #3F         ; Skip if VE == 63
$C6E    $FE14   UNKNOWN  FE14            ; Unknown Fxxx instruction
$C70    $DCE5   DRW      VC, VE, #5      ; Draw 5-byte sprite at VC, VE
$C72    $FA75   UNKNOWN  FA75            ; Unknown Fxxx instruction
$C74    $FB0F   UNKNOWN  FB0F            ; Unknown Fxxx instruction
$C76    $1E0A   JP       $E0A            ; Jump to E0A
$C78    $D4E2   DRW      V4, VE, #2      ; Draw 2-byte sprite at V4, VE
$C7A    $A766   LD       I, $766         ; Load 766 into I
$C7C    $7161   ADD      V1, #61         ; Add 97 to V1
$C7E    $2602   CALL     $602            ; Call subroutine at 602
$C80    $96AA   UNKNOWN  $96AA           ; Unknown 9xxx instruction
$C82    $1BBD   JP       $BBD            ; Jump to BBD
$C84    $CFC0   RND      VF, #C0         ; VF = random & C0
$C86    $3B12   SE       VB, #12         ; Skip if VB == 18
$C88    $192B   JP       $92B            ; Jump to 92B
$C8A    $0A78   SYS      $A78            ; System call to A78
$C8C    $D825   DRW      V8, V2, #5      ; Draw 5-byte sprite at V8, V2
$C8E    $5643   UNKNOWN  $5643           ; Unknown 5xxx instruction
$C90    $E48C   UNKNOWN  $E48C           ; Unknown Exxx instruction
$C92    $52F7   UNKNOWN  $52F7           ; Unknown 5xxx instruction
$C94    $007F   SYS      $07F            ; System call to 07F
$C96    $3AD8   SE       VA, #D8         ; Skip if VA == 216
$C98    $3312   SE       V3, #12         ; Skip if V3 == 18
$C9A    $195D   JP       $95D            ; Jump to 95D
$C9C    $0E9A   SYS      $E9A            ; System call to E9A
$C9E    $3259   SE       V2, #59         ; Skip if V2 == 89
$CA0    $6A8C   LD       VA, #8C         ; Load 140 into VA
$CA2    $E20C   UNKNOWN  $E20C           ; Unknown Exxx instruction
$CA4    $5AA5   UNKNOWN  $5AA5           ; Unknown 5xxx instruction
$CA6    $2E68   CALL     $E68            ; Call subroutine at E68
$CA8    $C443   RND      V4, #43         ; V4 = random & 43
$CAA    $BC5F   JP       V0, $C5F        ; Jump to V0 + C5F
$CAC    $82CF   UNKNOWN  82CF            ; Unknown 8xxx instruction
$CAE    $94A3   UNKNOWN  $94A3           ; Unknown 9xxx instruction
$CB0    $9027   UNKNOWN  $9027           ; Unknown 9xxx instruction
$CB2    $C5ED   RND      V5, #ED         ; V5 = random & ED
$CB4    $9132   UNKNOWN  $9132           ; Unknown 9xxx instruction
$CB6    $7D9F   ADD      VD, #9F         ; Add 159 to VD
$CB8    $BBDA   JP       V0, $BDA        ; Jump to V0 + BDA
$CBA    $AC09   LD       I, $C09         ; Load C09 into I
$CBC    $562A   UNKNOWN  $562A           ; Unknown 5xxx instruction
$CBE    $11CD   JP       $1CD            ; Jump to 1CD
$CC0    $56EA   UNKNOWN  $56EA           ; Unknown 5xxx instruction
$CC2    $F9C7   UNKNOWN  F9C7            ; Unknown Fxxx instruction
$CC4    $4584   SNE      V5, #84         ; Skip if V5 != 132
$CC6    $197C   JP       $97C            ; Jump to 97C
$CC8    $EF5E   UNKNOWN  $EF5E           ; Unknown Exxx instruction
$CCA    $635F   LD       V3, #5F         ; Load 95 into V3
$CCC    $91EE   UNKNOWN  $91EE           ; Unknown 9xxx instruction
$CCE    $341E   SE       V4, #1E         ; Skip if V4 == 30
$CD0    $D66A   DRW      V6, V6, #A      ; Draw 10-byte sprite at V6, V6
$CD2    $84B6   SHR      V4              ; V4 >>= 1, VF = LSB
$CD4    $1C31   JP       $C31            ; Jump to C31
$CD6    $4AD2   SNE      VA, #D2         ; Skip if VA != 210
$CD8    $D9BE   DRW      V9, VB, #E      ; Draw 14-byte sprite at V9, VB
$CDA    $E5BD   UNKNOWN  $E5BD           ; Unknown Exxx instruction
$CDC    $7459   ADD      V4, #59         ; Add 89 to V4
$CDE    $52A0   SE       V2, VA          ; Skip if V2 == VA
$CE0    $552A   UNKNOWN  $552A           ; Unknown 5xxx instruction
$CE2    $C92D   RND      V9, #2D         ; V9 = random & 2D
$CE4    $F1F1   UNKNOWN  F1F1            ; Unknown Fxxx instruction
$CE6    $76C5   ADD      V6, #C5         ; Add 197 to V6
$CE8    $52E7   UNKNOWN  $52E7           ; Unknown 5xxx instruction
$CEA    $2B79   CALL     $B79            ; Call subroutine at B79
$CEC    $3C05   SE       VC, #05         ; Skip if VC == 5
$CEE    $1D85   JP       $D85            ; Jump to D85
$CF0    $FA31   UNKNOWN  FA31            ; Unknown Fxxx instruction
$CF2    $A9ED   LD       I, $9ED         ; Load 9ED into I
$CF4    $1945   JP       $945            ; Jump to 945
$CF6    $CE2D   RND      VE, #2D         ; VE = random & 2D
$CF8    $7844   ADD      V8, #44         ; Add 68 to V8
$CFA    $2019   CALL     $019            ; Call subroutine at 019
$CFC    $1447   JP       $447            ; Jump to 447
$CFE    $8306   SHR      V3              ; V3 >>= 1, VF = LSB
$D00    $8806   SHR      V8              ; V8 >>= 1, VF = LSB
$D02    $9D92   UNKNOWN  $9D92           ; Unknown 9xxx instruction
$D04    $56DB   UNKNOWN  $56DB           ; Unknown 5xxx instruction
$D06    $76B9   ADD      V6, #B9         ; Add 185 to V6
$D08    $80B5   SUB      V0, VB          ; V0 -= VB, VF = !borrow
$D0A    $DE31   DRW      VE, V3, #1      ; Draw 1-byte sprite at VE, V3
$D0C    $1CD0   JP       $CD0            ; Jump to CD0
$D0E    $4B46   SNE      VB, #46         ; Skip if VB != 70
$D10    $31F1   SE       V1, #F1         ; Skip if V1 == 241
$D12    $90CD   UNKNOWN  $90CD           ; Unknown 9xxx instruction
$D14    $32FF   SE       V2, #FF         ; Skip if V2 == 255
$D16    $3470   SE       V4, #70         ; Skip if V4 == 112
$D18    $3147   SE       V1, #47         ; Skip if V1 == 71
$D1A    $2C50   CALL     $C50            ; Call subroutine at C50
$D1C    $3647   SE       V6, #47         ; Skip if V6 == 71
$D1E    $D99E   DRW      V9, V9, #E      ; Draw 14-byte sprite at V9, V9
$D20    $BFD3   JP       V0, $FD3        ; Jump to V0 + FD3
$D22    $D085   DRW      V0, V8, #5      ; Draw 5-byte sprite at V0, V8
$D24    $2B29   CALL     $B29            ; Call subroutine at B29
$D26    $D172   DRW      V1, V7, #2      ; Draw 2-byte sprite at V1, V7
$D28    $E4D1   UNKNOWN  $E4D1           ; Unknown Exxx instruction
$D2A    $325B   SE       V2, #5B         ; Skip if V2 == 91
$D2C    $E00B   UNKNOWN  $E00B           ; Unknown Exxx instruction
$D2E    $731D   ADD      V3, #1D         ; Add 29 to V3
$D30    $7026   ADD      V0, #26         ; Add 38 to V0
$D32    $77AB   ADD      V7, #AB         ; Add 171 to V7
$D34    $273B   CALL     $73B            ; Call subroutine at 73B
$D36    $F398   UNKNOWN  F398            ; Unknown Fxxx instruction
$D38    $B32A   JP       V0, $32A        ; Jump to V0 + 32A
$D3A    $3851   SE       V8, #51         ; Skip if V8 == 81
$D3C    $E184   UNKNOWN  $E184           ; Unknown Exxx instruction
$D3E    $F77B   UNKNOWN  F77B            ; Unknown Fxxx instruction
$D40    $56F8   UNKNOWN  $56F8           ; Unknown 5xxx instruction
$D42    $C64D   RND      V6, #4D         ; V6 = random & 4D
$D44    $3BAC   SE       VB, #AC         ; Skip if VB == 172
$D46    $7216   ADD      V2, #16         ; Add 22 to V2
$D48    $2FCB   CALL     $FCB            ; Call subroutine at FCB
$D4A    $559F   UNKNOWN  $559F           ; Unknown 5xxx instruction
$D4C    $C4D4   RND      V4, #D4         ; V4 = random & D4
$D4E    $02C0   SYS      $2C0            ; System call to 2C0
$D50    $2FE0   CALL     $FE0            ; Call subroutine at FE0
$D52    $DB70   DRW      VB, V7, #0      ; Draw 0-byte sprite at VB, V7
$D54    $C15D   RND      V1, #5D         ; V1 = random & 5D
$D56    $DDB0   DRW      VD, VB, #0      ; Draw 0-byte sprite at VD, VB
$D58    $6AA3   LD       VA, #A3         ; Load 163 into VA
$D5A    $46BB   SNE      V6, #BB         ; Skip if V6 != 187
$D5C    $D819   DRW      V8, V1, #9      ; Draw 9-byte sprite at V8, V1
$D5E    $5E98   UNKNOWN  $5E98           ; Unknown 5xxx instruction
$D60    $EBD7   UNKNOWN  $EBD7           ; Unknown Exxx instruction
$D62    $BFFD   JP       V0, $FFD        ; Jump to V0 + FFD
$D64    $EC4E   UNKNOWN  $EC4E           ; Unknown Exxx instruction
$D66    $45A7   SNE      V5, #A7         ; Skip if V5 != 167
$D68    $12C4   JP       $2C4            ; Jump to 2C4
$D6A    $6770   LD       V7, #70         ; Load 112 into V7
$D6C    $0D16   SYS      $D16            ; System call to D16
$D6E    $A6F9   LD       I, $6F9         ; Load 6F9 into I
$D70    $D25A   DRW      V2, V5, #A      ; Draw 10-byte sprite at V2, V5
$D72    $3BE1   SE       VB, #E1         ; Skip if VB == 225
$D74    $DEEC   DRW      VE, VE, #C      ; Draw 12-byte sprite at VE, VE
$D76    $88F5   SUB      V8, VF          ; V8 -= VF, VF = !borrow
$D78    $E981   UNKNOWN  $E981           ; Unknown Exxx instruction
$D7A    $E499   UNKNOWN  $E499           ; Unknown Exxx instruction
$D7C    $686E   LD       V8, #6E         ; Load 110 into V8
$D7E    $58EA   UNKNOWN  $58EA           ; Unknown 5xxx instruction
$D80    $78BD   ADD      V8, #BD         ; Add 189 to V8
$D82    $3C83   SE       VC, #83         ; Skip if VC == 131
$D84    $0928   SYS      $928            ; System call to 928
$D86    $CF5F   RND      VF, #5F         ; VF = random & 5F
$D88    $B697   JP       V0, $697        ; Jump to V0 + 697
$D8A    $1B66   JP       $B66            ; Jump to B66
$D8C    $7C53   ADD      VC, #53         ; Add 83 to VC
$D8E    $F958   UNKNOWN  F958            ; Unknown Fxxx instruction
$D90    $5BB1   UNKNOWN  $5BB1           ; Unknown 5xxx instruction
$D92    $20A5   CALL     $0A5            ; Call subroutine at 0A5
$D94    $26AD   CALL     $6AD            ; Call subroutine at 6AD
$D96    $0F40   SYS      $F40            ; System call to F40
$D98    $9ECB   UNKNOWN  $9ECB           ; Unknown 9xxx instruction
$D9A    $31CB   SE       V1, #CB         ; Skip if V1 == 203
$D9C    $E08E   UNKNOWN  $E08E           ; Unknown Exxx instruction
$D9E    $26DA   CALL     $6DA            ; Call subroutine at 6DA
$DA0    $6C57   LD       VC, #57         ; Load 87 into VC
$DA2    $B879   JP       V0, $879        ; Jump to V0 + 879
$DA4    $537A   UNKNOWN  $537A           ; Unknown 5xxx instruction
$DA6    $7911   ADD      V9, #11         ; Add 17 to V9
$DA8    $47D1   SNE      V7, #D1         ; Skip if V7 != 209
$DAA    $8FE7   SUBN     VF, VE          ; VF = VE - VF, VF = !borrow
$DAC    $394A   SE       V9, #4A         ; Skip if V9 == 74
$DAE    $1AFE   JP       $AFE            ; Jump to AFE
$DB0    $E6EE   UNKNOWN  $E6EE           ; Unknown Exxx instruction
$DB2    $48FF   SNE      V8, #FF         ; Skip if V8 != 255
$DB4    $DD70   DRW      VD, V7, #0      ; Draw 0-byte sprite at VD, V7
$DB6    $FD54   UNKNOWN  FD54            ; Unknown Fxxx instruction
$DB8    $681D   LD       V8, #1D         ; Load 29 into V8
$DBA    $39DD   SE       V9, #DD         ; Skip if V9 == 221
$DBC    $CE9A   RND      VE, #9A         ; VE = random & 9A
$DBE    $6D0A   LD       VD, #0A         ; Load 10 into VD
$DC0    $7BCB   ADD      VB, #CB         ; Add 203 to VB
$DC2    $7125   ADD      V1, #25         ; Add 37 to V1
$DC4    $240E   CALL     $40E            ; Call subroutine at 40E
$DC6    $5E70   SE       VE, V7          ; Skip if VE == V7
$DC8    $9DF4   UNKNOWN  $9DF4           ; Unknown 9xxx instruction
$DCA    $96B6   UNKNOWN  $96B6           ; Unknown 9xxx instruction
$DCC    $08E1   SYS      $8E1            ; System call to 8E1
$DCE    $CDB1   RND      VD, #B1         ; VD = random & B1
$DD0    $E225   UNKNOWN  $E225           ; Unknown Exxx instruction
$DD2    $753C   ADD      V5, #3C         ; Add 60 to V5
$DD4    $9A2D   UNKNOWN  $9A2D           ; Unknown 9xxx instruction
$DD6    $47B0   SNE      V7, #B0         ; Skip if V7 != 176
$DD8    $0A29   SYS      $A29            ; System call to A29
$DDA    $FBEB   UNKNOWN  FBEB            ; Unknown Fxxx instruction
$DDC    $79A8   ADD      V9, #A8         ; Add 168 to V9
$DDE    $D803   DRW      V8, V0, #3      ; Draw 3-byte sprite at V8, V0
$DE0    $EA59   UNKNOWN  $EA59           ; Unknown Exxx instruction
$DE2    $28BE   CALL     $8BE            ; Call subroutine at 8BE
$DE4    $9DDD   UNKNOWN  $9DDD           ; Unknown 9xxx instruction
$DE6    $9475   UNKNOWN  $9475           ; Unknown 9xxx instruction
$DE8    $970F   UNKNOWN  $970F           ; Unknown 9xxx instruction
$DEA    $4712   SNE      V7, #12         ; Skip if V7 != 18
$DEC    $D6EB   DRW      V6, VE, #B      ; Draw 11-byte sprite at V6, VE
$DEE    $14A4   JP       $4A4            ; Jump to 4A4
$DF0    $7821   ADD      V8, #21         ; Add 33 to V8
$DF2    $D5F8   DRW      V5, VF, #8      ; Draw 8-byte sprite at V5, VF
$DF4    $5774   UNKNOWN  $5774           ; Unknown 5xxx instruction
$DF6    $2A7B   CALL     $A7B            ; Call subroutine at A7B
$DF8    $36C7   SE       V6, #C7         ; Skip if V6 == 199
$DFA    $3913   SE       V9, #13         ; Skip if V9 == 19
$DFC    $690D   LD       V9, #0D         ; Load 13 into V9
$DFE    $E5D0   UNKNOWN  $E5D0           ; Unknown Exxx instruction
$E00    $556D   UNKNOWN  $556D           ; Unknown 5xxx instruction
$E02    $8857   SUBN     V8, V5          ; V8 = V5 - V8, VF = !borrow
$E04    $CD9C   RND      VD, #9C         ; VD = random & 9C
$E06    $C24E   RND      V2, #4E         ; V2 = random & 4E
$E08    $7EAB   ADD      VE, #AB         ; Add 171 to VE
$E0A    $85D7   SUBN     V5, VD          ; V5 = VD - V5, VF = !borrow
$E0C    $A3A7   LD       I, $3A7         ; Load 3A7 into I
$E0E    $4141   SNE      V1, #41         ; Skip if V1 != 65
$E10    $64D3   LD       V4, #D3         ; Load 211 into V4
$E12    $063E   SYS      $63E            ; System call to 63E
$E14    $4A0C   SNE      VA, #0C         ; Skip if VA != 12
$E16    $0F41   SYS      $F41            ; System call to F41
$E18    $8669   UNKNOWN  8669            ; Unknown 8xxx instruction
$E1A    $8C66   SHR      VC              ; VC >>= 1, VF = LSB
$E1C    $D1CB   DRW      V1, VC, #B      ; Draw 11-byte sprite at V1, VC
$E1E    $F348   UNKNOWN  F348            ; Unknown Fxxx instruction
$E20    $432A   SNE      V3, #2A         ; Skip if V3 != 42
$E22    $C745   RND      V7, #45         ; V7 = random & 45
$E24    $7B2C   ADD      VB, #2C         ; Add 44 to VB
$E26    $25B9   CALL     $5B9            ; Call subroutine at 5B9
$E28    $88B1   OR       V8, VB          ; V8 |= VB
$E2A    $87B0   LD       V7, VB          ; V7 = VB
$E2C    $6438   LD       V4, #38         ; Load 56 into V4
$E2E    $FA50   UNKNOWN  FA50            ; Unknown Fxxx instruction
$E30    $1732   JP       $732            ; Jump to 732
$E32    $FE2B   UNKNOWN  FE2B            ; Unknown Fxxx instruction
$E34    $798B   ADD      V9, #8B         ; Add 139 to V9
$E36    $6CE9   LD       VC, #E9         ; Load 233 into VC
$E38    $00FE   SYS      $0FE            ; System call to 0FE
$E3A    $2965   CALL     $965            ; Call subroutine at 965
$E3C    $FBCA   UNKNOWN  FBCA            ; Unknown Fxxx instruction
$E3E    $4FC1   SNE      VF, #C1         ; Skip if VF != 193
$E40    $9314   UNKNOWN  $9314           ; Unknown 9xxx instruction
$E42    $640C   LD       V4, #0C         ; Load 12 into V4
$E44    $AD19   LD       I, $D19         ; Load D19 into I
$E46    $26EC   CALL     $6EC            ; Call subroutine at 6EC
$E48    $24C1   CALL     $4C1            ; Call subroutine at 4C1
$E4A    $6FF8   LD       VF, #F8         ; Load 248 into VF
$E4C    $D432   DRW      V4, V3, #2      ; Draw 2-byte sprite at V4, V3
$E4E    $7D04   ADD      VD, #04         ; Add 4 to VD
$E50    $A4C8   LD       I, $4C8         ; Load 4C8 into I
$E52    $3A9C   SE       VA, #9C         ; Skip if VA == 156
$E54    $CB76   RND      VB, #76         ; VB = random & 76
$E56    $A0BD   LD       I, $0BD         ; Load 0BD into I
$E58    $A7AD   LD       I, $7AD         ; Load 7AD into I
$E5A    $B1BF   JP       V0, $1BF        ; Jump to V0 + 1BF
$E5C    $4B94   SNE      VB, #94         ; Skip if VB != 148
$E5E    $D810   DRW      V8, V1, #0      ; Draw 0-byte sprite at V8, V1
$E60    $154C   JP       $54C            ; Jump to 54C
$E62    $20D2   CALL     $0D2            ; Call subroutine at 0D2
$E64    $B3D1   JP       V0, $3D1        ; Jump to V0 + 3D1
$E66    $D2D0   DRW      V2, VD, #0      ; Draw 0-byte sprite at V2, VD
$E68    $3481   SE       V4, #81         ; Skip if V4 == 129
$E6A    $1151   JP       $151            ; Jump to 151
$E6C    $09CE   SYS      $9CE            ; System call to 9CE
$E6E    $39FA   SE       V9, #FA         ; Skip if V9 == 250
$E70    $CDDA   RND      VD, #DA         ; VD = random & DA
$E72    $EE8E   UNKNOWN  $EE8E           ; Unknown Exxx instruction
$E74    $A029   LD       I, $029         ; Load 029 into I
$E76    $C3E1   RND      V3, #E1         ; V3 = random & E1
$E78    $6971   LD       V9, #71         ; Load 113 into V9
$E7A    $DE68   DRW      VE, V6, #8      ; Draw 8-byte sprite at VE, V6
$E7C    $CE88   RND      VE, #88         ; VE = random & 88
$E7E    $925C   UNKNOWN  $925C           ; Unknown 9xxx instruction
$E80    $F45E   UNKNOWN  F45E            ; Unknown Fxxx instruction
$E82    $A1FF   LD       I, $1FF         ; Load 1FF into I
$E84    $5D53   UNKNOWN  $5D53           ; Unknown 5xxx instruction
$E86    $DBCF   DRW      VB, VC, #F      ; Draw 15-byte sprite at VB, VC
$E88    $12C5   JP       $2C5            ; Jump to 2C5
$E8A    $0471   SYS      $471            ; System call to 471
$E8C    $9C08   UNKNOWN  $9C08           ; Unknown 9xxx instruction
$E8E    $D566   DRW      V5, V6, #6      ; Draw 6-byte sprite at V5, V6
$E90    $A317   LD       I, $317         ; Load 317 into I
$E92    $E369   UNKNOWN  $E369           ; Unknown Exxx instruction
$E94    $C3A3   RND      V3, #A3         ; V3 = random & A3
$E96    $52E1   UNKNOWN  $52E1           ; Unknown 5xxx instruction
$E98    $F1CB   UNKNOWN  F1CB            ; Unknown Fxxx instruction
$E9A    $86B7   SUBN     V6, VB          ; V6 = VB - V6, VF = !borrow
$E9C    $A4AC   LD       I, $4AC         ; Load 4AC into I
$E9E    $20EB   CALL     $0EB            ; Call subroutine at 0EB
$EA0    $88D1   OR       V8, VD          ; V8 |= VD
$EA2    $5DB9   UNKNOWN  $5DB9           ; Unknown 5xxx instruction
$EA4    $0EFF   SYS      $EFF            ; System call to EFF
$EA6    $5487   UNKNOWN  $5487           ; Unknown 5xxx instruction
$EA8    $A8A3   LD       I, $8A3         ; Load 8A3 into I
$EAA    $E832   UNKNOWN  $E832           ; Unknown Exxx instruction
$EAC    $109C   JP       $09C            ; Jump to 09C
$EAE    $1DD3   JP       $DD3            ; Jump to DD3
$EB0    $4A32   SNE      VA, #32         ; Skip if VA != 50
$EB2    $0566   SYS      $566            ; System call to 566
$EB4    $CADC   RND      VA, #DC         ; VA = random & DC
$EB6    $47F0   SNE      V7, #F0         ; Skip if V7 != 240
$EB8    $6E86   LD       VE, #86         ; Load 134 into VE
$EBA    $19FE   JP       $9FE            ; Jump to 9FE
$EBC    $149F   JP       $49F            ; Jump to 49F
$EBE    $366C   SE       V6, #6C         ; Skip if V6 == 108
$EC0    $2411   CALL     $411            ; Call subroutine at 411
$EC2    $2425   CALL     $425            ; Call subroutine at 425
$EC4    $F6BA   UNKNOWN  F6BA            ; Unknown Fxxx instruction
$EC6    $F67F   UNKNOWN  F67F            ; Unknown Fxxx instruction
$EC8    $0301   SYS      $301            ; System call to 301
$ECA    $AF37   LD       I, $F37         ; Load F37 into I
$ECC    $8231   OR       V2, V3          ; V2 |= V3
$ECE    $894A   UNKNOWN  894A            ; Unknown 8xxx instruction
$ED0    $EB5F   UNKNOWN  $EB5F           ; Unknown Exxx instruction
$ED2    $EA87   UNKNOWN  $EA87           ; Unknown Exxx instruction
$ED4    $691E   LD       V9, #1E         ; Load 30 into V9
$ED6    $8DFC   UNKNOWN  8DFC            ; Unknown 8xxx instruction
$ED8    $1AC7   JP       $AC7            ; Jump to AC7
$EDA    $E35D   UNKNOWN  $E35D           ; Unknown Exxx instruction
$EDC    $586D   UNKNOWN  $586D           ; Unknown 5xxx instruction
$EDE    $9D55   UNKNOWN  $9D55           ; Unknown 9xxx instruction
$EE0    $DF4B   DRW      VF, V4, #B      ; Draw 11-byte sprite at VF, V4
$EE2    $B030   JP       V0, $030        ; Jump to V0 + 030
$EE4    $35DE   SE       V5, #DE         ; Skip if V5 == 222
$EE6    $6335   LD       V3, #35         ; Load 53 into V3
$EE8    $AEAC   LD       I, $EAC         ; Load EAC into I
$EEA    $AC93   LD       I, $C93         ; Load C93 into I
$EEC    $4349   SNE      V3, #49         ; Skip if V3 != 73
$EEE    $18AF   JP       $8AF            ; Jump to 8AF
$EF0    $8C74   ADD      VC, V7          ; VC += V7, VF = carry
$EF2    $C6C5   RND      V6, #C5         ; V6 = random & C5
$EF4    $F6F6   UNKNOWN  F6F6            ; Unknown Fxxx instruction
$EF6    $7017   ADD      V0, #17         ; Add 23 to V0
$EF8    $03AF   SYS      $3AF            ; System call to 3AF
$EFA    $C836   RND      V8, #36         ; V8 = random & 36
$EFC    $0ECB   SYS      $ECB            ; System call to ECB
$EFE    $CED1   RND      VE, #D1         ; VE = random & D1
$F00    $93C3   UNKNOWN  $93C3           ; Unknown 9xxx instruction
$F02    $7E46   ADD      VE, #46         ; Add 70 to VE
$F04    $3F1E   SE       VF, #1E         ; Skip if VF == 30
$F06    $884D   UNKNOWN  884D            ; Unknown 8xxx instruction
$F08    $489E   SNE      V8, #9E         ; Skip if V8 != 158
$F0A    $7EFF   ADD      VE, #FF         ; Add 255 to VE
$F0C    $EE0C   UNKNOWN  $EE0C           ; Unknown Exxx instruction
$F0E    $9895   UNKNOWN  $9895           ; Unknown 9xxx instruction
$F10    $FA44   UNKNOWN  FA44            ; Unknown Fxxx instruction
$F12    $C07A   RND      V0, #7A         ; V0 = random & 7A
$F14    $04AA   SYS      $4AA            ; System call to 4AA
$F16    $AC6D   LD       I, $C6D         ; Load C6D into I
$F18    $2318   CALL     $318            ; Call subroutine at 318
$F1A    $9792   UNKNOWN  $9792           ; Unknown 9xxx instruction
$F1C    $B012   JP       V0, $012        ; Jump to V0 + 012
$F1E    $E1EC   UNKNOWN  $E1EC           ; Unknown Exxx instruction
$F20    $2008   CALL     $008            ; Call subroutine at 008
$F22    $A1C5   LD       I, $1C5         ; Load 1C5 into I
$F24    $305C   SE       V0, #5C         ; Skip if V0 == 92
$F26    $1DC7   JP       $DC7            ; Jump to DC7
$F28    $4C37   SNE      VC, #37         ; Skip if VC != 55
$F2A    $8034   ADD      V0, V3          ; V0 += V3, VF = carry
$F2C    $EDF6   UNKNOWN  $EDF6           ; Unknown Exxx instruction
$F2E    $06E7   SYS      $6E7            ; System call to 6E7
$F30    $657E   LD       V5, #7E         ; Load 126 into V5
$F32    $92F8   UNKNOWN  $92F8           ; Unknown 9xxx instruction
$F34    $4EAB   SNE      VE, #AB         ; Skip if VE != 171
$F36    $144D   JP       $44D            ; Jump to 44D
$F38    $35A2   SE       V5, #A2         ; Skip if V5 == 162
$F3A    $4176   SNE      V1, #76         ; Skip if V1 != 118
$F3C    $FBBC   UNKNOWN  FBBC            ; Unknown Fxxx instruction
$F3E    $BE93   JP       V0, $E93        ; Jump to V0 + E93
$F40    $1165   JP       $165            ; Jump to 165
$F42    $604F   LD       V0, #4F         ; Load 79 into V0
$F44    $11E4   JP       $1E4            ; Jump to 1E4
$F46    $2A41   CALL     $A41            ; Call subroutine at A41
$F48    $1705   JP       $705            ; Jump to 705
$F4A    $E85B   UNKNOWN  $E85B           ; Unknown Exxx instruction
$F4C    $26F9   CALL     $6F9            ; Call subroutine at 6F9
$F4E    $2C71   CALL     $C71            ; Call subroutine at C71
$F50    $C755   RND      V7, #55         ; V7 = random & 55
$F52    $FB39   UNKNOWN  FB39            ; Unknown Fxxx instruction
$F54    $A5F6   LD       I, $5F6         ; Load 5F6 into I
$F56    $F37F   UNKNOWN  F37F            ; Unknown Fxxx instruction
$F58    $0A43   SYS      $A43            ; System call to A43
$F5A    $F42D   UNKNOWN  F42D            ; Unknown Fxxx instruction
$F5C    $E08A   UNKNOWN  $E08A           ; Unknown Exxx instruction
$F5E    $A950   LD       I, $950         ; Load 950 into I
$F60    $1418   JP       $418            ; Jump to 418
$F62    $3CC8   SE       VC, #C8         ; Skip if VC == 200
$F64    $8323   XOR      V3, V2          ; V3 ^= V2
$F66    $A153   LD       I, $153         ; Load 153 into I
$F68    $02C4   SYS      $2C4            ; System call to 2C4
$F6A    $CAE5   RND      VA, #E5         ; VA = random & E5
$F6C    $9332   UNKNOWN  $9332           ; Unknown 9xxx instruction
$F6E    $120D   JP       $20D            ; Jump to 20D
$F70    $4A86   SNE      VA, #86         ; Skip if VA != 134
$F72    $9C2C   UNKNOWN  $9C2C           ; Unknown 9xxx instruction
$F74    $8E4C   UNKNOWN  8E4C            ; Unknown 8xxx instruction
$F76    $F99A   UNKNOWN  F99A            ; Unknown Fxxx instruction
$F78    $B0EE   JP       V0, $0EE        ; Jump to V0 + 0EE
$F7A    $326E   SE       V2, #6E         ; Skip if V2 == 110
$F7C    $27AE   CALL     $7AE            ; Call subroutine at 7AE
$F7E    $D444   DRW      V4, V4, #4      ; Draw 4-byte sprite at V4, V4
$F80    $E663   UNKNOWN  $E663           ; Unknown Exxx instruction
$F82    $93CA   UNKNOWN  $93CA           ; Unknown 9xxx instruction
$F84    $C72B   RND      V7, #2B         ; V7 = random & 2B
$F86    $7C86   ADD      VC, #86         ; Add 134 to VC
$F88    $A37F   LD       I, $37F         ; Load 37F into I
$F8A    $671D   LD       V7, #1D         ; Load 29 into V7
$F8C    $AE72   LD       I, $E72         ; Load E72 into I
$F8E    $7A72   ADD      VA, #72         ; Add 114 to VA
$F90    $9049   UNKNOWN  $9049           ; Unknown 9xxx instruction
$F92    $E29C   UNKNOWN  $E29C           ; Unknown Exxx instruction
$F94    $7227   ADD      V2, #27         ; Add 39 to V2
$F96    $82EF   UNKNOWN  82EF            ; Unknown 8xxx instruction
$F98    $B2EE   JP       V0, $2EE        ; Jump to V0 + 2EE
$F9A    $CE81   RND      VE, #81         ; VE = random & 81
$F9C    $B8BD   JP       V0, $8BD        ; Jump to V0 + 8BD
$F9E    $2886   CALL     $886            ; Call subroutine at 886
$FA0    $8063   XOR      V0, V6          ; V0 ^= V6
$FA2    $FF9E   UNKNOWN  FF9E            ; Unknown Fxxx instruction
$FA4    $850A   UNKNOWN  850A            ; Unknown 8xxx instruction
$FA6    $C9FD   RND      V9, #FD         ; V9 = random & FD
$FA8    $B8CB   JP       V0, $8CB        ; Jump to V0 + 8CB
$FAA    $4C7B   SNE      VC, #7B         ; Skip if VC != 123
$FAC    $3563   SE       V5, #63         ; Skip if V5 == 99
$FAE    $4AFB   SNE      VA, #FB         ; Skip if VA != 251
$FB0    $521A   UNKNOWN  $521A           ; Unknown 5xxx instruction
$FB2    $EC6B   UNKNOWN  $EC6B           ; Unknown Exxx instruction
$FB4    $DFA2   DRW      VF, VA, #2      ; Draw 2-byte sprite at VF, VA
$FB6    $3E4D   SE       VE, #4D         ; Skip if VE == 77
$FB8    $8EB5   SUB      VE, VB          ; VE -= VB, VF = !borrow
$FBA    $4083   SNE      V0, #83         ; Skip if V0 != 131
$FBC    $6D6A   LD       VD, #6A         ; Load 106 into VD
$FBE    $DC0A   DRW      VC, V0, #A      ; Draw 10-byte sprite at VC, V0
$FC0    $3A75   SE       VA, #75         ; Skip if VA == 117
$FC2    $F8DF   UNKNOWN  F8DF            ; Unknown Fxxx instruction
$FC4    $EA86   UNKNOWN  $EA86           ; Unknown Exxx instruction
$FC6    $C236   RND      V2, #36         ; V2 = random & 36
$FC8    $869E   SHL      V6              ; V6 <<= 1, VF = MSB
$FCA    $06AB   SYS      $6AB            ; System call to 6AB
$FCC    $FCAC   UNKNOWN  FCAC            ; Unknown Fxxx instruction
$FCE    $6FEA   LD       VF, #EA         ; Load 234 into VF
$FD0    $26AD   CALL     $6AD            ; Call subroutine at 6AD
$FD2    $11F6   JP       $1F6            ; Jump to 1F6
$FD4    $08CF   SYS      $8CF            ; System call to 8CF
$FD6    $3550   SE       V5, #50         ; Skip if V5 == 80
$FD8    $1067   JP       $067            ; Jump to 067
$FDA    $1066   JP       $066            ; Jump to 066
$FDC    $FB6F   UNKNOWN  FB6F            ; Unknown Fxxx instruction
$FDE    $76CE   ADD      V6, #CE         ; Add 206 to V6
$FE0    $EA8A   UNKNOWN  $EA8A           ; Unknown Exxx instruction
$FE2    $8450   LD       V4, V5          ; V4 = V5
$FE4    $A142   LD       I, $142         ; Load 142 into I
$FE6    $50BC   UNKNOWN  $50BC           ; Unknown 5xxx instruction
$FE8    $48C8   SNE      V8, #C8         ; Skip if V8 != 200
$FEA    $175C   JP       $75C            ; Jump to 75C
$FEC    $C5E1   RND      V5, #E1         ; V5 = random & E1
$FEE    $E352   UNKNOWN  $E352           ; Unknown Exxx instruction
$FF0    $01A7   SYS      $1A7            ; System call to 1A7
$FF2    $019D   SYS      $19D            ; System call to 19D
$FF4    $EBC5   UNKNOWN  $EBC5           ; Unknown Exxx instruction
$FF6    $F905   UNKNOWN  F905            ; Unknown Fxxx instruction
$FF8    $CB22   RND      VB, #22         ; VB = random & 22
$FFA    $6184   LD       V1, #84         ; Load 132 into V1
$FFC    $B72B   JP       V0, $72B        ; Jump to V0 + 72B
$FFE    $BB2D   JP       V0, $B2D        ; Jump to V0 + B2D

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 479 (26.7%)
  LD      : 226 (12.6%)
  JP      : 223 (12.4%)
  SE      : 135 ( 7.5%)
  ADD     : 123 ( 6.9%)
  CALL    : 116 ( 6.5%)
  SNE     : 114 ( 6.4%)
  DRW     : 108 ( 6.0%)
  RND     : 106 ( 5.9%)
  SYS     : 103 ( 5.7%)
  SUB     :  15 ( 0.8%)
  SUBN    :  11 ( 0.6%)
  SHR     :   9 ( 0.5%)
  OR      :   8 ( 0.4%)
  XOR     :   7 ( 0.4%)
  SHL     :   5 ( 0.3%)
  AND     :   4 ( 0.2%)

Memory Operations: 349 (19.5%)
Arithmetic Operations: 168 (9.4%)
