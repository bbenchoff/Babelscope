
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B360D01_I14318_C14231_e45fb64da9b1.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 360
Instance: 14318
Direction: ascending
Final Array: [32, 32, 32, 32, 32, 32, 32, 195]
Operations: R:0 W:7 C:13 S:2

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 99
Sort Array References:
  $208: LD [I], V0 ; Store V0-V0 at I
  $22A: LD I, $DD8 ; Load DD8 into I
  $252: LD I, $3A1 ; Load 3A1 into I
  $26E: LD I, $9CF ; Load 9CF into I
  $270: LD I, $1FD ; Load 1FD into I
  $272: LD I, $C73 ; Load C73 into I
  $29E: LD [I], VE ; Store V0-VE at I
  $31E: LD I, $F0B ; Load F0B into I
  $348: LD I, $095 ; Load 095 into I
  $3F8: LD I, $0FC ; Load 0FC into I
  $40A: LD I, $29B ; Load 29B into I
  $46E: LD I, $88E ; Load 88E into I
  $4A6: LD I, $004 ; Load 004 into I
  $4D2: LD I, $F88 ; Load F88 into I
  $4DC: LD I, $EDD ; Load EDD into I
  $528: LD I, $2E3 ; Load 2E3 into I
  $54C: LD I, $750 ; Load 750 into I
  $55A: LD I, $138 ; Load 138 into I
  $5A6: LD I, $172 ; Load 172 into I
  $5DC: LD I, $A37 ; Load A37 into I
  $5FE: LD I, $AF4 ; Load AF4 into I
  $61A: LD I, $DD7 ; Load DD7 into I
  $628: LD I, $052 ; Load 052 into I
  $656: LD I, $757 ; Load 757 into I
  $672: LD I, $3AF ; Load 3AF into I
  $6B8: LD I, $F03 ; Load F03 into I
  $6BE: LD I, $84F ; Load 84F into I
  $6FE: LD I, $4F5 ; Load 4F5 into I
  $704: LD I, $49D ; Load 49D into I
  $716: LD I, $95E ; Load 95E into I
  $736: LD I, $D2F ; Load D2F into I
  $768: LD I, $DF0 ; Load DF0 into I
  $780: LD I, $D52 ; Load D52 into I
  $7A0: LD I, $F9E ; Load F9E into I
  $7BA: LD I, $4C3 ; Load 4C3 into I
  $7CA: LD I, $F2A ; Load F2A into I
  $7D6: LD I, $581 ; Load 581 into I
  $7E2: LD I, $477 ; Load 477 into I
  $7EE: LD I, $5AC ; Load 5AC into I
  $806: LD I, $F37 ; Load F37 into I
  $86C: LD [I], V6 ; Store V0-V6 at I
  $874: LD I, $A57 ; Load A57 into I
  $876: LD I, $373 ; Load 373 into I
  $890: LD I, $A48 ; Load A48 into I
  $894: LD I, $D7B ; Load D7B into I
  $8B0: LD I, $91D ; Load 91D into I
  $8F0: LD I, $2AF ; Load 2AF into I
  $8F8: LD I, $DE2 ; Load DE2 into I
  $8FE: LD I, $F4E ; Load F4E into I
  $920: LD I, $1DA ; Load 1DA into I
  $938: LD I, $623 ; Load 623 into I
  $952: LD I, $DE8 ; Load DE8 into I
  $982: LD I, $704 ; Load 704 into I
  $994: LD I, $AFE ; Load AFE into I
  $9F6: LD I, $209 ; Load 209 into I
  $A1E: LD I, $57A ; Load 57A into I
  $A26: LD I, $BCA ; Load BCA into I
  $A3C: LD I, $D8D ; Load D8D into I
  $A98: LD I, $8A9 ; Load 8A9 into I
  $AA2: LD I, $2CD ; Load 2CD into I
  $AC8: LD I, $8CA ; Load 8CA into I
  $AE4: LD I, $9C5 ; Load 9C5 into I
  $B3C: LD I, $FFE ; Load FFE into I
  $B70: LD I, $C3E ; Load C3E into I
  $BC0: LD I, $6FD ; Load 6FD into I
  $BCC: LD I, $97F ; Load 97F into I
  $BCE: LD I, $04E ; Load 04E into I
  $C6A: LD I, $280 ; Load 280 into I
  $C76: LD I, $487 ; Load 487 into I
  $CD6: LD I, $9D4 ; Load 9D4 into I
  $CF2: LD I, $61E ; Load 61E into I
  $D08: LD I, $645 ; Load 645 into I
  $D1E: LD I, $CB4 ; Load CB4 into I
  $D50: LD I, $31E ; Load 31E into I
  $D56: LD I, $1F2 ; Load 1F2 into I
  $D90: LD I, $8CA ; Load 8CA into I
  $D9A: LD I, $970 ; Load 970 into I
  $D9C: LD I, $5E3 ; Load 5E3 into I
  $DAC: LD I, $2CD ; Load 2CD into I
  $DDA: LD I, $6AC ; Load 6AC into I
  $E08: LD I, $A7D ; Load A7D into I
  $E46: LD I, $53C ; Load 53C into I
  $E56: LD I, $E55 ; Load E55 into I
  $E62: LD I, $331 ; Load 331 into I
  $E84: LD I, $62F ; Load 62F into I
  $EAE: LD I, $32C ; Load 32C into I
  $EBC: LD I, $B91 ; Load B91 into I
  $EDC: LD I, $641 ; Load 641 into I
  $EE2: LD I, $323 ; Load 323 into I
  $EEE: LD I, $ED5 ; Load ED5 into I
  $EF8: LD I, $B8F ; Load B8F into I
  $F00: LD I, $E47 ; Load E47 into I
  $F14: LD I, $850 ; Load 850 into I
  $F38: LD I, $DF7 ; Load DF7 into I
  $F7E: LD I, $057 ; Load 057 into I
  $F90: LD I, $79B ; Load 79B into I
  $FA0: LD I, $131 ; Load 131 into I
  $FA6: LD I, $21C ; Load 21C into I
  $FB6: LD I, $B8D ; Load B8D into I

CONTROL FLOW ANALYSIS:
Jumps: 206
Calls: 154
Branches: 236
Loops: 121
Loop Structures:
  $216 -> $046 (backward jump)
  $25C -> $1AC (backward jump)
  $340 -> $023 (backward jump)
  $37C -> $19E (backward jump)
  $396 -> $2B7 (backward jump)
  $39C -> $33B (backward jump)
  $3F0 -> $31D (backward jump)
  $41A -> $1B5 (backward jump)
  $434 -> $155 (backward jump)
  $4AA -> $387 (backward jump)
  $544 -> $067 (backward jump)
  $59A -> $0A1 (backward jump)
  $5CE -> $18F (backward jump)
  $5D2 -> $4F9 (backward jump)
  $5EC -> $4A4 (backward jump)
  $608 -> $4D9 (backward jump)
  $62E -> $3E5 (backward jump)
  $654 -> $5DB (backward jump)
  $658 -> $0C0 (backward jump)
  $6A8 -> $269 (backward jump)
  $6AE -> $486 (backward jump)
  $6D2 -> $3EE (backward jump)
  $728 -> $2A5 (backward jump)
  $750 -> $0ED (backward jump)
  $75C -> $364 (backward jump)
  $77C -> $32C (backward jump)
  $800 -> $5D7 (backward jump)
  $804 -> $4B5 (backward jump)
  $854 -> $0B4 (backward jump)
  $89A -> $134 (backward jump)
  $8AC -> $6EB (backward jump)
  $8DC -> $8BC (backward jump)
  $90C -> $2CA (backward jump)
  $91C -> $57C (backward jump)
  $946 -> $218 (backward jump)
  $94A -> $48A (backward jump)
  $962 -> $569 (backward jump)
  $96C -> $7BA (backward jump)
  $990 -> $782 (backward jump)
  $9AA -> $759 (backward jump)
  $9B0 -> $7AD (backward jump)
  $9CA -> $231 (backward jump)
  $9DE -> $437 (backward jump)
  $9EE -> $1C3 (backward jump)
  $A14 -> $560 (backward jump)
  $A22 -> $6F0 (backward jump)
  $A7A -> $555 (backward jump)
  $AA0 -> $1FA (backward jump)
  $AB0 -> $92E (backward jump)
  $AB8 -> $3AB (backward jump)
  $ADC -> $52C (backward jump)
  $AE6 -> $898 (backward jump)
  $B08 -> $8A7 (backward jump)
  $B14 -> $988 (backward jump)
  $B16 -> $42A (backward jump)
  $B50 -> $57F (backward jump)
  $B58 -> $50F (backward jump)
  $B6C -> $46E (backward jump)
  $B9C -> $578 (backward jump)
  $BAA -> $925 (backward jump)
  $BF0 -> $819 (backward jump)
  $BFA -> $92E (backward jump)
  $BFC -> $695 (backward jump)
  $C20 -> $149 (backward jump)
  $C28 -> $636 (backward jump)
  $C4C -> $310 (backward jump)
  $C64 -> $500 (backward jump)
  $C7A -> $B3F (backward jump)
  $C80 -> $189 (backward jump)
  $CA0 -> $237 (backward jump)
  $CDA -> $B70 (backward jump)
  $CE2 -> $141 (backward jump)
  $CE4 -> $CD8 (backward jump)
  $CEA -> $29C (backward jump)
  $CF4 -> $69B (backward jump)
  $CFE -> $946 (backward jump)
  $D02 -> $891 (backward jump)
  $D0E -> $0BA (backward jump)
  $D12 -> $10D (backward jump)
  $D2A -> $017 (backward jump)
  $D3A -> $47B (backward jump)
  $D52 -> $530 (backward jump)
  $D5A -> $125 (backward jump)
  $D84 -> $400 (backward jump)
  $DA0 -> $5A6 (backward jump)
  $DA4 -> $5F5 (backward jump)
  $DA6 -> $5DF (backward jump)
  $DAA -> $6EF (backward jump)
  $DB0 -> $2E4 (backward jump)
  $DB8 -> $907 (backward jump)
  $DCC -> $262 (backward jump)
  $DE0 -> $98D (backward jump)
  $E04 -> $569 (backward jump)
  $E06 -> $3D5 (backward jump)
  $E1C -> $38B (backward jump)
  $E2E -> $278 (backward jump)
  $E3E -> $2E2 (backward jump)
  $E48 -> $B82 (backward jump)
  $E6C -> $309 (backward jump)
  $E82 -> $BBD (backward jump)
  $EA0 -> $B6F (backward jump)
  $EAA -> $D63 (backward jump)
  $EBA -> $5F3 (backward jump)
  $ECA -> $BFA (backward jump)
  $ED0 -> $0AD (backward jump)
  $EFE -> $75C (backward jump)
  $F0E -> $838 (backward jump)
  $F22 -> $E88 (backward jump)
  $F30 -> $33D (backward jump)
  $F40 -> $245 (backward jump)
  $F5A -> $F00 (backward jump)
  $F66 -> $B6F (backward jump)
  $F7A -> $071 (backward jump)
  $FBA -> $913 (backward jump)
  $FBC -> $772 (backward jump)
  $FD0 -> $766 (backward jump)
  $FDE -> $995 (backward jump)
  $FF0 -> $EE7 (backward jump)
  $FF4 -> $C4C (backward jump)
  $FFC -> $204 (backward jump)
  $FFE -> $8F3 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $DB76   DRW      VB, V7, #6      ; Draw 6-byte sprite at VB, V7
$202    $3D4A   SE       VD, #4A         ; Skip if VD == 74
$204    $CA95   RND      VA, #95         ; VA = random & 95
$206    $2F23   CALL     $F23            ; Call subroutine at F23
$208    $F055   LD       [I], V0         ; Store V0-V0 at I
$20A    $E714   UNKNOWN  $E714           ; Unknown Exxx instruction
$20C    $39F4   SE       V9, #F4         ; Skip if V9 == 244
$20E    $E7AC   UNKNOWN  $E7AC           ; Unknown Exxx instruction
$210    $0677   SYS      $677            ; System call to 677
$212    $24E0   CALL     $4E0            ; Call subroutine at 4E0
$214    $7AA9   ADD      VA, #A9         ; Add 169 to VA
$216    $B046   JP       V0, $046        ; Jump to V0 + 046
$218    $BB7C   JP       V0, $B7C        ; Jump to V0 + B7C
$21A    $E45E   UNKNOWN  $E45E           ; Unknown Exxx instruction
$21C    $6483   LD       V4, #83         ; Load 131 into V4
$21E    $94EF   UNKNOWN  $94EF           ; Unknown 9xxx instruction
$220    $81D0   LD       V1, VD          ; V1 = VD
$222    $5BAA   UNKNOWN  $5BAA           ; Unknown 5xxx instruction
$224    $65A4   LD       V5, #A4         ; Load 164 into V5
$226    $CCE2   RND      VC, #E2         ; VC = random & E2
$228    $5B92   UNKNOWN  $5B92           ; Unknown 5xxx instruction
$22A    $ADD8   LD       I, $DD8         ; Load DD8 into I
$22C    $918E   UNKNOWN  $918E           ; Unknown 9xxx instruction
$22E    $E857   UNKNOWN  $E857           ; Unknown Exxx instruction
$230    $6291   LD       V2, #91         ; Load 145 into V2
$232    $27F4   CALL     $7F4            ; Call subroutine at 7F4
$234    $DB97   DRW      VB, V9, #7      ; Draw 7-byte sprite at VB, V9
$236    $325E   SE       V2, #5E         ; Skip if V2 == 94
$238    $078B   SYS      $78B            ; System call to 78B
$23A    $0622   SYS      $622            ; System call to 622
$23C    $DC9D   DRW      VC, V9, #D      ; Draw 13-byte sprite at VC, V9
$23E    $7F08   ADD      VF, #08         ; Add 8 to VF
$240    $3D67   SE       VD, #67         ; Skip if VD == 103
$242    $8699   UNKNOWN  8699            ; Unknown 8xxx instruction
$244    $1F95   JP       $F95            ; Jump to F95
$246    $9D10   SNE      VD, V1          ; Skip if VD != V1
$248    $3676   SE       V6, #76         ; Skip if V6 == 118
$24A    $4330   SNE      V3, #30         ; Skip if V3 != 48
$24C    $1480   JP       $480            ; Jump to 480
$24E    $3567   SE       V5, #67         ; Skip if V5 == 103
$250    $D300   DRW      V3, V0, #0      ; Draw 0-byte sprite at V3, V0
$252    $A3A1   LD       I, $3A1         ; Load 3A1 into I
$254    $B6F8   JP       V0, $6F8        ; Jump to V0 + 6F8
$256    $0ABB   SYS      $ABB            ; System call to ABB
$258    $9EAC   UNKNOWN  $9EAC           ; Unknown 9xxx instruction
$25A    $128B   JP       $28B            ; Jump to 28B
$25C    $11AC   JP       $1AC            ; Jump to 1AC
$25E    $3A3F   SE       VA, #3F         ; Skip if VA == 63
$260    $54B6   UNKNOWN  $54B6           ; Unknown 5xxx instruction
$262    $341B   SE       V4, #1B         ; Skip if V4 == 27
$264    $B7E2   JP       V0, $7E2        ; Jump to V0 + 7E2
$266    $D9BD   DRW      V9, VB, #D      ; Draw 13-byte sprite at V9, VB
$268    $5BAE   UNKNOWN  $5BAE           ; Unknown 5xxx instruction
$26A    $F8D8   UNKNOWN  F8D8            ; Unknown Fxxx instruction
$26C    $0FFE   SYS      $FFE            ; System call to FFE
$26E    $A9CF   LD       I, $9CF         ; Load 9CF into I
$270    $A1FD   LD       I, $1FD         ; Load 1FD into I
$272    $AC73   LD       I, $C73         ; Load C73 into I
$274    $97A9   UNKNOWN  $97A9           ; Unknown 9xxx instruction
$276    $5D94   UNKNOWN  $5D94           ; Unknown 5xxx instruction
$278    $86C5   SUB      V6, VC          ; V6 -= VC, VF = !borrow
$27A    $48B6   SNE      V8, #B6         ; Skip if V8 != 182
$27C    $734A   ADD      V3, #4A         ; Add 74 to V3
$27E    $D6D1   DRW      V6, VD, #1      ; Draw 1-byte sprite at V6, VD
$280    $0ADA   SYS      $ADA            ; System call to ADA
$282    $ECC7   UNKNOWN  $ECC7           ; Unknown Exxx instruction
$284    $0B0A   SYS      $B0A            ; System call to B0A
$286    $34D2   SE       V4, #D2         ; Skip if V4 == 210
$288    $8032   AND      V0, V3          ; V0 &= V3
$28A    $CAC7   RND      VA, #C7         ; VA = random & C7
$28C    $26EA   CALL     $6EA            ; Call subroutine at 6EA
$28E    $4C89   SNE      VC, #89         ; Skip if VC != 137
$290    $C5F0   RND      V5, #F0         ; V5 = random & F0
$292    $408C   SNE      V0, #8C         ; Skip if V0 != 140
$294    $01B2   SYS      $1B2            ; System call to 1B2
$296    $717B   ADD      V1, #7B         ; Add 123 to V1
$298    $E77C   UNKNOWN  $E77C           ; Unknown Exxx instruction
$29A    $588D   UNKNOWN  $588D           ; Unknown 5xxx instruction
$29C    $F2BA   UNKNOWN  F2BA            ; Unknown Fxxx instruction
$29E    $FE55   LD       [I], VE         ; Store V0-VE at I
$2A0    $5CB5   UNKNOWN  $5CB5           ; Unknown 5xxx instruction
$2A2    $9D3D   UNKNOWN  $9D3D           ; Unknown 9xxx instruction
$2A4    $6319   LD       V3, #19         ; Load 25 into V3
$2A6    $82E4   ADD      V2, VE          ; V2 += VE, VF = carry
$2A8    $4A9C   SNE      VA, #9C         ; Skip if VA != 156
$2AA    $49D3   SNE      V9, #D3         ; Skip if V9 != 211
$2AC    $D63D   DRW      V6, V3, #D      ; Draw 13-byte sprite at V6, V3
$2AE    $E420   UNKNOWN  $E420           ; Unknown Exxx instruction
$2B0    $2020   CALL     $020            ; Call subroutine at 020
$2B2    $2020   CALL     $020            ; Call subroutine at 020
$2B4    $2020   CALL     $020            ; Call subroutine at 020
$2B6    $2020   CALL     $020            ; Call subroutine at 020
$2B8    $2020   CALL     $020            ; Call subroutine at 020
$2BA    $2020   CALL     $020            ; Call subroutine at 020
$2BC    $2020   CALL     $020            ; Call subroutine at 020
$2BE    $2020   CALL     $020            ; Call subroutine at 020
$2C0    $2020   CALL     $020            ; Call subroutine at 020
$2C2    $2020   CALL     $020            ; Call subroutine at 020
$2C4    $2020   CALL     $020            ; Call subroutine at 020
$2C6    $2020   CALL     $020            ; Call subroutine at 020
$2C8    $2020   CALL     $020            ; Call subroutine at 020
$2CA    $2020   CALL     $020            ; Call subroutine at 020
$2CC    $2020   CALL     $020            ; Call subroutine at 020
$2CE    $2020   CALL     $020            ; Call subroutine at 020
$2D0    $2020   CALL     $020            ; Call subroutine at 020
$2D2    $2020   CALL     $020            ; Call subroutine at 020
$2D4    $2020   CALL     $020            ; Call subroutine at 020
$2D6    $2020   CALL     $020            ; Call subroutine at 020
$2D8    $2020   CALL     $020            ; Call subroutine at 020
$2DA    $2020   CALL     $020            ; Call subroutine at 020
$2DC    $2020   CALL     $020            ; Call subroutine at 020
$2DE    $2020   CALL     $020            ; Call subroutine at 020
$2E0    $2020   CALL     $020            ; Call subroutine at 020
$2E2    $2020   CALL     $020            ; Call subroutine at 020
$2E4    $2020   CALL     $020            ; Call subroutine at 020
$2E6    $2020   CALL     $020            ; Call subroutine at 020
$2E8    $2020   CALL     $020            ; Call subroutine at 020
$2EA    $2020   CALL     $020            ; Call subroutine at 020
$2EC    $2020   CALL     $020            ; Call subroutine at 020
$2EE    $2020   CALL     $020            ; Call subroutine at 020
$2F0    $2020   CALL     $020            ; Call subroutine at 020
$2F2    $2020   CALL     $020            ; Call subroutine at 020
$2F4    $2020   CALL     $020            ; Call subroutine at 020
$2F6    $2020   CALL     $020            ; Call subroutine at 020
$2F8    $2020   CALL     $020            ; Call subroutine at 020
$2FA    $2020   CALL     $020            ; Call subroutine at 020
$2FC    $2020   CALL     $020            ; Call subroutine at 020
$2FE    $2020   CALL     $020            ; Call subroutine at 020
$300    $2020   CALL     $020            ; Call subroutine at 020
$302    $2020   CALL     $020            ; Call subroutine at 020
$304    $2020   CALL     $020            ; Call subroutine at 020
$306    $20C3   CALL     $0C3            ; Call subroutine at 0C3
$308    $CFB2   RND      VF, #B2         ; VF = random & B2
$30A    $7DE2   ADD      VD, #E2         ; Add 226 to VD
$30C    $038D   SYS      $38D            ; System call to 38D
$30E    $08EA   SYS      $8EA            ; System call to 8EA
$310    $2E4B   CALL     $E4B            ; Call subroutine at E4B
$312    $15BB   JP       $5BB            ; Jump to 5BB
$314    $CCB5   RND      VC, #B5         ; VC = random & B5
$316    $EF79   UNKNOWN  $EF79           ; Unknown Exxx instruction
$318    $9820   SNE      V8, V2          ; Skip if V8 != V2
$31A    $1CAF   JP       $CAF            ; Jump to CAF
$31C    $5305   UNKNOWN  $5305           ; Unknown 5xxx instruction
$31E    $AF0B   LD       I, $F0B         ; Load F0B into I
$320    $83AF   UNKNOWN  83AF            ; Unknown 8xxx instruction
$322    $2661   CALL     $661            ; Call subroutine at 661
$324    $39EA   SE       V9, #EA         ; Skip if V9 == 234
$326    $6BD5   LD       VB, #D5         ; Load 213 into VB
$328    $B3E4   JP       V0, $3E4        ; Jump to V0 + 3E4
$32A    $35FC   SE       V5, #FC         ; Skip if V5 == 252
$32C    $E272   UNKNOWN  $E272           ; Unknown Exxx instruction
$32E    $C09F   RND      V0, #9F         ; V0 = random & 9F
$330    $7C9C   ADD      VC, #9C         ; Add 156 to VC
$332    $3E84   SE       VE, #84         ; Skip if VE == 132
$334    $C30C   RND      V3, #0C         ; V3 = random & 0C
$336    $52A2   UNKNOWN  $52A2           ; Unknown 5xxx instruction
$338    $25ED   CALL     $5ED            ; Call subroutine at 5ED
$33A    $8CC4   ADD      VC, VC          ; VC += VC, VF = carry
$33C    $ECDE   UNKNOWN  $ECDE           ; Unknown Exxx instruction
$33E    $CDEA   RND      VD, #EA         ; VD = random & EA
$340    $1023   JP       $023            ; Jump to 023
$342    $838E   SHL      V3              ; V3 <<= 1, VF = MSB
$344    $1D8A   JP       $D8A            ; Jump to D8A
$346    $F55F   UNKNOWN  F55F            ; Unknown Fxxx instruction
$348    $A095   LD       I, $095         ; Load 095 into I
$34A    $DD24   DRW      VD, V2, #4      ; Draw 4-byte sprite at VD, V2
$34C    $518F   UNKNOWN  $518F           ; Unknown 5xxx instruction
$34E    $C3B9   RND      V3, #B9         ; V3 = random & B9
$350    $CB14   RND      VB, #14         ; VB = random & 14
$352    $CCA2   RND      VC, #A2         ; VC = random & A2
$354    $D58E   DRW      V5, V8, #E      ; Draw 14-byte sprite at V5, V8
$356    $FF38   UNKNOWN  FF38            ; Unknown Fxxx instruction
$358    $49B3   SNE      V9, #B3         ; Skip if V9 != 179
$35A    $D83B   DRW      V8, V3, #B      ; Draw 11-byte sprite at V8, V3
$35C    $4BD6   SNE      VB, #D6         ; Skip if VB != 214
$35E    $C860   RND      V8, #60         ; V8 = random & 60
$360    $DAD9   DRW      VA, VD, #9      ; Draw 9-byte sprite at VA, VD
$362    $429A   SNE      V2, #9A         ; Skip if V2 != 154
$364    $9330   SNE      V3, V3          ; Skip if V3 != V3
$366    $FE20   UNKNOWN  FE20            ; Unknown Fxxx instruction
$368    $E339   UNKNOWN  $E339           ; Unknown Exxx instruction
$36A    $0636   SYS      $636            ; System call to 636
$36C    $CF4F   RND      VF, #4F         ; VF = random & 4F
$36E    $5CF9   UNKNOWN  $5CF9           ; Unknown 5xxx instruction
$370    $E1DD   UNKNOWN  $E1DD           ; Unknown Exxx instruction
$372    $4C8F   SNE      VC, #8F         ; Skip if VC != 143
$374    $E379   UNKNOWN  $E379           ; Unknown Exxx instruction
$376    $5858   UNKNOWN  $5858           ; Unknown 5xxx instruction
$378    $3373   SE       V3, #73         ; Skip if V3 == 115
$37A    $F425   UNKNOWN  F425            ; Unknown Fxxx instruction
$37C    $B19E   JP       V0, $19E        ; Jump to V0 + 19E
$37E    $6080   LD       V0, #80         ; Load 128 into V0
$380    $E19D   UNKNOWN  $E19D           ; Unknown Exxx instruction
$382    $5931   UNKNOWN  $5931           ; Unknown 5xxx instruction
$384    $3CE8   SE       VC, #E8         ; Skip if VC == 232
$386    $07FF   SYS      $7FF            ; System call to 7FF
$388    $4035   SNE      V0, #35         ; Skip if V0 != 53
$38A    $7631   ADD      V6, #31         ; Add 49 to V6
$38C    $8794   ADD      V7, V9          ; V7 += V9, VF = carry
$38E    $CFDD   RND      VF, #DD         ; VF = random & DD
$390    $5755   UNKNOWN  $5755           ; Unknown 5xxx instruction
$392    $905A   UNKNOWN  $905A           ; Unknown 9xxx instruction
$394    $E54E   UNKNOWN  $E54E           ; Unknown Exxx instruction
$396    $B2B7   JP       V0, $2B7        ; Jump to V0 + 2B7
$398    $E3F7   UNKNOWN  $E3F7           ; Unknown Exxx instruction
$39A    $E0D2   UNKNOWN  $E0D2           ; Unknown Exxx instruction
$39C    $133B   JP       $33B            ; Jump to 33B
$39E    $F27F   UNKNOWN  F27F            ; Unknown Fxxx instruction
$3A0    $3BD2   SE       VB, #D2         ; Skip if VB == 210
$3A2    $FF58   UNKNOWN  FF58            ; Unknown Fxxx instruction
$3A4    $711C   ADD      V1, #1C         ; Add 28 to V1
$3A6    $E320   UNKNOWN  $E320           ; Unknown Exxx instruction
$3A8    $8525   SUB      V5, V2          ; V5 -= V2, VF = !borrow
$3AA    $24D5   CALL     $4D5            ; Call subroutine at 4D5
$3AC    $DA20   DRW      VA, V2, #0      ; Draw 0-byte sprite at VA, V2
$3AE    $4D4B   SNE      VD, #4B         ; Skip if VD != 75
$3B0    $C8CD   RND      V8, #CD         ; V8 = random & CD
$3B2    $7D55   ADD      VD, #55         ; Add 85 to VD
$3B4    $B8F4   JP       V0, $8F4        ; Jump to V0 + 8F4
$3B6    $0D5B   SYS      $D5B            ; System call to D5B
$3B8    $9284   UNKNOWN  $9284           ; Unknown 9xxx instruction
$3BA    $D807   DRW      V8, V0, #7      ; Draw 7-byte sprite at V8, V0
$3BC    $E126   UNKNOWN  $E126           ; Unknown Exxx instruction
$3BE    $1BAB   JP       $BAB            ; Jump to BAB
$3C0    $351F   SE       V5, #1F         ; Skip if V5 == 31
$3C2    $3C35   SE       VC, #35         ; Skip if VC == 53
$3C4    $EE60   UNKNOWN  $EE60           ; Unknown Exxx instruction
$3C6    $5014   UNKNOWN  $5014           ; Unknown 5xxx instruction
$3C8    $881E   SHL      V8              ; V8 <<= 1, VF = MSB
$3CA    $C7E3   RND      V7, #E3         ; V7 = random & E3
$3CC    $147D   JP       $47D            ; Jump to 47D
$3CE    $D011   DRW      V0, V1, #1      ; Draw 1-byte sprite at V0, V1
$3D0    $BD3D   JP       V0, $D3D        ; Jump to V0 + D3D
$3D2    $6F6A   LD       VF, #6A         ; Load 106 into VF
$3D4    $BB97   JP       V0, $B97        ; Jump to V0 + B97
$3D6    $E3E6   UNKNOWN  $E3E6           ; Unknown Exxx instruction
$3D8    $FFD4   UNKNOWN  FFD4            ; Unknown Fxxx instruction
$3DA    $19CE   JP       $9CE            ; Jump to 9CE
$3DC    $FC3A   UNKNOWN  FC3A            ; Unknown Fxxx instruction
$3DE    $6B48   LD       VB, #48         ; Load 72 into VB
$3E0    $9CED   UNKNOWN  $9CED           ; Unknown 9xxx instruction
$3E2    $5299   UNKNOWN  $5299           ; Unknown 5xxx instruction
$3E4    $5E78   UNKNOWN  $5E78           ; Unknown 5xxx instruction
$3E6    $CF1E   RND      VF, #1E         ; VF = random & 1E
$3E8    $000A   SYS      $00A            ; System call to 00A
$3EA    $E1A8   UNKNOWN  $E1A8           ; Unknown Exxx instruction
$3EC    $E506   UNKNOWN  $E506           ; Unknown Exxx instruction
$3EE    $7A06   ADD      VA, #06         ; Add 6 to VA
$3F0    $131D   JP       $31D            ; Jump to 31D
$3F2    $1764   JP       $764            ; Jump to 764
$3F4    $297C   CALL     $97C            ; Call subroutine at 97C
$3F6    $089A   SYS      $89A            ; System call to 89A
$3F8    $A0FC   LD       I, $0FC         ; Load 0FC into I
$3FA    $FB71   UNKNOWN  FB71            ; Unknown Fxxx instruction
$3FC    $9539   UNKNOWN  $9539           ; Unknown 9xxx instruction
$3FE    $84CA   UNKNOWN  84CA            ; Unknown 8xxx instruction
$400    $3976   SE       V9, #76         ; Skip if V9 == 118
$402    $D58A   DRW      V5, V8, #A      ; Draw 10-byte sprite at V5, V8
$404    $7F91   ADD      VF, #91         ; Add 145 to VF
$406    $0AB6   SYS      $AB6            ; System call to AB6
$408    $F14D   UNKNOWN  F14D            ; Unknown Fxxx instruction
$40A    $A29B   LD       I, $29B         ; Load 29B into I
$40C    $250D   CALL     $50D            ; Call subroutine at 50D
$40E    $50A1   UNKNOWN  $50A1           ; Unknown 5xxx instruction
$410    $DE42   DRW      VE, V4, #2      ; Draw 2-byte sprite at VE, V4
$412    $517B   UNKNOWN  $517B           ; Unknown 5xxx instruction
$414    $081F   SYS      $81F            ; System call to 81F
$416    $93FE   UNKNOWN  $93FE           ; Unknown 9xxx instruction
$418    $B664   JP       V0, $664        ; Jump to V0 + 664
$41A    $B1B5   JP       V0, $1B5        ; Jump to V0 + 1B5
$41C    $1D12   JP       $D12            ; Jump to D12
$41E    $5849   UNKNOWN  $5849           ; Unknown 5xxx instruction
$420    $D354   DRW      V3, V5, #4      ; Draw 4-byte sprite at V3, V5
$422    $23A5   CALL     $3A5            ; Call subroutine at 3A5
$424    $2B91   CALL     $B91            ; Call subroutine at B91
$426    $028F   SYS      $28F            ; System call to 28F
$428    $0198   SYS      $198            ; System call to 198
$42A    $9D6C   UNKNOWN  $9D6C           ; Unknown 9xxx instruction
$42C    $D42E   DRW      V4, V2, #E      ; Draw 14-byte sprite at V4, V2
$42E    $9CF0   SNE      VC, VF          ; Skip if VC != VF
$430    $71D9   ADD      V1, #D9         ; Add 217 to V1
$432    $F7A5   UNKNOWN  F7A5            ; Unknown Fxxx instruction
$434    $B155   JP       V0, $155        ; Jump to V0 + 155
$436    $01A6   SYS      $1A6            ; System call to 1A6
$438    $2BBA   CALL     $BBA            ; Call subroutine at BBA
$43A    $2390   CALL     $390            ; Call subroutine at 390
$43C    $62E1   LD       V2, #E1         ; Load 225 into V2
$43E    $7647   ADD      V6, #47         ; Add 71 to V6
$440    $4B30   SNE      VB, #30         ; Skip if VB != 48
$442    $F527   UNKNOWN  F527            ; Unknown Fxxx instruction
$444    $90B5   UNKNOWN  $90B5           ; Unknown 9xxx instruction
$446    $FBB7   UNKNOWN  FBB7            ; Unknown Fxxx instruction
$448    $01C4   SYS      $1C4            ; System call to 1C4
$44A    $6E95   LD       VE, #95         ; Load 149 into VE
$44C    $91CA   UNKNOWN  $91CA           ; Unknown 9xxx instruction
$44E    $41C3   SNE      V1, #C3         ; Skip if V1 != 195
$450    $36CC   SE       V6, #CC         ; Skip if V6 == 204
$452    $0340   SYS      $340            ; System call to 340
$454    $0491   SYS      $491            ; System call to 491
$456    $3312   SE       V3, #12         ; Skip if V3 == 18
$458    $5849   UNKNOWN  $5849           ; Unknown 5xxx instruction
$45A    $9B57   UNKNOWN  $9B57           ; Unknown 9xxx instruction
$45C    $D2E9   DRW      V2, VE, #9      ; Draw 9-byte sprite at V2, VE
$45E    $59BB   UNKNOWN  $59BB           ; Unknown 5xxx instruction
$460    $782B   ADD      V8, #2B         ; Add 43 to V8
$462    $BD47   JP       V0, $D47        ; Jump to V0 + D47
$464    $0B0E   SYS      $B0E            ; System call to B0E
$466    $F277   UNKNOWN  F277            ; Unknown Fxxx instruction
$468    $BA92   JP       V0, $A92        ; Jump to V0 + A92
$46A    $0EBC   SYS      $EBC            ; System call to EBC
$46C    $97EF   UNKNOWN  $97EF           ; Unknown 9xxx instruction
$46E    $A88E   LD       I, $88E         ; Load 88E into I
$470    $57B3   UNKNOWN  $57B3           ; Unknown 5xxx instruction
$472    $BCA2   JP       V0, $CA2        ; Jump to V0 + CA2
$474    $2575   CALL     $575            ; Call subroutine at 575
$476    $5BA8   UNKNOWN  $5BA8           ; Unknown 5xxx instruction
$478    $E048   UNKNOWN  $E048           ; Unknown Exxx instruction
$47A    $EA9F   UNKNOWN  $EA9F           ; Unknown Exxx instruction
$47C    $9545   UNKNOWN  $9545           ; Unknown 9xxx instruction
$47E    $ED93   UNKNOWN  $ED93           ; Unknown Exxx instruction
$480    $1D6B   JP       $D6B            ; Jump to D6B
$482    $959F   UNKNOWN  $959F           ; Unknown 9xxx instruction
$484    $B837   JP       V0, $837        ; Jump to V0 + 837
$486    $5312   UNKNOWN  $5312           ; Unknown 5xxx instruction
$488    $767E   ADD      V6, #7E         ; Add 126 to V6
$48A    $EB09   UNKNOWN  $EB09           ; Unknown Exxx instruction
$48C    $93A7   UNKNOWN  $93A7           ; Unknown 9xxx instruction
$48E    $5AC2   UNKNOWN  $5AC2           ; Unknown 5xxx instruction
$490    $07B5   SYS      $7B5            ; System call to 7B5
$492    $8727   SUBN     V7, V2          ; V7 = V2 - V7, VF = !borrow
$494    $865B   UNKNOWN  865B            ; Unknown 8xxx instruction
$496    $1B05   JP       $B05            ; Jump to B05
$498    $6347   LD       V3, #47         ; Load 71 into V3
$49A    $4CC6   SNE      VC, #C6         ; Skip if VC != 198
$49C    $6838   LD       V8, #38         ; Load 56 into V8
$49E    $E1A2   UNKNOWN  $E1A2           ; Unknown Exxx instruction
$4A0    $2D08   CALL     $D08            ; Call subroutine at D08
$4A2    $BA90   JP       V0, $A90        ; Jump to V0 + A90
$4A4    $CA23   RND      VA, #23         ; VA = random & 23
$4A6    $A004   LD       I, $004         ; Load 004 into I
$4A8    $2AC4   CALL     $AC4            ; Call subroutine at AC4
$4AA    $1387   JP       $387            ; Jump to 387
$4AC    $D44C   DRW      V4, V4, #C      ; Draw 12-byte sprite at V4, V4
$4AE    $3FCA   SE       VF, #CA         ; Skip if VF == 202
$4B0    $E83A   UNKNOWN  $E83A           ; Unknown Exxx instruction
$4B2    $9CA6   UNKNOWN  $9CA6           ; Unknown 9xxx instruction
$4B4    $8407   SUBN     V4, V0          ; V4 = V0 - V4, VF = !borrow
$4B6    $8907   SUBN     V9, V0          ; V9 = V0 - V9, VF = !borrow
$4B8    $4F38   SNE      VF, #38         ; Skip if VF != 56
$4BA    $3CD2   SE       VC, #D2         ; Skip if VC == 210
$4BC    $BC48   JP       V0, $C48        ; Jump to V0 + C48
$4BE    $3BE2   SE       VB, #E2         ; Skip if VB == 226
$4C0    $B9F8   JP       V0, $9F8        ; Jump to V0 + 9F8
$4C2    $0CCF   SYS      $CCF            ; System call to CCF
$4C4    $36E7   SE       V6, #E7         ; Skip if V6 == 231
$4C6    $7DD0   ADD      VD, #D0         ; Add 208 to VD
$4C8    $97E4   UNKNOWN  $97E4           ; Unknown 9xxx instruction
$4CA    $E938   UNKNOWN  $E938           ; Unknown Exxx instruction
$4CC    $6D3D   LD       VD, #3D         ; Load 61 into VD
$4CE    $0770   SYS      $770            ; System call to 770
$4D0    $37EE   SE       V7, #EE         ; Skip if V7 == 238
$4D2    $AF88   LD       I, $F88         ; Load F88 into I
$4D4    $8868   UNKNOWN  8868            ; Unknown 8xxx instruction
$4D6    $D669   DRW      V6, V6, #9      ; Draw 9-byte sprite at V6, V6
$4D8    $5A1E   UNKNOWN  $5A1E           ; Unknown 5xxx instruction
$4DA    $36AE   SE       V6, #AE         ; Skip if V6 == 174
$4DC    $AEDD   LD       I, $EDD         ; Load EDD into I
$4DE    $93F8   UNKNOWN  $93F8           ; Unknown 9xxx instruction
$4E0    $FB84   UNKNOWN  FB84            ; Unknown Fxxx instruction
$4E2    $34C5   SE       V4, #C5         ; Skip if V4 == 197
$4E4    $793E   ADD      V9, #3E         ; Add 62 to V9
$4E6    $D051   DRW      V0, V5, #1      ; Draw 1-byte sprite at V0, V5
$4E8    $5246   UNKNOWN  $5246           ; Unknown 5xxx instruction
$4EA    $638E   LD       V3, #8E         ; Load 142 into V3
$4EC    $7817   ADD      V8, #17         ; Add 23 to V8
$4EE    $4E96   SNE      VE, #96         ; Skip if VE != 150
$4F0    $FDD7   UNKNOWN  FDD7            ; Unknown Fxxx instruction
$4F2    $2EEF   CALL     $EEF            ; Call subroutine at EEF
$4F4    $8B74   ADD      VB, V7          ; VB += V7, VF = carry
$4F6    $82B6   SHR      V2              ; V2 >>= 1, VF = LSB
$4F8    $6036   LD       V0, #36         ; Load 54 into V0
$4FA    $283A   CALL     $83A            ; Call subroutine at 83A
$4FC    $9778   UNKNOWN  $9778           ; Unknown 9xxx instruction
$4FE    $DE5F   DRW      VE, V5, #F      ; Draw 15-byte sprite at VE, V5
$500    $5679   UNKNOWN  $5679           ; Unknown 5xxx instruction
$502    $8EB1   OR       VE, VB          ; VE |= VB
$504    $EDF5   UNKNOWN  $EDF5           ; Unknown Exxx instruction
$506    $D5E6   DRW      V5, VE, #6      ; Draw 6-byte sprite at V5, VE
$508    $BA34   JP       V0, $A34        ; Jump to V0 + A34
$50A    $2094   CALL     $094            ; Call subroutine at 094
$50C    $8514   ADD      V5, V1          ; V5 += V1, VF = carry
$50E    $8067   SUBN     V0, V6          ; V0 = V6 - V0, VF = !borrow
$510    $3EA8   SE       VE, #A8         ; Skip if VE == 168
$512    $0AFC   SYS      $AFC            ; System call to AFC
$514    $1C16   JP       $C16            ; Jump to C16
$516    $4F0E   SNE      VF, #0E         ; Skip if VF != 14
$518    $BEC9   JP       V0, $EC9        ; Jump to V0 + EC9
$51A    $7844   ADD      V8, #44         ; Add 68 to V8
$51C    $6755   LD       V7, #55         ; Load 85 into V7
$51E    $6E18   LD       VE, #18         ; Load 24 into VE
$520    $038A   SYS      $38A            ; System call to 38A
$522    $BDB0   JP       V0, $DB0        ; Jump to V0 + DB0
$524    $E066   UNKNOWN  $E066           ; Unknown Exxx instruction
$526    $59D8   UNKNOWN  $59D8           ; Unknown 5xxx instruction
$528    $A2E3   LD       I, $2E3         ; Load 2E3 into I
$52A    $CE90   RND      VE, #90         ; VE = random & 90
$52C    $3869   SE       V8, #69         ; Skip if V8 == 105
$52E    $272E   CALL     $72E            ; Call subroutine at 72E
$530    $5B98   UNKNOWN  $5B98           ; Unknown 5xxx instruction
$532    $D4C6   DRW      V4, VC, #6      ; Draw 6-byte sprite at V4, VC
$534    $C628   RND      V6, #28         ; V6 = random & 28
$536    $77F2   ADD      V7, #F2         ; Add 242 to V7
$538    $D31C   DRW      V3, V1, #C      ; Draw 12-byte sprite at V3, V1
$53A    $9659   UNKNOWN  $9659           ; Unknown 9xxx instruction
$53C    $01BD   SYS      $1BD            ; System call to 1BD
$53E    $E835   UNKNOWN  $E835           ; Unknown Exxx instruction
$540    $B90B   JP       V0, $90B        ; Jump to V0 + 90B
$542    $46EA   SNE      V6, #EA         ; Skip if V6 != 234
$544    $B067   JP       V0, $067        ; Jump to V0 + 067
$546    $0413   SYS      $413            ; System call to 413
$548    $BAB0   JP       V0, $AB0        ; Jump to V0 + AB0
$54A    $8B9B   UNKNOWN  8B9B            ; Unknown 8xxx instruction
$54C    $A750   LD       I, $750         ; Load 750 into I
$54E    $E3D5   UNKNOWN  $E3D5           ; Unknown Exxx instruction
$550    $6B13   LD       VB, #13         ; Load 19 into VB
$552    $87C7   SUBN     V7, VC          ; V7 = VC - V7, VF = !borrow
$554    $3935   SE       V9, #35         ; Skip if V9 == 53
$556    $F4E3   UNKNOWN  F4E3            ; Unknown Fxxx instruction
$558    $D7DD   DRW      V7, VD, #D      ; Draw 13-byte sprite at V7, VD
$55A    $A138   LD       I, $138         ; Load 138 into I
$55C    $9614   UNKNOWN  $9614           ; Unknown 9xxx instruction
$55E    $D530   DRW      V5, V3, #0      ; Draw 0-byte sprite at V5, V3
$560    $E2EA   UNKNOWN  $E2EA           ; Unknown Exxx instruction
$562    $06F1   SYS      $6F1            ; System call to 6F1
$564    $DB7C   DRW      VB, V7, #C      ; Draw 12-byte sprite at VB, V7
$566    $CFCB   RND      VF, #CB         ; VF = random & CB
$568    $8AC0   LD       VA, VC          ; VA = VC
$56A    $5A77   UNKNOWN  $5A77           ; Unknown 5xxx instruction
$56C    $58BE   UNKNOWN  $58BE           ; Unknown 5xxx instruction
$56E    $2859   CALL     $859            ; Call subroutine at 859
$570    $4485   SNE      V4, #85         ; Skip if V4 != 133
$572    $B75A   JP       V0, $75A        ; Jump to V0 + 75A
$574    $9429   UNKNOWN  $9429           ; Unknown 9xxx instruction
$576    $6DD9   LD       VD, #D9         ; Load 217 into VD
$578    $56CE   UNKNOWN  $56CE           ; Unknown 5xxx instruction
$57A    $6497   LD       V4, #97         ; Load 151 into V4
$57C    $87CA   UNKNOWN  87CA            ; Unknown 8xxx instruction
$57E    $78B9   ADD      V8, #B9         ; Add 185 to V8
$580    $4C1A   SNE      VC, #1A         ; Skip if VC != 26
$582    $5F09   UNKNOWN  $5F09           ; Unknown 5xxx instruction
$584    $19E4   JP       $9E4            ; Jump to 9E4
$586    $F6EE   UNKNOWN  F6EE            ; Unknown Fxxx instruction
$588    $7389   ADD      V3, #89         ; Add 137 to V3
$58A    $0497   SYS      $497            ; System call to 497
$58C    $E141   UNKNOWN  $E141           ; Unknown Exxx instruction
$58E    $386C   SE       V8, #6C         ; Skip if V8 == 108
$590    $8225   SUB      V2, V2          ; V2 -= V2, VF = !borrow
$592    $48DE   SNE      V8, #DE         ; Skip if V8 != 222
$594    $E952   UNKNOWN  $E952           ; Unknown Exxx instruction
$596    $FF26   UNKNOWN  FF26            ; Unknown Fxxx instruction
$598    $3B54   SE       VB, #54         ; Skip if VB == 84
$59A    $10A1   JP       $0A1            ; Jump to 0A1
$59C    $EBF5   UNKNOWN  $EBF5           ; Unknown Exxx instruction
$59E    $4D1C   SNE      VD, #1C         ; Skip if VD != 28
$5A0    $F046   UNKNOWN  F046            ; Unknown Fxxx instruction
$5A2    $E93F   UNKNOWN  $E93F           ; Unknown Exxx instruction
$5A4    $651A   LD       V5, #1A         ; Load 26 into V5
$5A6    $A172   LD       I, $172         ; Load 172 into I
$5A8    $274E   CALL     $74E            ; Call subroutine at 74E
$5AA    $CF57   RND      VF, #57         ; VF = random & 57
$5AC    $1D4D   JP       $D4D            ; Jump to D4D
$5AE    $5D65   UNKNOWN  $5D65           ; Unknown 5xxx instruction
$5B0    $CC48   RND      VC, #48         ; VC = random & 48
$5B2    $8EBD   UNKNOWN  8EBD            ; Unknown 8xxx instruction
$5B4    $4062   SNE      V0, #62         ; Skip if V0 != 98
$5B6    $5E89   UNKNOWN  $5E89           ; Unknown 5xxx instruction
$5B8    $2C5E   CALL     $C5E            ; Call subroutine at C5E
$5BA    $0994   SYS      $994            ; System call to 994
$5BC    $E0F3   UNKNOWN  $E0F3           ; Unknown Exxx instruction
$5BE    $2999   CALL     $999            ; Call subroutine at 999
$5C0    $C4EE   RND      V4, #EE         ; V4 = random & EE
$5C2    $6CF6   LD       VC, #F6         ; Load 246 into VC
$5C4    $5DD0   SE       VD, VD          ; Skip if VD == VD
$5C6    $F78D   UNKNOWN  F78D            ; Unknown Fxxx instruction
$5C8    $D8C3   DRW      V8, VC, #3      ; Draw 3-byte sprite at V8, VC
$5CA    $9944   UNKNOWN  $9944           ; Unknown 9xxx instruction
$5CC    $565E   UNKNOWN  $565E           ; Unknown 5xxx instruction
$5CE    $118F   JP       $18F            ; Jump to 18F
$5D0    $2F45   CALL     $F45            ; Call subroutine at F45
$5D2    $B4F9   JP       V0, $4F9        ; Jump to V0 + 4F9
$5D4    $7D4D   ADD      VD, #4D         ; Add 77 to VD
$5D6    $670A   LD       V7, #0A         ; Load 10 into V7
$5D8    $3E83   SE       VE, #83         ; Skip if VE == 131
$5DA    $42F2   SNE      V2, #F2         ; Skip if V2 != 242
$5DC    $AA37   LD       I, $A37         ; Load A37 into I
$5DE    $06ED   SYS      $6ED            ; System call to 6ED
$5E0    $8288   UNKNOWN  8288            ; Unknown 8xxx instruction
$5E2    $D883   DRW      V8, V8, #3      ; Draw 3-byte sprite at V8, V8
$5E4    $E0DF   UNKNOWN  $E0DF           ; Unknown Exxx instruction
$5E6    $D3DB   DRW      V3, VD, #B      ; Draw 11-byte sprite at V3, VD
$5E8    $E671   UNKNOWN  $E671           ; Unknown Exxx instruction
$5EA    $50C8   UNKNOWN  $50C8           ; Unknown 5xxx instruction
$5EC    $14A4   JP       $4A4            ; Jump to 4A4
$5EE    $0582   SYS      $582            ; System call to 582
$5F0    $CCD8   RND      VC, #D8         ; VC = random & D8
$5F2    $FFB6   UNKNOWN  FFB6            ; Unknown Fxxx instruction
$5F4    $8E58   UNKNOWN  8E58            ; Unknown 8xxx instruction
$5F6    $9B02   UNKNOWN  $9B02           ; Unknown 9xxx instruction
$5F8    $E58B   UNKNOWN  $E58B           ; Unknown Exxx instruction
$5FA    $39B0   SE       V9, #B0         ; Skip if V9 == 176
$5FC    $F9A8   UNKNOWN  F9A8            ; Unknown Fxxx instruction
$5FE    $AAF4   LD       I, $AF4         ; Load AF4 into I
$600    $8651   OR       V6, V5          ; V6 |= V5
$602    $5943   UNKNOWN  $5943           ; Unknown 5xxx instruction
$604    $E350   UNKNOWN  $E350           ; Unknown Exxx instruction
$606    $208A   CALL     $08A            ; Call subroutine at 08A
$608    $B4D9   JP       V0, $4D9        ; Jump to V0 + 4D9
$60A    $8FBC   UNKNOWN  8FBC            ; Unknown 8xxx instruction
$60C    $FF5D   UNKNOWN  FF5D            ; Unknown Fxxx instruction
$60E    $6B87   LD       VB, #87         ; Load 135 into VB
$610    $C1F7   RND      V1, #F7         ; V1 = random & F7
$612    $D2A5   DRW      V2, VA, #5      ; Draw 5-byte sprite at V2, VA
$614    $C44E   RND      V4, #4E         ; V4 = random & 4E
$616    $F021   UNKNOWN  F021            ; Unknown Fxxx instruction
$618    $9780   SNE      V7, V8          ; Skip if V7 != V8
$61A    $ADD7   LD       I, $DD7         ; Load DD7 into I
$61C    $6A88   LD       VA, #88         ; Load 136 into VA
$61E    $315F   SE       V1, #5F         ; Skip if V1 == 95
$620    $6BF7   LD       VB, #F7         ; Load 247 into VB
$622    $4C3E   SNE      VC, #3E         ; Skip if VC != 62
$624    $FEED   UNKNOWN  FEED            ; Unknown Fxxx instruction
$626    $3495   SE       V4, #95         ; Skip if V4 == 149
$628    $A052   LD       I, $052         ; Load 052 into I
$62A    $F6AE   UNKNOWN  F6AE            ; Unknown Fxxx instruction
$62C    $1B33   JP       $B33            ; Jump to B33
$62E    $13E5   JP       $3E5            ; Jump to 3E5
$630    $FEC0   UNKNOWN  FEC0            ; Unknown Fxxx instruction
$632    $CD26   RND      VD, #26         ; VD = random & 26
$634    $BB9D   JP       V0, $B9D        ; Jump to V0 + B9D
$636    $6F29   LD       VF, #29         ; Load 41 into VF
$638    $C921   RND      V9, #21         ; V9 = random & 21
$63A    $9D0D   UNKNOWN  $9D0D           ; Unknown 9xxx instruction
$63C    $5DC1   UNKNOWN  $5DC1           ; Unknown 5xxx instruction
$63E    $8311   OR       V3, V1          ; V3 |= V1
$640    $E5C4   UNKNOWN  $E5C4           ; Unknown Exxx instruction
$642    $94EC   UNKNOWN  $94EC           ; Unknown 9xxx instruction
$644    $41B7   SNE      V1, #B7         ; Skip if V1 != 183
$646    $0407   SYS      $407            ; System call to 407
$648    $CA8F   RND      VA, #8F         ; VA = random & 8F
$64A    $E92C   UNKNOWN  $E92C           ; Unknown Exxx instruction
$64C    $F286   UNKNOWN  F286            ; Unknown Fxxx instruction
$64E    $0CEF   SYS      $CEF            ; System call to CEF
$650    $EAFE   UNKNOWN  $EAFE           ; Unknown Exxx instruction
$652    $DA96   DRW      VA, V9, #6      ; Draw 6-byte sprite at VA, V9
$654    $B5DB   JP       V0, $5DB        ; Jump to V0 + 5DB
$656    $A757   LD       I, $757         ; Load 757 into I
$658    $10C0   JP       $0C0            ; Jump to 0C0
$65A    $9C6B   UNKNOWN  $9C6B           ; Unknown 9xxx instruction
$65C    $E3AC   UNKNOWN  $E3AC           ; Unknown Exxx instruction
$65E    $6889   LD       V8, #89         ; Load 137 into V8
$660    $D08B   DRW      V0, V8, #B      ; Draw 11-byte sprite at V0, V8
$662    $24DB   CALL     $4DB            ; Call subroutine at 4DB
$664    $2D10   CALL     $D10            ; Call subroutine at D10
$666    $54B2   UNKNOWN  $54B2           ; Unknown 5xxx instruction
$668    $6562   LD       V5, #62         ; Load 98 into V5
$66A    $9876   UNKNOWN  $9876           ; Unknown 9xxx instruction
$66C    $849F   UNKNOWN  849F            ; Unknown 8xxx instruction
$66E    $C990   RND      V9, #90         ; V9 = random & 90
$670    $5C80   SE       VC, V8          ; Skip if VC == V8
$672    $A3AF   LD       I, $3AF         ; Load 3AF into I
$674    $1750   JP       $750            ; Jump to 750
$676    $1C9F   JP       $C9F            ; Jump to C9F
$678    $6498   LD       V4, #98         ; Load 152 into V4
$67A    $7A47   ADD      VA, #47         ; Add 71 to VA
$67C    $1CA6   JP       $CA6            ; Jump to CA6
$67E    $D1AC   DRW      V1, VA, #C      ; Draw 12-byte sprite at V1, VA
$680    $4BB4   SNE      VB, #B4         ; Skip if VB != 180
$682    $F02E   UNKNOWN  F02E            ; Unknown Fxxx instruction
$684    $7D17   ADD      VD, #17         ; Add 23 to VD
$686    $4657   SNE      V6, #57         ; Skip if V6 != 87
$688    $5717   UNKNOWN  $5717           ; Unknown 5xxx instruction
$68A    $0EA7   SYS      $EA7            ; System call to EA7
$68C    $BC51   JP       V0, $C51        ; Jump to V0 + C51
$68E    $BEDF   JP       V0, $EDF        ; Jump to V0 + EDF
$690    $839A   UNKNOWN  839A            ; Unknown 8xxx instruction
$692    $35A5   SE       V5, #A5         ; Skip if V5 == 165
$694    $9990   SNE      V9, V9          ; Skip if V9 != V9
$696    $196C   JP       $96C            ; Jump to 96C
$698    $C335   RND      V3, #35         ; V3 = random & 35
$69A    $F9D0   UNKNOWN  F9D0            ; Unknown Fxxx instruction
$69C    $EAC1   UNKNOWN  $EAC1           ; Unknown Exxx instruction
$69E    $EBE7   UNKNOWN  $EBE7           ; Unknown Exxx instruction
$6A0    $99C1   UNKNOWN  $99C1           ; Unknown 9xxx instruction
$6A2    $457A   SNE      V5, #7A         ; Skip if V5 != 122
$6A4    $3169   SE       V1, #69         ; Skip if V1 == 105
$6A6    $E921   UNKNOWN  $E921           ; Unknown Exxx instruction
$6A8    $B269   JP       V0, $269        ; Jump to V0 + 269
$6AA    $6E79   LD       VE, #79         ; Load 121 into VE
$6AC    $510F   UNKNOWN  $510F           ; Unknown 5xxx instruction
$6AE    $1486   JP       $486            ; Jump to 486
$6B0    $560A   UNKNOWN  $560A           ; Unknown 5xxx instruction
$6B2    $F9A8   UNKNOWN  F9A8            ; Unknown Fxxx instruction
$6B4    $06D5   SYS      $6D5            ; System call to 6D5
$6B6    $D18F   DRW      V1, V8, #F      ; Draw 15-byte sprite at V1, V8
$6B8    $AF03   LD       I, $F03         ; Load F03 into I
$6BA    $F4F3   UNKNOWN  F4F3            ; Unknown Fxxx instruction
$6BC    $724A   ADD      V2, #4A         ; Add 74 to V2
$6BE    $A84F   LD       I, $84F         ; Load 84F into I
$6C0    $5B89   UNKNOWN  $5B89           ; Unknown 5xxx instruction
$6C2    $3EFF   SE       VE, #FF         ; Skip if VE == 255
$6C4    $0E8B   SYS      $E8B            ; System call to E8B
$6C6    $4F49   SNE      VF, #49         ; Skip if VF != 73
$6C8    $0387   SYS      $387            ; System call to 387
$6CA    $BBD7   JP       V0, $BD7        ; Jump to V0 + BD7
$6CC    $8AF2   AND      VA, VF          ; VA &= VF
$6CE    $6662   LD       V6, #62         ; Load 98 into V6
$6D0    $9E1F   UNKNOWN  $9E1F           ; Unknown 9xxx instruction
$6D2    $13EE   JP       $3EE            ; Jump to 3EE
$6D4    $8EAF   UNKNOWN  8EAF            ; Unknown 8xxx instruction
$6D6    $1A72   JP       $A72            ; Jump to A72
$6D8    $CB5E   RND      VB, #5E         ; VB = random & 5E
$6DA    $C837   RND      V8, #37         ; V8 = random & 37
$6DC    $6FE9   LD       VF, #E9         ; Load 233 into VF
$6DE    $656A   LD       V5, #6A         ; Load 106 into V5
$6E0    $51CB   UNKNOWN  $51CB           ; Unknown 5xxx instruction
$6E2    $F775   UNKNOWN  F775            ; Unknown Fxxx instruction
$6E4    $CBBA   RND      VB, #BA         ; VB = random & BA
$6E6    $DB1B   DRW      VB, V1, #B      ; Draw 11-byte sprite at VB, V1
$6E8    $7A43   ADD      VA, #43         ; Add 67 to VA
$6EA    $C7A4   RND      V7, #A4         ; V7 = random & A4
$6EC    $4FE1   SNE      VF, #E1         ; Skip if VF != 225
$6EE    $3E89   SE       VE, #89         ; Skip if VE == 137
$6F0    $2863   CALL     $863            ; Call subroutine at 863
$6F2    $E048   UNKNOWN  $E048           ; Unknown Exxx instruction
$6F4    $98FA   UNKNOWN  $98FA           ; Unknown 9xxx instruction
$6F6    $5D03   UNKNOWN  $5D03           ; Unknown 5xxx instruction
$6F8    $7880   ADD      V8, #80         ; Add 128 to V8
$6FA    $72E1   ADD      V2, #E1         ; Add 225 to V2
$6FC    $3418   SE       V4, #18         ; Skip if V4 == 24
$6FE    $A4F5   LD       I, $4F5         ; Load 4F5 into I
$700    $027A   SYS      $27A            ; System call to 27A
$702    $1992   JP       $992            ; Jump to 992
$704    $A49D   LD       I, $49D         ; Load 49D into I
$706    $0BEF   SYS      $BEF            ; System call to BEF
$708    $5006   UNKNOWN  $5006           ; Unknown 5xxx instruction
$70A    $4E2D   SNE      VE, #2D         ; Skip if VE != 45
$70C    $484B   SNE      V8, #4B         ; Skip if V8 != 75
$70E    $0F2F   SYS      $F2F            ; System call to F2F
$710    $6F47   LD       VF, #47         ; Load 71 into VF
$712    $5E3D   UNKNOWN  $5E3D           ; Unknown 5xxx instruction
$714    $38B9   SE       V8, #B9         ; Skip if V8 == 185
$716    $A95E   LD       I, $95E         ; Load 95E into I
$718    $7F85   ADD      VF, #85         ; Add 133 to VF
$71A    $397A   SE       V9, #7A         ; Skip if V9 == 122
$71C    $DEC3   DRW      VE, VC, #3      ; Draw 3-byte sprite at VE, VC
$71E    $F695   UNKNOWN  F695            ; Unknown Fxxx instruction
$720    $E8D7   UNKNOWN  $E8D7           ; Unknown Exxx instruction
$722    $2F8E   CALL     $F8E            ; Call subroutine at F8E
$724    $EA38   UNKNOWN  $EA38           ; Unknown Exxx instruction
$726    $65E9   LD       V5, #E9         ; Load 233 into V5
$728    $12A5   JP       $2A5            ; Jump to 2A5
$72A    $1B94   JP       $B94            ; Jump to B94
$72C    $BE95   JP       V0, $E95        ; Jump to V0 + E95
$72E    $4EA2   SNE      VE, #A2         ; Skip if VE != 162
$730    $09D8   SYS      $9D8            ; System call to 9D8
$732    $C8D0   RND      V8, #D0         ; V8 = random & D0
$734    $1E0D   JP       $E0D            ; Jump to E0D
$736    $AD2F   LD       I, $D2F         ; Load D2F into I
$738    $5FB6   UNKNOWN  $5FB6           ; Unknown 5xxx instruction
$73A    $F39E   UNKNOWN  F39E            ; Unknown Fxxx instruction
$73C    $E6D5   UNKNOWN  $E6D5           ; Unknown Exxx instruction
$73E    $4448   SNE      V4, #48         ; Skip if V4 != 72
$740    $7D7F   ADD      VD, #7F         ; Add 127 to VD
$742    $4748   SNE      V7, #48         ; Skip if V7 != 72
$744    $337B   SE       V3, #7B         ; Skip if V3 == 123
$746    $6AFA   LD       VA, #FA         ; Load 250 into VA
$748    $6007   LD       V0, #07         ; Load 7 into V0
$74A    $9F1D   UNKNOWN  $9F1D           ; Unknown 9xxx instruction
$74C    $0D94   SYS      $D94            ; System call to D94
$74E    $043C   SYS      $43C            ; System call to 43C
$750    $B0ED   JP       V0, $0ED        ; Jump to V0 + 0ED
$752    $3903   SE       V9, #03         ; Skip if V9 == 3
$754    $9C5C   UNKNOWN  $9C5C           ; Unknown 9xxx instruction
$756    $80FB   UNKNOWN  80FB            ; Unknown 8xxx instruction
$758    $D566   DRW      V5, V6, #6      ; Draw 6-byte sprite at V5, V6
$75A    $4E9D   SNE      VE, #9D         ; Skip if VE != 157
$75C    $1364   JP       $364            ; Jump to 364
$75E    $C247   RND      V2, #47         ; V2 = random & 47
$760    $4866   SNE      V8, #66         ; Skip if V8 != 102
$762    $404E   SNE      V0, #4E         ; Skip if V0 != 78
$764    $24E5   CALL     $4E5            ; Call subroutine at 4E5
$766    $9A8F   UNKNOWN  $9A8F           ; Unknown 9xxx instruction
$768    $ADF0   LD       I, $DF0         ; Load DF0 into I
$76A    $D4D7   DRW      V4, VD, #7      ; Draw 7-byte sprite at V4, VD
$76C    $80F2   AND      V0, VF          ; V0 &= VF
$76E    $836F   UNKNOWN  836F            ; Unknown 8xxx instruction
$770    $4620   SNE      V6, #20         ; Skip if V6 != 32
$772    $6441   LD       V4, #41         ; Load 65 into V4
$774    $C628   RND      V6, #28         ; V6 = random & 28
$776    $2703   CALL     $703            ; Call subroutine at 703
$778    $4C8D   SNE      VC, #8D         ; Skip if VC != 141
$77A    $90E4   UNKNOWN  $90E4           ; Unknown 9xxx instruction
$77C    $132C   JP       $32C            ; Jump to 32C
$77E    $38AA   SE       V8, #AA         ; Skip if V8 == 170
$780    $AD52   LD       I, $D52         ; Load D52 into I
$782    $513F   UNKNOWN  $513F           ; Unknown 5xxx instruction
$784    $F2C6   UNKNOWN  F2C6            ; Unknown Fxxx instruction
$786    $07DC   SYS      $7DC            ; System call to 7DC
$788    $6927   LD       V9, #27         ; Load 39 into V9
$78A    $CB93   RND      VB, #93         ; VB = random & 93
$78C    $368E   SE       V6, #8E         ; Skip if V6 == 142
$78E    $0D59   SYS      $D59            ; System call to D59
$790    $8722   AND      V7, V2          ; V7 &= V2
$792    $9AE1   UNKNOWN  $9AE1           ; Unknown 9xxx instruction
$794    $40C8   SNE      V0, #C8         ; Skip if V0 != 200
$796    $8454   ADD      V4, V5          ; V4 += V5, VF = carry
$798    $6CE7   LD       VC, #E7         ; Load 231 into VC
$79A    $2162   CALL     $162            ; Call subroutine at 162
$79C    $773D   ADD      V7, #3D         ; Add 61 to V7
$79E    $448D   SNE      V4, #8D         ; Skip if V4 != 141
$7A0    $AF9E   LD       I, $F9E         ; Load F9E into I
$7A2    $9D45   UNKNOWN  $9D45           ; Unknown 9xxx instruction
$7A4    $4081   SNE      V0, #81         ; Skip if V0 != 129
$7A6    $5C17   UNKNOWN  $5C17           ; Unknown 5xxx instruction
$7A8    $2B44   CALL     $B44            ; Call subroutine at B44
$7AA    $7970   ADD      V9, #70         ; Add 112 to V9
$7AC    $7BB4   ADD      VB, #B4         ; Add 180 to VB
$7AE    $9613   UNKNOWN  $9613           ; Unknown 9xxx instruction
$7B0    $7582   ADD      V5, #82         ; Add 130 to V5
$7B2    $EB90   UNKNOWN  $EB90           ; Unknown Exxx instruction
$7B4    $F32D   UNKNOWN  F32D            ; Unknown Fxxx instruction
$7B6    $7632   ADD      V6, #32         ; Add 50 to V6
$7B8    $8B91   OR       VB, V9          ; VB |= V9
$7BA    $A4C3   LD       I, $4C3         ; Load 4C3 into I
$7BC    $8407   SUBN     V4, V0          ; V4 = V0 - V4, VF = !borrow
$7BE    $DB12   DRW      VB, V1, #2      ; Draw 2-byte sprite at VB, V1
$7C0    $D6CF   DRW      V6, VC, #F      ; Draw 15-byte sprite at V6, VC
$7C2    $E0F3   UNKNOWN  $E0F3           ; Unknown Exxx instruction
$7C4    $0CBB   SYS      $CBB            ; System call to CBB
$7C6    $5924   UNKNOWN  $5924           ; Unknown 5xxx instruction
$7C8    $DE28   DRW      VE, V2, #8      ; Draw 8-byte sprite at VE, V2
$7CA    $AF2A   LD       I, $F2A         ; Load F2A into I
$7CC    $0A91   SYS      $A91            ; System call to A91
$7CE    $4B94   SNE      VB, #94         ; Skip if VB != 148
$7D0    $D865   DRW      V8, V6, #5      ; Draw 5-byte sprite at V8, V6
$7D2    $DE06   DRW      VE, V0, #6      ; Draw 6-byte sprite at VE, V0
$7D4    $F069   UNKNOWN  F069            ; Unknown Fxxx instruction
$7D6    $A581   LD       I, $581         ; Load 581 into I
$7D8    $C9E6   RND      V9, #E6         ; V9 = random & E6
$7DA    $F707   LD       V7, DT          ; V7 = delay timer
$7DC    $74E7   ADD      V4, #E7         ; Add 231 to V4
$7DE    $71B7   ADD      V1, #B7         ; Add 183 to V1
$7E0    $DF0F   DRW      VF, V0, #F      ; Draw 15-byte sprite at VF, V0
$7E2    $A477   LD       I, $477         ; Load 477 into I
$7E4    $0104   SYS      $104            ; System call to 104
$7E6    $C41E   RND      V4, #1E         ; V4 = random & 1E
$7E8    $DA42   DRW      VA, V4, #2      ; Draw 2-byte sprite at VA, V4
$7EA    $8633   XOR      V6, V3          ; V6 ^= V3
$7EC    $CAFE   RND      VA, #FE         ; VA = random & FE
$7EE    $A5AC   LD       I, $5AC         ; Load 5AC into I
$7F0    $E515   UNKNOWN  $E515           ; Unknown Exxx instruction
$7F2    $44ED   SNE      V4, #ED         ; Skip if V4 != 237
$7F4    $8C4F   UNKNOWN  8C4F            ; Unknown 8xxx instruction
$7F6    $E4A3   UNKNOWN  $E4A3           ; Unknown Exxx instruction
$7F8    $DF98   DRW      VF, V9, #8      ; Draw 8-byte sprite at VF, V9
$7FA    $E704   UNKNOWN  $E704           ; Unknown Exxx instruction
$7FC    $85D1   OR       V5, VD          ; V5 |= VD
$7FE    $C2F2   RND      V2, #F2         ; V2 = random & F2
$800    $15D7   JP       $5D7            ; Jump to 5D7
$802    $9E54   UNKNOWN  $9E54           ; Unknown 9xxx instruction
$804    $14B5   JP       $4B5            ; Jump to 4B5
$806    $AF37   LD       I, $F37         ; Load F37 into I
$808    $841D   UNKNOWN  841D            ; Unknown 8xxx instruction
$80A    $E7EA   UNKNOWN  $E7EA           ; Unknown Exxx instruction
$80C    $4911   SNE      V9, #11         ; Skip if V9 != 17
$80E    $D994   DRW      V9, V9, #4      ; Draw 4-byte sprite at V9, V9
$810    $02DC   SYS      $2DC            ; System call to 2DC
$812    $E3EE   UNKNOWN  $E3EE           ; Unknown Exxx instruction
$814    $7A0E   ADD      VA, #0E         ; Add 14 to VA
$816    $0770   SYS      $770            ; System call to 770
$818    $9957   UNKNOWN  $9957           ; Unknown 9xxx instruction
$81A    $0FBA   SYS      $FBA            ; System call to FBA
$81C    $4699   SNE      V6, #99         ; Skip if V6 != 153
$81E    $5A94   UNKNOWN  $5A94           ; Unknown 5xxx instruction
$820    $6342   LD       V3, #42         ; Load 66 into V3
$822    $19F9   JP       $9F9            ; Jump to 9F9
$824    $39A1   SE       V9, #A1         ; Skip if V9 == 161
$826    $84E8   UNKNOWN  84E8            ; Unknown 8xxx instruction
$828    $DDB5   DRW      VD, VB, #5      ; Draw 5-byte sprite at VD, VB
$82A    $74BE   ADD      V4, #BE         ; Add 190 to V4
$82C    $F9A2   UNKNOWN  F9A2            ; Unknown Fxxx instruction
$82E    $1E66   JP       $E66            ; Jump to E66
$830    $DD54   DRW      VD, V5, #4      ; Draw 4-byte sprite at VD, V5
$832    $C097   RND      V0, #97         ; V0 = random & 97
$834    $BCCB   JP       V0, $CCB        ; Jump to V0 + CCB
$836    $376B   SE       V7, #6B         ; Skip if V7 == 107
$838    $6AB9   LD       VA, #B9         ; Load 185 into VA
$83A    $9B31   UNKNOWN  $9B31           ; Unknown 9xxx instruction
$83C    $1B43   JP       $B43            ; Jump to B43
$83E    $66B4   LD       V6, #B4         ; Load 180 into V6
$840    $FE72   UNKNOWN  FE72            ; Unknown Fxxx instruction
$842    $5A11   UNKNOWN  $5A11           ; Unknown 5xxx instruction
$844    $CA8A   RND      VA, #8A         ; VA = random & 8A
$846    $6BE0   LD       VB, #E0         ; Load 224 into VB
$848    $8778   UNKNOWN  8778            ; Unknown 8xxx instruction
$84A    $EB90   UNKNOWN  $EB90           ; Unknown Exxx instruction
$84C    $5526   UNKNOWN  $5526           ; Unknown 5xxx instruction
$84E    $5197   UNKNOWN  $5197           ; Unknown 5xxx instruction
$850    $CD6A   RND      VD, #6A         ; VD = random & 6A
$852    $DF48   DRW      VF, V4, #8      ; Draw 8-byte sprite at VF, V4
$854    $B0B4   JP       V0, $0B4        ; Jump to V0 + 0B4
$856    $9D22   UNKNOWN  $9D22           ; Unknown 9xxx instruction
$858    $0FA8   SYS      $FA8            ; System call to FA8
$85A    $D144   DRW      V1, V4, #4      ; Draw 4-byte sprite at V1, V4
$85C    $BAC7   JP       V0, $AC7        ; Jump to V0 + AC7
$85E    $8B95   SUB      VB, V9          ; VB -= V9, VF = !borrow
$860    $8455   SUB      V4, V5          ; V4 -= V5, VF = !borrow
$862    $5D26   UNKNOWN  $5D26           ; Unknown 5xxx instruction
$864    $92A2   UNKNOWN  $92A2           ; Unknown 9xxx instruction
$866    $4D14   SNE      VD, #14         ; Skip if VD != 20
$868    $946F   UNKNOWN  $946F           ; Unknown 9xxx instruction
$86A    $6A9A   LD       VA, #9A         ; Load 154 into VA
$86C    $F655   LD       [I], V6         ; Store V0-V6 at I
$86E    $25F0   CALL     $5F0            ; Call subroutine at 5F0
$870    $D2CC   DRW      V2, VC, #C      ; Draw 12-byte sprite at V2, VC
$872    $6625   LD       V6, #25         ; Load 37 into V6
$874    $AA57   LD       I, $A57         ; Load A57 into I
$876    $A373   LD       I, $373         ; Load 373 into I
$878    $D478   DRW      V4, V7, #8      ; Draw 8-byte sprite at V4, V7
$87A    $C06A   RND      V0, #6A         ; V0 = random & 6A
$87C    $0EB4   SYS      $EB4            ; System call to EB4
$87E    $C552   RND      V5, #52         ; V5 = random & 52
$880    $4595   SNE      V5, #95         ; Skip if V5 != 149
$882    $01D4   SYS      $1D4            ; System call to 1D4
$884    $C24F   RND      V2, #4F         ; V2 = random & 4F
$886    $32EC   SE       V2, #EC         ; Skip if V2 == 236
$888    $6083   LD       V0, #83         ; Load 131 into V0
$88A    $0D2D   SYS      $D2D            ; System call to D2D
$88C    $5D71   UNKNOWN  $5D71           ; Unknown 5xxx instruction
$88E    $BEBD   JP       V0, $EBD        ; Jump to V0 + EBD
$890    $AA48   LD       I, $A48         ; Load A48 into I
$892    $4A6B   SNE      VA, #6B         ; Skip if VA != 107
$894    $AD7B   LD       I, $D7B         ; Load D7B into I
$896    $56C4   UNKNOWN  $56C4           ; Unknown 5xxx instruction
$898    $3A6F   SE       VA, #6F         ; Skip if VA == 111
$89A    $B134   JP       V0, $134        ; Jump to V0 + 134
$89C    $CACE   RND      VA, #CE         ; VA = random & CE
$89E    $2ECD   CALL     $ECD            ; Call subroutine at ECD
$8A0    $1A23   JP       $A23            ; Jump to A23
$8A2    $CE70   RND      VE, #70         ; VE = random & 70
$8A4    $F215   LD       DT, V2          ; Delay timer = V2
$8A6    $40D3   SNE      V0, #D3         ; Skip if V0 != 211
$8A8    $4A77   SNE      VA, #77         ; Skip if VA != 119
$8AA    $67B4   LD       V7, #B4         ; Load 180 into V7
$8AC    $B6EB   JP       V0, $6EB        ; Jump to V0 + 6EB
$8AE    $53D6   UNKNOWN  $53D6           ; Unknown 5xxx instruction
$8B0    $A91D   LD       I, $91D         ; Load 91D into I
$8B2    $6480   LD       V4, #80         ; Load 128 into V4
$8B4    $F949   UNKNOWN  F949            ; Unknown Fxxx instruction
$8B6    $CEB2   RND      VE, #B2         ; VE = random & B2
$8B8    $BDCF   JP       V0, $DCF        ; Jump to V0 + DCF
$8BA    $2CED   CALL     $CED            ; Call subroutine at CED
$8BC    $D373   DRW      V3, V7, #3      ; Draw 3-byte sprite at V3, V7
$8BE    $62AE   LD       V2, #AE         ; Load 174 into V2
$8C0    $5511   UNKNOWN  $5511           ; Unknown 5xxx instruction
$8C2    $53EF   UNKNOWN  $53EF           ; Unknown 5xxx instruction
$8C4    $6216   LD       V2, #16         ; Load 22 into V2
$8C6    $FDFB   UNKNOWN  FDFB            ; Unknown Fxxx instruction
$8C8    $DC64   DRW      VC, V6, #4      ; Draw 4-byte sprite at VC, V6
$8CA    $33AE   SE       V3, #AE         ; Skip if V3 == 174
$8CC    $2B48   CALL     $B48            ; Call subroutine at B48
$8CE    $0F49   SYS      $F49            ; System call to F49
$8D0    $3022   SE       V0, #22         ; Skip if V0 == 34
$8D2    $71F2   ADD      V1, #F2         ; Add 242 to V1
$8D4    $92AB   UNKNOWN  $92AB           ; Unknown 9xxx instruction
$8D6    $8869   UNKNOWN  8869            ; Unknown 8xxx instruction
$8D8    $2C02   CALL     $C02            ; Call subroutine at C02
$8DA    $F371   UNKNOWN  F371            ; Unknown Fxxx instruction
$8DC    $B8BC   JP       V0, $8BC        ; Jump to V0 + 8BC
$8DE    $6684   LD       V6, #84         ; Load 132 into V6
$8E0    $3090   SE       V0, #90         ; Skip if V0 == 144
$8E2    $4056   SNE      V0, #56         ; Skip if V0 != 86
$8E4    $EBBD   UNKNOWN  $EBBD           ; Unknown Exxx instruction
$8E6    $877E   SHL      V7              ; V7 <<= 1, VF = MSB
$8E8    $D952   DRW      V9, V5, #2      ; Draw 2-byte sprite at V9, V5
$8EA    $FDCC   UNKNOWN  FDCC            ; Unknown Fxxx instruction
$8EC    $517A   UNKNOWN  $517A           ; Unknown 5xxx instruction
$8EE    $CD14   RND      VD, #14         ; VD = random & 14
$8F0    $A2AF   LD       I, $2AF         ; Load 2AF into I
$8F2    $CDE6   RND      VD, #E6         ; VD = random & E6
$8F4    $F436   UNKNOWN  F436            ; Unknown Fxxx instruction
$8F6    $BC43   JP       V0, $C43        ; Jump to V0 + C43
$8F8    $ADE2   LD       I, $DE2         ; Load DE2 into I
$8FA    $D347   DRW      V3, V4, #7      ; Draw 7-byte sprite at V3, V4
$8FC    $4F2D   SNE      VF, #2D         ; Skip if VF != 45
$8FE    $AF4E   LD       I, $F4E         ; Load F4E into I
$900    $6583   LD       V5, #83         ; Load 131 into V5
$902    $FAF2   UNKNOWN  FAF2            ; Unknown Fxxx instruction
$904    $C84A   RND      V8, #4A         ; V8 = random & 4A
$906    $E0B0   UNKNOWN  $E0B0           ; Unknown Exxx instruction
$908    $73B3   ADD      V3, #B3         ; Add 179 to V3
$90A    $3BB8   SE       VB, #B8         ; Skip if VB == 184
$90C    $12CA   JP       $2CA            ; Jump to 2CA
$90E    $58EA   UNKNOWN  $58EA           ; Unknown 5xxx instruction
$910    $E8D2   UNKNOWN  $E8D2           ; Unknown Exxx instruction
$912    $F8CC   UNKNOWN  F8CC            ; Unknown Fxxx instruction
$914    $4D78   SNE      VD, #78         ; Skip if VD != 120
$916    $2DB9   CALL     $DB9            ; Call subroutine at DB9
$918    $F386   UNKNOWN  F386            ; Unknown Fxxx instruction
$91A    $82B8   UNKNOWN  82B8            ; Unknown 8xxx instruction
$91C    $B57C   JP       V0, $57C        ; Jump to V0 + 57C
$91E    $EAFD   UNKNOWN  $EAFD           ; Unknown Exxx instruction
$920    $A1DA   LD       I, $1DA         ; Load 1DA into I
$922    $2EAD   CALL     $EAD            ; Call subroutine at EAD
$924    $DCEE   DRW      VC, VE, #E      ; Draw 14-byte sprite at VC, VE
$926    $4CD4   SNE      VC, #D4         ; Skip if VC != 212
$928    $4D54   SNE      VD, #54         ; Skip if VD != 84
$92A    $C3D1   RND      V3, #D1         ; V3 = random & D1
$92C    $8773   XOR      V7, V7          ; V7 ^= V7
$92E    $FF69   UNKNOWN  FF69            ; Unknown Fxxx instruction
$930    $5B4E   UNKNOWN  $5B4E           ; Unknown 5xxx instruction
$932    $2D4C   CALL     $D4C            ; Call subroutine at D4C
$934    $697D   LD       V9, #7D         ; Load 125 into V9
$936    $E61D   UNKNOWN  $E61D           ; Unknown Exxx instruction
$938    $A623   LD       I, $623         ; Load 623 into I
$93A    $262C   CALL     $62C            ; Call subroutine at 62C
$93C    $6579   LD       V5, #79         ; Load 121 into V5
$93E    $8D51   OR       VD, V5          ; VD |= V5
$940    $EA36   UNKNOWN  $EA36           ; Unknown Exxx instruction
$942    $876F   UNKNOWN  876F            ; Unknown 8xxx instruction
$944    $56C8   UNKNOWN  $56C8           ; Unknown 5xxx instruction
$946    $1218   JP       $218            ; Jump to 218
$948    $3FB4   SE       VF, #B4         ; Skip if VF == 180
$94A    $B48A   JP       V0, $48A        ; Jump to V0 + 48A
$94C    $F702   UNKNOWN  F702            ; Unknown Fxxx instruction
$94E    $D4F1   DRW      V4, VF, #1      ; Draw 1-byte sprite at V4, VF
$950    $0CF3   SYS      $CF3            ; System call to CF3
$952    $ADE8   LD       I, $DE8         ; Load DE8 into I
$954    $56F7   UNKNOWN  $56F7           ; Unknown 5xxx instruction
$956    $0508   SYS      $508            ; System call to 508
$958    $BCF3   JP       V0, $CF3        ; Jump to V0 + CF3
$95A    $80E4   ADD      V0, VE          ; V0 += VE, VF = carry
$95C    $3268   SE       V2, #68         ; Skip if V2 == 104
$95E    $D31A   DRW      V3, V1, #A      ; Draw 10-byte sprite at V3, V1
$960    $9D8D   UNKNOWN  $9D8D           ; Unknown 9xxx instruction
$962    $B569   JP       V0, $569        ; Jump to V0 + 569
$964    $5860   SE       V8, V6          ; Skip if V8 == V6
$966    $5765   UNKNOWN  $5765           ; Unknown 5xxx instruction
$968    $54BB   UNKNOWN  $54BB           ; Unknown 5xxx instruction
$96A    $2910   CALL     $910            ; Call subroutine at 910
$96C    $17BA   JP       $7BA            ; Jump to 7BA
$96E    $F57E   UNKNOWN  F57E            ; Unknown Fxxx instruction
$970    $F0EC   UNKNOWN  F0EC            ; Unknown Fxxx instruction
$972    $7A03   ADD      VA, #03         ; Add 3 to VA
$974    $FB9C   UNKNOWN  FB9C            ; Unknown Fxxx instruction
$976    $31BD   SE       V1, #BD         ; Skip if V1 == 189
$978    $FF88   UNKNOWN  FF88            ; Unknown Fxxx instruction
$97A    $C607   RND      V6, #07         ; V6 = random & 07
$97C    $607C   LD       V0, #7C         ; Load 124 into V0
$97E    $450C   SNE      V5, #0C         ; Skip if V5 != 12
$980    $6E97   LD       VE, #97         ; Load 151 into VE
$982    $A704   LD       I, $704         ; Load 704 into I
$984    $8FA7   SUBN     VF, VA          ; VF = VA - VF, VF = !borrow
$986    $5334   UNKNOWN  $5334           ; Unknown 5xxx instruction
$988    $649E   LD       V4, #9E         ; Load 158 into V4
$98A    $CC57   RND      VC, #57         ; VC = random & 57
$98C    $F400   UNKNOWN  F400            ; Unknown Fxxx instruction
$98E    $887D   UNKNOWN  887D            ; Unknown 8xxx instruction
$990    $B782   JP       V0, $782        ; Jump to V0 + 782
$992    $92E8   UNKNOWN  $92E8           ; Unknown 9xxx instruction
$994    $AAFE   LD       I, $AFE         ; Load AFE into I
$996    $D2BE   DRW      V2, VB, #E      ; Draw 14-byte sprite at V2, VB
$998    $3A0A   SE       VA, #0A         ; Skip if VA == 10
$99A    $6681   LD       V6, #81         ; Load 129 into V6
$99C    $2D0C   CALL     $D0C            ; Call subroutine at D0C
$99E    $7ED3   ADD      VE, #D3         ; Add 211 to VE
$9A0    $973C   UNKNOWN  $973C           ; Unknown 9xxx instruction
$9A2    $588E   UNKNOWN  $588E           ; Unknown 5xxx instruction
$9A4    $F821   UNKNOWN  F821            ; Unknown Fxxx instruction
$9A6    $313E   SE       V1, #3E         ; Skip if V1 == 62
$9A8    $4CF8   SNE      VC, #F8         ; Skip if VC != 248
$9AA    $B759   JP       V0, $759        ; Jump to V0 + 759
$9AC    $79A5   ADD      V9, #A5         ; Add 165 to V9
$9AE    $E23C   UNKNOWN  $E23C           ; Unknown Exxx instruction
$9B0    $B7AD   JP       V0, $7AD        ; Jump to V0 + 7AD
$9B2    $FB10   UNKNOWN  FB10            ; Unknown Fxxx instruction
$9B4    $4D12   SNE      VD, #12         ; Skip if VD != 18
$9B6    $241B   CALL     $41B            ; Call subroutine at 41B
$9B8    $45F9   SNE      V5, #F9         ; Skip if V5 != 249
$9BA    $BE40   JP       V0, $E40        ; Jump to V0 + E40
$9BC    $CE9F   RND      VE, #9F         ; VE = random & 9F
$9BE    $8863   XOR      V8, V6          ; V8 ^= V6
$9C0    $51E2   UNKNOWN  $51E2           ; Unknown 5xxx instruction
$9C2    $D160   DRW      V1, V6, #0      ; Draw 0-byte sprite at V1, V6
$9C4    $CE54   RND      VE, #54         ; VE = random & 54
$9C6    $EDDE   UNKNOWN  $EDDE           ; Unknown Exxx instruction
$9C8    $CDBB   RND      VD, #BB         ; VD = random & BB
$9CA    $1231   JP       $231            ; Jump to 231
$9CC    $22B6   CALL     $2B6            ; Call subroutine at 2B6
$9CE    $56D9   UNKNOWN  $56D9           ; Unknown 5xxx instruction
$9D0    $742D   ADD      V4, #2D         ; Add 45 to V4
$9D2    $E31F   UNKNOWN  $E31F           ; Unknown Exxx instruction
$9D4    $EC03   UNKNOWN  $EC03           ; Unknown Exxx instruction
$9D6    $52AD   UNKNOWN  $52AD           ; Unknown 5xxx instruction
$9D8    $CDAD   RND      VD, #AD         ; VD = random & AD
$9DA    $F39C   UNKNOWN  F39C            ; Unknown Fxxx instruction
$9DC    $62D9   LD       V2, #D9         ; Load 217 into V2
$9DE    $B437   JP       V0, $437        ; Jump to V0 + 437
$9E0    $FF9B   UNKNOWN  FF9B            ; Unknown Fxxx instruction
$9E2    $9880   SNE      V8, V8          ; Skip if V8 != V8
$9E4    $CBEC   RND      VB, #EC         ; VB = random & EC
$9E6    $DB12   DRW      VB, V1, #2      ; Draw 2-byte sprite at VB, V1
$9E8    $D7F4   DRW      V7, VF, #4      ; Draw 4-byte sprite at V7, VF
$9EA    $BE2F   JP       V0, $E2F        ; Jump to V0 + E2F
$9EC    $230D   CALL     $30D            ; Call subroutine at 30D
$9EE    $B1C3   JP       V0, $1C3        ; Jump to V0 + 1C3
$9F0    $9498   UNKNOWN  $9498           ; Unknown 9xxx instruction
$9F2    $5940   SE       V9, V4          ; Skip if V9 == V4
$9F4    $52EF   UNKNOWN  $52EF           ; Unknown 5xxx instruction
$9F6    $A209   LD       I, $209         ; Load 209 into I
$9F8    $FD4A   UNKNOWN  FD4A            ; Unknown Fxxx instruction
$9FA    $8CE0   LD       VC, VE          ; VC = VE
$9FC    $CD56   RND      VD, #56         ; VD = random & 56
$9FE    $6CD9   LD       VC, #D9         ; Load 217 into VC
$A00    $6509   LD       V5, #09         ; Load 9 into V5
$A02    $5A38   UNKNOWN  $5A38           ; Unknown 5xxx instruction
$A04    $71F0   ADD      V1, #F0         ; Add 240 to V1
$A06    $06B0   SYS      $6B0            ; System call to 6B0
$A08    $5AD2   UNKNOWN  $5AD2           ; Unknown 5xxx instruction
$A0A    $6A06   LD       VA, #06         ; Load 6 into VA
$A0C    $54F1   UNKNOWN  $54F1           ; Unknown 5xxx instruction
$A0E    $F88A   UNKNOWN  F88A            ; Unknown Fxxx instruction
$A10    $234B   CALL     $34B            ; Call subroutine at 34B
$A12    $90DD   UNKNOWN  $90DD           ; Unknown 9xxx instruction
$A14    $1560   JP       $560            ; Jump to 560
$A16    $C4A4   RND      V4, #A4         ; V4 = random & A4
$A18    $7CD9   ADD      VC, #D9         ; Add 217 to VC
$A1A    $DF93   DRW      VF, V9, #3      ; Draw 3-byte sprite at VF, V9
$A1C    $9A35   UNKNOWN  $9A35           ; Unknown 9xxx instruction
$A1E    $A57A   LD       I, $57A         ; Load 57A into I
$A20    $644C   LD       V4, #4C         ; Load 76 into V4
$A22    $16F0   JP       $6F0            ; Jump to 6F0
$A24    $47EB   SNE      V7, #EB         ; Skip if V7 != 235
$A26    $ABCA   LD       I, $BCA         ; Load BCA into I
$A28    $9B14   UNKNOWN  $9B14           ; Unknown 9xxx instruction
$A2A    $7E40   ADD      VE, #40         ; Add 64 to VE
$A2C    $20D5   CALL     $0D5            ; Call subroutine at 0D5
$A2E    $D47B   DRW      V4, V7, #B      ; Draw 11-byte sprite at V4, V7
$A30    $673A   LD       V7, #3A         ; Load 58 into V7
$A32    $0187   SYS      $187            ; System call to 187
$A34    $EB97   UNKNOWN  $EB97           ; Unknown Exxx instruction
$A36    $BBF7   JP       V0, $BF7        ; Jump to V0 + BF7
$A38    $0432   SYS      $432            ; System call to 432
$A3A    $042E   SYS      $42E            ; System call to 42E
$A3C    $AD8D   LD       I, $D8D         ; Load D8D into I
$A3E    $FEA0   UNKNOWN  FEA0            ; Unknown Fxxx instruction
$A40    $441F   SNE      V4, #1F         ; Skip if V4 != 31
$A42    $2FE3   CALL     $FE3            ; Call subroutine at FE3
$A44    $9464   UNKNOWN  $9464           ; Unknown 9xxx instruction
$A46    $E9CF   UNKNOWN  $E9CF           ; Unknown Exxx instruction
$A48    $3BCA   SE       VB, #CA         ; Skip if VB == 202
$A4A    $6ACF   LD       VA, #CF         ; Load 207 into VA
$A4C    $F354   UNKNOWN  F354            ; Unknown Fxxx instruction
$A4E    $70C7   ADD      V0, #C7         ; Add 199 to V0
$A50    $307F   SE       V0, #7F         ; Skip if V0 == 127
$A52    $46F9   SNE      V6, #F9         ; Skip if V6 != 249
$A54    $5376   UNKNOWN  $5376           ; Unknown 5xxx instruction
$A56    $6A67   LD       VA, #67         ; Load 103 into VA
$A58    $7368   ADD      V3, #68         ; Add 104 to V3
$A5A    $575C   UNKNOWN  $575C           ; Unknown 5xxx instruction
$A5C    $F5AA   UNKNOWN  F5AA            ; Unknown Fxxx instruction
$A5E    $E196   UNKNOWN  $E196           ; Unknown Exxx instruction
$A60    $5168   UNKNOWN  $5168           ; Unknown 5xxx instruction
$A62    $DBAD   DRW      VB, VA, #D      ; Draw 13-byte sprite at VB, VA
$A64    $CE11   RND      VE, #11         ; VE = random & 11
$A66    $1C04   JP       $C04            ; Jump to C04
$A68    $244A   CALL     $44A            ; Call subroutine at 44A
$A6A    $D093   DRW      V0, V9, #3      ; Draw 3-byte sprite at V0, V9
$A6C    $4586   SNE      V5, #86         ; Skip if V5 != 134
$A6E    $ED72   UNKNOWN  $ED72           ; Unknown Exxx instruction
$A70    $6F69   LD       VF, #69         ; Load 105 into VF
$A72    $C4A3   RND      V4, #A3         ; V4 = random & A3
$A74    $ED7F   UNKNOWN  $ED7F           ; Unknown Exxx instruction
$A76    $2E34   CALL     $E34            ; Call subroutine at E34
$A78    $8AAE   SHL      VA              ; VA <<= 1, VF = MSB
$A7A    $B555   JP       V0, $555        ; Jump to V0 + 555
$A7C    $2523   CALL     $523            ; Call subroutine at 523
$A7E    $790A   ADD      V9, #0A         ; Add 10 to V9
$A80    $F913   UNKNOWN  F913            ; Unknown Fxxx instruction
$A82    $4D27   SNE      VD, #27         ; Skip if VD != 39
$A84    $272E   CALL     $72E            ; Call subroutine at 72E
$A86    $9919   UNKNOWN  $9919           ; Unknown 9xxx instruction
$A88    $F747   UNKNOWN  F747            ; Unknown Fxxx instruction
$A8A    $D33C   DRW      V3, V3, #C      ; Draw 12-byte sprite at V3, V3
$A8C    $854C   UNKNOWN  854C            ; Unknown 8xxx instruction
$A8E    $C2CB   RND      V2, #CB         ; V2 = random & CB
$A90    $9059   UNKNOWN  $9059           ; Unknown 9xxx instruction
$A92    $C59C   RND      V5, #9C         ; V5 = random & 9C
$A94    $E303   UNKNOWN  $E303           ; Unknown Exxx instruction
$A96    $BC3D   JP       V0, $C3D        ; Jump to V0 + C3D
$A98    $A8A9   LD       I, $8A9         ; Load 8A9 into I
$A9A    $92EA   UNKNOWN  $92EA           ; Unknown 9xxx instruction
$A9C    $1FCB   JP       $FCB            ; Jump to FCB
$A9E    $5626   UNKNOWN  $5626           ; Unknown 5xxx instruction
$AA0    $11FA   JP       $1FA            ; Jump to 1FA
$AA2    $A2CD   LD       I, $2CD         ; Load 2CD into I
$AA4    $3229   SE       V2, #29         ; Skip if V2 == 41
$AA6    $4996   SNE      V9, #96         ; Skip if V9 != 150
$AA8    $38BE   SE       V8, #BE         ; Skip if V8 == 190
$AAA    $471C   SNE      V7, #1C         ; Skip if V7 != 28
$AAC    $076F   SYS      $76F            ; System call to 76F
$AAE    $7EF2   ADD      VE, #F2         ; Add 242 to VE
$AB0    $192E   JP       $92E            ; Jump to 92E
$AB2    $C142   RND      V1, #42         ; V1 = random & 42
$AB4    $C8C8   RND      V8, #C8         ; V8 = random & C8
$AB6    $E184   UNKNOWN  $E184           ; Unknown Exxx instruction
$AB8    $13AB   JP       $3AB            ; Jump to 3AB
$ABA    $68A8   LD       V8, #A8         ; Load 168 into V8
$ABC    $BDFA   JP       V0, $DFA        ; Jump to V0 + DFA
$ABE    $4D32   SNE      VD, #32         ; Skip if VD != 50
$AC0    $9F2C   UNKNOWN  $9F2C           ; Unknown 9xxx instruction
$AC2    $1F13   JP       $F13            ; Jump to F13
$AC4    $7B9A   ADD      VB, #9A         ; Add 154 to VB
$AC6    $6BB0   LD       VB, #B0         ; Load 176 into VB
$AC8    $A8CA   LD       I, $8CA         ; Load 8CA into I
$ACA    $734C   ADD      V3, #4C         ; Add 76 to V3
$ACC    $7662   ADD      V6, #62         ; Add 98 to V6
$ACE    $6DA2   LD       VD, #A2         ; Load 162 into VD
$AD0    $E95D   UNKNOWN  $E95D           ; Unknown Exxx instruction
$AD2    $7626   ADD      V6, #26         ; Add 38 to V6
$AD4    $DDF9   DRW      VD, VF, #9      ; Draw 9-byte sprite at VD, VF
$AD6    $440B   SNE      V4, #0B         ; Skip if V4 != 11
$AD8    $6213   LD       V2, #13         ; Load 19 into V2
$ADA    $7DFE   ADD      VD, #FE         ; Add 254 to VD
$ADC    $152C   JP       $52C            ; Jump to 52C
$ADE    $81BC   UNKNOWN  81BC            ; Unknown 8xxx instruction
$AE0    $7D09   ADD      VD, #09         ; Add 9 to VD
$AE2    $2997   CALL     $997            ; Call subroutine at 997
$AE4    $A9C5   LD       I, $9C5         ; Load 9C5 into I
$AE6    $B898   JP       V0, $898        ; Jump to V0 + 898
$AE8    $9F09   UNKNOWN  $9F09           ; Unknown 9xxx instruction
$AEA    $8649   UNKNOWN  8649            ; Unknown 8xxx instruction
$AEC    $5BA5   UNKNOWN  $5BA5           ; Unknown 5xxx instruction
$AEE    $3922   SE       V9, #22         ; Skip if V9 == 34
$AF0    $760E   ADD      V6, #0E         ; Add 14 to V6
$AF2    $248C   CALL     $48C            ; Call subroutine at 48C
$AF4    $9E8A   UNKNOWN  $9E8A           ; Unknown 9xxx instruction
$AF6    $457A   SNE      V5, #7A         ; Skip if V5 != 122
$AF8    $53E0   SE       V3, VE          ; Skip if V3 == VE
$AFA    $F86F   UNKNOWN  F86F            ; Unknown Fxxx instruction
$AFC    $4482   SNE      V4, #82         ; Skip if V4 != 130
$AFE    $37BD   SE       V7, #BD         ; Skip if V7 == 189
$B00    $CB2A   RND      VB, #2A         ; VB = random & 2A
$B02    $23D1   CALL     $3D1            ; Call subroutine at 3D1
$B04    $07ED   SYS      $7ED            ; System call to 7ED
$B06    $88C9   UNKNOWN  88C9            ; Unknown 8xxx instruction
$B08    $B8A7   JP       V0, $8A7        ; Jump to V0 + 8A7
$B0A    $8D2F   UNKNOWN  8D2F            ; Unknown 8xxx instruction
$B0C    $7F55   ADD      VF, #55         ; Add 85 to VF
$B0E    $E438   UNKNOWN  $E438           ; Unknown Exxx instruction
$B10    $7F34   ADD      VF, #34         ; Add 52 to VF
$B12    $23D2   CALL     $3D2            ; Call subroutine at 3D2
$B14    $B988   JP       V0, $988        ; Jump to V0 + 988
$B16    $B42A   JP       V0, $42A        ; Jump to V0 + 42A
$B18    $2D38   CALL     $D38            ; Call subroutine at D38
$B1A    $485F   SNE      V8, #5F         ; Skip if V8 != 95
$B1C    $4259   SNE      V2, #59         ; Skip if V2 != 89
$B1E    $BEEC   JP       V0, $EEC        ; Jump to V0 + EEC
$B20    $45AC   SNE      V5, #AC         ; Skip if V5 != 172
$B22    $87A0   LD       V7, VA          ; V7 = VA
$B24    $37B6   SE       V7, #B6         ; Skip if V7 == 182
$B26    $3668   SE       V6, #68         ; Skip if V6 == 104
$B28    $BF0A   JP       V0, $F0A        ; Jump to V0 + F0A
$B2A    $2FC0   CALL     $FC0            ; Call subroutine at FC0
$B2C    $DF64   DRW      VF, V6, #4      ; Draw 4-byte sprite at VF, V6
$B2E    $5970   SE       V9, V7          ; Skip if V9 == V7
$B30    $2A98   CALL     $A98            ; Call subroutine at A98
$B32    $03E0   SYS      $3E0            ; System call to 3E0
$B34    $C9A8   RND      V9, #A8         ; V9 = random & A8
$B36    $78DF   ADD      V8, #DF         ; Add 223 to V8
$B38    $FAD5   UNKNOWN  FAD5            ; Unknown Fxxx instruction
$B3A    $5DCC   UNKNOWN  $5DCC           ; Unknown 5xxx instruction
$B3C    $AFFE   LD       I, $FFE         ; Load FFE into I
$B3E    $6CB8   LD       VC, #B8         ; Load 184 into VC
$B40    $3E52   SE       VE, #52         ; Skip if VE == 82
$B42    $76E3   ADD      V6, #E3         ; Add 227 to V6
$B44    $968C   UNKNOWN  $968C           ; Unknown 9xxx instruction
$B46    $8D3B   UNKNOWN  8D3B            ; Unknown 8xxx instruction
$B48    $223D   CALL     $23D            ; Call subroutine at 23D
$B4A    $2FB1   CALL     $FB1            ; Call subroutine at FB1
$B4C    $7214   ADD      V2, #14         ; Add 20 to V2
$B4E    $53E0   SE       V3, VE          ; Skip if V3 == VE
$B50    $157F   JP       $57F            ; Jump to 57F
$B52    $5451   UNKNOWN  $5451           ; Unknown 5xxx instruction
$B54    $F00F   UNKNOWN  F00F            ; Unknown Fxxx instruction
$B56    $6602   LD       V6, #02         ; Load 2 into V6
$B58    $150F   JP       $50F            ; Jump to 50F
$B5A    $587C   UNKNOWN  $587C           ; Unknown 5xxx instruction
$B5C    $BE44   JP       V0, $E44        ; Jump to V0 + E44
$B5E    $BF54   JP       V0, $F54        ; Jump to V0 + F54
$B60    $816A   UNKNOWN  816A            ; Unknown 8xxx instruction
$B62    $D4F4   DRW      V4, VF, #4      ; Draw 4-byte sprite at V4, VF
$B64    $C0CA   RND      V0, #CA         ; V0 = random & CA
$B66    $20F6   CALL     $0F6            ; Call subroutine at 0F6
$B68    $C11F   RND      V1, #1F         ; V1 = random & 1F
$B6A    $25CA   CALL     $5CA            ; Call subroutine at 5CA
$B6C    $146E   JP       $46E            ; Jump to 46E
$B6E    $48D1   SNE      V8, #D1         ; Skip if V8 != 209
$B70    $AC3E   LD       I, $C3E         ; Load C3E into I
$B72    $41C6   SNE      V1, #C6         ; Skip if V1 != 198
$B74    $0D84   SYS      $D84            ; System call to D84
$B76    $7DF3   ADD      VD, #F3         ; Add 243 to VD
$B78    $E1CF   UNKNOWN  $E1CF           ; Unknown Exxx instruction
$B7A    $3CD7   SE       VC, #D7         ; Skip if VC == 215
$B7C    $C6B0   RND      V6, #B0         ; V6 = random & B0
$B7E    $87C8   UNKNOWN  87C8            ; Unknown 8xxx instruction
$B80    $1D3D   JP       $D3D            ; Jump to D3D
$B82    $FCEE   UNKNOWN  FCEE            ; Unknown Fxxx instruction
$B84    $F628   UNKNOWN  F628            ; Unknown Fxxx instruction
$B86    $2CA2   CALL     $CA2            ; Call subroutine at CA2
$B88    $3FAD   SE       VF, #AD         ; Skip if VF == 173
$B8A    $F945   UNKNOWN  F945            ; Unknown Fxxx instruction
$B8C    $F64C   UNKNOWN  F64C            ; Unknown Fxxx instruction
$B8E    $47B6   SNE      V7, #B6         ; Skip if V7 != 182
$B90    $8A5E   SHL      VA              ; VA <<= 1, VF = MSB
$B92    $85F3   XOR      V5, VF          ; V5 ^= VF
$B94    $E230   UNKNOWN  $E230           ; Unknown Exxx instruction
$B96    $DD4C   DRW      VD, V4, #C      ; Draw 12-byte sprite at VD, V4
$B98    $9F15   UNKNOWN  $9F15           ; Unknown 9xxx instruction
$B9A    $0506   SYS      $506            ; System call to 506
$B9C    $1578   JP       $578            ; Jump to 578
$B9E    $49CE   SNE      V9, #CE         ; Skip if V9 != 206
$BA0    $2B22   CALL     $B22            ; Call subroutine at B22
$BA2    $39EA   SE       V9, #EA         ; Skip if V9 == 234
$BA4    $38A7   SE       V8, #A7         ; Skip if V8 == 167
$BA6    $6BFF   LD       VB, #FF         ; Load 255 into VB
$BA8    $3BCF   SE       VB, #CF         ; Skip if VB == 207
$BAA    $1925   JP       $925            ; Jump to 925
$BAC    $C6E5   RND      V6, #E5         ; V6 = random & E5
$BAE    $C75E   RND      V7, #5E         ; V7 = random & 5E
$BB0    $9B5B   UNKNOWN  $9B5B           ; Unknown 9xxx instruction
$BB2    $D1B4   DRW      V1, VB, #4      ; Draw 4-byte sprite at V1, VB
$BB4    $935A   UNKNOWN  $935A           ; Unknown 9xxx instruction
$BB6    $D3A3   DRW      V3, VA, #3      ; Draw 3-byte sprite at V3, VA
$BB8    $FC8E   UNKNOWN  FC8E            ; Unknown Fxxx instruction
$BBA    $F74C   UNKNOWN  F74C            ; Unknown Fxxx instruction
$BBC    $6C38   LD       VC, #38         ; Load 56 into VC
$BBE    $ECE2   UNKNOWN  $ECE2           ; Unknown Exxx instruction
$BC0    $A6FD   LD       I, $6FD         ; Load 6FD into I
$BC2    $EB96   UNKNOWN  $EB96           ; Unknown Exxx instruction
$BC4    $63D4   LD       V3, #D4         ; Load 212 into V3
$BC6    $0D29   SYS      $D29            ; System call to D29
$BC8    $53C4   UNKNOWN  $53C4           ; Unknown 5xxx instruction
$BCA    $014B   SYS      $14B            ; System call to 14B
$BCC    $A97F   LD       I, $97F         ; Load 97F into I
$BCE    $A04E   LD       I, $04E         ; Load 04E into I
$BD0    $84B3   XOR      V4, VB          ; V4 ^= VB
$BD2    $63F9   LD       V3, #F9         ; Load 249 into V3
$BD4    $E96D   UNKNOWN  $E96D           ; Unknown Exxx instruction
$BD6    $ED03   UNKNOWN  $ED03           ; Unknown Exxx instruction
$BD8    $476E   SNE      V7, #6E         ; Skip if V7 != 110
$BDA    $0F21   SYS      $F21            ; System call to F21
$BDC    $5A4A   UNKNOWN  $5A4A           ; Unknown 5xxx instruction
$BDE    $6754   LD       V7, #54         ; Load 84 into V7
$BE0    $F74E   UNKNOWN  F74E            ; Unknown Fxxx instruction
$BE2    $5ECE   UNKNOWN  $5ECE           ; Unknown 5xxx instruction
$BE4    $7C99   ADD      VC, #99         ; Add 153 to VC
$BE6    $972A   UNKNOWN  $972A           ; Unknown 9xxx instruction
$BE8    $57FD   UNKNOWN  $57FD           ; Unknown 5xxx instruction
$BEA    $371E   SE       V7, #1E         ; Skip if V7 == 30
$BEC    $46EC   SNE      V6, #EC         ; Skip if V6 != 236
$BEE    $E72E   UNKNOWN  $E72E           ; Unknown Exxx instruction
$BF0    $1819   JP       $819            ; Jump to 819
$BF2    $DFAA   DRW      VF, VA, #A      ; Draw 10-byte sprite at VF, VA
$BF4    $E668   UNKNOWN  $E668           ; Unknown Exxx instruction
$BF6    $2CD8   CALL     $CD8            ; Call subroutine at CD8
$BF8    $CEEF   RND      VE, #EF         ; VE = random & EF
$BFA    $192E   JP       $92E            ; Jump to 92E
$BFC    $B695   JP       V0, $695        ; Jump to V0 + 695
$BFE    $2D4C   CALL     $D4C            ; Call subroutine at D4C
$C00    $8FFB   UNKNOWN  8FFB            ; Unknown 8xxx instruction
$C02    $5DB0   SE       VD, VB          ; Skip if VD == VB
$C04    $00A6   SYS      $0A6            ; System call to 0A6
$C06    $D7EE   DRW      V7, VE, #E      ; Draw 14-byte sprite at V7, VE
$C08    $0CC5   SYS      $CC5            ; System call to CC5
$C0A    $96CF   UNKNOWN  $96CF           ; Unknown 9xxx instruction
$C0C    $9469   UNKNOWN  $9469           ; Unknown 9xxx instruction
$C0E    $C996   RND      V9, #96         ; V9 = random & 96
$C10    $CDBC   RND      VD, #BC         ; VD = random & BC
$C12    $2A15   CALL     $A15            ; Call subroutine at A15
$C14    $95D2   UNKNOWN  $95D2           ; Unknown 9xxx instruction
$C16    $7C02   ADD      VC, #02         ; Add 2 to VC
$C18    $8E79   UNKNOWN  8E79            ; Unknown 8xxx instruction
$C1A    $FD94   UNKNOWN  FD94            ; Unknown Fxxx instruction
$C1C    $2D10   CALL     $D10            ; Call subroutine at D10
$C1E    $68DE   LD       V8, #DE         ; Load 222 into V8
$C20    $1149   JP       $149            ; Jump to 149
$C22    $EC9E   SKP      VC              ; Skip if key VC pressed
$C24    $FA31   UNKNOWN  FA31            ; Unknown Fxxx instruction
$C26    $CA3D   RND      VA, #3D         ; VA = random & 3D
$C28    $1636   JP       $636            ; Jump to 636
$C2A    $5501   UNKNOWN  $5501           ; Unknown 5xxx instruction
$C2C    $5F54   UNKNOWN  $5F54           ; Unknown 5xxx instruction
$C2E    $3ED4   SE       VE, #D4         ; Skip if VE == 212
$C30    $0DBE   SYS      $DBE            ; System call to DBE
$C32    $0578   SYS      $578            ; System call to 578
$C34    $4CCF   SNE      VC, #CF         ; Skip if VC != 207
$C36    $3810   SE       V8, #10         ; Skip if V8 == 16
$C38    $0C25   SYS      $C25            ; System call to C25
$C3A    $9340   SNE      V3, V4          ; Skip if V3 != V4
$C3C    $F1A8   UNKNOWN  F1A8            ; Unknown Fxxx instruction
$C3E    $DA1C   DRW      VA, V1, #C      ; Draw 12-byte sprite at VA, V1
$C40    $DE8D   DRW      VE, V8, #D      ; Draw 13-byte sprite at VE, V8
$C42    $D623   DRW      V6, V2, #3      ; Draw 3-byte sprite at V6, V2
$C44    $85EC   UNKNOWN  85EC            ; Unknown 8xxx instruction
$C46    $882C   UNKNOWN  882C            ; Unknown 8xxx instruction
$C48    $9F98   UNKNOWN  $9F98           ; Unknown 9xxx instruction
$C4A    $5A0D   UNKNOWN  $5A0D           ; Unknown 5xxx instruction
$C4C    $1310   JP       $310            ; Jump to 310
$C4E    $50A2   UNKNOWN  $50A2           ; Unknown 5xxx instruction
$C50    $463E   SNE      V6, #3E         ; Skip if V6 != 62
$C52    $D678   DRW      V6, V7, #8      ; Draw 8-byte sprite at V6, V7
$C54    $9D72   UNKNOWN  $9D72           ; Unknown 9xxx instruction
$C56    $09A9   SYS      $9A9            ; System call to 9A9
$C58    $D2FF   DRW      V2, VF, #F      ; Draw 15-byte sprite at V2, VF
$C5A    $454A   SNE      V5, #4A         ; Skip if V5 != 74
$C5C    $E572   UNKNOWN  $E572           ; Unknown Exxx instruction
$C5E    $22D3   CALL     $2D3            ; Call subroutine at 2D3
$C60    $86E6   SHR      V6              ; V6 >>= 1, VF = LSB
$C62    $F83C   UNKNOWN  F83C            ; Unknown Fxxx instruction
$C64    $1500   JP       $500            ; Jump to 500
$C66    $BFA4   JP       V0, $FA4        ; Jump to V0 + FA4
$C68    $60A6   LD       V0, #A6         ; Load 166 into V0
$C6A    $A280   LD       I, $280         ; Load 280 into I
$C6C    $5379   UNKNOWN  $5379           ; Unknown 5xxx instruction
$C6E    $66DE   LD       V6, #DE         ; Load 222 into V6
$C70    $FCC4   UNKNOWN  FCC4            ; Unknown Fxxx instruction
$C72    $93F1   UNKNOWN  $93F1           ; Unknown 9xxx instruction
$C74    $F8A9   UNKNOWN  F8A9            ; Unknown Fxxx instruction
$C76    $A487   LD       I, $487         ; Load 487 into I
$C78    $3608   SE       V6, #08         ; Skip if V6 == 8
$C7A    $BB3F   JP       V0, $B3F        ; Jump to V0 + B3F
$C7C    $5C65   UNKNOWN  $5C65           ; Unknown 5xxx instruction
$C7E    $2944   CALL     $944            ; Call subroutine at 944
$C80    $B189   JP       V0, $189        ; Jump to V0 + 189
$C82    $E858   UNKNOWN  $E858           ; Unknown Exxx instruction
$C84    $C68D   RND      V6, #8D         ; V6 = random & 8D
$C86    $8936   SHR      V9              ; V9 >>= 1, VF = LSB
$C88    $0C8B   SYS      $C8B            ; System call to C8B
$C8A    $7AB6   ADD      VA, #B6         ; Add 182 to VA
$C8C    $9B94   UNKNOWN  $9B94           ; Unknown 9xxx instruction
$C8E    $97C6   UNKNOWN  $97C6           ; Unknown 9xxx instruction
$C90    $CAA6   RND      VA, #A6         ; VA = random & A6
$C92    $4920   SNE      V9, #20         ; Skip if V9 != 32
$C94    $6794   LD       V7, #94         ; Load 148 into V7
$C96    $90CD   UNKNOWN  $90CD           ; Unknown 9xxx instruction
$C98    $453C   SNE      V5, #3C         ; Skip if V5 != 60
$C9A    $D26A   DRW      V2, V6, #A      ; Draw 10-byte sprite at V2, V6
$C9C    $F9EF   UNKNOWN  F9EF            ; Unknown Fxxx instruction
$C9E    $BF0F   JP       V0, $F0F        ; Jump to V0 + F0F
$CA0    $1237   JP       $237            ; Jump to 237
$CA2    $E2AF   UNKNOWN  $E2AF           ; Unknown Exxx instruction
$CA4    $C9C9   RND      V9, #C9         ; V9 = random & C9
$CA6    $3839   SE       V8, #39         ; Skip if V8 == 57
$CA8    $5729   UNKNOWN  $5729           ; Unknown 5xxx instruction
$CAA    $26C6   CALL     $6C6            ; Call subroutine at 6C6
$CAC    $6604   LD       V6, #04         ; Load 4 into V6
$CAE    $7CDD   ADD      VC, #DD         ; Add 221 to VC
$CB0    $D18F   DRW      V1, V8, #F      ; Draw 15-byte sprite at V1, V8
$CB2    $0EF3   SYS      $EF3            ; System call to EF3
$CB4    $9C17   UNKNOWN  $9C17           ; Unknown 9xxx instruction
$CB6    $2F6D   CALL     $F6D            ; Call subroutine at F6D
$CB8    $78D2   ADD      V8, #D2         ; Add 210 to V8
$CBA    $8845   SUB      V8, V4          ; V8 -= V4, VF = !borrow
$CBC    $2A18   CALL     $A18            ; Call subroutine at A18
$CBE    $52E2   UNKNOWN  $52E2           ; Unknown 5xxx instruction
$CC0    $FE1F   UNKNOWN  FE1F            ; Unknown Fxxx instruction
$CC2    $614B   LD       V1, #4B         ; Load 75 into V1
$CC4    $09EB   SYS      $9EB            ; System call to 9EB
$CC6    $4AA8   SNE      VA, #A8         ; Skip if VA != 168
$CC8    $F8BF   UNKNOWN  F8BF            ; Unknown Fxxx instruction
$CCA    $EB25   UNKNOWN  $EB25           ; Unknown Exxx instruction
$CCC    $6E39   LD       VE, #39         ; Load 57 into VE
$CCE    $7916   ADD      V9, #16         ; Add 22 to V9
$CD0    $527E   UNKNOWN  $527E           ; Unknown 5xxx instruction
$CD2    $CFF5   RND      VF, #F5         ; VF = random & F5
$CD4    $D92E   DRW      V9, V2, #E      ; Draw 14-byte sprite at V9, V2
$CD6    $A9D4   LD       I, $9D4         ; Load 9D4 into I
$CD8    $5EB9   UNKNOWN  $5EB9           ; Unknown 5xxx instruction
$CDA    $BB70   JP       V0, $B70        ; Jump to V0 + B70
$CDC    $CF3B   RND      VF, #3B         ; VF = random & 3B
$CDE    $0D6A   SYS      $D6A            ; System call to D6A
$CE0    $94DE   UNKNOWN  $94DE           ; Unknown 9xxx instruction
$CE2    $1141   JP       $141            ; Jump to 141
$CE4    $BCD8   JP       V0, $CD8        ; Jump to V0 + CD8
$CE6    $6DF0   LD       VD, #F0         ; Load 240 into VD
$CE8    $8A19   UNKNOWN  8A19            ; Unknown 8xxx instruction
$CEA    $129C   JP       $29C            ; Jump to 29C
$CEC    $FC40   UNKNOWN  FC40            ; Unknown Fxxx instruction
$CEE    $5A57   UNKNOWN  $5A57           ; Unknown 5xxx instruction
$CF0    $918B   UNKNOWN  $918B           ; Unknown 9xxx instruction
$CF2    $A61E   LD       I, $61E         ; Load 61E into I
$CF4    $B69B   JP       V0, $69B        ; Jump to V0 + 69B
$CF6    $EEF4   UNKNOWN  $EEF4           ; Unknown Exxx instruction
$CF8    $8C4A   UNKNOWN  8C4A            ; Unknown 8xxx instruction
$CFA    $8B95   SUB      VB, V9          ; VB -= V9, VF = !borrow
$CFC    $4FF3   SNE      VF, #F3         ; Skip if VF != 243
$CFE    $1946   JP       $946            ; Jump to 946
$D00    $2732   CALL     $732            ; Call subroutine at 732
$D02    $1891   JP       $891            ; Jump to 891
$D04    $FAE8   UNKNOWN  FAE8            ; Unknown Fxxx instruction
$D06    $D0EB   DRW      V0, VE, #B      ; Draw 11-byte sprite at V0, VE
$D08    $A645   LD       I, $645         ; Load 645 into I
$D0A    $36FC   SE       V6, #FC         ; Skip if V6 == 252
$D0C    $39F5   SE       V9, #F5         ; Skip if V9 == 245
$D0E    $B0BA   JP       V0, $0BA        ; Jump to V0 + 0BA
$D10    $C0B7   RND      V0, #B7         ; V0 = random & B7
$D12    $110D   JP       $10D            ; Jump to 10D
$D14    $5DB7   UNKNOWN  $5DB7           ; Unknown 5xxx instruction
$D16    $3F8A   SE       VF, #8A         ; Skip if VF == 138
$D18    $E230   UNKNOWN  $E230           ; Unknown Exxx instruction
$D1A    $69E8   LD       V9, #E8         ; Load 232 into V9
$D1C    $895C   UNKNOWN  895C            ; Unknown 8xxx instruction
$D1E    $ACB4   LD       I, $CB4         ; Load CB4 into I
$D20    $5A8D   UNKNOWN  $5A8D           ; Unknown 5xxx instruction
$D22    $1E06   JP       $E06            ; Jump to E06
$D24    $4640   SNE      V6, #40         ; Skip if V6 != 64
$D26    $C26C   RND      V2, #6C         ; V2 = random & 6C
$D28    $9B82   UNKNOWN  $9B82           ; Unknown 9xxx instruction
$D2A    $B017   JP       V0, $017        ; Jump to V0 + 017
$D2C    $536E   UNKNOWN  $536E           ; Unknown 5xxx instruction
$D2E    $612A   LD       V1, #2A         ; Load 42 into V1
$D30    $7724   ADD      V7, #24         ; Add 36 to V7
$D32    $2B34   CALL     $B34            ; Call subroutine at B34
$D34    $F71B   UNKNOWN  F71B            ; Unknown Fxxx instruction
$D36    $7FFD   ADD      VF, #FD         ; Add 253 to VF
$D38    $30A1   SE       V0, #A1         ; Skip if V0 == 161
$D3A    $B47B   JP       V0, $47B        ; Jump to V0 + 47B
$D3C    $DFA3   DRW      VF, VA, #3      ; Draw 3-byte sprite at VF, VA
$D3E    $F6EA   UNKNOWN  F6EA            ; Unknown Fxxx instruction
$D40    $2F6B   CALL     $F6B            ; Call subroutine at F6B
$D42    $22F9   CALL     $2F9            ; Call subroutine at 2F9
$D44    $90B3   UNKNOWN  $90B3           ; Unknown 9xxx instruction
$D46    $C090   RND      V0, #90         ; V0 = random & 90
$D48    $079F   SYS      $79F            ; System call to 79F
$D4A    $F2BF   UNKNOWN  F2BF            ; Unknown Fxxx instruction
$D4C    $5CA6   UNKNOWN  $5CA6           ; Unknown 5xxx instruction
$D4E    $ECCF   UNKNOWN  $ECCF           ; Unknown Exxx instruction
$D50    $A31E   LD       I, $31E         ; Load 31E into I
$D52    $B530   JP       V0, $530        ; Jump to V0 + 530
$D54    $F852   UNKNOWN  F852            ; Unknown Fxxx instruction
$D56    $A1F2   LD       I, $1F2         ; Load 1F2 into I
$D58    $FFC3   UNKNOWN  FFC3            ; Unknown Fxxx instruction
$D5A    $B125   JP       V0, $125        ; Jump to V0 + 125
$D5C    $917B   UNKNOWN  $917B           ; Unknown 9xxx instruction
$D5E    $7095   ADD      V0, #95         ; Add 149 to V0
$D60    $8990   LD       V9, V9          ; V9 = V9
$D62    $9B2E   UNKNOWN  $9B2E           ; Unknown 9xxx instruction
$D64    $3A74   SE       VA, #74         ; Skip if VA == 116
$D66    $2425   CALL     $425            ; Call subroutine at 425
$D68    $C7BB   RND      V7, #BB         ; V7 = random & BB
$D6A    $94BD   UNKNOWN  $94BD           ; Unknown 9xxx instruction
$D6C    $CE73   RND      VE, #73         ; VE = random & 73
$D6E    $083A   SYS      $83A            ; System call to 83A
$D70    $88EB   UNKNOWN  88EB            ; Unknown 8xxx instruction
$D72    $57E4   UNKNOWN  $57E4           ; Unknown 5xxx instruction
$D74    $5331   UNKNOWN  $5331           ; Unknown 5xxx instruction
$D76    $BF4F   JP       V0, $F4F        ; Jump to V0 + F4F
$D78    $7E2B   ADD      VE, #2B         ; Add 43 to VE
$D7A    $7A32   ADD      VA, #32         ; Add 50 to VA
$D7C    $5EF2   UNKNOWN  $5EF2           ; Unknown 5xxx instruction
$D7E    $C74C   RND      V7, #4C         ; V7 = random & 4C
$D80    $9182   UNKNOWN  $9182           ; Unknown 9xxx instruction
$D82    $2E1E   CALL     $E1E            ; Call subroutine at E1E
$D84    $1400   JP       $400            ; Jump to 400
$D86    $98E9   UNKNOWN  $98E9           ; Unknown 9xxx instruction
$D88    $0F16   SYS      $F16            ; System call to F16
$D8A    $0EF2   SYS      $EF2            ; System call to EF2
$D8C    $F5B5   UNKNOWN  F5B5            ; Unknown Fxxx instruction
$D8E    $41A3   SNE      V1, #A3         ; Skip if V1 != 163
$D90    $A8CA   LD       I, $8CA         ; Load 8CA into I
$D92    $5E77   UNKNOWN  $5E77           ; Unknown 5xxx instruction
$D94    $91F8   UNKNOWN  $91F8           ; Unknown 9xxx instruction
$D96    $93FE   UNKNOWN  $93FE           ; Unknown 9xxx instruction
$D98    $8346   SHR      V3              ; V3 >>= 1, VF = LSB
$D9A    $A970   LD       I, $970         ; Load 970 into I
$D9C    $A5E3   LD       I, $5E3         ; Load 5E3 into I
$D9E    $2D22   CALL     $D22            ; Call subroutine at D22
$DA0    $15A6   JP       $5A6            ; Jump to 5A6
$DA2    $9F51   UNKNOWN  $9F51           ; Unknown 9xxx instruction
$DA4    $15F5   JP       $5F5            ; Jump to 5F5
$DA6    $B5DF   JP       V0, $5DF        ; Jump to V0 + 5DF
$DA8    $43E0   SNE      V3, #E0         ; Skip if V3 != 224
$DAA    $B6EF   JP       V0, $6EF        ; Jump to V0 + 6EF
$DAC    $A2CD   LD       I, $2CD         ; Load 2CD into I
$DAE    $3F5B   SE       VF, #5B         ; Skip if VF == 91
$DB0    $B2E4   JP       V0, $2E4        ; Jump to V0 + 2E4
$DB2    $70F9   ADD      V0, #F9         ; Add 249 to V0
$DB4    $82C5   SUB      V2, VC          ; V2 -= VC, VF = !borrow
$DB6    $3E99   SE       VE, #99         ; Skip if VE == 153
$DB8    $B907   JP       V0, $907        ; Jump to V0 + 907
$DBA    $9270   SNE      V2, V7          ; Skip if V2 != V7
$DBC    $1F72   JP       $F72            ; Jump to F72
$DBE    $4E3C   SNE      VE, #3C         ; Skip if VE != 60
$DC0    $E0C1   UNKNOWN  $E0C1           ; Unknown Exxx instruction
$DC2    $6DD3   LD       VD, #D3         ; Load 211 into VD
$DC4    $386B   SE       V8, #6B         ; Skip if V8 == 107
$DC6    $2515   CALL     $515            ; Call subroutine at 515
$DC8    $E495   UNKNOWN  $E495           ; Unknown Exxx instruction
$DCA    $07D6   SYS      $7D6            ; System call to 7D6
$DCC    $1262   JP       $262            ; Jump to 262
$DCE    $DDB2   DRW      VD, VB, #2      ; Draw 2-byte sprite at VD, VB
$DD0    $886C   UNKNOWN  886C            ; Unknown 8xxx instruction
$DD2    $67B1   LD       V7, #B1         ; Load 177 into V7
$DD4    $2013   CALL     $013            ; Call subroutine at 013
$DD6    $C86E   RND      V8, #6E         ; V8 = random & 6E
$DD8    $2A32   CALL     $A32            ; Call subroutine at A32
$DDA    $A6AC   LD       I, $6AC         ; Load 6AC into I
$DDC    $BEA5   JP       V0, $EA5        ; Jump to V0 + EA5
$DDE    $3069   SE       V0, #69         ; Skip if V0 == 105
$DE0    $198D   JP       $98D            ; Jump to 98D
$DE2    $6E57   LD       VE, #57         ; Load 87 into VE
$DE4    $01B8   SYS      $1B8            ; System call to 1B8
$DE6    $5CE9   UNKNOWN  $5CE9           ; Unknown 5xxx instruction
$DE8    $FB54   UNKNOWN  FB54            ; Unknown Fxxx instruction
$DEA    $F90C   UNKNOWN  F90C            ; Unknown Fxxx instruction
$DEC    $2959   CALL     $959            ; Call subroutine at 959
$DEE    $3FD9   SE       VF, #D9         ; Skip if VF == 217
$DF0    $77A1   ADD      V7, #A1         ; Add 161 to V7
$DF2    $2C8B   CALL     $C8B            ; Call subroutine at C8B
$DF4    $BE0C   JP       V0, $E0C        ; Jump to V0 + E0C
$DF6    $2B26   CALL     $B26            ; Call subroutine at B26
$DF8    $8553   XOR      V5, V5          ; V5 ^= V5
$DFA    $3371   SE       V3, #71         ; Skip if V3 == 113
$DFC    $6360   LD       V3, #60         ; Load 96 into V3
$DFE    $2431   CALL     $431            ; Call subroutine at 431
$E00    $3857   SE       V8, #57         ; Skip if V8 == 87
$E02    $36A1   SE       V6, #A1         ; Skip if V6 == 161
$E04    $1569   JP       $569            ; Jump to 569
$E06    $B3D5   JP       V0, $3D5        ; Jump to V0 + 3D5
$E08    $AA7D   LD       I, $A7D         ; Load A7D into I
$E0A    $68F3   LD       V8, #F3         ; Load 243 into V8
$E0C    $EC02   UNKNOWN  $EC02           ; Unknown Exxx instruction
$E0E    $4232   SNE      V2, #32         ; Skip if V2 != 50
$E10    $C02F   RND      V0, #2F         ; V0 = random & 2F
$E12    $89D0   LD       V9, VD          ; V9 = VD
$E14    $F721   UNKNOWN  F721            ; Unknown Fxxx instruction
$E16    $29FF   CALL     $9FF            ; Call subroutine at 9FF
$E18    $C740   RND      V7, #40         ; V7 = random & 40
$E1A    $92AC   UNKNOWN  $92AC           ; Unknown 9xxx instruction
$E1C    $138B   JP       $38B            ; Jump to 38B
$E1E    $5342   UNKNOWN  $5342           ; Unknown 5xxx instruction
$E20    $D600   DRW      V6, V0, #0      ; Draw 0-byte sprite at V6, V0
$E22    $63B0   LD       V3, #B0         ; Load 176 into V3
$E24    $86C0   LD       V6, VC          ; V6 = VC
$E26    $0D43   SYS      $D43            ; System call to D43
$E28    $4C66   SNE      VC, #66         ; Skip if VC != 102
$E2A    $FA6F   UNKNOWN  FA6F            ; Unknown Fxxx instruction
$E2C    $67E0   LD       V7, #E0         ; Load 224 into V7
$E2E    $B278   JP       V0, $278        ; Jump to V0 + 278
$E30    $63AA   LD       V3, #AA         ; Load 170 into V3
$E32    $3046   SE       V0, #46         ; Skip if V0 == 70
$E34    $03A6   SYS      $3A6            ; System call to 3A6
$E36    $E233   UNKNOWN  $E233           ; Unknown Exxx instruction
$E38    $7F58   ADD      VF, #58         ; Add 88 to VF
$E3A    $432E   SNE      V3, #2E         ; Skip if V3 != 46
$E3C    $CF1B   RND      VF, #1B         ; VF = random & 1B
$E3E    $B2E2   JP       V0, $2E2        ; Jump to V0 + 2E2
$E40    $ECB4   UNKNOWN  $ECB4           ; Unknown Exxx instruction
$E42    $2C31   CALL     $C31            ; Call subroutine at C31
$E44    $355A   SE       V5, #5A         ; Skip if V5 == 90
$E46    $A53C   LD       I, $53C         ; Load 53C into I
$E48    $1B82   JP       $B82            ; Jump to B82
$E4A    $D411   DRW      V4, V1, #1      ; Draw 1-byte sprite at V4, V1
$E4C    $9CF5   UNKNOWN  $9CF5           ; Unknown 9xxx instruction
$E4E    $6AC2   LD       VA, #C2         ; Load 194 into VA
$E50    $0FE6   SYS      $FE6            ; System call to FE6
$E52    $4B27   SNE      VB, #27         ; Skip if VB != 39
$E54    $621C   LD       V2, #1C         ; Load 28 into V2
$E56    $AE55   LD       I, $E55         ; Load E55 into I
$E58    $0027   SYS      $027            ; System call to 027
$E5A    $0774   SYS      $774            ; System call to 774
$E5C    $59E2   UNKNOWN  $59E2           ; Unknown 5xxx instruction
$E5E    $D52E   DRW      V5, V2, #E      ; Draw 14-byte sprite at V5, V2
$E60    $3C28   SE       VC, #28         ; Skip if VC == 40
$E62    $A331   LD       I, $331         ; Load 331 into I
$E64    $36A6   SE       V6, #A6         ; Skip if V6 == 166
$E66    $C99F   RND      V9, #9F         ; V9 = random & 9F
$E68    $6740   LD       V7, #40         ; Load 64 into V7
$E6A    $2F99   CALL     $F99            ; Call subroutine at F99
$E6C    $B309   JP       V0, $309        ; Jump to V0 + 309
$E6E    $1EF3   JP       $EF3            ; Jump to EF3
$E70    $D72D   DRW      V7, V2, #D      ; Draw 13-byte sprite at V7, V2
$E72    $8DCF   UNKNOWN  8DCF            ; Unknown 8xxx instruction
$E74    $E2D5   UNKNOWN  $E2D5           ; Unknown Exxx instruction
$E76    $99DC   UNKNOWN  $99DC           ; Unknown 9xxx instruction
$E78    $8C7A   UNKNOWN  8C7A            ; Unknown 8xxx instruction
$E7A    $C862   RND      V8, #62         ; V8 = random & 62
$E7C    $EE37   UNKNOWN  $EE37           ; Unknown Exxx instruction
$E7E    $080C   SYS      $80C            ; System call to 80C
$E80    $8937   SUBN     V9, V3          ; V9 = V3 - V9, VF = !borrow
$E82    $1BBD   JP       $BBD            ; Jump to BBD
$E84    $A62F   LD       I, $62F         ; Load 62F into I
$E86    $84D8   UNKNOWN  84D8            ; Unknown 8xxx instruction
$E88    $DD8D   DRW      VD, V8, #D      ; Draw 13-byte sprite at VD, V8
$E8A    $E28D   UNKNOWN  $E28D           ; Unknown Exxx instruction
$E8C    $8532   AND      V5, V3          ; V5 &= V3
$E8E    $F5F0   UNKNOWN  F5F0            ; Unknown Fxxx instruction
$E90    $F04F   UNKNOWN  F04F            ; Unknown Fxxx instruction
$E92    $80AD   UNKNOWN  80AD            ; Unknown 8xxx instruction
$E94    $25D4   CALL     $5D4            ; Call subroutine at 5D4
$E96    $D59E   DRW      V5, V9, #E      ; Draw 14-byte sprite at V5, V9
$E98    $7725   ADD      V7, #25         ; Add 37 to V7
$E9A    $CECA   RND      VE, #CA         ; VE = random & CA
$E9C    $0040   SYS      $040            ; System call to 040
$E9E    $0186   SYS      $186            ; System call to 186
$EA0    $1B6F   JP       $B6F            ; Jump to B6F
$EA2    $3EF4   SE       VE, #F4         ; Skip if VE == 244
$EA4    $22CC   CALL     $2CC            ; Call subroutine at 2CC
$EA6    $0AB2   SYS      $AB2            ; System call to AB2
$EA8    $D3F3   DRW      V3, VF, #3      ; Draw 3-byte sprite at V3, VF
$EAA    $BD63   JP       V0, $D63        ; Jump to V0 + D63
$EAC    $5CC1   UNKNOWN  $5CC1           ; Unknown 5xxx instruction
$EAE    $A32C   LD       I, $32C         ; Load 32C into I
$EB0    $70FA   ADD      V0, #FA         ; Add 250 to V0
$EB2    $9088   UNKNOWN  $9088           ; Unknown 9xxx instruction
$EB4    $0745   SYS      $745            ; System call to 745
$EB6    $C5D0   RND      V5, #D0         ; V5 = random & D0
$EB8    $2042   CALL     $042            ; Call subroutine at 042
$EBA    $B5F3   JP       V0, $5F3        ; Jump to V0 + 5F3
$EBC    $AB91   LD       I, $B91         ; Load B91 into I
$EBE    $34B9   SE       V4, #B9         ; Skip if V4 == 185
$EC0    $2FD3   CALL     $FD3            ; Call subroutine at FD3
$EC2    $87AE   SHL      V7              ; V7 <<= 1, VF = MSB
$EC4    $6AB4   LD       VA, #B4         ; Load 180 into VA
$EC6    $F5F3   UNKNOWN  F5F3            ; Unknown Fxxx instruction
$EC8    $ECB5   UNKNOWN  $ECB5           ; Unknown Exxx instruction
$ECA    $1BFA   JP       $BFA            ; Jump to BFA
$ECC    $4F4D   SNE      VF, #4D         ; Skip if VF != 77
$ECE    $E548   UNKNOWN  $E548           ; Unknown Exxx instruction
$ED0    $B0AD   JP       V0, $0AD        ; Jump to V0 + 0AD
$ED2    $99D6   UNKNOWN  $99D6           ; Unknown 9xxx instruction
$ED4    $1F38   JP       $F38            ; Jump to F38
$ED6    $6E6F   LD       VE, #6F         ; Load 111 into VE
$ED8    $F993   UNKNOWN  F993            ; Unknown Fxxx instruction
$EDA    $90C1   UNKNOWN  $90C1           ; Unknown 9xxx instruction
$EDC    $A641   LD       I, $641         ; Load 641 into I
$EDE    $30C4   SE       V0, #C4         ; Skip if V0 == 196
$EE0    $0A29   SYS      $A29            ; System call to A29
$EE2    $A323   LD       I, $323         ; Load 323 into I
$EE4    $FED5   UNKNOWN  FED5            ; Unknown Fxxx instruction
$EE6    $472B   SNE      V7, #2B         ; Skip if V7 != 43
$EE8    $30F3   SE       V0, #F3         ; Skip if V0 == 243
$EEA    $E1CA   UNKNOWN  $E1CA           ; Unknown Exxx instruction
$EEC    $21F4   CALL     $1F4            ; Call subroutine at 1F4
$EEE    $AED5   LD       I, $ED5         ; Load ED5 into I
$EF0    $8535   SUB      V5, V3          ; V5 -= V3, VF = !borrow
$EF2    $2C40   CALL     $C40            ; Call subroutine at C40
$EF4    $5E73   UNKNOWN  $5E73           ; Unknown 5xxx instruction
$EF6    $26C3   CALL     $6C3            ; Call subroutine at 6C3
$EF8    $AB8F   LD       I, $B8F         ; Load B8F into I
$EFA    $CE47   RND      VE, #47         ; VE = random & 47
$EFC    $DC6B   DRW      VC, V6, #B      ; Draw 11-byte sprite at VC, V6
$EFE    $B75C   JP       V0, $75C        ; Jump to V0 + 75C
$F00    $AE47   LD       I, $E47         ; Load E47 into I
$F02    $476A   SNE      V7, #6A         ; Skip if V7 != 106
$F04    $6F88   LD       VF, #88         ; Load 136 into VF
$F06    $64A9   LD       V4, #A9         ; Load 169 into V4
$F08    $D310   DRW      V3, V1, #0      ; Draw 0-byte sprite at V3, V1
$F0A    $7039   ADD      V0, #39         ; Add 57 to V0
$F0C    $FDBF   UNKNOWN  FDBF            ; Unknown Fxxx instruction
$F0E    $1838   JP       $838            ; Jump to 838
$F10    $6661   LD       V6, #61         ; Load 97 into V6
$F12    $5D21   UNKNOWN  $5D21           ; Unknown 5xxx instruction
$F14    $A850   LD       I, $850         ; Load 850 into I
$F16    $3FA0   SE       VF, #A0         ; Skip if VF == 160
$F18    $BFF8   JP       V0, $FF8        ; Jump to V0 + FF8
$F1A    $2A51   CALL     $A51            ; Call subroutine at A51
$F1C    $3BAD   SE       VB, #AD         ; Skip if VB == 173
$F1E    $FAA9   UNKNOWN  FAA9            ; Unknown Fxxx instruction
$F20    $4415   SNE      V4, #15         ; Skip if V4 != 21
$F22    $1E88   JP       $E88            ; Jump to E88
$F24    $4E1B   SNE      VE, #1B         ; Skip if VE != 27
$F26    $9EFC   UNKNOWN  $9EFC           ; Unknown 9xxx instruction
$F28    $014B   SYS      $14B            ; System call to 14B
$F2A    $FB8B   UNKNOWN  FB8B            ; Unknown Fxxx instruction
$F2C    $793A   ADD      V9, #3A         ; Add 58 to V9
$F2E    $D68F   DRW      V6, V8, #F      ; Draw 15-byte sprite at V6, V8
$F30    $B33D   JP       V0, $33D        ; Jump to V0 + 33D
$F32    $E0E5   UNKNOWN  $E0E5           ; Unknown Exxx instruction
$F34    $5543   UNKNOWN  $5543           ; Unknown 5xxx instruction
$F36    $1F73   JP       $F73            ; Jump to F73
$F38    $ADF7   LD       I, $DF7         ; Load DF7 into I
$F3A    $8080   LD       V0, V8          ; V0 = V8
$F3C    $8254   ADD      V2, V5          ; V2 += V5, VF = carry
$F3E    $E1BC   UNKNOWN  $E1BC           ; Unknown Exxx instruction
$F40    $B245   JP       V0, $245        ; Jump to V0 + 245
$F42    $595F   UNKNOWN  $595F           ; Unknown 5xxx instruction
$F44    $5E63   UNKNOWN  $5E63           ; Unknown 5xxx instruction
$F46    $2603   CALL     $603            ; Call subroutine at 603
$F48    $C636   RND      V6, #36         ; V6 = random & 36
$F4A    $6098   LD       V0, #98         ; Load 152 into V0
$F4C    $9B65   UNKNOWN  $9B65           ; Unknown 9xxx instruction
$F4E    $6486   LD       V4, #86         ; Load 134 into V4
$F50    $D4DB   DRW      V4, VD, #B      ; Draw 11-byte sprite at V4, VD
$F52    $296A   CALL     $96A            ; Call subroutine at 96A
$F54    $F615   LD       DT, V6          ; Delay timer = V6
$F56    $C21D   RND      V2, #1D         ; V2 = random & 1D
$F58    $4777   SNE      V7, #77         ; Skip if V7 != 119
$F5A    $1F00   JP       $F00            ; Jump to F00
$F5C    $9F45   UNKNOWN  $9F45           ; Unknown 9xxx instruction
$F5E    $F983   UNKNOWN  F983            ; Unknown Fxxx instruction
$F60    $574A   UNKNOWN  $574A           ; Unknown 5xxx instruction
$F62    $2F76   CALL     $F76            ; Call subroutine at F76
$F64    $DA60   DRW      VA, V6, #0      ; Draw 0-byte sprite at VA, V6
$F66    $1B6F   JP       $B6F            ; Jump to B6F
$F68    $4404   SNE      V4, #04         ; Skip if V4 != 4
$F6A    $3EB0   SE       VE, #B0         ; Skip if VE == 176
$F6C    $0784   SYS      $784            ; System call to 784
$F6E    $D27F   DRW      V2, V7, #F      ; Draw 15-byte sprite at V2, V7
$F70    $05F5   SYS      $5F5            ; System call to 5F5
$F72    $DF9D   DRW      VF, V9, #D      ; Draw 13-byte sprite at VF, V9
$F74    $F1ED   UNKNOWN  F1ED            ; Unknown Fxxx instruction
$F76    $5E69   UNKNOWN  $5E69           ; Unknown 5xxx instruction
$F78    $7285   ADD      V2, #85         ; Add 133 to V2
$F7A    $1071   JP       $071            ; Jump to 071
$F7C    $4873   SNE      V8, #73         ; Skip if V8 != 115
$F7E    $A057   LD       I, $057         ; Load 057 into I
$F80    $8A51   OR       VA, V5          ; VA |= V5
$F82    $7097   ADD      V0, #97         ; Add 151 to V0
$F84    $EC8E   UNKNOWN  $EC8E           ; Unknown Exxx instruction
$F86    $830F   UNKNOWN  830F            ; Unknown 8xxx instruction
$F88    $8DCA   UNKNOWN  8DCA            ; Unknown 8xxx instruction
$F8A    $47DA   SNE      V7, #DA         ; Skip if V7 != 218
$F8C    $696A   LD       V9, #6A         ; Load 106 into V9
$F8E    $2EA1   CALL     $EA1            ; Call subroutine at EA1
$F90    $A79B   LD       I, $79B         ; Load 79B into I
$F92    $EAD0   UNKNOWN  $EAD0           ; Unknown Exxx instruction
$F94    $3BCE   SE       VB, #CE         ; Skip if VB == 206
$F96    $F6AE   UNKNOWN  F6AE            ; Unknown Fxxx instruction
$F98    $61C3   LD       V1, #C3         ; Load 195 into V1
$F9A    $DEDB   DRW      VE, VD, #B      ; Draw 11-byte sprite at VE, VD
$F9C    $0700   SYS      $700            ; System call to 700
$F9E    $0153   SYS      $153            ; System call to 153
$FA0    $A131   LD       I, $131         ; Load 131 into I
$FA2    $CAF9   RND      VA, #F9         ; VA = random & F9
$FA4    $0BB3   SYS      $BB3            ; System call to BB3
$FA6    $A21C   LD       I, $21C         ; Load 21C into I
$FA8    $F2F0   UNKNOWN  F2F0            ; Unknown Fxxx instruction
$FAA    $FFBE   UNKNOWN  FFBE            ; Unknown Fxxx instruction
$FAC    $003B   SYS      $03B            ; System call to 03B
$FAE    $50DF   UNKNOWN  $50DF           ; Unknown 5xxx instruction
$FB0    $3ED6   SE       VE, #D6         ; Skip if VE == 214
$FB2    $DBBB   DRW      VB, VB, #B      ; Draw 11-byte sprite at VB, VB
$FB4    $DD57   DRW      VD, V5, #7      ; Draw 7-byte sprite at VD, V5
$FB6    $AB8D   LD       I, $B8D         ; Load B8D into I
$FB8    $F834   UNKNOWN  F834            ; Unknown Fxxx instruction
$FBA    $1913   JP       $913            ; Jump to 913
$FBC    $B772   JP       V0, $772        ; Jump to V0 + 772
$FBE    $3020   SE       V0, #20         ; Skip if V0 == 32
$FC0    $DC7C   DRW      VC, V7, #C      ; Draw 12-byte sprite at VC, V7
$FC2    $735A   ADD      V3, #5A         ; Add 90 to V3
$FC4    $3106   SE       V1, #06         ; Skip if V1 == 6
$FC6    $483C   SNE      V8, #3C         ; Skip if V8 != 60
$FC8    $EECC   UNKNOWN  $EECC           ; Unknown Exxx instruction
$FCA    $692C   LD       V9, #2C         ; Load 44 into V9
$FCC    $EFA7   UNKNOWN  $EFA7           ; Unknown Exxx instruction
$FCE    $85E6   SHR      V5              ; V5 >>= 1, VF = LSB
$FD0    $B766   JP       V0, $766        ; Jump to V0 + 766
$FD2    $381B   SE       V8, #1B         ; Skip if V8 == 27
$FD4    $E332   UNKNOWN  $E332           ; Unknown Exxx instruction
$FD6    $E2B3   UNKNOWN  $E2B3           ; Unknown Exxx instruction
$FD8    $00B4   SYS      $0B4            ; System call to 0B4
$FDA    $21DC   CALL     $1DC            ; Call subroutine at 1DC
$FDC    $8218   UNKNOWN  8218            ; Unknown 8xxx instruction
$FDE    $B995   JP       V0, $995        ; Jump to V0 + 995
$FE0    $D5CC   DRW      V5, VC, #C      ; Draw 12-byte sprite at V5, VC
$FE2    $6FF1   LD       VF, #F1         ; Load 241 into VF
$FE4    $74B5   ADD      V4, #B5         ; Add 181 to V4
$FE6    $409B   SNE      V0, #9B         ; Skip if V0 != 155
$FE8    $9859   UNKNOWN  $9859           ; Unknown 9xxx instruction
$FEA    $2913   CALL     $913            ; Call subroutine at 913
$FEC    $FE40   UNKNOWN  FE40            ; Unknown Fxxx instruction
$FEE    $4E5E   SNE      VE, #5E         ; Skip if VE != 94
$FF0    $BEE7   JP       V0, $EE7        ; Jump to V0 + EE7
$FF2    $2501   CALL     $501            ; Call subroutine at 501
$FF4    $1C4C   JP       $C4C            ; Jump to C4C
$FF6    $EDBC   UNKNOWN  $EDBC           ; Unknown Exxx instruction
$FF8    $75B8   ADD      V5, #B8         ; Add 184 to V5
$FFA    $C846   RND      V8, #46         ; V8 = random & 46
$FFC    $1204   JP       $204            ; Jump to 204
$FFE    $B8F3   JP       V0, $8F3        ; Jump to V0 + 8F3

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 502 (28.0%)
  LD      : 222 (12.4%)
  JP      : 206 (11.5%)
  CALL    : 154 ( 8.6%)
  SNE     : 119 ( 6.6%)
  SE      : 116 ( 6.5%)
  SYS     : 111 ( 6.2%)
  DRW     : 110 ( 6.1%)
  RND     : 108 ( 6.0%)
  ADD     :  97 ( 5.4%)
  SUB     :   9 ( 0.5%)
  SUBN    :   8 ( 0.4%)
  OR      :   7 ( 0.4%)
  SHL     :   6 ( 0.3%)
  XOR     :   6 ( 0.3%)
  AND     :   5 ( 0.3%)
  SHR     :   5 ( 0.3%)
  SKP     :   1 ( 0.1%)

Memory Operations: 319 (17.8%)
Arithmetic Operations: 132 (7.4%)
