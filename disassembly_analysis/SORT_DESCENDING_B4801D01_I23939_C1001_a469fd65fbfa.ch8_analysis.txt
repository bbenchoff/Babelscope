
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B4801D01_I23939_C1001_a469fd65fbfa.ch8
ROM Size: 3584 bytes
Instructions Found: 1791

DISCOVERY INFORMATION:
Batch: 4801
Instance: 23939
Direction: descending
Final Array: [240, 200, 132, 132, 10, 0, 0, 0]
Operations: R:0 W:1 C:96 S:3

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 119
Sort Array References:
  $200: LD I, $A0D ; Load A0D into I
  $226: LD I, $24C ; Load 24C into I
  $286: LD I, $563 ; Load 563 into I
  $2DC: LD I, $2AB ; Load 2AB into I
  $2F0: LD I, $4A8 ; Load 4A8 into I
  $2F2: LD I, $187 ; Load 187 into I
  $30C: LD I, $A10 ; Load A10 into I
  $31A: LD I, $DC7 ; Load DC7 into I
  $378: LD I, $3EA ; Load 3EA into I
  $37E: LD I, $4DB ; Load 4DB into I
  $384: LD I, $5D6 ; Load 5D6 into I
  $3BA: LD I, $3DF ; Load 3DF into I
  $3E0: LD I, $58C ; Load 58C into I
  $3FA: LD I, $569 ; Load 569 into I
  $41A: LD I, $1FC ; Load 1FC into I
  $432: LD I, $972 ; Load 972 into I
  $462: LD I, $87B ; Load 87B into I
  $464: LD I, $88F ; Load 88F into I
  $476: LD I, $ECA ; Load ECA into I
  $486: LD I, $126 ; Load 126 into I
  $4A0: LD I, $F5D ; Load F5D into I
  $4E0: LD I, $481 ; Load 481 into I
  $4F4: LD I, $335 ; Load 335 into I
  $4FA: LD I, $A72 ; Load A72 into I
  $508: LD I, $FFC ; Load FFC into I
  $55E: LD I, $443 ; Load 443 into I
  $562: LD I, $A1B ; Load A1B into I
  $56A: LD I, $F96 ; Load F96 into I
  $58E: LD I, $FC4 ; Load FC4 into I
  $5B2: LD I, $734 ; Load 734 into I
  $5BE: LD I, $2D0 ; Load 2D0 into I
  $5D0: LD I, $793 ; Load 793 into I
  $5F0: LD I, $438 ; Load 438 into I
  $5F4: LD I, $A01 ; Load A01 into I
  $602: LD I, $08A ; Load 08A into I
  $626: LD I, $424 ; Load 424 into I
  $62A: LD I, $B97 ; Load B97 into I
  $632: LD I, $D19 ; Load D19 into I
  $652: LD I, $B71 ; Load B71 into I
  $67A: LD I, $F26 ; Load F26 into I
  $6D2: LD I, $5EE ; Load 5EE into I
  $6DA: LD I, $60D ; Load 60D into I
  $6DE: LD I, $86E ; Load 86E into I
  $6E2: ADD I, VB ; I ADDRESS MANIPULATION
  $6F6: LD I, $03A ; Load 03A into I
  $702: LD I, $088 ; Load 088 into I
  $70A: LD I, $2BA ; Load 2BA into I
  $752: LD I, $C2C ; Load C2C into I
  $76E: LD I, $DA1 ; Load DA1 into I
  $78A: LD I, $667 ; Load 667 into I
  $7D4: LD I, $BB2 ; Load BB2 into I
  $7D6: LD I, $BC7 ; Load BC7 into I
  $7F6: LD I, $21B ; Load 21B into I
  $80C: LD I, $6D4 ; Load 6D4 into I
  $842: LD I, $20E ; Load 20E into I
  $872: LD I, $38C ; Load 38C into I
  $886: LD I, $676 ; Load 676 into I
  $8C0: LD I, $64C ; Load 64C into I
  $8C2: LD I, $75C ; Load 75C into I
  $8CC: ADD I, VE ; I ADDRESS MANIPULATION
  $8FA: LD I, $910 ; Load 910 into I
  $912: LD I, $24E ; Load 24E into I
  $924: LD I, $188 ; Load 188 into I
  $934: LD I, $EA5 ; Load EA5 into I
  $95E: LD I, $C98 ; Load C98 into I
  $96A: LD I, $192 ; Load 192 into I
  $99E: LD I, $D11 ; Load D11 into I
  $9B0: LD I, $FCC ; Load FCC into I
  $9F2: LD I, $202 ; Load 202 into I
  $A20: LD I, $F34 ; Load F34 into I
  $A44: LD I, $8FF ; Load 8FF into I
  $A4E: LD I, $596 ; Load 596 into I
  $A56: LD I, $EE8 ; Load EE8 into I
  $A60: LD I, $2B1 ; Load 2B1 into I
  $A7A: LD I, $BD2 ; Load BD2 into I
  $ABC: LD I, $2A0 ; Load 2A0 into I
  $AD6: LD I, $D6B ; Load D6B into I
  $AEA: LD I, $BE6 ; Load BE6 into I
  $B46: LD I, $223 ; Load 223 into I
  $B60: LD I, $3F1 ; Load 3F1 into I
  $B7E: LD I, $EFE ; Load EFE into I
  $BA0: LD I, $201 ; Load 201 into I
  $BA4: LD I, $3FD ; Load 3FD into I
  $BB4: LD I, $B64 ; Load B64 into I
  $BCC: LD I, $0C5 ; Load 0C5 into I
  $BCE: LD I, $D38 ; Load D38 into I
  $BD4: LD I, $BFA ; Load BFA into I
  $BE4: LD I, $EB2 ; Load EB2 into I
  $C12: LD I, $590 ; Load 590 into I
  $C20: LD I, $B43 ; Load B43 into I
  $C42: LD I, $7AC ; Load 7AC into I
  $C54: LD I, $E3C ; Load E3C into I
  $C56: LD I, $C38 ; Load C38 into I
  $C70: LD I, $A33 ; Load A33 into I
  $C8E: LD I, $D29 ; Load D29 into I
  $C9C: LD I, $B18 ; Load B18 into I
  $CA8: LD I, $654 ; Load 654 into I
  $CE0: LD I, $F50 ; Load F50 into I
  $CF2: LD I, $4BB ; Load 4BB into I
  $D56: LD I, $8BD ; Load 8BD into I
  $D6A: LD I, $101 ; Load 101 into I
  $D92: LD I, $D2A ; Load D2A into I
  $DAA: LD I, $088 ; Load 088 into I
  $DD0: LD I, $760 ; Load 760 into I
  $DDE: LD I, $FD9 ; Load FD9 into I
  $DEC: LD I, $4DF ; Load 4DF into I
  $DF4: LD I, $1CA ; Load 1CA into I
  $E0C: LD I, $67A ; Load 67A into I
  $E28: LD I, $8E4 ; Load 8E4 into I
  $E4C: LD I, $8B3 ; Load 8B3 into I
  $E60: LD I, $406 ; Load 406 into I
  $E68: LD I, $514 ; Load 514 into I
  $E7E: LD I, $76B ; Load 76B into I
  $E84: LD I, $9F0 ; Load 9F0 into I
  $EF4: LD I, $22A ; Load 22A into I
  $F1C: LD I, $7BD ; Load 7BD into I
  $F40: LD I, $FD2 ; Load FD2 into I
  $F54: LD I, $50E ; Load 50E into I
  $FB8: LD I, $AA3 ; Load AA3 into I

CONTROL FLOW ANALYSIS:
Jumps: 213
Calls: 111
Branches: 228
Loops: 126
Loop Structures:
  $2F6 -> $108 (backward jump)
  $3D4 -> $20F (backward jump)
  $47E -> $39F (backward jump)
  $488 -> $03D (backward jump)
  $4AA -> $2E6 (backward jump)
  $57A -> $0FB (backward jump)
  $582 -> $50F (backward jump)
  $592 -> $2D5 (backward jump)
  $5BC -> $26D (backward jump)
  $606 -> $3F0 (backward jump)
  $63E -> $357 (backward jump)
  $670 -> $1A9 (backward jump)
  $710 -> $6FF (backward jump)
  $720 -> $53B (backward jump)
  $74A -> $62A (backward jump)
  $76C -> $1CE (backward jump)
  $778 -> $024 (backward jump)
  $782 -> $43A (backward jump)
  $7B0 -> $566 (backward jump)
  $7BE -> $7B3 (backward jump)
  $7C2 -> $628 (backward jump)
  $7CC -> $277 (backward jump)
  $804 -> $707 (backward jump)
  $824 -> $119 (backward jump)
  $828 -> $202 (backward jump)
  $836 -> $2AA (backward jump)
  $898 -> $0BB (backward jump)
  $8C8 -> $5C0 (backward jump)
  $8D2 -> $2FA (backward jump)
  $8EA -> $01F (backward jump)
  $902 -> $025 (backward jump)
  $980 -> $8DC (backward jump)
  $986 -> $7A3 (backward jump)
  $98C -> $25C (backward jump)
  $992 -> $742 (backward jump)
  $9A6 -> $06B (backward jump)
  $9B8 -> $2A2 (backward jump)
  $9BA -> $4EE (backward jump)
  $9C0 -> $193 (backward jump)
  $9E4 -> $75D (backward jump)
  $9E6 -> $294 (backward jump)
  $9E8 -> $1DA (backward jump)
  $9FA -> $5DE (backward jump)
  $9FE -> $10E (backward jump)
  $A0E -> $1BC (backward jump)
  $A32 -> $6E4 (backward jump)
  $A36 -> $495 (backward jump)
  $A6A -> $824 (backward jump)
  $A6E -> $682 (backward jump)
  $A78 -> $47F (backward jump)
  $A7C -> $847 (backward jump)
  $AA0 -> $6BC (backward jump)
  $AA4 -> $472 (backward jump)
  $AAA -> $851 (backward jump)
  $AAE -> $861 (backward jump)
  $ABE -> $174 (backward jump)
  $AC0 -> $056 (backward jump)
  $B02 -> $65B (backward jump)
  $B12 -> $02C (backward jump)
  $B14 -> $0FD (backward jump)
  $B26 -> $428 (backward jump)
  $B48 -> $997 (backward jump)
  $B70 -> $5F0 (backward jump)
  $B82 -> $134 (backward jump)
  $BA2 -> $200 (backward jump)
  $BB6 -> $63D (backward jump)
  $BC8 -> $02D (backward jump)
  $BD6 -> $A74 (backward jump)
  $BE0 -> $AE7 (backward jump)
  $BF4 -> $306 (backward jump)
  $BFC -> $9DA (backward jump)
  $C04 -> $5F5 (backward jump)
  $C0C -> $BC6 (backward jump)
  $C2E -> $6FC (backward jump)
  $C40 -> $61A (backward jump)
  $C5C -> $6C8 (backward jump)
  $C5E -> $750 (backward jump)
  $C62 -> $50B (backward jump)
  $C64 -> $7F3 (backward jump)
  $C68 -> $28E (backward jump)
  $C76 -> $1A6 (backward jump)
  $C82 -> $B21 (backward jump)
  $C9E -> $867 (backward jump)
  $CC2 -> $7BC (backward jump)
  $CCA -> $848 (backward jump)
  $CCC -> $3E4 (backward jump)
  $CDC -> $624 (backward jump)
  $D10 -> $697 (backward jump)
  $D12 -> $0C5 (backward jump)
  $D18 -> $842 (backward jump)
  $D20 -> $0BB (backward jump)
  $D2A -> $8CE (backward jump)
  $D40 -> $208 (backward jump)
  $D4E -> $798 (backward jump)
  $D70 -> $B7F (backward jump)
  $D88 -> $402 (backward jump)
  $D94 -> $699 (backward jump)
  $D96 -> $4C7 (backward jump)
  $DAE -> $A69 (backward jump)
  $DC0 -> $446 (backward jump)
  $DFA -> $2CF (backward jump)
  $DFC -> $011 (backward jump)
  $E32 -> $CE1 (backward jump)
  $E3E -> $695 (backward jump)
  $E42 -> $D9D (backward jump)
  $E46 -> $3F7 (backward jump)
  $E6C -> $C65 (backward jump)
  $E70 -> $86A (backward jump)
  $E74 -> $3A9 (backward jump)
  $EBC -> $0FE (backward jump)
  $EEA -> $697 (backward jump)
  $F02 -> $D73 (backward jump)
  $F12 -> $21D (backward jump)
  $F2E -> $59A (backward jump)
  $F3E -> $F2E (backward jump)
  $F4A -> $1D5 (backward jump)
  $F50 -> $045 (backward jump)
  $F56 -> $8F0 (backward jump)
  $F5E -> $F08 (backward jump)
  $FA6 -> $98F (backward jump)
  $FBA -> $49B (backward jump)
  $FCA -> $C39 (backward jump)
  $FCC -> $AC0 (backward jump)
  $FE0 -> $9BF (backward jump)
  $FE2 -> $A3D (backward jump)
  $FE6 -> $C46 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $AA0D   LD       I, $A0D         ; Load A0D into I
$202    $E3EA   UNKNOWN  $E3EA           ; Unknown Exxx instruction
$204    $68AF   LD       V8, #AF         ; Load 175 into V8
$206    $7CA5   ADD      VC, #A5         ; Add 165 to VC
$208    $49A6   SNE      V9, #A6         ; Skip if V9 != 166
$20A    $0ECB   SYS      $ECB            ; System call to ECB
$20C    $FDDB   UNKNOWN  FDDB            ; Unknown Fxxx instruction
$20E    $4BEE   SNE      VB, #EE         ; Skip if VB != 238
$210    $CDE7   RND      VD, #E7         ; VD = random & E7
$212    $3B7E   SE       VB, #7E         ; Skip if VB == 126
$214    $2D92   CALL     $D92            ; Call subroutine at D92
$216    $2E6B   CALL     $E6B            ; Call subroutine at E6B
$218    $6C0D   LD       VC, #0D         ; Load 13 into VC
$21A    $36C4   SE       V6, #C4         ; Skip if V6 == 196
$21C    $4F66   SNE      VF, #66         ; Skip if VF != 102
$21E    $BA53   JP       V0, $A53        ; Jump to V0 + A53
$220    $1877   JP       $877            ; Jump to 877
$222    $313E   SE       V1, #3E         ; Skip if V1 == 62
$224    $37C4   SE       V7, #C4         ; Skip if V7 == 196
$226    $A24C   LD       I, $24C         ; Load 24C into I
$228    $83F1   OR       V3, VF          ; V3 |= VF
$22A    $E763   UNKNOWN  $E763           ; Unknown Exxx instruction
$22C    $7763   ADD      V7, #63         ; Add 99 to V7
$22E    $02F5   SYS      $2F5            ; System call to 2F5
$230    $EA8A   UNKNOWN  $EA8A           ; Unknown Exxx instruction
$232    $DCCF   DRW      VC, VC, #F      ; Draw 15-byte sprite at VC, VC
$234    $B98A   JP       V0, $98A        ; Jump to V0 + 98A
$236    $B3DE   JP       V0, $3DE        ; Jump to V0 + 3DE
$238    $8966   SHR      V9              ; V9 >>= 1, VF = LSB
$23A    $E83D   UNKNOWN  $E83D           ; Unknown Exxx instruction
$23C    $E11A   UNKNOWN  $E11A           ; Unknown Exxx instruction
$23E    $9D50   SNE      VD, V5          ; Skip if VD != V5
$240    $FD29   LD       F, VD           ; I = sprite address for digit VD
$242    $DCBC   DRW      VC, VB, #C      ; Draw 12-byte sprite at VC, VB
$244    $C017   RND      V0, #17         ; V0 = random & 17
$246    $01DD   SYS      $1DD            ; System call to 1DD
$248    $3D7C   SE       VD, #7C         ; Skip if VD == 124
$24A    $8EBE   SHL      VE              ; VE <<= 1, VF = MSB
$24C    $C966   RND      V9, #66         ; V9 = random & 66
$24E    $F485   UNKNOWN  F485            ; Unknown Fxxx instruction
$250    $BAD5   JP       V0, $AD5        ; Jump to V0 + AD5
$252    $1B87   JP       $B87            ; Jump to B87
$254    $C990   RND      V9, #90         ; V9 = random & 90
$256    $9996   UNKNOWN  $9996           ; Unknown 9xxx instruction
$258    $6391   LD       V3, #91         ; Load 145 into V3
$25A    $EFB2   UNKNOWN  $EFB2           ; Unknown Exxx instruction
$25C    $62E0   LD       V2, #E0         ; Load 224 into V2
$25E    $7E61   ADD      VE, #61         ; Add 97 to VE
$260    $0502   SYS      $502            ; System call to 502
$262    $F5C3   UNKNOWN  F5C3            ; Unknown Fxxx instruction
$264    $33EF   SE       V3, #EF         ; Skip if V3 == 239
$266    $1CE3   JP       $CE3            ; Jump to CE3
$268    $9182   UNKNOWN  $9182           ; Unknown 9xxx instruction
$26A    $95CD   UNKNOWN  $95CD           ; Unknown 9xxx instruction
$26C    $5C48   UNKNOWN  $5C48           ; Unknown 5xxx instruction
$26E    $8EF5   SUB      VE, VF          ; VE -= VF, VF = !borrow
$270    $8F25   SUB      VF, V2          ; VF -= V2, VF = !borrow
$272    $4AF0   SNE      VA, #F0         ; Skip if VA != 240
$274    $0DDF   SYS      $DDF            ; System call to DDF
$276    $839B   UNKNOWN  839B            ; Unknown 8xxx instruction
$278    $5B27   UNKNOWN  $5B27           ; Unknown 5xxx instruction
$27A    $4D27   SNE      VD, #27         ; Skip if VD != 39
$27C    $D584   DRW      V5, V8, #4      ; Draw 4-byte sprite at V5, V8
$27E    $71A5   ADD      V1, #A5         ; Add 165 to V1
$280    $18C9   JP       $8C9            ; Jump to 8C9
$282    $FF1D   UNKNOWN  FF1D            ; Unknown Fxxx instruction
$284    $0AFA   SYS      $AFA            ; System call to AFA
$286    $A563   LD       I, $563         ; Load 563 into I
$288    $90E8   UNKNOWN  $90E8           ; Unknown 9xxx instruction
$28A    $D499   DRW      V4, V9, #9      ; Draw 9-byte sprite at V4, V9
$28C    $0FED   SYS      $FED            ; System call to FED
$28E    $00E6   SYS      $0E6            ; System call to 0E6
$290    $6A9D   LD       VA, #9D         ; Load 157 into VA
$292    $2E77   CALL     $E77            ; Call subroutine at E77
$294    $14DE   JP       $4DE            ; Jump to 4DE
$296    $20F5   CALL     $0F5            ; Call subroutine at 0F5
$298    $7C2C   ADD      VC, #2C         ; Add 44 to VC
$29A    $E850   UNKNOWN  $E850           ; Unknown Exxx instruction
$29C    $67B6   LD       V7, #B6         ; Load 182 into V7
$29E    $D9F6   DRW      V9, VF, #6      ; Draw 6-byte sprite at V9, VF
$2A0    $6782   LD       V7, #82         ; Load 130 into V7
$2A2    $5217   UNKNOWN  $5217           ; Unknown 5xxx instruction
$2A4    $4A20   SNE      VA, #20         ; Skip if VA != 32
$2A6    $D710   DRW      V7, V1, #0      ; Draw 0-byte sprite at V7, V1
$2A8    $E365   UNKNOWN  $E365           ; Unknown Exxx instruction
$2AA    $54AC   UNKNOWN  $54AC           ; Unknown 5xxx instruction
$2AC    $8273   XOR      V2, V7          ; V2 ^= V7
$2AE    $4F45   SNE      VF, #45         ; Skip if VF != 69
$2B0    $EC72   UNKNOWN  $EC72           ; Unknown Exxx instruction
$2B2    $3B65   SE       VB, #65         ; Skip if VB == 101
$2B4    $1692   JP       $692            ; Jump to 692
$2B6    $59E8   UNKNOWN  $59E8           ; Unknown 5xxx instruction
$2B8    $0EB0   SYS      $EB0            ; System call to EB0
$2BA    $E5DF   UNKNOWN  $E5DF           ; Unknown Exxx instruction
$2BC    $00D5   SYS      $0D5            ; System call to 0D5
$2BE    $2D7B   CALL     $D7B            ; Call subroutine at D7B
$2C0    $7E80   ADD      VE, #80         ; Add 128 to VE
$2C2    $FC73   UNKNOWN  FC73            ; Unknown Fxxx instruction
$2C4    $EA7B   UNKNOWN  $EA7B           ; Unknown Exxx instruction
$2C6    $0A90   SYS      $A90            ; System call to A90
$2C8    $661D   LD       V6, #1D         ; Load 29 into V6
$2CA    $89BF   UNKNOWN  89BF            ; Unknown 8xxx instruction
$2CC    $07A2   SYS      $7A2            ; System call to 7A2
$2CE    $2D96   CALL     $D96            ; Call subroutine at D96
$2D0    $C0F0   RND      V0, #F0         ; V0 = random & F0
$2D2    $5814   UNKNOWN  $5814           ; Unknown 5xxx instruction
$2D4    $88D2   AND      V8, VD          ; V8 &= VD
$2D6    $624F   LD       V2, #4F         ; Load 79 into V2
$2D8    $1BC0   JP       $BC0            ; Jump to BC0
$2DA    $18EF   JP       $8EF            ; Jump to 8EF
$2DC    $A2AB   LD       I, $2AB         ; Load 2AB into I
$2DE    $4FEA   SNE      VF, #EA         ; Skip if VF != 234
$2E0    $C71D   RND      V7, #1D         ; V7 = random & 1D
$2E2    $41A3   SNE      V1, #A3         ; Skip if V1 != 163
$2E4    $FD2B   UNKNOWN  FD2B            ; Unknown Fxxx instruction
$2E6    $41DA   SNE      V1, #DA         ; Skip if V1 != 218
$2E8    $9D36   UNKNOWN  $9D36           ; Unknown 9xxx instruction
$2EA    $DB20   DRW      VB, V2, #0      ; Draw 0-byte sprite at VB, V2
$2EC    $3993   SE       V9, #93         ; Skip if V9 == 147
$2EE    $9C93   UNKNOWN  $9C93           ; Unknown 9xxx instruction
$2F0    $A4A8   LD       I, $4A8         ; Load 4A8 into I
$2F2    $A187   LD       I, $187         ; Load 187 into I
$2F4    $FAE9   UNKNOWN  FAE9            ; Unknown Fxxx instruction
$2F6    $B108   JP       V0, $108        ; Jump to V0 + 108
$2F8    $7AC2   ADD      VA, #C2         ; Add 194 to VA
$2FA    $FCF8   UNKNOWN  FCF8            ; Unknown Fxxx instruction
$2FC    $69D7   LD       V9, #D7         ; Load 215 into V9
$2FE    $7818   ADD      V8, #18         ; Add 24 to V8
$300    $F0C8   UNKNOWN  F0C8            ; Unknown Fxxx instruction
$302    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$304    $0A00   SYS      $A00            ; System call to A00
$308    $2258   CALL     $258            ; Call subroutine at 258
$30A    $D4EE   DRW      V4, VE, #E      ; Draw 14-byte sprite at V4, VE
$30C    $AA10   LD       I, $A10         ; Load A10 into I
$30E    $7A22   ADD      VA, #22         ; Add 34 to VA
$310    $8D07   SUBN     VD, V0          ; VD = V0 - VD, VF = !borrow
$312    $7A96   ADD      VA, #96         ; Add 150 to VA
$314    $8AB0   LD       VA, VB          ; VA = VB
$316    $F425   UNKNOWN  F425            ; Unknown Fxxx instruction
$318    $51CE   UNKNOWN  $51CE           ; Unknown 5xxx instruction
$31A    $ADC7   LD       I, $DC7         ; Load DC7 into I
$31C    $4DA3   SNE      VD, #A3         ; Skip if VD != 163
$31E    $C5F7   RND      V5, #F7         ; V5 = random & F7
$320    $2C45   CALL     $C45            ; Call subroutine at C45
$322    $F341   UNKNOWN  F341            ; Unknown Fxxx instruction
$324    $8CD0   LD       VC, VD          ; VC = VD
$326    $E551   UNKNOWN  $E551           ; Unknown Exxx instruction
$328    $9080   SNE      V0, V8          ; Skip if V0 != V8
$32A    $57E6   UNKNOWN  $57E6           ; Unknown 5xxx instruction
$32C    $0672   SYS      $672            ; System call to 672
$32E    $6A0E   LD       VA, #0E         ; Load 14 into VA
$330    $0182   SYS      $182            ; System call to 182
$332    $45ED   SNE      V5, #ED         ; Skip if V5 != 237
$334    $FE48   UNKNOWN  FE48            ; Unknown Fxxx instruction
$336    $4A05   SNE      VA, #05         ; Skip if VA != 5
$338    $2677   CALL     $677            ; Call subroutine at 677
$33A    $540A   UNKNOWN  $540A           ; Unknown 5xxx instruction
$33C    $0FB3   SYS      $FB3            ; System call to FB3
$33E    $50A1   UNKNOWN  $50A1           ; Unknown 5xxx instruction
$340    $5B41   UNKNOWN  $5B41           ; Unknown 5xxx instruction
$342    $0649   SYS      $649            ; System call to 649
$344    $1C9A   JP       $C9A            ; Jump to C9A
$346    $990F   UNKNOWN  $990F           ; Unknown 9xxx instruction
$348    $B870   JP       V0, $870        ; Jump to V0 + 870
$34A    $B9A8   JP       V0, $9A8        ; Jump to V0 + 9A8
$34C    $25A7   CALL     $5A7            ; Call subroutine at 5A7
$34E    $6A4E   LD       VA, #4E         ; Load 78 into VA
$350    $840C   UNKNOWN  840C            ; Unknown 8xxx instruction
$352    $3AE9   SE       VA, #E9         ; Skip if VA == 233
$354    $F778   UNKNOWN  F778            ; Unknown Fxxx instruction
$356    $937F   UNKNOWN  $937F           ; Unknown 9xxx instruction
$358    $4947   SNE      V9, #47         ; Skip if V9 != 71
$35A    $CCE6   RND      VC, #E6         ; VC = random & E6
$35C    $BC21   JP       V0, $C21        ; Jump to V0 + C21
$35E    $E995   UNKNOWN  $E995           ; Unknown Exxx instruction
$360    $80B7   SUBN     V0, VB          ; V0 = VB - V0, VF = !borrow
$362    $5B7C   UNKNOWN  $5B7C           ; Unknown 5xxx instruction
$364    $0D4D   SYS      $D4D            ; System call to D4D
$366    $9238   UNKNOWN  $9238           ; Unknown 9xxx instruction
$368    $310B   SE       V1, #0B         ; Skip if V1 == 11
$36A    $85DD   UNKNOWN  85DD            ; Unknown 8xxx instruction
$36C    $813E   SHL      V1              ; V1 <<= 1, VF = MSB
$36E    $F6E1   UNKNOWN  F6E1            ; Unknown Fxxx instruction
$370    $E0C6   UNKNOWN  $E0C6           ; Unknown Exxx instruction
$372    $FD66   UNKNOWN  FD66            ; Unknown Fxxx instruction
$374    $FC69   UNKNOWN  FC69            ; Unknown Fxxx instruction
$376    $F135   UNKNOWN  F135            ; Unknown Fxxx instruction
$378    $A3EA   LD       I, $3EA         ; Load 3EA into I
$37A    $5926   UNKNOWN  $5926           ; Unknown 5xxx instruction
$37C    $C2D0   RND      V2, #D0         ; V2 = random & D0
$37E    $A4DB   LD       I, $4DB         ; Load 4DB into I
$380    $85B9   UNKNOWN  85B9            ; Unknown 8xxx instruction
$382    $C200   RND      V2, #00         ; V2 = random & 00
$384    $A5D6   LD       I, $5D6         ; Load 5D6 into I
$386    $D6A0   DRW      V6, VA, #0      ; Draw 0-byte sprite at V6, VA
$388    $E249   UNKNOWN  $E249           ; Unknown Exxx instruction
$38A    $7124   ADD      V1, #24         ; Add 36 to V1
$38C    $911F   UNKNOWN  $911F           ; Unknown 9xxx instruction
$38E    $9437   UNKNOWN  $9437           ; Unknown 9xxx instruction
$390    $BD96   JP       V0, $D96        ; Jump to V0 + D96
$392    $8614   ADD      V6, V1          ; V6 += V1, VF = carry
$394    $E69A   UNKNOWN  $E69A           ; Unknown Exxx instruction
$396    $7BB7   ADD      VB, #B7         ; Add 183 to VB
$398    $5AF6   UNKNOWN  $5AF6           ; Unknown 5xxx instruction
$39A    $DB3D   DRW      VB, V3, #D      ; Draw 13-byte sprite at VB, V3
$39C    $96A0   SNE      V6, VA          ; Skip if V6 != VA
$39E    $F670   UNKNOWN  F670            ; Unknown Fxxx instruction
$3A0    $C0DC   RND      V0, #DC         ; V0 = random & DC
$3A2    $C39A   RND      V3, #9A         ; V3 = random & 9A
$3A4    $5767   UNKNOWN  $5767           ; Unknown 5xxx instruction
$3A6    $06A7   SYS      $6A7            ; System call to 6A7
$3A8    $7B9E   ADD      VB, #9E         ; Add 158 to VB
$3AA    $D6C8   DRW      V6, VC, #8      ; Draw 8-byte sprite at V6, VC
$3AC    $0D76   SYS      $D76            ; System call to D76
$3AE    $76DC   ADD      V6, #DC         ; Add 220 to V6
$3B0    $53EA   UNKNOWN  $53EA           ; Unknown 5xxx instruction
$3B2    $FF00   UNKNOWN  FF00            ; Unknown Fxxx instruction
$3B4    $083B   SYS      $83B            ; System call to 83B
$3B6    $738D   ADD      V3, #8D         ; Add 141 to V3
$3B8    $6149   LD       V1, #49         ; Load 73 into V1
$3BA    $A3DF   LD       I, $3DF         ; Load 3DF into I
$3BC    $BC8A   JP       V0, $C8A        ; Jump to V0 + C8A
$3BE    $48C2   SNE      V8, #C2         ; Skip if V8 != 194
$3C0    $2451   CALL     $451            ; Call subroutine at 451
$3C2    $7F62   ADD      VF, #62         ; Add 98 to VF
$3C4    $8255   SUB      V2, V5          ; V2 -= V5, VF = !borrow
$3C6    $6F9E   LD       VF, #9E         ; Load 158 into VF
$3C8    $840C   UNKNOWN  840C            ; Unknown 8xxx instruction
$3CA    $D828   DRW      V8, V2, #8      ; Draw 8-byte sprite at V8, V2
$3CC    $2F4A   CALL     $F4A            ; Call subroutine at F4A
$3CE    $1B66   JP       $B66            ; Jump to B66
$3D0    $9542   UNKNOWN  $9542           ; Unknown 9xxx instruction
$3D2    $796D   ADD      V9, #6D         ; Add 109 to V9
$3D4    $B20F   JP       V0, $20F        ; Jump to V0 + 20F
$3D6    $80BE   SHL      V0              ; V0 <<= 1, VF = MSB
$3D8    $9346   UNKNOWN  $9346           ; Unknown 9xxx instruction
$3DA    $E351   UNKNOWN  $E351           ; Unknown Exxx instruction
$3DC    $1D33   JP       $D33            ; Jump to D33
$3DE    $1DF4   JP       $DF4            ; Jump to DF4
$3E0    $A58C   LD       I, $58C         ; Load 58C into I
$3E2    $2E6A   CALL     $E6A            ; Call subroutine at E6A
$3E4    $4E43   SNE      VE, #43         ; Skip if VE != 67
$3E6    $4B82   SNE      VB, #82         ; Skip if VB != 130
$3E8    $70E9   ADD      V0, #E9         ; Add 233 to V0
$3EA    $E59F   UNKNOWN  $E59F           ; Unknown Exxx instruction
$3EC    $2710   CALL     $710            ; Call subroutine at 710
$3EE    $44BD   SNE      V4, #BD         ; Skip if V4 != 189
$3F0    $294A   CALL     $94A            ; Call subroutine at 94A
$3F2    $8A86   SHR      VA              ; VA >>= 1, VF = LSB
$3F4    $8F91   OR       VF, V9          ; VF |= V9
$3F6    $9244   UNKNOWN  $9244           ; Unknown 9xxx instruction
$3F8    $B9F7   JP       V0, $9F7        ; Jump to V0 + 9F7
$3FA    $A569   LD       I, $569         ; Load 569 into I
$3FC    $E06B   UNKNOWN  $E06B           ; Unknown Exxx instruction
$3FE    $2C5B   CALL     $C5B            ; Call subroutine at C5B
$400    $64B8   LD       V4, #B8         ; Load 184 into V4
$402    $7C94   ADD      VC, #94         ; Add 148 to VC
$404    $D1ED   DRW      V1, VE, #D      ; Draw 13-byte sprite at V1, VE
$406    $3B18   SE       VB, #18         ; Skip if VB == 24
$408    $FA6F   UNKNOWN  FA6F            ; Unknown Fxxx instruction
$40A    $CC6E   RND      VC, #6E         ; VC = random & 6E
$40C    $5953   UNKNOWN  $5953           ; Unknown 5xxx instruction
$40E    $89A3   XOR      V9, VA          ; V9 ^= VA
$410    $3F87   SE       VF, #87         ; Skip if VF == 135
$412    $3E64   SE       VE, #64         ; Skip if VE == 100
$414    $0C5A   SYS      $C5A            ; System call to C5A
$416    $36F4   SE       V6, #F4         ; Skip if V6 == 244
$418    $E488   UNKNOWN  $E488           ; Unknown Exxx instruction
$41A    $A1FC   LD       I, $1FC         ; Load 1FC into I
$41C    $D106   DRW      V1, V0, #6      ; Draw 6-byte sprite at V1, V0
$41E    $834F   UNKNOWN  834F            ; Unknown 8xxx instruction
$420    $CF86   RND      VF, #86         ; VF = random & 86
$422    $5D04   UNKNOWN  $5D04           ; Unknown 5xxx instruction
$424    $B4C3   JP       V0, $4C3        ; Jump to V0 + 4C3
$426    $F831   UNKNOWN  F831            ; Unknown Fxxx instruction
$428    $0599   SYS      $599            ; System call to 599
$42A    $059D   SYS      $59D            ; System call to 59D
$42C    $E3E9   UNKNOWN  $E3E9           ; Unknown Exxx instruction
$42E    $DCFA   DRW      VC, VF, #A      ; Draw 10-byte sprite at VC, VF
$430    $86D4   ADD      V6, VD          ; V6 += VD, VF = carry
$432    $A972   LD       I, $972         ; Load 972 into I
$434    $DB25   DRW      VB, V2, #5      ; Draw 5-byte sprite at VB, V2
$436    $2585   CALL     $585            ; Call subroutine at 585
$438    $7506   ADD      V5, #06         ; Add 6 to V5
$43A    $3F71   SE       VF, #71         ; Skip if VF == 113
$43C    $2AD1   CALL     $AD1            ; Call subroutine at AD1
$43E    $6D6C   LD       VD, #6C         ; Load 108 into VD
$440    $7E48   ADD      VE, #48         ; Add 72 to VE
$442    $168C   JP       $68C            ; Jump to 68C
$444    $F297   UNKNOWN  F297            ; Unknown Fxxx instruction
$446    $8037   SUBN     V0, V3          ; V0 = V3 - V0, VF = !borrow
$448    $18B7   JP       $8B7            ; Jump to 8B7
$44A    $5967   UNKNOWN  $5967           ; Unknown 5xxx instruction
$44C    $9E67   UNKNOWN  $9E67           ; Unknown 9xxx instruction
$44E    $8F46   SHR      VF              ; VF >>= 1, VF = LSB
$450    $FCF2   UNKNOWN  FCF2            ; Unknown Fxxx instruction
$452    $1AC2   JP       $AC2            ; Jump to AC2
$454    $8141   OR       V1, V4          ; V1 |= V4
$456    $3EC4   SE       VE, #C4         ; Skip if VE == 196
$458    $CB33   RND      VB, #33         ; VB = random & 33
$45A    $8B4E   SHL      VB              ; VB <<= 1, VF = MSB
$45C    $1F13   JP       $F13            ; Jump to F13
$45E    $2A2A   CALL     $A2A            ; Call subroutine at A2A
$460    $3DA0   SE       VD, #A0         ; Skip if VD == 160
$462    $A87B   LD       I, $87B         ; Load 87B into I
$464    $A88F   LD       I, $88F         ; Load 88F into I
$466    $1489   JP       $489            ; Jump to 489
$468    $EED7   UNKNOWN  $EED7           ; Unknown Exxx instruction
$46A    $DE38   DRW      VE, V3, #8      ; Draw 8-byte sprite at VE, V3
$46C    $3E98   SE       VE, #98         ; Skip if VE == 152
$46E    $038C   SYS      $38C            ; System call to 38C
$470    $DEB3   DRW      VE, VB, #3      ; Draw 3-byte sprite at VE, VB
$472    $59DA   UNKNOWN  $59DA           ; Unknown 5xxx instruction
$474    $B477   JP       V0, $477        ; Jump to V0 + 477
$476    $AECA   LD       I, $ECA         ; Load ECA into I
$478    $793C   ADD      V9, #3C         ; Add 60 to V9
$47A    $3774   SE       V7, #74         ; Skip if V7 == 116
$47C    $C45F   RND      V4, #5F         ; V4 = random & 5F
$47E    $B39F   JP       V0, $39F        ; Jump to V0 + 39F
$480    $DC63   DRW      VC, V6, #3      ; Draw 3-byte sprite at VC, V6
$482    $7964   ADD      V9, #64         ; Add 100 to V9
$484    $2BAA   CALL     $BAA            ; Call subroutine at BAA
$486    $A126   LD       I, $126         ; Load 126 into I
$488    $103D   JP       $03D            ; Jump to 03D
$48A    $6F2F   LD       VF, #2F         ; Load 47 into VF
$48C    $7A45   ADD      VA, #45         ; Add 69 to VA
$48E    $5599   UNKNOWN  $5599           ; Unknown 5xxx instruction
$490    $DF5D   DRW      VF, V5, #D      ; Draw 13-byte sprite at VF, V5
$492    $8D6C   UNKNOWN  8D6C            ; Unknown 8xxx instruction
$494    $D64B   DRW      V6, V4, #B      ; Draw 11-byte sprite at V6, V4
$496    $F76D   UNKNOWN  F76D            ; Unknown Fxxx instruction
$498    $7C6D   ADD      VC, #6D         ; Add 109 to VC
$49A    $BCAC   JP       V0, $CAC        ; Jump to V0 + CAC
$49C    $6820   LD       V8, #20         ; Load 32 into V8
$49E    $D8C5   DRW      V8, VC, #5      ; Draw 5-byte sprite at V8, VC
$4A0    $AF5D   LD       I, $F5D         ; Load F5D into I
$4A2    $EFDA   UNKNOWN  $EFDA           ; Unknown Exxx instruction
$4A4    $DBF9   DRW      VB, VF, #9      ; Draw 9-byte sprite at VB, VF
$4A6    $D31D   DRW      V3, V1, #D      ; Draw 13-byte sprite at V3, V1
$4A8    $FF31   UNKNOWN  FF31            ; Unknown Fxxx instruction
$4AA    $B2E6   JP       V0, $2E6        ; Jump to V0 + 2E6
$4AC    $0E59   SYS      $E59            ; System call to E59
$4AE    $7DA2   ADD      VD, #A2         ; Add 162 to VD
$4B0    $664F   LD       V6, #4F         ; Load 79 into V6
$4B2    $0241   SYS      $241            ; System call to 241
$4B4    $39D8   SE       V9, #D8         ; Skip if V9 == 216
$4B6    $2ACE   CALL     $ACE            ; Call subroutine at ACE
$4B8    $FA73   UNKNOWN  FA73            ; Unknown Fxxx instruction
$4BA    $562B   UNKNOWN  $562B           ; Unknown 5xxx instruction
$4BC    $1CFF   JP       $CFF            ; Jump to CFF
$4BE    $73B8   ADD      V3, #B8         ; Add 184 to V3
$4C0    $502B   UNKNOWN  $502B           ; Unknown 5xxx instruction
$4C2    $6ECE   LD       VE, #CE         ; Load 206 into VE
$4C4    $C6A2   RND      V6, #A2         ; V6 = random & A2
$4C6    $0AC8   SYS      $AC8            ; System call to AC8
$4C8    $57C7   UNKNOWN  $57C7           ; Unknown 5xxx instruction
$4CA    $6A63   LD       VA, #63         ; Load 99 into VA
$4CC    $B8F3   JP       V0, $8F3        ; Jump to V0 + 8F3
$4CE    $D910   DRW      V9, V1, #0      ; Draw 0-byte sprite at V9, V1
$4D0    $96E3   UNKNOWN  $96E3           ; Unknown 9xxx instruction
$4D2    $59E6   UNKNOWN  $59E6           ; Unknown 5xxx instruction
$4D4    $4A67   SNE      VA, #67         ; Skip if VA != 103
$4D6    $E2FD   UNKNOWN  $E2FD           ; Unknown Exxx instruction
$4D8    $91F3   UNKNOWN  $91F3           ; Unknown 9xxx instruction
$4DA    $4B10   SNE      VB, #10         ; Skip if VB != 16
$4DC    $C86A   RND      V8, #6A         ; V8 = random & 6A
$4DE    $5186   UNKNOWN  $5186           ; Unknown 5xxx instruction
$4E0    $A481   LD       I, $481         ; Load 481 into I
$4E2    $246A   CALL     $46A            ; Call subroutine at 46A
$4E4    $D74F   DRW      V7, V4, #F      ; Draw 15-byte sprite at V7, V4
$4E6    $8DB9   UNKNOWN  8DB9            ; Unknown 8xxx instruction
$4E8    $9351   UNKNOWN  $9351           ; Unknown 9xxx instruction
$4EA    $19E8   JP       $9E8            ; Jump to 9E8
$4EC    $D5D8   DRW      V5, VD, #8      ; Draw 8-byte sprite at V5, VD
$4EE    $84BD   UNKNOWN  84BD            ; Unknown 8xxx instruction
$4F0    $C77C   RND      V7, #7C         ; V7 = random & 7C
$4F2    $491B   SNE      V9, #1B         ; Skip if V9 != 27
$4F4    $A335   LD       I, $335         ; Load 335 into I
$4F6    $CAFD   RND      VA, #FD         ; VA = random & FD
$4F8    $0B52   SYS      $B52            ; System call to B52
$4FA    $AA72   LD       I, $A72         ; Load A72 into I
$4FC    $078E   SYS      $78E            ; System call to 78E
$4FE    $E671   UNKNOWN  $E671           ; Unknown Exxx instruction
$500    $EEC5   UNKNOWN  $EEC5           ; Unknown Exxx instruction
$502    $07E1   SYS      $7E1            ; System call to 7E1
$504    $D319   DRW      V3, V1, #9      ; Draw 9-byte sprite at V3, V1
$506    $2DF6   CALL     $DF6            ; Call subroutine at DF6
$508    $AFFC   LD       I, $FFC         ; Load FFC into I
$50A    $600D   LD       V0, #0D         ; Load 13 into V0
$50C    $85CA   UNKNOWN  85CA            ; Unknown 8xxx instruction
$50E    $EA20   UNKNOWN  $EA20           ; Unknown Exxx instruction
$510    $4F27   SNE      VF, #27         ; Skip if VF != 39
$512    $2195   CALL     $195            ; Call subroutine at 195
$514    $FA0D   UNKNOWN  FA0D            ; Unknown Fxxx instruction
$516    $5552   UNKNOWN  $5552           ; Unknown 5xxx instruction
$518    $FE63   UNKNOWN  FE63            ; Unknown Fxxx instruction
$51A    $6242   LD       V2, #42         ; Load 66 into V2
$51C    $D335   DRW      V3, V3, #5      ; Draw 5-byte sprite at V3, V3
$51E    $0DFD   SYS      $DFD            ; System call to DFD
$520    $72D6   ADD      V2, #D6         ; Add 214 to V2
$522    $45AA   SNE      V5, #AA         ; Skip if V5 != 170
$524    $BA04   JP       V0, $A04        ; Jump to V0 + A04
$526    $E248   UNKNOWN  $E248           ; Unknown Exxx instruction
$528    $1A19   JP       $A19            ; Jump to A19
$52A    $93A3   UNKNOWN  $93A3           ; Unknown 9xxx instruction
$52C    $FFF6   UNKNOWN  FFF6            ; Unknown Fxxx instruction
$52E    $660C   LD       V6, #0C         ; Load 12 into V6
$530    $539D   UNKNOWN  $539D           ; Unknown 5xxx instruction
$532    $7F77   ADD      VF, #77         ; Add 119 to VF
$534    $36B0   SE       V6, #B0         ; Skip if V6 == 176
$536    $7CC3   ADD      VC, #C3         ; Add 195 to VC
$538    $32B8   SE       V2, #B8         ; Skip if V2 == 184
$53A    $BFEA   JP       V0, $FEA        ; Jump to V0 + FEA
$53C    $8553   XOR      V5, V5          ; V5 ^= V5
$53E    $3124   SE       V1, #24         ; Skip if V1 == 36
$540    $E856   UNKNOWN  $E856           ; Unknown Exxx instruction
$542    $D44E   DRW      V4, V4, #E      ; Draw 14-byte sprite at V4, V4
$544    $BAA1   JP       V0, $AA1        ; Jump to V0 + AA1
$546    $3743   SE       V7, #43         ; Skip if V7 == 67
$548    $7DBE   ADD      VD, #BE         ; Add 190 to VD
$54A    $7811   ADD      V8, #11         ; Add 17 to V8
$54C    $5A49   UNKNOWN  $5A49           ; Unknown 5xxx instruction
$54E    $C8BA   RND      V8, #BA         ; V8 = random & BA
$550    $9FD5   UNKNOWN  $9FD5           ; Unknown 9xxx instruction
$552    $D2DF   DRW      V2, VD, #F      ; Draw 15-byte sprite at V2, VD
$554    $0DEF   SYS      $DEF            ; System call to DEF
$556    $3947   SE       V9, #47         ; Skip if V9 == 71
$558    $BC08   JP       V0, $C08        ; Jump to V0 + C08
$55A    $20BE   CALL     $0BE            ; Call subroutine at 0BE
$55C    $6E95   LD       VE, #95         ; Load 149 into VE
$55E    $A443   LD       I, $443         ; Load 443 into I
$560    $E101   UNKNOWN  $E101           ; Unknown Exxx instruction
$562    $AA1B   LD       I, $A1B         ; Load A1B into I
$564    $7CB7   ADD      VC, #B7         ; Add 183 to VC
$566    $05AD   SYS      $5AD            ; System call to 5AD
$568    $0A5E   SYS      $A5E            ; System call to A5E
$56A    $AF96   LD       I, $F96         ; Load F96 into I
$56C    $BB33   JP       V0, $B33        ; Jump to V0 + B33
$56E    $995F   UNKNOWN  $995F           ; Unknown 9xxx instruction
$570    $90AC   UNKNOWN  $90AC           ; Unknown 9xxx instruction
$572    $7758   ADD      V7, #58         ; Add 88 to V7
$574    $98AF   UNKNOWN  $98AF           ; Unknown 9xxx instruction
$576    $6A96   LD       VA, #96         ; Load 150 into VA
$578    $5FF4   UNKNOWN  $5FF4           ; Unknown 5xxx instruction
$57A    $B0FB   JP       V0, $0FB        ; Jump to V0 + 0FB
$57C    $2C5A   CALL     $C5A            ; Call subroutine at C5A
$57E    $687F   LD       V8, #7F         ; Load 127 into V8
$580    $0262   SYS      $262            ; System call to 262
$582    $150F   JP       $50F            ; Jump to 50F
$584    $5A76   UNKNOWN  $5A76           ; Unknown 5xxx instruction
$586    $7786   ADD      V7, #86         ; Add 134 to V7
$588    $4C9A   SNE      VC, #9A         ; Skip if VC != 154
$58A    $03CB   SYS      $3CB            ; System call to 3CB
$58C    $2ABD   CALL     $ABD            ; Call subroutine at ABD
$58E    $AFC4   LD       I, $FC4         ; Load FC4 into I
$590    $2CA5   CALL     $CA5            ; Call subroutine at CA5
$592    $12D5   JP       $2D5            ; Jump to 2D5
$594    $F65E   UNKNOWN  F65E            ; Unknown Fxxx instruction
$596    $3217   SE       V2, #17         ; Skip if V2 == 23
$598    $F9B3   UNKNOWN  F9B3            ; Unknown Fxxx instruction
$59A    $BCB0   JP       V0, $CB0        ; Jump to V0 + CB0
$59C    $4864   SNE      V8, #64         ; Skip if V8 != 100
$59E    $E8C1   UNKNOWN  $E8C1           ; Unknown Exxx instruction
$5A0    $6623   LD       V6, #23         ; Load 35 into V6
$5A2    $FF09   UNKNOWN  FF09            ; Unknown Fxxx instruction
$5A4    $FE64   UNKNOWN  FE64            ; Unknown Fxxx instruction
$5A6    $F398   UNKNOWN  F398            ; Unknown Fxxx instruction
$5A8    $6D62   LD       VD, #62         ; Load 98 into VD
$5AA    $7ACB   ADD      VA, #CB         ; Add 203 to VA
$5AC    $7E49   ADD      VE, #49         ; Add 73 to VE
$5AE    $EFD8   UNKNOWN  $EFD8           ; Unknown Exxx instruction
$5B0    $9B47   UNKNOWN  $9B47           ; Unknown 9xxx instruction
$5B2    $A734   LD       I, $734         ; Load 734 into I
$5B4    $2124   CALL     $124            ; Call subroutine at 124
$5B6    $86B2   AND      V6, VB          ; V6 &= VB
$5B8    $3104   SE       V1, #04         ; Skip if V1 == 4
$5BA    $601C   LD       V0, #1C         ; Load 28 into V0
$5BC    $B26D   JP       V0, $26D        ; Jump to V0 + 26D
$5BE    $A2D0   LD       I, $2D0         ; Load 2D0 into I
$5C0    $FC37   UNKNOWN  FC37            ; Unknown Fxxx instruction
$5C2    $F049   UNKNOWN  F049            ; Unknown Fxxx instruction
$5C4    $38E9   SE       V8, #E9         ; Skip if V8 == 233
$5C6    $99C8   UNKNOWN  $99C8           ; Unknown 9xxx instruction
$5C8    $29AD   CALL     $9AD            ; Call subroutine at 9AD
$5CA    $C20B   RND      V2, #0B         ; V2 = random & 0B
$5CC    $8055   SUB      V0, V5          ; V0 -= V5, VF = !borrow
$5CE    $47C7   SNE      V7, #C7         ; Skip if V7 != 199
$5D0    $A793   LD       I, $793         ; Load 793 into I
$5D2    $E1B2   UNKNOWN  $E1B2           ; Unknown Exxx instruction
$5D4    $6A9A   LD       VA, #9A         ; Load 154 into VA
$5D6    $6B60   LD       VB, #60         ; Load 96 into VB
$5D8    $4D27   SNE      VD, #27         ; Skip if VD != 39
$5DA    $BCC8   JP       V0, $CC8        ; Jump to V0 + CC8
$5DC    $3E84   SE       VE, #84         ; Skip if VE == 132
$5DE    $E81A   UNKNOWN  $E81A           ; Unknown Exxx instruction
$5E0    $21AC   CALL     $1AC            ; Call subroutine at 1AC
$5E2    $3ABE   SE       VA, #BE         ; Skip if VA == 190
$5E4    $891C   UNKNOWN  891C            ; Unknown 8xxx instruction
$5E6    $96EE   UNKNOWN  $96EE           ; Unknown 9xxx instruction
$5E8    $6675   LD       V6, #75         ; Load 117 into V6
$5EA    $2739   CALL     $739            ; Call subroutine at 739
$5EC    $7768   ADD      V7, #68         ; Add 104 to V7
$5EE    $FE6F   UNKNOWN  FE6F            ; Unknown Fxxx instruction
$5F0    $A438   LD       I, $438         ; Load 438 into I
$5F2    $2E3C   CALL     $E3C            ; Call subroutine at E3C
$5F4    $AA01   LD       I, $A01         ; Load A01 into I
$5F6    $3E76   SE       VE, #76         ; Skip if VE == 118
$5F8    $DE4E   DRW      VE, V4, #E      ; Draw 14-byte sprite at VE, V4
$5FA    $1987   JP       $987            ; Jump to 987
$5FC    $DB82   DRW      VB, V8, #2      ; Draw 2-byte sprite at VB, V8
$5FE    $64BD   LD       V4, #BD         ; Load 189 into V4
$600    $F779   UNKNOWN  F779            ; Unknown Fxxx instruction
$602    $A08A   LD       I, $08A         ; Load 08A into I
$604    $E08A   UNKNOWN  $E08A           ; Unknown Exxx instruction
$606    $B3F0   JP       V0, $3F0        ; Jump to V0 + 3F0
$608    $EF4A   UNKNOWN  $EF4A           ; Unknown Exxx instruction
$60A    $EFBB   UNKNOWN  $EFBB           ; Unknown Exxx instruction
$60C    $C18D   RND      V1, #8D         ; V1 = random & 8D
$60E    $280C   CALL     $80C            ; Call subroutine at 80C
$610    $CBAC   RND      VB, #AC         ; VB = random & AC
$612    $3B8F   SE       VB, #8F         ; Skip if VB == 143
$614    $3238   SE       V2, #38         ; Skip if V2 == 56
$616    $6880   LD       V8, #80         ; Load 128 into V8
$618    $027C   SYS      $27C            ; System call to 27C
$61A    $08DB   SYS      $8DB            ; System call to 8DB
$61C    $940F   UNKNOWN  $940F           ; Unknown 9xxx instruction
$61E    $8AD2   AND      VA, VD          ; VA &= VD
$620    $D353   DRW      V3, V5, #3      ; Draw 3-byte sprite at V3, V5
$622    $1E34   JP       $E34            ; Jump to E34
$624    $F69E   UNKNOWN  F69E            ; Unknown Fxxx instruction
$626    $A424   LD       I, $424         ; Load 424 into I
$628    $51EC   UNKNOWN  $51EC           ; Unknown 5xxx instruction
$62A    $AB97   LD       I, $B97         ; Load B97 into I
$62C    $0D68   SYS      $D68            ; System call to D68
$62E    $27B3   CALL     $7B3            ; Call subroutine at 7B3
$630    $0D56   SYS      $D56            ; System call to D56
$632    $AD19   LD       I, $D19         ; Load D19 into I
$634    $9018   UNKNOWN  $9018           ; Unknown 9xxx instruction
$636    $953D   UNKNOWN  $953D           ; Unknown 9xxx instruction
$638    $196B   JP       $96B            ; Jump to 96B
$63A    $8820   LD       V8, V2          ; V8 = V2
$63C    $F8D3   UNKNOWN  F8D3            ; Unknown Fxxx instruction
$63E    $1357   JP       $357            ; Jump to 357
$640    $42E0   SNE      V2, #E0         ; Skip if V2 != 224
$642    $6DD5   LD       VD, #D5         ; Load 213 into VD
$644    $0B30   SYS      $B30            ; System call to B30
$646    $DEF6   DRW      VE, VF, #6      ; Draw 6-byte sprite at VE, VF
$648    $D609   DRW      V6, V0, #9      ; Draw 9-byte sprite at V6, V0
$64A    $BE92   JP       V0, $E92        ; Jump to V0 + E92
$64C    $9455   UNKNOWN  $9455           ; Unknown 9xxx instruction
$64E    $61EC   LD       V1, #EC         ; Load 236 into V1
$650    $07BB   SYS      $7BB            ; System call to 7BB
$652    $AB71   LD       I, $B71         ; Load B71 into I
$654    $DF22   DRW      VF, V2, #2      ; Draw 2-byte sprite at VF, V2
$656    $FD3B   UNKNOWN  FD3B            ; Unknown Fxxx instruction
$658    $2A25   CALL     $A25            ; Call subroutine at A25
$65A    $8300   LD       V3, V0          ; V3 = V0
$65C    $1AD0   JP       $AD0            ; Jump to AD0
$65E    $FD13   UNKNOWN  FD13            ; Unknown Fxxx instruction
$660    $5F81   UNKNOWN  $5F81           ; Unknown 5xxx instruction
$662    $CA27   RND      VA, #27         ; VA = random & 27
$664    $5BB5   UNKNOWN  $5BB5           ; Unknown 5xxx instruction
$666    $29A1   CALL     $9A1            ; Call subroutine at 9A1
$668    $07AC   SYS      $7AC            ; System call to 7AC
$66A    $F94B   UNKNOWN  F94B            ; Unknown Fxxx instruction
$66C    $FB62   UNKNOWN  FB62            ; Unknown Fxxx instruction
$66E    $CD7E   RND      VD, #7E         ; VD = random & 7E
$670    $11A9   JP       $1A9            ; Jump to 1A9
$672    $5973   UNKNOWN  $5973           ; Unknown 5xxx instruction
$674    $7EBA   ADD      VE, #BA         ; Add 186 to VE
$676    $DA12   DRW      VA, V1, #2      ; Draw 2-byte sprite at VA, V1
$678    $384F   SE       V8, #4F         ; Skip if V8 == 79
$67A    $AF26   LD       I, $F26         ; Load F26 into I
$67C    $0128   SYS      $128            ; System call to 128
$67E    $C36B   RND      V3, #6B         ; V3 = random & 6B
$680    $00A2   SYS      $0A2            ; System call to 0A2
$682    $543A   UNKNOWN  $543A           ; Unknown 5xxx instruction
$684    $E381   UNKNOWN  $E381           ; Unknown Exxx instruction
$686    $560E   UNKNOWN  $560E           ; Unknown 5xxx instruction
$688    $663F   LD       V6, #3F         ; Load 63 into V6
$68A    $DCC5   DRW      VC, VC, #5      ; Draw 5-byte sprite at VC, VC
$68C    $D127   DRW      V1, V2, #7      ; Draw 7-byte sprite at V1, V2
$68E    $3707   SE       V7, #07         ; Skip if V7 == 7
$690    $F5E4   UNKNOWN  F5E4            ; Unknown Fxxx instruction
$692    $0E4E   SYS      $E4E            ; System call to E4E
$694    $0DFB   SYS      $DFB            ; System call to DFB
$696    $98D5   UNKNOWN  $98D5           ; Unknown 9xxx instruction
$698    $8048   UNKNOWN  8048            ; Unknown 8xxx instruction
$69A    $1C5E   JP       $C5E            ; Jump to C5E
$69C    $07E1   SYS      $7E1            ; System call to 7E1
$69E    $DFF5   DRW      VF, VF, #5      ; Draw 5-byte sprite at VF, VF
$6A0    $D68F   DRW      V6, V8, #F      ; Draw 15-byte sprite at V6, V8
$6A2    $DA7C   DRW      VA, V7, #C      ; Draw 12-byte sprite at VA, V7
$6A4    $1B6E   JP       $B6E            ; Jump to B6E
$6A6    $2B33   CALL     $B33            ; Call subroutine at B33
$6A8    $F6ED   UNKNOWN  F6ED            ; Unknown Fxxx instruction
$6AA    $0057   SYS      $057            ; System call to 057
$6AC    $8E67   SUBN     VE, V6          ; VE = V6 - VE, VF = !borrow
$6AE    $28E3   CALL     $8E3            ; Call subroutine at 8E3
$6B0    $727F   ADD      V2, #7F         ; Add 127 to V2
$6B2    $EB2B   UNKNOWN  $EB2B           ; Unknown Exxx instruction
$6B4    $611A   LD       V1, #1A         ; Load 26 into V1
$6B6    $CBD4   RND      VB, #D4         ; VB = random & D4
$6B8    $75D9   ADD      V5, #D9         ; Add 217 to V5
$6BA    $CFDA   RND      VF, #DA         ; VF = random & DA
$6BC    $01C9   SYS      $1C9            ; System call to 1C9
$6BE    $7F64   ADD      VF, #64         ; Add 100 to VF
$6C0    $833E   SHL      V3              ; V3 <<= 1, VF = MSB
$6C2    $4BB3   SNE      VB, #B3         ; Skip if VB != 179
$6C4    $8298   UNKNOWN  8298            ; Unknown 8xxx instruction
$6C6    $DABE   DRW      VA, VB, #E      ; Draw 14-byte sprite at VA, VB
$6C8    $05BB   SYS      $5BB            ; System call to 5BB
$6CA    $F015   LD       DT, V0          ; Delay timer = V0
$6CC    $D0CD   DRW      V0, VC, #D      ; Draw 13-byte sprite at V0, VC
$6CE    $B799   JP       V0, $799        ; Jump to V0 + 799
$6D0    $5419   UNKNOWN  $5419           ; Unknown 5xxx instruction
$6D2    $A5EE   LD       I, $5EE         ; Load 5EE into I
$6D4    $761E   ADD      V6, #1E         ; Add 30 to V6
$6D6    $1DA7   JP       $DA7            ; Jump to DA7
$6D8    $35C2   SE       V5, #C2         ; Skip if V5 == 194
$6DA    $A60D   LD       I, $60D         ; Load 60D into I
$6DC    $7399   ADD      V3, #99         ; Add 153 to V3
$6DE    $A86E   LD       I, $86E         ; Load 86E into I
$6E0    $7F16   ADD      VF, #16         ; Add 22 to VF
$6E2    $FB1E   ADD      I, VB           ; I += VB
$6E4    $FC11   UNKNOWN  FC11            ; Unknown Fxxx instruction
$6E6    $F324   UNKNOWN  F324            ; Unknown Fxxx instruction
$6E8    $5C82   UNKNOWN  $5C82           ; Unknown 5xxx instruction
$6EA    $8CF7   SUBN     VC, VF          ; VC = VF - VC, VF = !borrow
$6EC    $8C07   SUBN     VC, V0          ; VC = V0 - VC, VF = !borrow
$6EE    $BACF   JP       V0, $ACF        ; Jump to V0 + ACF
$6F0    $6DD7   LD       VD, #D7         ; Load 215 into VD
$6F2    $7D86   ADD      VD, #86         ; Add 134 to VD
$6F4    $444B   SNE      V4, #4B         ; Skip if V4 != 75
$6F6    $A03A   LD       I, $03A         ; Load 03A into I
$6F8    $4B1B   SNE      VB, #1B         ; Skip if VB != 27
$6FA    $E5B7   UNKNOWN  $E5B7           ; Unknown Exxx instruction
$6FC    $070F   SYS      $70F            ; System call to 70F
$6FE    $D704   DRW      V7, V0, #4      ; Draw 4-byte sprite at V7, V0
$700    $1B89   JP       $B89            ; Jump to B89
$702    $A088   LD       I, $088         ; Load 088 into I
$704    $BF7B   JP       V0, $F7B        ; Jump to V0 + F7B
$706    $2EDC   CALL     $EDC            ; Call subroutine at EDC
$708    $F9DB   UNKNOWN  F9DB            ; Unknown Fxxx instruction
$70A    $A2BA   LD       I, $2BA         ; Load 2BA into I
$70C    $7F67   ADD      VF, #67         ; Add 103 to VF
$70E    $CC44   RND      VC, #44         ; VC = random & 44
$710    $B6FF   JP       V0, $6FF        ; Jump to V0 + 6FF
$712    $58F7   UNKNOWN  $58F7           ; Unknown 5xxx instruction
$714    $C8F4   RND      V8, #F4         ; V8 = random & F4
$716    $2113   CALL     $113            ; Call subroutine at 113
$718    $404B   SNE      V0, #4B         ; Skip if V0 != 75
$71A    $33E6   SE       V3, #E6         ; Skip if V3 == 230
$71C    $C093   RND      V0, #93         ; V0 = random & 93
$71E    $C504   RND      V5, #04         ; V5 = random & 04
$720    $B53B   JP       V0, $53B        ; Jump to V0 + 53B
$722    $63F7   LD       V3, #F7         ; Load 247 into V3
$724    $1A2E   JP       $A2E            ; Jump to A2E
$726    $0E96   SYS      $E96            ; System call to E96
$728    $2B88   CALL     $B88            ; Call subroutine at B88
$72A    $402E   SNE      V0, #2E         ; Skip if V0 != 46
$72C    $C69F   RND      V6, #9F         ; V6 = random & 9F
$72E    $7352   ADD      V3, #52         ; Add 82 to V3
$730    $1B57   JP       $B57            ; Jump to B57
$732    $E3B3   UNKNOWN  $E3B3           ; Unknown Exxx instruction
$734    $DFF6   DRW      VF, VF, #6      ; Draw 6-byte sprite at VF, VF
$736    $FD5A   UNKNOWN  FD5A            ; Unknown Fxxx instruction
$738    $4484   SNE      V4, #84         ; Skip if V4 != 132
$73A    $EE99   UNKNOWN  $EE99           ; Unknown Exxx instruction
$73C    $53E6   UNKNOWN  $53E6           ; Unknown 5xxx instruction
$73E    $B9D7   JP       V0, $9D7        ; Jump to V0 + 9D7
$740    $556D   UNKNOWN  $556D           ; Unknown 5xxx instruction
$742    $EDBC   UNKNOWN  $EDBC           ; Unknown Exxx instruction
$744    $88D1   OR       V8, VD          ; V8 |= VD
$746    $2D6C   CALL     $D6C            ; Call subroutine at D6C
$748    $9900   SNE      V9, V0          ; Skip if V9 != V0
$74A    $B62A   JP       V0, $62A        ; Jump to V0 + 62A
$74C    $2200   CALL     $200            ; Call subroutine at 200
$74E    $4D8A   SNE      VD, #8A         ; Skip if VD != 138
$750    $39BD   SE       V9, #BD         ; Skip if V9 == 189
$752    $AC2C   LD       I, $C2C         ; Load C2C into I
$754    $5EE7   UNKNOWN  $5EE7           ; Unknown 5xxx instruction
$756    $6915   LD       V9, #15         ; Load 21 into V9
$758    $4782   SNE      V7, #82         ; Skip if V7 != 130
$75A    $7E84   ADD      VE, #84         ; Add 132 to VE
$75C    $CFCE   RND      VF, #CE         ; VF = random & CE
$75E    $BD0F   JP       V0, $D0F        ; Jump to V0 + D0F
$760    $77F6   ADD      V7, #F6         ; Add 246 to V7
$762    $EC8E   UNKNOWN  $EC8E           ; Unknown Exxx instruction
$764    $F65D   UNKNOWN  F65D            ; Unknown Fxxx instruction
$766    $F205   UNKNOWN  F205            ; Unknown Fxxx instruction
$768    $4C28   SNE      VC, #28         ; Skip if VC != 40
$76A    $8CF8   UNKNOWN  8CF8            ; Unknown 8xxx instruction
$76C    $B1CE   JP       V0, $1CE        ; Jump to V0 + 1CE
$76E    $ADA1   LD       I, $DA1         ; Load DA1 into I
$770    $2D1F   CALL     $D1F            ; Call subroutine at D1F
$772    $2583   CALL     $583            ; Call subroutine at 583
$774    $F1FE   UNKNOWN  F1FE            ; Unknown Fxxx instruction
$776    $5872   UNKNOWN  $5872           ; Unknown 5xxx instruction
$778    $B024   JP       V0, $024        ; Jump to V0 + 024
$77A    $1B31   JP       $B31            ; Jump to B31
$77C    $DEA6   DRW      VE, VA, #6      ; Draw 6-byte sprite at VE, VA
$77E    $6451   LD       V4, #51         ; Load 81 into V4
$780    $746C   ADD      V4, #6C         ; Add 108 to V4
$782    $B43A   JP       V0, $43A        ; Jump to V0 + 43A
$784    $5E91   UNKNOWN  $5E91           ; Unknown 5xxx instruction
$786    $5B98   UNKNOWN  $5B98           ; Unknown 5xxx instruction
$788    $CDA5   RND      VD, #A5         ; VD = random & A5
$78A    $A667   LD       I, $667         ; Load 667 into I
$78C    $1D97   JP       $D97            ; Jump to D97
$78E    $3D56   SE       VD, #56         ; Skip if VD == 86
$790    $C693   RND      V6, #93         ; V6 = random & 93
$792    $F263   UNKNOWN  F263            ; Unknown Fxxx instruction
$794    $30E1   SE       V0, #E1         ; Skip if V0 == 225
$796    $BCD0   JP       V0, $CD0        ; Jump to V0 + CD0
$798    $42E5   SNE      V2, #E5         ; Skip if V2 != 229
$79A    $47A9   SNE      V7, #A9         ; Skip if V7 != 169
$79C    $DE10   DRW      VE, V1, #0      ; Draw 0-byte sprite at VE, V1
$79E    $4336   SNE      V3, #36         ; Skip if V3 != 54
$7A0    $F9AA   UNKNOWN  F9AA            ; Unknown Fxxx instruction
$7A2    $CFA3   RND      VF, #A3         ; VF = random & A3
$7A4    $EA08   UNKNOWN  $EA08           ; Unknown Exxx instruction
$7A6    $324C   SE       V2, #4C         ; Skip if V2 == 76
$7A8    $87F7   SUBN     V7, VF          ; V7 = VF - V7, VF = !borrow
$7AA    $7E27   ADD      VE, #27         ; Add 39 to VE
$7AC    $BC96   JP       V0, $C96        ; Jump to V0 + C96
$7AE    $FFF8   UNKNOWN  FFF8            ; Unknown Fxxx instruction
$7B0    $B566   JP       V0, $566        ; Jump to V0 + 566
$7B2    $0927   SYS      $927            ; System call to 927
$7B4    $2F4B   CALL     $F4B            ; Call subroutine at F4B
$7B6    $B8DC   JP       V0, $8DC        ; Jump to V0 + 8DC
$7B8    $F29D   UNKNOWN  F29D            ; Unknown Fxxx instruction
$7BA    $C654   RND      V6, #54         ; V6 = random & 54
$7BC    $963E   UNKNOWN  $963E           ; Unknown 9xxx instruction
$7BE    $B7B3   JP       V0, $7B3        ; Jump to V0 + 7B3
$7C0    $2875   CALL     $875            ; Call subroutine at 875
$7C2    $1628   JP       $628            ; Jump to 628
$7C4    $CD46   RND      VD, #46         ; VD = random & 46
$7C6    $F67A   UNKNOWN  F67A            ; Unknown Fxxx instruction
$7C8    $2246   CALL     $246            ; Call subroutine at 246
$7CA    $59B8   UNKNOWN  $59B8           ; Unknown 5xxx instruction
$7CC    $1277   JP       $277            ; Jump to 277
$7CE    $3DBB   SE       VD, #BB         ; Skip if VD == 187
$7D0    $909D   UNKNOWN  $909D           ; Unknown 9xxx instruction
$7D2    $79DA   ADD      V9, #DA         ; Add 218 to V9
$7D4    $ABB2   LD       I, $BB2         ; Load BB2 into I
$7D6    $ABC7   LD       I, $BC7         ; Load BC7 into I
$7D8    $7E38   ADD      VE, #38         ; Add 56 to VE
$7DA    $6C72   LD       VC, #72         ; Load 114 into VC
$7DC    $5A6D   UNKNOWN  $5A6D           ; Unknown 5xxx instruction
$7DE    $DF32   DRW      VF, V3, #2      ; Draw 2-byte sprite at VF, V3
$7E0    $9E38   UNKNOWN  $9E38           ; Unknown 9xxx instruction
$7E2    $F84B   UNKNOWN  F84B            ; Unknown Fxxx instruction
$7E4    $CBAA   RND      VB, #AA         ; VB = random & AA
$7E6    $C531   RND      V5, #31         ; V5 = random & 31
$7E8    $76E5   ADD      V6, #E5         ; Add 229 to V6
$7EA    $7848   ADD      V8, #48         ; Add 72 to V8
$7EC    $2724   CALL     $724            ; Call subroutine at 724
$7EE    $19AC   JP       $9AC            ; Jump to 9AC
$7F0    $73D0   ADD      V3, #D0         ; Add 208 to V3
$7F2    $C143   RND      V1, #43         ; V1 = random & 43
$7F4    $1AC0   JP       $AC0            ; Jump to AC0
$7F6    $A21B   LD       I, $21B         ; Load 21B into I
$7F8    $E864   UNKNOWN  $E864           ; Unknown Exxx instruction
$7FA    $BEC9   JP       V0, $EC9        ; Jump to V0 + EC9
$7FC    $F772   UNKNOWN  F772            ; Unknown Fxxx instruction
$7FE    $6201   LD       V2, #01         ; Load 1 into V2
$800    $580E   UNKNOWN  $580E           ; Unknown 5xxx instruction
$802    $8A03   XOR      VA, V0          ; VA ^= V0
$804    $1707   JP       $707            ; Jump to 707
$806    $5969   UNKNOWN  $5969           ; Unknown 5xxx instruction
$808    $D19F   DRW      V1, V9, #F      ; Draw 15-byte sprite at V1, V9
$80A    $37BB   SE       V7, #BB         ; Skip if V7 == 187
$80C    $A6D4   LD       I, $6D4         ; Load 6D4 into I
$80E    $35DE   SE       V5, #DE         ; Skip if V5 == 222
$810    $2169   CALL     $169            ; Call subroutine at 169
$812    $51B5   UNKNOWN  $51B5           ; Unknown 5xxx instruction
$814    $F6EB   UNKNOWN  F6EB            ; Unknown Fxxx instruction
$816    $834E   SHL      V3              ; V3 <<= 1, VF = MSB
$818    $8A0B   UNKNOWN  8A0B            ; Unknown 8xxx instruction
$81A    $27D4   CALL     $7D4            ; Call subroutine at 7D4
$81C    $3556   SE       V5, #56         ; Skip if V5 == 86
$81E    $5F93   UNKNOWN  $5F93           ; Unknown 5xxx instruction
$820    $23D8   CALL     $3D8            ; Call subroutine at 3D8
$822    $5C90   SE       VC, V9          ; Skip if VC == V9
$824    $B119   JP       V0, $119        ; Jump to V0 + 119
$826    $FEFC   UNKNOWN  FEFC            ; Unknown Fxxx instruction
$828    $B202   JP       V0, $202        ; Jump to V0 + 202
$82A    $84A4   ADD      V4, VA          ; V4 += VA, VF = carry
$82C    $E34E   UNKNOWN  $E34E           ; Unknown Exxx instruction
$82E    $914B   UNKNOWN  $914B           ; Unknown 9xxx instruction
$830    $22AC   CALL     $2AC            ; Call subroutine at 2AC
$832    $7A93   ADD      VA, #93         ; Add 147 to VA
$834    $30C5   SE       V0, #C5         ; Skip if V0 == 197
$836    $12AA   JP       $2AA            ; Jump to 2AA
$838    $3D95   SE       VD, #95         ; Skip if VD == 149
$83A    $6181   LD       V1, #81         ; Load 129 into V1
$83C    $D24E   DRW      V2, V4, #E      ; Draw 14-byte sprite at V2, V4
$83E    $735D   ADD      V3, #5D         ; Add 93 to V3
$840    $24CD   CALL     $4CD            ; Call subroutine at 4CD
$842    $A20E   LD       I, $20E         ; Load 20E into I
$844    $FC46   UNKNOWN  FC46            ; Unknown Fxxx instruction
$846    $23AC   CALL     $3AC            ; Call subroutine at 3AC
$848    $8B8E   SHL      VB              ; VB <<= 1, VF = MSB
$84A    $9C5F   UNKNOWN  $9C5F           ; Unknown 9xxx instruction
$84C    $8D89   UNKNOWN  8D89            ; Unknown 8xxx instruction
$84E    $4D25   SNE      VD, #25         ; Skip if VD != 37
$850    $7742   ADD      V7, #42         ; Add 66 to V7
$852    $2584   CALL     $584            ; Call subroutine at 584
$854    $BCE2   JP       V0, $CE2        ; Jump to V0 + CE2
$856    $95EA   UNKNOWN  $95EA           ; Unknown 9xxx instruction
$858    $F375   UNKNOWN  F375            ; Unknown Fxxx instruction
$85A    $0115   SYS      $115            ; System call to 115
$85C    $62FB   LD       V2, #FB         ; Load 251 into V2
$85E    $56FD   UNKNOWN  $56FD           ; Unknown 5xxx instruction
$860    $CBAA   RND      VB, #AA         ; VB = random & AA
$862    $4F70   SNE      VF, #70         ; Skip if VF != 112
$864    $094E   SYS      $94E            ; System call to 94E
$866    $247D   CALL     $47D            ; Call subroutine at 47D
$868    $EE45   UNKNOWN  $EE45           ; Unknown Exxx instruction
$86A    $D6FE   DRW      V6, VF, #E      ; Draw 14-byte sprite at V6, VF
$86C    $D48A   DRW      V4, V8, #A      ; Draw 10-byte sprite at V4, V8
$86E    $D903   DRW      V9, V0, #3      ; Draw 3-byte sprite at V9, V0
$870    $F1DF   UNKNOWN  F1DF            ; Unknown Fxxx instruction
$872    $A38C   LD       I, $38C         ; Load 38C into I
$874    $0545   SYS      $545            ; System call to 545
$876    $6A5C   LD       VA, #5C         ; Load 92 into VA
$878    $F7DA   UNKNOWN  F7DA            ; Unknown Fxxx instruction
$87A    $32EB   SE       V2, #EB         ; Skip if V2 == 235
$87C    $028D   SYS      $28D            ; System call to 28D
$87E    $88B4   ADD      V8, VB          ; V8 += VB, VF = carry
$880    $4D34   SNE      VD, #34         ; Skip if VD != 52
$882    $7A6A   ADD      VA, #6A         ; Add 106 to VA
$884    $7F31   ADD      VF, #31         ; Add 49 to VF
$886    $A676   LD       I, $676         ; Load 676 into I
$888    $564A   UNKNOWN  $564A           ; Unknown 5xxx instruction
$88A    $CB62   RND      VB, #62         ; VB = random & 62
$88C    $7ABF   ADD      VA, #BF         ; Add 191 to VA
$88E    $69B9   LD       V9, #B9         ; Load 185 into V9
$890    $1AB4   JP       $AB4            ; Jump to AB4
$892    $5696   UNKNOWN  $5696           ; Unknown 5xxx instruction
$894    $6778   LD       V7, #78         ; Load 120 into V7
$896    $7C6C   ADD      VC, #6C         ; Add 108 to VC
$898    $B0BB   JP       V0, $0BB        ; Jump to V0 + 0BB
$89A    $C615   RND      V6, #15         ; V6 = random & 15
$89C    $3BEE   SE       VB, #EE         ; Skip if VB == 238
$89E    $8440   LD       V4, V4          ; V4 = V4
$8A0    $2A1E   CALL     $A1E            ; Call subroutine at A1E
$8A2    $68F0   LD       V8, #F0         ; Load 240 into V8
$8A4    $DED0   DRW      VE, VD, #0      ; Draw 0-byte sprite at VE, VD
$8A6    $C24F   RND      V2, #4F         ; V2 = random & 4F
$8A8    $5133   UNKNOWN  $5133           ; Unknown 5xxx instruction
$8AA    $C625   RND      V6, #25         ; V6 = random & 25
$8AC    $BB7C   JP       V0, $B7C        ; Jump to V0 + B7C
$8AE    $CA03   RND      VA, #03         ; VA = random & 03
$8B0    $3B5D   SE       VB, #5D         ; Skip if VB == 93
$8B2    $BB06   JP       V0, $B06        ; Jump to V0 + B06
$8B4    $C31C   RND      V3, #1C         ; V3 = random & 1C
$8B6    $0B09   SYS      $B09            ; System call to B09
$8B8    $5148   UNKNOWN  $5148           ; Unknown 5xxx instruction
$8BA    $2E6B   CALL     $E6B            ; Call subroutine at E6B
$8BC    $271A   CALL     $71A            ; Call subroutine at 71A
$8BE    $F7EE   UNKNOWN  F7EE            ; Unknown Fxxx instruction
$8C0    $A64C   LD       I, $64C         ; Load 64C into I
$8C2    $A75C   LD       I, $75C         ; Load 75C into I
$8C4    $FA64   UNKNOWN  FA64            ; Unknown Fxxx instruction
$8C6    $CDD1   RND      VD, #D1         ; VD = random & D1
$8C8    $15C0   JP       $5C0            ; Jump to 5C0
$8CA    $1B84   JP       $B84            ; Jump to B84
$8CC    $FE1E   ADD      I, VE           ; I += VE
$8CE    $3803   SE       V8, #03         ; Skip if V8 == 3
$8D0    $6C1A   LD       VC, #1A         ; Load 26 into VC
$8D2    $12FA   JP       $2FA            ; Jump to 2FA
$8D4    $479B   SNE      V7, #9B         ; Skip if V7 != 155
$8D6    $79F1   ADD      V9, #F1         ; Add 241 to V9
$8D8    $98F0   SNE      V8, VF          ; Skip if V8 != VF
$8DA    $9526   UNKNOWN  $9526           ; Unknown 9xxx instruction
$8DC    $D6EF   DRW      V6, VE, #F      ; Draw 15-byte sprite at V6, VE
$8DE    $D2CE   DRW      V2, VC, #E      ; Draw 14-byte sprite at V2, VC
$8E0    $51A0   SE       V1, VA          ; Skip if V1 == VA
$8E2    $52D6   UNKNOWN  $52D6           ; Unknown 5xxx instruction
$8E4    $7CB1   ADD      VC, #B1         ; Add 177 to VC
$8E6    $EC8A   UNKNOWN  $EC8A           ; Unknown Exxx instruction
$8E8    $0F68   SYS      $F68            ; System call to F68
$8EA    $101F   JP       $01F            ; Jump to 01F
$8EC    $2395   CALL     $395            ; Call subroutine at 395
$8EE    $C658   RND      V6, #58         ; V6 = random & 58
$8F0    $2163   CALL     $163            ; Call subroutine at 163
$8F2    $8EA3   XOR      VE, VA          ; VE ^= VA
$8F4    $9AEB   UNKNOWN  $9AEB           ; Unknown 9xxx instruction
$8F6    $8225   SUB      V2, V2          ; V2 -= V2, VF = !borrow
$8F8    $C547   RND      V5, #47         ; V5 = random & 47
$8FA    $A910   LD       I, $910         ; Load 910 into I
$8FC    $01A7   SYS      $1A7            ; System call to 1A7
$8FE    $8E51   OR       VE, V5          ; VE |= V5
$900    $0742   SYS      $742            ; System call to 742
$902    $1025   JP       $025            ; Jump to 025
$904    $FCD0   UNKNOWN  FCD0            ; Unknown Fxxx instruction
$906    $619C   LD       V1, #9C         ; Load 156 into V1
$908    $C436   RND      V4, #36         ; V4 = random & 36
$90A    $375D   SE       V7, #5D         ; Skip if V7 == 93
$90C    $0E11   SYS      $E11            ; System call to E11
$90E    $523C   UNKNOWN  $523C           ; Unknown 5xxx instruction
$910    $D4F0   DRW      V4, VF, #0      ; Draw 0-byte sprite at V4, VF
$912    $A24E   LD       I, $24E         ; Load 24E into I
$914    $8A2E   SHL      VA              ; VA <<= 1, VF = MSB
$916    $7464   ADD      V4, #64         ; Add 100 to V4
$918    $647A   LD       V4, #7A         ; Load 122 into V4
$91A    $5C3C   UNKNOWN  $5C3C           ; Unknown 5xxx instruction
$91C    $0D85   SYS      $D85            ; System call to D85
$91E    $F7E1   UNKNOWN  F7E1            ; Unknown Fxxx instruction
$920    $59C8   UNKNOWN  $59C8           ; Unknown 5xxx instruction
$922    $2948   CALL     $948            ; Call subroutine at 948
$924    $A188   LD       I, $188         ; Load 188 into I
$926    $4111   SNE      V1, #11         ; Skip if V1 != 17
$928    $7F11   ADD      VF, #11         ; Add 17 to VF
$92A    $BADF   JP       V0, $ADF        ; Jump to V0 + ADF
$92C    $5A82   UNKNOWN  $5A82           ; Unknown 5xxx instruction
$92E    $76B9   ADD      V6, #B9         ; Add 185 to V6
$930    $8F4A   UNKNOWN  8F4A            ; Unknown 8xxx instruction
$932    $D8D3   DRW      V8, VD, #3      ; Draw 3-byte sprite at V8, VD
$934    $AEA5   LD       I, $EA5         ; Load EA5 into I
$936    $3D0B   SE       VD, #0B         ; Skip if VD == 11
$938    $3B0D   SE       VB, #0D         ; Skip if VB == 13
$93A    $5B1A   UNKNOWN  $5B1A           ; Unknown 5xxx instruction
$93C    $D774   DRW      V7, V7, #4      ; Draw 4-byte sprite at V7, V7
$93E    $F0CC   UNKNOWN  F0CC            ; Unknown Fxxx instruction
$940    $BAE8   JP       V0, $AE8        ; Jump to V0 + AE8
$942    $45A8   SNE      V5, #A8         ; Skip if V5 != 168
$944    $C5D9   RND      V5, #D9         ; V5 = random & D9
$946    $41A0   SNE      V1, #A0         ; Skip if V1 != 160
$948    $2C9D   CALL     $C9D            ; Call subroutine at C9D
$94A    $E60F   UNKNOWN  $E60F           ; Unknown Exxx instruction
$94C    $345E   SE       V4, #5E         ; Skip if V4 == 94
$94E    $1B42   JP       $B42            ; Jump to B42
$950    $3A70   SE       VA, #70         ; Skip if VA == 112
$952    $C30A   RND      V3, #0A         ; V3 = random & 0A
$954    $CC7E   RND      VC, #7E         ; VC = random & 7E
$956    $940E   UNKNOWN  $940E           ; Unknown 9xxx instruction
$958    $70C2   ADD      V0, #C2         ; Add 194 to V0
$95A    $ED9A   UNKNOWN  $ED9A           ; Unknown Exxx instruction
$95C    $0033   SYS      $033            ; System call to 033
$95E    $AC98   LD       I, $C98         ; Load C98 into I
$960    $00F0   SYS      $0F0            ; System call to 0F0
$962    $7E52   ADD      VE, #52         ; Add 82 to VE
$964    $968B   UNKNOWN  $968B           ; Unknown 9xxx instruction
$966    $626D   LD       V2, #6D         ; Load 109 into V2
$968    $69E7   LD       V9, #E7         ; Load 231 into V9
$96A    $A192   LD       I, $192         ; Load 192 into I
$96C    $3FC7   SE       VF, #C7         ; Skip if VF == 199
$96E    $6296   LD       V2, #96         ; Load 150 into V2
$970    $EF12   UNKNOWN  $EF12           ; Unknown Exxx instruction
$972    $EE63   UNKNOWN  $EE63           ; Unknown Exxx instruction
$974    $78D4   ADD      V8, #D4         ; Add 212 to V8
$976    $F210   UNKNOWN  F210            ; Unknown Fxxx instruction
$978    $8638   UNKNOWN  8638            ; Unknown 8xxx instruction
$97A    $FF02   UNKNOWN  FF02            ; Unknown Fxxx instruction
$97C    $3A60   SE       VA, #60         ; Skip if VA == 96
$97E    $9806   UNKNOWN  $9806           ; Unknown 9xxx instruction
$980    $18DC   JP       $8DC            ; Jump to 8DC
$982    $4617   SNE      V6, #17         ; Skip if V6 != 23
$984    $7848   ADD      V8, #48         ; Add 72 to V8
$986    $17A3   JP       $7A3            ; Jump to 7A3
$988    $0505   SYS      $505            ; System call to 505
$98A    $701A   ADD      V0, #1A         ; Add 26 to V0
$98C    $125C   JP       $25C            ; Jump to 25C
$98E    $5D34   UNKNOWN  $5D34           ; Unknown 5xxx instruction
$990    $53AD   UNKNOWN  $53AD           ; Unknown 5xxx instruction
$992    $1742   JP       $742            ; Jump to 742
$994    $4FC7   SNE      VF, #C7         ; Skip if VF != 199
$996    $CC76   RND      VC, #76         ; VC = random & 76
$998    $7EB0   ADD      VE, #B0         ; Add 176 to VE
$99A    $D924   DRW      V9, V2, #4      ; Draw 4-byte sprite at V9, V2
$99C    $EBBA   UNKNOWN  $EBBA           ; Unknown Exxx instruction
$99E    $AD11   LD       I, $D11         ; Load D11 into I
$9A0    $0DCF   SYS      $DCF            ; System call to DCF
$9A2    $2A62   CALL     $A62            ; Call subroutine at A62
$9A4    $6BD5   LD       VB, #D5         ; Load 213 into VB
$9A6    $106B   JP       $06B            ; Jump to 06B
$9A8    $8A31   OR       VA, V3          ; VA |= V3
$9AA    $9061   UNKNOWN  $9061           ; Unknown 9xxx instruction
$9AC    $F76B   UNKNOWN  F76B            ; Unknown Fxxx instruction
$9AE    $819F   UNKNOWN  819F            ; Unknown 8xxx instruction
$9B0    $AFCC   LD       I, $FCC         ; Load FCC into I
$9B2    $7C5D   ADD      VC, #5D         ; Add 93 to VC
$9B4    $9172   UNKNOWN  $9172           ; Unknown 9xxx instruction
$9B6    $4FA6   SNE      VF, #A6         ; Skip if VF != 166
$9B8    $B2A2   JP       V0, $2A2        ; Jump to V0 + 2A2
$9BA    $B4EE   JP       V0, $4EE        ; Jump to V0 + 4EE
$9BC    $DEBC   DRW      VE, VB, #C      ; Draw 12-byte sprite at VE, VB
$9BE    $6106   LD       V1, #06         ; Load 6 into V1
$9C0    $1193   JP       $193            ; Jump to 193
$9C2    $7919   ADD      V9, #19         ; Add 25 to V9
$9C4    $8B6A   UNKNOWN  8B6A            ; Unknown 8xxx instruction
$9C6    $811F   UNKNOWN  811F            ; Unknown 8xxx instruction
$9C8    $6B65   LD       VB, #65         ; Load 101 into VB
$9CA    $36FC   SE       V6, #FC         ; Skip if V6 == 252
$9CC    $6FC8   LD       VF, #C8         ; Load 200 into VF
$9CE    $65F4   LD       V5, #F4         ; Load 244 into V5
$9D0    $E3AD   UNKNOWN  $E3AD           ; Unknown Exxx instruction
$9D2    $0E8C   SYS      $E8C            ; System call to E8C
$9D4    $524E   UNKNOWN  $524E           ; Unknown 5xxx instruction
$9D6    $91B0   SNE      V1, VB          ; Skip if V1 != VB
$9D8    $8416   SHR      V4              ; V4 >>= 1, VF = LSB
$9DA    $9738   UNKNOWN  $9738           ; Unknown 9xxx instruction
$9DC    $44EE   SNE      V4, #EE         ; Skip if V4 != 238
$9DE    $1FBB   JP       $FBB            ; Jump to FBB
$9E0    $5288   UNKNOWN  $5288           ; Unknown 5xxx instruction
$9E2    $9DDC   UNKNOWN  $9DDC           ; Unknown 9xxx instruction
$9E4    $B75D   JP       V0, $75D        ; Jump to V0 + 75D
$9E6    $1294   JP       $294            ; Jump to 294
$9E8    $B1DA   JP       V0, $1DA        ; Jump to V0 + 1DA
$9EA    $CBA2   RND      VB, #A2         ; VB = random & A2
$9EC    $716C   ADD      V1, #6C         ; Add 108 to V1
$9EE    $1B86   JP       $B86            ; Jump to B86
$9F0    $4FD4   SNE      VF, #D4         ; Skip if VF != 212
$9F2    $A202   LD       I, $202         ; Load 202 into I
$9F4    $CD28   RND      VD, #28         ; VD = random & 28
$9F6    $01DF   SYS      $1DF            ; System call to 1DF
$9F8    $C826   RND      V8, #26         ; V8 = random & 26
$9FA    $15DE   JP       $5DE            ; Jump to 5DE
$9FC    $0AAA   SYS      $AAA            ; System call to AAA
$9FE    $110E   JP       $10E            ; Jump to 10E
$A00    $E001   UNKNOWN  $E001           ; Unknown Exxx instruction
$A02    $3839   SE       V8, #39         ; Skip if V8 == 57
$A04    $C18A   RND      V1, #8A         ; V1 = random & 8A
$A06    $29DB   CALL     $9DB            ; Call subroutine at 9DB
$A08    $D5AB   DRW      V5, VA, #B      ; Draw 11-byte sprite at V5, VA
$A0A    $EADD   UNKNOWN  $EADD           ; Unknown Exxx instruction
$A0C    $CD90   RND      VD, #90         ; VD = random & 90
$A0E    $11BC   JP       $1BC            ; Jump to 1BC
$A10    $5CE1   UNKNOWN  $5CE1           ; Unknown 5xxx instruction
$A12    $30B9   SE       V0, #B9         ; Skip if V0 == 185
$A14    $E491   UNKNOWN  $E491           ; Unknown Exxx instruction
$A16    $C73C   RND      V7, #3C         ; V7 = random & 3C
$A18    $BAFA   JP       V0, $AFA        ; Jump to V0 + AFA
$A1A    $4062   SNE      V0, #62         ; Skip if V0 != 98
$A1C    $7E37   ADD      VE, #37         ; Add 55 to VE
$A1E    $5661   UNKNOWN  $5661           ; Unknown 5xxx instruction
$A20    $AF34   LD       I, $F34         ; Load F34 into I
$A22    $C25D   RND      V2, #5D         ; V2 = random & 5D
$A24    $4BE6   SNE      VB, #E6         ; Skip if VB != 230
$A26    $DED2   DRW      VE, VD, #2      ; Draw 2-byte sprite at VE, VD
$A28    $F5A0   UNKNOWN  F5A0            ; Unknown Fxxx instruction
$A2A    $5E5D   UNKNOWN  $5E5D           ; Unknown 5xxx instruction
$A2C    $0723   SYS      $723            ; System call to 723
$A2E    $8579   UNKNOWN  8579            ; Unknown 8xxx instruction
$A30    $F848   UNKNOWN  F848            ; Unknown Fxxx instruction
$A32    $B6E4   JP       V0, $6E4        ; Jump to V0 + 6E4
$A34    $43B9   SNE      V3, #B9         ; Skip if V3 != 185
$A36    $B495   JP       V0, $495        ; Jump to V0 + 495
$A38    $E43A   UNKNOWN  $E43A           ; Unknown Exxx instruction
$A3A    $7C8F   ADD      VC, #8F         ; Add 143 to VC
$A3C    $74FB   ADD      V4, #FB         ; Add 251 to V4
$A3E    $CE32   RND      VE, #32         ; VE = random & 32
$A40    $9408   UNKNOWN  $9408           ; Unknown 9xxx instruction
$A42    $4616   SNE      V6, #16         ; Skip if V6 != 22
$A44    $A8FF   LD       I, $8FF         ; Load 8FF into I
$A46    $63BD   LD       V3, #BD         ; Load 189 into V3
$A48    $EF33   UNKNOWN  $EF33           ; Unknown Exxx instruction
$A4A    $D9DC   DRW      V9, VD, #C      ; Draw 12-byte sprite at V9, VD
$A4C    $6447   LD       V4, #47         ; Load 71 into V4
$A4E    $A596   LD       I, $596         ; Load 596 into I
$A50    $285F   CALL     $85F            ; Call subroutine at 85F
$A52    $560E   UNKNOWN  $560E           ; Unknown 5xxx instruction
$A54    $DA6C   DRW      VA, V6, #C      ; Draw 12-byte sprite at VA, V6
$A56    $AEE8   LD       I, $EE8         ; Load EE8 into I
$A58    $ED48   UNKNOWN  $ED48           ; Unknown Exxx instruction
$A5A    $079A   SYS      $79A            ; System call to 79A
$A5C    $433E   SNE      V3, #3E         ; Skip if V3 != 62
$A5E    $5626   UNKNOWN  $5626           ; Unknown 5xxx instruction
$A60    $A2B1   LD       I, $2B1         ; Load 2B1 into I
$A62    $2B1D   CALL     $B1D            ; Call subroutine at B1D
$A64    $1A99   JP       $A99            ; Jump to A99
$A66    $8A40   LD       VA, V4          ; VA = V4
$A68    $911A   UNKNOWN  $911A           ; Unknown 9xxx instruction
$A6A    $B824   JP       V0, $824        ; Jump to V0 + 824
$A6C    $99C4   UNKNOWN  $99C4           ; Unknown 9xxx instruction
$A6E    $1682   JP       $682            ; Jump to 682
$A70    $D6D3   DRW      V6, VD, #3      ; Draw 3-byte sprite at V6, VD
$A72    $5D0D   UNKNOWN  $5D0D           ; Unknown 5xxx instruction
$A74    $2783   CALL     $783            ; Call subroutine at 783
$A76    $46F1   SNE      V6, #F1         ; Skip if V6 != 241
$A78    $B47F   JP       V0, $47F        ; Jump to V0 + 47F
$A7A    $ABD2   LD       I, $BD2         ; Load BD2 into I
$A7C    $1847   JP       $847            ; Jump to 847
$A7E    $C2FE   RND      V2, #FE         ; V2 = random & FE
$A80    $7DDB   ADD      VD, #DB         ; Add 219 to VD
$A82    $F6BC   UNKNOWN  F6BC            ; Unknown Fxxx instruction
$A84    $6D59   LD       VD, #59         ; Load 89 into VD
$A86    $9E03   UNKNOWN  $9E03           ; Unknown 9xxx instruction
$A88    $7324   ADD      V3, #24         ; Add 36 to V3
$A8A    $E60E   UNKNOWN  $E60E           ; Unknown Exxx instruction
$A8C    $09AD   SYS      $9AD            ; System call to 9AD
$A8E    $326D   SE       V2, #6D         ; Skip if V2 == 109
$A90    $7A4D   ADD      VA, #4D         ; Add 77 to VA
$A92    $4111   SNE      V1, #11         ; Skip if V1 != 17
$A94    $CDF8   RND      VD, #F8         ; VD = random & F8
$A96    $D0D0   DRW      V0, VD, #0      ; Draw 0-byte sprite at V0, VD
$A98    $F801   UNKNOWN  F801            ; Unknown Fxxx instruction
$A9A    $7B6F   ADD      VB, #6F         ; Add 111 to VB
$A9C    $575A   UNKNOWN  $575A           ; Unknown 5xxx instruction
$A9E    $8E91   OR       VE, V9          ; VE |= V9
$AA0    $16BC   JP       $6BC            ; Jump to 6BC
$AA2    $4734   SNE      V7, #34         ; Skip if V7 != 52
$AA4    $B472   JP       V0, $472        ; Jump to V0 + 472
$AA6    $91E8   UNKNOWN  $91E8           ; Unknown 9xxx instruction
$AA8    $826D   UNKNOWN  826D            ; Unknown 8xxx instruction
$AAA    $B851   JP       V0, $851        ; Jump to V0 + 851
$AAC    $9C5B   UNKNOWN  $9C5B           ; Unknown 9xxx instruction
$AAE    $B861   JP       V0, $861        ; Jump to V0 + 861
$AB0    $8F37   SUBN     VF, V3          ; VF = V3 - VF, VF = !borrow
$AB2    $01A7   SYS      $1A7            ; System call to 1A7
$AB4    $2CF2   CALL     $CF2            ; Call subroutine at CF2
$AB6    $E1DA   UNKNOWN  $E1DA           ; Unknown Exxx instruction
$AB8    $3D4F   SE       VD, #4F         ; Skip if VD == 79
$ABA    $64FE   LD       V4, #FE         ; Load 254 into V4
$ABC    $A2A0   LD       I, $2A0         ; Load 2A0 into I
$ABE    $B174   JP       V0, $174        ; Jump to V0 + 174
$AC0    $1056   JP       $056            ; Jump to 056
$AC2    $C34A   RND      V3, #4A         ; V3 = random & 4A
$AC4    $84A6   SHR      V4              ; V4 >>= 1, VF = LSB
$AC6    $FFB4   UNKNOWN  FFB4            ; Unknown Fxxx instruction
$AC8    $CFE1   RND      VF, #E1         ; VF = random & E1
$ACA    $F1E0   UNKNOWN  F1E0            ; Unknown Fxxx instruction
$ACC    $5221   UNKNOWN  $5221           ; Unknown 5xxx instruction
$ACE    $8313   XOR      V3, V1          ; V3 ^= V1
$AD0    $62D0   LD       V2, #D0         ; Load 208 into V2
$AD2    $FC18   LD       ST, VC          ; Sound timer = VC
$AD4    $26F4   CALL     $6F4            ; Call subroutine at 6F4
$AD6    $AD6B   LD       I, $D6B         ; Load D6B into I
$AD8    $343C   SE       V4, #3C         ; Skip if V4 == 60
$ADA    $C610   RND      V6, #10         ; V6 = random & 10
$ADC    $D550   DRW      V5, V5, #0      ; Draw 0-byte sprite at V5, V5
$ADE    $4FCB   SNE      VF, #CB         ; Skip if VF != 203
$AE0    $360F   SE       V6, #0F         ; Skip if V6 == 15
$AE2    $00BB   SYS      $0BB            ; System call to 0BB
$AE4    $5B56   UNKNOWN  $5B56           ; Unknown 5xxx instruction
$AE6    $C7BA   RND      V7, #BA         ; V7 = random & BA
$AE8    $226D   CALL     $26D            ; Call subroutine at 26D
$AEA    $ABE6   LD       I, $BE6         ; Load BE6 into I
$AEC    $C884   RND      V8, #84         ; V8 = random & 84
$AEE    $31B0   SE       V1, #B0         ; Skip if V1 == 176
$AF0    $2F11   CALL     $F11            ; Call subroutine at F11
$AF2    $2ABA   CALL     $ABA            ; Call subroutine at ABA
$AF4    $964D   UNKNOWN  $964D           ; Unknown 9xxx instruction
$AF6    $60D0   LD       V0, #D0         ; Load 208 into V0
$AF8    $015A   SYS      $15A            ; System call to 15A
$AFA    $EA68   UNKNOWN  $EA68           ; Unknown Exxx instruction
$AFC    $CCB5   RND      VC, #B5         ; VC = random & B5
$AFE    $5BFC   UNKNOWN  $5BFC           ; Unknown 5xxx instruction
$B00    $592F   UNKNOWN  $592F           ; Unknown 5xxx instruction
$B02    $165B   JP       $65B            ; Jump to 65B
$B04    $2B55   CALL     $B55            ; Call subroutine at B55
$B06    $5B4F   UNKNOWN  $5B4F           ; Unknown 5xxx instruction
$B08    $DCD3   DRW      VC, VD, #3      ; Draw 3-byte sprite at VC, VD
$B0A    $2039   CALL     $039            ; Call subroutine at 039
$B0C    $2EF9   CALL     $EF9            ; Call subroutine at EF9
$B0E    $EA65   UNKNOWN  $EA65           ; Unknown Exxx instruction
$B10    $672B   LD       V7, #2B         ; Load 43 into V7
$B12    $102C   JP       $02C            ; Jump to 02C
$B14    $B0FD   JP       V0, $0FD        ; Jump to V0 + 0FD
$B16    $06BD   SYS      $6BD            ; System call to 6BD
$B18    $65BD   LD       V5, #BD         ; Load 189 into V5
$B1A    $4913   SNE      V9, #13         ; Skip if V9 != 19
$B1C    $3970   SE       V9, #70         ; Skip if V9 == 112
$B1E    $41DC   SNE      V1, #DC         ; Skip if V1 != 220
$B20    $0483   SYS      $483            ; System call to 483
$B22    $DB48   DRW      VB, V4, #8      ; Draw 8-byte sprite at VB, V4
$B24    $E0D9   UNKNOWN  $E0D9           ; Unknown Exxx instruction
$B26    $B428   JP       V0, $428        ; Jump to V0 + 428
$B28    $8DE1   OR       VD, VE          ; VD |= VE
$B2A    $F96B   UNKNOWN  F96B            ; Unknown Fxxx instruction
$B2C    $E5F4   UNKNOWN  $E5F4           ; Unknown Exxx instruction
$B2E    $6A15   LD       VA, #15         ; Load 21 into VA
$B30    $7DE1   ADD      VD, #E1         ; Add 225 to VD
$B32    $DB87   DRW      VB, V8, #7      ; Draw 7-byte sprite at VB, V8
$B34    $6EB3   LD       VE, #B3         ; Load 179 into VE
$B36    $BD43   JP       V0, $D43        ; Jump to V0 + D43
$B38    $9FEC   UNKNOWN  $9FEC           ; Unknown 9xxx instruction
$B3A    $3E5B   SE       VE, #5B         ; Skip if VE == 91
$B3C    $9A88   UNKNOWN  $9A88           ; Unknown 9xxx instruction
$B3E    $6D2D   LD       VD, #2D         ; Load 45 into VD
$B40    $00DA   SYS      $0DA            ; System call to 0DA
$B42    $3F05   SE       VF, #05         ; Skip if VF == 5
$B44    $07FD   SYS      $7FD            ; System call to 7FD
$B46    $A223   LD       I, $223         ; Load 223 into I
$B48    $B997   JP       V0, $997        ; Jump to V0 + 997
$B4A    $20AD   CALL     $0AD            ; Call subroutine at 0AD
$B4C    $8372   AND      V3, V7          ; V3 &= V7
$B4E    $D516   DRW      V5, V1, #6      ; Draw 6-byte sprite at V5, V1
$B50    $5B56   UNKNOWN  $5B56           ; Unknown 5xxx instruction
$B52    $6106   LD       V1, #06         ; Load 6 into V1
$B54    $86A9   UNKNOWN  86A9            ; Unknown 8xxx instruction
$B56    $F9FA   UNKNOWN  F9FA            ; Unknown Fxxx instruction
$B58    $59AB   UNKNOWN  $59AB           ; Unknown 5xxx instruction
$B5A    $00D9   SYS      $0D9            ; System call to 0D9
$B5C    $E65A   UNKNOWN  $E65A           ; Unknown Exxx instruction
$B5E    $87E7   SUBN     V7, VE          ; V7 = VE - V7, VF = !borrow
$B60    $A3F1   LD       I, $3F1         ; Load 3F1 into I
$B62    $26A5   CALL     $6A5            ; Call subroutine at 6A5
$B64    $BF12   JP       V0, $F12        ; Jump to V0 + F12
$B66    $2651   CALL     $651            ; Call subroutine at 651
$B68    $3C4C   SE       VC, #4C         ; Skip if VC == 76
$B6A    $900F   UNKNOWN  $900F           ; Unknown 9xxx instruction
$B6C    $477F   SNE      V7, #7F         ; Skip if V7 != 127
$B6E    $CBF9   RND      VB, #F9         ; VB = random & F9
$B70    $15F0   JP       $5F0            ; Jump to 5F0
$B72    $3875   SE       V8, #75         ; Skip if V8 == 117
$B74    $38EF   SE       V8, #EF         ; Skip if V8 == 239
$B76    $4168   SNE      V1, #68         ; Skip if V1 != 104
$B78    $468C   SNE      V6, #8C         ; Skip if V6 != 140
$B7A    $3500   SE       V5, #00         ; Skip if V5 == 0
$B7C    $6C57   LD       VC, #57         ; Load 87 into VC
$B7E    $AEFE   LD       I, $EFE         ; Load EFE into I
$B80    $C12C   RND      V1, #2C         ; V1 = random & 2C
$B82    $B134   JP       V0, $134        ; Jump to V0 + 134
$B84    $DB34   DRW      VB, V3, #4      ; Draw 4-byte sprite at VB, V3
$B86    $6F1D   LD       VF, #1D         ; Load 29 into VF
$B88    $43F9   SNE      V3, #F9         ; Skip if V3 != 249
$B8A    $9A0C   UNKNOWN  $9A0C           ; Unknown 9xxx instruction
$B8C    $7812   ADD      V8, #12         ; Add 18 to V8
$B8E    $DEF0   DRW      VE, VF, #0      ; Draw 0-byte sprite at VE, VF
$B90    $6B58   LD       VB, #58         ; Load 88 into VB
$B92    $8FF9   UNKNOWN  8FF9            ; Unknown 8xxx instruction
$B94    $8500   LD       V5, V0          ; V5 = V0
$B96    $2051   CALL     $051            ; Call subroutine at 051
$B98    $F133   LD       B, V1           ; Store BCD of V1 at I, I+1, I+2
$B9A    $BC9E   JP       V0, $C9E        ; Jump to V0 + C9E
$B9C    $0BDE   SYS      $BDE            ; System call to BDE
$B9E    $40AE   SNE      V0, #AE         ; Skip if V0 != 174
$BA0    $A201   LD       I, $201         ; Load 201 into I
$BA2    $1200   JP       $200            ; Jump to 200
$BA4    $A3FD   LD       I, $3FD         ; Load 3FD into I
$BA6    $4D63   SNE      VD, #63         ; Skip if VD != 99
$BA8    $3445   SE       V4, #45         ; Skip if V4 == 69
$BAA    $E090   UNKNOWN  $E090           ; Unknown Exxx instruction
$BAC    $833B   UNKNOWN  833B            ; Unknown 8xxx instruction
$BAE    $9A22   UNKNOWN  $9A22           ; Unknown 9xxx instruction
$BB0    $3CB7   SE       VC, #B7         ; Skip if VC == 183
$BB2    $0C60   SYS      $C60            ; System call to C60
$BB4    $AB64   LD       I, $B64         ; Load B64 into I
$BB6    $163D   JP       $63D            ; Jump to 63D
$BB8    $30BB   SE       V0, #BB         ; Skip if V0 == 187
$BBA    $9A50   SNE      VA, V5          ; Skip if VA != V5
$BBC    $7D21   ADD      VD, #21         ; Add 33 to VD
$BBE    $5C72   UNKNOWN  $5C72           ; Unknown 5xxx instruction
$BC0    $6AB4   LD       VA, #B4         ; Load 180 into VA
$BC2    $CD04   RND      VD, #04         ; VD = random & 04
$BC4    $0D05   SYS      $D05            ; System call to D05
$BC6    $0551   SYS      $551            ; System call to 551
$BC8    $102D   JP       $02D            ; Jump to 02D
$BCA    $702C   ADD      V0, #2C         ; Add 44 to V0
$BCC    $A0C5   LD       I, $0C5         ; Load 0C5 into I
$BCE    $AD38   LD       I, $D38         ; Load D38 into I
$BD0    $772B   ADD      V7, #2B         ; Add 43 to V7
$BD2    $9820   SNE      V8, V2          ; Skip if V8 != V2
$BD4    $ABFA   LD       I, $BFA         ; Load BFA into I
$BD6    $BA74   JP       V0, $A74        ; Jump to V0 + A74
$BD8    $E7A3   UNKNOWN  $E7A3           ; Unknown Exxx instruction
$BDA    $1F62   JP       $F62            ; Jump to F62
$BDC    $722A   ADD      V2, #2A         ; Add 42 to V2
$BDE    $0155   SYS      $155            ; System call to 155
$BE0    $1AE7   JP       $AE7            ; Jump to AE7
$BE2    $3317   SE       V3, #17         ; Skip if V3 == 23
$BE4    $AEB2   LD       I, $EB2         ; Load EB2 into I
$BE6    $DEB8   DRW      VE, VB, #8      ; Draw 8-byte sprite at VE, VB
$BE8    $9488   UNKNOWN  $9488           ; Unknown 9xxx instruction
$BEA    $6227   LD       V2, #27         ; Load 39 into V2
$BEC    $562F   UNKNOWN  $562F           ; Unknown 5xxx instruction
$BEE    $33CF   SE       V3, #CF         ; Skip if V3 == 207
$BF0    $F7DE   UNKNOWN  F7DE            ; Unknown Fxxx instruction
$BF2    $651B   LD       V5, #1B         ; Load 27 into V5
$BF4    $B306   JP       V0, $306        ; Jump to V0 + 306
$BF6    $0E06   SYS      $E06            ; System call to E06
$BF8    $69E0   LD       V9, #E0         ; Load 224 into V9
$BFA    $C360   RND      V3, #60         ; V3 = random & 60
$BFC    $19DA   JP       $9DA            ; Jump to 9DA
$BFE    $676A   LD       V7, #6A         ; Load 106 into V7
$C00    $C7A4   RND      V7, #A4         ; V7 = random & A4
$C02    $D1DF   DRW      V1, VD, #F      ; Draw 15-byte sprite at V1, VD
$C04    $15F5   JP       $5F5            ; Jump to 5F5
$C06    $3099   SE       V0, #99         ; Skip if V0 == 153
$C08    $EDD8   UNKNOWN  $EDD8           ; Unknown Exxx instruction
$C0A    $3DDA   SE       VD, #DA         ; Skip if VD == 218
$C0C    $BBC6   JP       V0, $BC6        ; Jump to V0 + BC6
$C0E    $DE84   DRW      VE, V8, #4      ; Draw 4-byte sprite at VE, V8
$C10    $327C   SE       V2, #7C         ; Skip if V2 == 124
$C12    $A590   LD       I, $590         ; Load 590 into I
$C14    $6E9C   LD       VE, #9C         ; Load 156 into VE
$C16    $5E47   UNKNOWN  $5E47           ; Unknown 5xxx instruction
$C18    $DBB1   DRW      VB, VB, #1      ; Draw 1-byte sprite at VB, VB
$C1A    $EF30   UNKNOWN  $EF30           ; Unknown Exxx instruction
$C1C    $C78D   RND      V7, #8D         ; V7 = random & 8D
$C1E    $37A4   SE       V7, #A4         ; Skip if V7 == 164
$C20    $AB43   LD       I, $B43         ; Load B43 into I
$C22    $27F4   CALL     $7F4            ; Call subroutine at 7F4
$C24    $D92C   DRW      V9, V2, #C      ; Draw 12-byte sprite at V9, V2
$C26    $6C3A   LD       VC, #3A         ; Load 58 into VC
$C28    $C7A5   RND      V7, #A5         ; V7 = random & A5
$C2A    $94A0   SNE      V4, VA          ; Skip if V4 != VA
$C2C    $742F   ADD      V4, #2F         ; Add 47 to V4
$C2E    $16FC   JP       $6FC            ; Jump to 6FC
$C30    $5A23   UNKNOWN  $5A23           ; Unknown 5xxx instruction
$C32    $735E   ADD      V3, #5E         ; Add 94 to V3
$C34    $ECC8   UNKNOWN  $ECC8           ; Unknown Exxx instruction
$C36    $9162   UNKNOWN  $9162           ; Unknown 9xxx instruction
$C38    $7A99   ADD      VA, #99         ; Add 153 to VA
$C3A    $E73B   UNKNOWN  $E73B           ; Unknown Exxx instruction
$C3C    $9BD9   UNKNOWN  $9BD9           ; Unknown 9xxx instruction
$C3E    $63FC   LD       V3, #FC         ; Load 252 into V3
$C40    $B61A   JP       V0, $61A        ; Jump to V0 + 61A
$C42    $A7AC   LD       I, $7AC         ; Load 7AC into I
$C44    $416C   SNE      V1, #6C         ; Skip if V1 != 108
$C46    $887A   UNKNOWN  887A            ; Unknown 8xxx instruction
$C48    $BC72   JP       V0, $C72        ; Jump to V0 + C72
$C4A    $C46F   RND      V4, #6F         ; V4 = random & 6F
$C4C    $E33A   UNKNOWN  $E33A           ; Unknown Exxx instruction
$C4E    $3A4B   SE       VA, #4B         ; Skip if VA == 75
$C50    $EED1   UNKNOWN  $EED1           ; Unknown Exxx instruction
$C52    $7921   ADD      V9, #21         ; Add 33 to V9
$C54    $AE3C   LD       I, $E3C         ; Load E3C into I
$C56    $AC38   LD       I, $C38         ; Load C38 into I
$C58    $DD24   DRW      VD, V2, #4      ; Draw 4-byte sprite at VD, V2
$C5A    $9A44   UNKNOWN  $9A44           ; Unknown 9xxx instruction
$C5C    $16C8   JP       $6C8            ; Jump to 6C8
$C5E    $B750   JP       V0, $750        ; Jump to V0 + 750
$C60    $F962   UNKNOWN  F962            ; Unknown Fxxx instruction
$C62    $150B   JP       $50B            ; Jump to 50B
$C64    $17F3   JP       $7F3            ; Jump to 7F3
$C66    $490F   SNE      V9, #0F         ; Skip if V9 != 15
$C68    $B28E   JP       V0, $28E        ; Jump to V0 + 28E
$C6A    $1E42   JP       $E42            ; Jump to E42
$C6C    $7754   ADD      V7, #54         ; Add 84 to V7
$C6E    $3D70   SE       VD, #70         ; Skip if VD == 112
$C70    $AA33   LD       I, $A33         ; Load A33 into I
$C72    $C4E9   RND      V4, #E9         ; V4 = random & E9
$C74    $02B6   SYS      $2B6            ; System call to 2B6
$C76    $B1A6   JP       V0, $1A6        ; Jump to V0 + 1A6
$C78    $C622   RND      V6, #22         ; V6 = random & 22
$C7A    $CFEA   RND      VF, #EA         ; VF = random & EA
$C7C    $2012   CALL     $012            ; Call subroutine at 012
$C7E    $72E9   ADD      V2, #E9         ; Add 233 to V2
$C80    $4B3A   SNE      VB, #3A         ; Skip if VB != 58
$C82    $1B21   JP       $B21            ; Jump to B21
$C84    $2532   CALL     $532            ; Call subroutine at 532
$C86    $DB86   DRW      VB, V8, #6      ; Draw 6-byte sprite at VB, V8
$C88    $21A1   CALL     $1A1            ; Call subroutine at 1A1
$C8A    $6190   LD       V1, #90         ; Load 144 into V1
$C8C    $DE96   DRW      VE, V9, #6      ; Draw 6-byte sprite at VE, V9
$C8E    $AD29   LD       I, $D29         ; Load D29 into I
$C90    $2FC3   CALL     $FC3            ; Call subroutine at FC3
$C92    $C817   RND      V8, #17         ; V8 = random & 17
$C94    $E7FF   UNKNOWN  $E7FF           ; Unknown Exxx instruction
$C96    $564A   UNKNOWN  $564A           ; Unknown 5xxx instruction
$C98    $EF9A   UNKNOWN  $EF9A           ; Unknown Exxx instruction
$C9A    $90D1   UNKNOWN  $90D1           ; Unknown 9xxx instruction
$C9C    $AB18   LD       I, $B18         ; Load B18 into I
$C9E    $B867   JP       V0, $867        ; Jump to V0 + 867
$CA0    $3E89   SE       VE, #89         ; Skip if VE == 137
$CA2    $9124   UNKNOWN  $9124           ; Unknown 9xxx instruction
$CA4    $E93A   UNKNOWN  $E93A           ; Unknown Exxx instruction
$CA6    $F0C1   UNKNOWN  F0C1            ; Unknown Fxxx instruction
$CA8    $A654   LD       I, $654         ; Load 654 into I
$CAA    $FA2D   UNKNOWN  FA2D            ; Unknown Fxxx instruction
$CAC    $5E48   UNKNOWN  $5E48           ; Unknown 5xxx instruction
$CAE    $E242   UNKNOWN  $E242           ; Unknown Exxx instruction
$CB0    $8963   XOR      V9, V6          ; V9 ^= V6
$CB2    $5028   UNKNOWN  $5028           ; Unknown 5xxx instruction
$CB4    $0495   SYS      $495            ; System call to 495
$CB6    $C7BB   RND      V7, #BB         ; V7 = random & BB
$CB8    $8AB7   SUBN     VA, VB          ; VA = VB - VA, VF = !borrow
$CBA    $BF90   JP       V0, $F90        ; Jump to V0 + F90
$CBC    $37F7   SE       V7, #F7         ; Skip if V7 == 247
$CBE    $7481   ADD      V4, #81         ; Add 129 to V4
$CC0    $42CE   SNE      V2, #CE         ; Skip if V2 != 206
$CC2    $B7BC   JP       V0, $7BC        ; Jump to V0 + 7BC
$CC4    $EAD4   UNKNOWN  $EAD4           ; Unknown Exxx instruction
$CC6    $CA18   RND      VA, #18         ; VA = random & 18
$CC8    $4F32   SNE      VF, #32         ; Skip if VF != 50
$CCA    $B848   JP       V0, $848        ; Jump to V0 + 848
$CCC    $13E4   JP       $3E4            ; Jump to 3E4
$CCE    $818D   UNKNOWN  818D            ; Unknown 8xxx instruction
$CD0    $708F   ADD      V0, #8F         ; Add 143 to V0
$CD2    $C876   RND      V8, #76         ; V8 = random & 76
$CD4    $0035   SYS      $035            ; System call to 035
$CD6    $9913   UNKNOWN  $9913           ; Unknown 9xxx instruction
$CD8    $350E   SE       V5, #0E         ; Skip if V5 == 14
$CDA    $4DC3   SNE      VD, #C3         ; Skip if VD != 195
$CDC    $1624   JP       $624            ; Jump to 624
$CDE    $E857   UNKNOWN  $E857           ; Unknown Exxx instruction
$CE0    $AF50   LD       I, $F50         ; Load F50 into I
$CE2    $8BB7   SUBN     VB, VB          ; VB = VB - VB, VF = !borrow
$CE4    $C1F0   RND      V1, #F0         ; V1 = random & F0
$CE6    $400E   SNE      V0, #0E         ; Skip if V0 != 14
$CE8    $D253   DRW      V2, V5, #3      ; Draw 3-byte sprite at V2, V5
$CEA    $3C6D   SE       VC, #6D         ; Skip if VC == 109
$CEC    $6EA9   LD       VE, #A9         ; Load 169 into VE
$CEE    $EDA9   UNKNOWN  $EDA9           ; Unknown Exxx instruction
$CF0    $2C63   CALL     $C63            ; Call subroutine at C63
$CF2    $A4BB   LD       I, $4BB         ; Load 4BB into I
$CF4    $E9FC   UNKNOWN  $E9FC           ; Unknown Exxx instruction
$CF6    $92F8   UNKNOWN  $92F8           ; Unknown 9xxx instruction
$CF8    $87D0   LD       V7, VD          ; V7 = VD
$CFA    $9196   UNKNOWN  $9196           ; Unknown 9xxx instruction
$CFC    $3B90   SE       VB, #90         ; Skip if VB == 144
$CFE    $0845   SYS      $845            ; System call to 845
$D00    $264C   CALL     $64C            ; Call subroutine at 64C
$D02    $9657   UNKNOWN  $9657           ; Unknown 9xxx instruction
$D04    $2CF2   CALL     $CF2            ; Call subroutine at CF2
$D06    $C7EA   RND      V7, #EA         ; V7 = random & EA
$D08    $5398   UNKNOWN  $5398           ; Unknown 5xxx instruction
$D0A    $08EB   SYS      $8EB            ; System call to 8EB
$D0C    $DCC8   DRW      VC, VC, #8      ; Draw 8-byte sprite at VC, VC
$D0E    $BFBE   JP       V0, $FBE        ; Jump to V0 + FBE
$D10    $1697   JP       $697            ; Jump to 697
$D12    $10C5   JP       $0C5            ; Jump to 0C5
$D14    $69E4   LD       V9, #E4         ; Load 228 into V9
$D16    $5660   SE       V6, V6          ; Skip if V6 == V6
$D18    $B842   JP       V0, $842        ; Jump to V0 + 842
$D1A    $E75A   UNKNOWN  $E75A           ; Unknown Exxx instruction
$D1C    $BDF0   JP       V0, $DF0        ; Jump to V0 + DF0
$D1E    $884C   UNKNOWN  884C            ; Unknown 8xxx instruction
$D20    $10BB   JP       $0BB            ; Jump to 0BB
$D22    $D1FF   DRW      V1, VF, #F      ; Draw 15-byte sprite at V1, VF
$D24    $927F   UNKNOWN  $927F           ; Unknown 9xxx instruction
$D26    $39EE   SE       V9, #EE         ; Skip if V9 == 238
$D28    $DCCB   DRW      VC, VC, #B      ; Draw 11-byte sprite at VC, VC
$D2A    $B8CE   JP       V0, $8CE        ; Jump to V0 + 8CE
$D2C    $2E55   CALL     $E55            ; Call subroutine at E55
$D2E    $5186   UNKNOWN  $5186           ; Unknown 5xxx instruction
$D30    $8AFE   SHL      VA              ; VA <<= 1, VF = MSB
$D32    $0983   SYS      $983            ; System call to 983
$D34    $592A   UNKNOWN  $592A           ; Unknown 5xxx instruction
$D36    $6E54   LD       VE, #54         ; Load 84 into VE
$D38    $603D   LD       V0, #3D         ; Load 61 into V0
$D3A    $3C36   SE       VC, #36         ; Skip if VC == 54
$D3C    $4EFB   SNE      VE, #FB         ; Skip if VE != 251
$D3E    $DE30   DRW      VE, V3, #0      ; Draw 0-byte sprite at VE, V3
$D40    $1208   JP       $208            ; Jump to 208
$D42    $9C57   UNKNOWN  $9C57           ; Unknown 9xxx instruction
$D44    $7AB9   ADD      VA, #B9         ; Add 185 to VA
$D46    $F407   LD       V4, DT          ; V4 = delay timer
$D48    $DC17   DRW      VC, V1, #7      ; Draw 7-byte sprite at VC, V1
$D4A    $3B32   SE       VB, #32         ; Skip if VB == 50
$D4C    $093B   SYS      $93B            ; System call to 93B
$D4E    $1798   JP       $798            ; Jump to 798
$D50    $5856   UNKNOWN  $5856           ; Unknown 5xxx instruction
$D52    $CE48   RND      VE, #48         ; VE = random & 48
$D54    $C742   RND      V7, #42         ; V7 = random & 42
$D56    $A8BD   LD       I, $8BD         ; Load 8BD into I
$D58    $5329   UNKNOWN  $5329           ; Unknown 5xxx instruction
$D5A    $79FC   ADD      V9, #FC         ; Add 252 to V9
$D5C    $C1C3   RND      V1, #C3         ; V1 = random & C3
$D5E    $E470   UNKNOWN  $E470           ; Unknown Exxx instruction
$D60    $7310   ADD      V3, #10         ; Add 16 to V3
$D62    $37E2   SE       V7, #E2         ; Skip if V7 == 226
$D64    $68D3   LD       V8, #D3         ; Load 211 into V8
$D66    $8524   ADD      V5, V2          ; V5 += V2, VF = carry
$D68    $9058   UNKNOWN  $9058           ; Unknown 9xxx instruction
$D6A    $A101   LD       I, $101         ; Load 101 into I
$D6C    $D02E   DRW      V0, V2, #E      ; Draw 14-byte sprite at V0, V2
$D6E    $FED8   UNKNOWN  FED8            ; Unknown Fxxx instruction
$D70    $1B7F   JP       $B7F            ; Jump to B7F
$D72    $96B2   UNKNOWN  $96B2           ; Unknown 9xxx instruction
$D74    $9876   UNKNOWN  $9876           ; Unknown 9xxx instruction
$D76    $23C4   CALL     $3C4            ; Call subroutine at 3C4
$D78    $9CB6   UNKNOWN  $9CB6           ; Unknown 9xxx instruction
$D7A    $79ED   ADD      V9, #ED         ; Add 237 to V9
$D7C    $76F0   ADD      V6, #F0         ; Add 240 to V6
$D7E    $F320   UNKNOWN  F320            ; Unknown Fxxx instruction
$D80    $3DA3   SE       VD, #A3         ; Skip if VD == 163
$D82    $6A74   LD       VA, #74         ; Load 116 into VA
$D84    $E750   UNKNOWN  $E750           ; Unknown Exxx instruction
$D86    $F8A9   UNKNOWN  F8A9            ; Unknown Fxxx instruction
$D88    $1402   JP       $402            ; Jump to 402
$D8A    $4702   SNE      V7, #02         ; Skip if V7 != 2
$D8C    $FB90   UNKNOWN  FB90            ; Unknown Fxxx instruction
$D8E    $0255   SYS      $255            ; System call to 255
$D90    $44DA   SNE      V4, #DA         ; Skip if V4 != 218
$D92    $AD2A   LD       I, $D2A         ; Load D2A into I
$D94    $1699   JP       $699            ; Jump to 699
$D96    $14C7   JP       $4C7            ; Jump to 4C7
$D98    $3128   SE       V1, #28         ; Skip if V1 == 40
$D9A    $3451   SE       V4, #51         ; Skip if V4 == 81
$D9C    $DD1E   DRW      VD, V1, #E      ; Draw 14-byte sprite at VD, V1
$D9E    $7900   ADD      V9, #00         ; Add 0 to V9
$DA0    $9D1D   UNKNOWN  $9D1D           ; Unknown 9xxx instruction
$DA2    $CC60   RND      VC, #60         ; VC = random & 60
$DA4    $C13E   RND      V1, #3E         ; V1 = random & 3E
$DA6    $4824   SNE      V8, #24         ; Skip if V8 != 36
$DA8    $4975   SNE      V9, #75         ; Skip if V9 != 117
$DAA    $A088   LD       I, $088         ; Load 088 into I
$DAC    $F983   UNKNOWN  F983            ; Unknown Fxxx instruction
$DAE    $1A69   JP       $A69            ; Jump to A69
$DB0    $CF4F   RND      VF, #4F         ; VF = random & 4F
$DB2    $7172   ADD      V1, #72         ; Add 114 to V1
$DB4    $D792   DRW      V7, V9, #2      ; Draw 2-byte sprite at V7, V9
$DB6    $9F52   UNKNOWN  $9F52           ; Unknown 9xxx instruction
$DB8    $22BE   CALL     $2BE            ; Call subroutine at 2BE
$DBA    $CA73   RND      VA, #73         ; VA = random & 73
$DBC    $3C9E   SE       VC, #9E         ; Skip if VC == 158
$DBE    $9404   UNKNOWN  $9404           ; Unknown 9xxx instruction
$DC0    $1446   JP       $446            ; Jump to 446
$DC2    $2849   CALL     $849            ; Call subroutine at 849
$DC4    $2A7E   CALL     $A7E            ; Call subroutine at A7E
$DC6    $4E6C   SNE      VE, #6C         ; Skip if VE != 108
$DC8    $F16D   UNKNOWN  F16D            ; Unknown Fxxx instruction
$DCA    $588D   UNKNOWN  $588D           ; Unknown 5xxx instruction
$DCC    $C8DD   RND      V8, #DD         ; V8 = random & DD
$DCE    $2103   CALL     $103            ; Call subroutine at 103
$DD0    $A760   LD       I, $760         ; Load 760 into I
$DD2    $9902   UNKNOWN  $9902           ; Unknown 9xxx instruction
$DD4    $E34D   UNKNOWN  $E34D           ; Unknown Exxx instruction
$DD6    $3C02   SE       VC, #02         ; Skip if VC == 2
$DD8    $0393   SYS      $393            ; System call to 393
$DDA    $87A2   AND      V7, VA          ; V7 &= VA
$DDC    $61A4   LD       V1, #A4         ; Load 164 into V1
$DDE    $AFD9   LD       I, $FD9         ; Load FD9 into I
$DE0    $5791   UNKNOWN  $5791           ; Unknown 5xxx instruction
$DE2    $5654   UNKNOWN  $5654           ; Unknown 5xxx instruction
$DE4    $6311   LD       V3, #11         ; Load 17 into V3
$DE6    $26E8   CALL     $6E8            ; Call subroutine at 6E8
$DE8    $5B5A   UNKNOWN  $5B5A           ; Unknown 5xxx instruction
$DEA    $581E   UNKNOWN  $581E           ; Unknown 5xxx instruction
$DEC    $A4DF   LD       I, $4DF         ; Load 4DF into I
$DEE    $6B0D   LD       VB, #0D         ; Load 13 into VB
$DF0    $34C8   SE       V4, #C8         ; Skip if V4 == 200
$DF2    $D265   DRW      V2, V6, #5      ; Draw 5-byte sprite at V2, V6
$DF4    $A1CA   LD       I, $1CA         ; Load 1CA into I
$DF6    $708E   ADD      V0, #8E         ; Add 142 to V0
$DF8    $C52F   RND      V5, #2F         ; V5 = random & 2F
$DFA    $B2CF   JP       V0, $2CF        ; Jump to V0 + 2CF
$DFC    $1011   JP       $011            ; Jump to 011
$DFE    $8B60   LD       VB, V6          ; VB = V6
$E00    $0608   SYS      $608            ; System call to 608
$E02    $DE40   DRW      VE, V4, #0      ; Draw 0-byte sprite at VE, V4
$E04    $3126   SE       V1, #26         ; Skip if V1 == 38
$E06    $4198   SNE      V1, #98         ; Skip if V1 != 152
$E08    $3648   SE       V6, #48         ; Skip if V6 == 72
$E0A    $2F3D   CALL     $F3D            ; Call subroutine at F3D
$E0C    $A67A   LD       I, $67A         ; Load 67A into I
$E0E    $7664   ADD      V6, #64         ; Add 100 to V6
$E10    $2678   CALL     $678            ; Call subroutine at 678
$E12    $3534   SE       V5, #34         ; Skip if V5 == 52
$E14    $CCB6   RND      VC, #B6         ; VC = random & B6
$E16    $3FB4   SE       VF, #B4         ; Skip if VF == 180
$E18    $D68A   DRW      V6, V8, #A      ; Draw 10-byte sprite at V6, V8
$E1A    $ECD9   UNKNOWN  $ECD9           ; Unknown Exxx instruction
$E1C    $FB72   UNKNOWN  FB72            ; Unknown Fxxx instruction
$E1E    $6142   LD       V1, #42         ; Load 66 into V1
$E20    $4176   SNE      V1, #76         ; Skip if V1 != 118
$E22    $C82B   RND      V8, #2B         ; V8 = random & 2B
$E24    $7C9D   ADD      VC, #9D         ; Add 157 to VC
$E26    $6A91   LD       VA, #91         ; Load 145 into VA
$E28    $A8E4   LD       I, $8E4         ; Load 8E4 into I
$E2A    $8437   SUBN     V4, V3          ; V4 = V3 - V4, VF = !borrow
$E2C    $0877   SYS      $877            ; System call to 877
$E2E    $5F85   UNKNOWN  $5F85           ; Unknown 5xxx instruction
$E30    $5379   UNKNOWN  $5379           ; Unknown 5xxx instruction
$E32    $BCE1   JP       V0, $CE1        ; Jump to V0 + CE1
$E34    $6AD0   LD       VA, #D0         ; Load 208 into VA
$E36    $3154   SE       V1, #54         ; Skip if V1 == 84
$E38    $7EEC   ADD      VE, #EC         ; Add 236 to VE
$E3A    $289B   CALL     $89B            ; Call subroutine at 89B
$E3C    $C34C   RND      V3, #4C         ; V3 = random & 4C
$E3E    $B695   JP       V0, $695        ; Jump to V0 + 695
$E40    $D4A2   DRW      V4, VA, #2      ; Draw 2-byte sprite at V4, VA
$E42    $BD9D   JP       V0, $D9D        ; Jump to V0 + D9D
$E44    $F9BB   UNKNOWN  F9BB            ; Unknown Fxxx instruction
$E46    $B3F7   JP       V0, $3F7        ; Jump to V0 + 3F7
$E48    $668E   LD       V6, #8E         ; Load 142 into V6
$E4A    $2720   CALL     $720            ; Call subroutine at 720
$E4C    $A8B3   LD       I, $8B3         ; Load 8B3 into I
$E4E    $56C1   UNKNOWN  $56C1           ; Unknown 5xxx instruction
$E50    $046F   SYS      $46F            ; System call to 46F
$E52    $522F   UNKNOWN  $522F           ; Unknown 5xxx instruction
$E54    $7692   ADD      V6, #92         ; Add 146 to V6
$E56    $3131   SE       V1, #31         ; Skip if V1 == 49
$E58    $7288   ADD      V2, #88         ; Add 136 to V2
$E5A    $E588   UNKNOWN  $E588           ; Unknown Exxx instruction
$E5C    $2882   CALL     $882            ; Call subroutine at 882
$E5E    $D379   DRW      V3, V7, #9      ; Draw 9-byte sprite at V3, V7
$E60    $A406   LD       I, $406         ; Load 406 into I
$E62    $ED85   UNKNOWN  $ED85           ; Unknown Exxx instruction
$E64    $423D   SNE      V2, #3D         ; Skip if V2 != 61
$E66    $2C7A   CALL     $C7A            ; Call subroutine at C7A
$E68    $A514   LD       I, $514         ; Load 514 into I
$E6A    $45CF   SNE      V5, #CF         ; Skip if V5 != 207
$E6C    $1C65   JP       $C65            ; Jump to C65
$E6E    $0E92   SYS      $E92            ; System call to E92
$E70    $B86A   JP       V0, $86A        ; Jump to V0 + 86A
$E72    $BFBB   JP       V0, $FBB        ; Jump to V0 + FBB
$E74    $13A9   JP       $3A9            ; Jump to 3A9
$E76    $D1F8   DRW      V1, VF, #8      ; Draw 8-byte sprite at V1, VF
$E78    $52C8   UNKNOWN  $52C8           ; Unknown 5xxx instruction
$E7A    $F53C   UNKNOWN  F53C            ; Unknown Fxxx instruction
$E7C    $9B86   UNKNOWN  $9B86           ; Unknown 9xxx instruction
$E7E    $A76B   LD       I, $76B         ; Load 76B into I
$E80    $02C3   SYS      $2C3            ; System call to 2C3
$E82    $EF30   UNKNOWN  $EF30           ; Unknown Exxx instruction
$E84    $A9F0   LD       I, $9F0         ; Load 9F0 into I
$E86    $ED91   UNKNOWN  $ED91           ; Unknown Exxx instruction
$E88    $4B9B   SNE      VB, #9B         ; Skip if VB != 155
$E8A    $299E   CALL     $99E            ; Call subroutine at 99E
$E8C    $7FC9   ADD      VF, #C9         ; Add 201 to VF
$E8E    $6225   LD       V2, #25         ; Load 37 into V2
$E90    $0C2A   SYS      $C2A            ; System call to C2A
$E92    $6CC7   LD       VC, #C7         ; Load 199 into VC
$E94    $FAEF   UNKNOWN  FAEF            ; Unknown Fxxx instruction
$E96    $FB25   UNKNOWN  FB25            ; Unknown Fxxx instruction
$E98    $41DD   SNE      V1, #DD         ; Skip if V1 != 221
$E9A    $74B3   ADD      V4, #B3         ; Add 179 to V4
$E9C    $321F   SE       V2, #1F         ; Skip if V2 == 31
$E9E    $2B6A   CALL     $B6A            ; Call subroutine at B6A
$EA0    $3C90   SE       VC, #90         ; Skip if VC == 144
$EA2    $DC88   DRW      VC, V8, #8      ; Draw 8-byte sprite at VC, V8
$EA4    $24A3   CALL     $4A3            ; Call subroutine at 4A3
$EA6    $7703   ADD      V7, #03         ; Add 3 to V7
$EA8    $D2A0   DRW      V2, VA, #0      ; Draw 0-byte sprite at V2, VA
$EAA    $FCE6   UNKNOWN  FCE6            ; Unknown Fxxx instruction
$EAC    $29E9   CALL     $9E9            ; Call subroutine at 9E9
$EAE    $7056   ADD      V0, #56         ; Add 86 to V0
$EB0    $0D66   SYS      $D66            ; System call to D66
$EB2    $4124   SNE      V1, #24         ; Skip if V1 != 36
$EB4    $595C   UNKNOWN  $595C           ; Unknown 5xxx instruction
$EB6    $D1AC   DRW      V1, VA, #C      ; Draw 12-byte sprite at V1, VA
$EB8    $013E   SYS      $13E            ; System call to 13E
$EBA    $6036   LD       V0, #36         ; Load 54 into V0
$EBC    $B0FE   JP       V0, $0FE        ; Jump to V0 + 0FE
$EBE    $E2A1   SKNP     V2              ; Skip if key V2 not pressed
$EC0    $0024   SYS      $024            ; System call to 024
$EC2    $6AAA   LD       VA, #AA         ; Load 170 into VA
$EC4    $9C81   UNKNOWN  $9C81           ; Unknown 9xxx instruction
$EC6    $2F73   CALL     $F73            ; Call subroutine at F73
$EC8    $D7D0   DRW      V7, VD, #0      ; Draw 0-byte sprite at V7, VD
$ECA    $8904   ADD      V9, V0          ; V9 += V0, VF = carry
$ECC    $E64A   UNKNOWN  $E64A           ; Unknown Exxx instruction
$ECE    $8ED4   ADD      VE, VD          ; VE += VD, VF = carry
$ED0    $27F3   CALL     $7F3            ; Call subroutine at 7F3
$ED2    $CFDD   RND      VF, #DD         ; VF = random & DD
$ED4    $EEEA   UNKNOWN  $EEEA           ; Unknown Exxx instruction
$ED6    $EC8F   UNKNOWN  $EC8F           ; Unknown Exxx instruction
$ED8    $44A7   SNE      V4, #A7         ; Skip if V4 != 167
$EDA    $F1A6   UNKNOWN  F1A6            ; Unknown Fxxx instruction
$EDC    $9060   SNE      V0, V6          ; Skip if V0 != V6
$EDE    $917A   UNKNOWN  $917A           ; Unknown 9xxx instruction
$EE0    $8431   OR       V4, V3          ; V4 |= V3
$EE2    $8C90   LD       VC, V9          ; VC = V9
$EE4    $401C   SNE      V0, #1C         ; Skip if V0 != 28
$EE6    $4E3B   SNE      VE, #3B         ; Skip if VE != 59
$EE8    $C82B   RND      V8, #2B         ; V8 = random & 2B
$EEA    $B697   JP       V0, $697        ; Jump to V0 + 697
$EEC    $D074   DRW      V0, V7, #4      ; Draw 4-byte sprite at V0, V7
$EEE    $6E82   LD       VE, #82         ; Load 130 into VE
$EF0    $D604   DRW      V6, V0, #4      ; Draw 4-byte sprite at V6, V0
$EF2    $7838   ADD      V8, #38         ; Add 56 to V8
$EF4    $A22A   LD       I, $22A         ; Load 22A into I
$EF6    $53CE   UNKNOWN  $53CE           ; Unknown 5xxx instruction
$EF8    $CDA1   RND      VD, #A1         ; VD = random & A1
$EFA    $E69E   SKP      V6              ; Skip if key V6 pressed
$EFC    $C44E   RND      V4, #4E         ; V4 = random & 4E
$EFE    $6897   LD       V8, #97         ; Load 151 into V8
$F00    $4220   SNE      V2, #20         ; Skip if V2 != 32
$F02    $1D73   JP       $D73            ; Jump to D73
$F04    $43CA   SNE      V3, #CA         ; Skip if V3 != 202
$F06    $F228   UNKNOWN  F228            ; Unknown Fxxx instruction
$F08    $FB0A   LD       VB, K           ; Wait for key press, store in VB
$F0A    $6892   LD       V8, #92         ; Load 146 into V8
$F0C    $8C99   UNKNOWN  8C99            ; Unknown 8xxx instruction
$F0E    $04A9   SYS      $4A9            ; System call to 4A9
$F10    $69F0   LD       V9, #F0         ; Load 240 into V9
$F12    $B21D   JP       V0, $21D        ; Jump to V0 + 21D
$F14    $6474   LD       V4, #74         ; Load 116 into V4
$F16    $9D1B   UNKNOWN  $9D1B           ; Unknown 9xxx instruction
$F18    $DA6C   DRW      VA, V6, #C      ; Draw 12-byte sprite at VA, V6
$F1A    $95E0   SNE      V5, VE          ; Skip if V5 != VE
$F1C    $A7BD   LD       I, $7BD         ; Load 7BD into I
$F1E    $5541   UNKNOWN  $5541           ; Unknown 5xxx instruction
$F20    $60F4   LD       V0, #F4         ; Load 244 into V0
$F22    $508E   UNKNOWN  $508E           ; Unknown 5xxx instruction
$F24    $CFBF   RND      VF, #BF         ; VF = random & BF
$F26    $0867   SYS      $867            ; System call to 867
$F28    $0970   SYS      $970            ; System call to 970
$F2A    $5DCA   UNKNOWN  $5DCA           ; Unknown 5xxx instruction
$F2C    $58CE   UNKNOWN  $58CE           ; Unknown 5xxx instruction
$F2E    $159A   JP       $59A            ; Jump to 59A
$F30    $75C4   ADD      V5, #C4         ; Add 196 to V5
$F32    $430A   SNE      V3, #0A         ; Skip if V3 != 10
$F34    $F0AE   UNKNOWN  F0AE            ; Unknown Fxxx instruction
$F36    $D612   DRW      V6, V1, #2      ; Draw 2-byte sprite at V6, V1
$F38    $0FB9   SYS      $FB9            ; System call to FB9
$F3A    $85B9   UNKNOWN  85B9            ; Unknown 8xxx instruction
$F3C    $48DA   SNE      V8, #DA         ; Skip if V8 != 218
$F3E    $1F2E   JP       $F2E            ; Jump to F2E
$F40    $AFD2   LD       I, $FD2         ; Load FD2 into I
$F42    $9A93   UNKNOWN  $9A93           ; Unknown 9xxx instruction
$F44    $859E   SHL      V5              ; V5 <<= 1, VF = MSB
$F46    $9839   UNKNOWN  $9839           ; Unknown 9xxx instruction
$F48    $C6B1   RND      V6, #B1         ; V6 = random & B1
$F4A    $11D5   JP       $1D5            ; Jump to 1D5
$F4C    $0BB4   SYS      $BB4            ; System call to BB4
$F4E    $98D4   UNKNOWN  $98D4           ; Unknown 9xxx instruction
$F50    $1045   JP       $045            ; Jump to 045
$F52    $4433   SNE      V4, #33         ; Skip if V4 != 51
$F54    $A50E   LD       I, $50E         ; Load 50E into I
$F56    $18F0   JP       $8F0            ; Jump to 8F0
$F58    $EE44   UNKNOWN  $EE44           ; Unknown Exxx instruction
$F5A    $F29C   UNKNOWN  F29C            ; Unknown Fxxx instruction
$F5C    $F856   UNKNOWN  F856            ; Unknown Fxxx instruction
$F5E    $BF08   JP       V0, $F08        ; Jump to V0 + F08
$F60    $54C2   UNKNOWN  $54C2           ; Unknown 5xxx instruction
$F62    $DB25   DRW      VB, V2, #5      ; Draw 5-byte sprite at VB, V2
$F64    $CCA7   RND      VC, #A7         ; VC = random & A7
$F66    $8BEB   UNKNOWN  8BEB            ; Unknown 8xxx instruction
$F68    $4C1D   SNE      VC, #1D         ; Skip if VC != 29
$F6A    $9068   UNKNOWN  $9068           ; Unknown 9xxx instruction
$F6C    $8177   SUBN     V1, V7          ; V1 = V7 - V1, VF = !borrow
$F6E    $D7CC   DRW      V7, VC, #C      ; Draw 12-byte sprite at V7, VC
$F70    $E3CA   UNKNOWN  $E3CA           ; Unknown Exxx instruction
$F72    $DF67   DRW      VF, V6, #7      ; Draw 7-byte sprite at VF, V6
$F74    $867E   SHL      V6              ; V6 <<= 1, VF = MSB
$F76    $3F96   SE       VF, #96         ; Skip if VF == 150
$F78    $E68F   UNKNOWN  $E68F           ; Unknown Exxx instruction
$F7A    $C8D6   RND      V8, #D6         ; V8 = random & D6
$F7C    $68FC   LD       V8, #FC         ; Load 252 into V8
$F7E    $823E   SHL      V2              ; V2 <<= 1, VF = MSB
$F80    $35F3   SE       V5, #F3         ; Skip if V5 == 243
$F82    $6D35   LD       VD, #35         ; Load 53 into VD
$F84    $8C48   UNKNOWN  8C48            ; Unknown 8xxx instruction
$F86    $5679   UNKNOWN  $5679           ; Unknown 5xxx instruction
$F88    $CAF2   RND      VA, #F2         ; VA = random & F2
$F8A    $D185   DRW      V1, V8, #5      ; Draw 5-byte sprite at V1, V8
$F8C    $D22A   DRW      V2, V2, #A      ; Draw 10-byte sprite at V2, V2
$F8E    $7A3C   ADD      VA, #3C         ; Add 60 to VA
$F90    $7E03   ADD      VE, #03         ; Add 3 to VE
$F92    $93A4   UNKNOWN  $93A4           ; Unknown 9xxx instruction
$F94    $6D11   LD       VD, #11         ; Load 17 into VD
$F96    $090E   SYS      $90E            ; System call to 90E
$F98    $3391   SE       V3, #91         ; Skip if V3 == 145
$F9A    $904B   UNKNOWN  $904B           ; Unknown 9xxx instruction
$F9C    $439C   SNE      V3, #9C         ; Skip if V3 != 156
$F9E    $F601   UNKNOWN  F601            ; Unknown Fxxx instruction
$FA0    $CA0E   RND      VA, #0E         ; VA = random & 0E
$FA2    $368C   SE       V6, #8C         ; Skip if V6 == 140
$FA4    $2247   CALL     $247            ; Call subroutine at 247
$FA6    $B98F   JP       V0, $98F        ; Jump to V0 + 98F
$FA8    $7D66   ADD      VD, #66         ; Add 102 to VD
$FAA    $5F24   UNKNOWN  $5F24           ; Unknown 5xxx instruction
$FAC    $8B37   SUBN     VB, V3          ; VB = V3 - VB, VF = !borrow
$FAE    $7ED6   ADD      VE, #D6         ; Add 214 to VE
$FB0    $5122   UNKNOWN  $5122           ; Unknown 5xxx instruction
$FB2    $729E   ADD      V2, #9E         ; Add 158 to V2
$FB4    $5C5C   UNKNOWN  $5C5C           ; Unknown 5xxx instruction
$FB6    $E2F4   UNKNOWN  $E2F4           ; Unknown Exxx instruction
$FB8    $AAA3   LD       I, $AA3         ; Load AA3 into I
$FBA    $149B   JP       $49B            ; Jump to 49B
$FBC    $7C34   ADD      VC, #34         ; Add 52 to VC
$FBE    $DFDC   DRW      VF, VD, #C      ; Draw 12-byte sprite at VF, VD
$FC0    $79A3   ADD      V9, #A3         ; Add 163 to V9
$FC2    $0D78   SYS      $D78            ; System call to D78
$FC4    $92EB   UNKNOWN  $92EB           ; Unknown 9xxx instruction
$FC6    $D96E   DRW      V9, V6, #E      ; Draw 14-byte sprite at V9, V6
$FC8    $0AD7   SYS      $AD7            ; System call to AD7
$FCA    $BC39   JP       V0, $C39        ; Jump to V0 + C39
$FCC    $BAC0   JP       V0, $AC0        ; Jump to V0 + AC0
$FCE    $58AB   UNKNOWN  $58AB           ; Unknown 5xxx instruction
$FD0    $6199   LD       V1, #99         ; Load 153 into V1
$FD2    $DC7E   DRW      VC, V7, #E      ; Draw 14-byte sprite at VC, V7
$FD4    $9BFC   UNKNOWN  $9BFC           ; Unknown 9xxx instruction
$FD6    $E48F   UNKNOWN  $E48F           ; Unknown Exxx instruction
$FD8    $F1C3   UNKNOWN  F1C3            ; Unknown Fxxx instruction
$FDA    $E339   UNKNOWN  $E339           ; Unknown Exxx instruction
$FDC    $986E   UNKNOWN  $986E           ; Unknown 9xxx instruction
$FDE    $0890   SYS      $890            ; System call to 890
$FE0    $19BF   JP       $9BF            ; Jump to 9BF
$FE2    $BA3D   JP       V0, $A3D        ; Jump to V0 + A3D
$FE4    $73A8   ADD      V3, #A8         ; Add 168 to V3
$FE6    $1C46   JP       $C46            ; Jump to C46
$FE8    $231D   CALL     $31D            ; Call subroutine at 31D
$FEA    $9884   UNKNOWN  $9884           ; Unknown 9xxx instruction
$FEC    $55B7   UNKNOWN  $55B7           ; Unknown 5xxx instruction
$FEE    $564F   UNKNOWN  $564F           ; Unknown 5xxx instruction
$FF0    $DB71   DRW      VB, V7, #1      ; Draw 1-byte sprite at VB, V7
$FF2    $7641   ADD      V6, #41         ; Add 65 to V6
$FF4    $89F9   UNKNOWN  89F9            ; Unknown 8xxx instruction
$FF6    $46CA   SNE      V6, #CA         ; Skip if V6 != 202
$FF8    $41A9   SNE      V1, #A9         ; Skip if V1 != 169
$FFA    $8EA5   SUB      VE, VA          ; VE -= VA, VF = !borrow
$FFC    $C3A0   RND      V3, #A0         ; V3 = random & A0
$FFE    $F053   UNKNOWN  F053            ; Unknown Fxxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 452 (25.2%)
  LD      : 246 (13.7%)
  JP      : 213 (11.9%)
  ADD     : 137 ( 7.6%)
  SYS     : 116 ( 6.5%)
  DRW     : 116 ( 6.5%)
  RND     : 114 ( 6.4%)
  SE      : 114 ( 6.4%)
  SNE     : 112 ( 6.3%)
  CALL    : 111 ( 6.2%)
  SUBN    :  14 ( 0.8%)
  SHL     :  12 ( 0.7%)
  OR      :   9 ( 0.5%)
  XOR     :   7 ( 0.4%)
  SUB     :   6 ( 0.3%)
  SHR     :   5 ( 0.3%)
  AND     :   5 ( 0.3%)
  SKNP    :   1 ( 0.1%)
  SKP     :   1 ( 0.1%)

Memory Operations: 383 (21.4%)
Arithmetic Operations: 178 (9.9%)
