
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B2449D01_I32412_C2934_c168e08bf662.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 2449
Instance: 32412
Direction: ascending
Final Array: [2, 4, 4, 58, 115, 134, 175, 192]
Operations: R:0 W:1 C:141 S:31

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 121
Sort Array References:
  $20E: LD I, $300 ; Load 300 into I
  $21E: LD I, $7D2 ; Load 7D2 into I
  $23A: LD I, $6B1 ; Load 6B1 into I
  $23E: LD I, $BBC ; Load BBC into I
  $252: LD I, $918 ; Load 918 into I
  $26E: LD I, $057 ; Load 057 into I
  $272: LD I, $917 ; Load 917 into I
  $2BA: LD I, $EEC ; Load EEC into I
  $2D4: LD I, $360 ; Load 360 into I
  $2E6: LD I, $657 ; Load 657 into I
  $306: LD I, $FC0 ; Load FC0 into I
  $30A: LD I, $598 ; Load 598 into I
  $316: LD I, $847 ; Load 847 into I
  $328: LD I, $127 ; Load 127 into I
  $3A4: LD I, $550 ; Load 550 into I
  $3B2: LD I, $E8C ; Load E8C into I
  $3CA: LD I, $B39 ; Load B39 into I
  $3D4: LD I, $4B5 ; Load 4B5 into I
  $3D6: LD I, $D46 ; Load D46 into I
  $3DC: LD I, $347 ; Load 347 into I
  $3EC: LD I, $118 ; Load 118 into I
  $420: LD I, $649 ; Load 649 into I
  $43A: LD I, $836 ; Load 836 into I
  $44E: LD I, $3A4 ; Load 3A4 into I
  $492: LD I, $7B5 ; Load 7B5 into I
  $4B0: LD I, $B0A ; Load B0A into I
  $4B8: LD I, $C9E ; Load C9E into I
  $4F6: LD I, $A45 ; Load A45 into I
  $518: LD I, $B69 ; Load B69 into I
  $542: LD I, $A36 ; Load A36 into I
  $574: LD I, $3B0 ; Load 3B0 into I
  $59A: LD I, $590 ; Load 590 into I
  $5C0: LD I, $6AE ; Load 6AE into I
  $5F8: ADD I, V0 ; I ADDRESS MANIPULATION
  $612: LD I, $443 ; Load 443 into I
  $63A: LD I, $841 ; Load 841 into I
  $654: LD I, $6E2 ; Load 6E2 into I
  $678: LD I, $2FB ; Load 2FB into I
  $688: LD I, $997 ; Load 997 into I
  $68A: LD I, $376 ; Load 376 into I
  $6B4: LD I, $01F ; Load 01F into I
  $6C6: LD I, $0EF ; Load 0EF into I
  $6CA: LD I, $4A9 ; Load 4A9 into I
  $6F4: LD I, $699 ; Load 699 into I
  $716: LD I, $CDC ; Load CDC into I
  $722: LD I, $E91 ; Load E91 into I
  $740: LD I, $852 ; Load 852 into I
  $74A: LD I, $E34 ; Load E34 into I
  $752: LD I, $5A8 ; Load 5A8 into I
  $77C: LD I, $3B8 ; Load 3B8 into I
  $7BE: LD I, $3C7 ; Load 3C7 into I
  $7C6: LD I, $AF9 ; Load AF9 into I
  $7F6: LD I, $0B7 ; Load 0B7 into I
  $806: LD I, $63A ; Load 63A into I
  $848: LD I, $917 ; Load 917 into I
  $856: LD I, $9A2 ; Load 9A2 into I
  $870: LD I, $90D ; Load 90D into I
  $8B2: LD I, $574 ; Load 574 into I
  $91A: LD I, $335 ; Load 335 into I
  $942: LD I, $335 ; Load 335 into I
  $95C: LD I, $398 ; Load 398 into I
  $986: LD I, $7D2 ; Load 7D2 into I
  $988: LD I, $788 ; Load 788 into I
  $998: LD I, $A10 ; Load A10 into I
  $9A6: LD I, $DD1 ; Load DD1 into I
  $9CA: LD I, $B23 ; Load B23 into I
  $9D2: LD I, $98A ; Load 98A into I
  $9EC: LD I, $D92 ; Load D92 into I
  $A0E: LD I, $06B ; Load 06B into I
  $A16: LD I, $D21 ; Load D21 into I
  $A1C: LD I, $CBA ; Load CBA into I
  $A2C: LD I, $052 ; Load 052 into I
  $A54: LD I, $E27 ; Load E27 into I
  $A72: LD I, $2DD ; Load 2DD into I
  $A84: LD I, $C00 ; Load C00 into I
  $AA2: LD I, $F71 ; Load F71 into I
  $AE0: LD I, $6E9 ; Load 6E9 into I
  $B0A: LD I, $DC9 ; Load DC9 into I
  $B14: LD I, $24C ; Load 24C into I
  $B48: LD I, $589 ; Load 589 into I
  $B6A: LD I, $0DA ; Load 0DA into I
  $BAE: LD I, $2CA ; Load 2CA into I
  $BBC: LD I, $E29 ; Load E29 into I
  $BC6: LD I, $7B7 ; Load 7B7 into I
  $BE6: LD I, $EBF ; Load EBF into I
  $BEE: LD I, $BFE ; Load BFE into I
  $BFA: LD I, $962 ; Load 962 into I
  $C0A: LD I, $1EE ; Load 1EE into I
  $C42: LD I, $E86 ; Load E86 into I
  $C74: LD I, $D70 ; Load D70 into I
  $C78: LD I, $1BF ; Load 1BF into I
  $C88: LD I, $1B3 ; Load 1B3 into I
  $C8A: LD I, $85E ; Load 85E into I
  $C8C: LD I, $27B ; Load 27B into I
  $CC6: LD I, $CEF ; Load CEF into I
  $CDE: LD I, $11A ; Load 11A into I
  $CE6: LD I, $8CC ; Load 8CC into I
  $D02: LD I, $F0D ; Load F0D into I
  $D16: LD I, $D4C ; Load D4C into I
  $D1E: LD I, $B98 ; Load B98 into I
  $D3E: LD I, $834 ; Load 834 into I
  $D50: LD I, $B5F ; Load B5F into I
  $D6C: LD I, $AAB ; Load AAB into I
  $D84: LD I, $491 ; Load 491 into I
  $D90: LD I, $C3B ; Load C3B into I
  $DDE: LD I, $EBF ; Load EBF into I
  $DE4: LD I, $8FD ; Load 8FD into I
  $E18: LD I, $91F ; Load 91F into I
  $E38: LD I, $D47 ; Load D47 into I
  $E3E: LD I, $314 ; Load 314 into I
  $E78: LD I, $B63 ; Load B63 into I
  $E86: LD I, $7F3 ; Load 7F3 into I
  $EB6: LD I, $994 ; Load 994 into I
  $EC0: LD I, $594 ; Load 594 into I
  $F1A: LD I, $7D3 ; Load 7D3 into I
  $F42: LD I, $ADF ; Load ADF into I
  $F62: LD I, $A56 ; Load A56 into I
  $F64: LD I, $FEF ; Load FEF into I
  $F66: LD I, $4FC ; Load 4FC into I
  $F98: LD I, $998 ; Load 998 into I
  $F9E: LD I, $C3C ; Load C3C into I

CONTROL FLOW ANALYSIS:
Jumps: 231
Calls: 116
Branches: 231
Loops: 126
Loop Structures:
  $2BE -> $299 (backward jump)
  $32A -> $055 (backward jump)
  $3B8 -> $19B (backward jump)
  $412 -> $1A7 (backward jump)
  $460 -> $191 (backward jump)
  $4C6 -> $362 (backward jump)
  $4D4 -> $34C (backward jump)
  $512 -> $359 (backward jump)
  $556 -> $416 (backward jump)
  $56A -> $27F (backward jump)
  $572 -> $571 (backward jump)
  $5B8 -> $2D3 (backward jump)
  $5C8 -> $531 (backward jump)
  $5D2 -> $1CA (backward jump)
  $670 -> $298 (backward jump)
  $6B0 -> $2BC (backward jump)
  $6D0 -> $659 (backward jump)
  $6EE -> $346 (backward jump)
  $71C -> $4EC (backward jump)
  $74E -> $27E (backward jump)
  $77A -> $41A (backward jump)
  $77E -> $413 (backward jump)
  $808 -> $259 (backward jump)
  $85C -> $3A3 (backward jump)
  $876 -> $0EA (backward jump)
  $888 -> $429 (backward jump)
  $8DC -> $678 (backward jump)
  $8E2 -> $68A (backward jump)
  $8EC -> $4D5 (backward jump)
  $914 -> $4EF (backward jump)
  $91C -> $079 (backward jump)
  $91E -> $490 (backward jump)
  $930 -> $889 (backward jump)
  $934 -> $765 (backward jump)
  $948 -> $111 (backward jump)
  $9A0 -> $4FF (backward jump)
  $9B6 -> $160 (backward jump)
  $9EE -> $84B (backward jump)
  $9F2 -> $94C (backward jump)
  $A36 -> $914 (backward jump)
  $A4A -> $53B (backward jump)
  $A5C -> $25A (backward jump)
  $A64 -> $524 (backward jump)
  $A76 -> $230 (backward jump)
  $A8C -> $1AE (backward jump)
  $A8E -> $44A (backward jump)
  $AAE -> $6BE (backward jump)
  $AB0 -> $180 (backward jump)
  $AB6 -> $17C (backward jump)
  $AD4 -> $20C (backward jump)
  $AD8 -> $1BB (backward jump)
  $B08 -> $0A5 (backward jump)
  $B0E -> $670 (backward jump)
  $B1E -> $A64 (backward jump)
  $B20 -> $37D (backward jump)
  $B24 -> $30B (backward jump)
  $B4A -> $446 (backward jump)
  $B54 -> $B4E (backward jump)
  $B58 -> $173 (backward jump)
  $B6E -> $1C0 (backward jump)
  $B78 -> $7C4 (backward jump)
  $B9A -> $58D (backward jump)
  $BB2 -> $766 (backward jump)
  $BC8 -> $AA9 (backward jump)
  $BD2 -> $810 (backward jump)
  $BD6 -> $B05 (backward jump)
  $C12 -> $1CA (backward jump)
  $C36 -> $32C (backward jump)
  $C5E -> $2CD (backward jump)
  $C7A -> $08D (backward jump)
  $C80 -> $44B (backward jump)
  $C86 -> $A7D (backward jump)
  $C9C -> $817 (backward jump)
  $CAE -> $56D (backward jump)
  $CB8 -> $A08 (backward jump)
  $CCA -> $7D2 (backward jump)
  $CD2 -> $90B (backward jump)
  $CDA -> $989 (backward jump)
  $D3A -> $AAA (backward jump)
  $D44 -> $3ED (backward jump)
  $D62 -> $80A (backward jump)
  $D72 -> $45D (backward jump)
  $D7E -> $61C (backward jump)
  $DA2 -> $708 (backward jump)
  $DA6 -> $12B (backward jump)
  $DA8 -> $66C (backward jump)
  $DC2 -> $A64 (backward jump)
  $DC4 -> $4E2 (backward jump)
  $DC8 -> $817 (backward jump)
  $DD8 -> $DB8 (backward jump)
  $DFA -> $6D5 (backward jump)
  $E1C -> $7AA (backward jump)
  $E46 -> $924 (backward jump)
  $E54 -> $3F9 (backward jump)
  $E5C -> $0A8 (backward jump)
  $E66 -> $329 (backward jump)
  $E74 -> $73A (backward jump)
  $E88 -> $DD5 (backward jump)
  $E9A -> $48F (backward jump)
  $EA6 -> $668 (backward jump)
  $EA8 -> $B87 (backward jump)
  $EB4 -> $7E2 (backward jump)
  $EBA -> $C20 (backward jump)
  $EBC -> $E2C (backward jump)
  $EC4 -> $2FC (backward jump)
  $EE2 -> $CC1 (backward jump)
  $EE8 -> $501 (backward jump)
  $EFA -> $B22 (backward jump)
  $EFE -> $C03 (backward jump)
  $F08 -> $440 (backward jump)
  $F0A -> $E2B (backward jump)
  $F1C -> $09A (backward jump)
  $F28 -> $931 (backward jump)
  $F2A -> $65C (backward jump)
  $F40 -> $0AE (backward jump)
  $F5E -> $C9C (backward jump)
  $F6E -> $545 (backward jump)
  $F82 -> $716 (backward jump)
  $F8C -> $BA9 (backward jump)
  $F9C -> $BF2 (backward jump)
  $FBA -> $FB9 (backward jump)
  $FBE -> $A95 (backward jump)
  $FD8 -> $796 (backward jump)
  $FE0 -> $6B1 (backward jump)
  $FE4 -> $7E4 (backward jump)
  $FF4 -> $251 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $4429   SNE      V4, #29         ; Skip if V4 != 41
$202    $21E2   CALL     $1E2            ; Call subroutine at 1E2
$204    $D8AE   DRW      V8, VA, #E      ; Draw 14-byte sprite at V8, VA
$206    $8299   UNKNOWN  8299            ; Unknown 8xxx instruction
$208    $53DF   UNKNOWN  $53DF           ; Unknown 5xxx instruction
$20A    $811F   UNKNOWN  811F            ; Unknown 8xxx instruction
$20C    $6241   LD       V2, #41         ; Load 65 into V2
$20E    $A300   LD       I, $300         ; Load 300 into I
$210    $6073   LD       V0, #73         ; Load 115 into V0
$212    $D18B   DRW      V1, V8, #B      ; Draw 11-byte sprite at V1, V8
$214    $F841   UNKNOWN  F841            ; Unknown Fxxx instruction
$216    $6A0A   LD       VA, #0A         ; Load 10 into VA
$218    $272D   CALL     $72D            ; Call subroutine at 72D
$21A    $907C   UNKNOWN  $907C           ; Unknown 9xxx instruction
$21C    $4980   SNE      V9, #80         ; Skip if V9 != 128
$21E    $A7D2   LD       I, $7D2         ; Load 7D2 into I
$220    $9B8A   UNKNOWN  $9B8A           ; Unknown 9xxx instruction
$222    $5DF4   UNKNOWN  $5DF4           ; Unknown 5xxx instruction
$224    $6296   LD       V2, #96         ; Load 150 into V2
$226    $BCA7   JP       V0, $CA7        ; Jump to V0 + CA7
$228    $0430   SYS      $430            ; System call to 430
$22A    $78DD   ADD      V8, #DD         ; Add 221 to V8
$22C    $BA07   JP       V0, $A07        ; Jump to V0 + A07
$22E    $9390   SNE      V3, V9          ; Skip if V3 != V9
$230    $22E6   CALL     $2E6            ; Call subroutine at 2E6
$232    $23A8   CALL     $3A8            ; Call subroutine at 3A8
$234    $0495   SYS      $495            ; System call to 495
$236    $62F5   LD       V2, #F5         ; Load 245 into V2
$238    $B286   JP       V0, $286        ; Jump to V0 + 286
$23A    $A6B1   LD       I, $6B1         ; Load 6B1 into I
$23C    $3ECF   SE       VE, #CF         ; Skip if VE == 207
$23E    $ABBC   LD       I, $BBC         ; Load BBC into I
$240    $DF43   DRW      VF, V4, #3      ; Draw 3-byte sprite at VF, V4
$242    $4BDD   SNE      VB, #DD         ; Skip if VB != 221
$244    $B40B   JP       V0, $40B        ; Jump to V0 + 40B
$246    $7BA9   ADD      VB, #A9         ; Add 169 to VB
$248    $6F81   LD       VF, #81         ; Load 129 into VF
$24A    $75C6   ADD      V5, #C6         ; Add 198 to V5
$24C    $3369   SE       V3, #69         ; Skip if V3 == 105
$24E    $3111   SE       V1, #11         ; Skip if V1 == 17
$250    $4386   SNE      V3, #86         ; Skip if V3 != 134
$252    $A918   LD       I, $918         ; Load 918 into I
$254    $B9D6   JP       V0, $9D6        ; Jump to V0 + 9D6
$256    $0865   SYS      $865            ; System call to 865
$258    $DB45   DRW      VB, V4, #5      ; Draw 5-byte sprite at VB, V4
$25A    $8B37   SUBN     VB, V3          ; VB = V3 - VB, VF = !borrow
$25C    $50C5   UNKNOWN  $50C5           ; Unknown 5xxx instruction
$25E    $34D0   SE       V4, #D0         ; Skip if V4 == 208
$260    $0EFD   SYS      $EFD            ; System call to EFD
$262    $C4FC   RND      V4, #FC         ; V4 = random & FC
$264    $033F   SYS      $33F            ; System call to 33F
$266    $888A   UNKNOWN  888A            ; Unknown 8xxx instruction
$268    $69A2   LD       V9, #A2         ; Load 162 into V9
$26A    $2C55   CALL     $C55            ; Call subroutine at C55
$26C    $2580   CALL     $580            ; Call subroutine at 580
$26E    $A057   LD       I, $057         ; Load 057 into I
$270    $C3F5   RND      V3, #F5         ; V3 = random & F5
$272    $A917   LD       I, $917         ; Load 917 into I
$274    $C598   RND      V5, #98         ; V5 = random & 98
$276    $E135   UNKNOWN  $E135           ; Unknown Exxx instruction
$278    $DA6B   DRW      VA, V6, #B      ; Draw 11-byte sprite at VA, V6
$27A    $269B   CALL     $69B            ; Call subroutine at 69B
$27C    $C5AF   RND      V5, #AF         ; V5 = random & AF
$27E    $522D   UNKNOWN  $522D           ; Unknown 5xxx instruction
$280    $2EDF   CALL     $EDF            ; Call subroutine at EDF
$282    $1681   JP       $681            ; Jump to 681
$284    $44EB   SNE      V4, #EB         ; Skip if V4 != 235
$286    $7DB0   ADD      VD, #B0         ; Add 176 to VD
$288    $991A   UNKNOWN  $991A           ; Unknown 9xxx instruction
$28A    $151C   JP       $51C            ; Jump to 51C
$28C    $0894   SYS      $894            ; System call to 894
$28E    $CBFA   RND      VB, #FA         ; VB = random & FA
$290    $25BC   CALL     $5BC            ; Call subroutine at 5BC
$292    $6CE2   LD       VC, #E2         ; Load 226 into VC
$294    $5519   UNKNOWN  $5519           ; Unknown 5xxx instruction
$296    $68D3   LD       V8, #D3         ; Load 211 into V8
$298    $43AB   SNE      V3, #AB         ; Skip if V3 != 171
$29A    $5867   UNKNOWN  $5867           ; Unknown 5xxx instruction
$29C    $1702   JP       $702            ; Jump to 702
$29E    $69F9   LD       V9, #F9         ; Load 249 into V9
$2A0    $94FD   UNKNOWN  $94FD           ; Unknown 9xxx instruction
$2A2    $417F   SNE      V1, #7F         ; Skip if V1 != 127
$2A4    $2EEF   CALL     $EEF            ; Call subroutine at EEF
$2A6    $DBDB   DRW      VB, VD, #B      ; Draw 11-byte sprite at VB, VD
$2A8    $64BA   LD       V4, #BA         ; Load 186 into V4
$2AA    $63F8   LD       V3, #F8         ; Load 248 into V3
$2AC    $0F21   SYS      $F21            ; System call to F21
$2AE    $EBFD   UNKNOWN  $EBFD           ; Unknown Exxx instruction
$2B0    $7997   ADD      V9, #97         ; Add 151 to V9
$2B2    $73F3   ADD      V3, #F3         ; Add 243 to V3
$2B4    $4493   SNE      V4, #93         ; Skip if V4 != 147
$2B6    $2007   CALL     $007            ; Call subroutine at 007
$2B8    $E329   UNKNOWN  $E329           ; Unknown Exxx instruction
$2BA    $AEEC   LD       I, $EEC         ; Load EEC into I
$2BC    $0A83   SYS      $A83            ; System call to A83
$2BE    $B299   JP       V0, $299        ; Jump to V0 + 299
$2C0    $1F74   JP       $F74            ; Jump to F74
$2C2    $CB85   RND      VB, #85         ; VB = random & 85
$2C4    $3B40   SE       VB, #40         ; Skip if VB == 64
$2C6    $C5DB   RND      V5, #DB         ; V5 = random & DB
$2C8    $410A   SNE      V1, #0A         ; Skip if V1 != 10
$2CA    $9702   UNKNOWN  $9702           ; Unknown 9xxx instruction
$2CC    $DA7B   DRW      VA, V7, #B      ; Draw 11-byte sprite at VA, V7
$2CE    $85CE   SHL      V5              ; V5 <<= 1, VF = MSB
$2D0    $CA3B   RND      VA, #3B         ; VA = random & 3B
$2D2    $FF60   UNKNOWN  FF60            ; Unknown Fxxx instruction
$2D4    $A360   LD       I, $360         ; Load 360 into I
$2D6    $450F   SNE      V5, #0F         ; Skip if V5 != 15
$2D8    $7D02   ADD      VD, #02         ; Add 2 to VD
$2DA    $6AF0   LD       VA, #F0         ; Load 240 into VA
$2DC    $D49B   DRW      V4, V9, #B      ; Draw 11-byte sprite at V4, V9
$2DE    $8614   ADD      V6, V1          ; V6 += V1, VF = carry
$2E0    $DEEB   DRW      VE, VE, #B      ; Draw 11-byte sprite at VE, VE
$2E2    $058B   SYS      $58B            ; System call to 58B
$2E4    $0B16   SYS      $B16            ; System call to B16
$2E6    $A657   LD       I, $657         ; Load 657 into I
$2E8    $2285   CALL     $285            ; Call subroutine at 285
$2EA    $2DEA   CALL     $DEA            ; Call subroutine at DEA
$2EC    $FB85   UNKNOWN  FB85            ; Unknown Fxxx instruction
$2EE    $CB9E   RND      VB, #9E         ; VB = random & 9E
$2F0    $8148   UNKNOWN  8148            ; Unknown 8xxx instruction
$2F2    $7567   ADD      V5, #67         ; Add 103 to V5
$2F4    $6CD6   LD       VC, #D6         ; Load 214 into VC
$2F6    $93D5   UNKNOWN  $93D5           ; Unknown 9xxx instruction
$2F8    $8181   OR       V1, V8          ; V1 |= V8
$2FA    $3A62   SE       VA, #62         ; Skip if VA == 98
$2FC    $BF94   JP       V0, $F94        ; Jump to V0 + F94
$2FE    $2AB7   CALL     $AB7            ; Call subroutine at AB7
$300    $0204   SYS      $204            ; System call to 204
$302    $043A   SYS      $43A            ; System call to 43A
$304    $7386   ADD      V3, #86         ; Add 134 to V3
$306    $AFC0   LD       I, $FC0         ; Load FC0 into I
$308    $23DE   CALL     $3DE            ; Call subroutine at 3DE
$30A    $A598   LD       I, $598         ; Load 598 into I
$30C    $48F2   SNE      V8, #F2         ; Skip if V8 != 242
$30E    $F567   UNKNOWN  F567            ; Unknown Fxxx instruction
$310    $6898   LD       V8, #98         ; Load 152 into V8
$312    $CC9C   RND      VC, #9C         ; VC = random & 9C
$314    $61A2   LD       V1, #A2         ; Load 162 into V1
$316    $A847   LD       I, $847         ; Load 847 into I
$318    $E74B   UNKNOWN  $E74B           ; Unknown Exxx instruction
$31A    $CD87   RND      VD, #87         ; VD = random & 87
$31C    $B7C0   JP       V0, $7C0        ; Jump to V0 + 7C0
$31E    $9D33   UNKNOWN  $9D33           ; Unknown 9xxx instruction
$320    $D67D   DRW      V6, V7, #D      ; Draw 13-byte sprite at V6, V7
$322    $55FE   UNKNOWN  $55FE           ; Unknown 5xxx instruction
$324    $7D80   ADD      VD, #80         ; Add 128 to VD
$326    $FC54   UNKNOWN  FC54            ; Unknown Fxxx instruction
$328    $A127   LD       I, $127         ; Load 127 into I
$32A    $1055   JP       $055            ; Jump to 055
$32C    $76B1   ADD      V6, #B1         ; Add 177 to V6
$32E    $8DCB   UNKNOWN  8DCB            ; Unknown 8xxx instruction
$330    $2681   CALL     $681            ; Call subroutine at 681
$332    $E32E   UNKNOWN  $E32E           ; Unknown Exxx instruction
$334    $FA0A   LD       VA, K           ; Wait for key press, store in VA
$336    $3C4C   SE       VC, #4C         ; Skip if VC == 76
$338    $080C   SYS      $80C            ; System call to 80C
$33A    $1BDC   JP       $BDC            ; Jump to BDC
$33C    $2B0E   CALL     $B0E            ; Call subroutine at B0E
$33E    $09CB   SYS      $9CB            ; System call to 9CB
$340    $4065   SNE      V0, #65         ; Skip if V0 != 101
$342    $7ECA   ADD      VE, #CA         ; Add 202 to VE
$344    $6865   LD       V8, #65         ; Load 101 into V8
$346    $01B8   SYS      $1B8            ; System call to 1B8
$348    $3F56   SE       VF, #56         ; Skip if VF == 86
$34A    $BD2E   JP       V0, $D2E        ; Jump to V0 + D2E
$34C    $2C5B   CALL     $C5B            ; Call subroutine at C5B
$34E    $87F6   SHR      V7              ; V7 >>= 1, VF = LSB
$350    $F163   UNKNOWN  F163            ; Unknown Fxxx instruction
$352    $09B4   SYS      $9B4            ; System call to 9B4
$354    $5BBF   UNKNOWN  $5BBF           ; Unknown 5xxx instruction
$356    $8E24   ADD      VE, V2          ; VE += V2, VF = carry
$358    $EE29   UNKNOWN  $EE29           ; Unknown Exxx instruction
$35A    $DC07   DRW      VC, V0, #7      ; Draw 7-byte sprite at VC, V0
$35C    $E06D   UNKNOWN  $E06D           ; Unknown Exxx instruction
$35E    $B87C   JP       V0, $87C        ; Jump to V0 + 87C
$360    $1BE6   JP       $BE6            ; Jump to BE6
$362    $EB16   UNKNOWN  $EB16           ; Unknown Exxx instruction
$364    $FB7C   UNKNOWN  FB7C            ; Unknown Fxxx instruction
$366    $DE39   DRW      VE, V3, #9      ; Draw 9-byte sprite at VE, V3
$368    $0986   SYS      $986            ; System call to 986
$36A    $094D   SYS      $94D            ; System call to 94D
$36C    $3080   SE       V0, #80         ; Skip if V0 == 128
$36E    $BB0A   JP       V0, $B0A        ; Jump to V0 + B0A
$370    $DDAA   DRW      VD, VA, #A      ; Draw 10-byte sprite at VD, VA
$372    $E830   UNKNOWN  $E830           ; Unknown Exxx instruction
$374    $139B   JP       $39B            ; Jump to 39B
$376    $E2DF   UNKNOWN  $E2DF           ; Unknown Exxx instruction
$378    $FBA7   UNKNOWN  FBA7            ; Unknown Fxxx instruction
$37A    $1BD1   JP       $BD1            ; Jump to BD1
$37C    $7DB2   ADD      VD, #B2         ; Add 178 to VD
$37E    $07DF   SYS      $7DF            ; System call to 7DF
$380    $EEF5   UNKNOWN  $EEF5           ; Unknown Exxx instruction
$382    $877B   UNKNOWN  877B            ; Unknown 8xxx instruction
$384    $F66A   UNKNOWN  F66A            ; Unknown Fxxx instruction
$386    $78D6   ADD      V8, #D6         ; Add 214 to V8
$388    $C6F5   RND      V6, #F5         ; V6 = random & F5
$38A    $0394   SYS      $394            ; System call to 394
$38C    $F80D   UNKNOWN  F80D            ; Unknown Fxxx instruction
$38E    $855F   UNKNOWN  855F            ; Unknown 8xxx instruction
$390    $9AB1   UNKNOWN  $9AB1           ; Unknown 9xxx instruction
$392    $6859   LD       V8, #59         ; Load 89 into V8
$394    $CE6D   RND      VE, #6D         ; VE = random & 6D
$396    $2098   CALL     $098            ; Call subroutine at 098
$398    $7C78   ADD      VC, #78         ; Add 120 to VC
$39A    $4485   SNE      V4, #85         ; Skip if V4 != 133
$39C    $DD17   DRW      VD, V1, #7      ; Draw 7-byte sprite at VD, V1
$39E    $DD11   DRW      VD, V1, #1      ; Draw 1-byte sprite at VD, V1
$3A0    $B5B6   JP       V0, $5B6        ; Jump to V0 + 5B6
$3A2    $47C6   SNE      V7, #C6         ; Skip if V7 != 198
$3A4    $A550   LD       I, $550         ; Load 550 into I
$3A6    $C40D   RND      V4, #0D         ; V4 = random & 0D
$3A8    $868A   UNKNOWN  868A            ; Unknown 8xxx instruction
$3AA    $8F3D   UNKNOWN  8F3D            ; Unknown 8xxx instruction
$3AC    $E7CA   UNKNOWN  $E7CA           ; Unknown Exxx instruction
$3AE    $8552   AND      V5, V5          ; V5 &= V5
$3B0    $52FD   UNKNOWN  $52FD           ; Unknown 5xxx instruction
$3B2    $AE8C   LD       I, $E8C         ; Load E8C into I
$3B4    $7275   ADD      V2, #75         ; Add 117 to V2
$3B6    $7C7F   ADD      VC, #7F         ; Add 127 to VC
$3B8    $B19B   JP       V0, $19B        ; Jump to V0 + 19B
$3BA    $EA8B   UNKNOWN  $EA8B           ; Unknown Exxx instruction
$3BC    $B4BF   JP       V0, $4BF        ; Jump to V0 + 4BF
$3BE    $DFFE   DRW      VF, VF, #E      ; Draw 14-byte sprite at VF, VF
$3C0    $3D7D   SE       VD, #7D         ; Skip if VD == 125
$3C2    $C30F   RND      V3, #0F         ; V3 = random & 0F
$3C4    $EE0C   UNKNOWN  $EE0C           ; Unknown Exxx instruction
$3C6    $66B6   LD       V6, #B6         ; Load 182 into V6
$3C8    $5760   SE       V7, V6          ; Skip if V7 == V6
$3CA    $AB39   LD       I, $B39         ; Load B39 into I
$3CC    $E407   UNKNOWN  $E407           ; Unknown Exxx instruction
$3CE    $681C   LD       V8, #1C         ; Load 28 into V8
$3D0    $2BA6   CALL     $BA6            ; Call subroutine at BA6
$3D2    $06B9   SYS      $6B9            ; System call to 6B9
$3D4    $A4B5   LD       I, $4B5         ; Load 4B5 into I
$3D6    $AD46   LD       I, $D46         ; Load D46 into I
$3D8    $F5B5   UNKNOWN  F5B5            ; Unknown Fxxx instruction
$3DA    $D176   DRW      V1, V7, #6      ; Draw 6-byte sprite at V1, V7
$3DC    $A347   LD       I, $347         ; Load 347 into I
$3DE    $C9EA   RND      V9, #EA         ; V9 = random & EA
$3E0    $F731   UNKNOWN  F731            ; Unknown Fxxx instruction
$3E2    $DF32   DRW      VF, V3, #2      ; Draw 2-byte sprite at VF, V3
$3E4    $D064   DRW      V0, V6, #4      ; Draw 4-byte sprite at V0, V6
$3E6    $56EF   UNKNOWN  $56EF           ; Unknown 5xxx instruction
$3E8    $19E8   JP       $9E8            ; Jump to 9E8
$3EA    $D4C2   DRW      V4, VC, #2      ; Draw 2-byte sprite at V4, VC
$3EC    $A118   LD       I, $118         ; Load 118 into I
$3EE    $BA93   JP       V0, $A93        ; Jump to V0 + A93
$3F0    $CBEA   RND      VB, #EA         ; VB = random & EA
$3F2    $8607   SUBN     V6, V0          ; V6 = V0 - V6, VF = !borrow
$3F4    $FAA3   UNKNOWN  FAA3            ; Unknown Fxxx instruction
$3F6    $235D   CALL     $35D            ; Call subroutine at 35D
$3F8    $FCEF   UNKNOWN  FCEF            ; Unknown Fxxx instruction
$3FA    $3E07   SE       VE, #07         ; Skip if VE == 7
$3FC    $1701   JP       $701            ; Jump to 701
$3FE    $CC00   RND      VC, #00         ; VC = random & 00
$400    $57DD   UNKNOWN  $57DD           ; Unknown 5xxx instruction
$402    $8D13   XOR      VD, V1          ; VD ^= V1
$404    $94FD   UNKNOWN  $94FD           ; Unknown 9xxx instruction
$406    $8E50   LD       VE, V5          ; VE = V5
$408    $27C9   CALL     $7C9            ; Call subroutine at 7C9
$40A    $DE2C   DRW      VE, V2, #C      ; Draw 12-byte sprite at VE, V2
$40C    $1710   JP       $710            ; Jump to 710
$40E    $B604   JP       V0, $604        ; Jump to V0 + 604
$410    $40DC   SNE      V0, #DC         ; Skip if V0 != 220
$412    $B1A7   JP       V0, $1A7        ; Jump to V0 + 1A7
$414    $7FA1   ADD      VF, #A1         ; Add 161 to VF
$416    $5AF5   UNKNOWN  $5AF5           ; Unknown 5xxx instruction
$418    $3F38   SE       VF, #38         ; Skip if VF == 56
$41A    $D672   DRW      V6, V7, #2      ; Draw 2-byte sprite at V6, V7
$41C    $98E2   UNKNOWN  $98E2           ; Unknown 9xxx instruction
$41E    $0B2C   SYS      $B2C            ; System call to B2C
$420    $A649   LD       I, $649         ; Load 649 into I
$422    $0CE3   SYS      $CE3            ; System call to CE3
$424    $9C61   UNKNOWN  $9C61           ; Unknown 9xxx instruction
$426    $8C6A   UNKNOWN  8C6A            ; Unknown 8xxx instruction
$428    $891D   UNKNOWN  891D            ; Unknown 8xxx instruction
$42A    $2D43   CALL     $D43            ; Call subroutine at D43
$42C    $2083   CALL     $083            ; Call subroutine at 083
$42E    $1AA0   JP       $AA0            ; Jump to AA0
$430    $2246   CALL     $246            ; Call subroutine at 246
$432    $77B4   ADD      V7, #B4         ; Add 180 to V7
$434    $30FF   SE       V0, #FF         ; Skip if V0 == 255
$436    $6BCB   LD       VB, #CB         ; Load 203 into VB
$438    $1DF8   JP       $DF8            ; Jump to DF8
$43A    $A836   LD       I, $836         ; Load 836 into I
$43C    $9C90   SNE      VC, V9          ; Skip if VC != V9
$43E    $E489   UNKNOWN  $E489           ; Unknown Exxx instruction
$440    $2F1A   CALL     $F1A            ; Call subroutine at F1A
$442    $FEFF   UNKNOWN  FEFF            ; Unknown Fxxx instruction
$444    $C920   RND      V9, #20         ; V9 = random & 20
$446    $FDB4   UNKNOWN  FDB4            ; Unknown Fxxx instruction
$448    $9575   UNKNOWN  $9575           ; Unknown 9xxx instruction
$44A    $CC57   RND      VC, #57         ; VC = random & 57
$44C    $17E1   JP       $7E1            ; Jump to 7E1
$44E    $A3A4   LD       I, $3A4         ; Load 3A4 into I
$450    $22C8   CALL     $2C8            ; Call subroutine at 2C8
$452    $3D70   SE       VD, #70         ; Skip if VD == 112
$454    $E8AE   UNKNOWN  $E8AE           ; Unknown Exxx instruction
$456    $1E51   JP       $E51            ; Jump to E51
$458    $FDF6   UNKNOWN  FDF6            ; Unknown Fxxx instruction
$45A    $2910   CALL     $910            ; Call subroutine at 910
$45C    $481D   SNE      V8, #1D         ; Skip if V8 != 29
$45E    $35A4   SE       V5, #A4         ; Skip if V5 == 164
$460    $1191   JP       $191            ; Jump to 191
$462    $1A49   JP       $A49            ; Jump to A49
$464    $7D08   ADD      VD, #08         ; Add 8 to VD
$466    $012F   SYS      $12F            ; System call to 12F
$468    $FC11   UNKNOWN  FC11            ; Unknown Fxxx instruction
$46A    $173A   JP       $73A            ; Jump to 73A
$46C    $9450   SNE      V4, V5          ; Skip if V4 != V5
$46E    $DDF1   DRW      VD, VF, #1      ; Draw 1-byte sprite at VD, VF
$470    $7737   ADD      V7, #37         ; Add 55 to V7
$472    $2579   CALL     $579            ; Call subroutine at 579
$474    $EE5E   UNKNOWN  $EE5E           ; Unknown Exxx instruction
$476    $49D3   SNE      V9, #D3         ; Skip if V9 != 211
$478    $28FD   CALL     $8FD            ; Call subroutine at 8FD
$47A    $3EAA   SE       VE, #AA         ; Skip if VE == 170
$47C    $E7D3   UNKNOWN  $E7D3           ; Unknown Exxx instruction
$47E    $C67E   RND      V6, #7E         ; V6 = random & 7E
$480    $906F   UNKNOWN  $906F           ; Unknown 9xxx instruction
$482    $CD16   RND      VD, #16         ; VD = random & 16
$484    $7754   ADD      V7, #54         ; Add 84 to V7
$486    $CA9F   RND      VA, #9F         ; VA = random & 9F
$488    $89D8   UNKNOWN  89D8            ; Unknown 8xxx instruction
$48A    $431B   SNE      V3, #1B         ; Skip if V3 != 27
$48C    $0543   SYS      $543            ; System call to 543
$48E    $47AF   SNE      V7, #AF         ; Skip if V7 != 175
$490    $1EBA   JP       $EBA            ; Jump to EBA
$492    $A7B5   LD       I, $7B5         ; Load 7B5 into I
$494    $0D0B   SYS      $D0B            ; System call to D0B
$496    $180C   JP       $80C            ; Jump to 80C
$498    $184A   JP       $84A            ; Jump to 84A
$49A    $310B   SE       V1, #0B         ; Skip if V1 == 11
$49C    $E11A   UNKNOWN  $E11A           ; Unknown Exxx instruction
$49E    $8A55   SUB      VA, V5          ; VA -= V5, VF = !borrow
$4A0    $FF93   UNKNOWN  FF93            ; Unknown Fxxx instruction
$4A2    $07AC   SYS      $7AC            ; System call to 7AC
$4A4    $3C16   SE       VC, #16         ; Skip if VC == 22
$4A6    $687C   LD       V8, #7C         ; Load 124 into V8
$4A8    $EFCE   UNKNOWN  $EFCE           ; Unknown Exxx instruction
$4AA    $C20D   RND      V2, #0D         ; V2 = random & 0D
$4AC    $CFB8   RND      VF, #B8         ; VF = random & B8
$4AE    $BC65   JP       V0, $C65        ; Jump to V0 + C65
$4B0    $AB0A   LD       I, $B0A         ; Load B0A into I
$4B2    $B9AF   JP       V0, $9AF        ; Jump to V0 + 9AF
$4B4    $B603   JP       V0, $603        ; Jump to V0 + 603
$4B6    $44DE   SNE      V4, #DE         ; Skip if V4 != 222
$4B8    $AC9E   LD       I, $C9E         ; Load C9E into I
$4BA    $025A   SYS      $25A            ; System call to 25A
$4BC    $7F42   ADD      VF, #42         ; Add 66 to VF
$4BE    $8ECB   UNKNOWN  8ECB            ; Unknown 8xxx instruction
$4C0    $93E3   UNKNOWN  $93E3           ; Unknown 9xxx instruction
$4C2    $8FCA   UNKNOWN  8FCA            ; Unknown 8xxx instruction
$4C4    $7276   ADD      V2, #76         ; Add 118 to V2
$4C6    $1362   JP       $362            ; Jump to 362
$4C8    $9C81   UNKNOWN  $9C81           ; Unknown 9xxx instruction
$4CA    $CB2F   RND      VB, #2F         ; VB = random & 2F
$4CC    $64D8   LD       V4, #D8         ; Load 216 into V4
$4CE    $F2CA   UNKNOWN  F2CA            ; Unknown Fxxx instruction
$4D0    $602E   LD       V0, #2E         ; Load 46 into V0
$4D2    $8070   LD       V0, V7          ; V0 = V7
$4D4    $B34C   JP       V0, $34C        ; Jump to V0 + 34C
$4D6    $3C98   SE       VC, #98         ; Skip if VC == 152
$4D8    $612A   LD       V1, #2A         ; Load 42 into V1
$4DA    $1C4F   JP       $C4F            ; Jump to C4F
$4DC    $906D   UNKNOWN  $906D           ; Unknown 9xxx instruction
$4DE    $E105   UNKNOWN  $E105           ; Unknown Exxx instruction
$4E0    $D4AB   DRW      V4, VA, #B      ; Draw 11-byte sprite at V4, VA
$4E2    $C0FF   RND      V0, #FF         ; V0 = random & FF
$4E4    $1C36   JP       $C36            ; Jump to C36
$4E6    $30F0   SE       V0, #F0         ; Skip if V0 == 240
$4E8    $16A6   JP       $6A6            ; Jump to 6A6
$4EA    $81BF   UNKNOWN  81BF            ; Unknown 8xxx instruction
$4EC    $42EF   SNE      V2, #EF         ; Skip if V2 != 239
$4EE    $FDF8   UNKNOWN  FDF8            ; Unknown Fxxx instruction
$4F0    $6135   LD       V1, #35         ; Load 53 into V1
$4F2    $02B0   SYS      $2B0            ; System call to 2B0
$4F4    $1807   JP       $807            ; Jump to 807
$4F6    $AA45   LD       I, $A45         ; Load A45 into I
$4F8    $58CB   UNKNOWN  $58CB           ; Unknown 5xxx instruction
$4FA    $E6B0   UNKNOWN  $E6B0           ; Unknown Exxx instruction
$4FC    $9C46   UNKNOWN  $9C46           ; Unknown 9xxx instruction
$4FE    $0509   SYS      $509            ; System call to 509
$500    $7BB6   ADD      VB, #B6         ; Add 182 to VB
$502    $8092   AND      V0, V9          ; V0 &= V9
$504    $298E   CALL     $98E            ; Call subroutine at 98E
$506    $5E01   UNKNOWN  $5E01           ; Unknown 5xxx instruction
$508    $5707   UNKNOWN  $5707           ; Unknown 5xxx instruction
$50A    $C124   RND      V1, #24         ; V1 = random & 24
$50C    $B6FE   JP       V0, $6FE        ; Jump to V0 + 6FE
$50E    $72E7   ADD      V2, #E7         ; Add 231 to V2
$510    $1822   JP       $822            ; Jump to 822
$512    $B359   JP       V0, $359        ; Jump to V0 + 359
$514    $0AD7   SYS      $AD7            ; System call to AD7
$516    $8096   SHR      V0              ; V0 >>= 1, VF = LSB
$518    $AB69   LD       I, $B69         ; Load B69 into I
$51A    $4431   SNE      V4, #31         ; Skip if V4 != 49
$51C    $240C   CALL     $40C            ; Call subroutine at 40C
$51E    $5E77   UNKNOWN  $5E77           ; Unknown 5xxx instruction
$520    $674B   LD       V7, #4B         ; Load 75 into V7
$522    $0E5C   SYS      $E5C            ; System call to E5C
$524    $E6BF   UNKNOWN  $E6BF           ; Unknown Exxx instruction
$526    $C3B3   RND      V3, #B3         ; V3 = random & B3
$528    $F3EC   UNKNOWN  F3EC            ; Unknown Fxxx instruction
$52A    $F5E0   UNKNOWN  F5E0            ; Unknown Fxxx instruction
$52C    $3904   SE       V9, #04         ; Skip if V9 == 4
$52E    $1EE8   JP       $EE8            ; Jump to EE8
$530    $53C8   UNKNOWN  $53C8           ; Unknown 5xxx instruction
$532    $C639   RND      V6, #39         ; V6 = random & 39
$534    $39AA   SE       V9, #AA         ; Skip if V9 == 170
$536    $48C5   SNE      V8, #C5         ; Skip if V8 != 197
$538    $EC8E   UNKNOWN  $EC8E           ; Unknown Exxx instruction
$53A    $5858   UNKNOWN  $5858           ; Unknown 5xxx instruction
$53C    $75AB   ADD      V5, #AB         ; Add 171 to V5
$53E    $E366   UNKNOWN  $E366           ; Unknown Exxx instruction
$540    $4169   SNE      V1, #69         ; Skip if V1 != 105
$542    $AA36   LD       I, $A36         ; Load A36 into I
$544    $E9E4   UNKNOWN  $E9E4           ; Unknown Exxx instruction
$546    $6736   LD       V7, #36         ; Load 54 into V7
$548    $BA48   JP       V0, $A48        ; Jump to V0 + A48
$54A    $CECF   RND      VE, #CF         ; VE = random & CF
$54C    $F219   UNKNOWN  F219            ; Unknown Fxxx instruction
$54E    $D58F   DRW      V5, V8, #F      ; Draw 15-byte sprite at V5, V8
$550    $0857   SYS      $857            ; System call to 857
$552    $4467   SNE      V4, #67         ; Skip if V4 != 103
$554    $771E   ADD      V7, #1E         ; Add 30 to V7
$556    $1416   JP       $416            ; Jump to 416
$558    $027D   SYS      $27D            ; System call to 27D
$55A    $6EE2   LD       VE, #E2         ; Load 226 into VE
$55C    $3052   SE       V0, #52         ; Skip if V0 == 82
$55E    $C788   RND      V7, #88         ; V7 = random & 88
$560    $BB0D   JP       V0, $B0D        ; Jump to V0 + B0D
$562    $650A   LD       V5, #0A         ; Load 10 into V5
$564    $BC8F   JP       V0, $C8F        ; Jump to V0 + C8F
$566    $620F   LD       V2, #0F         ; Load 15 into V2
$568    $50D2   UNKNOWN  $50D2           ; Unknown 5xxx instruction
$56A    $B27F   JP       V0, $27F        ; Jump to V0 + 27F
$56C    $EA4F   UNKNOWN  $EA4F           ; Unknown Exxx instruction
$56E    $2316   CALL     $316            ; Call subroutine at 316
$570    $54DC   UNKNOWN  $54DC           ; Unknown 5xxx instruction
$572    $B571   JP       V0, $571        ; Jump to V0 + 571
$574    $A3B0   LD       I, $3B0         ; Load 3B0 into I
$576    $469C   SNE      V6, #9C         ; Skip if V6 != 156
$578    $214E   CALL     $14E            ; Call subroutine at 14E
$57A    $B594   JP       V0, $594        ; Jump to V0 + 594
$57C    $8394   ADD      V3, V9          ; V3 += V9, VF = carry
$57E    $47F5   SNE      V7, #F5         ; Skip if V7 != 245
$580    $0470   SYS      $470            ; System call to 470
$582    $E2D6   UNKNOWN  $E2D6           ; Unknown Exxx instruction
$584    $C3A4   RND      V3, #A4         ; V3 = random & A4
$586    $F42F   UNKNOWN  F42F            ; Unknown Fxxx instruction
$588    $8CE7   SUBN     VC, VE          ; VC = VE - VC, VF = !borrow
$58A    $87D3   XOR      V7, VD          ; V7 ^= VD
$58C    $3A45   SE       VA, #45         ; Skip if VA == 69
$58E    $6733   LD       V7, #33         ; Load 51 into V7
$590    $71B1   ADD      V1, #B1         ; Add 177 to V1
$592    $31FC   SE       V1, #FC         ; Skip if V1 == 252
$594    $3860   SE       V8, #60         ; Skip if V8 == 96
$596    $56BA   UNKNOWN  $56BA           ; Unknown 5xxx instruction
$598    $6A6D   LD       VA, #6D         ; Load 109 into VA
$59A    $A590   LD       I, $590         ; Load 590 into I
$59C    $BD1E   JP       V0, $D1E        ; Jump to V0 + D1E
$59E    $4C20   SNE      VC, #20         ; Skip if VC != 32
$5A0    $6D65   LD       VD, #65         ; Load 101 into VD
$5A2    $92BD   UNKNOWN  $92BD           ; Unknown 9xxx instruction
$5A4    $733D   ADD      V3, #3D         ; Add 61 to V3
$5A6    $6210   LD       V2, #10         ; Load 16 into V2
$5A8    $7D85   ADD      VD, #85         ; Add 133 to VD
$5AA    $3F52   SE       VF, #52         ; Skip if VF == 82
$5AC    $7200   ADD      V2, #00         ; Add 0 to V2
$5AE    $581E   UNKNOWN  $581E           ; Unknown 5xxx instruction
$5B0    $74A4   ADD      V4, #A4         ; Add 164 to V4
$5B2    $5193   UNKNOWN  $5193           ; Unknown 5xxx instruction
$5B4    $85F2   AND      V5, VF          ; V5 &= VF
$5B6    $8C0A   UNKNOWN  8C0A            ; Unknown 8xxx instruction
$5B8    $12D3   JP       $2D3            ; Jump to 2D3
$5BA    $2779   CALL     $779            ; Call subroutine at 779
$5BC    $B9FF   JP       V0, $9FF        ; Jump to V0 + 9FF
$5BE    $8166   SHR      V1              ; V1 >>= 1, VF = LSB
$5C0    $A6AE   LD       I, $6AE         ; Load 6AE into I
$5C2    $501F   UNKNOWN  $501F           ; Unknown 5xxx instruction
$5C4    $9AEC   UNKNOWN  $9AEC           ; Unknown 9xxx instruction
$5C6    $F335   UNKNOWN  F335            ; Unknown Fxxx instruction
$5C8    $1531   JP       $531            ; Jump to 531
$5CA    $55AE   UNKNOWN  $55AE           ; Unknown 5xxx instruction
$5CC    $8A3D   UNKNOWN  8A3D            ; Unknown 8xxx instruction
$5CE    $C227   RND      V2, #27         ; V2 = random & 27
$5D0    $5B8D   UNKNOWN  $5B8D           ; Unknown 5xxx instruction
$5D2    $B1CA   JP       V0, $1CA        ; Jump to V0 + 1CA
$5D4    $92CA   UNKNOWN  $92CA           ; Unknown 9xxx instruction
$5D6    $8066   SHR      V0              ; V0 >>= 1, VF = LSB
$5D8    $BE6E   JP       V0, $E6E        ; Jump to V0 + E6E
$5DA    $0039   SYS      $039            ; System call to 039
$5DC    $2EC9   CALL     $EC9            ; Call subroutine at EC9
$5DE    $96BD   UNKNOWN  $96BD           ; Unknown 9xxx instruction
$5E0    $36B0   SE       V6, #B0         ; Skip if V6 == 176
$5E2    $184F   JP       $84F            ; Jump to 84F
$5E4    $8F14   ADD      VF, V1          ; VF += V1, VF = carry
$5E6    $42E7   SNE      V2, #E7         ; Skip if V2 != 231
$5E8    $E58F   UNKNOWN  $E58F           ; Unknown Exxx instruction
$5EA    $2FDA   CALL     $FDA            ; Call subroutine at FDA
$5EC    $5711   UNKNOWN  $5711           ; Unknown 5xxx instruction
$5EE    $42BD   SNE      V2, #BD         ; Skip if V2 != 189
$5F0    $5028   UNKNOWN  $5028           ; Unknown 5xxx instruction
$5F2    $87B6   SHR      V7              ; V7 >>= 1, VF = LSB
$5F4    $D248   DRW      V2, V4, #8      ; Draw 8-byte sprite at V2, V4
$5F6    $E6A5   UNKNOWN  $E6A5           ; Unknown Exxx instruction
$5F8    $F01E   ADD      I, V0           ; I += V0
$5FA    $70D9   ADD      V0, #D9         ; Add 217 to V0
$5FC    $FA5A   UNKNOWN  FA5A            ; Unknown Fxxx instruction
$5FE    $CAE4   RND      VA, #E4         ; VA = random & E4
$600    $EDC0   UNKNOWN  $EDC0           ; Unknown Exxx instruction
$602    $683B   LD       V8, #3B         ; Load 59 into V8
$604    $4D4C   SNE      VD, #4C         ; Skip if VD != 76
$606    $4C2E   SNE      VC, #2E         ; Skip if VC != 46
$608    $C4C8   RND      V4, #C8         ; V4 = random & C8
$60A    $C66F   RND      V6, #6F         ; V6 = random & 6F
$60C    $265A   CALL     $65A            ; Call subroutine at 65A
$60E    $CBCE   RND      VB, #CE         ; VB = random & CE
$610    $2923   CALL     $923            ; Call subroutine at 923
$612    $A443   LD       I, $443         ; Load 443 into I
$614    $55FE   UNKNOWN  $55FE           ; Unknown 5xxx instruction
$616    $2F20   CALL     $F20            ; Call subroutine at F20
$618    $242B   CALL     $42B            ; Call subroutine at 42B
$61A    $1AA0   JP       $AA0            ; Jump to AA0
$61C    $F941   UNKNOWN  F941            ; Unknown Fxxx instruction
$61E    $CD3D   RND      VD, #3D         ; VD = random & 3D
$620    $DDC2   DRW      VD, VC, #2      ; Draw 2-byte sprite at VD, VC
$622    $5942   UNKNOWN  $5942           ; Unknown 5xxx instruction
$624    $7EFF   ADD      VE, #FF         ; Add 255 to VE
$626    $E860   UNKNOWN  $E860           ; Unknown Exxx instruction
$628    $9087   UNKNOWN  $9087           ; Unknown 9xxx instruction
$62A    $48B2   SNE      V8, #B2         ; Skip if V8 != 178
$62C    $BD58   JP       V0, $D58        ; Jump to V0 + D58
$62E    $411A   SNE      V1, #1A         ; Skip if V1 != 26
$630    $9292   UNKNOWN  $9292           ; Unknown 9xxx instruction
$632    $C5FA   RND      V5, #FA         ; V5 = random & FA
$634    $2E3F   CALL     $E3F            ; Call subroutine at E3F
$636    $71F5   ADD      V1, #F5         ; Add 245 to V1
$638    $7B34   ADD      VB, #34         ; Add 52 to VB
$63A    $A841   LD       I, $841         ; Load 841 into I
$63C    $4B17   SNE      VB, #17         ; Skip if VB != 23
$63E    $846E   SHL      V4              ; V4 <<= 1, VF = MSB
$640    $8F83   XOR      VF, V8          ; VF ^= V8
$642    $5B63   UNKNOWN  $5B63           ; Unknown 5xxx instruction
$644    $90ED   UNKNOWN  $90ED           ; Unknown 9xxx instruction
$646    $E5C8   UNKNOWN  $E5C8           ; Unknown Exxx instruction
$648    $F921   UNKNOWN  F921            ; Unknown Fxxx instruction
$64A    $4507   SNE      V5, #07         ; Skip if V5 != 7
$64C    $6643   LD       V6, #43         ; Load 67 into V6
$64E    $DA1B   DRW      VA, V1, #B      ; Draw 11-byte sprite at VA, V1
$650    $BD4E   JP       V0, $D4E        ; Jump to V0 + D4E
$652    $EAD1   UNKNOWN  $EAD1           ; Unknown Exxx instruction
$654    $A6E2   LD       I, $6E2         ; Load 6E2 into I
$656    $C037   RND      V0, #37         ; V0 = random & 37
$658    $6A2E   LD       VA, #2E         ; Load 46 into VA
$65A    $FF2A   UNKNOWN  FF2A            ; Unknown Fxxx instruction
$65C    $86FE   SHL      V6              ; V6 <<= 1, VF = MSB
$65E    $66A5   LD       V6, #A5         ; Load 165 into V6
$660    $6345   LD       V3, #45         ; Load 69 into V3
$662    $2EBC   CALL     $EBC            ; Call subroutine at EBC
$664    $F62B   UNKNOWN  F62B            ; Unknown Fxxx instruction
$666    $81D8   UNKNOWN  81D8            ; Unknown 8xxx instruction
$668    $F84F   UNKNOWN  F84F            ; Unknown Fxxx instruction
$66A    $1C05   JP       $C05            ; Jump to C05
$66C    $E01D   UNKNOWN  $E01D           ; Unknown Exxx instruction
$66E    $58F5   UNKNOWN  $58F5           ; Unknown 5xxx instruction
$670    $B298   JP       V0, $298        ; Jump to V0 + 298
$672    $206C   CALL     $06C            ; Call subroutine at 06C
$674    $DF9F   DRW      VF, V9, #F      ; Draw 15-byte sprite at VF, V9
$676    $3D07   SE       VD, #07         ; Skip if VD == 7
$678    $A2FB   LD       I, $2FB         ; Load 2FB into I
$67A    $4370   SNE      V3, #70         ; Skip if V3 != 112
$67C    $4870   SNE      V8, #70         ; Skip if V8 != 112
$67E    $2B75   CALL     $B75            ; Call subroutine at B75
$680    $7E54   ADD      VE, #54         ; Add 84 to VE
$682    $24B0   CALL     $4B0            ; Call subroutine at 4B0
$684    $3A43   SE       VA, #43         ; Skip if VA == 67
$686    $62CE   LD       V2, #CE         ; Load 206 into V2
$688    $A997   LD       I, $997         ; Load 997 into I
$68A    $A376   LD       I, $376         ; Load 376 into I
$68C    $5C50   SE       VC, V5          ; Skip if VC == V5
$68E    $CBFA   RND      VB, #FA         ; VB = random & FA
$690    $D39F   DRW      V3, V9, #F      ; Draw 15-byte sprite at V3, V9
$692    $3F26   SE       VF, #26         ; Skip if VF == 38
$694    $2AFE   CALL     $AFE            ; Call subroutine at AFE
$696    $C090   RND      V0, #90         ; V0 = random & 90
$698    $038A   SYS      $38A            ; System call to 38A
$69A    $0803   SYS      $803            ; System call to 803
$69C    $8286   SHR      V2              ; V2 >>= 1, VF = LSB
$69E    $9652   UNKNOWN  $9652           ; Unknown 9xxx instruction
$6A0    $C26C   RND      V2, #6C         ; V2 = random & 6C
$6A2    $8D15   SUB      VD, V1          ; VD -= V1, VF = !borrow
$6A4    $E2E0   UNKNOWN  $E2E0           ; Unknown Exxx instruction
$6A6    $68B7   LD       V8, #B7         ; Load 183 into V8
$6A8    $55BB   UNKNOWN  $55BB           ; Unknown 5xxx instruction
$6AA    $BF52   JP       V0, $F52        ; Jump to V0 + F52
$6AC    $DE27   DRW      VE, V2, #7      ; Draw 7-byte sprite at VE, V2
$6AE    $85DD   UNKNOWN  85DD            ; Unknown 8xxx instruction
$6B0    $12BC   JP       $2BC            ; Jump to 2BC
$6B2    $214F   CALL     $14F            ; Call subroutine at 14F
$6B4    $A01F   LD       I, $01F         ; Load 01F into I
$6B6    $4079   SNE      V0, #79         ; Skip if V0 != 121
$6B8    $EE56   UNKNOWN  $EE56           ; Unknown Exxx instruction
$6BA    $3A07   SE       VA, #07         ; Skip if VA == 7
$6BC    $5CCA   UNKNOWN  $5CCA           ; Unknown 5xxx instruction
$6BE    $BAB9   JP       V0, $AB9        ; Jump to V0 + AB9
$6C0    $553A   UNKNOWN  $553A           ; Unknown 5xxx instruction
$6C2    $E2CF   UNKNOWN  $E2CF           ; Unknown Exxx instruction
$6C4    $F1B9   UNKNOWN  F1B9            ; Unknown Fxxx instruction
$6C6    $A0EF   LD       I, $0EF         ; Load 0EF into I
$6C8    $5F8C   UNKNOWN  $5F8C           ; Unknown 5xxx instruction
$6CA    $A4A9   LD       I, $4A9         ; Load 4A9 into I
$6CC    $674F   LD       V7, #4F         ; Load 79 into V7
$6CE    $1762   JP       $762            ; Jump to 762
$6D0    $1659   JP       $659            ; Jump to 659
$6D2    $9FAA   UNKNOWN  $9FAA           ; Unknown 9xxx instruction
$6D4    $667E   LD       V6, #7E         ; Load 126 into V6
$6D6    $4940   SNE      V9, #40         ; Skip if V9 != 64
$6D8    $C63B   RND      V6, #3B         ; V6 = random & 3B
$6DA    $87CD   UNKNOWN  87CD            ; Unknown 8xxx instruction
$6DC    $8C32   AND      VC, V3          ; VC &= V3
$6DE    $4094   SNE      V0, #94         ; Skip if V0 != 148
$6E0    $6BFA   LD       VB, #FA         ; Load 250 into VB
$6E2    $0D72   SYS      $D72            ; System call to D72
$6E4    $29FD   CALL     $9FD            ; Call subroutine at 9FD
$6E6    $2CF2   CALL     $CF2            ; Call subroutine at CF2
$6E8    $CA95   RND      VA, #95         ; VA = random & 95
$6EA    $2490   CALL     $490            ; Call subroutine at 490
$6EC    $CD09   RND      VD, #09         ; VD = random & 09
$6EE    $1346   JP       $346            ; Jump to 346
$6F0    $8B33   XOR      VB, V3          ; VB ^= V3
$6F2    $EEFD   UNKNOWN  $EEFD           ; Unknown Exxx instruction
$6F4    $A699   LD       I, $699         ; Load 699 into I
$6F6    $648A   LD       V4, #8A         ; Load 138 into V4
$6F8    $E93F   UNKNOWN  $E93F           ; Unknown Exxx instruction
$6FA    $8C89   UNKNOWN  8C89            ; Unknown 8xxx instruction
$6FC    $279E   CALL     $79E            ; Call subroutine at 79E
$6FE    $6785   LD       V7, #85         ; Load 133 into V7
$700    $2FFC   CALL     $FFC            ; Call subroutine at FFC
$702    $724B   ADD      V2, #4B         ; Add 75 to V2
$704    $FB7D   UNKNOWN  FB7D            ; Unknown Fxxx instruction
$706    $0690   SYS      $690            ; System call to 690
$708    $BF60   JP       V0, $F60        ; Jump to V0 + F60
$70A    $CE0F   RND      VE, #0F         ; VE = random & 0F
$70C    $576F   UNKNOWN  $576F           ; Unknown 5xxx instruction
$70E    $7556   ADD      V5, #56         ; Add 86 to V5
$710    $9CE1   UNKNOWN  $9CE1           ; Unknown 9xxx instruction
$712    $2EA2   CALL     $EA2            ; Call subroutine at EA2
$714    $861D   UNKNOWN  861D            ; Unknown 8xxx instruction
$716    $ACDC   LD       I, $CDC         ; Load CDC into I
$718    $CB92   RND      VB, #92         ; VB = random & 92
$71A    $DE2B   DRW      VE, V2, #B      ; Draw 11-byte sprite at VE, V2
$71C    $B4EC   JP       V0, $4EC        ; Jump to V0 + 4EC
$71E    $834B   UNKNOWN  834B            ; Unknown 8xxx instruction
$720    $0F3F   SYS      $F3F            ; System call to F3F
$722    $AE91   LD       I, $E91         ; Load E91 into I
$724    $D369   DRW      V3, V6, #9      ; Draw 9-byte sprite at V3, V6
$726    $1B49   JP       $B49            ; Jump to B49
$728    $5229   UNKNOWN  $5229           ; Unknown 5xxx instruction
$72A    $68A5   LD       V8, #A5         ; Load 165 into V8
$72C    $3182   SE       V1, #82         ; Skip if V1 == 130
$72E    $DCE7   DRW      VC, VE, #7      ; Draw 7-byte sprite at VC, VE
$730    $6C24   LD       VC, #24         ; Load 36 into VC
$732    $D5F9   DRW      V5, VF, #9      ; Draw 9-byte sprite at V5, VF
$734    $DD97   DRW      VD, V9, #7      ; Draw 7-byte sprite at VD, V9
$736    $1A60   JP       $A60            ; Jump to A60
$738    $FA50   UNKNOWN  FA50            ; Unknown Fxxx instruction
$73A    $3659   SE       V6, #59         ; Skip if V6 == 89
$73C    $01A0   SYS      $1A0            ; System call to 1A0
$73E    $455D   SNE      V5, #5D         ; Skip if V5 != 93
$740    $A852   LD       I, $852         ; Load 852 into I
$742    $ED3C   UNKNOWN  $ED3C           ; Unknown Exxx instruction
$744    $5EB1   UNKNOWN  $5EB1           ; Unknown 5xxx instruction
$746    $05E5   SYS      $5E5            ; System call to 5E5
$748    $03D6   SYS      $3D6            ; System call to 3D6
$74A    $AE34   LD       I, $E34         ; Load E34 into I
$74C    $410E   SNE      V1, #0E         ; Skip if V1 != 14
$74E    $B27E   JP       V0, $27E        ; Jump to V0 + 27E
$750    $41DC   SNE      V1, #DC         ; Skip if V1 != 220
$752    $A5A8   LD       I, $5A8         ; Load 5A8 into I
$754    $F062   UNKNOWN  F062            ; Unknown Fxxx instruction
$756    $C0FE   RND      V0, #FE         ; V0 = random & FE
$758    $D863   DRW      V8, V6, #3      ; Draw 3-byte sprite at V8, V6
$75A    $E072   UNKNOWN  $E072           ; Unknown Exxx instruction
$75C    $D343   DRW      V3, V4, #3      ; Draw 3-byte sprite at V3, V4
$75E    $3DD7   SE       VD, #D7         ; Skip if VD == 215
$760    $54E3   UNKNOWN  $54E3           ; Unknown 5xxx instruction
$762    $1B00   JP       $B00            ; Jump to B00
$764    $5818   UNKNOWN  $5818           ; Unknown 5xxx instruction
$766    $C2C4   RND      V2, #C4         ; V2 = random & C4
$768    $EC26   UNKNOWN  $EC26           ; Unknown Exxx instruction
$76A    $763C   ADD      V6, #3C         ; Add 60 to V6
$76C    $7E7C   ADD      VE, #7C         ; Add 124 to VE
$76E    $9569   UNKNOWN  $9569           ; Unknown 9xxx instruction
$770    $DD4C   DRW      VD, V4, #C      ; Draw 12-byte sprite at VD, V4
$772    $F0A8   UNKNOWN  F0A8            ; Unknown Fxxx instruction
$774    $E74A   UNKNOWN  $E74A           ; Unknown Exxx instruction
$776    $CDA2   RND      VD, #A2         ; VD = random & A2
$778    $6DF3   LD       VD, #F3         ; Load 243 into VD
$77A    $B41A   JP       V0, $41A        ; Jump to V0 + 41A
$77C    $A3B8   LD       I, $3B8         ; Load 3B8 into I
$77E    $B413   JP       V0, $413        ; Jump to V0 + 413
$780    $0CB4   SYS      $CB4            ; System call to CB4
$782    $7546   ADD      V5, #46         ; Add 70 to V5
$784    $34C8   SE       V4, #C8         ; Skip if V4 == 200
$786    $49E8   SNE      V9, #E8         ; Skip if V9 != 232
$788    $750C   ADD      V5, #0C         ; Add 12 to V5
$78A    $84D4   ADD      V4, VD          ; V4 += VD, VF = carry
$78C    $2263   CALL     $263            ; Call subroutine at 263
$78E    $4CAB   SNE      VC, #AB         ; Skip if VC != 171
$790    $9813   UNKNOWN  $9813           ; Unknown 9xxx instruction
$792    $81C6   SHR      V1              ; V1 >>= 1, VF = LSB
$794    $C259   RND      V2, #59         ; V2 = random & 59
$796    $7455   ADD      V4, #55         ; Add 85 to V4
$798    $4FEE   SNE      VF, #EE         ; Skip if VF != 238
$79A    $6F35   LD       VF, #35         ; Load 53 into VF
$79C    $83B4   ADD      V3, VB          ; V3 += VB, VF = carry
$79E    $6511   LD       V5, #11         ; Load 17 into V5
$7A0    $1E38   JP       $E38            ; Jump to E38
$7A2    $635D   LD       V3, #5D         ; Load 93 into V3
$7A4    $BF5C   JP       V0, $F5C        ; Jump to V0 + F5C
$7A6    $52D1   UNKNOWN  $52D1           ; Unknown 5xxx instruction
$7A8    $75C7   ADD      V5, #C7         ; Add 199 to V5
$7AA    $3D3E   SE       VD, #3E         ; Skip if VD == 62
$7AC    $509D   UNKNOWN  $509D           ; Unknown 5xxx instruction
$7AE    $4DCE   SNE      VD, #CE         ; Skip if VD != 206
$7B0    $5FD0   SE       VF, VD          ; Skip if VF == VD
$7B2    $66B6   LD       V6, #B6         ; Load 182 into V6
$7B4    $8764   ADD      V7, V6          ; V7 += V6, VF = carry
$7B6    $B7B8   JP       V0, $7B8        ; Jump to V0 + 7B8
$7B8    $310A   SE       V1, #0A         ; Skip if V1 == 10
$7BA    $EF1F   UNKNOWN  $EF1F           ; Unknown Exxx instruction
$7BC    $E988   UNKNOWN  $E988           ; Unknown Exxx instruction
$7BE    $A3C7   LD       I, $3C7         ; Load 3C7 into I
$7C0    $98F5   UNKNOWN  $98F5           ; Unknown 9xxx instruction
$7C2    $9F32   UNKNOWN  $9F32           ; Unknown 9xxx instruction
$7C4    $0B45   SYS      $B45            ; System call to B45
$7C6    $AAF9   LD       I, $AF9         ; Load AF9 into I
$7C8    $F203   UNKNOWN  F203            ; Unknown Fxxx instruction
$7CA    $F9F2   UNKNOWN  F9F2            ; Unknown Fxxx instruction
$7CC    $9C6D   UNKNOWN  $9C6D           ; Unknown 9xxx instruction
$7CE    $80A8   UNKNOWN  80A8            ; Unknown 8xxx instruction
$7D0    $D834   DRW      V8, V3, #4      ; Draw 4-byte sprite at V8, V3
$7D2    $9815   UNKNOWN  $9815           ; Unknown 9xxx instruction
$7D4    $8AC8   UNKNOWN  8AC8            ; Unknown 8xxx instruction
$7D6    $8907   SUBN     V9, V0          ; V9 = V0 - V9, VF = !borrow
$7D8    $334F   SE       V3, #4F         ; Skip if V3 == 79
$7DA    $046D   SYS      $46D            ; System call to 46D
$7DC    $3AB1   SE       VA, #B1         ; Skip if VA == 177
$7DE    $BBA4   JP       V0, $BA4        ; Jump to V0 + BA4
$7E0    $0036   SYS      $036            ; System call to 036
$7E2    $4310   SNE      V3, #10         ; Skip if V3 != 16
$7E4    $C566   RND      V5, #66         ; V5 = random & 66
$7E6    $FF61   UNKNOWN  FF61            ; Unknown Fxxx instruction
$7E8    $6326   LD       V3, #26         ; Load 38 into V3
$7EA    $9043   UNKNOWN  $9043           ; Unknown 9xxx instruction
$7EC    $56EA   UNKNOWN  $56EA           ; Unknown 5xxx instruction
$7EE    $84EF   UNKNOWN  84EF            ; Unknown 8xxx instruction
$7F0    $4AE4   SNE      VA, #E4         ; Skip if VA != 228
$7F2    $7C62   ADD      VC, #62         ; Add 98 to VC
$7F4    $51A6   UNKNOWN  $51A6           ; Unknown 5xxx instruction
$7F6    $A0B7   LD       I, $0B7         ; Load 0B7 into I
$7F8    $2E1E   CALL     $E1E            ; Call subroutine at E1E
$7FA    $42AC   SNE      V2, #AC         ; Skip if V2 != 172
$7FC    $9535   UNKNOWN  $9535           ; Unknown 9xxx instruction
$7FE    $CC2C   RND      VC, #2C         ; VC = random & 2C
$800    $6D31   LD       VD, #31         ; Load 49 into VD
$802    $FA9E   UNKNOWN  FA9E            ; Unknown Fxxx instruction
$804    $23C3   CALL     $3C3            ; Call subroutine at 3C3
$806    $A63A   LD       I, $63A         ; Load 63A into I
$808    $B259   JP       V0, $259        ; Jump to V0 + 259
$80A    $7D63   ADD      VD, #63         ; Add 99 to VD
$80C    $2E52   CALL     $E52            ; Call subroutine at E52
$80E    $C9EA   RND      V9, #EA         ; V9 = random & EA
$810    $CC32   RND      VC, #32         ; VC = random & 32
$812    $0E69   SYS      $E69            ; System call to E69
$814    $6D1A   LD       VD, #1A         ; Load 26 into VD
$816    $9247   UNKNOWN  $9247           ; Unknown 9xxx instruction
$818    $65B8   LD       V5, #B8         ; Load 184 into V5
$81A    $E80F   UNKNOWN  $E80F           ; Unknown Exxx instruction
$81C    $0714   SYS      $714            ; System call to 714
$81E    $776B   ADD      V7, #6B         ; Add 107 to V7
$820    $8296   SHR      V2              ; V2 >>= 1, VF = LSB
$822    $EACD   UNKNOWN  $EACD           ; Unknown Exxx instruction
$824    $2E7A   CALL     $E7A            ; Call subroutine at E7A
$826    $35BE   SE       V5, #BE         ; Skip if V5 == 190
$828    $33B8   SE       V3, #B8         ; Skip if V3 == 184
$82A    $62B1   LD       V2, #B1         ; Load 177 into V2
$82C    $FF96   UNKNOWN  FF96            ; Unknown Fxxx instruction
$82E    $9DB4   UNKNOWN  $9DB4           ; Unknown 9xxx instruction
$830    $FCF8   UNKNOWN  FCF8            ; Unknown Fxxx instruction
$832    $188A   JP       $88A            ; Jump to 88A
$834    $EE22   UNKNOWN  $EE22           ; Unknown Exxx instruction
$836    $C67E   RND      V6, #7E         ; V6 = random & 7E
$838    $6A96   LD       VA, #96         ; Load 150 into VA
$83A    $F962   UNKNOWN  F962            ; Unknown Fxxx instruction
$83C    $5086   UNKNOWN  $5086           ; Unknown 5xxx instruction
$83E    $B92B   JP       V0, $92B        ; Jump to V0 + 92B
$840    $7840   ADD      V8, #40         ; Add 64 to V8
$842    $330F   SE       V3, #0F         ; Skip if V3 == 15
$844    $8E78   UNKNOWN  8E78            ; Unknown 8xxx instruction
$846    $3AF1   SE       VA, #F1         ; Skip if VA == 241
$848    $A917   LD       I, $917         ; Load 917 into I
$84A    $9372   UNKNOWN  $9372           ; Unknown 9xxx instruction
$84C    $09E9   SYS      $9E9            ; System call to 9E9
$84E    $34ED   SE       V4, #ED         ; Skip if V4 == 237
$850    $D323   DRW      V3, V2, #3      ; Draw 3-byte sprite at V3, V2
$852    $4F4C   SNE      VF, #4C         ; Skip if VF != 76
$854    $97C6   UNKNOWN  $97C6           ; Unknown 9xxx instruction
$856    $A9A2   LD       I, $9A2         ; Load 9A2 into I
$858    $D8E1   DRW      V8, VE, #1      ; Draw 1-byte sprite at V8, VE
$85A    $BC56   JP       V0, $C56        ; Jump to V0 + C56
$85C    $13A3   JP       $3A3            ; Jump to 3A3
$85E    $1BDA   JP       $BDA            ; Jump to BDA
$860    $C6C2   RND      V6, #C2         ; V6 = random & C2
$862    $8E08   UNKNOWN  8E08            ; Unknown 8xxx instruction
$864    $E372   UNKNOWN  $E372           ; Unknown Exxx instruction
$866    $E500   UNKNOWN  $E500           ; Unknown Exxx instruction
$868    $1B01   JP       $B01            ; Jump to B01
$86A    $5477   UNKNOWN  $5477           ; Unknown 5xxx instruction
$86C    $E0ED   UNKNOWN  $E0ED           ; Unknown Exxx instruction
$86E    $D2F4   DRW      V2, VF, #4      ; Draw 4-byte sprite at V2, VF
$870    $A90D   LD       I, $90D         ; Load 90D into I
$872    $EF22   UNKNOWN  $EF22           ; Unknown Exxx instruction
$874    $C4E6   RND      V4, #E6         ; V4 = random & E6
$876    $B0EA   JP       V0, $0EA        ; Jump to V0 + 0EA
$878    $0580   SYS      $580            ; System call to 580
$87A    $1DBB   JP       $DBB            ; Jump to DBB
$87C    $F41D   UNKNOWN  F41D            ; Unknown Fxxx instruction
$87E    $D919   DRW      V9, V1, #9      ; Draw 9-byte sprite at V9, V1
$880    $BA56   JP       V0, $A56        ; Jump to V0 + A56
$882    $CA09   RND      VA, #09         ; VA = random & 09
$884    $23BF   CALL     $3BF            ; Call subroutine at 3BF
$886    $5610   SE       V6, V1          ; Skip if V6 == V1
$888    $B429   JP       V0, $429        ; Jump to V0 + 429
$88A    $1ABF   JP       $ABF            ; Jump to ABF
$88C    $3A56   SE       VA, #56         ; Skip if VA == 86
$88E    $450E   SNE      V5, #0E         ; Skip if V5 != 14
$890    $CE0F   RND      VE, #0F         ; VE = random & 0F
$892    $F3EB   UNKNOWN  F3EB            ; Unknown Fxxx instruction
$894    $D85E   DRW      V8, V5, #E      ; Draw 14-byte sprite at V8, V5
$896    $086B   SYS      $86B            ; System call to 86B
$898    $BCCA   JP       V0, $CCA        ; Jump to V0 + CCA
$89A    $E2CF   UNKNOWN  $E2CF           ; Unknown Exxx instruction
$89C    $93CA   UNKNOWN  $93CA           ; Unknown 9xxx instruction
$89E    $406C   SNE      V0, #6C         ; Skip if V0 != 108
$8A0    $BA13   JP       V0, $A13        ; Jump to V0 + A13
$8A2    $BAB3   JP       V0, $AB3        ; Jump to V0 + AB3
$8A4    $3F21   SE       VF, #21         ; Skip if VF == 33
$8A6    $59E4   UNKNOWN  $59E4           ; Unknown 5xxx instruction
$8A8    $3FB5   SE       VF, #B5         ; Skip if VF == 181
$8AA    $0C63   SYS      $C63            ; System call to C63
$8AC    $2218   CALL     $218            ; Call subroutine at 218
$8AE    $EB51   UNKNOWN  $EB51           ; Unknown Exxx instruction
$8B0    $4058   SNE      V0, #58         ; Skip if V0 != 88
$8B2    $A574   LD       I, $574         ; Load 574 into I
$8B4    $8D59   UNKNOWN  8D59            ; Unknown 8xxx instruction
$8B6    $F537   UNKNOWN  F537            ; Unknown Fxxx instruction
$8B8    $DC7B   DRW      VC, V7, #B      ; Draw 11-byte sprite at VC, V7
$8BA    $5C47   UNKNOWN  $5C47           ; Unknown 5xxx instruction
$8BC    $752C   ADD      V5, #2C         ; Add 44 to V5
$8BE    $663A   LD       V6, #3A         ; Load 58 into V6
$8C0    $81E4   ADD      V1, VE          ; V1 += VE, VF = carry
$8C2    $18E1   JP       $8E1            ; Jump to 8E1
$8C4    $3C50   SE       VC, #50         ; Skip if VC == 80
$8C6    $9358   UNKNOWN  $9358           ; Unknown 9xxx instruction
$8C8    $9827   UNKNOWN  $9827           ; Unknown 9xxx instruction
$8CA    $C53A   RND      V5, #3A         ; V5 = random & 3A
$8CC    $EFB7   UNKNOWN  $EFB7           ; Unknown Exxx instruction
$8CE    $CDEB   RND      VD, #EB         ; VD = random & EB
$8D0    $3E11   SE       VE, #11         ; Skip if VE == 17
$8D2    $50FB   UNKNOWN  $50FB           ; Unknown 5xxx instruction
$8D4    $CAF1   RND      VA, #F1         ; VA = random & F1
$8D6    $2A5E   CALL     $A5E            ; Call subroutine at A5E
$8D8    $3003   SE       V0, #03         ; Skip if V0 == 3
$8DA    $3175   SE       V1, #75         ; Skip if V1 == 117
$8DC    $B678   JP       V0, $678        ; Jump to V0 + 678
$8DE    $0D53   SYS      $D53            ; System call to D53
$8E0    $9D4C   UNKNOWN  $9D4C           ; Unknown 9xxx instruction
$8E2    $B68A   JP       V0, $68A        ; Jump to V0 + 68A
$8E4    $F66B   UNKNOWN  F66B            ; Unknown Fxxx instruction
$8E6    $6561   LD       V5, #61         ; Load 97 into V5
$8E8    $E93E   UNKNOWN  $E93E           ; Unknown Exxx instruction
$8EA    $D23E   DRW      V2, V3, #E      ; Draw 14-byte sprite at V2, V3
$8EC    $14D5   JP       $4D5            ; Jump to 4D5
$8EE    $BC42   JP       V0, $C42        ; Jump to V0 + C42
$8F0    $FABD   UNKNOWN  FABD            ; Unknown Fxxx instruction
$8F2    $812F   UNKNOWN  812F            ; Unknown 8xxx instruction
$8F4    $2499   CALL     $499            ; Call subroutine at 499
$8F6    $8BA3   XOR      VB, VA          ; VB ^= VA
$8F8    $31AB   SE       V1, #AB         ; Skip if V1 == 171
$8FA    $DA98   DRW      VA, V9, #8      ; Draw 8-byte sprite at VA, V9
$8FC    $56A3   UNKNOWN  $56A3           ; Unknown 5xxx instruction
$8FE    $280E   CALL     $80E            ; Call subroutine at 80E
$900    $0254   SYS      $254            ; System call to 254
$902    $F7D4   UNKNOWN  F7D4            ; Unknown Fxxx instruction
$904    $F26C   UNKNOWN  F26C            ; Unknown Fxxx instruction
$906    $D4DA   DRW      V4, VD, #A      ; Draw 10-byte sprite at V4, VD
$908    $7250   ADD      V2, #50         ; Add 80 to V2
$90A    $503B   UNKNOWN  $503B           ; Unknown 5xxx instruction
$90C    $259F   CALL     $59F            ; Call subroutine at 59F
$90E    $5E23   UNKNOWN  $5E23           ; Unknown 5xxx instruction
$910    $22E4   CALL     $2E4            ; Call subroutine at 2E4
$912    $D886   DRW      V8, V8, #6      ; Draw 6-byte sprite at V8, V8
$914    $B4EF   JP       V0, $4EF        ; Jump to V0 + 4EF
$916    $EC35   UNKNOWN  $EC35           ; Unknown Exxx instruction
$918    $0637   SYS      $637            ; System call to 637
$91A    $A335   LD       I, $335         ; Load 335 into I
$91C    $B079   JP       V0, $079        ; Jump to V0 + 079
$91E    $1490   JP       $490            ; Jump to 490
$920    $3EFB   SE       VE, #FB         ; Skip if VE == 251
$922    $D133   DRW      V1, V3, #3      ; Draw 3-byte sprite at V1, V3
$924    $9C53   UNKNOWN  $9C53           ; Unknown 9xxx instruction
$926    $BAF3   JP       V0, $AF3        ; Jump to V0 + AF3
$928    $F505   UNKNOWN  F505            ; Unknown Fxxx instruction
$92A    $73F1   ADD      V3, #F1         ; Add 241 to V3
$92C    $510D   UNKNOWN  $510D           ; Unknown 5xxx instruction
$92E    $D8EC   DRW      V8, VE, #C      ; Draw 12-byte sprite at V8, VE
$930    $1889   JP       $889            ; Jump to 889
$932    $35A2   SE       V5, #A2         ; Skip if V5 == 162
$934    $1765   JP       $765            ; Jump to 765
$936    $F5CB   UNKNOWN  F5CB            ; Unknown Fxxx instruction
$938    $4340   SNE      V3, #40         ; Skip if V3 != 64
$93A    $09B7   SYS      $9B7            ; System call to 9B7
$93C    $4986   SNE      V9, #86         ; Skip if V9 != 134
$93E    $3B5F   SE       VB, #5F         ; Skip if VB == 95
$940    $BE0E   JP       V0, $E0E        ; Jump to V0 + E0E
$942    $A335   LD       I, $335         ; Load 335 into I
$944    $36F2   SE       V6, #F2         ; Skip if V6 == 242
$946    $5602   UNKNOWN  $5602           ; Unknown 5xxx instruction
$948    $B111   JP       V0, $111        ; Jump to V0 + 111
$94A    $2D99   CALL     $D99            ; Call subroutine at D99
$94C    $7DCF   ADD      VD, #CF         ; Add 207 to VD
$94E    $E164   UNKNOWN  $E164           ; Unknown Exxx instruction
$950    $302F   SE       V0, #2F         ; Skip if V0 == 47
$952    $5A24   UNKNOWN  $5A24           ; Unknown 5xxx instruction
$954    $995F   UNKNOWN  $995F           ; Unknown 9xxx instruction
$956    $062B   SYS      $62B            ; System call to 62B
$958    $E20A   UNKNOWN  $E20A           ; Unknown Exxx instruction
$95A    $F269   UNKNOWN  F269            ; Unknown Fxxx instruction
$95C    $A398   LD       I, $398         ; Load 398 into I
$95E    $3CB8   SE       VC, #B8         ; Skip if VC == 184
$960    $CB48   RND      VB, #48         ; VB = random & 48
$962    $066B   SYS      $66B            ; System call to 66B
$964    $334A   SE       V3, #4A         ; Skip if V3 == 74
$966    $6525   LD       V5, #25         ; Load 37 into V5
$968    $C99D   RND      V9, #9D         ; V9 = random & 9D
$96A    $30DB   SE       V0, #DB         ; Skip if V0 == 219
$96C    $214E   CALL     $14E            ; Call subroutine at 14E
$96E    $FAD2   UNKNOWN  FAD2            ; Unknown Fxxx instruction
$970    $7AB1   ADD      VA, #B1         ; Add 177 to VA
$972    $38D9   SE       V8, #D9         ; Skip if V8 == 217
$974    $D0D7   DRW      V0, VD, #7      ; Draw 7-byte sprite at V0, VD
$976    $CD48   RND      VD, #48         ; VD = random & 48
$978    $48B6   SNE      V8, #B6         ; Skip if V8 != 182
$97A    $92FF   UNKNOWN  $92FF           ; Unknown 9xxx instruction
$97C    $7D86   ADD      VD, #86         ; Add 134 to VD
$97E    $D434   DRW      V4, V3, #4      ; Draw 4-byte sprite at V4, V3
$980    $5719   UNKNOWN  $5719           ; Unknown 5xxx instruction
$982    $E898   UNKNOWN  $E898           ; Unknown Exxx instruction
$984    $5D74   UNKNOWN  $5D74           ; Unknown 5xxx instruction
$986    $A7D2   LD       I, $7D2         ; Load 7D2 into I
$988    $A788   LD       I, $788         ; Load 788 into I
$98A    $E106   UNKNOWN  $E106           ; Unknown Exxx instruction
$98C    $56D4   UNKNOWN  $56D4           ; Unknown 5xxx instruction
$98E    $67E0   LD       V7, #E0         ; Load 224 into V7
$990    $D4B7   DRW      V4, VB, #7      ; Draw 7-byte sprite at V4, VB
$992    $FD2D   UNKNOWN  FD2D            ; Unknown Fxxx instruction
$994    $EF47   UNKNOWN  $EF47           ; Unknown Exxx instruction
$996    $576B   UNKNOWN  $576B           ; Unknown 5xxx instruction
$998    $AA10   LD       I, $A10         ; Load A10 into I
$99A    $BDD7   JP       V0, $DD7        ; Jump to V0 + DD7
$99C    $0C3F   SYS      $C3F            ; System call to C3F
$99E    $758E   ADD      V5, #8E         ; Add 142 to V5
$9A0    $14FF   JP       $4FF            ; Jump to 4FF
$9A2    $863F   UNKNOWN  863F            ; Unknown 8xxx instruction
$9A4    $870A   UNKNOWN  870A            ; Unknown 8xxx instruction
$9A6    $ADD1   LD       I, $DD1         ; Load DD1 into I
$9A8    $BBCD   JP       V0, $BCD        ; Jump to V0 + BCD
$9AA    $D7AB   DRW      V7, VA, #B      ; Draw 11-byte sprite at V7, VA
$9AC    $CABC   RND      VA, #BC         ; VA = random & BC
$9AE    $8EAA   UNKNOWN  8EAA            ; Unknown 8xxx instruction
$9B0    $F4A2   UNKNOWN  F4A2            ; Unknown Fxxx instruction
$9B2    $6CC4   LD       VC, #C4         ; Load 196 into VC
$9B4    $F1B1   UNKNOWN  F1B1            ; Unknown Fxxx instruction
$9B6    $1160   JP       $160            ; Jump to 160
$9B8    $E81F   UNKNOWN  $E81F           ; Unknown Exxx instruction
$9BA    $D17C   DRW      V1, V7, #C      ; Draw 12-byte sprite at V1, V7
$9BC    $D0D4   DRW      V0, VD, #4      ; Draw 4-byte sprite at V0, VD
$9BE    $D506   DRW      V5, V0, #6      ; Draw 6-byte sprite at V5, V0
$9C0    $D6AC   DRW      V6, VA, #C      ; Draw 12-byte sprite at V6, VA
$9C2    $4FF1   SNE      VF, #F1         ; Skip if VF != 241
$9C4    $BF8A   JP       V0, $F8A        ; Jump to V0 + F8A
$9C6    $D88D   DRW      V8, V8, #D      ; Draw 13-byte sprite at V8, V8
$9C8    $F4F3   UNKNOWN  F4F3            ; Unknown Fxxx instruction
$9CA    $AB23   LD       I, $B23         ; Load B23 into I
$9CC    $005A   SYS      $05A            ; System call to 05A
$9CE    $7C58   ADD      VC, #58         ; Add 88 to VC
$9D0    $BC2D   JP       V0, $C2D        ; Jump to V0 + C2D
$9D2    $A98A   LD       I, $98A         ; Load 98A into I
$9D4    $7A8C   ADD      VA, #8C         ; Add 140 to VA
$9D6    $9C2F   UNKNOWN  $9C2F           ; Unknown 9xxx instruction
$9D8    $C79A   RND      V7, #9A         ; V7 = random & 9A
$9DA    $04A1   SYS      $4A1            ; System call to 4A1
$9DC    $2D05   CALL     $D05            ; Call subroutine at D05
$9DE    $D1AC   DRW      V1, VA, #C      ; Draw 12-byte sprite at V1, VA
$9E0    $0274   SYS      $274            ; System call to 274
$9E2    $870A   UNKNOWN  870A            ; Unknown 8xxx instruction
$9E4    $DEAF   DRW      VE, VA, #F      ; Draw 15-byte sprite at VE, VA
$9E6    $1F43   JP       $F43            ; Jump to F43
$9E8    $3EDD   SE       VE, #DD         ; Skip if VE == 221
$9EA    $FEED   UNKNOWN  FEED            ; Unknown Fxxx instruction
$9EC    $AD92   LD       I, $D92         ; Load D92 into I
$9EE    $184B   JP       $84B            ; Jump to 84B
$9F0    $CBF1   RND      VB, #F1         ; VB = random & F1
$9F2    $194C   JP       $94C            ; Jump to 94C
$9F4    $5F90   SE       VF, V9          ; Skip if VF == V9
$9F6    $D939   DRW      V9, V3, #9      ; Draw 9-byte sprite at V9, V3
$9F8    $E001   UNKNOWN  $E001           ; Unknown Exxx instruction
$9FA    $CEE8   RND      VE, #E8         ; VE = random & E8
$9FC    $26D5   CALL     $6D5            ; Call subroutine at 6D5
$9FE    $927B   UNKNOWN  $927B           ; Unknown 9xxx instruction
$A00    $22B0   CALL     $2B0            ; Call subroutine at 2B0
$A02    $25E3   CALL     $5E3            ; Call subroutine at 5E3
$A04    $D185   DRW      V1, V8, #5      ; Draw 5-byte sprite at V1, V8
$A06    $92D4   UNKNOWN  $92D4           ; Unknown 9xxx instruction
$A08    $1FEF   JP       $FEF            ; Jump to FEF
$A0A    $CE95   RND      VE, #95         ; VE = random & 95
$A0C    $534D   UNKNOWN  $534D           ; Unknown 5xxx instruction
$A0E    $A06B   LD       I, $06B         ; Load 06B into I
$A10    $74E5   ADD      V4, #E5         ; Add 229 to V4
$A12    $564A   UNKNOWN  $564A           ; Unknown 5xxx instruction
$A14    $21DD   CALL     $1DD            ; Call subroutine at 1DD
$A16    $AD21   LD       I, $D21         ; Load D21 into I
$A18    $6955   LD       V9, #55         ; Load 85 into V9
$A1A    $F561   UNKNOWN  F561            ; Unknown Fxxx instruction
$A1C    $ACBA   LD       I, $CBA         ; Load CBA into I
$A1E    $00E0   CLS                      ; Clear display
$A20    $2325   CALL     $325            ; Call subroutine at 325
$A22    $03E5   SYS      $3E5            ; System call to 3E5
$A24    $2D1C   CALL     $D1C            ; Call subroutine at D1C
$A26    $9308   UNKNOWN  $9308           ; Unknown 9xxx instruction
$A28    $6EA5   LD       VE, #A5         ; Load 165 into VE
$A2A    $C233   RND      V2, #33         ; V2 = random & 33
$A2C    $A052   LD       I, $052         ; Load 052 into I
$A2E    $EBDE   UNKNOWN  $EBDE           ; Unknown Exxx instruction
$A30    $67E3   LD       V7, #E3         ; Load 227 into V7
$A32    $9698   UNKNOWN  $9698           ; Unknown 9xxx instruction
$A34    $C792   RND      V7, #92         ; V7 = random & 92
$A36    $1914   JP       $914            ; Jump to 914
$A38    $1D71   JP       $D71            ; Jump to D71
$A3A    $8DCE   SHL      VD              ; VD <<= 1, VF = MSB
$A3C    $3632   SE       V6, #32         ; Skip if V6 == 50
$A3E    $2A22   CALL     $A22            ; Call subroutine at A22
$A40    $08E9   SYS      $8E9            ; System call to 8E9
$A42    $8A02   AND      VA, V0          ; VA &= V0
$A44    $4A7B   SNE      VA, #7B         ; Skip if VA != 123
$A46    $FD77   UNKNOWN  FD77            ; Unknown Fxxx instruction
$A48    $80DC   UNKNOWN  80DC            ; Unknown 8xxx instruction
$A4A    $B53B   JP       V0, $53B        ; Jump to V0 + 53B
$A4C    $8A49   UNKNOWN  8A49            ; Unknown 8xxx instruction
$A4E    $C78A   RND      V7, #8A         ; V7 = random & 8A
$A50    $6950   LD       V9, #50         ; Load 80 into V9
$A52    $578B   UNKNOWN  $578B           ; Unknown 5xxx instruction
$A54    $AE27   LD       I, $E27         ; Load E27 into I
$A56    $EBC7   UNKNOWN  $EBC7           ; Unknown Exxx instruction
$A58    $E27D   UNKNOWN  $E27D           ; Unknown Exxx instruction
$A5A    $0C8B   SYS      $C8B            ; System call to C8B
$A5C    $125A   JP       $25A            ; Jump to 25A
$A5E    $C923   RND      V9, #23         ; V9 = random & 23
$A60    $945D   UNKNOWN  $945D           ; Unknown 9xxx instruction
$A62    $8897   SUBN     V8, V9          ; V8 = V9 - V8, VF = !borrow
$A64    $B524   JP       V0, $524        ; Jump to V0 + 524
$A66    $D5E5   DRW      V5, VE, #5      ; Draw 5-byte sprite at V5, VE
$A68    $98D5   UNKNOWN  $98D5           ; Unknown 9xxx instruction
$A6A    $4BCB   SNE      VB, #CB         ; Skip if VB != 203
$A6C    $5001   UNKNOWN  $5001           ; Unknown 5xxx instruction
$A6E    $795D   ADD      V9, #5D         ; Add 93 to V9
$A70    $9656   UNKNOWN  $9656           ; Unknown 9xxx instruction
$A72    $A2DD   LD       I, $2DD         ; Load 2DD into I
$A74    $F081   UNKNOWN  F081            ; Unknown Fxxx instruction
$A76    $1230   JP       $230            ; Jump to 230
$A78    $F5A0   UNKNOWN  F5A0            ; Unknown Fxxx instruction
$A7A    $8870   LD       V8, V7          ; V8 = V7
$A7C    $1CAC   JP       $CAC            ; Jump to CAC
$A7E    $0F6D   SYS      $F6D            ; System call to F6D
$A80    $5D33   UNKNOWN  $5D33           ; Unknown 5xxx instruction
$A82    $C031   RND      V0, #31         ; V0 = random & 31
$A84    $AC00   LD       I, $C00         ; Load C00 into I
$A86    $CFC1   RND      VF, #C1         ; VF = random & C1
$A88    $F0B5   UNKNOWN  F0B5            ; Unknown Fxxx instruction
$A8A    $34D1   SE       V4, #D1         ; Skip if V4 == 209
$A8C    $11AE   JP       $1AE            ; Jump to 1AE
$A8E    $B44A   JP       V0, $44A        ; Jump to V0 + 44A
$A90    $CD93   RND      VD, #93         ; VD = random & 93
$A92    $E158   UNKNOWN  $E158           ; Unknown Exxx instruction
$A94    $49B1   SNE      V9, #B1         ; Skip if V9 != 177
$A96    $C60C   RND      V6, #0C         ; V6 = random & 0C
$A98    $1F9A   JP       $F9A            ; Jump to F9A
$A9A    $85B3   XOR      V5, VB          ; V5 ^= VB
$A9C    $336F   SE       V3, #6F         ; Skip if V3 == 111
$A9E    $985B   UNKNOWN  $985B           ; Unknown 9xxx instruction
$AA0    $CA6C   RND      VA, #6C         ; VA = random & 6C
$AA2    $AF71   LD       I, $F71         ; Load F71 into I
$AA4    $719C   ADD      V1, #9C         ; Add 156 to V1
$AA6    $350A   SE       V5, #0A         ; Skip if V5 == 10
$AA8    $47FF   SNE      V7, #FF         ; Skip if V7 != 255
$AAA    $5623   UNKNOWN  $5623           ; Unknown 5xxx instruction
$AAC    $5D72   UNKNOWN  $5D72           ; Unknown 5xxx instruction
$AAE    $B6BE   JP       V0, $6BE        ; Jump to V0 + 6BE
$AB0    $B180   JP       V0, $180        ; Jump to V0 + 180
$AB2    $9D3D   UNKNOWN  $9D3D           ; Unknown 9xxx instruction
$AB4    $62FD   LD       V2, #FD         ; Load 253 into V2
$AB6    $B17C   JP       V0, $17C        ; Jump to V0 + 17C
$AB8    $6C76   LD       VC, #76         ; Load 118 into VC
$ABA    $C9A2   RND      V9, #A2         ; V9 = random & A2
$ABC    $C959   RND      V9, #59         ; V9 = random & 59
$ABE    $7108   ADD      V1, #08         ; Add 8 to V1
$AC0    $615D   LD       V1, #5D         ; Load 93 into V1
$AC2    $D961   DRW      V9, V6, #1      ; Draw 1-byte sprite at V9, V6
$AC4    $805E   SHL      V0              ; V0 <<= 1, VF = MSB
$AC6    $9ED7   UNKNOWN  $9ED7           ; Unknown 9xxx instruction
$AC8    $9633   UNKNOWN  $9633           ; Unknown 9xxx instruction
$ACA    $65BE   LD       V5, #BE         ; Load 190 into V5
$ACC    $83F8   UNKNOWN  83F8            ; Unknown 8xxx instruction
$ACE    $7B31   ADD      VB, #31         ; Add 49 to VB
$AD0    $4CA9   SNE      VC, #A9         ; Skip if VC != 169
$AD2    $828E   SHL      V2              ; V2 <<= 1, VF = MSB
$AD4    $B20C   JP       V0, $20C        ; Jump to V0 + 20C
$AD6    $F93B   UNKNOWN  F93B            ; Unknown Fxxx instruction
$AD8    $B1BB   JP       V0, $1BB        ; Jump to V0 + 1BB
$ADA    $03D8   SYS      $3D8            ; System call to 3D8
$ADC    $31F2   SE       V1, #F2         ; Skip if V1 == 242
$ADE    $4E63   SNE      VE, #63         ; Skip if VE != 99
$AE0    $A6E9   LD       I, $6E9         ; Load 6E9 into I
$AE2    $E0C8   UNKNOWN  $E0C8           ; Unknown Exxx instruction
$AE4    $BB89   JP       V0, $B89        ; Jump to V0 + B89
$AE6    $4B60   SNE      VB, #60         ; Skip if VB != 96
$AE8    $6BD7   LD       VB, #D7         ; Load 215 into VB
$AEA    $F9FC   UNKNOWN  F9FC            ; Unknown Fxxx instruction
$AEC    $EEB7   UNKNOWN  $EEB7           ; Unknown Exxx instruction
$AEE    $56AE   UNKNOWN  $56AE           ; Unknown 5xxx instruction
$AF0    $0FF8   SYS      $FF8            ; System call to FF8
$AF2    $1B58   JP       $B58            ; Jump to B58
$AF4    $4150   SNE      V1, #50         ; Skip if V1 != 80
$AF6    $EEEC   UNKNOWN  $EEEC           ; Unknown Exxx instruction
$AF8    $C346   RND      V3, #46         ; V3 = random & 46
$AFA    $E8A3   UNKNOWN  $E8A3           ; Unknown Exxx instruction
$AFC    $3AF8   SE       VA, #F8         ; Skip if VA == 248
$AFE    $C71F   RND      V7, #1F         ; V7 = random & 1F
$B00    $4B75   SNE      VB, #75         ; Skip if VB != 117
$B02    $3712   SE       V7, #12         ; Skip if V7 == 18
$B04    $66BF   LD       V6, #BF         ; Load 191 into V6
$B06    $ECF8   UNKNOWN  $ECF8           ; Unknown Exxx instruction
$B08    $10A5   JP       $0A5            ; Jump to 0A5
$B0A    $ADC9   LD       I, $DC9         ; Load DC9 into I
$B0C    $6535   LD       V5, #35         ; Load 53 into V5
$B0E    $B670   JP       V0, $670        ; Jump to V0 + 670
$B10    $CBBB   RND      VB, #BB         ; VB = random & BB
$B12    $66FB   LD       V6, #FB         ; Load 251 into V6
$B14    $A24C   LD       I, $24C         ; Load 24C into I
$B16    $DFB0   DRW      VF, VB, #0      ; Draw 0-byte sprite at VF, VB
$B18    $28F4   CALL     $8F4            ; Call subroutine at 8F4
$B1A    $5589   UNKNOWN  $5589           ; Unknown 5xxx instruction
$B1C    $502C   UNKNOWN  $502C           ; Unknown 5xxx instruction
$B1E    $1A64   JP       $A64            ; Jump to A64
$B20    $B37D   JP       V0, $37D        ; Jump to V0 + 37D
$B22    $CC23   RND      VC, #23         ; VC = random & 23
$B24    $130B   JP       $30B            ; Jump to 30B
$B26    $EE71   UNKNOWN  $EE71           ; Unknown Exxx instruction
$B28    $9B29   UNKNOWN  $9B29           ; Unknown 9xxx instruction
$B2A    $8403   XOR      V4, V0          ; V4 ^= V0
$B2C    $9DEF   UNKNOWN  $9DEF           ; Unknown 9xxx instruction
$B2E    $4909   SNE      V9, #09         ; Skip if V9 != 9
$B30    $737C   ADD      V3, #7C         ; Add 124 to V3
$B32    $EFD5   UNKNOWN  $EFD5           ; Unknown Exxx instruction
$B34    $8B43   XOR      VB, V4          ; VB ^= V4
$B36    $7234   ADD      V2, #34         ; Add 52 to V2
$B38    $431B   SNE      V3, #1B         ; Skip if V3 != 27
$B3A    $4494   SNE      V4, #94         ; Skip if V4 != 148
$B3C    $616F   LD       V1, #6F         ; Load 111 into V1
$B3E    $8EC9   UNKNOWN  8EC9            ; Unknown 8xxx instruction
$B40    $30E6   SE       V0, #E6         ; Skip if V0 == 230
$B42    $8E8A   UNKNOWN  8E8A            ; Unknown 8xxx instruction
$B44    $F89A   UNKNOWN  F89A            ; Unknown Fxxx instruction
$B46    $509C   UNKNOWN  $509C           ; Unknown 5xxx instruction
$B48    $A589   LD       I, $589         ; Load 589 into I
$B4A    $1446   JP       $446            ; Jump to 446
$B4C    $FE88   UNKNOWN  FE88            ; Unknown Fxxx instruction
$B4E    $7BBC   ADD      VB, #BC         ; Add 188 to VB
$B50    $C360   RND      V3, #60         ; V3 = random & 60
$B52    $4992   SNE      V9, #92         ; Skip if V9 != 146
$B54    $BB4E   JP       V0, $B4E        ; Jump to V0 + B4E
$B56    $BFFB   JP       V0, $FFB        ; Jump to V0 + FFB
$B58    $1173   JP       $173            ; Jump to 173
$B5A    $273B   CALL     $73B            ; Call subroutine at 73B
$B5C    $CD0D   RND      VD, #0D         ; VD = random & 0D
$B5E    $3D24   SE       VD, #24         ; Skip if VD == 36
$B60    $8E4E   SHL      VE              ; VE <<= 1, VF = MSB
$B62    $0034   SYS      $034            ; System call to 034
$B64    $C523   RND      V5, #23         ; V5 = random & 23
$B66    $C1AB   RND      V1, #AB         ; V1 = random & AB
$B68    $C121   RND      V1, #21         ; V1 = random & 21
$B6A    $A0DA   LD       I, $0DA         ; Load 0DA into I
$B6C    $81BA   UNKNOWN  81BA            ; Unknown 8xxx instruction
$B6E    $11C0   JP       $1C0            ; Jump to 1C0
$B70    $CBE8   RND      VB, #E8         ; VB = random & E8
$B72    $F0CB   UNKNOWN  F0CB            ; Unknown Fxxx instruction
$B74    $4F05   SNE      VF, #05         ; Skip if VF != 5
$B76    $59BC   UNKNOWN  $59BC           ; Unknown 5xxx instruction
$B78    $B7C4   JP       V0, $7C4        ; Jump to V0 + 7C4
$B7A    $38CA   SE       V8, #CA         ; Skip if V8 == 202
$B7C    $CAE6   RND      VA, #E6         ; VA = random & E6
$B7E    $80FA   UNKNOWN  80FA            ; Unknown 8xxx instruction
$B80    $EF1A   UNKNOWN  $EF1A           ; Unknown Exxx instruction
$B82    $C06A   RND      V0, #6A         ; V0 = random & 6A
$B84    $6450   LD       V4, #50         ; Load 80 into V4
$B86    $DDBE   DRW      VD, VB, #E      ; Draw 14-byte sprite at VD, VB
$B88    $6AA3   LD       VA, #A3         ; Load 163 into VA
$B8A    $4F7B   SNE      VF, #7B         ; Skip if VF != 123
$B8C    $0F6F   SYS      $F6F            ; System call to F6F
$B8E    $CE08   RND      VE, #08         ; VE = random & 08
$B90    $5659   UNKNOWN  $5659           ; Unknown 5xxx instruction
$B92    $28B7   CALL     $8B7            ; Call subroutine at 8B7
$B94    $0D02   SYS      $D02            ; System call to D02
$B96    $FA36   UNKNOWN  FA36            ; Unknown Fxxx instruction
$B98    $536E   UNKNOWN  $536E           ; Unknown 5xxx instruction
$B9A    $B58D   JP       V0, $58D        ; Jump to V0 + 58D
$B9C    $7793   ADD      V7, #93         ; Add 147 to V7
$B9E    $BF4E   JP       V0, $F4E        ; Jump to V0 + F4E
$BA0    $5622   UNKNOWN  $5622           ; Unknown 5xxx instruction
$BA2    $48B3   SNE      V8, #B3         ; Skip if V8 != 179
$BA4    $C4EB   RND      V4, #EB         ; V4 = random & EB
$BA6    $CC3F   RND      VC, #3F         ; VC = random & 3F
$BA8    $FEC9   UNKNOWN  FEC9            ; Unknown Fxxx instruction
$BAA    $7521   ADD      V5, #21         ; Add 33 to V5
$BAC    $9B3F   UNKNOWN  $9B3F           ; Unknown 9xxx instruction
$BAE    $A2CA   LD       I, $2CA         ; Load 2CA into I
$BB0    $252A   CALL     $52A            ; Call subroutine at 52A
$BB2    $1766   JP       $766            ; Jump to 766
$BB4    $3411   SE       V4, #11         ; Skip if V4 == 17
$BB6    $C107   RND      V1, #07         ; V1 = random & 07
$BB8    $4035   SNE      V0, #35         ; Skip if V0 != 53
$BBA    $34ED   SE       V4, #ED         ; Skip if V4 == 237
$BBC    $AE29   LD       I, $E29         ; Load E29 into I
$BBE    $3F2C   SE       VF, #2C         ; Skip if VF == 44
$BC0    $88E6   SHR      V8              ; V8 >>= 1, VF = LSB
$BC2    $7EA5   ADD      VE, #A5         ; Add 165 to VE
$BC4    $7582   ADD      V5, #82         ; Add 130 to V5
$BC6    $A7B7   LD       I, $7B7         ; Load 7B7 into I
$BC8    $BAA9   JP       V0, $AA9        ; Jump to V0 + AA9
$BCA    $D3A6   DRW      V3, VA, #6      ; Draw 6-byte sprite at V3, VA
$BCC    $4959   SNE      V9, #59         ; Skip if V9 != 89
$BCE    $29A8   CALL     $9A8            ; Call subroutine at 9A8
$BD0    $8551   OR       V5, V5          ; V5 |= V5
$BD2    $1810   JP       $810            ; Jump to 810
$BD4    $9DD0   SNE      VD, VD          ; Skip if VD != VD
$BD6    $1B05   JP       $B05            ; Jump to B05
$BD8    $9104   UNKNOWN  $9104           ; Unknown 9xxx instruction
$BDA    $73FB   ADD      V3, #FB         ; Add 251 to V3
$BDC    $71B7   ADD      V1, #B7         ; Add 183 to V1
$BDE    $414D   SNE      V1, #4D         ; Skip if V1 != 77
$BE0    $96E9   UNKNOWN  $96E9           ; Unknown 9xxx instruction
$BE2    $2B36   CALL     $B36            ; Call subroutine at B36
$BE4    $CFCD   RND      VF, #CD         ; VF = random & CD
$BE6    $AEBF   LD       I, $EBF         ; Load EBF into I
$BE8    $7247   ADD      V2, #47         ; Add 71 to V2
$BEA    $E9B6   UNKNOWN  $E9B6           ; Unknown Exxx instruction
$BEC    $E0D4   UNKNOWN  $E0D4           ; Unknown Exxx instruction
$BEE    $ABFE   LD       I, $BFE         ; Load BFE into I
$BF0    $F0F6   UNKNOWN  F0F6            ; Unknown Fxxx instruction
$BF2    $D946   DRW      V9, V4, #6      ; Draw 6-byte sprite at V9, V4
$BF4    $88F7   SUBN     V8, VF          ; V8 = VF - V8, VF = !borrow
$BF6    $34AB   SE       V4, #AB         ; Skip if V4 == 171
$BF8    $000A   SYS      $00A            ; System call to 00A
$BFA    $A962   LD       I, $962         ; Load 962 into I
$BFC    $32AB   SE       V2, #AB         ; Skip if V2 == 171
$BFE    $54AD   UNKNOWN  $54AD           ; Unknown 5xxx instruction
$C00    $E270   UNKNOWN  $E270           ; Unknown Exxx instruction
$C02    $2FD2   CALL     $FD2            ; Call subroutine at FD2
$C04    $EC78   UNKNOWN  $EC78           ; Unknown Exxx instruction
$C06    $6414   LD       V4, #14         ; Load 20 into V4
$C08    $2C63   CALL     $C63            ; Call subroutine at C63
$C0A    $A1EE   LD       I, $1EE         ; Load 1EE into I
$C0C    $6C2A   LD       VC, #2A         ; Load 42 into VC
$C0E    $68F4   LD       V8, #F4         ; Load 244 into V8
$C10    $67CB   LD       V7, #CB         ; Load 203 into V7
$C12    $11CA   JP       $1CA            ; Jump to 1CA
$C14    $760B   ADD      V6, #0B         ; Add 11 to V6
$C16    $D6F0   DRW      V6, VF, #0      ; Draw 0-byte sprite at V6, VF
$C18    $7A6F   ADD      VA, #6F         ; Add 111 to VA
$C1A    $D00E   DRW      V0, V0, #E      ; Draw 14-byte sprite at V0, V0
$C1C    $0160   SYS      $160            ; System call to 160
$C1E    $F140   UNKNOWN  F140            ; Unknown Fxxx instruction
$C20    $F323   UNKNOWN  F323            ; Unknown Fxxx instruction
$C22    $DE09   DRW      VE, V0, #9      ; Draw 9-byte sprite at VE, V0
$C24    $4762   SNE      V7, #62         ; Skip if V7 != 98
$C26    $1F32   JP       $F32            ; Jump to F32
$C28    $2763   CALL     $763            ; Call subroutine at 763
$C2A    $09A4   SYS      $9A4            ; System call to 9A4
$C2C    $6085   LD       V0, #85         ; Load 133 into V0
$C2E    $5594   UNKNOWN  $5594           ; Unknown 5xxx instruction
$C30    $36E2   SE       V6, #E2         ; Skip if V6 == 226
$C32    $6B4C   LD       VB, #4C         ; Load 76 into VB
$C34    $2DC7   CALL     $DC7            ; Call subroutine at DC7
$C36    $B32C   JP       V0, $32C        ; Jump to V0 + 32C
$C38    $8C0C   UNKNOWN  8C0C            ; Unknown 8xxx instruction
$C3A    $1CE1   JP       $CE1            ; Jump to CE1
$C3C    $C9E2   RND      V9, #E2         ; V9 = random & E2
$C3E    $55A0   SE       V5, VA          ; Skip if V5 == VA
$C40    $5338   UNKNOWN  $5338           ; Unknown 5xxx instruction
$C42    $AE86   LD       I, $E86         ; Load E86 into I
$C44    $83D7   SUBN     V3, VD          ; V3 = VD - V3, VF = !borrow
$C46    $FF9E   UNKNOWN  FF9E            ; Unknown Fxxx instruction
$C48    $6768   LD       V7, #68         ; Load 104 into V7
$C4A    $CD22   RND      VD, #22         ; VD = random & 22
$C4C    $E70B   UNKNOWN  $E70B           ; Unknown Exxx instruction
$C4E    $F97F   UNKNOWN  F97F            ; Unknown Fxxx instruction
$C50    $8565   SUB      V5, V6          ; V5 -= V6, VF = !borrow
$C52    $FFF7   UNKNOWN  FFF7            ; Unknown Fxxx instruction
$C54    $2C89   CALL     $C89            ; Call subroutine at C89
$C56    $03B2   SYS      $3B2            ; System call to 3B2
$C58    $37B3   SE       V7, #B3         ; Skip if V7 == 179
$C5A    $0C42   SYS      $C42            ; System call to C42
$C5C    $D518   DRW      V5, V1, #8      ; Draw 8-byte sprite at V5, V1
$C5E    $12CD   JP       $2CD            ; Jump to 2CD
$C60    $2582   CALL     $582            ; Call subroutine at 582
$C62    $E637   UNKNOWN  $E637           ; Unknown Exxx instruction
$C64    $3C4D   SE       VC, #4D         ; Skip if VC == 77
$C66    $E2FD   UNKNOWN  $E2FD           ; Unknown Exxx instruction
$C68    $5D2A   UNKNOWN  $5D2A           ; Unknown 5xxx instruction
$C6A    $3DE5   SE       VD, #E5         ; Skip if VD == 229
$C6C    $010C   SYS      $10C            ; System call to 10C
$C6E    $93E2   UNKNOWN  $93E2           ; Unknown 9xxx instruction
$C70    $3631   SE       V6, #31         ; Skip if V6 == 49
$C72    $F79F   UNKNOWN  F79F            ; Unknown Fxxx instruction
$C74    $AD70   LD       I, $D70         ; Load D70 into I
$C76    $0A60   SYS      $A60            ; System call to A60
$C78    $A1BF   LD       I, $1BF         ; Load 1BF into I
$C7A    $B08D   JP       V0, $08D        ; Jump to V0 + 08D
$C7C    $C9F1   RND      V9, #F1         ; V9 = random & F1
$C7E    $0488   SYS      $488            ; System call to 488
$C80    $B44B   JP       V0, $44B        ; Jump to V0 + 44B
$C82    $BFD6   JP       V0, $FD6        ; Jump to V0 + FD6
$C84    $D308   DRW      V3, V0, #8      ; Draw 8-byte sprite at V3, V0
$C86    $1A7D   JP       $A7D            ; Jump to A7D
$C88    $A1B3   LD       I, $1B3         ; Load 1B3 into I
$C8A    $A85E   LD       I, $85E         ; Load 85E into I
$C8C    $A27B   LD       I, $27B         ; Load 27B into I
$C8E    $EDE9   UNKNOWN  $EDE9           ; Unknown Exxx instruction
$C90    $0294   SYS      $294            ; System call to 294
$C92    $468E   SNE      V6, #8E         ; Skip if V6 != 142
$C94    $5CAC   UNKNOWN  $5CAC           ; Unknown 5xxx instruction
$C96    $64BE   LD       V4, #BE         ; Load 190 into V4
$C98    $9E56   UNKNOWN  $9E56           ; Unknown 9xxx instruction
$C9A    $4A3C   SNE      VA, #3C         ; Skip if VA != 60
$C9C    $B817   JP       V0, $817        ; Jump to V0 + 817
$C9E    $DE37   DRW      VE, V3, #7      ; Draw 7-byte sprite at VE, V3
$CA0    $8F45   SUB      VF, V4          ; VF -= V4, VF = !borrow
$CA2    $CE9A   RND      VE, #9A         ; VE = random & 9A
$CA4    $916C   UNKNOWN  $916C           ; Unknown 9xxx instruction
$CA6    $31FC   SE       V1, #FC         ; Skip if V1 == 252
$CA8    $CC83   RND      VC, #83         ; VC = random & 83
$CAA    $9A4E   UNKNOWN  $9A4E           ; Unknown 9xxx instruction
$CAC    $8124   ADD      V1, V2          ; V1 += V2, VF = carry
$CAE    $B56D   JP       V0, $56D        ; Jump to V0 + 56D
$CB0    $1F7D   JP       $F7D            ; Jump to F7D
$CB2    $46BB   SNE      V6, #BB         ; Skip if V6 != 187
$CB4    $99EA   UNKNOWN  $99EA           ; Unknown 9xxx instruction
$CB6    $2981   CALL     $981            ; Call subroutine at 981
$CB8    $1A08   JP       $A08            ; Jump to A08
$CBA    $2614   CALL     $614            ; Call subroutine at 614
$CBC    $0A76   SYS      $A76            ; System call to A76
$CBE    $DF27   DRW      VF, V2, #7      ; Draw 7-byte sprite at VF, V2
$CC0    $854F   UNKNOWN  854F            ; Unknown 8xxx instruction
$CC2    $E95B   UNKNOWN  $E95B           ; Unknown Exxx instruction
$CC4    $00C3   SYS      $0C3            ; System call to 0C3
$CC6    $ACEF   LD       I, $CEF         ; Load CEF into I
$CC8    $F348   UNKNOWN  F348            ; Unknown Fxxx instruction
$CCA    $17D2   JP       $7D2            ; Jump to 7D2
$CCC    $94DD   UNKNOWN  $94DD           ; Unknown 9xxx instruction
$CCE    $D15E   DRW      V1, V5, #E      ; Draw 14-byte sprite at V1, V5
$CD0    $DBF6   DRW      VB, VF, #6      ; Draw 6-byte sprite at VB, VF
$CD2    $B90B   JP       V0, $90B        ; Jump to V0 + 90B
$CD4    $C6C3   RND      V6, #C3         ; V6 = random & C3
$CD6    $F741   UNKNOWN  F741            ; Unknown Fxxx instruction
$CD8    $F833   LD       B, V8           ; Store BCD of V8 at I, I+1, I+2
$CDA    $1989   JP       $989            ; Jump to 989
$CDC    $0DF2   SYS      $DF2            ; System call to DF2
$CDE    $A11A   LD       I, $11A         ; Load 11A into I
$CE0    $C153   RND      V1, #53         ; V1 = random & 53
$CE2    $0E08   SYS      $E08            ; System call to E08
$CE4    $2C24   CALL     $C24            ; Call subroutine at C24
$CE6    $A8CC   LD       I, $8CC         ; Load 8CC into I
$CE8    $E955   UNKNOWN  $E955           ; Unknown Exxx instruction
$CEA    $8563   XOR      V5, V6          ; V5 ^= V6
$CEC    $47E8   SNE      V7, #E8         ; Skip if V7 != 232
$CEE    $5C32   UNKNOWN  $5C32           ; Unknown 5xxx instruction
$CF0    $37BB   SE       V7, #BB         ; Skip if V7 == 187
$CF2    $DFD7   DRW      VF, VD, #7      ; Draw 7-byte sprite at VF, VD
$CF4    $76A7   ADD      V6, #A7         ; Add 167 to V6
$CF6    $0B91   SYS      $B91            ; System call to B91
$CF8    $7329   ADD      V3, #29         ; Add 41 to V3
$CFA    $5720   SE       V7, V2          ; Skip if V7 == V2
$CFC    $E3C5   UNKNOWN  $E3C5           ; Unknown Exxx instruction
$CFE    $20F7   CALL     $0F7            ; Call subroutine at 0F7
$D00    $8B26   SHR      VB              ; VB >>= 1, VF = LSB
$D02    $AF0D   LD       I, $F0D         ; Load F0D into I
$D04    $2CBC   CALL     $CBC            ; Call subroutine at CBC
$D06    $3D0F   SE       VD, #0F         ; Skip if VD == 15
$D08    $4556   SNE      V5, #56         ; Skip if V5 != 86
$D0A    $9370   SNE      V3, V7          ; Skip if V3 != V7
$D0C    $8436   SHR      V4              ; V4 >>= 1, VF = LSB
$D0E    $0B6D   SYS      $B6D            ; System call to B6D
$D10    $41C3   SNE      V1, #C3         ; Skip if V1 != 195
$D12    $D992   DRW      V9, V9, #2      ; Draw 2-byte sprite at V9, V9
$D14    $7B45   ADD      VB, #45         ; Add 69 to VB
$D16    $AD4C   LD       I, $D4C         ; Load D4C into I
$D18    $7DCE   ADD      VD, #CE         ; Add 206 to VD
$D1A    $E4DE   UNKNOWN  $E4DE           ; Unknown Exxx instruction
$D1C    $0901   SYS      $901            ; System call to 901
$D1E    $AB98   LD       I, $B98         ; Load B98 into I
$D20    $7AF4   ADD      VA, #F4         ; Add 244 to VA
$D22    $5C54   UNKNOWN  $5C54           ; Unknown 5xxx instruction
$D24    $CC12   RND      VC, #12         ; VC = random & 12
$D26    $EAE0   UNKNOWN  $EAE0           ; Unknown Exxx instruction
$D28    $5015   UNKNOWN  $5015           ; Unknown 5xxx instruction
$D2A    $5306   UNKNOWN  $5306           ; Unknown 5xxx instruction
$D2C    $1FA4   JP       $FA4            ; Jump to FA4
$D2E    $920A   UNKNOWN  $920A           ; Unknown 9xxx instruction
$D30    $2E8F   CALL     $E8F            ; Call subroutine at E8F
$D32    $3165   SE       V1, #65         ; Skip if V1 == 101
$D34    $4957   SNE      V9, #57         ; Skip if V9 != 87
$D36    $80B2   AND      V0, VB          ; V0 &= VB
$D38    $C165   RND      V1, #65         ; V1 = random & 65
$D3A    $BAAA   JP       V0, $AAA        ; Jump to V0 + AAA
$D3C    $00F5   SYS      $0F5            ; System call to 0F5
$D3E    $A834   LD       I, $834         ; Load 834 into I
$D40    $5830   SE       V8, V3          ; Skip if V8 == V3
$D42    $F87D   UNKNOWN  F87D            ; Unknown Fxxx instruction
$D44    $13ED   JP       $3ED            ; Jump to 3ED
$D46    $6F96   LD       VF, #96         ; Load 150 into VF
$D48    $2F18   CALL     $F18            ; Call subroutine at F18
$D4A    $612F   LD       V1, #2F         ; Load 47 into V1
$D4C    $D66E   DRW      V6, V6, #E      ; Draw 14-byte sprite at V6, V6
$D4E    $3D32   SE       VD, #32         ; Skip if VD == 50
$D50    $AB5F   LD       I, $B5F         ; Load B5F into I
$D52    $1DFF   JP       $DFF            ; Jump to DFF
$D54    $842E   SHL      V4              ; V4 <<= 1, VF = MSB
$D56    $FA27   UNKNOWN  FA27            ; Unknown Fxxx instruction
$D58    $F31A   UNKNOWN  F31A            ; Unknown Fxxx instruction
$D5A    $D2E3   DRW      V2, VE, #3      ; Draw 3-byte sprite at V2, VE
$D5C    $0ED1   SYS      $ED1            ; System call to ED1
$D5E    $E92B   UNKNOWN  $E92B           ; Unknown Exxx instruction
$D60    $E4FF   UNKNOWN  $E4FF           ; Unknown Exxx instruction
$D62    $B80A   JP       V0, $80A        ; Jump to V0 + 80A
$D64    $3C87   SE       VC, #87         ; Skip if VC == 135
$D66    $4473   SNE      V4, #73         ; Skip if V4 != 115
$D68    $49B3   SNE      V9, #B3         ; Skip if V9 != 179
$D6A    $DE12   DRW      VE, V1, #2      ; Draw 2-byte sprite at VE, V1
$D6C    $AAAB   LD       I, $AAB         ; Load AAB into I
$D6E    $098B   SYS      $98B            ; System call to 98B
$D70    $EA2C   UNKNOWN  $EA2C           ; Unknown Exxx instruction
$D72    $B45D   JP       V0, $45D        ; Jump to V0 + 45D
$D74    $0FD5   SYS      $FD5            ; System call to FD5
$D76    $4E02   SNE      VE, #02         ; Skip if VE != 2
$D78    $6B0B   LD       VB, #0B         ; Load 11 into VB
$D7A    $FCC2   UNKNOWN  FCC2            ; Unknown Fxxx instruction
$D7C    $2681   CALL     $681            ; Call subroutine at 681
$D7E    $161C   JP       $61C            ; Jump to 61C
$D80    $709F   ADD      V0, #9F         ; Add 159 to V0
$D82    $93CF   UNKNOWN  $93CF           ; Unknown 9xxx instruction
$D84    $A491   LD       I, $491         ; Load 491 into I
$D86    $942C   UNKNOWN  $942C           ; Unknown 9xxx instruction
$D88    $901F   UNKNOWN  $901F           ; Unknown 9xxx instruction
$D8A    $2508   CALL     $508            ; Call subroutine at 508
$D8C    $980C   UNKNOWN  $980C           ; Unknown 9xxx instruction
$D8E    $E0E3   UNKNOWN  $E0E3           ; Unknown Exxx instruction
$D90    $AC3B   LD       I, $C3B         ; Load C3B into I
$D92    $02C1   SYS      $2C1            ; System call to 2C1
$D94    $FABF   UNKNOWN  FABF            ; Unknown Fxxx instruction
$D96    $0DC8   SYS      $DC8            ; System call to DC8
$D98    $3633   SE       V6, #33         ; Skip if V6 == 51
$D9A    $DEEE   DRW      VE, VE, #E      ; Draw 14-byte sprite at VE, VE
$D9C    $022C   SYS      $22C            ; System call to 22C
$D9E    $3EF5   SE       VE, #F5         ; Skip if VE == 245
$DA0    $24B3   CALL     $4B3            ; Call subroutine at 4B3
$DA2    $B708   JP       V0, $708        ; Jump to V0 + 708
$DA4    $818C   UNKNOWN  818C            ; Unknown 8xxx instruction
$DA6    $B12B   JP       V0, $12B        ; Jump to V0 + 12B
$DA8    $166C   JP       $66C            ; Jump to 66C
$DAA    $4EDF   SNE      VE, #DF         ; Skip if VE != 223
$DAC    $95F2   UNKNOWN  $95F2           ; Unknown 9xxx instruction
$DAE    $44AB   SNE      V4, #AB         ; Skip if V4 != 171
$DB0    $D954   DRW      V9, V5, #4      ; Draw 4-byte sprite at V9, V5
$DB2    $8D0B   UNKNOWN  8D0B            ; Unknown 8xxx instruction
$DB4    $EC9E   SKP      VC              ; Skip if key VC pressed
$DB6    $F522   UNKNOWN  F522            ; Unknown Fxxx instruction
$DB8    $CA93   RND      VA, #93         ; VA = random & 93
$DBA    $BF65   JP       V0, $F65        ; Jump to V0 + F65
$DBC    $9221   UNKNOWN  $9221           ; Unknown 9xxx instruction
$DBE    $DFFE   DRW      VF, VF, #E      ; Draw 14-byte sprite at VF, VF
$DC0    $C490   RND      V4, #90         ; V4 = random & 90
$DC2    $BA64   JP       V0, $A64        ; Jump to V0 + A64
$DC4    $B4E2   JP       V0, $4E2        ; Jump to V0 + 4E2
$DC6    $7E71   ADD      VE, #71         ; Add 113 to VE
$DC8    $B817   JP       V0, $817        ; Jump to V0 + 817
$DCA    $433D   SNE      V3, #3D         ; Skip if V3 != 61
$DCC    $E057   UNKNOWN  $E057           ; Unknown Exxx instruction
$DCE    $C6C8   RND      V6, #C8         ; V6 = random & C8
$DD0    $9237   UNKNOWN  $9237           ; Unknown 9xxx instruction
$DD2    $F3F0   UNKNOWN  F3F0            ; Unknown Fxxx instruction
$DD4    $EC19   UNKNOWN  $EC19           ; Unknown Exxx instruction
$DD6    $F096   UNKNOWN  F096            ; Unknown Fxxx instruction
$DD8    $BDB8   JP       V0, $DB8        ; Jump to V0 + DB8
$DDA    $60E8   LD       V0, #E8         ; Load 232 into V0
$DDC    $0A01   SYS      $A01            ; System call to A01
$DDE    $AEBF   LD       I, $EBF         ; Load EBF into I
$DE0    $D5AF   DRW      V5, VA, #F      ; Draw 15-byte sprite at V5, VA
$DE2    $7046   ADD      V0, #46         ; Add 70 to V0
$DE4    $A8FD   LD       I, $8FD         ; Load 8FD into I
$DE6    $7D14   ADD      VD, #14         ; Add 20 to VD
$DE8    $D106   DRW      V1, V0, #6      ; Draw 6-byte sprite at V1, V0
$DEA    $2847   CALL     $847            ; Call subroutine at 847
$DEC    $E537   UNKNOWN  $E537           ; Unknown Exxx instruction
$DEE    $CC10   RND      VC, #10         ; VC = random & 10
$DF0    $3974   SE       V9, #74         ; Skip if V9 == 116
$DF2    $E93C   UNKNOWN  $E93C           ; Unknown Exxx instruction
$DF4    $6EFF   LD       VE, #FF         ; Load 255 into VE
$DF6    $E797   UNKNOWN  $E797           ; Unknown Exxx instruction
$DF8    $50E7   UNKNOWN  $50E7           ; Unknown 5xxx instruction
$DFA    $16D5   JP       $6D5            ; Jump to 6D5
$DFC    $40B9   SNE      V0, #B9         ; Skip if V0 != 185
$DFE    $E0E4   UNKNOWN  $E0E4           ; Unknown Exxx instruction
$E00    $63EF   LD       V3, #EF         ; Load 239 into V3
$E02    $E6E8   UNKNOWN  $E6E8           ; Unknown Exxx instruction
$E04    $1E2E   JP       $E2E            ; Jump to E2E
$E06    $DAC4   DRW      VA, VC, #4      ; Draw 4-byte sprite at VA, VC
$E08    $668C   LD       V6, #8C         ; Load 140 into V6
$E0A    $F324   UNKNOWN  F324            ; Unknown Fxxx instruction
$E0C    $DC26   DRW      VC, V2, #6      ; Draw 6-byte sprite at VC, V2
$E0E    $5E5C   UNKNOWN  $5E5C           ; Unknown 5xxx instruction
$E10    $0CCB   SYS      $CCB            ; System call to CCB
$E12    $72E3   ADD      V2, #E3         ; Add 227 to V2
$E14    $E40C   UNKNOWN  $E40C           ; Unknown Exxx instruction
$E16    $CE1F   RND      VE, #1F         ; VE = random & 1F
$E18    $A91F   LD       I, $91F         ; Load 91F into I
$E1A    $74E7   ADD      V4, #E7         ; Add 231 to V4
$E1C    $B7AA   JP       V0, $7AA        ; Jump to V0 + 7AA
$E1E    $97A3   UNKNOWN  $97A3           ; Unknown 9xxx instruction
$E20    $DF65   DRW      VF, V6, #5      ; Draw 5-byte sprite at VF, V6
$E22    $30C6   SE       V0, #C6         ; Skip if V0 == 198
$E24    $869B   UNKNOWN  869B            ; Unknown 8xxx instruction
$E26    $EADF   UNKNOWN  $EADF           ; Unknown Exxx instruction
$E28    $3D78   SE       VD, #78         ; Skip if VD == 120
$E2A    $2D5F   CALL     $D5F            ; Call subroutine at D5F
$E2C    $2CF0   CALL     $CF0            ; Call subroutine at CF0
$E2E    $7413   ADD      V4, #13         ; Add 19 to V4
$E30    $736D   ADD      V3, #6D         ; Add 109 to V3
$E32    $C814   RND      V8, #14         ; V8 = random & 14
$E34    $78FE   ADD      V8, #FE         ; Add 254 to V8
$E36    $3D3D   SE       VD, #3D         ; Skip if VD == 61
$E38    $AD47   LD       I, $D47         ; Load D47 into I
$E3A    $D7A7   DRW      V7, VA, #7      ; Draw 7-byte sprite at V7, VA
$E3C    $85EC   UNKNOWN  85EC            ; Unknown 8xxx instruction
$E3E    $A314   LD       I, $314         ; Load 314 into I
$E40    $CB8D   RND      VB, #8D         ; VB = random & 8D
$E42    $95A4   UNKNOWN  $95A4           ; Unknown 9xxx instruction
$E44    $3DFC   SE       VD, #FC         ; Skip if VD == 252
$E46    $B924   JP       V0, $924        ; Jump to V0 + 924
$E48    $6472   LD       V4, #72         ; Load 114 into V4
$E4A    $94EA   UNKNOWN  $94EA           ; Unknown 9xxx instruction
$E4C    $81ED   UNKNOWN  81ED            ; Unknown 8xxx instruction
$E4E    $4FD5   SNE      VF, #D5         ; Skip if VF != 213
$E50    $4260   SNE      V2, #60         ; Skip if V2 != 96
$E52    $204B   CALL     $04B            ; Call subroutine at 04B
$E54    $13F9   JP       $3F9            ; Jump to 3F9
$E56    $769F   ADD      V6, #9F         ; Add 159 to V6
$E58    $3549   SE       V5, #49         ; Skip if V5 == 73
$E5A    $D476   DRW      V4, V7, #6      ; Draw 6-byte sprite at V4, V7
$E5C    $B0A8   JP       V0, $0A8        ; Jump to V0 + 0A8
$E5E    $7E28   ADD      VE, #28         ; Add 40 to VE
$E60    $CE12   RND      VE, #12         ; VE = random & 12
$E62    $C848   RND      V8, #48         ; V8 = random & 48
$E64    $8115   SUB      V1, V1          ; V1 -= V1, VF = !borrow
$E66    $1329   JP       $329            ; Jump to 329
$E68    $3E04   SE       VE, #04         ; Skip if VE == 4
$E6A    $FE9D   UNKNOWN  FE9D            ; Unknown Fxxx instruction
$E6C    $307A   SE       V0, #7A         ; Skip if V0 == 122
$E6E    $C3E8   RND      V3, #E8         ; V3 = random & E8
$E70    $440A   SNE      V4, #0A         ; Skip if V4 != 10
$E72    $C556   RND      V5, #56         ; V5 = random & 56
$E74    $B73A   JP       V0, $73A        ; Jump to V0 + 73A
$E76    $7D9F   ADD      VD, #9F         ; Add 159 to VD
$E78    $AB63   LD       I, $B63         ; Load B63 into I
$E7A    $F7F5   UNKNOWN  F7F5            ; Unknown Fxxx instruction
$E7C    $25BF   CALL     $5BF            ; Call subroutine at 5BF
$E7E    $CB13   RND      VB, #13         ; VB = random & 13
$E80    $5327   UNKNOWN  $5327           ; Unknown 5xxx instruction
$E82    $5795   UNKNOWN  $5795           ; Unknown 5xxx instruction
$E84    $9061   UNKNOWN  $9061           ; Unknown 9xxx instruction
$E86    $A7F3   LD       I, $7F3         ; Load 7F3 into I
$E88    $BDD5   JP       V0, $DD5        ; Jump to V0 + DD5
$E8A    $4CC4   SNE      VC, #C4         ; Skip if VC != 196
$E8C    $8075   SUB      V0, V7          ; V0 -= V7, VF = !borrow
$E8E    $97A8   UNKNOWN  $97A8           ; Unknown 9xxx instruction
$E90    $DE54   DRW      VE, V5, #4      ; Draw 4-byte sprite at VE, V5
$E92    $78A9   ADD      V8, #A9         ; Add 169 to V8
$E94    $C522   RND      V5, #22         ; V5 = random & 22
$E96    $DC9F   DRW      VC, V9, #F      ; Draw 15-byte sprite at VC, V9
$E98    $D428   DRW      V4, V2, #8      ; Draw 8-byte sprite at V4, V2
$E9A    $148F   JP       $48F            ; Jump to 48F
$E9C    $000C   SYS      $00C            ; System call to 00C
$E9E    $235B   CALL     $35B            ; Call subroutine at 35B
$EA0    $8C8D   UNKNOWN  8C8D            ; Unknown 8xxx instruction
$EA2    $2099   CALL     $099            ; Call subroutine at 099
$EA4    $3AFD   SE       VA, #FD         ; Skip if VA == 253
$EA6    $B668   JP       V0, $668        ; Jump to V0 + 668
$EA8    $BB87   JP       V0, $B87        ; Jump to V0 + B87
$EAA    $2A92   CALL     $A92            ; Call subroutine at A92
$EAC    $C8C0   RND      V8, #C0         ; V8 = random & C0
$EAE    $FE77   UNKNOWN  FE77            ; Unknown Fxxx instruction
$EB0    $3F79   SE       VF, #79         ; Skip if VF == 121
$EB2    $8041   OR       V0, V4          ; V0 |= V4
$EB4    $B7E2   JP       V0, $7E2        ; Jump to V0 + 7E2
$EB6    $A994   LD       I, $994         ; Load 994 into I
$EB8    $E6A8   UNKNOWN  $E6A8           ; Unknown Exxx instruction
$EBA    $BC20   JP       V0, $C20        ; Jump to V0 + C20
$EBC    $1E2C   JP       $E2C            ; Jump to E2C
$EBE    $4FF9   SNE      VF, #F9         ; Skip if VF != 249
$EC0    $A594   LD       I, $594         ; Load 594 into I
$EC2    $86D8   UNKNOWN  86D8            ; Unknown 8xxx instruction
$EC4    $12FC   JP       $2FC            ; Jump to 2FC
$EC6    $4B9E   SNE      VB, #9E         ; Skip if VB != 158
$EC8    $3A99   SE       VA, #99         ; Skip if VA == 153
$ECA    $EC6B   UNKNOWN  $EC6B           ; Unknown Exxx instruction
$ECC    $F54E   UNKNOWN  F54E            ; Unknown Fxxx instruction
$ECE    $639F   LD       V3, #9F         ; Load 159 into V3
$ED0    $CA23   RND      VA, #23         ; VA = random & 23
$ED2    $92A8   UNKNOWN  $92A8           ; Unknown 9xxx instruction
$ED4    $2645   CALL     $645            ; Call subroutine at 645
$ED6    $0F85   SYS      $F85            ; System call to F85
$ED8    $F033   LD       B, V0           ; Store BCD of V0 at I, I+1, I+2
$EDA    $508A   UNKNOWN  $508A           ; Unknown 5xxx instruction
$EDC    $CF2B   RND      VF, #2B         ; VF = random & 2B
$EDE    $8B0C   UNKNOWN  8B0C            ; Unknown 8xxx instruction
$EE0    $4558   SNE      V5, #58         ; Skip if V5 != 88
$EE2    $1CC1   JP       $CC1            ; Jump to CC1
$EE4    $9BB4   UNKNOWN  $9BB4           ; Unknown 9xxx instruction
$EE6    $5DE2   UNKNOWN  $5DE2           ; Unknown 5xxx instruction
$EE8    $1501   JP       $501            ; Jump to 501
$EEA    $2022   CALL     $022            ; Call subroutine at 022
$EEC    $0300   SYS      $300            ; System call to 300
$EEE    $D064   DRW      V0, V6, #4      ; Draw 4-byte sprite at V0, V6
$EF0    $D238   DRW      V2, V3, #8      ; Draw 8-byte sprite at V2, V3
$EF2    $8D89   UNKNOWN  8D89            ; Unknown 8xxx instruction
$EF4    $BFB5   JP       V0, $FB5        ; Jump to V0 + FB5
$EF6    $E527   UNKNOWN  $E527           ; Unknown Exxx instruction
$EF8    $4014   SNE      V0, #14         ; Skip if V0 != 20
$EFA    $1B22   JP       $B22            ; Jump to B22
$EFC    $4578   SNE      V5, #78         ; Skip if V5 != 120
$EFE    $1C03   JP       $C03            ; Jump to C03
$F00    $DBE1   DRW      VB, VE, #1      ; Draw 1-byte sprite at VB, VE
$F02    $F943   UNKNOWN  F943            ; Unknown Fxxx instruction
$F04    $7240   ADD      V2, #40         ; Add 64 to V2
$F06    $2C44   CALL     $C44            ; Call subroutine at C44
$F08    $B440   JP       V0, $440        ; Jump to V0 + 440
$F0A    $1E2B   JP       $E2B            ; Jump to E2B
$F0C    $DE9B   DRW      VE, V9, #B      ; Draw 11-byte sprite at VE, V9
$F0E    $32E1   SE       V2, #E1         ; Skip if V2 == 225
$F10    $D0BC   DRW      V0, VB, #C      ; Draw 12-byte sprite at V0, VB
$F12    $0695   SYS      $695            ; System call to 695
$F14    $7175   ADD      V1, #75         ; Add 117 to V1
$F16    $995C   UNKNOWN  $995C           ; Unknown 9xxx instruction
$F18    $BFD1   JP       V0, $FD1        ; Jump to V0 + FD1
$F1A    $A7D3   LD       I, $7D3         ; Load 7D3 into I
$F1C    $B09A   JP       V0, $09A        ; Jump to V0 + 09A
$F1E    $D9F0   DRW      V9, VF, #0      ; Draw 0-byte sprite at V9, VF
$F20    $E600   UNKNOWN  $E600           ; Unknown Exxx instruction
$F22    $8EDC   UNKNOWN  8EDC            ; Unknown 8xxx instruction
$F24    $F254   UNKNOWN  F254            ; Unknown Fxxx instruction
$F26    $C5FA   RND      V5, #FA         ; V5 = random & FA
$F28    $1931   JP       $931            ; Jump to 931
$F2A    $B65C   JP       V0, $65C        ; Jump to V0 + 65C
$F2C    $4E42   SNE      VE, #42         ; Skip if VE != 66
$F2E    $0BBD   SYS      $BBD            ; System call to BBD
$F30    $C35E   RND      V3, #5E         ; V3 = random & 5E
$F32    $77B7   ADD      V7, #B7         ; Add 183 to V7
$F34    $6929   LD       V9, #29         ; Load 41 into V9
$F36    $8397   SUBN     V3, V9          ; V3 = V9 - V3, VF = !borrow
$F38    $F6C6   UNKNOWN  F6C6            ; Unknown Fxxx instruction
$F3A    $4B39   SNE      VB, #39         ; Skip if VB != 57
$F3C    $85EB   UNKNOWN  85EB            ; Unknown 8xxx instruction
$F3E    $557E   UNKNOWN  $557E           ; Unknown 5xxx instruction
$F40    $B0AE   JP       V0, $0AE        ; Jump to V0 + 0AE
$F42    $AADF   LD       I, $ADF         ; Load ADF into I
$F44    $5C52   UNKNOWN  $5C52           ; Unknown 5xxx instruction
$F46    $78EB   ADD      V8, #EB         ; Add 235 to V8
$F48    $7AA8   ADD      VA, #A8         ; Add 168 to VA
$F4A    $8D32   AND      VD, V3          ; VD &= V3
$F4C    $4085   SNE      V0, #85         ; Skip if V0 != 133
$F4E    $C516   RND      V5, #16         ; V5 = random & 16
$F50    $3ED8   SE       VE, #D8         ; Skip if VE == 216
$F52    $CBBF   RND      VB, #BF         ; VB = random & BF
$F54    $5C54   UNKNOWN  $5C54           ; Unknown 5xxx instruction
$F56    $972D   UNKNOWN  $972D           ; Unknown 9xxx instruction
$F58    $4995   SNE      V9, #95         ; Skip if V9 != 149
$F5A    $EFB7   UNKNOWN  $EFB7           ; Unknown Exxx instruction
$F5C    $F441   UNKNOWN  F441            ; Unknown Fxxx instruction
$F5E    $1C9C   JP       $C9C            ; Jump to C9C
$F60    $765B   ADD      V6, #5B         ; Add 91 to V6
$F62    $AA56   LD       I, $A56         ; Load A56 into I
$F64    $AFEF   LD       I, $FEF         ; Load FEF into I
$F66    $A4FC   LD       I, $4FC         ; Load 4FC into I
$F68    $29FE   CALL     $9FE            ; Call subroutine at 9FE
$F6A    $0A0A   SYS      $A0A            ; System call to A0A
$F6C    $E224   UNKNOWN  $E224           ; Unknown Exxx instruction
$F6E    $1545   JP       $545            ; Jump to 545
$F70    $419F   SNE      V1, #9F         ; Skip if V1 != 159
$F72    $695A   LD       V9, #5A         ; Load 90 into V9
$F74    $9483   UNKNOWN  $9483           ; Unknown 9xxx instruction
$F76    $26AF   CALL     $6AF            ; Call subroutine at 6AF
$F78    $265E   CALL     $65E            ; Call subroutine at 65E
$F7A    $59ED   UNKNOWN  $59ED           ; Unknown 5xxx instruction
$F7C    $EEEC   UNKNOWN  $EEEC           ; Unknown Exxx instruction
$F7E    $8114   ADD      V1, V1          ; V1 += V1, VF = carry
$F80    $8C3E   SHL      VC              ; VC <<= 1, VF = MSB
$F82    $B716   JP       V0, $716        ; Jump to V0 + 716
$F84    $2004   CALL     $004            ; Call subroutine at 004
$F86    $F90E   UNKNOWN  F90E            ; Unknown Fxxx instruction
$F88    $0F05   SYS      $F05            ; System call to F05
$F8A    $D0C9   DRW      V0, VC, #9      ; Draw 9-byte sprite at V0, VC
$F8C    $1BA9   JP       $BA9            ; Jump to BA9
$F8E    $C33A   RND      V3, #3A         ; V3 = random & 3A
$F90    $E9E0   UNKNOWN  $E9E0           ; Unknown Exxx instruction
$F92    $813B   UNKNOWN  813B            ; Unknown 8xxx instruction
$F94    $756E   ADD      V5, #6E         ; Add 110 to V5
$F96    $EB37   UNKNOWN  $EB37           ; Unknown Exxx instruction
$F98    $A998   LD       I, $998         ; Load 998 into I
$F9A    $92D9   UNKNOWN  $92D9           ; Unknown 9xxx instruction
$F9C    $BBF2   JP       V0, $BF2        ; Jump to V0 + BF2
$F9E    $AC3C   LD       I, $C3C         ; Load C3C into I
$FA0    $0441   SYS      $441            ; System call to 441
$FA2    $830D   UNKNOWN  830D            ; Unknown 8xxx instruction
$FA4    $D812   DRW      V8, V1, #2      ; Draw 2-byte sprite at V8, V1
$FA6    $6B18   LD       VB, #18         ; Load 24 into VB
$FA8    $F822   UNKNOWN  F822            ; Unknown Fxxx instruction
$FAA    $071C   SYS      $71C            ; System call to 71C
$FAC    $8DEA   UNKNOWN  8DEA            ; Unknown 8xxx instruction
$FAE    $9460   SNE      V4, V6          ; Skip if V4 != V6
$FB0    $0131   SYS      $131            ; System call to 131
$FB2    $E918   UNKNOWN  $E918           ; Unknown Exxx instruction
$FB4    $C4C0   RND      V4, #C0         ; V4 = random & C0
$FB6    $2013   CALL     $013            ; Call subroutine at 013
$FB8    $6EEB   LD       VE, #EB         ; Load 235 into VE
$FBA    $1FB9   JP       $FB9            ; Jump to FB9
$FBC    $E66A   UNKNOWN  $E66A           ; Unknown Exxx instruction
$FBE    $BA95   JP       V0, $A95        ; Jump to V0 + A95
$FC0    $76FA   ADD      V6, #FA         ; Add 250 to V6
$FC2    $95EA   UNKNOWN  $95EA           ; Unknown 9xxx instruction
$FC4    $4DCE   SNE      VD, #CE         ; Skip if VD != 206
$FC6    $9F3F   UNKNOWN  $9F3F           ; Unknown 9xxx instruction
$FC8    $E24D   UNKNOWN  $E24D           ; Unknown Exxx instruction
$FCA    $55CE   UNKNOWN  $55CE           ; Unknown 5xxx instruction
$FCC    $24B8   CALL     $4B8            ; Call subroutine at 4B8
$FCE    $9707   UNKNOWN  $9707           ; Unknown 9xxx instruction
$FD0    $ED67   UNKNOWN  $ED67           ; Unknown Exxx instruction
$FD2    $F6B3   UNKNOWN  F6B3            ; Unknown Fxxx instruction
$FD4    $F276   UNKNOWN  F276            ; Unknown Fxxx instruction
$FD6    $84B1   OR       V4, VB          ; V4 |= VB
$FD8    $B796   JP       V0, $796        ; Jump to V0 + 796
$FDA    $399B   SE       V9, #9B         ; Skip if V9 == 155
$FDC    $429A   SNE      V2, #9A         ; Skip if V2 != 154
$FDE    $8A3E   SHL      VA              ; VA <<= 1, VF = MSB
$FE0    $16B1   JP       $6B1            ; Jump to 6B1
$FE2    $C212   RND      V2, #12         ; V2 = random & 12
$FE4    $B7E4   JP       V0, $7E4        ; Jump to V0 + 7E4
$FE6    $3E4A   SE       VE, #4A         ; Skip if VE == 74
$FE8    $01A5   SYS      $1A5            ; System call to 1A5
$FEA    $D269   DRW      V2, V6, #9      ; Draw 9-byte sprite at V2, V6
$FEC    $5B9B   UNKNOWN  $5B9B           ; Unknown 5xxx instruction
$FEE    $647B   LD       V4, #7B         ; Load 123 into V4
$FF0    $2E57   CALL     $E57            ; Call subroutine at E57
$FF2    $6F18   LD       VF, #18         ; Load 24 into VF
$FF4    $B251   JP       V0, $251        ; Jump to V0 + 251
$FF6    $E2D2   UNKNOWN  $E2D2           ; Unknown Exxx instruction
$FF8    $DE20   DRW      VE, V2, #0      ; Draw 0-byte sprite at VE, V2
$FFA    $D153   DRW      V1, V5, #3      ; Draw 3-byte sprite at V1, V5
$FFC    $8F8F   UNKNOWN  8F8F            ; Unknown 8xxx instruction
$FFE    $43FB   SNE      V3, #FB         ; Skip if V3 != 251

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 465 (25.9%)
  JP      : 231 (12.9%)
  LD      : 229 (12.8%)
  RND     : 133 ( 7.4%)
  SNE     : 116 ( 6.5%)
  CALL    : 116 ( 6.5%)
  SE      : 114 ( 6.4%)
  ADD     : 113 ( 6.3%)
  DRW     : 109 ( 6.1%)
  SYS     : 109 ( 6.1%)
  SHR     :  11 ( 0.6%)
  SHL     :  10 ( 0.6%)
  XOR     :   9 ( 0.5%)
  SUBN    :   8 ( 0.4%)
  AND     :   7 ( 0.4%)
  SUB     :   6 ( 0.3%)
  OR      :   4 ( 0.2%)
  CLS     :   1 ( 0.1%)
  SKP     :   1 ( 0.1%)

Memory Operations: 342 (19.1%)
Arithmetic Operations: 147 (8.2%)
