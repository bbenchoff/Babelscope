
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B286D01_I21612_C2197_4efcc61156a9.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 286
Instance: 21612
Direction: descending
Final Array: [237, 77, 54, 54, 54, 54, 54, 54]
Operations: R:0 W:6 C:118 S:14

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 101
Sort Array References:
  $262: LD I, $07E ; Load 07E into I
  $2E2: LD I, $3A9 ; Load 3A9 into I
  $2E4: LD I, $825 ; Load 825 into I
  $2F4: LD I, $E43 ; Load E43 into I
  $332: LD I, $0DD ; Load 0DD into I
  $33A: LD I, $751 ; Load 751 into I
  $33E: LD I, $A90 ; Load A90 into I
  $354: LD I, $022 ; Load 022 into I
  $398: LD I, $339 ; Load 339 into I
  $3D8: LD I, $5E8 ; Load 5E8 into I
  $3FA: LD I, $39D ; Load 39D into I
  $3FE: LD I, $C29 ; Load C29 into I
  $410: LD I, $42F ; Load 42F into I
  $42C: LD I, $879 ; Load 879 into I
  $43A: LD I, $987 ; Load 987 into I
  $472: LD I, $11D ; Load 11D into I
  $4BE: LD I, $058 ; Load 058 into I
  $4FC: LD I, $302 ; Load 302 into I
  $51C: LD I, $FA3 ; Load FA3 into I
  $532: LD I, $D76 ; Load D76 into I
  $580: LD I, $8D4 ; Load 8D4 into I
  $592: LD I, $9E3 ; Load 9E3 into I
  $5AA: LD I, $3CD ; Load 3CD into I
  $63A: LD I, $CC3 ; Load CC3 into I
  $642: LD I, $3EC ; Load 3EC into I
  $682: LD I, $E95 ; Load E95 into I
  $69E: LD I, $A62 ; Load A62 into I
  $6CE: LD I, $465 ; Load 465 into I
  $6E2: LD I, $0A7 ; Load 0A7 into I
  $720: LD I, $440 ; Load 440 into I
  $72C: LD I, $43D ; Load 43D into I
  $748: LD I, $C7D ; Load C7D into I
  $770: LD I, $125 ; Load 125 into I
  $7C0: LD I, $3F4 ; Load 3F4 into I
  $7D0: LD I, $9CA ; Load 9CA into I
  $7D4: LD I, $36D ; Load 36D into I
  $810: LD I, $ACC ; Load ACC into I
  $858: LD I, $CCF ; Load CCF into I
  $8C4: LD I, $66E ; Load 66E into I
  $8C8: LD I, $0CB ; Load 0CB into I
  $8CA: LD I, $A43 ; Load A43 into I
  $8CE: LD I, $E18 ; Load E18 into I
  $912: LD I, $064 ; Load 064 into I
  $914: LD I, $3ED ; Load 3ED into I
  $930: LD I, $8FE ; Load 8FE into I
  $93C: LD I, $594 ; Load 594 into I
  $94E: LD I, $37B ; Load 37B into I
  $962: LD I, $AD0 ; Load AD0 into I
  $968: LD I, $37F ; Load 37F into I
  $974: LD I, $494 ; Load 494 into I
  $98C: LD I, $2A3 ; Load 2A3 into I
  $9FE: LD I, $9F6 ; Load 9F6 into I
  $A06: LD I, $814 ; Load 814 into I
  $A14: LD I, $EA6 ; Load EA6 into I
  $A44: LD I, $312 ; Load 312 into I
  $A66: LD I, $AB7 ; Load AB7 into I
  $A74: LD I, $14F ; Load 14F into I
  $AB4: LD I, $2A7 ; Load 2A7 into I
  $AE0: LD I, $890 ; Load 890 into I
  $AEA: LD I, $EB9 ; Load EB9 into I
  $B12: LD I, $800 ; Load 800 into I
  $B3C: LD I, $05F ; Load 05F into I
  $B40: LD I, $C11 ; Load C11 into I
  $B52: LD I, $6C5 ; Load 6C5 into I
  $B6E: LD I, $F1E ; Load F1E into I
  $B86: LD I, $10A ; Load 10A into I
  $B98: LD I, $F5C ; Load F5C into I
  $BCE: LD I, $316 ; Load 316 into I
  $BD4: LD I, $47C ; Load 47C into I
  $BD8: LD I, $AE2 ; Load AE2 into I
  $C3A: LD I, $6FB ; Load 6FB into I
  $C6C: LD I, $735 ; Load 735 into I
  $C84: LD I, $85F ; Load 85F into I
  $C90: LD I, $573 ; Load 573 into I
  $C94: LD I, $375 ; Load 375 into I
  $D04: LD I, $E80 ; Load E80 into I
  $D16: LD I, $A07 ; Load A07 into I
  $D22: LD I, $940 ; Load 940 into I
  $D24: LD I, $200 ; Load 200 into I
  $D46: LD I, $D3A ; Load D3A into I
  $D54: LD I, $82F ; Load 82F into I
  $D5E: LD I, $2E7 ; Load 2E7 into I
  $D90: LD I, $126 ; Load 126 into I
  $D9C: LD I, $630 ; Load 630 into I
  $DA0: LD I, $A58 ; Load A58 into I
  $DA8: LD I, $2F7 ; Load 2F7 into I
  $DB4: LD I, $ADC ; Load ADC into I
  $DC6: LD I, $9DF ; Load 9DF into I
  $DCE: LD I, $C61 ; Load C61 into I
  $DE2: LD I, $E5A ; Load E5A into I
  $DE8: LD I, $CF6 ; Load CF6 into I
  $DEA: LD I, $FD5 ; Load FD5 into I
  $DEE: LD I, $5A3 ; Load 5A3 into I
  $E38: LD I, $E59 ; Load E59 into I
  $E42: LD I, $F14 ; Load F14 into I
  $E60: LD I, $B8A ; Load B8A into I
  $E66: LD I, $B5C ; Load B5C into I
  $E78: LD I, $371 ; Load 371 into I
  $EC4: LD I, $62B ; Load 62B into I
  $F4E: LD I, $524 ; Load 524 into I
  $F8C: LD I, $736 ; Load 736 into I

CONTROL FLOW ANALYSIS:
Jumps: 218
Calls: 112
Branches: 257
Loops: 118
Loop Structures:
  $22E -> $108 (backward jump)
  $338 -> $0BF (backward jump)
  $3DA -> $1FC (backward jump)
  $3F4 -> $259 (backward jump)
  $498 -> $08F (backward jump)
  $49A -> $1DE (backward jump)
  $518 -> $27C (backward jump)
  $528 -> $4E7 (backward jump)
  $564 -> $307 (backward jump)
  $59A -> $2D8 (backward jump)
  $606 -> $338 (backward jump)
  $64E -> $2BB (backward jump)
  $698 -> $1EC (backward jump)
  $6B0 -> $47E (backward jump)
  $6DE -> $5B1 (backward jump)
  $830 -> $80A (backward jump)
  $836 -> $2F2 (backward jump)
  $872 -> $80F (backward jump)
  $8AC -> $650 (backward jump)
  $8D4 -> $055 (backward jump)
  $8D8 -> $6A3 (backward jump)
  $8E0 -> $0A7 (backward jump)
  $8F2 -> $1EE (backward jump)
  $956 -> $16C (backward jump)
  $96E -> $0FC (backward jump)
  $972 -> $2F4 (backward jump)
  $97A -> $478 (backward jump)
  $97C -> $5B3 (backward jump)
  $98A -> $8FD (backward jump)
  $99E -> $1BA (backward jump)
  $9B4 -> $352 (backward jump)
  $9B6 -> $6AC (backward jump)
  $9C2 -> $868 (backward jump)
  $9E0 -> $100 (backward jump)
  $9E6 -> $62D (backward jump)
  $9F2 -> $32D (backward jump)
  $A2E -> $5B5 (backward jump)
  $A32 -> $336 (backward jump)
  $A5C -> $770 (backward jump)
  $A78 -> $915 (backward jump)
  $A80 -> $3A0 (backward jump)
  $A88 -> $941 (backward jump)
  $AD4 -> $731 (backward jump)
  $AD6 -> $6E1 (backward jump)
  $AD8 -> $4BF (backward jump)
  $AE4 -> $487 (backward jump)
  $AE6 -> $9C4 (backward jump)
  $B00 -> $06D (backward jump)
  $B6A -> $856 (backward jump)
  $B90 -> $9B0 (backward jump)
  $BB6 -> $A67 (backward jump)
  $BC6 -> $085 (backward jump)
  $BE0 -> $A3E (backward jump)
  $C08 -> $02E (backward jump)
  $C30 -> $B5A (backward jump)
  $C46 -> $568 (backward jump)
  $C88 -> $3A2 (backward jump)
  $C8A -> $0B2 (backward jump)
  $CA4 -> $778 (backward jump)
  $CA8 -> $5FC (backward jump)
  $CAE -> $6A9 (backward jump)
  $CDC -> $7D2 (backward jump)
  $CE4 -> $553 (backward jump)
  $CF6 -> $C4A (backward jump)
  $CFA -> $2DF (backward jump)
  $D20 -> $444 (backward jump)
  $D2A -> $6D7 (backward jump)
  $D5A -> $129 (backward jump)
  $D6C -> $7D2 (backward jump)
  $DB0 -> $D6D (backward jump)
  $DBE -> $5C9 (backward jump)
  $DC2 -> $D17 (backward jump)
  $DC4 -> $0CF (backward jump)
  $DC8 -> $31C (backward jump)
  $DCA -> $C23 (backward jump)
  $DD4 -> $C42 (backward jump)
  $E12 -> $C85 (backward jump)
  $E14 -> $453 (backward jump)
  $E1C -> $3BB (backward jump)
  $E22 -> $845 (backward jump)
  $E28 -> $B3F (backward jump)
  $E2E -> $6DF (backward jump)
  $E34 -> $A3C (backward jump)
  $E3C -> $77A (backward jump)
  $E3E -> $0F2 (backward jump)
  $E4C -> $4F6 (backward jump)
  $E52 -> $48B (backward jump)
  $E56 -> $645 (backward jump)
  $E5A -> $7BC (backward jump)
  $E6A -> $4DC (backward jump)
  $EB2 -> $802 (backward jump)
  $ECA -> $219 (backward jump)
  $EDE -> $E01 (backward jump)
  $EE0 -> $7D9 (backward jump)
  $EE2 -> $8C2 (backward jump)
  $EF4 -> $465 (backward jump)
  $EFA -> $C73 (backward jump)
  $EFC -> $779 (backward jump)
  $EFE -> $1BB (backward jump)
  $F0C -> $008 (backward jump)
  $F22 -> $BE0 (backward jump)
  $F3A -> $B00 (backward jump)
  $F3C -> $77F (backward jump)
  $F46 -> $AB5 (backward jump)
  $F48 -> $A9F (backward jump)
  $F62 -> $4E7 (backward jump)
  $F70 -> $57B (backward jump)
  $F76 -> $BDF (backward jump)
  $F7E -> $9B4 (backward jump)
  $FA4 -> $BF3 (backward jump)
  $FC0 -> $32B (backward jump)
  $FDA -> $1A4 (backward jump)
  $FDC -> $936 (backward jump)
  $FE2 -> $779 (backward jump)
  $FEA -> $46B (backward jump)
  $FEC -> $940 (backward jump)
  $FF0 -> $49D (backward jump)
  $FFA -> $680 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $7FA6   ADD      VF, #A6         ; Add 166 to VF
$202    $D983   DRW      V9, V8, #3      ; Draw 3-byte sprite at V9, V8
$204    $F327   UNKNOWN  F327            ; Unknown Fxxx instruction
$206    $FF00   UNKNOWN  FF00            ; Unknown Fxxx instruction
$208    $40F4   SNE      V0, #F4         ; Skip if V0 != 244
$20A    $E1A7   UNKNOWN  $E1A7           ; Unknown Exxx instruction
$20C    $1000   JP       $000            ; Jump to 000
$20E    $2C19   CALL     $C19            ; Call subroutine at C19
$210    $9911   UNKNOWN  $9911           ; Unknown 9xxx instruction
$212    $8957   SUBN     V9, V5          ; V9 = V5 - V9, VF = !borrow
$214    $2A7F   CALL     $A7F            ; Call subroutine at A7F
$216    $BD33   JP       V0, $D33        ; Jump to V0 + D33
$218    $4F10   SNE      VF, #10         ; Skip if VF != 16
$21A    $FC8B   UNKNOWN  FC8B            ; Unknown Fxxx instruction
$21C    $1CA4   JP       $CA4            ; Jump to CA4
$21E    $DB8B   DRW      VB, V8, #B      ; Draw 11-byte sprite at VB, V8
$220    $6DFA   LD       VD, #FA         ; Load 250 into VD
$222    $32A0   SE       V2, #A0         ; Skip if V2 == 160
$224    $3C63   SE       VC, #63         ; Skip if VC == 99
$226    $752B   ADD      V5, #2B         ; Add 43 to V5
$228    $8609   UNKNOWN  8609            ; Unknown 8xxx instruction
$22A    $96B8   UNKNOWN  $96B8           ; Unknown 9xxx instruction
$22C    $40C7   SNE      V0, #C7         ; Skip if V0 != 199
$22E    $1108   JP       $108            ; Jump to 108
$230    $E3D9   UNKNOWN  $E3D9           ; Unknown Exxx instruction
$232    $7467   ADD      V4, #67         ; Add 103 to V4
$234    $EFBF   UNKNOWN  $EFBF           ; Unknown Exxx instruction
$236    $FDD2   UNKNOWN  FDD2            ; Unknown Fxxx instruction
$238    $57C8   UNKNOWN  $57C8           ; Unknown 5xxx instruction
$23A    $0089   SYS      $089            ; System call to 089
$23C    $1419   JP       $419            ; Jump to 419
$23E    $EDBE   UNKNOWN  $EDBE           ; Unknown Exxx instruction
$240    $2EF6   CALL     $EF6            ; Call subroutine at EF6
$242    $4380   SNE      V3, #80         ; Skip if V3 != 128
$244    $584A   UNKNOWN  $584A           ; Unknown 5xxx instruction
$246    $BCA3   JP       V0, $CA3        ; Jump to V0 + CA3
$248    $EB44   UNKNOWN  $EB44           ; Unknown Exxx instruction
$24A    $60C9   LD       V0, #C9         ; Load 201 into V0
$24C    $B4DD   JP       V0, $4DD        ; Jump to V0 + 4DD
$24E    $880A   UNKNOWN  880A            ; Unknown 8xxx instruction
$250    $2A13   CALL     $A13            ; Call subroutine at A13
$252    $661C   LD       V6, #1C         ; Load 28 into V6
$254    $F762   UNKNOWN  F762            ; Unknown Fxxx instruction
$256    $85F6   SHR      V5              ; V5 >>= 1, VF = LSB
$258    $234A   CALL     $34A            ; Call subroutine at 34A
$25A    $5C85   UNKNOWN  $5C85           ; Unknown 5xxx instruction
$25C    $F7D6   UNKNOWN  F7D6            ; Unknown Fxxx instruction
$25E    $4A90   SNE      VA, #90         ; Skip if VA != 144
$260    $8F40   LD       VF, V4          ; VF = V4
$262    $A07E   LD       I, $07E         ; Load 07E into I
$264    $B906   JP       V0, $906        ; Jump to V0 + 906
$266    $4ABF   SNE      VA, #BF         ; Skip if VA != 191
$268    $E6EB   UNKNOWN  $E6EB           ; Unknown Exxx instruction
$26A    $6E23   LD       VE, #23         ; Load 35 into VE
$26C    $ED9A   UNKNOWN  $ED9A           ; Unknown Exxx instruction
$26E    $C016   RND      V0, #16         ; V0 = random & 16
$270    $15AC   JP       $5AC            ; Jump to 5AC
$272    $8AE8   UNKNOWN  8AE8            ; Unknown 8xxx instruction
$274    $6510   LD       V5, #10         ; Load 16 into V5
$276    $75EA   ADD      V5, #EA         ; Add 234 to V5
$278    $7881   ADD      V8, #81         ; Add 129 to V8
$27A    $6011   LD       V0, #11         ; Load 17 into V0
$27C    $1D8B   JP       $D8B            ; Jump to D8B
$27E    $3119   SE       V1, #19         ; Skip if V1 == 25
$280    $D82A   DRW      V8, V2, #A      ; Draw 10-byte sprite at V8, V2
$282    $685C   LD       V8, #5C         ; Load 92 into V8
$284    $F86A   UNKNOWN  F86A            ; Unknown Fxxx instruction
$286    $5381   UNKNOWN  $5381           ; Unknown 5xxx instruction
$288    $2B04   CALL     $B04            ; Call subroutine at B04
$28A    $1FF6   JP       $FF6            ; Jump to FF6
$28C    $7357   ADD      V3, #57         ; Add 87 to V3
$28E    $7FA9   ADD      VF, #A9         ; Add 169 to VF
$290    $60C2   LD       V0, #C2         ; Load 194 into V0
$292    $C8EE   RND      V8, #EE         ; V8 = random & EE
$294    $924C   UNKNOWN  $924C           ; Unknown 9xxx instruction
$296    $04AC   SYS      $4AC            ; System call to 4AC
$298    $4D85   SNE      VD, #85         ; Skip if VD != 133
$29A    $CC2B   RND      VC, #2B         ; VC = random & 2B
$29C    $D196   DRW      V1, V9, #6      ; Draw 6-byte sprite at V1, V9
$29E    $DD4F   DRW      VD, V4, #F      ; Draw 15-byte sprite at VD, V4
$2A0    $572A   UNKNOWN  $572A           ; Unknown 5xxx instruction
$2A2    $EABC   UNKNOWN  $EABC           ; Unknown Exxx instruction
$2A4    $3843   SE       V8, #43         ; Skip if V8 == 67
$2A6    $C5C0   RND      V5, #C0         ; V5 = random & C0
$2A8    $14A4   JP       $4A4            ; Jump to 4A4
$2AA    $0168   SYS      $168            ; System call to 168
$2AC    $E7E5   UNKNOWN  $E7E5           ; Unknown Exxx instruction
$2AE    $BB20   JP       V0, $B20        ; Jump to V0 + B20
$2B0    $17FA   JP       $7FA            ; Jump to 7FA
$2B2    $4508   SNE      V5, #08         ; Skip if V5 != 8
$2B4    $872F   UNKNOWN  872F            ; Unknown 8xxx instruction
$2B6    $0471   SYS      $471            ; System call to 471
$2B8    $67AC   LD       V7, #AC         ; Load 172 into V7
$2BA    $1535   JP       $535            ; Jump to 535
$2BC    $E356   UNKNOWN  $E356           ; Unknown Exxx instruction
$2BE    $F9A4   UNKNOWN  F9A4            ; Unknown Fxxx instruction
$2C0    $5E64   UNKNOWN  $5E64           ; Unknown 5xxx instruction
$2C2    $6964   LD       V9, #64         ; Load 100 into V9
$2C4    $B377   JP       V0, $377        ; Jump to V0 + 377
$2C6    $014B   SYS      $14B            ; System call to 14B
$2C8    $1371   JP       $371            ; Jump to 371
$2CA    $9682   UNKNOWN  $9682           ; Unknown 9xxx instruction
$2CC    $615B   LD       V1, #5B         ; Load 91 into V1
$2CE    $EB5A   UNKNOWN  $EB5A           ; Unknown Exxx instruction
$2D0    $2E36   CALL     $E36            ; Call subroutine at E36
$2D2    $8C46   SHR      VC              ; VC >>= 1, VF = LSB
$2D4    $5338   UNKNOWN  $5338           ; Unknown 5xxx instruction
$2D6    $8457   SUBN     V4, V5          ; V4 = V5 - V4, VF = !borrow
$2D8    $DDE7   DRW      VD, VE, #7      ; Draw 7-byte sprite at VD, VE
$2DA    $3674   SE       V6, #74         ; Skip if V6 == 116
$2DC    $B8BD   JP       V0, $8BD        ; Jump to V0 + 8BD
$2DE    $FDAF   UNKNOWN  FDAF            ; Unknown Fxxx instruction
$2E0    $9528   UNKNOWN  $9528           ; Unknown 9xxx instruction
$2E2    $A3A9   LD       I, $3A9         ; Load 3A9 into I
$2E4    $A825   LD       I, $825         ; Load 825 into I
$2E6    $994B   UNKNOWN  $994B           ; Unknown 9xxx instruction
$2E8    $3080   SE       V0, #80         ; Skip if V0 == 128
$2EA    $FD08   UNKNOWN  FD08            ; Unknown Fxxx instruction
$2EC    $BF19   JP       V0, $F19        ; Jump to V0 + F19
$2EE    $24FF   CALL     $4FF            ; Call subroutine at 4FF
$2F0    $69A4   LD       V9, #A4         ; Load 164 into V9
$2F2    $5EE5   UNKNOWN  $5EE5           ; Unknown 5xxx instruction
$2F4    $AE43   LD       I, $E43         ; Load E43 into I
$2F6    $CA3F   RND      VA, #3F         ; VA = random & 3F
$2F8    $5D7A   UNKNOWN  $5D7A           ; Unknown 5xxx instruction
$2FA    $32F7   SE       V2, #F7         ; Skip if V2 == 247
$2FC    $E167   UNKNOWN  $E167           ; Unknown Exxx instruction
$2FE    $767F   ADD      V6, #7F         ; Add 127 to V6
$300    $ED4D   UNKNOWN  $ED4D           ; Unknown Exxx instruction
$302    $3636   SE       V6, #36         ; Skip if V6 == 54
$304    $3636   SE       V6, #36         ; Skip if V6 == 54
$306    $3636   SE       V6, #36         ; Skip if V6 == 54
$308    $3636   SE       V6, #36         ; Skip if V6 == 54
$30A    $3636   SE       V6, #36         ; Skip if V6 == 54
$30C    $3636   SE       V6, #36         ; Skip if V6 == 54
$30E    $3636   SE       V6, #36         ; Skip if V6 == 54
$310    $3636   SE       V6, #36         ; Skip if V6 == 54
$312    $3636   SE       V6, #36         ; Skip if V6 == 54
$314    $3636   SE       V6, #36         ; Skip if V6 == 54
$316    $3636   SE       V6, #36         ; Skip if V6 == 54
$318    $3636   SE       V6, #36         ; Skip if V6 == 54
$31A    $3636   SE       V6, #36         ; Skip if V6 == 54
$31C    $363A   SE       V6, #3A         ; Skip if V6 == 58
$31E    $4116   SNE      V1, #16         ; Skip if V1 != 22
$320    $000C   SYS      $00C            ; System call to 00C
$322    $F433   LD       B, V4           ; Store BCD of V4 at I, I+1, I+2
$324    $0D9A   SYS      $D9A            ; System call to D9A
$326    $CABB   RND      VA, #BB         ; VA = random & BB
$328    $1413   JP       $413            ; Jump to 413
$32A    $39A1   SE       V9, #A1         ; Skip if V9 == 161
$32C    $5B98   UNKNOWN  $5B98           ; Unknown 5xxx instruction
$32E    $BEFF   JP       V0, $EFF        ; Jump to V0 + EFF
$330    $CB7B   RND      VB, #7B         ; VB = random & 7B
$332    $A0DD   LD       I, $0DD         ; Load 0DD into I
$334    $157B   JP       $57B            ; Jump to 57B
$336    $2108   CALL     $108            ; Call subroutine at 108
$338    $B0BF   JP       V0, $0BF        ; Jump to V0 + 0BF
$33A    $A751   LD       I, $751         ; Load 751 into I
$33C    $3011   SE       V0, #11         ; Skip if V0 == 17
$33E    $AA90   LD       I, $A90         ; Load A90 into I
$340    $86BC   UNKNOWN  86BC            ; Unknown 8xxx instruction
$342    $FEC8   UNKNOWN  FEC8            ; Unknown Fxxx instruction
$344    $2F0F   CALL     $F0F            ; Call subroutine at F0F
$346    $6BF0   LD       VB, #F0         ; Load 240 into VB
$348    $64DE   LD       V4, #DE         ; Load 222 into V4
$34A    $2CC6   CALL     $CC6            ; Call subroutine at CC6
$34C    $3FD3   SE       VF, #D3         ; Skip if VF == 211
$34E    $C802   RND      V8, #02         ; V8 = random & 02
$350    $0A74   SYS      $A74            ; System call to A74
$352    $64C8   LD       V4, #C8         ; Load 200 into V4
$354    $A022   LD       I, $022         ; Load 022 into I
$356    $DFD4   DRW      VF, VD, #4      ; Draw 4-byte sprite at VF, VD
$358    $BE0E   JP       V0, $E0E        ; Jump to V0 + E0E
$35A    $18F0   JP       $8F0            ; Jump to 8F0
$35C    $555F   UNKNOWN  $555F           ; Unknown 5xxx instruction
$35E    $D97E   DRW      V9, V7, #E      ; Draw 14-byte sprite at V9, V7
$360    $5F6E   UNKNOWN  $5F6E           ; Unknown 5xxx instruction
$362    $E435   UNKNOWN  $E435           ; Unknown Exxx instruction
$364    $3BEC   SE       VB, #EC         ; Skip if VB == 236
$366    $2784   CALL     $784            ; Call subroutine at 784
$368    $977E   UNKNOWN  $977E           ; Unknown 9xxx instruction
$36A    $775F   ADD      V7, #5F         ; Add 95 to V7
$36C    $EE6D   UNKNOWN  $EE6D           ; Unknown Exxx instruction
$36E    $8526   SHR      V5              ; V5 >>= 1, VF = LSB
$370    $0CEE   SYS      $CEE            ; System call to CEE
$372    $0BDF   SYS      $BDF            ; System call to BDF
$374    $EFF1   UNKNOWN  $EFF1           ; Unknown Exxx instruction
$376    $3ED0   SE       VE, #D0         ; Skip if VE == 208
$378    $B8C9   JP       V0, $8C9        ; Jump to V0 + 8C9
$37A    $E146   UNKNOWN  $E146           ; Unknown Exxx instruction
$37C    $4883   SNE      V8, #83         ; Skip if V8 != 131
$37E    $F3B2   UNKNOWN  F3B2            ; Unknown Fxxx instruction
$380    $7DAD   ADD      VD, #AD         ; Add 173 to VD
$382    $4835   SNE      V8, #35         ; Skip if V8 != 53
$384    $2D53   CALL     $D53            ; Call subroutine at D53
$386    $98E8   UNKNOWN  $98E8           ; Unknown 9xxx instruction
$388    $C731   RND      V7, #31         ; V7 = random & 31
$38A    $5FF0   SE       VF, VF          ; Skip if VF == VF
$38C    $42FC   SNE      V2, #FC         ; Skip if V2 != 252
$38E    $93E0   SNE      V3, VE          ; Skip if V3 != VE
$390    $CC2E   RND      VC, #2E         ; VC = random & 2E
$392    $85C5   SUB      V5, VC          ; V5 -= VC, VF = !borrow
$394    $7CB2   ADD      VC, #B2         ; Add 178 to VC
$396    $34CF   SE       V4, #CF         ; Skip if V4 == 207
$398    $A339   LD       I, $339         ; Load 339 into I
$39A    $9BC3   UNKNOWN  $9BC3           ; Unknown 9xxx instruction
$39C    $E332   UNKNOWN  $E332           ; Unknown Exxx instruction
$39E    $7230   ADD      V2, #30         ; Add 48 to V2
$3A0    $D9E0   DRW      V9, VE, #0      ; Draw 0-byte sprite at V9, VE
$3A2    $EBBF   UNKNOWN  $EBBF           ; Unknown Exxx instruction
$3A4    $B72B   JP       V0, $72B        ; Jump to V0 + 72B
$3A6    $E9A4   UNKNOWN  $E9A4           ; Unknown Exxx instruction
$3A8    $CC67   RND      VC, #67         ; VC = random & 67
$3AA    $0A68   SYS      $A68            ; System call to A68
$3AC    $730B   ADD      V3, #0B         ; Add 11 to V3
$3AE    $F7D1   UNKNOWN  F7D1            ; Unknown Fxxx instruction
$3B0    $7CD1   ADD      VC, #D1         ; Add 209 to VC
$3B2    $153F   JP       $53F            ; Jump to 53F
$3B4    $1FF2   JP       $FF2            ; Jump to FF2
$3B6    $E144   UNKNOWN  $E144           ; Unknown Exxx instruction
$3B8    $1D76   JP       $D76            ; Jump to D76
$3BA    $5507   UNKNOWN  $5507           ; Unknown 5xxx instruction
$3BC    $CC9C   RND      VC, #9C         ; VC = random & 9C
$3BE    $57B7   UNKNOWN  $57B7           ; Unknown 5xxx instruction
$3C0    $7D41   ADD      VD, #41         ; Add 65 to VD
$3C2    $9061   UNKNOWN  $9061           ; Unknown 9xxx instruction
$3C4    $E132   UNKNOWN  $E132           ; Unknown Exxx instruction
$3C6    $D0E1   DRW      V0, VE, #1      ; Draw 1-byte sprite at V0, VE
$3C8    $D907   DRW      V9, V0, #7      ; Draw 7-byte sprite at V9, V0
$3CA    $F67D   UNKNOWN  F67D            ; Unknown Fxxx instruction
$3CC    $6070   LD       V0, #70         ; Load 112 into V0
$3CE    $81EE   SHL      V1              ; V1 <<= 1, VF = MSB
$3D0    $E873   UNKNOWN  $E873           ; Unknown Exxx instruction
$3D2    $E0C1   UNKNOWN  $E0C1           ; Unknown Exxx instruction
$3D4    $5F40   SE       VF, V4          ; Skip if VF == V4
$3D6    $9919   UNKNOWN  $9919           ; Unknown 9xxx instruction
$3D8    $A5E8   LD       I, $5E8         ; Load 5E8 into I
$3DA    $11FC   JP       $1FC            ; Jump to 1FC
$3DC    $91B2   UNKNOWN  $91B2           ; Unknown 9xxx instruction
$3DE    $4046   SNE      V0, #46         ; Skip if V0 != 70
$3E0    $5021   UNKNOWN  $5021           ; Unknown 5xxx instruction
$3E2    $D612   DRW      V6, V1, #2      ; Draw 2-byte sprite at V6, V1
$3E4    $9021   UNKNOWN  $9021           ; Unknown 9xxx instruction
$3E6    $5CD7   UNKNOWN  $5CD7           ; Unknown 5xxx instruction
$3E8    $3B2C   SE       VB, #2C         ; Skip if VB == 44
$3EA    $2FCF   CALL     $FCF            ; Call subroutine at FCF
$3EC    $773C   ADD      V7, #3C         ; Add 60 to V7
$3EE    $FF14   UNKNOWN  FF14            ; Unknown Fxxx instruction
$3F0    $FE32   UNKNOWN  FE32            ; Unknown Fxxx instruction
$3F2    $8B73   XOR      VB, V7          ; VB ^= V7
$3F4    $1259   JP       $259            ; Jump to 259
$3F6    $8222   AND      V2, V2          ; V2 &= V2
$3F8    $E1C9   UNKNOWN  $E1C9           ; Unknown Exxx instruction
$3FA    $A39D   LD       I, $39D         ; Load 39D into I
$3FC    $319E   SE       V1, #9E         ; Skip if V1 == 158
$3FE    $AC29   LD       I, $C29         ; Load C29 into I
$400    $718D   ADD      V1, #8D         ; Add 141 to V1
$402    $013F   SYS      $13F            ; System call to 13F
$404    $F384   UNKNOWN  F384            ; Unknown Fxxx instruction
$406    $9DAE   UNKNOWN  $9DAE           ; Unknown 9xxx instruction
$408    $F4AD   UNKNOWN  F4AD            ; Unknown Fxxx instruction
$40A    $D338   DRW      V3, V3, #8      ; Draw 8-byte sprite at V3, V3
$40C    $842F   UNKNOWN  842F            ; Unknown 8xxx instruction
$40E    $697F   LD       V9, #7F         ; Load 127 into V9
$410    $A42F   LD       I, $42F         ; Load 42F into I
$412    $1F02   JP       $F02            ; Jump to F02
$414    $1C06   JP       $C06            ; Jump to C06
$416    $1BF7   JP       $BF7            ; Jump to BF7
$418    $719A   ADD      V1, #9A         ; Add 154 to V1
$41A    $BBE9   JP       V0, $BE9        ; Jump to V0 + BE9
$41C    $9B28   UNKNOWN  $9B28           ; Unknown 9xxx instruction
$41E    $6F77   LD       VF, #77         ; Load 119 into VF
$420    $63E3   LD       V3, #E3         ; Load 227 into V3
$422    $9BC8   UNKNOWN  $9BC8           ; Unknown 9xxx instruction
$424    $579F   UNKNOWN  $579F           ; Unknown 5xxx instruction
$426    $453F   SNE      V5, #3F         ; Skip if V5 != 63
$428    $DDDB   DRW      VD, VD, #B      ; Draw 11-byte sprite at VD, VD
$42A    $B7C9   JP       V0, $7C9        ; Jump to V0 + 7C9
$42C    $A879   LD       I, $879         ; Load 879 into I
$42E    $FE5C   UNKNOWN  FE5C            ; Unknown Fxxx instruction
$430    $2543   CALL     $543            ; Call subroutine at 543
$432    $2BDC   CALL     $BDC            ; Call subroutine at BDC
$434    $785A   ADD      V8, #5A         ; Add 90 to V8
$436    $1E66   JP       $E66            ; Jump to E66
$438    $553D   UNKNOWN  $553D           ; Unknown 5xxx instruction
$43A    $A987   LD       I, $987         ; Load 987 into I
$43C    $41F7   SNE      V1, #F7         ; Skip if V1 != 247
$43E    $1450   JP       $450            ; Jump to 450
$440    $163D   JP       $63D            ; Jump to 63D
$442    $29BA   CALL     $9BA            ; Call subroutine at 9BA
$444    $2219   CALL     $219            ; Call subroutine at 219
$446    $67FB   LD       V7, #FB         ; Load 251 into V7
$448    $610B   LD       V1, #0B         ; Load 11 into V1
$44A    $BDE5   JP       V0, $DE5        ; Jump to V0 + DE5
$44C    $505A   UNKNOWN  $505A           ; Unknown 5xxx instruction
$44E    $3BB8   SE       VB, #B8         ; Skip if VB == 184
$450    $D341   DRW      V3, V4, #1      ; Draw 1-byte sprite at V3, V4
$452    $3F81   SE       VF, #81         ; Skip if VF == 129
$454    $E560   UNKNOWN  $E560           ; Unknown Exxx instruction
$456    $BE3F   JP       V0, $E3F        ; Jump to V0 + E3F
$458    $D31E   DRW      V3, V1, #E      ; Draw 14-byte sprite at V3, V1
$45A    $EBF4   UNKNOWN  $EBF4           ; Unknown Exxx instruction
$45C    $BD57   JP       V0, $D57        ; Jump to V0 + D57
$45E    $E3D8   UNKNOWN  $E3D8           ; Unknown Exxx instruction
$460    $7D95   ADD      VD, #95         ; Add 149 to VD
$462    $0E5C   SYS      $E5C            ; System call to E5C
$464    $F3B2   UNKNOWN  F3B2            ; Unknown Fxxx instruction
$466    $97D6   UNKNOWN  $97D6           ; Unknown 9xxx instruction
$468    $1C85   JP       $C85            ; Jump to C85
$46A    $3D0A   SE       VD, #0A         ; Skip if VD == 10
$46C    $C954   RND      V9, #54         ; V9 = random & 54
$46E    $046C   SYS      $46C            ; System call to 46C
$470    $2B62   CALL     $B62            ; Call subroutine at B62
$472    $A11D   LD       I, $11D         ; Load 11D into I
$474    $E2AC   UNKNOWN  $E2AC           ; Unknown Exxx instruction
$476    $0A96   SYS      $A96            ; System call to A96
$478    $205E   CALL     $05E            ; Call subroutine at 05E
$47A    $9BCF   UNKNOWN  $9BCF           ; Unknown 9xxx instruction
$47C    $D251   DRW      V2, V5, #1      ; Draw 1-byte sprite at V2, V5
$47E    $218C   CALL     $18C            ; Call subroutine at 18C
$480    $750E   ADD      V5, #0E         ; Add 14 to V5
$482    $8852   AND      V8, V5          ; V8 &= V5
$484    $D09B   DRW      V0, V9, #B      ; Draw 11-byte sprite at V0, V9
$486    $317F   SE       V1, #7F         ; Skip if V1 == 127
$488    $36F8   SE       V6, #F8         ; Skip if V6 == 248
$48A    $BBBC   JP       V0, $BBC        ; Jump to V0 + BBC
$48C    $282B   CALL     $82B            ; Call subroutine at 82B
$48E    $4CAD   SNE      VC, #AD         ; Skip if VC != 173
$490    $4EC5   SNE      VE, #C5         ; Skip if VE != 197
$492    $C54A   RND      V5, #4A         ; V5 = random & 4A
$494    $3A53   SE       VA, #53         ; Skip if VA == 83
$496    $30E5   SE       V0, #E5         ; Skip if V0 == 229
$498    $108F   JP       $08F            ; Jump to 08F
$49A    $11DE   JP       $1DE            ; Jump to 1DE
$49C    $8266   SHR      V2              ; V2 >>= 1, VF = LSB
$49E    $F7B2   UNKNOWN  F7B2            ; Unknown Fxxx instruction
$4A0    $450B   SNE      V5, #0B         ; Skip if V5 != 11
$4A2    $46D8   SNE      V6, #D8         ; Skip if V6 != 216
$4A4    $4B5F   SNE      VB, #5F         ; Skip if VB != 95
$4A6    $04F8   SYS      $4F8            ; System call to 4F8
$4A8    $6BED   LD       VB, #ED         ; Load 237 into VB
$4AA    $1874   JP       $874            ; Jump to 874
$4AC    $0F5E   SYS      $F5E            ; System call to F5E
$4AE    $9197   UNKNOWN  $9197           ; Unknown 9xxx instruction
$4B0    $5EFB   UNKNOWN  $5EFB           ; Unknown 5xxx instruction
$4B2    $5C00   SE       VC, V0          ; Skip if VC == V0
$4B4    $1CCC   JP       $CCC            ; Jump to CCC
$4B6    $DC83   DRW      VC, V8, #3      ; Draw 3-byte sprite at VC, V8
$4B8    $BA0C   JP       V0, $A0C        ; Jump to V0 + A0C
$4BA    $7367   ADD      V3, #67         ; Add 103 to V3
$4BC    $526A   UNKNOWN  $526A           ; Unknown 5xxx instruction
$4BE    $A058   LD       I, $058         ; Load 058 into I
$4C0    $511F   UNKNOWN  $511F           ; Unknown 5xxx instruction
$4C2    $56B4   UNKNOWN  $56B4           ; Unknown 5xxx instruction
$4C4    $E1C9   UNKNOWN  $E1C9           ; Unknown Exxx instruction
$4C6    $4336   SNE      V3, #36         ; Skip if V3 != 54
$4C8    $8CDC   UNKNOWN  8CDC            ; Unknown 8xxx instruction
$4CA    $0AB5   SYS      $AB5            ; System call to AB5
$4CC    $DAC7   DRW      VA, VC, #7      ; Draw 7-byte sprite at VA, VC
$4CE    $65D2   LD       V5, #D2         ; Load 210 into V5
$4D0    $6201   LD       V2, #01         ; Load 1 into V2
$4D2    $2C26   CALL     $C26            ; Call subroutine at C26
$4D4    $9618   UNKNOWN  $9618           ; Unknown 9xxx instruction
$4D6    $90A1   UNKNOWN  $90A1           ; Unknown 9xxx instruction
$4D8    $BAEF   JP       V0, $AEF        ; Jump to V0 + AEF
$4DA    $EA79   UNKNOWN  $EA79           ; Unknown Exxx instruction
$4DC    $40AF   SNE      V0, #AF         ; Skip if V0 != 175
$4DE    $05F8   SYS      $5F8            ; System call to 5F8
$4E0    $C0E5   RND      V0, #E5         ; V0 = random & E5
$4E2    $286B   CALL     $86B            ; Call subroutine at 86B
$4E4    $EDB1   UNKNOWN  $EDB1           ; Unknown Exxx instruction
$4E6    $09AF   SYS      $9AF            ; System call to 9AF
$4E8    $26A7   CALL     $6A7            ; Call subroutine at 6A7
$4EA    $5B21   UNKNOWN  $5B21           ; Unknown 5xxx instruction
$4EC    $4F69   SNE      VF, #69         ; Skip if VF != 105
$4EE    $366B   SE       V6, #6B         ; Skip if V6 == 107
$4F0    $3ABC   SE       VA, #BC         ; Skip if VA == 188
$4F2    $59E5   UNKNOWN  $59E5           ; Unknown 5xxx instruction
$4F4    $62DC   LD       V2, #DC         ; Load 220 into V2
$4F6    $3C3D   SE       VC, #3D         ; Skip if VC == 61
$4F8    $0943   SYS      $943            ; System call to 943
$4FA    $F177   UNKNOWN  F177            ; Unknown Fxxx instruction
$4FC    $A302   LD       I, $302         ; Load 302 into I
$4FE    $904F   UNKNOWN  $904F           ; Unknown 9xxx instruction
$500    $9D0C   UNKNOWN  $9D0C           ; Unknown 9xxx instruction
$502    $7554   ADD      V5, #54         ; Add 84 to V5
$504    $CCFA   RND      VC, #FA         ; VC = random & FA
$506    $598C   UNKNOWN  $598C           ; Unknown 5xxx instruction
$508    $52B7   UNKNOWN  $52B7           ; Unknown 5xxx instruction
$50A    $1D0C   JP       $D0C            ; Jump to D0C
$50C    $B557   JP       V0, $557        ; Jump to V0 + 557
$50E    $5DBE   UNKNOWN  $5DBE           ; Unknown 5xxx instruction
$510    $360A   SE       V6, #0A         ; Skip if V6 == 10
$512    $9A62   UNKNOWN  $9A62           ; Unknown 9xxx instruction
$514    $8E87   SUBN     VE, V8          ; VE = V8 - VE, VF = !borrow
$516    $9EE7   UNKNOWN  $9EE7           ; Unknown 9xxx instruction
$518    $127C   JP       $27C            ; Jump to 27C
$51A    $CF13   RND      VF, #13         ; VF = random & 13
$51C    $AFA3   LD       I, $FA3         ; Load FA3 into I
$51E    $ED46   UNKNOWN  $ED46           ; Unknown Exxx instruction
$520    $3695   SE       V6, #95         ; Skip if V6 == 149
$522    $5AD1   UNKNOWN  $5AD1           ; Unknown 5xxx instruction
$524    $5905   UNKNOWN  $5905           ; Unknown 5xxx instruction
$526    $C657   RND      V6, #57         ; V6 = random & 57
$528    $B4E7   JP       V0, $4E7        ; Jump to V0 + 4E7
$52A    $6624   LD       V6, #24         ; Load 36 into V6
$52C    $68C6   LD       V8, #C6         ; Load 198 into V8
$52E    $66AF   LD       V6, #AF         ; Load 175 into V6
$530    $B6CC   JP       V0, $6CC        ; Jump to V0 + 6CC
$532    $AD76   LD       I, $D76         ; Load D76 into I
$534    $39F4   SE       V9, #F4         ; Skip if V9 == 244
$536    $5E50   SE       VE, V5          ; Skip if VE == V5
$538    $3CBE   SE       VC, #BE         ; Skip if VC == 190
$53A    $3937   SE       V9, #37         ; Skip if V9 == 55
$53C    $6E4C   LD       VE, #4C         ; Load 76 into VE
$53E    $F6BA   UNKNOWN  F6BA            ; Unknown Fxxx instruction
$540    $6F95   LD       VF, #95         ; Load 149 into VF
$542    $010B   SYS      $10B            ; System call to 10B
$544    $F5B5   UNKNOWN  F5B5            ; Unknown Fxxx instruction
$546    $B960   JP       V0, $960        ; Jump to V0 + 960
$548    $3308   SE       V3, #08         ; Skip if V3 == 8
$54A    $DD33   DRW      VD, V3, #3      ; Draw 3-byte sprite at VD, V3
$54C    $6EF7   LD       VE, #F7         ; Load 247 into VE
$54E    $93EA   UNKNOWN  $93EA           ; Unknown 9xxx instruction
$550    $8F93   XOR      VF, V9          ; VF ^= V9
$552    $1A78   JP       $A78            ; Jump to A78
$554    $1C38   JP       $C38            ; Jump to C38
$556    $F20D   UNKNOWN  F20D            ; Unknown Fxxx instruction
$558    $5A38   UNKNOWN  $5A38           ; Unknown 5xxx instruction
$55A    $1B6A   JP       $B6A            ; Jump to B6A
$55C    $8B68   UNKNOWN  8B68            ; Unknown 8xxx instruction
$55E    $20E3   CALL     $0E3            ; Call subroutine at 0E3
$560    $D828   DRW      V8, V2, #8      ; Draw 8-byte sprite at V8, V2
$562    $F31C   UNKNOWN  F31C            ; Unknown Fxxx instruction
$564    $1307   JP       $307            ; Jump to 307
$566    $0E3D   SYS      $E3D            ; System call to E3D
$568    $8442   AND      V4, V4          ; V4 &= V4
$56A    $992B   UNKNOWN  $992B           ; Unknown 9xxx instruction
$56C    $1A7E   JP       $A7E            ; Jump to A7E
$56E    $DD1E   DRW      VD, V1, #E      ; Draw 14-byte sprite at VD, V1
$570    $540D   UNKNOWN  $540D           ; Unknown 5xxx instruction
$572    $8E43   XOR      VE, V4          ; VE ^= V4
$574    $30E8   SE       V0, #E8         ; Skip if V0 == 232
$576    $F421   UNKNOWN  F421            ; Unknown Fxxx instruction
$578    $E157   UNKNOWN  $E157           ; Unknown Exxx instruction
$57A    $FD0A   LD       VD, K           ; Wait for key press, store in VD
$57C    $539E   UNKNOWN  $539E           ; Unknown 5xxx instruction
$57E    $4A8E   SNE      VA, #8E         ; Skip if VA != 142
$580    $A8D4   LD       I, $8D4         ; Load 8D4 into I
$582    $4C82   SNE      VC, #82         ; Skip if VC != 130
$584    $619B   LD       V1, #9B         ; Load 155 into V1
$586    $4340   SNE      V3, #40         ; Skip if V3 != 64
$588    $8D09   UNKNOWN  8D09            ; Unknown 8xxx instruction
$58A    $7375   ADD      V3, #75         ; Add 117 to V3
$58C    $E9AC   UNKNOWN  $E9AC           ; Unknown Exxx instruction
$58E    $ED8D   UNKNOWN  $ED8D           ; Unknown Exxx instruction
$590    $0D24   SYS      $D24            ; System call to D24
$592    $A9E3   LD       I, $9E3         ; Load 9E3 into I
$594    $490E   SNE      V9, #0E         ; Skip if V9 != 14
$596    $C0C3   RND      V0, #C3         ; V0 = random & C3
$598    $0779   SYS      $779            ; System call to 779
$59A    $12D8   JP       $2D8            ; Jump to 2D8
$59C    $6564   LD       V5, #64         ; Load 100 into V5
$59E    $B8DB   JP       V0, $8DB        ; Jump to V0 + 8DB
$5A0    $DD49   DRW      VD, V4, #9      ; Draw 9-byte sprite at VD, V4
$5A2    $7BE4   ADD      VB, #E4         ; Add 228 to VB
$5A4    $0F5C   SYS      $F5C            ; System call to F5C
$5A6    $D1F9   DRW      V1, VF, #9      ; Draw 9-byte sprite at V1, VF
$5A8    $7C0C   ADD      VC, #0C         ; Add 12 to VC
$5AA    $A3CD   LD       I, $3CD         ; Load 3CD into I
$5AC    $E6FD   UNKNOWN  $E6FD           ; Unknown Exxx instruction
$5AE    $0535   SYS      $535            ; System call to 535
$5B0    $6FEE   LD       VF, #EE         ; Load 238 into VF
$5B2    $E463   UNKNOWN  $E463           ; Unknown Exxx instruction
$5B4    $07E6   SYS      $7E6            ; System call to 7E6
$5B6    $DDD9   DRW      VD, VD, #9      ; Draw 9-byte sprite at VD, VD
$5B8    $E25B   UNKNOWN  $E25B           ; Unknown Exxx instruction
$5BA    $48E0   SNE      V8, #E0         ; Skip if V8 != 224
$5BC    $9931   UNKNOWN  $9931           ; Unknown 9xxx instruction
$5BE    $882E   SHL      V8              ; V8 <<= 1, VF = MSB
$5C0    $221A   CALL     $21A            ; Call subroutine at 21A
$5C2    $2377   CALL     $377            ; Call subroutine at 377
$5C4    $5B21   UNKNOWN  $5B21           ; Unknown 5xxx instruction
$5C6    $1CCD   JP       $CCD            ; Jump to CCD
$5C8    $C4A4   RND      V4, #A4         ; V4 = random & A4
$5CA    $F794   UNKNOWN  F794            ; Unknown Fxxx instruction
$5CC    $21BD   CALL     $1BD            ; Call subroutine at 1BD
$5CE    $21E5   CALL     $1E5            ; Call subroutine at 1E5
$5D0    $F541   UNKNOWN  F541            ; Unknown Fxxx instruction
$5D2    $5FAD   UNKNOWN  $5FAD           ; Unknown 5xxx instruction
$5D4    $DE8D   DRW      VE, V8, #D      ; Draw 13-byte sprite at VE, V8
$5D6    $32F4   SE       V2, #F4         ; Skip if V2 == 244
$5D8    $DF42   DRW      VF, V4, #2      ; Draw 2-byte sprite at VF, V4
$5DA    $5B4A   UNKNOWN  $5B4A           ; Unknown 5xxx instruction
$5DC    $DA9C   DRW      VA, V9, #C      ; Draw 12-byte sprite at VA, V9
$5DE    $EE6C   UNKNOWN  $EE6C           ; Unknown Exxx instruction
$5E0    $17A7   JP       $7A7            ; Jump to 7A7
$5E2    $7A5C   ADD      VA, #5C         ; Add 92 to VA
$5E4    $784D   ADD      V8, #4D         ; Add 77 to V8
$5E6    $7BA7   ADD      VB, #A7         ; Add 167 to VB
$5E8    $700A   ADD      V0, #0A         ; Add 10 to V0
$5EA    $D11A   DRW      V1, V1, #A      ; Draw 10-byte sprite at V1, V1
$5EC    $1D7D   JP       $D7D            ; Jump to D7D
$5EE    $E8B2   UNKNOWN  $E8B2           ; Unknown Exxx instruction
$5F0    $78C3   ADD      V8, #C3         ; Add 195 to V8
$5F2    $D892   DRW      V8, V9, #2      ; Draw 2-byte sprite at V8, V9
$5F4    $D2EB   DRW      V2, VE, #B      ; Draw 11-byte sprite at V2, VE
$5F6    $4294   SNE      V2, #94         ; Skip if V2 != 148
$5F8    $2F52   CALL     $F52            ; Call subroutine at F52
$5FA    $656E   LD       V5, #6E         ; Load 110 into V5
$5FC    $C4DD   RND      V4, #DD         ; V4 = random & DD
$5FE    $CE45   RND      VE, #45         ; VE = random & 45
$600    $F5ED   UNKNOWN  F5ED            ; Unknown Fxxx instruction
$602    $6CE1   LD       VC, #E1         ; Load 225 into VC
$604    $72D3   ADD      V2, #D3         ; Add 211 to V2
$606    $B338   JP       V0, $338        ; Jump to V0 + 338
$608    $9AF6   UNKNOWN  $9AF6           ; Unknown 9xxx instruction
$60A    $0568   SYS      $568            ; System call to 568
$60C    $EC23   UNKNOWN  $EC23           ; Unknown Exxx instruction
$60E    $F243   UNKNOWN  F243            ; Unknown Fxxx instruction
$610    $E251   UNKNOWN  $E251           ; Unknown Exxx instruction
$612    $71B8   ADD      V1, #B8         ; Add 184 to V1
$614    $902A   UNKNOWN  $902A           ; Unknown 9xxx instruction
$616    $D9AA   DRW      V9, VA, #A      ; Draw 10-byte sprite at V9, VA
$618    $4589   SNE      V5, #89         ; Skip if V5 != 137
$61A    $32A9   SE       V2, #A9         ; Skip if V2 == 169
$61C    $EA01   UNKNOWN  $EA01           ; Unknown Exxx instruction
$61E    $DCEB   DRW      VC, VE, #B      ; Draw 11-byte sprite at VC, VE
$620    $CDF7   RND      VD, #F7         ; VD = random & F7
$622    $914A   UNKNOWN  $914A           ; Unknown 9xxx instruction
$624    $8899   UNKNOWN  8899            ; Unknown 8xxx instruction
$626    $BCC0   JP       V0, $CC0        ; Jump to V0 + CC0
$628    $39D6   SE       V9, #D6         ; Skip if V9 == 214
$62A    $754B   ADD      V5, #4B         ; Add 75 to V5
$62C    $C811   RND      V8, #11         ; V8 = random & 11
$62E    $1BA4   JP       $BA4            ; Jump to BA4
$630    $FB85   UNKNOWN  FB85            ; Unknown Fxxx instruction
$632    $3438   SE       V4, #38         ; Skip if V4 == 56
$634    $7121   ADD      V1, #21         ; Add 33 to V1
$636    $C507   RND      V5, #07         ; V5 = random & 07
$638    $FCE3   UNKNOWN  FCE3            ; Unknown Fxxx instruction
$63A    $ACC3   LD       I, $CC3         ; Load CC3 into I
$63C    $1944   JP       $944            ; Jump to 944
$63E    $1923   JP       $923            ; Jump to 923
$640    $DB21   DRW      VB, V2, #1      ; Draw 1-byte sprite at VB, V2
$642    $A3EC   LD       I, $3EC         ; Load 3EC into I
$644    $C47F   RND      V4, #7F         ; V4 = random & 7F
$646    $C3D7   RND      V3, #D7         ; V3 = random & D7
$648    $67C4   LD       V7, #C4         ; Load 196 into V7
$64A    $710C   ADD      V1, #0C         ; Add 12 to V1
$64C    $7CC7   ADD      VC, #C7         ; Add 199 to VC
$64E    $12BB   JP       $2BB            ; Jump to 2BB
$650    $0675   SYS      $675            ; System call to 675
$652    $D81E   DRW      V8, V1, #E      ; Draw 14-byte sprite at V8, V1
$654    $D8EC   DRW      V8, VE, #C      ; Draw 12-byte sprite at V8, VE
$656    $CFA9   RND      VF, #A9         ; VF = random & A9
$658    $9C34   UNKNOWN  $9C34           ; Unknown 9xxx instruction
$65A    $2322   CALL     $322            ; Call subroutine at 322
$65C    $9A61   UNKNOWN  $9A61           ; Unknown 9xxx instruction
$65E    $1D25   JP       $D25            ; Jump to D25
$660    $032D   SYS      $32D            ; System call to 32D
$662    $CB39   RND      VB, #39         ; VB = random & 39
$664    $2381   CALL     $381            ; Call subroutine at 381
$666    $E5AA   UNKNOWN  $E5AA           ; Unknown Exxx instruction
$668    $5F73   UNKNOWN  $5F73           ; Unknown 5xxx instruction
$66A    $26FA   CALL     $6FA            ; Call subroutine at 6FA
$66C    $69A3   LD       V9, #A3         ; Load 163 into V9
$66E    $F420   UNKNOWN  F420            ; Unknown Fxxx instruction
$670    $B6D8   JP       V0, $6D8        ; Jump to V0 + 6D8
$672    $7D73   ADD      VD, #73         ; Add 115 to VD
$674    $CA81   RND      VA, #81         ; VA = random & 81
$676    $6D6D   LD       VD, #6D         ; Load 109 into VD
$678    $E512   UNKNOWN  $E512           ; Unknown Exxx instruction
$67A    $03A3   SYS      $3A3            ; System call to 3A3
$67C    $011D   SYS      $11D            ; System call to 11D
$67E    $E567   UNKNOWN  $E567           ; Unknown Exxx instruction
$680    $985C   UNKNOWN  $985C           ; Unknown 9xxx instruction
$682    $AE95   LD       I, $E95         ; Load E95 into I
$684    $DC60   DRW      VC, V6, #0      ; Draw 0-byte sprite at VC, V6
$686    $C2A2   RND      V2, #A2         ; V2 = random & A2
$688    $5C3B   UNKNOWN  $5C3B           ; Unknown 5xxx instruction
$68A    $6E92   LD       VE, #92         ; Load 146 into VE
$68C    $6A8E   LD       VA, #8E         ; Load 142 into VA
$68E    $6349   LD       V3, #49         ; Load 73 into V3
$690    $6C2F   LD       VC, #2F         ; Load 47 into VC
$692    $DFE4   DRW      VF, VE, #4      ; Draw 4-byte sprite at VF, VE
$694    $E5CB   UNKNOWN  $E5CB           ; Unknown Exxx instruction
$696    $0532   SYS      $532            ; System call to 532
$698    $11EC   JP       $1EC            ; Jump to 1EC
$69A    $5393   UNKNOWN  $5393           ; Unknown 5xxx instruction
$69C    $9897   UNKNOWN  $9897           ; Unknown 9xxx instruction
$69E    $AA62   LD       I, $A62         ; Load A62 into I
$6A0    $9666   UNKNOWN  $9666           ; Unknown 9xxx instruction
$6A2    $65FA   LD       V5, #FA         ; Load 250 into V5
$6A4    $DF2A   DRW      VF, V2, #A      ; Draw 10-byte sprite at VF, V2
$6A6    $3221   SE       V2, #21         ; Skip if V2 == 33
$6A8    $2078   CALL     $078            ; Call subroutine at 078
$6AA    $83E9   UNKNOWN  83E9            ; Unknown 8xxx instruction
$6AC    $510A   UNKNOWN  $510A           ; Unknown 5xxx instruction
$6AE    $210D   CALL     $10D            ; Call subroutine at 10D
$6B0    $B47E   JP       V0, $47E        ; Jump to V0 + 47E
$6B2    $5DDF   UNKNOWN  $5DDF           ; Unknown 5xxx instruction
$6B4    $4A89   SNE      VA, #89         ; Skip if VA != 137
$6B6    $274D   CALL     $74D            ; Call subroutine at 74D
$6B8    $EBC2   UNKNOWN  $EBC2           ; Unknown Exxx instruction
$6BA    $996C   UNKNOWN  $996C           ; Unknown 9xxx instruction
$6BC    $BC90   JP       V0, $C90        ; Jump to V0 + C90
$6BE    $3F5D   SE       VF, #5D         ; Skip if VF == 93
$6C0    $3D93   SE       VD, #93         ; Skip if VD == 147
$6C2    $3FF3   SE       VF, #F3         ; Skip if VF == 243
$6C4    $6D91   LD       VD, #91         ; Load 145 into VD
$6C6    $CF34   RND      VF, #34         ; VF = random & 34
$6C8    $ED8F   UNKNOWN  $ED8F           ; Unknown Exxx instruction
$6CA    $F543   UNKNOWN  F543            ; Unknown Fxxx instruction
$6CC    $B92A   JP       V0, $92A        ; Jump to V0 + 92A
$6CE    $A465   LD       I, $465         ; Load 465 into I
$6D0    $07F8   SYS      $7F8            ; System call to 7F8
$6D2    $6A94   LD       VA, #94         ; Load 148 into VA
$6D4    $3BEB   SE       VB, #EB         ; Skip if VB == 235
$6D6    $C5AE   RND      V5, #AE         ; V5 = random & AE
$6D8    $86E1   OR       V6, VE          ; V6 |= VE
$6DA    $C3D0   RND      V3, #D0         ; V3 = random & D0
$6DC    $4333   SNE      V3, #33         ; Skip if V3 != 51
$6DE    $15B1   JP       $5B1            ; Jump to 5B1
$6E0    $7CD1   ADD      VC, #D1         ; Add 209 to VC
$6E2    $A0A7   LD       I, $0A7         ; Load 0A7 into I
$6E4    $F03E   UNKNOWN  F03E            ; Unknown Fxxx instruction
$6E6    $5E20   SE       VE, V2          ; Skip if VE == V2
$6E8    $ECF6   UNKNOWN  $ECF6           ; Unknown Exxx instruction
$6EA    $3550   SE       V5, #50         ; Skip if V5 == 80
$6EC    $347D   SE       V4, #7D         ; Skip if V4 == 125
$6EE    $8564   ADD      V5, V6          ; V5 += V6, VF = carry
$6F0    $CA66   RND      VA, #66         ; VA = random & 66
$6F2    $E200   UNKNOWN  $E200           ; Unknown Exxx instruction
$6F4    $F80E   UNKNOWN  F80E            ; Unknown Fxxx instruction
$6F6    $8075   SUB      V0, V7          ; V0 -= V7, VF = !borrow
$6F8    $D0E9   DRW      V0, VE, #9      ; Draw 9-byte sprite at V0, VE
$6FA    $1A97   JP       $A97            ; Jump to A97
$6FC    $377C   SE       V7, #7C         ; Skip if V7 == 124
$6FE    $2413   CALL     $413            ; Call subroutine at 413
$700    $EC57   UNKNOWN  $EC57           ; Unknown Exxx instruction
$702    $8DF0   LD       VD, VF          ; VD = VF
$704    $5D4C   UNKNOWN  $5D4C           ; Unknown 5xxx instruction
$706    $3755   SE       V7, #55         ; Skip if V7 == 85
$708    $5C03   UNKNOWN  $5C03           ; Unknown 5xxx instruction
$70A    $2F99   CALL     $F99            ; Call subroutine at F99
$70C    $43F6   SNE      V3, #F6         ; Skip if V3 != 246
$70E    $3681   SE       V6, #81         ; Skip if V6 == 129
$710    $8351   OR       V3, V5          ; V3 |= V5
$712    $3E38   SE       VE, #38         ; Skip if VE == 56
$714    $8429   UNKNOWN  8429            ; Unknown 8xxx instruction
$716    $ECDD   UNKNOWN  $ECDD           ; Unknown Exxx instruction
$718    $E457   UNKNOWN  $E457           ; Unknown Exxx instruction
$71A    $EA87   UNKNOWN  $EA87           ; Unknown Exxx instruction
$71C    $6275   LD       V2, #75         ; Load 117 into V2
$71E    $E12D   UNKNOWN  $E12D           ; Unknown Exxx instruction
$720    $A440   LD       I, $440         ; Load 440 into I
$722    $21D4   CALL     $1D4            ; Call subroutine at 1D4
$724    $60A5   LD       V0, #A5         ; Load 165 into V0
$726    $94F3   UNKNOWN  $94F3           ; Unknown 9xxx instruction
$728    $BC94   JP       V0, $C94        ; Jump to V0 + C94
$72A    $7248   ADD      V2, #48         ; Add 72 to V2
$72C    $A43D   LD       I, $43D         ; Load 43D into I
$72E    $C769   RND      V7, #69         ; V7 = random & 69
$730    $6548   LD       V5, #48         ; Load 72 into V5
$732    $929A   UNKNOWN  $929A           ; Unknown 9xxx instruction
$734    $18FA   JP       $8FA            ; Jump to 8FA
$736    $53C8   UNKNOWN  $53C8           ; Unknown 5xxx instruction
$738    $03BC   SYS      $3BC            ; System call to 3BC
$73A    $5700   SE       V7, V0          ; Skip if V7 == V0
$73C    $01C9   SYS      $1C9            ; System call to 1C9
$73E    $51E4   UNKNOWN  $51E4           ; Unknown 5xxx instruction
$740    $C21D   RND      V2, #1D         ; V2 = random & 1D
$742    $EE2D   UNKNOWN  $EE2D           ; Unknown Exxx instruction
$744    $E30D   UNKNOWN  $E30D           ; Unknown Exxx instruction
$746    $87E2   AND      V7, VE          ; V7 &= VE
$748    $AC7D   LD       I, $C7D         ; Load C7D into I
$74A    $5826   UNKNOWN  $5826           ; Unknown 5xxx instruction
$74C    $280E   CALL     $80E            ; Call subroutine at 80E
$74E    $C0CB   RND      V0, #CB         ; V0 = random & CB
$750    $8753   XOR      V7, V5          ; V7 ^= V5
$752    $20BE   CALL     $0BE            ; Call subroutine at 0BE
$754    $7ED9   ADD      VE, #D9         ; Add 217 to VE
$756    $9D69   UNKNOWN  $9D69           ; Unknown 9xxx instruction
$758    $7E90   ADD      VE, #90         ; Add 144 to VE
$75A    $56EC   UNKNOWN  $56EC           ; Unknown 5xxx instruction
$75C    $6577   LD       V5, #77         ; Load 119 into V5
$75E    $4BAB   SNE      VB, #AB         ; Skip if VB != 171
$760    $0B2A   SYS      $B2A            ; System call to B2A
$762    $93B6   UNKNOWN  $93B6           ; Unknown 9xxx instruction
$764    $1B7E   JP       $B7E            ; Jump to B7E
$766    $E369   UNKNOWN  $E369           ; Unknown Exxx instruction
$768    $4962   SNE      V9, #62         ; Skip if V9 != 98
$76A    $406D   SNE      V0, #6D         ; Skip if V0 != 109
$76C    $D4E7   DRW      V4, VE, #7      ; Draw 7-byte sprite at V4, VE
$76E    $2148   CALL     $148            ; Call subroutine at 148
$770    $A125   LD       I, $125         ; Load 125 into I
$772    $BAE7   JP       V0, $AE7        ; Jump to V0 + AE7
$774    $57A2   UNKNOWN  $57A2           ; Unknown 5xxx instruction
$776    $6B8F   LD       VB, #8F         ; Load 143 into VB
$778    $CB17   RND      VB, #17         ; VB = random & 17
$77A    $6F00   LD       VF, #00         ; Load 0 into VF
$77C    $59A2   UNKNOWN  $59A2           ; Unknown 5xxx instruction
$77E    $7ABB   ADD      VA, #BB         ; Add 187 to VA
$780    $5F92   UNKNOWN  $5F92           ; Unknown 5xxx instruction
$782    $06AB   SYS      $6AB            ; System call to 6AB
$784    $9890   SNE      V8, V9          ; Skip if V8 != V9
$786    $EEC4   UNKNOWN  $EEC4           ; Unknown Exxx instruction
$788    $645E   LD       V4, #5E         ; Load 94 into V4
$78A    $4006   SNE      V0, #06         ; Skip if V0 != 6
$78C    $4892   SNE      V8, #92         ; Skip if V8 != 146
$78E    $0659   SYS      $659            ; System call to 659
$790    $58BA   UNKNOWN  $58BA           ; Unknown 5xxx instruction
$792    $D408   DRW      V4, V0, #8      ; Draw 8-byte sprite at V4, V0
$794    $60D7   LD       V0, #D7         ; Load 215 into V0
$796    $DF8D   DRW      VF, V8, #D      ; Draw 13-byte sprite at VF, V8
$798    $D91E   DRW      V9, V1, #E      ; Draw 14-byte sprite at V9, V1
$79A    $595A   UNKNOWN  $595A           ; Unknown 5xxx instruction
$79C    $DCEC   DRW      VC, VE, #C      ; Draw 12-byte sprite at VC, VE
$79E    $5AC1   UNKNOWN  $5AC1           ; Unknown 5xxx instruction
$7A0    $BA28   JP       V0, $A28        ; Jump to V0 + A28
$7A2    $8236   SHR      V2              ; V2 >>= 1, VF = LSB
$7A4    $3B26   SE       VB, #26         ; Skip if VB == 38
$7A6    $27EC   CALL     $7EC            ; Call subroutine at 7EC
$7A8    $3B7F   SE       VB, #7F         ; Skip if VB == 127
$7AA    $F9D4   UNKNOWN  F9D4            ; Unknown Fxxx instruction
$7AC    $87A9   UNKNOWN  87A9            ; Unknown 8xxx instruction
$7AE    $CA1F   RND      VA, #1F         ; VA = random & 1F
$7B0    $DE39   DRW      VE, V3, #9      ; Draw 9-byte sprite at VE, V3
$7B2    $DEAA   DRW      VE, VA, #A      ; Draw 10-byte sprite at VE, VA
$7B4    $CBDB   RND      VB, #DB         ; VB = random & DB
$7B6    $9859   UNKNOWN  $9859           ; Unknown 9xxx instruction
$7B8    $D1F6   DRW      V1, VF, #6      ; Draw 6-byte sprite at V1, VF
$7BA    $2DCA   CALL     $DCA            ; Call subroutine at DCA
$7BC    $8947   SUBN     V9, V4          ; V9 = V4 - V9, VF = !borrow
$7BE    $F424   UNKNOWN  F424            ; Unknown Fxxx instruction
$7C0    $A3F4   LD       I, $3F4         ; Load 3F4 into I
$7C2    $0D9B   SYS      $D9B            ; System call to D9B
$7C4    $314D   SE       V1, #4D         ; Skip if V1 == 77
$7C6    $035C   SYS      $35C            ; System call to 35C
$7C8    $4110   SNE      V1, #10         ; Skip if V1 != 16
$7CA    $E030   UNKNOWN  $E030           ; Unknown Exxx instruction
$7CC    $8D94   ADD      VD, V9          ; VD += V9, VF = carry
$7CE    $0C54   SYS      $C54            ; System call to C54
$7D0    $A9CA   LD       I, $9CA         ; Load 9CA into I
$7D2    $B92A   JP       V0, $92A        ; Jump to V0 + 92A
$7D4    $A36D   LD       I, $36D         ; Load 36D into I
$7D6    $C64E   RND      V6, #4E         ; V6 = random & 4E
$7D8    $E3C3   UNKNOWN  $E3C3           ; Unknown Exxx instruction
$7DA    $C6EE   RND      V6, #EE         ; V6 = random & EE
$7DC    $DF58   DRW      VF, V5, #8      ; Draw 8-byte sprite at VF, V5
$7DE    $F1B3   UNKNOWN  F1B3            ; Unknown Fxxx instruction
$7E0    $2EAA   CALL     $EAA            ; Call subroutine at EAA
$7E2    $0CC0   SYS      $CC0            ; System call to CC0
$7E4    $4C1E   SNE      VC, #1E         ; Skip if VC != 30
$7E6    $5487   UNKNOWN  $5487           ; Unknown 5xxx instruction
$7E8    $80EA   UNKNOWN  80EA            ; Unknown 8xxx instruction
$7EA    $2925   CALL     $925            ; Call subroutine at 925
$7EC    $18DD   JP       $8DD            ; Jump to 8DD
$7EE    $F59B   UNKNOWN  F59B            ; Unknown Fxxx instruction
$7F0    $E988   UNKNOWN  $E988           ; Unknown Exxx instruction
$7F2    $97F0   SNE      V7, VF          ; Skip if V7 != VF
$7F4    $430B   SNE      V3, #0B         ; Skip if V3 != 11
$7F6    $2507   CALL     $507            ; Call subroutine at 507
$7F8    $CFD8   RND      VF, #D8         ; VF = random & D8
$7FA    $E131   UNKNOWN  $E131           ; Unknown Exxx instruction
$7FC    $7555   ADD      V5, #55         ; Add 85 to V5
$7FE    $21BE   CALL     $1BE            ; Call subroutine at 1BE
$800    $8369   UNKNOWN  8369            ; Unknown 8xxx instruction
$802    $624C   LD       V2, #4C         ; Load 76 into V2
$804    $5420   SE       V4, V2          ; Skip if V4 == V2
$806    $FEA7   UNKNOWN  FEA7            ; Unknown Fxxx instruction
$808    $0EE9   SYS      $EE9            ; System call to EE9
$80A    $E6FA   UNKNOWN  $E6FA           ; Unknown Exxx instruction
$80C    $1FD1   JP       $FD1            ; Jump to FD1
$80E    $6B1A   LD       VB, #1A         ; Load 26 into VB
$810    $AACC   LD       I, $ACC         ; Load ACC into I
$812    $BE15   JP       V0, $E15        ; Jump to V0 + E15
$814    $708E   ADD      V0, #8E         ; Add 142 to V0
$816    $EBFF   UNKNOWN  $EBFF           ; Unknown Exxx instruction
$818    $49D3   SNE      V9, #D3         ; Skip if V9 != 211
$81A    $0F64   SYS      $F64            ; System call to F64
$81C    $21DA   CALL     $1DA            ; Call subroutine at 1DA
$81E    $5600   SE       V6, V0          ; Skip if V6 == V0
$820    $60FD   LD       V0, #FD         ; Load 253 into V0
$822    $FC56   UNKNOWN  FC56            ; Unknown Fxxx instruction
$824    $042F   SYS      $42F            ; System call to 42F
$826    $4213   SNE      V2, #13         ; Skip if V2 != 19
$828    $D782   DRW      V7, V8, #2      ; Draw 2-byte sprite at V7, V8
$82A    $5EB9   UNKNOWN  $5EB9           ; Unknown 5xxx instruction
$82C    $4ED5   SNE      VE, #D5         ; Skip if VE != 213
$82E    $30CC   SE       V0, #CC         ; Skip if V0 == 204
$830    $B80A   JP       V0, $80A        ; Jump to V0 + 80A
$832    $7378   ADD      V3, #78         ; Add 120 to V3
$834    $E00C   UNKNOWN  $E00C           ; Unknown Exxx instruction
$836    $B2F2   JP       V0, $2F2        ; Jump to V0 + 2F2
$838    $2310   CALL     $310            ; Call subroutine at 310
$83A    $499D   SNE      V9, #9D         ; Skip if V9 != 157
$83C    $D198   DRW      V1, V9, #8      ; Draw 8-byte sprite at V1, V9
$83E    $3CC1   SE       VC, #C1         ; Skip if VC == 193
$840    $18C9   JP       $8C9            ; Jump to 8C9
$842    $4D53   SNE      VD, #53         ; Skip if VD != 83
$844    $08D5   SYS      $8D5            ; System call to 8D5
$846    $5BA5   UNKNOWN  $5BA5           ; Unknown 5xxx instruction
$848    $F303   UNKNOWN  F303            ; Unknown Fxxx instruction
$84A    $5BBC   UNKNOWN  $5BBC           ; Unknown 5xxx instruction
$84C    $073C   SYS      $73C            ; System call to 73C
$84E    $26EB   CALL     $6EB            ; Call subroutine at 6EB
$850    $7372   ADD      V3, #72         ; Add 114 to V3
$852    $EB56   UNKNOWN  $EB56           ; Unknown Exxx instruction
$854    $D5AB   DRW      V5, VA, #B      ; Draw 11-byte sprite at V5, VA
$856    $334C   SE       V3, #4C         ; Skip if V3 == 76
$858    $ACCF   LD       I, $CCF         ; Load CCF into I
$85A    $55A7   UNKNOWN  $55A7           ; Unknown 5xxx instruction
$85C    $5BAB   UNKNOWN  $5BAB           ; Unknown 5xxx instruction
$85E    $F526   UNKNOWN  F526            ; Unknown Fxxx instruction
$860    $DA6B   DRW      VA, V6, #B      ; Draw 11-byte sprite at VA, V6
$862    $2432   CALL     $432            ; Call subroutine at 432
$864    $51F2   UNKNOWN  $51F2           ; Unknown 5xxx instruction
$866    $29C7   CALL     $9C7            ; Call subroutine at 9C7
$868    $2E85   CALL     $E85            ; Call subroutine at E85
$86A    $CF5E   RND      VF, #5E         ; VF = random & 5E
$86C    $5868   UNKNOWN  $5868           ; Unknown 5xxx instruction
$86E    $3822   SE       V8, #22         ; Skip if V8 == 34
$870    $408C   SNE      V0, #8C         ; Skip if V0 != 140
$872    $B80F   JP       V0, $80F        ; Jump to V0 + 80F
$874    $7402   ADD      V4, #02         ; Add 2 to V4
$876    $F52E   UNKNOWN  F52E            ; Unknown Fxxx instruction
$878    $6F36   LD       VF, #36         ; Load 54 into VF
$87A    $BAA4   JP       V0, $AA4        ; Jump to V0 + AA4
$87C    $D7A5   DRW      V7, VA, #5      ; Draw 5-byte sprite at V7, VA
$87E    $F8D4   UNKNOWN  F8D4            ; Unknown Fxxx instruction
$880    $6C59   LD       VC, #59         ; Load 89 into VC
$882    $C255   RND      V2, #55         ; V2 = random & 55
$884    $EC10   UNKNOWN  $EC10           ; Unknown Exxx instruction
$886    $243E   CALL     $43E            ; Call subroutine at 43E
$888    $2941   CALL     $941            ; Call subroutine at 941
$88A    $8478   UNKNOWN  8478            ; Unknown 8xxx instruction
$88C    $8269   UNKNOWN  8269            ; Unknown 8xxx instruction
$88E    $027C   SYS      $27C            ; System call to 27C
$890    $1968   JP       $968            ; Jump to 968
$892    $9B29   UNKNOWN  $9B29           ; Unknown 9xxx instruction
$894    $F7BE   UNKNOWN  F7BE            ; Unknown Fxxx instruction
$896    $D6E6   DRW      V6, VE, #6      ; Draw 6-byte sprite at V6, VE
$898    $1D70   JP       $D70            ; Jump to D70
$89A    $6B16   LD       VB, #16         ; Load 22 into VB
$89C    $4E58   SNE      VE, #58         ; Skip if VE != 88
$89E    $6B0F   LD       VB, #0F         ; Load 15 into VB
$8A0    $5CD8   UNKNOWN  $5CD8           ; Unknown 5xxx instruction
$8A2    $68F3   LD       V8, #F3         ; Load 243 into V8
$8A4    $E557   UNKNOWN  $E557           ; Unknown Exxx instruction
$8A6    $89D6   SHR      V9              ; V9 >>= 1, VF = LSB
$8A8    $4AB7   SNE      VA, #B7         ; Skip if VA != 183
$8AA    $6AD3   LD       VA, #D3         ; Load 211 into VA
$8AC    $1650   JP       $650            ; Jump to 650
$8AE    $E86C   UNKNOWN  $E86C           ; Unknown Exxx instruction
$8B0    $0DBA   SYS      $DBA            ; System call to DBA
$8B2    $C64F   RND      V6, #4F         ; V6 = random & 4F
$8B4    $4CA6   SNE      VC, #A6         ; Skip if VC != 166
$8B6    $2C2C   CALL     $C2C            ; Call subroutine at C2C
$8B8    $30BF   SE       V0, #BF         ; Skip if V0 == 191
$8BA    $1E9E   JP       $E9E            ; Jump to E9E
$8BC    $6D71   LD       VD, #71         ; Load 113 into VD
$8BE    $1F6E   JP       $F6E            ; Jump to F6E
$8C0    $0B4E   SYS      $B4E            ; System call to B4E
$8C2    $04AB   SYS      $4AB            ; System call to 4AB
$8C4    $A66E   LD       I, $66E         ; Load 66E into I
$8C6    $8B37   SUBN     VB, V3          ; VB = V3 - VB, VF = !borrow
$8C8    $A0CB   LD       I, $0CB         ; Load 0CB into I
$8CA    $AA43   LD       I, $A43         ; Load A43 into I
$8CC    $52B5   UNKNOWN  $52B5           ; Unknown 5xxx instruction
$8CE    $AE18   LD       I, $E18         ; Load E18 into I
$8D0    $97FC   UNKNOWN  $97FC           ; Unknown 9xxx instruction
$8D2    $DBEF   DRW      VB, VE, #F      ; Draw 15-byte sprite at VB, VE
$8D4    $1055   JP       $055            ; Jump to 055
$8D6    $331A   SE       V3, #1A         ; Skip if V3 == 26
$8D8    $B6A3   JP       V0, $6A3        ; Jump to V0 + 6A3
$8DA    $C8B7   RND      V8, #B7         ; V8 = random & B7
$8DC    $0790   SYS      $790            ; System call to 790
$8DE    $792F   ADD      V9, #2F         ; Add 47 to V9
$8E0    $10A7   JP       $0A7            ; Jump to 0A7
$8E2    $EC2B   UNKNOWN  $EC2B           ; Unknown Exxx instruction
$8E4    $EFE3   UNKNOWN  $EFE3           ; Unknown Exxx instruction
$8E6    $3687   SE       V6, #87         ; Skip if V6 == 135
$8E8    $046D   SYS      $46D            ; System call to 46D
$8EA    $9642   UNKNOWN  $9642           ; Unknown 9xxx instruction
$8EC    $9856   UNKNOWN  $9856           ; Unknown 9xxx instruction
$8EE    $082A   SYS      $82A            ; System call to 82A
$8F0    $D537   DRW      V5, V3, #7      ; Draw 7-byte sprite at V5, V3
$8F2    $11EE   JP       $1EE            ; Jump to 1EE
$8F4    $7EB5   ADD      VE, #B5         ; Add 181 to VE
$8F6    $649F   LD       V4, #9F         ; Load 159 into V4
$8F8    $4C29   SNE      VC, #29         ; Skip if VC != 41
$8FA    $5D2A   UNKNOWN  $5D2A           ; Unknown 5xxx instruction
$8FC    $DF99   DRW      VF, V9, #9      ; Draw 9-byte sprite at VF, V9
$8FE    $64D2   LD       V4, #D2         ; Load 210 into V4
$900    $6621   LD       V6, #21         ; Load 33 into V6
$902    $0AC1   SYS      $AC1            ; System call to AC1
$904    $4FAE   SNE      VF, #AE         ; Skip if VF != 174
$906    $4380   SNE      V3, #80         ; Skip if V3 != 128
$908    $3214   SE       V2, #14         ; Skip if V2 == 20
$90A    $49C5   SNE      V9, #C5         ; Skip if V9 != 197
$90C    $89EB   UNKNOWN  89EB            ; Unknown 8xxx instruction
$90E    $7471   ADD      V4, #71         ; Add 113 to V4
$910    $85FD   UNKNOWN  85FD            ; Unknown 8xxx instruction
$912    $A064   LD       I, $064         ; Load 064 into I
$914    $A3ED   LD       I, $3ED         ; Load 3ED into I
$916    $23BB   CALL     $3BB            ; Call subroutine at 3BB
$918    $5367   UNKNOWN  $5367           ; Unknown 5xxx instruction
$91A    $2F43   CALL     $F43            ; Call subroutine at F43
$91C    $F0F2   UNKNOWN  F0F2            ; Unknown Fxxx instruction
$91E    $6F21   LD       VF, #21         ; Load 33 into VF
$920    $EA99   UNKNOWN  $EA99           ; Unknown Exxx instruction
$922    $30D6   SE       V0, #D6         ; Skip if V0 == 214
$924    $5897   UNKNOWN  $5897           ; Unknown 5xxx instruction
$926    $D791   DRW      V7, V9, #1      ; Draw 1-byte sprite at V7, V9
$928    $2B09   CALL     $B09            ; Call subroutine at B09
$92A    $7AB0   ADD      VA, #B0         ; Add 176 to VA
$92C    $ECD1   UNKNOWN  $ECD1           ; Unknown Exxx instruction
$92E    $9249   UNKNOWN  $9249           ; Unknown 9xxx instruction
$930    $A8FE   LD       I, $8FE         ; Load 8FE into I
$932    $9A5F   UNKNOWN  $9A5F           ; Unknown 9xxx instruction
$934    $9000   SNE      V0, V0          ; Skip if V0 != V0
$936    $7C36   ADD      VC, #36         ; Add 54 to VC
$938    $EA9A   UNKNOWN  $EA9A           ; Unknown Exxx instruction
$93A    $6F59   LD       VF, #59         ; Load 89 into VF
$93C    $A594   LD       I, $594         ; Load 594 into I
$93E    $E257   UNKNOWN  $E257           ; Unknown Exxx instruction
$940    $CEE0   RND      VE, #E0         ; VE = random & E0
$942    $FC37   UNKNOWN  FC37            ; Unknown Fxxx instruction
$944    $1ED8   JP       $ED8            ; Jump to ED8
$946    $6CDC   LD       VC, #DC         ; Load 220 into VC
$948    $2756   CALL     $756            ; Call subroutine at 756
$94A    $8BA4   ADD      VB, VA          ; VB += VA, VF = carry
$94C    $FB0F   UNKNOWN  FB0F            ; Unknown Fxxx instruction
$94E    $A37B   LD       I, $37B         ; Load 37B into I
$950    $0705   SYS      $705            ; System call to 705
$952    $1E0F   JP       $E0F            ; Jump to E0F
$954    $09AE   SYS      $9AE            ; System call to 9AE
$956    $116C   JP       $16C            ; Jump to 16C
$958    $52FD   UNKNOWN  $52FD           ; Unknown 5xxx instruction
$95A    $6CA5   LD       VC, #A5         ; Load 165 into VC
$95C    $3150   SE       V1, #50         ; Skip if V1 == 80
$95E    $7CFE   ADD      VC, #FE         ; Add 254 to VC
$960    $CA4B   RND      VA, #4B         ; VA = random & 4B
$962    $AAD0   LD       I, $AD0         ; Load AD0 into I
$964    $3853   SE       V8, #53         ; Skip if V8 == 83
$966    $2A2A   CALL     $A2A            ; Call subroutine at A2A
$968    $A37F   LD       I, $37F         ; Load 37F into I
$96A    $96B7   UNKNOWN  $96B7           ; Unknown 9xxx instruction
$96C    $0FCD   SYS      $FCD            ; System call to FCD
$96E    $B0FC   JP       V0, $0FC        ; Jump to V0 + 0FC
$970    $3D49   SE       VD, #49         ; Skip if VD == 73
$972    $B2F4   JP       V0, $2F4        ; Jump to V0 + 2F4
$974    $A494   LD       I, $494         ; Load 494 into I
$976    $85FC   UNKNOWN  85FC            ; Unknown 8xxx instruction
$978    $D5C9   DRW      V5, VC, #9      ; Draw 9-byte sprite at V5, VC
$97A    $1478   JP       $478            ; Jump to 478
$97C    $B5B3   JP       V0, $5B3        ; Jump to V0 + 5B3
$97E    $047D   SYS      $47D            ; System call to 47D
$980    $BB53   JP       V0, $B53        ; Jump to V0 + B53
$982    $5F8E   UNKNOWN  $5F8E           ; Unknown 5xxx instruction
$984    $2130   CALL     $130            ; Call subroutine at 130
$986    $3E49   SE       VE, #49         ; Skip if VE == 73
$988    $856A   UNKNOWN  856A            ; Unknown 8xxx instruction
$98A    $18FD   JP       $8FD            ; Jump to 8FD
$98C    $A2A3   LD       I, $2A3         ; Load 2A3 into I
$98E    $E5EA   UNKNOWN  $E5EA           ; Unknown Exxx instruction
$990    $7AA4   ADD      VA, #A4         ; Add 164 to VA
$992    $D66F   DRW      V6, V6, #F      ; Draw 15-byte sprite at V6, V6
$994    $4AFD   SNE      VA, #FD         ; Skip if VA != 253
$996    $D50C   DRW      V5, V0, #C      ; Draw 12-byte sprite at V5, V0
$998    $7CEE   ADD      VC, #EE         ; Add 238 to VC
$99A    $D912   DRW      V9, V1, #2      ; Draw 2-byte sprite at V9, V1
$99C    $C222   RND      V2, #22         ; V2 = random & 22
$99E    $11BA   JP       $1BA            ; Jump to 1BA
$9A0    $3649   SE       V6, #49         ; Skip if V6 == 73
$9A2    $5EBD   UNKNOWN  $5EBD           ; Unknown 5xxx instruction
$9A4    $5A04   UNKNOWN  $5A04           ; Unknown 5xxx instruction
$9A6    $6EAC   LD       VE, #AC         ; Load 172 into VE
$9A8    $DF41   DRW      VF, V4, #1      ; Draw 1-byte sprite at VF, V4
$9AA    $66A7   LD       V6, #A7         ; Load 167 into V6
$9AC    $5010   SE       V0, V1          ; Skip if V0 == V1
$9AE    $95FD   UNKNOWN  $95FD           ; Unknown 9xxx instruction
$9B0    $3E50   SE       VE, #50         ; Skip if VE == 80
$9B2    $FD3F   UNKNOWN  FD3F            ; Unknown Fxxx instruction
$9B4    $B352   JP       V0, $352        ; Jump to V0 + 352
$9B6    $B6AC   JP       V0, $6AC        ; Jump to V0 + 6AC
$9B8    $4D67   SNE      VD, #67         ; Skip if VD != 103
$9BA    $F91B   UNKNOWN  F91B            ; Unknown Fxxx instruction
$9BC    $011D   SYS      $11D            ; System call to 11D
$9BE    $C522   RND      V5, #22         ; V5 = random & 22
$9C0    $F916   UNKNOWN  F916            ; Unknown Fxxx instruction
$9C2    $B868   JP       V0, $868        ; Jump to V0 + 868
$9C4    $3E89   SE       VE, #89         ; Skip if VE == 137
$9C6    $BE75   JP       V0, $E75        ; Jump to V0 + E75
$9C8    $56EE   UNKNOWN  $56EE           ; Unknown 5xxx instruction
$9CA    $E468   UNKNOWN  $E468           ; Unknown Exxx instruction
$9CC    $53C5   UNKNOWN  $53C5           ; Unknown 5xxx instruction
$9CE    $90BF   UNKNOWN  $90BF           ; Unknown 9xxx instruction
$9D0    $F852   UNKNOWN  F852            ; Unknown Fxxx instruction
$9D2    $9353   UNKNOWN  $9353           ; Unknown 9xxx instruction
$9D4    $7266   ADD      V2, #66         ; Add 102 to V2
$9D6    $0436   SYS      $436            ; System call to 436
$9D8    $766B   ADD      V6, #6B         ; Add 107 to V6
$9DA    $CDEB   RND      VD, #EB         ; VD = random & EB
$9DC    $F325   UNKNOWN  F325            ; Unknown Fxxx instruction
$9DE    $45CF   SNE      V5, #CF         ; Skip if V5 != 207
$9E0    $B100   JP       V0, $100        ; Jump to V0 + 100
$9E2    $76EB   ADD      V6, #EB         ; Add 235 to V6
$9E4    $4954   SNE      V9, #54         ; Skip if V9 != 84
$9E6    $B62D   JP       V0, $62D        ; Jump to V0 + 62D
$9E8    $099F   SYS      $99F            ; System call to 99F
$9EA    $6AA2   LD       VA, #A2         ; Load 162 into VA
$9EC    $7E6C   ADD      VE, #6C         ; Add 108 to VE
$9EE    $BD03   JP       V0, $D03        ; Jump to V0 + D03
$9F0    $9B05   UNKNOWN  $9B05           ; Unknown 9xxx instruction
$9F2    $132D   JP       $32D            ; Jump to 32D
$9F4    $5E04   UNKNOWN  $5E04           ; Unknown 5xxx instruction
$9F6    $066E   SYS      $66E            ; System call to 66E
$9F8    $CC95   RND      VC, #95         ; VC = random & 95
$9FA    $1E59   JP       $E59            ; Jump to E59
$9FC    $BF5F   JP       V0, $F5F        ; Jump to V0 + F5F
$9FE    $A9F6   LD       I, $9F6         ; Load 9F6 into I
$A00    $9197   UNKNOWN  $9197           ; Unknown 9xxx instruction
$A02    $989F   UNKNOWN  $989F           ; Unknown 9xxx instruction
$A04    $51B7   UNKNOWN  $51B7           ; Unknown 5xxx instruction
$A06    $A814   LD       I, $814         ; Load 814 into I
$A08    $6C25   LD       VC, #25         ; Load 37 into VC
$A0A    $CE3C   RND      VE, #3C         ; VE = random & 3C
$A0C    $64CE   LD       V4, #CE         ; Load 206 into V4
$A0E    $26E5   CALL     $6E5            ; Call subroutine at 6E5
$A10    $888F   UNKNOWN  888F            ; Unknown 8xxx instruction
$A12    $4D89   SNE      VD, #89         ; Skip if VD != 137
$A14    $AEA6   LD       I, $EA6         ; Load EA6 into I
$A16    $6BA9   LD       VB, #A9         ; Load 169 into VB
$A18    $63FD   LD       V3, #FD         ; Load 253 into V3
$A1A    $9D8B   UNKNOWN  $9D8B           ; Unknown 9xxx instruction
$A1C    $CB13   RND      VB, #13         ; VB = random & 13
$A1E    $D302   DRW      V3, V0, #2      ; Draw 2-byte sprite at V3, V0
$A20    $806E   SHL      V0              ; V0 <<= 1, VF = MSB
$A22    $896E   SHL      V9              ; V9 <<= 1, VF = MSB
$A24    $61E0   LD       V1, #E0         ; Load 224 into V1
$A26    $3A9E   SE       VA, #9E         ; Skip if VA == 158
$A28    $90DD   UNKNOWN  $90DD           ; Unknown 9xxx instruction
$A2A    $4084   SNE      V0, #84         ; Skip if V0 != 132
$A2C    $07A0   SYS      $7A0            ; System call to 7A0
$A2E    $B5B5   JP       V0, $5B5        ; Jump to V0 + 5B5
$A30    $FD71   UNKNOWN  FD71            ; Unknown Fxxx instruction
$A32    $1336   JP       $336            ; Jump to 336
$A34    $56F8   UNKNOWN  $56F8           ; Unknown 5xxx instruction
$A36    $CF9D   RND      VF, #9D         ; VF = random & 9D
$A38    $2065   CALL     $065            ; Call subroutine at 065
$A3A    $2CF6   CALL     $CF6            ; Call subroutine at CF6
$A3C    $FE4C   UNKNOWN  FE4C            ; Unknown Fxxx instruction
$A3E    $24E8   CALL     $4E8            ; Call subroutine at 4E8
$A40    $FFB7   UNKNOWN  FFB7            ; Unknown Fxxx instruction
$A42    $7848   ADD      V8, #48         ; Add 72 to V8
$A44    $A312   LD       I, $312         ; Load 312 into I
$A46    $BCD4   JP       V0, $CD4        ; Jump to V0 + CD4
$A48    $EB43   UNKNOWN  $EB43           ; Unknown Exxx instruction
$A4A    $CF2A   RND      VF, #2A         ; VF = random & 2A
$A4C    $FC49   UNKNOWN  FC49            ; Unknown Fxxx instruction
$A4E    $7133   ADD      V1, #33         ; Add 51 to V1
$A50    $C00E   RND      V0, #0E         ; V0 = random & 0E
$A52    $24F2   CALL     $4F2            ; Call subroutine at 4F2
$A54    $3046   SE       V0, #46         ; Skip if V0 == 70
$A56    $69C1   LD       V9, #C1         ; Load 193 into V9
$A58    $6634   LD       V6, #34         ; Load 52 into V6
$A5A    $43D8   SNE      V3, #D8         ; Skip if V3 != 216
$A5C    $B770   JP       V0, $770        ; Jump to V0 + 770
$A5E    $C670   RND      V6, #70         ; V6 = random & 70
$A60    $CE74   RND      VE, #74         ; VE = random & 74
$A62    $3A78   SE       VA, #78         ; Skip if VA == 120
$A64    $7A1F   ADD      VA, #1F         ; Add 31 to VA
$A66    $AAB7   LD       I, $AB7         ; Load AB7 into I
$A68    $3DF9   SE       VD, #F9         ; Skip if VD == 249
$A6A    $C7DF   RND      V7, #DF         ; V7 = random & DF
$A6C    $0893   SYS      $893            ; System call to 893
$A6E    $C626   RND      V6, #26         ; V6 = random & 26
$A70    $F93D   UNKNOWN  F93D            ; Unknown Fxxx instruction
$A72    $C229   RND      V2, #29         ; V2 = random & 29
$A74    $A14F   LD       I, $14F         ; Load 14F into I
$A76    $3F28   SE       VF, #28         ; Skip if VF == 40
$A78    $1915   JP       $915            ; Jump to 915
$A7A    $E6F2   UNKNOWN  $E6F2           ; Unknown Exxx instruction
$A7C    $2295   CALL     $295            ; Call subroutine at 295
$A7E    $F0AA   UNKNOWN  F0AA            ; Unknown Fxxx instruction
$A80    $B3A0   JP       V0, $3A0        ; Jump to V0 + 3A0
$A82    $776A   ADD      V7, #6A         ; Add 106 to V7
$A84    $C5E9   RND      V5, #E9         ; V5 = random & E9
$A86    $38D2   SE       V8, #D2         ; Skip if V8 == 210
$A88    $1941   JP       $941            ; Jump to 941
$A8A    $CE30   RND      VE, #30         ; VE = random & 30
$A8C    $EEBE   UNKNOWN  $EEBE           ; Unknown Exxx instruction
$A8E    $C6D9   RND      V6, #D9         ; V6 = random & D9
$A90    $8422   AND      V4, V2          ; V4 &= V2
$A92    $9124   UNKNOWN  $9124           ; Unknown 9xxx instruction
$A94    $2D72   CALL     $D72            ; Call subroutine at D72
$A96    $C40D   RND      V4, #0D         ; V4 = random & 0D
$A98    $9B19   UNKNOWN  $9B19           ; Unknown 9xxx instruction
$A9A    $D667   DRW      V6, V6, #7      ; Draw 7-byte sprite at V6, V6
$A9C    $7492   ADD      V4, #92         ; Add 146 to V4
$A9E    $8C68   UNKNOWN  8C68            ; Unknown 8xxx instruction
$AA0    $23B3   CALL     $3B3            ; Call subroutine at 3B3
$AA2    $870D   UNKNOWN  870D            ; Unknown 8xxx instruction
$AA4    $023C   SYS      $23C            ; System call to 23C
$AA6    $56D0   SE       V6, VD          ; Skip if V6 == VD
$AA8    $27DD   CALL     $7DD            ; Call subroutine at 7DD
$AAA    $2BF0   CALL     $BF0            ; Call subroutine at BF0
$AAC    $D856   DRW      V8, V5, #6      ; Draw 6-byte sprite at V8, V5
$AAE    $EAA4   UNKNOWN  $EAA4           ; Unknown Exxx instruction
$AB0    $2927   CALL     $927            ; Call subroutine at 927
$AB2    $D9BD   DRW      V9, VB, #D      ; Draw 13-byte sprite at V9, VB
$AB4    $A2A7   LD       I, $2A7         ; Load 2A7 into I
$AB6    $030F   SYS      $30F            ; System call to 30F
$AB8    $4C7B   SNE      VC, #7B         ; Skip if VC != 123
$ABA    $C00E   RND      V0, #0E         ; V0 = random & 0E
$ABC    $CF4C   RND      VF, #4C         ; VF = random & 4C
$ABE    $5DD5   UNKNOWN  $5DD5           ; Unknown 5xxx instruction
$AC0    $FA7F   UNKNOWN  FA7F            ; Unknown Fxxx instruction
$AC2    $628E   LD       V2, #8E         ; Load 142 into V2
$AC4    $CAD0   RND      VA, #D0         ; VA = random & D0
$AC6    $52B2   UNKNOWN  $52B2           ; Unknown 5xxx instruction
$AC8    $36FC   SE       V6, #FC         ; Skip if V6 == 252
$ACA    $7A27   ADD      VA, #27         ; Add 39 to VA
$ACC    $3B1E   SE       VB, #1E         ; Skip if VB == 30
$ACE    $2987   CALL     $987            ; Call subroutine at 987
$AD0    $437D   SNE      V3, #7D         ; Skip if V3 != 125
$AD2    $6417   LD       V4, #17         ; Load 23 into V4
$AD4    $1731   JP       $731            ; Jump to 731
$AD6    $16E1   JP       $6E1            ; Jump to 6E1
$AD8    $14BF   JP       $4BF            ; Jump to 4BF
$ADA    $2F70   CALL     $F70            ; Call subroutine at F70
$ADC    $05E6   SYS      $5E6            ; System call to 5E6
$ADE    $8058   UNKNOWN  8058            ; Unknown 8xxx instruction
$AE0    $A890   LD       I, $890         ; Load 890 into I
$AE2    $8204   ADD      V2, V0          ; V2 += V0, VF = carry
$AE4    $B487   JP       V0, $487        ; Jump to V0 + 487
$AE6    $B9C4   JP       V0, $9C4        ; Jump to V0 + 9C4
$AE8    $42BB   SNE      V2, #BB         ; Skip if V2 != 187
$AEA    $AEB9   LD       I, $EB9         ; Load EB9 into I
$AEC    $8612   AND      V6, V1          ; V6 &= V1
$AEE    $BE4F   JP       V0, $E4F        ; Jump to V0 + E4F
$AF0    $C05D   RND      V0, #5D         ; V0 = random & 5D
$AF2    $2587   CALL     $587            ; Call subroutine at 587
$AF4    $56A8   UNKNOWN  $56A8           ; Unknown 5xxx instruction
$AF6    $D56C   DRW      V5, V6, #C      ; Draw 12-byte sprite at V5, V6
$AF8    $F570   UNKNOWN  F570            ; Unknown Fxxx instruction
$AFA    $D28F   DRW      V2, V8, #F      ; Draw 15-byte sprite at V2, V8
$AFC    $2CDB   CALL     $CDB            ; Call subroutine at CDB
$AFE    $05E3   SYS      $5E3            ; System call to 5E3
$B00    $106D   JP       $06D            ; Jump to 06D
$B02    $D4C8   DRW      V4, VC, #8      ; Draw 8-byte sprite at V4, VC
$B04    $511B   UNKNOWN  $511B           ; Unknown 5xxx instruction
$B06    $E07E   UNKNOWN  $E07E           ; Unknown Exxx instruction
$B08    $7575   ADD      V5, #75         ; Add 117 to V5
$B0A    $2A47   CALL     $A47            ; Call subroutine at A47
$B0C    $65B1   LD       V5, #B1         ; Load 177 into V5
$B0E    $8F71   OR       VF, V7          ; VF |= V7
$B10    $F1B6   UNKNOWN  F1B6            ; Unknown Fxxx instruction
$B12    $A800   LD       I, $800         ; Load 800 into I
$B14    $51AB   UNKNOWN  $51AB           ; Unknown 5xxx instruction
$B16    $7CC9   ADD      VC, #C9         ; Add 201 to VC
$B18    $6D73   LD       VD, #73         ; Load 115 into VD
$B1A    $EE4F   UNKNOWN  $EE4F           ; Unknown Exxx instruction
$B1C    $DAD4   DRW      VA, VD, #4      ; Draw 4-byte sprite at VA, VD
$B1E    $0D82   SYS      $D82            ; System call to D82
$B20    $8450   LD       V4, V5          ; V4 = V5
$B22    $7D66   ADD      VD, #66         ; Add 102 to VD
$B24    $47C4   SNE      V7, #C4         ; Skip if V7 != 196
$B26    $21D4   CALL     $1D4            ; Call subroutine at 1D4
$B28    $4AD7   SNE      VA, #D7         ; Skip if VA != 215
$B2A    $91B3   UNKNOWN  $91B3           ; Unknown 9xxx instruction
$B2C    $7F36   ADD      VF, #36         ; Add 54 to VF
$B2E    $C575   RND      V5, #75         ; V5 = random & 75
$B30    $DA20   DRW      VA, V2, #0      ; Draw 0-byte sprite at VA, V2
$B32    $31EB   SE       V1, #EB         ; Skip if V1 == 235
$B34    $86DE   SHL      V6              ; V6 <<= 1, VF = MSB
$B36    $0C48   SYS      $C48            ; System call to C48
$B38    $2CED   CALL     $CED            ; Call subroutine at CED
$B3A    $99A8   UNKNOWN  $99A8           ; Unknown 9xxx instruction
$B3C    $A05F   LD       I, $05F         ; Load 05F into I
$B3E    $844C   UNKNOWN  844C            ; Unknown 8xxx instruction
$B40    $AC11   LD       I, $C11         ; Load C11 into I
$B42    $8FA0   LD       VF, VA          ; VF = VA
$B44    $8EAB   UNKNOWN  8EAB            ; Unknown 8xxx instruction
$B46    $5B9A   UNKNOWN  $5B9A           ; Unknown 5xxx instruction
$B48    $38FD   SE       V8, #FD         ; Skip if V8 == 253
$B4A    $F00B   UNKNOWN  F00B            ; Unknown Fxxx instruction
$B4C    $E213   UNKNOWN  $E213           ; Unknown Exxx instruction
$B4E    $354A   SE       V5, #4A         ; Skip if V5 == 74
$B50    $5B52   UNKNOWN  $5B52           ; Unknown 5xxx instruction
$B52    $A6C5   LD       I, $6C5         ; Load 6C5 into I
$B54    $D1BB   DRW      V1, VB, #B      ; Draw 11-byte sprite at V1, VB
$B56    $090D   SYS      $90D            ; System call to 90D
$B58    $D155   DRW      V1, V5, #5      ; Draw 5-byte sprite at V1, V5
$B5A    $D654   DRW      V6, V5, #4      ; Draw 4-byte sprite at V6, V5
$B5C    $0CCF   SYS      $CCF            ; System call to CCF
$B5E    $3B1F   SE       VB, #1F         ; Skip if VB == 31
$B60    $C06F   RND      V0, #6F         ; V0 = random & 6F
$B62    $6517   LD       V5, #17         ; Load 23 into V5
$B64    $FD6E   UNKNOWN  FD6E            ; Unknown Fxxx instruction
$B66    $01BE   SYS      $1BE            ; System call to 1BE
$B68    $33FB   SE       V3, #FB         ; Skip if V3 == 251
$B6A    $1856   JP       $856            ; Jump to 856
$B6C    $CFA8   RND      VF, #A8         ; VF = random & A8
$B6E    $AF1E   LD       I, $F1E         ; Load F1E into I
$B70    $76FE   ADD      V6, #FE         ; Add 254 to V6
$B72    $63D3   LD       V3, #D3         ; Load 211 into V3
$B74    $EC8F   UNKNOWN  $EC8F           ; Unknown Exxx instruction
$B76    $4FAE   SNE      VF, #AE         ; Skip if VF != 174
$B78    $75C9   ADD      V5, #C9         ; Add 201 to V5
$B7A    $65C5   LD       V5, #C5         ; Load 197 into V5
$B7C    $2249   CALL     $249            ; Call subroutine at 249
$B7E    $5582   UNKNOWN  $5582           ; Unknown 5xxx instruction
$B80    $1FDB   JP       $FDB            ; Jump to FDB
$B82    $D0AB   DRW      V0, VA, #B      ; Draw 11-byte sprite at V0, VA
$B84    $EDB1   UNKNOWN  $EDB1           ; Unknown Exxx instruction
$B86    $A10A   LD       I, $10A         ; Load 10A into I
$B88    $F128   UNKNOWN  F128            ; Unknown Fxxx instruction
$B8A    $6436   LD       V4, #36         ; Load 54 into V4
$B8C    $F606   UNKNOWN  F606            ; Unknown Fxxx instruction
$B8E    $0BD0   SYS      $BD0            ; System call to BD0
$B90    $B9B0   JP       V0, $9B0        ; Jump to V0 + 9B0
$B92    $C88F   RND      V8, #8F         ; V8 = random & 8F
$B94    $6DCF   LD       VD, #CF         ; Load 207 into VD
$B96    $5751   UNKNOWN  $5751           ; Unknown 5xxx instruction
$B98    $AF5C   LD       I, $F5C         ; Load F5C into I
$B9A    $8BC6   SHR      VB              ; VB >>= 1, VF = LSB
$B9C    $E118   UNKNOWN  $E118           ; Unknown Exxx instruction
$B9E    $0549   SYS      $549            ; System call to 549
$BA0    $C863   RND      V8, #63         ; V8 = random & 63
$BA2    $419F   SNE      V1, #9F         ; Skip if V1 != 159
$BA4    $57F1   UNKNOWN  $57F1           ; Unknown 5xxx instruction
$BA6    $4EED   SNE      VE, #ED         ; Skip if VE != 237
$BA8    $2588   CALL     $588            ; Call subroutine at 588
$BAA    $69E4   LD       V9, #E4         ; Load 228 into V9
$BAC    $C01A   RND      V0, #1A         ; V0 = random & 1A
$BAE    $0566   SYS      $566            ; System call to 566
$BB0    $339C   SE       V3, #9C         ; Skip if V3 == 156
$BB2    $FED5   UNKNOWN  FED5            ; Unknown Fxxx instruction
$BB4    $F50D   UNKNOWN  F50D            ; Unknown Fxxx instruction
$BB6    $BA67   JP       V0, $A67        ; Jump to V0 + A67
$BB8    $6C05   LD       VC, #05         ; Load 5 into VC
$BBA    $F171   UNKNOWN  F171            ; Unknown Fxxx instruction
$BBC    $726D   ADD      V2, #6D         ; Add 109 to V2
$BBE    $D3EB   DRW      V3, VE, #B      ; Draw 11-byte sprite at V3, VE
$BC0    $63E7   LD       V3, #E7         ; Load 231 into V3
$BC2    $CDA4   RND      VD, #A4         ; VD = random & A4
$BC4    $DF19   DRW      VF, V1, #9      ; Draw 9-byte sprite at VF, V1
$BC6    $B085   JP       V0, $085        ; Jump to V0 + 085
$BC8    $998E   UNKNOWN  $998E           ; Unknown 9xxx instruction
$BCA    $0397   SYS      $397            ; System call to 397
$BCC    $1CF7   JP       $CF7            ; Jump to CF7
$BCE    $A316   LD       I, $316         ; Load 316 into I
$BD0    $6BF7   LD       VB, #F7         ; Load 247 into VB
$BD2    $FB90   UNKNOWN  FB90            ; Unknown Fxxx instruction
$BD4    $A47C   LD       I, $47C         ; Load 47C into I
$BD6    $E1D8   UNKNOWN  $E1D8           ; Unknown Exxx instruction
$BD8    $AAE2   LD       I, $AE2         ; Load AE2 into I
$BDA    $5C34   UNKNOWN  $5C34           ; Unknown 5xxx instruction
$BDC    $2725   CALL     $725            ; Call subroutine at 725
$BDE    $0FB5   SYS      $FB5            ; System call to FB5
$BE0    $BA3E   JP       V0, $A3E        ; Jump to V0 + A3E
$BE2    $3827   SE       V8, #27         ; Skip if V8 == 39
$BE4    $C713   RND      V7, #13         ; V7 = random & 13
$BE6    $4C8A   SNE      VC, #8A         ; Skip if VC != 138
$BE8    $8226   SHR      V2              ; V2 >>= 1, VF = LSB
$BEA    $C01F   RND      V0, #1F         ; V0 = random & 1F
$BEC    $3A10   SE       VA, #10         ; Skip if VA == 16
$BEE    $079C   SYS      $79C            ; System call to 79C
$BF0    $4685   SNE      V6, #85         ; Skip if V6 != 133
$BF2    $88DE   SHL      V8              ; V8 <<= 1, VF = MSB
$BF4    $37D3   SE       V7, #D3         ; Skip if V7 == 211
$BF6    $436F   SNE      V3, #6F         ; Skip if V3 != 111
$BF8    $254B   CALL     $54B            ; Call subroutine at 54B
$BFA    $94F9   UNKNOWN  $94F9           ; Unknown 9xxx instruction
$BFC    $D557   DRW      V5, V5, #7      ; Draw 7-byte sprite at V5, V5
$BFE    $33FE   SE       V3, #FE         ; Skip if V3 == 254
$C00    $44E1   SNE      V4, #E1         ; Skip if V4 != 225
$C02    $3961   SE       V9, #61         ; Skip if V9 == 97
$C04    $05AA   SYS      $5AA            ; System call to 5AA
$C06    $3C44   SE       VC, #44         ; Skip if VC == 68
$C08    $102E   JP       $02E            ; Jump to 02E
$C0A    $C3E6   RND      V3, #E6         ; V3 = random & E6
$C0C    $EDFF   UNKNOWN  $EDFF           ; Unknown Exxx instruction
$C0E    $3FF8   SE       VF, #F8         ; Skip if VF == 248
$C10    $52B3   UNKNOWN  $52B3           ; Unknown 5xxx instruction
$C12    $2BEC   CALL     $BEC            ; Call subroutine at BEC
$C14    $8604   ADD      V6, V0          ; V6 += V0, VF = carry
$C16    $2925   CALL     $925            ; Call subroutine at 925
$C18    $9DAC   UNKNOWN  $9DAC           ; Unknown 9xxx instruction
$C1A    $440F   SNE      V4, #0F         ; Skip if V4 != 15
$C1C    $8B15   SUB      VB, V1          ; VB -= V1, VF = !borrow
$C1E    $0C4D   SYS      $C4D            ; System call to C4D
$C20    $82D5   SUB      V2, VD          ; V2 -= VD, VF = !borrow
$C22    $8446   SHR      V4              ; V4 >>= 1, VF = LSB
$C24    $BF3E   JP       V0, $F3E        ; Jump to V0 + F3E
$C26    $6B0B   LD       VB, #0B         ; Load 11 into VB
$C28    $F518   LD       ST, V5          ; Sound timer = V5
$C2A    $C297   RND      V2, #97         ; V2 = random & 97
$C2C    $E615   UNKNOWN  $E615           ; Unknown Exxx instruction
$C2E    $59A0   SE       V9, VA          ; Skip if V9 == VA
$C30    $BB5A   JP       V0, $B5A        ; Jump to V0 + B5A
$C32    $66E5   LD       V6, #E5         ; Load 229 into V6
$C34    $0605   SYS      $605            ; System call to 605
$C36    $698B   LD       V9, #8B         ; Load 139 into V9
$C38    $77B0   ADD      V7, #B0         ; Add 176 to V7
$C3A    $A6FB   LD       I, $6FB         ; Load 6FB into I
$C3C    $C0EF   RND      V0, #EF         ; V0 = random & EF
$C3E    $691B   LD       V9, #1B         ; Load 27 into V9
$C40    $ED49   UNKNOWN  $ED49           ; Unknown Exxx instruction
$C42    $FEBB   UNKNOWN  FEBB            ; Unknown Fxxx instruction
$C44    $2CA4   CALL     $CA4            ; Call subroutine at CA4
$C46    $1568   JP       $568            ; Jump to 568
$C48    $40EB   SNE      V0, #EB         ; Skip if V0 != 235
$C4A    $F639   UNKNOWN  F639            ; Unknown Fxxx instruction
$C4C    $3803   SE       V8, #03         ; Skip if V8 == 3
$C4E    $072C   SYS      $72C            ; System call to 72C
$C50    $5CBE   UNKNOWN  $5CBE           ; Unknown 5xxx instruction
$C52    $D4AA   DRW      V4, VA, #A      ; Draw 10-byte sprite at V4, VA
$C54    $8F2D   UNKNOWN  8F2D            ; Unknown 8xxx instruction
$C56    $20BE   CALL     $0BE            ; Call subroutine at 0BE
$C58    $4967   SNE      V9, #67         ; Skip if V9 != 103
$C5A    $974E   UNKNOWN  $974E           ; Unknown 9xxx instruction
$C5C    $BFB2   JP       V0, $FB2        ; Jump to V0 + FB2
$C5E    $579C   UNKNOWN  $579C           ; Unknown 5xxx instruction
$C60    $8746   SHR      V7              ; V7 >>= 1, VF = LSB
$C62    $62D0   LD       V2, #D0         ; Load 208 into V2
$C64    $3B3A   SE       VB, #3A         ; Skip if VB == 58
$C66    $38EC   SE       V8, #EC         ; Skip if V8 == 236
$C68    $60EB   LD       V0, #EB         ; Load 235 into V0
$C6A    $4AF4   SNE      VA, #F4         ; Skip if VA != 244
$C6C    $A735   LD       I, $735         ; Load 735 into I
$C6E    $0640   SYS      $640            ; System call to 640
$C70    $C586   RND      V5, #86         ; V5 = random & 86
$C72    $FB2E   UNKNOWN  FB2E            ; Unknown Fxxx instruction
$C74    $E45E   UNKNOWN  $E45E           ; Unknown Exxx instruction
$C76    $6907   LD       V9, #07         ; Load 7 into V9
$C78    $CC84   RND      VC, #84         ; VC = random & 84
$C7A    $C541   RND      V5, #41         ; V5 = random & 41
$C7C    $2775   CALL     $775            ; Call subroutine at 775
$C7E    $8596   SHR      V5              ; V5 >>= 1, VF = LSB
$C80    $E2E4   UNKNOWN  $E2E4           ; Unknown Exxx instruction
$C82    $5C05   UNKNOWN  $5C05           ; Unknown 5xxx instruction
$C84    $A85F   LD       I, $85F         ; Load 85F into I
$C86    $C97A   RND      V9, #7A         ; V9 = random & 7A
$C88    $13A2   JP       $3A2            ; Jump to 3A2
$C8A    $B0B2   JP       V0, $0B2        ; Jump to V0 + 0B2
$C8C    $6CF5   LD       VC, #F5         ; Load 245 into VC
$C8E    $00A0   SYS      $0A0            ; System call to 0A0
$C90    $A573   LD       I, $573         ; Load 573 into I
$C92    $4157   SNE      V1, #57         ; Skip if V1 != 87
$C94    $A375   LD       I, $375         ; Load 375 into I
$C96    $3518   SE       V5, #18         ; Skip if V5 == 24
$C98    $3FAC   SE       VF, #AC         ; Skip if VF == 172
$C9A    $F67E   UNKNOWN  F67E            ; Unknown Fxxx instruction
$C9C    $6817   LD       V8, #17         ; Load 23 into V8
$C9E    $2C20   CALL     $C20            ; Call subroutine at C20
$CA0    $23D9   CALL     $3D9            ; Call subroutine at 3D9
$CA2    $5630   SE       V6, V3          ; Skip if V6 == V3
$CA4    $B778   JP       V0, $778        ; Jump to V0 + 778
$CA6    $E5E5   UNKNOWN  $E5E5           ; Unknown Exxx instruction
$CA8    $B5FC   JP       V0, $5FC        ; Jump to V0 + 5FC
$CAA    $9793   UNKNOWN  $9793           ; Unknown 9xxx instruction
$CAC    $3B58   SE       VB, #58         ; Skip if VB == 88
$CAE    $B6A9   JP       V0, $6A9        ; Jump to V0 + 6A9
$CB0    $47FF   SNE      V7, #FF         ; Skip if V7 != 255
$CB2    $28EB   CALL     $8EB            ; Call subroutine at 8EB
$CB4    $C81D   RND      V8, #1D         ; V8 = random & 1D
$CB6    $2371   CALL     $371            ; Call subroutine at 371
$CB8    $0A07   SYS      $A07            ; System call to A07
$CBA    $5928   UNKNOWN  $5928           ; Unknown 5xxx instruction
$CBC    $5FC3   UNKNOWN  $5FC3           ; Unknown 5xxx instruction
$CBE    $55A1   UNKNOWN  $55A1           ; Unknown 5xxx instruction
$CC0    $6774   LD       V7, #74         ; Load 116 into V7
$CC2    $D177   DRW      V1, V7, #7      ; Draw 7-byte sprite at V1, V7
$CC4    $4F66   SNE      VF, #66         ; Skip if VF != 102
$CC6    $3175   SE       V1, #75         ; Skip if V1 == 117
$CC8    $2E7C   CALL     $E7C            ; Call subroutine at E7C
$CCA    $BF39   JP       V0, $F39        ; Jump to V0 + F39
$CCC    $FCA3   UNKNOWN  FCA3            ; Unknown Fxxx instruction
$CCE    $7D92   ADD      VD, #92         ; Add 146 to VD
$CD0    $4C14   SNE      VC, #14         ; Skip if VC != 20
$CD2    $999F   UNKNOWN  $999F           ; Unknown 9xxx instruction
$CD4    $D21B   DRW      V2, V1, #B      ; Draw 11-byte sprite at V2, V1
$CD6    $D883   DRW      V8, V8, #3      ; Draw 3-byte sprite at V8, V8
$CD8    $D64A   DRW      V6, V4, #A      ; Draw 10-byte sprite at V6, V4
$CDA    $CECF   RND      VE, #CF         ; VE = random & CF
$CDC    $17D2   JP       $7D2            ; Jump to 7D2
$CDE    $CB75   RND      VB, #75         ; VB = random & 75
$CE0    $1DAF   JP       $DAF            ; Jump to DAF
$CE2    $2B5D   CALL     $B5D            ; Call subroutine at B5D
$CE4    $B553   JP       V0, $553        ; Jump to V0 + 553
$CE6    $E8A8   UNKNOWN  $E8A8           ; Unknown Exxx instruction
$CE8    $1D8A   JP       $D8A            ; Jump to D8A
$CEA    $FE9A   UNKNOWN  FE9A            ; Unknown Fxxx instruction
$CEC    $421A   SNE      V2, #1A         ; Skip if V2 != 26
$CEE    $FB40   UNKNOWN  FB40            ; Unknown Fxxx instruction
$CF0    $CEAC   RND      VE, #AC         ; VE = random & AC
$CF2    $DA7B   DRW      VA, V7, #B      ; Draw 11-byte sprite at VA, V7
$CF4    $547B   UNKNOWN  $547B           ; Unknown 5xxx instruction
$CF6    $BC4A   JP       V0, $C4A        ; Jump to V0 + C4A
$CF8    $D71B   DRW      V7, V1, #B      ; Draw 11-byte sprite at V7, V1
$CFA    $B2DF   JP       V0, $2DF        ; Jump to V0 + 2DF
$CFC    $45F5   SNE      V5, #F5         ; Skip if V5 != 245
$CFE    $3DD4   SE       VD, #D4         ; Skip if VD == 212
$D00    $2B88   CALL     $B88            ; Call subroutine at B88
$D02    $50DE   UNKNOWN  $50DE           ; Unknown 5xxx instruction
$D04    $AE80   LD       I, $E80         ; Load E80 into I
$D06    $DA83   DRW      VA, V8, #3      ; Draw 3-byte sprite at VA, V8
$D08    $4D10   SNE      VD, #10         ; Skip if VD != 16
$D0A    $6915   LD       V9, #15         ; Load 21 into V9
$D0C    $BE32   JP       V0, $E32        ; Jump to V0 + E32
$D0E    $C0B3   RND      V0, #B3         ; V0 = random & B3
$D10    $44A3   SNE      V4, #A3         ; Skip if V4 != 163
$D12    $982E   UNKNOWN  $982E           ; Unknown 9xxx instruction
$D14    $EE39   UNKNOWN  $EE39           ; Unknown Exxx instruction
$D16    $AA07   LD       I, $A07         ; Load A07 into I
$D18    $D4DC   DRW      V4, VD, #C      ; Draw 12-byte sprite at V4, VD
$D1A    $0028   SYS      $028            ; System call to 028
$D1C    $ED57   UNKNOWN  $ED57           ; Unknown Exxx instruction
$D1E    $0DED   SYS      $DED            ; System call to DED
$D20    $B444   JP       V0, $444        ; Jump to V0 + 444
$D22    $A940   LD       I, $940         ; Load 940 into I
$D24    $A200   LD       I, $200         ; Load 200 into I
$D26    $7AE9   ADD      VA, #E9         ; Add 233 to VA
$D28    $6289   LD       V2, #89         ; Load 137 into V2
$D2A    $16D7   JP       $6D7            ; Jump to 6D7
$D2C    $5F07   UNKNOWN  $5F07           ; Unknown 5xxx instruction
$D2E    $FF33   LD       B, VF           ; Store BCD of VF at I, I+1, I+2
$D30    $419A   SNE      V1, #9A         ; Skip if V1 != 154
$D32    $4B03   SNE      VB, #03         ; Skip if VB != 3
$D34    $0C34   SYS      $C34            ; System call to C34
$D36    $F368   UNKNOWN  F368            ; Unknown Fxxx instruction
$D38    $EF3E   UNKNOWN  $EF3E           ; Unknown Exxx instruction
$D3A    $528B   UNKNOWN  $528B           ; Unknown 5xxx instruction
$D3C    $D5C2   DRW      V5, VC, #2      ; Draw 2-byte sprite at V5, VC
$D3E    $F637   UNKNOWN  F637            ; Unknown Fxxx instruction
$D40    $BEB3   JP       V0, $EB3        ; Jump to V0 + EB3
$D42    $1E9D   JP       $E9D            ; Jump to E9D
$D44    $84AF   UNKNOWN  84AF            ; Unknown 8xxx instruction
$D46    $AD3A   LD       I, $D3A         ; Load D3A into I
$D48    $96B2   UNKNOWN  $96B2           ; Unknown 9xxx instruction
$D4A    $7303   ADD      V3, #03         ; Add 3 to V3
$D4C    $CC25   RND      VC, #25         ; VC = random & 25
$D4E    $FD35   UNKNOWN  FD35            ; Unknown Fxxx instruction
$D50    $73E7   ADD      V3, #E7         ; Add 231 to V3
$D52    $F0CB   UNKNOWN  F0CB            ; Unknown Fxxx instruction
$D54    $A82F   LD       I, $82F         ; Load 82F into I
$D56    $4A1F   SNE      VA, #1F         ; Skip if VA != 31
$D58    $F16A   UNKNOWN  F16A            ; Unknown Fxxx instruction
$D5A    $B129   JP       V0, $129        ; Jump to V0 + 129
$D5C    $D0F5   DRW      V0, VF, #5      ; Draw 5-byte sprite at V0, VF
$D5E    $A2E7   LD       I, $2E7         ; Load 2E7 into I
$D60    $453C   SNE      V5, #3C         ; Skip if V5 != 60
$D62    $6E87   LD       VE, #87         ; Load 135 into VE
$D64    $77FA   ADD      V7, #FA         ; Add 250 to V7
$D66    $4C44   SNE      VC, #44         ; Skip if VC != 68
$D68    $BF32   JP       V0, $F32        ; Jump to V0 + F32
$D6A    $5B48   UNKNOWN  $5B48           ; Unknown 5xxx instruction
$D6C    $17D2   JP       $7D2            ; Jump to 7D2
$D6E    $9B0E   UNKNOWN  $9B0E           ; Unknown 9xxx instruction
$D70    $7AC6   ADD      VA, #C6         ; Add 198 to VA
$D72    $E0DE   UNKNOWN  $E0DE           ; Unknown Exxx instruction
$D74    $352B   SE       V5, #2B         ; Skip if V5 == 43
$D76    $30B5   SE       V0, #B5         ; Skip if V0 == 181
$D78    $5A02   UNKNOWN  $5A02           ; Unknown 5xxx instruction
$D7A    $71F8   ADD      V1, #F8         ; Add 248 to V1
$D7C    $EB65   UNKNOWN  $EB65           ; Unknown Exxx instruction
$D7E    $6357   LD       V3, #57         ; Load 87 into V3
$D80    $920C   UNKNOWN  $920C           ; Unknown 9xxx instruction
$D82    $569C   UNKNOWN  $569C           ; Unknown 5xxx instruction
$D84    $4FA1   SNE      VF, #A1         ; Skip if VF != 161
$D86    $9BA1   UNKNOWN  $9BA1           ; Unknown 9xxx instruction
$D88    $5B92   UNKNOWN  $5B92           ; Unknown 5xxx instruction
$D8A    $C770   RND      V7, #70         ; V7 = random & 70
$D8C    $0801   SYS      $801            ; System call to 801
$D8E    $8DDB   UNKNOWN  8DDB            ; Unknown 8xxx instruction
$D90    $A126   LD       I, $126         ; Load 126 into I
$D92    $C755   RND      V7, #55         ; V7 = random & 55
$D94    $F99C   UNKNOWN  F99C            ; Unknown Fxxx instruction
$D96    $516F   UNKNOWN  $516F           ; Unknown 5xxx instruction
$D98    $296D   CALL     $96D            ; Call subroutine at 96D
$D9A    $4A7E   SNE      VA, #7E         ; Skip if VA != 126
$D9C    $A630   LD       I, $630         ; Load 630 into I
$D9E    $F627   UNKNOWN  F627            ; Unknown Fxxx instruction
$DA0    $AA58   LD       I, $A58         ; Load A58 into I
$DA2    $4697   SNE      V6, #97         ; Skip if V6 != 151
$DA4    $EFF9   UNKNOWN  $EFF9           ; Unknown Exxx instruction
$DA6    $05EE   SYS      $5EE            ; System call to 5EE
$DA8    $A2F7   LD       I, $2F7         ; Load 2F7 into I
$DAA    $22E7   CALL     $2E7            ; Call subroutine at 2E7
$DAC    $CAFC   RND      VA, #FC         ; VA = random & FC
$DAE    $DE3B   DRW      VE, V3, #B      ; Draw 11-byte sprite at VE, V3
$DB0    $BD6D   JP       V0, $D6D        ; Jump to V0 + D6D
$DB2    $78AB   ADD      V8, #AB         ; Add 171 to V8
$DB4    $AADC   LD       I, $ADC         ; Load ADC into I
$DB6    $F7B3   UNKNOWN  F7B3            ; Unknown Fxxx instruction
$DB8    $587E   UNKNOWN  $587E           ; Unknown 5xxx instruction
$DBA    $82A5   SUB      V2, VA          ; V2 -= VA, VF = !borrow
$DBC    $430A   SNE      V3, #0A         ; Skip if V3 != 10
$DBE    $B5C9   JP       V0, $5C9        ; Jump to V0 + 5C9
$DC0    $8EEA   UNKNOWN  8EEA            ; Unknown 8xxx instruction
$DC2    $BD17   JP       V0, $D17        ; Jump to V0 + D17
$DC4    $10CF   JP       $0CF            ; Jump to 0CF
$DC6    $A9DF   LD       I, $9DF         ; Load 9DF into I
$DC8    $131C   JP       $31C            ; Jump to 31C
$DCA    $1C23   JP       $C23            ; Jump to C23
$DCC    $E1F9   UNKNOWN  $E1F9           ; Unknown Exxx instruction
$DCE    $AC61   LD       I, $C61         ; Load C61 into I
$DD0    $E428   UNKNOWN  $E428           ; Unknown Exxx instruction
$DD2    $C634   RND      V6, #34         ; V6 = random & 34
$DD4    $BC42   JP       V0, $C42        ; Jump to V0 + C42
$DD6    $8C15   SUB      VC, V1          ; VC -= V1, VF = !borrow
$DD8    $8B13   XOR      VB, V1          ; VB ^= V1
$DDA    $7473   ADD      V4, #73         ; Add 115 to V4
$DDC    $876C   UNKNOWN  876C            ; Unknown 8xxx instruction
$DDE    $C2AE   RND      V2, #AE         ; V2 = random & AE
$DE0    $EC6C   UNKNOWN  $EC6C           ; Unknown Exxx instruction
$DE2    $AE5A   LD       I, $E5A         ; Load E5A into I
$DE4    $5466   UNKNOWN  $5466           ; Unknown 5xxx instruction
$DE6    $6BA9   LD       VB, #A9         ; Load 169 into VB
$DE8    $ACF6   LD       I, $CF6         ; Load CF6 into I
$DEA    $AFD5   LD       I, $FD5         ; Load FD5 into I
$DEC    $7691   ADD      V6, #91         ; Add 145 to V6
$DEE    $A5A3   LD       I, $5A3         ; Load 5A3 into I
$DF0    $21E6   CALL     $1E6            ; Call subroutine at 1E6
$DF2    $E8C1   UNKNOWN  $E8C1           ; Unknown Exxx instruction
$DF4    $49FE   SNE      V9, #FE         ; Skip if V9 != 254
$DF6    $90E3   UNKNOWN  $90E3           ; Unknown 9xxx instruction
$DF8    $C6FF   RND      V6, #FF         ; V6 = random & FF
$DFA    $5663   UNKNOWN  $5663           ; Unknown 5xxx instruction
$DFC    $DADC   DRW      VA, VD, #C      ; Draw 12-byte sprite at VA, VD
$DFE    $0EB2   SYS      $EB2            ; System call to EB2
$E00    $630A   LD       V3, #0A         ; Load 10 into V3
$E02    $480E   SNE      V8, #0E         ; Skip if V8 != 14
$E04    $96F5   UNKNOWN  $96F5           ; Unknown 9xxx instruction
$E06    $92A8   UNKNOWN  $92A8           ; Unknown 9xxx instruction
$E08    $7C99   ADD      VC, #99         ; Add 153 to VC
$E0A    $7682   ADD      V6, #82         ; Add 130 to V6
$E0C    $D13F   DRW      V1, V3, #F      ; Draw 15-byte sprite at V1, V3
$E0E    $4A23   SNE      VA, #23         ; Skip if VA != 35
$E10    $DE73   DRW      VE, V7, #3      ; Draw 3-byte sprite at VE, V7
$E12    $BC85   JP       V0, $C85        ; Jump to V0 + C85
$E14    $B453   JP       V0, $453        ; Jump to V0 + 453
$E16    $62A9   LD       V2, #A9         ; Load 169 into V2
$E18    $000D   SYS      $00D            ; System call to 00D
$E1A    $58DA   UNKNOWN  $58DA           ; Unknown 5xxx instruction
$E1C    $13BB   JP       $3BB            ; Jump to 3BB
$E1E    $4DF3   SNE      VD, #F3         ; Skip if VD != 243
$E20    $0B97   SYS      $B97            ; System call to B97
$E22    $1845   JP       $845            ; Jump to 845
$E24    $C5E6   RND      V5, #E6         ; V5 = random & E6
$E26    $9559   UNKNOWN  $9559           ; Unknown 9xxx instruction
$E28    $1B3F   JP       $B3F            ; Jump to B3F
$E2A    $F75A   UNKNOWN  F75A            ; Unknown Fxxx instruction
$E2C    $D497   DRW      V4, V9, #7      ; Draw 7-byte sprite at V4, V9
$E2E    $B6DF   JP       V0, $6DF        ; Jump to V0 + 6DF
$E30    $49B8   SNE      V9, #B8         ; Skip if V9 != 184
$E32    $E218   UNKNOWN  $E218           ; Unknown Exxx instruction
$E34    $BA3C   JP       V0, $A3C        ; Jump to V0 + A3C
$E36    $DC6D   DRW      VC, V6, #D      ; Draw 13-byte sprite at VC, V6
$E38    $AE59   LD       I, $E59         ; Load E59 into I
$E3A    $8401   OR       V4, V0          ; V4 |= V0
$E3C    $B77A   JP       V0, $77A        ; Jump to V0 + 77A
$E3E    $B0F2   JP       V0, $0F2        ; Jump to V0 + 0F2
$E40    $E5E8   UNKNOWN  $E5E8           ; Unknown Exxx instruction
$E42    $AF14   LD       I, $F14         ; Load F14 into I
$E44    $E88C   UNKNOWN  $E88C           ; Unknown Exxx instruction
$E46    $D39B   DRW      V3, V9, #B      ; Draw 11-byte sprite at V3, V9
$E48    $936E   UNKNOWN  $936E           ; Unknown 9xxx instruction
$E4A    $3717   SE       V7, #17         ; Skip if V7 == 23
$E4C    $14F6   JP       $4F6            ; Jump to 4F6
$E4E    $C8DC   RND      V8, #DC         ; V8 = random & DC
$E50    $3EAE   SE       VE, #AE         ; Skip if VE == 174
$E52    $B48B   JP       V0, $48B        ; Jump to V0 + 48B
$E54    $2F1D   CALL     $F1D            ; Call subroutine at F1D
$E56    $B645   JP       V0, $645        ; Jump to V0 + 645
$E58    $9D5B   UNKNOWN  $9D5B           ; Unknown 9xxx instruction
$E5A    $B7BC   JP       V0, $7BC        ; Jump to V0 + 7BC
$E5C    $EDD2   UNKNOWN  $EDD2           ; Unknown Exxx instruction
$E5E    $20AB   CALL     $0AB            ; Call subroutine at 0AB
$E60    $AB8A   LD       I, $B8A         ; Load B8A into I
$E62    $D9CC   DRW      V9, VC, #C      ; Draw 12-byte sprite at V9, VC
$E64    $5238   UNKNOWN  $5238           ; Unknown 5xxx instruction
$E66    $AB5C   LD       I, $B5C         ; Load B5C into I
$E68    $7518   ADD      V5, #18         ; Add 24 to V5
$E6A    $B4DC   JP       V0, $4DC        ; Jump to V0 + 4DC
$E6C    $D58C   DRW      V5, V8, #C      ; Draw 12-byte sprite at V5, V8
$E6E    $572F   UNKNOWN  $572F           ; Unknown 5xxx instruction
$E70    $6EB4   LD       VE, #B4         ; Load 180 into VE
$E72    $07B4   SYS      $7B4            ; System call to 7B4
$E74    $8B94   ADD      VB, V9          ; VB += V9, VF = carry
$E76    $309D   SE       V0, #9D         ; Skip if V0 == 157
$E78    $A371   LD       I, $371         ; Load 371 into I
$E7A    $EE12   UNKNOWN  $EE12           ; Unknown Exxx instruction
$E7C    $F210   UNKNOWN  F210            ; Unknown Fxxx instruction
$E7E    $2A09   CALL     $A09            ; Call subroutine at A09
$E80    $9030   SNE      V0, V3          ; Skip if V0 != V3
$E82    $5F53   UNKNOWN  $5F53           ; Unknown 5xxx instruction
$E84    $015A   SYS      $15A            ; System call to 15A
$E86    $DB29   DRW      VB, V2, #9      ; Draw 9-byte sprite at VB, V2
$E88    $CCC7   RND      VC, #C7         ; VC = random & C7
$E8A    $C2AF   RND      V2, #AF         ; V2 = random & AF
$E8C    $C3A2   RND      V3, #A2         ; V3 = random & A2
$E8E    $5D97   UNKNOWN  $5D97           ; Unknown 5xxx instruction
$E90    $9C7A   UNKNOWN  $9C7A           ; Unknown 9xxx instruction
$E92    $2976   CALL     $976            ; Call subroutine at 976
$E94    $490F   SNE      V9, #0F         ; Skip if V9 != 15
$E96    $E85B   UNKNOWN  $E85B           ; Unknown Exxx instruction
$E98    $4810   SNE      V8, #10         ; Skip if V8 != 16
$E9A    $07E0   SYS      $7E0            ; System call to 7E0
$E9C    $2209   CALL     $209            ; Call subroutine at 209
$E9E    $CEF1   RND      VE, #F1         ; VE = random & F1
$EA0    $EA76   UNKNOWN  $EA76           ; Unknown Exxx instruction
$EA2    $4E85   SNE      VE, #85         ; Skip if VE != 133
$EA4    $F37B   UNKNOWN  F37B            ; Unknown Fxxx instruction
$EA6    $5DC4   UNKNOWN  $5DC4           ; Unknown 5xxx instruction
$EA8    $0E35   SYS      $E35            ; System call to E35
$EAA    $7DCD   ADD      VD, #CD         ; Add 205 to VD
$EAC    $25A1   CALL     $5A1            ; Call subroutine at 5A1
$EAE    $0573   SYS      $573            ; System call to 573
$EB0    $7BB6   ADD      VB, #B6         ; Add 182 to VB
$EB2    $B802   JP       V0, $802        ; Jump to V0 + 802
$EB4    $6944   LD       V9, #44         ; Load 68 into V9
$EB6    $CEF4   RND      VE, #F4         ; VE = random & F4
$EB8    $7E1B   ADD      VE, #1B         ; Add 27 to VE
$EBA    $7681   ADD      V6, #81         ; Add 129 to V6
$EBC    $E74E   UNKNOWN  $E74E           ; Unknown Exxx instruction
$EBE    $81AD   UNKNOWN  81AD            ; Unknown 8xxx instruction
$EC0    $2EEB   CALL     $EEB            ; Call subroutine at EEB
$EC2    $CAB1   RND      VA, #B1         ; VA = random & B1
$EC4    $A62B   LD       I, $62B         ; Load 62B into I
$EC6    $24E2   CALL     $4E2            ; Call subroutine at 4E2
$EC8    $0A96   SYS      $A96            ; System call to A96
$ECA    $B219   JP       V0, $219        ; Jump to V0 + 219
$ECC    $4CCC   SNE      VC, #CC         ; Skip if VC != 204
$ECE    $F937   UNKNOWN  F937            ; Unknown Fxxx instruction
$ED0    $8427   SUBN     V4, V2          ; V4 = V2 - V4, VF = !borrow
$ED2    $36C7   SE       V6, #C7         ; Skip if V6 == 199
$ED4    $027B   SYS      $27B            ; System call to 27B
$ED6    $E39E   SKP      V3              ; Skip if key V3 pressed
$ED8    $F4AE   UNKNOWN  F4AE            ; Unknown Fxxx instruction
$EDA    $FEF1   UNKNOWN  FEF1            ; Unknown Fxxx instruction
$EDC    $9E9C   UNKNOWN  $9E9C           ; Unknown 9xxx instruction
$EDE    $BE01   JP       V0, $E01        ; Jump to V0 + E01
$EE0    $17D9   JP       $7D9            ; Jump to 7D9
$EE2    $B8C2   JP       V0, $8C2        ; Jump to V0 + 8C2
$EE4    $7C6A   ADD      VC, #6A         ; Add 106 to VC
$EE6    $6F0F   LD       VF, #0F         ; Load 15 into VF
$EE8    $95B5   UNKNOWN  $95B5           ; Unknown 9xxx instruction
$EEA    $D51D   DRW      V5, V1, #D      ; Draw 13-byte sprite at V5, V1
$EEC    $F974   UNKNOWN  F974            ; Unknown Fxxx instruction
$EEE    $8059   UNKNOWN  8059            ; Unknown 8xxx instruction
$EF0    $F5F5   UNKNOWN  F5F5            ; Unknown Fxxx instruction
$EF2    $6669   LD       V6, #69         ; Load 105 into V6
$EF4    $1465   JP       $465            ; Jump to 465
$EF6    $307B   SE       V0, #7B         ; Skip if V0 == 123
$EF8    $D848   DRW      V8, V4, #8      ; Draw 8-byte sprite at V8, V4
$EFA    $1C73   JP       $C73            ; Jump to C73
$EFC    $B779   JP       V0, $779        ; Jump to V0 + 779
$EFE    $11BB   JP       $1BB            ; Jump to 1BB
$F00    $E498   UNKNOWN  $E498           ; Unknown Exxx instruction
$F02    $F5E5   UNKNOWN  F5E5            ; Unknown Fxxx instruction
$F04    $0846   SYS      $846            ; System call to 846
$F06    $7DEA   ADD      VD, #EA         ; Add 234 to VD
$F08    $9804   UNKNOWN  $9804           ; Unknown 9xxx instruction
$F0A    $3D2C   SE       VD, #2C         ; Skip if VD == 44
$F0C    $1008   JP       $008            ; Jump to 008
$F0E    $CE22   RND      VE, #22         ; VE = random & 22
$F10    $C9E7   RND      V9, #E7         ; V9 = random & E7
$F12    $5B82   UNKNOWN  $5B82           ; Unknown 5xxx instruction
$F14    $716D   ADD      V1, #6D         ; Add 109 to V1
$F16    $D529   DRW      V5, V2, #9      ; Draw 9-byte sprite at V5, V2
$F18    $3AA7   SE       VA, #A7         ; Skip if VA == 167
$F1A    $8F0B   UNKNOWN  8F0B            ; Unknown 8xxx instruction
$F1C    $47ED   SNE      V7, #ED         ; Skip if V7 != 237
$F1E    $ED6D   UNKNOWN  $ED6D           ; Unknown Exxx instruction
$F20    $6B3F   LD       VB, #3F         ; Load 63 into VB
$F22    $BBE0   JP       V0, $BE0        ; Jump to V0 + BE0
$F24    $5562   UNKNOWN  $5562           ; Unknown 5xxx instruction
$F26    $56E2   UNKNOWN  $56E2           ; Unknown 5xxx instruction
$F28    $3F2C   SE       VF, #2C         ; Skip if VF == 44
$F2A    $87A6   SHR      V7              ; V7 >>= 1, VF = LSB
$F2C    $45C8   SNE      V5, #C8         ; Skip if V5 != 200
$F2E    $6D02   LD       VD, #02         ; Load 2 into VD
$F30    $E2DD   UNKNOWN  $E2DD           ; Unknown Exxx instruction
$F32    $6009   LD       V0, #09         ; Load 9 into V0
$F34    $7245   ADD      V2, #45         ; Add 69 to V2
$F36    $9855   UNKNOWN  $9855           ; Unknown 9xxx instruction
$F38    $3FC0   SE       VF, #C0         ; Skip if VF == 192
$F3A    $BB00   JP       V0, $B00        ; Jump to V0 + B00
$F3C    $177F   JP       $77F            ; Jump to 77F
$F3E    $DBFC   DRW      VB, VF, #C      ; Draw 12-byte sprite at VB, VF
$F40    $F127   UNKNOWN  F127            ; Unknown Fxxx instruction
$F42    $41F3   SNE      V1, #F3         ; Skip if V1 != 243
$F44    $4799   SNE      V7, #99         ; Skip if V7 != 153
$F46    $1AB5   JP       $AB5            ; Jump to AB5
$F48    $1A9F   JP       $A9F            ; Jump to A9F
$F4A    $0339   SYS      $339            ; System call to 339
$F4C    $20AA   CALL     $0AA            ; Call subroutine at 0AA
$F4E    $A524   LD       I, $524         ; Load 524 into I
$F50    $5F0B   UNKNOWN  $5F0B           ; Unknown 5xxx instruction
$F52    $4A0C   SNE      VA, #0C         ; Skip if VA != 12
$F54    $EC64   UNKNOWN  $EC64           ; Unknown Exxx instruction
$F56    $C041   RND      V0, #41         ; V0 = random & 41
$F58    $53D8   UNKNOWN  $53D8           ; Unknown 5xxx instruction
$F5A    $0C74   SYS      $C74            ; System call to C74
$F5C    $E04B   UNKNOWN  $E04B           ; Unknown Exxx instruction
$F5E    $8F18   UNKNOWN  8F18            ; Unknown 8xxx instruction
$F60    $45AE   SNE      V5, #AE         ; Skip if V5 != 174
$F62    $B4E7   JP       V0, $4E7        ; Jump to V0 + 4E7
$F64    $93C5   UNKNOWN  $93C5           ; Unknown 9xxx instruction
$F66    $DC43   DRW      VC, V4, #3      ; Draw 3-byte sprite at VC, V4
$F68    $64E0   LD       V4, #E0         ; Load 224 into V4
$F6A    $C8A5   RND      V8, #A5         ; V8 = random & A5
$F6C    $5BF4   UNKNOWN  $5BF4           ; Unknown 5xxx instruction
$F6E    $5415   UNKNOWN  $5415           ; Unknown 5xxx instruction
$F70    $157B   JP       $57B            ; Jump to 57B
$F72    $85B8   UNKNOWN  85B8            ; Unknown 8xxx instruction
$F74    $C1D4   RND      V1, #D4         ; V1 = random & D4
$F76    $BBDF   JP       V0, $BDF        ; Jump to V0 + BDF
$F78    $0A42   SYS      $A42            ; System call to A42
$F7A    $0A15   SYS      $A15            ; System call to A15
$F7C    $D2E0   DRW      V2, VE, #0      ; Draw 0-byte sprite at V2, VE
$F7E    $19B4   JP       $9B4            ; Jump to 9B4
$F80    $9634   UNKNOWN  $9634           ; Unknown 9xxx instruction
$F82    $3EE3   SE       VE, #E3         ; Skip if VE == 227
$F84    $9541   UNKNOWN  $9541           ; Unknown 9xxx instruction
$F86    $0C00   SYS      $C00            ; System call to C00
$F88    $39B1   SE       V9, #B1         ; Skip if V9 == 177
$F8A    $0450   SYS      $450            ; System call to 450
$F8C    $A736   LD       I, $736         ; Load 736 into I
$F8E    $32F8   SE       V2, #F8         ; Skip if V2 == 248
$F90    $F0A9   UNKNOWN  F0A9            ; Unknown Fxxx instruction
$F92    $F1D4   UNKNOWN  F1D4            ; Unknown Fxxx instruction
$F94    $28EB   CALL     $8EB            ; Call subroutine at 8EB
$F96    $0C68   SYS      $C68            ; System call to C68
$F98    $F6DA   UNKNOWN  F6DA            ; Unknown Fxxx instruction
$F9A    $E3BB   UNKNOWN  $E3BB           ; Unknown Exxx instruction
$F9C    $4FA3   SNE      VF, #A3         ; Skip if VF != 163
$F9E    $33A8   SE       V3, #A8         ; Skip if V3 == 168
$FA0    $3080   SE       V0, #80         ; Skip if V0 == 128
$FA2    $6456   LD       V4, #56         ; Load 86 into V4
$FA4    $BBF3   JP       V0, $BF3        ; Jump to V0 + BF3
$FA6    $D42B   DRW      V4, V2, #B      ; Draw 11-byte sprite at V4, V2
$FA8    $E2AE   UNKNOWN  $E2AE           ; Unknown Exxx instruction
$FAA    $C2D8   RND      V2, #D8         ; V2 = random & D8
$FAC    $6649   LD       V6, #49         ; Load 73 into V6
$FAE    $DABF   DRW      VA, VB, #F      ; Draw 15-byte sprite at VA, VB
$FB0    $2835   CALL     $835            ; Call subroutine at 835
$FB2    $5E0F   UNKNOWN  $5E0F           ; Unknown 5xxx instruction
$FB4    $5A43   UNKNOWN  $5A43           ; Unknown 5xxx instruction
$FB6    $3F30   SE       VF, #30         ; Skip if VF == 48
$FB8    $665A   LD       V6, #5A         ; Load 90 into V6
$FBA    $7157   ADD      V1, #57         ; Add 87 to V1
$FBC    $F148   UNKNOWN  F148            ; Unknown Fxxx instruction
$FBE    $65E8   LD       V5, #E8         ; Load 232 into V5
$FC0    $B32B   JP       V0, $32B        ; Jump to V0 + 32B
$FC2    $8853   XOR      V8, V5          ; V8 ^= V5
$FC4    $F393   UNKNOWN  F393            ; Unknown Fxxx instruction
$FC6    $68D5   LD       V8, #D5         ; Load 213 into V8
$FC8    $642E   LD       V4, #2E         ; Load 46 into V4
$FCA    $CDD6   RND      VD, #D6         ; VD = random & D6
$FCC    $8528   UNKNOWN  8528            ; Unknown 8xxx instruction
$FCE    $D949   DRW      V9, V4, #9      ; Draw 9-byte sprite at V9, V4
$FD0    $696A   LD       V9, #6A         ; Load 106 into V9
$FD2    $99B4   UNKNOWN  $99B4           ; Unknown 9xxx instruction
$FD4    $F91B   UNKNOWN  F91B            ; Unknown Fxxx instruction
$FD6    $3908   SE       V9, #08         ; Skip if V9 == 8
$FD8    $E1FE   UNKNOWN  $E1FE           ; Unknown Exxx instruction
$FDA    $B1A4   JP       V0, $1A4        ; Jump to V0 + 1A4
$FDC    $1936   JP       $936            ; Jump to 936
$FDE    $5A3C   UNKNOWN  $5A3C           ; Unknown 5xxx instruction
$FE0    $6BE5   LD       VB, #E5         ; Load 229 into VB
$FE2    $B779   JP       V0, $779        ; Jump to V0 + 779
$FE4    $EF21   UNKNOWN  $EF21           ; Unknown Exxx instruction
$FE6    $94DF   UNKNOWN  $94DF           ; Unknown 9xxx instruction
$FE8    $5309   UNKNOWN  $5309           ; Unknown 5xxx instruction
$FEA    $146B   JP       $46B            ; Jump to 46B
$FEC    $1940   JP       $940            ; Jump to 940
$FEE    $75DC   ADD      V5, #DC         ; Add 220 to V5
$FF0    $149D   JP       $49D            ; Jump to 49D
$FF2    $980F   UNKNOWN  $980F           ; Unknown 9xxx instruction
$FF4    $4F96   SNE      VF, #96         ; Skip if VF != 150
$FF6    $33DE   SE       V3, #DE         ; Skip if V3 == 222
$FF8    $078C   SYS      $78C            ; System call to 78C
$FFA    $B680   JP       V0, $680        ; Jump to V0 + 680
$FFC    $6599   LD       V5, #99         ; Load 153 into V5
$FFE    $D688   DRW      V6, V8, #8      ; Draw 8-byte sprite at V6, V8

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 478 (26.7%)
  LD      : 237 (13.2%)
  JP      : 219 (12.2%)
  SE      : 140 ( 7.8%)
  SNE     : 116 ( 6.5%)
  RND     : 115 ( 6.4%)
  SYS     : 113 ( 6.3%)
  DRW     : 112 ( 6.2%)
  CALL    : 112 ( 6.2%)
  ADD     : 103 ( 5.7%)
  SHR     :  12 ( 0.7%)
  SUBN    :   6 ( 0.3%)
  SUB     :   6 ( 0.3%)
  SHL     :   6 ( 0.3%)
  XOR     :   6 ( 0.3%)
  AND     :   6 ( 0.3%)
  OR      :   4 ( 0.2%)
  SKP     :   1 ( 0.1%)

Memory Operations: 340 (19.0%)
Arithmetic Operations: 131 (7.3%)
