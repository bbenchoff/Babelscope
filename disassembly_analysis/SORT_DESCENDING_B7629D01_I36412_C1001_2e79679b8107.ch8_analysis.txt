
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B7629D01_I36412_C1001_2e79679b8107.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 7629
Instance: 36412
Direction: descending
Final Array: [250, 150, 132, 132, 132, 132, 132, 132]
Operations: R:0 W:6 C:52 S:64

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 98
Sort Array References:
  $206: LD I, $70C ; Load 70C into I
  $208: LD I, $212 ; Load 212 into I
  $226: LD I, $658 ; Load 658 into I
  $256: LD I, $B04 ; Load B04 into I
  $29A: LD I, $D18 ; Load D18 into I
  $2E0: LD I, $206 ; Load 206 into I
  $2F2: LD I, $1F5 ; Load 1F5 into I
  $36E: LD I, $23F ; Load 23F into I
  $3A6: LD I, $509 ; Load 509 into I
  $3F6: LD I, $1DF ; Load 1DF into I
  $402: LD I, $045 ; Load 045 into I
  $440: LD I, $50B ; Load 50B into I
  $44A: LD I, $355 ; Load 355 into I
  $45A: LD I, $4E2 ; Load 4E2 into I
  $45E: LD I, $F0D ; Load F0D into I
  $47E: LD I, $D74 ; Load D74 into I
  $480: LD I, $579 ; Load 579 into I
  $48C: LD I, $64D ; Load 64D into I
  $4A4: LD I, $DF4 ; Load DF4 into I
  $4A6: LD I, $46C ; Load 46C into I
  $4AE: LD I, $F5E ; Load F5E into I
  $4C4: LD I, $A73 ; Load A73 into I
  $4D6: LD I, $EC9 ; Load EC9 into I
  $506: LD I, $6E8 ; Load 6E8 into I
  $50C: LD I, $A14 ; Load A14 into I
  $524: LD I, $9FD ; Load 9FD into I
  $540: LD I, $318 ; Load 318 into I
  $56A: LD I, $D47 ; Load D47 into I
  $58E: LD I, $250 ; Load 250 into I
  $5AE: LD I, $513 ; Load 513 into I
  $5CA: LD I, $59B ; Load 59B into I
  $5F0: LD I, $DBE ; Load DBE into I
  $61A: LD I, $A53 ; Load A53 into I
  $636: LD I, $FF3 ; Load FF3 into I
  $63A: LD I, $3D2 ; Load 3D2 into I
  $66E: LD I, $2C0 ; Load 2C0 into I
  $6D0: LD I, $3F3 ; Load 3F3 into I
  $71E: LD I, $BBA ; Load BBA into I
  $724: LD I, $1E7 ; Load 1E7 into I
  $72E: LD I, $891 ; Load 891 into I
  $746: LD I, $8B5 ; Load 8B5 into I
  $74C: LD I, $914 ; Load 914 into I
  $75E: LD I, $E41 ; Load E41 into I
  $7DA: LD I, $C81 ; Load C81 into I
  $880: LD I, $2BE ; Load 2BE into I
  $8A0: LD I, $8D4 ; Load 8D4 into I
  $8AA: LD I, $9C7 ; Load 9C7 into I
  $8B2: LD I, $4B5 ; Load 4B5 into I
  $8C2: LD I, $6FE ; Load 6FE into I
  $908: LD I, $85D ; Load 85D into I
  $910: LD I, $058 ; Load 058 into I
  $918: LD I, $C69 ; Load C69 into I
  $93A: LD I, $3B8 ; Load 3B8 into I
  $974: LD I, $B83 ; Load B83 into I
  $9A0: LD I, $1B9 ; Load 1B9 into I
  $9DA: LD I, $B3F ; Load B3F into I
  $A0C: LD I, $0B9 ; Load 0B9 into I
  $A34: LD I, $D69 ; Load D69 into I
  $A64: LD I, $909 ; Load 909 into I
  $AA6: LD I, $CB9 ; Load CB9 into I
  $AB2: LD I, $0B5 ; Load 0B5 into I
  $ADC: LD I, $EF6 ; Load EF6 into I
  $AF0: LD I, $079 ; Load 079 into I
  $B28: LD I, $0BE ; Load 0BE into I
  $B3E: LD I, $642 ; Load 642 into I
  $B80: LD I, $4B1 ; Load 4B1 into I
  $BAA: LD I, $635 ; Load 635 into I
  $BBE: LD I, $609 ; Load 609 into I
  $BEE: LD I, $01E ; Load 01E into I
  $C18: LD I, $686 ; Load 686 into I
  $C44: LD I, $8AA ; Load 8AA into I
  $C4A: LD I, $B8F ; Load B8F into I
  $C6A: LD I, $963 ; Load 963 into I
  $C78: LD I, $D58 ; Load D58 into I
  $CF8: LD I, $2C2 ; Load 2C2 into I
  $D1A: LD I, $57C ; Load 57C into I
  $D1C: LD I, $19E ; Load 19E into I
  $D24: LD I, $940 ; Load 940 into I
  $D2C: LD [I], V0 ; Store V0-V0 at I
  $D64: LD I, $93E ; Load 93E into I
  $D82: LD I, $978 ; Load 978 into I
  $D94: LD I, $8E3 ; Load 8E3 into I
  $DA0: LD I, $E5C ; Load E5C into I
  $DB0: LD I, $3E3 ; Load 3E3 into I
  $DCA: LD I, $EC1 ; Load EC1 into I
  $E3E: LD I, $2A3 ; Load 2A3 into I
  $E52: LD I, $E18 ; Load E18 into I
  $E78: LD I, $EC4 ; Load EC4 into I
  $E9E: LD I, $EEB ; Load EEB into I
  $EA6: LD I, $C1B ; Load C1B into I
  $ED8: LD I, $73B ; Load 73B into I
  $F1E: LD I, $477 ; Load 477 into I
  $F58: LD I, $612 ; Load 612 into I
  $F60: LD I, $214 ; Load 214 into I
  $F8E: LD I, $192 ; Load 192 into I
  $F98: LD I, $D5C ; Load D5C into I
  $FB6: LD I, $54F ; Load 54F into I
  $FD0: LD I, $19A ; Load 19A into I

CONTROL FLOW ANALYSIS:
Jumps: 219
Calls: 122
Branches: 253
Loops: 134
Loop Structures:
  $254 -> $230 (backward jump)
  $270 -> $1F0 (backward jump)
  $2A6 -> $0B1 (backward jump)
  $2AC -> $24D (backward jump)
  $3D6 -> $18F (backward jump)
  $3F8 -> $28E (backward jump)
  $3FE -> $22B (backward jump)
  $458 -> $412 (backward jump)
  $4CA -> $0BF (backward jump)
  $4CC -> $31A (backward jump)
  $596 -> $055 (backward jump)
  $5BA -> $534 (backward jump)
  $5C8 -> $0F1 (backward jump)
  $5D0 -> $52F (backward jump)
  $5E8 -> $134 (backward jump)
  $5FC -> $016 (backward jump)
  $604 -> $4DC (backward jump)
  $60E -> $5DD (backward jump)
  $64A -> $024 (backward jump)
  $662 -> $4E0 (backward jump)
  $686 -> $140 (backward jump)
  $688 -> $4A7 (backward jump)
  $69A -> $3F1 (backward jump)
  $6C8 -> $1E1 (backward jump)
  $6CA -> $2C1 (backward jump)
  $6DA -> $31F (backward jump)
  $6DC -> $14E (backward jump)
  $6F4 -> $3C7 (backward jump)
  $702 -> $369 (backward jump)
  $7AE -> $214 (backward jump)
  $7BC -> $7B2 (backward jump)
  $7E0 -> $751 (backward jump)
  $7E2 -> $696 (backward jump)
  $7EE -> $544 (backward jump)
  $82A -> $3CC (backward jump)
  $87C -> $016 (backward jump)
  $882 -> $341 (backward jump)
  $8A6 -> $4D6 (backward jump)
  $8BE -> $4D1 (backward jump)
  $8C6 -> $5B9 (backward jump)
  $8D2 -> $3C2 (backward jump)
  $8DC -> $60E (backward jump)
  $932 -> $574 (backward jump)
  $942 -> $0C3 (backward jump)
  $94C -> $389 (backward jump)
  $954 -> $74B (backward jump)
  $982 -> $364 (backward jump)
  $990 -> $5A9 (backward jump)
  $996 -> $870 (backward jump)
  $9A4 -> $09C (backward jump)
  $9A8 -> $0A8 (backward jump)
  $9AC -> $46A (backward jump)
  $9BA -> $44B (backward jump)
  $9C6 -> $82B (backward jump)
  $9D4 -> $3C7 (backward jump)
  $A04 -> $90F (backward jump)
  $A0A -> $346 (backward jump)
  $A10 -> $9A3 (backward jump)
  $A2A -> $4A1 (backward jump)
  $A4C -> $470 (backward jump)
  $A74 -> $2FD (backward jump)
  $A80 -> $5D1 (backward jump)
  $A8A -> $29F (backward jump)
  $AD0 -> $8A3 (backward jump)
  $AE4 -> $37B (backward jump)
  $AEC -> $267 (backward jump)
  $AEE -> $3A6 (backward jump)
  $AFC -> $923 (backward jump)
  $B24 -> $4CA (backward jump)
  $B78 -> $4B9 (backward jump)
  $BC2 -> $036 (backward jump)
  $C20 -> $492 (backward jump)
  $C26 -> $487 (backward jump)
  $C4C -> $528 (backward jump)
  $C50 -> $526 (backward jump)
  $C5A -> $0A8 (backward jump)
  $C8E -> $855 (backward jump)
  $CAE -> $937 (backward jump)
  $CB2 -> $196 (backward jump)
  $CBC -> $405 (backward jump)
  $CC6 -> $4A5 (backward jump)
  $CD0 -> $BC3 (backward jump)
  $CE0 -> $814 (backward jump)
  $CEC -> $C11 (backward jump)
  $D0C -> $667 (backward jump)
  $D34 -> $D28 (backward jump)
  $D3A -> $384 (backward jump)
  $D44 -> $85D (backward jump)
  $D46 -> $B80 (backward jump)
  $D4A -> $6CE (backward jump)
  $D5A -> $42D (backward jump)
  $D84 -> $606 (backward jump)
  $D90 -> $748 (backward jump)
  $D9A -> $107 (backward jump)
  $DC2 -> $40D (backward jump)
  $DCE -> $A18 (backward jump)
  $DE0 -> $3E7 (backward jump)
  $DFE -> $6F8 (backward jump)
  $E1C -> $A9C (backward jump)
  $E1E -> $B02 (backward jump)
  $E56 -> $C09 (backward jump)
  $E70 -> $81D (backward jump)
  $E74 -> $9A6 (backward jump)
  $E80 -> $E0D (backward jump)
  $E8A -> $A1A (backward jump)
  $E92 -> $31E (backward jump)
  $EA4 -> $7CC (backward jump)
  $EB6 -> $D12 (backward jump)
  $EBA -> $CFF (backward jump)
  $ED2 -> $2BE (backward jump)
  $EFA -> $566 (backward jump)
  $F04 -> $269 (backward jump)
  $F08 -> $286 (backward jump)
  $F12 -> $B0E (backward jump)
  $F22 -> $03B (backward jump)
  $F2A -> $E09 (backward jump)
  $F2C -> $29D (backward jump)
  $F3A -> $D54 (backward jump)
  $F40 -> $E88 (backward jump)
  $F5A -> $654 (backward jump)
  $F62 -> $6D8 (backward jump)
  $F80 -> $F06 (backward jump)
  $F88 -> $EA8 (backward jump)
  $F9E -> $4B0 (backward jump)
  $FAE -> $D9F (backward jump)
  $FB8 -> $19D (backward jump)
  $FBA -> $DF6 (backward jump)
  $FBC -> $822 (backward jump)
  $FC0 -> $259 (backward jump)
  $FD4 -> $933 (backward jump)
  $FD8 -> $700 (backward jump)
  $FE8 -> $12C (backward jump)
  $FF2 -> $E9A (backward jump)
  $FFE -> $15A (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $52AD   UNKNOWN  $52AD           ; Unknown 5xxx instruction
$202    $214B   CALL     $14B            ; Call subroutine at 14B
$204    $95FA   UNKNOWN  $95FA           ; Unknown 9xxx instruction
$206    $A70C   LD       I, $70C         ; Load 70C into I
$208    $A212   LD       I, $212         ; Load 212 into I
$20A    $0584   SYS      $584            ; System call to 584
$20C    $73BB   ADD      V3, #BB         ; Add 187 to V3
$20E    $B2F4   JP       V0, $2F4        ; Jump to V0 + 2F4
$210    $C69F   RND      V6, #9F         ; V6 = random & 9F
$212    $E1B7   UNKNOWN  $E1B7           ; Unknown Exxx instruction
$214    $ED16   UNKNOWN  $ED16           ; Unknown Exxx instruction
$216    $7D69   ADD      VD, #69         ; Add 105 to VD
$218    $E814   UNKNOWN  $E814           ; Unknown Exxx instruction
$21A    $DC7B   DRW      VC, V7, #B      ; Draw 11-byte sprite at VC, V7
$21C    $7ED4   ADD      VE, #D4         ; Add 212 to VE
$21E    $4C64   SNE      VC, #64         ; Skip if VC != 100
$220    $3FB6   SE       VF, #B6         ; Skip if VF == 182
$222    $7B79   ADD      VB, #79         ; Add 121 to VB
$224    $0649   SYS      $649            ; System call to 649
$226    $A658   LD       I, $658         ; Load 658 into I
$228    $C45D   RND      V4, #5D         ; V4 = random & 5D
$22A    $251F   CALL     $51F            ; Call subroutine at 51F
$22C    $339B   SE       V3, #9B         ; Skip if V3 == 155
$22E    $7572   ADD      V5, #72         ; Add 114 to V5
$230    $D845   DRW      V8, V4, #5      ; Draw 5-byte sprite at V8, V4
$232    $446E   SNE      V4, #6E         ; Skip if V4 != 110
$234    $70DA   ADD      V0, #DA         ; Add 218 to V0
$236    $E058   UNKNOWN  $E058           ; Unknown Exxx instruction
$238    $81FB   UNKNOWN  81FB            ; Unknown 8xxx instruction
$23A    $1EE8   JP       $EE8            ; Jump to EE8
$23C    $C88A   RND      V8, #8A         ; V8 = random & 8A
$23E    $80A4   ADD      V0, VA          ; V0 += VA, VF = carry
$240    $5D69   UNKNOWN  $5D69           ; Unknown 5xxx instruction
$242    $6CF2   LD       VC, #F2         ; Load 242 into VC
$244    $0301   SYS      $301            ; System call to 301
$246    $5A0B   UNKNOWN  $5A0B           ; Unknown 5xxx instruction
$248    $018C   SYS      $18C            ; System call to 18C
$24A    $247F   CALL     $47F            ; Call subroutine at 47F
$24C    $238D   CALL     $38D            ; Call subroutine at 38D
$24E    $C6B9   RND      V6, #B9         ; V6 = random & B9
$250    $89AF   UNKNOWN  89AF            ; Unknown 8xxx instruction
$252    $374A   SE       V7, #4A         ; Skip if V7 == 74
$254    $B230   JP       V0, $230        ; Jump to V0 + 230
$256    $AB04   LD       I, $B04         ; Load B04 into I
$258    $C8C2   RND      V8, #C2         ; V8 = random & C2
$25A    $6775   LD       V7, #75         ; Load 117 into V7
$25C    $88C1   OR       V8, VC          ; V8 |= VC
$25E    $D446   DRW      V4, V4, #6      ; Draw 6-byte sprite at V4, V4
$260    $23A5   CALL     $3A5            ; Call subroutine at 3A5
$262    $3044   SE       V0, #44         ; Skip if V0 == 68
$264    $C918   RND      V9, #18         ; V9 = random & 18
$266    $EC82   UNKNOWN  $EC82           ; Unknown Exxx instruction
$268    $D476   DRW      V4, V7, #6      ; Draw 6-byte sprite at V4, V7
$26A    $B720   JP       V0, $720        ; Jump to V0 + 720
$26C    $1BE0   JP       $BE0            ; Jump to BE0
$26E    $40B3   SNE      V0, #B3         ; Skip if V0 != 179
$270    $11F0   JP       $1F0            ; Jump to 1F0
$272    $3211   SE       V2, #11         ; Skip if V2 == 17
$274    $BDA7   JP       V0, $DA7        ; Jump to V0 + DA7
$276    $1954   JP       $954            ; Jump to 954
$278    $D9DC   DRW      V9, VD, #C      ; Draw 12-byte sprite at V9, VD
$27A    $CD0B   RND      VD, #0B         ; VD = random & 0B
$27C    $E047   UNKNOWN  $E047           ; Unknown Exxx instruction
$27E    $53EF   UNKNOWN  $53EF           ; Unknown 5xxx instruction
$280    $B49D   JP       V0, $49D        ; Jump to V0 + 49D
$282    $DE52   DRW      VE, V5, #2      ; Draw 2-byte sprite at VE, V5
$284    $432F   SNE      V3, #2F         ; Skip if V3 != 47
$286    $8012   AND      V0, V1          ; V0 &= V1
$288    $F68E   UNKNOWN  F68E            ; Unknown Fxxx instruction
$28A    $F889   UNKNOWN  F889            ; Unknown Fxxx instruction
$28C    $BED4   JP       V0, $ED4        ; Jump to V0 + ED4
$28E    $64E3   LD       V4, #E3         ; Load 227 into V4
$290    $E46B   UNKNOWN  $E46B           ; Unknown Exxx instruction
$292    $3096   SE       V0, #96         ; Skip if V0 == 150
$294    $5F62   UNKNOWN  $5F62           ; Unknown 5xxx instruction
$296    $70E3   ADD      V0, #E3         ; Add 227 to V0
$298    $C292   RND      V2, #92         ; V2 = random & 92
$29A    $AD18   LD       I, $D18         ; Load D18 into I
$29C    $0EF9   SYS      $EF9            ; System call to EF9
$29E    $F763   UNKNOWN  F763            ; Unknown Fxxx instruction
$2A0    $C63D   RND      V6, #3D         ; V6 = random & 3D
$2A2    $9321   UNKNOWN  $9321           ; Unknown 9xxx instruction
$2A4    $0D7B   SYS      $D7B            ; System call to D7B
$2A6    $10B1   JP       $0B1            ; Jump to 0B1
$2A8    $CE6E   RND      VE, #6E         ; VE = random & 6E
$2AA    $6D56   LD       VD, #56         ; Load 86 into VD
$2AC    $124D   JP       $24D            ; Jump to 24D
$2AE    $E0F5   UNKNOWN  $E0F5           ; Unknown Exxx instruction
$2B0    $EAC5   UNKNOWN  $EAC5           ; Unknown Exxx instruction
$2B2    $B770   JP       V0, $770        ; Jump to V0 + 770
$2B4    $383C   SE       V8, #3C         ; Skip if V8 == 60
$2B6    $42B4   SNE      V2, #B4         ; Skip if V2 != 180
$2B8    $DD15   DRW      VD, V1, #5      ; Draw 5-byte sprite at VD, V1
$2BA    $9FFA   UNKNOWN  $9FFA           ; Unknown 9xxx instruction
$2BC    $685A   LD       V8, #5A         ; Load 90 into V8
$2BE    $519F   UNKNOWN  $519F           ; Unknown 5xxx instruction
$2C0    $8522   AND      V5, V2          ; V5 &= V2
$2C2    $EB84   UNKNOWN  $EB84           ; Unknown Exxx instruction
$2C4    $CE18   RND      VE, #18         ; VE = random & 18
$2C6    $E6CB   UNKNOWN  $E6CB           ; Unknown Exxx instruction
$2C8    $3429   SE       V4, #29         ; Skip if V4 == 41
$2CA    $C6A8   RND      V6, #A8         ; V6 = random & A8
$2CC    $922A   UNKNOWN  $922A           ; Unknown 9xxx instruction
$2CE    $67CE   LD       V7, #CE         ; Load 206 into V7
$2D0    $65A1   LD       V5, #A1         ; Load 161 into V5
$2D2    $3AA5   SE       VA, #A5         ; Skip if VA == 165
$2D4    $1820   JP       $820            ; Jump to 820
$2D6    $DCFD   DRW      VC, VF, #D      ; Draw 13-byte sprite at VC, VF
$2D8    $D910   DRW      V9, V1, #0      ; Draw 0-byte sprite at V9, V1
$2DA    $9F2A   UNKNOWN  $9F2A           ; Unknown 9xxx instruction
$2DC    $5AB0   SE       VA, VB          ; Skip if VA == VB
$2DE    $3DC8   SE       VD, #C8         ; Skip if VD == 200
$2E0    $A206   LD       I, $206         ; Load 206 into I
$2E2    $99EE   UNKNOWN  $99EE           ; Unknown 9xxx instruction
$2E4    $633D   LD       V3, #3D         ; Load 61 into V3
$2E6    $FDF7   UNKNOWN  FDF7            ; Unknown Fxxx instruction
$2E8    $27F7   CALL     $7F7            ; Call subroutine at 7F7
$2EA    $FECC   UNKNOWN  FECC            ; Unknown Fxxx instruction
$2EC    $C6FC   RND      V6, #FC         ; V6 = random & FC
$2EE    $0B37   SYS      $B37            ; System call to B37
$2F0    $517D   UNKNOWN  $517D           ; Unknown 5xxx instruction
$2F2    $A1F5   LD       I, $1F5         ; Load 1F5 into I
$2F4    $0A81   SYS      $A81            ; System call to A81
$2F6    $68BC   LD       V8, #BC         ; Load 188 into V8
$2F8    $2F8B   CALL     $F8B            ; Call subroutine at F8B
$2FA    $8875   SUB      V8, V7          ; V8 -= V7, VF = !borrow
$2FC    $D2D0   DRW      V2, VD, #0      ; Draw 0-byte sprite at V2, VD
$2FE    $9B2A   UNKNOWN  $9B2A           ; Unknown 9xxx instruction
$300    $FA96   UNKNOWN  FA96            ; Unknown Fxxx instruction
$302    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$304    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$306    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$308    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$30A    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$30C    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$30E    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$310    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$312    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$314    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$316    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$318    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$31A    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$31C    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$31E    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$320    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$322    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$324    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$326    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$328    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$32A    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$32C    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$32E    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$330    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$332    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$334    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$336    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$338    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$33A    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$33C    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$33E    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$340    $8666   SHR      V6              ; V6 >>= 1, VF = LSB
$342    $EA5F   UNKNOWN  $EA5F           ; Unknown Exxx instruction
$344    $4D0D   SNE      VD, #0D         ; Skip if VD != 13
$346    $C757   RND      V7, #57         ; V7 = random & 57
$348    $EFE4   UNKNOWN  $EFE4           ; Unknown Exxx instruction
$34A    $F924   UNKNOWN  F924            ; Unknown Fxxx instruction
$34C    $0430   SYS      $430            ; System call to 430
$34E    $E5D1   UNKNOWN  $E5D1           ; Unknown Exxx instruction
$350    $846A   UNKNOWN  846A            ; Unknown 8xxx instruction
$352    $015C   SYS      $15C            ; System call to 15C
$354    $BAA3   JP       V0, $AA3        ; Jump to V0 + AA3
$356    $FD36   UNKNOWN  FD36            ; Unknown Fxxx instruction
$358    $6FCF   LD       VF, #CF         ; Load 207 into VF
$35A    $51A5   UNKNOWN  $51A5           ; Unknown 5xxx instruction
$35C    $8EC8   UNKNOWN  8EC8            ; Unknown 8xxx instruction
$35E    $04A8   SYS      $4A8            ; System call to 4A8
$360    $D9A8   DRW      V9, VA, #8      ; Draw 8-byte sprite at V9, VA
$362    $972F   UNKNOWN  $972F           ; Unknown 9xxx instruction
$364    $C3A3   RND      V3, #A3         ; V3 = random & A3
$366    $45A5   SNE      V5, #A5         ; Skip if V5 != 165
$368    $C41A   RND      V4, #1A         ; V4 = random & 1A
$36A    $7D56   ADD      VD, #56         ; Add 86 to VD
$36C    $5A96   UNKNOWN  $5A96           ; Unknown 5xxx instruction
$36E    $A23F   LD       I, $23F         ; Load 23F into I
$370    $FDBA   UNKNOWN  FDBA            ; Unknown Fxxx instruction
$372    $5042   UNKNOWN  $5042           ; Unknown 5xxx instruction
$374    $84E9   UNKNOWN  84E9            ; Unknown 8xxx instruction
$376    $4DA1   SNE      VD, #A1         ; Skip if VD != 161
$378    $FF6E   UNKNOWN  FF6E            ; Unknown Fxxx instruction
$37A    $8B77   SUBN     VB, V7          ; VB = V7 - VB, VF = !borrow
$37C    $0A1E   SYS      $A1E            ; System call to A1E
$37E    $CE7C   RND      VE, #7C         ; VE = random & 7C
$380    $491E   SNE      V9, #1E         ; Skip if V9 != 30
$382    $7D07   ADD      VD, #07         ; Add 7 to VD
$384    $C2FE   RND      V2, #FE         ; V2 = random & FE
$386    $91B0   SNE      V1, VB          ; Skip if V1 != VB
$388    $0E88   SYS      $E88            ; System call to E88
$38A    $1BFA   JP       $BFA            ; Jump to BFA
$38C    $8D87   SUBN     VD, V8          ; VD = V8 - VD, VF = !borrow
$38E    $3005   SE       V0, #05         ; Skip if V0 == 5
$390    $FBE4   UNKNOWN  FBE4            ; Unknown Fxxx instruction
$392    $0111   SYS      $111            ; System call to 111
$394    $6BDA   LD       VB, #DA         ; Load 218 into VB
$396    $2702   CALL     $702            ; Call subroutine at 702
$398    $17F8   JP       $7F8            ; Jump to 7F8
$39A    $467C   SNE      V6, #7C         ; Skip if V6 != 124
$39C    $4975   SNE      V9, #75         ; Skip if V9 != 117
$39E    $65BA   LD       V5, #BA         ; Load 186 into V5
$3A0    $0AFE   SYS      $AFE            ; System call to AFE
$3A2    $421F   SNE      V2, #1F         ; Skip if V2 != 31
$3A4    $999D   UNKNOWN  $999D           ; Unknown 9xxx instruction
$3A6    $A509   LD       I, $509         ; Load 509 into I
$3A8    $410F   SNE      V1, #0F         ; Skip if V1 != 15
$3AA    $FC70   UNKNOWN  FC70            ; Unknown Fxxx instruction
$3AC    $7D85   ADD      VD, #85         ; Add 133 to VD
$3AE    $0FD1   SYS      $FD1            ; System call to FD1
$3B0    $5110   SE       V1, V1          ; Skip if V1 == V1
$3B2    $C096   RND      V0, #96         ; V0 = random & 96
$3B4    $BC41   JP       V0, $C41        ; Jump to V0 + C41
$3B6    $4F9E   SNE      VF, #9E         ; Skip if VF != 158
$3B8    $4716   SNE      V7, #16         ; Skip if V7 != 22
$3BA    $2402   CALL     $402            ; Call subroutine at 402
$3BC    $E09E   SKP      V0              ; Skip if key V0 pressed
$3BE    $46E7   SNE      V6, #E7         ; Skip if V6 != 231
$3C0    $2D44   CALL     $D44            ; Call subroutine at D44
$3C2    $D9CE   DRW      V9, VC, #E      ; Draw 14-byte sprite at V9, VC
$3C4    $0F85   SYS      $F85            ; System call to F85
$3C6    $31F6   SE       V1, #F6         ; Skip if V1 == 246
$3C8    $7CD0   ADD      VC, #D0         ; Add 208 to VC
$3CA    $9E8D   UNKNOWN  $9E8D           ; Unknown 9xxx instruction
$3CC    $2607   CALL     $607            ; Call subroutine at 607
$3CE    $486E   SNE      V8, #6E         ; Skip if V8 != 110
$3D0    $34FF   SE       V4, #FF         ; Skip if V4 == 255
$3D2    $4780   SNE      V7, #80         ; Skip if V7 != 128
$3D4    $71B9   ADD      V1, #B9         ; Add 185 to V1
$3D6    $B18F   JP       V0, $18F        ; Jump to V0 + 18F
$3D8    $C9F7   RND      V9, #F7         ; V9 = random & F7
$3DA    $D85E   DRW      V8, V5, #E      ; Draw 14-byte sprite at V8, V5
$3DC    $254B   CALL     $54B            ; Call subroutine at 54B
$3DE    $6406   LD       V4, #06         ; Load 6 into V4
$3E0    $0B69   SYS      $B69            ; System call to B69
$3E2    $D388   DRW      V3, V8, #8      ; Draw 8-byte sprite at V3, V8
$3E4    $6190   LD       V1, #90         ; Load 144 into V1
$3E6    $9B30   SNE      VB, V3          ; Skip if VB != V3
$3E8    $807F   UNKNOWN  807F            ; Unknown 8xxx instruction
$3EA    $BE87   JP       V0, $E87        ; Jump to V0 + E87
$3EC    $923B   UNKNOWN  $923B           ; Unknown 9xxx instruction
$3EE    $D061   DRW      V0, V6, #1      ; Draw 1-byte sprite at V0, V6
$3F0    $785A   ADD      V8, #5A         ; Add 90 to V8
$3F2    $C9E1   RND      V9, #E1         ; V9 = random & E1
$3F4    $F777   UNKNOWN  F777            ; Unknown Fxxx instruction
$3F6    $A1DF   LD       I, $1DF         ; Load 1DF into I
$3F8    $128E   JP       $28E            ; Jump to 28E
$3FA    $861B   UNKNOWN  861B            ; Unknown 8xxx instruction
$3FC    $6CAF   LD       VC, #AF         ; Load 175 into VC
$3FE    $B22B   JP       V0, $22B        ; Jump to V0 + 22B
$400    $FC4E   UNKNOWN  FC4E            ; Unknown Fxxx instruction
$402    $A045   LD       I, $045         ; Load 045 into I
$404    $99A3   UNKNOWN  $99A3           ; Unknown 9xxx instruction
$406    $5E05   UNKNOWN  $5E05           ; Unknown 5xxx instruction
$408    $7C0E   ADD      VC, #0E         ; Add 14 to VC
$40A    $6275   LD       V2, #75         ; Load 117 into V2
$40C    $EAF9   UNKNOWN  $EAF9           ; Unknown Exxx instruction
$40E    $4191   SNE      V1, #91         ; Skip if V1 != 145
$410    $5E50   SE       VE, V5          ; Skip if VE == V5
$412    $3DFB   SE       VD, #FB         ; Skip if VD == 251
$414    $2724   CALL     $724            ; Call subroutine at 724
$416    $0E14   SYS      $E14            ; System call to E14
$418    $3431   SE       V4, #31         ; Skip if V4 == 49
$41A    $66BE   LD       V6, #BE         ; Load 190 into V6
$41C    $D835   DRW      V8, V3, #5      ; Draw 5-byte sprite at V8, V3
$41E    $733C   ADD      V3, #3C         ; Add 60 to V3
$420    $2FE0   CALL     $FE0            ; Call subroutine at FE0
$422    $7B69   ADD      VB, #69         ; Add 105 to VB
$424    $9FAA   UNKNOWN  $9FAA           ; Unknown 9xxx instruction
$426    $01CF   SYS      $1CF            ; System call to 1CF
$428    $ECD4   UNKNOWN  $ECD4           ; Unknown Exxx instruction
$42A    $F473   UNKNOWN  F473            ; Unknown Fxxx instruction
$42C    $02E1   SYS      $2E1            ; System call to 2E1
$42E    $DA42   DRW      VA, V4, #2      ; Draw 2-byte sprite at VA, V4
$430    $9888   UNKNOWN  $9888           ; Unknown 9xxx instruction
$432    $D20D   DRW      V2, V0, #D      ; Draw 13-byte sprite at V2, V0
$434    $DF16   DRW      VF, V1, #6      ; Draw 6-byte sprite at VF, V1
$436    $F017   UNKNOWN  F017            ; Unknown Fxxx instruction
$438    $89C7   SUBN     V9, VC          ; V9 = VC - V9, VF = !borrow
$43A    $0913   SYS      $913            ; System call to 913
$43C    $0B55   SYS      $B55            ; System call to B55
$43E    $87A8   UNKNOWN  87A8            ; Unknown 8xxx instruction
$440    $A50B   LD       I, $50B         ; Load 50B into I
$442    $669D   LD       V6, #9D         ; Load 157 into V6
$444    $D708   DRW      V7, V0, #8      ; Draw 8-byte sprite at V7, V0
$446    $F037   UNKNOWN  F037            ; Unknown Fxxx instruction
$448    $020B   SYS      $20B            ; System call to 20B
$44A    $A355   LD       I, $355         ; Load 355 into I
$44C    $9FB4   UNKNOWN  $9FB4           ; Unknown 9xxx instruction
$44E    $822D   UNKNOWN  822D            ; Unknown 8xxx instruction
$450    $9369   UNKNOWN  $9369           ; Unknown 9xxx instruction
$452    $B4AA   JP       V0, $4AA        ; Jump to V0 + 4AA
$454    $7782   ADD      V7, #82         ; Add 130 to V7
$456    $7598   ADD      V5, #98         ; Add 152 to V5
$458    $1412   JP       $412            ; Jump to 412
$45A    $A4E2   LD       I, $4E2         ; Load 4E2 into I
$45C    $F983   UNKNOWN  F983            ; Unknown Fxxx instruction
$45E    $AF0D   LD       I, $F0D         ; Load F0D into I
$460    $7580   ADD      V5, #80         ; Add 128 to V5
$462    $B68E   JP       V0, $68E        ; Jump to V0 + 68E
$464    $F5D3   UNKNOWN  F5D3            ; Unknown Fxxx instruction
$466    $8C93   XOR      VC, V9          ; VC ^= V9
$468    $B841   JP       V0, $841        ; Jump to V0 + 841
$46A    $93D5   UNKNOWN  $93D5           ; Unknown 9xxx instruction
$46C    $9705   UNKNOWN  $9705           ; Unknown 9xxx instruction
$46E    $8DA9   UNKNOWN  8DA9            ; Unknown 8xxx instruction
$470    $5637   UNKNOWN  $5637           ; Unknown 5xxx instruction
$472    $5295   UNKNOWN  $5295           ; Unknown 5xxx instruction
$474    $D88A   DRW      V8, V8, #A      ; Draw 10-byte sprite at V8, V8
$476    $CFD9   RND      VF, #D9         ; VF = random & D9
$478    $D905   DRW      V9, V0, #5      ; Draw 5-byte sprite at V9, V0
$47A    $FD31   UNKNOWN  FD31            ; Unknown Fxxx instruction
$47C    $8F7F   UNKNOWN  8F7F            ; Unknown 8xxx instruction
$47E    $AD74   LD       I, $D74         ; Load D74 into I
$480    $A579   LD       I, $579         ; Load 579 into I
$482    $C3E4   RND      V3, #E4         ; V3 = random & E4
$484    $DE59   DRW      VE, V5, #9      ; Draw 9-byte sprite at VE, V5
$486    $79E9   ADD      V9, #E9         ; Add 233 to V9
$488    $9CF3   UNKNOWN  $9CF3           ; Unknown 9xxx instruction
$48A    $E1C1   UNKNOWN  $E1C1           ; Unknown Exxx instruction
$48C    $A64D   LD       I, $64D         ; Load 64D into I
$48E    $2438   CALL     $438            ; Call subroutine at 438
$490    $5D28   UNKNOWN  $5D28           ; Unknown 5xxx instruction
$492    $873D   UNKNOWN  873D            ; Unknown 8xxx instruction
$494    $F848   UNKNOWN  F848            ; Unknown Fxxx instruction
$496    $66F9   LD       V6, #F9         ; Load 249 into V6
$498    $191F   JP       $91F            ; Jump to 91F
$49A    $CE30   RND      VE, #30         ; VE = random & 30
$49C    $E215   UNKNOWN  $E215           ; Unknown Exxx instruction
$49E    $2745   CALL     $745            ; Call subroutine at 745
$4A0    $9583   UNKNOWN  $9583           ; Unknown 9xxx instruction
$4A2    $7661   ADD      V6, #61         ; Add 97 to V6
$4A4    $ADF4   LD       I, $DF4         ; Load DF4 into I
$4A6    $A46C   LD       I, $46C         ; Load 46C into I
$4A8    $76DA   ADD      V6, #DA         ; Add 218 to V6
$4AA    $FF64   UNKNOWN  FF64            ; Unknown Fxxx instruction
$4AC    $D2A7   DRW      V2, VA, #7      ; Draw 7-byte sprite at V2, VA
$4AE    $AF5E   LD       I, $F5E         ; Load F5E into I
$4B0    $9898   UNKNOWN  $9898           ; Unknown 9xxx instruction
$4B2    $F684   UNKNOWN  F684            ; Unknown Fxxx instruction
$4B4    $254E   CALL     $54E            ; Call subroutine at 54E
$4B6    $6933   LD       V9, #33         ; Load 51 into V9
$4B8    $44CC   SNE      V4, #CC         ; Skip if V4 != 204
$4BA    $81C2   AND      V1, VC          ; V1 &= VC
$4BC    $EF08   UNKNOWN  $EF08           ; Unknown Exxx instruction
$4BE    $55DB   UNKNOWN  $55DB           ; Unknown 5xxx instruction
$4C0    $55F6   UNKNOWN  $55F6           ; Unknown 5xxx instruction
$4C2    $391F   SE       V9, #1F         ; Skip if V9 == 31
$4C4    $AA73   LD       I, $A73         ; Load A73 into I
$4C6    $49A1   SNE      V9, #A1         ; Skip if V9 != 161
$4C8    $3C2E   SE       VC, #2E         ; Skip if VC == 46
$4CA    $10BF   JP       $0BF            ; Jump to 0BF
$4CC    $B31A   JP       V0, $31A        ; Jump to V0 + 31A
$4CE    $CA52   RND      VA, #52         ; VA = random & 52
$4D0    $5E0F   UNKNOWN  $5E0F           ; Unknown 5xxx instruction
$4D2    $8EBB   UNKNOWN  8EBB            ; Unknown 8xxx instruction
$4D4    $E2C0   UNKNOWN  $E2C0           ; Unknown Exxx instruction
$4D6    $AEC9   LD       I, $EC9         ; Load EC9 into I
$4D8    $43F5   SNE      V3, #F5         ; Skip if V3 != 245
$4DA    $35E3   SE       V5, #E3         ; Skip if V5 == 227
$4DC    $3E31   SE       VE, #31         ; Skip if VE == 49
$4DE    $F40A   LD       V4, K           ; Wait for key press, store in V4
$4E0    $E89C   UNKNOWN  $E89C           ; Unknown Exxx instruction
$4E2    $1687   JP       $687            ; Jump to 687
$4E4    $0336   SYS      $336            ; System call to 336
$4E6    $F125   UNKNOWN  F125            ; Unknown Fxxx instruction
$4E8    $573B   UNKNOWN  $573B           ; Unknown 5xxx instruction
$4EA    $3405   SE       V4, #05         ; Skip if V4 == 5
$4EC    $581D   UNKNOWN  $581D           ; Unknown 5xxx instruction
$4EE    $E5A6   UNKNOWN  $E5A6           ; Unknown Exxx instruction
$4F0    $C93D   RND      V9, #3D         ; V9 = random & 3D
$4F2    $BE12   JP       V0, $E12        ; Jump to V0 + E12
$4F4    $189F   JP       $89F            ; Jump to 89F
$4F6    $DA3C   DRW      VA, V3, #C      ; Draw 12-byte sprite at VA, V3
$4F8    $77E7   ADD      V7, #E7         ; Add 231 to V7
$4FA    $D56C   DRW      V5, V6, #C      ; Draw 12-byte sprite at V5, V6
$4FC    $0F93   SYS      $F93            ; System call to F93
$4FE    $E764   UNKNOWN  $E764           ; Unknown Exxx instruction
$500    $C7B0   RND      V7, #B0         ; V7 = random & B0
$502    $59C2   UNKNOWN  $59C2           ; Unknown 5xxx instruction
$504    $57C2   UNKNOWN  $57C2           ; Unknown 5xxx instruction
$506    $A6E8   LD       I, $6E8         ; Load 6E8 into I
$508    $CB3B   RND      VB, #3B         ; VB = random & 3B
$50A    $ECFC   UNKNOWN  $ECFC           ; Unknown Exxx instruction
$50C    $AA14   LD       I, $A14         ; Load A14 into I
$50E    $8E68   UNKNOWN  8E68            ; Unknown 8xxx instruction
$510    $98B4   UNKNOWN  $98B4           ; Unknown 9xxx instruction
$512    $FB0E   UNKNOWN  FB0E            ; Unknown Fxxx instruction
$514    $B728   JP       V0, $728        ; Jump to V0 + 728
$516    $7457   ADD      V4, #57         ; Add 87 to V4
$518    $16CA   JP       $6CA            ; Jump to 6CA
$51A    $D483   DRW      V4, V8, #3      ; Draw 3-byte sprite at V4, V8
$51C    $2EEE   CALL     $EEE            ; Call subroutine at EEE
$51E    $98DC   UNKNOWN  $98DC           ; Unknown 9xxx instruction
$520    $B640   JP       V0, $640        ; Jump to V0 + 640
$522    $337D   SE       V3, #7D         ; Skip if V3 == 125
$524    $A9FD   LD       I, $9FD         ; Load 9FD into I
$526    $D214   DRW      V2, V1, #4      ; Draw 4-byte sprite at V2, V1
$528    $8874   ADD      V8, V7          ; V8 += V7, VF = carry
$52A    $8B75   SUB      VB, V7          ; VB -= V7, VF = !borrow
$52C    $0059   SYS      $059            ; System call to 059
$52E    $94A8   UNKNOWN  $94A8           ; Unknown 9xxx instruction
$530    $DE24   DRW      VE, V2, #4      ; Draw 4-byte sprite at VE, V2
$532    $8FDC   UNKNOWN  8FDC            ; Unknown 8xxx instruction
$534    $546C   UNKNOWN  $546C           ; Unknown 5xxx instruction
$536    $991C   UNKNOWN  $991C           ; Unknown 9xxx instruction
$538    $C0A0   RND      V0, #A0         ; V0 = random & A0
$53A    $82EA   UNKNOWN  82EA            ; Unknown 8xxx instruction
$53C    $7217   ADD      V2, #17         ; Add 23 to V2
$53E    $6F2C   LD       VF, #2C         ; Load 44 into VF
$540    $A318   LD       I, $318         ; Load 318 into I
$542    $D799   DRW      V7, V9, #9      ; Draw 9-byte sprite at V7, V9
$544    $C3BD   RND      V3, #BD         ; V3 = random & BD
$546    $C65D   RND      V6, #5D         ; V6 = random & 5D
$548    $6FA6   LD       VF, #A6         ; Load 166 into VF
$54A    $F2F8   UNKNOWN  F2F8            ; Unknown Fxxx instruction
$54C    $3EF4   SE       VE, #F4         ; Skip if VE == 244
$54E    $9008   UNKNOWN  $9008           ; Unknown 9xxx instruction
$550    $F8E5   UNKNOWN  F8E5            ; Unknown Fxxx instruction
$552    $2B2C   CALL     $B2C            ; Call subroutine at B2C
$554    $2F3E   CALL     $F3E            ; Call subroutine at F3E
$556    $F5C8   UNKNOWN  F5C8            ; Unknown Fxxx instruction
$558    $84B4   ADD      V4, VB          ; V4 += VB, VF = carry
$55A    $251B   CALL     $51B            ; Call subroutine at 51B
$55C    $9431   UNKNOWN  $9431           ; Unknown 9xxx instruction
$55E    $CD33   RND      VD, #33         ; VD = random & 33
$560    $F437   UNKNOWN  F437            ; Unknown Fxxx instruction
$562    $8E20   LD       VE, V2          ; VE = V2
$564    $0FE4   SYS      $FE4            ; System call to FE4
$566    $564B   UNKNOWN  $564B           ; Unknown 5xxx instruction
$568    $BE0E   JP       V0, $E0E        ; Jump to V0 + E0E
$56A    $AD47   LD       I, $D47         ; Load D47 into I
$56C    $197C   JP       $97C            ; Jump to 97C
$56E    $C9F6   RND      V9, #F6         ; V9 = random & F6
$570    $CA8C   RND      VA, #8C         ; VA = random & 8C
$572    $BC87   JP       V0, $C87        ; Jump to V0 + C87
$574    $4B2E   SNE      VB, #2E         ; Skip if VB != 46
$576    $C61B   RND      V6, #1B         ; V6 = random & 1B
$578    $762A   ADD      V6, #2A         ; Add 42 to V6
$57A    $BA40   JP       V0, $A40        ; Jump to V0 + A40
$57C    $306C   SE       V0, #6C         ; Skip if V0 == 108
$57E    $F6E5   UNKNOWN  F6E5            ; Unknown Fxxx instruction
$580    $0ADF   SYS      $ADF            ; System call to ADF
$582    $D9C0   DRW      V9, VC, #0      ; Draw 0-byte sprite at V9, VC
$584    $0D4C   SYS      $D4C            ; System call to D4C
$586    $D970   DRW      V9, V7, #0      ; Draw 0-byte sprite at V9, V7
$588    $5C09   UNKNOWN  $5C09           ; Unknown 5xxx instruction
$58A    $CF79   RND      VF, #79         ; VF = random & 79
$58C    $59DE   UNKNOWN  $59DE           ; Unknown 5xxx instruction
$58E    $A250   LD       I, $250         ; Load 250 into I
$590    $5A6D   UNKNOWN  $5A6D           ; Unknown 5xxx instruction
$592    $F268   UNKNOWN  F268            ; Unknown Fxxx instruction
$594    $456E   SNE      V5, #6E         ; Skip if V5 != 110
$596    $1055   JP       $055            ; Jump to 055
$598    $E5B8   UNKNOWN  $E5B8           ; Unknown Exxx instruction
$59A    $88CE   SHL      V8              ; V8 <<= 1, VF = MSB
$59C    $7C1E   ADD      VC, #1E         ; Add 30 to VC
$59E    $BD58   JP       V0, $D58        ; Jump to V0 + D58
$5A0    $CDBA   RND      VD, #BA         ; VD = random & BA
$5A2    $9CA8   UNKNOWN  $9CA8           ; Unknown 9xxx instruction
$5A4    $98EC   UNKNOWN  $98EC           ; Unknown 9xxx instruction
$5A6    $1F55   JP       $F55            ; Jump to F55
$5A8    $80AE   SHL      V0              ; V0 <<= 1, VF = MSB
$5AA    $4B5F   SNE      VB, #5F         ; Skip if VB != 95
$5AC    $7710   ADD      V7, #10         ; Add 16 to V7
$5AE    $A513   LD       I, $513         ; Load 513 into I
$5B0    $6EB6   LD       VE, #B6         ; Load 182 into VE
$5B2    $C62A   RND      V6, #2A         ; V6 = random & 2A
$5B4    $323E   SE       V2, #3E         ; Skip if V2 == 62
$5B6    $6E64   LD       VE, #64         ; Load 100 into VE
$5B8    $5F92   UNKNOWN  $5F92           ; Unknown 5xxx instruction
$5BA    $B534   JP       V0, $534        ; Jump to V0 + 534
$5BC    $FDD6   UNKNOWN  FDD6            ; Unknown Fxxx instruction
$5BE    $E7FD   UNKNOWN  $E7FD           ; Unknown Exxx instruction
$5C0    $9610   SNE      V6, V1          ; Skip if V6 != V1
$5C2    $EF16   UNKNOWN  $EF16           ; Unknown Exxx instruction
$5C4    $5641   UNKNOWN  $5641           ; Unknown 5xxx instruction
$5C6    $C345   RND      V3, #45         ; V3 = random & 45
$5C8    $10F1   JP       $0F1            ; Jump to 0F1
$5CA    $A59B   LD       I, $59B         ; Load 59B into I
$5CC    $3E8E   SE       VE, #8E         ; Skip if VE == 142
$5CE    $4DB1   SNE      VD, #B1         ; Skip if VD != 177
$5D0    $B52F   JP       V0, $52F        ; Jump to V0 + 52F
$5D2    $0EB5   SYS      $EB5            ; System call to EB5
$5D4    $1DFD   JP       $DFD            ; Jump to DFD
$5D6    $C0F2   RND      V0, #F2         ; V0 = random & F2
$5D8    $3C9C   SE       VC, #9C         ; Skip if VC == 156
$5DA    $45D9   SNE      V5, #D9         ; Skip if V5 != 217
$5DC    $2CD9   CALL     $CD9            ; Call subroutine at CD9
$5DE    $F270   UNKNOWN  F270            ; Unknown Fxxx instruction
$5E0    $2B9D   CALL     $B9D            ; Call subroutine at B9D
$5E2    $8153   XOR      V1, V5          ; V1 ^= V5
$5E4    $1FA3   JP       $FA3            ; Jump to FA3
$5E6    $6557   LD       V5, #57         ; Load 87 into V5
$5E8    $B134   JP       V0, $134        ; Jump to V0 + 134
$5EA    $CF48   RND      VF, #48         ; VF = random & 48
$5EC    $2099   CALL     $099            ; Call subroutine at 099
$5EE    $327C   SE       V2, #7C         ; Skip if V2 == 124
$5F0    $ADBE   LD       I, $DBE         ; Load DBE into I
$5F2    $6FD4   LD       VF, #D4         ; Load 212 into VF
$5F4    $EF4B   UNKNOWN  $EF4B           ; Unknown Exxx instruction
$5F6    $1CF8   JP       $CF8            ; Jump to CF8
$5F8    $9185   UNKNOWN  $9185           ; Unknown 9xxx instruction
$5FA    $2206   CALL     $206            ; Call subroutine at 206
$5FC    $B016   JP       V0, $016        ; Jump to V0 + 016
$5FE    $0ABB   SYS      $ABB            ; System call to ABB
$600    $D933   DRW      V9, V3, #3      ; Draw 3-byte sprite at V9, V3
$602    $BC66   JP       V0, $C66        ; Jump to V0 + C66
$604    $14DC   JP       $4DC            ; Jump to 4DC
$606    $E095   UNKNOWN  $E095           ; Unknown Exxx instruction
$608    $3472   SE       V4, #72         ; Skip if V4 == 114
$60A    $C2B3   RND      V2, #B3         ; V2 = random & B3
$60C    $2C76   CALL     $C76            ; Call subroutine at C76
$60E    $15DD   JP       $5DD            ; Jump to 5DD
$610    $2508   CALL     $508            ; Call subroutine at 508
$612    $8F05   SUB      VF, V0          ; VF -= V0, VF = !borrow
$614    $0CEC   SYS      $CEC            ; System call to CEC
$616    $3043   SE       V0, #43         ; Skip if V0 == 67
$618    $1BF4   JP       $BF4            ; Jump to BF4
$61A    $AA53   LD       I, $A53         ; Load A53 into I
$61C    $BD0B   JP       V0, $D0B        ; Jump to V0 + D0B
$61E    $BC1F   JP       V0, $C1F        ; Jump to V0 + C1F
$620    $F378   UNKNOWN  F378            ; Unknown Fxxx instruction
$622    $0B1B   SYS      $B1B            ; System call to B1B
$624    $6E75   LD       VE, #75         ; Load 117 into VE
$626    $1975   JP       $975            ; Jump to 975
$628    $167F   JP       $67F            ; Jump to 67F
$62A    $8148   UNKNOWN  8148            ; Unknown 8xxx instruction
$62C    $43C4   SNE      V3, #C4         ; Skip if V3 != 196
$62E    $47D2   SNE      V7, #D2         ; Skip if V7 != 210
$630    $82D7   SUBN     V2, VD          ; V2 = VD - V2, VF = !borrow
$632    $B6AF   JP       V0, $6AF        ; Jump to V0 + 6AF
$634    $213D   CALL     $13D            ; Call subroutine at 13D
$636    $AFF3   LD       I, $FF3         ; Load FF3 into I
$638    $DF00   DRW      VF, V0, #0      ; Draw 0-byte sprite at VF, V0
$63A    $A3D2   LD       I, $3D2         ; Load 3D2 into I
$63C    $3561   SE       V5, #61         ; Skip if V5 == 97
$63E    $2D63   CALL     $D63            ; Call subroutine at D63
$640    $E8EC   UNKNOWN  $E8EC           ; Unknown Exxx instruction
$642    $813A   UNKNOWN  813A            ; Unknown 8xxx instruction
$644    $E04C   UNKNOWN  $E04C           ; Unknown Exxx instruction
$646    $D4C6   DRW      V4, VC, #6      ; Draw 6-byte sprite at V4, VC
$648    $439E   SNE      V3, #9E         ; Skip if V3 != 158
$64A    $B024   JP       V0, $024        ; Jump to V0 + 024
$64C    $BE1D   JP       V0, $E1D        ; Jump to V0 + E1D
$64E    $4693   SNE      V6, #93         ; Skip if V6 != 147
$650    $B8A8   JP       V0, $8A8        ; Jump to V0 + 8A8
$652    $FE1C   UNKNOWN  FE1C            ; Unknown Fxxx instruction
$654    $855E   SHL      V5              ; V5 <<= 1, VF = MSB
$656    $E06C   UNKNOWN  $E06C           ; Unknown Exxx instruction
$658    $7298   ADD      V2, #98         ; Add 152 to V2
$65A    $F998   UNKNOWN  F998            ; Unknown Fxxx instruction
$65C    $2B95   CALL     $B95            ; Call subroutine at B95
$65E    $95F9   UNKNOWN  $95F9           ; Unknown 9xxx instruction
$660    $4ABA   SNE      VA, #BA         ; Skip if VA != 186
$662    $14E0   JP       $4E0            ; Jump to 4E0
$664    $279E   CALL     $79E            ; Call subroutine at 79E
$666    $8370   LD       V3, V7          ; V3 = V7
$668    $276A   CALL     $76A            ; Call subroutine at 76A
$66A    $C871   RND      V8, #71         ; V8 = random & 71
$66C    $9E67   UNKNOWN  $9E67           ; Unknown 9xxx instruction
$66E    $A2C0   LD       I, $2C0         ; Load 2C0 into I
$670    $1DEE   JP       $DEE            ; Jump to DEE
$672    $D835   DRW      V8, V3, #5      ; Draw 5-byte sprite at V8, V3
$674    $D8AE   DRW      V8, VA, #E      ; Draw 14-byte sprite at V8, VA
$676    $FED7   UNKNOWN  FED7            ; Unknown Fxxx instruction
$678    $70C1   ADD      V0, #C1         ; Add 193 to V0
$67A    $554F   UNKNOWN  $554F           ; Unknown 5xxx instruction
$67C    $481B   SNE      V8, #1B         ; Skip if V8 != 27
$67E    $D127   DRW      V1, V2, #7      ; Draw 7-byte sprite at V1, V2
$680    $DB62   DRW      VB, V6, #2      ; Draw 2-byte sprite at VB, V6
$682    $8D74   ADD      VD, V7          ; VD += V7, VF = carry
$684    $3CC0   SE       VC, #C0         ; Skip if VC == 192
$686    $1140   JP       $140            ; Jump to 140
$688    $B4A7   JP       V0, $4A7        ; Jump to V0 + 4A7
$68A    $EF2F   UNKNOWN  $EF2F           ; Unknown Exxx instruction
$68C    $349C   SE       V4, #9C         ; Skip if V4 == 156
$68E    $54CE   UNKNOWN  $54CE           ; Unknown 5xxx instruction
$690    $225D   CALL     $25D            ; Call subroutine at 25D
$692    $29B1   CALL     $9B1            ; Call subroutine at 9B1
$694    $35D4   SE       V5, #D4         ; Skip if V5 == 212
$696    $6A95   LD       VA, #95         ; Load 149 into VA
$698    $26BA   CALL     $6BA            ; Call subroutine at 6BA
$69A    $B3F1   JP       V0, $3F1        ; Jump to V0 + 3F1
$69C    $0ADF   SYS      $ADF            ; System call to ADF
$69E    $8D62   AND      VD, V6          ; VD &= V6
$6A0    $5789   UNKNOWN  $5789           ; Unknown 5xxx instruction
$6A2    $0E4C   SYS      $E4C            ; System call to E4C
$6A4    $0A15   SYS      $A15            ; System call to A15
$6A6    $E5C1   UNKNOWN  $E5C1           ; Unknown Exxx instruction
$6A8    $3948   SE       V9, #48         ; Skip if V9 == 72
$6AA    $EE0A   UNKNOWN  $EE0A           ; Unknown Exxx instruction
$6AC    $3970   SE       V9, #70         ; Skip if V9 == 112
$6AE    $61FD   LD       V1, #FD         ; Load 253 into V1
$6B0    $4496   SNE      V4, #96         ; Skip if V4 != 150
$6B2    $4AE5   SNE      VA, #E5         ; Skip if VA != 229
$6B4    $FA76   UNKNOWN  FA76            ; Unknown Fxxx instruction
$6B6    $937A   UNKNOWN  $937A           ; Unknown 9xxx instruction
$6B8    $9EB7   UNKNOWN  $9EB7           ; Unknown 9xxx instruction
$6BA    $6750   LD       V7, #50         ; Load 80 into V7
$6BC    $D0D6   DRW      V0, VD, #6      ; Draw 6-byte sprite at V0, VD
$6BE    $3B00   SE       VB, #00         ; Skip if VB == 0
$6C0    $FEF3   UNKNOWN  FEF3            ; Unknown Fxxx instruction
$6C2    $8FE3   XOR      VF, VE          ; VF ^= VE
$6C4    $4139   SNE      V1, #39         ; Skip if V1 != 57
$6C6    $8550   LD       V5, V5          ; V5 = V5
$6C8    $B1E1   JP       V0, $1E1        ; Jump to V0 + 1E1
$6CA    $12C1   JP       $2C1            ; Jump to 2C1
$6CC    $DEEA   DRW      VE, VE, #A      ; Draw 10-byte sprite at VE, VE
$6CE    $033E   SYS      $33E            ; System call to 33E
$6D0    $A3F3   LD       I, $3F3         ; Load 3F3 into I
$6D2    $73AE   ADD      V3, #AE         ; Add 174 to V3
$6D4    $CE95   RND      VE, #95         ; VE = random & 95
$6D6    $E618   UNKNOWN  $E618           ; Unknown Exxx instruction
$6D8    $0A5D   SYS      $A5D            ; System call to A5D
$6DA    $131F   JP       $31F            ; Jump to 31F
$6DC    $B14E   JP       V0, $14E        ; Jump to V0 + 14E
$6DE    $F946   UNKNOWN  F946            ; Unknown Fxxx instruction
$6E0    $96D5   UNKNOWN  $96D5           ; Unknown 9xxx instruction
$6E2    $C43A   RND      V4, #3A         ; V4 = random & 3A
$6E4    $717A   ADD      V1, #7A         ; Add 122 to V1
$6E6    $8EFD   UNKNOWN  8EFD            ; Unknown 8xxx instruction
$6E8    $189D   JP       $89D            ; Jump to 89D
$6EA    $50BA   UNKNOWN  $50BA           ; Unknown 5xxx instruction
$6EC    $9262   UNKNOWN  $9262           ; Unknown 9xxx instruction
$6EE    $FBB4   UNKNOWN  FBB4            ; Unknown Fxxx instruction
$6F0    $1E95   JP       $E95            ; Jump to E95
$6F2    $3488   SE       V4, #88         ; Skip if V4 == 136
$6F4    $13C7   JP       $3C7            ; Jump to 3C7
$6F6    $28DF   CALL     $8DF            ; Call subroutine at 8DF
$6F8    $491C   SNE      V9, #1C         ; Skip if V9 != 28
$6FA    $C798   RND      V7, #98         ; V7 = random & 98
$6FC    $CA95   RND      VA, #95         ; VA = random & 95
$6FE    $0D99   SYS      $D99            ; System call to D99
$700    $21FE   CALL     $1FE            ; Call subroutine at 1FE
$702    $1369   JP       $369            ; Jump to 369
$704    $FAF8   UNKNOWN  FAF8            ; Unknown Fxxx instruction
$706    $9CA0   SNE      VC, VA          ; Skip if VC != VA
$708    $2E77   CALL     $E77            ; Call subroutine at E77
$70A    $9C21   UNKNOWN  $9C21           ; Unknown 9xxx instruction
$70C    $909A   UNKNOWN  $909A           ; Unknown 9xxx instruction
$70E    $34D0   SE       V4, #D0         ; Skip if V4 == 208
$710    $6575   LD       V5, #75         ; Load 117 into V5
$712    $7EAB   ADD      VE, #AB         ; Add 171 to VE
$714    $E0E3   UNKNOWN  $E0E3           ; Unknown Exxx instruction
$716    $3BF3   SE       VB, #F3         ; Skip if VB == 243
$718    $26E2   CALL     $6E2            ; Call subroutine at 6E2
$71A    $5565   UNKNOWN  $5565           ; Unknown 5xxx instruction
$71C    $1FA3   JP       $FA3            ; Jump to FA3
$71E    $ABBA   LD       I, $BBA         ; Load BBA into I
$720    $FDE7   UNKNOWN  FDE7            ; Unknown Fxxx instruction
$722    $FCC9   UNKNOWN  FCC9            ; Unknown Fxxx instruction
$724    $A1E7   LD       I, $1E7         ; Load 1E7 into I
$726    $1E85   JP       $E85            ; Jump to E85
$728    $365E   SE       V6, #5E         ; Skip if V6 == 94
$72A    $DDA9   DRW      VD, VA, #9      ; Draw 9-byte sprite at VD, VA
$72C    $C4DB   RND      V4, #DB         ; V4 = random & DB
$72E    $A891   LD       I, $891         ; Load 891 into I
$730    $2851   CALL     $851            ; Call subroutine at 851
$732    $65AD   LD       V5, #AD         ; Load 173 into V5
$734    $27AD   CALL     $7AD            ; Call subroutine at 7AD
$736    $1E9B   JP       $E9B            ; Jump to E9B
$738    $5CF8   UNKNOWN  $5CF8           ; Unknown 5xxx instruction
$73A    $518E   UNKNOWN  $518E           ; Unknown 5xxx instruction
$73C    $2642   CALL     $642            ; Call subroutine at 642
$73E    $306C   SE       V0, #6C         ; Skip if V0 == 108
$740    $7C0B   ADD      VC, #0B         ; Add 11 to VC
$742    $3C8A   SE       VC, #8A         ; Skip if VC == 138
$744    $6A39   LD       VA, #39         ; Load 57 into VA
$746    $A8B5   LD       I, $8B5         ; Load 8B5 into I
$748    $5141   UNKNOWN  $5141           ; Unknown 5xxx instruction
$74A    $C63C   RND      V6, #3C         ; V6 = random & 3C
$74C    $A914   LD       I, $914         ; Load 914 into I
$74E    $7C48   ADD      VC, #48         ; Add 72 to VC
$750    $999F   UNKNOWN  $999F           ; Unknown 9xxx instruction
$752    $B805   JP       V0, $805        ; Jump to V0 + 805
$754    $7758   ADD      V7, #58         ; Add 88 to V7
$756    $5D6B   UNKNOWN  $5D6B           ; Unknown 5xxx instruction
$758    $F1AA   UNKNOWN  F1AA            ; Unknown Fxxx instruction
$75A    $1955   JP       $955            ; Jump to 955
$75C    $4BBE   SNE      VB, #BE         ; Skip if VB != 190
$75E    $AE41   LD       I, $E41         ; Load E41 into I
$760    $2CD8   CALL     $CD8            ; Call subroutine at CD8
$762    $EC83   UNKNOWN  $EC83           ; Unknown Exxx instruction
$764    $22BC   CALL     $2BC            ; Call subroutine at 2BC
$766    $8A5B   UNKNOWN  8A5B            ; Unknown 8xxx instruction
$768    $73C3   ADD      V3, #C3         ; Add 195 to V3
$76A    $E613   UNKNOWN  $E613           ; Unknown Exxx instruction
$76C    $7CBB   ADD      VC, #BB         ; Add 187 to VC
$76E    $C409   RND      V4, #09         ; V4 = random & 09
$770    $90AE   UNKNOWN  $90AE           ; Unknown 9xxx instruction
$772    $E0F4   UNKNOWN  $E0F4           ; Unknown Exxx instruction
$774    $D727   DRW      V7, V2, #7      ; Draw 7-byte sprite at V7, V2
$776    $0623   SYS      $623            ; System call to 623
$778    $2465   CALL     $465            ; Call subroutine at 465
$77A    $94CC   UNKNOWN  $94CC           ; Unknown 9xxx instruction
$77C    $C86F   RND      V8, #6F         ; V8 = random & 6F
$77E    $9BA2   UNKNOWN  $9BA2           ; Unknown 9xxx instruction
$780    $99CA   UNKNOWN  $99CA           ; Unknown 9xxx instruction
$782    $D341   DRW      V3, V4, #1      ; Draw 1-byte sprite at V3, V4
$784    $D68D   DRW      V6, V8, #D      ; Draw 13-byte sprite at V6, V8
$786    $6EEE   LD       VE, #EE         ; Load 238 into VE
$788    $9495   UNKNOWN  $9495           ; Unknown 9xxx instruction
$78A    $F64C   UNKNOWN  F64C            ; Unknown Fxxx instruction
$78C    $3483   SE       V4, #83         ; Skip if V4 == 131
$78E    $788B   ADD      V8, #8B         ; Add 139 to V8
$790    $77A1   ADD      V7, #A1         ; Add 161 to V7
$792    $E006   UNKNOWN  $E006           ; Unknown Exxx instruction
$794    $D2A2   DRW      V2, VA, #2      ; Draw 2-byte sprite at V2, VA
$796    $E342   UNKNOWN  $E342           ; Unknown Exxx instruction
$798    $041F   SYS      $41F            ; System call to 41F
$79A    $B9BE   JP       V0, $9BE        ; Jump to V0 + 9BE
$79C    $E250   UNKNOWN  $E250           ; Unknown Exxx instruction
$79E    $8062   AND      V0, V6          ; V0 &= V6
$7A0    $6D09   LD       VD, #09         ; Load 9 into VD
$7A2    $EF29   UNKNOWN  $EF29           ; Unknown Exxx instruction
$7A4    $308F   SE       V0, #8F         ; Skip if V0 == 143
$7A6    $8D9B   UNKNOWN  8D9B            ; Unknown 8xxx instruction
$7A8    $D1D8   DRW      V1, VD, #8      ; Draw 8-byte sprite at V1, VD
$7AA    $0A56   SYS      $A56            ; System call to A56
$7AC    $C70F   RND      V7, #0F         ; V7 = random & 0F
$7AE    $1214   JP       $214            ; Jump to 214
$7B0    $E944   UNKNOWN  $E944           ; Unknown Exxx instruction
$7B2    $7D5D   ADD      VD, #5D         ; Add 93 to VD
$7B4    $5D3B   UNKNOWN  $5D3B           ; Unknown 5xxx instruction
$7B6    $4C40   SNE      VC, #40         ; Skip if VC != 64
$7B8    $40D7   SNE      V0, #D7         ; Skip if V0 != 215
$7BA    $0A6F   SYS      $A6F            ; System call to A6F
$7BC    $17B2   JP       $7B2            ; Jump to 7B2
$7BE    $6155   LD       V1, #55         ; Load 85 into V1
$7C0    $3334   SE       V3, #34         ; Skip if V3 == 52
$7C2    $C4C0   RND      V4, #C0         ; V4 = random & C0
$7C4    $E29A   UNKNOWN  $E29A           ; Unknown Exxx instruction
$7C6    $EA66   UNKNOWN  $EA66           ; Unknown Exxx instruction
$7C8    $724D   ADD      V2, #4D         ; Add 77 to V2
$7CA    $D202   DRW      V2, V0, #2      ; Draw 2-byte sprite at V2, V0
$7CC    $65A0   LD       V5, #A0         ; Load 160 into V5
$7CE    $D178   DRW      V1, V7, #8      ; Draw 8-byte sprite at V1, V7
$7D0    $329E   SE       V2, #9E         ; Skip if V2 == 158
$7D2    $5091   UNKNOWN  $5091           ; Unknown 5xxx instruction
$7D4    $1A35   JP       $A35            ; Jump to A35
$7D6    $2681   CALL     $681            ; Call subroutine at 681
$7D8    $3668   SE       V6, #68         ; Skip if V6 == 104
$7DA    $AC81   LD       I, $C81         ; Load C81 into I
$7DC    $33AA   SE       V3, #AA         ; Skip if V3 == 170
$7DE    $CF07   RND      VF, #07         ; VF = random & 07
$7E0    $B751   JP       V0, $751        ; Jump to V0 + 751
$7E2    $1696   JP       $696            ; Jump to 696
$7E4    $2345   CALL     $345            ; Call subroutine at 345
$7E6    $37A1   SE       V7, #A1         ; Skip if V7 == 161
$7E8    $77B5   ADD      V7, #B5         ; Add 181 to V7
$7EA    $9C62   UNKNOWN  $9C62           ; Unknown 9xxx instruction
$7EC    $C92A   RND      V9, #2A         ; V9 = random & 2A
$7EE    $B544   JP       V0, $544        ; Jump to V0 + 544
$7F0    $025A   SYS      $25A            ; System call to 25A
$7F2    $92BF   UNKNOWN  $92BF           ; Unknown 9xxx instruction
$7F4    $C357   RND      V3, #57         ; V3 = random & 57
$7F6    $8120   LD       V1, V2          ; V1 = V2
$7F8    $9D6B   UNKNOWN  $9D6B           ; Unknown 9xxx instruction
$7FA    $8789   UNKNOWN  8789            ; Unknown 8xxx instruction
$7FC    $87B0   LD       V7, VB          ; V7 = VB
$7FE    $35A8   SE       V5, #A8         ; Skip if V5 == 168
$800    $2C87   CALL     $C87            ; Call subroutine at C87
$802    $2786   CALL     $786            ; Call subroutine at 786
$804    $3147   SE       V1, #47         ; Skip if V1 == 71
$806    $6DF1   LD       VD, #F1         ; Load 241 into VD
$808    $73A1   ADD      V3, #A1         ; Add 161 to V3
$80A    $9905   UNKNOWN  $9905           ; Unknown 9xxx instruction
$80C    $2451   CALL     $451            ; Call subroutine at 451
$80E    $FE88   UNKNOWN  FE88            ; Unknown Fxxx instruction
$810    $EB2D   UNKNOWN  $EB2D           ; Unknown Exxx instruction
$812    $9514   UNKNOWN  $9514           ; Unknown 9xxx instruction
$814    $5B78   UNKNOWN  $5B78           ; Unknown 5xxx instruction
$816    $BEEA   JP       V0, $EEA        ; Jump to V0 + EEA
$818    $7759   ADD      V7, #59         ; Add 89 to V7
$81A    $C2E0   RND      V2, #E0         ; V2 = random & E0
$81C    $D60F   DRW      V6, V0, #F      ; Draw 15-byte sprite at V6, V0
$81E    $D74E   DRW      V7, V4, #E      ; Draw 14-byte sprite at V7, V4
$820    $DA91   DRW      VA, V9, #1      ; Draw 1-byte sprite at VA, V9
$822    $E042   UNKNOWN  $E042           ; Unknown Exxx instruction
$824    $30C5   SE       V0, #C5         ; Skip if V0 == 197
$826    $F75C   UNKNOWN  F75C            ; Unknown Fxxx instruction
$828    $DA0F   DRW      VA, V0, #F      ; Draw 15-byte sprite at VA, V0
$82A    $B3CC   JP       V0, $3CC        ; Jump to V0 + 3CC
$82C    $1B62   JP       $B62            ; Jump to B62
$82E    $8FEF   UNKNOWN  8FEF            ; Unknown 8xxx instruction
$830    $C0A9   RND      V0, #A9         ; V0 = random & A9
$832    $BABB   JP       V0, $ABB        ; Jump to V0 + ABB
$834    $FEC7   UNKNOWN  FEC7            ; Unknown Fxxx instruction
$836    $6A6D   LD       VA, #6D         ; Load 109 into VA
$838    $043F   SYS      $43F            ; System call to 43F
$83A    $87B5   SUB      V7, VB          ; V7 -= VB, VF = !borrow
$83C    $BC15   JP       V0, $C15        ; Jump to V0 + C15
$83E    $3C19   SE       VC, #19         ; Skip if VC == 25
$840    $7655   ADD      V6, #55         ; Add 85 to V6
$842    $1DD7   JP       $DD7            ; Jump to DD7
$844    $46CB   SNE      V6, #CB         ; Skip if V6 != 203
$846    $DD80   DRW      VD, V8, #0      ; Draw 0-byte sprite at VD, V8
$848    $06D9   SYS      $6D9            ; System call to 6D9
$84A    $C09A   RND      V0, #9A         ; V0 = random & 9A
$84C    $D82E   DRW      V8, V2, #E      ; Draw 14-byte sprite at V8, V2
$84E    $567C   UNKNOWN  $567C           ; Unknown 5xxx instruction
$850    $1B34   JP       $B34            ; Jump to B34
$852    $E8C1   UNKNOWN  $E8C1           ; Unknown Exxx instruction
$854    $C012   RND      V0, #12         ; V0 = random & 12
$856    $054F   SYS      $54F            ; System call to 54F
$858    $2E70   CALL     $E70            ; Call subroutine at E70
$85A    $84F4   ADD      V4, VF          ; V4 += VF, VF = carry
$85C    $F0A1   UNKNOWN  F0A1            ; Unknown Fxxx instruction
$85E    $89AD   UNKNOWN  89AD            ; Unknown 8xxx instruction
$860    $541F   UNKNOWN  $541F           ; Unknown 5xxx instruction
$862    $71DD   ADD      V1, #DD         ; Add 221 to V1
$864    $EC5E   UNKNOWN  $EC5E           ; Unknown Exxx instruction
$866    $245E   CALL     $45E            ; Call subroutine at 45E
$868    $C521   RND      V5, #21         ; V5 = random & 21
$86A    $92BB   UNKNOWN  $92BB           ; Unknown 9xxx instruction
$86C    $3958   SE       V9, #58         ; Skip if V9 == 88
$86E    $3A51   SE       VA, #51         ; Skip if VA == 81
$870    $9979   UNKNOWN  $9979           ; Unknown 9xxx instruction
$872    $DF9B   DRW      VF, V9, #B      ; Draw 11-byte sprite at VF, V9
$874    $1F39   JP       $F39            ; Jump to F39
$876    $3F82   SE       VF, #82         ; Skip if VF == 130
$878    $CB04   RND      VB, #04         ; VB = random & 04
$87A    $7636   ADD      V6, #36         ; Add 54 to V6
$87C    $B016   JP       V0, $016        ; Jump to V0 + 016
$87E    $9CA1   UNKNOWN  $9CA1           ; Unknown 9xxx instruction
$880    $A2BE   LD       I, $2BE         ; Load 2BE into I
$882    $1341   JP       $341            ; Jump to 341
$884    $951D   UNKNOWN  $951D           ; Unknown 9xxx instruction
$886    $9763   UNKNOWN  $9763           ; Unknown 9xxx instruction
$888    $0DD8   SYS      $DD8            ; System call to DD8
$88A    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$88C    $C6DB   RND      V6, #DB         ; V6 = random & DB
$88E    $0B02   SYS      $B02            ; System call to B02
$890    $34C2   SE       V4, #C2         ; Skip if V4 == 194
$892    $7F98   ADD      VF, #98         ; Add 152 to VF
$894    $9960   SNE      V9, V6          ; Skip if V9 != V6
$896    $EC5A   UNKNOWN  $EC5A           ; Unknown Exxx instruction
$898    $03AB   SYS      $3AB            ; System call to 3AB
$89A    $E860   UNKNOWN  $E860           ; Unknown Exxx instruction
$89C    $E6E6   UNKNOWN  $E6E6           ; Unknown Exxx instruction
$89E    $46B6   SNE      V6, #B6         ; Skip if V6 != 182
$8A0    $A8D4   LD       I, $8D4         ; Load 8D4 into I
$8A2    $3C6B   SE       VC, #6B         ; Skip if VC == 107
$8A4    $EAC2   UNKNOWN  $EAC2           ; Unknown Exxx instruction
$8A6    $14D6   JP       $4D6            ; Jump to 4D6
$8A8    $0E80   SYS      $E80            ; System call to E80
$8AA    $A9C7   LD       I, $9C7         ; Load 9C7 into I
$8AC    $B9FC   JP       V0, $9FC        ; Jump to V0 + 9FC
$8AE    $895E   SHL      V9              ; V9 <<= 1, VF = MSB
$8B0    $30AE   SE       V0, #AE         ; Skip if V0 == 174
$8B2    $A4B5   LD       I, $4B5         ; Load 4B5 into I
$8B4    $F7EF   UNKNOWN  F7EF            ; Unknown Fxxx instruction
$8B6    $687A   LD       V8, #7A         ; Load 122 into V8
$8B8    $D7D6   DRW      V7, VD, #6      ; Draw 6-byte sprite at V7, VD
$8BA    $54A5   UNKNOWN  $54A5           ; Unknown 5xxx instruction
$8BC    $90DC   UNKNOWN  $90DC           ; Unknown 9xxx instruction
$8BE    $14D1   JP       $4D1            ; Jump to 4D1
$8C0    $F294   UNKNOWN  F294            ; Unknown Fxxx instruction
$8C2    $A6FE   LD       I, $6FE         ; Load 6FE into I
$8C4    $E07A   UNKNOWN  $E07A           ; Unknown Exxx instruction
$8C6    $15B9   JP       $5B9            ; Jump to 5B9
$8C8    $5E50   SE       VE, V5          ; Skip if VE == V5
$8CA    $E47C   UNKNOWN  $E47C           ; Unknown Exxx instruction
$8CC    $6FA4   LD       VF, #A4         ; Load 164 into VF
$8CE    $E48F   UNKNOWN  $E48F           ; Unknown Exxx instruction
$8D0    $4648   SNE      V6, #48         ; Skip if V6 != 72
$8D2    $13C2   JP       $3C2            ; Jump to 3C2
$8D4    $4B78   SNE      VB, #78         ; Skip if VB != 120
$8D6    $708A   ADD      V0, #8A         ; Add 138 to V0
$8D8    $942F   UNKNOWN  $942F           ; Unknown 9xxx instruction
$8DA    $216B   CALL     $16B            ; Call subroutine at 16B
$8DC    $B60E   JP       V0, $60E        ; Jump to V0 + 60E
$8DE    $39B9   SE       V9, #B9         ; Skip if V9 == 185
$8E0    $452C   SNE      V5, #2C         ; Skip if V5 != 44
$8E2    $C539   RND      V5, #39         ; V5 = random & 39
$8E4    $5314   UNKNOWN  $5314           ; Unknown 5xxx instruction
$8E6    $0E1C   SYS      $E1C            ; System call to E1C
$8E8    $4F53   SNE      VF, #53         ; Skip if VF != 83
$8EA    $2BDC   CALL     $BDC            ; Call subroutine at BDC
$8EC    $7EF8   ADD      VE, #F8         ; Add 248 to VE
$8EE    $5581   UNKNOWN  $5581           ; Unknown 5xxx instruction
$8F0    $225E   CALL     $25E            ; Call subroutine at 25E
$8F2    $4824   SNE      V8, #24         ; Skip if V8 != 36
$8F4    $1ABC   JP       $ABC            ; Jump to ABC
$8F6    $659E   LD       V5, #9E         ; Load 158 into V5
$8F8    $94BE   UNKNOWN  $94BE           ; Unknown 9xxx instruction
$8FA    $24CB   CALL     $4CB            ; Call subroutine at 4CB
$8FC    $8092   AND      V0, V9          ; V0 &= V9
$8FE    $83EE   SHL      V3              ; V3 <<= 1, VF = MSB
$900    $997E   UNKNOWN  $997E           ; Unknown 9xxx instruction
$902    $1F63   JP       $F63            ; Jump to F63
$904    $E069   UNKNOWN  $E069           ; Unknown Exxx instruction
$906    $E144   UNKNOWN  $E144           ; Unknown Exxx instruction
$908    $A85D   LD       I, $85D         ; Load 85D into I
$90A    $912B   UNKNOWN  $912B           ; Unknown 9xxx instruction
$90C    $F8CB   UNKNOWN  F8CB            ; Unknown Fxxx instruction
$90E    $1CD3   JP       $CD3            ; Jump to CD3
$910    $A058   LD       I, $058         ; Load 058 into I
$912    $26B1   CALL     $6B1            ; Call subroutine at 6B1
$914    $0140   SYS      $140            ; System call to 140
$916    $518B   UNKNOWN  $518B           ; Unknown 5xxx instruction
$918    $AC69   LD       I, $C69         ; Load C69 into I
$91A    $FEA5   UNKNOWN  FEA5            ; Unknown Fxxx instruction
$91C    $D27D   DRW      V2, V7, #D      ; Draw 13-byte sprite at V2, V7
$91E    $E195   UNKNOWN  $E195           ; Unknown Exxx instruction
$920    $F63A   UNKNOWN  F63A            ; Unknown Fxxx instruction
$922    $DC51   DRW      VC, V5, #1      ; Draw 1-byte sprite at VC, V5
$924    $9C69   UNKNOWN  $9C69           ; Unknown 9xxx instruction
$926    $48A0   SNE      V8, #A0         ; Skip if V8 != 160
$928    $9BDD   UNKNOWN  $9BDD           ; Unknown 9xxx instruction
$92A    $E2CC   UNKNOWN  $E2CC           ; Unknown Exxx instruction
$92C    $0A6A   SYS      $A6A            ; System call to A6A
$92E    $C4B0   RND      V4, #B0         ; V4 = random & B0
$930    $04C9   SYS      $4C9            ; System call to 4C9
$932    $1574   JP       $574            ; Jump to 574
$934    $0232   SYS      $232            ; System call to 232
$936    $506A   UNKNOWN  $506A           ; Unknown 5xxx instruction
$938    $3D0D   SE       VD, #0D         ; Skip if VD == 13
$93A    $A3B8   LD       I, $3B8         ; Load 3B8 into I
$93C    $F72F   UNKNOWN  F72F            ; Unknown Fxxx instruction
$93E    $2189   CALL     $189            ; Call subroutine at 189
$940    $525D   UNKNOWN  $525D           ; Unknown 5xxx instruction
$942    $10C3   JP       $0C3            ; Jump to 0C3
$944    $24E3   CALL     $4E3            ; Call subroutine at 4E3
$946    $BC54   JP       V0, $C54        ; Jump to V0 + C54
$948    $8DEB   UNKNOWN  8DEB            ; Unknown 8xxx instruction
$94A    $0E15   SYS      $E15            ; System call to E15
$94C    $1389   JP       $389            ; Jump to 389
$94E    $4F34   SNE      VF, #34         ; Skip if VF != 52
$950    $F008   UNKNOWN  F008            ; Unknown Fxxx instruction
$952    $9324   UNKNOWN  $9324           ; Unknown 9xxx instruction
$954    $174B   JP       $74B            ; Jump to 74B
$956    $6CAC   LD       VC, #AC         ; Load 172 into VC
$958    $9533   UNKNOWN  $9533           ; Unknown 9xxx instruction
$95A    $4BF6   SNE      VB, #F6         ; Skip if VB != 246
$95C    $846C   UNKNOWN  846C            ; Unknown 8xxx instruction
$95E    $667D   LD       V6, #7D         ; Load 125 into V6
$960    $6613   LD       V6, #13         ; Load 19 into V6
$962    $E7ED   UNKNOWN  $E7ED           ; Unknown Exxx instruction
$964    $9F33   UNKNOWN  $9F33           ; Unknown 9xxx instruction
$966    $6F08   LD       VF, #08         ; Load 8 into VF
$968    $86DC   UNKNOWN  86DC            ; Unknown 8xxx instruction
$96A    $F886   UNKNOWN  F886            ; Unknown Fxxx instruction
$96C    $4353   SNE      V3, #53         ; Skip if V3 != 83
$96E    $79A5   ADD      V9, #A5         ; Add 165 to V9
$970    $97FF   UNKNOWN  $97FF           ; Unknown 9xxx instruction
$972    $3812   SE       V8, #12         ; Skip if V8 == 18
$974    $AB83   LD       I, $B83         ; Load B83 into I
$976    $46EF   SNE      V6, #EF         ; Skip if V6 != 239
$978    $33F1   SE       V3, #F1         ; Skip if V3 == 241
$97A    $2CB4   CALL     $CB4            ; Call subroutine at CB4
$97C    $FF87   UNKNOWN  FF87            ; Unknown Fxxx instruction
$97E    $7CC5   ADD      VC, #C5         ; Add 197 to VC
$980    $4356   SNE      V3, #56         ; Skip if V3 != 86
$982    $1364   JP       $364            ; Jump to 364
$984    $4468   SNE      V4, #68         ; Skip if V4 != 104
$986    $BBF1   JP       V0, $BF1        ; Jump to V0 + BF1
$988    $0A5F   SYS      $A5F            ; System call to A5F
$98A    $4D80   SNE      VD, #80         ; Skip if VD != 128
$98C    $51A8   UNKNOWN  $51A8           ; Unknown 5xxx instruction
$98E    $489D   SNE      V8, #9D         ; Skip if V8 != 157
$990    $B5A9   JP       V0, $5A9        ; Jump to V0 + 5A9
$992    $4A63   SNE      VA, #63         ; Skip if VA != 99
$994    $0A22   SYS      $A22            ; System call to A22
$996    $B870   JP       V0, $870        ; Jump to V0 + 870
$998    $EA4E   UNKNOWN  $EA4E           ; Unknown Exxx instruction
$99A    $616D   LD       V1, #6D         ; Load 109 into V1
$99C    $C9FC   RND      V9, #FC         ; V9 = random & FC
$99E    $9A25   UNKNOWN  $9A25           ; Unknown 9xxx instruction
$9A0    $A1B9   LD       I, $1B9         ; Load 1B9 into I
$9A2    $1E7F   JP       $E7F            ; Jump to E7F
$9A4    $109C   JP       $09C            ; Jump to 09C
$9A6    $9EEB   UNKNOWN  $9EEB           ; Unknown 9xxx instruction
$9A8    $B0A8   JP       V0, $0A8        ; Jump to V0 + 0A8
$9AA    $FCDB   UNKNOWN  FCDB            ; Unknown Fxxx instruction
$9AC    $B46A   JP       V0, $46A        ; Jump to V0 + 46A
$9AE    $8214   ADD      V2, V1          ; V2 += V1, VF = carry
$9B0    $77D5   ADD      V7, #D5         ; Add 213 to V7
$9B2    $0FE9   SYS      $FE9            ; System call to FE9
$9B4    $29A1   CALL     $9A1            ; Call subroutine at 9A1
$9B6    $F8DB   UNKNOWN  F8DB            ; Unknown Fxxx instruction
$9B8    $8296   SHR      V2              ; V2 >>= 1, VF = LSB
$9BA    $B44B   JP       V0, $44B        ; Jump to V0 + 44B
$9BC    $47AB   SNE      V7, #AB         ; Skip if V7 != 171
$9BE    $CBCB   RND      VB, #CB         ; VB = random & CB
$9C0    $6E77   LD       VE, #77         ; Load 119 into VE
$9C2    $7255   ADD      V2, #55         ; Add 85 to V2
$9C4    $EE56   UNKNOWN  $EE56           ; Unknown Exxx instruction
$9C6    $B82B   JP       V0, $82B        ; Jump to V0 + 82B
$9C8    $6F7C   LD       VF, #7C         ; Load 124 into VF
$9CA    $72B5   ADD      V2, #B5         ; Add 181 to V2
$9CC    $067A   SYS      $67A            ; System call to 67A
$9CE    $8149   UNKNOWN  8149            ; Unknown 8xxx instruction
$9D0    $E215   UNKNOWN  $E215           ; Unknown Exxx instruction
$9D2    $43D8   SNE      V3, #D8         ; Skip if V3 != 216
$9D4    $B3C7   JP       V0, $3C7        ; Jump to V0 + 3C7
$9D6    $0471   SYS      $471            ; System call to 471
$9D8    $BCDB   JP       V0, $CDB        ; Jump to V0 + CDB
$9DA    $AB3F   LD       I, $B3F         ; Load B3F into I
$9DC    $C646   RND      V6, #46         ; V6 = random & 46
$9DE    $2DC3   CALL     $DC3            ; Call subroutine at DC3
$9E0    $74A4   ADD      V4, #A4         ; Add 164 to V4
$9E2    $8629   UNKNOWN  8629            ; Unknown 8xxx instruction
$9E4    $CC5E   RND      VC, #5E         ; VC = random & 5E
$9E6    $4939   SNE      V9, #39         ; Skip if V9 != 57
$9E8    $5050   SE       V0, V5          ; Skip if V0 == V5
$9EA    $9020   SNE      V0, V2          ; Skip if V0 != V2
$9EC    $42E8   SNE      V2, #E8         ; Skip if V2 != 232
$9EE    $F521   UNKNOWN  F521            ; Unknown Fxxx instruction
$9F0    $E379   UNKNOWN  $E379           ; Unknown Exxx instruction
$9F2    $9F42   UNKNOWN  $9F42           ; Unknown 9xxx instruction
$9F4    $52F1   UNKNOWN  $52F1           ; Unknown 5xxx instruction
$9F6    $C3D4   RND      V3, #D4         ; V3 = random & D4
$9F8    $8114   ADD      V1, V1          ; V1 += V1, VF = carry
$9FA    $2B38   CALL     $B38            ; Call subroutine at B38
$9FC    $933B   UNKNOWN  $933B           ; Unknown 9xxx instruction
$9FE    $FBD6   UNKNOWN  FBD6            ; Unknown Fxxx instruction
$A00    $C666   RND      V6, #66         ; V6 = random & 66
$A02    $85C8   UNKNOWN  85C8            ; Unknown 8xxx instruction
$A04    $B90F   JP       V0, $90F        ; Jump to V0 + 90F
$A06    $8599   UNKNOWN  8599            ; Unknown 8xxx instruction
$A08    $79AD   ADD      V9, #AD         ; Add 173 to V9
$A0A    $B346   JP       V0, $346        ; Jump to V0 + 346
$A0C    $A0B9   LD       I, $0B9         ; Load 0B9 into I
$A0E    $4329   SNE      V3, #29         ; Skip if V3 != 41
$A10    $19A3   JP       $9A3            ; Jump to 9A3
$A12    $EF6C   UNKNOWN  $EF6C           ; Unknown Exxx instruction
$A14    $03A0   SYS      $3A0            ; System call to 3A0
$A16    $415D   SNE      V1, #5D         ; Skip if V1 != 93
$A18    $6973   LD       V9, #73         ; Load 115 into V9
$A1A    $EAC3   UNKNOWN  $EAC3           ; Unknown Exxx instruction
$A1C    $3968   SE       V9, #68         ; Skip if V9 == 104
$A1E    $0333   SYS      $333            ; System call to 333
$A20    $1BE6   JP       $BE6            ; Jump to BE6
$A22    $473E   SNE      V7, #3E         ; Skip if V7 != 62
$A24    $E199   UNKNOWN  $E199           ; Unknown Exxx instruction
$A26    $507B   UNKNOWN  $507B           ; Unknown 5xxx instruction
$A28    $CE26   RND      VE, #26         ; VE = random & 26
$A2A    $B4A1   JP       V0, $4A1        ; Jump to V0 + 4A1
$A2C    $297A   CALL     $97A            ; Call subroutine at 97A
$A2E    $D33A   DRW      V3, V3, #A      ; Draw 10-byte sprite at V3, V3
$A30    $5371   UNKNOWN  $5371           ; Unknown 5xxx instruction
$A32    $4D04   SNE      VD, #04         ; Skip if VD != 4
$A34    $AD69   LD       I, $D69         ; Load D69 into I
$A36    $E165   UNKNOWN  $E165           ; Unknown Exxx instruction
$A38    $2417   CALL     $417            ; Call subroutine at 417
$A3A    $8BB4   ADD      VB, VB          ; VB += VB, VF = carry
$A3C    $D957   DRW      V9, V5, #7      ; Draw 7-byte sprite at V9, V5
$A3E    $E1B5   UNKNOWN  $E1B5           ; Unknown Exxx instruction
$A40    $32EA   SE       V2, #EA         ; Skip if V2 == 234
$A42    $77C9   ADD      V7, #C9         ; Add 201 to V7
$A44    $2F78   CALL     $F78            ; Call subroutine at F78
$A46    $662C   LD       V6, #2C         ; Load 44 into V6
$A48    $6925   LD       V9, #25         ; Load 37 into V9
$A4A    $F6AA   UNKNOWN  F6AA            ; Unknown Fxxx instruction
$A4C    $B470   JP       V0, $470        ; Jump to V0 + 470
$A4E    $3676   SE       V6, #76         ; Skip if V6 == 118
$A50    $F06B   UNKNOWN  F06B            ; Unknown Fxxx instruction
$A52    $7283   ADD      V2, #83         ; Add 131 to V2
$A54    $755E   ADD      V5, #5E         ; Add 94 to V5
$A56    $20EF   CALL     $0EF            ; Call subroutine at 0EF
$A58    $C474   RND      V4, #74         ; V4 = random & 74
$A5A    $6109   LD       V1, #09         ; Load 9 into V1
$A5C    $E2AD   UNKNOWN  $E2AD           ; Unknown Exxx instruction
$A5E    $D734   DRW      V7, V3, #4      ; Draw 4-byte sprite at V7, V3
$A60    $9C2A   UNKNOWN  $9C2A           ; Unknown 9xxx instruction
$A62    $FCA7   UNKNOWN  FCA7            ; Unknown Fxxx instruction
$A64    $A909   LD       I, $909         ; Load 909 into I
$A66    $DCC6   DRW      VC, VC, #6      ; Draw 6-byte sprite at VC, VC
$A68    $4AEE   SNE      VA, #EE         ; Skip if VA != 238
$A6A    $C97F   RND      V9, #7F         ; V9 = random & 7F
$A6C    $2C8E   CALL     $C8E            ; Call subroutine at C8E
$A6E    $ED66   UNKNOWN  $ED66           ; Unknown Exxx instruction
$A70    $72F8   ADD      V2, #F8         ; Add 248 to V2
$A72    $C05B   RND      V0, #5B         ; V0 = random & 5B
$A74    $12FD   JP       $2FD            ; Jump to 2FD
$A76    $6CFA   LD       VC, #FA         ; Load 250 into VC
$A78    $F76F   UNKNOWN  F76F            ; Unknown Fxxx instruction
$A7A    $9CE7   UNKNOWN  $9CE7           ; Unknown 9xxx instruction
$A7C    $4B0D   SNE      VB, #0D         ; Skip if VB != 13
$A7E    $C704   RND      V7, #04         ; V7 = random & 04
$A80    $15D1   JP       $5D1            ; Jump to 5D1
$A82    $2B8A   CALL     $B8A            ; Call subroutine at B8A
$A84    $6F30   LD       VF, #30         ; Load 48 into VF
$A86    $81A2   AND      V1, VA          ; V1 &= VA
$A88    $CB01   RND      VB, #01         ; VB = random & 01
$A8A    $B29F   JP       V0, $29F        ; Jump to V0 + 29F
$A8C    $8641   OR       V6, V4          ; V6 |= V4
$A8E    $8C65   SUB      VC, V6          ; VC -= V6, VF = !borrow
$A90    $F7C5   UNKNOWN  F7C5            ; Unknown Fxxx instruction
$A92    $422D   SNE      V2, #2D         ; Skip if V2 != 45
$A94    $C7FE   RND      V7, #FE         ; V7 = random & FE
$A96    $06AD   SYS      $6AD            ; System call to 6AD
$A98    $5EBC   UNKNOWN  $5EBC           ; Unknown 5xxx instruction
$A9A    $036C   SYS      $36C            ; System call to 36C
$A9C    $71D3   ADD      V1, #D3         ; Add 211 to V1
$A9E    $2CB2   CALL     $CB2            ; Call subroutine at CB2
$AA0    $0C22   SYS      $C22            ; System call to C22
$AA2    $E814   UNKNOWN  $E814           ; Unknown Exxx instruction
$AA4    $33E7   SE       V3, #E7         ; Skip if V3 == 231
$AA6    $ACB9   LD       I, $CB9         ; Load CB9 into I
$AA8    $E16B   UNKNOWN  $E16B           ; Unknown Exxx instruction
$AAA    $D282   DRW      V2, V8, #2      ; Draw 2-byte sprite at V2, V8
$AAC    $409A   SNE      V0, #9A         ; Skip if V0 != 154
$AAE    $01FC   SYS      $1FC            ; System call to 1FC
$AB0    $6384   LD       V3, #84         ; Load 132 into V3
$AB2    $A0B5   LD       I, $0B5         ; Load 0B5 into I
$AB4    $C459   RND      V4, #59         ; V4 = random & 59
$AB6    $39FE   SE       V9, #FE         ; Skip if V9 == 254
$AB8    $7AD8   ADD      VA, #D8         ; Add 216 to VA
$ABA    $CD8F   RND      VD, #8F         ; VD = random & 8F
$ABC    $44C0   SNE      V4, #C0         ; Skip if V4 != 192
$ABE    $F097   UNKNOWN  F097            ; Unknown Fxxx instruction
$AC0    $37A4   SE       V7, #A4         ; Skip if V7 == 164
$AC2    $7198   ADD      V1, #98         ; Add 152 to V1
$AC4    $209F   CALL     $09F            ; Call subroutine at 09F
$AC6    $4858   SNE      V8, #58         ; Skip if V8 != 88
$AC8    $5897   UNKNOWN  $5897           ; Unknown 5xxx instruction
$ACA    $0A91   SYS      $A91            ; System call to A91
$ACC    $2A42   CALL     $A42            ; Call subroutine at A42
$ACE    $FA73   UNKNOWN  FA73            ; Unknown Fxxx instruction
$AD0    $18A3   JP       $8A3            ; Jump to 8A3
$AD2    $D591   DRW      V5, V9, #1      ; Draw 1-byte sprite at V5, V9
$AD4    $C000   RND      V0, #00         ; V0 = random & 00
$AD6    $2027   CALL     $027            ; Call subroutine at 027
$AD8    $FA48   UNKNOWN  FA48            ; Unknown Fxxx instruction
$ADA    $DFE5   DRW      VF, VE, #5      ; Draw 5-byte sprite at VF, VE
$ADC    $AEF6   LD       I, $EF6         ; Load EF6 into I
$ADE    $D12B   DRW      V1, V2, #B      ; Draw 11-byte sprite at V1, V2
$AE0    $05EB   SYS      $5EB            ; System call to 5EB
$AE2    $8631   OR       V6, V3          ; V6 |= V3
$AE4    $137B   JP       $37B            ; Jump to 37B
$AE6    $F96C   UNKNOWN  F96C            ; Unknown Fxxx instruction
$AE8    $20DD   CALL     $0DD            ; Call subroutine at 0DD
$AEA    $4E06   SNE      VE, #06         ; Skip if VE != 6
$AEC    $B267   JP       V0, $267        ; Jump to V0 + 267
$AEE    $13A6   JP       $3A6            ; Jump to 3A6
$AF0    $A079   LD       I, $079         ; Load 079 into I
$AF2    $43BA   SNE      V3, #BA         ; Skip if V3 != 186
$AF4    $5DCD   UNKNOWN  $5DCD           ; Unknown 5xxx instruction
$AF6    $8D30   LD       VD, V3          ; VD = V3
$AF8    $F27E   UNKNOWN  F27E            ; Unknown Fxxx instruction
$AFA    $2F05   CALL     $F05            ; Call subroutine at F05
$AFC    $B923   JP       V0, $923        ; Jump to V0 + 923
$AFE    $D785   DRW      V7, V8, #5      ; Draw 5-byte sprite at V7, V8
$B00    $1F28   JP       $F28            ; Jump to F28
$B02    $313B   SE       V1, #3B         ; Skip if V1 == 59
$B04    $F924   UNKNOWN  F924            ; Unknown Fxxx instruction
$B06    $9E8C   UNKNOWN  $9E8C           ; Unknown 9xxx instruction
$B08    $2C59   CALL     $C59            ; Call subroutine at C59
$B0A    $8090   LD       V0, V9          ; V0 = V9
$B0C    $E89F   UNKNOWN  $E89F           ; Unknown Exxx instruction
$B0E    $D352   DRW      V3, V5, #2      ; Draw 2-byte sprite at V3, V5
$B10    $9B39   UNKNOWN  $9B39           ; Unknown 9xxx instruction
$B12    $7B08   ADD      VB, #08         ; Add 8 to VB
$B14    $7557   ADD      V5, #57         ; Add 87 to V5
$B16    $3D18   SE       VD, #18         ; Skip if VD == 24
$B18    $6C4C   LD       VC, #4C         ; Load 76 into VC
$B1A    $8A90   LD       VA, V9          ; VA = V9
$B1C    $D464   DRW      V4, V6, #4      ; Draw 4-byte sprite at V4, V6
$B1E    $2343   CALL     $343            ; Call subroutine at 343
$B20    $E2F8   UNKNOWN  $E2F8           ; Unknown Exxx instruction
$B22    $42B1   SNE      V2, #B1         ; Skip if V2 != 177
$B24    $14CA   JP       $4CA            ; Jump to 4CA
$B26    $E8FC   UNKNOWN  $E8FC           ; Unknown Exxx instruction
$B28    $A0BE   LD       I, $0BE         ; Load 0BE into I
$B2A    $BB3D   JP       V0, $B3D        ; Jump to V0 + B3D
$B2C    $29A9   CALL     $9A9            ; Call subroutine at 9A9
$B2E    $DEC2   DRW      VE, VC, #2      ; Draw 2-byte sprite at VE, VC
$B30    $D2A3   DRW      V2, VA, #3      ; Draw 3-byte sprite at V2, VA
$B32    $89F3   XOR      V9, VF          ; V9 ^= VF
$B34    $97E0   SNE      V7, VE          ; Skip if V7 != VE
$B36    $5327   UNKNOWN  $5327           ; Unknown 5xxx instruction
$B38    $DE07   DRW      VE, V0, #7      ; Draw 7-byte sprite at VE, V0
$B3A    $5081   UNKNOWN  $5081           ; Unknown 5xxx instruction
$B3C    $29BA   CALL     $9BA            ; Call subroutine at 9BA
$B3E    $A642   LD       I, $642         ; Load 642 into I
$B40    $351E   SE       V5, #1E         ; Skip if V5 == 30
$B42    $8B40   LD       VB, V4          ; VB = V4
$B44    $6FFB   LD       VF, #FB         ; Load 251 into VF
$B46    $E944   UNKNOWN  $E944           ; Unknown Exxx instruction
$B48    $5B07   UNKNOWN  $5B07           ; Unknown 5xxx instruction
$B4A    $C272   RND      V2, #72         ; V2 = random & 72
$B4C    $CC0F   RND      VC, #0F         ; VC = random & 0F
$B4E    $C99F   RND      V9, #9F         ; V9 = random & 9F
$B50    $7F3E   ADD      VF, #3E         ; Add 62 to VF
$B52    $D78A   DRW      V7, V8, #A      ; Draw 10-byte sprite at V7, V8
$B54    $450E   SNE      V5, #0E         ; Skip if V5 != 14
$B56    $4B57   SNE      VB, #57         ; Skip if VB != 87
$B58    $8855   SUB      V8, V5          ; V8 -= V5, VF = !borrow
$B5A    $2B93   CALL     $B93            ; Call subroutine at B93
$B5C    $9019   UNKNOWN  $9019           ; Unknown 9xxx instruction
$B5E    $F29E   UNKNOWN  F29E            ; Unknown Fxxx instruction
$B60    $63C7   LD       V3, #C7         ; Load 199 into V3
$B62    $860C   UNKNOWN  860C            ; Unknown 8xxx instruction
$B64    $8F4F   UNKNOWN  8F4F            ; Unknown 8xxx instruction
$B66    $CCC5   RND      VC, #C5         ; VC = random & C5
$B68    $5BD7   UNKNOWN  $5BD7           ; Unknown 5xxx instruction
$B6A    $5EF1   UNKNOWN  $5EF1           ; Unknown 5xxx instruction
$B6C    $2EA8   CALL     $EA8            ; Call subroutine at EA8
$B6E    $E1C2   UNKNOWN  $E1C2           ; Unknown Exxx instruction
$B70    $7485   ADD      V4, #85         ; Add 133 to V4
$B72    $34DA   SE       V4, #DA         ; Skip if V4 == 218
$B74    $E2A1   SKNP     V2              ; Skip if key V2 not pressed
$B76    $F8D8   UNKNOWN  F8D8            ; Unknown Fxxx instruction
$B78    $14B9   JP       $4B9            ; Jump to 4B9
$B7A    $6946   LD       V9, #46         ; Load 70 into V9
$B7C    $399E   SE       V9, #9E         ; Skip if V9 == 158
$B7E    $FD17   UNKNOWN  FD17            ; Unknown Fxxx instruction
$B80    $A4B1   LD       I, $4B1         ; Load 4B1 into I
$B82    $6E1C   LD       VE, #1C         ; Load 28 into VE
$B84    $7B06   ADD      VB, #06         ; Add 6 to VB
$B86    $C429   RND      V4, #29         ; V4 = random & 29
$B88    $6114   LD       V1, #14         ; Load 20 into V1
$B8A    $5FF0   SE       VF, VF          ; Skip if VF == VF
$B8C    $3611   SE       V6, #11         ; Skip if V6 == 17
$B8E    $C733   RND      V7, #33         ; V7 = random & 33
$B90    $81DD   UNKNOWN  81DD            ; Unknown 8xxx instruction
$B92    $6CF3   LD       VC, #F3         ; Load 243 into VC
$B94    $4967   SNE      V9, #67         ; Skip if V9 != 103
$B96    $9074   UNKNOWN  $9074           ; Unknown 9xxx instruction
$B98    $22D5   CALL     $2D5            ; Call subroutine at 2D5
$B9A    $C585   RND      V5, #85         ; V5 = random & 85
$B9C    $2AA4   CALL     $AA4            ; Call subroutine at AA4
$B9E    $2D83   CALL     $D83            ; Call subroutine at D83
$BA0    $0026   SYS      $026            ; System call to 026
$BA2    $3A16   SE       VA, #16         ; Skip if VA == 22
$BA4    $7881   ADD      V8, #81         ; Add 129 to V8
$BA6    $04F4   SYS      $4F4            ; System call to 4F4
$BA8    $3C7D   SE       VC, #7D         ; Skip if VC == 125
$BAA    $A635   LD       I, $635         ; Load 635 into I
$BAC    $2E34   CALL     $E34            ; Call subroutine at E34
$BAE    $8774   ADD      V7, V7          ; V7 += V7, VF = carry
$BB0    $D672   DRW      V6, V7, #2      ; Draw 2-byte sprite at V6, V7
$BB2    $854E   SHL      V5              ; V5 <<= 1, VF = MSB
$BB4    $D34A   DRW      V3, V4, #A      ; Draw 10-byte sprite at V3, V4
$BB6    $08BA   SYS      $8BA            ; System call to 8BA
$BB8    $D049   DRW      V0, V4, #9      ; Draw 9-byte sprite at V0, V4
$BBA    $D65F   DRW      V6, V5, #F      ; Draw 15-byte sprite at V6, V5
$BBC    $33F2   SE       V3, #F2         ; Skip if V3 == 242
$BBE    $A609   LD       I, $609         ; Load 609 into I
$BC0    $E50B   UNKNOWN  $E50B           ; Unknown Exxx instruction
$BC2    $B036   JP       V0, $036        ; Jump to V0 + 036
$BC4    $66D9   LD       V6, #D9         ; Load 217 into V6
$BC6    $50EB   UNKNOWN  $50EB           ; Unknown 5xxx instruction
$BC8    $2EC9   CALL     $EC9            ; Call subroutine at EC9
$BCA    $715A   ADD      V1, #5A         ; Add 90 to V1
$BCC    $F411   UNKNOWN  F411            ; Unknown Fxxx instruction
$BCE    $C264   RND      V2, #64         ; V2 = random & 64
$BD0    $07D4   SYS      $7D4            ; System call to 7D4
$BD2    $4235   SNE      V2, #35         ; Skip if V2 != 53
$BD4    $9AE6   UNKNOWN  $9AE6           ; Unknown 9xxx instruction
$BD6    $BBDB   JP       V0, $BDB        ; Jump to V0 + BDB
$BD8    $25D1   CALL     $5D1            ; Call subroutine at 5D1
$BDA    $768A   ADD      V6, #8A         ; Add 138 to V6
$BDC    $8E31   OR       VE, V3          ; VE |= V3
$BDE    $E6DB   UNKNOWN  $E6DB           ; Unknown Exxx instruction
$BE0    $CF39   RND      VF, #39         ; VF = random & 39
$BE2    $6BD3   LD       VB, #D3         ; Load 211 into VB
$BE4    $2A71   CALL     $A71            ; Call subroutine at A71
$BE6    $291F   CALL     $91F            ; Call subroutine at 91F
$BE8    $4FA1   SNE      VF, #A1         ; Skip if VF != 161
$BEA    $F264   UNKNOWN  F264            ; Unknown Fxxx instruction
$BEC    $3B4B   SE       VB, #4B         ; Skip if VB == 75
$BEE    $A01E   LD       I, $01E         ; Load 01E into I
$BF0    $2C76   CALL     $C76            ; Call subroutine at C76
$BF2    $6471   LD       V4, #71         ; Load 113 into V4
$BF4    $7310   ADD      V3, #10         ; Add 16 to V3
$BF6    $74A5   ADD      V4, #A5         ; Add 165 to V4
$BF8    $9325   UNKNOWN  $9325           ; Unknown 9xxx instruction
$BFA    $7877   ADD      V8, #77         ; Add 119 to V8
$BFC    $6920   LD       V9, #20         ; Load 32 into V9
$BFE    $CD3E   RND      VD, #3E         ; VD = random & 3E
$C00    $853F   UNKNOWN  853F            ; Unknown 8xxx instruction
$C02    $1F11   JP       $F11            ; Jump to F11
$C04    $97F0   SNE      V7, VF          ; Skip if V7 != VF
$C06    $F878   UNKNOWN  F878            ; Unknown Fxxx instruction
$C08    $8AD2   AND      VA, VD          ; VA &= VD
$C0A    $5030   SE       V0, V3          ; Skip if V0 == V3
$C0C    $6E67   LD       VE, #67         ; Load 103 into VE
$C0E    $1DF4   JP       $DF4            ; Jump to DF4
$C10    $4B78   SNE      VB, #78         ; Skip if VB != 120
$C12    $71C0   ADD      V1, #C0         ; Add 192 to V1
$C14    $E45E   UNKNOWN  $E45E           ; Unknown Exxx instruction
$C16    $5408   UNKNOWN  $5408           ; Unknown 5xxx instruction
$C18    $A686   LD       I, $686         ; Load 686 into I
$C1A    $540D   UNKNOWN  $540D           ; Unknown 5xxx instruction
$C1C    $5DE8   UNKNOWN  $5DE8           ; Unknown 5xxx instruction
$C1E    $5B7B   UNKNOWN  $5B7B           ; Unknown 5xxx instruction
$C20    $1492   JP       $492            ; Jump to 492
$C22    $FFB1   UNKNOWN  FFB1            ; Unknown Fxxx instruction
$C24    $3180   SE       V1, #80         ; Skip if V1 == 128
$C26    $1487   JP       $487            ; Jump to 487
$C28    $50CC   UNKNOWN  $50CC           ; Unknown 5xxx instruction
$C2A    $6533   LD       V5, #33         ; Load 51 into V5
$C2C    $F8A7   UNKNOWN  F8A7            ; Unknown Fxxx instruction
$C2E    $57FF   UNKNOWN  $57FF           ; Unknown 5xxx instruction
$C30    $201E   CALL     $01E            ; Call subroutine at 01E
$C32    $C4EA   RND      V4, #EA         ; V4 = random & EA
$C34    $6E7D   LD       VE, #7D         ; Load 125 into VE
$C36    $BC8A   JP       V0, $C8A        ; Jump to V0 + C8A
$C38    $F8B2   UNKNOWN  F8B2            ; Unknown Fxxx instruction
$C3A    $DEBE   DRW      VE, VB, #E      ; Draw 14-byte sprite at VE, VB
$C3C    $DA20   DRW      VA, V2, #0      ; Draw 0-byte sprite at VA, V2
$C3E    $26F8   CALL     $6F8            ; Call subroutine at 6F8
$C40    $6AEE   LD       VA, #EE         ; Load 238 into VA
$C42    $53A7   UNKNOWN  $53A7           ; Unknown 5xxx instruction
$C44    $A8AA   LD       I, $8AA         ; Load 8AA into I
$C46    $F260   UNKNOWN  F260            ; Unknown Fxxx instruction
$C48    $60B8   LD       V0, #B8         ; Load 184 into V0
$C4A    $AB8F   LD       I, $B8F         ; Load B8F into I
$C4C    $B528   JP       V0, $528        ; Jump to V0 + 528
$C4E    $FDCC   UNKNOWN  FDCC            ; Unknown Fxxx instruction
$C50    $B526   JP       V0, $526        ; Jump to V0 + 526
$C52    $8A93   XOR      VA, V9          ; VA ^= V9
$C54    $0DAA   SYS      $DAA            ; System call to DAA
$C56    $0E06   SYS      $E06            ; System call to E06
$C58    $2114   CALL     $114            ; Call subroutine at 114
$C5A    $10A8   JP       $0A8            ; Jump to 0A8
$C5C    $FD02   UNKNOWN  FD02            ; Unknown Fxxx instruction
$C5E    $5990   SE       V9, V9          ; Skip if V9 == V9
$C60    $467F   SNE      V6, #7F         ; Skip if V6 != 127
$C62    $75B5   ADD      V5, #B5         ; Add 181 to V5
$C64    $9E57   UNKNOWN  $9E57           ; Unknown 9xxx instruction
$C66    $9903   UNKNOWN  $9903           ; Unknown 9xxx instruction
$C68    $6916   LD       V9, #16         ; Load 22 into V9
$C6A    $A963   LD       I, $963         ; Load 963 into I
$C6C    $FD8F   UNKNOWN  FD8F            ; Unknown Fxxx instruction
$C6E    $2F93   CALL     $F93            ; Call subroutine at F93
$C70    $05B7   SYS      $5B7            ; System call to 5B7
$C72    $0748   SYS      $748            ; System call to 748
$C74    $499F   SNE      V9, #9F         ; Skip if V9 != 159
$C76    $F46E   UNKNOWN  F46E            ; Unknown Fxxx instruction
$C78    $AD58   LD       I, $D58         ; Load D58 into I
$C7A    $9EAB   UNKNOWN  $9EAB           ; Unknown 9xxx instruction
$C7C    $4826   SNE      V8, #26         ; Skip if V8 != 38
$C7E    $4310   SNE      V3, #10         ; Skip if V3 != 16
$C80    $8A6C   UNKNOWN  8A6C            ; Unknown 8xxx instruction
$C82    $26F5   CALL     $6F5            ; Call subroutine at 6F5
$C84    $34FC   SE       V4, #FC         ; Skip if V4 == 252
$C86    $63E9   LD       V3, #E9         ; Load 233 into V3
$C88    $5FDE   UNKNOWN  $5FDE           ; Unknown 5xxx instruction
$C8A    $85EC   UNKNOWN  85EC            ; Unknown 8xxx instruction
$C8C    $72A7   ADD      V2, #A7         ; Add 167 to V2
$C8E    $1855   JP       $855            ; Jump to 855
$C90    $CAF4   RND      VA, #F4         ; VA = random & F4
$C92    $64C5   LD       V4, #C5         ; Load 197 into V4
$C94    $1EE6   JP       $EE6            ; Jump to EE6
$C96    $F4B5   UNKNOWN  F4B5            ; Unknown Fxxx instruction
$C98    $DD65   DRW      VD, V6, #5      ; Draw 5-byte sprite at VD, V6
$C9A    $500E   UNKNOWN  $500E           ; Unknown 5xxx instruction
$C9C    $F74B   UNKNOWN  F74B            ; Unknown Fxxx instruction
$C9E    $3F87   SE       VF, #87         ; Skip if VF == 135
$CA0    $E146   UNKNOWN  $E146           ; Unknown Exxx instruction
$CA2    $70E7   ADD      V0, #E7         ; Add 231 to V0
$CA4    $0B66   SYS      $B66            ; System call to B66
$CA6    $7597   ADD      V5, #97         ; Add 151 to V5
$CA8    $7601   ADD      V6, #01         ; Add 1 to V6
$CAA    $DDD9   DRW      VD, VD, #9      ; Draw 9-byte sprite at VD, VD
$CAC    $CA5F   RND      VA, #5F         ; VA = random & 5F
$CAE    $1937   JP       $937            ; Jump to 937
$CB0    $29C4   CALL     $9C4            ; Call subroutine at 9C4
$CB2    $B196   JP       V0, $196        ; Jump to V0 + 196
$CB4    $4BA6   SNE      VB, #A6         ; Skip if VB != 166
$CB6    $6F65   LD       VF, #65         ; Load 101 into VF
$CB8    $544B   UNKNOWN  $544B           ; Unknown 5xxx instruction
$CBA    $E21B   UNKNOWN  $E21B           ; Unknown Exxx instruction
$CBC    $1405   JP       $405            ; Jump to 405
$CBE    $6949   LD       V9, #49         ; Load 73 into V9
$CC0    $F09C   UNKNOWN  F09C            ; Unknown Fxxx instruction
$CC2    $808B   UNKNOWN  808B            ; Unknown 8xxx instruction
$CC4    $F3C3   UNKNOWN  F3C3            ; Unknown Fxxx instruction
$CC6    $B4A5   JP       V0, $4A5        ; Jump to V0 + 4A5
$CC8    $550E   UNKNOWN  $550E           ; Unknown 5xxx instruction
$CCA    $1CE7   JP       $CE7            ; Jump to CE7
$CCC    $C284   RND      V2, #84         ; V2 = random & 84
$CCE    $E061   UNKNOWN  $E061           ; Unknown Exxx instruction
$CD0    $BBC3   JP       V0, $BC3        ; Jump to V0 + BC3
$CD2    $7848   ADD      V8, #48         ; Add 72 to V8
$CD4    $3DA3   SE       VD, #A3         ; Skip if VD == 163
$CD6    $71AC   ADD      V1, #AC         ; Add 172 to V1
$CD8    $7BD7   ADD      VB, #D7         ; Add 215 to VB
$CDA    $F6B9   UNKNOWN  F6B9            ; Unknown Fxxx instruction
$CDC    $C807   RND      V8, #07         ; V8 = random & 07
$CDE    $C522   RND      V5, #22         ; V5 = random & 22
$CE0    $1814   JP       $814            ; Jump to 814
$CE2    $328D   SE       V2, #8D         ; Skip if V2 == 141
$CE4    $355F   SE       V5, #5F         ; Skip if V5 == 95
$CE6    $637A   LD       V3, #7A         ; Load 122 into V3
$CE8    $39DA   SE       V9, #DA         ; Skip if V9 == 218
$CEA    $F96E   UNKNOWN  F96E            ; Unknown Fxxx instruction
$CEC    $1C11   JP       $C11            ; Jump to C11
$CEE    $845E   SHL      V4              ; V4 <<= 1, VF = MSB
$CF0    $45CD   SNE      V5, #CD         ; Skip if V5 != 205
$CF2    $FF8F   UNKNOWN  FF8F            ; Unknown Fxxx instruction
$CF4    $36ED   SE       V6, #ED         ; Skip if V6 == 237
$CF6    $2855   CALL     $855            ; Call subroutine at 855
$CF8    $A2C2   LD       I, $2C2         ; Load 2C2 into I
$CFA    $1D86   JP       $D86            ; Jump to D86
$CFC    $6A66   LD       VA, #66         ; Load 102 into VA
$CFE    $F8EA   UNKNOWN  F8EA            ; Unknown Fxxx instruction
$D00    $661A   LD       V6, #1A         ; Load 26 into V6
$D02    $462C   SNE      V6, #2C         ; Skip if V6 != 44
$D04    $CAC7   RND      VA, #C7         ; VA = random & C7
$D06    $9C19   UNKNOWN  $9C19           ; Unknown 9xxx instruction
$D08    $695F   LD       V9, #5F         ; Load 95 into V9
$D0A    $67AE   LD       V7, #AE         ; Load 174 into V7
$D0C    $1667   JP       $667            ; Jump to 667
$D0E    $6A25   LD       VA, #25         ; Load 37 into VA
$D10    $2B30   CALL     $B30            ; Call subroutine at B30
$D12    $9FFA   UNKNOWN  $9FFA           ; Unknown 9xxx instruction
$D14    $E161   UNKNOWN  $E161           ; Unknown Exxx instruction
$D16    $FF69   UNKNOWN  FF69            ; Unknown Fxxx instruction
$D18    $9C24   UNKNOWN  $9C24           ; Unknown 9xxx instruction
$D1A    $A57C   LD       I, $57C         ; Load 57C into I
$D1C    $A19E   LD       I, $19E         ; Load 19E into I
$D1E    $32FF   SE       V2, #FF         ; Skip if V2 == 255
$D20    $5DE3   UNKNOWN  $5DE3           ; Unknown 5xxx instruction
$D22    $22CE   CALL     $2CE            ; Call subroutine at 2CE
$D24    $A940   LD       I, $940         ; Load 940 into I
$D26    $0FE3   SYS      $FE3            ; System call to FE3
$D28    $83E0   LD       V3, VE          ; V3 = VE
$D2A    $71AF   ADD      V1, #AF         ; Add 175 to V1
$D2C    $F055   LD       [I], V0         ; Store V0-V0 at I
$D2E    $6361   LD       V3, #61         ; Load 97 into V3
$D30    $F167   UNKNOWN  F167            ; Unknown Fxxx instruction
$D32    $35E7   SE       V5, #E7         ; Skip if V5 == 231
$D34    $1D28   JP       $D28            ; Jump to D28
$D36    $DEA1   DRW      VE, VA, #1      ; Draw 1-byte sprite at VE, VA
$D38    $644F   LD       V4, #4F         ; Load 79 into V4
$D3A    $B384   JP       V0, $384        ; Jump to V0 + 384
$D3C    $87A5   SUB      V7, VA          ; V7 -= VA, VF = !borrow
$D3E    $637E   LD       V3, #7E         ; Load 126 into V3
$D40    $9989   UNKNOWN  $9989           ; Unknown 9xxx instruction
$D42    $8082   AND      V0, V8          ; V0 &= V8
$D44    $B85D   JP       V0, $85D        ; Jump to V0 + 85D
$D46    $1B80   JP       $B80            ; Jump to B80
$D48    $D09F   DRW      V0, V9, #F      ; Draw 15-byte sprite at V0, V9
$D4A    $16CE   JP       $6CE            ; Jump to 6CE
$D4C    $3A73   SE       VA, #73         ; Skip if VA == 115
$D4E    $DB20   DRW      VB, V2, #0      ; Draw 0-byte sprite at VB, V2
$D50    $C35C   RND      V3, #5C         ; V3 = random & 5C
$D52    $C5B2   RND      V5, #B2         ; V5 = random & B2
$D54    $DEBD   DRW      VE, VB, #D      ; Draw 13-byte sprite at VE, VB
$D56    $3997   SE       V9, #97         ; Skip if V9 == 151
$D58    $F7E8   UNKNOWN  F7E8            ; Unknown Fxxx instruction
$D5A    $142D   JP       $42D            ; Jump to 42D
$D5C    $3D0E   SE       VD, #0E         ; Skip if VD == 14
$D5E    $1D69   JP       $D69            ; Jump to D69
$D60    $1DE9   JP       $DE9            ; Jump to DE9
$D62    $1DA8   JP       $DA8            ; Jump to DA8
$D64    $A93E   LD       I, $93E         ; Load 93E into I
$D66    $52F2   UNKNOWN  $52F2           ; Unknown 5xxx instruction
$D68    $44C2   SNE      V4, #C2         ; Skip if V4 != 194
$D6A    $CFE7   RND      VF, #E7         ; VF = random & E7
$D6C    $C418   RND      V4, #18         ; V4 = random & 18
$D6E    $CD91   RND      VD, #91         ; VD = random & 91
$D70    $4BF0   SNE      VB, #F0         ; Skip if VB != 240
$D72    $4BDD   SNE      VB, #DD         ; Skip if VB != 221
$D74    $D786   DRW      V7, V8, #6      ; Draw 6-byte sprite at V7, V8
$D76    $F31F   UNKNOWN  F31F            ; Unknown Fxxx instruction
$D78    $8BE5   SUB      VB, VE          ; VB -= VE, VF = !borrow
$D7A    $8E32   AND      VE, V3          ; VE &= V3
$D7C    $BF94   JP       V0, $F94        ; Jump to V0 + F94
$D7E    $9006   UNKNOWN  $9006           ; Unknown 9xxx instruction
$D80    $D02D   DRW      V0, V2, #D      ; Draw 13-byte sprite at V0, V2
$D82    $A978   LD       I, $978         ; Load 978 into I
$D84    $B606   JP       V0, $606        ; Jump to V0 + 606
$D86    $C812   RND      V8, #12         ; V8 = random & 12
$D88    $8A7C   UNKNOWN  8A7C            ; Unknown 8xxx instruction
$D8A    $9F07   UNKNOWN  $9F07           ; Unknown 9xxx instruction
$D8C    $EADE   UNKNOWN  $EADE           ; Unknown Exxx instruction
$D8E    $DA96   DRW      VA, V9, #6      ; Draw 6-byte sprite at VA, V9
$D90    $1748   JP       $748            ; Jump to 748
$D92    $29D9   CALL     $9D9            ; Call subroutine at 9D9
$D94    $A8E3   LD       I, $8E3         ; Load 8E3 into I
$D96    $56C3   UNKNOWN  $56C3           ; Unknown 5xxx instruction
$D98    $8CDD   UNKNOWN  8CDD            ; Unknown 8xxx instruction
$D9A    $1107   JP       $107            ; Jump to 107
$D9C    $4E6A   SNE      VE, #6A         ; Skip if VE != 106
$D9E    $E96D   UNKNOWN  $E96D           ; Unknown Exxx instruction
$DA0    $AE5C   LD       I, $E5C         ; Load E5C into I
$DA2    $0FAD   SYS      $FAD            ; System call to FAD
$DA4    $802B   UNKNOWN  802B            ; Unknown 8xxx instruction
$DA6    $906F   UNKNOWN  $906F           ; Unknown 9xxx instruction
$DA8    $C4FC   RND      V4, #FC         ; V4 = random & FC
$DAA    $E96B   UNKNOWN  $E96B           ; Unknown Exxx instruction
$DAC    $CDA4   RND      VD, #A4         ; VD = random & A4
$DAE    $7708   ADD      V7, #08         ; Add 8 to V7
$DB0    $A3E3   LD       I, $3E3         ; Load 3E3 into I
$DB2    $237A   CALL     $37A            ; Call subroutine at 37A
$DB4    $354F   SE       V5, #4F         ; Skip if V5 == 79
$DB6    $9283   UNKNOWN  $9283           ; Unknown 9xxx instruction
$DB8    $5723   UNKNOWN  $5723           ; Unknown 5xxx instruction
$DBA    $D71F   DRW      V7, V1, #F      ; Draw 15-byte sprite at V7, V1
$DBC    $C7ED   RND      V7, #ED         ; V7 = random & ED
$DBE    $6827   LD       V8, #27         ; Load 39 into V8
$DC0    $7ED2   ADD      VE, #D2         ; Add 210 to VE
$DC2    $B40D   JP       V0, $40D        ; Jump to V0 + 40D
$DC4    $30A1   SE       V0, #A1         ; Skip if V0 == 161
$DC6    $0FE4   SYS      $FE4            ; System call to FE4
$DC8    $6B1E   LD       VB, #1E         ; Load 30 into VB
$DCA    $AEC1   LD       I, $EC1         ; Load EC1 into I
$DCC    $C660   RND      V6, #60         ; V6 = random & 60
$DCE    $1A18   JP       $A18            ; Jump to A18
$DD0    $4CFD   SNE      VC, #FD         ; Skip if VC != 253
$DD2    $628F   LD       V2, #8F         ; Load 143 into V2
$DD4    $31FA   SE       V1, #FA         ; Skip if V1 == 250
$DD6    $C1E1   RND      V1, #E1         ; V1 = random & E1
$DD8    $0ADD   SYS      $ADD            ; System call to ADD
$DDA    $EEA0   UNKNOWN  $EEA0           ; Unknown Exxx instruction
$DDC    $4566   SNE      V5, #66         ; Skip if V5 != 102
$DDE    $065A   SYS      $65A            ; System call to 65A
$DE0    $13E7   JP       $3E7            ; Jump to 3E7
$DE2    $57A0   SE       V7, VA          ; Skip if V7 == VA
$DE4    $44BB   SNE      V4, #BB         ; Skip if V4 != 187
$DE6    $2BDB   CALL     $BDB            ; Call subroutine at BDB
$DE8    $2E21   CALL     $E21            ; Call subroutine at E21
$DEA    $2AEC   CALL     $AEC            ; Call subroutine at AEC
$DEC    $8629   UNKNOWN  8629            ; Unknown 8xxx instruction
$DEE    $0D5E   SYS      $D5E            ; System call to D5E
$DF0    $EC74   UNKNOWN  $EC74           ; Unknown Exxx instruction
$DF2    $5A17   UNKNOWN  $5A17           ; Unknown 5xxx instruction
$DF4    $F4A2   UNKNOWN  F4A2            ; Unknown Fxxx instruction
$DF6    $2198   CALL     $198            ; Call subroutine at 198
$DF8    $84E7   SUBN     V4, VE          ; V4 = VE - V4, VF = !borrow
$DFA    $BFB6   JP       V0, $FB6        ; Jump to V0 + FB6
$DFC    $791E   ADD      V9, #1E         ; Add 30 to V9
$DFE    $B6F8   JP       V0, $6F8        ; Jump to V0 + 6F8
$E00    $547B   UNKNOWN  $547B           ; Unknown 5xxx instruction
$E02    $5374   UNKNOWN  $5374           ; Unknown 5xxx instruction
$E04    $2E69   CALL     $E69            ; Call subroutine at E69
$E06    $7DEE   ADD      VD, #EE         ; Add 238 to VD
$E08    $6577   LD       V5, #77         ; Load 119 into V5
$E0A    $7CC2   ADD      VC, #C2         ; Add 194 to VC
$E0C    $C8A7   RND      V8, #A7         ; V8 = random & A7
$E0E    $3E7F   SE       VE, #7F         ; Skip if VE == 127
$E10    $4A74   SNE      VA, #74         ; Skip if VA != 116
$E12    $D47B   DRW      V4, V7, #B      ; Draw 11-byte sprite at V4, V7
$E14    $C132   RND      V1, #32         ; V1 = random & 32
$E16    $3DF0   SE       VD, #F0         ; Skip if VD == 240
$E18    $4AEE   SNE      VA, #EE         ; Skip if VA != 238
$E1A    $3368   SE       V3, #68         ; Skip if V3 == 104
$E1C    $BA9C   JP       V0, $A9C        ; Jump to V0 + A9C
$E1E    $1B02   JP       $B02            ; Jump to B02
$E20    $5578   UNKNOWN  $5578           ; Unknown 5xxx instruction
$E22    $D2DE   DRW      V2, VD, #E      ; Draw 14-byte sprite at V2, VD
$E24    $07FC   SYS      $7FC            ; System call to 7FC
$E26    $C17F   RND      V1, #7F         ; V1 = random & 7F
$E28    $3028   SE       V0, #28         ; Skip if V0 == 40
$E2A    $969D   UNKNOWN  $969D           ; Unknown 9xxx instruction
$E2C    $CA0C   RND      VA, #0C         ; VA = random & 0C
$E2E    $EC77   UNKNOWN  $EC77           ; Unknown Exxx instruction
$E30    $2211   CALL     $211            ; Call subroutine at 211
$E32    $7104   ADD      V1, #04         ; Add 4 to V1
$E34    $F775   UNKNOWN  F775            ; Unknown Fxxx instruction
$E36    $56BF   UNKNOWN  $56BF           ; Unknown 5xxx instruction
$E38    $D91F   DRW      V9, V1, #F      ; Draw 15-byte sprite at V9, V1
$E3A    $9A9B   UNKNOWN  $9A9B           ; Unknown 9xxx instruction
$E3C    $500C   UNKNOWN  $500C           ; Unknown 5xxx instruction
$E3E    $A2A3   LD       I, $2A3         ; Load 2A3 into I
$E40    $BEBE   JP       V0, $EBE        ; Jump to V0 + EBE
$E42    $354E   SE       V5, #4E         ; Skip if V5 == 78
$E44    $27CD   CALL     $7CD            ; Call subroutine at 7CD
$E46    $5024   UNKNOWN  $5024           ; Unknown 5xxx instruction
$E48    $05AC   SYS      $5AC            ; System call to 5AC
$E4A    $2817   CALL     $817            ; Call subroutine at 817
$E4C    $4CF3   SNE      VC, #F3         ; Skip if VC != 243
$E4E    $D5C0   DRW      V5, VC, #0      ; Draw 0-byte sprite at V5, VC
$E50    $74E9   ADD      V4, #E9         ; Add 233 to V4
$E52    $AE18   LD       I, $E18         ; Load E18 into I
$E54    $E16A   UNKNOWN  $E16A           ; Unknown Exxx instruction
$E56    $1C09   JP       $C09            ; Jump to C09
$E58    $EFAE   UNKNOWN  $EFAE           ; Unknown Exxx instruction
$E5A    $411A   SNE      V1, #1A         ; Skip if V1 != 26
$E5C    $5086   UNKNOWN  $5086           ; Unknown 5xxx instruction
$E5E    $786B   ADD      V8, #6B         ; Add 107 to V8
$E60    $ECDE   UNKNOWN  $ECDE           ; Unknown Exxx instruction
$E62    $5872   UNKNOWN  $5872           ; Unknown 5xxx instruction
$E64    $02F7   SYS      $2F7            ; System call to 2F7
$E66    $D96C   DRW      V9, V6, #C      ; Draw 12-byte sprite at V9, V6
$E68    $F510   UNKNOWN  F510            ; Unknown Fxxx instruction
$E6A    $F2FA   UNKNOWN  F2FA            ; Unknown Fxxx instruction
$E6C    $488E   SNE      V8, #8E         ; Skip if V8 != 142
$E6E    $7D72   ADD      VD, #72         ; Add 114 to VD
$E70    $B81D   JP       V0, $81D        ; Jump to V0 + 81D
$E72    $00D9   SYS      $0D9            ; System call to 0D9
$E74    $19A6   JP       $9A6            ; Jump to 9A6
$E76    $EBE2   UNKNOWN  $EBE2           ; Unknown Exxx instruction
$E78    $AEC4   LD       I, $EC4         ; Load EC4 into I
$E7A    $CA6B   RND      VA, #6B         ; VA = random & 6B
$E7C    $3D9C   SE       VD, #9C         ; Skip if VD == 156
$E7E    $6F5D   LD       VF, #5D         ; Load 93 into VF
$E80    $BE0D   JP       V0, $E0D        ; Jump to V0 + E0D
$E82    $7DDA   ADD      VD, #DA         ; Add 218 to VD
$E84    $0F70   SYS      $F70            ; System call to F70
$E86    $8595   SUB      V5, V9          ; V5 -= V9, VF = !borrow
$E88    $0062   SYS      $062            ; System call to 062
$E8A    $BA1A   JP       V0, $A1A        ; Jump to V0 + A1A
$E8C    $C3A7   RND      V3, #A7         ; V3 = random & A7
$E8E    $C816   RND      V8, #16         ; V8 = random & 16
$E90    $7847   ADD      V8, #47         ; Add 71 to V8
$E92    $B31E   JP       V0, $31E        ; Jump to V0 + 31E
$E94    $5739   UNKNOWN  $5739           ; Unknown 5xxx instruction
$E96    $33E8   SE       V3, #E8         ; Skip if V3 == 232
$E98    $232E   CALL     $32E            ; Call subroutine at 32E
$E9A    $31AD   SE       V1, #AD         ; Skip if V1 == 173
$E9C    $339A   SE       V3, #9A         ; Skip if V3 == 154
$E9E    $AEEB   LD       I, $EEB         ; Load EEB into I
$EA0    $8091   OR       V0, V9          ; V0 |= V9
$EA2    $2330   CALL     $330            ; Call subroutine at 330
$EA4    $B7CC   JP       V0, $7CC        ; Jump to V0 + 7CC
$EA6    $AC1B   LD       I, $C1B         ; Load C1B into I
$EA8    $FEAA   UNKNOWN  FEAA            ; Unknown Fxxx instruction
$EAA    $9606   UNKNOWN  $9606           ; Unknown 9xxx instruction
$EAC    $72EF   ADD      V2, #EF         ; Add 239 to V2
$EAE    $919A   UNKNOWN  $919A           ; Unknown 9xxx instruction
$EB0    $6A00   LD       VA, #00         ; Load 0 into VA
$EB2    $4B85   SNE      VB, #85         ; Skip if VB != 133
$EB4    $676D   LD       V7, #6D         ; Load 109 into V7
$EB6    $1D12   JP       $D12            ; Jump to D12
$EB8    $C3A8   RND      V3, #A8         ; V3 = random & A8
$EBA    $1CFF   JP       $CFF            ; Jump to CFF
$EBC    $427B   SNE      V2, #7B         ; Skip if V2 != 123
$EBE    $C40E   RND      V4, #0E         ; V4 = random & 0E
$EC0    $C1F0   RND      V1, #F0         ; V1 = random & F0
$EC2    $0C4C   SYS      $C4C            ; System call to C4C
$EC4    $7214   ADD      V2, #14         ; Add 20 to V2
$EC6    $F670   UNKNOWN  F670            ; Unknown Fxxx instruction
$EC8    $0AF2   SYS      $AF2            ; System call to AF2
$ECA    $7676   ADD      V6, #76         ; Add 118 to V6
$ECC    $6A01   LD       VA, #01         ; Load 1 into VA
$ECE    $4F1A   SNE      VF, #1A         ; Skip if VF != 26
$ED0    $BEE6   JP       V0, $EE6        ; Jump to V0 + EE6
$ED2    $B2BE   JP       V0, $2BE        ; Jump to V0 + 2BE
$ED4    $77E2   ADD      V7, #E2         ; Add 226 to V7
$ED6    $4EB5   SNE      VE, #B5         ; Skip if VE != 181
$ED8    $A73B   LD       I, $73B         ; Load 73B into I
$EDA    $38B6   SE       V8, #B6         ; Skip if V8 == 182
$EDC    $534E   UNKNOWN  $534E           ; Unknown 5xxx instruction
$EDE    $E26F   UNKNOWN  $E26F           ; Unknown Exxx instruction
$EE0    $6457   LD       V4, #57         ; Load 87 into V4
$EE2    $3A6D   SE       VA, #6D         ; Skip if VA == 109
$EE4    $6299   LD       V2, #99         ; Load 153 into V2
$EE6    $8F9D   UNKNOWN  8F9D            ; Unknown 8xxx instruction
$EE8    $292D   CALL     $92D            ; Call subroutine at 92D
$EEA    $5CAF   UNKNOWN  $5CAF           ; Unknown 5xxx instruction
$EEC    $2DAC   CALL     $DAC            ; Call subroutine at DAC
$EEE    $40A9   SNE      V0, #A9         ; Skip if V0 != 169
$EF0    $9C2C   UNKNOWN  $9C2C           ; Unknown 9xxx instruction
$EF2    $6D08   LD       VD, #08         ; Load 8 into VD
$EF4    $F420   UNKNOWN  F420            ; Unknown Fxxx instruction
$EF6    $32B1   SE       V2, #B1         ; Skip if V2 == 177
$EF8    $D37C   DRW      V3, V7, #C      ; Draw 12-byte sprite at V3, V7
$EFA    $B566   JP       V0, $566        ; Jump to V0 + 566
$EFC    $9B6F   UNKNOWN  $9B6F           ; Unknown 9xxx instruction
$EFE    $3DFA   SE       VD, #FA         ; Skip if VD == 250
$F00    $EFB1   UNKNOWN  $EFB1           ; Unknown Exxx instruction
$F02    $9275   UNKNOWN  $9275           ; Unknown 9xxx instruction
$F04    $B269   JP       V0, $269        ; Jump to V0 + 269
$F06    $4DFB   SNE      VD, #FB         ; Skip if VD != 251
$F08    $1286   JP       $286            ; Jump to 286
$F0A    $D95F   DRW      V9, V5, #F      ; Draw 15-byte sprite at V9, V5
$F0C    $8B89   UNKNOWN  8B89            ; Unknown 8xxx instruction
$F0E    $085D   SYS      $85D            ; System call to 85D
$F10    $D74D   DRW      V7, V4, #D      ; Draw 13-byte sprite at V7, V4
$F12    $BB0E   JP       V0, $B0E        ; Jump to V0 + B0E
$F14    $C35F   RND      V3, #5F         ; V3 = random & 5F
$F16    $9FDC   UNKNOWN  $9FDC           ; Unknown 9xxx instruction
$F18    $93A5   UNKNOWN  $93A5           ; Unknown 9xxx instruction
$F1A    $493B   SNE      V9, #3B         ; Skip if V9 != 59
$F1C    $6E14   LD       VE, #14         ; Load 20 into VE
$F1E    $A477   LD       I, $477         ; Load 477 into I
$F20    $E5B1   UNKNOWN  $E5B1           ; Unknown Exxx instruction
$F22    $B03B   JP       V0, $03B        ; Jump to V0 + 03B
$F24    $D153   DRW      V1, V5, #3      ; Draw 3-byte sprite at V1, V5
$F26    $920E   UNKNOWN  $920E           ; Unknown 9xxx instruction
$F28    $8C1F   UNKNOWN  8C1F            ; Unknown 8xxx instruction
$F2A    $1E09   JP       $E09            ; Jump to E09
$F2C    $129D   JP       $29D            ; Jump to 29D
$F2E    $7C4D   ADD      VC, #4D         ; Add 77 to VC
$F30    $DD48   DRW      VD, V4, #8      ; Draw 8-byte sprite at VD, V4
$F32    $395C   SE       V9, #5C         ; Skip if V9 == 92
$F34    $DC68   DRW      VC, V6, #8      ; Draw 8-byte sprite at VC, V6
$F36    $8B1F   UNKNOWN  8B1F            ; Unknown 8xxx instruction
$F38    $DF1D   DRW      VF, V1, #D      ; Draw 13-byte sprite at VF, V1
$F3A    $BD54   JP       V0, $D54        ; Jump to V0 + D54
$F3C    $0EFC   SYS      $EFC            ; System call to EFC
$F3E    $45CD   SNE      V5, #CD         ; Skip if V5 != 205
$F40    $BE88   JP       V0, $E88        ; Jump to V0 + E88
$F42    $4049   SNE      V0, #49         ; Skip if V0 != 73
$F44    $719E   ADD      V1, #9E         ; Add 158 to V1
$F46    $474C   SNE      V7, #4C         ; Skip if V7 != 76
$F48    $3222   SE       V2, #22         ; Skip if V2 == 34
$F4A    $537F   UNKNOWN  $537F           ; Unknown 5xxx instruction
$F4C    $FE4C   UNKNOWN  FE4C            ; Unknown Fxxx instruction
$F4E    $C0A9   RND      V0, #A9         ; V0 = random & A9
$F50    $0506   SYS      $506            ; System call to 506
$F52    $ED11   UNKNOWN  $ED11           ; Unknown Exxx instruction
$F54    $037B   SYS      $37B            ; System call to 37B
$F56    $CFB8   RND      VF, #B8         ; VF = random & B8
$F58    $A612   LD       I, $612         ; Load 612 into I
$F5A    $1654   JP       $654            ; Jump to 654
$F5C    $00EB   SYS      $0EB            ; System call to 0EB
$F5E    $00B0   SYS      $0B0            ; System call to 0B0
$F60    $A214   LD       I, $214         ; Load 214 into I
$F62    $B6D8   JP       V0, $6D8        ; Jump to V0 + 6D8
$F64    $4AE7   SNE      VA, #E7         ; Skip if VA != 231
$F66    $4B6D   SNE      VB, #6D         ; Skip if VB != 109
$F68    $08A3   SYS      $8A3            ; System call to 8A3
$F6A    $6E84   LD       VE, #84         ; Load 132 into VE
$F6C    $F95C   UNKNOWN  F95C            ; Unknown Fxxx instruction
$F6E    $23E0   CALL     $3E0            ; Call subroutine at 3E0
$F70    $7C95   ADD      VC, #95         ; Add 149 to VC
$F72    $EF86   UNKNOWN  $EF86           ; Unknown Exxx instruction
$F74    $0B98   SYS      $B98            ; System call to B98
$F76    $6633   LD       V6, #33         ; Load 51 into V6
$F78    $CD86   RND      VD, #86         ; VD = random & 86
$F7A    $FD81   UNKNOWN  FD81            ; Unknown Fxxx instruction
$F7C    $57AB   UNKNOWN  $57AB           ; Unknown 5xxx instruction
$F7E    $3A66   SE       VA, #66         ; Skip if VA == 102
$F80    $BF06   JP       V0, $F06        ; Jump to V0 + F06
$F82    $5030   SE       V0, V3          ; Skip if V0 == V3
$F84    $CD2E   RND      VD, #2E         ; VD = random & 2E
$F86    $D190   DRW      V1, V9, #0      ; Draw 0-byte sprite at V1, V9
$F88    $1EA8   JP       $EA8            ; Jump to EA8
$F8A    $E36F   UNKNOWN  $E36F           ; Unknown Exxx instruction
$F8C    $94B0   SNE      V4, VB          ; Skip if V4 != VB
$F8E    $A192   LD       I, $192         ; Load 192 into I
$F90    $CA03   RND      VA, #03         ; VA = random & 03
$F92    $97C0   SNE      V7, VC          ; Skip if V7 != VC
$F94    $38EE   SE       V8, #EE         ; Skip if V8 == 238
$F96    $6B5B   LD       VB, #5B         ; Load 91 into VB
$F98    $AD5C   LD       I, $D5C         ; Load D5C into I
$F9A    $96AC   UNKNOWN  $96AC           ; Unknown 9xxx instruction
$F9C    $277A   CALL     $77A            ; Call subroutine at 77A
$F9E    $B4B0   JP       V0, $4B0        ; Jump to V0 + 4B0
$FA0    $7B9E   ADD      VB, #9E         ; Add 158 to VB
$FA2    $520B   UNKNOWN  $520B           ; Unknown 5xxx instruction
$FA4    $FCF8   UNKNOWN  FCF8            ; Unknown Fxxx instruction
$FA6    $2308   CALL     $308            ; Call subroutine at 308
$FA8    $F19B   UNKNOWN  F19B            ; Unknown Fxxx instruction
$FAA    $E01F   UNKNOWN  $E01F           ; Unknown Exxx instruction
$FAC    $CC7D   RND      VC, #7D         ; VC = random & 7D
$FAE    $1D9F   JP       $D9F            ; Jump to D9F
$FB0    $EE4F   UNKNOWN  $EE4F           ; Unknown Exxx instruction
$FB2    $4765   SNE      V7, #65         ; Skip if V7 != 101
$FB4    $6AF5   LD       VA, #F5         ; Load 245 into VA
$FB6    $A54F   LD       I, $54F         ; Load 54F into I
$FB8    $119D   JP       $19D            ; Jump to 19D
$FBA    $1DF6   JP       $DF6            ; Jump to DF6
$FBC    $1822   JP       $822            ; Jump to 822
$FBE    $FBA5   UNKNOWN  FBA5            ; Unknown Fxxx instruction
$FC0    $1259   JP       $259            ; Jump to 259
$FC2    $38EE   SE       V8, #EE         ; Skip if V8 == 238
$FC4    $9786   UNKNOWN  $9786           ; Unknown 9xxx instruction
$FC6    $3211   SE       V2, #11         ; Skip if V2 == 17
$FC8    $36B2   SE       V6, #B2         ; Skip if V6 == 178
$FCA    $FADB   UNKNOWN  FADB            ; Unknown Fxxx instruction
$FCC    $3CDB   SE       VC, #DB         ; Skip if VC == 219
$FCE    $976F   UNKNOWN  $976F           ; Unknown 9xxx instruction
$FD0    $A19A   LD       I, $19A         ; Load 19A into I
$FD2    $910C   UNKNOWN  $910C           ; Unknown 9xxx instruction
$FD4    $1933   JP       $933            ; Jump to 933
$FD6    $382C   SE       V8, #2C         ; Skip if V8 == 44
$FD8    $B700   JP       V0, $700        ; Jump to V0 + 700
$FDA    $21EB   CALL     $1EB            ; Call subroutine at 1EB
$FDC    $90F7   UNKNOWN  $90F7           ; Unknown 9xxx instruction
$FDE    $3E03   SE       VE, #03         ; Skip if VE == 3
$FE0    $2ED4   CALL     $ED4            ; Call subroutine at ED4
$FE2    $24B2   CALL     $4B2            ; Call subroutine at 4B2
$FE4    $814A   UNKNOWN  814A            ; Unknown 8xxx instruction
$FE6    $C679   RND      V6, #79         ; V6 = random & 79
$FE8    $112C   JP       $12C            ; Jump to 12C
$FEA    $251D   CALL     $51D            ; Call subroutine at 51D
$FEC    $65B9   LD       V5, #B9         ; Load 185 into V5
$FEE    $72A4   ADD      V2, #A4         ; Add 164 to V2
$FF0    $D5D9   DRW      V5, VD, #9      ; Draw 9-byte sprite at V5, VD
$FF2    $1E9A   JP       $E9A            ; Jump to E9A
$FF4    $2B62   CALL     $B62            ; Call subroutine at B62
$FF6    $F442   UNKNOWN  F442            ; Unknown Fxxx instruction
$FF8    $2809   CALL     $809            ; Call subroutine at 809
$FFA    $0CC7   SYS      $CC7            ; System call to CC7
$FFC    $3775   SE       V7, #75         ; Skip if V7 == 117
$FFE    $115A   JP       $15A            ; Jump to 15A

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 463 (25.8%)
  JP      : 219 (12.2%)
  LD      : 212 (11.8%)
  ADD     : 146 ( 8.1%)
  SE      : 129 ( 7.2%)
  RND     : 127 ( 7.1%)
  CALL    : 122 ( 6.8%)
  SNE     : 122 ( 6.8%)
  DRW     : 104 ( 5.8%)
  SYS     : 103 ( 5.7%)
  AND     :  10 ( 0.6%)
  SUB     :   9 ( 0.5%)
  SHL     :   7 ( 0.4%)
  OR      :   5 ( 0.3%)
  SUBN    :   5 ( 0.3%)
  XOR     :   5 ( 0.3%)
  SHR     :   2 ( 0.1%)
  SKP     :   1 ( 0.1%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 358 (20.0%)
Arithmetic Operations: 180 (10.0%)
