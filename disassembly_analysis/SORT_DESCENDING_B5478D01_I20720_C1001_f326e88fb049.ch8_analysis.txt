
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B5478D01_I20720_C1001_f326e88fb049.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 5478
Instance: 20720
Direction: descending
Final Array: [222, 191, 47, 47, 47, 47, 47, 47]
Operations: R:0 W:6 C:9 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 111
Sort Array References:
  $21C: LD I, $21E ; Load 21E into I
  $224: LD I, $12C ; Load 12C into I
  $274: LD I, $AAA ; Load AAA into I
  $2A6: LD I, $B14 ; Load B14 into I
  $2AE: LD I, $A81 ; Load A81 into I
  $2B4: LD I, $D27 ; Load D27 into I
  $2D0: LD I, $9FA ; Load 9FA into I
  $2DC: LD I, $5D7 ; Load 5D7 into I
  $2EA: LD I, $4E7 ; Load 4E7 into I
  $2EC: LD I, $B67 ; Load B67 into I
  $2F4: LD I, $774 ; Load 774 into I
  $3E6: LD I, $62B ; Load 62B into I
  $40C: LD I, $5B6 ; Load 5B6 into I
  $42A: LD I, $374 ; Load 374 into I
  $446: LD I, $ADA ; Load ADA into I
  $47C: LD I, $A07 ; Load A07 into I
  $480: LD I, $761 ; Load 761 into I
  $4A2: LD I, $42C ; Load 42C into I
  $508: LD I, $4E2 ; Load 4E2 into I
  $514: LD I, $809 ; Load 809 into I
  $530: LD I, $46D ; Load 46D into I
  $574: LD I, $520 ; Load 520 into I
  $58C: LD I, $E56 ; Load E56 into I
  $5A0: LD I, $05A ; Load 05A into I
  $5AC: LD I, $AA5 ; Load AA5 into I
  $5B4: LD I, $7DA ; Load 7DA into I
  $5CC: LD I, $E16 ; Load E16 into I
  $5DC: LD I, $566 ; Load 566 into I
  $5EC: LD I, $7C8 ; Load 7C8 into I
  $5FC: LD I, $D79 ; Load D79 into I
  $60A: LD I, $858 ; Load 858 into I
  $610: LD I, $3A8 ; Load 3A8 into I
  $642: LD I, $FB9 ; Load FB9 into I
  $648: LD I, $2F3 ; Load 2F3 into I
  $65A: LD I, $805 ; Load 805 into I
  $674: LD I, $277 ; Load 277 into I
  $684: LD I, $B4F ; Load B4F into I
  $6D8: LD I, $88E ; Load 88E into I
  $6E8: LD I, $B17 ; Load B17 into I
  $6EC: LD I, $5D8 ; Load 5D8 into I
  $722: LD I, $C08 ; Load C08 into I
  $764: LD I, $C3F ; Load C3F into I
  $76C: LD I, $248 ; Load 248 into I
  $78E: LD I, $4EC ; Load 4EC into I
  $7BA: LD I, $469 ; Load 469 into I
  $846: LD I, $BF2 ; Load BF2 into I
  $85A: LD I, $CAD ; Load CAD into I
  $85E: LD I, $23F ; Load 23F into I
  $868: LD I, $E25 ; Load E25 into I
  $89C: LD I, $587 ; Load 587 into I
  $8A6: LD I, $88C ; Load 88C into I
  $8B0: LD I, $8B6 ; Load 8B6 into I
  $8F0: LD I, $3AE ; Load 3AE into I
  $906: LD I, $369 ; Load 369 into I
  $952: LD I, $A23 ; Load A23 into I
  $958: LD I, $91A ; Load 91A into I
  $962: LD I, $FC1 ; Load FC1 into I
  $96E: LD I, $DB8 ; Load DB8 into I
  $9AE: LD I, $C1F ; Load C1F into I
  $9E4: LD I, $081 ; Load 081 into I
  $9F6: LD I, $5CB ; Load 5CB into I
  $A26: LD I, $1F6 ; Load 1F6 into I
  $A30: LD I, $A00 ; Load A00 into I
  $A3C: LD I, $1E8 ; Load 1E8 into I
  $A5A: LD I, $9FB ; Load 9FB into I
  $A66: LD I, $5BA ; Load 5BA into I
  $A8E: LD I, $E46 ; Load E46 into I
  $A9A: LD I, $789 ; Load 789 into I
  $AA2: LD I, $548 ; Load 548 into I
  $AD6: LD I, $754 ; Load 754 into I
  $ADA: LD I, $AE0 ; Load AE0 into I
  $B0A: LD I, $FE6 ; Load FE6 into I
  $B26: LD I, $345 ; Load 345 into I
  $B28: LD I, $49A ; Load 49A into I
  $B34: LD I, $20E ; Load 20E into I
  $B44: LD I, $899 ; Load 899 into I
  $B52: LD I, $85B ; Load 85B into I
  $B5A: LD I, $8CE ; Load 8CE into I
  $BFC: LD I, $3E4 ; Load 3E4 into I
  $BFE: LD I, $0F6 ; Load 0F6 into I
  $C12: LD [I], V0 ; Store V0-V0 at I
  $C5A: LD I, $E94 ; Load E94 into I
  $C74: LD I, $ED4 ; Load ED4 into I
  $CB2: LD I, $986 ; Load 986 into I
  $CB4: LD I, $A9E ; Load A9E into I
  $CC4: LD I, $BC7 ; Load BC7 into I
  $CEA: LD I, $9D9 ; Load 9D9 into I
  $D1E: LD I, $380 ; Load 380 into I
  $D30: LD I, $ABE ; Load ABE into I
  $D36: LD I, $511 ; Load 511 into I
  $D3C: LD I, $F9D ; Load F9D into I
  $D50: LD I, $9F9 ; Load 9F9 into I
  $D8A: LD I, $BE5 ; Load BE5 into I
  $D92: LD I, $A22 ; Load A22 into I
  $DA0: LD I, $3F9 ; Load 3F9 into I
  $DB8: LD I, $754 ; Load 754 into I
  $DCE: LD I, $C21 ; Load C21 into I
  $DFC: LD I, $A24 ; Load A24 into I
  $E1C: LD I, $76B ; Load 76B into I
  $E38: LD I, $EBC ; Load EBC into I
  $E3E: LD I, $A1E ; Load A1E into I
  $E68: LD I, $864 ; Load 864 into I
  $E70: LD I, $B66 ; Load B66 into I
  $E9C: LD I, $8FB ; Load 8FB into I
  $EBC: LD I, $BB0 ; Load BB0 into I
  $EDA: LD I, $C9F ; Load C9F into I
  $F4E: LD I, $337 ; Load 337 into I
  $F6C: LD I, $C06 ; Load C06 into I
  $F92: LD I, $362 ; Load 362 into I
  $FF4: LD I, $837 ; Load 837 into I
  $FF6: LD I, $8BE ; Load 8BE into I

CONTROL FLOW ANALYSIS:
Jumps: 197
Calls: 183
Branches: 250
Loops: 124
Loop Structures:
  $212 -> $1F1 (backward jump)
  $214 -> $0BB (backward jump)
  $22E -> $144 (backward jump)
  $28C -> $108 (backward jump)
  $2B2 -> $175 (backward jump)
  $2FA -> $066 (backward jump)
  $3D6 -> $1C7 (backward jump)
  $410 -> $182 (backward jump)
  $420 -> $1D7 (backward jump)
  $498 -> $33C (backward jump)
  $4D2 -> $07A (backward jump)
  $4F8 -> $127 (backward jump)
  $51C -> $3A6 (backward jump)
  $51E -> $2AF (backward jump)
  $5A4 -> $267 (backward jump)
  $5BE -> $3C9 (backward jump)
  $5E2 -> $2E2 (backward jump)
  $604 -> $279 (backward jump)
  $67C -> $297 (backward jump)
  $682 -> $5C2 (backward jump)
  $692 -> $4AC (backward jump)
  $6A6 -> $282 (backward jump)
  $6B6 -> $47B (backward jump)
  $704 -> $4A3 (backward jump)
  $72C -> $453 (backward jump)
  $754 -> $3EA (backward jump)
  $790 -> $106 (backward jump)
  $7C4 -> $554 (backward jump)
  $7D0 -> $391 (backward jump)
  $7EE -> $515 (backward jump)
  $83A -> $814 (backward jump)
  $858 -> $1A9 (backward jump)
  $86E -> $5ED (backward jump)
  $87E -> $648 (backward jump)
  $88A -> $07B (backward jump)
  $8A0 -> $895 (backward jump)
  $8E4 -> $2B0 (backward jump)
  $8EA -> $84E (backward jump)
  $8F8 -> $419 (backward jump)
  $914 -> $304 (backward jump)
  $93A -> $0C9 (backward jump)
  $93C -> $050 (backward jump)
  $960 -> $217 (backward jump)
  $9D4 -> $96B (backward jump)
  $A24 -> $9F1 (backward jump)
  $A74 -> $820 (backward jump)
  $A8A -> $98E (backward jump)
  $A92 -> $2C5 (backward jump)
  $AA6 -> $900 (backward jump)
  $ABA -> $A5F (backward jump)
  $AE0 -> $2C5 (backward jump)
  $AE6 -> $019 (backward jump)
  $AFE -> $3A9 (backward jump)
  $B40 -> $814 (backward jump)
  $B42 -> $841 (backward jump)
  $B4A -> $27E (backward jump)
  $B6A -> $762 (backward jump)
  $B8A -> $607 (backward jump)
  $B98 -> $5C0 (backward jump)
  $BA6 -> $3E4 (backward jump)
  $BB0 -> $953 (backward jump)
  $BD2 -> $A10 (backward jump)
  $BE0 -> $03B (backward jump)
  $BF0 -> $A20 (backward jump)
  $C24 -> $743 (backward jump)
  $C52 -> $AD9 (backward jump)
  $C58 -> $2D6 (backward jump)
  $C7A -> $70A (backward jump)
  $C7E -> $4D0 (backward jump)
  $C8E -> $630 (backward jump)
  $CB6 -> $99F (backward jump)
  $CCE -> $730 (backward jump)
  $CDA -> $75B (backward jump)
  $CE0 -> $ABD (backward jump)
  $D0C -> $4F9 (backward jump)
  $D10 -> $094 (backward jump)
  $D32 -> $69D (backward jump)
  $D44 -> $36C (backward jump)
  $D48 -> $72C (backward jump)
  $D4A -> $BFE (backward jump)
  $D6E -> $D06 (backward jump)
  $D76 -> $CF1 (backward jump)
  $D7A -> $5CF (backward jump)
  $D90 -> $275 (backward jump)
  $D98 -> $CFC (backward jump)
  $DAC -> $483 (backward jump)
  $DC2 -> $6BA (backward jump)
  $DC6 -> $7F7 (backward jump)
  $DC8 -> $2FD (backward jump)
  $DD6 -> $918 (backward jump)
  $DD8 -> $674 (backward jump)
  $DE8 -> $6CE (backward jump)
  $DFE -> $C3E (backward jump)
  $E02 -> $DEC (backward jump)
  $E36 -> $005 (backward jump)
  $E7C -> $CB7 (backward jump)
  $E8E -> $855 (backward jump)
  $E94 -> $20E (backward jump)
  $EAC -> $200 (backward jump)
  $EBE -> $343 (backward jump)
  $EF0 -> $77C (backward jump)
  $EFE -> $514 (backward jump)
  $F00 -> $556 (backward jump)
  $F20 -> $E90 (backward jump)
  $F24 -> $223 (backward jump)
  $F2C -> $0F6 (backward jump)
  $F2E -> $8AC (backward jump)
  $F32 -> $BC9 (backward jump)
  $F62 -> $B9F (backward jump)
  $F66 -> $B27 (backward jump)
  $F6A -> $2C3 (backward jump)
  $F72 -> $CC9 (backward jump)
  $F80 -> $2D6 (backward jump)
  $F86 -> $A97 (backward jump)
  $F88 -> $D8F (backward jump)
  $FA4 -> $78E (backward jump)
  $FA6 -> $EB3 (backward jump)
  $FB6 -> $D81 (backward jump)
  $FB8 -> $0C5 (backward jump)
  $FBC -> $DCA (backward jump)
  $FC8 -> $CFD (backward jump)
  $FCC -> $86F (backward jump)
  $FDC -> $F37 (backward jump)
  $FF8 -> $332 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $6BC6   LD       VB, #C6         ; Load 198 into VB
$202    $9FF3   UNKNOWN  $9FF3           ; Unknown 9xxx instruction
$204    $68DE   LD       V8, #DE         ; Load 222 into V8
$206    $470C   SNE      V7, #0C         ; Skip if V7 != 12
$208    $D473   DRW      V4, V7, #3      ; Draw 3-byte sprite at V4, V7
$20A    $30C5   SE       V0, #C5         ; Skip if V0 == 197
$20C    $1791   JP       $791            ; Jump to 791
$20E    $0D98   SYS      $D98            ; System call to D98
$210    $4D5A   SNE      VD, #5A         ; Skip if VD != 90
$212    $B1F1   JP       V0, $1F1        ; Jump to V0 + 1F1
$214    $B0BB   JP       V0, $0BB        ; Jump to V0 + 0BB
$216    $2598   CALL     $598            ; Call subroutine at 598
$218    $E69B   UNKNOWN  $E69B           ; Unknown Exxx instruction
$21A    $F4A5   UNKNOWN  F4A5            ; Unknown Fxxx instruction
$21C    $A21E   LD       I, $21E         ; Load 21E into I
$21E    $F87F   UNKNOWN  F87F            ; Unknown Fxxx instruction
$220    $83C4   ADD      V3, VC          ; V3 += VC, VF = carry
$222    $3992   SE       V9, #92         ; Skip if V9 == 146
$224    $A12C   LD       I, $12C         ; Load 12C into I
$226    $CF5D   RND      VF, #5D         ; VF = random & 5D
$228    $7CDF   ADD      VC, #DF         ; Add 223 to VC
$22A    $0748   SYS      $748            ; System call to 748
$22C    $3E78   SE       VE, #78         ; Skip if VE == 120
$22E    $B144   JP       V0, $144        ; Jump to V0 + 144
$230    $3123   SE       V1, #23         ; Skip if V1 == 35
$232    $EBEB   UNKNOWN  $EBEB           ; Unknown Exxx instruction
$234    $29D2   CALL     $9D2            ; Call subroutine at 9D2
$236    $E38A   UNKNOWN  $E38A           ; Unknown Exxx instruction
$238    $3819   SE       V8, #19         ; Skip if V8 == 25
$23A    $D723   DRW      V7, V2, #3      ; Draw 3-byte sprite at V7, V2
$23C    $5B84   UNKNOWN  $5B84           ; Unknown 5xxx instruction
$23E    $BE69   JP       V0, $E69        ; Jump to V0 + E69
$240    $0F00   SYS      $F00            ; System call to F00
$242    $3436   SE       V4, #36         ; Skip if V4 == 54
$244    $E69B   UNKNOWN  $E69B           ; Unknown Exxx instruction
$246    $4C78   SNE      VC, #78         ; Skip if VC != 120
$248    $9E53   UNKNOWN  $9E53           ; Unknown 9xxx instruction
$24A    $FFA0   UNKNOWN  FFA0            ; Unknown Fxxx instruction
$24C    $0815   SYS      $815            ; System call to 815
$24E    $98A7   UNKNOWN  $98A7           ; Unknown 9xxx instruction
$250    $02B5   SYS      $2B5            ; System call to 2B5
$252    $7C89   ADD      VC, #89         ; Add 137 to VC
$254    $93F3   UNKNOWN  $93F3           ; Unknown 9xxx instruction
$256    $88C9   UNKNOWN  88C9            ; Unknown 8xxx instruction
$258    $864F   UNKNOWN  864F            ; Unknown 8xxx instruction
$25A    $158E   JP       $58E            ; Jump to 58E
$25C    $547E   UNKNOWN  $547E           ; Unknown 5xxx instruction
$25E    $4162   SNE      V1, #62         ; Skip if V1 != 98
$260    $48E8   SNE      V8, #E8         ; Skip if V8 != 232
$262    $1555   JP       $555            ; Jump to 555
$264    $3F3A   SE       VF, #3A         ; Skip if VF == 58
$266    $052D   SYS      $52D            ; System call to 52D
$268    $0624   SYS      $624            ; System call to 624
$26A    $44FA   SNE      V4, #FA         ; Skip if V4 != 250
$26C    $3917   SE       V9, #17         ; Skip if V9 == 23
$26E    $4419   SNE      V4, #19         ; Skip if V4 != 25
$270    $FA8A   UNKNOWN  FA8A            ; Unknown Fxxx instruction
$272    $9DFF   UNKNOWN  $9DFF           ; Unknown 9xxx instruction
$274    $AAAA   LD       I, $AAA         ; Load AAA into I
$276    $2B5B   CALL     $B5B            ; Call subroutine at B5B
$278    $E4CB   UNKNOWN  $E4CB           ; Unknown Exxx instruction
$27A    $D2C6   DRW      V2, VC, #6      ; Draw 6-byte sprite at V2, VC
$27C    $7CDE   ADD      VC, #DE         ; Add 222 to VC
$27E    $3EDE   SE       VE, #DE         ; Skip if VE == 222
$280    $6D7F   LD       VD, #7F         ; Load 127 into VD
$282    $6A34   LD       VA, #34         ; Load 52 into VA
$284    $86CF   UNKNOWN  86CF            ; Unknown 8xxx instruction
$286    $34F3   SE       V4, #F3         ; Skip if V4 == 243
$288    $E71D   UNKNOWN  $E71D           ; Unknown Exxx instruction
$28A    $49E5   SNE      V9, #E5         ; Skip if V9 != 229
$28C    $1108   JP       $108            ; Jump to 108
$28E    $CFFB   RND      VF, #FB         ; VF = random & FB
$290    $6646   LD       V6, #46         ; Load 70 into V6
$292    $91F8   UNKNOWN  $91F8           ; Unknown 9xxx instruction
$294    $0C42   SYS      $C42            ; System call to C42
$296    $7B99   ADD      VB, #99         ; Add 153 to VB
$298    $9F3D   UNKNOWN  $9F3D           ; Unknown 9xxx instruction
$29A    $6C05   LD       VC, #05         ; Load 5 into VC
$29C    $5CD3   UNKNOWN  $5CD3           ; Unknown 5xxx instruction
$29E    $4061   SNE      V0, #61         ; Skip if V0 != 97
$2A0    $0726   SYS      $726            ; System call to 726
$2A2    $6690   LD       V6, #90         ; Load 144 into V6
$2A4    $49BB   SNE      V9, #BB         ; Skip if V9 != 187
$2A6    $AB14   LD       I, $B14         ; Load B14 into I
$2A8    $6EC5   LD       VE, #C5         ; Load 197 into VE
$2AA    $5CE1   UNKNOWN  $5CE1           ; Unknown 5xxx instruction
$2AC    $422E   SNE      V2, #2E         ; Skip if V2 != 46
$2AE    $AA81   LD       I, $A81         ; Load A81 into I
$2B0    $F056   UNKNOWN  F056            ; Unknown Fxxx instruction
$2B2    $B175   JP       V0, $175        ; Jump to V0 + 175
$2B4    $AD27   LD       I, $D27         ; Load D27 into I
$2B6    $7BD9   ADD      VB, #D9         ; Add 217 to VB
$2B8    $B3B0   JP       V0, $3B0        ; Jump to V0 + 3B0
$2BA    $0F8E   SYS      $F8E            ; System call to F8E
$2BC    $F27C   UNKNOWN  F27C            ; Unknown Fxxx instruction
$2BE    $030C   SYS      $30C            ; System call to 30C
$2C0    $B4FD   JP       V0, $4FD        ; Jump to V0 + 4FD
$2C2    $75D0   ADD      V5, #D0         ; Add 208 to V5
$2C4    $73CA   ADD      V3, #CA         ; Add 202 to V3
$2C6    $84BE   SHL      V4              ; V4 <<= 1, VF = MSB
$2C8    $2219   CALL     $219            ; Call subroutine at 219
$2CA    $94FF   UNKNOWN  $94FF           ; Unknown 9xxx instruction
$2CC    $EA94   UNKNOWN  $EA94           ; Unknown Exxx instruction
$2CE    $8C10   LD       VC, V1          ; VC = V1
$2D0    $A9FA   LD       I, $9FA         ; Load 9FA into I
$2D2    $B5BD   JP       V0, $5BD        ; Jump to V0 + 5BD
$2D4    $9B62   UNKNOWN  $9B62           ; Unknown 9xxx instruction
$2D6    $F69E   UNKNOWN  F69E            ; Unknown Fxxx instruction
$2D8    $9B3E   UNKNOWN  $9B3E           ; Unknown 9xxx instruction
$2DA    $017C   SYS      $17C            ; System call to 17C
$2DC    $A5D7   LD       I, $5D7         ; Load 5D7 into I
$2DE    $D889   DRW      V8, V8, #9      ; Draw 9-byte sprite at V8, V8
$2E0    $9A7A   UNKNOWN  $9A7A           ; Unknown 9xxx instruction
$2E2    $9F24   UNKNOWN  $9F24           ; Unknown 9xxx instruction
$2E4    $C530   RND      V5, #30         ; V5 = random & 30
$2E6    $90A7   UNKNOWN  $90A7           ; Unknown 9xxx instruction
$2E8    $6529   LD       V5, #29         ; Load 41 into V5
$2EA    $A4E7   LD       I, $4E7         ; Load 4E7 into I
$2EC    $AB67   LD       I, $B67         ; Load B67 into I
$2EE    $D20B   DRW      V2, V0, #B      ; Draw 11-byte sprite at V2, V0
$2F0    $486D   SNE      V8, #6D         ; Skip if V8 != 109
$2F2    $EA5E   UNKNOWN  $EA5E           ; Unknown Exxx instruction
$2F4    $A774   LD       I, $774         ; Load 774 into I
$2F6    $3440   SE       V4, #40         ; Skip if V4 == 64
$2F8    $E455   UNKNOWN  $E455           ; Unknown Exxx instruction
$2FA    $B066   JP       V0, $066        ; Jump to V0 + 066
$2FC    $FB02   UNKNOWN  FB02            ; Unknown Fxxx instruction
$2FE    $2615   CALL     $615            ; Call subroutine at 615
$300    $DEBF   DRW      VE, VB, #F      ; Draw 15-byte sprite at VE, VB
$302    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$304    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$306    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$308    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$30A    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$30C    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$30E    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$310    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$312    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$314    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$316    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$318    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$31A    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$31C    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$31E    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$320    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$322    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$324    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$326    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$328    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$32A    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$32C    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$32E    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$330    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$332    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$334    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$336    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$338    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$33A    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$33C    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$33E    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$340    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$342    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$344    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$346    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$348    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$34A    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$34C    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$34E    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$350    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$352    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$354    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$356    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$358    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$35A    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$35C    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$35E    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$360    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$362    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$364    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$366    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$368    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$36A    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$36C    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$36E    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$370    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$372    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$374    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$376    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$378    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$37A    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$37C    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$37E    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$380    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$382    $312C   SE       V1, #2C         ; Skip if V1 == 44
$384    $EBF0   UNKNOWN  $EBF0           ; Unknown Exxx instruction
$386    $4A33   SNE      VA, #33         ; Skip if VA != 51
$388    $E65D   UNKNOWN  $E65D           ; Unknown Exxx instruction
$38A    $D17F   DRW      V1, V7, #F      ; Draw 15-byte sprite at V1, V7
$38C    $97CB   UNKNOWN  $97CB           ; Unknown 9xxx instruction
$38E    $24E3   CALL     $4E3            ; Call subroutine at 4E3
$390    $4854   SNE      V8, #54         ; Skip if V8 != 84
$392    $CEBE   RND      VE, #BE         ; VE = random & BE
$394    $8128   UNKNOWN  8128            ; Unknown 8xxx instruction
$396    $F625   UNKNOWN  F625            ; Unknown Fxxx instruction
$398    $8C8C   UNKNOWN  8C8C            ; Unknown 8xxx instruction
$39A    $B747   JP       V0, $747        ; Jump to V0 + 747
$39C    $4EEE   SNE      VE, #EE         ; Skip if VE != 238
$39E    $53E7   UNKNOWN  $53E7           ; Unknown 5xxx instruction
$3A0    $DF90   DRW      VF, V9, #0      ; Draw 0-byte sprite at VF, V9
$3A2    $6C34   LD       VC, #34         ; Load 52 into VC
$3A4    $06AD   SYS      $6AD            ; System call to 6AD
$3A6    $F275   UNKNOWN  F275            ; Unknown Fxxx instruction
$3A8    $43AA   SNE      V3, #AA         ; Skip if V3 != 170
$3AA    $5F95   UNKNOWN  $5F95           ; Unknown 5xxx instruction
$3AC    $E375   UNKNOWN  $E375           ; Unknown Exxx instruction
$3AE    $27BF   CALL     $7BF            ; Call subroutine at 7BF
$3B0    $14B4   JP       $4B4            ; Jump to 4B4
$3B2    $7C36   ADD      VC, #36         ; Add 54 to VC
$3B4    $8FD4   ADD      VF, VD          ; VF += VD, VF = carry
$3B6    $E042   UNKNOWN  $E042           ; Unknown Exxx instruction
$3B8    $FCE0   UNKNOWN  FCE0            ; Unknown Fxxx instruction
$3BA    $4B05   SNE      VB, #05         ; Skip if VB != 5
$3BC    $0701   SYS      $701            ; System call to 701
$3BE    $D1D8   DRW      V1, VD, #8      ; Draw 8-byte sprite at V1, VD
$3C0    $646B   LD       V4, #6B         ; Load 107 into V4
$3C2    $55F5   UNKNOWN  $55F5           ; Unknown 5xxx instruction
$3C4    $E49C   UNKNOWN  $E49C           ; Unknown Exxx instruction
$3C6    $FE78   UNKNOWN  FE78            ; Unknown Fxxx instruction
$3C8    $3709   SE       V7, #09         ; Skip if V7 == 9
$3CA    $1DEF   JP       $DEF            ; Jump to DEF
$3CC    $6673   LD       V6, #73         ; Load 115 into V6
$3CE    $B963   JP       V0, $963        ; Jump to V0 + 963
$3D0    $7CB0   ADD      VC, #B0         ; Add 176 to VC
$3D2    $C9DF   RND      V9, #DF         ; V9 = random & DF
$3D4    $7207   ADD      V2, #07         ; Add 7 to V2
$3D6    $B1C7   JP       V0, $1C7        ; Jump to V0 + 1C7
$3D8    $9938   UNKNOWN  $9938           ; Unknown 9xxx instruction
$3DA    $9B5C   UNKNOWN  $9B5C           ; Unknown 9xxx instruction
$3DC    $097E   SYS      $97E            ; System call to 97E
$3DE    $9FA8   UNKNOWN  $9FA8           ; Unknown 9xxx instruction
$3E0    $1569   JP       $569            ; Jump to 569
$3E2    $9F1B   UNKNOWN  $9F1B           ; Unknown 9xxx instruction
$3E4    $4834   SNE      V8, #34         ; Skip if V8 != 52
$3E6    $A62B   LD       I, $62B         ; Load 62B into I
$3E8    $199A   JP       $99A            ; Jump to 99A
$3EA    $5000   SE       V0, V0          ; Skip if V0 == V0
$3EC    $03BE   SYS      $3BE            ; System call to 3BE
$3EE    $5BE3   UNKNOWN  $5BE3           ; Unknown 5xxx instruction
$3F0    $7D78   ADD      VD, #78         ; Add 120 to VD
$3F2    $5E84   UNKNOWN  $5E84           ; Unknown 5xxx instruction
$3F4    $0688   SYS      $688            ; System call to 688
$3F6    $CD54   RND      VD, #54         ; VD = random & 54
$3F8    $212A   CALL     $12A            ; Call subroutine at 12A
$3FA    $3329   SE       V3, #29         ; Skip if V3 == 41
$3FC    $52E2   UNKNOWN  $52E2           ; Unknown 5xxx instruction
$3FE    $CC3F   RND      VC, #3F         ; VC = random & 3F
$400    $029B   SYS      $29B            ; System call to 29B
$402    $3BDC   SE       VB, #DC         ; Skip if VB == 220
$404    $689E   LD       V8, #9E         ; Load 158 into V8
$406    $6520   LD       V5, #20         ; Load 32 into V5
$408    $DC44   DRW      VC, V4, #4      ; Draw 4-byte sprite at VC, V4
$40A    $3204   SE       V2, #04         ; Skip if V2 == 4
$40C    $A5B6   LD       I, $5B6         ; Load 5B6 into I
$40E    $84A2   AND      V4, VA          ; V4 &= VA
$410    $1182   JP       $182            ; Jump to 182
$412    $3B2E   SE       VB, #2E         ; Skip if VB == 46
$414    $CAA5   RND      VA, #A5         ; VA = random & A5
$416    $2DA1   CALL     $DA1            ; Call subroutine at DA1
$418    $41E3   SNE      V1, #E3         ; Skip if V1 != 227
$41A    $D70C   DRW      V7, V0, #C      ; Draw 12-byte sprite at V7, V0
$41C    $4E6F   SNE      VE, #6F         ; Skip if VE != 111
$41E    $8763   XOR      V7, V6          ; V7 ^= V6
$420    $11D7   JP       $1D7            ; Jump to 1D7
$422    $5D71   UNKNOWN  $5D71           ; Unknown 5xxx instruction
$424    $2A2E   CALL     $A2E            ; Call subroutine at A2E
$426    $F14E   UNKNOWN  F14E            ; Unknown Fxxx instruction
$428    $5FB9   UNKNOWN  $5FB9           ; Unknown 5xxx instruction
$42A    $A374   LD       I, $374         ; Load 374 into I
$42C    $88D7   SUBN     V8, VD          ; V8 = VD - V8, VF = !borrow
$42E    $E0D9   UNKNOWN  $E0D9           ; Unknown Exxx instruction
$430    $15B8   JP       $5B8            ; Jump to 5B8
$432    $7482   ADD      V4, #82         ; Add 130 to V4
$434    $D8EA   DRW      V8, VE, #A      ; Draw 10-byte sprite at V8, VE
$436    $030F   SYS      $30F            ; System call to 30F
$438    $4B85   SNE      VB, #85         ; Skip if VB != 133
$43A    $CC45   RND      VC, #45         ; VC = random & 45
$43C    $6054   LD       V0, #54         ; Load 84 into V0
$43E    $288A   CALL     $88A            ; Call subroutine at 88A
$440    $2EE0   CALL     $EE0            ; Call subroutine at EE0
$442    $F85B   UNKNOWN  F85B            ; Unknown Fxxx instruction
$444    $DDAB   DRW      VD, VA, #B      ; Draw 11-byte sprite at VD, VA
$446    $AADA   LD       I, $ADA         ; Load ADA into I
$448    $08FE   SYS      $8FE            ; System call to 8FE
$44A    $7578   ADD      V5, #78         ; Add 120 to V5
$44C    $9C65   UNKNOWN  $9C65           ; Unknown 9xxx instruction
$44E    $B56C   JP       V0, $56C        ; Jump to V0 + 56C
$450    $6664   LD       V6, #64         ; Load 100 into V6
$452    $1C60   JP       $C60            ; Jump to C60
$454    $F4A1   UNKNOWN  F4A1            ; Unknown Fxxx instruction
$456    $CB59   RND      VB, #59         ; VB = random & 59
$458    $FE21   UNKNOWN  FE21            ; Unknown Fxxx instruction
$45A    $63E6   LD       V3, #E6         ; Load 230 into V3
$45C    $B772   JP       V0, $772        ; Jump to V0 + 772
$45E    $73CE   ADD      V3, #CE         ; Add 206 to V3
$460    $2D39   CALL     $D39            ; Call subroutine at D39
$462    $0878   SYS      $878            ; System call to 878
$464    $0DA5   SYS      $DA5            ; System call to DA5
$466    $0AA9   SYS      $AA9            ; System call to AA9
$468    $D3EF   DRW      V3, VE, #F      ; Draw 15-byte sprite at V3, VE
$46A    $BC5B   JP       V0, $C5B        ; Jump to V0 + C5B
$46C    $BB6A   JP       V0, $B6A        ; Jump to V0 + B6A
$46E    $4191   SNE      V1, #91         ; Skip if V1 != 145
$470    $3790   SE       V7, #90         ; Skip if V7 == 144
$472    $9DFC   UNKNOWN  $9DFC           ; Unknown 9xxx instruction
$474    $99D9   UNKNOWN  $99D9           ; Unknown 9xxx instruction
$476    $369E   SE       V6, #9E         ; Skip if V6 == 158
$478    $C4EC   RND      V4, #EC         ; V4 = random & EC
$47A    $D5FE   DRW      V5, VF, #E      ; Draw 14-byte sprite at V5, VF
$47C    $AA07   LD       I, $A07         ; Load A07 into I
$47E    $58E4   UNKNOWN  $58E4           ; Unknown 5xxx instruction
$480    $A761   LD       I, $761         ; Load 761 into I
$482    $3A30   SE       VA, #30         ; Skip if VA == 48
$484    $3C17   SE       VC, #17         ; Skip if VC == 23
$486    $25D2   CALL     $5D2            ; Call subroutine at 5D2
$488    $0E27   SYS      $E27            ; System call to E27
$48A    $FCD4   UNKNOWN  FCD4            ; Unknown Fxxx instruction
$48C    $5BBA   UNKNOWN  $5BBA           ; Unknown 5xxx instruction
$48E    $696B   LD       V9, #6B         ; Load 107 into V9
$490    $D79D   DRW      V7, V9, #D      ; Draw 13-byte sprite at V7, V9
$492    $16E5   JP       $6E5            ; Jump to 6E5
$494    $41A8   SNE      V1, #A8         ; Skip if V1 != 168
$496    $D5F4   DRW      V5, VF, #4      ; Draw 4-byte sprite at V5, VF
$498    $B33C   JP       V0, $33C        ; Jump to V0 + 33C
$49A    $65DD   LD       V5, #DD         ; Load 221 into V5
$49C    $D340   DRW      V3, V4, #0      ; Draw 0-byte sprite at V3, V4
$49E    $9A30   SNE      VA, V3          ; Skip if VA != V3
$4A0    $8E96   SHR      VE              ; VE >>= 1, VF = LSB
$4A2    $A42C   LD       I, $42C         ; Load 42C into I
$4A4    $204F   CALL     $04F            ; Call subroutine at 04F
$4A6    $0DFC   SYS      $DFC            ; System call to DFC
$4A8    $2489   CALL     $489            ; Call subroutine at 489
$4AA    $9A5C   UNKNOWN  $9A5C           ; Unknown 9xxx instruction
$4AC    $40A5   SNE      V0, #A5         ; Skip if V0 != 165
$4AE    $608E   LD       V0, #8E         ; Load 142 into V0
$4B0    $3257   SE       V2, #57         ; Skip if V2 == 87
$4B2    $B96F   JP       V0, $96F        ; Jump to V0 + 96F
$4B4    $824D   UNKNOWN  824D            ; Unknown 8xxx instruction
$4B6    $930E   UNKNOWN  $930E           ; Unknown 9xxx instruction
$4B8    $21EB   CALL     $1EB            ; Call subroutine at 1EB
$4BA    $45D9   SNE      V5, #D9         ; Skip if V5 != 217
$4BC    $646C   LD       V4, #6C         ; Load 108 into V4
$4BE    $4326   SNE      V3, #26         ; Skip if V3 != 38
$4C0    $9ED6   UNKNOWN  $9ED6           ; Unknown 9xxx instruction
$4C2    $5831   UNKNOWN  $5831           ; Unknown 5xxx instruction
$4C4    $6C67   LD       VC, #67         ; Load 103 into VC
$4C6    $40BB   SNE      V0, #BB         ; Skip if V0 != 187
$4C8    $E380   UNKNOWN  $E380           ; Unknown Exxx instruction
$4CA    $22F8   CALL     $2F8            ; Call subroutine at 2F8
$4CC    $94FF   UNKNOWN  $94FF           ; Unknown 9xxx instruction
$4CE    $27A4   CALL     $7A4            ; Call subroutine at 7A4
$4D0    $012E   SYS      $12E            ; System call to 12E
$4D2    $B07A   JP       V0, $07A        ; Jump to V0 + 07A
$4D4    $F9B2   UNKNOWN  F9B2            ; Unknown Fxxx instruction
$4D6    $5097   UNKNOWN  $5097           ; Unknown 5xxx instruction
$4D8    $8350   LD       V3, V5          ; V3 = V5
$4DA    $C8DE   RND      V8, #DE         ; V8 = random & DE
$4DC    $6FA7   LD       VF, #A7         ; Load 167 into VF
$4DE    $2CA9   CALL     $CA9            ; Call subroutine at CA9
$4E0    $5A6A   UNKNOWN  $5A6A           ; Unknown 5xxx instruction
$4E2    $EDA2   UNKNOWN  $EDA2           ; Unknown Exxx instruction
$4E4    $DCD3   DRW      VC, VD, #3      ; Draw 3-byte sprite at VC, VD
$4E6    $3A87   SE       VA, #87         ; Skip if VA == 135
$4E8    $0E39   SYS      $E39            ; System call to E39
$4EA    $6A18   LD       VA, #18         ; Load 24 into VA
$4EC    $154C   JP       $54C            ; Jump to 54C
$4EE    $81BC   UNKNOWN  81BC            ; Unknown 8xxx instruction
$4F0    $BB0D   JP       V0, $B0D        ; Jump to V0 + B0D
$4F2    $FF6E   UNKNOWN  FF6E            ; Unknown Fxxx instruction
$4F4    $CBC0   RND      VB, #C0         ; VB = random & C0
$4F6    $DCA1   DRW      VC, VA, #1      ; Draw 1-byte sprite at VC, VA
$4F8    $1127   JP       $127            ; Jump to 127
$4FA    $0476   SYS      $476            ; System call to 476
$4FC    $C5B3   RND      V5, #B3         ; V5 = random & B3
$4FE    $7EBD   ADD      VE, #BD         ; Add 189 to VE
$500    $D645   DRW      V6, V4, #5      ; Draw 5-byte sprite at V6, V4
$502    $2077   CALL     $077            ; Call subroutine at 077
$504    $227A   CALL     $27A            ; Call subroutine at 27A
$506    $FFF4   UNKNOWN  FFF4            ; Unknown Fxxx instruction
$508    $A4E2   LD       I, $4E2         ; Load 4E2 into I
$50A    $7EF3   ADD      VE, #F3         ; Add 243 to VE
$50C    $C3CA   RND      V3, #CA         ; V3 = random & CA
$50E    $829D   UNKNOWN  829D            ; Unknown 8xxx instruction
$510    $0BFD   SYS      $BFD            ; System call to BFD
$512    $9BAF   UNKNOWN  $9BAF           ; Unknown 9xxx instruction
$514    $A809   LD       I, $809         ; Load 809 into I
$516    $3D36   SE       VD, #36         ; Skip if VD == 54
$518    $CFE3   RND      VF, #E3         ; VF = random & E3
$51A    $E585   UNKNOWN  $E585           ; Unknown Exxx instruction
$51C    $13A6   JP       $3A6            ; Jump to 3A6
$51E    $B2AF   JP       V0, $2AF        ; Jump to V0 + 2AF
$520    $E379   UNKNOWN  $E379           ; Unknown Exxx instruction
$522    $D383   DRW      V3, V8, #3      ; Draw 3-byte sprite at V3, V8
$524    $4721   SNE      V7, #21         ; Skip if V7 != 33
$526    $DDD2   DRW      VD, VD, #2      ; Draw 2-byte sprite at VD, VD
$528    $EF53   UNKNOWN  $EF53           ; Unknown Exxx instruction
$52A    $3462   SE       V4, #62         ; Skip if V4 == 98
$52C    $1631   JP       $631            ; Jump to 631
$52E    $84C3   XOR      V4, VC          ; V4 ^= VC
$530    $A46D   LD       I, $46D         ; Load 46D into I
$532    $900E   UNKNOWN  $900E           ; Unknown 9xxx instruction
$534    $D7FF   DRW      V7, VF, #F      ; Draw 15-byte sprite at V7, VF
$536    $6705   LD       V7, #05         ; Load 5 into V7
$538    $6AAC   LD       VA, #AC         ; Load 172 into VA
$53A    $291B   CALL     $91B            ; Call subroutine at 91B
$53C    $1A50   JP       $A50            ; Jump to A50
$53E    $4907   SNE      V9, #07         ; Skip if V9 != 7
$540    $C6F5   RND      V6, #F5         ; V6 = random & F5
$542    $7F2F   ADD      VF, #2F         ; Add 47 to VF
$544    $07CF   SYS      $7CF            ; System call to 7CF
$546    $2ED0   CALL     $ED0            ; Call subroutine at ED0
$548    $EA0F   UNKNOWN  $EA0F           ; Unknown Exxx instruction
$54A    $E95F   UNKNOWN  $E95F           ; Unknown Exxx instruction
$54C    $5AFB   UNKNOWN  $5AFB           ; Unknown 5xxx instruction
$54E    $708C   ADD      V0, #8C         ; Add 140 to V0
$550    $BFA4   JP       V0, $FA4        ; Jump to V0 + FA4
$552    $2E92   CALL     $E92            ; Call subroutine at E92
$554    $5E88   UNKNOWN  $5E88           ; Unknown 5xxx instruction
$556    $0D3F   SYS      $D3F            ; System call to D3F
$558    $15A7   JP       $5A7            ; Jump to 5A7
$55A    $01FE   SYS      $1FE            ; System call to 1FE
$55C    $78CC   ADD      V8, #CC         ; Add 204 to V8
$55E    $E56B   UNKNOWN  $E56B           ; Unknown Exxx instruction
$560    $D144   DRW      V1, V4, #4      ; Draw 4-byte sprite at V1, V4
$562    $32FA   SE       V2, #FA         ; Skip if V2 == 250
$564    $193A   JP       $93A            ; Jump to 93A
$566    $0A06   SYS      $A06            ; System call to A06
$568    $63D8   LD       V3, #D8         ; Load 216 into V3
$56A    $6B9C   LD       VB, #9C         ; Load 156 into VB
$56C    $9636   UNKNOWN  $9636           ; Unknown 9xxx instruction
$56E    $31C5   SE       V1, #C5         ; Skip if V1 == 197
$570    $CBF7   RND      VB, #F7         ; VB = random & F7
$572    $34FC   SE       V4, #FC         ; Skip if V4 == 252
$574    $A520   LD       I, $520         ; Load 520 into I
$576    $158C   JP       $58C            ; Jump to 58C
$578    $604C   LD       V0, #4C         ; Load 76 into V0
$57A    $0A91   SYS      $A91            ; System call to A91
$57C    $F605   UNKNOWN  F605            ; Unknown Fxxx instruction
$57E    $CF86   RND      VF, #86         ; VF = random & 86
$580    $2809   CALL     $809            ; Call subroutine at 809
$582    $4615   SNE      V6, #15         ; Skip if V6 != 21
$584    $7D2F   ADD      VD, #2F         ; Add 47 to VD
$586    $57E1   UNKNOWN  $57E1           ; Unknown 5xxx instruction
$588    $D6BE   DRW      V6, VB, #E      ; Draw 14-byte sprite at V6, VB
$58A    $37B1   SE       V7, #B1         ; Skip if V7 == 177
$58C    $AE56   LD       I, $E56         ; Load E56 into I
$58E    $9441   UNKNOWN  $9441           ; Unknown 9xxx instruction
$590    $74FD   ADD      V4, #FD         ; Add 253 to V4
$592    $93B5   UNKNOWN  $93B5           ; Unknown 9xxx instruction
$594    $7813   ADD      V8, #13         ; Add 19 to V8
$596    $16CA   JP       $6CA            ; Jump to 6CA
$598    $36CD   SE       V6, #CD         ; Skip if V6 == 205
$59A    $D1EA   DRW      V1, VE, #A      ; Draw 10-byte sprite at V1, VE
$59C    $4880   SNE      V8, #80         ; Skip if V8 != 128
$59E    $7CB4   ADD      VC, #B4         ; Add 180 to VC
$5A0    $A05A   LD       I, $05A         ; Load 05A into I
$5A2    $3E81   SE       VE, #81         ; Skip if VE == 129
$5A4    $1267   JP       $267            ; Jump to 267
$5A6    $D307   DRW      V3, V0, #7      ; Draw 7-byte sprite at V3, V0
$5A8    $65B4   LD       V5, #B4         ; Load 180 into V5
$5AA    $C949   RND      V9, #49         ; V9 = random & 49
$5AC    $AAA5   LD       I, $AA5         ; Load AA5 into I
$5AE    $2959   CALL     $959            ; Call subroutine at 959
$5B0    $F63A   UNKNOWN  F63A            ; Unknown Fxxx instruction
$5B2    $3143   SE       V1, #43         ; Skip if V1 == 67
$5B4    $A7DA   LD       I, $7DA         ; Load 7DA into I
$5B6    $4A4F   SNE      VA, #4F         ; Skip if VA != 79
$5B8    $8622   AND      V6, V2          ; V6 &= V2
$5BA    $95CF   UNKNOWN  $95CF           ; Unknown 9xxx instruction
$5BC    $276F   CALL     $76F            ; Call subroutine at 76F
$5BE    $13C9   JP       $3C9            ; Jump to 3C9
$5C0    $5F5B   UNKNOWN  $5F5B           ; Unknown 5xxx instruction
$5C2    $EC49   UNKNOWN  $EC49           ; Unknown Exxx instruction
$5C4    $842D   UNKNOWN  842D            ; Unknown 8xxx instruction
$5C6    $DE37   DRW      VE, V3, #7      ; Draw 7-byte sprite at VE, V3
$5C8    $954E   UNKNOWN  $954E           ; Unknown 9xxx instruction
$5CA    $8BD0   LD       VB, VD          ; VB = VD
$5CC    $AE16   LD       I, $E16         ; Load E16 into I
$5CE    $EF6B   UNKNOWN  $EF6B           ; Unknown Exxx instruction
$5D0    $F427   UNKNOWN  F427            ; Unknown Fxxx instruction
$5D2    $1726   JP       $726            ; Jump to 726
$5D4    $729B   ADD      V2, #9B         ; Add 155 to V2
$5D6    $0627   SYS      $627            ; System call to 627
$5D8    $01CC   SYS      $1CC            ; System call to 1CC
$5DA    $30A6   SE       V0, #A6         ; Skip if V0 == 166
$5DC    $A566   LD       I, $566         ; Load 566 into I
$5DE    $31C2   SE       V1, #C2         ; Skip if V1 == 194
$5E0    $BC68   JP       V0, $C68        ; Jump to V0 + C68
$5E2    $B2E2   JP       V0, $2E2        ; Jump to V0 + 2E2
$5E4    $1786   JP       $786            ; Jump to 786
$5E6    $3FC0   SE       VF, #C0         ; Skip if VF == 192
$5E8    $0E76   SYS      $E76            ; System call to E76
$5EA    $E588   UNKNOWN  $E588           ; Unknown Exxx instruction
$5EC    $A7C8   LD       I, $7C8         ; Load 7C8 into I
$5EE    $0967   SYS      $967            ; System call to 967
$5F0    $5EA8   UNKNOWN  $5EA8           ; Unknown 5xxx instruction
$5F2    $D7E0   DRW      V7, VE, #0      ; Draw 0-byte sprite at V7, VE
$5F4    $781C   ADD      V8, #1C         ; Add 28 to V8
$5F6    $F029   LD       F, V0           ; I = sprite address for digit V0
$5F8    $5D2E   UNKNOWN  $5D2E           ; Unknown 5xxx instruction
$5FA    $35ED   SE       V5, #ED         ; Skip if V5 == 237
$5FC    $AD79   LD       I, $D79         ; Load D79 into I
$5FE    $4B20   SNE      VB, #20         ; Skip if VB != 32
$600    $422A   SNE      V2, #2A         ; Skip if V2 != 42
$602    $83BC   UNKNOWN  83BC            ; Unknown 8xxx instruction
$604    $B279   JP       V0, $279        ; Jump to V0 + 279
$606    $0668   SYS      $668            ; System call to 668
$608    $8149   UNKNOWN  8149            ; Unknown 8xxx instruction
$60A    $A858   LD       I, $858         ; Load 858 into I
$60C    $72F9   ADD      V2, #F9         ; Add 249 to V2
$60E    $D40A   DRW      V4, V0, #A      ; Draw 10-byte sprite at V4, V0
$610    $A3A8   LD       I, $3A8         ; Load 3A8 into I
$612    $8B9A   UNKNOWN  8B9A            ; Unknown 8xxx instruction
$614    $4E7A   SNE      VE, #7A         ; Skip if VE != 122
$616    $BE5F   JP       V0, $E5F        ; Jump to V0 + E5F
$618    $B811   JP       V0, $811        ; Jump to V0 + 811
$61A    $90C3   UNKNOWN  $90C3           ; Unknown 9xxx instruction
$61C    $88C6   SHR      V8              ; V8 >>= 1, VF = LSB
$61E    $0C9F   SYS      $C9F            ; System call to C9F
$620    $3039   SE       V0, #39         ; Skip if V0 == 57
$622    $413E   SNE      V1, #3E         ; Skip if V1 != 62
$624    $18BF   JP       $8BF            ; Jump to 8BF
$626    $DF75   DRW      VF, V7, #5      ; Draw 5-byte sprite at VF, V7
$628    $37C9   SE       V7, #C9         ; Skip if V7 == 201
$62A    $18C5   JP       $8C5            ; Jump to 8C5
$62C    $C4C5   RND      V4, #C5         ; V4 = random & C5
$62E    $24B8   CALL     $4B8            ; Call subroutine at 4B8
$630    $6808   LD       V8, #08         ; Load 8 into V8
$632    $044F   SYS      $44F            ; System call to 44F
$634    $C375   RND      V3, #75         ; V3 = random & 75
$636    $F59D   UNKNOWN  F59D            ; Unknown Fxxx instruction
$638    $67A3   LD       V7, #A3         ; Load 163 into V7
$63A    $EBD4   UNKNOWN  $EBD4           ; Unknown Exxx instruction
$63C    $0B09   SYS      $B09            ; System call to B09
$63E    $2FC4   CALL     $FC4            ; Call subroutine at FC4
$640    $3F16   SE       VF, #16         ; Skip if VF == 22
$642    $AFB9   LD       I, $FB9         ; Load FB9 into I
$644    $67DD   LD       V7, #DD         ; Load 221 into V7
$646    $730D   ADD      V3, #0D         ; Add 13 to V3
$648    $A2F3   LD       I, $2F3         ; Load 2F3 into I
$64A    $5C4F   UNKNOWN  $5C4F           ; Unknown 5xxx instruction
$64C    $B948   JP       V0, $948        ; Jump to V0 + 948
$64E    $B7E4   JP       V0, $7E4        ; Jump to V0 + 7E4
$650    $18A2   JP       $8A2            ; Jump to 8A2
$652    $1820   JP       $820            ; Jump to 820
$654    $F96A   UNKNOWN  F96A            ; Unknown Fxxx instruction
$656    $6948   LD       V9, #48         ; Load 72 into V9
$658    $0E91   SYS      $E91            ; System call to E91
$65A    $A805   LD       I, $805         ; Load 805 into I
$65C    $8E39   UNKNOWN  8E39            ; Unknown 8xxx instruction
$65E    $F88B   UNKNOWN  F88B            ; Unknown Fxxx instruction
$660    $F6EA   UNKNOWN  F6EA            ; Unknown Fxxx instruction
$662    $3051   SE       V0, #51         ; Skip if V0 == 81
$664    $4791   SNE      V7, #91         ; Skip if V7 != 145
$666    $D8A6   DRW      V8, VA, #6      ; Draw 6-byte sprite at V8, VA
$668    $C675   RND      V6, #75         ; V6 = random & 75
$66A    $C80E   RND      V8, #0E         ; V8 = random & 0E
$66C    $6E1B   LD       VE, #1B         ; Load 27 into VE
$66E    $1CE1   JP       $CE1            ; Jump to CE1
$670    $7979   ADD      V9, #79         ; Add 121 to V9
$672    $C018   RND      V0, #18         ; V0 = random & 18
$674    $A277   LD       I, $277         ; Load 277 into I
$676    $52CA   UNKNOWN  $52CA           ; Unknown 5xxx instruction
$678    $76D1   ADD      V6, #D1         ; Add 209 to V6
$67A    $8F47   SUBN     VF, V4          ; VF = V4 - VF, VF = !borrow
$67C    $B297   JP       V0, $297        ; Jump to V0 + 297
$67E    $634E   LD       V3, #4E         ; Load 78 into V3
$680    $5526   UNKNOWN  $5526           ; Unknown 5xxx instruction
$682    $B5C2   JP       V0, $5C2        ; Jump to V0 + 5C2
$684    $AB4F   LD       I, $B4F         ; Load B4F into I
$686    $9671   UNKNOWN  $9671           ; Unknown 9xxx instruction
$688    $53BD   UNKNOWN  $53BD           ; Unknown 5xxx instruction
$68A    $6F20   LD       VF, #20         ; Load 32 into VF
$68C    $60C6   LD       V0, #C6         ; Load 198 into V0
$68E    $9C1E   UNKNOWN  $9C1E           ; Unknown 9xxx instruction
$690    $469C   SNE      V6, #9C         ; Skip if V6 != 156
$692    $B4AC   JP       V0, $4AC        ; Jump to V0 + 4AC
$694    $F42E   UNKNOWN  F42E            ; Unknown Fxxx instruction
$696    $E801   UNKNOWN  $E801           ; Unknown Exxx instruction
$698    $0A10   SYS      $A10            ; System call to A10
$69A    $0A56   SYS      $A56            ; System call to A56
$69C    $4098   SNE      V0, #98         ; Skip if V0 != 152
$69E    $45CC   SNE      V5, #CC         ; Skip if V5 != 204
$6A0    $F79C   UNKNOWN  F79C            ; Unknown Fxxx instruction
$6A2    $F2CC   UNKNOWN  F2CC            ; Unknown Fxxx instruction
$6A4    $4954   SNE      V9, #54         ; Skip if V9 != 84
$6A6    $1282   JP       $282            ; Jump to 282
$6A8    $8F5F   UNKNOWN  8F5F            ; Unknown 8xxx instruction
$6AA    $3445   SE       V4, #45         ; Skip if V4 == 69
$6AC    $2C6E   CALL     $C6E            ; Call subroutine at C6E
$6AE    $9610   SNE      V6, V1          ; Skip if V6 != V1
$6B0    $8D62   AND      VD, V6          ; VD &= V6
$6B2    $9F6D   UNKNOWN  $9F6D           ; Unknown 9xxx instruction
$6B4    $E6BE   UNKNOWN  $E6BE           ; Unknown Exxx instruction
$6B6    $147B   JP       $47B            ; Jump to 47B
$6B8    $58AC   UNKNOWN  $58AC           ; Unknown 5xxx instruction
$6BA    $F720   UNKNOWN  F720            ; Unknown Fxxx instruction
$6BC    $72CB   ADD      V2, #CB         ; Add 203 to V2
$6BE    $50A8   UNKNOWN  $50A8           ; Unknown 5xxx instruction
$6C0    $D575   DRW      V5, V7, #5      ; Draw 5-byte sprite at V5, V7
$6C2    $F08B   UNKNOWN  F08B            ; Unknown Fxxx instruction
$6C4    $2E47   CALL     $E47            ; Call subroutine at E47
$6C6    $C04C   RND      V0, #4C         ; V0 = random & 4C
$6C8    $2C97   CALL     $C97            ; Call subroutine at C97
$6CA    $2941   CALL     $941            ; Call subroutine at 941
$6CC    $7D85   ADD      VD, #85         ; Add 133 to VD
$6CE    $84FB   UNKNOWN  84FB            ; Unknown 8xxx instruction
$6D0    $D312   DRW      V3, V1, #2      ; Draw 2-byte sprite at V3, V1
$6D2    $1772   JP       $772            ; Jump to 772
$6D4    $080F   SYS      $80F            ; System call to 80F
$6D6    $9C48   UNKNOWN  $9C48           ; Unknown 9xxx instruction
$6D8    $A88E   LD       I, $88E         ; Load 88E into I
$6DA    $8FEA   UNKNOWN  8FEA            ; Unknown 8xxx instruction
$6DC    $2271   CALL     $271            ; Call subroutine at 271
$6DE    $52AD   UNKNOWN  $52AD           ; Unknown 5xxx instruction
$6E0    $62AD   LD       V2, #AD         ; Load 173 into V2
$6E2    $6FBB   LD       VF, #BB         ; Load 187 into VF
$6E4    $95B7   UNKNOWN  $95B7           ; Unknown 9xxx instruction
$6E6    $C08A   RND      V0, #8A         ; V0 = random & 8A
$6E8    $AB17   LD       I, $B17         ; Load B17 into I
$6EA    $3850   SE       V8, #50         ; Skip if V8 == 80
$6EC    $A5D8   LD       I, $5D8         ; Load 5D8 into I
$6EE    $D806   DRW      V8, V0, #6      ; Draw 6-byte sprite at V8, V0
$6F0    $252C   CALL     $52C            ; Call subroutine at 52C
$6F2    $507B   UNKNOWN  $507B           ; Unknown 5xxx instruction
$6F4    $0EF6   SYS      $EF6            ; System call to EF6
$6F6    $78EA   ADD      V8, #EA         ; Add 234 to V8
$6F8    $7255   ADD      V2, #55         ; Add 85 to V2
$6FA    $F536   UNKNOWN  F536            ; Unknown Fxxx instruction
$6FC    $BD85   JP       V0, $D85        ; Jump to V0 + D85
$6FE    $3D2D   SE       VD, #2D         ; Skip if VD == 45
$700    $5FDC   UNKNOWN  $5FDC           ; Unknown 5xxx instruction
$702    $D75C   DRW      V7, V5, #C      ; Draw 12-byte sprite at V7, V5
$704    $14A3   JP       $4A3            ; Jump to 4A3
$706    $C1EB   RND      V1, #EB         ; V1 = random & EB
$708    $0CA6   SYS      $CA6            ; System call to CA6
$70A    $3642   SE       V6, #42         ; Skip if V6 == 66
$70C    $CE0B   RND      VE, #0B         ; VE = random & 0B
$70E    $D6D5   DRW      V6, VD, #5      ; Draw 5-byte sprite at V6, VD
$710    $827A   UNKNOWN  827A            ; Unknown 8xxx instruction
$712    $F03C   UNKNOWN  F03C            ; Unknown Fxxx instruction
$714    $DF00   DRW      VF, V0, #0      ; Draw 0-byte sprite at VF, V0
$716    $2750   CALL     $750            ; Call subroutine at 750
$718    $0576   SYS      $576            ; System call to 576
$71A    $3FB4   SE       VF, #B4         ; Skip if VF == 180
$71C    $8979   UNKNOWN  8979            ; Unknown 8xxx instruction
$71E    $7A2D   ADD      VA, #2D         ; Add 45 to VA
$720    $2D0B   CALL     $D0B            ; Call subroutine at D0B
$722    $AC08   LD       I, $C08         ; Load C08 into I
$724    $0388   SYS      $388            ; System call to 388
$726    $2B0A   CALL     $B0A            ; Call subroutine at B0A
$728    $0DFE   SYS      $DFE            ; System call to DFE
$72A    $85D3   XOR      V5, VD          ; V5 ^= VD
$72C    $1453   JP       $453            ; Jump to 453
$72E    $1E46   JP       $E46            ; Jump to E46
$730    $D4CB   DRW      V4, VC, #B      ; Draw 11-byte sprite at V4, VC
$732    $F9CC   UNKNOWN  F9CC            ; Unknown Fxxx instruction
$734    $61EC   LD       V1, #EC         ; Load 236 into V1
$736    $4579   SNE      V5, #79         ; Skip if V5 != 121
$738    $284F   CALL     $84F            ; Call subroutine at 84F
$73A    $CC64   RND      VC, #64         ; VC = random & 64
$73C    $209F   CALL     $09F            ; Call subroutine at 09F
$73E    $7870   ADD      V8, #70         ; Add 112 to V8
$740    $58F8   UNKNOWN  $58F8           ; Unknown 5xxx instruction
$742    $7440   ADD      V4, #40         ; Add 64 to V4
$744    $26C1   CALL     $6C1            ; Call subroutine at 6C1
$746    $442F   SNE      V4, #2F         ; Skip if V4 != 47
$748    $21A6   CALL     $1A6            ; Call subroutine at 1A6
$74A    $57D0   SE       V7, VD          ; Skip if V7 == VD
$74C    $E6FC   UNKNOWN  $E6FC           ; Unknown Exxx instruction
$74E    $E1B8   UNKNOWN  $E1B8           ; Unknown Exxx instruction
$750    $7EB4   ADD      VE, #B4         ; Add 180 to VE
$752    $2EB1   CALL     $EB1            ; Call subroutine at EB1
$754    $13EA   JP       $3EA            ; Jump to 3EA
$756    $9CDA   UNKNOWN  $9CDA           ; Unknown 9xxx instruction
$758    $39F2   SE       V9, #F2         ; Skip if V9 == 242
$75A    $E29D   UNKNOWN  $E29D           ; Unknown Exxx instruction
$75C    $8832   AND      V8, V3          ; V8 &= V3
$75E    $427A   SNE      V2, #7A         ; Skip if V2 != 122
$760    $C226   RND      V2, #26         ; V2 = random & 26
$762    $9A12   UNKNOWN  $9A12           ; Unknown 9xxx instruction
$764    $AC3F   LD       I, $C3F         ; Load C3F into I
$766    $7A83   ADD      VA, #83         ; Add 131 to VA
$768    $CB4C   RND      VB, #4C         ; VB = random & 4C
$76A    $612C   LD       V1, #2C         ; Load 44 into V1
$76C    $A248   LD       I, $248         ; Load 248 into I
$76E    $8F03   XOR      VF, V0          ; VF ^= V0
$770    $2E7B   CALL     $E7B            ; Call subroutine at E7B
$772    $0413   SYS      $413            ; System call to 413
$774    $C6D3   RND      V6, #D3         ; V6 = random & D3
$776    $95D8   UNKNOWN  $95D8           ; Unknown 9xxx instruction
$778    $C34D   RND      V3, #4D         ; V3 = random & 4D
$77A    $5C59   UNKNOWN  $5C59           ; Unknown 5xxx instruction
$77C    $6A4E   LD       VA, #4E         ; Load 78 into VA
$77E    $00A9   SYS      $0A9            ; System call to 0A9
$780    $79A7   ADD      V9, #A7         ; Add 167 to V9
$782    $24D4   CALL     $4D4            ; Call subroutine at 4D4
$784    $F695   UNKNOWN  F695            ; Unknown Fxxx instruction
$786    $6C90   LD       VC, #90         ; Load 144 into VC
$788    $6251   LD       V2, #51         ; Load 81 into V2
$78A    $7488   ADD      V4, #88         ; Add 136 to V4
$78C    $4975   SNE      V9, #75         ; Skip if V9 != 117
$78E    $A4EC   LD       I, $4EC         ; Load 4EC into I
$790    $B106   JP       V0, $106        ; Jump to V0 + 106
$792    $C517   RND      V5, #17         ; V5 = random & 17
$794    $7415   ADD      V4, #15         ; Add 21 to V4
$796    $D185   DRW      V1, V8, #5      ; Draw 5-byte sprite at V1, V8
$798    $E6EE   UNKNOWN  $E6EE           ; Unknown Exxx instruction
$79A    $6DFD   LD       VD, #FD         ; Load 253 into VD
$79C    $4A96   SNE      VA, #96         ; Skip if VA != 150
$79E    $D896   DRW      V8, V9, #6      ; Draw 6-byte sprite at V8, V9
$7A0    $32FF   SE       V2, #FF         ; Skip if V2 == 255
$7A2    $24DE   CALL     $4DE            ; Call subroutine at 4DE
$7A4    $995F   UNKNOWN  $995F           ; Unknown 9xxx instruction
$7A6    $45CC   SNE      V5, #CC         ; Skip if V5 != 204
$7A8    $DE02   DRW      VE, V0, #2      ; Draw 2-byte sprite at VE, V0
$7AA    $FFCA   UNKNOWN  FFCA            ; Unknown Fxxx instruction
$7AC    $3B19   SE       VB, #19         ; Skip if VB == 25
$7AE    $6F1F   LD       VF, #1F         ; Load 31 into VF
$7B0    $0860   SYS      $860            ; System call to 860
$7B2    $E824   UNKNOWN  $E824           ; Unknown Exxx instruction
$7B4    $BA97   JP       V0, $A97        ; Jump to V0 + A97
$7B6    $4708   SNE      V7, #08         ; Skip if V7 != 8
$7B8    $8143   XOR      V1, V4          ; V1 ^= V4
$7BA    $A469   LD       I, $469         ; Load 469 into I
$7BC    $3345   SE       V3, #45         ; Skip if V3 == 69
$7BE    $DD7A   DRW      VD, V7, #A      ; Draw 10-byte sprite at VD, V7
$7C0    $5CC6   UNKNOWN  $5CC6           ; Unknown 5xxx instruction
$7C2    $2A59   CALL     $A59            ; Call subroutine at A59
$7C4    $B554   JP       V0, $554        ; Jump to V0 + 554
$7C6    $C3CD   RND      V3, #CD         ; V3 = random & CD
$7C8    $E7E1   UNKNOWN  $E7E1           ; Unknown Exxx instruction
$7CA    $DFDA   DRW      VF, VD, #A      ; Draw 10-byte sprite at VF, VD
$7CC    $D6A3   DRW      V6, VA, #3      ; Draw 3-byte sprite at V6, VA
$7CE    $EB3C   UNKNOWN  $EB3C           ; Unknown Exxx instruction
$7D0    $1391   JP       $391            ; Jump to 391
$7D2    $2EC6   CALL     $EC6            ; Call subroutine at EC6
$7D4    $ECB6   UNKNOWN  $ECB6           ; Unknown Exxx instruction
$7D6    $8DFA   UNKNOWN  8DFA            ; Unknown 8xxx instruction
$7D8    $5E67   UNKNOWN  $5E67           ; Unknown 5xxx instruction
$7DA    $F799   UNKNOWN  F799            ; Unknown Fxxx instruction
$7DC    $4A8B   SNE      VA, #8B         ; Skip if VA != 139
$7DE    $1828   JP       $828            ; Jump to 828
$7E0    $715B   ADD      V1, #5B         ; Add 91 to V1
$7E2    $3DA9   SE       VD, #A9         ; Skip if VD == 169
$7E4    $D069   DRW      V0, V6, #9      ; Draw 9-byte sprite at V0, V6
$7E6    $C46F   RND      V4, #6F         ; V4 = random & 6F
$7E8    $80E1   OR       V0, VE          ; V0 |= VE
$7EA    $9F23   UNKNOWN  $9F23           ; Unknown 9xxx instruction
$7EC    $434E   SNE      V3, #4E         ; Skip if V3 != 78
$7EE    $B515   JP       V0, $515        ; Jump to V0 + 515
$7F0    $FFD4   UNKNOWN  FFD4            ; Unknown Fxxx instruction
$7F2    $362F   SE       V6, #2F         ; Skip if V6 == 47
$7F4    $F2A8   UNKNOWN  F2A8            ; Unknown Fxxx instruction
$7F6    $23F4   CALL     $3F4            ; Call subroutine at 3F4
$7F8    $3BD4   SE       VB, #D4         ; Skip if VB == 212
$7FA    $9BF4   UNKNOWN  $9BF4           ; Unknown 9xxx instruction
$7FC    $7A6C   ADD      VA, #6C         ; Add 108 to VA
$7FE    $D367   DRW      V3, V6, #7      ; Draw 7-byte sprite at V3, V6
$800    $CD6A   RND      VD, #6A         ; VD = random & 6A
$802    $96CA   UNKNOWN  $96CA           ; Unknown 9xxx instruction
$804    $75F0   ADD      V5, #F0         ; Add 240 to V5
$806    $8196   SHR      V1              ; V1 >>= 1, VF = LSB
$808    $BD8B   JP       V0, $D8B        ; Jump to V0 + D8B
$80A    $2C1A   CALL     $C1A            ; Call subroutine at C1A
$80C    $5D92   UNKNOWN  $5D92           ; Unknown 5xxx instruction
$80E    $B880   JP       V0, $880        ; Jump to V0 + 880
$810    $BAC1   JP       V0, $AC1        ; Jump to V0 + AC1
$812    $584F   UNKNOWN  $584F           ; Unknown 5xxx instruction
$814    $3464   SE       V4, #64         ; Skip if V4 == 100
$816    $3DBF   SE       VD, #BF         ; Skip if VD == 191
$818    $7E5B   ADD      VE, #5B         ; Add 91 to VE
$81A    $8C98   UNKNOWN  8C98            ; Unknown 8xxx instruction
$81C    $C555   RND      V5, #55         ; V5 = random & 55
$81E    $6484   LD       V4, #84         ; Load 132 into V4
$820    $D380   DRW      V3, V8, #0      ; Draw 0-byte sprite at V3, V8
$822    $C9D7   RND      V9, #D7         ; V9 = random & D7
$824    $9309   UNKNOWN  $9309           ; Unknown 9xxx instruction
$826    $74EE   ADD      V4, #EE         ; Add 238 to V4
$828    $72A5   ADD      V2, #A5         ; Add 165 to V2
$82A    $416F   SNE      V1, #6F         ; Skip if V1 != 111
$82C    $FF98   UNKNOWN  FF98            ; Unknown Fxxx instruction
$82E    $449E   SNE      V4, #9E         ; Skip if V4 != 158
$830    $20AF   CALL     $0AF            ; Call subroutine at 0AF
$832    $72BE   ADD      V2, #BE         ; Add 190 to V2
$834    $07AD   SYS      $7AD            ; System call to 7AD
$836    $2E43   CALL     $E43            ; Call subroutine at E43
$838    $FBF4   UNKNOWN  FBF4            ; Unknown Fxxx instruction
$83A    $B814   JP       V0, $814        ; Jump to V0 + 814
$83C    $9D74   UNKNOWN  $9D74           ; Unknown 9xxx instruction
$83E    $E0E9   UNKNOWN  $E0E9           ; Unknown Exxx instruction
$840    $4073   SNE      V0, #73         ; Skip if V0 != 115
$842    $5703   UNKNOWN  $5703           ; Unknown 5xxx instruction
$844    $CC78   RND      VC, #78         ; VC = random & 78
$846    $ABF2   LD       I, $BF2         ; Load BF2 into I
$848    $C876   RND      V8, #76         ; V8 = random & 76
$84A    $050F   SYS      $50F            ; System call to 50F
$84C    $B945   JP       V0, $945        ; Jump to V0 + 945
$84E    $C53C   RND      V5, #3C         ; V5 = random & 3C
$850    $43D2   SNE      V3, #D2         ; Skip if V3 != 210
$852    $85EF   UNKNOWN  85EF            ; Unknown 8xxx instruction
$854    $61DD   LD       V1, #DD         ; Load 221 into V1
$856    $4E1E   SNE      VE, #1E         ; Skip if VE != 30
$858    $11A9   JP       $1A9            ; Jump to 1A9
$85A    $ACAD   LD       I, $CAD         ; Load CAD into I
$85C    $E99F   UNKNOWN  $E99F           ; Unknown Exxx instruction
$85E    $A23F   LD       I, $23F         ; Load 23F into I
$860    $0210   SYS      $210            ; System call to 210
$862    $03EC   SYS      $3EC            ; System call to 3EC
$864    $916E   UNKNOWN  $916E           ; Unknown 9xxx instruction
$866    $B91F   JP       V0, $91F        ; Jump to V0 + 91F
$868    $AE25   LD       I, $E25         ; Load E25 into I
$86A    $EF83   UNKNOWN  $EF83           ; Unknown Exxx instruction
$86C    $667A   LD       V6, #7A         ; Load 122 into V6
$86E    $B5ED   JP       V0, $5ED        ; Jump to V0 + 5ED
$870    $B9C3   JP       V0, $9C3        ; Jump to V0 + 9C3
$872    $7E56   ADD      VE, #56         ; Add 86 to VE
$874    $5490   SE       V4, V9          ; Skip if V4 == V9
$876    $25FE   CALL     $5FE            ; Call subroutine at 5FE
$878    $C416   RND      V4, #16         ; V4 = random & 16
$87A    $5337   UNKNOWN  $5337           ; Unknown 5xxx instruction
$87C    $8A2B   UNKNOWN  8A2B            ; Unknown 8xxx instruction
$87E    $B648   JP       V0, $648        ; Jump to V0 + 648
$880    $F58B   UNKNOWN  F58B            ; Unknown Fxxx instruction
$882    $0D6F   SYS      $D6F            ; System call to D6F
$884    $E4DC   UNKNOWN  $E4DC           ; Unknown Exxx instruction
$886    $0C1B   SYS      $C1B            ; System call to C1B
$888    $7216   ADD      V2, #16         ; Add 22 to V2
$88A    $B07B   JP       V0, $07B        ; Jump to V0 + 07B
$88C    $41D1   SNE      V1, #D1         ; Skip if V1 != 209
$88E    $0BED   SYS      $BED            ; System call to BED
$890    $6D2F   LD       VD, #2F         ; Load 47 into VD
$892    $7A5F   ADD      VA, #5F         ; Add 95 to VA
$894    $9A50   SNE      VA, V5          ; Skip if VA != V5
$896    $622F   LD       V2, #2F         ; Load 47 into V2
$898    $C61F   RND      V6, #1F         ; V6 = random & 1F
$89A    $D97F   DRW      V9, V7, #F      ; Draw 15-byte sprite at V9, V7
$89C    $A587   LD       I, $587         ; Load 587 into I
$89E    $5ED0   SE       VE, VD          ; Skip if VE == VD
$8A0    $B895   JP       V0, $895        ; Jump to V0 + 895
$8A2    $8CAD   UNKNOWN  8CAD            ; Unknown 8xxx instruction
$8A4    $66A0   LD       V6, #A0         ; Load 160 into V6
$8A6    $A88C   LD       I, $88C         ; Load 88C into I
$8A8    $3CB7   SE       VC, #B7         ; Skip if VC == 183
$8AA    $2543   CALL     $543            ; Call subroutine at 543
$8AC    $B91A   JP       V0, $91A        ; Jump to V0 + 91A
$8AE    $4FBA   SNE      VF, #BA         ; Skip if VF != 186
$8B0    $A8B6   LD       I, $8B6         ; Load 8B6 into I
$8B2    $CD3C   RND      VD, #3C         ; VD = random & 3C
$8B4    $FD99   UNKNOWN  FD99            ; Unknown Fxxx instruction
$8B6    $88C0   LD       V8, VC          ; V8 = VC
$8B8    $0E5D   SYS      $E5D            ; System call to E5D
$8BA    $5939   UNKNOWN  $5939           ; Unknown 5xxx instruction
$8BC    $8B28   UNKNOWN  8B28            ; Unknown 8xxx instruction
$8BE    $39BC   SE       V9, #BC         ; Skip if V9 == 188
$8C0    $BA78   JP       V0, $A78        ; Jump to V0 + A78
$8C2    $22B4   CALL     $2B4            ; Call subroutine at 2B4
$8C4    $0E6E   SYS      $E6E            ; System call to E6E
$8C6    $47CE   SNE      V7, #CE         ; Skip if V7 != 206
$8C8    $F724   UNKNOWN  F724            ; Unknown Fxxx instruction
$8CA    $6577   LD       V5, #77         ; Load 119 into V5
$8CC    $9E4A   UNKNOWN  $9E4A           ; Unknown 9xxx instruction
$8CE    $33EC   SE       V3, #EC         ; Skip if V3 == 236
$8D0    $7C2E   ADD      VC, #2E         ; Add 46 to VC
$8D2    $01A4   SYS      $1A4            ; System call to 1A4
$8D4    $2F68   CALL     $F68            ; Call subroutine at F68
$8D6    $5954   UNKNOWN  $5954           ; Unknown 5xxx instruction
$8D8    $7E14   ADD      VE, #14         ; Add 20 to VE
$8DA    $BB85   JP       V0, $B85        ; Jump to V0 + B85
$8DC    $5396   UNKNOWN  $5396           ; Unknown 5xxx instruction
$8DE    $9D04   UNKNOWN  $9D04           ; Unknown 9xxx instruction
$8E0    $2A60   CALL     $A60            ; Call subroutine at A60
$8E2    $8876   SHR      V8              ; V8 >>= 1, VF = LSB
$8E4    $B2B0   JP       V0, $2B0        ; Jump to V0 + 2B0
$8E6    $3236   SE       V2, #36         ; Skip if V2 == 54
$8E8    $0291   SYS      $291            ; System call to 291
$8EA    $B84E   JP       V0, $84E        ; Jump to V0 + 84E
$8EC    $6FFC   LD       VF, #FC         ; Load 252 into VF
$8EE    $3ED6   SE       VE, #D6         ; Skip if VE == 214
$8F0    $A3AE   LD       I, $3AE         ; Load 3AE into I
$8F2    $0B7F   SYS      $B7F            ; System call to B7F
$8F4    $710D   ADD      V1, #0D         ; Add 13 to V1
$8F6    $3A08   SE       VA, #08         ; Skip if VA == 8
$8F8    $1419   JP       $419            ; Jump to 419
$8FA    $6F35   LD       VF, #35         ; Load 53 into VF
$8FC    $744E   ADD      V4, #4E         ; Add 78 to V4
$8FE    $5A84   UNKNOWN  $5A84           ; Unknown 5xxx instruction
$900    $DAB0   DRW      VA, VB, #0      ; Draw 0-byte sprite at VA, VB
$902    $58C8   UNKNOWN  $58C8           ; Unknown 5xxx instruction
$904    $F076   UNKNOWN  F076            ; Unknown Fxxx instruction
$906    $A369   LD       I, $369         ; Load 369 into I
$908    $F02E   UNKNOWN  F02E            ; Unknown Fxxx instruction
$90A    $F5D5   UNKNOWN  F5D5            ; Unknown Fxxx instruction
$90C    $4679   SNE      V6, #79         ; Skip if V6 != 121
$90E    $CB2E   RND      VB, #2E         ; VB = random & 2E
$910    $60C5   LD       V0, #C5         ; Load 197 into V0
$912    $F26A   UNKNOWN  F26A            ; Unknown Fxxx instruction
$914    $1304   JP       $304            ; Jump to 304
$916    $2E23   CALL     $E23            ; Call subroutine at E23
$918    $428F   SNE      V2, #8F         ; Skip if V2 != 143
$91A    $9BD5   UNKNOWN  $9BD5           ; Unknown 9xxx instruction
$91C    $69EF   LD       V9, #EF         ; Load 239 into V9
$91E    $BDB2   JP       V0, $DB2        ; Jump to V0 + DB2
$920    $20BD   CALL     $0BD            ; Call subroutine at 0BD
$922    $E159   UNKNOWN  $E159           ; Unknown Exxx instruction
$924    $D43D   DRW      V4, V3, #D      ; Draw 13-byte sprite at V4, V3
$926    $7F84   ADD      VF, #84         ; Add 132 to VF
$928    $676C   LD       V7, #6C         ; Load 108 into V7
$92A    $75D5   ADD      V5, #D5         ; Add 213 to V5
$92C    $DAAA   DRW      VA, VA, #A      ; Draw 10-byte sprite at VA, VA
$92E    $E135   UNKNOWN  $E135           ; Unknown Exxx instruction
$930    $6B79   LD       VB, #79         ; Load 121 into VB
$932    $29AD   CALL     $9AD            ; Call subroutine at 9AD
$934    $FD2E   UNKNOWN  FD2E            ; Unknown Fxxx instruction
$936    $0AEF   SYS      $AEF            ; System call to AEF
$938    $E0E9   UNKNOWN  $E0E9           ; Unknown Exxx instruction
$93A    $B0C9   JP       V0, $0C9        ; Jump to V0 + 0C9
$93C    $B050   JP       V0, $050        ; Jump to V0 + 050
$93E    $FBBE   UNKNOWN  FBBE            ; Unknown Fxxx instruction
$940    $55D5   UNKNOWN  $55D5           ; Unknown 5xxx instruction
$942    $3603   SE       V6, #03         ; Skip if V6 == 3
$944    $7A81   ADD      VA, #81         ; Add 129 to VA
$946    $341B   SE       V4, #1B         ; Skip if V4 == 27
$948    $05FD   SYS      $5FD            ; System call to 5FD
$94A    $F8BC   UNKNOWN  F8BC            ; Unknown Fxxx instruction
$94C    $87E3   XOR      V7, VE          ; V7 ^= VE
$94E    $58D1   UNKNOWN  $58D1           ; Unknown 5xxx instruction
$950    $282D   CALL     $82D            ; Call subroutine at 82D
$952    $AA23   LD       I, $A23         ; Load A23 into I
$954    $C5C8   RND      V5, #C8         ; V5 = random & C8
$956    $FB75   UNKNOWN  FB75            ; Unknown Fxxx instruction
$958    $A91A   LD       I, $91A         ; Load 91A into I
$95A    $90C5   UNKNOWN  $90C5           ; Unknown 9xxx instruction
$95C    $BFF5   JP       V0, $FF5        ; Jump to V0 + FF5
$95E    $8F91   OR       VF, V9          ; VF |= V9
$960    $B217   JP       V0, $217        ; Jump to V0 + 217
$962    $AFC1   LD       I, $FC1         ; Load FC1 into I
$964    $33D9   SE       V3, #D9         ; Skip if V3 == 217
$966    $D158   DRW      V1, V5, #8      ; Draw 8-byte sprite at V1, V5
$968    $E486   UNKNOWN  $E486           ; Unknown Exxx instruction
$96A    $CF79   RND      VF, #79         ; VF = random & 79
$96C    $F864   UNKNOWN  F864            ; Unknown Fxxx instruction
$96E    $ADB8   LD       I, $DB8         ; Load DB8 into I
$970    $6BC1   LD       VB, #C1         ; Load 193 into VB
$972    $7FE3   ADD      VF, #E3         ; Add 227 to VF
$974    $F410   UNKNOWN  F410            ; Unknown Fxxx instruction
$976    $79D3   ADD      V9, #D3         ; Add 211 to V9
$978    $2511   CALL     $511            ; Call subroutine at 511
$97A    $2232   CALL     $232            ; Call subroutine at 232
$97C    $93F2   UNKNOWN  $93F2           ; Unknown 9xxx instruction
$97E    $C152   RND      V1, #52         ; V1 = random & 52
$980    $6C3D   LD       VC, #3D         ; Load 61 into VC
$982    $0A87   SYS      $A87            ; System call to A87
$984    $C207   RND      V2, #07         ; V2 = random & 07
$986    $44A0   SNE      V4, #A0         ; Skip if V4 != 160
$988    $E118   UNKNOWN  $E118           ; Unknown Exxx instruction
$98A    $0141   SYS      $141            ; System call to 141
$98C    $6357   LD       V3, #57         ; Load 87 into V3
$98E    $5484   UNKNOWN  $5484           ; Unknown 5xxx instruction
$990    $024C   SYS      $24C            ; System call to 24C
$992    $CC04   RND      VC, #04         ; VC = random & 04
$994    $EF2D   UNKNOWN  $EF2D           ; Unknown Exxx instruction
$996    $91E2   UNKNOWN  $91E2           ; Unknown 9xxx instruction
$998    $E6FD   UNKNOWN  $E6FD           ; Unknown Exxx instruction
$99A    $8C37   SUBN     VC, V3          ; VC = V3 - VC, VF = !borrow
$99C    $72A5   ADD      V2, #A5         ; Add 165 to V2
$99E    $0D85   SYS      $D85            ; System call to D85
$9A0    $4498   SNE      V4, #98         ; Skip if V4 != 152
$9A2    $5794   UNKNOWN  $5794           ; Unknown 5xxx instruction
$9A4    $1B8F   JP       $B8F            ; Jump to B8F
$9A6    $FC9A   UNKNOWN  FC9A            ; Unknown Fxxx instruction
$9A8    $5124   UNKNOWN  $5124           ; Unknown 5xxx instruction
$9AA    $9967   UNKNOWN  $9967           ; Unknown 9xxx instruction
$9AC    $5207   UNKNOWN  $5207           ; Unknown 5xxx instruction
$9AE    $AC1F   LD       I, $C1F         ; Load C1F into I
$9B0    $5F6D   UNKNOWN  $5F6D           ; Unknown 5xxx instruction
$9B2    $5251   UNKNOWN  $5251           ; Unknown 5xxx instruction
$9B4    $2DFC   CALL     $DFC            ; Call subroutine at DFC
$9B6    $79F8   ADD      V9, #F8         ; Add 248 to V9
$9B8    $88CA   UNKNOWN  88CA            ; Unknown 8xxx instruction
$9BA    $7599   ADD      V5, #99         ; Add 153 to V5
$9BC    $E582   UNKNOWN  $E582           ; Unknown Exxx instruction
$9BE    $7E8D   ADD      VE, #8D         ; Add 141 to VE
$9C0    $600E   LD       V0, #0E         ; Load 14 into V0
$9C2    $8D7F   UNKNOWN  8D7F            ; Unknown 8xxx instruction
$9C4    $21C6   CALL     $1C6            ; Call subroutine at 1C6
$9C6    $48B8   SNE      V8, #B8         ; Skip if V8 != 184
$9C8    $C523   RND      V5, #23         ; V5 = random & 23
$9CA    $6A68   LD       VA, #68         ; Load 104 into VA
$9CC    $8E74   ADD      VE, V7          ; VE += V7, VF = carry
$9CE    $E6E1   UNKNOWN  $E6E1           ; Unknown Exxx instruction
$9D0    $6470   LD       V4, #70         ; Load 112 into V4
$9D2    $CFBF   RND      VF, #BF         ; VF = random & BF
$9D4    $196B   JP       $96B            ; Jump to 96B
$9D6    $40E2   SNE      V0, #E2         ; Skip if V0 != 226
$9D8    $E0C7   UNKNOWN  $E0C7           ; Unknown Exxx instruction
$9DA    $DD49   DRW      VD, V4, #9      ; Draw 9-byte sprite at VD, V4
$9DC    $CDB2   RND      VD, #B2         ; VD = random & B2
$9DE    $9EAE   UNKNOWN  $9EAE           ; Unknown 9xxx instruction
$9E0    $8BF5   SUB      VB, VF          ; VB -= VF, VF = !borrow
$9E2    $D61C   DRW      V6, V1, #C      ; Draw 12-byte sprite at V6, V1
$9E4    $A081   LD       I, $081         ; Load 081 into I
$9E6    $E283   UNKNOWN  $E283           ; Unknown Exxx instruction
$9E8    $EC3E   UNKNOWN  $EC3E           ; Unknown Exxx instruction
$9EA    $5605   UNKNOWN  $5605           ; Unknown 5xxx instruction
$9EC    $6EB2   LD       VE, #B2         ; Load 178 into VE
$9EE    $47D3   SNE      V7, #D3         ; Skip if V7 != 211
$9F0    $C21A   RND      V2, #1A         ; V2 = random & 1A
$9F2    $1CBD   JP       $CBD            ; Jump to CBD
$9F4    $E794   UNKNOWN  $E794           ; Unknown Exxx instruction
$9F6    $A5CB   LD       I, $5CB         ; Load 5CB into I
$9F8    $3E4B   SE       VE, #4B         ; Skip if VE == 75
$9FA    $F18D   UNKNOWN  F18D            ; Unknown Fxxx instruction
$9FC    $6124   LD       V1, #24         ; Load 36 into V1
$9FE    $F6A2   UNKNOWN  F6A2            ; Unknown Fxxx instruction
$A00    $067A   SYS      $67A            ; System call to 67A
$A02    $FAD7   UNKNOWN  FAD7            ; Unknown Fxxx instruction
$A04    $CDB8   RND      VD, #B8         ; VD = random & B8
$A06    $8387   SUBN     V3, V8          ; V3 = V8 - V3, VF = !borrow
$A08    $2CE1   CALL     $CE1            ; Call subroutine at CE1
$A0A    $6191   LD       V1, #91         ; Load 145 into V1
$A0C    $0EF8   SYS      $EF8            ; System call to EF8
$A0E    $8502   AND      V5, V0          ; V5 &= V0
$A10    $D837   DRW      V8, V3, #7      ; Draw 7-byte sprite at V8, V3
$A12    $BBFD   JP       V0, $BFD        ; Jump to V0 + BFD
$A14    $24CA   CALL     $4CA            ; Call subroutine at 4CA
$A16    $0531   SYS      $531            ; System call to 531
$A18    $32C5   SE       V2, #C5         ; Skip if V2 == 197
$A1A    $95B8   UNKNOWN  $95B8           ; Unknown 9xxx instruction
$A1C    $72E6   ADD      V2, #E6         ; Add 230 to V2
$A1E    $C172   RND      V1, #72         ; V1 = random & 72
$A20    $E705   UNKNOWN  $E705           ; Unknown Exxx instruction
$A22    $8DAA   UNKNOWN  8DAA            ; Unknown 8xxx instruction
$A24    $19F1   JP       $9F1            ; Jump to 9F1
$A26    $A1F6   LD       I, $1F6         ; Load 1F6 into I
$A28    $EDC9   UNKNOWN  $EDC9           ; Unknown Exxx instruction
$A2A    $3004   SE       V0, #04         ; Skip if V0 == 4
$A2C    $E7F9   UNKNOWN  $E7F9           ; Unknown Exxx instruction
$A2E    $7789   ADD      V7, #89         ; Add 137 to V7
$A30    $AA00   LD       I, $A00         ; Load A00 into I
$A32    $8992   AND      V9, V9          ; V9 &= V9
$A34    $01E3   SYS      $1E3            ; System call to 1E3
$A36    $38D2   SE       V8, #D2         ; Skip if V8 == 210
$A38    $CDCD   RND      VD, #CD         ; VD = random & CD
$A3A    $E0A6   UNKNOWN  $E0A6           ; Unknown Exxx instruction
$A3C    $A1E8   LD       I, $1E8         ; Load 1E8 into I
$A3E    $F568   UNKNOWN  F568            ; Unknown Fxxx instruction
$A40    $E876   UNKNOWN  $E876           ; Unknown Exxx instruction
$A42    $5F5A   UNKNOWN  $5F5A           ; Unknown 5xxx instruction
$A44    $0240   SYS      $240            ; System call to 240
$A46    $9494   UNKNOWN  $9494           ; Unknown 9xxx instruction
$A48    $088C   SYS      $88C            ; System call to 88C
$A4A    $03CB   SYS      $3CB            ; System call to 3CB
$A4C    $61E9   LD       V1, #E9         ; Load 233 into V1
$A4E    $C685   RND      V6, #85         ; V6 = random & 85
$A50    $95B4   UNKNOWN  $95B4           ; Unknown 9xxx instruction
$A52    $3F93   SE       VF, #93         ; Skip if VF == 147
$A54    $066A   SYS      $66A            ; System call to 66A
$A56    $5B4B   UNKNOWN  $5B4B           ; Unknown 5xxx instruction
$A58    $6747   LD       V7, #47         ; Load 71 into V7
$A5A    $A9FB   LD       I, $9FB         ; Load 9FB into I
$A5C    $DF8D   DRW      VF, V8, #D      ; Draw 13-byte sprite at VF, V8
$A5E    $E76E   UNKNOWN  $E76E           ; Unknown Exxx instruction
$A60    $790D   ADD      V9, #0D         ; Add 13 to V9
$A62    $6D2C   LD       VD, #2C         ; Load 44 into VD
$A64    $C9F7   RND      V9, #F7         ; V9 = random & F7
$A66    $A5BA   LD       I, $5BA         ; Load 5BA into I
$A68    $2541   CALL     $541            ; Call subroutine at 541
$A6A    $2CC6   CALL     $CC6            ; Call subroutine at CC6
$A6C    $3F4E   SE       VF, #4E         ; Skip if VF == 78
$A6E    $CFA9   RND      VF, #A9         ; VF = random & A9
$A70    $53AF   UNKNOWN  $53AF           ; Unknown 5xxx instruction
$A72    $3407   SE       V4, #07         ; Skip if V4 == 7
$A74    $B820   JP       V0, $820        ; Jump to V0 + 820
$A76    $C37F   RND      V3, #7F         ; V3 = random & 7F
$A78    $6AB8   LD       VA, #B8         ; Load 184 into VA
$A7A    $4826   SNE      V8, #26         ; Skip if V8 != 38
$A7C    $D27D   DRW      V2, V7, #D      ; Draw 13-byte sprite at V2, V7
$A7E    $1F35   JP       $F35            ; Jump to F35
$A80    $0C24   SYS      $C24            ; System call to C24
$A82    $8693   XOR      V6, V9          ; V6 ^= V9
$A84    $0168   SYS      $168            ; System call to 168
$A86    $BCEB   JP       V0, $CEB        ; Jump to V0 + CEB
$A88    $28FB   CALL     $8FB            ; Call subroutine at 8FB
$A8A    $B98E   JP       V0, $98E        ; Jump to V0 + 98E
$A8C    $660B   LD       V6, #0B         ; Load 11 into V6
$A8E    $AE46   LD       I, $E46         ; Load E46 into I
$A90    $64DB   LD       V4, #DB         ; Load 219 into V4
$A92    $B2C5   JP       V0, $2C5        ; Jump to V0 + 2C5
$A94    $E8C9   UNKNOWN  $E8C9           ; Unknown Exxx instruction
$A96    $C485   RND      V4, #85         ; V4 = random & 85
$A98    $877F   UNKNOWN  877F            ; Unknown 8xxx instruction
$A9A    $A789   LD       I, $789         ; Load 789 into I
$A9C    $869F   UNKNOWN  869F            ; Unknown 8xxx instruction
$A9E    $C01A   RND      V0, #1A         ; V0 = random & 1A
$AA0    $9267   UNKNOWN  $9267           ; Unknown 9xxx instruction
$AA2    $A548   LD       I, $548         ; Load 548 into I
$AA4    $948E   UNKNOWN  $948E           ; Unknown 9xxx instruction
$AA6    $1900   JP       $900            ; Jump to 900
$AA8    $95FF   UNKNOWN  $95FF           ; Unknown 9xxx instruction
$AAA    $37E7   SE       V7, #E7         ; Skip if V7 == 231
$AAC    $EBED   UNKNOWN  $EBED           ; Unknown Exxx instruction
$AAE    $93B3   UNKNOWN  $93B3           ; Unknown 9xxx instruction
$AB0    $9850   SNE      V8, V5          ; Skip if V8 != V5
$AB2    $6476   LD       V4, #76         ; Load 118 into V4
$AB4    $2BB4   CALL     $BB4            ; Call subroutine at BB4
$AB6    $F52C   UNKNOWN  F52C            ; Unknown Fxxx instruction
$AB8    $943D   UNKNOWN  $943D           ; Unknown 9xxx instruction
$ABA    $BA5F   JP       V0, $A5F        ; Jump to V0 + A5F
$ABC    $299F   CALL     $99F            ; Call subroutine at 99F
$ABE    $D303   DRW      V3, V0, #3      ; Draw 3-byte sprite at V3, V0
$AC0    $C720   RND      V7, #20         ; V7 = random & 20
$AC2    $0737   SYS      $737            ; System call to 737
$AC4    $4FD4   SNE      VF, #D4         ; Skip if VF != 212
$AC6    $6F8C   LD       VF, #8C         ; Load 140 into VF
$AC8    $F20E   UNKNOWN  F20E            ; Unknown Fxxx instruction
$ACA    $954B   UNKNOWN  $954B           ; Unknown 9xxx instruction
$ACC    $214A   CALL     $14A            ; Call subroutine at 14A
$ACE    $5477   UNKNOWN  $5477           ; Unknown 5xxx instruction
$AD0    $818E   SHL      V1              ; V1 <<= 1, VF = MSB
$AD2    $2896   CALL     $896            ; Call subroutine at 896
$AD4    $C11B   RND      V1, #1B         ; V1 = random & 1B
$AD6    $A754   LD       I, $754         ; Load 754 into I
$AD8    $8948   UNKNOWN  8948            ; Unknown 8xxx instruction
$ADA    $AAE0   LD       I, $AE0         ; Load AE0 into I
$ADC    $5B80   SE       VB, V8          ; Skip if VB == V8
$ADE    $73DC   ADD      V3, #DC         ; Add 220 to V3
$AE0    $B2C5   JP       V0, $2C5        ; Jump to V0 + 2C5
$AE2    $636A   LD       V3, #6A         ; Load 106 into V3
$AE4    $7373   ADD      V3, #73         ; Add 115 to V3
$AE6    $1019   JP       $019            ; Jump to 019
$AE8    $2A90   CALL     $A90            ; Call subroutine at A90
$AEA    $3367   SE       V3, #67         ; Skip if V3 == 103
$AEC    $FB10   UNKNOWN  FB10            ; Unknown Fxxx instruction
$AEE    $50D6   UNKNOWN  $50D6           ; Unknown 5xxx instruction
$AF0    $D874   DRW      V8, V7, #4      ; Draw 4-byte sprite at V8, V7
$AF2    $7D36   ADD      VD, #36         ; Add 54 to VD
$AF4    $731B   ADD      V3, #1B         ; Add 27 to V3
$AF6    $6B00   LD       VB, #00         ; Load 0 into VB
$AF8    $E855   UNKNOWN  $E855           ; Unknown Exxx instruction
$AFA    $78CA   ADD      V8, #CA         ; Add 202 to V8
$AFC    $1F4B   JP       $F4B            ; Jump to F4B
$AFE    $13A9   JP       $3A9            ; Jump to 3A9
$B00    $D044   DRW      V0, V4, #4      ; Draw 4-byte sprite at V0, V4
$B02    $DD62   DRW      VD, V6, #2      ; Draw 2-byte sprite at VD, V6
$B04    $2600   CALL     $600            ; Call subroutine at 600
$B06    $5091   UNKNOWN  $5091           ; Unknown 5xxx instruction
$B08    $E2A5   UNKNOWN  $E2A5           ; Unknown Exxx instruction
$B0A    $AFE6   LD       I, $FE6         ; Load FE6 into I
$B0C    $8CF5   SUB      VC, VF          ; VC -= VF, VF = !borrow
$B0E    $46D9   SNE      V6, #D9         ; Skip if V6 != 217
$B10    $EF75   UNKNOWN  $EF75           ; Unknown Exxx instruction
$B12    $EA13   UNKNOWN  $EA13           ; Unknown Exxx instruction
$B14    $D5DC   DRW      V5, VD, #C      ; Draw 12-byte sprite at V5, VD
$B16    $E533   UNKNOWN  $E533           ; Unknown Exxx instruction
$B18    $7A39   ADD      VA, #39         ; Add 57 to VA
$B1A    $40B8   SNE      V0, #B8         ; Skip if V0 != 184
$B1C    $5EC3   UNKNOWN  $5EC3           ; Unknown 5xxx instruction
$B1E    $C6BA   RND      V6, #BA         ; V6 = random & BA
$B20    $3DDE   SE       VD, #DE         ; Skip if VD == 222
$B22    $26DB   CALL     $6DB            ; Call subroutine at 6DB
$B24    $4C49   SNE      VC, #49         ; Skip if VC != 73
$B26    $A345   LD       I, $345         ; Load 345 into I
$B28    $A49A   LD       I, $49A         ; Load 49A into I
$B2A    $9A90   SNE      VA, V9          ; Skip if VA != V9
$B2C    $E8F5   UNKNOWN  $E8F5           ; Unknown Exxx instruction
$B2E    $FB77   UNKNOWN  FB77            ; Unknown Fxxx instruction
$B30    $8B42   AND      VB, V4          ; VB &= V4
$B32    $D704   DRW      V7, V0, #4      ; Draw 4-byte sprite at V7, V0
$B34    $A20E   LD       I, $20E         ; Load 20E into I
$B36    $6650   LD       V6, #50         ; Load 80 into V6
$B38    $257A   CALL     $57A            ; Call subroutine at 57A
$B3A    $D460   DRW      V4, V6, #0      ; Draw 0-byte sprite at V4, V6
$B3C    $5AF9   UNKNOWN  $5AF9           ; Unknown 5xxx instruction
$B3E    $5EDD   UNKNOWN  $5EDD           ; Unknown 5xxx instruction
$B40    $B814   JP       V0, $814        ; Jump to V0 + 814
$B42    $B841   JP       V0, $841        ; Jump to V0 + 841
$B44    $A899   LD       I, $899         ; Load 899 into I
$B46    $2F4F   CALL     $F4F            ; Call subroutine at F4F
$B48    $511D   UNKNOWN  $511D           ; Unknown 5xxx instruction
$B4A    $127E   JP       $27E            ; Jump to 27E
$B4C    $7F40   ADD      VF, #40         ; Add 64 to VF
$B4E    $C1F2   RND      V1, #F2         ; V1 = random & F2
$B50    $698F   LD       V9, #8F         ; Load 143 into V9
$B52    $A85B   LD       I, $85B         ; Load 85B into I
$B54    $D973   DRW      V9, V7, #3      ; Draw 3-byte sprite at V9, V7
$B56    $F51D   UNKNOWN  F51D            ; Unknown Fxxx instruction
$B58    $C511   RND      V5, #11         ; V5 = random & 11
$B5A    $A8CE   LD       I, $8CE         ; Load 8CE into I
$B5C    $8BB8   UNKNOWN  8BB8            ; Unknown 8xxx instruction
$B5E    $E468   UNKNOWN  $E468           ; Unknown Exxx instruction
$B60    $99A0   SNE      V9, VA          ; Skip if V9 != VA
$B62    $4452   SNE      V4, #52         ; Skip if V4 != 82
$B64    $454C   SNE      V5, #4C         ; Skip if V5 != 76
$B66    $CC17   RND      VC, #17         ; VC = random & 17
$B68    $6C7D   LD       VC, #7D         ; Load 125 into VC
$B6A    $B762   JP       V0, $762        ; Jump to V0 + 762
$B6C    $095E   SYS      $95E            ; System call to 95E
$B6E    $97B6   UNKNOWN  $97B6           ; Unknown 9xxx instruction
$B70    $E468   UNKNOWN  $E468           ; Unknown Exxx instruction
$B72    $0108   SYS      $108            ; System call to 108
$B74    $7EE0   ADD      VE, #E0         ; Add 224 to VE
$B76    $230A   CALL     $30A            ; Call subroutine at 30A
$B78    $883C   UNKNOWN  883C            ; Unknown 8xxx instruction
$B7A    $0767   SYS      $767            ; System call to 767
$B7C    $9F1E   UNKNOWN  $9F1E           ; Unknown 9xxx instruction
$B7E    $1DE3   JP       $DE3            ; Jump to DE3
$B80    $6ADC   LD       VA, #DC         ; Load 220 into VA
$B82    $BCE0   JP       V0, $CE0        ; Jump to V0 + CE0
$B84    $26AC   CALL     $6AC            ; Call subroutine at 6AC
$B86    $FEA3   UNKNOWN  FEA3            ; Unknown Fxxx instruction
$B88    $D6D7   DRW      V6, VD, #7      ; Draw 7-byte sprite at V6, VD
$B8A    $B607   JP       V0, $607        ; Jump to V0 + 607
$B8C    $09B6   SYS      $9B6            ; System call to 9B6
$B8E    $3F4A   SE       VF, #4A         ; Skip if VF == 74
$B90    $6246   LD       V2, #46         ; Load 70 into V2
$B92    $3D8D   SE       VD, #8D         ; Skip if VD == 141
$B94    $F457   UNKNOWN  F457            ; Unknown Fxxx instruction
$B96    $92DD   UNKNOWN  $92DD           ; Unknown 9xxx instruction
$B98    $B5C0   JP       V0, $5C0        ; Jump to V0 + 5C0
$B9A    $CA14   RND      VA, #14         ; VA = random & 14
$B9C    $7A82   ADD      VA, #82         ; Add 130 to VA
$B9E    $997E   UNKNOWN  $997E           ; Unknown 9xxx instruction
$BA0    $F4E9   UNKNOWN  F4E9            ; Unknown Fxxx instruction
$BA2    $7A4B   ADD      VA, #4B         ; Add 75 to VA
$BA4    $E356   UNKNOWN  $E356           ; Unknown Exxx instruction
$BA6    $13E4   JP       $3E4            ; Jump to 3E4
$BA8    $CF7E   RND      VF, #7E         ; VF = random & 7E
$BAA    $F517   UNKNOWN  F517            ; Unknown Fxxx instruction
$BAC    $32D2   SE       V2, #D2         ; Skip if V2 == 210
$BAE    $C966   RND      V9, #66         ; V9 = random & 66
$BB0    $1953   JP       $953            ; Jump to 953
$BB2    $3DD4   SE       VD, #D4         ; Skip if VD == 212
$BB4    $9302   UNKNOWN  $9302           ; Unknown 9xxx instruction
$BB6    $62FC   LD       V2, #FC         ; Load 252 into V2
$BB8    $57A0   SE       V7, VA          ; Skip if V7 == VA
$BBA    $036B   SYS      $36B            ; System call to 36B
$BBC    $2800   CALL     $800            ; Call subroutine at 800
$BBE    $52AA   UNKNOWN  $52AA           ; Unknown 5xxx instruction
$BC0    $74C7   ADD      V4, #C7         ; Add 199 to V4
$BC2    $C400   RND      V4, #00         ; V4 = random & 00
$BC4    $91A9   UNKNOWN  $91A9           ; Unknown 9xxx instruction
$BC6    $1CFC   JP       $CFC            ; Jump to CFC
$BC8    $C8AD   RND      V8, #AD         ; V8 = random & AD
$BCA    $332A   SE       V3, #2A         ; Skip if V3 == 42
$BCC    $8825   SUB      V8, V2          ; V8 -= V2, VF = !borrow
$BCE    $5640   SE       V6, V4          ; Skip if V6 == V4
$BD0    $BFDC   JP       V0, $FDC        ; Jump to V0 + FDC
$BD2    $BA10   JP       V0, $A10        ; Jump to V0 + A10
$BD4    $3CEF   SE       VC, #EF         ; Skip if VC == 239
$BD6    $DC2A   DRW      VC, V2, #A      ; Draw 10-byte sprite at VC, V2
$BD8    $2CBA   CALL     $CBA            ; Call subroutine at CBA
$BDA    $7DAD   ADD      VD, #AD         ; Add 173 to VD
$BDC    $75CE   ADD      V5, #CE         ; Add 206 to V5
$BDE    $9DA1   UNKNOWN  $9DA1           ; Unknown 9xxx instruction
$BE0    $103B   JP       $03B            ; Jump to 03B
$BE2    $FF89   UNKNOWN  FF89            ; Unknown Fxxx instruction
$BE4    $ED47   UNKNOWN  $ED47           ; Unknown Exxx instruction
$BE6    $2E7F   CALL     $E7F            ; Call subroutine at E7F
$BE8    $513D   UNKNOWN  $513D           ; Unknown 5xxx instruction
$BEA    $86A1   OR       V6, VA          ; V6 |= VA
$BEC    $732A   ADD      V3, #2A         ; Add 42 to V3
$BEE    $4973   SNE      V9, #73         ; Skip if V9 != 115
$BF0    $BA20   JP       V0, $A20        ; Jump to V0 + A20
$BF2    $3736   SE       V7, #36         ; Skip if V7 == 54
$BF4    $4614   SNE      V6, #14         ; Skip if V6 != 20
$BF6    $CA90   RND      VA, #90         ; VA = random & 90
$BF8    $D8D4   DRW      V8, VD, #4      ; Draw 4-byte sprite at V8, VD
$BFA    $91D4   UNKNOWN  $91D4           ; Unknown 9xxx instruction
$BFC    $A3E4   LD       I, $3E4         ; Load 3E4 into I
$BFE    $A0F6   LD       I, $0F6         ; Load 0F6 into I
$C00    $4769   SNE      V7, #69         ; Skip if V7 != 105
$C02    $2018   CALL     $018            ; Call subroutine at 018
$C04    $8D86   SHR      VD              ; VD >>= 1, VF = LSB
$C06    $C91A   RND      V9, #1A         ; V9 = random & 1A
$C08    $98B5   UNKNOWN  $98B5           ; Unknown 9xxx instruction
$C0A    $05B1   SYS      $5B1            ; System call to 5B1
$C0C    $D2A4   DRW      V2, VA, #4      ; Draw 4-byte sprite at V2, VA
$C0E    $2154   CALL     $154            ; Call subroutine at 154
$C10    $F2FF   UNKNOWN  F2FF            ; Unknown Fxxx instruction
$C12    $F055   LD       [I], V0         ; Store V0-V0 at I
$C14    $1E35   JP       $E35            ; Jump to E35
$C16    $E0B9   UNKNOWN  $E0B9           ; Unknown Exxx instruction
$C18    $CBAE   RND      VB, #AE         ; VB = random & AE
$C1A    $8316   SHR      V3              ; V3 >>= 1, VF = LSB
$C1C    $6160   LD       V1, #60         ; Load 96 into V1
$C1E    $8B84   ADD      VB, V8          ; VB += V8, VF = carry
$C20    $2AFB   CALL     $AFB            ; Call subroutine at AFB
$C22    $4762   SNE      V7, #62         ; Skip if V7 != 98
$C24    $B743   JP       V0, $743        ; Jump to V0 + 743
$C26    $C562   RND      V5, #62         ; V5 = random & 62
$C28    $5502   UNKNOWN  $5502           ; Unknown 5xxx instruction
$C2A    $5E0E   UNKNOWN  $5E0E           ; Unknown 5xxx instruction
$C2C    $C930   RND      V9, #30         ; V9 = random & 30
$C2E    $3B54   SE       VB, #54         ; Skip if VB == 84
$C30    $67AF   LD       V7, #AF         ; Load 175 into V7
$C32    $32EA   SE       V2, #EA         ; Skip if V2 == 234
$C34    $F168   UNKNOWN  F168            ; Unknown Fxxx instruction
$C36    $3DA0   SE       VD, #A0         ; Skip if VD == 160
$C38    $668E   LD       V6, #8E         ; Load 142 into V6
$C3A    $51E0   SE       V1, VE          ; Skip if V1 == VE
$C3C    $D3B6   DRW      V3, VB, #6      ; Draw 6-byte sprite at V3, VB
$C3E    $3E5B   SE       VE, #5B         ; Skip if VE == 91
$C40    $60CC   LD       V0, #CC         ; Load 204 into V0
$C42    $F4A5   UNKNOWN  F4A5            ; Unknown Fxxx instruction
$C44    $34A6   SE       V4, #A6         ; Skip if V4 == 166
$C46    $386C   SE       V8, #6C         ; Skip if V8 == 108
$C48    $79CD   ADD      V9, #CD         ; Add 205 to V9
$C4A    $F611   UNKNOWN  F611            ; Unknown Fxxx instruction
$C4C    $DC6A   DRW      VC, V6, #A      ; Draw 10-byte sprite at VC, V6
$C4E    $F161   UNKNOWN  F161            ; Unknown Fxxx instruction
$C50    $8013   XOR      V0, V1          ; V0 ^= V1
$C52    $1AD9   JP       $AD9            ; Jump to AD9
$C54    $0A6E   SYS      $A6E            ; System call to A6E
$C56    $8348   UNKNOWN  8348            ; Unknown 8xxx instruction
$C58    $12D6   JP       $2D6            ; Jump to 2D6
$C5A    $AE94   LD       I, $E94         ; Load E94 into I
$C5C    $631A   LD       V3, #1A         ; Load 26 into V3
$C5E    $0B9D   SYS      $B9D            ; System call to B9D
$C60    $3D57   SE       VD, #57         ; Skip if VD == 87
$C62    $0117   SYS      $117            ; System call to 117
$C64    $3D07   SE       VD, #07         ; Skip if VD == 7
$C66    $ED46   UNKNOWN  $ED46           ; Unknown Exxx instruction
$C68    $6DDE   LD       VD, #DE         ; Load 222 into VD
$C6A    $D0DA   DRW      V0, VD, #A      ; Draw 10-byte sprite at V0, VD
$C6C    $4B6B   SNE      VB, #6B         ; Skip if VB != 107
$C6E    $C23D   RND      V2, #3D         ; V2 = random & 3D
$C70    $C7B6   RND      V7, #B6         ; V7 = random & B6
$C72    $5C52   UNKNOWN  $5C52           ; Unknown 5xxx instruction
$C74    $AED4   LD       I, $ED4         ; Load ED4 into I
$C76    $72E4   ADD      V2, #E4         ; Add 228 to V2
$C78    $7F71   ADD      VF, #71         ; Add 113 to VF
$C7A    $B70A   JP       V0, $70A        ; Jump to V0 + 70A
$C7C    $8AB0   LD       VA, VB          ; VA = VB
$C7E    $B4D0   JP       V0, $4D0        ; Jump to V0 + 4D0
$C80    $C985   RND      V9, #85         ; V9 = random & 85
$C82    $8FA7   SUBN     VF, VA          ; VF = VA - VF, VF = !borrow
$C84    $BE60   JP       V0, $E60        ; Jump to V0 + E60
$C86    $CF65   RND      VF, #65         ; VF = random & 65
$C88    $7AA9   ADD      VA, #A9         ; Add 169 to VA
$C8A    $2C8B   CALL     $C8B            ; Call subroutine at C8B
$C8C    $55A7   UNKNOWN  $55A7           ; Unknown 5xxx instruction
$C8E    $1630   JP       $630            ; Jump to 630
$C90    $3FDF   SE       VF, #DF         ; Skip if VF == 223
$C92    $CFED   RND      VF, #ED         ; VF = random & ED
$C94    $219F   CALL     $19F            ; Call subroutine at 19F
$C96    $27ED   CALL     $7ED            ; Call subroutine at 7ED
$C98    $723F   ADD      V2, #3F         ; Add 63 to V2
$C9A    $C358   RND      V3, #58         ; V3 = random & 58
$C9C    $4C8A   SNE      VC, #8A         ; Skip if VC != 138
$C9E    $4EDE   SNE      VE, #DE         ; Skip if VE != 222
$CA0    $4809   SNE      V8, #09         ; Skip if V8 != 9
$CA2    $5857   UNKNOWN  $5857           ; Unknown 5xxx instruction
$CA4    $C892   RND      V8, #92         ; V8 = random & 92
$CA6    $41E8   SNE      V1, #E8         ; Skip if V1 != 232
$CA8    $62EC   LD       V2, #EC         ; Load 236 into V2
$CAA    $E8EE   UNKNOWN  $E8EE           ; Unknown Exxx instruction
$CAC    $8FAD   UNKNOWN  8FAD            ; Unknown 8xxx instruction
$CAE    $49A3   SNE      V9, #A3         ; Skip if V9 != 163
$CB0    $FA16   UNKNOWN  FA16            ; Unknown Fxxx instruction
$CB2    $A986   LD       I, $986         ; Load 986 into I
$CB4    $AA9E   LD       I, $A9E         ; Load A9E into I
$CB6    $199F   JP       $99F            ; Jump to 99F
$CB8    $8023   XOR      V0, V2          ; V0 ^= V2
$CBA    $5D69   UNKNOWN  $5D69           ; Unknown 5xxx instruction
$CBC    $9646   UNKNOWN  $9646           ; Unknown 9xxx instruction
$CBE    $56C4   UNKNOWN  $56C4           ; Unknown 5xxx instruction
$CC0    $3C47   SE       VC, #47         ; Skip if VC == 71
$CC2    $CD56   RND      VD, #56         ; VD = random & 56
$CC4    $ABC7   LD       I, $BC7         ; Load BC7 into I
$CC6    $DC80   DRW      VC, V8, #0      ; Draw 0-byte sprite at VC, V8
$CC8    $7FAD   ADD      VF, #AD         ; Add 173 to VF
$CCA    $E84C   UNKNOWN  $E84C           ; Unknown Exxx instruction
$CCC    $8166   SHR      V1              ; V1 >>= 1, VF = LSB
$CCE    $B730   JP       V0, $730        ; Jump to V0 + 730
$CD0    $F778   UNKNOWN  F778            ; Unknown Fxxx instruction
$CD2    $603D   LD       V0, #3D         ; Load 61 into V0
$CD4    $7E91   ADD      VE, #91         ; Add 145 to VE
$CD6    $3B51   SE       VB, #51         ; Skip if VB == 81
$CD8    $24E5   CALL     $4E5            ; Call subroutine at 4E5
$CDA    $B75B   JP       V0, $75B        ; Jump to V0 + 75B
$CDC    $4FD4   SNE      VF, #D4         ; Skip if VF != 212
$CDE    $0248   SYS      $248            ; System call to 248
$CE0    $1ABD   JP       $ABD            ; Jump to ABD
$CE2    $3DD3   SE       VD, #D3         ; Skip if VD == 211
$CE4    $468D   SNE      V6, #8D         ; Skip if V6 != 141
$CE6    $54F5   UNKNOWN  $54F5           ; Unknown 5xxx instruction
$CE8    $6193   LD       V1, #93         ; Load 147 into V1
$CEA    $A9D9   LD       I, $9D9         ; Load 9D9 into I
$CEC    $9492   UNKNOWN  $9492           ; Unknown 9xxx instruction
$CEE    $55A2   UNKNOWN  $55A2           ; Unknown 5xxx instruction
$CF0    $5C51   UNKNOWN  $5C51           ; Unknown 5xxx instruction
$CF2    $28D4   CALL     $8D4            ; Call subroutine at 8D4
$CF4    $03DF   SYS      $3DF            ; System call to 3DF
$CF6    $D3D0   DRW      V3, VD, #0      ; Draw 0-byte sprite at V3, VD
$CF8    $0070   SYS      $070            ; System call to 070
$CFA    $FF21   UNKNOWN  FF21            ; Unknown Fxxx instruction
$CFC    $4BA5   SNE      VB, #A5         ; Skip if VB != 165
$CFE    $C5F9   RND      V5, #F9         ; V5 = random & F9
$D00    $DDDD   DRW      VD, VD, #D      ; Draw 13-byte sprite at VD, VD
$D02    $0E65   SYS      $E65            ; System call to E65
$D04    $D1FA   DRW      V1, VF, #A      ; Draw 10-byte sprite at V1, VF
$D06    $FC32   UNKNOWN  FC32            ; Unknown Fxxx instruction
$D08    $F38C   UNKNOWN  F38C            ; Unknown Fxxx instruction
$D0A    $6CFA   LD       VC, #FA         ; Load 250 into VC
$D0C    $14F9   JP       $4F9            ; Jump to 4F9
$D0E    $32C2   SE       V2, #C2         ; Skip if V2 == 194
$D10    $1094   JP       $094            ; Jump to 094
$D12    $0095   SYS      $095            ; System call to 095
$D14    $42F0   SNE      V2, #F0         ; Skip if V2 != 240
$D16    $3AE6   SE       VA, #E6         ; Skip if VA == 230
$D18    $34F8   SE       V4, #F8         ; Skip if V4 == 248
$D1A    $5972   UNKNOWN  $5972           ; Unknown 5xxx instruction
$D1C    $624D   LD       V2, #4D         ; Load 77 into V2
$D1E    $A380   LD       I, $380         ; Load 380 into I
$D20    $0AC1   SYS      $AC1            ; System call to AC1
$D22    $3671   SE       V6, #71         ; Skip if V6 == 113
$D24    $5744   UNKNOWN  $5744           ; Unknown 5xxx instruction
$D26    $2C0B   CALL     $C0B            ; Call subroutine at C0B
$D28    $43B2   SNE      V3, #B2         ; Skip if V3 != 178
$D2A    $9FA0   SNE      VF, VA          ; Skip if VF != VA
$D2C    $0D03   SYS      $D03            ; System call to D03
$D2E    $8295   SUB      V2, V9          ; V2 -= V9, VF = !borrow
$D30    $AABE   LD       I, $ABE         ; Load ABE into I
$D32    $169D   JP       $69D            ; Jump to 69D
$D34    $7134   ADD      V1, #34         ; Add 52 to V1
$D36    $A511   LD       I, $511         ; Load 511 into I
$D38    $861E   SHL      V6              ; V6 <<= 1, VF = MSB
$D3A    $254B   CALL     $54B            ; Call subroutine at 54B
$D3C    $AF9D   LD       I, $F9D         ; Load F9D into I
$D3E    $2A07   CALL     $A07            ; Call subroutine at A07
$D40    $7A0B   ADD      VA, #0B         ; Add 11 to VA
$D42    $BF78   JP       V0, $F78        ; Jump to V0 + F78
$D44    $B36C   JP       V0, $36C        ; Jump to V0 + 36C
$D46    $498E   SNE      V9, #8E         ; Skip if V9 != 142
$D48    $172C   JP       $72C            ; Jump to 72C
$D4A    $1BFE   JP       $BFE            ; Jump to BFE
$D4C    $0DD1   SYS      $DD1            ; System call to DD1
$D4E    $DD6A   DRW      VD, V6, #A      ; Draw 10-byte sprite at VD, V6
$D50    $A9F9   LD       I, $9F9         ; Load 9F9 into I
$D52    $FADA   UNKNOWN  FADA            ; Unknown Fxxx instruction
$D54    $93E2   UNKNOWN  $93E2           ; Unknown 9xxx instruction
$D56    $26D1   CALL     $6D1            ; Call subroutine at 6D1
$D58    $96EC   UNKNOWN  $96EC           ; Unknown 9xxx instruction
$D5A    $827E   SHL      V2              ; V2 <<= 1, VF = MSB
$D5C    $3F28   SE       VF, #28         ; Skip if VF == 40
$D5E    $24C0   CALL     $4C0            ; Call subroutine at 4C0
$D60    $58F8   UNKNOWN  $58F8           ; Unknown 5xxx instruction
$D62    $4851   SNE      V8, #51         ; Skip if V8 != 81
$D64    $4AE9   SNE      VA, #E9         ; Skip if VA != 233
$D66    $4436   SNE      V4, #36         ; Skip if V4 != 54
$D68    $663F   LD       V6, #3F         ; Load 63 into V6
$D6A    $391E   SE       V9, #1E         ; Skip if V9 == 30
$D6C    $C9EF   RND      V9, #EF         ; V9 = random & EF
$D6E    $BD06   JP       V0, $D06        ; Jump to V0 + D06
$D70    $FEF1   UNKNOWN  FEF1            ; Unknown Fxxx instruction
$D72    $F941   UNKNOWN  F941            ; Unknown Fxxx instruction
$D74    $FA86   UNKNOWN  FA86            ; Unknown Fxxx instruction
$D76    $BCF1   JP       V0, $CF1        ; Jump to V0 + CF1
$D78    $2427   CALL     $427            ; Call subroutine at 427
$D7A    $15CF   JP       $5CF            ; Jump to 5CF
$D7C    $FB61   UNKNOWN  FB61            ; Unknown Fxxx instruction
$D7E    $3885   SE       V8, #85         ; Skip if V8 == 133
$D80    $D677   DRW      V6, V7, #7      ; Draw 7-byte sprite at V6, V7
$D82    $07DA   SYS      $7DA            ; System call to 7DA
$D84    $8A61   OR       VA, V6          ; VA |= V6
$D86    $5562   UNKNOWN  $5562           ; Unknown 5xxx instruction
$D88    $CAD8   RND      VA, #D8         ; VA = random & D8
$D8A    $ABE5   LD       I, $BE5         ; Load BE5 into I
$D8C    $9FDF   UNKNOWN  $9FDF           ; Unknown 9xxx instruction
$D8E    $54F6   UNKNOWN  $54F6           ; Unknown 5xxx instruction
$D90    $B275   JP       V0, $275        ; Jump to V0 + 275
$D92    $AA22   LD       I, $A22         ; Load A22 into I
$D94    $1F85   JP       $F85            ; Jump to F85
$D96    $F1A7   UNKNOWN  F1A7            ; Unknown Fxxx instruction
$D98    $1CFC   JP       $CFC            ; Jump to CFC
$D9A    $C7A4   RND      V7, #A4         ; V7 = random & A4
$D9C    $34F4   SE       V4, #F4         ; Skip if V4 == 244
$D9E    $99C1   UNKNOWN  $99C1           ; Unknown 9xxx instruction
$DA0    $A3F9   LD       I, $3F9         ; Load 3F9 into I
$DA2    $27BE   CALL     $7BE            ; Call subroutine at 7BE
$DA4    $40B4   SNE      V0, #B4         ; Skip if V0 != 180
$DA6    $8304   ADD      V3, V0          ; V3 += V0, VF = carry
$DA8    $E013   UNKNOWN  $E013           ; Unknown Exxx instruction
$DAA    $E32D   UNKNOWN  $E32D           ; Unknown Exxx instruction
$DAC    $1483   JP       $483            ; Jump to 483
$DAE    $46C9   SNE      V6, #C9         ; Skip if V6 != 201
$DB0    $9B94   UNKNOWN  $9B94           ; Unknown 9xxx instruction
$DB2    $3A0D   SE       VA, #0D         ; Skip if VA == 13
$DB4    $FA20   UNKNOWN  FA20            ; Unknown Fxxx instruction
$DB6    $2E0F   CALL     $E0F            ; Call subroutine at E0F
$DB8    $A754   LD       I, $754         ; Load 754 into I
$DBA    $F0A7   UNKNOWN  F0A7            ; Unknown Fxxx instruction
$DBC    $E3E8   UNKNOWN  $E3E8           ; Unknown Exxx instruction
$DBE    $63A7   LD       V3, #A7         ; Load 167 into V3
$DC0    $C211   RND      V2, #11         ; V2 = random & 11
$DC2    $B6BA   JP       V0, $6BA        ; Jump to V0 + 6BA
$DC4    $452F   SNE      V5, #2F         ; Skip if V5 != 47
$DC6    $17F7   JP       $7F7            ; Jump to 7F7
$DC8    $12FD   JP       $2FD            ; Jump to 2FD
$DCA    $42DE   SNE      V2, #DE         ; Skip if V2 != 222
$DCC    $6F5B   LD       VF, #5B         ; Load 91 into VF
$DCE    $AC21   LD       I, $C21         ; Load C21 into I
$DD0    $6625   LD       V6, #25         ; Load 37 into V6
$DD2    $CD9D   RND      VD, #9D         ; VD = random & 9D
$DD4    $CFEF   RND      VF, #EF         ; VF = random & EF
$DD6    $B918   JP       V0, $918        ; Jump to V0 + 918
$DD8    $B674   JP       V0, $674        ; Jump to V0 + 674
$DDA    $4C52   SNE      VC, #52         ; Skip if VC != 82
$DDC    $FE27   UNKNOWN  FE27            ; Unknown Fxxx instruction
$DDE    $7798   ADD      V7, #98         ; Add 152 to V7
$DE0    $013B   SYS      $13B            ; System call to 13B
$DE2    $79D0   ADD      V9, #D0         ; Add 208 to V9
$DE4    $0EFC   SYS      $EFC            ; System call to EFC
$DE6    $699F   LD       V9, #9F         ; Load 159 into V9
$DE8    $16CE   JP       $6CE            ; Jump to 6CE
$DEA    $2F38   CALL     $F38            ; Call subroutine at F38
$DEC    $9646   UNKNOWN  $9646           ; Unknown 9xxx instruction
$DEE    $8DEE   SHL      VD              ; VD <<= 1, VF = MSB
$DF0    $1EE2   JP       $EE2            ; Jump to EE2
$DF2    $6AAC   LD       VA, #AC         ; Load 172 into VA
$DF4    $281C   CALL     $81C            ; Call subroutine at 81C
$DF6    $0664   SYS      $664            ; System call to 664
$DF8    $CA6C   RND      VA, #6C         ; VA = random & 6C
$DFA    $8297   SUBN     V2, V9          ; V2 = V9 - V2, VF = !borrow
$DFC    $AA24   LD       I, $A24         ; Load A24 into I
$DFE    $1C3E   JP       $C3E            ; Jump to C3E
$E00    $2E32   CALL     $E32            ; Call subroutine at E32
$E02    $1DEC   JP       $DEC            ; Jump to DEC
$E04    $89AC   UNKNOWN  89AC            ; Unknown 8xxx instruction
$E06    $E86E   UNKNOWN  $E86E           ; Unknown Exxx instruction
$E08    $DE39   DRW      VE, V3, #9      ; Draw 9-byte sprite at VE, V3
$E0A    $785B   ADD      V8, #5B         ; Add 91 to V8
$E0C    $2CD3   CALL     $CD3            ; Call subroutine at CD3
$E0E    $EE56   UNKNOWN  $EE56           ; Unknown Exxx instruction
$E10    $7C8E   ADD      VC, #8E         ; Add 142 to VC
$E12    $E3EF   UNKNOWN  $E3EF           ; Unknown Exxx instruction
$E14    $2263   CALL     $263            ; Call subroutine at 263
$E16    $4B9D   SNE      VB, #9D         ; Skip if VB != 157
$E18    $82AF   UNKNOWN  82AF            ; Unknown 8xxx instruction
$E1A    $5A40   SE       VA, V4          ; Skip if VA == V4
$E1C    $A76B   LD       I, $76B         ; Load 76B into I
$E1E    $77B5   ADD      V7, #B5         ; Add 181 to V7
$E20    $CD76   RND      VD, #76         ; VD = random & 76
$E22    $4CC8   SNE      VC, #C8         ; Skip if VC != 200
$E24    $C87F   RND      V8, #7F         ; V8 = random & 7F
$E26    $F174   UNKNOWN  F174            ; Unknown Fxxx instruction
$E28    $4997   SNE      V9, #97         ; Skip if V9 != 151
$E2A    $8DEF   UNKNOWN  8DEF            ; Unknown 8xxx instruction
$E2C    $43BF   SNE      V3, #BF         ; Skip if V3 != 191
$E2E    $DF54   DRW      VF, V5, #4      ; Draw 4-byte sprite at VF, V5
$E30    $778F   ADD      V7, #8F         ; Add 143 to V7
$E32    $2756   CALL     $756            ; Call subroutine at 756
$E34    $9CFA   UNKNOWN  $9CFA           ; Unknown 9xxx instruction
$E36    $B005   JP       V0, $005        ; Jump to V0 + 005
$E38    $AEBC   LD       I, $EBC         ; Load EBC into I
$E3A    $0961   SYS      $961            ; System call to 961
$E3C    $E584   UNKNOWN  $E584           ; Unknown Exxx instruction
$E3E    $AA1E   LD       I, $A1E         ; Load A1E into I
$E40    $E0E6   UNKNOWN  $E0E6           ; Unknown Exxx instruction
$E42    $EF21   UNKNOWN  $EF21           ; Unknown Exxx instruction
$E44    $7CF7   ADD      VC, #F7         ; Add 247 to VC
$E46    $0735   SYS      $735            ; System call to 735
$E48    $EC13   UNKNOWN  $EC13           ; Unknown Exxx instruction
$E4A    $DED7   DRW      VE, VD, #7      ; Draw 7-byte sprite at VE, VD
$E4C    $9989   UNKNOWN  $9989           ; Unknown 9xxx instruction
$E4E    $E77A   UNKNOWN  $E77A           ; Unknown Exxx instruction
$E50    $C4AF   RND      V4, #AF         ; V4 = random & AF
$E52    $3D94   SE       VD, #94         ; Skip if VD == 148
$E54    $61C2   LD       V1, #C2         ; Load 194 into V1
$E56    $2A09   CALL     $A09            ; Call subroutine at A09
$E58    $D0D2   DRW      V0, VD, #2      ; Draw 2-byte sprite at V0, VD
$E5A    $2578   CALL     $578            ; Call subroutine at 578
$E5C    $0129   SYS      $129            ; System call to 129
$E5E    $FE95   UNKNOWN  FE95            ; Unknown Fxxx instruction
$E60    $76ED   ADD      V6, #ED         ; Add 237 to V6
$E62    $D826   DRW      V8, V2, #6      ; Draw 6-byte sprite at V8, V2
$E64    $EE09   UNKNOWN  $EE09           ; Unknown Exxx instruction
$E66    $6E51   LD       VE, #51         ; Load 81 into VE
$E68    $A864   LD       I, $864         ; Load 864 into I
$E6A    $D67C   DRW      V6, V7, #C      ; Draw 12-byte sprite at V6, V7
$E6C    $7A53   ADD      VA, #53         ; Add 83 to VA
$E6E    $2FDA   CALL     $FDA            ; Call subroutine at FDA
$E70    $AB66   LD       I, $B66         ; Load B66 into I
$E72    $70A0   ADD      V0, #A0         ; Add 160 to V0
$E74    $4E4C   SNE      VE, #4C         ; Skip if VE != 76
$E76    $6A67   LD       VA, #67         ; Load 103 into VA
$E78    $990A   UNKNOWN  $990A           ; Unknown 9xxx instruction
$E7A    $CEA5   RND      VE, #A5         ; VE = random & A5
$E7C    $BCB7   JP       V0, $CB7        ; Jump to V0 + CB7
$E7E    $70C8   ADD      V0, #C8         ; Add 200 to V0
$E80    $FA6A   UNKNOWN  FA6A            ; Unknown Fxxx instruction
$E82    $C3AF   RND      V3, #AF         ; V3 = random & AF
$E84    $3671   SE       V6, #71         ; Skip if V6 == 113
$E86    $78D1   ADD      V8, #D1         ; Add 209 to V8
$E88    $9CAF   UNKNOWN  $9CAF           ; Unknown 9xxx instruction
$E8A    $9548   UNKNOWN  $9548           ; Unknown 9xxx instruction
$E8C    $49DD   SNE      V9, #DD         ; Skip if V9 != 221
$E8E    $1855   JP       $855            ; Jump to 855
$E90    $63AD   LD       V3, #AD         ; Load 173 into V3
$E92    $6B92   LD       VB, #92         ; Load 146 into VB
$E94    $120E   JP       $20E            ; Jump to 20E
$E96    $FA2B   UNKNOWN  FA2B            ; Unknown Fxxx instruction
$E98    $7427   ADD      V4, #27         ; Add 39 to V4
$E9A    $5EBD   UNKNOWN  $5EBD           ; Unknown 5xxx instruction
$E9C    $A8FB   LD       I, $8FB         ; Load 8FB into I
$E9E    $3BAE   SE       VB, #AE         ; Skip if VB == 174
$EA0    $E989   UNKNOWN  $E989           ; Unknown Exxx instruction
$EA2    $43EA   SNE      V3, #EA         ; Skip if V3 != 234
$EA4    $9BCD   UNKNOWN  $9BCD           ; Unknown 9xxx instruction
$EA6    $02D8   SYS      $2D8            ; System call to 2D8
$EA8    $8661   OR       V6, V6          ; V6 |= V6
$EAA    $4FBA   SNE      VF, #BA         ; Skip if VF != 186
$EAC    $1200   JP       $200            ; Jump to 200
$EAE    $5808   UNKNOWN  $5808           ; Unknown 5xxx instruction
$EB0    $679C   LD       V7, #9C         ; Load 156 into V7
$EB2    $95CC   UNKNOWN  $95CC           ; Unknown 9xxx instruction
$EB4    $7A43   ADD      VA, #43         ; Add 67 to VA
$EB6    $31AD   SE       V1, #AD         ; Skip if V1 == 173
$EB8    $9649   UNKNOWN  $9649           ; Unknown 9xxx instruction
$EBA    $EABE   UNKNOWN  $EABE           ; Unknown Exxx instruction
$EBC    $ABB0   LD       I, $BB0         ; Load BB0 into I
$EBE    $1343   JP       $343            ; Jump to 343
$EC0    $F310   UNKNOWN  F310            ; Unknown Fxxx instruction
$EC2    $62D7   LD       V2, #D7         ; Load 215 into V2
$EC4    $084D   SYS      $84D            ; System call to 84D
$EC6    $F47F   UNKNOWN  F47F            ; Unknown Fxxx instruction
$EC8    $3D9C   SE       VD, #9C         ; Skip if VD == 156
$ECA    $3BA6   SE       VB, #A6         ; Skip if VB == 166
$ECC    $CD21   RND      VD, #21         ; VD = random & 21
$ECE    $3C3B   SE       VC, #3B         ; Skip if VC == 59
$ED0    $F5CF   UNKNOWN  F5CF            ; Unknown Fxxx instruction
$ED2    $786E   ADD      V8, #6E         ; Add 110 to V8
$ED4    $C128   RND      V1, #28         ; V1 = random & 28
$ED6    $D8E1   DRW      V8, VE, #1      ; Draw 1-byte sprite at V8, VE
$ED8    $FD05   UNKNOWN  FD05            ; Unknown Fxxx instruction
$EDA    $AC9F   LD       I, $C9F         ; Load C9F into I
$EDC    $48D9   SNE      V8, #D9         ; Skip if V8 != 217
$EDE    $FA4C   UNKNOWN  FA4C            ; Unknown Fxxx instruction
$EE0    $55AE   UNKNOWN  $55AE           ; Unknown 5xxx instruction
$EE2    $EF2F   UNKNOWN  $EF2F           ; Unknown Exxx instruction
$EE4    $F29F   UNKNOWN  F29F            ; Unknown Fxxx instruction
$EE6    $F84E   UNKNOWN  F84E            ; Unknown Fxxx instruction
$EE8    $63BF   LD       V3, #BF         ; Load 191 into V3
$EEA    $2B38   CALL     $B38            ; Call subroutine at B38
$EEC    $465C   SNE      V6, #5C         ; Skip if V6 != 92
$EEE    $08BE   SYS      $8BE            ; System call to 8BE
$EF0    $177C   JP       $77C            ; Jump to 77C
$EF2    $C12B   RND      V1, #2B         ; V1 = random & 2B
$EF4    $2633   CALL     $633            ; Call subroutine at 633
$EF6    $D059   DRW      V0, V5, #9      ; Draw 9-byte sprite at V0, V5
$EF8    $2242   CALL     $242            ; Call subroutine at 242
$EFA    $7984   ADD      V9, #84         ; Add 132 to V9
$EFC    $3220   SE       V2, #20         ; Skip if V2 == 32
$EFE    $1514   JP       $514            ; Jump to 514
$F00    $1556   JP       $556            ; Jump to 556
$F02    $C0F6   RND      V0, #F6         ; V0 = random & F6
$F04    $C4D1   RND      V4, #D1         ; V4 = random & D1
$F06    $DB30   DRW      VB, V3, #0      ; Draw 0-byte sprite at VB, V3
$F08    $FB1B   UNKNOWN  FB1B            ; Unknown Fxxx instruction
$F0A    $403D   SNE      V0, #3D         ; Skip if V0 != 61
$F0C    $D629   DRW      V6, V2, #9      ; Draw 9-byte sprite at V6, V2
$F0E    $DCF4   DRW      VC, VF, #4      ; Draw 4-byte sprite at VC, VF
$F10    $CDC7   RND      VD, #C7         ; VD = random & C7
$F12    $62A1   LD       V2, #A1         ; Load 161 into V2
$F14    $64EA   LD       V4, #EA         ; Load 234 into V4
$F16    $FE0B   UNKNOWN  FE0B            ; Unknown Fxxx instruction
$F18    $2D4D   CALL     $D4D            ; Call subroutine at D4D
$F1A    $08DC   SYS      $8DC            ; System call to 8DC
$F1C    $408B   SNE      V0, #8B         ; Skip if V0 != 139
$F1E    $4149   SNE      V1, #49         ; Skip if V1 != 73
$F20    $1E90   JP       $E90            ; Jump to E90
$F22    $DE21   DRW      VE, V2, #1      ; Draw 1-byte sprite at VE, V2
$F24    $B223   JP       V0, $223        ; Jump to V0 + 223
$F26    $C525   RND      V5, #25         ; V5 = random & 25
$F28    $E0BC   UNKNOWN  $E0BC           ; Unknown Exxx instruction
$F2A    $470D   SNE      V7, #0D         ; Skip if V7 != 13
$F2C    $10F6   JP       $0F6            ; Jump to 0F6
$F2E    $B8AC   JP       V0, $8AC        ; Jump to V0 + 8AC
$F30    $EB10   UNKNOWN  $EB10           ; Unknown Exxx instruction
$F32    $1BC9   JP       $BC9            ; Jump to BC9
$F34    $0734   SYS      $734            ; System call to 734
$F36    $4043   SNE      V0, #43         ; Skip if V0 != 67
$F38    $0557   SYS      $557            ; System call to 557
$F3A    $6FBA   LD       VF, #BA         ; Load 186 into VF
$F3C    $42E4   SNE      V2, #E4         ; Skip if V2 != 228
$F3E    $8086   SHR      V0              ; V0 >>= 1, VF = LSB
$F40    $3DF7   SE       VD, #F7         ; Skip if VD == 247
$F42    $DF26   DRW      VF, V2, #6      ; Draw 6-byte sprite at VF, V2
$F44    $5AC7   UNKNOWN  $5AC7           ; Unknown 5xxx instruction
$F46    $8E6E   SHL      VE              ; VE <<= 1, VF = MSB
$F48    $370A   SE       V7, #0A         ; Skip if V7 == 10
$F4A    $27DC   CALL     $7DC            ; Call subroutine at 7DC
$F4C    $9006   UNKNOWN  $9006           ; Unknown 9xxx instruction
$F4E    $A337   LD       I, $337         ; Load 337 into I
$F50    $00BC   SYS      $0BC            ; System call to 0BC
$F52    $47FB   SNE      V7, #FB         ; Skip if V7 != 251
$F54    $086B   SYS      $86B            ; System call to 86B
$F56    $DF99   DRW      VF, V9, #9      ; Draw 9-byte sprite at VF, V9
$F58    $D1A3   DRW      V1, VA, #3      ; Draw 3-byte sprite at V1, VA
$F5A    $99A1   UNKNOWN  $99A1           ; Unknown 9xxx instruction
$F5C    $7C78   ADD      VC, #78         ; Add 120 to VC
$F5E    $35B0   SE       V5, #B0         ; Skip if V5 == 176
$F60    $6782   LD       V7, #82         ; Load 130 into V7
$F62    $BB9F   JP       V0, $B9F        ; Jump to V0 + B9F
$F64    $32E7   SE       V2, #E7         ; Skip if V2 == 231
$F66    $1B27   JP       $B27            ; Jump to B27
$F68    $7520   ADD      V5, #20         ; Add 32 to V5
$F6A    $12C3   JP       $2C3            ; Jump to 2C3
$F6C    $AC06   LD       I, $C06         ; Load C06 into I
$F6E    $F9D0   UNKNOWN  F9D0            ; Unknown Fxxx instruction
$F70    $75F5   ADD      V5, #F5         ; Add 245 to V5
$F72    $1CC9   JP       $CC9            ; Jump to CC9
$F74    $DE35   DRW      VE, V3, #5      ; Draw 5-byte sprite at VE, V3
$F76    $C71C   RND      V7, #1C         ; V7 = random & 1C
$F78    $CDCD   RND      VD, #CD         ; VD = random & CD
$F7A    $4F22   SNE      VF, #22         ; Skip if VF != 34
$F7C    $04C7   SYS      $4C7            ; System call to 4C7
$F7E    $0051   SYS      $051            ; System call to 051
$F80    $12D6   JP       $2D6            ; Jump to 2D6
$F82    $C705   RND      V7, #05         ; V7 = random & 05
$F84    $6D62   LD       VD, #62         ; Load 98 into VD
$F86    $1A97   JP       $A97            ; Jump to A97
$F88    $1D8F   JP       $D8F            ; Jump to D8F
$F8A    $FCEA   UNKNOWN  FCEA            ; Unknown Fxxx instruction
$F8C    $6DE3   LD       VD, #E3         ; Load 227 into VD
$F8E    $021E   SYS      $21E            ; System call to 21E
$F90    $F25A   UNKNOWN  F25A            ; Unknown Fxxx instruction
$F92    $A362   LD       I, $362         ; Load 362 into I
$F94    $2C1D   CALL     $C1D            ; Call subroutine at C1D
$F96    $42AC   SNE      V2, #AC         ; Skip if V2 != 172
$F98    $55E4   UNKNOWN  $55E4           ; Unknown 5xxx instruction
$F9A    $2132   CALL     $132            ; Call subroutine at 132
$F9C    $4A7D   SNE      VA, #7D         ; Skip if VA != 125
$F9E    $79C1   ADD      V9, #C1         ; Add 193 to V9
$FA0    $D45F   DRW      V4, V5, #F      ; Draw 15-byte sprite at V4, V5
$FA2    $0571   SYS      $571            ; System call to 571
$FA4    $B78E   JP       V0, $78E        ; Jump to V0 + 78E
$FA6    $1EB3   JP       $EB3            ; Jump to EB3
$FA8    $30EA   SE       V0, #EA         ; Skip if V0 == 234
$FAA    $E6E6   UNKNOWN  $E6E6           ; Unknown Exxx instruction
$FAC    $C92B   RND      V9, #2B         ; V9 = random & 2B
$FAE    $F5F8   UNKNOWN  F5F8            ; Unknown Fxxx instruction
$FB0    $0372   SYS      $372            ; System call to 372
$FB2    $8623   XOR      V6, V2          ; V6 ^= V2
$FB4    $9344   UNKNOWN  $9344           ; Unknown 9xxx instruction
$FB6    $1D81   JP       $D81            ; Jump to D81
$FB8    $B0C5   JP       V0, $0C5        ; Jump to V0 + 0C5
$FBA    $E8B8   UNKNOWN  $E8B8           ; Unknown Exxx instruction
$FBC    $1DCA   JP       $DCA            ; Jump to DCA
$FBE    $8A25   SUB      VA, V2          ; VA -= V2, VF = !borrow
$FC0    $240D   CALL     $40D            ; Call subroutine at 40D
$FC2    $CADB   RND      VA, #DB         ; VA = random & DB
$FC4    $0BD4   SYS      $BD4            ; System call to BD4
$FC6    $0E0C   SYS      $E0C            ; System call to E0C
$FC8    $1CFD   JP       $CFD            ; Jump to CFD
$FCA    $6DDC   LD       VD, #DC         ; Load 220 into VD
$FCC    $186F   JP       $86F            ; Jump to 86F
$FCE    $3200   SE       V2, #00         ; Skip if V2 == 0
$FD0    $EC94   UNKNOWN  $EC94           ; Unknown Exxx instruction
$FD2    $5E9D   UNKNOWN  $5E9D           ; Unknown 5xxx instruction
$FD4    $F833   LD       B, V8           ; Store BCD of V8 at I, I+1, I+2
$FD6    $6071   LD       V0, #71         ; Load 113 into V0
$FD8    $FCBE   UNKNOWN  FCBE            ; Unknown Fxxx instruction
$FDA    $40F2   SNE      V0, #F2         ; Skip if V0 != 242
$FDC    $BF37   JP       V0, $F37        ; Jump to V0 + F37
$FDE    $58A4   UNKNOWN  $58A4           ; Unknown 5xxx instruction
$FE0    $9846   UNKNOWN  $9846           ; Unknown 9xxx instruction
$FE2    $9514   UNKNOWN  $9514           ; Unknown 9xxx instruction
$FE4    $9F18   UNKNOWN  $9F18           ; Unknown 9xxx instruction
$FE6    $5932   UNKNOWN  $5932           ; Unknown 5xxx instruction
$FE8    $226E   CALL     $26E            ; Call subroutine at 26E
$FEA    $75ED   ADD      V5, #ED         ; Add 237 to V5
$FEC    $0F87   SYS      $F87            ; System call to F87
$FEE    $52A2   UNKNOWN  $52A2           ; Unknown 5xxx instruction
$FF0    $7EE9   ADD      VE, #E9         ; Add 233 to VE
$FF2    $4A64   SNE      VA, #64         ; Skip if VA != 100
$FF4    $A837   LD       I, $837         ; Load 837 into I
$FF6    $A8BE   LD       I, $8BE         ; Load 8BE into I
$FF8    $B332   JP       V0, $332        ; Jump to V0 + 332
$FFA    $3A41   SE       VA, #41         ; Skip if VA == 65
$FFC    $6A7D   LD       VA, #7D         ; Load 125 into VA
$FFE    $0905   SYS      $905            ; System call to 905

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 426 (23.8%)
  LD      : 237 (13.2%)
  JP      : 197 (11.0%)
  CALL    : 183 (10.2%)
  SNE     : 125 ( 7.0%)
  SE      : 125 ( 7.0%)
  SYS     : 124 ( 6.9%)
  ADD     : 117 ( 6.5%)
  RND     : 114 ( 6.4%)
  DRW     :  97 ( 5.4%)
  XOR     :  10 ( 0.6%)
  SHR     :   8 ( 0.4%)
  AND     :   7 ( 0.4%)
  SHL     :   6 ( 0.3%)
  SUBN    :   6 ( 0.3%)
  OR      :   5 ( 0.3%)
  SUB     :   5 ( 0.3%)

Memory Operations: 354 (19.8%)
Arithmetic Operations: 150 (8.4%)
