
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B003D01_I29974_C4224_04e242a1696d.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 3
Instance: 29974
Direction: ascending
Final Array: [76, 86, 96, 106, 116, 126, 136, 146]
Operations: R:0 W:8 C:10 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 120
Sort Array References:
  $21A: ADD I, V2 ; I ADDRESS MANIPULATION
  $21C: LD I, $C4A ; Load C4A into I
  $226: LD I, $AD5 ; Load AD5 into I
  $22E: LD I, $97D ; Load 97D into I
  $23E: LD I, $0FD ; Load 0FD into I
  $262: LD I, $A26 ; Load A26 into I
  $2A2: LD I, $0AA ; Load 0AA into I
  $2BC: LD I, $4AE ; Load 4AE into I
  $2D6: LD I, $8B2 ; Load 8B2 into I
  $2F0: LD I, $CB6 ; Load CB6 into I
  $322: LD I, $DF8 ; Load DF8 into I
  $356: LD I, $D8F ; Load D8F into I
  $36C: LD I, $24D ; Load 24D into I
  $394: LD I, $78B ; Load 78B into I
  $396: LD I, $201 ; Load 201 into I
  $3C4: LD I, $307 ; Load 307 into I
  $3F0: LD I, $107 ; Load 107 into I
  $3F8: LD I, $20C ; Load 20C into I
  $402: LD I, $5F0 ; Load 5F0 into I
  $436: LD I, $530 ; Load 530 into I
  $49A: LD I, $D73 ; Load D73 into I
  $4EE: LD I, $E00 ; Load E00 into I
  $4F2: LD I, $889 ; Load 889 into I
  $522: LD I, $EF5 ; Load EF5 into I
  $54E: LD I, $800 ; Load 800 into I
  $554: LD I, $6C0 ; Load 6C0 into I
  $560: LD I, $162 ; Load 162 into I
  $566: LD I, $166 ; Load 166 into I
  $570: LD I, $308 ; Load 308 into I
  $59A: LD I, $440 ; Load 440 into I
  $5CC: LD I, $7FF ; Load 7FF into I
  $5E6: LD I, $548 ; Load 548 into I
  $5EC: LD I, $063 ; Load 063 into I
  $620: LD I, $E98 ; Load E98 into I
  $64C: LD I, $D1F ; Load D1F into I
  $696: LD I, $82C ; Load 82C into I
  $6A4: LD I, $9A4 ; Load 9A4 into I
  $6C2: LD I, $181 ; Load 181 into I
  $6D6: LD I, $E3C ; Load E3C into I
  $6FA: LD I, $4E5 ; Load 4E5 into I
  $714: LD I, $AE4 ; Load AE4 into I
  $76E: LD I, $39E ; Load 39E into I
  $77C: LD I, $952 ; Load 952 into I
  $798: LD I, $01B ; Load 01B into I
  $7A2: LD I, $0A5 ; Load 0A5 into I
  $7C6: LD I, $C03 ; Load C03 into I
  $7F6: LD I, $203 ; Load 203 into I
  $7FE: LD I, $F01 ; Load F01 into I
  $838: LD I, $175 ; Load 175 into I
  $854: LD I, $063 ; Load 063 into I
  $85C: LD I, $886 ; Load 886 into I
  $880: LD I, $846 ; Load 846 into I
  $8A8: LD I, $92F ; Load 92F into I
  $8B4: LD I, $9FC ; Load 9FC into I
  $8D6: LD I, $F34 ; Load F34 into I
  $90A: LD I, $C65 ; Load C65 into I
  $940: LD I, $434 ; Load 434 into I
  $948: LD I, $6AA ; Load 6AA into I
  $966: LD I, $450 ; Load 450 into I
  $980: LD I, $8C4 ; Load 8C4 into I
  $986: LD I, $160 ; Load 160 into I
  $9FE: LD I, $0F6 ; Load 0F6 into I
  $A06: LD I, $67C ; Load 67C into I
  $A30: LD I, $8FE ; Load 8FE into I
  $A36: LD I, $8D0 ; Load 8D0 into I
  $A58: LD I, $EBD ; Load EBD into I
  $A9E: LD I, $88E ; Load 88E into I
  $AA2: LD I, $657 ; Load 657 into I
  $AA6: LD I, $658 ; Load 658 into I
  $AB0: LD I, $778 ; Load 778 into I
  $ACE: LD I, $1DB ; Load 1DB into I
  $AE8: LD I, $93F ; Load 93F into I
  $B00: LD I, $4AD ; Load 4AD into I
  $B24: LD I, $0F0 ; Load 0F0 into I
  $B28: LD I, $1C5 ; Load 1C5 into I
  $B3E: LD I, $836 ; Load 836 into I
  $B44: LD I, $209 ; Load 209 into I
  $B48: LD I, $962 ; Load 962 into I
  $B5A: LD I, $589 ; Load 589 into I
  $BE4: ADD I, V8 ; I ADDRESS MANIPULATION
  $BF2: LD I, $CB1 ; Load CB1 into I
  $BF8: LD I, $890 ; Load 890 into I
  $C04: LD I, $D2E ; Load D2E into I
  $C38: LD I, $2F0 ; Load 2F0 into I
  $C3C: LD I, $30B ; Load 30B into I
  $C54: LD I, $F7C ; Load F7C into I
  $C78: LD I, $27F ; Load 27F into I
  $C82: LD I, $4DE ; Load 4DE into I
  $C8A: LD I, $426 ; Load 426 into I
  $C9A: LD I, $A76 ; Load A76 into I
  $C9C: LD I, $8A8 ; Load 8A8 into I
  $CE8: LD I, $840 ; Load 840 into I
  $D06: LD I, $A35 ; Load A35 into I
  $D16: LD I, $697 ; Load 697 into I
  $D38: LD I, $E69 ; Load E69 into I
  $D40: LD I, $F63 ; Load F63 into I
  $D5C: LD I, $BA5 ; Load BA5 into I
  $D8C: LD I, $EE0 ; Load EE0 into I
  $D8E: LD I, $E2F ; Load E2F into I
  $DA8: LD I, $577 ; Load 577 into I
  $DBA: LD I, $293 ; Load 293 into I
  $DF6: LD [I], VB ; Store V0-VB at I
  $E2C: LD I, $DCB ; Load DCB into I
  $E3C: LD I, $7CA ; Load 7CA into I
  $E54: LD I, $CE8 ; Load CE8 into I
  $E96: LD I, $071 ; Load 071 into I
  $EA2: LD I, $F38 ; Load F38 into I
  $EA6: LD I, $089 ; Load 089 into I
  $EE4: LD I, $B2C ; Load B2C into I
  $EF8: LD I, $E21 ; Load E21 into I
  $F08: LD I, $F51 ; Load F51 into I
  $F28: LD I, $144 ; Load 144 into I
  $F58: LD I, $797 ; Load 797 into I
  $F66: LD I, $5B0 ; Load 5B0 into I
  $F6C: LD I, $182 ; Load 182 into I
  $F8A: LD I, $431 ; Load 431 into I
  $FA8: LD I, $1E2 ; Load 1E2 into I
  $FAE: LD I, $616 ; Load 616 into I
  $FDA: LD I, $FD6 ; Load FD6 into I
  $FE6: LD I, $C53 ; Load C53 into I

CONTROL FLOW ANALYSIS:
Jumps: 225
Calls: 106
Branches: 247
Loops: 134
Loop Structures:
  $200 -> $11F (backward jump)
  $216 -> $17C (backward jump)
  $2FA -> $01A (backward jump)
  $30A -> $0BA (backward jump)
  $31C -> $304 (backward jump)
  $39A -> $2B0 (backward jump)
  $3CC -> $348 (backward jump)
  $408 -> $28F (backward jump)
  $434 -> $06F (backward jump)
  $48A -> $43D (backward jump)
  $49E -> $394 (backward jump)
  $512 -> $0AE (backward jump)
  $53C -> $2D4 (backward jump)
  $558 -> $076 (backward jump)
  $562 -> $3FF (backward jump)
  $5A6 -> $220 (backward jump)
  $5CA -> $29B (backward jump)
  $5F2 -> $5E5 (backward jump)
  $60C -> $190 (backward jump)
  $61C -> $445 (backward jump)
  $628 -> $3D9 (backward jump)
  $67E -> $3E5 (backward jump)
  $68E -> $02F (backward jump)
  $69E -> $2DB (backward jump)
  $6CE -> $634 (backward jump)
  $6E4 -> $3E0 (backward jump)
  $722 -> $3ED (backward jump)
  $736 -> $2F9 (backward jump)
  $73E -> $63E (backward jump)
  $7CC -> $7A5 (backward jump)
  $7E0 -> $120 (backward jump)
  $7FC -> $7D6 (backward jump)
  $804 -> $1D0 (backward jump)
  $820 -> $2BB (backward jump)
  $85A -> $66D (backward jump)
  $884 -> $74E (backward jump)
  $89A -> $003 (backward jump)
  $89C -> $80C (backward jump)
  $89E -> $56B (backward jump)
  $8AE -> $2AA (backward jump)
  $8B8 -> $109 (backward jump)
  $8BA -> $3AA (backward jump)
  $8C2 -> $8A9 (backward jump)
  $8DA -> $7C3 (backward jump)
  $95C -> $806 (backward jump)
  $978 -> $547 (backward jump)
  $97A -> $4DB (backward jump)
  $97C -> $7AB (backward jump)
  $992 -> $448 (backward jump)
  $99C -> $61F (backward jump)
  $9BA -> $1D7 (backward jump)
  $9D8 -> $72B (backward jump)
  $A0E -> $961 (backward jump)
  $A16 -> $288 (backward jump)
  $A18 -> $0FC (backward jump)
  $A22 -> $206 (backward jump)
  $A34 -> $70E (backward jump)
  $A56 -> $82E (backward jump)
  $A5C -> $7E4 (backward jump)
  $A64 -> $314 (backward jump)
  $A7C -> $8A7 (backward jump)
  $A7E -> $198 (backward jump)
  $A96 -> $0EB (backward jump)
  $AA4 -> $83E (backward jump)
  $AAC -> $376 (backward jump)
  $AC2 -> $39F (backward jump)
  $AC4 -> $043 (backward jump)
  $AC6 -> $5AB (backward jump)
  $AF8 -> $41A (backward jump)
  $B02 -> $575 (backward jump)
  $B2E -> $1F1 (backward jump)
  $B30 -> $3C3 (backward jump)
  $B4E -> $575 (backward jump)
  $B52 -> $2DF (backward jump)
  $B54 -> $8D6 (backward jump)
  $B72 -> $A9F (backward jump)
  $B8E -> $0AE (backward jump)
  $B92 -> $6ED (backward jump)
  $B96 -> $197 (backward jump)
  $BAA -> $507 (backward jump)
  $BC4 -> $0C7 (backward jump)
  $C20 -> $491 (backward jump)
  $C22 -> $5DB (backward jump)
  $C36 -> $109 (backward jump)
  $C48 -> $57B (backward jump)
  $C4C -> $690 (backward jump)
  $C60 -> $A12 (backward jump)
  $C9E -> $AC5 (backward jump)
  $CAC -> $A30 (backward jump)
  $CB4 -> $508 (backward jump)
  $CC6 -> $198 (backward jump)
  $CE0 -> $5D9 (backward jump)
  $CEE -> $8D8 (backward jump)
  $CF2 -> $5D4 (backward jump)
  $D2C -> $3C8 (backward jump)
  $D6E -> $987 (backward jump)
  $D86 -> $2C2 (backward jump)
  $D8A -> $505 (backward jump)
  $D98 -> $D46 (backward jump)
  $DA6 -> $59C (backward jump)
  $DC2 -> $384 (backward jump)
  $DC8 -> $4A7 (backward jump)
  $DD6 -> $7E1 (backward jump)
  $DEE -> $9A7 (backward jump)
  $DF0 -> $0E3 (backward jump)
  $E08 -> $83A (backward jump)
  $E0C -> $C44 (backward jump)
  $E0E -> $D26 (backward jump)
  $E12 -> $5A1 (backward jump)
  $E40 -> $D1B (backward jump)
  $E60 -> $DAE (backward jump)
  $E70 -> $5AE (backward jump)
  $E9E -> $3EC (backward jump)
  $EA4 -> $42C (backward jump)
  $EAC -> $B7B (backward jump)
  $EBA -> $9BB (backward jump)
  $EDE -> $B3A (backward jump)
  $EEC -> $89B (backward jump)
  $EF6 -> $2E7 (backward jump)
  $F16 -> $843 (backward jump)
  $F2C -> $30E (backward jump)
  $F2E -> $569 (backward jump)
  $F50 -> $320 (backward jump)
  $F56 -> $9E1 (backward jump)
  $F6E -> $6A7 (backward jump)
  $F70 -> $6E8 (backward jump)
  $F72 -> $F33 (backward jump)
  $F7E -> $94C (backward jump)
  $F82 -> $472 (backward jump)
  $F88 -> $BFE (backward jump)
  $F96 -> $636 (backward jump)
  $F9C -> $A1E (backward jump)
  $FC8 -> $894 (backward jump)
  $FF0 -> $5D7 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $B11F   JP       V0, $11F        ; Jump to V0 + 11F
$202    $6FCD   LD       VF, #CD         ; Load 205 into VF
$204    $48A7   SNE      V8, #A7         ; Skip if V8 != 167
$206    $55B8   UNKNOWN  $55B8           ; Unknown 5xxx instruction
$208    $8A91   OR       VA, V9          ; VA |= V9
$20A    $7C3E   ADD      VC, #3E         ; Add 62 to VC
$20C    $0AAB   SYS      $AAB            ; System call to AAB
$20E    $3989   SE       V9, #89         ; Skip if V9 == 137
$210    $3CA3   SE       VC, #A3         ; Skip if VC == 163
$212    $9999   UNKNOWN  $9999           ; Unknown 9xxx instruction
$214    $FAC3   UNKNOWN  FAC3            ; Unknown Fxxx instruction
$216    $B17C   JP       V0, $17C        ; Jump to V0 + 17C
$218    $731A   ADD      V3, #1A         ; Add 26 to V3
$21A    $F21E   ADD      I, V2           ; I += V2
$21C    $AC4A   LD       I, $C4A         ; Load C4A into I
$21E    $E158   UNKNOWN  $E158           ; Unknown Exxx instruction
$220    $D82A   DRW      V8, V2, #A      ; Draw 10-byte sprite at V8, V2
$222    $05E3   SYS      $5E3            ; System call to 5E3
$224    $20D3   CALL     $0D3            ; Call subroutine at 0D3
$226    $AAD5   LD       I, $AD5         ; Load AD5 into I
$228    $EF10   UNKNOWN  $EF10           ; Unknown Exxx instruction
$22A    $798F   ADD      V9, #8F         ; Add 143 to V9
$22C    $942D   UNKNOWN  $942D           ; Unknown 9xxx instruction
$22E    $A97D   LD       I, $97D         ; Load 97D into I
$230    $8DE7   SUBN     VD, VE          ; VD = VE - VD, VF = !borrow
$232    $E7F6   UNKNOWN  $E7F6           ; Unknown Exxx instruction
$234    $7FB7   ADD      VF, #B7         ; Add 183 to VF
$236    $266E   CALL     $66E            ; Call subroutine at 66E
$238    $DCE3   DRW      VC, VE, #3      ; Draw 3-byte sprite at VC, VE
$23A    $E4E4   UNKNOWN  $E4E4           ; Unknown Exxx instruction
$23C    $6798   LD       V7, #98         ; Load 152 into V7
$23E    $A0FD   LD       I, $0FD         ; Load 0FD into I
$240    $0F4D   SYS      $F4D            ; System call to F4D
$242    $1ABF   JP       $ABF            ; Jump to ABF
$244    $34A1   SE       V4, #A1         ; Skip if V4 == 161
$246    $9E17   UNKNOWN  $9E17           ; Unknown 9xxx instruction
$248    $09B8   SYS      $9B8            ; System call to 9B8
$24A    $674C   LD       V7, #4C         ; Load 76 into V7
$24C    $DBB9   DRW      VB, VB, #9      ; Draw 9-byte sprite at VB, VB
$24E    $C9D0   RND      V9, #D0         ; V9 = random & D0
$250    $71B1   ADD      V1, #B1         ; Add 177 to V1
$252    $8A6C   UNKNOWN  8A6C            ; Unknown 8xxx instruction
$254    $68DC   LD       V8, #DC         ; Load 220 into V8
$256    $C825   RND      V8, #25         ; V8 = random & 25
$258    $7840   ADD      V8, #40         ; Add 64 to V8
$25A    $F24D   UNKNOWN  F24D            ; Unknown Fxxx instruction
$25C    $0B14   SYS      $B14            ; System call to B14
$25E    $BCBD   JP       V0, $CBD        ; Jump to V0 + CBD
$260    $58C9   UNKNOWN  $58C9           ; Unknown 5xxx instruction
$262    $AA26   LD       I, $A26         ; Load A26 into I
$264    $8D06   SHR      VD              ; VD >>= 1, VF = LSB
$266    $4F48   SNE      VF, #48         ; Skip if VF != 72
$268    $7703   ADD      V7, #03         ; Add 3 to V7
$26A    $6591   LD       V5, #91         ; Load 145 into V5
$26C    $BA84   JP       V0, $A84        ; Jump to V0 + A84
$26E    $0061   SYS      $061            ; System call to 061
$270    $CC18   RND      VC, #18         ; VC = random & 18
$272    $CACA   RND      VA, #CA         ; VA = random & CA
$274    $1F7B   JP       $F7B            ; Jump to F7B
$276    $C640   RND      V6, #40         ; V6 = random & 40
$278    $43E8   SNE      V3, #E8         ; Skip if V3 != 232
$27A    $90AC   UNKNOWN  $90AC           ; Unknown 9xxx instruction
$27C    $C340   RND      V3, #40         ; V3 = random & 40
$27E    $16F1   JP       $6F1            ; Jump to 6F1
$280    $95FD   UNKNOWN  $95FD           ; Unknown 9xxx instruction
$282    $FC5C   UNKNOWN  FC5C            ; Unknown Fxxx instruction
$284    $CB47   RND      VB, #47         ; VB = random & 47
$286    $F846   UNKNOWN  F846            ; Unknown Fxxx instruction
$288    $149F   JP       $49F            ; Jump to 49F
$28A    $C38D   RND      V3, #8D         ; V3 = random & 8D
$28C    $00CD   SYS      $0CD            ; System call to 0CD
$28E    $4E4E   SNE      VE, #4E         ; Skip if VE != 78
$290    $8E04   ADD      VE, V0          ; VE += V0, VF = carry
$292    $530A   UNKNOWN  $530A           ; Unknown 5xxx instruction
$294    $141E   JP       $41E            ; Jump to 41E
$296    $2832   CALL     $832            ; Call subroutine at 832
$298    $3C46   SE       VC, #46         ; Skip if VC == 70
$29A    $505A   UNKNOWN  $505A           ; Unknown 5xxx instruction
$29C    $646E   LD       V4, #6E         ; Load 110 into V4
$29E    $7882   ADD      V8, #82         ; Add 130 to V8
$2A0    $8C96   SHR      VC              ; VC >>= 1, VF = LSB
$2A2    $A0AA   LD       I, $0AA         ; Load 0AA into I
$2A4    $B4BE   JP       V0, $4BE        ; Jump to V0 + 4BE
$2A6    $C8D2   RND      V8, #D2         ; V8 = random & D2
$2A8    $DCE6   DRW      VC, VE, #6      ; Draw 6-byte sprite at VC, VE
$2AA    $F0FA   UNKNOWN  F0FA            ; Unknown Fxxx instruction
$2AC    $040E   SYS      $40E            ; System call to 40E
$2AE    $1822   JP       $822            ; Jump to 822
$2B0    $2C36   CALL     $C36            ; Call subroutine at C36
$2B2    $404A   SNE      V0, #4A         ; Skip if V0 != 74
$2B4    $545E   UNKNOWN  $545E           ; Unknown 5xxx instruction
$2B6    $6872   LD       V8, #72         ; Load 114 into V8
$2B8    $7C86   ADD      VC, #86         ; Add 134 to VC
$2BA    $909A   UNKNOWN  $909A           ; Unknown 9xxx instruction
$2BC    $A4AE   LD       I, $4AE         ; Load 4AE into I
$2BE    $B8C2   JP       V0, $8C2        ; Jump to V0 + 8C2
$2C0    $CCD6   RND      VC, #D6         ; VC = random & D6
$2C2    $E0EA   UNKNOWN  $E0EA           ; Unknown Exxx instruction
$2C4    $F4FE   UNKNOWN  F4FE            ; Unknown Fxxx instruction
$2C6    $0812   SYS      $812            ; System call to 812
$2C8    $1C26   JP       $C26            ; Jump to C26
$2CA    $303A   SE       V0, #3A         ; Skip if V0 == 58
$2CC    $444E   SNE      V4, #4E         ; Skip if V4 != 78
$2CE    $5862   UNKNOWN  $5862           ; Unknown 5xxx instruction
$2D0    $6C76   LD       VC, #76         ; Load 118 into VC
$2D2    $808A   UNKNOWN  808A            ; Unknown 8xxx instruction
$2D4    $949E   UNKNOWN  $949E           ; Unknown 9xxx instruction
$2D6    $A8B2   LD       I, $8B2         ; Load 8B2 into I
$2D8    $BCC6   JP       V0, $CC6        ; Jump to V0 + CC6
$2DA    $D0DA   DRW      V0, VD, #A      ; Draw 10-byte sprite at V0, VD
$2DC    $E4EE   UNKNOWN  $E4EE           ; Unknown Exxx instruction
$2DE    $F802   UNKNOWN  F802            ; Unknown Fxxx instruction
$2E0    $0C16   SYS      $C16            ; System call to C16
$2E2    $202A   CALL     $02A            ; Call subroutine at 02A
$2E4    $343E   SE       V4, #3E         ; Skip if V4 == 62
$2E6    $4852   SNE      V8, #52         ; Skip if V8 != 82
$2E8    $5C66   UNKNOWN  $5C66           ; Unknown 5xxx instruction
$2EA    $707A   ADD      V0, #7A         ; Add 122 to V0
$2EC    $848E   SHL      V4              ; V4 <<= 1, VF = MSB
$2EE    $98A2   UNKNOWN  $98A2           ; Unknown 9xxx instruction
$2F0    $ACB6   LD       I, $CB6         ; Load CB6 into I
$2F2    $C0CA   RND      V0, #CA         ; V0 = random & CA
$2F4    $D4DE   DRW      V4, VD, #E      ; Draw 14-byte sprite at V4, VD
$2F6    $E8F2   UNKNOWN  $E8F2           ; Unknown Exxx instruction
$2F8    $FC06   UNKNOWN  FC06            ; Unknown Fxxx instruction
$2FA    $101A   JP       $01A            ; Jump to 01A
$2FC    $242E   CALL     $42E            ; Call subroutine at 42E
$2FE    $3842   SE       V8, #42         ; Skip if V8 == 66
$300    $4C56   SNE      VC, #56         ; Skip if VC != 86
$302    $606A   LD       V0, #6A         ; Load 106 into V0
$304    $747E   ADD      V4, #7E         ; Add 126 to V4
$306    $8892   AND      V8, V9          ; V8 &= V9
$308    $9CA6   UNKNOWN  $9CA6           ; Unknown 9xxx instruction
$30A    $B0BA   JP       V0, $0BA        ; Jump to V0 + 0BA
$30C    $C4CE   RND      V4, #CE         ; V4 = random & CE
$30E    $D8E2   DRW      V8, VE, #2      ; Draw 2-byte sprite at V8, VE
$310    $EB93   UNKNOWN  $EB93           ; Unknown Exxx instruction
$312    $8A26   SHR      VA              ; VA >>= 1, VF = LSB
$314    $41D2   SNE      V1, #D2         ; Skip if V1 != 210
$316    $6748   LD       V7, #48         ; Load 72 into V7
$318    $3353   SE       V3, #53         ; Skip if V3 == 83
$31A    $D68A   DRW      V6, V8, #A      ; Draw 10-byte sprite at V6, V8
$31C    $B304   JP       V0, $304        ; Jump to V0 + 304
$31E    $F5DC   UNKNOWN  F5DC            ; Unknown Fxxx instruction
$320    $244E   CALL     $44E            ; Call subroutine at 44E
$322    $ADF8   LD       I, $DF8         ; Load DF8 into I
$324    $2F3B   CALL     $F3B            ; Call subroutine at F3B
$326    $2530   CALL     $530            ; Call subroutine at 530
$328    $7681   ADD      V6, #81         ; Add 129 to V6
$32A    $C2A7   RND      V2, #A7         ; V2 = random & A7
$32C    $4AA2   SNE      VA, #A2         ; Skip if VA != 162
$32E    $BBCA   JP       V0, $BCA        ; Jump to V0 + BCA
$330    $B829   JP       V0, $829        ; Jump to V0 + 829
$332    $8C86   SHR      VC              ; VC >>= 1, VF = LSB
$334    $996B   UNKNOWN  $996B           ; Unknown 9xxx instruction
$336    $9B83   UNKNOWN  $9B83           ; Unknown 9xxx instruction
$338    $337D   SE       V3, #7D         ; Skip if V3 == 125
$33A    $5F78   UNKNOWN  $5F78           ; Unknown 5xxx instruction
$33C    $6916   LD       V9, #16         ; Load 22 into V9
$33E    $F422   UNKNOWN  F422            ; Unknown Fxxx instruction
$340    $F51F   UNKNOWN  F51F            ; Unknown Fxxx instruction
$342    $7917   ADD      V9, #17         ; Add 23 to V9
$344    $5392   UNKNOWN  $5392           ; Unknown 5xxx instruction
$346    $45EC   SNE      V5, #EC         ; Skip if V5 != 236
$348    $FF66   UNKNOWN  FF66            ; Unknown Fxxx instruction
$34A    $1C0D   JP       $C0D            ; Jump to C0D
$34C    $45A3   SNE      V5, #A3         ; Skip if V5 != 163
$34E    $EF0C   UNKNOWN  $EF0C           ; Unknown Exxx instruction
$350    $4C12   SNE      VC, #12         ; Skip if VC != 18
$352    $F1B3   UNKNOWN  F1B3            ; Unknown Fxxx instruction
$354    $E21F   UNKNOWN  $E21F           ; Unknown Exxx instruction
$356    $AD8F   LD       I, $D8F         ; Load D8F into I
$358    $16DC   JP       $6DC            ; Jump to 6DC
$35A    $50D4   UNKNOWN  $50D4           ; Unknown 5xxx instruction
$35C    $701A   ADD      V0, #1A         ; Add 26 to V0
$35E    $63BB   LD       V3, #BB         ; Load 187 into V3
$360    $583A   UNKNOWN  $583A           ; Unknown 5xxx instruction
$362    $D3BC   DRW      V3, VB, #C      ; Draw 12-byte sprite at V3, VB
$364    $F9B7   UNKNOWN  F9B7            ; Unknown Fxxx instruction
$366    $1A7F   JP       $A7F            ; Jump to A7F
$368    $96EF   UNKNOWN  $96EF           ; Unknown 9xxx instruction
$36A    $17E8   JP       $7E8            ; Jump to 7E8
$36C    $A24D   LD       I, $24D         ; Load 24D into I
$36E    $5084   UNKNOWN  $5084           ; Unknown 5xxx instruction
$370    $89BE   SHL      V9              ; V9 <<= 1, VF = MSB
$372    $28AD   CALL     $8AD            ; Call subroutine at 8AD
$374    $F37F   UNKNOWN  F37F            ; Unknown Fxxx instruction
$376    $6E26   LD       VE, #26         ; Load 38 into VE
$378    $CF5F   RND      VF, #5F         ; VF = random & 5F
$37A    $8B99   UNKNOWN  8B99            ; Unknown 8xxx instruction
$37C    $9C29   UNKNOWN  $9C29           ; Unknown 9xxx instruction
$37E    $B95C   JP       V0, $95C        ; Jump to V0 + 95C
$380    $04EC   SYS      $4EC            ; System call to 4EC
$382    $0F0A   SYS      $F0A            ; System call to F0A
$384    $EFD7   UNKNOWN  $EFD7           ; Unknown Exxx instruction
$386    $F5C9   UNKNOWN  F5C9            ; Unknown Fxxx instruction
$388    $9CCE   UNKNOWN  $9CCE           ; Unknown 9xxx instruction
$38A    $D384   DRW      V3, V8, #4      ; Draw 4-byte sprite at V3, V8
$38C    $3842   SE       V8, #42         ; Skip if V8 == 66
$38E    $DAA4   DRW      VA, VA, #4      ; Draw 4-byte sprite at VA, VA
$390    $7E56   ADD      VE, #56         ; Add 86 to VE
$392    $6668   LD       V6, #68         ; Load 104 into V6
$394    $A78B   LD       I, $78B         ; Load 78B into I
$396    $A201   LD       I, $201         ; Load 201 into I
$398    $7CF9   ADD      VC, #F9         ; Add 249 to VC
$39A    $12B0   JP       $2B0            ; Jump to 2B0
$39C    $B91B   JP       V0, $91B        ; Jump to V0 + 91B
$39E    $D1E2   DRW      V1, VE, #2      ; Draw 2-byte sprite at V1, VE
$3A0    $CE2F   RND      VE, #2F         ; VE = random & 2F
$3A2    $77F3   ADD      V7, #F3         ; Add 243 to V7
$3A4    $8717   SUBN     V7, V1          ; V7 = V1 - V7, VF = !borrow
$3A6    $C9A2   RND      V9, #A2         ; V9 = random & A2
$3A8    $0547   SYS      $547            ; System call to 547
$3AA    $CB4C   RND      VB, #4C         ; VB = random & 4C
$3AC    $6630   LD       V6, #30         ; Load 48 into V6
$3AE    $7CE3   ADD      VC, #E3         ; Add 227 to VC
$3B0    $CE4B   RND      VE, #4B         ; VE = random & 4B
$3B2    $21AE   CALL     $1AE            ; Call subroutine at 1AE
$3B4    $EA88   UNKNOWN  $EA88           ; Unknown Exxx instruction
$3B6    $746B   ADD      V4, #6B         ; Add 107 to V4
$3B8    $2E32   CALL     $E32            ; Call subroutine at E32
$3BA    $5B45   UNKNOWN  $5B45           ; Unknown 5xxx instruction
$3BC    $5AD4   UNKNOWN  $5AD4           ; Unknown 5xxx instruction
$3BE    $4506   SNE      V5, #06         ; Skip if V5 != 6
$3C0    $5E42   UNKNOWN  $5E42           ; Unknown 5xxx instruction
$3C2    $4CA1   SNE      VC, #A1         ; Skip if VC != 161
$3C4    $A307   LD       I, $307         ; Load 307 into I
$3C6    $924E   UNKNOWN  $924E           ; Unknown 9xxx instruction
$3C8    $C8B7   RND      V8, #B7         ; V8 = random & B7
$3CA    $3006   SE       V0, #06         ; Skip if V0 == 6
$3CC    $1348   JP       $348            ; Jump to 348
$3CE    $7087   ADD      V0, #87         ; Add 135 to V0
$3D0    $84B9   UNKNOWN  84B9            ; Unknown 8xxx instruction
$3D2    $9175   UNKNOWN  $9175           ; Unknown 9xxx instruction
$3D4    $9E64   UNKNOWN  $9E64           ; Unknown 9xxx instruction
$3D6    $03FC   SYS      $3FC            ; System call to 3FC
$3D8    $6253   LD       V2, #53         ; Load 83 into V2
$3DA    $6A06   LD       VA, #06         ; Load 6 into VA
$3DC    $25C8   CALL     $5C8            ; Call subroutine at 5C8
$3DE    $4864   SNE      V8, #64         ; Skip if V8 != 100
$3E0    $CE2E   RND      VE, #2E         ; VE = random & 2E
$3E2    $BFED   JP       V0, $FED        ; Jump to V0 + FED
$3E4    $C521   RND      V5, #21         ; V5 = random & 21
$3E6    $7598   ADD      V5, #98         ; Add 152 to V5
$3E8    $4F70   SNE      VF, #70         ; Skip if VF != 112
$3EA    $0A62   SYS      $A62            ; System call to A62
$3EC    $E5C4   UNKNOWN  $E5C4           ; Unknown Exxx instruction
$3EE    $5388   UNKNOWN  $5388           ; Unknown 5xxx instruction
$3F0    $A107   LD       I, $107         ; Load 107 into I
$3F2    $30D3   SE       V0, #D3         ; Skip if V0 == 211
$3F4    $4977   SNE      V9, #77         ; Skip if V9 != 119
$3F6    $3E95   SE       VE, #95         ; Skip if VE == 149
$3F8    $A20C   LD       I, $20C         ; Load 20C into I
$3FA    $DEF2   DRW      VE, VF, #2      ; Draw 2-byte sprite at VE, VF
$3FC    $91C7   UNKNOWN  $91C7           ; Unknown 9xxx instruction
$3FE    $2ADB   CALL     $ADB            ; Call subroutine at ADB
$400    $0CF0   SYS      $CF0            ; System call to CF0
$402    $A5F0   LD       I, $5F0         ; Load 5F0 into I
$404    $5571   UNKNOWN  $5571           ; Unknown 5xxx instruction
$406    $77E9   ADD      V7, #E9         ; Add 233 to V7
$408    $B28F   JP       V0, $28F        ; Jump to V0 + 28F
$40A    $4491   SNE      V4, #91         ; Skip if V4 != 145
$40C    $1B80   JP       $B80            ; Jump to B80
$40E    $01EE   SYS      $1EE            ; System call to 1EE
$410    $2516   CALL     $516            ; Call subroutine at 516
$412    $89EC   UNKNOWN  89EC            ; Unknown 8xxx instruction
$414    $8AFE   SHL      VA              ; VA <<= 1, VF = MSB
$416    $C49D   RND      V4, #9D         ; V4 = random & 9D
$418    $20F8   CALL     $0F8            ; Call subroutine at 0F8
$41A    $6045   LD       V0, #45         ; Load 69 into V0
$41C    $BAC6   JP       V0, $AC6        ; Jump to V0 + AC6
$41E    $454F   SNE      V5, #4F         ; Skip if V5 != 79
$420    $C4D8   RND      V4, #D8         ; V4 = random & D8
$422    $68F4   LD       V8, #F4         ; Load 244 into V8
$424    $9037   UNKNOWN  $9037           ; Unknown 9xxx instruction
$426    $5460   SE       V4, V6          ; Skip if V4 == V6
$428    $E381   UNKNOWN  $E381           ; Unknown Exxx instruction
$42A    $1C29   JP       $C29            ; Jump to C29
$42C    $B7C1   JP       V0, $7C1        ; Jump to V0 + 7C1
$42E    $83A9   UNKNOWN  83A9            ; Unknown 8xxx instruction
$430    $2651   CALL     $651            ; Call subroutine at 651
$432    $DB0F   DRW      VB, V0, #F      ; Draw 15-byte sprite at VB, V0
$434    $B06F   JP       V0, $06F        ; Jump to V0 + 06F
$436    $A530   LD       I, $530         ; Load 530 into I
$438    $B565   JP       V0, $565        ; Jump to V0 + 565
$43A    $69F5   LD       V9, #F5         ; Load 245 into V9
$43C    $D6BA   DRW      V6, VB, #A      ; Draw 10-byte sprite at V6, VB
$43E    $0119   SYS      $119            ; System call to 119
$440    $C355   RND      V3, #55         ; V3 = random & 55
$442    $0F00   SYS      $F00            ; System call to F00
$444    $9C23   UNKNOWN  $9C23           ; Unknown 9xxx instruction
$446    $BAC6   JP       V0, $AC6        ; Jump to V0 + AC6
$448    $9EB7   UNKNOWN  $9EB7           ; Unknown 9xxx instruction
$44A    $9591   UNKNOWN  $9591           ; Unknown 9xxx instruction
$44C    $9BE1   UNKNOWN  $9BE1           ; Unknown 9xxx instruction
$44E    $256C   CALL     $56C            ; Call subroutine at 56C
$450    $EB28   UNKNOWN  $EB28           ; Unknown Exxx instruction
$452    $8DCD   UNKNOWN  8DCD            ; Unknown 8xxx instruction
$454    $F343   UNKNOWN  F343            ; Unknown Fxxx instruction
$456    $4956   SNE      V9, #56         ; Skip if V9 != 86
$458    $E253   UNKNOWN  $E253           ; Unknown Exxx instruction
$45A    $511B   UNKNOWN  $511B           ; Unknown 5xxx instruction
$45C    $E06C   UNKNOWN  $E06C           ; Unknown Exxx instruction
$45E    $DD0A   DRW      VD, V0, #A      ; Draw 10-byte sprite at VD, V0
$460    $F137   UNKNOWN  F137            ; Unknown Fxxx instruction
$462    $CFDF   RND      VF, #DF         ; VF = random & DF
$464    $DF91   DRW      VF, V9, #1      ; Draw 1-byte sprite at VF, V9
$466    $F06C   UNKNOWN  F06C            ; Unknown Fxxx instruction
$468    $5CE7   UNKNOWN  $5CE7           ; Unknown 5xxx instruction
$46A    $DD05   DRW      VD, V0, #5      ; Draw 5-byte sprite at VD, V0
$46C    $1F63   JP       $F63            ; Jump to F63
$46E    $3038   SE       V0, #38         ; Skip if V0 == 56
$470    $9B05   UNKNOWN  $9B05           ; Unknown 9xxx instruction
$472    $617B   LD       V1, #7B         ; Load 123 into V1
$474    $C1B1   RND      V1, #B1         ; V1 = random & B1
$476    $471C   SNE      V7, #1C         ; Skip if V7 != 28
$478    $3106   SE       V1, #06         ; Skip if V1 == 6
$47A    $CB96   RND      VB, #96         ; VB = random & 96
$47C    $896C   UNKNOWN  896C            ; Unknown 8xxx instruction
$47E    $E9D6   UNKNOWN  $E9D6           ; Unknown Exxx instruction
$480    $0A40   SYS      $A40            ; System call to A40
$482    $8AA4   ADD      VA, VA          ; VA += VA, VF = carry
$484    $30CB   SE       V0, #CB         ; Skip if V0 == 203
$486    $D9C1   DRW      V9, VC, #1      ; Draw 1-byte sprite at V9, VC
$488    $B6B6   JP       V0, $6B6        ; Jump to V0 + 6B6
$48A    $143D   JP       $43D            ; Jump to 43D
$48C    $950F   UNKNOWN  $950F           ; Unknown 9xxx instruction
$48E    $1822   JP       $822            ; Jump to 822
$490    $4E29   SNE      VE, #29         ; Skip if VE != 41
$492    $9FD9   UNKNOWN  $9FD9           ; Unknown 9xxx instruction
$494    $8E36   SHR      VE              ; VE >>= 1, VF = LSB
$496    $0291   SYS      $291            ; System call to 291
$498    $5C60   SE       VC, V6          ; Skip if VC == V6
$49A    $AD73   LD       I, $D73         ; Load D73 into I
$49C    $D9FA   DRW      V9, VF, #A      ; Draw 10-byte sprite at V9, VF
$49E    $B394   JP       V0, $394        ; Jump to V0 + 394
$4A0    $EAF0   UNKNOWN  $EAF0           ; Unknown Exxx instruction
$4A2    $F445   UNKNOWN  F445            ; Unknown Fxxx instruction
$4A4    $2999   CALL     $999            ; Call subroutine at 999
$4A6    $9E56   UNKNOWN  $9E56           ; Unknown 9xxx instruction
$4A8    $925A   UNKNOWN  $925A           ; Unknown 9xxx instruction
$4AA    $262B   CALL     $62B            ; Call subroutine at 62B
$4AC    $EC89   UNKNOWN  $EC89           ; Unknown Exxx instruction
$4AE    $F08F   UNKNOWN  F08F            ; Unknown Fxxx instruction
$4B0    $CECC   RND      VE, #CC         ; VE = random & CC
$4B2    $EB37   UNKNOWN  $EB37           ; Unknown Exxx instruction
$4B4    $779B   ADD      V7, #9B         ; Add 155 to V7
$4B6    $F6C9   UNKNOWN  F6C9            ; Unknown Fxxx instruction
$4B8    $5824   UNKNOWN  $5824           ; Unknown 5xxx instruction
$4BA    $25D0   CALL     $5D0            ; Call subroutine at 5D0
$4BC    $E9C5   UNKNOWN  $E9C5           ; Unknown Exxx instruction
$4BE    $D656   DRW      V6, V5, #6      ; Draw 6-byte sprite at V6, V5
$4C0    $6143   LD       V1, #43         ; Load 67 into V1
$4C2    $313F   SE       V1, #3F         ; Skip if V1 == 63
$4C4    $FFF2   UNKNOWN  FFF2            ; Unknown Fxxx instruction
$4C6    $73AA   ADD      V3, #AA         ; Add 170 to V3
$4C8    $8CD1   OR       VC, VD          ; VC |= VD
$4CA    $783E   ADD      V8, #3E         ; Add 62 to V8
$4CC    $038E   SYS      $38E            ; System call to 38E
$4CE    $8AE1   OR       VA, VE          ; VA |= VE
$4D0    $729E   ADD      V2, #9E         ; Add 158 to V2
$4D2    $6248   LD       V2, #48         ; Load 72 into V2
$4D4    $D9DC   DRW      V9, VD, #C      ; Draw 12-byte sprite at V9, VD
$4D6    $DEA8   DRW      VE, VA, #8      ; Draw 8-byte sprite at VE, VA
$4D8    $DA76   DRW      VA, V7, #6      ; Draw 6-byte sprite at VA, V7
$4DA    $C14F   RND      V1, #4F         ; V1 = random & 4F
$4DC    $CE2C   RND      VE, #2C         ; VE = random & 2C
$4DE    $B81D   JP       V0, $81D        ; Jump to V0 + 81D
$4E0    $D6B2   DRW      V6, VB, #2      ; Draw 2-byte sprite at V6, VB
$4E2    $C317   RND      V3, #17         ; V3 = random & 17
$4E4    $2E2B   CALL     $E2B            ; Call subroutine at E2B
$4E6    $C6E4   RND      V6, #E4         ; V6 = random & E4
$4E8    $CB56   RND      VB, #56         ; VB = random & 56
$4EA    $4CC6   SNE      VC, #C6         ; Skip if VC != 198
$4EC    $E96A   UNKNOWN  $E96A           ; Unknown Exxx instruction
$4EE    $AE00   LD       I, $E00         ; Load E00 into I
$4F0    $09DE   SYS      $9DE            ; System call to 9DE
$4F2    $A889   LD       I, $889         ; Load 889 into I
$4F4    $3D39   SE       VD, #39         ; Skip if VD == 57
$4F6    $DFC9   DRW      VF, VC, #9      ; Draw 9-byte sprite at VF, VC
$4F8    $D2D5   DRW      V2, VD, #5      ; Draw 5-byte sprite at V2, VD
$4FA    $EDA2   UNKNOWN  $EDA2           ; Unknown Exxx instruction
$4FC    $3D00   SE       VD, #00         ; Skip if VD == 0
$4FE    $DC6F   DRW      VC, V6, #F      ; Draw 15-byte sprite at VC, V6
$500    $BBE1   JP       V0, $BE1        ; Jump to V0 + BE1
$502    $F784   UNKNOWN  F784            ; Unknown Fxxx instruction
$504    $7A9D   ADD      VA, #9D         ; Add 157 to VA
$506    $87E5   SUB      V7, VE          ; V7 -= VE, VF = !borrow
$508    $C1C3   RND      V1, #C3         ; V1 = random & C3
$50A    $1C78   JP       $C78            ; Jump to C78
$50C    $B90C   JP       V0, $90C        ; Jump to V0 + 90C
$50E    $E878   UNKNOWN  $E878           ; Unknown Exxx instruction
$510    $8B99   UNKNOWN  8B99            ; Unknown 8xxx instruction
$512    $10AE   JP       $0AE            ; Jump to 0AE
$514    $8FC0   LD       VF, VC          ; VF = VC
$516    $DB0D   DRW      VB, V0, #D      ; Draw 13-byte sprite at VB, V0
$518    $4C94   SNE      VC, #94         ; Skip if VC != 148
$51A    $BE6A   JP       V0, $E6A        ; Jump to V0 + E6A
$51C    $1B14   JP       $B14            ; Jump to B14
$51E    $2DCC   CALL     $DCC            ; Call subroutine at DCC
$520    $698A   LD       V9, #8A         ; Load 138 into V9
$522    $AEF5   LD       I, $EF5         ; Load EF5 into I
$524    $0793   SYS      $793            ; System call to 793
$526    $F9E5   UNKNOWN  F9E5            ; Unknown Fxxx instruction
$528    $E727   UNKNOWN  $E727           ; Unknown Exxx instruction
$52A    $740E   ADD      V4, #0E         ; Add 14 to V4
$52C    $F24F   UNKNOWN  F24F            ; Unknown Fxxx instruction
$52E    $0C2B   SYS      $C2B            ; System call to C2B
$530    $F75D   UNKNOWN  F75D            ; Unknown Fxxx instruction
$532    $5580   SE       V5, V8          ; Skip if V5 == V8
$534    $1E61   JP       $E61            ; Jump to E61
$536    $79E7   ADD      V9, #E7         ; Add 231 to V9
$538    $7000   ADD      V0, #00         ; Add 0 to V0
$53A    $6E30   LD       VE, #30         ; Load 48 into VE
$53C    $B2D4   JP       V0, $2D4        ; Jump to V0 + 2D4
$53E    $D88F   DRW      V8, V8, #F      ; Draw 15-byte sprite at V8, V8
$540    $D211   DRW      V2, V1, #1      ; Draw 1-byte sprite at V2, V1
$542    $17A3   JP       $7A3            ; Jump to 7A3
$544    $0B76   SYS      $B76            ; System call to B76
$546    $3E5E   SE       VE, #5E         ; Skip if VE == 94
$548    $5DC5   UNKNOWN  $5DC5           ; Unknown 5xxx instruction
$54A    $6036   LD       V0, #36         ; Load 54 into V0
$54C    $D902   DRW      V9, V0, #2      ; Draw 2-byte sprite at V9, V0
$54E    $A800   LD       I, $800         ; Load 800 into I
$550    $551C   UNKNOWN  $551C           ; Unknown 5xxx instruction
$552    $95FB   UNKNOWN  $95FB           ; Unknown 9xxx instruction
$554    $A6C0   LD       I, $6C0         ; Load 6C0 into I
$556    $B5E5   JP       V0, $5E5        ; Jump to V0 + 5E5
$558    $B076   JP       V0, $076        ; Jump to V0 + 076
$55A    $8917   SUBN     V9, V1          ; V9 = V1 - V9, VF = !borrow
$55C    $EB3B   UNKNOWN  $EB3B           ; Unknown Exxx instruction
$55E    $5242   UNKNOWN  $5242           ; Unknown 5xxx instruction
$560    $A162   LD       I, $162         ; Load 162 into I
$562    $B3FF   JP       V0, $3FF        ; Jump to V0 + 3FF
$564    $F6C5   UNKNOWN  F6C5            ; Unknown Fxxx instruction
$566    $A166   LD       I, $166         ; Load 166 into I
$568    $7129   ADD      V1, #29         ; Add 41 to V1
$56A    $CDA9   RND      VD, #A9         ; VD = random & A9
$56C    $3FF7   SE       VF, #F7         ; Skip if VF == 247
$56E    $7F1B   ADD      VF, #1B         ; Add 27 to VF
$570    $A308   LD       I, $308         ; Load 308 into I
$572    $2B41   CALL     $B41            ; Call subroutine at B41
$574    $38F5   SE       V8, #F5         ; Skip if V8 == 245
$576    $C0F3   RND      V0, #F3         ; V0 = random & F3
$578    $40CE   SNE      V0, #CE         ; Skip if V0 != 206
$57A    $65FE   LD       V5, #FE         ; Load 254 into V5
$57C    $ECE9   UNKNOWN  $ECE9           ; Unknown Exxx instruction
$57E    $974A   UNKNOWN  $974A           ; Unknown 9xxx instruction
$580    $C74B   RND      V7, #4B         ; V7 = random & 4B
$582    $7C9D   ADD      VC, #9D         ; Add 157 to VC
$584    $D385   DRW      V3, V8, #5      ; Draw 5-byte sprite at V3, V8
$586    $50C5   UNKNOWN  $50C5           ; Unknown 5xxx instruction
$588    $D781   DRW      V7, V8, #1      ; Draw 1-byte sprite at V7, V8
$58A    $36A0   SE       V6, #A0         ; Skip if V6 == 160
$58C    $2023   CALL     $023            ; Call subroutine at 023
$58E    $2054   CALL     $054            ; Call subroutine at 054
$590    $3956   SE       V9, #56         ; Skip if V9 == 86
$592    $E3D1   UNKNOWN  $E3D1           ; Unknown Exxx instruction
$594    $BFD8   JP       V0, $FD8        ; Jump to V0 + FD8
$596    $08FB   SYS      $8FB            ; System call to 8FB
$598    $5D4F   UNKNOWN  $5D4F           ; Unknown 5xxx instruction
$59A    $A440   LD       I, $440         ; Load 440 into I
$59C    $CE21   RND      VE, #21         ; VE = random & 21
$59E    $04D3   SYS      $4D3            ; System call to 4D3
$5A0    $F0CB   UNKNOWN  F0CB            ; Unknown Fxxx instruction
$5A2    $D6EA   DRW      V6, VE, #A      ; Draw 10-byte sprite at V6, VE
$5A4    $37FE   SE       V7, #FE         ; Skip if V7 == 254
$5A6    $B220   JP       V0, $220        ; Jump to V0 + 220
$5A8    $BBD8   JP       V0, $BD8        ; Jump to V0 + BD8
$5AA    $E64F   UNKNOWN  $E64F           ; Unknown Exxx instruction
$5AC    $24DD   CALL     $4DD            ; Call subroutine at 4DD
$5AE    $F719   UNKNOWN  F719            ; Unknown Fxxx instruction
$5B0    $79C1   ADD      V9, #C1         ; Add 193 to V9
$5B2    $E935   UNKNOWN  $E935           ; Unknown Exxx instruction
$5B4    $85C5   SUB      V5, VC          ; V5 -= VC, VF = !borrow
$5B6    $E58F   UNKNOWN  $E58F           ; Unknown Exxx instruction
$5B8    $D05C   DRW      V0, V5, #C      ; Draw 12-byte sprite at V0, V5
$5BA    $366A   SE       V6, #6A         ; Skip if V6 == 106
$5BC    $1F75   JP       $F75            ; Jump to F75
$5BE    $5594   UNKNOWN  $5594           ; Unknown 5xxx instruction
$5C0    $339B   SE       V3, #9B         ; Skip if V3 == 155
$5C2    $1DF0   JP       $DF0            ; Jump to DF0
$5C4    $845D   UNKNOWN  845D            ; Unknown 8xxx instruction
$5C6    $8A38   UNKNOWN  8A38            ; Unknown 8xxx instruction
$5C8    $C6F0   RND      V6, #F0         ; V6 = random & F0
$5CA    $129B   JP       $29B            ; Jump to 29B
$5CC    $A7FF   LD       I, $7FF         ; Load 7FF into I
$5CE    $E8DE   UNKNOWN  $E8DE           ; Unknown Exxx instruction
$5D0    $9661   UNKNOWN  $9661           ; Unknown 9xxx instruction
$5D2    $5A9D   UNKNOWN  $5A9D           ; Unknown 5xxx instruction
$5D4    $002C   SYS      $02C            ; System call to 02C
$5D6    $F8E0   UNKNOWN  F8E0            ; Unknown Fxxx instruction
$5D8    $C406   RND      V4, #06         ; V4 = random & 06
$5DA    $C784   RND      V7, #84         ; V7 = random & 84
$5DC    $922B   UNKNOWN  $922B           ; Unknown 9xxx instruction
$5DE    $3E3C   SE       VE, #3C         ; Skip if VE == 60
$5E0    $4BD3   SNE      VB, #D3         ; Skip if VB != 211
$5E2    $7C89   ADD      VC, #89         ; Add 137 to VC
$5E4    $C3F0   RND      V3, #F0         ; V3 = random & F0
$5E6    $A548   LD       I, $548         ; Load 548 into I
$5E8    $3B68   SE       VB, #68         ; Skip if VB == 104
$5EA    $8813   XOR      V8, V1          ; V8 ^= V1
$5EC    $A063   LD       I, $063         ; Load 063 into I
$5EE    $F141   UNKNOWN  F141            ; Unknown Fxxx instruction
$5F0    $FDD1   UNKNOWN  FDD1            ; Unknown Fxxx instruction
$5F2    $B5E5   JP       V0, $5E5        ; Jump to V0 + 5E5
$5F4    $D648   DRW      V6, V4, #8      ; Draw 8-byte sprite at V6, V4
$5F6    $BFFC   JP       V0, $FFC        ; Jump to V0 + FFC
$5F8    $B7C8   JP       V0, $7C8        ; Jump to V0 + 7C8
$5FA    $3721   SE       V7, #21         ; Skip if V7 == 33
$5FC    $2BCC   CALL     $BCC            ; Call subroutine at BCC
$5FE    $6895   LD       V8, #95         ; Load 149 into V8
$600    $0421   SYS      $421            ; System call to 421
$602    $5785   UNKNOWN  $5785           ; Unknown 5xxx instruction
$604    $8DC9   UNKNOWN  8DC9            ; Unknown 8xxx instruction
$606    $4A4C   SNE      VA, #4C         ; Skip if VA != 76
$608    $3DDD   SE       VD, #DD         ; Skip if VD == 221
$60A    $0404   SYS      $404            ; System call to 404
$60C    $B190   JP       V0, $190        ; Jump to V0 + 190
$60E    $7A4A   ADD      VA, #4A         ; Add 74 to VA
$610    $8B01   OR       VB, V0          ; VB |= V0
$612    $52FD   UNKNOWN  $52FD           ; Unknown 5xxx instruction
$614    $71EF   ADD      V1, #EF         ; Add 239 to V1
$616    $80D3   XOR      V0, VD          ; V0 ^= VD
$618    $3057   SE       V0, #57         ; Skip if V0 == 87
$61A    $0A3F   SYS      $A3F            ; System call to A3F
$61C    $1445   JP       $445            ; Jump to 445
$61E    $95F9   UNKNOWN  $95F9           ; Unknown 9xxx instruction
$620    $AE98   LD       I, $E98         ; Load E98 into I
$622    $8B29   UNKNOWN  8B29            ; Unknown 8xxx instruction
$624    $C2F3   RND      V2, #F3         ; V2 = random & F3
$626    $3CDA   SE       VC, #DA         ; Skip if VC == 218
$628    $13D9   JP       $3D9            ; Jump to 3D9
$62A    $F04A   UNKNOWN  F04A            ; Unknown Fxxx instruction
$62C    $D9A8   DRW      V9, VA, #8      ; Draw 8-byte sprite at V9, VA
$62E    $8B55   SUB      VB, V5          ; VB -= V5, VF = !borrow
$630    $C726   RND      V7, #26         ; V7 = random & 26
$632    $FDC8   UNKNOWN  FDC8            ; Unknown Fxxx instruction
$634    $3F45   SE       VF, #45         ; Skip if VF == 69
$636    $880A   UNKNOWN  880A            ; Unknown 8xxx instruction
$638    $16EB   JP       $6EB            ; Jump to 6EB
$63A    $8242   AND      V2, V4          ; V2 &= V4
$63C    $C5A5   RND      V5, #A5         ; V5 = random & A5
$63E    $E163   UNKNOWN  $E163           ; Unknown Exxx instruction
$640    $543E   UNKNOWN  $543E           ; Unknown 5xxx instruction
$642    $C332   RND      V3, #32         ; V3 = random & 32
$644    $DFD4   DRW      VF, VD, #4      ; Draw 4-byte sprite at VF, VD
$646    $EA52   UNKNOWN  $EA52           ; Unknown Exxx instruction
$648    $5EB0   SE       VE, VB          ; Skip if VE == VB
$64A    $EAF3   UNKNOWN  $EAF3           ; Unknown Exxx instruction
$64C    $AD1F   LD       I, $D1F         ; Load D1F into I
$64E    $0FBA   SYS      $FBA            ; System call to FBA
$650    $EEA1   SKNP     VE              ; Skip if key VE not pressed
$652    $BE0C   JP       V0, $E0C        ; Jump to V0 + E0C
$654    $47FF   SNE      V7, #FF         ; Skip if V7 != 255
$656    $4A75   SNE      VA, #75         ; Skip if VA != 117
$658    $663E   LD       V6, #3E         ; Load 62 into V6
$65A    $8887   SUBN     V8, V8          ; V8 = V8 - V8, VF = !borrow
$65C    $5EBF   UNKNOWN  $5EBF           ; Unknown 5xxx instruction
$65E    $3FB0   SE       VF, #B0         ; Skip if VF == 176
$660    $0769   SYS      $769            ; System call to 769
$662    $99C8   UNKNOWN  $99C8           ; Unknown 9xxx instruction
$664    $5055   UNKNOWN  $5055           ; Unknown 5xxx instruction
$666    $3745   SE       V7, #45         ; Skip if V7 == 69
$668    $C1DB   RND      V1, #DB         ; V1 = random & DB
$66A    $5192   UNKNOWN  $5192           ; Unknown 5xxx instruction
$66C    $B6C8   JP       V0, $6C8        ; Jump to V0 + 6C8
$66E    $3916   SE       V9, #16         ; Skip if V9 == 22
$670    $0530   SYS      $530            ; System call to 530
$672    $3CCB   SE       VC, #CB         ; Skip if VC == 203
$674    $4679   SNE      V6, #79         ; Skip if V6 != 121
$676    $F464   UNKNOWN  F464            ; Unknown Fxxx instruction
$678    $BEB5   JP       V0, $EB5        ; Jump to V0 + EB5
$67A    $6A7E   LD       VA, #7E         ; Load 126 into VA
$67C    $CE43   RND      VE, #43         ; VE = random & 43
$67E    $13E5   JP       $3E5            ; Jump to 3E5
$680    $FFD3   UNKNOWN  FFD3            ; Unknown Fxxx instruction
$682    $D94C   DRW      V9, V4, #C      ; Draw 12-byte sprite at V9, V4
$684    $CE37   RND      VE, #37         ; VE = random & 37
$686    $38ED   SE       V8, #ED         ; Skip if V8 == 237
$688    $73FD   ADD      V3, #FD         ; Add 253 to V3
$68A    $5713   UNKNOWN  $5713           ; Unknown 5xxx instruction
$68C    $D50D   DRW      V5, V0, #D      ; Draw 13-byte sprite at V5, V0
$68E    $102F   JP       $02F            ; Jump to 02F
$690    $1D3E   JP       $D3E            ; Jump to D3E
$692    $FCEB   UNKNOWN  FCEB            ; Unknown Fxxx instruction
$694    $895A   UNKNOWN  895A            ; Unknown 8xxx instruction
$696    $A82C   LD       I, $82C         ; Load 82C into I
$698    $C4A2   RND      V4, #A2         ; V4 = random & A2
$69A    $3278   SE       V2, #78         ; Skip if V2 == 120
$69C    $D23C   DRW      V2, V3, #C      ; Draw 12-byte sprite at V2, V3
$69E    $12DB   JP       $2DB            ; Jump to 2DB
$6A0    $7A60   ADD      VA, #60         ; Add 96 to VA
$6A2    $C5F1   RND      V5, #F1         ; V5 = random & F1
$6A4    $A9A4   LD       I, $9A4         ; Load 9A4 into I
$6A6    $066D   SYS      $66D            ; System call to 66D
$6A8    $96CD   UNKNOWN  $96CD           ; Unknown 9xxx instruction
$6AA    $488F   SNE      V8, #8F         ; Skip if V8 != 143
$6AC    $840D   UNKNOWN  840D            ; Unknown 8xxx instruction
$6AE    $F8CB   UNKNOWN  F8CB            ; Unknown Fxxx instruction
$6B0    $34C7   SE       V4, #C7         ; Skip if V4 == 199
$6B2    $DC33   DRW      VC, V3, #3      ; Draw 3-byte sprite at VC, V3
$6B4    $EE3C   UNKNOWN  $EE3C           ; Unknown Exxx instruction
$6B6    $79A6   ADD      V9, #A6         ; Add 166 to V9
$6B8    $2700   CALL     $700            ; Call subroutine at 700
$6BA    $F6FC   UNKNOWN  F6FC            ; Unknown Fxxx instruction
$6BC    $DC06   DRW      VC, V0, #6      ; Draw 6-byte sprite at VC, V0
$6BE    $B926   JP       V0, $926        ; Jump to V0 + 926
$6C0    $5803   UNKNOWN  $5803           ; Unknown 5xxx instruction
$6C2    $A181   LD       I, $181         ; Load 181 into I
$6C4    $3A5E   SE       VA, #5E         ; Skip if VA == 94
$6C6    $2AE9   CALL     $AE9            ; Call subroutine at AE9
$6C8    $2EEF   CALL     $EEF            ; Call subroutine at EEF
$6CA    $55B5   UNKNOWN  $55B5           ; Unknown 5xxx instruction
$6CC    $D66F   DRW      V6, V6, #F      ; Draw 15-byte sprite at V6, V6
$6CE    $1634   JP       $634            ; Jump to 634
$6D0    $D6DE   DRW      V6, VD, #E      ; Draw 14-byte sprite at V6, VD
$6D2    $6D56   LD       VD, #56         ; Load 86 into VD
$6D4    $0D6D   SYS      $D6D            ; System call to D6D
$6D6    $AE3C   LD       I, $E3C         ; Load E3C into I
$6D8    $0060   SYS      $060            ; System call to 060
$6DA    $C3C3   RND      V3, #C3         ; V3 = random & C3
$6DC    $9D08   UNKNOWN  $9D08           ; Unknown 9xxx instruction
$6DE    $2650   CALL     $650            ; Call subroutine at 650
$6E0    $E6E5   UNKNOWN  $E6E5           ; Unknown Exxx instruction
$6E2    $FDA4   UNKNOWN  FDA4            ; Unknown Fxxx instruction
$6E4    $B3E0   JP       V0, $3E0        ; Jump to V0 + 3E0
$6E6    $CB20   RND      VB, #20         ; VB = random & 20
$6E8    $0F07   SYS      $F07            ; System call to F07
$6EA    $6AC2   LD       VA, #C2         ; Load 194 into VA
$6EC    $46CA   SNE      V6, #CA         ; Skip if V6 != 202
$6EE    $27BD   CALL     $7BD            ; Call subroutine at 7BD
$6F0    $30E2   SE       V0, #E2         ; Skip if V0 == 226
$6F2    $BFEA   JP       V0, $FEA        ; Jump to V0 + FEA
$6F4    $698C   LD       V9, #8C         ; Load 140 into V9
$6F6    $4E48   SNE      VE, #48         ; Skip if VE != 72
$6F8    $BE4E   JP       V0, $E4E        ; Jump to V0 + E4E
$6FA    $A4E5   LD       I, $4E5         ; Load 4E5 into I
$6FC    $0958   SYS      $958            ; System call to 958
$6FE    $FE66   UNKNOWN  FE66            ; Unknown Fxxx instruction
$700    $BB7F   JP       V0, $B7F        ; Jump to V0 + B7F
$702    $F1EC   UNKNOWN  F1EC            ; Unknown Fxxx instruction
$704    $348B   SE       V4, #8B         ; Skip if V4 == 139
$706    $83BA   UNKNOWN  83BA            ; Unknown 8xxx instruction
$708    $873F   UNKNOWN  873F            ; Unknown 8xxx instruction
$70A    $3CD0   SE       VC, #D0         ; Skip if VC == 208
$70C    $41C0   SNE      V1, #C0         ; Skip if V1 != 192
$70E    $72F5   ADD      V2, #F5         ; Add 245 to V2
$710    $E531   UNKNOWN  $E531           ; Unknown Exxx instruction
$712    $C3ED   RND      V3, #ED         ; V3 = random & ED
$714    $AAE4   LD       I, $AE4         ; Load AE4 into I
$716    $B889   JP       V0, $889        ; Jump to V0 + 889
$718    $36E1   SE       V6, #E1         ; Skip if V6 == 225
$71A    $2FC1   CALL     $FC1            ; Call subroutine at FC1
$71C    $742A   ADD      V4, #2A         ; Add 42 to V4
$71E    $E4BB   UNKNOWN  $E4BB           ; Unknown Exxx instruction
$720    $5CC5   UNKNOWN  $5CC5           ; Unknown 5xxx instruction
$722    $13ED   JP       $3ED            ; Jump to 3ED
$724    $D6F7   DRW      V6, VF, #7      ; Draw 7-byte sprite at V6, VF
$726    $C4C1   RND      V4, #C1         ; V4 = random & C1
$728    $2988   CALL     $988            ; Call subroutine at 988
$72A    $C81B   RND      V8, #1B         ; V8 = random & 1B
$72C    $B752   JP       V0, $752        ; Jump to V0 + 752
$72E    $7764   ADD      V7, #64         ; Add 100 to V7
$730    $8013   XOR      V0, V1          ; V0 ^= V1
$732    $0D60   SYS      $D60            ; System call to D60
$734    $F0B1   UNKNOWN  F0B1            ; Unknown Fxxx instruction
$736    $B2F9   JP       V0, $2F9        ; Jump to V0 + 2F9
$738    $9FAC   UNKNOWN  $9FAC           ; Unknown 9xxx instruction
$73A    $2F1F   CALL     $F1F            ; Call subroutine at F1F
$73C    $B827   JP       V0, $827        ; Jump to V0 + 827
$73E    $163E   JP       $63E            ; Jump to 63E
$740    $526C   UNKNOWN  $526C           ; Unknown 5xxx instruction
$742    $F80C   UNKNOWN  F80C            ; Unknown Fxxx instruction
$744    $9FE6   UNKNOWN  $9FE6           ; Unknown 9xxx instruction
$746    $3538   SE       V5, #38         ; Skip if V5 == 56
$748    $72B5   ADD      V2, #B5         ; Add 181 to V2
$74A    $DF01   DRW      VF, V0, #1      ; Draw 1-byte sprite at VF, V0
$74C    $CF0B   RND      VF, #0B         ; VF = random & 0B
$74E    $1F24   JP       $F24            ; Jump to F24
$750    $3F7A   SE       VF, #7A         ; Skip if VF == 122
$752    $5E8E   UNKNOWN  $5E8E           ; Unknown 5xxx instruction
$754    $207D   CALL     $07D            ; Call subroutine at 07D
$756    $83FC   UNKNOWN  83FC            ; Unknown 8xxx instruction
$758    $5EEE   UNKNOWN  $5EEE           ; Unknown 5xxx instruction
$75A    $992C   UNKNOWN  $992C           ; Unknown 9xxx instruction
$75C    $98DD   UNKNOWN  $98DD           ; Unknown 9xxx instruction
$75E    $4122   SNE      V1, #22         ; Skip if V1 != 34
$760    $00F0   SYS      $0F0            ; System call to 0F0
$762    $05F7   SYS      $5F7            ; System call to 5F7
$764    $29BE   CALL     $9BE            ; Call subroutine at 9BE
$766    $C872   RND      V8, #72         ; V8 = random & 72
$768    $0044   SYS      $044            ; System call to 044
$76A    $691E   LD       V9, #1E         ; Load 30 into V9
$76C    $43E2   SNE      V3, #E2         ; Skip if V3 != 226
$76E    $A39E   LD       I, $39E         ; Load 39E into I
$770    $3675   SE       V6, #75         ; Skip if V6 == 117
$772    $84FA   UNKNOWN  84FA            ; Unknown 8xxx instruction
$774    $4F38   SNE      VF, #38         ; Skip if VF != 56
$776    $EC04   UNKNOWN  $EC04           ; Unknown Exxx instruction
$778    $E87D   UNKNOWN  $E87D           ; Unknown Exxx instruction
$77A    $E6D7   UNKNOWN  $E6D7           ; Unknown Exxx instruction
$77C    $A952   LD       I, $952         ; Load 952 into I
$77E    $9C88   UNKNOWN  $9C88           ; Unknown 9xxx instruction
$780    $6256   LD       V2, #56         ; Load 86 into V2
$782    $8B09   UNKNOWN  8B09            ; Unknown 8xxx instruction
$784    $B9BE   JP       V0, $9BE        ; Jump to V0 + 9BE
$786    $6235   LD       V2, #35         ; Load 53 into V2
$788    $3F6B   SE       VF, #6B         ; Skip if VF == 107
$78A    $3D12   SE       VD, #12         ; Skip if VD == 18
$78C    $0755   SYS      $755            ; System call to 755
$78E    $0329   SYS      $329            ; System call to 329
$790    $2E4F   CALL     $E4F            ; Call subroutine at E4F
$792    $6EAA   LD       VE, #AA         ; Load 170 into VE
$794    $E3CD   UNKNOWN  $E3CD           ; Unknown Exxx instruction
$796    $D55A   DRW      V5, V5, #A      ; Draw 10-byte sprite at V5, V5
$798    $A01B   LD       I, $01B         ; Load 01B into I
$79A    $6CCC   LD       VC, #CC         ; Load 204 into VC
$79C    $3C85   SE       VC, #85         ; Skip if VC == 133
$79E    $F0D6   UNKNOWN  F0D6            ; Unknown Fxxx instruction
$7A0    $1F6E   JP       $F6E            ; Jump to F6E
$7A2    $A0A5   LD       I, $0A5         ; Load 0A5 into I
$7A4    $C1FB   RND      V1, #FB         ; V1 = random & FB
$7A6    $52B8   UNKNOWN  $52B8           ; Unknown 5xxx instruction
$7A8    $85A5   SUB      V5, VA          ; V5 -= VA, VF = !borrow
$7AA    $2F83   CALL     $F83            ; Call subroutine at F83
$7AC    $3892   SE       V8, #92         ; Skip if V8 == 146
$7AE    $DC03   DRW      VC, V0, #3      ; Draw 3-byte sprite at VC, V0
$7B0    $EF40   UNKNOWN  $EF40           ; Unknown Exxx instruction
$7B2    $0C62   SYS      $C62            ; System call to C62
$7B4    $9930   SNE      V9, V3          ; Skip if V9 != V3
$7B6    $8B96   SHR      VB              ; VB >>= 1, VF = LSB
$7B8    $698E   LD       V9, #8E         ; Load 142 into V9
$7BA    $92AC   UNKNOWN  $92AC           ; Unknown 9xxx instruction
$7BC    $C64E   RND      V6, #4E         ; V6 = random & 4E
$7BE    $F95D   UNKNOWN  F95D            ; Unknown Fxxx instruction
$7C0    $E155   UNKNOWN  $E155           ; Unknown Exxx instruction
$7C2    $94BC   UNKNOWN  $94BC           ; Unknown 9xxx instruction
$7C4    $FA2C   UNKNOWN  FA2C            ; Unknown Fxxx instruction
$7C6    $AC03   LD       I, $C03         ; Load C03 into I
$7C8    $CB6E   RND      VB, #6E         ; VB = random & 6E
$7CA    $6C0F   LD       VC, #0F         ; Load 15 into VC
$7CC    $B7A5   JP       V0, $7A5        ; Jump to V0 + 7A5
$7CE    $73C8   ADD      V3, #C8         ; Add 200 to V3
$7D0    $00D8   SYS      $0D8            ; System call to 0D8
$7D2    $D17A   DRW      V1, V7, #A      ; Draw 10-byte sprite at V1, V7
$7D4    $C994   RND      V9, #94         ; V9 = random & 94
$7D6    $EBE7   UNKNOWN  $EBE7           ; Unknown Exxx instruction
$7D8    $7F0F   ADD      VF, #0F         ; Add 15 to VF
$7DA    $FAF6   UNKNOWN  FAF6            ; Unknown Fxxx instruction
$7DC    $8133   XOR      V1, V3          ; V1 ^= V3
$7DE    $7E88   ADD      VE, #88         ; Add 136 to VE
$7E0    $B120   JP       V0, $120        ; Jump to V0 + 120
$7E2    $D520   DRW      V5, V2, #0      ; Draw 0-byte sprite at V5, V2
$7E4    $EEE9   UNKNOWN  $EEE9           ; Unknown Exxx instruction
$7E6    $1A7D   JP       $A7D            ; Jump to A7D
$7E8    $23D5   CALL     $3D5            ; Call subroutine at 3D5
$7EA    $4F1D   SNE      VF, #1D         ; Skip if VF != 29
$7EC    $C374   RND      V3, #74         ; V3 = random & 74
$7EE    $F8FD   UNKNOWN  F8FD            ; Unknown Fxxx instruction
$7F0    $E661   UNKNOWN  $E661           ; Unknown Exxx instruction
$7F2    $D5F5   DRW      V5, VF, #5      ; Draw 5-byte sprite at V5, VF
$7F4    $5E76   UNKNOWN  $5E76           ; Unknown 5xxx instruction
$7F6    $A203   LD       I, $203         ; Load 203 into I
$7F8    $C49B   RND      V4, #9B         ; V4 = random & 9B
$7FA    $9DBF   UNKNOWN  $9DBF           ; Unknown 9xxx instruction
$7FC    $17D6   JP       $7D6            ; Jump to 7D6
$7FE    $AF01   LD       I, $F01         ; Load F01 into I
$800    $61BF   LD       V1, #BF         ; Load 191 into V1
$802    $8756   SHR      V7              ; V7 >>= 1, VF = LSB
$804    $11D0   JP       $1D0            ; Jump to 1D0
$806    $444B   SNE      V4, #4B         ; Skip if V4 != 75
$808    $7069   ADD      V0, #69         ; Add 105 to V0
$80A    $21FB   CALL     $1FB            ; Call subroutine at 1FB
$80C    $D7FD   DRW      V7, VF, #D      ; Draw 13-byte sprite at V7, VF
$80E    $32FB   SE       V2, #FB         ; Skip if V2 == 251
$810    $CDE9   RND      VD, #E9         ; VD = random & E9
$812    $720E   ADD      V2, #0E         ; Add 14 to V2
$814    $8F14   ADD      VF, V1          ; VF += V1, VF = carry
$816    $4D58   SNE      VD, #58         ; Skip if VD != 88
$818    $9780   SNE      V7, V8          ; Skip if V7 != V8
$81A    $F5E8   UNKNOWN  F5E8            ; Unknown Fxxx instruction
$81C    $543A   UNKNOWN  $543A           ; Unknown 5xxx instruction
$81E    $318E   SE       V1, #8E         ; Skip if V1 == 142
$820    $B2BB   JP       V0, $2BB        ; Jump to V0 + 2BB
$822    $EEE2   UNKNOWN  $EEE2           ; Unknown Exxx instruction
$824    $9086   UNKNOWN  $9086           ; Unknown 9xxx instruction
$826    $61ED   LD       V1, #ED         ; Load 237 into V1
$828    $7980   ADD      V9, #80         ; Add 128 to V9
$82A    $C7E1   RND      V7, #E1         ; V7 = random & E1
$82C    $4F34   SNE      VF, #34         ; Skip if VF != 52
$82E    $381F   SE       V8, #1F         ; Skip if V8 == 31
$830    $8F3C   UNKNOWN  8F3C            ; Unknown 8xxx instruction
$832    $244B   CALL     $44B            ; Call subroutine at 44B
$834    $DD8D   DRW      VD, V8, #D      ; Draw 13-byte sprite at VD, V8
$836    $F6AE   UNKNOWN  F6AE            ; Unknown Fxxx instruction
$838    $A175   LD       I, $175         ; Load 175 into I
$83A    $C17D   RND      V1, #7D         ; V1 = random & 7D
$83C    $695F   LD       V9, #5F         ; Load 95 into V9
$83E    $FC98   UNKNOWN  FC98            ; Unknown Fxxx instruction
$840    $2F21   CALL     $F21            ; Call subroutine at F21
$842    $F81B   UNKNOWN  F81B            ; Unknown Fxxx instruction
$844    $35A6   SE       V5, #A6         ; Skip if V5 == 166
$846    $0F9F   SYS      $F9F            ; System call to F9F
$848    $6D6E   LD       VD, #6E         ; Load 110 into VD
$84A    $8BBB   UNKNOWN  8BBB            ; Unknown 8xxx instruction
$84C    $94A7   UNKNOWN  $94A7           ; Unknown 9xxx instruction
$84E    $7F9C   ADD      VF, #9C         ; Add 156 to VF
$850    $D697   DRW      V6, V9, #7      ; Draw 7-byte sprite at V6, V9
$852    $2023   CALL     $023            ; Call subroutine at 023
$854    $A063   LD       I, $063         ; Load 063 into I
$856    $9BE2   UNKNOWN  $9BE2           ; Unknown 9xxx instruction
$858    $CBEC   RND      VB, #EC         ; VB = random & EC
$85A    $B66D   JP       V0, $66D        ; Jump to V0 + 66D
$85C    $A886   LD       I, $886         ; Load 886 into I
$85E    $2C62   CALL     $C62            ; Call subroutine at C62
$860    $835B   UNKNOWN  835B            ; Unknown 8xxx instruction
$862    $5A53   UNKNOWN  $5A53           ; Unknown 5xxx instruction
$864    $DFFA   DRW      VF, VF, #A      ; Draw 10-byte sprite at VF, VF
$866    $3F35   SE       VF, #35         ; Skip if VF == 53
$868    $3F97   SE       VF, #97         ; Skip if VF == 151
$86A    $C041   RND      V0, #41         ; V0 = random & 41
$86C    $F2C1   UNKNOWN  F2C1            ; Unknown Fxxx instruction
$86E    $915F   UNKNOWN  $915F           ; Unknown 9xxx instruction
$870    $68C0   LD       V8, #C0         ; Load 192 into V8
$872    $E2D2   UNKNOWN  $E2D2           ; Unknown Exxx instruction
$874    $8C12   AND      VC, V1          ; VC &= V1
$876    $9F8A   UNKNOWN  $9F8A           ; Unknown 9xxx instruction
$878    $8062   AND      V0, V6          ; V0 &= V6
$87A    $765C   ADD      V6, #5C         ; Add 92 to V6
$87C    $2A10   CALL     $A10            ; Call subroutine at A10
$87E    $7237   ADD      V2, #37         ; Add 55 to V2
$880    $A846   LD       I, $846         ; Load 846 into I
$882    $7704   ADD      V7, #04         ; Add 4 to V7
$884    $B74E   JP       V0, $74E        ; Jump to V0 + 74E
$886    $D01C   DRW      V0, V1, #C      ; Draw 12-byte sprite at V0, V1
$888    $77EB   ADD      V7, #EB         ; Add 235 to V7
$88A    $E137   UNKNOWN  $E137           ; Unknown Exxx instruction
$88C    $E7BE   UNKNOWN  $E7BE           ; Unknown Exxx instruction
$88E    $2338   CALL     $338            ; Call subroutine at 338
$890    $0654   SYS      $654            ; System call to 654
$892    $D681   DRW      V6, V8, #1      ; Draw 1-byte sprite at V6, V8
$894    $C58B   RND      V5, #8B         ; V5 = random & 8B
$896    $347F   SE       V4, #7F         ; Skip if V4 == 127
$898    $784B   ADD      V8, #4B         ; Add 75 to V8
$89A    $B003   JP       V0, $003        ; Jump to V0 + 003
$89C    $B80C   JP       V0, $80C        ; Jump to V0 + 80C
$89E    $156B   JP       $56B            ; Jump to 56B
$8A0    $76ED   ADD      V6, #ED         ; Add 237 to V6
$8A2    $7194   ADD      V1, #94         ; Add 148 to V1
$8A4    $5A96   UNKNOWN  $5A96           ; Unknown 5xxx instruction
$8A6    $2EB4   CALL     $EB4            ; Call subroutine at EB4
$8A8    $A92F   LD       I, $92F         ; Load 92F into I
$8AA    $6EAE   LD       VE, #AE         ; Load 174 into VE
$8AC    $6A3F   LD       VA, #3F         ; Load 63 into VA
$8AE    $12AA   JP       $2AA            ; Jump to 2AA
$8B0    $D916   DRW      V9, V1, #6      ; Draw 6-byte sprite at V9, V1
$8B2    $9463   UNKNOWN  $9463           ; Unknown 9xxx instruction
$8B4    $A9FC   LD       I, $9FC         ; Load 9FC into I
$8B6    $2C76   CALL     $C76            ; Call subroutine at C76
$8B8    $B109   JP       V0, $109        ; Jump to V0 + 109
$8BA    $B3AA   JP       V0, $3AA        ; Jump to V0 + 3AA
$8BC    $98DE   UNKNOWN  $98DE           ; Unknown 9xxx instruction
$8BE    $2644   CALL     $644            ; Call subroutine at 644
$8C0    $4C5E   SNE      VC, #5E         ; Skip if VC != 94
$8C2    $18A9   JP       $8A9            ; Jump to 8A9
$8C4    $FD7B   UNKNOWN  FD7B            ; Unknown Fxxx instruction
$8C6    $0F9B   SYS      $F9B            ; System call to F9B
$8C8    $D7D3   DRW      V7, VD, #3      ; Draw 3-byte sprite at V7, VD
$8CA    $393C   SE       V9, #3C         ; Skip if V9 == 60
$8CC    $98D9   UNKNOWN  $98D9           ; Unknown 9xxx instruction
$8CE    $8192   AND      V1, V9          ; V1 &= V9
$8D0    $32E5   SE       V2, #E5         ; Skip if V2 == 229
$8D2    $E834   UNKNOWN  $E834           ; Unknown Exxx instruction
$8D4    $53D7   UNKNOWN  $53D7           ; Unknown 5xxx instruction
$8D6    $AF34   LD       I, $F34         ; Load F34 into I
$8D8    $4323   SNE      V3, #23         ; Skip if V3 != 35
$8DA    $17C3   JP       $7C3            ; Jump to 7C3
$8DC    $9466   UNKNOWN  $9466           ; Unknown 9xxx instruction
$8DE    $3DE0   SE       VD, #E0         ; Skip if VD == 224
$8E0    $6DC2   LD       VD, #C2         ; Load 194 into VD
$8E2    $E721   UNKNOWN  $E721           ; Unknown Exxx instruction
$8E4    $F17B   UNKNOWN  F17B            ; Unknown Fxxx instruction
$8E6    $9D8A   UNKNOWN  $9D8A           ; Unknown 9xxx instruction
$8E8    $3C07   SE       VC, #07         ; Skip if VC == 7
$8EA    $D413   DRW      V4, V1, #3      ; Draw 3-byte sprite at V4, V1
$8EC    $EF27   UNKNOWN  $EF27           ; Unknown Exxx instruction
$8EE    $1F50   JP       $F50            ; Jump to F50
$8F0    $DC18   DRW      VC, V1, #8      ; Draw 8-byte sprite at VC, V1
$8F2    $32B6   SE       V2, #B6         ; Skip if V2 == 182
$8F4    $CFFD   RND      VF, #FD         ; VF = random & FD
$8F6    $394C   SE       V9, #4C         ; Skip if V9 == 76
$8F8    $27C5   CALL     $7C5            ; Call subroutine at 7C5
$8FA    $3215   SE       V2, #15         ; Skip if V2 == 21
$8FC    $BA99   JP       V0, $A99        ; Jump to V0 + A99
$8FE    $64EF   LD       V4, #EF         ; Load 239 into V4
$900    $8A96   SHR      VA              ; VA >>= 1, VF = LSB
$902    $D06A   DRW      V0, V6, #A      ; Draw 10-byte sprite at V0, V6
$904    $E900   UNKNOWN  $E900           ; Unknown Exxx instruction
$906    $F4B4   UNKNOWN  F4B4            ; Unknown Fxxx instruction
$908    $84EE   SHL      V4              ; V4 <<= 1, VF = MSB
$90A    $AC65   LD       I, $C65         ; Load C65 into I
$90C    $E258   UNKNOWN  $E258           ; Unknown Exxx instruction
$90E    $D9A3   DRW      V9, VA, #3      ; Draw 3-byte sprite at V9, VA
$910    $EE14   UNKNOWN  $EE14           ; Unknown Exxx instruction
$912    $708D   ADD      V0, #8D         ; Add 141 to V0
$914    $4739   SNE      V7, #39         ; Skip if V7 != 57
$916    $5AAB   UNKNOWN  $5AAB           ; Unknown 5xxx instruction
$918    $5466   UNKNOWN  $5466           ; Unknown 5xxx instruction
$91A    $811F   UNKNOWN  811F            ; Unknown 8xxx instruction
$91C    $41F4   SNE      V1, #F4         ; Skip if V1 != 244
$91E    $8E93   XOR      VE, V9          ; VE ^= V9
$920    $1F26   JP       $F26            ; Jump to F26
$922    $4BDE   SNE      VB, #DE         ; Skip if VB != 222
$924    $3081   SE       V0, #81         ; Skip if V0 == 129
$926    $F6D6   UNKNOWN  F6D6            ; Unknown Fxxx instruction
$928    $1EAB   JP       $EAB            ; Jump to EAB
$92A    $53EB   UNKNOWN  $53EB           ; Unknown 5xxx instruction
$92C    $67FE   LD       V7, #FE         ; Load 254 into V7
$92E    $EF72   UNKNOWN  $EF72           ; Unknown Exxx instruction
$930    $8D30   LD       VD, V3          ; VD = V3
$932    $4405   SNE      V4, #05         ; Skip if V4 != 5
$934    $ECD0   UNKNOWN  $ECD0           ; Unknown Exxx instruction
$936    $35F9   SE       V5, #F9         ; Skip if V5 == 249
$938    $781D   ADD      V8, #1D         ; Add 29 to V8
$93A    $82BD   UNKNOWN  82BD            ; Unknown 8xxx instruction
$93C    $3117   SE       V1, #17         ; Skip if V1 == 23
$93E    $29DD   CALL     $9DD            ; Call subroutine at 9DD
$940    $A434   LD       I, $434         ; Load 434 into I
$942    $BF36   JP       V0, $F36        ; Jump to V0 + F36
$944    $8F1D   UNKNOWN  8F1D            ; Unknown 8xxx instruction
$946    $0A33   SYS      $A33            ; System call to A33
$948    $A6AA   LD       I, $6AA         ; Load 6AA into I
$94A    $4683   SNE      V6, #83         ; Skip if V6 != 131
$94C    $333A   SE       V3, #3A         ; Skip if V3 == 58
$94E    $6317   LD       V3, #17         ; Load 23 into V3
$950    $1A0C   JP       $A0C            ; Jump to A0C
$952    $7948   ADD      V9, #48         ; Add 72 to V9
$954    $0F60   SYS      $F60            ; System call to F60
$956    $6804   LD       V8, #04         ; Load 4 into V8
$958    $C9AF   RND      V9, #AF         ; V9 = random & AF
$95A    $578D   UNKNOWN  $578D           ; Unknown 5xxx instruction
$95C    $B806   JP       V0, $806        ; Jump to V0 + 806
$95E    $6A15   LD       VA, #15         ; Load 21 into VA
$960    $98E3   UNKNOWN  $98E3           ; Unknown 9xxx instruction
$962    $91A2   UNKNOWN  $91A2           ; Unknown 9xxx instruction
$964    $F869   UNKNOWN  F869            ; Unknown Fxxx instruction
$966    $A450   LD       I, $450         ; Load 450 into I
$968    $59D8   UNKNOWN  $59D8           ; Unknown 5xxx instruction
$96A    $FA7C   UNKNOWN  FA7C            ; Unknown Fxxx instruction
$96C    $3FDD   SE       VF, #DD         ; Skip if VF == 221
$96E    $CAE9   RND      VA, #E9         ; VA = random & E9
$970    $389B   SE       V8, #9B         ; Skip if V8 == 155
$972    $C0C7   RND      V0, #C7         ; V0 = random & C7
$974    $7DEA   ADD      VD, #EA         ; Add 234 to VD
$976    $69C2   LD       V9, #C2         ; Load 194 into V9
$978    $1547   JP       $547            ; Jump to 547
$97A    $14DB   JP       $4DB            ; Jump to 4DB
$97C    $17AB   JP       $7AB            ; Jump to 7AB
$97E    $7C60   ADD      VC, #60         ; Add 96 to VC
$980    $A8C4   LD       I, $8C4         ; Load 8C4 into I
$982    $7B91   ADD      VB, #91         ; Add 145 to VB
$984    $7167   ADD      V1, #67         ; Add 103 to V1
$986    $A160   LD       I, $160         ; Load 160 into I
$988    $BE7F   JP       V0, $E7F        ; Jump to V0 + E7F
$98A    $9351   UNKNOWN  $9351           ; Unknown 9xxx instruction
$98C    $CD15   RND      VD, #15         ; VD = random & 15
$98E    $43C3   SNE      V3, #C3         ; Skip if V3 != 195
$990    $4C95   SNE      VC, #95         ; Skip if VC != 149
$992    $1448   JP       $448            ; Jump to 448
$994    $0EAF   SYS      $EAF            ; System call to EAF
$996    $49D3   SNE      V9, #D3         ; Skip if V9 != 211
$998    $0C7D   SYS      $C7D            ; System call to C7D
$99A    $5FA5   UNKNOWN  $5FA5           ; Unknown 5xxx instruction
$99C    $161F   JP       $61F            ; Jump to 61F
$99E    $EE4D   UNKNOWN  $EE4D           ; Unknown Exxx instruction
$9A0    $38F4   SE       V8, #F4         ; Skip if V8 == 244
$9A2    $27D1   CALL     $7D1            ; Call subroutine at 7D1
$9A4    $23CA   CALL     $3CA            ; Call subroutine at 3CA
$9A6    $F509   UNKNOWN  F509            ; Unknown Fxxx instruction
$9A8    $C27D   RND      V2, #7D         ; V2 = random & 7D
$9AA    $D4F6   DRW      V4, VF, #6      ; Draw 6-byte sprite at V4, VF
$9AC    $3A0D   SE       VA, #0D         ; Skip if VA == 13
$9AE    $1D52   JP       $D52            ; Jump to D52
$9B0    $E040   UNKNOWN  $E040           ; Unknown Exxx instruction
$9B2    $0451   SYS      $451            ; System call to 451
$9B4    $3490   SE       V4, #90         ; Skip if V4 == 144
$9B6    $91AC   UNKNOWN  $91AC           ; Unknown 9xxx instruction
$9B8    $7CEC   ADD      VC, #EC         ; Add 236 to VC
$9BA    $B1D7   JP       V0, $1D7        ; Jump to V0 + 1D7
$9BC    $4861   SNE      V8, #61         ; Skip if V8 != 97
$9BE    $6AF4   LD       VA, #F4         ; Load 244 into VA
$9C0    $6EB2   LD       VE, #B2         ; Load 178 into VE
$9C2    $BD6A   JP       V0, $D6A        ; Jump to V0 + D6A
$9C4    $6082   LD       V0, #82         ; Load 130 into V0
$9C6    $1C5A   JP       $C5A            ; Jump to C5A
$9C8    $CE92   RND      VE, #92         ; VE = random & 92
$9CA    $7C2E   ADD      VC, #2E         ; Add 46 to VC
$9CC    $80AD   UNKNOWN  80AD            ; Unknown 8xxx instruction
$9CE    $6FD6   LD       VF, #D6         ; Load 214 into VF
$9D0    $51F0   SE       V1, VF          ; Skip if V1 == VF
$9D2    $42CF   SNE      V2, #CF         ; Skip if V2 != 207
$9D4    $4C3D   SNE      VC, #3D         ; Skip if VC != 61
$9D6    $0607   SYS      $607            ; System call to 607
$9D8    $172B   JP       $72B            ; Jump to 72B
$9DA    $D57F   DRW      V5, V7, #F      ; Draw 15-byte sprite at V5, V7
$9DC    $0DD4   SYS      $DD4            ; System call to DD4
$9DE    $9290   SNE      V2, V9          ; Skip if V2 != V9
$9E0    $9D53   UNKNOWN  $9D53           ; Unknown 9xxx instruction
$9E2    $CE37   RND      VE, #37         ; VE = random & 37
$9E4    $0970   SYS      $970            ; System call to 970
$9E6    $2182   CALL     $182            ; Call subroutine at 182
$9E8    $6E2C   LD       VE, #2C         ; Load 44 into VE
$9EA    $09A6   SYS      $9A6            ; System call to 9A6
$9EC    $79E6   ADD      V9, #E6         ; Add 230 to V9
$9EE    $69E0   LD       V9, #E0         ; Load 224 into V9
$9F0    $99B6   UNKNOWN  $99B6           ; Unknown 9xxx instruction
$9F2    $E6A3   UNKNOWN  $E6A3           ; Unknown Exxx instruction
$9F4    $86BB   UNKNOWN  86BB            ; Unknown 8xxx instruction
$9F6    $1EE8   JP       $EE8            ; Jump to EE8
$9F8    $BC94   JP       V0, $C94        ; Jump to V0 + C94
$9FA    $40C8   SNE      V0, #C8         ; Skip if V0 != 200
$9FC    $4882   SNE      V8, #82         ; Skip if V8 != 130
$9FE    $A0F6   LD       I, $0F6         ; Load 0F6 into I
$A00    $0D7D   SYS      $D7D            ; System call to D7D
$A02    $2784   CALL     $784            ; Call subroutine at 784
$A04    $EF5B   UNKNOWN  $EF5B           ; Unknown Exxx instruction
$A06    $A67C   LD       I, $67C         ; Load 67C into I
$A08    $6CCB   LD       VC, #CB         ; Load 203 into VC
$A0A    $D275   DRW      V2, V7, #5      ; Draw 5-byte sprite at V2, V7
$A0C    $C27A   RND      V2, #7A         ; V2 = random & 7A
$A0E    $B961   JP       V0, $961        ; Jump to V0 + 961
$A10    $93C9   UNKNOWN  $93C9           ; Unknown 9xxx instruction
$A12    $1FAF   JP       $FAF            ; Jump to FAF
$A14    $2408   CALL     $408            ; Call subroutine at 408
$A16    $B288   JP       V0, $288        ; Jump to V0 + 288
$A18    $B0FC   JP       V0, $0FC        ; Jump to V0 + 0FC
$A1A    $9AC7   UNKNOWN  $9AC7           ; Unknown 9xxx instruction
$A1C    $515A   UNKNOWN  $515A           ; Unknown 5xxx instruction
$A1E    $57A7   UNKNOWN  $57A7           ; Unknown 5xxx instruction
$A20    $FDE5   UNKNOWN  FDE5            ; Unknown Fxxx instruction
$A22    $1206   JP       $206            ; Jump to 206
$A24    $BFE7   JP       V0, $FE7        ; Jump to V0 + FE7
$A26    $E76E   UNKNOWN  $E76E           ; Unknown Exxx instruction
$A28    $6A02   LD       VA, #02         ; Load 2 into VA
$A2A    $BA67   JP       V0, $A67        ; Jump to V0 + A67
$A2C    $7106   ADD      V1, #06         ; Add 6 to V1
$A2E    $5914   UNKNOWN  $5914           ; Unknown 5xxx instruction
$A30    $A8FE   LD       I, $8FE         ; Load 8FE into I
$A32    $51A9   UNKNOWN  $51A9           ; Unknown 5xxx instruction
$A34    $170E   JP       $70E            ; Jump to 70E
$A36    $A8D0   LD       I, $8D0         ; Load 8D0 into I
$A38    $68F8   LD       V8, #F8         ; Load 248 into V8
$A3A    $4D03   SNE      VD, #03         ; Skip if VD != 3
$A3C    $5661   UNKNOWN  $5661           ; Unknown 5xxx instruction
$A3E    $E1EF   UNKNOWN  $E1EF           ; Unknown Exxx instruction
$A40    $239B   CALL     $39B            ; Call subroutine at 39B
$A42    $9EF9   UNKNOWN  $9EF9           ; Unknown 9xxx instruction
$A44    $76F1   ADD      V6, #F1         ; Add 241 to V6
$A46    $3294   SE       V2, #94         ; Skip if V2 == 148
$A48    $4533   SNE      V5, #33         ; Skip if V5 != 51
$A4A    $392D   SE       V9, #2D         ; Skip if V9 == 45
$A4C    $8D72   AND      VD, V7          ; VD &= V7
$A4E    $FA52   UNKNOWN  FA52            ; Unknown Fxxx instruction
$A50    $F17C   UNKNOWN  F17C            ; Unknown Fxxx instruction
$A52    $5915   UNKNOWN  $5915           ; Unknown 5xxx instruction
$A54    $74BD   ADD      V4, #BD         ; Add 189 to V4
$A56    $B82E   JP       V0, $82E        ; Jump to V0 + 82E
$A58    $AEBD   LD       I, $EBD         ; Load EBD into I
$A5A    $E279   UNKNOWN  $E279           ; Unknown Exxx instruction
$A5C    $B7E4   JP       V0, $7E4        ; Jump to V0 + 7E4
$A5E    $7CC3   ADD      VC, #C3         ; Add 195 to VC
$A60    $93ED   UNKNOWN  $93ED           ; Unknown 9xxx instruction
$A62    $0DEF   SYS      $DEF            ; System call to DEF
$A64    $1314   JP       $314            ; Jump to 314
$A66    $2823   CALL     $823            ; Call subroutine at 823
$A68    $2354   CALL     $354            ; Call subroutine at 354
$A6A    $E7A4   UNKNOWN  $E7A4           ; Unknown Exxx instruction
$A6C    $E79D   UNKNOWN  $E79D           ; Unknown Exxx instruction
$A6E    $3885   SE       V8, #85         ; Skip if V8 == 133
$A70    $7A71   ADD      VA, #71         ; Add 113 to VA
$A72    $3E1D   SE       VE, #1D         ; Skip if VE == 29
$A74    $730F   ADD      V3, #0F         ; Add 15 to V3
$A76    $D5ED   DRW      V5, VE, #D      ; Draw 13-byte sprite at V5, VE
$A78    $9820   SNE      V8, V2          ; Skip if V8 != V2
$A7A    $E103   UNKNOWN  $E103           ; Unknown Exxx instruction
$A7C    $B8A7   JP       V0, $8A7        ; Jump to V0 + 8A7
$A7E    $1198   JP       $198            ; Jump to 198
$A80    $E07F   UNKNOWN  $E07F           ; Unknown Exxx instruction
$A82    $2245   CALL     $245            ; Call subroutine at 245
$A84    $FB9D   UNKNOWN  FB9D            ; Unknown Fxxx instruction
$A86    $F10C   UNKNOWN  F10C            ; Unknown Fxxx instruction
$A88    $C434   RND      V4, #34         ; V4 = random & 34
$A8A    $7A97   ADD      VA, #97         ; Add 151 to VA
$A8C    $88FB   UNKNOWN  88FB            ; Unknown 8xxx instruction
$A8E    $9228   UNKNOWN  $9228           ; Unknown 9xxx instruction
$A90    $4D56   SNE      VD, #56         ; Skip if VD != 86
$A92    $F3AA   UNKNOWN  F3AA            ; Unknown Fxxx instruction
$A94    $CA4E   RND      VA, #4E         ; VA = random & 4E
$A96    $10EB   JP       $0EB            ; Jump to 0EB
$A98    $DDEA   DRW      VD, VE, #A      ; Draw 10-byte sprite at VD, VE
$A9A    $CAF5   RND      VA, #F5         ; VA = random & F5
$A9C    $7D83   ADD      VD, #83         ; Add 131 to VD
$A9E    $A88E   LD       I, $88E         ; Load 88E into I
$AA0    $95CE   UNKNOWN  $95CE           ; Unknown 9xxx instruction
$AA2    $A657   LD       I, $657         ; Load 657 into I
$AA4    $183E   JP       $83E            ; Jump to 83E
$AA6    $A658   LD       I, $658         ; Load 658 into I
$AA8    $72BE   ADD      V2, #BE         ; Add 190 to V2
$AAA    $3208   SE       V2, #08         ; Skip if V2 == 8
$AAC    $B376   JP       V0, $376        ; Jump to V0 + 376
$AAE    $593C   UNKNOWN  $593C           ; Unknown 5xxx instruction
$AB0    $A778   LD       I, $778         ; Load 778 into I
$AB2    $CC24   RND      VC, #24         ; VC = random & 24
$AB4    $30F0   SE       V0, #F0         ; Skip if V0 == 240
$AB6    $9472   UNKNOWN  $9472           ; Unknown 9xxx instruction
$AB8    $1EB8   JP       $EB8            ; Jump to EB8
$ABA    $FB25   UNKNOWN  FB25            ; Unknown Fxxx instruction
$ABC    $6FAC   LD       VF, #AC         ; Load 172 into VF
$ABE    $9F03   UNKNOWN  $9F03           ; Unknown 9xxx instruction
$AC0    $7445   ADD      V4, #45         ; Add 69 to V4
$AC2    $139F   JP       $39F            ; Jump to 39F
$AC4    $1043   JP       $043            ; Jump to 043
$AC6    $15AB   JP       $5AB            ; Jump to 5AB
$AC8    $343A   SE       V4, #3A         ; Skip if V4 == 58
$ACA    $DBB0   DRW      VB, VB, #0      ; Draw 0-byte sprite at VB, VB
$ACC    $D06B   DRW      V0, V6, #B      ; Draw 11-byte sprite at V0, V6
$ACE    $A1DB   LD       I, $1DB         ; Load 1DB into I
$AD0    $D916   DRW      V9, V1, #6      ; Draw 6-byte sprite at V9, V1
$AD2    $3AE5   SE       VA, #E5         ; Skip if VA == 229
$AD4    $0E15   SYS      $E15            ; System call to E15
$AD6    $772E   ADD      V7, #2E         ; Add 46 to V7
$AD8    $7E76   ADD      VE, #76         ; Add 118 to VE
$ADA    $DF89   DRW      VF, V8, #9      ; Draw 9-byte sprite at VF, V8
$ADC    $21CE   CALL     $1CE            ; Call subroutine at 1CE
$ADE    $3A44   SE       VA, #44         ; Skip if VA == 68
$AE0    $96C4   UNKNOWN  $96C4           ; Unknown 9xxx instruction
$AE2    $69C7   LD       V9, #C7         ; Load 199 into V9
$AE4    $D264   DRW      V2, V6, #4      ; Draw 4-byte sprite at V2, V6
$AE6    $5999   UNKNOWN  $5999           ; Unknown 5xxx instruction
$AE8    $A93F   LD       I, $93F         ; Load 93F into I
$AEA    $6D96   LD       VD, #96         ; Load 150 into VD
$AEC    $E6D9   UNKNOWN  $E6D9           ; Unknown Exxx instruction
$AEE    $2008   CALL     $008            ; Call subroutine at 008
$AF0    $2769   CALL     $769            ; Call subroutine at 769
$AF2    $5DA0   SE       VD, VA          ; Skip if VD == VA
$AF4    $E299   UNKNOWN  $E299           ; Unknown Exxx instruction
$AF6    $DE37   DRW      VE, V3, #7      ; Draw 7-byte sprite at VE, V3
$AF8    $141A   JP       $41A            ; Jump to 41A
$AFA    $61D7   LD       V1, #D7         ; Load 215 into V1
$AFC    $DBA5   DRW      VB, VA, #5      ; Draw 5-byte sprite at VB, VA
$AFE    $4246   SNE      V2, #46         ; Skip if V2 != 70
$B00    $A4AD   LD       I, $4AD         ; Load 4AD into I
$B02    $B575   JP       V0, $575        ; Jump to V0 + 575
$B04    $3E1D   SE       VE, #1D         ; Skip if VE == 29
$B06    $2A1B   CALL     $A1B            ; Call subroutine at A1B
$B08    $D4D3   DRW      V4, VD, #3      ; Draw 3-byte sprite at V4, VD
$B0A    $5ECF   UNKNOWN  $5ECF           ; Unknown 5xxx instruction
$B0C    $F23B   UNKNOWN  F23B            ; Unknown Fxxx instruction
$B0E    $45F5   SNE      V5, #F5         ; Skip if V5 != 245
$B10    $F6ED   UNKNOWN  F6ED            ; Unknown Fxxx instruction
$B12    $DE6F   DRW      VE, V6, #F      ; Draw 15-byte sprite at VE, V6
$B14    $24C7   CALL     $4C7            ; Call subroutine at 4C7
$B16    $6392   LD       V3, #92         ; Load 146 into V3
$B18    $03D1   SYS      $3D1            ; System call to 3D1
$B1A    $C02D   RND      V0, #2D         ; V0 = random & 2D
$B1C    $894A   UNKNOWN  894A            ; Unknown 8xxx instruction
$B1E    $4A3B   SNE      VA, #3B         ; Skip if VA != 59
$B20    $373B   SE       V7, #3B         ; Skip if V7 == 59
$B22    $2EB3   CALL     $EB3            ; Call subroutine at EB3
$B24    $A0F0   LD       I, $0F0         ; Load 0F0 into I
$B26    $8444   ADD      V4, V4          ; V4 += V4, VF = carry
$B28    $A1C5   LD       I, $1C5         ; Load 1C5 into I
$B2A    $58EE   UNKNOWN  $58EE           ; Unknown 5xxx instruction
$B2C    $60D6   LD       V0, #D6         ; Load 214 into V0
$B2E    $11F1   JP       $1F1            ; Jump to 1F1
$B30    $13C3   JP       $3C3            ; Jump to 3C3
$B32    $3375   SE       V3, #75         ; Skip if V3 == 117
$B34    $3D49   SE       VD, #49         ; Skip if VD == 73
$B36    $6240   LD       V2, #40         ; Load 64 into V2
$B38    $BF16   JP       V0, $F16        ; Jump to V0 + F16
$B3A    $8ECF   UNKNOWN  8ECF            ; Unknown 8xxx instruction
$B3C    $3097   SE       V0, #97         ; Skip if V0 == 151
$B3E    $A836   LD       I, $836         ; Load 836 into I
$B40    $8780   LD       V7, V8          ; V7 = V8
$B42    $88CA   UNKNOWN  88CA            ; Unknown 8xxx instruction
$B44    $A209   LD       I, $209         ; Load 209 into I
$B46    $8900   LD       V9, V0          ; V9 = V0
$B48    $A962   LD       I, $962         ; Load 962 into I
$B4A    $5B8A   UNKNOWN  $5B8A           ; Unknown 5xxx instruction
$B4C    $D9DF   DRW      V9, VD, #F      ; Draw 15-byte sprite at V9, VD
$B4E    $1575   JP       $575            ; Jump to 575
$B50    $7B4F   ADD      VB, #4F         ; Add 79 to VB
$B52    $12DF   JP       $2DF            ; Jump to 2DF
$B54    $18D6   JP       $8D6            ; Jump to 8D6
$B56    $31AE   SE       V1, #AE         ; Skip if V1 == 174
$B58    $BB62   JP       V0, $B62        ; Jump to V0 + B62
$B5A    $A589   LD       I, $589         ; Load 589 into I
$B5C    $DF80   DRW      VF, V8, #0      ; Draw 0-byte sprite at VF, V8
$B5E    $7E38   ADD      VE, #38         ; Add 56 to VE
$B60    $7D34   ADD      VD, #34         ; Add 52 to VD
$B62    $2750   CALL     $750            ; Call subroutine at 750
$B64    $DB0A   DRW      VB, V0, #A      ; Draw 10-byte sprite at VB, V0
$B66    $C845   RND      V8, #45         ; V8 = random & 45
$B68    $9734   UNKNOWN  $9734           ; Unknown 9xxx instruction
$B6A    $C3E7   RND      V3, #E7         ; V3 = random & E7
$B6C    $0ECF   SYS      $ECF            ; System call to ECF
$B6E    $6272   LD       V2, #72         ; Load 114 into V2
$B70    $3C50   SE       VC, #50         ; Skip if VC == 80
$B72    $BA9F   JP       V0, $A9F        ; Jump to V0 + A9F
$B74    $0817   SYS      $817            ; System call to 817
$B76    $E994   UNKNOWN  $E994           ; Unknown Exxx instruction
$B78    $8EEB   UNKNOWN  8EEB            ; Unknown 8xxx instruction
$B7A    $7912   ADD      V9, #12         ; Add 18 to V9
$B7C    $E862   UNKNOWN  $E862           ; Unknown Exxx instruction
$B7E    $F4F7   UNKNOWN  F4F7            ; Unknown Fxxx instruction
$B80    $8A7D   UNKNOWN  8A7D            ; Unknown 8xxx instruction
$B82    $83A0   LD       V3, VA          ; V3 = VA
$B84    $0A60   SYS      $A60            ; System call to A60
$B86    $1DBC   JP       $DBC            ; Jump to DBC
$B88    $9C6C   UNKNOWN  $9C6C           ; Unknown 9xxx instruction
$B8A    $E397   UNKNOWN  $E397           ; Unknown Exxx instruction
$B8C    $C9B7   RND      V9, #B7         ; V9 = random & B7
$B8E    $B0AE   JP       V0, $0AE        ; Jump to V0 + 0AE
$B90    $444C   SNE      V4, #4C         ; Skip if V4 != 76
$B92    $16ED   JP       $6ED            ; Jump to 6ED
$B94    $E6CE   UNKNOWN  $E6CE           ; Unknown Exxx instruction
$B96    $B197   JP       V0, $197        ; Jump to V0 + 197
$B98    $4D7C   SNE      VD, #7C         ; Skip if VD != 124
$B9A    $01AE   SYS      $1AE            ; System call to 1AE
$B9C    $4DB7   SNE      VD, #B7         ; Skip if VD != 183
$B9E    $4A97   SNE      VA, #97         ; Skip if VA != 151
$BA0    $F2AF   UNKNOWN  F2AF            ; Unknown Fxxx instruction
$BA2    $E427   UNKNOWN  $E427           ; Unknown Exxx instruction
$BA4    $86A7   SUBN     V6, VA          ; V6 = VA - V6, VF = !borrow
$BA6    $3DB7   SE       VD, #B7         ; Skip if VD == 183
$BA8    $9C8E   UNKNOWN  $9C8E           ; Unknown 9xxx instruction
$BAA    $1507   JP       $507            ; Jump to 507
$BAC    $4AF2   SNE      VA, #F2         ; Skip if VA != 242
$BAE    $3757   SE       V7, #57         ; Skip if V7 == 87
$BB0    $3898   SE       V8, #98         ; Skip if V8 == 152
$BB2    $D73E   DRW      V7, V3, #E      ; Draw 14-byte sprite at V7, V3
$BB4    $3C27   SE       VC, #27         ; Skip if VC == 39
$BB6    $54A4   UNKNOWN  $54A4           ; Unknown 5xxx instruction
$BB8    $35CB   SE       V5, #CB         ; Skip if V5 == 203
$BBA    $D86A   DRW      V8, V6, #A      ; Draw 10-byte sprite at V8, V6
$BBC    $C297   RND      V2, #97         ; V2 = random & 97
$BBE    $040C   SYS      $40C            ; System call to 40C
$BC0    $2CC6   CALL     $CC6            ; Call subroutine at CC6
$BC2    $4900   SNE      V9, #00         ; Skip if V9 != 0
$BC4    $B0C7   JP       V0, $0C7        ; Jump to V0 + 0C7
$BC6    $F5BF   UNKNOWN  F5BF            ; Unknown Fxxx instruction
$BC8    $6EBA   LD       VE, #BA         ; Load 186 into VE
$BCA    $661A   LD       V6, #1A         ; Load 26 into V6
$BCC    $50B9   UNKNOWN  $50B9           ; Unknown 5xxx instruction
$BCE    $2556   CALL     $556            ; Call subroutine at 556
$BD0    $737B   ADD      V3, #7B         ; Add 123 to V3
$BD2    $4B37   SNE      VB, #37         ; Skip if VB != 55
$BD4    $EF69   UNKNOWN  $EF69           ; Unknown Exxx instruction
$BD6    $20C7   CALL     $0C7            ; Call subroutine at 0C7
$BD8    $7079   ADD      V0, #79         ; Add 121 to V0
$BDA    $D69A   DRW      V6, V9, #A      ; Draw 10-byte sprite at V6, V9
$BDC    $BEE8   JP       V0, $EE8        ; Jump to V0 + EE8
$BDE    $CD6F   RND      VD, #6F         ; VD = random & 6F
$BE0    $3428   SE       V4, #28         ; Skip if V4 == 40
$BE2    $9D13   UNKNOWN  $9D13           ; Unknown 9xxx instruction
$BE4    $F81E   ADD      I, V8           ; I += V8
$BE6    $9C4C   UNKNOWN  $9C4C           ; Unknown 9xxx instruction
$BE8    $6ED9   LD       VE, #D9         ; Load 217 into VE
$BEA    $E1FE   UNKNOWN  $E1FE           ; Unknown Exxx instruction
$BEC    $F8AF   UNKNOWN  F8AF            ; Unknown Fxxx instruction
$BEE    $416C   SNE      V1, #6C         ; Skip if V1 != 108
$BF0    $9EB0   SNE      VE, VB          ; Skip if VE != VB
$BF2    $ACB1   LD       I, $CB1         ; Load CB1 into I
$BF4    $24C0   CALL     $4C0            ; Call subroutine at 4C0
$BF6    $ECDD   UNKNOWN  $ECDD           ; Unknown Exxx instruction
$BF8    $A890   LD       I, $890         ; Load 890 into I
$BFA    $6C81   LD       VC, #81         ; Load 129 into VC
$BFC    $0EED   SYS      $EED            ; System call to EED
$BFE    $29EE   CALL     $9EE            ; Call subroutine at 9EE
$C00    $2D6D   CALL     $D6D            ; Call subroutine at D6D
$C02    $06F7   SYS      $6F7            ; System call to 6F7
$C04    $AD2E   LD       I, $D2E         ; Load D2E into I
$C06    $2FA7   CALL     $FA7            ; Call subroutine at FA7
$C08    $2807   CALL     $807            ; Call subroutine at 807
$C0A    $3EDC   SE       VE, #DC         ; Skip if VE == 220
$C0C    $77C5   ADD      V7, #C5         ; Add 197 to V7
$C0E    $E09A   UNKNOWN  $E09A           ; Unknown Exxx instruction
$C10    $FB1B   UNKNOWN  FB1B            ; Unknown Fxxx instruction
$C12    $00AF   SYS      $0AF            ; System call to 0AF
$C14    $C3DE   RND      V3, #DE         ; V3 = random & DE
$C16    $4A55   SNE      VA, #55         ; Skip if VA != 85
$C18    $1C9F   JP       $C9F            ; Jump to C9F
$C1A    $BCCC   JP       V0, $CCC        ; Jump to V0 + CCC
$C1C    $5BDE   UNKNOWN  $5BDE           ; Unknown 5xxx instruction
$C1E    $9B4F   UNKNOWN  $9B4F           ; Unknown 9xxx instruction
$C20    $B491   JP       V0, $491        ; Jump to V0 + 491
$C22    $15DB   JP       $5DB            ; Jump to 5DB
$C24    $2E02   CALL     $E02            ; Call subroutine at E02
$C26    $6AC6   LD       VA, #C6         ; Load 198 into VA
$C28    $7A5E   ADD      VA, #5E         ; Add 94 to VA
$C2A    $5B68   UNKNOWN  $5B68           ; Unknown 5xxx instruction
$C2C    $8ADD   UNKNOWN  8ADD            ; Unknown 8xxx instruction
$C2E    $D146   DRW      V1, V4, #6      ; Draw 6-byte sprite at V1, V4
$C30    $C387   RND      V3, #87         ; V3 = random & 87
$C32    $C748   RND      V7, #48         ; V7 = random & 48
$C34    $5F69   UNKNOWN  $5F69           ; Unknown 5xxx instruction
$C36    $1109   JP       $109            ; Jump to 109
$C38    $A2F0   LD       I, $2F0         ; Load 2F0 into I
$C3A    $96B2   UNKNOWN  $96B2           ; Unknown 9xxx instruction
$C3C    $A30B   LD       I, $30B         ; Load 30B into I
$C3E    $3043   SE       V0, #43         ; Skip if V0 == 67
$C40    $FE35   UNKNOWN  FE35            ; Unknown Fxxx instruction
$C42    $9C34   UNKNOWN  $9C34           ; Unknown 9xxx instruction
$C44    $2796   CALL     $796            ; Call subroutine at 796
$C46    $0FB3   SYS      $FB3            ; System call to FB3
$C48    $B57B   JP       V0, $57B        ; Jump to V0 + 57B
$C4A    $8ACF   UNKNOWN  8ACF            ; Unknown 8xxx instruction
$C4C    $B690   JP       V0, $690        ; Jump to V0 + 690
$C4E    $0F97   SYS      $F97            ; System call to F97
$C50    $2EBB   CALL     $EBB            ; Call subroutine at EBB
$C52    $91F8   UNKNOWN  $91F8           ; Unknown 9xxx instruction
$C54    $AF7C   LD       I, $F7C         ; Load F7C into I
$C56    $7CB9   ADD      VC, #B9         ; Add 185 to VC
$C58    $662B   LD       V6, #2B         ; Load 43 into V6
$C5A    $C08A   RND      V0, #8A         ; V0 = random & 8A
$C5C    $C8F9   RND      V8, #F9         ; V8 = random & F9
$C5E    $1F0B   JP       $F0B            ; Jump to F0B
$C60    $1A12   JP       $A12            ; Jump to A12
$C62    $DD97   DRW      VD, V9, #7      ; Draw 7-byte sprite at VD, V9
$C64    $2D85   CALL     $D85            ; Call subroutine at D85
$C66    $C9CE   RND      V9, #CE         ; V9 = random & CE
$C68    $F7DA   UNKNOWN  F7DA            ; Unknown Fxxx instruction
$C6A    $05E9   SYS      $5E9            ; System call to 5E9
$C6C    $D203   DRW      V2, V0, #3      ; Draw 3-byte sprite at V2, V0
$C6E    $492F   SNE      V9, #2F         ; Skip if V9 != 47
$C70    $DE60   DRW      VE, V6, #0      ; Draw 0-byte sprite at VE, V6
$C72    $2239   CALL     $239            ; Call subroutine at 239
$C74    $63B6   LD       V3, #B6         ; Load 182 into V3
$C76    $39EB   SE       V9, #EB         ; Skip if V9 == 235
$C78    $A27F   LD       I, $27F         ; Load 27F into I
$C7A    $45A1   SNE      V5, #A1         ; Skip if V5 != 161
$C7C    $1CD9   JP       $CD9            ; Jump to CD9
$C7E    $CB7C   RND      VB, #7C         ; VB = random & 7C
$C80    $444F   SNE      V4, #4F         ; Skip if V4 != 79
$C82    $A4DE   LD       I, $4DE         ; Load 4DE into I
$C84    $1DB9   JP       $DB9            ; Jump to DB9
$C86    $F2D2   UNKNOWN  F2D2            ; Unknown Fxxx instruction
$C88    $006F   SYS      $06F            ; System call to 06F
$C8A    $A426   LD       I, $426         ; Load 426 into I
$C8C    $E3CD   UNKNOWN  $E3CD           ; Unknown Exxx instruction
$C8E    $56ED   UNKNOWN  $56ED           ; Unknown 5xxx instruction
$C90    $F9C8   UNKNOWN  F9C8            ; Unknown Fxxx instruction
$C92    $0334   SYS      $334            ; System call to 334
$C94    $74B6   ADD      V4, #B6         ; Add 182 to V4
$C96    $EC5D   UNKNOWN  $EC5D           ; Unknown Exxx instruction
$C98    $4D72   SNE      VD, #72         ; Skip if VD != 114
$C9A    $AA76   LD       I, $A76         ; Load A76 into I
$C9C    $A8A8   LD       I, $8A8         ; Load 8A8 into I
$C9E    $1AC5   JP       $AC5            ; Jump to AC5
$CA0    $06E1   SYS      $6E1            ; System call to 6E1
$CA2    $F16F   UNKNOWN  F16F            ; Unknown Fxxx instruction
$CA4    $C457   RND      V4, #57         ; V4 = random & 57
$CA6    $2A3E   CALL     $A3E            ; Call subroutine at A3E
$CA8    $E7C0   UNKNOWN  $E7C0           ; Unknown Exxx instruction
$CAA    $CE2D   RND      VE, #2D         ; VE = random & 2D
$CAC    $1A30   JP       $A30            ; Jump to A30
$CAE    $7645   ADD      V6, #45         ; Add 69 to V6
$CB0    $D7C4   DRW      V7, VC, #4      ; Draw 4-byte sprite at V7, VC
$CB2    $6512   LD       V5, #12         ; Load 18 into V5
$CB4    $1508   JP       $508            ; Jump to 508
$CB6    $802A   UNKNOWN  802A            ; Unknown 8xxx instruction
$CB8    $491C   SNE      V9, #1C         ; Skip if V9 != 28
$CBA    $5E92   UNKNOWN  $5E92           ; Unknown 5xxx instruction
$CBC    $2119   CALL     $119            ; Call subroutine at 119
$CBE    $2A70   CALL     $A70            ; Call subroutine at A70
$CC0    $DBED   DRW      VB, VE, #D      ; Draw 13-byte sprite at VB, VE
$CC2    $FB2A   UNKNOWN  FB2A            ; Unknown Fxxx instruction
$CC4    $3C28   SE       VC, #28         ; Skip if VC == 40
$CC6    $1198   JP       $198            ; Jump to 198
$CC8    $E131   UNKNOWN  $E131           ; Unknown Exxx instruction
$CCA    $8962   AND      V9, V6          ; V9 &= V6
$CCC    $3C7C   SE       VC, #7C         ; Skip if VC == 124
$CCE    $9B58   UNKNOWN  $9B58           ; Unknown 9xxx instruction
$CD0    $5F87   UNKNOWN  $5F87           ; Unknown 5xxx instruction
$CD2    $8C2F   UNKNOWN  8C2F            ; Unknown 8xxx instruction
$CD4    $7D4E   ADD      VD, #4E         ; Add 78 to VD
$CD6    $F846   UNKNOWN  F846            ; Unknown Fxxx instruction
$CD8    $9C71   UNKNOWN  $9C71           ; Unknown 9xxx instruction
$CDA    $8837   SUBN     V8, V3          ; V8 = V3 - V8, VF = !borrow
$CDC    $932B   UNKNOWN  $932B           ; Unknown 9xxx instruction
$CDE    $FE74   UNKNOWN  FE74            ; Unknown Fxxx instruction
$CE0    $15D9   JP       $5D9            ; Jump to 5D9
$CE2    $3436   SE       V4, #36         ; Skip if V4 == 54
$CE4    $7844   ADD      V8, #44         ; Add 68 to V8
$CE6    $8BA2   AND      VB, VA          ; VB &= VA
$CE8    $A840   LD       I, $840         ; Load 840 into I
$CEA    $6344   LD       V3, #44         ; Load 68 into V3
$CEC    $4A13   SNE      VA, #13         ; Skip if VA != 19
$CEE    $18D8   JP       $8D8            ; Jump to 8D8
$CF0    $421E   SNE      V2, #1E         ; Skip if V2 != 30
$CF2    $B5D4   JP       V0, $5D4        ; Jump to V0 + 5D4
$CF4    $8567   SUBN     V5, V6          ; V5 = V6 - V5, VF = !borrow
$CF6    $8231   OR       V2, V3          ; V2 |= V3
$CF8    $6CCD   LD       VC, #CD         ; Load 205 into VC
$CFA    $D0FB   DRW      V0, VF, #B      ; Draw 11-byte sprite at V0, VF
$CFC    $926F   UNKNOWN  $926F           ; Unknown 9xxx instruction
$CFE    $9BFF   UNKNOWN  $9BFF           ; Unknown 9xxx instruction
$D00    $7EE3   ADD      VE, #E3         ; Add 227 to VE
$D02    $7DB0   ADD      VD, #B0         ; Add 176 to VD
$D04    $5C2B   UNKNOWN  $5C2B           ; Unknown 5xxx instruction
$D06    $AA35   LD       I, $A35         ; Load A35 into I
$D08    $4879   SNE      V8, #79         ; Skip if V8 != 121
$D0A    $F4D9   UNKNOWN  F4D9            ; Unknown Fxxx instruction
$D0C    $5F41   UNKNOWN  $5F41           ; Unknown 5xxx instruction
$D0E    $FEAD   UNKNOWN  FEAD            ; Unknown Fxxx instruction
$D10    $6664   LD       V6, #64         ; Load 100 into V6
$D12    $31A1   SE       V1, #A1         ; Skip if V1 == 161
$D14    $EB11   UNKNOWN  $EB11           ; Unknown Exxx instruction
$D16    $A697   LD       I, $697         ; Load 697 into I
$D18    $020D   SYS      $20D            ; System call to 20D
$D1A    $F519   UNKNOWN  F519            ; Unknown Fxxx instruction
$D1C    $C21B   RND      V2, #1B         ; V2 = random & 1B
$D1E    $2013   CALL     $013            ; Call subroutine at 013
$D20    $D01F   DRW      V0, V1, #F      ; Draw 15-byte sprite at V0, V1
$D22    $2356   CALL     $356            ; Call subroutine at 356
$D24    $D48F   DRW      V4, V8, #F      ; Draw 15-byte sprite at V4, V8
$D26    $3AC9   SE       VA, #C9         ; Skip if VA == 201
$D28    $7722   ADD      V7, #22         ; Add 34 to V7
$D2A    $D6BD   DRW      V6, VB, #D      ; Draw 13-byte sprite at V6, VB
$D2C    $13C8   JP       $3C8            ; Jump to 3C8
$D2E    $732D   ADD      V3, #2D         ; Add 45 to V3
$D30    $9127   UNKNOWN  $9127           ; Unknown 9xxx instruction
$D32    $3025   SE       V0, #25         ; Skip if V0 == 37
$D34    $4C0A   SNE      VC, #0A         ; Skip if VC != 10
$D36    $2A53   CALL     $A53            ; Call subroutine at A53
$D38    $AE69   LD       I, $E69         ; Load E69 into I
$D3A    $DEF8   DRW      VE, VF, #8      ; Draw 8-byte sprite at VE, VF
$D3C    $841E   SHL      V4              ; V4 <<= 1, VF = MSB
$D3E    $708D   ADD      V0, #8D         ; Add 141 to V0
$D40    $AF63   LD       I, $F63         ; Load F63 into I
$D42    $91D7   UNKNOWN  $91D7           ; Unknown 9xxx instruction
$D44    $D50C   DRW      V5, V0, #C      ; Draw 12-byte sprite at V5, V0
$D46    $2757   CALL     $757            ; Call subroutine at 757
$D48    $3C82   SE       VC, #82         ; Skip if VC == 130
$D4A    $9EE6   UNKNOWN  $9EE6           ; Unknown 9xxx instruction
$D4C    $F168   UNKNOWN  F168            ; Unknown Fxxx instruction
$D4E    $61E8   LD       V1, #E8         ; Load 232 into V1
$D50    $3869   SE       V8, #69         ; Skip if V8 == 105
$D52    $5907   UNKNOWN  $5907           ; Unknown 5xxx instruction
$D54    $3559   SE       V5, #59         ; Skip if V5 == 89
$D56    $4B6A   SNE      VB, #6A         ; Skip if VB != 106
$D58    $4FA1   SNE      VF, #A1         ; Skip if VF != 161
$D5A    $F0E4   UNKNOWN  F0E4            ; Unknown Fxxx instruction
$D5C    $ABA5   LD       I, $BA5         ; Load BA5 into I
$D5E    $854D   UNKNOWN  854D            ; Unknown 8xxx instruction
$D60    $EA64   UNKNOWN  $EA64           ; Unknown Exxx instruction
$D62    $56A2   UNKNOWN  $56A2           ; Unknown 5xxx instruction
$D64    $3842   SE       V8, #42         ; Skip if V8 == 66
$D66    $507D   UNKNOWN  $507D           ; Unknown 5xxx instruction
$D68    $0C06   SYS      $C06            ; System call to C06
$D6A    $DFBF   DRW      VF, VB, #F      ; Draw 15-byte sprite at VF, VB
$D6C    $D20E   DRW      V2, V0, #E      ; Draw 14-byte sprite at V2, V0
$D6E    $B987   JP       V0, $987        ; Jump to V0 + 987
$D70    $E536   UNKNOWN  $E536           ; Unknown Exxx instruction
$D72    $FC56   UNKNOWN  FC56            ; Unknown Fxxx instruction
$D74    $9A76   UNKNOWN  $9A76           ; Unknown 9xxx instruction
$D76    $E286   UNKNOWN  $E286           ; Unknown Exxx instruction
$D78    $2FEE   CALL     $FEE            ; Call subroutine at FEE
$D7A    $353D   SE       V5, #3D         ; Skip if V5 == 61
$D7C    $E52C   UNKNOWN  $E52C           ; Unknown Exxx instruction
$D7E    $D245   DRW      V2, V4, #5      ; Draw 5-byte sprite at V2, V4
$D80    $D9B4   DRW      V9, VB, #4      ; Draw 4-byte sprite at V9, VB
$D82    $8026   SHR      V0              ; V0 >>= 1, VF = LSB
$D84    $3465   SE       V4, #65         ; Skip if V4 == 101
$D86    $12C2   JP       $2C2            ; Jump to 2C2
$D88    $89A0   LD       V9, VA          ; V9 = VA
$D8A    $B505   JP       V0, $505        ; Jump to V0 + 505
$D8C    $AEE0   LD       I, $EE0         ; Load EE0 into I
$D8E    $AE2F   LD       I, $E2F         ; Load E2F into I
$D90    $9100   SNE      V1, V0          ; Skip if V1 != V0
$D92    $E06B   UNKNOWN  $E06B           ; Unknown Exxx instruction
$D94    $0452   SYS      $452            ; System call to 452
$D96    $4E1E   SNE      VE, #1E         ; Skip if VE != 30
$D98    $BD46   JP       V0, $D46        ; Jump to V0 + D46
$D9A    $010D   SYS      $10D            ; System call to 10D
$D9C    $6978   LD       V9, #78         ; Load 120 into V9
$D9E    $CCD3   RND      VC, #D3         ; VC = random & D3
$DA0    $EE1C   UNKNOWN  $EE1C           ; Unknown Exxx instruction
$DA2    $5469   UNKNOWN  $5469           ; Unknown 5xxx instruction
$DA4    $040A   SYS      $40A            ; System call to 40A
$DA6    $B59C   JP       V0, $59C        ; Jump to V0 + 59C
$DA8    $A577   LD       I, $577         ; Load 577 into I
$DAA    $ED02   UNKNOWN  $ED02           ; Unknown Exxx instruction
$DAC    $C90B   RND      V9, #0B         ; V9 = random & 0B
$DAE    $3DB1   SE       VD, #B1         ; Skip if VD == 177
$DB0    $42F0   SNE      V2, #F0         ; Skip if V2 != 240
$DB2    $53C9   UNKNOWN  $53C9           ; Unknown 5xxx instruction
$DB4    $D05D   DRW      V0, V5, #D      ; Draw 13-byte sprite at V0, V5
$DB6    $D01A   DRW      V0, V1, #A      ; Draw 10-byte sprite at V0, V1
$DB8    $C59B   RND      V5, #9B         ; V5 = random & 9B
$DBA    $A293   LD       I, $293         ; Load 293 into I
$DBC    $F6B7   UNKNOWN  F6B7            ; Unknown Fxxx instruction
$DBE    $5E75   UNKNOWN  $5E75           ; Unknown 5xxx instruction
$DC0    $E4DC   UNKNOWN  $E4DC           ; Unknown Exxx instruction
$DC2    $B384   JP       V0, $384        ; Jump to V0 + 384
$DC4    $F802   UNKNOWN  F802            ; Unknown Fxxx instruction
$DC6    $05EA   SYS      $5EA            ; System call to 5EA
$DC8    $14A7   JP       $4A7            ; Jump to 4A7
$DCA    $1E26   JP       $E26            ; Jump to E26
$DCC    $0F04   SYS      $F04            ; System call to F04
$DCE    $4F93   SNE      VF, #93         ; Skip if VF != 147
$DD0    $C24E   RND      V2, #4E         ; V2 = random & 4E
$DD2    $026E   SYS      $26E            ; System call to 26E
$DD4    $EEBB   UNKNOWN  $EEBB           ; Unknown Exxx instruction
$DD6    $B7E1   JP       V0, $7E1        ; Jump to V0 + 7E1
$DD8    $3C07   SE       VC, #07         ; Skip if VC == 7
$DDA    $7012   ADD      V0, #12         ; Add 18 to V0
$DDC    $D34E   DRW      V3, V4, #E      ; Draw 14-byte sprite at V3, V4
$DDE    $FA5C   UNKNOWN  FA5C            ; Unknown Fxxx instruction
$DE0    $C22C   RND      V2, #2C         ; V2 = random & 2C
$DE2    $29F1   CALL     $9F1            ; Call subroutine at 9F1
$DE4    $4A7A   SNE      VA, #7A         ; Skip if VA != 122
$DE6    $454F   SNE      V5, #4F         ; Skip if V5 != 79
$DE8    $CB35   RND      VB, #35         ; VB = random & 35
$DEA    $C200   RND      V2, #00         ; V2 = random & 00
$DEC    $785E   ADD      V8, #5E         ; Add 94 to V8
$DEE    $19A7   JP       $9A7            ; Jump to 9A7
$DF0    $B0E3   JP       V0, $0E3        ; Jump to V0 + 0E3
$DF2    $E42B   UNKNOWN  $E42B           ; Unknown Exxx instruction
$DF4    $E90C   UNKNOWN  $E90C           ; Unknown Exxx instruction
$DF6    $FB55   LD       [I], VB         ; Store V0-VB at I
$DF8    $4C8C   SNE      VC, #8C         ; Skip if VC != 140
$DFA    $86F9   UNKNOWN  86F9            ; Unknown 8xxx instruction
$DFC    $220A   CALL     $20A            ; Call subroutine at 20A
$DFE    $63A1   LD       V3, #A1         ; Load 161 into V3
$E00    $37D3   SE       V7, #D3         ; Skip if V7 == 211
$E02    $EB84   UNKNOWN  $EB84           ; Unknown Exxx instruction
$E04    $908C   UNKNOWN  $908C           ; Unknown 9xxx instruction
$E06    $C5D9   RND      V5, #D9         ; V5 = random & D9
$E08    $183A   JP       $83A            ; Jump to 83A
$E0A    $500A   UNKNOWN  $500A           ; Unknown 5xxx instruction
$E0C    $BC44   JP       V0, $C44        ; Jump to V0 + C44
$E0E    $1D26   JP       $D26            ; Jump to D26
$E10    $4EC0   SNE      VE, #C0         ; Skip if VE != 192
$E12    $15A1   JP       $5A1            ; Jump to 5A1
$E14    $3363   SE       V3, #63         ; Skip if V3 == 99
$E16    $6586   LD       V5, #86         ; Load 134 into V5
$E18    $D735   DRW      V7, V3, #5      ; Draw 5-byte sprite at V7, V3
$E1A    $FAA1   UNKNOWN  FAA1            ; Unknown Fxxx instruction
$E1C    $3C93   SE       VC, #93         ; Skip if VC == 147
$E1E    $8D88   UNKNOWN  8D88            ; Unknown 8xxx instruction
$E20    $C9C6   RND      V9, #C6         ; V9 = random & C6
$E22    $8456   SHR      V4              ; V4 >>= 1, VF = LSB
$E24    $6862   LD       V8, #62         ; Load 98 into V8
$E26    $F941   UNKNOWN  F941            ; Unknown Fxxx instruction
$E28    $4196   SNE      V1, #96         ; Skip if V1 != 150
$E2A    $2A4A   CALL     $A4A            ; Call subroutine at A4A
$E2C    $ADCB   LD       I, $DCB         ; Load DCB into I
$E2E    $56B2   UNKNOWN  $56B2           ; Unknown 5xxx instruction
$E30    $D299   DRW      V2, V9, #9      ; Draw 9-byte sprite at V2, V9
$E32    $7C75   ADD      VC, #75         ; Add 117 to VC
$E34    $0924   SYS      $924            ; System call to 924
$E36    $0F2A   SYS      $F2A            ; System call to F2A
$E38    $61FE   LD       V1, #FE         ; Load 254 into V1
$E3A    $420A   SNE      V2, #0A         ; Skip if V2 != 10
$E3C    $A7CA   LD       I, $7CA         ; Load 7CA into I
$E3E    $4BF3   SNE      VB, #F3         ; Skip if VB != 243
$E40    $1D1B   JP       $D1B            ; Jump to D1B
$E42    $D204   DRW      V2, V0, #4      ; Draw 4-byte sprite at V2, V0
$E44    $9ABE   UNKNOWN  $9ABE           ; Unknown 9xxx instruction
$E46    $71A1   ADD      V1, #A1         ; Add 161 to V1
$E48    $DACD   DRW      VA, VC, #D      ; Draw 13-byte sprite at VA, VC
$E4A    $3895   SE       V8, #95         ; Skip if V8 == 149
$E4C    $9090   SNE      V0, V9          ; Skip if V0 != V9
$E4E    $BEF4   JP       V0, $EF4        ; Jump to V0 + EF4
$E50    $D68F   DRW      V6, V8, #F      ; Draw 15-byte sprite at V6, V8
$E52    $FEE3   UNKNOWN  FEE3            ; Unknown Fxxx instruction
$E54    $ACE8   LD       I, $CE8         ; Load CE8 into I
$E56    $56B9   UNKNOWN  $56B9           ; Unknown 5xxx instruction
$E58    $3B75   SE       VB, #75         ; Skip if VB == 117
$E5A    $5DF8   UNKNOWN  $5DF8           ; Unknown 5xxx instruction
$E5C    $4E02   SNE      VE, #02         ; Skip if VE != 2
$E5E    $C6C2   RND      V6, #C2         ; V6 = random & C2
$E60    $1DAE   JP       $DAE            ; Jump to DAE
$E62    $EE31   UNKNOWN  $EE31           ; Unknown Exxx instruction
$E64    $BFCA   JP       V0, $FCA        ; Jump to V0 + FCA
$E66    $0D8D   SYS      $D8D            ; System call to D8D
$E68    $FCCE   UNKNOWN  FCCE            ; Unknown Fxxx instruction
$E6A    $4753   SNE      V7, #53         ; Skip if V7 != 83
$E6C    $4E48   SNE      VE, #48         ; Skip if VE != 72
$E6E    $5E63   UNKNOWN  $5E63           ; Unknown 5xxx instruction
$E70    $15AE   JP       $5AE            ; Jump to 5AE
$E72    $0B4F   SYS      $B4F            ; System call to B4F
$E74    $7B38   ADD      VB, #38         ; Add 56 to VB
$E76    $8DF1   OR       VD, VF          ; VD |= VF
$E78    $898E   SHL      V9              ; V9 <<= 1, VF = MSB
$E7A    $E398   UNKNOWN  $E398           ; Unknown Exxx instruction
$E7C    $8D46   SHR      VD              ; VD >>= 1, VF = LSB
$E7E    $E4BD   UNKNOWN  $E4BD           ; Unknown Exxx instruction
$E80    $F0EA   UNKNOWN  F0EA            ; Unknown Fxxx instruction
$E82    $9F77   UNKNOWN  $9F77           ; Unknown 9xxx instruction
$E84    $24E0   CALL     $4E0            ; Call subroutine at 4E0
$E86    $DA28   DRW      VA, V2, #8      ; Draw 8-byte sprite at VA, V2
$E88    $D64E   DRW      V6, V4, #E      ; Draw 14-byte sprite at V6, V4
$E8A    $2078   CALL     $078            ; Call subroutine at 078
$E8C    $0713   SYS      $713            ; System call to 713
$E8E    $0484   SYS      $484            ; System call to 484
$E90    $0896   SYS      $896            ; System call to 896
$E92    $D1E1   DRW      V1, VE, #1      ; Draw 1-byte sprite at V1, VE
$E94    $5928   UNKNOWN  $5928           ; Unknown 5xxx instruction
$E96    $A071   LD       I, $071         ; Load 071 into I
$E98    $0760   SYS      $760            ; System call to 760
$E9A    $82E7   SUBN     V2, VE          ; V2 = VE - V2, VF = !borrow
$E9C    $52A5   UNKNOWN  $52A5           ; Unknown 5xxx instruction
$E9E    $13EC   JP       $3EC            ; Jump to 3EC
$EA0    $3E05   SE       VE, #05         ; Skip if VE == 5
$EA2    $AF38   LD       I, $F38         ; Load F38 into I
$EA4    $142C   JP       $42C            ; Jump to 42C
$EA6    $A089   LD       I, $089         ; Load 089 into I
$EA8    $7C6F   ADD      VC, #6F         ; Add 111 to VC
$EAA    $CB86   RND      VB, #86         ; VB = random & 86
$EAC    $BB7B   JP       V0, $B7B        ; Jump to V0 + B7B
$EAE    $4868   SNE      V8, #68         ; Skip if V8 != 104
$EB0    $661F   LD       V6, #1F         ; Load 31 into V6
$EB2    $1F7E   JP       $F7E            ; Jump to F7E
$EB4    $2E8C   CALL     $E8C            ; Call subroutine at E8C
$EB6    $5764   UNKNOWN  $5764           ; Unknown 5xxx instruction
$EB8    $F61B   UNKNOWN  F61B            ; Unknown Fxxx instruction
$EBA    $19BB   JP       $9BB            ; Jump to 9BB
$EBC    $7415   ADD      V4, #15         ; Add 21 to V4
$EBE    $FBC5   UNKNOWN  FBC5            ; Unknown Fxxx instruction
$EC0    $9891   UNKNOWN  $9891           ; Unknown 9xxx instruction
$EC2    $093B   SYS      $93B            ; System call to 93B
$EC4    $793C   ADD      V9, #3C         ; Add 60 to V9
$EC6    $4506   SNE      V5, #06         ; Skip if V5 != 6
$EC8    $23B6   CALL     $3B6            ; Call subroutine at 3B6
$ECA    $0142   SYS      $142            ; System call to 142
$ECC    $71DE   ADD      V1, #DE         ; Add 222 to V1
$ECE    $CD94   RND      VD, #94         ; VD = random & 94
$ED0    $6316   LD       V3, #16         ; Load 22 into V3
$ED2    $F54A   UNKNOWN  F54A            ; Unknown Fxxx instruction
$ED4    $931C   UNKNOWN  $931C           ; Unknown 9xxx instruction
$ED6    $E686   UNKNOWN  $E686           ; Unknown Exxx instruction
$ED8    $83B4   ADD      V3, VB          ; V3 += VB, VF = carry
$EDA    $BFE8   JP       V0, $FE8        ; Jump to V0 + FE8
$EDC    $7F18   ADD      VF, #18         ; Add 24 to VF
$EDE    $1B3A   JP       $B3A            ; Jump to B3A
$EE0    $F19E   UNKNOWN  F19E            ; Unknown Fxxx instruction
$EE2    $C316   RND      V3, #16         ; V3 = random & 16
$EE4    $AB2C   LD       I, $B2C         ; Load B2C into I
$EE6    $787B   ADD      V8, #7B         ; Add 123 to V8
$EE8    $5D27   UNKNOWN  $5D27           ; Unknown 5xxx instruction
$EEA    $FBC6   UNKNOWN  FBC6            ; Unknown Fxxx instruction
$EEC    $189B   JP       $89B            ; Jump to 89B
$EEE    $7A24   ADD      VA, #24         ; Add 36 to VA
$EF0    $7E7F   ADD      VE, #7F         ; Add 127 to VE
$EF2    $FB49   UNKNOWN  FB49            ; Unknown Fxxx instruction
$EF4    $7491   ADD      V4, #91         ; Add 145 to V4
$EF6    $B2E7   JP       V0, $2E7        ; Jump to V0 + 2E7
$EF8    $AE21   LD       I, $E21         ; Load E21 into I
$EFA    $52FB   UNKNOWN  $52FB           ; Unknown 5xxx instruction
$EFC    $CED8   RND      VE, #D8         ; VE = random & D8
$EFE    $D510   DRW      V5, V1, #0      ; Draw 0-byte sprite at V5, V1
$F00    $9494   UNKNOWN  $9494           ; Unknown 9xxx instruction
$F02    $EE94   UNKNOWN  $EE94           ; Unknown Exxx instruction
$F04    $29AF   CALL     $9AF            ; Call subroutine at 9AF
$F06    $00D9   SYS      $0D9            ; System call to 0D9
$F08    $AF51   LD       I, $F51         ; Load F51 into I
$F0A    $F4EE   UNKNOWN  F4EE            ; Unknown Fxxx instruction
$F0C    $509A   UNKNOWN  $509A           ; Unknown 5xxx instruction
$F0E    $93DA   UNKNOWN  $93DA           ; Unknown 9xxx instruction
$F10    $61A4   LD       V1, #A4         ; Load 164 into V1
$F12    $4823   SNE      V8, #23         ; Skip if V8 != 35
$F14    $6CFD   LD       VC, #FD         ; Load 253 into VC
$F16    $1843   JP       $843            ; Jump to 843
$F18    $DFC5   DRW      VF, VC, #5      ; Draw 5-byte sprite at VF, VC
$F1A    $6257   LD       V2, #57         ; Load 87 into V2
$F1C    $4BA9   SNE      VB, #A9         ; Skip if VB != 169
$F1E    $EF27   UNKNOWN  $EF27           ; Unknown Exxx instruction
$F20    $CFB0   RND      VF, #B0         ; VF = random & B0
$F22    $E1B8   UNKNOWN  $E1B8           ; Unknown Exxx instruction
$F24    $637B   LD       V3, #7B         ; Load 123 into V3
$F26    $2F2C   CALL     $F2C            ; Call subroutine at F2C
$F28    $A144   LD       I, $144         ; Load 144 into I
$F2A    $2AAC   CALL     $AAC            ; Call subroutine at AAC
$F2C    $B30E   JP       V0, $30E        ; Jump to V0 + 30E
$F2E    $1569   JP       $569            ; Jump to 569
$F30    $20E9   CALL     $0E9            ; Call subroutine at 0E9
$F32    $6599   LD       V5, #99         ; Load 153 into V5
$F34    $0300   SYS      $300            ; System call to 300
$F36    $43E7   SNE      V3, #E7         ; Skip if V3 != 231
$F38    $2A56   CALL     $A56            ; Call subroutine at A56
$F3A    $8EA5   SUB      VE, VA          ; VE -= VA, VF = !borrow
$F3C    $FDB5   UNKNOWN  FDB5            ; Unknown Fxxx instruction
$F3E    $CECE   RND      VE, #CE         ; VE = random & CE
$F40    $2C3A   CALL     $C3A            ; Call subroutine at C3A
$F42    $7420   ADD      V4, #20         ; Add 32 to V4
$F44    $572C   UNKNOWN  $572C           ; Unknown 5xxx instruction
$F46    $79A5   ADD      V9, #A5         ; Add 165 to V9
$F48    $E87E   UNKNOWN  $E87E           ; Unknown Exxx instruction
$F4A    $893B   UNKNOWN  893B            ; Unknown 8xxx instruction
$F4C    $9BCC   UNKNOWN  $9BCC           ; Unknown 9xxx instruction
$F4E    $6E8C   LD       VE, #8C         ; Load 140 into VE
$F50    $1320   JP       $320            ; Jump to 320
$F52    $3C88   SE       VC, #88         ; Skip if VC == 136
$F54    $24C2   CALL     $4C2            ; Call subroutine at 4C2
$F56    $B9E1   JP       V0, $9E1        ; Jump to V0 + 9E1
$F58    $A797   LD       I, $797         ; Load 797 into I
$F5A    $3FFF   SE       VF, #FF         ; Skip if VF == 255
$F5C    $09B0   SYS      $9B0            ; System call to 9B0
$F5E    $87DE   SHL      V7              ; V7 <<= 1, VF = MSB
$F60    $D610   DRW      V6, V1, #0      ; Draw 0-byte sprite at V6, V1
$F62    $F6DD   UNKNOWN  F6DD            ; Unknown Fxxx instruction
$F64    $F950   UNKNOWN  F950            ; Unknown Fxxx instruction
$F66    $A5B0   LD       I, $5B0         ; Load 5B0 into I
$F68    $DCD4   DRW      VC, VD, #4      ; Draw 4-byte sprite at VC, VD
$F6A    $FE41   UNKNOWN  FE41            ; Unknown Fxxx instruction
$F6C    $A182   LD       I, $182         ; Load 182 into I
$F6E    $16A7   JP       $6A7            ; Jump to 6A7
$F70    $B6E8   JP       V0, $6E8        ; Jump to V0 + 6E8
$F72    $1F33   JP       $F33            ; Jump to F33
$F74    $EBEE   UNKNOWN  $EBEE           ; Unknown Exxx instruction
$F76    $8DBD   UNKNOWN  8DBD            ; Unknown 8xxx instruction
$F78    $E648   UNKNOWN  $E648           ; Unknown Exxx instruction
$F7A    $5B1D   UNKNOWN  $5B1D           ; Unknown 5xxx instruction
$F7C    $3BD0   SE       VB, #D0         ; Skip if VB == 208
$F7E    $B94C   JP       V0, $94C        ; Jump to V0 + 94C
$F80    $5859   UNKNOWN  $5859           ; Unknown 5xxx instruction
$F82    $B472   JP       V0, $472        ; Jump to V0 + 472
$F84    $C19C   RND      V1, #9C         ; V1 = random & 9C
$F86    $C4CA   RND      V4, #CA         ; V4 = random & CA
$F88    $1BFE   JP       $BFE            ; Jump to BFE
$F8A    $A431   LD       I, $431         ; Load 431 into I
$F8C    $9B10   SNE      VB, V1          ; Skip if VB != V1
$F8E    $41B7   SNE      V1, #B7         ; Skip if V1 != 183
$F90    $812E   SHL      V1              ; V1 <<= 1, VF = MSB
$F92    $FBB6   UNKNOWN  FBB6            ; Unknown Fxxx instruction
$F94    $D250   DRW      V2, V5, #0      ; Draw 0-byte sprite at V2, V5
$F96    $1636   JP       $636            ; Jump to 636
$F98    $0E82   SYS      $E82            ; System call to E82
$F9A    $5D13   UNKNOWN  $5D13           ; Unknown 5xxx instruction
$F9C    $BA1E   JP       V0, $A1E        ; Jump to V0 + A1E
$F9E    $0F2F   SYS      $F2F            ; System call to F2F
$FA0    $DB87   DRW      VB, V8, #7      ; Draw 7-byte sprite at VB, V8
$FA2    $D653   DRW      V6, V5, #3      ; Draw 3-byte sprite at V6, V5
$FA4    $04CF   SYS      $4CF            ; System call to 4CF
$FA6    $9F41   UNKNOWN  $9F41           ; Unknown 9xxx instruction
$FA8    $A1E2   LD       I, $1E2         ; Load 1E2 into I
$FAA    $8E07   SUBN     VE, V0          ; VE = V0 - VE, VF = !borrow
$FAC    $D612   DRW      V6, V1, #2      ; Draw 2-byte sprite at V6, V1
$FAE    $A616   LD       I, $616         ; Load 616 into I
$FB0    $2D29   CALL     $D29            ; Call subroutine at D29
$FB2    $C7C3   RND      V7, #C3         ; V7 = random & C3
$FB4    $3F30   SE       VF, #30         ; Skip if VF == 48
$FB6    $EF01   UNKNOWN  $EF01           ; Unknown Exxx instruction
$FB8    $CD8C   RND      VD, #8C         ; VD = random & 8C
$FBA    $8210   LD       V2, V1          ; V2 = V1
$FBC    $3998   SE       V9, #98         ; Skip if V9 == 152
$FBE    $DDE0   DRW      VD, VE, #0      ; Draw 0-byte sprite at VD, VE
$FC0    $E66A   UNKNOWN  $E66A           ; Unknown Exxx instruction
$FC2    $7EB8   ADD      VE, #B8         ; Add 184 to VE
$FC4    $9443   UNKNOWN  $9443           ; Unknown 9xxx instruction
$FC6    $3D02   SE       VD, #02         ; Skip if VD == 2
$FC8    $B894   JP       V0, $894        ; Jump to V0 + 894
$FCA    $0BD8   SYS      $BD8            ; System call to BD8
$FCC    $EAE3   UNKNOWN  $EAE3           ; Unknown Exxx instruction
$FCE    $4B55   SNE      VB, #55         ; Skip if VB != 85
$FD0    $411A   SNE      V1, #1A         ; Skip if V1 != 26
$FD2    $00A7   SYS      $0A7            ; System call to 0A7
$FD4    $6262   LD       V2, #62         ; Load 98 into V2
$FD6    $5AFB   UNKNOWN  $5AFB           ; Unknown 5xxx instruction
$FD8    $9B82   UNKNOWN  $9B82           ; Unknown 9xxx instruction
$FDA    $AFD6   LD       I, $FD6         ; Load FD6 into I
$FDC    $FDE0   UNKNOWN  FDE0            ; Unknown Fxxx instruction
$FDE    $47B9   SNE      V7, #B9         ; Skip if V7 != 185
$FE0    $E47A   UNKNOWN  $E47A           ; Unknown Exxx instruction
$FE2    $691C   LD       V9, #1C         ; Load 28 into V9
$FE4    $9637   UNKNOWN  $9637           ; Unknown 9xxx instruction
$FE6    $AC53   LD       I, $C53         ; Load C53 into I
$FE8    $600E   LD       V0, #0E         ; Load 14 into V0
$FEA    $237D   CALL     $37D            ; Call subroutine at 37D
$FEC    $5998   UNKNOWN  $5998           ; Unknown 5xxx instruction
$FEE    $FAE8   UNKNOWN  FAE8            ; Unknown Fxxx instruction
$FF0    $15D7   JP       $5D7            ; Jump to 5D7
$FF2    $604A   LD       V0, #4A         ; Load 74 into V0
$FF4    $E113   UNKNOWN  $E113           ; Unknown Exxx instruction
$FF6    $5844   UNKNOWN  $5844           ; Unknown 5xxx instruction
$FF8    $086C   SYS      $86C            ; System call to 86C
$FFA    $0FB0   SYS      $FB0            ; System call to FB0
$FFC    $5D14   UNKNOWN  $5D14           ; Unknown 5xxx instruction
$FFE    $954C   UNKNOWN  $954C           ; Unknown 9xxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 469 (26.2%)
  JP      : 225 (12.6%)
  LD      : 225 (12.6%)
  SE      : 133 ( 7.4%)
  ADD     : 122 ( 6.8%)
  DRW     : 121 ( 6.8%)
  RND     : 119 ( 6.6%)
  SNE     : 113 ( 6.3%)
  SYS     : 106 ( 5.9%)
  CALL    : 106 ( 5.9%)
  SHR     :  11 ( 0.6%)
  SUBN    :   9 ( 0.5%)
  SHL     :   8 ( 0.4%)
  AND     :   8 ( 0.4%)
  OR      :   6 ( 0.3%)
  SUB     :   5 ( 0.3%)
  XOR     :   5 ( 0.3%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 347 (19.4%)
Arithmetic Operations: 155 (8.6%)
