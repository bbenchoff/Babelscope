
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B3393D01_I35717_C2636_d890d7b408ff.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 3393
Instance: 35717
Direction: ascending
Final Array: [32, 32, 32, 32, 32, 32, 32, 63]
Operations: R:0 W:7 C:227 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 116
Sort Array References:
  $218: LD I, $FE4 ; Load FE4 into I
  $22A: LD I, $488 ; Load 488 into I
  $23C: LD I, $DAB ; Load DAB into I
  $26C: LD I, $BC1 ; Load BC1 into I
  $2A0: LD I, $D49 ; Load D49 into I
  $330: LD I, $054 ; Load 054 into I
  $334: LD I, $25C ; Load 25C into I
  $348: LD I, $E83 ; Load E83 into I
  $358: LD I, $553 ; Load 553 into I
  $35E: LD I, $8B5 ; Load 8B5 into I
  $37E: LD I, $3D7 ; Load 3D7 into I
  $38C: LD I, $813 ; Load 813 into I
  $396: ADD I, V2 ; I ADDRESS MANIPULATION
  $3C2: LD I, $4DA ; Load 4DA into I
  $3C4: LD I, $505 ; Load 505 into I
  $3DE: LD I, $C1C ; Load C1C into I
  $3E0: LD I, $93D ; Load 93D into I
  $3FE: LD I, $37B ; Load 37B into I
  $400: LD I, $EAD ; Load EAD into I
  $404: LD I, $7D9 ; Load 7D9 into I
  $440: LD I, $C1B ; Load C1B into I
  $458: LD I, $F37 ; Load F37 into I
  $4A4: LD I, $116 ; Load 116 into I
  $4BC: LD I, $096 ; Load 096 into I
  $4C4: LD I, $99E ; Load 99E into I
  $558: LD I, $7F7 ; Load 7F7 into I
  $55E: LD I, $122 ; Load 122 into I
  $59C: LD I, $C9E ; Load C9E into I
  $5BA: LD I, $FEA ; Load FEA into I
  $5E6: LD I, $223 ; Load 223 into I
  $5EE: LD I, $6FD ; Load 6FD into I
  $5FE: LD I, $776 ; Load 776 into I
  $60C: LD I, $EAD ; Load EAD into I
  $638: LD I, $9C7 ; Load 9C7 into I
  $64C: LD I, $B23 ; Load B23 into I
  $6A2: LD I, $C06 ; Load C06 into I
  $6E6: LD I, $684 ; Load 684 into I
  $6F8: LD I, $F91 ; Load F91 into I
  $704: LD I, $5BF ; Load 5BF into I
  $72C: LD I, $C7D ; Load C7D into I
  $734: LD I, $EF3 ; Load EF3 into I
  $736: LD I, $FCD ; Load FCD into I
  $76C: LD I, $D0D ; Load D0D into I
  $792: LD I, $16B ; Load 16B into I
  $7B8: LD I, $98F ; Load 98F into I
  $7E6: LD I, $E83 ; Load E83 into I
  $806: LD I, $F8E ; Load F8E into I
  $83A: LD I, $E49 ; Load E49 into I
  $83C: LD I, $2AA ; Load 2AA into I
  $842: LD I, $CEF ; Load CEF into I
  $85E: LD I, $34F ; Load 34F into I
  $864: LD I, $6D7 ; Load 6D7 into I
  $866: LD I, $B1D ; Load B1D into I
  $870: LD I, $55E ; Load 55E into I
  $88A: LD I, $BF6 ; Load BF6 into I
  $88C: LD I, $E22 ; Load E22 into I
  $8A4: LD I, $EA4 ; Load EA4 into I
  $8B2: LD I, $502 ; Load 502 into I
  $8CC: LD I, $C06 ; Load C06 into I
  $8DE: LD I, $2F2 ; Load 2F2 into I
  $966: LD I, $A13 ; Load A13 into I
  $978: LD I, $786 ; Load 786 into I
  $990: LD I, $7B3 ; Load 7B3 into I
  $9A4: LD I, $1D8 ; Load 1D8 into I
  $A40: LD I, $36E ; Load 36E into I
  $A44: LD I, $8E8 ; Load 8E8 into I
  $A4E: LD I, $245 ; Load 245 into I
  $A6E: LD I, $A02 ; Load A02 into I
  $A8E: LD I, $813 ; Load 813 into I
  $A96: LD I, $A0E ; Load A0E into I
  $ACA: LD I, $C13 ; Load C13 into I
  $AE2: LD I, $7E8 ; Load 7E8 into I
  $B3A: LD I, $FBF ; Load FBF into I
  $B4E: LD I, $B1A ; Load B1A into I
  $B52: LD I, $2EC ; Load 2EC into I
  $B66: LD I, $DCD ; Load DCD into I
  $B84: LD I, $824 ; Load 824 into I
  $BA2: LD I, $58F ; Load 58F into I
  $BC4: LD I, $200 ; Load 200 into I
  $BE0: LD I, $8DE ; Load 8DE into I
  $BF2: LD I, $727 ; Load 727 into I
  $C56: LD I, $BFA ; Load BFA into I
  $C5A: LD I, $44F ; Load 44F into I
  $C64: LD I, $9B7 ; Load 9B7 into I
  $C6A: LD I, $8AE ; Load 8AE into I
  $CB2: LD I, $6B0 ; Load 6B0 into I
  $D1C: LD I, $415 ; Load 415 into I
  $D46: LD I, $4FA ; Load 4FA into I
  $D52: LD I, $909 ; Load 909 into I
  $D5A: LD I, $4A5 ; Load 4A5 into I
  $D60: LD I, $FA8 ; Load FA8 into I
  $D9C: LD I, $773 ; Load 773 into I
  $DD6: LD I, $178 ; Load 178 into I
  $DDE: LD I, $5A2 ; Load 5A2 into I
  $DFA: LD I, $79D ; Load 79D into I
  $DFC: LD I, $C24 ; Load C24 into I
  $E3E: LD I, $189 ; Load 189 into I
  $E50: LD I, $EAC ; Load EAC into I
  $E62: LD I, $A20 ; Load A20 into I
  $E68: LD I, $0F5 ; Load 0F5 into I
  $E96: LD I, $712 ; Load 712 into I
  $E9C: LD I, $814 ; Load 814 into I
  $EB4: LD I, $5EB ; Load 5EB into I
  $EC2: LD I, $722 ; Load 722 into I
  $ED8: LD I, $3E6 ; Load 3E6 into I
  $EF2: LD I, $E84 ; Load E84 into I
  $F02: LD I, $C76 ; Load C76 into I
  $F08: LD I, $8D7 ; Load 8D7 into I
  $F10: LD I, $910 ; Load 910 into I
  $F14: LD I, $6C4 ; Load 6C4 into I
  $F4E: LD I, $6C6 ; Load 6C6 into I
  $F54: LD I, $CA0 ; Load CA0 into I
  $F84: LD I, $180 ; Load 180 into I
  $F88: LD I, $03B ; Load 03B into I
  $FC6: LD I, $E23 ; Load E23 into I
  $FFE: LD I, $979 ; Load 979 into I

CONTROL FLOW ANALYSIS:
Jumps: 222
Calls: 128
Branches: 232
Loops: 130
Loop Structures:
  $2C8 -> $173 (backward jump)
  $2D0 -> $05B (backward jump)
  $2D4 -> $28E (backward jump)
  $2DA -> $225 (backward jump)
  $376 -> $014 (backward jump)
  $386 -> $0D1 (backward jump)
  $3D8 -> $3BF (backward jump)
  $3FC -> $064 (backward jump)
  $448 -> $077 (backward jump)
  $470 -> $3F3 (backward jump)
  $47A -> $171 (backward jump)
  $50E -> $188 (backward jump)
  $542 -> $3B2 (backward jump)
  $544 -> $23D (backward jump)
  $57E -> $06E (backward jump)
  $58A -> $524 (backward jump)
  $590 -> $49D (backward jump)
  $5E2 -> $05A (backward jump)
  $5E8 -> $109 (backward jump)
  $5F4 -> $32E (backward jump)
  $61A -> $546 (backward jump)
  $6C4 -> $234 (backward jump)
  $6FA -> $4FC (backward jump)
  $71A -> $695 (backward jump)
  $754 -> $650 (backward jump)
  $78E -> $0EB (backward jump)
  $7D8 -> $502 (backward jump)
  $7DC -> $024 (backward jump)
  $7E8 -> $0CF (backward jump)
  $7FC -> $207 (backward jump)
  $81A -> $68D (backward jump)
  $82A -> $096 (backward jump)
  $846 -> $244 (backward jump)
  $850 -> $831 (backward jump)
  $89C -> $0EE (backward jump)
  $8A2 -> $326 (backward jump)
  $8CE -> $4F6 (backward jump)
  $8EA -> $400 (backward jump)
  $908 -> $6DD (backward jump)
  $960 -> $302 (backward jump)
  $99E -> $4DE (backward jump)
  $9BA -> $8FD (backward jump)
  $9D4 -> $4F5 (backward jump)
  $9D6 -> $9B8 (backward jump)
  $A12 -> $0FF (backward jump)
  $A32 -> $388 (backward jump)
  $A5E -> $A57 (backward jump)
  $A8C -> $5EA (backward jump)
  $A90 -> $8AD (backward jump)
  $A92 -> $9DF (backward jump)
  $AAE -> $314 (backward jump)
  $AE4 -> $4C9 (backward jump)
  $AF6 -> $53E (backward jump)
  $AFC -> $74A (backward jump)
  $B1A -> $566 (backward jump)
  $B50 -> $82C (backward jump)
  $B54 -> $112 (backward jump)
  $B56 -> $59E (backward jump)
  $B74 -> $064 (backward jump)
  $B86 -> $3D8 (backward jump)
  $B8A -> $0FD (backward jump)
  $B98 -> $9EC (backward jump)
  $BA4 -> $4E1 (backward jump)
  $BBE -> $254 (backward jump)
  $BD0 -> $7FB (backward jump)
  $BDC -> $3B6 (backward jump)
  $BE4 -> $A2E (backward jump)
  $BF0 -> $31D (backward jump)
  $BF4 -> $84B (backward jump)
  $C06 -> $BB4 (backward jump)
  $C3A -> $A95 (backward jump)
  $C42 -> $774 (backward jump)
  $C60 -> $B47 (backward jump)
  $C80 -> $7BC (backward jump)
  $C86 -> $73B (backward jump)
  $C92 -> $6FB (backward jump)
  $C9C -> $001 (backward jump)
  $C9E -> $BD2 (backward jump)
  $CAA -> $71E (backward jump)
  $CC6 -> $C9A (backward jump)
  $CE8 -> $04E (backward jump)
  $D26 -> $6B5 (backward jump)
  $D4E -> $B58 (backward jump)
  $D62 -> $C88 (backward jump)
  $D66 -> $2F6 (backward jump)
  $D6A -> $08D (backward jump)
  $D76 -> $01C (backward jump)
  $D82 -> $474 (backward jump)
  $DA0 -> $5FA (backward jump)
  $DA4 -> $9B8 (backward jump)
  $DCC -> $184 (backward jump)
  $DE0 -> $B09 (backward jump)
  $E08 -> $D86 (backward jump)
  $E10 -> $616 (backward jump)
  $E16 -> $8D8 (backward jump)
  $E20 -> $037 (backward jump)
  $E22 -> $50F (backward jump)
  $E26 -> $34C (backward jump)
  $E36 -> $BE2 (backward jump)
  $E3A -> $D48 (backward jump)
  $E60 -> $A13 (backward jump)
  $E72 -> $934 (backward jump)
  $E8C -> $693 (backward jump)
  $E9A -> $7BF (backward jump)
  $EB2 -> $82B (backward jump)
  $EC4 -> $92E (backward jump)
  $EE2 -> $ECE (backward jump)
  $EF4 -> $99C (backward jump)
  $EFC -> $6AD (backward jump)
  $F00 -> $E95 (backward jump)
  $F0A -> $0C1 (backward jump)
  $F12 -> $B5A (backward jump)
  $F16 -> $7FE (backward jump)
  $F20 -> $AF2 (backward jump)
  $F2A -> $44C (backward jump)
  $F2E -> $205 (backward jump)
  $F32 -> $745 (backward jump)
  $F34 -> $5B4 (backward jump)
  $F46 -> $2B2 (backward jump)
  $F58 -> $BF6 (backward jump)
  $F64 -> $4DA (backward jump)
  $F78 -> $A7C (backward jump)
  $F7E -> $74E (backward jump)
  $F92 -> $9F6 (backward jump)
  $F9C -> $B78 (backward jump)
  $FA4 -> $F1F (backward jump)
  $FAA -> $F15 (backward jump)
  $FAC -> $575 (backward jump)
  $FE4 -> $26A (backward jump)
  $FF4 -> $00F (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $5425   UNKNOWN  $5425           ; Unknown 5xxx instruction
$202    $D135   DRW      V1, V3, #5      ; Draw 5-byte sprite at V1, V3
$204    $674A   LD       V7, #4A         ; Load 74 into V7
$206    $8D7D   UNKNOWN  8D7D            ; Unknown 8xxx instruction
$208    $7EFB   ADD      VE, #FB         ; Add 251 to VE
$20A    $D0DB   DRW      V0, VD, #B      ; Draw 11-byte sprite at V0, VD
$20C    $F0FF   UNKNOWN  F0FF            ; Unknown Fxxx instruction
$20E    $29E5   CALL     $9E5            ; Call subroutine at 9E5
$210    $C46A   RND      V4, #6A         ; V4 = random & 6A
$212    $401C   SNE      V0, #1C         ; Skip if V0 != 28
$214    $F911   UNKNOWN  F911            ; Unknown Fxxx instruction
$216    $B7FA   JP       V0, $7FA        ; Jump to V0 + 7FA
$218    $AFE4   LD       I, $FE4         ; Load FE4 into I
$21A    $7D25   ADD      VD, #25         ; Add 37 to VD
$21C    $7330   ADD      V3, #30         ; Add 48 to V3
$21E    $4FE8   SNE      VF, #E8         ; Skip if VF != 232
$220    $D9D1   DRW      V9, VD, #1      ; Draw 1-byte sprite at V9, VD
$222    $09BB   SYS      $9BB            ; System call to 9BB
$224    $4DEE   SNE      VD, #EE         ; Skip if VD != 238
$226    $9D31   UNKNOWN  $9D31           ; Unknown 9xxx instruction
$228    $CCED   RND      VC, #ED         ; VC = random & ED
$22A    $A488   LD       I, $488         ; Load 488 into I
$22C    $E49C   UNKNOWN  $E49C           ; Unknown Exxx instruction
$22E    $6FD9   LD       VF, #D9         ; Load 217 into VF
$230    $9398   UNKNOWN  $9398           ; Unknown 9xxx instruction
$232    $BDA6   JP       V0, $DA6        ; Jump to V0 + DA6
$234    $8F49   UNKNOWN  8F49            ; Unknown 8xxx instruction
$236    $80AC   UNKNOWN  80AC            ; Unknown 8xxx instruction
$238    $EB08   UNKNOWN  $EB08           ; Unknown Exxx instruction
$23A    $FD99   UNKNOWN  FD99            ; Unknown Fxxx instruction
$23C    $ADAB   LD       I, $DAB         ; Load DAB into I
$23E    $FA89   UNKNOWN  FA89            ; Unknown Fxxx instruction
$240    $0334   SYS      $334            ; System call to 334
$242    $1BCF   JP       $BCF            ; Jump to BCF
$244    $0788   SYS      $788            ; System call to 788
$246    $292C   CALL     $92C            ; Call subroutine at 92C
$248    $FB33   LD       B, VB           ; Store BCD of VB at I, I+1, I+2
$24A    $B9B0   JP       V0, $9B0        ; Jump to V0 + 9B0
$24C    $BD6D   JP       V0, $D6D        ; Jump to V0 + D6D
$24E    $C7CB   RND      V7, #CB         ; V7 = random & CB
$250    $7B13   ADD      VB, #13         ; Add 19 to VB
$252    $3421   SE       V4, #21         ; Skip if V4 == 33
$254    $78AB   ADD      V8, #AB         ; Add 171 to V8
$256    $9282   UNKNOWN  $9282           ; Unknown 9xxx instruction
$258    $7486   ADD      V4, #86         ; Add 134 to V4
$25A    $15FE   JP       $5FE            ; Jump to 5FE
$25C    $B898   JP       V0, $898        ; Jump to V0 + 898
$25E    $7454   ADD      V4, #54         ; Add 84 to V4
$260    $68C9   LD       V8, #C9         ; Load 201 into V8
$262    $BD11   JP       V0, $D11        ; Jump to V0 + D11
$264    $3DDB   SE       VD, #DB         ; Skip if VD == 219
$266    $93E6   UNKNOWN  $93E6           ; Unknown 9xxx instruction
$268    $9931   UNKNOWN  $9931           ; Unknown 9xxx instruction
$26A    $683F   LD       V8, #3F         ; Load 63 into V8
$26C    $ABC1   LD       I, $BC1         ; Load BC1 into I
$26E    $6943   LD       V9, #43         ; Load 67 into V9
$270    $6EB4   LD       VE, #B4         ; Load 180 into VE
$272    $4D30   SNE      VD, #30         ; Skip if VD != 48
$274    $1BE4   JP       $BE4            ; Jump to BE4
$276    $DD8C   DRW      VD, V8, #C      ; Draw 12-byte sprite at VD, V8
$278    $7339   ADD      V3, #39         ; Add 57 to V3
$27A    $FAF1   UNKNOWN  FAF1            ; Unknown Fxxx instruction
$27C    $5EA4   UNKNOWN  $5EA4           ; Unknown 5xxx instruction
$27E    $13F9   JP       $3F9            ; Jump to 3F9
$280    $91F6   UNKNOWN  $91F6           ; Unknown 9xxx instruction
$282    $BF0B   JP       V0, $F0B        ; Jump to V0 + F0B
$284    $2BBF   CALL     $BBF            ; Call subroutine at BBF
$286    $7C43   ADD      VC, #43         ; Add 67 to VC
$288    $DB3B   DRW      VB, V3, #B      ; Draw 11-byte sprite at VB, V3
$28A    $7038   ADD      V0, #38         ; Add 56 to V0
$28C    $1B86   JP       $B86            ; Jump to B86
$28E    $0A87   SYS      $A87            ; System call to A87
$290    $5035   UNKNOWN  $5035           ; Unknown 5xxx instruction
$292    $2D7D   CALL     $D7D            ; Call subroutine at D7D
$294    $E3E5   UNKNOWN  $E3E5           ; Unknown Exxx instruction
$296    $CB7F   RND      VB, #7F         ; VB = random & 7F
$298    $F91F   UNKNOWN  F91F            ; Unknown Fxxx instruction
$29A    $3135   SE       V1, #35         ; Skip if V1 == 53
$29C    $8162   AND      V1, V6          ; V1 &= V6
$29E    $C175   RND      V1, #75         ; V1 = random & 75
$2A0    $AD49   LD       I, $D49         ; Load D49 into I
$2A2    $9244   UNKNOWN  $9244           ; Unknown 9xxx instruction
$2A4    $221B   CALL     $21B            ; Call subroutine at 21B
$2A6    $98F5   UNKNOWN  $98F5           ; Unknown 9xxx instruction
$2A8    $1B0F   JP       $B0F            ; Jump to B0F
$2AA    $C4BC   RND      V4, #BC         ; V4 = random & BC
$2AC    $2A79   CALL     $A79            ; Call subroutine at A79
$2AE    $31D6   SE       V1, #D6         ; Skip if V1 == 214
$2B0    $9C86   UNKNOWN  $9C86           ; Unknown 9xxx instruction
$2B2    $86E7   SUBN     V6, VE          ; V6 = VE - V6, VF = !borrow
$2B4    $7EE2   ADD      VE, #E2         ; Add 226 to VE
$2B6    $0CAA   SYS      $CAA            ; System call to CAA
$2B8    $E7F4   UNKNOWN  $E7F4           ; Unknown Exxx instruction
$2BA    $60CB   LD       V0, #CB         ; Load 203 into V0
$2BC    $8BA1   OR       VB, VA          ; VB |= VA
$2BE    $7729   ADD      V7, #29         ; Add 41 to V7
$2C0    $5F05   UNKNOWN  $5F05           ; Unknown 5xxx instruction
$2C2    $27F8   CALL     $7F8            ; Call subroutine at 7F8
$2C4    $46ED   SNE      V6, #ED         ; Skip if V6 != 237
$2C6    $824C   UNKNOWN  824C            ; Unknown 8xxx instruction
$2C8    $1173   JP       $173            ; Jump to 173
$2CA    $3027   SE       V0, #27         ; Skip if V0 == 39
$2CC    $760D   ADD      V6, #0D         ; Add 13 to V6
$2CE    $FB12   UNKNOWN  FB12            ; Unknown Fxxx instruction
$2D0    $B05B   JP       V0, $05B        ; Jump to V0 + 05B
$2D2    $30AC   SE       V0, #AC         ; Skip if V0 == 172
$2D4    $B28E   JP       V0, $28E        ; Jump to V0 + 28E
$2D6    $3EB8   SE       VE, #B8         ; Skip if VE == 184
$2D8    $3850   SE       V8, #50         ; Skip if V8 == 80
$2DA    $1225   JP       $225            ; Jump to 225
$2DC    $5EF4   UNKNOWN  $5EF4           ; Unknown 5xxx instruction
$2DE    $3282   SE       V2, #82         ; Skip if V2 == 130
$2E0    $C458   RND      V4, #58         ; V4 = random & 58
$2E2    $6A25   LD       VA, #25         ; Load 37 into VA
$2E4    $42BF   SNE      V2, #BF         ; Skip if V2 != 191
$2E6    $35ED   SE       V5, #ED         ; Skip if V5 == 237
$2E8    $17F9   JP       $7F9            ; Jump to 7F9
$2EA    $2FF3   CALL     $FF3            ; Call subroutine at FF3
$2EC    $5B20   SE       VB, V2          ; Skip if VB == V2
$2EE    $2020   CALL     $020            ; Call subroutine at 020
$2F0    $2020   CALL     $020            ; Call subroutine at 020
$2F2    $2020   CALL     $020            ; Call subroutine at 020
$2F4    $2020   CALL     $020            ; Call subroutine at 020
$2F6    $2020   CALL     $020            ; Call subroutine at 020
$2F8    $2020   CALL     $020            ; Call subroutine at 020
$2FA    $2020   CALL     $020            ; Call subroutine at 020
$2FC    $2020   CALL     $020            ; Call subroutine at 020
$2FE    $2020   CALL     $020            ; Call subroutine at 020
$300    $2020   CALL     $020            ; Call subroutine at 020
$302    $2020   CALL     $020            ; Call subroutine at 020
$304    $2020   CALL     $020            ; Call subroutine at 020
$306    $203F   CALL     $03F            ; Call subroutine at 03F
$308    $7260   ADD      V2, #60         ; Add 96 to V2
$30A    $052D   SYS      $52D            ; System call to 52D
$30C    $96B2   UNKNOWN  $96B2           ; Unknown 9xxx instruction
$30E    $4920   SNE      V9, #20         ; Skip if V9 != 32
$310    $3D78   SE       VD, #78         ; Skip if VD == 120
$312    $E511   UNKNOWN  $E511           ; Unknown Exxx instruction
$314    $7686   ADD      V6, #86         ; Add 134 to V6
$316    $E1F1   UNKNOWN  $E1F1           ; Unknown Exxx instruction
$318    $FE76   UNKNOWN  FE76            ; Unknown Fxxx instruction
$31A    $F547   UNKNOWN  F547            ; Unknown Fxxx instruction
$31C    $3186   SE       V1, #86         ; Skip if V1 == 134
$31E    $0E95   SYS      $E95            ; System call to E95
$320    $78DD   ADD      V8, #DD         ; Add 221 to V8
$322    $F389   UNKNOWN  F389            ; Unknown Fxxx instruction
$324    $884E   SHL      V8              ; V8 <<= 1, VF = MSB
$326    $4420   SNE      V4, #20         ; Skip if V4 != 32
$328    $233A   CALL     $33A            ; Call subroutine at 33A
$32A    $65AD   LD       V5, #AD         ; Load 173 into V5
$32C    $259E   CALL     $59E            ; Call subroutine at 59E
$32E    $1CE2   JP       $CE2            ; Jump to CE2
$330    $A054   LD       I, $054         ; Load 054 into I
$332    $D601   DRW      V6, V0, #1      ; Draw 1-byte sprite at V6, V0
$334    $A25C   LD       I, $25C         ; Load 25C into I
$336    $62EC   LD       V2, #EC         ; Load 236 into V2
$338    $96F1   UNKNOWN  $96F1           ; Unknown 9xxx instruction
$33A    $4F7C   SNE      VF, #7C         ; Skip if VF != 124
$33C    $889F   UNKNOWN  889F            ; Unknown 8xxx instruction
$33E    $2845   CALL     $845            ; Call subroutine at 845
$340    $D931   DRW      V9, V3, #1      ; Draw 1-byte sprite at V9, V3
$342    $37EF   SE       V7, #EF         ; Skip if V7 == 239
$344    $2FC2   CALL     $FC2            ; Call subroutine at FC2
$346    $FB09   UNKNOWN  FB09            ; Unknown Fxxx instruction
$348    $AE83   LD       I, $E83         ; Load E83 into I
$34A    $CA78   RND      VA, #78         ; VA = random & 78
$34C    $62DF   LD       V2, #DF         ; Load 223 into V2
$34E    $BD35   JP       V0, $D35        ; Jump to V0 + D35
$350    $48DC   SNE      V8, #DC         ; Skip if V8 != 220
$352    $C44D   RND      V4, #4D         ; V4 = random & 4D
$354    $90F9   UNKNOWN  $90F9           ; Unknown 9xxx instruction
$356    $7C7F   ADD      VC, #7F         ; Add 127 to VC
$358    $A553   LD       I, $553         ; Load 553 into I
$35A    $9209   UNKNOWN  $9209           ; Unknown 9xxx instruction
$35C    $F596   UNKNOWN  F596            ; Unknown Fxxx instruction
$35E    $A8B5   LD       I, $8B5         ; Load 8B5 into I
$360    $93DC   UNKNOWN  $93DC           ; Unknown 9xxx instruction
$362    $E6F9   UNKNOWN  $E6F9           ; Unknown Exxx instruction
$364    $54B8   UNKNOWN  $54B8           ; Unknown 5xxx instruction
$366    $2EE6   CALL     $EE6            ; Call subroutine at EE6
$368    $8F19   UNKNOWN  8F19            ; Unknown 8xxx instruction
$36A    $4DA9   SNE      VD, #A9         ; Skip if VD != 169
$36C    $304A   SE       V0, #4A         ; Skip if V0 == 74
$36E    $01E6   SYS      $1E6            ; System call to 1E6
$370    $B737   JP       V0, $737        ; Jump to V0 + 737
$372    $E590   UNKNOWN  $E590           ; Unknown Exxx instruction
$374    $43BC   SNE      V3, #BC         ; Skip if V3 != 188
$376    $B014   JP       V0, $014        ; Jump to V0 + 014
$378    $2653   CALL     $653            ; Call subroutine at 653
$37A    $0655   SYS      $655            ; System call to 655
$37C    $2F82   CALL     $F82            ; Call subroutine at F82
$37E    $A3D7   LD       I, $3D7         ; Load 3D7 into I
$380    $216E   CALL     $16E            ; Call subroutine at 16E
$382    $6D72   LD       VD, #72         ; Load 114 into VD
$384    $587E   UNKNOWN  $587E           ; Unknown 5xxx instruction
$386    $10D1   JP       $0D1            ; Jump to 0D1
$388    $C061   RND      V0, #61         ; V0 = random & 61
$38A    $66D5   LD       V6, #D5         ; Load 213 into V6
$38C    $A813   LD       I, $813         ; Load 813 into I
$38E    $1AD9   JP       $AD9            ; Jump to AD9
$390    $F341   UNKNOWN  F341            ; Unknown Fxxx instruction
$392    $88E3   XOR      V8, VE          ; V8 ^= VE
$394    $094F   SYS      $94F            ; System call to 94F
$396    $F21E   ADD      I, V2           ; I += V2
$398    $D7AE   DRW      V7, VA, #E      ; Draw 14-byte sprite at V7, VA
$39A    $F350   UNKNOWN  F350            ; Unknown Fxxx instruction
$39C    $240D   CALL     $40D            ; Call subroutine at 40D
$39E    $0FA3   SYS      $FA3            ; System call to FA3
$3A0    $6EF4   LD       VE, #F4         ; Load 244 into VE
$3A2    $53BD   UNKNOWN  $53BD           ; Unknown 5xxx instruction
$3A4    $883C   UNKNOWN  883C            ; Unknown 8xxx instruction
$3A6    $7988   ADD      V9, #88         ; Add 136 to V9
$3A8    $5B30   SE       VB, V3          ; Skip if VB == V3
$3AA    $2668   CALL     $668            ; Call subroutine at 668
$3AC    $BEC4   JP       V0, $EC4        ; Jump to V0 + EC4
$3AE    $8DE8   UNKNOWN  8DE8            ; Unknown 8xxx instruction
$3B0    $5080   SE       V0, V8          ; Skip if V0 == V8
$3B2    $B9AC   JP       V0, $9AC        ; Jump to V0 + 9AC
$3B4    $0BC8   SYS      $BC8            ; System call to BC8
$3B6    $2976   CALL     $976            ; Call subroutine at 976
$3B8    $6DD9   LD       VD, #D9         ; Load 217 into VD
$3BA    $D846   DRW      V8, V4, #6      ; Draw 6-byte sprite at V8, V4
$3BC    $B601   JP       V0, $601        ; Jump to V0 + 601
$3BE    $5D2B   UNKNOWN  $5D2B           ; Unknown 5xxx instruction
$3C0    $CA3F   RND      VA, #3F         ; VA = random & 3F
$3C2    $A4DA   LD       I, $4DA         ; Load 4DA into I
$3C4    $A505   LD       I, $505         ; Load 505 into I
$3C6    $4630   SNE      V6, #30         ; Skip if V6 != 48
$3C8    $FAF5   UNKNOWN  FAF5            ; Unknown Fxxx instruction
$3CA    $7C6F   ADD      VC, #6F         ; Add 111 to VC
$3CC    $C453   RND      V4, #53         ; V4 = random & 53
$3CE    $5743   UNKNOWN  $5743           ; Unknown 5xxx instruction
$3D0    $E1AA   UNKNOWN  $E1AA           ; Unknown Exxx instruction
$3D2    $F3E1   UNKNOWN  F3E1            ; Unknown Fxxx instruction
$3D4    $8A1C   UNKNOWN  8A1C            ; Unknown 8xxx instruction
$3D6    $0B21   SYS      $B21            ; System call to B21
$3D8    $13BF   JP       $3BF            ; Jump to 3BF
$3DA    $9EC1   UNKNOWN  $9EC1           ; Unknown 9xxx instruction
$3DC    $54E0   SE       V4, VE          ; Skip if V4 == VE
$3DE    $AC1C   LD       I, $C1C         ; Load C1C into I
$3E0    $A93D   LD       I, $93D         ; Load 93D into I
$3E2    $0031   SYS      $031            ; System call to 031
$3E4    $DF64   DRW      VF, V6, #4      ; Draw 4-byte sprite at VF, V6
$3E6    $361C   SE       V6, #1C         ; Skip if V6 == 28
$3E8    $4B0C   SNE      VB, #0C         ; Skip if VB != 12
$3EA    $2305   CALL     $305            ; Call subroutine at 305
$3EC    $5B07   UNKNOWN  $5B07           ; Unknown 5xxx instruction
$3EE    $3BBA   SE       VB, #BA         ; Skip if VB == 186
$3F0    $EA48   UNKNOWN  $EA48           ; Unknown Exxx instruction
$3F2    $852E   SHL      V5              ; V5 <<= 1, VF = MSB
$3F4    $6E9C   LD       VE, #9C         ; Load 156 into VE
$3F6    $9EF4   UNKNOWN  $9EF4           ; Unknown 9xxx instruction
$3F8    $8D46   SHR      VD              ; VD >>= 1, VF = LSB
$3FA    $1A09   JP       $A09            ; Jump to A09
$3FC    $B064   JP       V0, $064        ; Jump to V0 + 064
$3FE    $A37B   LD       I, $37B         ; Load 37B into I
$400    $AEAD   LD       I, $EAD         ; Load EAD into I
$402    $3926   SE       V9, #26         ; Skip if V9 == 38
$404    $A7D9   LD       I, $7D9         ; Load 7D9 into I
$406    $CD97   RND      VD, #97         ; VD = random & 97
$408    $840C   UNKNOWN  840C            ; Unknown 8xxx instruction
$40A    $3AF6   SE       VA, #F6         ; Skip if VA == 246
$40C    $CCA3   RND      VC, #A3         ; VC = random & A3
$40E    $9B30   SNE      VB, V3          ; Skip if VB != V3
$410    $8127   SUBN     V1, V2          ; V1 = V2 - V1, VF = !borrow
$412    $4C2C   SNE      VC, #2C         ; Skip if VC != 44
$414    $267F   CALL     $67F            ; Call subroutine at 67F
$416    $016B   SYS      $16B            ; System call to 16B
$418    $CC36   RND      VC, #36         ; VC = random & 36
$41A    $60CA   LD       V0, #CA         ; Load 202 into V0
$41C    $2807   CALL     $807            ; Call subroutine at 807
$41E    $212D   CALL     $12D            ; Call subroutine at 12D
$420    $420E   SNE      V2, #0E         ; Skip if V2 != 14
$422    $5B87   UNKNOWN  $5B87           ; Unknown 5xxx instruction
$424    $C54B   RND      V5, #4B         ; V5 = random & 4B
$426    $C927   RND      V9, #27         ; V9 = random & 27
$428    $0389   SYS      $389            ; System call to 389
$42A    $ECF7   UNKNOWN  $ECF7           ; Unknown Exxx instruction
$42C    $FD8B   UNKNOWN  FD8B            ; Unknown Fxxx instruction
$42E    $7DE1   ADD      VD, #E1         ; Add 225 to VD
$430    $8EDC   UNKNOWN  8EDC            ; Unknown 8xxx instruction
$432    $C0FE   RND      V0, #FE         ; V0 = random & FE
$434    $1DDC   JP       $DDC            ; Jump to DDC
$436    $7736   ADD      V7, #36         ; Add 54 to V7
$438    $F938   UNKNOWN  F938            ; Unknown Fxxx instruction
$43A    $6A12   LD       VA, #12         ; Load 18 into VA
$43C    $E4AC   UNKNOWN  $E4AC           ; Unknown Exxx instruction
$43E    $C2F7   RND      V2, #F7         ; V2 = random & F7
$440    $AC1B   LD       I, $C1B         ; Load C1B into I
$442    $7B27   ADD      VB, #27         ; Add 39 to VB
$444    $DE44   DRW      VE, V4, #4      ; Draw 4-byte sprite at VE, V4
$446    $5077   UNKNOWN  $5077           ; Unknown 5xxx instruction
$448    $1077   JP       $077            ; Jump to 077
$44A    $D167   DRW      V1, V6, #7      ; Draw 7-byte sprite at V1, V6
$44C    $C1B4   RND      V1, #B4         ; V1 = random & B4
$44E    $3112   SE       V1, #12         ; Skip if V1 == 18
$450    $CBF7   RND      VB, #F7         ; VB = random & F7
$452    $700E   ADD      V0, #0E         ; Add 14 to V0
$454    $574E   UNKNOWN  $574E           ; Unknown 5xxx instruction
$456    $BF31   JP       V0, $F31        ; Jump to V0 + F31
$458    $AF37   LD       I, $F37         ; Load F37 into I
$45A    $4344   SNE      V3, #44         ; Skip if V3 != 68
$45C    $6635   LD       V6, #35         ; Load 53 into V6
$45E    $28A0   CALL     $8A0            ; Call subroutine at 8A0
$460    $06D0   SYS      $6D0            ; System call to 6D0
$462    $1A8B   JP       $A8B            ; Jump to A8B
$464    $6F9E   LD       VF, #9E         ; Load 158 into VF
$466    $F1D8   UNKNOWN  F1D8            ; Unknown Fxxx instruction
$468    $D67B   DRW      V6, V7, #B      ; Draw 11-byte sprite at V6, V7
$46A    $FD44   UNKNOWN  FD44            ; Unknown Fxxx instruction
$46C    $2EC3   CALL     $EC3            ; Call subroutine at EC3
$46E    $3DC6   SE       VD, #C6         ; Skip if VD == 198
$470    $13F3   JP       $3F3            ; Jump to 3F3
$472    $3473   SE       V4, #73         ; Skip if V4 == 115
$474    $636B   LD       V3, #6B         ; Load 107 into V3
$476    $FA84   UNKNOWN  FA84            ; Unknown Fxxx instruction
$478    $BD29   JP       V0, $D29        ; Jump to V0 + D29
$47A    $1171   JP       $171            ; Jump to 171
$47C    $2C0B   CALL     $C0B            ; Call subroutine at C0B
$47E    $64E4   LD       V4, #E4         ; Load 228 into V4
$480    $1595   JP       $595            ; Jump to 595
$482    $8884   ADD      V8, V8          ; V8 += V8, VF = carry
$484    $50E9   UNKNOWN  $50E9           ; Unknown 5xxx instruction
$486    $8A04   ADD      VA, V0          ; VA += V0, VF = carry
$488    $7034   ADD      V0, #34         ; Add 52 to V0
$48A    $D5D1   DRW      V5, VD, #1      ; Draw 1-byte sprite at V5, VD
$48C    $B5FF   JP       V0, $5FF        ; Jump to V0 + 5FF
$48E    $1589   JP       $589            ; Jump to 589
$490    $EE90   UNKNOWN  $EE90           ; Unknown Exxx instruction
$492    $E6AC   UNKNOWN  $E6AC           ; Unknown Exxx instruction
$494    $2446   CALL     $446            ; Call subroutine at 446
$496    $D40B   DRW      V4, V0, #B      ; Draw 11-byte sprite at V4, V0
$498    $7A0C   ADD      VA, #0C         ; Add 12 to VA
$49A    $34A9   SE       V4, #A9         ; Skip if V4 == 169
$49C    $CA37   RND      VA, #37         ; VA = random & 37
$49E    $1816   JP       $816            ; Jump to 816
$4A0    $C35F   RND      V3, #5F         ; V3 = random & 5F
$4A2    $B5EF   JP       V0, $5EF        ; Jump to V0 + 5EF
$4A4    $A116   LD       I, $116         ; Load 116 into I
$4A6    $CAA6   RND      VA, #A6         ; VA = random & A6
$4A8    $BFC4   JP       V0, $FC4        ; Jump to V0 + FC4
$4AA    $0FA8   SYS      $FA8            ; System call to FA8
$4AC    $71B9   ADD      V1, #B9         ; Add 185 to V1
$4AE    $E660   UNKNOWN  $E660           ; Unknown Exxx instruction
$4B0    $0BDE   SYS      $BDE            ; System call to BDE
$4B2    $4023   SNE      V0, #23         ; Skip if V0 != 35
$4B4    $1AE6   JP       $AE6            ; Jump to AE6
$4B6    $BF4A   JP       V0, $F4A        ; Jump to V0 + F4A
$4B8    $4F84   SNE      VF, #84         ; Skip if VF != 132
$4BA    $77DD   ADD      V7, #DD         ; Add 221 to V7
$4BC    $A096   LD       I, $096         ; Load 096 into I
$4BE    $0435   SYS      $435            ; System call to 435
$4C0    $D9FE   DRW      V9, VF, #E      ; Draw 14-byte sprite at V9, VF
$4C2    $0253   SYS      $253            ; System call to 253
$4C4    $A99E   LD       I, $99E         ; Load 99E into I
$4C6    $1DD9   JP       $DD9            ; Jump to DD9
$4C8    $77AA   ADD      V7, #AA         ; Add 170 to V7
$4CA    $46B3   SNE      V6, #B3         ; Skip if V6 != 179
$4CC    $F59E   UNKNOWN  F59E            ; Unknown Fxxx instruction
$4CE    $C321   RND      V3, #21         ; V3 = random & 21
$4D0    $21B0   CALL     $1B0            ; Call subroutine at 1B0
$4D2    $3055   SE       V0, #55         ; Skip if V0 == 85
$4D4    $06A4   SYS      $6A4            ; System call to 6A4
$4D6    $5CFE   UNKNOWN  $5CFE           ; Unknown 5xxx instruction
$4D8    $F1F2   UNKNOWN  F1F2            ; Unknown Fxxx instruction
$4DA    $45D2   SNE      V5, #D2         ; Skip if V5 != 210
$4DC    $6A27   LD       VA, #27         ; Load 39 into VA
$4DE    $3741   SE       V7, #41         ; Skip if V7 == 65
$4E0    $C764   RND      V7, #64         ; V7 = random & 64
$4E2    $814F   UNKNOWN  814F            ; Unknown 8xxx instruction
$4E4    $3BEA   SE       VB, #EA         ; Skip if VB == 234
$4E6    $D7ED   DRW      V7, VE, #D      ; Draw 13-byte sprite at V7, VE
$4E8    $BE65   JP       V0, $E65        ; Jump to V0 + E65
$4EA    $722B   ADD      V2, #2B         ; Add 43 to V2
$4EC    $BF4C   JP       V0, $F4C        ; Jump to V0 + F4C
$4EE    $22F9   CALL     $2F9            ; Call subroutine at 2F9
$4F0    $8ACB   UNKNOWN  8ACB            ; Unknown 8xxx instruction
$4F2    $E067   UNKNOWN  $E067           ; Unknown Exxx instruction
$4F4    $619E   LD       V1, #9E         ; Load 158 into V1
$4F6    $B63B   JP       V0, $63B        ; Jump to V0 + 63B
$4F8    $08C7   SYS      $8C7            ; System call to 8C7
$4FA    $DA0C   DRW      VA, V0, #C      ; Draw 12-byte sprite at VA, V0
$4FC    $2AF9   CALL     $AF9            ; Call subroutine at AF9
$4FE    $2FD1   CALL     $FD1            ; Call subroutine at FD1
$500    $2CAA   CALL     $CAA            ; Call subroutine at CAA
$502    $CF5D   RND      VF, #5D         ; VF = random & 5D
$504    $5B67   UNKNOWN  $5B67           ; Unknown 5xxx instruction
$506    $EF22   UNKNOWN  $EF22           ; Unknown Exxx instruction
$508    $EA92   UNKNOWN  $EA92           ; Unknown Exxx instruction
$50A    $79EC   ADD      V9, #EC         ; Add 236 to V9
$50C    $19A9   JP       $9A9            ; Jump to 9A9
$50E    $1188   JP       $188            ; Jump to 188
$510    $0356   SYS      $356            ; System call to 356
$512    $8F6A   UNKNOWN  8F6A            ; Unknown 8xxx instruction
$514    $4E67   SNE      VE, #67         ; Skip if VE != 103
$516    $F457   UNKNOWN  F457            ; Unknown Fxxx instruction
$518    $3707   SE       V7, #07         ; Skip if V7 == 7
$51A    $D9C6   DRW      V9, VC, #6      ; Draw 6-byte sprite at V9, VC
$51C    $08BB   SYS      $8BB            ; System call to 8BB
$51E    $F4AD   UNKNOWN  F4AD            ; Unknown Fxxx instruction
$520    $39FC   SE       V9, #FC         ; Skip if V9 == 252
$522    $946F   UNKNOWN  $946F           ; Unknown 9xxx instruction
$524    $DF6A   DRW      VF, V6, #A      ; Draw 10-byte sprite at VF, V6
$526    $03BE   SYS      $3BE            ; System call to 3BE
$528    $4B4D   SNE      VB, #4D         ; Skip if VB != 77
$52A    $56BF   UNKNOWN  $56BF           ; Unknown 5xxx instruction
$52C    $CF2E   RND      VF, #2E         ; VF = random & 2E
$52E    $5E4F   UNKNOWN  $5E4F           ; Unknown 5xxx instruction
$530    $2EE3   CALL     $EE3            ; Call subroutine at EE3
$532    $95DB   UNKNOWN  $95DB           ; Unknown 9xxx instruction
$534    $0116   SYS      $116            ; System call to 116
$536    $D8FA   DRW      V8, VF, #A      ; Draw 10-byte sprite at V8, VF
$538    $35F5   SE       V5, #F5         ; Skip if V5 == 245
$53A    $6DD9   LD       VD, #D9         ; Load 217 into VD
$53C    $E315   UNKNOWN  $E315           ; Unknown Exxx instruction
$53E    $F1A4   UNKNOWN  F1A4            ; Unknown Fxxx instruction
$540    $F264   UNKNOWN  F264            ; Unknown Fxxx instruction
$542    $13B2   JP       $3B2            ; Jump to 3B2
$544    $123D   JP       $23D            ; Jump to 23D
$546    $4059   SNE      V0, #59         ; Skip if V0 != 89
$548    $5B3A   UNKNOWN  $5B3A           ; Unknown 5xxx instruction
$54A    $4A59   SNE      VA, #59         ; Skip if VA != 89
$54C    $30BC   SE       V0, #BC         ; Skip if V0 == 188
$54E    $2235   CALL     $235            ; Call subroutine at 235
$550    $26CA   CALL     $6CA            ; Call subroutine at 6CA
$552    $6B95   LD       VB, #95         ; Load 149 into VB
$554    $C4B8   RND      V4, #B8         ; V4 = random & B8
$556    $730B   ADD      V3, #0B         ; Add 11 to V3
$558    $A7F7   LD       I, $7F7         ; Load 7F7 into I
$55A    $9896   UNKNOWN  $9896           ; Unknown 9xxx instruction
$55C    $91CC   UNKNOWN  $91CC           ; Unknown 9xxx instruction
$55E    $A122   LD       I, $122         ; Load 122 into I
$560    $5640   SE       V6, V4          ; Skip if V6 == V4
$562    $CD80   RND      VD, #80         ; VD = random & 80
$564    $C546   RND      V5, #46         ; V5 = random & 46
$566    $5F82   UNKNOWN  $5F82           ; Unknown 5xxx instruction
$568    $3024   SE       V0, #24         ; Skip if V0 == 36
$56A    $8301   OR       V3, V0          ; V3 |= V0
$56C    $D1CF   DRW      V1, VC, #F      ; Draw 15-byte sprite at V1, VC
$56E    $7F3C   ADD      VF, #3C         ; Add 60 to VF
$570    $7205   ADD      V2, #05         ; Add 5 to V2
$572    $31B0   SE       V1, #B0         ; Skip if V1 == 176
$574    $7750   ADD      V7, #50         ; Add 80 to V7
$576    $BC5D   JP       V0, $C5D        ; Jump to V0 + C5D
$578    $8F32   AND      VF, V3          ; VF &= V3
$57A    $00DD   SYS      $0DD            ; System call to 0DD
$57C    $223A   CALL     $23A            ; Call subroutine at 23A
$57E    $B06E   JP       V0, $06E        ; Jump to V0 + 06E
$580    $3C51   SE       VC, #51         ; Skip if VC == 81
$582    $C407   RND      V4, #07         ; V4 = random & 07
$584    $4E1A   SNE      VE, #1A         ; Skip if VE != 26
$586    $9F8D   UNKNOWN  $9F8D           ; Unknown 9xxx instruction
$588    $438A   SNE      V3, #8A         ; Skip if V3 != 138
$58A    $B524   JP       V0, $524        ; Jump to V0 + 524
$58C    $E267   UNKNOWN  $E267           ; Unknown Exxx instruction
$58E    $5D52   UNKNOWN  $5D52           ; Unknown 5xxx instruction
$590    $149D   JP       $49D            ; Jump to 49D
$592    $647D   LD       V4, #7D         ; Load 125 into V4
$594    $E732   UNKNOWN  $E732           ; Unknown Exxx instruction
$596    $8DB2   AND      VD, VB          ; VD &= VB
$598    $F558   UNKNOWN  F558            ; Unknown Fxxx instruction
$59A    $69EC   LD       V9, #EC         ; Load 236 into V9
$59C    $AC9E   LD       I, $C9E         ; Load C9E into I
$59E    $F45D   UNKNOWN  F45D            ; Unknown Fxxx instruction
$5A0    $3F32   SE       VF, #32         ; Skip if VF == 50
$5A2    $FBE2   UNKNOWN  FBE2            ; Unknown Fxxx instruction
$5A4    $E7E6   UNKNOWN  $E7E6           ; Unknown Exxx instruction
$5A6    $4DD1   SNE      VD, #D1         ; Skip if VD != 209
$5A8    $1EF3   JP       $EF3            ; Jump to EF3
$5AA    $728B   ADD      V2, #8B         ; Add 139 to V2
$5AC    $EB1E   UNKNOWN  $EB1E           ; Unknown Exxx instruction
$5AE    $8198   UNKNOWN  8198            ; Unknown 8xxx instruction
$5B0    $C618   RND      V6, #18         ; V6 = random & 18
$5B2    $1668   JP       $668            ; Jump to 668
$5B4    $F5C9   UNKNOWN  F5C9            ; Unknown Fxxx instruction
$5B6    $90DE   UNKNOWN  $90DE           ; Unknown 9xxx instruction
$5B8    $8B94   ADD      VB, V9          ; VB += V9, VF = carry
$5BA    $AFEA   LD       I, $FEA         ; Load FEA into I
$5BC    $2274   CALL     $274            ; Call subroutine at 274
$5BE    $6E9E   LD       VE, #9E         ; Load 158 into VE
$5C0    $0C6A   SYS      $C6A            ; System call to C6A
$5C2    $F2A3   UNKNOWN  F2A3            ; Unknown Fxxx instruction
$5C4    $505C   UNKNOWN  $505C           ; Unknown 5xxx instruction
$5C6    $31FA   SE       V1, #FA         ; Skip if V1 == 250
$5C8    $07F1   SYS      $7F1            ; System call to 7F1
$5CA    $8DBD   UNKNOWN  8DBD            ; Unknown 8xxx instruction
$5CC    $F30C   UNKNOWN  F30C            ; Unknown Fxxx instruction
$5CE    $8341   OR       V3, V4          ; V3 |= V4
$5D0    $47DA   SNE      V7, #DA         ; Skip if V7 != 218
$5D2    $3BD3   SE       VB, #D3         ; Skip if VB == 211
$5D4    $4D72   SNE      VD, #72         ; Skip if VD != 114
$5D6    $8469   UNKNOWN  8469            ; Unknown 8xxx instruction
$5D8    $F73F   UNKNOWN  F73F            ; Unknown Fxxx instruction
$5DA    $4F57   SNE      VF, #57         ; Skip if VF != 87
$5DC    $46C9   SNE      V6, #C9         ; Skip if V6 != 201
$5DE    $86D9   UNKNOWN  86D9            ; Unknown 8xxx instruction
$5E0    $9B4D   UNKNOWN  $9B4D           ; Unknown 9xxx instruction
$5E2    $105A   JP       $05A            ; Jump to 05A
$5E4    $3FAA   SE       VF, #AA         ; Skip if VF == 170
$5E6    $A223   LD       I, $223         ; Load 223 into I
$5E8    $B109   JP       V0, $109        ; Jump to V0 + 109
$5EA    $DE11   DRW      VE, V1, #1      ; Draw 1-byte sprite at VE, V1
$5EC    $803C   UNKNOWN  803C            ; Unknown 8xxx instruction
$5EE    $A6FD   LD       I, $6FD         ; Load 6FD into I
$5F0    $FFF5   UNKNOWN  FFF5            ; Unknown Fxxx instruction
$5F2    $8432   AND      V4, V3          ; V4 &= V3
$5F4    $132E   JP       $32E            ; Jump to 32E
$5F6    $2051   CALL     $051            ; Call subroutine at 051
$5F8    $FF48   UNKNOWN  FF48            ; Unknown Fxxx instruction
$5FA    $BE42   JP       V0, $E42        ; Jump to V0 + E42
$5FC    $E215   UNKNOWN  $E215           ; Unknown Exxx instruction
$5FE    $A776   LD       I, $776         ; Load 776 into I
$600    $50E0   SE       V0, VE          ; Skip if V0 == VE
$602    $2B1B   CALL     $B1B            ; Call subroutine at B1B
$604    $C820   RND      V8, #20         ; V8 = random & 20
$606    $4F2F   SNE      VF, #2F         ; Skip if VF != 47
$608    $C593   RND      V5, #93         ; V5 = random & 93
$60A    $3E8A   SE       VE, #8A         ; Skip if VE == 138
$60C    $AEAD   LD       I, $EAD         ; Load EAD into I
$60E    $2CEB   CALL     $CEB            ; Call subroutine at CEB
$610    $F113   UNKNOWN  F113            ; Unknown Fxxx instruction
$612    $589E   UNKNOWN  $589E           ; Unknown 5xxx instruction
$614    $DCBE   DRW      VC, VB, #E      ; Draw 14-byte sprite at VC, VB
$616    $F15F   UNKNOWN  F15F            ; Unknown Fxxx instruction
$618    $3B32   SE       VB, #32         ; Skip if VB == 50
$61A    $B546   JP       V0, $546        ; Jump to V0 + 546
$61C    $502B   UNKNOWN  $502B           ; Unknown 5xxx instruction
$61E    $7E19   ADD      VE, #19         ; Add 25 to VE
$620    $388A   SE       V8, #8A         ; Skip if V8 == 138
$622    $C950   RND      V9, #50         ; V9 = random & 50
$624    $78A0   ADD      V8, #A0         ; Add 160 to V8
$626    $1891   JP       $891            ; Jump to 891
$628    $6B78   LD       VB, #78         ; Load 120 into VB
$62A    $2FA2   CALL     $FA2            ; Call subroutine at FA2
$62C    $6EC9   LD       VE, #C9         ; Load 201 into VE
$62E    $D470   DRW      V4, V7, #0      ; Draw 0-byte sprite at V4, V7
$630    $5BAA   UNKNOWN  $5BAA           ; Unknown 5xxx instruction
$632    $974B   UNKNOWN  $974B           ; Unknown 9xxx instruction
$634    $4E48   SNE      VE, #48         ; Skip if VE != 72
$636    $43D0   SNE      V3, #D0         ; Skip if V3 != 208
$638    $A9C7   LD       I, $9C7         ; Load 9C7 into I
$63A    $42B9   SNE      V2, #B9         ; Skip if V2 != 185
$63C    $8BDE   SHL      VB              ; VB <<= 1, VF = MSB
$63E    $2E24   CALL     $E24            ; Call subroutine at E24
$640    $D92B   DRW      V9, V2, #B      ; Draw 11-byte sprite at V9, V2
$642    $F685   UNKNOWN  F685            ; Unknown Fxxx instruction
$644    $46C6   SNE      V6, #C6         ; Skip if V6 != 198
$646    $4C46   SNE      VC, #46         ; Skip if VC != 70
$648    $427C   SNE      V2, #7C         ; Skip if V2 != 124
$64A    $7353   ADD      V3, #53         ; Add 83 to V3
$64C    $AB23   LD       I, $B23         ; Load B23 into I
$64E    $5C36   UNKNOWN  $5C36           ; Unknown 5xxx instruction
$650    $C31E   RND      V3, #1E         ; V3 = random & 1E
$652    $C12A   RND      V1, #2A         ; V1 = random & 2A
$654    $01EB   SYS      $1EB            ; System call to 1EB
$656    $543C   UNKNOWN  $543C           ; Unknown 5xxx instruction
$658    $E29B   UNKNOWN  $E29B           ; Unknown Exxx instruction
$65A    $4B56   SNE      VB, #56         ; Skip if VB != 86
$65C    $8AEE   SHL      VA              ; VA <<= 1, VF = MSB
$65E    $F412   UNKNOWN  F412            ; Unknown Fxxx instruction
$660    $6348   LD       V3, #48         ; Load 72 into V3
$662    $90C1   UNKNOWN  $90C1           ; Unknown 9xxx instruction
$664    $C8C3   RND      V8, #C3         ; V8 = random & C3
$666    $DCAB   DRW      VC, VA, #B      ; Draw 11-byte sprite at VC, VA
$668    $50BB   UNKNOWN  $50BB           ; Unknown 5xxx instruction
$66A    $47EF   SNE      V7, #EF         ; Skip if V7 != 239
$66C    $47CE   SNE      V7, #CE         ; Skip if V7 != 206
$66E    $6F4F   LD       VF, #4F         ; Load 79 into VF
$670    $E79A   UNKNOWN  $E79A           ; Unknown Exxx instruction
$672    $2ADA   CALL     $ADA            ; Call subroutine at ADA
$674    $47DE   SNE      V7, #DE         ; Skip if V7 != 222
$676    $F6CC   UNKNOWN  F6CC            ; Unknown Fxxx instruction
$678    $C5FD   RND      V5, #FD         ; V5 = random & FD
$67A    $8AE3   XOR      VA, VE          ; VA ^= VE
$67C    $40FA   SNE      V0, #FA         ; Skip if V0 != 250
$67E    $82E2   AND      V2, VE          ; V2 &= VE
$680    $6E41   LD       VE, #41         ; Load 65 into VE
$682    $C9D1   RND      V9, #D1         ; V9 = random & D1
$684    $C7C2   RND      V7, #C2         ; V7 = random & C2
$686    $3C4E   SE       VC, #4E         ; Skip if VC == 78
$688    $C579   RND      V5, #79         ; V5 = random & 79
$68A    $6522   LD       V5, #22         ; Load 34 into V5
$68C    $4A43   SNE      VA, #43         ; Skip if VA != 67
$68E    $3D99   SE       VD, #99         ; Skip if VD == 153
$690    $64F9   LD       V4, #F9         ; Load 249 into V4
$692    $DB9A   DRW      VB, V9, #A      ; Draw 10-byte sprite at VB, V9
$694    $D566   DRW      V5, V6, #6      ; Draw 6-byte sprite at V5, V6
$696    $5389   UNKNOWN  $5389           ; Unknown 5xxx instruction
$698    $D69E   DRW      V6, V9, #E      ; Draw 14-byte sprite at V6, V9
$69A    $33FD   SE       V3, #FD         ; Skip if V3 == 253
$69C    $2EA7   CALL     $EA7            ; Call subroutine at EA7
$69E    $DE5C   DRW      VE, V5, #C      ; Draw 12-byte sprite at VE, V5
$6A0    $6E53   LD       VE, #53         ; Load 83 into VE
$6A2    $AC06   LD       I, $C06         ; Load C06 into I
$6A4    $E6A5   UNKNOWN  $E6A5           ; Unknown Exxx instruction
$6A6    $9913   UNKNOWN  $9913           ; Unknown 9xxx instruction
$6A8    $0FAA   SYS      $FAA            ; System call to FAA
$6AA    $08D1   SYS      $8D1            ; System call to 8D1
$6AC    $7F19   ADD      VF, #19         ; Add 25 to VF
$6AE    $45A3   SNE      V5, #A3         ; Skip if V5 != 163
$6B0    $4F46   SNE      VF, #46         ; Skip if VF != 70
$6B2    $B8C9   JP       V0, $8C9        ; Jump to V0 + 8C9
$6B4    $C873   RND      V8, #73         ; V8 = random & 73
$6B6    $3B8E   SE       VB, #8E         ; Skip if VB == 142
$6B8    $E15A   UNKNOWN  $E15A           ; Unknown Exxx instruction
$6BA    $579F   UNKNOWN  $579F           ; Unknown 5xxx instruction
$6BC    $2DB0   CALL     $DB0            ; Call subroutine at DB0
$6BE    $CBCD   RND      VB, #CD         ; VB = random & CD
$6C0    $85F9   UNKNOWN  85F9            ; Unknown 8xxx instruction
$6C2    $DE26   DRW      VE, V2, #6      ; Draw 6-byte sprite at VE, V2
$6C4    $1234   JP       $234            ; Jump to 234
$6C6    $3B1B   SE       VB, #1B         ; Skip if VB == 27
$6C8    $52E2   UNKNOWN  $52E2           ; Unknown 5xxx instruction
$6CA    $64E0   LD       V4, #E0         ; Load 224 into V4
$6CC    $EF8F   UNKNOWN  $EF8F           ; Unknown Exxx instruction
$6CE    $27CE   CALL     $7CE            ; Call subroutine at 7CE
$6D0    $0B8E   SYS      $B8E            ; System call to B8E
$6D2    $CF58   RND      VF, #58         ; VF = random & 58
$6D4    $CC4F   RND      VC, #4F         ; VC = random & 4F
$6D6    $3515   SE       V5, #15         ; Skip if V5 == 21
$6D8    $845E   SHL      V4              ; V4 <<= 1, VF = MSB
$6DA    $2443   CALL     $443            ; Call subroutine at 443
$6DC    $9EB8   UNKNOWN  $9EB8           ; Unknown 9xxx instruction
$6DE    $B7F4   JP       V0, $7F4        ; Jump to V0 + 7F4
$6E0    $4F18   SNE      VF, #18         ; Skip if VF != 24
$6E2    $D3A9   DRW      V3, VA, #9      ; Draw 9-byte sprite at V3, VA
$6E4    $9177   UNKNOWN  $9177           ; Unknown 9xxx instruction
$6E6    $A684   LD       I, $684         ; Load 684 into I
$6E8    $617A   LD       V1, #7A         ; Load 122 into V1
$6EA    $2562   CALL     $562            ; Call subroutine at 562
$6EC    $E226   UNKNOWN  $E226           ; Unknown Exxx instruction
$6EE    $0E7A   SYS      $E7A            ; System call to E7A
$6F0    $315C   SE       V1, #5C         ; Skip if V1 == 92
$6F2    $D4FF   DRW      V4, VF, #F      ; Draw 15-byte sprite at V4, VF
$6F4    $BEB3   JP       V0, $EB3        ; Jump to V0 + EB3
$6F6    $7BB6   ADD      VB, #B6         ; Add 182 to VB
$6F8    $AF91   LD       I, $F91         ; Load F91 into I
$6FA    $B4FC   JP       V0, $4FC        ; Jump to V0 + 4FC
$6FC    $D150   DRW      V1, V5, #0      ; Draw 0-byte sprite at V1, V5
$6FE    $23D4   CALL     $3D4            ; Call subroutine at 3D4
$700    $FC75   UNKNOWN  FC75            ; Unknown Fxxx instruction
$702    $D482   DRW      V4, V8, #2      ; Draw 2-byte sprite at V4, V8
$704    $A5BF   LD       I, $5BF         ; Load 5BF into I
$706    $53B8   UNKNOWN  $53B8           ; Unknown 5xxx instruction
$708    $CE54   RND      VE, #54         ; VE = random & 54
$70A    $531D   UNKNOWN  $531D           ; Unknown 5xxx instruction
$70C    $8C82   AND      VC, V8          ; VC &= V8
$70E    $9647   UNKNOWN  $9647           ; Unknown 9xxx instruction
$710    $D489   DRW      V4, V8, #9      ; Draw 9-byte sprite at V4, V8
$712    $9F03   UNKNOWN  $9F03           ; Unknown 9xxx instruction
$714    $4AE3   SNE      VA, #E3         ; Skip if VA != 227
$716    $8474   ADD      V4, V7          ; V4 += V7, VF = carry
$718    $4A1B   SNE      VA, #1B         ; Skip if VA != 27
$71A    $1695   JP       $695            ; Jump to 695
$71C    $4EE8   SNE      VE, #E8         ; Skip if VE != 232
$71E    $0C98   SYS      $C98            ; System call to C98
$720    $4869   SNE      V8, #69         ; Skip if V8 != 105
$722    $02A4   SYS      $2A4            ; System call to 2A4
$724    $597E   UNKNOWN  $597E           ; Unknown 5xxx instruction
$726    $D235   DRW      V2, V3, #5      ; Draw 5-byte sprite at V2, V3
$728    $F346   UNKNOWN  F346            ; Unknown Fxxx instruction
$72A    $52BC   UNKNOWN  $52BC           ; Unknown 5xxx instruction
$72C    $AC7D   LD       I, $C7D         ; Load C7D into I
$72E    $5BC2   UNKNOWN  $5BC2           ; Unknown 5xxx instruction
$730    $D904   DRW      V9, V0, #4      ; Draw 4-byte sprite at V9, V0
$732    $EED6   UNKNOWN  $EED6           ; Unknown Exxx instruction
$734    $AEF3   LD       I, $EF3         ; Load EF3 into I
$736    $AFCD   LD       I, $FCD         ; Load FCD into I
$738    $1BBF   JP       $BBF            ; Jump to BBF
$73A    $FF76   UNKNOWN  FF76            ; Unknown Fxxx instruction
$73C    $4153   SNE      V1, #53         ; Skip if V1 != 83
$73E    $9BAA   UNKNOWN  $9BAA           ; Unknown 9xxx instruction
$740    $21F7   CALL     $1F7            ; Call subroutine at 1F7
$742    $8FE2   AND      VF, VE          ; VF &= VE
$744    $64E9   LD       V4, #E9         ; Load 233 into V4
$746    $2112   CALL     $112            ; Call subroutine at 112
$748    $9BFE   UNKNOWN  $9BFE           ; Unknown 9xxx instruction
$74A    $1DBD   JP       $DBD            ; Jump to DBD
$74C    $34E8   SE       V4, #E8         ; Skip if V4 == 232
$74E    $8CFB   UNKNOWN  8CFB            ; Unknown 8xxx instruction
$750    $BD65   JP       V0, $D65        ; Jump to V0 + D65
$752    $F82C   UNKNOWN  F82C            ; Unknown Fxxx instruction
$754    $B650   JP       V0, $650        ; Jump to V0 + 650
$756    $7849   ADD      V8, #49         ; Add 73 to V8
$758    $36A8   SE       V6, #A8         ; Skip if V6 == 168
$75A    $5146   UNKNOWN  $5146           ; Unknown 5xxx instruction
$75C    $E403   UNKNOWN  $E403           ; Unknown Exxx instruction
$75E    $9AEB   UNKNOWN  $9AEB           ; Unknown 9xxx instruction
$760    $5B35   UNKNOWN  $5B35           ; Unknown 5xxx instruction
$762    $40DD   SNE      V0, #DD         ; Skip if V0 != 221
$764    $7656   ADD      V6, #56         ; Add 86 to V6
$766    $016D   SYS      $16D            ; System call to 16D
$768    $FD63   UNKNOWN  FD63            ; Unknown Fxxx instruction
$76A    $8643   XOR      V6, V4          ; V6 ^= V4
$76C    $AD0D   LD       I, $D0D         ; Load D0D into I
$76E    $DB20   DRW      VB, V2, #0      ; Draw 0-byte sprite at VB, V2
$770    $0232   SYS      $232            ; System call to 232
$772    $57B7   UNKNOWN  $57B7           ; Unknown 5xxx instruction
$774    $8452   AND      V4, V5          ; V4 &= V5
$776    $0855   SYS      $855            ; System call to 855
$778    $5A4E   UNKNOWN  $5A4E           ; Unknown 5xxx instruction
$77A    $9C04   UNKNOWN  $9C04           ; Unknown 9xxx instruction
$77C    $4EA5   SNE      VE, #A5         ; Skip if VE != 165
$77E    $6B79   LD       VB, #79         ; Load 121 into VB
$780    $5131   UNKNOWN  $5131           ; Unknown 5xxx instruction
$782    $579B   UNKNOWN  $579B           ; Unknown 5xxx instruction
$784    $6C41   LD       VC, #41         ; Load 65 into VC
$786    $851D   UNKNOWN  851D            ; Unknown 8xxx instruction
$788    $E08C   UNKNOWN  $E08C           ; Unknown Exxx instruction
$78A    $266F   CALL     $66F            ; Call subroutine at 66F
$78C    $9037   UNKNOWN  $9037           ; Unknown 9xxx instruction
$78E    $10EB   JP       $0EB            ; Jump to 0EB
$790    $3B34   SE       VB, #34         ; Skip if VB == 52
$792    $A16B   LD       I, $16B         ; Load 16B into I
$794    $B7A0   JP       V0, $7A0        ; Jump to V0 + 7A0
$796    $0C58   SYS      $C58            ; System call to C58
$798    $0EE1   SYS      $EE1            ; System call to EE1
$79A    $BE3E   JP       V0, $E3E        ; Jump to V0 + E3E
$79C    $62DD   LD       V2, #DD         ; Load 221 into V2
$79E    $7A95   ADD      VA, #95         ; Add 149 to VA
$7A0    $9EA6   UNKNOWN  $9EA6           ; Unknown 9xxx instruction
$7A2    $DD62   DRW      VD, V6, #2      ; Draw 2-byte sprite at VD, V6
$7A4    $7728   ADD      V7, #28         ; Add 40 to V7
$7A6    $668E   LD       V6, #8E         ; Load 142 into V6
$7A8    $0B9B   SYS      $B9B            ; System call to B9B
$7AA    $1F65   JP       $F65            ; Jump to F65
$7AC    $19D7   JP       $9D7            ; Jump to 9D7
$7AE    $EA49   UNKNOWN  $EA49           ; Unknown Exxx instruction
$7B0    $9EB1   UNKNOWN  $9EB1           ; Unknown 9xxx instruction
$7B2    $5B7A   UNKNOWN  $5B7A           ; Unknown 5xxx instruction
$7B4    $293E   CALL     $93E            ; Call subroutine at 93E
$7B6    $5BF9   UNKNOWN  $5BF9           ; Unknown 5xxx instruction
$7B8    $A98F   LD       I, $98F         ; Load 98F into I
$7BA    $423C   SNE      V2, #3C         ; Skip if V2 != 60
$7BC    $4893   SNE      V8, #93         ; Skip if V8 != 147
$7BE    $D596   DRW      V5, V9, #6      ; Draw 6-byte sprite at V5, V9
$7C0    $D10B   DRW      V1, V0, #B      ; Draw 11-byte sprite at V1, V0
$7C2    $C8CE   RND      V8, #CE         ; V8 = random & CE
$7C4    $F84D   UNKNOWN  F84D            ; Unknown Fxxx instruction
$7C6    $532E   UNKNOWN  $532E           ; Unknown 5xxx instruction
$7C8    $46C6   SNE      V6, #C6         ; Skip if V6 != 198
$7CA    $2CCC   CALL     $CCC            ; Call subroutine at CCC
$7CC    $5E81   UNKNOWN  $5E81           ; Unknown 5xxx instruction
$7CE    $CDFA   RND      VD, #FA         ; VD = random & FA
$7D0    $ED20   UNKNOWN  $ED20           ; Unknown Exxx instruction
$7D2    $7EBB   ADD      VE, #BB         ; Add 187 to VE
$7D4    $C4E9   RND      V4, #E9         ; V4 = random & E9
$7D6    $9881   UNKNOWN  $9881           ; Unknown 9xxx instruction
$7D8    $B502   JP       V0, $502        ; Jump to V0 + 502
$7DA    $C631   RND      V6, #31         ; V6 = random & 31
$7DC    $1024   JP       $024            ; Jump to 024
$7DE    $872D   UNKNOWN  872D            ; Unknown 8xxx instruction
$7E0    $6EA7   LD       VE, #A7         ; Load 167 into VE
$7E2    $9A5F   UNKNOWN  $9A5F           ; Unknown 9xxx instruction
$7E4    $5B6E   UNKNOWN  $5B6E           ; Unknown 5xxx instruction
$7E6    $AE83   LD       I, $E83         ; Load E83 into I
$7E8    $10CF   JP       $0CF            ; Jump to 0CF
$7EA    $2BD8   CALL     $BD8            ; Call subroutine at BD8
$7EC    $09E0   SYS      $9E0            ; System call to 9E0
$7EE    $5C9A   UNKNOWN  $5C9A           ; Unknown 5xxx instruction
$7F0    $D416   DRW      V4, V1, #6      ; Draw 6-byte sprite at V4, V1
$7F2    $858E   SHL      V5              ; V5 <<= 1, VF = MSB
$7F4    $6CEF   LD       VC, #EF         ; Load 239 into VC
$7F6    $21A9   CALL     $1A9            ; Call subroutine at 1A9
$7F8    $80B5   SUB      V0, VB          ; V0 -= VB, VF = !borrow
$7FA    $D014   DRW      V0, V1, #4      ; Draw 4-byte sprite at V0, V1
$7FC    $B207   JP       V0, $207        ; Jump to V0 + 207
$7FE    $6811   LD       V8, #11         ; Load 17 into V8
$800    $DFEF   DRW      VF, VE, #F      ; Draw 15-byte sprite at VF, VE
$802    $5A80   SE       VA, V8          ; Skip if VA == V8
$804    $48E3   SNE      V8, #E3         ; Skip if V8 != 227
$806    $AF8E   LD       I, $F8E         ; Load F8E into I
$808    $82B1   OR       V2, VB          ; V2 |= VB
$80A    $2FB7   CALL     $FB7            ; Call subroutine at FB7
$80C    $D06E   DRW      V0, V6, #E      ; Draw 14-byte sprite at V0, V6
$80E    $DC6D   DRW      VC, V6, #D      ; Draw 13-byte sprite at VC, V6
$810    $BE23   JP       V0, $E23        ; Jump to V0 + E23
$812    $996B   UNKNOWN  $996B           ; Unknown 9xxx instruction
$814    $3CAC   SE       VC, #AC         ; Skip if VC == 172
$816    $8E4A   UNKNOWN  8E4A            ; Unknown 8xxx instruction
$818    $035B   SYS      $35B            ; System call to 35B
$81A    $168D   JP       $68D            ; Jump to 68D
$81C    $246C   CALL     $46C            ; Call subroutine at 46C
$81E    $C578   RND      V5, #78         ; V5 = random & 78
$820    $9C3F   UNKNOWN  $9C3F           ; Unknown 9xxx instruction
$822    $D4BA   DRW      V4, VB, #A      ; Draw 10-byte sprite at V4, VB
$824    $DAF6   DRW      VA, VF, #6      ; Draw 6-byte sprite at VA, VF
$826    $43D6   SNE      V3, #D6         ; Skip if V3 != 214
$828    $F3F8   UNKNOWN  F3F8            ; Unknown Fxxx instruction
$82A    $B096   JP       V0, $096        ; Jump to V0 + 096
$82C    $C6BE   RND      V6, #BE         ; V6 = random & BE
$82E    $EF57   UNKNOWN  $EF57           ; Unknown Exxx instruction
$830    $EDD0   UNKNOWN  $EDD0           ; Unknown Exxx instruction
$832    $714B   ADD      V1, #4B         ; Add 75 to V1
$834    $D1C0   DRW      V1, VC, #0      ; Draw 0-byte sprite at V1, VC
$836    $09BB   SYS      $9BB            ; System call to 9BB
$838    $8B0A   UNKNOWN  8B0A            ; Unknown 8xxx instruction
$83A    $AE49   LD       I, $E49         ; Load E49 into I
$83C    $A2AA   LD       I, $2AA         ; Load 2AA into I
$83E    $272D   CALL     $72D            ; Call subroutine at 72D
$840    $EFE4   UNKNOWN  $EFE4           ; Unknown Exxx instruction
$842    $ACEF   LD       I, $CEF         ; Load CEF into I
$844    $CBC8   RND      VB, #C8         ; VB = random & C8
$846    $B244   JP       V0, $244        ; Jump to V0 + 244
$848    $E515   UNKNOWN  $E515           ; Unknown Exxx instruction
$84A    $6BE5   LD       VB, #E5         ; Load 229 into VB
$84C    $41F9   SNE      V1, #F9         ; Skip if V1 != 249
$84E    $5CA2   UNKNOWN  $5CA2           ; Unknown 5xxx instruction
$850    $B831   JP       V0, $831        ; Jump to V0 + 831
$852    $E46B   UNKNOWN  $E46B           ; Unknown Exxx instruction
$854    $5285   UNKNOWN  $5285           ; Unknown 5xxx instruction
$856    $621F   LD       V2, #1F         ; Load 31 into V2
$858    $F623   UNKNOWN  F623            ; Unknown Fxxx instruction
$85A    $6C7F   LD       VC, #7F         ; Load 127 into VC
$85C    $C602   RND      V6, #02         ; V6 = random & 02
$85E    $A34F   LD       I, $34F         ; Load 34F into I
$860    $5DD8   UNKNOWN  $5DD8           ; Unknown 5xxx instruction
$862    $4AB5   SNE      VA, #B5         ; Skip if VA != 181
$864    $A6D7   LD       I, $6D7         ; Load 6D7 into I
$866    $AB1D   LD       I, $B1D         ; Load B1D into I
$868    $D563   DRW      V5, V6, #3      ; Draw 3-byte sprite at V5, V6
$86A    $0CE2   SYS      $CE2            ; System call to CE2
$86C    $9DA5   UNKNOWN  $9DA5           ; Unknown 9xxx instruction
$86E    $8AB6   SHR      VA              ; VA >>= 1, VF = LSB
$870    $A55E   LD       I, $55E         ; Load 55E into I
$872    $C662   RND      V6, #62         ; V6 = random & 62
$874    $25C7   CALL     $5C7            ; Call subroutine at 5C7
$876    $09AB   SYS      $9AB            ; System call to 9AB
$878    $32BE   SE       V2, #BE         ; Skip if V2 == 190
$87A    $0431   SYS      $431            ; System call to 431
$87C    $990A   UNKNOWN  $990A           ; Unknown 9xxx instruction
$87E    $674F   LD       V7, #4F         ; Load 79 into V7
$880    $6B59   LD       VB, #59         ; Load 89 into VB
$882    $BFE0   JP       V0, $FE0        ; Jump to V0 + FE0
$884    $2103   CALL     $103            ; Call subroutine at 103
$886    $7F4D   ADD      VF, #4D         ; Add 77 to VF
$888    $D5FB   DRW      V5, VF, #B      ; Draw 11-byte sprite at V5, VF
$88A    $ABF6   LD       I, $BF6         ; Load BF6 into I
$88C    $AE22   LD       I, $E22         ; Load E22 into I
$88E    $8AC4   ADD      VA, VC          ; VA += VC, VF = carry
$890    $7B97   ADD      VB, #97         ; Add 151 to VB
$892    $6875   LD       V8, #75         ; Load 117 into V8
$894    $D200   DRW      V2, V0, #0      ; Draw 0-byte sprite at V2, V0
$896    $DA9C   DRW      VA, V9, #C      ; Draw 12-byte sprite at VA, V9
$898    $0D7E   SYS      $D7E            ; System call to D7E
$89A    $435C   SNE      V3, #5C         ; Skip if V3 != 92
$89C    $10EE   JP       $0EE            ; Jump to 0EE
$89E    $69F0   LD       V9, #F0         ; Load 240 into V9
$8A0    $519B   UNKNOWN  $519B           ; Unknown 5xxx instruction
$8A2    $B326   JP       V0, $326        ; Jump to V0 + 326
$8A4    $AEA4   LD       I, $EA4         ; Load EA4 into I
$8A6    $BEEA   JP       V0, $EEA        ; Jump to V0 + EEA
$8A8    $56D5   UNKNOWN  $56D5           ; Unknown 5xxx instruction
$8AA    $8CD1   OR       VC, VD          ; VC |= VD
$8AC    $03C6   SYS      $3C6            ; System call to 3C6
$8AE    $68FE   LD       V8, #FE         ; Load 254 into V8
$8B0    $C5A9   RND      V5, #A9         ; V5 = random & A9
$8B2    $A502   LD       I, $502         ; Load 502 into I
$8B4    $68F3   LD       V8, #F3         ; Load 243 into V8
$8B6    $246B   CALL     $46B            ; Call subroutine at 46B
$8B8    $CD96   RND      VD, #96         ; VD = random & 96
$8BA    $19B0   JP       $9B0            ; Jump to 9B0
$8BC    $253A   CALL     $53A            ; Call subroutine at 53A
$8BE    $77CA   ADD      V7, #CA         ; Add 202 to V7
$8C0    $2AD5   CALL     $AD5            ; Call subroutine at AD5
$8C2    $E356   UNKNOWN  $E356           ; Unknown Exxx instruction
$8C4    $27AF   CALL     $7AF            ; Call subroutine at 7AF
$8C6    $36F4   SE       V6, #F4         ; Skip if V6 == 244
$8C8    $D999   DRW      V9, V9, #9      ; Draw 9-byte sprite at V9, V9
$8CA    $6F0D   LD       VF, #0D         ; Load 13 into VF
$8CC    $AC06   LD       I, $C06         ; Load C06 into I
$8CE    $B4F6   JP       V0, $4F6        ; Jump to V0 + 4F6
$8D0    $561D   UNKNOWN  $561D           ; Unknown 5xxx instruction
$8D2    $1E32   JP       $E32            ; Jump to E32
$8D4    $F8B8   UNKNOWN  F8B8            ; Unknown Fxxx instruction
$8D6    $EB7E   UNKNOWN  $EB7E           ; Unknown Exxx instruction
$8D8    $848A   UNKNOWN  848A            ; Unknown 8xxx instruction
$8DA    $5FE4   UNKNOWN  $5FE4           ; Unknown 5xxx instruction
$8DC    $3936   SE       V9, #36         ; Skip if V9 == 54
$8DE    $A2F2   LD       I, $2F2         ; Load 2F2 into I
$8E0    $0256   SYS      $256            ; System call to 256
$8E2    $1ABE   JP       $ABE            ; Jump to ABE
$8E4    $ECAA   UNKNOWN  $ECAA           ; Unknown Exxx instruction
$8E6    $316D   SE       V1, #6D         ; Skip if V1 == 109
$8E8    $8808   UNKNOWN  8808            ; Unknown 8xxx instruction
$8EA    $B400   JP       V0, $400        ; Jump to V0 + 400
$8EC    $62F5   LD       V2, #F5         ; Load 245 into V2
$8EE    $D022   DRW      V0, V2, #2      ; Draw 2-byte sprite at V0, V2
$8F0    $E2C6   UNKNOWN  $E2C6           ; Unknown Exxx instruction
$8F2    $6E35   LD       VE, #35         ; Load 53 into VE
$8F4    $E2AA   UNKNOWN  $E2AA           ; Unknown Exxx instruction
$8F6    $2637   CALL     $637            ; Call subroutine at 637
$8F8    $6F82   LD       VF, #82         ; Load 130 into VF
$8FA    $CCED   RND      VC, #ED         ; VC = random & ED
$8FC    $CE0E   RND      VE, #0E         ; VE = random & 0E
$8FE    $E2D3   UNKNOWN  $E2D3           ; Unknown Exxx instruction
$900    $9A28   UNKNOWN  $9A28           ; Unknown 9xxx instruction
$902    $0214   SYS      $214            ; System call to 214
$904    $22EF   CALL     $2EF            ; Call subroutine at 2EF
$906    $CDF7   RND      VD, #F7         ; VD = random & F7
$908    $16DD   JP       $6DD            ; Jump to 6DD
$90A    $6E83   LD       VE, #83         ; Load 131 into VE
$90C    $8741   OR       V7, V4          ; V7 |= V4
$90E    $06B3   SYS      $6B3            ; System call to 6B3
$910    $DCDE   DRW      VC, VD, #E      ; Draw 14-byte sprite at VC, VD
$912    $D5A2   DRW      V5, VA, #2      ; Draw 2-byte sprite at V5, VA
$914    $EDB2   UNKNOWN  $EDB2           ; Unknown Exxx instruction
$916    $3F86   SE       VF, #86         ; Skip if VF == 134
$918    $EE05   UNKNOWN  $EE05           ; Unknown Exxx instruction
$91A    $0DBF   SYS      $DBF            ; System call to DBF
$91C    $0438   SYS      $438            ; System call to 438
$91E    $CFB7   RND      VF, #B7         ; VF = random & B7
$920    $47FA   SNE      V7, #FA         ; Skip if V7 != 250
$922    $D6AA   DRW      V6, VA, #A      ; Draw 10-byte sprite at V6, VA
$924    $942A   UNKNOWN  $942A           ; Unknown 9xxx instruction
$926    $0A60   SYS      $A60            ; System call to A60
$928    $CB19   RND      VB, #19         ; VB = random & 19
$92A    $E779   UNKNOWN  $E779           ; Unknown Exxx instruction
$92C    $D246   DRW      V2, V4, #6      ; Draw 6-byte sprite at V2, V4
$92E    $EA65   UNKNOWN  $EA65           ; Unknown Exxx instruction
$930    $D81E   DRW      V8, V1, #E      ; Draw 14-byte sprite at V8, V1
$932    $F149   UNKNOWN  F149            ; Unknown Fxxx instruction
$934    $DD89   DRW      VD, V8, #9      ; Draw 9-byte sprite at VD, V8
$936    $499F   SNE      V9, #9F         ; Skip if V9 != 159
$938    $5461   UNKNOWN  $5461           ; Unknown 5xxx instruction
$93A    $4911   SNE      V9, #11         ; Skip if V9 != 17
$93C    $620D   LD       V2, #0D         ; Load 13 into V2
$93E    $66F9   LD       V6, #F9         ; Load 249 into V6
$940    $C451   RND      V4, #51         ; V4 = random & 51
$942    $8865   SUB      V8, V6          ; V8 -= V6, VF = !borrow
$944    $38B7   SE       V8, #B7         ; Skip if V8 == 183
$946    $24AC   CALL     $4AC            ; Call subroutine at 4AC
$948    $C1C6   RND      V1, #C6         ; V1 = random & C6
$94A    $EED6   UNKNOWN  $EED6           ; Unknown Exxx instruction
$94C    $93A3   UNKNOWN  $93A3           ; Unknown 9xxx instruction
$94E    $50E2   UNKNOWN  $50E2           ; Unknown 5xxx instruction
$950    $E5DA   UNKNOWN  $E5DA           ; Unknown Exxx instruction
$952    $6134   LD       V1, #34         ; Load 52 into V1
$954    $9337   UNKNOWN  $9337           ; Unknown 9xxx instruction
$956    $9665   UNKNOWN  $9665           ; Unknown 9xxx instruction
$958    $6E68   LD       VE, #68         ; Load 104 into VE
$95A    $211D   CALL     $11D            ; Call subroutine at 11D
$95C    $0785   SYS      $785            ; System call to 785
$95E    $E41E   UNKNOWN  $E41E           ; Unknown Exxx instruction
$960    $B302   JP       V0, $302        ; Jump to V0 + 302
$962    $06DD   SYS      $6DD            ; System call to 6DD
$964    $C5E4   RND      V5, #E4         ; V5 = random & E4
$966    $AA13   LD       I, $A13         ; Load A13 into I
$968    $C93E   RND      V9, #3E         ; V9 = random & 3E
$96A    $976C   UNKNOWN  $976C           ; Unknown 9xxx instruction
$96C    $6B63   LD       VB, #63         ; Load 99 into VB
$96E    $6849   LD       V8, #49         ; Load 73 into V8
$970    $CF59   RND      VF, #59         ; VF = random & 59
$972    $94DE   UNKNOWN  $94DE           ; Unknown 9xxx instruction
$974    $9D7A   UNKNOWN  $9D7A           ; Unknown 9xxx instruction
$976    $E61F   UNKNOWN  $E61F           ; Unknown Exxx instruction
$978    $A786   LD       I, $786         ; Load 786 into I
$97A    $E1FD   UNKNOWN  $E1FD           ; Unknown Exxx instruction
$97C    $083F   SYS      $83F            ; System call to 83F
$97E    $E176   UNKNOWN  $E176           ; Unknown Exxx instruction
$980    $684A   LD       V8, #4A         ; Load 74 into V8
$982    $7797   ADD      V7, #97         ; Add 151 to V7
$984    $E134   UNKNOWN  $E134           ; Unknown Exxx instruction
$986    $552E   UNKNOWN  $552E           ; Unknown 5xxx instruction
$988    $D60E   DRW      V6, V0, #E      ; Draw 14-byte sprite at V6, V0
$98A    $BDF8   JP       V0, $DF8        ; Jump to V0 + DF8
$98C    $FB42   UNKNOWN  FB42            ; Unknown Fxxx instruction
$98E    $E81B   UNKNOWN  $E81B           ; Unknown Exxx instruction
$990    $A7B3   LD       I, $7B3         ; Load 7B3 into I
$992    $3AD0   SE       VA, #D0         ; Skip if VA == 208
$994    $2CAD   CALL     $CAD            ; Call subroutine at CAD
$996    $338F   SE       V3, #8F         ; Skip if V3 == 143
$998    $8163   XOR      V1, V6          ; V1 ^= V6
$99A    $7A55   ADD      VA, #55         ; Add 85 to VA
$99C    $EA3E   UNKNOWN  $EA3E           ; Unknown Exxx instruction
$99E    $14DE   JP       $4DE            ; Jump to 4DE
$9A0    $8089   UNKNOWN  8089            ; Unknown 8xxx instruction
$9A2    $059F   SYS      $59F            ; System call to 59F
$9A4    $A1D8   LD       I, $1D8         ; Load 1D8 into I
$9A6    $CF6F   RND      VF, #6F         ; VF = random & 6F
$9A8    $7CDA   ADD      VC, #DA         ; Add 218 to VC
$9AA    $6A27   LD       VA, #27         ; Load 39 into VA
$9AC    $E72B   UNKNOWN  $E72B           ; Unknown Exxx instruction
$9AE    $774D   ADD      V7, #4D         ; Add 77 to V7
$9B0    $57D8   UNKNOWN  $57D8           ; Unknown 5xxx instruction
$9B2    $FB5C   UNKNOWN  FB5C            ; Unknown Fxxx instruction
$9B4    $6503   LD       V5, #03         ; Load 3 into V5
$9B6    $2970   CALL     $970            ; Call subroutine at 970
$9B8    $777D   ADD      V7, #7D         ; Add 125 to V7
$9BA    $18FD   JP       $8FD            ; Jump to 8FD
$9BC    $EE37   UNKNOWN  $EE37           ; Unknown Exxx instruction
$9BE    $7EC2   ADD      VE, #C2         ; Add 194 to VE
$9C0    $81D3   XOR      V1, VD          ; V1 ^= VD
$9C2    $9A22   UNKNOWN  $9A22           ; Unknown 9xxx instruction
$9C4    $2322   CALL     $322            ; Call subroutine at 322
$9C6    $5C2D   UNKNOWN  $5C2D           ; Unknown 5xxx instruction
$9C8    $BFE8   JP       V0, $FE8        ; Jump to V0 + FE8
$9CA    $6F46   LD       VF, #46         ; Load 70 into VF
$9CC    $FD87   UNKNOWN  FD87            ; Unknown Fxxx instruction
$9CE    $DDD2   DRW      VD, VD, #2      ; Draw 2-byte sprite at VD, VD
$9D0    $C32D   RND      V3, #2D         ; V3 = random & 2D
$9D2    $5537   UNKNOWN  $5537           ; Unknown 5xxx instruction
$9D4    $14F5   JP       $4F5            ; Jump to 4F5
$9D6    $19B8   JP       $9B8            ; Jump to 9B8
$9D8    $1E29   JP       $E29            ; Jump to E29
$9DA    $1B82   JP       $B82            ; Jump to B82
$9DC    $EFA1   SKNP     VF              ; Skip if key VF not pressed
$9DE    $7878   ADD      V8, #78         ; Add 120 to V8
$9E0    $E99D   UNKNOWN  $E99D           ; Unknown Exxx instruction
$9E2    $E696   UNKNOWN  $E696           ; Unknown Exxx instruction
$9E4    $7487   ADD      V4, #87         ; Add 135 to V4
$9E6    $8D45   SUB      VD, V4          ; VD -= V4, VF = !borrow
$9E8    $43F3   SNE      V3, #F3         ; Skip if V3 != 243
$9EA    $8586   SHR      V5              ; V5 >>= 1, VF = LSB
$9EC    $7446   ADD      V4, #46         ; Add 70 to V4
$9EE    $0458   SYS      $458            ; System call to 458
$9F0    $E1C5   UNKNOWN  $E1C5           ; Unknown Exxx instruction
$9F2    $BC69   JP       V0, $C69        ; Jump to V0 + C69
$9F4    $3A07   SE       VA, #07         ; Skip if VA == 7
$9F6    $9F80   SNE      VF, V8          ; Skip if VF != V8
$9F8    $4593   SNE      V5, #93         ; Skip if V5 != 147
$9FA    $EB92   UNKNOWN  $EB92           ; Unknown Exxx instruction
$9FC    $5172   UNKNOWN  $5172           ; Unknown 5xxx instruction
$9FE    $3A94   SE       VA, #94         ; Skip if VA == 148
$A00    $5D9C   UNKNOWN  $5D9C           ; Unknown 5xxx instruction
$A02    $949C   UNKNOWN  $949C           ; Unknown 9xxx instruction
$A04    $3E8C   SE       VE, #8C         ; Skip if VE == 140
$A06    $9400   SNE      V4, V0          ; Skip if V4 != V0
$A08    $F6CA   UNKNOWN  F6CA            ; Unknown Fxxx instruction
$A0A    $3DA8   SE       VD, #A8         ; Skip if VD == 168
$A0C    $548A   UNKNOWN  $548A           ; Unknown 5xxx instruction
$A0E    $2A19   CALL     $A19            ; Call subroutine at A19
$A10    $8D3E   SHL      VD              ; VD <<= 1, VF = MSB
$A12    $10FF   JP       $0FF            ; Jump to 0FF
$A14    $8B69   UNKNOWN  8B69            ; Unknown 8xxx instruction
$A16    $5B8B   UNKNOWN  $5B8B           ; Unknown 5xxx instruction
$A18    $EB8C   UNKNOWN  $EB8C           ; Unknown Exxx instruction
$A1A    $0F5A   SYS      $F5A            ; System call to F5A
$A1C    $C3FD   RND      V3, #FD         ; V3 = random & FD
$A1E    $4C97   SNE      VC, #97         ; Skip if VC != 151
$A20    $DE27   DRW      VE, V2, #7      ; Draw 7-byte sprite at VE, V2
$A22    $5D7C   UNKNOWN  $5D7C           ; Unknown 5xxx instruction
$A24    $FFE4   UNKNOWN  FFE4            ; Unknown Fxxx instruction
$A26    $67D8   LD       V7, #D8         ; Load 216 into V7
$A28    $3811   SE       V8, #11         ; Skip if V8 == 17
$A2A    $5638   UNKNOWN  $5638           ; Unknown 5xxx instruction
$A2C    $9114   UNKNOWN  $9114           ; Unknown 9xxx instruction
$A2E    $3DC4   SE       VD, #C4         ; Skip if VD == 196
$A30    $6D65   LD       VD, #65         ; Load 101 into VD
$A32    $1388   JP       $388            ; Jump to 388
$A34    $8B8B   UNKNOWN  8B8B            ; Unknown 8xxx instruction
$A36    $DFC6   DRW      VF, VC, #6      ; Draw 6-byte sprite at VF, VC
$A38    $F939   UNKNOWN  F939            ; Unknown Fxxx instruction
$A3A    $6281   LD       V2, #81         ; Load 129 into V2
$A3C    $F3C0   UNKNOWN  F3C0            ; Unknown Fxxx instruction
$A3E    $EA4A   UNKNOWN  $EA4A           ; Unknown Exxx instruction
$A40    $A36E   LD       I, $36E         ; Load 36E into I
$A42    $86AF   UNKNOWN  86AF            ; Unknown 8xxx instruction
$A44    $A8E8   LD       I, $8E8         ; Load 8E8 into I
$A46    $876B   UNKNOWN  876B            ; Unknown 8xxx instruction
$A48    $D87E   DRW      V8, V7, #E      ; Draw 14-byte sprite at V8, V7
$A4A    $CD36   RND      VD, #36         ; VD = random & 36
$A4C    $51E4   UNKNOWN  $51E4           ; Unknown 5xxx instruction
$A4E    $A245   LD       I, $245         ; Load 245 into I
$A50    $5329   UNKNOWN  $5329           ; Unknown 5xxx instruction
$A52    $FB29   LD       F, VB           ; I = sprite address for digit VB
$A54    $CDC5   RND      VD, #C5         ; VD = random & C5
$A56    $5E75   UNKNOWN  $5E75           ; Unknown 5xxx instruction
$A58    $6C6A   LD       VC, #6A         ; Load 106 into VC
$A5A    $F72F   UNKNOWN  F72F            ; Unknown Fxxx instruction
$A5C    $9969   UNKNOWN  $9969           ; Unknown 9xxx instruction
$A5E    $1A57   JP       $A57            ; Jump to A57
$A60    $DB87   DRW      VB, V8, #7      ; Draw 7-byte sprite at VB, V8
$A62    $5477   UNKNOWN  $5477           ; Unknown 5xxx instruction
$A64    $43EE   SNE      V3, #EE         ; Skip if V3 != 238
$A66    $4836   SNE      V8, #36         ; Skip if V8 != 54
$A68    $2000   CALL     $000            ; Call subroutine at 000
$A6A    $BC94   JP       V0, $C94        ; Jump to V0 + C94
$A6C    $C323   RND      V3, #23         ; V3 = random & 23
$A6E    $AA02   LD       I, $A02         ; Load A02 into I
$A70    $8C87   SUBN     VC, V8          ; VC = V8 - VC, VF = !borrow
$A72    $E529   UNKNOWN  $E529           ; Unknown Exxx instruction
$A74    $8C55   SUB      VC, V5          ; VC -= V5, VF = !borrow
$A76    $916C   UNKNOWN  $916C           ; Unknown 9xxx instruction
$A78    $09E6   SYS      $9E6            ; System call to 9E6
$A7A    $54C0   SE       V4, VC          ; Skip if V4 == VC
$A7C    $9C3D   UNKNOWN  $9C3D           ; Unknown 9xxx instruction
$A7E    $FA57   UNKNOWN  FA57            ; Unknown Fxxx instruction
$A80    $E558   UNKNOWN  $E558           ; Unknown Exxx instruction
$A82    $2867   CALL     $867            ; Call subroutine at 867
$A84    $1BEC   JP       $BEC            ; Jump to BEC
$A86    $F884   UNKNOWN  F884            ; Unknown Fxxx instruction
$A88    $59C4   UNKNOWN  $59C4           ; Unknown 5xxx instruction
$A8A    $E06B   UNKNOWN  $E06B           ; Unknown Exxx instruction
$A8C    $15EA   JP       $5EA            ; Jump to 5EA
$A8E    $A813   LD       I, $813         ; Load 813 into I
$A90    $18AD   JP       $8AD            ; Jump to 8AD
$A92    $19DF   JP       $9DF            ; Jump to 9DF
$A94    $C932   RND      V9, #32         ; V9 = random & 32
$A96    $AA0E   LD       I, $A0E         ; Load A0E into I
$A98    $7F15   ADD      VF, #15         ; Add 21 to VF
$A9A    $024A   SYS      $24A            ; System call to 24A
$A9C    $987B   UNKNOWN  $987B           ; Unknown 9xxx instruction
$A9E    $D14B   DRW      V1, V4, #B      ; Draw 11-byte sprite at V1, V4
$AA0    $371C   SE       V7, #1C         ; Skip if V7 == 28
$AA2    $2DDB   CALL     $DDB            ; Call subroutine at DDB
$AA4    $E848   UNKNOWN  $E848           ; Unknown Exxx instruction
$AA6    $8521   OR       V5, V2          ; V5 |= V2
$AA8    $2BE5   CALL     $BE5            ; Call subroutine at BE5
$AAA    $D712   DRW      V7, V1, #2      ; Draw 2-byte sprite at V7, V1
$AAC    $4DE3   SNE      VD, #E3         ; Skip if VD != 227
$AAE    $B314   JP       V0, $314        ; Jump to V0 + 314
$AB0    $D5D1   DRW      V5, VD, #1      ; Draw 1-byte sprite at V5, VD
$AB2    $1AD6   JP       $AD6            ; Jump to AD6
$AB4    $EE55   UNKNOWN  $EE55           ; Unknown Exxx instruction
$AB6    $D9F8   DRW      V9, VF, #8      ; Draw 8-byte sprite at V9, VF
$AB8    $74E9   ADD      V4, #E9         ; Add 233 to V4
$ABA    $69DC   LD       V9, #DC         ; Load 220 into V9
$ABC    $F9D4   UNKNOWN  F9D4            ; Unknown Fxxx instruction
$ABE    $C352   RND      V3, #52         ; V3 = random & 52
$AC0    $983D   UNKNOWN  $983D           ; Unknown 9xxx instruction
$AC2    $30F2   SE       V0, #F2         ; Skip if V0 == 242
$AC4    $6AD4   LD       VA, #D4         ; Load 212 into VA
$AC6    $E0A0   UNKNOWN  $E0A0           ; Unknown Exxx instruction
$AC8    $F9B3   UNKNOWN  F9B3            ; Unknown Fxxx instruction
$ACA    $AC13   LD       I, $C13         ; Load C13 into I
$ACC    $E080   UNKNOWN  $E080           ; Unknown Exxx instruction
$ACE    $3E3B   SE       VE, #3B         ; Skip if VE == 59
$AD0    $1C49   JP       $C49            ; Jump to C49
$AD2    $F9FD   UNKNOWN  F9FD            ; Unknown Fxxx instruction
$AD4    $2841   CALL     $841            ; Call subroutine at 841
$AD6    $9E3E   UNKNOWN  $9E3E           ; Unknown 9xxx instruction
$AD8    $1E7D   JP       $E7D            ; Jump to E7D
$ADA    $C273   RND      V2, #73         ; V2 = random & 73
$ADC    $BEE8   JP       V0, $EE8        ; Jump to V0 + EE8
$ADE    $9DE4   UNKNOWN  $9DE4           ; Unknown 9xxx instruction
$AE0    $C2A6   RND      V2, #A6         ; V2 = random & A6
$AE2    $A7E8   LD       I, $7E8         ; Load 7E8 into I
$AE4    $14C9   JP       $4C9            ; Jump to 4C9
$AE6    $50C1   UNKNOWN  $50C1           ; Unknown 5xxx instruction
$AE8    $41D5   SNE      V1, #D5         ; Skip if V1 != 213
$AEA    $2BF3   CALL     $BF3            ; Call subroutine at BF3
$AEC    $40FE   SNE      V0, #FE         ; Skip if V0 != 254
$AEE    $1E45   JP       $E45            ; Jump to E45
$AF0    $218C   CALL     $18C            ; Call subroutine at 18C
$AF2    $44B5   SNE      V4, #B5         ; Skip if V4 != 181
$AF4    $F974   UNKNOWN  F974            ; Unknown Fxxx instruction
$AF6    $B53E   JP       V0, $53E        ; Jump to V0 + 53E
$AF8    $026C   SYS      $26C            ; System call to 26C
$AFA    $2F62   CALL     $F62            ; Call subroutine at F62
$AFC    $174A   JP       $74A            ; Jump to 74A
$AFE    $DDDE   DRW      VD, VD, #E      ; Draw 14-byte sprite at VD, VD
$B00    $3F83   SE       VF, #83         ; Skip if VF == 131
$B02    $C1AE   RND      V1, #AE         ; V1 = random & AE
$B04    $D881   DRW      V8, V8, #1      ; Draw 1-byte sprite at V8, V8
$B06    $5939   UNKNOWN  $5939           ; Unknown 5xxx instruction
$B08    $D81A   DRW      V8, V1, #A      ; Draw 10-byte sprite at V8, V1
$B0A    $6B6A   LD       VB, #6A         ; Load 106 into VB
$B0C    $CF81   RND      VF, #81         ; VF = random & 81
$B0E    $D512   DRW      V5, V1, #2      ; Draw 2-byte sprite at V5, V1
$B10    $BD4F   JP       V0, $D4F        ; Jump to V0 + D4F
$B12    $BC16   JP       V0, $C16        ; Jump to V0 + C16
$B14    $4CF0   SNE      VC, #F0         ; Skip if VC != 240
$B16    $D123   DRW      V1, V2, #3      ; Draw 3-byte sprite at V1, V2
$B18    $DD6E   DRW      VD, V6, #E      ; Draw 14-byte sprite at VD, V6
$B1A    $B566   JP       V0, $566        ; Jump to V0 + 566
$B1C    $F863   UNKNOWN  F863            ; Unknown Fxxx instruction
$B1E    $02C5   SYS      $2C5            ; System call to 2C5
$B20    $C6FE   RND      V6, #FE         ; V6 = random & FE
$B22    $85D7   SUBN     V5, VD          ; V5 = VD - V5, VF = !borrow
$B24    $7608   ADD      V6, #08         ; Add 8 to V6
$B26    $35A0   SE       V5, #A0         ; Skip if V5 == 160
$B28    $6551   LD       V5, #51         ; Load 81 into V5
$B2A    $2A54   CALL     $A54            ; Call subroutine at A54
$B2C    $BC7C   JP       V0, $C7C        ; Jump to V0 + C7C
$B2E    $8546   SHR      V5              ; V5 >>= 1, VF = LSB
$B30    $F0FC   UNKNOWN  F0FC            ; Unknown Fxxx instruction
$B32    $EA76   UNKNOWN  $EA76           ; Unknown Exxx instruction
$B34    $23FC   CALL     $3FC            ; Call subroutine at 3FC
$B36    $2BEA   CALL     $BEA            ; Call subroutine at BEA
$B38    $4ACC   SNE      VA, #CC         ; Skip if VA != 204
$B3A    $AFBF   LD       I, $FBF         ; Load FBF into I
$B3C    $DB7A   DRW      VB, V7, #A      ; Draw 10-byte sprite at VB, V7
$B3E    $710C   ADD      V1, #0C         ; Add 12 to V1
$B40    $FEC4   UNKNOWN  FEC4            ; Unknown Fxxx instruction
$B42    $8F63   XOR      VF, V6          ; VF ^= V6
$B44    $0A79   SYS      $A79            ; System call to A79
$B46    $3C8D   SE       VC, #8D         ; Skip if VC == 141
$B48    $368E   SE       V6, #8E         ; Skip if V6 == 142
$B4A    $0495   SYS      $495            ; System call to 495
$B4C    $8525   SUB      V5, V2          ; V5 -= V2, VF = !borrow
$B4E    $AB1A   LD       I, $B1A         ; Load B1A into I
$B50    $182C   JP       $82C            ; Jump to 82C
$B52    $A2EC   LD       I, $2EC         ; Load 2EC into I
$B54    $1112   JP       $112            ; Jump to 112
$B56    $B59E   JP       V0, $59E        ; Jump to V0 + 59E
$B58    $76B7   ADD      V6, #B7         ; Add 183 to V6
$B5A    $946C   UNKNOWN  $946C           ; Unknown 9xxx instruction
$B5C    $568B   UNKNOWN  $568B           ; Unknown 5xxx instruction
$B5E    $7B57   ADD      VB, #57         ; Add 87 to VB
$B60    $8935   SUB      V9, V3          ; V9 -= V3, VF = !borrow
$B62    $CE98   RND      VE, #98         ; VE = random & 98
$B64    $D498   DRW      V4, V9, #8      ; Draw 8-byte sprite at V4, V9
$B66    $ADCD   LD       I, $DCD         ; Load DCD into I
$B68    $3272   SE       V2, #72         ; Skip if V2 == 114
$B6A    $44BC   SNE      V4, #BC         ; Skip if V4 != 188
$B6C    $FC59   UNKNOWN  FC59            ; Unknown Fxxx instruction
$B6E    $2688   CALL     $688            ; Call subroutine at 688
$B70    $F6D1   UNKNOWN  F6D1            ; Unknown Fxxx instruction
$B72    $1F7D   JP       $F7D            ; Jump to F7D
$B74    $B064   JP       V0, $064        ; Jump to V0 + 064
$B76    $BE1B   JP       V0, $E1B        ; Jump to V0 + E1B
$B78    $61F1   LD       V1, #F1         ; Load 241 into V1
$B7A    $22E6   CALL     $2E6            ; Call subroutine at 2E6
$B7C    $9CEA   UNKNOWN  $9CEA           ; Unknown 9xxx instruction
$B7E    $6642   LD       V6, #42         ; Load 66 into V6
$B80    $7A3F   ADD      VA, #3F         ; Add 63 to VA
$B82    $598F   UNKNOWN  $598F           ; Unknown 5xxx instruction
$B84    $A824   LD       I, $824         ; Load 824 into I
$B86    $13D8   JP       $3D8            ; Jump to 3D8
$B88    $5050   SE       V0, V5          ; Skip if V0 == V5
$B8A    $B0FD   JP       V0, $0FD        ; Jump to V0 + 0FD
$B8C    $CD07   RND      VD, #07         ; VD = random & 07
$B8E    $D883   DRW      V8, V8, #3      ; Draw 3-byte sprite at V8, V8
$B90    $F0CB   UNKNOWN  F0CB            ; Unknown Fxxx instruction
$B92    $C3FE   RND      V3, #FE         ; V3 = random & FE
$B94    $962E   UNKNOWN  $962E           ; Unknown 9xxx instruction
$B96    $F029   LD       F, V0           ; I = sprite address for digit V0
$B98    $19EC   JP       $9EC            ; Jump to 9EC
$B9A    $C2C8   RND      V2, #C8         ; V2 = random & C8
$B9C    $E950   UNKNOWN  $E950           ; Unknown Exxx instruction
$B9E    $7A7E   ADD      VA, #7E         ; Add 126 to VA
$BA0    $46EA   SNE      V6, #EA         ; Skip if V6 != 234
$BA2    $A58F   LD       I, $58F         ; Load 58F into I
$BA4    $14E1   JP       $4E1            ; Jump to 4E1
$BA6    $81D4   ADD      V1, VD          ; V1 += VD, VF = carry
$BA8    $4522   SNE      V5, #22         ; Skip if V5 != 34
$BAA    $E598   UNKNOWN  $E598           ; Unknown Exxx instruction
$BAC    $0539   SYS      $539            ; System call to 539
$BAE    $5937   UNKNOWN  $5937           ; Unknown 5xxx instruction
$BB0    $D384   DRW      V3, V8, #4      ; Draw 4-byte sprite at V3, V8
$BB2    $F658   UNKNOWN  F658            ; Unknown Fxxx instruction
$BB4    $FC34   UNKNOWN  FC34            ; Unknown Fxxx instruction
$BB6    $989F   UNKNOWN  $989F           ; Unknown 9xxx instruction
$BB8    $6639   LD       V6, #39         ; Load 57 into V6
$BBA    $73C3   ADD      V3, #C3         ; Add 195 to V3
$BBC    $4D32   SNE      VD, #32         ; Skip if VD != 50
$BBE    $B254   JP       V0, $254        ; Jump to V0 + 254
$BC0    $E029   UNKNOWN  $E029           ; Unknown Exxx instruction
$BC2    $96AD   UNKNOWN  $96AD           ; Unknown 9xxx instruction
$BC4    $A200   LD       I, $200         ; Load 200 into I
$BC6    $6A25   LD       VA, #25         ; Load 37 into VA
$BC8    $CCBF   RND      VC, #BF         ; VC = random & BF
$BCA    $2658   CALL     $658            ; Call subroutine at 658
$BCC    $861D   UNKNOWN  861D            ; Unknown 8xxx instruction
$BCE    $590B   UNKNOWN  $590B           ; Unknown 5xxx instruction
$BD0    $17FB   JP       $7FB            ; Jump to 7FB
$BD2    $6A36   LD       VA, #36         ; Load 54 into VA
$BD4    $CE67   RND      VE, #67         ; VE = random & 67
$BD6    $C126   RND      V1, #26         ; V1 = random & 26
$BD8    $8618   UNKNOWN  8618            ; Unknown 8xxx instruction
$BDA    $71BE   ADD      V1, #BE         ; Add 190 to V1
$BDC    $B3B6   JP       V0, $3B6        ; Jump to V0 + 3B6
$BDE    $8698   UNKNOWN  8698            ; Unknown 8xxx instruction
$BE0    $A8DE   LD       I, $8DE         ; Load 8DE into I
$BE2    $5A07   UNKNOWN  $5A07           ; Unknown 5xxx instruction
$BE4    $1A2E   JP       $A2E            ; Jump to A2E
$BE6    $69A2   LD       V9, #A2         ; Load 162 into V9
$BE8    $928F   UNKNOWN  $928F           ; Unknown 9xxx instruction
$BEA    $019A   SYS      $19A            ; System call to 19A
$BEC    $F513   UNKNOWN  F513            ; Unknown Fxxx instruction
$BEE    $53A3   UNKNOWN  $53A3           ; Unknown 5xxx instruction
$BF0    $B31D   JP       V0, $31D        ; Jump to V0 + 31D
$BF2    $A727   LD       I, $727         ; Load 727 into I
$BF4    $184B   JP       $84B            ; Jump to 84B
$BF6    $44EE   SNE      V4, #EE         ; Skip if V4 != 238
$BF8    $1ECD   JP       $ECD            ; Jump to ECD
$BFA    $44CA   SNE      V4, #CA         ; Skip if V4 != 202
$BFC    $D30B   DRW      V3, V0, #B      ; Draw 11-byte sprite at V3, V0
$BFE    $D8F5   DRW      V8, VF, #5      ; Draw 5-byte sprite at V8, VF
$C00    $FE6C   UNKNOWN  FE6C            ; Unknown Fxxx instruction
$C02    $9E7E   UNKNOWN  $9E7E           ; Unknown 9xxx instruction
$C04    $CA04   RND      VA, #04         ; VA = random & 04
$C06    $BBB4   JP       V0, $BB4        ; Jump to V0 + BB4
$C08    $EF69   UNKNOWN  $EF69           ; Unknown Exxx instruction
$C0A    $43EF   SNE      V3, #EF         ; Skip if V3 != 239
$C0C    $50C7   UNKNOWN  $50C7           ; Unknown 5xxx instruction
$C0E    $4A9B   SNE      VA, #9B         ; Skip if VA != 155
$C10    $96F8   UNKNOWN  $96F8           ; Unknown 9xxx instruction
$C12    $D5D4   DRW      V5, VD, #4      ; Draw 4-byte sprite at V5, VD
$C14    $5F53   UNKNOWN  $5F53           ; Unknown 5xxx instruction
$C16    $782A   ADD      V8, #2A         ; Add 42 to V8
$C18    $0B70   SYS      $B70            ; System call to B70
$C1A    $07B6   SYS      $7B6            ; System call to 7B6
$C1C    $CEF8   RND      VE, #F8         ; VE = random & F8
$C1E    $EB1E   UNKNOWN  $EB1E           ; Unknown Exxx instruction
$C20    $8E67   SUBN     VE, V6          ; VE = V6 - VE, VF = !borrow
$C22    $F3A0   UNKNOWN  F3A0            ; Unknown Fxxx instruction
$C24    $953C   UNKNOWN  $953C           ; Unknown 9xxx instruction
$C26    $F41F   UNKNOWN  F41F            ; Unknown Fxxx instruction
$C28    $69C8   LD       V9, #C8         ; Load 200 into V9
$C2A    $3176   SE       V1, #76         ; Skip if V1 == 118
$C2C    $D99E   DRW      V9, V9, #E      ; Draw 14-byte sprite at V9, V9
$C2E    $70D5   ADD      V0, #D5         ; Add 213 to V0
$C30    $7E15   ADD      VE, #15         ; Add 21 to VE
$C32    $FA01   UNKNOWN  FA01            ; Unknown Fxxx instruction
$C34    $2431   CALL     $431            ; Call subroutine at 431
$C36    $E392   UNKNOWN  $E392           ; Unknown Exxx instruction
$C38    $89E5   SUB      V9, VE          ; V9 -= VE, VF = !borrow
$C3A    $BA95   JP       V0, $A95        ; Jump to V0 + A95
$C3C    $2DFD   CALL     $DFD            ; Call subroutine at DFD
$C3E    $5CA1   UNKNOWN  $5CA1           ; Unknown 5xxx instruction
$C40    $F087   UNKNOWN  F087            ; Unknown Fxxx instruction
$C42    $1774   JP       $774            ; Jump to 774
$C44    $0179   SYS      $179            ; System call to 179
$C46    $1EC9   JP       $EC9            ; Jump to EC9
$C48    $FB3B   UNKNOWN  FB3B            ; Unknown Fxxx instruction
$C4A    $CFE2   RND      VF, #E2         ; VF = random & E2
$C4C    $C027   RND      V0, #27         ; V0 = random & 27
$C4E    $6DBF   LD       VD, #BF         ; Load 191 into VD
$C50    $4EF6   SNE      VE, #F6         ; Skip if VE != 246
$C52    $8D19   UNKNOWN  8D19            ; Unknown 8xxx instruction
$C54    $84F2   AND      V4, VF          ; V4 &= VF
$C56    $ABFA   LD       I, $BFA         ; Load BFA into I
$C58    $BDCC   JP       V0, $DCC        ; Jump to V0 + DCC
$C5A    $A44F   LD       I, $44F         ; Load 44F into I
$C5C    $21DE   CALL     $1DE            ; Call subroutine at 1DE
$C5E    $E0D7   UNKNOWN  $E0D7           ; Unknown Exxx instruction
$C60    $BB47   JP       V0, $B47        ; Jump to V0 + B47
$C62    $D307   DRW      V3, V0, #7      ; Draw 7-byte sprite at V3, V0
$C64    $A9B7   LD       I, $9B7         ; Load 9B7 into I
$C66    $BCFF   JP       V0, $CFF        ; Jump to V0 + CFF
$C68    $97FC   UNKNOWN  $97FC           ; Unknown 9xxx instruction
$C6A    $A8AE   LD       I, $8AE         ; Load 8AE into I
$C6C    $FF27   UNKNOWN  FF27            ; Unknown Fxxx instruction
$C6E    $EA24   UNKNOWN  $EA24           ; Unknown Exxx instruction
$C70    $28C1   CALL     $8C1            ; Call subroutine at 8C1
$C72    $EA82   UNKNOWN  $EA82           ; Unknown Exxx instruction
$C74    $1EB7   JP       $EB7            ; Jump to EB7
$C76    $4D97   SNE      VD, #97         ; Skip if VD != 151
$C78    $DB98   DRW      VB, V9, #8      ; Draw 8-byte sprite at VB, V9
$C7A    $248F   CALL     $48F            ; Call subroutine at 48F
$C7C    $ECA2   UNKNOWN  $ECA2           ; Unknown Exxx instruction
$C7E    $DEDA   DRW      VE, VD, #A      ; Draw 10-byte sprite at VE, VD
$C80    $17BC   JP       $7BC            ; Jump to 7BC
$C82    $5117   UNKNOWN  $5117           ; Unknown 5xxx instruction
$C84    $682D   LD       V8, #2D         ; Load 45 into V8
$C86    $B73B   JP       V0, $73B        ; Jump to V0 + 73B
$C88    $4C79   SNE      VC, #79         ; Skip if VC != 121
$C8A    $4950   SNE      V9, #50         ; Skip if V9 != 80
$C8C    $FBFC   UNKNOWN  FBFC            ; Unknown Fxxx instruction
$C8E    $F9AB   UNKNOWN  F9AB            ; Unknown Fxxx instruction
$C90    $6673   LD       V6, #73         ; Load 115 into V6
$C92    $B6FB   JP       V0, $6FB        ; Jump to V0 + 6FB
$C94    $F95A   UNKNOWN  F95A            ; Unknown Fxxx instruction
$C96    $9B93   UNKNOWN  $9B93           ; Unknown 9xxx instruction
$C98    $757A   ADD      V5, #7A         ; Add 122 to V5
$C9A    $1EEA   JP       $EEA            ; Jump to EEA
$C9C    $B001   JP       V0, $001        ; Jump to V0 + 001
$C9E    $BBD2   JP       V0, $BD2        ; Jump to V0 + BD2
$CA0    $1F73   JP       $F73            ; Jump to F73
$CA2    $6D42   LD       VD, #42         ; Load 66 into VD
$CA4    $519A   UNKNOWN  $519A           ; Unknown 5xxx instruction
$CA6    $6684   LD       V6, #84         ; Load 132 into V6
$CA8    $67DB   LD       V7, #DB         ; Load 219 into V7
$CAA    $171E   JP       $71E            ; Jump to 71E
$CAC    $C406   RND      V4, #06         ; V4 = random & 06
$CAE    $67E3   LD       V7, #E3         ; Load 227 into V7
$CB0    $E392   UNKNOWN  $E392           ; Unknown Exxx instruction
$CB2    $A6B0   LD       I, $6B0         ; Load 6B0 into I
$CB4    $DD13   DRW      VD, V1, #3      ; Draw 3-byte sprite at VD, V1
$CB6    $D82C   DRW      V8, V2, #C      ; Draw 12-byte sprite at V8, V2
$CB8    $C8E6   RND      V8, #E6         ; V8 = random & E6
$CBA    $80D0   LD       V0, VD          ; V0 = VD
$CBC    $838F   UNKNOWN  838F            ; Unknown 8xxx instruction
$CBE    $6D7F   LD       VD, #7F         ; Load 127 into VD
$CC0    $BE5B   JP       V0, $E5B        ; Jump to V0 + E5B
$CC2    $43C7   SNE      V3, #C7         ; Skip if V3 != 199
$CC4    $6107   LD       V1, #07         ; Load 7 into V1
$CC6    $1C9A   JP       $C9A            ; Jump to C9A
$CC8    $6424   LD       V4, #24         ; Load 36 into V4
$CCA    $79D4   ADD      V9, #D4         ; Add 212 to V9
$CCC    $9ACE   UNKNOWN  $9ACE           ; Unknown 9xxx instruction
$CCE    $608A   LD       V0, #8A         ; Load 138 into V0
$CD0    $EE79   UNKNOWN  $EE79           ; Unknown Exxx instruction
$CD2    $EA9B   UNKNOWN  $EA9B           ; Unknown Exxx instruction
$CD4    $EC7C   UNKNOWN  $EC7C           ; Unknown Exxx instruction
$CD6    $0A18   SYS      $A18            ; System call to A18
$CD8    $1F54   JP       $F54            ; Jump to F54
$CDA    $4BF2   SNE      VB, #F2         ; Skip if VB != 242
$CDC    $EAA2   UNKNOWN  $EAA2           ; Unknown Exxx instruction
$CDE    $854A   UNKNOWN  854A            ; Unknown 8xxx instruction
$CE0    $7546   ADD      V5, #46         ; Add 70 to V5
$CE2    $283B   CALL     $83B            ; Call subroutine at 83B
$CE4    $50A5   UNKNOWN  $50A5           ; Unknown 5xxx instruction
$CE6    $EB5C   UNKNOWN  $EB5C           ; Unknown Exxx instruction
$CE8    $104E   JP       $04E            ; Jump to 04E
$CEA    $8B47   SUBN     VB, V4          ; VB = V4 - VB, VF = !borrow
$CEC    $DC3F   DRW      VC, V3, #F      ; Draw 15-byte sprite at VC, V3
$CEE    $D1CF   DRW      V1, VC, #F      ; Draw 15-byte sprite at V1, VC
$CF0    $919B   UNKNOWN  $919B           ; Unknown 9xxx instruction
$CF2    $C620   RND      V6, #20         ; V6 = random & 20
$CF4    $0EF7   SYS      $EF7            ; System call to EF7
$CF6    $6843   LD       V8, #43         ; Load 67 into V8
$CF8    $1D10   JP       $D10            ; Jump to D10
$CFA    $8D70   LD       VD, V7          ; VD = V7
$CFC    $FADD   UNKNOWN  FADD            ; Unknown Fxxx instruction
$CFE    $35CA   SE       V5, #CA         ; Skip if V5 == 202
$D00    $8092   AND      V0, V9          ; V0 &= V9
$D02    $C7C4   RND      V7, #C4         ; V7 = random & C4
$D04    $594D   UNKNOWN  $594D           ; Unknown 5xxx instruction
$D06    $867F   UNKNOWN  867F            ; Unknown 8xxx instruction
$D08    $3F96   SE       VF, #96         ; Skip if VF == 150
$D0A    $D127   DRW      V1, V2, #7      ; Draw 7-byte sprite at V1, V2
$D0C    $6043   LD       V0, #43         ; Load 67 into V0
$D0E    $FDF7   UNKNOWN  FDF7            ; Unknown Fxxx instruction
$D10    $3E21   SE       VE, #21         ; Skip if VE == 33
$D12    $EB8B   UNKNOWN  $EB8B           ; Unknown Exxx instruction
$D14    $2F17   CALL     $F17            ; Call subroutine at F17
$D16    $2E68   CALL     $E68            ; Call subroutine at E68
$D18    $2F97   CALL     $F97            ; Call subroutine at F97
$D1A    $4DAE   SNE      VD, #AE         ; Skip if VD != 174
$D1C    $A415   LD       I, $415         ; Load 415 into I
$D1E    $68C2   LD       V8, #C2         ; Load 194 into V8
$D20    $0FC6   SYS      $FC6            ; System call to FC6
$D22    $E0E0   UNKNOWN  $E0E0           ; Unknown Exxx instruction
$D24    $6C73   LD       VC, #73         ; Load 115 into VC
$D26    $16B5   JP       $6B5            ; Jump to 6B5
$D28    $8B55   SUB      VB, V5          ; VB -= V5, VF = !borrow
$D2A    $0930   SYS      $930            ; System call to 930
$D2C    $92CE   UNKNOWN  $92CE           ; Unknown 9xxx instruction
$D2E    $F7C2   UNKNOWN  F7C2            ; Unknown Fxxx instruction
$D30    $F543   UNKNOWN  F543            ; Unknown Fxxx instruction
$D32    $3BE0   SE       VB, #E0         ; Skip if VB == 224
$D34    $00CF   SYS      $0CF            ; System call to 0CF
$D36    $37B1   SE       V7, #B1         ; Skip if V7 == 177
$D38    $73C6   ADD      V3, #C6         ; Add 198 to V3
$D3A    $5311   UNKNOWN  $5311           ; Unknown 5xxx instruction
$D3C    $9BE9   UNKNOWN  $9BE9           ; Unknown 9xxx instruction
$D3E    $72BA   ADD      V2, #BA         ; Add 186 to V2
$D40    $F752   UNKNOWN  F752            ; Unknown Fxxx instruction
$D42    $29AE   CALL     $9AE            ; Call subroutine at 9AE
$D44    $5C6E   UNKNOWN  $5C6E           ; Unknown 5xxx instruction
$D46    $A4FA   LD       I, $4FA         ; Load 4FA into I
$D48    $2AD9   CALL     $AD9            ; Call subroutine at AD9
$D4A    $5C58   UNKNOWN  $5C58           ; Unknown 5xxx instruction
$D4C    $E401   UNKNOWN  $E401           ; Unknown Exxx instruction
$D4E    $BB58   JP       V0, $B58        ; Jump to V0 + B58
$D50    $8987   SUBN     V9, V8          ; V9 = V8 - V9, VF = !borrow
$D52    $A909   LD       I, $909         ; Load 909 into I
$D54    $2F26   CALL     $F26            ; Call subroutine at F26
$D56    $EDB1   UNKNOWN  $EDB1           ; Unknown Exxx instruction
$D58    $2F3D   CALL     $F3D            ; Call subroutine at F3D
$D5A    $A4A5   LD       I, $4A5         ; Load 4A5 into I
$D5C    $4C45   SNE      VC, #45         ; Skip if VC != 69
$D5E    $04F2   SYS      $4F2            ; System call to 4F2
$D60    $AFA8   LD       I, $FA8         ; Load FA8 into I
$D62    $BC88   JP       V0, $C88        ; Jump to V0 + C88
$D64    $FF87   UNKNOWN  FF87            ; Unknown Fxxx instruction
$D66    $B2F6   JP       V0, $2F6        ; Jump to V0 + 2F6
$D68    $D251   DRW      V2, V5, #1      ; Draw 1-byte sprite at V2, V5
$D6A    $B08D   JP       V0, $08D        ; Jump to V0 + 08D
$D6C    $D1F1   DRW      V1, VF, #1      ; Draw 1-byte sprite at V1, VF
$D6E    $C16B   RND      V1, #6B         ; V1 = random & 6B
$D70    $F0C4   UNKNOWN  F0C4            ; Unknown Fxxx instruction
$D72    $4124   SNE      V1, #24         ; Skip if V1 != 36
$D74    $9A02   UNKNOWN  $9A02           ; Unknown 9xxx instruction
$D76    $B01C   JP       V0, $01C        ; Jump to V0 + 01C
$D78    $E45A   UNKNOWN  $E45A           ; Unknown Exxx instruction
$D7A    $8844   ADD      V8, V4          ; V8 += V4, VF = carry
$D7C    $8A5A   UNKNOWN  8A5A            ; Unknown 8xxx instruction
$D7E    $5488   UNKNOWN  $5488           ; Unknown 5xxx instruction
$D80    $F347   UNKNOWN  F347            ; Unknown Fxxx instruction
$D82    $1474   JP       $474            ; Jump to 474
$D84    $CD1B   RND      VD, #1B         ; VD = random & 1B
$D86    $6E77   LD       VE, #77         ; Load 119 into VE
$D88    $7460   ADD      V4, #60         ; Add 96 to V4
$D8A    $30C8   SE       V0, #C8         ; Skip if V0 == 200
$D8C    $384D   SE       V8, #4D         ; Skip if V8 == 77
$D8E    $6267   LD       V2, #67         ; Load 103 into V2
$D90    $3A53   SE       VA, #53         ; Skip if VA == 83
$D92    $F0BA   UNKNOWN  F0BA            ; Unknown Fxxx instruction
$D94    $8A07   SUBN     VA, V0          ; VA = V0 - VA, VF = !borrow
$D96    $C89E   RND      V8, #9E         ; V8 = random & 9E
$D98    $68FC   LD       V8, #FC         ; Load 252 into V8
$D9A    $6315   LD       V3, #15         ; Load 21 into V3
$D9C    $A773   LD       I, $773         ; Load 773 into I
$D9E    $C6DD   RND      V6, #DD         ; V6 = random & DD
$DA0    $B5FA   JP       V0, $5FA        ; Jump to V0 + 5FA
$DA2    $1EF4   JP       $EF4            ; Jump to EF4
$DA4    $19B8   JP       $9B8            ; Jump to 9B8
$DA6    $4086   SNE      V0, #86         ; Skip if V0 != 134
$DA8    $D451   DRW      V4, V5, #1      ; Draw 1-byte sprite at V4, V5
$DAA    $7342   ADD      V3, #42         ; Add 66 to V3
$DAC    $3E71   SE       VE, #71         ; Skip if VE == 113
$DAE    $9314   UNKNOWN  $9314           ; Unknown 9xxx instruction
$DB0    $6C1A   LD       VC, #1A         ; Load 26 into VC
$DB2    $EF12   UNKNOWN  $EF12           ; Unknown Exxx instruction
$DB4    $ED50   UNKNOWN  $ED50           ; Unknown Exxx instruction
$DB6    $5047   UNKNOWN  $5047           ; Unknown 5xxx instruction
$DB8    $593D   UNKNOWN  $593D           ; Unknown 5xxx instruction
$DBA    $58D4   UNKNOWN  $58D4           ; Unknown 5xxx instruction
$DBC    $3CCC   SE       VC, #CC         ; Skip if VC == 204
$DBE    $C46F   RND      V4, #6F         ; V4 = random & 6F
$DC0    $DF39   DRW      VF, V3, #9      ; Draw 9-byte sprite at VF, V3
$DC2    $6E35   LD       VE, #35         ; Load 53 into VE
$DC4    $6508   LD       V5, #08         ; Load 8 into V5
$DC6    $2FEE   CALL     $FEE            ; Call subroutine at FEE
$DC8    $34BE   SE       V4, #BE         ; Skip if V4 == 190
$DCA    $41F6   SNE      V1, #F6         ; Skip if V1 != 246
$DCC    $B184   JP       V0, $184        ; Jump to V0 + 184
$DCE    $3CE8   SE       VC, #E8         ; Skip if VC == 232
$DD0    $5F2F   UNKNOWN  $5F2F           ; Unknown 5xxx instruction
$DD2    $C19E   RND      V1, #9E         ; V1 = random & 9E
$DD4    $BF12   JP       V0, $F12        ; Jump to V0 + F12
$DD6    $A178   LD       I, $178         ; Load 178 into I
$DD8    $3AC9   SE       VA, #C9         ; Skip if VA == 201
$DDA    $5581   UNKNOWN  $5581           ; Unknown 5xxx instruction
$DDC    $2495   CALL     $495            ; Call subroutine at 495
$DDE    $A5A2   LD       I, $5A2         ; Load 5A2 into I
$DE0    $BB09   JP       V0, $B09        ; Jump to V0 + B09
$DE2    $CEB0   RND      VE, #B0         ; VE = random & B0
$DE4    $9A7C   UNKNOWN  $9A7C           ; Unknown 9xxx instruction
$DE6    $DDFA   DRW      VD, VF, #A      ; Draw 10-byte sprite at VD, VF
$DE8    $4638   SNE      V6, #38         ; Skip if V6 != 56
$DEA    $D1F4   DRW      V1, VF, #4      ; Draw 4-byte sprite at V1, VF
$DEC    $6215   LD       V2, #15         ; Load 21 into V2
$DEE    $4AAB   SNE      VA, #AB         ; Skip if VA != 171
$DF0    $7CA5   ADD      VC, #A5         ; Add 165 to VC
$DF2    $2F7C   CALL     $F7C            ; Call subroutine at F7C
$DF4    $8083   XOR      V0, V8          ; V0 ^= V8
$DF6    $D88A   DRW      V8, V8, #A      ; Draw 10-byte sprite at V8, V8
$DF8    $81C7   SUBN     V1, VC          ; V1 = VC - V1, VF = !borrow
$DFA    $A79D   LD       I, $79D         ; Load 79D into I
$DFC    $AC24   LD       I, $C24         ; Load C24 into I
$DFE    $06B1   SYS      $6B1            ; System call to 6B1
$E00    $1FCB   JP       $FCB            ; Jump to FCB
$E02    $024A   SYS      $24A            ; System call to 24A
$E04    $3F45   SE       VF, #45         ; Skip if VF == 69
$E06    $4A30   SNE      VA, #30         ; Skip if VA != 48
$E08    $BD86   JP       V0, $D86        ; Jump to V0 + D86
$E0A    $FD6D   UNKNOWN  FD6D            ; Unknown Fxxx instruction
$E0C    $3045   SE       V0, #45         ; Skip if V0 == 69
$E0E    $FB3C   UNKNOWN  FB3C            ; Unknown Fxxx instruction
$E10    $1616   JP       $616            ; Jump to 616
$E12    $426E   SNE      V2, #6E         ; Skip if V2 != 110
$E14    $6549   LD       V5, #49         ; Load 73 into V5
$E16    $B8D8   JP       V0, $8D8        ; Jump to V0 + 8D8
$E18    $9552   UNKNOWN  $9552           ; Unknown 9xxx instruction
$E1A    $587B   UNKNOWN  $587B           ; Unknown 5xxx instruction
$E1C    $6EA9   LD       VE, #A9         ; Load 169 into VE
$E1E    $2CC3   CALL     $CC3            ; Call subroutine at CC3
$E20    $B037   JP       V0, $037        ; Jump to V0 + 037
$E22    $150F   JP       $50F            ; Jump to 50F
$E24    $72F9   ADD      V2, #F9         ; Add 249 to V2
$E26    $B34C   JP       V0, $34C        ; Jump to V0 + 34C
$E28    $96C7   UNKNOWN  $96C7           ; Unknown 9xxx instruction
$E2A    $58DA   UNKNOWN  $58DA           ; Unknown 5xxx instruction
$E2C    $41BE   SNE      V1, #BE         ; Skip if V1 != 190
$E2E    $E687   UNKNOWN  $E687           ; Unknown Exxx instruction
$E30    $7CCF   ADD      VC, #CF         ; Add 207 to VC
$E32    $834C   UNKNOWN  834C            ; Unknown 8xxx instruction
$E34    $DD4C   DRW      VD, V4, #C      ; Draw 12-byte sprite at VD, V4
$E36    $BBE2   JP       V0, $BE2        ; Jump to V0 + BE2
$E38    $D510   DRW      V5, V1, #0      ; Draw 0-byte sprite at V5, V1
$E3A    $BD48   JP       V0, $D48        ; Jump to V0 + D48
$E3C    $D827   DRW      V8, V2, #7      ; Draw 7-byte sprite at V8, V2
$E3E    $A189   LD       I, $189         ; Load 189 into I
$E40    $EC1B   UNKNOWN  $EC1B           ; Unknown Exxx instruction
$E42    $E118   UNKNOWN  $E118           ; Unknown Exxx instruction
$E44    $02DA   SYS      $2DA            ; System call to 2DA
$E46    $436B   SNE      V3, #6B         ; Skip if V3 != 107
$E48    $0C27   SYS      $C27            ; System call to C27
$E4A    $4625   SNE      V6, #25         ; Skip if V6 != 37
$E4C    $1E9E   JP       $E9E            ; Jump to E9E
$E4E    $FF09   UNKNOWN  FF09            ; Unknown Fxxx instruction
$E50    $AEAC   LD       I, $EAC         ; Load EAC into I
$E52    $C90A   RND      V9, #0A         ; V9 = random & 0A
$E54    $6521   LD       V5, #21         ; Load 33 into V5
$E56    $C0A9   RND      V0, #A9         ; V0 = random & A9
$E58    $C923   RND      V9, #23         ; V9 = random & 23
$E5A    $C81F   RND      V8, #1F         ; V8 = random & 1F
$E5C    $C767   RND      V7, #67         ; V7 = random & 67
$E5E    $61D9   LD       V1, #D9         ; Load 217 into V1
$E60    $1A13   JP       $A13            ; Jump to A13
$E62    $AA20   LD       I, $A20         ; Load A20 into I
$E64    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$E66    $3E6F   SE       VE, #6F         ; Skip if VE == 111
$E68    $A0F5   LD       I, $0F5         ; Load 0F5 into I
$E6A    $3401   SE       V4, #01         ; Skip if V4 == 1
$E6C    $08A3   SYS      $8A3            ; System call to 8A3
$E6E    $61B4   LD       V1, #B4         ; Load 180 into V1
$E70    $05D2   SYS      $5D2            ; System call to 5D2
$E72    $B934   JP       V0, $934        ; Jump to V0 + 934
$E74    $2D01   CALL     $D01            ; Call subroutine at D01
$E76    $364B   SE       V6, #4B         ; Skip if V6 == 75
$E78    $09B5   SYS      $9B5            ; System call to 9B5
$E7A    $41E6   SNE      V1, #E6         ; Skip if V1 != 230
$E7C    $D1D9   DRW      V1, VD, #9      ; Draw 9-byte sprite at V1, VD
$E7E    $8C3E   SHL      VC              ; VC <<= 1, VF = MSB
$E80    $5382   UNKNOWN  $5382           ; Unknown 5xxx instruction
$E82    $6D31   LD       VD, #31         ; Load 49 into VD
$E84    $8C45   SUB      VC, V4          ; VC -= V4, VF = !borrow
$E86    $3357   SE       V3, #57         ; Skip if V3 == 87
$E88    $4670   SNE      V6, #70         ; Skip if V6 != 112
$E8A    $BF4D   JP       V0, $F4D        ; Jump to V0 + F4D
$E8C    $B693   JP       V0, $693        ; Jump to V0 + 693
$E8E    $0232   SYS      $232            ; System call to 232
$E90    $F784   UNKNOWN  F784            ; Unknown Fxxx instruction
$E92    $EA7F   UNKNOWN  $EA7F           ; Unknown Exxx instruction
$E94    $4182   SNE      V1, #82         ; Skip if V1 != 130
$E96    $A712   LD       I, $712         ; Load 712 into I
$E98    $EBC3   UNKNOWN  $EBC3           ; Unknown Exxx instruction
$E9A    $17BF   JP       $7BF            ; Jump to 7BF
$E9C    $A814   LD       I, $814         ; Load 814 into I
$E9E    $51AB   UNKNOWN  $51AB           ; Unknown 5xxx instruction
$EA0    $291C   CALL     $91C            ; Call subroutine at 91C
$EA2    $0513   SYS      $513            ; System call to 513
$EA4    $C88F   RND      V8, #8F         ; V8 = random & 8F
$EA6    $0428   SYS      $428            ; System call to 428
$EA8    $63B5   LD       V3, #B5         ; Load 181 into V3
$EAA    $570A   UNKNOWN  $570A           ; Unknown 5xxx instruction
$EAC    $C3EF   RND      V3, #EF         ; V3 = random & EF
$EAE    $9F0A   UNKNOWN  $9F0A           ; Unknown 9xxx instruction
$EB0    $E28C   UNKNOWN  $E28C           ; Unknown Exxx instruction
$EB2    $182B   JP       $82B            ; Jump to 82B
$EB4    $A5EB   LD       I, $5EB         ; Load 5EB into I
$EB6    $53D7   UNKNOWN  $53D7           ; Unknown 5xxx instruction
$EB8    $6EE9   LD       VE, #E9         ; Load 233 into VE
$EBA    $6A1B   LD       VA, #1B         ; Load 27 into VA
$EBC    $9072   UNKNOWN  $9072           ; Unknown 9xxx instruction
$EBE    $ED43   UNKNOWN  $ED43           ; Unknown Exxx instruction
$EC0    $DA18   DRW      VA, V1, #8      ; Draw 8-byte sprite at VA, V1
$EC2    $A722   LD       I, $722         ; Load 722 into I
$EC4    $192E   JP       $92E            ; Jump to 92E
$EC6    $067D   SYS      $67D            ; System call to 67D
$EC8    $EAA7   UNKNOWN  $EAA7           ; Unknown Exxx instruction
$ECA    $9D1D   UNKNOWN  $9D1D           ; Unknown 9xxx instruction
$ECC    $CBE7   RND      VB, #E7         ; VB = random & E7
$ECE    $4634   SNE      V6, #34         ; Skip if V6 != 52
$ED0    $21FC   CALL     $1FC            ; Call subroutine at 1FC
$ED2    $EF1E   UNKNOWN  $EF1E           ; Unknown Exxx instruction
$ED4    $F09E   UNKNOWN  F09E            ; Unknown Fxxx instruction
$ED6    $41FB   SNE      V1, #FB         ; Skip if V1 != 251
$ED8    $A3E6   LD       I, $3E6         ; Load 3E6 into I
$EDA    $7904   ADD      V9, #04         ; Add 4 to V9
$EDC    $285E   CALL     $85E            ; Call subroutine at 85E
$EDE    $33B6   SE       V3, #B6         ; Skip if V3 == 182
$EE0    $2308   CALL     $308            ; Call subroutine at 308
$EE2    $1ECE   JP       $ECE            ; Jump to ECE
$EE4    $33E6   SE       V3, #E6         ; Skip if V3 == 230
$EE6    $FF7B   UNKNOWN  FF7B            ; Unknown Fxxx instruction
$EE8    $357E   SE       V5, #7E         ; Skip if V5 == 126
$EEA    $C28A   RND      V2, #8A         ; V2 = random & 8A
$EEC    $5B1F   UNKNOWN  $5B1F           ; Unknown 5xxx instruction
$EEE    $0D46   SYS      $D46            ; System call to D46
$EF0    $41BB   SNE      V1, #BB         ; Skip if V1 != 187
$EF2    $AE84   LD       I, $E84         ; Load E84 into I
$EF4    $B99C   JP       V0, $99C        ; Jump to V0 + 99C
$EF6    $0083   SYS      $083            ; System call to 083
$EF8    $C607   RND      V6, #07         ; V6 = random & 07
$EFA    $6619   LD       V6, #19         ; Load 25 into V6
$EFC    $B6AD   JP       V0, $6AD        ; Jump to V0 + 6AD
$EFE    $D7F5   DRW      V7, VF, #5      ; Draw 5-byte sprite at V7, VF
$F00    $1E95   JP       $E95            ; Jump to E95
$F02    $AC76   LD       I, $C76         ; Load C76 into I
$F04    $5EA4   UNKNOWN  $5EA4           ; Unknown 5xxx instruction
$F06    $0D58   SYS      $D58            ; System call to D58
$F08    $A8D7   LD       I, $8D7         ; Load 8D7 into I
$F0A    $10C1   JP       $0C1            ; Jump to 0C1
$F0C    $718E   ADD      V1, #8E         ; Add 142 to V1
$F0E    $CC66   RND      VC, #66         ; VC = random & 66
$F10    $A910   LD       I, $910         ; Load 910 into I
$F12    $1B5A   JP       $B5A            ; Jump to B5A
$F14    $A6C4   LD       I, $6C4         ; Load 6C4 into I
$F16    $17FE   JP       $7FE            ; Jump to 7FE
$F18    $9216   UNKNOWN  $9216           ; Unknown 9xxx instruction
$F1A    $D446   DRW      V4, V4, #6      ; Draw 6-byte sprite at V4, V4
$F1C    $3AA1   SE       VA, #A1         ; Skip if VA == 161
$F1E    $3BE1   SE       VB, #E1         ; Skip if VB == 225
$F20    $BAF2   JP       V0, $AF2        ; Jump to V0 + AF2
$F22    $4FDE   SNE      VF, #DE         ; Skip if VF != 222
$F24    $3FEC   SE       VF, #EC         ; Skip if VF == 236
$F26    $EEEF   UNKNOWN  $EEEF           ; Unknown Exxx instruction
$F28    $47D1   SNE      V7, #D1         ; Skip if V7 != 209
$F2A    $B44C   JP       V0, $44C        ; Jump to V0 + 44C
$F2C    $D5C2   DRW      V5, VC, #2      ; Draw 2-byte sprite at V5, VC
$F2E    $1205   JP       $205            ; Jump to 205
$F30    $FFD1   UNKNOWN  FFD1            ; Unknown Fxxx instruction
$F32    $1745   JP       $745            ; Jump to 745
$F34    $15B4   JP       $5B4            ; Jump to 5B4
$F36    $64F5   LD       V4, #F5         ; Load 245 into V4
$F38    $29CC   CALL     $9CC            ; Call subroutine at 9CC
$F3A    $7D1A   ADD      VD, #1A         ; Add 26 to VD
$F3C    $72FF   ADD      V2, #FF         ; Add 255 to V2
$F3E    $2A3A   CALL     $A3A            ; Call subroutine at A3A
$F40    $4DB1   SNE      VD, #B1         ; Skip if VD != 177
$F42    $E12F   UNKNOWN  $E12F           ; Unknown Exxx instruction
$F44    $8300   LD       V3, V0          ; V3 = V0
$F46    $B2B2   JP       V0, $2B2        ; Jump to V0 + 2B2
$F48    $6350   LD       V3, #50         ; Load 80 into V3
$F4A    $3D83   SE       VD, #83         ; Skip if VD == 131
$F4C    $EA64   UNKNOWN  $EA64           ; Unknown Exxx instruction
$F4E    $A6C6   LD       I, $6C6         ; Load 6C6 into I
$F50    $0E6B   SYS      $E6B            ; System call to E6B
$F52    $E4BD   UNKNOWN  $E4BD           ; Unknown Exxx instruction
$F54    $ACA0   LD       I, $CA0         ; Load CA0 into I
$F56    $9B06   UNKNOWN  $9B06           ; Unknown 9xxx instruction
$F58    $BBF6   JP       V0, $BF6        ; Jump to V0 + BF6
$F5A    $29E0   CALL     $9E0            ; Call subroutine at 9E0
$F5C    $CC62   RND      VC, #62         ; VC = random & 62
$F5E    $0FFE   SYS      $FFE            ; System call to FFE
$F60    $C9B9   RND      V9, #B9         ; V9 = random & B9
$F62    $F162   UNKNOWN  F162            ; Unknown Fxxx instruction
$F64    $B4DA   JP       V0, $4DA        ; Jump to V0 + 4DA
$F66    $42B3   SNE      V2, #B3         ; Skip if V2 != 179
$F68    $4790   SNE      V7, #90         ; Skip if V7 != 144
$F6A    $89B1   OR       V9, VB          ; V9 |= VB
$F6C    $70B1   ADD      V0, #B1         ; Add 177 to V0
$F6E    $D791   DRW      V7, V9, #1      ; Draw 1-byte sprite at V7, V9
$F70    $CF05   RND      VF, #05         ; VF = random & 05
$F72    $0F68   SYS      $F68            ; System call to F68
$F74    $0931   SYS      $931            ; System call to 931
$F76    $D6ED   DRW      V6, VE, #D      ; Draw 13-byte sprite at V6, VE
$F78    $1A7C   JP       $A7C            ; Jump to A7C
$F7A    $2D58   CALL     $D58            ; Call subroutine at D58
$F7C    $0C07   SYS      $C07            ; System call to C07
$F7E    $B74E   JP       V0, $74E        ; Jump to V0 + 74E
$F80    $41E8   SNE      V1, #E8         ; Skip if V1 != 232
$F82    $87C4   ADD      V7, VC          ; V7 += VC, VF = carry
$F84    $A180   LD       I, $180         ; Load 180 into I
$F86    $027D   SYS      $27D            ; System call to 27D
$F88    $A03B   LD       I, $03B         ; Load 03B into I
$F8A    $E6AC   UNKNOWN  $E6AC           ; Unknown Exxx instruction
$F8C    $90C1   UNKNOWN  $90C1           ; Unknown 9xxx instruction
$F8E    $739B   ADD      V3, #9B         ; Add 155 to V3
$F90    $C952   RND      V9, #52         ; V9 = random & 52
$F92    $19F6   JP       $9F6            ; Jump to 9F6
$F94    $E392   UNKNOWN  $E392           ; Unknown Exxx instruction
$F96    $D832   DRW      V8, V3, #2      ; Draw 2-byte sprite at V8, V3
$F98    $6E7F   LD       VE, #7F         ; Load 127 into VE
$F9A    $2925   CALL     $925            ; Call subroutine at 925
$F9C    $1B78   JP       $B78            ; Jump to B78
$F9E    $D275   DRW      V2, V7, #5      ; Draw 5-byte sprite at V2, V7
$FA0    $0908   SYS      $908            ; System call to 908
$FA2    $80F1   OR       V0, VF          ; V0 |= VF
$FA4    $1F1F   JP       $F1F            ; Jump to F1F
$FA6    $EFAB   UNKNOWN  $EFAB           ; Unknown Exxx instruction
$FA8    $C507   RND      V5, #07         ; V5 = random & 07
$FAA    $BF15   JP       V0, $F15        ; Jump to V0 + F15
$FAC    $B575   JP       V0, $575        ; Jump to V0 + 575
$FAE    $2D52   CALL     $D52            ; Call subroutine at D52
$FB0    $EA8B   UNKNOWN  $EA8B           ; Unknown Exxx instruction
$FB2    $7FC3   ADD      VF, #C3         ; Add 195 to VF
$FB4    $7D93   ADD      VD, #93         ; Add 147 to VD
$FB6    $EB6D   UNKNOWN  $EB6D           ; Unknown Exxx instruction
$FB8    $26AB   CALL     $6AB            ; Call subroutine at 6AB
$FBA    $0FE1   SYS      $FE1            ; System call to FE1
$FBC    $0468   SYS      $468            ; System call to 468
$FBE    $C50C   RND      V5, #0C         ; V5 = random & 0C
$FC0    $031B   SYS      $31B            ; System call to 31B
$FC2    $EA85   UNKNOWN  $EA85           ; Unknown Exxx instruction
$FC4    $8778   UNKNOWN  8778            ; Unknown 8xxx instruction
$FC6    $AE23   LD       I, $E23         ; Load E23 into I
$FC8    $9E2F   UNKNOWN  $9E2F           ; Unknown 9xxx instruction
$FCA    $815B   UNKNOWN  815B            ; Unknown 8xxx instruction
$FCC    $F5EA   UNKNOWN  F5EA            ; Unknown Fxxx instruction
$FCE    $E7F7   UNKNOWN  $E7F7           ; Unknown Exxx instruction
$FD0    $0C40   SYS      $C40            ; System call to C40
$FD2    $40B7   SNE      V0, #B7         ; Skip if V0 != 183
$FD4    $010C   SYS      $10C            ; System call to 10C
$FD6    $C016   RND      V0, #16         ; V0 = random & 16
$FD8    $48DF   SNE      V8, #DF         ; Skip if V8 != 223
$FDA    $D0FF   DRW      V0, VF, #F      ; Draw 15-byte sprite at V0, VF
$FDC    $FD19   UNKNOWN  FD19            ; Unknown Fxxx instruction
$FDE    $CB48   RND      VB, #48         ; VB = random & 48
$FE0    $6BCE   LD       VB, #CE         ; Load 206 into VB
$FE2    $3528   SE       V5, #28         ; Skip if V5 == 40
$FE4    $126A   JP       $26A            ; Jump to 26A
$FE6    $D9E4   DRW      V9, VE, #4      ; Draw 4-byte sprite at V9, VE
$FE8    $ED5E   UNKNOWN  $ED5E           ; Unknown Exxx instruction
$FEA    $0589   SYS      $589            ; System call to 589
$FEC    $7734   ADD      V7, #34         ; Add 52 to V7
$FEE    $4E7F   SNE      VE, #7F         ; Skip if VE != 127
$FF0    $840E   SHL      V4              ; V4 <<= 1, VF = MSB
$FF2    $7269   ADD      V2, #69         ; Add 105 to V2
$FF4    $B00F   JP       V0, $00F        ; Jump to V0 + 00F
$FF6    $5E89   UNKNOWN  $5E89           ; Unknown 5xxx instruction
$FF8    $9970   SNE      V9, V7          ; Skip if V9 != V7
$FFA    $5616   UNKNOWN  $5616           ; Unknown 5xxx instruction
$FFC    $07E5   SYS      $7E5            ; System call to 7E5
$FFE    $A979   LD       I, $979         ; Load 979 into I

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 461 (25.7%)
  LD      : 244 (13.6%)
  JP      : 222 (12.4%)
  CALL    : 129 ( 7.2%)
  RND     : 123 ( 6.9%)
  SNE     : 122 ( 6.8%)
  DRW     : 116 ( 6.5%)
  SE      : 109 ( 6.1%)
  SYS     : 108 ( 6.0%)
  ADD     : 100 ( 5.6%)
  AND     :  10 ( 0.6%)
  SUBN    :   9 ( 0.5%)
  OR      :   9 ( 0.5%)
  SHL     :   9 ( 0.5%)
  SUB     :   9 ( 0.5%)
  XOR     :   7 ( 0.4%)
  SHR     :   4 ( 0.2%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 344 (19.2%)
Arithmetic Operations: 144 (8.0%)
