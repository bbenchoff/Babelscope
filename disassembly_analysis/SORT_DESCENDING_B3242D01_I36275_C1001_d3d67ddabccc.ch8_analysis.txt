
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B3242D01_I36275_C1001_d3d67ddabccc.ch8
ROM Size: 3584 bytes
Instructions Found: 1790

DISCOVERY INFORMATION:
Batch: 3242
Instance: 36275
Direction: descending
Final Array: [201, 188, 64, 23, 11, 0, 0, 0]
Operations: R:0 W:1 C:75 S:6

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 113
Sort Array References:
  $22A: LD I, $FF1 ; Load FF1 into I
  $244: LD I, $EDD ; Load EDD into I
  $254: LD I, $E3D ; Load E3D into I
  $260: LD I, $4A4 ; Load 4A4 into I
  $29E: LD I, $735 ; Load 735 into I
  $2A4: LD I, $006 ; Load 006 into I
  $2E0: LD I, $B20 ; Load B20 into I
  $326: LD I, $56F ; Load 56F into I
  $328: LD I, $CE0 ; Load CE0 into I
  $340: LD I, $A66 ; Load A66 into I
  $342: LD I, $669 ; Load 669 into I
  $362: LD I, $B82 ; Load B82 into I
  $3C2: LD I, $6F4 ; Load 6F4 into I
  $3FE: LD I, $F50 ; Load F50 into I
  $418: LD I, $94B ; Load 94B into I
  $42E: LD I, $1DD ; Load 1DD into I
  $444: LD I, $2BB ; Load 2BB into I
  $45A: LD I, $49E ; Load 49E into I
  $462: LD I, $75B ; Load 75B into I
  $4C6: LD I, $A81 ; Load A81 into I
  $4D0: LD I, $060 ; Load 060 into I
  $4D2: LD I, $59F ; Load 59F into I
  $4EC: LD I, $299 ; Load 299 into I
  $4EE: LD I, $A88 ; Load A88 into I
  $508: LD I, $2C5 ; Load 2C5 into I
  $56E: LD I, $1F9 ; Load 1F9 into I
  $5A8: LD I, $0A1 ; Load 0A1 into I
  $5F0: LD I, $41D ; Load 41D into I
  $604: LD I, $6A9 ; Load 6A9 into I
  $646: LD I, $41C ; Load 41C into I
  $6B2: LD I, $345 ; Load 345 into I
  $6C4: LD I, $24A ; Load 24A into I
  $6CE: LD I, $866 ; Load 866 into I
  $6EA: LD I, $EC8 ; Load EC8 into I
  $6F4: LD I, $246 ; Load 246 into I
  $6F8: LD I, $67B ; Load 67B into I
  $704: LD I, $642 ; Load 642 into I
  $71C: LD I, $2A6 ; Load 2A6 into I
  $73E: LD I, $8D0 ; Load 8D0 into I
  $740: LD I, $305 ; Load 305 into I
  $75C: LD I, $F5D ; Load F5D into I
  $7C0: LD I, $C08 ; Load C08 into I
  $7C6: LD I, $259 ; Load 259 into I
  $7D2: LD I, $A1D ; Load A1D into I
  $7D6: LD I, $D00 ; Load D00 into I
  $7DE: LD I, $F1F ; Load F1F into I
  $812: LD I, $A7B ; Load A7B into I
  $892: LD I, $857 ; Load 857 into I
  $8DC: LD I, $0A7 ; Load 0A7 into I
  $8F2: LD I, $762 ; Load 762 into I
  $90C: LD I, $29F ; Load 29F into I
  $910: LD I, $00B ; Load 00B into I
  $92A: LD I, $722 ; Load 722 into I
  $93E: LD I, $CDB ; Load CDB into I
  $966: LD I, $3F2 ; Load 3F2 into I
  $96C: LD I, $506 ; Load 506 into I
  $982: LD I, $C34 ; Load C34 into I
  $992: LD I, $8EC ; Load 8EC into I
  $99E: LD I, $D9C ; Load D9C into I
  $9B0: LD I, $9FE ; Load 9FE into I
  $9BA: ADD I, V7 ; I ADDRESS MANIPULATION
  $9BE: LD I, $4ED ; Load 4ED into I
  $9CE: LD I, $6A4 ; Load 6A4 into I
  $A2A: LD I, $801 ; Load 801 into I
  $A2C: LD I, $C86 ; Load C86 into I
  $A4E: LD I, $C09 ; Load C09 into I
  $A56: LD I, $2A1 ; Load 2A1 into I
  $A70: LD I, $289 ; Load 289 into I
  $A7A: LD I, $742 ; Load 742 into I
  $AC2: LD I, $BD1 ; Load BD1 into I
  $B04: LD I, $2B8 ; Load 2B8 into I
  $B40: LD I, $BC2 ; Load BC2 into I
  $B48: LD I, $57F ; Load 57F into I
  $BB0: LD I, $D7D ; Load D7D into I
  $BBA: LD I, $D4E ; Load D4E into I
  $BC4: LD I, $1CB ; Load 1CB into I
  $C0A: LD I, $250 ; Load 250 into I
  $C12: LD I, $F99 ; Load F99 into I
  $C26: LD I, $6BE ; Load 6BE into I
  $C3C: LD I, $275 ; Load 275 into I
  $C48: LD I, $56E ; Load 56E into I
  $C62: LD I, $3D3 ; Load 3D3 into I
  $CC0: LD I, $2C5 ; Load 2C5 into I
  $CC8: LD I, $1A5 ; Load 1A5 into I
  $CD4: LD I, $8A1 ; Load 8A1 into I
  $D0A: LD I, $C73 ; Load C73 into I
  $D30: LD I, $09E ; Load 09E into I
  $D4C: LD I, $AF9 ; Load AF9 into I
  $D52: LD I, $CDE ; Load CDE into I
  $D68: LD I, $352 ; Load 352 into I
  $DB6: LD I, $B86 ; Load B86 into I
  $DC4: LD I, $7A2 ; Load 7A2 into I
  $DCE: LD I, $BBB ; Load BBB into I
  $DE0: LD I, $DD8 ; Load DD8 into I
  $E5E: LD I, $693 ; Load 693 into I
  $E6A: LD I, $776 ; Load 776 into I
  $EBE: LD I, $979 ; Load 979 into I
  $EC2: LD I, $CCD ; Load CCD into I
  $EC6: LD I, $DD4 ; Load DD4 into I
  $EEA: LD I, $4E2 ; Load 4E2 into I
  $F08: LD I, $9E8 ; Load 9E8 into I
  $F44: LD I, $860 ; Load 860 into I
  $F52: LD I, $E2D ; Load E2D into I
  $F56: LD I, $2EE ; Load 2EE into I
  $F5A: LD I, $D6D ; Load D6D into I
  $F60: LD I, $747 ; Load 747 into I
  $F7A: LD I, $F45 ; Load F45 into I
  $F86: LD I, $ED5 ; Load ED5 into I
  $FCE: LD I, $DBB ; Load DBB into I
  $FDC: LD I, $FBB ; Load FBB into I
  $FEE: LD I, $016 ; Load 016 into I
  $FF6: LD I, $F68 ; Load F68 into I
  $FF8: LD I, $871 ; Load 871 into I

CONTROL FLOW ANALYSIS:
Jumps: 223
Calls: 98
Branches: 244
Loops: 113
Loop Structures:
  $270 -> $07B (backward jump)
  $280 -> $1ED (backward jump)
  $2B6 -> $202 (backward jump)
  $390 -> $07D (backward jump)
  $3A0 -> $054 (backward jump)
  $3A4 -> $277 (backward jump)
  $3BC -> $255 (backward jump)
  $3DE -> $141 (backward jump)
  $3EA -> $119 (backward jump)
  $44C -> $381 (backward jump)
  $4D6 -> $010 (backward jump)
  $510 -> $3FA (backward jump)
  $518 -> $458 (backward jump)
  $524 -> $4A3 (backward jump)
  $552 -> $0C1 (backward jump)
  $57A -> $178 (backward jump)
  $588 -> $06E (backward jump)
  $5CC -> $0C2 (backward jump)
  $5FE -> $049 (backward jump)
  $63E -> $5FC (backward jump)
  $6C0 -> $5FE (backward jump)
  $6D4 -> $0DF (backward jump)
  $6FE -> $408 (backward jump)
  $750 -> $17E (backward jump)
  $756 -> $321 (backward jump)
  $758 -> $1B7 (backward jump)
  $784 -> $53A (backward jump)
  $788 -> $300 (backward jump)
  $78A -> $244 (backward jump)
  $7A6 -> $638 (backward jump)
  $7D8 -> $1F3 (backward jump)
  $7DC -> $004 (backward jump)
  $846 -> $663 (backward jump)
  $850 -> $72F (backward jump)
  $85C -> $346 (backward jump)
  $88E -> $833 (backward jump)
  $898 -> $691 (backward jump)
  $8BA -> $30B (backward jump)
  $8C4 -> $865 (backward jump)
  $900 -> $421 (backward jump)
  $918 -> $732 (backward jump)
  $938 -> $11B (backward jump)
  $942 -> $7E5 (backward jump)
  $94C -> $395 (backward jump)
  $98A -> $5BA (backward jump)
  $9D2 -> $6C4 (backward jump)
  $A08 -> $72F (backward jump)
  $A0C -> $9A5 (backward jump)
  $A5A -> $48A (backward jump)
  $A72 -> $69A (backward jump)
  $A78 -> $05B (backward jump)
  $AA0 -> $28F (backward jump)
  $AC8 -> $6E7 (backward jump)
  $ACA -> $5F1 (backward jump)
  $AE6 -> $3E9 (backward jump)
  $B5E -> $182 (backward jump)
  $B82 -> $ADC (backward jump)
  $B90 -> $9B6 (backward jump)
  $B9E -> $810 (backward jump)
  $BA4 -> $076 (backward jump)
  $BB6 -> $590 (backward jump)
  $BB8 -> $237 (backward jump)
  $BE4 -> $3B2 (backward jump)
  $C02 -> $895 (backward jump)
  $C20 -> $6F4 (backward jump)
  $C60 -> $8A2 (backward jump)
  $C78 -> $213 (backward jump)
  $C84 -> $B8C (backward jump)
  $C8A -> $9E9 (backward jump)
  $CB6 -> $135 (backward jump)
  $CCC -> $129 (backward jump)
  $CCE -> $B64 (backward jump)
  $CDE -> $AA4 (backward jump)
  $D0C -> $408 (backward jump)
  $D60 -> $8DA (backward jump)
  $D62 -> $5D4 (backward jump)
  $D82 -> $A41 (backward jump)
  $DB2 -> $B8C (backward jump)
  $DB4 -> $0C5 (backward jump)
  $DDC -> $A95 (backward jump)
  $E3E -> $0A2 (backward jump)
  $E4E -> $A70 (backward jump)
  $E52 -> $577 (backward jump)
  $E58 -> $4E0 (backward jump)
  $E64 -> $C9A (backward jump)
  $EA0 -> $87D (backward jump)
  $EA8 -> $B2C (backward jump)
  $EB6 -> $E60 (backward jump)
  $ED2 -> $959 (backward jump)
  $ED8 -> $D4E (backward jump)
  $EDE -> $2C1 (backward jump)
  $EF4 -> $C0D (backward jump)
  $F0E -> $86E (backward jump)
  $F12 -> $875 (backward jump)
  $F1A -> $036 (backward jump)
  $F24 -> $362 (backward jump)
  $F2A -> $966 (backward jump)
  $F3A -> $6F7 (backward jump)
  $F3C -> $C61 (backward jump)
  $F3E -> $3E0 (backward jump)
  $F42 -> $D6B (backward jump)
  $F58 -> $616 (backward jump)
  $F6C -> $9D5 (backward jump)
  $F84 -> $F83 (backward jump)
  $F96 -> $175 (backward jump)
  $F9C -> $E24 (backward jump)
  $FB0 -> $BC9 (backward jump)
  $FC0 -> $B37 (backward jump)
  $FCA -> $DB5 (backward jump)
  $FDA -> $F91 (backward jump)
  $FE4 -> $69A (backward jump)
  $FE8 -> $388 (backward jump)
  $FFA -> $050 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $F824   UNKNOWN  F824            ; Unknown Fxxx instruction
$202    $1AE6   JP       $AE6            ; Jump to AE6
$204    $38D7   SE       V8, #D7         ; Skip if V8 == 215
$206    $47C5   SNE      V7, #C5         ; Skip if V7 != 197
$208    $3A97   SE       VA, #97         ; Skip if VA == 151
$20A    $7A7F   ADD      VA, #7F         ; Add 127 to VA
$20C    $C21F   RND      V2, #1F         ; V2 = random & 1F
$20E    $ED06   UNKNOWN  $ED06           ; Unknown Exxx instruction
$210    $EBD2   UNKNOWN  $EBD2           ; Unknown Exxx instruction
$212    $D1C4   DRW      V1, VC, #4      ; Draw 4-byte sprite at V1, VC
$214    $E94D   UNKNOWN  $E94D           ; Unknown Exxx instruction
$216    $05C0   SYS      $5C0            ; System call to 5C0
$218    $15F5   JP       $5F5            ; Jump to 5F5
$21A    $45AA   SNE      V5, #AA         ; Skip if V5 != 170
$21C    $FB51   UNKNOWN  FB51            ; Unknown Fxxx instruction
$21E    $6B0C   LD       VB, #0C         ; Load 12 into VB
$220    $9E66   UNKNOWN  $9E66           ; Unknown 9xxx instruction
$222    $F9E4   UNKNOWN  F9E4            ; Unknown Fxxx instruction
$224    $4F78   SNE      VF, #78         ; Skip if VF != 120
$226    $813A   UNKNOWN  813A            ; Unknown 8xxx instruction
$228    $3F78   SE       VF, #78         ; Skip if VF == 120
$22A    $AFF1   LD       I, $FF1         ; Load FF1 into I
$22C    $3959   SE       V9, #59         ; Skip if V9 == 89
$22E    $0B79   SYS      $B79            ; System call to B79
$230    $3AAE   SE       VA, #AE         ; Skip if VA == 174
$232    $DD35   DRW      VD, V3, #5      ; Draw 5-byte sprite at VD, V3
$234    $47AB   SNE      V7, #AB         ; Skip if V7 != 171
$236    $4175   SNE      V1, #75         ; Skip if V1 != 117
$238    $F093   UNKNOWN  F093            ; Unknown Fxxx instruction
$23A    $2F8F   CALL     $F8F            ; Call subroutine at F8F
$23C    $C869   RND      V8, #69         ; V8 = random & 69
$23E    $4331   SNE      V3, #31         ; Skip if V3 != 49
$240    $BA8D   JP       V0, $A8D        ; Jump to V0 + A8D
$242    $6F05   LD       VF, #05         ; Load 5 into VF
$244    $AEDD   LD       I, $EDD         ; Load EDD into I
$246    $3B57   SE       VB, #57         ; Skip if VB == 87
$248    $4215   SNE      V2, #15         ; Skip if V2 != 21
$24A    $8C27   SUBN     VC, V2          ; VC = V2 - VC, VF = !borrow
$24C    $2255   CALL     $255            ; Call subroutine at 255
$24E    $5AC4   UNKNOWN  $5AC4           ; Unknown 5xxx instruction
$250    $5E76   UNKNOWN  $5E76           ; Unknown 5xxx instruction
$252    $DB89   DRW      VB, V8, #9      ; Draw 9-byte sprite at VB, V8
$254    $AE3D   LD       I, $E3D         ; Load E3D into I
$256    $3660   SE       V6, #60         ; Skip if V6 == 96
$258    $213D   CALL     $13D            ; Call subroutine at 13D
$25A    $C0A4   RND      V0, #A4         ; V0 = random & A4
$25C    $1273   JP       $273            ; Jump to 273
$25E    $9286   UNKNOWN  $9286           ; Unknown 9xxx instruction
$260    $A4A4   LD       I, $4A4         ; Load 4A4 into I
$262    $D071   DRW      V0, V7, #1      ; Draw 1-byte sprite at V0, V7
$264    $C233   RND      V2, #33         ; V2 = random & 33
$266    $C0EF   RND      V0, #EF         ; V0 = random & EF
$268    $6602   LD       V6, #02         ; Load 2 into V6
$26A    $5874   UNKNOWN  $5874           ; Unknown 5xxx instruction
$26C    $B934   JP       V0, $934        ; Jump to V0 + 934
$26E    $7079   ADD      V0, #79         ; Add 121 to V0
$270    $107B   JP       $07B            ; Jump to 07B
$272    $C966   RND      V9, #66         ; V9 = random & 66
$274    $316D   SE       V1, #6D         ; Skip if V1 == 109
$276    $C5D9   RND      V5, #D9         ; V5 = random & D9
$278    $1379   JP       $379            ; Jump to 379
$27A    $CB76   RND      VB, #76         ; VB = random & 76
$27C    $6E9C   LD       VE, #9C         ; Load 156 into VE
$27E    $1A35   JP       $A35            ; Jump to A35
$280    $11ED   JP       $1ED            ; Jump to 1ED
$282    $1575   JP       $575            ; Jump to 575
$284    $F293   UNKNOWN  F293            ; Unknown Fxxx instruction
$286    $EE2A   UNKNOWN  $EE2A           ; Unknown Exxx instruction
$288    $B30F   JP       V0, $30F        ; Jump to V0 + 30F
$28A    $24BF   CALL     $4BF            ; Call subroutine at 4BF
$28C    $FF1C   UNKNOWN  FF1C            ; Unknown Fxxx instruction
$28E    $2AC8   CALL     $AC8            ; Call subroutine at AC8
$290    $0CE2   SYS      $CE2            ; System call to CE2
$292    $57A8   UNKNOWN  $57A8           ; Unknown 5xxx instruction
$294    $9EEE   UNKNOWN  $9EEE           ; Unknown 9xxx instruction
$296    $4300   SNE      V3, #00         ; Skip if V3 != 0
$298    $DC30   DRW      VC, V3, #0      ; Draw 0-byte sprite at VC, V3
$29A    $12A4   JP       $2A4            ; Jump to 2A4
$29C    $E16B   UNKNOWN  $E16B           ; Unknown Exxx instruction
$29E    $A735   LD       I, $735         ; Load 735 into I
$2A0    $5771   UNKNOWN  $5771           ; Unknown 5xxx instruction
$2A2    $1E83   JP       $E83            ; Jump to E83
$2A4    $A006   LD       I, $006         ; Load 006 into I
$2A6    $1F28   JP       $F28            ; Jump to F28
$2A8    $93F8   UNKNOWN  $93F8           ; Unknown 9xxx instruction
$2AA    $0854   SYS      $854            ; System call to 854
$2AC    $6C1F   LD       VC, #1F         ; Load 31 into VC
$2AE    $71E7   ADD      V1, #E7         ; Add 231 to V1
$2B0    $48E8   SNE      V8, #E8         ; Skip if V8 != 232
$2B2    $182C   JP       $82C            ; Jump to 82C
$2B4    $7606   ADD      V6, #06         ; Add 6 to V6
$2B6    $1202   JP       $202            ; Jump to 202
$2B8    $CCAE   RND      VC, #AE         ; VC = random & AE
$2BA    $23F8   CALL     $3F8            ; Call subroutine at 3F8
$2BC    $9EBA   UNKNOWN  $9EBA           ; Unknown 9xxx instruction
$2BE    $4CEE   SNE      VC, #EE         ; Skip if VC != 238
$2C0    $E1BD   UNKNOWN  $E1BD           ; Unknown Exxx instruction
$2C2    $2B27   CALL     $B27            ; Call subroutine at B27
$2C4    $FC4F   UNKNOWN  FC4F            ; Unknown Fxxx instruction
$2C6    $1C68   JP       $C68            ; Jump to C68
$2C8    $F9E6   UNKNOWN  F9E6            ; Unknown Fxxx instruction
$2CA    $7598   ADD      V5, #98         ; Add 152 to V5
$2CC    $8BAE   SHL      VB              ; VB <<= 1, VF = MSB
$2CE    $19FF   JP       $9FF            ; Jump to 9FF
$2D0    $C2C6   RND      V2, #C6         ; V2 = random & C6
$2D2    $F1CF   UNKNOWN  F1CF            ; Unknown Fxxx instruction
$2D4    $30E7   SE       V0, #E7         ; Skip if V0 == 231
$2D6    $571B   UNKNOWN  $571B           ; Unknown 5xxx instruction
$2D8    $D2CE   DRW      V2, VC, #E      ; Draw 14-byte sprite at V2, VC
$2DA    $CA62   RND      VA, #62         ; VA = random & 62
$2DC    $B670   JP       V0, $670        ; Jump to V0 + 670
$2DE    $0C81   SYS      $C81            ; System call to C81
$2E0    $AB20   LD       I, $B20         ; Load B20 into I
$2E2    $6511   LD       V5, #11         ; Load 17 into V5
$2E4    $3896   SE       V8, #96         ; Skip if V8 == 150
$2E6    $99D7   UNKNOWN  $99D7           ; Unknown 9xxx instruction
$2E8    $4160   SNE      V1, #60         ; Skip if V1 != 96
$2EA    $448A   SNE      V4, #8A         ; Skip if V4 != 138
$2EC    $B69D   JP       V0, $69D        ; Jump to V0 + 69D
$2EE    $8DBA   UNKNOWN  8DBA            ; Unknown 8xxx instruction
$2F0    $942E   UNKNOWN  $942E           ; Unknown 9xxx instruction
$2F2    $5AE0   SE       VA, VE          ; Skip if VA == VE
$2F4    $D579   DRW      V5, V7, #9      ; Draw 9-byte sprite at V5, V7
$2F6    $6046   LD       V0, #46         ; Load 70 into V0
$2F8    $70A5   ADD      V0, #A5         ; Add 165 to V0
$2FA    $4CF1   SNE      VC, #F1         ; Skip if VC != 241
$2FC    $66B4   LD       V6, #B4         ; Load 180 into V6
$2FE    $8B0A   UNKNOWN  8B0A            ; Unknown 8xxx instruction
$300    $C9BC   RND      V9, #BC         ; V9 = random & BC
$302    $4017   SNE      V0, #17         ; Skip if V0 != 23
$304    $0B00   SYS      $B00            ; System call to B00
$308    $3F9D   SE       VF, #9D         ; Skip if VF == 157
$30A    $CB24   RND      VB, #24         ; VB = random & 24
$30C    $EF6D   UNKNOWN  $EF6D           ; Unknown Exxx instruction
$30E    $9394   UNKNOWN  $9394           ; Unknown 9xxx instruction
$310    $0B34   SYS      $B34            ; System call to B34
$312    $FA8A   UNKNOWN  FA8A            ; Unknown Fxxx instruction
$314    $192E   JP       $92E            ; Jump to 92E
$316    $0D41   SYS      $D41            ; System call to D41
$318    $82A0   LD       V2, VA          ; V2 = VA
$31A    $2866   CALL     $866            ; Call subroutine at 866
$31C    $6856   LD       V8, #56         ; Load 86 into V8
$31E    $F5CC   UNKNOWN  F5CC            ; Unknown Fxxx instruction
$320    $88F7   SUBN     V8, VF          ; V8 = VF - V8, VF = !borrow
$322    $96D8   UNKNOWN  $96D8           ; Unknown 9xxx instruction
$324    $1B90   JP       $B90            ; Jump to B90
$326    $A56F   LD       I, $56F         ; Load 56F into I
$328    $ACE0   LD       I, $CE0         ; Load CE0 into I
$32A    $5282   UNKNOWN  $5282           ; Unknown 5xxx instruction
$32C    $CFB5   RND      VF, #B5         ; VF = random & B5
$32E    $25B4   CALL     $5B4            ; Call subroutine at 5B4
$330    $C975   RND      V9, #75         ; V9 = random & 75
$332    $5C31   UNKNOWN  $5C31           ; Unknown 5xxx instruction
$334    $B666   JP       V0, $666        ; Jump to V0 + 666
$336    $0321   SYS      $321            ; System call to 321
$338    $1B42   JP       $B42            ; Jump to B42
$33A    $CCCA   RND      VC, #CA         ; VC = random & CA
$33C    $7788   ADD      V7, #88         ; Add 136 to V7
$33E    $EF62   UNKNOWN  $EF62           ; Unknown Exxx instruction
$340    $AA66   LD       I, $A66         ; Load A66 into I
$342    $A669   LD       I, $669         ; Load 669 into I
$344    $8FC6   SHR      VF              ; VF >>= 1, VF = LSB
$346    $84BE   SHL      V4              ; V4 <<= 1, VF = MSB
$348    $6882   LD       V8, #82         ; Load 130 into V8
$34A    $B541   JP       V0, $541        ; Jump to V0 + 541
$34C    $9DE5   UNKNOWN  $9DE5           ; Unknown 9xxx instruction
$34E    $0F79   SYS      $F79            ; System call to F79
$350    $0706   SYS      $706            ; System call to 706
$352    $32FC   SE       V2, #FC         ; Skip if V2 == 252
$354    $E09E   SKP      V0              ; Skip if key V0 pressed
$356    $7501   ADD      V5, #01         ; Add 1 to V5
$358    $B4E7   JP       V0, $4E7        ; Jump to V0 + 4E7
$35A    $1A56   JP       $A56            ; Jump to A56
$35C    $BA3F   JP       V0, $A3F        ; Jump to V0 + A3F
$35E    $D2EC   DRW      V2, VE, #C      ; Draw 12-byte sprite at V2, VE
$360    $96B6   UNKNOWN  $96B6           ; Unknown 9xxx instruction
$362    $AB82   LD       I, $B82         ; Load B82 into I
$364    $C85D   RND      V8, #5D         ; V8 = random & 5D
$366    $B4F5   JP       V0, $4F5        ; Jump to V0 + 4F5
$368    $694B   LD       V9, #4B         ; Load 75 into V9
$36A    $C599   RND      V5, #99         ; V5 = random & 99
$36C    $1709   JP       $709            ; Jump to 709
$36E    $E1F0   UNKNOWN  $E1F0           ; Unknown Exxx instruction
$370    $6EAC   LD       VE, #AC         ; Load 172 into VE
$372    $413E   SNE      V1, #3E         ; Skip if V1 != 62
$374    $7F9F   ADD      VF, #9F         ; Add 159 to VF
$376    $E295   UNKNOWN  $E295           ; Unknown Exxx instruction
$378    $CA81   RND      VA, #81         ; VA = random & 81
$37A    $0050   SYS      $050            ; System call to 050
$37C    $BBC1   JP       V0, $BC1        ; Jump to V0 + BC1
$37E    $168D   JP       $68D            ; Jump to 68D
$380    $0383   SYS      $383            ; System call to 383
$382    $8C8A   UNKNOWN  8C8A            ; Unknown 8xxx instruction
$384    $C63B   RND      V6, #3B         ; V6 = random & 3B
$386    $72D3   ADD      V2, #D3         ; Add 211 to V2
$388    $961E   UNKNOWN  $961E           ; Unknown 9xxx instruction
$38A    $7DA2   ADD      VD, #A2         ; Add 162 to VD
$38C    $3D95   SE       VD, #95         ; Skip if VD == 149
$38E    $C682   RND      V6, #82         ; V6 = random & 82
$390    $107D   JP       $07D            ; Jump to 07D
$392    $C232   RND      V2, #32         ; V2 = random & 32
$394    $179A   JP       $79A            ; Jump to 79A
$396    $E39B   UNKNOWN  $E39B           ; Unknown Exxx instruction
$398    $0CC1   SYS      $CC1            ; System call to CC1
$39A    $F8A1   UNKNOWN  F8A1            ; Unknown Fxxx instruction
$39C    $067B   SYS      $67B            ; System call to 67B
$39E    $1593   JP       $593            ; Jump to 593
$3A0    $B054   JP       V0, $054        ; Jump to V0 + 054
$3A2    $34F4   SE       V4, #F4         ; Skip if V4 == 244
$3A4    $B277   JP       V0, $277        ; Jump to V0 + 277
$3A6    $74F6   ADD      V4, #F6         ; Add 246 to V4
$3A8    $012E   SYS      $12E            ; System call to 12E
$3AA    $8124   ADD      V1, V2          ; V1 += V2, VF = carry
$3AC    $E596   UNKNOWN  $E596           ; Unknown Exxx instruction
$3AE    $9493   UNKNOWN  $9493           ; Unknown 9xxx instruction
$3B0    $DCAC   DRW      VC, VA, #C      ; Draw 12-byte sprite at VC, VA
$3B2    $CA99   RND      VA, #99         ; VA = random & 99
$3B4    $3699   SE       V6, #99         ; Skip if V6 == 153
$3B6    $19BB   JP       $9BB            ; Jump to 9BB
$3B8    $DB13   DRW      VB, V1, #3      ; Draw 3-byte sprite at VB, V1
$3BA    $5191   UNKNOWN  $5191           ; Unknown 5xxx instruction
$3BC    $1255   JP       $255            ; Jump to 255
$3BE    $6B13   LD       VB, #13         ; Load 19 into VB
$3C0    $9BBB   UNKNOWN  $9BBB           ; Unknown 9xxx instruction
$3C2    $A6F4   LD       I, $6F4         ; Load 6F4 into I
$3C4    $6932   LD       V9, #32         ; Load 50 into V9
$3C6    $6871   LD       V8, #71         ; Load 113 into V8
$3C8    $18F2   JP       $8F2            ; Jump to 8F2
$3CA    $BD97   JP       V0, $D97        ; Jump to V0 + D97
$3CC    $FC11   UNKNOWN  FC11            ; Unknown Fxxx instruction
$3CE    $1F47   JP       $F47            ; Jump to F47
$3D0    $6925   LD       V9, #25         ; Load 37 into V9
$3D2    $D20F   DRW      V2, V0, #F      ; Draw 15-byte sprite at V2, V0
$3D4    $68DD   LD       V8, #DD         ; Load 221 into V8
$3D6    $9E04   UNKNOWN  $9E04           ; Unknown 9xxx instruction
$3D8    $D903   DRW      V9, V0, #3      ; Draw 3-byte sprite at V9, V0
$3DA    $7AEC   ADD      VA, #EC         ; Add 236 to VA
$3DC    $5123   UNKNOWN  $5123           ; Unknown 5xxx instruction
$3DE    $1141   JP       $141            ; Jump to 141
$3E0    $62E0   LD       V2, #E0         ; Load 224 into V2
$3E2    $DD66   DRW      VD, V6, #6      ; Draw 6-byte sprite at VD, V6
$3E4    $3448   SE       V4, #48         ; Skip if V4 == 72
$3E6    $E10F   UNKNOWN  $E10F           ; Unknown Exxx instruction
$3E8    $51C4   UNKNOWN  $51C4           ; Unknown 5xxx instruction
$3EA    $1119   JP       $119            ; Jump to 119
$3EC    $521C   UNKNOWN  $521C           ; Unknown 5xxx instruction
$3EE    $F887   UNKNOWN  F887            ; Unknown Fxxx instruction
$3F0    $2932   CALL     $932            ; Call subroutine at 932
$3F2    $D020   DRW      V0, V2, #0      ; Draw 0-byte sprite at V0, V2
$3F6    $0138   SYS      $138            ; System call to 138
$3F8    $C53B   RND      V5, #3B         ; V5 = random & 3B
$3FA    $DFA7   DRW      VF, VA, #7      ; Draw 7-byte sprite at VF, VA
$3FC    $564D   UNKNOWN  $564D           ; Unknown 5xxx instruction
$3FE    $AF50   LD       I, $F50         ; Load F50 into I
$400    $8E24   ADD      VE, V2          ; VE += V2, VF = carry
$402    $D179   DRW      V1, V7, #9      ; Draw 9-byte sprite at V1, V7
$404    $0944   SYS      $944            ; System call to 944
$406    $712D   ADD      V1, #2D         ; Add 45 to V1
$408    $EE0F   UNKNOWN  $EE0F           ; Unknown Exxx instruction
$40A    $9041   UNKNOWN  $9041           ; Unknown 9xxx instruction
$40C    $BBFC   JP       V0, $BFC        ; Jump to V0 + BFC
$40E    $7B67   ADD      VB, #67         ; Add 103 to VB
$410    $BF78   JP       V0, $F78        ; Jump to V0 + F78
$412    $3C2C   SE       VC, #2C         ; Skip if VC == 44
$414    $5544   UNKNOWN  $5544           ; Unknown 5xxx instruction
$416    $B87C   JP       V0, $87C        ; Jump to V0 + 87C
$418    $A94B   LD       I, $94B         ; Load 94B into I
$41A    $1692   JP       $692            ; Jump to 692
$41C    $6562   LD       V5, #62         ; Load 98 into V5
$41E    $7F71   ADD      VF, #71         ; Add 113 to VF
$420    $FF01   UNKNOWN  FF01            ; Unknown Fxxx instruction
$422    $4806   SNE      V8, #06         ; Skip if V8 != 6
$424    $C8E8   RND      V8, #E8         ; V8 = random & E8
$426    $D5E4   DRW      V5, VE, #4      ; Draw 4-byte sprite at V5, VE
$428    $CD05   RND      VD, #05         ; VD = random & 05
$42A    $BF4A   JP       V0, $F4A        ; Jump to V0 + F4A
$42C    $6732   LD       V7, #32         ; Load 50 into V7
$42E    $A1DD   LD       I, $1DD         ; Load 1DD into I
$430    $D560   DRW      V5, V6, #0      ; Draw 0-byte sprite at V5, V6
$432    $C56E   RND      V5, #6E         ; V5 = random & 6E
$434    $4C04   SNE      VC, #04         ; Skip if VC != 4
$436    $365E   SE       V6, #5E         ; Skip if V6 == 94
$438    $1DE9   JP       $DE9            ; Jump to DE9
$43A    $7007   ADD      V0, #07         ; Add 7 to V0
$43C    $EC36   UNKNOWN  $EC36           ; Unknown Exxx instruction
$43E    $7EFB   ADD      VE, #FB         ; Add 251 to VE
$440    $83F2   AND      V3, VF          ; V3 &= VF
$442    $C8E2   RND      V8, #E2         ; V8 = random & E2
$444    $A2BB   LD       I, $2BB         ; Load 2BB into I
$446    $17EB   JP       $7EB            ; Jump to 7EB
$448    $365F   SE       V6, #5F         ; Skip if V6 == 95
$44A    $8AF7   SUBN     VA, VF          ; VA = VF - VA, VF = !borrow
$44C    $1381   JP       $381            ; Jump to 381
$44E    $313D   SE       V1, #3D         ; Skip if V1 == 61
$450    $E229   UNKNOWN  $E229           ; Unknown Exxx instruction
$452    $70BD   ADD      V0, #BD         ; Add 189 to V0
$454    $960E   UNKNOWN  $960E           ; Unknown 9xxx instruction
$456    $0C95   SYS      $C95            ; System call to C95
$458    $9FEA   UNKNOWN  $9FEA           ; Unknown 9xxx instruction
$45A    $A49E   LD       I, $49E         ; Load 49E into I
$45C    $8C46   SHR      VC              ; VC >>= 1, VF = LSB
$45E    $7612   ADD      V6, #12         ; Add 18 to V6
$460    $1D5C   JP       $D5C            ; Jump to D5C
$462    $A75B   LD       I, $75B         ; Load 75B into I
$464    $734B   ADD      V3, #4B         ; Add 75 to V3
$466    $EA77   UNKNOWN  $EA77           ; Unknown Exxx instruction
$468    $C26E   RND      V2, #6E         ; V2 = random & 6E
$46A    $F847   UNKNOWN  F847            ; Unknown Fxxx instruction
$46C    $2721   CALL     $721            ; Call subroutine at 721
$46E    $E6D9   UNKNOWN  $E6D9           ; Unknown Exxx instruction
$470    $B60D   JP       V0, $60D        ; Jump to V0 + 60D
$472    $2E8D   CALL     $E8D            ; Call subroutine at E8D
$474    $777B   ADD      V7, #7B         ; Add 123 to V7
$476    $4132   SNE      V1, #32         ; Skip if V1 != 50
$478    $157D   JP       $57D            ; Jump to 57D
$47A    $6C01   LD       VC, #01         ; Load 1 into VC
$47C    $3673   SE       V6, #73         ; Skip if V6 == 115
$47E    $05CD   SYS      $5CD            ; System call to 5CD
$480    $F06D   UNKNOWN  F06D            ; Unknown Fxxx instruction
$482    $4D26   SNE      VD, #26         ; Skip if VD != 38
$484    $C9A6   RND      V9, #A6         ; V9 = random & A6
$486    $5BB4   UNKNOWN  $5BB4           ; Unknown 5xxx instruction
$488    $9F91   UNKNOWN  $9F91           ; Unknown 9xxx instruction
$48A    $D558   DRW      V5, V5, #8      ; Draw 8-byte sprite at V5, V5
$48C    $7FFB   ADD      VF, #FB         ; Add 251 to VF
$48E    $0D6E   SYS      $D6E            ; System call to D6E
$490    $01D3   SYS      $1D3            ; System call to 1D3
$492    $4FB5   SNE      VF, #B5         ; Skip if VF != 181
$494    $BB8D   JP       V0, $B8D        ; Jump to V0 + B8D
$496    $3174   SE       V1, #74         ; Skip if V1 == 116
$498    $5F11   UNKNOWN  $5F11           ; Unknown 5xxx instruction
$49A    $8C62   AND      VC, V6          ; VC &= V6
$49C    $7935   ADD      V9, #35         ; Add 53 to V9
$49E    $E71A   UNKNOWN  $E71A           ; Unknown Exxx instruction
$4A0    $CB78   RND      VB, #78         ; VB = random & 78
$4A2    $2AD2   CALL     $AD2            ; Call subroutine at AD2
$4A4    $9187   UNKNOWN  $9187           ; Unknown 9xxx instruction
$4A6    $66D8   LD       V6, #D8         ; Load 216 into V6
$4A8    $68B5   LD       V8, #B5         ; Load 181 into V8
$4AA    $430B   SNE      V3, #0B         ; Skip if V3 != 11
$4AC    $9E95   UNKNOWN  $9E95           ; Unknown 9xxx instruction
$4AE    $3777   SE       V7, #77         ; Skip if V7 == 119
$4B0    $785A   ADD      V8, #5A         ; Add 90 to V8
$4B2    $55C6   UNKNOWN  $55C6           ; Unknown 5xxx instruction
$4B4    $C0B3   RND      V0, #B3         ; V0 = random & B3
$4B6    $9B81   UNKNOWN  $9B81           ; Unknown 9xxx instruction
$4B8    $B8A3   JP       V0, $8A3        ; Jump to V0 + 8A3
$4BA    $806C   UNKNOWN  806C            ; Unknown 8xxx instruction
$4BC    $D405   DRW      V4, V0, #5      ; Draw 5-byte sprite at V4, V0
$4BE    $3779   SE       V7, #79         ; Skip if V7 == 121
$4C0    $3A7D   SE       VA, #7D         ; Skip if VA == 125
$4C2    $3E49   SE       VE, #49         ; Skip if VE == 73
$4C4    $9219   UNKNOWN  $9219           ; Unknown 9xxx instruction
$4C6    $AA81   LD       I, $A81         ; Load A81 into I
$4C8    $4C54   SNE      VC, #54         ; Skip if VC != 84
$4CA    $3E0B   SE       VE, #0B         ; Skip if VE == 11
$4CC    $521E   UNKNOWN  $521E           ; Unknown 5xxx instruction
$4CE    $BAD9   JP       V0, $AD9        ; Jump to V0 + AD9
$4D0    $A060   LD       I, $060         ; Load 060 into I
$4D2    $A59F   LD       I, $59F         ; Load 59F into I
$4D4    $DD7C   DRW      VD, V7, #C      ; Draw 12-byte sprite at VD, V7
$4D6    $B010   JP       V0, $010        ; Jump to V0 + 010
$4D8    $D694   DRW      V6, V9, #4      ; Draw 4-byte sprite at V6, V9
$4DA    $5342   UNKNOWN  $5342           ; Unknown 5xxx instruction
$4DC    $29C4   CALL     $9C4            ; Call subroutine at 9C4
$4DE    $188A   JP       $88A            ; Jump to 88A
$4E0    $24A4   CALL     $4A4            ; Call subroutine at 4A4
$4E2    $7869   ADD      V8, #69         ; Add 105 to V8
$4E4    $2C2A   CALL     $C2A            ; Call subroutine at C2A
$4E6    $E1F7   UNKNOWN  $E1F7           ; Unknown Exxx instruction
$4E8    $6A92   LD       VA, #92         ; Load 146 into VA
$4EA    $0BE8   SYS      $BE8            ; System call to BE8
$4EC    $A299   LD       I, $299         ; Load 299 into I
$4EE    $AA88   LD       I, $A88         ; Load A88 into I
$4F0    $3058   SE       V0, #58         ; Skip if V0 == 88
$4F2    $BED9   JP       V0, $ED9        ; Jump to V0 + ED9
$4F4    $F32D   UNKNOWN  F32D            ; Unknown Fxxx instruction
$4F6    $9EB6   UNKNOWN  $9EB6           ; Unknown 9xxx instruction
$4F8    $34EE   SE       V4, #EE         ; Skip if V4 == 238
$4FA    $6E66   LD       VE, #66         ; Load 102 into VE
$4FC    $347F   SE       V4, #7F         ; Skip if V4 == 127
$4FE    $EB52   UNKNOWN  $EB52           ; Unknown Exxx instruction
$500    $8BDB   UNKNOWN  8BDB            ; Unknown 8xxx instruction
$502    $D436   DRW      V4, V3, #6      ; Draw 6-byte sprite at V4, V3
$504    $C916   RND      V9, #16         ; V9 = random & 16
$506    $E2D5   UNKNOWN  $E2D5           ; Unknown Exxx instruction
$508    $A2C5   LD       I, $2C5         ; Load 2C5 into I
$50A    $61D4   LD       V1, #D4         ; Load 212 into V1
$50C    $508A   UNKNOWN  $508A           ; Unknown 5xxx instruction
$50E    $DA50   DRW      VA, V5, #0      ; Draw 0-byte sprite at VA, V5
$510    $B3FA   JP       V0, $3FA        ; Jump to V0 + 3FA
$512    $BB0C   JP       V0, $B0C        ; Jump to V0 + B0C
$514    $680A   LD       V8, #0A         ; Load 10 into V8
$516    $801D   UNKNOWN  801D            ; Unknown 8xxx instruction
$518    $B458   JP       V0, $458        ; Jump to V0 + 458
$51A    $F47A   UNKNOWN  F47A            ; Unknown Fxxx instruction
$51C    $612D   LD       V1, #2D         ; Load 45 into V1
$51E    $BE48   JP       V0, $E48        ; Jump to V0 + E48
$520    $DABD   DRW      VA, VB, #D      ; Draw 13-byte sprite at VA, VB
$522    $9D17   UNKNOWN  $9D17           ; Unknown 9xxx instruction
$524    $B4A3   JP       V0, $4A3        ; Jump to V0 + 4A3
$526    $C419   RND      V4, #19         ; V4 = random & 19
$528    $0498   SYS      $498            ; System call to 498
$52A    $800E   SHL      V0              ; V0 <<= 1, VF = MSB
$52C    $22D3   CALL     $2D3            ; Call subroutine at 2D3
$52E    $636E   LD       V3, #6E         ; Load 110 into V3
$530    $8211   OR       V2, V1          ; V2 |= V1
$532    $3EA1   SE       VE, #A1         ; Skip if VE == 161
$534    $FFA0   UNKNOWN  FFA0            ; Unknown Fxxx instruction
$536    $29D6   CALL     $9D6            ; Call subroutine at 9D6
$538    $2B20   CALL     $B20            ; Call subroutine at B20
$53A    $47D6   SNE      V7, #D6         ; Skip if V7 != 214
$53C    $0B5C   SYS      $B5C            ; System call to B5C
$53E    $7A68   ADD      VA, #68         ; Add 104 to VA
$540    $CA23   RND      VA, #23         ; VA = random & 23
$542    $F4FD   UNKNOWN  F4FD            ; Unknown Fxxx instruction
$544    $E944   UNKNOWN  $E944           ; Unknown Exxx instruction
$546    $BA0F   JP       V0, $A0F        ; Jump to V0 + A0F
$548    $3CDC   SE       VC, #DC         ; Skip if VC == 220
$54A    $CFC1   RND      VF, #C1         ; VF = random & C1
$54C    $F136   UNKNOWN  F136            ; Unknown Fxxx instruction
$54E    $3259   SE       V2, #59         ; Skip if V2 == 89
$550    $47DC   SNE      V7, #DC         ; Skip if V7 != 220
$552    $B0C1   JP       V0, $0C1        ; Jump to V0 + 0C1
$554    $E329   UNKNOWN  $E329           ; Unknown Exxx instruction
$556    $64C4   LD       V4, #C4         ; Load 196 into V4
$558    $B96F   JP       V0, $96F        ; Jump to V0 + 96F
$55A    $64C8   LD       V4, #C8         ; Load 200 into V4
$55C    $43FB   SNE      V3, #FB         ; Skip if V3 != 251
$55E    $B9F1   JP       V0, $9F1        ; Jump to V0 + 9F1
$560    $F468   UNKNOWN  F468            ; Unknown Fxxx instruction
$562    $04A3   SYS      $4A3            ; System call to 4A3
$564    $D188   DRW      V1, V8, #8      ; Draw 8-byte sprite at V1, V8
$566    $43AC   SNE      V3, #AC         ; Skip if V3 != 172
$568    $62E6   LD       V2, #E6         ; Load 230 into V2
$56A    $73E6   ADD      V3, #E6         ; Add 230 to V3
$56C    $2D80   CALL     $D80            ; Call subroutine at D80
$56E    $A1F9   LD       I, $1F9         ; Load 1F9 into I
$570    $DD00   DRW      VD, V0, #0      ; Draw 0-byte sprite at VD, V0
$572    $02A7   SYS      $2A7            ; System call to 2A7
$574    $0576   SYS      $576            ; System call to 576
$576    $9631   UNKNOWN  $9631           ; Unknown 9xxx instruction
$578    $E8B4   UNKNOWN  $E8B4           ; Unknown Exxx instruction
$57A    $1178   JP       $178            ; Jump to 178
$57C    $DBA4   DRW      VB, VA, #4      ; Draw 4-byte sprite at VB, VA
$57E    $1A31   JP       $A31            ; Jump to A31
$580    $F169   UNKNOWN  F169            ; Unknown Fxxx instruction
$582    $68C7   LD       V8, #C7         ; Load 199 into V8
$584    $8F82   AND      VF, V8          ; VF &= V8
$586    $6CB5   LD       VC, #B5         ; Load 181 into VC
$588    $106E   JP       $06E            ; Jump to 06E
$58A    $813B   UNKNOWN  813B            ; Unknown 8xxx instruction
$58C    $41EB   SNE      V1, #EB         ; Skip if V1 != 235
$58E    $5FD5   UNKNOWN  $5FD5           ; Unknown 5xxx instruction
$590    $D4DA   DRW      V4, VD, #A      ; Draw 10-byte sprite at V4, VD
$592    $D18C   DRW      V1, V8, #C      ; Draw 12-byte sprite at V1, V8
$594    $2048   CALL     $048            ; Call subroutine at 048
$596    $DCDE   DRW      VC, VD, #E      ; Draw 14-byte sprite at VC, VD
$598    $2619   CALL     $619            ; Call subroutine at 619
$59A    $8F88   UNKNOWN  8F88            ; Unknown 8xxx instruction
$59C    $47A8   SNE      V7, #A8         ; Skip if V7 != 168
$59E    $F8B5   UNKNOWN  F8B5            ; Unknown Fxxx instruction
$5A0    $D203   DRW      V2, V0, #3      ; Draw 3-byte sprite at V2, V0
$5A2    $0D58   SYS      $D58            ; System call to D58
$5A4    $F2D0   UNKNOWN  F2D0            ; Unknown Fxxx instruction
$5A6    $E04B   UNKNOWN  $E04B           ; Unknown Exxx instruction
$5A8    $A0A1   LD       I, $0A1         ; Load 0A1 into I
$5AA    $019A   SYS      $19A            ; System call to 19A
$5AC    $47C8   SNE      V7, #C8         ; Skip if V7 != 200
$5AE    $4281   SNE      V2, #81         ; Skip if V2 != 129
$5B0    $C60D   RND      V6, #0D         ; V6 = random & 0D
$5B2    $6728   LD       V7, #28         ; Load 40 into V7
$5B4    $91FC   UNKNOWN  $91FC           ; Unknown 9xxx instruction
$5B6    $52DD   UNKNOWN  $52DD           ; Unknown 5xxx instruction
$5B8    $4C71   SNE      VC, #71         ; Skip if VC != 113
$5BA    $82C1   OR       V2, VC          ; V2 |= VC
$5BC    $9D21   UNKNOWN  $9D21           ; Unknown 9xxx instruction
$5BE    $F1A0   UNKNOWN  F1A0            ; Unknown Fxxx instruction
$5C0    $791B   ADD      V9, #1B         ; Add 27 to V9
$5C2    $E0A0   UNKNOWN  $E0A0           ; Unknown Exxx instruction
$5C4    $F9F5   UNKNOWN  F9F5            ; Unknown Fxxx instruction
$5C6    $609D   LD       V0, #9D         ; Load 157 into V0
$5C8    $931C   UNKNOWN  $931C           ; Unknown 9xxx instruction
$5CA    $EF7F   UNKNOWN  $EF7F           ; Unknown Exxx instruction
$5CC    $B0C2   JP       V0, $0C2        ; Jump to V0 + 0C2
$5CE    $47E8   SNE      V7, #E8         ; Skip if V7 != 232
$5D0    $4EB6   SNE      VE, #B6         ; Skip if VE != 182
$5D2    $750D   ADD      V5, #0D         ; Add 13 to V5
$5D4    $FE6A   UNKNOWN  FE6A            ; Unknown Fxxx instruction
$5D6    $36A3   SE       V6, #A3         ; Skip if V6 == 163
$5D8    $F8ED   UNKNOWN  F8ED            ; Unknown Fxxx instruction
$5DA    $E1E3   UNKNOWN  $E1E3           ; Unknown Exxx instruction
$5DC    $BDB3   JP       V0, $DB3        ; Jump to V0 + DB3
$5DE    $9CEE   UNKNOWN  $9CEE           ; Unknown 9xxx instruction
$5E0    $5E40   SE       VE, V4          ; Skip if VE == V4
$5E2    $3EFC   SE       VE, #FC         ; Skip if VE == 252
$5E4    $D4C3   DRW      V4, VC, #3      ; Draw 3-byte sprite at V4, VC
$5E6    $238F   CALL     $38F            ; Call subroutine at 38F
$5E8    $9FAC   UNKNOWN  $9FAC           ; Unknown 9xxx instruction
$5EA    $6C93   LD       VC, #93         ; Load 147 into VC
$5EC    $99C1   UNKNOWN  $99C1           ; Unknown 9xxx instruction
$5EE    $DFED   DRW      VF, VE, #D      ; Draw 13-byte sprite at VF, VE
$5F0    $A41D   LD       I, $41D         ; Load 41D into I
$5F2    $89E0   LD       V9, VE          ; V9 = VE
$5F4    $2CC2   CALL     $CC2            ; Call subroutine at CC2
$5F6    $75C3   ADD      V5, #C3         ; Add 195 to V5
$5F8    $66C0   LD       V6, #C0         ; Load 192 into V6
$5FA    $0804   SYS      $804            ; System call to 804
$5FC    $FBF3   UNKNOWN  FBF3            ; Unknown Fxxx instruction
$5FE    $1049   JP       $049            ; Jump to 049
$600    $09FE   SYS      $9FE            ; System call to 9FE
$602    $9640   SNE      V6, V4          ; Skip if V6 != V4
$604    $A6A9   LD       I, $6A9         ; Load 6A9 into I
$606    $8C65   SUB      VC, V6          ; VC -= V6, VF = !borrow
$608    $25FF   CALL     $5FF            ; Call subroutine at 5FF
$60A    $9BE7   UNKNOWN  $9BE7           ; Unknown 9xxx instruction
$60C    $5C84   UNKNOWN  $5C84           ; Unknown 5xxx instruction
$60E    $73CD   ADD      V3, #CD         ; Add 205 to V3
$610    $2AA6   CALL     $AA6            ; Call subroutine at AA6
$612    $656C   LD       V5, #6C         ; Load 108 into V5
$614    $2BBD   CALL     $BBD            ; Call subroutine at BBD
$616    $DA06   DRW      VA, V0, #6      ; Draw 6-byte sprite at VA, V0
$618    $07D0   SYS      $7D0            ; System call to 7D0
$61A    $D8E2   DRW      V8, VE, #2      ; Draw 2-byte sprite at V8, VE
$61C    $D21C   DRW      V2, V1, #C      ; Draw 12-byte sprite at V2, V1
$61E    $8B9B   UNKNOWN  8B9B            ; Unknown 8xxx instruction
$620    $214E   CALL     $14E            ; Call subroutine at 14E
$622    $CA42   RND      VA, #42         ; VA = random & 42
$624    $366A   SE       V6, #6A         ; Skip if V6 == 106
$626    $3439   SE       V4, #39         ; Skip if V4 == 57
$628    $8696   SHR      V6              ; V6 >>= 1, VF = LSB
$62A    $F1C0   UNKNOWN  F1C0            ; Unknown Fxxx instruction
$62C    $EEF5   UNKNOWN  $EEF5           ; Unknown Exxx instruction
$62E    $2C6C   CALL     $C6C            ; Call subroutine at C6C
$630    $910A   UNKNOWN  $910A           ; Unknown 9xxx instruction
$632    $5CA7   UNKNOWN  $5CA7           ; Unknown 5xxx instruction
$634    $66B8   LD       V6, #B8         ; Load 184 into V6
$636    $57BA   UNKNOWN  $57BA           ; Unknown 5xxx instruction
$638    $9FBF   UNKNOWN  $9FBF           ; Unknown 9xxx instruction
$63A    $0DB3   SYS      $DB3            ; System call to DB3
$63C    $6F90   LD       VF, #90         ; Load 144 into VF
$63E    $15FC   JP       $5FC            ; Jump to 5FC
$640    $6D48   LD       VD, #48         ; Load 72 into VD
$642    $C1D8   RND      V1, #D8         ; V1 = random & D8
$644    $CF3A   RND      VF, #3A         ; VF = random & 3A
$646    $A41C   LD       I, $41C         ; Load 41C into I
$648    $4A19   SNE      VA, #19         ; Skip if VA != 25
$64A    $638F   LD       V3, #8F         ; Load 143 into V3
$64C    $21F3   CALL     $1F3            ; Call subroutine at 1F3
$64E    $B79D   JP       V0, $79D        ; Jump to V0 + 79D
$650    $B68D   JP       V0, $68D        ; Jump to V0 + 68D
$652    $4A1F   SNE      VA, #1F         ; Skip if VA != 31
$654    $6DC8   LD       VD, #C8         ; Load 200 into VD
$656    $1ABC   JP       $ABC            ; Jump to ABC
$658    $5D7A   UNKNOWN  $5D7A           ; Unknown 5xxx instruction
$65A    $179B   JP       $79B            ; Jump to 79B
$65C    $3353   SE       V3, #53         ; Skip if V3 == 83
$65E    $05BA   SYS      $5BA            ; System call to 5BA
$660    $684E   LD       V8, #4E         ; Load 78 into V8
$662    $C0C1   RND      V0, #C1         ; V0 = random & C1
$664    $2EB8   CALL     $EB8            ; Call subroutine at EB8
$666    $709E   ADD      V0, #9E         ; Add 158 to V0
$668    $8CF7   SUBN     VC, VF          ; VC = VF - VC, VF = !borrow
$66A    $1D05   JP       $D05            ; Jump to D05
$66C    $2EB2   CALL     $EB2            ; Call subroutine at EB2
$66E    $0EE8   SYS      $EE8            ; System call to EE8
$670    $8CDF   UNKNOWN  8CDF            ; Unknown 8xxx instruction
$672    $5539   UNKNOWN  $5539           ; Unknown 5xxx instruction
$674    $9749   UNKNOWN  $9749           ; Unknown 9xxx instruction
$676    $DD29   DRW      VD, V2, #9      ; Draw 9-byte sprite at VD, V2
$678    $6779   LD       V7, #79         ; Load 121 into V7
$67A    $18AB   JP       $8AB            ; Jump to 8AB
$67C    $E34B   UNKNOWN  $E34B           ; Unknown Exxx instruction
$67E    $F2B5   UNKNOWN  F2B5            ; Unknown Fxxx instruction
$680    $9828   UNKNOWN  $9828           ; Unknown 9xxx instruction
$682    $1C73   JP       $C73            ; Jump to C73
$684    $1ACC   JP       $ACC            ; Jump to ACC
$686    $6E9D   LD       VE, #9D         ; Load 157 into VE
$688    $BF85   JP       V0, $F85        ; Jump to V0 + F85
$68A    $E39D   UNKNOWN  $E39D           ; Unknown Exxx instruction
$68C    $D1E1   DRW      V1, VE, #1      ; Draw 1-byte sprite at V1, VE
$68E    $1CE9   JP       $CE9            ; Jump to CE9
$690    $3BC9   SE       VB, #C9         ; Skip if VB == 201
$692    $F0E0   UNKNOWN  F0E0            ; Unknown Fxxx instruction
$694    $8C01   OR       VC, V0          ; VC |= V0
$696    $7F86   ADD      VF, #86         ; Add 134 to VF
$698    $C0F2   RND      V0, #F2         ; V0 = random & F2
$69A    $4607   SNE      V6, #07         ; Skip if V6 != 7
$69C    $005C   SYS      $05C            ; System call to 05C
$69E    $3779   SE       V7, #79         ; Skip if V7 == 121
$6A0    $8ABF   UNKNOWN  8ABF            ; Unknown 8xxx instruction
$6A2    $6C6E   LD       VC, #6E         ; Load 110 into VC
$6A4    $7941   ADD      V9, #41         ; Add 65 to V9
$6A6    $4928   SNE      V9, #28         ; Skip if V9 != 40
$6A8    $9422   UNKNOWN  $9422           ; Unknown 9xxx instruction
$6AA    $DC8D   DRW      VC, V8, #D      ; Draw 13-byte sprite at VC, V8
$6AC    $6C35   LD       VC, #35         ; Load 53 into VC
$6AE    $D082   DRW      V0, V8, #2      ; Draw 2-byte sprite at V0, V8
$6B0    $B8CF   JP       V0, $8CF        ; Jump to V0 + 8CF
$6B2    $A345   LD       I, $345         ; Load 345 into I
$6B4    $2FE1   CALL     $FE1            ; Call subroutine at FE1
$6B6    $CC21   RND      VC, #21         ; VC = random & 21
$6B8    $B71B   JP       V0, $71B        ; Jump to V0 + 71B
$6BA    $085A   SYS      $85A            ; System call to 85A
$6BC    $B70D   JP       V0, $70D        ; Jump to V0 + 70D
$6BE    $98FD   UNKNOWN  $98FD           ; Unknown 9xxx instruction
$6C0    $15FE   JP       $5FE            ; Jump to 5FE
$6C2    $7603   ADD      V6, #03         ; Add 3 to V6
$6C4    $A24A   LD       I, $24A         ; Load 24A into I
$6C6    $531B   UNKNOWN  $531B           ; Unknown 5xxx instruction
$6C8    $008B   SYS      $08B            ; System call to 08B
$6CA    $EA6B   UNKNOWN  $EA6B           ; Unknown Exxx instruction
$6CC    $E6F2   UNKNOWN  $E6F2           ; Unknown Exxx instruction
$6CE    $A866   LD       I, $866         ; Load 866 into I
$6D0    $5B2B   UNKNOWN  $5B2B           ; Unknown 5xxx instruction
$6D2    $60F3   LD       V0, #F3         ; Load 243 into V0
$6D4    $B0DF   JP       V0, $0DF        ; Jump to V0 + 0DF
$6D6    $197D   JP       $97D            ; Jump to 97D
$6D8    $FC0A   LD       VC, K           ; Wait for key press, store in VC
$6DA    $18DF   JP       $8DF            ; Jump to 8DF
$6DC    $870B   UNKNOWN  870B            ; Unknown 8xxx instruction
$6DE    $4E40   SNE      VE, #40         ; Skip if VE != 64
$6E0    $DF43   DRW      VF, V4, #3      ; Draw 3-byte sprite at VF, V4
$6E2    $095B   SYS      $95B            ; System call to 95B
$6E4    $F679   UNKNOWN  F679            ; Unknown Fxxx instruction
$6E6    $0126   SYS      $126            ; System call to 126
$6E8    $8A5D   UNKNOWN  8A5D            ; Unknown 8xxx instruction
$6EA    $AEC8   LD       I, $EC8         ; Load EC8 into I
$6EC    $2334   CALL     $334            ; Call subroutine at 334
$6EE    $557E   UNKNOWN  $557E           ; Unknown 5xxx instruction
$6F0    $4D0B   SNE      VD, #0B         ; Skip if VD != 11
$6F2    $6171   LD       V1, #71         ; Load 113 into V1
$6F4    $A246   LD       I, $246         ; Load 246 into I
$6F6    $EBDE   UNKNOWN  $EBDE           ; Unknown Exxx instruction
$6F8    $A67B   LD       I, $67B         ; Load 67B into I
$6FA    $5104   UNKNOWN  $5104           ; Unknown 5xxx instruction
$6FC    $4651   SNE      V6, #51         ; Skip if V6 != 81
$6FE    $B408   JP       V0, $408        ; Jump to V0 + 408
$700    $C487   RND      V4, #87         ; V4 = random & 87
$702    $0C6F   SYS      $C6F            ; System call to C6F
$704    $A642   LD       I, $642         ; Load 642 into I
$706    $178F   JP       $78F            ; Jump to 78F
$708    $E761   UNKNOWN  $E761           ; Unknown Exxx instruction
$70A    $4144   SNE      V1, #44         ; Skip if V1 != 68
$70C    $5493   UNKNOWN  $5493           ; Unknown 5xxx instruction
$70E    $DE90   DRW      VE, V9, #0      ; Draw 0-byte sprite at VE, V9
$710    $704A   ADD      V0, #4A         ; Add 74 to V0
$712    $0ED5   SYS      $ED5            ; System call to ED5
$714    $D761   DRW      V7, V6, #1      ; Draw 1-byte sprite at V7, V6
$716    $470B   SNE      V7, #0B         ; Skip if V7 != 11
$718    $86F4   ADD      V6, VF          ; V6 += VF, VF = carry
$71A    $DF8C   DRW      VF, V8, #C      ; Draw 12-byte sprite at VF, V8
$71C    $A2A6   LD       I, $2A6         ; Load 2A6 into I
$71E    $07C6   SYS      $7C6            ; System call to 7C6
$720    $2831   CALL     $831            ; Call subroutine at 831
$722    $6B47   LD       VB, #47         ; Load 71 into VB
$724    $FBCC   UNKNOWN  FBCC            ; Unknown Fxxx instruction
$726    $0198   SYS      $198            ; System call to 198
$728    $99EF   UNKNOWN  $99EF           ; Unknown 9xxx instruction
$72A    $3BCF   SE       VB, #CF         ; Skip if VB == 207
$72C    $1D55   JP       $D55            ; Jump to D55
$72E    $91E5   UNKNOWN  $91E5           ; Unknown 9xxx instruction
$730    $3E7A   SE       VE, #7A         ; Skip if VE == 122
$732    $9365   UNKNOWN  $9365           ; Unknown 9xxx instruction
$734    $5241   UNKNOWN  $5241           ; Unknown 5xxx instruction
$736    $27A9   CALL     $7A9            ; Call subroutine at 7A9
$738    $1CEF   JP       $CEF            ; Jump to CEF
$73A    $783A   ADD      V8, #3A         ; Add 58 to V8
$73C    $0497   SYS      $497            ; System call to 497
$73E    $A8D0   LD       I, $8D0         ; Load 8D0 into I
$740    $A305   LD       I, $305         ; Load 305 into I
$742    $C1A3   RND      V1, #A3         ; V1 = random & A3
$744    $F4C4   UNKNOWN  F4C4            ; Unknown Fxxx instruction
$746    $5117   UNKNOWN  $5117           ; Unknown 5xxx instruction
$748    $4E69   SNE      VE, #69         ; Skip if VE != 105
$74A    $315E   SE       V1, #5E         ; Skip if V1 == 94
$74C    $F62A   UNKNOWN  F62A            ; Unknown Fxxx instruction
$74E    $5B10   SE       VB, V1          ; Skip if VB == V1
$750    $117E   JP       $17E            ; Jump to 17E
$752    $22D2   CALL     $2D2            ; Call subroutine at 2D2
$754    $5914   UNKNOWN  $5914           ; Unknown 5xxx instruction
$756    $B321   JP       V0, $321        ; Jump to V0 + 321
$758    $B1B7   JP       V0, $1B7        ; Jump to V0 + 1B7
$75A    $0E32   SYS      $E32            ; System call to E32
$75C    $AF5D   LD       I, $F5D         ; Load F5D into I
$75E    $DBFF   DRW      VB, VF, #F      ; Draw 15-byte sprite at VB, VF
$760    $9E86   UNKNOWN  $9E86           ; Unknown 9xxx instruction
$762    $6D88   LD       VD, #88         ; Load 136 into VD
$764    $4954   SNE      V9, #54         ; Skip if V9 != 84
$766    $02D7   SYS      $2D7            ; System call to 2D7
$768    $8BA7   SUBN     VB, VA          ; VB = VA - VB, VF = !borrow
$76A    $9231   UNKNOWN  $9231           ; Unknown 9xxx instruction
$76C    $6FE4   LD       VF, #E4         ; Load 228 into VF
$76E    $88EF   UNKNOWN  88EF            ; Unknown 8xxx instruction
$770    $59D1   UNKNOWN  $59D1           ; Unknown 5xxx instruction
$772    $3E00   SE       VE, #00         ; Skip if VE == 0
$774    $8CF7   SUBN     VC, VF          ; VC = VF - VC, VF = !borrow
$776    $73A9   ADD      V3, #A9         ; Add 169 to V3
$778    $C081   RND      V0, #81         ; V0 = random & 81
$77A    $DB09   DRW      VB, V0, #9      ; Draw 9-byte sprite at VB, V0
$77C    $FFE0   UNKNOWN  FFE0            ; Unknown Fxxx instruction
$77E    $1DC0   JP       $DC0            ; Jump to DC0
$780    $29C4   CALL     $9C4            ; Call subroutine at 9C4
$782    $488E   SNE      V8, #8E         ; Skip if V8 != 142
$784    $153A   JP       $53A            ; Jump to 53A
$786    $4BF3   SNE      VB, #F3         ; Skip if VB != 243
$788    $B300   JP       V0, $300        ; Jump to V0 + 300
$78A    $1244   JP       $244            ; Jump to 244
$78C    $57D7   UNKNOWN  $57D7           ; Unknown 5xxx instruction
$78E    $BCE0   JP       V0, $CE0        ; Jump to V0 + CE0
$790    $45F0   SNE      V5, #F0         ; Skip if V5 != 240
$792    $9BFF   UNKNOWN  $9BFF           ; Unknown 9xxx instruction
$794    $8A11   OR       VA, V1          ; VA |= V1
$796    $528F   UNKNOWN  $528F           ; Unknown 5xxx instruction
$798    $8F30   LD       VF, V3          ; VF = V3
$79A    $9667   UNKNOWN  $9667           ; Unknown 9xxx instruction
$79C    $E030   UNKNOWN  $E030           ; Unknown Exxx instruction
$79E    $85F7   SUBN     V5, VF          ; V5 = VF - V5, VF = !borrow
$7A0    $D77B   DRW      V7, V7, #B      ; Draw 11-byte sprite at V7, V7
$7A2    $3AF1   SE       VA, #F1         ; Skip if VA == 241
$7A4    $D35B   DRW      V3, V5, #B      ; Draw 11-byte sprite at V3, V5
$7A6    $B638   JP       V0, $638        ; Jump to V0 + 638
$7A8    $DDD5   DRW      VD, VD, #5      ; Draw 5-byte sprite at VD, VD
$7AA    $4375   SNE      V3, #75         ; Skip if V3 != 117
$7AC    $D156   DRW      V1, V5, #6      ; Draw 6-byte sprite at V1, V5
$7AE    $43CD   SNE      V3, #CD         ; Skip if V3 != 205
$7B0    $7362   ADD      V3, #62         ; Add 98 to V3
$7B2    $5BE4   UNKNOWN  $5BE4           ; Unknown 5xxx instruction
$7B4    $B92F   JP       V0, $92F        ; Jump to V0 + 92F
$7B6    $9455   UNKNOWN  $9455           ; Unknown 9xxx instruction
$7B8    $30E4   SE       V0, #E4         ; Skip if V0 == 228
$7BA    $F019   UNKNOWN  F019            ; Unknown Fxxx instruction
$7BC    $F6DA   UNKNOWN  F6DA            ; Unknown Fxxx instruction
$7BE    $0910   SYS      $910            ; System call to 910
$7C0    $AC08   LD       I, $C08         ; Load C08 into I
$7C2    $7672   ADD      V6, #72         ; Add 114 to V6
$7C4    $0A70   SYS      $A70            ; System call to A70
$7C6    $A259   LD       I, $259         ; Load 259 into I
$7C8    $765E   ADD      V6, #5E         ; Add 94 to V6
$7CA    $F87E   UNKNOWN  F87E            ; Unknown Fxxx instruction
$7CC    $FBDD   UNKNOWN  FBDD            ; Unknown Fxxx instruction
$7CE    $33AC   SE       V3, #AC         ; Skip if V3 == 172
$7D0    $C6CD   RND      V6, #CD         ; V6 = random & CD
$7D2    $AA1D   LD       I, $A1D         ; Load A1D into I
$7D4    $3CE8   SE       VC, #E8         ; Skip if VC == 232
$7D6    $AD00   LD       I, $D00         ; Load D00 into I
$7D8    $11F3   JP       $1F3            ; Jump to 1F3
$7DA    $099F   SYS      $99F            ; System call to 99F
$7DC    $B004   JP       V0, $004        ; Jump to V0 + 004
$7DE    $AF1F   LD       I, $F1F         ; Load F1F into I
$7E0    $9345   UNKNOWN  $9345           ; Unknown 9xxx instruction
$7E2    $739D   ADD      V3, #9D         ; Add 157 to V3
$7E4    $F56E   UNKNOWN  F56E            ; Unknown Fxxx instruction
$7E6    $95DF   UNKNOWN  $95DF           ; Unknown 9xxx instruction
$7E8    $BBC1   JP       V0, $BC1        ; Jump to V0 + BC1
$7EA    $04A7   SYS      $4A7            ; System call to 4A7
$7EC    $0637   SYS      $637            ; System call to 637
$7EE    $92A5   UNKNOWN  $92A5           ; Unknown 9xxx instruction
$7F0    $7DA8   ADD      VD, #A8         ; Add 168 to VD
$7F2    $3AC8   SE       VA, #C8         ; Skip if VA == 200
$7F4    $5D33   UNKNOWN  $5D33           ; Unknown 5xxx instruction
$7F6    $D8DB   DRW      V8, VD, #B      ; Draw 11-byte sprite at V8, VD
$7F8    $BE18   JP       V0, $E18        ; Jump to V0 + E18
$7FA    $0D25   SYS      $D25            ; System call to D25
$7FC    $6415   LD       V4, #15         ; Load 21 into V4
$7FE    $D206   DRW      V2, V0, #6      ; Draw 6-byte sprite at V2, V0
$800    $4E1C   SNE      VE, #1C         ; Skip if VE != 28
$802    $992F   UNKNOWN  $992F           ; Unknown 9xxx instruction
$804    $C0DA   RND      V0, #DA         ; V0 = random & DA
$806    $1F8A   JP       $F8A            ; Jump to F8A
$808    $9C9A   UNKNOWN  $9C9A           ; Unknown 9xxx instruction
$80A    $8F5A   UNKNOWN  8F5A            ; Unknown 8xxx instruction
$80C    $301A   SE       V0, #1A         ; Skip if V0 == 26
$80E    $8C1A   UNKNOWN  8C1A            ; Unknown 8xxx instruction
$810    $CBE4   RND      VB, #E4         ; VB = random & E4
$812    $AA7B   LD       I, $A7B         ; Load A7B into I
$814    $F939   UNKNOWN  F939            ; Unknown Fxxx instruction
$816    $CB1E   RND      VB, #1E         ; VB = random & 1E
$818    $2949   CALL     $949            ; Call subroutine at 949
$81A    $9BE1   UNKNOWN  $9BE1           ; Unknown 9xxx instruction
$81C    $CB85   RND      VB, #85         ; VB = random & 85
$81E    $89D0   LD       V9, VD          ; V9 = VD
$820    $2932   CALL     $932            ; Call subroutine at 932
$822    $7D15   ADD      VD, #15         ; Add 21 to VD
$824    $27F6   CALL     $7F6            ; Call subroutine at 7F6
$826    $871D   UNKNOWN  871D            ; Unknown 8xxx instruction
$828    $D4C4   DRW      V4, VC, #4      ; Draw 4-byte sprite at V4, VC
$82A    $417C   SNE      V1, #7C         ; Skip if V1 != 124
$82C    $FBA6   UNKNOWN  FBA6            ; Unknown Fxxx instruction
$82E    $8C7E   SHL      VC              ; VC <<= 1, VF = MSB
$830    $5CB6   UNKNOWN  $5CB6           ; Unknown 5xxx instruction
$832    $F9EE   UNKNOWN  F9EE            ; Unknown Fxxx instruction
$834    $BF25   JP       V0, $F25        ; Jump to V0 + F25
$836    $72E0   ADD      V2, #E0         ; Add 224 to V2
$838    $2CC3   CALL     $CC3            ; Call subroutine at CC3
$83A    $9E6E   UNKNOWN  $9E6E           ; Unknown 9xxx instruction
$83C    $FC3F   UNKNOWN  FC3F            ; Unknown Fxxx instruction
$83E    $0C85   SYS      $C85            ; System call to C85
$840    $C8B6   RND      V8, #B6         ; V8 = random & B6
$842    $20F3   CALL     $0F3            ; Call subroutine at 0F3
$844    $FACC   UNKNOWN  FACC            ; Unknown Fxxx instruction
$846    $1663   JP       $663            ; Jump to 663
$848    $87E8   UNKNOWN  87E8            ; Unknown 8xxx instruction
$84A    $C8A8   RND      V8, #A8         ; V8 = random & A8
$84C    $C029   RND      V0, #29         ; V0 = random & 29
$84E    $85F0   LD       V5, VF          ; V5 = VF
$850    $B72F   JP       V0, $72F        ; Jump to V0 + 72F
$852    $83D6   SHR      V3              ; V3 >>= 1, VF = LSB
$854    $D4BA   DRW      V4, VB, #A      ; Draw 10-byte sprite at V4, VB
$856    $40E3   SNE      V0, #E3         ; Skip if V0 != 227
$858    $DBC0   DRW      VB, VC, #0      ; Draw 0-byte sprite at VB, VC
$85A    $E9EE   UNKNOWN  $E9EE           ; Unknown Exxx instruction
$85C    $B346   JP       V0, $346        ; Jump to V0 + 346
$85E    $20F9   CALL     $0F9            ; Call subroutine at 0F9
$860    $D0C3   DRW      V0, VC, #3      ; Draw 3-byte sprite at V0, VC
$862    $DE52   DRW      VE, V5, #2      ; Draw 2-byte sprite at VE, V5
$864    $9717   UNKNOWN  $9717           ; Unknown 9xxx instruction
$866    $0584   SYS      $584            ; System call to 584
$868    $E472   UNKNOWN  $E472           ; Unknown Exxx instruction
$86A    $8B94   ADD      VB, V9          ; VB += V9, VF = carry
$86C    $BC8B   JP       V0, $C8B        ; Jump to V0 + C8B
$86E    $EC93   UNKNOWN  $EC93           ; Unknown Exxx instruction
$870    $5735   UNKNOWN  $5735           ; Unknown 5xxx instruction
$872    $EF2F   UNKNOWN  $EF2F           ; Unknown Exxx instruction
$874    $6D39   LD       VD, #39         ; Load 57 into VD
$876    $2B95   CALL     $B95            ; Call subroutine at B95
$878    $BD48   JP       V0, $D48        ; Jump to V0 + D48
$87A    $EEDB   UNKNOWN  $EEDB           ; Unknown Exxx instruction
$87C    $0D2D   SYS      $D2D            ; System call to D2D
$87E    $4E3C   SNE      VE, #3C         ; Skip if VE != 60
$880    $6C09   LD       VC, #09         ; Load 9 into VC
$882    $4D1E   SNE      VD, #1E         ; Skip if VD != 30
$884    $916D   UNKNOWN  $916D           ; Unknown 9xxx instruction
$886    $69EC   LD       V9, #EC         ; Load 236 into V9
$888    $2CA2   CALL     $CA2            ; Call subroutine at CA2
$88A    $6334   LD       V3, #34         ; Load 52 into V3
$88C    $D72A   DRW      V7, V2, #A      ; Draw 10-byte sprite at V7, V2
$88E    $B833   JP       V0, $833        ; Jump to V0 + 833
$890    $D08D   DRW      V0, V8, #D      ; Draw 13-byte sprite at V0, V8
$892    $A857   LD       I, $857         ; Load 857 into I
$894    $0F82   SYS      $F82            ; System call to F82
$896    $D0F6   DRW      V0, VF, #6      ; Draw 6-byte sprite at V0, VF
$898    $B691   JP       V0, $691        ; Jump to V0 + 691
$89A    $69B4   LD       V9, #B4         ; Load 180 into V9
$89C    $2AC1   CALL     $AC1            ; Call subroutine at AC1
$89E    $7E67   ADD      VE, #67         ; Add 103 to VE
$8A0    $D1E5   DRW      V1, VE, #5      ; Draw 5-byte sprite at V1, VE
$8A2    $374A   SE       V7, #4A         ; Skip if V7 == 74
$8A4    $C3FF   RND      V3, #FF         ; V3 = random & FF
$8A6    $D921   DRW      V9, V2, #1      ; Draw 1-byte sprite at V9, V2
$8A8    $4357   SNE      V3, #57         ; Skip if V3 != 87
$8AA    $C911   RND      V9, #11         ; V9 = random & 11
$8AC    $FE36   UNKNOWN  FE36            ; Unknown Fxxx instruction
$8AE    $E80D   UNKNOWN  $E80D           ; Unknown Exxx instruction
$8B0    $89DE   SHL      V9              ; V9 <<= 1, VF = MSB
$8B2    $0B11   SYS      $B11            ; System call to B11
$8B4    $1956   JP       $956            ; Jump to 956
$8B6    $5D22   UNKNOWN  $5D22           ; Unknown 5xxx instruction
$8B8    $4575   SNE      V5, #75         ; Skip if V5 != 117
$8BA    $130B   JP       $30B            ; Jump to 30B
$8BC    $EF5A   UNKNOWN  $EF5A           ; Unknown Exxx instruction
$8BE    $8FE2   AND      VF, VE          ; VF &= VE
$8C0    $8232   AND      V2, V3          ; V2 &= V3
$8C2    $1CB9   JP       $CB9            ; Jump to CB9
$8C4    $1865   JP       $865            ; Jump to 865
$8C6    $0708   SYS      $708            ; System call to 708
$8C8    $F524   UNKNOWN  F524            ; Unknown Fxxx instruction
$8CA    $3793   SE       V7, #93         ; Skip if V7 == 147
$8CC    $4FEA   SNE      VF, #EA         ; Skip if VF != 234
$8CE    $3D2D   SE       VD, #2D         ; Skip if VD == 45
$8D0    $D697   DRW      V6, V9, #7      ; Draw 7-byte sprite at V6, V9
$8D2    $9D18   UNKNOWN  $9D18           ; Unknown 9xxx instruction
$8D4    $5413   UNKNOWN  $5413           ; Unknown 5xxx instruction
$8D6    $E15B   UNKNOWN  $E15B           ; Unknown Exxx instruction
$8D8    $5E40   SE       VE, V4          ; Skip if VE == V4
$8DA    $67CA   LD       V7, #CA         ; Load 202 into V7
$8DC    $A0A7   LD       I, $0A7         ; Load 0A7 into I
$8DE    $698D   LD       V9, #8D         ; Load 141 into V9
$8E0    $E7A2   UNKNOWN  $E7A2           ; Unknown Exxx instruction
$8E2    $869B   UNKNOWN  869B            ; Unknown 8xxx instruction
$8E4    $DED4   DRW      VE, VD, #4      ; Draw 4-byte sprite at VE, VD
$8E6    $E200   UNKNOWN  $E200           ; Unknown Exxx instruction
$8E8    $D118   DRW      V1, V1, #8      ; Draw 8-byte sprite at V1, V1
$8EA    $7531   ADD      V5, #31         ; Add 49 to V5
$8EC    $D97C   DRW      V9, V7, #C      ; Draw 12-byte sprite at V9, V7
$8EE    $2888   CALL     $888            ; Call subroutine at 888
$8F0    $36DB   SE       V6, #DB         ; Skip if V6 == 219
$8F2    $A762   LD       I, $762         ; Load 762 into I
$8F4    $9020   SNE      V0, V2          ; Skip if V0 != V2
$8F6    $720E   ADD      V2, #0E         ; Add 14 to V2
$8F8    $9D31   UNKNOWN  $9D31           ; Unknown 9xxx instruction
$8FA    $8888   UNKNOWN  8888            ; Unknown 8xxx instruction
$8FC    $5595   UNKNOWN  $5595           ; Unknown 5xxx instruction
$8FE    $FF07   LD       VF, DT          ; VF = delay timer
$900    $B421   JP       V0, $421        ; Jump to V0 + 421
$902    $3CDA   SE       VC, #DA         ; Skip if VC == 218
$904    $3CC9   SE       VC, #C9         ; Skip if VC == 201
$906    $75AC   ADD      V5, #AC         ; Add 172 to V5
$908    $739E   ADD      V3, #9E         ; Add 158 to V3
$90A    $E855   UNKNOWN  $E855           ; Unknown Exxx instruction
$90C    $A29F   LD       I, $29F         ; Load 29F into I
$90E    $9E54   UNKNOWN  $9E54           ; Unknown 9xxx instruction
$910    $A00B   LD       I, $00B         ; Load 00B into I
$912    $CE8F   RND      VE, #8F         ; VE = random & 8F
$914    $5605   UNKNOWN  $5605           ; Unknown 5xxx instruction
$916    $24C7   CALL     $4C7            ; Call subroutine at 4C7
$918    $1732   JP       $732            ; Jump to 732
$91A    $1C21   JP       $C21            ; Jump to C21
$91C    $EA69   UNKNOWN  $EA69           ; Unknown Exxx instruction
$91E    $C359   RND      V3, #59         ; V3 = random & 59
$920    $D9E5   DRW      V9, VE, #5      ; Draw 5-byte sprite at V9, VE
$922    $1A0D   JP       $A0D            ; Jump to A0D
$924    $EC19   UNKNOWN  $EC19           ; Unknown Exxx instruction
$926    $2273   CALL     $273            ; Call subroutine at 273
$928    $C173   RND      V1, #73         ; V1 = random & 73
$92A    $A722   LD       I, $722         ; Load 722 into I
$92C    $C627   RND      V6, #27         ; V6 = random & 27
$92E    $DDDA   DRW      VD, VD, #A      ; Draw 10-byte sprite at VD, VD
$930    $EC3B   UNKNOWN  $EC3B           ; Unknown Exxx instruction
$932    $6320   LD       V3, #20         ; Load 32 into V3
$934    $9F83   UNKNOWN  $9F83           ; Unknown 9xxx instruction
$936    $4679   SNE      V6, #79         ; Skip if V6 != 121
$938    $B11B   JP       V0, $11B        ; Jump to V0 + 11B
$93A    $0ABE   SYS      $ABE            ; System call to ABE
$93C    $81E4   ADD      V1, VE          ; V1 += VE, VF = carry
$93E    $ACDB   LD       I, $CDB         ; Load CDB into I
$940    $8D16   SHR      VD              ; VD >>= 1, VF = LSB
$942    $B7E5   JP       V0, $7E5        ; Jump to V0 + 7E5
$944    $1ED5   JP       $ED5            ; Jump to ED5
$946    $0F14   SYS      $F14            ; System call to F14
$948    $9AE8   UNKNOWN  $9AE8           ; Unknown 9xxx instruction
$94A    $5078   UNKNOWN  $5078           ; Unknown 5xxx instruction
$94C    $B395   JP       V0, $395        ; Jump to V0 + 395
$94E    $3F3C   SE       VF, #3C         ; Skip if VF == 60
$950    $47CE   SNE      V7, #CE         ; Skip if V7 != 206
$952    $87F7   SUBN     V7, VF          ; V7 = VF - V7, VF = !borrow
$954    $F914   UNKNOWN  F914            ; Unknown Fxxx instruction
$956    $003B   SYS      $03B            ; System call to 03B
$958    $49CD   SNE      V9, #CD         ; Skip if V9 != 205
$95A    $F506   UNKNOWN  F506            ; Unknown Fxxx instruction
$95C    $6630   LD       V6, #30         ; Load 48 into V6
$95E    $7C6B   ADD      VC, #6B         ; Add 107 to VC
$960    $E94C   UNKNOWN  $E94C           ; Unknown Exxx instruction
$962    $41C2   SNE      V1, #C2         ; Skip if V1 != 194
$964    $3D7E   SE       VD, #7E         ; Skip if VD == 126
$966    $A3F2   LD       I, $3F2         ; Load 3F2 into I
$968    $811A   UNKNOWN  811A            ; Unknown 8xxx instruction
$96A    $DD19   DRW      VD, V1, #9      ; Draw 9-byte sprite at VD, V1
$96C    $A506   LD       I, $506         ; Load 506 into I
$96E    $9367   UNKNOWN  $9367           ; Unknown 9xxx instruction
$970    $E00C   UNKNOWN  $E00C           ; Unknown Exxx instruction
$972    $65B0   LD       V5, #B0         ; Load 176 into V5
$974    $4BC5   SNE      VB, #C5         ; Skip if VB != 197
$976    $F4D2   UNKNOWN  F4D2            ; Unknown Fxxx instruction
$978    $6761   LD       V7, #61         ; Load 97 into V7
$97A    $C0BE   RND      V0, #BE         ; V0 = random & BE
$97C    $5E11   UNKNOWN  $5E11           ; Unknown 5xxx instruction
$97E    $7F93   ADD      VF, #93         ; Add 147 to VF
$980    $B99F   JP       V0, $99F        ; Jump to V0 + 99F
$982    $AC34   LD       I, $C34         ; Load C34 into I
$984    $2807   CALL     $807            ; Call subroutine at 807
$986    $48E5   SNE      V8, #E5         ; Skip if V8 != 229
$988    $27EF   CALL     $7EF            ; Call subroutine at 7EF
$98A    $15BA   JP       $5BA            ; Jump to 5BA
$98C    $BAE7   JP       V0, $AE7        ; Jump to V0 + AE7
$98E    $9DCC   UNKNOWN  $9DCC           ; Unknown 9xxx instruction
$990    $FA87   UNKNOWN  FA87            ; Unknown Fxxx instruction
$992    $A8EC   LD       I, $8EC         ; Load 8EC into I
$994    $8848   UNKNOWN  8848            ; Unknown 8xxx instruction
$996    $73C8   ADD      V3, #C8         ; Add 200 to V3
$998    $21BA   CALL     $1BA            ; Call subroutine at 1BA
$99A    $F279   UNKNOWN  F279            ; Unknown Fxxx instruction
$99C    $5E16   UNKNOWN  $5E16           ; Unknown 5xxx instruction
$99E    $AD9C   LD       I, $D9C         ; Load D9C into I
$9A0    $F7A0   UNKNOWN  F7A0            ; Unknown Fxxx instruction
$9A2    $05A2   SYS      $5A2            ; System call to 5A2
$9A4    $EFB7   UNKNOWN  $EFB7           ; Unknown Exxx instruction
$9A6    $25A2   CALL     $5A2            ; Call subroutine at 5A2
$9A8    $FF8A   UNKNOWN  FF8A            ; Unknown Fxxx instruction
$9AA    $244F   CALL     $44F            ; Call subroutine at 44F
$9AC    $DB32   DRW      VB, V3, #2      ; Draw 2-byte sprite at VB, V3
$9AE    $E8EB   UNKNOWN  $E8EB           ; Unknown Exxx instruction
$9B0    $A9FE   LD       I, $9FE         ; Load 9FE into I
$9B2    $04AA   SYS      $4AA            ; System call to 4AA
$9B4    $8E04   ADD      VE, V0          ; VE += V0, VF = carry
$9B6    $8202   AND      V2, V0          ; V2 &= V0
$9B8    $2868   CALL     $868            ; Call subroutine at 868
$9BA    $F71E   ADD      I, V7           ; I += V7
$9BC    $904C   UNKNOWN  $904C           ; Unknown 9xxx instruction
$9BE    $A4ED   LD       I, $4ED         ; Load 4ED into I
$9C0    $E318   UNKNOWN  $E318           ; Unknown Exxx instruction
$9C2    $5A22   UNKNOWN  $5A22           ; Unknown 5xxx instruction
$9C4    $2F65   CALL     $F65            ; Call subroutine at F65
$9C6    $6D03   LD       VD, #03         ; Load 3 into VD
$9C8    $D44A   DRW      V4, V4, #A      ; Draw 10-byte sprite at V4, V4
$9CA    $87E8   UNKNOWN  87E8            ; Unknown 8xxx instruction
$9CC    $7950   ADD      V9, #50         ; Add 80 to V9
$9CE    $A6A4   LD       I, $6A4         ; Load 6A4 into I
$9D0    $F595   UNKNOWN  F595            ; Unknown Fxxx instruction
$9D2    $16C4   JP       $6C4            ; Jump to 6C4
$9D4    $7B68   ADD      VB, #68         ; Add 104 to VB
$9D6    $CA36   RND      VA, #36         ; VA = random & 36
$9D8    $9140   SNE      V1, V4          ; Skip if V1 != V4
$9DA    $5AC3   UNKNOWN  $5AC3           ; Unknown 5xxx instruction
$9DC    $055C   SYS      $55C            ; System call to 55C
$9DE    $D20E   DRW      V2, V0, #E      ; Draw 14-byte sprite at V2, V0
$9E0    $45DC   SNE      V5, #DC         ; Skip if V5 != 220
$9E2    $4BD1   SNE      VB, #D1         ; Skip if VB != 209
$9E4    $219A   CALL     $19A            ; Call subroutine at 19A
$9E6    $0FB5   SYS      $FB5            ; System call to FB5
$9E8    $EFE8   UNKNOWN  $EFE8           ; Unknown Exxx instruction
$9EA    $FE88   UNKNOWN  FE88            ; Unknown Fxxx instruction
$9EC    $E2B9   UNKNOWN  $E2B9           ; Unknown Exxx instruction
$9EE    $4B5B   SNE      VB, #5B         ; Skip if VB != 91
$9F0    $E9B4   UNKNOWN  $E9B4           ; Unknown Exxx instruction
$9F2    $D1CC   DRW      V1, VC, #C      ; Draw 12-byte sprite at V1, VC
$9F4    $06A6   SYS      $6A6            ; System call to 6A6
$9F6    $8207   SUBN     V2, V0          ; V2 = V0 - V2, VF = !borrow
$9F8    $7634   ADD      V6, #34         ; Add 52 to V6
$9FA    $3ECB   SE       VE, #CB         ; Skip if VE == 203
$9FC    $285E   CALL     $85E            ; Call subroutine at 85E
$9FE    $EFB5   UNKNOWN  $EFB5           ; Unknown Exxx instruction
$A00    $6F4B   LD       VF, #4B         ; Load 75 into VF
$A02    $F53E   UNKNOWN  F53E            ; Unknown Fxxx instruction
$A04    $93A7   UNKNOWN  $93A7           ; Unknown 9xxx instruction
$A06    $4901   SNE      V9, #01         ; Skip if V9 != 1
$A08    $B72F   JP       V0, $72F        ; Jump to V0 + 72F
$A0A    $F156   UNKNOWN  F156            ; Unknown Fxxx instruction
$A0C    $19A5   JP       $9A5            ; Jump to 9A5
$A0E    $DB09   DRW      VB, V0, #9      ; Draw 9-byte sprite at VB, V0
$A10    $7E39   ADD      VE, #39         ; Add 57 to VE
$A12    $719A   ADD      V1, #9A         ; Add 154 to V1
$A14    $4044   SNE      V0, #44         ; Skip if V0 != 68
$A16    $D8B5   DRW      V8, VB, #5      ; Draw 5-byte sprite at V8, VB
$A18    $1E72   JP       $E72            ; Jump to E72
$A1A    $ECFA   UNKNOWN  $ECFA           ; Unknown Exxx instruction
$A1C    $6FF7   LD       VF, #F7         ; Load 247 into VF
$A1E    $99C8   UNKNOWN  $99C8           ; Unknown 9xxx instruction
$A20    $24D8   CALL     $4D8            ; Call subroutine at 4D8
$A22    $5D27   UNKNOWN  $5D27           ; Unknown 5xxx instruction
$A24    $4811   SNE      V8, #11         ; Skip if V8 != 17
$A26    $37C4   SE       V7, #C4         ; Skip if V7 == 196
$A28    $BFE7   JP       V0, $FE7        ; Jump to V0 + FE7
$A2A    $A801   LD       I, $801         ; Load 801 into I
$A2C    $AC86   LD       I, $C86         ; Load C86 into I
$A2E    $0E0D   SYS      $E0D            ; System call to E0D
$A30    $2B3A   CALL     $B3A            ; Call subroutine at B3A
$A32    $1B23   JP       $B23            ; Jump to B23
$A34    $5121   UNKNOWN  $5121           ; Unknown 5xxx instruction
$A36    $DB89   DRW      VB, V8, #9      ; Draw 9-byte sprite at VB, V8
$A38    $48A9   SNE      V8, #A9         ; Skip if V8 != 169
$A3A    $D7F5   DRW      V7, VF, #5      ; Draw 5-byte sprite at V7, VF
$A3C    $F0B0   UNKNOWN  F0B0            ; Unknown Fxxx instruction
$A3E    $8385   SUB      V3, V8          ; V3 -= V8, VF = !borrow
$A40    $655B   LD       V5, #5B         ; Load 91 into V5
$A42    $0DF5   SYS      $DF5            ; System call to DF5
$A44    $C828   RND      V8, #28         ; V8 = random & 28
$A46    $23E9   CALL     $3E9            ; Call subroutine at 3E9
$A48    $C3CA   RND      V3, #CA         ; V3 = random & CA
$A4A    $6AC3   LD       VA, #C3         ; Load 195 into VA
$A4C    $867A   UNKNOWN  867A            ; Unknown 8xxx instruction
$A4E    $AC09   LD       I, $C09         ; Load C09 into I
$A50    $DB92   DRW      VB, V9, #2      ; Draw 2-byte sprite at VB, V9
$A52    $631A   LD       V3, #1A         ; Load 26 into V3
$A54    $E5E0   UNKNOWN  $E5E0           ; Unknown Exxx instruction
$A56    $A2A1   LD       I, $2A1         ; Load 2A1 into I
$A58    $8C72   AND      VC, V7          ; VC &= V7
$A5A    $148A   JP       $48A            ; Jump to 48A
$A5C    $226A   CALL     $26A            ; Call subroutine at 26A
$A5E    $6499   LD       V4, #99         ; Load 153 into V4
$A60    $85EE   SHL      V5              ; V5 <<= 1, VF = MSB
$A62    $CB5D   RND      VB, #5D         ; VB = random & 5D
$A64    $F095   UNKNOWN  F095            ; Unknown Fxxx instruction
$A66    $E778   UNKNOWN  $E778           ; Unknown Exxx instruction
$A68    $9A47   UNKNOWN  $9A47           ; Unknown 9xxx instruction
$A6A    $6B5A   LD       VB, #5A         ; Load 90 into VB
$A6C    $CB70   RND      VB, #70         ; VB = random & 70
$A6E    $651F   LD       V5, #1F         ; Load 31 into V5
$A70    $A289   LD       I, $289         ; Load 289 into I
$A72    $B69A   JP       V0, $69A        ; Jump to V0 + 69A
$A74    $7600   ADD      V6, #00         ; Add 0 to V6
$A76    $032E   SYS      $32E            ; System call to 32E
$A78    $B05B   JP       V0, $05B        ; Jump to V0 + 05B
$A7A    $A742   LD       I, $742         ; Load 742 into I
$A7C    $87DF   UNKNOWN  87DF            ; Unknown 8xxx instruction
$A7E    $9FDC   UNKNOWN  $9FDC           ; Unknown 9xxx instruction
$A80    $E325   UNKNOWN  $E325           ; Unknown Exxx instruction
$A82    $0D18   SYS      $D18            ; System call to D18
$A84    $8BC6   SHR      VB              ; VB >>= 1, VF = LSB
$A86    $C712   RND      V7, #12         ; V7 = random & 12
$A88    $06E0   SYS      $6E0            ; System call to 6E0
$A8A    $9A14   UNKNOWN  $9A14           ; Unknown 9xxx instruction
$A8C    $7B28   ADD      VB, #28         ; Add 40 to VB
$A8E    $C188   RND      V1, #88         ; V1 = random & 88
$A90    $4746   SNE      V7, #46         ; Skip if V7 != 70
$A92    $02A0   SYS      $2A0            ; System call to 2A0
$A94    $504B   UNKNOWN  $504B           ; Unknown 5xxx instruction
$A96    $579F   UNKNOWN  $579F           ; Unknown 5xxx instruction
$A98    $6B69   LD       VB, #69         ; Load 105 into VB
$A9A    $CCCE   RND      VC, #CE         ; VC = random & CE
$A9C    $F0DB   UNKNOWN  F0DB            ; Unknown Fxxx instruction
$A9E    $E680   UNKNOWN  $E680           ; Unknown Exxx instruction
$AA0    $B28F   JP       V0, $28F        ; Jump to V0 + 28F
$AA2    $FE7F   UNKNOWN  FE7F            ; Unknown Fxxx instruction
$AA4    $5548   UNKNOWN  $5548           ; Unknown 5xxx instruction
$AA6    $F48C   UNKNOWN  F48C            ; Unknown Fxxx instruction
$AA8    $8A2B   UNKNOWN  8A2B            ; Unknown 8xxx instruction
$AAA    $6438   LD       V4, #38         ; Load 56 into V4
$AAC    $8488   UNKNOWN  8488            ; Unknown 8xxx instruction
$AAE    $3BDB   SE       VB, #DB         ; Skip if VB == 219
$AB0    $3ADA   SE       VA, #DA         ; Skip if VA == 218
$AB2    $F31C   UNKNOWN  F31C            ; Unknown Fxxx instruction
$AB4    $5CED   UNKNOWN  $5CED           ; Unknown 5xxx instruction
$AB6    $6408   LD       V4, #08         ; Load 8 into V4
$AB8    $0014   SYS      $014            ; System call to 014
$ABA    $3BBA   SE       VB, #BA         ; Skip if VB == 186
$ABC    $6EE4   LD       VE, #E4         ; Load 228 into VE
$ABE    $C97A   RND      V9, #7A         ; V9 = random & 7A
$AC0    $E851   UNKNOWN  $E851           ; Unknown Exxx instruction
$AC2    $ABD1   LD       I, $BD1         ; Load BD1 into I
$AC4    $94DF   UNKNOWN  $94DF           ; Unknown 9xxx instruction
$AC6    $0479   SYS      $479            ; System call to 479
$AC8    $B6E7   JP       V0, $6E7        ; Jump to V0 + 6E7
$ACA    $15F1   JP       $5F1            ; Jump to 5F1
$ACC    $D429   DRW      V4, V2, #9      ; Draw 9-byte sprite at V4, V2
$ACE    $08FF   SYS      $8FF            ; System call to 8FF
$AD0    $650C   LD       V5, #0C         ; Load 12 into V5
$AD2    $8FA9   UNKNOWN  8FA9            ; Unknown 8xxx instruction
$AD4    $43E0   SNE      V3, #E0         ; Skip if V3 != 224
$AD6    $4D53   SNE      VD, #53         ; Skip if VD != 83
$AD8    $92F3   UNKNOWN  $92F3           ; Unknown 9xxx instruction
$ADA    $3100   SE       V1, #00         ; Skip if V1 == 0
$ADC    $9A25   UNKNOWN  $9A25           ; Unknown 9xxx instruction
$ADE    $D956   DRW      V9, V5, #6      ; Draw 6-byte sprite at V9, V5
$AE0    $2B1F   CALL     $B1F            ; Call subroutine at B1F
$AE2    $2B4A   CALL     $B4A            ; Call subroutine at B4A
$AE4    $F05E   UNKNOWN  F05E            ; Unknown Fxxx instruction
$AE6    $B3E9   JP       V0, $3E9        ; Jump to V0 + 3E9
$AE8    $7D6D   ADD      VD, #6D         ; Add 109 to VD
$AEA    $047E   SYS      $47E            ; System call to 47E
$AEC    $65ED   LD       V5, #ED         ; Load 237 into V5
$AEE    $688B   LD       V8, #8B         ; Load 139 into V8
$AF0    $57C2   UNKNOWN  $57C2           ; Unknown 5xxx instruction
$AF2    $DB77   DRW      VB, V7, #7      ; Draw 7-byte sprite at VB, V7
$AF4    $E99D   UNKNOWN  $E99D           ; Unknown Exxx instruction
$AF6    $D814   DRW      V8, V1, #4      ; Draw 4-byte sprite at V8, V1
$AF8    $38DB   SE       V8, #DB         ; Skip if V8 == 219
$AFA    $D902   DRW      V9, V0, #2      ; Draw 2-byte sprite at V9, V0
$AFC    $CA96   RND      VA, #96         ; VA = random & 96
$AFE    $616F   LD       V1, #6F         ; Load 111 into V1
$B00    $20BC   CALL     $0BC            ; Call subroutine at 0BC
$B02    $4F0F   SNE      VF, #0F         ; Skip if VF != 15
$B04    $A2B8   LD       I, $2B8         ; Load 2B8 into I
$B06    $FA24   UNKNOWN  FA24            ; Unknown Fxxx instruction
$B08    $5733   UNKNOWN  $5733           ; Unknown 5xxx instruction
$B0A    $4C33   SNE      VC, #33         ; Skip if VC != 51
$B0C    $0A23   SYS      $A23            ; System call to A23
$B0E    $9BA8   UNKNOWN  $9BA8           ; Unknown 9xxx instruction
$B10    $7E82   ADD      VE, #82         ; Add 130 to VE
$B12    $C8B5   RND      V8, #B5         ; V8 = random & B5
$B14    $8791   OR       V7, V9          ; V7 |= V9
$B16    $1B45   JP       $B45            ; Jump to B45
$B18    $74D0   ADD      V4, #D0         ; Add 208 to V4
$B1A    $E9CD   UNKNOWN  $E9CD           ; Unknown Exxx instruction
$B1C    $1C34   JP       $C34            ; Jump to C34
$B1E    $875B   UNKNOWN  875B            ; Unknown 8xxx instruction
$B20    $DB70   DRW      VB, V7, #0      ; Draw 0-byte sprite at VB, V7
$B22    $8739   UNKNOWN  8739            ; Unknown 8xxx instruction
$B24    $C92A   RND      V9, #2A         ; V9 = random & 2A
$B26    $0062   SYS      $062            ; System call to 062
$B28    $265D   CALL     $65D            ; Call subroutine at 65D
$B2A    $57A9   UNKNOWN  $57A9           ; Unknown 5xxx instruction
$B2C    $33B1   SE       V3, #B1         ; Skip if V3 == 177
$B2E    $47C3   SNE      V7, #C3         ; Skip if V7 != 195
$B30    $C785   RND      V7, #85         ; V7 = random & 85
$B32    $3190   SE       V1, #90         ; Skip if V1 == 144
$B34    $7275   ADD      V2, #75         ; Add 117 to V2
$B36    $1C5B   JP       $C5B            ; Jump to C5B
$B38    $4285   SNE      V2, #85         ; Skip if V2 != 133
$B3A    $34AB   SE       V4, #AB         ; Skip if V4 == 171
$B3C    $40ED   SNE      V0, #ED         ; Skip if V0 != 237
$B3E    $6F81   LD       VF, #81         ; Load 129 into VF
$B40    $ABC2   LD       I, $BC2         ; Load BC2 into I
$B42    $98AA   UNKNOWN  $98AA           ; Unknown 9xxx instruction
$B44    $DB00   DRW      VB, V0, #0      ; Draw 0-byte sprite at VB, V0
$B46    $FE58   UNKNOWN  FE58            ; Unknown Fxxx instruction
$B48    $A57F   LD       I, $57F         ; Load 57F into I
$B4A    $F6CE   UNKNOWN  F6CE            ; Unknown Fxxx instruction
$B4C    $8174   ADD      V1, V7          ; V1 += V7, VF = carry
$B4E    $6494   LD       V4, #94         ; Load 148 into V4
$B50    $0A51   SYS      $A51            ; System call to A51
$B52    $05FC   SYS      $5FC            ; System call to 5FC
$B54    $76DC   ADD      V6, #DC         ; Add 220 to V6
$B56    $769B   ADD      V6, #9B         ; Add 155 to V6
$B58    $4AAA   SNE      VA, #AA         ; Skip if VA != 170
$B5A    $645D   LD       V4, #5D         ; Load 93 into V4
$B5C    $2664   CALL     $664            ; Call subroutine at 664
$B5E    $1182   JP       $182            ; Jump to 182
$B60    $32CA   SE       V2, #CA         ; Skip if V2 == 202
$B62    $5F26   UNKNOWN  $5F26           ; Unknown 5xxx instruction
$B64    $06F2   SYS      $6F2            ; System call to 6F2
$B66    $917A   UNKNOWN  $917A           ; Unknown 9xxx instruction
$B68    $43BC   SNE      V3, #BC         ; Skip if V3 != 188
$B6A    $6AA2   LD       VA, #A2         ; Load 162 into VA
$B6C    $F12F   UNKNOWN  F12F            ; Unknown Fxxx instruction
$B6E    $C8F1   RND      V8, #F1         ; V8 = random & F1
$B70    $9D8D   UNKNOWN  $9D8D           ; Unknown 9xxx instruction
$B72    $8277   SUBN     V2, V7          ; V2 = V7 - V2, VF = !borrow
$B74    $BBD5   JP       V0, $BD5        ; Jump to V0 + BD5
$B76    $8D8C   UNKNOWN  8D8C            ; Unknown 8xxx instruction
$B78    $8A35   SUB      VA, V3          ; VA -= V3, VF = !borrow
$B7A    $C658   RND      V6, #58         ; V6 = random & 58
$B7C    $F033   LD       B, V0           ; Store BCD of V0 at I, I+1, I+2
$B7E    $8AC9   UNKNOWN  8AC9            ; Unknown 8xxx instruction
$B80    $7741   ADD      V7, #41         ; Add 65 to V7
$B82    $1ADC   JP       $ADC            ; Jump to ADC
$B84    $D89B   DRW      V8, V9, #B      ; Draw 11-byte sprite at V8, V9
$B86    $82AA   UNKNOWN  82AA            ; Unknown 8xxx instruction
$B88    $E39D   UNKNOWN  $E39D           ; Unknown Exxx instruction
$B8A    $3F09   SE       VF, #09         ; Skip if VF == 9
$B8C    $7541   ADD      V5, #41         ; Add 65 to V5
$B8E    $4D21   SNE      VD, #21         ; Skip if VD != 33
$B90    $B9B6   JP       V0, $9B6        ; Jump to V0 + 9B6
$B92    $BDF7   JP       V0, $DF7        ; Jump to V0 + DF7
$B94    $2970   CALL     $970            ; Call subroutine at 970
$B96    $70A1   ADD      V0, #A1         ; Add 161 to V0
$B98    $0C8C   SYS      $C8C            ; System call to C8C
$B9A    $E966   UNKNOWN  $E966           ; Unknown Exxx instruction
$B9C    $E303   UNKNOWN  $E303           ; Unknown Exxx instruction
$B9E    $1810   JP       $810            ; Jump to 810
$BA0    $1C05   JP       $C05            ; Jump to C05
$BA2    $4D0D   SNE      VD, #0D         ; Skip if VD != 13
$BA4    $1076   JP       $076            ; Jump to 076
$BA6    $523C   UNKNOWN  $523C           ; Unknown 5xxx instruction
$BA8    $391F   SE       V9, #1F         ; Skip if V9 == 31
$BAA    $CB95   RND      VB, #95         ; VB = random & 95
$BAC    $406D   SNE      V0, #6D         ; Skip if V0 != 109
$BAE    $33BE   SE       V3, #BE         ; Skip if V3 == 190
$BB0    $AD7D   LD       I, $D7D         ; Load D7D into I
$BB2    $3CCF   SE       VC, #CF         ; Skip if VC == 207
$BB4    $8B4D   UNKNOWN  8B4D            ; Unknown 8xxx instruction
$BB6    $1590   JP       $590            ; Jump to 590
$BB8    $1237   JP       $237            ; Jump to 237
$BBA    $AD4E   LD       I, $D4E         ; Load D4E into I
$BBC    $7217   ADD      V2, #17         ; Add 23 to V2
$BBE    $F19B   UNKNOWN  F19B            ; Unknown Fxxx instruction
$BC0    $EF86   UNKNOWN  $EF86           ; Unknown Exxx instruction
$BC2    $BE42   JP       V0, $E42        ; Jump to V0 + E42
$BC4    $A1CB   LD       I, $1CB         ; Load 1CB into I
$BC6    $68A0   LD       V8, #A0         ; Load 160 into V8
$BC8    $723D   ADD      V2, #3D         ; Add 61 to V2
$BCA    $C029   RND      V0, #29         ; V0 = random & 29
$BCC    $0FD6   SYS      $FD6            ; System call to FD6
$BCE    $6E37   LD       VE, #37         ; Load 55 into VE
$BD0    $F791   UNKNOWN  F791            ; Unknown Fxxx instruction
$BD2    $F209   UNKNOWN  F209            ; Unknown Fxxx instruction
$BD4    $4F5F   SNE      VF, #5F         ; Skip if VF != 95
$BD6    $9742   UNKNOWN  $9742           ; Unknown 9xxx instruction
$BD8    $334B   SE       V3, #4B         ; Skip if V3 == 75
$BDA    $C813   RND      V8, #13         ; V8 = random & 13
$BDC    $037C   SYS      $37C            ; System call to 37C
$BDE    $EC55   UNKNOWN  $EC55           ; Unknown Exxx instruction
$BE0    $81EF   UNKNOWN  81EF            ; Unknown 8xxx instruction
$BE2    $0ADD   SYS      $ADD            ; System call to ADD
$BE4    $13B2   JP       $3B2            ; Jump to 3B2
$BE6    $654B   LD       V5, #4B         ; Load 75 into V5
$BE8    $0B2A   SYS      $B2A            ; System call to B2A
$BEA    $66DD   LD       V6, #DD         ; Load 221 into V6
$BEC    $CA11   RND      VA, #11         ; VA = random & 11
$BEE    $0389   SYS      $389            ; System call to 389
$BF0    $0CAA   SYS      $CAA            ; System call to CAA
$BF2    $51A4   UNKNOWN  $51A4           ; Unknown 5xxx instruction
$BF4    $8489   UNKNOWN  8489            ; Unknown 8xxx instruction
$BF6    $75C3   ADD      V5, #C3         ; Add 195 to V5
$BF8    $2ACB   CALL     $ACB            ; Call subroutine at ACB
$BFA    $D07B   DRW      V0, V7, #B      ; Draw 11-byte sprite at V0, V7
$BFC    $273C   CALL     $73C            ; Call subroutine at 73C
$BFE    $4998   SNE      V9, #98         ; Skip if V9 != 152
$C00    $8D15   SUB      VD, V1          ; VD -= V1, VF = !borrow
$C02    $1895   JP       $895            ; Jump to 895
$C04    $DCD3   DRW      VC, VD, #3      ; Draw 3-byte sprite at VC, VD
$C06    $CBD3   RND      VB, #D3         ; VB = random & D3
$C08    $DEAA   DRW      VE, VA, #A      ; Draw 10-byte sprite at VE, VA
$C0A    $A250   LD       I, $250         ; Load 250 into I
$C0C    $32FB   SE       V2, #FB         ; Skip if V2 == 251
$C0E    $C38A   RND      V3, #8A         ; V3 = random & 8A
$C10    $6154   LD       V1, #54         ; Load 84 into V1
$C12    $AF99   LD       I, $F99         ; Load F99 into I
$C14    $82F7   SUBN     V2, VF          ; V2 = VF - V2, VF = !borrow
$C16    $0BBA   SYS      $BBA            ; System call to BBA
$C18    $641C   LD       V4, #1C         ; Load 28 into V4
$C1A    $0A41   SYS      $A41            ; System call to A41
$C1C    $7AE4   ADD      VA, #E4         ; Add 228 to VA
$C1E    $88DF   UNKNOWN  88DF            ; Unknown 8xxx instruction
$C20    $16F4   JP       $6F4            ; Jump to 6F4
$C22    $534A   UNKNOWN  $534A           ; Unknown 5xxx instruction
$C24    $2D5D   CALL     $D5D            ; Call subroutine at D5D
$C26    $A6BE   LD       I, $6BE         ; Load 6BE into I
$C28    $3054   SE       V0, #54         ; Skip if V0 == 84
$C2A    $5CD9   UNKNOWN  $5CD9           ; Unknown 5xxx instruction
$C2C    $43DD   SNE      V3, #DD         ; Skip if V3 != 221
$C2E    $4D48   SNE      VD, #48         ; Skip if VD != 72
$C30    $1F73   JP       $F73            ; Jump to F73
$C32    $0081   SYS      $081            ; System call to 081
$C34    $7D9B   ADD      VD, #9B         ; Add 155 to VD
$C36    $0F3E   SYS      $F3E            ; System call to F3E
$C38    $794D   ADD      V9, #4D         ; Add 77 to V9
$C3A    $D35E   DRW      V3, V5, #E      ; Draw 14-byte sprite at V3, V5
$C3C    $A275   LD       I, $275         ; Load 275 into I
$C3E    $D034   DRW      V0, V3, #4      ; Draw 4-byte sprite at V0, V3
$C40    $3572   SE       V5, #72         ; Skip if V5 == 114
$C42    $2EDE   CALL     $EDE            ; Call subroutine at EDE
$C44    $6CE1   LD       VC, #E1         ; Load 225 into VC
$C46    $571B   UNKNOWN  $571B           ; Unknown 5xxx instruction
$C48    $A56E   LD       I, $56E         ; Load 56E into I
$C4A    $6AB4   LD       VA, #B4         ; Load 180 into VA
$C4C    $9BEE   UNKNOWN  $9BEE           ; Unknown 9xxx instruction
$C4E    $28D6   CALL     $8D6            ; Call subroutine at 8D6
$C50    $0209   SYS      $209            ; System call to 209
$C52    $FA31   UNKNOWN  FA31            ; Unknown Fxxx instruction
$C54    $D642   DRW      V6, V4, #2      ; Draw 2-byte sprite at V6, V4
$C56    $24E9   CALL     $4E9            ; Call subroutine at 4E9
$C58    $0693   SYS      $693            ; System call to 693
$C5A    $541B   UNKNOWN  $541B           ; Unknown 5xxx instruction
$C5C    $6631   LD       V6, #31         ; Load 49 into V6
$C5E    $3BF4   SE       VB, #F4         ; Skip if VB == 244
$C60    $B8A2   JP       V0, $8A2        ; Jump to V0 + 8A2
$C62    $A3D3   LD       I, $3D3         ; Load 3D3 into I
$C64    $7EFE   ADD      VE, #FE         ; Add 254 to VE
$C66    $C715   RND      V7, #15         ; V7 = random & 15
$C68    $F82E   UNKNOWN  F82E            ; Unknown Fxxx instruction
$C6A    $5AEC   UNKNOWN  $5AEC           ; Unknown 5xxx instruction
$C6C    $CFE9   RND      VF, #E9         ; VF = random & E9
$C6E    $785E   ADD      V8, #5E         ; Add 94 to V8
$C70    $300B   SE       V0, #0B         ; Skip if V0 == 11
$C72    $6258   LD       V2, #58         ; Load 88 into V2
$C74    $F3FC   UNKNOWN  F3FC            ; Unknown Fxxx instruction
$C76    $E701   UNKNOWN  $E701           ; Unknown Exxx instruction
$C78    $1213   JP       $213            ; Jump to 213
$C7A    $75AB   ADD      V5, #AB         ; Add 171 to V5
$C7C    $CAC3   RND      VA, #C3         ; VA = random & C3
$C7E    $1F2E   JP       $F2E            ; Jump to F2E
$C80    $C725   RND      V7, #25         ; V7 = random & 25
$C82    $7466   ADD      V4, #66         ; Add 102 to V4
$C84    $BB8C   JP       V0, $B8C        ; Jump to V0 + B8C
$C86    $D197   DRW      V1, V9, #7      ; Draw 7-byte sprite at V1, V9
$C88    $87B9   UNKNOWN  87B9            ; Unknown 8xxx instruction
$C8A    $B9E9   JP       V0, $9E9        ; Jump to V0 + 9E9
$C8C    $BF81   JP       V0, $F81        ; Jump to V0 + F81
$C8E    $0074   SYS      $074            ; System call to 074
$C90    $FCCC   UNKNOWN  FCCC            ; Unknown Fxxx instruction
$C92    $23DD   CALL     $3DD            ; Call subroutine at 3DD
$C94    $2C46   CALL     $C46            ; Call subroutine at C46
$C96    $24DA   CALL     $4DA            ; Call subroutine at 4DA
$C98    $0A57   SYS      $A57            ; System call to A57
$C9A    $FD81   UNKNOWN  FD81            ; Unknown Fxxx instruction
$C9C    $6D43   LD       VD, #43         ; Load 67 into VD
$C9E    $4D9C   SNE      VD, #9C         ; Skip if VD != 156
$CA0    $1D7A   JP       $D7A            ; Jump to D7A
$CA2    $5374   UNKNOWN  $5374           ; Unknown 5xxx instruction
$CA4    $DFAE   DRW      VF, VA, #E      ; Draw 14-byte sprite at VF, VA
$CA6    $765E   ADD      V6, #5E         ; Add 94 to V6
$CA8    $3659   SE       V6, #59         ; Skip if V6 == 89
$CAA    $DA20   DRW      VA, V2, #0      ; Draw 0-byte sprite at VA, V2
$CAC    $6711   LD       V7, #11         ; Load 17 into V7
$CAE    $4AE3   SNE      VA, #E3         ; Skip if VA != 227
$CB0    $6661   LD       V6, #61         ; Load 97 into V6
$CB2    $8EF4   ADD      VE, VF          ; VE += VF, VF = carry
$CB4    $4951   SNE      V9, #51         ; Skip if V9 != 81
$CB6    $B135   JP       V0, $135        ; Jump to V0 + 135
$CB8    $7B65   ADD      VB, #65         ; Add 101 to VB
$CBA    $4E6A   SNE      VE, #6A         ; Skip if VE != 106
$CBC    $0FB1   SYS      $FB1            ; System call to FB1
$CBE    $7773   ADD      V7, #73         ; Add 115 to V7
$CC0    $A2C5   LD       I, $2C5         ; Load 2C5 into I
$CC2    $0A26   SYS      $A26            ; System call to A26
$CC4    $F3F0   UNKNOWN  F3F0            ; Unknown Fxxx instruction
$CC6    $88A5   SUB      V8, VA          ; V8 -= VA, VF = !borrow
$CC8    $A1A5   LD       I, $1A5         ; Load 1A5 into I
$CCA    $9BBC   UNKNOWN  $9BBC           ; Unknown 9xxx instruction
$CCC    $B129   JP       V0, $129        ; Jump to V0 + 129
$CCE    $BB64   JP       V0, $B64        ; Jump to V0 + B64
$CD0    $CB9B   RND      VB, #9B         ; VB = random & 9B
$CD2    $3D28   SE       VD, #28         ; Skip if VD == 40
$CD4    $A8A1   LD       I, $8A1         ; Load 8A1 into I
$CD6    $5702   UNKNOWN  $5702           ; Unknown 5xxx instruction
$CD8    $213F   CALL     $13F            ; Call subroutine at 13F
$CDA    $C0FA   RND      V0, #FA         ; V0 = random & FA
$CDC    $29CF   CALL     $9CF            ; Call subroutine at 9CF
$CDE    $BAA4   JP       V0, $AA4        ; Jump to V0 + AA4
$CE0    $7B57   ADD      VB, #57         ; Add 87 to VB
$CE2    $4C76   SNE      VC, #76         ; Skip if VC != 118
$CE4    $727E   ADD      V2, #7E         ; Add 126 to V2
$CE6    $07C0   SYS      $7C0            ; System call to 7C0
$CE8    $3C3D   SE       VC, #3D         ; Skip if VC == 61
$CEA    $62C8   LD       V2, #C8         ; Load 200 into V2
$CEC    $4F2A   SNE      VF, #2A         ; Skip if VF != 42
$CEE    $ED13   UNKNOWN  $ED13           ; Unknown Exxx instruction
$CF0    $F173   UNKNOWN  F173            ; Unknown Fxxx instruction
$CF2    $E2B2   UNKNOWN  $E2B2           ; Unknown Exxx instruction
$CF4    $E369   UNKNOWN  $E369           ; Unknown Exxx instruction
$CF6    $4E08   SNE      VE, #08         ; Skip if VE != 8
$CF8    $810A   UNKNOWN  810A            ; Unknown 8xxx instruction
$CFA    $CCD3   RND      VC, #D3         ; VC = random & D3
$CFC    $71F5   ADD      V1, #F5         ; Add 245 to V1
$CFE    $58BC   UNKNOWN  $58BC           ; Unknown 5xxx instruction
$D00    $DDD4   DRW      VD, VD, #4      ; Draw 4-byte sprite at VD, VD
$D02    $FC8D   UNKNOWN  FC8D            ; Unknown Fxxx instruction
$D04    $FD21   UNKNOWN  FD21            ; Unknown Fxxx instruction
$D06    $EF9F   UNKNOWN  $EF9F           ; Unknown Exxx instruction
$D08    $4C4A   SNE      VC, #4A         ; Skip if VC != 74
$D0A    $AC73   LD       I, $C73         ; Load C73 into I
$D0C    $1408   JP       $408            ; Jump to 408
$D0E    $FF8B   UNKNOWN  FF8B            ; Unknown Fxxx instruction
$D10    $9B25   UNKNOWN  $9B25           ; Unknown 9xxx instruction
$D12    $9D04   UNKNOWN  $9D04           ; Unknown 9xxx instruction
$D14    $43C0   SNE      V3, #C0         ; Skip if V3 != 192
$D16    $623A   LD       V2, #3A         ; Load 58 into V2
$D18    $0668   SYS      $668            ; System call to 668
$D1A    $8DCC   UNKNOWN  8DCC            ; Unknown 8xxx instruction
$D1C    $4F8A   SNE      VF, #8A         ; Skip if VF != 138
$D1E    $9536   UNKNOWN  $9536           ; Unknown 9xxx instruction
$D20    $6AAA   LD       VA, #AA         ; Load 170 into VA
$D22    $CA2C   RND      VA, #2C         ; VA = random & 2C
$D24    $0F4F   SYS      $F4F            ; System call to F4F
$D26    $5F0D   UNKNOWN  $5F0D           ; Unknown 5xxx instruction
$D28    $ED4F   UNKNOWN  $ED4F           ; Unknown Exxx instruction
$D2A    $E979   UNKNOWN  $E979           ; Unknown Exxx instruction
$D2C    $1FBF   JP       $FBF            ; Jump to FBF
$D2E    $4E82   SNE      VE, #82         ; Skip if VE != 130
$D30    $A09E   LD       I, $09E         ; Load 09E into I
$D32    $BD97   JP       V0, $D97        ; Jump to V0 + D97
$D34    $EF0E   UNKNOWN  $EF0E           ; Unknown Exxx instruction
$D36    $3548   SE       V5, #48         ; Skip if V5 == 72
$D38    $C082   RND      V0, #82         ; V0 = random & 82
$D3A    $DAF7   DRW      VA, VF, #7      ; Draw 7-byte sprite at VA, VF
$D3C    $EA85   UNKNOWN  $EA85           ; Unknown Exxx instruction
$D3E    $C830   RND      V8, #30         ; V8 = random & 30
$D40    $28D8   CALL     $8D8            ; Call subroutine at 8D8
$D42    $8612   AND      V6, V1          ; V6 &= V1
$D44    $5362   UNKNOWN  $5362           ; Unknown 5xxx instruction
$D46    $CAB1   RND      VA, #B1         ; VA = random & B1
$D48    $0839   SYS      $839            ; System call to 839
$D4A    $3472   SE       V4, #72         ; Skip if V4 == 114
$D4C    $AAF9   LD       I, $AF9         ; Load AF9 into I
$D4E    $34D3   SE       V4, #D3         ; Skip if V4 == 211
$D50    $4678   SNE      V6, #78         ; Skip if V6 != 120
$D52    $ACDE   LD       I, $CDE         ; Load CDE into I
$D54    $0672   SYS      $672            ; System call to 672
$D56    $72EF   ADD      V2, #EF         ; Add 239 to V2
$D58    $67BC   LD       V7, #BC         ; Load 188 into V7
$D5A    $89F4   ADD      V9, VF          ; V9 += VF, VF = carry
$D5C    $9BFB   UNKNOWN  $9BFB           ; Unknown 9xxx instruction
$D5E    $07E2   SYS      $7E2            ; System call to 7E2
$D60    $18DA   JP       $8DA            ; Jump to 8DA
$D62    $15D4   JP       $5D4            ; Jump to 5D4
$D64    $8C79   UNKNOWN  8C79            ; Unknown 8xxx instruction
$D66    $94C8   UNKNOWN  $94C8           ; Unknown 9xxx instruction
$D68    $A352   LD       I, $352         ; Load 352 into I
$D6A    $4487   SNE      V4, #87         ; Skip if V4 != 135
$D6C    $C577   RND      V5, #77         ; V5 = random & 77
$D6E    $8CD2   AND      VC, VD          ; VC &= VD
$D70    $4DC0   SNE      VD, #C0         ; Skip if VD != 192
$D72    $C25F   RND      V2, #5F         ; V2 = random & 5F
$D74    $FA76   UNKNOWN  FA76            ; Unknown Fxxx instruction
$D76    $C19F   RND      V1, #9F         ; V1 = random & 9F
$D78    $8EB7   SUBN     VE, VB          ; VE = VB - VE, VF = !borrow
$D7A    $F58C   UNKNOWN  F58C            ; Unknown Fxxx instruction
$D7C    $8A5F   UNKNOWN  8A5F            ; Unknown 8xxx instruction
$D7E    $2DCE   CALL     $DCE            ; Call subroutine at DCE
$D80    $3356   SE       V3, #56         ; Skip if V3 == 86
$D82    $BA41   JP       V0, $A41        ; Jump to V0 + A41
$D84    $3190   SE       V1, #90         ; Skip if V1 == 144
$D86    $C8D9   RND      V8, #D9         ; V8 = random & D9
$D88    $3D3F   SE       VD, #3F         ; Skip if VD == 63
$D8A    $E7B5   UNKNOWN  $E7B5           ; Unknown Exxx instruction
$D8C    $08FB   SYS      $8FB            ; System call to 8FB
$D8E    $DBF2   DRW      VB, VF, #2      ; Draw 2-byte sprite at VB, VF
$D90    $8B14   ADD      VB, V1          ; VB += V1, VF = carry
$D92    $338B   SE       V3, #8B         ; Skip if V3 == 139
$D94    $9D6B   UNKNOWN  $9D6B           ; Unknown 9xxx instruction
$D96    $6957   LD       V9, #57         ; Load 87 into V9
$D98    $2E97   CALL     $E97            ; Call subroutine at E97
$D9A    $3366   SE       V3, #66         ; Skip if V3 == 102
$D9C    $DED5   DRW      VE, VD, #5      ; Draw 5-byte sprite at VE, VD
$D9E    $4623   SNE      V6, #23         ; Skip if V6 != 35
$DA0    $C809   RND      V8, #09         ; V8 = random & 09
$DA2    $3983   SE       V9, #83         ; Skip if V9 == 131
$DA4    $5B86   UNKNOWN  $5B86           ; Unknown 5xxx instruction
$DA6    $C4BF   RND      V4, #BF         ; V4 = random & BF
$DA8    $3946   SE       V9, #46         ; Skip if V9 == 70
$DAA    $693A   LD       V9, #3A         ; Load 58 into V9
$DAC    $2E13   CALL     $E13            ; Call subroutine at E13
$DAE    $DE79   DRW      VE, V7, #9      ; Draw 9-byte sprite at VE, V7
$DB0    $444F   SNE      V4, #4F         ; Skip if V4 != 79
$DB2    $BB8C   JP       V0, $B8C        ; Jump to V0 + B8C
$DB4    $10C5   JP       $0C5            ; Jump to 0C5
$DB6    $AB86   LD       I, $B86         ; Load B86 into I
$DB8    $54AF   UNKNOWN  $54AF           ; Unknown 5xxx instruction
$DBA    $DC3D   DRW      VC, V3, #D      ; Draw 13-byte sprite at VC, V3
$DBC    $E3FA   UNKNOWN  $E3FA           ; Unknown Exxx instruction
$DBE    $7D46   ADD      VD, #46         ; Add 70 to VD
$DC0    $E29C   UNKNOWN  $E29C           ; Unknown Exxx instruction
$DC2    $BEE8   JP       V0, $EE8        ; Jump to V0 + EE8
$DC4    $A7A2   LD       I, $7A2         ; Load 7A2 into I
$DC6    $4E58   SNE      VE, #58         ; Skip if VE != 88
$DC8    $538A   UNKNOWN  $538A           ; Unknown 5xxx instruction
$DCA    $5411   UNKNOWN  $5411           ; Unknown 5xxx instruction
$DCC    $5293   UNKNOWN  $5293           ; Unknown 5xxx instruction
$DCE    $ABBB   LD       I, $BBB         ; Load BBB into I
$DD0    $5385   UNKNOWN  $5385           ; Unknown 5xxx instruction
$DD2    $85D1   OR       V5, VD          ; V5 |= VD
$DD4    $6E41   LD       VE, #41         ; Load 65 into VE
$DD6    $52C7   UNKNOWN  $52C7           ; Unknown 5xxx instruction
$DD8    $00CE   SYS      $0CE            ; System call to 0CE
$DDA    $826A   UNKNOWN  826A            ; Unknown 8xxx instruction
$DDC    $1A95   JP       $A95            ; Jump to A95
$DDE    $0908   SYS      $908            ; System call to 908
$DE0    $ADD8   LD       I, $DD8         ; Load DD8 into I
$DE2    $ECF6   UNKNOWN  $ECF6           ; Unknown Exxx instruction
$DE4    $DFF7   DRW      VF, VF, #7      ; Draw 7-byte sprite at VF, VF
$DE6    $0096   SYS      $096            ; System call to 096
$DE8    $C219   RND      V2, #19         ; V2 = random & 19
$DEA    $F474   UNKNOWN  F474            ; Unknown Fxxx instruction
$DEC    $0FE8   SYS      $FE8            ; System call to FE8
$DEE    $DB03   DRW      VB, V0, #3      ; Draw 3-byte sprite at VB, V0
$DF0    $F0C8   UNKNOWN  F0C8            ; Unknown Fxxx instruction
$DF2    $C950   RND      V9, #50         ; V9 = random & 50
$DF4    $5831   UNKNOWN  $5831           ; Unknown 5xxx instruction
$DF6    $664A   LD       V6, #4A         ; Load 74 into V6
$DF8    $8C8D   UNKNOWN  8C8D            ; Unknown 8xxx instruction
$DFA    $F43C   UNKNOWN  F43C            ; Unknown Fxxx instruction
$DFC    $FEEF   UNKNOWN  FEEF            ; Unknown Fxxx instruction
$DFE    $0511   SYS      $511            ; System call to 511
$E00    $8B18   UNKNOWN  8B18            ; Unknown 8xxx instruction
$E02    $05D2   SYS      $5D2            ; System call to 5D2
$E04    $907B   UNKNOWN  $907B           ; Unknown 9xxx instruction
$E06    $94A9   UNKNOWN  $94A9           ; Unknown 9xxx instruction
$E08    $7819   ADD      V8, #19         ; Add 25 to V8
$E0A    $7D4B   ADD      VD, #4B         ; Add 75 to VD
$E0C    $F206   UNKNOWN  F206            ; Unknown Fxxx instruction
$E0E    $2B45   CALL     $B45            ; Call subroutine at B45
$E10    $787B   ADD      V8, #7B         ; Add 123 to V8
$E12    $C491   RND      V4, #91         ; V4 = random & 91
$E14    $CD71   RND      VD, #71         ; VD = random & 71
$E16    $235E   CALL     $35E            ; Call subroutine at 35E
$E18    $5E73   UNKNOWN  $5E73           ; Unknown 5xxx instruction
$E1A    $5DA2   UNKNOWN  $5DA2           ; Unknown 5xxx instruction
$E1C    $0BB2   SYS      $BB2            ; System call to BB2
$E1E    $030E   SYS      $30E            ; System call to 30E
$E20    $5F27   UNKNOWN  $5F27           ; Unknown 5xxx instruction
$E22    $0E7E   SYS      $E7E            ; System call to E7E
$E24    $48F3   SNE      V8, #F3         ; Skip if V8 != 243
$E26    $7DE3   ADD      VD, #E3         ; Add 227 to VD
$E28    $8E3C   UNKNOWN  8E3C            ; Unknown 8xxx instruction
$E2A    $D811   DRW      V8, V1, #1      ; Draw 1-byte sprite at V8, V1
$E2C    $C601   RND      V6, #01         ; V6 = random & 01
$E2E    $6ED9   LD       VE, #D9         ; Load 217 into VE
$E30    $CF6C   RND      VF, #6C         ; VF = random & 6C
$E32    $8794   ADD      V7, V9          ; V7 += V9, VF = carry
$E34    $3D51   SE       VD, #51         ; Skip if VD == 81
$E36    $1E84   JP       $E84            ; Jump to E84
$E38    $4EEF   SNE      VE, #EF         ; Skip if VE != 239
$E3A    $22C5   CALL     $2C5            ; Call subroutine at 2C5
$E3C    $7839   ADD      V8, #39         ; Add 57 to V8
$E3E    $10A2   JP       $0A2            ; Jump to 0A2
$E40    $3705   SE       V7, #05         ; Skip if V7 == 5
$E42    $652D   LD       V5, #2D         ; Load 45 into V5
$E44    $C0B9   RND      V0, #B9         ; V0 = random & B9
$E46    $7255   ADD      V2, #55         ; Add 85 to V2
$E48    $3497   SE       V4, #97         ; Skip if V4 == 151
$E4A    $ED9F   UNKNOWN  $ED9F           ; Unknown Exxx instruction
$E4C    $0E1B   SYS      $E1B            ; System call to E1B
$E4E    $1A70   JP       $A70            ; Jump to A70
$E50    $9626   UNKNOWN  $9626           ; Unknown 9xxx instruction
$E52    $1577   JP       $577            ; Jump to 577
$E54    $DEB9   DRW      VE, VB, #9      ; Draw 9-byte sprite at VE, VB
$E56    $F5AD   UNKNOWN  F5AD            ; Unknown Fxxx instruction
$E58    $14E0   JP       $4E0            ; Jump to 4E0
$E5A    $CB7A   RND      VB, #7A         ; VB = random & 7A
$E5C    $DB21   DRW      VB, V2, #1      ; Draw 1-byte sprite at VB, V2
$E5E    $A693   LD       I, $693         ; Load 693 into I
$E60    $1F9E   JP       $F9E            ; Jump to F9E
$E62    $4BCE   SNE      VB, #CE         ; Skip if VB != 206
$E64    $1C9A   JP       $C9A            ; Jump to C9A
$E66    $EFEF   UNKNOWN  $EFEF           ; Unknown Exxx instruction
$E68    $3F92   SE       VF, #92         ; Skip if VF == 146
$E6A    $A776   LD       I, $776         ; Load 776 into I
$E6C    $33ED   SE       V3, #ED         ; Skip if V3 == 237
$E6E    $7245   ADD      V2, #45         ; Add 69 to V2
$E70    $21DE   CALL     $1DE            ; Call subroutine at 1DE
$E72    $DB3A   DRW      VB, V3, #A      ; Draw 10-byte sprite at VB, V3
$E74    $9A3D   UNKNOWN  $9A3D           ; Unknown 9xxx instruction
$E76    $FB28   UNKNOWN  FB28            ; Unknown Fxxx instruction
$E78    $4AF0   SNE      VA, #F0         ; Skip if VA != 240
$E7A    $8464   ADD      V4, V6          ; V4 += V6, VF = carry
$E7C    $6401   LD       V4, #01         ; Load 1 into V4
$E7E    $FE53   UNKNOWN  FE53            ; Unknown Fxxx instruction
$E80    $4DAB   SNE      VD, #AB         ; Skip if VD != 171
$E82    $2EB3   CALL     $EB3            ; Call subroutine at EB3
$E84    $ECD1   UNKNOWN  $ECD1           ; Unknown Exxx instruction
$E86    $9DB9   UNKNOWN  $9DB9           ; Unknown 9xxx instruction
$E88    $F034   UNKNOWN  F034            ; Unknown Fxxx instruction
$E8A    $82B1   OR       V2, VB          ; V2 |= VB
$E8C    $EDDD   UNKNOWN  $EDDD           ; Unknown Exxx instruction
$E8E    $D8FF   DRW      V8, VF, #F      ; Draw 15-byte sprite at V8, VF
$E90    $80E2   AND      V0, VE          ; V0 &= VE
$E92    $812A   UNKNOWN  812A            ; Unknown 8xxx instruction
$E94    $823A   UNKNOWN  823A            ; Unknown 8xxx instruction
$E96    $D874   DRW      V8, V7, #4      ; Draw 4-byte sprite at V8, V7
$E98    $4269   SNE      V2, #69         ; Skip if V2 != 105
$E9A    $0855   SYS      $855            ; System call to 855
$E9C    $47F1   SNE      V7, #F1         ; Skip if V7 != 241
$E9E    $8887   SUBN     V8, V8          ; V8 = V8 - V8, VF = !borrow
$EA0    $B87D   JP       V0, $87D        ; Jump to V0 + 87D
$EA2    $EC66   UNKNOWN  $EC66           ; Unknown Exxx instruction
$EA4    $887C   UNKNOWN  887C            ; Unknown 8xxx instruction
$EA6    $CC54   RND      VC, #54         ; VC = random & 54
$EA8    $1B2C   JP       $B2C            ; Jump to B2C
$EAA    $2379   CALL     $379            ; Call subroutine at 379
$EAC    $4FE2   SNE      VF, #E2         ; Skip if VF != 226
$EAE    $7D32   ADD      VD, #32         ; Add 50 to VD
$EB0    $C62E   RND      V6, #2E         ; V6 = random & 2E
$EB2    $83E9   UNKNOWN  83E9            ; Unknown 8xxx instruction
$EB4    $CA44   RND      VA, #44         ; VA = random & 44
$EB6    $1E60   JP       $E60            ; Jump to E60
$EB8    $8585   SUB      V5, V8          ; V5 -= V8, VF = !borrow
$EBA    $34F0   SE       V4, #F0         ; Skip if V4 == 240
$EBC    $EEF0   UNKNOWN  $EEF0           ; Unknown Exxx instruction
$EBE    $A979   LD       I, $979         ; Load 979 into I
$EC0    $71CB   ADD      V1, #CB         ; Add 203 to V1
$EC2    $ACCD   LD       I, $CCD         ; Load CCD into I
$EC4    $4174   SNE      V1, #74         ; Skip if V1 != 116
$EC6    $ADD4   LD       I, $DD4         ; Load DD4 into I
$EC8    $D0B6   DRW      V0, VB, #6      ; Draw 6-byte sprite at V0, VB
$ECA    $73D5   ADD      V3, #D5         ; Add 213 to V3
$ECC    $6588   LD       V5, #88         ; Load 136 into V5
$ECE    $7E9B   ADD      VE, #9B         ; Add 155 to VE
$ED0    $4712   SNE      V7, #12         ; Skip if V7 != 18
$ED2    $B959   JP       V0, $959        ; Jump to V0 + 959
$ED4    $4438   SNE      V4, #38         ; Skip if V4 != 56
$ED6    $45B0   SNE      V5, #B0         ; Skip if V5 != 176
$ED8    $BD4E   JP       V0, $D4E        ; Jump to V0 + D4E
$EDA    $4754   SNE      V7, #54         ; Skip if V7 != 84
$EDC    $8E29   UNKNOWN  8E29            ; Unknown 8xxx instruction
$EDE    $12C1   JP       $2C1            ; Jump to 2C1
$EE0    $6E0D   LD       VE, #0D         ; Load 13 into VE
$EE2    $F886   UNKNOWN  F886            ; Unknown Fxxx instruction
$EE4    $2C7D   CALL     $C7D            ; Call subroutine at C7D
$EE6    $789E   ADD      V8, #9E         ; Add 158 to V8
$EE8    $CBE3   RND      VB, #E3         ; VB = random & E3
$EEA    $A4E2   LD       I, $4E2         ; Load 4E2 into I
$EEC    $4864   SNE      V8, #64         ; Skip if V8 != 100
$EEE    $F8D8   UNKNOWN  F8D8            ; Unknown Fxxx instruction
$EF0    $7207   ADD      V2, #07         ; Add 7 to V2
$EF2    $6495   LD       V4, #95         ; Load 149 into V4
$EF4    $BC0D   JP       V0, $C0D        ; Jump to V0 + C0D
$EF6    $C5D3   RND      V5, #D3         ; V5 = random & D3
$EF8    $C528   RND      V5, #28         ; V5 = random & 28
$EFA    $301B   SE       V0, #1B         ; Skip if V0 == 27
$EFC    $67FD   LD       V7, #FD         ; Load 253 into V7
$EFE    $9C1A   UNKNOWN  $9C1A           ; Unknown 9xxx instruction
$F00    $6698   LD       V6, #98         ; Load 152 into V6
$F02    $80C9   UNKNOWN  80C9            ; Unknown 8xxx instruction
$F04    $85DD   UNKNOWN  85DD            ; Unknown 8xxx instruction
$F06    $EA0D   UNKNOWN  $EA0D           ; Unknown Exxx instruction
$F08    $A9E8   LD       I, $9E8         ; Load 9E8 into I
$F0A    $E63D   UNKNOWN  $E63D           ; Unknown Exxx instruction
$F0C    $96C3   UNKNOWN  $96C3           ; Unknown 9xxx instruction
$F0E    $186E   JP       $86E            ; Jump to 86E
$F10    $3184   SE       V1, #84         ; Skip if V1 == 132
$F12    $1875   JP       $875            ; Jump to 875
$F14    $3BF1   SE       VB, #F1         ; Skip if VB == 241
$F16    $E42A   UNKNOWN  $E42A           ; Unknown Exxx instruction
$F18    $26C5   CALL     $6C5            ; Call subroutine at 6C5
$F1A    $B036   JP       V0, $036        ; Jump to V0 + 036
$F1C    $C476   RND      V4, #76         ; V4 = random & 76
$F1E    $08C6   SYS      $8C6            ; System call to 8C6
$F20    $F571   UNKNOWN  F571            ; Unknown Fxxx instruction
$F22    $E91F   UNKNOWN  $E91F           ; Unknown Exxx instruction
$F24    $B362   JP       V0, $362        ; Jump to V0 + 362
$F26    $33B3   SE       V3, #B3         ; Skip if V3 == 179
$F28    $66BA   LD       V6, #BA         ; Load 186 into V6
$F2A    $B966   JP       V0, $966        ; Jump to V0 + 966
$F2C    $63C6   LD       V3, #C6         ; Load 198 into V3
$F2E    $488F   SNE      V8, #8F         ; Skip if V8 != 143
$F30    $4712   SNE      V7, #12         ; Skip if V7 != 18
$F32    $6F11   LD       VF, #11         ; Load 17 into VF
$F34    $6C7C   LD       VC, #7C         ; Load 124 into VC
$F36    $220C   CALL     $20C            ; Call subroutine at 20C
$F38    $278F   CALL     $78F            ; Call subroutine at 78F
$F3A    $16F7   JP       $6F7            ; Jump to 6F7
$F3C    $BC61   JP       V0, $C61        ; Jump to V0 + C61
$F3E    $B3E0   JP       V0, $3E0        ; Jump to V0 + 3E0
$F40    $CA62   RND      VA, #62         ; VA = random & 62
$F42    $BD6B   JP       V0, $D6B        ; Jump to V0 + D6B
$F44    $A860   LD       I, $860         ; Load 860 into I
$F46    $9911   UNKNOWN  $9911           ; Unknown 9xxx instruction
$F48    $EE64   UNKNOWN  $EE64           ; Unknown Exxx instruction
$F4A    $D112   DRW      V1, V1, #2      ; Draw 2-byte sprite at V1, V1
$F4C    $9CF2   UNKNOWN  $9CF2           ; Unknown 9xxx instruction
$F4E    $D0AE   DRW      V0, VA, #E      ; Draw 14-byte sprite at V0, VA
$F50    $CA52   RND      VA, #52         ; VA = random & 52
$F52    $AE2D   LD       I, $E2D         ; Load E2D into I
$F54    $5AFE   UNKNOWN  $5AFE           ; Unknown 5xxx instruction
$F56    $A2EE   LD       I, $2EE         ; Load 2EE into I
$F58    $1616   JP       $616            ; Jump to 616
$F5A    $AD6D   LD       I, $D6D         ; Load D6D into I
$F5C    $6FEC   LD       VF, #EC         ; Load 236 into VF
$F5E    $CC37   RND      VC, #37         ; VC = random & 37
$F60    $A747   LD       I, $747         ; Load 747 into I
$F62    $7218   ADD      V2, #18         ; Add 24 to V2
$F64    $3FFB   SE       VF, #FB         ; Skip if VF == 251
$F66    $77E6   ADD      V7, #E6         ; Add 230 to V7
$F68    $7C3C   ADD      VC, #3C         ; Add 60 to VC
$F6A    $E18A   UNKNOWN  $E18A           ; Unknown Exxx instruction
$F6C    $B9D5   JP       V0, $9D5        ; Jump to V0 + 9D5
$F6E    $4CCA   SNE      VC, #CA         ; Skip if VC != 202
$F70    $3A15   SE       VA, #15         ; Skip if VA == 21
$F72    $9FCC   UNKNOWN  $9FCC           ; Unknown 9xxx instruction
$F74    $96C3   UNKNOWN  $96C3           ; Unknown 9xxx instruction
$F76    $7B2B   ADD      VB, #2B         ; Add 43 to VB
$F78    $5EEB   UNKNOWN  $5EEB           ; Unknown 5xxx instruction
$F7A    $AF45   LD       I, $F45         ; Load F45 into I
$F7C    $3679   SE       V6, #79         ; Skip if V6 == 121
$F7E    $217B   CALL     $17B            ; Call subroutine at 17B
$F80    $74B5   ADD      V4, #B5         ; Add 181 to V4
$F82    $2B69   CALL     $B69            ; Call subroutine at B69
$F84    $BF83   JP       V0, $F83        ; Jump to V0 + F83
$F86    $AED5   LD       I, $ED5         ; Load ED5 into I
$F88    $8369   UNKNOWN  8369            ; Unknown 8xxx instruction
$F8A    $F716   UNKNOWN  F716            ; Unknown Fxxx instruction
$F8C    $E0B5   UNKNOWN  $E0B5           ; Unknown Exxx instruction
$F8E    $3495   SE       V4, #95         ; Skip if V4 == 149
$F90    $9758   UNKNOWN  $9758           ; Unknown 9xxx instruction
$F92    $53F4   UNKNOWN  $53F4           ; Unknown 5xxx instruction
$F94    $0594   SYS      $594            ; System call to 594
$F96    $1175   JP       $175            ; Jump to 175
$F98    $2F2A   CALL     $F2A            ; Call subroutine at F2A
$F9A    $3232   SE       V2, #32         ; Skip if V2 == 50
$F9C    $1E24   JP       $E24            ; Jump to E24
$F9E    $644C   LD       V4, #4C         ; Load 76 into V4
$FA0    $5C6C   UNKNOWN  $5C6C           ; Unknown 5xxx instruction
$FA2    $618C   LD       V1, #8C         ; Load 140 into V1
$FA4    $8078   UNKNOWN  8078            ; Unknown 8xxx instruction
$FA6    $46A2   SNE      V6, #A2         ; Skip if V6 != 162
$FA8    $2C94   CALL     $C94            ; Call subroutine at C94
$FAA    $7550   ADD      V5, #50         ; Add 80 to V5
$FAC    $014C   SYS      $14C            ; System call to 14C
$FAE    $E47F   UNKNOWN  $E47F           ; Unknown Exxx instruction
$FB0    $BBC9   JP       V0, $BC9        ; Jump to V0 + BC9
$FB2    $F992   UNKNOWN  F992            ; Unknown Fxxx instruction
$FB4    $F1CA   UNKNOWN  F1CA            ; Unknown Fxxx instruction
$FB6    $E5BE   UNKNOWN  $E5BE           ; Unknown Exxx instruction
$FB8    $FC32   UNKNOWN  FC32            ; Unknown Fxxx instruction
$FBA    $43A0   SNE      V3, #A0         ; Skip if V3 != 160
$FBC    $38D2   SE       V8, #D2         ; Skip if V8 == 210
$FBE    $8F52   AND      VF, V5          ; VF &= V5
$FC0    $1B37   JP       $B37            ; Jump to B37
$FC2    $DC63   DRW      VC, V6, #3      ; Draw 3-byte sprite at VC, V6
$FC4    $0F7D   SYS      $F7D            ; System call to F7D
$FC6    $9169   UNKNOWN  $9169           ; Unknown 9xxx instruction
$FC8    $3264   SE       V2, #64         ; Skip if V2 == 100
$FCA    $BDB5   JP       V0, $DB5        ; Jump to V0 + DB5
$FCC    $67C3   LD       V7, #C3         ; Load 195 into V7
$FCE    $ADBB   LD       I, $DBB         ; Load DBB into I
$FD0    $5076   UNKNOWN  $5076           ; Unknown 5xxx instruction
$FD2    $52A1   UNKNOWN  $52A1           ; Unknown 5xxx instruction
$FD4    $886A   UNKNOWN  886A            ; Unknown 8xxx instruction
$FD6    $80AD   UNKNOWN  80AD            ; Unknown 8xxx instruction
$FD8    $7181   ADD      V1, #81         ; Add 129 to V1
$FDA    $1F91   JP       $F91            ; Jump to F91
$FDC    $AFBB   LD       I, $FBB         ; Load FBB into I
$FDE    $40C8   SNE      V0, #C8         ; Skip if V0 != 200
$FE0    $3AF8   SE       VA, #F8         ; Skip if VA == 248
$FE2    $43A1   SNE      V3, #A1         ; Skip if V3 != 161
$FE4    $B69A   JP       V0, $69A        ; Jump to V0 + 69A
$FE6    $FE4A   UNKNOWN  FE4A            ; Unknown Fxxx instruction
$FE8    $B388   JP       V0, $388        ; Jump to V0 + 388
$FEA    $688A   LD       V8, #8A         ; Load 138 into V8
$FEC    $FC6A   UNKNOWN  FC6A            ; Unknown Fxxx instruction
$FEE    $A016   LD       I, $016         ; Load 016 into I
$FF0    $D62B   DRW      V6, V2, #B      ; Draw 11-byte sprite at V6, V2
$FF2    $FA9B   UNKNOWN  FA9B            ; Unknown Fxxx instruction
$FF4    $FA25   UNKNOWN  FA25            ; Unknown Fxxx instruction
$FF6    $AF68   LD       I, $F68         ; Load F68 into I
$FF8    $A871   LD       I, $871         ; Load 871 into I
$FFA    $1050   JP       $050            ; Jump to 050
$FFC    $3B30   SE       VB, #30         ; Skip if VB == 48
$FFE    $92DC   UNKNOWN  $92DC           ; Unknown 9xxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 456 (25.5%)
  LD      : 245 (13.7%)
  JP      : 223 (12.5%)
  SNE     : 128 ( 7.2%)
  SYS     : 122 ( 6.8%)
  ADD     : 121 ( 6.8%)
  RND     : 117 ( 6.5%)
  SE      : 115 ( 6.4%)
  DRW     : 115 ( 6.4%)
  CALL    :  98 ( 5.5%)
  SUBN    :  13 ( 0.7%)
  AND     :  11 ( 0.6%)
  OR      :   7 ( 0.4%)
  SHL     :   6 ( 0.3%)
  SHR     :   6 ( 0.3%)
  SUB     :   6 ( 0.3%)
  SKP     :   1 ( 0.1%)

Memory Operations: 366 (20.4%)
Arithmetic Operations: 158 (8.8%)
