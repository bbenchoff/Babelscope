
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B6311D01_I18314_C1001_23ee15fec3a7.ch8
ROM Size: 3584 bytes
Instructions Found: 1791

DISCOVERY INFORMATION:
Batch: 6311
Instance: 18314
Direction: ascending
Final Array: [0, 0, 0, 36, 42, 103, 151, 246]
Operations: R:0 W:1 C:108 S:1

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 124
Sort Array References:
  $20C: LD I, $6BB ; Load 6BB into I
  $212: LD I, $573 ; Load 573 into I
  $220: LD I, $FC4 ; Load FC4 into I
  $228: LD I, $86C ; Load 86C into I
  $240: LD I, $B37 ; Load B37 into I
  $268: LD I, $CBA ; Load CBA into I
  $26A: LD I, $E82 ; Load E82 into I
  $288: LD I, $E18 ; Load E18 into I
  $2F0: LD I, $C2D ; Load C2D into I
  $322: LD I, $D79 ; Load D79 into I
  $34C: LD I, $CAF ; Load CAF into I
  $356: LD I, $84C ; Load 84C into I
  $374: LD I, $A31 ; Load A31 into I
  $3B4: LD I, $1A4 ; Load 1A4 into I
  $408: LD I, $22B ; Load 22B into I
  $40C: LD I, $7CC ; Load 7CC into I
  $41A: LD I, $EAC ; Load EAC into I
  $432: LD I, $FDB ; Load FDB into I
  $436: LD I, $CD9 ; Load CD9 into I
  $43E: LD I, $28E ; Load 28E into I
  $464: LD I, $3B7 ; Load 3B7 into I
  $46E: LD I, $E64 ; Load E64 into I
  $4D6: LD I, $3E2 ; Load 3E2 into I
  $4E2: LD I, $2CB ; Load 2CB into I
  $4EC: LD I, $78C ; Load 78C into I
  $4F0: LD I, $1A2 ; Load 1A2 into I
  $510: LD I, $DFB ; Load DFB into I
  $54C: LD I, $276 ; Load 276 into I
  $56E: LD I, $6E1 ; Load 6E1 into I
  $572: LD I, $C29 ; Load C29 into I
  $57E: LD I, $545 ; Load 545 into I
  $582: LD I, $ECF ; Load ECF into I
  $590: LD I, $5F3 ; Load 5F3 into I
  $59A: LD I, $EC5 ; Load EC5 into I
  $5AA: LD I, $2B8 ; Load 2B8 into I
  $5AC: LD I, $90A ; Load 90A into I
  $5BC: LD I, $01F ; Load 01F into I
  $5DA: LD I, $345 ; Load 345 into I
  $5E8: LD I, $477 ; Load 477 into I
  $63A: LD I, $492 ; Load 492 into I
  $652: LD I, $6DF ; Load 6DF into I
  $654: LD I, $86F ; Load 86F into I
  $680: LD I, $90B ; Load 90B into I
  $69A: LD I, $5B1 ; Load 5B1 into I
  $6B8: LD I, $4F9 ; Load 4F9 into I
  $6BA: LD I, $306 ; Load 306 into I
  $6D2: LD I, $97D ; Load 97D into I
  $6DC: LD I, $E45 ; Load E45 into I
  $6F2: LD I, $EB8 ; Load EB8 into I
  $710: LD I, $784 ; Load 784 into I
  $72A: LD I, $615 ; Load 615 into I
  $752: LD I, $300 ; Load 300 into I
  $778: LD I, $E56 ; Load E56 into I
  $7AE: LD I, $8DB ; Load 8DB into I
  $7FA: LD I, $5C0 ; Load 5C0 into I
  $80E: LD I, $645 ; Load 645 into I
  $812: LD I, $F9F ; Load F9F into I
  $816: LD I, $11F ; Load 11F into I
  $81E: LD I, $35B ; Load 35B into I
  $820: LD I, $F0E ; Load F0E into I
  $82E: LD I, $CBD ; Load CBD into I
  $866: LD I, $3F1 ; Load 3F1 into I
  $870: LD I, $3CE ; Load 3CE into I
  $89E: LD I, $5A9 ; Load 5A9 into I
  $8C8: LD I, $D36 ; Load D36 into I
  $8CE: LD I, $F21 ; Load F21 into I
  $8DA: LD I, $047 ; Load 047 into I
  $8E2: LD I, $037 ; Load 037 into I
  $906: LD I, $4C9 ; Load 4C9 into I
  $910: LD I, $9C8 ; Load 9C8 into I
  $91E: LD I, $197 ; Load 197 into I
  $926: LD I, $0D3 ; Load 0D3 into I
  $932: LD I, $83A ; Load 83A into I
  $940: LD I, $AFC ; Load AFC into I
  $942: LD I, $CA4 ; Load CA4 into I
  $97E: LD I, $5F2 ; Load 5F2 into I
  $9A2: LD I, $63F ; Load 63F into I
  $9B0: LD I, $BA7 ; Load BA7 into I
  $9B4: LD I, $8A8 ; Load 8A8 into I
  $9E2: LD I, $0AF ; Load 0AF into I
  $A1A: LD I, $D0A ; Load D0A into I
  $A32: LD I, $848 ; Load 848 into I
  $A70: LD I, $BAE ; Load BAE into I
  $A98: LD I, $D82 ; Load D82 into I
  $AFC: LD I, $A95 ; Load A95 into I
  $B30: LD I, $2B3 ; Load 2B3 into I
  $B4A: LD I, $606 ; Load 606 into I
  $B50: LD I, $50A ; Load 50A into I
  $B52: LD I, $D5A ; Load D5A into I
  $B82: LD I, $554 ; Load 554 into I
  $B9C: LD I, $AD4 ; Load AD4 into I
  $BAC: LD I, $340 ; Load 340 into I
  $BBA: LD I, $5B7 ; Load 5B7 into I
  $BBC: LD I, $085 ; Load 085 into I
  $BF0: LD I, $6EA ; Load 6EA into I
  $BFC: LD I, $28D ; Load 28D into I
  $C40: LD I, $123 ; Load 123 into I
  $C42: LD I, $E12 ; Load E12 into I
  $C7C: LD I, $CDE ; Load CDE into I
  $CAA: LD I, $A08 ; Load A08 into I
  $CB0: LD I, $70A ; Load 70A into I
  $CB2: LD I, $B97 ; Load B97 into I
  $CB4: LD I, $59E ; Load 59E into I
  $CB6: LD I, $7E0 ; Load 7E0 into I
  $CC6: LD I, $64F ; Load 64F into I
  $D16: LD I, $AF6 ; Load AF6 into I
  $D64: LD I, $E93 ; Load E93 into I
  $D66: LD I, $0C1 ; Load 0C1 into I
  $D8E: LD I, $412 ; Load 412 into I
  $DBC: LD I, $33C ; Load 33C into I
  $DF2: LD I, $5F2 ; Load 5F2 into I
  $E00: LD I, $131 ; Load 131 into I
  $E16: LD I, $87C ; Load 87C into I
  $E2E: LD I, $78D ; Load 78D into I
  $E50: LD I, $9F1 ; Load 9F1 into I
  $EA6: LD I, $386 ; Load 386 into I
  $EEC: LD I, $84D ; Load 84D into I
  $EFE: LD I, $CA7 ; Load CA7 into I
  $F2A: LD I, $701 ; Load 701 into I
  $F4C: LD I, $C5C ; Load C5C into I
  $F52: LD I, $F43 ; Load F43 into I
  $FAC: LD I, $E37 ; Load E37 into I
  $FBE: LD I, $6B5 ; Load 6B5 into I
  $FD2: LD I, $A6E ; Load A6E into I

CONTROL FLOW ANALYSIS:
Jumps: 223
Calls: 119
Branches: 245
Loops: 122
Loop Structures:
  $29A -> $238 (backward jump)
  $2D8 -> $2C8 (backward jump)
  $2DE -> $0B7 (backward jump)
  $312 -> $213 (backward jump)
  $3CC -> $1AD (backward jump)
  $4A8 -> $01F (backward jump)
  $4B6 -> $42D (backward jump)
  $4E4 -> $214 (backward jump)
  $4F4 -> $16F (backward jump)
  $52A -> $21E (backward jump)
  $58C -> $14D (backward jump)
  $626 -> $366 (backward jump)
  $67C -> $3FE (backward jump)
  $6CC -> $5E8 (backward jump)
  $6EC -> $3AC (backward jump)
  $6F0 -> $307 (backward jump)
  $6F4 -> $624 (backward jump)
  $72C -> $455 (backward jump)
  $738 -> $424 (backward jump)
  $7A0 -> $77C (backward jump)
  $804 -> $7A7 (backward jump)
  $89A -> $524 (backward jump)
  $89C -> $840 (backward jump)
  $8B2 -> $76B (backward jump)
  $8B6 -> $275 (backward jump)
  $8FE -> $5CF (backward jump)
  $920 -> $527 (backward jump)
  $94C -> $344 (backward jump)
  $964 -> $74A (backward jump)
  $96E -> $299 (backward jump)
  $972 -> $2B1 (backward jump)
  $9AA -> $261 (backward jump)
  $9AC -> $606 (backward jump)
  $9AE -> $487 (backward jump)
  $9C6 -> $4F1 (backward jump)
  $A0C -> $12C (backward jump)
  $A16 -> $706 (backward jump)
  $A24 -> $9D2 (backward jump)
  $A94 -> $A12 (backward jump)
  $ABA -> $66D (backward jump)
  $AF0 -> $7C2 (backward jump)
  $AF2 -> $9EF (backward jump)
  $B06 -> $8B9 (backward jump)
  $B14 -> $48B (backward jump)
  $B2C -> $AB1 (backward jump)
  $B70 -> $780 (backward jump)
  $B72 -> $150 (backward jump)
  $BA4 -> $1C7 (backward jump)
  $BB2 -> $AFD (backward jump)
  $BD2 -> $17A (backward jump)
  $BD4 -> $66C (backward jump)
  $BDC -> $1E2 (backward jump)
  $BE2 -> $173 (backward jump)
  $BFA -> $BD5 (backward jump)
  $C08 -> $A5A (backward jump)
  $C14 -> $505 (backward jump)
  $C1A -> $3E2 (backward jump)
  $C8C -> $AFD (backward jump)
  $CAE -> $0FF (backward jump)
  $CFC -> $664 (backward jump)
  $CFE -> $900 (backward jump)
  $D02 -> $394 (backward jump)
  $D10 -> $6FA (backward jump)
  $D14 -> $03C (backward jump)
  $D20 -> $35C (backward jump)
  $D26 -> $7B3 (backward jump)
  $D36 -> $85B (backward jump)
  $D3A -> $A08 (backward jump)
  $D50 -> $BE2 (backward jump)
  $D60 -> $993 (backward jump)
  $D76 -> $895 (backward jump)
  $D7A -> $572 (backward jump)
  $D7C -> $32B (backward jump)
  $D88 -> $403 (backward jump)
  $D8A -> $6D1 (backward jump)
  $DAC -> $0F6 (backward jump)
  $DB6 -> $02A (backward jump)
  $DCC -> $B3F (backward jump)
  $DE6 -> $908 (backward jump)
  $E14 -> $99A (backward jump)
  $E28 -> $80A (backward jump)
  $E2C -> $358 (backward jump)
  $E3E -> $733 (backward jump)
  $E48 -> $0C4 (backward jump)
  $E4A -> $97C (backward jump)
  $E5E -> $914 (backward jump)
  $E64 -> $A89 (backward jump)
  $E6E -> $645 (backward jump)
  $E72 -> $E35 (backward jump)
  $E84 -> $280 (backward jump)
  $E9A -> $71E (backward jump)
  $EA2 -> $DB9 (backward jump)
  $EA8 -> $8F3 (backward jump)
  $EB4 -> $77F (backward jump)
  $EC2 -> $ACD (backward jump)
  $ECC -> $35F (backward jump)
  $EE2 -> $5D3 (backward jump)
  $F0A -> $BCA (backward jump)
  $F0E -> $2F3 (backward jump)
  $F2C -> $CD4 (backward jump)
  $F2E -> $0E7 (backward jump)
  $F38 -> $16E (backward jump)
  $F44 -> $9F1 (backward jump)
  $F46 -> $687 (backward jump)
  $F56 -> $343 (backward jump)
  $F5C -> $AA6 (backward jump)
  $F68 -> $087 (backward jump)
  $F6C -> $147 (backward jump)
  $F76 -> $E7A (backward jump)
  $F7A -> $D2F (backward jump)
  $F80 -> $967 (backward jump)
  $F92 -> $C4B (backward jump)
  $F96 -> $F1F (backward jump)
  $F9C -> $447 (backward jump)
  $FA0 -> $9CD (backward jump)
  $FB8 -> $094 (backward jump)
  $FC6 -> $EC1 (backward jump)
  $FD0 -> $D73 (backward jump)
  $FD6 -> $04B (backward jump)
  $FEA -> $AD3 (backward jump)
  $FF4 -> $D19 (backward jump)
  $FFC -> $58B (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $EED5   UNKNOWN  $EED5           ; Unknown Exxx instruction
$202    $0322   SYS      $322            ; System call to 322
$204    $F2D1   UNKNOWN  F2D1            ; Unknown Fxxx instruction
$206    $7A2D   ADD      VA, #2D         ; Add 45 to VA
$208    $2985   CALL     $985            ; Call subroutine at 985
$20A    $8371   OR       V3, V7          ; V3 |= V7
$20C    $A6BB   LD       I, $6BB         ; Load 6BB into I
$20E    $6D60   LD       VD, #60         ; Load 96 into VD
$210    $9650   SNE      V6, V5          ; Skip if V6 != V5
$212    $A573   LD       I, $573         ; Load 573 into I
$214    $52B1   UNKNOWN  $52B1           ; Unknown 5xxx instruction
$216    $9C31   UNKNOWN  $9C31           ; Unknown 9xxx instruction
$218    $3C35   SE       VC, #35         ; Skip if VC == 53
$21A    $FAD8   UNKNOWN  FAD8            ; Unknown Fxxx instruction
$21C    $6910   LD       V9, #10         ; Load 16 into V9
$21E    $DA8B   DRW      VA, V8, #B      ; Draw 11-byte sprite at VA, V8
$220    $AFC4   LD       I, $FC4         ; Load FC4 into I
$222    $1583   JP       $583            ; Jump to 583
$224    $665A   LD       V6, #5A         ; Load 90 into V6
$226    $427B   SNE      V2, #7B         ; Skip if V2 != 123
$228    $A86C   LD       I, $86C         ; Load 86C into I
$22A    $F86A   UNKNOWN  F86A            ; Unknown Fxxx instruction
$22C    $02F6   SYS      $2F6            ; System call to 2F6
$22E    $96D1   UNKNOWN  $96D1           ; Unknown 9xxx instruction
$230    $DA88   DRW      VA, V8, #8      ; Draw 8-byte sprite at VA, V8
$232    $D8E0   DRW      V8, VE, #0      ; Draw 0-byte sprite at V8, VE
$234    $9C1C   UNKNOWN  $9C1C           ; Unknown 9xxx instruction
$236    $1B8E   JP       $B8E            ; Jump to B8E
$238    $7706   ADD      V7, #06         ; Add 6 to V7
$23A    $B4FC   JP       V0, $4FC        ; Jump to V0 + 4FC
$23C    $DDA9   DRW      VD, VA, #9      ; Draw 9-byte sprite at VD, VA
$23E    $7589   ADD      V5, #89         ; Add 137 to V5
$240    $AB37   LD       I, $B37         ; Load B37 into I
$242    $0149   SYS      $149            ; System call to 149
$244    $1973   JP       $973            ; Jump to 973
$246    $008C   SYS      $08C            ; System call to 08C
$248    $8008   UNKNOWN  8008            ; Unknown 8xxx instruction
$24A    $5F02   UNKNOWN  $5F02           ; Unknown 5xxx instruction
$24C    $D538   DRW      V5, V3, #8      ; Draw 8-byte sprite at V5, V3
$24E    $50CA   UNKNOWN  $50CA           ; Unknown 5xxx instruction
$250    $56A1   UNKNOWN  $56A1           ; Unknown 5xxx instruction
$252    $E265   UNKNOWN  $E265           ; Unknown Exxx instruction
$254    $7588   ADD      V5, #88         ; Add 136 to V5
$256    $B3AA   JP       V0, $3AA        ; Jump to V0 + 3AA
$258    $15A7   JP       $5A7            ; Jump to 5A7
$25A    $DEE8   DRW      VE, VE, #8      ; Draw 8-byte sprite at VE, VE
$25C    $D42D   DRW      V4, V2, #D      ; Draw 13-byte sprite at V4, V2
$25E    $7E9A   ADD      VE, #9A         ; Add 154 to VE
$260    $39D3   SE       V9, #D3         ; Skip if V9 == 211
$262    $0700   SYS      $700            ; System call to 700
$264    $23E5   CALL     $3E5            ; Call subroutine at 3E5
$266    $D93A   DRW      V9, V3, #A      ; Draw 10-byte sprite at V9, V3
$268    $ACBA   LD       I, $CBA         ; Load CBA into I
$26A    $AE82   LD       I, $E82         ; Load E82 into I
$26C    $F2E8   UNKNOWN  F2E8            ; Unknown Fxxx instruction
$26E    $37C8   SE       V7, #C8         ; Skip if V7 == 200
$270    $587F   UNKNOWN  $587F           ; Unknown 5xxx instruction
$272    $D7BF   DRW      V7, VB, #F      ; Draw 15-byte sprite at V7, VB
$274    $4879   SNE      V8, #79         ; Skip if V8 != 121
$276    $8B89   UNKNOWN  8B89            ; Unknown 8xxx instruction
$278    $3BB3   SE       VB, #B3         ; Skip if VB == 179
$27A    $8B7A   UNKNOWN  8B7A            ; Unknown 8xxx instruction
$27C    $C335   RND      V3, #35         ; V3 = random & 35
$27E    $F852   UNKNOWN  F852            ; Unknown Fxxx instruction
$280    $B56D   JP       V0, $56D        ; Jump to V0 + 56D
$282    $22C2   CALL     $2C2            ; Call subroutine at 2C2
$284    $06B9   SYS      $6B9            ; System call to 6B9
$286    $E595   UNKNOWN  $E595           ; Unknown Exxx instruction
$288    $AE18   LD       I, $E18         ; Load E18 into I
$28A    $7DE1   ADD      VD, #E1         ; Add 225 to VD
$28C    $B5C0   JP       V0, $5C0        ; Jump to V0 + 5C0
$28E    $3F1E   SE       VF, #1E         ; Skip if VF == 30
$290    $47F8   SNE      V7, #F8         ; Skip if V7 != 248
$292    $F967   UNKNOWN  F967            ; Unknown Fxxx instruction
$294    $63D5   LD       V3, #D5         ; Load 213 into V3
$296    $3164   SE       V1, #64         ; Skip if V1 == 100
$298    $1635   JP       $635            ; Jump to 635
$29A    $1238   JP       $238            ; Jump to 238
$29C    $4AEF   SNE      VA, #EF         ; Skip if VA != 239
$29E    $7258   ADD      V2, #58         ; Add 88 to V2
$2A0    $7AAF   ADD      VA, #AF         ; Add 175 to VA
$2A2    $5C80   SE       VC, V8          ; Skip if VC == V8
$2A4    $E5CB   UNKNOWN  $E5CB           ; Unknown Exxx instruction
$2A6    $2F89   CALL     $F89            ; Call subroutine at F89
$2A8    $CD4C   RND      VD, #4C         ; VD = random & 4C
$2AA    $4D7C   SNE      VD, #7C         ; Skip if VD != 124
$2AC    $51A4   UNKNOWN  $51A4           ; Unknown 5xxx instruction
$2AE    $1F46   JP       $F46            ; Jump to F46
$2B0    $2B70   CALL     $B70            ; Call subroutine at B70
$2B2    $0AB0   SYS      $AB0            ; System call to AB0
$2B4    $2031   CALL     $031            ; Call subroutine at 031
$2B6    $2F2C   CALL     $F2C            ; Call subroutine at F2C
$2B8    $199F   JP       $99F            ; Jump to 99F
$2BA    $7DB7   ADD      VD, #B7         ; Add 183 to VD
$2BC    $1B63   JP       $B63            ; Jump to B63
$2BE    $3BF1   SE       VB, #F1         ; Skip if VB == 241
$2C0    $4AFF   SNE      VA, #FF         ; Skip if VA != 255
$2C2    $4BEF   SNE      VB, #EF         ; Skip if VB != 239
$2C4    $5457   UNKNOWN  $5457           ; Unknown 5xxx instruction
$2C6    $D06F   DRW      V0, V6, #F      ; Draw 15-byte sprite at V0, V6
$2C8    $F071   UNKNOWN  F071            ; Unknown Fxxx instruction
$2CA    $4CF3   SNE      VC, #F3         ; Skip if VC != 243
$2CC    $257F   CALL     $57F            ; Call subroutine at 57F
$2CE    $3A2A   SE       VA, #2A         ; Skip if VA == 42
$2D0    $1A44   JP       $A44            ; Jump to A44
$2D2    $1BFC   JP       $BFC            ; Jump to BFC
$2D4    $7131   ADD      V1, #31         ; Add 49 to V1
$2D6    $CD29   RND      VD, #29         ; VD = random & 29
$2D8    $12C8   JP       $2C8            ; Jump to 2C8
$2DA    $C738   RND      V7, #38         ; V7 = random & 38
$2DC    $8B6E   SHL      VB              ; VB <<= 1, VF = MSB
$2DE    $10B7   JP       $0B7            ; Jump to 0B7
$2E0    $3733   SE       V7, #33         ; Skip if V7 == 51
$2E2    $E4A1   SKNP     V4              ; Skip if key V4 not pressed
$2E4    $5F86   UNKNOWN  $5F86           ; Unknown 5xxx instruction
$2E6    $0246   SYS      $246            ; System call to 246
$2E8    $8DA2   AND      VD, VA          ; VD &= VA
$2EA    $3B85   SE       VB, #85         ; Skip if VB == 133
$2EC    $8339   UNKNOWN  8339            ; Unknown 8xxx instruction
$2EE    $079B   SYS      $79B            ; System call to 79B
$2F0    $AC2D   LD       I, $C2D         ; Load C2D into I
$2F2    $5E98   UNKNOWN  $5E98           ; Unknown 5xxx instruction
$2F4    $21E3   CALL     $1E3            ; Call subroutine at 1E3
$2F6    $5EFF   UNKNOWN  $5EFF           ; Unknown 5xxx instruction
$2F8    $1EA6   JP       $EA6            ; Jump to EA6
$2FA    $6744   LD       V7, #44         ; Load 68 into V7
$2FC    $FF48   UNKNOWN  FF48            ; Unknown Fxxx instruction
$2FE    $663C   LD       V6, #3C         ; Load 60 into V6
$302    $0024   SYS      $024            ; System call to 024
$304    $2A67   CALL     $A67            ; Call subroutine at A67
$306    $97F6   UNKNOWN  $97F6           ; Unknown 9xxx instruction
$308    $3DFC   SE       VD, #FC         ; Skip if VD == 252
$30A    $F048   UNKNOWN  F048            ; Unknown Fxxx instruction
$30C    $EF4B   UNKNOWN  $EF4B           ; Unknown Exxx instruction
$30E    $578C   UNKNOWN  $578C           ; Unknown 5xxx instruction
$310    $0BE0   SYS      $BE0            ; System call to BE0
$312    $1213   JP       $213            ; Jump to 213
$314    $6DB5   LD       VD, #B5         ; Load 181 into VD
$316    $6CCC   LD       VC, #CC         ; Load 204 into VC
$318    $C644   RND      V6, #44         ; V6 = random & 44
$31A    $6222   LD       V2, #22         ; Load 34 into V2
$31C    $654E   LD       V5, #4E         ; Load 78 into V5
$31E    $022C   SYS      $22C            ; System call to 22C
$320    $3E7E   SE       VE, #7E         ; Skip if VE == 126
$322    $AD79   LD       I, $D79         ; Load D79 into I
$324    $3D75   SE       VD, #75         ; Skip if VD == 117
$326    $F3A1   UNKNOWN  F3A1            ; Unknown Fxxx instruction
$328    $9835   UNKNOWN  $9835           ; Unknown 9xxx instruction
$32A    $1EB1   JP       $EB1            ; Jump to EB1
$32C    $18C3   JP       $8C3            ; Jump to 8C3
$32E    $5434   UNKNOWN  $5434           ; Unknown 5xxx instruction
$330    $3350   SE       V3, #50         ; Skip if V3 == 80
$332    $161F   JP       $61F            ; Jump to 61F
$334    $81A4   ADD      V1, VA          ; V1 += VA, VF = carry
$336    $D8BF   DRW      V8, VB, #F      ; Draw 15-byte sprite at V8, VB
$338    $FAF2   UNKNOWN  FAF2            ; Unknown Fxxx instruction
$33A    $3D18   SE       VD, #18         ; Skip if VD == 24
$33C    $2180   CALL     $180            ; Call subroutine at 180
$33E    $B965   JP       V0, $965        ; Jump to V0 + 965
$340    $D3B5   DRW      V3, VB, #5      ; Draw 5-byte sprite at V3, VB
$342    $4775   SNE      V7, #75         ; Skip if V7 != 117
$344    $C860   RND      V8, #60         ; V8 = random & 60
$346    $888F   UNKNOWN  888F            ; Unknown 8xxx instruction
$348    $447D   SNE      V4, #7D         ; Skip if V4 != 125
$34A    $3147   SE       V1, #47         ; Skip if V1 == 71
$34C    $ACAF   LD       I, $CAF         ; Load CAF into I
$34E    $489F   SNE      V8, #9F         ; Skip if V8 != 159
$350    $05EA   SYS      $5EA            ; System call to 5EA
$352    $9FB0   SNE      VF, VB          ; Skip if VF != VB
$354    $0BD1   SYS      $BD1            ; System call to BD1
$356    $A84C   LD       I, $84C         ; Load 84C into I
$358    $D197   DRW      V1, V9, #7      ; Draw 7-byte sprite at V1, V9
$35A    $DA02   DRW      VA, V0, #2      ; Draw 2-byte sprite at VA, V0
$35C    $B908   JP       V0, $908        ; Jump to V0 + 908
$35E    $49D5   SNE      V9, #D5         ; Skip if V9 != 213
$360    $7C24   ADD      VC, #24         ; Add 36 to VC
$362    $035D   SYS      $35D            ; System call to 35D
$364    $4354   SNE      V3, #54         ; Skip if V3 != 84
$366    $4247   SNE      V2, #47         ; Skip if V2 != 71
$368    $2493   CALL     $493            ; Call subroutine at 493
$36A    $9E07   UNKNOWN  $9E07           ; Unknown 9xxx instruction
$36C    $7D0F   ADD      VD, #0F         ; Add 15 to VD
$36E    $01B2   SYS      $1B2            ; System call to 1B2
$370    $C067   RND      V0, #67         ; V0 = random & 67
$372    $17F3   JP       $7F3            ; Jump to 7F3
$374    $AA31   LD       I, $A31         ; Load A31 into I
$376    $EF00   UNKNOWN  $EF00           ; Unknown Exxx instruction
$378    $DC9F   DRW      VC, V9, #F      ; Draw 15-byte sprite at VC, V9
$37A    $8946   SHR      V9              ; V9 >>= 1, VF = LSB
$37C    $7841   ADD      V8, #41         ; Add 65 to V8
$37E    $60A4   LD       V0, #A4         ; Load 164 into V0
$380    $92FF   UNKNOWN  $92FF           ; Unknown 9xxx instruction
$382    $E25A   UNKNOWN  $E25A           ; Unknown Exxx instruction
$384    $3EDF   SE       VE, #DF         ; Skip if VE == 223
$386    $667D   LD       V6, #7D         ; Load 125 into V6
$388    $68F5   LD       V8, #F5         ; Load 245 into V8
$38A    $E0A4   UNKNOWN  $E0A4           ; Unknown Exxx instruction
$38C    $E6EC   UNKNOWN  $E6EC           ; Unknown Exxx instruction
$38E    $6BD7   LD       VB, #D7         ; Load 215 into VB
$390    $941A   UNKNOWN  $941A           ; Unknown 9xxx instruction
$392    $DBF1   DRW      VB, VF, #1      ; Draw 1-byte sprite at VB, VF
$394    $07BC   SYS      $7BC            ; System call to 7BC
$396    $2F4B   CALL     $F4B            ; Call subroutine at F4B
$398    $9B61   UNKNOWN  $9B61           ; Unknown 9xxx instruction
$39A    $6F7D   LD       VF, #7D         ; Load 125 into VF
$39C    $9391   UNKNOWN  $9391           ; Unknown 9xxx instruction
$39E    $7FFD   ADD      VF, #FD         ; Add 253 to VF
$3A0    $3511   SE       V5, #11         ; Skip if V5 == 17
$3A2    $58AA   UNKNOWN  $58AA           ; Unknown 5xxx instruction
$3A4    $300B   SE       V0, #0B         ; Skip if V0 == 11
$3A6    $EC61   UNKNOWN  $EC61           ; Unknown Exxx instruction
$3A8    $DAAB   DRW      VA, VA, #B      ; Draw 11-byte sprite at VA, VA
$3AA    $9114   UNKNOWN  $9114           ; Unknown 9xxx instruction
$3AC    $20F3   CALL     $0F3            ; Call subroutine at 0F3
$3AE    $DFC9   DRW      VF, VC, #9      ; Draw 9-byte sprite at VF, VC
$3B0    $9FB9   UNKNOWN  $9FB9           ; Unknown 9xxx instruction
$3B2    $4CD1   SNE      VC, #D1         ; Skip if VC != 209
$3B4    $A1A4   LD       I, $1A4         ; Load 1A4 into I
$3B6    $045F   SYS      $45F            ; System call to 45F
$3B8    $202A   CALL     $02A            ; Call subroutine at 02A
$3BA    $D80A   DRW      V8, V0, #A      ; Draw 10-byte sprite at V8, V0
$3BC    $5F0D   UNKNOWN  $5F0D           ; Unknown 5xxx instruction
$3BE    $05ED   SYS      $5ED            ; System call to 5ED
$3C0    $024D   SYS      $24D            ; System call to 24D
$3C2    $E0B1   UNKNOWN  $E0B1           ; Unknown Exxx instruction
$3C4    $C754   RND      V7, #54         ; V7 = random & 54
$3C6    $9815   UNKNOWN  $9815           ; Unknown 9xxx instruction
$3C8    $246F   CALL     $46F            ; Call subroutine at 46F
$3CA    $5E6F   UNKNOWN  $5E6F           ; Unknown 5xxx instruction
$3CC    $11AD   JP       $1AD            ; Jump to 1AD
$3CE    $8516   SHR      V5              ; V5 >>= 1, VF = LSB
$3D0    $9238   UNKNOWN  $9238           ; Unknown 9xxx instruction
$3D2    $52FE   UNKNOWN  $52FE           ; Unknown 5xxx instruction
$3D4    $D65D   DRW      V6, V5, #D      ; Draw 13-byte sprite at V6, V5
$3D6    $2239   CALL     $239            ; Call subroutine at 239
$3D8    $C6F4   RND      V6, #F4         ; V6 = random & F4
$3DA    $7ED2   ADD      VE, #D2         ; Add 210 to VE
$3DC    $2509   CALL     $509            ; Call subroutine at 509
$3DE    $17CA   JP       $7CA            ; Jump to 7CA
$3E0    $3183   SE       V1, #83         ; Skip if V1 == 131
$3E2    $1940   JP       $940            ; Jump to 940
$3E4    $2A16   CALL     $A16            ; Call subroutine at A16
$3E6    $2119   CALL     $119            ; Call subroutine at 119
$3E8    $8020   LD       V0, V2          ; V0 = V2
$3EA    $1B33   JP       $B33            ; Jump to B33
$3EC    $48E5   SNE      V8, #E5         ; Skip if V8 != 229
$3EE    $C461   RND      V4, #61         ; V4 = random & 61
$3F0    $992B   UNKNOWN  $992B           ; Unknown 9xxx instruction
$3F2    $1D0F   JP       $D0F            ; Jump to D0F
$3F4    $70E7   ADD      V0, #E7         ; Add 231 to V0
$3F6    $7701   ADD      V7, #01         ; Add 1 to V7
$3F8    $C762   RND      V7, #62         ; V7 = random & 62
$3FA    $38FD   SE       V8, #FD         ; Skip if V8 == 253
$3FC    $4F7F   SNE      VF, #7F         ; Skip if VF != 127
$3FE    $3DF7   SE       VD, #F7         ; Skip if VD == 247
$400    $CF89   RND      VF, #89         ; VF = random & 89
$402    $2983   CALL     $983            ; Call subroutine at 983
$404    $9CEA   UNKNOWN  $9CEA           ; Unknown 9xxx instruction
$406    $71B9   ADD      V1, #B9         ; Add 185 to V1
$408    $A22B   LD       I, $22B         ; Load 22B into I
$40A    $5DB8   UNKNOWN  $5DB8           ; Unknown 5xxx instruction
$40C    $A7CC   LD       I, $7CC         ; Load 7CC into I
$40E    $D49E   DRW      V4, V9, #E      ; Draw 14-byte sprite at V4, V9
$410    $C4BD   RND      V4, #BD         ; V4 = random & BD
$412    $0434   SYS      $434            ; System call to 434
$414    $6257   LD       V2, #57         ; Load 87 into V2
$416    $DD7D   DRW      VD, V7, #D      ; Draw 13-byte sprite at VD, V7
$418    $FC5C   UNKNOWN  FC5C            ; Unknown Fxxx instruction
$41A    $AEAC   LD       I, $EAC         ; Load EAC into I
$41C    $9EEA   UNKNOWN  $9EEA           ; Unknown 9xxx instruction
$41E    $4FF4   SNE      VF, #F4         ; Skip if VF != 244
$420    $F690   UNKNOWN  F690            ; Unknown Fxxx instruction
$422    $F62E   UNKNOWN  F62E            ; Unknown Fxxx instruction
$424    $3DC1   SE       VD, #C1         ; Skip if VD == 193
$426    $1A0D   JP       $A0D            ; Jump to A0D
$428    $6862   LD       V8, #62         ; Load 98 into V8
$42A    $89D7   SUBN     V9, VD          ; V9 = VD - V9, VF = !borrow
$42C    $E36D   UNKNOWN  $E36D           ; Unknown Exxx instruction
$42E    $7784   ADD      V7, #84         ; Add 132 to V7
$430    $CFD2   RND      VF, #D2         ; VF = random & D2
$432    $AFDB   LD       I, $FDB         ; Load FDB into I
$434    $E377   UNKNOWN  $E377           ; Unknown Exxx instruction
$436    $ACD9   LD       I, $CD9         ; Load CD9 into I
$438    $1A53   JP       $A53            ; Jump to A53
$43A    $3EDF   SE       VE, #DF         ; Skip if VE == 223
$43C    $3746   SE       V7, #46         ; Skip if V7 == 70
$43E    $A28E   LD       I, $28E         ; Load 28E into I
$440    $9385   UNKNOWN  $9385           ; Unknown 9xxx instruction
$442    $B83E   JP       V0, $83E        ; Jump to V0 + 83E
$444    $145D   JP       $45D            ; Jump to 45D
$446    $6B40   LD       VB, #40         ; Load 64 into VB
$448    $641E   LD       V4, #1E         ; Load 30 into V4
$44A    $D22A   DRW      V2, V2, #A      ; Draw 10-byte sprite at V2, V2
$44C    $7479   ADD      V4, #79         ; Add 121 to V4
$44E    $3EE8   SE       VE, #E8         ; Skip if VE == 232
$450    $C16B   RND      V1, #6B         ; V1 = random & 6B
$452    $8AF3   XOR      VA, VF          ; VA ^= VF
$454    $E074   UNKNOWN  $E074           ; Unknown Exxx instruction
$456    $54EB   UNKNOWN  $54EB           ; Unknown 5xxx instruction
$458    $65ED   LD       V5, #ED         ; Load 237 into V5
$45A    $E8DA   UNKNOWN  $E8DA           ; Unknown Exxx instruction
$45C    $C3C4   RND      V3, #C4         ; V3 = random & C4
$45E    $F115   LD       DT, V1          ; Delay timer = V1
$460    $C7D0   RND      V7, #D0         ; V7 = random & D0
$462    $DE59   DRW      VE, V5, #9      ; Draw 9-byte sprite at VE, V5
$464    $A3B7   LD       I, $3B7         ; Load 3B7 into I
$466    $7338   ADD      V3, #38         ; Add 56 to V3
$468    $70A1   ADD      V0, #A1         ; Add 161 to V0
$46A    $0F05   SYS      $F05            ; System call to F05
$46C    $1F04   JP       $F04            ; Jump to F04
$46E    $AE64   LD       I, $E64         ; Load E64 into I
$470    $21C5   CALL     $1C5            ; Call subroutine at 1C5
$472    $DC9C   DRW      VC, V9, #C      ; Draw 12-byte sprite at VC, V9
$474    $DFDE   DRW      VF, VD, #E      ; Draw 14-byte sprite at VF, VD
$476    $C179   RND      V1, #79         ; V1 = random & 79
$478    $15FC   JP       $5FC            ; Jump to 5FC
$47A    $77F8   ADD      V7, #F8         ; Add 248 to V7
$47C    $6137   LD       V1, #37         ; Load 55 into V1
$47E    $178F   JP       $78F            ; Jump to 78F
$480    $C570   RND      V5, #70         ; V5 = random & 70
$482    $6A6F   LD       VA, #6F         ; Load 111 into VA
$484    $BE83   JP       V0, $E83        ; Jump to V0 + E83
$486    $06FE   SYS      $6FE            ; System call to 6FE
$488    $27E9   CALL     $7E9            ; Call subroutine at 7E9
$48A    $E24B   UNKNOWN  $E24B           ; Unknown Exxx instruction
$48C    $7873   ADD      V8, #73         ; Add 115 to V8
$48E    $CD12   RND      VD, #12         ; VD = random & 12
$490    $7BF9   ADD      VB, #F9         ; Add 249 to VB
$492    $4F03   SNE      VF, #03         ; Skip if VF != 3
$494    $5265   UNKNOWN  $5265           ; Unknown 5xxx instruction
$496    $3281   SE       V2, #81         ; Skip if V2 == 129
$498    $6E5A   LD       VE, #5A         ; Load 90 into VE
$49A    $D623   DRW      V6, V2, #3      ; Draw 3-byte sprite at V6, V2
$49C    $71A6   ADD      V1, #A6         ; Add 166 to V1
$49E    $BF98   JP       V0, $F98        ; Jump to V0 + F98
$4A0    $EB65   UNKNOWN  $EB65           ; Unknown Exxx instruction
$4A2    $95BC   UNKNOWN  $95BC           ; Unknown 9xxx instruction
$4A4    $3863   SE       V8, #63         ; Skip if V8 == 99
$4A6    $621B   LD       V2, #1B         ; Load 27 into V2
$4A8    $101F   JP       $01F            ; Jump to 01F
$4AA    $9745   UNKNOWN  $9745           ; Unknown 9xxx instruction
$4AC    $C76C   RND      V7, #6C         ; V7 = random & 6C
$4AE    $5B17   UNKNOWN  $5B17           ; Unknown 5xxx instruction
$4B0    $540A   UNKNOWN  $540A           ; Unknown 5xxx instruction
$4B2    $8B7F   UNKNOWN  8B7F            ; Unknown 8xxx instruction
$4B4    $09BA   SYS      $9BA            ; System call to 9BA
$4B6    $B42D   JP       V0, $42D        ; Jump to V0 + 42D
$4B8    $3965   SE       V9, #65         ; Skip if V9 == 101
$4BA    $3FDD   SE       VF, #DD         ; Skip if VF == 221
$4BC    $CE8A   RND      VE, #8A         ; VE = random & 8A
$4BE    $07B0   SYS      $7B0            ; System call to 7B0
$4C0    $7D50   ADD      VD, #50         ; Add 80 to VD
$4C2    $DFF2   DRW      VF, VF, #2      ; Draw 2-byte sprite at VF, VF
$4C4    $77E3   ADD      V7, #E3         ; Add 227 to V7
$4C6    $525E   UNKNOWN  $525E           ; Unknown 5xxx instruction
$4C8    $8D8B   UNKNOWN  8D8B            ; Unknown 8xxx instruction
$4CA    $23DC   CALL     $3DC            ; Call subroutine at 3DC
$4CC    $9706   UNKNOWN  $9706           ; Unknown 9xxx instruction
$4CE    $7F6F   ADD      VF, #6F         ; Add 111 to VF
$4D0    $EB2C   UNKNOWN  $EB2C           ; Unknown Exxx instruction
$4D2    $1BBC   JP       $BBC            ; Jump to BBC
$4D4    $3696   SE       V6, #96         ; Skip if V6 == 150
$4D6    $A3E2   LD       I, $3E2         ; Load 3E2 into I
$4D8    $63BA   LD       V3, #BA         ; Load 186 into V3
$4DA    $6F73   LD       VF, #73         ; Load 115 into VF
$4DC    $9DB2   UNKNOWN  $9DB2           ; Unknown 9xxx instruction
$4DE    $6410   LD       V4, #10         ; Load 16 into V4
$4E0    $7CCA   ADD      VC, #CA         ; Add 202 to VC
$4E2    $A2CB   LD       I, $2CB         ; Load 2CB into I
$4E4    $1214   JP       $214            ; Jump to 214
$4E6    $005E   SYS      $05E            ; System call to 05E
$4E8    $D8CA   DRW      V8, VC, #A      ; Draw 10-byte sprite at V8, VC
$4EA    $EFC6   UNKNOWN  $EFC6           ; Unknown Exxx instruction
$4EC    $A78C   LD       I, $78C         ; Load 78C into I
$4EE    $CEE0   RND      VE, #E0         ; VE = random & E0
$4F0    $A1A2   LD       I, $1A2         ; Load 1A2 into I
$4F2    $6E83   LD       VE, #83         ; Load 131 into VE
$4F4    $B16F   JP       V0, $16F        ; Jump to V0 + 16F
$4F6    $DEDF   DRW      VE, VD, #F      ; Draw 15-byte sprite at VE, VD
$4F8    $DA39   DRW      VA, V3, #9      ; Draw 9-byte sprite at VA, V3
$4FA    $9541   UNKNOWN  $9541           ; Unknown 9xxx instruction
$4FC    $7BC6   ADD      VB, #C6         ; Add 198 to VB
$4FE    $75EA   ADD      V5, #EA         ; Add 234 to V5
$500    $D511   DRW      V5, V1, #1      ; Draw 1-byte sprite at V5, V1
$502    $824C   UNKNOWN  824C            ; Unknown 8xxx instruction
$504    $5FAB   UNKNOWN  $5FAB           ; Unknown 5xxx instruction
$506    $424E   SNE      V2, #4E         ; Skip if V2 != 78
$508    $8D3A   UNKNOWN  8D3A            ; Unknown 8xxx instruction
$50A    $5409   UNKNOWN  $5409           ; Unknown 5xxx instruction
$50C    $E3B3   UNKNOWN  $E3B3           ; Unknown Exxx instruction
$50E    $8DBB   UNKNOWN  8DBB            ; Unknown 8xxx instruction
$510    $ADFB   LD       I, $DFB         ; Load DFB into I
$512    $C2E7   RND      V2, #E7         ; V2 = random & E7
$514    $E365   UNKNOWN  $E365           ; Unknown Exxx instruction
$516    $C579   RND      V5, #79         ; V5 = random & 79
$518    $9CC4   UNKNOWN  $9CC4           ; Unknown 9xxx instruction
$51A    $1E5E   JP       $E5E            ; Jump to E5E
$51C    $1D0F   JP       $D0F            ; Jump to D0F
$51E    $28C4   CALL     $8C4            ; Call subroutine at 8C4
$520    $C484   RND      V4, #84         ; V4 = random & 84
$522    $DDB9   DRW      VD, VB, #9      ; Draw 9-byte sprite at VD, VB
$524    $D6C2   DRW      V6, VC, #2      ; Draw 2-byte sprite at V6, VC
$526    $2414   CALL     $414            ; Call subroutine at 414
$528    $2E8D   CALL     $E8D            ; Call subroutine at E8D
$52A    $121E   JP       $21E            ; Jump to 21E
$52C    $1737   JP       $737            ; Jump to 737
$52E    $262B   CALL     $62B            ; Call subroutine at 62B
$530    $CBBC   RND      VB, #BC         ; VB = random & BC
$532    $BF01   JP       V0, $F01        ; Jump to V0 + F01
$534    $26B8   CALL     $6B8            ; Call subroutine at 6B8
$536    $60EE   LD       V0, #EE         ; Load 238 into V0
$538    $7AFC   ADD      VA, #FC         ; Add 252 to VA
$53A    $986D   UNKNOWN  $986D           ; Unknown 9xxx instruction
$53C    $9363   UNKNOWN  $9363           ; Unknown 9xxx instruction
$53E    $F8E9   UNKNOWN  F8E9            ; Unknown Fxxx instruction
$540    $D4FE   DRW      V4, VF, #E      ; Draw 14-byte sprite at V4, VF
$542    $1E7A   JP       $E7A            ; Jump to E7A
$544    $E0E0   UNKNOWN  $E0E0           ; Unknown Exxx instruction
$546    $4B04   SNE      VB, #04         ; Skip if VB != 4
$548    $84B4   ADD      V4, VB          ; V4 += VB, VF = carry
$54A    $B618   JP       V0, $618        ; Jump to V0 + 618
$54C    $A276   LD       I, $276         ; Load 276 into I
$54E    $EDB7   UNKNOWN  $EDB7           ; Unknown Exxx instruction
$550    $F3DE   UNKNOWN  F3DE            ; Unknown Fxxx instruction
$552    $955C   UNKNOWN  $955C           ; Unknown 9xxx instruction
$554    $0A2D   SYS      $A2D            ; System call to A2D
$556    $6290   LD       V2, #90         ; Load 144 into V2
$558    $B966   JP       V0, $966        ; Jump to V0 + 966
$55A    $23F8   CALL     $3F8            ; Call subroutine at 3F8
$55C    $06B7   SYS      $6B7            ; System call to 6B7
$55E    $1E26   JP       $E26            ; Jump to E26
$560    $1ED8   JP       $ED8            ; Jump to ED8
$562    $0F00   SYS      $F00            ; System call to F00
$564    $4370   SNE      V3, #70         ; Skip if V3 != 112
$566    $6655   LD       V6, #55         ; Load 85 into V6
$568    $73C9   ADD      V3, #C9         ; Add 201 to V3
$56A    $7AE6   ADD      VA, #E6         ; Add 230 to VA
$56C    $975B   UNKNOWN  $975B           ; Unknown 9xxx instruction
$56E    $A6E1   LD       I, $6E1         ; Load 6E1 into I
$570    $4988   SNE      V9, #88         ; Skip if V9 != 136
$572    $AC29   LD       I, $C29         ; Load C29 into I
$574    $D4B3   DRW      V4, VB, #3      ; Draw 3-byte sprite at V4, VB
$576    $052B   SYS      $52B            ; System call to 52B
$578    $FDD0   UNKNOWN  FDD0            ; Unknown Fxxx instruction
$57A    $837F   UNKNOWN  837F            ; Unknown 8xxx instruction
$57C    $273F   CALL     $73F            ; Call subroutine at 73F
$57E    $A545   LD       I, $545         ; Load 545 into I
$580    $7A82   ADD      VA, #82         ; Add 130 to VA
$582    $AECF   LD       I, $ECF         ; Load ECF into I
$584    $96E2   UNKNOWN  $96E2           ; Unknown 9xxx instruction
$586    $01DB   SYS      $1DB            ; System call to 1DB
$588    $5CDA   UNKNOWN  $5CDA           ; Unknown 5xxx instruction
$58A    $3AE6   SE       VA, #E6         ; Skip if VA == 230
$58C    $114D   JP       $14D            ; Jump to 14D
$58E    $1D4E   JP       $D4E            ; Jump to D4E
$590    $A5F3   LD       I, $5F3         ; Load 5F3 into I
$592    $1C08   JP       $C08            ; Jump to C08
$594    $8EC0   LD       VE, VC          ; VE = VC
$596    $5D3F   UNKNOWN  $5D3F           ; Unknown 5xxx instruction
$598    $9D96   UNKNOWN  $9D96           ; Unknown 9xxx instruction
$59A    $AEC5   LD       I, $EC5         ; Load EC5 into I
$59C    $1D5F   JP       $D5F            ; Jump to D5F
$59E    $E60C   UNKNOWN  $E60C           ; Unknown Exxx instruction
$5A0    $0398   SYS      $398            ; System call to 398
$5A2    $7A3B   ADD      VA, #3B         ; Add 59 to VA
$5A4    $E3FD   UNKNOWN  $E3FD           ; Unknown Exxx instruction
$5A6    $B836   JP       V0, $836        ; Jump to V0 + 836
$5A8    $D939   DRW      V9, V3, #9      ; Draw 9-byte sprite at V9, V3
$5AA    $A2B8   LD       I, $2B8         ; Load 2B8 into I
$5AC    $A90A   LD       I, $90A         ; Load 90A into I
$5AE    $0898   SYS      $898            ; System call to 898
$5B0    $607F   LD       V0, #7F         ; Load 127 into V0
$5B2    $3FAD   SE       VF, #AD         ; Skip if VF == 173
$5B4    $F7F7   UNKNOWN  F7F7            ; Unknown Fxxx instruction
$5B6    $3970   SE       V9, #70         ; Skip if V9 == 112
$5B8    $40FA   SNE      V0, #FA         ; Skip if V0 != 250
$5BA    $9E8B   UNKNOWN  $9E8B           ; Unknown 9xxx instruction
$5BC    $A01F   LD       I, $01F         ; Load 01F into I
$5BE    $0B24   SYS      $B24            ; System call to B24
$5C0    $F8B2   UNKNOWN  F8B2            ; Unknown Fxxx instruction
$5C2    $D9E0   DRW      V9, VE, #0      ; Draw 0-byte sprite at V9, VE
$5C4    $C40D   RND      V4, #0D         ; V4 = random & 0D
$5C6    $6A7D   LD       VA, #7D         ; Load 125 into VA
$5C8    $48DE   SNE      V8, #DE         ; Skip if V8 != 222
$5CA    $BF65   JP       V0, $F65        ; Jump to V0 + F65
$5CC    $6C84   LD       VC, #84         ; Load 132 into VC
$5CE    $C0D8   RND      V0, #D8         ; V0 = random & D8
$5D0    $C609   RND      V6, #09         ; V6 = random & 09
$5D2    $43E4   SNE      V3, #E4         ; Skip if V3 != 228
$5D4    $0A44   SYS      $A44            ; System call to A44
$5D6    $E2BC   UNKNOWN  $E2BC           ; Unknown Exxx instruction
$5D8    $2D32   CALL     $D32            ; Call subroutine at D32
$5DA    $A345   LD       I, $345         ; Load 345 into I
$5DC    $8785   SUB      V7, V8          ; V7 -= V8, VF = !borrow
$5DE    $4BA8   SNE      VB, #A8         ; Skip if VB != 168
$5E0    $F7F8   UNKNOWN  F7F8            ; Unknown Fxxx instruction
$5E2    $F6E2   UNKNOWN  F6E2            ; Unknown Fxxx instruction
$5E4    $7696   ADD      V6, #96         ; Add 150 to V6
$5E6    $5C8D   UNKNOWN  $5C8D           ; Unknown 5xxx instruction
$5E8    $A477   LD       I, $477         ; Load 477 into I
$5EA    $E112   UNKNOWN  $E112           ; Unknown Exxx instruction
$5EC    $70C3   ADD      V0, #C3         ; Add 195 to V0
$5EE    $0AF4   SYS      $AF4            ; System call to AF4
$5F0    $ED58   UNKNOWN  $ED58           ; Unknown Exxx instruction
$5F2    $C6D5   RND      V6, #D5         ; V6 = random & D5
$5F4    $0F3C   SYS      $F3C            ; System call to F3C
$5F6    $0F94   SYS      $F94            ; System call to F94
$5F8    $65FA   LD       V5, #FA         ; Load 250 into V5
$5FA    $478C   SNE      V7, #8C         ; Skip if V7 != 140
$5FC    $CE96   RND      VE, #96         ; VE = random & 96
$5FE    $990F   UNKNOWN  $990F           ; Unknown 9xxx instruction
$600    $CA29   RND      VA, #29         ; VA = random & 29
$602    $79EB   ADD      V9, #EB         ; Add 235 to V9
$604    $39B0   SE       V9, #B0         ; Skip if V9 == 176
$606    $BCFF   JP       V0, $CFF        ; Jump to V0 + CFF
$608    $2196   CALL     $196            ; Call subroutine at 196
$60A    $8CB9   UNKNOWN  8CB9            ; Unknown 8xxx instruction
$60C    $5635   UNKNOWN  $5635           ; Unknown 5xxx instruction
$60E    $9C5F   UNKNOWN  $9C5F           ; Unknown 9xxx instruction
$610    $5667   UNKNOWN  $5667           ; Unknown 5xxx instruction
$612    $EA53   UNKNOWN  $EA53           ; Unknown Exxx instruction
$614    $D5FC   DRW      V5, VF, #C      ; Draw 12-byte sprite at V5, VF
$616    $4FAB   SNE      VF, #AB         ; Skip if VF != 171
$618    $68E9   LD       V8, #E9         ; Load 233 into V8
$61A    $6118   LD       V1, #18         ; Load 24 into V1
$61C    $F3F2   UNKNOWN  F3F2            ; Unknown Fxxx instruction
$61E    $6FC1   LD       VF, #C1         ; Load 193 into VF
$620    $519C   UNKNOWN  $519C           ; Unknown 5xxx instruction
$622    $6536   LD       V5, #36         ; Load 54 into V5
$624    $4543   SNE      V5, #43         ; Skip if V5 != 67
$626    $1366   JP       $366            ; Jump to 366
$628    $331A   SE       V3, #1A         ; Skip if V3 == 26
$62A    $B7A9   JP       V0, $7A9        ; Jump to V0 + 7A9
$62C    $F9E1   UNKNOWN  F9E1            ; Unknown Fxxx instruction
$62E    $F7BB   UNKNOWN  F7BB            ; Unknown Fxxx instruction
$630    $1E89   JP       $E89            ; Jump to E89
$632    $E937   UNKNOWN  $E937           ; Unknown Exxx instruction
$634    $DDAE   DRW      VD, VA, #E      ; Draw 14-byte sprite at VD, VA
$636    $52E0   SE       V2, VE          ; Skip if V2 == VE
$638    $84EE   SHL      V4              ; V4 <<= 1, VF = MSB
$63A    $A492   LD       I, $492         ; Load 492 into I
$63C    $7C37   ADD      VC, #37         ; Add 55 to VC
$63E    $9950   SNE      V9, V5          ; Skip if V9 != V5
$640    $BDA4   JP       V0, $DA4        ; Jump to V0 + DA4
$642    $74C4   ADD      V4, #C4         ; Add 196 to V4
$644    $282F   CALL     $82F            ; Call subroutine at 82F
$646    $6DA3   LD       VD, #A3         ; Load 163 into VD
$648    $1A19   JP       $A19            ; Jump to A19
$64A    $216A   CALL     $16A            ; Call subroutine at 16A
$64C    $03D3   SYS      $3D3            ; System call to 3D3
$64E    $276B   CALL     $76B            ; Call subroutine at 76B
$650    $C4C1   RND      V4, #C1         ; V4 = random & C1
$652    $A6DF   LD       I, $6DF         ; Load 6DF into I
$654    $A86F   LD       I, $86F         ; Load 86F into I
$656    $6B45   LD       VB, #45         ; Load 69 into VB
$658    $1E5D   JP       $E5D            ; Jump to E5D
$65A    $1AF8   JP       $AF8            ; Jump to AF8
$65C    $2C14   CALL     $C14            ; Call subroutine at C14
$65E    $0D97   SYS      $D97            ; System call to D97
$660    $5C55   UNKNOWN  $5C55           ; Unknown 5xxx instruction
$662    $85F7   SUBN     V5, VF          ; V5 = VF - V5, VF = !borrow
$664    $5935   UNKNOWN  $5935           ; Unknown 5xxx instruction
$666    $9EE8   UNKNOWN  $9EE8           ; Unknown 9xxx instruction
$668    $1B5E   JP       $B5E            ; Jump to B5E
$66A    $5BDC   UNKNOWN  $5BDC           ; Unknown 5xxx instruction
$66C    $30BB   SE       V0, #BB         ; Skip if V0 == 187
$66E    $2962   CALL     $962            ; Call subroutine at 962
$670    $0F30   SYS      $F30            ; System call to F30
$672    $FA1B   UNKNOWN  FA1B            ; Unknown Fxxx instruction
$674    $D798   DRW      V7, V9, #8      ; Draw 8-byte sprite at V7, V9
$676    $3B35   SE       VB, #35         ; Skip if VB == 53
$678    $F516   UNKNOWN  F516            ; Unknown Fxxx instruction
$67A    $90D0   SNE      V0, VD          ; Skip if V0 != VD
$67C    $13FE   JP       $3FE            ; Jump to 3FE
$67E    $7D9A   ADD      VD, #9A         ; Add 154 to VD
$680    $A90B   LD       I, $90B         ; Load 90B into I
$682    $C71F   RND      V7, #1F         ; V7 = random & 1F
$684    $97C5   UNKNOWN  $97C5           ; Unknown 9xxx instruction
$686    $C9E3   RND      V9, #E3         ; V9 = random & E3
$688    $FCB2   UNKNOWN  FCB2            ; Unknown Fxxx instruction
$68A    $3266   SE       V2, #66         ; Skip if V2 == 102
$68C    $F61A   UNKNOWN  F61A            ; Unknown Fxxx instruction
$68E    $5F74   UNKNOWN  $5F74           ; Unknown 5xxx instruction
$690    $C450   RND      V4, #50         ; V4 = random & 50
$692    $5F35   UNKNOWN  $5F35           ; Unknown 5xxx instruction
$694    $B7BC   JP       V0, $7BC        ; Jump to V0 + 7BC
$696    $D416   DRW      V4, V1, #6      ; Draw 6-byte sprite at V4, V1
$698    $975F   UNKNOWN  $975F           ; Unknown 9xxx instruction
$69A    $A5B1   LD       I, $5B1         ; Load 5B1 into I
$69C    $92FC   UNKNOWN  $92FC           ; Unknown 9xxx instruction
$69E    $290A   CALL     $90A            ; Call subroutine at 90A
$6A0    $5CD5   UNKNOWN  $5CD5           ; Unknown 5xxx instruction
$6A2    $4918   SNE      V9, #18         ; Skip if V9 != 24
$6A4    $7EA4   ADD      VE, #A4         ; Add 164 to VE
$6A6    $8B52   AND      VB, V5          ; VB &= V5
$6A8    $DE9B   DRW      VE, V9, #B      ; Draw 11-byte sprite at VE, V9
$6AA    $DB6B   DRW      VB, V6, #B      ; Draw 11-byte sprite at VB, V6
$6AC    $3EA5   SE       VE, #A5         ; Skip if VE == 165
$6AE    $8DF8   UNKNOWN  8DF8            ; Unknown 8xxx instruction
$6B0    $5491   UNKNOWN  $5491           ; Unknown 5xxx instruction
$6B2    $7254   ADD      V2, #54         ; Add 84 to V2
$6B4    $0C46   SYS      $C46            ; System call to C46
$6B6    $8C93   XOR      VC, V9          ; VC ^= V9
$6B8    $A4F9   LD       I, $4F9         ; Load 4F9 into I
$6BA    $A306   LD       I, $306         ; Load 306 into I
$6BC    $77EC   ADD      V7, #EC         ; Add 236 to V7
$6BE    $65E6   LD       V5, #E6         ; Load 230 into V5
$6C0    $DDAF   DRW      VD, VA, #F      ; Draw 15-byte sprite at VD, VA
$6C2    $30CB   SE       V0, #CB         ; Skip if V0 == 203
$6C4    $0244   SYS      $244            ; System call to 244
$6C6    $76B0   ADD      V6, #B0         ; Add 176 to V6
$6C8    $00F2   SYS      $0F2            ; System call to 0F2
$6CA    $51D0   SE       V1, VD          ; Skip if V1 == VD
$6CC    $B5E8   JP       V0, $5E8        ; Jump to V0 + 5E8
$6CE    $9EAE   UNKNOWN  $9EAE           ; Unknown 9xxx instruction
$6D0    $7366   ADD      V3, #66         ; Add 102 to V3
$6D2    $A97D   LD       I, $97D         ; Load 97D into I
$6D4    $0F30   SYS      $F30            ; System call to F30
$6D6    $5081   UNKNOWN  $5081           ; Unknown 5xxx instruction
$6D8    $905A   UNKNOWN  $905A           ; Unknown 9xxx instruction
$6DA    $510F   UNKNOWN  $510F           ; Unknown 5xxx instruction
$6DC    $AE45   LD       I, $E45         ; Load E45 into I
$6DE    $CFD4   RND      VF, #D4         ; VF = random & D4
$6E0    $93DA   UNKNOWN  $93DA           ; Unknown 9xxx instruction
$6E2    $2589   CALL     $589            ; Call subroutine at 589
$6E4    $6C21   LD       VC, #21         ; Load 33 into VC
$6E6    $2D0F   CALL     $D0F            ; Call subroutine at D0F
$6E8    $E0AD   UNKNOWN  $E0AD           ; Unknown Exxx instruction
$6EA    $8730   LD       V7, V3          ; V7 = V3
$6EC    $13AC   JP       $3AC            ; Jump to 3AC
$6EE    $51E8   UNKNOWN  $51E8           ; Unknown 5xxx instruction
$6F0    $B307   JP       V0, $307        ; Jump to V0 + 307
$6F2    $AEB8   LD       I, $EB8         ; Load EB8 into I
$6F4    $B624   JP       V0, $624        ; Jump to V0 + 624
$6F6    $EB6A   UNKNOWN  $EB6A           ; Unknown Exxx instruction
$6F8    $E9FD   UNKNOWN  $E9FD           ; Unknown Exxx instruction
$6FA    $BA53   JP       V0, $A53        ; Jump to V0 + A53
$6FC    $43F6   SNE      V3, #F6         ; Skip if V3 != 246
$6FE    $0C89   SYS      $C89            ; System call to C89
$700    $C151   RND      V1, #51         ; V1 = random & 51
$702    $62BB   LD       V2, #BB         ; Load 187 into V2
$704    $BB3C   JP       V0, $B3C        ; Jump to V0 + B3C
$706    $F842   UNKNOWN  F842            ; Unknown Fxxx instruction
$708    $DCB1   DRW      VC, VB, #1      ; Draw 1-byte sprite at VC, VB
$70A    $3928   SE       V9, #28         ; Skip if V9 == 40
$70C    $0D25   SYS      $D25            ; System call to D25
$70E    $9630   SNE      V6, V3          ; Skip if V6 != V3
$710    $A784   LD       I, $784         ; Load 784 into I
$712    $FBA7   UNKNOWN  FBA7            ; Unknown Fxxx instruction
$714    $83D4   ADD      V3, VD          ; V3 += VD, VF = carry
$716    $4965   SNE      V9, #65         ; Skip if V9 != 101
$718    $362E   SE       V6, #2E         ; Skip if V6 == 46
$71A    $CCB2   RND      VC, #B2         ; VC = random & B2
$71C    $1779   JP       $779            ; Jump to 779
$71E    $CCC1   RND      VC, #C1         ; VC = random & C1
$720    $8CF0   LD       VC, VF          ; VC = VF
$722    $B90B   JP       V0, $90B        ; Jump to V0 + 90B
$724    $C86C   RND      V8, #6C         ; V8 = random & 6C
$726    $E699   UNKNOWN  $E699           ; Unknown Exxx instruction
$728    $E92C   UNKNOWN  $E92C           ; Unknown Exxx instruction
$72A    $A615   LD       I, $615         ; Load 615 into I
$72C    $B455   JP       V0, $455        ; Jump to V0 + 455
$72E    $E71E   UNKNOWN  $E71E           ; Unknown Exxx instruction
$730    $F739   UNKNOWN  F739            ; Unknown Fxxx instruction
$732    $DBBE   DRW      VB, VB, #E      ; Draw 14-byte sprite at VB, VB
$734    $4C53   SNE      VC, #53         ; Skip if VC != 83
$736    $C08E   RND      V0, #8E         ; V0 = random & 8E
$738    $1424   JP       $424            ; Jump to 424
$73A    $D0F5   DRW      V0, VF, #5      ; Draw 5-byte sprite at V0, VF
$73C    $D574   DRW      V5, V7, #4      ; Draw 4-byte sprite at V5, V7
$73E    $30FB   SE       V0, #FB         ; Skip if V0 == 251
$740    $EFE4   UNKNOWN  $EFE4           ; Unknown Exxx instruction
$742    $34D4   SE       V4, #D4         ; Skip if V4 == 212
$744    $DE12   DRW      VE, V1, #2      ; Draw 2-byte sprite at VE, V1
$746    $882E   SHL      V8              ; V8 <<= 1, VF = MSB
$748    $519B   UNKNOWN  $519B           ; Unknown 5xxx instruction
$74A    $DF4D   DRW      VF, V4, #D      ; Draw 13-byte sprite at VF, V4
$74C    $96CA   UNKNOWN  $96CA           ; Unknown 9xxx instruction
$74E    $6BBA   LD       VB, #BA         ; Load 186 into VB
$750    $E224   UNKNOWN  $E224           ; Unknown Exxx instruction
$752    $A300   LD       I, $300         ; Load 300 into I
$754    $6046   LD       V0, #46         ; Load 70 into V0
$756    $E462   UNKNOWN  $E462           ; Unknown Exxx instruction
$758    $0439   SYS      $439            ; System call to 439
$75A    $FF33   LD       B, VF           ; Store BCD of VF at I, I+1, I+2
$75C    $07D5   SYS      $7D5            ; System call to 7D5
$75E    $DD20   DRW      VD, V2, #0      ; Draw 0-byte sprite at VD, V2
$760    $09A5   SYS      $9A5            ; System call to 9A5
$762    $9BE0   SNE      VB, VE          ; Skip if VB != VE
$764    $2F2B   CALL     $F2B            ; Call subroutine at F2B
$766    $F26E   UNKNOWN  F26E            ; Unknown Fxxx instruction
$768    $79F0   ADD      V9, #F0         ; Add 240 to V9
$76A    $2C97   CALL     $C97            ; Call subroutine at C97
$76C    $04BD   SYS      $4BD            ; System call to 4BD
$76E    $E0B2   UNKNOWN  $E0B2           ; Unknown Exxx instruction
$770    $5774   UNKNOWN  $5774           ; Unknown 5xxx instruction
$772    $21CE   CALL     $1CE            ; Call subroutine at 1CE
$774    $4690   SNE      V6, #90         ; Skip if V6 != 144
$776    $534C   UNKNOWN  $534C           ; Unknown 5xxx instruction
$778    $AE56   LD       I, $E56         ; Load E56 into I
$77A    $F990   UNKNOWN  F990            ; Unknown Fxxx instruction
$77C    $2CAD   CALL     $CAD            ; Call subroutine at CAD
$77E    $542F   UNKNOWN  $542F           ; Unknown 5xxx instruction
$780    $242E   CALL     $42E            ; Call subroutine at 42E
$782    $9EB0   SNE      VE, VB          ; Skip if VE != VB
$784    $E000   UNKNOWN  $E000           ; Unknown Exxx instruction
$786    $4EFD   SNE      VE, #FD         ; Skip if VE != 253
$788    $D7F3   DRW      V7, VF, #3      ; Draw 3-byte sprite at V7, VF
$78A    $6E89   LD       VE, #89         ; Load 137 into VE
$78C    $5898   UNKNOWN  $5898           ; Unknown 5xxx instruction
$78E    $20B6   CALL     $0B6            ; Call subroutine at 0B6
$790    $5030   SE       V0, V3          ; Skip if V0 == V3
$792    $6579   LD       V5, #79         ; Load 121 into V5
$794    $E7C3   UNKNOWN  $E7C3           ; Unknown Exxx instruction
$796    $D1BF   DRW      V1, VB, #F      ; Draw 15-byte sprite at V1, VB
$798    $EFBE   UNKNOWN  $EFBE           ; Unknown Exxx instruction
$79A    $CCB9   RND      VC, #B9         ; VC = random & B9
$79C    $EA20   UNKNOWN  $EA20           ; Unknown Exxx instruction
$79E    $F73A   UNKNOWN  F73A            ; Unknown Fxxx instruction
$7A0    $B77C   JP       V0, $77C        ; Jump to V0 + 77C
$7A2    $CD71   RND      VD, #71         ; VD = random & 71
$7A4    $799D   ADD      V9, #9D         ; Add 157 to V9
$7A6    $8BC3   XOR      VB, VC          ; VB ^= VC
$7A8    $4AFB   SNE      VA, #FB         ; Skip if VA != 251
$7AA    $BC4F   JP       V0, $C4F        ; Jump to V0 + C4F
$7AC    $BF83   JP       V0, $F83        ; Jump to V0 + F83
$7AE    $A8DB   LD       I, $8DB         ; Load 8DB into I
$7B0    $87FF   UNKNOWN  87FF            ; Unknown 8xxx instruction
$7B2    $6836   LD       V8, #36         ; Load 54 into V8
$7B4    $9DB7   UNKNOWN  $9DB7           ; Unknown 9xxx instruction
$7B6    $7F6A   ADD      VF, #6A         ; Add 106 to VF
$7B8    $5360   SE       V3, V6          ; Skip if V3 == V6
$7BA    $95D5   UNKNOWN  $95D5           ; Unknown 9xxx instruction
$7BC    $D2A0   DRW      V2, VA, #0      ; Draw 0-byte sprite at V2, VA
$7BE    $FFF0   UNKNOWN  FFF0            ; Unknown Fxxx instruction
$7C0    $862D   UNKNOWN  862D            ; Unknown 8xxx instruction
$7C2    $5C4C   UNKNOWN  $5C4C           ; Unknown 5xxx instruction
$7C4    $73AC   ADD      V3, #AC         ; Add 172 to V3
$7C6    $379B   SE       V7, #9B         ; Skip if V7 == 155
$7C8    $3EB2   SE       VE, #B2         ; Skip if VE == 178
$7CA    $BD44   JP       V0, $D44        ; Jump to V0 + D44
$7CC    $25BD   CALL     $5BD            ; Call subroutine at 5BD
$7CE    $9370   SNE      V3, V7          ; Skip if V3 != V7
$7D0    $CBAE   RND      VB, #AE         ; VB = random & AE
$7D2    $8C2A   UNKNOWN  8C2A            ; Unknown 8xxx instruction
$7D4    $D865   DRW      V8, V6, #5      ; Draw 5-byte sprite at V8, V6
$7D6    $3422   SE       V4, #22         ; Skip if V4 == 34
$7D8    $6994   LD       V9, #94         ; Load 148 into V9
$7DA    $537D   UNKNOWN  $537D           ; Unknown 5xxx instruction
$7DC    $72AA   ADD      V2, #AA         ; Add 170 to V2
$7DE    $CF26   RND      VF, #26         ; VF = random & 26
$7E0    $2751   CALL     $751            ; Call subroutine at 751
$7E2    $20D6   CALL     $0D6            ; Call subroutine at 0D6
$7E4    $19B3   JP       $9B3            ; Jump to 9B3
$7E6    $8E43   XOR      VE, V4          ; VE ^= V4
$7E8    $0CA5   SYS      $CA5            ; System call to CA5
$7EA    $BF3E   JP       V0, $F3E        ; Jump to V0 + F3E
$7EC    $57ED   UNKNOWN  $57ED           ; Unknown 5xxx instruction
$7EE    $52DE   UNKNOWN  $52DE           ; Unknown 5xxx instruction
$7F0    $0090   SYS      $090            ; System call to 090
$7F2    $C824   RND      V8, #24         ; V8 = random & 24
$7F4    $3B44   SE       VB, #44         ; Skip if VB == 68
$7F6    $2DAC   CALL     $DAC            ; Call subroutine at DAC
$7F8    $E103   UNKNOWN  $E103           ; Unknown Exxx instruction
$7FA    $A5C0   LD       I, $5C0         ; Load 5C0 into I
$7FC    $72DD   ADD      V2, #DD         ; Add 221 to V2
$7FE    $5DD7   UNKNOWN  $5DD7           ; Unknown 5xxx instruction
$800    $5167   UNKNOWN  $5167           ; Unknown 5xxx instruction
$802    $CEFD   RND      VE, #FD         ; VE = random & FD
$804    $17A7   JP       $7A7            ; Jump to 7A7
$806    $8036   SHR      V0              ; V0 >>= 1, VF = LSB
$808    $4685   SNE      V6, #85         ; Skip if V6 != 133
$80A    $193C   JP       $93C            ; Jump to 93C
$80C    $F3E6   UNKNOWN  F3E6            ; Unknown Fxxx instruction
$80E    $A645   LD       I, $645         ; Load 645 into I
$810    $4AFB   SNE      VA, #FB         ; Skip if VA != 251
$812    $AF9F   LD       I, $F9F         ; Load F9F into I
$814    $2638   CALL     $638            ; Call subroutine at 638
$816    $A11F   LD       I, $11F         ; Load 11F into I
$818    $9EE6   UNKNOWN  $9EE6           ; Unknown 9xxx instruction
$81A    $5072   UNKNOWN  $5072           ; Unknown 5xxx instruction
$81C    $5579   UNKNOWN  $5579           ; Unknown 5xxx instruction
$81E    $A35B   LD       I, $35B         ; Load 35B into I
$820    $AF0E   LD       I, $F0E         ; Load F0E into I
$822    $5C04   UNKNOWN  $5C04           ; Unknown 5xxx instruction
$824    $FFF6   UNKNOWN  FFF6            ; Unknown Fxxx instruction
$826    $8666   SHR      V6              ; V6 >>= 1, VF = LSB
$828    $F4EA   UNKNOWN  F4EA            ; Unknown Fxxx instruction
$82A    $88B7   SUBN     V8, VB          ; V8 = VB - V8, VF = !borrow
$82C    $C720   RND      V7, #20         ; V7 = random & 20
$82E    $ACBD   LD       I, $CBD         ; Load CBD into I
$830    $ED33   UNKNOWN  $ED33           ; Unknown Exxx instruction
$832    $43D3   SNE      V3, #D3         ; Skip if V3 != 211
$834    $1952   JP       $952            ; Jump to 952
$836    $7C7B   ADD      VC, #7B         ; Add 123 to VC
$838    $6AC1   LD       VA, #C1         ; Load 193 into VA
$83A    $058C   SYS      $58C            ; System call to 58C
$83C    $CC2F   RND      VC, #2F         ; VC = random & 2F
$83E    $65F5   LD       V5, #F5         ; Load 245 into V5
$840    $39AE   SE       V9, #AE         ; Skip if V9 == 174
$842    $0EE1   SYS      $EE1            ; System call to EE1
$844    $90BF   UNKNOWN  $90BF           ; Unknown 9xxx instruction
$846    $DD05   DRW      VD, V0, #5      ; Draw 5-byte sprite at VD, V0
$848    $F891   UNKNOWN  F891            ; Unknown Fxxx instruction
$84A    $2928   CALL     $928            ; Call subroutine at 928
$84C    $3360   SE       V3, #60         ; Skip if V3 == 96
$84E    $748A   ADD      V4, #8A         ; Add 138 to V4
$850    $94EC   UNKNOWN  $94EC           ; Unknown 9xxx instruction
$852    $EB4E   UNKNOWN  $EB4E           ; Unknown Exxx instruction
$854    $5DDC   UNKNOWN  $5DDC           ; Unknown 5xxx instruction
$856    $3A8B   SE       VA, #8B         ; Skip if VA == 139
$858    $21CE   CALL     $1CE            ; Call subroutine at 1CE
$85A    $2202   CALL     $202            ; Call subroutine at 202
$85C    $52E5   UNKNOWN  $52E5           ; Unknown 5xxx instruction
$85E    $2A57   CALL     $A57            ; Call subroutine at A57
$860    $2F47   CALL     $F47            ; Call subroutine at F47
$862    $FFFE   UNKNOWN  FFFE            ; Unknown Fxxx instruction
$864    $90B2   UNKNOWN  $90B2           ; Unknown 9xxx instruction
$866    $A3F1   LD       I, $3F1         ; Load 3F1 into I
$868    $DFEA   DRW      VF, VE, #A      ; Draw 10-byte sprite at VF, VE
$86A    $634F   LD       V3, #4F         ; Load 79 into V3
$86C    $E465   UNKNOWN  $E465           ; Unknown Exxx instruction
$86E    $C64A   RND      V6, #4A         ; V6 = random & 4A
$870    $A3CE   LD       I, $3CE         ; Load 3CE into I
$872    $5A04   UNKNOWN  $5A04           ; Unknown 5xxx instruction
$874    $77CE   ADD      V7, #CE         ; Add 206 to V7
$876    $EC28   UNKNOWN  $EC28           ; Unknown Exxx instruction
$878    $3DBF   SE       VD, #BF         ; Skip if VD == 191
$87A    $3975   SE       V9, #75         ; Skip if V9 == 117
$87C    $C16F   RND      V1, #6F         ; V1 = random & 6F
$87E    $D564   DRW      V5, V6, #4      ; Draw 4-byte sprite at V5, V6
$880    $1F23   JP       $F23            ; Jump to F23
$882    $2BA5   CALL     $BA5            ; Call subroutine at BA5
$884    $4A95   SNE      VA, #95         ; Skip if VA != 149
$886    $4A57   SNE      VA, #57         ; Skip if VA != 87
$888    $798A   ADD      V9, #8A         ; Add 138 to V9
$88A    $7563   ADD      V5, #63         ; Add 99 to V5
$88C    $0FE8   SYS      $FE8            ; System call to FE8
$88E    $9F8F   UNKNOWN  $9F8F           ; Unknown 9xxx instruction
$890    $3F35   SE       VF, #35         ; Skip if VF == 53
$892    $EE74   UNKNOWN  $EE74           ; Unknown Exxx instruction
$894    $4B80   SNE      VB, #80         ; Skip if VB != 128
$896    $7713   ADD      V7, #13         ; Add 19 to V7
$898    $4AEE   SNE      VA, #EE         ; Skip if VA != 238
$89A    $B524   JP       V0, $524        ; Jump to V0 + 524
$89C    $1840   JP       $840            ; Jump to 840
$89E    $A5A9   LD       I, $5A9         ; Load 5A9 into I
$8A0    $E950   UNKNOWN  $E950           ; Unknown Exxx instruction
$8A2    $58BD   UNKNOWN  $58BD           ; Unknown 5xxx instruction
$8A4    $002E   SYS      $02E            ; System call to 02E
$8A6    $449A   SNE      V4, #9A         ; Skip if V4 != 154
$8A8    $2B4B   CALL     $B4B            ; Call subroutine at B4B
$8AA    $7AC0   ADD      VA, #C0         ; Add 192 to VA
$8AC    $6A46   LD       VA, #46         ; Load 70 into VA
$8AE    $3FBC   SE       VF, #BC         ; Skip if VF == 188
$8B0    $DAA6   DRW      VA, VA, #6      ; Draw 6-byte sprite at VA, VA
$8B2    $B76B   JP       V0, $76B        ; Jump to V0 + 76B
$8B4    $D8DD   DRW      V8, VD, #D      ; Draw 13-byte sprite at V8, VD
$8B6    $1275   JP       $275            ; Jump to 275
$8B8    $251E   CALL     $51E            ; Call subroutine at 51E
$8BA    $F3DA   UNKNOWN  F3DA            ; Unknown Fxxx instruction
$8BC    $BC33   JP       V0, $C33        ; Jump to V0 + C33
$8BE    $FEED   UNKNOWN  FEED            ; Unknown Fxxx instruction
$8C0    $F34D   UNKNOWN  F34D            ; Unknown Fxxx instruction
$8C2    $01BD   SYS      $1BD            ; System call to 1BD
$8C4    $34E0   SE       V4, #E0         ; Skip if V4 == 224
$8C6    $806C   UNKNOWN  806C            ; Unknown 8xxx instruction
$8C8    $AD36   LD       I, $D36         ; Load D36 into I
$8CA    $D17E   DRW      V1, V7, #E      ; Draw 14-byte sprite at V1, V7
$8CC    $EEBC   UNKNOWN  $EEBC           ; Unknown Exxx instruction
$8CE    $AF21   LD       I, $F21         ; Load F21 into I
$8D0    $C958   RND      V9, #58         ; V9 = random & 58
$8D2    $386E   SE       V8, #6E         ; Skip if V8 == 110
$8D4    $3D13   SE       VD, #13         ; Skip if VD == 19
$8D6    $6A4B   LD       VA, #4B         ; Load 75 into VA
$8D8    $BEA5   JP       V0, $EA5        ; Jump to V0 + EA5
$8DA    $A047   LD       I, $047         ; Load 047 into I
$8DC    $1C33   JP       $C33            ; Jump to C33
$8DE    $48B7   SNE      V8, #B7         ; Skip if V8 != 183
$8E0    $1998   JP       $998            ; Jump to 998
$8E2    $A037   LD       I, $037         ; Load 037 into I
$8E4    $CF69   RND      VF, #69         ; VF = random & 69
$8E6    $9914   UNKNOWN  $9914           ; Unknown 9xxx instruction
$8E8    $65DE   LD       V5, #DE         ; Load 222 into V5
$8EA    $8A62   AND      VA, V6          ; VA &= V6
$8EC    $54DD   UNKNOWN  $54DD           ; Unknown 5xxx instruction
$8EE    $7C1A   ADD      VC, #1A         ; Add 26 to VC
$8F0    $ED1B   UNKNOWN  $ED1B           ; Unknown Exxx instruction
$8F2    $956D   UNKNOWN  $956D           ; Unknown 9xxx instruction
$8F4    $EB35   UNKNOWN  $EB35           ; Unknown Exxx instruction
$8F6    $8A69   UNKNOWN  8A69            ; Unknown 8xxx instruction
$8F8    $97CE   UNKNOWN  $97CE           ; Unknown 9xxx instruction
$8FA    $8878   UNKNOWN  8878            ; Unknown 8xxx instruction
$8FC    $5BC7   UNKNOWN  $5BC7           ; Unknown 5xxx instruction
$8FE    $15CF   JP       $5CF            ; Jump to 5CF
$900    $EDCD   UNKNOWN  $EDCD           ; Unknown Exxx instruction
$902    $9FAD   UNKNOWN  $9FAD           ; Unknown 9xxx instruction
$904    $DEE3   DRW      VE, VE, #3      ; Draw 3-byte sprite at VE, VE
$906    $A4C9   LD       I, $4C9         ; Load 4C9 into I
$908    $C3F5   RND      V3, #F5         ; V3 = random & F5
$90A    $C348   RND      V3, #48         ; V3 = random & 48
$90C    $BACD   JP       V0, $ACD        ; Jump to V0 + ACD
$90E    $9093   UNKNOWN  $9093           ; Unknown 9xxx instruction
$910    $A9C8   LD       I, $9C8         ; Load 9C8 into I
$912    $BAC8   JP       V0, $AC8        ; Jump to V0 + AC8
$914    $733C   ADD      V3, #3C         ; Add 60 to V3
$916    $4BC2   SNE      VB, #C2         ; Skip if VB != 194
$918    $9372   UNKNOWN  $9372           ; Unknown 9xxx instruction
$91A    $3A3F   SE       VA, #3F         ; Skip if VA == 63
$91C    $F41B   UNKNOWN  F41B            ; Unknown Fxxx instruction
$91E    $A197   LD       I, $197         ; Load 197 into I
$920    $B527   JP       V0, $527        ; Jump to V0 + 527
$922    $2FF1   CALL     $FF1            ; Call subroutine at FF1
$924    $035B   SYS      $35B            ; System call to 35B
$926    $A0D3   LD       I, $0D3         ; Load 0D3 into I
$928    $C082   RND      V0, #82         ; V0 = random & 82
$92A    $CC76   RND      VC, #76         ; VC = random & 76
$92C    $8347   SUBN     V3, V4          ; V3 = V4 - V3, VF = !borrow
$92E    $1ADF   JP       $ADF            ; Jump to ADF
$930    $DA03   DRW      VA, V0, #3      ; Draw 3-byte sprite at VA, V0
$932    $A83A   LD       I, $83A         ; Load 83A into I
$934    $5F7B   UNKNOWN  $5F7B           ; Unknown 5xxx instruction
$936    $91DE   UNKNOWN  $91DE           ; Unknown 9xxx instruction
$938    $FA31   UNKNOWN  FA31            ; Unknown Fxxx instruction
$93A    $05C7   SYS      $5C7            ; System call to 5C7
$93C    $4232   SNE      V2, #32         ; Skip if V2 != 50
$93E    $F0DC   UNKNOWN  F0DC            ; Unknown Fxxx instruction
$940    $AAFC   LD       I, $AFC         ; Load AFC into I
$942    $ACA4   LD       I, $CA4         ; Load CA4 into I
$944    $4E5D   SNE      VE, #5D         ; Skip if VE != 93
$946    $07FA   SYS      $7FA            ; System call to 7FA
$948    $421B   SNE      V2, #1B         ; Skip if V2 != 27
$94A    $BBCE   JP       V0, $BCE        ; Jump to V0 + BCE
$94C    $B344   JP       V0, $344        ; Jump to V0 + 344
$94E    $CCAF   RND      VC, #AF         ; VC = random & AF
$950    $7343   ADD      V3, #43         ; Add 67 to V3
$952    $425F   SNE      V2, #5F         ; Skip if V2 != 95
$954    $77C2   ADD      V7, #C2         ; Add 194 to V7
$956    $360E   SE       V6, #0E         ; Skip if V6 == 14
$958    $522B   UNKNOWN  $522B           ; Unknown 5xxx instruction
$95A    $7475   ADD      V4, #75         ; Add 117 to V4
$95C    $1D6C   JP       $D6C            ; Jump to D6C
$95E    $D095   DRW      V0, V9, #5      ; Draw 5-byte sprite at V0, V9
$960    $E89E   SKP      V8              ; Skip if key V8 pressed
$962    $5DF2   UNKNOWN  $5DF2           ; Unknown 5xxx instruction
$964    $174A   JP       $74A            ; Jump to 74A
$966    $E5F5   UNKNOWN  $E5F5           ; Unknown Exxx instruction
$968    $DDC2   DRW      VD, VC, #2      ; Draw 2-byte sprite at VD, VC
$96A    $3A78   SE       VA, #78         ; Skip if VA == 120
$96C    $3453   SE       V4, #53         ; Skip if V4 == 83
$96E    $B299   JP       V0, $299        ; Jump to V0 + 299
$970    $BF27   JP       V0, $F27        ; Jump to V0 + F27
$972    $B2B1   JP       V0, $2B1        ; Jump to V0 + 2B1
$974    $1D0E   JP       $D0E            ; Jump to D0E
$976    $F0CE   UNKNOWN  F0CE            ; Unknown Fxxx instruction
$978    $7B06   ADD      VB, #06         ; Add 6 to VB
$97A    $2CB1   CALL     $CB1            ; Call subroutine at CB1
$97C    $668C   LD       V6, #8C         ; Load 140 into V6
$97E    $A5F2   LD       I, $5F2         ; Load 5F2 into I
$980    $005A   SYS      $05A            ; System call to 05A
$982    $79DA   ADD      V9, #DA         ; Add 218 to V9
$984    $D2E8   DRW      V2, VE, #8      ; Draw 8-byte sprite at V2, VE
$986    $9B05   UNKNOWN  $9B05           ; Unknown 9xxx instruction
$988    $823C   UNKNOWN  823C            ; Unknown 8xxx instruction
$98A    $8B2F   UNKNOWN  8B2F            ; Unknown 8xxx instruction
$98C    $2061   CALL     $061            ; Call subroutine at 061
$98E    $6B6F   LD       VB, #6F         ; Load 111 into VB
$990    $BE87   JP       V0, $E87        ; Jump to V0 + E87
$992    $4140   SNE      V1, #40         ; Skip if V1 != 64
$994    $838C   UNKNOWN  838C            ; Unknown 8xxx instruction
$996    $FC96   UNKNOWN  FC96            ; Unknown Fxxx instruction
$998    $5DAE   UNKNOWN  $5DAE           ; Unknown 5xxx instruction
$99A    $9E8A   UNKNOWN  $9E8A           ; Unknown 9xxx instruction
$99C    $7BB9   ADD      VB, #B9         ; Add 185 to VB
$99E    $19B2   JP       $9B2            ; Jump to 9B2
$9A0    $9B7E   UNKNOWN  $9B7E           ; Unknown 9xxx instruction
$9A2    $A63F   LD       I, $63F         ; Load 63F into I
$9A4    $8D0B   UNKNOWN  8D0B            ; Unknown 8xxx instruction
$9A6    $90E2   UNKNOWN  $90E2           ; Unknown 9xxx instruction
$9A8    $3572   SE       V5, #72         ; Skip if V5 == 114
$9AA    $1261   JP       $261            ; Jump to 261
$9AC    $B606   JP       V0, $606        ; Jump to V0 + 606
$9AE    $B487   JP       V0, $487        ; Jump to V0 + 487
$9B0    $ABA7   LD       I, $BA7         ; Load BA7 into I
$9B2    $F6B1   UNKNOWN  F6B1            ; Unknown Fxxx instruction
$9B4    $A8A8   LD       I, $8A8         ; Load 8A8 into I
$9B6    $D0C8   DRW      V0, VC, #8      ; Draw 8-byte sprite at V0, VC
$9B8    $DAFC   DRW      VA, VF, #C      ; Draw 12-byte sprite at VA, VF
$9BA    $E265   UNKNOWN  $E265           ; Unknown Exxx instruction
$9BC    $F3C2   UNKNOWN  F3C2            ; Unknown Fxxx instruction
$9BE    $9F1B   UNKNOWN  $9F1B           ; Unknown 9xxx instruction
$9C0    $1F83   JP       $F83            ; Jump to F83
$9C2    $3E6C   SE       VE, #6C         ; Skip if VE == 108
$9C4    $E861   UNKNOWN  $E861           ; Unknown Exxx instruction
$9C6    $B4F1   JP       V0, $4F1        ; Jump to V0 + 4F1
$9C8    $8284   ADD      V2, V8          ; V2 += V8, VF = carry
$9CA    $0EA1   SYS      $EA1            ; System call to EA1
$9CC    $BE47   JP       V0, $E47        ; Jump to V0 + E47
$9CE    $3E05   SE       VE, #05         ; Skip if VE == 5
$9D0    $5F7C   UNKNOWN  $5F7C           ; Unknown 5xxx instruction
$9D2    $4E7E   SNE      VE, #7E         ; Skip if VE != 126
$9D4    $411F   SNE      V1, #1F         ; Skip if V1 != 31
$9D6    $F7A7   UNKNOWN  F7A7            ; Unknown Fxxx instruction
$9D8    $920E   UNKNOWN  $920E           ; Unknown 9xxx instruction
$9DA    $27CF   CALL     $7CF            ; Call subroutine at 7CF
$9DC    $81F2   AND      V1, VF          ; V1 &= VF
$9DE    $8BD2   AND      VB, VD          ; VB &= VD
$9E0    $CE9A   RND      VE, #9A         ; VE = random & 9A
$9E2    $A0AF   LD       I, $0AF         ; Load 0AF into I
$9E4    $CE3F   RND      VE, #3F         ; VE = random & 3F
$9E6    $901E   UNKNOWN  $901E           ; Unknown 9xxx instruction
$9E8    $E4AF   UNKNOWN  $E4AF           ; Unknown Exxx instruction
$9EA    $63D4   LD       V3, #D4         ; Load 212 into V3
$9EC    $7576   ADD      V5, #76         ; Add 118 to V5
$9EE    $48FA   SNE      V8, #FA         ; Skip if V8 != 250
$9F0    $46BF   SNE      V6, #BF         ; Skip if V6 != 191
$9F2    $0847   SYS      $847            ; System call to 847
$9F4    $86D6   SHR      V6              ; V6 >>= 1, VF = LSB
$9F6    $3DB4   SE       VD, #B4         ; Skip if VD == 180
$9F8    $4D6C   SNE      VD, #6C         ; Skip if VD != 108
$9FA    $5DE0   SE       VD, VE          ; Skip if VD == VE
$9FC    $0C5F   SYS      $C5F            ; System call to C5F
$9FE    $C6F3   RND      V6, #F3         ; V6 = random & F3
$A00    $8A11   OR       VA, V1          ; VA |= V1
$A02    $58C6   UNKNOWN  $58C6           ; Unknown 5xxx instruction
$A04    $5C9A   UNKNOWN  $5C9A           ; Unknown 5xxx instruction
$A06    $BF80   JP       V0, $F80        ; Jump to V0 + F80
$A08    $614F   LD       V1, #4F         ; Load 79 into V1
$A0A    $5F7A   UNKNOWN  $5F7A           ; Unknown 5xxx instruction
$A0C    $112C   JP       $12C            ; Jump to 12C
$A0E    $689C   LD       V8, #9C         ; Load 156 into V8
$A10    $5575   UNKNOWN  $5575           ; Unknown 5xxx instruction
$A12    $29B2   CALL     $9B2            ; Call subroutine at 9B2
$A14    $C1A1   RND      V1, #A1         ; V1 = random & A1
$A16    $1706   JP       $706            ; Jump to 706
$A18    $E403   UNKNOWN  $E403           ; Unknown Exxx instruction
$A1A    $AD0A   LD       I, $D0A         ; Load D0A into I
$A1C    $3CBB   SE       VC, #BB         ; Skip if VC == 187
$A1E    $0D86   SYS      $D86            ; System call to D86
$A20    $4745   SNE      V7, #45         ; Skip if V7 != 69
$A22    $FABF   UNKNOWN  FABF            ; Unknown Fxxx instruction
$A24    $19D2   JP       $9D2            ; Jump to 9D2
$A26    $2DC8   CALL     $DC8            ; Call subroutine at DC8
$A28    $DB0B   DRW      VB, V0, #B      ; Draw 11-byte sprite at VB, V0
$A2A    $E41C   UNKNOWN  $E41C           ; Unknown Exxx instruction
$A2C    $5DFB   UNKNOWN  $5DFB           ; Unknown 5xxx instruction
$A2E    $417A   SNE      V1, #7A         ; Skip if V1 != 122
$A30    $542A   UNKNOWN  $542A           ; Unknown 5xxx instruction
$A32    $A848   LD       I, $848         ; Load 848 into I
$A34    $7C98   ADD      VC, #98         ; Add 152 to VC
$A36    $473E   SNE      V7, #3E         ; Skip if V7 != 62
$A38    $7771   ADD      V7, #71         ; Add 113 to V7
$A3A    $99FF   UNKNOWN  $99FF           ; Unknown 9xxx instruction
$A3C    $F0CA   UNKNOWN  F0CA            ; Unknown Fxxx instruction
$A3E    $3A77   SE       VA, #77         ; Skip if VA == 119
$A40    $C81E   RND      V8, #1E         ; V8 = random & 1E
$A42    $7578   ADD      V5, #78         ; Add 120 to V5
$A44    $3430   SE       V4, #30         ; Skip if V4 == 48
$A46    $F3E3   UNKNOWN  F3E3            ; Unknown Fxxx instruction
$A48    $0C96   SYS      $C96            ; System call to C96
$A4A    $54D7   UNKNOWN  $54D7           ; Unknown 5xxx instruction
$A4C    $574E   UNKNOWN  $574E           ; Unknown 5xxx instruction
$A4E    $6113   LD       V1, #13         ; Load 19 into V1
$A50    $8617   SUBN     V6, V1          ; V6 = V1 - V6, VF = !borrow
$A52    $DF1D   DRW      VF, V1, #D      ; Draw 13-byte sprite at VF, V1
$A54    $E439   UNKNOWN  $E439           ; Unknown Exxx instruction
$A56    $4376   SNE      V3, #76         ; Skip if V3 != 118
$A58    $4EF3   SNE      VE, #F3         ; Skip if VE != 243
$A5A    $DF40   DRW      VF, V4, #0      ; Draw 0-byte sprite at VF, V4
$A5C    $BAB0   JP       V0, $AB0        ; Jump to V0 + AB0
$A5E    $C66C   RND      V6, #6C         ; V6 = random & 6C
$A60    $28E6   CALL     $8E6            ; Call subroutine at 8E6
$A62    $486F   SNE      V8, #6F         ; Skip if V8 != 111
$A64    $C9D0   RND      V9, #D0         ; V9 = random & D0
$A66    $445A   SNE      V4, #5A         ; Skip if V4 != 90
$A68    $5585   UNKNOWN  $5585           ; Unknown 5xxx instruction
$A6A    $1B86   JP       $B86            ; Jump to B86
$A6C    $72E6   ADD      V2, #E6         ; Add 230 to V2
$A6E    $F68B   UNKNOWN  F68B            ; Unknown Fxxx instruction
$A70    $ABAE   LD       I, $BAE         ; Load BAE into I
$A72    $478E   SNE      V7, #8E         ; Skip if V7 != 142
$A74    $8B52   AND      VB, V5          ; VB &= V5
$A76    $8E16   SHR      VE              ; VE >>= 1, VF = LSB
$A78    $07A9   SYS      $7A9            ; System call to 7A9
$A7A    $D89A   DRW      V8, V9, #A      ; Draw 10-byte sprite at V8, V9
$A7C    $9466   UNKNOWN  $9466           ; Unknown 9xxx instruction
$A7E    $74A3   ADD      V4, #A3         ; Add 163 to V4
$A80    $49BE   SNE      V9, #BE         ; Skip if V9 != 190
$A82    $457E   SNE      V5, #7E         ; Skip if V5 != 126
$A84    $2A97   CALL     $A97            ; Call subroutine at A97
$A86    $31D1   SE       V1, #D1         ; Skip if V1 == 209
$A88    $48CF   SNE      V8, #CF         ; Skip if V8 != 207
$A8A    $0F31   SYS      $F31            ; System call to F31
$A8C    $33FA   SE       V3, #FA         ; Skip if V3 == 250
$A8E    $9EC3   UNKNOWN  $9EC3           ; Unknown 9xxx instruction
$A90    $8D74   ADD      VD, V7          ; VD += V7, VF = carry
$A92    $62C9   LD       V2, #C9         ; Load 201 into V2
$A94    $1A12   JP       $A12            ; Jump to A12
$A96    $37E6   SE       V7, #E6         ; Skip if V7 == 230
$A98    $AD82   LD       I, $D82         ; Load D82 into I
$A9A    $6F6A   LD       VF, #6A         ; Load 106 into VF
$A9C    $0FA6   SYS      $FA6            ; System call to FA6
$A9E    $9D7F   UNKNOWN  $9D7F           ; Unknown 9xxx instruction
$AA0    $0246   SYS      $246            ; System call to 246
$AA2    $3792   SE       V7, #92         ; Skip if V7 == 146
$AA4    $CCBC   RND      VC, #BC         ; VC = random & BC
$AA6    $819C   UNKNOWN  819C            ; Unknown 8xxx instruction
$AA8    $62AE   LD       V2, #AE         ; Load 174 into V2
$AAA    $9C4A   UNKNOWN  $9C4A           ; Unknown 9xxx instruction
$AAC    $2287   CALL     $287            ; Call subroutine at 287
$AAE    $49B3   SNE      V9, #B3         ; Skip if V9 != 179
$AB0    $E225   UNKNOWN  $E225           ; Unknown Exxx instruction
$AB2    $2DC4   CALL     $DC4            ; Call subroutine at DC4
$AB4    $72C5   ADD      V2, #C5         ; Add 197 to V2
$AB6    $3A82   SE       VA, #82         ; Skip if VA == 130
$AB8    $5986   UNKNOWN  $5986           ; Unknown 5xxx instruction
$ABA    $166D   JP       $66D            ; Jump to 66D
$ABC    $5A6C   UNKNOWN  $5A6C           ; Unknown 5xxx instruction
$ABE    $EE98   UNKNOWN  $EE98           ; Unknown Exxx instruction
$AC0    $BEED   JP       V0, $EED        ; Jump to V0 + EED
$AC2    $45AB   SNE      V5, #AB         ; Skip if V5 != 171
$AC4    $43B3   SNE      V3, #B3         ; Skip if V3 != 179
$AC6    $95CD   UNKNOWN  $95CD           ; Unknown 9xxx instruction
$AC8    $F342   UNKNOWN  F342            ; Unknown Fxxx instruction
$ACA    $730A   ADD      V3, #0A         ; Add 10 to V3
$ACC    $D33C   DRW      V3, V3, #C      ; Draw 12-byte sprite at V3, V3
$ACE    $6448   LD       V4, #48         ; Load 72 into V4
$AD0    $DB2C   DRW      VB, V2, #C      ; Draw 12-byte sprite at VB, V2
$AD2    $27B7   CALL     $7B7            ; Call subroutine at 7B7
$AD4    $6124   LD       V1, #24         ; Load 36 into V1
$AD6    $4E3E   SNE      VE, #3E         ; Skip if VE != 62
$AD8    $5D91   UNKNOWN  $5D91           ; Unknown 5xxx instruction
$ADA    $D1D2   DRW      V1, VD, #2      ; Draw 2-byte sprite at V1, VD
$ADC    $C17D   RND      V1, #7D         ; V1 = random & 7D
$ADE    $E773   UNKNOWN  $E773           ; Unknown Exxx instruction
$AE0    $DA7D   DRW      VA, V7, #D      ; Draw 13-byte sprite at VA, V7
$AE2    $60F9   LD       V0, #F9         ; Load 249 into V0
$AE4    $EEAE   UNKNOWN  $EEAE           ; Unknown Exxx instruction
$AE6    $C716   RND      V7, #16         ; V7 = random & 16
$AE8    $48D2   SNE      V8, #D2         ; Skip if V8 != 210
$AEA    $D1B1   DRW      V1, VB, #1      ; Draw 1-byte sprite at V1, VB
$AEC    $5AEB   UNKNOWN  $5AEB           ; Unknown 5xxx instruction
$AEE    $C101   RND      V1, #01         ; V1 = random & 01
$AF0    $B7C2   JP       V0, $7C2        ; Jump to V0 + 7C2
$AF2    $B9EF   JP       V0, $9EF        ; Jump to V0 + 9EF
$AF4    $FA2E   UNKNOWN  FA2E            ; Unknown Fxxx instruction
$AF6    $0F0E   SYS      $F0E            ; System call to F0E
$AF8    $C427   RND      V4, #27         ; V4 = random & 27
$AFA    $4729   SNE      V7, #29         ; Skip if V7 != 41
$AFC    $AA95   LD       I, $A95         ; Load A95 into I
$AFE    $DD0A   DRW      VD, V0, #A      ; Draw 10-byte sprite at VD, V0
$B00    $C2DA   RND      V2, #DA         ; V2 = random & DA
$B02    $8C7B   UNKNOWN  8C7B            ; Unknown 8xxx instruction
$B04    $DD55   DRW      VD, V5, #5      ; Draw 5-byte sprite at VD, V5
$B06    $18B9   JP       $8B9            ; Jump to 8B9
$B08    $64EB   LD       V4, #EB         ; Load 235 into V4
$B0A    $8E1A   UNKNOWN  8E1A            ; Unknown 8xxx instruction
$B0C    $3689   SE       V6, #89         ; Skip if V6 == 137
$B0E    $4AD5   SNE      VA, #D5         ; Skip if VA != 213
$B10    $3458   SE       V4, #58         ; Skip if V4 == 88
$B12    $F9E7   UNKNOWN  F9E7            ; Unknown Fxxx instruction
$B14    $148B   JP       $48B            ; Jump to 48B
$B16    $2FD1   CALL     $FD1            ; Call subroutine at FD1
$B18    $CB81   RND      VB, #81         ; VB = random & 81
$B1A    $D17A   DRW      V1, V7, #A      ; Draw 10-byte sprite at V1, V7
$B1C    $58A8   UNKNOWN  $58A8           ; Unknown 5xxx instruction
$B1E    $5675   UNKNOWN  $5675           ; Unknown 5xxx instruction
$B20    $F5D8   UNKNOWN  F5D8            ; Unknown Fxxx instruction
$B22    $D7C7   DRW      V7, VC, #7      ; Draw 7-byte sprite at V7, VC
$B24    $6089   LD       V0, #89         ; Load 137 into V0
$B26    $2B2F   CALL     $B2F            ; Call subroutine at B2F
$B28    $3B52   SE       VB, #52         ; Skip if VB == 82
$B2A    $FAE0   UNKNOWN  FAE0            ; Unknown Fxxx instruction
$B2C    $BAB1   JP       V0, $AB1        ; Jump to V0 + AB1
$B2E    $E43A   UNKNOWN  $E43A           ; Unknown Exxx instruction
$B30    $A2B3   LD       I, $2B3         ; Load 2B3 into I
$B32    $2C86   CALL     $C86            ; Call subroutine at C86
$B34    $7986   ADD      V9, #86         ; Add 134 to V9
$B36    $7677   ADD      V6, #77         ; Add 119 to V6
$B38    $3075   SE       V0, #75         ; Skip if V0 == 117
$B3A    $C250   RND      V2, #50         ; V2 = random & 50
$B3C    $E5D0   UNKNOWN  $E5D0           ; Unknown Exxx instruction
$B3E    $6420   LD       V4, #20         ; Load 32 into V4
$B40    $0880   SYS      $880            ; System call to 880
$B42    $0618   SYS      $618            ; System call to 618
$B44    $008B   SYS      $08B            ; System call to 08B
$B46    $3F1B   SE       VF, #1B         ; Skip if VF == 27
$B48    $9970   SNE      V9, V7          ; Skip if V9 != V7
$B4A    $A606   LD       I, $606         ; Load 606 into I
$B4C    $D215   DRW      V2, V1, #5      ; Draw 5-byte sprite at V2, V1
$B4E    $E214   UNKNOWN  $E214           ; Unknown Exxx instruction
$B50    $A50A   LD       I, $50A         ; Load 50A into I
$B52    $AD5A   LD       I, $D5A         ; Load D5A into I
$B54    $8B03   XOR      VB, V0          ; VB ^= V0
$B56    $994C   UNKNOWN  $994C           ; Unknown 9xxx instruction
$B58    $6B02   LD       VB, #02         ; Load 2 into VB
$B5A    $BC66   JP       V0, $C66        ; Jump to V0 + C66
$B5C    $8641   OR       V6, V4          ; V6 |= V4
$B5E    $DB3E   DRW      VB, V3, #E      ; Draw 14-byte sprite at VB, V3
$B60    $2F0C   CALL     $F0C            ; Call subroutine at F0C
$B62    $8714   ADD      V7, V1          ; V7 += V1, VF = carry
$B64    $76AE   ADD      V6, #AE         ; Add 174 to V6
$B66    $EFA1   SKNP     VF              ; Skip if key VF not pressed
$B68    $2467   CALL     $467            ; Call subroutine at 467
$B6A    $4F6C   SNE      VF, #6C         ; Skip if VF != 108
$B6C    $4E9E   SNE      VE, #9E         ; Skip if VE != 158
$B6E    $6314   LD       V3, #14         ; Load 20 into V3
$B70    $1780   JP       $780            ; Jump to 780
$B72    $B150   JP       V0, $150        ; Jump to V0 + 150
$B74    $D380   DRW      V3, V8, #0      ; Draw 0-byte sprite at V3, V8
$B76    $4561   SNE      V5, #61         ; Skip if V5 != 97
$B78    $26B6   CALL     $6B6            ; Call subroutine at 6B6
$B7A    $E830   UNKNOWN  $E830           ; Unknown Exxx instruction
$B7C    $CD16   RND      VD, #16         ; VD = random & 16
$B7E    $7AD4   ADD      VA, #D4         ; Add 212 to VA
$B80    $3C01   SE       VC, #01         ; Skip if VC == 1
$B82    $A554   LD       I, $554         ; Load 554 into I
$B84    $9510   SNE      V5, V1          ; Skip if V5 != V1
$B86    $7359   ADD      V3, #59         ; Add 89 to V3
$B88    $3B31   SE       VB, #31         ; Skip if VB == 49
$B8A    $7E8D   ADD      VE, #8D         ; Add 141 to VE
$B8C    $C6B9   RND      V6, #B9         ; V6 = random & B9
$B8E    $42C1   SNE      V2, #C1         ; Skip if V2 != 193
$B90    $296F   CALL     $96F            ; Call subroutine at 96F
$B92    $8410   LD       V4, V1          ; V4 = V1
$B94    $725C   ADD      V2, #5C         ; Add 92 to V2
$B96    $89F2   AND      V9, VF          ; V9 &= VF
$B98    $1BF5   JP       $BF5            ; Jump to BF5
$B9A    $F222   UNKNOWN  F222            ; Unknown Fxxx instruction
$B9C    $AAD4   LD       I, $AD4         ; Load AD4 into I
$B9E    $7A6E   ADD      VA, #6E         ; Add 110 to VA
$BA0    $8317   SUBN     V3, V1          ; V3 = V1 - V3, VF = !borrow
$BA2    $88B7   SUBN     V8, VB          ; V8 = VB - V8, VF = !borrow
$BA4    $B1C7   JP       V0, $1C7        ; Jump to V0 + 1C7
$BA6    $780E   ADD      V8, #0E         ; Add 14 to V8
$BA8    $7361   ADD      V3, #61         ; Add 97 to V3
$BAA    $BF3D   JP       V0, $F3D        ; Jump to V0 + F3D
$BAC    $A340   LD       I, $340         ; Load 340 into I
$BAE    $71AF   ADD      V1, #AF         ; Add 175 to V1
$BB0    $646D   LD       V4, #6D         ; Load 109 into V4
$BB2    $1AFD   JP       $AFD            ; Jump to AFD
$BB4    $4403   SNE      V4, #03         ; Skip if V4 != 3
$BB6    $C65E   RND      V6, #5E         ; V6 = random & 5E
$BB8    $04AB   SYS      $4AB            ; System call to 4AB
$BBA    $A5B7   LD       I, $5B7         ; Load 5B7 into I
$BBC    $A085   LD       I, $085         ; Load 085 into I
$BBE    $E000   UNKNOWN  $E000           ; Unknown Exxx instruction
$BC0    $32F9   SE       V2, #F9         ; Skip if V2 == 249
$BC2    $58F7   UNKNOWN  $58F7           ; Unknown 5xxx instruction
$BC4    $D7B6   DRW      V7, VB, #6      ; Draw 6-byte sprite at V7, VB
$BC6    $2065   CALL     $065            ; Call subroutine at 065
$BC8    $4F88   SNE      VF, #88         ; Skip if VF != 136
$BCA    $8A70   LD       VA, V7          ; VA = V7
$BCC    $E96B   UNKNOWN  $E96B           ; Unknown Exxx instruction
$BCE    $4A0D   SNE      VA, #0D         ; Skip if VA != 13
$BD0    $E00A   UNKNOWN  $E00A           ; Unknown Exxx instruction
$BD2    $117A   JP       $17A            ; Jump to 17A
$BD4    $166C   JP       $66C            ; Jump to 66C
$BD6    $2593   CALL     $593            ; Call subroutine at 593
$BD8    $9E4A   UNKNOWN  $9E4A           ; Unknown 9xxx instruction
$BDA    $99EA   UNKNOWN  $99EA           ; Unknown 9xxx instruction
$BDC    $11E2   JP       $1E2            ; Jump to 1E2
$BDE    $5EA4   UNKNOWN  $5EA4           ; Unknown 5xxx instruction
$BE0    $7BF3   ADD      VB, #F3         ; Add 243 to VB
$BE2    $B173   JP       V0, $173        ; Jump to V0 + 173
$BE4    $E748   UNKNOWN  $E748           ; Unknown Exxx instruction
$BE6    $77ED   ADD      V7, #ED         ; Add 237 to V7
$BE8    $3645   SE       V6, #45         ; Skip if V6 == 69
$BEA    $6A77   LD       VA, #77         ; Load 119 into VA
$BEC    $FB6E   UNKNOWN  FB6E            ; Unknown Fxxx instruction
$BEE    $3DB3   SE       VD, #B3         ; Skip if VD == 179
$BF0    $A6EA   LD       I, $6EA         ; Load 6EA into I
$BF2    $C39D   RND      V3, #9D         ; V3 = random & 9D
$BF4    $5D81   UNKNOWN  $5D81           ; Unknown 5xxx instruction
$BF6    $5DBA   UNKNOWN  $5DBA           ; Unknown 5xxx instruction
$BF8    $334D   SE       V3, #4D         ; Skip if V3 == 77
$BFA    $1BD5   JP       $BD5            ; Jump to BD5
$BFC    $A28D   LD       I, $28D         ; Load 28D into I
$BFE    $4493   SNE      V4, #93         ; Skip if V4 != 147
$C00    $071B   SYS      $71B            ; System call to 71B
$C02    $CA34   RND      VA, #34         ; VA = random & 34
$C04    $CB56   RND      VB, #56         ; VB = random & 56
$C06    $62D3   LD       V2, #D3         ; Load 211 into V2
$C08    $BA5A   JP       V0, $A5A        ; Jump to V0 + A5A
$C0A    $2ABE   CALL     $ABE            ; Call subroutine at ABE
$C0C    $6E86   LD       VE, #86         ; Load 134 into VE
$C0E    $E90B   UNKNOWN  $E90B           ; Unknown Exxx instruction
$C10    $771A   ADD      V7, #1A         ; Add 26 to V7
$C12    $73CA   ADD      V3, #CA         ; Add 202 to V3
$C14    $1505   JP       $505            ; Jump to 505
$C16    $FB47   UNKNOWN  FB47            ; Unknown Fxxx instruction
$C18    $80B0   LD       V0, VB          ; V0 = VB
$C1A    $13E2   JP       $3E2            ; Jump to 3E2
$C1C    $674F   LD       V7, #4F         ; Load 79 into V7
$C1E    $F6F2   UNKNOWN  F6F2            ; Unknown Fxxx instruction
$C20    $EA38   UNKNOWN  $EA38           ; Unknown Exxx instruction
$C22    $410C   SNE      V1, #0C         ; Skip if V1 != 12
$C24    $2256   CALL     $256            ; Call subroutine at 256
$C26    $6676   LD       V6, #76         ; Load 118 into V6
$C28    $C24F   RND      V2, #4F         ; V2 = random & 4F
$C2A    $2CF9   CALL     $CF9            ; Call subroutine at CF9
$C2C    $83AA   UNKNOWN  83AA            ; Unknown 8xxx instruction
$C2E    $9C62   UNKNOWN  $9C62           ; Unknown 9xxx instruction
$C30    $7BD3   ADD      VB, #D3         ; Add 211 to VB
$C32    $221C   CALL     $21C            ; Call subroutine at 21C
$C34    $2B6E   CALL     $B6E            ; Call subroutine at B6E
$C36    $3664   SE       V6, #64         ; Skip if V6 == 100
$C38    $45FF   SNE      V5, #FF         ; Skip if V5 != 255
$C3A    $F493   UNKNOWN  F493            ; Unknown Fxxx instruction
$C3C    $F4E3   UNKNOWN  F4E3            ; Unknown Fxxx instruction
$C3E    $32F1   SE       V2, #F1         ; Skip if V2 == 241
$C40    $A123   LD       I, $123         ; Load 123 into I
$C42    $AE12   LD       I, $E12         ; Load E12 into I
$C44    $E5BC   UNKNOWN  $E5BC           ; Unknown Exxx instruction
$C46    $0A18   SYS      $A18            ; System call to A18
$C48    $95D4   UNKNOWN  $95D4           ; Unknown 9xxx instruction
$C4A    $8EB1   OR       VE, VB          ; VE |= VB
$C4C    $6110   LD       V1, #10         ; Load 16 into V1
$C4E    $3CCD   SE       VC, #CD         ; Skip if VC == 205
$C50    $2129   CALL     $129            ; Call subroutine at 129
$C52    $CDE8   RND      VD, #E8         ; VD = random & E8
$C54    $BCA5   JP       V0, $CA5        ; Jump to V0 + CA5
$C56    $2449   CALL     $449            ; Call subroutine at 449
$C58    $45B7   SNE      V5, #B7         ; Skip if V5 != 183
$C5A    $6409   LD       V4, #09         ; Load 9 into V4
$C5C    $EF76   UNKNOWN  $EF76           ; Unknown Exxx instruction
$C5E    $00D1   SYS      $0D1            ; System call to 0D1
$C60    $9585   UNKNOWN  $9585           ; Unknown 9xxx instruction
$C62    $BF88   JP       V0, $F88        ; Jump to V0 + F88
$C64    $955D   UNKNOWN  $955D           ; Unknown 9xxx instruction
$C66    $D464   DRW      V4, V6, #4      ; Draw 4-byte sprite at V4, V6
$C68    $C558   RND      V5, #58         ; V5 = random & 58
$C6A    $8A24   ADD      VA, V2          ; VA += V2, VF = carry
$C6C    $D9B4   DRW      V9, VB, #4      ; Draw 4-byte sprite at V9, VB
$C6E    $461C   SNE      V6, #1C         ; Skip if V6 != 28
$C70    $83EA   UNKNOWN  83EA            ; Unknown 8xxx instruction
$C72    $474E   SNE      V7, #4E         ; Skip if V7 != 78
$C74    $F9B1   UNKNOWN  F9B1            ; Unknown Fxxx instruction
$C76    $0694   SYS      $694            ; System call to 694
$C78    $098A   SYS      $98A            ; System call to 98A
$C7A    $8D34   ADD      VD, V3          ; VD += V3, VF = carry
$C7C    $ACDE   LD       I, $CDE         ; Load CDE into I
$C7E    $1EA4   JP       $EA4            ; Jump to EA4
$C80    $5521   UNKNOWN  $5521           ; Unknown 5xxx instruction
$C82    $0F4E   SYS      $F4E            ; System call to F4E
$C84    $794A   ADD      V9, #4A         ; Add 74 to V9
$C86    $0639   SYS      $639            ; System call to 639
$C88    $4490   SNE      V4, #90         ; Skip if V4 != 144
$C8A    $CCDE   RND      VC, #DE         ; VC = random & DE
$C8C    $1AFD   JP       $AFD            ; Jump to AFD
$C8E    $84F1   OR       V4, VF          ; V4 |= VF
$C90    $3A61   SE       VA, #61         ; Skip if VA == 97
$C92    $21B8   CALL     $1B8            ; Call subroutine at 1B8
$C94    $7405   ADD      V4, #05         ; Add 5 to V4
$C96    $F713   UNKNOWN  F713            ; Unknown Fxxx instruction
$C98    $5F50   SE       VF, V5          ; Skip if VF == V5
$C9A    $4FE7   SNE      VF, #E7         ; Skip if VF != 231
$C9C    $1D32   JP       $D32            ; Jump to D32
$C9E    $1E55   JP       $E55            ; Jump to E55
$CA0    $C918   RND      V9, #18         ; V9 = random & 18
$CA2    $6724   LD       V7, #24         ; Load 36 into V7
$CA4    $530A   UNKNOWN  $530A           ; Unknown 5xxx instruction
$CA6    $C98C   RND      V9, #8C         ; V9 = random & 8C
$CA8    $58A7   UNKNOWN  $58A7           ; Unknown 5xxx instruction
$CAA    $AA08   LD       I, $A08         ; Load A08 into I
$CAC    $22CE   CALL     $2CE            ; Call subroutine at 2CE
$CAE    $10FF   JP       $0FF            ; Jump to 0FF
$CB0    $A70A   LD       I, $70A         ; Load 70A into I
$CB2    $AB97   LD       I, $B97         ; Load B97 into I
$CB4    $A59E   LD       I, $59E         ; Load 59E into I
$CB6    $A7E0   LD       I, $7E0         ; Load 7E0 into I
$CB8    $0737   SYS      $737            ; System call to 737
$CBA    $ED88   UNKNOWN  $ED88           ; Unknown Exxx instruction
$CBC    $72DC   ADD      V2, #DC         ; Add 220 to V2
$CBE    $56AF   UNKNOWN  $56AF           ; Unknown 5xxx instruction
$CC0    $FF32   UNKNOWN  FF32            ; Unknown Fxxx instruction
$CC2    $61A9   LD       V1, #A9         ; Load 169 into V1
$CC4    $8442   AND      V4, V4          ; V4 &= V4
$CC6    $A64F   LD       I, $64F         ; Load 64F into I
$CC8    $0966   SYS      $966            ; System call to 966
$CCA    $0466   SYS      $466            ; System call to 466
$CCC    $55F2   UNKNOWN  $55F2           ; Unknown 5xxx instruction
$CCE    $6D98   LD       VD, #98         ; Load 152 into VD
$CD0    $F21A   UNKNOWN  F21A            ; Unknown Fxxx instruction
$CD2    $7B51   ADD      VB, #51         ; Add 81 to VB
$CD4    $1DE1   JP       $DE1            ; Jump to DE1
$CD6    $51A5   UNKNOWN  $51A5           ; Unknown 5xxx instruction
$CD8    $FCD9   UNKNOWN  FCD9            ; Unknown Fxxx instruction
$CDA    $1FB4   JP       $FB4            ; Jump to FB4
$CDC    $7305   ADD      V3, #05         ; Add 5 to V3
$CDE    $E724   UNKNOWN  $E724           ; Unknown Exxx instruction
$CE0    $9998   UNKNOWN  $9998           ; Unknown 9xxx instruction
$CE2    $C5DE   RND      V5, #DE         ; V5 = random & DE
$CE4    $DFB9   DRW      VF, VB, #9      ; Draw 9-byte sprite at VF, VB
$CE6    $F0B5   UNKNOWN  F0B5            ; Unknown Fxxx instruction
$CE8    $036D   SYS      $36D            ; System call to 36D
$CEA    $78C6   ADD      V8, #C6         ; Add 198 to V8
$CEC    $9D15   UNKNOWN  $9D15           ; Unknown 9xxx instruction
$CEE    $71DA   ADD      V1, #DA         ; Add 218 to V1
$CF0    $939C   UNKNOWN  $939C           ; Unknown 9xxx instruction
$CF2    $E17B   UNKNOWN  $E17B           ; Unknown Exxx instruction
$CF4    $E628   UNKNOWN  $E628           ; Unknown Exxx instruction
$CF6    $56C9   UNKNOWN  $56C9           ; Unknown 5xxx instruction
$CF8    $4865   SNE      V8, #65         ; Skip if V8 != 101
$CFA    $872D   UNKNOWN  872D            ; Unknown 8xxx instruction
$CFC    $B664   JP       V0, $664        ; Jump to V0 + 664
$CFE    $B900   JP       V0, $900        ; Jump to V0 + 900
$D00    $232A   CALL     $32A            ; Call subroutine at 32A
$D02    $1394   JP       $394            ; Jump to 394
$D04    $FB11   UNKNOWN  FB11            ; Unknown Fxxx instruction
$D06    $31C5   SE       V1, #C5         ; Skip if V1 == 197
$D08    $0CAA   SYS      $CAA            ; System call to CAA
$D0A    $0CA0   SYS      $CA0            ; System call to CA0
$D0C    $E27B   UNKNOWN  $E27B           ; Unknown Exxx instruction
$D0E    $5B1B   UNKNOWN  $5B1B           ; Unknown 5xxx instruction
$D10    $16FA   JP       $6FA            ; Jump to 6FA
$D12    $270C   CALL     $70C            ; Call subroutine at 70C
$D14    $B03C   JP       V0, $03C        ; Jump to V0 + 03C
$D16    $AAF6   LD       I, $AF6         ; Load AF6 into I
$D18    $3874   SE       V8, #74         ; Skip if V8 == 116
$D1A    $5B7B   UNKNOWN  $5B7B           ; Unknown 5xxx instruction
$D1C    $D94B   DRW      V9, V4, #B      ; Draw 11-byte sprite at V9, V4
$D1E    $6F13   LD       VF, #13         ; Load 19 into VF
$D20    $135C   JP       $35C            ; Jump to 35C
$D22    $F523   UNKNOWN  F523            ; Unknown Fxxx instruction
$D24    $BD6D   JP       V0, $D6D        ; Jump to V0 + D6D
$D26    $B7B3   JP       V0, $7B3        ; Jump to V0 + 7B3
$D28    $5917   UNKNOWN  $5917           ; Unknown 5xxx instruction
$D2A    $5566   UNKNOWN  $5566           ; Unknown 5xxx instruction
$D2C    $9AD1   UNKNOWN  $9AD1           ; Unknown 9xxx instruction
$D2E    $3EC5   SE       VE, #C5         ; Skip if VE == 197
$D30    $727F   ADD      V2, #7F         ; Add 127 to V2
$D32    $8112   AND      V1, V1          ; V1 &= V1
$D34    $2792   CALL     $792            ; Call subroutine at 792
$D36    $185B   JP       $85B            ; Jump to 85B
$D38    $F5E6   UNKNOWN  F5E6            ; Unknown Fxxx instruction
$D3A    $BA08   JP       V0, $A08        ; Jump to V0 + A08
$D3C    $9BAA   UNKNOWN  $9BAA           ; Unknown 9xxx instruction
$D3E    $CC85   RND      VC, #85         ; VC = random & 85
$D40    $D5FF   DRW      V5, VF, #F      ; Draw 15-byte sprite at V5, VF
$D42    $814A   UNKNOWN  814A            ; Unknown 8xxx instruction
$D44    $DC44   DRW      VC, V4, #4      ; Draw 4-byte sprite at VC, V4
$D46    $9ADB   UNKNOWN  $9ADB           ; Unknown 9xxx instruction
$D48    $823D   UNKNOWN  823D            ; Unknown 8xxx instruction
$D4A    $42E1   SNE      V2, #E1         ; Skip if V2 != 225
$D4C    $4A00   SNE      VA, #00         ; Skip if VA != 0
$D4E    $3E92   SE       VE, #92         ; Skip if VE == 146
$D50    $1BE2   JP       $BE2            ; Jump to BE2
$D52    $37BB   SE       V7, #BB         ; Skip if V7 == 187
$D54    $EEBC   UNKNOWN  $EEBC           ; Unknown Exxx instruction
$D56    $D0C6   DRW      V0, VC, #6      ; Draw 6-byte sprite at V0, VC
$D58    $356E   SE       V5, #6E         ; Skip if V5 == 110
$D5A    $35C0   SE       V5, #C0         ; Skip if V5 == 192
$D5C    $4B3E   SNE      VB, #3E         ; Skip if VB != 62
$D5E    $0A20   SYS      $A20            ; System call to A20
$D60    $1993   JP       $993            ; Jump to 993
$D62    $33EC   SE       V3, #EC         ; Skip if V3 == 236
$D64    $AE93   LD       I, $E93         ; Load E93 into I
$D66    $A0C1   LD       I, $0C1         ; Load 0C1 into I
$D68    $DA45   DRW      VA, V4, #5      ; Draw 5-byte sprite at VA, V4
$D6A    $73CF   ADD      V3, #CF         ; Add 207 to V3
$D6C    $51AF   UNKNOWN  $51AF           ; Unknown 5xxx instruction
$D6E    $762E   ADD      V6, #2E         ; Add 46 to V6
$D70    $5BB7   UNKNOWN  $5BB7           ; Unknown 5xxx instruction
$D72    $5F72   UNKNOWN  $5F72           ; Unknown 5xxx instruction
$D74    $C5BA   RND      V5, #BA         ; V5 = random & BA
$D76    $B895   JP       V0, $895        ; Jump to V0 + 895
$D78    $D8C2   DRW      V8, VC, #2      ; Draw 2-byte sprite at V8, VC
$D7A    $1572   JP       $572            ; Jump to 572
$D7C    $132B   JP       $32B            ; Jump to 32B
$D7E    $8EF2   AND      VE, VF          ; VE &= VF
$D80    $8E77   SUBN     VE, V7          ; VE = V7 - VE, VF = !borrow
$D82    $06A0   SYS      $6A0            ; System call to 6A0
$D84    $D1D6   DRW      V1, VD, #6      ; Draw 6-byte sprite at V1, VD
$D86    $2546   CALL     $546            ; Call subroutine at 546
$D88    $B403   JP       V0, $403        ; Jump to V0 + 403
$D8A    $16D1   JP       $6D1            ; Jump to 6D1
$D8C    $591E   UNKNOWN  $591E           ; Unknown 5xxx instruction
$D8E    $A412   LD       I, $412         ; Load 412 into I
$D90    $30DB   SE       V0, #DB         ; Skip if V0 == 219
$D92    $CC16   RND      VC, #16         ; VC = random & 16
$D94    $0531   SYS      $531            ; System call to 531
$D96    $E926   UNKNOWN  $E926           ; Unknown Exxx instruction
$D98    $C51C   RND      V5, #1C         ; V5 = random & 1C
$D9A    $6CD2   LD       VC, #D2         ; Load 210 into VC
$D9C    $6304   LD       V3, #04         ; Load 4 into V3
$D9E    $BE05   JP       V0, $E05        ; Jump to V0 + E05
$DA0    $2113   CALL     $113            ; Call subroutine at 113
$DA2    $8780   LD       V7, V8          ; V7 = V8
$DA4    $FE15   LD       DT, VE          ; Delay timer = VE
$DA6    $07BD   SYS      $7BD            ; System call to 7BD
$DA8    $4D7F   SNE      VD, #7F         ; Skip if VD != 127
$DAA    $967A   UNKNOWN  $967A           ; Unknown 9xxx instruction
$DAC    $B0F6   JP       V0, $0F6        ; Jump to V0 + 0F6
$DAE    $4718   SNE      V7, #18         ; Skip if V7 != 24
$DB0    $80BD   UNKNOWN  80BD            ; Unknown 8xxx instruction
$DB2    $8C13   XOR      VC, V1          ; VC ^= V1
$DB4    $63CE   LD       V3, #CE         ; Load 206 into V3
$DB6    $B02A   JP       V0, $02A        ; Jump to V0 + 02A
$DB8    $0801   SYS      $801            ; System call to 801
$DBA    $7CDA   ADD      VC, #DA         ; Add 218 to VC
$DBC    $A33C   LD       I, $33C         ; Load 33C into I
$DBE    $F460   UNKNOWN  F460            ; Unknown Fxxx instruction
$DC0    $3957   SE       V9, #57         ; Skip if V9 == 87
$DC2    $94FB   UNKNOWN  $94FB           ; Unknown 9xxx instruction
$DC4    $8D4A   UNKNOWN  8D4A            ; Unknown 8xxx instruction
$DC6    $21FB   CALL     $1FB            ; Call subroutine at 1FB
$DC8    $791E   ADD      V9, #1E         ; Add 30 to V9
$DCA    $E482   UNKNOWN  $E482           ; Unknown Exxx instruction
$DCC    $1B3F   JP       $B3F            ; Jump to B3F
$DCE    $3827   SE       V8, #27         ; Skip if V8 == 39
$DD0    $8F9C   UNKNOWN  8F9C            ; Unknown 8xxx instruction
$DD2    $007C   SYS      $07C            ; System call to 07C
$DD4    $5F69   UNKNOWN  $5F69           ; Unknown 5xxx instruction
$DD6    $FCD3   UNKNOWN  FCD3            ; Unknown Fxxx instruction
$DD8    $702E   ADD      V0, #2E         ; Add 46 to V0
$DDA    $7A4C   ADD      VA, #4C         ; Add 76 to VA
$DDC    $2023   CALL     $023            ; Call subroutine at 023
$DDE    $5B79   UNKNOWN  $5B79           ; Unknown 5xxx instruction
$DE0    $3AEE   SE       VA, #EE         ; Skip if VA == 238
$DE2    $00D3   SYS      $0D3            ; System call to 0D3
$DE4    $8F55   SUB      VF, V5          ; VF -= V5, VF = !borrow
$DE6    $B908   JP       V0, $908        ; Jump to V0 + 908
$DE8    $222E   CALL     $22E            ; Call subroutine at 22E
$DEA    $48A7   SNE      V8, #A7         ; Skip if V8 != 167
$DEC    $902D   UNKNOWN  $902D           ; Unknown 9xxx instruction
$DEE    $89B6   SHR      V9              ; V9 >>= 1, VF = LSB
$DF0    $E0B2   UNKNOWN  $E0B2           ; Unknown Exxx instruction
$DF2    $A5F2   LD       I, $5F2         ; Load 5F2 into I
$DF4    $8514   ADD      V5, V1          ; V5 += V1, VF = carry
$DF6    $CB11   RND      VB, #11         ; VB = random & 11
$DF8    $CB8F   RND      VB, #8F         ; VB = random & 8F
$DFA    $FB82   UNKNOWN  FB82            ; Unknown Fxxx instruction
$DFC    $7C62   ADD      VC, #62         ; Add 98 to VC
$DFE    $022D   SYS      $22D            ; System call to 22D
$E00    $A131   LD       I, $131         ; Load 131 into I
$E02    $8118   UNKNOWN  8118            ; Unknown 8xxx instruction
$E04    $80D8   UNKNOWN  80D8            ; Unknown 8xxx instruction
$E06    $6F3D   LD       VF, #3D         ; Load 61 into VF
$E08    $E28B   UNKNOWN  $E28B           ; Unknown Exxx instruction
$E0A    $4C2B   SNE      VC, #2B         ; Skip if VC != 43
$E0C    $88CB   UNKNOWN  88CB            ; Unknown 8xxx instruction
$E0E    $25FC   CALL     $5FC            ; Call subroutine at 5FC
$E10    $2FD1   CALL     $FD1            ; Call subroutine at FD1
$E12    $3DF6   SE       VD, #F6         ; Skip if VD == 246
$E14    $199A   JP       $99A            ; Jump to 99A
$E16    $A87C   LD       I, $87C         ; Load 87C into I
$E18    $CBDB   RND      VB, #DB         ; VB = random & DB
$E1A    $927D   UNKNOWN  $927D           ; Unknown 9xxx instruction
$E1C    $6BE2   LD       VB, #E2         ; Load 226 into VB
$E1E    $960F   UNKNOWN  $960F           ; Unknown 9xxx instruction
$E20    $9A2E   UNKNOWN  $9A2E           ; Unknown 9xxx instruction
$E22    $F88F   UNKNOWN  F88F            ; Unknown Fxxx instruction
$E24    $6604   LD       V6, #04         ; Load 4 into V6
$E26    $8C7D   UNKNOWN  8C7D            ; Unknown 8xxx instruction
$E28    $B80A   JP       V0, $80A        ; Jump to V0 + 80A
$E2A    $9FB1   UNKNOWN  $9FB1           ; Unknown 9xxx instruction
$E2C    $1358   JP       $358            ; Jump to 358
$E2E    $A78D   LD       I, $78D         ; Load 78D into I
$E30    $CDEB   RND      VD, #EB         ; VD = random & EB
$E32    $2827   CALL     $827            ; Call subroutine at 827
$E34    $F7E1   UNKNOWN  F7E1            ; Unknown Fxxx instruction
$E36    $E199   UNKNOWN  $E199           ; Unknown Exxx instruction
$E38    $8E28   UNKNOWN  8E28            ; Unknown 8xxx instruction
$E3A    $FB8D   UNKNOWN  FB8D            ; Unknown Fxxx instruction
$E3C    $3364   SE       V3, #64         ; Skip if V3 == 100
$E3E    $1733   JP       $733            ; Jump to 733
$E40    $4D86   SNE      VD, #86         ; Skip if VD != 134
$E42    $0B6A   SYS      $B6A            ; System call to B6A
$E44    $06A6   SYS      $6A6            ; System call to 6A6
$E46    $5DC6   UNKNOWN  $5DC6           ; Unknown 5xxx instruction
$E48    $10C4   JP       $0C4            ; Jump to 0C4
$E4A    $B97C   JP       V0, $97C        ; Jump to V0 + 97C
$E4C    $4C78   SNE      VC, #78         ; Skip if VC != 120
$E4E    $8E51   OR       VE, V5          ; VE |= V5
$E50    $A9F1   LD       I, $9F1         ; Load 9F1 into I
$E52    $D947   DRW      V9, V4, #7      ; Draw 7-byte sprite at V9, V4
$E54    $7638   ADD      V6, #38         ; Add 56 to V6
$E56    $D3AA   DRW      V3, VA, #A      ; Draw 10-byte sprite at V3, VA
$E58    $D52C   DRW      V5, V2, #C      ; Draw 12-byte sprite at V5, V2
$E5A    $8758   UNKNOWN  8758            ; Unknown 8xxx instruction
$E5C    $FE39   UNKNOWN  FE39            ; Unknown Fxxx instruction
$E5E    $B914   JP       V0, $914        ; Jump to V0 + 914
$E60    $9BC2   UNKNOWN  $9BC2           ; Unknown 9xxx instruction
$E62    $49D7   SNE      V9, #D7         ; Skip if V9 != 215
$E64    $BA89   JP       V0, $A89        ; Jump to V0 + A89
$E66    $C779   RND      V7, #79         ; V7 = random & 79
$E68    $FCDC   UNKNOWN  FCDC            ; Unknown Fxxx instruction
$E6A    $3815   SE       V8, #15         ; Skip if V8 == 21
$E6C    $335B   SE       V3, #5B         ; Skip if V3 == 91
$E6E    $1645   JP       $645            ; Jump to 645
$E70    $9133   UNKNOWN  $9133           ; Unknown 9xxx instruction
$E72    $BE35   JP       V0, $E35        ; Jump to V0 + E35
$E74    $C538   RND      V5, #38         ; V5 = random & 38
$E76    $CB98   RND      VB, #98         ; VB = random & 98
$E78    $C3B9   RND      V3, #B9         ; V3 = random & B9
$E7A    $C47A   RND      V4, #7A         ; V4 = random & 7A
$E7C    $C70F   RND      V7, #0F         ; V7 = random & 0F
$E7E    $4EFA   SNE      VE, #FA         ; Skip if VE != 250
$E80    $2033   CALL     $033            ; Call subroutine at 033
$E82    $2F66   CALL     $F66            ; Call subroutine at F66
$E84    $B280   JP       V0, $280        ; Jump to V0 + 280
$E86    $61FF   LD       V1, #FF         ; Load 255 into V1
$E88    $950C   UNKNOWN  $950C           ; Unknown 9xxx instruction
$E8A    $EA75   UNKNOWN  $EA75           ; Unknown Exxx instruction
$E8C    $3244   SE       V2, #44         ; Skip if V2 == 68
$E8E    $FED9   UNKNOWN  FED9            ; Unknown Fxxx instruction
$E90    $24FE   CALL     $4FE            ; Call subroutine at 4FE
$E92    $54BD   UNKNOWN  $54BD           ; Unknown 5xxx instruction
$E94    $E219   UNKNOWN  $E219           ; Unknown Exxx instruction
$E96    $38FD   SE       V8, #FD         ; Skip if V8 == 253
$E98    $EC20   UNKNOWN  $EC20           ; Unknown Exxx instruction
$E9A    $B71E   JP       V0, $71E        ; Jump to V0 + 71E
$E9C    $914E   UNKNOWN  $914E           ; Unknown 9xxx instruction
$E9E    $6E7C   LD       VE, #7C         ; Load 124 into VE
$EA0    $4652   SNE      V6, #52         ; Skip if V6 != 82
$EA2    $BDB9   JP       V0, $DB9        ; Jump to V0 + DB9
$EA4    $E974   UNKNOWN  $E974           ; Unknown Exxx instruction
$EA6    $A386   LD       I, $386         ; Load 386 into I
$EA8    $18F3   JP       $8F3            ; Jump to 8F3
$EAA    $7DD2   ADD      VD, #D2         ; Add 210 to VD
$EAC    $65D3   LD       V5, #D3         ; Load 211 into V5
$EAE    $8B4F   UNKNOWN  8B4F            ; Unknown 8xxx instruction
$EB0    $F709   UNKNOWN  F709            ; Unknown Fxxx instruction
$EB2    $2020   CALL     $020            ; Call subroutine at 020
$EB4    $B77F   JP       V0, $77F        ; Jump to V0 + 77F
$EB6    $EC44   UNKNOWN  $EC44           ; Unknown Exxx instruction
$EB8    $0B46   SYS      $B46            ; System call to B46
$EBA    $899E   SHL      V9              ; V9 <<= 1, VF = MSB
$EBC    $3636   SE       V6, #36         ; Skip if V6 == 54
$EBE    $96B1   UNKNOWN  $96B1           ; Unknown 9xxx instruction
$EC0    $3E3F   SE       VE, #3F         ; Skip if VE == 63
$EC2    $1ACD   JP       $ACD            ; Jump to ACD
$EC4    $E61F   UNKNOWN  $E61F           ; Unknown Exxx instruction
$EC6    $6908   LD       V9, #08         ; Load 8 into V9
$EC8    $86F3   XOR      V6, VF          ; V6 ^= VF
$ECA    $FF1F   UNKNOWN  FF1F            ; Unknown Fxxx instruction
$ECC    $135F   JP       $35F            ; Jump to 35F
$ECE    $9F08   UNKNOWN  $9F08           ; Unknown 9xxx instruction
$ED0    $2F45   CALL     $F45            ; Call subroutine at F45
$ED2    $6ED5   LD       VE, #D5         ; Load 213 into VE
$ED4    $C480   RND      V4, #80         ; V4 = random & 80
$ED6    $5457   UNKNOWN  $5457           ; Unknown 5xxx instruction
$ED8    $EB0C   UNKNOWN  $EB0C           ; Unknown Exxx instruction
$EDA    $285D   CALL     $85D            ; Call subroutine at 85D
$EDC    $EBC6   UNKNOWN  $EBC6           ; Unknown Exxx instruction
$EDE    $81A9   UNKNOWN  81A9            ; Unknown 8xxx instruction
$EE0    $6123   LD       V1, #23         ; Load 35 into V1
$EE2    $B5D3   JP       V0, $5D3        ; Jump to V0 + 5D3
$EE4    $D33C   DRW      V3, V3, #C      ; Draw 12-byte sprite at V3, V3
$EE6    $0540   SYS      $540            ; System call to 540
$EE8    $8143   XOR      V1, V4          ; V1 ^= V4
$EEA    $6F38   LD       VF, #38         ; Load 56 into VF
$EEC    $A84D   LD       I, $84D         ; Load 84D into I
$EEE    $9629   UNKNOWN  $9629           ; Unknown 9xxx instruction
$EF0    $3EBC   SE       VE, #BC         ; Skip if VE == 188
$EF2    $CF4A   RND      VF, #4A         ; VF = random & 4A
$EF4    $839B   UNKNOWN  839B            ; Unknown 8xxx instruction
$EF6    $5832   UNKNOWN  $5832           ; Unknown 5xxx instruction
$EF8    $46A2   SNE      V6, #A2         ; Skip if V6 != 162
$EFA    $5037   UNKNOWN  $5037           ; Unknown 5xxx instruction
$EFC    $DEC7   DRW      VE, VC, #7      ; Draw 7-byte sprite at VE, VC
$EFE    $ACA7   LD       I, $CA7         ; Load CA7 into I
$F00    $3654   SE       V6, #54         ; Skip if V6 == 84
$F02    $DFBA   DRW      VF, VB, #A      ; Draw 10-byte sprite at VF, VB
$F04    $81F1   OR       V1, VF          ; V1 |= VF
$F06    $C66A   RND      V6, #6A         ; V6 = random & 6A
$F08    $496E   SNE      V9, #6E         ; Skip if V9 != 110
$F0A    $BBCA   JP       V0, $BCA        ; Jump to V0 + BCA
$F0C    $6E94   LD       VE, #94         ; Load 148 into VE
$F0E    $12F3   JP       $2F3            ; Jump to 2F3
$F10    $CFEA   RND      VF, #EA         ; VF = random & EA
$F12    $F088   UNKNOWN  F088            ; Unknown Fxxx instruction
$F14    $0A5F   SYS      $A5F            ; System call to A5F
$F16    $92BC   UNKNOWN  $92BC           ; Unknown 9xxx instruction
$F18    $2213   CALL     $213            ; Call subroutine at 213
$F1A    $03D8   SYS      $3D8            ; System call to 3D8
$F1C    $EF22   UNKNOWN  $EF22           ; Unknown Exxx instruction
$F1E    $2B18   CALL     $B18            ; Call subroutine at B18
$F20    $4D77   SNE      VD, #77         ; Skip if VD != 119
$F22    $27D1   CALL     $7D1            ; Call subroutine at 7D1
$F24    $4989   SNE      V9, #89         ; Skip if V9 != 137
$F26    $21B3   CALL     $1B3            ; Call subroutine at 1B3
$F28    $E992   UNKNOWN  $E992           ; Unknown Exxx instruction
$F2A    $A701   LD       I, $701         ; Load 701 into I
$F2C    $BCD4   JP       V0, $CD4        ; Jump to V0 + CD4
$F2E    $10E7   JP       $0E7            ; Jump to 0E7
$F30    $535A   UNKNOWN  $535A           ; Unknown 5xxx instruction
$F32    $C0D6   RND      V0, #D6         ; V0 = random & D6
$F34    $DAA3   DRW      VA, VA, #3      ; Draw 3-byte sprite at VA, VA
$F36    $E190   UNKNOWN  $E190           ; Unknown Exxx instruction
$F38    $B16E   JP       V0, $16E        ; Jump to V0 + 16E
$F3A    $5EFA   UNKNOWN  $5EFA           ; Unknown 5xxx instruction
$F3C    $75E0   ADD      V5, #E0         ; Add 224 to V5
$F3E    $6CE0   LD       VC, #E0         ; Load 224 into VC
$F40    $FD5C   UNKNOWN  FD5C            ; Unknown Fxxx instruction
$F42    $E85C   UNKNOWN  $E85C           ; Unknown Exxx instruction
$F44    $B9F1   JP       V0, $9F1        ; Jump to V0 + 9F1
$F46    $B687   JP       V0, $687        ; Jump to V0 + 687
$F48    $878C   UNKNOWN  878C            ; Unknown 8xxx instruction
$F4A    $7725   ADD      V7, #25         ; Add 37 to V7
$F4C    $AC5C   LD       I, $C5C         ; Load C5C into I
$F4E    $6AAB   LD       VA, #AB         ; Load 171 into VA
$F50    $2EFA   CALL     $EFA            ; Call subroutine at EFA
$F52    $AF43   LD       I, $F43         ; Load F43 into I
$F54    $29A0   CALL     $9A0            ; Call subroutine at 9A0
$F56    $B343   JP       V0, $343        ; Jump to V0 + 343
$F58    $2ECB   CALL     $ECB            ; Call subroutine at ECB
$F5A    $956B   UNKNOWN  $956B           ; Unknown 9xxx instruction
$F5C    $BAA6   JP       V0, $AA6        ; Jump to V0 + AA6
$F5E    $87F6   SHR      V7              ; V7 >>= 1, VF = LSB
$F60    $0EE6   SYS      $EE6            ; System call to EE6
$F62    $4BBB   SNE      VB, #BB         ; Skip if VB != 187
$F64    $706D   ADD      V0, #6D         ; Add 109 to V0
$F66    $7F6C   ADD      VF, #6C         ; Add 108 to VF
$F68    $B087   JP       V0, $087        ; Jump to V0 + 087
$F6A    $69B4   LD       V9, #B4         ; Load 180 into V9
$F6C    $B147   JP       V0, $147        ; Jump to V0 + 147
$F6E    $8B39   UNKNOWN  8B39            ; Unknown 8xxx instruction
$F70    $ED8D   UNKNOWN  $ED8D           ; Unknown Exxx instruction
$F72    $2E19   CALL     $E19            ; Call subroutine at E19
$F74    $DC0A   DRW      VC, V0, #A      ; Draw 10-byte sprite at VC, V0
$F76    $BE7A   JP       V0, $E7A        ; Jump to V0 + E7A
$F78    $F8AA   UNKNOWN  F8AA            ; Unknown Fxxx instruction
$F7A    $BD2F   JP       V0, $D2F        ; Jump to V0 + D2F
$F7C    $25EE   CALL     $5EE            ; Call subroutine at 5EE
$F7E    $817B   UNKNOWN  817B            ; Unknown 8xxx instruction
$F80    $1967   JP       $967            ; Jump to 967
$F82    $E75C   UNKNOWN  $E75C           ; Unknown Exxx instruction
$F84    $7DE8   ADD      VD, #E8         ; Add 232 to VD
$F86    $604F   LD       V0, #4F         ; Load 79 into V0
$F88    $E8E8   UNKNOWN  $E8E8           ; Unknown Exxx instruction
$F8A    $FF0B   UNKNOWN  FF0B            ; Unknown Fxxx instruction
$F8C    $0F79   SYS      $F79            ; System call to F79
$F8E    $C86A   RND      V8, #6A         ; V8 = random & 6A
$F90    $7587   ADD      V5, #87         ; Add 135 to V5
$F92    $1C4B   JP       $C4B            ; Jump to C4B
$F94    $ED78   UNKNOWN  $ED78           ; Unknown Exxx instruction
$F96    $BF1F   JP       V0, $F1F        ; Jump to V0 + F1F
$F98    $548A   UNKNOWN  $548A           ; Unknown 5xxx instruction
$F9A    $F30B   UNKNOWN  F30B            ; Unknown Fxxx instruction
$F9C    $1447   JP       $447            ; Jump to 447
$F9E    $6D98   LD       VD, #98         ; Load 152 into VD
$FA0    $B9CD   JP       V0, $9CD        ; Jump to V0 + 9CD
$FA2    $E221   UNKNOWN  $E221           ; Unknown Exxx instruction
$FA4    $887A   UNKNOWN  887A            ; Unknown 8xxx instruction
$FA6    $3F44   SE       VF, #44         ; Skip if VF == 68
$FA8    $64DF   LD       V4, #DF         ; Load 223 into V4
$FAA    $2B19   CALL     $B19            ; Call subroutine at B19
$FAC    $AE37   LD       I, $E37         ; Load E37 into I
$FAE    $CDA0   RND      VD, #A0         ; VD = random & A0
$FB0    $9E01   UNKNOWN  $9E01           ; Unknown 9xxx instruction
$FB2    $8FFC   UNKNOWN  8FFC            ; Unknown 8xxx instruction
$FB4    $74C8   ADD      V4, #C8         ; Add 200 to V4
$FB6    $E407   UNKNOWN  $E407           ; Unknown Exxx instruction
$FB8    $1094   JP       $094            ; Jump to 094
$FBA    $35BC   SE       V5, #BC         ; Skip if V5 == 188
$FBC    $D6F5   DRW      V6, VF, #5      ; Draw 5-byte sprite at V6, VF
$FBE    $A6B5   LD       I, $6B5         ; Load 6B5 into I
$FC0    $FBE1   UNKNOWN  FBE1            ; Unknown Fxxx instruction
$FC2    $921A   UNKNOWN  $921A           ; Unknown 9xxx instruction
$FC4    $5BAD   UNKNOWN  $5BAD           ; Unknown 5xxx instruction
$FC6    $BEC1   JP       V0, $EC1        ; Jump to V0 + EC1
$FC8    $7389   ADD      V3, #89         ; Add 137 to V3
$FCA    $90CD   UNKNOWN  $90CD           ; Unknown 9xxx instruction
$FCC    $63B1   LD       V3, #B1         ; Load 177 into V3
$FCE    $9F6C   UNKNOWN  $9F6C           ; Unknown 9xxx instruction
$FD0    $1D73   JP       $D73            ; Jump to D73
$FD2    $AA6E   LD       I, $A6E         ; Load A6E into I
$FD4    $4D55   SNE      VD, #55         ; Skip if VD != 85
$FD6    $104B   JP       $04B            ; Jump to 04B
$FD8    $4A4C   SNE      VA, #4C         ; Skip if VA != 76
$FDA    $6ED7   LD       VE, #D7         ; Load 215 into VE
$FDC    $9F6B   UNKNOWN  $9F6B           ; Unknown 9xxx instruction
$FDE    $57C3   UNKNOWN  $57C3           ; Unknown 5xxx instruction
$FE0    $7411   ADD      V4, #11         ; Add 17 to V4
$FE2    $92F4   UNKNOWN  $92F4           ; Unknown 9xxx instruction
$FE4    $5E9B   UNKNOWN  $5E9B           ; Unknown 5xxx instruction
$FE6    $6899   LD       V8, #99         ; Load 153 into V8
$FE8    $2499   CALL     $499            ; Call subroutine at 499
$FEA    $BAD3   JP       V0, $AD3        ; Jump to V0 + AD3
$FEC    $E66E   UNKNOWN  $E66E           ; Unknown Exxx instruction
$FEE    $4655   SNE      V6, #55         ; Skip if V6 != 85
$FF0    $EB0F   UNKNOWN  $EB0F           ; Unknown Exxx instruction
$FF2    $5438   UNKNOWN  $5438           ; Unknown 5xxx instruction
$FF4    $BD19   JP       V0, $D19        ; Jump to V0 + D19
$FF6    $5CA8   UNKNOWN  $5CA8           ; Unknown 5xxx instruction
$FF8    $2D52   CALL     $D52            ; Call subroutine at D52
$FFA    $F4F6   UNKNOWN  F4F6            ; Unknown Fxxx instruction
$FFC    $B58B   JP       V0, $58B        ; Jump to V0 + 58B
$FFE    $2586   CALL     $586            ; Call subroutine at 586

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 467 (26.1%)
  LD      : 243 (13.6%)
  JP      : 223 (12.5%)
  ADD     : 128 ( 7.1%)
  SNE     : 121 ( 6.8%)
  SE      : 121 ( 6.8%)
  CALL    : 119 ( 6.6%)
  RND     : 109 ( 6.1%)
  SYS     : 105 ( 5.9%)
  DRW     : 105 ( 5.9%)
  AND     :  10 ( 0.6%)
  SHR     :   8 ( 0.4%)
  SUBN    :   8 ( 0.4%)
  XOR     :   8 ( 0.4%)
  OR      :   7 ( 0.4%)
  SHL     :   4 ( 0.2%)
  SKNP    :   2 ( 0.1%)
  SUB     :   2 ( 0.1%)
  SKP     :   1 ( 0.1%)

Memory Operations: 371 (20.7%)
Arithmetic Operations: 163 (9.1%)
