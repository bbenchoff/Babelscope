
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B6601D01_I34127_C3879_aacec1d97dc7.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 6601
Instance: 34127
Direction: descending
Final Array: [8, 7, 6, 5, 4, 3, 2, 1]
Operations: R:0 W:8 C:42 S:5

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 131
Sort Array References:
  $25A: LD I, $EAD ; Load EAD into I
  $25C: LD I, $CAB ; Load CAB into I
  $25E: LD I, $AA9 ; Load AA9 into I
  $260: LD I, $8A7 ; Load 8A7 into I
  $262: LD I, $6A5 ; Load 6A5 into I
  $264: LD I, $4A3 ; Load 4A3 into I
  $266: LD I, $2A1 ; Load 2A1 into I
  $268: LD I, $09F ; Load 09F into I
  $32E: LD I, $DD4 ; Load DD4 into I
  $376: LD I, $9EA ; Load 9EA into I
  $3AC: LD I, $ABB ; Load ABB into I
  $3B2: LD I, $1E6 ; Load 1E6 into I
  $3C0: LD I, $937 ; Load 937 into I
  $3EE: LD I, $BFC ; Load BFC into I
  $3FA: LD I, $47D ; Load 47D into I
  $412: LD I, $8EC ; Load 8EC into I
  $436: LD I, $85C ; Load 85C into I
  $494: LD I, $60D ; Load 60D into I
  $4A2: LD I, $597 ; Load 597 into I
  $4BE: LD I, $887 ; Load 887 into I
  $4C2: LD I, $A39 ; Load A39 into I
  $4EC: LD I, $208 ; Load 208 into I
  $4F4: LD [I], V0 ; Store V0-V0 at I
  $50E: LD I, $9B5 ; Load 9B5 into I
  $54E: LD I, $9B1 ; Load 9B1 into I
  $556: LD I, $BA5 ; Load BA5 into I
  $584: LD I, $2F4 ; Load 2F4 into I
  $59E: LD [I], V3 ; Store V0-V3 at I
  $5C6: LD I, $399 ; Load 399 into I
  $5EC: LD I, $867 ; Load 867 into I
  $608: LD I, $AF0 ; Load AF0 into I
  $62C: LD I, $9D5 ; Load 9D5 into I
  $62E: LD I, $E5B ; Load E5B into I
  $67C: LD I, $D12 ; Load D12 into I
  $67E: LD I, $FB4 ; Load FB4 into I
  $680: LD I, $112 ; Load 112 into I
  $684: LD I, $5CC ; Load 5CC into I
  $6A0: LD I, $19C ; Load 19C into I
  $6AA: LD I, $049 ; Load 049 into I
  $6C0: LD I, $7E4 ; Load 7E4 into I
  $6DA: LD I, $781 ; Load 781 into I
  $6EA: LD I, $384 ; Load 384 into I
  $724: LD I, $9B3 ; Load 9B3 into I
  $740: LD I, $719 ; Load 719 into I
  $74E: LD I, $54A ; Load 54A into I
  $75A: LD I, $B2E ; Load B2E into I
  $76A: LD I, $099 ; Load 099 into I
  $76E: LD I, $863 ; Load 863 into I
  $774: LD I, $F4E ; Load F4E into I
  $784: LD I, $042 ; Load 042 into I
  $7A2: LD I, $40A ; Load 40A into I
  $7A8: LD I, $A7F ; Load A7F into I
  $7B4: LD I, $A43 ; Load A43 into I
  $7BC: LD I, $244 ; Load 244 into I
  $7C2: LD I, $650 ; Load 650 into I
  $7C6: LD I, $4A2 ; Load 4A2 into I
  $7DA: LD I, $496 ; Load 496 into I
  $7E8: LD I, $989 ; Load 989 into I
  $80E: ADD I, V8 ; I ADDRESS MANIPULATION
  $816: LD I, $88A ; Load 88A into I
  $834: LD I, $CAE ; Load CAE into I
  $840: LD I, $013 ; Load 013 into I
  $862: ADD I, V2 ; I ADDRESS MANIPULATION
  $872: LD I, $79B ; Load 79B into I
  $892: LD I, $26F ; Load 26F into I
  $8A2: LD I, $80B ; Load 80B into I
  $8A6: LD I, $AEA ; Load AEA into I
  $8AA: LD I, $4CE ; Load 4CE into I
  $8B8: LD I, $320 ; Load 320 into I
  $8C2: LD I, $5E9 ; Load 5E9 into I
  $904: LD I, $68B ; Load 68B into I
  $90E: LD I, $9D3 ; Load 9D3 into I
  $912: LD I, $2A0 ; Load 2A0 into I
  $922: LD I, $240 ; Load 240 into I
  $92E: LD I, $E4A ; Load E4A into I
  $952: LD I, $391 ; Load 391 into I
  $95E: LD I, $C46 ; Load C46 into I
  $96E: LD I, $35D ; Load 35D into I
  $972: LD I, $409 ; Load 409 into I
  $97E: LD I, $C67 ; Load C67 into I
  $986: LD I, $3CA ; Load 3CA into I
  $9B4: LD I, $836 ; Load 836 into I
  $9B6: LD I, $688 ; Load 688 into I
  $9F2: LD I, $B7F ; Load B7F into I
  $A4C: LD I, $128 ; Load 128 into I
  $A60: LD I, $1F5 ; Load 1F5 into I
  $A68: LD I, $977 ; Load 977 into I
  $A8C: LD I, $08D ; Load 08D into I
  $AA4: LD I, $220 ; Load 220 into I
  $ABC: LD I, $74D ; Load 74D into I
  $ADA: LD I, $2B8 ; Load 2B8 into I
  $AF2: LD I, $D03 ; Load D03 into I
  $B20: LD I, $7CD ; Load 7CD into I
  $B2C: LD I, $710 ; Load 710 into I
  $B38: LD I, $AD1 ; Load AD1 into I
  $C34: LD I, $9ED ; Load 9ED into I
  $C74: LD I, $E6C ; Load E6C into I
  $C9A: LD I, $139 ; Load 139 into I
  $C9C: LD I, $F48 ; Load F48 into I
  $CA0: LD I, $99D ; Load 99D into I
  $CB6: LD I, $90B ; Load 90B into I
  $CE6: LD I, $22A ; Load 22A into I
  $D1C: LD I, $972 ; Load 972 into I
  $D24: LD I, $6BE ; Load 6BE into I
  $D60: LD I, $E69 ; Load E69 into I
  $D74: LD I, $ECE ; Load ECE into I
  $D76: LD I, $9FB ; Load 9FB into I
  $D7E: LD I, $033 ; Load 033 into I
  $D80: LD I, $E87 ; Load E87 into I
  $D8E: LD I, $287 ; Load 287 into I
  $DA4: LD I, $3CF ; Load 3CF into I
  $DC6: LD I, $4CB ; Load 4CB into I
  $DFE: LD I, $849 ; Load 849 into I
  $E2A: LD I, $B3E ; Load B3E into I
  $E4E: LD I, $9A3 ; Load 9A3 into I
  $E6E: LD I, $364 ; Load 364 into I
  $E94: LD I, $3E2 ; Load 3E2 into I
  $E96: LD I, $58F ; Load 58F into I
  $EA4: LD I, $050 ; Load 050 into I
  $EB6: LD I, $304 ; Load 304 into I
  $EEA: LD I, $6F0 ; Load 6F0 into I
  $F06: LD I, $4FD ; Load 4FD into I
  $F26: LD I, $B91 ; Load B91 into I
  $F2A: LD I, $991 ; Load 991 into I
  $F30: LD I, $A7E ; Load A7E into I
  $F4A: LD I, $57F ; Load 57F into I
  $F58: LD I, $6DD ; Load 6DD into I
  $F74: LD I, $C07 ; Load C07 into I
  $FA0: LD I, $286 ; Load 286 into I
  $FD0: LD I, $EA0 ; Load EA0 into I
  $FE2: LD I, $B12 ; Load B12 into I

CONTROL FLOW ANALYSIS:
Jumps: 221
Calls: 100
Branches: 226
Loops: 141
Loop Structures:
  $258 -> $0AF (backward jump)
  $2F6 -> $211 (backward jump)
  $2F8 -> $00F (backward jump)
  $34E -> $26F (backward jump)
  $384 -> $21E (backward jump)
  $3DA -> $3CF (backward jump)
  $472 -> $287 (backward jump)
  $502 -> $4EE (backward jump)
  $588 -> $463 (backward jump)
  $590 -> $3C1 (backward jump)
  $604 -> $116 (backward jump)
  $624 -> $2C4 (backward jump)
  $650 -> $457 (backward jump)
  $65C -> $170 (backward jump)
  $662 -> $439 (backward jump)
  $668 -> $3B1 (backward jump)
  $674 -> $5F5 (backward jump)
  $676 -> $2FF (backward jump)
  $694 -> $690 (backward jump)
  $698 -> $00B (backward jump)
  $72A -> $43D (backward jump)
  $734 -> $2C2 (backward jump)
  $73C -> $330 (backward jump)
  $742 -> $3F5 (backward jump)
  $746 -> $57F (backward jump)
  $764 -> $4DA (backward jump)
  $772 -> $1D2 (backward jump)
  $780 -> $550 (backward jump)
  $798 -> $35B (backward jump)
  $7E0 -> $1A0 (backward jump)
  $7F2 -> $534 (backward jump)
  $804 -> $3E6 (backward jump)
  $814 -> $3DB (backward jump)
  $81E -> $7F1 (backward jump)
  $822 -> $1E2 (backward jump)
  $82A -> $0F9 (backward jump)
  $83E -> $22B (backward jump)
  $880 -> $2B8 (backward jump)
  $8B0 -> $081 (backward jump)
  $8C6 -> $69A (backward jump)
  $8E4 -> $4D7 (backward jump)
  $8F4 -> $351 (backward jump)
  $900 -> $73E (backward jump)
  $910 -> $533 (backward jump)
  $916 -> $720 (backward jump)
  $924 -> $47F (backward jump)
  $93A -> $680 (backward jump)
  $962 -> $688 (backward jump)
  $9C0 -> $8EA (backward jump)
  $9C6 -> $4A0 (backward jump)
  $9E2 -> $599 (backward jump)
  $9EC -> $7FA (backward jump)
  $A1A -> $755 (backward jump)
  $A1E -> $01D (backward jump)
  $A40 -> $66F (backward jump)
  $A4E -> $6D7 (backward jump)
  $A54 -> $973 (backward jump)
  $A82 -> $55F (backward jump)
  $AA2 -> $4BF (backward jump)
  $AC6 -> $A06 (backward jump)
  $ACA -> $25C (backward jump)
  $AF0 -> $4A7 (backward jump)
  $B06 -> $471 (backward jump)
  $B18 -> $3D0 (backward jump)
  $B1C -> $13C (backward jump)
  $B2E -> $1C3 (backward jump)
  $B36 -> $878 (backward jump)
  $B5C -> $6D7 (backward jump)
  $B62 -> $62A (backward jump)
  $B64 -> $852 (backward jump)
  $B6E -> $94C (backward jump)
  $B78 -> $64A (backward jump)
  $B84 -> $253 (backward jump)
  $B90 -> $0CC (backward jump)
  $B94 -> $68D (backward jump)
  $BAE -> $58A (backward jump)
  $BBE -> $13E (backward jump)
  $BC8 -> $21E (backward jump)
  $BD4 -> $53D (backward jump)
  $BE4 -> $389 (backward jump)
  $C18 -> $78D (backward jump)
  $C1A -> $5E1 (backward jump)
  $C40 -> $749 (backward jump)
  $C58 -> $9CC (backward jump)
  $C7C -> $811 (backward jump)
  $C92 -> $349 (backward jump)
  $CCC -> $98D (backward jump)
  $CDC -> $651 (backward jump)
  $CE2 -> $31A (backward jump)
  $CEC -> $053 (backward jump)
  $CF6 -> $2DF (backward jump)
  $D0A -> $AFB (backward jump)
  $D16 -> $089 (backward jump)
  $D32 -> $0DB (backward jump)
  $D34 -> $315 (backward jump)
  $D44 -> $763 (backward jump)
  $D56 -> $6A1 (backward jump)
  $D58 -> $5A6 (backward jump)
  $D6C -> $63E (backward jump)
  $D82 -> $ABC (backward jump)
  $D8C -> $D67 (backward jump)
  $D96 -> $19F (backward jump)
  $D9C -> $8F1 (backward jump)
  $DA8 -> $51F (backward jump)
  $DC2 -> $1D2 (backward jump)
  $DCE -> $BE8 (backward jump)
  $DD2 -> $267 (backward jump)
  $DDE -> $341 (backward jump)
  $DEE -> $287 (backward jump)
  $DF4 -> $0C3 (backward jump)
  $E18 -> $B95 (backward jump)
  $E1A -> $241 (backward jump)
  $E34 -> $3DE (backward jump)
  $E50 -> $431 (backward jump)
  $E5E -> $D08 (backward jump)
  $E68 -> $268 (backward jump)
  $E72 -> $7DC (backward jump)
  $E82 -> $6B1 (backward jump)
  $E8E -> $098 (backward jump)
  $E90 -> $54A (backward jump)
  $E92 -> $36E (backward jump)
  $EA8 -> $AA9 (backward jump)
  $EB8 -> $B35 (backward jump)
  $EDA -> $18E (backward jump)
  $EE2 -> $9A5 (backward jump)
  $EF0 -> $534 (backward jump)
  $EFA -> $470 (backward jump)
  $EFE -> $E64 (backward jump)
  $F18 -> $A4A (backward jump)
  $F22 -> $B54 (backward jump)
  $F2C -> $DE4 (backward jump)
  $F32 -> $793 (backward jump)
  $F42 -> $C7B (backward jump)
  $F44 -> $CDE (backward jump)
  $F46 -> $212 (backward jump)
  $F7A -> $482 (backward jump)
  $F8A -> $330 (backward jump)
  $F90 -> $805 (backward jump)
  $F96 -> $D21 (backward jump)
  $FBC -> $F1B (backward jump)
  $FFE -> $20A (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $814F   UNKNOWN  814F            ; Unknown 8xxx instruction
$202    $5090   SE       V0, V9          ; Skip if V0 == V9
$204    $0AC6   SYS      $AC6            ; System call to AC6
$206    $0538   SYS      $538            ; System call to 538
$208    $00FF   SYS      $0FF            ; System call to 0FF
$20A    $FEFD   UNKNOWN  FEFD            ; Unknown Fxxx instruction
$20C    $FCFB   UNKNOWN  FCFB            ; Unknown Fxxx instruction
$20E    $FAF9   UNKNOWN  FAF9            ; Unknown Fxxx instruction
$210    $F8F7   UNKNOWN  F8F7            ; Unknown Fxxx instruction
$212    $F6F5   UNKNOWN  F6F5            ; Unknown Fxxx instruction
$214    $F4F3   UNKNOWN  F4F3            ; Unknown Fxxx instruction
$216    $F2F1   UNKNOWN  F2F1            ; Unknown Fxxx instruction
$218    $F0EF   UNKNOWN  F0EF            ; Unknown Fxxx instruction
$21A    $EEED   UNKNOWN  $EEED           ; Unknown Exxx instruction
$21C    $ECEB   UNKNOWN  $ECEB           ; Unknown Exxx instruction
$21E    $EAE9   UNKNOWN  $EAE9           ; Unknown Exxx instruction
$220    $E8E7   UNKNOWN  $E8E7           ; Unknown Exxx instruction
$222    $E6E5   UNKNOWN  $E6E5           ; Unknown Exxx instruction
$224    $E4E3   UNKNOWN  $E4E3           ; Unknown Exxx instruction
$226    $E2E1   UNKNOWN  $E2E1           ; Unknown Exxx instruction
$228    $E0DF   UNKNOWN  $E0DF           ; Unknown Exxx instruction
$22A    $DEDD   DRW      VE, VD, #D      ; Draw 13-byte sprite at VE, VD
$22C    $DCDB   DRW      VC, VD, #B      ; Draw 11-byte sprite at VC, VD
$22E    $DAD9   DRW      VA, VD, #9      ; Draw 9-byte sprite at VA, VD
$230    $D8D7   DRW      V8, VD, #7      ; Draw 7-byte sprite at V8, VD
$232    $D6D5   DRW      V6, VD, #5      ; Draw 5-byte sprite at V6, VD
$234    $D4D3   DRW      V4, VD, #3      ; Draw 3-byte sprite at V4, VD
$236    $D2D1   DRW      V2, VD, #1      ; Draw 1-byte sprite at V2, VD
$238    $D0CF   DRW      V0, VC, #F      ; Draw 15-byte sprite at V0, VC
$23A    $CECD   RND      VE, #CD         ; VE = random & CD
$23C    $CCCB   RND      VC, #CB         ; VC = random & CB
$23E    $CAC9   RND      VA, #C9         ; VA = random & C9
$240    $C8C7   RND      V8, #C7         ; V8 = random & C7
$242    $C6C5   RND      V6, #C5         ; V6 = random & C5
$244    $C4C3   RND      V4, #C3         ; V4 = random & C3
$246    $C2C1   RND      V2, #C1         ; V2 = random & C1
$248    $C0BF   RND      V0, #BF         ; V0 = random & BF
$24A    $BEBD   JP       V0, $EBD        ; Jump to V0 + EBD
$24C    $BCBB   JP       V0, $CBB        ; Jump to V0 + CBB
$24E    $BAB9   JP       V0, $AB9        ; Jump to V0 + AB9
$250    $B8B7   JP       V0, $8B7        ; Jump to V0 + 8B7
$252    $B6B5   JP       V0, $6B5        ; Jump to V0 + 6B5
$254    $B4B3   JP       V0, $4B3        ; Jump to V0 + 4B3
$256    $B2B1   JP       V0, $2B1        ; Jump to V0 + 2B1
$258    $B0AF   JP       V0, $0AF        ; Jump to V0 + 0AF
$25A    $AEAD   LD       I, $EAD         ; Load EAD into I
$25C    $ACAB   LD       I, $CAB         ; Load CAB into I
$25E    $AAA9   LD       I, $AA9         ; Load AA9 into I
$260    $A8A7   LD       I, $8A7         ; Load 8A7 into I
$262    $A6A5   LD       I, $6A5         ; Load 6A5 into I
$264    $A4A3   LD       I, $4A3         ; Load 4A3 into I
$266    $A2A1   LD       I, $2A1         ; Load 2A1 into I
$268    $A09F   LD       I, $09F         ; Load 09F into I
$26A    $9E9D   UNKNOWN  $9E9D           ; Unknown 9xxx instruction
$26C    $9C9B   UNKNOWN  $9C9B           ; Unknown 9xxx instruction
$26E    $9A99   UNKNOWN  $9A99           ; Unknown 9xxx instruction
$270    $9897   UNKNOWN  $9897           ; Unknown 9xxx instruction
$272    $9695   UNKNOWN  $9695           ; Unknown 9xxx instruction
$274    $9493   UNKNOWN  $9493           ; Unknown 9xxx instruction
$276    $9291   UNKNOWN  $9291           ; Unknown 9xxx instruction
$278    $908F   UNKNOWN  $908F           ; Unknown 9xxx instruction
$27A    $8E8D   UNKNOWN  8E8D            ; Unknown 8xxx instruction
$27C    $8C8B   UNKNOWN  8C8B            ; Unknown 8xxx instruction
$27E    $8A89   UNKNOWN  8A89            ; Unknown 8xxx instruction
$280    $8887   SUBN     V8, V8          ; V8 = V8 - V8, VF = !borrow
$282    $8685   SUB      V6, V8          ; V6 -= V8, VF = !borrow
$284    $8483   XOR      V4, V8          ; V4 ^= V8
$286    $8281   OR       V2, V8          ; V2 |= V8
$288    $807F   UNKNOWN  807F            ; Unknown 8xxx instruction
$28A    $7E7D   ADD      VE, #7D         ; Add 125 to VE
$28C    $7C7B   ADD      VC, #7B         ; Add 123 to VC
$28E    $7A79   ADD      VA, #79         ; Add 121 to VA
$290    $7877   ADD      V8, #77         ; Add 119 to V8
$292    $7675   ADD      V6, #75         ; Add 117 to V6
$294    $7473   ADD      V4, #73         ; Add 115 to V4
$296    $7271   ADD      V2, #71         ; Add 113 to V2
$298    $706F   ADD      V0, #6F         ; Add 111 to V0
$29A    $6E6D   LD       VE, #6D         ; Load 109 into VE
$29C    $6C6B   LD       VC, #6B         ; Load 107 into VC
$29E    $6A69   LD       VA, #69         ; Load 105 into VA
$2A0    $6867   LD       V8, #67         ; Load 103 into V8
$2A2    $6665   LD       V6, #65         ; Load 101 into V6
$2A4    $6463   LD       V4, #63         ; Load 99 into V4
$2A6    $6261   LD       V2, #61         ; Load 97 into V2
$2A8    $605F   LD       V0, #5F         ; Load 95 into V0
$2AA    $5E5D   UNKNOWN  $5E5D           ; Unknown 5xxx instruction
$2AC    $5C5B   UNKNOWN  $5C5B           ; Unknown 5xxx instruction
$2AE    $5A59   UNKNOWN  $5A59           ; Unknown 5xxx instruction
$2B0    $5857   UNKNOWN  $5857           ; Unknown 5xxx instruction
$2B2    $5655   UNKNOWN  $5655           ; Unknown 5xxx instruction
$2B4    $5453   UNKNOWN  $5453           ; Unknown 5xxx instruction
$2B6    $5251   UNKNOWN  $5251           ; Unknown 5xxx instruction
$2B8    $504F   UNKNOWN  $504F           ; Unknown 5xxx instruction
$2BA    $4E4D   SNE      VE, #4D         ; Skip if VE != 77
$2BC    $4C4B   SNE      VC, #4B         ; Skip if VC != 75
$2BE    $4A49   SNE      VA, #49         ; Skip if VA != 73
$2C0    $4847   SNE      V8, #47         ; Skip if V8 != 71
$2C2    $4645   SNE      V6, #45         ; Skip if V6 != 69
$2C4    $4443   SNE      V4, #43         ; Skip if V4 != 67
$2C6    $4241   SNE      V2, #41         ; Skip if V2 != 65
$2C8    $403F   SNE      V0, #3F         ; Skip if V0 != 63
$2CA    $3E3D   SE       VE, #3D         ; Skip if VE == 61
$2CC    $3C3B   SE       VC, #3B         ; Skip if VC == 59
$2CE    $3A39   SE       VA, #39         ; Skip if VA == 57
$2D0    $3837   SE       V8, #37         ; Skip if V8 == 55
$2D2    $3635   SE       V6, #35         ; Skip if V6 == 53
$2D4    $3433   SE       V4, #33         ; Skip if V4 == 51
$2D6    $3231   SE       V2, #31         ; Skip if V2 == 49
$2D8    $302F   SE       V0, #2F         ; Skip if V0 == 47
$2DA    $2E2D   CALL     $E2D            ; Call subroutine at E2D
$2DC    $2C2B   CALL     $C2B            ; Call subroutine at C2B
$2DE    $2A29   CALL     $A29            ; Call subroutine at A29
$2E0    $2827   CALL     $827            ; Call subroutine at 827
$2E2    $2625   CALL     $625            ; Call subroutine at 625
$2E4    $2423   CALL     $423            ; Call subroutine at 423
$2E6    $2221   CALL     $221            ; Call subroutine at 221
$2E8    $201F   CALL     $01F            ; Call subroutine at 01F
$2EA    $1E1D   JP       $E1D            ; Jump to E1D
$2EC    $1C1B   JP       $C1B            ; Jump to C1B
$2EE    $1A19   JP       $A19            ; Jump to A19
$2F0    $1817   JP       $817            ; Jump to 817
$2F2    $1615   JP       $615            ; Jump to 615
$2F4    $1413   JP       $413            ; Jump to 413
$2F6    $1211   JP       $211            ; Jump to 211
$2F8    $100F   JP       $00F            ; Jump to 00F
$2FA    $0E0D   SYS      $E0D            ; System call to E0D
$2FC    $0C0B   SYS      $C0B            ; System call to C0B
$2FE    $0A09   SYS      $A09            ; System call to A09
$300    $0807   SYS      $807            ; System call to 807
$302    $0605   SYS      $605            ; System call to 605
$304    $0403   SYS      $403            ; System call to 403
$306    $0201   SYS      $201            ; System call to 201
$308    $00FF   SYS      $0FF            ; System call to 0FF
$30A    $FEFD   UNKNOWN  FEFD            ; Unknown Fxxx instruction
$30C    $FCFB   UNKNOWN  FCFB            ; Unknown Fxxx instruction
$30E    $FAF9   UNKNOWN  FAF9            ; Unknown Fxxx instruction
$310    $F8F7   UNKNOWN  F8F7            ; Unknown Fxxx instruction
$312    $F6F5   UNKNOWN  F6F5            ; Unknown Fxxx instruction
$314    $F4F3   UNKNOWN  F4F3            ; Unknown Fxxx instruction
$316    $F2F1   UNKNOWN  F2F1            ; Unknown Fxxx instruction
$318    $F0EF   UNKNOWN  F0EF            ; Unknown Fxxx instruction
$31A    $EEED   UNKNOWN  $EEED           ; Unknown Exxx instruction
$31C    $ECEB   UNKNOWN  $ECEB           ; Unknown Exxx instruction
$31E    $EAE9   UNKNOWN  $EAE9           ; Unknown Exxx instruction
$320    $E8E7   UNKNOWN  $E8E7           ; Unknown Exxx instruction
$322    $E6E5   UNKNOWN  $E6E5           ; Unknown Exxx instruction
$324    $E4E3   UNKNOWN  $E4E3           ; Unknown Exxx instruction
$326    $E2E1   UNKNOWN  $E2E1           ; Unknown Exxx instruction
$328    $E0DF   UNKNOWN  $E0DF           ; Unknown Exxx instruction
$32A    $DEDD   DRW      VE, VD, #D      ; Draw 13-byte sprite at VE, VD
$32C    $DCDB   DRW      VC, VD, #B      ; Draw 11-byte sprite at VC, VD
$32E    $ADD4   LD       I, $DD4         ; Load DD4 into I
$330    $4BBF   SNE      VB, #BF         ; Skip if VB != 191
$332    $746C   ADD      V4, #6C         ; Add 108 to V4
$334    $0183   SYS      $183            ; System call to 183
$336    $4D4C   SNE      VD, #4C         ; Skip if VD != 76
$338    $1A31   JP       $A31            ; Jump to A31
$33A    $D016   DRW      V0, V1, #6      ; Draw 6-byte sprite at V0, V1
$33C    $649D   LD       V4, #9D         ; Load 157 into V4
$33E    $8D9F   UNKNOWN  8D9F            ; Unknown 8xxx instruction
$340    $294E   CALL     $94E            ; Call subroutine at 94E
$342    $F5CD   UNKNOWN  F5CD            ; Unknown Fxxx instruction
$344    $8573   XOR      V5, V7          ; V5 ^= V7
$346    $09A0   SYS      $9A0            ; System call to 9A0
$348    $1722   JP       $722            ; Jump to 722
$34A    $900C   UNKNOWN  $900C           ; Unknown 9xxx instruction
$34C    $5AF2   UNKNOWN  $5AF2           ; Unknown 5xxx instruction
$34E    $B26F   JP       V0, $26F        ; Jump to V0 + 26F
$350    $FC63   UNKNOWN  FC63            ; Unknown Fxxx instruction
$352    $4419   SNE      V4, #19         ; Skip if V4 != 25
$354    $9312   UNKNOWN  $9312           ; Unknown 9xxx instruction
$356    $E49D   UNKNOWN  $E49D           ; Unknown Exxx instruction
$358    $7C31   ADD      VC, #31         ; Add 49 to VC
$35A    $9B59   UNKNOWN  $9B59           ; Unknown 9xxx instruction
$35C    $E4AF   UNKNOWN  $E4AF           ; Unknown Exxx instruction
$35E    $86A5   SUB      V6, VA          ; V6 -= VA, VF = !borrow
$360    $0683   SYS      $683            ; System call to 683
$362    $1469   JP       $469            ; Jump to 469
$364    $4E24   SNE      VE, #24         ; Skip if VE != 36
$366    $960A   UNKNOWN  $960A           ; Unknown 9xxx instruction
$368    $DC3C   DRW      VC, V3, #C      ; Draw 12-byte sprite at VC, V3
$36A    $8DCB   UNKNOWN  8DCB            ; Unknown 8xxx instruction
$36C    $84A3   XOR      V4, VA          ; V4 ^= VA
$36E    $8703   XOR      V7, V0          ; V7 ^= V0
$370    $EA13   UNKNOWN  $EA13           ; Unknown Exxx instruction
$372    $4845   SNE      V8, #45         ; Skip if V8 != 69
$374    $BC26   JP       V0, $C26        ; Jump to V0 + C26
$376    $A9EA   LD       I, $9EA         ; Load 9EA into I
$378    $BF14   JP       V0, $F14        ; Jump to V0 + F14
$37A    $94AC   UNKNOWN  $94AC           ; Unknown 9xxx instruction
$37C    $1E03   JP       $E03            ; Jump to E03
$37E    $F1D3   UNKNOWN  F1D3            ; Unknown Fxxx instruction
$380    $D4EA   DRW      V4, VE, #A      ; Draw 10-byte sprite at V4, VE
$382    $50D3   UNKNOWN  $50D3           ; Unknown 5xxx instruction
$384    $B21E   JP       V0, $21E        ; Jump to V0 + 21E
$386    $2DC3   CALL     $DC3            ; Call subroutine at DC3
$388    $D148   DRW      V1, V4, #8      ; Draw 8-byte sprite at V1, V4
$38A    $D651   DRW      V6, V5, #1      ; Draw 1-byte sprite at V6, V5
$38C    $B43B   JP       V0, $43B        ; Jump to V0 + 43B
$38E    $2FA7   CALL     $FA7            ; Call subroutine at FA7
$390    $4B7F   SNE      VB, #7F         ; Skip if VB != 127
$392    $8D44   ADD      VD, V4          ; VD += V4, VF = carry
$394    $CA53   RND      VA, #53         ; VA = random & 53
$396    $2CF5   CALL     $CF5            ; Call subroutine at CF5
$398    $1D01   JP       $D01            ; Jump to D01
$39A    $8B93   XOR      VB, V9          ; VB ^= V9
$39C    $CA6A   RND      VA, #6A         ; VA = random & 6A
$39E    $FAFD   UNKNOWN  FAFD            ; Unknown Fxxx instruction
$3A0    $C163   RND      V1, #63         ; V1 = random & 63
$3A2    $5331   UNKNOWN  $5331           ; Unknown 5xxx instruction
$3A4    $877F   UNKNOWN  877F            ; Unknown 8xxx instruction
$3A6    $149A   JP       $49A            ; Jump to 49A
$3A8    $D2C0   DRW      V2, VC, #0      ; Draw 0-byte sprite at V2, VC
$3AA    $25D8   CALL     $5D8            ; Call subroutine at 5D8
$3AC    $AABB   LD       I, $ABB         ; Load ABB into I
$3AE    $5774   UNKNOWN  $5774           ; Unknown 5xxx instruction
$3B0    $2F80   CALL     $F80            ; Call subroutine at F80
$3B2    $A1E6   LD       I, $1E6         ; Load 1E6 into I
$3B4    $D75F   DRW      V7, V5, #F      ; Draw 15-byte sprite at V7, V5
$3B6    $EB3D   UNKNOWN  $EB3D           ; Unknown Exxx instruction
$3B8    $6FBC   LD       VF, #BC         ; Load 188 into VF
$3BA    $7507   ADD      V5, #07         ; Add 7 to V5
$3BC    $976C   UNKNOWN  $976C           ; Unknown 9xxx instruction
$3BE    $9C9A   UNKNOWN  $9C9A           ; Unknown 9xxx instruction
$3C0    $A937   LD       I, $937         ; Load 937 into I
$3C2    $7C59   ADD      VC, #59         ; Add 89 to VC
$3C4    $35FC   SE       V5, #FC         ; Skip if V5 == 252
$3C6    $7A05   ADD      VA, #05         ; Add 5 to VA
$3C8    $7F26   ADD      VF, #26         ; Add 38 to VF
$3CA    $2ED4   CALL     $ED4            ; Call subroutine at ED4
$3CC    $3626   SE       V6, #26         ; Skip if V6 == 38
$3CE    $D258   DRW      V2, V5, #8      ; Draw 8-byte sprite at V2, V5
$3D0    $CE4F   RND      VE, #4F         ; VE = random & 4F
$3D2    $556C   UNKNOWN  $556C           ; Unknown 5xxx instruction
$3D4    $5BD5   UNKNOWN  $5BD5           ; Unknown 5xxx instruction
$3D6    $85D5   SUB      V5, VD          ; V5 -= VD, VF = !borrow
$3D8    $FF45   UNKNOWN  FF45            ; Unknown Fxxx instruction
$3DA    $B3CF   JP       V0, $3CF        ; Jump to V0 + 3CF
$3DC    $4483   SNE      V4, #83         ; Skip if V4 != 131
$3DE    $1BE5   JP       $BE5            ; Jump to BE5
$3E0    $7C07   ADD      VC, #07         ; Add 7 to VC
$3E2    $4897   SNE      V8, #97         ; Skip if V8 != 151
$3E4    $CC02   RND      VC, #02         ; VC = random & 02
$3E6    $63F7   LD       V3, #F7         ; Load 247 into V3
$3E8    $7AE0   ADD      VA, #E0         ; Add 224 to VA
$3EA    $D4D8   DRW      V4, VD, #8      ; Draw 8-byte sprite at V4, VD
$3EC    $8DC0   LD       VD, VC          ; VD = VC
$3EE    $ABFC   LD       I, $BFC         ; Load BFC into I
$3F0    $EFB8   UNKNOWN  $EFB8           ; Unknown Exxx instruction
$3F2    $E24F   UNKNOWN  $E24F           ; Unknown Exxx instruction
$3F4    $7138   ADD      V1, #38         ; Add 56 to V1
$3F6    $DBEF   DRW      VB, VE, #F      ; Draw 15-byte sprite at VB, VE
$3F8    $E5E4   UNKNOWN  $E5E4           ; Unknown Exxx instruction
$3FA    $A47D   LD       I, $47D         ; Load 47D into I
$3FC    $86FD   UNKNOWN  86FD            ; Unknown 8xxx instruction
$3FE    $CC59   RND      VC, #59         ; VC = random & 59
$400    $35D0   SE       V5, #D0         ; Skip if V5 == 208
$402    $20FC   CALL     $0FC            ; Call subroutine at 0FC
$404    $4B89   SNE      VB, #89         ; Skip if VB != 137
$406    $2A31   CALL     $A31            ; Call subroutine at A31
$408    $F1B5   UNKNOWN  F1B5            ; Unknown Fxxx instruction
$40A    $9FF0   SNE      VF, VF          ; Skip if VF != VF
$40C    $1D56   JP       $D56            ; Jump to D56
$40E    $7C00   ADD      VC, #00         ; Add 0 to VC
$410    $C26F   RND      V2, #6F         ; V2 = random & 6F
$412    $A8EC   LD       I, $8EC         ; Load 8EC into I
$414    $9CCF   UNKNOWN  $9CCF           ; Unknown 9xxx instruction
$416    $EE30   UNKNOWN  $EE30           ; Unknown Exxx instruction
$418    $4D96   SNE      VD, #96         ; Skip if VD != 150
$41A    $2A26   CALL     $A26            ; Call subroutine at A26
$41C    $1F24   JP       $F24            ; Jump to F24
$41E    $BA13   JP       V0, $A13        ; Jump to V0 + A13
$420    $03A8   SYS      $3A8            ; System call to 3A8
$422    $549B   UNKNOWN  $549B           ; Unknown 5xxx instruction
$424    $5C9D   UNKNOWN  $5C9D           ; Unknown 5xxx instruction
$426    $4100   SNE      V1, #00         ; Skip if V1 != 0
$428    $757C   ADD      V5, #7C         ; Add 124 to V5
$42A    $77D5   ADD      V7, #D5         ; Add 213 to V7
$42C    $F435   UNKNOWN  F435            ; Unknown Fxxx instruction
$42E    $9665   UNKNOWN  $9665           ; Unknown 9xxx instruction
$430    $73F0   ADD      V3, #F0         ; Add 240 to V3
$432    $DC07   DRW      VC, V0, #7      ; Draw 7-byte sprite at VC, V0
$434    $BDEB   JP       V0, $DEB        ; Jump to V0 + DEB
$436    $A85C   LD       I, $85C         ; Load 85C into I
$438    $C563   RND      V5, #63         ; V5 = random & 63
$43A    $B4C3   JP       V0, $4C3        ; Jump to V0 + 4C3
$43C    $6DB0   LD       VD, #B0         ; Load 176 into VD
$43E    $DF98   DRW      VF, V9, #8      ; Draw 8-byte sprite at VF, V9
$440    $336F   SE       V3, #6F         ; Skip if V3 == 111
$442    $F5CF   UNKNOWN  F5CF            ; Unknown Fxxx instruction
$444    $FA3E   UNKNOWN  FA3E            ; Unknown Fxxx instruction
$446    $9E55   UNKNOWN  $9E55           ; Unknown 9xxx instruction
$448    $F0F5   UNKNOWN  F0F5            ; Unknown Fxxx instruction
$44A    $34C5   SE       V4, #C5         ; Skip if V4 == 197
$44C    $32F2   SE       V2, #F2         ; Skip if V2 == 242
$44E    $EF36   UNKNOWN  $EF36           ; Unknown Exxx instruction
$450    $782E   ADD      V8, #2E         ; Add 46 to V8
$452    $BBF7   JP       V0, $BF7        ; Jump to V0 + BF7
$454    $17DE   JP       $7DE            ; Jump to 7DE
$456    $0642   SYS      $642            ; System call to 642
$458    $0B54   SYS      $B54            ; System call to B54
$45A    $8293   XOR      V2, V9          ; V2 ^= V9
$45C    $C0A2   RND      V0, #A2         ; V0 = random & A2
$45E    $44F5   SNE      V4, #F5         ; Skip if V4 != 245
$460    $BD5D   JP       V0, $D5D        ; Jump to V0 + D5D
$462    $399A   SE       V9, #9A         ; Skip if V9 == 154
$464    $04E0   SYS      $4E0            ; System call to 4E0
$466    $CE3C   RND      VE, #3C         ; VE = random & 3C
$468    $2DD3   CALL     $DD3            ; Call subroutine at DD3
$46A    $27DC   CALL     $7DC            ; Call subroutine at 7DC
$46C    $9D3E   UNKNOWN  $9D3E           ; Unknown 9xxx instruction
$46E    $5B69   UNKNOWN  $5B69           ; Unknown 5xxx instruction
$470    $67F8   LD       V7, #F8         ; Load 248 into V7
$472    $B287   JP       V0, $287        ; Jump to V0 + 287
$474    $9869   UNKNOWN  $9869           ; Unknown 9xxx instruction
$476    $16B4   JP       $6B4            ; Jump to 6B4
$478    $C44F   RND      V4, #4F         ; V4 = random & 4F
$47A    $2F24   CALL     $F24            ; Call subroutine at F24
$47C    $E327   UNKNOWN  $E327           ; Unknown Exxx instruction
$47E    $6DB6   LD       VD, #B6         ; Load 182 into VD
$480    $7736   ADD      V7, #36         ; Add 54 to V7
$482    $4AFD   SNE      VA, #FD         ; Skip if VA != 253
$484    $F352   UNKNOWN  F352            ; Unknown Fxxx instruction
$486    $6C43   LD       VC, #43         ; Load 67 into VC
$488    $36EA   SE       V6, #EA         ; Skip if V6 == 234
$48A    $1EB5   JP       $EB5            ; Jump to EB5
$48C    $5AB3   UNKNOWN  $5AB3           ; Unknown 5xxx instruction
$48E    $4E9D   SNE      VE, #9D         ; Skip if VE != 157
$490    $02C6   SYS      $2C6            ; System call to 2C6
$492    $6F9D   LD       VF, #9D         ; Load 157 into VF
$494    $A60D   LD       I, $60D         ; Load 60D into I
$496    $5E2A   UNKNOWN  $5E2A           ; Unknown 5xxx instruction
$498    $217F   CALL     $17F            ; Call subroutine at 17F
$49A    $C72A   RND      V7, #2A         ; V7 = random & 2A
$49C    $8529   UNKNOWN  8529            ; Unknown 8xxx instruction
$49E    $E838   UNKNOWN  $E838           ; Unknown Exxx instruction
$4A0    $B679   JP       V0, $679        ; Jump to V0 + 679
$4A2    $A597   LD       I, $597         ; Load 597 into I
$4A4    $79B2   ADD      V9, #B2         ; Add 178 to V9
$4A6    $7AD8   ADD      VA, #D8         ; Add 216 to VA
$4A8    $1A9F   JP       $A9F            ; Jump to A9F
$4AA    $8639   UNKNOWN  8639            ; Unknown 8xxx instruction
$4AC    $2F61   CALL     $F61            ; Call subroutine at F61
$4AE    $DCC1   DRW      VC, VC, #1      ; Draw 1-byte sprite at VC, VC
$4B0    $4988   SNE      V9, #88         ; Skip if V9 != 136
$4B2    $7405   ADD      V4, #05         ; Add 5 to V4
$4B4    $CC39   RND      VC, #39         ; VC = random & 39
$4B6    $2DD8   CALL     $DD8            ; Call subroutine at DD8
$4B8    $F33D   UNKNOWN  F33D            ; Unknown Fxxx instruction
$4BA    $4E97   SNE      VE, #97         ; Skip if VE != 151
$4BC    $4BB7   SNE      VB, #B7         ; Skip if VB != 183
$4BE    $A887   LD       I, $887         ; Load 887 into I
$4C0    $659F   LD       V5, #9F         ; Load 159 into V5
$4C2    $AA39   LD       I, $A39         ; Load A39 into I
$4C4    $3BF9   SE       VB, #F9         ; Skip if VB == 249
$4C6    $35E9   SE       V5, #E9         ; Skip if V5 == 233
$4C8    $632F   LD       V3, #2F         ; Load 47 into V3
$4CA    $FA5E   UNKNOWN  FA5E            ; Unknown Fxxx instruction
$4CC    $C120   RND      V1, #20         ; V1 = random & 20
$4CE    $86E2   AND      V6, VE          ; V6 &= VE
$4D0    $EB8E   UNKNOWN  $EB8E           ; Unknown Exxx instruction
$4D2    $7C53   ADD      VC, #53         ; Add 83 to VC
$4D4    $E492   UNKNOWN  $E492           ; Unknown Exxx instruction
$4D6    $DDE1   DRW      VD, VE, #1      ; Draw 1-byte sprite at VD, VE
$4D8    $BB27   JP       V0, $B27        ; Jump to V0 + B27
$4DA    $CC26   RND      VC, #26         ; VC = random & 26
$4DC    $E464   UNKNOWN  $E464           ; Unknown Exxx instruction
$4DE    $53BC   UNKNOWN  $53BC           ; Unknown 5xxx instruction
$4E0    $06E0   SYS      $6E0            ; System call to 6E0
$4E2    $682A   LD       V8, #2A         ; Load 42 into V8
$4E4    $ECAF   UNKNOWN  $ECAF           ; Unknown Exxx instruction
$4E6    $E5A7   UNKNOWN  $E5A7           ; Unknown Exxx instruction
$4E8    $8566   SHR      V5              ; V5 >>= 1, VF = LSB
$4EA    $96A5   UNKNOWN  $96A5           ; Unknown 9xxx instruction
$4EC    $A208   LD       I, $208         ; Load 208 into I
$4EE    $F645   UNKNOWN  F645            ; Unknown Fxxx instruction
$4F0    $0235   SYS      $235            ; System call to 235
$4F2    $70FF   ADD      V0, #FF         ; Add 255 to V0
$4F4    $F055   LD       [I], V0         ; Store V0-V0 at I
$4F6    $7CF1   ADD      VC, #F1         ; Add 241 to VC
$4F8    $317E   SE       V1, #7E         ; Skip if V1 == 126
$4FA    $3FFD   SE       VF, #FD         ; Skip if VF == 253
$4FC    $741D   ADD      V4, #1D         ; Add 29 to V4
$4FE    $0256   SYS      $256            ; System call to 256
$500    $90B4   UNKNOWN  $90B4           ; Unknown 9xxx instruction
$502    $14EE   JP       $4EE            ; Jump to 4EE
$504    $43AD   SNE      V3, #AD         ; Skip if V3 != 173
$506    $F72C   UNKNOWN  F72C            ; Unknown Fxxx instruction
$508    $BE65   JP       V0, $E65        ; Jump to V0 + E65
$50A    $8D80   LD       VD, V8          ; VD = V8
$50C    $CCDC   RND      VC, #DC         ; VC = random & DC
$50E    $A9B5   LD       I, $9B5         ; Load 9B5 into I
$510    $1733   JP       $733            ; Jump to 733
$512    $8A4E   SHL      VA              ; VA <<= 1, VF = MSB
$514    $868C   UNKNOWN  868C            ; Unknown 8xxx instruction
$516    $2B8F   CALL     $B8F            ; Call subroutine at B8F
$518    $99B8   UNKNOWN  $99B8           ; Unknown 9xxx instruction
$51A    $48BA   SNE      V8, #BA         ; Skip if V8 != 186
$51C    $03B0   SYS      $3B0            ; System call to 3B0
$51E    $DA72   DRW      VA, V7, #2      ; Draw 2-byte sprite at VA, V7
$520    $56DB   UNKNOWN  $56DB           ; Unknown 5xxx instruction
$522    $F900   UNKNOWN  F900            ; Unknown Fxxx instruction
$524    $784D   ADD      V8, #4D         ; Add 77 to V8
$526    $1594   JP       $594            ; Jump to 594
$528    $FE03   UNKNOWN  FE03            ; Unknown Fxxx instruction
$52A    $7098   ADD      V0, #98         ; Add 152 to V0
$52C    $90CF   UNKNOWN  $90CF           ; Unknown 9xxx instruction
$52E    $FF77   UNKNOWN  FF77            ; Unknown Fxxx instruction
$530    $7DB2   ADD      VD, #B2         ; Add 178 to VD
$532    $E91A   UNKNOWN  $E91A           ; Unknown Exxx instruction
$534    $732F   ADD      V3, #2F         ; Add 47 to V3
$536    $C559   RND      V5, #59         ; V5 = random & 59
$538    $E673   UNKNOWN  $E673           ; Unknown Exxx instruction
$53A    $718C   ADD      V1, #8C         ; Add 140 to V1
$53C    $46A8   SNE      V6, #A8         ; Skip if V6 != 168
$53E    $4B2A   SNE      VB, #2A         ; Skip if VB != 42
$540    $6D8A   LD       VD, #8A         ; Load 138 into VD
$542    $1ED4   JP       $ED4            ; Jump to ED4
$544    $0A52   SYS      $A52            ; System call to A52
$546    $913F   UNKNOWN  $913F           ; Unknown 9xxx instruction
$548    $C282   RND      V2, #82         ; V2 = random & 82
$54A    $508C   UNKNOWN  $508C           ; Unknown 5xxx instruction
$54C    $F973   UNKNOWN  F973            ; Unknown Fxxx instruction
$54E    $A9B1   LD       I, $9B1         ; Load 9B1 into I
$550    $1954   JP       $954            ; Jump to 954
$552    $9527   UNKNOWN  $9527           ; Unknown 9xxx instruction
$554    $4430   SNE      V4, #30         ; Skip if V4 != 48
$556    $ABA5   LD       I, $BA5         ; Load BA5 into I
$558    $FFAC   UNKNOWN  FFAC            ; Unknown Fxxx instruction
$55A    $6A06   LD       VA, #06         ; Load 6 into VA
$55C    $E408   UNKNOWN  $E408           ; Unknown Exxx instruction
$55E    $485C   SNE      V8, #5C         ; Skip if V8 != 92
$560    $4374   SNE      V3, #74         ; Skip if V3 != 116
$562    $6579   LD       V5, #79         ; Load 121 into V5
$564    $88C3   XOR      V8, VC          ; V8 ^= VC
$566    $6A57   LD       VA, #57         ; Load 87 into VA
$568    $4355   SNE      V3, #55         ; Skip if V3 != 85
$56A    $301D   SE       V0, #1D         ; Skip if V0 == 29
$56C    $C5D1   RND      V5, #D1         ; V5 = random & D1
$56E    $6E27   LD       VE, #27         ; Load 39 into VE
$570    $2599   CALL     $599            ; Call subroutine at 599
$572    $D972   DRW      V9, V7, #2      ; Draw 2-byte sprite at V9, V7
$574    $56EB   UNKNOWN  $56EB           ; Unknown 5xxx instruction
$576    $D8F9   DRW      V8, VF, #9      ; Draw 9-byte sprite at V8, VF
$578    $EB97   UNKNOWN  $EB97           ; Unknown Exxx instruction
$57A    $2ACB   CALL     $ACB            ; Call subroutine at ACB
$57C    $2E88   CALL     $E88            ; Call subroutine at E88
$57E    $3A65   SE       VA, #65         ; Skip if VA == 101
$580    $E17E   UNKNOWN  $E17E           ; Unknown Exxx instruction
$582    $E6F7   UNKNOWN  $E6F7           ; Unknown Exxx instruction
$584    $A2F4   LD       I, $2F4         ; Load 2F4 into I
$586    $6F7C   LD       VF, #7C         ; Load 124 into VF
$588    $B463   JP       V0, $463        ; Jump to V0 + 463
$58A    $C8C8   RND      V8, #C8         ; V8 = random & C8
$58C    $5F60   SE       VF, V6          ; Skip if VF == V6
$58E    $2499   CALL     $499            ; Call subroutine at 499
$590    $B3C1   JP       V0, $3C1        ; Jump to V0 + 3C1
$592    $26A3   CALL     $6A3            ; Call subroutine at 6A3
$594    $67B5   LD       V7, #B5         ; Load 181 into V7
$596    $85D6   SHR      V5              ; V5 >>= 1, VF = LSB
$598    $D4FB   DRW      V4, VF, #B      ; Draw 11-byte sprite at V4, VF
$59A    $EC01   UNKNOWN  $EC01           ; Unknown Exxx instruction
$59C    $7618   ADD      V6, #18         ; Add 24 to V6
$59E    $F355   LD       [I], V3         ; Store V0-V3 at I
$5A0    $08A0   SYS      $8A0            ; System call to 8A0
$5A2    $D381   DRW      V3, V8, #1      ; Draw 1-byte sprite at V3, V8
$5A4    $F768   UNKNOWN  F768            ; Unknown Fxxx instruction
$5A6    $F646   UNKNOWN  F646            ; Unknown Fxxx instruction
$5A8    $9A40   SNE      VA, V4          ; Skip if VA != V4
$5AA    $9755   UNKNOWN  $9755           ; Unknown 9xxx instruction
$5AC    $C1CC   RND      V1, #CC         ; V1 = random & CC
$5AE    $462B   SNE      V6, #2B         ; Skip if V6 != 43
$5B0    $C52C   RND      V5, #2C         ; V5 = random & 2C
$5B2    $F979   UNKNOWN  F979            ; Unknown Fxxx instruction
$5B4    $EFAF   UNKNOWN  $EFAF           ; Unknown Exxx instruction
$5B6    $0FC2   SYS      $FC2            ; System call to FC2
$5B8    $4494   SNE      V4, #94         ; Skip if V4 != 148
$5BA    $C7E5   RND      V7, #E5         ; V7 = random & E5
$5BC    $6165   LD       V1, #65         ; Load 101 into V1
$5BE    $0010   SYS      $010            ; System call to 010
$5C0    $F3F5   UNKNOWN  F3F5            ; Unknown Fxxx instruction
$5C2    $520E   UNKNOWN  $520E           ; Unknown 5xxx instruction
$5C4    $1696   JP       $696            ; Jump to 696
$5C6    $A399   LD       I, $399         ; Load 399 into I
$5C8    $C627   RND      V6, #27         ; V6 = random & 27
$5CA    $87D5   SUB      V7, VD          ; V7 -= VD, VF = !borrow
$5CC    $E134   UNKNOWN  $E134           ; Unknown Exxx instruction
$5CE    $6ECC   LD       VE, #CC         ; Load 204 into VE
$5D0    $CD6D   RND      VD, #6D         ; VD = random & 6D
$5D2    $90DC   UNKNOWN  $90DC           ; Unknown 9xxx instruction
$5D4    $04F2   SYS      $4F2            ; System call to 4F2
$5D6    $4B51   SNE      VB, #51         ; Skip if VB != 81
$5D8    $49E7   SNE      V9, #E7         ; Skip if V9 != 231
$5DA    $7447   ADD      V4, #47         ; Add 71 to V4
$5DC    $FF83   UNKNOWN  FF83            ; Unknown Fxxx instruction
$5DE    $FC38   UNKNOWN  FC38            ; Unknown Fxxx instruction
$5E0    $8EBA   UNKNOWN  8EBA            ; Unknown 8xxx instruction
$5E2    $943B   UNKNOWN  $943B           ; Unknown 9xxx instruction
$5E4    $41F0   SNE      V1, #F0         ; Skip if V1 != 240
$5E6    $F112   UNKNOWN  F112            ; Unknown Fxxx instruction
$5E8    $F074   UNKNOWN  F074            ; Unknown Fxxx instruction
$5EA    $E883   UNKNOWN  $E883           ; Unknown Exxx instruction
$5EC    $A867   LD       I, $867         ; Load 867 into I
$5EE    $7BD3   ADD      VB, #D3         ; Add 211 to VB
$5F0    $C7D6   RND      V7, #D6         ; V7 = random & D6
$5F2    $9193   UNKNOWN  $9193           ; Unknown 9xxx instruction
$5F4    $FF13   UNKNOWN  FF13            ; Unknown Fxxx instruction
$5F6    $F4DD   UNKNOWN  F4DD            ; Unknown Fxxx instruction
$5F8    $B9E7   JP       V0, $9E7        ; Jump to V0 + 9E7
$5FA    $2A42   CALL     $A42            ; Call subroutine at A42
$5FC    $0B39   SYS      $B39            ; System call to B39
$5FE    $FDAD   UNKNOWN  FDAD            ; Unknown Fxxx instruction
$600    $8E83   XOR      VE, V8          ; VE ^= V8
$602    $0438   SYS      $438            ; System call to 438
$604    $B116   JP       V0, $116        ; Jump to V0 + 116
$606    $CB3C   RND      VB, #3C         ; VB = random & 3C
$608    $AAF0   LD       I, $AF0         ; Load AF0 into I
$60A    $44CC   SNE      V4, #CC         ; Skip if V4 != 204
$60C    $4470   SNE      V4, #70         ; Skip if V4 != 112
$60E    $C46C   RND      V4, #6C         ; V4 = random & 6C
$610    $6611   LD       V6, #11         ; Load 17 into V6
$612    $0B89   SYS      $B89            ; System call to B89
$614    $54BA   UNKNOWN  $54BA           ; Unknown 5xxx instruction
$616    $6F4B   LD       VF, #4B         ; Load 75 into VF
$618    $BD0E   JP       V0, $D0E        ; Jump to V0 + D0E
$61A    $0E55   SYS      $E55            ; System call to E55
$61C    $4FEC   SNE      VF, #EC         ; Skip if VF != 236
$61E    $D514   DRW      V5, V1, #4      ; Draw 4-byte sprite at V5, V1
$620    $DB0E   DRW      VB, V0, #E      ; Draw 14-byte sprite at VB, V0
$622    $7C07   ADD      VC, #07         ; Add 7 to VC
$624    $12C4   JP       $2C4            ; Jump to 2C4
$626    $4BA0   SNE      VB, #A0         ; Skip if VB != 160
$628    $301F   SE       V0, #1F         ; Skip if V0 == 31
$62A    $F944   UNKNOWN  F944            ; Unknown Fxxx instruction
$62C    $A9D5   LD       I, $9D5         ; Load 9D5 into I
$62E    $AE5B   LD       I, $E5B         ; Load E5B into I
$630    $E65F   UNKNOWN  $E65F           ; Unknown Exxx instruction
$632    $59E9   UNKNOWN  $59E9           ; Unknown 5xxx instruction
$634    $7A33   ADD      VA, #33         ; Add 51 to VA
$636    $5246   UNKNOWN  $5246           ; Unknown 5xxx instruction
$638    $7A79   ADD      VA, #79         ; Add 121 to VA
$63A    $01C0   SYS      $1C0            ; System call to 1C0
$63C    $035F   SYS      $35F            ; System call to 35F
$63E    $6F17   LD       VF, #17         ; Load 23 into VF
$640    $589B   UNKNOWN  $589B           ; Unknown 5xxx instruction
$642    $2B96   CALL     $B96            ; Call subroutine at B96
$644    $90A8   UNKNOWN  $90A8           ; Unknown 9xxx instruction
$646    $C54B   RND      V5, #4B         ; V5 = random & 4B
$648    $96CC   UNKNOWN  $96CC           ; Unknown 9xxx instruction
$64A    $5DEA   UNKNOWN  $5DEA           ; Unknown 5xxx instruction
$64C    $3816   SE       V8, #16         ; Skip if V8 == 22
$64E    $C758   RND      V7, #58         ; V7 = random & 58
$650    $B457   JP       V0, $457        ; Jump to V0 + 457
$652    $940E   UNKNOWN  $940E           ; Unknown 9xxx instruction
$654    $C72F   RND      V7, #2F         ; V7 = random & 2F
$656    $E5F3   UNKNOWN  $E5F3           ; Unknown Exxx instruction
$658    $9383   UNKNOWN  $9383           ; Unknown 9xxx instruction
$65A    $30EE   SE       V0, #EE         ; Skip if V0 == 238
$65C    $1170   JP       $170            ; Jump to 170
$65E    $EB10   UNKNOWN  $EB10           ; Unknown Exxx instruction
$660    $025D   SYS      $25D            ; System call to 25D
$662    $B439   JP       V0, $439        ; Jump to V0 + 439
$664    $617A   LD       V1, #7A         ; Load 122 into V1
$666    $1E04   JP       $E04            ; Jump to E04
$668    $B3B1   JP       V0, $3B1        ; Jump to V0 + 3B1
$66A    $D610   DRW      V6, V1, #0      ; Draw 0-byte sprite at V6, V1
$66C    $432E   SNE      V3, #2E         ; Skip if V3 != 46
$66E    $CF7C   RND      VF, #7C         ; VF = random & 7C
$670    $54AB   UNKNOWN  $54AB           ; Unknown 5xxx instruction
$672    $9189   UNKNOWN  $9189           ; Unknown 9xxx instruction
$674    $B5F5   JP       V0, $5F5        ; Jump to V0 + 5F5
$676    $B2FF   JP       V0, $2FF        ; Jump to V0 + 2FF
$678    $06A7   SYS      $6A7            ; System call to 6A7
$67A    $565C   UNKNOWN  $565C           ; Unknown 5xxx instruction
$67C    $AD12   LD       I, $D12         ; Load D12 into I
$67E    $AFB4   LD       I, $FB4         ; Load FB4 into I
$680    $A112   LD       I, $112         ; Load 112 into I
$682    $3066   SE       V0, #66         ; Skip if V0 == 102
$684    $A5CC   LD       I, $5CC         ; Load 5CC into I
$686    $0821   SYS      $821            ; System call to 821
$688    $3CBF   SE       VC, #BF         ; Skip if VC == 191
$68A    $17E7   JP       $7E7            ; Jump to 7E7
$68C    $0446   SYS      $446            ; System call to 446
$68E    $C570   RND      V5, #70         ; V5 = random & 70
$690    $CAA5   RND      VA, #A5         ; VA = random & A5
$692    $D70F   DRW      V7, V0, #F      ; Draw 15-byte sprite at V7, V0
$694    $B690   JP       V0, $690        ; Jump to V0 + 690
$696    $6697   LD       V6, #97         ; Load 151 into V6
$698    $B00B   JP       V0, $00B        ; Jump to V0 + 00B
$69A    $BE9F   JP       V0, $E9F        ; Jump to V0 + E9F
$69C    $951A   UNKNOWN  $951A           ; Unknown 9xxx instruction
$69E    $FEB8   UNKNOWN  FEB8            ; Unknown Fxxx instruction
$6A0    $A19C   LD       I, $19C         ; Load 19C into I
$6A2    $380C   SE       V8, #0C         ; Skip if V8 == 12
$6A4    $CEFC   RND      VE, #FC         ; VE = random & FC
$6A6    $8AE4   ADD      VA, VE          ; VA += VE, VF = carry
$6A8    $946A   UNKNOWN  $946A           ; Unknown 9xxx instruction
$6AA    $A049   LD       I, $049         ; Load 049 into I
$6AC    $FD7B   UNKNOWN  FD7B            ; Unknown Fxxx instruction
$6AE    $5929   UNKNOWN  $5929           ; Unknown 5xxx instruction
$6B0    $CB77   RND      VB, #77         ; VB = random & 77
$6B2    $6F16   LD       VF, #16         ; Load 22 into VF
$6B4    $D8C6   DRW      V8, VC, #6      ; Draw 6-byte sprite at V8, VC
$6B6    $6663   LD       V6, #63         ; Load 99 into V6
$6B8    $25C3   CALL     $5C3            ; Call subroutine at 5C3
$6BA    $CFDF   RND      VF, #DF         ; VF = random & DF
$6BC    $D83F   DRW      V8, V3, #F      ; Draw 15-byte sprite at V8, V3
$6BE    $C22F   RND      V2, #2F         ; V2 = random & 2F
$6C0    $A7E4   LD       I, $7E4         ; Load 7E4 into I
$6C2    $7118   ADD      V1, #18         ; Add 24 to V1
$6C4    $251A   CALL     $51A            ; Call subroutine at 51A
$6C6    $2B5D   CALL     $B5D            ; Call subroutine at B5D
$6C8    $E484   UNKNOWN  $E484           ; Unknown Exxx instruction
$6CA    $F70A   LD       V7, K           ; Wait for key press, store in V7
$6CC    $D6AB   DRW      V6, VA, #B      ; Draw 11-byte sprite at V6, VA
$6CE    $8213   XOR      V2, V1          ; V2 ^= V1
$6D0    $DBD9   DRW      VB, VD, #9      ; Draw 9-byte sprite at VB, VD
$6D2    $61AA   LD       V1, #AA         ; Load 170 into V1
$6D4    $465D   SNE      V6, #5D         ; Skip if V6 != 93
$6D6    $DC8B   DRW      VC, V8, #B      ; Draw 11-byte sprite at VC, V8
$6D8    $DCD6   DRW      VC, VD, #6      ; Draw 6-byte sprite at VC, VD
$6DA    $A781   LD       I, $781         ; Load 781 into I
$6DC    $D1BB   DRW      V1, VB, #B      ; Draw 11-byte sprite at V1, VB
$6DE    $DFF1   DRW      VF, VF, #1      ; Draw 1-byte sprite at VF, VF
$6E0    $3630   SE       V6, #30         ; Skip if V6 == 48
$6E2    $C05C   RND      V0, #5C         ; V0 = random & 5C
$6E4    $9804   UNKNOWN  $9804           ; Unknown 9xxx instruction
$6E6    $27BD   CALL     $7BD            ; Call subroutine at 7BD
$6E8    $E1B0   UNKNOWN  $E1B0           ; Unknown Exxx instruction
$6EA    $A384   LD       I, $384         ; Load 384 into I
$6EC    $BDAB   JP       V0, $DAB        ; Jump to V0 + DAB
$6EE    $0941   SYS      $941            ; System call to 941
$6F0    $8A20   LD       VA, V2          ; VA = V2
$6F2    $0E41   SYS      $E41            ; System call to E41
$6F4    $1794   JP       $794            ; Jump to 794
$6F6    $EF02   UNKNOWN  $EF02           ; Unknown Exxx instruction
$6F8    $1EC3   JP       $EC3            ; Jump to EC3
$6FA    $5040   SE       V0, V4          ; Skip if V0 == V4
$6FC    $4683   SNE      V6, #83         ; Skip if V6 != 131
$6FE    $4BD4   SNE      VB, #D4         ; Skip if VB != 212
$700    $C975   RND      V9, #75         ; V9 = random & 75
$702    $55B5   UNKNOWN  $55B5           ; Unknown 5xxx instruction
$704    $F9EF   UNKNOWN  F9EF            ; Unknown Fxxx instruction
$706    $03AA   SYS      $3AA            ; System call to 3AA
$708    $9A7A   UNKNOWN  $9A7A           ; Unknown 9xxx instruction
$70A    $DF6A   DRW      VF, V6, #A      ; Draw 10-byte sprite at VF, V6
$70C    $6BBE   LD       VB, #BE         ; Load 190 into VB
$70E    $CC75   RND      VC, #75         ; VC = random & 75
$710    $4F41   SNE      VF, #41         ; Skip if VF != 65
$712    $F740   UNKNOWN  F740            ; Unknown Fxxx instruction
$714    $E907   UNKNOWN  $E907           ; Unknown Exxx instruction
$716    $456E   SNE      V5, #6E         ; Skip if V5 != 110
$718    $993E   UNKNOWN  $993E           ; Unknown 9xxx instruction
$71A    $C87C   RND      V8, #7C         ; V8 = random & 7C
$71C    $18BA   JP       $8BA            ; Jump to 8BA
$71E    $217A   CALL     $17A            ; Call subroutine at 17A
$720    $52B8   UNKNOWN  $52B8           ; Unknown 5xxx instruction
$722    $49C9   SNE      V9, #C9         ; Skip if V9 != 201
$724    $A9B3   LD       I, $9B3         ; Load 9B3 into I
$726    $21A6   CALL     $1A6            ; Call subroutine at 1A6
$728    $C289   RND      V2, #89         ; V2 = random & 89
$72A    $B43D   JP       V0, $43D        ; Jump to V0 + 43D
$72C    $594C   UNKNOWN  $594C           ; Unknown 5xxx instruction
$72E    $C45D   RND      V4, #5D         ; V4 = random & 5D
$730    $E299   UNKNOWN  $E299           ; Unknown Exxx instruction
$732    $0628   SYS      $628            ; System call to 628
$734    $12C2   JP       $2C2            ; Jump to 2C2
$736    $8FCA   UNKNOWN  8FCA            ; Unknown 8xxx instruction
$738    $9889   UNKNOWN  $9889           ; Unknown 9xxx instruction
$73A    $0163   SYS      $163            ; System call to 163
$73C    $1330   JP       $330            ; Jump to 330
$73E    $43EA   SNE      V3, #EA         ; Skip if V3 != 234
$740    $A719   LD       I, $719         ; Load 719 into I
$742    $B3F5   JP       V0, $3F5        ; Jump to V0 + 3F5
$744    $47B6   SNE      V7, #B6         ; Skip if V7 != 182
$746    $157F   JP       $57F            ; Jump to 57F
$748    $C12A   RND      V1, #2A         ; V1 = random & 2A
$74A    $0415   SYS      $415            ; System call to 415
$74C    $5CF6   UNKNOWN  $5CF6           ; Unknown 5xxx instruction
$74E    $A54A   LD       I, $54A         ; Load 54A into I
$750    $E3A5   UNKNOWN  $E3A5           ; Unknown Exxx instruction
$752    $5D3A   UNKNOWN  $5D3A           ; Unknown 5xxx instruction
$754    $827F   UNKNOWN  827F            ; Unknown 8xxx instruction
$756    $44AB   SNE      V4, #AB         ; Skip if V4 != 171
$758    $5FA1   UNKNOWN  $5FA1           ; Unknown 5xxx instruction
$75A    $AB2E   LD       I, $B2E         ; Load B2E into I
$75C    $1C68   JP       $C68            ; Jump to C68
$75E    $46EF   SNE      V6, #EF         ; Skip if V6 != 239
$760    $2104   CALL     $104            ; Call subroutine at 104
$762    $F84E   UNKNOWN  F84E            ; Unknown Fxxx instruction
$764    $B4DA   JP       V0, $4DA        ; Jump to V0 + 4DA
$766    $400A   SNE      V0, #0A         ; Skip if V0 != 10
$768    $04EF   SYS      $4EF            ; System call to 4EF
$76A    $A099   LD       I, $099         ; Load 099 into I
$76C    $2D06   CALL     $D06            ; Call subroutine at D06
$76E    $A863   LD       I, $863         ; Load 863 into I
$770    $2BFB   CALL     $BFB            ; Call subroutine at BFB
$772    $11D2   JP       $1D2            ; Jump to 1D2
$774    $AF4E   LD       I, $F4E         ; Load F4E into I
$776    $F75E   UNKNOWN  F75E            ; Unknown Fxxx instruction
$778    $8C7E   SHL      VC              ; VC <<= 1, VF = MSB
$77A    $DAC0   DRW      VA, VC, #0      ; Draw 0-byte sprite at VA, VC
$77C    $2A82   CALL     $A82            ; Call subroutine at A82
$77E    $535E   UNKNOWN  $535E           ; Unknown 5xxx instruction
$780    $B550   JP       V0, $550        ; Jump to V0 + 550
$782    $38F1   SE       V8, #F1         ; Skip if V8 == 241
$784    $A042   LD       I, $042         ; Load 042 into I
$786    $E3CC   UNKNOWN  $E3CC           ; Unknown Exxx instruction
$788    $54CC   UNKNOWN  $54CC           ; Unknown 5xxx instruction
$78A    $9EC3   UNKNOWN  $9EC3           ; Unknown 9xxx instruction
$78C    $C855   RND      V8, #55         ; V8 = random & 55
$78E    $7339   ADD      V3, #39         ; Add 57 to V3
$790    $545D   UNKNOWN  $545D           ; Unknown 5xxx instruction
$792    $C4FF   RND      V4, #FF         ; V4 = random & FF
$794    $5A01   UNKNOWN  $5A01           ; Unknown 5xxx instruction
$796    $9E10   SNE      VE, V1          ; Skip if VE != V1
$798    $135B   JP       $35B            ; Jump to 35B
$79A    $CC51   RND      VC, #51         ; VC = random & 51
$79C    $C6AA   RND      V6, #AA         ; V6 = random & AA
$79E    $2A07   CALL     $A07            ; Call subroutine at A07
$7A0    $F047   UNKNOWN  F047            ; Unknown Fxxx instruction
$7A2    $A40A   LD       I, $40A         ; Load 40A into I
$7A4    $7ADD   ADD      VA, #DD         ; Add 221 to VA
$7A6    $7CC6   ADD      VC, #C6         ; Add 198 to VC
$7A8    $AA7F   LD       I, $A7F         ; Load A7F into I
$7AA    $9A67   UNKNOWN  $9A67           ; Unknown 9xxx instruction
$7AC    $2DEA   CALL     $DEA            ; Call subroutine at DEA
$7AE    $8111   OR       V1, V1          ; V1 |= V1
$7B0    $081D   SYS      $81D            ; System call to 81D
$7B2    $F071   UNKNOWN  F071            ; Unknown Fxxx instruction
$7B4    $AA43   LD       I, $A43         ; Load A43 into I
$7B6    $5DA3   UNKNOWN  $5DA3           ; Unknown 5xxx instruction
$7B8    $01C1   SYS      $1C1            ; System call to 1C1
$7BA    $FD5C   UNKNOWN  FD5C            ; Unknown Fxxx instruction
$7BC    $A244   LD       I, $244         ; Load 244 into I
$7BE    $FF20   UNKNOWN  FF20            ; Unknown Fxxx instruction
$7C0    $3CFC   SE       VC, #FC         ; Skip if VC == 252
$7C2    $A650   LD       I, $650         ; Load 650 into I
$7C4    $CEBC   RND      VE, #BC         ; VE = random & BC
$7C6    $A4A2   LD       I, $4A2         ; Load 4A2 into I
$7C8    $EB00   UNKNOWN  $EB00           ; Unknown Exxx instruction
$7CA    $40E8   SNE      V0, #E8         ; Skip if V0 != 232
$7CC    $567F   UNKNOWN  $567F           ; Unknown 5xxx instruction
$7CE    $85A9   UNKNOWN  85A9            ; Unknown 8xxx instruction
$7D0    $CDE3   RND      VD, #E3         ; VD = random & E3
$7D2    $EF27   UNKNOWN  $EF27           ; Unknown Exxx instruction
$7D4    $8B78   UNKNOWN  8B78            ; Unknown 8xxx instruction
$7D6    $2973   CALL     $973            ; Call subroutine at 973
$7D8    $FCEA   UNKNOWN  FCEA            ; Unknown Fxxx instruction
$7DA    $A496   LD       I, $496         ; Load 496 into I
$7DC    $E464   UNKNOWN  $E464           ; Unknown Exxx instruction
$7DE    $0D1C   SYS      $D1C            ; System call to D1C
$7E0    $B1A0   JP       V0, $1A0        ; Jump to V0 + 1A0
$7E2    $9FAA   UNKNOWN  $9FAA           ; Unknown 9xxx instruction
$7E4    $E97E   UNKNOWN  $E97E           ; Unknown Exxx instruction
$7E6    $62A6   LD       V2, #A6         ; Load 166 into V2
$7E8    $A989   LD       I, $989         ; Load 989 into I
$7EA    $CC22   RND      VC, #22         ; VC = random & 22
$7EC    $76E3   ADD      V6, #E3         ; Add 227 to V6
$7EE    $4C5E   SNE      VC, #5E         ; Skip if VC != 94
$7F0    $8112   AND      V1, V1          ; V1 &= V1
$7F2    $B534   JP       V0, $534        ; Jump to V0 + 534
$7F4    $227C   CALL     $27C            ; Call subroutine at 27C
$7F6    $911D   UNKNOWN  $911D           ; Unknown 9xxx instruction
$7F8    $6BDC   LD       VB, #DC         ; Load 220 into VB
$7FA    $2767   CALL     $767            ; Call subroutine at 767
$7FC    $0752   SYS      $752            ; System call to 752
$7FE    $903A   UNKNOWN  $903A           ; Unknown 9xxx instruction
$800    $E9A1   SKNP     V9              ; Skip if key V9 not pressed
$802    $E0CC   UNKNOWN  $E0CC           ; Unknown Exxx instruction
$804    $B3E6   JP       V0, $3E6        ; Jump to V0 + 3E6
$806    $9A5B   UNKNOWN  $9A5B           ; Unknown 9xxx instruction
$808    $34EA   SE       V4, #EA         ; Skip if V4 == 234
$80A    $0FC3   SYS      $FC3            ; System call to FC3
$80C    $3552   SE       V5, #52         ; Skip if V5 == 82
$80E    $F81E   ADD      I, V8           ; I += V8
$810    $E5D0   UNKNOWN  $E5D0           ; Unknown Exxx instruction
$812    $0B54   SYS      $B54            ; System call to B54
$814    $13DB   JP       $3DB            ; Jump to 3DB
$816    $A88A   LD       I, $88A         ; Load 88A into I
$818    $E8B8   UNKNOWN  $E8B8           ; Unknown Exxx instruction
$81A    $EF1B   UNKNOWN  $EF1B           ; Unknown Exxx instruction
$81C    $F331   UNKNOWN  F331            ; Unknown Fxxx instruction
$81E    $17F1   JP       $7F1            ; Jump to 7F1
$820    $F19A   UNKNOWN  F19A            ; Unknown Fxxx instruction
$822    $B1E2   JP       V0, $1E2        ; Jump to V0 + 1E2
$824    $C9BA   RND      V9, #BA         ; V9 = random & BA
$826    $6330   LD       V3, #30         ; Load 48 into V3
$828    $4A04   SNE      VA, #04         ; Skip if VA != 4
$82A    $10F9   JP       $0F9            ; Jump to 0F9
$82C    $7D86   ADD      VD, #86         ; Add 134 to VD
$82E    $34D0   SE       V4, #D0         ; Skip if V4 == 208
$830    $8CAF   UNKNOWN  8CAF            ; Unknown 8xxx instruction
$832    $2D46   CALL     $D46            ; Call subroutine at D46
$834    $ACAE   LD       I, $CAE         ; Load CAE into I
$836    $D7ED   DRW      V7, VE, #D      ; Draw 13-byte sprite at V7, VE
$838    $EE51   UNKNOWN  $EE51           ; Unknown Exxx instruction
$83A    $9BAE   UNKNOWN  $9BAE           ; Unknown 9xxx instruction
$83C    $E0CA   UNKNOWN  $E0CA           ; Unknown Exxx instruction
$83E    $B22B   JP       V0, $22B        ; Jump to V0 + 22B
$840    $A013   LD       I, $013         ; Load 013 into I
$842    $338A   SE       V3, #8A         ; Skip if V3 == 138
$844    $368A   SE       V6, #8A         ; Skip if V6 == 138
$846    $8F02   AND      VF, V0          ; VF &= V0
$848    $6DFF   LD       VD, #FF         ; Load 255 into VD
$84A    $98DD   UNKNOWN  $98DD           ; Unknown 9xxx instruction
$84C    $7CD5   ADD      VC, #D5         ; Add 213 to VC
$84E    $90F2   UNKNOWN  $90F2           ; Unknown 9xxx instruction
$850    $DA3B   DRW      VA, V3, #B      ; Draw 11-byte sprite at VA, V3
$852    $4013   SNE      V0, #13         ; Skip if V0 != 19
$854    $82BD   UNKNOWN  82BD            ; Unknown 8xxx instruction
$856    $C534   RND      V5, #34         ; V5 = random & 34
$858    $BF26   JP       V0, $F26        ; Jump to V0 + F26
$85A    $F6F9   UNKNOWN  F6F9            ; Unknown Fxxx instruction
$85C    $7499   ADD      V4, #99         ; Add 153 to V4
$85E    $FFA7   UNKNOWN  FFA7            ; Unknown Fxxx instruction
$860    $45CE   SNE      V5, #CE         ; Skip if V5 != 206
$862    $F21E   ADD      I, V2           ; I += V2
$864    $EB83   UNKNOWN  $EB83           ; Unknown Exxx instruction
$866    $0FDB   SYS      $FDB            ; System call to FDB
$868    $00DE   SYS      $0DE            ; System call to 0DE
$86A    $8B55   SUB      VB, V5          ; VB -= V5, VF = !borrow
$86C    $C710   RND      V7, #10         ; V7 = random & 10
$86E    $0884   SYS      $884            ; System call to 884
$870    $DFE7   DRW      VF, VE, #7      ; Draw 7-byte sprite at VF, VE
$872    $A79B   LD       I, $79B         ; Load 79B into I
$874    $DCEF   DRW      VC, VE, #F      ; Draw 15-byte sprite at VC, VE
$876    $6E8B   LD       VE, #8B         ; Load 139 into VE
$878    $8123   XOR      V1, V2          ; V1 ^= V2
$87A    $CD41   RND      VD, #41         ; VD = random & 41
$87C    $5641   UNKNOWN  $5641           ; Unknown 5xxx instruction
$87E    $F32B   UNKNOWN  F32B            ; Unknown Fxxx instruction
$880    $12B8   JP       $2B8            ; Jump to 2B8
$882    $DEB3   DRW      VE, VB, #3      ; Draw 3-byte sprite at VE, VB
$884    $85E3   XOR      V5, VE          ; V5 ^= VE
$886    $6CBF   LD       VC, #BF         ; Load 191 into VC
$888    $7E04   ADD      VE, #04         ; Add 4 to VE
$88A    $BDAA   JP       V0, $DAA        ; Jump to V0 + DAA
$88C    $48A6   SNE      V8, #A6         ; Skip if V8 != 166
$88E    $91E3   UNKNOWN  $91E3           ; Unknown 9xxx instruction
$890    $D572   DRW      V5, V7, #2      ; Draw 2-byte sprite at V5, V7
$892    $A26F   LD       I, $26F         ; Load 26F into I
$894    $5C31   UNKNOWN  $5C31           ; Unknown 5xxx instruction
$896    $E0C2   UNKNOWN  $E0C2           ; Unknown Exxx instruction
$898    $4480   SNE      V4, #80         ; Skip if V4 != 128
$89A    $D051   DRW      V0, V5, #1      ; Draw 1-byte sprite at V0, V5
$89C    $73F5   ADD      V3, #F5         ; Add 245 to V3
$89E    $5622   UNKNOWN  $5622           ; Unknown 5xxx instruction
$8A0    $F3E4   UNKNOWN  F3E4            ; Unknown Fxxx instruction
$8A2    $A80B   LD       I, $80B         ; Load 80B into I
$8A4    $8575   SUB      V5, V7          ; V5 -= V7, VF = !borrow
$8A6    $AAEA   LD       I, $AEA         ; Load AEA into I
$8A8    $64F0   LD       V4, #F0         ; Load 240 into V4
$8AA    $A4CE   LD       I, $4CE         ; Load 4CE into I
$8AC    $0A35   SYS      $A35            ; System call to A35
$8AE    $D69A   DRW      V6, V9, #A      ; Draw 10-byte sprite at V6, V9
$8B0    $1081   JP       $081            ; Jump to 081
$8B2    $C2A3   RND      V2, #A3         ; V2 = random & A3
$8B4    $5E12   UNKNOWN  $5E12           ; Unknown 5xxx instruction
$8B6    $3CFE   SE       VC, #FE         ; Skip if VC == 254
$8B8    $A320   LD       I, $320         ; Load 320 into I
$8BA    $5862   UNKNOWN  $5862           ; Unknown 5xxx instruction
$8BC    $2436   CALL     $436            ; Call subroutine at 436
$8BE    $8A3E   SHL      VA              ; VA <<= 1, VF = MSB
$8C0    $02DD   SYS      $2DD            ; System call to 2DD
$8C2    $A5E9   LD       I, $5E9         ; Load 5E9 into I
$8C4    $5CA8   UNKNOWN  $5CA8           ; Unknown 5xxx instruction
$8C6    $169A   JP       $69A            ; Jump to 69A
$8C8    $7AE0   ADD      VA, #E0         ; Add 224 to VA
$8CA    $EB3C   UNKNOWN  $EB3C           ; Unknown Exxx instruction
$8CC    $BEEC   JP       V0, $EEC        ; Jump to V0 + EEC
$8CE    $C06B   RND      V0, #6B         ; V0 = random & 6B
$8D0    $D155   DRW      V1, V5, #5      ; Draw 5-byte sprite at V1, V5
$8D2    $6D2C   LD       VD, #2C         ; Load 44 into VD
$8D4    $7BD0   ADD      VB, #D0         ; Add 208 to VB
$8D6    $3D60   SE       VD, #60         ; Skip if VD == 96
$8D8    $4F29   SNE      VF, #29         ; Skip if VF != 41
$8DA    $5FEC   UNKNOWN  $5FEC           ; Unknown 5xxx instruction
$8DC    $2F9D   CALL     $F9D            ; Call subroutine at F9D
$8DE    $4CD7   SNE      VC, #D7         ; Skip if VC != 215
$8E0    $F8EE   UNKNOWN  F8EE            ; Unknown Fxxx instruction
$8E2    $83A8   UNKNOWN  83A8            ; Unknown 8xxx instruction
$8E4    $B4D7   JP       V0, $4D7        ; Jump to V0 + 4D7
$8E6    $4A76   SNE      VA, #76         ; Skip if VA != 118
$8E8    $F612   UNKNOWN  F612            ; Unknown Fxxx instruction
$8EA    $344A   SE       V4, #4A         ; Skip if V4 == 74
$8EC    $697E   LD       V9, #7E         ; Load 126 into V9
$8EE    $D999   DRW      V9, V9, #9      ; Draw 9-byte sprite at V9, V9
$8F0    $CFF5   RND      VF, #F5         ; VF = random & F5
$8F2    $869E   SHL      V6              ; V6 <<= 1, VF = MSB
$8F4    $1351   JP       $351            ; Jump to 351
$8F6    $56AA   UNKNOWN  $56AA           ; Unknown 5xxx instruction
$8F8    $7846   ADD      V8, #46         ; Add 70 to V8
$8FA    $49E5   SNE      V9, #E5         ; Skip if V9 != 229
$8FC    $72A4   ADD      V2, #A4         ; Add 164 to V2
$8FE    $1D14   JP       $D14            ; Jump to D14
$900    $173E   JP       $73E            ; Jump to 73E
$902    $3066   SE       V0, #66         ; Skip if V0 == 102
$904    $A68B   LD       I, $68B         ; Load 68B into I
$906    $1D9C   JP       $D9C            ; Jump to D9C
$908    $0071   SYS      $071            ; System call to 071
$90A    $008B   SYS      $08B            ; System call to 08B
$90C    $984F   UNKNOWN  $984F           ; Unknown 9xxx instruction
$90E    $A9D3   LD       I, $9D3         ; Load 9D3 into I
$910    $B533   JP       V0, $533        ; Jump to V0 + 533
$912    $A2A0   LD       I, $2A0         ; Load 2A0 into I
$914    $367F   SE       V6, #7F         ; Skip if V6 == 127
$916    $1720   JP       $720            ; Jump to 720
$918    $D423   DRW      V4, V2, #3      ; Draw 3-byte sprite at V4, V2
$91A    $04CA   SYS      $4CA            ; System call to 4CA
$91C    $7E7E   ADD      VE, #7E         ; Add 126 to VE
$91E    $9222   UNKNOWN  $9222           ; Unknown 9xxx instruction
$920    $EE62   UNKNOWN  $EE62           ; Unknown Exxx instruction
$922    $A240   LD       I, $240         ; Load 240 into I
$924    $147F   JP       $47F            ; Jump to 47F
$926    $C9A6   RND      V9, #A6         ; V9 = random & A6
$928    $8E00   LD       VE, V0          ; VE = V0
$92A    $E181   UNKNOWN  $E181           ; Unknown Exxx instruction
$92C    $CF92   RND      VF, #92         ; VF = random & 92
$92E    $AE4A   LD       I, $E4A         ; Load E4A into I
$930    $8F1F   UNKNOWN  8F1F            ; Unknown 8xxx instruction
$932    $8E2F   UNKNOWN  8E2F            ; Unknown 8xxx instruction
$934    $321E   SE       V2, #1E         ; Skip if V2 == 30
$936    $5162   UNKNOWN  $5162           ; Unknown 5xxx instruction
$938    $79A3   ADD      V9, #A3         ; Add 163 to V9
$93A    $1680   JP       $680            ; Jump to 680
$93C    $31D5   SE       V1, #D5         ; Skip if V1 == 213
$93E    $8580   LD       V5, V8          ; V5 = V8
$940    $D057   DRW      V0, V5, #7      ; Draw 7-byte sprite at V0, V5
$942    $74F3   ADD      V4, #F3         ; Add 243 to V4
$944    $D393   DRW      V3, V9, #3      ; Draw 3-byte sprite at V3, V9
$946    $4435   SNE      V4, #35         ; Skip if V4 != 53
$948    $F9D1   UNKNOWN  F9D1            ; Unknown Fxxx instruction
$94A    $C4F4   RND      V4, #F4         ; V4 = random & F4
$94C    $66B6   LD       V6, #B6         ; Load 182 into V6
$94E    $02D4   SYS      $2D4            ; System call to 2D4
$950    $BD2A   JP       V0, $D2A        ; Jump to V0 + D2A
$952    $A391   LD       I, $391         ; Load 391 into I
$954    $66AF   LD       V6, #AF         ; Load 175 into V6
$956    $4C96   SNE      VC, #96         ; Skip if VC != 150
$958    $7385   ADD      V3, #85         ; Add 133 to V3
$95A    $FBB9   UNKNOWN  FBB9            ; Unknown Fxxx instruction
$95C    $573F   UNKNOWN  $573F           ; Unknown 5xxx instruction
$95E    $AC46   LD       I, $C46         ; Load C46 into I
$960    $4E2C   SNE      VE, #2C         ; Skip if VE != 44
$962    $B688   JP       V0, $688        ; Jump to V0 + 688
$964    $081D   SYS      $81D            ; System call to 81D
$966    $E068   UNKNOWN  $E068           ; Unknown Exxx instruction
$968    $4C16   SNE      VC, #16         ; Skip if VC != 22
$96A    $D962   DRW      V9, V6, #2      ; Draw 2-byte sprite at V9, V6
$96C    $F852   UNKNOWN  F852            ; Unknown Fxxx instruction
$96E    $A35D   LD       I, $35D         ; Load 35D into I
$970    $DC34   DRW      VC, V3, #4      ; Draw 4-byte sprite at VC, V3
$972    $A409   LD       I, $409         ; Load 409 into I
$974    $8407   SUBN     V4, V0          ; V4 = V0 - V4, VF = !borrow
$976    $92CA   UNKNOWN  $92CA           ; Unknown 9xxx instruction
$978    $68D3   LD       V8, #D3         ; Load 211 into V8
$97A    $4B8E   SNE      VB, #8E         ; Skip if VB != 142
$97C    $BBA7   JP       V0, $BA7        ; Jump to V0 + BA7
$97E    $AC67   LD       I, $C67         ; Load C67 into I
$980    $53C4   UNKNOWN  $53C4           ; Unknown 5xxx instruction
$982    $9090   SNE      V0, V9          ; Skip if V0 != V9
$984    $1CAD   JP       $CAD            ; Jump to CAD
$986    $A3CA   LD       I, $3CA         ; Load 3CA into I
$988    $7B37   ADD      VB, #37         ; Add 55 to VB
$98A    $955B   UNKNOWN  $955B           ; Unknown 9xxx instruction
$98C    $F05E   UNKNOWN  F05E            ; Unknown Fxxx instruction
$98E    $4512   SNE      V5, #12         ; Skip if V5 != 18
$990    $BBF4   JP       V0, $BF4        ; Jump to V0 + BF4
$992    $F539   UNKNOWN  F539            ; Unknown Fxxx instruction
$994    $81DA   UNKNOWN  81DA            ; Unknown 8xxx instruction
$996    $9E35   UNKNOWN  $9E35           ; Unknown 9xxx instruction
$998    $3553   SE       V5, #53         ; Skip if V5 == 83
$99A    $CC0E   RND      VC, #0E         ; VC = random & 0E
$99C    $CAB0   RND      VA, #B0         ; VA = random & B0
$99E    $9F16   UNKNOWN  $9F16           ; Unknown 9xxx instruction
$9A0    $DD8A   DRW      VD, V8, #A      ; Draw 10-byte sprite at VD, V8
$9A2    $BCB9   JP       V0, $CB9        ; Jump to V0 + CB9
$9A4    $5F54   UNKNOWN  $5F54           ; Unknown 5xxx instruction
$9A6    $95C6   UNKNOWN  $95C6           ; Unknown 9xxx instruction
$9A8    $1EDB   JP       $EDB            ; Jump to EDB
$9AA    $DB0B   DRW      VB, V0, #B      ; Draw 11-byte sprite at VB, V0
$9AC    $E7C8   UNKNOWN  $E7C8           ; Unknown Exxx instruction
$9AE    $88FB   UNKNOWN  88FB            ; Unknown 8xxx instruction
$9B0    $0C4C   SYS      $C4C            ; System call to C4C
$9B2    $C7D2   RND      V7, #D2         ; V7 = random & D2
$9B4    $A836   LD       I, $836         ; Load 836 into I
$9B6    $A688   LD       I, $688         ; Load 688 into I
$9B8    $F4F5   UNKNOWN  F4F5            ; Unknown Fxxx instruction
$9BA    $955E   UNKNOWN  $955E           ; Unknown 9xxx instruction
$9BC    $C7F6   RND      V7, #F6         ; V7 = random & F6
$9BE    $E7DE   UNKNOWN  $E7DE           ; Unknown Exxx instruction
$9C0    $18EA   JP       $8EA            ; Jump to 8EA
$9C2    $C6A5   RND      V6, #A5         ; V6 = random & A5
$9C4    $3A7A   SE       VA, #7A         ; Skip if VA == 122
$9C6    $B4A0   JP       V0, $4A0        ; Jump to V0 + 4A0
$9C8    $5C8F   UNKNOWN  $5C8F           ; Unknown 5xxx instruction
$9CA    $0140   SYS      $140            ; System call to 140
$9CC    $44CE   SNE      V4, #CE         ; Skip if V4 != 206
$9CE    $D0F4   DRW      V0, VF, #4      ; Draw 4-byte sprite at V0, VF
$9D0    $770E   ADD      V7, #0E         ; Add 14 to V7
$9D2    $EABE   UNKNOWN  $EABE           ; Unknown Exxx instruction
$9D4    $8A2D   UNKNOWN  8A2D            ; Unknown 8xxx instruction
$9D6    $230E   CALL     $30E            ; Call subroutine at 30E
$9D8    $5B1C   UNKNOWN  $5B1C           ; Unknown 5xxx instruction
$9DA    $1EA1   JP       $EA1            ; Jump to EA1
$9DC    $E68B   UNKNOWN  $E68B           ; Unknown Exxx instruction
$9DE    $3A0B   SE       VA, #0B         ; Skip if VA == 11
$9E0    $FF1A   UNKNOWN  FF1A            ; Unknown Fxxx instruction
$9E2    $B599   JP       V0, $599        ; Jump to V0 + 599
$9E4    $440D   SNE      V4, #0D         ; Skip if V4 != 13
$9E6    $5759   UNKNOWN  $5759           ; Unknown 5xxx instruction
$9E8    $39E4   SE       V9, #E4         ; Skip if V9 == 228
$9EA    $66CD   LD       V6, #CD         ; Load 205 into V6
$9EC    $17FA   JP       $7FA            ; Jump to 7FA
$9EE    $69C5   LD       V9, #C5         ; Load 197 into V9
$9F0    $0057   SYS      $057            ; System call to 057
$9F2    $AB7F   LD       I, $B7F         ; Load B7F into I
$9F4    $6302   LD       V3, #02         ; Load 2 into V3
$9F6    $E236   UNKNOWN  $E236           ; Unknown Exxx instruction
$9F8    $D7DA   DRW      V7, VD, #A      ; Draw 10-byte sprite at V7, VD
$9FA    $51E9   UNKNOWN  $51E9           ; Unknown 5xxx instruction
$9FC    $9F70   SNE      VF, V7          ; Skip if VF != V7
$9FE    $CCF7   RND      VC, #F7         ; VC = random & F7
$A00    $E92B   UNKNOWN  $E92B           ; Unknown Exxx instruction
$A02    $47D3   SNE      V7, #D3         ; Skip if V7 != 211
$A04    $C1AD   RND      V1, #AD         ; V1 = random & AD
$A06    $68C1   LD       V8, #C1         ; Load 193 into V8
$A08    $F3A0   UNKNOWN  F3A0            ; Unknown Fxxx instruction
$A0A    $9D02   UNKNOWN  $9D02           ; Unknown 9xxx instruction
$A0C    $82FA   UNKNOWN  82FA            ; Unknown 8xxx instruction
$A0E    $4974   SNE      V9, #74         ; Skip if V9 != 116
$A10    $21D8   CALL     $1D8            ; Call subroutine at 1D8
$A12    $7F2E   ADD      VF, #2E         ; Add 46 to VF
$A14    $76D4   ADD      V6, #D4         ; Add 212 to V6
$A16    $FC10   UNKNOWN  FC10            ; Unknown Fxxx instruction
$A18    $5DC5   UNKNOWN  $5DC5           ; Unknown 5xxx instruction
$A1A    $B755   JP       V0, $755        ; Jump to V0 + 755
$A1C    $BA4C   JP       V0, $A4C        ; Jump to V0 + A4C
$A1E    $101D   JP       $01D            ; Jump to 01D
$A20    $61CF   LD       V1, #CF         ; Load 207 into V1
$A22    $8AD0   LD       VA, VD          ; VA = VD
$A24    $9E65   UNKNOWN  $9E65           ; Unknown 9xxx instruction
$A26    $D0E0   DRW      V0, VE, #0      ; Draw 0-byte sprite at V0, VE
$A28    $EB7C   UNKNOWN  $EB7C           ; Unknown Exxx instruction
$A2A    $7B11   ADD      VB, #11         ; Add 17 to VB
$A2C    $5BDA   UNKNOWN  $5BDA           ; Unknown 5xxx instruction
$A2E    $C213   RND      V2, #13         ; V2 = random & 13
$A30    $73B2   ADD      V3, #B2         ; Add 178 to V3
$A32    $CD61   RND      VD, #61         ; VD = random & 61
$A34    $679F   LD       V7, #9F         ; Load 159 into V7
$A36    $5A0E   UNKNOWN  $5A0E           ; Unknown 5xxx instruction
$A38    $8385   SUB      V3, V8          ; V3 -= V8, VF = !borrow
$A3A    $6A94   LD       VA, #94         ; Load 148 into VA
$A3C    $4E97   SNE      VE, #97         ; Skip if VE != 151
$A3E    $580A   UNKNOWN  $580A           ; Unknown 5xxx instruction
$A40    $B66F   JP       V0, $66F        ; Jump to V0 + 66F
$A42    $5E21   UNKNOWN  $5E21           ; Unknown 5xxx instruction
$A44    $297C   CALL     $97C            ; Call subroutine at 97C
$A46    $2F50   CALL     $F50            ; Call subroutine at F50
$A48    $C618   RND      V6, #18         ; V6 = random & 18
$A4A    $2B10   CALL     $B10            ; Call subroutine at B10
$A4C    $A128   LD       I, $128         ; Load 128 into I
$A4E    $B6D7   JP       V0, $6D7        ; Jump to V0 + 6D7
$A50    $8665   SUB      V6, V6          ; V6 -= V6, VF = !borrow
$A52    $46EC   SNE      V6, #EC         ; Skip if V6 != 236
$A54    $B973   JP       V0, $973        ; Jump to V0 + 973
$A56    $5290   SE       V2, V9          ; Skip if V2 == V9
$A58    $85E4   ADD      V5, VE          ; V5 += VE, VF = carry
$A5A    $8452   AND      V4, V5          ; V4 &= V5
$A5C    $0E32   SYS      $E32            ; System call to E32
$A5E    $57C8   UNKNOWN  $57C8           ; Unknown 5xxx instruction
$A60    $A1F5   LD       I, $1F5         ; Load 1F5 into I
$A62    $1EAD   JP       $EAD            ; Jump to EAD
$A64    $F08C   UNKNOWN  F08C            ; Unknown Fxxx instruction
$A66    $4505   SNE      V5, #05         ; Skip if V5 != 5
$A68    $A977   LD       I, $977         ; Load 977 into I
$A6A    $46FB   SNE      V6, #FB         ; Skip if V6 != 251
$A6C    $9B34   UNKNOWN  $9B34           ; Unknown 9xxx instruction
$A6E    $07A0   SYS      $7A0            ; System call to 7A0
$A70    $C1D7   RND      V1, #D7         ; V1 = random & D7
$A72    $EBB5   UNKNOWN  $EBB5           ; Unknown Exxx instruction
$A74    $80BF   UNKNOWN  80BF            ; Unknown 8xxx instruction
$A76    $8555   SUB      V5, V5          ; V5 -= V5, VF = !borrow
$A78    $2A7F   CALL     $A7F            ; Call subroutine at A7F
$A7A    $081E   SYS      $81E            ; System call to 81E
$A7C    $F7DB   UNKNOWN  F7DB            ; Unknown Fxxx instruction
$A7E    $F9E9   UNKNOWN  F9E9            ; Unknown Fxxx instruction
$A80    $5871   UNKNOWN  $5871           ; Unknown 5xxx instruction
$A82    $B55F   JP       V0, $55F        ; Jump to V0 + 55F
$A84    $EAB5   UNKNOWN  $EAB5           ; Unknown Exxx instruction
$A86    $38E5   SE       V8, #E5         ; Skip if V8 == 229
$A88    $6401   LD       V4, #01         ; Load 1 into V4
$A8A    $8E25   SUB      VE, V2          ; VE -= V2, VF = !borrow
$A8C    $A08D   LD       I, $08D         ; Load 08D into I
$A8E    $4B78   SNE      VB, #78         ; Skip if VB != 120
$A90    $F036   UNKNOWN  F036            ; Unknown Fxxx instruction
$A92    $C8AD   RND      V8, #AD         ; V8 = random & AD
$A94    $4D4D   SNE      VD, #4D         ; Skip if VD != 77
$A96    $2F41   CALL     $F41            ; Call subroutine at F41
$A98    $581A   UNKNOWN  $581A           ; Unknown 5xxx instruction
$A9A    $2AAC   CALL     $AAC            ; Call subroutine at AAC
$A9C    $DAB1   DRW      VA, VB, #1      ; Draw 1-byte sprite at VA, VB
$A9E    $4BFD   SNE      VB, #FD         ; Skip if VB != 253
$AA0    $4ADF   SNE      VA, #DF         ; Skip if VA != 223
$AA2    $B4BF   JP       V0, $4BF        ; Jump to V0 + 4BF
$AA4    $A220   LD       I, $220         ; Load 220 into I
$AA6    $C0CE   RND      V0, #CE         ; V0 = random & CE
$AA8    $C81D   RND      V8, #1D         ; V8 = random & 1D
$AAA    $F7B2   UNKNOWN  F7B2            ; Unknown Fxxx instruction
$AAC    $1B97   JP       $B97            ; Jump to B97
$AAE    $0568   SYS      $568            ; System call to 568
$AB0    $97C3   UNKNOWN  $97C3           ; Unknown 9xxx instruction
$AB2    $7B08   ADD      VB, #08         ; Add 8 to VB
$AB4    $6919   LD       V9, #19         ; Load 25 into V9
$AB6    $F8E7   UNKNOWN  F8E7            ; Unknown Fxxx instruction
$AB8    $4334   SNE      V3, #34         ; Skip if V3 != 52
$ABA    $F512   UNKNOWN  F512            ; Unknown Fxxx instruction
$ABC    $A74D   LD       I, $74D         ; Load 74D into I
$ABE    $744C   ADD      V4, #4C         ; Add 76 to V4
$AC0    $335C   SE       V3, #5C         ; Skip if V3 == 92
$AC2    $5976   UNKNOWN  $5976           ; Unknown 5xxx instruction
$AC4    $0A7D   SYS      $A7D            ; System call to A7D
$AC6    $1A06   JP       $A06            ; Jump to A06
$AC8    $F1FA   UNKNOWN  F1FA            ; Unknown Fxxx instruction
$ACA    $B25C   JP       V0, $25C        ; Jump to V0 + 25C
$ACC    $CF4B   RND      VF, #4B         ; VF = random & 4B
$ACE    $4886   SNE      V8, #86         ; Skip if V8 != 134
$AD0    $BFF3   JP       V0, $FF3        ; Jump to V0 + FF3
$AD2    $3E2D   SE       VE, #2D         ; Skip if VE == 45
$AD4    $9805   UNKNOWN  $9805           ; Unknown 9xxx instruction
$AD6    $259E   CALL     $59E            ; Call subroutine at 59E
$AD8    $02BE   SYS      $2BE            ; System call to 2BE
$ADA    $A2B8   LD       I, $2B8         ; Load 2B8 into I
$ADC    $87A3   XOR      V7, VA          ; V7 ^= VA
$ADE    $2BA7   CALL     $BA7            ; Call subroutine at BA7
$AE0    $317E   SE       V1, #7E         ; Skip if V1 == 126
$AE2    $859B   UNKNOWN  859B            ; Unknown 8xxx instruction
$AE4    $2FC0   CALL     $FC0            ; Call subroutine at FC0
$AE6    $7318   ADD      V3, #18         ; Add 24 to V3
$AE8    $814A   UNKNOWN  814A            ; Unknown 8xxx instruction
$AEA    $4EF9   SNE      VE, #F9         ; Skip if VE != 249
$AEC    $84A4   ADD      V4, VA          ; V4 += VA, VF = carry
$AEE    $4B5D   SNE      VB, #5D         ; Skip if VB != 93
$AF0    $B4A7   JP       V0, $4A7        ; Jump to V0 + 4A7
$AF2    $AD03   LD       I, $D03         ; Load D03 into I
$AF4    $C1FD   RND      V1, #FD         ; V1 = random & FD
$AF6    $36B2   SE       V6, #B2         ; Skip if V6 == 178
$AF8    $EC64   UNKNOWN  $EC64           ; Unknown Exxx instruction
$AFA    $4E44   SNE      VE, #44         ; Skip if VE != 68
$AFC    $8E63   XOR      VE, V6          ; VE ^= V6
$AFE    $6A8A   LD       VA, #8A         ; Load 138 into VA
$B00    $966D   UNKNOWN  $966D           ; Unknown 9xxx instruction
$B02    $2872   CALL     $872            ; Call subroutine at 872
$B04    $BEF9   JP       V0, $EF9        ; Jump to V0 + EF9
$B06    $B471   JP       V0, $471        ; Jump to V0 + 471
$B08    $F09D   UNKNOWN  F09D            ; Unknown Fxxx instruction
$B0A    $7071   ADD      V0, #71         ; Add 113 to V0
$B0C    $2C46   CALL     $C46            ; Call subroutine at C46
$B0E    $41E1   SNE      V1, #E1         ; Skip if V1 != 225
$B10    $C410   RND      V4, #10         ; V4 = random & 10
$B12    $F40A   LD       V4, K           ; Wait for key press, store in V4
$B14    $5B53   UNKNOWN  $5B53           ; Unknown 5xxx instruction
$B16    $54A6   UNKNOWN  $54A6           ; Unknown 5xxx instruction
$B18    $13D0   JP       $3D0            ; Jump to 3D0
$B1A    $0822   SYS      $822            ; System call to 822
$B1C    $113C   JP       $13C            ; Jump to 13C
$B1E    $2DC4   CALL     $DC4            ; Call subroutine at DC4
$B20    $A7CD   LD       I, $7CD         ; Load 7CD into I
$B22    $99F8   UNKNOWN  $99F8           ; Unknown 9xxx instruction
$B24    $CB19   RND      VB, #19         ; VB = random & 19
$B26    $F0CD   UNKNOWN  F0CD            ; Unknown Fxxx instruction
$B28    $99D5   UNKNOWN  $99D5           ; Unknown 9xxx instruction
$B2A    $96BD   UNKNOWN  $96BD           ; Unknown 9xxx instruction
$B2C    $A710   LD       I, $710         ; Load 710 into I
$B2E    $11C3   JP       $1C3            ; Jump to 1C3
$B30    $C620   RND      V6, #20         ; V6 = random & 20
$B32    $7431   ADD      V4, #31         ; Add 49 to V4
$B34    $3C72   SE       VC, #72         ; Skip if VC == 114
$B36    $1878   JP       $878            ; Jump to 878
$B38    $AAD1   LD       I, $AD1         ; Load AD1 into I
$B3A    $56C2   UNKNOWN  $56C2           ; Unknown 5xxx instruction
$B3C    $7D67   ADD      VD, #67         ; Add 103 to VD
$B3E    $FF02   UNKNOWN  FF02            ; Unknown Fxxx instruction
$B40    $3F14   SE       VF, #14         ; Skip if VF == 20
$B42    $E29C   UNKNOWN  $E29C           ; Unknown Exxx instruction
$B44    $DB26   DRW      VB, V2, #6      ; Draw 6-byte sprite at VB, V2
$B46    $26BD   CALL     $6BD            ; Call subroutine at 6BD
$B48    $5723   UNKNOWN  $5723           ; Unknown 5xxx instruction
$B4A    $C277   RND      V2, #77         ; V2 = random & 77
$B4C    $0A97   SYS      $A97            ; System call to A97
$B4E    $9B6E   UNKNOWN  $9B6E           ; Unknown 9xxx instruction
$B50    $1F21   JP       $F21            ; Jump to F21
$B52    $6A57   LD       VA, #57         ; Load 87 into VA
$B54    $E418   UNKNOWN  $E418           ; Unknown Exxx instruction
$B56    $8A3E   SHL      VA              ; VA <<= 1, VF = MSB
$B58    $3056   SE       V0, #56         ; Skip if V0 == 86
$B5A    $73E4   ADD      V3, #E4         ; Add 228 to V3
$B5C    $16D7   JP       $6D7            ; Jump to 6D7
$B5E    $8574   ADD      V5, V7          ; V5 += V7, VF = carry
$B60    $0206   SYS      $206            ; System call to 206
$B62    $162A   JP       $62A            ; Jump to 62A
$B64    $1852   JP       $852            ; Jump to 852
$B66    $CC27   RND      VC, #27         ; VC = random & 27
$B68    $5BE9   UNKNOWN  $5BE9           ; Unknown 5xxx instruction
$B6A    $3268   SE       V2, #68         ; Skip if V2 == 104
$B6C    $DC8A   DRW      VC, V8, #A      ; Draw 10-byte sprite at VC, V8
$B6E    $194C   JP       $94C            ; Jump to 94C
$B70    $7B62   ADD      VB, #62         ; Add 98 to VB
$B72    $090E   SYS      $90E            ; System call to 90E
$B74    $E516   UNKNOWN  $E516           ; Unknown Exxx instruction
$B76    $E719   UNKNOWN  $E719           ; Unknown Exxx instruction
$B78    $164A   JP       $64A            ; Jump to 64A
$B7A    $21CC   CALL     $1CC            ; Call subroutine at 1CC
$B7C    $9D01   UNKNOWN  $9D01           ; Unknown 9xxx instruction
$B7E    $F59B   UNKNOWN  F59B            ; Unknown Fxxx instruction
$B80    $6AC9   LD       VA, #C9         ; Load 201 into VA
$B82    $0DF5   SYS      $DF5            ; System call to DF5
$B84    $B253   JP       V0, $253        ; Jump to V0 + 253
$B86    $F669   UNKNOWN  F669            ; Unknown Fxxx instruction
$B88    $1CD7   JP       $CD7            ; Jump to CD7
$B8A    $F7A1   UNKNOWN  F7A1            ; Unknown Fxxx instruction
$B8C    $9481   UNKNOWN  $9481           ; Unknown 9xxx instruction
$B8E    $DCBD   DRW      VC, VB, #D      ; Draw 13-byte sprite at VC, VB
$B90    $10CC   JP       $0CC            ; Jump to 0CC
$B92    $2C7C   CALL     $C7C            ; Call subroutine at C7C
$B94    $168D   JP       $68D            ; Jump to 68D
$B96    $4385   SNE      V3, #85         ; Skip if V3 != 133
$B98    $22CC   CALL     $2CC            ; Call subroutine at 2CC
$B9A    $3963   SE       V9, #63         ; Skip if V9 == 99
$B9C    $7CAF   ADD      VC, #AF         ; Add 175 to VC
$B9E    $3D07   SE       VD, #07         ; Skip if VD == 7
$BA0    $7553   ADD      V5, #53         ; Add 83 to V5
$BA2    $6532   LD       V5, #32         ; Load 50 into V5
$BA4    $05B6   SYS      $5B6            ; System call to 5B6
$BA6    $6A51   LD       VA, #51         ; Load 81 into VA
$BA8    $FD57   UNKNOWN  FD57            ; Unknown Fxxx instruction
$BAA    $F7F9   UNKNOWN  F7F9            ; Unknown Fxxx instruction
$BAC    $E294   UNKNOWN  $E294           ; Unknown Exxx instruction
$BAE    $158A   JP       $58A            ; Jump to 58A
$BB0    $FDF2   UNKNOWN  FDF2            ; Unknown Fxxx instruction
$BB2    $3E6E   SE       VE, #6E         ; Skip if VE == 110
$BB4    $63B7   LD       V3, #B7         ; Load 183 into V3
$BB6    $867E   SHL      V6              ; V6 <<= 1, VF = MSB
$BB8    $0FD3   SYS      $FD3            ; System call to FD3
$BBA    $C901   RND      V9, #01         ; V9 = random & 01
$BBC    $466D   SNE      V6, #6D         ; Skip if V6 != 109
$BBE    $113E   JP       $13E            ; Jump to 13E
$BC0    $FA4E   UNKNOWN  FA4E            ; Unknown Fxxx instruction
$BC2    $5323   UNKNOWN  $5323           ; Unknown 5xxx instruction
$BC4    $520E   UNKNOWN  $520E           ; Unknown 5xxx instruction
$BC6    $8CF1   OR       VC, VF          ; VC |= VF
$BC8    $B21E   JP       V0, $21E        ; Jump to V0 + 21E
$BCA    $BE3A   JP       V0, $E3A        ; Jump to V0 + E3A
$BCC    $0468   SYS      $468            ; System call to 468
$BCE    $812B   UNKNOWN  812B            ; Unknown 8xxx instruction
$BD0    $3929   SE       V9, #29         ; Skip if V9 == 41
$BD2    $29EF   CALL     $9EF            ; Call subroutine at 9EF
$BD4    $153D   JP       $53D            ; Jump to 53D
$BD6    $69E4   LD       V9, #E4         ; Load 228 into V9
$BD8    $D48B   DRW      V4, V8, #B      ; Draw 11-byte sprite at V4, V8
$BDA    $5076   UNKNOWN  $5076           ; Unknown 5xxx instruction
$BDC    $6177   LD       V1, #77         ; Load 119 into V1
$BDE    $814B   UNKNOWN  814B            ; Unknown 8xxx instruction
$BE0    $3714   SE       V7, #14         ; Skip if V7 == 20
$BE2    $9CDA   UNKNOWN  $9CDA           ; Unknown 9xxx instruction
$BE4    $1389   JP       $389            ; Jump to 389
$BE6    $4A98   SNE      VA, #98         ; Skip if VA != 152
$BE8    $7FE3   ADD      VF, #E3         ; Add 227 to VF
$BEA    $DE08   DRW      VE, V0, #8      ; Draw 8-byte sprite at VE, V0
$BEC    $3AA8   SE       VA, #A8         ; Skip if VA == 168
$BEE    $D71E   DRW      V7, V1, #E      ; Draw 14-byte sprite at V7, V1
$BF0    $EF4E   UNKNOWN  $EF4E           ; Unknown Exxx instruction
$BF2    $6A83   LD       VA, #83         ; Load 131 into VA
$BF4    $54DE   UNKNOWN  $54DE           ; Unknown 5xxx instruction
$BF6    $D0B7   DRW      V0, VB, #7      ; Draw 7-byte sprite at V0, VB
$BF8    $0135   SYS      $135            ; System call to 135
$BFA    $ED24   UNKNOWN  $ED24           ; Unknown Exxx instruction
$BFC    $6436   LD       V4, #36         ; Load 54 into V4
$BFE    $7CB0   ADD      VC, #B0         ; Add 176 to VC
$C00    $4708   SNE      V7, #08         ; Skip if V7 != 8
$C02    $D9E4   DRW      V9, VE, #4      ; Draw 4-byte sprite at V9, VE
$C04    $6F8E   LD       VF, #8E         ; Load 142 into VF
$C06    $335B   SE       V3, #5B         ; Skip if V3 == 91
$C08    $7068   ADD      V0, #68         ; Add 104 to V0
$C0A    $7AC2   ADD      VA, #C2         ; Add 194 to VA
$C0C    $7DB1   ADD      VD, #B1         ; Add 177 to VD
$C0E    $E203   UNKNOWN  $E203           ; Unknown Exxx instruction
$C10    $7BFC   ADD      VB, #FC         ; Add 252 to VB
$C12    $320E   SE       V2, #0E         ; Skip if V2 == 14
$C14    $C477   RND      V4, #77         ; V4 = random & 77
$C16    $22E7   CALL     $2E7            ; Call subroutine at 2E7
$C18    $178D   JP       $78D            ; Jump to 78D
$C1A    $B5E1   JP       V0, $5E1        ; Jump to V0 + 5E1
$C1C    $986B   UNKNOWN  $986B           ; Unknown 9xxx instruction
$C1E    $387C   SE       V8, #7C         ; Skip if V8 == 124
$C20    $566F   UNKNOWN  $566F           ; Unknown 5xxx instruction
$C22    $3735   SE       V7, #35         ; Skip if V7 == 53
$C24    $711E   ADD      V1, #1E         ; Add 30 to V1
$C26    $2E8B   CALL     $E8B            ; Call subroutine at E8B
$C28    $85E0   LD       V5, VE          ; V5 = VE
$C2A    $835F   UNKNOWN  835F            ; Unknown 8xxx instruction
$C2C    $9875   UNKNOWN  $9875           ; Unknown 9xxx instruction
$C2E    $4B85   SNE      VB, #85         ; Skip if VB != 133
$C30    $54A6   UNKNOWN  $54A6           ; Unknown 5xxx instruction
$C32    $CC2C   RND      VC, #2C         ; VC = random & 2C
$C34    $A9ED   LD       I, $9ED         ; Load 9ED into I
$C36    $775F   ADD      V7, #5F         ; Add 95 to V7
$C38    $5008   UNKNOWN  $5008           ; Unknown 5xxx instruction
$C3A    $6F04   LD       VF, #04         ; Load 4 into VF
$C3C    $CF04   RND      VF, #04         ; VF = random & 04
$C3E    $3B83   SE       VB, #83         ; Skip if VB == 131
$C40    $B749   JP       V0, $749        ; Jump to V0 + 749
$C42    $9A94   UNKNOWN  $9A94           ; Unknown 9xxx instruction
$C44    $FD8F   UNKNOWN  FD8F            ; Unknown Fxxx instruction
$C46    $5145   UNKNOWN  $5145           ; Unknown 5xxx instruction
$C48    $9725   UNKNOWN  $9725           ; Unknown 9xxx instruction
$C4A    $D6B1   DRW      V6, VB, #1      ; Draw 1-byte sprite at V6, VB
$C4C    $CED1   RND      VE, #D1         ; VE = random & D1
$C4E    $6C11   LD       VC, #11         ; Load 17 into VC
$C50    $669C   LD       V6, #9C         ; Load 156 into V6
$C52    $64A4   LD       V4, #A4         ; Load 164 into V4
$C54    $91D2   UNKNOWN  $91D2           ; Unknown 9xxx instruction
$C56    $D9A3   DRW      V9, VA, #3      ; Draw 3-byte sprite at V9, VA
$C58    $19CC   JP       $9CC            ; Jump to 9CC
$C5A    $27BA   CALL     $7BA            ; Call subroutine at 7BA
$C5C    $E849   UNKNOWN  $E849           ; Unknown Exxx instruction
$C5E    $5A33   UNKNOWN  $5A33           ; Unknown 5xxx instruction
$C60    $1E3B   JP       $E3B            ; Jump to E3B
$C62    $FF82   UNKNOWN  FF82            ; Unknown Fxxx instruction
$C64    $D3E6   DRW      V3, VE, #6      ; Draw 6-byte sprite at V3, VE
$C66    $6319   LD       V3, #19         ; Load 25 into V3
$C68    $5434   UNKNOWN  $5434           ; Unknown 5xxx instruction
$C6A    $28C2   CALL     $8C2            ; Call subroutine at 8C2
$C6C    $DCBD   DRW      VC, VB, #D      ; Draw 13-byte sprite at VC, VB
$C6E    $D5E1   DRW      V5, VE, #1      ; Draw 1-byte sprite at V5, VE
$C70    $5C18   UNKNOWN  $5C18           ; Unknown 5xxx instruction
$C72    $DAB9   DRW      VA, VB, #9      ; Draw 9-byte sprite at VA, VB
$C74    $AE6C   LD       I, $E6C         ; Load E6C into I
$C76    $D570   DRW      V5, V7, #0      ; Draw 0-byte sprite at V5, V7
$C78    $60D0   LD       V0, #D0         ; Load 208 into V0
$C7A    $6DA7   LD       VD, #A7         ; Load 167 into VD
$C7C    $1811   JP       $811            ; Jump to 811
$C7E    $C0D2   RND      V0, #D2         ; V0 = random & D2
$C80    $8925   SUB      V9, V2          ; V9 -= V2, VF = !borrow
$C82    $C9DF   RND      V9, #DF         ; V9 = random & DF
$C84    $1ECE   JP       $ECE            ; Jump to ECE
$C86    $4341   SNE      V3, #41         ; Skip if V3 != 65
$C88    $9188   UNKNOWN  $9188           ; Unknown 9xxx instruction
$C8A    $6991   LD       V9, #91         ; Load 145 into V9
$C8C    $579B   UNKNOWN  $579B           ; Unknown 5xxx instruction
$C8E    $EE98   UNKNOWN  $EE98           ; Unknown Exxx instruction
$C90    $5E04   UNKNOWN  $5E04           ; Unknown 5xxx instruction
$C92    $1349   JP       $349            ; Jump to 349
$C94    $53AF   UNKNOWN  $53AF           ; Unknown 5xxx instruction
$C96    $E9D4   UNKNOWN  $E9D4           ; Unknown Exxx instruction
$C98    $C58A   RND      V5, #8A         ; V5 = random & 8A
$C9A    $A139   LD       I, $139         ; Load 139 into I
$C9C    $AF48   LD       I, $F48         ; Load F48 into I
$C9E    $08C9   SYS      $8C9            ; System call to 8C9
$CA0    $A99D   LD       I, $99D         ; Load 99D into I
$CA2    $4369   SNE      V3, #69         ; Skip if V3 != 105
$CA4    $7DAD   ADD      VD, #AD         ; Add 173 to VD
$CA6    $6B4F   LD       VB, #4F         ; Load 79 into VB
$CA8    $ED0F   UNKNOWN  $ED0F           ; Unknown Exxx instruction
$CAA    $5BF4   UNKNOWN  $5BF4           ; Unknown 5xxx instruction
$CAC    $024E   SYS      $24E            ; System call to 24E
$CAE    $6C11   LD       VC, #11         ; Load 17 into VC
$CB0    $DB88   DRW      VB, V8, #8      ; Draw 8-byte sprite at VB, V8
$CB2    $9E8E   UNKNOWN  $9E8E           ; Unknown 9xxx instruction
$CB4    $70DF   ADD      V0, #DF         ; Add 223 to V0
$CB6    $A90B   LD       I, $90B         ; Load 90B into I
$CB8    $37E0   SE       V7, #E0         ; Skip if V7 == 224
$CBA    $0C28   SYS      $C28            ; System call to C28
$CBC    $DB41   DRW      VB, V4, #1      ; Draw 1-byte sprite at VB, V4
$CBE    $56CD   UNKNOWN  $56CD           ; Unknown 5xxx instruction
$CC0    $E7E0   UNKNOWN  $E7E0           ; Unknown Exxx instruction
$CC2    $E61B   UNKNOWN  $E61B           ; Unknown Exxx instruction
$CC4    $F413   UNKNOWN  F413            ; Unknown Fxxx instruction
$CC6    $2E94   CALL     $E94            ; Call subroutine at E94
$CC8    $311D   SE       V1, #1D         ; Skip if V1 == 29
$CCA    $E869   UNKNOWN  $E869           ; Unknown Exxx instruction
$CCC    $B98D   JP       V0, $98D        ; Jump to V0 + 98D
$CCE    $0E7A   SYS      $E7A            ; System call to E7A
$CD0    $E3D7   UNKNOWN  $E3D7           ; Unknown Exxx instruction
$CD2    $4F4F   SNE      VF, #4F         ; Skip if VF != 79
$CD4    $32A9   SE       V2, #A9         ; Skip if V2 == 169
$CD6    $E1BF   UNKNOWN  $E1BF           ; Unknown Exxx instruction
$CD8    $C3DB   RND      V3, #DB         ; V3 = random & DB
$CDA    $F6C8   UNKNOWN  F6C8            ; Unknown Fxxx instruction
$CDC    $1651   JP       $651            ; Jump to 651
$CDE    $DF21   DRW      VF, V2, #1      ; Draw 1-byte sprite at VF, V2
$CE0    $D27C   DRW      V2, V7, #C      ; Draw 12-byte sprite at V2, V7
$CE2    $131A   JP       $31A            ; Jump to 31A
$CE4    $CBA0   RND      VB, #A0         ; VB = random & A0
$CE6    $A22A   LD       I, $22A         ; Load 22A into I
$CE8    $6308   LD       V3, #08         ; Load 8 into V3
$CEA    $3F9F   SE       VF, #9F         ; Skip if VF == 159
$CEC    $B053   JP       V0, $053        ; Jump to V0 + 053
$CEE    $C906   RND      V9, #06         ; V9 = random & 06
$CF0    $7DBD   ADD      VD, #BD         ; Add 189 to VD
$CF2    $3EBF   SE       VE, #BF         ; Skip if VE == 191
$CF4    $46D0   SNE      V6, #D0         ; Skip if V6 != 208
$CF6    $12DF   JP       $2DF            ; Jump to 2DF
$CF8    $2800   CALL     $800            ; Call subroutine at 800
$CFA    $55BB   UNKNOWN  $55BB           ; Unknown 5xxx instruction
$CFC    $1FEB   JP       $FEB            ; Jump to FEB
$CFE    $C792   RND      V7, #92         ; V7 = random & 92
$D00    $6F1A   LD       VF, #1A         ; Load 26 into VF
$D02    $6861   LD       V8, #61         ; Load 97 into V8
$D04    $BF62   JP       V0, $F62        ; Jump to V0 + F62
$D06    $78E8   ADD      V8, #E8         ; Add 232 to V8
$D08    $C6F6   RND      V6, #F6         ; V6 = random & F6
$D0A    $1AFB   JP       $AFB            ; Jump to AFB
$D0C    $8D76   SHR      VD              ; VD >>= 1, VF = LSB
$D0E    $9A11   UNKNOWN  $9A11           ; Unknown 9xxx instruction
$D10    $41B2   SNE      V1, #B2         ; Skip if V1 != 178
$D12    $0C58   SYS      $C58            ; System call to C58
$D14    $843C   UNKNOWN  843C            ; Unknown 8xxx instruction
$D16    $1089   JP       $089            ; Jump to 089
$D18    $0CC2   SYS      $CC2            ; System call to CC2
$D1A    $DFF5   DRW      VF, VF, #5      ; Draw 5-byte sprite at VF, VF
$D1C    $A972   LD       I, $972         ; Load 972 into I
$D1E    $DC5B   DRW      VC, V5, #B      ; Draw 11-byte sprite at VC, V5
$D20    $3411   SE       V4, #11         ; Skip if V4 == 17
$D22    $0042   SYS      $042            ; System call to 042
$D24    $A6BE   LD       I, $6BE         ; Load 6BE into I
$D26    $94EB   UNKNOWN  $94EB           ; Unknown 9xxx instruction
$D28    $E1BF   UNKNOWN  $E1BF           ; Unknown Exxx instruction
$D2A    $C419   RND      V4, #19         ; V4 = random & 19
$D2C    $426A   SNE      V2, #6A         ; Skip if V2 != 106
$D2E    $0BBA   SYS      $BBA            ; System call to BBA
$D30    $BF51   JP       V0, $F51        ; Jump to V0 + F51
$D32    $10DB   JP       $0DB            ; Jump to 0DB
$D34    $B315   JP       V0, $315        ; Jump to V0 + 315
$D36    $75FC   ADD      V5, #FC         ; Add 252 to V5
$D38    $CC8C   RND      VC, #8C         ; VC = random & 8C
$D3A    $4C2D   SNE      VC, #2D         ; Skip if VC != 45
$D3C    $2746   CALL     $746            ; Call subroutine at 746
$D3E    $2C24   CALL     $C24            ; Call subroutine at C24
$D40    $1EF3   JP       $EF3            ; Jump to EF3
$D42    $6A48   LD       VA, #48         ; Load 72 into VA
$D44    $1763   JP       $763            ; Jump to 763
$D46    $CC4E   RND      VC, #4E         ; VC = random & 4E
$D48    $0238   SYS      $238            ; System call to 238
$D4A    $F595   UNKNOWN  F595            ; Unknown Fxxx instruction
$D4C    $FEB4   UNKNOWN  FEB4            ; Unknown Fxxx instruction
$D4E    $7818   ADD      V8, #18         ; Add 24 to V8
$D50    $843C   UNKNOWN  843C            ; Unknown 8xxx instruction
$D52    $2E65   CALL     $E65            ; Call subroutine at E65
$D54    $F7F5   UNKNOWN  F7F5            ; Unknown Fxxx instruction
$D56    $B6A1   JP       V0, $6A1        ; Jump to V0 + 6A1
$D58    $15A6   JP       $5A6            ; Jump to 5A6
$D5A    $36BD   SE       V6, #BD         ; Skip if V6 == 189
$D5C    $C44F   RND      V4, #4F         ; V4 = random & 4F
$D5E    $42C1   SNE      V2, #C1         ; Skip if V2 != 193
$D60    $AE69   LD       I, $E69         ; Load E69 into I
$D62    $D0AB   DRW      V0, VA, #B      ; Draw 11-byte sprite at V0, VA
$D64    $DDE8   DRW      VD, VE, #8      ; Draw 8-byte sprite at VD, VE
$D66    $DC07   DRW      VC, V0, #7      ; Draw 7-byte sprite at VC, V0
$D68    $451E   SNE      V5, #1E         ; Skip if V5 != 30
$D6A    $F9BD   UNKNOWN  F9BD            ; Unknown Fxxx instruction
$D6C    $163E   JP       $63E            ; Jump to 63E
$D6E    $7100   ADD      V1, #00         ; Add 0 to V1
$D70    $2A9A   CALL     $A9A            ; Call subroutine at A9A
$D72    $09B9   SYS      $9B9            ; System call to 9B9
$D74    $AECE   LD       I, $ECE         ; Load ECE into I
$D76    $A9FB   LD       I, $9FB         ; Load 9FB into I
$D78    $52B2   UNKNOWN  $52B2           ; Unknown 5xxx instruction
$D7A    $3071   SE       V0, #71         ; Skip if V0 == 113
$D7C    $54EC   UNKNOWN  $54EC           ; Unknown 5xxx instruction
$D7E    $A033   LD       I, $033         ; Load 033 into I
$D80    $AE87   LD       I, $E87         ; Load E87 into I
$D82    $BABC   JP       V0, $ABC        ; Jump to V0 + ABC
$D84    $48B1   SNE      V8, #B1         ; Skip if V8 != 177
$D86    $65A1   LD       V5, #A1         ; Load 161 into V5
$D88    $913A   UNKNOWN  $913A           ; Unknown 9xxx instruction
$D8A    $68CD   LD       V8, #CD         ; Load 205 into V8
$D8C    $BD67   JP       V0, $D67        ; Jump to V0 + D67
$D8E    $A287   LD       I, $287         ; Load 287 into I
$D90    $E561   UNKNOWN  $E561           ; Unknown Exxx instruction
$D92    $5838   UNKNOWN  $5838           ; Unknown 5xxx instruction
$D94    $D345   DRW      V3, V4, #5      ; Draw 5-byte sprite at V3, V4
$D96    $119F   JP       $19F            ; Jump to 19F
$D98    $90F1   UNKNOWN  $90F1           ; Unknown 9xxx instruction
$D9A    $5F98   UNKNOWN  $5F98           ; Unknown 5xxx instruction
$D9C    $18F1   JP       $8F1            ; Jump to 8F1
$D9E    $3578   SE       V5, #78         ; Skip if V5 == 120
$DA0    $8914   ADD      V9, V1          ; V9 += V1, VF = carry
$DA2    $0F9C   SYS      $F9C            ; System call to F9C
$DA4    $A3CF   LD       I, $3CF         ; Load 3CF into I
$DA6    $D755   DRW      V7, V5, #5      ; Draw 5-byte sprite at V7, V5
$DA8    $151F   JP       $51F            ; Jump to 51F
$DAA    $2CD2   CALL     $CD2            ; Call subroutine at CD2
$DAC    $F7C8   UNKNOWN  F7C8            ; Unknown Fxxx instruction
$DAE    $CDF9   RND      VD, #F9         ; VD = random & F9
$DB0    $F3C7   UNKNOWN  F3C7            ; Unknown Fxxx instruction
$DB2    $7C3E   ADD      VC, #3E         ; Add 62 to VC
$DB4    $F2FC   UNKNOWN  F2FC            ; Unknown Fxxx instruction
$DB6    $6D32   LD       VD, #32         ; Load 50 into VD
$DB8    $4902   SNE      V9, #02         ; Skip if V9 != 2
$DBA    $C524   RND      V5, #24         ; V5 = random & 24
$DBC    $699F   LD       V9, #9F         ; Load 159 into V9
$DBE    $2D67   CALL     $D67            ; Call subroutine at D67
$DC0    $E5F6   UNKNOWN  $E5F6           ; Unknown Exxx instruction
$DC2    $11D2   JP       $1D2            ; Jump to 1D2
$DC4    $876E   SHL      V7              ; V7 <<= 1, VF = MSB
$DC6    $A4CB   LD       I, $4CB         ; Load 4CB into I
$DC8    $27E5   CALL     $7E5            ; Call subroutine at 7E5
$DCA    $2595   CALL     $595            ; Call subroutine at 595
$DCC    $404B   SNE      V0, #4B         ; Skip if V0 != 75
$DCE    $BBE8   JP       V0, $BE8        ; Jump to V0 + BE8
$DD0    $455B   SNE      V5, #5B         ; Skip if V5 != 91
$DD2    $1267   JP       $267            ; Jump to 267
$DD4    $9F15   UNKNOWN  $9F15           ; Unknown 9xxx instruction
$DD6    $8F42   AND      VF, V4          ; VF &= V4
$DD8    $BE03   JP       V0, $E03        ; Jump to V0 + E03
$DDA    $5A14   UNKNOWN  $5A14           ; Unknown 5xxx instruction
$DDC    $4A9F   SNE      VA, #9F         ; Skip if VA != 159
$DDE    $1341   JP       $341            ; Jump to 341
$DE0    $F072   UNKNOWN  F072            ; Unknown Fxxx instruction
$DE2    $EEC2   UNKNOWN  $EEC2           ; Unknown Exxx instruction
$DE4    $E30C   UNKNOWN  $E30C           ; Unknown Exxx instruction
$DE6    $6793   LD       V7, #93         ; Load 147 into V7
$DE8    $51B8   UNKNOWN  $51B8           ; Unknown 5xxx instruction
$DEA    $F7F3   UNKNOWN  F7F3            ; Unknown Fxxx instruction
$DEC    $79F8   ADD      V9, #F8         ; Add 248 to V9
$DEE    $1287   JP       $287            ; Jump to 287
$DF0    $62F0   LD       V2, #F0         ; Load 240 into V2
$DF2    $94A2   UNKNOWN  $94A2           ; Unknown 9xxx instruction
$DF4    $B0C3   JP       V0, $0C3        ; Jump to V0 + 0C3
$DF6    $5A82   UNKNOWN  $5A82           ; Unknown 5xxx instruction
$DF8    $5D24   UNKNOWN  $5D24           ; Unknown 5xxx instruction
$DFA    $7CCB   ADD      VC, #CB         ; Add 203 to VC
$DFC    $89BD   UNKNOWN  89BD            ; Unknown 8xxx instruction
$DFE    $A849   LD       I, $849         ; Load 849 into I
$E00    $512F   UNKNOWN  $512F           ; Unknown 5xxx instruction
$E02    $0C3D   SYS      $C3D            ; System call to C3D
$E04    $9343   UNKNOWN  $9343           ; Unknown 9xxx instruction
$E06    $F952   UNKNOWN  F952            ; Unknown Fxxx instruction
$E08    $DA7B   DRW      VA, V7, #B      ; Draw 11-byte sprite at VA, V7
$E0A    $0914   SYS      $914            ; System call to 914
$E0C    $3867   SE       V8, #67         ; Skip if V8 == 103
$E0E    $E1A2   UNKNOWN  $E1A2           ; Unknown Exxx instruction
$E10    $290E   CALL     $90E            ; Call subroutine at 90E
$E12    $F198   UNKNOWN  F198            ; Unknown Fxxx instruction
$E14    $9C9B   UNKNOWN  $9C9B           ; Unknown 9xxx instruction
$E16    $0078   SYS      $078            ; System call to 078
$E18    $1B95   JP       $B95            ; Jump to B95
$E1A    $1241   JP       $241            ; Jump to 241
$E1C    $617F   LD       V1, #7F         ; Load 127 into V1
$E1E    $CF5E   RND      VF, #5E         ; VF = random & 5E
$E20    $0E42   SYS      $E42            ; System call to E42
$E22    $59B5   UNKNOWN  $59B5           ; Unknown 5xxx instruction
$E24    $0B48   SYS      $B48            ; System call to B48
$E26    $5FAF   UNKNOWN  $5FAF           ; Unknown 5xxx instruction
$E28    $8934   ADD      V9, V3          ; V9 += V3, VF = carry
$E2A    $AB3E   LD       I, $B3E         ; Load B3E into I
$E2C    $34B7   SE       V4, #B7         ; Skip if V4 == 183
$E2E    $EDEE   UNKNOWN  $EDEE           ; Unknown Exxx instruction
$E30    $FB9D   UNKNOWN  FB9D            ; Unknown Fxxx instruction
$E32    $75D5   ADD      V5, #D5         ; Add 213 to V5
$E34    $B3DE   JP       V0, $3DE        ; Jump to V0 + 3DE
$E36    $F70E   UNKNOWN  F70E            ; Unknown Fxxx instruction
$E38    $06D4   SYS      $6D4            ; System call to 6D4
$E3A    $425D   SNE      V2, #5D         ; Skip if V2 != 93
$E3C    $986B   UNKNOWN  $986B           ; Unknown 9xxx instruction
$E3E    $F24E   UNKNOWN  F24E            ; Unknown Fxxx instruction
$E40    $53DF   UNKNOWN  $53DF           ; Unknown 5xxx instruction
$E42    $2836   CALL     $836            ; Call subroutine at 836
$E44    $C85E   RND      V8, #5E         ; V8 = random & 5E
$E46    $0A04   SYS      $A04            ; System call to A04
$E48    $EB1D   UNKNOWN  $EB1D           ; Unknown Exxx instruction
$E4A    $67FD   LD       V7, #FD         ; Load 253 into V7
$E4C    $05BD   SYS      $5BD            ; System call to 5BD
$E4E    $A9A3   LD       I, $9A3         ; Load 9A3 into I
$E50    $B431   JP       V0, $431        ; Jump to V0 + 431
$E52    $3F3A   SE       VF, #3A         ; Skip if VF == 58
$E54    $94A9   UNKNOWN  $94A9           ; Unknown 9xxx instruction
$E56    $D3BD   DRW      V3, VB, #D      ; Draw 13-byte sprite at V3, VB
$E58    $E588   UNKNOWN  $E588           ; Unknown Exxx instruction
$E5A    $48E8   SNE      V8, #E8         ; Skip if V8 != 232
$E5C    $33DC   SE       V3, #DC         ; Skip if V3 == 220
$E5E    $BD08   JP       V0, $D08        ; Jump to V0 + D08
$E60    $8E0F   UNKNOWN  8E0F            ; Unknown 8xxx instruction
$E62    $2A00   CALL     $A00            ; Call subroutine at A00
$E64    $CE32   RND      VE, #32         ; VE = random & 32
$E66    $DF81   DRW      VF, V8, #1      ; Draw 1-byte sprite at VF, V8
$E68    $1268   JP       $268            ; Jump to 268
$E6A    $204F   CALL     $04F            ; Call subroutine at 04F
$E6C    $2E89   CALL     $E89            ; Call subroutine at E89
$E6E    $A364   LD       I, $364         ; Load 364 into I
$E70    $C9BB   RND      V9, #BB         ; V9 = random & BB
$E72    $B7DC   JP       V0, $7DC        ; Jump to V0 + 7DC
$E74    $3A0C   SE       VA, #0C         ; Skip if VA == 12
$E76    $CF40   RND      VF, #40         ; VF = random & 40
$E78    $6FE8   LD       VF, #E8         ; Load 232 into VF
$E7A    $7B67   ADD      VB, #67         ; Add 103 to VB
$E7C    $0B54   SYS      $B54            ; System call to B54
$E7E    $7C78   ADD      VC, #78         ; Add 120 to VC
$E80    $FCB7   UNKNOWN  FCB7            ; Unknown Fxxx instruction
$E82    $B6B1   JP       V0, $6B1        ; Jump to V0 + 6B1
$E84    $38C1   SE       V8, #C1         ; Skip if V8 == 193
$E86    $061B   SYS      $61B            ; System call to 61B
$E88    $517E   UNKNOWN  $517E           ; Unknown 5xxx instruction
$E8A    $E691   UNKNOWN  $E691           ; Unknown Exxx instruction
$E8C    $E04A   UNKNOWN  $E04A           ; Unknown Exxx instruction
$E8E    $B098   JP       V0, $098        ; Jump to V0 + 098
$E90    $154A   JP       $54A            ; Jump to 54A
$E92    $136E   JP       $36E            ; Jump to 36E
$E94    $A3E2   LD       I, $3E2         ; Load 3E2 into I
$E96    $A58F   LD       I, $58F         ; Load 58F into I
$E98    $7DD4   ADD      VD, #D4         ; Add 212 to VD
$E9A    $CBE0   RND      VB, #E0         ; VB = random & E0
$E9C    $4986   SNE      V9, #86         ; Skip if V9 != 134
$E9E    $0D1B   SYS      $D1B            ; System call to D1B
$EA0    $5834   UNKNOWN  $5834           ; Unknown 5xxx instruction
$EA2    $D2A6   DRW      V2, VA, #6      ; Draw 6-byte sprite at V2, VA
$EA4    $A050   LD       I, $050         ; Load 050 into I
$EA6    $D874   DRW      V8, V7, #4      ; Draw 4-byte sprite at V8, V7
$EA8    $BAA9   JP       V0, $AA9        ; Jump to V0 + AA9
$EAA    $7693   ADD      V6, #93         ; Add 147 to V6
$EAC    $66E8   LD       V6, #E8         ; Load 232 into V6
$EAE    $9216   UNKNOWN  $9216           ; Unknown 9xxx instruction
$EB0    $D02E   DRW      V0, V2, #E      ; Draw 14-byte sprite at V0, V2
$EB2    $078F   SYS      $78F            ; System call to 78F
$EB4    $5572   UNKNOWN  $5572           ; Unknown 5xxx instruction
$EB6    $A304   LD       I, $304         ; Load 304 into I
$EB8    $BB35   JP       V0, $B35        ; Jump to V0 + B35
$EBA    $0D5A   SYS      $D5A            ; System call to D5A
$EBC    $32E6   SE       V2, #E6         ; Skip if V2 == 230
$EBE    $9E14   UNKNOWN  $9E14           ; Unknown 9xxx instruction
$EC0    $5596   UNKNOWN  $5596           ; Unknown 5xxx instruction
$EC2    $F90A   LD       V9, K           ; Wait for key press, store in V9
$EC4    $E6F5   UNKNOWN  $E6F5           ; Unknown Exxx instruction
$EC6    $34B5   SE       V4, #B5         ; Skip if V4 == 181
$EC8    $0E73   SYS      $E73            ; System call to E73
$ECA    $6D26   LD       VD, #26         ; Load 38 into VD
$ECC    $4219   SNE      V2, #19         ; Skip if V2 != 25
$ECE    $5405   UNKNOWN  $5405           ; Unknown 5xxx instruction
$ED0    $CBBC   RND      VB, #BC         ; VB = random & BC
$ED2    $D983   DRW      V9, V8, #3      ; Draw 3-byte sprite at V9, V8
$ED4    $BF1D   JP       V0, $F1D        ; Jump to V0 + F1D
$ED6    $6D47   LD       VD, #47         ; Load 71 into VD
$ED8    $60E2   LD       V0, #E2         ; Load 226 into V0
$EDA    $118E   JP       $18E            ; Jump to 18E
$EDC    $6440   LD       V4, #40         ; Load 64 into V4
$EDE    $3761   SE       V7, #61         ; Skip if V7 == 97
$EE0    $5BAB   UNKNOWN  $5BAB           ; Unknown 5xxx instruction
$EE2    $B9A5   JP       V0, $9A5        ; Jump to V0 + 9A5
$EE4    $EBF2   UNKNOWN  $EBF2           ; Unknown Exxx instruction
$EE6    $2CE6   CALL     $CE6            ; Call subroutine at CE6
$EE8    $9A29   UNKNOWN  $9A29           ; Unknown 9xxx instruction
$EEA    $A6F0   LD       I, $6F0         ; Load 6F0 into I
$EEC    $4F39   SNE      VF, #39         ; Skip if VF != 57
$EEE    $D01F   DRW      V0, V1, #F      ; Draw 15-byte sprite at V0, V1
$EF0    $B534   JP       V0, $534        ; Jump to V0 + 534
$EF2    $2C14   CALL     $C14            ; Call subroutine at C14
$EF4    $F05E   UNKNOWN  F05E            ; Unknown Fxxx instruction
$EF6    $CE97   RND      VE, #97         ; VE = random & 97
$EF8    $EAE1   UNKNOWN  $EAE1           ; Unknown Exxx instruction
$EFA    $1470   JP       $470            ; Jump to 470
$EFC    $E9B7   UNKNOWN  $E9B7           ; Unknown Exxx instruction
$EFE    $1E64   JP       $E64            ; Jump to E64
$F00    $E599   UNKNOWN  $E599           ; Unknown Exxx instruction
$F02    $3C24   SE       VC, #24         ; Skip if VC == 36
$F04    $660D   LD       V6, #0D         ; Load 13 into V6
$F06    $A4FD   LD       I, $4FD         ; Load 4FD into I
$F08    $5112   UNKNOWN  $5112           ; Unknown 5xxx instruction
$F0A    $C187   RND      V1, #87         ; V1 = random & 87
$F0C    $3485   SE       V4, #85         ; Skip if V4 == 133
$F0E    $4661   SNE      V6, #61         ; Skip if V6 != 97
$F10    $2278   CALL     $278            ; Call subroutine at 278
$F12    $FEB6   UNKNOWN  FEB6            ; Unknown Fxxx instruction
$F14    $D85F   DRW      V8, V5, #F      ; Draw 15-byte sprite at V8, V5
$F16    $371B   SE       V7, #1B         ; Skip if V7 == 27
$F18    $BA4A   JP       V0, $A4A        ; Jump to V0 + A4A
$F1A    $7137   ADD      V1, #37         ; Add 55 to V1
$F1C    $3CAE   SE       VC, #AE         ; Skip if VC == 174
$F1E    $CAA3   RND      VA, #A3         ; VA = random & A3
$F20    $D947   DRW      V9, V4, #7      ; Draw 7-byte sprite at V9, V4
$F22    $1B54   JP       $B54            ; Jump to B54
$F24    $212A   CALL     $12A            ; Call subroutine at 12A
$F26    $AB91   LD       I, $B91         ; Load B91 into I
$F28    $6E0D   LD       VE, #0D         ; Load 13 into VE
$F2A    $A991   LD       I, $991         ; Load 991 into I
$F2C    $1DE4   JP       $DE4            ; Jump to DE4
$F2E    $537B   UNKNOWN  $537B           ; Unknown 5xxx instruction
$F30    $AA7E   LD       I, $A7E         ; Load A7E into I
$F32    $B793   JP       V0, $793        ; Jump to V0 + 793
$F34    $56BC   UNKNOWN  $56BC           ; Unknown 5xxx instruction
$F36    $5A0F   UNKNOWN  $5A0F           ; Unknown 5xxx instruction
$F38    $CFFC   RND      VF, #FC         ; VF = random & FC
$F3A    $6688   LD       V6, #88         ; Load 136 into V6
$F3C    $7843   ADD      V8, #43         ; Add 67 to V8
$F3E    $9CED   UNKNOWN  $9CED           ; Unknown 9xxx instruction
$F40    $36E2   SE       V6, #E2         ; Skip if V6 == 226
$F42    $BC7B   JP       V0, $C7B        ; Jump to V0 + C7B
$F44    $BCDE   JP       V0, $CDE        ; Jump to V0 + CDE
$F46    $1212   JP       $212            ; Jump to 212
$F48    $C855   RND      V8, #55         ; V8 = random & 55
$F4A    $A57F   LD       I, $57F         ; Load 57F into I
$F4C    $28FD   CALL     $8FD            ; Call subroutine at 8FD
$F4E    $8461   OR       V4, V6          ; V4 |= V6
$F50    $8B13   XOR      VB, V1          ; VB ^= V1
$F52    $0DEC   SYS      $DEC            ; System call to DEC
$F54    $D65A   DRW      V6, V5, #A      ; Draw 10-byte sprite at V6, V5
$F56    $9A9D   UNKNOWN  $9A9D           ; Unknown 9xxx instruction
$F58    $A6DD   LD       I, $6DD         ; Load 6DD into I
$F5A    $2D88   CALL     $D88            ; Call subroutine at D88
$F5C    $48CF   SNE      V8, #CF         ; Skip if V8 != 207
$F5E    $F6FB   UNKNOWN  F6FB            ; Unknown Fxxx instruction
$F60    $DDAF   DRW      VD, VA, #F      ; Draw 15-byte sprite at VD, VA
$F62    $ED5B   UNKNOWN  $ED5B           ; Unknown Exxx instruction
$F64    $C0B5   RND      V0, #B5         ; V0 = random & B5
$F66    $8D7D   UNKNOWN  8D7D            ; Unknown 8xxx instruction
$F68    $4B89   SNE      VB, #89         ; Skip if VB != 137
$F6A    $ED00   UNKNOWN  $ED00           ; Unknown Exxx instruction
$F6C    $66EE   LD       V6, #EE         ; Load 238 into V6
$F6E    $9F81   UNKNOWN  $9F81           ; Unknown 9xxx instruction
$F70    $03EB   SYS      $3EB            ; System call to 3EB
$F72    $E5AC   UNKNOWN  $E5AC           ; Unknown Exxx instruction
$F74    $AC07   LD       I, $C07         ; Load C07 into I
$F76    $68A0   LD       V8, #A0         ; Load 160 into V8
$F78    $418E   SNE      V1, #8E         ; Skip if V1 != 142
$F7A    $B482   JP       V0, $482        ; Jump to V0 + 482
$F7C    $6281   LD       V2, #81         ; Load 129 into V2
$F7E    $86DA   UNKNOWN  86DA            ; Unknown 8xxx instruction
$F80    $9B58   UNKNOWN  $9B58           ; Unknown 9xxx instruction
$F82    $7DC9   ADD      VD, #C9         ; Add 201 to VD
$F84    $5CEA   UNKNOWN  $5CEA           ; Unknown 5xxx instruction
$F86    $6512   LD       V5, #12         ; Load 18 into V5
$F88    $C2BD   RND      V2, #BD         ; V2 = random & BD
$F8A    $B330   JP       V0, $330        ; Jump to V0 + 330
$F8C    $8D62   AND      VD, V6          ; VD &= V6
$F8E    $5F70   SE       VF, V7          ; Skip if VF == V7
$F90    $B805   JP       V0, $805        ; Jump to V0 + 805
$F92    $6FF9   LD       VF, #F9         ; Load 249 into VF
$F94    $F327   UNKNOWN  F327            ; Unknown Fxxx instruction
$F96    $1D21   JP       $D21            ; Jump to D21
$F98    $0D10   SYS      $D10            ; System call to D10
$F9A    $6C9D   LD       VC, #9D         ; Load 157 into VC
$F9C    $2B89   CALL     $B89            ; Call subroutine at B89
$F9E    $C546   RND      V5, #46         ; V5 = random & 46
$FA0    $A286   LD       I, $286         ; Load 286 into I
$FA2    $CBFE   RND      VB, #FE         ; VB = random & FE
$FA4    $C39F   RND      V3, #9F         ; V3 = random & 9F
$FA6    $0286   SYS      $286            ; System call to 286
$FA8    $0A4D   SYS      $A4D            ; System call to A4D
$FAA    $2714   CALL     $714            ; Call subroutine at 714
$FAC    $2877   CALL     $877            ; Call subroutine at 877
$FAE    $2F91   CALL     $F91            ; Call subroutine at F91
$FB0    $486A   SNE      V8, #6A         ; Skip if V8 != 106
$FB2    $31C4   SE       V1, #C4         ; Skip if V1 == 196
$FB4    $458D   SNE      V5, #8D         ; Skip if V5 != 141
$FB6    $90EE   UNKNOWN  $90EE           ; Unknown 9xxx instruction
$FB8    $5369   UNKNOWN  $5369           ; Unknown 5xxx instruction
$FBA    $4826   SNE      V8, #26         ; Skip if V8 != 38
$FBC    $1F1B   JP       $F1B            ; Jump to F1B
$FBE    $689D   LD       V8, #9D         ; Load 157 into V8
$FC0    $0475   SYS      $475            ; System call to 475
$FC2    $5BAB   UNKNOWN  $5BAB           ; Unknown 5xxx instruction
$FC4    $9700   SNE      V7, V0          ; Skip if V7 != V0
$FC6    $3683   SE       V6, #83         ; Skip if V6 == 131
$FC8    $9835   UNKNOWN  $9835           ; Unknown 9xxx instruction
$FCA    $2F57   CALL     $F57            ; Call subroutine at F57
$FCC    $ED7C   UNKNOWN  $ED7C           ; Unknown Exxx instruction
$FCE    $5617   UNKNOWN  $5617           ; Unknown 5xxx instruction
$FD0    $AEA0   LD       I, $EA0         ; Load EA0 into I
$FD2    $05A0   SYS      $5A0            ; System call to 5A0
$FD4    $5FA2   UNKNOWN  $5FA2           ; Unknown 5xxx instruction
$FD6    $D684   DRW      V6, V8, #4      ; Draw 4-byte sprite at V6, V8
$FD8    $4C79   SNE      VC, #79         ; Skip if VC != 121
$FDA    $0AC2   SYS      $AC2            ; System call to AC2
$FDC    $9EEB   UNKNOWN  $9EEB           ; Unknown 9xxx instruction
$FDE    $315B   SE       V1, #5B         ; Skip if V1 == 91
$FE0    $D3E2   DRW      V3, VE, #2      ; Draw 2-byte sprite at V3, VE
$FE2    $AB12   LD       I, $B12         ; Load B12 into I
$FE4    $C0EF   RND      V0, #EF         ; V0 = random & EF
$FE6    $82F5   SUB      V2, VF          ; V2 -= VF, VF = !borrow
$FE8    $E8A5   UNKNOWN  $E8A5           ; Unknown Exxx instruction
$FEA    $6961   LD       V9, #61         ; Load 97 into V9
$FEC    $7933   ADD      V9, #33         ; Add 51 to V9
$FEE    $0167   SYS      $167            ; System call to 167
$FF0    $00CB   SYS      $0CB            ; System call to 0CB
$FF2    $DAAD   DRW      VA, VA, #D      ; Draw 13-byte sprite at VA, VA
$FF4    $DFFF   DRW      VF, VF, #F      ; Draw 15-byte sprite at VF, VF
$FF6    $5EDA   UNKNOWN  $5EDA           ; Unknown 5xxx instruction
$FF8    $0BC4   SYS      $BC4            ; System call to BC4
$FFA    $9859   UNKNOWN  $9859           ; Unknown 9xxx instruction
$FFC    $2F8F   CALL     $F8F            ; Call subroutine at F8F
$FFE    $B20A   JP       V0, $20A        ; Jump to V0 + 20A

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 490 (27.3%)
  LD      : 247 (13.8%)
  JP      : 221 (12.3%)
  RND     : 128 ( 7.1%)
  SNE     : 127 ( 7.1%)
  SYS     : 115 ( 6.4%)
  ADD     : 111 ( 6.2%)
  DRW     : 106 ( 5.9%)
  CALL    : 100 ( 5.6%)
  SE      :  98 ( 5.5%)
  XOR     :  14 ( 0.8%)
  SUB     :  12 ( 0.7%)
  SHL     :   7 ( 0.4%)
  AND     :   6 ( 0.3%)
  OR      :   4 ( 0.2%)
  SHR     :   3 ( 0.2%)
  SUBN    :   2 ( 0.1%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 358 (20.0%)
Arithmetic Operations: 149 (8.3%)
