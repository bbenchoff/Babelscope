
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B4053D01_I00679_C1001_e383d0e54fa1.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 4053
Instance: 679
Direction: descending
Final Array: [119, 64, 64, 64, 64, 64, 64, 64]
Operations: R:0 W:7 C:36 S:11

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 117
Sort Array References:
  $20C: LD I, $BA7 ; Load BA7 into I
  $27C: LD I, $B55 ; Load B55 into I
  $298: LD I, $F6E ; Load F6E into I
  $2A6: LD I, $CAA ; Load CAA into I
  $2D4: LD I, $12D ; Load 12D into I
  $2DE: LD I, $901 ; Load 901 into I
  $2EC: LD I, $394 ; Load 394 into I
  $312: LD I, $9BB ; Load 9BB into I
  $316: LD I, $C41 ; Load C41 into I
  $31A: LD I, $FC3 ; Load FC3 into I
  $354: LD I, $26E ; Load 26E into I
  $366: LD I, $C7D ; Load C7D into I
  $38C: LD I, $F13 ; Load F13 into I
  $398: LD I, $41C ; Load 41C into I
  $3BC: LD I, $5A6 ; Load 5A6 into I
  $3E4: LD I, $C81 ; Load C81 into I
  $406: LD I, $6DC ; Load 6DC into I
  $430: LD I, $71D ; Load 71D into I
  $464: LD I, $699 ; Load 699 into I
  $46A: LD I, $597 ; Load 597 into I
  $470: LD I, $71A ; Load 71A into I
  $4A6: LD I, $5F4 ; Load 5F4 into I
  $4A8: LD I, $541 ; Load 541 into I
  $4AE: LD I, $FAF ; Load FAF into I
  $4B0: LD I, $6F6 ; Load 6F6 into I
  $4B2: LD I, $97D ; Load 97D into I
  $50E: LD I, $BF1 ; Load BF1 into I
  $548: LD I, $FBE ; Load FBE into I
  $54E: LD I, $6FD ; Load 6FD into I
  $568: LD I, $E24 ; Load E24 into I
  $598: LD I, $7C1 ; Load 7C1 into I
  $5AE: LD I, $700 ; Load 700 into I
  $5E0: LD I, $1CB ; Load 1CB into I
  $5FC: LD I, $03B ; Load 03B into I
  $61A: LD I, $5F1 ; Load 5F1 into I
  $64A: LD I, $ACC ; Load ACC into I
  $650: LD I, $953 ; Load 953 into I
  $656: LD I, $880 ; Load 880 into I
  $68A: LD I, $589 ; Load 589 into I
  $69A: LD I, $25D ; Load 25D into I
  $6F0: LD I, $BBF ; Load BBF into I
  $740: LD I, $B29 ; Load B29 into I
  $758: LD I, $87E ; Load 87E into I
  $766: LD I, $864 ; Load 864 into I
  $780: LD I, $5DC ; Load 5DC into I
  $784: LD I, $788 ; Load 788 into I
  $78A: LD I, $902 ; Load 902 into I
  $7CE: LD I, $023 ; Load 023 into I
  $7D6: LD I, $56E ; Load 56E into I
  $804: LD I, $630 ; Load 630 into I
  $808: LD I, $9D5 ; Load 9D5 into I
  $810: LD I, $9D6 ; Load 9D6 into I
  $836: LD I, $AF9 ; Load AF9 into I
  $838: LD I, $22F ; Load 22F into I
  $864: LD I, $D2C ; Load D2C into I
  $868: LD I, $76E ; Load 76E into I
  $874: LD I, $F36 ; Load F36 into I
  $88C: LD I, $71F ; Load 71F into I
  $89A: LD I, $001 ; Load 001 into I
  $8A8: LD I, $A50 ; Load A50 into I
  $8CC: LD I, $40E ; Load 40E into I
  $8DC: LD I, $4CE ; Load 4CE into I
  $8DE: LD I, $F8E ; Load F8E into I
  $8E0: LD I, $65B ; Load 65B into I
  $922: LD I, $279 ; Load 279 into I
  $936: LD [I], VB ; Store V0-VB at I
  $974: LD I, $D3B ; Load D3B into I
  $990: LD I, $A37 ; Load A37 into I
  $9BA: LD I, $6A3 ; Load 6A3 into I
  $9BC: LD I, $0CB ; Load 0CB into I
  $9CE: ADD I, V3 ; I ADDRESS MANIPULATION
  $9D0: LD I, $170 ; Load 170 into I
  $A2E: LD I, $9C5 ; Load 9C5 into I
  $A34: LD I, $6AD ; Load 6AD into I
  $A88: LD I, $28A ; Load 28A into I
  $AA6: LD I, $C59 ; Load C59 into I
  $AD0: LD [I], V1 ; Store V0-V1 at I
  $ADC: LD I, $FF1 ; Load FF1 into I
  $AFC: LD I, $770 ; Load 770 into I
  $B0C: LD I, $7F8 ; Load 7F8 into I
  $B16: LD I, $0AE ; Load 0AE into I
  $B1C: LD I, $868 ; Load 868 into I
  $B34: LD I, $C2F ; Load C2F into I
  $B62: LD I, $550 ; Load 550 into I
  $B64: LD I, $1C9 ; Load 1C9 into I
  $BBA: LD I, $43F ; Load 43F into I
  $BCA: LD I, $E94 ; Load E94 into I
  $BF0: LD I, $B9F ; Load B9F into I
  $C80: LD I, $49F ; Load 49F into I
  $C8E: LD I, $599 ; Load 599 into I
  $C96: LD I, $9C8 ; Load 9C8 into I
  $CB6: LD I, $11F ; Load 11F into I
  $D00: LD I, $E8E ; Load E8E into I
  $D32: LD I, $DAE ; Load DAE into I
  $D4C: LD I, $518 ; Load 518 into I
  $D62: LD I, $104 ; Load 104 into I
  $D64: LD I, $CEF ; Load CEF into I
  $D82: LD I, $037 ; Load 037 into I
  $DB4: LD I, $4CB ; Load 4CB into I
  $E22: LD I, $E11 ; Load E11 into I
  $E24: LD I, $BCA ; Load BCA into I
  $E32: LD I, $3BD ; Load 3BD into I
  $E76: LD I, $6CD ; Load 6CD into I
  $E7C: LD I, $E2D ; Load E2D into I
  $EA2: LD [I], V0 ; Store V0-V0 at I
  $EBE: LD I, $15B ; Load 15B into I
  $ECE: LD I, $7CB ; Load 7CB into I
  $EFA: LD I, $199 ; Load 199 into I
  $EFC: LD I, $301 ; Load 301 into I
  $F28: LD I, $E2F ; Load E2F into I
  $F44: LD I, $3B7 ; Load 3B7 into I
  $F64: LD I, $AE8 ; Load AE8 into I
  $F68: LD I, $F6B ; Load F6B into I
  $F74: LD I, $4B6 ; Load 4B6 into I
  $FC8: LD I, $4D4 ; Load 4D4 into I
  $FDE: LD I, $D68 ; Load D68 into I
  $FF2: LD I, $FFF ; Load FFF into I

CONTROL FLOW ANALYSIS:
Jumps: 229
Calls: 106
Branches: 238
Loops: 131
Loop Structures:
  $224 -> $046 (backward jump)
  $244 -> $06F (backward jump)
  $2B0 -> $042 (backward jump)
  $2F2 -> $2AA (backward jump)
  $2FA -> $2E1 (backward jump)
  $340 -> $187 (backward jump)
  $364 -> $1AE (backward jump)
  $4BA -> $3BA (backward jump)
  $4FE -> $4AC (backward jump)
  $508 -> $1FB (backward jump)
  $538 -> $28A (backward jump)
  $554 -> $16A (backward jump)
  $56C -> $420 (backward jump)
  $5A8 -> $2F5 (backward jump)
  $5B4 -> $50E (backward jump)
  $5D4 -> $26B (backward jump)
  $614 -> $34A (backward jump)
  $62C -> $383 (backward jump)
  $646 -> $1D6 (backward jump)
  $66E -> $1FD (backward jump)
  $686 -> $255 (backward jump)
  $69E -> $63E (backward jump)
  $6A6 -> $48F (backward jump)
  $6C2 -> $526 (backward jump)
  $6CA -> $29D (backward jump)
  $6F8 -> $3BF (backward jump)
  $720 -> $282 (backward jump)
  $744 -> $2E3 (backward jump)
  $754 -> $016 (backward jump)
  $7A8 -> $2AB (backward jump)
  $82C -> $586 (backward jump)
  $852 -> $535 (backward jump)
  $882 -> $229 (backward jump)
  $8B2 -> $219 (backward jump)
  $8F2 -> $5C2 (backward jump)
  $90E -> $578 (backward jump)
  $934 -> $7B0 (backward jump)
  $962 -> $84B (backward jump)
  $972 -> $418 (backward jump)
  $9D8 -> $4EF (backward jump)
  $9EE -> $454 (backward jump)
  $A18 -> $2F5 (backward jump)
  $A2A -> $9B1 (backward jump)
  $A30 -> $81A (backward jump)
  $A40 -> $746 (backward jump)
  $A42 -> $2B8 (backward jump)
  $A68 -> $150 (backward jump)
  $A72 -> $147 (backward jump)
  $A76 -> $6A7 (backward jump)
  $A8A -> $6B7 (backward jump)
  $AA0 -> $545 (backward jump)
  $AD2 -> $322 (backward jump)
  $AD6 -> $388 (backward jump)
  $AF0 -> $A02 (backward jump)
  $AF8 -> $4E7 (backward jump)
  $AFE -> $A77 (backward jump)
  $B20 -> $222 (backward jump)
  $B32 -> $A18 (backward jump)
  $B46 -> $2C2 (backward jump)
  $B6C -> $977 (backward jump)
  $B92 -> $8FB (backward jump)
  $BA2 -> $8C1 (backward jump)
  $BBC -> $318 (backward jump)
  $BBE -> $A9A (backward jump)
  $BC8 -> $09A (backward jump)
  $BD0 -> $326 (backward jump)
  $BE6 -> $BCB (backward jump)
  $BEA -> $9A3 (backward jump)
  $BF4 -> $3EE (backward jump)
  $BFA -> $368 (backward jump)
  $BFE -> $013 (backward jump)
  $C06 -> $464 (backward jump)
  $C64 -> $03F (backward jump)
  $C66 -> $71D (backward jump)
  $C90 -> $576 (backward jump)
  $C92 -> $1E4 (backward jump)
  $CBA -> $7DD (backward jump)
  $CBE -> $6A2 (backward jump)
  $CC4 -> $C96 (backward jump)
  $CC6 -> $8FD (backward jump)
  $D0A -> $B7E (backward jump)
  $D10 -> $402 (backward jump)
  $D26 -> $355 (backward jump)
  $D34 -> $03E (backward jump)
  $D42 -> $A35 (backward jump)
  $D58 -> $A1C (backward jump)
  $D74 -> $762 (backward jump)
  $D8C -> $858 (backward jump)
  $D9C -> $C66 (backward jump)
  $DA0 -> $504 (backward jump)
  $DAA -> $4FA (backward jump)
  $DC6 -> $C98 (backward jump)
  $DC8 -> $A30 (backward jump)
  $DCC -> $167 (backward jump)
  $DDC -> $3B9 (backward jump)
  $DEE -> $830 (backward jump)
  $E1A -> $7AF (backward jump)
  $E1E -> $1BD (backward jump)
  $E26 -> $9B9 (backward jump)
  $E34 -> $BF9 (backward jump)
  $E4C -> $D03 (backward jump)
  $E52 -> $A44 (backward jump)
  $E56 -> $148 (backward jump)
  $E6A -> $9EF (backward jump)
  $E6E -> $BDE (backward jump)
  $EB6 -> $0C7 (backward jump)
  $EB8 -> $A22 (backward jump)
  $EBC -> $951 (backward jump)
  $EC4 -> $C23 (backward jump)
  $EC6 -> $017 (backward jump)
  $ED4 -> $C8B (backward jump)
  $EDA -> $505 (backward jump)
  $EE2 -> $D31 (backward jump)
  $F02 -> $A0B (backward jump)
  $F08 -> $6F2 (backward jump)
  $F0E -> $115 (backward jump)
  $F24 -> $510 (backward jump)
  $F3C -> $6CD (backward jump)
  $F76 -> $D3F (backward jump)
  $F78 -> $BB0 (backward jump)
  $F80 -> $D9E (backward jump)
  $F8C -> $967 (backward jump)
  $FA6 -> $D05 (backward jump)
  $FB6 -> $CA3 (backward jump)
  $FB8 -> $BBE (backward jump)
  $FC2 -> $D1D (backward jump)
  $FD4 -> $592 (backward jump)
  $FDA -> $257 (backward jump)
  $FDC -> $FAE (backward jump)
  $FF4 -> $7A0 (backward jump)
  $FF8 -> $3CE (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $1C0A   JP       $C0A            ; Jump to C0A
$202    $3E07   SE       VE, #07         ; Skip if VE == 7
$204    $7CDF   ADD      VC, #DF         ; Add 223 to VC
$206    $632F   LD       V3, #2F         ; Load 47 into V3
$208    $61CA   LD       V1, #CA         ; Load 202 into V1
$20A    $71F8   ADD      V1, #F8         ; Add 248 to V1
$20C    $ABA7   LD       I, $BA7         ; Load BA7 into I
$20E    $819E   SHL      V1              ; V1 <<= 1, VF = MSB
$210    $34AF   SE       V4, #AF         ; Skip if V4 == 175
$212    $BCD5   JP       V0, $CD5        ; Jump to V0 + CD5
$214    $0091   SYS      $091            ; System call to 091
$216    $3D06   SE       VD, #06         ; Skip if VD == 6
$218    $EB62   UNKNOWN  $EB62           ; Unknown Exxx instruction
$21A    $8A6D   UNKNOWN  8A6D            ; Unknown 8xxx instruction
$21C    $5001   UNKNOWN  $5001           ; Unknown 5xxx instruction
$21E    $048A   SYS      $48A            ; System call to 48A
$220    $282B   CALL     $82B            ; Call subroutine at 82B
$222    $B69D   JP       V0, $69D        ; Jump to V0 + 69D
$224    $1046   JP       $046            ; Jump to 046
$226    $92B6   UNKNOWN  $92B6           ; Unknown 9xxx instruction
$228    $7C97   ADD      VC, #97         ; Add 151 to VC
$22A    $722F   ADD      V2, #2F         ; Add 47 to V2
$22C    $BCAA   JP       V0, $CAA        ; Jump to V0 + CAA
$22E    $8ECF   UNKNOWN  8ECF            ; Unknown 8xxx instruction
$230    $D7A4   DRW      V7, VA, #4      ; Draw 4-byte sprite at V7, VA
$232    $FC06   UNKNOWN  FC06            ; Unknown Fxxx instruction
$234    $2495   CALL     $495            ; Call subroutine at 495
$236    $FA29   LD       F, VA           ; I = sprite address for digit VA
$238    $8133   XOR      V1, V3          ; V1 ^= V3
$23A    $1D0C   JP       $D0C            ; Jump to D0C
$23C    $8A1D   UNKNOWN  8A1D            ; Unknown 8xxx instruction
$23E    $7FC3   ADD      VF, #C3         ; Add 195 to VF
$240    $6274   LD       V2, #74         ; Load 116 into V2
$242    $B803   JP       V0, $803        ; Jump to V0 + 803
$244    $106F   JP       $06F            ; Jump to 06F
$246    $7121   ADD      V1, #21         ; Add 33 to V1
$248    $F032   UNKNOWN  F032            ; Unknown Fxxx instruction
$24A    $FECC   UNKNOWN  FECC            ; Unknown Fxxx instruction
$24C    $23DC   CALL     $3DC            ; Call subroutine at 3DC
$24E    $30B5   SE       V0, #B5         ; Skip if V0 == 181
$250    $39BE   SE       V9, #BE         ; Skip if V9 == 190
$252    $4EB2   SNE      VE, #B2         ; Skip if VE != 178
$254    $D385   DRW      V3, V8, #5      ; Draw 5-byte sprite at V3, V8
$256    $C6A9   RND      V6, #A9         ; V6 = random & A9
$258    $2816   CALL     $816            ; Call subroutine at 816
$25A    $2067   CALL     $067            ; Call subroutine at 067
$25C    $372C   SE       V7, #2C         ; Skip if V7 == 44
$25E    $38A3   SE       V8, #A3         ; Skip if V8 == 163
$260    $2F05   CALL     $F05            ; Call subroutine at F05
$262    $61A6   LD       V1, #A6         ; Load 166 into V1
$264    $CAAB   RND      VA, #AB         ; VA = random & AB
$266    $D021   DRW      V0, V2, #1      ; Draw 1-byte sprite at V0, V2
$268    $7836   ADD      V8, #36         ; Add 54 to V8
$26A    $B3B8   JP       V0, $3B8        ; Jump to V0 + 3B8
$26C    $207B   CALL     $07B            ; Call subroutine at 07B
$26E    $8B03   XOR      VB, V0          ; VB ^= V0
$270    $83B9   UNKNOWN  83B9            ; Unknown 8xxx instruction
$272    $EAB8   UNKNOWN  $EAB8           ; Unknown Exxx instruction
$274    $4AB7   SNE      VA, #B7         ; Skip if VA != 183
$276    $8D70   LD       VD, V7          ; VD = V7
$278    $059E   SYS      $59E            ; System call to 59E
$27A    $7297   ADD      V2, #97         ; Add 151 to V2
$27C    $AB55   LD       I, $B55         ; Load B55 into I
$27E    $6EA3   LD       VE, #A3         ; Load 163 into VE
$280    $3CE8   SE       VC, #E8         ; Skip if VC == 232
$282    $1825   JP       $825            ; Jump to 825
$284    $FBE5   UNKNOWN  FBE5            ; Unknown Fxxx instruction
$286    $BC09   JP       V0, $C09        ; Jump to V0 + C09
$288    $EDBF   UNKNOWN  $EDBF           ; Unknown Exxx instruction
$28A    $0187   SYS      $187            ; System call to 187
$28C    $479B   SNE      V7, #9B         ; Skip if V7 != 155
$28E    $6210   LD       V2, #10         ; Load 16 into V2
$290    $2AA7   CALL     $AA7            ; Call subroutine at AA7
$292    $647A   LD       V4, #7A         ; Load 122 into V4
$294    $8D58   UNKNOWN  8D58            ; Unknown 8xxx instruction
$296    $0E8B   SYS      $E8B            ; System call to E8B
$298    $AF6E   LD       I, $F6E         ; Load F6E into I
$29A    $9486   UNKNOWN  $9486           ; Unknown 9xxx instruction
$29C    $23E3   CALL     $3E3            ; Call subroutine at 3E3
$29E    $51A3   UNKNOWN  $51A3           ; Unknown 5xxx instruction
$2A0    $3EC0   SE       VE, #C0         ; Skip if VE == 192
$2A2    $D4C5   DRW      V4, VC, #5      ; Draw 5-byte sprite at V4, VC
$2A4    $D053   DRW      V0, V5, #3      ; Draw 3-byte sprite at V0, V5
$2A6    $ACAA   LD       I, $CAA         ; Load CAA into I
$2A8    $3490   SE       V4, #90         ; Skip if V4 == 144
$2AA    $3000   SE       V0, #00         ; Skip if V0 == 0
$2AC    $7DD9   ADD      VD, #D9         ; Add 217 to VD
$2AE    $508D   UNKNOWN  $508D           ; Unknown 5xxx instruction
$2B0    $1042   JP       $042            ; Jump to 042
$2B2    $DFE2   DRW      VF, VE, #2      ; Draw 2-byte sprite at VF, VE
$2B4    $6484   LD       V4, #84         ; Load 132 into V4
$2B6    $350A   SE       V5, #0A         ; Skip if V5 == 10
$2B8    $E893   UNKNOWN  $E893           ; Unknown Exxx instruction
$2BA    $59D3   UNKNOWN  $59D3           ; Unknown 5xxx instruction
$2BC    $E51C   UNKNOWN  $E51C           ; Unknown Exxx instruction
$2BE    $88C9   UNKNOWN  88C9            ; Unknown 8xxx instruction
$2C0    $8CE8   UNKNOWN  8CE8            ; Unknown 8xxx instruction
$2C2    $2E16   CALL     $E16            ; Call subroutine at E16
$2C4    $C614   RND      V6, #14         ; V6 = random & 14
$2C6    $2DF6   CALL     $DF6            ; Call subroutine at DF6
$2C8    $CB21   RND      VB, #21         ; VB = random & 21
$2CA    $40C8   SNE      V0, #C8         ; Skip if V0 != 200
$2CC    $D643   DRW      V6, V4, #3      ; Draw 3-byte sprite at V6, V4
$2CE    $829C   UNKNOWN  829C            ; Unknown 8xxx instruction
$2D0    $2B91   CALL     $B91            ; Call subroutine at B91
$2D2    $9BB6   UNKNOWN  $9BB6           ; Unknown 9xxx instruction
$2D4    $A12D   LD       I, $12D         ; Load 12D into I
$2D6    $9DAF   UNKNOWN  $9DAF           ; Unknown 9xxx instruction
$2D8    $95D2   UNKNOWN  $95D2           ; Unknown 9xxx instruction
$2DA    $61F9   LD       V1, #F9         ; Load 249 into V1
$2DC    $D058   DRW      V0, V5, #8      ; Draw 8-byte sprite at V0, V5
$2DE    $A901   LD       I, $901         ; Load 901 into I
$2E0    $9F8A   UNKNOWN  $9F8A           ; Unknown 9xxx instruction
$2E2    $2359   CALL     $359            ; Call subroutine at 359
$2E4    $6346   LD       V3, #46         ; Load 70 into V3
$2E6    $383D   SE       V8, #3D         ; Skip if V8 == 61
$2E8    $0C28   SYS      $C28            ; System call to C28
$2EA    $26C9   CALL     $6C9            ; Call subroutine at 6C9
$2EC    $A394   LD       I, $394         ; Load 394 into I
$2EE    $C21C   RND      V2, #1C         ; V2 = random & 1C
$2F0    $C11E   RND      V1, #1E         ; V1 = random & 1E
$2F2    $12AA   JP       $2AA            ; Jump to 2AA
$2F4    $E35F   UNKNOWN  $E35F           ; Unknown Exxx instruction
$2F6    $6264   LD       V2, #64         ; Load 100 into V2
$2F8    $9EE9   UNKNOWN  $9EE9           ; Unknown 9xxx instruction
$2FA    $12E1   JP       $2E1            ; Jump to 2E1
$2FC    $EC9A   UNKNOWN  $EC9A           ; Unknown Exxx instruction
$2FE    $292D   CALL     $92D            ; Call subroutine at 92D
$300    $7740   ADD      V7, #40         ; Add 64 to V7
$302    $4040   SNE      V0, #40         ; Skip if V0 != 64
$304    $4040   SNE      V0, #40         ; Skip if V0 != 64
$306    $4040   SNE      V0, #40         ; Skip if V0 != 64
$308    $4040   SNE      V0, #40         ; Skip if V0 != 64
$30A    $2D64   CALL     $D64            ; Call subroutine at D64
$30C    $E52D   UNKNOWN  $E52D           ; Unknown Exxx instruction
$30E    $DA55   DRW      VA, V5, #5      ; Draw 5-byte sprite at VA, V5
$310    $DA26   DRW      VA, V2, #6      ; Draw 6-byte sprite at VA, V2
$312    $A9BB   LD       I, $9BB         ; Load 9BB into I
$314    $D500   DRW      V5, V0, #0      ; Draw 0-byte sprite at V5, V0
$316    $AC41   LD       I, $C41         ; Load C41 into I
$318    $6556   LD       V5, #56         ; Load 86 into V5
$31A    $AFC3   LD       I, $FC3         ; Load FC3 into I
$31C    $B901   JP       V0, $901        ; Jump to V0 + 901
$31E    $E7F3   UNKNOWN  $E7F3           ; Unknown Exxx instruction
$320    $CB92   RND      VB, #92         ; VB = random & 92
$322    $7FAF   ADD      VF, #AF         ; Add 175 to VF
$324    $CBC2   RND      VB, #C2         ; VB = random & C2
$326    $0954   SYS      $954            ; System call to 954
$328    $F65C   UNKNOWN  F65C            ; Unknown Fxxx instruction
$32A    $91A1   UNKNOWN  $91A1           ; Unknown 9xxx instruction
$32C    $039B   SYS      $39B            ; System call to 39B
$32E    $345C   SE       V4, #5C         ; Skip if V4 == 92
$330    $34D4   SE       V4, #D4         ; Skip if V4 == 212
$332    $694C   LD       V9, #4C         ; Load 76 into V9
$334    $148A   JP       $48A            ; Jump to 48A
$336    $8D08   UNKNOWN  8D08            ; Unknown 8xxx instruction
$338    $4357   SNE      V3, #57         ; Skip if V3 != 87
$33A    $FB14   UNKNOWN  FB14            ; Unknown Fxxx instruction
$33C    $FD96   UNKNOWN  FD96            ; Unknown Fxxx instruction
$33E    $96BC   UNKNOWN  $96BC           ; Unknown 9xxx instruction
$340    $1187   JP       $187            ; Jump to 187
$342    $1651   JP       $651            ; Jump to 651
$344    $9A5A   UNKNOWN  $9A5A           ; Unknown 9xxx instruction
$346    $7533   ADD      V5, #33         ; Add 51 to V5
$348    $6456   LD       V4, #56         ; Load 86 into V4
$34A    $BD51   JP       V0, $D51        ; Jump to V0 + D51
$34C    $CC15   RND      VC, #15         ; VC = random & 15
$34E    $EC6E   UNKNOWN  $EC6E           ; Unknown Exxx instruction
$350    $1A07   JP       $A07            ; Jump to A07
$352    $02AE   SYS      $2AE            ; System call to 2AE
$354    $A26E   LD       I, $26E         ; Load 26E into I
$356    $D4D5   DRW      V4, VD, #5      ; Draw 5-byte sprite at V4, VD
$358    $5A99   UNKNOWN  $5A99           ; Unknown 5xxx instruction
$35A    $873C   UNKNOWN  873C            ; Unknown 8xxx instruction
$35C    $99B1   UNKNOWN  $99B1           ; Unknown 9xxx instruction
$35E    $0E14   SYS      $E14            ; System call to E14
$360    $D04C   DRW      V0, V4, #C      ; Draw 12-byte sprite at V0, V4
$362    $C500   RND      V5, #00         ; V5 = random & 00
$364    $11AE   JP       $1AE            ; Jump to 1AE
$366    $AC7D   LD       I, $C7D         ; Load C7D into I
$368    $32F0   SE       V2, #F0         ; Skip if V2 == 240
$36A    $06E9   SYS      $6E9            ; System call to 6E9
$36C    $46E2   SNE      V6, #E2         ; Skip if V6 != 226
$36E    $C1A7   RND      V1, #A7         ; V1 = random & A7
$370    $D51A   DRW      V5, V1, #A      ; Draw 10-byte sprite at V5, V1
$372    $8878   UNKNOWN  8878            ; Unknown 8xxx instruction
$374    $9A06   UNKNOWN  $9A06           ; Unknown 9xxx instruction
$376    $9D2A   UNKNOWN  $9D2A           ; Unknown 9xxx instruction
$378    $1713   JP       $713            ; Jump to 713
$37A    $7873   ADD      V8, #73         ; Add 115 to V8
$37C    $404C   SNE      V0, #4C         ; Skip if V0 != 76
$37E    $1E05   JP       $E05            ; Jump to E05
$380    $E623   UNKNOWN  $E623           ; Unknown Exxx instruction
$382    $3AD4   SE       VA, #D4         ; Skip if VA == 212
$384    $48ED   SNE      V8, #ED         ; Skip if V8 != 237
$386    $7811   ADD      V8, #11         ; Add 17 to V8
$388    $8B9B   UNKNOWN  8B9B            ; Unknown 8xxx instruction
$38A    $2FCF   CALL     $FCF            ; Call subroutine at FCF
$38C    $AF13   LD       I, $F13         ; Load F13 into I
$38E    $E97B   UNKNOWN  $E97B           ; Unknown Exxx instruction
$390    $448E   SNE      V4, #8E         ; Skip if V4 != 142
$392    $0CD9   SYS      $CD9            ; System call to CD9
$394    $9229   UNKNOWN  $9229           ; Unknown 9xxx instruction
$396    $050A   SYS      $50A            ; System call to 50A
$398    $A41C   LD       I, $41C         ; Load 41C into I
$39A    $5817   UNKNOWN  $5817           ; Unknown 5xxx instruction
$39C    $5089   UNKNOWN  $5089           ; Unknown 5xxx instruction
$39E    $6D77   LD       VD, #77         ; Load 119 into VD
$3A0    $0AB9   SYS      $AB9            ; System call to AB9
$3A2    $F876   UNKNOWN  F876            ; Unknown Fxxx instruction
$3A4    $0849   SYS      $849            ; System call to 849
$3A6    $63F5   LD       V3, #F5         ; Load 245 into V3
$3A8    $D633   DRW      V6, V3, #3      ; Draw 3-byte sprite at V6, V3
$3AA    $B496   JP       V0, $496        ; Jump to V0 + 496
$3AC    $E9D6   UNKNOWN  $E9D6           ; Unknown Exxx instruction
$3AE    $B7F8   JP       V0, $7F8        ; Jump to V0 + 7F8
$3B0    $BB8C   JP       V0, $B8C        ; Jump to V0 + B8C
$3B2    $D5E3   DRW      V5, VE, #3      ; Draw 3-byte sprite at V5, VE
$3B4    $298E   CALL     $98E            ; Call subroutine at 98E
$3B6    $144F   JP       $44F            ; Jump to 44F
$3B8    $1CB0   JP       $CB0            ; Jump to CB0
$3BA    $3FCF   SE       VF, #CF         ; Skip if VF == 207
$3BC    $A5A6   LD       I, $5A6         ; Load 5A6 into I
$3BE    $4C87   SNE      VC, #87         ; Skip if VC != 135
$3C0    $EF6B   UNKNOWN  $EF6B           ; Unknown Exxx instruction
$3C2    $5478   UNKNOWN  $5478           ; Unknown 5xxx instruction
$3C4    $F6B0   UNKNOWN  F6B0            ; Unknown Fxxx instruction
$3C6    $4EE0   SNE      VE, #E0         ; Skip if VE != 224
$3C8    $78F2   ADD      V8, #F2         ; Add 242 to V8
$3CA    $C80A   RND      V8, #0A         ; V8 = random & 0A
$3CC    $92D2   UNKNOWN  $92D2           ; Unknown 9xxx instruction
$3CE    $E537   UNKNOWN  $E537           ; Unknown Exxx instruction
$3D0    $6F5A   LD       VF, #5A         ; Load 90 into VF
$3D2    $15F8   JP       $5F8            ; Jump to 5F8
$3D4    $23F2   CALL     $3F2            ; Call subroutine at 3F2
$3D6    $D207   DRW      V2, V0, #7      ; Draw 7-byte sprite at V2, V0
$3D8    $2511   CALL     $511            ; Call subroutine at 511
$3DA    $9C5B   UNKNOWN  $9C5B           ; Unknown 9xxx instruction
$3DC    $C609   RND      V6, #09         ; V6 = random & 09
$3DE    $0822   SYS      $822            ; System call to 822
$3E0    $930D   UNKNOWN  $930D           ; Unknown 9xxx instruction
$3E2    $F64C   UNKNOWN  F64C            ; Unknown Fxxx instruction
$3E4    $AC81   LD       I, $C81         ; Load C81 into I
$3E6    $D563   DRW      V5, V6, #3      ; Draw 3-byte sprite at V5, V6
$3E8    $2534   CALL     $534            ; Call subroutine at 534
$3EA    $EE34   UNKNOWN  $EE34           ; Unknown Exxx instruction
$3EC    $DCEC   DRW      VC, VE, #C      ; Draw 12-byte sprite at VC, VE
$3EE    $96B4   UNKNOWN  $96B4           ; Unknown 9xxx instruction
$3F0    $F830   UNKNOWN  F830            ; Unknown Fxxx instruction
$3F2    $C591   RND      V5, #91         ; V5 = random & 91
$3F4    $4A19   SNE      VA, #19         ; Skip if VA != 25
$3F6    $4516   SNE      V5, #16         ; Skip if V5 != 22
$3F8    $BCA7   JP       V0, $CA7        ; Jump to V0 + CA7
$3FA    $962E   UNKNOWN  $962E           ; Unknown 9xxx instruction
$3FC    $B872   JP       V0, $872        ; Jump to V0 + 872
$3FE    $951F   UNKNOWN  $951F           ; Unknown 9xxx instruction
$400    $F50B   UNKNOWN  F50B            ; Unknown Fxxx instruction
$402    $6C65   LD       VC, #65         ; Load 101 into VC
$404    $1D61   JP       $D61            ; Jump to D61
$406    $A6DC   LD       I, $6DC         ; Load 6DC into I
$408    $727A   ADD      V2, #7A         ; Add 122 to V2
$40A    $C330   RND      V3, #30         ; V3 = random & 30
$40C    $3AC0   SE       VA, #C0         ; Skip if VA == 192
$40E    $419A   SNE      V1, #9A         ; Skip if V1 != 154
$410    $EC4A   UNKNOWN  $EC4A           ; Unknown Exxx instruction
$412    $E1EC   UNKNOWN  $E1EC           ; Unknown Exxx instruction
$414    $6627   LD       V6, #27         ; Load 39 into V6
$416    $1682   JP       $682            ; Jump to 682
$418    $F888   UNKNOWN  F888            ; Unknown Fxxx instruction
$41A    $9268   UNKNOWN  $9268           ; Unknown 9xxx instruction
$41C    $9A4F   UNKNOWN  $9A4F           ; Unknown 9xxx instruction
$41E    $59C9   UNKNOWN  $59C9           ; Unknown 5xxx instruction
$420    $91CA   UNKNOWN  $91CA           ; Unknown 9xxx instruction
$422    $00E3   SYS      $0E3            ; System call to 0E3
$424    $C796   RND      V7, #96         ; V7 = random & 96
$426    $7B1E   ADD      VB, #1E         ; Add 30 to VB
$428    $F1E9   UNKNOWN  F1E9            ; Unknown Fxxx instruction
$42A    $CE20   RND      VE, #20         ; VE = random & 20
$42C    $6E39   LD       VE, #39         ; Load 57 into VE
$42E    $2D4D   CALL     $D4D            ; Call subroutine at D4D
$430    $A71D   LD       I, $71D         ; Load 71D into I
$432    $8B8A   UNKNOWN  8B8A            ; Unknown 8xxx instruction
$434    $6A3F   LD       VA, #3F         ; Load 63 into VA
$436    $CA72   RND      VA, #72         ; VA = random & 72
$438    $DA6F   DRW      VA, V6, #F      ; Draw 15-byte sprite at VA, V6
$43A    $3E8A   SE       VE, #8A         ; Skip if VE == 138
$43C    $37B3   SE       V7, #B3         ; Skip if V7 == 179
$43E    $78E6   ADD      V8, #E6         ; Add 230 to V8
$440    $EE50   UNKNOWN  $EE50           ; Unknown Exxx instruction
$442    $79FB   ADD      V9, #FB         ; Add 251 to V9
$444    $8366   SHR      V3              ; V3 >>= 1, VF = LSB
$446    $6F54   LD       VF, #54         ; Load 84 into VF
$448    $D536   DRW      V5, V3, #6      ; Draw 6-byte sprite at V5, V3
$44A    $B48D   JP       V0, $48D        ; Jump to V0 + 48D
$44C    $71A6   ADD      V1, #A6         ; Add 166 to V1
$44E    $BE19   JP       V0, $E19        ; Jump to V0 + E19
$450    $0204   SYS      $204            ; System call to 204
$452    $0817   SYS      $817            ; System call to 817
$454    $0690   SYS      $690            ; System call to 690
$456    $1900   JP       $900            ; Jump to 900
$458    $CBDA   RND      VB, #DA         ; VB = random & DA
$45A    $BE71   JP       V0, $E71        ; Jump to V0 + E71
$45C    $6BBC   LD       VB, #BC         ; Load 188 into VB
$45E    $88A8   UNKNOWN  88A8            ; Unknown 8xxx instruction
$460    $F6FD   UNKNOWN  F6FD            ; Unknown Fxxx instruction
$462    $09CC   SYS      $9CC            ; System call to 9CC
$464    $A699   LD       I, $699         ; Load 699 into I
$466    $BD7F   JP       V0, $D7F        ; Jump to V0 + D7F
$468    $3394   SE       V3, #94         ; Skip if V3 == 148
$46A    $A597   LD       I, $597         ; Load 597 into I
$46C    $C48D   RND      V4, #8D         ; V4 = random & 8D
$46E    $FDB7   UNKNOWN  FDB7            ; Unknown Fxxx instruction
$470    $A71A   LD       I, $71A         ; Load 71A into I
$472    $DD16   DRW      VD, V1, #6      ; Draw 6-byte sprite at VD, V1
$474    $DBDD   DRW      VB, VD, #D      ; Draw 13-byte sprite at VB, VD
$476    $59C8   UNKNOWN  $59C8           ; Unknown 5xxx instruction
$478    $788D   ADD      V8, #8D         ; Add 141 to V8
$47A    $FC73   UNKNOWN  FC73            ; Unknown Fxxx instruction
$47C    $8458   UNKNOWN  8458            ; Unknown 8xxx instruction
$47E    $3311   SE       V3, #11         ; Skip if V3 == 17
$480    $CB9E   RND      VB, #9E         ; VB = random & 9E
$482    $C5C8   RND      V5, #C8         ; V5 = random & C8
$484    $CC98   RND      VC, #98         ; VC = random & 98
$486    $B681   JP       V0, $681        ; Jump to V0 + 681
$488    $D317   DRW      V3, V1, #7      ; Draw 7-byte sprite at V3, V1
$48A    $B973   JP       V0, $973        ; Jump to V0 + 973
$48C    $2C18   CALL     $C18            ; Call subroutine at C18
$48E    $55A9   UNKNOWN  $55A9           ; Unknown 5xxx instruction
$490    $8312   AND      V3, V1          ; V3 &= V1
$492    $C105   RND      V1, #05         ; V1 = random & 05
$494    $8C4E   SHL      VC              ; VC <<= 1, VF = MSB
$496    $47D9   SNE      V7, #D9         ; Skip if V7 != 217
$498    $946F   UNKNOWN  $946F           ; Unknown 9xxx instruction
$49A    $324B   SE       V2, #4B         ; Skip if V2 == 75
$49C    $2A65   CALL     $A65            ; Call subroutine at A65
$49E    $4BE0   SNE      VB, #E0         ; Skip if VB != 224
$4A0    $F796   UNKNOWN  F796            ; Unknown Fxxx instruction
$4A2    $3897   SE       V8, #97         ; Skip if V8 == 151
$4A4    $C473   RND      V4, #73         ; V4 = random & 73
$4A6    $A5F4   LD       I, $5F4         ; Load 5F4 into I
$4A8    $A541   LD       I, $541         ; Load 541 into I
$4AA    $3E51   SE       VE, #51         ; Skip if VE == 81
$4AC    $0C70   SYS      $C70            ; System call to C70
$4AE    $AFAF   LD       I, $FAF         ; Load FAF into I
$4B0    $A6F6   LD       I, $6F6         ; Load 6F6 into I
$4B2    $A97D   LD       I, $97D         ; Load 97D into I
$4B4    $FD0A   LD       VD, K           ; Wait for key press, store in VD
$4B6    $D2D1   DRW      V2, VD, #1      ; Draw 1-byte sprite at V2, VD
$4B8    $FAE4   UNKNOWN  FAE4            ; Unknown Fxxx instruction
$4BA    $13BA   JP       $3BA            ; Jump to 3BA
$4BC    $43D6   SNE      V3, #D6         ; Skip if V3 != 214
$4BE    $0261   SYS      $261            ; System call to 261
$4C0    $8B5E   SHL      VB              ; VB <<= 1, VF = MSB
$4C2    $CBD0   RND      VB, #D0         ; VB = random & D0
$4C4    $CF0D   RND      VF, #0D         ; VF = random & 0D
$4C6    $4BDE   SNE      VB, #DE         ; Skip if VB != 222
$4C8    $44AA   SNE      V4, #AA         ; Skip if V4 != 170
$4CA    $DBE9   DRW      VB, VE, #9      ; Draw 9-byte sprite at VB, VE
$4CC    $B5F2   JP       V0, $5F2        ; Jump to V0 + 5F2
$4CE    $6108   LD       V1, #08         ; Load 8 into V1
$4D0    $E3A2   UNKNOWN  $E3A2           ; Unknown Exxx instruction
$4D2    $1F6A   JP       $F6A            ; Jump to F6A
$4D4    $1737   JP       $737            ; Jump to 737
$4D6    $46DD   SNE      V6, #DD         ; Skip if V6 != 221
$4D8    $0331   SYS      $331            ; System call to 331
$4DA    $6F5B   LD       VF, #5B         ; Load 91 into VF
$4DC    $14ED   JP       $4ED            ; Jump to 4ED
$4DE    $F37C   UNKNOWN  F37C            ; Unknown Fxxx instruction
$4E0    $5E83   UNKNOWN  $5E83           ; Unknown 5xxx instruction
$4E2    $E91C   UNKNOWN  $E91C           ; Unknown Exxx instruction
$4E4    $03C7   SYS      $3C7            ; System call to 3C7
$4E6    $49F3   SNE      V9, #F3         ; Skip if V9 != 243
$4E8    $745E   ADD      V4, #5E         ; Add 94 to V4
$4EA    $F4E4   UNKNOWN  F4E4            ; Unknown Fxxx instruction
$4EC    $52DA   UNKNOWN  $52DA           ; Unknown 5xxx instruction
$4EE    $9517   UNKNOWN  $9517           ; Unknown 9xxx instruction
$4F0    $75AB   ADD      V5, #AB         ; Add 171 to V5
$4F2    $921E   UNKNOWN  $921E           ; Unknown 9xxx instruction
$4F4    $1A80   JP       $A80            ; Jump to A80
$4F6    $9148   UNKNOWN  $9148           ; Unknown 9xxx instruction
$4F8    $1631   JP       $631            ; Jump to 631
$4FA    $03BD   SYS      $3BD            ; System call to 3BD
$4FC    $F44B   UNKNOWN  F44B            ; Unknown Fxxx instruction
$4FE    $14AC   JP       $4AC            ; Jump to 4AC
$500    $D2E9   DRW      V2, VE, #9      ; Draw 9-byte sprite at V2, VE
$502    $9D3B   UNKNOWN  $9D3B           ; Unknown 9xxx instruction
$504    $3F2D   SE       VF, #2D         ; Skip if VF == 45
$506    $E38A   UNKNOWN  $E38A           ; Unknown Exxx instruction
$508    $11FB   JP       $1FB            ; Jump to 1FB
$50A    $EB97   UNKNOWN  $EB97           ; Unknown Exxx instruction
$50C    $5E13   UNKNOWN  $5E13           ; Unknown 5xxx instruction
$50E    $ABF1   LD       I, $BF1         ; Load BF1 into I
$510    $4734   SNE      V7, #34         ; Skip if V7 != 52
$512    $328C   SE       V2, #8C         ; Skip if V2 == 140
$514    $367B   SE       V6, #7B         ; Skip if V6 == 123
$516    $0231   SYS      $231            ; System call to 231
$518    $2D2B   CALL     $D2B            ; Call subroutine at D2B
$51A    $2589   CALL     $589            ; Call subroutine at 589
$51C    $2573   CALL     $573            ; Call subroutine at 573
$51E    $6379   LD       V3, #79         ; Load 121 into V3
$520    $CE63   RND      VE, #63         ; VE = random & 63
$522    $3194   SE       V1, #94         ; Skip if V1 == 148
$524    $FEE1   UNKNOWN  FEE1            ; Unknown Fxxx instruction
$526    $1DCC   JP       $DCC            ; Jump to DCC
$528    $5B82   UNKNOWN  $5B82           ; Unknown 5xxx instruction
$52A    $7130   ADD      V1, #30         ; Add 48 to V1
$52C    $D655   DRW      V6, V5, #5      ; Draw 5-byte sprite at V6, V5
$52E    $4196   SNE      V1, #96         ; Skip if V1 != 150
$530    $D4D8   DRW      V4, VD, #8      ; Draw 8-byte sprite at V4, VD
$532    $25E8   CALL     $5E8            ; Call subroutine at 5E8
$534    $8C95   SUB      VC, V9          ; VC -= V9, VF = !borrow
$536    $0CFC   SYS      $CFC            ; System call to CFC
$538    $B28A   JP       V0, $28A        ; Jump to V0 + 28A
$53A    $071D   SYS      $71D            ; System call to 71D
$53C    $7249   ADD      V2, #49         ; Add 73 to V2
$53E    $3DE6   SE       VD, #E6         ; Skip if VD == 230
$540    $9EFE   UNKNOWN  $9EFE           ; Unknown 9xxx instruction
$542    $1BC7   JP       $BC7            ; Jump to BC7
$544    $D819   DRW      V8, V1, #9      ; Draw 9-byte sprite at V8, V1
$546    $E2A5   UNKNOWN  $E2A5           ; Unknown Exxx instruction
$548    $AFBE   LD       I, $FBE         ; Load FBE into I
$54A    $0F0F   SYS      $F0F            ; System call to F0F
$54C    $C0DA   RND      V0, #DA         ; V0 = random & DA
$54E    $A6FD   LD       I, $6FD         ; Load 6FD into I
$550    $4756   SNE      V7, #56         ; Skip if V7 != 86
$552    $3226   SE       V2, #26         ; Skip if V2 == 38
$554    $116A   JP       $16A            ; Jump to 16A
$556    $2A8B   CALL     $A8B            ; Call subroutine at A8B
$558    $3D73   SE       VD, #73         ; Skip if VD == 115
$55A    $8BCD   UNKNOWN  8BCD            ; Unknown 8xxx instruction
$55C    $3BEE   SE       VB, #EE         ; Skip if VB == 238
$55E    $BDA2   JP       V0, $DA2        ; Jump to V0 + DA2
$560    $B8B0   JP       V0, $8B0        ; Jump to V0 + 8B0
$562    $BF4E   JP       V0, $F4E        ; Jump to V0 + F4E
$564    $C372   RND      V3, #72         ; V3 = random & 72
$566    $B617   JP       V0, $617        ; Jump to V0 + 617
$568    $AE24   LD       I, $E24         ; Load E24 into I
$56A    $05ED   SYS      $5ED            ; System call to 5ED
$56C    $1420   JP       $420            ; Jump to 420
$56E    $33CD   SE       V3, #CD         ; Skip if V3 == 205
$570    $0706   SYS      $706            ; System call to 706
$572    $7BBB   ADD      VB, #BB         ; Add 187 to VB
$574    $2855   CALL     $855            ; Call subroutine at 855
$576    $0271   SYS      $271            ; System call to 271
$578    $F5AB   UNKNOWN  F5AB            ; Unknown Fxxx instruction
$57A    $4909   SNE      V9, #09         ; Skip if V9 != 9
$57C    $4C5F   SNE      VC, #5F         ; Skip if VC != 95
$57E    $C0FA   RND      V0, #FA         ; V0 = random & FA
$580    $B7FB   JP       V0, $7FB        ; Jump to V0 + 7FB
$582    $44C1   SNE      V4, #C1         ; Skip if V4 != 193
$584    $F8D6   UNKNOWN  F8D6            ; Unknown Fxxx instruction
$586    $E15D   UNKNOWN  $E15D           ; Unknown Exxx instruction
$588    $E44F   UNKNOWN  $E44F           ; Unknown Exxx instruction
$58A    $02E4   SYS      $2E4            ; System call to 2E4
$58C    $7C74   ADD      VC, #74         ; Add 116 to VC
$58E    $7102   ADD      V1, #02         ; Add 2 to V1
$590    $4C38   SNE      VC, #38         ; Skip if VC != 56
$592    $27B5   CALL     $7B5            ; Call subroutine at 7B5
$594    $D209   DRW      V2, V0, #9      ; Draw 9-byte sprite at V2, V0
$596    $30B8   SE       V0, #B8         ; Skip if V0 == 184
$598    $A7C1   LD       I, $7C1         ; Load 7C1 into I
$59A    $3EAA   SE       VE, #AA         ; Skip if VE == 170
$59C    $358B   SE       V5, #8B         ; Skip if V5 == 139
$59E    $CDCD   RND      VD, #CD         ; VD = random & CD
$5A0    $1A75   JP       $A75            ; Jump to A75
$5A2    $DB44   DRW      VB, V4, #4      ; Draw 4-byte sprite at VB, V4
$5A4    $5B0D   UNKNOWN  $5B0D           ; Unknown 5xxx instruction
$5A6    $CC8F   RND      VC, #8F         ; VC = random & 8F
$5A8    $B2F5   JP       V0, $2F5        ; Jump to V0 + 2F5
$5AA    $8243   XOR      V2, V4          ; V2 ^= V4
$5AC    $68FC   LD       V8, #FC         ; Load 252 into V8
$5AE    $A700   LD       I, $700         ; Load 700 into I
$5B0    $C9E6   RND      V9, #E6         ; V9 = random & E6
$5B2    $17DC   JP       $7DC            ; Jump to 7DC
$5B4    $150E   JP       $50E            ; Jump to 50E
$5B6    $5CEE   UNKNOWN  $5CEE           ; Unknown 5xxx instruction
$5B8    $5F03   UNKNOWN  $5F03           ; Unknown 5xxx instruction
$5BA    $3A5D   SE       VA, #5D         ; Skip if VA == 93
$5BC    $068C   SYS      $68C            ; System call to 68C
$5BE    $3427   SE       V4, #27         ; Skip if V4 == 39
$5C0    $4692   SNE      V6, #92         ; Skip if V6 != 146
$5C2    $583B   UNKNOWN  $583B           ; Unknown 5xxx instruction
$5C4    $9DCE   UNKNOWN  $9DCE           ; Unknown 9xxx instruction
$5C6    $03B1   SYS      $3B1            ; System call to 3B1
$5C8    $C3B6   RND      V3, #B6         ; V3 = random & B6
$5CA    $69F9   LD       V9, #F9         ; Load 249 into V9
$5CC    $82C2   AND      V2, VC          ; V2 &= VC
$5CE    $E8E8   UNKNOWN  $E8E8           ; Unknown Exxx instruction
$5D0    $5028   UNKNOWN  $5028           ; Unknown 5xxx instruction
$5D2    $3B04   SE       VB, #04         ; Skip if VB == 4
$5D4    $126B   JP       $26B            ; Jump to 26B
$5D6    $EF29   UNKNOWN  $EF29           ; Unknown Exxx instruction
$5D8    $DE15   DRW      VE, V1, #5      ; Draw 5-byte sprite at VE, V1
$5DA    $4137   SNE      V1, #37         ; Skip if V1 != 55
$5DC    $0248   SYS      $248            ; System call to 248
$5DE    $4813   SNE      V8, #13         ; Skip if V8 != 19
$5E0    $A1CB   LD       I, $1CB         ; Load 1CB into I
$5E2    $9D86   UNKNOWN  $9D86           ; Unknown 9xxx instruction
$5E4    $9ECE   UNKNOWN  $9ECE           ; Unknown 9xxx instruction
$5E6    $D061   DRW      V0, V6, #1      ; Draw 1-byte sprite at V0, V6
$5E8    $5CBC   UNKNOWN  $5CBC           ; Unknown 5xxx instruction
$5EA    $0B8F   SYS      $B8F            ; System call to B8F
$5EC    $5B85   UNKNOWN  $5B85           ; Unknown 5xxx instruction
$5EE    $0E45   SYS      $E45            ; System call to E45
$5F0    $C99E   RND      V9, #9E         ; V9 = random & 9E
$5F2    $87AF   UNKNOWN  87AF            ; Unknown 8xxx instruction
$5F4    $3D98   SE       VD, #98         ; Skip if VD == 152
$5F6    $6B20   LD       VB, #20         ; Load 32 into VB
$5F8    $E09B   UNKNOWN  $E09B           ; Unknown Exxx instruction
$5FA    $D3E7   DRW      V3, VE, #7      ; Draw 7-byte sprite at V3, VE
$5FC    $A03B   LD       I, $03B         ; Load 03B into I
$5FE    $94D2   UNKNOWN  $94D2           ; Unknown 9xxx instruction
$600    $BBE2   JP       V0, $BE2        ; Jump to V0 + BE2
$602    $CD50   RND      VD, #50         ; VD = random & 50
$604    $912F   UNKNOWN  $912F           ; Unknown 9xxx instruction
$606    $EF2C   UNKNOWN  $EF2C           ; Unknown Exxx instruction
$608    $8CC7   SUBN     VC, VC          ; VC = VC - VC, VF = !borrow
$60A    $9F09   UNKNOWN  $9F09           ; Unknown 9xxx instruction
$60C    $1C8D   JP       $C8D            ; Jump to C8D
$60E    $ECD5   UNKNOWN  $ECD5           ; Unknown Exxx instruction
$610    $BCE0   JP       V0, $CE0        ; Jump to V0 + CE0
$612    $267E   CALL     $67E            ; Call subroutine at 67E
$614    $B34A   JP       V0, $34A        ; Jump to V0 + 34A
$616    $94BA   UNKNOWN  $94BA           ; Unknown 9xxx instruction
$618    $C95B   RND      V9, #5B         ; V9 = random & 5B
$61A    $A5F1   LD       I, $5F1         ; Load 5F1 into I
$61C    $5BD2   UNKNOWN  $5BD2           ; Unknown 5xxx instruction
$61E    $DE7F   DRW      VE, V7, #F      ; Draw 15-byte sprite at VE, V7
$620    $333B   SE       V3, #3B         ; Skip if V3 == 59
$622    $D72D   DRW      V7, V2, #D      ; Draw 13-byte sprite at V7, V2
$624    $02EE   SYS      $2EE            ; System call to 2EE
$626    $40EC   SNE      V0, #EC         ; Skip if V0 != 236
$628    $3738   SE       V7, #38         ; Skip if V7 == 56
$62A    $B8CE   JP       V0, $8CE        ; Jump to V0 + 8CE
$62C    $B383   JP       V0, $383        ; Jump to V0 + 383
$62E    $04B7   SYS      $4B7            ; System call to 4B7
$630    $964E   UNKNOWN  $964E           ; Unknown 9xxx instruction
$632    $2A71   CALL     $A71            ; Call subroutine at A71
$634    $2959   CALL     $959            ; Call subroutine at 959
$636    $FA64   UNKNOWN  FA64            ; Unknown Fxxx instruction
$638    $E627   UNKNOWN  $E627           ; Unknown Exxx instruction
$63A    $058E   SYS      $58E            ; System call to 58E
$63C    $0B74   SYS      $B74            ; System call to B74
$63E    $869E   SHL      V6              ; V6 <<= 1, VF = MSB
$640    $4A57   SNE      VA, #57         ; Skip if VA != 87
$642    $6308   LD       V3, #08         ; Load 8 into V3
$644    $20CA   CALL     $0CA            ; Call subroutine at 0CA
$646    $B1D6   JP       V0, $1D6        ; Jump to V0 + 1D6
$648    $CA55   RND      VA, #55         ; VA = random & 55
$64A    $AACC   LD       I, $ACC         ; Load ACC into I
$64C    $638A   LD       V3, #8A         ; Load 138 into V3
$64E    $7570   ADD      V5, #70         ; Add 112 to V5
$650    $A953   LD       I, $953         ; Load 953 into I
$652    $E0B9   UNKNOWN  $E0B9           ; Unknown Exxx instruction
$654    $D301   DRW      V3, V0, #1      ; Draw 1-byte sprite at V3, V0
$656    $A880   LD       I, $880         ; Load 880 into I
$658    $1A38   JP       $A38            ; Jump to A38
$65A    $B68C   JP       V0, $68C        ; Jump to V0 + 68C
$65C    $39F1   SE       V9, #F1         ; Skip if V9 == 241
$65E    $D6A4   DRW      V6, VA, #4      ; Draw 4-byte sprite at V6, VA
$660    $6662   LD       V6, #62         ; Load 98 into V6
$662    $C687   RND      V6, #87         ; V6 = random & 87
$664    $3FB7   SE       VF, #B7         ; Skip if VF == 183
$666    $E8F8   UNKNOWN  $E8F8           ; Unknown Exxx instruction
$668    $DB07   DRW      VB, V0, #7      ; Draw 7-byte sprite at VB, V0
$66A    $7B22   ADD      VB, #22         ; Add 34 to VB
$66C    $998E   UNKNOWN  $998E           ; Unknown 9xxx instruction
$66E    $11FD   JP       $1FD            ; Jump to 1FD
$670    $D351   DRW      V3, V5, #1      ; Draw 1-byte sprite at V3, V5
$672    $D2EE   DRW      V2, VE, #E      ; Draw 14-byte sprite at V2, VE
$674    $DD61   DRW      VD, V6, #1      ; Draw 1-byte sprite at VD, V6
$676    $D5A1   DRW      V5, VA, #1      ; Draw 1-byte sprite at V5, VA
$678    $2DCF   CALL     $DCF            ; Call subroutine at DCF
$67A    $1E4E   JP       $E4E            ; Jump to E4E
$67C    $CA5A   RND      VA, #5A         ; VA = random & 5A
$67E    $D01E   DRW      V0, V1, #E      ; Draw 14-byte sprite at V0, V1
$680    $973A   UNKNOWN  $973A           ; Unknown 9xxx instruction
$682    $FFF1   UNKNOWN  FFF1            ; Unknown Fxxx instruction
$684    $E3CC   UNKNOWN  $E3CC           ; Unknown Exxx instruction
$686    $1255   JP       $255            ; Jump to 255
$688    $5F73   UNKNOWN  $5F73           ; Unknown 5xxx instruction
$68A    $A589   LD       I, $589         ; Load 589 into I
$68C    $934E   UNKNOWN  $934E           ; Unknown 9xxx instruction
$68E    $43BC   SNE      V3, #BC         ; Skip if V3 != 188
$690    $DCCD   DRW      VC, VC, #D      ; Draw 13-byte sprite at VC, VC
$692    $9445   UNKNOWN  $9445           ; Unknown 9xxx instruction
$694    $7BED   ADD      VB, #ED         ; Add 237 to VB
$696    $E06F   UNKNOWN  $E06F           ; Unknown Exxx instruction
$698    $3C7D   SE       VC, #7D         ; Skip if VC == 125
$69A    $A25D   LD       I, $25D         ; Load 25D into I
$69C    $B83A   JP       V0, $83A        ; Jump to V0 + 83A
$69E    $B63E   JP       V0, $63E        ; Jump to V0 + 63E
$6A0    $86A4   ADD      V6, VA          ; V6 += VA, VF = carry
$6A2    $2A8B   CALL     $A8B            ; Call subroutine at A8B
$6A4    $8A8A   UNKNOWN  8A8A            ; Unknown 8xxx instruction
$6A6    $148F   JP       $48F            ; Jump to 48F
$6A8    $424C   SNE      V2, #4C         ; Skip if V2 != 76
$6AA    $0180   SYS      $180            ; System call to 180
$6AC    $EDDA   UNKNOWN  $EDDA           ; Unknown Exxx instruction
$6AE    $0E31   SYS      $E31            ; System call to E31
$6B0    $F168   UNKNOWN  F168            ; Unknown Fxxx instruction
$6B2    $1DE5   JP       $DE5            ; Jump to DE5
$6B4    $0E43   SYS      $E43            ; System call to E43
$6B6    $3026   SE       V0, #26         ; Skip if V0 == 38
$6B8    $5E67   UNKNOWN  $5E67           ; Unknown 5xxx instruction
$6BA    $91CB   UNKNOWN  $91CB           ; Unknown 9xxx instruction
$6BC    $55C1   UNKNOWN  $55C1           ; Unknown 5xxx instruction
$6BE    $95A3   UNKNOWN  $95A3           ; Unknown 9xxx instruction
$6C0    $3F39   SE       VF, #39         ; Skip if VF == 57
$6C2    $B526   JP       V0, $526        ; Jump to V0 + 526
$6C4    $EC4A   UNKNOWN  $EC4A           ; Unknown Exxx instruction
$6C6    $CEF6   RND      VE, #F6         ; VE = random & F6
$6C8    $83B6   SHR      V3              ; V3 >>= 1, VF = LSB
$6CA    $129D   JP       $29D            ; Jump to 29D
$6CC    $E9B3   UNKNOWN  $E9B3           ; Unknown Exxx instruction
$6CE    $5347   UNKNOWN  $5347           ; Unknown 5xxx instruction
$6D0    $819A   UNKNOWN  819A            ; Unknown 8xxx instruction
$6D2    $B6F5   JP       V0, $6F5        ; Jump to V0 + 6F5
$6D4    $6492   LD       V4, #92         ; Load 146 into V4
$6D6    $4AAA   SNE      VA, #AA         ; Skip if VA != 170
$6D8    $3EB3   SE       VE, #B3         ; Skip if VE == 179
$6DA    $CBC0   RND      VB, #C0         ; VB = random & C0
$6DC    $E061   UNKNOWN  $E061           ; Unknown Exxx instruction
$6DE    $4C9D   SNE      VC, #9D         ; Skip if VC != 157
$6E0    $F427   UNKNOWN  F427            ; Unknown Fxxx instruction
$6E2    $C64C   RND      V6, #4C         ; V6 = random & 4C
$6E4    $E8CA   UNKNOWN  $E8CA           ; Unknown Exxx instruction
$6E6    $BEBC   JP       V0, $EBC        ; Jump to V0 + EBC
$6E8    $65B8   LD       V5, #B8         ; Load 184 into V5
$6EA    $CADC   RND      VA, #DC         ; VA = random & DC
$6EC    $1D49   JP       $D49            ; Jump to D49
$6EE    $2E16   CALL     $E16            ; Call subroutine at E16
$6F0    $ABBF   LD       I, $BBF         ; Load BBF into I
$6F2    $C1D2   RND      V1, #D2         ; V1 = random & D2
$6F4    $C233   RND      V2, #33         ; V2 = random & 33
$6F6    $C502   RND      V5, #02         ; V5 = random & 02
$6F8    $B3BF   JP       V0, $3BF        ; Jump to V0 + 3BF
$6FA    $84F8   UNKNOWN  84F8            ; Unknown 8xxx instruction
$6FC    $930C   UNKNOWN  $930C           ; Unknown 9xxx instruction
$6FE    $6379   LD       V3, #79         ; Load 121 into V3
$700    $D60E   DRW      V6, V0, #E      ; Draw 14-byte sprite at V6, V0
$702    $6730   LD       V7, #30         ; Load 48 into V7
$704    $F247   UNKNOWN  F247            ; Unknown Fxxx instruction
$706    $0686   SYS      $686            ; System call to 686
$708    $1A8F   JP       $A8F            ; Jump to A8F
$70A    $9A64   UNKNOWN  $9A64           ; Unknown 9xxx instruction
$70C    $872D   UNKNOWN  872D            ; Unknown 8xxx instruction
$70E    $2B1F   CALL     $B1F            ; Call subroutine at B1F
$710    $66C2   LD       V6, #C2         ; Load 194 into V6
$712    $9B9A   UNKNOWN  $9B9A           ; Unknown 9xxx instruction
$714    $9181   UNKNOWN  $9181           ; Unknown 9xxx instruction
$716    $2308   CALL     $308            ; Call subroutine at 308
$718    $37DA   SE       V7, #DA         ; Skip if V7 == 218
$71A    $7502   ADD      V5, #02         ; Add 2 to V5
$71C    $694A   LD       V9, #4A         ; Load 74 into V9
$71E    $2E15   CALL     $E15            ; Call subroutine at E15
$720    $1282   JP       $282            ; Jump to 282
$722    $E85A   UNKNOWN  $E85A           ; Unknown Exxx instruction
$724    $DD57   DRW      VD, V5, #7      ; Draw 7-byte sprite at VD, V5
$726    $F210   UNKNOWN  F210            ; Unknown Fxxx instruction
$728    $3E44   SE       VE, #44         ; Skip if VE == 68
$72A    $926C   UNKNOWN  $926C           ; Unknown 9xxx instruction
$72C    $9E68   UNKNOWN  $9E68           ; Unknown 9xxx instruction
$72E    $72CD   ADD      V2, #CD         ; Add 205 to V2
$730    $EEBD   UNKNOWN  $EEBD           ; Unknown Exxx instruction
$732    $97EE   UNKNOWN  $97EE           ; Unknown 9xxx instruction
$734    $F324   UNKNOWN  F324            ; Unknown Fxxx instruction
$736    $54D7   UNKNOWN  $54D7           ; Unknown 5xxx instruction
$738    $362F   SE       V6, #2F         ; Skip if V6 == 47
$73A    $C719   RND      V7, #19         ; V7 = random & 19
$73C    $3C7C   SE       VC, #7C         ; Skip if VC == 124
$73E    $5AF3   UNKNOWN  $5AF3           ; Unknown 5xxx instruction
$740    $AB29   LD       I, $B29         ; Load B29 into I
$742    $78B1   ADD      V8, #B1         ; Add 177 to V8
$744    $12E3   JP       $2E3            ; Jump to 2E3
$746    $1893   JP       $893            ; Jump to 893
$748    $DD27   DRW      VD, V2, #7      ; Draw 7-byte sprite at VD, V2
$74A    $7694   ADD      V6, #94         ; Add 148 to V6
$74C    $C9B0   RND      V9, #B0         ; V9 = random & B0
$74E    $8229   UNKNOWN  8229            ; Unknown 8xxx instruction
$750    $2BD1   CALL     $BD1            ; Call subroutine at BD1
$752    $453B   SNE      V5, #3B         ; Skip if V5 != 59
$754    $B016   JP       V0, $016        ; Jump to V0 + 016
$756    $C3B8   RND      V3, #B8         ; V3 = random & B8
$758    $A87E   LD       I, $87E         ; Load 87E into I
$75A    $8B41   OR       VB, V4          ; VB |= V4
$75C    $4575   SNE      V5, #75         ; Skip if V5 != 117
$75E    $5C0B   UNKNOWN  $5C0B           ; Unknown 5xxx instruction
$760    $367C   SE       V6, #7C         ; Skip if V6 == 124
$762    $058D   SYS      $58D            ; System call to 58D
$764    $79FF   ADD      V9, #FF         ; Add 255 to V9
$766    $A864   LD       I, $864         ; Load 864 into I
$768    $CCC6   RND      VC, #C6         ; VC = random & C6
$76A    $2A11   CALL     $A11            ; Call subroutine at A11
$76C    $2864   CALL     $864            ; Call subroutine at 864
$76E    $E7B9   UNKNOWN  $E7B9           ; Unknown Exxx instruction
$770    $F176   UNKNOWN  F176            ; Unknown Fxxx instruction
$772    $60D0   LD       V0, #D0         ; Load 208 into V0
$774    $701D   ADD      V0, #1D         ; Add 29 to V0
$776    $BBA0   JP       V0, $BA0        ; Jump to V0 + BA0
$778    $9DBE   UNKNOWN  $9DBE           ; Unknown 9xxx instruction
$77A    $7168   ADD      V1, #68         ; Add 104 to V1
$77C    $67DE   LD       V7, #DE         ; Load 222 into V7
$77E    $254A   CALL     $54A            ; Call subroutine at 54A
$780    $A5DC   LD       I, $5DC         ; Load 5DC into I
$782    $E6EF   UNKNOWN  $E6EF           ; Unknown Exxx instruction
$784    $A788   LD       I, $788         ; Load 788 into I
$786    $DF25   DRW      VF, V2, #5      ; Draw 5-byte sprite at VF, V2
$788    $BFF5   JP       V0, $FF5        ; Jump to V0 + FF5
$78A    $A902   LD       I, $902         ; Load 902 into I
$78C    $F885   UNKNOWN  F885            ; Unknown Fxxx instruction
$78E    $0706   SYS      $706            ; System call to 706
$790    $8DE6   SHR      VD              ; VD >>= 1, VF = LSB
$792    $5995   UNKNOWN  $5995           ; Unknown 5xxx instruction
$794    $5D57   UNKNOWN  $5D57           ; Unknown 5xxx instruction
$796    $790D   ADD      V9, #0D         ; Add 13 to V9
$798    $8E9B   UNKNOWN  8E9B            ; Unknown 8xxx instruction
$79A    $D488   DRW      V4, V8, #8      ; Draw 8-byte sprite at V4, V8
$79C    $22D4   CALL     $2D4            ; Call subroutine at 2D4
$79E    $95BE   UNKNOWN  $95BE           ; Unknown 9xxx instruction
$7A0    $9334   UNKNOWN  $9334           ; Unknown 9xxx instruction
$7A2    $DD1D   DRW      VD, V1, #D      ; Draw 13-byte sprite at VD, V1
$7A4    $E7CB   UNKNOWN  $E7CB           ; Unknown Exxx instruction
$7A6    $3A64   SE       VA, #64         ; Skip if VA == 100
$7A8    $12AB   JP       $2AB            ; Jump to 2AB
$7AA    $2FBF   CALL     $FBF            ; Call subroutine at FBF
$7AC    $6E47   LD       VE, #47         ; Load 71 into VE
$7AE    $C98B   RND      V9, #8B         ; V9 = random & 8B
$7B0    $F0F8   UNKNOWN  F0F8            ; Unknown Fxxx instruction
$7B2    $C309   RND      V3, #09         ; V3 = random & 09
$7B4    $D345   DRW      V3, V4, #5      ; Draw 5-byte sprite at V3, V4
$7B6    $2205   CALL     $205            ; Call subroutine at 205
$7B8    $373A   SE       V7, #3A         ; Skip if V7 == 58
$7BA    $4BF3   SNE      VB, #F3         ; Skip if VB != 243
$7BC    $953F   UNKNOWN  $953F           ; Unknown 9xxx instruction
$7BE    $5C4B   UNKNOWN  $5C4B           ; Unknown 5xxx instruction
$7C0    $C909   RND      V9, #09         ; V9 = random & 09
$7C2    $C5DA   RND      V5, #DA         ; V5 = random & DA
$7C4    $78C3   ADD      V8, #C3         ; Add 195 to V8
$7C6    $5674   UNKNOWN  $5674           ; Unknown 5xxx instruction
$7C8    $E101   UNKNOWN  $E101           ; Unknown Exxx instruction
$7CA    $5C01   UNKNOWN  $5C01           ; Unknown 5xxx instruction
$7CC    $5915   UNKNOWN  $5915           ; Unknown 5xxx instruction
$7CE    $A023   LD       I, $023         ; Load 023 into I
$7D0    $FECD   UNKNOWN  FECD            ; Unknown Fxxx instruction
$7D2    $453E   SNE      V5, #3E         ; Skip if V5 != 62
$7D4    $C47C   RND      V4, #7C         ; V4 = random & 7C
$7D6    $A56E   LD       I, $56E         ; Load 56E into I
$7D8    $96AE   UNKNOWN  $96AE           ; Unknown 9xxx instruction
$7DA    $696E   LD       V9, #6E         ; Load 110 into V9
$7DC    $2DE1   CALL     $DE1            ; Call subroutine at DE1
$7DE    $F43A   UNKNOWN  F43A            ; Unknown Fxxx instruction
$7E0    $9871   UNKNOWN  $9871           ; Unknown 9xxx instruction
$7E2    $5932   UNKNOWN  $5932           ; Unknown 5xxx instruction
$7E4    $39F0   SE       V9, #F0         ; Skip if V9 == 240
$7E6    $FFC8   UNKNOWN  FFC8            ; Unknown Fxxx instruction
$7E8    $4930   SNE      V9, #30         ; Skip if V9 != 48
$7EA    $E93C   UNKNOWN  $E93C           ; Unknown Exxx instruction
$7EC    $F48E   UNKNOWN  F48E            ; Unknown Fxxx instruction
$7EE    $5A5C   UNKNOWN  $5A5C           ; Unknown 5xxx instruction
$7F0    $5571   UNKNOWN  $5571           ; Unknown 5xxx instruction
$7F2    $33F0   SE       V3, #F0         ; Skip if V3 == 240
$7F4    $7A5A   ADD      VA, #5A         ; Add 90 to VA
$7F6    $191F   JP       $91F            ; Jump to 91F
$7F8    $31BD   SE       V1, #BD         ; Skip if V1 == 189
$7FA    $2930   CALL     $930            ; Call subroutine at 930
$7FC    $7C3B   ADD      VC, #3B         ; Add 59 to VC
$7FE    $5D5C   UNKNOWN  $5D5C           ; Unknown 5xxx instruction
$800    $C951   RND      V9, #51         ; V9 = random & 51
$802    $73DE   ADD      V3, #DE         ; Add 222 to V3
$804    $A630   LD       I, $630         ; Load 630 into I
$806    $814A   UNKNOWN  814A            ; Unknown 8xxx instruction
$808    $A9D5   LD       I, $9D5         ; Load 9D5 into I
$80A    $D728   DRW      V7, V2, #8      ; Draw 8-byte sprite at V7, V2
$80C    $1895   JP       $895            ; Jump to 895
$80E    $2E89   CALL     $E89            ; Call subroutine at E89
$810    $A9D6   LD       I, $9D6         ; Load 9D6 into I
$812    $57DB   UNKNOWN  $57DB           ; Unknown 5xxx instruction
$814    $E54F   UNKNOWN  $E54F           ; Unknown Exxx instruction
$816    $7248   ADD      V2, #48         ; Add 72 to V2
$818    $79F2   ADD      V9, #F2         ; Add 242 to V9
$81A    $2FA4   CALL     $FA4            ; Call subroutine at FA4
$81C    $FFC3   UNKNOWN  FFC3            ; Unknown Fxxx instruction
$81E    $2C86   CALL     $C86            ; Call subroutine at C86
$820    $4BA4   SNE      VB, #A4         ; Skip if VB != 164
$822    $B9F9   JP       V0, $9F9        ; Jump to V0 + 9F9
$824    $095F   SYS      $95F            ; System call to 95F
$826    $3F6A   SE       VF, #6A         ; Skip if VF == 106
$828    $E082   UNKNOWN  $E082           ; Unknown Exxx instruction
$82A    $7F3E   ADD      VF, #3E         ; Add 62 to VF
$82C    $1586   JP       $586            ; Jump to 586
$82E    $F70C   UNKNOWN  F70C            ; Unknown Fxxx instruction
$830    $50CA   UNKNOWN  $50CA           ; Unknown 5xxx instruction
$832    $9AA1   UNKNOWN  $9AA1           ; Unknown 9xxx instruction
$834    $8996   SHR      V9              ; V9 >>= 1, VF = LSB
$836    $AAF9   LD       I, $AF9         ; Load AF9 into I
$838    $A22F   LD       I, $22F         ; Load 22F into I
$83A    $5DAB   UNKNOWN  $5DAB           ; Unknown 5xxx instruction
$83C    $77D8   ADD      V7, #D8         ; Add 216 to V7
$83E    $E28C   UNKNOWN  $E28C           ; Unknown Exxx instruction
$840    $1CD5   JP       $CD5            ; Jump to CD5
$842    $75E6   ADD      V5, #E6         ; Add 230 to V5
$844    $96D8   UNKNOWN  $96D8           ; Unknown 9xxx instruction
$846    $60EA   LD       V0, #EA         ; Load 234 into V0
$848    $2D91   CALL     $D91            ; Call subroutine at D91
$84A    $3B1E   SE       VB, #1E         ; Skip if VB == 30
$84C    $37F9   SE       V7, #F9         ; Skip if V7 == 249
$84E    $84D2   AND      V4, VD          ; V4 &= VD
$850    $75FD   ADD      V5, #FD         ; Add 253 to V5
$852    $1535   JP       $535            ; Jump to 535
$854    $008D   SYS      $08D            ; System call to 08D
$856    $C02F   RND      V0, #2F         ; V0 = random & 2F
$858    $961D   UNKNOWN  $961D           ; Unknown 9xxx instruction
$85A    $E29F   UNKNOWN  $E29F           ; Unknown Exxx instruction
$85C    $60D0   LD       V0, #D0         ; Load 208 into V0
$85E    $0035   SYS      $035            ; System call to 035
$860    $0866   SYS      $866            ; System call to 866
$862    $620F   LD       V2, #0F         ; Load 15 into V2
$864    $AD2C   LD       I, $D2C         ; Load D2C into I
$866    $1E31   JP       $E31            ; Jump to E31
$868    $A76E   LD       I, $76E         ; Load 76E into I
$86A    $6918   LD       V9, #18         ; Load 24 into V9
$86C    $F272   UNKNOWN  F272            ; Unknown Fxxx instruction
$86E    $D7EF   DRW      V7, VE, #F      ; Draw 15-byte sprite at V7, VE
$870    $C34F   RND      V3, #4F         ; V3 = random & 4F
$872    $076D   SYS      $76D            ; System call to 76D
$874    $AF36   LD       I, $F36         ; Load F36 into I
$876    $6339   LD       V3, #39         ; Load 57 into V3
$878    $FC04   UNKNOWN  FC04            ; Unknown Fxxx instruction
$87A    $3DF6   SE       VD, #F6         ; Skip if VD == 246
$87C    $2C2C   CALL     $C2C            ; Call subroutine at C2C
$87E    $8021   OR       V0, V2          ; V0 |= V2
$880    $0FF5   SYS      $FF5            ; System call to FF5
$882    $B229   JP       V0, $229        ; Jump to V0 + 229
$884    $2ED0   CALL     $ED0            ; Call subroutine at ED0
$886    $D85F   DRW      V8, V5, #F      ; Draw 15-byte sprite at V8, V5
$888    $2CCC   CALL     $CCC            ; Call subroutine at CCC
$88A    $DDFE   DRW      VD, VF, #E      ; Draw 14-byte sprite at VD, VF
$88C    $A71F   LD       I, $71F         ; Load 71F into I
$88E    $29A3   CALL     $9A3            ; Call subroutine at 9A3
$890    $7D53   ADD      VD, #53         ; Add 83 to VD
$892    $6261   LD       V2, #61         ; Load 97 into V2
$894    $7219   ADD      V2, #19         ; Add 25 to V2
$896    $E665   UNKNOWN  $E665           ; Unknown Exxx instruction
$898    $30BE   SE       V0, #BE         ; Skip if V0 == 190
$89A    $A001   LD       I, $001         ; Load 001 into I
$89C    $6F60   LD       VF, #60         ; Load 96 into VF
$89E    $DB39   DRW      VB, V3, #9      ; Draw 9-byte sprite at VB, V3
$8A0    $E1BF   UNKNOWN  $E1BF           ; Unknown Exxx instruction
$8A2    $F071   UNKNOWN  F071            ; Unknown Fxxx instruction
$8A4    $847A   UNKNOWN  847A            ; Unknown 8xxx instruction
$8A6    $197E   JP       $97E            ; Jump to 97E
$8A8    $AA50   LD       I, $A50         ; Load A50 into I
$8AA    $01D2   SYS      $1D2            ; System call to 1D2
$8AC    $5F7B   UNKNOWN  $5F7B           ; Unknown 5xxx instruction
$8AE    $EE65   UNKNOWN  $EE65           ; Unknown Exxx instruction
$8B0    $21E8   CALL     $1E8            ; Call subroutine at 1E8
$8B2    $B219   JP       V0, $219        ; Jump to V0 + 219
$8B4    $DFF8   DRW      VF, VF, #8      ; Draw 8-byte sprite at VF, VF
$8B6    $2606   CALL     $606            ; Call subroutine at 606
$8B8    $8A73   XOR      VA, V7          ; VA ^= V7
$8BA    $9842   UNKNOWN  $9842           ; Unknown 9xxx instruction
$8BC    $707D   ADD      V0, #7D         ; Add 125 to V0
$8BE    $42B9   SNE      V2, #B9         ; Skip if V2 != 185
$8C0    $E651   UNKNOWN  $E651           ; Unknown Exxx instruction
$8C2    $9349   UNKNOWN  $9349           ; Unknown 9xxx instruction
$8C4    $1AE8   JP       $AE8            ; Jump to AE8
$8C6    $65F6   LD       V5, #F6         ; Load 246 into V5
$8C8    $7BCF   ADD      VB, #CF         ; Add 207 to VB
$8CA    $BADD   JP       V0, $ADD        ; Jump to V0 + ADD
$8CC    $A40E   LD       I, $40E         ; Load 40E into I
$8CE    $242C   CALL     $42C            ; Call subroutine at 42C
$8D0    $51E0   SE       V1, VE          ; Skip if V1 == VE
$8D2    $DC19   DRW      VC, V1, #9      ; Draw 9-byte sprite at VC, V1
$8D4    $05E5   SYS      $5E5            ; System call to 5E5
$8D6    $4D3B   SNE      VD, #3B         ; Skip if VD != 59
$8D8    $C984   RND      V9, #84         ; V9 = random & 84
$8DA    $654C   LD       V5, #4C         ; Load 76 into V5
$8DC    $A4CE   LD       I, $4CE         ; Load 4CE into I
$8DE    $AF8E   LD       I, $F8E         ; Load F8E into I
$8E0    $A65B   LD       I, $65B         ; Load 65B into I
$8E2    $1AFF   JP       $AFF            ; Jump to AFF
$8E4    $6B22   LD       VB, #22         ; Load 34 into VB
$8E6    $EDA1   SKNP     VD              ; Skip if key VD not pressed
$8E8    $FD9D   UNKNOWN  FD9D            ; Unknown Fxxx instruction
$8EA    $57DC   UNKNOWN  $57DC           ; Unknown 5xxx instruction
$8EC    $5F35   UNKNOWN  $5F35           ; Unknown 5xxx instruction
$8EE    $C15B   RND      V1, #5B         ; V1 = random & 5B
$8F0    $9A8B   UNKNOWN  $9A8B           ; Unknown 9xxx instruction
$8F2    $15C2   JP       $5C2            ; Jump to 5C2
$8F4    $92C1   UNKNOWN  $92C1           ; Unknown 9xxx instruction
$8F6    $9ED1   UNKNOWN  $9ED1           ; Unknown 9xxx instruction
$8F8    $5D57   UNKNOWN  $5D57           ; Unknown 5xxx instruction
$8FA    $511B   UNKNOWN  $511B           ; Unknown 5xxx instruction
$8FC    $53AC   UNKNOWN  $53AC           ; Unknown 5xxx instruction
$8FE    $F6A4   UNKNOWN  F6A4            ; Unknown Fxxx instruction
$900    $D8C1   DRW      V8, VC, #1      ; Draw 1-byte sprite at V8, VC
$902    $C2CC   RND      V2, #CC         ; V2 = random & CC
$904    $53DF   UNKNOWN  $53DF           ; Unknown 5xxx instruction
$906    $1A5E   JP       $A5E            ; Jump to A5E
$908    $6149   LD       V1, #49         ; Load 73 into V1
$90A    $3CE3   SE       VC, #E3         ; Skip if VC == 227
$90C    $5FC2   UNKNOWN  $5FC2           ; Unknown 5xxx instruction
$90E    $1578   JP       $578            ; Jump to 578
$910    $0317   SYS      $317            ; System call to 317
$912    $D38D   DRW      V3, V8, #D      ; Draw 13-byte sprite at V3, V8
$914    $8D74   ADD      VD, V7          ; VD += V7, VF = carry
$916    $C475   RND      V4, #75         ; V4 = random & 75
$918    $8D51   OR       VD, V5          ; VD |= V5
$91A    $D24A   DRW      V2, V4, #A      ; Draw 10-byte sprite at V2, V4
$91C    $C0AC   RND      V0, #AC         ; V0 = random & AC
$91E    $4A6A   SNE      VA, #6A         ; Skip if VA != 106
$920    $0D57   SYS      $D57            ; System call to D57
$922    $A279   LD       I, $279         ; Load 279 into I
$924    $F40A   LD       V4, K           ; Wait for key press, store in V4
$926    $BD89   JP       V0, $D89        ; Jump to V0 + D89
$928    $EADC   UNKNOWN  $EADC           ; Unknown Exxx instruction
$92A    $E4B9   UNKNOWN  $E4B9           ; Unknown Exxx instruction
$92C    $9045   UNKNOWN  $9045           ; Unknown 9xxx instruction
$92E    $60AD   LD       V0, #AD         ; Load 173 into V0
$930    $4B70   SNE      VB, #70         ; Skip if VB != 112
$932    $9368   UNKNOWN  $9368           ; Unknown 9xxx instruction
$934    $B7B0   JP       V0, $7B0        ; Jump to V0 + 7B0
$936    $FB55   LD       [I], VB         ; Store V0-VB at I
$938    $D809   DRW      V8, V0, #9      ; Draw 9-byte sprite at V8, V0
$93A    $7554   ADD      V5, #54         ; Add 84 to V5
$93C    $8613   XOR      V6, V1          ; V6 ^= V1
$93E    $9AF8   UNKNOWN  $9AF8           ; Unknown 9xxx instruction
$940    $5ABF   UNKNOWN  $5ABF           ; Unknown 5xxx instruction
$942    $42F6   SNE      V2, #F6         ; Skip if V2 != 246
$944    $6952   LD       V9, #52         ; Load 82 into V9
$946    $D769   DRW      V7, V6, #9      ; Draw 9-byte sprite at V7, V6
$948    $9BAB   UNKNOWN  $9BAB           ; Unknown 9xxx instruction
$94A    $D57E   DRW      V5, V7, #E      ; Draw 14-byte sprite at V5, V7
$94C    $573E   UNKNOWN  $573E           ; Unknown 5xxx instruction
$94E    $5477   UNKNOWN  $5477           ; Unknown 5xxx instruction
$950    $355D   SE       V5, #5D         ; Skip if V5 == 93
$952    $428F   SNE      V2, #8F         ; Skip if V2 != 143
$954    $BFE2   JP       V0, $FE2        ; Jump to V0 + FE2
$956    $F60E   UNKNOWN  F60E            ; Unknown Fxxx instruction
$958    $4983   SNE      V9, #83         ; Skip if V9 != 131
$95A    $E455   UNKNOWN  $E455           ; Unknown Exxx instruction
$95C    $4D32   SNE      VD, #32         ; Skip if VD != 50
$95E    $C27F   RND      V2, #7F         ; V2 = random & 7F
$960    $36AA   SE       V6, #AA         ; Skip if V6 == 170
$962    $B84B   JP       V0, $84B        ; Jump to V0 + 84B
$964    $C7D6   RND      V7, #D6         ; V7 = random & D6
$966    $6337   LD       V3, #37         ; Load 55 into V3
$968    $01D7   SYS      $1D7            ; System call to 1D7
$96A    $9AC6   UNKNOWN  $9AC6           ; Unknown 9xxx instruction
$96C    $DFAD   DRW      VF, VA, #D      ; Draw 13-byte sprite at VF, VA
$96E    $46A7   SNE      V6, #A7         ; Skip if V6 != 167
$970    $D07E   DRW      V0, V7, #E      ; Draw 14-byte sprite at V0, V7
$972    $B418   JP       V0, $418        ; Jump to V0 + 418
$974    $AD3B   LD       I, $D3B         ; Load D3B into I
$976    $D531   DRW      V5, V3, #1      ; Draw 1-byte sprite at V5, V3
$978    $BD7C   JP       V0, $D7C        ; Jump to V0 + D7C
$97A    $60B3   LD       V0, #B3         ; Load 179 into V0
$97C    $BEAD   JP       V0, $EAD        ; Jump to V0 + EAD
$97E    $E161   UNKNOWN  $E161           ; Unknown Exxx instruction
$980    $93F3   UNKNOWN  $93F3           ; Unknown 9xxx instruction
$982    $E015   UNKNOWN  $E015           ; Unknown Exxx instruction
$984    $8A9C   UNKNOWN  8A9C            ; Unknown 8xxx instruction
$986    $1B56   JP       $B56            ; Jump to B56
$988    $5DB8   UNKNOWN  $5DB8           ; Unknown 5xxx instruction
$98A    $E919   UNKNOWN  $E919           ; Unknown Exxx instruction
$98C    $DDEC   DRW      VD, VE, #C      ; Draw 12-byte sprite at VD, VE
$98E    $E615   UNKNOWN  $E615           ; Unknown Exxx instruction
$990    $AA37   LD       I, $A37         ; Load A37 into I
$992    $3543   SE       V5, #43         ; Skip if V5 == 67
$994    $506D   UNKNOWN  $506D           ; Unknown 5xxx instruction
$996    $31F4   SE       V1, #F4         ; Skip if V1 == 244
$998    $6C3C   LD       VC, #3C         ; Load 60 into VC
$99A    $407F   SNE      V0, #7F         ; Skip if V0 != 127
$99C    $4F3E   SNE      VF, #3E         ; Skip if VF != 62
$99E    $F837   UNKNOWN  F837            ; Unknown Fxxx instruction
$9A0    $FE10   UNKNOWN  FE10            ; Unknown Fxxx instruction
$9A2    $6FA3   LD       VF, #A3         ; Load 163 into VF
$9A4    $E357   UNKNOWN  $E357           ; Unknown Exxx instruction
$9A6    $33FB   SE       V3, #FB         ; Skip if V3 == 251
$9A8    $DCAE   DRW      VC, VA, #E      ; Draw 14-byte sprite at VC, VA
$9AA    $31D9   SE       V1, #D9         ; Skip if V1 == 217
$9AC    $73EC   ADD      V3, #EC         ; Add 236 to V3
$9AE    $5284   UNKNOWN  $5284           ; Unknown 5xxx instruction
$9B0    $3A79   SE       VA, #79         ; Skip if VA == 121
$9B2    $ECB1   UNKNOWN  $ECB1           ; Unknown Exxx instruction
$9B4    $4691   SNE      V6, #91         ; Skip if V6 != 145
$9B6    $CA66   RND      VA, #66         ; VA = random & 66
$9B8    $DB6B   DRW      VB, V6, #B      ; Draw 11-byte sprite at VB, V6
$9BA    $A6A3   LD       I, $6A3         ; Load 6A3 into I
$9BC    $A0CB   LD       I, $0CB         ; Load 0CB into I
$9BE    $68B1   LD       V8, #B1         ; Load 177 into V8
$9C0    $4EA3   SNE      VE, #A3         ; Skip if VE != 163
$9C2    $3CDC   SE       VC, #DC         ; Skip if VC == 220
$9C4    $80D4   ADD      V0, VD          ; V0 += VD, VF = carry
$9C6    $5215   UNKNOWN  $5215           ; Unknown 5xxx instruction
$9C8    $6912   LD       V9, #12         ; Load 18 into V9
$9CA    $382A   SE       V8, #2A         ; Skip if V8 == 42
$9CC    $D100   DRW      V1, V0, #0      ; Draw 0-byte sprite at V1, V0
$9CE    $F31E   ADD      I, V3           ; I += V3
$9D0    $A170   LD       I, $170         ; Load 170 into I
$9D2    $09FE   SYS      $9FE            ; System call to 9FE
$9D4    $5D28   UNKNOWN  $5D28           ; Unknown 5xxx instruction
$9D6    $6423   LD       V4, #23         ; Load 35 into V4
$9D8    $14EF   JP       $4EF            ; Jump to 4EF
$9DA    $357B   SE       V5, #7B         ; Skip if V5 == 123
$9DC    $4145   SNE      V1, #45         ; Skip if V1 != 69
$9DE    $0BA4   SYS      $BA4            ; System call to BA4
$9E0    $2B31   CALL     $B31            ; Call subroutine at B31
$9E2    $76D6   ADD      V6, #D6         ; Add 214 to V6
$9E4    $E256   UNKNOWN  $E256           ; Unknown Exxx instruction
$9E6    $F25C   UNKNOWN  F25C            ; Unknown Fxxx instruction
$9E8    $F9FD   UNKNOWN  F9FD            ; Unknown Fxxx instruction
$9EA    $021D   SYS      $21D            ; System call to 21D
$9EC    $FEC9   UNKNOWN  FEC9            ; Unknown Fxxx instruction
$9EE    $1454   JP       $454            ; Jump to 454
$9F0    $26F9   CALL     $6F9            ; Call subroutine at 6F9
$9F2    $623A   LD       V2, #3A         ; Load 58 into V2
$9F4    $C4A4   RND      V4, #A4         ; V4 = random & A4
$9F6    $03B3   SYS      $3B3            ; System call to 3B3
$9F8    $71C4   ADD      V1, #C4         ; Add 196 to V1
$9FA    $DB7C   DRW      VB, V7, #C      ; Draw 12-byte sprite at VB, V7
$9FC    $4C6C   SNE      VC, #6C         ; Skip if VC != 108
$9FE    $08C8   SYS      $8C8            ; System call to 8C8
$A00    $8A18   UNKNOWN  8A18            ; Unknown 8xxx instruction
$A02    $EA3B   UNKNOWN  $EA3B           ; Unknown Exxx instruction
$A04    $545C   UNKNOWN  $545C           ; Unknown 5xxx instruction
$A06    $321F   SE       V2, #1F         ; Skip if V2 == 31
$A08    $E0C2   UNKNOWN  $E0C2           ; Unknown Exxx instruction
$A0A    $399A   SE       V9, #9A         ; Skip if V9 == 154
$A0C    $8ACC   UNKNOWN  8ACC            ; Unknown 8xxx instruction
$A0E    $FC0D   UNKNOWN  FC0D            ; Unknown Fxxx instruction
$A10    $F68F   UNKNOWN  F68F            ; Unknown Fxxx instruction
$A12    $4179   SNE      V1, #79         ; Skip if V1 != 121
$A14    $C76D   RND      V7, #6D         ; V7 = random & 6D
$A16    $C8C3   RND      V8, #C3         ; V8 = random & C3
$A18    $12F5   JP       $2F5            ; Jump to 2F5
$A1A    $7F82   ADD      VF, #82         ; Add 130 to VF
$A1C    $20C2   CALL     $0C2            ; Call subroutine at 0C2
$A1E    $9606   UNKNOWN  $9606           ; Unknown 9xxx instruction
$A20    $2006   CALL     $006            ; Call subroutine at 006
$A22    $087D   SYS      $87D            ; System call to 87D
$A24    $8878   UNKNOWN  8878            ; Unknown 8xxx instruction
$A26    $CCE4   RND      VC, #E4         ; VC = random & E4
$A28    $FE2B   UNKNOWN  FE2B            ; Unknown Fxxx instruction
$A2A    $B9B1   JP       V0, $9B1        ; Jump to V0 + 9B1
$A2C    $C75D   RND      V7, #5D         ; V7 = random & 5D
$A2E    $A9C5   LD       I, $9C5         ; Load 9C5 into I
$A30    $B81A   JP       V0, $81A        ; Jump to V0 + 81A
$A32    $7A57   ADD      VA, #57         ; Add 87 to VA
$A34    $A6AD   LD       I, $6AD         ; Load 6AD into I
$A36    $0547   SYS      $547            ; System call to 547
$A38    $8C59   UNKNOWN  8C59            ; Unknown 8xxx instruction
$A3A    $8DD9   UNKNOWN  8DD9            ; Unknown 8xxx instruction
$A3C    $CEEC   RND      VE, #EC         ; VE = random & EC
$A3E    $6CB9   LD       VC, #B9         ; Load 185 into VC
$A40    $1746   JP       $746            ; Jump to 746
$A42    $B2B8   JP       V0, $2B8        ; Jump to V0 + 2B8
$A44    $9513   UNKNOWN  $9513           ; Unknown 9xxx instruction
$A46    $8C6C   UNKNOWN  8C6C            ; Unknown 8xxx instruction
$A48    $50AB   UNKNOWN  $50AB           ; Unknown 5xxx instruction
$A4A    $FAF4   UNKNOWN  FAF4            ; Unknown Fxxx instruction
$A4C    $8F8C   UNKNOWN  8F8C            ; Unknown 8xxx instruction
$A4E    $41F3   SNE      V1, #F3         ; Skip if V1 != 243
$A50    $D2C3   DRW      V2, VC, #3      ; Draw 3-byte sprite at V2, VC
$A52    $C31F   RND      V3, #1F         ; V3 = random & 1F
$A54    $758C   ADD      V5, #8C         ; Add 140 to V5
$A56    $2FFE   CALL     $FFE            ; Call subroutine at FFE
$A58    $59AE   UNKNOWN  $59AE           ; Unknown 5xxx instruction
$A5A    $6EBB   LD       VE, #BB         ; Load 187 into VE
$A5C    $6328   LD       V3, #28         ; Load 40 into V3
$A5E    $8F88   UNKNOWN  8F88            ; Unknown 8xxx instruction
$A60    $3AF7   SE       VA, #F7         ; Skip if VA == 247
$A62    $3087   SE       V0, #87         ; Skip if V0 == 135
$A64    $485B   SNE      V8, #5B         ; Skip if V8 != 91
$A66    $2012   CALL     $012            ; Call subroutine at 012
$A68    $1150   JP       $150            ; Jump to 150
$A6A    $FECD   UNKNOWN  FECD            ; Unknown Fxxx instruction
$A6C    $04A5   SYS      $4A5            ; System call to 4A5
$A6E    $6EF5   LD       VE, #F5         ; Load 245 into VE
$A70    $CE0B   RND      VE, #0B         ; VE = random & 0B
$A72    $1147   JP       $147            ; Jump to 147
$A74    $3DBC   SE       VD, #BC         ; Skip if VD == 188
$A76    $16A7   JP       $6A7            ; Jump to 6A7
$A78    $3C15   SE       VC, #15         ; Skip if VC == 21
$A7A    $2A46   CALL     $A46            ; Call subroutine at A46
$A7C    $E079   UNKNOWN  $E079           ; Unknown Exxx instruction
$A7E    $2672   CALL     $672            ; Call subroutine at 672
$A80    $E230   UNKNOWN  $E230           ; Unknown Exxx instruction
$A82    $BFCB   JP       V0, $FCB        ; Jump to V0 + FCB
$A84    $8FA0   LD       VF, VA          ; VF = VA
$A86    $3EA4   SE       VE, #A4         ; Skip if VE == 164
$A88    $A28A   LD       I, $28A         ; Load 28A into I
$A8A    $B6B7   JP       V0, $6B7        ; Jump to V0 + 6B7
$A8C    $97DC   UNKNOWN  $97DC           ; Unknown 9xxx instruction
$A8E    $52B5   UNKNOWN  $52B5           ; Unknown 5xxx instruction
$A90    $5AF4   UNKNOWN  $5AF4           ; Unknown 5xxx instruction
$A92    $7C9F   ADD      VC, #9F         ; Add 159 to VC
$A94    $28E6   CALL     $8E6            ; Call subroutine at 8E6
$A96    $DCE5   DRW      VC, VE, #5      ; Draw 5-byte sprite at VC, VE
$A98    $C4DA   RND      V4, #DA         ; V4 = random & DA
$A9A    $76A5   ADD      V6, #A5         ; Add 165 to V6
$A9C    $88ED   UNKNOWN  88ED            ; Unknown 8xxx instruction
$A9E    $97F4   UNKNOWN  $97F4           ; Unknown 9xxx instruction
$AA0    $1545   JP       $545            ; Jump to 545
$AA2    $2374   CALL     $374            ; Call subroutine at 374
$AA4    $2257   CALL     $257            ; Call subroutine at 257
$AA6    $AC59   LD       I, $C59         ; Load C59 into I
$AA8    $63C2   LD       V3, #C2         ; Load 194 into V3
$AAA    $FBAE   UNKNOWN  FBAE            ; Unknown Fxxx instruction
$AAC    $D43D   DRW      V4, V3, #D      ; Draw 13-byte sprite at V4, V3
$AAE    $6DCD   LD       VD, #CD         ; Load 205 into VD
$AB0    $6715   LD       V7, #15         ; Load 21 into V7
$AB2    $0B51   SYS      $B51            ; System call to B51
$AB4    $36C1   SE       V6, #C1         ; Skip if V6 == 193
$AB6    $7DA7   ADD      VD, #A7         ; Add 167 to VD
$AB8    $DE5C   DRW      VE, V5, #C      ; Draw 12-byte sprite at VE, V5
$ABA    $75C0   ADD      V5, #C0         ; Add 192 to V5
$ABC    $9924   UNKNOWN  $9924           ; Unknown 9xxx instruction
$ABE    $9E44   UNKNOWN  $9E44           ; Unknown 9xxx instruction
$AC0    $511B   UNKNOWN  $511B           ; Unknown 5xxx instruction
$AC2    $C6C5   RND      V6, #C5         ; V6 = random & C5
$AC4    $D63C   DRW      V6, V3, #C      ; Draw 12-byte sprite at V6, V3
$AC6    $31E0   SE       V1, #E0         ; Skip if V1 == 224
$AC8    $8E3E   SHL      VE              ; VE <<= 1, VF = MSB
$ACA    $968E   UNKNOWN  $968E           ; Unknown 9xxx instruction
$ACC    $C65B   RND      V6, #5B         ; V6 = random & 5B
$ACE    $93DC   UNKNOWN  $93DC           ; Unknown 9xxx instruction
$AD0    $F155   LD       [I], V1         ; Store V0-V1 at I
$AD2    $B322   JP       V0, $322        ; Jump to V0 + 322
$AD4    $C642   RND      V6, #42         ; V6 = random & 42
$AD6    $1388   JP       $388            ; Jump to 388
$AD8    $25D8   CALL     $5D8            ; Call subroutine at 5D8
$ADA    $8803   XOR      V8, V0          ; V8 ^= V0
$ADC    $AFF1   LD       I, $FF1         ; Load FF1 into I
$ADE    $F423   UNKNOWN  F423            ; Unknown Fxxx instruction
$AE0    $D514   DRW      V5, V1, #4      ; Draw 4-byte sprite at V5, V1
$AE2    $FB42   UNKNOWN  FB42            ; Unknown Fxxx instruction
$AE4    $0AFD   SYS      $AFD            ; System call to AFD
$AE6    $7591   ADD      V5, #91         ; Add 145 to V5
$AE8    $C2E3   RND      V2, #E3         ; V2 = random & E3
$AEA    $FD68   UNKNOWN  FD68            ; Unknown Fxxx instruction
$AEC    $286C   CALL     $86C            ; Call subroutine at 86C
$AEE    $C03C   RND      V0, #3C         ; V0 = random & 3C
$AF0    $BA02   JP       V0, $A02        ; Jump to V0 + A02
$AF2    $79FA   ADD      V9, #FA         ; Add 250 to V9
$AF4    $89E6   SHR      V9              ; V9 >>= 1, VF = LSB
$AF6    $2A3B   CALL     $A3B            ; Call subroutine at A3B
$AF8    $B4E7   JP       V0, $4E7        ; Jump to V0 + 4E7
$AFA    $32CC   SE       V2, #CC         ; Skip if V2 == 204
$AFC    $A770   LD       I, $770         ; Load 770 into I
$AFE    $BA77   JP       V0, $A77        ; Jump to V0 + A77
$B00    $013F   SYS      $13F            ; System call to 13F
$B02    $D2CD   DRW      V2, VC, #D      ; Draw 13-byte sprite at V2, VC
$B04    $307E   SE       V0, #7E         ; Skip if V0 == 126
$B06    $8C40   LD       VC, V4          ; VC = V4
$B08    $8D76   SHR      VD              ; VD >>= 1, VF = LSB
$B0A    $D2A7   DRW      V2, VA, #7      ; Draw 7-byte sprite at V2, VA
$B0C    $A7F8   LD       I, $7F8         ; Load 7F8 into I
$B0E    $FCAF   UNKNOWN  FCAF            ; Unknown Fxxx instruction
$B10    $607A   LD       V0, #7A         ; Load 122 into V0
$B12    $5865   UNKNOWN  $5865           ; Unknown 5xxx instruction
$B14    $D81A   DRW      V8, V1, #A      ; Draw 10-byte sprite at V8, V1
$B16    $A0AE   LD       I, $0AE         ; Load 0AE into I
$B18    $0717   SYS      $717            ; System call to 717
$B1A    $C6B7   RND      V6, #B7         ; V6 = random & B7
$B1C    $A868   LD       I, $868         ; Load 868 into I
$B1E    $F073   UNKNOWN  F073            ; Unknown Fxxx instruction
$B20    $1222   JP       $222            ; Jump to 222
$B22    $8E8C   UNKNOWN  8E8C            ; Unknown 8xxx instruction
$B24    $638C   LD       V3, #8C         ; Load 140 into V3
$B26    $4E28   SNE      VE, #28         ; Skip if VE != 40
$B28    $994C   UNKNOWN  $994C           ; Unknown 9xxx instruction
$B2A    $61CE   LD       V1, #CE         ; Load 206 into V1
$B2C    $23D4   CALL     $3D4            ; Call subroutine at 3D4
$B2E    $8706   SHR      V7              ; V7 >>= 1, VF = LSB
$B30    $7A52   ADD      VA, #52         ; Add 82 to VA
$B32    $BA18   JP       V0, $A18        ; Jump to V0 + A18
$B34    $AC2F   LD       I, $C2F         ; Load C2F into I
$B36    $66EF   LD       V6, #EF         ; Load 239 into V6
$B38    $D0A4   DRW      V0, VA, #4      ; Draw 4-byte sprite at V0, VA
$B3A    $E15F   UNKNOWN  $E15F           ; Unknown Exxx instruction
$B3C    $BE29   JP       V0, $E29        ; Jump to V0 + E29
$B3E    $E793   UNKNOWN  $E793           ; Unknown Exxx instruction
$B40    $88F4   ADD      V8, VF          ; V8 += VF, VF = carry
$B42    $BC00   JP       V0, $C00        ; Jump to V0 + C00
$B44    $E480   UNKNOWN  $E480           ; Unknown Exxx instruction
$B46    $B2C2   JP       V0, $2C2        ; Jump to V0 + 2C2
$B48    $9EB8   UNKNOWN  $9EB8           ; Unknown 9xxx instruction
$B4A    $28D5   CALL     $8D5            ; Call subroutine at 8D5
$B4C    $776F   ADD      V7, #6F         ; Add 111 to V7
$B4E    $619C   LD       V1, #9C         ; Load 156 into V1
$B50    $0F29   SYS      $F29            ; System call to F29
$B52    $061F   SYS      $61F            ; System call to 61F
$B54    $F464   UNKNOWN  F464            ; Unknown Fxxx instruction
$B56    $C3CD   RND      V3, #CD         ; V3 = random & CD
$B58    $54DC   UNKNOWN  $54DC           ; Unknown 5xxx instruction
$B5A    $F497   UNKNOWN  F497            ; Unknown Fxxx instruction
$B5C    $BEB3   JP       V0, $EB3        ; Jump to V0 + EB3
$B5E    $ED71   UNKNOWN  $ED71           ; Unknown Exxx instruction
$B60    $4F0B   SNE      VF, #0B         ; Skip if VF != 11
$B62    $A550   LD       I, $550         ; Load 550 into I
$B64    $A1C9   LD       I, $1C9         ; Load 1C9 into I
$B66    $6799   LD       V7, #99         ; Load 153 into V7
$B68    $0530   SYS      $530            ; System call to 530
$B6A    $92CB   UNKNOWN  $92CB           ; Unknown 9xxx instruction
$B6C    $B977   JP       V0, $977        ; Jump to V0 + 977
$B6E    $BB7B   JP       V0, $B7B        ; Jump to V0 + B7B
$B70    $2966   CALL     $966            ; Call subroutine at 966
$B72    $E878   UNKNOWN  $E878           ; Unknown Exxx instruction
$B74    $3184   SE       V1, #84         ; Skip if V1 == 132
$B76    $3930   SE       V9, #30         ; Skip if V9 == 48
$B78    $60FF   LD       V0, #FF         ; Load 255 into V0
$B7A    $3AE6   SE       VA, #E6         ; Skip if VA == 230
$B7C    $5707   UNKNOWN  $5707           ; Unknown 5xxx instruction
$B7E    $E1F1   UNKNOWN  $E1F1           ; Unknown Exxx instruction
$B80    $C055   RND      V0, #55         ; V0 = random & 55
$B82    $D97D   DRW      V9, V7, #D      ; Draw 13-byte sprite at V9, V7
$B84    $4083   SNE      V0, #83         ; Skip if V0 != 131
$B86    $BD53   JP       V0, $D53        ; Jump to V0 + D53
$B88    $FFED   UNKNOWN  FFED            ; Unknown Fxxx instruction
$B8A    $BDC3   JP       V0, $DC3        ; Jump to V0 + DC3
$B8C    $D0A0   DRW      V0, VA, #0      ; Draw 0-byte sprite at V0, VA
$B8E    $ECA6   UNKNOWN  $ECA6           ; Unknown Exxx instruction
$B90    $C406   RND      V4, #06         ; V4 = random & 06
$B92    $18FB   JP       $8FB            ; Jump to 8FB
$B94    $9220   SNE      V2, V2          ; Skip if V2 != V2
$B96    $56F0   SE       V6, VF          ; Skip if V6 == VF
$B98    $C2BB   RND      V2, #BB         ; V2 = random & BB
$B9A    $77E7   ADD      V7, #E7         ; Add 231 to V7
$B9C    $9778   UNKNOWN  $9778           ; Unknown 9xxx instruction
$B9E    $63D5   LD       V3, #D5         ; Load 213 into V3
$BA0    $817F   UNKNOWN  817F            ; Unknown 8xxx instruction
$BA2    $B8C1   JP       V0, $8C1        ; Jump to V0 + 8C1
$BA4    $1C6A   JP       $C6A            ; Jump to C6A
$BA6    $CBC3   RND      VB, #C3         ; VB = random & C3
$BA8    $4FA6   SNE      VF, #A6         ; Skip if VF != 166
$BAA    $00D9   SYS      $0D9            ; System call to 0D9
$BAC    $D654   DRW      V6, V5, #4      ; Draw 4-byte sprite at V6, V5
$BAE    $2A80   CALL     $A80            ; Call subroutine at A80
$BB0    $DF5C   DRW      VF, V5, #C      ; Draw 12-byte sprite at VF, V5
$BB2    $85A1   OR       V5, VA          ; V5 |= VA
$BB4    $65ED   LD       V5, #ED         ; Load 237 into V5
$BB6    $2DE2   CALL     $DE2            ; Call subroutine at DE2
$BB8    $5E7F   UNKNOWN  $5E7F           ; Unknown 5xxx instruction
$BBA    $A43F   LD       I, $43F         ; Load 43F into I
$BBC    $B318   JP       V0, $318        ; Jump to V0 + 318
$BBE    $BA9A   JP       V0, $A9A        ; Jump to V0 + A9A
$BC0    $71AB   ADD      V1, #AB         ; Add 171 to V1
$BC2    $ECE4   UNKNOWN  $ECE4           ; Unknown Exxx instruction
$BC4    $9719   UNKNOWN  $9719           ; Unknown 9xxx instruction
$BC6    $02ED   SYS      $2ED            ; System call to 2ED
$BC8    $B09A   JP       V0, $09A        ; Jump to V0 + 09A
$BCA    $AE94   LD       I, $E94         ; Load E94 into I
$BCC    $3AE4   SE       VA, #E4         ; Skip if VA == 228
$BCE    $FACC   UNKNOWN  FACC            ; Unknown Fxxx instruction
$BD0    $B326   JP       V0, $326        ; Jump to V0 + 326
$BD2    $E6FE   UNKNOWN  $E6FE           ; Unknown Exxx instruction
$BD4    $97D9   UNKNOWN  $97D9           ; Unknown 9xxx instruction
$BD6    $0FE8   SYS      $FE8            ; System call to FE8
$BD8    $2667   CALL     $667            ; Call subroutine at 667
$BDA    $5F29   UNKNOWN  $5F29           ; Unknown 5xxx instruction
$BDC    $2BF6   CALL     $BF6            ; Call subroutine at BF6
$BDE    $9DFC   UNKNOWN  $9DFC           ; Unknown 9xxx instruction
$BE0    $9B6E   UNKNOWN  $9B6E           ; Unknown 9xxx instruction
$BE2    $7D3A   ADD      VD, #3A         ; Add 58 to VD
$BE4    $2D3D   CALL     $D3D            ; Call subroutine at D3D
$BE6    $BBCB   JP       V0, $BCB        ; Jump to V0 + BCB
$BE8    $C81D   RND      V8, #1D         ; V8 = random & 1D
$BEA    $19A3   JP       $9A3            ; Jump to 9A3
$BEC    $E384   UNKNOWN  $E384           ; Unknown Exxx instruction
$BEE    $5B85   UNKNOWN  $5B85           ; Unknown 5xxx instruction
$BF0    $AB9F   LD       I, $B9F         ; Load B9F into I
$BF2    $7B95   ADD      VB, #95         ; Add 149 to VB
$BF4    $13EE   JP       $3EE            ; Jump to 3EE
$BF6    $1C35   JP       $C35            ; Jump to C35
$BF8    $BC6F   JP       V0, $C6F        ; Jump to V0 + C6F
$BFA    $B368   JP       V0, $368        ; Jump to V0 + 368
$BFC    $D5CD   DRW      V5, VC, #D      ; Draw 13-byte sprite at V5, VC
$BFE    $B013   JP       V0, $013        ; Jump to V0 + 013
$C00    $8CE7   SUBN     VC, VE          ; VC = VE - VC, VF = !borrow
$C02    $5853   UNKNOWN  $5853           ; Unknown 5xxx instruction
$C04    $92B0   SNE      V2, VB          ; Skip if V2 != VB
$C06    $1464   JP       $464            ; Jump to 464
$C08    $08F7   SYS      $8F7            ; System call to 8F7
$C0A    $3B95   SE       VB, #95         ; Skip if VB == 149
$C0C    $8536   SHR      V5              ; V5 >>= 1, VF = LSB
$C0E    $C886   RND      V8, #86         ; V8 = random & 86
$C10    $59A8   UNKNOWN  $59A8           ; Unknown 5xxx instruction
$C12    $7788   ADD      V7, #88         ; Add 136 to V7
$C14    $EA26   UNKNOWN  $EA26           ; Unknown Exxx instruction
$C16    $E665   UNKNOWN  $E665           ; Unknown Exxx instruction
$C18    $FC73   UNKNOWN  FC73            ; Unknown Fxxx instruction
$C1A    $BCFF   JP       V0, $CFF        ; Jump to V0 + CFF
$C1C    $D428   DRW      V4, V2, #8      ; Draw 8-byte sprite at V4, V2
$C1E    $C462   RND      V4, #62         ; V4 = random & 62
$C20    $52BA   UNKNOWN  $52BA           ; Unknown 5xxx instruction
$C22    $EEBD   UNKNOWN  $EEBD           ; Unknown Exxx instruction
$C24    $3D5C   SE       VD, #5C         ; Skip if VD == 92
$C26    $6B78   LD       VB, #78         ; Load 120 into VB
$C28    $0BFB   SYS      $BFB            ; System call to BFB
$C2A    $7A7F   ADD      VA, #7F         ; Add 127 to VA
$C2C    $6197   LD       V1, #97         ; Load 151 into V1
$C2E    $EE3F   UNKNOWN  $EE3F           ; Unknown Exxx instruction
$C30    $CC33   RND      VC, #33         ; VC = random & 33
$C32    $5E98   UNKNOWN  $5E98           ; Unknown 5xxx instruction
$C34    $9935   UNKNOWN  $9935           ; Unknown 9xxx instruction
$C36    $D6FD   DRW      V6, VF, #D      ; Draw 13-byte sprite at V6, VF
$C38    $4C5A   SNE      VC, #5A         ; Skip if VC != 90
$C3A    $4117   SNE      V1, #17         ; Skip if V1 != 23
$C3C    $BF90   JP       V0, $F90        ; Jump to V0 + F90
$C3E    $D3A1   DRW      V3, VA, #1      ; Draw 1-byte sprite at V3, VA
$C40    $C7C6   RND      V7, #C6         ; V7 = random & C6
$C42    $DAE3   DRW      VA, VE, #3      ; Draw 3-byte sprite at VA, VE
$C44    $92E9   UNKNOWN  $92E9           ; Unknown 9xxx instruction
$C46    $6158   LD       V1, #58         ; Load 88 into V1
$C48    $5D67   UNKNOWN  $5D67           ; Unknown 5xxx instruction
$C4A    $4D60   SNE      VD, #60         ; Skip if VD != 96
$C4C    $48FA   SNE      V8, #FA         ; Skip if V8 != 250
$C4E    $C634   RND      V6, #34         ; V6 = random & 34
$C50    $9D42   UNKNOWN  $9D42           ; Unknown 9xxx instruction
$C52    $78F9   ADD      V8, #F9         ; Add 249 to V8
$C54    $C3C6   RND      V3, #C6         ; V3 = random & C6
$C56    $7564   ADD      V5, #64         ; Add 100 to V5
$C58    $C825   RND      V8, #25         ; V8 = random & 25
$C5A    $813D   UNKNOWN  813D            ; Unknown 8xxx instruction
$C5C    $ECBF   UNKNOWN  $ECBF           ; Unknown Exxx instruction
$C5E    $016E   SYS      $16E            ; System call to 16E
$C60    $5C83   UNKNOWN  $5C83           ; Unknown 5xxx instruction
$C62    $2E2F   CALL     $E2F            ; Call subroutine at E2F
$C64    $103F   JP       $03F            ; Jump to 03F
$C66    $171D   JP       $71D            ; Jump to 71D
$C68    $37CF   SE       V7, #CF         ; Skip if V7 == 207
$C6A    $FF10   UNKNOWN  FF10            ; Unknown Fxxx instruction
$C6C    $90AE   UNKNOWN  $90AE           ; Unknown 9xxx instruction
$C6E    $FA4E   UNKNOWN  FA4E            ; Unknown Fxxx instruction
$C70    $3879   SE       V8, #79         ; Skip if V8 == 121
$C72    $42C7   SNE      V2, #C7         ; Skip if V2 != 199
$C74    $850F   UNKNOWN  850F            ; Unknown 8xxx instruction
$C76    $6995   LD       V9, #95         ; Load 149 into V9
$C78    $5DDE   UNKNOWN  $5DDE           ; Unknown 5xxx instruction
$C7A    $3630   SE       V6, #30         ; Skip if V6 == 48
$C7C    $0E65   SYS      $E65            ; System call to E65
$C7E    $058D   SYS      $58D            ; System call to 58D
$C80    $A49F   LD       I, $49F         ; Load 49F into I
$C82    $4254   SNE      V2, #54         ; Skip if V2 != 84
$C84    $D85D   DRW      V8, V5, #D      ; Draw 13-byte sprite at V8, V5
$C86    $BE57   JP       V0, $E57        ; Jump to V0 + E57
$C88    $F510   UNKNOWN  F510            ; Unknown Fxxx instruction
$C8A    $46AE   SNE      V6, #AE         ; Skip if V6 != 174
$C8C    $538A   UNKNOWN  $538A           ; Unknown 5xxx instruction
$C8E    $A599   LD       I, $599         ; Load 599 into I
$C90    $B576   JP       V0, $576        ; Jump to V0 + 576
$C92    $11E4   JP       $1E4            ; Jump to 1E4
$C94    $34CB   SE       V4, #CB         ; Skip if V4 == 203
$C96    $A9C8   LD       I, $9C8         ; Load 9C8 into I
$C98    $3AC1   SE       VA, #C1         ; Skip if VA == 193
$C9A    $4AC0   SNE      VA, #C0         ; Skip if VA != 192
$C9C    $5C5A   UNKNOWN  $5C5A           ; Unknown 5xxx instruction
$C9E    $422C   SNE      V2, #2C         ; Skip if V2 != 44
$CA0    $DCBA   DRW      VC, VB, #A      ; Draw 10-byte sprite at VC, VB
$CA2    $4EC2   SNE      VE, #C2         ; Skip if VE != 194
$CA4    $894B   UNKNOWN  894B            ; Unknown 8xxx instruction
$CA6    $D8D9   DRW      V8, VD, #9      ; Draw 9-byte sprite at V8, VD
$CA8    $DB53   DRW      VB, V5, #3      ; Draw 3-byte sprite at VB, V5
$CAA    $831C   UNKNOWN  831C            ; Unknown 8xxx instruction
$CAC    $3DE2   SE       VD, #E2         ; Skip if VD == 226
$CAE    $66B5   LD       V6, #B5         ; Load 181 into V6
$CB0    $D529   DRW      V5, V2, #9      ; Draw 9-byte sprite at V5, V2
$CB2    $FADF   UNKNOWN  FADF            ; Unknown Fxxx instruction
$CB4    $0CA3   SYS      $CA3            ; System call to CA3
$CB6    $A11F   LD       I, $11F         ; Load 11F into I
$CB8    $4E58   SNE      VE, #58         ; Skip if VE != 88
$CBA    $17DD   JP       $7DD            ; Jump to 7DD
$CBC    $76C0   ADD      V6, #C0         ; Add 192 to V6
$CBE    $B6A2   JP       V0, $6A2        ; Jump to V0 + 6A2
$CC0    $9130   SNE      V1, V3          ; Skip if V1 != V3
$CC2    $828D   UNKNOWN  828D            ; Unknown 8xxx instruction
$CC4    $BC96   JP       V0, $C96        ; Jump to V0 + C96
$CC6    $18FD   JP       $8FD            ; Jump to 8FD
$CC8    $6AC6   LD       VA, #C6         ; Load 198 into VA
$CCA    $84CB   UNKNOWN  84CB            ; Unknown 8xxx instruction
$CCC    $6B09   LD       VB, #09         ; Load 9 into VB
$CCE    $CC45   RND      VC, #45         ; VC = random & 45
$CD0    $E777   UNKNOWN  $E777           ; Unknown Exxx instruction
$CD2    $8165   SUB      V1, V6          ; V1 -= V6, VF = !borrow
$CD4    $7182   ADD      V1, #82         ; Add 130 to V1
$CD6    $80AD   UNKNOWN  80AD            ; Unknown 8xxx instruction
$CD8    $5BB8   UNKNOWN  $5BB8           ; Unknown 5xxx instruction
$CDA    $3595   SE       V5, #95         ; Skip if V5 == 149
$CDC    $2FE9   CALL     $FE9            ; Call subroutine at FE9
$CDE    $3742   SE       V7, #42         ; Skip if V7 == 66
$CE0    $E1A4   UNKNOWN  $E1A4           ; Unknown Exxx instruction
$CE2    $C0A4   RND      V0, #A4         ; V0 = random & A4
$CE4    $EBDB   UNKNOWN  $EBDB           ; Unknown Exxx instruction
$CE6    $C2E7   RND      V2, #E7         ; V2 = random & E7
$CE8    $424C   SNE      V2, #4C         ; Skip if V2 != 76
$CEA    $4269   SNE      V2, #69         ; Skip if V2 != 105
$CEC    $4E5C   SNE      VE, #5C         ; Skip if VE != 92
$CEE    $4425   SNE      V4, #25         ; Skip if V4 != 37
$CF0    $E1E5   UNKNOWN  $E1E5           ; Unknown Exxx instruction
$CF2    $59AA   UNKNOWN  $59AA           ; Unknown 5xxx instruction
$CF4    $C4A4   RND      V4, #A4         ; V4 = random & A4
$CF6    $C069   RND      V0, #69         ; V0 = random & 69
$CF8    $3BA2   SE       VB, #A2         ; Skip if VB == 162
$CFA    $28C2   CALL     $8C2            ; Call subroutine at 8C2
$CFC    $2E32   CALL     $E32            ; Call subroutine at E32
$CFE    $69A0   LD       V9, #A0         ; Load 160 into V9
$D00    $AE8E   LD       I, $E8E         ; Load E8E into I
$D02    $96A2   UNKNOWN  $96A2           ; Unknown 9xxx instruction
$D04    $9A24   UNKNOWN  $9A24           ; Unknown 9xxx instruction
$D06    $8079   UNKNOWN  8079            ; Unknown 8xxx instruction
$D08    $4B29   SNE      VB, #29         ; Skip if VB != 41
$D0A    $1B7E   JP       $B7E            ; Jump to B7E
$D0C    $34F5   SE       V4, #F5         ; Skip if V4 == 245
$D0E    $5054   UNKNOWN  $5054           ; Unknown 5xxx instruction
$D10    $1402   JP       $402            ; Jump to 402
$D12    $9350   SNE      V3, V5          ; Skip if V3 != V5
$D14    $7143   ADD      V1, #43         ; Add 67 to V1
$D16    $3D1C   SE       VD, #1C         ; Skip if VD == 28
$D18    $EA17   UNKNOWN  $EA17           ; Unknown Exxx instruction
$D1A    $0ACF   SYS      $ACF            ; System call to ACF
$D1C    $4CFB   SNE      VC, #FB         ; Skip if VC != 251
$D1E    $5293   UNKNOWN  $5293           ; Unknown 5xxx instruction
$D20    $CBEB   RND      VB, #EB         ; VB = random & EB
$D22    $8D12   AND      VD, V1          ; VD &= V1
$D24    $E365   UNKNOWN  $E365           ; Unknown Exxx instruction
$D26    $B355   JP       V0, $355        ; Jump to V0 + 355
$D28    $C04E   RND      V0, #4E         ; V0 = random & 4E
$D2A    $BE40   JP       V0, $E40        ; Jump to V0 + E40
$D2C    $097B   SYS      $97B            ; System call to 97B
$D2E    $875D   UNKNOWN  875D            ; Unknown 8xxx instruction
$D30    $2317   CALL     $317            ; Call subroutine at 317
$D32    $ADAE   LD       I, $DAE         ; Load DAE into I
$D34    $103E   JP       $03E            ; Jump to 03E
$D36    $FFF1   UNKNOWN  FFF1            ; Unknown Fxxx instruction
$D38    $8578   UNKNOWN  8578            ; Unknown 8xxx instruction
$D3A    $5847   UNKNOWN  $5847           ; Unknown 5xxx instruction
$D3C    $7700   ADD      V7, #00         ; Add 0 to V7
$D3E    $3E3D   SE       VE, #3D         ; Skip if VE == 61
$D40    $D8A3   DRW      V8, VA, #3      ; Draw 3-byte sprite at V8, VA
$D42    $BA35   JP       V0, $A35        ; Jump to V0 + A35
$D44    $7ED6   ADD      VE, #D6         ; Add 214 to VE
$D46    $FBF5   UNKNOWN  FBF5            ; Unknown Fxxx instruction
$D48    $8BCF   UNKNOWN  8BCF            ; Unknown 8xxx instruction
$D4A    $02BE   SYS      $2BE            ; System call to 2BE
$D4C    $A518   LD       I, $518         ; Load 518 into I
$D4E    $43D0   SNE      V3, #D0         ; Skip if V3 != 208
$D50    $0DF6   SYS      $DF6            ; System call to DF6
$D52    $CE24   RND      VE, #24         ; VE = random & 24
$D54    $C848   RND      V8, #48         ; V8 = random & 48
$D56    $D310   DRW      V3, V1, #0      ; Draw 0-byte sprite at V3, V1
$D58    $BA1C   JP       V0, $A1C        ; Jump to V0 + A1C
$D5A    $C6E5   RND      V6, #E5         ; V6 = random & E5
$D5C    $4897   SNE      V8, #97         ; Skip if V8 != 151
$D5E    $D5CC   DRW      V5, VC, #C      ; Draw 12-byte sprite at V5, VC
$D60    $8882   AND      V8, V8          ; V8 &= V8
$D62    $A104   LD       I, $104         ; Load 104 into I
$D64    $ACEF   LD       I, $CEF         ; Load CEF into I
$D66    $775C   ADD      V7, #5C         ; Add 92 to V7
$D68    $2FD9   CALL     $FD9            ; Call subroutine at FD9
$D6A    $77CB   ADD      V7, #CB         ; Add 203 to V7
$D6C    $5561   UNKNOWN  $5561           ; Unknown 5xxx instruction
$D6E    $D7D8   DRW      V7, VD, #8      ; Draw 8-byte sprite at V7, VD
$D70    $CF3A   RND      VF, #3A         ; VF = random & 3A
$D72    $3BDA   SE       VB, #DA         ; Skip if VB == 218
$D74    $1762   JP       $762            ; Jump to 762
$D76    $56C1   UNKNOWN  $56C1           ; Unknown 5xxx instruction
$D78    $DC7C   DRW      VC, V7, #C      ; Draw 12-byte sprite at VC, V7
$D7A    $0157   SYS      $157            ; System call to 157
$D7C    $71EF   ADD      V1, #EF         ; Add 239 to V1
$D7E    $C44B   RND      V4, #4B         ; V4 = random & 4B
$D80    $7752   ADD      V7, #52         ; Add 82 to V7
$D82    $A037   LD       I, $037         ; Load 037 into I
$D84    $4B45   SNE      VB, #45         ; Skip if VB != 69
$D86    $F2EE   UNKNOWN  F2EE            ; Unknown Fxxx instruction
$D88    $F6B5   UNKNOWN  F6B5            ; Unknown Fxxx instruction
$D8A    $0BDF   SYS      $BDF            ; System call to BDF
$D8C    $B858   JP       V0, $858        ; Jump to V0 + 858
$D8E    $9AC3   UNKNOWN  $9AC3           ; Unknown 9xxx instruction
$D90    $5BE0   SE       VB, VE          ; Skip if VB == VE
$D92    $8D10   LD       VD, V1          ; VD = V1
$D94    $4346   SNE      V3, #46         ; Skip if V3 != 70
$D96    $007D   SYS      $07D            ; System call to 07D
$D98    $CB40   RND      VB, #40         ; VB = random & 40
$D9A    $2A7D   CALL     $A7D            ; Call subroutine at A7D
$D9C    $BC66   JP       V0, $C66        ; Jump to V0 + C66
$D9E    $C8AB   RND      V8, #AB         ; V8 = random & AB
$DA0    $1504   JP       $504            ; Jump to 504
$DA2    $BE1E   JP       V0, $E1E        ; Jump to V0 + E1E
$DA4    $C3B9   RND      V3, #B9         ; V3 = random & B9
$DA6    $553A   UNKNOWN  $553A           ; Unknown 5xxx instruction
$DA8    $8974   ADD      V9, V7          ; V9 += V7, VF = carry
$DAA    $B4FA   JP       V0, $4FA        ; Jump to V0 + 4FA
$DAC    $2FCE   CALL     $FCE            ; Call subroutine at FCE
$DAE    $E0BC   UNKNOWN  $E0BC           ; Unknown Exxx instruction
$DB0    $4440   SNE      V4, #40         ; Skip if V4 != 64
$DB2    $5733   UNKNOWN  $5733           ; Unknown 5xxx instruction
$DB4    $A4CB   LD       I, $4CB         ; Load 4CB into I
$DB6    $8E6E   SHL      VE              ; VE <<= 1, VF = MSB
$DB8    $E412   UNKNOWN  $E412           ; Unknown Exxx instruction
$DBA    $731A   ADD      V3, #1A         ; Add 26 to V3
$DBC    $F3C5   UNKNOWN  F3C5            ; Unknown Fxxx instruction
$DBE    $9833   UNKNOWN  $9833           ; Unknown 9xxx instruction
$DC0    $C6DE   RND      V6, #DE         ; V6 = random & DE
$DC2    $8678   UNKNOWN  8678            ; Unknown 8xxx instruction
$DC4    $06B7   SYS      $6B7            ; System call to 6B7
$DC6    $BC98   JP       V0, $C98        ; Jump to V0 + C98
$DC8    $1A30   JP       $A30            ; Jump to A30
$DCA    $CCED   RND      VC, #ED         ; VC = random & ED
$DCC    $B167   JP       V0, $167        ; Jump to V0 + 167
$DCE    $832A   UNKNOWN  832A            ; Unknown 8xxx instruction
$DD0    $C2F8   RND      V2, #F8         ; V2 = random & F8
$DD2    $1E3E   JP       $E3E            ; Jump to E3E
$DD4    $D900   DRW      V9, V0, #0      ; Draw 0-byte sprite at V9, V0
$DD6    $D150   DRW      V1, V5, #0      ; Draw 0-byte sprite at V1, V5
$DD8    $34F1   SE       V4, #F1         ; Skip if V4 == 241
$DDA    $CD03   RND      VD, #03         ; VD = random & 03
$DDC    $B3B9   JP       V0, $3B9        ; Jump to V0 + 3B9
$DDE    $1EA0   JP       $EA0            ; Jump to EA0
$DE0    $F675   UNKNOWN  F675            ; Unknown Fxxx instruction
$DE2    $3B04   SE       VB, #04         ; Skip if VB == 4
$DE4    $200A   CALL     $00A            ; Call subroutine at 00A
$DE6    $57D7   UNKNOWN  $57D7           ; Unknown 5xxx instruction
$DE8    $4CD7   SNE      VC, #D7         ; Skip if VC != 215
$DEA    $503F   UNKNOWN  $503F           ; Unknown 5xxx instruction
$DEC    $47A5   SNE      V7, #A5         ; Skip if V7 != 165
$DEE    $B830   JP       V0, $830        ; Jump to V0 + 830
$DF0    $9B31   UNKNOWN  $9B31           ; Unknown 9xxx instruction
$DF2    $71DF   ADD      V1, #DF         ; Add 223 to V1
$DF4    $87EB   UNKNOWN  87EB            ; Unknown 8xxx instruction
$DF6    $E602   UNKNOWN  $E602           ; Unknown Exxx instruction
$DF8    $2626   CALL     $626            ; Call subroutine at 626
$DFA    $7554   ADD      V5, #54         ; Add 84 to V5
$DFC    $69A0   LD       V9, #A0         ; Load 160 into V9
$DFE    $6D78   LD       VD, #78         ; Load 120 into VD
$E00    $9065   UNKNOWN  $9065           ; Unknown 9xxx instruction
$E02    $C3DD   RND      V3, #DD         ; V3 = random & DD
$E04    $62F8   LD       V2, #F8         ; Load 248 into V2
$E06    $944F   UNKNOWN  $944F           ; Unknown 9xxx instruction
$E08    $2234   CALL     $234            ; Call subroutine at 234
$E0A    $8128   UNKNOWN  8128            ; Unknown 8xxx instruction
$E0C    $F1CF   UNKNOWN  F1CF            ; Unknown Fxxx instruction
$E0E    $8317   SUBN     V3, V1          ; V3 = V1 - V3, VF = !borrow
$E10    $9925   UNKNOWN  $9925           ; Unknown 9xxx instruction
$E12    $32F6   SE       V2, #F6         ; Skip if V2 == 246
$E14    $05AF   SYS      $5AF            ; System call to 5AF
$E16    $5E65   UNKNOWN  $5E65           ; Unknown 5xxx instruction
$E18    $7834   ADD      V8, #34         ; Add 52 to V8
$E1A    $B7AF   JP       V0, $7AF        ; Jump to V0 + 7AF
$E1C    $5D74   UNKNOWN  $5D74           ; Unknown 5xxx instruction
$E1E    $B1BD   JP       V0, $1BD        ; Jump to V0 + 1BD
$E20    $6F38   LD       VF, #38         ; Load 56 into VF
$E22    $AE11   LD       I, $E11         ; Load E11 into I
$E24    $ABCA   LD       I, $BCA         ; Load BCA into I
$E26    $B9B9   JP       V0, $9B9        ; Jump to V0 + 9B9
$E28    $39D1   SE       V9, #D1         ; Skip if V9 == 209
$E2A    $7E5A   ADD      VE, #5A         ; Add 90 to VE
$E2C    $DFDA   DRW      VF, VD, #A      ; Draw 10-byte sprite at VF, VD
$E2E    $7E7E   ADD      VE, #7E         ; Add 126 to VE
$E30    $F115   LD       DT, V1          ; Delay timer = V1
$E32    $A3BD   LD       I, $3BD         ; Load 3BD into I
$E34    $1BF9   JP       $BF9            ; Jump to BF9
$E36    $2B5C   CALL     $B5C            ; Call subroutine at B5C
$E38    $FCD0   UNKNOWN  FCD0            ; Unknown Fxxx instruction
$E3A    $62B3   LD       V2, #B3         ; Load 179 into V2
$E3C    $D604   DRW      V6, V0, #4      ; Draw 4-byte sprite at V6, V0
$E3E    $2235   CALL     $235            ; Call subroutine at 235
$E40    $305D   SE       V0, #5D         ; Skip if V0 == 93
$E42    $97CA   UNKNOWN  $97CA           ; Unknown 9xxx instruction
$E44    $2E18   CALL     $E18            ; Call subroutine at E18
$E46    $6A10   LD       VA, #10         ; Load 16 into VA
$E48    $3679   SE       V6, #79         ; Skip if V6 == 121
$E4A    $4941   SNE      V9, #41         ; Skip if V9 != 65
$E4C    $1D03   JP       $D03            ; Jump to D03
$E4E    $5C19   UNKNOWN  $5C19           ; Unknown 5xxx instruction
$E50    $E232   UNKNOWN  $E232           ; Unknown Exxx instruction
$E52    $BA44   JP       V0, $A44        ; Jump to V0 + A44
$E54    $7BF8   ADD      VB, #F8         ; Add 248 to VB
$E56    $B148   JP       V0, $148        ; Jump to V0 + 148
$E58    $852F   UNKNOWN  852F            ; Unknown 8xxx instruction
$E5A    $FAFA   UNKNOWN  FAFA            ; Unknown Fxxx instruction
$E5C    $DC68   DRW      VC, V6, #8      ; Draw 8-byte sprite at VC, V6
$E5E    $0063   SYS      $063            ; System call to 063
$E60    $E22D   UNKNOWN  $E22D           ; Unknown Exxx instruction
$E62    $5217   UNKNOWN  $5217           ; Unknown 5xxx instruction
$E64    $3857   SE       V8, #57         ; Skip if V8 == 87
$E66    $22C3   CALL     $2C3            ; Call subroutine at 2C3
$E68    $7298   ADD      V2, #98         ; Add 152 to V2
$E6A    $B9EF   JP       V0, $9EF        ; Jump to V0 + 9EF
$E6C    $7598   ADD      V5, #98         ; Add 152 to V5
$E6E    $1BDE   JP       $BDE            ; Jump to BDE
$E70    $F4BC   UNKNOWN  F4BC            ; Unknown Fxxx instruction
$E72    $208E   CALL     $08E            ; Call subroutine at 08E
$E74    $F177   UNKNOWN  F177            ; Unknown Fxxx instruction
$E76    $A6CD   LD       I, $6CD         ; Load 6CD into I
$E78    $CB55   RND      VB, #55         ; VB = random & 55
$E7A    $BFEE   JP       V0, $FEE        ; Jump to V0 + FEE
$E7C    $AE2D   LD       I, $E2D         ; Load E2D into I
$E7E    $30DB   SE       V0, #DB         ; Skip if V0 == 219
$E80    $3F8C   SE       VF, #8C         ; Skip if VF == 140
$E82    $9A1B   UNKNOWN  $9A1B           ; Unknown 9xxx instruction
$E84    $8DD4   ADD      VD, VD          ; VD += VD, VF = carry
$E86    $CE10   RND      VE, #10         ; VE = random & 10
$E88    $0DA6   SYS      $DA6            ; System call to DA6
$E8A    $0C8D   SYS      $C8D            ; System call to C8D
$E8C    $5E98   UNKNOWN  $5E98           ; Unknown 5xxx instruction
$E8E    $C488   RND      V4, #88         ; V4 = random & 88
$E90    $CDD5   RND      VD, #D5         ; VD = random & D5
$E92    $044C   SYS      $44C            ; System call to 44C
$E94    $5615   UNKNOWN  $5615           ; Unknown 5xxx instruction
$E96    $741E   ADD      V4, #1E         ; Add 30 to V4
$E98    $6C03   LD       VC, #03         ; Load 3 into VC
$E9A    $CAF1   RND      VA, #F1         ; VA = random & F1
$E9C    $4045   SNE      V0, #45         ; Skip if V0 != 69
$E9E    $C3F0   RND      V3, #F0         ; V3 = random & F0
$EA0    $5A7A   UNKNOWN  $5A7A           ; Unknown 5xxx instruction
$EA2    $F055   LD       [I], V0         ; Store V0-V0 at I
$EA4    $8D61   OR       VD, V6          ; VD |= V6
$EA6    $D85E   DRW      V8, V5, #E      ; Draw 14-byte sprite at V8, V5
$EA8    $C91C   RND      V9, #1C         ; V9 = random & 1C
$EAA    $FFAB   UNKNOWN  FFAB            ; Unknown Fxxx instruction
$EAC    $7D79   ADD      VD, #79         ; Add 121 to VD
$EAE    $5F16   UNKNOWN  $5F16           ; Unknown 5xxx instruction
$EB0    $2905   CALL     $905            ; Call subroutine at 905
$EB2    $5441   UNKNOWN  $5441           ; Unknown 5xxx instruction
$EB4    $DCE4   DRW      VC, VE, #4      ; Draw 4-byte sprite at VC, VE
$EB6    $10C7   JP       $0C7            ; Jump to 0C7
$EB8    $1A22   JP       $A22            ; Jump to A22
$EBA    $7DE3   ADD      VD, #E3         ; Add 227 to VD
$EBC    $B951   JP       V0, $951        ; Jump to V0 + 951
$EBE    $A15B   LD       I, $15B         ; Load 15B into I
$EC0    $F63C   UNKNOWN  F63C            ; Unknown Fxxx instruction
$EC2    $E5FF   UNKNOWN  $E5FF           ; Unknown Exxx instruction
$EC4    $1C23   JP       $C23            ; Jump to C23
$EC6    $1017   JP       $017            ; Jump to 017
$EC8    $9F2A   UNKNOWN  $9F2A           ; Unknown 9xxx instruction
$ECA    $7DE0   ADD      VD, #E0         ; Add 224 to VD
$ECC    $C3A1   RND      V3, #A1         ; V3 = random & A1
$ECE    $A7CB   LD       I, $7CB         ; Load 7CB into I
$ED0    $F9A0   UNKNOWN  F9A0            ; Unknown Fxxx instruction
$ED2    $39D4   SE       V9, #D4         ; Skip if V9 == 212
$ED4    $1C8B   JP       $C8B            ; Jump to C8B
$ED6    $89C5   SUB      V9, VC          ; V9 -= VC, VF = !borrow
$ED8    $9871   UNKNOWN  $9871           ; Unknown 9xxx instruction
$EDA    $B505   JP       V0, $505        ; Jump to V0 + 505
$EDC    $7B91   ADD      VB, #91         ; Add 145 to VB
$EDE    $67CF   LD       V7, #CF         ; Load 207 into V7
$EE0    $DE81   DRW      VE, V8, #1      ; Draw 1-byte sprite at VE, V8
$EE2    $BD31   JP       V0, $D31        ; Jump to V0 + D31
$EE4    $9D4E   UNKNOWN  $9D4E           ; Unknown 9xxx instruction
$EE6    $E0B3   UNKNOWN  $E0B3           ; Unknown Exxx instruction
$EE8    $8EE9   UNKNOWN  8EE9            ; Unknown 8xxx instruction
$EEA    $8048   UNKNOWN  8048            ; Unknown 8xxx instruction
$EEC    $5B70   SE       VB, V7          ; Skip if VB == V7
$EEE    $D4A3   DRW      V4, VA, #3      ; Draw 3-byte sprite at V4, VA
$EF0    $02B7   SYS      $2B7            ; System call to 2B7
$EF2    $F668   UNKNOWN  F668            ; Unknown Fxxx instruction
$EF4    $5AC5   UNKNOWN  $5AC5           ; Unknown 5xxx instruction
$EF6    $5101   UNKNOWN  $5101           ; Unknown 5xxx instruction
$EF8    $7BD6   ADD      VB, #D6         ; Add 214 to VB
$EFA    $A199   LD       I, $199         ; Load 199 into I
$EFC    $A301   LD       I, $301         ; Load 301 into I
$EFE    $3AA2   SE       VA, #A2         ; Skip if VA == 162
$F00    $E317   UNKNOWN  $E317           ; Unknown Exxx instruction
$F02    $BA0B   JP       V0, $A0B        ; Jump to V0 + A0B
$F04    $21FD   CALL     $1FD            ; Call subroutine at 1FD
$F06    $E644   UNKNOWN  $E644           ; Unknown Exxx instruction
$F08    $B6F2   JP       V0, $6F2        ; Jump to V0 + 6F2
$F0A    $EF10   UNKNOWN  $EF10           ; Unknown Exxx instruction
$F0C    $466D   SNE      V6, #6D         ; Skip if V6 != 109
$F0E    $1115   JP       $115            ; Jump to 115
$F10    $F310   UNKNOWN  F310            ; Unknown Fxxx instruction
$F12    $E5CC   UNKNOWN  $E5CC           ; Unknown Exxx instruction
$F14    $01FA   SYS      $1FA            ; System call to 1FA
$F16    $CCBB   RND      VC, #BB         ; VC = random & BB
$F18    $E13D   UNKNOWN  $E13D           ; Unknown Exxx instruction
$F1A    $9793   UNKNOWN  $9793           ; Unknown 9xxx instruction
$F1C    $934B   UNKNOWN  $934B           ; Unknown 9xxx instruction
$F1E    $3149   SE       V1, #49         ; Skip if V1 == 73
$F20    $39EA   SE       V9, #EA         ; Skip if V9 == 234
$F22    $898A   UNKNOWN  898A            ; Unknown 8xxx instruction
$F24    $1510   JP       $510            ; Jump to 510
$F26    $3EEF   SE       VE, #EF         ; Skip if VE == 239
$F28    $AE2F   LD       I, $E2F         ; Load E2F into I
$F2A    $C73C   RND      V7, #3C         ; V7 = random & 3C
$F2C    $58EA   UNKNOWN  $58EA           ; Unknown 5xxx instruction
$F2E    $C57C   RND      V5, #7C         ; V5 = random & 7C
$F30    $1FFA   JP       $FFA            ; Jump to FFA
$F32    $6E3B   LD       VE, #3B         ; Load 59 into VE
$F34    $82C6   SHR      V2              ; V2 >>= 1, VF = LSB
$F36    $0DE5   SYS      $DE5            ; System call to DE5
$F38    $7B41   ADD      VB, #41         ; Add 65 to VB
$F3A    $E1C9   UNKNOWN  $E1C9           ; Unknown Exxx instruction
$F3C    $16CD   JP       $6CD            ; Jump to 6CD
$F3E    $0AFB   SYS      $AFB            ; System call to AFB
$F40    $578B   UNKNOWN  $578B           ; Unknown 5xxx instruction
$F42    $3119   SE       V1, #19         ; Skip if V1 == 25
$F44    $A3B7   LD       I, $3B7         ; Load 3B7 into I
$F46    $6845   LD       V8, #45         ; Load 69 into V8
$F48    $594B   UNKNOWN  $594B           ; Unknown 5xxx instruction
$F4A    $7F83   ADD      VF, #83         ; Add 131 to VF
$F4C    $910F   UNKNOWN  $910F           ; Unknown 9xxx instruction
$F4E    $CE09   RND      VE, #09         ; VE = random & 09
$F50    $C5C6   RND      V5, #C6         ; V5 = random & C6
$F52    $8933   XOR      V9, V3          ; V9 ^= V3
$F54    $4ABE   SNE      VA, #BE         ; Skip if VA != 190
$F56    $2481   CALL     $481            ; Call subroutine at 481
$F58    $2075   CALL     $075            ; Call subroutine at 075
$F5A    $07D4   SYS      $7D4            ; System call to 7D4
$F5C    $DAB1   DRW      VA, VB, #1      ; Draw 1-byte sprite at VA, VB
$F5E    $C965   RND      V9, #65         ; V9 = random & 65
$F60    $EEC0   UNKNOWN  $EEC0           ; Unknown Exxx instruction
$F62    $61E0   LD       V1, #E0         ; Load 224 into V1
$F64    $AAE8   LD       I, $AE8         ; Load AE8 into I
$F66    $81D3   XOR      V1, VD          ; V1 ^= VD
$F68    $AF6B   LD       I, $F6B         ; Load F6B into I
$F6A    $8000   LD       V0, V0          ; V0 = V0
$F6C    $D10B   DRW      V1, V0, #B      ; Draw 11-byte sprite at V1, V0
$F6E    $9870   SNE      V8, V7          ; Skip if V8 != V7
$F70    $E1DB   UNKNOWN  $E1DB           ; Unknown Exxx instruction
$F72    $81A2   AND      V1, VA          ; V1 &= VA
$F74    $A4B6   LD       I, $4B6         ; Load 4B6 into I
$F76    $1D3F   JP       $D3F            ; Jump to D3F
$F78    $1BB0   JP       $BB0            ; Jump to BB0
$F7A    $9ABD   UNKNOWN  $9ABD           ; Unknown 9xxx instruction
$F7C    $3987   SE       V9, #87         ; Skip if V9 == 135
$F7E    $DBCE   DRW      VB, VC, #E      ; Draw 14-byte sprite at VB, VC
$F80    $BD9E   JP       V0, $D9E        ; Jump to V0 + D9E
$F82    $65A6   LD       V5, #A6         ; Load 166 into V5
$F84    $F4D8   UNKNOWN  F4D8            ; Unknown Fxxx instruction
$F86    $03FA   SYS      $3FA            ; System call to 3FA
$F88    $DD6F   DRW      VD, V6, #F      ; Draw 15-byte sprite at VD, V6
$F8A    $DEAB   DRW      VE, VA, #B      ; Draw 11-byte sprite at VE, VA
$F8C    $1967   JP       $967            ; Jump to 967
$F8E    $86A9   UNKNOWN  86A9            ; Unknown 8xxx instruction
$F90    $3716   SE       V7, #16         ; Skip if V7 == 22
$F92    $2998   CALL     $998            ; Call subroutine at 998
$F94    $E3DF   UNKNOWN  $E3DF           ; Unknown Exxx instruction
$F96    $0103   SYS      $103            ; System call to 103
$F98    $40BD   SNE      V0, #BD         ; Skip if V0 != 189
$F9A    $E1B5   UNKNOWN  $E1B5           ; Unknown Exxx instruction
$F9C    $D732   DRW      V7, V3, #2      ; Draw 2-byte sprite at V7, V3
$F9E    $207B   CALL     $07B            ; Call subroutine at 07B
$FA0    $E3C8   UNKNOWN  $E3C8           ; Unknown Exxx instruction
$FA2    $E7B1   UNKNOWN  $E7B1           ; Unknown Exxx instruction
$FA4    $E99C   UNKNOWN  $E99C           ; Unknown Exxx instruction
$FA6    $BD05   JP       V0, $D05        ; Jump to V0 + D05
$FA8    $6499   LD       V4, #99         ; Load 153 into V4
$FAA    $077F   SYS      $77F            ; System call to 77F
$FAC    $30A8   SE       V0, #A8         ; Skip if V0 == 168
$FAE    $E13A   UNKNOWN  $E13A           ; Unknown Exxx instruction
$FB0    $3EB2   SE       VE, #B2         ; Skip if VE == 178
$FB2    $4AB5   SNE      VA, #B5         ; Skip if VA != 181
$FB4    $5AFA   UNKNOWN  $5AFA           ; Unknown 5xxx instruction
$FB6    $BCA3   JP       V0, $CA3        ; Jump to V0 + CA3
$FB8    $BBBE   JP       V0, $BBE        ; Jump to V0 + BBE
$FBA    $C9B7   RND      V9, #B7         ; V9 = random & B7
$FBC    $544D   UNKNOWN  $544D           ; Unknown 5xxx instruction
$FBE    $C81F   RND      V8, #1F         ; V8 = random & 1F
$FC0    $CF40   RND      VF, #40         ; VF = random & 40
$FC2    $BD1D   JP       V0, $D1D        ; Jump to V0 + D1D
$FC4    $F44E   UNKNOWN  F44E            ; Unknown Fxxx instruction
$FC6    $F2AF   UNKNOWN  F2AF            ; Unknown Fxxx instruction
$FC8    $A4D4   LD       I, $4D4         ; Load 4D4 into I
$FCA    $9A21   UNKNOWN  $9A21           ; Unknown 9xxx instruction
$FCC    $27AB   CALL     $7AB            ; Call subroutine at 7AB
$FCE    $6034   LD       V0, #34         ; Load 52 into V0
$FD0    $3232   SE       V2, #32         ; Skip if V2 == 50
$FD2    $9E39   UNKNOWN  $9E39           ; Unknown 9xxx instruction
$FD4    $1592   JP       $592            ; Jump to 592
$FD6    $4491   SNE      V4, #91         ; Skip if V4 != 145
$FD8    $F4A2   UNKNOWN  F4A2            ; Unknown Fxxx instruction
$FDA    $1257   JP       $257            ; Jump to 257
$FDC    $BFAE   JP       V0, $FAE        ; Jump to V0 + FAE
$FDE    $AD68   LD       I, $D68         ; Load D68 into I
$FE0    $FD32   UNKNOWN  FD32            ; Unknown Fxxx instruction
$FE2    $D36F   DRW      V3, V6, #F      ; Draw 15-byte sprite at V3, V6
$FE4    $9F10   SNE      VF, V1          ; Skip if VF != V1
$FE6    $C4E5   RND      V4, #E5         ; V4 = random & E5
$FE8    $8BFF   UNKNOWN  8BFF            ; Unknown 8xxx instruction
$FEA    $74EE   ADD      V4, #EE         ; Add 238 to V4
$FEC    $D1F8   DRW      V1, VF, #8      ; Draw 8-byte sprite at V1, VF
$FEE    $595B   UNKNOWN  $595B           ; Unknown 5xxx instruction
$FF0    $D3FE   DRW      V3, VF, #E      ; Draw 14-byte sprite at V3, VF
$FF2    $AFFF   LD       I, $FFF         ; Load FFF into I
$FF4    $17A0   JP       $7A0            ; Jump to 7A0
$FF6    $D19D   DRW      V1, V9, #D      ; Draw 13-byte sprite at V1, V9
$FF8    $13CE   JP       $3CE            ; Jump to 3CE
$FFA    $5A9E   UNKNOWN  $5A9E           ; Unknown 5xxx instruction
$FFC    $3FDB   SE       VF, #DB         ; Skip if VF == 219
$FFE    $9BFE   UNKNOWN  $9BFE           ; Unknown 9xxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 482 (26.9%)
  JP      : 229 (12.8%)
  LD      : 226 (12.6%)
  RND     : 134 ( 7.5%)
  SE      : 131 ( 7.3%)
  DRW     : 122 ( 6.8%)
  ADD     : 110 ( 6.1%)
  CALL    : 106 ( 5.9%)
  SNE     : 106 ( 5.9%)
  SYS     : 105 ( 5.9%)
  SHR     :   9 ( 0.5%)
  XOR     :   8 ( 0.4%)
  SHL     :   6 ( 0.3%)
  AND     :   6 ( 0.3%)
  OR      :   5 ( 0.3%)
  SUB     :   3 ( 0.2%)
  SUBN    :   3 ( 0.2%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 336 (18.8%)
Arithmetic Operations: 135 (7.5%)
