
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B3962D01_I38830_C1516_479c357eca9b.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 3962
Instance: 38830
Direction: descending
Final Array: [209, 199, 171, 169, 142, 77, 76, 69]
Operations: R:0 W:8 C:61 S:4

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 124
Sort Array References:
  $22E: LD I, $F64 ; Load F64 into I
  $23C: LD I, $B14 ; Load B14 into I
  $2A2: LD I, $193 ; Load 193 into I
  $2AE: LD I, $8FE ; Load 8FE into I
  $2B8: LD I, $0BA ; Load 0BA into I
  $2C8: LD I, $C14 ; Load C14 into I
  $2F2: LD I, $C15 ; Load C15 into I
  $302: LD I, $BA9 ; Load BA9 into I
  $324: LD I, $F3E ; Load F3E into I
  $328: LD I, $67A ; Load 67A into I
  $338: LD I, $4B7 ; Load 4B7 into I
  $368: LD I, $00D ; Load 00D into I
  $378: LD I, $48F ; Load 48F into I
  $394: LD I, $E21 ; Load E21 into I
  $396: LD I, $A38 ; Load A38 into I
  $39A: LD I, $991 ; Load 991 into I
  $3E2: LD I, $7B8 ; Load 7B8 into I
  $3F4: LD I, $CA1 ; Load CA1 into I
  $3F6: LD I, $D3B ; Load D3B into I
  $41A: LD VD, [I] ; Load V0-VD from I
  $43C: LD I, $F51 ; Load F51 into I
  $440: LD I, $BD8 ; Load BD8 into I
  $45E: LD I, $748 ; Load 748 into I
  $48C: LD I, $428 ; Load 428 into I
  $4CA: LD I, $018 ; Load 018 into I
  $4CE: LD I, $61E ; Load 61E into I
  $4FE: LD I, $C4A ; Load C4A into I
  $510: LD I, $637 ; Load 637 into I
  $51A: LD I, $221 ; Load 221 into I
  $520: LD I, $CDC ; Load CDC into I
  $52C: LD I, $C01 ; Load C01 into I
  $52E: LD V9, [I] ; Load V0-V9 from I
  $530: LD I, $847 ; Load 847 into I
  $56A: LD I, $C18 ; Load C18 into I
  $58C: LD I, $139 ; Load 139 into I
  $5AC: LD I, $EFF ; Load EFF into I
  $5C4: LD I, $7B1 ; Load 7B1 into I
  $60C: LD I, $544 ; Load 544 into I
  $638: LD I, $549 ; Load 549 into I
  $63A: LD I, $92F ; Load 92F into I
  $652: LD I, $4A8 ; Load 4A8 into I
  $660: LD I, $EB4 ; Load EB4 into I
  $67C: LD I, $8F6 ; Load 8F6 into I
  $68E: LD I, $521 ; Load 521 into I
  $6B8: LD I, $612 ; Load 612 into I
  $6C4: LD I, $EB1 ; Load EB1 into I
  $6E2: LD I, $2A8 ; Load 2A8 into I
  $6F2: LD I, $583 ; Load 583 into I
  $736: LD I, $D8F ; Load D8F into I
  $73E: LD I, $8DB ; Load 8DB into I
  $75C: LD I, $01C ; Load 01C into I
  $7A4: LD I, $6F5 ; Load 6F5 into I
  $7AC: LD I, $F48 ; Load F48 into I
  $7B8: LD I, $8DA ; Load 8DA into I
  $7D2: LD I, $36C ; Load 36C into I
  $80E: LD I, $CB9 ; Load CB9 into I
  $85A: LD I, $108 ; Load 108 into I
  $86A: LD I, $DE4 ; Load DE4 into I
  $886: LD I, $4E5 ; Load 4E5 into I
  $8B0: LD I, $C71 ; Load C71 into I
  $8F8: LD I, $4DA ; Load 4DA into I
  $908: LD I, $1E3 ; Load 1E3 into I
  $90E: LD I, $B1D ; Load B1D into I
  $93E: LD I, $D0E ; Load D0E into I
  $94A: LD I, $75F ; Load 75F into I
  $960: LD I, $5BB ; Load 5BB into I
  $96C: LD I, $4D8 ; Load 4D8 into I
  $97C: LD I, $2D7 ; Load 2D7 into I
  $990: LD V0, [I] ; Load V0-V0 from I
  $9AE: LD I, $95B ; Load 95B into I
  $9C4: LD I, $A76 ; Load A76 into I
  $9CC: LD I, $389 ; Load 389 into I
  $9D0: LD I, $2FA ; Load 2FA into I
  $9DA: LD I, $32D ; Load 32D into I
  $9EC: LD I, $67F ; Load 67F into I
  $9F2: LD I, $495 ; Load 495 into I
  $9FA: LD I, $BB3 ; Load BB3 into I
  $A1C: LD I, $42E ; Load 42E into I
  $A32: LD I, $5CD ; Load 5CD into I
  $A42: LD I, $F07 ; Load F07 into I
  $A54: LD I, $B27 ; Load B27 into I
  $A90: LD I, $386 ; Load 386 into I
  $ADA: LD I, $483 ; Load 483 into I
  $AEC: LD I, $E86 ; Load E86 into I
  $B28: LD I, $A5F ; Load A5F into I
  $B30: LD I, $DE8 ; Load DE8 into I
  $B32: LD I, $DF0 ; Load DF0 into I
  $B34: LD I, $B15 ; Load B15 into I
  $B4A: LD I, $A96 ; Load A96 into I
  $B6A: LD I, $C8B ; Load C8B into I
  $BD0: LD I, $0CE ; Load 0CE into I
  $C0A: LD I, $6BA ; Load 6BA into I
  $C1A: LD I, $0F9 ; Load 0F9 into I
  $C28: LD I, $C0E ; Load C0E into I
  $C2E: LD I, $220 ; Load 220 into I
  $C36: LD I, $BF3 ; Load BF3 into I
  $C4E: LD I, $1BA ; Load 1BA into I
  $C52: LD I, $865 ; Load 865 into I
  $C54: LD I, $56D ; Load 56D into I
  $C6A: LD I, $2E1 ; Load 2E1 into I
  $C80: LD I, $BB8 ; Load BB8 into I
  $CB8: LD I, $DD0 ; Load DD0 into I
  $CF6: LD I, $942 ; Load 942 into I
  $D0A: LD I, $E49 ; Load E49 into I
  $D0C: LD I, $845 ; Load 845 into I
  $D16: LD I, $77B ; Load 77B into I
  $D44: LD I, $DF2 ; Load DF2 into I
  $D58: LD I, $BF9 ; Load BF9 into I
  $D6C: LD I, $45D ; Load 45D into I
  $DAA: LD I, $F54 ; Load F54 into I
  $DBC: LD I, $47D ; Load 47D into I
  $DCA: LD I, $DF5 ; Load DF5 into I
  $DE4: LD I, $DF6 ; Load DF6 into I
  $E0E: LD I, $C55 ; Load C55 into I
  $E18: LD I, $DC8 ; Load DC8 into I
  $E3A: LD I, $FBE ; Load FBE into I
  $EBE: LD I, $42F ; Load 42F into I
  $F1A: LD I, $BF5 ; Load BF5 into I
  $F24: LD I, $A84 ; Load A84 into I
  $F38: LD I, $FC7 ; Load FC7 into I
  $F52: LD I, $061 ; Load 061 into I
  $F76: LD I, $71A ; Load 71A into I
  $F7A: LD I, $3B2 ; Load 3B2 into I
  $FF0: LD I, $4C6 ; Load 4C6 into I

CONTROL FLOW ANALYSIS:
Jumps: 207
Calls: 141
Branches: 231
Loops: 115
Loop Structures:
  $2C4 -> $24A (backward jump)
  $2DA -> $26A (backward jump)
  $2FE -> $1D2 (backward jump)
  $32C -> $2D7 (backward jump)
  $332 -> $01A (backward jump)
  $336 -> $110 (backward jump)
  $356 -> $079 (backward jump)
  $392 -> $017 (backward jump)
  $3A2 -> $33D (backward jump)
  $3AE -> $29A (backward jump)
  $3B6 -> $384 (backward jump)
  $3F2 -> $2E0 (backward jump)
  $434 -> $2A1 (backward jump)
  $45A -> $20E (backward jump)
  $474 -> $3A3 (backward jump)
  $494 -> $0A2 (backward jump)
  $4C4 -> $008 (backward jump)
  $4E4 -> $299 (backward jump)
  $512 -> $053 (backward jump)
  $516 -> $3DA (backward jump)
  $544 -> $4AC (backward jump)
  $59E -> $294 (backward jump)
  $5D2 -> $239 (backward jump)
  $606 -> $229 (backward jump)
  $60A -> $20A (backward jump)
  $620 -> $00F (backward jump)
  $650 -> $58F (backward jump)
  $66A -> $304 (backward jump)
  $66C -> $5CB (backward jump)
  $694 -> $2D2 (backward jump)
  $6C6 -> $648 (backward jump)
  $6E6 -> $064 (backward jump)
  $702 -> $164 (backward jump)
  $718 -> $28B (backward jump)
  $748 -> $275 (backward jump)
  $768 -> $311 (backward jump)
  $774 -> $325 (backward jump)
  $7C6 -> $704 (backward jump)
  $822 -> $0EC (backward jump)
  $864 -> $18A (backward jump)
  $87C -> $738 (backward jump)
  $888 -> $175 (backward jump)
  $88E -> $39C (backward jump)
  $8B6 -> $147 (backward jump)
  $904 -> $797 (backward jump)
  $90C -> $2A1 (backward jump)
  $930 -> $3E5 (backward jump)
  $944 -> $46B (backward jump)
  $948 -> $0A0 (backward jump)
  $9A4 -> $5D0 (backward jump)
  $9CE -> $1BA (backward jump)
  $9D2 -> $68D (backward jump)
  $9D4 -> $0A8 (backward jump)
  $9DE -> $647 (backward jump)
  $9F6 -> $7FD (backward jump)
  $9F8 -> $4FA (backward jump)
  $9FC -> $9E3 (backward jump)
  $A2C -> $0B5 (backward jump)
  $A3E -> $4E6 (backward jump)
  $A8E -> $676 (backward jump)
  $A9E -> $13C (backward jump)
  $AA2 -> $8EF (backward jump)
  $AC8 -> $643 (backward jump)
  $AF4 -> $240 (backward jump)
  $B02 -> $768 (backward jump)
  $B0E -> $679 (backward jump)
  $B2E -> $7D3 (backward jump)
  $B4E -> $AEA (backward jump)
  $B60 -> $8C4 (backward jump)
  $B66 -> $17B (backward jump)
  $B7E -> $86D (backward jump)
  $B88 -> $12B (backward jump)
  $BC0 -> $671 (backward jump)
  $BC4 -> $2BC (backward jump)
  $BEE -> $887 (backward jump)
  $C0C -> $0BC (backward jump)
  $C26 -> $5CC (backward jump)
  $C32 -> $AE8 (backward jump)
  $C6E -> $B4E (backward jump)
  $C7C -> $78E (backward jump)
  $C9E -> $AB0 (backward jump)
  $CB2 -> $442 (backward jump)
  $CD6 -> $04A (backward jump)
  $CD8 -> $CAE (backward jump)
  $D1A -> $71A (backward jump)
  $D68 -> $983 (backward jump)
  $D6A -> $2F0 (backward jump)
  $D70 -> $771 (backward jump)
  $D80 -> $CA3 (backward jump)
  $D8A -> $2AA (backward jump)
  $D94 -> $30D (backward jump)
  $DBA -> $0BE (backward jump)
  $DDE -> $A44 (backward jump)
  $DE0 -> $22B (backward jump)
  $E06 -> $5B9 (backward jump)
  $E20 -> $BC7 (backward jump)
  $E28 -> $07F (backward jump)
  $E30 -> $A8C (backward jump)
  $E44 -> $9B4 (backward jump)
  $E4E -> $036 (backward jump)
  $E5C -> $43E (backward jump)
  $ECE -> $E2E (backward jump)
  $EFA -> $370 (backward jump)
  $F1C -> $044 (backward jump)
  $F22 -> $231 (backward jump)
  $F2E -> $1A4 (backward jump)
  $F3C -> $641 (backward jump)
  $F3E -> $D40 (backward jump)
  $F40 -> $E65 (backward jump)
  $F44 -> $4B8 (backward jump)
  $F58 -> $EAC (backward jump)
  $F5A -> $01B (backward jump)
  $F84 -> $808 (backward jump)
  $FA4 -> $0D3 (backward jump)
  $FE6 -> $189 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $BD32   JP       V0, $D32        ; Jump to V0 + D32
$202    $2DE8   CALL     $DE8            ; Call subroutine at DE8
$204    $DA69   DRW      VA, V6, #9      ; Draw 9-byte sprite at VA, V6
$206    $923E   UNKNOWN  $923E           ; Unknown 9xxx instruction
$208    $DA7F   DRW      VA, V7, #F      ; Draw 15-byte sprite at VA, V7
$20A    $15F8   JP       $5F8            ; Jump to 5F8
$20C    $C240   RND      V2, #40         ; V2 = random & 40
$20E    $593B   UNKNOWN  $593B           ; Unknown 5xxx instruction
$210    $536B   UNKNOWN  $536B           ; Unknown 5xxx instruction
$212    $DEDB   DRW      VE, VD, #B      ; Draw 11-byte sprite at VE, VD
$214    $E1EA   UNKNOWN  $E1EA           ; Unknown Exxx instruction
$216    $6A81   LD       VA, #81         ; Load 129 into VA
$218    $0A3E   SYS      $A3E            ; System call to A3E
$21A    $5CCA   UNKNOWN  $5CCA           ; Unknown 5xxx instruction
$21C    $2585   CALL     $585            ; Call subroutine at 585
$21E    $F325   UNKNOWN  F325            ; Unknown Fxxx instruction
$220    $8989   UNKNOWN  8989            ; Unknown 8xxx instruction
$222    $541A   UNKNOWN  $541A           ; Unknown 5xxx instruction
$224    $3673   SE       V6, #73         ; Skip if V6 == 115
$226    $29E4   CALL     $9E4            ; Call subroutine at 9E4
$228    $D178   DRW      V1, V7, #8      ; Draw 8-byte sprite at V1, V7
$22A    $3AA0   SE       VA, #A0         ; Skip if VA == 160
$22C    $9F38   UNKNOWN  $9F38           ; Unknown 9xxx instruction
$22E    $AF64   LD       I, $F64         ; Load F64 into I
$230    $E897   UNKNOWN  $E897           ; Unknown Exxx instruction
$232    $3780   SE       V7, #80         ; Skip if V7 == 128
$234    $53F9   UNKNOWN  $53F9           ; Unknown 5xxx instruction
$236    $E375   UNKNOWN  $E375           ; Unknown Exxx instruction
$238    $8CDA   UNKNOWN  8CDA            ; Unknown 8xxx instruction
$23A    $395C   SE       V9, #5C         ; Skip if V9 == 92
$23C    $AB14   LD       I, $B14         ; Load B14 into I
$23E    $2074   CALL     $074            ; Call subroutine at 074
$240    $9560   SNE      V5, V6          ; Skip if V5 != V6
$242    $90F2   UNKNOWN  $90F2           ; Unknown 9xxx instruction
$244    $E008   UNKNOWN  $E008           ; Unknown Exxx instruction
$246    $5CE1   UNKNOWN  $5CE1           ; Unknown 5xxx instruction
$248    $EA67   UNKNOWN  $EA67           ; Unknown Exxx instruction
$24A    $7852   ADD      V8, #52         ; Add 82 to V8
$24C    $4F8F   SNE      VF, #8F         ; Skip if VF != 143
$24E    $E5B2   UNKNOWN  $E5B2           ; Unknown Exxx instruction
$250    $9DD7   UNKNOWN  $9DD7           ; Unknown 9xxx instruction
$252    $FD5B   UNKNOWN  FD5B            ; Unknown Fxxx instruction
$254    $8466   SHR      V4              ; V4 >>= 1, VF = LSB
$256    $6C52   LD       VC, #52         ; Load 82 into VC
$258    $DDD3   DRW      VD, VD, #3      ; Draw 3-byte sprite at VD, VD
$25A    $298E   CALL     $98E            ; Call subroutine at 98E
$25C    $0623   SYS      $623            ; System call to 623
$25E    $50E3   UNKNOWN  $50E3           ; Unknown 5xxx instruction
$260    $2CFF   CALL     $CFF            ; Call subroutine at CFF
$262    $C4E5   RND      V4, #E5         ; V4 = random & E5
$264    $624C   LD       V2, #4C         ; Load 76 into V2
$266    $F9D3   UNKNOWN  F9D3            ; Unknown Fxxx instruction
$268    $43E0   SNE      V3, #E0         ; Skip if V3 != 224
$26A    $428B   SNE      V2, #8B         ; Skip if V2 != 139
$26C    $5523   UNKNOWN  $5523           ; Unknown 5xxx instruction
$26E    $C0B2   RND      V0, #B2         ; V0 = random & B2
$270    $7405   ADD      V4, #05         ; Add 5 to V4
$272    $04D9   SYS      $4D9            ; System call to 4D9
$274    $54BE   UNKNOWN  $54BE           ; Unknown 5xxx instruction
$276    $30D9   SE       V0, #D9         ; Skip if V0 == 217
$278    $887F   UNKNOWN  887F            ; Unknown 8xxx instruction
$27A    $7B0F   ADD      VB, #0F         ; Add 15 to VB
$27C    $7981   ADD      V9, #81         ; Add 129 to V9
$27E    $712D   ADD      V1, #2D         ; Add 45 to V1
$280    $987E   UNKNOWN  $987E           ; Unknown 9xxx instruction
$282    $7AC7   ADD      VA, #C7         ; Add 199 to VA
$284    $0FE3   SYS      $FE3            ; System call to FE3
$286    $64EC   LD       V4, #EC         ; Load 236 into V4
$288    $7BDC   ADD      VB, #DC         ; Add 220 to VB
$28A    $E9E4   UNKNOWN  $E9E4           ; Unknown Exxx instruction
$28C    $243D   CALL     $43D            ; Call subroutine at 43D
$28E    $BE77   JP       V0, $E77        ; Jump to V0 + E77
$290    $393A   SE       V9, #3A         ; Skip if V9 == 58
$292    $313F   SE       V1, #3F         ; Skip if V1 == 63
$294    $9955   UNKNOWN  $9955           ; Unknown 9xxx instruction
$296    $693F   LD       V9, #3F         ; Load 63 into V9
$298    $07E5   SYS      $7E5            ; System call to 7E5
$29A    $5DE9   UNKNOWN  $5DE9           ; Unknown 5xxx instruction
$29C    $2636   CALL     $636            ; Call subroutine at 636
$29E    $19F0   JP       $9F0            ; Jump to 9F0
$2A0    $23D3   CALL     $3D3            ; Call subroutine at 3D3
$2A2    $A193   LD       I, $193         ; Load 193 into I
$2A4    $0607   SYS      $607            ; System call to 607
$2A6    $469D   SNE      V6, #9D         ; Skip if V6 != 157
$2A8    $14D5   JP       $4D5            ; Jump to 4D5
$2AA    $DA61   DRW      VA, V6, #1      ; Draw 1-byte sprite at VA, V6
$2AC    $E0E8   UNKNOWN  $E0E8           ; Unknown Exxx instruction
$2AE    $A8FE   LD       I, $8FE         ; Load 8FE into I
$2B0    $B365   JP       V0, $365        ; Jump to V0 + 365
$2B2    $796A   ADD      V9, #6A         ; Add 106 to V9
$2B4    $5891   UNKNOWN  $5891           ; Unknown 5xxx instruction
$2B6    $D622   DRW      V6, V2, #2      ; Draw 2-byte sprite at V6, V2
$2B8    $A0BA   LD       I, $0BA         ; Load 0BA into I
$2BA    $4A1A   SNE      VA, #1A         ; Skip if VA != 26
$2BC    $B62F   JP       V0, $62F        ; Jump to V0 + 62F
$2BE    $7B77   ADD      VB, #77         ; Add 119 to VB
$2C0    $E5EE   UNKNOWN  $E5EE           ; Unknown Exxx instruction
$2C2    $BA3D   JP       V0, $A3D        ; Jump to V0 + A3D
$2C4    $124A   JP       $24A            ; Jump to 24A
$2C6    $8706   SHR      V7              ; V7 >>= 1, VF = LSB
$2C8    $AC14   LD       I, $C14         ; Load C14 into I
$2CA    $37E1   SE       V7, #E1         ; Skip if V7 == 225
$2CC    $48FC   SNE      V8, #FC         ; Skip if V8 != 252
$2CE    $2E0B   CALL     $E0B            ; Call subroutine at E0B
$2D0    $1310   JP       $310            ; Jump to 310
$2D2    $C3AA   RND      V3, #AA         ; V3 = random & AA
$2D4    $8F3B   UNKNOWN  8F3B            ; Unknown 8xxx instruction
$2D6    $D5DD   DRW      V5, VD, #D      ; Draw 13-byte sprite at V5, VD
$2D8    $8700   LD       V7, V0          ; V7 = V0
$2DA    $126A   JP       $26A            ; Jump to 26A
$2DC    $4161   SNE      V1, #61         ; Skip if V1 != 97
$2DE    $BB3C   JP       V0, $B3C        ; Jump to V0 + B3C
$2E0    $E312   UNKNOWN  $E312           ; Unknown Exxx instruction
$2E2    $D5EF   DRW      V5, VE, #F      ; Draw 15-byte sprite at V5, VE
$2E4    $B4C1   JP       V0, $4C1        ; Jump to V0 + 4C1
$2E6    $DEC0   DRW      VE, VC, #0      ; Draw 0-byte sprite at VE, VC
$2E8    $553C   UNKNOWN  $553C           ; Unknown 5xxx instruction
$2EA    $FFF1   UNKNOWN  FFF1            ; Unknown Fxxx instruction
$2EC    $0D07   SYS      $D07            ; System call to D07
$2EE    $FB19   UNKNOWN  FB19            ; Unknown Fxxx instruction
$2F0    $E9C5   UNKNOWN  $E9C5           ; Unknown Exxx instruction
$2F2    $AC15   LD       I, $C15         ; Load C15 into I
$2F4    $EAE4   UNKNOWN  $EAE4           ; Unknown Exxx instruction
$2F6    $CECC   RND      VE, #CC         ; VE = random & CC
$2F8    $2F79   CALL     $F79            ; Call subroutine at F79
$2FA    $1946   JP       $946            ; Jump to 946
$2FC    $7561   ADD      V5, #61         ; Add 97 to V5
$2FE    $11D2   JP       $1D2            ; Jump to 1D2
$300    $D1C7   DRW      V1, VC, #7      ; Draw 7-byte sprite at V1, VC
$302    $ABA9   LD       I, $BA9         ; Load BA9 into I
$304    $8E4D   UNKNOWN  8E4D            ; Unknown 8xxx instruction
$306    $4C45   SNE      VC, #45         ; Skip if VC != 69
$308    $64E4   LD       V4, #E4         ; Load 228 into V4
$30A    $C0BA   RND      V0, #BA         ; V0 = random & BA
$30C    $B8BB   JP       V0, $8BB        ; Jump to V0 + 8BB
$30E    $02CE   SYS      $2CE            ; System call to 2CE
$310    $C677   RND      V6, #77         ; V6 = random & 77
$312    $6DD1   LD       VD, #D1         ; Load 209 into VD
$314    $DF30   DRW      VF, V3, #0      ; Draw 0-byte sprite at VF, V3
$316    $0848   SYS      $848            ; System call to 848
$318    $99A5   UNKNOWN  $99A5           ; Unknown 9xxx instruction
$31A    $4A0E   SNE      VA, #0E         ; Skip if VA != 14
$31C    $76EF   ADD      V6, #EF         ; Add 239 to V6
$31E    $4DD4   SNE      VD, #D4         ; Skip if VD != 212
$320    $625E   LD       V2, #5E         ; Load 94 into V2
$322    $D20A   DRW      V2, V0, #A      ; Draw 10-byte sprite at V2, V0
$324    $AF3E   LD       I, $F3E         ; Load F3E into I
$326    $89B9   UNKNOWN  89B9            ; Unknown 8xxx instruction
$328    $A67A   LD       I, $67A         ; Load 67A into I
$32A    $61F1   LD       V1, #F1         ; Load 241 into V1
$32C    $12D7   JP       $2D7            ; Jump to 2D7
$32E    $572F   UNKNOWN  $572F           ; Unknown 5xxx instruction
$330    $FBC1   UNKNOWN  FBC1            ; Unknown Fxxx instruction
$332    $101A   JP       $01A            ; Jump to 01A
$334    $1520   JP       $520            ; Jump to 520
$336    $1110   JP       $110            ; Jump to 110
$338    $A4B7   LD       I, $4B7         ; Load 4B7 into I
$33A    $EFC6   UNKNOWN  $EFC6           ; Unknown Exxx instruction
$33C    $CA06   RND      VA, #06         ; VA = random & 06
$33E    $2C68   CALL     $C68            ; Call subroutine at C68
$340    $F3F8   UNKNOWN  F3F8            ; Unknown Fxxx instruction
$342    $9F51   UNKNOWN  $9F51           ; Unknown 9xxx instruction
$344    $6D7E   LD       VD, #7E         ; Load 126 into VD
$346    $812A   UNKNOWN  812A            ; Unknown 8xxx instruction
$348    $090B   SYS      $90B            ; System call to 90B
$34A    $698D   LD       V9, #8D         ; Load 141 into V9
$34C    $2F92   CALL     $F92            ; Call subroutine at F92
$34E    $5B3F   UNKNOWN  $5B3F           ; Unknown 5xxx instruction
$350    $EEB4   UNKNOWN  $EEB4           ; Unknown Exxx instruction
$352    $7545   ADD      V5, #45         ; Add 69 to V5
$354    $638A   LD       V3, #8A         ; Load 138 into V3
$356    $1079   JP       $079            ; Jump to 079
$358    $6D14   LD       VD, #14         ; Load 20 into VD
$35A    $560D   UNKNOWN  $560D           ; Unknown 5xxx instruction
$35C    $0A18   SYS      $A18            ; System call to A18
$35E    $5A64   UNKNOWN  $5A64           ; Unknown 5xxx instruction
$360    $8BA7   SUBN     VB, VA          ; VB = VA - VB, VF = !borrow
$362    $F0B2   UNKNOWN  F0B2            ; Unknown Fxxx instruction
$364    $0ED2   SYS      $ED2            ; System call to ED2
$366    $26D7   CALL     $6D7            ; Call subroutine at 6D7
$368    $A00D   LD       I, $00D         ; Load 00D into I
$36A    $B456   JP       V0, $456        ; Jump to V0 + 456
$36C    $E243   UNKNOWN  $E243           ; Unknown Exxx instruction
$36E    $6F15   LD       VF, #15         ; Load 21 into VF
$370    $F327   UNKNOWN  F327            ; Unknown Fxxx instruction
$372    $3A81   SE       VA, #81         ; Skip if VA == 129
$374    $F921   UNKNOWN  F921            ; Unknown Fxxx instruction
$376    $3636   SE       V6, #36         ; Skip if V6 == 54
$378    $A48F   LD       I, $48F         ; Load 48F into I
$37A    $FABC   UNKNOWN  FABC            ; Unknown Fxxx instruction
$37C    $55C5   UNKNOWN  $55C5           ; Unknown 5xxx instruction
$37E    $379D   SE       V7, #9D         ; Skip if V7 == 157
$380    $4FB2   SNE      VF, #B2         ; Skip if VF != 178
$382    $75D8   ADD      V5, #D8         ; Add 216 to V5
$384    $FAAE   UNKNOWN  FAAE            ; Unknown Fxxx instruction
$386    $5554   UNKNOWN  $5554           ; Unknown 5xxx instruction
$388    $DEDC   DRW      VE, VD, #C      ; Draw 12-byte sprite at VE, VD
$38A    $51BD   UNKNOWN  $51BD           ; Unknown 5xxx instruction
$38C    $8501   OR       V5, V0          ; V5 |= V0
$38E    $B416   JP       V0, $416        ; Jump to V0 + 416
$390    $F1F9   UNKNOWN  F1F9            ; Unknown Fxxx instruction
$392    $1017   JP       $017            ; Jump to 017
$394    $AE21   LD       I, $E21         ; Load E21 into I
$396    $AA38   LD       I, $A38         ; Load A38 into I
$398    $7361   ADD      V3, #61         ; Add 97 to V3
$39A    $A991   LD       I, $991         ; Load 991 into I
$39C    $932A   UNKNOWN  $932A           ; Unknown 9xxx instruction
$39E    $935A   UNKNOWN  $935A           ; Unknown 9xxx instruction
$3A0    $279D   CALL     $79D            ; Call subroutine at 79D
$3A2    $B33D   JP       V0, $33D        ; Jump to V0 + 33D
$3A4    $5221   UNKNOWN  $5221           ; Unknown 5xxx instruction
$3A6    $E890   UNKNOWN  $E890           ; Unknown Exxx instruction
$3A8    $EC31   UNKNOWN  $EC31           ; Unknown Exxx instruction
$3AA    $DC37   DRW      VC, V3, #7      ; Draw 7-byte sprite at VC, V3
$3AC    $D91E   DRW      V9, V1, #E      ; Draw 14-byte sprite at V9, V1
$3AE    $129A   JP       $29A            ; Jump to 29A
$3B0    $2755   CALL     $755            ; Call subroutine at 755
$3B2    $FB47   UNKNOWN  FB47            ; Unknown Fxxx instruction
$3B4    $1EBA   JP       $EBA            ; Jump to EBA
$3B6    $B384   JP       V0, $384        ; Jump to V0 + 384
$3B8    $DFA5   DRW      VF, VA, #5      ; Draw 5-byte sprite at VF, VA
$3BA    $6DE8   LD       VD, #E8         ; Load 232 into VD
$3BC    $DD4C   DRW      VD, V4, #C      ; Draw 12-byte sprite at VD, V4
$3BE    $C67A   RND      V6, #7A         ; V6 = random & 7A
$3C0    $220B   CALL     $20B            ; Call subroutine at 20B
$3C2    $2062   CALL     $062            ; Call subroutine at 062
$3C4    $F2CC   UNKNOWN  F2CC            ; Unknown Fxxx instruction
$3C6    $C1DF   RND      V1, #DF         ; V1 = random & DF
$3C8    $4125   SNE      V1, #25         ; Skip if V1 != 37
$3CA    $94DA   UNKNOWN  $94DA           ; Unknown 9xxx instruction
$3CC    $9890   SNE      V8, V9          ; Skip if V8 != V9
$3CE    $52A1   UNKNOWN  $52A1           ; Unknown 5xxx instruction
$3D0    $267B   CALL     $67B            ; Call subroutine at 67B
$3D2    $E108   UNKNOWN  $E108           ; Unknown Exxx instruction
$3D4    $B606   JP       V0, $606        ; Jump to V0 + 606
$3D6    $0C89   SYS      $C89            ; System call to C89
$3D8    $0B2A   SYS      $B2A            ; System call to B2A
$3DA    $4EB5   SNE      VE, #B5         ; Skip if VE != 181
$3DC    $647F   LD       V4, #7F         ; Load 127 into V4
$3DE    $F2DC   UNKNOWN  F2DC            ; Unknown Fxxx instruction
$3E0    $0FF4   SYS      $FF4            ; System call to FF4
$3E2    $A7B8   LD       I, $7B8         ; Load 7B8 into I
$3E4    $8984   ADD      V9, V8          ; V9 += V8, VF = carry
$3E6    $979E   UNKNOWN  $979E           ; Unknown 9xxx instruction
$3E8    $F199   UNKNOWN  F199            ; Unknown Fxxx instruction
$3EA    $0940   SYS      $940            ; System call to 940
$3EC    $EE8D   UNKNOWN  $EE8D           ; Unknown Exxx instruction
$3EE    $B643   JP       V0, $643        ; Jump to V0 + 643
$3F0    $74AA   ADD      V4, #AA         ; Add 170 to V4
$3F2    $B2E0   JP       V0, $2E0        ; Jump to V0 + 2E0
$3F4    $ACA1   LD       I, $CA1         ; Load CA1 into I
$3F6    $AD3B   LD       I, $D3B         ; Load D3B into I
$3F8    $0B93   SYS      $B93            ; System call to B93
$3FA    $BA16   JP       V0, $A16        ; Jump to V0 + A16
$3FC    $2378   CALL     $378            ; Call subroutine at 378
$3FE    $E89C   UNKNOWN  $E89C           ; Unknown Exxx instruction
$400    $D755   DRW      V7, V5, #5      ; Draw 5-byte sprite at V7, V5
$402    $DFA1   DRW      VF, VA, #1      ; Draw 1-byte sprite at VF, VA
$404    $3DB1   SE       VD, #B1         ; Skip if VD == 177
$406    $896F   UNKNOWN  896F            ; Unknown 8xxx instruction
$408    $D599   DRW      V5, V9, #9      ; Draw 9-byte sprite at V5, V9
$40A    $6B9A   LD       VB, #9A         ; Load 154 into VB
$40C    $406D   SNE      V0, #6D         ; Skip if V0 != 109
$40E    $4F89   SNE      VF, #89         ; Skip if VF != 137
$410    $E650   UNKNOWN  $E650           ; Unknown Exxx instruction
$412    $98B5   UNKNOWN  $98B5           ; Unknown 9xxx instruction
$414    $9873   UNKNOWN  $9873           ; Unknown 9xxx instruction
$416    $E48E   UNKNOWN  $E48E           ; Unknown Exxx instruction
$418    $1575   JP       $575            ; Jump to 575
$41A    $FD65   LD       VD, [I]         ; Load V0-VD from I
$41C    $30F8   SE       V0, #F8         ; Skip if V0 == 248
$41E    $89C7   SUBN     V9, VC          ; V9 = VC - V9, VF = !borrow
$420    $EF7A   UNKNOWN  $EF7A           ; Unknown Exxx instruction
$422    $C3ED   RND      V3, #ED         ; V3 = random & ED
$424    $382F   SE       V8, #2F         ; Skip if V8 == 47
$426    $9421   UNKNOWN  $9421           ; Unknown 9xxx instruction
$428    $0168   SYS      $168            ; System call to 168
$42A    $8989   UNKNOWN  8989            ; Unknown 8xxx instruction
$42C    $3802   SE       V8, #02         ; Skip if V8 == 2
$42E    $4C1F   SNE      VC, #1F         ; Skip if VC != 31
$430    $5D50   SE       VD, V5          ; Skip if VD == V5
$432    $F05E   UNKNOWN  F05E            ; Unknown Fxxx instruction
$434    $B2A1   JP       V0, $2A1        ; Jump to V0 + 2A1
$436    $4085   SNE      V0, #85         ; Skip if V0 != 133
$438    $41B3   SNE      V1, #B3         ; Skip if V1 != 179
$43A    $5E7D   UNKNOWN  $5E7D           ; Unknown 5xxx instruction
$43C    $AF51   LD       I, $F51         ; Load F51 into I
$43E    $1F39   JP       $F39            ; Jump to F39
$440    $ABD8   LD       I, $BD8         ; Load BD8 into I
$442    $970F   UNKNOWN  $970F           ; Unknown 9xxx instruction
$444    $D742   DRW      V7, V4, #2      ; Draw 2-byte sprite at V7, V4
$446    $28E1   CALL     $8E1            ; Call subroutine at 8E1
$448    $9CA3   UNKNOWN  $9CA3           ; Unknown 9xxx instruction
$44A    $78D5   ADD      V8, #D5         ; Add 213 to V8
$44C    $5EF9   UNKNOWN  $5EF9           ; Unknown 5xxx instruction
$44E    $94F4   UNKNOWN  $94F4           ; Unknown 9xxx instruction
$450    $CFEA   RND      VF, #EA         ; VF = random & EA
$452    $BF20   JP       V0, $F20        ; Jump to V0 + F20
$454    $FDB2   UNKNOWN  FDB2            ; Unknown Fxxx instruction
$456    $6C87   LD       VC, #87         ; Load 135 into VC
$458    $1F3C   JP       $F3C            ; Jump to F3C
$45A    $120E   JP       $20E            ; Jump to 20E
$45C    $EFD5   UNKNOWN  $EFD5           ; Unknown Exxx instruction
$45E    $A748   LD       I, $748         ; Load 748 into I
$460    $09DD   SYS      $9DD            ; System call to 9DD
$462    $0AF3   SYS      $AF3            ; System call to AF3
$464    $BDB6   JP       V0, $DB6        ; Jump to V0 + DB6
$466    $0A37   SYS      $A37            ; System call to A37
$468    $307B   SE       V0, #7B         ; Skip if V0 == 123
$46A    $610D   LD       V1, #0D         ; Load 13 into V1
$46C    $61D3   LD       V1, #D3         ; Load 211 into V1
$46E    $6B6C   LD       VB, #6C         ; Load 108 into VB
$470    $32FC   SE       V2, #FC         ; Skip if V2 == 252
$472    $9A99   UNKNOWN  $9A99           ; Unknown 9xxx instruction
$474    $B3A3   JP       V0, $3A3        ; Jump to V0 + 3A3
$476    $5A52   UNKNOWN  $5A52           ; Unknown 5xxx instruction
$478    $FF6B   UNKNOWN  FF6B            ; Unknown Fxxx instruction
$47A    $1D14   JP       $D14            ; Jump to D14
$47C    $9448   UNKNOWN  $9448           ; Unknown 9xxx instruction
$47E    $D6C3   DRW      V6, VC, #3      ; Draw 3-byte sprite at V6, VC
$480    $8076   SHR      V0              ; V0 >>= 1, VF = LSB
$482    $9655   UNKNOWN  $9655           ; Unknown 9xxx instruction
$484    $E1EE   UNKNOWN  $E1EE           ; Unknown Exxx instruction
$486    $3380   SE       V3, #80         ; Skip if V3 == 128
$488    $05A2   SYS      $5A2            ; System call to 5A2
$48A    $4554   SNE      V5, #54         ; Skip if V5 != 84
$48C    $A428   LD       I, $428         ; Load 428 into I
$48E    $2984   CALL     $984            ; Call subroutine at 984
$490    $1AA7   JP       $AA7            ; Jump to AA7
$492    $873F   UNKNOWN  873F            ; Unknown 8xxx instruction
$494    $B0A2   JP       V0, $0A2        ; Jump to V0 + 0A2
$496    $83E9   UNKNOWN  83E9            ; Unknown 8xxx instruction
$498    $44E7   SNE      V4, #E7         ; Skip if V4 != 231
$49A    $C378   RND      V3, #78         ; V3 = random & 78
$49C    $5ACC   UNKNOWN  $5ACC           ; Unknown 5xxx instruction
$49E    $EA3E   UNKNOWN  $EA3E           ; Unknown Exxx instruction
$4A0    $28D6   CALL     $8D6            ; Call subroutine at 8D6
$4A2    $74EB   ADD      V4, #EB         ; Add 235 to V4
$4A4    $6371   LD       V3, #71         ; Load 113 into V3
$4A6    $CB2F   RND      VB, #2F         ; VB = random & 2F
$4A8    $257F   CALL     $57F            ; Call subroutine at 57F
$4AA    $6FFF   LD       VF, #FF         ; Load 255 into VF
$4AC    $DD6B   DRW      VD, V6, #B      ; Draw 11-byte sprite at VD, V6
$4AE    $7CBB   ADD      VC, #BB         ; Add 187 to VC
$4B0    $6C39   LD       VC, #39         ; Load 57 into VC
$4B2    $E28B   UNKNOWN  $E28B           ; Unknown Exxx instruction
$4B4    $C16C   RND      V1, #6C         ; V1 = random & 6C
$4B6    $406F   SNE      V0, #6F         ; Skip if V0 != 111
$4B8    $FAC4   UNKNOWN  FAC4            ; Unknown Fxxx instruction
$4BA    $0192   SYS      $192            ; System call to 192
$4BC    $6A2E   LD       VA, #2E         ; Load 46 into VA
$4BE    $D588   DRW      V5, V8, #8      ; Draw 8-byte sprite at V5, V8
$4C0    $D279   DRW      V2, V7, #9      ; Draw 9-byte sprite at V2, V7
$4C2    $E574   UNKNOWN  $E574           ; Unknown Exxx instruction
$4C4    $B008   JP       V0, $008        ; Jump to V0 + 008
$4C6    $FEE6   UNKNOWN  FEE6            ; Unknown Fxxx instruction
$4C8    $B743   JP       V0, $743        ; Jump to V0 + 743
$4CA    $A018   LD       I, $018         ; Load 018 into I
$4CC    $F4B8   UNKNOWN  F4B8            ; Unknown Fxxx instruction
$4CE    $A61E   LD       I, $61E         ; Load 61E into I
$4D0    $1FEE   JP       $FEE            ; Jump to FEE
$4D2    $5A4F   UNKNOWN  $5A4F           ; Unknown 5xxx instruction
$4D4    $F701   UNKNOWN  F701            ; Unknown Fxxx instruction
$4D6    $F1A9   UNKNOWN  F1A9            ; Unknown Fxxx instruction
$4D8    $4CDB   SNE      VC, #DB         ; Skip if VC != 219
$4DA    $90AC   UNKNOWN  $90AC           ; Unknown 9xxx instruction
$4DC    $DBED   DRW      VB, VE, #D      ; Draw 13-byte sprite at VB, VE
$4DE    $1B48   JP       $B48            ; Jump to B48
$4E0    $375A   SE       V7, #5A         ; Skip if V7 == 90
$4E2    $9FD3   UNKNOWN  $9FD3           ; Unknown 9xxx instruction
$4E4    $1299   JP       $299            ; Jump to 299
$4E6    $F378   UNKNOWN  F378            ; Unknown Fxxx instruction
$4E8    $DA81   DRW      VA, V8, #1      ; Draw 1-byte sprite at VA, V8
$4EA    $545C   UNKNOWN  $545C           ; Unknown 5xxx instruction
$4EC    $DD35   DRW      VD, V3, #5      ; Draw 5-byte sprite at VD, V3
$4EE    $5FD8   UNKNOWN  $5FD8           ; Unknown 5xxx instruction
$4F0    $98E9   UNKNOWN  $98E9           ; Unknown 9xxx instruction
$4F2    $EB04   UNKNOWN  $EB04           ; Unknown Exxx instruction
$4F4    $30DE   SE       V0, #DE         ; Skip if V0 == 222
$4F6    $4B6E   SNE      VB, #6E         ; Skip if VB != 110
$4F8    $5750   SE       V7, V5          ; Skip if V7 == V5
$4FA    $8FB7   SUBN     VF, VB          ; VF = VB - VF, VF = !borrow
$4FC    $9FB8   UNKNOWN  $9FB8           ; Unknown 9xxx instruction
$4FE    $AC4A   LD       I, $C4A         ; Load C4A into I
$500    $3437   SE       V4, #37         ; Skip if V4 == 55
$502    $7C7B   ADD      VC, #7B         ; Add 123 to VC
$504    $3584   SE       V5, #84         ; Skip if V5 == 132
$506    $9345   UNKNOWN  $9345           ; Unknown 9xxx instruction
$508    $CE64   RND      VE, #64         ; VE = random & 64
$50A    $77AC   ADD      V7, #AC         ; Add 172 to V7
$50C    $C6DB   RND      V6, #DB         ; V6 = random & DB
$50E    $8920   LD       V9, V2          ; V9 = V2
$510    $A637   LD       I, $637         ; Load 637 into I
$512    $1053   JP       $053            ; Jump to 053
$514    $C884   RND      V8, #84         ; V8 = random & 84
$516    $B3DA   JP       V0, $3DA        ; Jump to V0 + 3DA
$518    $3BC0   SE       VB, #C0         ; Skip if VB == 192
$51A    $A221   LD       I, $221         ; Load 221 into I
$51C    $6835   LD       V8, #35         ; Load 53 into V8
$51E    $4347   SNE      V3, #47         ; Skip if V3 != 71
$520    $ACDC   LD       I, $CDC         ; Load CDC into I
$522    $06C0   SYS      $6C0            ; System call to 6C0
$524    $99B6   UNKNOWN  $99B6           ; Unknown 9xxx instruction
$526    $8C9C   UNKNOWN  8C9C            ; Unknown 8xxx instruction
$528    $9DF3   UNKNOWN  $9DF3           ; Unknown 9xxx instruction
$52A    $4B5F   SNE      VB, #5F         ; Skip if VB != 95
$52C    $AC01   LD       I, $C01         ; Load C01 into I
$52E    $F965   LD       V9, [I]         ; Load V0-V9 from I
$530    $A847   LD       I, $847         ; Load 847 into I
$532    $956B   UNKNOWN  $956B           ; Unknown 9xxx instruction
$534    $9325   UNKNOWN  $9325           ; Unknown 9xxx instruction
$536    $704F   ADD      V0, #4F         ; Add 79 to V0
$538    $2B6F   CALL     $B6F            ; Call subroutine at B6F
$53A    $DBC7   DRW      VB, VC, #7      ; Draw 7-byte sprite at VB, VC
$53C    $853E   SHL      V5              ; V5 <<= 1, VF = MSB
$53E    $2DBB   CALL     $DBB            ; Call subroutine at DBB
$540    $F0CD   UNKNOWN  F0CD            ; Unknown Fxxx instruction
$542    $7C9F   ADD      VC, #9F         ; Add 159 to VC
$544    $B4AC   JP       V0, $4AC        ; Jump to V0 + 4AC
$546    $BD69   JP       V0, $D69        ; Jump to V0 + D69
$548    $FC0D   UNKNOWN  FC0D            ; Unknown Fxxx instruction
$54A    $2F73   CALL     $F73            ; Call subroutine at F73
$54C    $7DEE   ADD      VD, #EE         ; Add 238 to VD
$54E    $19F4   JP       $9F4            ; Jump to 9F4
$550    $8818   UNKNOWN  8818            ; Unknown 8xxx instruction
$552    $848C   UNKNOWN  848C            ; Unknown 8xxx instruction
$554    $F154   UNKNOWN  F154            ; Unknown Fxxx instruction
$556    $555C   UNKNOWN  $555C           ; Unknown 5xxx instruction
$558    $2F6F   CALL     $F6F            ; Call subroutine at F6F
$55A    $1B6E   JP       $B6E            ; Jump to B6E
$55C    $179D   JP       $79D            ; Jump to 79D
$55E    $744F   ADD      V4, #4F         ; Add 79 to V4
$560    $C298   RND      V2, #98         ; V2 = random & 98
$562    $1D2E   JP       $D2E            ; Jump to D2E
$564    $533A   UNKNOWN  $533A           ; Unknown 5xxx instruction
$566    $CDD6   RND      VD, #D6         ; VD = random & D6
$568    $97FE   UNKNOWN  $97FE           ; Unknown 9xxx instruction
$56A    $AC18   LD       I, $C18         ; Load C18 into I
$56C    $966B   UNKNOWN  $966B           ; Unknown 9xxx instruction
$56E    $2358   CALL     $358            ; Call subroutine at 358
$570    $CC63   RND      VC, #63         ; VC = random & 63
$572    $D5DD   DRW      V5, VD, #D      ; Draw 13-byte sprite at V5, VD
$574    $EF38   UNKNOWN  $EF38           ; Unknown Exxx instruction
$576    $8A98   UNKNOWN  8A98            ; Unknown 8xxx instruction
$578    $5349   UNKNOWN  $5349           ; Unknown 5xxx instruction
$57A    $3AC5   SE       VA, #C5         ; Skip if VA == 197
$57C    $562C   UNKNOWN  $562C           ; Unknown 5xxx instruction
$57E    $EEAE   UNKNOWN  $EEAE           ; Unknown Exxx instruction
$580    $C33B   RND      V3, #3B         ; V3 = random & 3B
$582    $C9BA   RND      V9, #BA         ; V9 = random & BA
$584    $6677   LD       V6, #77         ; Load 119 into V6
$586    $F953   UNKNOWN  F953            ; Unknown Fxxx instruction
$588    $2685   CALL     $685            ; Call subroutine at 685
$58A    $7BB8   ADD      VB, #B8         ; Add 184 to VB
$58C    $A139   LD       I, $139         ; Load 139 into I
$58E    $BD6B   JP       V0, $D6B        ; Jump to V0 + D6B
$590    $66A2   LD       V6, #A2         ; Load 162 into V6
$592    $167E   JP       $67E            ; Jump to 67E
$594    $24D4   CALL     $4D4            ; Call subroutine at 4D4
$596    $262F   CALL     $62F            ; Call subroutine at 62F
$598    $0CA7   SYS      $CA7            ; System call to CA7
$59A    $536B   UNKNOWN  $536B           ; Unknown 5xxx instruction
$59C    $9856   UNKNOWN  $9856           ; Unknown 9xxx instruction
$59E    $1294   JP       $294            ; Jump to 294
$5A0    $7961   ADD      V9, #61         ; Add 97 to V9
$5A2    $DF50   DRW      VF, V5, #0      ; Draw 0-byte sprite at VF, V5
$5A4    $3E35   SE       VE, #35         ; Skip if VE == 53
$5A6    $419D   SNE      V1, #9D         ; Skip if V1 != 157
$5A8    $637A   LD       V3, #7A         ; Load 122 into V3
$5AA    $34DB   SE       V4, #DB         ; Skip if V4 == 219
$5AC    $AEFF   LD       I, $EFF         ; Load EFF into I
$5AE    $5D58   UNKNOWN  $5D58           ; Unknown 5xxx instruction
$5B0    $8B92   AND      VB, V9          ; VB &= V9
$5B2    $35D5   SE       V5, #D5         ; Skip if V5 == 213
$5B4    $32A0   SE       V2, #A0         ; Skip if V2 == 160
$5B6    $EE48   UNKNOWN  $EE48           ; Unknown Exxx instruction
$5B8    $8E94   ADD      VE, V9          ; VE += V9, VF = carry
$5BA    $BBF3   JP       V0, $BF3        ; Jump to V0 + BF3
$5BC    $77FC   ADD      V7, #FC         ; Add 252 to V7
$5BE    $BDA4   JP       V0, $DA4        ; Jump to V0 + DA4
$5C0    $BE1A   JP       V0, $E1A        ; Jump to V0 + E1A
$5C2    $EB37   UNKNOWN  $EB37           ; Unknown Exxx instruction
$5C4    $A7B1   LD       I, $7B1         ; Load 7B1 into I
$5C6    $D897   DRW      V8, V9, #7      ; Draw 7-byte sprite at V8, V9
$5C8    $80C2   AND      V0, VC          ; V0 &= VC
$5CA    $B76E   JP       V0, $76E        ; Jump to V0 + 76E
$5CC    $781E   ADD      V8, #1E         ; Add 30 to V8
$5CE    $CCF5   RND      VC, #F5         ; VC = random & F5
$5D0    $DF1A   DRW      VF, V1, #A      ; Draw 10-byte sprite at VF, V1
$5D2    $B239   JP       V0, $239        ; Jump to V0 + 239
$5D4    $87B6   SHR      V7              ; V7 >>= 1, VF = LSB
$5D6    $7C4B   ADD      VC, #4B         ; Add 75 to VC
$5D8    $0FE6   SYS      $FE6            ; System call to FE6
$5DA    $C194   RND      V1, #94         ; V1 = random & 94
$5DC    $6555   LD       V5, #55         ; Load 85 into V5
$5DE    $9F2B   UNKNOWN  $9F2B           ; Unknown 9xxx instruction
$5E0    $F099   UNKNOWN  F099            ; Unknown Fxxx instruction
$5E2    $5D9D   UNKNOWN  $5D9D           ; Unknown 5xxx instruction
$5E4    $FC8F   UNKNOWN  FC8F            ; Unknown Fxxx instruction
$5E6    $9F12   UNKNOWN  $9F12           ; Unknown 9xxx instruction
$5E8    $2E56   CALL     $E56            ; Call subroutine at E56
$5EA    $5385   UNKNOWN  $5385           ; Unknown 5xxx instruction
$5EC    $8EA8   UNKNOWN  8EA8            ; Unknown 8xxx instruction
$5EE    $9487   UNKNOWN  $9487           ; Unknown 9xxx instruction
$5F0    $3CFF   SE       VC, #FF         ; Skip if VC == 255
$5F2    $D9DF   DRW      V9, VD, #F      ; Draw 15-byte sprite at V9, VD
$5F4    $0515   SYS      $515            ; System call to 515
$5F6    $5984   UNKNOWN  $5984           ; Unknown 5xxx instruction
$5F8    $33F8   SE       V3, #F8         ; Skip if V3 == 248
$5FA    $0562   SYS      $562            ; System call to 562
$5FC    $E888   UNKNOWN  $E888           ; Unknown Exxx instruction
$5FE    $E5EF   UNKNOWN  $E5EF           ; Unknown Exxx instruction
$600    $DA93   DRW      VA, V9, #3      ; Draw 3-byte sprite at VA, V9
$602    $C02C   RND      V0, #2C         ; V0 = random & 2C
$604    $69BE   LD       V9, #BE         ; Load 190 into V9
$606    $B229   JP       V0, $229        ; Jump to V0 + 229
$608    $1D3C   JP       $D3C            ; Jump to D3C
$60A    $120A   JP       $20A            ; Jump to 20A
$60C    $A544   LD       I, $544         ; Load 544 into I
$60E    $340C   SE       V4, #0C         ; Skip if V4 == 12
$610    $655F   LD       V5, #5F         ; Load 95 into V5
$612    $4924   SNE      V9, #24         ; Skip if V9 != 36
$614    $498B   SNE      V9, #8B         ; Skip if V9 != 139
$616    $2869   CALL     $869            ; Call subroutine at 869
$618    $7F9E   ADD      VF, #9E         ; Add 158 to VF
$61A    $2096   CALL     $096            ; Call subroutine at 096
$61C    $2C9C   CALL     $C9C            ; Call subroutine at C9C
$61E    $618F   LD       V1, #8F         ; Load 143 into V1
$620    $100F   JP       $00F            ; Jump to 00F
$622    $5DC4   UNKNOWN  $5DC4           ; Unknown 5xxx instruction
$624    $23C7   CALL     $3C7            ; Call subroutine at 3C7
$626    $750A   ADD      V5, #0A         ; Add 10 to V5
$628    $5C15   UNKNOWN  $5C15           ; Unknown 5xxx instruction
$62A    $95E0   SNE      V5, VE          ; Skip if V5 != VE
$62C    $D00D   DRW      V0, V0, #D      ; Draw 13-byte sprite at V0, V0
$62E    $4310   SNE      V3, #10         ; Skip if V3 != 16
$630    $838C   UNKNOWN  838C            ; Unknown 8xxx instruction
$632    $9FB9   UNKNOWN  $9FB9           ; Unknown 9xxx instruction
$634    $757C   ADD      V5, #7C         ; Add 124 to V5
$636    $843D   UNKNOWN  843D            ; Unknown 8xxx instruction
$638    $A549   LD       I, $549         ; Load 549 into I
$63A    $A92F   LD       I, $92F         ; Load 92F into I
$63C    $CEC6   RND      VE, #C6         ; VE = random & C6
$63E    $690B   LD       V9, #0B         ; Load 11 into V9
$640    $B8CC   JP       V0, $8CC        ; Jump to V0 + 8CC
$642    $1B2E   JP       $B2E            ; Jump to B2E
$644    $05F9   SYS      $5F9            ; System call to 5F9
$646    $3724   SE       V7, #24         ; Skip if V7 == 36
$648    $5606   UNKNOWN  $5606           ; Unknown 5xxx instruction
$64A    $D48A   DRW      V4, V8, #A      ; Draw 10-byte sprite at V4, V8
$64C    $6204   LD       V2, #04         ; Load 4 into V2
$64E    $36AA   SE       V6, #AA         ; Skip if V6 == 170
$650    $158F   JP       $58F            ; Jump to 58F
$652    $A4A8   LD       I, $4A8         ; Load 4A8 into I
$654    $C8D8   RND      V8, #D8         ; V8 = random & D8
$656    $F6B8   UNKNOWN  F6B8            ; Unknown Fxxx instruction
$658    $22FE   CALL     $2FE            ; Call subroutine at 2FE
$65A    $7C78   ADD      VC, #78         ; Add 120 to VC
$65C    $2E4A   CALL     $E4A            ; Call subroutine at E4A
$65E    $BC84   JP       V0, $C84        ; Jump to V0 + C84
$660    $AEB4   LD       I, $EB4         ; Load EB4 into I
$662    $54F8   UNKNOWN  $54F8           ; Unknown 5xxx instruction
$664    $8B3F   UNKNOWN  8B3F            ; Unknown 8xxx instruction
$666    $6732   LD       V7, #32         ; Load 50 into V7
$668    $867A   UNKNOWN  867A            ; Unknown 8xxx instruction
$66A    $1304   JP       $304            ; Jump to 304
$66C    $15CB   JP       $5CB            ; Jump to 5CB
$66E    $D700   DRW      V7, V0, #0      ; Draw 0-byte sprite at V7, V0
$670    $8409   UNKNOWN  8409            ; Unknown 8xxx instruction
$672    $8B15   SUB      VB, V1          ; VB -= V1, VF = !borrow
$674    $4691   SNE      V6, #91         ; Skip if V6 != 145
$676    $08E8   SYS      $8E8            ; System call to 8E8
$678    $4878   SNE      V8, #78         ; Skip if V8 != 120
$67A    $0A2B   SYS      $A2B            ; System call to A2B
$67C    $A8F6   LD       I, $8F6         ; Load 8F6 into I
$67E    $CE7B   RND      VE, #7B         ; VE = random & 7B
$680    $D163   DRW      V1, V6, #3      ; Draw 3-byte sprite at V1, V6
$682    $3251   SE       V2, #51         ; Skip if V2 == 81
$684    $F5E9   UNKNOWN  F5E9            ; Unknown Fxxx instruction
$686    $EEF5   UNKNOWN  $EEF5           ; Unknown Exxx instruction
$688    $FFD5   UNKNOWN  FFD5            ; Unknown Fxxx instruction
$68A    $0F47   SYS      $F47            ; System call to F47
$68C    $F9CC   UNKNOWN  F9CC            ; Unknown Fxxx instruction
$68E    $A521   LD       I, $521         ; Load 521 into I
$690    $858B   UNKNOWN  858B            ; Unknown 8xxx instruction
$692    $2289   CALL     $289            ; Call subroutine at 289
$694    $12D2   JP       $2D2            ; Jump to 2D2
$696    $97E8   UNKNOWN  $97E8           ; Unknown 9xxx instruction
$698    $7B6A   ADD      VB, #6A         ; Add 106 to VB
$69A    $265E   CALL     $65E            ; Call subroutine at 65E
$69C    $FE05   UNKNOWN  FE05            ; Unknown Fxxx instruction
$69E    $5E4D   UNKNOWN  $5E4D           ; Unknown 5xxx instruction
$6A0    $7DC8   ADD      VD, #C8         ; Add 200 to VD
$6A2    $312A   SE       V1, #2A         ; Skip if V1 == 42
$6A4    $4092   SNE      V0, #92         ; Skip if V0 != 146
$6A6    $E920   UNKNOWN  $E920           ; Unknown Exxx instruction
$6A8    $CF25   RND      VF, #25         ; VF = random & 25
$6AA    $75A5   ADD      V5, #A5         ; Add 165 to V5
$6AC    $5E55   UNKNOWN  $5E55           ; Unknown 5xxx instruction
$6AE    $0E03   SYS      $E03            ; System call to E03
$6B0    $6E42   LD       VE, #42         ; Load 66 into VE
$6B2    $450F   SNE      V5, #0F         ; Skip if V5 != 15
$6B4    $8C85   SUB      VC, V8          ; VC -= V8, VF = !borrow
$6B6    $996B   UNKNOWN  $996B           ; Unknown 9xxx instruction
$6B8    $A612   LD       I, $612         ; Load 612 into I
$6BA    $1A65   JP       $A65            ; Jump to A65
$6BC    $D9D7   DRW      V9, VD, #7      ; Draw 7-byte sprite at V9, VD
$6BE    $21EB   CALL     $1EB            ; Call subroutine at 1EB
$6C0    $47CE   SNE      V7, #CE         ; Skip if V7 != 206
$6C2    $42DF   SNE      V2, #DF         ; Skip if V2 != 223
$6C4    $AEB1   LD       I, $EB1         ; Load EB1 into I
$6C6    $1648   JP       $648            ; Jump to 648
$6C8    $5A65   UNKNOWN  $5A65           ; Unknown 5xxx instruction
$6CA    $1DF3   JP       $DF3            ; Jump to DF3
$6CC    $72A0   ADD      V2, #A0         ; Add 160 to V2
$6CE    $3C97   SE       VC, #97         ; Skip if VC == 151
$6D0    $7AD9   ADD      VA, #D9         ; Add 217 to VA
$6D2    $7640   ADD      V6, #40         ; Add 64 to V6
$6D4    $04B5   SYS      $4B5            ; System call to 4B5
$6D6    $2DB4   CALL     $DB4            ; Call subroutine at DB4
$6D8    $3F3C   SE       VF, #3C         ; Skip if VF == 60
$6DA    $D9E1   DRW      V9, VE, #1      ; Draw 1-byte sprite at V9, VE
$6DC    $7D2A   ADD      VD, #2A         ; Add 42 to VD
$6DE    $D2C1   DRW      V2, VC, #1      ; Draw 1-byte sprite at V2, VC
$6E0    $5E3A   UNKNOWN  $5E3A           ; Unknown 5xxx instruction
$6E2    $A2A8   LD       I, $2A8         ; Load 2A8 into I
$6E4    $2559   CALL     $559            ; Call subroutine at 559
$6E6    $1064   JP       $064            ; Jump to 064
$6E8    $6074   LD       V0, #74         ; Load 116 into V0
$6EA    $F72C   UNKNOWN  F72C            ; Unknown Fxxx instruction
$6EC    $E892   UNKNOWN  $E892           ; Unknown Exxx instruction
$6EE    $18B0   JP       $8B0            ; Jump to 8B0
$6F0    $8354   ADD      V3, V5          ; V3 += V5, VF = carry
$6F2    $A583   LD       I, $583         ; Load 583 into I
$6F4    $BB17   JP       V0, $B17        ; Jump to V0 + B17
$6F6    $7EF2   ADD      VE, #F2         ; Add 242 to VE
$6F8    $4FB1   SNE      VF, #B1         ; Skip if VF != 177
$6FA    $02C8   SYS      $2C8            ; System call to 2C8
$6FC    $2572   CALL     $572            ; Call subroutine at 572
$6FE    $5E88   UNKNOWN  $5E88           ; Unknown 5xxx instruction
$700    $C011   RND      V0, #11         ; V0 = random & 11
$702    $1164   JP       $164            ; Jump to 164
$704    $39FF   SE       V9, #FF         ; Skip if V9 == 255
$706    $38E1   SE       V8, #E1         ; Skip if V8 == 225
$708    $D164   DRW      V1, V6, #4      ; Draw 4-byte sprite at V1, V6
$70A    $B753   JP       V0, $753        ; Jump to V0 + 753
$70C    $4573   SNE      V5, #73         ; Skip if V5 != 115
$70E    $9CFE   UNKNOWN  $9CFE           ; Unknown 9xxx instruction
$710    $3FAD   SE       VF, #AD         ; Skip if VF == 173
$712    $0053   SYS      $053            ; System call to 053
$714    $22B6   CALL     $2B6            ; Call subroutine at 2B6
$716    $E614   UNKNOWN  $E614           ; Unknown Exxx instruction
$718    $128B   JP       $28B            ; Jump to 28B
$71A    $2EE1   CALL     $EE1            ; Call subroutine at EE1
$71C    $381D   SE       V8, #1D         ; Skip if V8 == 29
$71E    $F964   UNKNOWN  F964            ; Unknown Fxxx instruction
$720    $E0B1   UNKNOWN  $E0B1           ; Unknown Exxx instruction
$722    $5CE3   UNKNOWN  $5CE3           ; Unknown 5xxx instruction
$724    $0063   SYS      $063            ; System call to 063
$726    $254B   CALL     $54B            ; Call subroutine at 54B
$728    $C35F   RND      V3, #5F         ; V3 = random & 5F
$72A    $EFFF   UNKNOWN  $EFFF           ; Unknown Exxx instruction
$72C    $519F   UNKNOWN  $519F           ; Unknown 5xxx instruction
$72E    $72FE   ADD      V2, #FE         ; Add 254 to V2
$730    $652B   LD       V5, #2B         ; Load 43 into V5
$732    $BEFB   JP       V0, $EFB        ; Jump to V0 + EFB
$734    $20F4   CALL     $0F4            ; Call subroutine at 0F4
$736    $AD8F   LD       I, $D8F         ; Load D8F into I
$738    $7469   ADD      V4, #69         ; Add 105 to V4
$73A    $0B30   SYS      $B30            ; System call to B30
$73C    $5519   UNKNOWN  $5519           ; Unknown 5xxx instruction
$73E    $A8DB   LD       I, $8DB         ; Load 8DB into I
$740    $4FB3   SNE      VF, #B3         ; Skip if VF != 179
$742    $1C6F   JP       $C6F            ; Jump to C6F
$744    $BEC6   JP       V0, $EC6        ; Jump to V0 + EC6
$746    $E02B   UNKNOWN  $E02B           ; Unknown Exxx instruction
$748    $1275   JP       $275            ; Jump to 275
$74A    $D9A0   DRW      V9, VA, #0      ; Draw 0-byte sprite at V9, VA
$74C    $3EC1   SE       VE, #C1         ; Skip if VE == 193
$74E    $6085   LD       V0, #85         ; Load 133 into V0
$750    $C77B   RND      V7, #7B         ; V7 = random & 7B
$752    $23BB   CALL     $3BB            ; Call subroutine at 3BB
$754    $1A83   JP       $A83            ; Jump to A83
$756    $0E46   SYS      $E46            ; System call to E46
$758    $295B   CALL     $95B            ; Call subroutine at 95B
$75A    $D5F8   DRW      V5, VF, #8      ; Draw 8-byte sprite at V5, VF
$75C    $A01C   LD       I, $01C         ; Load 01C into I
$75E    $C355   RND      V3, #55         ; V3 = random & 55
$760    $259D   CALL     $59D            ; Call subroutine at 59D
$762    $2770   CALL     $770            ; Call subroutine at 770
$764    $7CC8   ADD      VC, #C8         ; Add 200 to VC
$766    $F145   UNKNOWN  F145            ; Unknown Fxxx instruction
$768    $B311   JP       V0, $311        ; Jump to V0 + 311
$76A    $35B1   SE       V5, #B1         ; Skip if V5 == 177
$76C    $6537   LD       V5, #37         ; Load 55 into V5
$76E    $D97D   DRW      V9, V7, #D      ; Draw 13-byte sprite at V9, V7
$770    $3A20   SE       VA, #20         ; Skip if VA == 32
$772    $93FE   UNKNOWN  $93FE           ; Unknown 9xxx instruction
$774    $B325   JP       V0, $325        ; Jump to V0 + 325
$776    $3F61   SE       VF, #61         ; Skip if VF == 97
$778    $5301   UNKNOWN  $5301           ; Unknown 5xxx instruction
$77A    $6C5A   LD       VC, #5A         ; Load 90 into VC
$77C    $C3ED   RND      V3, #ED         ; V3 = random & ED
$77E    $B93E   JP       V0, $93E        ; Jump to V0 + 93E
$780    $2D0E   CALL     $D0E            ; Call subroutine at D0E
$782    $FF8E   UNKNOWN  FF8E            ; Unknown Fxxx instruction
$784    $F45C   UNKNOWN  F45C            ; Unknown Fxxx instruction
$786    $2D42   CALL     $D42            ; Call subroutine at D42
$788    $9E44   UNKNOWN  $9E44           ; Unknown 9xxx instruction
$78A    $FEA6   UNKNOWN  FEA6            ; Unknown Fxxx instruction
$78C    $0CDF   SYS      $CDF            ; System call to CDF
$78E    $6210   LD       V2, #10         ; Load 16 into V2
$790    $DDA8   DRW      VD, VA, #8      ; Draw 8-byte sprite at VD, VA
$792    $2BA5   CALL     $BA5            ; Call subroutine at BA5
$794    $6353   LD       V3, #53         ; Load 83 into V3
$796    $4295   SNE      V2, #95         ; Skip if V2 != 149
$798    $99EE   UNKNOWN  $99EE           ; Unknown 9xxx instruction
$79A    $72FC   ADD      V2, #FC         ; Add 252 to V2
$79C    $9D61   UNKNOWN  $9D61           ; Unknown 9xxx instruction
$79E    $5262   UNKNOWN  $5262           ; Unknown 5xxx instruction
$7A0    $DDFD   DRW      VD, VF, #D      ; Draw 13-byte sprite at VD, VF
$7A2    $FBCD   UNKNOWN  FBCD            ; Unknown Fxxx instruction
$7A4    $A6F5   LD       I, $6F5         ; Load 6F5 into I
$7A6    $5560   SE       V5, V6          ; Skip if V5 == V6
$7A8    $7147   ADD      V1, #47         ; Add 71 to V1
$7AA    $7CAA   ADD      VC, #AA         ; Add 170 to VC
$7AC    $AF48   LD       I, $F48         ; Load F48 into I
$7AE    $7175   ADD      V1, #75         ; Add 117 to V1
$7B0    $8EE5   SUB      VE, VE          ; VE -= VE, VF = !borrow
$7B2    $C45A   RND      V4, #5A         ; V4 = random & 5A
$7B4    $3837   SE       V8, #37         ; Skip if V8 == 55
$7B6    $3719   SE       V7, #19         ; Skip if V7 == 25
$7B8    $A8DA   LD       I, $8DA         ; Load 8DA into I
$7BA    $BE46   JP       V0, $E46        ; Jump to V0 + E46
$7BC    $88B8   UNKNOWN  88B8            ; Unknown 8xxx instruction
$7BE    $8126   SHR      V1              ; V1 >>= 1, VF = LSB
$7C0    $3640   SE       V6, #40         ; Skip if V6 == 64
$7C2    $9C80   SNE      VC, V8          ; Skip if VC != V8
$7C4    $F80A   LD       V8, K           ; Wait for key press, store in V8
$7C6    $B704   JP       V0, $704        ; Jump to V0 + 704
$7C8    $C85A   RND      V8, #5A         ; V8 = random & 5A
$7CA    $71BA   ADD      V1, #BA         ; Add 186 to V1
$7CC    $EDF0   UNKNOWN  $EDF0           ; Unknown Exxx instruction
$7CE    $5AC6   UNKNOWN  $5AC6           ; Unknown 5xxx instruction
$7D0    $2D1B   CALL     $D1B            ; Call subroutine at D1B
$7D2    $A36C   LD       I, $36C         ; Load 36C into I
$7D4    $F2EF   UNKNOWN  F2EF            ; Unknown Fxxx instruction
$7D6    $67ED   LD       V7, #ED         ; Load 237 into V7
$7D8    $2C79   CALL     $C79            ; Call subroutine at C79
$7DA    $3DC0   SE       VD, #C0         ; Skip if VD == 192
$7DC    $39F2   SE       V9, #F2         ; Skip if V9 == 242
$7DE    $BD53   JP       V0, $D53        ; Jump to V0 + D53
$7E0    $5C91   UNKNOWN  $5C91           ; Unknown 5xxx instruction
$7E2    $C800   RND      V8, #00         ; V8 = random & 00
$7E4    $DFB8   DRW      VF, VB, #8      ; Draw 8-byte sprite at VF, VB
$7E6    $036A   SYS      $36A            ; System call to 36A
$7E8    $0924   SYS      $924            ; System call to 924
$7EA    $69A9   LD       V9, #A9         ; Load 169 into V9
$7EC    $022F   SYS      $22F            ; System call to 22F
$7EE    $9C23   UNKNOWN  $9C23           ; Unknown 9xxx instruction
$7F0    $9288   UNKNOWN  $9288           ; Unknown 9xxx instruction
$7F2    $83B4   ADD      V3, VB          ; V3 += VB, VF = carry
$7F4    $2E6A   CALL     $E6A            ; Call subroutine at E6A
$7F6    $1FB4   JP       $FB4            ; Jump to FB4
$7F8    $8BA1   OR       VB, VA          ; VB |= VA
$7FA    $DF14   DRW      VF, V1, #4      ; Draw 4-byte sprite at VF, V1
$7FC    $5EA9   UNKNOWN  $5EA9           ; Unknown 5xxx instruction
$7FE    $6EA0   LD       VE, #A0         ; Load 160 into VE
$800    $9D21   UNKNOWN  $9D21           ; Unknown 9xxx instruction
$802    $2E79   CALL     $E79            ; Call subroutine at E79
$804    $3714   SE       V7, #14         ; Skip if V7 == 20
$806    $60C6   LD       V0, #C6         ; Load 198 into V0
$808    $CDCE   RND      VD, #CE         ; VD = random & CE
$80A    $00EF   SYS      $0EF            ; System call to 0EF
$80C    $7419   ADD      V4, #19         ; Add 25 to V4
$80E    $ACB9   LD       I, $CB9         ; Load CB9 into I
$810    $2F0F   CALL     $F0F            ; Call subroutine at F0F
$812    $307D   SE       V0, #7D         ; Skip if V0 == 125
$814    $0104   SYS      $104            ; System call to 104
$816    $2F67   CALL     $F67            ; Call subroutine at F67
$818    $5E60   SE       VE, V6          ; Skip if VE == V6
$81A    $F0AB   UNKNOWN  F0AB            ; Unknown Fxxx instruction
$81C    $0505   SYS      $505            ; System call to 505
$81E    $D1FE   DRW      V1, VF, #E      ; Draw 14-byte sprite at V1, VF
$820    $E396   UNKNOWN  $E396           ; Unknown Exxx instruction
$822    $10EC   JP       $0EC            ; Jump to 0EC
$824    $0356   SYS      $356            ; System call to 356
$826    $4459   SNE      V4, #59         ; Skip if V4 != 89
$828    $2DB8   CALL     $DB8            ; Call subroutine at DB8
$82A    $51B2   UNKNOWN  $51B2           ; Unknown 5xxx instruction
$82C    $E9B2   UNKNOWN  $E9B2           ; Unknown Exxx instruction
$82E    $BB93   JP       V0, $B93        ; Jump to V0 + B93
$830    $FF51   UNKNOWN  FF51            ; Unknown Fxxx instruction
$832    $9675   UNKNOWN  $9675           ; Unknown 9xxx instruction
$834    $3C5F   SE       VC, #5F         ; Skip if VC == 95
$836    $05F9   SYS      $5F9            ; System call to 5F9
$838    $582A   UNKNOWN  $582A           ; Unknown 5xxx instruction
$83A    $FAD1   UNKNOWN  FAD1            ; Unknown Fxxx instruction
$83C    $4D90   SNE      VD, #90         ; Skip if VD != 144
$83E    $2FED   CALL     $FED            ; Call subroutine at FED
$840    $4E7E   SNE      VE, #7E         ; Skip if VE != 126
$842    $E15C   UNKNOWN  $E15C           ; Unknown Exxx instruction
$844    $C5DC   RND      V5, #DC         ; V5 = random & DC
$846    $67F4   LD       V7, #F4         ; Load 244 into V7
$848    $2E03   CALL     $E03            ; Call subroutine at E03
$84A    $5C86   UNKNOWN  $5C86           ; Unknown 5xxx instruction
$84C    $9ED4   UNKNOWN  $9ED4           ; Unknown 9xxx instruction
$84E    $9F21   UNKNOWN  $9F21           ; Unknown 9xxx instruction
$850    $3F40   SE       VF, #40         ; Skip if VF == 64
$852    $7CB1   ADD      VC, #B1         ; Add 177 to VC
$854    $BB88   JP       V0, $B88        ; Jump to V0 + B88
$856    $971D   UNKNOWN  $971D           ; Unknown 9xxx instruction
$858    $BD84   JP       V0, $D84        ; Jump to V0 + D84
$85A    $A108   LD       I, $108         ; Load 108 into I
$85C    $8835   SUB      V8, V3          ; V8 -= V3, VF = !borrow
$85E    $4013   SNE      V0, #13         ; Skip if V0 != 19
$860    $92B6   UNKNOWN  $92B6           ; Unknown 9xxx instruction
$862    $F019   UNKNOWN  F019            ; Unknown Fxxx instruction
$864    $118A   JP       $18A            ; Jump to 18A
$866    $D103   DRW      V1, V0, #3      ; Draw 3-byte sprite at V1, V0
$868    $C5C4   RND      V5, #C4         ; V5 = random & C4
$86A    $ADE4   LD       I, $DE4         ; Load DE4 into I
$86C    $EFD0   UNKNOWN  $EFD0           ; Unknown Exxx instruction
$86E    $98CE   UNKNOWN  $98CE           ; Unknown 9xxx instruction
$870    $BD9D   JP       V0, $D9D        ; Jump to V0 + D9D
$872    $0621   SYS      $621            ; System call to 621
$874    $9734   UNKNOWN  $9734           ; Unknown 9xxx instruction
$876    $684B   LD       V8, #4B         ; Load 75 into V8
$878    $1C0F   JP       $C0F            ; Jump to C0F
$87A    $0FBB   SYS      $FBB            ; System call to FBB
$87C    $B738   JP       V0, $738        ; Jump to V0 + 738
$87E    $483B   SNE      V8, #3B         ; Skip if V8 != 59
$880    $F0A8   UNKNOWN  F0A8            ; Unknown Fxxx instruction
$882    $612E   LD       V1, #2E         ; Load 46 into V1
$884    $6191   LD       V1, #91         ; Load 145 into V1
$886    $A4E5   LD       I, $4E5         ; Load 4E5 into I
$888    $1175   JP       $175            ; Jump to 175
$88A    $FEEC   UNKNOWN  FEEC            ; Unknown Fxxx instruction
$88C    $0127   SYS      $127            ; System call to 127
$88E    $B39C   JP       V0, $39C        ; Jump to V0 + 39C
$890    $DE28   DRW      VE, V2, #8      ; Draw 8-byte sprite at VE, V2
$892    $0472   SYS      $472            ; System call to 472
$894    $D21C   DRW      V2, V1, #C      ; Draw 12-byte sprite at V2, V1
$896    $3764   SE       V7, #64         ; Skip if V7 == 100
$898    $F43B   UNKNOWN  F43B            ; Unknown Fxxx instruction
$89A    $E29F   UNKNOWN  $E29F           ; Unknown Exxx instruction
$89C    $4218   SNE      V2, #18         ; Skip if V2 != 24
$89E    $CB00   RND      VB, #00         ; VB = random & 00
$8A0    $9969   UNKNOWN  $9969           ; Unknown 9xxx instruction
$8A2    $D54E   DRW      V5, V4, #E      ; Draw 14-byte sprite at V5, V4
$8A4    $1E86   JP       $E86            ; Jump to E86
$8A6    $36C4   SE       V6, #C4         ; Skip if V6 == 196
$8A8    $EC37   UNKNOWN  $EC37           ; Unknown Exxx instruction
$8AA    $FFCC   UNKNOWN  FFCC            ; Unknown Fxxx instruction
$8AC    $95F9   UNKNOWN  $95F9           ; Unknown 9xxx instruction
$8AE    $5CFC   UNKNOWN  $5CFC           ; Unknown 5xxx instruction
$8B0    $AC71   LD       I, $C71         ; Load C71 into I
$8B2    $766E   ADD      V6, #6E         ; Add 110 to V6
$8B4    $C704   RND      V7, #04         ; V7 = random & 04
$8B6    $1147   JP       $147            ; Jump to 147
$8B8    $93A7   UNKNOWN  $93A7           ; Unknown 9xxx instruction
$8BA    $7CB5   ADD      VC, #B5         ; Add 181 to VC
$8BC    $4FA6   SNE      VF, #A6         ; Skip if VF != 166
$8BE    $55B1   UNKNOWN  $55B1           ; Unknown 5xxx instruction
$8C0    $8779   UNKNOWN  8779            ; Unknown 8xxx instruction
$8C2    $7A66   ADD      VA, #66         ; Add 102 to VA
$8C4    $FB46   UNKNOWN  FB46            ; Unknown Fxxx instruction
$8C6    $84DB   UNKNOWN  84DB            ; Unknown 8xxx instruction
$8C8    $E7E9   UNKNOWN  $E7E9           ; Unknown Exxx instruction
$8CA    $E371   UNKNOWN  $E371           ; Unknown Exxx instruction
$8CC    $3259   SE       V2, #59         ; Skip if V2 == 89
$8CE    $E334   UNKNOWN  $E334           ; Unknown Exxx instruction
$8D0    $3C1E   SE       VC, #1E         ; Skip if VC == 30
$8D2    $79DA   ADD      V9, #DA         ; Add 218 to V9
$8D4    $9719   UNKNOWN  $9719           ; Unknown 9xxx instruction
$8D6    $9B7C   UNKNOWN  $9B7C           ; Unknown 9xxx instruction
$8D8    $9B49   UNKNOWN  $9B49           ; Unknown 9xxx instruction
$8DA    $F601   UNKNOWN  F601            ; Unknown Fxxx instruction
$8DC    $7A74   ADD      VA, #74         ; Add 116 to VA
$8DE    $BC73   JP       V0, $C73        ; Jump to V0 + C73
$8E0    $226C   CALL     $26C            ; Call subroutine at 26C
$8E2    $65FD   LD       V5, #FD         ; Load 253 into V5
$8E4    $B9A3   JP       V0, $9A3        ; Jump to V0 + 9A3
$8E6    $04F3   SYS      $4F3            ; System call to 4F3
$8E8    $4571   SNE      V5, #71         ; Skip if V5 != 113
$8EA    $784C   ADD      V8, #4C         ; Add 76 to V8
$8EC    $B922   JP       V0, $922        ; Jump to V0 + 922
$8EE    $5664   UNKNOWN  $5664           ; Unknown 5xxx instruction
$8F0    $6480   LD       V4, #80         ; Load 128 into V4
$8F2    $E7C6   UNKNOWN  $E7C6           ; Unknown Exxx instruction
$8F4    $C6DA   RND      V6, #DA         ; V6 = random & DA
$8F6    $6539   LD       V5, #39         ; Load 57 into V5
$8F8    $A4DA   LD       I, $4DA         ; Load 4DA into I
$8FA    $DD81   DRW      VD, V8, #1      ; Draw 1-byte sprite at VD, V8
$8FC    $6948   LD       V9, #48         ; Load 72 into V9
$8FE    $02DC   SYS      $2DC            ; System call to 2DC
$900    $6B7B   LD       VB, #7B         ; Load 123 into VB
$902    $1F0D   JP       $F0D            ; Jump to F0D
$904    $1797   JP       $797            ; Jump to 797
$906    $5217   UNKNOWN  $5217           ; Unknown 5xxx instruction
$908    $A1E3   LD       I, $1E3         ; Load 1E3 into I
$90A    $4D51   SNE      VD, #51         ; Skip if VD != 81
$90C    $B2A1   JP       V0, $2A1        ; Jump to V0 + 2A1
$90E    $AB1D   LD       I, $B1D         ; Load B1D into I
$910    $56D1   UNKNOWN  $56D1           ; Unknown 5xxx instruction
$912    $72DC   ADD      V2, #DC         ; Add 220 to V2
$914    $633F   LD       V3, #3F         ; Load 63 into V3
$916    $8568   UNKNOWN  8568            ; Unknown 8xxx instruction
$918    $64AF   LD       V4, #AF         ; Load 175 into V4
$91A    $C94E   RND      V9, #4E         ; V9 = random & 4E
$91C    $487F   SNE      V8, #7F         ; Skip if V8 != 127
$91E    $864B   UNKNOWN  864B            ; Unknown 8xxx instruction
$920    $84D5   SUB      V4, VD          ; V4 -= VD, VF = !borrow
$922    $450B   SNE      V5, #0B         ; Skip if V5 != 11
$924    $0A40   SYS      $A40            ; System call to A40
$926    $CA02   RND      VA, #02         ; VA = random & 02
$928    $E037   UNKNOWN  $E037           ; Unknown Exxx instruction
$92A    $ED1B   UNKNOWN  $ED1B           ; Unknown Exxx instruction
$92C    $49FC   SNE      V9, #FC         ; Skip if V9 != 252
$92E    $CEA9   RND      VE, #A9         ; VE = random & A9
$930    $B3E5   JP       V0, $3E5        ; Jump to V0 + 3E5
$932    $43AD   SNE      V3, #AD         ; Skip if V3 != 173
$934    $CE0F   RND      VE, #0F         ; VE = random & 0F
$936    $4626   SNE      V6, #26         ; Skip if V6 != 38
$938    $2D20   CALL     $D20            ; Call subroutine at D20
$93A    $0E04   SYS      $E04            ; System call to E04
$93C    $D450   DRW      V4, V5, #0      ; Draw 0-byte sprite at V4, V5
$93E    $AD0E   LD       I, $D0E         ; Load D0E into I
$940    $70F9   ADD      V0, #F9         ; Add 249 to V0
$942    $2035   CALL     $035            ; Call subroutine at 035
$944    $B46B   JP       V0, $46B        ; Jump to V0 + 46B
$946    $CBE9   RND      VB, #E9         ; VB = random & E9
$948    $10A0   JP       $0A0            ; Jump to 0A0
$94A    $A75F   LD       I, $75F         ; Load 75F into I
$94C    $FC64   UNKNOWN  FC64            ; Unknown Fxxx instruction
$94E    $437B   SNE      V3, #7B         ; Skip if V3 != 123
$950    $2A35   CALL     $A35            ; Call subroutine at A35
$952    $1ACF   JP       $ACF            ; Jump to ACF
$954    $EDB0   UNKNOWN  $EDB0           ; Unknown Exxx instruction
$956    $F41C   UNKNOWN  F41C            ; Unknown Fxxx instruction
$958    $3883   SE       V8, #83         ; Skip if V8 == 131
$95A    $8286   SHR      V2              ; V2 >>= 1, VF = LSB
$95C    $30F9   SE       V0, #F9         ; Skip if V0 == 249
$95E    $835E   SHL      V3              ; V3 <<= 1, VF = MSB
$960    $A5BB   LD       I, $5BB         ; Load 5BB into I
$962    $8220   LD       V2, V2          ; V2 = V2
$964    $3482   SE       V4, #82         ; Skip if V4 == 130
$966    $5F09   UNKNOWN  $5F09           ; Unknown 5xxx instruction
$968    $C2C5   RND      V2, #C5         ; V2 = random & C5
$96A    $23E3   CALL     $3E3            ; Call subroutine at 3E3
$96C    $A4D8   LD       I, $4D8         ; Load 4D8 into I
$96E    $9CAC   UNKNOWN  $9CAC           ; Unknown 9xxx instruction
$970    $0D2C   SYS      $D2C            ; System call to D2C
$972    $F221   UNKNOWN  F221            ; Unknown Fxxx instruction
$974    $83DB   UNKNOWN  83DB            ; Unknown 8xxx instruction
$976    $DAF2   DRW      VA, VF, #2      ; Draw 2-byte sprite at VA, VF
$978    $2E59   CALL     $E59            ; Call subroutine at E59
$97A    $9462   UNKNOWN  $9462           ; Unknown 9xxx instruction
$97C    $A2D7   LD       I, $2D7         ; Load 2D7 into I
$97E    $0A97   SYS      $A97            ; System call to A97
$980    $6E77   LD       VE, #77         ; Load 119 into VE
$982    $D418   DRW      V4, V1, #8      ; Draw 8-byte sprite at V4, V1
$984    $8B8E   SHL      VB              ; VB <<= 1, VF = MSB
$986    $E77C   UNKNOWN  $E77C           ; Unknown Exxx instruction
$988    $4D43   SNE      VD, #43         ; Skip if VD != 67
$98A    $EFBF   UNKNOWN  $EFBF           ; Unknown Exxx instruction
$98C    $43CA   SNE      V3, #CA         ; Skip if V3 != 202
$98E    $92F0   SNE      V2, VF          ; Skip if V2 != VF
$990    $F065   LD       V0, [I]         ; Load V0-V0 from I
$992    $2BB7   CALL     $BB7            ; Call subroutine at BB7
$994    $7F75   ADD      VF, #75         ; Add 117 to VF
$996    $C8DE   RND      V8, #DE         ; V8 = random & DE
$998    $2DFF   CALL     $DFF            ; Call subroutine at DFF
$99A    $565D   UNKNOWN  $565D           ; Unknown 5xxx instruction
$99C    $BC1B   JP       V0, $C1B        ; Jump to V0 + C1B
$99E    $E459   UNKNOWN  $E459           ; Unknown Exxx instruction
$9A0    $F354   UNKNOWN  F354            ; Unknown Fxxx instruction
$9A2    $EDD5   UNKNOWN  $EDD5           ; Unknown Exxx instruction
$9A4    $B5D0   JP       V0, $5D0        ; Jump to V0 + 5D0
$9A6    $334E   SE       V3, #4E         ; Skip if V3 == 78
$9A8    $2C00   CALL     $C00            ; Call subroutine at C00
$9AA    $C082   RND      V0, #82         ; V0 = random & 82
$9AC    $0ABB   SYS      $ABB            ; System call to ABB
$9AE    $A95B   LD       I, $95B         ; Load 95B into I
$9B0    $0BEA   SYS      $BEA            ; System call to BEA
$9B2    $C212   RND      V2, #12         ; V2 = random & 12
$9B4    $3C2D   SE       VC, #2D         ; Skip if VC == 45
$9B6    $02AA   SYS      $2AA            ; System call to 2AA
$9B8    $D7CA   DRW      V7, VC, #A      ; Draw 10-byte sprite at V7, VC
$9BA    $D2D4   DRW      V2, VD, #4      ; Draw 4-byte sprite at V2, VD
$9BC    $730B   ADD      V3, #0B         ; Add 11 to V3
$9BE    $2A60   CALL     $A60            ; Call subroutine at A60
$9C0    $F54F   UNKNOWN  F54F            ; Unknown Fxxx instruction
$9C2    $637A   LD       V3, #7A         ; Load 122 into V3
$9C4    $AA76   LD       I, $A76         ; Load A76 into I
$9C6    $0897   SYS      $897            ; System call to 897
$9C8    $33AD   SE       V3, #AD         ; Skip if V3 == 173
$9CA    $2F56   CALL     $F56            ; Call subroutine at F56
$9CC    $A389   LD       I, $389         ; Load 389 into I
$9CE    $B1BA   JP       V0, $1BA        ; Jump to V0 + 1BA
$9D0    $A2FA   LD       I, $2FA         ; Load 2FA into I
$9D2    $168D   JP       $68D            ; Jump to 68D
$9D4    $B0A8   JP       V0, $0A8        ; Jump to V0 + 0A8
$9D6    $D5BA   DRW      V5, VB, #A      ; Draw 10-byte sprite at V5, VB
$9D8    $D142   DRW      V1, V4, #2      ; Draw 2-byte sprite at V1, V4
$9DA    $A32D   LD       I, $32D         ; Load 32D into I
$9DC    $4259   SNE      V2, #59         ; Skip if V2 != 89
$9DE    $1647   JP       $647            ; Jump to 647
$9E0    $BF4B   JP       V0, $F4B        ; Jump to V0 + F4B
$9E2    $C450   RND      V4, #50         ; V4 = random & 50
$9E4    $91C2   UNKNOWN  $91C2           ; Unknown 9xxx instruction
$9E6    $2DB8   CALL     $DB8            ; Call subroutine at DB8
$9E8    $6714   LD       V7, #14         ; Load 20 into V7
$9EA    $3038   SE       V0, #38         ; Skip if V0 == 56
$9EC    $A67F   LD       I, $67F         ; Load 67F into I
$9EE    $E080   UNKNOWN  $E080           ; Unknown Exxx instruction
$9F0    $F6E9   UNKNOWN  F6E9            ; Unknown Fxxx instruction
$9F2    $A495   LD       I, $495         ; Load 495 into I
$9F4    $2890   CALL     $890            ; Call subroutine at 890
$9F6    $B7FD   JP       V0, $7FD        ; Jump to V0 + 7FD
$9F8    $B4FA   JP       V0, $4FA        ; Jump to V0 + 4FA
$9FA    $ABB3   LD       I, $BB3         ; Load BB3 into I
$9FC    $B9E3   JP       V0, $9E3        ; Jump to V0 + 9E3
$9FE    $F2F7   UNKNOWN  F2F7            ; Unknown Fxxx instruction
$A00    $678F   LD       V7, #8F         ; Load 143 into V7
$A02    $E1ED   UNKNOWN  $E1ED           ; Unknown Exxx instruction
$A04    $F776   UNKNOWN  F776            ; Unknown Fxxx instruction
$A06    $7A27   ADD      VA, #27         ; Add 39 to VA
$A08    $6495   LD       V4, #95         ; Load 149 into V4
$A0A    $5697   UNKNOWN  $5697           ; Unknown 5xxx instruction
$A0C    $51B9   UNKNOWN  $51B9           ; Unknown 5xxx instruction
$A0E    $295B   CALL     $95B            ; Call subroutine at 95B
$A10    $2FBE   CALL     $FBE            ; Call subroutine at FBE
$A12    $65ED   LD       V5, #ED         ; Load 237 into V5
$A14    $FB67   UNKNOWN  FB67            ; Unknown Fxxx instruction
$A16    $36E5   SE       V6, #E5         ; Skip if V6 == 229
$A18    $F5FF   UNKNOWN  F5FF            ; Unknown Fxxx instruction
$A1A    $0E42   SYS      $E42            ; System call to E42
$A1C    $A42E   LD       I, $42E         ; Load 42E into I
$A1E    $2065   CALL     $065            ; Call subroutine at 065
$A20    $790B   ADD      V9, #0B         ; Add 11 to V9
$A22    $2994   CALL     $994            ; Call subroutine at 994
$A24    $1D50   JP       $D50            ; Jump to D50
$A26    $BCBC   JP       V0, $CBC        ; Jump to V0 + CBC
$A28    $0CA1   SYS      $CA1            ; System call to CA1
$A2A    $D5B8   DRW      V5, VB, #8      ; Draw 8-byte sprite at V5, VB
$A2C    $10B5   JP       $0B5            ; Jump to 0B5
$A2E    $06F8   SYS      $6F8            ; System call to 6F8
$A30    $32DB   SE       V2, #DB         ; Skip if V2 == 219
$A32    $A5CD   LD       I, $5CD         ; Load 5CD into I
$A34    $4A37   SNE      VA, #37         ; Skip if VA != 55
$A36    $8313   XOR      V3, V1          ; V3 ^= V1
$A38    $E625   UNKNOWN  $E625           ; Unknown Exxx instruction
$A3A    $E1D3   UNKNOWN  $E1D3           ; Unknown Exxx instruction
$A3C    $22A8   CALL     $2A8            ; Call subroutine at 2A8
$A3E    $B4E6   JP       V0, $4E6        ; Jump to V0 + 4E6
$A40    $0F2D   SYS      $F2D            ; System call to F2D
$A42    $AF07   LD       I, $F07         ; Load F07 into I
$A44    $8F3D   UNKNOWN  8F3D            ; Unknown 8xxx instruction
$A46    $E28F   UNKNOWN  $E28F           ; Unknown Exxx instruction
$A48    $8C22   AND      VC, V2          ; VC &= V2
$A4A    $3DBF   SE       VD, #BF         ; Skip if VD == 191
$A4C    $0289   SYS      $289            ; System call to 289
$A4E    $7A20   ADD      VA, #20         ; Add 32 to VA
$A50    $6DA9   LD       VD, #A9         ; Load 169 into VD
$A52    $6FA9   LD       VF, #A9         ; Load 169 into VF
$A54    $AB27   LD       I, $B27         ; Load B27 into I
$A56    $EF57   UNKNOWN  $EF57           ; Unknown Exxx instruction
$A58    $FAD6   UNKNOWN  FAD6            ; Unknown Fxxx instruction
$A5A    $636D   LD       V3, #6D         ; Load 109 into V3
$A5C    $2925   CALL     $925            ; Call subroutine at 925
$A5E    $974A   UNKNOWN  $974A           ; Unknown 9xxx instruction
$A60    $BAC9   JP       V0, $AC9        ; Jump to V0 + AC9
$A62    $5046   UNKNOWN  $5046           ; Unknown 5xxx instruction
$A64    $7567   ADD      V5, #67         ; Add 103 to V5
$A66    $2A36   CALL     $A36            ; Call subroutine at A36
$A68    $2ADC   CALL     $ADC            ; Call subroutine at ADC
$A6A    $3C8B   SE       VC, #8B         ; Skip if VC == 139
$A6C    $F085   UNKNOWN  F085            ; Unknown Fxxx instruction
$A6E    $25F8   CALL     $5F8            ; Call subroutine at 5F8
$A70    $9022   UNKNOWN  $9022           ; Unknown 9xxx instruction
$A72    $F3B9   UNKNOWN  F3B9            ; Unknown Fxxx instruction
$A74    $8675   SUB      V6, V7          ; V6 -= V7, VF = !borrow
$A76    $5948   UNKNOWN  $5948           ; Unknown 5xxx instruction
$A78    $6E8A   LD       VE, #8A         ; Load 138 into VE
$A7A    $3D8C   SE       VD, #8C         ; Skip if VD == 140
$A7C    $D7AE   DRW      V7, VA, #E      ; Draw 14-byte sprite at V7, VA
$A7E    $E557   UNKNOWN  $E557           ; Unknown Exxx instruction
$A80    $C454   RND      V4, #54         ; V4 = random & 54
$A82    $54DF   UNKNOWN  $54DF           ; Unknown 5xxx instruction
$A84    $CB80   RND      VB, #80         ; VB = random & 80
$A86    $6631   LD       V6, #31         ; Load 49 into V6
$A88    $7A28   ADD      VA, #28         ; Add 40 to VA
$A8A    $F27C   UNKNOWN  F27C            ; Unknown Fxxx instruction
$A8C    $7327   ADD      V3, #27         ; Add 39 to V3
$A8E    $1676   JP       $676            ; Jump to 676
$A90    $A386   LD       I, $386         ; Load 386 into I
$A92    $C7D4   RND      V7, #D4         ; V7 = random & D4
$A94    $2C18   CALL     $C18            ; Call subroutine at C18
$A96    $75B0   ADD      V5, #B0         ; Add 176 to V5
$A98    $9A2B   UNKNOWN  $9A2B           ; Unknown 9xxx instruction
$A9A    $9425   UNKNOWN  $9425           ; Unknown 9xxx instruction
$A9C    $7E76   ADD      VE, #76         ; Add 118 to VE
$A9E    $113C   JP       $13C            ; Jump to 13C
$AA0    $3F2E   SE       VF, #2E         ; Skip if VF == 46
$AA2    $18EF   JP       $8EF            ; Jump to 8EF
$AA4    $7079   ADD      V0, #79         ; Add 121 to V0
$AA6    $BC82   JP       V0, $C82        ; Jump to V0 + C82
$AA8    $D2D4   DRW      V2, VD, #4      ; Draw 4-byte sprite at V2, VD
$AAA    $3ACB   SE       VA, #CB         ; Skip if VA == 203
$AAC    $D382   DRW      V3, V8, #2      ; Draw 2-byte sprite at V3, V8
$AAE    $CDE7   RND      VD, #E7         ; VD = random & E7
$AB0    $5FE2   UNKNOWN  $5FE2           ; Unknown 5xxx instruction
$AB2    $3945   SE       V9, #45         ; Skip if V9 == 69
$AB4    $DF39   DRW      VF, V3, #9      ; Draw 9-byte sprite at VF, V3
$AB6    $6EE8   LD       VE, #E8         ; Load 232 into VE
$AB8    $4479   SNE      V4, #79         ; Skip if V4 != 121
$ABA    $9E76   UNKNOWN  $9E76           ; Unknown 9xxx instruction
$ABC    $CCF8   RND      VC, #F8         ; VC = random & F8
$ABE    $2461   CALL     $461            ; Call subroutine at 461
$AC0    $35F0   SE       V5, #F0         ; Skip if V5 == 240
$AC2    $2670   CALL     $670            ; Call subroutine at 670
$AC4    $DF6C   DRW      VF, V6, #C      ; Draw 12-byte sprite at VF, V6
$AC6    $5264   UNKNOWN  $5264           ; Unknown 5xxx instruction
$AC8    $B643   JP       V0, $643        ; Jump to V0 + 643
$ACA    $C962   RND      V9, #62         ; V9 = random & 62
$ACC    $C993   RND      V9, #93         ; V9 = random & 93
$ACE    $8350   LD       V3, V5          ; V3 = V5
$AD0    $96E1   UNKNOWN  $96E1           ; Unknown 9xxx instruction
$AD2    $D26C   DRW      V2, V6, #C      ; Draw 12-byte sprite at V2, V6
$AD4    $9DB7   UNKNOWN  $9DB7           ; Unknown 9xxx instruction
$AD6    $0BC1   SYS      $BC1            ; System call to BC1
$AD8    $1C2A   JP       $C2A            ; Jump to C2A
$ADA    $A483   LD       I, $483         ; Load 483 into I
$ADC    $C27F   RND      V2, #7F         ; V2 = random & 7F
$ADE    $E761   UNKNOWN  $E761           ; Unknown Exxx instruction
$AE0    $1B8C   JP       $B8C            ; Jump to B8C
$AE2    $4EB9   SNE      VE, #B9         ; Skip if VE != 185
$AE4    $5AFB   UNKNOWN  $5AFB           ; Unknown 5xxx instruction
$AE6    $EE59   UNKNOWN  $EE59           ; Unknown Exxx instruction
$AE8    $31BD   SE       V1, #BD         ; Skip if V1 == 189
$AEA    $E891   UNKNOWN  $E891           ; Unknown Exxx instruction
$AEC    $AE86   LD       I, $E86         ; Load E86 into I
$AEE    $6C16   LD       VC, #16         ; Load 22 into VC
$AF0    $D83C   DRW      V8, V3, #C      ; Draw 12-byte sprite at V8, V3
$AF2    $E0B1   UNKNOWN  $E0B1           ; Unknown Exxx instruction
$AF4    $1240   JP       $240            ; Jump to 240
$AF6    $5400   SE       V4, V0          ; Skip if V4 == V0
$AF8    $3E9C   SE       VE, #9C         ; Skip if VE == 156
$AFA    $D0B1   DRW      V0, VB, #1      ; Draw 1-byte sprite at V0, VB
$AFC    $07C3   SYS      $7C3            ; System call to 7C3
$AFE    $E6F4   UNKNOWN  $E6F4           ; Unknown Exxx instruction
$B00    $D489   DRW      V4, V8, #9      ; Draw 9-byte sprite at V4, V8
$B02    $1768   JP       $768            ; Jump to 768
$B04    $3290   SE       V2, #90         ; Skip if V2 == 144
$B06    $006D   SYS      $06D            ; System call to 06D
$B08    $599F   UNKNOWN  $599F           ; Unknown 5xxx instruction
$B0A    $3A83   SE       VA, #83         ; Skip if VA == 131
$B0C    $E63C   UNKNOWN  $E63C           ; Unknown Exxx instruction
$B0E    $1679   JP       $679            ; Jump to 679
$B10    $37D9   SE       V7, #D9         ; Skip if V7 == 217
$B12    $284B   CALL     $84B            ; Call subroutine at 84B
$B14    $9AEA   UNKNOWN  $9AEA           ; Unknown 9xxx instruction
$B16    $50C7   UNKNOWN  $50C7           ; Unknown 5xxx instruction
$B18    $2C7E   CALL     $C7E            ; Call subroutine at C7E
$B1A    $4A68   SNE      VA, #68         ; Skip if VA != 104
$B1C    $DA01   DRW      VA, V0, #1      ; Draw 1-byte sprite at VA, V0
$B1E    $9CAF   UNKNOWN  $9CAF           ; Unknown 9xxx instruction
$B20    $6DBF   LD       VD, #BF         ; Load 191 into VD
$B22    $5D74   UNKNOWN  $5D74           ; Unknown 5xxx instruction
$B24    $34D8   SE       V4, #D8         ; Skip if V4 == 216
$B26    $BE61   JP       V0, $E61        ; Jump to V0 + E61
$B28    $AA5F   LD       I, $A5F         ; Load A5F into I
$B2A    $5AF4   UNKNOWN  $5AF4           ; Unknown 5xxx instruction
$B2C    $8F37   SUBN     VF, V3          ; VF = V3 - VF, VF = !borrow
$B2E    $B7D3   JP       V0, $7D3        ; Jump to V0 + 7D3
$B30    $ADE8   LD       I, $DE8         ; Load DE8 into I
$B32    $ADF0   LD       I, $DF0         ; Load DF0 into I
$B34    $AB15   LD       I, $B15         ; Load B15 into I
$B36    $97A8   UNKNOWN  $97A8           ; Unknown 9xxx instruction
$B38    $C649   RND      V6, #49         ; V6 = random & 49
$B3A    $F80F   UNKNOWN  F80F            ; Unknown Fxxx instruction
$B3C    $CA8E   RND      VA, #8E         ; VA = random & 8E
$B3E    $47D0   SNE      V7, #D0         ; Skip if V7 != 208
$B40    $CFFD   RND      VF, #FD         ; VF = random & FD
$B42    $87D3   XOR      V7, VD          ; V7 ^= VD
$B44    $6EA5   LD       VE, #A5         ; Load 165 into VE
$B46    $C017   RND      V0, #17         ; V0 = random & 17
$B48    $82D7   SUBN     V2, VD          ; V2 = VD - V2, VF = !borrow
$B4A    $AA96   LD       I, $A96         ; Load A96 into I
$B4C    $BF98   JP       V0, $F98        ; Jump to V0 + F98
$B4E    $BAEA   JP       V0, $AEA        ; Jump to V0 + AEA
$B50    $7AB3   ADD      VA, #B3         ; Add 179 to VA
$B52    $8ED6   SHR      VE              ; VE >>= 1, VF = LSB
$B54    $90AD   UNKNOWN  $90AD           ; Unknown 9xxx instruction
$B56    $EA3F   UNKNOWN  $EA3F           ; Unknown Exxx instruction
$B58    $0F0C   SYS      $F0C            ; System call to F0C
$B5A    $BF97   JP       V0, $F97        ; Jump to V0 + F97
$B5C    $D483   DRW      V4, V8, #3      ; Draw 3-byte sprite at V4, V8
$B5E    $281F   CALL     $81F            ; Call subroutine at 81F
$B60    $B8C4   JP       V0, $8C4        ; Jump to V0 + 8C4
$B62    $1B94   JP       $B94            ; Jump to B94
$B64    $8550   LD       V5, V5          ; V5 = V5
$B66    $117B   JP       $17B            ; Jump to 17B
$B68    $CD25   RND      VD, #25         ; VD = random & 25
$B6A    $AC8B   LD       I, $C8B         ; Load C8B into I
$B6C    $E6B3   UNKNOWN  $E6B3           ; Unknown Exxx instruction
$B6E    $8BDE   SHL      VB              ; VB <<= 1, VF = MSB
$B70    $C241   RND      V2, #41         ; V2 = random & 41
$B72    $6B8F   LD       VB, #8F         ; Load 143 into VB
$B74    $8C50   LD       VC, V5          ; VC = V5
$B76    $BD87   JP       V0, $D87        ; Jump to V0 + D87
$B78    $7621   ADD      V6, #21         ; Add 33 to V6
$B7A    $E5AA   UNKNOWN  $E5AA           ; Unknown Exxx instruction
$B7C    $EFB5   UNKNOWN  $EFB5           ; Unknown Exxx instruction
$B7E    $B86D   JP       V0, $86D        ; Jump to V0 + 86D
$B80    $7908   ADD      V9, #08         ; Add 8 to V9
$B82    $2383   CALL     $383            ; Call subroutine at 383
$B84    $F9AE   UNKNOWN  F9AE            ; Unknown Fxxx instruction
$B86    $6D1C   LD       VD, #1C         ; Load 28 into VD
$B88    $112B   JP       $12B            ; Jump to 12B
$B8A    $E4CB   UNKNOWN  $E4CB           ; Unknown Exxx instruction
$B8C    $F131   UNKNOWN  F131            ; Unknown Fxxx instruction
$B8E    $8455   SUB      V4, V5          ; V4 -= V5, VF = !borrow
$B90    $73C9   ADD      V3, #C9         ; Add 201 to V3
$B92    $C5AE   RND      V5, #AE         ; V5 = random & AE
$B94    $9D9F   UNKNOWN  $9D9F           ; Unknown 9xxx instruction
$B96    $071B   SYS      $71B            ; System call to 71B
$B98    $ED33   UNKNOWN  $ED33           ; Unknown Exxx instruction
$B9A    $FC06   UNKNOWN  FC06            ; Unknown Fxxx instruction
$B9C    $3AD6   SE       VA, #D6         ; Skip if VA == 214
$B9E    $E9EF   UNKNOWN  $E9EF           ; Unknown Exxx instruction
$BA0    $F622   UNKNOWN  F622            ; Unknown Fxxx instruction
$BA2    $974D   UNKNOWN  $974D           ; Unknown 9xxx instruction
$BA4    $54DF   UNKNOWN  $54DF           ; Unknown 5xxx instruction
$BA6    $2B3E   CALL     $B3E            ; Call subroutine at B3E
$BA8    $D38E   DRW      V3, V8, #E      ; Draw 14-byte sprite at V3, V8
$BAA    $50B7   UNKNOWN  $50B7           ; Unknown 5xxx instruction
$BAC    $599E   UNKNOWN  $599E           ; Unknown 5xxx instruction
$BAE    $2590   CALL     $590            ; Call subroutine at 590
$BB0    $2742   CALL     $742            ; Call subroutine at 742
$BB2    $2E32   CALL     $E32            ; Call subroutine at E32
$BB4    $3BC3   SE       VB, #C3         ; Skip if VB == 195
$BB6    $9DDF   UNKNOWN  $9DDF           ; Unknown 9xxx instruction
$BB8    $5F8F   UNKNOWN  $5F8F           ; Unknown 5xxx instruction
$BBA    $F1EF   UNKNOWN  F1EF            ; Unknown Fxxx instruction
$BBC    $5512   UNKNOWN  $5512           ; Unknown 5xxx instruction
$BBE    $8493   XOR      V4, V9          ; V4 ^= V9
$BC0    $1671   JP       $671            ; Jump to 671
$BC2    $9543   UNKNOWN  $9543           ; Unknown 9xxx instruction
$BC4    $12BC   JP       $2BC            ; Jump to 2BC
$BC6    $7D9D   ADD      VD, #9D         ; Add 157 to VD
$BC8    $5849   UNKNOWN  $5849           ; Unknown 5xxx instruction
$BCA    $926F   UNKNOWN  $926F           ; Unknown 9xxx instruction
$BCC    $EB48   UNKNOWN  $EB48           ; Unknown Exxx instruction
$BCE    $7FDE   ADD      VF, #DE         ; Add 222 to VF
$BD0    $A0CE   LD       I, $0CE         ; Load 0CE into I
$BD2    $C14A   RND      V1, #4A         ; V1 = random & 4A
$BD4    $74B1   ADD      V4, #B1         ; Add 177 to V4
$BD6    $5E9F   UNKNOWN  $5E9F           ; Unknown 5xxx instruction
$BD8    $8860   LD       V8, V6          ; V8 = V6
$BDA    $CCF3   RND      VC, #F3         ; VC = random & F3
$BDC    $E084   UNKNOWN  $E084           ; Unknown Exxx instruction
$BDE    $4856   SNE      V8, #56         ; Skip if V8 != 86
$BE0    $2F83   CALL     $F83            ; Call subroutine at F83
$BE2    $2A28   CALL     $A28            ; Call subroutine at A28
$BE4    $8173   XOR      V1, V7          ; V1 ^= V7
$BE6    $7294   ADD      V2, #94         ; Add 148 to V2
$BE8    $CBD8   RND      VB, #D8         ; VB = random & D8
$BEA    $EBE5   UNKNOWN  $EBE5           ; Unknown Exxx instruction
$BEC    $F59B   UNKNOWN  F59B            ; Unknown Fxxx instruction
$BEE    $1887   JP       $887            ; Jump to 887
$BF0    $0CB7   SYS      $CB7            ; System call to CB7
$BF2    $9C5C   UNKNOWN  $9C5C           ; Unknown 9xxx instruction
$BF4    $4D42   SNE      VD, #42         ; Skip if VD != 66
$BF6    $8671   OR       V6, V7          ; V6 |= V7
$BF8    $5837   UNKNOWN  $5837           ; Unknown 5xxx instruction
$BFA    $87F8   UNKNOWN  87F8            ; Unknown 8xxx instruction
$BFC    $8CC3   XOR      VC, VC          ; VC ^= VC
$BFE    $D9EA   DRW      V9, VE, #A      ; Draw 10-byte sprite at V9, VE
$C00    $35DA   SE       V5, #DA         ; Skip if V5 == 218
$C02    $DF85   DRW      VF, V8, #5      ; Draw 5-byte sprite at VF, V8
$C04    $54FB   UNKNOWN  $54FB           ; Unknown 5xxx instruction
$C06    $9660   SNE      V6, V6          ; Skip if V6 != V6
$C08    $4D0A   SNE      VD, #0A         ; Skip if VD != 10
$C0A    $A6BA   LD       I, $6BA         ; Load 6BA into I
$C0C    $10BC   JP       $0BC            ; Jump to 0BC
$C0E    $0493   SYS      $493            ; System call to 493
$C10    $30A5   SE       V0, #A5         ; Skip if V0 == 165
$C12    $D17A   DRW      V1, V7, #A      ; Draw 10-byte sprite at V1, V7
$C14    $8499   UNKNOWN  8499            ; Unknown 8xxx instruction
$C16    $D29C   DRW      V2, V9, #C      ; Draw 12-byte sprite at V2, V9
$C18    $8CB7   SUBN     VC, VB          ; VC = VB - VC, VF = !borrow
$C1A    $A0F9   LD       I, $0F9         ; Load 0F9 into I
$C1C    $9475   UNKNOWN  $9475           ; Unknown 9xxx instruction
$C1E    $6B4D   LD       VB, #4D         ; Load 77 into VB
$C20    $2BE1   CALL     $BE1            ; Call subroutine at BE1
$C22    $9D96   UNKNOWN  $9D96           ; Unknown 9xxx instruction
$C24    $9CE0   SNE      VC, VE          ; Skip if VC != VE
$C26    $15CC   JP       $5CC            ; Jump to 5CC
$C28    $AC0E   LD       I, $C0E         ; Load C0E into I
$C2A    $7988   ADD      V9, #88         ; Add 136 to V9
$C2C    $D851   DRW      V8, V5, #1      ; Draw 1-byte sprite at V8, V5
$C2E    $A220   LD       I, $220         ; Load 220 into I
$C30    $D628   DRW      V6, V2, #8      ; Draw 8-byte sprite at V6, V2
$C32    $1AE8   JP       $AE8            ; Jump to AE8
$C34    $4B6A   SNE      VB, #6A         ; Skip if VB != 106
$C36    $ABF3   LD       I, $BF3         ; Load BF3 into I
$C38    $0E3E   SYS      $E3E            ; System call to E3E
$C3A    $CF8C   RND      VF, #8C         ; VF = random & 8C
$C3C    $D410   DRW      V4, V1, #0      ; Draw 0-byte sprite at V4, V1
$C3E    $2DA8   CALL     $DA8            ; Call subroutine at DA8
$C40    $BE19   JP       V0, $E19        ; Jump to V0 + E19
$C42    $2EC3   CALL     $EC3            ; Call subroutine at EC3
$C44    $3A3E   SE       VA, #3E         ; Skip if VA == 62
$C46    $8099   UNKNOWN  8099            ; Unknown 8xxx instruction
$C48    $0CE6   SYS      $CE6            ; System call to CE6
$C4A    $725B   ADD      V2, #5B         ; Add 91 to V2
$C4C    $3D0F   SE       VD, #0F         ; Skip if VD == 15
$C4E    $A1BA   LD       I, $1BA         ; Load 1BA into I
$C50    $3967   SE       V9, #67         ; Skip if V9 == 103
$C52    $A865   LD       I, $865         ; Load 865 into I
$C54    $A56D   LD       I, $56D         ; Load 56D into I
$C56    $F55D   UNKNOWN  F55D            ; Unknown Fxxx instruction
$C58    $F220   UNKNOWN  F220            ; Unknown Fxxx instruction
$C5A    $DF6A   DRW      VF, V6, #A      ; Draw 10-byte sprite at VF, V6
$C5C    $407A   SNE      V0, #7A         ; Skip if V0 != 122
$C5E    $678E   LD       V7, #8E         ; Load 142 into V7
$C60    $F4D7   UNKNOWN  F4D7            ; Unknown Fxxx instruction
$C62    $F086   UNKNOWN  F086            ; Unknown Fxxx instruction
$C64    $207D   CALL     $07D            ; Call subroutine at 07D
$C66    $7407   ADD      V4, #07         ; Add 7 to V4
$C68    $4E5D   SNE      VE, #5D         ; Skip if VE != 93
$C6A    $A2E1   LD       I, $2E1         ; Load 2E1 into I
$C6C    $7BAA   ADD      VB, #AA         ; Add 170 to VB
$C6E    $BB4E   JP       V0, $B4E        ; Jump to V0 + B4E
$C70    $9788   UNKNOWN  $9788           ; Unknown 9xxx instruction
$C72    $DB94   DRW      VB, V9, #4      ; Draw 4-byte sprite at VB, V9
$C74    $1FC8   JP       $FC8            ; Jump to FC8
$C76    $FD7C   UNKNOWN  FD7C            ; Unknown Fxxx instruction
$C78    $6A15   LD       VA, #15         ; Load 21 into VA
$C7A    $9B32   UNKNOWN  $9B32           ; Unknown 9xxx instruction
$C7C    $178E   JP       $78E            ; Jump to 78E
$C7E    $F582   UNKNOWN  F582            ; Unknown Fxxx instruction
$C80    $ABB8   LD       I, $BB8         ; Load BB8 into I
$C82    $6066   LD       V0, #66         ; Load 102 into V0
$C84    $D911   DRW      V9, V1, #1      ; Draw 1-byte sprite at V9, V1
$C86    $8885   SUB      V8, V8          ; V8 -= V8, VF = !borrow
$C88    $4E06   SNE      VE, #06         ; Skip if VE != 6
$C8A    $D379   DRW      V3, V7, #9      ; Draw 9-byte sprite at V3, V7
$C8C    $1CD6   JP       $CD6            ; Jump to CD6
$C8E    $362A   SE       V6, #2A         ; Skip if V6 == 42
$C90    $996D   UNKNOWN  $996D           ; Unknown 9xxx instruction
$C92    $7340   ADD      V3, #40         ; Add 64 to V3
$C94    $2643   CALL     $643            ; Call subroutine at 643
$C96    $C1EF   RND      V1, #EF         ; V1 = random & EF
$C98    $39DD   SE       V9, #DD         ; Skip if V9 == 221
$C9A    $0687   SYS      $687            ; System call to 687
$C9C    $29ED   CALL     $9ED            ; Call subroutine at 9ED
$C9E    $BAB0   JP       V0, $AB0        ; Jump to V0 + AB0
$CA0    $2048   CALL     $048            ; Call subroutine at 048
$CA2    $FA6B   UNKNOWN  FA6B            ; Unknown Fxxx instruction
$CA4    $710C   ADD      V1, #0C         ; Add 12 to V1
$CA6    $7EBE   ADD      VE, #BE         ; Add 190 to VE
$CA8    $65D6   LD       V5, #D6         ; Load 214 into V5
$CAA    $55AA   UNKNOWN  $55AA           ; Unknown 5xxx instruction
$CAC    $E659   UNKNOWN  $E659           ; Unknown Exxx instruction
$CAE    $D54E   DRW      V5, V4, #E      ; Draw 14-byte sprite at V5, V4
$CB0    $4807   SNE      V8, #07         ; Skip if V8 != 7
$CB2    $1442   JP       $442            ; Jump to 442
$CB4    $FEB2   UNKNOWN  FEB2            ; Unknown Fxxx instruction
$CB6    $5BC1   UNKNOWN  $5BC1           ; Unknown 5xxx instruction
$CB8    $ADD0   LD       I, $DD0         ; Load DD0 into I
$CBA    $7830   ADD      V8, #30         ; Add 48 to V8
$CBC    $65C3   LD       V5, #C3         ; Load 195 into V5
$CBE    $8F79   UNKNOWN  8F79            ; Unknown 8xxx instruction
$CC0    $F498   UNKNOWN  F498            ; Unknown Fxxx instruction
$CC2    $63E0   LD       V3, #E0         ; Load 224 into V3
$CC4    $D03E   DRW      V0, V3, #E      ; Draw 14-byte sprite at V0, V3
$CC6    $26D0   CALL     $6D0            ; Call subroutine at 6D0
$CC8    $399D   SE       V9, #9D         ; Skip if V9 == 157
$CCA    $8F9E   SHL      VF              ; VF <<= 1, VF = MSB
$CCC    $E922   UNKNOWN  $E922           ; Unknown Exxx instruction
$CCE    $9DF8   UNKNOWN  $9DF8           ; Unknown 9xxx instruction
$CD0    $8CA1   OR       VC, VA          ; VC |= VA
$CD2    $5689   UNKNOWN  $5689           ; Unknown 5xxx instruction
$CD4    $8FD7   SUBN     VF, VD          ; VF = VD - VF, VF = !borrow
$CD6    $104A   JP       $04A            ; Jump to 04A
$CD8    $BCAE   JP       V0, $CAE        ; Jump to V0 + CAE
$CDA    $EF39   UNKNOWN  $EF39           ; Unknown Exxx instruction
$CDC    $D8F2   DRW      V8, VF, #2      ; Draw 2-byte sprite at V8, VF
$CDE    $3368   SE       V3, #68         ; Skip if V3 == 104
$CE0    $5FC2   UNKNOWN  $5FC2           ; Unknown 5xxx instruction
$CE2    $C668   RND      V6, #68         ; V6 = random & 68
$CE4    $BE37   JP       V0, $E37        ; Jump to V0 + E37
$CE6    $1F9B   JP       $F9B            ; Jump to F9B
$CE8    $C18A   RND      V1, #8A         ; V1 = random & 8A
$CEA    $5B36   UNKNOWN  $5B36           ; Unknown 5xxx instruction
$CEC    $9A3B   UNKNOWN  $9A3B           ; Unknown 9xxx instruction
$CEE    $4A25   SNE      VA, #25         ; Skip if VA != 37
$CF0    $956B   UNKNOWN  $956B           ; Unknown 9xxx instruction
$CF2    $889D   UNKNOWN  889D            ; Unknown 8xxx instruction
$CF4    $707A   ADD      V0, #7A         ; Add 122 to V0
$CF6    $A942   LD       I, $942         ; Load 942 into I
$CF8    $F876   UNKNOWN  F876            ; Unknown Fxxx instruction
$CFA    $543E   UNKNOWN  $543E           ; Unknown 5xxx instruction
$CFC    $5406   UNKNOWN  $5406           ; Unknown 5xxx instruction
$CFE    $BF17   JP       V0, $F17        ; Jump to V0 + F17
$D00    $21DD   CALL     $1DD            ; Call subroutine at 1DD
$D02    $9698   UNKNOWN  $9698           ; Unknown 9xxx instruction
$D04    $08A5   SYS      $8A5            ; System call to 8A5
$D06    $703E   ADD      V0, #3E         ; Add 62 to V0
$D08    $0ECB   SYS      $ECB            ; System call to ECB
$D0A    $AE49   LD       I, $E49         ; Load E49 into I
$D0C    $A845   LD       I, $845         ; Load 845 into I
$D0E    $2F02   CALL     $F02            ; Call subroutine at F02
$D10    $653A   LD       V5, #3A         ; Load 58 into V5
$D12    $86B0   LD       V6, VB          ; V6 = VB
$D14    $67D2   LD       V7, #D2         ; Load 210 into V7
$D16    $A77B   LD       I, $77B         ; Load 77B into I
$D18    $6B5E   LD       VB, #5E         ; Load 94 into VB
$D1A    $171A   JP       $71A            ; Jump to 71A
$D1C    $0EAF   SYS      $EAF            ; System call to EAF
$D1E    $800B   UNKNOWN  800B            ; Unknown 8xxx instruction
$D20    $F8E7   UNKNOWN  F8E7            ; Unknown Fxxx instruction
$D22    $38BB   SE       V8, #BB         ; Skip if V8 == 187
$D24    $0673   SYS      $673            ; System call to 673
$D26    $E230   UNKNOWN  $E230           ; Unknown Exxx instruction
$D28    $43D6   SNE      V3, #D6         ; Skip if V3 != 214
$D2A    $EE66   UNKNOWN  $EE66           ; Unknown Exxx instruction
$D2C    $27F8   CALL     $7F8            ; Call subroutine at 7F8
$D2E    $0286   SYS      $286            ; System call to 286
$D30    $4751   SNE      V7, #51         ; Skip if V7 != 81
$D32    $E06D   UNKNOWN  $E06D           ; Unknown Exxx instruction
$D34    $D5C0   DRW      V5, VC, #0      ; Draw 0-byte sprite at V5, VC
$D36    $8619   UNKNOWN  8619            ; Unknown 8xxx instruction
$D38    $7BD1   ADD      VB, #D1         ; Add 209 to VB
$D3A    $2D11   CALL     $D11            ; Call subroutine at D11
$D3C    $9C4F   UNKNOWN  $9C4F           ; Unknown 9xxx instruction
$D3E    $726C   ADD      V2, #6C         ; Add 108 to V2
$D40    $9F1F   UNKNOWN  $9F1F           ; Unknown 9xxx instruction
$D42    $5DDC   UNKNOWN  $5DDC           ; Unknown 5xxx instruction
$D44    $ADF2   LD       I, $DF2         ; Load DF2 into I
$D46    $FF73   UNKNOWN  FF73            ; Unknown Fxxx instruction
$D48    $7568   ADD      V5, #68         ; Add 104 to V5
$D4A    $33DA   SE       V3, #DA         ; Skip if V3 == 218
$D4C    $82E3   XOR      V2, VE          ; V2 ^= VE
$D4E    $71E6   ADD      V1, #E6         ; Add 230 to V1
$D50    $EEE8   UNKNOWN  $EEE8           ; Unknown Exxx instruction
$D52    $7789   ADD      V7, #89         ; Add 137 to V7
$D54    $C695   RND      V6, #95         ; V6 = random & 95
$D56    $5E61   UNKNOWN  $5E61           ; Unknown 5xxx instruction
$D58    $ABF9   LD       I, $BF9         ; Load BF9 into I
$D5A    $4F8E   SNE      VF, #8E         ; Skip if VF != 142
$D5C    $8E56   SHR      VE              ; VE >>= 1, VF = LSB
$D5E    $84F0   LD       V4, VF          ; V4 = VF
$D60    $89F8   UNKNOWN  89F8            ; Unknown 8xxx instruction
$D62    $3119   SE       V1, #19         ; Skip if V1 == 25
$D64    $515D   UNKNOWN  $515D           ; Unknown 5xxx instruction
$D66    $0AF9   SYS      $AF9            ; System call to AF9
$D68    $B983   JP       V0, $983        ; Jump to V0 + 983
$D6A    $B2F0   JP       V0, $2F0        ; Jump to V0 + 2F0
$D6C    $A45D   LD       I, $45D         ; Load 45D into I
$D6E    $32AE   SE       V2, #AE         ; Skip if V2 == 174
$D70    $1771   JP       $771            ; Jump to 771
$D72    $03FC   SYS      $3FC            ; System call to 3FC
$D74    $CE42   RND      VE, #42         ; VE = random & 42
$D76    $55D6   UNKNOWN  $55D6           ; Unknown 5xxx instruction
$D78    $59FC   UNKNOWN  $59FC           ; Unknown 5xxx instruction
$D7A    $963F   UNKNOWN  $963F           ; Unknown 9xxx instruction
$D7C    $3EEC   SE       VE, #EC         ; Skip if VE == 236
$D7E    $65A4   LD       V5, #A4         ; Load 164 into V5
$D80    $BCA3   JP       V0, $CA3        ; Jump to V0 + CA3
$D82    $BED0   JP       V0, $ED0        ; Jump to V0 + ED0
$D84    $410C   SNE      V1, #0C         ; Skip if V1 != 12
$D86    $6E97   LD       VE, #97         ; Load 151 into VE
$D88    $DB26   DRW      VB, V2, #6      ; Draw 6-byte sprite at VB, V2
$D8A    $B2AA   JP       V0, $2AA        ; Jump to V0 + 2AA
$D8C    $EE7C   UNKNOWN  $EE7C           ; Unknown Exxx instruction
$D8E    $F054   UNKNOWN  F054            ; Unknown Fxxx instruction
$D90    $5CFC   UNKNOWN  $5CFC           ; Unknown 5xxx instruction
$D92    $CE15   RND      VE, #15         ; VE = random & 15
$D94    $130D   JP       $30D            ; Jump to 30D
$D96    $0B10   SYS      $B10            ; System call to B10
$D98    $29BB   CALL     $9BB            ; Call subroutine at 9BB
$D9A    $56E3   UNKNOWN  $56E3           ; Unknown 5xxx instruction
$D9C    $3C30   SE       VC, #30         ; Skip if VC == 48
$D9E    $1F38   JP       $F38            ; Jump to F38
$DA0    $2699   CALL     $699            ; Call subroutine at 699
$DA2    $9B43   UNKNOWN  $9B43           ; Unknown 9xxx instruction
$DA4    $8F3E   SHL      VF              ; VF <<= 1, VF = MSB
$DA6    $0BE2   SYS      $BE2            ; System call to BE2
$DA8    $6127   LD       V1, #27         ; Load 39 into V1
$DAA    $AF54   LD       I, $F54         ; Load F54 into I
$DAC    $C5EE   RND      V5, #EE         ; V5 = random & EE
$DAE    $E01D   UNKNOWN  $E01D           ; Unknown Exxx instruction
$DB0    $D38B   DRW      V3, V8, #B      ; Draw 11-byte sprite at V3, V8
$DB2    $0EDD   SYS      $EDD            ; System call to EDD
$DB4    $C63F   RND      V6, #3F         ; V6 = random & 3F
$DB6    $0D9A   SYS      $D9A            ; System call to D9A
$DB8    $72DB   ADD      V2, #DB         ; Add 219 to V2
$DBA    $10BE   JP       $0BE            ; Jump to 0BE
$DBC    $A47D   LD       I, $47D         ; Load 47D into I
$DBE    $3990   SE       V9, #90         ; Skip if V9 == 144
$DC0    $FF0A   LD       VF, K           ; Wait for key press, store in VF
$DC2    $0843   SYS      $843            ; System call to 843
$DC4    $95A7   UNKNOWN  $95A7           ; Unknown 9xxx instruction
$DC6    $C6DA   RND      V6, #DA         ; V6 = random & DA
$DC8    $FAEF   UNKNOWN  FAEF            ; Unknown Fxxx instruction
$DCA    $ADF5   LD       I, $DF5         ; Load DF5 into I
$DCC    $82B4   ADD      V2, VB          ; V2 += VB, VF = carry
$DCE    $214F   CALL     $14F            ; Call subroutine at 14F
$DD0    $2345   CALL     $345            ; Call subroutine at 345
$DD2    $E021   UNKNOWN  $E021           ; Unknown Exxx instruction
$DD4    $03D5   SYS      $3D5            ; System call to 3D5
$DD6    $9C40   SNE      VC, V4          ; Skip if VC != V4
$DD8    $453A   SNE      V5, #3A         ; Skip if V5 != 58
$DDA    $0DC2   SYS      $DC2            ; System call to DC2
$DDC    $C147   RND      V1, #47         ; V1 = random & 47
$DDE    $1A44   JP       $A44            ; Jump to A44
$DE0    $B22B   JP       V0, $22B        ; Jump to V0 + 22B
$DE2    $5A75   UNKNOWN  $5A75           ; Unknown 5xxx instruction
$DE4    $ADF6   LD       I, $DF6         ; Load DF6 into I
$DE6    $2C57   CALL     $C57            ; Call subroutine at C57
$DE8    $F019   UNKNOWN  F019            ; Unknown Fxxx instruction
$DEA    $6D82   LD       VD, #82         ; Load 130 into VD
$DEC    $FDF0   UNKNOWN  FDF0            ; Unknown Fxxx instruction
$DEE    $D26C   DRW      V2, V6, #C      ; Draw 12-byte sprite at V2, V6
$DF0    $6429   LD       V4, #29         ; Load 41 into V4
$DF2    $3AB7   SE       VA, #B7         ; Skip if VA == 183
$DF4    $3643   SE       V6, #43         ; Skip if V6 == 67
$DF6    $EFD7   UNKNOWN  $EFD7           ; Unknown Exxx instruction
$DF8    $5728   UNKNOWN  $5728           ; Unknown 5xxx instruction
$DFA    $284B   CALL     $84B            ; Call subroutine at 84B
$DFC    $2F00   CALL     $F00            ; Call subroutine at F00
$DFE    $4817   SNE      V8, #17         ; Skip if V8 != 23
$E00    $08DB   SYS      $8DB            ; System call to 8DB
$E02    $2AB4   CALL     $AB4            ; Call subroutine at AB4
$E04    $33B0   SE       V3, #B0         ; Skip if V3 == 176
$E06    $B5B9   JP       V0, $5B9        ; Jump to V0 + 5B9
$E08    $F137   UNKNOWN  F137            ; Unknown Fxxx instruction
$E0A    $3A5F   SE       VA, #5F         ; Skip if VA == 95
$E0C    $0EFE   SYS      $EFE            ; System call to EFE
$E0E    $AC55   LD       I, $C55         ; Load C55 into I
$E10    $D47D   DRW      V4, V7, #D      ; Draw 13-byte sprite at V4, V7
$E12    $677B   LD       V7, #7B         ; Load 123 into V7
$E14    $ED28   UNKNOWN  $ED28           ; Unknown Exxx instruction
$E16    $F6D8   UNKNOWN  F6D8            ; Unknown Fxxx instruction
$E18    $ADC8   LD       I, $DC8         ; Load DC8 into I
$E1A    $E354   UNKNOWN  $E354           ; Unknown Exxx instruction
$E1C    $FBD6   UNKNOWN  FBD6            ; Unknown Fxxx instruction
$E1E    $2377   CALL     $377            ; Call subroutine at 377
$E20    $BBC7   JP       V0, $BC7        ; Jump to V0 + BC7
$E22    $2215   CALL     $215            ; Call subroutine at 215
$E24    $4F82   SNE      VF, #82         ; Skip if VF != 130
$E26    $2639   CALL     $639            ; Call subroutine at 639
$E28    $B07F   JP       V0, $07F        ; Jump to V0 + 07F
$E2A    $21A7   CALL     $1A7            ; Call subroutine at 1A7
$E2C    $56CF   UNKNOWN  $56CF           ; Unknown 5xxx instruction
$E2E    $6399   LD       V3, #99         ; Load 153 into V3
$E30    $BA8C   JP       V0, $A8C        ; Jump to V0 + A8C
$E32    $CF02   RND      VF, #02         ; VF = random & 02
$E34    $2D28   CALL     $D28            ; Call subroutine at D28
$E36    $C807   RND      V8, #07         ; V8 = random & 07
$E38    $0964   SYS      $964            ; System call to 964
$E3A    $AFBE   LD       I, $FBE         ; Load FBE into I
$E3C    $3252   SE       V2, #52         ; Skip if V2 == 82
$E3E    $644D   LD       V4, #4D         ; Load 77 into V4
$E40    $98F6   UNKNOWN  $98F6           ; Unknown 9xxx instruction
$E42    $2562   CALL     $562            ; Call subroutine at 562
$E44    $19B4   JP       $9B4            ; Jump to 9B4
$E46    $04C2   SYS      $4C2            ; System call to 4C2
$E48    $F7D9   UNKNOWN  F7D9            ; Unknown Fxxx instruction
$E4A    $0FC4   SYS      $FC4            ; System call to FC4
$E4C    $55A6   UNKNOWN  $55A6           ; Unknown 5xxx instruction
$E4E    $1036   JP       $036            ; Jump to 036
$E50    $95C7   UNKNOWN  $95C7           ; Unknown 9xxx instruction
$E52    $F6BC   UNKNOWN  F6BC            ; Unknown Fxxx instruction
$E54    $6847   LD       V8, #47         ; Load 71 into V8
$E56    $F5D3   UNKNOWN  F5D3            ; Unknown Fxxx instruction
$E58    $0FAA   SYS      $FAA            ; System call to FAA
$E5A    $8CA4   ADD      VC, VA          ; VC += VA, VF = carry
$E5C    $B43E   JP       V0, $43E        ; Jump to V0 + 43E
$E5E    $4AA7   SNE      VA, #A7         ; Skip if VA != 167
$E60    $2ACC   CALL     $ACC            ; Call subroutine at ACC
$E62    $6E2C   LD       VE, #2C         ; Load 44 into VE
$E64    $4A28   SNE      VA, #28         ; Skip if VA != 40
$E66    $CA8A   RND      VA, #8A         ; VA = random & 8A
$E68    $D47D   DRW      V4, V7, #D      ; Draw 13-byte sprite at V4, V7
$E6A    $6D01   LD       VD, #01         ; Load 1 into VD
$E6C    $215E   CALL     $15E            ; Call subroutine at 15E
$E6E    $8C08   UNKNOWN  8C08            ; Unknown 8xxx instruction
$E70    $FD3B   UNKNOWN  FD3B            ; Unknown Fxxx instruction
$E72    $03A1   SYS      $3A1            ; System call to 3A1
$E74    $F690   UNKNOWN  F690            ; Unknown Fxxx instruction
$E76    $39AE   SE       V9, #AE         ; Skip if V9 == 174
$E78    $F79D   UNKNOWN  F79D            ; Unknown Fxxx instruction
$E7A    $C3F4   RND      V3, #F4         ; V3 = random & F4
$E7C    $05EC   SYS      $5EC            ; System call to 5EC
$E7E    $F754   UNKNOWN  F754            ; Unknown Fxxx instruction
$E80    $831A   UNKNOWN  831A            ; Unknown 8xxx instruction
$E82    $9E1E   UNKNOWN  $9E1E           ; Unknown 9xxx instruction
$E84    $3196   SE       V1, #96         ; Skip if V1 == 150
$E86    $9BCF   UNKNOWN  $9BCF           ; Unknown 9xxx instruction
$E88    $8A5A   UNKNOWN  8A5A            ; Unknown 8xxx instruction
$E8A    $5DFC   UNKNOWN  $5DFC           ; Unknown 5xxx instruction
$E8C    $CE7C   RND      VE, #7C         ; VE = random & 7C
$E8E    $CDFD   RND      VD, #FD         ; VD = random & FD
$E90    $8AAF   UNKNOWN  8AAF            ; Unknown 8xxx instruction
$E92    $3B31   SE       VB, #31         ; Skip if VB == 49
$E94    $C9F2   RND      V9, #F2         ; V9 = random & F2
$E96    $64F9   LD       V4, #F9         ; Load 249 into V4
$E98    $E41A   UNKNOWN  $E41A           ; Unknown Exxx instruction
$E9A    $3629   SE       V6, #29         ; Skip if V6 == 41
$E9C    $3B36   SE       VB, #36         ; Skip if VB == 54
$E9E    $C0CB   RND      V0, #CB         ; V0 = random & CB
$EA0    $0265   SYS      $265            ; System call to 265
$EA2    $5ADE   UNKNOWN  $5ADE           ; Unknown 5xxx instruction
$EA4    $06F8   SYS      $6F8            ; System call to 6F8
$EA6    $2203   CALL     $203            ; Call subroutine at 203
$EA8    $771A   ADD      V7, #1A         ; Add 26 to V7
$EAA    $C69D   RND      V6, #9D         ; V6 = random & 9D
$EAC    $BFA8   JP       V0, $FA8        ; Jump to V0 + FA8
$EAE    $93F1   UNKNOWN  $93F1           ; Unknown 9xxx instruction
$EB0    $FE9B   UNKNOWN  FE9B            ; Unknown Fxxx instruction
$EB2    $BFC2   JP       V0, $FC2        ; Jump to V0 + FC2
$EB4    $5262   UNKNOWN  $5262           ; Unknown 5xxx instruction
$EB6    $4668   SNE      V6, #68         ; Skip if V6 != 104
$EB8    $7F52   ADD      VF, #52         ; Add 82 to VF
$EBA    $9EB3   UNKNOWN  $9EB3           ; Unknown 9xxx instruction
$EBC    $048B   SYS      $48B            ; System call to 48B
$EBE    $A42F   LD       I, $42F         ; Load 42F into I
$EC0    $46FA   SNE      V6, #FA         ; Skip if V6 != 250
$EC2    $033E   SYS      $33E            ; System call to 33E
$EC4    $62B2   LD       V2, #B2         ; Load 178 into V2
$EC6    $803B   UNKNOWN  803B            ; Unknown 8xxx instruction
$EC8    $FEC4   UNKNOWN  FEC4            ; Unknown Fxxx instruction
$ECA    $F6DC   UNKNOWN  F6DC            ; Unknown Fxxx instruction
$ECC    $741D   ADD      V4, #1D         ; Add 29 to V4
$ECE    $BE2E   JP       V0, $E2E        ; Jump to V0 + E2E
$ED0    $6085   LD       V0, #85         ; Load 133 into V0
$ED2    $44CE   SNE      V4, #CE         ; Skip if V4 != 206
$ED4    $6CF1   LD       VC, #F1         ; Load 241 into VC
$ED6    $9047   UNKNOWN  $9047           ; Unknown 9xxx instruction
$ED8    $8397   SUBN     V3, V9          ; V3 = V9 - V3, VF = !borrow
$EDA    $5559   UNKNOWN  $5559           ; Unknown 5xxx instruction
$EDC    $EF09   UNKNOWN  $EF09           ; Unknown Exxx instruction
$EDE    $9CD9   UNKNOWN  $9CD9           ; Unknown 9xxx instruction
$EE0    $7531   ADD      V5, #31         ; Add 49 to V5
$EE2    $4311   SNE      V3, #11         ; Skip if V3 != 17
$EE4    $098C   SYS      $98C            ; System call to 98C
$EE6    $480B   SNE      V8, #0B         ; Skip if V8 != 11
$EE8    $7B3E   ADD      VB, #3E         ; Add 62 to VB
$EEA    $7434   ADD      V4, #34         ; Add 52 to V4
$EEC    $368B   SE       V6, #8B         ; Skip if V6 == 139
$EEE    $8C8E   SHL      VC              ; VC <<= 1, VF = MSB
$EF0    $687F   LD       V8, #7F         ; Load 127 into V8
$EF2    $580C   UNKNOWN  $580C           ; Unknown 5xxx instruction
$EF4    $8581   OR       V5, V8          ; V5 |= V8
$EF6    $6F7D   LD       VF, #7D         ; Load 125 into VF
$EF8    $468E   SNE      V6, #8E         ; Skip if V6 != 142
$EFA    $B370   JP       V0, $370        ; Jump to V0 + 370
$EFC    $0D86   SYS      $D86            ; System call to D86
$EFE    $EFCA   UNKNOWN  $EFCA           ; Unknown Exxx instruction
$F00    $002A   SYS      $02A            ; System call to 02A
$F02    $C1EC   RND      V1, #EC         ; V1 = random & EC
$F04    $4000   SNE      V0, #00         ; Skip if V0 != 0
$F06    $4342   SNE      V3, #42         ; Skip if V3 != 66
$F08    $3A2A   SE       VA, #2A         ; Skip if VA == 42
$F0A    $4E7F   SNE      VE, #7F         ; Skip if VE != 127
$F0C    $E196   UNKNOWN  $E196           ; Unknown Exxx instruction
$F0E    $DC18   DRW      VC, V1, #8      ; Draw 8-byte sprite at VC, V1
$F10    $7C4A   ADD      VC, #4A         ; Add 74 to VC
$F12    $8853   XOR      V8, V5          ; V8 ^= V5
$F14    $277B   CALL     $77B            ; Call subroutine at 77B
$F16    $6E44   LD       VE, #44         ; Load 68 into VE
$F18    $7C16   ADD      VC, #16         ; Add 22 to VC
$F1A    $ABF5   LD       I, $BF5         ; Load BF5 into I
$F1C    $B044   JP       V0, $044        ; Jump to V0 + 044
$F1E    $87F3   XOR      V7, VF          ; V7 ^= VF
$F20    $61D4   LD       V1, #D4         ; Load 212 into V1
$F22    $1231   JP       $231            ; Jump to 231
$F24    $AA84   LD       I, $A84         ; Load A84 into I
$F26    $3889   SE       V8, #89         ; Skip if V8 == 137
$F28    $7D63   ADD      VD, #63         ; Add 99 to VD
$F2A    $343C   SE       V4, #3C         ; Skip if V4 == 60
$F2C    $3273   SE       V2, #73         ; Skip if V2 == 115
$F2E    $11A4   JP       $1A4            ; Jump to 1A4
$F30    $78EF   ADD      V8, #EF         ; Add 239 to V8
$F32    $352A   SE       V5, #2A         ; Skip if V5 == 42
$F34    $3507   SE       V5, #07         ; Skip if V5 == 7
$F36    $9346   UNKNOWN  $9346           ; Unknown 9xxx instruction
$F38    $AFC7   LD       I, $FC7         ; Load FC7 into I
$F3A    $F2F3   UNKNOWN  F2F3            ; Unknown Fxxx instruction
$F3C    $B641   JP       V0, $641        ; Jump to V0 + 641
$F3E    $1D40   JP       $D40            ; Jump to D40
$F40    $1E65   JP       $E65            ; Jump to E65
$F42    $E4CF   UNKNOWN  $E4CF           ; Unknown Exxx instruction
$F44    $14B8   JP       $4B8            ; Jump to 4B8
$F46    $368D   SE       V6, #8D         ; Skip if V6 == 141
$F48    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$F4A    $614D   LD       V1, #4D         ; Load 77 into V1
$F4C    $8947   SUBN     V9, V4          ; V9 = V4 - V9, VF = !borrow
$F4E    $6A7D   LD       VA, #7D         ; Load 125 into VA
$F50    $DA2E   DRW      VA, V2, #E      ; Draw 14-byte sprite at VA, V2
$F52    $A061   LD       I, $061         ; Load 061 into I
$F54    $C789   RND      V7, #89         ; V7 = random & 89
$F56    $2B5C   CALL     $B5C            ; Call subroutine at B5C
$F58    $BEAC   JP       V0, $EAC        ; Jump to V0 + EAC
$F5A    $101B   JP       $01B            ; Jump to 01B
$F5C    $C5E2   RND      V5, #E2         ; V5 = random & E2
$F5E    $D963   DRW      V9, V6, #3      ; Draw 3-byte sprite at V9, V6
$F60    $2C41   CALL     $C41            ; Call subroutine at C41
$F62    $063E   SYS      $63E            ; System call to 63E
$F64    $6C93   LD       VC, #93         ; Load 147 into VC
$F66    $3AD6   SE       VA, #D6         ; Skip if VA == 214
$F68    $FE9E   UNKNOWN  FE9E            ; Unknown Fxxx instruction
$F6A    $9318   UNKNOWN  $9318           ; Unknown 9xxx instruction
$F6C    $567D   UNKNOWN  $567D           ; Unknown 5xxx instruction
$F6E    $41E8   SNE      V1, #E8         ; Skip if V1 != 232
$F70    $E05D   UNKNOWN  $E05D           ; Unknown Exxx instruction
$F72    $0402   SYS      $402            ; System call to 402
$F74    $6773   LD       V7, #73         ; Load 115 into V7
$F76    $A71A   LD       I, $71A         ; Load 71A into I
$F78    $C101   RND      V1, #01         ; V1 = random & 01
$F7A    $A3B2   LD       I, $3B2         ; Load 3B2 into I
$F7C    $3621   SE       V6, #21         ; Skip if V6 == 33
$F7E    $D0E3   DRW      V0, VE, #3      ; Draw 3-byte sprite at V0, VE
$F80    $745F   ADD      V4, #5F         ; Add 95 to V4
$F82    $DDC0   DRW      VD, VC, #0      ; Draw 0-byte sprite at VD, VC
$F84    $1808   JP       $808            ; Jump to 808
$F86    $60DD   LD       V0, #DD         ; Load 221 into V0
$F88    $0208   SYS      $208            ; System call to 208
$F8A    $0F25   SYS      $F25            ; System call to F25
$F8C    $8E2A   UNKNOWN  8E2A            ; Unknown 8xxx instruction
$F8E    $92A7   UNKNOWN  $92A7           ; Unknown 9xxx instruction
$F90    $61BE   LD       V1, #BE         ; Load 190 into V1
$F92    $DF90   DRW      VF, V9, #0      ; Draw 0-byte sprite at VF, V9
$F94    $25BD   CALL     $5BD            ; Call subroutine at 5BD
$F96    $ED86   UNKNOWN  $ED86           ; Unknown Exxx instruction
$F98    $9B50   SNE      VB, V5          ; Skip if VB != V5
$F9A    $27BC   CALL     $7BC            ; Call subroutine at 7BC
$F9C    $9889   UNKNOWN  $9889           ; Unknown 9xxx instruction
$F9E    $DE79   DRW      VE, V7, #9      ; Draw 9-byte sprite at VE, V7
$FA0    $8578   UNKNOWN  8578            ; Unknown 8xxx instruction
$FA2    $EC88   UNKNOWN  $EC88           ; Unknown Exxx instruction
$FA4    $B0D3   JP       V0, $0D3        ; Jump to V0 + 0D3
$FA6    $24D9   CALL     $4D9            ; Call subroutine at 4D9
$FA8    $C744   RND      V7, #44         ; V7 = random & 44
$FAA    $5263   UNKNOWN  $5263           ; Unknown 5xxx instruction
$FAC    $9EEC   UNKNOWN  $9EEC           ; Unknown 9xxx instruction
$FAE    $98A0   SNE      V8, VA          ; Skip if V8 != VA
$FB0    $F879   UNKNOWN  F879            ; Unknown Fxxx instruction
$FB2    $CF27   RND      VF, #27         ; VF = random & 27
$FB4    $6EA3   LD       VE, #A3         ; Load 163 into VE
$FB6    $0B0F   SYS      $B0F            ; System call to B0F
$FB8    $3298   SE       V2, #98         ; Skip if V2 == 152
$FBA    $01C6   SYS      $1C6            ; System call to 1C6
$FBC    $69E1   LD       V9, #E1         ; Load 225 into V9
$FBE    $27DC   CALL     $7DC            ; Call subroutine at 7DC
$FC0    $90A0   SNE      V0, VA          ; Skip if V0 != VA
$FC2    $2022   CALL     $022            ; Call subroutine at 022
$FC4    $6E06   LD       VE, #06         ; Load 6 into VE
$FC6    $F798   UNKNOWN  F798            ; Unknown Fxxx instruction
$FC8    $C8F2   RND      V8, #F2         ; V8 = random & F2
$FCA    $27A3   CALL     $7A3            ; Call subroutine at 7A3
$FCC    $210B   CALL     $10B            ; Call subroutine at 10B
$FCE    $8F41   OR       VF, V4          ; VF |= V4
$FD0    $01A4   SYS      $1A4            ; System call to 1A4
$FD2    $5C00   SE       VC, V0          ; Skip if VC == V0
$FD4    $9D48   UNKNOWN  $9D48           ; Unknown 9xxx instruction
$FD6    $CB19   RND      VB, #19         ; VB = random & 19
$FD8    $0932   SYS      $932            ; System call to 932
$FDA    $7DE3   ADD      VD, #E3         ; Add 227 to VD
$FDC    $D56D   DRW      V5, V6, #D      ; Draw 13-byte sprite at V5, V6
$FDE    $D41C   DRW      V4, V1, #C      ; Draw 12-byte sprite at V4, V1
$FE0    $438B   SNE      V3, #8B         ; Skip if V3 != 139
$FE2    $4BE0   SNE      VB, #E0         ; Skip if VB != 224
$FE4    $9E99   UNKNOWN  $9E99           ; Unknown 9xxx instruction
$FE6    $1189   JP       $189            ; Jump to 189
$FE8    $9430   SNE      V4, V3          ; Skip if V4 != V3
$FEA    $27DF   CALL     $7DF            ; Call subroutine at 7DF
$FEC    $40CC   SNE      V0, #CC         ; Skip if V0 != 204
$FEE    $2B6A   CALL     $B6A            ; Call subroutine at B6A
$FF0    $A4C6   LD       I, $4C6         ; Load 4C6 into I
$FF2    $369E   SE       V6, #9E         ; Skip if V6 == 158
$FF4    $9DBA   UNKNOWN  $9DBA           ; Unknown 9xxx instruction
$FF6    $EE79   UNKNOWN  $EE79           ; Unknown Exxx instruction
$FF8    $6276   LD       V2, #76         ; Load 118 into V2
$FFA    $7772   ADD      V7, #72         ; Add 114 to V7
$FFC    $EA6E   UNKNOWN  $EA6E           ; Unknown Exxx instruction
$FFE    $0ED7   SYS      $ED7            ; System call to ED7

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 480 (26.8%)
  LD      : 250 (14.0%)
  JP      : 207 (11.6%)
  CALL    : 141 ( 7.9%)
  SE      : 126 ( 7.0%)
  SYS     : 115 ( 6.4%)
  ADD     : 113 ( 6.3%)
  DRW     : 106 ( 5.9%)
  SNE     : 105 ( 5.9%)
  RND     : 100 ( 5.6%)
  SUBN    :   9 ( 0.5%)
  SHR     :   8 ( 0.4%)
  SUB     :   8 ( 0.4%)
  XOR     :   8 ( 0.4%)
  SHL     :   7 ( 0.4%)
  OR      :   6 ( 0.3%)
  AND     :   3 ( 0.2%)

Memory Operations: 363 (20.3%)
Arithmetic Operations: 147 (8.2%)
