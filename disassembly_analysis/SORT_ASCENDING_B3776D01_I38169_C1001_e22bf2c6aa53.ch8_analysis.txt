
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B3776D01_I38169_C1001_e22bf2c6aa53.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 3776
Instance: 38169
Direction: ascending
Final Array: [0, 5, 6, 12, 67, 108, 116, 250]
Operations: R:0 W:5 C:28 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 109
Sort Array References:
  $20A: LD I, $058 ; Load 058 into I
  $21A: LD I, $CB9 ; Load CB9 into I
  $21E: LD I, $1BA ; Load 1BA into I
  $230: LD I, $83F ; Load 83F into I
  $232: LD I, $B54 ; Load B54 into I
  $268: LD I, $6F6 ; Load 6F6 into I
  $26A: LD I, $C73 ; Load C73 into I
  $28A: LD I, $2F0 ; Load 2F0 into I
  $2A8: LD I, $743 ; Load 743 into I
  $2C8: LD I, $961 ; Load 961 into I
  $2DE: LD I, $7EB ; Load 7EB into I
  $312: LD I, $65B ; Load 65B into I
  $35A: LD I, $00B ; Load 00B into I
  $370: LD I, $199 ; Load 199 into I
  $37C: LD I, $5CD ; Load 5CD into I
  $3DE: LD I, $EDF ; Load EDF into I
  $3E2: LD I, $C7E ; Load C7E into I
  $410: LD I, $324 ; Load 324 into I
  $41E: LD I, $C28 ; Load C28 into I
  $436: LD I, $976 ; Load 976 into I
  $43C: LD I, $321 ; Load 321 into I
  $48C: LD I, $A53 ; Load A53 into I
  $492: LD I, $30D ; Load 30D into I
  $512: LD I, $924 ; Load 924 into I
  $514: LD I, $7AF ; Load 7AF into I
  $534: LD I, $539 ; Load 539 into I
  $574: LD I, $220 ; Load 220 into I
  $57E: LD I, $C3B ; Load C3B into I
  $5A4: LD I, $1D9 ; Load 1D9 into I
  $5AE: LD I, $BE3 ; Load BE3 into I
  $606: LD I, $E83 ; Load E83 into I
  $614: LD I, $C24 ; Load C24 into I
  $692: LD I, $FD8 ; Load FD8 into I
  $698: LD I, $597 ; Load 597 into I
  $6AA: LD I, $ACB ; Load ACB into I
  $6B0: LD I, $611 ; Load 611 into I
  $6FA: LD I, $612 ; Load 612 into I
  $706: LD I, $0E5 ; Load 0E5 into I
  $73A: LD I, $543 ; Load 543 into I
  $740: LD I, $0E9 ; Load 0E9 into I
  $754: LD I, $C86 ; Load C86 into I
  $7A2: LD I, $FDC ; Load FDC into I
  $816: LD I, $502 ; Load 502 into I
  $81E: LD I, $E1B ; Load E1B into I
  $824: LD I, $60B ; Load 60B into I
  $850: LD I, $8B7 ; Load 8B7 into I
  $856: LD I, $47E ; Load 47E into I
  $86C: LD I, $5AE ; Load 5AE into I
  $88C: LD I, $FDB ; Load FDB into I
  $8BA: LD I, $0ED ; Load 0ED into I
  $8E6: LD I, $008 ; Load 008 into I
  $8FC: LD I, $23C ; Load 23C into I
  $920: LD I, $19D ; Load 19D into I
  $950: LD I, $2EE ; Load 2EE into I
  $956: LD I, $C70 ; Load C70 into I
  $95E: LD I, $2DD ; Load 2DD into I
  $962: LD I, $8CC ; Load 8CC into I
  $974: LD I, $04C ; Load 04C into I
  $976: LD I, $A73 ; Load A73 into I
  $9AC: LD I, $232 ; Load 232 into I
  $9C8: LD I, $8E1 ; Load 8E1 into I
  $9D6: LD I, $D26 ; Load D26 into I
  $9EA: LD I, $6E4 ; Load 6E4 into I
  $A08: LD I, $31B ; Load 31B into I
  $A1C: LD I, $7A3 ; Load 7A3 into I
  $A28: LD I, $DA0 ; Load DA0 into I
  $A2E: LD I, $BDD ; Load BDD into I
  $A34: LD I, $46D ; Load 46D into I
  $A48: LD I, $610 ; Load 610 into I
  $A52: LD I, $6C6 ; Load 6C6 into I
  $A58: LD I, $914 ; Load 914 into I
  $A70: LD I, $2A2 ; Load 2A2 into I
  $A80: LD I, $EAD ; Load EAD into I
  $AA8: LD I, $2B2 ; Load 2B2 into I
  $ADE: LD I, $49B ; Load 49B into I
  $B0C: LD I, $5AA ; Load 5AA into I
  $B20: LD I, $4F9 ; Load 4F9 into I
  $B5C: LD I, $D50 ; Load D50 into I
  $B66: LD I, $0DF ; Load 0DF into I
  $B80: LD I, $6D4 ; Load 6D4 into I
  $B84: LD I, $194 ; Load 194 into I
  $B8E: LD I, $81A ; Load 81A into I
  $B96: LD I, $D9C ; Load D9C into I
  $BD6: LD I, $B9A ; Load B9A into I
  $BEA: LD I, $8D5 ; Load 8D5 into I
  $C34: LD I, $4DA ; Load 4DA into I
  $CB6: LD I, $2A6 ; Load 2A6 into I
  $CCE: LD I, $9B2 ; Load 9B2 into I
  $D06: LD I, $47C ; Load 47C into I
  $D52: LD I, $728 ; Load 728 into I
  $D6E: LD I, $26A ; Load 26A into I
  $D9C: LD I, $026 ; Load 026 into I
  $DD2: LD I, $EAC ; Load EAC into I
  $DF6: LD I, $A7F ; Load A7F into I
  $DF8: LD I, $AAD ; Load AAD into I
  $E00: LD I, $60A ; Load 60A into I
  $E3C: LD I, $E9B ; Load E9B into I
  $E9A: LD I, $457 ; Load 457 into I
  $ED8: LD I, $5AD ; Load 5AD into I
  $EF4: LD I, $3C6 ; Load 3C6 into I
  $F00: LD I, $F35 ; Load F35 into I
  $F04: LD I, $A1C ; Load A1C into I
  $F16: LD I, $782 ; Load 782 into I
  $F4C: LD I, $F4C ; Load F4C into I
  $F82: LD I, $328 ; Load 328 into I
  $F8A: LD I, $E03 ; Load E03 into I
  $F96: LD I, $2D1 ; Load 2D1 into I
  $FCE: LD I, $B96 ; Load B96 into I
  $FD2: LD I, $E29 ; Load E29 into I

CONTROL FLOW ANALYSIS:
Jumps: 240
Calls: 123
Branches: 246
Loops: 143
Loop Structures:
  $22C -> $0CF (backward jump)
  $254 -> $128 (backward jump)
  $266 -> $015 (backward jump)
  $2E2 -> $272 (backward jump)
  $348 -> $1C5 (backward jump)
  $408 -> $150 (backward jump)
  $42C -> $0D4 (backward jump)
  $4A6 -> $012 (backward jump)
  $4C2 -> $48F (backward jump)
  $4E0 -> $230 (backward jump)
  $4E6 -> $437 (backward jump)
  $53A -> $307 (backward jump)
  $558 -> $390 (backward jump)
  $588 -> $4A1 (backward jump)
  $5C6 -> $3C7 (backward jump)
  $5EC -> $1A6 (backward jump)
  $60E -> $098 (backward jump)
  $636 -> $211 (backward jump)
  $648 -> $485 (backward jump)
  $658 -> $438 (backward jump)
  $6BE -> $489 (backward jump)
  $6C4 -> $14E (backward jump)
  $6D4 -> $05E (backward jump)
  $6FE -> $180 (backward jump)
  $70E -> $60C (backward jump)
  $714 -> $064 (backward jump)
  $738 -> $579 (backward jump)
  $74C -> $6F1 (backward jump)
  $76C -> $379 (backward jump)
  $79A -> $744 (backward jump)
  $7A8 -> $1D8 (backward jump)
  $7B4 -> $28A (backward jump)
  $7D6 -> $527 (backward jump)
  $806 -> $424 (backward jump)
  $80C -> $0BA (backward jump)
  $81A -> $571 (backward jump)
  $81C -> $0A7 (backward jump)
  $870 -> $28D (backward jump)
  $88E -> $67C (backward jump)
  $8A6 -> $299 (backward jump)
  $8DE -> $7F1 (backward jump)
  $8EC -> $637 (backward jump)
  $8F0 -> $114 (backward jump)
  $926 -> $16E (backward jump)
  $94C -> $3DE (backward jump)
  $954 -> $727 (backward jump)
  $96C -> $95E (backward jump)
  $99E -> $45E (backward jump)
  $9B4 -> $253 (backward jump)
  $9EE -> $1BE (backward jump)
  $A00 -> $9CB (backward jump)
  $A10 -> $770 (backward jump)
  $A20 -> $60D (backward jump)
  $A38 -> $790 (backward jump)
  $A44 -> $571 (backward jump)
  $A64 -> $500 (backward jump)
  $A68 -> $93D (backward jump)
  $A76 -> $24D (backward jump)
  $A94 -> $794 (backward jump)
  $AA6 -> $688 (backward jump)
  $AD8 -> $723 (backward jump)
  $B00 -> $A2B (backward jump)
  $B0E -> $0BD (backward jump)
  $B14 -> $81E (backward jump)
  $B42 -> $23F (backward jump)
  $BA2 -> $99E (backward jump)
  $BAC -> $12C (backward jump)
  $BAE -> $57E (backward jump)
  $BB0 -> $94C (backward jump)
  $BCA -> $30B (backward jump)
  $BCE -> $35E (backward jump)
  $BD2 -> $8EC (backward jump)
  $BF6 -> $757 (backward jump)
  $BFE -> $B62 (backward jump)
  $C04 -> $813 (backward jump)
  $C1C -> $26B (backward jump)
  $C30 -> $96E (backward jump)
  $C32 -> $868 (backward jump)
  $C36 -> $885 (backward jump)
  $C48 -> $7D7 (backward jump)
  $C7A -> $1DC (backward jump)
  $CAA -> $61A (backward jump)
  $CC0 -> $2A9 (backward jump)
  $CC8 -> $234 (backward jump)
  $CDA -> $50B (backward jump)
  $CDE -> $5EE (backward jump)
  $CEC -> $1C7 (backward jump)
  $CEE -> $18D (backward jump)
  $CFC -> $63E (backward jump)
  $D08 -> $9FF (backward jump)
  $D12 -> $277 (backward jump)
  $D14 -> $1B0 (backward jump)
  $D40 -> $669 (backward jump)
  $D44 -> $C62 (backward jump)
  $D58 -> $566 (backward jump)
  $D60 -> $4FC (backward jump)
  $D6C -> $33C (backward jump)
  $D72 -> $58A (backward jump)
  $D76 -> $8DA (backward jump)
  $D7A -> $804 (backward jump)
  $D7E -> $9E4 (backward jump)
  $D96 -> $611 (backward jump)
  $D98 -> $ABB (backward jump)
  $DA6 -> $2EE (backward jump)
  $DBA -> $1A1 (backward jump)
  $DBE -> $415 (backward jump)
  $DC0 -> $580 (backward jump)
  $DC4 -> $7DD (backward jump)
  $DEA -> $C11 (backward jump)
  $DEE -> $5A7 (backward jump)
  $DFE -> $4FA (backward jump)
  $E16 -> $778 (backward jump)
  $E18 -> $6C1 (backward jump)
  $E2E -> $024 (backward jump)
  $E38 -> $08C (backward jump)
  $E68 -> $3E6 (backward jump)
  $E7C -> $677 (backward jump)
  $E84 -> $8D2 (backward jump)
  $E8C -> $5C0 (backward jump)
  $E94 -> $1EF (backward jump)
  $E9E -> $292 (backward jump)
  $EA2 -> $C32 (backward jump)
  $EAA -> $B58 (backward jump)
  $EC6 -> $25C (backward jump)
  $EE2 -> $08E (backward jump)
  $EF0 -> $531 (backward jump)
  $EFE -> $9D7 (backward jump)
  $F24 -> $C52 (backward jump)
  $F38 -> $00E (backward jump)
  $F52 -> $5A6 (backward jump)
  $F64 -> $6C4 (backward jump)
  $F68 -> $876 (backward jump)
  $F6E -> $5F7 (backward jump)
  $F78 -> $3CB (backward jump)
  $F98 -> $EB3 (backward jump)
  $FA0 -> $DF6 (backward jump)
  $FAC -> $CCA (backward jump)
  $FB8 -> $20B (backward jump)
  $FC8 -> $253 (backward jump)
  $FE4 -> $135 (backward jump)
  $FF4 -> $3FB (backward jump)
  $FF8 -> $A16 (backward jump)
  $FFE -> $8F9 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $CED0   RND      VE, #D0         ; VE = random & D0
$202    $1D5B   JP       $D5B            ; Jump to D5B
$204    $3415   SE       V4, #15         ; Skip if V4 == 21
$206    $7120   ADD      V1, #20         ; Add 32 to V1
$208    $2A60   CALL     $A60            ; Call subroutine at A60
$20A    $A058   LD       I, $058         ; Load 058 into I
$20C    $06F7   SYS      $6F7            ; System call to 6F7
$20E    $549A   UNKNOWN  $549A           ; Unknown 5xxx instruction
$210    $0ECF   SYS      $ECF            ; System call to ECF
$212    $9BA1   UNKNOWN  $9BA1           ; Unknown 9xxx instruction
$214    $ED59   UNKNOWN  $ED59           ; Unknown Exxx instruction
$216    $B6D7   JP       V0, $6D7        ; Jump to V0 + 6D7
$218    $B56B   JP       V0, $56B        ; Jump to V0 + 56B
$21A    $ACB9   LD       I, $CB9         ; Load CB9 into I
$21C    $CF9C   RND      VF, #9C         ; VF = random & 9C
$21E    $A1BA   LD       I, $1BA         ; Load 1BA into I
$220    $EAE0   UNKNOWN  $EAE0           ; Unknown Exxx instruction
$222    $BFAD   JP       V0, $FAD        ; Jump to V0 + FAD
$224    $5577   UNKNOWN  $5577           ; Unknown 5xxx instruction
$226    $CA2D   RND      VA, #2D         ; VA = random & 2D
$228    $D46B   DRW      V4, V6, #B      ; Draw 11-byte sprite at V4, V6
$22A    $761E   ADD      V6, #1E         ; Add 30 to V6
$22C    $10CF   JP       $0CF            ; Jump to 0CF
$22E    $400B   SNE      V0, #0B         ; Skip if V0 != 11
$230    $A83F   LD       I, $83F         ; Load 83F into I
$232    $AB54   LD       I, $B54         ; Load B54 into I
$234    $546B   UNKNOWN  $546B           ; Unknown 5xxx instruction
$236    $3D5A   SE       VD, #5A         ; Skip if VD == 90
$238    $C200   RND      V2, #00         ; V2 = random & 00
$23A    $C256   RND      V2, #56         ; V2 = random & 56
$23C    $8D59   UNKNOWN  8D59            ; Unknown 8xxx instruction
$23E    $B76B   JP       V0, $76B        ; Jump to V0 + 76B
$240    $855C   UNKNOWN  855C            ; Unknown 8xxx instruction
$242    $7506   ADD      V5, #06         ; Add 6 to V5
$244    $E4AB   UNKNOWN  $E4AB           ; Unknown Exxx instruction
$246    $062D   SYS      $62D            ; System call to 62D
$248    $6405   LD       V4, #05         ; Load 5 into V4
$24A    $F14B   UNKNOWN  F14B            ; Unknown Fxxx instruction
$24C    $6011   LD       V0, #11         ; Load 17 into V0
$24E    $1393   JP       $393            ; Jump to 393
$250    $81BC   UNKNOWN  81BC            ; Unknown 8xxx instruction
$252    $F63F   UNKNOWN  F63F            ; Unknown Fxxx instruction
$254    $1128   JP       $128            ; Jump to 128
$256    $D4C0   DRW      V4, VC, #0      ; Draw 0-byte sprite at V4, VC
$258    $9281   UNKNOWN  $9281           ; Unknown 9xxx instruction
$25A    $59DC   UNKNOWN  $59DC           ; Unknown 5xxx instruction
$25C    $77AD   ADD      V7, #AD         ; Add 173 to V7
$25E    $7962   ADD      V9, #62         ; Add 98 to V9
$260    $615A   LD       V1, #5A         ; Load 90 into V1
$262    $B29F   JP       V0, $29F        ; Jump to V0 + 29F
$264    $284B   CALL     $84B            ; Call subroutine at 84B
$266    $B015   JP       V0, $015        ; Jump to V0 + 015
$268    $A6F6   LD       I, $6F6         ; Load 6F6 into I
$26A    $AC73   LD       I, $C73         ; Load C73 into I
$26C    $E435   UNKNOWN  $E435           ; Unknown Exxx instruction
$26E    $EEB8   UNKNOWN  $EEB8           ; Unknown Exxx instruction
$270    $C4C2   RND      V4, #C2         ; V4 = random & C2
$272    $6126   LD       V1, #26         ; Load 38 into V1
$274    $5EBA   UNKNOWN  $5EBA           ; Unknown 5xxx instruction
$276    $D7A6   DRW      V7, VA, #6      ; Draw 6-byte sprite at V7, VA
$278    $789F   ADD      V8, #9F         ; Add 159 to V8
$27A    $89CF   UNKNOWN  89CF            ; Unknown 8xxx instruction
$27C    $7156   ADD      V1, #56         ; Add 86 to V1
$27E    $D217   DRW      V2, V1, #7      ; Draw 7-byte sprite at V2, V1
$280    $3824   SE       V8, #24         ; Skip if V8 == 36
$282    $9280   SNE      V2, V8          ; Skip if V2 != V8
$284    $5C7C   UNKNOWN  $5C7C           ; Unknown 5xxx instruction
$286    $5556   UNKNOWN  $5556           ; Unknown 5xxx instruction
$288    $8F19   UNKNOWN  8F19            ; Unknown 8xxx instruction
$28A    $A2F0   LD       I, $2F0         ; Load 2F0 into I
$28C    $7BCB   ADD      VB, #CB         ; Add 203 to VB
$28E    $7662   ADD      V6, #62         ; Add 98 to V6
$290    $16CB   JP       $6CB            ; Jump to 6CB
$292    $0A48   SYS      $A48            ; System call to A48
$294    $7FE3   ADD      VF, #E3         ; Add 227 to VF
$296    $2BB2   CALL     $BB2            ; Call subroutine at BB2
$298    $8E67   SUBN     VE, V6          ; VE = V6 - VE, VF = !borrow
$29A    $719C   ADD      V1, #9C         ; Add 156 to V1
$29C    $D33E   DRW      V3, V3, #E      ; Draw 14-byte sprite at V3, V3
$29E    $F640   UNKNOWN  F640            ; Unknown Fxxx instruction
$2A0    $D6FD   DRW      V6, VF, #D      ; Draw 13-byte sprite at V6, VF
$2A2    $3634   SE       V6, #34         ; Skip if V6 == 52
$2A4    $B8C3   JP       V0, $8C3        ; Jump to V0 + 8C3
$2A6    $31F8   SE       V1, #F8         ; Skip if V1 == 248
$2A8    $A743   LD       I, $743         ; Load 743 into I
$2AA    $6A62   LD       VA, #62         ; Load 98 into VA
$2AC    $62B5   LD       V2, #B5         ; Load 181 into V2
$2AE    $4E57   SNE      VE, #57         ; Skip if VE != 87
$2B0    $DEF6   DRW      VE, VF, #6      ; Draw 6-byte sprite at VE, VF
$2B2    $B7E3   JP       V0, $7E3        ; Jump to V0 + 7E3
$2B4    $FAB4   UNKNOWN  FAB4            ; Unknown Fxxx instruction
$2B6    $D240   DRW      V2, V4, #0      ; Draw 0-byte sprite at V2, V4
$2B8    $8992   AND      V9, V9          ; V9 &= V9
$2BA    $7649   ADD      V6, #49         ; Add 73 to V6
$2BC    $F946   UNKNOWN  F946            ; Unknown Fxxx instruction
$2BE    $7EEA   ADD      VE, #EA         ; Add 234 to VE
$2C0    $76E3   ADD      V6, #E3         ; Add 227 to V6
$2C2    $B544   JP       V0, $544        ; Jump to V0 + 544
$2C4    $63A0   LD       V3, #A0         ; Load 160 into V3
$2C6    $C3F1   RND      V3, #F1         ; V3 = random & F1
$2C8    $A961   LD       I, $961         ; Load 961 into I
$2CA    $3E33   SE       VE, #33         ; Skip if VE == 51
$2CC    $6A36   LD       VA, #36         ; Load 54 into VA
$2CE    $531A   UNKNOWN  $531A           ; Unknown 5xxx instruction
$2D0    $FF1C   UNKNOWN  FF1C            ; Unknown Fxxx instruction
$2D2    $47A3   SNE      V7, #A3         ; Skip if V7 != 163
$2D4    $7DEF   ADD      VD, #EF         ; Add 239 to VD
$2D6    $1B0C   JP       $B0C            ; Jump to B0C
$2D8    $61FE   LD       V1, #FE         ; Load 254 into V1
$2DA    $BE89   JP       V0, $E89        ; Jump to V0 + E89
$2DC    $87C1   OR       V7, VC          ; V7 |= VC
$2DE    $A7EB   LD       I, $7EB         ; Load 7EB into I
$2E0    $26B7   CALL     $6B7            ; Call subroutine at 6B7
$2E2    $1272   JP       $272            ; Jump to 272
$2E4    $81D8   UNKNOWN  81D8            ; Unknown 8xxx instruction
$2E6    $9675   UNKNOWN  $9675           ; Unknown 9xxx instruction
$2E8    $D0FD   DRW      V0, VF, #D      ; Draw 13-byte sprite at V0, VF
$2EA    $73E2   ADD      V3, #E2         ; Add 226 to V3
$2EC    $FE3D   UNKNOWN  FE3D            ; Unknown Fxxx instruction
$2EE    $3BA6   SE       VB, #A6         ; Skip if VB == 166
$2F0    $F9B2   UNKNOWN  F9B2            ; Unknown Fxxx instruction
$2F2    $E5AE   UNKNOWN  $E5AE           ; Unknown Exxx instruction
$2F4    $2D0D   CALL     $D0D            ; Call subroutine at D0D
$2F6    $0C37   SYS      $C37            ; System call to C37
$2F8    $08A6   SYS      $8A6            ; System call to 8A6
$2FA    $24D0   CALL     $4D0            ; Call subroutine at 4D0
$2FC    $83FD   UNKNOWN  83FD            ; Unknown 8xxx instruction
$2FE    $9490   SNE      V4, V9          ; Skip if V4 != V9
$300    $0005   SYS      $005            ; System call to 005
$302    $060C   SYS      $60C            ; System call to 60C
$304    $436C   SNE      V3, #6C         ; Skip if V3 != 108
$306    $74FA   ADD      V4, #FA         ; Add 250 to V4
$308    $46BF   SNE      V6, #BF         ; Skip if V6 != 191
$30A    $FBAC   UNKNOWN  FBAC            ; Unknown Fxxx instruction
$30C    $90CB   UNKNOWN  $90CB           ; Unknown 9xxx instruction
$30E    $18BE   JP       $8BE            ; Jump to 8BE
$310    $1C7F   JP       $C7F            ; Jump to C7F
$312    $A65B   LD       I, $65B         ; Load 65B into I
$314    $97D1   UNKNOWN  $97D1           ; Unknown 9xxx instruction
$316    $6461   LD       V4, #61         ; Load 97 into V4
$318    $37B2   SE       V7, #B2         ; Skip if V7 == 178
$31A    $3F24   SE       VF, #24         ; Skip if VF == 36
$31C    $82CF   UNKNOWN  82CF            ; Unknown 8xxx instruction
$31E    $93CC   UNKNOWN  $93CC           ; Unknown 9xxx instruction
$320    $2211   CALL     $211            ; Call subroutine at 211
$322    $9DF6   UNKNOWN  $9DF6           ; Unknown 9xxx instruction
$324    $C5E9   RND      V5, #E9         ; V5 = random & E9
$326    $E9AC   UNKNOWN  $E9AC           ; Unknown Exxx instruction
$328    $29EB   CALL     $9EB            ; Call subroutine at 9EB
$32A    $FE33   LD       B, VE           ; Store BCD of VE at I, I+1, I+2
$32C    $2461   CALL     $461            ; Call subroutine at 461
$32E    $802D   UNKNOWN  802D            ; Unknown 8xxx instruction
$330    $5519   UNKNOWN  $5519           ; Unknown 5xxx instruction
$332    $8CD5   SUB      VC, VD          ; VC -= VD, VF = !borrow
$334    $DCBF   DRW      VC, VB, #F      ; Draw 15-byte sprite at VC, VB
$336    $4752   SNE      V7, #52         ; Skip if V7 != 82
$338    $ED8F   UNKNOWN  $ED8F           ; Unknown Exxx instruction
$33A    $DB6D   DRW      VB, V6, #D      ; Draw 13-byte sprite at VB, V6
$33C    $7DB0   ADD      VD, #B0         ; Add 176 to VD
$33E    $442C   SNE      V4, #2C         ; Skip if V4 != 44
$340    $4E88   SNE      VE, #88         ; Skip if VE != 136
$342    $46BB   SNE      V6, #BB         ; Skip if V6 != 187
$344    $5BE0   SE       VB, VE          ; Skip if VB == VE
$346    $CFAA   RND      VF, #AA         ; VF = random & AA
$348    $B1C5   JP       V0, $1C5        ; Jump to V0 + 1C5
$34A    $E7A6   UNKNOWN  $E7A6           ; Unknown Exxx instruction
$34C    $7715   ADD      V7, #15         ; Add 21 to V7
$34E    $69FC   LD       V9, #FC         ; Load 252 into V9
$350    $2F51   CALL     $F51            ; Call subroutine at F51
$352    $D4B1   DRW      V4, VB, #1      ; Draw 1-byte sprite at V4, VB
$354    $6E2D   LD       VE, #2D         ; Load 45 into VE
$356    $C5D7   RND      V5, #D7         ; V5 = random & D7
$358    $F9BA   UNKNOWN  F9BA            ; Unknown Fxxx instruction
$35A    $A00B   LD       I, $00B         ; Load 00B into I
$35C    $4F54   SNE      VF, #54         ; Skip if VF != 84
$35E    $4D39   SNE      VD, #39         ; Skip if VD != 57
$360    $0FD4   SYS      $FD4            ; System call to FD4
$362    $B5CF   JP       V0, $5CF        ; Jump to V0 + 5CF
$364    $8A03   XOR      VA, V0          ; VA ^= V0
$366    $892A   UNKNOWN  892A            ; Unknown 8xxx instruction
$368    $EF2E   UNKNOWN  $EF2E           ; Unknown Exxx instruction
$36A    $F506   UNKNOWN  F506            ; Unknown Fxxx instruction
$36C    $27DE   CALL     $7DE            ; Call subroutine at 7DE
$36E    $8177   SUBN     V1, V7          ; V1 = V7 - V1, VF = !borrow
$370    $A199   LD       I, $199         ; Load 199 into I
$372    $376D   SE       V7, #6D         ; Skip if V7 == 109
$374    $E681   UNKNOWN  $E681           ; Unknown Exxx instruction
$376    $CE12   RND      VE, #12         ; VE = random & 12
$378    $99C6   UNKNOWN  $99C6           ; Unknown 9xxx instruction
$37A    $C8B8   RND      V8, #B8         ; V8 = random & B8
$37C    $A5CD   LD       I, $5CD         ; Load 5CD into I
$37E    $05BB   SYS      $5BB            ; System call to 5BB
$380    $06CE   SYS      $6CE            ; System call to 6CE
$382    $7897   ADD      V8, #97         ; Add 151 to V8
$384    $FA25   UNKNOWN  FA25            ; Unknown Fxxx instruction
$386    $0B79   SYS      $B79            ; System call to B79
$388    $FF95   UNKNOWN  FF95            ; Unknown Fxxx instruction
$38A    $7760   ADD      V7, #60         ; Add 96 to V7
$38C    $E5A0   UNKNOWN  $E5A0           ; Unknown Exxx instruction
$38E    $9FB1   UNKNOWN  $9FB1           ; Unknown 9xxx instruction
$390    $4CD0   SNE      VC, #D0         ; Skip if VC != 208
$392    $BDEA   JP       V0, $DEA        ; Jump to V0 + DEA
$394    $39E5   SE       V9, #E5         ; Skip if V9 == 229
$396    $5965   UNKNOWN  $5965           ; Unknown 5xxx instruction
$398    $3560   SE       V5, #60         ; Skip if V5 == 96
$39A    $4A9B   SNE      VA, #9B         ; Skip if VA != 155
$39C    $F6CD   UNKNOWN  F6CD            ; Unknown Fxxx instruction
$39E    $7B56   ADD      VB, #56         ; Add 86 to VB
$3A0    $8C95   SUB      VC, V9          ; VC -= V9, VF = !borrow
$3A2    $F982   UNKNOWN  F982            ; Unknown Fxxx instruction
$3A4    $605C   LD       V0, #5C         ; Load 92 into V0
$3A6    $D0DA   DRW      V0, VD, #A      ; Draw 10-byte sprite at V0, VD
$3A8    $8AF8   UNKNOWN  8AF8            ; Unknown 8xxx instruction
$3AA    $D22D   DRW      V2, V2, #D      ; Draw 13-byte sprite at V2, V2
$3AC    $46B0   SNE      V6, #B0         ; Skip if V6 != 176
$3AE    $1407   JP       $407            ; Jump to 407
$3B0    $9622   UNKNOWN  $9622           ; Unknown 9xxx instruction
$3B2    $BEBF   JP       V0, $EBF        ; Jump to V0 + EBF
$3B4    $4584   SNE      V5, #84         ; Skip if V5 != 132
$3B6    $BE61   JP       V0, $E61        ; Jump to V0 + E61
$3B8    $79F0   ADD      V9, #F0         ; Add 240 to V9
$3BA    $0963   SYS      $963            ; System call to 963
$3BC    $8F4A   UNKNOWN  8F4A            ; Unknown 8xxx instruction
$3BE    $5B80   SE       VB, V8          ; Skip if VB == V8
$3C0    $3531   SE       V5, #31         ; Skip if V5 == 49
$3C2    $5FA6   UNKNOWN  $5FA6           ; Unknown 5xxx instruction
$3C4    $F166   UNKNOWN  F166            ; Unknown Fxxx instruction
$3C6    $21BF   CALL     $1BF            ; Call subroutine at 1BF
$3C8    $FB36   UNKNOWN  FB36            ; Unknown Fxxx instruction
$3CA    $C9D1   RND      V9, #D1         ; V9 = random & D1
$3CC    $469D   SNE      V6, #9D         ; Skip if V6 != 157
$3CE    $6E01   LD       VE, #01         ; Load 1 into VE
$3D0    $C5E4   RND      V5, #E4         ; V5 = random & E4
$3D2    $1657   JP       $657            ; Jump to 657
$3D4    $E5E7   UNKNOWN  $E5E7           ; Unknown Exxx instruction
$3D6    $234A   CALL     $34A            ; Call subroutine at 34A
$3D8    $1CD3   JP       $CD3            ; Jump to CD3
$3DA    $3C3A   SE       VC, #3A         ; Skip if VC == 58
$3DC    $04D2   SYS      $4D2            ; System call to 4D2
$3DE    $AEDF   LD       I, $EDF         ; Load EDF into I
$3E0    $912E   UNKNOWN  $912E           ; Unknown 9xxx instruction
$3E2    $AC7E   LD       I, $C7E         ; Load C7E into I
$3E4    $6291   LD       V2, #91         ; Load 145 into V2
$3E6    $4B29   SNE      VB, #29         ; Skip if VB != 41
$3E8    $B565   JP       V0, $565        ; Jump to V0 + 565
$3EA    $8BE0   LD       VB, VE          ; VB = VE
$3EC    $0CC5   SYS      $CC5            ; System call to CC5
$3EE    $1971   JP       $971            ; Jump to 971
$3F0    $51ED   UNKNOWN  $51ED           ; Unknown 5xxx instruction
$3F2    $B959   JP       V0, $959        ; Jump to V0 + 959
$3F4    $03CB   SYS      $3CB            ; System call to 3CB
$3F6    $FF6A   UNKNOWN  FF6A            ; Unknown Fxxx instruction
$3F8    $BF73   JP       V0, $F73        ; Jump to V0 + F73
$3FA    $6433   LD       V4, #33         ; Load 51 into V4
$3FC    $E22E   UNKNOWN  $E22E           ; Unknown Exxx instruction
$3FE    $8D70   LD       VD, V7          ; VD = V7
$400    $803C   UNKNOWN  803C            ; Unknown 8xxx instruction
$402    $23AB   CALL     $3AB            ; Call subroutine at 3AB
$404    $3967   SE       V9, #67         ; Skip if V9 == 103
$406    $61D7   LD       V1, #D7         ; Load 215 into V1
$408    $1150   JP       $150            ; Jump to 150
$40A    $6460   LD       V4, #60         ; Load 96 into V4
$40C    $2212   CALL     $212            ; Call subroutine at 212
$40E    $4393   SNE      V3, #93         ; Skip if V3 != 147
$410    $A324   LD       I, $324         ; Load 324 into I
$412    $26E7   CALL     $6E7            ; Call subroutine at 6E7
$414    $FAEC   UNKNOWN  FAEC            ; Unknown Fxxx instruction
$416    $D6C4   DRW      V6, VC, #4      ; Draw 4-byte sprite at V6, VC
$418    $7946   ADD      V9, #46         ; Add 70 to V9
$41A    $3342   SE       V3, #42         ; Skip if V3 == 66
$41C    $922A   UNKNOWN  $922A           ; Unknown 9xxx instruction
$41E    $AC28   LD       I, $C28         ; Load C28 into I
$420    $9418   UNKNOWN  $9418           ; Unknown 9xxx instruction
$422    $3B1E   SE       VB, #1E         ; Skip if VB == 30
$424    $DA67   DRW      VA, V6, #7      ; Draw 7-byte sprite at VA, V6
$426    $E973   UNKNOWN  $E973           ; Unknown Exxx instruction
$428    $8707   SUBN     V7, V0          ; V7 = V0 - V7, VF = !borrow
$42A    $0D6C   SYS      $D6C            ; System call to D6C
$42C    $B0D4   JP       V0, $0D4        ; Jump to V0 + 0D4
$42E    $85A6   SHR      V5              ; V5 >>= 1, VF = LSB
$430    $E3CF   UNKNOWN  $E3CF           ; Unknown Exxx instruction
$432    $7DF5   ADD      VD, #F5         ; Add 245 to VD
$434    $E365   UNKNOWN  $E365           ; Unknown Exxx instruction
$436    $A976   LD       I, $976         ; Load 976 into I
$438    $01B9   SYS      $1B9            ; System call to 1B9
$43A    $9B6C   UNKNOWN  $9B6C           ; Unknown 9xxx instruction
$43C    $A321   LD       I, $321         ; Load 321 into I
$43E    $1809   JP       $809            ; Jump to 809
$440    $33F6   SE       V3, #F6         ; Skip if V3 == 246
$442    $D662   DRW      V6, V6, #2      ; Draw 2-byte sprite at V6, V6
$444    $7563   ADD      V5, #63         ; Add 99 to V5
$446    $CC19   RND      VC, #19         ; VC = random & 19
$448    $1FBA   JP       $FBA            ; Jump to FBA
$44A    $2D23   CALL     $D23            ; Call subroutine at D23
$44C    $3B84   SE       VB, #84         ; Skip if VB == 132
$44E    $EB74   UNKNOWN  $EB74           ; Unknown Exxx instruction
$450    $C03F   RND      V0, #3F         ; V0 = random & 3F
$452    $9D41   UNKNOWN  $9D41           ; Unknown 9xxx instruction
$454    $6847   LD       V8, #47         ; Load 71 into V8
$456    $BBCA   JP       V0, $BCA        ; Jump to V0 + BCA
$458    $D916   DRW      V9, V1, #6      ; Draw 6-byte sprite at V9, V1
$45A    $02E7   SYS      $2E7            ; System call to 2E7
$45C    $F7CA   UNKNOWN  F7CA            ; Unknown Fxxx instruction
$45E    $93E7   UNKNOWN  $93E7           ; Unknown 9xxx instruction
$460    $85C1   OR       V5, VC          ; V5 |= VC
$462    $F28D   UNKNOWN  F28D            ; Unknown Fxxx instruction
$464    $B68A   JP       V0, $68A        ; Jump to V0 + 68A
$466    $7998   ADD      V9, #98         ; Add 152 to V9
$468    $9DA5   UNKNOWN  $9DA5           ; Unknown 9xxx instruction
$46A    $B6B0   JP       V0, $6B0        ; Jump to V0 + 6B0
$46C    $DC0C   DRW      VC, V0, #C      ; Draw 12-byte sprite at VC, V0
$46E    $164E   JP       $64E            ; Jump to 64E
$470    $9555   UNKNOWN  $9555           ; Unknown 9xxx instruction
$472    $D352   DRW      V3, V5, #2      ; Draw 2-byte sprite at V3, V5
$474    $CF05   RND      VF, #05         ; VF = random & 05
$476    $DFCC   DRW      VF, VC, #C      ; Draw 12-byte sprite at VF, VC
$478    $D632   DRW      V6, V3, #2      ; Draw 2-byte sprite at V6, V3
$47A    $2A55   CALL     $A55            ; Call subroutine at A55
$47C    $EAE6   UNKNOWN  $EAE6           ; Unknown Exxx instruction
$47E    $EFFD   UNKNOWN  $EFFD           ; Unknown Exxx instruction
$480    $537C   UNKNOWN  $537C           ; Unknown 5xxx instruction
$482    $6C85   LD       VC, #85         ; Load 133 into VC
$484    $FDAA   UNKNOWN  FDAA            ; Unknown Fxxx instruction
$486    $C68C   RND      V6, #8C         ; V6 = random & 8C
$488    $43CD   SNE      V3, #CD         ; Skip if V3 != 205
$48A    $0E14   SYS      $E14            ; System call to E14
$48C    $AA53   LD       I, $A53         ; Load A53 into I
$48E    $FFD3   UNKNOWN  FFD3            ; Unknown Fxxx instruction
$490    $938D   UNKNOWN  $938D           ; Unknown 9xxx instruction
$492    $A30D   LD       I, $30D         ; Load 30D into I
$494    $B60E   JP       V0, $60E        ; Jump to V0 + 60E
$496    $C084   RND      V0, #84         ; V0 = random & 84
$498    $EAF8   UNKNOWN  $EAF8           ; Unknown Exxx instruction
$49A    $C812   RND      V8, #12         ; V8 = random & 12
$49C    $21D0   CALL     $1D0            ; Call subroutine at 1D0
$49E    $F9F1   UNKNOWN  F9F1            ; Unknown Fxxx instruction
$4A0    $40A6   SNE      V0, #A6         ; Skip if V0 != 166
$4A2    $3D01   SE       VD, #01         ; Skip if VD == 1
$4A4    $E086   UNKNOWN  $E086           ; Unknown Exxx instruction
$4A6    $1012   JP       $012            ; Jump to 012
$4A8    $F09E   UNKNOWN  F09E            ; Unknown Fxxx instruction
$4AA    $01CA   SYS      $1CA            ; System call to 1CA
$4AC    $E323   UNKNOWN  $E323           ; Unknown Exxx instruction
$4AE    $F614   UNKNOWN  F614            ; Unknown Fxxx instruction
$4B0    $BC37   JP       V0, $C37        ; Jump to V0 + C37
$4B2    $04EA   SYS      $4EA            ; System call to 4EA
$4B4    $9409   UNKNOWN  $9409           ; Unknown 9xxx instruction
$4B6    $3279   SE       V2, #79         ; Skip if V2 == 121
$4B8    $77B7   ADD      V7, #B7         ; Add 183 to V7
$4BA    $50B1   UNKNOWN  $50B1           ; Unknown 5xxx instruction
$4BC    $5D92   UNKNOWN  $5D92           ; Unknown 5xxx instruction
$4BE    $8AAC   UNKNOWN  8AAC            ; Unknown 8xxx instruction
$4C0    $59EE   UNKNOWN  $59EE           ; Unknown 5xxx instruction
$4C2    $B48F   JP       V0, $48F        ; Jump to V0 + 48F
$4C4    $23FB   CALL     $3FB            ; Call subroutine at 3FB
$4C6    $F2F6   UNKNOWN  F2F6            ; Unknown Fxxx instruction
$4C8    $E48E   UNKNOWN  $E48E           ; Unknown Exxx instruction
$4CA    $36C1   SE       V6, #C1         ; Skip if V6 == 193
$4CC    $36E1   SE       V6, #E1         ; Skip if V6 == 225
$4CE    $1D88   JP       $D88            ; Jump to D88
$4D0    $CAFC   RND      VA, #FC         ; VA = random & FC
$4D2    $E8FF   UNKNOWN  $E8FF           ; Unknown Exxx instruction
$4D4    $C96A   RND      V9, #6A         ; V9 = random & 6A
$4D6    $5282   UNKNOWN  $5282           ; Unknown 5xxx instruction
$4D8    $7C36   ADD      VC, #36         ; Add 54 to VC
$4DA    $50FB   UNKNOWN  $50FB           ; Unknown 5xxx instruction
$4DC    $B67F   JP       V0, $67F        ; Jump to V0 + 67F
$4DE    $774F   ADD      V7, #4F         ; Add 79 to V7
$4E0    $1230   JP       $230            ; Jump to 230
$4E2    $00EA   SYS      $0EA            ; System call to 0EA
$4E4    $0836   SYS      $836            ; System call to 836
$4E6    $B437   JP       V0, $437        ; Jump to V0 + 437
$4E8    $68AA   LD       V8, #AA         ; Load 170 into V8
$4EA    $71B2   ADD      V1, #B2         ; Add 178 to V1
$4EC    $4FD2   SNE      VF, #D2         ; Skip if VF != 210
$4EE    $0ADB   SYS      $ADB            ; System call to ADB
$4F0    $5C1C   UNKNOWN  $5C1C           ; Unknown 5xxx instruction
$4F2    $24B6   CALL     $4B6            ; Call subroutine at 4B6
$4F4    $5BBD   UNKNOWN  $5BBD           ; Unknown 5xxx instruction
$4F6    $F3C6   UNKNOWN  F3C6            ; Unknown Fxxx instruction
$4F8    $48E1   SNE      V8, #E1         ; Skip if V8 != 225
$4FA    $7BCF   ADD      VB, #CF         ; Add 207 to VB
$4FC    $5359   UNKNOWN  $5359           ; Unknown 5xxx instruction
$4FE    $97F6   UNKNOWN  $97F6           ; Unknown 9xxx instruction
$500    $CD3E   RND      VD, #3E         ; VD = random & 3E
$502    $F34D   UNKNOWN  F34D            ; Unknown Fxxx instruction
$504    $5AAA   UNKNOWN  $5AAA           ; Unknown 5xxx instruction
$506    $317D   SE       V1, #7D         ; Skip if V1 == 125
$508    $0414   SYS      $414            ; System call to 414
$50A    $02B8   SYS      $2B8            ; System call to 2B8
$50C    $D95F   DRW      V9, V5, #F      ; Draw 15-byte sprite at V9, V5
$50E    $BBD0   JP       V0, $BD0        ; Jump to V0 + BD0
$510    $1F9B   JP       $F9B            ; Jump to F9B
$512    $A924   LD       I, $924         ; Load 924 into I
$514    $A7AF   LD       I, $7AF         ; Load 7AF into I
$516    $5F45   UNKNOWN  $5F45           ; Unknown 5xxx instruction
$518    $EEB4   UNKNOWN  $EEB4           ; Unknown Exxx instruction
$51A    $6F29   LD       VF, #29         ; Load 41 into VF
$51C    $8503   XOR      V5, V0          ; V5 ^= V0
$51E    $BB92   JP       V0, $B92        ; Jump to V0 + B92
$520    $F624   UNKNOWN  F624            ; Unknown Fxxx instruction
$522    $C3AA   RND      V3, #AA         ; V3 = random & AA
$524    $D80F   DRW      V8, V0, #F      ; Draw 15-byte sprite at V8, V0
$526    $21CE   CALL     $1CE            ; Call subroutine at 1CE
$528    $6F73   LD       VF, #73         ; Load 115 into VF
$52A    $CA0B   RND      VA, #0B         ; VA = random & 0B
$52C    $EABF   UNKNOWN  $EABF           ; Unknown Exxx instruction
$52E    $64FF   LD       V4, #FF         ; Load 255 into V4
$530    $9832   UNKNOWN  $9832           ; Unknown 9xxx instruction
$532    $688B   LD       V8, #8B         ; Load 139 into V8
$534    $A539   LD       I, $539         ; Load 539 into I
$536    $0446   SYS      $446            ; System call to 446
$538    $5FB2   UNKNOWN  $5FB2           ; Unknown 5xxx instruction
$53A    $B307   JP       V0, $307        ; Jump to V0 + 307
$53C    $1C98   JP       $C98            ; Jump to C98
$53E    $32AE   SE       V2, #AE         ; Skip if V2 == 174
$540    $C05F   RND      V0, #5F         ; V0 = random & 5F
$542    $BB50   JP       V0, $B50        ; Jump to V0 + B50
$544    $8728   UNKNOWN  8728            ; Unknown 8xxx instruction
$546    $369F   SE       V6, #9F         ; Skip if V6 == 159
$548    $58BF   UNKNOWN  $58BF           ; Unknown 5xxx instruction
$54A    $CC25   RND      VC, #25         ; VC = random & 25
$54C    $835C   UNKNOWN  835C            ; Unknown 8xxx instruction
$54E    $5C1B   UNKNOWN  $5C1B           ; Unknown 5xxx instruction
$550    $28F7   CALL     $8F7            ; Call subroutine at 8F7
$552    $C111   RND      V1, #11         ; V1 = random & 11
$554    $1C91   JP       $C91            ; Jump to C91
$556    $6582   LD       V5, #82         ; Load 130 into V5
$558    $1390   JP       $390            ; Jump to 390
$55A    $5446   UNKNOWN  $5446           ; Unknown 5xxx instruction
$55C    $E397   UNKNOWN  $E397           ; Unknown Exxx instruction
$55E    $0EC9   SYS      $EC9            ; System call to EC9
$560    $C93B   RND      V9, #3B         ; V9 = random & 3B
$562    $9900   SNE      V9, V0          ; Skip if V9 != V0
$564    $5A29   UNKNOWN  $5A29           ; Unknown 5xxx instruction
$566    $6DFA   LD       VD, #FA         ; Load 250 into VD
$568    $42E5   SNE      V2, #E5         ; Skip if V2 != 229
$56A    $BDC6   JP       V0, $DC6        ; Jump to V0 + DC6
$56C    $0B4D   SYS      $B4D            ; System call to B4D
$56E    $8D3E   SHL      VD              ; VD <<= 1, VF = MSB
$570    $1773   JP       $773            ; Jump to 773
$572    $47DC   SNE      V7, #DC         ; Skip if V7 != 220
$574    $A220   LD       I, $220         ; Load 220 into I
$576    $5629   UNKNOWN  $5629           ; Unknown 5xxx instruction
$578    $2F38   CALL     $F38            ; Call subroutine at F38
$57A    $EA29   UNKNOWN  $EA29           ; Unknown Exxx instruction
$57C    $6ACE   LD       VA, #CE         ; Load 206 into VA
$57E    $AC3B   LD       I, $C3B         ; Load C3B into I
$580    $DA8C   DRW      VA, V8, #C      ; Draw 12-byte sprite at VA, V8
$582    $9E58   UNKNOWN  $9E58           ; Unknown 9xxx instruction
$584    $0B35   SYS      $B35            ; System call to B35
$586    $D1F9   DRW      V1, VF, #9      ; Draw 9-byte sprite at V1, VF
$588    $14A1   JP       $4A1            ; Jump to 4A1
$58A    $7DAF   ADD      VD, #AF         ; Add 175 to VD
$58C    $C555   RND      V5, #55         ; V5 = random & 55
$58E    $CA8E   RND      VA, #8E         ; VA = random & 8E
$590    $8160   LD       V1, V6          ; V1 = V6
$592    $E50D   UNKNOWN  $E50D           ; Unknown Exxx instruction
$594    $C2A6   RND      V2, #A6         ; V2 = random & A6
$596    $87E3   XOR      V7, VE          ; V7 ^= VE
$598    $D6F5   DRW      V6, VF, #5      ; Draw 5-byte sprite at V6, VF
$59A    $4624   SNE      V6, #24         ; Skip if V6 != 36
$59C    $7128   ADD      V1, #28         ; Add 40 to V1
$59E    $01E6   SYS      $1E6            ; System call to 1E6
$5A0    $DC2D   DRW      VC, V2, #D      ; Draw 13-byte sprite at VC, V2
$5A2    $E949   UNKNOWN  $E949           ; Unknown Exxx instruction
$5A4    $A1D9   LD       I, $1D9         ; Load 1D9 into I
$5A6    $0B16   SYS      $B16            ; System call to B16
$5A8    $3D42   SE       VD, #42         ; Skip if VD == 66
$5AA    $D351   DRW      V3, V5, #1      ; Draw 1-byte sprite at V3, V5
$5AC    $5673   UNKNOWN  $5673           ; Unknown 5xxx instruction
$5AE    $ABE3   LD       I, $BE3         ; Load BE3 into I
$5B0    $0F34   SYS      $F34            ; System call to F34
$5B2    $1609   JP       $609            ; Jump to 609
$5B4    $7AE8   ADD      VA, #E8         ; Add 232 to VA
$5B6    $0005   SYS      $005            ; System call to 005
$5B8    $0004   SYS      $004            ; System call to 004
$5BA    $E2FB   UNKNOWN  $E2FB           ; Unknown Exxx instruction
$5BC    $D12A   DRW      V1, V2, #A      ; Draw 10-byte sprite at V1, V2
$5BE    $F67E   UNKNOWN  F67E            ; Unknown Fxxx instruction
$5C0    $7AD3   ADD      VA, #D3         ; Add 211 to VA
$5C2    $6E57   LD       VE, #57         ; Load 87 into VE
$5C4    $D627   DRW      V6, V2, #7      ; Draw 7-byte sprite at V6, V2
$5C6    $B3C7   JP       V0, $3C7        ; Jump to V0 + 3C7
$5C8    $3D27   SE       VD, #27         ; Skip if VD == 39
$5CA    $3D74   SE       VD, #74         ; Skip if VD == 116
$5CC    $22B3   CALL     $2B3            ; Call subroutine at 2B3
$5CE    $2FCD   CALL     $FCD            ; Call subroutine at FCD
$5D0    $5F63   UNKNOWN  $5F63           ; Unknown 5xxx instruction
$5D2    $6F3B   LD       VF, #3B         ; Load 59 into VF
$5D4    $5868   UNKNOWN  $5868           ; Unknown 5xxx instruction
$5D6    $FA53   UNKNOWN  FA53            ; Unknown Fxxx instruction
$5D8    $4C28   SNE      VC, #28         ; Skip if VC != 40
$5DA    $8D8C   UNKNOWN  8D8C            ; Unknown 8xxx instruction
$5DC    $C643   RND      V6, #43         ; V6 = random & 43
$5DE    $5541   UNKNOWN  $5541           ; Unknown 5xxx instruction
$5E0    $0477   SYS      $477            ; System call to 477
$5E2    $20DE   CALL     $0DE            ; Call subroutine at 0DE
$5E4    $E87B   UNKNOWN  $E87B           ; Unknown Exxx instruction
$5E6    $7CC1   ADD      VC, #C1         ; Add 193 to VC
$5E8    $2639   CALL     $639            ; Call subroutine at 639
$5EA    $9411   UNKNOWN  $9411           ; Unknown 9xxx instruction
$5EC    $11A6   JP       $1A6            ; Jump to 1A6
$5EE    $2902   CALL     $902            ; Call subroutine at 902
$5F0    $E963   UNKNOWN  $E963           ; Unknown Exxx instruction
$5F2    $C825   RND      V8, #25         ; V8 = random & 25
$5F4    $8F2F   UNKNOWN  8F2F            ; Unknown 8xxx instruction
$5F6    $7AD4   ADD      VA, #D4         ; Add 212 to VA
$5F8    $60A9   LD       V0, #A9         ; Load 169 into V0
$5FA    $5161   UNKNOWN  $5161           ; Unknown 5xxx instruction
$5FC    $BE43   JP       V0, $E43        ; Jump to V0 + E43
$5FE    $C0D9   RND      V0, #D9         ; V0 = random & D9
$600    $3E27   SE       VE, #27         ; Skip if VE == 39
$602    $566C   UNKNOWN  $566C           ; Unknown 5xxx instruction
$604    $C01F   RND      V0, #1F         ; V0 = random & 1F
$606    $AE83   LD       I, $E83         ; Load E83 into I
$608    $71DB   ADD      V1, #DB         ; Add 219 to V1
$60A    $166B   JP       $66B            ; Jump to 66B
$60C    $1F9D   JP       $F9D            ; Jump to F9D
$60E    $B098   JP       V0, $098        ; Jump to V0 + 098
$610    $7874   ADD      V8, #74         ; Add 116 to V8
$612    $E33C   UNKNOWN  $E33C           ; Unknown Exxx instruction
$614    $AC24   LD       I, $C24         ; Load C24 into I
$616    $2AAE   CALL     $AAE            ; Call subroutine at AAE
$618    $9610   SNE      V6, V1          ; Skip if V6 != V1
$61A    $E77C   UNKNOWN  $E77C           ; Unknown Exxx instruction
$61C    $07F4   SYS      $7F4            ; System call to 7F4
$61E    $603A   LD       V0, #3A         ; Load 58 into V0
$620    $5BFC   UNKNOWN  $5BFC           ; Unknown 5xxx instruction
$622    $B6C4   JP       V0, $6C4        ; Jump to V0 + 6C4
$624    $BECD   JP       V0, $ECD        ; Jump to V0 + ECD
$626    $BEE9   JP       V0, $EE9        ; Jump to V0 + EE9
$628    $31A9   SE       V1, #A9         ; Skip if V1 == 169
$62A    $BD08   JP       V0, $D08        ; Jump to V0 + D08
$62C    $7DB0   ADD      VD, #B0         ; Add 176 to VD
$62E    $E8E3   UNKNOWN  $E8E3           ; Unknown Exxx instruction
$630    $9479   UNKNOWN  $9479           ; Unknown 9xxx instruction
$632    $8674   ADD      V6, V7          ; V6 += V7, VF = carry
$634    $2192   CALL     $192            ; Call subroutine at 192
$636    $B211   JP       V0, $211        ; Jump to V0 + 211
$638    $F623   UNKNOWN  F623            ; Unknown Fxxx instruction
$63A    $75AF   ADD      V5, #AF         ; Add 175 to V5
$63C    $F4DA   UNKNOWN  F4DA            ; Unknown Fxxx instruction
$63E    $8D13   XOR      VD, V1          ; VD ^= V1
$640    $D736   DRW      V7, V3, #6      ; Draw 6-byte sprite at V7, V3
$642    $83B4   ADD      V3, VB          ; V3 += VB, VF = carry
$644    $C085   RND      V0, #85         ; V0 = random & 85
$646    $6B22   LD       VB, #22         ; Load 34 into VB
$648    $B485   JP       V0, $485        ; Jump to V0 + 485
$64A    $FFAE   UNKNOWN  FFAE            ; Unknown Fxxx instruction
$64C    $2B74   CALL     $B74            ; Call subroutine at B74
$64E    $FF24   UNKNOWN  FF24            ; Unknown Fxxx instruction
$650    $F0B9   UNKNOWN  F0B9            ; Unknown Fxxx instruction
$652    $E852   UNKNOWN  $E852           ; Unknown Exxx instruction
$654    $5437   UNKNOWN  $5437           ; Unknown 5xxx instruction
$656    $2CB5   CALL     $CB5            ; Call subroutine at CB5
$658    $B438   JP       V0, $438        ; Jump to V0 + 438
$65A    $D07F   DRW      V0, V7, #F      ; Draw 15-byte sprite at V0, V7
$65C    $EEA1   SKNP     VE              ; Skip if key VE not pressed
$65E    $408C   SNE      V0, #8C         ; Skip if V0 != 140
$660    $94BA   UNKNOWN  $94BA           ; Unknown 9xxx instruction
$662    $37BF   SE       V7, #BF         ; Skip if V7 == 191
$664    $FE42   UNKNOWN  FE42            ; Unknown Fxxx instruction
$666    $2EAF   CALL     $EAF            ; Call subroutine at EAF
$668    $D851   DRW      V8, V5, #1      ; Draw 1-byte sprite at V8, V5
$66A    $0B5A   SYS      $B5A            ; System call to B5A
$66C    $5CFC   UNKNOWN  $5CFC           ; Unknown 5xxx instruction
$66E    $D873   DRW      V8, V7, #3      ; Draw 3-byte sprite at V8, V7
$670    $3C49   SE       VC, #49         ; Skip if VC == 73
$672    $9427   UNKNOWN  $9427           ; Unknown 9xxx instruction
$674    $DFD8   DRW      VF, VD, #8      ; Draw 8-byte sprite at VF, VD
$676    $21FD   CALL     $1FD            ; Call subroutine at 1FD
$678    $D2AE   DRW      V2, VA, #E      ; Draw 14-byte sprite at V2, VA
$67A    $DC1C   DRW      VC, V1, #C      ; Draw 12-byte sprite at VC, V1
$67C    $6113   LD       V1, #13         ; Load 19 into V1
$67E    $5755   UNKNOWN  $5755           ; Unknown 5xxx instruction
$680    $98A8   UNKNOWN  $98A8           ; Unknown 9xxx instruction
$682    $555E   UNKNOWN  $555E           ; Unknown 5xxx instruction
$684    $3211   SE       V2, #11         ; Skip if V2 == 17
$686    $ED31   UNKNOWN  $ED31           ; Unknown Exxx instruction
$688    $8053   XOR      V0, V5          ; V0 ^= V5
$68A    $3FAD   SE       VF, #AD         ; Skip if VF == 173
$68C    $CE11   RND      VE, #11         ; VE = random & 11
$68E    $E5A8   UNKNOWN  $E5A8           ; Unknown Exxx instruction
$690    $DDEA   DRW      VD, VE, #A      ; Draw 10-byte sprite at VD, VE
$692    $AFD8   LD       I, $FD8         ; Load FD8 into I
$694    $4F12   SNE      VF, #12         ; Skip if VF != 18
$696    $4EC9   SNE      VE, #C9         ; Skip if VE != 201
$698    $A597   LD       I, $597         ; Load 597 into I
$69A    $BD3C   JP       V0, $D3C        ; Jump to V0 + D3C
$69C    $2F61   CALL     $F61            ; Call subroutine at F61
$69E    $33C5   SE       V3, #C5         ; Skip if V3 == 197
$6A0    $7CD6   ADD      VC, #D6         ; Add 214 to VC
$6A2    $D00A   DRW      V0, V0, #A      ; Draw 10-byte sprite at V0, V0
$6A4    $4F4A   SNE      VF, #4A         ; Skip if VF != 74
$6A6    $F385   UNKNOWN  F385            ; Unknown Fxxx instruction
$6A8    $75E7   ADD      V5, #E7         ; Add 231 to V5
$6AA    $AACB   LD       I, $ACB         ; Load ACB into I
$6AC    $F32E   UNKNOWN  F32E            ; Unknown Fxxx instruction
$6AE    $078D   SYS      $78D            ; System call to 78D
$6B0    $A611   LD       I, $611         ; Load 611 into I
$6B2    $6F88   LD       VF, #88         ; Load 136 into VF
$6B4    $3190   SE       V1, #90         ; Skip if V1 == 144
$6B6    $2072   CALL     $072            ; Call subroutine at 072
$6B8    $04D0   SYS      $4D0            ; System call to 4D0
$6BA    $4350   SNE      V3, #50         ; Skip if V3 != 80
$6BC    $9B4F   UNKNOWN  $9B4F           ; Unknown 9xxx instruction
$6BE    $B489   JP       V0, $489        ; Jump to V0 + 489
$6C0    $F993   UNKNOWN  F993            ; Unknown Fxxx instruction
$6C2    $C446   RND      V4, #46         ; V4 = random & 46
$6C4    $114E   JP       $14E            ; Jump to 14E
$6C6    $326A   SE       V2, #6A         ; Skip if V2 == 106
$6C8    $3AC9   SE       VA, #C9         ; Skip if VA == 201
$6CA    $8B9A   UNKNOWN  8B9A            ; Unknown 8xxx instruction
$6CC    $4493   SNE      V4, #93         ; Skip if V4 != 147
$6CE    $19D2   JP       $9D2            ; Jump to 9D2
$6D0    $516A   UNKNOWN  $516A           ; Unknown 5xxx instruction
$6D2    $9238   UNKNOWN  $9238           ; Unknown 9xxx instruction
$6D4    $B05E   JP       V0, $05E        ; Jump to V0 + 05E
$6D6    $71C0   ADD      V1, #C0         ; Add 192 to V1
$6D8    $7A88   ADD      VA, #88         ; Add 136 to VA
$6DA    $49F0   SNE      V9, #F0         ; Skip if V9 != 240
$6DC    $334E   SE       V3, #4E         ; Skip if V3 == 78
$6DE    $3FC7   SE       VF, #C7         ; Skip if VF == 199
$6E0    $CA08   RND      VA, #08         ; VA = random & 08
$6E2    $8907   SUBN     V9, V0          ; V9 = V0 - V9, VF = !borrow
$6E4    $3BD9   SE       VB, #D9         ; Skip if VB == 217
$6E6    $17FD   JP       $7FD            ; Jump to 7FD
$6E8    $7F00   ADD      VF, #00         ; Add 0 to VF
$6EA    $BEB4   JP       V0, $EB4        ; Jump to V0 + EB4
$6EC    $677C   LD       V7, #7C         ; Load 124 into V7
$6EE    $3242   SE       V2, #42         ; Skip if V2 == 66
$6F0    $51ED   UNKNOWN  $51ED           ; Unknown 5xxx instruction
$6F2    $F7F5   UNKNOWN  F7F5            ; Unknown Fxxx instruction
$6F4    $09E8   SYS      $9E8            ; System call to 9E8
$6F6    $9AC0   SNE      VA, VC          ; Skip if VA != VC
$6F8    $F1C3   UNKNOWN  F1C3            ; Unknown Fxxx instruction
$6FA    $A612   LD       I, $612         ; Load 612 into I
$6FC    $2719   CALL     $719            ; Call subroutine at 719
$6FE    $B180   JP       V0, $180        ; Jump to V0 + 180
$700    $CD96   RND      VD, #96         ; VD = random & 96
$702    $BF1B   JP       V0, $F1B        ; Jump to V0 + F1B
$704    $CB7C   RND      VB, #7C         ; VB = random & 7C
$706    $A0E5   LD       I, $0E5         ; Load 0E5 into I
$708    $2F87   CALL     $F87            ; Call subroutine at F87
$70A    $BA95   JP       V0, $A95        ; Jump to V0 + A95
$70C    $D3CA   DRW      V3, VC, #A      ; Draw 10-byte sprite at V3, VC
$70E    $B60C   JP       V0, $60C        ; Jump to V0 + 60C
$710    $0654   SYS      $654            ; System call to 654
$712    $0EA1   SYS      $EA1            ; System call to EA1
$714    $1064   JP       $064            ; Jump to 064
$716    $ED54   UNKNOWN  $ED54           ; Unknown Exxx instruction
$718    $4071   SNE      V0, #71         ; Skip if V0 != 113
$71A    $C83C   RND      V8, #3C         ; V8 = random & 3C
$71C    $62BB   LD       V2, #BB         ; Load 187 into V2
$71E    $2354   CALL     $354            ; Call subroutine at 354
$720    $5251   UNKNOWN  $5251           ; Unknown 5xxx instruction
$722    $4916   SNE      V9, #16         ; Skip if V9 != 22
$724    $27E8   CALL     $7E8            ; Call subroutine at 7E8
$726    $D7B8   DRW      V7, VB, #8      ; Draw 8-byte sprite at V7, VB
$728    $D0B7   DRW      V0, VB, #7      ; Draw 7-byte sprite at V0, VB
$72A    $FA32   UNKNOWN  FA32            ; Unknown Fxxx instruction
$72C    $6D30   LD       VD, #30         ; Load 48 into VD
$72E    $76AE   ADD      V6, #AE         ; Add 174 to V6
$730    $290B   CALL     $90B            ; Call subroutine at 90B
$732    $F4D9   UNKNOWN  F4D9            ; Unknown Fxxx instruction
$734    $4D4B   SNE      VD, #4B         ; Skip if VD != 75
$736    $D692   DRW      V6, V9, #2      ; Draw 2-byte sprite at V6, V9
$738    $B579   JP       V0, $579        ; Jump to V0 + 579
$73A    $A543   LD       I, $543         ; Load 543 into I
$73C    $D97F   DRW      V9, V7, #F      ; Draw 15-byte sprite at V9, V7
$73E    $E2F6   UNKNOWN  $E2F6           ; Unknown Exxx instruction
$740    $A0E9   LD       I, $0E9         ; Load 0E9 into I
$742    $35EA   SE       V5, #EA         ; Skip if V5 == 234
$744    $6597   LD       V5, #97         ; Load 151 into V5
$746    $2C33   CALL     $C33            ; Call subroutine at C33
$748    $C82C   RND      V8, #2C         ; V8 = random & 2C
$74A    $7BA2   ADD      VB, #A2         ; Add 162 to VB
$74C    $B6F1   JP       V0, $6F1        ; Jump to V0 + 6F1
$74E    $9414   UNKNOWN  $9414           ; Unknown 9xxx instruction
$750    $D3F1   DRW      V3, VF, #1      ; Draw 1-byte sprite at V3, VF
$752    $197C   JP       $97C            ; Jump to 97C
$754    $AC86   LD       I, $C86         ; Load C86 into I
$756    $2CCA   CALL     $CCA            ; Call subroutine at CCA
$758    $D6AE   DRW      V6, VA, #E      ; Draw 14-byte sprite at V6, VA
$75A    $426C   SNE      V2, #6C         ; Skip if V2 != 108
$75C    $3CCA   SE       VC, #CA         ; Skip if VC == 202
$75E    $BB67   JP       V0, $B67        ; Jump to V0 + B67
$760    $29FA   CALL     $9FA            ; Call subroutine at 9FA
$762    $F2E0   UNKNOWN  F2E0            ; Unknown Fxxx instruction
$764    $DAB8   DRW      VA, VB, #8      ; Draw 8-byte sprite at VA, VB
$766    $1BF6   JP       $BF6            ; Jump to BF6
$768    $583C   UNKNOWN  $583C           ; Unknown 5xxx instruction
$76A    $2CEE   CALL     $CEE            ; Call subroutine at CEE
$76C    $1379   JP       $379            ; Jump to 379
$76E    $50D2   UNKNOWN  $50D2           ; Unknown 5xxx instruction
$770    $4E44   SNE      VE, #44         ; Skip if VE != 68
$772    $2AC1   CALL     $AC1            ; Call subroutine at AC1
$774    $BB04   JP       V0, $B04        ; Jump to V0 + B04
$776    $8491   OR       V4, V9          ; V4 |= V9
$778    $7AF3   ADD      VA, #F3         ; Add 243 to VA
$77A    $5EFC   UNKNOWN  $5EFC           ; Unknown 5xxx instruction
$77C    $F602   UNKNOWN  F602            ; Unknown Fxxx instruction
$77E    $E98E   UNKNOWN  $E98E           ; Unknown Exxx instruction
$780    $7BD7   ADD      VB, #D7         ; Add 215 to VB
$782    $B7AA   JP       V0, $7AA        ; Jump to V0 + 7AA
$784    $37AD   SE       V7, #AD         ; Skip if V7 == 173
$786    $3E24   SE       VE, #24         ; Skip if VE == 36
$788    $1E2B   JP       $E2B            ; Jump to E2B
$78A    $C221   RND      V2, #21         ; V2 = random & 21
$78C    $DEFA   DRW      VE, VF, #A      ; Draw 10-byte sprite at VE, VF
$78E    $4DF1   SNE      VD, #F1         ; Skip if VD != 241
$790    $688C   LD       V8, #8C         ; Load 140 into V8
$792    $0BCD   SYS      $BCD            ; System call to BCD
$794    $5E82   UNKNOWN  $5E82           ; Unknown 5xxx instruction
$796    $74ED   ADD      V4, #ED         ; Add 237 to V4
$798    $2E7A   CALL     $E7A            ; Call subroutine at E7A
$79A    $1744   JP       $744            ; Jump to 744
$79C    $0794   SYS      $794            ; System call to 794
$79E    $7631   ADD      V6, #31         ; Add 49 to V6
$7A0    $F6B5   UNKNOWN  F6B5            ; Unknown Fxxx instruction
$7A2    $AFDC   LD       I, $FDC         ; Load FDC into I
$7A4    $6432   LD       V4, #32         ; Load 50 into V4
$7A6    $9432   UNKNOWN  $9432           ; Unknown 9xxx instruction
$7A8    $11D8   JP       $1D8            ; Jump to 1D8
$7AA    $3839   SE       V8, #39         ; Skip if V8 == 57
$7AC    $696A   LD       V9, #6A         ; Load 106 into V9
$7AE    $4834   SNE      V8, #34         ; Skip if V8 != 52
$7B0    $855D   UNKNOWN  855D            ; Unknown 8xxx instruction
$7B2    $32AC   SE       V2, #AC         ; Skip if V2 == 172
$7B4    $128A   JP       $28A            ; Jump to 28A
$7B6    $D26B   DRW      V2, V6, #B      ; Draw 11-byte sprite at V2, V6
$7B8    $DC66   DRW      VC, V6, #6      ; Draw 6-byte sprite at VC, V6
$7BA    $2E32   CALL     $E32            ; Call subroutine at E32
$7BC    $3DB3   SE       VD, #B3         ; Skip if VD == 179
$7BE    $0697   SYS      $697            ; System call to 697
$7C0    $746C   ADD      V4, #6C         ; Add 108 to V4
$7C2    $D26A   DRW      V2, V6, #A      ; Draw 10-byte sprite at V2, V6
$7C4    $0853   SYS      $853            ; System call to 853
$7C6    $88C8   UNKNOWN  88C8            ; Unknown 8xxx instruction
$7C8    $8EE8   UNKNOWN  8EE8            ; Unknown 8xxx instruction
$7CA    $E6D0   UNKNOWN  $E6D0           ; Unknown Exxx instruction
$7CC    $C719   RND      V7, #19         ; V7 = random & 19
$7CE    $C3C4   RND      V3, #C4         ; V3 = random & C4
$7D0    $55AF   UNKNOWN  $55AF           ; Unknown 5xxx instruction
$7D2    $E697   UNKNOWN  $E697           ; Unknown Exxx instruction
$7D4    $795B   ADD      V9, #5B         ; Add 91 to V9
$7D6    $B527   JP       V0, $527        ; Jump to V0 + 527
$7D8    $22FD   CALL     $2FD            ; Call subroutine at 2FD
$7DA    $7497   ADD      V4, #97         ; Add 151 to V4
$7DC    $3C03   SE       VC, #03         ; Skip if VC == 3
$7DE    $40E7   SNE      V0, #E7         ; Skip if V0 != 231
$7E0    $4100   SNE      V1, #00         ; Skip if V1 != 0
$7E2    $7756   ADD      V7, #56         ; Add 86 to V7
$7E4    $1E1D   JP       $E1D            ; Jump to E1D
$7E6    $3836   SE       V8, #36         ; Skip if V8 == 54
$7E8    $F7E8   UNKNOWN  F7E8            ; Unknown Fxxx instruction
$7EA    $34D5   SE       V4, #D5         ; Skip if V4 == 213
$7EC    $1C69   JP       $C69            ; Jump to C69
$7EE    $5AC3   UNKNOWN  $5AC3           ; Unknown 5xxx instruction
$7F0    $9959   UNKNOWN  $9959           ; Unknown 9xxx instruction
$7F2    $6B7A   LD       VB, #7A         ; Load 122 into VB
$7F4    $F35C   UNKNOWN  F35C            ; Unknown Fxxx instruction
$7F6    $028A   SYS      $28A            ; System call to 28A
$7F8    $76CA   ADD      V6, #CA         ; Add 202 to V6
$7FA    $8D3A   UNKNOWN  8D3A            ; Unknown 8xxx instruction
$7FC    $01EC   SYS      $1EC            ; System call to 1EC
$7FE    $46FB   SNE      V6, #FB         ; Skip if V6 != 251
$800    $28D7   CALL     $8D7            ; Call subroutine at 8D7
$802    $1CD4   JP       $CD4            ; Jump to CD4
$804    $48C2   SNE      V8, #C2         ; Skip if V8 != 194
$806    $B424   JP       V0, $424        ; Jump to V0 + 424
$808    $DA0F   DRW      VA, V0, #F      ; Draw 15-byte sprite at VA, V0
$80A    $00CB   SYS      $0CB            ; System call to 0CB
$80C    $10BA   JP       $0BA            ; Jump to 0BA
$80E    $9C80   SNE      VC, V8          ; Skip if VC != V8
$810    $008E   SYS      $08E            ; System call to 08E
$812    $5D3F   UNKNOWN  $5D3F           ; Unknown 5xxx instruction
$814    $84EA   UNKNOWN  84EA            ; Unknown 8xxx instruction
$816    $A502   LD       I, $502         ; Load 502 into I
$818    $53A3   UNKNOWN  $53A3           ; Unknown 5xxx instruction
$81A    $1571   JP       $571            ; Jump to 571
$81C    $B0A7   JP       V0, $0A7        ; Jump to V0 + 0A7
$81E    $AE1B   LD       I, $E1B         ; Load E1B into I
$820    $8180   LD       V1, V8          ; V1 = V8
$822    $FBF0   UNKNOWN  FBF0            ; Unknown Fxxx instruction
$824    $A60B   LD       I, $60B         ; Load 60B into I
$826    $4C13   SNE      VC, #13         ; Skip if VC != 19
$828    $8CC0   LD       VC, VC          ; VC = VC
$82A    $7985   ADD      V9, #85         ; Add 133 to V9
$82C    $0D26   SYS      $D26            ; System call to D26
$82E    $1DFC   JP       $DFC            ; Jump to DFC
$830    $4894   SNE      V8, #94         ; Skip if V8 != 148
$832    $18A3   JP       $8A3            ; Jump to 8A3
$834    $6084   LD       V0, #84         ; Load 132 into V0
$836    $9B62   UNKNOWN  $9B62           ; Unknown 9xxx instruction
$838    $4826   SNE      V8, #26         ; Skip if V8 != 38
$83A    $D69A   DRW      V6, V9, #A      ; Draw 10-byte sprite at V6, V9
$83C    $22B9   CALL     $2B9            ; Call subroutine at 2B9
$83E    $26B5   CALL     $6B5            ; Call subroutine at 6B5
$840    $3FAC   SE       VF, #AC         ; Skip if VF == 172
$842    $7648   ADD      V6, #48         ; Add 72 to V6
$844    $CE42   RND      VE, #42         ; VE = random & 42
$846    $7111   ADD      V1, #11         ; Add 17 to V1
$848    $E2F1   UNKNOWN  $E2F1           ; Unknown Exxx instruction
$84A    $7790   ADD      V7, #90         ; Add 144 to V7
$84C    $0FB9   SYS      $FB9            ; System call to FB9
$84E    $2DBA   CALL     $DBA            ; Call subroutine at DBA
$850    $A8B7   LD       I, $8B7         ; Load 8B7 into I
$852    $D11E   DRW      V1, V1, #E      ; Draw 14-byte sprite at V1, V1
$854    $BF08   JP       V0, $F08        ; Jump to V0 + F08
$856    $A47E   LD       I, $47E         ; Load 47E into I
$858    $96AC   UNKNOWN  $96AC           ; Unknown 9xxx instruction
$85A    $7380   ADD      V3, #80         ; Add 128 to V3
$85C    $40F9   SNE      V0, #F9         ; Skip if V0 != 249
$85E    $0FD9   SYS      $FD9            ; System call to FD9
$860    $6ABC   LD       VA, #BC         ; Load 188 into VA
$862    $7BFE   ADD      VB, #FE         ; Add 254 to VB
$864    $26EA   CALL     $6EA            ; Call subroutine at 6EA
$866    $878A   UNKNOWN  878A            ; Unknown 8xxx instruction
$868    $987D   UNKNOWN  $987D           ; Unknown 9xxx instruction
$86A    $4BA9   SNE      VB, #A9         ; Skip if VB != 169
$86C    $A5AE   LD       I, $5AE         ; Load 5AE into I
$86E    $F57D   UNKNOWN  F57D            ; Unknown Fxxx instruction
$870    $128D   JP       $28D            ; Jump to 28D
$872    $7ABB   ADD      VA, #BB         ; Add 187 to VA
$874    $7157   ADD      V1, #57         ; Add 87 to V1
$876    $1C43   JP       $C43            ; Jump to C43
$878    $5373   UNKNOWN  $5373           ; Unknown 5xxx instruction
$87A    $761B   ADD      V6, #1B         ; Add 27 to V6
$87C    $5CCC   UNKNOWN  $5CCC           ; Unknown 5xxx instruction
$87E    $09C5   SYS      $9C5            ; System call to 9C5
$880    $CD54   RND      VD, #54         ; VD = random & 54
$882    $53B8   UNKNOWN  $53B8           ; Unknown 5xxx instruction
$884    $37BA   SE       V7, #BA         ; Skip if V7 == 186
$886    $0F4D   SYS      $F4D            ; System call to F4D
$888    $91BD   UNKNOWN  $91BD           ; Unknown 9xxx instruction
$88A    $C0E1   RND      V0, #E1         ; V0 = random & E1
$88C    $AFDB   LD       I, $FDB         ; Load FDB into I
$88E    $B67C   JP       V0, $67C        ; Jump to V0 + 67C
$890    $E5D9   UNKNOWN  $E5D9           ; Unknown Exxx instruction
$892    $5D80   SE       VD, V8          ; Skip if VD == V8
$894    $4F0C   SNE      VF, #0C         ; Skip if VF != 12
$896    $8FA3   XOR      VF, VA          ; VF ^= VA
$898    $0BA6   SYS      $BA6            ; System call to BA6
$89A    $4181   SNE      V1, #81         ; Skip if V1 != 129
$89C    $E4D3   UNKNOWN  $E4D3           ; Unknown Exxx instruction
$89E    $E745   UNKNOWN  $E745           ; Unknown Exxx instruction
$8A0    $924C   UNKNOWN  $924C           ; Unknown 9xxx instruction
$8A2    $F039   UNKNOWN  F039            ; Unknown Fxxx instruction
$8A4    $5829   UNKNOWN  $5829           ; Unknown 5xxx instruction
$8A6    $B299   JP       V0, $299        ; Jump to V0 + 299
$8A8    $9AAB   UNKNOWN  $9AAB           ; Unknown 9xxx instruction
$8AA    $D774   DRW      V7, V7, #4      ; Draw 4-byte sprite at V7, V7
$8AC    $7659   ADD      V6, #59         ; Add 89 to V6
$8AE    $0F20   SYS      $F20            ; System call to F20
$8B0    $2BB4   CALL     $BB4            ; Call subroutine at BB4
$8B2    $55B7   UNKNOWN  $55B7           ; Unknown 5xxx instruction
$8B4    $E980   UNKNOWN  $E980           ; Unknown Exxx instruction
$8B6    $1F56   JP       $F56            ; Jump to F56
$8B8    $4C53   SNE      VC, #53         ; Skip if VC != 83
$8BA    $A0ED   LD       I, $0ED         ; Load 0ED into I
$8BC    $C12B   RND      V1, #2B         ; V1 = random & 2B
$8BE    $C657   RND      V6, #57         ; V6 = random & 57
$8C0    $2FF3   CALL     $FF3            ; Call subroutine at FF3
$8C2    $D3E8   DRW      V3, VE, #8      ; Draw 8-byte sprite at V3, VE
$8C4    $5579   UNKNOWN  $5579           ; Unknown 5xxx instruction
$8C6    $C35A   RND      V3, #5A         ; V3 = random & 5A
$8C8    $BEEB   JP       V0, $EEB        ; Jump to V0 + EEB
$8CA    $7069   ADD      V0, #69         ; Add 105 to V0
$8CC    $D673   DRW      V6, V7, #3      ; Draw 3-byte sprite at V6, V7
$8CE    $35AD   SE       V5, #AD         ; Skip if V5 == 173
$8D0    $DFF4   DRW      VF, VF, #4      ; Draw 4-byte sprite at VF, VF
$8D2    $EB39   UNKNOWN  $EB39           ; Unknown Exxx instruction
$8D4    $C2BB   RND      V2, #BB         ; V2 = random & BB
$8D6    $0964   SYS      $964            ; System call to 964
$8D8    $23F6   CALL     $3F6            ; Call subroutine at 3F6
$8DA    $3FB0   SE       VF, #B0         ; Skip if VF == 176
$8DC    $7033   ADD      V0, #33         ; Add 51 to V0
$8DE    $17F1   JP       $7F1            ; Jump to 7F1
$8E0    $8CCB   UNKNOWN  8CCB            ; Unknown 8xxx instruction
$8E2    $412C   SNE      V1, #2C         ; Skip if V1 != 44
$8E4    $6E66   LD       VE, #66         ; Load 102 into VE
$8E6    $A008   LD       I, $008         ; Load 008 into I
$8E8    $E9DE   UNKNOWN  $E9DE           ; Unknown Exxx instruction
$8EA    $4552   SNE      V5, #52         ; Skip if V5 != 82
$8EC    $B637   JP       V0, $637        ; Jump to V0 + 637
$8EE    $54EE   UNKNOWN  $54EE           ; Unknown 5xxx instruction
$8F0    $B114   JP       V0, $114        ; Jump to V0 + 114
$8F2    $E51B   UNKNOWN  $E51B           ; Unknown Exxx instruction
$8F4    $692E   LD       V9, #2E         ; Load 46 into V9
$8F6    $9D52   UNKNOWN  $9D52           ; Unknown 9xxx instruction
$8F8    $DF1A   DRW      VF, V1, #A      ; Draw 10-byte sprite at VF, V1
$8FA    $2541   CALL     $541            ; Call subroutine at 541
$8FC    $A23C   LD       I, $23C         ; Load 23C into I
$8FE    $2149   CALL     $149            ; Call subroutine at 149
$900    $3560   SE       V5, #60         ; Skip if V5 == 96
$902    $FC2C   UNKNOWN  FC2C            ; Unknown Fxxx instruction
$904    $8503   XOR      V5, V0          ; V5 ^= V0
$906    $5779   UNKNOWN  $5779           ; Unknown 5xxx instruction
$908    $67C5   LD       V7, #C5         ; Load 197 into V7
$90A    $C9BE   RND      V9, #BE         ; V9 = random & BE
$90C    $E8F3   UNKNOWN  $E8F3           ; Unknown Exxx instruction
$90E    $3F74   SE       VF, #74         ; Skip if VF == 116
$910    $0892   SYS      $892            ; System call to 892
$912    $2231   CALL     $231            ; Call subroutine at 231
$914    $2E2F   CALL     $E2F            ; Call subroutine at E2F
$916    $30E6   SE       V0, #E6         ; Skip if V0 == 230
$918    $ED6E   UNKNOWN  $ED6E           ; Unknown Exxx instruction
$91A    $F900   UNKNOWN  F900            ; Unknown Fxxx instruction
$91C    $7337   ADD      V3, #37         ; Add 55 to V3
$91E    $F6FA   UNKNOWN  F6FA            ; Unknown Fxxx instruction
$920    $A19D   LD       I, $19D         ; Load 19D into I
$922    $53A3   UNKNOWN  $53A3           ; Unknown 5xxx instruction
$924    $9217   UNKNOWN  $9217           ; Unknown 9xxx instruction
$926    $B16E   JP       V0, $16E        ; Jump to V0 + 16E
$928    $7578   ADD      V5, #78         ; Add 120 to V5
$92A    $2BCE   CALL     $BCE            ; Call subroutine at BCE
$92C    $ECA5   UNKNOWN  $ECA5           ; Unknown Exxx instruction
$92E    $9E6C   UNKNOWN  $9E6C           ; Unknown 9xxx instruction
$930    $453C   SNE      V5, #3C         ; Skip if V5 != 60
$932    $54CA   UNKNOWN  $54CA           ; Unknown 5xxx instruction
$934    $E179   UNKNOWN  $E179           ; Unknown Exxx instruction
$936    $D198   DRW      V1, V9, #8      ; Draw 8-byte sprite at V1, V9
$938    $0B9E   SYS      $B9E            ; System call to B9E
$93A    $98ED   UNKNOWN  $98ED           ; Unknown 9xxx instruction
$93C    $7628   ADD      V6, #28         ; Add 40 to V6
$93E    $9960   SNE      V9, V6          ; Skip if V9 != V6
$940    $B981   JP       V0, $981        ; Jump to V0 + 981
$942    $4368   SNE      V3, #68         ; Skip if V3 != 104
$944    $6B49   LD       VB, #49         ; Load 73 into VB
$946    $6AF3   LD       VA, #F3         ; Load 243 into VA
$948    $DBE5   DRW      VB, VE, #5      ; Draw 5-byte sprite at VB, VE
$94A    $4266   SNE      V2, #66         ; Skip if V2 != 102
$94C    $B3DE   JP       V0, $3DE        ; Jump to V0 + 3DE
$94E    $0E23   SYS      $E23            ; System call to E23
$950    $A2EE   LD       I, $2EE         ; Load 2EE into I
$952    $197B   JP       $97B            ; Jump to 97B
$954    $B727   JP       V0, $727        ; Jump to V0 + 727
$956    $AC70   LD       I, $C70         ; Load C70 into I
$958    $0393   SYS      $393            ; System call to 393
$95A    $EFBD   UNKNOWN  $EFBD           ; Unknown Exxx instruction
$95C    $2E70   CALL     $E70            ; Call subroutine at E70
$95E    $A2DD   LD       I, $2DD         ; Load 2DD into I
$960    $6408   LD       V4, #08         ; Load 8 into V4
$962    $A8CC   LD       I, $8CC         ; Load 8CC into I
$964    $3375   SE       V3, #75         ; Skip if V3 == 117
$966    $F1B7   UNKNOWN  F1B7            ; Unknown Fxxx instruction
$968    $9017   UNKNOWN  $9017           ; Unknown 9xxx instruction
$96A    $045A   SYS      $45A            ; System call to 45A
$96C    $195E   JP       $95E            ; Jump to 95E
$96E    $20DE   CALL     $0DE            ; Call subroutine at 0DE
$970    $966C   UNKNOWN  $966C           ; Unknown 9xxx instruction
$972    $C48A   RND      V4, #8A         ; V4 = random & 8A
$974    $A04C   LD       I, $04C         ; Load 04C into I
$976    $AA73   LD       I, $A73         ; Load A73 into I
$978    $2C1E   CALL     $C1E            ; Call subroutine at C1E
$97A    $4D86   SNE      VD, #86         ; Skip if VD != 134
$97C    $2E42   CALL     $E42            ; Call subroutine at E42
$97E    $5008   UNKNOWN  $5008           ; Unknown 5xxx instruction
$980    $93BB   UNKNOWN  $93BB           ; Unknown 9xxx instruction
$982    $3C32   SE       VC, #32         ; Skip if VC == 50
$984    $BAE3   JP       V0, $AE3        ; Jump to V0 + AE3
$986    $400A   SNE      V0, #0A         ; Skip if V0 != 10
$988    $E98C   UNKNOWN  $E98C           ; Unknown Exxx instruction
$98A    $74E7   ADD      V4, #E7         ; Add 231 to V4
$98C    $07D9   SYS      $7D9            ; System call to 7D9
$98E    $F1DF   UNKNOWN  F1DF            ; Unknown Fxxx instruction
$990    $3F18   SE       VF, #18         ; Skip if VF == 24
$992    $76F0   ADD      V6, #F0         ; Add 240 to V6
$994    $F65A   UNKNOWN  F65A            ; Unknown Fxxx instruction
$996    $1DA4   JP       $DA4            ; Jump to DA4
$998    $57CA   UNKNOWN  $57CA           ; Unknown 5xxx instruction
$99A    $7DD8   ADD      VD, #D8         ; Add 216 to VD
$99C    $3387   SE       V3, #87         ; Skip if V3 == 135
$99E    $145E   JP       $45E            ; Jump to 45E
$9A0    $BCF3   JP       V0, $CF3        ; Jump to V0 + CF3
$9A2    $6B47   LD       VB, #47         ; Load 71 into VB
$9A4    $07F0   SYS      $7F0            ; System call to 7F0
$9A6    $E42E   UNKNOWN  $E42E           ; Unknown Exxx instruction
$9A8    $D706   DRW      V7, V0, #6      ; Draw 6-byte sprite at V7, V0
$9AA    $74F2   ADD      V4, #F2         ; Add 242 to V4
$9AC    $A232   LD       I, $232         ; Load 232 into I
$9AE    $F990   UNKNOWN  F990            ; Unknown Fxxx instruction
$9B0    $D1B5   DRW      V1, VB, #5      ; Draw 5-byte sprite at V1, VB
$9B2    $392C   SE       V9, #2C         ; Skip if V9 == 44
$9B4    $1253   JP       $253            ; Jump to 253
$9B6    $8565   SUB      V5, V6          ; V5 -= V6, VF = !borrow
$9B8    $F0CB   UNKNOWN  F0CB            ; Unknown Fxxx instruction
$9BA    $42EA   SNE      V2, #EA         ; Skip if V2 != 234
$9BC    $DE4F   DRW      VE, V4, #F      ; Draw 15-byte sprite at VE, V4
$9BE    $06A2   SYS      $6A2            ; System call to 6A2
$9C0    $78BE   ADD      V8, #BE         ; Add 190 to V8
$9C2    $56BC   UNKNOWN  $56BC           ; Unknown 5xxx instruction
$9C4    $9FA5   UNKNOWN  $9FA5           ; Unknown 9xxx instruction
$9C6    $F63E   UNKNOWN  F63E            ; Unknown Fxxx instruction
$9C8    $A8E1   LD       I, $8E1         ; Load 8E1 into I
$9CA    $0911   SYS      $911            ; System call to 911
$9CC    $4E14   SNE      VE, #14         ; Skip if VE != 20
$9CE    $7153   ADD      V1, #53         ; Add 83 to V1
$9D0    $78A2   ADD      V8, #A2         ; Add 162 to V8
$9D2    $EA10   UNKNOWN  $EA10           ; Unknown Exxx instruction
$9D4    $0A63   SYS      $A63            ; System call to A63
$9D6    $AD26   LD       I, $D26         ; Load D26 into I
$9D8    $2A0E   CALL     $A0E            ; Call subroutine at A0E
$9DA    $BF87   JP       V0, $F87        ; Jump to V0 + F87
$9DC    $6214   LD       V2, #14         ; Load 20 into V2
$9DE    $2AD5   CALL     $AD5            ; Call subroutine at AD5
$9E0    $6E07   LD       VE, #07         ; Load 7 into VE
$9E2    $5DF2   UNKNOWN  $5DF2           ; Unknown 5xxx instruction
$9E4    $4762   SNE      V7, #62         ; Skip if V7 != 98
$9E6    $CC42   RND      VC, #42         ; VC = random & 42
$9E8    $BD79   JP       V0, $D79        ; Jump to V0 + D79
$9EA    $A6E4   LD       I, $6E4         ; Load 6E4 into I
$9EC    $FFB3   UNKNOWN  FFB3            ; Unknown Fxxx instruction
$9EE    $B1BE   JP       V0, $1BE        ; Jump to V0 + 1BE
$9F0    $945D   UNKNOWN  $945D           ; Unknown 9xxx instruction
$9F2    $68C6   LD       V8, #C6         ; Load 198 into V8
$9F4    $8C3B   UNKNOWN  8C3B            ; Unknown 8xxx instruction
$9F6    $FBBA   UNKNOWN  FBBA            ; Unknown Fxxx instruction
$9F8    $9E2D   UNKNOWN  $9E2D           ; Unknown 9xxx instruction
$9FA    $98B6   UNKNOWN  $98B6           ; Unknown 9xxx instruction
$9FC    $3708   SE       V7, #08         ; Skip if V7 == 8
$9FE    $4C38   SNE      VC, #38         ; Skip if VC != 56
$A00    $B9CB   JP       V0, $9CB        ; Jump to V0 + 9CB
$A02    $CD72   RND      VD, #72         ; VD = random & 72
$A04    $8A04   ADD      VA, V0          ; VA += V0, VF = carry
$A06    $2E5F   CALL     $E5F            ; Call subroutine at E5F
$A08    $A31B   LD       I, $31B         ; Load 31B into I
$A0A    $7AD0   ADD      VA, #D0         ; Add 208 to VA
$A0C    $9076   UNKNOWN  $9076           ; Unknown 9xxx instruction
$A0E    $E9FA   UNKNOWN  $E9FA           ; Unknown Exxx instruction
$A10    $B770   JP       V0, $770        ; Jump to V0 + 770
$A12    $C819   RND      V8, #19         ; V8 = random & 19
$A14    $36CC   SE       V6, #CC         ; Skip if V6 == 204
$A16    $6233   LD       V2, #33         ; Load 51 into V2
$A18    $8274   ADD      V2, V7          ; V2 += V7, VF = carry
$A1A    $8A22   AND      VA, V2          ; VA &= V2
$A1C    $A7A3   LD       I, $7A3         ; Load 7A3 into I
$A1E    $87DC   UNKNOWN  87DC            ; Unknown 8xxx instruction
$A20    $160D   JP       $60D            ; Jump to 60D
$A22    $E43F   UNKNOWN  $E43F           ; Unknown Exxx instruction
$A24    $63C5   LD       V3, #C5         ; Load 197 into V3
$A26    $27C0   CALL     $7C0            ; Call subroutine at 7C0
$A28    $ADA0   LD       I, $DA0         ; Load DA0 into I
$A2A    $3535   SE       V5, #35         ; Skip if V5 == 53
$A2C    $E2F1   UNKNOWN  $E2F1           ; Unknown Exxx instruction
$A2E    $ABDD   LD       I, $BDD         ; Load BDD into I
$A30    $D846   DRW      V8, V4, #6      ; Draw 6-byte sprite at V8, V4
$A32    $44C5   SNE      V4, #C5         ; Skip if V4 != 197
$A34    $A46D   LD       I, $46D         ; Load 46D into I
$A36    $9EEC   UNKNOWN  $9EEC           ; Unknown 9xxx instruction
$A38    $B790   JP       V0, $790        ; Jump to V0 + 790
$A3A    $E483   UNKNOWN  $E483           ; Unknown Exxx instruction
$A3C    $7462   ADD      V4, #62         ; Add 98 to V4
$A3E    $4A42   SNE      VA, #42         ; Skip if VA != 66
$A40    $847C   UNKNOWN  847C            ; Unknown 8xxx instruction
$A42    $D5B2   DRW      V5, VB, #2      ; Draw 2-byte sprite at V5, VB
$A44    $1571   JP       $571            ; Jump to 571
$A46    $3D04   SE       VD, #04         ; Skip if VD == 4
$A48    $A610   LD       I, $610         ; Load 610 into I
$A4A    $2630   CALL     $630            ; Call subroutine at 630
$A4C    $7386   ADD      V3, #86         ; Add 134 to V3
$A4E    $7B16   ADD      VB, #16         ; Add 22 to VB
$A50    $35DE   SE       V5, #DE         ; Skip if V5 == 222
$A52    $A6C6   LD       I, $6C6         ; Load 6C6 into I
$A54    $5418   UNKNOWN  $5418           ; Unknown 5xxx instruction
$A56    $248F   CALL     $48F            ; Call subroutine at 48F
$A58    $A914   LD       I, $914         ; Load 914 into I
$A5A    $9618   UNKNOWN  $9618           ; Unknown 9xxx instruction
$A5C    $23BB   CALL     $3BB            ; Call subroutine at 3BB
$A5E    $20D2   CALL     $0D2            ; Call subroutine at 0D2
$A60    $7C5D   ADD      VC, #5D         ; Add 93 to VC
$A62    $38F4   SE       V8, #F4         ; Skip if V8 == 244
$A64    $B500   JP       V0, $500        ; Jump to V0 + 500
$A66    $5470   SE       V4, V7          ; Skip if V4 == V7
$A68    $193D   JP       $93D            ; Jump to 93D
$A6A    $39B7   SE       V9, #B7         ; Skip if V9 == 183
$A6C    $9B08   UNKNOWN  $9B08           ; Unknown 9xxx instruction
$A6E    $84AA   UNKNOWN  84AA            ; Unknown 8xxx instruction
$A70    $A2A2   LD       I, $2A2         ; Load 2A2 into I
$A72    $842C   UNKNOWN  842C            ; Unknown 8xxx instruction
$A74    $0373   SYS      $373            ; System call to 373
$A76    $124D   JP       $24D            ; Jump to 24D
$A78    $7EB5   ADD      VE, #B5         ; Add 181 to VE
$A7A    $C7BC   RND      V7, #BC         ; V7 = random & BC
$A7C    $294E   CALL     $94E            ; Call subroutine at 94E
$A7E    $7992   ADD      V9, #92         ; Add 146 to V9
$A80    $AEAD   LD       I, $EAD         ; Load EAD into I
$A82    $3991   SE       V9, #91         ; Skip if V9 == 145
$A84    $9890   SNE      V8, V9          ; Skip if V8 != V9
$A86    $5484   UNKNOWN  $5484           ; Unknown 5xxx instruction
$A88    $6379   LD       V3, #79         ; Load 121 into V3
$A8A    $EDB1   UNKNOWN  $EDB1           ; Unknown Exxx instruction
$A8C    $4E02   SNE      VE, #02         ; Skip if VE != 2
$A8E    $5E3F   UNKNOWN  $5E3F           ; Unknown 5xxx instruction
$A90    $7A68   ADD      VA, #68         ; Add 104 to VA
$A92    $C9E8   RND      V9, #E8         ; V9 = random & E8
$A94    $B794   JP       V0, $794        ; Jump to V0 + 794
$A96    $8B47   SUBN     VB, V4          ; VB = V4 - VB, VF = !borrow
$A98    $44D1   SNE      V4, #D1         ; Skip if V4 != 209
$A9A    $EF81   UNKNOWN  $EF81           ; Unknown Exxx instruction
$A9C    $FD52   UNKNOWN  FD52            ; Unknown Fxxx instruction
$A9E    $8D4B   UNKNOWN  8D4B            ; Unknown 8xxx instruction
$AA0    $24A1   CALL     $4A1            ; Call subroutine at 4A1
$AA2    $447E   SNE      V4, #7E         ; Skip if V4 != 126
$AA4    $D37A   DRW      V3, V7, #A      ; Draw 10-byte sprite at V3, V7
$AA6    $B688   JP       V0, $688        ; Jump to V0 + 688
$AA8    $A2B2   LD       I, $2B2         ; Load 2B2 into I
$AAA    $2BFA   CALL     $BFA            ; Call subroutine at BFA
$AAC    $8A04   ADD      VA, V0          ; VA += V0, VF = carry
$AAE    $E77C   UNKNOWN  $E77C           ; Unknown Exxx instruction
$AB0    $5BBD   UNKNOWN  $5BBD           ; Unknown 5xxx instruction
$AB2    $2DAE   CALL     $DAE            ; Call subroutine at DAE
$AB4    $EC56   UNKNOWN  $EC56           ; Unknown Exxx instruction
$AB6    $C62F   RND      V6, #2F         ; V6 = random & 2F
$AB8    $2732   CALL     $732            ; Call subroutine at 732
$ABA    $038A   SYS      $38A            ; System call to 38A
$ABC    $DB0F   DRW      VB, V0, #F      ; Draw 15-byte sprite at VB, V0
$ABE    $CE2E   RND      VE, #2E         ; VE = random & 2E
$AC0    $BAC8   JP       V0, $AC8        ; Jump to V0 + AC8
$AC2    $686E   LD       V8, #6E         ; Load 110 into V8
$AC4    $29D8   CALL     $9D8            ; Call subroutine at 9D8
$AC6    $8AE8   UNKNOWN  8AE8            ; Unknown 8xxx instruction
$AC8    $2E01   CALL     $E01            ; Call subroutine at E01
$ACA    $D14D   DRW      V1, V4, #D      ; Draw 13-byte sprite at V1, V4
$ACC    $C998   RND      V9, #98         ; V9 = random & 98
$ACE    $E52A   UNKNOWN  $E52A           ; Unknown Exxx instruction
$AD0    $EB3F   UNKNOWN  $EB3F           ; Unknown Exxx instruction
$AD2    $0BA1   SYS      $BA1            ; System call to BA1
$AD4    $5DD4   UNKNOWN  $5DD4           ; Unknown 5xxx instruction
$AD6    $9038   UNKNOWN  $9038           ; Unknown 9xxx instruction
$AD8    $1723   JP       $723            ; Jump to 723
$ADA    $6D38   LD       VD, #38         ; Load 56 into VD
$ADC    $6ADE   LD       VA, #DE         ; Load 222 into VA
$ADE    $A49B   LD       I, $49B         ; Load 49B into I
$AE0    $25A5   CALL     $5A5            ; Call subroutine at 5A5
$AE2    $730B   ADD      V3, #0B         ; Add 11 to V3
$AE4    $E3D9   UNKNOWN  $E3D9           ; Unknown Exxx instruction
$AE6    $04F8   SYS      $4F8            ; System call to 4F8
$AE8    $9F73   UNKNOWN  $9F73           ; Unknown 9xxx instruction
$AEA    $C27A   RND      V2, #7A         ; V2 = random & 7A
$AEC    $3E8A   SE       VE, #8A         ; Skip if VE == 138
$AEE    $BF18   JP       V0, $F18        ; Jump to V0 + F18
$AF0    $66D0   LD       V6, #D0         ; Load 208 into V6
$AF2    $9065   UNKNOWN  $9065           ; Unknown 9xxx instruction
$AF4    $699E   LD       V9, #9E         ; Load 158 into V9
$AF6    $09DD   SYS      $9DD            ; System call to 9DD
$AF8    $0DED   SYS      $DED            ; System call to DED
$AFA    $E214   UNKNOWN  $E214           ; Unknown Exxx instruction
$AFC    $7C09   ADD      VC, #09         ; Add 9 to VC
$AFE    $8F25   SUB      VF, V2          ; VF -= V2, VF = !borrow
$B00    $1A2B   JP       $A2B            ; Jump to A2B
$B02    $7444   ADD      V4, #44         ; Add 68 to V4
$B04    $0BB5   SYS      $BB5            ; System call to BB5
$B06    $6F0A   LD       VF, #0A         ; Load 10 into VF
$B08    $0B38   SYS      $B38            ; System call to B38
$B0A    $DD72   DRW      VD, V7, #2      ; Draw 2-byte sprite at VD, V7
$B0C    $A5AA   LD       I, $5AA         ; Load 5AA into I
$B0E    $10BD   JP       $0BD            ; Jump to 0BD
$B10    $E2CC   UNKNOWN  $E2CC           ; Unknown Exxx instruction
$B12    $4ADB   SNE      VA, #DB         ; Skip if VA != 219
$B14    $B81E   JP       V0, $81E        ; Jump to V0 + 81E
$B16    $D780   DRW      V7, V8, #0      ; Draw 0-byte sprite at V7, V8
$B18    $571B   UNKNOWN  $571B           ; Unknown 5xxx instruction
$B1A    $472F   SNE      V7, #2F         ; Skip if V7 != 47
$B1C    $9B86   UNKNOWN  $9B86           ; Unknown 9xxx instruction
$B1E    $67A2   LD       V7, #A2         ; Load 162 into V7
$B20    $A4F9   LD       I, $4F9         ; Load 4F9 into I
$B22    $1F6E   JP       $F6E            ; Jump to F6E
$B24    $3083   SE       V0, #83         ; Skip if V0 == 131
$B26    $8D33   XOR      VD, V3          ; VD ^= V3
$B28    $6350   LD       V3, #50         ; Load 80 into V3
$B2A    $E344   UNKNOWN  $E344           ; Unknown Exxx instruction
$B2C    $FBD2   UNKNOWN  FBD2            ; Unknown Fxxx instruction
$B2E    $0750   SYS      $750            ; System call to 750
$B30    $5619   UNKNOWN  $5619           ; Unknown 5xxx instruction
$B32    $3459   SE       V4, #59         ; Skip if V4 == 89
$B34    $F83A   UNKNOWN  F83A            ; Unknown Fxxx instruction
$B36    $6C06   LD       VC, #06         ; Load 6 into VC
$B38    $49BC   SNE      V9, #BC         ; Skip if V9 != 188
$B3A    $0F34   SYS      $F34            ; System call to F34
$B3C    $C18A   RND      V1, #8A         ; V1 = random & 8A
$B3E    $368E   SE       V6, #8E         ; Skip if V6 == 142
$B40    $5893   UNKNOWN  $5893           ; Unknown 5xxx instruction
$B42    $B23F   JP       V0, $23F        ; Jump to V0 + 23F
$B44    $86B6   SHR      V6              ; V6 >>= 1, VF = LSB
$B46    $92FB   UNKNOWN  $92FB           ; Unknown 9xxx instruction
$B48    $8F7B   UNKNOWN  8F7B            ; Unknown 8xxx instruction
$B4A    $5187   UNKNOWN  $5187           ; Unknown 5xxx instruction
$B4C    $28AE   CALL     $8AE            ; Call subroutine at 8AE
$B4E    $4032   SNE      V0, #32         ; Skip if V0 != 50
$B50    $6D2E   LD       VD, #2E         ; Load 46 into VD
$B52    $785D   ADD      V8, #5D         ; Add 93 to V8
$B54    $E6FE   UNKNOWN  $E6FE           ; Unknown Exxx instruction
$B56    $0009   SYS      $009            ; System call to 009
$B58    $080D   SYS      $80D            ; System call to 80D
$B5A    $8259   UNKNOWN  8259            ; Unknown 8xxx instruction
$B5C    $AD50   LD       I, $D50         ; Load D50 into I
$B5E    $1BDE   JP       $BDE            ; Jump to BDE
$B60    $40E0   SNE      V0, #E0         ; Skip if V0 != 224
$B62    $76F1   ADD      V6, #F1         ; Add 241 to V6
$B64    $C4E2   RND      V4, #E2         ; V4 = random & E2
$B66    $A0DF   LD       I, $0DF         ; Load 0DF into I
$B68    $F2E9   UNKNOWN  F2E9            ; Unknown Fxxx instruction
$B6A    $53BE   UNKNOWN  $53BE           ; Unknown 5xxx instruction
$B6C    $57F3   UNKNOWN  $57F3           ; Unknown 5xxx instruction
$B6E    $6BA0   LD       VB, #A0         ; Load 160 into VB
$B70    $4387   SNE      V3, #87         ; Skip if V3 != 135
$B72    $89B4   ADD      V9, VB          ; V9 += VB, VF = carry
$B74    $BF87   JP       V0, $F87        ; Jump to V0 + F87
$B76    $98EF   UNKNOWN  $98EF           ; Unknown 9xxx instruction
$B78    $4A4E   SNE      VA, #4E         ; Skip if VA != 78
$B7A    $FF4C   UNKNOWN  FF4C            ; Unknown Fxxx instruction
$B7C    $EE1F   UNKNOWN  $EE1F           ; Unknown Exxx instruction
$B7E    $E5A5   UNKNOWN  $E5A5           ; Unknown Exxx instruction
$B80    $A6D4   LD       I, $6D4         ; Load 6D4 into I
$B82    $4F28   SNE      VF, #28         ; Skip if VF != 40
$B84    $A194   LD       I, $194         ; Load 194 into I
$B86    $F86D   UNKNOWN  F86D            ; Unknown Fxxx instruction
$B88    $91D5   UNKNOWN  $91D5           ; Unknown 9xxx instruction
$B8A    $3005   SE       V0, #05         ; Skip if V0 == 5
$B8C    $4EDA   SNE      VE, #DA         ; Skip if VE != 218
$B8E    $A81A   LD       I, $81A         ; Load 81A into I
$B90    $4439   SNE      V4, #39         ; Skip if V4 != 57
$B92    $C226   RND      V2, #26         ; V2 = random & 26
$B94    $E73F   UNKNOWN  $E73F           ; Unknown Exxx instruction
$B96    $AD9C   LD       I, $D9C         ; Load D9C into I
$B98    $F829   LD       F, V8           ; I = sprite address for digit V8
$B9A    $FB05   UNKNOWN  FB05            ; Unknown Fxxx instruction
$B9C    $2F6C   CALL     $F6C            ; Call subroutine at F6C
$B9E    $C4F2   RND      V4, #F2         ; V4 = random & F2
$BA0    $BE29   JP       V0, $E29        ; Jump to V0 + E29
$BA2    $B99E   JP       V0, $99E        ; Jump to V0 + 99E
$BA4    $3DB6   SE       VD, #B6         ; Skip if VD == 182
$BA6    $C8CB   RND      V8, #CB         ; V8 = random & CB
$BA8    $CECB   RND      VE, #CB         ; VE = random & CB
$BAA    $3871   SE       V8, #71         ; Skip if V8 == 113
$BAC    $B12C   JP       V0, $12C        ; Jump to V0 + 12C
$BAE    $B57E   JP       V0, $57E        ; Jump to V0 + 57E
$BB0    $194C   JP       $94C            ; Jump to 94C
$BB2    $43C4   SNE      V3, #C4         ; Skip if V3 != 196
$BB4    $EAE6   UNKNOWN  $EAE6           ; Unknown Exxx instruction
$BB6    $74A6   ADD      V4, #A6         ; Add 166 to V4
$BB8    $92F1   UNKNOWN  $92F1           ; Unknown 9xxx instruction
$BBA    $E139   UNKNOWN  $E139           ; Unknown Exxx instruction
$BBC    $C974   RND      V9, #74         ; V9 = random & 74
$BBE    $DFFA   DRW      VF, VF, #A      ; Draw 10-byte sprite at VF, VF
$BC0    $9543   UNKNOWN  $9543           ; Unknown 9xxx instruction
$BC2    $9999   UNKNOWN  $9999           ; Unknown 9xxx instruction
$BC4    $E08B   UNKNOWN  $E08B           ; Unknown Exxx instruction
$BC6    $60B4   LD       V0, #B4         ; Load 180 into V0
$BC8    $4251   SNE      V2, #51         ; Skip if V2 != 81
$BCA    $130B   JP       $30B            ; Jump to 30B
$BCC    $8C6F   UNKNOWN  8C6F            ; Unknown 8xxx instruction
$BCE    $B35E   JP       V0, $35E        ; Jump to V0 + 35E
$BD0    $2B69   CALL     $B69            ; Call subroutine at B69
$BD2    $B8EC   JP       V0, $8EC        ; Jump to V0 + 8EC
$BD4    $0DCC   SYS      $DCC            ; System call to DCC
$BD6    $AB9A   LD       I, $B9A         ; Load B9A into I
$BD8    $77DC   ADD      V7, #DC         ; Add 220 to V7
$BDA    $1DD2   JP       $DD2            ; Jump to DD2
$BDC    $5B7D   UNKNOWN  $5B7D           ; Unknown 5xxx instruction
$BDE    $779F   ADD      V7, #9F         ; Add 159 to V7
$BE0    $6253   LD       V2, #53         ; Load 83 into V2
$BE2    $C593   RND      V5, #93         ; V5 = random & 93
$BE4    $C7AF   RND      V7, #AF         ; V7 = random & AF
$BE6    $7062   ADD      V0, #62         ; Add 98 to V0
$BE8    $2563   CALL     $563            ; Call subroutine at 563
$BEA    $A8D5   LD       I, $8D5         ; Load 8D5 into I
$BEC    $ED53   UNKNOWN  $ED53           ; Unknown Exxx instruction
$BEE    $F0D1   UNKNOWN  F0D1            ; Unknown Fxxx instruction
$BF0    $2027   CALL     $027            ; Call subroutine at 027
$BF2    $4031   SNE      V0, #31         ; Skip if V0 != 49
$BF4    $03B7   SYS      $3B7            ; System call to 3B7
$BF6    $B757   JP       V0, $757        ; Jump to V0 + 757
$BF8    $846D   UNKNOWN  846D            ; Unknown 8xxx instruction
$BFA    $C1A6   RND      V1, #A6         ; V1 = random & A6
$BFC    $4BE2   SNE      VB, #E2         ; Skip if VB != 226
$BFE    $BB62   JP       V0, $B62        ; Jump to V0 + B62
$C00    $D9FF   DRW      V9, VF, #F      ; Draw 15-byte sprite at V9, VF
$C02    $68D0   LD       V8, #D0         ; Load 208 into V8
$C04    $1813   JP       $813            ; Jump to 813
$C06    $EBAE   UNKNOWN  $EBAE           ; Unknown Exxx instruction
$C08    $ECCA   UNKNOWN  $ECCA           ; Unknown Exxx instruction
$C0A    $71B5   ADD      V1, #B5         ; Add 181 to V1
$C0C    $FD6D   UNKNOWN  FD6D            ; Unknown Fxxx instruction
$C0E    $2F53   CALL     $F53            ; Call subroutine at F53
$C10    $413A   SNE      V1, #3A         ; Skip if V1 != 58
$C12    $3C0F   SE       VC, #0F         ; Skip if VC == 15
$C14    $45FB   SNE      V5, #FB         ; Skip if V5 != 251
$C16    $20A0   CALL     $0A0            ; Call subroutine at 0A0
$C18    $34D9   SE       V4, #D9         ; Skip if V4 == 217
$C1A    $6E3C   LD       VE, #3C         ; Load 60 into VE
$C1C    $B26B   JP       V0, $26B        ; Jump to V0 + 26B
$C1E    $C951   RND      V9, #51         ; V9 = random & 51
$C20    $0BDF   SYS      $BDF            ; System call to BDF
$C22    $66CD   LD       V6, #CD         ; Load 205 into V6
$C24    $9B6D   UNKNOWN  $9B6D           ; Unknown 9xxx instruction
$C26    $6185   LD       V1, #85         ; Load 133 into V1
$C28    $CCAE   RND      VC, #AE         ; VC = random & AE
$C2A    $D1E4   DRW      V1, VE, #4      ; Draw 4-byte sprite at V1, VE
$C2C    $2266   CALL     $266            ; Call subroutine at 266
$C2E    $6AE8   LD       VA, #E8         ; Load 232 into VA
$C30    $B96E   JP       V0, $96E        ; Jump to V0 + 96E
$C32    $B868   JP       V0, $868        ; Jump to V0 + 868
$C34    $A4DA   LD       I, $4DA         ; Load 4DA into I
$C36    $1885   JP       $885            ; Jump to 885
$C38    $C098   RND      V0, #98         ; V0 = random & 98
$C3A    $5F65   UNKNOWN  $5F65           ; Unknown 5xxx instruction
$C3C    $EA99   UNKNOWN  $EA99           ; Unknown Exxx instruction
$C3E    $CD8E   RND      VD, #8E         ; VD = random & 8E
$C40    $CF4D   RND      VF, #4D         ; VF = random & 4D
$C42    $E1C0   UNKNOWN  $E1C0           ; Unknown Exxx instruction
$C44    $5B17   UNKNOWN  $5B17           ; Unknown 5xxx instruction
$C46    $4C3C   SNE      VC, #3C         ; Skip if VC != 60
$C48    $17D7   JP       $7D7            ; Jump to 7D7
$C4A    $6787   LD       V7, #87         ; Load 135 into V7
$C4C    $2664   CALL     $664            ; Call subroutine at 664
$C4E    $8775   SUB      V7, V7          ; V7 -= V7, VF = !borrow
$C50    $0554   SYS      $554            ; System call to 554
$C52    $0F58   SYS      $F58            ; System call to F58
$C54    $965B   UNKNOWN  $965B           ; Unknown 9xxx instruction
$C56    $2EAF   CALL     $EAF            ; Call subroutine at EAF
$C58    $BEA8   JP       V0, $EA8        ; Jump to V0 + EA8
$C5A    $E69D   UNKNOWN  $E69D           ; Unknown Exxx instruction
$C5C    $2E8E   CALL     $E8E            ; Call subroutine at E8E
$C5E    $9F0E   UNKNOWN  $9F0E           ; Unknown 9xxx instruction
$C60    $0099   SYS      $099            ; System call to 099
$C62    $3441   SE       V4, #41         ; Skip if V4 == 65
$C64    $C433   RND      V4, #33         ; V4 = random & 33
$C66    $D791   DRW      V7, V9, #1      ; Draw 1-byte sprite at V7, V9
$C68    $22B9   CALL     $2B9            ; Call subroutine at 2B9
$C6A    $1DF5   JP       $DF5            ; Jump to DF5
$C6C    $0E20   SYS      $E20            ; System call to E20
$C6E    $2F4E   CALL     $F4E            ; Call subroutine at F4E
$C70    $515C   UNKNOWN  $515C           ; Unknown 5xxx instruction
$C72    $73CC   ADD      V3, #CC         ; Add 204 to V3
$C74    $6514   LD       V5, #14         ; Load 20 into V5
$C76    $BF9E   JP       V0, $F9E        ; Jump to V0 + F9E
$C78    $39FF   SE       V9, #FF         ; Skip if V9 == 255
$C7A    $11DC   JP       $1DC            ; Jump to 1DC
$C7C    $691C   LD       V9, #1C         ; Load 28 into V9
$C7E    $E68D   UNKNOWN  $E68D           ; Unknown Exxx instruction
$C80    $041A   SYS      $41A            ; System call to 41A
$C82    $76AE   ADD      V6, #AE         ; Add 174 to V6
$C84    $BEEA   JP       V0, $EEA        ; Jump to V0 + EEA
$C86    $C0D1   RND      V0, #D1         ; V0 = random & D1
$C88    $E651   UNKNOWN  $E651           ; Unknown Exxx instruction
$C8A    $E2B3   UNKNOWN  $E2B3           ; Unknown Exxx instruction
$C8C    $D136   DRW      V1, V3, #6      ; Draw 6-byte sprite at V1, V3
$C8E    $FB11   UNKNOWN  FB11            ; Unknown Fxxx instruction
$C90    $2EE5   CALL     $EE5            ; Call subroutine at EE5
$C92    $E0A9   UNKNOWN  $E0A9           ; Unknown Exxx instruction
$C94    $6153   LD       V1, #53         ; Load 83 into V1
$C96    $D099   DRW      V0, V9, #9      ; Draw 9-byte sprite at V0, V9
$C98    $0B65   SYS      $B65            ; System call to B65
$C9A    $4712   SNE      V7, #12         ; Skip if V7 != 18
$C9C    $4EB4   SNE      VE, #B4         ; Skip if VE != 180
$C9E    $7CB5   ADD      VC, #B5         ; Add 181 to VC
$CA0    $E9E1   UNKNOWN  $E9E1           ; Unknown Exxx instruction
$CA2    $4D67   SNE      VD, #67         ; Skip if VD != 103
$CA4    $3C9C   SE       VC, #9C         ; Skip if VC == 156
$CA6    $7D13   ADD      VD, #13         ; Add 19 to VD
$CA8    $D9E4   DRW      V9, VE, #4      ; Draw 4-byte sprite at V9, VE
$CAA    $161A   JP       $61A            ; Jump to 61A
$CAC    $C89B   RND      V8, #9B         ; V8 = random & 9B
$CAE    $8601   OR       V6, V0          ; V6 |= V0
$CB0    $64BA   LD       V4, #BA         ; Load 186 into V4
$CB2    $68A0   LD       V8, #A0         ; Load 160 into V8
$CB4    $3083   SE       V0, #83         ; Skip if V0 == 131
$CB6    $A2A6   LD       I, $2A6         ; Load 2A6 into I
$CB8    $94F1   UNKNOWN  $94F1           ; Unknown 9xxx instruction
$CBA    $7A61   ADD      VA, #61         ; Add 97 to VA
$CBC    $1F8C   JP       $F8C            ; Jump to F8C
$CBE    $3670   SE       V6, #70         ; Skip if V6 == 112
$CC0    $B2A9   JP       V0, $2A9        ; Jump to V0 + 2A9
$CC2    $2CD7   CALL     $CD7            ; Call subroutine at CD7
$CC4    $7C23   ADD      VC, #23         ; Add 35 to VC
$CC6    $0009   SYS      $009            ; System call to 009
$CC8    $B234   JP       V0, $234        ; Jump to V0 + 234
$CCA    $827C   UNKNOWN  827C            ; Unknown 8xxx instruction
$CCC    $CE6F   RND      VE, #6F         ; VE = random & 6F
$CCE    $A9B2   LD       I, $9B2         ; Load 9B2 into I
$CD0    $C2FD   RND      V2, #FD         ; V2 = random & FD
$CD2    $5A7C   UNKNOWN  $5A7C           ; Unknown 5xxx instruction
$CD4    $42FC   SNE      V2, #FC         ; Skip if V2 != 252
$CD6    $C06A   RND      V0, #6A         ; V0 = random & 6A
$CD8    $2002   CALL     $002            ; Call subroutine at 002
$CDA    $B50B   JP       V0, $50B        ; Jump to V0 + 50B
$CDC    $7A11   ADD      VA, #11         ; Add 17 to VA
$CDE    $B5EE   JP       V0, $5EE        ; Jump to V0 + 5EE
$CE0    $09CF   SYS      $9CF            ; System call to 9CF
$CE2    $D624   DRW      V6, V2, #4      ; Draw 4-byte sprite at V6, V2
$CE4    $2FD5   CALL     $FD5            ; Call subroutine at FD5
$CE6    $9AFA   UNKNOWN  $9AFA           ; Unknown 9xxx instruction
$CE8    $6ECF   LD       VE, #CF         ; Load 207 into VE
$CEA    $C07D   RND      V0, #7D         ; V0 = random & 7D
$CEC    $B1C7   JP       V0, $1C7        ; Jump to V0 + 1C7
$CEE    $B18D   JP       V0, $18D        ; Jump to V0 + 18D
$CF0    $328F   SE       V2, #8F         ; Skip if V2 == 143
$CF2    $4209   SNE      V2, #09         ; Skip if V2 != 9
$CF4    $DA15   DRW      VA, V1, #5      ; Draw 5-byte sprite at VA, V1
$CF6    $4C6B   SNE      VC, #6B         ; Skip if VC != 107
$CF8    $CAB4   RND      VA, #B4         ; VA = random & B4
$CFA    $E399   UNKNOWN  $E399           ; Unknown Exxx instruction
$CFC    $B63E   JP       V0, $63E        ; Jump to V0 + 63E
$CFE    $8C9A   UNKNOWN  8C9A            ; Unknown 8xxx instruction
$D00    $09F3   SYS      $9F3            ; System call to 9F3
$D02    $4235   SNE      V2, #35         ; Skip if V2 != 53
$D04    $449A   SNE      V4, #9A         ; Skip if V4 != 154
$D06    $A47C   LD       I, $47C         ; Load 47C into I
$D08    $19FF   JP       $9FF            ; Jump to 9FF
$D0A    $BE04   JP       V0, $E04        ; Jump to V0 + E04
$D0C    $F7B0   UNKNOWN  F7B0            ; Unknown Fxxx instruction
$D0E    $06A5   SYS      $6A5            ; System call to 6A5
$D10    $795B   ADD      V9, #5B         ; Add 91 to V9
$D12    $B277   JP       V0, $277        ; Jump to V0 + 277
$D14    $B1B0   JP       V0, $1B0        ; Jump to V0 + 1B0
$D16    $2755   CALL     $755            ; Call subroutine at 755
$D18    $678C   LD       V7, #8C         ; Load 140 into V7
$D1A    $E9FF   UNKNOWN  $E9FF           ; Unknown Exxx instruction
$D1C    $8A53   XOR      VA, V5          ; VA ^= V5
$D1E    $9AC3   UNKNOWN  $9AC3           ; Unknown 9xxx instruction
$D20    $FFFA   UNKNOWN  FFFA            ; Unknown Fxxx instruction
$D22    $9423   UNKNOWN  $9423           ; Unknown 9xxx instruction
$D24    $D525   DRW      V5, V2, #5      ; Draw 5-byte sprite at V5, V2
$D26    $0EC3   SYS      $EC3            ; System call to EC3
$D28    $836B   UNKNOWN  836B            ; Unknown 8xxx instruction
$D2A    $E218   UNKNOWN  $E218           ; Unknown Exxx instruction
$D2C    $D812   DRW      V8, V1, #2      ; Draw 2-byte sprite at V8, V1
$D2E    $F64C   UNKNOWN  F64C            ; Unknown Fxxx instruction
$D30    $2F02   CALL     $F02            ; Call subroutine at F02
$D32    $6652   LD       V6, #52         ; Load 82 into V6
$D34    $CB8C   RND      VB, #8C         ; VB = random & 8C
$D36    $8F03   XOR      VF, V0          ; VF ^= V0
$D38    $EF4C   UNKNOWN  $EF4C           ; Unknown Exxx instruction
$D3A    $38F3   SE       V8, #F3         ; Skip if V8 == 243
$D3C    $21A5   CALL     $1A5            ; Call subroutine at 1A5
$D3E    $DD2A   DRW      VD, V2, #A      ; Draw 10-byte sprite at VD, V2
$D40    $1669   JP       $669            ; Jump to 669
$D42    $4A6B   SNE      VA, #6B         ; Skip if VA != 107
$D44    $1C62   JP       $C62            ; Jump to C62
$D46    $8702   AND      V7, V0          ; V7 &= V0
$D48    $C312   RND      V3, #12         ; V3 = random & 12
$D4A    $3FB0   SE       VF, #B0         ; Skip if VF == 176
$D4C    $3B81   SE       VB, #81         ; Skip if VB == 129
$D4E    $3266   SE       V2, #66         ; Skip if V2 == 102
$D50    $0BD5   SYS      $BD5            ; System call to BD5
$D52    $A728   LD       I, $728         ; Load 728 into I
$D54    $BEA0   JP       V0, $EA0        ; Jump to V0 + EA0
$D56    $70A0   ADD      V0, #A0         ; Add 160 to V0
$D58    $1566   JP       $566            ; Jump to 566
$D5A    $D05A   DRW      V0, V5, #A      ; Draw 10-byte sprite at V0, V5
$D5C    $9C5C   UNKNOWN  $9C5C           ; Unknown 9xxx instruction
$D5E    $FE2D   UNKNOWN  FE2D            ; Unknown Fxxx instruction
$D60    $14FC   JP       $4FC            ; Jump to 4FC
$D62    $8858   UNKNOWN  8858            ; Unknown 8xxx instruction
$D64    $EC63   UNKNOWN  $EC63           ; Unknown Exxx instruction
$D66    $262E   CALL     $62E            ; Call subroutine at 62E
$D68    $617C   LD       V1, #7C         ; Load 124 into V1
$D6A    $4716   SNE      V7, #16         ; Skip if V7 != 22
$D6C    $B33C   JP       V0, $33C        ; Jump to V0 + 33C
$D6E    $A26A   LD       I, $26A         ; Load 26A into I
$D70    $E44D   UNKNOWN  $E44D           ; Unknown Exxx instruction
$D72    $B58A   JP       V0, $58A        ; Jump to V0 + 58A
$D74    $D74A   DRW      V7, V4, #A      ; Draw 10-byte sprite at V7, V4
$D76    $B8DA   JP       V0, $8DA        ; Jump to V0 + 8DA
$D78    $5779   UNKNOWN  $5779           ; Unknown 5xxx instruction
$D7A    $B804   JP       V0, $804        ; Jump to V0 + 804
$D7C    $64F3   LD       V4, #F3         ; Load 243 into V4
$D7E    $B9E4   JP       V0, $9E4        ; Jump to V0 + 9E4
$D80    $F23B   UNKNOWN  F23B            ; Unknown Fxxx instruction
$D82    $4CCF   SNE      VC, #CF         ; Skip if VC != 207
$D84    $4A95   SNE      VA, #95         ; Skip if VA != 149
$D86    $90D6   UNKNOWN  $90D6           ; Unknown 9xxx instruction
$D88    $7696   ADD      V6, #96         ; Add 150 to V6
$D8A    $2EEB   CALL     $EEB            ; Call subroutine at EEB
$D8C    $BF05   JP       V0, $F05        ; Jump to V0 + F05
$D8E    $9C37   UNKNOWN  $9C37           ; Unknown 9xxx instruction
$D90    $99CA   UNKNOWN  $99CA           ; Unknown 9xxx instruction
$D92    $3711   SE       V7, #11         ; Skip if V7 == 17
$D94    $E4E1   UNKNOWN  $E4E1           ; Unknown Exxx instruction
$D96    $B611   JP       V0, $611        ; Jump to V0 + 611
$D98    $1ABB   JP       $ABB            ; Jump to ABB
$D9A    $2C8D   CALL     $C8D            ; Call subroutine at C8D
$D9C    $A026   LD       I, $026         ; Load 026 into I
$D9E    $2F41   CALL     $F41            ; Call subroutine at F41
$DA0    $0985   SYS      $985            ; System call to 985
$DA2    $6A4A   LD       VA, #4A         ; Load 74 into VA
$DA4    $21E6   CALL     $1E6            ; Call subroutine at 1E6
$DA6    $12EE   JP       $2EE            ; Jump to 2EE
$DA8    $07A7   SYS      $7A7            ; System call to 7A7
$DAA    $5B83   UNKNOWN  $5B83           ; Unknown 5xxx instruction
$DAC    $92C7   UNKNOWN  $92C7           ; Unknown 9xxx instruction
$DAE    $840A   UNKNOWN  840A            ; Unknown 8xxx instruction
$DB0    $3048   SE       V0, #48         ; Skip if V0 == 72
$DB2    $85C1   OR       V5, VC          ; V5 |= VC
$DB4    $57FD   UNKNOWN  $57FD           ; Unknown 5xxx instruction
$DB6    $96DA   UNKNOWN  $96DA           ; Unknown 9xxx instruction
$DB8    $EF9E   SKP      VF              ; Skip if key VF pressed
$DBA    $B1A1   JP       V0, $1A1        ; Jump to V0 + 1A1
$DBC    $67E0   LD       V7, #E0         ; Load 224 into V7
$DBE    $1415   JP       $415            ; Jump to 415
$DC0    $B580   JP       V0, $580        ; Jump to V0 + 580
$DC2    $C9FF   RND      V9, #FF         ; V9 = random & FF
$DC4    $17DD   JP       $7DD            ; Jump to 7DD
$DC6    $47C4   SNE      V7, #C4         ; Skip if V7 != 196
$DC8    $D604   DRW      V6, V0, #4      ; Draw 4-byte sprite at V6, V0
$DCA    $BDD3   JP       V0, $DD3        ; Jump to V0 + DD3
$DCC    $C865   RND      V8, #65         ; V8 = random & 65
$DCE    $5108   UNKNOWN  $5108           ; Unknown 5xxx instruction
$DD0    $FDEA   UNKNOWN  FDEA            ; Unknown Fxxx instruction
$DD2    $AEAC   LD       I, $EAC         ; Load EAC into I
$DD4    $7B22   ADD      VB, #22         ; Add 34 to VB
$DD6    $6088   LD       V0, #88         ; Load 136 into V0
$DD8    $ECD0   UNKNOWN  $ECD0           ; Unknown Exxx instruction
$DDA    $60E8   LD       V0, #E8         ; Load 232 into V0
$DDC    $E61F   UNKNOWN  $E61F           ; Unknown Exxx instruction
$DDE    $7FAE   ADD      VF, #AE         ; Add 174 to VF
$DE0    $CD7F   RND      VD, #7F         ; VD = random & 7F
$DE2    $C5EE   RND      V5, #EE         ; V5 = random & EE
$DE4    $5301   UNKNOWN  $5301           ; Unknown 5xxx instruction
$DE6    $71B4   ADD      V1, #B4         ; Add 180 to V1
$DE8    $FA12   UNKNOWN  FA12            ; Unknown Fxxx instruction
$DEA    $1C11   JP       $C11            ; Jump to C11
$DEC    $F452   UNKNOWN  F452            ; Unknown Fxxx instruction
$DEE    $15A7   JP       $5A7            ; Jump to 5A7
$DF0    $DA84   DRW      VA, V8, #4      ; Draw 4-byte sprite at VA, V8
$DF2    $7434   ADD      V4, #34         ; Add 52 to V4
$DF4    $5584   UNKNOWN  $5584           ; Unknown 5xxx instruction
$DF6    $AA7F   LD       I, $A7F         ; Load A7F into I
$DF8    $AAAD   LD       I, $AAD         ; Load AAD into I
$DFA    $2D53   CALL     $D53            ; Call subroutine at D53
$DFC    $2420   CALL     $420            ; Call subroutine at 420
$DFE    $14FA   JP       $4FA            ; Jump to 4FA
$E00    $A60A   LD       I, $60A         ; Load 60A into I
$E02    $DC0B   DRW      VC, V0, #B      ; Draw 11-byte sprite at VC, V0
$E04    $C90D   RND      V9, #0D         ; V9 = random & 0D
$E06    $D500   DRW      V5, V0, #0      ; Draw 0-byte sprite at V5, V0
$E08    $C2BE   RND      V2, #BE         ; V2 = random & BE
$E0A    $215B   CALL     $15B            ; Call subroutine at 15B
$E0C    $6E73   LD       VE, #73         ; Load 115 into VE
$E0E    $3EBF   SE       VE, #BF         ; Skip if VE == 191
$E10    $D47C   DRW      V4, V7, #C      ; Draw 12-byte sprite at V4, V7
$E12    $3202   SE       V2, #02         ; Skip if V2 == 2
$E14    $F908   UNKNOWN  F908            ; Unknown Fxxx instruction
$E16    $1778   JP       $778            ; Jump to 778
$E18    $16C1   JP       $6C1            ; Jump to 6C1
$E1A    $C65C   RND      V6, #5C         ; V6 = random & 5C
$E1C    $C498   RND      V4, #98         ; V4 = random & 98
$E1E    $E72D   UNKNOWN  $E72D           ; Unknown Exxx instruction
$E20    $E86B   UNKNOWN  $E86B           ; Unknown Exxx instruction
$E22    $C335   RND      V3, #35         ; V3 = random & 35
$E24    $E91E   UNKNOWN  $E91E           ; Unknown Exxx instruction
$E26    $6A0B   LD       VA, #0B         ; Load 11 into VA
$E28    $9DD5   UNKNOWN  $9DD5           ; Unknown 9xxx instruction
$E2A    $8404   ADD      V4, V0          ; V4 += V0, VF = carry
$E2C    $5153   UNKNOWN  $5153           ; Unknown 5xxx instruction
$E2E    $B024   JP       V0, $024        ; Jump to V0 + 024
$E30    $0140   SYS      $140            ; System call to 140
$E32    $30C2   SE       V0, #C2         ; Skip if V0 == 194
$E34    $D56E   DRW      V5, V6, #E      ; Draw 14-byte sprite at V5, V6
$E36    $C5A1   RND      V5, #A1         ; V5 = random & A1
$E38    $B08C   JP       V0, $08C        ; Jump to V0 + 08C
$E3A    $9BC9   UNKNOWN  $9BC9           ; Unknown 9xxx instruction
$E3C    $AE9B   LD       I, $E9B         ; Load E9B into I
$E3E    $E766   UNKNOWN  $E766           ; Unknown Exxx instruction
$E40    $F683   UNKNOWN  F683            ; Unknown Fxxx instruction
$E42    $C5C6   RND      V5, #C6         ; V5 = random & C6
$E44    $599D   UNKNOWN  $599D           ; Unknown 5xxx instruction
$E46    $DFA9   DRW      VF, VA, #9      ; Draw 9-byte sprite at VF, VA
$E48    $C6E7   RND      V6, #E7         ; V6 = random & E7
$E4A    $DB28   DRW      VB, V2, #8      ; Draw 8-byte sprite at VB, V2
$E4C    $8603   XOR      V6, V0          ; V6 ^= V0
$E4E    $552D   UNKNOWN  $552D           ; Unknown 5xxx instruction
$E50    $9064   UNKNOWN  $9064           ; Unknown 9xxx instruction
$E52    $600A   LD       V0, #0A         ; Load 10 into V0
$E54    $31AA   SE       V1, #AA         ; Skip if V1 == 170
$E56    $EB79   UNKNOWN  $EB79           ; Unknown Exxx instruction
$E58    $01F3   SYS      $1F3            ; System call to 1F3
$E5A    $E043   UNKNOWN  $E043           ; Unknown Exxx instruction
$E5C    $20AE   CALL     $0AE            ; Call subroutine at 0AE
$E5E    $33B5   SE       V3, #B5         ; Skip if V3 == 181
$E60    $953A   UNKNOWN  $953A           ; Unknown 9xxx instruction
$E62    $58CB   UNKNOWN  $58CB           ; Unknown 5xxx instruction
$E64    $452C   SNE      V5, #2C         ; Skip if V5 != 44
$E66    $0027   SYS      $027            ; System call to 027
$E68    $B3E6   JP       V0, $3E6        ; Jump to V0 + 3E6
$E6A    $63BF   LD       V3, #BF         ; Load 191 into V3
$E6C    $E9E5   UNKNOWN  $E9E5           ; Unknown Exxx instruction
$E6E    $CF17   RND      VF, #17         ; VF = random & 17
$E70    $9564   UNKNOWN  $9564           ; Unknown 9xxx instruction
$E72    $C38F   RND      V3, #8F         ; V3 = random & 8F
$E74    $8CC2   AND      VC, VC          ; VC &= VC
$E76    $D4B5   DRW      V4, VB, #5      ; Draw 5-byte sprite at V4, VB
$E78    $8465   SUB      V4, V6          ; V4 -= V6, VF = !borrow
$E7A    $0C68   SYS      $C68            ; System call to C68
$E7C    $B677   JP       V0, $677        ; Jump to V0 + 677
$E7E    $D0F1   DRW      V0, VF, #1      ; Draw 1-byte sprite at V0, VF
$E80    $FD62   UNKNOWN  FD62            ; Unknown Fxxx instruction
$E82    $9AF3   UNKNOWN  $9AF3           ; Unknown 9xxx instruction
$E84    $B8D2   JP       V0, $8D2        ; Jump to V0 + 8D2
$E86    $328B   SE       V2, #8B         ; Skip if V2 == 139
$E88    $6F57   LD       VF, #57         ; Load 87 into VF
$E8A    $8B2A   UNKNOWN  8B2A            ; Unknown 8xxx instruction
$E8C    $B5C0   JP       V0, $5C0        ; Jump to V0 + 5C0
$E8E    $D24C   DRW      V2, V4, #C      ; Draw 12-byte sprite at V2, V4
$E90    $7E9F   ADD      VE, #9F         ; Add 159 to VE
$E92    $F9F9   UNKNOWN  F9F9            ; Unknown Fxxx instruction
$E94    $11EF   JP       $1EF            ; Jump to 1EF
$E96    $4029   SNE      V0, #29         ; Skip if V0 != 41
$E98    $9090   SNE      V0, V9          ; Skip if V0 != V9
$E9A    $A457   LD       I, $457         ; Load 457 into I
$E9C    $CCA7   RND      VC, #A7         ; VC = random & A7
$E9E    $B292   JP       V0, $292        ; Jump to V0 + 292
$EA0    $3B91   SE       VB, #91         ; Skip if VB == 145
$EA2    $1C32   JP       $C32            ; Jump to C32
$EA4    $4B59   SNE      VB, #59         ; Skip if VB != 89
$EA6    $FE4D   UNKNOWN  FE4D            ; Unknown Fxxx instruction
$EA8    $3502   SE       V5, #02         ; Skip if V5 == 2
$EAA    $1B58   JP       $B58            ; Jump to B58
$EAC    $03C7   SYS      $3C7            ; System call to 3C7
$EAE    $98FA   UNKNOWN  $98FA           ; Unknown 9xxx instruction
$EB0    $CED9   RND      VE, #D9         ; VE = random & D9
$EB2    $6BAB   LD       VB, #AB         ; Load 171 into VB
$EB4    $FF24   UNKNOWN  FF24            ; Unknown Fxxx instruction
$EB6    $7F92   ADD      VF, #92         ; Add 146 to VF
$EB8    $2C8B   CALL     $C8B            ; Call subroutine at C8B
$EBA    $D054   DRW      V0, V5, #4      ; Draw 4-byte sprite at V0, V5
$EBC    $E1A7   UNKNOWN  $E1A7           ; Unknown Exxx instruction
$EBE    $E5DA   UNKNOWN  $E5DA           ; Unknown Exxx instruction
$EC0    $91F0   SNE      V1, VF          ; Skip if V1 != VF
$EC2    $232F   CALL     $32F            ; Call subroutine at 32F
$EC4    $3CF7   SE       VC, #F7         ; Skip if VC == 247
$EC6    $B25C   JP       V0, $25C        ; Jump to V0 + 25C
$EC8    $8753   XOR      V7, V5          ; V7 ^= V5
$ECA    $8735   SUB      V7, V3          ; V7 -= V3, VF = !borrow
$ECC    $4DE5   SNE      VD, #E5         ; Skip if VD != 229
$ECE    $6639   LD       V6, #39         ; Load 57 into V6
$ED0    $0112   SYS      $112            ; System call to 112
$ED2    $5D60   SE       VD, V6          ; Skip if VD == V6
$ED4    $8048   UNKNOWN  8048            ; Unknown 8xxx instruction
$ED6    $45CC   SNE      V5, #CC         ; Skip if V5 != 204
$ED8    $A5AD   LD       I, $5AD         ; Load 5AD into I
$EDA    $6FFE   LD       VF, #FE         ; Load 254 into VF
$EDC    $D3A1   DRW      V3, VA, #1      ; Draw 1-byte sprite at V3, VA
$EDE    $DE57   DRW      VE, V5, #7      ; Draw 7-byte sprite at VE, V5
$EE0    $9D66   UNKNOWN  $9D66           ; Unknown 9xxx instruction
$EE2    $108E   JP       $08E            ; Jump to 08E
$EE4    $50A7   UNKNOWN  $50A7           ; Unknown 5xxx instruction
$EE6    $942A   UNKNOWN  $942A           ; Unknown 9xxx instruction
$EE8    $7595   ADD      V5, #95         ; Add 149 to V5
$EEA    $FE1C   UNKNOWN  FE1C            ; Unknown Fxxx instruction
$EEC    $512E   UNKNOWN  $512E           ; Unknown 5xxx instruction
$EEE    $0662   SYS      $662            ; System call to 662
$EF0    $1531   JP       $531            ; Jump to 531
$EF2    $1F8B   JP       $F8B            ; Jump to F8B
$EF4    $A3C6   LD       I, $3C6         ; Load 3C6 into I
$EF6    $F16E   UNKNOWN  F16E            ; Unknown Fxxx instruction
$EF8    $8691   OR       V6, V9          ; V6 |= V9
$EFA    $D874   DRW      V8, V7, #4      ; Draw 4-byte sprite at V8, V7
$EFC    $E12C   UNKNOWN  $E12C           ; Unknown Exxx instruction
$EFE    $19D7   JP       $9D7            ; Jump to 9D7
$F00    $AF35   LD       I, $F35         ; Load F35 into I
$F02    $5A3F   UNKNOWN  $5A3F           ; Unknown 5xxx instruction
$F04    $AA1C   LD       I, $A1C         ; Load A1C into I
$F06    $3B54   SE       VB, #54         ; Skip if VB == 84
$F08    $2E15   CALL     $E15            ; Call subroutine at E15
$F0A    $5382   UNKNOWN  $5382           ; Unknown 5xxx instruction
$F0C    $C028   RND      V0, #28         ; V0 = random & 28
$F0E    $CABD   RND      VA, #BD         ; VA = random & BD
$F10    $98C4   UNKNOWN  $98C4           ; Unknown 9xxx instruction
$F12    $21C8   CALL     $1C8            ; Call subroutine at 1C8
$F14    $7A10   ADD      VA, #10         ; Add 16 to VA
$F16    $A782   LD       I, $782         ; Load 782 into I
$F18    $2044   CALL     $044            ; Call subroutine at 044
$F1A    $4CAE   SNE      VC, #AE         ; Skip if VC != 174
$F1C    $4B52   SNE      VB, #52         ; Skip if VB != 82
$F1E    $9EB4   UNKNOWN  $9EB4           ; Unknown 9xxx instruction
$F20    $D5F5   DRW      V5, VF, #5      ; Draw 5-byte sprite at V5, VF
$F22    $EBE0   UNKNOWN  $EBE0           ; Unknown Exxx instruction
$F24    $BC52   JP       V0, $C52        ; Jump to V0 + C52
$F26    $3ECA   SE       VE, #CA         ; Skip if VE == 202
$F28    $8041   OR       V0, V4          ; V0 |= V4
$F2A    $22A0   CALL     $2A0            ; Call subroutine at 2A0
$F2C    $56F6   UNKNOWN  $56F6           ; Unknown 5xxx instruction
$F2E    $D96F   DRW      V9, V6, #F      ; Draw 15-byte sprite at V9, V6
$F30    $73CA   ADD      V3, #CA         ; Add 202 to V3
$F32    $C1D9   RND      V1, #D9         ; V1 = random & D9
$F34    $8FD5   SUB      VF, VD          ; VF -= VD, VF = !borrow
$F36    $8ACF   UNKNOWN  8ACF            ; Unknown 8xxx instruction
$F38    $100E   JP       $00E            ; Jump to 00E
$F3A    $4D25   SNE      VD, #25         ; Skip if VD != 37
$F3C    $3C33   SE       VC, #33         ; Skip if VC == 51
$F3E    $3494   SE       V4, #94         ; Skip if V4 == 148
$F40    $9872   UNKNOWN  $9872           ; Unknown 9xxx instruction
$F42    $4663   SNE      V6, #63         ; Skip if V6 != 99
$F44    $37A1   SE       V7, #A1         ; Skip if V7 == 161
$F46    $F1C8   UNKNOWN  F1C8            ; Unknown Fxxx instruction
$F48    $E8D5   UNKNOWN  $E8D5           ; Unknown Exxx instruction
$F4A    $8780   LD       V7, V8          ; V7 = V8
$F4C    $AF4C   LD       I, $F4C         ; Load F4C into I
$F4E    $5FF9   UNKNOWN  $5FF9           ; Unknown 5xxx instruction
$F50    $EC83   UNKNOWN  $EC83           ; Unknown Exxx instruction
$F52    $B5A6   JP       V0, $5A6        ; Jump to V0 + 5A6
$F54    $034D   SYS      $34D            ; System call to 34D
$F56    $7ACE   ADD      VA, #CE         ; Add 206 to VA
$F58    $5099   UNKNOWN  $5099           ; Unknown 5xxx instruction
$F5A    $E169   UNKNOWN  $E169           ; Unknown Exxx instruction
$F5C    $4407   SNE      V4, #07         ; Skip if V4 != 7
$F5E    $8A33   XOR      VA, V3          ; VA ^= V3
$F60    $6AC0   LD       VA, #C0         ; Load 192 into VA
$F62    $32DD   SE       V2, #DD         ; Skip if V2 == 221
$F64    $16C4   JP       $6C4            ; Jump to 6C4
$F66    $E16D   UNKNOWN  $E16D           ; Unknown Exxx instruction
$F68    $1876   JP       $876            ; Jump to 876
$F6A    $D6E9   DRW      V6, VE, #9      ; Draw 9-byte sprite at V6, VE
$F6C    $651F   LD       V5, #1F         ; Load 31 into V5
$F6E    $15F7   JP       $5F7            ; Jump to 5F7
$F70    $D06F   DRW      V0, V6, #F      ; Draw 15-byte sprite at V0, V6
$F72    $FCCB   UNKNOWN  FCCB            ; Unknown Fxxx instruction
$F74    $4CAA   SNE      VC, #AA         ; Skip if VC != 170
$F76    $7F0D   ADD      VF, #0D         ; Add 13 to VF
$F78    $13CB   JP       $3CB            ; Jump to 3CB
$F7A    $67BE   LD       V7, #BE         ; Load 190 into V7
$F7C    $8712   AND      V7, V1          ; V7 &= V1
$F7E    $D316   DRW      V3, V1, #6      ; Draw 6-byte sprite at V3, V1
$F80    $789B   ADD      V8, #9B         ; Add 155 to V8
$F82    $A328   LD       I, $328         ; Load 328 into I
$F84    $E4F7   UNKNOWN  $E4F7           ; Unknown Exxx instruction
$F86    $0561   SYS      $561            ; System call to 561
$F88    $C4B4   RND      V4, #B4         ; V4 = random & B4
$F8A    $AE03   LD       I, $E03         ; Load E03 into I
$F8C    $5A0E   UNKNOWN  $5A0E           ; Unknown 5xxx instruction
$F8E    $4EF5   SNE      VE, #F5         ; Skip if VE != 245
$F90    $E659   UNKNOWN  $E659           ; Unknown Exxx instruction
$F92    $2F6B   CALL     $F6B            ; Call subroutine at F6B
$F94    $4177   SNE      V1, #77         ; Skip if V1 != 119
$F96    $A2D1   LD       I, $2D1         ; Load 2D1 into I
$F98    $1EB3   JP       $EB3            ; Jump to EB3
$F9A    $E9F7   UNKNOWN  $E9F7           ; Unknown Exxx instruction
$F9C    $FF61   UNKNOWN  FF61            ; Unknown Fxxx instruction
$F9E    $35E9   SE       V5, #E9         ; Skip if V5 == 233
$FA0    $BDF6   JP       V0, $DF6        ; Jump to V0 + DF6
$FA2    $0AE9   SYS      $AE9            ; System call to AE9
$FA4    $2EEF   CALL     $EEF            ; Call subroutine at EEF
$FA6    $84C7   SUBN     V4, VC          ; V4 = VC - V4, VF = !borrow
$FA8    $01C4   SYS      $1C4            ; System call to 1C4
$FAA    $5859   UNKNOWN  $5859           ; Unknown 5xxx instruction
$FAC    $BCCA   JP       V0, $CCA        ; Jump to V0 + CCA
$FAE    $F3A9   UNKNOWN  F3A9            ; Unknown Fxxx instruction
$FB0    $4DB6   SNE      VD, #B6         ; Skip if VD != 182
$FB2    $5D3A   UNKNOWN  $5D3A           ; Unknown 5xxx instruction
$FB4    $256E   CALL     $56E            ; Call subroutine at 56E
$FB6    $22CC   CALL     $2CC            ; Call subroutine at 2CC
$FB8    $B20B   JP       V0, $20B        ; Jump to V0 + 20B
$FBA    $FB5E   UNKNOWN  FB5E            ; Unknown Fxxx instruction
$FBC    $F2F9   UNKNOWN  F2F9            ; Unknown Fxxx instruction
$FBE    $C1E2   RND      V1, #E2         ; V1 = random & E2
$FC0    $44AF   SNE      V4, #AF         ; Skip if V4 != 175
$FC2    $C4DC   RND      V4, #DC         ; V4 = random & DC
$FC4    $38A3   SE       V8, #A3         ; Skip if V8 == 163
$FC6    $3E57   SE       VE, #57         ; Skip if VE == 87
$FC8    $B253   JP       V0, $253        ; Jump to V0 + 253
$FCA    $7844   ADD      V8, #44         ; Add 68 to V8
$FCC    $5EFA   UNKNOWN  $5EFA           ; Unknown 5xxx instruction
$FCE    $AB96   LD       I, $B96         ; Load B96 into I
$FD0    $94E2   UNKNOWN  $94E2           ; Unknown 9xxx instruction
$FD2    $AE29   LD       I, $E29         ; Load E29 into I
$FD4    $0EB2   SYS      $EB2            ; System call to EB2
$FD6    $D963   DRW      V9, V6, #3      ; Draw 3-byte sprite at V9, V6
$FD8    $8FFB   UNKNOWN  8FFB            ; Unknown 8xxx instruction
$FDA    $FA2B   UNKNOWN  FA2B            ; Unknown Fxxx instruction
$FDC    $3355   SE       V3, #55         ; Skip if V3 == 85
$FDE    $643F   LD       V4, #3F         ; Load 63 into V4
$FE0    $3478   SE       V4, #78         ; Skip if V4 == 120
$FE2    $7363   ADD      V3, #63         ; Add 99 to V3
$FE4    $B135   JP       V0, $135        ; Jump to V0 + 135
$FE6    $F078   UNKNOWN  F078            ; Unknown Fxxx instruction
$FE8    $8138   UNKNOWN  8138            ; Unknown 8xxx instruction
$FEA    $79FD   ADD      V9, #FD         ; Add 253 to V9
$FEC    $95D7   UNKNOWN  $95D7           ; Unknown 9xxx instruction
$FEE    $4ED6   SNE      VE, #D6         ; Skip if VE != 214
$FF0    $3A16   SE       VA, #16         ; Skip if VA == 22
$FF2    $6F6B   LD       VF, #6B         ; Load 107 into VF
$FF4    $13FB   JP       $3FB            ; Jump to 3FB
$FF6    $23F9   CALL     $3F9            ; Call subroutine at 3F9
$FF8    $BA16   JP       V0, $A16        ; Jump to V0 + A16
$FFA    $E780   UNKNOWN  $E780           ; Unknown Exxx instruction
$FFC    $8109   UNKNOWN  8109            ; Unknown 8xxx instruction
$FFE    $18F9   JP       $8F9            ; Jump to 8F9

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 460 (25.7%)
  JP      : 240 (13.4%)
  LD      : 221 (12.3%)
  ADD     : 130 ( 7.3%)
  SNE     : 124 ( 6.9%)
  CALL    : 123 ( 6.9%)
  SE      : 120 ( 6.7%)
  RND     : 112 ( 6.2%)
  SYS     : 111 ( 6.2%)
  DRW     : 107 ( 6.0%)
  XOR     :  13 ( 0.7%)
  SUB     :   8 ( 0.4%)
  OR      :   7 ( 0.4%)
  SUBN    :   6 ( 0.3%)
  AND     :   5 ( 0.3%)
  SHR     :   2 ( 0.1%)
  SHL     :   1 ( 0.1%)
  SKNP    :   1 ( 0.1%)
  SKP     :   1 ( 0.1%)

Memory Operations: 351 (19.6%)
Arithmetic Operations: 169 (9.4%)
