
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B5989D01_I38014_C1001_f790253ef402.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 5989
Instance: 38014
Direction: ascending
Final Array: [16, 18, 24, 92, 161, 169, 210, 224]
Operations: R:4 W:0 C:58 S:2

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 128
Sort Array References:
  $262: LD I, $D12 ; Load D12 into I
  $29A: LD I, $94D ; Load 94D into I
  $29C: LD I, $783 ; Load 783 into I
  $2A0: LD I, $1AF ; Load 1AF into I
  $2AA: LD I, $D85 ; Load D85 into I
  $2C6: LD I, $DA3 ; Load DA3 into I
  $2FC: LD I, $B23 ; Load B23 into I
  $304: LD I, $1A9 ; Load 1A9 into I
  $33A: LD I, $324 ; Load 324 into I
  $358: LD I, $516 ; Load 516 into I
  $376: LD I, $879 ; Load 879 into I
  $37E: LD I, $571 ; Load 571 into I
  $390: LD I, $AB9 ; Load AB9 into I
  $392: LD I, $E4A ; Load E4A into I
  $3AA: LD I, $389 ; Load 389 into I
  $3C4: LD I, $9B3 ; Load 9B3 into I
  $3CE: LD I, $DE8 ; Load DE8 into I
  $3E6: LD I, $96D ; Load 96D into I
  $3EC: LD I, $DAD ; Load DAD into I
  $422: LD I, $2F6 ; Load 2F6 into I
  $426: LD I, $1EF ; Load 1EF into I
  $432: LD I, $2CF ; Load 2CF into I
  $454: LD I, $655 ; Load 655 into I
  $46E: LD I, $621 ; Load 621 into I
  $472: LD I, $FEE ; Load FEE into I
  $488: LD I, $8B8 ; Load 8B8 into I
  $48C: LD I, $7E4 ; Load 7E4 into I
  $4A8: LD I, $28D ; Load 28D into I
  $4DC: LD I, $CEB ; Load CEB into I
  $4FC: LD I, $7D7 ; Load 7D7 into I
  $504: LD I, $CA6 ; Load CA6 into I
  $514: LD I, $86C ; Load 86C into I
  $536: LD I, $72C ; Load 72C into I
  $540: LD I, $8A0 ; Load 8A0 into I
  $54A: LD I, $2E1 ; Load 2E1 into I
  $558: LD I, $2C1 ; Load 2C1 into I
  $56A: LD I, $1A4 ; Load 1A4 into I
  $586: LD I, $EB2 ; Load EB2 into I
  $58E: LD I, $AA8 ; Load AA8 into I
  $5C6: LD I, $D20 ; Load D20 into I
  $634: LD I, $B6E ; Load B6E into I
  $64A: LD I, $C66 ; Load C66 into I
  $658: LD I, $268 ; Load 268 into I
  $6A8: LD I, $3D0 ; Load 3D0 into I
  $6AE: LD I, $36A ; Load 36A into I
  $71C: LD I, $A20 ; Load A20 into I
  $728: LD I, $C31 ; Load C31 into I
  $738: LD I, $CD3 ; Load CD3 into I
  $760: LD I, $BB9 ; Load BB9 into I
  $764: LD I, $960 ; Load 960 into I
  $78E: LD I, $1DB ; Load 1DB into I
  $798: LD I, $304 ; Load 304 into I
  $7B8: LD I, $50F ; Load 50F into I
  $7CC: LD I, $561 ; Load 561 into I
  $7DA: LD I, $19B ; Load 19B into I
  $806: LD I, $FCB ; Load FCB into I
  $816: LD I, $F68 ; Load F68 into I
  $818: LD I, $B22 ; Load B22 into I
  $834: LD I, $913 ; Load 913 into I
  $846: LD I, $D58 ; Load D58 into I
  $84C: LD I, $52E ; Load 52E into I
  $8C6: LD I, $1F1 ; Load 1F1 into I
  $8D6: LD I, $BCF ; Load BCF into I
  $8EC: LD I, $8FC ; Load 8FC into I
  $904: LD I, $A10 ; Load A10 into I
  $926: LD I, $402 ; Load 402 into I
  $93E: LD I, $64A ; Load 64A into I
  $958: LD I, $376 ; Load 376 into I
  $972: LD I, $B7C ; Load B7C into I
  $986: LD I, $027 ; Load 027 into I
  $98A: LD I, $7A4 ; Load 7A4 into I
  $9A6: LD I, $A12 ; Load A12 into I
  $9C6: LD I, $1F9 ; Load 1F9 into I
  $9D6: LD I, $B0E ; Load B0E into I
  $9EC: LD I, $606 ; Load 606 into I
  $A2C: LD I, $42A ; Load 42A into I
  $A5C: LD I, $260 ; Load 260 into I
  $A76: LD I, $C37 ; Load C37 into I
  $A78: LD I, $CF8 ; Load CF8 into I
  $A80: LD I, $E6C ; Load E6C into I
  $A90: LD I, $CF3 ; Load CF3 into I
  $AC6: LD I, $0FB ; Load 0FB into I
  $B0E: LD I, $E26 ; Load E26 into I
  $B14: LD I, $418 ; Load 418 into I
  $B76: LD I, $A66 ; Load A66 into I
  $B80: LD I, $729 ; Load 729 into I
  $B8A: LD I, $5D6 ; Load 5D6 into I
  $BC2: LD I, $C90 ; Load C90 into I
  $BD6: LD I, $FD8 ; Load FD8 into I
  $BE0: LD I, $370 ; Load 370 into I
  $C28: LD I, $948 ; Load 948 into I
  $C62: ADD I, V8 ; I ADDRESS MANIPULATION
  $C9E: LD I, $EDA ; Load EDA into I
  $CA2: LD I, $E8B ; Load E8B into I
  $CB8: LD I, $120 ; Load 120 into I
  $CD0: LD I, $78F ; Load 78F into I
  $D68: LD I, $0E5 ; Load 0E5 into I
  $D78: LD I, $5D2 ; Load 5D2 into I
  $D7A: LD I, $E45 ; Load E45 into I
  $DD0: LD I, $BCD ; Load BCD into I
  $DD2: LD I, $04D ; Load 04D into I
  $DDC: LD I, $AC1 ; Load AC1 into I
  $DE6: LD I, $2A8 ; Load 2A8 into I
  $DEC: LD I, $652 ; Load 652 into I
  $DFE: LD I, $5FE ; Load 5FE into I
  $E06: LD I, $0EF ; Load 0EF into I
  $E28: LD I, $E9E ; Load E9E into I
  $E5A: LD I, $835 ; Load 835 into I
  $E7A: LD I, $06A ; Load 06A into I
  $E92: LD I, $861 ; Load 861 into I
  $E98: LD I, $A1C ; Load A1C into I
  $E9C: LD I, $24D ; Load 24D into I
  $EA4: LD I, $B87 ; Load B87 into I
  $EAC: LD I, $657 ; Load 657 into I
  $EB6: LD I, $051 ; Load 051 into I
  $EBA: LD I, $FAE ; Load FAE into I
  $ED0: LD I, $3F0 ; Load 3F0 into I
  $ED2: LD I, $4C9 ; Load 4C9 into I
  $F04: LD I, $5C7 ; Load 5C7 into I
  $F08: LD I, $672 ; Load 672 into I
  $F30: LD I, $B1E ; Load B1E into I
  $F54: LD I, $2CF ; Load 2CF into I
  $F7C: LD I, $181 ; Load 181 into I
  $F94: LD I, $44E ; Load 44E into I
  $FB6: LD I, $410 ; Load 410 into I
  $FBA: LD I, $AED ; Load AED into I
  $FF8: LD I, $CA0 ; Load CA0 into I
  $FFE: LD I, $3AF ; Load 3AF into I

CONTROL FLOW ANALYSIS:
Jumps: 232
Calls: 110
Branches: 229
Loops: 128
Loop Structures:
  $21E -> $0DC (backward jump)
  $246 -> $1F7 (backward jump)
  $300 -> $012 (backward jump)
  $314 -> $295 (backward jump)
  $338 -> $2CC (backward jump)
  $364 -> $33B (backward jump)
  $3DE -> $349 (backward jump)
  $414 -> $0AE (backward jump)
  $41E -> $22A (backward jump)
  $47A -> $470 (backward jump)
  $4D0 -> $13B (backward jump)
  $4EE -> $190 (backward jump)
  $530 -> $4EE (backward jump)
  $5C2 -> $459 (backward jump)
  $5F4 -> $079 (backward jump)
  $5FE -> $3A4 (backward jump)
  $61A -> $319 (backward jump)
  $66C -> $63E (backward jump)
  $68E -> $046 (backward jump)
  $6AC -> $139 (backward jump)
  $6B8 -> $04F (backward jump)
  $6D6 -> $60C (backward jump)
  $6E4 -> $6C1 (backward jump)
  $6EA -> $172 (backward jump)
  $71E -> $697 (backward jump)
  $720 -> $07E (backward jump)
  $732 -> $3AD (backward jump)
  $752 -> $3D9 (backward jump)
  $780 -> $659 (backward jump)
  $7AC -> $235 (backward jump)
  $7AE -> $029 (backward jump)
  $7E4 -> $30D (backward jump)
  $7E8 -> $0E5 (backward jump)
  $7FC -> $207 (backward jump)
  $864 -> $146 (backward jump)
  $86A -> $3FF (backward jump)
  $888 -> $3A1 (backward jump)
  $8E6 -> $2FD (backward jump)
  $930 -> $90E (backward jump)
  $952 -> $8FF (backward jump)
  $95E -> $040 (backward jump)
  $97E -> $57C (backward jump)
  $990 -> $20B (backward jump)
  $9DC -> $717 (backward jump)
  $9EA -> $95B (backward jump)
  $A10 -> $A0F (backward jump)
  $A1E -> $5B9 (backward jump)
  $A20 -> $03E (backward jump)
  $A22 -> $14A (backward jump)
  $A3E -> $9ED (backward jump)
  $A4C -> $1CD (backward jump)
  $A52 -> $0E4 (backward jump)
  $A6A -> $469 (backward jump)
  $A84 -> $421 (backward jump)
  $A94 -> $7DC (backward jump)
  $A96 -> $A6B (backward jump)
  $AA0 -> $1E9 (backward jump)
  $AA8 -> $940 (backward jump)
  $AB0 -> $2BE (backward jump)
  $AD0 -> $4C4 (backward jump)
  $AEE -> $95B (backward jump)
  $B06 -> $6CF (backward jump)
  $B24 -> $0C0 (backward jump)
  $B3A -> $1FE (backward jump)
  $B5C -> $4AE (backward jump)
  $B7E -> $A57 (backward jump)
  $B90 -> $02B (backward jump)
  $B92 -> $99E (backward jump)
  $B9A -> $13A (backward jump)
  $BB0 -> $0AD (backward jump)
  $BB8 -> $61A (backward jump)
  $BF4 -> $08E (backward jump)
  $BFA -> $533 (backward jump)
  $C08 -> $015 (backward jump)
  $C1A -> $079 (backward jump)
  $C1E -> $B8A (backward jump)
  $C34 -> $849 (backward jump)
  $C42 -> $3FA (backward jump)
  $C4E -> $AEC (backward jump)
  $C5C -> $C49 (backward jump)
  $C80 -> $95B (backward jump)
  $C90 -> $5F8 (backward jump)
  $CA4 -> $64B (backward jump)
  $CC2 -> $7BE (backward jump)
  $CCA -> $B86 (backward jump)
  $CDA -> $AEE (backward jump)
  $CDE -> $CCF (backward jump)
  $CF4 -> $A83 (backward jump)
  $CF6 -> $417 (backward jump)
  $CFE -> $270 (backward jump)
  $D00 -> $658 (backward jump)
  $D1C -> $918 (backward jump)
  $D2A -> $72D (backward jump)
  $D3C -> $4A8 (backward jump)
  $D84 -> $D0B (backward jump)
  $D88 -> $0F0 (backward jump)
  $DA2 -> $5D7 (backward jump)
  $DA8 -> $5AC (backward jump)
  $DE0 -> $41A (backward jump)
  $DF6 -> $4E6 (backward jump)
  $E14 -> $13C (backward jump)
  $E54 -> $8FC (backward jump)
  $E56 -> $0EE (backward jump)
  $E5E -> $3B0 (backward jump)
  $E86 -> $053 (backward jump)
  $EB4 -> $088 (backward jump)
  $EC0 -> $B0C (backward jump)
  $EC6 -> $55D (backward jump)
  $EE2 -> $621 (backward jump)
  $EF8 -> $18E (backward jump)
  $F00 -> $543 (backward jump)
  $F10 -> $224 (backward jump)
  $F14 -> $321 (backward jump)
  $F20 -> $D4D (backward jump)
  $F34 -> $7FE (backward jump)
  $F62 -> $6C9 (backward jump)
  $F66 -> $4EE (backward jump)
  $F72 -> $50B (backward jump)
  $F88 -> $4C3 (backward jump)
  $F96 -> $EF3 (backward jump)
  $F9A -> $220 (backward jump)
  $F9C -> $6F8 (backward jump)
  $FAC -> $E6D (backward jump)
  $FAE -> $8FF (backward jump)
  $FC4 -> $EDF (backward jump)
  $FD8 -> $699 (backward jump)
  $FF2 -> $063 (backward jump)
  $FFC -> $A49 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $E2DF   UNKNOWN  $E2DF           ; Unknown Exxx instruction
$202    $E62F   UNKNOWN  $E62F           ; Unknown Exxx instruction
$204    $124A   JP       $24A            ; Jump to 24A
$206    $2BFB   CALL     $BFB            ; Call subroutine at BFB
$208    $8406   SHR      V4              ; V4 >>= 1, VF = LSB
$20A    $BE08   JP       V0, $E08        ; Jump to V0 + E08
$20C    $C503   RND      V5, #03         ; V5 = random & 03
$20E    $F7D6   UNKNOWN  F7D6            ; Unknown Fxxx instruction
$210    $4226   SNE      V2, #26         ; Skip if V2 != 38
$212    $D96F   DRW      V9, V6, #F      ; Draw 15-byte sprite at V9, V6
$214    $26FB   CALL     $6FB            ; Call subroutine at 6FB
$216    $1A24   JP       $A24            ; Jump to A24
$218    $957B   UNKNOWN  $957B           ; Unknown 9xxx instruction
$21A    $09FF   SYS      $9FF            ; System call to 9FF
$21C    $1F34   JP       $F34            ; Jump to F34
$21E    $10DC   JP       $0DC            ; Jump to 0DC
$220    $6997   LD       V9, #97         ; Load 151 into V9
$222    $07FF   SYS      $7FF            ; System call to 7FF
$224    $CB51   RND      VB, #51         ; VB = random & 51
$226    $8C64   ADD      VC, V6          ; VC += V6, VF = carry
$228    $4A8E   SNE      VA, #8E         ; Skip if VA != 142
$22A    $2D4F   CALL     $D4F            ; Call subroutine at D4F
$22C    $C5F9   RND      V5, #F9         ; V5 = random & F9
$22E    $1736   JP       $736            ; Jump to 736
$230    $2C14   CALL     $C14            ; Call subroutine at C14
$232    $6DD5   LD       VD, #D5         ; Load 213 into VD
$234    $B308   JP       V0, $308        ; Jump to V0 + 308
$236    $9ED5   UNKNOWN  $9ED5           ; Unknown 9xxx instruction
$238    $E8F0   UNKNOWN  $E8F0           ; Unknown Exxx instruction
$23A    $076C   SYS      $76C            ; System call to 76C
$23C    $15FA   JP       $5FA            ; Jump to 5FA
$23E    $12F2   JP       $2F2            ; Jump to 2F2
$240    $DCDB   DRW      VC, VD, #B      ; Draw 11-byte sprite at VC, VD
$242    $E390   UNKNOWN  $E390           ; Unknown Exxx instruction
$244    $2E20   CALL     $E20            ; Call subroutine at E20
$246    $11F7   JP       $1F7            ; Jump to 1F7
$248    $0EF4   SYS      $EF4            ; System call to EF4
$24A    $247F   CALL     $47F            ; Call subroutine at 47F
$24C    $2C46   CALL     $C46            ; Call subroutine at C46
$24E    $6D50   LD       VD, #50         ; Load 80 into VD
$250    $3D0D   SE       VD, #0D         ; Skip if VD == 13
$252    $73F0   ADD      V3, #F0         ; Add 240 to V3
$254    $4C68   SNE      VC, #68         ; Skip if VC != 104
$256    $EFCC   UNKNOWN  $EFCC           ; Unknown Exxx instruction
$258    $4D01   SNE      VD, #01         ; Skip if VD != 1
$25A    $F8CF   UNKNOWN  F8CF            ; Unknown Fxxx instruction
$25C    $24F3   CALL     $4F3            ; Call subroutine at 4F3
$25E    $652B   LD       V5, #2B         ; Load 43 into V5
$260    $71D6   ADD      V1, #D6         ; Add 214 to V1
$262    $AD12   LD       I, $D12         ; Load D12 into I
$264    $E0ED   UNKNOWN  $E0ED           ; Unknown Exxx instruction
$266    $50DD   UNKNOWN  $50DD           ; Unknown 5xxx instruction
$268    $7990   ADD      V9, #90         ; Add 144 to V9
$26A    $5204   UNKNOWN  $5204           ; Unknown 5xxx instruction
$26C    $8821   OR       V8, V2          ; V8 |= V2
$26E    $F4B8   UNKNOWN  F4B8            ; Unknown Fxxx instruction
$270    $908E   UNKNOWN  $908E           ; Unknown 9xxx instruction
$272    $CFFC   RND      VF, #FC         ; VF = random & FC
$274    $8A85   SUB      VA, V8          ; VA -= V8, VF = !borrow
$276    $6A10   LD       VA, #10         ; Load 16 into VA
$278    $316B   SE       V1, #6B         ; Skip if V1 == 107
$27A    $C1B4   RND      V1, #B4         ; V1 = random & B4
$27C    $86FF   UNKNOWN  86FF            ; Unknown 8xxx instruction
$27E    $8414   ADD      V4, V1          ; V4 += V1, VF = carry
$280    $71C7   ADD      V1, #C7         ; Add 199 to V1
$282    $8820   LD       V8, V2          ; V8 = V2
$284    $6BEC   LD       VB, #EC         ; Load 236 into VB
$286    $B296   JP       V0, $296        ; Jump to V0 + 296
$288    $65FC   LD       V5, #FC         ; Load 252 into V5
$28A    $CD5B   RND      VD, #5B         ; VD = random & 5B
$28C    $E827   UNKNOWN  $E827           ; Unknown Exxx instruction
$28E    $5D89   UNKNOWN  $5D89           ; Unknown 5xxx instruction
$290    $92CF   UNKNOWN  $92CF           ; Unknown 9xxx instruction
$292    $712F   ADD      V1, #2F         ; Add 47 to V1
$294    $C1F8   RND      V1, #F8         ; V1 = random & F8
$296    $1494   JP       $494            ; Jump to 494
$298    $9EC5   UNKNOWN  $9EC5           ; Unknown 9xxx instruction
$29A    $A94D   LD       I, $94D         ; Load 94D into I
$29C    $A783   LD       I, $783         ; Load 783 into I
$29E    $933C   UNKNOWN  $933C           ; Unknown 9xxx instruction
$2A0    $A1AF   LD       I, $1AF         ; Load 1AF into I
$2A2    $EE03   UNKNOWN  $EE03           ; Unknown Exxx instruction
$2A4    $C645   RND      V6, #45         ; V6 = random & 45
$2A6    $FEF7   UNKNOWN  FEF7            ; Unknown Fxxx instruction
$2A8    $5FF6   UNKNOWN  $5FF6           ; Unknown 5xxx instruction
$2AA    $AD85   LD       I, $D85         ; Load D85 into I
$2AC    $2CFD   CALL     $CFD            ; Call subroutine at CFD
$2AE    $26D1   CALL     $6D1            ; Call subroutine at 6D1
$2B0    $ED2B   UNKNOWN  $ED2B           ; Unknown Exxx instruction
$2B2    $2FB2   CALL     $FB2            ; Call subroutine at FB2
$2B4    $5856   UNKNOWN  $5856           ; Unknown 5xxx instruction
$2B6    $FD05   UNKNOWN  FD05            ; Unknown Fxxx instruction
$2B8    $4542   SNE      V5, #42         ; Skip if V5 != 66
$2BA    $19AD   JP       $9AD            ; Jump to 9AD
$2BC    $05AA   SYS      $5AA            ; System call to 5AA
$2BE    $CD93   RND      VD, #93         ; VD = random & 93
$2C0    $7399   ADD      V3, #99         ; Add 153 to V3
$2C2    $95E0   SNE      V5, VE          ; Skip if V5 != VE
$2C4    $2206   CALL     $206            ; Call subroutine at 206
$2C6    $ADA3   LD       I, $DA3         ; Load DA3 into I
$2C8    $4085   SNE      V0, #85         ; Skip if V0 != 133
$2CA    $6A6F   LD       VA, #6F         ; Load 111 into VA
$2CC    $647E   LD       V4, #7E         ; Load 126 into V4
$2CE    $6C1E   LD       VC, #1E         ; Load 30 into VC
$2D0    $E47E   UNKNOWN  $E47E           ; Unknown Exxx instruction
$2D2    $25E2   CALL     $5E2            ; Call subroutine at 5E2
$2D4    $E53D   UNKNOWN  $E53D           ; Unknown Exxx instruction
$2D6    $7BD4   ADD      VB, #D4         ; Add 212 to VB
$2D8    $3DE4   SE       VD, #E4         ; Skip if VD == 228
$2DA    $4245   SNE      V2, #45         ; Skip if V2 != 69
$2DC    $578D   UNKNOWN  $578D           ; Unknown 5xxx instruction
$2DE    $4E12   SNE      VE, #12         ; Skip if VE != 18
$2E0    $3D73   SE       VD, #73         ; Skip if VD == 115
$2E2    $B885   JP       V0, $885        ; Jump to V0 + 885
$2E4    $4FFC   SNE      VF, #FC         ; Skip if VF != 252
$2E6    $707A   ADD      V0, #7A         ; Add 122 to V0
$2E8    $5214   UNKNOWN  $5214           ; Unknown 5xxx instruction
$2EA    $4469   SNE      V4, #69         ; Skip if V4 != 105
$2EC    $F97E   UNKNOWN  F97E            ; Unknown Fxxx instruction
$2EE    $C970   RND      V9, #70         ; V9 = random & 70
$2F0    $8967   SUBN     V9, V6          ; V9 = V6 - V9, VF = !borrow
$2F2    $F759   UNKNOWN  F759            ; Unknown Fxxx instruction
$2F4    $C278   RND      V2, #78         ; V2 = random & 78
$2F6    $F212   UNKNOWN  F212            ; Unknown Fxxx instruction
$2F8    $FD4E   UNKNOWN  FD4E            ; Unknown Fxxx instruction
$2FA    $3334   SE       V3, #34         ; Skip if V3 == 52
$2FC    $AB23   LD       I, $B23         ; Load B23 into I
$2FE    $6C8D   LD       VC, #8D         ; Load 141 into VC
$300    $1012   JP       $012            ; Jump to 012
$302    $185C   JP       $85C            ; Jump to 85C
$304    $A1A9   LD       I, $1A9         ; Load 1A9 into I
$306    $D2E0   DRW      V2, VE, #0      ; Draw 0-byte sprite at V2, VE
$308    $4C2E   SNE      VC, #2E         ; Skip if VC != 46
$30A    $0DED   SYS      $DED            ; System call to DED
$30C    $998B   UNKNOWN  $998B           ; Unknown 9xxx instruction
$30E    $8E1C   UNKNOWN  8E1C            ; Unknown 8xxx instruction
$310    $1886   JP       $886            ; Jump to 886
$312    $9545   UNKNOWN  $9545           ; Unknown 9xxx instruction
$314    $1295   JP       $295            ; Jump to 295
$316    $0045   SYS      $045            ; System call to 045
$318    $C888   RND      V8, #88         ; V8 = random & 88
$31A    $6E0D   LD       VE, #0D         ; Load 13 into VE
$31C    $C67A   RND      V6, #7A         ; V6 = random & 7A
$31E    $2697   CALL     $697            ; Call subroutine at 697
$320    $7212   ADD      V2, #12         ; Add 18 to V2
$322    $1676   JP       $676            ; Jump to 676
$324    $7FEA   ADD      VF, #EA         ; Add 234 to VF
$326    $DEEA   DRW      VE, VE, #A      ; Draw 10-byte sprite at VE, VE
$328    $4C91   SNE      VC, #91         ; Skip if VC != 145
$32A    $0180   SYS      $180            ; System call to 180
$32C    $1A9A   JP       $A9A            ; Jump to A9A
$32E    $1594   JP       $594            ; Jump to 594
$330    $E7E9   UNKNOWN  $E7E9           ; Unknown Exxx instruction
$332    $FD0B   UNKNOWN  FD0B            ; Unknown Fxxx instruction
$334    $5C89   UNKNOWN  $5C89           ; Unknown 5xxx instruction
$336    $C7A5   RND      V7, #A5         ; V7 = random & A5
$338    $B2CC   JP       V0, $2CC        ; Jump to V0 + 2CC
$33A    $A324   LD       I, $324         ; Load 324 into I
$33C    $F4BD   UNKNOWN  F4BD            ; Unknown Fxxx instruction
$33E    $EC31   UNKNOWN  $EC31           ; Unknown Exxx instruction
$340    $31CB   SE       V1, #CB         ; Skip if V1 == 203
$342    $50A8   UNKNOWN  $50A8           ; Unknown 5xxx instruction
$344    $C446   RND      V4, #46         ; V4 = random & 46
$346    $97AB   UNKNOWN  $97AB           ; Unknown 9xxx instruction
$348    $79D4   ADD      V9, #D4         ; Add 212 to V9
$34A    $8D15   SUB      VD, V1          ; VD -= V1, VF = !borrow
$34C    $E709   UNKNOWN  $E709           ; Unknown Exxx instruction
$34E    $E38D   UNKNOWN  $E38D           ; Unknown Exxx instruction
$350    $8E68   UNKNOWN  8E68            ; Unknown 8xxx instruction
$352    $78E3   ADD      V8, #E3         ; Add 227 to V8
$354    $0D0B   SYS      $D0B            ; System call to D0B
$356    $E18A   UNKNOWN  $E18A           ; Unknown Exxx instruction
$358    $A516   LD       I, $516         ; Load 516 into I
$35A    $1B5C   JP       $B5C            ; Jump to B5C
$35C    $8F23   XOR      VF, V2          ; VF ^= V2
$35E    $FB5E   UNKNOWN  FB5E            ; Unknown Fxxx instruction
$360    $6B1B   LD       VB, #1B         ; Load 27 into VB
$362    $2BCB   CALL     $BCB            ; Call subroutine at BCB
$364    $B33B   JP       V0, $33B        ; Jump to V0 + 33B
$366    $38E7   SE       V8, #E7         ; Skip if V8 == 231
$368    $83DF   UNKNOWN  83DF            ; Unknown 8xxx instruction
$36A    $D97C   DRW      V9, V7, #C      ; Draw 12-byte sprite at V9, V7
$36C    $1D5D   JP       $D5D            ; Jump to D5D
$36E    $F59B   UNKNOWN  F59B            ; Unknown Fxxx instruction
$370    $B4CF   JP       V0, $4CF        ; Jump to V0 + 4CF
$372    $BBFB   JP       V0, $BFB        ; Jump to V0 + BFB
$374    $0B75   SYS      $B75            ; System call to B75
$376    $A879   LD       I, $879         ; Load 879 into I
$378    $592C   UNKNOWN  $592C           ; Unknown 5xxx instruction
$37A    $C7A1   RND      V7, #A1         ; V7 = random & A1
$37C    $4E8C   SNE      VE, #8C         ; Skip if VE != 140
$37E    $A571   LD       I, $571         ; Load 571 into I
$380    $E8D2   UNKNOWN  $E8D2           ; Unknown Exxx instruction
$382    $303A   SE       V0, #3A         ; Skip if V0 == 58
$384    $CACD   RND      VA, #CD         ; VA = random & CD
$386    $5084   UNKNOWN  $5084           ; Unknown 5xxx instruction
$388    $F0D1   UNKNOWN  F0D1            ; Unknown Fxxx instruction
$38A    $CA28   RND      VA, #28         ; VA = random & 28
$38C    $F6C3   UNKNOWN  F6C3            ; Unknown Fxxx instruction
$38E    $56EF   UNKNOWN  $56EF           ; Unknown 5xxx instruction
$390    $AAB9   LD       I, $AB9         ; Load AB9 into I
$392    $AE4A   LD       I, $E4A         ; Load E4A into I
$394    $4F1F   SNE      VF, #1F         ; Skip if VF != 31
$396    $E187   UNKNOWN  $E187           ; Unknown Exxx instruction
$398    $E527   UNKNOWN  $E527           ; Unknown Exxx instruction
$39A    $4192   SNE      V1, #92         ; Skip if V1 != 146
$39C    $CD85   RND      VD, #85         ; VD = random & 85
$39E    $0A88   SYS      $A88            ; System call to A88
$3A0    $020E   SYS      $20E            ; System call to 20E
$3A2    $408B   SNE      V0, #8B         ; Skip if V0 != 139
$3A4    $6608   LD       V6, #08         ; Load 8 into V6
$3A6    $074F   SYS      $74F            ; System call to 74F
$3A8    $CB6F   RND      VB, #6F         ; VB = random & 6F
$3AA    $A389   LD       I, $389         ; Load 389 into I
$3AC    $F9C1   UNKNOWN  F9C1            ; Unknown Fxxx instruction
$3AE    $25D8   CALL     $5D8            ; Call subroutine at 5D8
$3B0    $2417   CALL     $417            ; Call subroutine at 417
$3B2    $866D   UNKNOWN  866D            ; Unknown 8xxx instruction
$3B4    $407F   SNE      V0, #7F         ; Skip if V0 != 127
$3B6    $E853   UNKNOWN  $E853           ; Unknown Exxx instruction
$3B8    $C61C   RND      V6, #1C         ; V6 = random & 1C
$3BA    $0607   SYS      $607            ; System call to 607
$3BC    $CAB1   RND      VA, #B1         ; VA = random & B1
$3BE    $49F0   SNE      V9, #F0         ; Skip if V9 != 240
$3C0    $4F6E   SNE      VF, #6E         ; Skip if VF != 110
$3C2    $5BEE   UNKNOWN  $5BEE           ; Unknown 5xxx instruction
$3C4    $A9B3   LD       I, $9B3         ; Load 9B3 into I
$3C6    $D2F0   DRW      V2, VF, #0      ; Draw 0-byte sprite at V2, VF
$3C8    $F91F   UNKNOWN  F91F            ; Unknown Fxxx instruction
$3CA    $3220   SE       V2, #20         ; Skip if V2 == 32
$3CC    $F280   UNKNOWN  F280            ; Unknown Fxxx instruction
$3CE    $ADE8   LD       I, $DE8         ; Load DE8 into I
$3D0    $78F1   ADD      V8, #F1         ; Add 241 to V8
$3D2    $4F9A   SNE      VF, #9A         ; Skip if VF != 154
$3D4    $CDC4   RND      VD, #C4         ; VD = random & C4
$3D6    $F80A   LD       V8, K           ; Wait for key press, store in V8
$3D8    $4BCC   SNE      VB, #CC         ; Skip if VB != 204
$3DA    $1F35   JP       $F35            ; Jump to F35
$3DC    $056F   SYS      $56F            ; System call to 56F
$3DE    $1349   JP       $349            ; Jump to 349
$3E0    $349E   SE       V4, #9E         ; Skip if V4 == 158
$3E2    $3E06   SE       VE, #06         ; Skip if VE == 6
$3E4    $5141   UNKNOWN  $5141           ; Unknown 5xxx instruction
$3E6    $A96D   LD       I, $96D         ; Load 96D into I
$3E8    $6991   LD       V9, #91         ; Load 145 into V9
$3EA    $EC01   UNKNOWN  $EC01           ; Unknown Exxx instruction
$3EC    $ADAD   LD       I, $DAD         ; Load DAD into I
$3EE    $E1EF   UNKNOWN  $E1EF           ; Unknown Exxx instruction
$3F0    $D1EC   DRW      V1, VE, #C      ; Draw 12-byte sprite at V1, VE
$3F2    $3542   SE       V5, #42         ; Skip if V5 == 66
$3F4    $BEA6   JP       V0, $EA6        ; Jump to V0 + EA6
$3F6    $3008   SE       V0, #08         ; Skip if V0 == 8
$3F8    $23A6   CALL     $3A6            ; Call subroutine at 3A6
$3FA    $79B6   ADD      V9, #B6         ; Add 182 to V9
$3FC    $D9E3   DRW      V9, VE, #3      ; Draw 3-byte sprite at V9, VE
$3FE    $2457   CALL     $457            ; Call subroutine at 457
$400    $1B75   JP       $B75            ; Jump to B75
$402    $37D5   SE       V7, #D5         ; Skip if V7 == 213
$404    $7572   ADD      V5, #72         ; Add 114 to V5
$406    $03BF   SYS      $3BF            ; System call to 3BF
$408    $722F   ADD      V2, #2F         ; Add 47 to V2
$40A    $44E2   SNE      V4, #E2         ; Skip if V4 != 226
$40C    $6861   LD       V8, #61         ; Load 97 into V8
$40E    $C1E5   RND      V1, #E5         ; V1 = random & E5
$410    $5183   UNKNOWN  $5183           ; Unknown 5xxx instruction
$412    $72E6   ADD      V2, #E6         ; Add 230 to V2
$414    $B0AE   JP       V0, $0AE        ; Jump to V0 + 0AE
$416    $595A   UNKNOWN  $595A           ; Unknown 5xxx instruction
$418    $EAE4   UNKNOWN  $EAE4           ; Unknown Exxx instruction
$41A    $64A9   LD       V4, #A9         ; Load 169 into V4
$41C    $2F09   CALL     $F09            ; Call subroutine at F09
$41E    $B22A   JP       V0, $22A        ; Jump to V0 + 22A
$420    $5540   SE       V5, V4          ; Skip if V5 == V4
$422    $A2F6   LD       I, $2F6         ; Load 2F6 into I
$424    $9C26   UNKNOWN  $9C26           ; Unknown 9xxx instruction
$426    $A1EF   LD       I, $1EF         ; Load 1EF into I
$428    $E3DC   UNKNOWN  $E3DC           ; Unknown Exxx instruction
$42A    $D752   DRW      V7, V5, #2      ; Draw 2-byte sprite at V7, V5
$42C    $4C40   SNE      VC, #40         ; Skip if VC != 64
$42E    $8925   SUB      V9, V2          ; V9 -= V2, VF = !borrow
$430    $6307   LD       V3, #07         ; Load 7 into V3
$432    $A2CF   LD       I, $2CF         ; Load 2CF into I
$434    $E88C   UNKNOWN  $E88C           ; Unknown Exxx instruction
$436    $D9E6   DRW      V9, VE, #6      ; Draw 6-byte sprite at V9, VE
$438    $49EF   SNE      V9, #EF         ; Skip if V9 != 239
$43A    $6AA7   LD       VA, #A7         ; Load 167 into VA
$43C    $BCCB   JP       V0, $CCB        ; Jump to V0 + CCB
$43E    $96DA   UNKNOWN  $96DA           ; Unknown 9xxx instruction
$440    $C461   RND      V4, #61         ; V4 = random & 61
$442    $9750   SNE      V7, V5          ; Skip if V7 != V5
$444    $7FE1   ADD      VF, #E1         ; Add 225 to VF
$446    $0F5F   SYS      $F5F            ; System call to F5F
$448    $432C   SNE      V3, #2C         ; Skip if V3 != 44
$44A    $EE4E   UNKNOWN  $EE4E           ; Unknown Exxx instruction
$44C    $D3A2   DRW      V3, VA, #2      ; Draw 2-byte sprite at V3, VA
$44E    $873E   SHL      V7              ; V7 <<= 1, VF = MSB
$450    $E07C   UNKNOWN  $E07C           ; Unknown Exxx instruction
$452    $0265   SYS      $265            ; System call to 265
$454    $A655   LD       I, $655         ; Load 655 into I
$456    $25C1   CALL     $5C1            ; Call subroutine at 5C1
$458    $D452   DRW      V4, V5, #2      ; Draw 2-byte sprite at V4, V5
$45A    $9DFD   UNKNOWN  $9DFD           ; Unknown 9xxx instruction
$45C    $6D31   LD       VD, #31         ; Load 49 into VD
$45E    $C53B   RND      V5, #3B         ; V5 = random & 3B
$460    $4550   SNE      V5, #50         ; Skip if V5 != 80
$462    $9C5B   UNKNOWN  $9C5B           ; Unknown 9xxx instruction
$464    $1CD3   JP       $CD3            ; Jump to CD3
$466    $6A10   LD       VA, #10         ; Load 16 into VA
$468    $18CE   JP       $8CE            ; Jump to 8CE
$46A    $62BD   LD       V2, #BD         ; Load 189 into V2
$46C    $412F   SNE      V1, #2F         ; Skip if V1 != 47
$46E    $A621   LD       I, $621         ; Load 621 into I
$470    $C003   RND      V0, #03         ; V0 = random & 03
$472    $AFEE   LD       I, $FEE         ; Load FEE into I
$474    $0C3D   SYS      $C3D            ; System call to C3D
$476    $E279   UNKNOWN  $E279           ; Unknown Exxx instruction
$478    $E561   UNKNOWN  $E561           ; Unknown Exxx instruction
$47A    $B470   JP       V0, $470        ; Jump to V0 + 470
$47C    $DD7A   DRW      VD, V7, #A      ; Draw 10-byte sprite at VD, V7
$47E    $DB3C   DRW      VB, V3, #C      ; Draw 12-byte sprite at VB, V3
$480    $694E   LD       V9, #4E         ; Load 78 into V9
$482    $23AD   CALL     $3AD            ; Call subroutine at 3AD
$484    $59D6   UNKNOWN  $59D6           ; Unknown 5xxx instruction
$486    $DAB6   DRW      VA, VB, #6      ; Draw 6-byte sprite at VA, VB
$488    $A8B8   LD       I, $8B8         ; Load 8B8 into I
$48A    $4239   SNE      V2, #39         ; Skip if V2 != 57
$48C    $A7E4   LD       I, $7E4         ; Load 7E4 into I
$48E    $E0B1   UNKNOWN  $E0B1           ; Unknown Exxx instruction
$490    $5C11   UNKNOWN  $5C11           ; Unknown 5xxx instruction
$492    $E348   UNKNOWN  $E348           ; Unknown Exxx instruction
$494    $3935   SE       V9, #35         ; Skip if V9 == 53
$496    $15CC   JP       $5CC            ; Jump to 5CC
$498    $FC4C   UNKNOWN  FC4C            ; Unknown Fxxx instruction
$49A    $6AF5   LD       VA, #F5         ; Load 245 into VA
$49C    $DDA7   DRW      VD, VA, #7      ; Draw 7-byte sprite at VD, VA
$49E    $39E2   SE       V9, #E2         ; Skip if V9 == 226
$4A0    $CE7C   RND      VE, #7C         ; VE = random & 7C
$4A2    $C3EE   RND      V3, #EE         ; V3 = random & EE
$4A4    $29B3   CALL     $9B3            ; Call subroutine at 9B3
$4A6    $0CAC   SYS      $CAC            ; System call to CAC
$4A8    $A28D   LD       I, $28D         ; Load 28D into I
$4AA    $B859   JP       V0, $859        ; Jump to V0 + 859
$4AC    $7248   ADD      V2, #48         ; Add 72 to V2
$4AE    $FDE1   UNKNOWN  FDE1            ; Unknown Fxxx instruction
$4B0    $9603   UNKNOWN  $9603           ; Unknown 9xxx instruction
$4B2    $565D   UNKNOWN  $565D           ; Unknown 5xxx instruction
$4B4    $3308   SE       V3, #08         ; Skip if V3 == 8
$4B6    $61D0   LD       V1, #D0         ; Load 208 into V1
$4B8    $9676   UNKNOWN  $9676           ; Unknown 9xxx instruction
$4BA    $5E1D   UNKNOWN  $5E1D           ; Unknown 5xxx instruction
$4BC    $7FC1   ADD      VF, #C1         ; Add 193 to VF
$4BE    $19E5   JP       $9E5            ; Jump to 9E5
$4C0    $64D7   LD       V4, #D7         ; Load 215 into V4
$4C2    $CFB4   RND      VF, #B4         ; VF = random & B4
$4C4    $6D67   LD       VD, #67         ; Load 103 into VD
$4C6    $358D   SE       V5, #8D         ; Skip if V5 == 141
$4C8    $0A12   SYS      $A12            ; System call to A12
$4CA    $D4AA   DRW      V4, VA, #A      ; Draw 10-byte sprite at V4, VA
$4CC    $ED0A   UNKNOWN  $ED0A           ; Unknown Exxx instruction
$4CE    $097C   SYS      $97C            ; System call to 97C
$4D0    $113B   JP       $13B            ; Jump to 13B
$4D2    $19E8   JP       $9E8            ; Jump to 9E8
$4D4    $35C3   SE       V5, #C3         ; Skip if V5 == 195
$4D6    $DC72   DRW      VC, V7, #2      ; Draw 2-byte sprite at VC, V7
$4D8    $9E4C   UNKNOWN  $9E4C           ; Unknown 9xxx instruction
$4DA    $4464   SNE      V4, #64         ; Skip if V4 != 100
$4DC    $ACEB   LD       I, $CEB         ; Load CEB into I
$4DE    $C915   RND      V9, #15         ; V9 = random & 15
$4E0    $CD52   RND      VD, #52         ; VD = random & 52
$4E2    $7293   ADD      V2, #93         ; Add 147 to V2
$4E4    $47CA   SNE      V7, #CA         ; Skip if V7 != 202
$4E6    $4EB3   SNE      VE, #B3         ; Skip if VE != 179
$4E8    $3297   SE       V2, #97         ; Skip if V2 == 151
$4EA    $CD55   RND      VD, #55         ; VD = random & 55
$4EC    $C790   RND      V7, #90         ; V7 = random & 90
$4EE    $B190   JP       V0, $190        ; Jump to V0 + 190
$4F0    $C0BC   RND      V0, #BC         ; V0 = random & BC
$4F2    $79E4   ADD      V9, #E4         ; Add 228 to V9
$4F4    $2C7D   CALL     $C7D            ; Call subroutine at C7D
$4F6    $D3C5   DRW      V3, VC, #5      ; Draw 5-byte sprite at V3, VC
$4F8    $56D0   SE       V6, VD          ; Skip if V6 == VD
$4FA    $6F5D   LD       VF, #5D         ; Load 93 into VF
$4FC    $A7D7   LD       I, $7D7         ; Load 7D7 into I
$4FE    $2945   CALL     $945            ; Call subroutine at 945
$500    $6FC6   LD       VF, #C6         ; Load 198 into VF
$502    $D248   DRW      V2, V4, #8      ; Draw 8-byte sprite at V2, V4
$504    $ACA6   LD       I, $CA6         ; Load CA6 into I
$506    $9CD6   UNKNOWN  $9CD6           ; Unknown 9xxx instruction
$508    $088E   SYS      $88E            ; System call to 88E
$50A    $3BD9   SE       VB, #D9         ; Skip if VB == 217
$50C    $7C4B   ADD      VC, #4B         ; Add 75 to VC
$50E    $DD7D   DRW      VD, V7, #D      ; Draw 13-byte sprite at VD, V7
$510    $1A0D   JP       $A0D            ; Jump to A0D
$512    $715A   ADD      V1, #5A         ; Add 90 to V1
$514    $A86C   LD       I, $86C         ; Load 86C into I
$516    $4D7A   SNE      VD, #7A         ; Skip if VD != 122
$518    $47DC   SNE      V7, #DC         ; Skip if V7 != 220
$51A    $430D   SNE      V3, #0D         ; Skip if V3 != 13
$51C    $4B00   SNE      VB, #00         ; Skip if VB != 0
$51E    $2D2A   CALL     $D2A            ; Call subroutine at D2A
$520    $28E7   CALL     $8E7            ; Call subroutine at 8E7
$522    $3644   SE       V6, #44         ; Skip if V6 == 68
$524    $7D4B   ADD      VD, #4B         ; Add 75 to VD
$526    $07E4   SYS      $7E4            ; System call to 7E4
$528    $C576   RND      V5, #76         ; V5 = random & 76
$52A    $1B7B   JP       $B7B            ; Jump to B7B
$52C    $4453   SNE      V4, #53         ; Skip if V4 != 83
$52E    $199D   JP       $99D            ; Jump to 99D
$530    $14EE   JP       $4EE            ; Jump to 4EE
$532    $8CC4   ADD      VC, VC          ; VC += VC, VF = carry
$534    $5FAC   UNKNOWN  $5FAC           ; Unknown 5xxx instruction
$536    $A72C   LD       I, $72C         ; Load 72C into I
$538    $69FD   LD       V9, #FD         ; Load 253 into V9
$53A    $8304   ADD      V3, V0          ; V3 += V0, VF = carry
$53C    $20E2   CALL     $0E2            ; Call subroutine at 0E2
$53E    $5DFC   UNKNOWN  $5DFC           ; Unknown 5xxx instruction
$540    $A8A0   LD       I, $8A0         ; Load 8A0 into I
$542    $C03F   RND      V0, #3F         ; V0 = random & 3F
$544    $E067   UNKNOWN  $E067           ; Unknown Exxx instruction
$546    $15CE   JP       $5CE            ; Jump to 5CE
$548    $C226   RND      V2, #26         ; V2 = random & 26
$54A    $A2E1   LD       I, $2E1         ; Load 2E1 into I
$54C    $3A0B   SE       VA, #0B         ; Skip if VA == 11
$54E    $179E   JP       $79E            ; Jump to 79E
$550    $3907   SE       V9, #07         ; Skip if V9 == 7
$552    $B6D2   JP       V0, $6D2        ; Jump to V0 + 6D2
$554    $F800   UNKNOWN  F800            ; Unknown Fxxx instruction
$556    $57B2   UNKNOWN  $57B2           ; Unknown 5xxx instruction
$558    $A2C1   LD       I, $2C1         ; Load 2C1 into I
$55A    $EF8B   UNKNOWN  $EF8B           ; Unknown Exxx instruction
$55C    $5906   UNKNOWN  $5906           ; Unknown 5xxx instruction
$55E    $F66F   UNKNOWN  F66F            ; Unknown Fxxx instruction
$560    $2ED0   CALL     $ED0            ; Call subroutine at ED0
$562    $2599   CALL     $599            ; Call subroutine at 599
$564    $FA2B   UNKNOWN  FA2B            ; Unknown Fxxx instruction
$566    $0CE5   SYS      $CE5            ; System call to CE5
$568    $E367   UNKNOWN  $E367           ; Unknown Exxx instruction
$56A    $A1A4   LD       I, $1A4         ; Load 1A4 into I
$56C    $2BCD   CALL     $BCD            ; Call subroutine at BCD
$56E    $F905   UNKNOWN  F905            ; Unknown Fxxx instruction
$570    $C4CC   RND      V4, #CC         ; V4 = random & CC
$572    $782A   ADD      V8, #2A         ; Add 42 to V8
$574    $9746   UNKNOWN  $9746           ; Unknown 9xxx instruction
$576    $8474   ADD      V4, V7          ; V4 += V7, VF = carry
$578    $6674   LD       V6, #74         ; Load 116 into V6
$57A    $C988   RND      V9, #88         ; V9 = random & 88
$57C    $F37A   UNKNOWN  F37A            ; Unknown Fxxx instruction
$57E    $FEBF   UNKNOWN  FEBF            ; Unknown Fxxx instruction
$580    $C2B8   RND      V2, #B8         ; V2 = random & B8
$582    $5D42   UNKNOWN  $5D42           ; Unknown 5xxx instruction
$584    $2902   CALL     $902            ; Call subroutine at 902
$586    $AEB2   LD       I, $EB2         ; Load EB2 into I
$588    $CC04   RND      VC, #04         ; VC = random & 04
$58A    $BC87   JP       V0, $C87        ; Jump to V0 + C87
$58C    $E3A7   UNKNOWN  $E3A7           ; Unknown Exxx instruction
$58E    $AAA8   LD       I, $AA8         ; Load AA8 into I
$590    $D2A5   DRW      V2, VA, #5      ; Draw 5-byte sprite at V2, VA
$592    $55F1   UNKNOWN  $55F1           ; Unknown 5xxx instruction
$594    $4D9F   SNE      VD, #9F         ; Skip if VD != 159
$596    $B9C8   JP       V0, $9C8        ; Jump to V0 + 9C8
$598    $80A8   UNKNOWN  80A8            ; Unknown 8xxx instruction
$59A    $E280   UNKNOWN  $E280           ; Unknown Exxx instruction
$59C    $1ECA   JP       $ECA            ; Jump to ECA
$59E    $C773   RND      V7, #73         ; V7 = random & 73
$5A0    $8FE1   OR       VF, VE          ; VF |= VE
$5A2    $2192   CALL     $192            ; Call subroutine at 192
$5A4    $1723   JP       $723            ; Jump to 723
$5A6    $3698   SE       V6, #98         ; Skip if V6 == 152
$5A8    $0A59   SYS      $A59            ; System call to A59
$5AA    $04EF   SYS      $4EF            ; System call to 4EF
$5AC    $99CA   UNKNOWN  $99CA           ; Unknown 9xxx instruction
$5AE    $EBE7   UNKNOWN  $EBE7           ; Unknown Exxx instruction
$5B0    $D274   DRW      V2, V7, #4      ; Draw 4-byte sprite at V2, V7
$5B2    $F964   UNKNOWN  F964            ; Unknown Fxxx instruction
$5B4    $D8EF   DRW      V8, VE, #F      ; Draw 15-byte sprite at V8, VE
$5B6    $301D   SE       V0, #1D         ; Skip if V0 == 29
$5B8    $2666   CALL     $666            ; Call subroutine at 666
$5BA    $F7C6   UNKNOWN  F7C6            ; Unknown Fxxx instruction
$5BC    $4DBC   SNE      VD, #BC         ; Skip if VD != 188
$5BE    $50AF   UNKNOWN  $50AF           ; Unknown 5xxx instruction
$5C0    $ED39   UNKNOWN  $ED39           ; Unknown Exxx instruction
$5C2    $B459   JP       V0, $459        ; Jump to V0 + 459
$5C4    $0FB2   SYS      $FB2            ; System call to FB2
$5C6    $AD20   LD       I, $D20         ; Load D20 into I
$5C8    $1E7B   JP       $E7B            ; Jump to E7B
$5CA    $94DA   UNKNOWN  $94DA           ; Unknown 9xxx instruction
$5CC    $7607   ADD      V6, #07         ; Add 7 to V6
$5CE    $91F9   UNKNOWN  $91F9           ; Unknown 9xxx instruction
$5D0    $90A7   UNKNOWN  $90A7           ; Unknown 9xxx instruction
$5D2    $C934   RND      V9, #34         ; V9 = random & 34
$5D4    $D93C   DRW      V9, V3, #C      ; Draw 12-byte sprite at V9, V3
$5D6    $0935   SYS      $935            ; System call to 935
$5D8    $08B9   SYS      $8B9            ; System call to 8B9
$5DA    $D86D   DRW      V8, V6, #D      ; Draw 13-byte sprite at V8, V6
$5DC    $6EF2   LD       VE, #F2         ; Load 242 into VE
$5DE    $FFC9   UNKNOWN  FFC9            ; Unknown Fxxx instruction
$5E0    $9BB6   UNKNOWN  $9BB6           ; Unknown 9xxx instruction
$5E2    $B5FC   JP       V0, $5FC        ; Jump to V0 + 5FC
$5E4    $E42A   UNKNOWN  $E42A           ; Unknown Exxx instruction
$5E6    $52B2   UNKNOWN  $52B2           ; Unknown 5xxx instruction
$5E8    $E5B2   UNKNOWN  $E5B2           ; Unknown Exxx instruction
$5EA    $29E4   CALL     $9E4            ; Call subroutine at 9E4
$5EC    $E9B2   UNKNOWN  $E9B2           ; Unknown Exxx instruction
$5EE    $2557   CALL     $557            ; Call subroutine at 557
$5F0    $9245   UNKNOWN  $9245           ; Unknown 9xxx instruction
$5F2    $0BCA   SYS      $BCA            ; System call to BCA
$5F4    $B079   JP       V0, $079        ; Jump to V0 + 079
$5F6    $355B   SE       V5, #5B         ; Skip if V5 == 91
$5F8    $4355   SNE      V3, #55         ; Skip if V3 != 85
$5FA    $0CD9   SYS      $CD9            ; System call to CD9
$5FC    $E137   UNKNOWN  $E137           ; Unknown Exxx instruction
$5FE    $B3A4   JP       V0, $3A4        ; Jump to V0 + 3A4
$600    $819A   UNKNOWN  819A            ; Unknown 8xxx instruction
$602    $CF77   RND      VF, #77         ; VF = random & 77
$604    $C359   RND      V3, #59         ; V3 = random & 59
$606    $34B9   SE       V4, #B9         ; Skip if V4 == 185
$608    $EEAD   UNKNOWN  $EEAD           ; Unknown Exxx instruction
$60A    $21BA   CALL     $1BA            ; Call subroutine at 1BA
$60C    $3B59   SE       VB, #59         ; Skip if VB == 89
$60E    $0F3A   SYS      $F3A            ; System call to F3A
$610    $3284   SE       V2, #84         ; Skip if V2 == 132
$612    $3D6F   SE       VD, #6F         ; Skip if VD == 111
$614    $1A15   JP       $A15            ; Jump to A15
$616    $1F85   JP       $F85            ; Jump to F85
$618    $D899   DRW      V8, V9, #9      ; Draw 9-byte sprite at V8, V9
$61A    $B319   JP       V0, $319        ; Jump to V0 + 319
$61C    $1E3C   JP       $E3C            ; Jump to E3C
$61E    $BBEE   JP       V0, $BEE        ; Jump to V0 + BEE
$620    $2CF5   CALL     $CF5            ; Call subroutine at CF5
$622    $1C76   JP       $C76            ; Jump to C76
$624    $E9CF   UNKNOWN  $E9CF           ; Unknown Exxx instruction
$626    $74E4   ADD      V4, #E4         ; Add 228 to V4
$628    $8FC8   UNKNOWN  8FC8            ; Unknown 8xxx instruction
$62A    $1752   JP       $752            ; Jump to 752
$62C    $95C4   UNKNOWN  $95C4           ; Unknown 9xxx instruction
$62E    $F15C   UNKNOWN  F15C            ; Unknown Fxxx instruction
$630    $D7E0   DRW      V7, VE, #0      ; Draw 0-byte sprite at V7, VE
$632    $0E39   SYS      $E39            ; System call to E39
$634    $AB6E   LD       I, $B6E         ; Load B6E into I
$636    $8462   AND      V4, V6          ; V4 &= V6
$638    $DCE3   DRW      VC, VE, #3      ; Draw 3-byte sprite at VC, VE
$63A    $0E8E   SYS      $E8E            ; System call to E8E
$63C    $C79E   RND      V7, #9E         ; V7 = random & 9E
$63E    $47BE   SNE      V7, #BE         ; Skip if V7 != 190
$640    $5815   UNKNOWN  $5815           ; Unknown 5xxx instruction
$642    $7511   ADD      V5, #11         ; Add 17 to V5
$644    $29A0   CALL     $9A0            ; Call subroutine at 9A0
$646    $F99C   UNKNOWN  F99C            ; Unknown Fxxx instruction
$648    $F5A4   UNKNOWN  F5A4            ; Unknown Fxxx instruction
$64A    $AC66   LD       I, $C66         ; Load C66 into I
$64C    $3A49   SE       VA, #49         ; Skip if VA == 73
$64E    $664D   LD       V6, #4D         ; Load 77 into V6
$650    $2940   CALL     $940            ; Call subroutine at 940
$652    $ED8D   UNKNOWN  $ED8D           ; Unknown Exxx instruction
$654    $52BB   UNKNOWN  $52BB           ; Unknown 5xxx instruction
$656    $5AEE   UNKNOWN  $5AEE           ; Unknown 5xxx instruction
$658    $A268   LD       I, $268         ; Load 268 into I
$65A    $9306   UNKNOWN  $9306           ; Unknown 9xxx instruction
$65C    $5F51   UNKNOWN  $5F51           ; Unknown 5xxx instruction
$65E    $C36B   RND      V3, #6B         ; V3 = random & 6B
$660    $754D   ADD      V5, #4D         ; Add 77 to V5
$662    $E3B7   UNKNOWN  $E3B7           ; Unknown Exxx instruction
$664    $9D65   UNKNOWN  $9D65           ; Unknown 9xxx instruction
$666    $BBF8   JP       V0, $BF8        ; Jump to V0 + BF8
$668    $88B6   SHR      V8              ; V8 >>= 1, VF = LSB
$66A    $1718   JP       $718            ; Jump to 718
$66C    $B63E   JP       V0, $63E        ; Jump to V0 + 63E
$66E    $428F   SNE      V2, #8F         ; Skip if V2 != 143
$670    $6BF3   LD       VB, #F3         ; Load 243 into VB
$672    $7597   ADD      V5, #97         ; Add 151 to V5
$674    $BCCA   JP       V0, $CCA        ; Jump to V0 + CCA
$676    $5763   UNKNOWN  $5763           ; Unknown 5xxx instruction
$678    $58D7   UNKNOWN  $58D7           ; Unknown 5xxx instruction
$67A    $417F   SNE      V1, #7F         ; Skip if V1 != 127
$67C    $D21C   DRW      V2, V1, #C      ; Draw 12-byte sprite at V2, V1
$67E    $7B69   ADD      VB, #69         ; Add 105 to VB
$680    $8ACA   UNKNOWN  8ACA            ; Unknown 8xxx instruction
$682    $7099   ADD      V0, #99         ; Add 153 to V0
$684    $C9AB   RND      V9, #AB         ; V9 = random & AB
$686    $4E82   SNE      VE, #82         ; Skip if VE != 130
$688    $6EE7   LD       VE, #E7         ; Load 231 into VE
$68A    $DF00   DRW      VF, V0, #0      ; Draw 0-byte sprite at VF, V0
$68C    $DB39   DRW      VB, V3, #9      ; Draw 9-byte sprite at VB, V3
$68E    $1046   JP       $046            ; Jump to 046
$690    $9E09   UNKNOWN  $9E09           ; Unknown 9xxx instruction
$692    $CC82   RND      VC, #82         ; VC = random & 82
$694    $959A   UNKNOWN  $959A           ; Unknown 9xxx instruction
$696    $21FA   CALL     $1FA            ; Call subroutine at 1FA
$698    $6638   LD       V6, #38         ; Load 56 into V6
$69A    $78E6   ADD      V8, #E6         ; Add 230 to V8
$69C    $2CB1   CALL     $CB1            ; Call subroutine at CB1
$69E    $CB72   RND      VB, #72         ; VB = random & 72
$6A0    $226E   CALL     $26E            ; Call subroutine at 26E
$6A2    $4218   SNE      V2, #18         ; Skip if V2 != 24
$6A4    $D428   DRW      V4, V2, #8      ; Draw 8-byte sprite at V4, V2
$6A6    $C173   RND      V1, #73         ; V1 = random & 73
$6A8    $A3D0   LD       I, $3D0         ; Load 3D0 into I
$6AA    $9852   UNKNOWN  $9852           ; Unknown 9xxx instruction
$6AC    $B139   JP       V0, $139        ; Jump to V0 + 139
$6AE    $A36A   LD       I, $36A         ; Load 36A into I
$6B0    $5CCD   UNKNOWN  $5CCD           ; Unknown 5xxx instruction
$6B2    $F8AE   UNKNOWN  F8AE            ; Unknown Fxxx instruction
$6B4    $EC87   UNKNOWN  $EC87           ; Unknown Exxx instruction
$6B6    $06D5   SYS      $6D5            ; System call to 6D5
$6B8    $B04F   JP       V0, $04F        ; Jump to V0 + 04F
$6BA    $E2A9   UNKNOWN  $E2A9           ; Unknown Exxx instruction
$6BC    $5818   UNKNOWN  $5818           ; Unknown 5xxx instruction
$6BE    $F5C5   UNKNOWN  F5C5            ; Unknown Fxxx instruction
$6C0    $297D   CALL     $97D            ; Call subroutine at 97D
$6C2    $6F11   LD       VF, #11         ; Load 17 into VF
$6C4    $4FB5   SNE      VF, #B5         ; Skip if VF != 181
$6C6    $C9CE   RND      V9, #CE         ; V9 = random & CE
$6C8    $54FE   UNKNOWN  $54FE           ; Unknown 5xxx instruction
$6CA    $5166   UNKNOWN  $5166           ; Unknown 5xxx instruction
$6CC    $7259   ADD      V2, #59         ; Add 89 to V2
$6CE    $CE11   RND      VE, #11         ; VE = random & 11
$6D0    $87FC   UNKNOWN  87FC            ; Unknown 8xxx instruction
$6D2    $9942   UNKNOWN  $9942           ; Unknown 9xxx instruction
$6D4    $6BF4   LD       VB, #F4         ; Load 244 into VB
$6D6    $160C   JP       $60C            ; Jump to 60C
$6D8    $9466   UNKNOWN  $9466           ; Unknown 9xxx instruction
$6DA    $8633   XOR      V6, V3          ; V6 ^= V3
$6DC    $DAFE   DRW      VA, VF, #E      ; Draw 14-byte sprite at VA, VF
$6DE    $2132   CALL     $132            ; Call subroutine at 132
$6E0    $4411   SNE      V4, #11         ; Skip if V4 != 17
$6E2    $9FBD   UNKNOWN  $9FBD           ; Unknown 9xxx instruction
$6E4    $16C1   JP       $6C1            ; Jump to 6C1
$6E6    $EA03   UNKNOWN  $EA03           ; Unknown Exxx instruction
$6E8    $90D9   UNKNOWN  $90D9           ; Unknown 9xxx instruction
$6EA    $1172   JP       $172            ; Jump to 172
$6EC    $7E56   ADD      VE, #56         ; Add 86 to VE
$6EE    $871D   UNKNOWN  871D            ; Unknown 8xxx instruction
$6F0    $CF0F   RND      VF, #0F         ; VF = random & 0F
$6F2    $343C   SE       V4, #3C         ; Skip if V4 == 60
$6F4    $9F53   UNKNOWN  $9F53           ; Unknown 9xxx instruction
$6F6    $8885   SUB      V8, V8          ; V8 -= V8, VF = !borrow
$6F8    $CFA4   RND      VF, #A4         ; VF = random & A4
$6FA    $8A06   SHR      VA              ; VA >>= 1, VF = LSB
$6FC    $E8CC   UNKNOWN  $E8CC           ; Unknown Exxx instruction
$6FE    $923C   UNKNOWN  $923C           ; Unknown 9xxx instruction
$700    $09C4   SYS      $9C4            ; System call to 9C4
$702    $0ECE   SYS      $ECE            ; System call to ECE
$704    $666A   LD       V6, #6A         ; Load 106 into V6
$706    $622E   LD       V2, #2E         ; Load 46 into V2
$708    $F606   UNKNOWN  F606            ; Unknown Fxxx instruction
$70A    $1ADA   JP       $ADA            ; Jump to ADA
$70C    $0DC4   SYS      $DC4            ; System call to DC4
$70E    $5043   UNKNOWN  $5043           ; Unknown 5xxx instruction
$710    $E014   UNKNOWN  $E014           ; Unknown Exxx instruction
$712    $7CE2   ADD      VC, #E2         ; Add 226 to VC
$714    $9A3C   UNKNOWN  $9A3C           ; Unknown 9xxx instruction
$716    $C946   RND      V9, #46         ; V9 = random & 46
$718    $F96F   UNKNOWN  F96F            ; Unknown Fxxx instruction
$71A    $5788   UNKNOWN  $5788           ; Unknown 5xxx instruction
$71C    $AA20   LD       I, $A20         ; Load A20 into I
$71E    $1697   JP       $697            ; Jump to 697
$720    $107E   JP       $07E            ; Jump to 07E
$722    $02E2   SYS      $2E2            ; System call to 2E2
$724    $0573   SYS      $573            ; System call to 573
$726    $75A1   ADD      V5, #A1         ; Add 161 to V5
$728    $AC31   LD       I, $C31         ; Load C31 into I
$72A    $3B1D   SE       VB, #1D         ; Skip if VB == 29
$72C    $9418   UNKNOWN  $9418           ; Unknown 9xxx instruction
$72E    $BB1F   JP       V0, $B1F        ; Jump to V0 + B1F
$730    $2D90   CALL     $D90            ; Call subroutine at D90
$732    $B3AD   JP       V0, $3AD        ; Jump to V0 + 3AD
$734    $250E   CALL     $50E            ; Call subroutine at 50E
$736    $8AF2   AND      VA, VF          ; VA &= VF
$738    $ACD3   LD       I, $CD3         ; Load CD3 into I
$73A    $5E5B   UNKNOWN  $5E5B           ; Unknown 5xxx instruction
$73C    $CEEE   RND      VE, #EE         ; VE = random & EE
$73E    $54F8   UNKNOWN  $54F8           ; Unknown 5xxx instruction
$740    $04BE   SYS      $4BE            ; System call to 4BE
$742    $9537   UNKNOWN  $9537           ; Unknown 9xxx instruction
$744    $72B1   ADD      V2, #B1         ; Add 177 to V2
$746    $3B0A   SE       VB, #0A         ; Skip if VB == 10
$748    $55DC   UNKNOWN  $55DC           ; Unknown 5xxx instruction
$74A    $712C   ADD      V1, #2C         ; Add 44 to V1
$74C    $77C1   ADD      V7, #C1         ; Add 193 to V7
$74E    $5357   UNKNOWN  $5357           ; Unknown 5xxx instruction
$750    $C29C   RND      V2, #9C         ; V2 = random & 9C
$752    $13D9   JP       $3D9            ; Jump to 3D9
$754    $F804   UNKNOWN  F804            ; Unknown Fxxx instruction
$756    $0419   SYS      $419            ; System call to 419
$758    $C186   RND      V1, #86         ; V1 = random & 86
$75A    $F781   UNKNOWN  F781            ; Unknown Fxxx instruction
$75C    $F27C   UNKNOWN  F27C            ; Unknown Fxxx instruction
$75E    $4690   SNE      V6, #90         ; Skip if V6 != 144
$760    $ABB9   LD       I, $BB9         ; Load BB9 into I
$762    $1EDC   JP       $EDC            ; Jump to EDC
$764    $A960   LD       I, $960         ; Load 960 into I
$766    $F7BF   UNKNOWN  F7BF            ; Unknown Fxxx instruction
$768    $1E30   JP       $E30            ; Jump to E30
$76A    $C430   RND      V4, #30         ; V4 = random & 30
$76C    $F1F9   UNKNOWN  F1F9            ; Unknown Fxxx instruction
$76E    $1BD1   JP       $BD1            ; Jump to BD1
$770    $D8CC   DRW      V8, VC, #C      ; Draw 12-byte sprite at V8, VC
$772    $620C   LD       V2, #0C         ; Load 12 into V2
$774    $5685   UNKNOWN  $5685           ; Unknown 5xxx instruction
$776    $BF7F   JP       V0, $F7F        ; Jump to V0 + F7F
$778    $9D1B   UNKNOWN  $9D1B           ; Unknown 9xxx instruction
$77A    $6F0E   LD       VF, #0E         ; Load 14 into VF
$77C    $EECF   UNKNOWN  $EECF           ; Unknown Exxx instruction
$77E    $7A37   ADD      VA, #37         ; Add 55 to VA
$780    $B659   JP       V0, $659        ; Jump to V0 + 659
$782    $82D3   XOR      V2, VD          ; V2 ^= VD
$784    $0C63   SYS      $C63            ; System call to C63
$786    $24A7   CALL     $4A7            ; Call subroutine at 4A7
$788    $7CCF   ADD      VC, #CF         ; Add 207 to VC
$78A    $93A7   UNKNOWN  $93A7           ; Unknown 9xxx instruction
$78C    $0CAA   SYS      $CAA            ; System call to CAA
$78E    $A1DB   LD       I, $1DB         ; Load 1DB into I
$790    $03FD   SYS      $3FD            ; System call to 3FD
$792    $8AA7   SUBN     VA, VA          ; VA = VA - VA, VF = !borrow
$794    $33A6   SE       V3, #A6         ; Skip if V3 == 166
$796    $5A63   UNKNOWN  $5A63           ; Unknown 5xxx instruction
$798    $A304   LD       I, $304         ; Load 304 into I
$79A    $DC5F   DRW      VC, V5, #F      ; Draw 15-byte sprite at VC, V5
$79C    $267D   CALL     $67D            ; Call subroutine at 67D
$79E    $D360   DRW      V3, V6, #0      ; Draw 0-byte sprite at V3, V6
$7A0    $5A6E   UNKNOWN  $5A6E           ; Unknown 5xxx instruction
$7A2    $03F0   SYS      $3F0            ; System call to 3F0
$7A4    $2532   CALL     $532            ; Call subroutine at 532
$7A6    $0F14   SYS      $F14            ; System call to F14
$7A8    $DCA6   DRW      VC, VA, #6      ; Draw 6-byte sprite at VC, VA
$7AA    $FC9B   UNKNOWN  FC9B            ; Unknown Fxxx instruction
$7AC    $1235   JP       $235            ; Jump to 235
$7AE    $1029   JP       $029            ; Jump to 029
$7B0    $75E0   ADD      V5, #E0         ; Add 224 to V5
$7B2    $88CB   UNKNOWN  88CB            ; Unknown 8xxx instruction
$7B4    $45BE   SNE      V5, #BE         ; Skip if V5 != 190
$7B6    $5855   UNKNOWN  $5855           ; Unknown 5xxx instruction
$7B8    $A50F   LD       I, $50F         ; Load 50F into I
$7BA    $C58D   RND      V5, #8D         ; V5 = random & 8D
$7BC    $2B5D   CALL     $B5D            ; Call subroutine at B5D
$7BE    $7B87   ADD      VB, #87         ; Add 135 to VB
$7C0    $CE0B   RND      VE, #0B         ; VE = random & 0B
$7C2    $441B   SNE      V4, #1B         ; Skip if V4 != 27
$7C4    $4D32   SNE      VD, #32         ; Skip if VD != 50
$7C6    $5F1C   UNKNOWN  $5F1C           ; Unknown 5xxx instruction
$7C8    $6721   LD       V7, #21         ; Load 33 into V7
$7CA    $9BFA   UNKNOWN  $9BFA           ; Unknown 9xxx instruction
$7CC    $A561   LD       I, $561         ; Load 561 into I
$7CE    $E387   UNKNOWN  $E387           ; Unknown Exxx instruction
$7D0    $3E9E   SE       VE, #9E         ; Skip if VE == 158
$7D2    $8D7A   UNKNOWN  8D7A            ; Unknown 8xxx instruction
$7D4    $29CF   CALL     $9CF            ; Call subroutine at 9CF
$7D6    $4F8C   SNE      VF, #8C         ; Skip if VF != 140
$7D8    $738D   ADD      V3, #8D         ; Add 141 to V3
$7DA    $A19B   LD       I, $19B         ; Load 19B into I
$7DC    $8F8E   SHL      VF              ; VF <<= 1, VF = MSB
$7DE    $9F0F   UNKNOWN  $9F0F           ; Unknown 9xxx instruction
$7E0    $E5B7   UNKNOWN  $E5B7           ; Unknown Exxx instruction
$7E2    $261D   CALL     $61D            ; Call subroutine at 61D
$7E4    $B30D   JP       V0, $30D        ; Jump to V0 + 30D
$7E6    $3D8A   SE       VD, #8A         ; Skip if VD == 138
$7E8    $10E5   JP       $0E5            ; Jump to 0E5
$7EA    $773F   ADD      V7, #3F         ; Add 63 to V7
$7EC    $89CB   UNKNOWN  89CB            ; Unknown 8xxx instruction
$7EE    $CEB4   RND      VE, #B4         ; VE = random & B4
$7F0    $029C   SYS      $29C            ; System call to 29C
$7F2    $F3BF   UNKNOWN  F3BF            ; Unknown Fxxx instruction
$7F4    $F7BB   UNKNOWN  F7BB            ; Unknown Fxxx instruction
$7F6    $2689   CALL     $689            ; Call subroutine at 689
$7F8    $0A3B   SYS      $A3B            ; System call to A3B
$7FA    $502C   UNKNOWN  $502C           ; Unknown 5xxx instruction
$7FC    $1207   JP       $207            ; Jump to 207
$7FE    $C372   RND      V3, #72         ; V3 = random & 72
$800    $2A64   CALL     $A64            ; Call subroutine at A64
$802    $79FE   ADD      V9, #FE         ; Add 254 to V9
$804    $3EED   SE       VE, #ED         ; Skip if VE == 237
$806    $AFCB   LD       I, $FCB         ; Load FCB into I
$808    $F453   UNKNOWN  F453            ; Unknown Fxxx instruction
$80A    $0FFD   SYS      $FFD            ; System call to FFD
$80C    $1CF1   JP       $CF1            ; Jump to CF1
$80E    $DDF6   DRW      VD, VF, #6      ; Draw 6-byte sprite at VD, VF
$810    $1EFD   JP       $EFD            ; Jump to EFD
$812    $F590   UNKNOWN  F590            ; Unknown Fxxx instruction
$814    $ED0A   UNKNOWN  $ED0A           ; Unknown Exxx instruction
$816    $AF68   LD       I, $F68         ; Load F68 into I
$818    $AB22   LD       I, $B22         ; Load B22 into I
$81A    $3FCA   SE       VF, #CA         ; Skip if VF == 202
$81C    $CC16   RND      VC, #16         ; VC = random & 16
$81E    $56CD   UNKNOWN  $56CD           ; Unknown 5xxx instruction
$820    $1F28   JP       $F28            ; Jump to F28
$822    $9D2D   UNKNOWN  $9D2D           ; Unknown 9xxx instruction
$824    $E3F3   UNKNOWN  $E3F3           ; Unknown Exxx instruction
$826    $FEFE   UNKNOWN  FEFE            ; Unknown Fxxx instruction
$828    $7AC5   ADD      VA, #C5         ; Add 197 to VA
$82A    $7A17   ADD      VA, #17         ; Add 23 to VA
$82C    $9205   UNKNOWN  $9205           ; Unknown 9xxx instruction
$82E    $9AD3   UNKNOWN  $9AD3           ; Unknown 9xxx instruction
$830    $31F7   SE       V1, #F7         ; Skip if V1 == 247
$832    $2E96   CALL     $E96            ; Call subroutine at E96
$834    $A913   LD       I, $913         ; Load 913 into I
$836    $7018   ADD      V0, #18         ; Add 24 to V0
$838    $C948   RND      V9, #48         ; V9 = random & 48
$83A    $8FCD   UNKNOWN  8FCD            ; Unknown 8xxx instruction
$83C    $25BD   CALL     $5BD            ; Call subroutine at 5BD
$83E    $60D6   LD       V0, #D6         ; Load 214 into V0
$840    $F8D5   UNKNOWN  F8D5            ; Unknown Fxxx instruction
$842    $06F7   SYS      $6F7            ; System call to 6F7
$844    $7D71   ADD      VD, #71         ; Add 113 to VD
$846    $AD58   LD       I, $D58         ; Load D58 into I
$848    $D411   DRW      V4, V1, #1      ; Draw 1-byte sprite at V4, V1
$84A    $DC41   DRW      VC, V4, #1      ; Draw 1-byte sprite at VC, V4
$84C    $A52E   LD       I, $52E         ; Load 52E into I
$84E    $E33F   UNKNOWN  $E33F           ; Unknown Exxx instruction
$850    $7504   ADD      V5, #04         ; Add 4 to V5
$852    $8920   LD       V9, V2          ; V9 = V2
$854    $FC14   UNKNOWN  FC14            ; Unknown Fxxx instruction
$856    $502A   UNKNOWN  $502A           ; Unknown 5xxx instruction
$858    $8684   ADD      V6, V8          ; V6 += V8, VF = carry
$85A    $C5BC   RND      V5, #BC         ; V5 = random & BC
$85C    $B9B3   JP       V0, $9B3        ; Jump to V0 + 9B3
$85E    $7E30   ADD      VE, #30         ; Add 48 to VE
$860    $2D2B   CALL     $D2B            ; Call subroutine at D2B
$862    $2249   CALL     $249            ; Call subroutine at 249
$864    $1146   JP       $146            ; Jump to 146
$866    $91FE   UNKNOWN  $91FE           ; Unknown 9xxx instruction
$868    $68B3   LD       V8, #B3         ; Load 179 into V8
$86A    $B3FF   JP       V0, $3FF        ; Jump to V0 + 3FF
$86C    $74DB   ADD      V4, #DB         ; Add 219 to V4
$86E    $BEF5   JP       V0, $EF5        ; Jump to V0 + EF5
$870    $64E6   LD       V4, #E6         ; Load 230 into V4
$872    $19D8   JP       $9D8            ; Jump to 9D8
$874    $5732   UNKNOWN  $5732           ; Unknown 5xxx instruction
$876    $F6FC   UNKNOWN  F6FC            ; Unknown Fxxx instruction
$878    $8AB2   AND      VA, VB          ; VA &= VB
$87A    $2747   CALL     $747            ; Call subroutine at 747
$87C    $6FB0   LD       VF, #B0         ; Load 176 into VF
$87E    $6F24   LD       VF, #24         ; Load 36 into VF
$880    $2575   CALL     $575            ; Call subroutine at 575
$882    $75B0   ADD      V5, #B0         ; Add 176 to V5
$884    $28A6   CALL     $8A6            ; Call subroutine at 8A6
$886    $FAE1   UNKNOWN  FAE1            ; Unknown Fxxx instruction
$888    $13A1   JP       $3A1            ; Jump to 3A1
$88A    $FA78   UNKNOWN  FA78            ; Unknown Fxxx instruction
$88C    $9043   UNKNOWN  $9043           ; Unknown 9xxx instruction
$88E    $CA0A   RND      VA, #0A         ; VA = random & 0A
$890    $604D   LD       V0, #4D         ; Load 77 into V0
$892    $C38A   RND      V3, #8A         ; V3 = random & 8A
$894    $F484   UNKNOWN  F484            ; Unknown Fxxx instruction
$896    $D014   DRW      V0, V1, #4      ; Draw 4-byte sprite at V0, V1
$898    $19A5   JP       $9A5            ; Jump to 9A5
$89A    $9B6E   UNKNOWN  $9B6E           ; Unknown 9xxx instruction
$89C    $9A29   UNKNOWN  $9A29           ; Unknown 9xxx instruction
$89E    $EB3A   UNKNOWN  $EB3A           ; Unknown Exxx instruction
$8A0    $EFF0   UNKNOWN  $EFF0           ; Unknown Exxx instruction
$8A2    $5C44   UNKNOWN  $5C44           ; Unknown 5xxx instruction
$8A4    $9E5A   UNKNOWN  $9E5A           ; Unknown 9xxx instruction
$8A6    $FF33   LD       B, VF           ; Store BCD of VF at I, I+1, I+2
$8A8    $E619   UNKNOWN  $E619           ; Unknown Exxx instruction
$8AA    $8C54   ADD      VC, V5          ; VC += V5, VF = carry
$8AC    $C94C   RND      V9, #4C         ; V9 = random & 4C
$8AE    $9E86   UNKNOWN  $9E86           ; Unknown 9xxx instruction
$8B0    $3FCC   SE       VF, #CC         ; Skip if VF == 204
$8B2    $5DFD   UNKNOWN  $5DFD           ; Unknown 5xxx instruction
$8B4    $2A98   CALL     $A98            ; Call subroutine at A98
$8B6    $76DB   ADD      V6, #DB         ; Add 219 to V6
$8B8    $E375   UNKNOWN  $E375           ; Unknown Exxx instruction
$8BA    $9CEC   UNKNOWN  $9CEC           ; Unknown 9xxx instruction
$8BC    $287D   CALL     $87D            ; Call subroutine at 87D
$8BE    $4BAB   SNE      VB, #AB         ; Skip if VB != 171
$8C0    $1952   JP       $952            ; Jump to 952
$8C2    $05FF   SYS      $5FF            ; System call to 5FF
$8C4    $556A   UNKNOWN  $556A           ; Unknown 5xxx instruction
$8C6    $A1F1   LD       I, $1F1         ; Load 1F1 into I
$8C8    $55B3   UNKNOWN  $55B3           ; Unknown 5xxx instruction
$8CA    $343B   SE       V4, #3B         ; Skip if V4 == 59
$8CC    $DA75   DRW      VA, V7, #5      ; Draw 5-byte sprite at VA, V7
$8CE    $7FDF   ADD      VF, #DF         ; Add 223 to VF
$8D0    $9961   UNKNOWN  $9961           ; Unknown 9xxx instruction
$8D2    $7B96   ADD      VB, #96         ; Add 150 to VB
$8D4    $BE55   JP       V0, $E55        ; Jump to V0 + E55
$8D6    $ABCF   LD       I, $BCF         ; Load BCF into I
$8D8    $8A1A   UNKNOWN  8A1A            ; Unknown 8xxx instruction
$8DA    $51E5   UNKNOWN  $51E5           ; Unknown 5xxx instruction
$8DC    $330E   SE       V3, #0E         ; Skip if V3 == 14
$8DE    $EFCA   UNKNOWN  $EFCA           ; Unknown Exxx instruction
$8E0    $4251   SNE      V2, #51         ; Skip if V2 != 81
$8E2    $FC6F   UNKNOWN  FC6F            ; Unknown Fxxx instruction
$8E4    $79BC   ADD      V9, #BC         ; Add 188 to V9
$8E6    $B2FD   JP       V0, $2FD        ; Jump to V0 + 2FD
$8E8    $9FF0   SNE      VF, VF          ; Skip if VF != VF
$8EA    $8655   SUB      V6, V5          ; V6 -= V5, VF = !borrow
$8EC    $A8FC   LD       I, $8FC         ; Load 8FC into I
$8EE    $0F9F   SYS      $F9F            ; System call to F9F
$8F0    $8C10   LD       VC, V1          ; VC = V1
$8F2    $6AC9   LD       VA, #C9         ; Load 201 into VA
$8F4    $3616   SE       V6, #16         ; Skip if V6 == 22
$8F6    $D8D1   DRW      V8, VD, #1      ; Draw 1-byte sprite at V8, VD
$8F8    $D009   DRW      V0, V0, #9      ; Draw 9-byte sprite at V0, V0
$8FA    $499A   SNE      V9, #9A         ; Skip if V9 != 154
$8FC    $7F65   ADD      VF, #65         ; Add 101 to VF
$8FE    $2E0A   CALL     $E0A            ; Call subroutine at E0A
$900    $0FF9   SYS      $FF9            ; System call to FF9
$902    $70C4   ADD      V0, #C4         ; Add 196 to V0
$904    $AA10   LD       I, $A10         ; Load A10 into I
$906    $CE96   RND      VE, #96         ; VE = random & 96
$908    $9675   UNKNOWN  $9675           ; Unknown 9xxx instruction
$90A    $FD2F   UNKNOWN  FD2F            ; Unknown Fxxx instruction
$90C    $532E   UNKNOWN  $532E           ; Unknown 5xxx instruction
$90E    $F54B   UNKNOWN  F54B            ; Unknown Fxxx instruction
$910    $068E   SYS      $68E            ; System call to 68E
$912    $8FE0   LD       VF, VE          ; VF = VE
$914    $4CCC   SNE      VC, #CC         ; Skip if VC != 204
$916    $72DF   ADD      V2, #DF         ; Add 223 to V2
$918    $5FBD   UNKNOWN  $5FBD           ; Unknown 5xxx instruction
$91A    $272E   CALL     $72E            ; Call subroutine at 72E
$91C    $BDD7   JP       V0, $DD7        ; Jump to V0 + DD7
$91E    $0749   SYS      $749            ; System call to 749
$920    $CD54   RND      VD, #54         ; VD = random & 54
$922    $2B2D   CALL     $B2D            ; Call subroutine at B2D
$924    $31AA   SE       V1, #AA         ; Skip if V1 == 170
$926    $A402   LD       I, $402         ; Load 402 into I
$928    $FB7F   UNKNOWN  FB7F            ; Unknown Fxxx instruction
$92A    $90B1   UNKNOWN  $90B1           ; Unknown 9xxx instruction
$92C    $1F2B   JP       $F2B            ; Jump to F2B
$92E    $2F96   CALL     $F96            ; Call subroutine at F96
$930    $190E   JP       $90E            ; Jump to 90E
$932    $5A20   SE       VA, V2          ; Skip if VA == V2
$934    $3023   SE       V0, #23         ; Skip if V0 == 35
$936    $7649   ADD      V6, #49         ; Add 73 to V6
$938    $647E   LD       V4, #7E         ; Load 126 into V4
$93A    $594B   UNKNOWN  $594B           ; Unknown 5xxx instruction
$93C    $5434   UNKNOWN  $5434           ; Unknown 5xxx instruction
$93E    $A64A   LD       I, $64A         ; Load 64A into I
$940    $6AE4   LD       VA, #E4         ; Load 228 into VA
$942    $7B76   ADD      VB, #76         ; Add 118 to VB
$944    $0378   SYS      $378            ; System call to 378
$946    $E235   UNKNOWN  $E235           ; Unknown Exxx instruction
$948    $DCC2   DRW      VC, VC, #2      ; Draw 2-byte sprite at VC, VC
$94A    $D735   DRW      V7, V3, #5      ; Draw 5-byte sprite at V7, V3
$94C    $8A71   OR       VA, V7          ; VA |= V7
$94E    $945E   UNKNOWN  $945E           ; Unknown 9xxx instruction
$950    $894C   UNKNOWN  894C            ; Unknown 8xxx instruction
$952    $B8FF   JP       V0, $8FF        ; Jump to V0 + 8FF
$954    $5D17   UNKNOWN  $5D17           ; Unknown 5xxx instruction
$956    $F7CA   UNKNOWN  F7CA            ; Unknown Fxxx instruction
$958    $A376   LD       I, $376         ; Load 376 into I
$95A    $D782   DRW      V7, V8, #2      ; Draw 2-byte sprite at V7, V8
$95C    $9D96   UNKNOWN  $9D96           ; Unknown 9xxx instruction
$95E    $1040   JP       $040            ; Jump to 040
$960    $4999   SNE      V9, #99         ; Skip if V9 != 153
$962    $3E23   SE       VE, #23         ; Skip if VE == 35
$964    $9ACD   UNKNOWN  $9ACD           ; Unknown 9xxx instruction
$966    $0F21   SYS      $F21            ; System call to F21
$968    $494D   SNE      V9, #4D         ; Skip if V9 != 77
$96A    $CC76   RND      VC, #76         ; VC = random & 76
$96C    $261E   CALL     $61E            ; Call subroutine at 61E
$96E    $4111   SNE      V1, #11         ; Skip if V1 != 17
$970    $3EAC   SE       VE, #AC         ; Skip if VE == 172
$972    $AB7C   LD       I, $B7C         ; Load B7C into I
$974    $5BE5   UNKNOWN  $5BE5           ; Unknown 5xxx instruction
$976    $3D6A   SE       VD, #6A         ; Skip if VD == 106
$978    $1BCB   JP       $BCB            ; Jump to BCB
$97A    $7B77   ADD      VB, #77         ; Add 119 to VB
$97C    $9B56   UNKNOWN  $9B56           ; Unknown 9xxx instruction
$97E    $B57C   JP       V0, $57C        ; Jump to V0 + 57C
$980    $9292   UNKNOWN  $9292           ; Unknown 9xxx instruction
$982    $545F   UNKNOWN  $545F           ; Unknown 5xxx instruction
$984    $BEF1   JP       V0, $EF1        ; Jump to V0 + EF1
$986    $A027   LD       I, $027         ; Load 027 into I
$988    $44B1   SNE      V4, #B1         ; Skip if V4 != 177
$98A    $A7A4   LD       I, $7A4         ; Load 7A4 into I
$98C    $9BB4   UNKNOWN  $9BB4           ; Unknown 9xxx instruction
$98E    $3275   SE       V2, #75         ; Skip if V2 == 117
$990    $B20B   JP       V0, $20B        ; Jump to V0 + 20B
$992    $FDFB   UNKNOWN  FDFB            ; Unknown Fxxx instruction
$994    $35D8   SE       V5, #D8         ; Skip if V5 == 216
$996    $C7E6   RND      V7, #E6         ; V7 = random & E6
$998    $9634   UNKNOWN  $9634           ; Unknown 9xxx instruction
$99A    $78A1   ADD      V8, #A1         ; Add 161 to V8
$99C    $521A   UNKNOWN  $521A           ; Unknown 5xxx instruction
$99E    $6469   LD       V4, #69         ; Load 105 into V4
$9A0    $3B75   SE       VB, #75         ; Skip if VB == 117
$9A2    $BAB3   JP       V0, $AB3        ; Jump to V0 + AB3
$9A4    $DEA9   DRW      VE, VA, #9      ; Draw 9-byte sprite at VE, VA
$9A6    $AA12   LD       I, $A12         ; Load A12 into I
$9A8    $68A5   LD       V8, #A5         ; Load 165 into V8
$9AA    $9028   UNKNOWN  $9028           ; Unknown 9xxx instruction
$9AC    $72D8   ADD      V2, #D8         ; Add 216 to V2
$9AE    $6BE8   LD       VB, #E8         ; Load 232 into VB
$9B0    $9441   UNKNOWN  $9441           ; Unknown 9xxx instruction
$9B2    $CF36   RND      VF, #36         ; VF = random & 36
$9B4    $D5F0   DRW      V5, VF, #0      ; Draw 0-byte sprite at V5, VF
$9B6    $FB71   UNKNOWN  FB71            ; Unknown Fxxx instruction
$9B8    $0A9E   SYS      $A9E            ; System call to A9E
$9BA    $2F01   CALL     $F01            ; Call subroutine at F01
$9BC    $5398   UNKNOWN  $5398           ; Unknown 5xxx instruction
$9BE    $3AAF   SE       VA, #AF         ; Skip if VA == 175
$9C0    $75A7   ADD      V5, #A7         ; Add 167 to V5
$9C2    $7052   ADD      V0, #52         ; Add 82 to V0
$9C4    $EEDF   UNKNOWN  $EEDF           ; Unknown Exxx instruction
$9C6    $A1F9   LD       I, $1F9         ; Load 1F9 into I
$9C8    $CE26   RND      VE, #26         ; VE = random & 26
$9CA    $409D   SNE      V0, #9D         ; Skip if V0 != 157
$9CC    $7AFF   ADD      VA, #FF         ; Add 255 to VA
$9CE    $1AAF   JP       $AAF            ; Jump to AAF
$9D0    $526F   UNKNOWN  $526F           ; Unknown 5xxx instruction
$9D2    $C7EC   RND      V7, #EC         ; V7 = random & EC
$9D4    $4D55   SNE      VD, #55         ; Skip if VD != 85
$9D6    $AB0E   LD       I, $B0E         ; Load B0E into I
$9D8    $6832   LD       V8, #32         ; Load 50 into V8
$9DA    $C834   RND      V8, #34         ; V8 = random & 34
$9DC    $B717   JP       V0, $717        ; Jump to V0 + 717
$9DE    $3918   SE       V9, #18         ; Skip if V9 == 24
$9E0    $056D   SYS      $56D            ; System call to 56D
$9E2    $4127   SNE      V1, #27         ; Skip if V1 != 39
$9E4    $260B   CALL     $60B            ; Call subroutine at 60B
$9E6    $693B   LD       V9, #3B         ; Load 59 into V9
$9E8    $E691   UNKNOWN  $E691           ; Unknown Exxx instruction
$9EA    $B95B   JP       V0, $95B        ; Jump to V0 + 95B
$9EC    $A606   LD       I, $606         ; Load 606 into I
$9EE    $21C9   CALL     $1C9            ; Call subroutine at 1C9
$9F0    $DC6A   DRW      VC, V6, #A      ; Draw 10-byte sprite at VC, V6
$9F2    $2371   CALL     $371            ; Call subroutine at 371
$9F4    $444E   SNE      V4, #4E         ; Skip if V4 != 78
$9F6    $4B4B   SNE      VB, #4B         ; Skip if VB != 75
$9F8    $8573   XOR      V5, V7          ; V5 ^= V7
$9FA    $9803   UNKNOWN  $9803           ; Unknown 9xxx instruction
$9FC    $3950   SE       V9, #50         ; Skip if V9 == 80
$9FE    $FC74   UNKNOWN  FC74            ; Unknown Fxxx instruction
$A00    $668F   LD       V6, #8F         ; Load 143 into V6
$A02    $6D48   LD       VD, #48         ; Load 72 into VD
$A04    $F423   UNKNOWN  F423            ; Unknown Fxxx instruction
$A06    $4F49   SNE      VF, #49         ; Skip if VF != 73
$A08    $1EE4   JP       $EE4            ; Jump to EE4
$A0A    $0E74   SYS      $E74            ; System call to E74
$A0C    $BEB6   JP       V0, $EB6        ; Jump to V0 + EB6
$A0E    $61CD   LD       V1, #CD         ; Load 205 into V1
$A10    $BA0F   JP       V0, $A0F        ; Jump to V0 + A0F
$A12    $929A   UNKNOWN  $929A           ; Unknown 9xxx instruction
$A14    $6CE1   LD       VC, #E1         ; Load 225 into VC
$A16    $43C0   SNE      V3, #C0         ; Skip if V3 != 192
$A18    $8C90   LD       VC, V9          ; VC = V9
$A1A    $35A0   SE       V5, #A0         ; Skip if V5 == 160
$A1C    $046E   SYS      $46E            ; System call to 46E
$A1E    $15B9   JP       $5B9            ; Jump to 5B9
$A20    $B03E   JP       V0, $03E        ; Jump to V0 + 03E
$A22    $114A   JP       $14A            ; Jump to 14A
$A24    $D2AF   DRW      V2, VA, #F      ; Draw 15-byte sprite at V2, VA
$A26    $999E   UNKNOWN  $999E           ; Unknown 9xxx instruction
$A28    $EE68   UNKNOWN  $EE68           ; Unknown Exxx instruction
$A2A    $3D2A   SE       VD, #2A         ; Skip if VD == 42
$A2C    $A42A   LD       I, $42A         ; Load 42A into I
$A2E    $CD16   RND      VD, #16         ; VD = random & 16
$A30    $4B96   SNE      VB, #96         ; Skip if VB != 150
$A32    $4E31   SNE      VE, #31         ; Skip if VE != 49
$A34    $BF6E   JP       V0, $F6E        ; Jump to V0 + F6E
$A36    $ECCD   UNKNOWN  $ECCD           ; Unknown Exxx instruction
$A38    $8589   UNKNOWN  8589            ; Unknown 8xxx instruction
$A3A    $7416   ADD      V4, #16         ; Add 22 to V4
$A3C    $DE3E   DRW      VE, V3, #E      ; Draw 14-byte sprite at VE, V3
$A3E    $B9ED   JP       V0, $9ED        ; Jump to V0 + 9ED
$A40    $671D   LD       V7, #1D         ; Load 29 into V7
$A42    $30DA   SE       V0, #DA         ; Skip if V0 == 218
$A44    $314E   SE       V1, #4E         ; Skip if V1 == 78
$A46    $E30E   UNKNOWN  $E30E           ; Unknown Exxx instruction
$A48    $D3C3   DRW      V3, VC, #3      ; Draw 3-byte sprite at V3, VC
$A4A    $858F   UNKNOWN  858F            ; Unknown 8xxx instruction
$A4C    $11CD   JP       $1CD            ; Jump to 1CD
$A4E    $8019   UNKNOWN  8019            ; Unknown 8xxx instruction
$A50    $CF00   RND      VF, #00         ; VF = random & 00
$A52    $10E4   JP       $0E4            ; Jump to 0E4
$A54    $3F40   SE       VF, #40         ; Skip if VF == 64
$A56    $FF27   UNKNOWN  FF27            ; Unknown Fxxx instruction
$A58    $6D33   LD       VD, #33         ; Load 51 into VD
$A5A    $7492   ADD      V4, #92         ; Add 146 to V4
$A5C    $A260   LD       I, $260         ; Load 260 into I
$A5E    $5DBF   UNKNOWN  $5DBF           ; Unknown 5xxx instruction
$A60    $5370   SE       V3, V7          ; Skip if V3 == V7
$A62    $32DE   SE       V2, #DE         ; Skip if V2 == 222
$A64    $F58A   UNKNOWN  F58A            ; Unknown Fxxx instruction
$A66    $879A   UNKNOWN  879A            ; Unknown 8xxx instruction
$A68    $066A   SYS      $66A            ; System call to 66A
$A6A    $B469   JP       V0, $469        ; Jump to V0 + 469
$A6C    $65A8   LD       V5, #A8         ; Load 168 into V5
$A6E    $BCAD   JP       V0, $CAD        ; Jump to V0 + CAD
$A70    $5316   UNKNOWN  $5316           ; Unknown 5xxx instruction
$A72    $DFA6   DRW      VF, VA, #6      ; Draw 6-byte sprite at VF, VA
$A74    $7DA1   ADD      VD, #A1         ; Add 161 to VD
$A76    $AC37   LD       I, $C37         ; Load C37 into I
$A78    $ACF8   LD       I, $CF8         ; Load CF8 into I
$A7A    $03E2   SYS      $3E2            ; System call to 3E2
$A7C    $C9CC   RND      V9, #CC         ; V9 = random & CC
$A7E    $E3DD   UNKNOWN  $E3DD           ; Unknown Exxx instruction
$A80    $AE6C   LD       I, $E6C         ; Load E6C into I
$A82    $2ED4   CALL     $ED4            ; Call subroutine at ED4
$A84    $B421   JP       V0, $421        ; Jump to V0 + 421
$A86    $1ABE   JP       $ABE            ; Jump to ABE
$A88    $9639   UNKNOWN  $9639           ; Unknown 9xxx instruction
$A8A    $3B5B   SE       VB, #5B         ; Skip if VB == 91
$A8C    $52D5   UNKNOWN  $52D5           ; Unknown 5xxx instruction
$A8E    $28A4   CALL     $8A4            ; Call subroutine at 8A4
$A90    $ACF3   LD       I, $CF3         ; Load CF3 into I
$A92    $655A   LD       V5, #5A         ; Load 90 into V5
$A94    $B7DC   JP       V0, $7DC        ; Jump to V0 + 7DC
$A96    $BA6B   JP       V0, $A6B        ; Jump to V0 + A6B
$A98    $07FE   SYS      $7FE            ; System call to 7FE
$A9A    $343A   SE       V4, #3A         ; Skip if V4 == 58
$A9C    $D958   DRW      V9, V5, #8      ; Draw 8-byte sprite at V9, V5
$A9E    $FE2E   UNKNOWN  FE2E            ; Unknown Fxxx instruction
$AA0    $B1E9   JP       V0, $1E9        ; Jump to V0 + 1E9
$AA2    $FA9E   UNKNOWN  FA9E            ; Unknown Fxxx instruction
$AA4    $BFBD   JP       V0, $FBD        ; Jump to V0 + FBD
$AA6    $80CE   SHL      V0              ; V0 <<= 1, VF = MSB
$AA8    $1940   JP       $940            ; Jump to 940
$AAA    $7E03   ADD      VE, #03         ; Add 3 to VE
$AAC    $8FF2   AND      VF, VF          ; VF &= VF
$AAE    $CD16   RND      VD, #16         ; VD = random & 16
$AB0    $B2BE   JP       V0, $2BE        ; Jump to V0 + 2BE
$AB2    $F505   UNKNOWN  F505            ; Unknown Fxxx instruction
$AB4    $4A2E   SNE      VA, #2E         ; Skip if VA != 46
$AB6    $E1C7   UNKNOWN  $E1C7           ; Unknown Exxx instruction
$AB8    $30E6   SE       V0, #E6         ; Skip if V0 == 230
$ABA    $DD57   DRW      VD, V5, #7      ; Draw 7-byte sprite at VD, V5
$ABC    $DBE5   DRW      VB, VE, #5      ; Draw 5-byte sprite at VB, VE
$ABE    $7F32   ADD      VF, #32         ; Add 50 to VF
$AC0    $8C5E   SHL      VC              ; VC <<= 1, VF = MSB
$AC2    $2D84   CALL     $D84            ; Call subroutine at D84
$AC4    $93D9   UNKNOWN  $93D9           ; Unknown 9xxx instruction
$AC6    $A0FB   LD       I, $0FB         ; Load 0FB into I
$AC8    $86A8   UNKNOWN  86A8            ; Unknown 8xxx instruction
$ACA    $64B4   LD       V4, #B4         ; Load 180 into V4
$ACC    $7DA7   ADD      VD, #A7         ; Add 167 to VD
$ACE    $8A23   XOR      VA, V2          ; VA ^= V2
$AD0    $B4C4   JP       V0, $4C4        ; Jump to V0 + 4C4
$AD2    $4FA1   SNE      VF, #A1         ; Skip if VF != 161
$AD4    $5721   UNKNOWN  $5721           ; Unknown 5xxx instruction
$AD6    $4D48   SNE      VD, #48         ; Skip if VD != 72
$AD8    $59ED   UNKNOWN  $59ED           ; Unknown 5xxx instruction
$ADA    $399E   SE       V9, #9E         ; Skip if V9 == 158
$ADC    $D583   DRW      V5, V8, #3      ; Draw 3-byte sprite at V5, V8
$ADE    $C8F9   RND      V8, #F9         ; V8 = random & F9
$AE0    $FEC2   UNKNOWN  FEC2            ; Unknown Fxxx instruction
$AE2    $1D3A   JP       $D3A            ; Jump to D3A
$AE4    $1FC7   JP       $FC7            ; Jump to FC7
$AE6    $9350   SNE      V3, V5          ; Skip if V3 != V5
$AE8    $5C93   UNKNOWN  $5C93           ; Unknown 5xxx instruction
$AEA    $D3EF   DRW      V3, VE, #F      ; Draw 15-byte sprite at V3, VE
$AEC    $3750   SE       V7, #50         ; Skip if V7 == 80
$AEE    $B95B   JP       V0, $95B        ; Jump to V0 + 95B
$AF0    $5CD7   UNKNOWN  $5CD7           ; Unknown 5xxx instruction
$AF2    $FA18   LD       ST, VA          ; Sound timer = VA
$AF4    $507E   UNKNOWN  $507E           ; Unknown 5xxx instruction
$AF6    $607F   LD       V0, #7F         ; Load 127 into V0
$AF8    $E4D5   UNKNOWN  $E4D5           ; Unknown Exxx instruction
$AFA    $C4D8   RND      V4, #D8         ; V4 = random & D8
$AFC    $C68E   RND      V6, #8E         ; V6 = random & 8E
$AFE    $C14B   RND      V1, #4B         ; V1 = random & 4B
$B00    $9D23   UNKNOWN  $9D23           ; Unknown 9xxx instruction
$B02    $297A   CALL     $97A            ; Call subroutine at 97A
$B04    $D7FC   DRW      V7, VF, #C      ; Draw 12-byte sprite at V7, VF
$B06    $B6CF   JP       V0, $6CF        ; Jump to V0 + 6CF
$B08    $6522   LD       V5, #22         ; Load 34 into V5
$B0A    $C735   RND      V7, #35         ; V7 = random & 35
$B0C    $3CF0   SE       VC, #F0         ; Skip if VC == 240
$B0E    $AE26   LD       I, $E26         ; Load E26 into I
$B10    $0E68   SYS      $E68            ; System call to E68
$B12    $9C0E   UNKNOWN  $9C0E           ; Unknown 9xxx instruction
$B14    $A418   LD       I, $418         ; Load 418 into I
$B16    $43A3   SNE      V3, #A3         ; Skip if V3 != 163
$B18    $9831   UNKNOWN  $9831           ; Unknown 9xxx instruction
$B1A    $DA43   DRW      VA, V4, #3      ; Draw 3-byte sprite at VA, V4
$B1C    $4BD8   SNE      VB, #D8         ; Skip if VB != 216
$B1E    $360A   SE       V6, #0A         ; Skip if V6 == 10
$B20    $481A   SNE      V8, #1A         ; Skip if V8 != 26
$B22    $BEC7   JP       V0, $EC7        ; Jump to V0 + EC7
$B24    $10C0   JP       $0C0            ; Jump to 0C0
$B26    $C2F5   RND      V2, #F5         ; V2 = random & F5
$B28    $0217   SYS      $217            ; System call to 217
$B2A    $6158   LD       V1, #58         ; Load 88 into V1
$B2C    $1C21   JP       $C21            ; Jump to C21
$B2E    $7DE4   ADD      VD, #E4         ; Add 228 to VD
$B30    $BD1C   JP       V0, $D1C        ; Jump to V0 + D1C
$B32    $4E44   SNE      VE, #44         ; Skip if VE != 68
$B34    $6D54   LD       VD, #54         ; Load 84 into VD
$B36    $78CD   ADD      V8, #CD         ; Add 205 to V8
$B38    $3795   SE       V7, #95         ; Skip if V7 == 149
$B3A    $11FE   JP       $1FE            ; Jump to 1FE
$B3C    $E882   UNKNOWN  $E882           ; Unknown Exxx instruction
$B3E    $BB8D   JP       V0, $B8D        ; Jump to V0 + B8D
$B40    $38CF   SE       V8, #CF         ; Skip if V8 == 207
$B42    $C419   RND      V4, #19         ; V4 = random & 19
$B44    $9D0C   UNKNOWN  $9D0C           ; Unknown 9xxx instruction
$B46    $FA29   LD       F, VA           ; I = sprite address for digit VA
$B48    $9D3F   UNKNOWN  $9D3F           ; Unknown 9xxx instruction
$B4A    $8A35   SUB      VA, V3          ; VA -= V3, VF = !borrow
$B4C    $448D   SNE      V4, #8D         ; Skip if V4 != 141
$B4E    $FDD3   UNKNOWN  FDD3            ; Unknown Fxxx instruction
$B50    $384A   SE       V8, #4A         ; Skip if V8 == 74
$B52    $5AD6   UNKNOWN  $5AD6           ; Unknown 5xxx instruction
$B54    $C400   RND      V4, #00         ; V4 = random & 00
$B56    $8E1B   UNKNOWN  8E1B            ; Unknown 8xxx instruction
$B58    $1F80   JP       $F80            ; Jump to F80
$B5A    $355A   SE       V5, #5A         ; Skip if V5 == 90
$B5C    $14AE   JP       $4AE            ; Jump to 4AE
$B5E    $D377   DRW      V3, V7, #7      ; Draw 7-byte sprite at V3, V7
$B60    $4A95   SNE      VA, #95         ; Skip if VA != 149
$B62    $CCF5   RND      VC, #F5         ; VC = random & F5
$B64    $0C68   SYS      $C68            ; System call to C68
$B66    $D270   DRW      V2, V7, #0      ; Draw 0-byte sprite at V2, V7
$B68    $9BE2   UNKNOWN  $9BE2           ; Unknown 9xxx instruction
$B6A    $2DA5   CALL     $DA5            ; Call subroutine at DA5
$B6C    $981E   UNKNOWN  $981E           ; Unknown 9xxx instruction
$B6E    $41B6   SNE      V1, #B6         ; Skip if V1 != 182
$B70    $00C7   SYS      $0C7            ; System call to 0C7
$B72    $6374   LD       V3, #74         ; Load 116 into V3
$B74    $72D5   ADD      V2, #D5         ; Add 213 to V2
$B76    $AA66   LD       I, $A66         ; Load A66 into I
$B78    $CF04   RND      VF, #04         ; VF = random & 04
$B7A    $8690   LD       V6, V9          ; V6 = V9
$B7C    $5EFD   UNKNOWN  $5EFD           ; Unknown 5xxx instruction
$B7E    $1A57   JP       $A57            ; Jump to A57
$B80    $A729   LD       I, $729         ; Load 729 into I
$B82    $1DA2   JP       $DA2            ; Jump to DA2
$B84    $3AC6   SE       VA, #C6         ; Skip if VA == 198
$B86    $E062   UNKNOWN  $E062           ; Unknown Exxx instruction
$B88    $918E   UNKNOWN  $918E           ; Unknown 9xxx instruction
$B8A    $A5D6   LD       I, $5D6         ; Load 5D6 into I
$B8C    $2953   CALL     $953            ; Call subroutine at 953
$B8E    $DBF7   DRW      VB, VF, #7      ; Draw 7-byte sprite at VB, VF
$B90    $102B   JP       $02B            ; Jump to 02B
$B92    $B99E   JP       V0, $99E        ; Jump to V0 + 99E
$B94    $C817   RND      V8, #17         ; V8 = random & 17
$B96    $F0A5   UNKNOWN  F0A5            ; Unknown Fxxx instruction
$B98    $8995   SUB      V9, V9          ; V9 -= V9, VF = !borrow
$B9A    $B13A   JP       V0, $13A        ; Jump to V0 + 13A
$B9C    $8933   XOR      V9, V3          ; V9 ^= V3
$B9E    $1CF8   JP       $CF8            ; Jump to CF8
$BA0    $2F6F   CALL     $F6F            ; Call subroutine at F6F
$BA2    $F7FB   UNKNOWN  F7FB            ; Unknown Fxxx instruction
$BA4    $7BA2   ADD      VB, #A2         ; Add 162 to VB
$BA6    $D894   DRW      V8, V9, #4      ; Draw 4-byte sprite at V8, V9
$BA8    $74CB   ADD      V4, #CB         ; Add 203 to V4
$BAA    $EB9E   SKP      VB              ; Skip if key VB pressed
$BAC    $0048   SYS      $048            ; System call to 048
$BAE    $23FD   CALL     $3FD            ; Call subroutine at 3FD
$BB0    $B0AD   JP       V0, $0AD        ; Jump to V0 + 0AD
$BB2    $5B9E   UNKNOWN  $5B9E           ; Unknown 5xxx instruction
$BB4    $5C4F   UNKNOWN  $5C4F           ; Unknown 5xxx instruction
$BB6    $EE00   UNKNOWN  $EE00           ; Unknown Exxx instruction
$BB8    $161A   JP       $61A            ; Jump to 61A
$BBA    $DC9D   DRW      VC, V9, #D      ; Draw 13-byte sprite at VC, V9
$BBC    $92ED   UNKNOWN  $92ED           ; Unknown 9xxx instruction
$BBE    $7EBC   ADD      VE, #BC         ; Add 188 to VE
$BC0    $7C84   ADD      VC, #84         ; Add 132 to VC
$BC2    $AC90   LD       I, $C90         ; Load C90 into I
$BC4    $8468   UNKNOWN  8468            ; Unknown 8xxx instruction
$BC6    $F850   UNKNOWN  F850            ; Unknown Fxxx instruction
$BC8    $4795   SNE      V7, #95         ; Skip if V7 != 149
$BCA    $FA83   UNKNOWN  FA83            ; Unknown Fxxx instruction
$BCC    $8FEA   UNKNOWN  8FEA            ; Unknown 8xxx instruction
$BCE    $5A51   UNKNOWN  $5A51           ; Unknown 5xxx instruction
$BD0    $E0F2   UNKNOWN  $E0F2           ; Unknown Exxx instruction
$BD2    $4DDF   SNE      VD, #DF         ; Skip if VD != 223
$BD4    $3300   SE       V3, #00         ; Skip if V3 == 0
$BD6    $AFD8   LD       I, $FD8         ; Load FD8 into I
$BD8    $F0C2   UNKNOWN  F0C2            ; Unknown Fxxx instruction
$BDA    $ED9A   UNKNOWN  $ED9A           ; Unknown Exxx instruction
$BDC    $6EE2   LD       VE, #E2         ; Load 226 into VE
$BDE    $400B   SNE      V0, #0B         ; Skip if V0 != 11
$BE0    $A370   LD       I, $370         ; Load 370 into I
$BE2    $23BB   CALL     $3BB            ; Call subroutine at 3BB
$BE4    $29ED   CALL     $9ED            ; Call subroutine at 9ED
$BE6    $69E5   LD       V9, #E5         ; Load 229 into V9
$BE8    $BC7A   JP       V0, $C7A        ; Jump to V0 + C7A
$BEA    $7964   ADD      V9, #64         ; Add 100 to V9
$BEC    $3BEE   SE       VB, #EE         ; Skip if VB == 238
$BEE    $F501   UNKNOWN  F501            ; Unknown Fxxx instruction
$BF0    $0AA7   SYS      $AA7            ; System call to AA7
$BF2    $9948   UNKNOWN  $9948           ; Unknown 9xxx instruction
$BF4    $B08E   JP       V0, $08E        ; Jump to V0 + 08E
$BF6    $0B59   SYS      $B59            ; System call to B59
$BF8    $EC15   UNKNOWN  $EC15           ; Unknown Exxx instruction
$BFA    $1533   JP       $533            ; Jump to 533
$BFC    $761E   ADD      V6, #1E         ; Add 30 to V6
$BFE    $3F91   SE       VF, #91         ; Skip if VF == 145
$C00    $2B60   CALL     $B60            ; Call subroutine at B60
$C02    $C942   RND      V9, #42         ; V9 = random & 42
$C04    $908A   UNKNOWN  $908A           ; Unknown 9xxx instruction
$C06    $D0EE   DRW      V0, VE, #E      ; Draw 14-byte sprite at V0, VE
$C08    $B015   JP       V0, $015        ; Jump to V0 + 015
$C0A    $8AFB   UNKNOWN  8AFB            ; Unknown 8xxx instruction
$C0C    $40DC   SNE      V0, #DC         ; Skip if V0 != 220
$C0E    $3982   SE       V9, #82         ; Skip if V9 == 130
$C10    $2413   CALL     $413            ; Call subroutine at 413
$C12    $77C1   ADD      V7, #C1         ; Add 193 to V7
$C14    $09AE   SYS      $9AE            ; System call to 9AE
$C16    $64B5   LD       V4, #B5         ; Load 181 into V4
$C18    $91DB   UNKNOWN  $91DB           ; Unknown 9xxx instruction
$C1A    $B079   JP       V0, $079        ; Jump to V0 + 079
$C1C    $73CC   ADD      V3, #CC         ; Add 204 to V3
$C1E    $BB8A   JP       V0, $B8A        ; Jump to V0 + B8A
$C20    $3554   SE       V5, #54         ; Skip if V5 == 84
$C22    $9581   UNKNOWN  $9581           ; Unknown 9xxx instruction
$C24    $E7F3   UNKNOWN  $E7F3           ; Unknown Exxx instruction
$C26    $E7DF   UNKNOWN  $E7DF           ; Unknown Exxx instruction
$C28    $A948   LD       I, $948         ; Load 948 into I
$C2A    $9931   UNKNOWN  $9931           ; Unknown 9xxx instruction
$C2C    $9439   UNKNOWN  $9439           ; Unknown 9xxx instruction
$C2E    $ED2B   UNKNOWN  $ED2B           ; Unknown Exxx instruction
$C30    $23A2   CALL     $3A2            ; Call subroutine at 3A2
$C32    $3D74   SE       VD, #74         ; Skip if VD == 116
$C34    $1849   JP       $849            ; Jump to 849
$C36    $6EAC   LD       VE, #AC         ; Load 172 into VE
$C38    $8328   UNKNOWN  8328            ; Unknown 8xxx instruction
$C3A    $7CDF   ADD      VC, #DF         ; Add 223 to VC
$C3C    $7538   ADD      V5, #38         ; Add 56 to V5
$C3E    $0B84   SYS      $B84            ; System call to B84
$C40    $7972   ADD      V9, #72         ; Add 114 to V9
$C42    $B3FA   JP       V0, $3FA        ; Jump to V0 + 3FA
$C44    $DDCF   DRW      VD, VC, #F      ; Draw 15-byte sprite at VD, VC
$C46    $FA3D   UNKNOWN  FA3D            ; Unknown Fxxx instruction
$C48    $5D79   UNKNOWN  $5D79           ; Unknown 5xxx instruction
$C4A    $799A   ADD      V9, #9A         ; Add 154 to V9
$C4C    $2722   CALL     $722            ; Call subroutine at 722
$C4E    $BAEC   JP       V0, $AEC        ; Jump to V0 + AEC
$C50    $515D   UNKNOWN  $515D           ; Unknown 5xxx instruction
$C52    $6FD2   LD       VF, #D2         ; Load 210 into VF
$C54    $989C   UNKNOWN  $989C           ; Unknown 9xxx instruction
$C56    $2D30   CALL     $D30            ; Call subroutine at D30
$C58    $94CB   UNKNOWN  $94CB           ; Unknown 9xxx instruction
$C5A    $4F55   SNE      VF, #55         ; Skip if VF != 85
$C5C    $BC49   JP       V0, $C49        ; Jump to V0 + C49
$C5E    $D0DE   DRW      V0, VD, #E      ; Draw 14-byte sprite at V0, VD
$C60    $727E   ADD      V2, #7E         ; Add 126 to V2
$C62    $F81E   ADD      I, V8           ; I += V8
$C64    $392A   SE       V9, #2A         ; Skip if V9 == 42
$C66    $E550   UNKNOWN  $E550           ; Unknown Exxx instruction
$C68    $DD56   DRW      VD, V5, #6      ; Draw 6-byte sprite at VD, V5
$C6A    $73BC   ADD      V3, #BC         ; Add 188 to V3
$C6C    $5B10   SE       VB, V1          ; Skip if VB == V1
$C6E    $5D6F   UNKNOWN  $5D6F           ; Unknown 5xxx instruction
$C70    $9FFC   UNKNOWN  $9FFC           ; Unknown 9xxx instruction
$C72    $0DBB   SYS      $DBB            ; System call to DBB
$C74    $EDBC   UNKNOWN  $EDBC           ; Unknown Exxx instruction
$C76    $9F2A   UNKNOWN  $9F2A           ; Unknown 9xxx instruction
$C78    $03A4   SYS      $3A4            ; System call to 3A4
$C7A    $8AC5   SUB      VA, VC          ; VA -= VC, VF = !borrow
$C7C    $1C90   JP       $C90            ; Jump to C90
$C7E    $52CB   UNKNOWN  $52CB           ; Unknown 5xxx instruction
$C80    $B95B   JP       V0, $95B        ; Jump to V0 + 95B
$C82    $4094   SNE      V0, #94         ; Skip if V0 != 148
$C84    $DBF4   DRW      VB, VF, #4      ; Draw 4-byte sprite at VB, VF
$C86    $C6D4   RND      V6, #D4         ; V6 = random & D4
$C88    $D9FF   DRW      V9, VF, #F      ; Draw 15-byte sprite at V9, VF
$C8A    $9CFE   UNKNOWN  $9CFE           ; Unknown 9xxx instruction
$C8C    $BEA0   JP       V0, $EA0        ; Jump to V0 + EA0
$C8E    $7D27   ADD      VD, #27         ; Add 39 to VD
$C90    $B5F8   JP       V0, $5F8        ; Jump to V0 + 5F8
$C92    $7717   ADD      V7, #17         ; Add 23 to V7
$C94    $3619   SE       V6, #19         ; Skip if V6 == 25
$C96    $04B0   SYS      $4B0            ; System call to 4B0
$C98    $D2F8   DRW      V2, VF, #8      ; Draw 8-byte sprite at V2, VF
$C9A    $85A9   UNKNOWN  85A9            ; Unknown 8xxx instruction
$C9C    $9721   UNKNOWN  $9721           ; Unknown 9xxx instruction
$C9E    $AEDA   LD       I, $EDA         ; Load EDA into I
$CA0    $BE58   JP       V0, $E58        ; Jump to V0 + E58
$CA2    $AE8B   LD       I, $E8B         ; Load E8B into I
$CA4    $B64B   JP       V0, $64B        ; Jump to V0 + 64B
$CA6    $1F02   JP       $F02            ; Jump to F02
$CA8    $52D9   UNKNOWN  $52D9           ; Unknown 5xxx instruction
$CAA    $286C   CALL     $86C            ; Call subroutine at 86C
$CAC    $35BE   SE       V5, #BE         ; Skip if V5 == 190
$CAE    $9CF6   UNKNOWN  $9CF6           ; Unknown 9xxx instruction
$CB0    $CEA8   RND      VE, #A8         ; VE = random & A8
$CB2    $4522   SNE      V5, #22         ; Skip if V5 != 34
$CB4    $6B04   LD       VB, #04         ; Load 4 into VB
$CB6    $20C5   CALL     $0C5            ; Call subroutine at 0C5
$CB8    $A120   LD       I, $120         ; Load 120 into I
$CBA    $8740   LD       V7, V4          ; V7 = V4
$CBC    $442E   SNE      V4, #2E         ; Skip if V4 != 46
$CBE    $98FB   UNKNOWN  $98FB           ; Unknown 9xxx instruction
$CC0    $DC73   DRW      VC, V7, #3      ; Draw 3-byte sprite at VC, V7
$CC2    $B7BE   JP       V0, $7BE        ; Jump to V0 + 7BE
$CC4    $E54E   UNKNOWN  $E54E           ; Unknown Exxx instruction
$CC6    $F3EE   UNKNOWN  F3EE            ; Unknown Fxxx instruction
$CC8    $8D83   XOR      VD, V8          ; VD ^= V8
$CCA    $BB86   JP       V0, $B86        ; Jump to V0 + B86
$CCC    $57E6   UNKNOWN  $57E6           ; Unknown 5xxx instruction
$CCE    $536E   UNKNOWN  $536E           ; Unknown 5xxx instruction
$CD0    $A78F   LD       I, $78F         ; Load 78F into I
$CD2    $E9D7   UNKNOWN  $E9D7           ; Unknown Exxx instruction
$CD4    $E246   UNKNOWN  $E246           ; Unknown Exxx instruction
$CD6    $5241   UNKNOWN  $5241           ; Unknown 5xxx instruction
$CD8    $9697   UNKNOWN  $9697           ; Unknown 9xxx instruction
$CDA    $BAEE   JP       V0, $AEE        ; Jump to V0 + AEE
$CDC    $258E   CALL     $58E            ; Call subroutine at 58E
$CDE    $BCCF   JP       V0, $CCF        ; Jump to V0 + CCF
$CE0    $E81E   UNKNOWN  $E81E           ; Unknown Exxx instruction
$CE2    $F5B2   UNKNOWN  F5B2            ; Unknown Fxxx instruction
$CE4    $F8C8   UNKNOWN  F8C8            ; Unknown Fxxx instruction
$CE6    $3272   SE       V2, #72         ; Skip if V2 == 114
$CE8    $05C1   SYS      $5C1            ; System call to 5C1
$CEA    $65A0   LD       V5, #A0         ; Load 160 into V5
$CEC    $2866   CALL     $866            ; Call subroutine at 866
$CEE    $8DCE   SHL      VD              ; VD <<= 1, VF = MSB
$CF0    $D363   DRW      V3, V6, #3      ; Draw 3-byte sprite at V3, V6
$CF2    $3027   SE       V0, #27         ; Skip if V0 == 39
$CF4    $1A83   JP       $A83            ; Jump to A83
$CF6    $1417   JP       $417            ; Jump to 417
$CF8    $65A9   LD       V5, #A9         ; Load 169 into V5
$CFA    $D0B5   DRW      V0, VB, #5      ; Draw 5-byte sprite at V0, VB
$CFC    $94A7   UNKNOWN  $94A7           ; Unknown 9xxx instruction
$CFE    $1270   JP       $270            ; Jump to 270
$D00    $1658   JP       $658            ; Jump to 658
$D02    $25F5   CALL     $5F5            ; Call subroutine at 5F5
$D04    $D4F6   DRW      V4, VF, #6      ; Draw 6-byte sprite at V4, VF
$D06    $8B15   SUB      VB, V1          ; VB -= V1, VF = !borrow
$D08    $48A7   SNE      V8, #A7         ; Skip if V8 != 167
$D0A    $C6C4   RND      V6, #C4         ; V6 = random & C4
$D0C    $6969   LD       V9, #69         ; Load 105 into V9
$D0E    $8A25   SUB      VA, V2          ; VA -= V2, VF = !borrow
$D10    $F521   UNKNOWN  F521            ; Unknown Fxxx instruction
$D12    $82B7   SUBN     V2, VB          ; V2 = VB - V2, VF = !borrow
$D14    $34D7   SE       V4, #D7         ; Skip if V4 == 215
$D16    $38EF   SE       V8, #EF         ; Skip if V8 == 239
$D18    $4007   SNE      V0, #07         ; Skip if V0 != 7
$D1A    $9D35   UNKNOWN  $9D35           ; Unknown 9xxx instruction
$D1C    $B918   JP       V0, $918        ; Jump to V0 + 918
$D1E    $06BB   SYS      $6BB            ; System call to 6BB
$D20    $49DC   SNE      V9, #DC         ; Skip if V9 != 220
$D22    $8605   SUB      V6, V0          ; V6 -= V0, VF = !borrow
$D24    $1F7C   JP       $F7C            ; Jump to F7C
$D26    $BFF1   JP       V0, $FF1        ; Jump to V0 + FF1
$D28    $9B9F   UNKNOWN  $9B9F           ; Unknown 9xxx instruction
$D2A    $172D   JP       $72D            ; Jump to 72D
$D2C    $0951   SYS      $951            ; System call to 951
$D2E    $BEB6   JP       V0, $EB6        ; Jump to V0 + EB6
$D30    $DF5D   DRW      VF, V5, #D      ; Draw 13-byte sprite at VF, V5
$D32    $78D3   ADD      V8, #D3         ; Add 211 to V8
$D34    $5C91   UNKNOWN  $5C91           ; Unknown 5xxx instruction
$D36    $4174   SNE      V1, #74         ; Skip if V1 != 116
$D38    $3E3A   SE       VE, #3A         ; Skip if VE == 58
$D3A    $02EB   SYS      $2EB            ; System call to 2EB
$D3C    $14A8   JP       $4A8            ; Jump to 4A8
$D3E    $F6BF   UNKNOWN  F6BF            ; Unknown Fxxx instruction
$D40    $044E   SYS      $44E            ; System call to 44E
$D42    $7513   ADD      V5, #13         ; Add 19 to V5
$D44    $7F64   ADD      VF, #64         ; Add 100 to VF
$D46    $0AA9   SYS      $AA9            ; System call to AA9
$D48    $5D9A   UNKNOWN  $5D9A           ; Unknown 5xxx instruction
$D4A    $BE0E   JP       V0, $E0E        ; Jump to V0 + E0E
$D4C    $D14B   DRW      V1, V4, #B      ; Draw 11-byte sprite at V1, V4
$D4E    $74DA   ADD      V4, #DA         ; Add 218 to V4
$D50    $FA5B   UNKNOWN  FA5B            ; Unknown Fxxx instruction
$D52    $327E   SE       V2, #7E         ; Skip if V2 == 126
$D54    $1F15   JP       $F15            ; Jump to F15
$D56    $5A7E   UNKNOWN  $5A7E           ; Unknown 5xxx instruction
$D58    $68E2   LD       V8, #E2         ; Load 226 into V8
$D5A    $DEBA   DRW      VE, VB, #A      ; Draw 10-byte sprite at VE, VB
$D5C    $2E11   CALL     $E11            ; Call subroutine at E11
$D5E    $2A00   CALL     $A00            ; Call subroutine at A00
$D60    $3910   SE       V9, #10         ; Skip if V9 == 16
$D62    $577A   UNKNOWN  $577A           ; Unknown 5xxx instruction
$D64    $99CE   UNKNOWN  $99CE           ; Unknown 9xxx instruction
$D66    $9849   UNKNOWN  $9849           ; Unknown 9xxx instruction
$D68    $A0E5   LD       I, $0E5         ; Load 0E5 into I
$D6A    $85AD   UNKNOWN  85AD            ; Unknown 8xxx instruction
$D6C    $D108   DRW      V1, V0, #8      ; Draw 8-byte sprite at V1, V0
$D6E    $5AE1   UNKNOWN  $5AE1           ; Unknown 5xxx instruction
$D70    $9BEF   UNKNOWN  $9BEF           ; Unknown 9xxx instruction
$D72    $94D8   UNKNOWN  $94D8           ; Unknown 9xxx instruction
$D74    $2420   CALL     $420            ; Call subroutine at 420
$D76    $82D4   ADD      V2, VD          ; V2 += VD, VF = carry
$D78    $A5D2   LD       I, $5D2         ; Load 5D2 into I
$D7A    $AE45   LD       I, $E45         ; Load E45 into I
$D7C    $03B9   SYS      $3B9            ; System call to 3B9
$D7E    $F5AB   UNKNOWN  F5AB            ; Unknown Fxxx instruction
$D80    $86F7   SUBN     V6, VF          ; V6 = VF - V6, VF = !borrow
$D82    $028D   SYS      $28D            ; System call to 28D
$D84    $BD0B   JP       V0, $D0B        ; Jump to V0 + D0B
$D86    $EEEE   UNKNOWN  $EEEE           ; Unknown Exxx instruction
$D88    $10F0   JP       $0F0            ; Jump to 0F0
$D8A    $4028   SNE      V0, #28         ; Skip if V0 != 40
$D8C    $6FC6   LD       VF, #C6         ; Load 198 into VF
$D8E    $BF34   JP       V0, $F34        ; Jump to V0 + F34
$D90    $9B18   UNKNOWN  $9B18           ; Unknown 9xxx instruction
$D92    $4D74   SNE      VD, #74         ; Skip if VD != 116
$D94    $604F   LD       V0, #4F         ; Load 79 into V0
$D96    $3CEE   SE       VC, #EE         ; Skip if VC == 238
$D98    $CF59   RND      VF, #59         ; VF = random & 59
$D9A    $1F14   JP       $F14            ; Jump to F14
$D9C    $0320   SYS      $320            ; System call to 320
$D9E    $6EA2   LD       VE, #A2         ; Load 162 into VE
$DA0    $28F1   CALL     $8F1            ; Call subroutine at 8F1
$DA2    $B5D7   JP       V0, $5D7        ; Jump to V0 + 5D7
$DA4    $7447   ADD      V4, #47         ; Add 71 to V4
$DA6    $8B0C   UNKNOWN  8B0C            ; Unknown 8xxx instruction
$DA8    $15AC   JP       $5AC            ; Jump to 5AC
$DAA    $7E98   ADD      VE, #98         ; Add 152 to VE
$DAC    $31F1   SE       V1, #F1         ; Skip if V1 == 241
$DAE    $F8F1   UNKNOWN  F8F1            ; Unknown Fxxx instruction
$DB0    $C92D   RND      V9, #2D         ; V9 = random & 2D
$DB2    $2CC2   CALL     $CC2            ; Call subroutine at CC2
$DB4    $FE22   UNKNOWN  FE22            ; Unknown Fxxx instruction
$DB6    $55CB   UNKNOWN  $55CB           ; Unknown 5xxx instruction
$DB8    $BDF3   JP       V0, $DF3        ; Jump to V0 + DF3
$DBA    $3E39   SE       VE, #39         ; Skip if VE == 57
$DBC    $9894   UNKNOWN  $9894           ; Unknown 9xxx instruction
$DBE    $5E3B   UNKNOWN  $5E3B           ; Unknown 5xxx instruction
$DC0    $F10F   UNKNOWN  F10F            ; Unknown Fxxx instruction
$DC2    $7131   ADD      V1, #31         ; Add 49 to V1
$DC4    $E91F   UNKNOWN  $E91F           ; Unknown Exxx instruction
$DC6    $83BF   UNKNOWN  83BF            ; Unknown 8xxx instruction
$DC8    $9CD4   UNKNOWN  $9CD4           ; Unknown 9xxx instruction
$DCA    $EAC5   UNKNOWN  $EAC5           ; Unknown Exxx instruction
$DCC    $D602   DRW      V6, V0, #2      ; Draw 2-byte sprite at V6, V0
$DCE    $8C9D   UNKNOWN  8C9D            ; Unknown 8xxx instruction
$DD0    $ABCD   LD       I, $BCD         ; Load BCD into I
$DD2    $A04D   LD       I, $04D         ; Load 04D into I
$DD4    $D660   DRW      V6, V6, #0      ; Draw 0-byte sprite at V6, V6
$DD6    $C2BC   RND      V2, #BC         ; V2 = random & BC
$DD8    $C6D8   RND      V6, #D8         ; V6 = random & D8
$DDA    $6569   LD       V5, #69         ; Load 105 into V5
$DDC    $AAC1   LD       I, $AC1         ; Load AC1 into I
$DDE    $E125   UNKNOWN  $E125           ; Unknown Exxx instruction
$DE0    $141A   JP       $41A            ; Jump to 41A
$DE2    $E6DC   UNKNOWN  $E6DC           ; Unknown Exxx instruction
$DE4    $2E1F   CALL     $E1F            ; Call subroutine at E1F
$DE6    $A2A8   LD       I, $2A8         ; Load 2A8 into I
$DE8    $7FB5   ADD      VF, #B5         ; Add 181 to VF
$DEA    $E2D9   UNKNOWN  $E2D9           ; Unknown Exxx instruction
$DEC    $A652   LD       I, $652         ; Load 652 into I
$DEE    $008A   SYS      $08A            ; System call to 08A
$DF0    $F68C   UNKNOWN  F68C            ; Unknown Fxxx instruction
$DF2    $8E18   UNKNOWN  8E18            ; Unknown 8xxx instruction
$DF4    $58A7   UNKNOWN  $58A7           ; Unknown 5xxx instruction
$DF6    $B4E6   JP       V0, $4E6        ; Jump to V0 + 4E6
$DF8    $7BAD   ADD      VB, #AD         ; Add 173 to VB
$DFA    $CCFA   RND      VC, #FA         ; VC = random & FA
$DFC    $E0CA   UNKNOWN  $E0CA           ; Unknown Exxx instruction
$DFE    $A5FE   LD       I, $5FE         ; Load 5FE into I
$E00    $4394   SNE      V3, #94         ; Skip if V3 != 148
$E02    $391C   SE       V9, #1C         ; Skip if V9 == 28
$E04    $41E2   SNE      V1, #E2         ; Skip if V1 != 226
$E06    $A0EF   LD       I, $0EF         ; Load 0EF into I
$E08    $E15A   UNKNOWN  $E15A           ; Unknown Exxx instruction
$E0A    $56D0   SE       V6, VD          ; Skip if V6 == VD
$E0C    $8FF5   SUB      VF, VF          ; VF -= VF, VF = !borrow
$E0E    $81B8   UNKNOWN  81B8            ; Unknown 8xxx instruction
$E10    $27BB   CALL     $7BB            ; Call subroutine at 7BB
$E12    $2679   CALL     $679            ; Call subroutine at 679
$E14    $B13C   JP       V0, $13C        ; Jump to V0 + 13C
$E16    $625C   LD       V2, #5C         ; Load 92 into V2
$E18    $F325   UNKNOWN  F325            ; Unknown Fxxx instruction
$E1A    $932A   UNKNOWN  $932A           ; Unknown 9xxx instruction
$E1C    $9924   UNKNOWN  $9924           ; Unknown 9xxx instruction
$E1E    $BF68   JP       V0, $F68        ; Jump to V0 + F68
$E20    $0137   SYS      $137            ; System call to 137
$E22    $DC3C   DRW      VC, V3, #C      ; Draw 12-byte sprite at VC, V3
$E24    $EFCC   UNKNOWN  $EFCC           ; Unknown Exxx instruction
$E26    $C85C   RND      V8, #5C         ; V8 = random & 5C
$E28    $AE9E   LD       I, $E9E         ; Load E9E into I
$E2A    $6591   LD       V5, #91         ; Load 145 into V5
$E2C    $77C8   ADD      V7, #C8         ; Add 200 to V7
$E2E    $64C4   LD       V4, #C4         ; Load 196 into V4
$E30    $4C6F   SNE      VC, #6F         ; Skip if VC != 111
$E32    $DF05   DRW      VF, V0, #5      ; Draw 5-byte sprite at VF, V0
$E34    $2EA9   CALL     $EA9            ; Call subroutine at EA9
$E36    $0F2F   SYS      $F2F            ; System call to F2F
$E38    $8C2E   SHL      VC              ; VC <<= 1, VF = MSB
$E3A    $EEA3   UNKNOWN  $EEA3           ; Unknown Exxx instruction
$E3C    $E586   UNKNOWN  $E586           ; Unknown Exxx instruction
$E3E    $93F4   UNKNOWN  $93F4           ; Unknown 9xxx instruction
$E40    $04BA   SYS      $4BA            ; System call to 4BA
$E42    $3F9C   SE       VF, #9C         ; Skip if VF == 156
$E44    $E7AC   UNKNOWN  $E7AC           ; Unknown Exxx instruction
$E46    $D325   DRW      V3, V2, #5      ; Draw 5-byte sprite at V3, V2
$E48    $DBE4   DRW      VB, VE, #4      ; Draw 4-byte sprite at VB, VE
$E4A    $FE48   UNKNOWN  FE48            ; Unknown Fxxx instruction
$E4C    $2264   CALL     $264            ; Call subroutine at 264
$E4E    $3ABC   SE       VA, #BC         ; Skip if VA == 188
$E50    $7840   ADD      V8, #40         ; Add 64 to V8
$E52    $C94C   RND      V9, #4C         ; V9 = random & 4C
$E54    $B8FC   JP       V0, $8FC        ; Jump to V0 + 8FC
$E56    $B0EE   JP       V0, $0EE        ; Jump to V0 + 0EE
$E58    $CFB4   RND      VF, #B4         ; VF = random & B4
$E5A    $A835   LD       I, $835         ; Load 835 into I
$E5C    $D4BF   DRW      V4, VB, #F      ; Draw 15-byte sprite at V4, VB
$E5E    $B3B0   JP       V0, $3B0        ; Jump to V0 + 3B0
$E60    $DD18   DRW      VD, V1, #8      ; Draw 8-byte sprite at VD, V1
$E62    $79F5   ADD      V9, #F5         ; Add 245 to V9
$E64    $59B6   UNKNOWN  $59B6           ; Unknown 5xxx instruction
$E66    $864A   UNKNOWN  864A            ; Unknown 8xxx instruction
$E68    $0974   SYS      $974            ; System call to 974
$E6A    $4B1E   SNE      VB, #1E         ; Skip if VB != 30
$E6C    $80C3   XOR      V0, VC          ; V0 ^= VC
$E6E    $C679   RND      V6, #79         ; V6 = random & 79
$E70    $F1B2   UNKNOWN  F1B2            ; Unknown Fxxx instruction
$E72    $07E3   SYS      $7E3            ; System call to 7E3
$E74    $1FB2   JP       $FB2            ; Jump to FB2
$E76    $ED51   UNKNOWN  $ED51           ; Unknown Exxx instruction
$E78    $37B3   SE       V7, #B3         ; Skip if V7 == 179
$E7A    $A06A   LD       I, $06A         ; Load 06A into I
$E7C    $F431   UNKNOWN  F431            ; Unknown Fxxx instruction
$E7E    $97E3   UNKNOWN  $97E3           ; Unknown 9xxx instruction
$E80    $2B04   CALL     $B04            ; Call subroutine at B04
$E82    $E520   UNKNOWN  $E520           ; Unknown Exxx instruction
$E84    $EB1D   UNKNOWN  $EB1D           ; Unknown Exxx instruction
$E86    $1053   JP       $053            ; Jump to 053
$E88    $700A   ADD      V0, #0A         ; Add 10 to V0
$E8A    $488D   SNE      V8, #8D         ; Skip if V8 != 141
$E8C    $932D   UNKNOWN  $932D           ; Unknown 9xxx instruction
$E8E    $C1FC   RND      V1, #FC         ; V1 = random & FC
$E90    $8773   XOR      V7, V7          ; V7 ^= V7
$E92    $A861   LD       I, $861         ; Load 861 into I
$E94    $DC01   DRW      VC, V0, #1      ; Draw 1-byte sprite at VC, V0
$E96    $D65B   DRW      V6, V5, #B      ; Draw 11-byte sprite at V6, V5
$E98    $AA1C   LD       I, $A1C         ; Load A1C into I
$E9A    $6DA6   LD       VD, #A6         ; Load 166 into VD
$E9C    $A24D   LD       I, $24D         ; Load 24D into I
$E9E    $0232   SYS      $232            ; System call to 232
$EA0    $49B3   SNE      V9, #B3         ; Skip if V9 != 179
$EA2    $991C   UNKNOWN  $991C           ; Unknown 9xxx instruction
$EA4    $AB87   LD       I, $B87         ; Load B87 into I
$EA6    $864F   UNKNOWN  864F            ; Unknown 8xxx instruction
$EA8    $856A   UNKNOWN  856A            ; Unknown 8xxx instruction
$EAA    $271E   CALL     $71E            ; Call subroutine at 71E
$EAC    $A657   LD       I, $657         ; Load 657 into I
$EAE    $CE0E   RND      VE, #0E         ; VE = random & 0E
$EB0    $CC65   RND      VC, #65         ; VC = random & 65
$EB2    $3C02   SE       VC, #02         ; Skip if VC == 2
$EB4    $B088   JP       V0, $088        ; Jump to V0 + 088
$EB6    $A051   LD       I, $051         ; Load 051 into I
$EB8    $0BAC   SYS      $BAC            ; System call to BAC
$EBA    $AFAE   LD       I, $FAE         ; Load FAE into I
$EBC    $36E9   SE       V6, #E9         ; Skip if V6 == 233
$EBE    $4C7B   SNE      VC, #7B         ; Skip if VC != 123
$EC0    $1B0C   JP       $B0C            ; Jump to B0C
$EC2    $3FBE   SE       VF, #BE         ; Skip if VF == 190
$EC4    $65D9   LD       V5, #D9         ; Load 217 into V5
$EC6    $155D   JP       $55D            ; Jump to 55D
$EC8    $80DC   UNKNOWN  80DC            ; Unknown 8xxx instruction
$ECA    $0403   SYS      $403            ; System call to 403
$ECC    $1F69   JP       $F69            ; Jump to F69
$ECE    $6AEB   LD       VA, #EB         ; Load 235 into VA
$ED0    $A3F0   LD       I, $3F0         ; Load 3F0 into I
$ED2    $A4C9   LD       I, $4C9         ; Load 4C9 into I
$ED4    $FF61   UNKNOWN  FF61            ; Unknown Fxxx instruction
$ED6    $5643   UNKNOWN  $5643           ; Unknown 5xxx instruction
$ED8    $E990   UNKNOWN  $E990           ; Unknown Exxx instruction
$EDA    $D06B   DRW      V0, V6, #B      ; Draw 11-byte sprite at V0, V6
$EDC    $6209   LD       V2, #09         ; Load 9 into V2
$EDE    $25A8   CALL     $5A8            ; Call subroutine at 5A8
$EE0    $E109   UNKNOWN  $E109           ; Unknown Exxx instruction
$EE2    $1621   JP       $621            ; Jump to 621
$EE4    $881C   UNKNOWN  881C            ; Unknown 8xxx instruction
$EE6    $02C7   SYS      $2C7            ; System call to 2C7
$EE8    $240E   CALL     $40E            ; Call subroutine at 40E
$EEA    $C539   RND      V5, #39         ; V5 = random & 39
$EEC    $CB67   RND      VB, #67         ; VB = random & 67
$EEE    $7587   ADD      V5, #87         ; Add 135 to V5
$EF0    $E4D3   UNKNOWN  $E4D3           ; Unknown Exxx instruction
$EF2    $F3D0   UNKNOWN  F3D0            ; Unknown Fxxx instruction
$EF4    $0651   SYS      $651            ; System call to 651
$EF6    $D5E8   DRW      V5, VE, #8      ; Draw 8-byte sprite at V5, VE
$EF8    $118E   JP       $18E            ; Jump to 18E
$EFA    $D5AF   DRW      V5, VA, #F      ; Draw 15-byte sprite at V5, VA
$EFC    $E0DF   UNKNOWN  $E0DF           ; Unknown Exxx instruction
$EFE    $8C7E   SHL      VC              ; VC <<= 1, VF = MSB
$F00    $B543   JP       V0, $543        ; Jump to V0 + 543
$F02    $E6AC   UNKNOWN  $E6AC           ; Unknown Exxx instruction
$F04    $A5C7   LD       I, $5C7         ; Load 5C7 into I
$F06    $326E   SE       V2, #6E         ; Skip if V2 == 110
$F08    $A672   LD       I, $672         ; Load 672 into I
$F0A    $EE48   UNKNOWN  $EE48           ; Unknown Exxx instruction
$F0C    $EB09   UNKNOWN  $EB09           ; Unknown Exxx instruction
$F0E    $6D64   LD       VD, #64         ; Load 100 into VD
$F10    $1224   JP       $224            ; Jump to 224
$F12    $4309   SNE      V3, #09         ; Skip if V3 != 9
$F14    $1321   JP       $321            ; Jump to 321
$F16    $CAA9   RND      VA, #A9         ; VA = random & A9
$F18    $636F   LD       V3, #6F         ; Load 111 into V3
$F1A    $E903   UNKNOWN  $E903           ; Unknown Exxx instruction
$F1C    $4EDD   SNE      VE, #DD         ; Skip if VE != 221
$F1E    $857B   UNKNOWN  857B            ; Unknown 8xxx instruction
$F20    $1D4D   JP       $D4D            ; Jump to D4D
$F22    $8617   SUBN     V6, V1          ; V6 = V1 - V6, VF = !borrow
$F24    $6431   LD       V4, #31         ; Load 49 into V4
$F26    $D8A4   DRW      V8, VA, #4      ; Draw 4-byte sprite at V8, VA
$F28    $7EC5   ADD      VE, #C5         ; Add 197 to VE
$F2A    $C159   RND      V1, #59         ; V1 = random & 59
$F2C    $4A51   SNE      VA, #51         ; Skip if VA != 81
$F2E    $9A48   UNKNOWN  $9A48           ; Unknown 9xxx instruction
$F30    $AB1E   LD       I, $B1E         ; Load B1E into I
$F32    $7ECF   ADD      VE, #CF         ; Add 207 to VE
$F34    $B7FE   JP       V0, $7FE        ; Jump to V0 + 7FE
$F36    $7FA6   ADD      VF, #A6         ; Add 166 to VF
$F38    $6219   LD       V2, #19         ; Load 25 into V2
$F3A    $315F   SE       V1, #5F         ; Skip if V1 == 95
$F3C    $70A2   ADD      V0, #A2         ; Add 162 to V0
$F3E    $3406   SE       V4, #06         ; Skip if V4 == 6
$F40    $28FE   CALL     $8FE            ; Call subroutine at 8FE
$F42    $9A68   UNKNOWN  $9A68           ; Unknown 9xxx instruction
$F44    $8629   UNKNOWN  8629            ; Unknown 8xxx instruction
$F46    $4581   SNE      V5, #81         ; Skip if V5 != 129
$F48    $4B7A   SNE      VB, #7A         ; Skip if VB != 122
$F4A    $CB99   RND      VB, #99         ; VB = random & 99
$F4C    $5C01   UNKNOWN  $5C01           ; Unknown 5xxx instruction
$F4E    $982F   UNKNOWN  $982F           ; Unknown 9xxx instruction
$F50    $9E4D   UNKNOWN  $9E4D           ; Unknown 9xxx instruction
$F52    $5FD4   UNKNOWN  $5FD4           ; Unknown 5xxx instruction
$F54    $A2CF   LD       I, $2CF         ; Load 2CF into I
$F56    $0001   SYS      $001            ; System call to 001
$F58    $E69D   UNKNOWN  $E69D           ; Unknown Exxx instruction
$F5A    $48D0   SNE      V8, #D0         ; Skip if V8 != 208
$F5C    $00AD   SYS      $0AD            ; System call to 0AD
$F5E    $09FB   SYS      $9FB            ; System call to 9FB
$F60    $5779   UNKNOWN  $5779           ; Unknown 5xxx instruction
$F62    $B6C9   JP       V0, $6C9        ; Jump to V0 + 6C9
$F64    $3F86   SE       VF, #86         ; Skip if VF == 134
$F66    $14EE   JP       $4EE            ; Jump to 4EE
$F68    $8DEC   UNKNOWN  8DEC            ; Unknown 8xxx instruction
$F6A    $5C03   UNKNOWN  $5C03           ; Unknown 5xxx instruction
$F6C    $6D6A   LD       VD, #6A         ; Load 106 into VD
$F6E    $9ADF   UNKNOWN  $9ADF           ; Unknown 9xxx instruction
$F70    $5BBD   UNKNOWN  $5BBD           ; Unknown 5xxx instruction
$F72    $B50B   JP       V0, $50B        ; Jump to V0 + 50B
$F74    $C116   RND      V1, #16         ; V1 = random & 16
$F76    $440C   SNE      V4, #0C         ; Skip if V4 != 12
$F78    $8FF4   ADD      VF, VF          ; VF += VF, VF = carry
$F7A    $EF43   UNKNOWN  $EF43           ; Unknown Exxx instruction
$F7C    $A181   LD       I, $181         ; Load 181 into I
$F7E    $07F7   SYS      $7F7            ; System call to 7F7
$F80    $4F68   SNE      VF, #68         ; Skip if VF != 104
$F82    $9F21   UNKNOWN  $9F21           ; Unknown 9xxx instruction
$F84    $DA34   DRW      VA, V3, #4      ; Draw 4-byte sprite at VA, V3
$F86    $EDD5   UNKNOWN  $EDD5           ; Unknown Exxx instruction
$F88    $B4C3   JP       V0, $4C3        ; Jump to V0 + 4C3
$F8A    $4623   SNE      V6, #23         ; Skip if V6 != 35
$F8C    $EA0E   UNKNOWN  $EA0E           ; Unknown Exxx instruction
$F8E    $ECEF   UNKNOWN  $ECEF           ; Unknown Exxx instruction
$F90    $CE30   RND      VE, #30         ; VE = random & 30
$F92    $2FC6   CALL     $FC6            ; Call subroutine at FC6
$F94    $A44E   LD       I, $44E         ; Load 44E into I
$F96    $1EF3   JP       $EF3            ; Jump to EF3
$F98    $0B49   SYS      $B49            ; System call to B49
$F9A    $B220   JP       V0, $220        ; Jump to V0 + 220
$F9C    $16F8   JP       $6F8            ; Jump to 6F8
$F9E    $5DBA   UNKNOWN  $5DBA           ; Unknown 5xxx instruction
$FA0    $987F   UNKNOWN  $987F           ; Unknown 9xxx instruction
$FA2    $EEA9   UNKNOWN  $EEA9           ; Unknown Exxx instruction
$FA4    $CD29   RND      VD, #29         ; VD = random & 29
$FA6    $4D24   SNE      VD, #24         ; Skip if VD != 36
$FA8    $6635   LD       V6, #35         ; Load 53 into V6
$FAA    $782A   ADD      V8, #2A         ; Add 42 to V8
$FAC    $BE6D   JP       V0, $E6D        ; Jump to V0 + E6D
$FAE    $B8FF   JP       V0, $8FF        ; Jump to V0 + 8FF
$FB0    $5B17   UNKNOWN  $5B17           ; Unknown 5xxx instruction
$FB2    $6D0A   LD       VD, #0A         ; Load 10 into VD
$FB4    $C8D0   RND      V8, #D0         ; V8 = random & D0
$FB6    $A410   LD       I, $410         ; Load 410 into I
$FB8    $912F   UNKNOWN  $912F           ; Unknown 9xxx instruction
$FBA    $AAED   LD       I, $AED         ; Load AED into I
$FBC    $5A78   UNKNOWN  $5A78           ; Unknown 5xxx instruction
$FBE    $2C1A   CALL     $C1A            ; Call subroutine at C1A
$FC0    $88A8   UNKNOWN  88A8            ; Unknown 8xxx instruction
$FC2    $D5BB   DRW      V5, VB, #B      ; Draw 11-byte sprite at V5, VB
$FC4    $BEDF   JP       V0, $EDF        ; Jump to V0 + EDF
$FC6    $03CB   SYS      $3CB            ; System call to 3CB
$FC8    $EE98   UNKNOWN  $EE98           ; Unknown Exxx instruction
$FCA    $694B   LD       V9, #4B         ; Load 75 into V9
$FCC    $9B0F   UNKNOWN  $9B0F           ; Unknown 9xxx instruction
$FCE    $EB09   UNKNOWN  $EB09           ; Unknown Exxx instruction
$FD0    $6DEE   LD       VD, #EE         ; Load 238 into VD
$FD2    $94A2   UNKNOWN  $94A2           ; Unknown 9xxx instruction
$FD4    $6228   LD       V2, #28         ; Load 40 into V2
$FD6    $9251   UNKNOWN  $9251           ; Unknown 9xxx instruction
$FD8    $1699   JP       $699            ; Jump to 699
$FDA    $862D   UNKNOWN  862D            ; Unknown 8xxx instruction
$FDC    $3114   SE       V1, #14         ; Skip if V1 == 20
$FDE    $F5C9   UNKNOWN  F5C9            ; Unknown Fxxx instruction
$FE0    $985A   UNKNOWN  $985A           ; Unknown 9xxx instruction
$FE2    $F200   UNKNOWN  F200            ; Unknown Fxxx instruction
$FE4    $7782   ADD      V7, #82         ; Add 130 to V7
$FE6    $3869   SE       V8, #69         ; Skip if V8 == 105
$FE8    $8810   LD       V8, V1          ; V8 = V1
$FEA    $E2C7   UNKNOWN  $E2C7           ; Unknown Exxx instruction
$FEC    $9B23   UNKNOWN  $9B23           ; Unknown 9xxx instruction
$FEE    $482D   SNE      V8, #2D         ; Skip if V8 != 45
$FF0    $856C   UNKNOWN  856C            ; Unknown 8xxx instruction
$FF2    $B063   JP       V0, $063        ; Jump to V0 + 063
$FF4    $4613   SNE      V6, #13         ; Skip if V6 != 19
$FF6    $755B   ADD      V5, #5B         ; Add 91 to V5
$FF8    $ACA0   LD       I, $CA0         ; Load CA0 into I
$FFA    $4BED   SNE      VB, #ED         ; Skip if VB != 237
$FFC    $1A49   JP       $A49            ; Jump to A49
$FFE    $A3AF   LD       I, $3AF         ; Load 3AF into I

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 489 (27.3%)
  LD      : 241 (13.4%)
  JP      : 232 (12.9%)
  ADD     : 127 ( 7.1%)
  RND     : 119 ( 6.6%)
  SNE     : 116 ( 6.5%)
  SE      : 112 ( 6.2%)
  CALL    : 110 ( 6.1%)
  SYS     : 104 ( 5.8%)
  DRW     :  98 ( 5.5%)
  SUB     :  12 ( 0.7%)
  XOR     :   9 ( 0.5%)
  SHL     :   7 ( 0.4%)
  SUBN    :   5 ( 0.3%)
  AND     :   4 ( 0.2%)
  SHR     :   3 ( 0.2%)
  OR      :   3 ( 0.2%)
  SKP     :   1 ( 0.1%)

Memory Operations: 368 (20.5%)
Arithmetic Operations: 160 (8.9%)
