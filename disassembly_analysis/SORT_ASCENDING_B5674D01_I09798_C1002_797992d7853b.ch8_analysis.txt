
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B5674D01_I09798_C1002_797992d7853b.ch8
ROM Size: 3584 bytes
Instructions Found: 1791

DISCOVERY INFORMATION:
Batch: 5674
Instance: 9798
Direction: ascending
Final Array: [0, 0, 0, 5, 35, 64, 139, 152]
Operations: R:0 W:2 C:74 S:13

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 135
Sort Array References:
  $216: LD I, $EF2 ; Load EF2 into I
  $222: LD I, $66B ; Load 66B into I
  $228: LD I, $E4C ; Load E4C into I
  $256: LD I, $8E7 ; Load 8E7 into I
  $26C: LD I, $2CC ; Load 2CC into I
  $270: LD I, $FE8 ; Load FE8 into I
  $28C: LD I, $00D ; Load 00D into I
  $296: LD I, $423 ; Load 423 into I
  $2C8: LD I, $616 ; Load 616 into I
  $2CA: LD I, $95D ; Load 95D into I
  $2FA: LD I, $3FB ; Load 3FB into I
  $31C: LD I, $B0D ; Load B0D into I
  $328: LD I, $C83 ; Load C83 into I
  $36E: LD I, $359 ; Load 359 into I
  $37A: LD I, $496 ; Load 496 into I
  $392: LD I, $941 ; Load 941 into I
  $3C6: LD I, $25D ; Load 25D into I
  $3C8: ADD I, V0 ; I ADDRESS MANIPULATION
  $3F0: LD I, $D79 ; Load D79 into I
  $3FA: LD I, $7CB ; Load 7CB into I
  $3FE: LD I, $E97 ; Load E97 into I
  $40C: LD I, $71F ; Load 71F into I
  $412: LD I, $5BF ; Load 5BF into I
  $43A: LD I, $DB2 ; Load DB2 into I
  $466: LD I, $CAE ; Load CAE into I
  $46C: LD I, $D85 ; Load D85 into I
  $474: LD I, $A10 ; Load A10 into I
  $482: LD I, $77E ; Load 77E into I
  $498: LD I, $068 ; Load 068 into I
  $4A6: LD I, $15B ; Load 15B into I
  $4B2: LD I, $02A ; Load 02A into I
  $4BA: LD I, $D35 ; Load D35 into I
  $4CC: LD I, $4CE ; Load 4CE into I
  $4D2: LD I, $E17 ; Load E17 into I
  $4DA: LD I, $E9A ; Load E9A into I
  $4E2: LD I, $39C ; Load 39C into I
  $538: LD I, $82C ; Load 82C into I
  $53E: LD I, $C72 ; Load C72 into I
  $544: LD I, $FD9 ; Load FD9 into I
  $566: LD I, $B33 ; Load B33 into I
  $56A: LD I, $F80 ; Load F80 into I
  $572: LD I, $9B9 ; Load 9B9 into I
  $598: LD I, $229 ; Load 229 into I
  $5C0: LD I, $27B ; Load 27B into I
  $5D0: LD I, $481 ; Load 481 into I
  $62A: LD I, $DFB ; Load DFB into I
  $63A: LD I, $5A2 ; Load 5A2 into I
  $63C: LD I, $67F ; Load 67F into I
  $646: LD I, $A03 ; Load A03 into I
  $64E: LD I, $0F2 ; Load 0F2 into I
  $654: LD I, $753 ; Load 753 into I
  $69E: LD I, $2B3 ; Load 2B3 into I
  $6BA: LD I, $2FE ; Load 2FE into I
  $6C2: LD I, $3D4 ; Load 3D4 into I
  $6C4: LD I, $965 ; Load 965 into I
  $6CE: LD I, $DBF ; Load DBF into I
  $6F4: LD I, $22F ; Load 22F into I
  $70E: LD I, $2AB ; Load 2AB into I
  $712: LD I, $33F ; Load 33F into I
  $748: LD I, $B0D ; Load B0D into I
  $756: LD I, $440 ; Load 440 into I
  $762: LD I, $361 ; Load 361 into I
  $766: LD I, $49F ; Load 49F into I
  $76C: LD I, $C8B ; Load C8B into I
  $79A: LD I, $A55 ; Load A55 into I
  $7A2: LD I, $57C ; Load 57C into I
  $7A6: LD I, $E2B ; Load E2B into I
  $7B4: LD I, $FE4 ; Load FE4 into I
  $800: LD I, $77C ; Load 77C into I
  $848: LD I, $10A ; Load 10A into I
  $850: LD I, $F65 ; Load F65 into I
  $85C: LD I, $48C ; Load 48C into I
  $874: LD I, $343 ; Load 343 into I
  $87A: LD I, $2F2 ; Load 2F2 into I
  $89E: LD I, $2A9 ; Load 2A9 into I
  $8AC: LD I, $AD2 ; Load AD2 into I
  $8B4: LD I, $8A7 ; Load 8A7 into I
  $8C0: LD I, $EE1 ; Load EE1 into I
  $8EE: LD I, $EA6 ; Load EA6 into I
  $8F8: LD I, $602 ; Load 602 into I
  $916: LD I, $032 ; Load 032 into I
  $96A: LD I, $BE1 ; Load BE1 into I
  $99C: LD I, $0D4 ; Load 0D4 into I
  $9E0: LD I, $C96 ; Load C96 into I
  $A04: LD I, $182 ; Load 182 into I
  $A22: LD I, $AAA ; Load AAA into I
  $A2E: LD I, $CB5 ; Load CB5 into I
  $A30: LD I, $C33 ; Load C33 into I
  $A38: LD I, $AD3 ; Load AD3 into I
  $A9C: LD I, $E9F ; Load E9F into I
  $AA0: LD I, $E34 ; Load E34 into I
  $AA6: LD I, $B83 ; Load B83 into I
  $AF0: LD I, $B5D ; Load B5D into I
  $AFA: LD I, $857 ; Load 857 into I
  $B2A: LD I, $C4F ; Load C4F into I
  $B30: LD I, $68B ; Load 68B into I
  $B6A: LD I, $EBB ; Load EBB into I
  $B72: LD I, $2BF ; Load 2BF into I
  $B7A: LD I, $EAD ; Load EAD into I
  $B7C: LD I, $D06 ; Load D06 into I
  $B9A: LD I, $D0C ; Load D0C into I
  $BA6: LD I, $A49 ; Load A49 into I
  $BEC: LD I, $CE8 ; Load CE8 into I
  $C2E: LD I, $5A9 ; Load 5A9 into I
  $C6A: LD I, $DDA ; Load DDA into I
  $C94: LD I, $CCC ; Load CCC into I
  $CA2: LD I, $CAC ; Load CAC into I
  $CA4: LD I, $111 ; Load 111 into I
  $CCC: LD I, $39E ; Load 39E into I
  $CCE: LD I, $EF3 ; Load EF3 into I
  $CD4: LD I, $576 ; Load 576 into I
  $D10: LD I, $B80 ; Load B80 into I
  $D1A: LD I, $2B5 ; Load 2B5 into I
  $D24: LD I, $0E5 ; Load 0E5 into I
  $D28: LD I, $D2C ; Load D2C into I
  $D6E: LD I, $627 ; Load 627 into I
  $D9E: LD I, $B46 ; Load B46 into I
  $DB6: LD I, $DBC ; Load DBC into I
  $DBE: LD I, $89C ; Load 89C into I
  $DCA: LD I, $D8A ; Load D8A into I
  $DCE: LD I, $187 ; Load 187 into I
  $E0A: LD I, $8D5 ; Load 8D5 into I
  $E12: LD I, $3CE ; Load 3CE into I
  $E2C: LD I, $ED5 ; Load ED5 into I
  $E4A: LD I, $9A2 ; Load 9A2 into I
  $EAC: LD I, $B2C ; Load B2C into I
  $EB6: LD I, $5FB ; Load 5FB into I
  $EBC: LD I, $DD7 ; Load DD7 into I
  $F10: LD I, $984 ; Load 984 into I
  $F4C: LD I, $F96 ; Load F96 into I
  $F86: LD I, $F5A ; Load F5A into I
  $FB8: LD I, $9F0 ; Load 9F0 into I
  $FBE: LD I, $BA8 ; Load BA8 into I
  $FC2: LD I, $CC5 ; Load CC5 into I
  $FD6: LD I, $78D ; Load 78D into I

CONTROL FLOW ANALYSIS:
Jumps: 208
Calls: 113
Branches: 226
Loops: 111
Loop Structures:
  $29C -> $1F4 (backward jump)
  $30C -> $027 (backward jump)
  $324 -> $323 (backward jump)
  $394 -> $227 (backward jump)
  $460 -> $1DA (backward jump)
  $530 -> $456 (backward jump)
  $5AA -> $206 (backward jump)
  $5CC -> $493 (backward jump)
  $5CE -> $218 (backward jump)
  $5D8 -> $19E (backward jump)
  $5E0 -> $03D (backward jump)
  $5F2 -> $129 (backward jump)
  $604 -> $5CD (backward jump)
  $640 -> $254 (backward jump)
  $642 -> $095 (backward jump)
  $650 -> $4DC (backward jump)
  $672 -> $0C6 (backward jump)
  $6D0 -> $566 (backward jump)
  $72A -> $696 (backward jump)
  $754 -> $3CB (backward jump)
  $764 -> $289 (backward jump)
  $778 -> $16B (backward jump)
  $784 -> $16F (backward jump)
  $78C -> $180 (backward jump)
  $7C0 -> $77C (backward jump)
  $81E -> $279 (backward jump)
  $82C -> $18D (backward jump)
  $838 -> $74B (backward jump)
  $878 -> $4A6 (backward jump)
  $8DC -> $2E1 (backward jump)
  $8FA -> $842 (backward jump)
  $90E -> $07D (backward jump)
  $93E -> $893 (backward jump)
  $948 -> $4DD (backward jump)
  $99E -> $598 (backward jump)
  $9A6 -> $1FE (backward jump)
  $9AA -> $844 (backward jump)
  $9AE -> $7DF (backward jump)
  $9CE -> $476 (backward jump)
  $9DA -> $2AA (backward jump)
  $9DC -> $374 (backward jump)
  $9F6 -> $41D (backward jump)
  $A3A -> $2C1 (backward jump)
  $A7A -> $315 (backward jump)
  $A7E -> $931 (backward jump)
  $AD2 -> $6CC (backward jump)
  $B06 -> $7D9 (backward jump)
  $B22 -> $05D (backward jump)
  $B28 -> $0B9 (backward jump)
  $B44 -> $7AB (backward jump)
  $B80 -> $009 (backward jump)
  $B88 -> $7E5 (backward jump)
  $BA2 -> $265 (backward jump)
  $BBA -> $B69 (backward jump)
  $BDE -> $25B (backward jump)
  $BE6 -> $54F (backward jump)
  $BF6 -> $211 (backward jump)
  $C08 -> $6CB (backward jump)
  $C10 -> $AA9 (backward jump)
  $C26 -> $8B8 (backward jump)
  $C30 -> $A62 (backward jump)
  $C38 -> $074 (backward jump)
  $C4C -> $BB3 (backward jump)
  $C56 -> $465 (backward jump)
  $C6E -> $0D7 (backward jump)
  $C84 -> $8D8 (backward jump)
  $CAC -> $A15 (backward jump)
  $CFA -> $34F (backward jump)
  $D00 -> $225 (backward jump)
  $D12 -> $A23 (backward jump)
  $D20 -> $8C9 (backward jump)
  $D56 -> $860 (backward jump)
  $D5C -> $B71 (backward jump)
  $D62 -> $5C6 (backward jump)
  $D66 -> $262 (backward jump)
  $D74 -> $5C0 (backward jump)
  $D76 -> $3D4 (backward jump)
  $D80 -> $11D (backward jump)
  $DA4 -> $C49 (backward jump)
  $DA6 -> $AB7 (backward jump)
  $DBC -> $654 (backward jump)
  $DD6 -> $ABF (backward jump)
  $DEA -> $439 (backward jump)
  $DF8 -> $6CD (backward jump)
  $E18 -> $C21 (backward jump)
  $E22 -> $274 (backward jump)
  $E2A -> $BB2 (backward jump)
  $E2E -> $C07 (backward jump)
  $E4E -> $C65 (backward jump)
  $E58 -> $413 (backward jump)
  $E5A -> $850 (backward jump)
  $E66 -> $BDA (backward jump)
  $E8A -> $B26 (backward jump)
  $E8E -> $528 (backward jump)
  $EB0 -> $1FF (backward jump)
  $ECC -> $851 (backward jump)
  $EE0 -> $CB6 (backward jump)
  $F04 -> $04A (backward jump)
  $F0A -> $BA4 (backward jump)
  $F1E -> $39B (backward jump)
  $F26 -> $1A3 (backward jump)
  $F28 -> $E8D (backward jump)
  $F2C -> $E8B (backward jump)
  $F32 -> $48F (backward jump)
  $F34 -> $3F4 (backward jump)
  $F7C -> $A67 (backward jump)
  $F8A -> $591 (backward jump)
  $F96 -> $254 (backward jump)
  $FBC -> $7E4 (backward jump)
  $FDA -> $CBD (backward jump)
  $FE8 -> $23C (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $C6BC   RND      V6, #BC         ; V6 = random & BC
$202    $93D1   UNKNOWN  $93D1           ; Unknown 9xxx instruction
$204    $C1CF   RND      V1, #CF         ; V1 = random & CF
$206    $FC33   LD       B, VC           ; Store BCD of VC at I, I+1, I+2
$208    $25C9   CALL     $5C9            ; Call subroutine at 5C9
$20A    $5FF6   UNKNOWN  $5FF6           ; Unknown 5xxx instruction
$20C    $3BBF   SE       VB, #BF         ; Skip if VB == 191
$20E    $5DF9   UNKNOWN  $5DF9           ; Unknown 5xxx instruction
$210    $E758   UNKNOWN  $E758           ; Unknown Exxx instruction
$212    $7D68   ADD      VD, #68         ; Add 104 to VD
$214    $8FB3   XOR      VF, VB          ; VF ^= VB
$216    $AEF2   LD       I, $EF2         ; Load EF2 into I
$218    $867B   UNKNOWN  867B            ; Unknown 8xxx instruction
$21A    $81F4   ADD      V1, VF          ; V1 += VF, VF = carry
$21C    $313E   SE       V1, #3E         ; Skip if V1 == 62
$21E    $52F9   UNKNOWN  $52F9           ; Unknown 5xxx instruction
$220    $9A47   UNKNOWN  $9A47           ; Unknown 9xxx instruction
$222    $A66B   LD       I, $66B         ; Load 66B into I
$224    $0792   SYS      $792            ; System call to 792
$226    $E16A   UNKNOWN  $E16A           ; Unknown Exxx instruction
$228    $AE4C   LD       I, $E4C         ; Load E4C into I
$22A    $5CE1   UNKNOWN  $5CE1           ; Unknown 5xxx instruction
$22C    $1E44   JP       $E44            ; Jump to E44
$22E    $87E8   UNKNOWN  87E8            ; Unknown 8xxx instruction
$230    $D27E   DRW      V2, V7, #E      ; Draw 14-byte sprite at V2, V7
$232    $660B   LD       V6, #0B         ; Load 11 into V6
$234    $03A6   SYS      $3A6            ; System call to 3A6
$236    $0458   SYS      $458            ; System call to 458
$238    $3EF6   SE       VE, #F6         ; Skip if VE == 246
$23A    $7EFA   ADD      VE, #FA         ; Add 250 to VE
$23C    $B50B   JP       V0, $50B        ; Jump to V0 + 50B
$23E    $EBE3   UNKNOWN  $EBE3           ; Unknown Exxx instruction
$240    $8635   SUB      V6, V3          ; V6 -= V3, VF = !borrow
$242    $6034   LD       V0, #34         ; Load 52 into V0
$244    $CB2B   RND      VB, #2B         ; VB = random & 2B
$246    $2C78   CALL     $C78            ; Call subroutine at C78
$248    $B7ED   JP       V0, $7ED        ; Jump to V0 + 7ED
$24A    $566A   UNKNOWN  $566A           ; Unknown 5xxx instruction
$24C    $25EB   CALL     $5EB            ; Call subroutine at 5EB
$24E    $9DBA   UNKNOWN  $9DBA           ; Unknown 9xxx instruction
$250    $D6EE   DRW      V6, VE, #E      ; Draw 14-byte sprite at V6, VE
$252    $53D9   UNKNOWN  $53D9           ; Unknown 5xxx instruction
$254    $8DD1   OR       VD, VD          ; VD |= VD
$256    $A8E7   LD       I, $8E7         ; Load 8E7 into I
$258    $4E96   SNE      VE, #96         ; Skip if VE != 150
$25A    $1E12   JP       $E12            ; Jump to E12
$25C    $E69A   UNKNOWN  $E69A           ; Unknown Exxx instruction
$25E    $096D   SYS      $96D            ; System call to 96D
$260    $05A2   SYS      $5A2            ; System call to 5A2
$262    $F276   UNKNOWN  F276            ; Unknown Fxxx instruction
$264    $93D2   UNKNOWN  $93D2           ; Unknown 9xxx instruction
$266    $141A   JP       $41A            ; Jump to 41A
$268    $E98D   UNKNOWN  $E98D           ; Unknown Exxx instruction
$26A    $3815   SE       V8, #15         ; Skip if V8 == 21
$26C    $A2CC   LD       I, $2CC         ; Load 2CC into I
$26E    $0465   SYS      $465            ; System call to 465
$270    $AFE8   LD       I, $FE8         ; Load FE8 into I
$272    $E2D2   UNKNOWN  $E2D2           ; Unknown Exxx instruction
$274    $636C   LD       V3, #6C         ; Load 108 into V3
$276    $2280   CALL     $280            ; Call subroutine at 280
$278    $8311   OR       V3, V1          ; V3 |= V1
$27A    $4500   SNE      V5, #00         ; Skip if V5 != 0
$27C    $E30B   UNKNOWN  $E30B           ; Unknown Exxx instruction
$27E    $D247   DRW      V2, V4, #7      ; Draw 7-byte sprite at V2, V4
$280    $02B4   SYS      $2B4            ; System call to 2B4
$282    $5730   SE       V7, V3          ; Skip if V7 == V3
$284    $ED95   UNKNOWN  $ED95           ; Unknown Exxx instruction
$286    $302D   SE       V0, #2D         ; Skip if V0 == 45
$288    $8E32   AND      VE, V3          ; VE &= V3
$28A    $80F1   OR       V0, VF          ; V0 |= VF
$28C    $A00D   LD       I, $00D         ; Load 00D into I
$28E    $428F   SNE      V2, #8F         ; Skip if V2 != 143
$290    $B56E   JP       V0, $56E        ; Jump to V0 + 56E
$292    $5D80   SE       VD, V8          ; Skip if VD == V8
$294    $17B8   JP       $7B8            ; Jump to 7B8
$296    $A423   LD       I, $423         ; Load 423 into I
$298    $0395   SYS      $395            ; System call to 395
$29A    $784D   ADD      V8, #4D         ; Add 77 to V8
$29C    $B1F4   JP       V0, $1F4        ; Jump to V0 + 1F4
$29E    $7FED   ADD      VF, #ED         ; Add 237 to VF
$2A0    $31B0   SE       V1, #B0         ; Skip if V1 == 176
$2A2    $4681   SNE      V6, #81         ; Skip if V6 != 129
$2A4    $01EC   SYS      $1EC            ; System call to 1EC
$2A6    $D670   DRW      V6, V7, #0      ; Draw 0-byte sprite at V6, V7
$2A8    $F304   UNKNOWN  F304            ; Unknown Fxxx instruction
$2AA    $5BA3   UNKNOWN  $5BA3           ; Unknown 5xxx instruction
$2AC    $2295   CALL     $295            ; Call subroutine at 295
$2AE    $9B21   UNKNOWN  $9B21           ; Unknown 9xxx instruction
$2B0    $7E2B   ADD      VE, #2B         ; Add 43 to VE
$2B2    $4BD5   SNE      VB, #D5         ; Skip if VB != 213
$2B4    $44C2   SNE      V4, #C2         ; Skip if V4 != 194
$2B6    $FD34   UNKNOWN  FD34            ; Unknown Fxxx instruction
$2B8    $D144   DRW      V1, V4, #4      ; Draw 4-byte sprite at V1, V4
$2BA    $FB42   UNKNOWN  FB42            ; Unknown Fxxx instruction
$2BC    $89C1   OR       V9, VC          ; V9 |= VC
$2BE    $EFAE   UNKNOWN  $EFAE           ; Unknown Exxx instruction
$2C0    $56E3   UNKNOWN  $56E3           ; Unknown 5xxx instruction
$2C2    $5B23   UNKNOWN  $5B23           ; Unknown 5xxx instruction
$2C4    $C4DE   RND      V4, #DE         ; V4 = random & DE
$2C6    $77E3   ADD      V7, #E3         ; Add 227 to V7
$2C8    $A616   LD       I, $616         ; Load 616 into I
$2CA    $A95D   LD       I, $95D         ; Load 95D into I
$2CC    $BBD9   JP       V0, $BD9        ; Jump to V0 + BD9
$2CE    $1C35   JP       $C35            ; Jump to C35
$2D0    $5BDA   UNKNOWN  $5BDA           ; Unknown 5xxx instruction
$2D2    $307E   SE       V0, #7E         ; Skip if V0 == 126
$2D4    $E972   UNKNOWN  $E972           ; Unknown Exxx instruction
$2D6    $41C1   SNE      V1, #C1         ; Skip if V1 != 193
$2D8    $8CC3   XOR      VC, VC          ; VC ^= VC
$2DA    $E94F   UNKNOWN  $E94F           ; Unknown Exxx instruction
$2DC    $03E7   SYS      $3E7            ; System call to 3E7
$2DE    $CE6A   RND      VE, #6A         ; VE = random & 6A
$2E0    $8848   UNKNOWN  8848            ; Unknown 8xxx instruction
$2E2    $FB0E   UNKNOWN  FB0E            ; Unknown Fxxx instruction
$2E4    $92E3   UNKNOWN  $92E3           ; Unknown 9xxx instruction
$2E6    $C59E   RND      V5, #9E         ; V5 = random & 9E
$2E8    $B72F   JP       V0, $72F        ; Jump to V0 + 72F
$2EA    $00AA   SYS      $0AA            ; System call to 0AA
$2EC    $F3C8   UNKNOWN  F3C8            ; Unknown Fxxx instruction
$2EE    $337D   SE       V3, #7D         ; Skip if V3 == 125
$2F0    $9AB8   UNKNOWN  $9AB8           ; Unknown 9xxx instruction
$2F2    $5EDC   UNKNOWN  $5EDC           ; Unknown 5xxx instruction
$2F4    $E41C   UNKNOWN  $E41C           ; Unknown Exxx instruction
$2F6    $2BD0   CALL     $BD0            ; Call subroutine at BD0
$2F8    $31C7   SE       V1, #C7         ; Skip if V1 == 199
$2FA    $A3FB   LD       I, $3FB         ; Load 3FB into I
$2FC    $6A57   LD       VA, #57         ; Load 87 into VA
$2FE    $7554   ADD      V5, #54         ; Add 84 to V5
$302    $0005   SYS      $005            ; System call to 005
$304    $2340   CALL     $340            ; Call subroutine at 340
$306    $8B98   UNKNOWN  8B98            ; Unknown 8xxx instruction
$308    $3EE7   SE       VE, #E7         ; Skip if VE == 231
$30A    $E1FD   UNKNOWN  $E1FD           ; Unknown Exxx instruction
$30C    $B027   JP       V0, $027        ; Jump to V0 + 027
$30E    $0223   SYS      $223            ; System call to 223
$310    $80CF   UNKNOWN  80CF            ; Unknown 8xxx instruction
$312    $FFD0   UNKNOWN  FFD0            ; Unknown Fxxx instruction
$314    $CF96   RND      VF, #96         ; VF = random & 96
$316    $977B   UNKNOWN  $977B           ; Unknown 9xxx instruction
$318    $025B   SYS      $25B            ; System call to 25B
$31A    $9874   UNKNOWN  $9874           ; Unknown 9xxx instruction
$31C    $AB0D   LD       I, $B0D         ; Load B0D into I
$31E    $7DC9   ADD      VD, #C9         ; Add 201 to VD
$320    $2644   CALL     $644            ; Call subroutine at 644
$322    $0AD0   SYS      $AD0            ; System call to AD0
$324    $B323   JP       V0, $323        ; Jump to V0 + 323
$326    $70E4   ADD      V0, #E4         ; Add 228 to V0
$328    $AC83   LD       I, $C83         ; Load C83 into I
$32A    $F352   UNKNOWN  F352            ; Unknown Fxxx instruction
$32C    $95EF   UNKNOWN  $95EF           ; Unknown 9xxx instruction
$32E    $FDE2   UNKNOWN  FDE2            ; Unknown Fxxx instruction
$330    $D205   DRW      V2, V0, #5      ; Draw 5-byte sprite at V2, V0
$332    $4975   SNE      V9, #75         ; Skip if V9 != 117
$334    $9A59   UNKNOWN  $9A59           ; Unknown 9xxx instruction
$336    $6ACB   LD       VA, #CB         ; Load 203 into VA
$338    $244D   CALL     $44D            ; Call subroutine at 44D
$33A    $D785   DRW      V7, V8, #5      ; Draw 5-byte sprite at V7, V8
$33C    $FD34   UNKNOWN  FD34            ; Unknown Fxxx instruction
$33E    $0DD7   SYS      $DD7            ; System call to DD7
$340    $0A0B   SYS      $A0B            ; System call to A0B
$342    $DA15   DRW      VA, V1, #5      ; Draw 5-byte sprite at VA, V1
$344    $C982   RND      V9, #82         ; V9 = random & 82
$346    $7F52   ADD      VF, #52         ; Add 82 to VF
$348    $1A35   JP       $A35            ; Jump to A35
$34A    $01CF   SYS      $1CF            ; System call to 1CF
$34C    $0965   SYS      $965            ; System call to 965
$34E    $8839   UNKNOWN  8839            ; Unknown 8xxx instruction
$350    $2CE0   CALL     $CE0            ; Call subroutine at CE0
$352    $272C   CALL     $72C            ; Call subroutine at 72C
$354    $07A8   SYS      $7A8            ; System call to 7A8
$356    $8F76   SHR      VF              ; VF >>= 1, VF = LSB
$358    $D298   DRW      V2, V9, #8      ; Draw 8-byte sprite at V2, V9
$35A    $D4D0   DRW      V4, VD, #0      ; Draw 0-byte sprite at V4, VD
$35C    $201B   CALL     $01B            ; Call subroutine at 01B
$35E    $FD5A   UNKNOWN  FD5A            ; Unknown Fxxx instruction
$360    $F2FC   UNKNOWN  F2FC            ; Unknown Fxxx instruction
$362    $532E   UNKNOWN  $532E           ; Unknown 5xxx instruction
$364    $BF80   JP       V0, $F80        ; Jump to V0 + F80
$366    $F822   UNKNOWN  F822            ; Unknown Fxxx instruction
$368    $6F84   LD       VF, #84         ; Load 132 into VF
$36A    $31C4   SE       V1, #C4         ; Skip if V1 == 196
$36C    $1F9E   JP       $F9E            ; Jump to F9E
$36E    $A359   LD       I, $359         ; Load 359 into I
$370    $201A   CALL     $01A            ; Call subroutine at 01A
$372    $FBB5   UNKNOWN  FBB5            ; Unknown Fxxx instruction
$374    $6BA1   LD       VB, #A1         ; Load 161 into VB
$376    $BF40   JP       V0, $F40        ; Jump to V0 + F40
$378    $E270   UNKNOWN  $E270           ; Unknown Exxx instruction
$37A    $A496   LD       I, $496         ; Load 496 into I
$37C    $4A1D   SNE      VA, #1D         ; Skip if VA != 29
$37E    $4559   SNE      V5, #59         ; Skip if V5 != 89
$380    $FE5C   UNKNOWN  FE5C            ; Unknown Fxxx instruction
$382    $0BD6   SYS      $BD6            ; System call to BD6
$384    $942F   UNKNOWN  $942F           ; Unknown 9xxx instruction
$386    $7D97   ADD      VD, #97         ; Add 151 to VD
$388    $674E   LD       V7, #4E         ; Load 78 into V7
$38A    $38A1   SE       V8, #A1         ; Skip if V8 == 161
$38C    $9412   UNKNOWN  $9412           ; Unknown 9xxx instruction
$38E    $D8F3   DRW      V8, VF, #3      ; Draw 3-byte sprite at V8, VF
$390    $BB1D   JP       V0, $B1D        ; Jump to V0 + B1D
$392    $A941   LD       I, $941         ; Load 941 into I
$394    $1227   JP       $227            ; Jump to 227
$396    $991D   UNKNOWN  $991D           ; Unknown 9xxx instruction
$398    $6BAC   LD       VB, #AC         ; Load 172 into VB
$39A    $74CC   ADD      V4, #CC         ; Add 204 to V4
$39C    $8F54   ADD      VF, V5          ; VF += V5, VF = carry
$39E    $58D7   UNKNOWN  $58D7           ; Unknown 5xxx instruction
$3A0    $7F79   ADD      VF, #79         ; Add 121 to VF
$3A2    $307A   SE       V0, #7A         ; Skip if V0 == 122
$3A4    $6914   LD       V9, #14         ; Load 20 into V9
$3A6    $C0EB   RND      V0, #EB         ; V0 = random & EB
$3A8    $71CA   ADD      V1, #CA         ; Add 202 to V1
$3AA    $42E8   SNE      V2, #E8         ; Skip if V2 != 232
$3AC    $710A   ADD      V1, #0A         ; Add 10 to V1
$3AE    $C08F   RND      V0, #8F         ; V0 = random & 8F
$3B0    $FBC0   UNKNOWN  FBC0            ; Unknown Fxxx instruction
$3B2    $5BCB   UNKNOWN  $5BCB           ; Unknown 5xxx instruction
$3B4    $D4DD   DRW      V4, VD, #D      ; Draw 13-byte sprite at V4, VD
$3B6    $CDD1   RND      VD, #D1         ; VD = random & D1
$3B8    $C3BA   RND      V3, #BA         ; V3 = random & BA
$3BA    $1AE3   JP       $AE3            ; Jump to AE3
$3BC    $EB7C   UNKNOWN  $EB7C           ; Unknown Exxx instruction
$3BE    $EC45   UNKNOWN  $EC45           ; Unknown Exxx instruction
$3C0    $DBA4   DRW      VB, VA, #4      ; Draw 4-byte sprite at VB, VA
$3C2    $3B32   SE       VB, #32         ; Skip if VB == 50
$3C4    $D7E6   DRW      V7, VE, #6      ; Draw 6-byte sprite at V7, VE
$3C6    $A25D   LD       I, $25D         ; Load 25D into I
$3C8    $F01E   ADD      I, V0           ; I += V0
$3CA    $E6C1   UNKNOWN  $E6C1           ; Unknown Exxx instruction
$3CC    $57CE   UNKNOWN  $57CE           ; Unknown 5xxx instruction
$3CE    $5C08   UNKNOWN  $5C08           ; Unknown 5xxx instruction
$3D0    $7730   ADD      V7, #30         ; Add 48 to V7
$3D2    $31C4   SE       V1, #C4         ; Skip if V1 == 196
$3D4    $F71A   UNKNOWN  F71A            ; Unknown Fxxx instruction
$3D6    $9D75   UNKNOWN  $9D75           ; Unknown 9xxx instruction
$3D8    $BAAF   JP       V0, $AAF        ; Jump to V0 + AAF
$3DA    $D355   DRW      V3, V5, #5      ; Draw 5-byte sprite at V3, V5
$3DC    $CC4B   RND      VC, #4B         ; VC = random & 4B
$3DE    $3E46   SE       VE, #46         ; Skip if VE == 70
$3E0    $1C11   JP       $C11            ; Jump to C11
$3E2    $4247   SNE      V2, #47         ; Skip if V2 != 71
$3E4    $329B   SE       V2, #9B         ; Skip if V2 == 155
$3E6    $4EDC   SNE      VE, #DC         ; Skip if VE != 220
$3E8    $4893   SNE      V8, #93         ; Skip if V8 != 147
$3EA    $F4BE   UNKNOWN  F4BE            ; Unknown Fxxx instruction
$3EC    $C8CF   RND      V8, #CF         ; V8 = random & CF
$3EE    $00E9   SYS      $0E9            ; System call to 0E9
$3F0    $AD79   LD       I, $D79         ; Load D79 into I
$3F2    $6676   LD       V6, #76         ; Load 118 into V6
$3F4    $6C4F   LD       VC, #4F         ; Load 79 into VC
$3F6    $41D3   SNE      V1, #D3         ; Skip if V1 != 211
$3F8    $1617   JP       $617            ; Jump to 617
$3FA    $A7CB   LD       I, $7CB         ; Load 7CB into I
$3FC    $3E52   SE       VE, #52         ; Skip if VE == 82
$3FE    $AE97   LD       I, $E97         ; Load E97 into I
$400    $C87D   RND      V8, #7D         ; V8 = random & 7D
$402    $D8E5   DRW      V8, VE, #5      ; Draw 5-byte sprite at V8, VE
$404    $0071   SYS      $071            ; System call to 071
$406    $C51F   RND      V5, #1F         ; V5 = random & 1F
$408    $DF65   DRW      VF, V6, #5      ; Draw 5-byte sprite at VF, V6
$40A    $E4B0   UNKNOWN  $E4B0           ; Unknown Exxx instruction
$40C    $A71F   LD       I, $71F         ; Load 71F into I
$40E    $CE2A   RND      VE, #2A         ; VE = random & 2A
$410    $B8D6   JP       V0, $8D6        ; Jump to V0 + 8D6
$412    $A5BF   LD       I, $5BF         ; Load 5BF into I
$414    $5024   UNKNOWN  $5024           ; Unknown 5xxx instruction
$416    $794F   ADD      V9, #4F         ; Add 79 to V9
$418    $FC63   UNKNOWN  FC63            ; Unknown Fxxx instruction
$41A    $62B4   LD       V2, #B4         ; Load 180 into V2
$41C    $2BCB   CALL     $BCB            ; Call subroutine at BCB
$41E    $73F0   ADD      V3, #F0         ; Add 240 to V3
$420    $9F32   UNKNOWN  $9F32           ; Unknown 9xxx instruction
$422    $D763   DRW      V7, V6, #3      ; Draw 3-byte sprite at V7, V6
$424    $2ABE   CALL     $ABE            ; Call subroutine at ABE
$426    $435C   SNE      V3, #5C         ; Skip if V3 != 92
$428    $651C   LD       V5, #1C         ; Load 28 into V5
$42A    $56F1   UNKNOWN  $56F1           ; Unknown 5xxx instruction
$42C    $F759   UNKNOWN  F759            ; Unknown Fxxx instruction
$42E    $BC88   JP       V0, $C88        ; Jump to V0 + C88
$430    $08FD   SYS      $8FD            ; System call to 8FD
$432    $DD9D   DRW      VD, V9, #D      ; Draw 13-byte sprite at VD, V9
$434    $F426   UNKNOWN  F426            ; Unknown Fxxx instruction
$436    $27ED   CALL     $7ED            ; Call subroutine at 7ED
$438    $E7C1   UNKNOWN  $E7C1           ; Unknown Exxx instruction
$43A    $ADB2   LD       I, $DB2         ; Load DB2 into I
$43C    $2D64   CALL     $D64            ; Call subroutine at D64
$43E    $6CAA   LD       VC, #AA         ; Load 170 into VC
$440    $043E   SYS      $43E            ; System call to 43E
$442    $C1C6   RND      V1, #C6         ; V1 = random & C6
$444    $1720   JP       $720            ; Jump to 720
$446    $8FFF   UNKNOWN  8FFF            ; Unknown 8xxx instruction
$448    $1688   JP       $688            ; Jump to 688
$44A    $F938   UNKNOWN  F938            ; Unknown Fxxx instruction
$44C    $1D3E   JP       $D3E            ; Jump to D3E
$44E    $83CE   SHL      V3              ; V3 <<= 1, VF = MSB
$450    $B7FB   JP       V0, $7FB        ; Jump to V0 + 7FB
$452    $EE67   UNKNOWN  $EE67           ; Unknown Exxx instruction
$454    $CDE8   RND      VD, #E8         ; VD = random & E8
$456    $8C73   XOR      VC, V7          ; VC ^= V7
$458    $B593   JP       V0, $593        ; Jump to V0 + 593
$45A    $8B85   SUB      VB, V8          ; VB -= V8, VF = !borrow
$45C    $B7F9   JP       V0, $7F9        ; Jump to V0 + 7F9
$45E    $6931   LD       V9, #31         ; Load 49 into V9
$460    $B1DA   JP       V0, $1DA        ; Jump to V0 + 1DA
$462    $87AD   UNKNOWN  87AD            ; Unknown 8xxx instruction
$464    $F970   UNKNOWN  F970            ; Unknown Fxxx instruction
$466    $ACAE   LD       I, $CAE         ; Load CAE into I
$468    $BE58   JP       V0, $E58        ; Jump to V0 + E58
$46A    $20E5   CALL     $0E5            ; Call subroutine at 0E5
$46C    $AD85   LD       I, $D85         ; Load D85 into I
$46E    $42D1   SNE      V2, #D1         ; Skip if V2 != 209
$470    $EEB4   UNKNOWN  $EEB4           ; Unknown Exxx instruction
$472    $299C   CALL     $99C            ; Call subroutine at 99C
$474    $AA10   LD       I, $A10         ; Load A10 into I
$476    $C308   RND      V3, #08         ; V3 = random & 08
$478    $1DE3   JP       $DE3            ; Jump to DE3
$47A    $E865   UNKNOWN  $E865           ; Unknown Exxx instruction
$47C    $9049   UNKNOWN  $9049           ; Unknown 9xxx instruction
$47E    $63AA   LD       V3, #AA         ; Load 170 into V3
$480    $BE1E   JP       V0, $E1E        ; Jump to V0 + E1E
$482    $A77E   LD       I, $77E         ; Load 77E into I
$484    $CB72   RND      VB, #72         ; VB = random & 72
$486    $39C7   SE       V9, #C7         ; Skip if V9 == 199
$488    $D721   DRW      V7, V2, #1      ; Draw 1-byte sprite at V7, V2
$48A    $7031   ADD      V0, #31         ; Add 49 to V0
$48C    $DFF4   DRW      VF, VF, #4      ; Draw 4-byte sprite at VF, VF
$48E    $5EB5   UNKNOWN  $5EB5           ; Unknown 5xxx instruction
$490    $261B   CALL     $61B            ; Call subroutine at 61B
$492    $F9A8   UNKNOWN  F9A8            ; Unknown Fxxx instruction
$494    $D47D   DRW      V4, V7, #D      ; Draw 13-byte sprite at V4, V7
$496    $5224   UNKNOWN  $5224           ; Unknown 5xxx instruction
$498    $A068   LD       I, $068         ; Load 068 into I
$49A    $CE9A   RND      VE, #9A         ; VE = random & 9A
$49C    $DE4C   DRW      VE, V4, #C      ; Draw 12-byte sprite at VE, V4
$49E    $6F75   LD       VF, #75         ; Load 117 into VF
$4A0    $671B   LD       V7, #1B         ; Load 27 into V7
$4A2    $05A0   SYS      $5A0            ; System call to 5A0
$4A4    $48E5   SNE      V8, #E5         ; Skip if V8 != 229
$4A6    $A15B   LD       I, $15B         ; Load 15B into I
$4A8    $C834   RND      V8, #34         ; V8 = random & 34
$4AA    $71C4   ADD      V1, #C4         ; Add 196 to V1
$4AC    $BD36   JP       V0, $D36        ; Jump to V0 + D36
$4AE    $D2DB   DRW      V2, VD, #B      ; Draw 11-byte sprite at V2, VD
$4B0    $37BF   SE       V7, #BF         ; Skip if V7 == 191
$4B2    $A02A   LD       I, $02A         ; Load 02A into I
$4B4    $5907   UNKNOWN  $5907           ; Unknown 5xxx instruction
$4B6    $E68A   UNKNOWN  $E68A           ; Unknown Exxx instruction
$4B8    $E4BA   UNKNOWN  $E4BA           ; Unknown Exxx instruction
$4BA    $AD35   LD       I, $D35         ; Load D35 into I
$4BC    $82E0   LD       V2, VE          ; V2 = VE
$4BE    $28AE   CALL     $8AE            ; Call subroutine at 8AE
$4C0    $0B39   SYS      $B39            ; System call to B39
$4C2    $24BA   CALL     $4BA            ; Call subroutine at 4BA
$4C4    $BC71   JP       V0, $C71        ; Jump to V0 + C71
$4C6    $BCBE   JP       V0, $CBE        ; Jump to V0 + CBE
$4C8    $C59E   RND      V5, #9E         ; V5 = random & 9E
$4CA    $047D   SYS      $47D            ; System call to 47D
$4CC    $A4CE   LD       I, $4CE         ; Load 4CE into I
$4CE    $C815   RND      V8, #15         ; V8 = random & 15
$4D0    $3097   SE       V0, #97         ; Skip if V0 == 151
$4D2    $AE17   LD       I, $E17         ; Load E17 into I
$4D4    $996C   UNKNOWN  $996C           ; Unknown 9xxx instruction
$4D6    $8C74   ADD      VC, V7          ; VC += V7, VF = carry
$4D8    $3FEF   SE       VF, #EF         ; Skip if VF == 239
$4DA    $AE9A   LD       I, $E9A         ; Load E9A into I
$4DC    $3F03   SE       VF, #03         ; Skip if VF == 3
$4DE    $4380   SNE      V3, #80         ; Skip if V3 != 128
$4E0    $48AC   SNE      V8, #AC         ; Skip if V8 != 172
$4E2    $A39C   LD       I, $39C         ; Load 39C into I
$4E4    $6913   LD       V9, #13         ; Load 19 into V9
$4E6    $5E66   UNKNOWN  $5E66           ; Unknown 5xxx instruction
$4E8    $8DE1   OR       VD, VE          ; VD |= VE
$4EA    $C24D   RND      V2, #4D         ; V2 = random & 4D
$4EC    $35BF   SE       V5, #BF         ; Skip if V5 == 191
$4EE    $D41C   DRW      V4, V1, #C      ; Draw 12-byte sprite at V4, V1
$4F0    $9667   UNKNOWN  $9667           ; Unknown 9xxx instruction
$4F2    $7E62   ADD      VE, #62         ; Add 98 to VE
$4F4    $546E   UNKNOWN  $546E           ; Unknown 5xxx instruction
$4F6    $E5E6   UNKNOWN  $E5E6           ; Unknown Exxx instruction
$4F8    $4939   SNE      V9, #39         ; Skip if V9 != 57
$4FA    $745E   ADD      V4, #5E         ; Add 94 to V4
$4FC    $784E   ADD      V8, #4E         ; Add 78 to V8
$4FE    $311D   SE       V1, #1D         ; Skip if V1 == 29
$500    $2A85   CALL     $A85            ; Call subroutine at A85
$502    $80B5   SUB      V0, VB          ; V0 -= VB, VF = !borrow
$504    $0830   SYS      $830            ; System call to 830
$506    $9355   UNKNOWN  $9355           ; Unknown 9xxx instruction
$508    $16F4   JP       $6F4            ; Jump to 6F4
$50A    $CF8F   RND      VF, #8F         ; VF = random & 8F
$50C    $49E9   SNE      V9, #E9         ; Skip if V9 != 233
$50E    $6F1A   LD       VF, #1A         ; Load 26 into VF
$510    $7DDA   ADD      VD, #DA         ; Add 218 to VD
$512    $F4A4   UNKNOWN  F4A4            ; Unknown Fxxx instruction
$514    $6FD0   LD       VF, #D0         ; Load 208 into VF
$516    $3BA2   SE       VB, #A2         ; Skip if VB == 162
$518    $65A5   LD       V5, #A5         ; Load 165 into V5
$51A    $9874   UNKNOWN  $9874           ; Unknown 9xxx instruction
$51C    $940C   UNKNOWN  $940C           ; Unknown 9xxx instruction
$51E    $E596   UNKNOWN  $E596           ; Unknown Exxx instruction
$520    $DC92   DRW      VC, V9, #2      ; Draw 2-byte sprite at VC, V9
$522    $D50C   DRW      V5, V0, #C      ; Draw 12-byte sprite at V5, V0
$524    $D5B4   DRW      V5, VB, #4      ; Draw 4-byte sprite at V5, VB
$526    $7437   ADD      V4, #37         ; Add 55 to V4
$528    $5F7F   UNKNOWN  $5F7F           ; Unknown 5xxx instruction
$52A    $4739   SNE      V7, #39         ; Skip if V7 != 57
$52C    $8E92   AND      VE, V9          ; VE &= V9
$52E    $069F   SYS      $69F            ; System call to 69F
$530    $B456   JP       V0, $456        ; Jump to V0 + 456
$532    $4019   SNE      V0, #19         ; Skip if V0 != 25
$534    $8A5C   UNKNOWN  8A5C            ; Unknown 8xxx instruction
$536    $8D42   AND      VD, V4          ; VD &= V4
$538    $A82C   LD       I, $82C         ; Load 82C into I
$53A    $5064   UNKNOWN  $5064           ; Unknown 5xxx instruction
$53C    $6FDC   LD       VF, #DC         ; Load 220 into VF
$53E    $AC72   LD       I, $C72         ; Load C72 into I
$540    $6A6B   LD       VA, #6B         ; Load 107 into VA
$542    $BDC9   JP       V0, $DC9        ; Jump to V0 + DC9
$544    $AFD9   LD       I, $FD9         ; Load FD9 into I
$546    $8C08   UNKNOWN  8C08            ; Unknown 8xxx instruction
$548    $C068   RND      V0, #68         ; V0 = random & 68
$54A    $0D23   SYS      $D23            ; System call to D23
$54C    $C118   RND      V1, #18         ; V1 = random & 18
$54E    $4EEE   SNE      VE, #EE         ; Skip if VE != 238
$550    $53CD   UNKNOWN  $53CD           ; Unknown 5xxx instruction
$552    $E65A   UNKNOWN  $E65A           ; Unknown Exxx instruction
$554    $E042   UNKNOWN  $E042           ; Unknown Exxx instruction
$556    $FFDD   UNKNOWN  FFDD            ; Unknown Fxxx instruction
$558    $0498   SYS      $498            ; System call to 498
$55A    $3ADB   SE       VA, #DB         ; Skip if VA == 219
$55C    $CD4B   RND      VD, #4B         ; VD = random & 4B
$55E    $34EA   SE       V4, #EA         ; Skip if V4 == 234
$560    $4B66   SNE      VB, #66         ; Skip if VB != 102
$562    $3A4E   SE       VA, #4E         ; Skip if VA == 78
$564    $1EA8   JP       $EA8            ; Jump to EA8
$566    $AB33   LD       I, $B33         ; Load B33 into I
$568    $F528   UNKNOWN  F528            ; Unknown Fxxx instruction
$56A    $AF80   LD       I, $F80         ; Load F80 into I
$56C    $EFFD   UNKNOWN  $EFFD           ; Unknown Exxx instruction
$56E    $9BE9   UNKNOWN  $9BE9           ; Unknown 9xxx instruction
$570    $E39A   UNKNOWN  $E39A           ; Unknown Exxx instruction
$572    $A9B9   LD       I, $9B9         ; Load 9B9 into I
$574    $5EAF   UNKNOWN  $5EAF           ; Unknown 5xxx instruction
$576    $8A70   LD       VA, V7          ; VA = V7
$578    $E8C1   UNKNOWN  $E8C1           ; Unknown Exxx instruction
$57A    $3187   SE       V1, #87         ; Skip if V1 == 135
$57C    $748A   ADD      V4, #8A         ; Add 138 to V4
$57E    $9353   UNKNOWN  $9353           ; Unknown 9xxx instruction
$580    $73D1   ADD      V3, #D1         ; Add 209 to V3
$582    $785C   ADD      V8, #5C         ; Add 92 to V8
$584    $1774   JP       $774            ; Jump to 774
$586    $F0DA   UNKNOWN  F0DA            ; Unknown Fxxx instruction
$588    $E835   UNKNOWN  $E835           ; Unknown Exxx instruction
$58A    $FABC   UNKNOWN  FABC            ; Unknown Fxxx instruction
$58C    $BEFF   JP       V0, $EFF        ; Jump to V0 + EFF
$58E    $FD00   UNKNOWN  FD00            ; Unknown Fxxx instruction
$590    $1820   JP       $820            ; Jump to 820
$592    $E57B   UNKNOWN  $E57B           ; Unknown Exxx instruction
$594    $F238   UNKNOWN  F238            ; Unknown Fxxx instruction
$596    $4EC5   SNE      VE, #C5         ; Skip if VE != 197
$598    $A229   LD       I, $229         ; Load 229 into I
$59A    $5F4C   UNKNOWN  $5F4C           ; Unknown 5xxx instruction
$59C    $D9F3   DRW      V9, VF, #3      ; Draw 3-byte sprite at V9, VF
$59E    $5742   UNKNOWN  $5742           ; Unknown 5xxx instruction
$5A0    $D283   DRW      V2, V8, #3      ; Draw 3-byte sprite at V2, V8
$5A2    $787D   ADD      V8, #7D         ; Add 125 to V8
$5A4    $1B47   JP       $B47            ; Jump to B47
$5A6    $BA74   JP       V0, $A74        ; Jump to V0 + A74
$5A8    $7F47   ADD      VF, #47         ; Add 71 to VF
$5AA    $1206   JP       $206            ; Jump to 206
$5AC    $9CBD   UNKNOWN  $9CBD           ; Unknown 9xxx instruction
$5AE    $DF93   DRW      VF, V9, #3      ; Draw 3-byte sprite at VF, V9
$5B0    $BE78   JP       V0, $E78        ; Jump to V0 + E78
$5B2    $EE70   UNKNOWN  $EE70           ; Unknown Exxx instruction
$5B4    $784A   ADD      V8, #4A         ; Add 74 to V8
$5B6    $591B   UNKNOWN  $591B           ; Unknown 5xxx instruction
$5B8    $747C   ADD      V4, #7C         ; Add 124 to V4
$5BA    $5ABC   UNKNOWN  $5ABC           ; Unknown 5xxx instruction
$5BC    $B5C7   JP       V0, $5C7        ; Jump to V0 + 5C7
$5BE    $EFCB   UNKNOWN  $EFCB           ; Unknown Exxx instruction
$5C0    $A27B   LD       I, $27B         ; Load 27B into I
$5C2    $92DC   UNKNOWN  $92DC           ; Unknown 9xxx instruction
$5C4    $1EEC   JP       $EEC            ; Jump to EEC
$5C6    $0367   SYS      $367            ; System call to 367
$5C8    $7B04   ADD      VB, #04         ; Add 4 to VB
$5CA    $4682   SNE      V6, #82         ; Skip if V6 != 130
$5CC    $1493   JP       $493            ; Jump to 493
$5CE    $1218   JP       $218            ; Jump to 218
$5D0    $A481   LD       I, $481         ; Load 481 into I
$5D2    $3D99   SE       VD, #99         ; Skip if VD == 153
$5D4    $46A0   SNE      V6, #A0         ; Skip if V6 != 160
$5D6    $281B   CALL     $81B            ; Call subroutine at 81B
$5D8    $B19E   JP       V0, $19E        ; Jump to V0 + 19E
$5DA    $D12C   DRW      V1, V2, #C      ; Draw 12-byte sprite at V1, V2
$5DC    $ECB5   UNKNOWN  $ECB5           ; Unknown Exxx instruction
$5DE    $BD15   JP       V0, $D15        ; Jump to V0 + D15
$5E0    $103D   JP       $03D            ; Jump to 03D
$5E2    $80E3   XOR      V0, VE          ; V0 ^= VE
$5E4    $2DA8   CALL     $DA8            ; Call subroutine at DA8
$5E6    $E7A6   UNKNOWN  $E7A6           ; Unknown Exxx instruction
$5E8    $1713   JP       $713            ; Jump to 713
$5EA    $5914   UNKNOWN  $5914           ; Unknown 5xxx instruction
$5EC    $4669   SNE      V6, #69         ; Skip if V6 != 105
$5EE    $994F   UNKNOWN  $994F           ; Unknown 9xxx instruction
$5F0    $88CA   UNKNOWN  88CA            ; Unknown 8xxx instruction
$5F2    $B129   JP       V0, $129        ; Jump to V0 + 129
$5F4    $92C0   SNE      V2, VC          ; Skip if V2 != VC
$5F6    $01C9   SYS      $1C9            ; System call to 1C9
$5F8    $3BCC   SE       VB, #CC         ; Skip if VB == 204
$5FA    $8EF6   SHR      VE              ; VE >>= 1, VF = LSB
$5FC    $FE0D   UNKNOWN  FE0D            ; Unknown Fxxx instruction
$5FE    $1681   JP       $681            ; Jump to 681
$600    $04B0   SYS      $4B0            ; System call to 4B0
$602    $57F9   UNKNOWN  $57F9           ; Unknown 5xxx instruction
$604    $B5CD   JP       V0, $5CD        ; Jump to V0 + 5CD
$606    $75F6   ADD      V5, #F6         ; Add 246 to V5
$608    $76BE   ADD      V6, #BE         ; Add 190 to V6
$60A    $17A7   JP       $7A7            ; Jump to 7A7
$60C    $06FF   SYS      $6FF            ; System call to 6FF
$60E    $3A6E   SE       VA, #6E         ; Skip if VA == 110
$610    $333D   SE       V3, #3D         ; Skip if V3 == 61
$612    $2A71   CALL     $A71            ; Call subroutine at A71
$614    $D957   DRW      V9, V5, #7      ; Draw 7-byte sprite at V9, V5
$616    $58A0   SE       V8, VA          ; Skip if V8 == VA
$618    $21EF   CALL     $1EF            ; Call subroutine at 1EF
$61A    $39B8   SE       V9, #B8         ; Skip if V9 == 184
$61C    $556A   UNKNOWN  $556A           ; Unknown 5xxx instruction
$61E    $4F50   SNE      VF, #50         ; Skip if VF != 80
$620    $F6C0   UNKNOWN  F6C0            ; Unknown Fxxx instruction
$622    $0D07   SYS      $D07            ; System call to D07
$624    $9C25   UNKNOWN  $9C25           ; Unknown 9xxx instruction
$626    $CC59   RND      VC, #59         ; VC = random & 59
$628    $5A97   UNKNOWN  $5A97           ; Unknown 5xxx instruction
$62A    $ADFB   LD       I, $DFB         ; Load DFB into I
$62C    $334E   SE       V3, #4E         ; Skip if V3 == 78
$62E    $2778   CALL     $778            ; Call subroutine at 778
$630    $2AA2   CALL     $AA2            ; Call subroutine at AA2
$632    $816C   UNKNOWN  816C            ; Unknown 8xxx instruction
$634    $2558   CALL     $558            ; Call subroutine at 558
$636    $6EF8   LD       VE, #F8         ; Load 248 into VE
$638    $8D8C   UNKNOWN  8D8C            ; Unknown 8xxx instruction
$63A    $A5A2   LD       I, $5A2         ; Load 5A2 into I
$63C    $A67F   LD       I, $67F         ; Load 67F into I
$63E    $95A9   UNKNOWN  $95A9           ; Unknown 9xxx instruction
$640    $1254   JP       $254            ; Jump to 254
$642    $B095   JP       V0, $095        ; Jump to V0 + 095
$644    $7DFC   ADD      VD, #FC         ; Add 252 to VD
$646    $AA03   LD       I, $A03         ; Load A03 into I
$648    $3B5E   SE       VB, #5E         ; Skip if VB == 94
$64A    $36FB   SE       V6, #FB         ; Skip if V6 == 251
$64C    $E7C9   UNKNOWN  $E7C9           ; Unknown Exxx instruction
$64E    $A0F2   LD       I, $0F2         ; Load 0F2 into I
$650    $B4DC   JP       V0, $4DC        ; Jump to V0 + 4DC
$652    $26B2   CALL     $6B2            ; Call subroutine at 6B2
$654    $A753   LD       I, $753         ; Load 753 into I
$656    $CD00   RND      VD, #00         ; VD = random & 00
$658    $7B85   ADD      VB, #85         ; Add 133 to VB
$65A    $CA6A   RND      VA, #6A         ; VA = random & 6A
$65C    $6706   LD       V7, #06         ; Load 6 into V7
$65E    $914F   UNKNOWN  $914F           ; Unknown 9xxx instruction
$660    $23DB   CALL     $3DB            ; Call subroutine at 3DB
$662    $4575   SNE      V5, #75         ; Skip if V5 != 117
$664    $77CD   ADD      V7, #CD         ; Add 205 to V7
$666    $90FC   UNKNOWN  $90FC           ; Unknown 9xxx instruction
$668    $D0CC   DRW      V0, VC, #C      ; Draw 12-byte sprite at V0, VC
$66A    $1CD0   JP       $CD0            ; Jump to CD0
$66C    $F86B   UNKNOWN  F86B            ; Unknown Fxxx instruction
$66E    $25AC   CALL     $5AC            ; Call subroutine at 5AC
$670    $5753   UNKNOWN  $5753           ; Unknown 5xxx instruction
$672    $B0C6   JP       V0, $0C6        ; Jump to V0 + 0C6
$674    $2033   CALL     $033            ; Call subroutine at 033
$676    $08A1   SYS      $8A1            ; System call to 8A1
$678    $2EF1   CALL     $EF1            ; Call subroutine at EF1
$67A    $4FB5   SNE      VF, #B5         ; Skip if VF != 181
$67C    $3743   SE       V7, #43         ; Skip if V7 == 67
$67E    $6FD6   LD       VF, #D6         ; Load 214 into VF
$680    $1848   JP       $848            ; Jump to 848
$682    $D8C3   DRW      V8, VC, #3      ; Draw 3-byte sprite at V8, VC
$684    $531C   UNKNOWN  $531C           ; Unknown 5xxx instruction
$686    $5DE0   SE       VD, VE          ; Skip if VD == VE
$688    $8117   SUBN     V1, V1          ; V1 = V1 - V1, VF = !borrow
$68A    $625F   LD       V2, #5F         ; Load 95 into V2
$68C    $DAE8   DRW      VA, VE, #8      ; Draw 8-byte sprite at VA, VE
$68E    $CFCD   RND      VF, #CD         ; VF = random & CD
$690    $54F1   UNKNOWN  $54F1           ; Unknown 5xxx instruction
$692    $33D8   SE       V3, #D8         ; Skip if V3 == 216
$694    $735E   ADD      V3, #5E         ; Add 94 to V3
$696    $B7CD   JP       V0, $7CD        ; Jump to V0 + 7CD
$698    $0A55   SYS      $A55            ; System call to A55
$69A    $BC7F   JP       V0, $C7F        ; Jump to V0 + C7F
$69C    $CD9E   RND      VD, #9E         ; VD = random & 9E
$69E    $A2B3   LD       I, $2B3         ; Load 2B3 into I
$6A0    $3F07   SE       VF, #07         ; Skip if VF == 7
$6A2    $9B6A   UNKNOWN  $9B6A           ; Unknown 9xxx instruction
$6A4    $34E7   SE       V4, #E7         ; Skip if V4 == 231
$6A6    $DC26   DRW      VC, V2, #6      ; Draw 6-byte sprite at VC, V2
$6A8    $BA27   JP       V0, $A27        ; Jump to V0 + A27
$6AA    $CE96   RND      VE, #96         ; VE = random & 96
$6AC    $FA25   UNKNOWN  FA25            ; Unknown Fxxx instruction
$6AE    $2BB1   CALL     $BB1            ; Call subroutine at BB1
$6B0    $545B   UNKNOWN  $545B           ; Unknown 5xxx instruction
$6B2    $3B2E   SE       VB, #2E         ; Skip if VB == 46
$6B4    $C627   RND      V6, #27         ; V6 = random & 27
$6B6    $BFB6   JP       V0, $FB6        ; Jump to V0 + FB6
$6B8    $9349   UNKNOWN  $9349           ; Unknown 9xxx instruction
$6BA    $A2FE   LD       I, $2FE         ; Load 2FE into I
$6BC    $7958   ADD      V9, #58         ; Add 88 to V9
$6BE    $3D8E   SE       VD, #8E         ; Skip if VD == 142
$6C0    $ED9B   UNKNOWN  $ED9B           ; Unknown Exxx instruction
$6C2    $A3D4   LD       I, $3D4         ; Load 3D4 into I
$6C4    $A965   LD       I, $965         ; Load 965 into I
$6C6    $B839   JP       V0, $839        ; Jump to V0 + 839
$6C8    $C9ED   RND      V9, #ED         ; V9 = random & ED
$6CA    $C5FB   RND      V5, #FB         ; V5 = random & FB
$6CC    $049E   SYS      $49E            ; System call to 49E
$6CE    $ADBF   LD       I, $DBF         ; Load DBF into I
$6D0    $1566   JP       $566            ; Jump to 566
$6D2    $F905   UNKNOWN  F905            ; Unknown Fxxx instruction
$6D4    $95F7   UNKNOWN  $95F7           ; Unknown 9xxx instruction
$6D6    $834A   UNKNOWN  834A            ; Unknown 8xxx instruction
$6D8    $6970   LD       V9, #70         ; Load 112 into V9
$6DA    $9BBE   UNKNOWN  $9BBE           ; Unknown 9xxx instruction
$6DC    $243C   CALL     $43C            ; Call subroutine at 43C
$6DE    $3FD9   SE       VF, #D9         ; Skip if VF == 217
$6E0    $EE74   UNKNOWN  $EE74           ; Unknown Exxx instruction
$6E2    $BC48   JP       V0, $C48        ; Jump to V0 + C48
$6E4    $F067   UNKNOWN  F067            ; Unknown Fxxx instruction
$6E6    $959C   UNKNOWN  $959C           ; Unknown 9xxx instruction
$6E8    $CAC6   RND      VA, #C6         ; VA = random & C6
$6EA    $912D   UNKNOWN  $912D           ; Unknown 9xxx instruction
$6EC    $92C6   UNKNOWN  $92C6           ; Unknown 9xxx instruction
$6EE    $7A99   ADD      VA, #99         ; Add 153 to VA
$6F0    $29F3   CALL     $9F3            ; Call subroutine at 9F3
$6F2    $8930   LD       V9, V3          ; V9 = V3
$6F4    $A22F   LD       I, $22F         ; Load 22F into I
$6F6    $8FAF   UNKNOWN  8FAF            ; Unknown 8xxx instruction
$6F8    $0992   SYS      $992            ; System call to 992
$6FA    $4E2D   SNE      VE, #2D         ; Skip if VE != 45
$6FC    $EA99   UNKNOWN  $EA99           ; Unknown Exxx instruction
$6FE    $24B6   CALL     $4B6            ; Call subroutine at 4B6
$700    $838E   SHL      V3              ; V3 <<= 1, VF = MSB
$702    $8D5A   UNKNOWN  8D5A            ; Unknown 8xxx instruction
$704    $764B   ADD      V6, #4B         ; Add 75 to V6
$706    $712D   ADD      V1, #2D         ; Add 45 to V1
$708    $DE4A   DRW      VE, V4, #A      ; Draw 10-byte sprite at VE, V4
$70A    $0820   SYS      $820            ; System call to 820
$70C    $1875   JP       $875            ; Jump to 875
$70E    $A2AB   LD       I, $2AB         ; Load 2AB into I
$710    $F681   UNKNOWN  F681            ; Unknown Fxxx instruction
$712    $A33F   LD       I, $33F         ; Load 33F into I
$714    $9CB0   SNE      VC, VB          ; Skip if VC != VB
$716    $E1A7   UNKNOWN  $E1A7           ; Unknown Exxx instruction
$718    $964F   UNKNOWN  $964F           ; Unknown 9xxx instruction
$71A    $7D52   ADD      VD, #52         ; Add 82 to VD
$71C    $E357   UNKNOWN  $E357           ; Unknown Exxx instruction
$71E    $6EC5   LD       VE, #C5         ; Load 197 into VE
$720    $9A05   UNKNOWN  $9A05           ; Unknown 9xxx instruction
$722    $1C21   JP       $C21            ; Jump to C21
$724    $C3C4   RND      V3, #C4         ; V3 = random & C4
$726    $F787   UNKNOWN  F787            ; Unknown Fxxx instruction
$728    $82D7   SUBN     V2, VD          ; V2 = VD - V2, VF = !borrow
$72A    $B696   JP       V0, $696        ; Jump to V0 + 696
$72C    $EEEA   UNKNOWN  $EEEA           ; Unknown Exxx instruction
$72E    $3F04   SE       VF, #04         ; Skip if VF == 4
$730    $0839   SYS      $839            ; System call to 839
$732    $E2E3   UNKNOWN  $E2E3           ; Unknown Exxx instruction
$734    $2590   CALL     $590            ; Call subroutine at 590
$736    $027A   SYS      $27A            ; System call to 27A
$738    $3B4E   SE       VB, #4E         ; Skip if VB == 78
$73A    $69E9   LD       V9, #E9         ; Load 233 into V9
$73C    $575B   UNKNOWN  $575B           ; Unknown 5xxx instruction
$73E    $EC66   UNKNOWN  $EC66           ; Unknown Exxx instruction
$740    $02E1   SYS      $2E1            ; System call to 2E1
$742    $B7F9   JP       V0, $7F9        ; Jump to V0 + 7F9
$744    $614C   LD       V1, #4C         ; Load 76 into V1
$746    $9644   UNKNOWN  $9644           ; Unknown 9xxx instruction
$748    $AB0D   LD       I, $B0D         ; Load B0D into I
$74A    $8AB7   SUBN     VA, VB          ; VA = VB - VA, VF = !borrow
$74C    $9FF2   UNKNOWN  $9FF2           ; Unknown 9xxx instruction
$74E    $3AAD   SE       VA, #AD         ; Skip if VA == 173
$750    $8C2D   UNKNOWN  8C2D            ; Unknown 8xxx instruction
$752    $000B   SYS      $00B            ; System call to 00B
$754    $B3CB   JP       V0, $3CB        ; Jump to V0 + 3CB
$756    $A440   LD       I, $440         ; Load 440 into I
$758    $FEAA   UNKNOWN  FEAA            ; Unknown Fxxx instruction
$75A    $84A4   ADD      V4, VA          ; V4 += VA, VF = carry
$75C    $C2D5   RND      V2, #D5         ; V2 = random & D5
$75E    $EB05   UNKNOWN  $EB05           ; Unknown Exxx instruction
$760    $F154   UNKNOWN  F154            ; Unknown Fxxx instruction
$762    $A361   LD       I, $361         ; Load 361 into I
$764    $B289   JP       V0, $289        ; Jump to V0 + 289
$766    $A49F   LD       I, $49F         ; Load 49F into I
$768    $757C   ADD      V5, #7C         ; Add 124 to V5
$76A    $94AD   UNKNOWN  $94AD           ; Unknown 9xxx instruction
$76C    $AC8B   LD       I, $C8B         ; Load C8B into I
$76E    $DAF1   DRW      VA, VF, #1      ; Draw 1-byte sprite at VA, VF
$770    $7BE4   ADD      VB, #E4         ; Add 228 to VB
$772    $25A0   CALL     $5A0            ; Call subroutine at 5A0
$774    $CAA4   RND      VA, #A4         ; VA = random & A4
$776    $612E   LD       V1, #2E         ; Load 46 into V1
$778    $B16B   JP       V0, $16B        ; Jump to V0 + 16B
$77A    $36E1   SE       V6, #E1         ; Skip if V6 == 225
$77C    $078E   SYS      $78E            ; System call to 78E
$77E    $85B8   UNKNOWN  85B8            ; Unknown 8xxx instruction
$780    $6915   LD       V9, #15         ; Load 21 into V9
$782    $C2CF   RND      V2, #CF         ; V2 = random & CF
$784    $B16F   JP       V0, $16F        ; Jump to V0 + 16F
$786    $CE08   RND      VE, #08         ; VE = random & 08
$788    $08DB   SYS      $8DB            ; System call to 8DB
$78A    $E768   UNKNOWN  $E768           ; Unknown Exxx instruction
$78C    $B180   JP       V0, $180        ; Jump to V0 + 180
$78E    $E5FB   UNKNOWN  $E5FB           ; Unknown Exxx instruction
$790    $DFF6   DRW      VF, VF, #6      ; Draw 6-byte sprite at VF, VF
$792    $3F27   SE       VF, #27         ; Skip if VF == 39
$794    $8FD3   XOR      VF, VD          ; VF ^= VD
$796    $6642   LD       V6, #42         ; Load 66 into V6
$798    $074D   SYS      $74D            ; System call to 74D
$79A    $AA55   LD       I, $A55         ; Load A55 into I
$79C    $D05A   DRW      V0, V5, #A      ; Draw 10-byte sprite at V0, V5
$79E    $C17E   RND      V1, #7E         ; V1 = random & 7E
$7A0    $D5B4   DRW      V5, VB, #4      ; Draw 4-byte sprite at V5, VB
$7A2    $A57C   LD       I, $57C         ; Load 57C into I
$7A4    $BE1E   JP       V0, $E1E        ; Jump to V0 + E1E
$7A6    $AE2B   LD       I, $E2B         ; Load E2B into I
$7A8    $509D   UNKNOWN  $509D           ; Unknown 5xxx instruction
$7AA    $4A9C   SNE      VA, #9C         ; Skip if VA != 156
$7AC    $6B54   LD       VB, #54         ; Load 84 into VB
$7AE    $D1D5   DRW      V1, VD, #5      ; Draw 5-byte sprite at V1, VD
$7B0    $4797   SNE      V7, #97         ; Skip if V7 != 151
$7B2    $3008   SE       V0, #08         ; Skip if V0 == 8
$7B4    $AFE4   LD       I, $FE4         ; Load FE4 into I
$7B6    $9075   UNKNOWN  $9075           ; Unknown 9xxx instruction
$7B8    $06C4   SYS      $6C4            ; System call to 6C4
$7BA    $EF24   UNKNOWN  $EF24           ; Unknown Exxx instruction
$7BC    $5A99   UNKNOWN  $5A99           ; Unknown 5xxx instruction
$7BE    $85D7   SUBN     V5, VD          ; V5 = VD - V5, VF = !borrow
$7C0    $177C   JP       $77C            ; Jump to 77C
$7C2    $08D8   SYS      $8D8            ; System call to 8D8
$7C4    $C267   RND      V2, #67         ; V2 = random & 67
$7C6    $34E9   SE       V4, #E9         ; Skip if V4 == 233
$7C8    $70C6   ADD      V0, #C6         ; Add 198 to V0
$7CA    $83FE   SHL      V3              ; V3 <<= 1, VF = MSB
$7CC    $F104   UNKNOWN  F104            ; Unknown Fxxx instruction
$7CE    $667C   LD       V6, #7C         ; Load 124 into V6
$7D0    $4D3C   SNE      VD, #3C         ; Skip if VD != 60
$7D2    $29D1   CALL     $9D1            ; Call subroutine at 9D1
$7D4    $3300   SE       V3, #00         ; Skip if V3 == 0
$7D6    $F89F   UNKNOWN  F89F            ; Unknown Fxxx instruction
$7D8    $6989   LD       V9, #89         ; Load 137 into V9
$7DA    $567B   UNKNOWN  $567B           ; Unknown 5xxx instruction
$7DC    $E863   UNKNOWN  $E863           ; Unknown Exxx instruction
$7DE    $70CE   ADD      V0, #CE         ; Add 206 to V0
$7E0    $543D   UNKNOWN  $543D           ; Unknown 5xxx instruction
$7E2    $5AC5   UNKNOWN  $5AC5           ; Unknown 5xxx instruction
$7E4    $0720   SYS      $720            ; System call to 720
$7E6    $8FAB   UNKNOWN  8FAB            ; Unknown 8xxx instruction
$7E8    $59D8   UNKNOWN  $59D8           ; Unknown 5xxx instruction
$7EA    $435B   SNE      V3, #5B         ; Skip if V3 != 91
$7EC    $C853   RND      V8, #53         ; V8 = random & 53
$7EE    $70DB   ADD      V0, #DB         ; Add 219 to V0
$7F0    $973B   UNKNOWN  $973B           ; Unknown 9xxx instruction
$7F2    $8A6C   UNKNOWN  8A6C            ; Unknown 8xxx instruction
$7F4    $6676   LD       V6, #76         ; Load 118 into V6
$7F6    $C165   RND      V1, #65         ; V1 = random & 65
$7F8    $D059   DRW      V0, V5, #9      ; Draw 9-byte sprite at V0, V5
$7FA    $EF05   UNKNOWN  $EF05           ; Unknown Exxx instruction
$7FC    $FF6B   UNKNOWN  FF6B            ; Unknown Fxxx instruction
$7FE    $BA39   JP       V0, $A39        ; Jump to V0 + A39
$800    $A77C   LD       I, $77C         ; Load 77C into I
$802    $64DA   LD       V4, #DA         ; Load 218 into V4
$804    $224A   CALL     $24A            ; Call subroutine at 24A
$806    $7C22   ADD      VC, #22         ; Add 34 to VC
$808    $78AF   ADD      V8, #AF         ; Add 175 to V8
$80A    $BD40   JP       V0, $D40        ; Jump to V0 + D40
$80C    $34C3   SE       V4, #C3         ; Skip if V4 == 195
$80E    $4765   SNE      V7, #65         ; Skip if V7 != 101
$810    $443D   SNE      V4, #3D         ; Skip if V4 != 61
$812    $BCDA   JP       V0, $CDA        ; Jump to V0 + CDA
$814    $2915   CALL     $915            ; Call subroutine at 915
$816    $9B01   UNKNOWN  $9B01           ; Unknown 9xxx instruction
$818    $52A7   UNKNOWN  $52A7           ; Unknown 5xxx instruction
$81A    $BAD4   JP       V0, $AD4        ; Jump to V0 + AD4
$81C    $EBB4   UNKNOWN  $EBB4           ; Unknown Exxx instruction
$81E    $B279   JP       V0, $279        ; Jump to V0 + 279
$820    $C778   RND      V7, #78         ; V7 = random & 78
$822    $1B78   JP       $B78            ; Jump to B78
$824    $D49C   DRW      V4, V9, #C      ; Draw 12-byte sprite at V4, V9
$826    $3605   SE       V6, #05         ; Skip if V6 == 5
$828    $E61D   UNKNOWN  $E61D           ; Unknown Exxx instruction
$82A    $71CE   ADD      V1, #CE         ; Add 206 to V1
$82C    $B18D   JP       V0, $18D        ; Jump to V0 + 18D
$82E    $6ABD   LD       VA, #BD         ; Load 189 into VA
$830    $77D9   ADD      V7, #D9         ; Add 217 to V7
$832    $87B8   UNKNOWN  87B8            ; Unknown 8xxx instruction
$834    $EE8C   UNKNOWN  $EE8C           ; Unknown Exxx instruction
$836    $6608   LD       V6, #08         ; Load 8 into V6
$838    $B74B   JP       V0, $74B        ; Jump to V0 + 74B
$83A    $62EB   LD       V2, #EB         ; Load 235 into V2
$83C    $CE51   RND      VE, #51         ; VE = random & 51
$83E    $EF54   UNKNOWN  $EF54           ; Unknown Exxx instruction
$840    $0632   SYS      $632            ; System call to 632
$842    $E9DE   UNKNOWN  $E9DE           ; Unknown Exxx instruction
$844    $BA88   JP       V0, $A88        ; Jump to V0 + A88
$846    $57EA   UNKNOWN  $57EA           ; Unknown 5xxx instruction
$848    $A10A   LD       I, $10A         ; Load 10A into I
$84A    $5D54   UNKNOWN  $5D54           ; Unknown 5xxx instruction
$84C    $99B2   UNKNOWN  $99B2           ; Unknown 9xxx instruction
$84E    $283F   CALL     $83F            ; Call subroutine at 83F
$850    $AF65   LD       I, $F65         ; Load F65 into I
$852    $99FA   UNKNOWN  $99FA           ; Unknown 9xxx instruction
$854    $928E   UNKNOWN  $928E           ; Unknown 9xxx instruction
$856    $9514   UNKNOWN  $9514           ; Unknown 9xxx instruction
$858    $5B51   UNKNOWN  $5B51           ; Unknown 5xxx instruction
$85A    $0FE3   SYS      $FE3            ; System call to FE3
$85C    $A48C   LD       I, $48C         ; Load 48C into I
$85E    $BB83   JP       V0, $B83        ; Jump to V0 + B83
$860    $7529   ADD      V5, #29         ; Add 41 to V5
$862    $2ADA   CALL     $ADA            ; Call subroutine at ADA
$864    $4F0A   SNE      VF, #0A         ; Skip if VF != 10
$866    $73D5   ADD      V3, #D5         ; Add 213 to V3
$868    $293D   CALL     $93D            ; Call subroutine at 93D
$86A    $2507   CALL     $507            ; Call subroutine at 507
$86C    $FE73   UNKNOWN  FE73            ; Unknown Fxxx instruction
$86E    $1B20   JP       $B20            ; Jump to B20
$870    $775D   ADD      V7, #5D         ; Add 93 to V7
$872    $8DB6   SHR      VD              ; VD >>= 1, VF = LSB
$874    $A343   LD       I, $343         ; Load 343 into I
$876    $3F88   SE       VF, #88         ; Skip if VF == 136
$878    $14A6   JP       $4A6            ; Jump to 4A6
$87A    $A2F2   LD       I, $2F2         ; Load 2F2 into I
$87C    $0EA1   SYS      $EA1            ; System call to EA1
$87E    $7DEA   ADD      VD, #EA         ; Add 234 to VD
$880    $BFDD   JP       V0, $FDD        ; Jump to V0 + FDD
$882    $CB54   RND      VB, #54         ; VB = random & 54
$884    $4733   SNE      V7, #33         ; Skip if V7 != 51
$886    $4626   SNE      V6, #26         ; Skip if V6 != 38
$888    $91E1   UNKNOWN  $91E1           ; Unknown 9xxx instruction
$88A    $73AB   ADD      V3, #AB         ; Add 171 to V3
$88C    $644F   LD       V4, #4F         ; Load 79 into V4
$88E    $961C   UNKNOWN  $961C           ; Unknown 9xxx instruction
$890    $3A49   SE       VA, #49         ; Skip if VA == 73
$892    $C607   RND      V6, #07         ; V6 = random & 07
$894    $CAEE   RND      VA, #EE         ; VA = random & EE
$896    $312A   SE       V1, #2A         ; Skip if V1 == 42
$898    $0B9D   SYS      $B9D            ; System call to B9D
$89A    $6245   LD       V2, #45         ; Load 69 into V2
$89C    $CF41   RND      VF, #41         ; VF = random & 41
$89E    $A2A9   LD       I, $2A9         ; Load 2A9 into I
$8A0    $4952   SNE      V9, #52         ; Skip if V9 != 82
$8A2    $7D3F   ADD      VD, #3F         ; Add 63 to VD
$8A4    $ED9D   UNKNOWN  $ED9D           ; Unknown Exxx instruction
$8A6    $52EF   UNKNOWN  $52EF           ; Unknown 5xxx instruction
$8A8    $37C2   SE       V7, #C2         ; Skip if V7 == 194
$8AA    $D639   DRW      V6, V3, #9      ; Draw 9-byte sprite at V6, V3
$8AC    $AAD2   LD       I, $AD2         ; Load AD2 into I
$8AE    $7C84   ADD      VC, #84         ; Add 132 to VC
$8B0    $F0D7   UNKNOWN  F0D7            ; Unknown Fxxx instruction
$8B2    $C7CA   RND      V7, #CA         ; V7 = random & CA
$8B4    $A8A7   LD       I, $8A7         ; Load 8A7 into I
$8B6    $92FB   UNKNOWN  $92FB           ; Unknown 9xxx instruction
$8B8    $D68F   DRW      V6, V8, #F      ; Draw 15-byte sprite at V6, V8
$8BA    $3456   SE       V4, #56         ; Skip if V4 == 86
$8BC    $FF72   UNKNOWN  FF72            ; Unknown Fxxx instruction
$8BE    $D541   DRW      V5, V4, #1      ; Draw 1-byte sprite at V5, V4
$8C0    $AEE1   LD       I, $EE1         ; Load EE1 into I
$8C2    $F220   UNKNOWN  F220            ; Unknown Fxxx instruction
$8C4    $9B53   UNKNOWN  $9B53           ; Unknown 9xxx instruction
$8C6    $9C50   SNE      VC, V5          ; Skip if VC != V5
$8C8    $6F99   LD       VF, #99         ; Load 153 into VF
$8CA    $54B2   UNKNOWN  $54B2           ; Unknown 5xxx instruction
$8CC    $08EE   SYS      $8EE            ; System call to 8EE
$8CE    $4BC3   SNE      VB, #C3         ; Skip if VB != 195
$8D0    $8CA7   SUBN     VC, VA          ; VC = VA - VC, VF = !borrow
$8D2    $9FA7   UNKNOWN  $9FA7           ; Unknown 9xxx instruction
$8D4    $6C80   LD       VC, #80         ; Load 128 into VC
$8D6    $092C   SYS      $92C            ; System call to 92C
$8D8    $1B14   JP       $B14            ; Jump to B14
$8DA    $343F   SE       V4, #3F         ; Skip if V4 == 63
$8DC    $B2E1   JP       V0, $2E1        ; Jump to V0 + 2E1
$8DE    $23AE   CALL     $3AE            ; Call subroutine at 3AE
$8E0    $C4FD   RND      V4, #FD         ; V4 = random & FD
$8E2    $214D   CALL     $14D            ; Call subroutine at 14D
$8E4    $5BBB   UNKNOWN  $5BBB           ; Unknown 5xxx instruction
$8E6    $EB2F   UNKNOWN  $EB2F           ; Unknown Exxx instruction
$8E8    $F1FF   UNKNOWN  F1FF            ; Unknown Fxxx instruction
$8EA    $7A8B   ADD      VA, #8B         ; Add 139 to VA
$8EC    $DBBA   DRW      VB, VB, #A      ; Draw 10-byte sprite at VB, VB
$8EE    $AEA6   LD       I, $EA6         ; Load EA6 into I
$8F0    $7C42   ADD      VC, #42         ; Add 66 to VC
$8F2    $C531   RND      V5, #31         ; V5 = random & 31
$8F4    $F0E8   UNKNOWN  F0E8            ; Unknown Fxxx instruction
$8F6    $8B5E   SHL      VB              ; VB <<= 1, VF = MSB
$8F8    $A602   LD       I, $602         ; Load 602 into I
$8FA    $1842   JP       $842            ; Jump to 842
$8FC    $FD44   UNKNOWN  FD44            ; Unknown Fxxx instruction
$8FE    $634B   LD       V3, #4B         ; Load 75 into V3
$900    $27AB   CALL     $7AB            ; Call subroutine at 7AB
$902    $BFFF   JP       V0, $FFF        ; Jump to V0 + FFF
$904    $BA27   JP       V0, $A27        ; Jump to V0 + A27
$906    $650D   LD       V5, #0D         ; Load 13 into V5
$908    $094C   SYS      $94C            ; System call to 94C
$90A    $8677   SUBN     V6, V7          ; V6 = V7 - V6, VF = !borrow
$90C    $6172   LD       V1, #72         ; Load 114 into V1
$90E    $107D   JP       $07D            ; Jump to 07D
$910    $077F   SYS      $77F            ; System call to 77F
$912    $39C5   SE       V9, #C5         ; Skip if V9 == 197
$914    $FF4D   UNKNOWN  FF4D            ; Unknown Fxxx instruction
$916    $A032   LD       I, $032         ; Load 032 into I
$918    $04FE   SYS      $4FE            ; System call to 4FE
$91A    $EB2C   UNKNOWN  $EB2C           ; Unknown Exxx instruction
$91C    $7FD3   ADD      VF, #D3         ; Add 211 to VF
$91E    $E7DC   UNKNOWN  $E7DC           ; Unknown Exxx instruction
$920    $9A1D   UNKNOWN  $9A1D           ; Unknown 9xxx instruction
$922    $8021   OR       V0, V2          ; V0 |= V2
$924    $51D4   UNKNOWN  $51D4           ; Unknown 5xxx instruction
$926    $1AA4   JP       $AA4            ; Jump to AA4
$928    $7BBB   ADD      VB, #BB         ; Add 187 to VB
$92A    $3A7B   SE       VA, #7B         ; Skip if VA == 123
$92C    $5502   UNKNOWN  $5502           ; Unknown 5xxx instruction
$92E    $5399   UNKNOWN  $5399           ; Unknown 5xxx instruction
$930    $5489   UNKNOWN  $5489           ; Unknown 5xxx instruction
$932    $FB23   UNKNOWN  FB23            ; Unknown Fxxx instruction
$934    $E7B2   UNKNOWN  $E7B2           ; Unknown Exxx instruction
$936    $93FA   UNKNOWN  $93FA           ; Unknown 9xxx instruction
$938    $F4B7   UNKNOWN  F4B7            ; Unknown Fxxx instruction
$93A    $E271   UNKNOWN  $E271           ; Unknown Exxx instruction
$93C    $F89F   UNKNOWN  F89F            ; Unknown Fxxx instruction
$93E    $1893   JP       $893            ; Jump to 893
$940    $C6FA   RND      V6, #FA         ; V6 = random & FA
$942    $2C1A   CALL     $C1A            ; Call subroutine at C1A
$944    $7590   ADD      V5, #90         ; Add 144 to V5
$946    $CDF6   RND      VD, #F6         ; VD = random & F6
$948    $B4DD   JP       V0, $4DD        ; Jump to V0 + 4DD
$94A    $671C   LD       V7, #1C         ; Load 28 into V7
$94C    $249A   CALL     $49A            ; Call subroutine at 49A
$94E    $D32A   DRW      V3, V2, #A      ; Draw 10-byte sprite at V3, V2
$950    $8F92   AND      VF, V9          ; VF &= V9
$952    $4B6A   SNE      VB, #6A         ; Skip if VB != 106
$954    $BE10   JP       V0, $E10        ; Jump to V0 + E10
$956    $0C54   SYS      $C54            ; System call to C54
$958    $0FAE   SYS      $FAE            ; System call to FAE
$95A    $DF6C   DRW      VF, V6, #C      ; Draw 12-byte sprite at VF, V6
$95C    $D46C   DRW      V4, V6, #C      ; Draw 12-byte sprite at V4, V6
$95E    $D8E6   DRW      V8, VE, #6      ; Draw 6-byte sprite at V8, VE
$960    $CF86   RND      VF, #86         ; VF = random & 86
$962    $C7BB   RND      V7, #BB         ; V7 = random & BB
$964    $3818   SE       V8, #18         ; Skip if V8 == 24
$966    $E9BA   UNKNOWN  $E9BA           ; Unknown Exxx instruction
$968    $4B23   SNE      VB, #23         ; Skip if VB != 35
$96A    $ABE1   LD       I, $BE1         ; Load BE1 into I
$96C    $09BE   SYS      $9BE            ; System call to 9BE
$96E    $2C73   CALL     $C73            ; Call subroutine at C73
$970    $4125   SNE      V1, #25         ; Skip if V1 != 37
$972    $7DDD   ADD      VD, #DD         ; Add 221 to VD
$974    $5176   UNKNOWN  $5176           ; Unknown 5xxx instruction
$976    $CD3F   RND      VD, #3F         ; VD = random & 3F
$978    $7436   ADD      V4, #36         ; Add 54 to V4
$97A    $34A2   SE       V4, #A2         ; Skip if V4 == 162
$97C    $9C41   UNKNOWN  $9C41           ; Unknown 9xxx instruction
$97E    $DF37   DRW      VF, V3, #7      ; Draw 7-byte sprite at VF, V3
$980    $9A27   UNKNOWN  $9A27           ; Unknown 9xxx instruction
$982    $E7F8   UNKNOWN  $E7F8           ; Unknown Exxx instruction
$984    $DC60   DRW      VC, V6, #0      ; Draw 0-byte sprite at VC, V6
$986    $4CAD   SNE      VC, #AD         ; Skip if VC != 173
$988    $E462   UNKNOWN  $E462           ; Unknown Exxx instruction
$98A    $6687   LD       V6, #87         ; Load 135 into V6
$98C    $7A09   ADD      VA, #09         ; Add 9 to VA
$98E    $2401   CALL     $401            ; Call subroutine at 401
$990    $D6F0   DRW      V6, VF, #0      ; Draw 0-byte sprite at V6, VF
$992    $9341   UNKNOWN  $9341           ; Unknown 9xxx instruction
$994    $D6E4   DRW      V6, VE, #4      ; Draw 4-byte sprite at V6, VE
$996    $2FB3   CALL     $FB3            ; Call subroutine at FB3
$998    $0069   SYS      $069            ; System call to 069
$99A    $7878   ADD      V8, #78         ; Add 120 to V8
$99C    $A0D4   LD       I, $0D4         ; Load 0D4 into I
$99E    $B598   JP       V0, $598        ; Jump to V0 + 598
$9A0    $942D   UNKNOWN  $942D           ; Unknown 9xxx instruction
$9A2    $BF4A   JP       V0, $F4A        ; Jump to V0 + F4A
$9A4    $4A7F   SNE      VA, #7F         ; Skip if VA != 127
$9A6    $B1FE   JP       V0, $1FE        ; Jump to V0 + 1FE
$9A8    $CE96   RND      VE, #96         ; VE = random & 96
$9AA    $1844   JP       $844            ; Jump to 844
$9AC    $6821   LD       V8, #21         ; Load 33 into V8
$9AE    $17DF   JP       $7DF            ; Jump to 7DF
$9B0    $8C9C   UNKNOWN  8C9C            ; Unknown 8xxx instruction
$9B2    $CA94   RND      VA, #94         ; VA = random & 94
$9B4    $275D   CALL     $75D            ; Call subroutine at 75D
$9B6    $357A   SE       V5, #7A         ; Skip if V5 == 122
$9B8    $DAB0   DRW      VA, VB, #0      ; Draw 0-byte sprite at VA, VB
$9BA    $CB3D   RND      VB, #3D         ; VB = random & 3D
$9BC    $E9E4   UNKNOWN  $E9E4           ; Unknown Exxx instruction
$9BE    $200F   CALL     $00F            ; Call subroutine at 00F
$9C0    $ED20   UNKNOWN  $ED20           ; Unknown Exxx instruction
$9C2    $9111   UNKNOWN  $9111           ; Unknown 9xxx instruction
$9C4    $7ACA   ADD      VA, #CA         ; Add 202 to VA
$9C6    $944A   UNKNOWN  $944A           ; Unknown 9xxx instruction
$9C8    $083B   SYS      $83B            ; System call to 83B
$9CA    $0827   SYS      $827            ; System call to 827
$9CC    $E2F0   UNKNOWN  $E2F0           ; Unknown Exxx instruction
$9CE    $B476   JP       V0, $476        ; Jump to V0 + 476
$9D0    $3DE4   SE       VD, #E4         ; Skip if VD == 228
$9D2    $6F5F   LD       VF, #5F         ; Load 95 into VF
$9D4    $4FC1   SNE      VF, #C1         ; Skip if VF != 193
$9D6    $0303   SYS      $303            ; System call to 303
$9D8    $0469   SYS      $469            ; System call to 469
$9DA    $B2AA   JP       V0, $2AA        ; Jump to V0 + 2AA
$9DC    $B374   JP       V0, $374        ; Jump to V0 + 374
$9DE    $412C   SNE      V1, #2C         ; Skip if V1 != 44
$9E0    $AC96   LD       I, $C96         ; Load C96 into I
$9E2    $2FF7   CALL     $FF7            ; Call subroutine at FF7
$9E4    $F7AC   UNKNOWN  F7AC            ; Unknown Fxxx instruction
$9E6    $9B01   UNKNOWN  $9B01           ; Unknown 9xxx instruction
$9E8    $DFEE   DRW      VF, VE, #E      ; Draw 14-byte sprite at VF, VE
$9EA    $2A75   CALL     $A75            ; Call subroutine at A75
$9EC    $FB15   LD       DT, VB          ; Delay timer = VB
$9EE    $5337   UNKNOWN  $5337           ; Unknown 5xxx instruction
$9F0    $2CF8   CALL     $CF8            ; Call subroutine at CF8
$9F2    $DFFF   DRW      VF, VF, #F      ; Draw 15-byte sprite at VF, VF
$9F4    $9FE8   UNKNOWN  $9FE8           ; Unknown 9xxx instruction
$9F6    $B41D   JP       V0, $41D        ; Jump to V0 + 41D
$9F8    $DD27   DRW      VD, V2, #7      ; Draw 7-byte sprite at VD, V2
$9FA    $672B   LD       V7, #2B         ; Load 43 into V7
$9FC    $2E76   CALL     $E76            ; Call subroutine at E76
$9FE    $DF2C   DRW      VF, V2, #C      ; Draw 12-byte sprite at VF, V2
$A00    $0A3E   SYS      $A3E            ; System call to A3E
$A02    $C703   RND      V7, #03         ; V7 = random & 03
$A04    $A182   LD       I, $182         ; Load 182 into I
$A06    $F714   UNKNOWN  F714            ; Unknown Fxxx instruction
$A08    $CBEB   RND      VB, #EB         ; VB = random & EB
$A0A    $3CD2   SE       VC, #D2         ; Skip if VC == 210
$A0C    $2964   CALL     $964            ; Call subroutine at 964
$A0E    $5465   UNKNOWN  $5465           ; Unknown 5xxx instruction
$A10    $6919   LD       V9, #19         ; Load 25 into V9
$A12    $6DC3   LD       VD, #C3         ; Load 195 into VD
$A14    $28C8   CALL     $8C8            ; Call subroutine at 8C8
$A16    $FAC3   UNKNOWN  FAC3            ; Unknown Fxxx instruction
$A18    $44B9   SNE      V4, #B9         ; Skip if V4 != 185
$A1A    $84D9   UNKNOWN  84D9            ; Unknown 8xxx instruction
$A1C    $1AED   JP       $AED            ; Jump to AED
$A1E    $482C   SNE      V8, #2C         ; Skip if V8 != 44
$A20    $1DF9   JP       $DF9            ; Jump to DF9
$A22    $AAAA   LD       I, $AAA         ; Load AAA into I
$A24    $4C3A   SNE      VC, #3A         ; Skip if VC != 58
$A26    $1BF0   JP       $BF0            ; Jump to BF0
$A28    $657E   LD       V5, #7E         ; Load 126 into V5
$A2A    $4F74   SNE      VF, #74         ; Skip if VF != 116
$A2C    $2E9F   CALL     $E9F            ; Call subroutine at E9F
$A2E    $ACB5   LD       I, $CB5         ; Load CB5 into I
$A30    $AC33   LD       I, $C33         ; Load C33 into I
$A32    $0B53   SYS      $B53            ; System call to B53
$A34    $7447   ADD      V4, #47         ; Add 71 to V4
$A36    $283F   CALL     $83F            ; Call subroutine at 83F
$A38    $AAD3   LD       I, $AD3         ; Load AD3 into I
$A3A    $12C1   JP       $2C1            ; Jump to 2C1
$A3C    $272E   CALL     $72E            ; Call subroutine at 72E
$A3E    $36F2   SE       V6, #F2         ; Skip if V6 == 242
$A40    $FE17   UNKNOWN  FE17            ; Unknown Fxxx instruction
$A42    $FC1F   UNKNOWN  FC1F            ; Unknown Fxxx instruction
$A44    $8A81   OR       VA, V8          ; VA |= V8
$A46    $4632   SNE      V6, #32         ; Skip if V6 != 50
$A48    $C433   RND      V4, #33         ; V4 = random & 33
$A4A    $C4A7   RND      V4, #A7         ; V4 = random & A7
$A4C    $4F3D   SNE      VF, #3D         ; Skip if VF != 61
$A4E    $E92F   UNKNOWN  $E92F           ; Unknown Exxx instruction
$A50    $DDC7   DRW      VD, VC, #7      ; Draw 7-byte sprite at VD, VC
$A52    $DAEB   DRW      VA, VE, #B      ; Draw 11-byte sprite at VA, VE
$A54    $9E0A   UNKNOWN  $9E0A           ; Unknown 9xxx instruction
$A56    $91AC   UNKNOWN  $91AC           ; Unknown 9xxx instruction
$A58    $E164   UNKNOWN  $E164           ; Unknown Exxx instruction
$A5A    $3149   SE       V1, #49         ; Skip if V1 == 73
$A5C    $D0C6   DRW      V0, VC, #6      ; Draw 6-byte sprite at V0, VC
$A5E    $5F54   UNKNOWN  $5F54           ; Unknown 5xxx instruction
$A60    $90F2   UNKNOWN  $90F2           ; Unknown 9xxx instruction
$A62    $DC0D   DRW      VC, V0, #D      ; Draw 13-byte sprite at VC, V0
$A64    $9912   UNKNOWN  $9912           ; Unknown 9xxx instruction
$A66    $D09F   DRW      V0, V9, #F      ; Draw 15-byte sprite at V0, V9
$A68    $80FD   UNKNOWN  80FD            ; Unknown 8xxx instruction
$A6A    $96BC   UNKNOWN  $96BC           ; Unknown 9xxx instruction
$A6C    $449A   SNE      V4, #9A         ; Skip if V4 != 154
$A6E    $CA48   RND      VA, #48         ; VA = random & 48
$A70    $4766   SNE      V7, #66         ; Skip if V7 != 102
$A72    $6C82   LD       VC, #82         ; Load 130 into VC
$A74    $039C   SYS      $39C            ; System call to 39C
$A76    $FC00   UNKNOWN  FC00            ; Unknown Fxxx instruction
$A78    $76A8   ADD      V6, #A8         ; Add 168 to V6
$A7A    $1315   JP       $315            ; Jump to 315
$A7C    $64E9   LD       V4, #E9         ; Load 233 into V4
$A7E    $B931   JP       V0, $931        ; Jump to V0 + 931
$A80    $27CA   CALL     $7CA            ; Call subroutine at 7CA
$A82    $EAA1   SKNP     VA              ; Skip if key VA not pressed
$A84    $90BC   UNKNOWN  $90BC           ; Unknown 9xxx instruction
$A86    $7958   ADD      V9, #58         ; Add 88 to V9
$A88    $972B   UNKNOWN  $972B           ; Unknown 9xxx instruction
$A8A    $F960   UNKNOWN  F960            ; Unknown Fxxx instruction
$A8C    $1AB9   JP       $AB9            ; Jump to AB9
$A8E    $8FAF   UNKNOWN  8FAF            ; Unknown 8xxx instruction
$A90    $768B   ADD      V6, #8B         ; Add 139 to V6
$A92    $0BA5   SYS      $BA5            ; System call to BA5
$A94    $BB69   JP       V0, $B69        ; Jump to V0 + B69
$A96    $F0FA   UNKNOWN  F0FA            ; Unknown Fxxx instruction
$A98    $C87D   RND      V8, #7D         ; V8 = random & 7D
$A9A    $3692   SE       V6, #92         ; Skip if V6 == 146
$A9C    $AE9F   LD       I, $E9F         ; Load E9F into I
$A9E    $92B2   UNKNOWN  $92B2           ; Unknown 9xxx instruction
$AA0    $AE34   LD       I, $E34         ; Load E34 into I
$AA2    $D380   DRW      V3, V8, #0      ; Draw 0-byte sprite at V3, V8
$AA4    $FD52   UNKNOWN  FD52            ; Unknown Fxxx instruction
$AA6    $AB83   LD       I, $B83         ; Load B83 into I
$AA8    $C8C5   RND      V8, #C5         ; V8 = random & C5
$AAA    $0175   SYS      $175            ; System call to 175
$AAC    $D142   DRW      V1, V4, #2      ; Draw 2-byte sprite at V1, V4
$AAE    $5329   UNKNOWN  $5329           ; Unknown 5xxx instruction
$AB0    $2691   CALL     $691            ; Call subroutine at 691
$AB2    $F39D   UNKNOWN  F39D            ; Unknown Fxxx instruction
$AB4    $C888   RND      V8, #88         ; V8 = random & 88
$AB6    $F86D   UNKNOWN  F86D            ; Unknown Fxxx instruction
$AB8    $91DC   UNKNOWN  $91DC           ; Unknown 9xxx instruction
$ABA    $1E96   JP       $E96            ; Jump to E96
$ABC    $3889   SE       V8, #89         ; Skip if V8 == 137
$ABE    $2EBD   CALL     $EBD            ; Call subroutine at EBD
$AC0    $C4D6   RND      V4, #D6         ; V4 = random & D6
$AC2    $37AB   SE       V7, #AB         ; Skip if V7 == 171
$AC4    $E823   UNKNOWN  $E823           ; Unknown Exxx instruction
$AC6    $7BE8   ADD      VB, #E8         ; Add 232 to VB
$AC8    $3989   SE       V9, #89         ; Skip if V9 == 137
$ACA    $507B   UNKNOWN  $507B           ; Unknown 5xxx instruction
$ACC    $712A   ADD      V1, #2A         ; Add 42 to V1
$ACE    $0842   SYS      $842            ; System call to 842
$AD0    $1C3E   JP       $C3E            ; Jump to C3E
$AD2    $B6CC   JP       V0, $6CC        ; Jump to V0 + 6CC
$AD4    $E84E   UNKNOWN  $E84E           ; Unknown Exxx instruction
$AD6    $3A41   SE       VA, #41         ; Skip if VA == 65
$AD8    $ED1D   UNKNOWN  $ED1D           ; Unknown Exxx instruction
$ADA    $EC5E   UNKNOWN  $EC5E           ; Unknown Exxx instruction
$ADC    $45AA   SNE      V5, #AA         ; Skip if V5 != 170
$ADE    $D1E4   DRW      V1, VE, #4      ; Draw 4-byte sprite at V1, VE
$AE0    $9EA9   UNKNOWN  $9EA9           ; Unknown 9xxx instruction
$AE2    $2002   CALL     $002            ; Call subroutine at 002
$AE4    $DB8D   DRW      VB, V8, #D      ; Draw 13-byte sprite at VB, V8
$AE6    $0966   SYS      $966            ; System call to 966
$AE8    $60A1   LD       V0, #A1         ; Load 161 into V0
$AEA    $73A2   ADD      V3, #A2         ; Add 162 to V3
$AEC    $0957   SYS      $957            ; System call to 957
$AEE    $5049   UNKNOWN  $5049           ; Unknown 5xxx instruction
$AF0    $AB5D   LD       I, $B5D         ; Load B5D into I
$AF2    $FA6B   UNKNOWN  FA6B            ; Unknown Fxxx instruction
$AF4    $C76B   RND      V7, #6B         ; V7 = random & 6B
$AF6    $3F86   SE       VF, #86         ; Skip if VF == 134
$AF8    $656D   LD       V5, #6D         ; Load 109 into V5
$AFA    $A857   LD       I, $857         ; Load 857 into I
$AFC    $5005   UNKNOWN  $5005           ; Unknown 5xxx instruction
$AFE    $9532   UNKNOWN  $9532           ; Unknown 9xxx instruction
$B00    $43E3   SNE      V3, #E3         ; Skip if V3 != 227
$B02    $05A7   SYS      $5A7            ; System call to 5A7
$B04    $99FD   UNKNOWN  $99FD           ; Unknown 9xxx instruction
$B06    $B7D9   JP       V0, $7D9        ; Jump to V0 + 7D9
$B08    $3364   SE       V3, #64         ; Skip if V3 == 100
$B0A    $C611   RND      V6, #11         ; V6 = random & 11
$B0C    $D667   DRW      V6, V6, #7      ; Draw 7-byte sprite at V6, V6
$B0E    $978E   UNKNOWN  $978E           ; Unknown 9xxx instruction
$B10    $6E29   LD       VE, #29         ; Load 41 into VE
$B12    $34B2   SE       V4, #B2         ; Skip if V4 == 178
$B14    $2356   CALL     $356            ; Call subroutine at 356
$B16    $099A   SYS      $99A            ; System call to 99A
$B18    $FC3A   UNKNOWN  FC3A            ; Unknown Fxxx instruction
$B1A    $7265   ADD      V2, #65         ; Add 101 to V2
$B1C    $7FB0   ADD      VF, #B0         ; Add 176 to VF
$B1E    $DF7D   DRW      VF, V7, #D      ; Draw 13-byte sprite at VF, V7
$B20    $7265   ADD      V2, #65         ; Add 101 to V2
$B22    $105D   JP       $05D            ; Jump to 05D
$B24    $0FD8   SYS      $FD8            ; System call to FD8
$B26    $7A2D   ADD      VA, #2D         ; Add 45 to VA
$B28    $10B9   JP       $0B9            ; Jump to 0B9
$B2A    $AC4F   LD       I, $C4F         ; Load C4F into I
$B2C    $0F2D   SYS      $F2D            ; System call to F2D
$B2E    $575F   UNKNOWN  $575F           ; Unknown 5xxx instruction
$B30    $A68B   LD       I, $68B         ; Load 68B into I
$B32    $5BDE   UNKNOWN  $5BDE           ; Unknown 5xxx instruction
$B34    $6D3E   LD       VD, #3E         ; Load 62 into VD
$B36    $4A29   SNE      VA, #29         ; Skip if VA != 41
$B38    $41AB   SNE      V1, #AB         ; Skip if V1 != 171
$B3A    $F943   UNKNOWN  F943            ; Unknown Fxxx instruction
$B3C    $3ACF   SE       VA, #CF         ; Skip if VA == 207
$B3E    $43CB   SNE      V3, #CB         ; Skip if V3 != 203
$B40    $55B2   UNKNOWN  $55B2           ; Unknown 5xxx instruction
$B42    $DF19   DRW      VF, V1, #9      ; Draw 9-byte sprite at VF, V1
$B44    $B7AB   JP       V0, $7AB        ; Jump to V0 + 7AB
$B46    $4024   SNE      V0, #24         ; Skip if V0 != 36
$B48    $4A95   SNE      VA, #95         ; Skip if VA != 149
$B4A    $9FCD   UNKNOWN  $9FCD           ; Unknown 9xxx instruction
$B4C    $97AA   UNKNOWN  $97AA           ; Unknown 9xxx instruction
$B4E    $06D6   SYS      $6D6            ; System call to 6D6
$B50    $4BD1   SNE      VB, #D1         ; Skip if VB != 209
$B52    $6021   LD       V0, #21         ; Load 33 into V0
$B54    $961A   UNKNOWN  $961A           ; Unknown 9xxx instruction
$B56    $1CA1   JP       $CA1            ; Jump to CA1
$B58    $5E8F   UNKNOWN  $5E8F           ; Unknown 5xxx instruction
$B5A    $BCF1   JP       V0, $CF1        ; Jump to V0 + CF1
$B5C    $5313   UNKNOWN  $5313           ; Unknown 5xxx instruction
$B5E    $288E   CALL     $88E            ; Call subroutine at 88E
$B60    $8A5B   UNKNOWN  8A5B            ; Unknown 8xxx instruction
$B62    $E961   UNKNOWN  $E961           ; Unknown Exxx instruction
$B64    $2370   CALL     $370            ; Call subroutine at 370
$B66    $0E30   SYS      $E30            ; System call to E30
$B68    $79A7   ADD      V9, #A7         ; Add 167 to V9
$B6A    $AEBB   LD       I, $EBB         ; Load EBB into I
$B6C    $7A46   ADD      VA, #46         ; Add 70 to VA
$B6E    $9149   UNKNOWN  $9149           ; Unknown 9xxx instruction
$B70    $582C   UNKNOWN  $582C           ; Unknown 5xxx instruction
$B72    $A2BF   LD       I, $2BF         ; Load 2BF into I
$B74    $BB7A   JP       V0, $B7A        ; Jump to V0 + B7A
$B76    $BD60   JP       V0, $D60        ; Jump to V0 + D60
$B78    $6B10   LD       VB, #10         ; Load 16 into VB
$B7A    $AEAD   LD       I, $EAD         ; Load EAD into I
$B7C    $AD06   LD       I, $D06         ; Load D06 into I
$B7E    $DA9C   DRW      VA, V9, #C      ; Draw 12-byte sprite at VA, V9
$B80    $B009   JP       V0, $009        ; Jump to V0 + 009
$B82    $5F82   UNKNOWN  $5F82           ; Unknown 5xxx instruction
$B84    $C546   RND      V5, #46         ; V5 = random & 46
$B86    $3B4C   SE       VB, #4C         ; Skip if VB == 76
$B88    $B7E5   JP       V0, $7E5        ; Jump to V0 + 7E5
$B8A    $CFD2   RND      VF, #D2         ; VF = random & D2
$B8C    $9D4C   UNKNOWN  $9D4C           ; Unknown 9xxx instruction
$B8E    $36A2   SE       V6, #A2         ; Skip if V6 == 162
$B90    $5319   UNKNOWN  $5319           ; Unknown 5xxx instruction
$B92    $CD87   RND      VD, #87         ; VD = random & 87
$B94    $77BE   ADD      V7, #BE         ; Add 190 to V7
$B96    $23A6   CALL     $3A6            ; Call subroutine at 3A6
$B98    $0E3A   SYS      $E3A            ; System call to E3A
$B9A    $AD0C   LD       I, $D0C         ; Load D0C into I
$B9C    $DC49   DRW      VC, V4, #9      ; Draw 9-byte sprite at VC, V4
$B9E    $6575   LD       V5, #75         ; Load 117 into V5
$BA0    $39F0   SE       V9, #F0         ; Skip if V9 == 240
$BA2    $1265   JP       $265            ; Jump to 265
$BA4    $D05F   DRW      V0, V5, #F      ; Draw 15-byte sprite at V0, V5
$BA6    $AA49   LD       I, $A49         ; Load A49 into I
$BA8    $ED1D   UNKNOWN  $ED1D           ; Unknown Exxx instruction
$BAA    $6843   LD       V8, #43         ; Load 67 into V8
$BAC    $328A   SE       V2, #8A         ; Skip if V2 == 138
$BAE    $F2DD   UNKNOWN  F2DD            ; Unknown Fxxx instruction
$BB0    $881F   UNKNOWN  881F            ; Unknown 8xxx instruction
$BB2    $8C9C   UNKNOWN  8C9C            ; Unknown 8xxx instruction
$BB4    $91FB   UNKNOWN  $91FB           ; Unknown 9xxx instruction
$BB6    $2A8C   CALL     $A8C            ; Call subroutine at A8C
$BB8    $878E   SHL      V7              ; V7 <<= 1, VF = MSB
$BBA    $BB69   JP       V0, $B69        ; Jump to V0 + B69
$BBC    $2EE5   CALL     $EE5            ; Call subroutine at EE5
$BBE    $9F09   UNKNOWN  $9F09           ; Unknown 9xxx instruction
$BC0    $7EEC   ADD      VE, #EC         ; Add 236 to VE
$BC2    $DCA1   DRW      VC, VA, #1      ; Draw 1-byte sprite at VC, VA
$BC4    $BCA2   JP       V0, $CA2        ; Jump to V0 + CA2
$BC6    $444E   SNE      V4, #4E         ; Skip if V4 != 78
$BC8    $0755   SYS      $755            ; System call to 755
$BCA    $2FB9   CALL     $FB9            ; Call subroutine at FB9
$BCC    $F1C5   UNKNOWN  F1C5            ; Unknown Fxxx instruction
$BCE    $F9CB   UNKNOWN  F9CB            ; Unknown Fxxx instruction
$BD0    $C863   RND      V8, #63         ; V8 = random & 63
$BD2    $E718   UNKNOWN  $E718           ; Unknown Exxx instruction
$BD4    $636C   LD       V3, #6C         ; Load 108 into V3
$BD6    $C632   RND      V6, #32         ; V6 = random & 32
$BD8    $87BA   UNKNOWN  87BA            ; Unknown 8xxx instruction
$BDA    $025F   SYS      $25F            ; System call to 25F
$BDC    $C70D   RND      V7, #0D         ; V7 = random & 0D
$BDE    $B25B   JP       V0, $25B        ; Jump to V0 + 25B
$BE0    $7112   ADD      V1, #12         ; Add 18 to V1
$BE2    $E399   UNKNOWN  $E399           ; Unknown Exxx instruction
$BE4    $F014   UNKNOWN  F014            ; Unknown Fxxx instruction
$BE6    $154F   JP       $54F            ; Jump to 54F
$BE8    $084F   SYS      $84F            ; System call to 84F
$BEA    $4CBD   SNE      VC, #BD         ; Skip if VC != 189
$BEC    $ACE8   LD       I, $CE8         ; Load CE8 into I
$BEE    $D8B4   DRW      V8, VB, #4      ; Draw 4-byte sprite at V8, VB
$BF0    $4BC1   SNE      VB, #C1         ; Skip if VB != 193
$BF2    $5DDC   UNKNOWN  $5DDC           ; Unknown 5xxx instruction
$BF4    $E410   UNKNOWN  $E410           ; Unknown Exxx instruction
$BF6    $1211   JP       $211            ; Jump to 211
$BF8    $34EF   SE       V4, #EF         ; Skip if V4 == 239
$BFA    $F2CF   UNKNOWN  F2CF            ; Unknown Fxxx instruction
$BFC    $C971   RND      V9, #71         ; V9 = random & 71
$BFE    $D105   DRW      V1, V0, #5      ; Draw 5-byte sprite at V1, V0
$C00    $7815   ADD      V8, #15         ; Add 21 to V8
$C02    $E693   UNKNOWN  $E693           ; Unknown Exxx instruction
$C04    $69A4   LD       V9, #A4         ; Load 164 into V9
$C06    $D3B6   DRW      V3, VB, #6      ; Draw 6-byte sprite at V3, VB
$C08    $B6CB   JP       V0, $6CB        ; Jump to V0 + 6CB
$C0A    $5EDC   UNKNOWN  $5EDC           ; Unknown 5xxx instruction
$C0C    $02CD   SYS      $2CD            ; System call to 2CD
$C0E    $D5DB   DRW      V5, VD, #B      ; Draw 11-byte sprite at V5, VD
$C10    $1AA9   JP       $AA9            ; Jump to AA9
$C12    $03D0   SYS      $3D0            ; System call to 3D0
$C14    $C465   RND      V4, #65         ; V4 = random & 65
$C16    $04D6   SYS      $4D6            ; System call to 4D6
$C18    $E7C3   UNKNOWN  $E7C3           ; Unknown Exxx instruction
$C1A    $ED8F   UNKNOWN  $ED8F           ; Unknown Exxx instruction
$C1C    $071F   SYS      $71F            ; System call to 71F
$C1E    $2ABA   CALL     $ABA            ; Call subroutine at ABA
$C20    $C13E   RND      V1, #3E         ; V1 = random & 3E
$C22    $E085   UNKNOWN  $E085           ; Unknown Exxx instruction
$C24    $4A87   SNE      VA, #87         ; Skip if VA != 135
$C26    $B8B8   JP       V0, $8B8        ; Jump to V0 + 8B8
$C28    $C110   RND      V1, #10         ; V1 = random & 10
$C2A    $3856   SE       V8, #56         ; Skip if V8 == 86
$C2C    $52CF   UNKNOWN  $52CF           ; Unknown 5xxx instruction
$C2E    $A5A9   LD       I, $5A9         ; Load 5A9 into I
$C30    $BA62   JP       V0, $A62        ; Jump to V0 + A62
$C32    $EF3A   UNKNOWN  $EF3A           ; Unknown Exxx instruction
$C34    $7D48   ADD      VD, #48         ; Add 72 to VD
$C36    $4844   SNE      V8, #44         ; Skip if V8 != 68
$C38    $B074   JP       V0, $074        ; Jump to V0 + 074
$C3A    $5F98   UNKNOWN  $5F98           ; Unknown 5xxx instruction
$C3C    $F802   UNKNOWN  F802            ; Unknown Fxxx instruction
$C3E    $F057   UNKNOWN  F057            ; Unknown Fxxx instruction
$C40    $E263   UNKNOWN  $E263           ; Unknown Exxx instruction
$C42    $EE95   UNKNOWN  $EE95           ; Unknown Exxx instruction
$C44    $87EA   UNKNOWN  87EA            ; Unknown 8xxx instruction
$C46    $F1F7   UNKNOWN  F1F7            ; Unknown Fxxx instruction
$C48    $990A   UNKNOWN  $990A           ; Unknown 9xxx instruction
$C4A    $7F0D   ADD      VF, #0D         ; Add 13 to VF
$C4C    $1BB3   JP       $BB3            ; Jump to BB3
$C4E    $C22A   RND      V2, #2A         ; V2 = random & 2A
$C50    $2180   CALL     $180            ; Call subroutine at 180
$C52    $0E82   SYS      $E82            ; System call to E82
$C54    $9A94   UNKNOWN  $9A94           ; Unknown 9xxx instruction
$C56    $1465   JP       $465            ; Jump to 465
$C58    $E266   UNKNOWN  $E266           ; Unknown Exxx instruction
$C5A    $C8BD   RND      V8, #BD         ; V8 = random & BD
$C5C    $533C   UNKNOWN  $533C           ; Unknown 5xxx instruction
$C5E    $D1D0   DRW      V1, VD, #0      ; Draw 0-byte sprite at V1, VD
$C60    $31A5   SE       V1, #A5         ; Skip if V1 == 165
$C62    $F046   UNKNOWN  F046            ; Unknown Fxxx instruction
$C64    $CF6F   RND      VF, #6F         ; VF = random & 6F
$C66    $26D3   CALL     $6D3            ; Call subroutine at 6D3
$C68    $07C4   SYS      $7C4            ; System call to 7C4
$C6A    $ADDA   LD       I, $DDA         ; Load DDA into I
$C6C    $E34C   UNKNOWN  $E34C           ; Unknown Exxx instruction
$C6E    $10D7   JP       $0D7            ; Jump to 0D7
$C70    $1F2C   JP       $F2C            ; Jump to F2C
$C72    $C759   RND      V7, #59         ; V7 = random & 59
$C74    $8672   AND      V6, V7          ; V6 &= V7
$C76    $0D08   SYS      $D08            ; System call to D08
$C78    $2415   CALL     $415            ; Call subroutine at 415
$C7A    $3AA0   SE       VA, #A0         ; Skip if VA == 160
$C7C    $FB84   UNKNOWN  FB84            ; Unknown Fxxx instruction
$C7E    $1F5E   JP       $F5E            ; Jump to F5E
$C80    $8279   UNKNOWN  8279            ; Unknown 8xxx instruction
$C82    $05AF   SYS      $5AF            ; System call to 5AF
$C84    $B8D8   JP       V0, $8D8        ; Jump to V0 + 8D8
$C86    $2202   CALL     $202            ; Call subroutine at 202
$C88    $9538   UNKNOWN  $9538           ; Unknown 9xxx instruction
$C8A    $ECF7   UNKNOWN  $ECF7           ; Unknown Exxx instruction
$C8C    $90BF   UNKNOWN  $90BF           ; Unknown 9xxx instruction
$C8E    $F931   UNKNOWN  F931            ; Unknown Fxxx instruction
$C90    $F36B   UNKNOWN  F36B            ; Unknown Fxxx instruction
$C92    $C048   RND      V0, #48         ; V0 = random & 48
$C94    $ACCC   LD       I, $CCC         ; Load CCC into I
$C96    $50AF   UNKNOWN  $50AF           ; Unknown 5xxx instruction
$C98    $5C5A   UNKNOWN  $5C5A           ; Unknown 5xxx instruction
$C9A    $3339   SE       V3, #39         ; Skip if V3 == 57
$C9C    $0BAD   SYS      $BAD            ; System call to BAD
$C9E    $891F   UNKNOWN  891F            ; Unknown 8xxx instruction
$CA0    $C3BF   RND      V3, #BF         ; V3 = random & BF
$CA2    $ACAC   LD       I, $CAC         ; Load CAC into I
$CA4    $A111   LD       I, $111         ; Load 111 into I
$CA6    $4953   SNE      V9, #53         ; Skip if V9 != 83
$CA8    $2B2A   CALL     $B2A            ; Call subroutine at B2A
$CAA    $7DE9   ADD      VD, #E9         ; Add 233 to VD
$CAC    $1A15   JP       $A15            ; Jump to A15
$CAE    $90C1   UNKNOWN  $90C1           ; Unknown 9xxx instruction
$CB0    $39E6   SE       V9, #E6         ; Skip if V9 == 230
$CB2    $2766   CALL     $766            ; Call subroutine at 766
$CB4    $8D91   OR       VD, V9          ; VD |= V9
$CB6    $93C0   SNE      V3, VC          ; Skip if V3 != VC
$CB8    $6DE9   LD       VD, #E9         ; Load 233 into VD
$CBA    $CEC1   RND      VE, #C1         ; VE = random & C1
$CBC    $C645   RND      V6, #45         ; V6 = random & 45
$CBE    $39C8   SE       V9, #C8         ; Skip if V9 == 200
$CC0    $6093   LD       V0, #93         ; Load 147 into V0
$CC2    $E9E5   UNKNOWN  $E9E5           ; Unknown Exxx instruction
$CC4    $6F88   LD       VF, #88         ; Load 136 into VF
$CC6    $74F6   ADD      V4, #F6         ; Add 246 to V4
$CC8    $0E1E   SYS      $E1E            ; System call to E1E
$CCA    $0D1C   SYS      $D1C            ; System call to D1C
$CCC    $A39E   LD       I, $39E         ; Load 39E into I
$CCE    $AEF3   LD       I, $EF3         ; Load EF3 into I
$CD0    $9A13   UNKNOWN  $9A13           ; Unknown 9xxx instruction
$CD2    $6E1D   LD       VE, #1D         ; Load 29 into VE
$CD4    $A576   LD       I, $576         ; Load 576 into I
$CD6    $6342   LD       V3, #42         ; Load 66 into V3
$CD8    $C954   RND      V9, #54         ; V9 = random & 54
$CDA    $5580   SE       V5, V8          ; Skip if V5 == V8
$CDC    $1DA4   JP       $DA4            ; Jump to DA4
$CDE    $F8A4   UNKNOWN  F8A4            ; Unknown Fxxx instruction
$CE0    $6A59   LD       VA, #59         ; Load 89 into VA
$CE2    $6A81   LD       VA, #81         ; Load 129 into VA
$CE4    $E830   UNKNOWN  $E830           ; Unknown Exxx instruction
$CE6    $8E52   AND      VE, V5          ; VE &= V5
$CE8    $617F   LD       V1, #7F         ; Load 127 into V1
$CEA    $04F7   SYS      $4F7            ; System call to 4F7
$CEC    $38E4   SE       V8, #E4         ; Skip if V8 == 228
$CEE    $2866   CALL     $866            ; Call subroutine at 866
$CF0    $88B0   LD       V8, VB          ; V8 = VB
$CF2    $D1E9   DRW      V1, VE, #9      ; Draw 9-byte sprite at V1, VE
$CF4    $CD96   RND      VD, #96         ; VD = random & 96
$CF6    $663A   LD       V6, #3A         ; Load 58 into V6
$CF8    $FEA1   UNKNOWN  FEA1            ; Unknown Fxxx instruction
$CFA    $B34F   JP       V0, $34F        ; Jump to V0 + 34F
$CFC    $2E94   CALL     $E94            ; Call subroutine at E94
$CFE    $5523   UNKNOWN  $5523           ; Unknown 5xxx instruction
$D00    $B225   JP       V0, $225        ; Jump to V0 + 225
$D02    $4FF4   SNE      VF, #F4         ; Skip if VF != 244
$D04    $545E   UNKNOWN  $545E           ; Unknown 5xxx instruction
$D06    $9398   UNKNOWN  $9398           ; Unknown 9xxx instruction
$D08    $BE68   JP       V0, $E68        ; Jump to V0 + E68
$D0A    $7B57   ADD      VB, #57         ; Add 87 to VB
$D0C    $CFDC   RND      VF, #DC         ; VF = random & DC
$D0E    $5424   UNKNOWN  $5424           ; Unknown 5xxx instruction
$D10    $AB80   LD       I, $B80         ; Load B80 into I
$D12    $BA23   JP       V0, $A23        ; Jump to V0 + A23
$D14    $0F19   SYS      $F19            ; System call to F19
$D16    $7820   ADD      V8, #20         ; Add 32 to V8
$D18    $5466   UNKNOWN  $5466           ; Unknown 5xxx instruction
$D1A    $A2B5   LD       I, $2B5         ; Load 2B5 into I
$D1C    $5877   UNKNOWN  $5877           ; Unknown 5xxx instruction
$D1E    $332B   SE       V3, #2B         ; Skip if V3 == 43
$D20    $B8C9   JP       V0, $8C9        ; Jump to V0 + 8C9
$D22    $F92F   UNKNOWN  F92F            ; Unknown Fxxx instruction
$D24    $A0E5   LD       I, $0E5         ; Load 0E5 into I
$D26    $E35B   UNKNOWN  $E35B           ; Unknown Exxx instruction
$D28    $AD2C   LD       I, $D2C         ; Load D2C into I
$D2A    $D8A4   DRW      V8, VA, #4      ; Draw 4-byte sprite at V8, VA
$D2C    $743F   ADD      V4, #3F         ; Add 63 to V4
$D2E    $69D0   LD       V9, #D0         ; Load 208 into V9
$D30    $71BE   ADD      V1, #BE         ; Add 190 to V1
$D32    $FCED   UNKNOWN  FCED            ; Unknown Fxxx instruction
$D34    $92A6   UNKNOWN  $92A6           ; Unknown 9xxx instruction
$D36    $4A04   SNE      VA, #04         ; Skip if VA != 4
$D38    $D94F   DRW      V9, V4, #F      ; Draw 15-byte sprite at V9, V4
$D3A    $8951   OR       V9, V5          ; V9 |= V5
$D3C    $7F01   ADD      VF, #01         ; Add 1 to VF
$D3E    $2CB1   CALL     $CB1            ; Call subroutine at CB1
$D40    $694D   LD       V9, #4D         ; Load 77 into V9
$D42    $5386   UNKNOWN  $5386           ; Unknown 5xxx instruction
$D44    $9D2F   UNKNOWN  $9D2F           ; Unknown 9xxx instruction
$D46    $5D35   UNKNOWN  $5D35           ; Unknown 5xxx instruction
$D48    $817E   SHL      V1              ; V1 <<= 1, VF = MSB
$D4A    $545D   UNKNOWN  $545D           ; Unknown 5xxx instruction
$D4C    $6C2B   LD       VC, #2B         ; Load 43 into VC
$D4E    $F13D   UNKNOWN  F13D            ; Unknown Fxxx instruction
$D50    $C7B5   RND      V7, #B5         ; V7 = random & B5
$D52    $685A   LD       V8, #5A         ; Load 90 into V8
$D54    $246C   CALL     $46C            ; Call subroutine at 46C
$D56    $1860   JP       $860            ; Jump to 860
$D58    $EACA   UNKNOWN  $EACA           ; Unknown Exxx instruction
$D5A    $E19B   UNKNOWN  $E19B           ; Unknown Exxx instruction
$D5C    $1B71   JP       $B71            ; Jump to B71
$D5E    $2F1D   CALL     $F1D            ; Call subroutine at F1D
$D60    $FD0D   UNKNOWN  FD0D            ; Unknown Fxxx instruction
$D62    $15C6   JP       $5C6            ; Jump to 5C6
$D64    $7D7E   ADD      VD, #7E         ; Add 126 to VD
$D66    $B262   JP       V0, $262        ; Jump to V0 + 262
$D68    $F0A3   UNKNOWN  F0A3            ; Unknown Fxxx instruction
$D6A    $D9FC   DRW      V9, VF, #C      ; Draw 12-byte sprite at V9, VF
$D6C    $656D   LD       V5, #6D         ; Load 109 into V5
$D6E    $A627   LD       I, $627         ; Load 627 into I
$D70    $6408   LD       V4, #08         ; Load 8 into V4
$D72    $8657   SUBN     V6, V5          ; V6 = V5 - V6, VF = !borrow
$D74    $15C0   JP       $5C0            ; Jump to 5C0
$D76    $B3D4   JP       V0, $3D4        ; Jump to V0 + 3D4
$D78    $BE59   JP       V0, $E59        ; Jump to V0 + E59
$D7A    $4B77   SNE      VB, #77         ; Skip if VB != 119
$D7C    $4BFF   SNE      VB, #FF         ; Skip if VB != 255
$D7E    $9DED   UNKNOWN  $9DED           ; Unknown 9xxx instruction
$D80    $111D   JP       $11D            ; Jump to 11D
$D82    $0589   SYS      $589            ; System call to 589
$D84    $6E1C   LD       VE, #1C         ; Load 28 into VE
$D86    $D7BC   DRW      V7, VB, #C      ; Draw 12-byte sprite at V7, VB
$D88    $F42E   UNKNOWN  F42E            ; Unknown Fxxx instruction
$D8A    $F9B2   UNKNOWN  F9B2            ; Unknown Fxxx instruction
$D8C    $09F6   SYS      $9F6            ; System call to 9F6
$D8E    $9A93   UNKNOWN  $9A93           ; Unknown 9xxx instruction
$D90    $BEAA   JP       V0, $EAA        ; Jump to V0 + EAA
$D92    $6864   LD       V8, #64         ; Load 100 into V8
$D94    $843E   SHL      V4              ; V4 <<= 1, VF = MSB
$D96    $51BB   UNKNOWN  $51BB           ; Unknown 5xxx instruction
$D98    $E647   UNKNOWN  $E647           ; Unknown Exxx instruction
$D9A    $F90A   LD       V9, K           ; Wait for key press, store in V9
$D9C    $59A6   UNKNOWN  $59A6           ; Unknown 5xxx instruction
$D9E    $AB46   LD       I, $B46         ; Load B46 into I
$DA0    $36FC   SE       V6, #FC         ; Skip if V6 == 252
$DA2    $7DA3   ADD      VD, #A3         ; Add 163 to VD
$DA4    $BC49   JP       V0, $C49        ; Jump to V0 + C49
$DA6    $1AB7   JP       $AB7            ; Jump to AB7
$DA8    $F789   UNKNOWN  F789            ; Unknown Fxxx instruction
$DAA    $2609   CALL     $609            ; Call subroutine at 609
$DAC    $0ECB   SYS      $ECB            ; System call to ECB
$DAE    $F3CF   UNKNOWN  F3CF            ; Unknown Fxxx instruction
$DB0    $9F13   UNKNOWN  $9F13           ; Unknown 9xxx instruction
$DB2    $8978   UNKNOWN  8978            ; Unknown 8xxx instruction
$DB4    $C3AC   RND      V3, #AC         ; V3 = random & AC
$DB6    $ADBC   LD       I, $DBC         ; Load DBC into I
$DB8    $2A49   CALL     $A49            ; Call subroutine at A49
$DBA    $EB99   UNKNOWN  $EB99           ; Unknown Exxx instruction
$DBC    $B654   JP       V0, $654        ; Jump to V0 + 654
$DBE    $A89C   LD       I, $89C         ; Load 89C into I
$DC0    $3312   SE       V3, #12         ; Skip if V3 == 18
$DC2    $FCBA   UNKNOWN  FCBA            ; Unknown Fxxx instruction
$DC4    $4C98   SNE      VC, #98         ; Skip if VC != 152
$DC6    $09E4   SYS      $9E4            ; System call to 9E4
$DC8    $8663   XOR      V6, V6          ; V6 ^= V6
$DCA    $AD8A   LD       I, $D8A         ; Load D8A into I
$DCC    $DA7E   DRW      VA, V7, #E      ; Draw 14-byte sprite at VA, V7
$DCE    $A187   LD       I, $187         ; Load 187 into I
$DD0    $D0A4   DRW      V0, VA, #4      ; Draw 4-byte sprite at V0, VA
$DD2    $3F03   SE       VF, #03         ; Skip if VF == 3
$DD4    $46AE   SNE      V6, #AE         ; Skip if V6 != 174
$DD6    $BABF   JP       V0, $ABF        ; Jump to V0 + ABF
$DD8    $6F2A   LD       VF, #2A         ; Load 42 into VF
$DDA    $9D88   UNKNOWN  $9D88           ; Unknown 9xxx instruction
$DDC    $555B   UNKNOWN  $555B           ; Unknown 5xxx instruction
$DDE    $47A0   SNE      V7, #A0         ; Skip if V7 != 160
$DE0    $6780   LD       V7, #80         ; Load 128 into V7
$DE2    $E894   UNKNOWN  $E894           ; Unknown Exxx instruction
$DE4    $3596   SE       V5, #96         ; Skip if V5 == 150
$DE6    $61B9   LD       V1, #B9         ; Load 185 into V1
$DE8    $8E7E   SHL      VE              ; VE <<= 1, VF = MSB
$DEA    $1439   JP       $439            ; Jump to 439
$DEC    $E6B0   UNKNOWN  $E6B0           ; Unknown Exxx instruction
$DEE    $0243   SYS      $243            ; System call to 243
$DF0    $78F2   ADD      V8, #F2         ; Add 242 to V8
$DF2    $1F7E   JP       $F7E            ; Jump to F7E
$DF4    $0F73   SYS      $F73            ; System call to F73
$DF6    $6E37   LD       VE, #37         ; Load 55 into VE
$DF8    $B6CD   JP       V0, $6CD        ; Jump to V0 + 6CD
$DFA    $8C1B   UNKNOWN  8C1B            ; Unknown 8xxx instruction
$DFC    $E988   UNKNOWN  $E988           ; Unknown Exxx instruction
$DFE    $7678   ADD      V6, #78         ; Add 120 to V6
$E00    $4FB7   SNE      VF, #B7         ; Skip if VF != 183
$E02    $9A98   UNKNOWN  $9A98           ; Unknown 9xxx instruction
$E04    $8BB2   AND      VB, VB          ; VB &= VB
$E06    $5BA3   UNKNOWN  $5BA3           ; Unknown 5xxx instruction
$E08    $DD90   DRW      VD, V9, #0      ; Draw 0-byte sprite at VD, V9
$E0A    $A8D5   LD       I, $8D5         ; Load 8D5 into I
$E0C    $4D4B   SNE      VD, #4B         ; Skip if VD != 75
$E0E    $4444   SNE      V4, #44         ; Skip if V4 != 68
$E10    $597A   UNKNOWN  $597A           ; Unknown 5xxx instruction
$E12    $A3CE   LD       I, $3CE         ; Load 3CE into I
$E14    $6548   LD       V5, #48         ; Load 72 into V5
$E16    $D465   DRW      V4, V6, #5      ; Draw 5-byte sprite at V4, V6
$E18    $1C21   JP       $C21            ; Jump to C21
$E1A    $C6E4   RND      V6, #E4         ; V6 = random & E4
$E1C    $D719   DRW      V7, V1, #9      ; Draw 9-byte sprite at V7, V1
$E1E    $DBDC   DRW      VB, VD, #C      ; Draw 12-byte sprite at VB, VD
$E20    $E3FC   UNKNOWN  $E3FC           ; Unknown Exxx instruction
$E22    $1274   JP       $274            ; Jump to 274
$E24    $58F4   UNKNOWN  $58F4           ; Unknown 5xxx instruction
$E26    $5300   SE       V3, V0          ; Skip if V3 == V0
$E28    $7B8A   ADD      VB, #8A         ; Add 138 to VB
$E2A    $1BB2   JP       $BB2            ; Jump to BB2
$E2C    $AED5   LD       I, $ED5         ; Load ED5 into I
$E2E    $1C07   JP       $C07            ; Jump to C07
$E30    $00D2   SYS      $0D2            ; System call to 0D2
$E32    $247F   CALL     $47F            ; Call subroutine at 47F
$E34    $242D   CALL     $42D            ; Call subroutine at 42D
$E36    $D656   DRW      V6, V5, #6      ; Draw 6-byte sprite at V6, V5
$E38    $0086   SYS      $086            ; System call to 086
$E3A    $922A   UNKNOWN  $922A           ; Unknown 9xxx instruction
$E3C    $F1C7   UNKNOWN  F1C7            ; Unknown Fxxx instruction
$E3E    $491B   SNE      V9, #1B         ; Skip if V9 != 27
$E40    $65B0   LD       V5, #B0         ; Load 176 into V5
$E42    $9100   SNE      V1, V0          ; Skip if V1 != V0
$E44    $0678   SYS      $678            ; System call to 678
$E46    $078A   SYS      $78A            ; System call to 78A
$E48    $341A   SE       V4, #1A         ; Skip if V4 == 26
$E4A    $A9A2   LD       I, $9A2         ; Load 9A2 into I
$E4C    $622C   LD       V2, #2C         ; Load 44 into V2
$E4E    $1C65   JP       $C65            ; Jump to C65
$E50    $68C6   LD       V8, #C6         ; Load 198 into V8
$E52    $7A81   ADD      VA, #81         ; Add 129 to VA
$E54    $FB24   UNKNOWN  FB24            ; Unknown Fxxx instruction
$E56    $E556   UNKNOWN  $E556           ; Unknown Exxx instruction
$E58    $B413   JP       V0, $413        ; Jump to V0 + 413
$E5A    $B850   JP       V0, $850        ; Jump to V0 + 850
$E5C    $1F96   JP       $F96            ; Jump to F96
$E5E    $0654   SYS      $654            ; System call to 654
$E60    $C870   RND      V8, #70         ; V8 = random & 70
$E62    $36DA   SE       V6, #DA         ; Skip if V6 == 218
$E64    $FED6   UNKNOWN  FED6            ; Unknown Fxxx instruction
$E66    $1BDA   JP       $BDA            ; Jump to BDA
$E68    $28DA   CALL     $8DA            ; Call subroutine at 8DA
$E6A    $7E7D   ADD      VE, #7D         ; Add 125 to VE
$E6C    $DD68   DRW      VD, V6, #8      ; Draw 8-byte sprite at VD, V6
$E6E    $6AFF   LD       VA, #FF         ; Load 255 into VA
$E70    $9237   UNKNOWN  $9237           ; Unknown 9xxx instruction
$E72    $6B73   LD       VB, #73         ; Load 115 into VB
$E74    $0105   SYS      $105            ; System call to 105
$E76    $00AA   SYS      $0AA            ; System call to 0AA
$E78    $8A33   XOR      VA, V3          ; VA ^= V3
$E7A    $0899   SYS      $899            ; System call to 899
$E7C    $CFA2   RND      VF, #A2         ; VF = random & A2
$E7E    $E87E   UNKNOWN  $E87E           ; Unknown Exxx instruction
$E80    $6332   LD       V3, #32         ; Load 50 into V3
$E82    $469B   SNE      V6, #9B         ; Skip if V6 != 155
$E84    $0368   SYS      $368            ; System call to 368
$E86    $E571   UNKNOWN  $E571           ; Unknown Exxx instruction
$E88    $D457   DRW      V4, V5, #7      ; Draw 7-byte sprite at V4, V5
$E8A    $BB26   JP       V0, $B26        ; Jump to V0 + B26
$E8C    $3CA9   SE       VC, #A9         ; Skip if VC == 169
$E8E    $1528   JP       $528            ; Jump to 528
$E90    $8818   UNKNOWN  8818            ; Unknown 8xxx instruction
$E92    $762D   ADD      V6, #2D         ; Add 45 to V6
$E94    $63A2   LD       V3, #A2         ; Load 162 into V3
$E96    $F297   UNKNOWN  F297            ; Unknown Fxxx instruction
$E98    $7E29   ADD      VE, #29         ; Add 41 to VE
$E9A    $F705   UNKNOWN  F705            ; Unknown Fxxx instruction
$E9C    $88B7   SUBN     V8, VB          ; V8 = VB - V8, VF = !borrow
$E9E    $8923   XOR      V9, V2          ; V9 ^= V2
$EA0    $9D2F   UNKNOWN  $9D2F           ; Unknown 9xxx instruction
$EA2    $DF64   DRW      VF, V6, #4      ; Draw 4-byte sprite at VF, V6
$EA4    $FF44   UNKNOWN  FF44            ; Unknown Fxxx instruction
$EA6    $BEFA   JP       V0, $EFA        ; Jump to V0 + EFA
$EA8    $F02A   UNKNOWN  F02A            ; Unknown Fxxx instruction
$EAA    $CB54   RND      VB, #54         ; VB = random & 54
$EAC    $AB2C   LD       I, $B2C         ; Load B2C into I
$EAE    $4A3D   SNE      VA, #3D         ; Skip if VA != 61
$EB0    $11FF   JP       $1FF            ; Jump to 1FF
$EB2    $2465   CALL     $465            ; Call subroutine at 465
$EB4    $51B5   UNKNOWN  $51B5           ; Unknown 5xxx instruction
$EB6    $A5FB   LD       I, $5FB         ; Load 5FB into I
$EB8    $C2AE   RND      V2, #AE         ; V2 = random & AE
$EBA    $8386   SHR      V3              ; V3 >>= 1, VF = LSB
$EBC    $ADD7   LD       I, $DD7         ; Load DD7 into I
$EBE    $2D4D   CALL     $D4D            ; Call subroutine at D4D
$EC0    $8268   UNKNOWN  8268            ; Unknown 8xxx instruction
$EC2    $6A76   LD       VA, #76         ; Load 118 into VA
$EC4    $FCEE   UNKNOWN  FCEE            ; Unknown Fxxx instruction
$EC6    $7108   ADD      V1, #08         ; Add 8 to V1
$EC8    $892D   UNKNOWN  892D            ; Unknown 8xxx instruction
$ECA    $9E9C   UNKNOWN  $9E9C           ; Unknown 9xxx instruction
$ECC    $B851   JP       V0, $851        ; Jump to V0 + 851
$ECE    $4C78   SNE      VC, #78         ; Skip if VC != 120
$ED0    $C64B   RND      V6, #4B         ; V6 = random & 4B
$ED2    $91AC   UNKNOWN  $91AC           ; Unknown 9xxx instruction
$ED4    $E284   UNKNOWN  $E284           ; Unknown Exxx instruction
$ED6    $244A   CALL     $44A            ; Call subroutine at 44A
$ED8    $6AA6   LD       VA, #A6         ; Load 166 into VA
$EDA    $9930   SNE      V9, V3          ; Skip if V9 != V3
$EDC    $C9A4   RND      V9, #A4         ; V9 = random & A4
$EDE    $4300   SNE      V3, #00         ; Skip if V3 != 0
$EE0    $1CB6   JP       $CB6            ; Jump to CB6
$EE2    $255D   CALL     $55D            ; Call subroutine at 55D
$EE4    $E8BA   UNKNOWN  $E8BA           ; Unknown Exxx instruction
$EE6    $1F15   JP       $F15            ; Jump to F15
$EE8    $28A1   CALL     $8A1            ; Call subroutine at 8A1
$EEA    $3E54   SE       VE, #54         ; Skip if VE == 84
$EEC    $5488   UNKNOWN  $5488           ; Unknown 5xxx instruction
$EEE    $F2C8   UNKNOWN  F2C8            ; Unknown Fxxx instruction
$EF0    $E779   UNKNOWN  $E779           ; Unknown Exxx instruction
$EF2    $DD1C   DRW      VD, V1, #C      ; Draw 12-byte sprite at VD, V1
$EF4    $218D   CALL     $18D            ; Call subroutine at 18D
$EF6    $991C   UNKNOWN  $991C           ; Unknown 9xxx instruction
$EF8    $FE46   UNKNOWN  FE46            ; Unknown Fxxx instruction
$EFA    $2420   CALL     $420            ; Call subroutine at 420
$EFC    $DB0A   DRW      VB, V0, #A      ; Draw 10-byte sprite at VB, V0
$EFE    $55FF   UNKNOWN  $55FF           ; Unknown 5xxx instruction
$F00    $8754   ADD      V7, V5          ; V7 += V5, VF = carry
$F02    $FDD9   UNKNOWN  FDD9            ; Unknown Fxxx instruction
$F04    $104A   JP       $04A            ; Jump to 04A
$F06    $3EF9   SE       VE, #F9         ; Skip if VE == 249
$F08    $2925   CALL     $925            ; Call subroutine at 925
$F0A    $1BA4   JP       $BA4            ; Jump to BA4
$F0C    $2DEF   CALL     $DEF            ; Call subroutine at DEF
$F0E    $D00B   DRW      V0, V0, #B      ; Draw 11-byte sprite at V0, V0
$F10    $A984   LD       I, $984         ; Load 984 into I
$F12    $C04D   RND      V0, #4D         ; V0 = random & 4D
$F14    $69C3   LD       V9, #C3         ; Load 195 into V9
$F16    $2D48   CALL     $D48            ; Call subroutine at D48
$F18    $807B   UNKNOWN  807B            ; Unknown 8xxx instruction
$F1A    $5F70   SE       VF, V7          ; Skip if VF == V7
$F1C    $E1F8   UNKNOWN  $E1F8           ; Unknown Exxx instruction
$F1E    $B39B   JP       V0, $39B        ; Jump to V0 + 39B
$F20    $4C8D   SNE      VC, #8D         ; Skip if VC != 141
$F22    $239F   CALL     $39F            ; Call subroutine at 39F
$F24    $44DE   SNE      V4, #DE         ; Skip if V4 != 222
$F26    $B1A3   JP       V0, $1A3        ; Jump to V0 + 1A3
$F28    $BE8D   JP       V0, $E8D        ; Jump to V0 + E8D
$F2A    $31BA   SE       V1, #BA         ; Skip if V1 == 186
$F2C    $BE8B   JP       V0, $E8B        ; Jump to V0 + E8B
$F2E    $32BD   SE       V2, #BD         ; Skip if V2 == 189
$F30    $CE08   RND      VE, #08         ; VE = random & 08
$F32    $148F   JP       $48F            ; Jump to 48F
$F34    $B3F4   JP       V0, $3F4        ; Jump to V0 + 3F4
$F36    $32E3   SE       V2, #E3         ; Skip if V2 == 227
$F38    $6FEF   LD       VF, #EF         ; Load 239 into VF
$F3A    $434C   SNE      V3, #4C         ; Skip if V3 != 76
$F3C    $8693   XOR      V6, V9          ; V6 ^= V9
$F3E    $06F0   SYS      $6F0            ; System call to 6F0
$F40    $C8AA   RND      V8, #AA         ; V8 = random & AA
$F42    $2E7B   CALL     $E7B            ; Call subroutine at E7B
$F44    $0715   SYS      $715            ; System call to 715
$F46    $6F66   LD       VF, #66         ; Load 102 into VF
$F48    $2E3E   CALL     $E3E            ; Call subroutine at E3E
$F4A    $F45B   UNKNOWN  F45B            ; Unknown Fxxx instruction
$F4C    $AF96   LD       I, $F96         ; Load F96 into I
$F4E    $60CF   LD       V0, #CF         ; Load 207 into V0
$F50    $6CCB   LD       VC, #CB         ; Load 203 into VC
$F52    $E1EF   UNKNOWN  $E1EF           ; Unknown Exxx instruction
$F54    $9128   UNKNOWN  $9128           ; Unknown 9xxx instruction
$F56    $98CE   UNKNOWN  $98CE           ; Unknown 9xxx instruction
$F58    $4539   SNE      V5, #39         ; Skip if V5 != 57
$F5A    $92B5   UNKNOWN  $92B5           ; Unknown 9xxx instruction
$F5C    $43CC   SNE      V3, #CC         ; Skip if V3 != 204
$F5E    $C85A   RND      V8, #5A         ; V8 = random & 5A
$F60    $DA9A   DRW      VA, V9, #A      ; Draw 10-byte sprite at VA, V9
$F62    $0F57   SYS      $F57            ; System call to F57
$F64    $F7AE   UNKNOWN  F7AE            ; Unknown Fxxx instruction
$F66    $99A6   UNKNOWN  $99A6           ; Unknown 9xxx instruction
$F68    $4796   SNE      V7, #96         ; Skip if V7 != 150
$F6A    $7166   ADD      V1, #66         ; Add 102 to V1
$F6C    $831C   UNKNOWN  831C            ; Unknown 8xxx instruction
$F6E    $4EFC   SNE      VE, #FC         ; Skip if VE != 252
$F70    $43A5   SNE      V3, #A5         ; Skip if V3 != 165
$F72    $73A4   ADD      V3, #A4         ; Add 164 to V3
$F74    $3CA4   SE       VC, #A4         ; Skip if VC == 164
$F76    $6DEE   LD       VD, #EE         ; Load 238 into VD
$F78    $0340   SYS      $340            ; System call to 340
$F7A    $92FE   UNKNOWN  $92FE           ; Unknown 9xxx instruction
$F7C    $1A67   JP       $A67            ; Jump to A67
$F7E    $F5C4   UNKNOWN  F5C4            ; Unknown Fxxx instruction
$F80    $F874   UNKNOWN  F874            ; Unknown Fxxx instruction
$F82    $0C74   SYS      $C74            ; System call to C74
$F84    $FE32   UNKNOWN  FE32            ; Unknown Fxxx instruction
$F86    $AF5A   LD       I, $F5A         ; Load F5A into I
$F88    $26AB   CALL     $6AB            ; Call subroutine at 6AB
$F8A    $B591   JP       V0, $591        ; Jump to V0 + 591
$F8C    $C62D   RND      V6, #2D         ; V6 = random & 2D
$F8E    $75D7   ADD      V5, #D7         ; Add 215 to V5
$F90    $336A   SE       V3, #6A         ; Skip if V3 == 106
$F92    $3B52   SE       VB, #52         ; Skip if VB == 82
$F94    $4E24   SNE      VE, #24         ; Skip if VE != 36
$F96    $B254   JP       V0, $254        ; Jump to V0 + 254
$F98    $7187   ADD      V1, #87         ; Add 135 to V1
$F9A    $80EB   UNKNOWN  80EB            ; Unknown 8xxx instruction
$F9C    $F627   UNKNOWN  F627            ; Unknown Fxxx instruction
$F9E    $C9C8   RND      V9, #C8         ; V9 = random & C8
$FA0    $71F4   ADD      V1, #F4         ; Add 244 to V1
$FA2    $35F0   SE       V5, #F0         ; Skip if V5 == 240
$FA4    $802B   UNKNOWN  802B            ; Unknown 8xxx instruction
$FA6    $62B5   LD       V2, #B5         ; Load 181 into V2
$FA8    $27BC   CALL     $7BC            ; Call subroutine at 7BC
$FAA    $9A5F   UNKNOWN  $9A5F           ; Unknown 9xxx instruction
$FAC    $8A27   SUBN     VA, V2          ; VA = V2 - VA, VF = !borrow
$FAE    $5820   SE       V8, V2          ; Skip if V8 == V2
$FB0    $D879   DRW      V8, V7, #9      ; Draw 9-byte sprite at V8, V7
$FB2    $7F36   ADD      VF, #36         ; Add 54 to VF
$FB4    $2199   CALL     $199            ; Call subroutine at 199
$FB6    $903C   UNKNOWN  $903C           ; Unknown 9xxx instruction
$FB8    $A9F0   LD       I, $9F0         ; Load 9F0 into I
$FBA    $3B19   SE       VB, #19         ; Skip if VB == 25
$FBC    $17E4   JP       $7E4            ; Jump to 7E4
$FBE    $ABA8   LD       I, $BA8         ; Load BA8 into I
$FC0    $0127   SYS      $127            ; System call to 127
$FC2    $ACC5   LD       I, $CC5         ; Load CC5 into I
$FC4    $0B3D   SYS      $B3D            ; System call to B3D
$FC6    $4FCE   SNE      VF, #CE         ; Skip if VF != 206
$FC8    $7270   ADD      V2, #70         ; Add 112 to V2
$FCA    $6278   LD       V2, #78         ; Load 120 into V2
$FCC    $5792   UNKNOWN  $5792           ; Unknown 5xxx instruction
$FCE    $8AE5   SUB      VA, VE          ; VA -= VE, VF = !borrow
$FD0    $504D   UNKNOWN  $504D           ; Unknown 5xxx instruction
$FD2    $071A   SYS      $71A            ; System call to 71A
$FD4    $C2D1   RND      V2, #D1         ; V2 = random & D1
$FD6    $A78D   LD       I, $78D         ; Load 78D into I
$FD8    $2C35   CALL     $C35            ; Call subroutine at C35
$FDA    $BCBD   JP       V0, $CBD        ; Jump to V0 + CBD
$FDC    $6DB5   LD       VD, #B5         ; Load 181 into VD
$FDE    $4F13   SNE      VF, #13         ; Skip if VF != 19
$FE0    $96D8   UNKNOWN  $96D8           ; Unknown 9xxx instruction
$FE2    $8FDB   UNKNOWN  8FDB            ; Unknown 8xxx instruction
$FE4    $5307   UNKNOWN  $5307           ; Unknown 5xxx instruction
$FE6    $00DD   SYS      $0DD            ; System call to 0DD
$FE8    $B23C   JP       V0, $23C        ; Jump to V0 + 23C
$FEA    $D2F7   DRW      V2, VF, #7      ; Draw 7-byte sprite at V2, VF
$FEC    $49F7   SNE      V9, #F7         ; Skip if V9 != 247
$FEE    $8811   OR       V8, V1          ; V8 |= V1
$FF0    $7F0D   ADD      VF, #0D         ; Add 13 to VF
$FF2    $680A   LD       V8, #0A         ; Load 10 into V8
$FF4    $EC67   UNKNOWN  $EC67           ; Unknown Exxx instruction
$FF6    $E8ED   UNKNOWN  $E8ED           ; Unknown Exxx instruction
$FF8    $9BA4   UNKNOWN  $9BA4           ; Unknown 9xxx instruction
$FFA    $7A11   ADD      VA, #11         ; Add 17 to VA
$FFC    $4CC7   SNE      VC, #C7         ; Skip if VC != 199
$FFE    $29D4   CALL     $9D4            ; Call subroutine at 9D4

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 477 (26.6%)
  LD      : 253 (14.1%)
  JP      : 208 (11.6%)
  SYS     : 124 ( 6.9%)
  ADD     : 121 ( 6.8%)
  SE      : 117 ( 6.5%)
  RND     : 114 ( 6.4%)
  CALL    : 113 ( 6.3%)
  SNE     : 108 ( 6.0%)
  DRW     : 104 ( 5.8%)
  OR      :  10 ( 0.6%)
  XOR     :   9 ( 0.5%)
  SUBN    :   9 ( 0.5%)
  SHL     :   8 ( 0.4%)
  AND     :   7 ( 0.4%)
  SUB     :   4 ( 0.2%)
  SHR     :   4 ( 0.2%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 374 (20.9%)
Arithmetic Operations: 160 (8.9%)
