
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B2692D01_I04876_C6670_3b71db6a503f.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 2692
Instance: 4876
Direction: descending
Final Array: [163, 160, 157, 154, 151, 148, 145, 142]
Operations: R:0 W:8 C:826 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 124
Sort Array References:
  $200: LD I, $3A0 ; Load 3A0 into I
  $252: LD I, $DAA ; Load DAA into I
  $254: LD I, $7A4 ; Load 7A4 into I
  $256: LD I, $19E ; Load 19E into I
  $2A8: LD I, $BA8 ; Load BA8 into I
  $2AA: LD I, $5A2 ; Load 5A2 into I
  $2FC: LD I, $FAC ; Load FAC into I
  $2FE: LD I, $9A6 ; Load 9A6 into I
  $300: LD I, $3A0 ; Load 3A0 into I
  $370: LD I, $B5D ; Load B5D into I
  $372: LD I, $8ED ; Load 8ED into I
  $3D2: LD I, $C75 ; Load C75 into I
  $428: LD I, $C24 ; Load C24 into I
  $448: LD I, $2D7 ; Load 2D7 into I
  $44E: LD I, $10A ; Load 10A into I
  $456: LD I, $CB7 ; Load CB7 into I
  $464: LD I, $60C ; Load 60C into I
  $466: LD I, $E9B ; Load E9B into I
  $4AE: LD I, $330 ; Load 330 into I
  $4C0: LD I, $EF6 ; Load EF6 into I
  $4E4: LD I, $DEC ; Load DEC into I
  $4E6: LD I, $AC2 ; Load AC2 into I
  $54C: LD I, $68C ; Load 68C into I
  $56E: LD I, $EAE ; Load EAE into I
  $578: LD I, $CCF ; Load CCF into I
  $5B4: LD I, $A65 ; Load A65 into I
  $5B8: LD I, $B82 ; Load B82 into I
  $5C4: LD I, $751 ; Load 751 into I
  $610: LD I, $5BD ; Load 5BD into I
  $620: LD I, $007 ; Load 007 into I
  $63E: LD I, $670 ; Load 670 into I
  $65A: LD I, $1B2 ; Load 1B2 into I
  $670: LD I, $329 ; Load 329 into I
  $6DE: LD I, $F8C ; Load F8C into I
  $6E6: LD I, $CF0 ; Load CF0 into I
  $742: LD I, $517 ; Load 517 into I
  $78A: LD I, $E98 ; Load E98 into I
  $79E: LD I, $C98 ; Load C98 into I
  $7EC: LD I, $F38 ; Load F38 into I
  $7FC: LD I, $7A5 ; Load 7A5 into I
  $802: LD I, $67A ; Load 67A into I
  $816: LD I, $759 ; Load 759 into I
  $840: LD I, $055 ; Load 055 into I
  $846: LD I, $61F ; Load 61F into I
  $864: LD I, $90C ; Load 90C into I
  $86A: LD I, $7C5 ; Load 7C5 into I
  $87E: LD I, $A98 ; Load A98 into I
  $882: LD I, $A1D ; Load A1D into I
  $896: LD I, $18F ; Load 18F into I
  $8EE: LD I, $5F7 ; Load 5F7 into I
  $8F4: LD I, $48F ; Load 48F into I
  $900: LD I, $454 ; Load 454 into I
  $916: LD I, $A94 ; Load A94 into I
  $964: LD I, $2DC ; Load 2DC into I
  $974: LD I, $270 ; Load 270 into I
  $990: LD I, $BBF ; Load BBF into I
  $9A4: LD I, $C4A ; Load C4A into I
  $9C8: LD I, $C90 ; Load C90 into I
  $9E2: LD I, $DD4 ; Load DD4 into I
  $9E8: LD I, $A23 ; Load A23 into I
  $9F2: LD I, $86D ; Load 86D into I
  $A1A: LD I, $7B7 ; Load 7B7 into I
  $A24: ADD I, VB ; I ADDRESS MANIPULATION
  $A44: LD I, $60C ; Load 60C into I
  $A50: LD I, $BDD ; Load BDD into I
  $A70: LD I, $235 ; Load 235 into I
  $AA2: LD I, $CA8 ; Load CA8 into I
  $AAC: LD I, $839 ; Load 839 into I
  $ACC: LD I, $F99 ; Load F99 into I
  $ADC: LD I, $CD3 ; Load CD3 into I
  $AF2: LD I, $27B ; Load 27B into I
  $AF4: LD I, $4FB ; Load 4FB into I
  $B0A: LD I, $FB4 ; Load FB4 into I
  $B1E: LD I, $94C ; Load 94C into I
  $B3C: LD I, $D66 ; Load D66 into I
  $B62: LD I, $770 ; Load 770 into I
  $B72: LD I, $E59 ; Load E59 into I
  $B9C: LD I, $697 ; Load 697 into I
  $BA4: LD I, $1D0 ; Load 1D0 into I
  $BDA: LD I, $D03 ; Load D03 into I
  $BF2: LD I, $B1F ; Load B1F into I
  $BF4: LD I, $52A ; Load 52A into I
  $C08: LD I, $5D2 ; Load 5D2 into I
  $C16: LD I, $0C1 ; Load 0C1 into I
  $C3A: LD I, $C95 ; Load C95 into I
  $C3E: LD I, $47A ; Load 47A into I
  $C60: LD I, $118 ; Load 118 into I
  $C6E: LD I, $6DF ; Load 6DF into I
  $C72: LD I, $5B0 ; Load 5B0 into I
  $C78: LD I, $FA4 ; Load FA4 into I
  $CA4: LD I, $ADB ; Load ADB into I
  $CB6: LD I, $ABD ; Load ABD into I
  $CBE: LD I, $341 ; Load 341 into I
  $CC4: LD I, $8A9 ; Load 8A9 into I
  $CE2: LD I, $656 ; Load 656 into I
  $D08: LD I, $FC0 ; Load FC0 into I
  $D0E: LD I, $70D ; Load 70D into I
  $D30: LD V4, [I] ; Load V0-V4 from I
  $D34: LD I, $57A ; Load 57A into I
  $D60: LD I, $603 ; Load 603 into I
  $D76: LD I, $661 ; Load 661 into I
  $DE4: LD I, $E3F ; Load E3F into I
  $DF2: LD I, $D79 ; Load D79 into I
  $DF8: LD I, $40F ; Load 40F into I
  $E12: LD I, $69D ; Load 69D into I
  $E16: LD I, $BE6 ; Load BE6 into I
  $E1C: LD I, $67D ; Load 67D into I
  $E3C: LD I, $E07 ; Load E07 into I
  $E6A: LD I, $CEF ; Load CEF into I
  $EC8: LD I, $AF4 ; Load AF4 into I
  $ED4: LD I, $778 ; Load 778 into I
  $ED8: LD I, $675 ; Load 675 into I
  $EF2: LD I, $D0B ; Load D0B into I
  $F06: LD I, $40D ; Load 40D into I
  $F18: LD I, $24A ; Load 24A into I
  $F2C: LD I, $DEF ; Load DEF into I
  $F5A: LD I, $F18 ; Load F18 into I
  $F6A: LD I, $50B ; Load 50B into I
  $F76: LD I, $99D ; Load 99D into I
  $F8A: LD I, $A4E ; Load A4E into I
  $FB0: LD I, $A0A ; Load A0A into I
  $FB4: LD I, $A6C ; Load A6C into I
  $FEE: LD I, $C10 ; Load C10 into I
  $FF4: LD I, $903 ; Load 903 into I

CONTROL FLOW ANALYSIS:
Jumps: 242
Calls: 111
Branches: 244
Loops: 133
Loop Structures:
  $286 -> $10E (backward jump)
  $2A6 -> $1AE (backward jump)
  $38A -> $2C6 (backward jump)
  $39C -> $1D9 (backward jump)
  $3BE -> $340 (backward jump)
  $3D0 -> $088 (backward jump)
  $3D6 -> $0D9 (backward jump)
  $3E4 -> $3A6 (backward jump)
  $408 -> $2F7 (backward jump)
  $410 -> $174 (backward jump)
  $42A -> $037 (backward jump)
  $470 -> $007 (backward jump)
  $476 -> $2EF (backward jump)
  $48A -> $1D0 (backward jump)
  $4A8 -> $2CF (backward jump)
  $4B6 -> $36D (backward jump)
  $4D0 -> $312 (backward jump)
  $4F4 -> $023 (backward jump)
  $526 -> $448 (backward jump)
  $540 -> $455 (backward jump)
  $542 -> $4C7 (backward jump)
  $546 -> $285 (backward jump)
  $552 -> $22D (backward jump)
  $570 -> $4D6 (backward jump)
  $572 -> $34B (backward jump)
  $574 -> $0B0 (backward jump)
  $57A -> $05E (backward jump)
  $5F2 -> $151 (backward jump)
  $604 -> $16D (backward jump)
  $6BA -> $029 (backward jump)
  $6F8 -> $3AB (backward jump)
  $74A -> $1B7 (backward jump)
  $75A -> $1F5 (backward jump)
  $772 -> $414 (backward jump)
  $7B8 -> $453 (backward jump)
  $7E0 -> $308 (backward jump)
  $7EA -> $148 (backward jump)
  $834 -> $616 (backward jump)
  $878 -> $795 (backward jump)
  $87A -> $367 (backward jump)
  $898 -> $57B (backward jump)
  $8A0 -> $54C (backward jump)
  $8CC -> $7A6 (backward jump)
  $8D0 -> $28C (backward jump)
  $8DE -> $724 (backward jump)
  $8FA -> $695 (backward jump)
  $8FE -> $183 (backward jump)
  $910 -> $8A0 (backward jump)
  $954 -> $177 (backward jump)
  $962 -> $29B (backward jump)
  $978 -> $362 (backward jump)
  $992 -> $654 (backward jump)
  $994 -> $8B4 (backward jump)
  $9B0 -> $5A6 (backward jump)
  $9B8 -> $2DA (backward jump)
  $9CC -> $3D7 (backward jump)
  $9D4 -> $8FF (backward jump)
  $9F4 -> $891 (backward jump)
  $A12 -> $738 (backward jump)
  $A54 -> $1D4 (backward jump)
  $A5C -> $0D1 (backward jump)
  $A74 -> $552 (backward jump)
  $A88 -> $046 (backward jump)
  $A96 -> $163 (backward jump)
  $A98 -> $A44 (backward jump)
  $AC4 -> $82A (backward jump)
  $ADA -> $757 (backward jump)
  $B38 -> $1CB (backward jump)
  $B6A -> $352 (backward jump)
  $B70 -> $430 (backward jump)
  $BA0 -> $5A2 (backward jump)
  $BA8 -> $419 (backward jump)
  $BAE -> $9EF (backward jump)
  $BBC -> $997 (backward jump)
  $BC0 -> $339 (backward jump)
  $BD6 -> $B14 (backward jump)
  $BE6 -> $AE9 (backward jump)
  $BF0 -> $510 (backward jump)
  $C00 -> $372 (backward jump)
  $C06 -> $7F9 (backward jump)
  $C0E -> $100 (backward jump)
  $C18 -> $2D4 (backward jump)
  $C56 -> $135 (backward jump)
  $C68 -> $37E (backward jump)
  $C82 -> $309 (backward jump)
  $C8A -> $507 (backward jump)
  $C96 -> $881 (backward jump)
  $CC8 -> $AF8 (backward jump)
  $CCA -> $12E (backward jump)
  $CFE -> $830 (backward jump)
  $D28 -> $042 (backward jump)
  $D2E -> $440 (backward jump)
  $D32 -> $D11 (backward jump)
  $D56 -> $22A (backward jump)
  $D74 -> $D37 (backward jump)
  $D78 -> $06F (backward jump)
  $D7A -> $963 (backward jump)
  $D7E -> $1CD (backward jump)
  $D86 -> $57C (backward jump)
  $D90 -> $CE3 (backward jump)
  $DBC -> $594 (backward jump)
  $DC2 -> $43A (backward jump)
  $DCE -> $379 (backward jump)
  $DEA -> $D1B (backward jump)
  $DF6 -> $833 (backward jump)
  $DFC -> $DE3 (backward jump)
  $DFE -> $BE3 (backward jump)
  $E6C -> $954 (backward jump)
  $E70 -> $70F (backward jump)
  $E7A -> $AC1 (backward jump)
  $EA2 -> $BD7 (backward jump)
  $EC2 -> $AD4 (backward jump)
  $ECA -> $442 (backward jump)
  $EEA -> $860 (backward jump)
  $EF6 -> $5E3 (backward jump)
  $F08 -> $CCC (backward jump)
  $F0E -> $C99 (backward jump)
  $F12 -> $08E (backward jump)
  $F1C -> $624 (backward jump)
  $F26 -> $9FD (backward jump)
  $F3E -> $352 (backward jump)
  $F52 -> $E9F (backward jump)
  $F56 -> $84F (backward jump)
  $F62 -> $1B4 (backward jump)
  $F8C -> $C20 (backward jump)
  $F90 -> $ADD (backward jump)
  $FBA -> $D95 (backward jump)
  $FBC -> $C2B (backward jump)
  $FC0 -> $F5D (backward jump)
  $FC6 -> $F68 (backward jump)
  $FE4 -> $A01 (backward jump)
  $FEA -> $D03 (backward jump)
  $FF2 -> $215 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $A3A0   LD       I, $3A0         ; Load 3A0 into I
$202    $9D9A   UNKNOWN  $9D9A           ; Unknown 9xxx instruction
$204    $9794   UNKNOWN  $9794           ; Unknown 9xxx instruction
$206    $918E   UNKNOWN  $918E           ; Unknown 9xxx instruction
$208    $8B88   UNKNOWN  8B88            ; Unknown 8xxx instruction
$20A    $8582   AND      V5, V8          ; V5 &= V8
$20C    $7F7C   ADD      VF, #7C         ; Add 124 to VF
$20E    $7976   ADD      V9, #76         ; Add 118 to V9
$210    $7370   ADD      V3, #70         ; Add 112 to V3
$212    $6D6A   LD       VD, #6A         ; Load 106 into VD
$214    $6764   LD       V7, #64         ; Load 100 into V7
$216    $615E   LD       V1, #5E         ; Load 94 into V1
$218    $5B58   UNKNOWN  $5B58           ; Unknown 5xxx instruction
$21A    $5552   UNKNOWN  $5552           ; Unknown 5xxx instruction
$21C    $4F4C   SNE      VF, #4C         ; Skip if VF != 76
$21E    $4946   SNE      V9, #46         ; Skip if V9 != 70
$220    $4340   SNE      V3, #40         ; Skip if V3 != 64
$222    $3D3A   SE       VD, #3A         ; Skip if VD == 58
$224    $3734   SE       V7, #34         ; Skip if V7 == 52
$226    $312E   SE       V1, #2E         ; Skip if V1 == 46
$228    $2B28   CALL     $B28            ; Call subroutine at B28
$22A    $2522   CALL     $522            ; Call subroutine at 522
$22C    $1F1C   JP       $F1C            ; Jump to F1C
$22E    $1916   JP       $916            ; Jump to 916
$230    $1310   JP       $310            ; Jump to 310
$232    $0D0A   SYS      $D0A            ; System call to D0A
$234    $0704   SYS      $704            ; System call to 704
$236    $01FE   SYS      $1FE            ; System call to 1FE
$238    $FBF8   UNKNOWN  FBF8            ; Unknown Fxxx instruction
$23A    $F5F2   UNKNOWN  F5F2            ; Unknown Fxxx instruction
$23C    $EFEC   UNKNOWN  $EFEC           ; Unknown Exxx instruction
$23E    $E9E6   UNKNOWN  $E9E6           ; Unknown Exxx instruction
$240    $E3E0   UNKNOWN  $E3E0           ; Unknown Exxx instruction
$242    $DDDA   DRW      VD, VD, #A      ; Draw 10-byte sprite at VD, VD
$244    $D7D4   DRW      V7, VD, #4      ; Draw 4-byte sprite at V7, VD
$246    $D1CE   DRW      V1, VC, #E      ; Draw 14-byte sprite at V1, VC
$248    $CBC8   RND      VB, #C8         ; VB = random & C8
$24A    $C5C2   RND      V5, #C2         ; V5 = random & C2
$24C    $BFBC   JP       V0, $FBC        ; Jump to V0 + FBC
$24E    $B9B6   JP       V0, $9B6        ; Jump to V0 + 9B6
$250    $B3B0   JP       V0, $3B0        ; Jump to V0 + 3B0
$252    $ADAA   LD       I, $DAA         ; Load DAA into I
$254    $A7A4   LD       I, $7A4         ; Load 7A4 into I
$256    $A19E   LD       I, $19E         ; Load 19E into I
$258    $9B98   UNKNOWN  $9B98           ; Unknown 9xxx instruction
$25A    $9592   UNKNOWN  $9592           ; Unknown 9xxx instruction
$25C    $8F8C   UNKNOWN  8F8C            ; Unknown 8xxx instruction
$25E    $8986   SHR      V9              ; V9 >>= 1, VF = LSB
$260    $8380   LD       V3, V8          ; V3 = V8
$262    $7D7A   ADD      VD, #7A         ; Add 122 to VD
$264    $7774   ADD      V7, #74         ; Add 116 to V7
$266    $716E   ADD      V1, #6E         ; Add 110 to V1
$268    $6B68   LD       VB, #68         ; Load 104 into VB
$26A    $6562   LD       V5, #62         ; Load 98 into V5
$26C    $5F5C   UNKNOWN  $5F5C           ; Unknown 5xxx instruction
$26E    $5956   UNKNOWN  $5956           ; Unknown 5xxx instruction
$270    $5350   SE       V3, V5          ; Skip if V3 == V5
$272    $4D4A   SNE      VD, #4A         ; Skip if VD != 74
$274    $4744   SNE      V7, #44         ; Skip if V7 != 68
$276    $413E   SNE      V1, #3E         ; Skip if V1 != 62
$278    $3B38   SE       VB, #38         ; Skip if VB == 56
$27A    $3532   SE       V5, #32         ; Skip if V5 == 50
$27C    $2F2C   CALL     $F2C            ; Call subroutine at F2C
$27E    $2926   CALL     $926            ; Call subroutine at 926
$280    $2320   CALL     $320            ; Call subroutine at 320
$282    $1D1A   JP       $D1A            ; Jump to D1A
$284    $1714   JP       $714            ; Jump to 714
$286    $110E   JP       $10E            ; Jump to 10E
$288    $0B08   SYS      $B08            ; System call to B08
$28A    $0502   SYS      $502            ; System call to 502
$28C    $FFFC   UNKNOWN  FFFC            ; Unknown Fxxx instruction
$28E    $F9F6   UNKNOWN  F9F6            ; Unknown Fxxx instruction
$290    $F3F0   UNKNOWN  F3F0            ; Unknown Fxxx instruction
$292    $EDEA   UNKNOWN  $EDEA           ; Unknown Exxx instruction
$294    $E7E4   UNKNOWN  $E7E4           ; Unknown Exxx instruction
$296    $E1DE   UNKNOWN  $E1DE           ; Unknown Exxx instruction
$298    $DBD8   DRW      VB, VD, #8      ; Draw 8-byte sprite at VB, VD
$29A    $D5D2   DRW      V5, VD, #2      ; Draw 2-byte sprite at V5, VD
$29C    $CFCC   RND      VF, #CC         ; VF = random & CC
$29E    $C9C6   RND      V9, #C6         ; V9 = random & C6
$2A0    $C3C0   RND      V3, #C0         ; V3 = random & C0
$2A2    $BDBA   JP       V0, $DBA        ; Jump to V0 + DBA
$2A4    $B7B4   JP       V0, $7B4        ; Jump to V0 + 7B4
$2A6    $B1AE   JP       V0, $1AE        ; Jump to V0 + 1AE
$2A8    $ABA8   LD       I, $BA8         ; Load BA8 into I
$2AA    $A5A2   LD       I, $5A2         ; Load 5A2 into I
$2AC    $9F9C   UNKNOWN  $9F9C           ; Unknown 9xxx instruction
$2AE    $9996   UNKNOWN  $9996           ; Unknown 9xxx instruction
$2B0    $9390   SNE      V3, V9          ; Skip if V3 != V9
$2B2    $8D8A   UNKNOWN  8D8A            ; Unknown 8xxx instruction
$2B4    $8784   ADD      V7, V8          ; V7 += V8, VF = carry
$2B6    $817E   SHL      V1              ; V1 <<= 1, VF = MSB
$2B8    $7B78   ADD      VB, #78         ; Add 120 to VB
$2BA    $7572   ADD      V5, #72         ; Add 114 to V5
$2BC    $6F6C   LD       VF, #6C         ; Load 108 into VF
$2BE    $6966   LD       V9, #66         ; Load 102 into V9
$2C0    $6360   LD       V3, #60         ; Load 96 into V3
$2C2    $5D5A   UNKNOWN  $5D5A           ; Unknown 5xxx instruction
$2C4    $5754   UNKNOWN  $5754           ; Unknown 5xxx instruction
$2C6    $514E   UNKNOWN  $514E           ; Unknown 5xxx instruction
$2C8    $4B48   SNE      VB, #48         ; Skip if VB != 72
$2CA    $4542   SNE      V5, #42         ; Skip if V5 != 66
$2CC    $3F3C   SE       VF, #3C         ; Skip if VF == 60
$2CE    $3936   SE       V9, #36         ; Skip if V9 == 54
$2D0    $3330   SE       V3, #30         ; Skip if V3 == 48
$2D2    $2D2A   CALL     $D2A            ; Call subroutine at D2A
$2D4    $2724   CALL     $724            ; Call subroutine at 724
$2D6    $211E   CALL     $11E            ; Call subroutine at 11E
$2D8    $1B18   JP       $B18            ; Jump to B18
$2DA    $1512   JP       $512            ; Jump to 512
$2DC    $0F0C   SYS      $F0C            ; System call to F0C
$2DE    $0906   SYS      $906            ; System call to 906
$2E0    $0300   SYS      $300            ; System call to 300
$2E2    $FDFA   UNKNOWN  FDFA            ; Unknown Fxxx instruction
$2E4    $F7F4   UNKNOWN  F7F4            ; Unknown Fxxx instruction
$2E6    $F1EE   UNKNOWN  F1EE            ; Unknown Fxxx instruction
$2E8    $EBE8   UNKNOWN  $EBE8           ; Unknown Exxx instruction
$2EA    $E5E2   UNKNOWN  $E5E2           ; Unknown Exxx instruction
$2EC    $DFDC   DRW      VF, VD, #C      ; Draw 12-byte sprite at VF, VD
$2EE    $D9D6   DRW      V9, VD, #6      ; Draw 6-byte sprite at V9, VD
$2F0    $D3D0   DRW      V3, VD, #0      ; Draw 0-byte sprite at V3, VD
$2F2    $CDCA   RND      VD, #CA         ; VD = random & CA
$2F4    $C7C4   RND      V7, #C4         ; V7 = random & C4
$2F6    $C1BE   RND      V1, #BE         ; V1 = random & BE
$2F8    $BBB8   JP       V0, $BB8        ; Jump to V0 + BB8
$2FA    $B5B2   JP       V0, $5B2        ; Jump to V0 + 5B2
$2FC    $AFAC   LD       I, $FAC         ; Load FAC into I
$2FE    $A9A6   LD       I, $9A6         ; Load 9A6 into I
$300    $A3A0   LD       I, $3A0         ; Load 3A0 into I
$302    $9D9A   UNKNOWN  $9D9A           ; Unknown 9xxx instruction
$304    $9794   UNKNOWN  $9794           ; Unknown 9xxx instruction
$306    $918E   UNKNOWN  $918E           ; Unknown 9xxx instruction
$308    $8B88   UNKNOWN  8B88            ; Unknown 8xxx instruction
$30A    $8582   AND      V5, V8          ; V5 &= V8
$30C    $7F7C   ADD      VF, #7C         ; Add 124 to VF
$30E    $7976   ADD      V9, #76         ; Add 118 to V9
$310    $7370   ADD      V3, #70         ; Add 112 to V3
$312    $6D6A   LD       VD, #6A         ; Load 106 into VD
$314    $6764   LD       V7, #64         ; Load 100 into V7
$316    $615E   LD       V1, #5E         ; Load 94 into V1
$318    $5B58   UNKNOWN  $5B58           ; Unknown 5xxx instruction
$31A    $5552   UNKNOWN  $5552           ; Unknown 5xxx instruction
$31C    $4F4C   SNE      VF, #4C         ; Skip if VF != 76
$31E    $4946   SNE      V9, #46         ; Skip if V9 != 70
$320    $725E   ADD      V2, #5E         ; Add 94 to V2
$322    $865C   UNKNOWN  865C            ; Unknown 8xxx instruction
$324    $BD8C   JP       V0, $D8C        ; Jump to V0 + D8C
$326    $8113   XOR      V1, V1          ; V1 ^= V1
$328    $4DB2   SNE      VD, #B2         ; Skip if VD != 178
$32A    $3554   SE       V5, #54         ; Skip if V5 == 84
$32C    $5099   UNKNOWN  $5099           ; Unknown 5xxx instruction
$32E    $4ECF   SNE      VE, #CF         ; Skip if VE != 207
$330    $9261   UNKNOWN  $9261           ; Unknown 9xxx instruction
$332    $C676   RND      V6, #76         ; V6 = random & 76
$334    $3488   SE       V4, #88         ; Skip if V4 == 136
$336    $D447   DRW      V4, V4, #7      ; Draw 7-byte sprite at V4, V4
$338    $C1F4   RND      V1, #F4         ; V1 = random & F4
$33A    $93C5   UNKNOWN  $93C5           ; Unknown 9xxx instruction
$33C    $2149   CALL     $149            ; Call subroutine at 149
$33E    $28FF   CALL     $8FF            ; Call subroutine at 8FF
$340    $D38A   DRW      V3, V8, #A      ; Draw 10-byte sprite at V3, V8
$342    $7CFB   ADD      VC, #FB         ; Add 251 to VC
$344    $DDB8   DRW      VD, VB, #8      ; Draw 8-byte sprite at VD, VB
$346    $6AD1   LD       VA, #D1         ; Load 209 into VA
$348    $1646   JP       $646            ; Jump to 646
$34A    $DBBE   DRW      VB, VB, #E      ; Draw 14-byte sprite at VB, VB
$34C    $C987   RND      V9, #87         ; V9 = random & 87
$34E    $9510   SNE      V5, V1          ; Skip if V5 != V1
$350    $6195   LD       V1, #95         ; Load 149 into V1
$352    $62A3   LD       V2, #A3         ; Load 163 into V2
$354    $7AE2   ADD      VA, #E2         ; Add 226 to VA
$356    $CF54   RND      VF, #54         ; VF = random & 54
$358    $0626   SYS      $626            ; System call to 626
$35A    $EB0E   UNKNOWN  $EB0E           ; Unknown Exxx instruction
$35C    $2E8F   CALL     $E8F            ; Call subroutine at E8F
$35E    $07D4   SYS      $7D4            ; System call to 7D4
$360    $C4CF   RND      V4, #CF         ; V4 = random & CF
$362    $CC20   RND      VC, #20         ; VC = random & 20
$364    $668F   LD       V6, #8F         ; Load 143 into V6
$366    $01E8   SYS      $1E8            ; System call to 1E8
$368    $6828   LD       V8, #28         ; Load 40 into V8
$36A    $FE0F   UNKNOWN  FE0F            ; Unknown Fxxx instruction
$36C    $63FC   LD       V3, #FC         ; Load 252 into V3
$36E    $2C68   CALL     $C68            ; Call subroutine at C68
$370    $AB5D   LD       I, $B5D         ; Load B5D into I
$372    $A8ED   LD       I, $8ED         ; Load 8ED into I
$374    $4A01   SNE      VA, #01         ; Skip if VA != 1
$376    $36DA   SE       V6, #DA         ; Skip if V6 == 218
$378    $3CAB   SE       VC, #AB         ; Skip if VC == 171
$37A    $9DE2   UNKNOWN  $9DE2           ; Unknown 9xxx instruction
$37C    $BF18   JP       V0, $F18        ; Jump to V0 + F18
$37E    $211A   CALL     $11A            ; Call subroutine at 11A
$380    $29C4   CALL     $9C4            ; Call subroutine at 9C4
$382    $DD9C   DRW      VD, V9, #C      ; Draw 12-byte sprite at VD, V9
$384    $0FC8   SYS      $FC8            ; System call to FC8
$386    $9397   UNKNOWN  $9397           ; Unknown 9xxx instruction
$388    $588E   UNKNOWN  $588E           ; Unknown 5xxx instruction
$38A    $B2C6   JP       V0, $2C6        ; Jump to V0 + 2C6
$38C    $B7A5   JP       V0, $7A5        ; Jump to V0 + 7A5
$38E    $E050   UNKNOWN  $E050           ; Unknown Exxx instruction
$390    $E8FC   UNKNOWN  $E8FC           ; Unknown Exxx instruction
$392    $7633   ADD      V6, #33         ; Add 51 to V6
$394    $2941   CALL     $941            ; Call subroutine at 941
$396    $55B4   UNKNOWN  $55B4           ; Unknown 5xxx instruction
$398    $024C   SYS      $24C            ; System call to 24C
$39A    $BF48   JP       V0, $F48        ; Jump to V0 + F48
$39C    $11D9   JP       $1D9            ; Jump to 1D9
$39E    $5490   SE       V4, V9          ; Skip if V4 == V9
$3A0    $C3AB   RND      V3, #AB         ; V3 = random & AB
$3A2    $85B3   XOR      V5, VB          ; V5 ^= VB
$3A4    $1521   JP       $521            ; Jump to 521
$3A6    $1BCF   JP       $BCF            ; Jump to BCF
$3A8    $000B   SYS      $00B            ; System call to 00B
$3AA    $87AD   UNKNOWN  87AD            ; Unknown 8xxx instruction
$3AC    $33C0   SE       V3, #C0         ; Skip if V3 == 192
$3AE    $6F7C   LD       VF, #7C         ; Load 124 into VF
$3B0    $7CC9   ADD      VC, #C9         ; Add 201 to VC
$3B2    $9455   UNKNOWN  $9455           ; Unknown 9xxx instruction
$3B4    $9167   UNKNOWN  $9167           ; Unknown 9xxx instruction
$3B6    $1811   JP       $811            ; Jump to 811
$3B8    $F667   UNKNOWN  F667            ; Unknown Fxxx instruction
$3BA    $C5B5   RND      V5, #B5         ; V5 = random & B5
$3BC    $1621   JP       $621            ; Jump to 621
$3BE    $1340   JP       $340            ; Jump to 340
$3C0    $519F   UNKNOWN  $519F           ; Unknown 5xxx instruction
$3C2    $E10D   UNKNOWN  $E10D           ; Unknown Exxx instruction
$3C4    $D3A1   DRW      V3, VA, #1      ; Draw 1-byte sprite at V3, VA
$3C6    $39B2   SE       V9, #B2         ; Skip if V9 == 178
$3C8    $D49E   DRW      V4, V9, #E      ; Draw 14-byte sprite at V4, V9
$3CA    $2197   CALL     $197            ; Call subroutine at 197
$3CC    $BF6B   JP       V0, $F6B        ; Jump to V0 + F6B
$3CE    $9BC5   UNKNOWN  $9BC5           ; Unknown 9xxx instruction
$3D0    $B088   JP       V0, $088        ; Jump to V0 + 088
$3D2    $AC75   LD       I, $C75         ; Load C75 into I
$3D4    $0212   SYS      $212            ; System call to 212
$3D6    $10D9   JP       $0D9            ; Jump to 0D9
$3D8    $861B   UNKNOWN  861B            ; Unknown 8xxx instruction
$3DA    $B48F   JP       V0, $48F        ; Jump to V0 + 48F
$3DC    $5681   UNKNOWN  $5681           ; Unknown 5xxx instruction
$3DE    $8D97   SUBN     VD, V9          ; VD = V9 - VD, VF = !borrow
$3E0    $DC6D   DRW      VC, V6, #D      ; Draw 13-byte sprite at VC, V6
$3E2    $9B6F   UNKNOWN  $9B6F           ; Unknown 9xxx instruction
$3E4    $B3A6   JP       V0, $3A6        ; Jump to V0 + 3A6
$3E6    $3756   SE       V7, #56         ; Skip if V7 == 86
$3E8    $60FC   LD       V0, #FC         ; Load 252 into V0
$3EA    $35B7   SE       V5, #B7         ; Skip if V5 == 183
$3EC    $06F8   SYS      $6F8            ; System call to 6F8
$3EE    $CB21   RND      VB, #21         ; VB = random & 21
$3F0    $E0EB   UNKNOWN  $E0EB           ; Unknown Exxx instruction
$3F2    $0064   SYS      $064            ; System call to 064
$3F4    $9ACD   UNKNOWN  $9ACD           ; Unknown 9xxx instruction
$3F6    $2ADC   CALL     $ADC            ; Call subroutine at ADC
$3F8    $1C7D   JP       $C7D            ; Jump to C7D
$3FA    $BCA6   JP       V0, $CA6        ; Jump to V0 + CA6
$3FC    $88D9   UNKNOWN  88D9            ; Unknown 8xxx instruction
$3FE    $88B7   SUBN     V8, VB          ; V8 = VB - V8, VF = !borrow
$400    $FDCC   UNKNOWN  FDCC            ; Unknown Fxxx instruction
$402    $4B11   SNE      VB, #11         ; Skip if VB != 17
$404    $8EDB   UNKNOWN  8EDB            ; Unknown 8xxx instruction
$406    $E001   UNKNOWN  $E001           ; Unknown Exxx instruction
$408    $12F7   JP       $2F7            ; Jump to 2F7
$40A    $BF03   JP       V0, $F03        ; Jump to V0 + F03
$40C    $DA48   DRW      VA, V4, #8      ; Draw 8-byte sprite at VA, V4
$40E    $98BF   UNKNOWN  $98BF           ; Unknown 9xxx instruction
$410    $B174   JP       V0, $174        ; Jump to V0 + 174
$412    $6B83   LD       VB, #83         ; Load 131 into VB
$414    $5402   UNKNOWN  $5402           ; Unknown 5xxx instruction
$416    $5C90   SE       VC, V9          ; Skip if VC == V9
$418    $CA08   RND      VA, #08         ; VA = random & 08
$41A    $9B43   UNKNOWN  $9B43           ; Unknown 9xxx instruction
$41C    $4BF2   SNE      VB, #F2         ; Skip if VB != 242
$41E    $5B30   SE       VB, V3          ; Skip if VB == V3
$420    $6D0D   LD       VD, #0D         ; Load 13 into VD
$422    $7283   ADD      V2, #83         ; Add 131 to V2
$424    $77C1   ADD      V7, #C1         ; Add 193 to V7
$426    $48AF   SNE      V8, #AF         ; Skip if V8 != 175
$428    $AC24   LD       I, $C24         ; Load C24 into I
$42A    $1037   JP       $037            ; Jump to 037
$42C    $DC11   DRW      VC, V1, #1      ; Draw 1-byte sprite at VC, V1
$42E    $65A4   LD       V5, #A4         ; Load 164 into V5
$430    $58A4   UNKNOWN  $58A4           ; Unknown 5xxx instruction
$432    $EF90   UNKNOWN  $EF90           ; Unknown Exxx instruction
$434    $2E98   CALL     $E98            ; Call subroutine at E98
$436    $345F   SE       V4, #5F         ; Skip if V4 == 95
$438    $35B9   SE       V5, #B9         ; Skip if V5 == 185
$43A    $F408   UNKNOWN  F408            ; Unknown Fxxx instruction
$43C    $E609   UNKNOWN  $E609           ; Unknown Exxx instruction
$43E    $ED1F   UNKNOWN  $ED1F           ; Unknown Exxx instruction
$440    $26A3   CALL     $6A3            ; Call subroutine at 6A3
$442    $E5DE   UNKNOWN  $E5DE           ; Unknown Exxx instruction
$444    $78A1   ADD      V8, #A1         ; Add 161 to V8
$446    $5EE2   UNKNOWN  $5EE2           ; Unknown 5xxx instruction
$448    $A2D7   LD       I, $2D7         ; Load 2D7 into I
$44A    $8B84   ADD      VB, V8          ; VB += V8, VF = carry
$44C    $0661   SYS      $661            ; System call to 661
$44E    $A10A   LD       I, $10A         ; Load 10A into I
$450    $22F8   CALL     $2F8            ; Call subroutine at 2F8
$452    $6102   LD       V1, #02         ; Load 2 into V1
$454    $2A52   CALL     $A52            ; Call subroutine at A52
$456    $ACB7   LD       I, $CB7         ; Load CB7 into I
$458    $9284   UNKNOWN  $9284           ; Unknown 9xxx instruction
$45A    $F759   UNKNOWN  F759            ; Unknown Fxxx instruction
$45C    $4F95   SNE      VF, #95         ; Skip if VF != 149
$45E    $6C94   LD       VC, #94         ; Load 148 into VC
$460    $1A98   JP       $A98            ; Jump to A98
$462    $0A7B   SYS      $A7B            ; System call to A7B
$464    $A60C   LD       I, $60C         ; Load 60C into I
$466    $AE9B   LD       I, $E9B         ; Load E9B into I
$468    $24DA   CALL     $4DA            ; Call subroutine at 4DA
$46A    $FC10   UNKNOWN  FC10            ; Unknown Fxxx instruction
$46C    $1954   JP       $954            ; Jump to 954
$46E    $0712   SYS      $712            ; System call to 712
$470    $B007   JP       V0, $007        ; Jump to V0 + 007
$472    $71F3   ADD      V1, #F3         ; Add 243 to V1
$474    $9210   SNE      V2, V1          ; Skip if V2 != V1
$476    $B2EF   JP       V0, $2EF        ; Jump to V0 + 2EF
$478    $BB5F   JP       V0, $B5F        ; Jump to V0 + B5F
$47A    $49B0   SNE      V9, #B0         ; Skip if V9 != 176
$47C    $3449   SE       V4, #49         ; Skip if V4 == 73
$47E    $B957   JP       V0, $957        ; Jump to V0 + 957
$480    $44A1   SNE      V4, #A1         ; Skip if V4 != 161
$482    $1C48   JP       $C48            ; Jump to C48
$484    $C66F   RND      V6, #6F         ; V6 = random & 6F
$486    $0ECA   SYS      $ECA            ; System call to ECA
$488    $2BCC   CALL     $BCC            ; Call subroutine at BCC
$48A    $11D0   JP       $1D0            ; Jump to 1D0
$48C    $3EA5   SE       VE, #A5         ; Skip if VE == 165
$48E    $D425   DRW      V4, V2, #5      ; Draw 5-byte sprite at V4, V2
$490    $60FA   LD       V0, #FA         ; Load 250 into V0
$492    $970B   UNKNOWN  $970B           ; Unknown 9xxx instruction
$494    $7E7C   ADD      VE, #7C         ; Add 124 to VE
$496    $4BF8   SNE      VB, #F8         ; Skip if VB != 248
$498    $7CC0   ADD      VC, #C0         ; Add 192 to VC
$49A    $2ED2   CALL     $ED2            ; Call subroutine at ED2
$49C    $C63E   RND      V6, #3E         ; V6 = random & 3E
$49E    $F452   UNKNOWN  F452            ; Unknown Fxxx instruction
$4A0    $63A7   LD       V3, #A7         ; Load 167 into V3
$4A2    $2A77   CALL     $A77            ; Call subroutine at A77
$4A4    $9C99   UNKNOWN  $9C99           ; Unknown 9xxx instruction
$4A6    $84E7   SUBN     V4, VE          ; V4 = VE - V4, VF = !borrow
$4A8    $12CF   JP       $2CF            ; Jump to 2CF
$4AA    $0294   SYS      $294            ; System call to 294
$4AC    $6493   LD       V4, #93         ; Load 147 into V4
$4AE    $A330   LD       I, $330         ; Load 330 into I
$4B0    $3405   SE       V4, #05         ; Skip if V4 == 5
$4B2    $C661   RND      V6, #61         ; V6 = random & 61
$4B4    $CAFC   RND      VA, #FC         ; VA = random & FC
$4B6    $136D   JP       $36D            ; Jump to 36D
$4B8    $6261   LD       V2, #61         ; Load 97 into V2
$4BA    $8748   UNKNOWN  8748            ; Unknown 8xxx instruction
$4BC    $0C88   SYS      $C88            ; System call to C88
$4BE    $707E   ADD      V0, #7E         ; Add 126 to V0
$4C0    $AEF6   LD       I, $EF6         ; Load EF6 into I
$4C2    $2588   CALL     $588            ; Call subroutine at 588
$4C4    $412E   SNE      V1, #2E         ; Skip if V1 != 46
$4C6    $3DEC   SE       VD, #EC         ; Skip if VD == 236
$4C8    $C126   RND      V1, #26         ; V1 = random & 26
$4CA    $FC2F   UNKNOWN  FC2F            ; Unknown Fxxx instruction
$4CC    $99EC   UNKNOWN  $99EC           ; Unknown 9xxx instruction
$4CE    $009D   SYS      $09D            ; System call to 09D
$4D0    $B312   JP       V0, $312        ; Jump to V0 + 312
$4D2    $D693   DRW      V6, V9, #3      ; Draw 3-byte sprite at V6, V9
$4D4    $45F7   SNE      V5, #F7         ; Skip if V5 != 247
$4D6    $502D   UNKNOWN  $502D           ; Unknown 5xxx instruction
$4D8    $2739   CALL     $739            ; Call subroutine at 739
$4DA    $1921   JP       $921            ; Jump to 921
$4DC    $BC95   JP       V0, $C95        ; Jump to V0 + C95
$4DE    $8C79   UNKNOWN  8C79            ; Unknown 8xxx instruction
$4E0    $5BF6   UNKNOWN  $5BF6           ; Unknown 5xxx instruction
$4E2    $E693   UNKNOWN  $E693           ; Unknown Exxx instruction
$4E4    $ADEC   LD       I, $DEC         ; Load DEC into I
$4E6    $AAC2   LD       I, $AC2         ; Load AC2 into I
$4E8    $E9FF   UNKNOWN  $E9FF           ; Unknown Exxx instruction
$4EA    $88E7   SUBN     V8, VE          ; V8 = VE - V8, VF = !borrow
$4EC    $C963   RND      V9, #63         ; V9 = random & 63
$4EE    $F7BB   UNKNOWN  F7BB            ; Unknown Fxxx instruction
$4F0    $5502   UNKNOWN  $5502           ; Unknown 5xxx instruction
$4F2    $7146   ADD      V1, #46         ; Add 70 to V1
$4F4    $1023   JP       $023            ; Jump to 023
$4F6    $48FF   SNE      V8, #FF         ; Skip if V8 != 255
$4F8    $2DEB   CALL     $DEB            ; Call subroutine at DEB
$4FA    $35A1   SE       V5, #A1         ; Skip if V5 == 161
$4FC    $0CFF   SYS      $CFF            ; System call to CFF
$4FE    $48D4   SNE      V8, #D4         ; Skip if V8 != 212
$500    $5D36   UNKNOWN  $5D36           ; Unknown 5xxx instruction
$502    $D869   DRW      V8, V6, #9      ; Draw 9-byte sprite at V8, V6
$504    $D03F   DRW      V0, V3, #F      ; Draw 15-byte sprite at V0, V3
$506    $FA23   UNKNOWN  FA23            ; Unknown Fxxx instruction
$508    $D473   DRW      V4, V7, #3      ; Draw 3-byte sprite at V4, V7
$50A    $8161   OR       V1, V6          ; V1 |= V6
$50C    $FDD6   UNKNOWN  FDD6            ; Unknown Fxxx instruction
$50E    $1627   JP       $627            ; Jump to 627
$510    $EB3F   UNKNOWN  $EB3F           ; Unknown Exxx instruction
$512    $E1E7   UNKNOWN  $E1E7           ; Unknown Exxx instruction
$514    $4E1C   SNE      VE, #1C         ; Skip if VE != 28
$516    $F990   UNKNOWN  F990            ; Unknown Fxxx instruction
$518    $80C0   LD       V0, VC          ; V0 = VC
$51A    $F132   UNKNOWN  F132            ; Unknown Fxxx instruction
$51C    $EF80   UNKNOWN  $EF80           ; Unknown Exxx instruction
$51E    $4CD0   SNE      VC, #D0         ; Skip if VC != 208
$520    $3EA7   SE       VE, #A7         ; Skip if VE == 167
$522    $4A06   SNE      VA, #06         ; Skip if VA != 6
$524    $9C71   UNKNOWN  $9C71           ; Unknown 9xxx instruction
$526    $1448   JP       $448            ; Jump to 448
$528    $8C83   XOR      VC, V8          ; VC ^= V8
$52A    $E843   UNKNOWN  $E843           ; Unknown Exxx instruction
$52C    $6656   LD       V6, #56         ; Load 86 into V6
$52E    $FCF0   UNKNOWN  FCF0            ; Unknown Fxxx instruction
$530    $6177   LD       V1, #77         ; Load 119 into V1
$532    $3BF8   SE       VB, #F8         ; Skip if VB == 248
$534    $D048   DRW      V0, V4, #8      ; Draw 8-byte sprite at V0, V4
$536    $7948   ADD      V9, #48         ; Add 72 to V9
$538    $C7E9   RND      V7, #E9         ; V7 = random & E9
$53A    $4A40   SNE      VA, #40         ; Skip if VA != 64
$53C    $EC50   UNKNOWN  $EC50           ; Unknown Exxx instruction
$53E    $21B7   CALL     $1B7            ; Call subroutine at 1B7
$540    $B455   JP       V0, $455        ; Jump to V0 + 455
$542    $B4C7   JP       V0, $4C7        ; Jump to V0 + 4C7
$544    $2EFC   CALL     $EFC            ; Call subroutine at EFC
$546    $1285   JP       $285            ; Jump to 285
$548    $EE5C   UNKNOWN  $EE5C           ; Unknown Exxx instruction
$54A    $F1A3   UNKNOWN  F1A3            ; Unknown Fxxx instruction
$54C    $A68C   LD       I, $68C         ; Load 68C into I
$54E    $046F   SYS      $46F            ; System call to 46F
$550    $72F2   ADD      V2, #F2         ; Add 242 to V2
$552    $122D   JP       $22D            ; Jump to 22D
$554    $C3E4   RND      V3, #E4         ; V3 = random & E4
$556    $28CC   CALL     $8CC            ; Call subroutine at 8CC
$558    $6BBE   LD       VB, #BE         ; Load 190 into VB
$55A    $E5AB   UNKNOWN  $E5AB           ; Unknown Exxx instruction
$55C    $C147   RND      V1, #47         ; V1 = random & 47
$55E    $9276   UNKNOWN  $9276           ; Unknown 9xxx instruction
$560    $5096   UNKNOWN  $5096           ; Unknown 5xxx instruction
$562    $495B   SNE      V9, #5B         ; Skip if V9 != 91
$564    $BC0C   JP       V0, $C0C        ; Jump to V0 + C0C
$566    $EFB0   UNKNOWN  $EFB0           ; Unknown Exxx instruction
$568    $DF7A   DRW      VF, V7, #A      ; Draw 10-byte sprite at VF, V7
$56A    $EEAD   UNKNOWN  $EEAD           ; Unknown Exxx instruction
$56C    $8673   XOR      V6, V7          ; V6 ^= V7
$56E    $AEAE   LD       I, $EAE         ; Load EAE into I
$570    $B4D6   JP       V0, $4D6        ; Jump to V0 + 4D6
$572    $134B   JP       $34B            ; Jump to 34B
$574    $10B0   JP       $0B0            ; Jump to 0B0
$576    $15B0   JP       $5B0            ; Jump to 5B0
$578    $ACCF   LD       I, $CCF         ; Load CCF into I
$57A    $B05E   JP       V0, $05E        ; Jump to V0 + 05E
$57C    $4FBA   SNE      VF, #BA         ; Skip if VF != 186
$57E    $70D0   ADD      V0, #D0         ; Add 208 to V0
$580    $0BB6   SYS      $BB6            ; System call to BB6
$582    $3363   SE       V3, #63         ; Skip if V3 == 99
$584    $98F3   UNKNOWN  $98F3           ; Unknown 9xxx instruction
$586    $753F   ADD      V5, #3F         ; Add 63 to V5
$588    $6E01   LD       VE, #01         ; Load 1 into VE
$58A    $C394   RND      V3, #94         ; V3 = random & 94
$58C    $0219   SYS      $219            ; System call to 219
$58E    $2C81   CALL     $C81            ; Call subroutine at C81
$590    $84C2   AND      V4, VC          ; V4 &= VC
$592    $98A5   UNKNOWN  $98A5           ; Unknown 9xxx instruction
$594    $070C   SYS      $70C            ; System call to 70C
$596    $83C6   SHR      V3              ; V3 >>= 1, VF = LSB
$598    $3E30   SE       VE, #30         ; Skip if VE == 48
$59A    $E2D6   UNKNOWN  $E2D6           ; Unknown Exxx instruction
$59C    $C705   RND      V7, #05         ; V7 = random & 05
$59E    $218F   CALL     $18F            ; Call subroutine at 18F
$5A0    $2437   CALL     $437            ; Call subroutine at 437
$5A2    $620A   LD       V2, #0A         ; Load 10 into V2
$5A4    $9C68   UNKNOWN  $9C68           ; Unknown 9xxx instruction
$5A6    $24FC   CALL     $4FC            ; Call subroutine at 4FC
$5A8    $BEBF   JP       V0, $EBF        ; Jump to V0 + EBF
$5AA    $FA6D   UNKNOWN  FA6D            ; Unknown Fxxx instruction
$5AC    $E59D   UNKNOWN  $E59D           ; Unknown Exxx instruction
$5AE    $07CD   SYS      $7CD            ; System call to 7CD
$5B0    $41D8   SNE      V1, #D8         ; Skip if V1 != 216
$5B2    $1AED   JP       $AED            ; Jump to AED
$5B4    $AA65   LD       I, $A65         ; Load A65 into I
$5B6    $5491   UNKNOWN  $5491           ; Unknown 5xxx instruction
$5B8    $AB82   LD       I, $B82         ; Load B82 into I
$5BA    $9E59   UNKNOWN  $9E59           ; Unknown 9xxx instruction
$5BC    $7030   ADD      V0, #30         ; Add 48 to V0
$5BE    $1F1F   JP       $F1F            ; Jump to F1F
$5C0    $1C4E   JP       $C4E            ; Jump to C4E
$5C2    $B7C9   JP       V0, $7C9        ; Jump to V0 + 7C9
$5C4    $A751   LD       I, $751         ; Load 751 into I
$5C6    $F151   UNKNOWN  F151            ; Unknown Fxxx instruction
$5C8    $401D   SNE      V0, #1D         ; Skip if V0 != 29
$5CA    $217D   CALL     $17D            ; Call subroutine at 17D
$5CC    $BA7A   JP       V0, $A7A        ; Jump to V0 + A7A
$5CE    $4F29   SNE      VF, #29         ; Skip if VF != 41
$5D0    $D02E   DRW      V0, V2, #E      ; Draw 14-byte sprite at V0, V2
$5D2    $E5D6   UNKNOWN  $E5D6           ; Unknown Exxx instruction
$5D4    $CE9D   RND      VE, #9D         ; VE = random & 9D
$5D6    $9BC5   UNKNOWN  $9BC5           ; Unknown 9xxx instruction
$5D8    $9580   SNE      V5, V8          ; Skip if V5 != V8
$5DA    $BF46   JP       V0, $F46        ; Jump to V0 + F46
$5DC    $64A2   LD       V4, #A2         ; Load 162 into V4
$5DE    $5E5A   UNKNOWN  $5E5A           ; Unknown 5xxx instruction
$5E0    $81B4   ADD      V1, VB          ; V1 += VB, VF = carry
$5E2    $9603   UNKNOWN  $9603           ; Unknown 9xxx instruction
$5E4    $86B8   UNKNOWN  86B8            ; Unknown 8xxx instruction
$5E6    $8B50   LD       VB, V5          ; VB = V5
$5E8    $6146   LD       V1, #46         ; Load 70 into V1
$5EA    $4CFD   SNE      VC, #FD         ; Skip if VC != 253
$5EC    $1B93   JP       $B93            ; Jump to B93
$5EE    $71D8   ADD      V1, #D8         ; Add 216 to V1
$5F0    $C4A8   RND      V4, #A8         ; V4 = random & A8
$5F2    $B151   JP       V0, $151        ; Jump to V0 + 151
$5F4    $F4FA   UNKNOWN  F4FA            ; Unknown Fxxx instruction
$5F6    $9E55   UNKNOWN  $9E55           ; Unknown 9xxx instruction
$5F8    $21CC   CALL     $1CC            ; Call subroutine at 1CC
$5FA    $3E6E   SE       VE, #6E         ; Skip if VE == 110
$5FC    $F708   UNKNOWN  F708            ; Unknown Fxxx instruction
$5FE    $8AA5   SUB      VA, VA          ; VA -= VA, VF = !borrow
$600    $227D   CALL     $27D            ; Call subroutine at 27D
$602    $47FD   SNE      V7, #FD         ; Skip if V7 != 253
$604    $B16D   JP       V0, $16D        ; Jump to V0 + 16D
$606    $8057   SUBN     V0, V5          ; V0 = V5 - V0, VF = !borrow
$608    $1758   JP       $758            ; Jump to 758
$60A    $2BA3   CALL     $BA3            ; Call subroutine at BA3
$60C    $94C2   UNKNOWN  $94C2           ; Unknown 9xxx instruction
$60E    $1C36   JP       $C36            ; Jump to C36
$610    $A5BD   LD       I, $5BD         ; Load 5BD into I
$612    $3795   SE       V7, #95         ; Skip if V7 == 149
$614    $9C95   UNKNOWN  $9C95           ; Unknown 9xxx instruction
$616    $D8F6   DRW      V8, VF, #6      ; Draw 6-byte sprite at V8, VF
$618    $65A4   LD       V5, #A4         ; Load 164 into V5
$61A    $9E8C   UNKNOWN  $9E8C           ; Unknown 9xxx instruction
$61C    $476F   SNE      V7, #6F         ; Skip if V7 != 111
$61E    $2471   CALL     $471            ; Call subroutine at 471
$620    $A007   LD       I, $007         ; Load 007 into I
$622    $D328   DRW      V3, V2, #8      ; Draw 8-byte sprite at V3, V2
$624    $77E2   ADD      V7, #E2         ; Add 226 to V7
$626    $D267   DRW      V2, V6, #7      ; Draw 7-byte sprite at V2, V6
$628    $EECD   UNKNOWN  $EECD           ; Unknown Exxx instruction
$62A    $E24A   UNKNOWN  $E24A           ; Unknown Exxx instruction
$62C    $C16B   RND      V1, #6B         ; V1 = random & 6B
$62E    $805A   UNKNOWN  805A            ; Unknown 8xxx instruction
$630    $8384   ADD      V3, V8          ; V3 += V8, VF = carry
$632    $2882   CALL     $882            ; Call subroutine at 882
$634    $CA30   RND      VA, #30         ; VA = random & 30
$636    $52DD   UNKNOWN  $52DD           ; Unknown 5xxx instruction
$638    $800B   UNKNOWN  800B            ; Unknown 8xxx instruction
$63A    $2BC9   CALL     $BC9            ; Call subroutine at BC9
$63C    $6EA5   LD       VE, #A5         ; Load 165 into VE
$63E    $A670   LD       I, $670         ; Load 670 into I
$640    $26F6   CALL     $6F6            ; Call subroutine at 6F6
$642    $749F   ADD      V4, #9F         ; Add 159 to V4
$644    $7570   ADD      V5, #70         ; Add 112 to V5
$646    $F87F   UNKNOWN  F87F            ; Unknown Fxxx instruction
$648    $F82F   UNKNOWN  F82F            ; Unknown Fxxx instruction
$64A    $34EF   SE       V4, #EF         ; Skip if V4 == 239
$64C    $7777   ADD      V7, #77         ; Add 119 to V7
$64E    $BF81   JP       V0, $F81        ; Jump to V0 + F81
$650    $FA3D   UNKNOWN  FA3D            ; Unknown Fxxx instruction
$652    $992A   UNKNOWN  $992A           ; Unknown 9xxx instruction
$654    $57E6   UNKNOWN  $57E6           ; Unknown 5xxx instruction
$656    $6DA8   LD       VD, #A8         ; Load 168 into VD
$658    $7A5B   ADD      VA, #5B         ; Add 91 to VA
$65A    $A1B2   LD       I, $1B2         ; Load 1B2 into I
$65C    $35B0   SE       V5, #B0         ; Skip if V5 == 176
$65E    $C031   RND      V0, #31         ; V0 = random & 31
$660    $2384   CALL     $384            ; Call subroutine at 384
$662    $8BF7   SUBN     VB, VF          ; VB = VF - VB, VF = !borrow
$664    $D454   DRW      V4, V5, #4      ; Draw 4-byte sprite at V4, V5
$666    $03D3   SYS      $3D3            ; System call to 3D3
$668    $9050   SNE      V0, V5          ; Skip if V0 != V5
$66A    $2CB4   CALL     $CB4            ; Call subroutine at CB4
$66C    $6750   LD       V7, #50         ; Load 80 into V7
$66E    $44C1   SNE      V4, #C1         ; Skip if V4 != 193
$670    $A329   LD       I, $329         ; Load 329 into I
$672    $0C7A   SYS      $C7A            ; System call to C7A
$674    $D44B   DRW      V4, V4, #B      ; Draw 11-byte sprite at V4, V4
$676    $9193   UNKNOWN  $9193           ; Unknown 9xxx instruction
$678    $FD28   UNKNOWN  FD28            ; Unknown Fxxx instruction
$67A    $7DEE   ADD      VD, #EE         ; Add 238 to VD
$67C    $CE37   RND      VE, #37         ; VE = random & 37
$67E    $63A8   LD       V3, #A8         ; Load 168 into V3
$680    $6E08   LD       VE, #08         ; Load 8 into VE
$682    $0D40   SYS      $D40            ; System call to D40
$684    $81A1   OR       V1, VA          ; V1 |= VA
$686    $1DCB   JP       $DCB            ; Jump to DCB
$688    $7212   ADD      V2, #12         ; Add 18 to V2
$68A    $9DD8   UNKNOWN  $9DD8           ; Unknown 9xxx instruction
$68C    $E1A1   SKNP     V1              ; Skip if key V1 not pressed
$68E    $1EFE   JP       $EFE            ; Jump to EFE
$690    $8446   SHR      V4              ; V4 >>= 1, VF = LSB
$692    $DFC8   DRW      VF, VC, #8      ; Draw 8-byte sprite at VF, VC
$694    $53B1   UNKNOWN  $53B1           ; Unknown 5xxx instruction
$696    $B6A8   JP       V0, $6A8        ; Jump to V0 + 6A8
$698    $6AEC   LD       VA, #EC         ; Load 236 into VA
$69A    $4971   SNE      V9, #71         ; Skip if V9 != 113
$69C    $6C83   LD       VC, #83         ; Load 131 into VC
$69E    $DAC2   DRW      VA, VC, #2      ; Draw 2-byte sprite at VA, VC
$6A0    $F55A   UNKNOWN  F55A            ; Unknown Fxxx instruction
$6A2    $57B8   UNKNOWN  $57B8           ; Unknown 5xxx instruction
$6A4    $D9E6   DRW      V9, VE, #6      ; Draw 6-byte sprite at V9, VE
$6A6    $63EA   LD       V3, #EA         ; Load 234 into V3
$6A8    $805E   SHL      V0              ; V0 <<= 1, VF = MSB
$6AA    $1A02   JP       $A02            ; Jump to A02
$6AC    $B80C   JP       V0, $80C        ; Jump to V0 + 80C
$6AE    $BE90   JP       V0, $E90        ; Jump to V0 + E90
$6B0    $3ED1   SE       VE, #D1         ; Skip if VE == 209
$6B2    $C7E5   RND      V7, #E5         ; V7 = random & E5
$6B4    $FE9B   UNKNOWN  FE9B            ; Unknown Fxxx instruction
$6B6    $5635   UNKNOWN  $5635           ; Unknown 5xxx instruction
$6B8    $7581   ADD      V5, #81         ; Add 129 to V5
$6BA    $B029   JP       V0, $029        ; Jump to V0 + 029
$6BC    $F48B   UNKNOWN  F48B            ; Unknown Fxxx instruction
$6BE    $E0BE   UNKNOWN  $E0BE           ; Unknown Exxx instruction
$6C0    $395F   SE       V9, #5F         ; Skip if V9 == 95
$6C2    $3CCE   SE       VC, #CE         ; Skip if VC == 206
$6C4    $F29D   UNKNOWN  F29D            ; Unknown Fxxx instruction
$6C6    $19FA   JP       $9FA            ; Jump to 9FA
$6C8    $970C   UNKNOWN  $970C           ; Unknown 9xxx instruction
$6CA    $1E12   JP       $E12            ; Jump to E12
$6CC    $48B8   SNE      V8, #B8         ; Skip if V8 != 184
$6CE    $C11E   RND      V1, #1E         ; V1 = random & 1E
$6D0    $7C60   ADD      VC, #60         ; Add 96 to VC
$6D2    $70D2   ADD      V0, #D2         ; Add 210 to V0
$6D4    $696E   LD       V9, #6E         ; Load 110 into V9
$6D6    $BADC   JP       V0, $ADC        ; Jump to V0 + ADC
$6D8    $715B   ADD      V1, #5B         ; Add 91 to V1
$6DA    $74E4   ADD      V4, #E4         ; Add 228 to V4
$6DC    $4FBC   SNE      VF, #BC         ; Skip if VF != 188
$6DE    $AF8C   LD       I, $F8C         ; Load F8C into I
$6E0    $6F1E   LD       VF, #1E         ; Load 30 into VF
$6E2    $1ABD   JP       $ABD            ; Jump to ABD
$6E4    $3D33   SE       VD, #33         ; Skip if VD == 51
$6E6    $ACF0   LD       I, $CF0         ; Load CF0 into I
$6E8    $CFBC   RND      VF, #BC         ; VF = random & BC
$6EA    $381C   SE       V8, #1C         ; Skip if V8 == 28
$6EC    $9D32   UNKNOWN  $9D32           ; Unknown 9xxx instruction
$6EE    $E7CD   UNKNOWN  $E7CD           ; Unknown Exxx instruction
$6F0    $4DE9   SNE      VD, #E9         ; Skip if VD != 233
$6F2    $8610   LD       V6, V1          ; V6 = V1
$6F4    $8820   LD       V8, V2          ; V8 = V2
$6F6    $D8C5   DRW      V8, VC, #5      ; Draw 5-byte sprite at V8, VC
$6F8    $B3AB   JP       V0, $3AB        ; Jump to V0 + 3AB
$6FA    $2F77   CALL     $F77            ; Call subroutine at F77
$6FC    $C341   RND      V3, #41         ; V3 = random & 41
$6FE    $5217   UNKNOWN  $5217           ; Unknown 5xxx instruction
$700    $E4DA   UNKNOWN  $E4DA           ; Unknown Exxx instruction
$702    $4CCF   SNE      VC, #CF         ; Skip if VC != 207
$704    $7D22   ADD      VD, #22         ; Add 34 to VD
$706    $D65E   DRW      V6, V5, #E      ; Draw 14-byte sprite at V6, V5
$708    $6A00   LD       VA, #00         ; Load 0 into VA
$70A    $EE64   UNKNOWN  $EE64           ; Unknown Exxx instruction
$70C    $858A   UNKNOWN  858A            ; Unknown 8xxx instruction
$70E    $2372   CALL     $372            ; Call subroutine at 372
$710    $DED4   DRW      VE, VD, #4      ; Draw 4-byte sprite at VE, VD
$712    $DCE7   DRW      VC, VE, #7      ; Draw 7-byte sprite at VC, VE
$714    $88C8   UNKNOWN  88C8            ; Unknown 8xxx instruction
$716    $32E7   SE       V2, #E7         ; Skip if V2 == 231
$718    $F9EB   UNKNOWN  F9EB            ; Unknown Fxxx instruction
$71A    $09C9   SYS      $9C9            ; System call to 9C9
$71C    $021C   SYS      $21C            ; System call to 21C
$71E    $2CD1   CALL     $CD1            ; Call subroutine at CD1
$720    $C7C2   RND      V7, #C2         ; V7 = random & C2
$722    $3552   SE       V5, #52         ; Skip if V5 == 82
$724    $450D   SNE      V5, #0D         ; Skip if V5 != 13
$726    $2F24   CALL     $F24            ; Call subroutine at F24
$728    $9F4E   UNKNOWN  $9F4E           ; Unknown 9xxx instruction
$72A    $FD3A   UNKNOWN  FD3A            ; Unknown Fxxx instruction
$72C    $1DD4   JP       $DD4            ; Jump to DD4
$72E    $0392   SYS      $392            ; System call to 392
$730    $2831   CALL     $831            ; Call subroutine at 831
$732    $CA10   RND      VA, #10         ; VA = random & 10
$734    $3882   SE       V8, #82         ; Skip if V8 == 130
$736    $BA11   JP       V0, $A11        ; Jump to V0 + A11
$738    $89B7   SUBN     V9, VB          ; V9 = VB - V9, VF = !borrow
$73A    $72B0   ADD      V2, #B0         ; Add 176 to V2
$73C    $C87B   RND      V8, #7B         ; V8 = random & 7B
$73E    $32D2   SE       V2, #D2         ; Skip if V2 == 210
$740    $010B   SYS      $10B            ; System call to 10B
$742    $A517   LD       I, $517         ; Load 517 into I
$744    $29FF   CALL     $9FF            ; Call subroutine at 9FF
$746    $6A51   LD       VA, #51         ; Load 81 into VA
$748    $C58C   RND      V5, #8C         ; V5 = random & 8C
$74A    $B1B7   JP       V0, $1B7        ; Jump to V0 + 1B7
$74C    $19DB   JP       $9DB            ; Jump to 9DB
$74E    $C937   RND      V9, #37         ; V9 = random & 37
$750    $915E   UNKNOWN  $915E           ; Unknown 9xxx instruction
$752    $4612   SNE      V6, #12         ; Skip if V6 != 18
$754    $C035   RND      V0, #35         ; V0 = random & 35
$756    $CBF3   RND      VB, #F3         ; VB = random & F3
$758    $E0BE   UNKNOWN  $E0BE           ; Unknown Exxx instruction
$75A    $11F5   JP       $1F5            ; Jump to 1F5
$75C    $580E   UNKNOWN  $580E           ; Unknown 5xxx instruction
$75E    $D8AD   DRW      V8, VA, #D      ; Draw 13-byte sprite at V8, VA
$760    $21AC   CALL     $1AC            ; Call subroutine at 1AC
$762    $EF84   UNKNOWN  $EF84           ; Unknown Exxx instruction
$764    $E771   UNKNOWN  $E771           ; Unknown Exxx instruction
$766    $FC30   UNKNOWN  FC30            ; Unknown Fxxx instruction
$768    $8D82   AND      VD, V8          ; VD &= V8
$76A    $E58C   UNKNOWN  $E58C           ; Unknown Exxx instruction
$76C    $9CC7   UNKNOWN  $9CC7           ; Unknown 9xxx instruction
$76E    $82EE   SHL      V2              ; V2 <<= 1, VF = MSB
$770    $6963   LD       V9, #63         ; Load 99 into V9
$772    $B414   JP       V0, $414        ; Jump to V0 + 414
$774    $B8F8   JP       V0, $8F8        ; Jump to V0 + 8F8
$776    $E047   UNKNOWN  $E047           ; Unknown Exxx instruction
$778    $2E0E   CALL     $E0E            ; Call subroutine at E0E
$77A    $3794   SE       V7, #94         ; Skip if V7 == 148
$77C    $6D2A   LD       VD, #2A         ; Load 42 into VD
$77E    $BF46   JP       V0, $F46        ; Jump to V0 + F46
$780    $BA33   JP       V0, $A33        ; Jump to V0 + A33
$782    $084A   SYS      $84A            ; System call to 84A
$784    $345E   SE       V4, #5E         ; Skip if V4 == 94
$786    $5D46   UNKNOWN  $5D46           ; Unknown 5xxx instruction
$788    $6AFC   LD       VA, #FC         ; Load 252 into VA
$78A    $AE98   LD       I, $E98         ; Load E98 into I
$78C    $34F0   SE       V4, #F0         ; Skip if V4 == 240
$78E    $28B4   CALL     $8B4            ; Call subroutine at 8B4
$790    $3909   SE       V9, #09         ; Skip if V9 == 9
$792    $F260   UNKNOWN  F260            ; Unknown Fxxx instruction
$794    $013E   SYS      $13E            ; System call to 13E
$796    $4CDD   SNE      VC, #DD         ; Skip if VC != 221
$798    $5936   UNKNOWN  $5936           ; Unknown 5xxx instruction
$79A    $0E40   SYS      $E40            ; System call to E40
$79C    $C8E9   RND      V8, #E9         ; V8 = random & E9
$79E    $AC98   LD       I, $C98         ; Load C98 into I
$7A0    $DC9A   DRW      VC, V9, #A      ; Draw 10-byte sprite at VC, V9
$7A2    $E665   UNKNOWN  $E665           ; Unknown Exxx instruction
$7A4    $7F37   ADD      VF, #37         ; Add 55 to VF
$7A6    $663C   LD       V6, #3C         ; Load 60 into V6
$7A8    $CD8D   RND      VD, #8D         ; VD = random & 8D
$7AA    $3CAF   SE       VC, #AF         ; Skip if VC == 175
$7AC    $411B   SNE      V1, #1B         ; Skip if V1 != 27
$7AE    $431D   SNE      V3, #1D         ; Skip if V3 != 29
$7B0    $8C67   SUBN     VC, V6          ; VC = V6 - VC, VF = !borrow
$7B2    $7AE2   ADD      VA, #E2         ; Add 226 to VA
$7B4    $F519   UNKNOWN  F519            ; Unknown Fxxx instruction
$7B6    $9516   UNKNOWN  $9516           ; Unknown 9xxx instruction
$7B8    $1453   JP       $453            ; Jump to 453
$7BA    $C92E   RND      V9, #2E         ; V9 = random & 2E
$7BC    $65E8   LD       V5, #E8         ; Load 232 into V5
$7BE    $BFB6   JP       V0, $FB6        ; Jump to V0 + FB6
$7C0    $B9E3   JP       V0, $9E3        ; Jump to V0 + 9E3
$7C2    $D5FD   DRW      V5, VF, #D      ; Draw 13-byte sprite at V5, VF
$7C4    $2390   CALL     $390            ; Call subroutine at 390
$7C6    $1D28   JP       $D28            ; Jump to D28
$7C8    $5567   UNKNOWN  $5567           ; Unknown 5xxx instruction
$7CA    $9D54   UNKNOWN  $9D54           ; Unknown 9xxx instruction
$7CC    $08E8   SYS      $8E8            ; System call to 8E8
$7CE    $3FC8   SE       VF, #C8         ; Skip if VF == 200
$7D0    $EC38   UNKNOWN  $EC38           ; Unknown Exxx instruction
$7D2    $E271   UNKNOWN  $E271           ; Unknown Exxx instruction
$7D4    $E61E   UNKNOWN  $E61E           ; Unknown Exxx instruction
$7D6    $95E9   UNKNOWN  $95E9           ; Unknown 9xxx instruction
$7D8    $EC2F   UNKNOWN  $EC2F           ; Unknown Exxx instruction
$7DA    $80EE   SHL      V0              ; V0 <<= 1, VF = MSB
$7DC    $C094   RND      V0, #94         ; V0 = random & 94
$7DE    $DF4F   DRW      VF, V4, #F      ; Draw 15-byte sprite at VF, V4
$7E0    $B308   JP       V0, $308        ; Jump to V0 + 308
$7E2    $62FC   LD       V2, #FC         ; Load 252 into V2
$7E4    $31E1   SE       V1, #E1         ; Skip if V1 == 225
$7E6    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$7E8    $5549   UNKNOWN  $5549           ; Unknown 5xxx instruction
$7EA    $B148   JP       V0, $148        ; Jump to V0 + 148
$7EC    $AF38   LD       I, $F38         ; Load F38 into I
$7EE    $23DE   CALL     $3DE            ; Call subroutine at 3DE
$7F0    $E6DF   UNKNOWN  $E6DF           ; Unknown Exxx instruction
$7F2    $4F44   SNE      VF, #44         ; Skip if VF != 68
$7F4    $0028   SYS      $028            ; System call to 028
$7F6    $CCA6   RND      VC, #A6         ; VC = random & A6
$7F8    $5851   UNKNOWN  $5851           ; Unknown 5xxx instruction
$7FA    $50F0   SE       V0, VF          ; Skip if V0 == VF
$7FC    $A7A5   LD       I, $7A5         ; Load 7A5 into I
$7FE    $1FB4   JP       $FB4            ; Jump to FB4
$800    $77D1   ADD      V7, #D1         ; Add 209 to V7
$802    $A67A   LD       I, $67A         ; Load 67A into I
$804    $9E5A   UNKNOWN  $9E5A           ; Unknown 9xxx instruction
$806    $3987   SE       V9, #87         ; Skip if V9 == 135
$808    $EF69   UNKNOWN  $EF69           ; Unknown Exxx instruction
$80A    $4538   SNE      V5, #38         ; Skip if V5 != 56
$80C    $5341   UNKNOWN  $5341           ; Unknown 5xxx instruction
$80E    $05E6   SYS      $5E6            ; System call to 5E6
$810    $E211   UNKNOWN  $E211           ; Unknown Exxx instruction
$812    $60BF   LD       V0, #BF         ; Load 191 into V0
$814    $95A7   UNKNOWN  $95A7           ; Unknown 9xxx instruction
$816    $A759   LD       I, $759         ; Load 759 into I
$818    $7054   ADD      V0, #54         ; Add 84 to V0
$81A    $D46F   DRW      V4, V6, #F      ; Draw 15-byte sprite at V4, V6
$81C    $185C   JP       $85C            ; Jump to 85C
$81E    $1A2A   JP       $A2A            ; Jump to A2A
$820    $DEA3   DRW      VE, VA, #3      ; Draw 3-byte sprite at VE, VA
$822    $BC42   JP       V0, $C42        ; Jump to V0 + C42
$824    $5375   UNKNOWN  $5375           ; Unknown 5xxx instruction
$826    $851F   UNKNOWN  851F            ; Unknown 8xxx instruction
$828    $6FB3   LD       VF, #B3         ; Load 179 into VF
$82A    $91B1   UNKNOWN  $91B1           ; Unknown 9xxx instruction
$82C    $9D4B   UNKNOWN  $9D4B           ; Unknown 9xxx instruction
$82E    $72DB   ADD      V2, #DB         ; Add 219 to V2
$830    $D023   DRW      V0, V2, #3      ; Draw 3-byte sprite at V0, V2
$832    $02AA   SYS      $2AA            ; System call to 2AA
$834    $1616   JP       $616            ; Jump to 616
$836    $386C   SE       V8, #6C         ; Skip if V8 == 108
$838    $1BFE   JP       $BFE            ; Jump to BFE
$83A    $9E42   UNKNOWN  $9E42           ; Unknown 9xxx instruction
$83C    $220B   CALL     $20B            ; Call subroutine at 20B
$83E    $4B3C   SNE      VB, #3C         ; Skip if VB != 60
$840    $A055   LD       I, $055         ; Load 055 into I
$842    $D0B2   DRW      V0, VB, #2      ; Draw 2-byte sprite at V0, VB
$844    $C63F   RND      V6, #3F         ; V6 = random & 3F
$846    $A61F   LD       I, $61F         ; Load 61F into I
$848    $2882   CALL     $882            ; Call subroutine at 882
$84A    $8872   AND      V8, V7          ; V8 &= V7
$84C    $18F4   JP       $8F4            ; Jump to 8F4
$84E    $4A32   SNE      VA, #32         ; Skip if VA != 50
$850    $D317   DRW      V3, V1, #7      ; Draw 7-byte sprite at V3, V1
$852    $F97E   UNKNOWN  F97E            ; Unknown Fxxx instruction
$854    $31C7   SE       V1, #C7         ; Skip if V1 == 199
$856    $6FFA   LD       VF, #FA         ; Load 250 into VF
$858    $EEB6   UNKNOWN  $EEB6           ; Unknown Exxx instruction
$85A    $C31D   RND      V3, #1D         ; V3 = random & 1D
$85C    $6AB0   LD       VA, #B0         ; Load 176 into VA
$85E    $93CC   UNKNOWN  $93CC           ; Unknown 9xxx instruction
$860    $7376   ADD      V3, #76         ; Add 118 to V3
$862    $6D2B   LD       VD, #2B         ; Load 43 into VD
$864    $A90C   LD       I, $90C         ; Load 90C into I
$866    $7B13   ADD      VB, #13         ; Add 19 to VB
$868    $5554   UNKNOWN  $5554           ; Unknown 5xxx instruction
$86A    $A7C5   LD       I, $7C5         ; Load 7C5 into I
$86C    $EB6F   UNKNOWN  $EB6F           ; Unknown Exxx instruction
$86E    $5373   UNKNOWN  $5373           ; Unknown 5xxx instruction
$870    $19F4   JP       $9F4            ; Jump to 9F4
$872    $DCA8   DRW      VC, VA, #8      ; Draw 8-byte sprite at VC, VA
$874    $8A5E   SHL      VA              ; VA <<= 1, VF = MSB
$876    $C943   RND      V9, #43         ; V9 = random & 43
$878    $1795   JP       $795            ; Jump to 795
$87A    $B367   JP       V0, $367        ; Jump to V0 + 367
$87C    $7F0B   ADD      VF, #0B         ; Add 11 to VF
$87E    $AA98   LD       I, $A98         ; Load A98 into I
$880    $DB7B   DRW      VB, V7, #B      ; Draw 11-byte sprite at VB, V7
$882    $AA1D   LD       I, $A1D         ; Load A1D into I
$884    $5C1A   UNKNOWN  $5C1A           ; Unknown 5xxx instruction
$886    $FD3D   UNKNOWN  FD3D            ; Unknown Fxxx instruction
$888    $7EFE   ADD      VE, #FE         ; Add 254 to VE
$88A    $8156   SHR      V1              ; V1 >>= 1, VF = LSB
$88C    $E2FC   UNKNOWN  $E2FC           ; Unknown Exxx instruction
$88E    $219E   CALL     $19E            ; Call subroutine at 19E
$890    $F758   UNKNOWN  F758            ; Unknown Fxxx instruction
$892    $DAE7   DRW      VA, VE, #7      ; Draw 7-byte sprite at VA, VE
$894    $60A7   LD       V0, #A7         ; Load 167 into V0
$896    $A18F   LD       I, $18F         ; Load 18F into I
$898    $B57B   JP       V0, $57B        ; Jump to V0 + 57B
$89A    $9A33   UNKNOWN  $9A33           ; Unknown 9xxx instruction
$89C    $691C   LD       V9, #1C         ; Load 28 into V9
$89E    $54B6   UNKNOWN  $54B6           ; Unknown 5xxx instruction
$8A0    $154C   JP       $54C            ; Jump to 54C
$8A2    $681A   LD       V8, #1A         ; Load 26 into V8
$8A4    $37AF   SE       V7, #AF         ; Skip if V7 == 175
$8A6    $C69B   RND      V6, #9B         ; V6 = random & 9B
$8A8    $6DBC   LD       VD, #BC         ; Load 188 into VD
$8AA    $03B5   SYS      $3B5            ; System call to 3B5
$8AC    $2C5B   CALL     $C5B            ; Call subroutine at C5B
$8AE    $97B9   UNKNOWN  $97B9           ; Unknown 9xxx instruction
$8B0    $90BC   UNKNOWN  $90BC           ; Unknown 9xxx instruction
$8B2    $35C6   SE       V5, #C6         ; Skip if V5 == 198
$8B4    $BED3   JP       V0, $ED3        ; Jump to V0 + ED3
$8B6    $29DC   CALL     $9DC            ; Call subroutine at 9DC
$8B8    $E159   UNKNOWN  $E159           ; Unknown Exxx instruction
$8BA    $6D15   LD       VD, #15         ; Load 21 into VD
$8BC    $C074   RND      V0, #74         ; V0 = random & 74
$8BE    $61EC   LD       V1, #EC         ; Load 236 into V1
$8C0    $CCD6   RND      VC, #D6         ; VC = random & D6
$8C2    $3EE5   SE       VE, #E5         ; Skip if VE == 229
$8C4    $F58C   UNKNOWN  F58C            ; Unknown Fxxx instruction
$8C6    $5D65   UNKNOWN  $5D65           ; Unknown 5xxx instruction
$8C8    $6748   LD       V7, #48         ; Load 72 into V7
$8CA    $8D19   UNKNOWN  8D19            ; Unknown 8xxx instruction
$8CC    $17A6   JP       $7A6            ; Jump to 7A6
$8CE    $84E9   UNKNOWN  84E9            ; Unknown 8xxx instruction
$8D0    $128C   JP       $28C            ; Jump to 28C
$8D2    $D70D   DRW      V7, V0, #D      ; Draw 13-byte sprite at V7, V0
$8D4    $8D77   SUBN     VD, V7          ; VD = V7 - VD, VF = !borrow
$8D6    $2B9D   CALL     $B9D            ; Call subroutine at B9D
$8D8    $F6C9   UNKNOWN  F6C9            ; Unknown Fxxx instruction
$8DA    $979C   UNKNOWN  $979C           ; Unknown 9xxx instruction
$8DC    $3648   SE       V6, #48         ; Skip if V6 == 72
$8DE    $1724   JP       $724            ; Jump to 724
$8E0    $C43B   RND      V4, #3B         ; V4 = random & 3B
$8E2    $26A1   CALL     $6A1            ; Call subroutine at 6A1
$8E4    $3370   SE       V3, #70         ; Skip if V3 == 112
$8E6    $E4C4   UNKNOWN  $E4C4           ; Unknown Exxx instruction
$8E8    $BFFB   JP       V0, $FFB        ; Jump to V0 + FFB
$8EA    $8596   SHR      V5              ; V5 >>= 1, VF = LSB
$8EC    $7082   ADD      V0, #82         ; Add 130 to V0
$8EE    $A5F7   LD       I, $5F7         ; Load 5F7 into I
$8F0    $0228   SYS      $228            ; System call to 228
$8F2    $2A26   CALL     $A26            ; Call subroutine at A26
$8F4    $A48F   LD       I, $48F         ; Load 48F into I
$8F6    $52C0   SE       V2, VC          ; Skip if V2 == VC
$8F8    $2861   CALL     $861            ; Call subroutine at 861
$8FA    $B695   JP       V0, $695        ; Jump to V0 + 695
$8FC    $3D36   SE       VD, #36         ; Skip if VD == 54
$8FE    $B183   JP       V0, $183        ; Jump to V0 + 183
$900    $A454   LD       I, $454         ; Load 454 into I
$902    $B923   JP       V0, $923        ; Jump to V0 + 923
$904    $E9CC   UNKNOWN  $E9CC           ; Unknown Exxx instruction
$906    $04A1   SYS      $4A1            ; System call to 4A1
$908    $81CD   UNKNOWN  81CD            ; Unknown 8xxx instruction
$90A    $5F5D   UNKNOWN  $5F5D           ; Unknown 5xxx instruction
$90C    $C8B8   RND      V8, #B8         ; V8 = random & B8
$90E    $9112   UNKNOWN  $9112           ; Unknown 9xxx instruction
$910    $18A0   JP       $8A0            ; Jump to 8A0
$912    $774C   ADD      V7, #4C         ; Add 76 to V7
$914    $C941   RND      V9, #41         ; V9 = random & 41
$916    $AA94   LD       I, $A94         ; Load A94 into I
$918    $78B1   ADD      V8, #B1         ; Add 177 to V8
$91A    $FE8B   UNKNOWN  FE8B            ; Unknown Fxxx instruction
$91C    $82A0   LD       V2, VA          ; V2 = VA
$91E    $8D25   SUB      VD, V2          ; VD -= V2, VF = !borrow
$920    $CA0B   RND      VA, #0B         ; VA = random & 0B
$922    $210F   CALL     $10F            ; Call subroutine at 10F
$924    $36D2   SE       V6, #D2         ; Skip if V6 == 210
$926    $792D   ADD      V9, #2D         ; Add 45 to V9
$928    $EF1A   UNKNOWN  $EF1A           ; Unknown Exxx instruction
$92A    $8D80   LD       VD, V8          ; VD = V8
$92C    $4996   SNE      V9, #96         ; Skip if V9 != 150
$92E    $09D9   SYS      $9D9            ; System call to 9D9
$930    $7397   ADD      V3, #97         ; Add 151 to V3
$932    $BC35   JP       V0, $C35        ; Jump to V0 + C35
$934    $5745   UNKNOWN  $5745           ; Unknown 5xxx instruction
$936    $587B   UNKNOWN  $587B           ; Unknown 5xxx instruction
$938    $BF21   JP       V0, $F21        ; Jump to V0 + F21
$93A    $00FA   SYS      $0FA            ; System call to 0FA
$93C    $BF4A   JP       V0, $F4A        ; Jump to V0 + F4A
$93E    $FECC   UNKNOWN  FECC            ; Unknown Fxxx instruction
$940    $E49C   UNKNOWN  $E49C           ; Unknown Exxx instruction
$942    $699C   LD       V9, #9C         ; Load 156 into V9
$944    $CF82   RND      VF, #82         ; VF = random & 82
$946    $E0C7   UNKNOWN  $E0C7           ; Unknown Exxx instruction
$948    $F151   UNKNOWN  F151            ; Unknown Fxxx instruction
$94A    $EEC0   UNKNOWN  $EEC0           ; Unknown Exxx instruction
$94C    $37EF   SE       V7, #EF         ; Skip if V7 == 239
$94E    $2EF9   CALL     $EF9            ; Call subroutine at EF9
$950    $EF53   UNKNOWN  $EF53           ; Unknown Exxx instruction
$952    $F161   UNKNOWN  F161            ; Unknown Fxxx instruction
$954    $1177   JP       $177            ; Jump to 177
$956    $B99C   JP       V0, $99C        ; Jump to V0 + 99C
$958    $77F4   ADD      V7, #F4         ; Add 244 to V7
$95A    $D207   DRW      V2, V0, #7      ; Draw 7-byte sprite at V2, V0
$95C    $307A   SE       V0, #7A         ; Skip if V0 == 122
$95E    $02F0   SYS      $2F0            ; System call to 2F0
$960    $5534   UNKNOWN  $5534           ; Unknown 5xxx instruction
$962    $129B   JP       $29B            ; Jump to 29B
$964    $A2DC   LD       I, $2DC         ; Load 2DC into I
$966    $786A   ADD      V8, #6A         ; Add 106 to V8
$968    $26DE   CALL     $6DE            ; Call subroutine at 6DE
$96A    $5023   UNKNOWN  $5023           ; Unknown 5xxx instruction
$96C    $DB40   DRW      VB, V4, #0      ; Draw 0-byte sprite at VB, V4
$96E    $E5F8   UNKNOWN  $E5F8           ; Unknown Exxx instruction
$970    $EAC3   UNKNOWN  $EAC3           ; Unknown Exxx instruction
$972    $D15D   DRW      V1, V5, #D      ; Draw 13-byte sprite at V1, V5
$974    $A270   LD       I, $270         ; Load 270 into I
$976    $FD7C   UNKNOWN  FD7C            ; Unknown Fxxx instruction
$978    $1362   JP       $362            ; Jump to 362
$97A    $ED4E   UNKNOWN  $ED4E           ; Unknown Exxx instruction
$97C    $97AD   UNKNOWN  $97AD           ; Unknown 9xxx instruction
$97E    $E0C4   UNKNOWN  $E0C4           ; Unknown Exxx instruction
$980    $DDB9   DRW      VD, VB, #9      ; Draw 9-byte sprite at VD, VB
$982    $32D8   SE       V2, #D8         ; Skip if V2 == 216
$984    $95DB   UNKNOWN  $95DB           ; Unknown 9xxx instruction
$986    $41CA   SNE      V1, #CA         ; Skip if V1 != 202
$988    $5E37   UNKNOWN  $5E37           ; Unknown 5xxx instruction
$98A    $7EA7   ADD      VE, #A7         ; Add 167 to VE
$98C    $C85B   RND      V8, #5B         ; V8 = random & 5B
$98E    $F9D1   UNKNOWN  F9D1            ; Unknown Fxxx instruction
$990    $ABBF   LD       I, $BBF         ; Load BBF into I
$992    $1654   JP       $654            ; Jump to 654
$994    $18B4   JP       $8B4            ; Jump to 8B4
$996    $3D21   SE       VD, #21         ; Skip if VD == 33
$998    $5E8D   UNKNOWN  $5E8D           ; Unknown 5xxx instruction
$99A    $965F   UNKNOWN  $965F           ; Unknown 9xxx instruction
$99C    $826C   UNKNOWN  826C            ; Unknown 8xxx instruction
$99E    $8037   SUBN     V0, V3          ; V0 = V3 - V0, VF = !borrow
$9A0    $BD40   JP       V0, $D40        ; Jump to V0 + D40
$9A2    $1DCD   JP       $DCD            ; Jump to DCD
$9A4    $AC4A   LD       I, $C4A         ; Load C4A into I
$9A6    $7243   ADD      V2, #43         ; Add 67 to V2
$9A8    $F627   UNKNOWN  F627            ; Unknown Fxxx instruction
$9AA    $45FB   SNE      V5, #FB         ; Skip if V5 != 251
$9AC    $6E55   LD       VE, #55         ; Load 85 into VE
$9AE    $D880   DRW      V8, V8, #0      ; Draw 0-byte sprite at V8, V8
$9B0    $B5A6   JP       V0, $5A6        ; Jump to V0 + 5A6
$9B2    $73CF   ADD      V3, #CF         ; Add 207 to V3
$9B4    $3408   SE       V4, #08         ; Skip if V4 == 8
$9B6    $DE1E   DRW      VE, V1, #E      ; Draw 14-byte sprite at VE, V1
$9B8    $B2DA   JP       V0, $2DA        ; Jump to V0 + 2DA
$9BA    $6EFF   LD       VE, #FF         ; Load 255 into VE
$9BC    $C0E6   RND      V0, #E6         ; V0 = random & E6
$9BE    $9ED9   UNKNOWN  $9ED9           ; Unknown 9xxx instruction
$9C0    $C764   RND      V7, #64         ; V7 = random & 64
$9C2    $7C4B   ADD      VC, #4B         ; Add 75 to VC
$9C4    $CC5A   RND      VC, #5A         ; VC = random & 5A
$9C6    $9037   UNKNOWN  $9037           ; Unknown 9xxx instruction
$9C8    $AC90   LD       I, $C90         ; Load C90 into I
$9CA    $2BAD   CALL     $BAD            ; Call subroutine at BAD
$9CC    $B3D7   JP       V0, $3D7        ; Jump to V0 + 3D7
$9CE    $0231   SYS      $231            ; System call to 231
$9D0    $348A   SE       V4, #8A         ; Skip if V4 == 138
$9D2    $3B6B   SE       VB, #6B         ; Skip if VB == 107
$9D4    $18FF   JP       $8FF            ; Jump to 8FF
$9D6    $31CB   SE       V1, #CB         ; Skip if V1 == 203
$9D8    $CC01   RND      VC, #01         ; VC = random & 01
$9DA    $53AD   UNKNOWN  $53AD           ; Unknown 5xxx instruction
$9DC    $2EE1   CALL     $EE1            ; Call subroutine at EE1
$9DE    $1C6C   JP       $C6C            ; Jump to C6C
$9E0    $7F06   ADD      VF, #06         ; Add 6 to VF
$9E2    $ADD4   LD       I, $DD4         ; Load DD4 into I
$9E4    $5227   UNKNOWN  $5227           ; Unknown 5xxx instruction
$9E6    $1A65   JP       $A65            ; Jump to A65
$9E8    $AA23   LD       I, $A23         ; Load A23 into I
$9EA    $E192   UNKNOWN  $E192           ; Unknown Exxx instruction
$9EC    $D54D   DRW      V5, V4, #D      ; Draw 13-byte sprite at V5, V4
$9EE    $74F4   ADD      V4, #F4         ; Add 244 to V4
$9F0    $795E   ADD      V9, #5E         ; Add 94 to V9
$9F2    $A86D   LD       I, $86D         ; Load 86D into I
$9F4    $1891   JP       $891            ; Jump to 891
$9F6    $E265   UNKNOWN  $E265           ; Unknown Exxx instruction
$9F8    $5757   UNKNOWN  $5757           ; Unknown 5xxx instruction
$9FA    $D1B1   DRW      V1, VB, #1      ; Draw 1-byte sprite at V1, VB
$9FC    $E9D8   UNKNOWN  $E9D8           ; Unknown Exxx instruction
$9FE    $856C   UNKNOWN  856C            ; Unknown 8xxx instruction
$A00    $0BB7   SYS      $BB7            ; System call to BB7
$A02    $C875   RND      V8, #75         ; V8 = random & 75
$A04    $8DE3   XOR      VD, VE          ; VD ^= VE
$A06    $0586   SYS      $586            ; System call to 586
$A08    $7523   ADD      V5, #23         ; Add 35 to V5
$A0A    $8C4C   UNKNOWN  8C4C            ; Unknown 8xxx instruction
$A0C    $DD6F   DRW      VD, V6, #F      ; Draw 15-byte sprite at VD, V6
$A0E    $66E4   LD       V6, #E4         ; Load 228 into V6
$A10    $95FC   UNKNOWN  $95FC           ; Unknown 9xxx instruction
$A12    $B738   JP       V0, $738        ; Jump to V0 + 738
$A14    $F37D   UNKNOWN  F37D            ; Unknown Fxxx instruction
$A16    $CAF8   RND      VA, #F8         ; VA = random & F8
$A18    $075A   SYS      $75A            ; System call to 75A
$A1A    $A7B7   LD       I, $7B7         ; Load 7B7 into I
$A1C    $7CE2   ADD      VC, #E2         ; Add 226 to VC
$A1E    $0E55   SYS      $E55            ; System call to E55
$A20    $5410   SE       V4, V1          ; Skip if V4 == V1
$A22    $F0E8   UNKNOWN  F0E8            ; Unknown Fxxx instruction
$A24    $FB1E   ADD      I, VB           ; I += VB
$A26    $891D   UNKNOWN  891D            ; Unknown 8xxx instruction
$A28    $6180   LD       V1, #80         ; Load 128 into V1
$A2A    $224D   CALL     $24D            ; Call subroutine at 24D
$A2C    $309B   SE       V0, #9B         ; Skip if V0 == 155
$A2E    $54AC   UNKNOWN  $54AC           ; Unknown 5xxx instruction
$A30    $46DE   SNE      V6, #DE         ; Skip if V6 != 222
$A32    $5451   UNKNOWN  $5451           ; Unknown 5xxx instruction
$A34    $6DFA   LD       VD, #FA         ; Load 250 into VD
$A36    $86D2   AND      V6, VD          ; V6 &= VD
$A38    $F064   UNKNOWN  F064            ; Unknown Fxxx instruction
$A3A    $0B80   SYS      $B80            ; System call to B80
$A3C    $50FA   UNKNOWN  $50FA           ; Unknown 5xxx instruction
$A3E    $C39E   RND      V3, #9E         ; V3 = random & 9E
$A40    $5D3E   UNKNOWN  $5D3E           ; Unknown 5xxx instruction
$A42    $0BEA   SYS      $BEA            ; System call to BEA
$A44    $A60C   LD       I, $60C         ; Load 60C into I
$A46    $F372   UNKNOWN  F372            ; Unknown Fxxx instruction
$A48    $7B62   ADD      VB, #62         ; Add 98 to VB
$A4A    $6320   LD       V3, #20         ; Load 32 into V3
$A4C    $DFE5   DRW      VF, VE, #5      ; Draw 5-byte sprite at VF, VE
$A4E    $7121   ADD      V1, #21         ; Add 33 to V1
$A50    $ABDD   LD       I, $BDD         ; Load BDD into I
$A52    $6758   LD       V7, #58         ; Load 88 into V7
$A54    $B1D4   JP       V0, $1D4        ; Jump to V0 + 1D4
$A56    $699A   LD       V9, #9A         ; Load 154 into V9
$A58    $30CF   SE       V0, #CF         ; Skip if V0 == 207
$A5A    $652E   LD       V5, #2E         ; Load 46 into V5
$A5C    $B0D1   JP       V0, $0D1        ; Jump to V0 + 0D1
$A5E    $0449   SYS      $449            ; System call to 449
$A60    $9AB2   UNKNOWN  $9AB2           ; Unknown 9xxx instruction
$A62    $6139   LD       V1, #39         ; Load 57 into V1
$A64    $E81D   UNKNOWN  $E81D           ; Unknown Exxx instruction
$A66    $3021   SE       V0, #21         ; Skip if V0 == 33
$A68    $3778   SE       V7, #78         ; Skip if V7 == 120
$A6A    $BDD7   JP       V0, $DD7        ; Jump to V0 + DD7
$A6C    $CD73   RND      VD, #73         ; VD = random & 73
$A6E    $CC50   RND      VC, #50         ; VC = random & 50
$A70    $A235   LD       I, $235         ; Load 235 into I
$A72    $CA41   RND      VA, #41         ; VA = random & 41
$A74    $1552   JP       $552            ; Jump to 552
$A76    $5272   UNKNOWN  $5272           ; Unknown 5xxx instruction
$A78    $31F9   SE       V1, #F9         ; Skip if V1 == 249
$A7A    $E1E4   UNKNOWN  $E1E4           ; Unknown Exxx instruction
$A7C    $DF97   DRW      VF, V9, #7      ; Draw 7-byte sprite at VF, V9
$A7E    $2452   CALL     $452            ; Call subroutine at 452
$A80    $9741   UNKNOWN  $9741           ; Unknown 9xxx instruction
$A82    $3431   SE       V4, #31         ; Skip if V4 == 49
$A84    $5DB9   UNKNOWN  $5DB9           ; Unknown 5xxx instruction
$A86    $772C   ADD      V7, #2C         ; Add 44 to V7
$A88    $B046   JP       V0, $046        ; Jump to V0 + 046
$A8A    $3949   SE       V9, #49         ; Skip if V9 == 73
$A8C    $5D2D   UNKNOWN  $5D2D           ; Unknown 5xxx instruction
$A8E    $3FF1   SE       VF, #F1         ; Skip if VF == 241
$A90    $BD02   JP       V0, $D02        ; Jump to V0 + D02
$A92    $2E60   CALL     $E60            ; Call subroutine at E60
$A94    $0B6E   SYS      $B6E            ; System call to B6E
$A96    $B163   JP       V0, $163        ; Jump to V0 + 163
$A98    $1A44   JP       $A44            ; Jump to A44
$A9A    $435E   SNE      V3, #5E         ; Skip if V3 != 94
$A9C    $5EBE   UNKNOWN  $5EBE           ; Unknown 5xxx instruction
$A9E    $C124   RND      V1, #24         ; V1 = random & 24
$AA0    $453C   SNE      V5, #3C         ; Skip if V5 != 60
$AA2    $ACA8   LD       I, $CA8         ; Load CA8 into I
$AA4    $F33A   UNKNOWN  F33A            ; Unknown Fxxx instruction
$AA6    $9422   UNKNOWN  $9422           ; Unknown 9xxx instruction
$AA8    $4426   SNE      V4, #26         ; Skip if V4 != 38
$AAA    $6931   LD       V9, #31         ; Load 49 into V9
$AAC    $A839   LD       I, $839         ; Load 839 into I
$AAE    $6957   LD       V9, #57         ; Load 87 into V9
$AB0    $605A   LD       V0, #5A         ; Load 90 into V0
$AB2    $9DF9   UNKNOWN  $9DF9           ; Unknown 9xxx instruction
$AB4    $484B   SNE      V8, #4B         ; Skip if V8 != 75
$AB6    $2A5F   CALL     $A5F            ; Call subroutine at A5F
$AB8    $BCE1   JP       V0, $CE1        ; Jump to V0 + CE1
$ABA    $6006   LD       V0, #06         ; Load 6 into V0
$ABC    $D77D   DRW      V7, V7, #D      ; Draw 13-byte sprite at V7, V7
$ABE    $028A   SYS      $28A            ; System call to 28A
$AC0    $7FC7   ADD      VF, #C7         ; Add 199 to VF
$AC2    $1ADA   JP       $ADA            ; Jump to ADA
$AC4    $B82A   JP       V0, $82A        ; Jump to V0 + 82A
$AC6    $BAEC   JP       V0, $AEC        ; Jump to V0 + AEC
$AC8    $2746   CALL     $746            ; Call subroutine at 746
$ACA    $70CF   ADD      V0, #CF         ; Add 207 to V0
$ACC    $AF99   LD       I, $F99         ; Load F99 into I
$ACE    $99CC   UNKNOWN  $99CC           ; Unknown 9xxx instruction
$AD0    $23BB   CALL     $3BB            ; Call subroutine at 3BB
$AD2    $E5B7   UNKNOWN  $E5B7           ; Unknown Exxx instruction
$AD4    $4542   SNE      V5, #42         ; Skip if V5 != 66
$AD6    $445A   SNE      V4, #5A         ; Skip if V4 != 90
$AD8    $2556   CALL     $556            ; Call subroutine at 556
$ADA    $B757   JP       V0, $757        ; Jump to V0 + 757
$ADC    $ACD3   LD       I, $CD3         ; Load CD3 into I
$ADE    $EE34   UNKNOWN  $EE34           ; Unknown Exxx instruction
$AE0    $6C41   LD       VC, #41         ; Load 65 into VC
$AE2    $EEF6   UNKNOWN  $EEF6           ; Unknown Exxx instruction
$AE4    $92A8   UNKNOWN  $92A8           ; Unknown 9xxx instruction
$AE6    $8A03   XOR      VA, V0          ; VA ^= V0
$AE8    $9C63   UNKNOWN  $9C63           ; Unknown 9xxx instruction
$AEA    $78CE   ADD      V8, #CE         ; Add 206 to V8
$AEC    $8421   OR       V4, V2          ; V4 |= V2
$AEE    $873B   UNKNOWN  873B            ; Unknown 8xxx instruction
$AF0    $DAA9   DRW      VA, VA, #9      ; Draw 9-byte sprite at VA, VA
$AF2    $A27B   LD       I, $27B         ; Load 27B into I
$AF4    $A4FB   LD       I, $4FB         ; Load 4FB into I
$AF6    $FCFD   UNKNOWN  FCFD            ; Unknown Fxxx instruction
$AF8    $3709   SE       V7, #09         ; Skip if V7 == 9
$AFA    $5324   UNKNOWN  $5324           ; Unknown 5xxx instruction
$AFC    $4D9D   SNE      VD, #9D         ; Skip if VD != 157
$AFE    $7F1A   ADD      VF, #1A         ; Add 26 to VF
$B00    $3B28   SE       VB, #28         ; Skip if VB == 40
$B02    $5941   UNKNOWN  $5941           ; Unknown 5xxx instruction
$B04    $C985   RND      V9, #85         ; V9 = random & 85
$B06    $4732   SNE      V7, #32         ; Skip if V7 != 50
$B08    $EB04   UNKNOWN  $EB04           ; Unknown Exxx instruction
$B0A    $AFB4   LD       I, $FB4         ; Load FB4 into I
$B0C    $5A80   SE       VA, V8          ; Skip if VA == V8
$B0E    $54E7   UNKNOWN  $54E7           ; Unknown 5xxx instruction
$B10    $96F7   UNKNOWN  $96F7           ; Unknown 9xxx instruction
$B12    $5268   UNKNOWN  $5268           ; Unknown 5xxx instruction
$B14    $1FFB   JP       $FFB            ; Jump to FFB
$B16    $031A   SYS      $31A            ; System call to 31A
$B18    $8A52   AND      VA, V5          ; VA &= V5
$B1A    $85A2   AND      V5, VA          ; V5 &= VA
$B1C    $2F18   CALL     $F18            ; Call subroutine at F18
$B1E    $A94C   LD       I, $94C         ; Load 94C into I
$B20    $4111   SNE      V1, #11         ; Skip if V1 != 17
$B22    $40E6   SNE      V0, #E6         ; Skip if V0 != 230
$B24    $5954   UNKNOWN  $5954           ; Unknown 5xxx instruction
$B26    $CC7A   RND      VC, #7A         ; VC = random & 7A
$B28    $FA8A   UNKNOWN  FA8A            ; Unknown Fxxx instruction
$B2A    $F397   UNKNOWN  F397            ; Unknown Fxxx instruction
$B2C    $8793   XOR      V7, V9          ; V7 ^= V9
$B2E    $61BB   LD       V1, #BB         ; Load 187 into V1
$B30    $89E1   OR       V9, VE          ; V9 |= VE
$B32    $8991   OR       V9, V9          ; V9 |= V9
$B34    $71A0   ADD      V1, #A0         ; Add 160 to V1
$B36    $E357   UNKNOWN  $E357           ; Unknown Exxx instruction
$B38    $11CB   JP       $1CB            ; Jump to 1CB
$B3A    $DB14   DRW      VB, V1, #4      ; Draw 4-byte sprite at VB, V1
$B3C    $AD66   LD       I, $D66         ; Load D66 into I
$B3E    $00C6   SYS      $0C6            ; System call to 0C6
$B40    $E6A5   UNKNOWN  $E6A5           ; Unknown Exxx instruction
$B42    $EA4B   UNKNOWN  $EA4B           ; Unknown Exxx instruction
$B44    $DCE4   DRW      VC, VE, #4      ; Draw 4-byte sprite at VC, VE
$B46    $03E7   SYS      $3E7            ; System call to 3E7
$B48    $CFD7   RND      VF, #D7         ; VF = random & D7
$B4A    $F0EE   UNKNOWN  F0EE            ; Unknown Fxxx instruction
$B4C    $6AE4   LD       VA, #E4         ; Load 228 into VA
$B4E    $65DA   LD       V5, #DA         ; Load 218 into V5
$B50    $C908   RND      V9, #08         ; V9 = random & 08
$B52    $8673   XOR      V6, V7          ; V6 ^= V7
$B54    $3C17   SE       VC, #17         ; Skip if VC == 23
$B56    $CDC7   RND      VD, #C7         ; VD = random & C7
$B58    $DFA9   DRW      VF, VA, #9      ; Draw 9-byte sprite at VF, VA
$B5A    $482B   SNE      V8, #2B         ; Skip if V8 != 43
$B5C    $BB6A   JP       V0, $B6A        ; Jump to V0 + B6A
$B5E    $732B   ADD      V3, #2B         ; Add 43 to V3
$B60    $8AD6   SHR      VA              ; VA >>= 1, VF = LSB
$B62    $A770   LD       I, $770         ; Load 770 into I
$B64    $709D   ADD      V0, #9D         ; Add 157 to V0
$B66    $40B0   SNE      V0, #B0         ; Skip if V0 != 176
$B68    $8299   UNKNOWN  8299            ; Unknown 8xxx instruction
$B6A    $1352   JP       $352            ; Jump to 352
$B6C    $F189   UNKNOWN  F189            ; Unknown Fxxx instruction
$B6E    $D8BB   DRW      V8, VB, #B      ; Draw 11-byte sprite at V8, VB
$B70    $B430   JP       V0, $430        ; Jump to V0 + 430
$B72    $AE59   LD       I, $E59         ; Load E59 into I
$B74    $344C   SE       V4, #4C         ; Skip if V4 == 76
$B76    $6E41   LD       VE, #41         ; Load 65 into VE
$B78    $39DE   SE       V9, #DE         ; Skip if V9 == 222
$B7A    $43F6   SNE      V3, #F6         ; Skip if V3 != 246
$B7C    $E75C   UNKNOWN  $E75C           ; Unknown Exxx instruction
$B7E    $391C   SE       V9, #1C         ; Skip if V9 == 28
$B80    $0D8C   SYS      $D8C            ; System call to D8C
$B82    $837B   UNKNOWN  837B            ; Unknown 8xxx instruction
$B84    $36DD   SE       V6, #DD         ; Skip if V6 == 221
$B86    $9CB5   UNKNOWN  $9CB5           ; Unknown 9xxx instruction
$B88    $6801   LD       V8, #01         ; Load 1 into V8
$B8A    $209D   CALL     $09D            ; Call subroutine at 09D
$B8C    $7192   ADD      V1, #92         ; Add 146 to V1
$B8E    $D367   DRW      V3, V6, #7      ; Draw 7-byte sprite at V3, V6
$B90    $CBD9   RND      VB, #D9         ; VB = random & D9
$B92    $ED5B   UNKNOWN  $ED5B           ; Unknown Exxx instruction
$B94    $E81C   UNKNOWN  $E81C           ; Unknown Exxx instruction
$B96    $CF7E   RND      VF, #7E         ; VF = random & 7E
$B98    $5CB9   UNKNOWN  $5CB9           ; Unknown 5xxx instruction
$B9A    $EEDA   UNKNOWN  $EEDA           ; Unknown Exxx instruction
$B9C    $A697   LD       I, $697         ; Load 697 into I
$B9E    $25B4   CALL     $5B4            ; Call subroutine at 5B4
$BA0    $B5A2   JP       V0, $5A2        ; Jump to V0 + 5A2
$BA2    $C327   RND      V3, #27         ; V3 = random & 27
$BA4    $A1D0   LD       I, $1D0         ; Load 1D0 into I
$BA6    $229A   CALL     $29A            ; Call subroutine at 29A
$BA8    $B419   JP       V0, $419        ; Jump to V0 + 419
$BAA    $0661   SYS      $661            ; System call to 661
$BAC    $FA12   UNKNOWN  FA12            ; Unknown Fxxx instruction
$BAE    $B9EF   JP       V0, $9EF        ; Jump to V0 + 9EF
$BB0    $7A9C   ADD      VA, #9C         ; Add 156 to VA
$BB2    $8C3E   SHL      VC              ; VC <<= 1, VF = MSB
$BB4    $6C21   LD       VC, #21         ; Load 33 into VC
$BB6    $5302   UNKNOWN  $5302           ; Unknown 5xxx instruction
$BB8    $4AC1   SNE      VA, #C1         ; Skip if VA != 193
$BBA    $482B   SNE      V8, #2B         ; Skip if V8 != 43
$BBC    $1997   JP       $997            ; Jump to 997
$BBE    $4764   SNE      V7, #64         ; Skip if V7 != 100
$BC0    $B339   JP       V0, $339        ; Jump to V0 + 339
$BC2    $1D10   JP       $D10            ; Jump to D10
$BC4    $D5A8   DRW      V5, VA, #8      ; Draw 8-byte sprite at V5, VA
$BC6    $5F73   UNKNOWN  $5F73           ; Unknown 5xxx instruction
$BC8    $C936   RND      V9, #36         ; V9 = random & 36
$BCA    $0332   SYS      $332            ; System call to 332
$BCC    $6150   LD       V1, #50         ; Load 80 into V1
$BCE    $8FA0   LD       VF, VA          ; VF = VA
$BD0    $23FA   CALL     $3FA            ; Call subroutine at 3FA
$BD2    $D31D   DRW      V3, V1, #D      ; Draw 13-byte sprite at V3, V1
$BD4    $E728   UNKNOWN  $E728           ; Unknown Exxx instruction
$BD6    $BB14   JP       V0, $B14        ; Jump to V0 + B14
$BD8    $1E72   JP       $E72            ; Jump to E72
$BDA    $AD03   LD       I, $D03         ; Load D03 into I
$BDC    $2453   CALL     $453            ; Call subroutine at 453
$BDE    $1D2A   JP       $D2A            ; Jump to D2A
$BE0    $73D1   ADD      V3, #D1         ; Add 209 to V3
$BE2    $51E1   UNKNOWN  $51E1           ; Unknown 5xxx instruction
$BE4    $95F3   UNKNOWN  $95F3           ; Unknown 9xxx instruction
$BE6    $BAE9   JP       V0, $AE9        ; Jump to V0 + AE9
$BE8    $3169   SE       V1, #69         ; Skip if V1 == 105
$BEA    $43BD   SNE      V3, #BD         ; Skip if V3 != 189
$BEC    $911E   UNKNOWN  $911E           ; Unknown 9xxx instruction
$BEE    $97CE   UNKNOWN  $97CE           ; Unknown 9xxx instruction
$BF0    $B510   JP       V0, $510        ; Jump to V0 + 510
$BF2    $AB1F   LD       I, $B1F         ; Load B1F into I
$BF4    $A52A   LD       I, $52A         ; Load 52A into I
$BF6    $5F69   UNKNOWN  $5F69           ; Unknown 5xxx instruction
$BF8    $7212   ADD      V2, #12         ; Add 18 to V2
$BFA    $2315   CALL     $315            ; Call subroutine at 315
$BFC    $46B1   SNE      V6, #B1         ; Skip if V6 != 177
$BFE    $05B9   SYS      $5B9            ; System call to 5B9
$C00    $1372   JP       $372            ; Jump to 372
$C02    $D812   DRW      V8, V1, #2      ; Draw 2-byte sprite at V8, V1
$C04    $E619   UNKNOWN  $E619           ; Unknown Exxx instruction
$C06    $B7F9   JP       V0, $7F9        ; Jump to V0 + 7F9
$C08    $A5D2   LD       I, $5D2         ; Load 5D2 into I
$C0A    $2465   CALL     $465            ; Call subroutine at 465
$C0C    $EB9A   UNKNOWN  $EB9A           ; Unknown Exxx instruction
$C0E    $B100   JP       V0, $100        ; Jump to V0 + 100
$C10    $4CE1   SNE      VC, #E1         ; Skip if VC != 225
$C12    $5E14   UNKNOWN  $5E14           ; Unknown 5xxx instruction
$C14    $539B   UNKNOWN  $539B           ; Unknown 5xxx instruction
$C16    $A0C1   LD       I, $0C1         ; Load 0C1 into I
$C18    $12D4   JP       $2D4            ; Jump to 2D4
$C1A    $0B2E   SYS      $B2E            ; System call to B2E
$C1C    $254D   CALL     $54D            ; Call subroutine at 54D
$C1E    $F8A5   UNKNOWN  F8A5            ; Unknown Fxxx instruction
$C20    $7DBF   ADD      VD, #BF         ; Add 191 to VD
$C22    $E4C0   UNKNOWN  $E4C0           ; Unknown Exxx instruction
$C24    $7D57   ADD      VD, #57         ; Add 87 to VD
$C26    $E2EF   UNKNOWN  $E2EF           ; Unknown Exxx instruction
$C28    $E1E3   UNKNOWN  $E1E3           ; Unknown Exxx instruction
$C2A    $1FB8   JP       $FB8            ; Jump to FB8
$C2C    $EC47   UNKNOWN  $EC47           ; Unknown Exxx instruction
$C2E    $33F8   SE       V3, #F8         ; Skip if V3 == 248
$C30    $8F02   AND      VF, V0          ; VF &= V0
$C32    $CBAA   RND      VB, #AA         ; VB = random & AA
$C34    $BE30   JP       V0, $E30        ; Jump to V0 + E30
$C36    $F3B8   UNKNOWN  F3B8            ; Unknown Fxxx instruction
$C38    $0558   SYS      $558            ; System call to 558
$C3A    $AC95   LD       I, $C95         ; Load C95 into I
$C3C    $4906   SNE      V9, #06         ; Skip if V9 != 6
$C3E    $A47A   LD       I, $47A         ; Load 47A into I
$C40    $5E7A   UNKNOWN  $5E7A           ; Unknown 5xxx instruction
$C42    $F058   UNKNOWN  F058            ; Unknown Fxxx instruction
$C44    $FAB8   UNKNOWN  FAB8            ; Unknown Fxxx instruction
$C46    $2C28   CALL     $C28            ; Call subroutine at C28
$C48    $CDCA   RND      VD, #CA         ; VD = random & CA
$C4A    $03E6   SYS      $3E6            ; System call to 3E6
$C4C    $203F   CALL     $03F            ; Call subroutine at 03F
$C4E    $978A   UNKNOWN  $978A           ; Unknown 9xxx instruction
$C50    $C468   RND      V4, #68         ; V4 = random & 68
$C52    $8245   SUB      V2, V4          ; V2 -= V4, VF = !borrow
$C54    $099A   SYS      $99A            ; System call to 99A
$C56    $B135   JP       V0, $135        ; Jump to V0 + 135
$C58    $F640   UNKNOWN  F640            ; Unknown Fxxx instruction
$C5A    $F554   UNKNOWN  F554            ; Unknown Fxxx instruction
$C5C    $045D   SYS      $45D            ; System call to 45D
$C5E    $5EEA   UNKNOWN  $5EEA           ; Unknown 5xxx instruction
$C60    $A118   LD       I, $118         ; Load 118 into I
$C62    $F2E0   UNKNOWN  F2E0            ; Unknown Fxxx instruction
$C64    $905C   UNKNOWN  $905C           ; Unknown 9xxx instruction
$C66    $8F66   SHR      VF              ; VF >>= 1, VF = LSB
$C68    $B37E   JP       V0, $37E        ; Jump to V0 + 37E
$C6A    $2147   CALL     $147            ; Call subroutine at 147
$C6C    $7E89   ADD      VE, #89         ; Add 137 to VE
$C6E    $A6DF   LD       I, $6DF         ; Load 6DF into I
$C70    $27D2   CALL     $7D2            ; Call subroutine at 7D2
$C72    $A5B0   LD       I, $5B0         ; Load 5B0 into I
$C74    $4EDC   SNE      VE, #DC         ; Skip if VE != 220
$C76    $3DB0   SE       VD, #B0         ; Skip if VD == 176
$C78    $AFA4   LD       I, $FA4         ; Load FA4 into I
$C7A    $7B67   ADD      VB, #67         ; Add 103 to VB
$C7C    $C8D3   RND      V8, #D3         ; V8 = random & D3
$C7E    $CDC7   RND      VD, #C7         ; VD = random & C7
$C80    $5F50   SE       VF, V5          ; Skip if VF == V5
$C82    $B309   JP       V0, $309        ; Jump to V0 + 309
$C84    $4ADF   SNE      VA, #DF         ; Skip if VA != 223
$C86    $D163   DRW      V1, V6, #3      ; Draw 3-byte sprite at V1, V6
$C88    $D356   DRW      V3, V5, #6      ; Draw 6-byte sprite at V3, V5
$C8A    $B507   JP       V0, $507        ; Jump to V0 + 507
$C8C    $5551   UNKNOWN  $5551           ; Unknown 5xxx instruction
$C8E    $D7C7   DRW      V7, VC, #7      ; Draw 7-byte sprite at V7, VC
$C90    $EBE0   UNKNOWN  $EBE0           ; Unknown Exxx instruction
$C92    $60CC   LD       V0, #CC         ; Load 204 into V0
$C94    $6B13   LD       VB, #13         ; Load 19 into VB
$C96    $B881   JP       V0, $881        ; Jump to V0 + 881
$C98    $D3C1   DRW      V3, VC, #1      ; Draw 1-byte sprite at V3, VC
$C9A    $5D28   UNKNOWN  $5D28           ; Unknown 5xxx instruction
$C9C    $3D0D   SE       VD, #0D         ; Skip if VD == 13
$C9E    $9C29   UNKNOWN  $9C29           ; Unknown 9xxx instruction
$CA0    $816E   SHL      V1              ; V1 <<= 1, VF = MSB
$CA2    $440F   SNE      V4, #0F         ; Skip if V4 != 15
$CA4    $AADB   LD       I, $ADB         ; Load ADB into I
$CA6    $9AAD   UNKNOWN  $9AAD           ; Unknown 9xxx instruction
$CA8    $0117   SYS      $117            ; System call to 117
$CAA    $6F0F   LD       VF, #0F         ; Load 15 into VF
$CAC    $8F0F   UNKNOWN  8F0F            ; Unknown 8xxx instruction
$CAE    $DB09   DRW      VB, V0, #9      ; Draw 9-byte sprite at VB, V0
$CB0    $EBC6   UNKNOWN  $EBC6           ; Unknown Exxx instruction
$CB2    $0EBE   SYS      $EBE            ; System call to EBE
$CB4    $FA51   UNKNOWN  FA51            ; Unknown Fxxx instruction
$CB6    $AABD   LD       I, $ABD         ; Load ABD into I
$CB8    $D453   DRW      V4, V5, #3      ; Draw 3-byte sprite at V4, V5
$CBA    $95C3   UNKNOWN  $95C3           ; Unknown 9xxx instruction
$CBC    $0320   SYS      $320            ; System call to 320
$CBE    $A341   LD       I, $341         ; Load 341 into I
$CC0    $F651   UNKNOWN  F651            ; Unknown Fxxx instruction
$CC2    $67E1   LD       V7, #E1         ; Load 225 into V7
$CC4    $A8A9   LD       I, $8A9         ; Load 8A9 into I
$CC6    $4115   SNE      V1, #15         ; Skip if V1 != 21
$CC8    $BAF8   JP       V0, $AF8        ; Jump to V0 + AF8
$CCA    $B12E   JP       V0, $12E        ; Jump to V0 + 12E
$CCC    $1CE6   JP       $CE6            ; Jump to CE6
$CCE    $FFCC   UNKNOWN  FFCC            ; Unknown Fxxx instruction
$CD0    $2DDF   CALL     $DDF            ; Call subroutine at DDF
$CD2    $BF6E   JP       V0, $F6E        ; Jump to V0 + F6E
$CD4    $4790   SNE      V7, #90         ; Skip if V7 != 144
$CD6    $874D   UNKNOWN  874D            ; Unknown 8xxx instruction
$CD8    $7375   ADD      V3, #75         ; Add 117 to V3
$CDA    $040F   SYS      $40F            ; System call to 40F
$CDC    $8337   SUBN     V3, V3          ; V3 = V3 - V3, VF = !borrow
$CDE    $4BD5   SNE      VB, #D5         ; Skip if VB != 213
$CE0    $F58B   UNKNOWN  F58B            ; Unknown Fxxx instruction
$CE2    $A656   LD       I, $656         ; Load 656 into I
$CE4    $F1DF   UNKNOWN  F1DF            ; Unknown Fxxx instruction
$CE6    $7792   ADD      V7, #92         ; Add 146 to V7
$CE8    $C50C   RND      V5, #0C         ; V5 = random & 0C
$CEA    $9463   UNKNOWN  $9463           ; Unknown 9xxx instruction
$CEC    $DB99   DRW      VB, V9, #9      ; Draw 9-byte sprite at VB, V9
$CEE    $FDDF   UNKNOWN  FDDF            ; Unknown Fxxx instruction
$CF0    $D362   DRW      V3, V6, #2      ; Draw 2-byte sprite at V3, V6
$CF2    $5ACA   UNKNOWN  $5ACA           ; Unknown 5xxx instruction
$CF4    $65C9   LD       V5, #C9         ; Load 201 into V5
$CF6    $0198   SYS      $198            ; System call to 198
$CF8    $F9B5   UNKNOWN  F9B5            ; Unknown Fxxx instruction
$CFA    $FDC0   UNKNOWN  FDC0            ; Unknown Fxxx instruction
$CFC    $09DF   SYS      $9DF            ; System call to 9DF
$CFE    $B830   JP       V0, $830        ; Jump to V0 + 830
$D00    $4B47   SNE      VB, #47         ; Skip if VB != 71
$D02    $0CE8   SYS      $CE8            ; System call to CE8
$D04    $3823   SE       V8, #23         ; Skip if V8 == 35
$D06    $4328   SNE      V3, #28         ; Skip if V3 != 40
$D08    $AFC0   LD       I, $FC0         ; Load FC0 into I
$D0A    $2008   CALL     $008            ; Call subroutine at 008
$D0C    $ECE9   UNKNOWN  $ECE9           ; Unknown Exxx instruction
$D0E    $A70D   LD       I, $70D         ; Load 70D into I
$D10    $87C0   LD       V7, VC          ; V7 = VC
$D12    $F591   UNKNOWN  F591            ; Unknown Fxxx instruction
$D14    $F4C8   UNKNOWN  F4C8            ; Unknown Fxxx instruction
$D16    $884D   UNKNOWN  884D            ; Unknown 8xxx instruction
$D18    $682F   LD       V8, #2F         ; Load 47 into V8
$D1A    $6A34   LD       VA, #34         ; Load 52 into VA
$D1C    $6D5A   LD       VD, #5A         ; Load 90 into VD
$D1E    $FA66   UNKNOWN  FA66            ; Unknown Fxxx instruction
$D20    $0068   SYS      $068            ; System call to 068
$D22    $7AB9   ADD      VA, #B9         ; Add 185 to VA
$D24    $47EE   SNE      V7, #EE         ; Skip if V7 != 238
$D26    $F001   UNKNOWN  F001            ; Unknown Fxxx instruction
$D28    $1042   JP       $042            ; Jump to 042
$D2A    $09E5   SYS      $9E5            ; System call to 9E5
$D2C    $9FA0   SNE      VF, VA          ; Skip if VF != VA
$D2E    $B440   JP       V0, $440        ; Jump to V0 + 440
$D30    $F465   LD       V4, [I]         ; Load V0-V4 from I
$D32    $BD11   JP       V0, $D11        ; Jump to V0 + D11
$D34    $A57A   LD       I, $57A         ; Load 57A into I
$D36    $7790   ADD      V7, #90         ; Add 144 to V7
$D38    $2FF6   CALL     $FF6            ; Call subroutine at FF6
$D3A    $32DD   SE       V2, #DD         ; Skip if V2 == 221
$D3C    $4BC2   SNE      VB, #C2         ; Skip if VB != 194
$D3E    $1F03   JP       $F03            ; Jump to F03
$D40    $D91C   DRW      V9, V1, #C      ; Draw 12-byte sprite at V9, V1
$D42    $7C7A   ADD      VC, #7A         ; Add 122 to VC
$D44    $BF04   JP       V0, $F04        ; Jump to V0 + F04
$D46    $FB49   UNKNOWN  FB49            ; Unknown Fxxx instruction
$D48    $9393   UNKNOWN  $9393           ; Unknown 9xxx instruction
$D4A    $4313   SNE      V3, #13         ; Skip if V3 != 19
$D4C    $029A   SYS      $29A            ; System call to 29A
$D4E    $F91C   UNKNOWN  F91C            ; Unknown Fxxx instruction
$D50    $2C51   CALL     $C51            ; Call subroutine at C51
$D52    $371C   SE       V7, #1C         ; Skip if V7 == 28
$D54    $C524   RND      V5, #24         ; V5 = random & 24
$D56    $B22A   JP       V0, $22A        ; Jump to V0 + 22A
$D58    $9768   UNKNOWN  $9768           ; Unknown 9xxx instruction
$D5A    $E59C   UNKNOWN  $E59C           ; Unknown Exxx instruction
$D5C    $78CE   ADD      V8, #CE         ; Add 206 to V8
$D5E    $784F   ADD      V8, #4F         ; Add 79 to V8
$D60    $A603   LD       I, $603         ; Load 603 into I
$D62    $6AF4   LD       VA, #F4         ; Load 244 into VA
$D64    $6896   LD       V8, #96         ; Load 150 into V8
$D66    $9FBD   UNKNOWN  $9FBD           ; Unknown 9xxx instruction
$D68    $9F69   UNKNOWN  $9F69           ; Unknown 9xxx instruction
$D6A    $37A0   SE       V7, #A0         ; Skip if V7 == 160
$D6C    $F2F9   UNKNOWN  F2F9            ; Unknown Fxxx instruction
$D6E    $0249   SYS      $249            ; System call to 249
$D70    $7DE6   ADD      VD, #E6         ; Add 230 to VD
$D72    $5F65   UNKNOWN  $5F65           ; Unknown 5xxx instruction
$D74    $1D37   JP       $D37            ; Jump to D37
$D76    $A661   LD       I, $661         ; Load 661 into I
$D78    $106F   JP       $06F            ; Jump to 06F
$D7A    $1963   JP       $963            ; Jump to 963
$D7C    $6494   LD       V4, #94         ; Load 148 into V4
$D7E    $11CD   JP       $1CD            ; Jump to 1CD
$D80    $EFD6   UNKNOWN  $EFD6           ; Unknown Exxx instruction
$D82    $9519   UNKNOWN  $9519           ; Unknown 9xxx instruction
$D84    $BFCF   JP       V0, $FCF        ; Jump to V0 + FCF
$D86    $157C   JP       $57C            ; Jump to 57C
$D88    $F22A   UNKNOWN  F22A            ; Unknown Fxxx instruction
$D8A    $CB54   RND      VB, #54         ; VB = random & 54
$D8C    $CC03   RND      VC, #03         ; VC = random & 03
$D8E    $401F   SNE      V0, #1F         ; Skip if V0 != 31
$D90    $BCE3   JP       V0, $CE3        ; Jump to V0 + CE3
$D92    $5011   UNKNOWN  $5011           ; Unknown 5xxx instruction
$D94    $6F2F   LD       VF, #2F         ; Load 47 into VF
$D96    $D6F0   DRW      V6, VF, #0      ; Draw 0-byte sprite at V6, VF
$D98    $C8DB   RND      V8, #DB         ; V8 = random & DB
$D9A    $C047   RND      V0, #47         ; V0 = random & 47
$D9C    $E3B0   UNKNOWN  $E3B0           ; Unknown Exxx instruction
$D9E    $9461   UNKNOWN  $9461           ; Unknown 9xxx instruction
$DA0    $096C   SYS      $96C            ; System call to 96C
$DA2    $4F03   SNE      VF, #03         ; Skip if VF != 3
$DA4    $5077   UNKNOWN  $5077           ; Unknown 5xxx instruction
$DA6    $56B2   UNKNOWN  $56B2           ; Unknown 5xxx instruction
$DA8    $DC9E   DRW      VC, V9, #E      ; Draw 14-byte sprite at VC, V9
$DAA    $61EE   LD       V1, #EE         ; Load 238 into V1
$DAC    $38D5   SE       V8, #D5         ; Skip if V8 == 213
$DAE    $C8E7   RND      V8, #E7         ; V8 = random & E7
$DB0    $C05B   RND      V0, #5B         ; V0 = random & 5B
$DB2    $E8B3   UNKNOWN  $E8B3           ; Unknown Exxx instruction
$DB4    $9755   UNKNOWN  $9755           ; Unknown 9xxx instruction
$DB6    $076E   SYS      $76E            ; System call to 76E
$DB8    $D907   DRW      V9, V0, #7      ; Draw 7-byte sprite at V9, V0
$DBA    $7112   ADD      V1, #12         ; Add 18 to V1
$DBC    $B594   JP       V0, $594        ; Jump to V0 + 594
$DBE    $0E6B   SYS      $E6B            ; System call to E6B
$DC0    $6215   LD       V2, #15         ; Load 21 into V2
$DC2    $143A   JP       $43A            ; Jump to 43A
$DC4    $43C7   SNE      V3, #C7         ; Skip if V3 != 199
$DC6    $8134   ADD      V1, V3          ; V1 += V3, VF = carry
$DC8    $2B07   CALL     $B07            ; Call subroutine at B07
$DCA    $DA31   DRW      VA, V3, #1      ; Draw 1-byte sprite at VA, V3
$DCC    $F38A   UNKNOWN  F38A            ; Unknown Fxxx instruction
$DCE    $B379   JP       V0, $379        ; Jump to V0 + 379
$DD0    $42EB   SNE      V2, #EB         ; Skip if V2 != 235
$DD2    $94E6   UNKNOWN  $94E6           ; Unknown 9xxx instruction
$DD4    $7C29   ADD      VC, #29         ; Add 41 to VC
$DD6    $ECCD   UNKNOWN  $ECCD           ; Unknown Exxx instruction
$DD8    $E35D   UNKNOWN  $E35D           ; Unknown Exxx instruction
$DDA    $D3D0   DRW      V3, VD, #0      ; Draw 0-byte sprite at V3, VD
$DDC    $C4E0   RND      V4, #E0         ; V4 = random & E0
$DDE    $F786   UNKNOWN  F786            ; Unknown Fxxx instruction
$DE0    $074A   SYS      $74A            ; System call to 74A
$DE2    $622F   LD       V2, #2F         ; Load 47 into V2
$DE4    $AE3F   LD       I, $E3F         ; Load E3F into I
$DE6    $35B8   SE       V5, #B8         ; Skip if V5 == 184
$DE8    $DE12   DRW      VE, V1, #2      ; Draw 2-byte sprite at VE, V1
$DEA    $1D1B   JP       $D1B            ; Jump to D1B
$DEC    $25AE   CALL     $5AE            ; Call subroutine at 5AE
$DEE    $091C   SYS      $91C            ; System call to 91C
$DF0    $07F7   SYS      $7F7            ; System call to 7F7
$DF2    $AD79   LD       I, $D79         ; Load D79 into I
$DF4    $03F3   SYS      $3F3            ; System call to 3F3
$DF6    $B833   JP       V0, $833        ; Jump to V0 + 833
$DF8    $A40F   LD       I, $40F         ; Load 40F into I
$DFA    $F1AC   UNKNOWN  F1AC            ; Unknown Fxxx instruction
$DFC    $1DE3   JP       $DE3            ; Jump to DE3
$DFE    $BBE3   JP       V0, $BE3        ; Jump to V0 + BE3
$E00    $1E7E   JP       $E7E            ; Jump to E7E
$E02    $8490   LD       V4, V9          ; V4 = V9
$E04    $61E6   LD       V1, #E6         ; Load 230 into V1
$E06    $98DA   UNKNOWN  $98DA           ; Unknown 9xxx instruction
$E08    $EE9B   UNKNOWN  $EE9B           ; Unknown Exxx instruction
$E0A    $F3AE   UNKNOWN  F3AE            ; Unknown Fxxx instruction
$E0C    $284F   CALL     $84F            ; Call subroutine at 84F
$E0E    $431B   SNE      V3, #1B         ; Skip if V3 != 27
$E10    $43B0   SNE      V3, #B0         ; Skip if V3 != 176
$E12    $A69D   LD       I, $69D         ; Load 69D into I
$E14    $1F83   JP       $F83            ; Jump to F83
$E16    $ABE6   LD       I, $BE6         ; Load BE6 into I
$E18    $4C06   SNE      VC, #06         ; Skip if VC != 6
$E1A    $D812   DRW      V8, V1, #2      ; Draw 2-byte sprite at V8, V1
$E1C    $A67D   LD       I, $67D         ; Load 67D into I
$E1E    $557D   UNKNOWN  $557D           ; Unknown 5xxx instruction
$E20    $9623   UNKNOWN  $9623           ; Unknown 9xxx instruction
$E22    $4B9F   SNE      VB, #9F         ; Skip if VB != 159
$E24    $47FE   SNE      V7, #FE         ; Skip if V7 != 254
$E26    $3990   SE       V9, #90         ; Skip if V9 == 144
$E28    $C2DE   RND      V2, #DE         ; V2 = random & DE
$E2A    $4506   SNE      V5, #06         ; Skip if V5 != 6
$E2C    $604F   LD       V0, #4F         ; Load 79 into V0
$E2E    $CFF7   RND      VF, #F7         ; VF = random & F7
$E30    $0876   SYS      $876            ; System call to 876
$E32    $960B   UNKNOWN  $960B           ; Unknown 9xxx instruction
$E34    $FDF8   UNKNOWN  FDF8            ; Unknown Fxxx instruction
$E36    $E81F   UNKNOWN  $E81F           ; Unknown Exxx instruction
$E38    $30BF   SE       V0, #BF         ; Skip if V0 == 191
$E3A    $F0A5   UNKNOWN  F0A5            ; Unknown Fxxx instruction
$E3C    $AE07   LD       I, $E07         ; Load E07 into I
$E3E    $6DE8   LD       VD, #E8         ; Load 232 into VD
$E40    $CB23   RND      VB, #23         ; VB = random & 23
$E42    $CA7C   RND      VA, #7C         ; VA = random & 7C
$E44    $4DC1   SNE      VD, #C1         ; Skip if VD != 193
$E46    $974E   UNKNOWN  $974E           ; Unknown 9xxx instruction
$E48    $3455   SE       V4, #55         ; Skip if V4 == 85
$E4A    $F12A   UNKNOWN  F12A            ; Unknown Fxxx instruction
$E4C    $4B84   SNE      VB, #84         ; Skip if VB != 132
$E4E    $5A83   UNKNOWN  $5A83           ; Unknown 5xxx instruction
$E50    $C35C   RND      V3, #5C         ; V3 = random & 5C
$E52    $1F42   JP       $F42            ; Jump to F42
$E54    $6E1E   LD       VE, #1E         ; Load 30 into VE
$E56    $3F08   SE       VF, #08         ; Skip if VF == 8
$E58    $991D   UNKNOWN  $991D           ; Unknown 9xxx instruction
$E5A    $48C6   SNE      V8, #C6         ; Skip if V8 != 198
$E5C    $7FCA   ADD      VF, #CA         ; Add 202 to VF
$E5E    $7FFB   ADD      VF, #FB         ; Add 251 to VF
$E60    $30E4   SE       V0, #E4         ; Skip if V0 == 228
$E62    $C3CC   RND      V3, #CC         ; V3 = random & CC
$E64    $744D   ADD      V4, #4D         ; Add 77 to V4
$E66    $0856   SYS      $856            ; System call to 856
$E68    $99A8   UNKNOWN  $99A8           ; Unknown 9xxx instruction
$E6A    $ACEF   LD       I, $CEF         ; Load CEF into I
$E6C    $1954   JP       $954            ; Jump to 954
$E6E    $8A37   SUBN     VA, V3          ; VA = V3 - VA, VF = !borrow
$E70    $B70F   JP       V0, $70F        ; Jump to V0 + 70F
$E72    $EAD4   UNKNOWN  $EAD4           ; Unknown Exxx instruction
$E74    $924C   UNKNOWN  $924C           ; Unknown 9xxx instruction
$E76    $EF8A   UNKNOWN  $EF8A           ; Unknown Exxx instruction
$E78    $5221   UNKNOWN  $5221           ; Unknown 5xxx instruction
$E7A    $1AC1   JP       $AC1            ; Jump to AC1
$E7C    $5E2B   UNKNOWN  $5E2B           ; Unknown 5xxx instruction
$E7E    $1EFB   JP       $EFB            ; Jump to EFB
$E80    $D72E   DRW      V7, V2, #E      ; Draw 14-byte sprite at V7, V2
$E82    $7F27   ADD      VF, #27         ; Add 39 to VF
$E84    $53E4   UNKNOWN  $53E4           ; Unknown 5xxx instruction
$E86    $453E   SNE      V5, #3E         ; Skip if V5 != 62
$E88    $0341   SYS      $341            ; System call to 341
$E8A    $35F2   SE       V5, #F2         ; Skip if V5 == 242
$E8C    $2F96   CALL     $F96            ; Call subroutine at F96
$E8E    $FD08   UNKNOWN  FD08            ; Unknown Fxxx instruction
$E90    $3B99   SE       VB, #99         ; Skip if VB == 153
$E92    $3617   SE       V6, #17         ; Skip if V6 == 23
$E94    $0C24   SYS      $C24            ; System call to C24
$E96    $F99B   UNKNOWN  F99B            ; Unknown Fxxx instruction
$E98    $42F3   SNE      V2, #F3         ; Skip if V2 != 243
$E9A    $6291   LD       V2, #91         ; Load 145 into V2
$E9C    $3AD1   SE       VA, #D1         ; Skip if VA == 209
$E9E    $EC9F   UNKNOWN  $EC9F           ; Unknown Exxx instruction
$EA0    $CEF7   RND      VE, #F7         ; VE = random & F7
$EA2    $BBD7   JP       V0, $BD7        ; Jump to V0 + BD7
$EA4    $2B4D   CALL     $B4D            ; Call subroutine at B4D
$EA6    $F2D6   UNKNOWN  F2D6            ; Unknown Fxxx instruction
$EA8    $617C   LD       V1, #7C         ; Load 124 into V1
$EAA    $F6B0   UNKNOWN  F6B0            ; Unknown Fxxx instruction
$EAC    $7EEC   ADD      VE, #EC         ; Add 236 to VE
$EAE    $9E47   UNKNOWN  $9E47           ; Unknown 9xxx instruction
$EB0    $39A2   SE       V9, #A2         ; Skip if V9 == 162
$EB2    $2377   CALL     $377            ; Call subroutine at 377
$EB4    $6F2F   LD       VF, #2F         ; Load 47 into VF
$EB6    $5D5B   UNKNOWN  $5D5B           ; Unknown 5xxx instruction
$EB8    $63F4   LD       V3, #F4         ; Load 244 into V3
$EBA    $FA2C   UNKNOWN  FA2C            ; Unknown Fxxx instruction
$EBC    $092F   SYS      $92F            ; System call to 92F
$EBE    $C731   RND      V7, #31         ; V7 = random & 31
$EC0    $4D29   SNE      VD, #29         ; Skip if VD != 41
$EC2    $1AD4   JP       $AD4            ; Jump to AD4
$EC4    $C8A6   RND      V8, #A6         ; V8 = random & A6
$EC6    $E462   UNKNOWN  $E462           ; Unknown Exxx instruction
$EC8    $AAF4   LD       I, $AF4         ; Load AF4 into I
$ECA    $1442   JP       $442            ; Jump to 442
$ECC    $0264   SYS      $264            ; System call to 264
$ECE    $0E6E   SYS      $E6E            ; System call to E6E
$ED0    $29AB   CALL     $9AB            ; Call subroutine at 9AB
$ED2    $2EE2   CALL     $EE2            ; Call subroutine at EE2
$ED4    $A778   LD       I, $778         ; Load 778 into I
$ED6    $9A40   SNE      VA, V4          ; Skip if VA != V4
$ED8    $A675   LD       I, $675         ; Load 675 into I
$EDA    $CC38   RND      VC, #38         ; VC = random & 38
$EDC    $7335   ADD      V3, #35         ; Add 53 to V3
$EDE    $C548   RND      V5, #48         ; V5 = random & 48
$EE0    $BEF3   JP       V0, $EF3        ; Jump to V0 + EF3
$EE2    $4CBF   SNE      VC, #BF         ; Skip if VC != 191
$EE4    $BF11   JP       V0, $F11        ; Jump to V0 + F11
$EE6    $0592   SYS      $592            ; System call to 592
$EE8    $F637   UNKNOWN  F637            ; Unknown Fxxx instruction
$EEA    $1860   JP       $860            ; Jump to 860
$EEC    $79D0   ADD      V9, #D0         ; Add 208 to V9
$EEE    $399F   SE       V9, #9F         ; Skip if V9 == 159
$EF0    $DE5B   DRW      VE, V5, #B      ; Draw 11-byte sprite at VE, V5
$EF2    $AD0B   LD       I, $D0B         ; Load D0B into I
$EF4    $D23C   DRW      V2, V3, #C      ; Draw 12-byte sprite at V2, V3
$EF6    $B5E3   JP       V0, $5E3        ; Jump to V0 + 5E3
$EF8    $E90F   UNKNOWN  $E90F           ; Unknown Exxx instruction
$EFA    $0E3D   SYS      $E3D            ; System call to E3D
$EFC    $0519   SYS      $519            ; System call to 519
$EFE    $8F51   OR       VF, V5          ; VF |= V5
$F00    $24AB   CALL     $4AB            ; Call subroutine at 4AB
$F02    $752E   ADD      V5, #2E         ; Add 46 to V5
$F04    $5589   UNKNOWN  $5589           ; Unknown 5xxx instruction
$F06    $A40D   LD       I, $40D         ; Load 40D into I
$F08    $BCCC   JP       V0, $CCC        ; Jump to V0 + CCC
$F0A    $77F9   ADD      V7, #F9         ; Add 249 to V7
$F0C    $3249   SE       V2, #49         ; Skip if V2 == 73
$F0E    $BC99   JP       V0, $C99        ; Jump to V0 + C99
$F10    $50C3   UNKNOWN  $50C3           ; Unknown 5xxx instruction
$F12    $B08E   JP       V0, $08E        ; Jump to V0 + 08E
$F14    $90AE   UNKNOWN  $90AE           ; Unknown 9xxx instruction
$F16    $396F   SE       V9, #6F         ; Skip if V9 == 111
$F18    $A24A   LD       I, $24A         ; Load 24A into I
$F1A    $399A   SE       V9, #9A         ; Skip if V9 == 154
$F1C    $1624   JP       $624            ; Jump to 624
$F1E    $CF3E   RND      VF, #3E         ; VF = random & 3E
$F20    $0CBB   SYS      $CBB            ; System call to CBB
$F22    $C5DE   RND      V5, #DE         ; V5 = random & DE
$F24    $0195   SYS      $195            ; System call to 195
$F26    $B9FD   JP       V0, $9FD        ; Jump to V0 + 9FD
$F28    $3803   SE       V8, #03         ; Skip if V8 == 3
$F2A    $5A9A   UNKNOWN  $5A9A           ; Unknown 5xxx instruction
$F2C    $ADEF   LD       I, $DEF         ; Load DEF into I
$F2E    $8D98   UNKNOWN  8D98            ; Unknown 8xxx instruction
$F30    $47FC   SNE      V7, #FC         ; Skip if V7 != 252
$F32    $725C   ADD      V2, #5C         ; Add 92 to V2
$F34    $0B5A   SYS      $B5A            ; System call to B5A
$F36    $E745   UNKNOWN  $E745           ; Unknown Exxx instruction
$F38    $2B69   CALL     $B69            ; Call subroutine at B69
$F3A    $4453   SNE      V4, #53         ; Skip if V4 != 83
$F3C    $469B   SNE      V6, #9B         ; Skip if V6 != 155
$F3E    $1352   JP       $352            ; Jump to 352
$F40    $3A8D   SE       VA, #8D         ; Skip if VA == 141
$F42    $722B   ADD      V2, #2B         ; Add 43 to V2
$F44    $0228   SYS      $228            ; System call to 228
$F46    $2200   CALL     $200            ; Call subroutine at 200
$F48    $DC1C   DRW      VC, V1, #C      ; Draw 12-byte sprite at VC, V1
$F4A    $085D   SYS      $85D            ; System call to 85D
$F4C    $4BB3   SNE      VB, #B3         ; Skip if VB != 179
$F4E    $DBB5   DRW      VB, VB, #5      ; Draw 5-byte sprite at VB, VB
$F50    $340E   SE       V4, #0E         ; Skip if V4 == 14
$F52    $1E9F   JP       $E9F            ; Jump to E9F
$F54    $C088   RND      V0, #88         ; V0 = random & 88
$F56    $184F   JP       $84F            ; Jump to 84F
$F58    $0322   SYS      $322            ; System call to 322
$F5A    $AF18   LD       I, $F18         ; Load F18 into I
$F5C    $9379   UNKNOWN  $9379           ; Unknown 9xxx instruction
$F5E    $F1BB   UNKNOWN  F1BB            ; Unknown Fxxx instruction
$F60    $EB80   UNKNOWN  $EB80           ; Unknown Exxx instruction
$F62    $11B4   JP       $1B4            ; Jump to 1B4
$F64    $E73E   UNKNOWN  $E73E           ; Unknown Exxx instruction
$F66    $3AF1   SE       VA, #F1         ; Skip if VA == 241
$F68    $6FD7   LD       VF, #D7         ; Load 215 into VF
$F6A    $A50B   LD       I, $50B         ; Load 50B into I
$F6C    $54A2   UNKNOWN  $54A2           ; Unknown 5xxx instruction
$F6E    $26F5   CALL     $6F5            ; Call subroutine at 6F5
$F70    $0F84   SYS      $F84            ; System call to F84
$F72    $6C63   LD       VC, #63         ; Load 99 into VC
$F74    $36E6   SE       V6, #E6         ; Skip if V6 == 230
$F76    $A99D   LD       I, $99D         ; Load 99D into I
$F78    $097A   SYS      $97A            ; System call to 97A
$F7A    $DB35   DRW      VB, V3, #5      ; Draw 5-byte sprite at VB, V3
$F7C    $FCF9   UNKNOWN  FCF9            ; Unknown Fxxx instruction
$F7E    $3680   SE       V6, #80         ; Skip if V6 == 128
$F80    $8541   OR       V5, V4          ; V5 |= V4
$F82    $7F01   ADD      VF, #01         ; Add 1 to VF
$F84    $8118   UNKNOWN  8118            ; Unknown 8xxx instruction
$F86    $E476   UNKNOWN  $E476           ; Unknown Exxx instruction
$F88    $5C6C   UNKNOWN  $5C6C           ; Unknown 5xxx instruction
$F8A    $AA4E   LD       I, $A4E         ; Load A4E into I
$F8C    $BC20   JP       V0, $C20        ; Jump to V0 + C20
$F8E    $8CA3   XOR      VC, VA          ; VC ^= VA
$F90    $BADD   JP       V0, $ADD        ; Jump to V0 + ADD
$F92    $9E41   UNKNOWN  $9E41           ; Unknown 9xxx instruction
$F94    $D81C   DRW      V8, V1, #C      ; Draw 12-byte sprite at V8, V1
$F96    $9191   UNKNOWN  $9191           ; Unknown 9xxx instruction
$F98    $EEED   UNKNOWN  $EEED           ; Unknown Exxx instruction
$F9A    $28CC   CALL     $8CC            ; Call subroutine at 8CC
$F9C    $8F6A   UNKNOWN  8F6A            ; Unknown 8xxx instruction
$F9E    $3084   SE       V0, #84         ; Skip if V0 == 132
$FA0    $F723   UNKNOWN  F723            ; Unknown Fxxx instruction
$FA2    $4856   SNE      V8, #56         ; Skip if V8 != 86
$FA4    $24C8   CALL     $4C8            ; Call subroutine at 4C8
$FA6    $39D7   SE       V9, #D7         ; Skip if V9 == 215
$FA8    $F429   LD       F, V4           ; I = sprite address for digit V4
$FAA    $888E   SHL      V8              ; V8 <<= 1, VF = MSB
$FAC    $6D4F   LD       VD, #4F         ; Load 79 into VD
$FAE    $F11C   UNKNOWN  F11C            ; Unknown Fxxx instruction
$FB0    $AA0A   LD       I, $A0A         ; Load A0A into I
$FB2    $FDE5   UNKNOWN  FDE5            ; Unknown Fxxx instruction
$FB4    $AA6C   LD       I, $A6C         ; Load A6C into I
$FB6    $301E   SE       V0, #1E         ; Skip if V0 == 30
$FB8    $4EDB   SNE      VE, #DB         ; Skip if VE != 219
$FBA    $BD95   JP       V0, $D95        ; Jump to V0 + D95
$FBC    $BC2B   JP       V0, $C2B        ; Jump to V0 + C2B
$FBE    $9E39   UNKNOWN  $9E39           ; Unknown 9xxx instruction
$FC0    $1F5D   JP       $F5D            ; Jump to F5D
$FC2    $4359   SNE      V3, #59         ; Skip if V3 != 89
$FC4    $C1AD   RND      V1, #AD         ; V1 = random & AD
$FC6    $1F68   JP       $F68            ; Jump to F68
$FC8    $4BAE   SNE      VB, #AE         ; Skip if VB != 174
$FCA    $7A2B   ADD      VA, #2B         ; Add 43 to VA
$FCC    $2AD3   CALL     $AD3            ; Call subroutine at AD3
$FCE    $60B4   LD       V0, #B4         ; Load 180 into V0
$FD0    $576A   UNKNOWN  $576A           ; Unknown 5xxx instruction
$FD2    $0506   SYS      $506            ; System call to 506
$FD4    $EBA0   UNKNOWN  $EBA0           ; Unknown Exxx instruction
$FD6    $8D1B   UNKNOWN  8D1B            ; Unknown 8xxx instruction
$FD8    $E81D   UNKNOWN  $E81D           ; Unknown Exxx instruction
$FDA    $EDF4   UNKNOWN  $EDF4           ; Unknown Exxx instruction
$FDC    $E3C8   UNKNOWN  $E3C8           ; Unknown Exxx instruction
$FDE    $63CE   LD       V3, #CE         ; Load 206 into V3
$FE0    $D56A   DRW      V5, V6, #A      ; Draw 10-byte sprite at V5, V6
$FE2    $4CA0   SNE      VC, #A0         ; Skip if VC != 160
$FE4    $BA01   JP       V0, $A01        ; Jump to V0 + A01
$FE6    $24B0   CALL     $4B0            ; Call subroutine at 4B0
$FE8    $CDAA   RND      VD, #AA         ; VD = random & AA
$FEA    $BD03   JP       V0, $D03        ; Jump to V0 + D03
$FEC    $F86E   UNKNOWN  F86E            ; Unknown Fxxx instruction
$FEE    $AC10   LD       I, $C10         ; Load C10 into I
$FF0    $474D   SNE      V7, #4D         ; Skip if V7 != 77
$FF2    $1215   JP       $215            ; Jump to 215
$FF4    $A903   LD       I, $903         ; Load 903 into I
$FF6    $769B   ADD      V6, #9B         ; Add 155 to V6
$FF8    $080E   SYS      $80E            ; System call to 80E
$FFA    $50BD   UNKNOWN  $50BD           ; Unknown 5xxx instruction
$FFC    $268E   CALL     $68E            ; Call subroutine at 68E
$FFE    $34CB   SE       V4, #CB         ; Skip if V4 == 203

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 453 (25.3%)
  LD      : 251 (14.0%)
  JP      : 242 (13.5%)
  SE      : 123 ( 6.9%)
  SNE     : 120 ( 6.7%)
  ADD     : 117 ( 6.5%)
  RND     : 113 ( 6.3%)
  CALL    : 111 ( 6.2%)
  SYS     : 110 ( 6.1%)
  DRW     :  96 ( 5.4%)
  SUBN    :  12 ( 0.7%)
  AND     :   9 ( 0.5%)
  XOR     :   9 ( 0.5%)
  SHL     :   8 ( 0.4%)
  SHR     :   7 ( 0.4%)
  OR      :   7 ( 0.4%)
  SUB     :   3 ( 0.2%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 368 (20.5%)
Arithmetic Operations: 157 (8.8%)
