
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B6560D01_I04518_C1001_80ef8cb1936a.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 6560
Instance: 4518
Direction: descending
Final Array: [222, 222, 220, 89, 51, 25, 1, 1]
Operations: R:0 W:1 C:92 S:3

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 121
Sort Array References:
  $20E: LD I, $56F ; Load 56F into I
  $21E: LD I, $25A ; Load 25A into I
  $240: LD I, $C98 ; Load C98 into I
  $24C: LD I, $2A1 ; Load 2A1 into I
  $270: LD I, $CC3 ; Load CC3 into I
  $296: LD I, $0C6 ; Load 0C6 into I
  $2AA: LD I, $872 ; Load 872 into I
  $324: LD I, $9BC ; Load 9BC into I
  $37E: LD I, $F9F ; Load F9F into I
  $384: LD I, $4A3 ; Load 4A3 into I
  $38E: LD I, $B23 ; Load B23 into I
  $396: LD I, $AEB ; Load AEB into I
  $3AC: LD I, $684 ; Load 684 into I
  $3B0: LD I, $E29 ; Load E29 into I
  $3CC: LD I, $6BA ; Load 6BA into I
  $3FE: LD I, $14F ; Load 14F into I
  $40E: LD I, $70F ; Load 70F into I
  $412: LD I, $04D ; Load 04D into I
  $414: LD I, $03F ; Load 03F into I
  $416: LD I, $93B ; Load 93B into I
  $424: LD I, $D03 ; Load D03 into I
  $432: LD I, $810 ; Load 810 into I
  $440: LD I, $16B ; Load 16B into I
  $446: LD I, $7B3 ; Load 7B3 into I
  $462: LD I, $FA5 ; Load FA5 into I
  $4AA: LD I, $4AF ; Load 4AF into I
  $4AC: LD I, $7AA ; Load 7AA into I
  $504: LD I, $EEA ; Load EEA into I
  $576: LD I, $D4C ; Load D4C into I
  $594: LD I, $CFE ; Load CFE into I
  $5A0: LD I, $E74 ; Load E74 into I
  $5AE: LD I, $621 ; Load 621 into I
  $5C2: LD I, $7DA ; Load 7DA into I
  $5C6: LD V4, [I] ; Load V0-V4 from I
  $5EA: LD I, $577 ; Load 577 into I
  $62E: LD I, $EBD ; Load EBD into I
  $632: LD I, $0AE ; Load 0AE into I
  $646: LD I, $0F1 ; Load 0F1 into I
  $67C: LD I, $BD8 ; Load BD8 into I
  $682: LD I, $CEC ; Load CEC into I
  $6B0: LD I, $6FE ; Load 6FE into I
  $6B6: LD I, $8FD ; Load 8FD into I
  $6EA: LD I, $85E ; Load 85E into I
  $700: LD I, $CF9 ; Load CF9 into I
  $71E: LD I, $E11 ; Load E11 into I
  $732: LD I, $4BA ; Load 4BA into I
  $772: LD I, $7AF ; Load 7AF into I
  $794: LD I, $89A ; Load 89A into I
  $79C: LD I, $C21 ; Load C21 into I
  $7E0: LD I, $EA3 ; Load EA3 into I
  $800: LD V2, [I] ; Load V0-V2 from I
  $816: LD I, $1A4 ; Load 1A4 into I
  $834: LD I, $8CB ; Load 8CB into I
  $860: LD I, $8EF ; Load 8EF into I
  $862: LD I, $5F4 ; Load 5F4 into I
  $89E: LD I, $9BB ; Load 9BB into I
  $8CA: LD I, $A0B ; Load A0B into I
  $8CE: LD I, $E8D ; Load E8D into I
  $8DA: LD I, $6BE ; Load 6BE into I
  $8FA: LD I, $7BC ; Load 7BC into I
  $91A: LD I, $2D5 ; Load 2D5 into I
  $962: LD I, $136 ; Load 136 into I
  $978: LD I, $963 ; Load 963 into I
  $9B8: LD I, $206 ; Load 206 into I
  $9CC: LD I, $1AB ; Load 1AB into I
  $9D6: LD I, $5B3 ; Load 5B3 into I
  $9EE: LD I, $EBB ; Load EBB into I
  $A08: LD I, $D1A ; Load D1A into I
  $A28: LD I, $F64 ; Load F64 into I
  $A70: LD I, $164 ; Load 164 into I
  $A78: LD I, $541 ; Load 541 into I
  $ACA: LD I, $CB9 ; Load CB9 into I
  $AD2: LD I, $634 ; Load 634 into I
  $B00: LD I, $E54 ; Load E54 into I
  $B28: LD I, $118 ; Load 118 into I
  $B40: LD I, $6F2 ; Load 6F2 into I
  $B54: LD I, $372 ; Load 372 into I
  $B5C: LD I, $BEC ; Load BEC into I
  $BAC: LD I, $867 ; Load 867 into I
  $BCA: LD I, $67B ; Load 67B into I
  $C24: LD I, $223 ; Load 223 into I
  $C40: LD I, $1E6 ; Load 1E6 into I
  $C5E: LD I, $775 ; Load 775 into I
  $C6E: LD I, $9A2 ; Load 9A2 into I
  $C8C: LD I, $309 ; Load 309 into I
  $CAA: LD I, $751 ; Load 751 into I
  $CB4: LD I, $A6C ; Load A6C into I
  $CC8: LD I, $8D4 ; Load 8D4 into I
  $CD2: LD I, $EB0 ; Load EB0 into I
  $CF6: LD I, $F41 ; Load F41 into I
  $D00: LD I, $6D4 ; Load 6D4 into I
  $D04: LD I, $E41 ; Load E41 into I
  $D50: LD I, $1F3 ; Load 1F3 into I
  $D58: LD I, $03A ; Load 03A into I
  $D60: LD I, $07B ; Load 07B into I
  $D98: LD I, $5F7 ; Load 5F7 into I
  $DCC: LD I, $AE4 ; Load AE4 into I
  $DD8: LD I, $16D ; Load 16D into I
  $DE2: LD I, $DF1 ; Load DF1 into I
  $DE4: LD I, $ACE ; Load ACE into I
  $DEE: LD I, $687 ; Load 687 into I
  $E1A: LD I, $E27 ; Load E27 into I
  $E2C: LD I, $5DF ; Load 5DF into I
  $E3C: LD I, $DE2 ; Load DE2 into I
  $E4E: LD I, $2D3 ; Load 2D3 into I
  $E64: LD I, $3D6 ; Load 3D6 into I
  $E70: LD I, $187 ; Load 187 into I
  $E7C: LD I, $D7F ; Load D7F into I
  $E7E: LD I, $4DD ; Load 4DD into I
  $E8A: LD I, $423 ; Load 423 into I
  $E8C: LD I, $306 ; Load 306 into I
  $EA6: LD I, $2E0 ; Load 2E0 into I
  $ED6: LD I, $D01 ; Load D01 into I
  $F04: LD I, $7F1 ; Load 7F1 into I
  $F4E: LD I, $710 ; Load 710 into I
  $F80: LD I, $4C6 ; Load 4C6 into I
  $F90: LD I, $4E7 ; Load 4E7 into I
  $F94: LD I, $A22 ; Load A22 into I
  $F9E: LD I, $4BB ; Load 4BB into I
  $FA0: LD I, $757 ; Load 757 into I
  $FCC: LD I, $9C6 ; Load 9C6 into I

CONTROL FLOW ANALYSIS:
Jumps: 221
Calls: 101
Branches: 246
Loops: 116
Loop Structures:
  $246 -> $17E (backward jump)
  $2F0 -> $154 (backward jump)
  $342 -> $329 (backward jump)
  $35E -> $1B7 (backward jump)
  $37A -> $184 (backward jump)
  $3E6 -> $3DE (backward jump)
  $42A -> $208 (backward jump)
  $44E -> $265 (backward jump)
  $46E -> $2C0 (backward jump)
  $4E6 -> $0F9 (backward jump)
  $4EE -> $3C1 (backward jump)
  $50E -> $1DF (backward jump)
  $522 -> $1A6 (backward jump)
  $5F6 -> $2D6 (backward jump)
  $5FA -> $535 (backward jump)
  $606 -> $1D2 (backward jump)
  $614 -> $4B7 (backward jump)
  $634 -> $03D (backward jump)
  $67E -> $373 (backward jump)
  $6B8 -> $5FF (backward jump)
  $6C2 -> $2CE (backward jump)
  $6F4 -> $40D (backward jump)
  $750 -> $03A (backward jump)
  $756 -> $596 (backward jump)
  $762 -> $2FF (backward jump)
  $764 -> $745 (backward jump)
  $79E -> $3C8 (backward jump)
  $7AE -> $70A (backward jump)
  $7BE -> $1D0 (backward jump)
  $7C2 -> $090 (backward jump)
  $7D2 -> $0D7 (backward jump)
  $7F8 -> $0BD (backward jump)
  $81E -> $7A1 (backward jump)
  $86C -> $0FA (backward jump)
  $870 -> $440 (backward jump)
  $8A2 -> $741 (backward jump)
  $8B4 -> $6A1 (backward jump)
  $8C0 -> $015 (backward jump)
  $8D4 -> $505 (backward jump)
  $912 -> $634 (backward jump)
  $936 -> $0CC (backward jump)
  $986 -> $904 (backward jump)
  $98A -> $2BA (backward jump)
  $998 -> $360 (backward jump)
  $9AE -> $1C9 (backward jump)
  $9E8 -> $5EE (backward jump)
  $9F0 -> $3C1 (backward jump)
  $A24 -> $6C8 (backward jump)
  $A26 -> $204 (backward jump)
  $A34 -> $462 (backward jump)
  $A54 -> $20F (backward jump)
  $A7A -> $943 (backward jump)
  $A8C -> $386 (backward jump)
  $A94 -> $6A1 (backward jump)
  $A96 -> $65C (backward jump)
  $AA8 -> $5A2 (backward jump)
  $ABA -> $531 (backward jump)
  $AD4 -> $576 (backward jump)
  $AE8 -> $40C (backward jump)
  $B10 -> $58D (backward jump)
  $B1E -> $0D9 (backward jump)
  $B48 -> $4BE (backward jump)
  $B50 -> $A7B (backward jump)
  $B6C -> $150 (backward jump)
  $B7C -> $A32 (backward jump)
  $B94 -> $8AB (backward jump)
  $BBE -> $6B2 (backward jump)
  $C0A -> $3F2 (backward jump)
  $C16 -> $A92 (backward jump)
  $C18 -> $5E8 (backward jump)
  $C2C -> $B12 (backward jump)
  $C58 -> $288 (backward jump)
  $C72 -> $5B2 (backward jump)
  $C7A -> $C74 (backward jump)
  $C82 -> $0EB (backward jump)
  $C90 -> $25B (backward jump)
  $C96 -> $120 (backward jump)
  $CB0 -> $31A (backward jump)
  $CB6 -> $5E6 (backward jump)
  $CCE -> $49B (backward jump)
  $CD0 -> $6F6 (backward jump)
  $CD4 -> $3D9 (backward jump)
  $D46 -> $9A9 (backward jump)
  $D48 -> $AC6 (backward jump)
  $D56 -> $494 (backward jump)
  $D96 -> $510 (backward jump)
  $DA6 -> $4C4 (backward jump)
  $DC2 -> $15C (backward jump)
  $DCE -> $866 (backward jump)
  $DD0 -> $4D3 (backward jump)
  $DF4 -> $8C3 (backward jump)
  $DF6 -> $5B3 (backward jump)
  $E08 -> $D3D (backward jump)
  $E16 -> $C45 (backward jump)
  $E1C -> $726 (backward jump)
  $E50 -> $2E1 (backward jump)
  $E52 -> $AF5 (backward jump)
  $E82 -> $DB8 (backward jump)
  $EA0 -> $805 (backward jump)
  $EC8 -> $1BB (backward jump)
  $ED0 -> $DEE (backward jump)
  $EE2 -> $D22 (backward jump)
  $EF2 -> $ADB (backward jump)
  $EF8 -> $8A5 (backward jump)
  $EFC -> $A4A (backward jump)
  $F0A -> $3AF (backward jump)
  $F26 -> $CBD (backward jump)
  $F34 -> $7AB (backward jump)
  $F72 -> $8C7 (backward jump)
  $F74 -> $8A0 (backward jump)
  $F7C -> $E73 (backward jump)
  $F88 -> $C55 (backward jump)
  $FAA -> $B6D (backward jump)
  $FB2 -> $22E (backward jump)
  $FDC -> $6CB (backward jump)
  $FF2 -> $B91 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $7760   ADD      V7, #60         ; Add 96 to V7
$202    $F8D0   UNKNOWN  F8D0            ; Unknown Fxxx instruction
$204    $EC1C   UNKNOWN  $EC1C           ; Unknown Exxx instruction
$206    $3924   SE       V9, #24         ; Skip if V9 == 36
$208    $1D0D   JP       $D0D            ; Jump to D0D
$20A    $CC7B   RND      VC, #7B         ; VC = random & 7B
$20C    $B562   JP       V0, $562        ; Jump to V0 + 562
$20E    $A56F   LD       I, $56F         ; Load 56F into I
$210    $F74F   UNKNOWN  F74F            ; Unknown Fxxx instruction
$212    $7C05   ADD      VC, #05         ; Add 5 to VC
$214    $27A8   CALL     $7A8            ; Call subroutine at 7A8
$216    $48F4   SNE      V8, #F4         ; Skip if V8 != 244
$218    $6D68   LD       VD, #68         ; Load 104 into VD
$21A    $B406   JP       V0, $406        ; Jump to V0 + 406
$21C    $5E0C   UNKNOWN  $5E0C           ; Unknown 5xxx instruction
$21E    $A25A   LD       I, $25A         ; Load 25A into I
$220    $0437   SYS      $437            ; System call to 437
$222    $678E   LD       V7, #8E         ; Load 142 into V7
$224    $7826   ADD      V8, #26         ; Add 38 to V8
$226    $B71E   JP       V0, $71E        ; Jump to V0 + 71E
$228    $56F5   UNKNOWN  $56F5           ; Unknown 5xxx instruction
$22A    $FE00   UNKNOWN  FE00            ; Unknown Fxxx instruction
$22C    $1DE1   JP       $DE1            ; Jump to DE1
$22E    $9008   UNKNOWN  $9008           ; Unknown 9xxx instruction
$230    $950A   UNKNOWN  $950A           ; Unknown 9xxx instruction
$232    $7892   ADD      V8, #92         ; Add 146 to V8
$234    $4911   SNE      V9, #11         ; Skip if V9 != 17
$236    $BB1A   JP       V0, $B1A        ; Jump to V0 + B1A
$238    $B8E6   JP       V0, $8E6        ; Jump to V0 + 8E6
$23A    $5FE0   SE       VF, VE          ; Skip if VF == VE
$23C    $7FCC   ADD      VF, #CC         ; Add 204 to VF
$23E    $8A29   UNKNOWN  8A29            ; Unknown 8xxx instruction
$240    $AC98   LD       I, $C98         ; Load C98 into I
$242    $4750   SNE      V7, #50         ; Skip if V7 != 80
$244    $FE06   UNKNOWN  FE06            ; Unknown Fxxx instruction
$246    $117E   JP       $17E            ; Jump to 17E
$248    $0FD1   SYS      $FD1            ; System call to FD1
$24A    $9105   UNKNOWN  $9105           ; Unknown 9xxx instruction
$24C    $A2A1   LD       I, $2A1         ; Load 2A1 into I
$24E    $4CAC   SNE      VC, #AC         ; Skip if VC != 172
$250    $B4B1   JP       V0, $4B1        ; Jump to V0 + 4B1
$252    $9B8E   UNKNOWN  $9B8E           ; Unknown 9xxx instruction
$254    $F348   UNKNOWN  F348            ; Unknown Fxxx instruction
$256    $977B   UNKNOWN  $977B           ; Unknown 9xxx instruction
$258    $4DDC   SNE      VD, #DC         ; Skip if VD != 220
$25A    $011D   SYS      $11D            ; System call to 11D
$25C    $3FF6   SE       VF, #F6         ; Skip if VF == 246
$25E    $D8D6   DRW      V8, VD, #6      ; Draw 6-byte sprite at V8, VD
$260    $33DA   SE       V3, #DA         ; Skip if V3 == 218
$262    $92BE   UNKNOWN  $92BE           ; Unknown 9xxx instruction
$264    $FFDB   UNKNOWN  FFDB            ; Unknown Fxxx instruction
$266    $9FD0   SNE      VF, VD          ; Skip if VF != VD
$268    $E7E6   UNKNOWN  $E7E6           ; Unknown Exxx instruction
$26A    $480C   SNE      V8, #0C         ; Skip if V8 != 12
$26C    $F49F   UNKNOWN  F49F            ; Unknown Fxxx instruction
$26E    $15D0   JP       $5D0            ; Jump to 5D0
$270    $ACC3   LD       I, $CC3         ; Load CC3 into I
$272    $54CD   UNKNOWN  $54CD           ; Unknown 5xxx instruction
$274    $18BD   JP       $8BD            ; Jump to 8BD
$276    $0F13   SYS      $F13            ; System call to F13
$278    $56E9   UNKNOWN  $56E9           ; Unknown 5xxx instruction
$27A    $80F7   SUBN     V0, VF          ; V0 = VF - V0, VF = !borrow
$27C    $C6BB   RND      V6, #BB         ; V6 = random & BB
$27E    $F4E6   UNKNOWN  F4E6            ; Unknown Fxxx instruction
$280    $391B   SE       V9, #1B         ; Skip if V9 == 27
$282    $B8DF   JP       V0, $8DF        ; Jump to V0 + 8DF
$284    $D255   DRW      V2, V5, #5      ; Draw 5-byte sprite at V2, V5
$286    $D80B   DRW      V8, V0, #B      ; Draw 11-byte sprite at V8, V0
$288    $B69A   JP       V0, $69A        ; Jump to V0 + 69A
$28A    $2003   CALL     $003            ; Call subroutine at 003
$28C    $DAC0   DRW      VA, VC, #0      ; Draw 0-byte sprite at VA, VC
$28E    $B5D0   JP       V0, $5D0        ; Jump to V0 + 5D0
$290    $561D   UNKNOWN  $561D           ; Unknown 5xxx instruction
$292    $E091   UNKNOWN  $E091           ; Unknown Exxx instruction
$294    $39F0   SE       V9, #F0         ; Skip if V9 == 240
$296    $A0C6   LD       I, $0C6         ; Load 0C6 into I
$298    $F89E   UNKNOWN  F89E            ; Unknown Fxxx instruction
$29A    $E5A6   UNKNOWN  $E5A6           ; Unknown Exxx instruction
$29C    $F4E3   UNKNOWN  F4E3            ; Unknown Fxxx instruction
$29E    $9942   UNKNOWN  $9942           ; Unknown 9xxx instruction
$2A0    $3944   SE       V9, #44         ; Skip if V9 == 68
$2A2    $FC7C   UNKNOWN  FC7C            ; Unknown Fxxx instruction
$2A4    $5137   UNKNOWN  $5137           ; Unknown 5xxx instruction
$2A6    $5F8D   UNKNOWN  $5F8D           ; Unknown 5xxx instruction
$2A8    $441E   SNE      V4, #1E         ; Skip if V4 != 30
$2AA    $A872   LD       I, $872         ; Load 872 into I
$2AC    $B818   JP       V0, $818        ; Jump to V0 + 818
$2AE    $D8A4   DRW      V8, VA, #4      ; Draw 4-byte sprite at V8, VA
$2B0    $E539   UNKNOWN  $E539           ; Unknown Exxx instruction
$2B2    $2B4A   CALL     $B4A            ; Call subroutine at B4A
$2B4    $9680   SNE      V6, V8          ; Skip if V6 != V8
$2B6    $BAC1   JP       V0, $AC1        ; Jump to V0 + AC1
$2B8    $5C4D   UNKNOWN  $5C4D           ; Unknown 5xxx instruction
$2BA    $3237   SE       V2, #37         ; Skip if V2 == 55
$2BC    $D3F8   DRW      V3, VF, #8      ; Draw 8-byte sprite at V3, VF
$2BE    $BB51   JP       V0, $B51        ; Jump to V0 + B51
$2C0    $30E2   SE       V0, #E2         ; Skip if V0 == 226
$2C2    $F52E   UNKNOWN  F52E            ; Unknown Fxxx instruction
$2C4    $2B03   CALL     $B03            ; Call subroutine at B03
$2C6    $C907   RND      V9, #07         ; V9 = random & 07
$2C8    $7D6F   ADD      VD, #6F         ; Add 111 to VD
$2CA    $D009   DRW      V0, V0, #9      ; Draw 9-byte sprite at V0, V0
$2CC    $1F90   JP       $F90            ; Jump to F90
$2CE    $258E   CALL     $58E            ; Call subroutine at 58E
$2D0    $D04C   DRW      V0, V4, #C      ; Draw 12-byte sprite at V0, V4
$2D2    $3F0B   SE       VF, #0B         ; Skip if VF == 11
$2D4    $6EDB   LD       VE, #DB         ; Load 219 into VE
$2D6    $DFE4   DRW      VF, VE, #4      ; Draw 4-byte sprite at VF, VE
$2D8    $B688   JP       V0, $688        ; Jump to V0 + 688
$2DA    $6D81   LD       VD, #81         ; Load 129 into VD
$2DC    $92F0   SNE      V2, VF          ; Skip if V2 != VF
$2DE    $19C3   JP       $9C3            ; Jump to 9C3
$2E0    $0EA9   SYS      $EA9            ; System call to EA9
$2E2    $C83F   RND      V8, #3F         ; V8 = random & 3F
$2E4    $EE40   UNKNOWN  $EE40           ; Unknown Exxx instruction
$2E6    $1814   JP       $814            ; Jump to 814
$2E8    $3126   SE       V1, #26         ; Skip if V1 == 38
$2EA    $314B   SE       V1, #4B         ; Skip if V1 == 75
$2EC    $D0E9   DRW      V0, VE, #9      ; Draw 9-byte sprite at V0, VE
$2EE    $C465   RND      V4, #65         ; V4 = random & 65
$2F0    $B154   JP       V0, $154        ; Jump to V0 + 154
$2F2    $B97D   JP       V0, $97D        ; Jump to V0 + 97D
$2F4    $C23F   RND      V2, #3F         ; V2 = random & 3F
$2F6    $4902   SNE      V9, #02         ; Skip if V9 != 2
$2F8    $F045   UNKNOWN  F045            ; Unknown Fxxx instruction
$2FA    $25C0   CALL     $5C0            ; Call subroutine at 5C0
$2FC    $9299   UNKNOWN  $9299           ; Unknown 9xxx instruction
$2FE    $5B28   UNKNOWN  $5B28           ; Unknown 5xxx instruction
$300    $DEDE   DRW      VE, VD, #E      ; Draw 14-byte sprite at VE, VD
$302    $DC59   DRW      VC, V5, #9      ; Draw 9-byte sprite at VC, V5
$304    $3319   SE       V3, #19         ; Skip if V3 == 25
$306    $0101   SYS      $101            ; System call to 101
$308    $08C1   SYS      $8C1            ; System call to 8C1
$30A    $2957   CALL     $957            ; Call subroutine at 957
$30C    $BFC4   JP       V0, $FC4        ; Jump to V0 + FC4
$30E    $CB9F   RND      VB, #9F         ; VB = random & 9F
$310    $0D96   SYS      $D96            ; System call to D96
$312    $2B4E   CALL     $B4E            ; Call subroutine at B4E
$314    $C0E2   RND      V0, #E2         ; V0 = random & E2
$316    $F0DE   UNKNOWN  F0DE            ; Unknown Fxxx instruction
$318    $8156   SHR      V1              ; V1 >>= 1, VF = LSB
$31A    $33F7   SE       V3, #F7         ; Skip if V3 == 247
$31C    $5F9B   UNKNOWN  $5F9B           ; Unknown 5xxx instruction
$31E    $628B   LD       V2, #8B         ; Load 139 into V2
$320    $DD3F   DRW      VD, V3, #F      ; Draw 15-byte sprite at VD, V3
$322    $78C1   ADD      V8, #C1         ; Add 193 to V8
$324    $A9BC   LD       I, $9BC         ; Load 9BC into I
$326    $7ECA   ADD      VE, #CA         ; Add 202 to VE
$328    $2E67   CALL     $E67            ; Call subroutine at E67
$32A    $0BE3   SYS      $BE3            ; System call to BE3
$32C    $444B   SNE      V4, #4B         ; Skip if V4 != 75
$32E    $4A3B   SNE      VA, #3B         ; Skip if VA != 59
$330    $20A4   CALL     $0A4            ; Call subroutine at 0A4
$332    $5A54   UNKNOWN  $5A54           ; Unknown 5xxx instruction
$334    $9D76   UNKNOWN  $9D76           ; Unknown 9xxx instruction
$336    $215C   CALL     $15C            ; Call subroutine at 15C
$338    $8540   LD       V5, V4          ; V5 = V4
$33A    $5AE7   UNKNOWN  $5AE7           ; Unknown 5xxx instruction
$33C    $4E10   SNE      VE, #10         ; Skip if VE != 16
$33E    $EC4D   UNKNOWN  $EC4D           ; Unknown Exxx instruction
$340    $4A10   SNE      VA, #10         ; Skip if VA != 16
$342    $B329   JP       V0, $329        ; Jump to V0 + 329
$344    $6137   LD       V1, #37         ; Load 55 into V1
$346    $E376   UNKNOWN  $E376           ; Unknown Exxx instruction
$348    $C3E4   RND      V3, #E4         ; V3 = random & E4
$34A    $60CA   LD       V0, #CA         ; Load 202 into V0
$34C    $7810   ADD      V8, #10         ; Add 16 to V8
$34E    $F762   UNKNOWN  F762            ; Unknown Fxxx instruction
$350    $C50B   RND      V5, #0B         ; V5 = random & 0B
$352    $6EB3   LD       VE, #B3         ; Load 179 into VE
$354    $663F   LD       V6, #3F         ; Load 63 into V6
$356    $FBA9   UNKNOWN  FBA9            ; Unknown Fxxx instruction
$358    $9548   UNKNOWN  $9548           ; Unknown 9xxx instruction
$35A    $C650   RND      V6, #50         ; V6 = random & 50
$35C    $096B   SYS      $96B            ; System call to 96B
$35E    $11B7   JP       $1B7            ; Jump to 1B7
$360    $96B1   UNKNOWN  $96B1           ; Unknown 9xxx instruction
$362    $F7C0   UNKNOWN  F7C0            ; Unknown Fxxx instruction
$364    $C23B   RND      V2, #3B         ; V2 = random & 3B
$366    $87A8   UNKNOWN  87A8            ; Unknown 8xxx instruction
$368    $BEE5   JP       V0, $EE5        ; Jump to V0 + EE5
$36A    $7D2B   ADD      VD, #2B         ; Add 43 to VD
$36C    $BEE7   JP       V0, $EE7        ; Jump to V0 + EE7
$36E    $01E5   SYS      $1E5            ; System call to 1E5
$370    $4E9F   SNE      VE, #9F         ; Skip if VE != 159
$372    $3054   SE       V0, #54         ; Skip if V0 == 84
$374    $D353   DRW      V3, V5, #3      ; Draw 3-byte sprite at V3, V5
$376    $7350   ADD      V3, #50         ; Add 80 to V3
$378    $0F4D   SYS      $F4D            ; System call to F4D
$37A    $1184   JP       $184            ; Jump to 184
$37C    $18A9   JP       $8A9            ; Jump to 8A9
$37E    $AF9F   LD       I, $F9F         ; Load F9F into I
$380    $8A4F   UNKNOWN  8A4F            ; Unknown 8xxx instruction
$382    $13C8   JP       $3C8            ; Jump to 3C8
$384    $A4A3   LD       I, $4A3         ; Load 4A3 into I
$386    $3FA4   SE       VF, #A4         ; Skip if VF == 164
$388    $4331   SNE      V3, #31         ; Skip if V3 != 49
$38A    $3082   SE       V0, #82         ; Skip if V0 == 130
$38C    $BC68   JP       V0, $C68        ; Jump to V0 + C68
$38E    $AB23   LD       I, $B23         ; Load B23 into I
$390    $3112   SE       V1, #12         ; Skip if V1 == 18
$392    $7C5A   ADD      VC, #5A         ; Add 90 to VC
$394    $701E   ADD      V0, #1E         ; Add 30 to V0
$396    $AAEB   LD       I, $AEB         ; Load AEB into I
$398    $16A8   JP       $6A8            ; Jump to 6A8
$39A    $EB8A   UNKNOWN  $EB8A           ; Unknown Exxx instruction
$39C    $991B   UNKNOWN  $991B           ; Unknown 9xxx instruction
$39E    $3F72   SE       VF, #72         ; Skip if VF == 114
$3A0    $42DE   SNE      V2, #DE         ; Skip if V2 != 222
$3A2    $4500   SNE      V5, #00         ; Skip if V5 != 0
$3A4    $7566   ADD      V5, #66         ; Add 102 to V5
$3A6    $260F   CALL     $60F            ; Call subroutine at 60F
$3A8    $56E9   UNKNOWN  $56E9           ; Unknown 5xxx instruction
$3AA    $7268   ADD      V2, #68         ; Add 104 to V2
$3AC    $A684   LD       I, $684         ; Load 684 into I
$3AE    $6E96   LD       VE, #96         ; Load 150 into VE
$3B0    $AE29   LD       I, $E29         ; Load E29 into I
$3B2    $E19F   UNKNOWN  $E19F           ; Unknown Exxx instruction
$3B4    $3D65   SE       VD, #65         ; Skip if VD == 101
$3B6    $49AC   SNE      V9, #AC         ; Skip if V9 != 172
$3B8    $E39C   UNKNOWN  $E39C           ; Unknown Exxx instruction
$3BA    $95CE   UNKNOWN  $95CE           ; Unknown 9xxx instruction
$3BC    $43F6   SNE      V3, #F6         ; Skip if V3 != 246
$3BE    $7305   ADD      V3, #05         ; Add 5 to V3
$3C0    $5823   UNKNOWN  $5823           ; Unknown 5xxx instruction
$3C2    $C648   RND      V6, #48         ; V6 = random & 48
$3C4    $7C19   ADD      VC, #19         ; Add 25 to VC
$3C6    $279E   CALL     $79E            ; Call subroutine at 79E
$3C8    $6CA3   LD       VC, #A3         ; Load 163 into VC
$3CA    $EE2E   UNKNOWN  $EE2E           ; Unknown Exxx instruction
$3CC    $A6BA   LD       I, $6BA         ; Load 6BA into I
$3CE    $B93B   JP       V0, $93B        ; Jump to V0 + 93B
$3D0    $CFC4   RND      VF, #C4         ; VF = random & C4
$3D2    $32BB   SE       V2, #BB         ; Skip if V2 == 187
$3D4    $4585   SNE      V5, #85         ; Skip if V5 != 133
$3D6    $F115   LD       DT, V1          ; Delay timer = V1
$3D8    $FD33   LD       B, VD           ; Store BCD of VD at I, I+1, I+2
$3DA    $8FD7   SUBN     VF, VD          ; VF = VD - VF, VF = !borrow
$3DC    $7ABD   ADD      VA, #BD         ; Add 189 to VA
$3DE    $BC92   JP       V0, $C92        ; Jump to V0 + C92
$3E0    $B46A   JP       V0, $46A        ; Jump to V0 + 46A
$3E2    $EA04   UNKNOWN  $EA04           ; Unknown Exxx instruction
$3E4    $BAA9   JP       V0, $AA9        ; Jump to V0 + AA9
$3E6    $13DE   JP       $3DE            ; Jump to 3DE
$3E8    $FE02   UNKNOWN  FE02            ; Unknown Fxxx instruction
$3EA    $8279   UNKNOWN  8279            ; Unknown 8xxx instruction
$3EC    $73EB   ADD      V3, #EB         ; Add 235 to V3
$3EE    $9699   UNKNOWN  $9699           ; Unknown 9xxx instruction
$3F0    $56C6   UNKNOWN  $56C6           ; Unknown 5xxx instruction
$3F2    $25AC   CALL     $5AC            ; Call subroutine at 5AC
$3F4    $BA48   JP       V0, $A48        ; Jump to V0 + A48
$3F6    $61E5   LD       V1, #E5         ; Load 229 into V1
$3F8    $C23C   RND      V2, #3C         ; V2 = random & 3C
$3FA    $481C   SNE      V8, #1C         ; Skip if V8 != 28
$3FC    $D9E1   DRW      V9, VE, #1      ; Draw 1-byte sprite at V9, VE
$3FE    $A14F   LD       I, $14F         ; Load 14F into I
$400    $F8C2   UNKNOWN  F8C2            ; Unknown Fxxx instruction
$402    $E100   UNKNOWN  $E100           ; Unknown Exxx instruction
$404    $DA98   DRW      VA, V9, #8      ; Draw 8-byte sprite at VA, V9
$406    $3D85   SE       VD, #85         ; Skip if VD == 133
$408    $15AE   JP       $5AE            ; Jump to 5AE
$40A    $6415   LD       V4, #15         ; Load 21 into V4
$40C    $C55E   RND      V5, #5E         ; V5 = random & 5E
$40E    $A70F   LD       I, $70F         ; Load 70F into I
$410    $9FB7   UNKNOWN  $9FB7           ; Unknown 9xxx instruction
$412    $A04D   LD       I, $04D         ; Load 04D into I
$414    $A03F   LD       I, $03F         ; Load 03F into I
$416    $A93B   LD       I, $93B         ; Load 93B into I
$418    $9A1F   UNKNOWN  $9A1F           ; Unknown 9xxx instruction
$41A    $6DDF   LD       VD, #DF         ; Load 223 into VD
$41C    $6D98   LD       VD, #98         ; Load 152 into VD
$41E    $0D69   SYS      $D69            ; System call to D69
$420    $3F9A   SE       VF, #9A         ; Skip if VF == 154
$422    $C469   RND      V4, #69         ; V4 = random & 69
$424    $AD03   LD       I, $D03         ; Load D03 into I
$426    $5AF8   UNKNOWN  $5AF8           ; Unknown 5xxx instruction
$428    $75BF   ADD      V5, #BF         ; Add 191 to V5
$42A    $B208   JP       V0, $208        ; Jump to V0 + 208
$42C    $42F5   SNE      V2, #F5         ; Skip if V2 != 245
$42E    $F2FD   UNKNOWN  F2FD            ; Unknown Fxxx instruction
$430    $65E8   LD       V5, #E8         ; Load 232 into V5
$432    $A810   LD       I, $810         ; Load 810 into I
$434    $E049   UNKNOWN  $E049           ; Unknown Exxx instruction
$436    $6F63   LD       VF, #63         ; Load 99 into VF
$438    $D9B8   DRW      V9, VB, #8      ; Draw 8-byte sprite at V9, VB
$43A    $E84D   UNKNOWN  $E84D           ; Unknown Exxx instruction
$43C    $B799   JP       V0, $799        ; Jump to V0 + 799
$43E    $FE6F   UNKNOWN  FE6F            ; Unknown Fxxx instruction
$440    $A16B   LD       I, $16B         ; Load 16B into I
$442    $D3F5   DRW      V3, VF, #5      ; Draw 5-byte sprite at V3, VF
$444    $CA19   RND      VA, #19         ; VA = random & 19
$446    $A7B3   LD       I, $7B3         ; Load 7B3 into I
$448    $C196   RND      V1, #96         ; V1 = random & 96
$44A    $C64C   RND      V6, #4C         ; V6 = random & 4C
$44C    $37F5   SE       V7, #F5         ; Skip if V7 == 245
$44E    $B265   JP       V0, $265        ; Jump to V0 + 265
$450    $F588   UNKNOWN  F588            ; Unknown Fxxx instruction
$452    $BC35   JP       V0, $C35        ; Jump to V0 + C35
$454    $60D9   LD       V0, #D9         ; Load 217 into V0
$456    $CA59   RND      VA, #59         ; VA = random & 59
$458    $54D4   UNKNOWN  $54D4           ; Unknown 5xxx instruction
$45A    $0E8F   SYS      $E8F            ; System call to E8F
$45C    $4047   SNE      V0, #47         ; Skip if V0 != 71
$45E    $7D28   ADD      VD, #28         ; Add 40 to VD
$460    $E291   UNKNOWN  $E291           ; Unknown Exxx instruction
$462    $AFA5   LD       I, $FA5         ; Load FA5 into I
$464    $C2EE   RND      V2, #EE         ; V2 = random & EE
$466    $6578   LD       V5, #78         ; Load 120 into V5
$468    $FC4D   UNKNOWN  FC4D            ; Unknown Fxxx instruction
$46A    $32FE   SE       V2, #FE         ; Skip if V2 == 254
$46C    $69F4   LD       V9, #F4         ; Load 244 into V9
$46E    $12C0   JP       $2C0            ; Jump to 2C0
$470    $55C5   UNKNOWN  $55C5           ; Unknown 5xxx instruction
$472    $2DCF   CALL     $DCF            ; Call subroutine at DCF
$474    $7F4E   ADD      VF, #4E         ; Add 78 to VF
$476    $4B0E   SNE      VB, #0E         ; Skip if VB != 14
$478    $0841   SYS      $841            ; System call to 841
$47A    $87AA   UNKNOWN  87AA            ; Unknown 8xxx instruction
$47C    $8606   SHR      V6              ; V6 >>= 1, VF = LSB
$47E    $90AC   UNKNOWN  $90AC           ; Unknown 9xxx instruction
$480    $19B8   JP       $9B8            ; Jump to 9B8
$482    $3726   SE       V7, #26         ; Skip if V7 == 38
$484    $5A6A   UNKNOWN  $5A6A           ; Unknown 5xxx instruction
$486    $DEED   DRW      VE, VE, #D      ; Draw 13-byte sprite at VE, VE
$488    $520A   UNKNOWN  $520A           ; Unknown 5xxx instruction
$48A    $1BA4   JP       $BA4            ; Jump to BA4
$48C    $28F4   CALL     $8F4            ; Call subroutine at 8F4
$48E    $E38F   UNKNOWN  $E38F           ; Unknown Exxx instruction
$490    $2861   CALL     $861            ; Call subroutine at 861
$492    $4E67   SNE      VE, #67         ; Skip if VE != 103
$494    $D38D   DRW      V3, V8, #D      ; Draw 13-byte sprite at V3, V8
$496    $0A1E   SYS      $A1E            ; System call to A1E
$498    $4548   SNE      V5, #48         ; Skip if V5 != 72
$49A    $5FED   UNKNOWN  $5FED           ; Unknown 5xxx instruction
$49C    $F290   UNKNOWN  F290            ; Unknown Fxxx instruction
$49E    $4B6D   SNE      VB, #6D         ; Skip if VB != 109
$4A0    $3FA2   SE       VF, #A2         ; Skip if VF == 162
$4A2    $FFBA   UNKNOWN  FFBA            ; Unknown Fxxx instruction
$4A4    $36C4   SE       V6, #C4         ; Skip if V6 == 196
$4A6    $D5BC   DRW      V5, VB, #C      ; Draw 12-byte sprite at V5, VB
$4A8    $921F   UNKNOWN  $921F           ; Unknown 9xxx instruction
$4AA    $A4AF   LD       I, $4AF         ; Load 4AF into I
$4AC    $A7AA   LD       I, $7AA         ; Load 7AA into I
$4AE    $277C   CALL     $77C            ; Call subroutine at 77C
$4B0    $52AD   UNKNOWN  $52AD           ; Unknown 5xxx instruction
$4B2    $563E   UNKNOWN  $563E           ; Unknown 5xxx instruction
$4B4    $2259   CALL     $259            ; Call subroutine at 259
$4B6    $587F   UNKNOWN  $587F           ; Unknown 5xxx instruction
$4B8    $D48E   DRW      V4, V8, #E      ; Draw 14-byte sprite at V4, V8
$4BA    $8D8A   UNKNOWN  8D8A            ; Unknown 8xxx instruction
$4BC    $E766   UNKNOWN  $E766           ; Unknown Exxx instruction
$4BE    $733A   ADD      V3, #3A         ; Add 58 to V3
$4C0    $8E4F   UNKNOWN  8E4F            ; Unknown 8xxx instruction
$4C2    $5920   SE       V9, V2          ; Skip if V9 == V2
$4C4    $82FE   SHL      V2              ; V2 <<= 1, VF = MSB
$4C6    $4CB4   SNE      VC, #B4         ; Skip if VC != 180
$4C8    $B7D5   JP       V0, $7D5        ; Jump to V0 + 7D5
$4CA    $C5C7   RND      V5, #C7         ; V5 = random & C7
$4CC    $C51A   RND      V5, #1A         ; V5 = random & 1A
$4CE    $1B0D   JP       $B0D            ; Jump to B0D
$4D0    $68AD   LD       V8, #AD         ; Load 173 into V8
$4D2    $68CC   LD       V8, #CC         ; Load 204 into V8
$4D4    $17CB   JP       $7CB            ; Jump to 7CB
$4D6    $615F   LD       V1, #5F         ; Load 95 into V1
$4D8    $FFF8   UNKNOWN  FFF8            ; Unknown Fxxx instruction
$4DA    $C218   RND      V2, #18         ; V2 = random & 18
$4DC    $923B   UNKNOWN  $923B           ; Unknown 9xxx instruction
$4DE    $46AE   SNE      V6, #AE         ; Skip if V6 != 174
$4E0    $834A   UNKNOWN  834A            ; Unknown 8xxx instruction
$4E2    $E719   UNKNOWN  $E719           ; Unknown Exxx instruction
$4E4    $2761   CALL     $761            ; Call subroutine at 761
$4E6    $10F9   JP       $0F9            ; Jump to 0F9
$4E8    $C91E   RND      V9, #1E         ; V9 = random & 1E
$4EA    $7D78   ADD      VD, #78         ; Add 120 to VD
$4EC    $7DD9   ADD      VD, #D9         ; Add 217 to VD
$4EE    $13C1   JP       $3C1            ; Jump to 3C1
$4F0    $00CA   SYS      $0CA            ; System call to 0CA
$4F2    $B5A4   JP       V0, $5A4        ; Jump to V0 + 5A4
$4F4    $2B78   CALL     $B78            ; Call subroutine at B78
$4F6    $F9BA   UNKNOWN  F9BA            ; Unknown Fxxx instruction
$4F8    $FD03   UNKNOWN  FD03            ; Unknown Fxxx instruction
$4FA    $264A   CALL     $64A            ; Call subroutine at 64A
$4FC    $62CC   LD       V2, #CC         ; Load 204 into V2
$4FE    $164B   JP       $64B            ; Jump to 64B
$500    $B8D4   JP       V0, $8D4        ; Jump to V0 + 8D4
$502    $720D   ADD      V2, #0D         ; Add 13 to V2
$504    $AEEA   LD       I, $EEA         ; Load EEA into I
$506    $00B6   SYS      $0B6            ; System call to 0B6
$508    $0B8A   SYS      $B8A            ; System call to B8A
$50A    $C6E4   RND      V6, #E4         ; V6 = random & E4
$50C    $C816   RND      V8, #16         ; V8 = random & 16
$50E    $11DF   JP       $1DF            ; Jump to 1DF
$510    $C58B   RND      V5, #8B         ; V5 = random & 8B
$512    $6847   LD       V8, #47         ; Load 71 into V8
$514    $6055   LD       V0, #55         ; Load 85 into V0
$516    $5F04   UNKNOWN  $5F04           ; Unknown 5xxx instruction
$518    $0AC6   SYS      $AC6            ; System call to AC6
$51A    $E54A   UNKNOWN  $E54A           ; Unknown Exxx instruction
$51C    $F751   UNKNOWN  F751            ; Unknown Fxxx instruction
$51E    $6758   LD       V7, #58         ; Load 88 into V7
$520    $EF84   UNKNOWN  $EF84           ; Unknown Exxx instruction
$522    $11A6   JP       $1A6            ; Jump to 1A6
$524    $2C62   CALL     $C62            ; Call subroutine at C62
$526    $9077   UNKNOWN  $9077           ; Unknown 9xxx instruction
$528    $050D   SYS      $50D            ; System call to 50D
$52A    $4768   SNE      V7, #68         ; Skip if V7 != 104
$52C    $72A8   ADD      V2, #A8         ; Add 168 to V2
$52E    $EE78   UNKNOWN  $EE78           ; Unknown Exxx instruction
$530    $96DC   UNKNOWN  $96DC           ; Unknown 9xxx instruction
$532    $789F   ADD      V8, #9F         ; Add 159 to V8
$534    $4D84   SNE      VD, #84         ; Skip if VD != 132
$536    $51FD   UNKNOWN  $51FD           ; Unknown 5xxx instruction
$538    $8DC8   UNKNOWN  8DC8            ; Unknown 8xxx instruction
$53A    $54B4   UNKNOWN  $54B4           ; Unknown 5xxx instruction
$53C    $EBD2   UNKNOWN  $EBD2           ; Unknown Exxx instruction
$53E    $B9E3   JP       V0, $9E3        ; Jump to V0 + 9E3
$540    $9C64   UNKNOWN  $9C64           ; Unknown 9xxx instruction
$542    $45F3   SNE      V5, #F3         ; Skip if V5 != 243
$544    $61B4   LD       V1, #B4         ; Load 180 into V1
$546    $285C   CALL     $85C            ; Call subroutine at 85C
$548    $C17A   RND      V1, #7A         ; V1 = random & 7A
$54A    $26F7   CALL     $6F7            ; Call subroutine at 6F7
$54C    $1578   JP       $578            ; Jump to 578
$54E    $E5F7   UNKNOWN  $E5F7           ; Unknown Exxx instruction
$550    $35EE   SE       V5, #EE         ; Skip if V5 == 238
$552    $55AC   UNKNOWN  $55AC           ; Unknown 5xxx instruction
$554    $EDEE   UNKNOWN  $EDEE           ; Unknown Exxx instruction
$556    $C0F9   RND      V0, #F9         ; V0 = random & F9
$558    $42CD   SNE      V2, #CD         ; Skip if V2 != 205
$55A    $9784   UNKNOWN  $9784           ; Unknown 9xxx instruction
$55C    $F9D0   UNKNOWN  F9D0            ; Unknown Fxxx instruction
$55E    $6D40   LD       VD, #40         ; Load 64 into VD
$560    $79FC   ADD      V9, #FC         ; Add 252 to V9
$562    $43A7   SNE      V3, #A7         ; Skip if V3 != 167
$564    $461B   SNE      V6, #1B         ; Skip if V6 != 27
$566    $D314   DRW      V3, V1, #4      ; Draw 4-byte sprite at V3, V1
$568    $3B9F   SE       VB, #9F         ; Skip if VB == 159
$56A    $F9C0   UNKNOWN  F9C0            ; Unknown Fxxx instruction
$56C    $C60D   RND      V6, #0D         ; V6 = random & 0D
$56E    $381E   SE       V8, #1E         ; Skip if V8 == 30
$570    $CB3F   RND      VB, #3F         ; VB = random & 3F
$572    $D6B0   DRW      V6, VB, #0      ; Draw 0-byte sprite at V6, VB
$574    $2889   CALL     $889            ; Call subroutine at 889
$576    $AD4C   LD       I, $D4C         ; Load D4C into I
$578    $74AF   ADD      V4, #AF         ; Add 175 to V4
$57A    $B6B2   JP       V0, $6B2        ; Jump to V0 + 6B2
$57C    $E190   UNKNOWN  $E190           ; Unknown Exxx instruction
$57E    $EEA2   UNKNOWN  $EEA2           ; Unknown Exxx instruction
$580    $8697   SUBN     V6, V9          ; V6 = V9 - V6, VF = !borrow
$582    $6A2D   LD       VA, #2D         ; Load 45 into VA
$584    $877F   UNKNOWN  877F            ; Unknown 8xxx instruction
$586    $D479   DRW      V4, V7, #9      ; Draw 9-byte sprite at V4, V7
$588    $3EFE   SE       VE, #FE         ; Skip if VE == 254
$58A    $CED7   RND      VE, #D7         ; VE = random & D7
$58C    $5EEA   UNKNOWN  $5EEA           ; Unknown 5xxx instruction
$58E    $6F9C   LD       VF, #9C         ; Load 156 into VF
$590    $5B55   UNKNOWN  $5B55           ; Unknown 5xxx instruction
$592    $BB1D   JP       V0, $B1D        ; Jump to V0 + B1D
$594    $ACFE   LD       I, $CFE         ; Load CFE into I
$596    $0B4D   SYS      $B4D            ; System call to B4D
$598    $D139   DRW      V1, V3, #9      ; Draw 9-byte sprite at V1, V3
$59A    $D118   DRW      V1, V1, #8      ; Draw 8-byte sprite at V1, V1
$59C    $36BB   SE       V6, #BB         ; Skip if V6 == 187
$59E    $CE2B   RND      VE, #2B         ; VE = random & 2B
$5A0    $AE74   LD       I, $E74         ; Load E74 into I
$5A2    $7E48   ADD      VE, #48         ; Add 72 to VE
$5A4    $63D6   LD       V3, #D6         ; Load 214 into V3
$5A6    $E194   UNKNOWN  $E194           ; Unknown Exxx instruction
$5A8    $2AAA   CALL     $AAA            ; Call subroutine at AAA
$5AA    $EEC1   UNKNOWN  $EEC1           ; Unknown Exxx instruction
$5AC    $5B8F   UNKNOWN  $5B8F           ; Unknown 5xxx instruction
$5AE    $A621   LD       I, $621         ; Load 621 into I
$5B0    $80C9   UNKNOWN  80C9            ; Unknown 8xxx instruction
$5B2    $C8A9   RND      V8, #A9         ; V8 = random & A9
$5B4    $C44D   RND      V4, #4D         ; V4 = random & 4D
$5B6    $FB13   UNKNOWN  FB13            ; Unknown Fxxx instruction
$5B8    $250F   CALL     $50F            ; Call subroutine at 50F
$5BA    $4766   SNE      V7, #66         ; Skip if V7 != 102
$5BC    $0E6F   SYS      $E6F            ; System call to E6F
$5BE    $E779   UNKNOWN  $E779           ; Unknown Exxx instruction
$5C0    $40B7   SNE      V0, #B7         ; Skip if V0 != 183
$5C2    $A7DA   LD       I, $7DA         ; Load 7DA into I
$5C4    $847B   UNKNOWN  847B            ; Unknown 8xxx instruction
$5C6    $F465   LD       V4, [I]         ; Load V0-V4 from I
$5C8    $5079   UNKNOWN  $5079           ; Unknown 5xxx instruction
$5CA    $F490   UNKNOWN  F490            ; Unknown Fxxx instruction
$5CC    $69E7   LD       V9, #E7         ; Load 231 into V9
$5CE    $B9A3   JP       V0, $9A3        ; Jump to V0 + 9A3
$5D0    $7307   ADD      V3, #07         ; Add 7 to V3
$5D2    $CCC5   RND      VC, #C5         ; VC = random & C5
$5D4    $D9EE   DRW      V9, VE, #E      ; Draw 14-byte sprite at V9, VE
$5D6    $5C8A   UNKNOWN  $5C8A           ; Unknown 5xxx instruction
$5D8    $81D4   ADD      V1, VD          ; V1 += VD, VF = carry
$5DA    $5C98   UNKNOWN  $5C98           ; Unknown 5xxx instruction
$5DC    $18D6   JP       $8D6            ; Jump to 8D6
$5DE    $0D42   SYS      $D42            ; System call to D42
$5E0    $F533   LD       B, V5           ; Store BCD of V5 at I, I+1, I+2
$5E2    $1BAB   JP       $BAB            ; Jump to BAB
$5E4    $2E50   CALL     $E50            ; Call subroutine at E50
$5E6    $5A86   UNKNOWN  $5A86           ; Unknown 5xxx instruction
$5E8    $0498   SYS      $498            ; System call to 498
$5EA    $A577   LD       I, $577         ; Load 577 into I
$5EC    $6D72   LD       VD, #72         ; Load 114 into VD
$5EE    $55F7   UNKNOWN  $55F7           ; Unknown 5xxx instruction
$5F0    $552E   UNKNOWN  $552E           ; Unknown 5xxx instruction
$5F2    $7D2B   ADD      VD, #2B         ; Add 43 to VD
$5F4    $2559   CALL     $559            ; Call subroutine at 559
$5F6    $12D6   JP       $2D6            ; Jump to 2D6
$5F8    $C756   RND      V7, #56         ; V7 = random & 56
$5FA    $1535   JP       $535            ; Jump to 535
$5FC    $B8AA   JP       V0, $8AA        ; Jump to V0 + 8AA
$5FE    $2FF9   CALL     $FF9            ; Call subroutine at FF9
$600    $E881   UNKNOWN  $E881           ; Unknown Exxx instruction
$602    $73EF   ADD      V3, #EF         ; Add 239 to V3
$604    $9A35   UNKNOWN  $9A35           ; Unknown 9xxx instruction
$606    $B1D2   JP       V0, $1D2        ; Jump to V0 + 1D2
$608    $7B8D   ADD      VB, #8D         ; Add 141 to VB
$60A    $FDE2   UNKNOWN  FDE2            ; Unknown Fxxx instruction
$60C    $F8BE   UNKNOWN  F8BE            ; Unknown Fxxx instruction
$60E    $622F   LD       V2, #2F         ; Load 47 into V2
$610    $FA45   UNKNOWN  FA45            ; Unknown Fxxx instruction
$612    $D70C   DRW      V7, V0, #C      ; Draw 12-byte sprite at V7, V0
$614    $B4B7   JP       V0, $4B7        ; Jump to V0 + 4B7
$616    $22DC   CALL     $2DC            ; Call subroutine at 2DC
$618    $FF5D   UNKNOWN  FF5D            ; Unknown Fxxx instruction
$61A    $C537   RND      V5, #37         ; V5 = random & 37
$61C    $FFAB   UNKNOWN  FFAB            ; Unknown Fxxx instruction
$61E    $F745   UNKNOWN  F745            ; Unknown Fxxx instruction
$620    $2586   CALL     $586            ; Call subroutine at 586
$622    $DC58   DRW      VC, V5, #8      ; Draw 8-byte sprite at VC, V5
$624    $924F   UNKNOWN  $924F           ; Unknown 9xxx instruction
$626    $94C8   UNKNOWN  $94C8           ; Unknown 9xxx instruction
$628    $488E   SNE      V8, #8E         ; Skip if V8 != 142
$62A    $022C   SYS      $22C            ; System call to 22C
$62C    $CF13   RND      VF, #13         ; VF = random & 13
$62E    $AEBD   LD       I, $EBD         ; Load EBD into I
$630    $75D2   ADD      V5, #D2         ; Add 210 to V5
$632    $A0AE   LD       I, $0AE         ; Load 0AE into I
$634    $B03D   JP       V0, $03D        ; Jump to V0 + 03D
$636    $EFCD   UNKNOWN  $EFCD           ; Unknown Exxx instruction
$638    $55C1   UNKNOWN  $55C1           ; Unknown 5xxx instruction
$63A    $C458   RND      V4, #58         ; V4 = random & 58
$63C    $03D5   SYS      $3D5            ; System call to 3D5
$63E    $8537   SUBN     V5, V3          ; V5 = V3 - V5, VF = !borrow
$640    $4FDF   SNE      VF, #DF         ; Skip if VF != 223
$642    $640E   LD       V4, #0E         ; Load 14 into V4
$644    $FA33   LD       B, VA           ; Store BCD of VA at I, I+1, I+2
$646    $A0F1   LD       I, $0F1         ; Load 0F1 into I
$648    $7C1B   ADD      VC, #1B         ; Add 27 to VC
$64A    $07E2   SYS      $7E2            ; System call to 7E2
$64C    $EEF3   UNKNOWN  $EEF3           ; Unknown Exxx instruction
$64E    $4C42   SNE      VC, #42         ; Skip if VC != 66
$650    $674F   LD       V7, #4F         ; Load 79 into V7
$652    $CE45   RND      VE, #45         ; VE = random & 45
$654    $7EB0   ADD      VE, #B0         ; Add 176 to VE
$656    $727A   ADD      V2, #7A         ; Add 122 to V2
$658    $EC3D   UNKNOWN  $EC3D           ; Unknown Exxx instruction
$65A    $812F   UNKNOWN  812F            ; Unknown 8xxx instruction
$65C    $9395   UNKNOWN  $9395           ; Unknown 9xxx instruction
$65E    $C46D   RND      V4, #6D         ; V4 = random & 6D
$660    $DCA5   DRW      VC, VA, #5      ; Draw 5-byte sprite at VC, VA
$662    $F2A9   UNKNOWN  F2A9            ; Unknown Fxxx instruction
$664    $B9C7   JP       V0, $9C7        ; Jump to V0 + 9C7
$666    $D5A2   DRW      V5, VA, #2      ; Draw 2-byte sprite at V5, VA
$668    $91C0   SNE      V1, VC          ; Skip if V1 != VC
$66A    $052E   SYS      $52E            ; System call to 52E
$66C    $8E33   XOR      VE, V3          ; VE ^= V3
$66E    $6E68   LD       VE, #68         ; Load 104 into VE
$670    $B8D3   JP       V0, $8D3        ; Jump to V0 + 8D3
$672    $890A   UNKNOWN  890A            ; Unknown 8xxx instruction
$674    $E5D2   UNKNOWN  $E5D2           ; Unknown Exxx instruction
$676    $032F   SYS      $32F            ; System call to 32F
$678    $8ACB   UNKNOWN  8ACB            ; Unknown 8xxx instruction
$67A    $C7F1   RND      V7, #F1         ; V7 = random & F1
$67C    $ABD8   LD       I, $BD8         ; Load BD8 into I
$67E    $1373   JP       $373            ; Jump to 373
$680    $9E35   UNKNOWN  $9E35           ; Unknown 9xxx instruction
$682    $ACEC   LD       I, $CEC         ; Load CEC into I
$684    $39F7   SE       V9, #F7         ; Skip if V9 == 247
$686    $40C9   SNE      V0, #C9         ; Skip if V0 != 201
$688    $D374   DRW      V3, V7, #4      ; Draw 4-byte sprite at V3, V7
$68A    $9CAF   UNKNOWN  $9CAF           ; Unknown 9xxx instruction
$68C    $6B04   LD       VB, #04         ; Load 4 into VB
$68E    $F933   LD       B, V9           ; Store BCD of V9 at I, I+1, I+2
$690    $4AEE   SNE      VA, #EE         ; Skip if VA != 238
$692    $1CB8   JP       $CB8            ; Jump to CB8
$694    $2332   CALL     $332            ; Call subroutine at 332
$696    $0F4E   SYS      $F4E            ; System call to F4E
$698    $4BAC   SNE      VB, #AC         ; Skip if VB != 172
$69A    $08E5   SYS      $8E5            ; System call to 8E5
$69C    $C26C   RND      V2, #6C         ; V2 = random & 6C
$69E    $43A3   SNE      V3, #A3         ; Skip if V3 != 163
$6A0    $88E2   AND      V8, VE          ; V8 &= VE
$6A2    $1DB5   JP       $DB5            ; Jump to DB5
$6A4    $C1C9   RND      V1, #C9         ; V1 = random & C9
$6A6    $49DE   SNE      V9, #DE         ; Skip if V9 != 222
$6A8    $40C0   SNE      V0, #C0         ; Skip if V0 != 192
$6AA    $5115   UNKNOWN  $5115           ; Unknown 5xxx instruction
$6AC    $F0A8   UNKNOWN  F0A8            ; Unknown Fxxx instruction
$6AE    $32A4   SE       V2, #A4         ; Skip if V2 == 164
$6B0    $A6FE   LD       I, $6FE         ; Load 6FE into I
$6B2    $CC27   RND      VC, #27         ; VC = random & 27
$6B4    $39E7   SE       V9, #E7         ; Skip if V9 == 231
$6B6    $A8FD   LD       I, $8FD         ; Load 8FD into I
$6B8    $B5FF   JP       V0, $5FF        ; Jump to V0 + 5FF
$6BA    $BDF2   JP       V0, $DF2        ; Jump to V0 + DF2
$6BC    $FBD3   UNKNOWN  FBD3            ; Unknown Fxxx instruction
$6BE    $BCBB   JP       V0, $CBB        ; Jump to V0 + CBB
$6C0    $EAD4   UNKNOWN  $EAD4           ; Unknown Exxx instruction
$6C2    $B2CE   JP       V0, $2CE        ; Jump to V0 + 2CE
$6C4    $4BCB   SNE      VB, #CB         ; Skip if VB != 203
$6C6    $1821   JP       $821            ; Jump to 821
$6C8    $86A5   SUB      V6, VA          ; V6 -= VA, VF = !borrow
$6CA    $CA30   RND      VA, #30         ; VA = random & 30
$6CC    $EF58   UNKNOWN  $EF58           ; Unknown Exxx instruction
$6CE    $83AE   SHL      V3              ; V3 <<= 1, VF = MSB
$6D0    $220C   CALL     $20C            ; Call subroutine at 20C
$6D2    $5A68   UNKNOWN  $5A68           ; Unknown 5xxx instruction
$6D4    $FEAD   UNKNOWN  FEAD            ; Unknown Fxxx instruction
$6D6    $8038   UNKNOWN  8038            ; Unknown 8xxx instruction
$6D8    $3AFA   SE       VA, #FA         ; Skip if VA == 250
$6DA    $5474   UNKNOWN  $5474           ; Unknown 5xxx instruction
$6DC    $C32D   RND      V3, #2D         ; V3 = random & 2D
$6DE    $58DC   UNKNOWN  $58DC           ; Unknown 5xxx instruction
$6E0    $2854   CALL     $854            ; Call subroutine at 854
$6E2    $F9AF   UNKNOWN  F9AF            ; Unknown Fxxx instruction
$6E4    $C6BC   RND      V6, #BC         ; V6 = random & BC
$6E6    $FAC1   UNKNOWN  FAC1            ; Unknown Fxxx instruction
$6E8    $2474   CALL     $474            ; Call subroutine at 474
$6EA    $A85E   LD       I, $85E         ; Load 85E into I
$6EC    $1E44   JP       $E44            ; Jump to E44
$6EE    $0364   SYS      $364            ; System call to 364
$6F0    $BEC1   JP       V0, $EC1        ; Jump to V0 + EC1
$6F2    $3C43   SE       VC, #43         ; Skip if VC == 67
$6F4    $140D   JP       $40D            ; Jump to 40D
$6F6    $C7D9   RND      V7, #D9         ; V7 = random & D9
$6F8    $2AD1   CALL     $AD1            ; Call subroutine at AD1
$6FA    $C7AE   RND      V7, #AE         ; V7 = random & AE
$6FC    $603A   LD       V0, #3A         ; Load 58 into V0
$6FE    $2747   CALL     $747            ; Call subroutine at 747
$700    $ACF9   LD       I, $CF9         ; Load CF9 into I
$702    $C598   RND      V5, #98         ; V5 = random & 98
$704    $6387   LD       V3, #87         ; Load 135 into V3
$706    $EDB7   UNKNOWN  $EDB7           ; Unknown Exxx instruction
$708    $05F7   SYS      $5F7            ; System call to 5F7
$70A    $0E75   SYS      $E75            ; System call to E75
$70C    $6AB6   LD       VA, #B6         ; Load 182 into VA
$70E    $F278   UNKNOWN  F278            ; Unknown Fxxx instruction
$710    $F15B   UNKNOWN  F15B            ; Unknown Fxxx instruction
$712    $0CF2   SYS      $CF2            ; System call to CF2
$714    $EA1B   UNKNOWN  $EA1B           ; Unknown Exxx instruction
$716    $8A45   SUB      VA, V4          ; VA -= V4, VF = !borrow
$718    $9545   UNKNOWN  $9545           ; Unknown 9xxx instruction
$71A    $4826   SNE      V8, #26         ; Skip if V8 != 38
$71C    $D5D0   DRW      V5, VD, #0      ; Draw 0-byte sprite at V5, VD
$71E    $AE11   LD       I, $E11         ; Load E11 into I
$720    $F4A9   UNKNOWN  F4A9            ; Unknown Fxxx instruction
$722    $2DE5   CALL     $DE5            ; Call subroutine at DE5
$724    $CCAE   RND      VC, #AE         ; VC = random & AE
$726    $0F3A   SYS      $F3A            ; System call to F3A
$728    $218D   CALL     $18D            ; Call subroutine at 18D
$72A    $5FA9   UNKNOWN  $5FA9           ; Unknown 5xxx instruction
$72C    $4978   SNE      V9, #78         ; Skip if V9 != 120
$72E    $71B4   ADD      V1, #B4         ; Add 180 to V1
$730    $B736   JP       V0, $736        ; Jump to V0 + 736
$732    $A4BA   LD       I, $4BA         ; Load 4BA into I
$734    $9EB7   UNKNOWN  $9EB7           ; Unknown 9xxx instruction
$736    $B92D   JP       V0, $92D        ; Jump to V0 + 92D
$738    $F2BB   UNKNOWN  F2BB            ; Unknown Fxxx instruction
$73A    $7677   ADD      V6, #77         ; Add 119 to V6
$73C    $61D4   LD       V1, #D4         ; Load 212 into V1
$73E    $8393   XOR      V3, V9          ; V3 ^= V9
$740    $5F91   UNKNOWN  $5F91           ; Unknown 5xxx instruction
$742    $553B   UNKNOWN  $553B           ; Unknown 5xxx instruction
$744    $60E5   LD       V0, #E5         ; Load 229 into V0
$746    $C2C2   RND      V2, #C2         ; V2 = random & C2
$748    $CDCB   RND      VD, #CB         ; VD = random & CB
$74A    $4FF3   SNE      VF, #F3         ; Skip if VF != 243
$74C    $8E45   SUB      VE, V4          ; VE -= V4, VF = !borrow
$74E    $1FE6   JP       $FE6            ; Jump to FE6
$750    $B03A   JP       V0, $03A        ; Jump to V0 + 03A
$752    $79FD   ADD      V9, #FD         ; Add 253 to V9
$754    $29D6   CALL     $9D6            ; Call subroutine at 9D6
$756    $B596   JP       V0, $596        ; Jump to V0 + 596
$758    $5C03   UNKNOWN  $5C03           ; Unknown 5xxx instruction
$75A    $ECFD   UNKNOWN  $ECFD           ; Unknown Exxx instruction
$75C    $214C   CALL     $14C            ; Call subroutine at 14C
$75E    $96E0   SNE      V6, VE          ; Skip if V6 != VE
$760    $824B   UNKNOWN  824B            ; Unknown 8xxx instruction
$762    $B2FF   JP       V0, $2FF        ; Jump to V0 + 2FF
$764    $1745   JP       $745            ; Jump to 745
$766    $3DB0   SE       VD, #B0         ; Skip if VD == 176
$768    $7BEC   ADD      VB, #EC         ; Add 236 to VB
$76A    $3332   SE       V3, #32         ; Skip if V3 == 50
$76C    $3C5B   SE       VC, #5B         ; Skip if VC == 91
$76E    $5483   UNKNOWN  $5483           ; Unknown 5xxx instruction
$770    $0562   SYS      $562            ; System call to 562
$772    $A7AF   LD       I, $7AF         ; Load 7AF into I
$774    $3791   SE       V7, #91         ; Skip if V7 == 145
$776    $7C34   ADD      VC, #34         ; Add 52 to VC
$778    $8C67   SUBN     VC, V6          ; VC = V6 - VC, VF = !borrow
$77A    $9718   UNKNOWN  $9718           ; Unknown 9xxx instruction
$77C    $2B4A   CALL     $B4A            ; Call subroutine at B4A
$77E    $FDA2   UNKNOWN  FDA2            ; Unknown Fxxx instruction
$780    $DC96   DRW      VC, V9, #6      ; Draw 6-byte sprite at VC, V9
$782    $6EFB   LD       VE, #FB         ; Load 251 into VE
$784    $D332   DRW      V3, V3, #2      ; Draw 2-byte sprite at V3, V3
$786    $D573   DRW      V5, V7, #3      ; Draw 3-byte sprite at V5, V7
$788    $5758   UNKNOWN  $5758           ; Unknown 5xxx instruction
$78A    $8C44   ADD      VC, V4          ; VC += V4, VF = carry
$78C    $8698   UNKNOWN  8698            ; Unknown 8xxx instruction
$78E    $77F8   ADD      V7, #F8         ; Add 248 to V7
$790    $4C48   SNE      VC, #48         ; Skip if VC != 72
$792    $4C77   SNE      VC, #77         ; Skip if VC != 119
$794    $A89A   LD       I, $89A         ; Load 89A into I
$796    $3FBF   SE       VF, #BF         ; Skip if VF == 191
$798    $2F89   CALL     $F89            ; Call subroutine at F89
$79A    $BBBF   JP       V0, $BBF        ; Jump to V0 + BBF
$79C    $AC21   LD       I, $C21         ; Load C21 into I
$79E    $13C8   JP       $3C8            ; Jump to 3C8
$7A0    $DADC   DRW      VA, VD, #C      ; Draw 12-byte sprite at VA, VD
$7A2    $19E1   JP       $9E1            ; Jump to 9E1
$7A4    $D717   DRW      V7, V1, #7      ; Draw 7-byte sprite at V7, V1
$7A6    $3DA2   SE       VD, #A2         ; Skip if VD == 162
$7A8    $0711   SYS      $711            ; System call to 711
$7AA    $2C2D   CALL     $C2D            ; Call subroutine at C2D
$7AC    $5E62   UNKNOWN  $5E62           ; Unknown 5xxx instruction
$7AE    $B70A   JP       V0, $70A        ; Jump to V0 + 70A
$7B0    $2ECE   CALL     $ECE            ; Call subroutine at ECE
$7B2    $70F5   ADD      V0, #F5         ; Add 245 to V0
$7B4    $7CE2   ADD      VC, #E2         ; Add 226 to VC
$7B6    $5884   UNKNOWN  $5884           ; Unknown 5xxx instruction
$7B8    $E028   UNKNOWN  $E028           ; Unknown Exxx instruction
$7BA    $D654   DRW      V6, V5, #4      ; Draw 4-byte sprite at V6, V5
$7BC    $07D8   SYS      $7D8            ; System call to 7D8
$7BE    $11D0   JP       $1D0            ; Jump to 1D0
$7C0    $340E   SE       V4, #0E         ; Skip if V4 == 14
$7C2    $B090   JP       V0, $090        ; Jump to V0 + 090
$7C4    $0A57   SYS      $A57            ; System call to A57
$7C6    $8E3B   UNKNOWN  8E3B            ; Unknown 8xxx instruction
$7C8    $8D84   ADD      VD, V8          ; VD += V8, VF = carry
$7CA    $5ACA   UNKNOWN  $5ACA           ; Unknown 5xxx instruction
$7CC    $7F55   ADD      VF, #55         ; Add 85 to VF
$7CE    $9390   SNE      V3, V9          ; Skip if V3 != V9
$7D0    $625C   LD       V2, #5C         ; Load 92 into V2
$7D2    $10D7   JP       $0D7            ; Jump to 0D7
$7D4    $EE22   UNKNOWN  $EE22           ; Unknown Exxx instruction
$7D6    $0943   SYS      $943            ; System call to 943
$7D8    $9D24   UNKNOWN  $9D24           ; Unknown 9xxx instruction
$7DA    $4392   SNE      V3, #92         ; Skip if V3 != 146
$7DC    $E13C   UNKNOWN  $E13C           ; Unknown Exxx instruction
$7DE    $967E   UNKNOWN  $967E           ; Unknown 9xxx instruction
$7E0    $AEA3   LD       I, $EA3         ; Load EA3 into I
$7E2    $0647   SYS      $647            ; System call to 647
$7E4    $7C92   ADD      VC, #92         ; Add 146 to VC
$7E6    $C461   RND      V4, #61         ; V4 = random & 61
$7E8    $43FF   SNE      V3, #FF         ; Skip if V3 != 255
$7EA    $1C7C   JP       $C7C            ; Jump to C7C
$7EC    $5437   UNKNOWN  $5437           ; Unknown 5xxx instruction
$7EE    $5DBB   UNKNOWN  $5DBB           ; Unknown 5xxx instruction
$7F0    $4ABD   SNE      VA, #BD         ; Skip if VA != 189
$7F2    $384A   SE       V8, #4A         ; Skip if V8 == 74
$7F4    $4AA2   SNE      VA, #A2         ; Skip if VA != 162
$7F6    $287C   CALL     $87C            ; Call subroutine at 87C
$7F8    $10BD   JP       $0BD            ; Jump to 0BD
$7FA    $26DC   CALL     $6DC            ; Call subroutine at 6DC
$7FC    $E24E   UNKNOWN  $E24E           ; Unknown Exxx instruction
$7FE    $574F   UNKNOWN  $574F           ; Unknown 5xxx instruction
$800    $F265   LD       V2, [I]         ; Load V0-V2 from I
$802    $9A21   UNKNOWN  $9A21           ; Unknown 9xxx instruction
$804    $6274   LD       V2, #74         ; Load 116 into V2
$806    $491F   SNE      V9, #1F         ; Skip if V9 != 31
$808    $89D5   SUB      V9, VD          ; V9 -= VD, VF = !borrow
$80A    $5934   UNKNOWN  $5934           ; Unknown 5xxx instruction
$80C    $C86B   RND      V8, #6B         ; V8 = random & 6B
$80E    $49BF   SNE      V9, #BF         ; Skip if V9 != 191
$810    $5D4B   UNKNOWN  $5D4B           ; Unknown 5xxx instruction
$812    $21DC   CALL     $1DC            ; Call subroutine at 1DC
$814    $82B8   UNKNOWN  82B8            ; Unknown 8xxx instruction
$816    $A1A4   LD       I, $1A4         ; Load 1A4 into I
$818    $490B   SNE      V9, #0B         ; Skip if V9 != 11
$81A    $84AC   UNKNOWN  84AC            ; Unknown 8xxx instruction
$81C    $36C5   SE       V6, #C5         ; Skip if V6 == 197
$81E    $17A1   JP       $7A1            ; Jump to 7A1
$820    $5BA6   UNKNOWN  $5BA6           ; Unknown 5xxx instruction
$822    $C61E   RND      V6, #1E         ; V6 = random & 1E
$824    $1A15   JP       $A15            ; Jump to A15
$826    $9302   UNKNOWN  $9302           ; Unknown 9xxx instruction
$828    $DA0A   DRW      VA, V0, #A      ; Draw 10-byte sprite at VA, V0
$82A    $5A2F   UNKNOWN  $5A2F           ; Unknown 5xxx instruction
$82C    $966B   UNKNOWN  $966B           ; Unknown 9xxx instruction
$82E    $5D14   UNKNOWN  $5D14           ; Unknown 5xxx instruction
$830    $BE21   JP       V0, $E21        ; Jump to V0 + E21
$832    $E533   UNKNOWN  $E533           ; Unknown Exxx instruction
$834    $A8CB   LD       I, $8CB         ; Load 8CB into I
$836    $B96C   JP       V0, $96C        ; Jump to V0 + 96C
$838    $86A5   SUB      V6, VA          ; V6 -= VA, VF = !borrow
$83A    $E79F   UNKNOWN  $E79F           ; Unknown Exxx instruction
$83C    $989E   UNKNOWN  $989E           ; Unknown 9xxx instruction
$83E    $3E31   SE       VE, #31         ; Skip if VE == 49
$840    $F750   UNKNOWN  F750            ; Unknown Fxxx instruction
$842    $5457   UNKNOWN  $5457           ; Unknown 5xxx instruction
$844    $26B7   CALL     $6B7            ; Call subroutine at 6B7
$846    $4BE3   SNE      VB, #E3         ; Skip if VB != 227
$848    $0FEB   SYS      $FEB            ; System call to FEB
$84A    $22D5   CALL     $2D5            ; Call subroutine at 2D5
$84C    $CD87   RND      VD, #87         ; VD = random & 87
$84E    $3879   SE       V8, #79         ; Skip if V8 == 121
$850    $D91D   DRW      V9, V1, #D      ; Draw 13-byte sprite at V9, V1
$852    $5387   UNKNOWN  $5387           ; Unknown 5xxx instruction
$854    $E6EC   UNKNOWN  $E6EC           ; Unknown Exxx instruction
$856    $7E0F   ADD      VE, #0F         ; Add 15 to VE
$858    $020A   SYS      $20A            ; System call to 20A
$85A    $CA2B   RND      VA, #2B         ; VA = random & 2B
$85C    $376E   SE       V7, #6E         ; Skip if V7 == 110
$85E    $8AFE   SHL      VA              ; VA <<= 1, VF = MSB
$860    $A8EF   LD       I, $8EF         ; Load 8EF into I
$862    $A5F4   LD       I, $5F4         ; Load 5F4 into I
$864    $0CD7   SYS      $CD7            ; System call to CD7
$866    $1B46   JP       $B46            ; Jump to B46
$868    $92E2   UNKNOWN  $92E2           ; Unknown 9xxx instruction
$86A    $56FF   UNKNOWN  $56FF           ; Unknown 5xxx instruction
$86C    $10FA   JP       $0FA            ; Jump to 0FA
$86E    $1B7B   JP       $B7B            ; Jump to B7B
$870    $1440   JP       $440            ; Jump to 440
$872    $8575   SUB      V5, V7          ; V5 -= V7, VF = !borrow
$874    $8EF8   UNKNOWN  8EF8            ; Unknown 8xxx instruction
$876    $06DA   SYS      $6DA            ; System call to 6DA
$878    $D006   DRW      V0, V0, #6      ; Draw 6-byte sprite at V0, V0
$87A    $651D   LD       V5, #1D         ; Load 29 into V5
$87C    $5FF1   UNKNOWN  $5FF1           ; Unknown 5xxx instruction
$87E    $785B   ADD      V8, #5B         ; Add 91 to V8
$880    $DC62   DRW      VC, V6, #2      ; Draw 2-byte sprite at VC, V6
$882    $ED33   UNKNOWN  $ED33           ; Unknown Exxx instruction
$884    $9E26   UNKNOWN  $9E26           ; Unknown 9xxx instruction
$886    $5B26   UNKNOWN  $5B26           ; Unknown 5xxx instruction
$888    $8E6B   UNKNOWN  8E6B            ; Unknown 8xxx instruction
$88A    $F502   UNKNOWN  F502            ; Unknown Fxxx instruction
$88C    $F10B   UNKNOWN  F10B            ; Unknown Fxxx instruction
$88E    $3116   SE       V1, #16         ; Skip if V1 == 22
$890    $C956   RND      V9, #56         ; V9 = random & 56
$892    $21F5   CALL     $1F5            ; Call subroutine at 1F5
$894    $9C74   UNKNOWN  $9C74           ; Unknown 9xxx instruction
$896    $0FA4   SYS      $FA4            ; System call to FA4
$898    $D93E   DRW      V9, V3, #E      ; Draw 14-byte sprite at V9, V3
$89A    $6EB8   LD       VE, #B8         ; Load 184 into VE
$89C    $1AC3   JP       $AC3            ; Jump to AC3
$89E    $A9BB   LD       I, $9BB         ; Load 9BB into I
$8A0    $02E0   SYS      $2E0            ; System call to 2E0
$8A2    $1741   JP       $741            ; Jump to 741
$8A4    $0991   SYS      $991            ; System call to 991
$8A6    $6BA9   LD       VB, #A9         ; Load 169 into VB
$8A8    $68CB   LD       V8, #CB         ; Load 203 into V8
$8AA    $1E73   JP       $E73            ; Jump to E73
$8AC    $9AEC   UNKNOWN  $9AEC           ; Unknown 9xxx instruction
$8AE    $6FEC   LD       VF, #EC         ; Load 236 into VF
$8B0    $E37A   UNKNOWN  $E37A           ; Unknown Exxx instruction
$8B2    $82CB   UNKNOWN  82CB            ; Unknown 8xxx instruction
$8B4    $16A1   JP       $6A1            ; Jump to 6A1
$8B6    $D7BF   DRW      V7, VB, #F      ; Draw 15-byte sprite at V7, VB
$8B8    $1E29   JP       $E29            ; Jump to E29
$8BA    $23F9   CALL     $3F9            ; Call subroutine at 3F9
$8BC    $C583   RND      V5, #83         ; V5 = random & 83
$8BE    $8D90   LD       VD, V9          ; VD = V9
$8C0    $1015   JP       $015            ; Jump to 015
$8C2    $2095   CALL     $095            ; Call subroutine at 095
$8C4    $05D8   SYS      $5D8            ; System call to 5D8
$8C6    $E067   UNKNOWN  $E067           ; Unknown Exxx instruction
$8C8    $FB5E   UNKNOWN  FB5E            ; Unknown Fxxx instruction
$8CA    $AA0B   LD       I, $A0B         ; Load A0B into I
$8CC    $8DFE   SHL      VD              ; VD <<= 1, VF = MSB
$8CE    $AE8D   LD       I, $E8D         ; Load E8D into I
$8D0    $67DB   LD       V7, #DB         ; Load 219 into V7
$8D2    $85C3   XOR      V5, VC          ; V5 ^= VC
$8D4    $B505   JP       V0, $505        ; Jump to V0 + 505
$8D6    $EC9A   UNKNOWN  $EC9A           ; Unknown Exxx instruction
$8D8    $63C3   LD       V3, #C3         ; Load 195 into V3
$8DA    $A6BE   LD       I, $6BE         ; Load 6BE into I
$8DC    $9DF1   UNKNOWN  $9DF1           ; Unknown 9xxx instruction
$8DE    $71A8   ADD      V1, #A8         ; Add 168 to V1
$8E0    $3728   SE       V7, #28         ; Skip if V7 == 40
$8E2    $8243   XOR      V2, V4          ; V2 ^= V4
$8E4    $81E2   AND      V1, VE          ; V1 &= VE
$8E6    $7F84   ADD      VF, #84         ; Add 132 to VF
$8E8    $1EFD   JP       $EFD            ; Jump to EFD
$8EA    $F481   UNKNOWN  F481            ; Unknown Fxxx instruction
$8EC    $C198   RND      V1, #98         ; V1 = random & 98
$8EE    $8AF6   SHR      VA              ; VA >>= 1, VF = LSB
$8F0    $59BC   UNKNOWN  $59BC           ; Unknown 5xxx instruction
$8F2    $C269   RND      V2, #69         ; V2 = random & 69
$8F4    $DA5A   DRW      VA, V5, #A      ; Draw 10-byte sprite at VA, V5
$8F6    $56A0   SE       V6, VA          ; Skip if V6 == VA
$8F8    $8396   SHR      V3              ; V3 >>= 1, VF = LSB
$8FA    $A7BC   LD       I, $7BC         ; Load 7BC into I
$8FC    $C5A4   RND      V5, #A4         ; V5 = random & A4
$8FE    $9970   SNE      V9, V7          ; Skip if V9 != V7
$900    $BC9B   JP       V0, $C9B        ; Jump to V0 + C9B
$902    $2163   CALL     $163            ; Call subroutine at 163
$904    $7B7C   ADD      VB, #7C         ; Add 124 to VB
$906    $9CED   UNKNOWN  $9CED           ; Unknown 9xxx instruction
$908    $6B31   LD       VB, #31         ; Load 49 into VB
$90A    $761F   ADD      V6, #1F         ; Add 31 to V6
$90C    $5067   UNKNOWN  $5067           ; Unknown 5xxx instruction
$90E    $C12A   RND      V1, #2A         ; V1 = random & 2A
$910    $BD2F   JP       V0, $D2F        ; Jump to V0 + D2F
$912    $1634   JP       $634            ; Jump to 634
$914    $C36C   RND      V3, #6C         ; V3 = random & 6C
$916    $19BC   JP       $9BC            ; Jump to 9BC
$918    $E5FB   UNKNOWN  $E5FB           ; Unknown Exxx instruction
$91A    $A2D5   LD       I, $2D5         ; Load 2D5 into I
$91C    $F686   UNKNOWN  F686            ; Unknown Fxxx instruction
$91E    $757D   ADD      V5, #7D         ; Add 125 to V5
$920    $C5F8   RND      V5, #F8         ; V5 = random & F8
$922    $EEEB   UNKNOWN  $EEEB           ; Unknown Exxx instruction
$924    $193B   JP       $93B            ; Jump to 93B
$926    $C016   RND      V0, #16         ; V0 = random & 16
$928    $FB7F   UNKNOWN  FB7F            ; Unknown Fxxx instruction
$92A    $05B3   SYS      $5B3            ; System call to 5B3
$92C    $7587   ADD      V5, #87         ; Add 135 to V5
$92E    $87A0   LD       V7, VA          ; V7 = VA
$930    $E98F   UNKNOWN  $E98F           ; Unknown Exxx instruction
$932    $1A71   JP       $A71            ; Jump to A71
$934    $7CA9   ADD      VC, #A9         ; Add 169 to VC
$936    $10CC   JP       $0CC            ; Jump to 0CC
$938    $E300   UNKNOWN  $E300           ; Unknown Exxx instruction
$93A    $DF63   DRW      VF, V6, #3      ; Draw 3-byte sprite at VF, V6
$93C    $6C90   LD       VC, #90         ; Load 144 into VC
$93E    $8589   UNKNOWN  8589            ; Unknown 8xxx instruction
$940    $9B3A   UNKNOWN  $9B3A           ; Unknown 9xxx instruction
$942    $4CAC   SNE      VC, #AC         ; Skip if VC != 172
$944    $B9F4   JP       V0, $9F4        ; Jump to V0 + 9F4
$946    $331A   SE       V3, #1A         ; Skip if V3 == 26
$948    $44EB   SNE      V4, #EB         ; Skip if V4 != 235
$94A    $BE2E   JP       V0, $E2E        ; Jump to V0 + E2E
$94C    $6C0B   LD       VC, #0B         ; Load 11 into VC
$94E    $FF13   UNKNOWN  FF13            ; Unknown Fxxx instruction
$950    $E95F   UNKNOWN  $E95F           ; Unknown Exxx instruction
$952    $FDB6   UNKNOWN  FDB6            ; Unknown Fxxx instruction
$954    $943B   UNKNOWN  $943B           ; Unknown 9xxx instruction
$956    $2C5E   CALL     $C5E            ; Call subroutine at C5E
$958    $9092   UNKNOWN  $9092           ; Unknown 9xxx instruction
$95A    $BC35   JP       V0, $C35        ; Jump to V0 + C35
$95C    $B9A7   JP       V0, $9A7        ; Jump to V0 + 9A7
$95E    $DEF2   DRW      VE, VF, #2      ; Draw 2-byte sprite at VE, VF
$960    $6C06   LD       VC, #06         ; Load 6 into VC
$962    $A136   LD       I, $136         ; Load 136 into I
$964    $0057   SYS      $057            ; System call to 057
$966    $776F   ADD      V7, #6F         ; Add 111 to V7
$968    $85F8   UNKNOWN  85F8            ; Unknown 8xxx instruction
$96A    $4019   SNE      V0, #19         ; Skip if V0 != 25
$96C    $B9A0   JP       V0, $9A0        ; Jump to V0 + 9A0
$96E    $ECCF   UNKNOWN  $ECCF           ; Unknown Exxx instruction
$970    $517E   UNKNOWN  $517E           ; Unknown 5xxx instruction
$972    $8166   SHR      V1              ; V1 >>= 1, VF = LSB
$974    $8FFD   UNKNOWN  8FFD            ; Unknown 8xxx instruction
$976    $CEBD   RND      VE, #BD         ; VE = random & BD
$978    $A963   LD       I, $963         ; Load 963 into I
$97A    $4891   SNE      V8, #91         ; Skip if V8 != 145
$97C    $4E12   SNE      VE, #12         ; Skip if VE != 18
$97E    $6B9C   LD       VB, #9C         ; Load 156 into VB
$980    $D46D   DRW      V4, V6, #D      ; Draw 13-byte sprite at V4, V6
$982    $BE73   JP       V0, $E73        ; Jump to V0 + E73
$984    $9751   UNKNOWN  $9751           ; Unknown 9xxx instruction
$986    $B904   JP       V0, $904        ; Jump to V0 + 904
$988    $8802   AND      V8, V0          ; V8 &= V0
$98A    $B2BA   JP       V0, $2BA        ; Jump to V0 + 2BA
$98C    $35DB   SE       V5, #DB         ; Skip if V5 == 219
$98E    $C7CD   RND      V7, #CD         ; V7 = random & CD
$990    $81D6   SHR      V1              ; V1 >>= 1, VF = LSB
$992    $7B97   ADD      VB, #97         ; Add 151 to VB
$994    $9A65   UNKNOWN  $9A65           ; Unknown 9xxx instruction
$996    $1E68   JP       $E68            ; Jump to E68
$998    $1360   JP       $360            ; Jump to 360
$99A    $97EE   UNKNOWN  $97EE           ; Unknown 9xxx instruction
$99C    $4C0F   SNE      VC, #0F         ; Skip if VC != 15
$99E    $594A   UNKNOWN  $594A           ; Unknown 5xxx instruction
$9A0    $F8E0   UNKNOWN  F8E0            ; Unknown Fxxx instruction
$9A2    $C240   RND      V2, #40         ; V2 = random & 40
$9A4    $D618   DRW      V6, V1, #8      ; Draw 8-byte sprite at V6, V1
$9A6    $396B   SE       V9, #6B         ; Skip if V9 == 107
$9A8    $65EC   LD       V5, #EC         ; Load 236 into V5
$9AA    $647D   LD       V4, #7D         ; Load 125 into V4
$9AC    $0EE7   SYS      $EE7            ; System call to EE7
$9AE    $B1C9   JP       V0, $1C9        ; Jump to V0 + 1C9
$9B0    $856F   UNKNOWN  856F            ; Unknown 8xxx instruction
$9B2    $D850   DRW      V8, V5, #0      ; Draw 0-byte sprite at V8, V5
$9B4    $F667   UNKNOWN  F667            ; Unknown Fxxx instruction
$9B6    $9C64   UNKNOWN  $9C64           ; Unknown 9xxx instruction
$9B8    $A206   LD       I, $206         ; Load 206 into I
$9BA    $C022   RND      V0, #22         ; V0 = random & 22
$9BC    $D4DD   DRW      V4, VD, #D      ; Draw 13-byte sprite at V4, VD
$9BE    $9EF0   SNE      VE, VF          ; Skip if VE != VF
$9C0    $2068   CALL     $068            ; Call subroutine at 068
$9C2    $7FDB   ADD      VF, #DB         ; Add 219 to VF
$9C4    $31D9   SE       V1, #D9         ; Skip if V1 == 217
$9C6    $7140   ADD      V1, #40         ; Add 64 to V1
$9C8    $4D46   SNE      VD, #46         ; Skip if VD != 70
$9CA    $73ED   ADD      V3, #ED         ; Add 237 to V3
$9CC    $A1AB   LD       I, $1AB         ; Load 1AB into I
$9CE    $578A   UNKNOWN  $578A           ; Unknown 5xxx instruction
$9D0    $4982   SNE      V9, #82         ; Skip if V9 != 130
$9D2    $5BF2   UNKNOWN  $5BF2           ; Unknown 5xxx instruction
$9D4    $BC6A   JP       V0, $C6A        ; Jump to V0 + C6A
$9D6    $A5B3   LD       I, $5B3         ; Load 5B3 into I
$9D8    $449E   SNE      V4, #9E         ; Skip if V4 != 158
$9DA    $C463   RND      V4, #63         ; V4 = random & 63
$9DC    $6FAA   LD       VF, #AA         ; Load 170 into VF
$9DE    $5663   UNKNOWN  $5663           ; Unknown 5xxx instruction
$9E0    $843F   UNKNOWN  843F            ; Unknown 8xxx instruction
$9E2    $CAB6   RND      VA, #B6         ; VA = random & B6
$9E4    $9440   SNE      V4, V4          ; Skip if V4 != V4
$9E6    $D8C3   DRW      V8, VC, #3      ; Draw 3-byte sprite at V8, VC
$9E8    $15EE   JP       $5EE            ; Jump to 5EE
$9EA    $7F88   ADD      VF, #88         ; Add 136 to VF
$9EC    $E089   UNKNOWN  $E089           ; Unknown Exxx instruction
$9EE    $AEBB   LD       I, $EBB         ; Load EBB into I
$9F0    $B3C1   JP       V0, $3C1        ; Jump to V0 + 3C1
$9F2    $C4A0   RND      V4, #A0         ; V4 = random & A0
$9F4    $1C26   JP       $C26            ; Jump to C26
$9F6    $3077   SE       V0, #77         ; Skip if V0 == 119
$9F8    $F0D6   UNKNOWN  F0D6            ; Unknown Fxxx instruction
$9FA    $BBA5   JP       V0, $BA5        ; Jump to V0 + BA5
$9FC    $280D   CALL     $80D            ; Call subroutine at 80D
$9FE    $EA21   UNKNOWN  $EA21           ; Unknown Exxx instruction
$A00    $3E64   SE       VE, #64         ; Skip if VE == 100
$A02    $292D   CALL     $92D            ; Call subroutine at 92D
$A04    $3EE0   SE       VE, #E0         ; Skip if VE == 224
$A06    $8A2A   UNKNOWN  8A2A            ; Unknown 8xxx instruction
$A08    $AD1A   LD       I, $D1A         ; Load D1A into I
$A0A    $F79C   UNKNOWN  F79C            ; Unknown Fxxx instruction
$A0C    $8DA7   SUBN     VD, VA          ; VD = VA - VD, VF = !borrow
$A0E    $CC86   RND      VC, #86         ; VC = random & 86
$A10    $3E4F   SE       VE, #4F         ; Skip if VE == 79
$A12    $CFA5   RND      VF, #A5         ; VF = random & A5
$A14    $2773   CALL     $773            ; Call subroutine at 773
$A16    $D53F   DRW      V5, V3, #F      ; Draw 15-byte sprite at V5, V3
$A18    $418F   SNE      V1, #8F         ; Skip if V1 != 143
$A1A    $6E55   LD       VE, #55         ; Load 85 into VE
$A1C    $508A   UNKNOWN  $508A           ; Unknown 5xxx instruction
$A1E    $8BCA   UNKNOWN  8BCA            ; Unknown 8xxx instruction
$A20    $7D0F   ADD      VD, #0F         ; Add 15 to VD
$A22    $8B69   UNKNOWN  8B69            ; Unknown 8xxx instruction
$A24    $B6C8   JP       V0, $6C8        ; Jump to V0 + 6C8
$A26    $B204   JP       V0, $204        ; Jump to V0 + 204
$A28    $AF64   LD       I, $F64         ; Load F64 into I
$A2A    $9A63   UNKNOWN  $9A63           ; Unknown 9xxx instruction
$A2C    $2754   CALL     $754            ; Call subroutine at 754
$A2E    $780A   ADD      V8, #0A         ; Add 10 to V8
$A30    $248F   CALL     $48F            ; Call subroutine at 48F
$A32    $81DE   SHL      V1              ; V1 <<= 1, VF = MSB
$A34    $1462   JP       $462            ; Jump to 462
$A36    $56FD   UNKNOWN  $56FD           ; Unknown 5xxx instruction
$A38    $EA09   UNKNOWN  $EA09           ; Unknown Exxx instruction
$A3A    $D35D   DRW      V3, V5, #D      ; Draw 13-byte sprite at V3, V5
$A3C    $1A50   JP       $A50            ; Jump to A50
$A3E    $F4C3   UNKNOWN  F4C3            ; Unknown Fxxx instruction
$A40    $D265   DRW      V2, V6, #5      ; Draw 5-byte sprite at V2, V6
$A42    $C722   RND      V7, #22         ; V7 = random & 22
$A44    $BDAC   JP       V0, $DAC        ; Jump to V0 + DAC
$A46    $62CA   LD       V2, #CA         ; Load 202 into V2
$A48    $7B5A   ADD      VB, #5A         ; Add 90 to VB
$A4A    $480C   SNE      V8, #0C         ; Skip if V8 != 12
$A4C    $33AE   SE       V3, #AE         ; Skip if V3 == 174
$A4E    $9A57   UNKNOWN  $9A57           ; Unknown 9xxx instruction
$A50    $D35C   DRW      V3, V5, #C      ; Draw 12-byte sprite at V3, V5
$A52    $373B   SE       V7, #3B         ; Skip if V7 == 59
$A54    $B20F   JP       V0, $20F        ; Jump to V0 + 20F
$A56    $98C6   UNKNOWN  $98C6           ; Unknown 9xxx instruction
$A58    $00B4   SYS      $0B4            ; System call to 0B4
$A5A    $845F   UNKNOWN  845F            ; Unknown 8xxx instruction
$A5C    $211C   CALL     $11C            ; Call subroutine at 11C
$A5E    $49FA   SNE      V9, #FA         ; Skip if V9 != 250
$A60    $803F   UNKNOWN  803F            ; Unknown 8xxx instruction
$A62    $BCA3   JP       V0, $CA3        ; Jump to V0 + CA3
$A64    $2B34   CALL     $B34            ; Call subroutine at B34
$A66    $59DD   UNKNOWN  $59DD           ; Unknown 5xxx instruction
$A68    $7F22   ADD      VF, #22         ; Add 34 to VF
$A6A    $5CFD   UNKNOWN  $5CFD           ; Unknown 5xxx instruction
$A6C    $D608   DRW      V6, V0, #8      ; Draw 8-byte sprite at V6, V0
$A6E    $9376   UNKNOWN  $9376           ; Unknown 9xxx instruction
$A70    $A164   LD       I, $164         ; Load 164 into I
$A72    $5284   UNKNOWN  $5284           ; Unknown 5xxx instruction
$A74    $2DB4   CALL     $DB4            ; Call subroutine at DB4
$A76    $8BFA   UNKNOWN  8BFA            ; Unknown 8xxx instruction
$A78    $A541   LD       I, $541         ; Load 541 into I
$A7A    $1943   JP       $943            ; Jump to 943
$A7C    $9DBC   UNKNOWN  $9DBC           ; Unknown 9xxx instruction
$A7E    $E068   UNKNOWN  $E068           ; Unknown Exxx instruction
$A80    $4492   SNE      V4, #92         ; Skip if V4 != 146
$A82    $FCBF   UNKNOWN  FCBF            ; Unknown Fxxx instruction
$A84    $F6F9   UNKNOWN  F6F9            ; Unknown Fxxx instruction
$A86    $45AC   SNE      V5, #AC         ; Skip if V5 != 172
$A88    $7452   ADD      V4, #52         ; Add 82 to V4
$A8A    $46DE   SNE      V6, #DE         ; Skip if V6 != 222
$A8C    $1386   JP       $386            ; Jump to 386
$A8E    $1D96   JP       $D96            ; Jump to D96
$A90    $E9D1   UNKNOWN  $E9D1           ; Unknown Exxx instruction
$A92    $F3FD   UNKNOWN  F3FD            ; Unknown Fxxx instruction
$A94    $16A1   JP       $6A1            ; Jump to 6A1
$A96    $165C   JP       $65C            ; Jump to 65C
$A98    $4721   SNE      V7, #21         ; Skip if V7 != 33
$A9A    $83EA   UNKNOWN  83EA            ; Unknown 8xxx instruction
$A9C    $D480   DRW      V4, V8, #0      ; Draw 0-byte sprite at V4, V8
$A9E    $460B   SNE      V6, #0B         ; Skip if V6 != 11
$AA0    $205C   CALL     $05C            ; Call subroutine at 05C
$AA2    $ED3B   UNKNOWN  $ED3B           ; Unknown Exxx instruction
$AA4    $0C20   SYS      $C20            ; System call to C20
$AA6    $7E05   ADD      VE, #05         ; Add 5 to VE
$AA8    $15A2   JP       $5A2            ; Jump to 5A2
$AAA    $969A   UNKNOWN  $969A           ; Unknown 9xxx instruction
$AAC    $F1F7   UNKNOWN  F1F7            ; Unknown Fxxx instruction
$AAE    $656B   LD       V5, #6B         ; Load 107 into V5
$AB0    $47A6   SNE      V7, #A6         ; Skip if V7 != 166
$AB2    $E6FA   UNKNOWN  $E6FA           ; Unknown Exxx instruction
$AB4    $4205   SNE      V2, #05         ; Skip if V2 != 5
$AB6    $9CF6   UNKNOWN  $9CF6           ; Unknown 9xxx instruction
$AB8    $03A7   SYS      $3A7            ; System call to 3A7
$ABA    $1531   JP       $531            ; Jump to 531
$ABC    $F6ED   UNKNOWN  F6ED            ; Unknown Fxxx instruction
$ABE    $E8E9   UNKNOWN  $E8E9           ; Unknown Exxx instruction
$AC0    $6C78   LD       VC, #78         ; Load 120 into VC
$AC2    $8840   LD       V8, V4          ; V8 = V4
$AC4    $FCB3   UNKNOWN  FCB3            ; Unknown Fxxx instruction
$AC6    $4E43   SNE      VE, #43         ; Skip if VE != 67
$AC8    $978A   UNKNOWN  $978A           ; Unknown 9xxx instruction
$ACA    $ACB9   LD       I, $CB9         ; Load CB9 into I
$ACC    $E518   UNKNOWN  $E518           ; Unknown Exxx instruction
$ACE    $3DF9   SE       VD, #F9         ; Skip if VD == 249
$AD0    $4FCB   SNE      VF, #CB         ; Skip if VF != 203
$AD2    $A634   LD       I, $634         ; Load 634 into I
$AD4    $1576   JP       $576            ; Jump to 576
$AD6    $9E08   UNKNOWN  $9E08           ; Unknown 9xxx instruction
$AD8    $3D5E   SE       VD, #5E         ; Skip if VD == 94
$ADA    $78EC   ADD      V8, #EC         ; Add 236 to V8
$ADC    $69BF   LD       V9, #BF         ; Load 191 into V9
$ADE    $D10A   DRW      V1, V0, #A      ; Draw 10-byte sprite at V1, V0
$AE0    $C4A9   RND      V4, #A9         ; V4 = random & A9
$AE2    $6F3B   LD       VF, #3B         ; Load 59 into VF
$AE4    $7D29   ADD      VD, #29         ; Add 41 to VD
$AE6    $DE5D   DRW      VE, V5, #D      ; Draw 13-byte sprite at VE, V5
$AE8    $B40C   JP       V0, $40C        ; Jump to V0 + 40C
$AEA    $4FF6   SNE      VF, #F6         ; Skip if VF != 246
$AEC    $543C   UNKNOWN  $543C           ; Unknown 5xxx instruction
$AEE    $50FE   UNKNOWN  $50FE           ; Unknown 5xxx instruction
$AF0    $C6A8   RND      V6, #A8         ; V6 = random & A8
$AF2    $5DBF   UNKNOWN  $5DBF           ; Unknown 5xxx instruction
$AF4    $C0D4   RND      V0, #D4         ; V0 = random & D4
$AF6    $9603   UNKNOWN  $9603           ; Unknown 9xxx instruction
$AF8    $6E04   LD       VE, #04         ; Load 4 into VE
$AFA    $341A   SE       V4, #1A         ; Skip if V4 == 26
$AFC    $296E   CALL     $96E            ; Call subroutine at 96E
$AFE    $DCCC   DRW      VC, VC, #C      ; Draw 12-byte sprite at VC, VC
$B00    $AE54   LD       I, $E54         ; Load E54 into I
$B02    $594E   UNKNOWN  $594E           ; Unknown 5xxx instruction
$B04    $8662   AND      V6, V6          ; V6 &= V6
$B06    $DCBC   DRW      VC, VB, #C      ; Draw 12-byte sprite at VC, VB
$B08    $4E90   SNE      VE, #90         ; Skip if VE != 144
$B0A    $53A7   UNKNOWN  $53A7           ; Unknown 5xxx instruction
$B0C    $1B6C   JP       $B6C            ; Jump to B6C
$B0E    $0800   SYS      $800            ; System call to 800
$B10    $158D   JP       $58D            ; Jump to 58D
$B12    $7A26   ADD      VA, #26         ; Add 38 to VA
$B14    $61F1   LD       V1, #F1         ; Load 241 into V1
$B16    $7D91   ADD      VD, #91         ; Add 145 to VD
$B18    $5657   UNKNOWN  $5657           ; Unknown 5xxx instruction
$B1A    $89E4   ADD      V9, VE          ; V9 += VE, VF = carry
$B1C    $5E23   UNKNOWN  $5E23           ; Unknown 5xxx instruction
$B1E    $B0D9   JP       V0, $0D9        ; Jump to V0 + 0D9
$B20    $EC4E   UNKNOWN  $EC4E           ; Unknown Exxx instruction
$B22    $2D89   CALL     $D89            ; Call subroutine at D89
$B24    $4188   SNE      V1, #88         ; Skip if V1 != 136
$B26    $254D   CALL     $54D            ; Call subroutine at 54D
$B28    $A118   LD       I, $118         ; Load 118 into I
$B2A    $F614   UNKNOWN  F614            ; Unknown Fxxx instruction
$B2C    $7600   ADD      V6, #00         ; Add 0 to V6
$B2E    $834E   SHL      V3              ; V3 <<= 1, VF = MSB
$B30    $3195   SE       V1, #95         ; Skip if V1 == 149
$B32    $0937   SYS      $937            ; System call to 937
$B34    $5777   UNKNOWN  $5777           ; Unknown 5xxx instruction
$B36    $6D3D   LD       VD, #3D         ; Load 61 into VD
$B38    $74FE   ADD      V4, #FE         ; Add 254 to V4
$B3A    $BD91   JP       V0, $D91        ; Jump to V0 + D91
$B3C    $9783   UNKNOWN  $9783           ; Unknown 9xxx instruction
$B3E    $6CC0   LD       VC, #C0         ; Load 192 into VC
$B40    $A6F2   LD       I, $6F2         ; Load 6F2 into I
$B42    $5FA4   UNKNOWN  $5FA4           ; Unknown 5xxx instruction
$B44    $485F   SNE      V8, #5F         ; Skip if V8 != 95
$B46    $4ACF   SNE      VA, #CF         ; Skip if VA != 207
$B48    $14BE   JP       $4BE            ; Jump to 4BE
$B4A    $438C   SNE      V3, #8C         ; Skip if V3 != 140
$B4C    $04E6   SYS      $4E6            ; System call to 4E6
$B4E    $5EF5   UNKNOWN  $5EF5           ; Unknown 5xxx instruction
$B50    $1A7B   JP       $A7B            ; Jump to A7B
$B52    $6596   LD       V5, #96         ; Load 150 into V5
$B54    $A372   LD       I, $372         ; Load 372 into I
$B56    $8FC7   SUBN     VF, VC          ; VF = VC - VF, VF = !borrow
$B58    $5A0D   UNKNOWN  $5A0D           ; Unknown 5xxx instruction
$B5A    $72AA   ADD      V2, #AA         ; Add 170 to V2
$B5C    $ABEC   LD       I, $BEC         ; Load BEC into I
$B5E    $4ED4   SNE      VE, #D4         ; Skip if VE != 212
$B60    $9E86   UNKNOWN  $9E86           ; Unknown 9xxx instruction
$B62    $C74B   RND      V7, #4B         ; V7 = random & 4B
$B64    $6047   LD       V0, #47         ; Load 71 into V0
$B66    $E629   UNKNOWN  $E629           ; Unknown Exxx instruction
$B68    $9672   UNKNOWN  $9672           ; Unknown 9xxx instruction
$B6A    $F42B   UNKNOWN  F42B            ; Unknown Fxxx instruction
$B6C    $B150   JP       V0, $150        ; Jump to V0 + 150
$B6E    $00F6   SYS      $0F6            ; System call to 0F6
$B70    $1E8B   JP       $E8B            ; Jump to E8B
$B72    $78FE   ADD      V8, #FE         ; Add 254 to V8
$B74    $E7CA   UNKNOWN  $E7CA           ; Unknown Exxx instruction
$B76    $6023   LD       V0, #23         ; Load 35 into V0
$B78    $7990   ADD      V9, #90         ; Add 144 to V9
$B7A    $940A   UNKNOWN  $940A           ; Unknown 9xxx instruction
$B7C    $BA32   JP       V0, $A32        ; Jump to V0 + A32
$B7E    $DA93   DRW      VA, V9, #3      ; Draw 3-byte sprite at VA, V9
$B80    $5311   UNKNOWN  $5311           ; Unknown 5xxx instruction
$B82    $009F   SYS      $09F            ; System call to 09F
$B84    $82BE   SHL      V2              ; V2 <<= 1, VF = MSB
$B86    $20B5   CALL     $0B5            ; Call subroutine at 0B5
$B88    $CB61   RND      VB, #61         ; VB = random & 61
$B8A    $E190   UNKNOWN  $E190           ; Unknown Exxx instruction
$B8C    $6242   LD       V2, #42         ; Load 66 into V2
$B8E    $7149   ADD      V1, #49         ; Add 73 to V1
$B90    $C631   RND      V6, #31         ; V6 = random & 31
$B92    $D0E4   DRW      V0, VE, #4      ; Draw 4-byte sprite at V0, VE
$B94    $18AB   JP       $8AB            ; Jump to 8AB
$B96    $702D   ADD      V0, #2D         ; Add 45 to V0
$B98    $3719   SE       V7, #19         ; Skip if V7 == 25
$B9A    $3466   SE       V4, #66         ; Skip if V4 == 102
$B9C    $E11C   UNKNOWN  $E11C           ; Unknown Exxx instruction
$B9E    $0A0C   SYS      $A0C            ; System call to A0C
$BA0    $5888   UNKNOWN  $5888           ; Unknown 5xxx instruction
$BA2    $9402   UNKNOWN  $9402           ; Unknown 9xxx instruction
$BA4    $3966   SE       V9, #66         ; Skip if V9 == 102
$BA6    $60F2   LD       V0, #F2         ; Load 242 into V0
$BA8    $772B   ADD      V7, #2B         ; Add 43 to V7
$BAA    $03E9   SYS      $3E9            ; System call to 3E9
$BAC    $A867   LD       I, $867         ; Load 867 into I
$BAE    $3DA2   SE       VD, #A2         ; Skip if VD == 162
$BB0    $2C03   CALL     $C03            ; Call subroutine at C03
$BB2    $E3A4   UNKNOWN  $E3A4           ; Unknown Exxx instruction
$BB4    $7023   ADD      V0, #23         ; Add 35 to V0
$BB6    $CD07   RND      VD, #07         ; VD = random & 07
$BB8    $D5FA   DRW      V5, VF, #A      ; Draw 10-byte sprite at V5, VF
$BBA    $71A7   ADD      V1, #A7         ; Add 167 to V1
$BBC    $BFF0   JP       V0, $FF0        ; Jump to V0 + FF0
$BBE    $16B2   JP       $6B2            ; Jump to 6B2
$BC0    $2AA2   CALL     $AA2            ; Call subroutine at AA2
$BC2    $D783   DRW      V7, V8, #3      ; Draw 3-byte sprite at V7, V8
$BC4    $4F16   SNE      VF, #16         ; Skip if VF != 22
$BC6    $3C4D   SE       VC, #4D         ; Skip if VC == 77
$BC8    $BF6E   JP       V0, $F6E        ; Jump to V0 + F6E
$BCA    $A67B   LD       I, $67B         ; Load 67B into I
$BCC    $5085   UNKNOWN  $5085           ; Unknown 5xxx instruction
$BCE    $6629   LD       V6, #29         ; Load 41 into V6
$BD0    $207B   CALL     $07B            ; Call subroutine at 07B
$BD2    $878D   UNKNOWN  878D            ; Unknown 8xxx instruction
$BD4    $8DD1   OR       VD, VD          ; VD |= VD
$BD6    $0F53   SYS      $F53            ; System call to F53
$BD8    $433C   SNE      V3, #3C         ; Skip if V3 != 60
$BDA    $DBA5   DRW      VB, VA, #5      ; Draw 5-byte sprite at VB, VA
$BDC    $53CB   UNKNOWN  $53CB           ; Unknown 5xxx instruction
$BDE    $3FD3   SE       VF, #D3         ; Skip if VF == 211
$BE0    $F0CA   UNKNOWN  F0CA            ; Unknown Fxxx instruction
$BE2    $2928   CALL     $928            ; Call subroutine at 928
$BE4    $2CA9   CALL     $CA9            ; Call subroutine at CA9
$BE6    $0675   SYS      $675            ; System call to 675
$BE8    $4150   SNE      V1, #50         ; Skip if V1 != 80
$BEA    $F6D6   UNKNOWN  F6D6            ; Unknown Fxxx instruction
$BEC    $CD03   RND      VD, #03         ; VD = random & 03
$BEE    $88FA   UNKNOWN  88FA            ; Unknown 8xxx instruction
$BF0    $0CF5   SYS      $CF5            ; System call to CF5
$BF2    $D1D9   DRW      V1, VD, #9      ; Draw 9-byte sprite at V1, VD
$BF4    $4F92   SNE      VF, #92         ; Skip if VF != 146
$BF6    $6A34   LD       VA, #34         ; Load 52 into VA
$BF8    $2EFF   CALL     $EFF            ; Call subroutine at EFF
$BFA    $343F   SE       V4, #3F         ; Skip if V4 == 63
$BFC    $C223   RND      V2, #23         ; V2 = random & 23
$BFE    $E314   UNKNOWN  $E314           ; Unknown Exxx instruction
$C00    $7D6E   ADD      VD, #6E         ; Add 110 to VD
$C02    $52D3   UNKNOWN  $52D3           ; Unknown 5xxx instruction
$C04    $4D22   SNE      VD, #22         ; Skip if VD != 34
$C06    $C66D   RND      V6, #6D         ; V6 = random & 6D
$C08    $45AB   SNE      V5, #AB         ; Skip if V5 != 171
$C0A    $B3F2   JP       V0, $3F2        ; Jump to V0 + 3F2
$C0C    $C930   RND      V9, #30         ; V9 = random & 30
$C0E    $8CF4   ADD      VC, VF          ; VC += VF, VF = carry
$C10    $6D94   LD       VD, #94         ; Load 148 into VD
$C12    $D543   DRW      V5, V4, #3      ; Draw 3-byte sprite at V5, V4
$C14    $7015   ADD      V0, #15         ; Add 21 to V0
$C16    $BA92   JP       V0, $A92        ; Jump to V0 + A92
$C18    $B5E8   JP       V0, $5E8        ; Jump to V0 + 5E8
$C1A    $D1A7   DRW      V1, VA, #7      ; Draw 7-byte sprite at V1, VA
$C1C    $5726   UNKNOWN  $5726           ; Unknown 5xxx instruction
$C1E    $E97B   UNKNOWN  $E97B           ; Unknown Exxx instruction
$C20    $F123   UNKNOWN  F123            ; Unknown Fxxx instruction
$C22    $F11B   UNKNOWN  F11B            ; Unknown Fxxx instruction
$C24    $A223   LD       I, $223         ; Load 223 into I
$C26    $900B   UNKNOWN  $900B           ; Unknown 9xxx instruction
$C28    $6182   LD       V1, #82         ; Load 130 into V1
$C2A    $7234   ADD      V2, #34         ; Add 52 to V2
$C2C    $BB12   JP       V0, $B12        ; Jump to V0 + B12
$C2E    $4777   SNE      V7, #77         ; Skip if V7 != 119
$C30    $D00E   DRW      V0, V0, #E      ; Draw 14-byte sprite at V0, V0
$C32    $5469   UNKNOWN  $5469           ; Unknown 5xxx instruction
$C34    $E6B2   UNKNOWN  $E6B2           ; Unknown Exxx instruction
$C36    $F851   UNKNOWN  F851            ; Unknown Fxxx instruction
$C38    $2C79   CALL     $C79            ; Call subroutine at C79
$C3A    $3EE2   SE       VE, #E2         ; Skip if VE == 226
$C3C    $E244   UNKNOWN  $E244           ; Unknown Exxx instruction
$C3E    $FFDE   UNKNOWN  FFDE            ; Unknown Fxxx instruction
$C40    $A1E6   LD       I, $1E6         ; Load 1E6 into I
$C42    $30B5   SE       V0, #B5         ; Skip if V0 == 181
$C44    $41FC   SNE      V1, #FC         ; Skip if V1 != 252
$C46    $7818   ADD      V8, #18         ; Add 24 to V8
$C48    $E6E7   UNKNOWN  $E6E7           ; Unknown Exxx instruction
$C4A    $BF55   JP       V0, $F55        ; Jump to V0 + F55
$C4C    $31B4   SE       V1, #B4         ; Skip if V1 == 180
$C4E    $9B98   UNKNOWN  $9B98           ; Unknown 9xxx instruction
$C50    $9A3E   UNKNOWN  $9A3E           ; Unknown 9xxx instruction
$C52    $D973   DRW      V9, V7, #3      ; Draw 3-byte sprite at V9, V7
$C54    $970B   UNKNOWN  $970B           ; Unknown 9xxx instruction
$C56    $E411   UNKNOWN  $E411           ; Unknown Exxx instruction
$C58    $B288   JP       V0, $288        ; Jump to V0 + 288
$C5A    $C8BC   RND      V8, #BC         ; V8 = random & BC
$C5C    $DA4E   DRW      VA, V4, #E      ; Draw 14-byte sprite at VA, V4
$C5E    $A775   LD       I, $775         ; Load 775 into I
$C60    $CA56   RND      VA, #56         ; VA = random & 56
$C62    $BF2C   JP       V0, $F2C        ; Jump to V0 + F2C
$C64    $64C9   LD       V4, #C9         ; Load 201 into V4
$C66    $DFF0   DRW      VF, VF, #0      ; Draw 0-byte sprite at VF, VF
$C68    $0ED3   SYS      $ED3            ; System call to ED3
$C6A    $9D57   UNKNOWN  $9D57           ; Unknown 9xxx instruction
$C6C    $D370   DRW      V3, V7, #0      ; Draw 0-byte sprite at V3, V7
$C6E    $A9A2   LD       I, $9A2         ; Load 9A2 into I
$C70    $05E1   SYS      $5E1            ; System call to 5E1
$C72    $B5B2   JP       V0, $5B2        ; Jump to V0 + 5B2
$C74    $4941   SNE      V9, #41         ; Skip if V9 != 65
$C76    $ED04   UNKNOWN  $ED04           ; Unknown Exxx instruction
$C78    $79FC   ADD      V9, #FC         ; Add 252 to V9
$C7A    $1C74   JP       $C74            ; Jump to C74
$C7C    $CA25   RND      VA, #25         ; VA = random & 25
$C7E    $3FEC   SE       VF, #EC         ; Skip if VF == 236
$C80    $3351   SE       V3, #51         ; Skip if V3 == 81
$C82    $10EB   JP       $0EB            ; Jump to 0EB
$C84    $3805   SE       V8, #05         ; Skip if V8 == 5
$C86    $E531   UNKNOWN  $E531           ; Unknown Exxx instruction
$C88    $DDC5   DRW      VD, VC, #5      ; Draw 5-byte sprite at VD, VC
$C8A    $556A   UNKNOWN  $556A           ; Unknown 5xxx instruction
$C8C    $A309   LD       I, $309         ; Load 309 into I
$C8E    $02F8   SYS      $2F8            ; System call to 2F8
$C90    $125B   JP       $25B            ; Jump to 25B
$C92    $C2EA   RND      V2, #EA         ; V2 = random & EA
$C94    $9BBC   UNKNOWN  $9BBC           ; Unknown 9xxx instruction
$C96    $B120   JP       V0, $120        ; Jump to V0 + 120
$C98    $4E18   SNE      VE, #18         ; Skip if VE != 24
$C9A    $3C5C   SE       VC, #5C         ; Skip if VC == 92
$C9C    $3132   SE       V1, #32         ; Skip if V1 == 50
$C9E    $E75C   UNKNOWN  $E75C           ; Unknown Exxx instruction
$CA0    $4AA9   SNE      VA, #A9         ; Skip if VA != 169
$CA2    $3D3B   SE       VD, #3B         ; Skip if VD == 59
$CA4    $DFB9   DRW      VF, VB, #9      ; Draw 9-byte sprite at VF, VB
$CA6    $D22D   DRW      V2, V2, #D      ; Draw 13-byte sprite at V2, V2
$CA8    $D10C   DRW      V1, V0, #C      ; Draw 12-byte sprite at V1, V0
$CAA    $A751   LD       I, $751         ; Load 751 into I
$CAC    $5EAC   UNKNOWN  $5EAC           ; Unknown 5xxx instruction
$CAE    $C06A   RND      V0, #6A         ; V0 = random & 6A
$CB0    $131A   JP       $31A            ; Jump to 31A
$CB2    $5534   UNKNOWN  $5534           ; Unknown 5xxx instruction
$CB4    $AA6C   LD       I, $A6C         ; Load A6C into I
$CB6    $15E6   JP       $5E6            ; Jump to 5E6
$CB8    $9BC3   UNKNOWN  $9BC3           ; Unknown 9xxx instruction
$CBA    $CABB   RND      VA, #BB         ; VA = random & BB
$CBC    $F2EC   UNKNOWN  F2EC            ; Unknown Fxxx instruction
$CBE    $449E   SNE      V4, #9E         ; Skip if V4 != 158
$CC0    $45BD   SNE      V5, #BD         ; Skip if V5 != 189
$CC2    $41F9   SNE      V1, #F9         ; Skip if V1 != 249
$CC4    $9659   UNKNOWN  $9659           ; Unknown 9xxx instruction
$CC6    $9727   UNKNOWN  $9727           ; Unknown 9xxx instruction
$CC8    $A8D4   LD       I, $8D4         ; Load 8D4 into I
$CCA    $FF99   UNKNOWN  FF99            ; Unknown Fxxx instruction
$CCC    $F01C   UNKNOWN  F01C            ; Unknown Fxxx instruction
$CCE    $149B   JP       $49B            ; Jump to 49B
$CD0    $B6F6   JP       V0, $6F6        ; Jump to V0 + 6F6
$CD2    $AEB0   LD       I, $EB0         ; Load EB0 into I
$CD4    $13D9   JP       $3D9            ; Jump to 3D9
$CD6    $F270   UNKNOWN  F270            ; Unknown Fxxx instruction
$CD8    $4040   SNE      V0, #40         ; Skip if V0 != 64
$CDA    $20FC   CALL     $0FC            ; Call subroutine at 0FC
$CDC    $85B9   UNKNOWN  85B9            ; Unknown 8xxx instruction
$CDE    $63F2   LD       V3, #F2         ; Load 242 into V3
$CE0    $9D61   UNKNOWN  $9D61           ; Unknown 9xxx instruction
$CE2    $80C4   ADD      V0, VC          ; V0 += VC, VF = carry
$CE4    $5B82   UNKNOWN  $5B82           ; Unknown 5xxx instruction
$CE6    $6055   LD       V0, #55         ; Load 85 into V0
$CE8    $84AE   SHL      V4              ; V4 <<= 1, VF = MSB
$CEA    $677C   LD       V7, #7C         ; Load 124 into V7
$CEC    $691C   LD       V9, #1C         ; Load 28 into V9
$CEE    $6E9D   LD       VE, #9D         ; Load 157 into VE
$CF0    $8DC4   ADD      VD, VC          ; VD += VC, VF = carry
$CF2    $D848   DRW      V8, V4, #8      ; Draw 8-byte sprite at V8, V4
$CF4    $0A79   SYS      $A79            ; System call to A79
$CF6    $AF41   LD       I, $F41         ; Load F41 into I
$CF8    $6433   LD       V4, #33         ; Load 51 into V4
$CFA    $FB0F   UNKNOWN  FB0F            ; Unknown Fxxx instruction
$CFC    $C11F   RND      V1, #1F         ; V1 = random & 1F
$CFE    $920B   UNKNOWN  $920B           ; Unknown 9xxx instruction
$D00    $A6D4   LD       I, $6D4         ; Load 6D4 into I
$D02    $6164   LD       V1, #64         ; Load 100 into V1
$D04    $AE41   LD       I, $E41         ; Load E41 into I
$D06    $DF95   DRW      VF, V9, #5      ; Draw 5-byte sprite at VF, V9
$D08    $705A   ADD      V0, #5A         ; Add 90 to V0
$D0A    $37F3   SE       V7, #F3         ; Skip if V7 == 243
$D0C    $8A65   SUB      VA, V6          ; VA -= V6, VF = !borrow
$D0E    $7604   ADD      V6, #04         ; Add 4 to V6
$D10    $3E6F   SE       VE, #6F         ; Skip if VE == 111
$D12    $EE5B   UNKNOWN  $EE5B           ; Unknown Exxx instruction
$D14    $311F   SE       V1, #1F         ; Skip if V1 == 31
$D16    $3226   SE       V2, #26         ; Skip if V2 == 38
$D18    $6894   LD       V8, #94         ; Load 148 into V8
$D1A    $BD52   JP       V0, $D52        ; Jump to V0 + D52
$D1C    $5E58   UNKNOWN  $5E58           ; Unknown 5xxx instruction
$D1E    $830C   UNKNOWN  830C            ; Unknown 8xxx instruction
$D20    $0687   SYS      $687            ; System call to 687
$D22    $D241   DRW      V2, V4, #1      ; Draw 1-byte sprite at V2, V4
$D24    $9361   UNKNOWN  $9361           ; Unknown 9xxx instruction
$D26    $FDC8   UNKNOWN  FDC8            ; Unknown Fxxx instruction
$D28    $5BF7   UNKNOWN  $5BF7           ; Unknown 5xxx instruction
$D2A    $9E6D   UNKNOWN  $9E6D           ; Unknown 9xxx instruction
$D2C    $E45A   UNKNOWN  $E45A           ; Unknown Exxx instruction
$D2E    $064E   SYS      $64E            ; System call to 64E
$D30    $9E91   UNKNOWN  $9E91           ; Unknown 9xxx instruction
$D32    $2AF6   CALL     $AF6            ; Call subroutine at AF6
$D34    $869A   UNKNOWN  869A            ; Unknown 8xxx instruction
$D36    $7ABA   ADD      VA, #BA         ; Add 186 to VA
$D38    $3361   SE       V3, #61         ; Skip if V3 == 97
$D3A    $F082   UNKNOWN  F082            ; Unknown Fxxx instruction
$D3C    $E6E6   UNKNOWN  $E6E6           ; Unknown Exxx instruction
$D3E    $C377   RND      V3, #77         ; V3 = random & 77
$D40    $0B5A   SYS      $B5A            ; System call to B5A
$D42    $61DD   LD       V1, #DD         ; Load 221 into V1
$D44    $5D0B   UNKNOWN  $5D0B           ; Unknown 5xxx instruction
$D46    $B9A9   JP       V0, $9A9        ; Jump to V0 + 9A9
$D48    $1AC6   JP       $AC6            ; Jump to AC6
$D4A    $658A   LD       V5, #8A         ; Load 138 into V5
$D4C    $E457   UNKNOWN  $E457           ; Unknown Exxx instruction
$D4E    $8909   UNKNOWN  8909            ; Unknown 8xxx instruction
$D50    $A1F3   LD       I, $1F3         ; Load 1F3 into I
$D52    $9F06   UNKNOWN  $9F06           ; Unknown 9xxx instruction
$D54    $3742   SE       V7, #42         ; Skip if V7 == 66
$D56    $B494   JP       V0, $494        ; Jump to V0 + 494
$D58    $A03A   LD       I, $03A         ; Load 03A into I
$D5A    $63CD   LD       V3, #CD         ; Load 205 into V3
$D5C    $C37D   RND      V3, #7D         ; V3 = random & 7D
$D5E    $FF85   UNKNOWN  FF85            ; Unknown Fxxx instruction
$D60    $A07B   LD       I, $07B         ; Load 07B into I
$D62    $058C   SYS      $58C            ; System call to 58C
$D64    $FEBD   UNKNOWN  FEBD            ; Unknown Fxxx instruction
$D66    $6173   LD       V1, #73         ; Load 115 into V1
$D68    $FBDA   UNKNOWN  FBDA            ; Unknown Fxxx instruction
$D6A    $3C0E   SE       VC, #0E         ; Skip if VC == 14
$D6C    $4507   SNE      V5, #07         ; Skip if V5 != 7
$D6E    $3A8E   SE       VA, #8E         ; Skip if VA == 142
$D70    $D4B8   DRW      V4, VB, #8      ; Draw 8-byte sprite at V4, VB
$D72    $90E8   UNKNOWN  $90E8           ; Unknown 9xxx instruction
$D74    $2622   CALL     $622            ; Call subroutine at 622
$D76    $4A8F   SNE      VA, #8F         ; Skip if VA != 143
$D78    $934B   UNKNOWN  $934B           ; Unknown 9xxx instruction
$D7A    $0892   SYS      $892            ; System call to 892
$D7C    $3C88   SE       VC, #88         ; Skip if VC == 136
$D7E    $8467   SUBN     V4, V6          ; V4 = V6 - V4, VF = !borrow
$D80    $E772   UNKNOWN  $E772           ; Unknown Exxx instruction
$D82    $CC2C   RND      VC, #2C         ; VC = random & 2C
$D84    $0D2D   SYS      $D2D            ; System call to D2D
$D86    $920D   UNKNOWN  $920D           ; Unknown 9xxx instruction
$D88    $27FA   CALL     $7FA            ; Call subroutine at 7FA
$D8A    $06B2   SYS      $6B2            ; System call to 6B2
$D8C    $2CC3   CALL     $CC3            ; Call subroutine at CC3
$D8E    $DB3A   DRW      VB, V3, #A      ; Draw 10-byte sprite at VB, V3
$D90    $0BEC   SYS      $BEC            ; System call to BEC
$D92    $31B6   SE       V1, #B6         ; Skip if V1 == 182
$D94    $C9A7   RND      V9, #A7         ; V9 = random & A7
$D96    $1510   JP       $510            ; Jump to 510
$D98    $A5F7   LD       I, $5F7         ; Load 5F7 into I
$D9A    $5E25   UNKNOWN  $5E25           ; Unknown 5xxx instruction
$D9C    $75A5   ADD      V5, #A5         ; Add 165 to V5
$D9E    $D675   DRW      V6, V7, #5      ; Draw 5-byte sprite at V6, V7
$DA0    $FB80   UNKNOWN  FB80            ; Unknown Fxxx instruction
$DA2    $2FEC   CALL     $FEC            ; Call subroutine at FEC
$DA4    $2D63   CALL     $D63            ; Call subroutine at D63
$DA6    $B4C4   JP       V0, $4C4        ; Jump to V0 + 4C4
$DA8    $3BB9   SE       VB, #B9         ; Skip if VB == 185
$DAA    $E314   UNKNOWN  $E314           ; Unknown Exxx instruction
$DAC    $7175   ADD      V1, #75         ; Add 117 to V1
$DAE    $0D68   SYS      $D68            ; System call to D68
$DB0    $7F5A   ADD      VF, #5A         ; Add 90 to VF
$DB2    $D26D   DRW      V2, V6, #D      ; Draw 13-byte sprite at V2, V6
$DB4    $D829   DRW      V8, V2, #9      ; Draw 9-byte sprite at V8, V2
$DB6    $937F   UNKNOWN  $937F           ; Unknown 9xxx instruction
$DB8    $95DF   UNKNOWN  $95DF           ; Unknown 9xxx instruction
$DBA    $4C1A   SNE      VC, #1A         ; Skip if VC != 26
$DBC    $0652   SYS      $652            ; System call to 652
$DBE    $33D6   SE       V3, #D6         ; Skip if V3 == 214
$DC0    $55AF   UNKNOWN  $55AF           ; Unknown 5xxx instruction
$DC2    $B15C   JP       V0, $15C        ; Jump to V0 + 15C
$DC4    $F1D4   UNKNOWN  F1D4            ; Unknown Fxxx instruction
$DC6    $9D02   UNKNOWN  $9D02           ; Unknown 9xxx instruction
$DC8    $C7DB   RND      V7, #DB         ; V7 = random & DB
$DCA    $F91A   UNKNOWN  F91A            ; Unknown Fxxx instruction
$DCC    $AAE4   LD       I, $AE4         ; Load AE4 into I
$DCE    $1866   JP       $866            ; Jump to 866
$DD0    $B4D3   JP       V0, $4D3        ; Jump to V0 + 4D3
$DD2    $6FF3   LD       VF, #F3         ; Load 243 into VF
$DD4    $9D26   UNKNOWN  $9D26           ; Unknown 9xxx instruction
$DD6    $EB11   UNKNOWN  $EB11           ; Unknown Exxx instruction
$DD8    $A16D   LD       I, $16D         ; Load 16D into I
$DDA    $E150   UNKNOWN  $E150           ; Unknown Exxx instruction
$DDC    $F826   UNKNOWN  F826            ; Unknown Fxxx instruction
$DDE    $4975   SNE      V9, #75         ; Skip if V9 != 117
$DE0    $9C7D   UNKNOWN  $9C7D           ; Unknown 9xxx instruction
$DE2    $ADF1   LD       I, $DF1         ; Load DF1 into I
$DE4    $AACE   LD       I, $ACE         ; Load ACE into I
$DE6    $3D9E   SE       VD, #9E         ; Skip if VD == 158
$DE8    $49C3   SNE      V9, #C3         ; Skip if V9 != 195
$DEA    $DA54   DRW      VA, V5, #4      ; Draw 4-byte sprite at VA, V5
$DEC    $3FC1   SE       VF, #C1         ; Skip if VF == 193
$DEE    $A687   LD       I, $687         ; Load 687 into I
$DF0    $3B86   SE       VB, #86         ; Skip if VB == 134
$DF2    $C019   RND      V0, #19         ; V0 = random & 19
$DF4    $B8C3   JP       V0, $8C3        ; Jump to V0 + 8C3
$DF6    $15B3   JP       $5B3            ; Jump to 5B3
$DF8    $D35C   DRW      V3, V5, #C      ; Draw 12-byte sprite at V3, V5
$DFA    $E0EB   UNKNOWN  $E0EB           ; Unknown Exxx instruction
$DFC    $8964   ADD      V9, V6          ; V9 += V6, VF = carry
$DFE    $7062   ADD      V0, #62         ; Add 98 to V0
$E00    $4436   SNE      V4, #36         ; Skip if V4 != 54
$E02    $E46F   UNKNOWN  $E46F           ; Unknown Exxx instruction
$E04    $5D07   UNKNOWN  $5D07           ; Unknown 5xxx instruction
$E06    $671B   LD       V7, #1B         ; Load 27 into V7
$E08    $BD3D   JP       V0, $D3D        ; Jump to V0 + D3D
$E0A    $559B   UNKNOWN  $559B           ; Unknown 5xxx instruction
$E0C    $1FDC   JP       $FDC            ; Jump to FDC
$E0E    $5EA0   SE       VE, VA          ; Skip if VE == VA
$E10    $24BB   CALL     $4BB            ; Call subroutine at 4BB
$E12    $2009   CALL     $009            ; Call subroutine at 009
$E14    $F55F   UNKNOWN  F55F            ; Unknown Fxxx instruction
$E16    $1C45   JP       $C45            ; Jump to C45
$E18    $C1BE   RND      V1, #BE         ; V1 = random & BE
$E1A    $AE27   LD       I, $E27         ; Load E27 into I
$E1C    $B726   JP       V0, $726        ; Jump to V0 + 726
$E1E    $931C   UNKNOWN  $931C           ; Unknown 9xxx instruction
$E20    $E503   UNKNOWN  $E503           ; Unknown Exxx instruction
$E22    $5CE4   UNKNOWN  $5CE4           ; Unknown 5xxx instruction
$E24    $E3B4   UNKNOWN  $E3B4           ; Unknown Exxx instruction
$E26    $D839   DRW      V8, V3, #9      ; Draw 9-byte sprite at V8, V3
$E28    $F8B8   UNKNOWN  F8B8            ; Unknown Fxxx instruction
$E2A    $0051   SYS      $051            ; System call to 051
$E2C    $A5DF   LD       I, $5DF         ; Load 5DF into I
$E2E    $9EB8   UNKNOWN  $9EB8           ; Unknown 9xxx instruction
$E30    $7D34   ADD      VD, #34         ; Add 52 to VD
$E32    $6349   LD       V3, #49         ; Load 73 into V3
$E34    $4C68   SNE      VC, #68         ; Skip if VC != 104
$E36    $37C8   SE       V7, #C8         ; Skip if V7 == 200
$E38    $33C7   SE       V3, #C7         ; Skip if V3 == 199
$E3A    $5397   UNKNOWN  $5397           ; Unknown 5xxx instruction
$E3C    $ADE2   LD       I, $DE2         ; Load DE2 into I
$E3E    $3EC4   SE       VE, #C4         ; Skip if VE == 196
$E40    $D69A   DRW      V6, V9, #A      ; Draw 10-byte sprite at V6, V9
$E42    $D504   DRW      V5, V0, #4      ; Draw 4-byte sprite at V5, V0
$E44    $3274   SE       V2, #74         ; Skip if V2 == 116
$E46    $F88B   UNKNOWN  F88B            ; Unknown Fxxx instruction
$E48    $22BA   CALL     $2BA            ; Call subroutine at 2BA
$E4A    $7BDC   ADD      VB, #DC         ; Add 220 to VB
$E4C    $7B6C   ADD      VB, #6C         ; Add 108 to VB
$E4E    $A2D3   LD       I, $2D3         ; Load 2D3 into I
$E50    $12E1   JP       $2E1            ; Jump to 2E1
$E52    $1AF5   JP       $AF5            ; Jump to AF5
$E54    $4BFB   SNE      VB, #FB         ; Skip if VB != 251
$E56    $C071   RND      V0, #71         ; V0 = random & 71
$E58    $FAB1   UNKNOWN  FAB1            ; Unknown Fxxx instruction
$E5A    $C7C2   RND      V7, #C2         ; V7 = random & C2
$E5C    $0751   SYS      $751            ; System call to 751
$E5E    $54D6   UNKNOWN  $54D6           ; Unknown 5xxx instruction
$E60    $8698   UNKNOWN  8698            ; Unknown 8xxx instruction
$E62    $2205   CALL     $205            ; Call subroutine at 205
$E64    $A3D6   LD       I, $3D6         ; Load 3D6 into I
$E66    $7BFE   ADD      VB, #FE         ; Add 254 to VB
$E68    $52ED   UNKNOWN  $52ED           ; Unknown 5xxx instruction
$E6A    $543F   UNKNOWN  $543F           ; Unknown 5xxx instruction
$E6C    $9F45   UNKNOWN  $9F45           ; Unknown 9xxx instruction
$E6E    $F756   UNKNOWN  F756            ; Unknown Fxxx instruction
$E70    $A187   LD       I, $187         ; Load 187 into I
$E72    $8F6D   UNKNOWN  8F6D            ; Unknown 8xxx instruction
$E74    $6BA3   LD       VB, #A3         ; Load 163 into VB
$E76    $6993   LD       V9, #93         ; Load 147 into V9
$E78    $7348   ADD      V3, #48         ; Add 72 to V3
$E7A    $5E80   SE       VE, V8          ; Skip if VE == V8
$E7C    $AD7F   LD       I, $D7F         ; Load D7F into I
$E7E    $A4DD   LD       I, $4DD         ; Load 4DD into I
$E80    $0EAF   SYS      $EAF            ; System call to EAF
$E82    $BDB8   JP       V0, $DB8        ; Jump to V0 + DB8
$E84    $94D0   SNE      V4, VD          ; Skip if V4 != VD
$E86    $004A   SYS      $04A            ; System call to 04A
$E88    $3627   SE       V6, #27         ; Skip if V6 == 39
$E8A    $A423   LD       I, $423         ; Load 423 into I
$E8C    $A306   LD       I, $306         ; Load 306 into I
$E8E    $DDD5   DRW      VD, VD, #5      ; Draw 5-byte sprite at VD, VD
$E90    $7E3D   ADD      VE, #3D         ; Add 61 to VE
$E92    $7B91   ADD      VB, #91         ; Add 145 to VB
$E94    $D735   DRW      V7, V3, #5      ; Draw 5-byte sprite at V7, V3
$E96    $DD1F   DRW      VD, V1, #F      ; Draw 15-byte sprite at VD, V1
$E98    $54FE   UNKNOWN  $54FE           ; Unknown 5xxx instruction
$E9A    $785E   ADD      V8, #5E         ; Add 94 to V8
$E9C    $C669   RND      V6, #69         ; V6 = random & 69
$E9E    $8823   XOR      V8, V2          ; V8 ^= V2
$EA0    $1805   JP       $805            ; Jump to 805
$EA2    $FF33   LD       B, VF           ; Store BCD of VF at I, I+1, I+2
$EA4    $C127   RND      V1, #27         ; V1 = random & 27
$EA6    $A2E0   LD       I, $2E0         ; Load 2E0 into I
$EA8    $C05A   RND      V0, #5A         ; V0 = random & 5A
$EAA    $4E84   SNE      VE, #84         ; Skip if VE != 132
$EAC    $892E   SHL      V9              ; V9 <<= 1, VF = MSB
$EAE    $9F39   UNKNOWN  $9F39           ; Unknown 9xxx instruction
$EB0    $DB41   DRW      VB, V4, #1      ; Draw 1-byte sprite at VB, V4
$EB2    $0CEA   SYS      $CEA            ; System call to CEA
$EB4    $2914   CALL     $914            ; Call subroutine at 914
$EB6    $92DE   UNKNOWN  $92DE           ; Unknown 9xxx instruction
$EB8    $C0AE   RND      V0, #AE         ; V0 = random & AE
$EBA    $681B   LD       V8, #1B         ; Load 27 into V8
$EBC    $9DDE   UNKNOWN  $9DDE           ; Unknown 9xxx instruction
$EBE    $90A0   SNE      V0, VA          ; Skip if V0 != VA
$EC0    $2A1A   CALL     $A1A            ; Call subroutine at A1A
$EC2    $90A4   UNKNOWN  $90A4           ; Unknown 9xxx instruction
$EC4    $8ECF   UNKNOWN  8ECF            ; Unknown 8xxx instruction
$EC6    $7A11   ADD      VA, #11         ; Add 17 to VA
$EC8    $11BB   JP       $1BB            ; Jump to 1BB
$ECA    $70A4   ADD      V0, #A4         ; Add 164 to V0
$ECC    $2F70   CALL     $F70            ; Call subroutine at F70
$ECE    $0DD3   SYS      $DD3            ; System call to DD3
$ED0    $BDEE   JP       V0, $DEE        ; Jump to V0 + DEE
$ED2    $4C9C   SNE      VC, #9C         ; Skip if VC != 156
$ED4    $F417   UNKNOWN  F417            ; Unknown Fxxx instruction
$ED6    $AD01   LD       I, $D01         ; Load D01 into I
$ED8    $232B   CALL     $32B            ; Call subroutine at 32B
$EDA    $F003   UNKNOWN  F003            ; Unknown Fxxx instruction
$EDC    $997B   UNKNOWN  $997B           ; Unknown 9xxx instruction
$EDE    $364B   SE       V6, #4B         ; Skip if V6 == 75
$EE0    $5C2B   UNKNOWN  $5C2B           ; Unknown 5xxx instruction
$EE2    $BD22   JP       V0, $D22        ; Jump to V0 + D22
$EE4    $8EF2   AND      VE, VF          ; VE &= VF
$EE6    $042C   SYS      $42C            ; System call to 42C
$EE8    $4232   SNE      V2, #32         ; Skip if V2 != 50
$EEA    $F0E8   UNKNOWN  F0E8            ; Unknown Fxxx instruction
$EEC    $2C35   CALL     $C35            ; Call subroutine at C35
$EEE    $D896   DRW      V8, V9, #6      ; Draw 6-byte sprite at V8, V9
$EF0    $E597   UNKNOWN  $E597           ; Unknown Exxx instruction
$EF2    $BADB   JP       V0, $ADB        ; Jump to V0 + ADB
$EF4    $9149   UNKNOWN  $9149           ; Unknown 9xxx instruction
$EF6    $D645   DRW      V6, V4, #5      ; Draw 5-byte sprite at V6, V4
$EF8    $B8A5   JP       V0, $8A5        ; Jump to V0 + 8A5
$EFA    $4834   SNE      V8, #34         ; Skip if V8 != 52
$EFC    $BA4A   JP       V0, $A4A        ; Jump to V0 + A4A
$EFE    $E197   UNKNOWN  $E197           ; Unknown Exxx instruction
$F00    $E188   UNKNOWN  $E188           ; Unknown Exxx instruction
$F02    $F8B6   UNKNOWN  F8B6            ; Unknown Fxxx instruction
$F04    $A7F1   LD       I, $7F1         ; Load 7F1 into I
$F06    $2FB2   CALL     $FB2            ; Call subroutine at FB2
$F08    $6E15   LD       VE, #15         ; Load 21 into VE
$F0A    $13AF   JP       $3AF            ; Jump to 3AF
$F0C    $9530   SNE      V5, V3          ; Skip if V5 != V3
$F0E    $F2D2   UNKNOWN  F2D2            ; Unknown Fxxx instruction
$F10    $0D6A   SYS      $D6A            ; System call to D6A
$F12    $FE2D   UNKNOWN  FE2D            ; Unknown Fxxx instruction
$F14    $DA59   DRW      VA, V5, #9      ; Draw 9-byte sprite at VA, V5
$F16    $DEFD   DRW      VE, VF, #D      ; Draw 13-byte sprite at VE, VF
$F18    $79ED   ADD      V9, #ED         ; Add 237 to V9
$F1A    $3963   SE       V9, #63         ; Skip if V9 == 99
$F1C    $36F5   SE       V6, #F5         ; Skip if V6 == 245
$F1E    $95A3   UNKNOWN  $95A3           ; Unknown 9xxx instruction
$F20    $DA1A   DRW      VA, V1, #A      ; Draw 10-byte sprite at VA, V1
$F22    $8AC9   UNKNOWN  8AC9            ; Unknown 8xxx instruction
$F24    $ECCB   UNKNOWN  $ECCB           ; Unknown Exxx instruction
$F26    $1CBD   JP       $CBD            ; Jump to CBD
$F28    $204F   CALL     $04F            ; Call subroutine at 04F
$F2A    $8530   LD       V5, V3          ; V5 = V3
$F2C    $FF89   UNKNOWN  FF89            ; Unknown Fxxx instruction
$F2E    $263B   CALL     $63B            ; Call subroutine at 63B
$F30    $D9D0   DRW      V9, VD, #0      ; Draw 0-byte sprite at V9, VD
$F32    $F21B   UNKNOWN  F21B            ; Unknown Fxxx instruction
$F34    $17AB   JP       $7AB            ; Jump to 7AB
$F36    $D8E1   DRW      V8, VE, #1      ; Draw 1-byte sprite at V8, VE
$F38    $8E29   UNKNOWN  8E29            ; Unknown 8xxx instruction
$F3A    $27DE   CALL     $7DE            ; Call subroutine at 7DE
$F3C    $289F   CALL     $89F            ; Call subroutine at 89F
$F3E    $EB94   UNKNOWN  $EB94           ; Unknown Exxx instruction
$F40    $E602   UNKNOWN  $E602           ; Unknown Exxx instruction
$F42    $79BF   ADD      V9, #BF         ; Add 191 to V9
$F44    $7156   ADD      V1, #56         ; Add 86 to V1
$F46    $F5CE   UNKNOWN  F5CE            ; Unknown Fxxx instruction
$F48    $2B57   CALL     $B57            ; Call subroutine at B57
$F4A    $6093   LD       V0, #93         ; Load 147 into V0
$F4C    $E27F   UNKNOWN  $E27F           ; Unknown Exxx instruction
$F4E    $A710   LD       I, $710         ; Load 710 into I
$F50    $E78A   UNKNOWN  $E78A           ; Unknown Exxx instruction
$F52    $E6CF   UNKNOWN  $E6CF           ; Unknown Exxx instruction
$F54    $E98E   UNKNOWN  $E98E           ; Unknown Exxx instruction
$F56    $E14C   UNKNOWN  $E14C           ; Unknown Exxx instruction
$F58    $7B51   ADD      VB, #51         ; Add 81 to VB
$F5A    $244B   CALL     $44B            ; Call subroutine at 44B
$F5C    $8FDF   UNKNOWN  8FDF            ; Unknown 8xxx instruction
$F5E    $0B65   SYS      $B65            ; System call to B65
$F60    $07B3   SYS      $7B3            ; System call to 7B3
$F62    $CB1D   RND      VB, #1D         ; VB = random & 1D
$F64    $3BCE   SE       VB, #CE         ; Skip if VB == 206
$F66    $FFF0   UNKNOWN  FFF0            ; Unknown Fxxx instruction
$F68    $E7B4   UNKNOWN  $E7B4           ; Unknown Exxx instruction
$F6A    $E2A1   SKNP     V2              ; Skip if key V2 not pressed
$F6C    $C515   RND      V5, #15         ; V5 = random & 15
$F6E    $5CA6   UNKNOWN  $5CA6           ; Unknown 5xxx instruction
$F70    $6459   LD       V4, #59         ; Load 89 into V4
$F72    $18C7   JP       $8C7            ; Jump to 8C7
$F74    $B8A0   JP       V0, $8A0        ; Jump to V0 + 8A0
$F76    $D91A   DRW      V9, V1, #A      ; Draw 10-byte sprite at V9, V1
$F78    $C268   RND      V2, #68         ; V2 = random & 68
$F7A    $DC21   DRW      VC, V2, #1      ; Draw 1-byte sprite at VC, V2
$F7C    $1E73   JP       $E73            ; Jump to E73
$F7E    $3926   SE       V9, #26         ; Skip if V9 == 38
$F80    $A4C6   LD       I, $4C6         ; Load 4C6 into I
$F82    $F105   UNKNOWN  F105            ; Unknown Fxxx instruction
$F84    $E352   UNKNOWN  $E352           ; Unknown Exxx instruction
$F86    $6150   LD       V1, #50         ; Load 80 into V1
$F88    $1C55   JP       $C55            ; Jump to C55
$F8A    $6C69   LD       VC, #69         ; Load 105 into VC
$F8C    $FA30   UNKNOWN  FA30            ; Unknown Fxxx instruction
$F8E    $0BE3   SYS      $BE3            ; System call to BE3
$F90    $A4E7   LD       I, $4E7         ; Load 4E7 into I
$F92    $6D42   LD       VD, #42         ; Load 66 into VD
$F94    $AA22   LD       I, $A22         ; Load A22 into I
$F96    $4C4A   SNE      VC, #4A         ; Skip if VC != 74
$F98    $90DC   UNKNOWN  $90DC           ; Unknown 9xxx instruction
$F9A    $C6F3   RND      V6, #F3         ; V6 = random & F3
$F9C    $E1D0   UNKNOWN  $E1D0           ; Unknown Exxx instruction
$F9E    $A4BB   LD       I, $4BB         ; Load 4BB into I
$FA0    $A757   LD       I, $757         ; Load 757 into I
$FA2    $8188   UNKNOWN  8188            ; Unknown 8xxx instruction
$FA4    $F989   UNKNOWN  F989            ; Unknown Fxxx instruction
$FA6    $0ACE   SYS      $ACE            ; System call to ACE
$FA8    $640B   LD       V4, #0B         ; Load 11 into V4
$FAA    $BB6D   JP       V0, $B6D        ; Jump to V0 + B6D
$FAC    $3498   SE       V4, #98         ; Skip if V4 == 152
$FAE    $92A8   UNKNOWN  $92A8           ; Unknown 9xxx instruction
$FB0    $CF85   RND      VF, #85         ; VF = random & 85
$FB2    $122E   JP       $22E            ; Jump to 22E
$FB4    $0CED   SYS      $CED            ; System call to CED
$FB6    $BFC8   JP       V0, $FC8        ; Jump to V0 + FC8
$FB8    $3CE0   SE       VC, #E0         ; Skip if VC == 224
$FBA    $9657   UNKNOWN  $9657           ; Unknown 9xxx instruction
$FBC    $D03C   DRW      V0, V3, #C      ; Draw 12-byte sprite at V0, V3
$FBE    $7F13   ADD      VF, #13         ; Add 19 to VF
$FC0    $0895   SYS      $895            ; System call to 895
$FC2    $D557   DRW      V5, V5, #7      ; Draw 7-byte sprite at V5, V5
$FC4    $36CC   SE       V6, #CC         ; Skip if V6 == 204
$FC6    $95D0   SNE      V5, VD          ; Skip if V5 != VD
$FC8    $CA37   RND      VA, #37         ; VA = random & 37
$FCA    $D283   DRW      V2, V8, #3      ; Draw 3-byte sprite at V2, V8
$FCC    $A9C6   LD       I, $9C6         ; Load 9C6 into I
$FCE    $4F03   SNE      VF, #03         ; Skip if VF != 3
$FD0    $FE62   UNKNOWN  FE62            ; Unknown Fxxx instruction
$FD2    $DFB1   DRW      VF, VB, #1      ; Draw 1-byte sprite at VF, VB
$FD4    $0DDB   SYS      $DDB            ; System call to DDB
$FD6    $CFFB   RND      VF, #FB         ; VF = random & FB
$FD8    $3CCB   SE       VC, #CB         ; Skip if VC == 203
$FDA    $F611   UNKNOWN  F611            ; Unknown Fxxx instruction
$FDC    $B6CB   JP       V0, $6CB        ; Jump to V0 + 6CB
$FDE    $D7BD   DRW      V7, VB, #D      ; Draw 13-byte sprite at V7, VB
$FE0    $80D6   SHR      V0              ; V0 >>= 1, VF = LSB
$FE2    $F107   LD       V1, DT          ; V1 = delay timer
$FE4    $8FBF   UNKNOWN  8FBF            ; Unknown 8xxx instruction
$FE6    $CAEC   RND      VA, #EC         ; VA = random & EC
$FE8    $EFEC   UNKNOWN  $EFEC           ; Unknown Exxx instruction
$FEA    $FCA1   UNKNOWN  FCA1            ; Unknown Fxxx instruction
$FEC    $5560   SE       V5, V6          ; Skip if V5 == V6
$FEE    $8F42   AND      VF, V4          ; VF &= V4
$FF0    $D274   DRW      V2, V7, #4      ; Draw 4-byte sprite at V2, V7
$FF2    $BB91   JP       V0, $B91        ; Jump to V0 + B91
$FF4    $F07C   UNKNOWN  F07C            ; Unknown Fxxx instruction
$FF6    $0B4B   SYS      $B4B            ; System call to B4B
$FF8    $78B7   ADD      V8, #B7         ; Add 183 to V8
$FFA    $629D   LD       V2, #9D         ; Load 157 into V2
$FFC    $DDF1   DRW      VD, VF, #1      ; Draw 1-byte sprite at VD, VF
$FFE    $FC10   UNKNOWN  FC10            ; Unknown Fxxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 489 (27.3%)
  LD      : 241 (13.4%)
  JP      : 221 (12.3%)
  SNE     : 129 ( 7.2%)
  ADD     : 120 ( 6.7%)
  RND     : 120 ( 6.7%)
  SE      : 116 ( 6.5%)
  DRW     : 114 ( 6.4%)
  CALL    : 101 ( 5.6%)
  SYS     :  97 ( 5.4%)
  SHL     :   9 ( 0.5%)
  SUBN    :   8 ( 0.4%)
  SHR     :   7 ( 0.4%)
  SUB     :   7 ( 0.4%)
  AND     :   6 ( 0.3%)
  XOR     :   5 ( 0.3%)
  OR      :   1 ( 0.1%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 361 (20.1%)
Arithmetic Operations: 147 (8.2%)
