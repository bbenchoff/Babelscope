
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B5433D01_I38637_C6030_bae56fd28dda.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 5433
Instance: 38637
Direction: ascending
Final Array: [202, 206, 210, 214, 218, 222, 226, 230]
Operations: R:0 W:8 C:794 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 125
Sort Array References:
  $236: LD I, $2A6 ; Load 2A6 into I
  $238: LD I, $AAE ; Load AAE into I
  $276: LD I, $2A6 ; Load 2A6 into I
  $278: LD I, $AAE ; Load AAE into I
  $2B6: LD I, $2A6 ; Load 2A6 into I
  $2B8: LD I, $AAE ; Load AAE into I
  $2F6: LD I, $2A6 ; Load 2A6 into I
  $2F8: LD I, $AAE ; Load AAE into I
  $322: LD I, $F4A ; Load F4A into I
  $32E: LD I, $002 ; Load 002 into I
  $376: LD I, $EA6 ; Load EA6 into I
  $37A: LD I, $59B ; Load 59B into I
  $3AC: LD I, $378 ; Load 378 into I
  $3E6: LD I, $8A5 ; Load 8A5 into I
  $41C: LD I, $45F ; Load 45F into I
  $426: LD I, $7CE ; Load 7CE into I
  $444: LD I, $8C4 ; Load 8C4 into I
  $464: LD I, $126 ; Load 126 into I
  $468: LD I, $F73 ; Load F73 into I
  $480: LD I, $32D ; Load 32D into I
  $49A: LD I, $320 ; Load 320 into I
  $4A0: LD I, $302 ; Load 302 into I
  $4A6: LD I, $297 ; Load 297 into I
  $52C: LD I, $2AF ; Load 2AF into I
  $542: LD I, $32C ; Load 32C into I
  $55E: LD I, $502 ; Load 502 into I
  $56C: LD I, $DF6 ; Load DF6 into I
  $586: LD I, $769 ; Load 769 into I
  $588: LD I, $55F ; Load 55F into I
  $5D2: LD I, $17A ; Load 17A into I
  $5E0: LD I, $7F2 ; Load 7F2 into I
  $5E2: LD I, $8D5 ; Load 8D5 into I
  $5E4: LD I, $8CD ; Load 8CD into I
  $634: LD I, $988 ; Load 988 into I
  $696: LD I, $61E ; Load 61E into I
  $6C2: LD I, $47F ; Load 47F into I
  $70E: LD I, $8EA ; Load 8EA into I
  $712: LD I, $174 ; Load 174 into I
  $71A: LD I, $16E ; Load 16E into I
  $726: LD I, $210 ; Load 210 into I
  $758: LD I, $077 ; Load 077 into I
  $772: LD I, $81D ; Load 81D into I
  $78A: LD I, $BCC ; Load BCC into I
  $796: LD I, $2C7 ; Load 2C7 into I
  $79A: LD I, $493 ; Load 493 into I
  $7A0: LD I, $4E6 ; Load 4E6 into I
  $7BA: LD I, $587 ; Load 587 into I
  $7C0: LD I, $DD4 ; Load DD4 into I
  $7CC: LD I, $621 ; Load 621 into I
  $7DE: LD I, $B5E ; Load B5E into I
  $7F6: LD I, $4DD ; Load 4DD into I
  $802: LD I, $215 ; Load 215 into I
  $814: LD I, $023 ; Load 023 into I
  $842: LD I, $33C ; Load 33C into I
  $850: LD I, $C2E ; Load C2E into I
  $852: LD I, $668 ; Load 668 into I
  $8A4: LD I, $AD7 ; Load AD7 into I
  $8CA: LD I, $157 ; Load 157 into I
  $8EA: LD I, $759 ; Load 759 into I
  $8EC: LD I, $821 ; Load 821 into I
  $904: LD I, $14F ; Load 14F into I
  $924: LD I, $A9B ; Load A9B into I
  $926: LD I, $8E6 ; Load 8E6 into I
  $94E: LD I, $3AE ; Load 3AE into I
  $9B2: LD I, $A02 ; Load A02 into I
  $9C2: LD I, $CED ; Load CED into I
  $A2E: LD I, $911 ; Load 911 into I
  $A30: LD I, $65E ; Load 65E into I
  $A50: LD I, $A87 ; Load A87 into I
  $A5C: LD I, $585 ; Load 585 into I
  $AA8: LD I, $2F7 ; Load 2F7 into I
  $AB2: LD I, $54A ; Load 54A into I
  $AB8: LD I, $699 ; Load 699 into I
  $ABC: LD I, $F03 ; Load F03 into I
  $ADC: LD I, $185 ; Load 185 into I
  $AF4: LD I, $973 ; Load 973 into I
  $AFC: LD I, $578 ; Load 578 into I
  $B0E: LD I, $D8F ; Load D8F into I
  $B1C: LD I, $35F ; Load 35F into I
  $B24: LD I, $8BE ; Load 8BE into I
  $B56: LD I, $169 ; Load 169 into I
  $B60: LD I, $7CC ; Load 7CC into I
  $B6C: LD I, $EA0 ; Load EA0 into I
  $B74: LD I, $F5B ; Load F5B into I
  $BAE: LD I, $3D8 ; Load 3D8 into I
  $BFE: LD I, $E5B ; Load E5B into I
  $C08: LD I, $2E0 ; Load 2E0 into I
  $C22: LD I, $639 ; Load 639 into I
  $C7E: LD I, $E50 ; Load E50 into I
  $C88: LD I, $D87 ; Load D87 into I
  $C8C: LD I, $DC8 ; Load DC8 into I
  $C92: LD I, $A19 ; Load A19 into I
  $C98: LD I, $AC5 ; Load AC5 into I
  $CA2: LD I, $468 ; Load 468 into I
  $CEA: LD I, $2EA ; Load 2EA into I
  $D42: LD I, $90F ; Load 90F into I
  $D56: LD [I], V0 ; Store V0-V0 at I
  $D66: LD I, $E19 ; Load E19 into I
  $D70: LD I, $B07 ; Load B07 into I
  $D76: LD I, $79A ; Load 79A into I
  $D7C: LD I, $D3C ; Load D3C into I
  $D9C: LD I, $3C9 ; Load 3C9 into I
  $DA4: LD I, $EC6 ; Load EC6 into I
  $DB8: LD I, $61E ; Load 61E into I
  $DD6: LD I, $20B ; Load 20B into I
  $DEC: LD I, $D90 ; Load D90 into I
  $E06: LD I, $0F3 ; Load 0F3 into I
  $E2A: LD I, $A6C ; Load A6C into I
  $E4A: LD I, $A35 ; Load A35 into I
  $E88: LD I, $7C0 ; Load 7C0 into I
  $E94: LD I, $CC8 ; Load CC8 into I
  $EC4: LD I, $BD8 ; Load BD8 into I
  $EFE: LD I, $DF2 ; Load DF2 into I
  $F36: LD I, $010 ; Load 010 into I
  $F3E: LD I, $76D ; Load 76D into I
  $F54: LD I, $CB4 ; Load CB4 into I
  $F66: LD I, $112 ; Load 112 into I
  $F90: LD I, $E32 ; Load E32 into I
  $F9E: LD I, $FF6 ; Load FF6 into I
  $FA6: LD I, $954 ; Load 954 into I
  $FA8: LD I, $FB6 ; Load FB6 into I
  $FAE: LD I, $3A0 ; Load 3A0 into I
  $FBE: LD I, $02C ; Load 02C into I
  $FDC: LD I, $BBD ; Load BBD into I
  $FE8: LD I, $061 ; Load 061 into I

CONTROL FLOW ANALYSIS:
Jumps: 230
Calls: 90
Branches: 264
Loops: 144
Loop Structures:
  $252 -> $216 (backward jump)
  $292 -> $216 (backward jump)
  $2BA -> $2B6 (backward jump)
  $2D2 -> $216 (backward jump)
  $2FA -> $2B6 (backward jump)
  $312 -> $216 (backward jump)
  $358 -> $15F (backward jump)
  $35C -> $2B3 (backward jump)
  $35E -> $1D0 (backward jump)
  $36C -> $2BF (backward jump)
  $394 -> $106 (backward jump)
  $39E -> $12A (backward jump)
  $3B6 -> $0E2 (backward jump)
  $41A -> $1B1 (backward jump)
  $478 -> $21A (backward jump)
  $4BA -> $273 (backward jump)
  $4DA -> $256 (backward jump)
  $536 -> $4FD (backward jump)
  $53A -> $13B (backward jump)
  $548 -> $1A7 (backward jump)
  $55A -> $289 (backward jump)
  $560 -> $08C (backward jump)
  $5E6 -> $12A (backward jump)
  $5FA -> $119 (backward jump)
  $61A -> $602 (backward jump)
  $642 -> $234 (backward jump)
  $668 -> $3FA (backward jump)
  $68C -> $336 (backward jump)
  $700 -> $2A5 (backward jump)
  $762 -> $59B (backward jump)
  $780 -> $502 (backward jump)
  $78E -> $687 (backward jump)
  $792 -> $55F (backward jump)
  $7B0 -> $1C4 (backward jump)
  $7B6 -> $59E (backward jump)
  $7DA -> $1A8 (backward jump)
  $7FC -> $4A0 (backward jump)
  $828 -> $4AA (backward jump)
  $832 -> $65F (backward jump)
  $844 -> $085 (backward jump)
  $84A -> $16B (backward jump)
  $882 -> $51D (backward jump)
  $88A -> $0D7 (backward jump)
  $8AC -> $1FB (backward jump)
  $8C4 -> $1FC (backward jump)
  $8CC -> $751 (backward jump)
  $8DE -> $6AB (backward jump)
  $90C -> $655 (backward jump)
  $916 -> $6C4 (backward jump)
  $922 -> $60C (backward jump)
  $928 -> $0D5 (backward jump)
  $932 -> $42E (backward jump)
  $962 -> $40D (backward jump)
  $972 -> $648 (backward jump)
  $98C -> $723 (backward jump)
  $9A0 -> $4BF (backward jump)
  $9AC -> $497 (backward jump)
  $9B0 -> $17D (backward jump)
  $9BC -> $0F9 (backward jump)
  $9C0 -> $3F7 (backward jump)
  $9DA -> $2EE (backward jump)
  $A00 -> $982 (backward jump)
  $A0E -> $051 (backward jump)
  $A14 -> $61D (backward jump)
  $A24 -> $8C3 (backward jump)
  $A48 -> $0D8 (backward jump)
  $A7A -> $067 (backward jump)
  $A7E -> $6DA (backward jump)
  $A80 -> $636 (backward jump)
  $AD6 -> $A77 (backward jump)
  $AF0 -> $391 (backward jump)
  $B02 -> $AFB (backward jump)
  $B08 -> $7F8 (backward jump)
  $B30 -> $854 (backward jump)
  $B3C -> $3CE (backward jump)
  $B50 -> $0A2 (backward jump)
  $B8A -> $A93 (backward jump)
  $B94 -> $7E3 (backward jump)
  $BA2 -> $065 (backward jump)
  $BA4 -> $211 (backward jump)
  $BAC -> $607 (backward jump)
  $BF8 -> $09E (backward jump)
  $C04 -> $A4B (backward jump)
  $C24 -> $499 (backward jump)
  $C26 -> $27E (backward jump)
  $C28 -> $C0B (backward jump)
  $C36 -> $957 (backward jump)
  $C6E -> $755 (backward jump)
  $C76 -> $061 (backward jump)
  $C86 -> $C42 (backward jump)
  $C9A -> $11A (backward jump)
  $CC2 -> $28E (backward jump)
  $CDA -> $9E6 (backward jump)
  $CE0 -> $4E1 (backward jump)
  $CEE -> $2B5 (backward jump)
  $D2C -> $1C2 (backward jump)
  $D2E -> $97B (backward jump)
  $D5E -> $A48 (backward jump)
  $D6C -> $551 (backward jump)
  $DB2 -> $9F4 (backward jump)
  $DBE -> $36D (backward jump)
  $DCC -> $8B4 (backward jump)
  $DE6 -> $758 (backward jump)
  $DF2 -> $C15 (backward jump)
  $DF4 -> $441 (backward jump)
  $E02 -> $2BE (backward jump)
  $E04 -> $5F4 (backward jump)
  $E08 -> $9F6 (backward jump)
  $E1C -> $684 (backward jump)
  $E22 -> $193 (backward jump)
  $E30 -> $4D5 (backward jump)
  $E36 -> $BCE (backward jump)
  $E3A -> $574 (backward jump)
  $E40 -> $AA1 (backward jump)
  $E64 -> $AA8 (backward jump)
  $E6A -> $2DC (backward jump)
  $E76 -> $5F5 (backward jump)
  $E7E -> $0D3 (backward jump)
  $E86 -> $D9A (backward jump)
  $E8A -> $D8C (backward jump)
  $E9C -> $2A3 (backward jump)
  $EB2 -> $B48 (backward jump)
  $EE8 -> $941 (backward jump)
  $EF4 -> $710 (backward jump)
  $EF8 -> $B1F (backward jump)
  $F1E -> $D11 (backward jump)
  $F2A -> $065 (backward jump)
  $F38 -> $29C (backward jump)
  $F5A -> $484 (backward jump)
  $F68 -> $8B7 (backward jump)
  $F6C -> $952 (backward jump)
  $F78 -> $F63 (backward jump)
  $F7A -> $354 (backward jump)
  $F7E -> $763 (backward jump)
  $F80 -> $2F2 (backward jump)
  $F94 -> $8F8 (backward jump)
  $F96 -> $534 (backward jump)
  $F98 -> $DAC (backward jump)
  $FB0 -> $23B (backward jump)
  $FB2 -> $549 (backward jump)
  $FCA -> $C65 (backward jump)
  $FCC -> $C3F (backward jump)
  $FF6 -> $E3F (backward jump)
  $FFA -> $468 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $CACE   RND      VA, #CE         ; VA = random & CE
$202    $D2D6   DRW      V2, VD, #6      ; Draw 6-byte sprite at V2, VD
$204    $DADE   DRW      VA, VD, #E      ; Draw 14-byte sprite at VA, VD
$206    $E2E6   UNKNOWN  $E2E6           ; Unknown Exxx instruction
$208    $EAEE   UNKNOWN  $EAEE           ; Unknown Exxx instruction
$20A    $F2F6   UNKNOWN  F2F6            ; Unknown Fxxx instruction
$20C    $FAFE   UNKNOWN  FAFE            ; Unknown Fxxx instruction
$20E    $0206   SYS      $206            ; System call to 206
$210    $0A0E   SYS      $A0E            ; System call to A0E
$212    $1216   JP       $216            ; Jump to 216
$214    $1A1E   JP       $A1E            ; Jump to A1E
$216    $2226   CALL     $226            ; Call subroutine at 226
$218    $2A2E   CALL     $A2E            ; Call subroutine at A2E
$21A    $3236   SE       V2, #36         ; Skip if V2 == 54
$21C    $3A3E   SE       VA, #3E         ; Skip if VA == 62
$21E    $4246   SNE      V2, #46         ; Skip if V2 != 70
$220    $4A4E   SNE      VA, #4E         ; Skip if VA != 78
$222    $5256   UNKNOWN  $5256           ; Unknown 5xxx instruction
$224    $5A5E   UNKNOWN  $5A5E           ; Unknown 5xxx instruction
$226    $6266   LD       V2, #66         ; Load 102 into V2
$228    $6A6E   LD       VA, #6E         ; Load 110 into VA
$22A    $7276   ADD      V2, #76         ; Add 118 to V2
$22C    $7A7E   ADD      VA, #7E         ; Add 126 to VA
$22E    $8286   SHR      V2              ; V2 >>= 1, VF = LSB
$230    $8A8E   SHL      VA              ; VA <<= 1, VF = MSB
$232    $9296   UNKNOWN  $9296           ; Unknown 9xxx instruction
$234    $9A9E   UNKNOWN  $9A9E           ; Unknown 9xxx instruction
$236    $A2A6   LD       I, $2A6         ; Load 2A6 into I
$238    $AAAE   LD       I, $AAE         ; Load AAE into I
$23A    $B2B6   JP       V0, $2B6        ; Jump to V0 + 2B6
$23C    $BABE   JP       V0, $ABE        ; Jump to V0 + ABE
$23E    $C2C6   RND      V2, #C6         ; V2 = random & C6
$240    $CACE   RND      VA, #CE         ; VA = random & CE
$242    $D2D6   DRW      V2, VD, #6      ; Draw 6-byte sprite at V2, VD
$244    $DADE   DRW      VA, VD, #E      ; Draw 14-byte sprite at VA, VD
$246    $E2E6   UNKNOWN  $E2E6           ; Unknown Exxx instruction
$248    $EAEE   UNKNOWN  $EAEE           ; Unknown Exxx instruction
$24A    $F2F6   UNKNOWN  F2F6            ; Unknown Fxxx instruction
$24C    $FAFE   UNKNOWN  FAFE            ; Unknown Fxxx instruction
$24E    $0206   SYS      $206            ; System call to 206
$250    $0A0E   SYS      $A0E            ; System call to A0E
$252    $1216   JP       $216            ; Jump to 216
$254    $1A1E   JP       $A1E            ; Jump to A1E
$256    $2226   CALL     $226            ; Call subroutine at 226
$258    $2A2E   CALL     $A2E            ; Call subroutine at A2E
$25A    $3236   SE       V2, #36         ; Skip if V2 == 54
$25C    $3A3E   SE       VA, #3E         ; Skip if VA == 62
$25E    $4246   SNE      V2, #46         ; Skip if V2 != 70
$260    $4A4E   SNE      VA, #4E         ; Skip if VA != 78
$262    $5256   UNKNOWN  $5256           ; Unknown 5xxx instruction
$264    $5A5E   UNKNOWN  $5A5E           ; Unknown 5xxx instruction
$266    $6266   LD       V2, #66         ; Load 102 into V2
$268    $6A6E   LD       VA, #6E         ; Load 110 into VA
$26A    $7276   ADD      V2, #76         ; Add 118 to V2
$26C    $7A7E   ADD      VA, #7E         ; Add 126 to VA
$26E    $8286   SHR      V2              ; V2 >>= 1, VF = LSB
$270    $8A8E   SHL      VA              ; VA <<= 1, VF = MSB
$272    $9296   UNKNOWN  $9296           ; Unknown 9xxx instruction
$274    $9A9E   UNKNOWN  $9A9E           ; Unknown 9xxx instruction
$276    $A2A6   LD       I, $2A6         ; Load 2A6 into I
$278    $AAAE   LD       I, $AAE         ; Load AAE into I
$27A    $B2B6   JP       V0, $2B6        ; Jump to V0 + 2B6
$27C    $BABE   JP       V0, $ABE        ; Jump to V0 + ABE
$27E    $C2C6   RND      V2, #C6         ; V2 = random & C6
$280    $CACE   RND      VA, #CE         ; VA = random & CE
$282    $D2D6   DRW      V2, VD, #6      ; Draw 6-byte sprite at V2, VD
$284    $DADE   DRW      VA, VD, #E      ; Draw 14-byte sprite at VA, VD
$286    $E2E6   UNKNOWN  $E2E6           ; Unknown Exxx instruction
$288    $EAEE   UNKNOWN  $EAEE           ; Unknown Exxx instruction
$28A    $F2F6   UNKNOWN  F2F6            ; Unknown Fxxx instruction
$28C    $FAFE   UNKNOWN  FAFE            ; Unknown Fxxx instruction
$28E    $0206   SYS      $206            ; System call to 206
$290    $0A0E   SYS      $A0E            ; System call to A0E
$292    $1216   JP       $216            ; Jump to 216
$294    $1A1E   JP       $A1E            ; Jump to A1E
$296    $2226   CALL     $226            ; Call subroutine at 226
$298    $2A2E   CALL     $A2E            ; Call subroutine at A2E
$29A    $3236   SE       V2, #36         ; Skip if V2 == 54
$29C    $3A3E   SE       VA, #3E         ; Skip if VA == 62
$29E    $4246   SNE      V2, #46         ; Skip if V2 != 70
$2A0    $4A4E   SNE      VA, #4E         ; Skip if VA != 78
$2A2    $5256   UNKNOWN  $5256           ; Unknown 5xxx instruction
$2A4    $5A5E   UNKNOWN  $5A5E           ; Unknown 5xxx instruction
$2A6    $6266   LD       V2, #66         ; Load 102 into V2
$2A8    $6A6E   LD       VA, #6E         ; Load 110 into VA
$2AA    $7276   ADD      V2, #76         ; Add 118 to V2
$2AC    $7A7E   ADD      VA, #7E         ; Add 126 to VA
$2AE    $8286   SHR      V2              ; V2 >>= 1, VF = LSB
$2B0    $8A8E   SHL      VA              ; VA <<= 1, VF = MSB
$2B2    $9296   UNKNOWN  $9296           ; Unknown 9xxx instruction
$2B4    $9A9E   UNKNOWN  $9A9E           ; Unknown 9xxx instruction
$2B6    $A2A6   LD       I, $2A6         ; Load 2A6 into I
$2B8    $AAAE   LD       I, $AAE         ; Load AAE into I
$2BA    $B2B6   JP       V0, $2B6        ; Jump to V0 + 2B6
$2BC    $BABE   JP       V0, $ABE        ; Jump to V0 + ABE
$2BE    $C2C6   RND      V2, #C6         ; V2 = random & C6
$2C0    $CACE   RND      VA, #CE         ; VA = random & CE
$2C2    $D2D6   DRW      V2, VD, #6      ; Draw 6-byte sprite at V2, VD
$2C4    $DADE   DRW      VA, VD, #E      ; Draw 14-byte sprite at VA, VD
$2C6    $E2E6   UNKNOWN  $E2E6           ; Unknown Exxx instruction
$2C8    $EAEE   UNKNOWN  $EAEE           ; Unknown Exxx instruction
$2CA    $F2F6   UNKNOWN  F2F6            ; Unknown Fxxx instruction
$2CC    $FAFE   UNKNOWN  FAFE            ; Unknown Fxxx instruction
$2CE    $0206   SYS      $206            ; System call to 206
$2D0    $0A0E   SYS      $A0E            ; System call to A0E
$2D2    $1216   JP       $216            ; Jump to 216
$2D4    $1A1E   JP       $A1E            ; Jump to A1E
$2D6    $2226   CALL     $226            ; Call subroutine at 226
$2D8    $2A2E   CALL     $A2E            ; Call subroutine at A2E
$2DA    $3236   SE       V2, #36         ; Skip if V2 == 54
$2DC    $3A3E   SE       VA, #3E         ; Skip if VA == 62
$2DE    $4246   SNE      V2, #46         ; Skip if V2 != 70
$2E0    $4A4E   SNE      VA, #4E         ; Skip if VA != 78
$2E2    $5256   UNKNOWN  $5256           ; Unknown 5xxx instruction
$2E4    $5A5E   UNKNOWN  $5A5E           ; Unknown 5xxx instruction
$2E6    $6266   LD       V2, #66         ; Load 102 into V2
$2E8    $6A6E   LD       VA, #6E         ; Load 110 into VA
$2EA    $7276   ADD      V2, #76         ; Add 118 to V2
$2EC    $7A7E   ADD      VA, #7E         ; Add 126 to VA
$2EE    $8286   SHR      V2              ; V2 >>= 1, VF = LSB
$2F0    $8A8E   SHL      VA              ; VA <<= 1, VF = MSB
$2F2    $9296   UNKNOWN  $9296           ; Unknown 9xxx instruction
$2F4    $9A9E   UNKNOWN  $9A9E           ; Unknown 9xxx instruction
$2F6    $A2A6   LD       I, $2A6         ; Load 2A6 into I
$2F8    $AAAE   LD       I, $AAE         ; Load AAE into I
$2FA    $B2B6   JP       V0, $2B6        ; Jump to V0 + 2B6
$2FC    $BABE   JP       V0, $ABE        ; Jump to V0 + ABE
$2FE    $C2C6   RND      V2, #C6         ; V2 = random & C6
$300    $CACE   RND      VA, #CE         ; VA = random & CE
$302    $D2D6   DRW      V2, VD, #6      ; Draw 6-byte sprite at V2, VD
$304    $DADE   DRW      VA, VD, #E      ; Draw 14-byte sprite at VA, VD
$306    $E2E6   UNKNOWN  $E2E6           ; Unknown Exxx instruction
$308    $EAEE   UNKNOWN  $EAEE           ; Unknown Exxx instruction
$30A    $F2F6   UNKNOWN  F2F6            ; Unknown Fxxx instruction
$30C    $FAFE   UNKNOWN  FAFE            ; Unknown Fxxx instruction
$30E    $0206   SYS      $206            ; System call to 206
$310    $0A0E   SYS      $A0E            ; System call to A0E
$312    $1216   JP       $216            ; Jump to 216
$314    $1A1E   JP       $A1E            ; Jump to A1E
$316    $2226   CALL     $226            ; Call subroutine at 226
$318    $2A2E   CALL     $A2E            ; Call subroutine at A2E
$31A    $3236   SE       V2, #36         ; Skip if V2 == 54
$31C    $3A3E   SE       VA, #3E         ; Skip if VA == 62
$31E    $4246   SNE      V2, #46         ; Skip if V2 != 70
$320    $4A4E   SNE      VA, #4E         ; Skip if VA != 78
$322    $AF4A   LD       I, $F4A         ; Load F4A into I
$324    $D41B   DRW      V4, V1, #B      ; Draw 11-byte sprite at V4, V1
$326    $7F2E   ADD      VF, #2E         ; Add 46 to VF
$328    $3E6A   SE       VE, #6A         ; Skip if VE == 106
$32A    $C571   RND      V5, #71         ; V5 = random & 71
$32C    $0FDC   SYS      $FDC            ; System call to FDC
$32E    $A002   LD       I, $002         ; Load 002 into I
$330    $7F23   ADD      VF, #23         ; Add 35 to VF
$332    $B6AA   JP       V0, $6AA        ; Jump to V0 + 6AA
$334    $D3FC   DRW      V3, VF, #C      ; Draw 12-byte sprite at V3, VF
$336    $13C9   JP       $3C9            ; Jump to 3C9
$338    $8F0C   UNKNOWN  8F0C            ; Unknown 8xxx instruction
$33A    $99F1   UNKNOWN  $99F1           ; Unknown 9xxx instruction
$33C    $51F8   UNKNOWN  $51F8           ; Unknown 5xxx instruction
$33E    $E440   UNKNOWN  $E440           ; Unknown Exxx instruction
$340    $BE94   JP       V0, $E94        ; Jump to V0 + E94
$342    $2B4C   CALL     $B4C            ; Call subroutine at B4C
$344    $E70C   UNKNOWN  $E70C           ; Unknown Exxx instruction
$346    $E6F3   UNKNOWN  $E6F3           ; Unknown Exxx instruction
$348    $05BA   SYS      $5BA            ; System call to 5BA
$34A    $3616   SE       V6, #16         ; Skip if V6 == 22
$34C    $039B   SYS      $39B            ; System call to 39B
$34E    $07E8   SYS      $7E8            ; System call to 7E8
$350    $45AD   SNE      V5, #AD         ; Skip if V5 != 173
$352    $3E39   SE       VE, #39         ; Skip if VE == 57
$354    $6F8F   LD       VF, #8F         ; Load 143 into VF
$356    $B5FA   JP       V0, $5FA        ; Jump to V0 + 5FA
$358    $B15F   JP       V0, $15F        ; Jump to V0 + 15F
$35A    $2499   CALL     $499            ; Call subroutine at 499
$35C    $12B3   JP       $2B3            ; Jump to 2B3
$35E    $11D0   JP       $1D0            ; Jump to 1D0
$360    $E42D   UNKNOWN  $E42D           ; Unknown Exxx instruction
$362    $EE37   UNKNOWN  $EE37           ; Unknown Exxx instruction
$364    $50BD   UNKNOWN  $50BD           ; Unknown 5xxx instruction
$366    $82B8   UNKNOWN  82B8            ; Unknown 8xxx instruction
$368    $7960   ADD      V9, #60         ; Add 96 to V9
$36A    $49F4   SNE      V9, #F4         ; Skip if V9 != 244
$36C    $B2BF   JP       V0, $2BF        ; Jump to V0 + 2BF
$36E    $6F6B   LD       VF, #6B         ; Load 107 into VF
$370    $8B18   UNKNOWN  8B18            ; Unknown 8xxx instruction
$372    $1542   JP       $542            ; Jump to 542
$374    $D5F3   DRW      V5, VF, #3      ; Draw 3-byte sprite at V5, VF
$376    $AEA6   LD       I, $EA6         ; Load EA6 into I
$378    $44D1   SNE      V4, #D1         ; Skip if V4 != 209
$37A    $A59B   LD       I, $59B         ; Load 59B into I
$37C    $073E   SYS      $73E            ; System call to 73E
$37E    $31FE   SE       V1, #FE         ; Skip if V1 == 254
$380    $5D00   SE       VD, V0          ; Skip if VD == V0
$382    $31A0   SE       V1, #A0         ; Skip if V1 == 160
$384    $92F1   UNKNOWN  $92F1           ; Unknown 9xxx instruction
$386    $9B78   UNKNOWN  $9B78           ; Unknown 9xxx instruction
$388    $8568   UNKNOWN  8568            ; Unknown 8xxx instruction
$38A    $E336   UNKNOWN  $E336           ; Unknown Exxx instruction
$38C    $5792   UNKNOWN  $5792           ; Unknown 5xxx instruction
$38E    $DBE4   DRW      VB, VE, #4      ; Draw 4-byte sprite at VB, VE
$390    $3168   SE       V1, #68         ; Skip if V1 == 104
$392    $7A53   ADD      VA, #53         ; Add 83 to VA
$394    $B106   JP       V0, $106        ; Jump to V0 + 106
$396    $D111   DRW      V1, V1, #1      ; Draw 1-byte sprite at V1, V1
$398    $1DE6   JP       $DE6            ; Jump to DE6
$39A    $6AF0   LD       VA, #F0         ; Load 240 into VA
$39C    $8F64   ADD      VF, V6          ; VF += V6, VF = carry
$39E    $B12A   JP       V0, $12A        ; Jump to V0 + 12A
$3A0    $DD6D   DRW      VD, V6, #D      ; Draw 13-byte sprite at VD, V6
$3A2    $6A64   LD       VA, #64         ; Load 100 into VA
$3A4    $4EAD   SNE      VE, #AD         ; Skip if VE != 173
$3A6    $3952   SE       V9, #52         ; Skip if V9 == 82
$3A8    $4027   SNE      V0, #27         ; Skip if V0 != 39
$3AA    $4848   SNE      V8, #48         ; Skip if V8 != 72
$3AC    $A378   LD       I, $378         ; Load 378 into I
$3AE    $8B08   UNKNOWN  8B08            ; Unknown 8xxx instruction
$3B0    $8BBE   SHL      VB              ; VB <<= 1, VF = MSB
$3B2    $71A1   ADD      V1, #A1         ; Add 161 to V1
$3B4    $2525   CALL     $525            ; Call subroutine at 525
$3B6    $B0E2   JP       V0, $0E2        ; Jump to V0 + 0E2
$3B8    $7696   ADD      V6, #96         ; Add 150 to V6
$3BA    $922F   UNKNOWN  $922F           ; Unknown 9xxx instruction
$3BC    $7114   ADD      V1, #14         ; Add 20 to V1
$3BE    $F490   UNKNOWN  F490            ; Unknown Fxxx instruction
$3C0    $67B5   LD       V7, #B5         ; Load 181 into V7
$3C2    $9776   UNKNOWN  $9776           ; Unknown 9xxx instruction
$3C4    $8945   SUB      V9, V4          ; V9 -= V4, VF = !borrow
$3C6    $465A   SNE      V6, #5A         ; Skip if V6 != 90
$3C8    $4CA8   SNE      VC, #A8         ; Skip if VC != 168
$3CA    $5CF4   UNKNOWN  $5CF4           ; Unknown 5xxx instruction
$3CC    $D7E3   DRW      V7, VE, #3      ; Draw 3-byte sprite at V7, VE
$3CE    $61ED   LD       V1, #ED         ; Load 237 into V1
$3D0    $269E   CALL     $69E            ; Call subroutine at 69E
$3D2    $2606   CALL     $606            ; Call subroutine at 606
$3D4    $9A5D   UNKNOWN  $9A5D           ; Unknown 9xxx instruction
$3D6    $7D9D   ADD      VD, #9D         ; Add 157 to VD
$3D8    $E5E7   UNKNOWN  $E5E7           ; Unknown Exxx instruction
$3DA    $D2D6   DRW      V2, VD, #6      ; Draw 6-byte sprite at V2, VD
$3DC    $B813   JP       V0, $813        ; Jump to V0 + 813
$3DE    $8447   SUBN     V4, V4          ; V4 = V4 - V4, VF = !borrow
$3E0    $C600   RND      V6, #00         ; V6 = random & 00
$3E2    $0A82   SYS      $A82            ; System call to A82
$3E4    $84E9   UNKNOWN  84E9            ; Unknown 8xxx instruction
$3E6    $A8A5   LD       I, $8A5         ; Load 8A5 into I
$3E8    $D768   DRW      V7, V6, #8      ; Draw 8-byte sprite at V7, V6
$3EA    $3DD2   SE       VD, #D2         ; Skip if VD == 210
$3EC    $2DFC   CALL     $DFC            ; Call subroutine at DFC
$3EE    $8A42   AND      VA, V4          ; VA &= V4
$3F0    $C8FA   RND      V8, #FA         ; V8 = random & FA
$3F2    $0DCC   SYS      $DCC            ; System call to DCC
$3F4    $3A45   SE       VA, #45         ; Skip if VA == 69
$3F6    $207F   CALL     $07F            ; Call subroutine at 07F
$3F8    $5F5B   UNKNOWN  $5F5B           ; Unknown 5xxx instruction
$3FA    $95A5   UNKNOWN  $95A5           ; Unknown 9xxx instruction
$3FC    $9C14   UNKNOWN  $9C14           ; Unknown 9xxx instruction
$3FE    $6C7F   LD       VC, #7F         ; Load 127 into VC
$400    $6925   LD       V9, #25         ; Load 37 into V9
$402    $94B1   UNKNOWN  $94B1           ; Unknown 9xxx instruction
$404    $251C   CALL     $51C            ; Call subroutine at 51C
$406    $9B9D   UNKNOWN  $9B9D           ; Unknown 9xxx instruction
$408    $34D0   SE       V4, #D0         ; Skip if V4 == 208
$40A    $8FB6   SHR      VF              ; VF >>= 1, VF = LSB
$40C    $8C16   SHR      VC              ; VC >>= 1, VF = LSB
$40E    $F4EB   UNKNOWN  F4EB            ; Unknown Fxxx instruction
$410    $90F4   UNKNOWN  $90F4           ; Unknown 9xxx instruction
$412    $F382   UNKNOWN  F382            ; Unknown Fxxx instruction
$414    $99A1   UNKNOWN  $99A1           ; Unknown 9xxx instruction
$416    $C320   RND      V3, #20         ; V3 = random & 20
$418    $86CD   UNKNOWN  86CD            ; Unknown 8xxx instruction
$41A    $11B1   JP       $1B1            ; Jump to 1B1
$41C    $A45F   LD       I, $45F         ; Load 45F into I
$41E    $D4B4   DRW      V4, VB, #4      ; Draw 4-byte sprite at V4, VB
$420    $4D3F   SNE      VD, #3F         ; Skip if VD != 63
$422    $8643   XOR      V6, V4          ; V6 ^= V4
$424    $54B8   UNKNOWN  $54B8           ; Unknown 5xxx instruction
$426    $A7CE   LD       I, $7CE         ; Load 7CE into I
$428    $3A8E   SE       VA, #8E         ; Skip if VA == 142
$42A    $DE06   DRW      VE, V0, #6      ; Draw 6-byte sprite at VE, V0
$42C    $3516   SE       V5, #16         ; Skip if V5 == 22
$42E    $06A7   SYS      $6A7            ; System call to 6A7
$430    $2FAA   CALL     $FAA            ; Call subroutine at FAA
$432    $665C   LD       V6, #5C         ; Load 92 into V6
$434    $BA9E   JP       V0, $A9E        ; Jump to V0 + A9E
$436    $5950   SE       V9, V5          ; Skip if V9 == V5
$438    $BA53   JP       V0, $A53        ; Jump to V0 + A53
$43A    $9442   UNKNOWN  $9442           ; Unknown 9xxx instruction
$43C    $3329   SE       V3, #29         ; Skip if V3 == 41
$43E    $CA52   RND      VA, #52         ; VA = random & 52
$440    $DAB1   DRW      VA, VB, #1      ; Draw 1-byte sprite at VA, VB
$442    $C113   RND      V1, #13         ; V1 = random & 13
$444    $A8C4   LD       I, $8C4         ; Load 8C4 into I
$446    $E802   UNKNOWN  $E802           ; Unknown Exxx instruction
$448    $57D4   UNKNOWN  $57D4           ; Unknown 5xxx instruction
$44A    $CA21   RND      VA, #21         ; VA = random & 21
$44C    $C8D7   RND      V8, #D7         ; V8 = random & D7
$44E    $F9D9   UNKNOWN  F9D9            ; Unknown Fxxx instruction
$450    $BABD   JP       V0, $ABD        ; Jump to V0 + ABD
$452    $E629   UNKNOWN  $E629           ; Unknown Exxx instruction
$454    $C842   RND      V8, #42         ; V8 = random & 42
$456    $3E65   SE       VE, #65         ; Skip if VE == 101
$458    $2E30   CALL     $E30            ; Call subroutine at E30
$45A    $914F   UNKNOWN  $914F           ; Unknown 9xxx instruction
$45C    $41CF   SNE      V1, #CF         ; Skip if V1 != 207
$45E    $57D8   UNKNOWN  $57D8           ; Unknown 5xxx instruction
$460    $F494   UNKNOWN  F494            ; Unknown Fxxx instruction
$462    $3770   SE       V7, #70         ; Skip if V7 == 112
$464    $A126   LD       I, $126         ; Load 126 into I
$466    $58BB   UNKNOWN  $58BB           ; Unknown 5xxx instruction
$468    $AF73   LD       I, $F73         ; Load F73 into I
$46A    $BDA2   JP       V0, $DA2        ; Jump to V0 + DA2
$46C    $0F7D   SYS      $F7D            ; System call to F7D
$46E    $F3A7   UNKNOWN  F3A7            ; Unknown Fxxx instruction
$470    $C845   RND      V8, #45         ; V8 = random & 45
$472    $4681   SNE      V6, #81         ; Skip if V6 != 129
$474    $393E   SE       V9, #3E         ; Skip if V9 == 62
$476    $DAF1   DRW      VA, VF, #1      ; Draw 1-byte sprite at VA, VF
$478    $121A   JP       $21A            ; Jump to 21A
$47A    $F6A4   UNKNOWN  F6A4            ; Unknown Fxxx instruction
$47C    $530F   UNKNOWN  $530F           ; Unknown 5xxx instruction
$47E    $880B   UNKNOWN  880B            ; Unknown 8xxx instruction
$480    $A32D   LD       I, $32D         ; Load 32D into I
$482    $0421   SYS      $421            ; System call to 421
$484    $4966   SNE      V9, #66         ; Skip if V9 != 102
$486    $B754   JP       V0, $754        ; Jump to V0 + 754
$488    $FFAD   UNKNOWN  FFAD            ; Unknown Fxxx instruction
$48A    $6D3C   LD       VD, #3C         ; Load 60 into VD
$48C    $0096   SYS      $096            ; System call to 096
$48E    $7FD0   ADD      VF, #D0         ; Add 208 to VF
$490    $9968   UNKNOWN  $9968           ; Unknown 9xxx instruction
$492    $767B   ADD      V6, #7B         ; Add 123 to V6
$494    $4294   SNE      V2, #94         ; Skip if V2 != 148
$496    $3B7B   SE       VB, #7B         ; Skip if VB == 123
$498    $64AF   LD       V4, #AF         ; Load 175 into V4
$49A    $A320   LD       I, $320         ; Load 320 into I
$49C    $D514   DRW      V5, V1, #4      ; Draw 4-byte sprite at V5, V1
$49E    $6CCB   LD       VC, #CB         ; Load 203 into VC
$4A0    $A302   LD       I, $302         ; Load 302 into I
$4A2    $63A4   LD       V3, #A4         ; Load 164 into V3
$4A4    $4BC9   SNE      VB, #C9         ; Skip if VB != 201
$4A6    $A297   LD       I, $297         ; Load 297 into I
$4A8    $C6F8   RND      V6, #F8         ; V6 = random & F8
$4AA    $F8E8   UNKNOWN  F8E8            ; Unknown Fxxx instruction
$4AC    $32E0   SE       V2, #E0         ; Skip if V2 == 224
$4AE    $9099   UNKNOWN  $9099           ; Unknown 9xxx instruction
$4B0    $9686   UNKNOWN  $9686           ; Unknown 9xxx instruction
$4B2    $0EDE   SYS      $EDE            ; System call to EDE
$4B4    $15E5   JP       $5E5            ; Jump to 5E5
$4B6    $CDB6   RND      VD, #B6         ; VD = random & B6
$4B8    $8306   SHR      V3              ; V3 >>= 1, VF = LSB
$4BA    $B273   JP       V0, $273        ; Jump to V0 + 273
$4BC    $3E3C   SE       VE, #3C         ; Skip if VE == 60
$4BE    $BB06   JP       V0, $B06        ; Jump to V0 + B06
$4C0    $5C0E   UNKNOWN  $5C0E           ; Unknown 5xxx instruction
$4C2    $377C   SE       V7, #7C         ; Skip if V7 == 124
$4C4    $8C4A   UNKNOWN  8C4A            ; Unknown 8xxx instruction
$4C6    $C92B   RND      V9, #2B         ; V9 = random & 2B
$4C8    $CBB4   RND      VB, #B4         ; VB = random & B4
$4CA    $06B8   SYS      $6B8            ; System call to 6B8
$4CC    $60A8   LD       V0, #A8         ; Load 168 into V0
$4CE    $EA03   UNKNOWN  $EA03           ; Unknown Exxx instruction
$4D0    $2891   CALL     $891            ; Call subroutine at 891
$4D2    $49F7   SNE      V9, #F7         ; Skip if V9 != 247
$4D4    $D807   DRW      V8, V0, #7      ; Draw 7-byte sprite at V8, V0
$4D6    $EE87   UNKNOWN  $EE87           ; Unknown Exxx instruction
$4D8    $EB68   UNKNOWN  $EB68           ; Unknown Exxx instruction
$4DA    $B256   JP       V0, $256        ; Jump to V0 + 256
$4DC    $2F10   CALL     $F10            ; Call subroutine at F10
$4DE    $ECD1   UNKNOWN  $ECD1           ; Unknown Exxx instruction
$4E0    $BDED   JP       V0, $DED        ; Jump to V0 + DED
$4E2    $23C0   CALL     $3C0            ; Call subroutine at 3C0
$4E4    $7168   ADD      V1, #68         ; Add 104 to V1
$4E6    $F4F7   UNKNOWN  F4F7            ; Unknown Fxxx instruction
$4E8    $6837   LD       V8, #37         ; Load 55 into V8
$4EA    $7224   ADD      V2, #24         ; Add 36 to V2
$4EC    $0750   SYS      $750            ; System call to 750
$4EE    $E1B7   UNKNOWN  $E1B7           ; Unknown Exxx instruction
$4F0    $D3F0   DRW      V3, VF, #0      ; Draw 0-byte sprite at V3, VF
$4F2    $6D07   LD       VD, #07         ; Load 7 into VD
$4F4    $BC07   JP       V0, $C07        ; Jump to V0 + C07
$4F6    $BDD2   JP       V0, $DD2        ; Jump to V0 + DD2
$4F8    $F16B   UNKNOWN  F16B            ; Unknown Fxxx instruction
$4FA    $D47B   DRW      V4, V7, #B      ; Draw 11-byte sprite at V4, V7
$4FC    $6DE3   LD       VD, #E3         ; Load 227 into VD
$4FE    $9AF2   UNKNOWN  $9AF2           ; Unknown 9xxx instruction
$500    $E144   UNKNOWN  $E144           ; Unknown Exxx instruction
$502    $4082   SNE      V0, #82         ; Skip if V0 != 130
$504    $7AB9   ADD      VA, #B9         ; Add 185 to VA
$506    $BFA7   JP       V0, $FA7        ; Jump to V0 + FA7
$508    $5AD5   UNKNOWN  $5AD5           ; Unknown 5xxx instruction
$50A    $F91F   UNKNOWN  F91F            ; Unknown Fxxx instruction
$50C    $1724   JP       $724            ; Jump to 724
$50E    $063A   SYS      $63A            ; System call to 63A
$510    $3F43   SE       VF, #43         ; Skip if VF == 67
$512    $3DAC   SE       VD, #AC         ; Skip if VD == 172
$514    $1896   JP       $896            ; Jump to 896
$516    $967B   UNKNOWN  $967B           ; Unknown 9xxx instruction
$518    $82EC   UNKNOWN  82EC            ; Unknown 8xxx instruction
$51A    $FC3C   UNKNOWN  FC3C            ; Unknown Fxxx instruction
$51C    $F82E   UNKNOWN  F82E            ; Unknown Fxxx instruction
$51E    $4FB2   SNE      VF, #B2         ; Skip if VF != 178
$520    $4CE5   SNE      VC, #E5         ; Skip if VC != 229
$522    $B616   JP       V0, $616        ; Jump to V0 + 616
$524    $0300   SYS      $300            ; System call to 300
$526    $4302   SNE      V3, #02         ; Skip if V3 != 2
$528    $9919   UNKNOWN  $9919           ; Unknown 9xxx instruction
$52A    $0173   SYS      $173            ; System call to 173
$52C    $A2AF   LD       I, $2AF         ; Load 2AF into I
$52E    $F7B1   UNKNOWN  F7B1            ; Unknown Fxxx instruction
$530    $F766   UNKNOWN  F766            ; Unknown Fxxx instruction
$532    $7693   ADD      V6, #93         ; Add 147 to V6
$534    $63FB   LD       V3, #FB         ; Load 251 into V3
$536    $14FD   JP       $4FD            ; Jump to 4FD
$538    $DE9E   DRW      VE, V9, #E      ; Draw 14-byte sprite at VE, V9
$53A    $113B   JP       $13B            ; Jump to 13B
$53C    $06FF   SYS      $6FF            ; System call to 6FF
$53E    $C3D8   RND      V3, #D8         ; V3 = random & D8
$540    $2512   CALL     $512            ; Call subroutine at 512
$542    $A32C   LD       I, $32C         ; Load 32C into I
$544    $E39F   UNKNOWN  $E39F           ; Unknown Exxx instruction
$546    $E523   UNKNOWN  $E523           ; Unknown Exxx instruction
$548    $11A7   JP       $1A7            ; Jump to 1A7
$54A    $0869   SYS      $869            ; System call to 869
$54C    $BFBB   JP       V0, $FBB        ; Jump to V0 + FBB
$54E    $4B23   SNE      VB, #23         ; Skip if VB != 35
$550    $F450   UNKNOWN  F450            ; Unknown Fxxx instruction
$552    $0419   SYS      $419            ; System call to 419
$554    $D3B1   DRW      V3, VB, #1      ; Draw 1-byte sprite at V3, VB
$556    $5EDF   UNKNOWN  $5EDF           ; Unknown 5xxx instruction
$558    $3EF0   SE       VE, #F0         ; Skip if VE == 240
$55A    $1289   JP       $289            ; Jump to 289
$55C    $3543   SE       V5, #43         ; Skip if V5 == 67
$55E    $A502   LD       I, $502         ; Load 502 into I
$560    $B08C   JP       V0, $08C        ; Jump to V0 + 08C
$562    $DE61   DRW      VE, V6, #1      ; Draw 1-byte sprite at VE, V6
$564    $9DCB   UNKNOWN  $9DCB           ; Unknown 9xxx instruction
$566    $4B41   SNE      VB, #41         ; Skip if VB != 65
$568    $4174   SNE      V1, #74         ; Skip if V1 != 116
$56A    $2309   CALL     $309            ; Call subroutine at 309
$56C    $ADF6   LD       I, $DF6         ; Load DF6 into I
$56E    $B760   JP       V0, $760        ; Jump to V0 + 760
$570    $1974   JP       $974            ; Jump to 974
$572    $BD3F   JP       V0, $D3F        ; Jump to V0 + D3F
$574    $C9A3   RND      V9, #A3         ; V9 = random & A3
$576    $2CAE   CALL     $CAE            ; Call subroutine at CAE
$578    $D137   DRW      V1, V3, #7      ; Draw 7-byte sprite at V1, V3
$57A    $5AAE   UNKNOWN  $5AAE           ; Unknown 5xxx instruction
$57C    $9871   UNKNOWN  $9871           ; Unknown 9xxx instruction
$57E    $E2DC   UNKNOWN  $E2DC           ; Unknown Exxx instruction
$580    $CDAF   RND      VD, #AF         ; VD = random & AF
$582    $8F3A   UNKNOWN  8F3A            ; Unknown 8xxx instruction
$584    $27F8   CALL     $7F8            ; Call subroutine at 7F8
$586    $A769   LD       I, $769         ; Load 769 into I
$588    $A55F   LD       I, $55F         ; Load 55F into I
$58A    $E22A   UNKNOWN  $E22A           ; Unknown Exxx instruction
$58C    $872C   UNKNOWN  872C            ; Unknown 8xxx instruction
$58E    $FE99   UNKNOWN  FE99            ; Unknown Fxxx instruction
$590    $EECA   UNKNOWN  $EECA           ; Unknown Exxx instruction
$592    $377F   SE       V7, #7F         ; Skip if V7 == 127
$594    $E4C3   UNKNOWN  $E4C3           ; Unknown Exxx instruction
$596    $973C   UNKNOWN  $973C           ; Unknown 9xxx instruction
$598    $C218   RND      V2, #18         ; V2 = random & 18
$59A    $F0EC   UNKNOWN  F0EC            ; Unknown Fxxx instruction
$59C    $8E67   SUBN     VE, V6          ; VE = V6 - VE, VF = !borrow
$59E    $9288   UNKNOWN  $9288           ; Unknown 9xxx instruction
$5A0    $EE37   UNKNOWN  $EE37           ; Unknown Exxx instruction
$5A2    $97C2   UNKNOWN  $97C2           ; Unknown 9xxx instruction
$5A4    $7B35   ADD      VB, #35         ; Add 53 to VB
$5A6    $C5E3   RND      V5, #E3         ; V5 = random & E3
$5A8    $EFCC   UNKNOWN  $EFCC           ; Unknown Exxx instruction
$5AA    $6169   LD       V1, #69         ; Load 105 into V1
$5AC    $877E   SHL      V7              ; V7 <<= 1, VF = MSB
$5AE    $0541   SYS      $541            ; System call to 541
$5B0    $4134   SNE      V1, #34         ; Skip if V1 != 52
$5B2    $16CE   JP       $6CE            ; Jump to 6CE
$5B4    $F1EF   UNKNOWN  F1EF            ; Unknown Fxxx instruction
$5B6    $85A7   SUBN     V5, VA          ; V5 = VA - V5, VF = !borrow
$5B8    $7C39   ADD      VC, #39         ; Add 57 to VC
$5BA    $CD8C   RND      VD, #8C         ; VD = random & 8C
$5BC    $5F09   UNKNOWN  $5F09           ; Unknown 5xxx instruction
$5BE    $9893   UNKNOWN  $9893           ; Unknown 9xxx instruction
$5C0    $99BD   UNKNOWN  $99BD           ; Unknown 9xxx instruction
$5C2    $7DA2   ADD      VD, #A2         ; Add 162 to VD
$5C4    $7B45   ADD      VB, #45         ; Add 69 to VB
$5C6    $B774   JP       V0, $774        ; Jump to V0 + 774
$5C8    $746A   ADD      V4, #6A         ; Add 106 to V4
$5CA    $9EDD   UNKNOWN  $9EDD           ; Unknown 9xxx instruction
$5CC    $577C   UNKNOWN  $577C           ; Unknown 5xxx instruction
$5CE    $EC09   UNKNOWN  $EC09           ; Unknown Exxx instruction
$5D0    $62F3   LD       V2, #F3         ; Load 243 into V2
$5D2    $A17A   LD       I, $17A         ; Load 17A into I
$5D4    $4DE1   SNE      VD, #E1         ; Skip if VD != 225
$5D6    $5161   UNKNOWN  $5161           ; Unknown 5xxx instruction
$5D8    $43EF   SNE      V3, #EF         ; Skip if V3 != 239
$5DA    $FF73   UNKNOWN  FF73            ; Unknown Fxxx instruction
$5DC    $C170   RND      V1, #70         ; V1 = random & 70
$5DE    $690B   LD       V9, #0B         ; Load 11 into V9
$5E0    $A7F2   LD       I, $7F2         ; Load 7F2 into I
$5E2    $A8D5   LD       I, $8D5         ; Load 8D5 into I
$5E4    $A8CD   LD       I, $8CD         ; Load 8CD into I
$5E6    $112A   JP       $12A            ; Jump to 12A
$5E8    $5B80   SE       VB, V8          ; Skip if VB == V8
$5EA    $2629   CALL     $629            ; Call subroutine at 629
$5EC    $FE0D   UNKNOWN  FE0D            ; Unknown Fxxx instruction
$5EE    $7600   ADD      V6, #00         ; Add 0 to V6
$5F0    $BAC6   JP       V0, $AC6        ; Jump to V0 + AC6
$5F2    $7398   ADD      V3, #98         ; Add 152 to V3
$5F4    $64D7   LD       V4, #D7         ; Load 215 into V4
$5F6    $618F   LD       V1, #8F         ; Load 143 into V1
$5F8    $9A93   UNKNOWN  $9A93           ; Unknown 9xxx instruction
$5FA    $B119   JP       V0, $119        ; Jump to V0 + 119
$5FC    $516C   UNKNOWN  $516C           ; Unknown 5xxx instruction
$5FE    $E91B   UNKNOWN  $E91B           ; Unknown Exxx instruction
$600    $C1AE   RND      V1, #AE         ; V1 = random & AE
$602    $5402   UNKNOWN  $5402           ; Unknown 5xxx instruction
$604    $5FE3   UNKNOWN  $5FE3           ; Unknown 5xxx instruction
$606    $E184   UNKNOWN  $E184           ; Unknown Exxx instruction
$608    $F272   UNKNOWN  F272            ; Unknown Fxxx instruction
$60A    $C5D9   RND      V5, #D9         ; V5 = random & D9
$60C    $930D   UNKNOWN  $930D           ; Unknown 9xxx instruction
$60E    $9CC8   UNKNOWN  $9CC8           ; Unknown 9xxx instruction
$610    $F63F   UNKNOWN  F63F            ; Unknown Fxxx instruction
$612    $27F3   CALL     $7F3            ; Call subroutine at 7F3
$614    $23E2   CALL     $3E2            ; Call subroutine at 3E2
$616    $C4D1   RND      V4, #D1         ; V4 = random & D1
$618    $350E   SE       V5, #0E         ; Skip if V5 == 14
$61A    $B602   JP       V0, $602        ; Jump to V0 + 602
$61C    $8C67   SUBN     VC, V6          ; VC = V6 - VC, VF = !borrow
$61E    $89D6   SHR      V9              ; V9 >>= 1, VF = LSB
$620    $0BD1   SYS      $BD1            ; System call to BD1
$622    $4F65   SNE      VF, #65         ; Skip if VF != 101
$624    $0A75   SYS      $A75            ; System call to A75
$626    $8FC1   OR       VF, VC          ; VF |= VC
$628    $8A39   UNKNOWN  8A39            ; Unknown 8xxx instruction
$62A    $69AA   LD       V9, #AA         ; Load 170 into V9
$62C    $D940   DRW      V9, V4, #0      ; Draw 0-byte sprite at V9, V4
$62E    $3048   SE       V0, #48         ; Skip if V0 == 72
$630    $7F7D   ADD      VF, #7D         ; Add 125 to VF
$632    $9875   UNKNOWN  $9875           ; Unknown 9xxx instruction
$634    $A988   LD       I, $988         ; Load 988 into I
$636    $F934   UNKNOWN  F934            ; Unknown Fxxx instruction
$638    $E027   UNKNOWN  $E027           ; Unknown Exxx instruction
$63A    $0AC9   SYS      $AC9            ; System call to AC9
$63C    $E53D   UNKNOWN  $E53D           ; Unknown Exxx instruction
$63E    $CC7C   RND      VC, #7C         ; VC = random & 7C
$640    $612F   LD       V1, #2F         ; Load 47 into V1
$642    $1234   JP       $234            ; Jump to 234
$644    $7A75   ADD      VA, #75         ; Add 117 to VA
$646    $4973   SNE      V9, #73         ; Skip if V9 != 115
$648    $4666   SNE      V6, #66         ; Skip if V6 != 102
$64A    $E4D0   UNKNOWN  $E4D0           ; Unknown Exxx instruction
$64C    $9171   UNKNOWN  $9171           ; Unknown 9xxx instruction
$64E    $24DE   CALL     $4DE            ; Call subroutine at 4DE
$650    $F015   LD       DT, V0          ; Delay timer = V0
$652    $F60D   UNKNOWN  F60D            ; Unknown Fxxx instruction
$654    $6D7E   LD       VD, #7E         ; Load 126 into VD
$656    $8D65   SUB      VD, V6          ; VD -= V6, VF = !borrow
$658    $E4F6   UNKNOWN  $E4F6           ; Unknown Exxx instruction
$65A    $BD8E   JP       V0, $D8E        ; Jump to V0 + D8E
$65C    $FF0B   UNKNOWN  FF0B            ; Unknown Fxxx instruction
$65E    $EC77   UNKNOWN  $EC77           ; Unknown Exxx instruction
$660    $CFE8   RND      VF, #E8         ; VF = random & E8
$662    $1AE7   JP       $AE7            ; Jump to AE7
$664    $3C59   SE       VC, #59         ; Skip if VC == 89
$666    $FDDE   UNKNOWN  FDDE            ; Unknown Fxxx instruction
$668    $13FA   JP       $3FA            ; Jump to 3FA
$66A    $E9C4   UNKNOWN  $E9C4           ; Unknown Exxx instruction
$66C    $1D6D   JP       $D6D            ; Jump to D6D
$66E    $3745   SE       V7, #45         ; Skip if V7 == 69
$670    $3E55   SE       VE, #55         ; Skip if VE == 85
$672    $37BB   SE       V7, #BB         ; Skip if V7 == 187
$674    $73BA   ADD      V3, #BA         ; Add 186 to V3
$676    $ECFE   UNKNOWN  $ECFE           ; Unknown Exxx instruction
$678    $1C08   JP       $C08            ; Jump to C08
$67A    $565C   UNKNOWN  $565C           ; Unknown 5xxx instruction
$67C    $8F55   SUB      VF, V5          ; VF -= V5, VF = !borrow
$67E    $FB53   UNKNOWN  FB53            ; Unknown Fxxx instruction
$680    $E2B9   UNKNOWN  $E2B9           ; Unknown Exxx instruction
$682    $1CE2   JP       $CE2            ; Jump to CE2
$684    $FC53   UNKNOWN  FC53            ; Unknown Fxxx instruction
$686    $8044   ADD      V0, V4          ; V0 += V4, VF = carry
$688    $4995   SNE      V9, #95         ; Skip if V9 != 149
$68A    $0744   SYS      $744            ; System call to 744
$68C    $B336   JP       V0, $336        ; Jump to V0 + 336
$68E    $9312   UNKNOWN  $9312           ; Unknown 9xxx instruction
$690    $482E   SNE      V8, #2E         ; Skip if V8 != 46
$692    $CE5B   RND      VE, #5B         ; VE = random & 5B
$694    $F001   UNKNOWN  F001            ; Unknown Fxxx instruction
$696    $A61E   LD       I, $61E         ; Load 61E into I
$698    $C98B   RND      V9, #8B         ; V9 = random & 8B
$69A    $5EB0   SE       VE, VB          ; Skip if VE == VB
$69C    $229F   CALL     $29F            ; Call subroutine at 29F
$69E    $8D6E   SHL      VD              ; VD <<= 1, VF = MSB
$6A0    $F5F2   UNKNOWN  F5F2            ; Unknown Fxxx instruction
$6A2    $6E07   LD       VE, #07         ; Load 7 into VE
$6A4    $5DE0   SE       VD, VE          ; Skip if VD == VE
$6A6    $435F   SNE      V3, #5F         ; Skip if V3 != 95
$6A8    $8908   UNKNOWN  8908            ; Unknown 8xxx instruction
$6AA    $86CB   UNKNOWN  86CB            ; Unknown 8xxx instruction
$6AC    $382B   SE       V8, #2B         ; Skip if V8 == 43
$6AE    $8B2A   UNKNOWN  8B2A            ; Unknown 8xxx instruction
$6B0    $5146   UNKNOWN  $5146           ; Unknown 5xxx instruction
$6B2    $701E   ADD      V0, #1E         ; Add 30 to V0
$6B4    $7314   ADD      V3, #14         ; Add 20 to V3
$6B6    $DDE5   DRW      VD, VE, #5      ; Draw 5-byte sprite at VD, VE
$6B8    $802D   UNKNOWN  802D            ; Unknown 8xxx instruction
$6BA    $2D0A   CALL     $D0A            ; Call subroutine at D0A
$6BC    $D156   DRW      V1, V5, #6      ; Draw 6-byte sprite at V1, V5
$6BE    $82BA   UNKNOWN  82BA            ; Unknown 8xxx instruction
$6C0    $EFCB   UNKNOWN  $EFCB           ; Unknown Exxx instruction
$6C2    $A47F   LD       I, $47F         ; Load 47F into I
$6C4    $6F1B   LD       VF, #1B         ; Load 27 into VF
$6C6    $4976   SNE      V9, #76         ; Skip if V9 != 118
$6C8    $F6AB   UNKNOWN  F6AB            ; Unknown Fxxx instruction
$6CA    $34D8   SE       V4, #D8         ; Skip if V4 == 216
$6CC    $72A9   ADD      V2, #A9         ; Add 169 to V2
$6CE    $7071   ADD      V0, #71         ; Add 113 to V0
$6D0    $78B5   ADD      V8, #B5         ; Add 181 to V8
$6D2    $0175   SYS      $175            ; System call to 175
$6D4    $DCB5   DRW      VC, VB, #5      ; Draw 5-byte sprite at VC, VB
$6D6    $BAA4   JP       V0, $AA4        ; Jump to V0 + AA4
$6D8    $C5DD   RND      V5, #DD         ; V5 = random & DD
$6DA    $6B31   LD       VB, #31         ; Load 49 into VB
$6DC    $5BDA   UNKNOWN  $5BDA           ; Unknown 5xxx instruction
$6DE    $5D2A   UNKNOWN  $5D2A           ; Unknown 5xxx instruction
$6E0    $3265   SE       V2, #65         ; Skip if V2 == 101
$6E2    $D0CB   DRW      V0, VC, #B      ; Draw 11-byte sprite at V0, VC
$6E4    $0107   SYS      $107            ; System call to 107
$6E6    $B9BD   JP       V0, $9BD        ; Jump to V0 + 9BD
$6E8    $60BC   LD       V0, #BC         ; Load 188 into V0
$6EA    $1EB1   JP       $EB1            ; Jump to EB1
$6EC    $4C29   SNE      VC, #29         ; Skip if VC != 41
$6EE    $89BE   SHL      V9              ; V9 <<= 1, VF = MSB
$6F0    $3D12   SE       VD, #12         ; Skip if VD == 18
$6F2    $394A   SE       V9, #4A         ; Skip if V9 == 74
$6F4    $C07C   RND      V0, #7C         ; V0 = random & 7C
$6F6    $D150   DRW      V1, V5, #0      ; Draw 0-byte sprite at V1, V5
$6F8    $1B6B   JP       $B6B            ; Jump to B6B
$6FA    $DF1B   DRW      VF, V1, #B      ; Draw 11-byte sprite at VF, V1
$6FC    $020D   SYS      $20D            ; System call to 20D
$6FE    $20B8   CALL     $0B8            ; Call subroutine at 0B8
$700    $B2A5   JP       V0, $2A5        ; Jump to V0 + 2A5
$702    $38B2   SE       V8, #B2         ; Skip if V8 == 178
$704    $D6E0   DRW      V6, VE, #0      ; Draw 0-byte sprite at V6, VE
$706    $51EC   UNKNOWN  $51EC           ; Unknown 5xxx instruction
$708    $25C2   CALL     $5C2            ; Call subroutine at 5C2
$70A    $7818   ADD      V8, #18         ; Add 24 to V8
$70C    $4975   SNE      V9, #75         ; Skip if V9 != 117
$70E    $A8EA   LD       I, $8EA         ; Load 8EA into I
$710    $BF88   JP       V0, $F88        ; Jump to V0 + F88
$712    $A174   LD       I, $174         ; Load 174 into I
$714    $8432   AND      V4, V3          ; V4 &= V3
$716    $4DCF   SNE      VD, #CF         ; Skip if VD != 207
$718    $F5A1   UNKNOWN  F5A1            ; Unknown Fxxx instruction
$71A    $A16E   LD       I, $16E         ; Load 16E into I
$71C    $CCEB   RND      VC, #EB         ; VC = random & EB
$71E    $DD67   DRW      VD, V6, #7      ; Draw 7-byte sprite at VD, V6
$720    $0E1F   SYS      $E1F            ; System call to E1F
$722    $8E9F   UNKNOWN  8E9F            ; Unknown 8xxx instruction
$724    $F523   UNKNOWN  F523            ; Unknown Fxxx instruction
$726    $A210   LD       I, $210         ; Load 210 into I
$728    $06B0   SYS      $6B0            ; System call to 6B0
$72A    $C3C1   RND      V3, #C1         ; V3 = random & C1
$72C    $C5AD   RND      V5, #AD         ; V5 = random & AD
$72E    $65B8   LD       V5, #B8         ; Load 184 into V5
$730    $EBDB   UNKNOWN  $EBDB           ; Unknown Exxx instruction
$732    $F585   UNKNOWN  F585            ; Unknown Fxxx instruction
$734    $5186   UNKNOWN  $5186           ; Unknown 5xxx instruction
$736    $6EC3   LD       VE, #C3         ; Load 195 into VE
$738    $D6B4   DRW      V6, VB, #4      ; Draw 4-byte sprite at V6, VB
$73A    $1D91   JP       $D91            ; Jump to D91
$73C    $71C0   ADD      V1, #C0         ; Add 192 to V1
$73E    $7548   ADD      V5, #48         ; Add 72 to V5
$740    $0BFF   SYS      $BFF            ; System call to BFF
$742    $BA9E   JP       V0, $A9E        ; Jump to V0 + A9E
$744    $4BB5   SNE      VB, #B5         ; Skip if VB != 181
$746    $6F94   LD       VF, #94         ; Load 148 into VF
$748    $63D1   LD       V3, #D1         ; Load 209 into V3
$74A    $543E   UNKNOWN  $543E           ; Unknown 5xxx instruction
$74C    $4240   SNE      V2, #40         ; Skip if V2 != 64
$74E    $04A8   SYS      $4A8            ; System call to 4A8
$750    $81B9   UNKNOWN  81B9            ; Unknown 8xxx instruction
$752    $D1AF   DRW      V1, VA, #F      ; Draw 15-byte sprite at V1, VA
$754    $25D2   CALL     $5D2            ; Call subroutine at 5D2
$756    $F990   UNKNOWN  F990            ; Unknown Fxxx instruction
$758    $A077   LD       I, $077         ; Load 077 into I
$75A    $8B6F   UNKNOWN  8B6F            ; Unknown 8xxx instruction
$75C    $9EE5   UNKNOWN  $9EE5           ; Unknown 9xxx instruction
$75E    $6D73   LD       VD, #73         ; Load 115 into VD
$760    $FE36   UNKNOWN  FE36            ; Unknown Fxxx instruction
$762    $159B   JP       $59B            ; Jump to 59B
$764    $FF7F   UNKNOWN  FF7F            ; Unknown Fxxx instruction
$766    $316C   SE       V1, #6C         ; Skip if V1 == 108
$768    $7AB5   ADD      VA, #B5         ; Add 181 to VA
$76A    $55FC   UNKNOWN  $55FC           ; Unknown 5xxx instruction
$76C    $E65F   UNKNOWN  $E65F           ; Unknown Exxx instruction
$76E    $E1E1   UNKNOWN  $E1E1           ; Unknown Exxx instruction
$770    $38B3   SE       V8, #B3         ; Skip if V8 == 179
$772    $A81D   LD       I, $81D         ; Load 81D into I
$774    $F8D2   UNKNOWN  F8D2            ; Unknown Fxxx instruction
$776    $5AC1   UNKNOWN  $5AC1           ; Unknown 5xxx instruction
$778    $4ABC   SNE      VA, #BC         ; Skip if VA != 188
$77A    $56A4   UNKNOWN  $56A4           ; Unknown 5xxx instruction
$77C    $0ED5   SYS      $ED5            ; System call to ED5
$77E    $E787   UNKNOWN  $E787           ; Unknown Exxx instruction
$780    $1502   JP       $502            ; Jump to 502
$782    $E5BF   UNKNOWN  $E5BF           ; Unknown Exxx instruction
$784    $6688   LD       V6, #88         ; Load 136 into V6
$786    $383D   SE       V8, #3D         ; Skip if V8 == 61
$788    $2AD4   CALL     $AD4            ; Call subroutine at AD4
$78A    $ABCC   LD       I, $BCC         ; Load BCC into I
$78C    $75D0   ADD      V5, #D0         ; Add 208 to V5
$78E    $B687   JP       V0, $687        ; Jump to V0 + 687
$790    $8008   UNKNOWN  8008            ; Unknown 8xxx instruction
$792    $155F   JP       $55F            ; Jump to 55F
$794    $4724   SNE      V7, #24         ; Skip if V7 != 36
$796    $A2C7   LD       I, $2C7         ; Load 2C7 into I
$798    $4E01   SNE      VE, #01         ; Skip if VE != 1
$79A    $A493   LD       I, $493         ; Load 493 into I
$79C    $0E6B   SYS      $E6B            ; System call to E6B
$79E    $9051   UNKNOWN  $9051           ; Unknown 9xxx instruction
$7A0    $A4E6   LD       I, $4E6         ; Load 4E6 into I
$7A2    $85E2   AND      V5, VE          ; V5 &= VE
$7A4    $38AE   SE       V8, #AE         ; Skip if V8 == 174
$7A6    $662A   LD       V6, #2A         ; Load 42 into V6
$7A8    $5CAF   UNKNOWN  $5CAF           ; Unknown 5xxx instruction
$7AA    $4B5C   SNE      VB, #5C         ; Skip if VB != 92
$7AC    $C276   RND      V2, #76         ; V2 = random & 76
$7AE    $6819   LD       V8, #19         ; Load 25 into V8
$7B0    $B1C4   JP       V0, $1C4        ; Jump to V0 + 1C4
$7B2    $1D65   JP       $D65            ; Jump to D65
$7B4    $7825   ADD      V8, #25         ; Add 37 to V8
$7B6    $B59E   JP       V0, $59E        ; Jump to V0 + 59E
$7B8    $549D   UNKNOWN  $549D           ; Unknown 5xxx instruction
$7BA    $A587   LD       I, $587         ; Load 587 into I
$7BC    $5C2B   UNKNOWN  $5C2B           ; Unknown 5xxx instruction
$7BE    $56E8   UNKNOWN  $56E8           ; Unknown 5xxx instruction
$7C0    $ADD4   LD       I, $DD4         ; Load DD4 into I
$7C2    $E3F3   UNKNOWN  $E3F3           ; Unknown Exxx instruction
$7C4    $2458   CALL     $458            ; Call subroutine at 458
$7C6    $8919   UNKNOWN  8919            ; Unknown 8xxx instruction
$7C8    $CE22   RND      VE, #22         ; VE = random & 22
$7CA    $F592   UNKNOWN  F592            ; Unknown Fxxx instruction
$7CC    $A621   LD       I, $621         ; Load 621 into I
$7CE    $E314   UNKNOWN  $E314           ; Unknown Exxx instruction
$7D0    $1894   JP       $894            ; Jump to 894
$7D2    $7417   ADD      V4, #17         ; Add 23 to V4
$7D4    $2204   CALL     $204            ; Call subroutine at 204
$7D6    $CC9C   RND      VC, #9C         ; VC = random & 9C
$7D8    $38CD   SE       V8, #CD         ; Skip if V8 == 205
$7DA    $B1A8   JP       V0, $1A8        ; Jump to V0 + 1A8
$7DC    $39DD   SE       V9, #DD         ; Skip if V9 == 221
$7DE    $AB5E   LD       I, $B5E         ; Load B5E into I
$7E0    $8421   OR       V4, V2          ; V4 |= V2
$7E2    $85F7   SUBN     V5, VF          ; V5 = VF - V5, VF = !borrow
$7E4    $5EA3   UNKNOWN  $5EA3           ; Unknown 5xxx instruction
$7E6    $F8F1   UNKNOWN  F8F1            ; Unknown Fxxx instruction
$7E8    $684E   LD       V8, #4E         ; Load 78 into V8
$7EA    $EC2D   UNKNOWN  $EC2D           ; Unknown Exxx instruction
$7EC    $0E4E   SYS      $E4E            ; System call to E4E
$7EE    $792B   ADD      V9, #2B         ; Add 43 to V9
$7F0    $41F2   SNE      V1, #F2         ; Skip if V1 != 242
$7F2    $30F7   SE       V0, #F7         ; Skip if V0 == 247
$7F4    $C356   RND      V3, #56         ; V3 = random & 56
$7F6    $A4DD   LD       I, $4DD         ; Load 4DD into I
$7F8    $EAFE   UNKNOWN  $EAFE           ; Unknown Exxx instruction
$7FA    $9377   UNKNOWN  $9377           ; Unknown 9xxx instruction
$7FC    $B4A0   JP       V0, $4A0        ; Jump to V0 + 4A0
$7FE    $0F17   SYS      $F17            ; System call to F17
$800    $9733   UNKNOWN  $9733           ; Unknown 9xxx instruction
$802    $A215   LD       I, $215         ; Load 215 into I
$804    $D968   DRW      V9, V6, #8      ; Draw 8-byte sprite at V9, V6
$806    $44C1   SNE      V4, #C1         ; Skip if V4 != 193
$808    $CA2B   RND      VA, #2B         ; VA = random & 2B
$80A    $3DED   SE       VD, #ED         ; Skip if VD == 237
$80C    $BFC3   JP       V0, $FC3        ; Jump to V0 + FC3
$80E    $6455   LD       V4, #55         ; Load 85 into V4
$810    $7064   ADD      V0, #64         ; Add 100 to V0
$812    $4E4B   SNE      VE, #4B         ; Skip if VE != 75
$814    $A023   LD       I, $023         ; Load 023 into I
$816    $9BC7   UNKNOWN  $9BC7           ; Unknown 9xxx instruction
$818    $D4C0   DRW      V4, VC, #0      ; Draw 0-byte sprite at V4, VC
$81A    $4058   SNE      V0, #58         ; Skip if V0 != 88
$81C    $329A   SE       V2, #9A         ; Skip if V2 == 154
$81E    $991D   UNKNOWN  $991D           ; Unknown 9xxx instruction
$820    $26D0   CALL     $6D0            ; Call subroutine at 6D0
$822    $BAA6   JP       V0, $AA6        ; Jump to V0 + AA6
$824    $4504   SNE      V5, #04         ; Skip if V5 != 4
$826    $40E5   SNE      V0, #E5         ; Skip if V0 != 229
$828    $14AA   JP       $4AA            ; Jump to 4AA
$82A    $01CD   SYS      $1CD            ; System call to 1CD
$82C    $6038   LD       V0, #38         ; Load 56 into V0
$82E    $40B0   SNE      V0, #B0         ; Skip if V0 != 176
$830    $4052   SNE      V0, #52         ; Skip if V0 != 82
$832    $165F   JP       $65F            ; Jump to 65F
$834    $5B31   UNKNOWN  $5B31           ; Unknown 5xxx instruction
$836    $3213   SE       V2, #13         ; Skip if V2 == 19
$838    $47E8   SNE      V7, #E8         ; Skip if V7 != 232
$83A    $CF50   RND      VF, #50         ; VF = random & 50
$83C    $FCD8   UNKNOWN  FCD8            ; Unknown Fxxx instruction
$83E    $291F   CALL     $91F            ; Call subroutine at 91F
$840    $E5BC   UNKNOWN  $E5BC           ; Unknown Exxx instruction
$842    $A33C   LD       I, $33C         ; Load 33C into I
$844    $1085   JP       $085            ; Jump to 085
$846    $79DE   ADD      V9, #DE         ; Add 222 to V9
$848    $4536   SNE      V5, #36         ; Skip if V5 != 54
$84A    $116B   JP       $16B            ; Jump to 16B
$84C    $8CA0   LD       VC, VA          ; VC = VA
$84E    $0CC6   SYS      $CC6            ; System call to CC6
$850    $AC2E   LD       I, $C2E         ; Load C2E into I
$852    $A668   LD       I, $668         ; Load 668 into I
$854    $EC98   UNKNOWN  $EC98           ; Unknown Exxx instruction
$856    $7F95   ADD      VF, #95         ; Add 149 to VF
$858    $F970   UNKNOWN  F970            ; Unknown Fxxx instruction
$85A    $0D5F   SYS      $D5F            ; System call to D5F
$85C    $C788   RND      V7, #88         ; V7 = random & 88
$85E    $8E68   UNKNOWN  8E68            ; Unknown 8xxx instruction
$860    $2F80   CALL     $F80            ; Call subroutine at F80
$862    $EEA4   UNKNOWN  $EEA4           ; Unknown Exxx instruction
$864    $56DA   UNKNOWN  $56DA           ; Unknown 5xxx instruction
$866    $9438   UNKNOWN  $9438           ; Unknown 9xxx instruction
$868    $BB23   JP       V0, $B23        ; Jump to V0 + B23
$86A    $259B   CALL     $59B            ; Call subroutine at 59B
$86C    $CB45   RND      VB, #45         ; VB = random & 45
$86E    $BEA3   JP       V0, $EA3        ; Jump to V0 + EA3
$870    $4B81   SNE      VB, #81         ; Skip if VB != 129
$872    $E34D   UNKNOWN  $E34D           ; Unknown Exxx instruction
$874    $415C   SNE      V1, #5C         ; Skip if V1 != 92
$876    $DBD2   DRW      VB, VD, #2      ; Draw 2-byte sprite at VB, VD
$878    $1D30   JP       $D30            ; Jump to D30
$87A    $F237   UNKNOWN  F237            ; Unknown Fxxx instruction
$87C    $EAC3   UNKNOWN  $EAC3           ; Unknown Exxx instruction
$87E    $0FAD   SYS      $FAD            ; System call to FAD
$880    $8874   ADD      V8, V7          ; V8 += V7, VF = carry
$882    $151D   JP       $51D            ; Jump to 51D
$884    $886C   UNKNOWN  886C            ; Unknown 8xxx instruction
$886    $5864   UNKNOWN  $5864           ; Unknown 5xxx instruction
$888    $50A6   UNKNOWN  $50A6           ; Unknown 5xxx instruction
$88A    $10D7   JP       $0D7            ; Jump to 0D7
$88C    $CCD3   RND      VC, #D3         ; VC = random & D3
$88E    $32FA   SE       V2, #FA         ; Skip if V2 == 250
$890    $C36E   RND      V3, #6E         ; V3 = random & 6E
$892    $4917   SNE      V9, #17         ; Skip if V9 != 23
$894    $5E11   UNKNOWN  $5E11           ; Unknown 5xxx instruction
$896    $CB8B   RND      VB, #8B         ; VB = random & 8B
$898    $E296   UNKNOWN  $E296           ; Unknown Exxx instruction
$89A    $CE9D   RND      VE, #9D         ; VE = random & 9D
$89C    $FBC1   UNKNOWN  FBC1            ; Unknown Fxxx instruction
$89E    $485F   SNE      V8, #5F         ; Skip if V8 != 95
$8A0    $9AF8   UNKNOWN  $9AF8           ; Unknown 9xxx instruction
$8A2    $9EAD   UNKNOWN  $9EAD           ; Unknown 9xxx instruction
$8A4    $AAD7   LD       I, $AD7         ; Load AD7 into I
$8A6    $88DE   SHL      V8              ; V8 <<= 1, VF = MSB
$8A8    $B974   JP       V0, $974        ; Jump to V0 + 974
$8AA    $5D7F   UNKNOWN  $5D7F           ; Unknown 5xxx instruction
$8AC    $11FB   JP       $1FB            ; Jump to 1FB
$8AE    $1F41   JP       $F41            ; Jump to F41
$8B0    $0187   SYS      $187            ; System call to 187
$8B2    $1D4C   JP       $D4C            ; Jump to D4C
$8B4    $5682   UNKNOWN  $5682           ; Unknown 5xxx instruction
$8B6    $36EB   SE       V6, #EB         ; Skip if V6 == 235
$8B8    $EA48   UNKNOWN  $EA48           ; Unknown Exxx instruction
$8BA    $7976   ADD      V9, #76         ; Add 118 to V9
$8BC    $3206   SE       V2, #06         ; Skip if V2 == 6
$8BE    $7285   ADD      V2, #85         ; Add 133 to V2
$8C0    $3A84   SE       VA, #84         ; Skip if VA == 132
$8C2    $DFA3   DRW      VF, VA, #3      ; Draw 3-byte sprite at VF, VA
$8C4    $B1FC   JP       V0, $1FC        ; Jump to V0 + 1FC
$8C6    $5B50   SE       VB, V5          ; Skip if VB == V5
$8C8    $425D   SNE      V2, #5D         ; Skip if V2 != 93
$8CA    $A157   LD       I, $157         ; Load 157 into I
$8CC    $1751   JP       $751            ; Jump to 751
$8CE    $2754   CALL     $754            ; Call subroutine at 754
$8D0    $0575   SYS      $575            ; System call to 575
$8D2    $F7F3   UNKNOWN  F7F3            ; Unknown Fxxx instruction
$8D4    $8BCB   UNKNOWN  8BCB            ; Unknown 8xxx instruction
$8D6    $6A10   LD       VA, #10         ; Load 16 into VA
$8D8    $8DD0   LD       VD, VD          ; VD = VD
$8DA    $91EB   UNKNOWN  $91EB           ; Unknown 9xxx instruction
$8DC    $3990   SE       V9, #90         ; Skip if V9 == 144
$8DE    $B6AB   JP       V0, $6AB        ; Jump to V0 + 6AB
$8E0    $BD2F   JP       V0, $D2F        ; Jump to V0 + D2F
$8E2    $63ED   LD       V3, #ED         ; Load 237 into V3
$8E4    $F90C   UNKNOWN  F90C            ; Unknown Fxxx instruction
$8E6    $FED6   UNKNOWN  FED6            ; Unknown Fxxx instruction
$8E8    $7849   ADD      V8, #49         ; Add 73 to V8
$8EA    $A759   LD       I, $759         ; Load 759 into I
$8EC    $A821   LD       I, $821         ; Load 821 into I
$8EE    $8219   UNKNOWN  8219            ; Unknown 8xxx instruction
$8F0    $F296   UNKNOWN  F296            ; Unknown Fxxx instruction
$8F2    $D460   DRW      V4, V6, #0      ; Draw 0-byte sprite at V4, V6
$8F4    $52DD   UNKNOWN  $52DD           ; Unknown 5xxx instruction
$8F6    $689F   LD       V8, #9F         ; Load 159 into V8
$8F8    $9538   UNKNOWN  $9538           ; Unknown 9xxx instruction
$8FA    $9767   UNKNOWN  $9767           ; Unknown 9xxx instruction
$8FC    $0500   SYS      $500            ; System call to 500
$8FE    $1977   JP       $977            ; Jump to 977
$900    $F2D4   UNKNOWN  F2D4            ; Unknown Fxxx instruction
$902    $F933   LD       B, V9           ; Store BCD of V9 at I, I+1, I+2
$904    $A14F   LD       I, $14F         ; Load 14F into I
$906    $98EB   UNKNOWN  $98EB           ; Unknown 9xxx instruction
$908    $7228   ADD      V2, #28         ; Add 40 to V2
$90A    $EC1A   UNKNOWN  $EC1A           ; Unknown Exxx instruction
$90C    $1655   JP       $655            ; Jump to 655
$90E    $5142   UNKNOWN  $5142           ; Unknown 5xxx instruction
$910    $B925   JP       V0, $925        ; Jump to V0 + 925
$912    $793C   ADD      V9, #3C         ; Add 60 to V9
$914    $3DBE   SE       VD, #BE         ; Skip if VD == 190
$916    $16C4   JP       $6C4            ; Jump to 6C4
$918    $3F97   SE       VF, #97         ; Skip if VF == 151
$91A    $CF91   RND      VF, #91         ; VF = random & 91
$91C    $6B4A   LD       VB, #4A         ; Load 74 into VB
$91E    $8C8C   UNKNOWN  8C8C            ; Unknown 8xxx instruction
$920    $EE72   UNKNOWN  $EE72           ; Unknown Exxx instruction
$922    $B60C   JP       V0, $60C        ; Jump to V0 + 60C
$924    $AA9B   LD       I, $A9B         ; Load A9B into I
$926    $A8E6   LD       I, $8E6         ; Load 8E6 into I
$928    $B0D5   JP       V0, $0D5        ; Jump to V0 + 0D5
$92A    $E94D   UNKNOWN  $E94D           ; Unknown Exxx instruction
$92C    $52CD   UNKNOWN  $52CD           ; Unknown 5xxx instruction
$92E    $CAA5   RND      VA, #A5         ; VA = random & A5
$930    $5075   UNKNOWN  $5075           ; Unknown 5xxx instruction
$932    $142E   JP       $42E            ; Jump to 42E
$934    $F5AD   UNKNOWN  F5AD            ; Unknown Fxxx instruction
$936    $04A9   SYS      $4A9            ; System call to 4A9
$938    $618B   LD       V1, #8B         ; Load 139 into V1
$93A    $1CE8   JP       $CE8            ; Jump to CE8
$93C    $5F99   UNKNOWN  $5F99           ; Unknown 5xxx instruction
$93E    $D25A   DRW      V2, V5, #A      ; Draw 10-byte sprite at V2, V5
$940    $6B4D   LD       VB, #4D         ; Load 77 into VB
$942    $505A   UNKNOWN  $505A           ; Unknown 5xxx instruction
$944    $012F   SYS      $12F            ; System call to 12F
$946    $FBBE   UNKNOWN  FBBE            ; Unknown Fxxx instruction
$948    $942F   UNKNOWN  $942F           ; Unknown 9xxx instruction
$94A    $F6CF   UNKNOWN  F6CF            ; Unknown Fxxx instruction
$94C    $7B90   ADD      VB, #90         ; Add 144 to VB
$94E    $A3AE   LD       I, $3AE         ; Load 3AE into I
$950    $F817   UNKNOWN  F817            ; Unknown Fxxx instruction
$952    $3117   SE       V1, #17         ; Skip if V1 == 23
$954    $C323   RND      V3, #23         ; V3 = random & 23
$956    $3530   SE       V5, #30         ; Skip if V5 == 48
$958    $7123   ADD      V1, #23         ; Add 35 to V1
$95A    $94A5   UNKNOWN  $94A5           ; Unknown 9xxx instruction
$95C    $8629   UNKNOWN  8629            ; Unknown 8xxx instruction
$95E    $E780   UNKNOWN  $E780           ; Unknown Exxx instruction
$960    $50F4   UNKNOWN  $50F4           ; Unknown 5xxx instruction
$962    $B40D   JP       V0, $40D        ; Jump to V0 + 40D
$964    $4809   SNE      V8, #09         ; Skip if V8 != 9
$966    $3237   SE       V2, #37         ; Skip if V2 == 55
$968    $F101   UNKNOWN  F101            ; Unknown Fxxx instruction
$96A    $5BB8   UNKNOWN  $5BB8           ; Unknown 5xxx instruction
$96C    $3275   SE       V2, #75         ; Skip if V2 == 117
$96E    $C5E0   RND      V5, #E0         ; V5 = random & E0
$970    $50E3   UNKNOWN  $50E3           ; Unknown 5xxx instruction
$972    $1648   JP       $648            ; Jump to 648
$974    $051B   SYS      $51B            ; System call to 51B
$976    $5F4B   UNKNOWN  $5F4B           ; Unknown 5xxx instruction
$978    $6C40   LD       VC, #40         ; Load 64 into VC
$97A    $D5C5   DRW      V5, VC, #5      ; Draw 5-byte sprite at V5, VC
$97C    $D6DC   DRW      V6, VD, #C      ; Draw 12-byte sprite at V6, VD
$97E    $2B6F   CALL     $B6F            ; Call subroutine at B6F
$980    $2D5C   CALL     $D5C            ; Call subroutine at D5C
$982    $71C1   ADD      V1, #C1         ; Add 193 to V1
$984    $85B4   ADD      V5, VB          ; V5 += VB, VF = carry
$986    $F5F2   UNKNOWN  F5F2            ; Unknown Fxxx instruction
$988    $9457   UNKNOWN  $9457           ; Unknown 9xxx instruction
$98A    $3223   SE       V2, #23         ; Skip if V2 == 35
$98C    $B723   JP       V0, $723        ; Jump to V0 + 723
$98E    $3D9E   SE       VD, #9E         ; Skip if VD == 158
$990    $345A   SE       V4, #5A         ; Skip if V4 == 90
$992    $99E4   UNKNOWN  $99E4           ; Unknown 9xxx instruction
$994    $038A   SYS      $38A            ; System call to 38A
$996    $3230   SE       V2, #30         ; Skip if V2 == 48
$998    $399F   SE       V9, #9F         ; Skip if V9 == 159
$99A    $944A   UNKNOWN  $944A           ; Unknown 9xxx instruction
$99C    $30C2   SE       V0, #C2         ; Skip if V0 == 194
$99E    $328A   SE       V2, #8A         ; Skip if V2 == 138
$9A0    $14BF   JP       $4BF            ; Jump to 4BF
$9A2    $5ED1   UNKNOWN  $5ED1           ; Unknown 5xxx instruction
$9A4    $3F29   SE       VF, #29         ; Skip if VF == 41
$9A6    $4ADF   SNE      VA, #DF         ; Skip if VA != 223
$9A8    $8599   UNKNOWN  8599            ; Unknown 8xxx instruction
$9AA    $9E79   UNKNOWN  $9E79           ; Unknown 9xxx instruction
$9AC    $1497   JP       $497            ; Jump to 497
$9AE    $C202   RND      V2, #02         ; V2 = random & 02
$9B0    $B17D   JP       V0, $17D        ; Jump to V0 + 17D
$9B2    $AA02   LD       I, $A02         ; Load A02 into I
$9B4    $BB92   JP       V0, $B92        ; Jump to V0 + B92
$9B6    $FA4E   UNKNOWN  FA4E            ; Unknown Fxxx instruction
$9B8    $8942   AND      V9, V4          ; V9 &= V4
$9BA    $F8FA   UNKNOWN  F8FA            ; Unknown Fxxx instruction
$9BC    $10F9   JP       $0F9            ; Jump to 0F9
$9BE    $05D4   SYS      $5D4            ; System call to 5D4
$9C0    $13F7   JP       $3F7            ; Jump to 3F7
$9C2    $ACED   LD       I, $CED         ; Load CED into I
$9C4    $D5C6   DRW      V5, VC, #6      ; Draw 6-byte sprite at V5, VC
$9C6    $F815   LD       DT, V8          ; Delay timer = V8
$9C8    $EB8B   UNKNOWN  $EB8B           ; Unknown Exxx instruction
$9CA    $320E   SE       V2, #0E         ; Skip if V2 == 14
$9CC    $359E   SE       V5, #9E         ; Skip if V5 == 158
$9CE    $301D   SE       V0, #1D         ; Skip if V0 == 29
$9D0    $69F4   LD       V9, #F4         ; Load 244 into V9
$9D2    $2E58   CALL     $E58            ; Call subroutine at E58
$9D4    $7722   ADD      V7, #22         ; Add 34 to V7
$9D6    $5F20   SE       VF, V2          ; Skip if VF == V2
$9D8    $27D3   CALL     $7D3            ; Call subroutine at 7D3
$9DA    $B2EE   JP       V0, $2EE        ; Jump to V0 + 2EE
$9DC    $7FF4   ADD      VF, #F4         ; Add 244 to VF
$9DE    $EF7E   UNKNOWN  $EF7E           ; Unknown Exxx instruction
$9E0    $49E2   SNE      V9, #E2         ; Skip if V9 != 226
$9E2    $488E   SNE      V8, #8E         ; Skip if V8 != 142
$9E4    $1BA0   JP       $BA0            ; Jump to BA0
$9E6    $2944   CALL     $944            ; Call subroutine at 944
$9E8    $D9DC   DRW      V9, VD, #C      ; Draw 12-byte sprite at V9, VD
$9EA    $8D83   XOR      VD, V8          ; VD ^= V8
$9EC    $D1BD   DRW      V1, VB, #D      ; Draw 13-byte sprite at V1, VB
$9EE    $F519   UNKNOWN  F519            ; Unknown Fxxx instruction
$9F0    $2CCD   CALL     $CCD            ; Call subroutine at CCD
$9F2    $38F2   SE       V8, #F2         ; Skip if V8 == 242
$9F4    $1BF1   JP       $BF1            ; Jump to BF1
$9F6    $7127   ADD      V1, #27         ; Add 39 to V1
$9F8    $3718   SE       V7, #18         ; Skip if V7 == 24
$9FA    $3971   SE       V9, #71         ; Skip if V9 == 113
$9FC    $F030   UNKNOWN  F030            ; Unknown Fxxx instruction
$9FE    $E87E   UNKNOWN  $E87E           ; Unknown Exxx instruction
$A00    $B982   JP       V0, $982        ; Jump to V0 + 982
$A02    $7532   ADD      V5, #32         ; Add 50 to V5
$A04    $78D0   ADD      V8, #D0         ; Add 208 to V8
$A06    $8D8D   UNKNOWN  8D8D            ; Unknown 8xxx instruction
$A08    $1D23   JP       $D23            ; Jump to D23
$A0A    $1BFA   JP       $BFA            ; Jump to BFA
$A0C    $334B   SE       V3, #4B         ; Skip if V3 == 75
$A0E    $B051   JP       V0, $051        ; Jump to V0 + 051
$A10    $F9F0   UNKNOWN  F9F0            ; Unknown Fxxx instruction
$A12    $5210   SE       V2, V1          ; Skip if V2 == V1
$A14    $B61D   JP       V0, $61D        ; Jump to V0 + 61D
$A16    $D36F   DRW      V3, V6, #F      ; Draw 15-byte sprite at V3, V6
$A18    $4D21   SNE      VD, #21         ; Skip if VD != 33
$A1A    $C1C9   RND      V1, #C9         ; V1 = random & C9
$A1C    $52F1   UNKNOWN  $52F1           ; Unknown 5xxx instruction
$A1E    $0771   SYS      $771            ; System call to 771
$A20    $91B4   UNKNOWN  $91B4           ; Unknown 9xxx instruction
$A22    $3C70   SE       VC, #70         ; Skip if VC == 112
$A24    $18C3   JP       $8C3            ; Jump to 8C3
$A26    $E112   UNKNOWN  $E112           ; Unknown Exxx instruction
$A28    $4918   SNE      V9, #18         ; Skip if V9 != 24
$A2A    $1C2B   JP       $C2B            ; Jump to C2B
$A2C    $4925   SNE      V9, #25         ; Skip if V9 != 37
$A2E    $A911   LD       I, $911         ; Load 911 into I
$A30    $A65E   LD       I, $65E         ; Load 65E into I
$A32    $5739   UNKNOWN  $5739           ; Unknown 5xxx instruction
$A34    $93D7   UNKNOWN  $93D7           ; Unknown 9xxx instruction
$A36    $4E8E   SNE      VE, #8E         ; Skip if VE != 142
$A38    $9ACE   UNKNOWN  $9ACE           ; Unknown 9xxx instruction
$A3A    $2726   CALL     $726            ; Call subroutine at 726
$A3C    $943D   UNKNOWN  $943D           ; Unknown 9xxx instruction
$A3E    $7640   ADD      V6, #40         ; Add 64 to V6
$A40    $6A82   LD       VA, #82         ; Load 130 into VA
$A42    $5453   UNKNOWN  $5453           ; Unknown 5xxx instruction
$A44    $2DC2   CALL     $DC2            ; Call subroutine at DC2
$A46    $1EF0   JP       $EF0            ; Jump to EF0
$A48    $B0D8   JP       V0, $0D8        ; Jump to V0 + 0D8
$A4A    $BF8A   JP       V0, $F8A        ; Jump to V0 + F8A
$A4C    $D0B1   DRW      V0, VB, #1      ; Draw 1-byte sprite at V0, VB
$A4E    $EFBA   UNKNOWN  $EFBA           ; Unknown Exxx instruction
$A50    $AA87   LD       I, $A87         ; Load A87 into I
$A52    $8265   SUB      V2, V6          ; V2 -= V6, VF = !borrow
$A54    $7AD3   ADD      VA, #D3         ; Add 211 to VA
$A56    $E379   UNKNOWN  $E379           ; Unknown Exxx instruction
$A58    $CB7D   RND      VB, #7D         ; VB = random & 7D
$A5A    $2228   CALL     $228            ; Call subroutine at 228
$A5C    $A585   LD       I, $585         ; Load 585 into I
$A5E    $DF34   DRW      VF, V3, #4      ; Draw 4-byte sprite at VF, V3
$A60    $24CB   CALL     $4CB            ; Call subroutine at 4CB
$A62    $C2BD   RND      V2, #BD         ; V2 = random & BD
$A64    $0F98   SYS      $F98            ; System call to F98
$A66    $E962   UNKNOWN  $E962           ; Unknown Exxx instruction
$A68    $73BF   ADD      V3, #BF         ; Add 191 to V3
$A6A    $51B6   UNKNOWN  $51B6           ; Unknown 5xxx instruction
$A6C    $D894   DRW      V8, V9, #4      ; Draw 4-byte sprite at V8, V9
$A6E    $464A   SNE      V6, #4A         ; Skip if V6 != 74
$A70    $BC07   JP       V0, $C07        ; Jump to V0 + C07
$A72    $3631   SE       V6, #31         ; Skip if V6 == 49
$A74    $1DF9   JP       $DF9            ; Jump to DF9
$A76    $28DA   CALL     $8DA            ; Call subroutine at 8DA
$A78    $743B   ADD      V4, #3B         ; Add 59 to V4
$A7A    $B067   JP       V0, $067        ; Jump to V0 + 067
$A7C    $8825   SUB      V8, V2          ; V8 -= V2, VF = !borrow
$A7E    $16DA   JP       $6DA            ; Jump to 6DA
$A80    $B636   JP       V0, $636        ; Jump to V0 + 636
$A82    $916A   UNKNOWN  $916A           ; Unknown 9xxx instruction
$A84    $942A   UNKNOWN  $942A           ; Unknown 9xxx instruction
$A86    $6367   LD       V3, #67         ; Load 103 into V3
$A88    $DC85   DRW      VC, V8, #5      ; Draw 5-byte sprite at VC, V8
$A8A    $760F   ADD      V6, #0F         ; Add 15 to V6
$A8C    $7AA6   ADD      VA, #A6         ; Add 166 to VA
$A8E    $3BDB   SE       VB, #DB         ; Skip if VB == 219
$A90    $8D29   UNKNOWN  8D29            ; Unknown 8xxx instruction
$A92    $9967   UNKNOWN  $9967           ; Unknown 9xxx instruction
$A94    $7D98   ADD      VD, #98         ; Add 152 to VD
$A96    $2939   CALL     $939            ; Call subroutine at 939
$A98    $366E   SE       V6, #6E         ; Skip if V6 == 110
$A9A    $6CD1   LD       VC, #D1         ; Load 209 into VC
$A9C    $C55A   RND      V5, #5A         ; V5 = random & 5A
$A9E    $8962   AND      V9, V6          ; V9 &= V6
$AA0    $790C   ADD      V9, #0C         ; Add 12 to V9
$AA2    $D042   DRW      V0, V4, #2      ; Draw 2-byte sprite at V0, V4
$AA4    $C4CA   RND      V4, #CA         ; V4 = random & CA
$AA6    $6E74   LD       VE, #74         ; Load 116 into VE
$AA8    $A2F7   LD       I, $2F7         ; Load 2F7 into I
$AAA    $1E0B   JP       $E0B            ; Jump to E0B
$AAC    $0E59   SYS      $E59            ; System call to E59
$AAE    $4876   SNE      V8, #76         ; Skip if V8 != 118
$AB0    $05E4   SYS      $5E4            ; System call to 5E4
$AB2    $A54A   LD       I, $54A         ; Load 54A into I
$AB4    $C8A9   RND      V8, #A9         ; V8 = random & A9
$AB6    $FDE6   UNKNOWN  FDE6            ; Unknown Fxxx instruction
$AB8    $A699   LD       I, $699         ; Load 699 into I
$ABA    $2334   CALL     $334            ; Call subroutine at 334
$ABC    $AF03   LD       I, $F03         ; Load F03 into I
$ABE    $EBE4   UNKNOWN  $EBE4           ; Unknown Exxx instruction
$AC0    $3167   SE       V1, #67         ; Skip if V1 == 103
$AC2    $59A5   UNKNOWN  $59A5           ; Unknown 5xxx instruction
$AC4    $7E86   ADD      VE, #86         ; Add 134 to VE
$AC6    $9B55   UNKNOWN  $9B55           ; Unknown 9xxx instruction
$AC8    $00FA   SYS      $0FA            ; System call to 0FA
$ACA    $ECDD   UNKNOWN  $ECDD           ; Unknown Exxx instruction
$ACC    $2A14   CALL     $A14            ; Call subroutine at A14
$ACE    $8209   UNKNOWN  8209            ; Unknown 8xxx instruction
$AD0    $386C   SE       V8, #6C         ; Skip if V8 == 108
$AD2    $E95F   UNKNOWN  $E95F           ; Unknown Exxx instruction
$AD4    $EB3D   UNKNOWN  $EB3D           ; Unknown Exxx instruction
$AD6    $BA77   JP       V0, $A77        ; Jump to V0 + A77
$AD8    $DDFB   DRW      VD, VF, #B      ; Draw 11-byte sprite at VD, VF
$ADA    $234F   CALL     $34F            ; Call subroutine at 34F
$ADC    $A185   LD       I, $185         ; Load 185 into I
$ADE    $2368   CALL     $368            ; Call subroutine at 368
$AE0    $E67D   UNKNOWN  $E67D           ; Unknown Exxx instruction
$AE2    $9EFA   UNKNOWN  $9EFA           ; Unknown 9xxx instruction
$AE4    $34C7   SE       V4, #C7         ; Skip if V4 == 199
$AE6    $6A24   LD       VA, #24         ; Load 36 into VA
$AE8    $3716   SE       V7, #16         ; Skip if V7 == 22
$AEA    $E026   UNKNOWN  $E026           ; Unknown Exxx instruction
$AEC    $4939   SNE      V9, #39         ; Skip if V9 != 57
$AEE    $7FDA   ADD      VF, #DA         ; Add 218 to VF
$AF0    $1391   JP       $391            ; Jump to 391
$AF2    $7726   ADD      V7, #26         ; Add 38 to V7
$AF4    $A973   LD       I, $973         ; Load 973 into I
$AF6    $5DB1   UNKNOWN  $5DB1           ; Unknown 5xxx instruction
$AF8    $2F03   CALL     $F03            ; Call subroutine at F03
$AFA    $EE08   UNKNOWN  $EE08           ; Unknown Exxx instruction
$AFC    $A578   LD       I, $578         ; Load 578 into I
$AFE    $88EE   SHL      V8              ; V8 <<= 1, VF = MSB
$B00    $084B   SYS      $84B            ; System call to 84B
$B02    $1AFB   JP       $AFB            ; Jump to AFB
$B04    $2B84   CALL     $B84            ; Call subroutine at B84
$B06    $CD0B   RND      VD, #0B         ; VD = random & 0B
$B08    $B7F8   JP       V0, $7F8        ; Jump to V0 + 7F8
$B0A    $DCC7   DRW      VC, VC, #7      ; Draw 7-byte sprite at VC, VC
$B0C    $BD01   JP       V0, $D01        ; Jump to V0 + D01
$B0E    $AD8F   LD       I, $D8F         ; Load D8F into I
$B10    $591F   UNKNOWN  $591F           ; Unknown 5xxx instruction
$B12    $C808   RND      V8, #08         ; V8 = random & 08
$B14    $253D   CALL     $53D            ; Call subroutine at 53D
$B16    $D772   DRW      V7, V7, #2      ; Draw 2-byte sprite at V7, V7
$B18    $26A8   CALL     $6A8            ; Call subroutine at 6A8
$B1A    $D160   DRW      V1, V6, #0      ; Draw 0-byte sprite at V1, V6
$B1C    $A35F   LD       I, $35F         ; Load 35F into I
$B1E    $4506   SNE      V5, #06         ; Skip if V5 != 6
$B20    $94B2   UNKNOWN  $94B2           ; Unknown 9xxx instruction
$B22    $CB11   RND      VB, #11         ; VB = random & 11
$B24    $A8BE   LD       I, $8BE         ; Load 8BE into I
$B26    $D6B1   DRW      V6, VB, #1      ; Draw 1-byte sprite at V6, VB
$B28    $3716   SE       V7, #16         ; Skip if V7 == 22
$B2A    $2011   CALL     $011            ; Call subroutine at 011
$B2C    $E51A   UNKNOWN  $E51A           ; Unknown Exxx instruction
$B2E    $9026   UNKNOWN  $9026           ; Unknown 9xxx instruction
$B30    $1854   JP       $854            ; Jump to 854
$B32    $F10D   UNKNOWN  F10D            ; Unknown Fxxx instruction
$B34    $DDC9   DRW      VD, VC, #9      ; Draw 9-byte sprite at VD, VC
$B36    $D541   DRW      V5, V4, #1      ; Draw 1-byte sprite at V5, V4
$B38    $0616   SYS      $616            ; System call to 616
$B3A    $00D8   SYS      $0D8            ; System call to 0D8
$B3C    $13CE   JP       $3CE            ; Jump to 3CE
$B3E    $DEF7   DRW      VE, VF, #7      ; Draw 7-byte sprite at VE, VF
$B40    $D0C6   DRW      V0, VC, #6      ; Draw 6-byte sprite at V0, VC
$B42    $C0B7   RND      V0, #B7         ; V0 = random & B7
$B44    $BF34   JP       V0, $F34        ; Jump to V0 + F34
$B46    $F726   UNKNOWN  F726            ; Unknown Fxxx instruction
$B48    $0A89   SYS      $A89            ; System call to A89
$B4A    $CCE0   RND      VC, #E0         ; VC = random & E0
$B4C    $7386   ADD      V3, #86         ; Add 134 to V3
$B4E    $3169   SE       V1, #69         ; Skip if V1 == 105
$B50    $10A2   JP       $0A2            ; Jump to 0A2
$B52    $39FA   SE       V9, #FA         ; Skip if V9 == 250
$B54    $7F68   ADD      VF, #68         ; Add 104 to VF
$B56    $A169   LD       I, $169         ; Load 169 into I
$B58    $69B5   LD       V9, #B5         ; Load 181 into V9
$B5A    $985B   UNKNOWN  $985B           ; Unknown 9xxx instruction
$B5C    $5555   UNKNOWN  $5555           ; Unknown 5xxx instruction
$B5E    $05CC   SYS      $5CC            ; System call to 5CC
$B60    $A7CC   LD       I, $7CC         ; Load 7CC into I
$B62    $8A86   SHR      VA              ; VA >>= 1, VF = LSB
$B64    $E93D   UNKNOWN  $E93D           ; Unknown Exxx instruction
$B66    $0859   SYS      $859            ; System call to 859
$B68    $D8F4   DRW      V8, VF, #4      ; Draw 4-byte sprite at V8, VF
$B6A    $C4B0   RND      V4, #B0         ; V4 = random & B0
$B6C    $AEA0   LD       I, $EA0         ; Load EA0 into I
$B6E    $52E5   UNKNOWN  $52E5           ; Unknown 5xxx instruction
$B70    $5009   UNKNOWN  $5009           ; Unknown 5xxx instruction
$B72    $0E04   SYS      $E04            ; System call to E04
$B74    $AF5B   LD       I, $F5B         ; Load F5B into I
$B76    $1C9C   JP       $C9C            ; Jump to C9C
$B78    $FDD2   UNKNOWN  FDD2            ; Unknown Fxxx instruction
$B7A    $7745   ADD      V7, #45         ; Add 69 to V7
$B7C    $615F   LD       V1, #5F         ; Load 95 into V1
$B7E    $37BF   SE       V7, #BF         ; Skip if V7 == 191
$B80    $5D5F   UNKNOWN  $5D5F           ; Unknown 5xxx instruction
$B82    $816F   UNKNOWN  816F            ; Unknown 8xxx instruction
$B84    $E02E   UNKNOWN  $E02E           ; Unknown Exxx instruction
$B86    $D8CF   DRW      V8, VC, #F      ; Draw 15-byte sprite at V8, VC
$B88    $F640   UNKNOWN  F640            ; Unknown Fxxx instruction
$B8A    $1A93   JP       $A93            ; Jump to A93
$B8C    $61D6   LD       V1, #D6         ; Load 214 into V1
$B8E    $F419   UNKNOWN  F419            ; Unknown Fxxx instruction
$B90    $7B06   ADD      VB, #06         ; Add 6 to VB
$B92    $30A0   SE       V0, #A0         ; Skip if V0 == 160
$B94    $B7E3   JP       V0, $7E3        ; Jump to V0 + 7E3
$B96    $F192   UNKNOWN  F192            ; Unknown Fxxx instruction
$B98    $29BD   CALL     $9BD            ; Call subroutine at 9BD
$B9A    $D19F   DRW      V1, V9, #F      ; Draw 15-byte sprite at V1, V9
$B9C    $7E47   ADD      VE, #47         ; Add 71 to VE
$B9E    $C434   RND      V4, #34         ; V4 = random & 34
$BA0    $C509   RND      V5, #09         ; V5 = random & 09
$BA2    $1065   JP       $065            ; Jump to 065
$BA4    $B211   JP       V0, $211        ; Jump to V0 + 211
$BA6    $21FF   CALL     $1FF            ; Call subroutine at 1FF
$BA8    $38B2   SE       V8, #B2         ; Skip if V8 == 178
$BAA    $DD68   DRW      VD, V6, #8      ; Draw 8-byte sprite at VD, V6
$BAC    $1607   JP       $607            ; Jump to 607
$BAE    $A3D8   LD       I, $3D8         ; Load 3D8 into I
$BB0    $8B68   UNKNOWN  8B68            ; Unknown 8xxx instruction
$BB2    $9A46   UNKNOWN  $9A46           ; Unknown 9xxx instruction
$BB4    $D9E8   DRW      V9, VE, #8      ; Draw 8-byte sprite at V9, VE
$BB6    $4613   SNE      V6, #13         ; Skip if V6 != 19
$BB8    $42E8   SNE      V2, #E8         ; Skip if V2 != 232
$BBA    $036F   SYS      $36F            ; System call to 36F
$BBC    $EAE8   UNKNOWN  $EAE8           ; Unknown Exxx instruction
$BBE    $2EC5   CALL     $EC5            ; Call subroutine at EC5
$BC0    $657D   LD       V5, #7D         ; Load 125 into V5
$BC2    $8088   UNKNOWN  8088            ; Unknown 8xxx instruction
$BC4    $26B4   CALL     $6B4            ; Call subroutine at 6B4
$BC6    $8AD2   AND      VA, VD          ; VA &= VD
$BC8    $FF81   UNKNOWN  FF81            ; Unknown Fxxx instruction
$BCA    $C898   RND      V8, #98         ; V8 = random & 98
$BCC    $41A1   SNE      V1, #A1         ; Skip if V1 != 161
$BCE    $4E0E   SNE      VE, #0E         ; Skip if VE != 14
$BD0    $3B49   SE       VB, #49         ; Skip if VB == 73
$BD2    $6493   LD       V4, #93         ; Load 147 into V4
$BD4    $E469   UNKNOWN  $E469           ; Unknown Exxx instruction
$BD6    $21B8   CALL     $1B8            ; Call subroutine at 1B8
$BD8    $9B71   UNKNOWN  $9B71           ; Unknown 9xxx instruction
$BDA    $E0E9   UNKNOWN  $E0E9           ; Unknown Exxx instruction
$BDC    $8292   AND      V2, V9          ; V2 &= V9
$BDE    $2956   CALL     $956            ; Call subroutine at 956
$BE0    $E9F5   UNKNOWN  $E9F5           ; Unknown Exxx instruction
$BE2    $6512   LD       V5, #12         ; Load 18 into V5
$BE4    $2E22   CALL     $E22            ; Call subroutine at E22
$BE6    $E40A   UNKNOWN  $E40A           ; Unknown Exxx instruction
$BE8    $F6C5   UNKNOWN  F6C5            ; Unknown Fxxx instruction
$BEA    $F0B2   UNKNOWN  F0B2            ; Unknown Fxxx instruction
$BEC    $8D77   SUBN     VD, V7          ; VD = V7 - VD, VF = !borrow
$BEE    $E5E7   UNKNOWN  $E5E7           ; Unknown Exxx instruction
$BF0    $9F05   UNKNOWN  $9F05           ; Unknown 9xxx instruction
$BF2    $3807   SE       V8, #07         ; Skip if V8 == 7
$BF4    $DC90   DRW      VC, V9, #0      ; Draw 0-byte sprite at VC, V9
$BF6    $F8B9   UNKNOWN  F8B9            ; Unknown Fxxx instruction
$BF8    $B09E   JP       V0, $09E        ; Jump to V0 + 09E
$BFA    $305C   SE       V0, #5C         ; Skip if V0 == 92
$BFC    $518B   UNKNOWN  $518B           ; Unknown 5xxx instruction
$BFE    $AE5B   LD       I, $E5B         ; Load E5B into I
$C00    $6344   LD       V3, #44         ; Load 68 into V3
$C02    $F108   UNKNOWN  F108            ; Unknown Fxxx instruction
$C04    $BA4B   JP       V0, $A4B        ; Jump to V0 + A4B
$C06    $73A3   ADD      V3, #A3         ; Add 163 to V3
$C08    $A2E0   LD       I, $2E0         ; Load 2E0 into I
$C0A    $5C56   UNKNOWN  $5C56           ; Unknown 5xxx instruction
$C0C    $65E1   LD       V5, #E1         ; Load 225 into V5
$C0E    $F841   UNKNOWN  F841            ; Unknown Fxxx instruction
$C10    $BCCD   JP       V0, $CCD        ; Jump to V0 + CCD
$C12    $6214   LD       V2, #14         ; Load 20 into V2
$C14    $879C   UNKNOWN  879C            ; Unknown 8xxx instruction
$C16    $D2D6   DRW      V2, VD, #6      ; Draw 6-byte sprite at V2, VD
$C18    $0F00   SYS      $F00            ; System call to F00
$C1A    $3553   SE       V5, #53         ; Skip if V5 == 83
$C1C    $CD0A   RND      VD, #0A         ; VD = random & 0A
$C1E    $F937   UNKNOWN  F937            ; Unknown Fxxx instruction
$C20    $77FD   ADD      V7, #FD         ; Add 253 to V7
$C22    $A639   LD       I, $639         ; Load 639 into I
$C24    $B499   JP       V0, $499        ; Jump to V0 + 499
$C26    $127E   JP       $27E            ; Jump to 27E
$C28    $1C0B   JP       $C0B            ; Jump to C0B
$C2A    $EEEF   UNKNOWN  $EEEF           ; Unknown Exxx instruction
$C2C    $5BD0   SE       VB, VD          ; Skip if VB == VD
$C2E    $074A   SYS      $74A            ; System call to 74A
$C30    $F168   UNKNOWN  F168            ; Unknown Fxxx instruction
$C32    $8B58   UNKNOWN  8B58            ; Unknown 8xxx instruction
$C34    $67B8   LD       V7, #B8         ; Load 184 into V7
$C36    $B957   JP       V0, $957        ; Jump to V0 + 957
$C38    $6383   LD       V3, #83         ; Load 131 into V3
$C3A    $9782   UNKNOWN  $9782           ; Unknown 9xxx instruction
$C3C    $7574   ADD      V5, #74         ; Add 116 to V5
$C3E    $035A   SYS      $35A            ; System call to 35A
$C40    $88F0   LD       V8, VF          ; V8 = VF
$C42    $097F   SYS      $97F            ; System call to 97F
$C44    $C370   RND      V3, #70         ; V3 = random & 70
$C46    $4295   SNE      V2, #95         ; Skip if V2 != 149
$C48    $FC19   UNKNOWN  FC19            ; Unknown Fxxx instruction
$C4A    $C620   RND      V6, #20         ; V6 = random & 20
$C4C    $E7C7   UNKNOWN  $E7C7           ; Unknown Exxx instruction
$C4E    $F4D2   UNKNOWN  F4D2            ; Unknown Fxxx instruction
$C50    $CB36   RND      VB, #36         ; VB = random & 36
$C52    $5988   UNKNOWN  $5988           ; Unknown 5xxx instruction
$C54    $8C8F   UNKNOWN  8C8F            ; Unknown 8xxx instruction
$C56    $477B   SNE      V7, #7B         ; Skip if V7 != 123
$C58    $D53C   DRW      V5, V3, #C      ; Draw 12-byte sprite at V5, V3
$C5A    $8A0D   UNKNOWN  8A0D            ; Unknown 8xxx instruction
$C5C    $0F96   SYS      $F96            ; System call to F96
$C5E    $E841   UNKNOWN  $E841           ; Unknown Exxx instruction
$C60    $64C8   LD       V4, #C8         ; Load 200 into V4
$C62    $65D8   LD       V5, #D8         ; Load 216 into V5
$C64    $F1CE   UNKNOWN  F1CE            ; Unknown Fxxx instruction
$C66    $D1A5   DRW      V1, VA, #5      ; Draw 5-byte sprite at V1, VA
$C68    $EC19   UNKNOWN  $EC19           ; Unknown Exxx instruction
$C6A    $F102   UNKNOWN  F102            ; Unknown Fxxx instruction
$C6C    $463E   SNE      V6, #3E         ; Skip if V6 != 62
$C6E    $B755   JP       V0, $755        ; Jump to V0 + 755
$C70    $552B   UNKNOWN  $552B           ; Unknown 5xxx instruction
$C72    $6906   LD       V9, #06         ; Load 6 into V9
$C74    $710B   ADD      V1, #0B         ; Add 11 to V1
$C76    $1061   JP       $061            ; Jump to 061
$C78    $5B55   UNKNOWN  $5B55           ; Unknown 5xxx instruction
$C7A    $5B42   UNKNOWN  $5B42           ; Unknown 5xxx instruction
$C7C    $4E1C   SNE      VE, #1C         ; Skip if VE != 28
$C7E    $AE50   LD       I, $E50         ; Load E50 into I
$C80    $4B64   SNE      VB, #64         ; Skip if VB != 100
$C82    $7741   ADD      V7, #41         ; Add 65 to V7
$C84    $5693   UNKNOWN  $5693           ; Unknown 5xxx instruction
$C86    $1C42   JP       $C42            ; Jump to C42
$C88    $AD87   LD       I, $D87         ; Load D87 into I
$C8A    $E669   UNKNOWN  $E669           ; Unknown Exxx instruction
$C8C    $ADC8   LD       I, $DC8         ; Load DC8 into I
$C8E    $BF0D   JP       V0, $F0D        ; Jump to V0 + F0D
$C90    $4C34   SNE      VC, #34         ; Skip if VC != 52
$C92    $AA19   LD       I, $A19         ; Load A19 into I
$C94    $EBDF   UNKNOWN  $EBDF           ; Unknown Exxx instruction
$C96    $5D5C   UNKNOWN  $5D5C           ; Unknown 5xxx instruction
$C98    $AAC5   LD       I, $AC5         ; Load AC5 into I
$C9A    $B11A   JP       V0, $11A        ; Jump to V0 + 11A
$C9C    $8B7B   UNKNOWN  8B7B            ; Unknown 8xxx instruction
$C9E    $4FF7   SNE      VF, #F7         ; Skip if VF != 247
$CA0    $3B37   SE       VB, #37         ; Skip if VB == 55
$CA2    $A468   LD       I, $468         ; Load 468 into I
$CA4    $46F3   SNE      V6, #F3         ; Skip if V6 != 243
$CA6    $4C14   SNE      VC, #14         ; Skip if VC != 20
$CA8    $91E6   UNKNOWN  $91E6           ; Unknown 9xxx instruction
$CAA    $7841   ADD      V8, #41         ; Add 65 to V8
$CAC    $E4F0   UNKNOWN  $E4F0           ; Unknown Exxx instruction
$CAE    $5E01   UNKNOWN  $5E01           ; Unknown 5xxx instruction
$CB0    $7832   ADD      V8, #32         ; Add 50 to V8
$CB2    $031B   SYS      $31B            ; System call to 31B
$CB4    $77DF   ADD      V7, #DF         ; Add 223 to V7
$CB6    $5CE7   UNKNOWN  $5CE7           ; Unknown 5xxx instruction
$CB8    $776F   ADD      V7, #6F         ; Add 111 to V7
$CBA    $68DB   LD       V8, #DB         ; Load 219 into V8
$CBC    $3A15   SE       VA, #15         ; Skip if VA == 21
$CBE    $2E1D   CALL     $E1D            ; Call subroutine at E1D
$CC0    $7B2C   ADD      VB, #2C         ; Add 44 to VB
$CC2    $B28E   JP       V0, $28E        ; Jump to V0 + 28E
$CC4    $8CA6   SHR      VC              ; VC >>= 1, VF = LSB
$CC6    $4254   SNE      V2, #54         ; Skip if V2 != 84
$CC8    $9653   UNKNOWN  $9653           ; Unknown 9xxx instruction
$CCA    $7C18   ADD      VC, #18         ; Add 24 to VC
$CCC    $553D   UNKNOWN  $553D           ; Unknown 5xxx instruction
$CCE    $F86D   UNKNOWN  F86D            ; Unknown Fxxx instruction
$CD0    $8F59   UNKNOWN  8F59            ; Unknown 8xxx instruction
$CD2    $9582   UNKNOWN  $9582           ; Unknown 9xxx instruction
$CD4    $3B7D   SE       VB, #7D         ; Skip if VB == 125
$CD6    $3C57   SE       VC, #57         ; Skip if VC == 87
$CD8    $EC7A   UNKNOWN  $EC7A           ; Unknown Exxx instruction
$CDA    $B9E6   JP       V0, $9E6        ; Jump to V0 + 9E6
$CDC    $74FC   ADD      V4, #FC         ; Add 252 to V4
$CDE    $2624   CALL     $624            ; Call subroutine at 624
$CE0    $14E1   JP       $4E1            ; Jump to 4E1
$CE2    $D44E   DRW      V4, V4, #E      ; Draw 14-byte sprite at V4, V4
$CE4    $FB00   UNKNOWN  FB00            ; Unknown Fxxx instruction
$CE6    $2C1B   CALL     $C1B            ; Call subroutine at C1B
$CE8    $6FA0   LD       VF, #A0         ; Load 160 into VF
$CEA    $A2EA   LD       I, $2EA         ; Load 2EA into I
$CEC    $456E   SNE      V5, #6E         ; Skip if V5 != 110
$CEE    $12B5   JP       $2B5            ; Jump to 2B5
$CF0    $808C   UNKNOWN  808C            ; Unknown 8xxx instruction
$CF2    $F499   UNKNOWN  F499            ; Unknown Fxxx instruction
$CF4    $68DB   LD       V8, #DB         ; Load 219 into V8
$CF6    $0D36   SYS      $D36            ; System call to D36
$CF8    $4FE9   SNE      VF, #E9         ; Skip if VF != 233
$CFA    $5EB5   UNKNOWN  $5EB5           ; Unknown 5xxx instruction
$CFC    $90AE   UNKNOWN  $90AE           ; Unknown 9xxx instruction
$CFE    $6A05   LD       VA, #05         ; Load 5 into VA
$D00    $E7E5   UNKNOWN  $E7E5           ; Unknown Exxx instruction
$D02    $FDA3   UNKNOWN  FDA3            ; Unknown Fxxx instruction
$D04    $0DCF   SYS      $DCF            ; System call to DCF
$D06    $8100   LD       V1, V0          ; V1 = V0
$D08    $C890   RND      V8, #90         ; V8 = random & 90
$D0A    $8E00   LD       VE, V0          ; VE = V0
$D0C    $BF7D   JP       V0, $F7D        ; Jump to V0 + F7D
$D0E    $00CC   SYS      $0CC            ; System call to 0CC
$D10    $6559   LD       V5, #59         ; Load 89 into V5
$D12    $0719   SYS      $719            ; System call to 719
$D14    $5D8E   UNKNOWN  $5D8E           ; Unknown 5xxx instruction
$D16    $C7E2   RND      V7, #E2         ; V7 = random & E2
$D18    $4041   SNE      V0, #41         ; Skip if V0 != 65
$D1A    $4E8B   SNE      VE, #8B         ; Skip if VE != 139
$D1C    $CA88   RND      VA, #88         ; VA = random & 88
$D1E    $7FB0   ADD      VF, #B0         ; Add 176 to VF
$D20    $2C6A   CALL     $C6A            ; Call subroutine at C6A
$D22    $82A2   AND      V2, VA          ; V2 &= VA
$D24    $0F69   SYS      $F69            ; System call to F69
$D26    $8945   SUB      V9, V4          ; V9 -= V4, VF = !borrow
$D28    $094E   SYS      $94E            ; System call to 94E
$D2A    $8068   UNKNOWN  8068            ; Unknown 8xxx instruction
$D2C    $B1C2   JP       V0, $1C2        ; Jump to V0 + 1C2
$D2E    $197B   JP       $97B            ; Jump to 97B
$D30    $7E27   ADD      VE, #27         ; Add 39 to VE
$D32    $9A3A   UNKNOWN  $9A3A           ; Unknown 9xxx instruction
$D34    $4B07   SNE      VB, #07         ; Skip if VB != 7
$D36    $4500   SNE      V5, #00         ; Skip if V5 != 0
$D38    $4056   SNE      V0, #56         ; Skip if V0 != 86
$D3A    $9FF1   UNKNOWN  $9FF1           ; Unknown 9xxx instruction
$D3C    $E22E   UNKNOWN  $E22E           ; Unknown Exxx instruction
$D3E    $C5C8   RND      V5, #C8         ; V5 = random & C8
$D40    $8E23   XOR      VE, V2          ; VE ^= V2
$D42    $A90F   LD       I, $90F         ; Load 90F into I
$D44    $CE31   RND      VE, #31         ; VE = random & 31
$D46    $4776   SNE      V7, #76         ; Skip if V7 != 118
$D48    $8657   SUBN     V6, V5          ; V6 = V5 - V6, VF = !borrow
$D4A    $2F85   CALL     $F85            ; Call subroutine at F85
$D4C    $8924   ADD      V9, V2          ; V9 += V2, VF = carry
$D4E    $45D4   SNE      V5, #D4         ; Skip if V5 != 212
$D50    $3C2D   SE       VC, #2D         ; Skip if VC == 45
$D52    $9222   UNKNOWN  $9222           ; Unknown 9xxx instruction
$D54    $4609   SNE      V6, #09         ; Skip if V6 != 9
$D56    $F055   LD       [I], V0         ; Store V0-V0 at I
$D58    $63FC   LD       V3, #FC         ; Load 252 into V3
$D5A    $2FF0   CALL     $FF0            ; Call subroutine at FF0
$D5C    $9BF3   UNKNOWN  $9BF3           ; Unknown 9xxx instruction
$D5E    $BA48   JP       V0, $A48        ; Jump to V0 + A48
$D60    $6114   LD       V1, #14         ; Load 20 into V1
$D62    $DAEB   DRW      VA, VE, #B      ; Draw 11-byte sprite at VA, VE
$D64    $0EC1   SYS      $EC1            ; System call to EC1
$D66    $AE19   LD       I, $E19         ; Load E19 into I
$D68    $EF09   UNKNOWN  $EF09           ; Unknown Exxx instruction
$D6A    $03F2   SYS      $3F2            ; System call to 3F2
$D6C    $B551   JP       V0, $551        ; Jump to V0 + 551
$D6E    $0C50   SYS      $C50            ; System call to C50
$D70    $AB07   LD       I, $B07         ; Load B07 into I
$D72    $4967   SNE      V9, #67         ; Skip if V9 != 103
$D74    $3769   SE       V7, #69         ; Skip if V7 == 105
$D76    $A79A   LD       I, $79A         ; Load 79A into I
$D78    $D230   DRW      V2, V3, #0      ; Draw 0-byte sprite at V2, V3
$D7A    $6A99   LD       VA, #99         ; Load 153 into VA
$D7C    $AD3C   LD       I, $D3C         ; Load D3C into I
$D7E    $2469   CALL     $469            ; Call subroutine at 469
$D80    $24A6   CALL     $4A6            ; Call subroutine at 4A6
$D82    $C554   RND      V5, #54         ; V5 = random & 54
$D84    $3745   SE       V7, #45         ; Skip if V7 == 69
$D86    $59B3   UNKNOWN  $59B3           ; Unknown 5xxx instruction
$D88    $F6B7   UNKNOWN  F6B7            ; Unknown Fxxx instruction
$D8A    $2C4F   CALL     $C4F            ; Call subroutine at C4F
$D8C    $599C   UNKNOWN  $599C           ; Unknown 5xxx instruction
$D8E    $6380   LD       V3, #80         ; Load 128 into V3
$D90    $C1E2   RND      V1, #E2         ; V1 = random & E2
$D92    $0FF3   SYS      $FF3            ; System call to FF3
$D94    $4478   SNE      V4, #78         ; Skip if V4 != 120
$D96    $1E8D   JP       $E8D            ; Jump to E8D
$D98    $325E   SE       V2, #5E         ; Skip if V2 == 94
$D9A    $5A33   UNKNOWN  $5A33           ; Unknown 5xxx instruction
$D9C    $A3C9   LD       I, $3C9         ; Load 3C9 into I
$D9E    $3DCF   SE       VD, #CF         ; Skip if VD == 207
$DA0    $E3A1   SKNP     V3              ; Skip if key V3 not pressed
$DA2    $9811   UNKNOWN  $9811           ; Unknown 9xxx instruction
$DA4    $AEC6   LD       I, $EC6         ; Load EC6 into I
$DA6    $8E0A   UNKNOWN  8E0A            ; Unknown 8xxx instruction
$DA8    $21BA   CALL     $1BA            ; Call subroutine at 1BA
$DAA    $920E   UNKNOWN  $920E           ; Unknown 9xxx instruction
$DAC    $0537   SYS      $537            ; System call to 537
$DAE    $07E7   SYS      $7E7            ; System call to 7E7
$DB0    $7AA5   ADD      VA, #A5         ; Add 165 to VA
$DB2    $B9F4   JP       V0, $9F4        ; Jump to V0 + 9F4
$DB4    $E8BB   UNKNOWN  $E8BB           ; Unknown Exxx instruction
$DB6    $9286   UNKNOWN  $9286           ; Unknown 9xxx instruction
$DB8    $A61E   LD       I, $61E         ; Load 61E into I
$DBA    $885F   UNKNOWN  885F            ; Unknown 8xxx instruction
$DBC    $76C6   ADD      V6, #C6         ; Add 198 to V6
$DBE    $B36D   JP       V0, $36D        ; Jump to V0 + 36D
$DC0    $2996   CALL     $996            ; Call subroutine at 996
$DC2    $C931   RND      V9, #31         ; V9 = random & 31
$DC4    $019D   SYS      $19D            ; System call to 19D
$DC6    $D301   DRW      V3, V0, #1      ; Draw 1-byte sprite at V3, V0
$DC8    $DA44   DRW      VA, V4, #4      ; Draw 4-byte sprite at VA, V4
$DCA    $D338   DRW      V3, V3, #8      ; Draw 8-byte sprite at V3, V3
$DCC    $18B4   JP       $8B4            ; Jump to 8B4
$DCE    $E8FB   UNKNOWN  $E8FB           ; Unknown Exxx instruction
$DD0    $9CCD   UNKNOWN  $9CCD           ; Unknown 9xxx instruction
$DD2    $794A   ADD      V9, #4A         ; Add 74 to V9
$DD4    $FFE5   UNKNOWN  FFE5            ; Unknown Fxxx instruction
$DD6    $A20B   LD       I, $20B         ; Load 20B into I
$DD8    $4ED4   SNE      VE, #D4         ; Skip if VE != 212
$DDA    $30B2   SE       V0, #B2         ; Skip if V0 == 178
$DDC    $3A61   SE       VA, #61         ; Skip if VA == 97
$DDE    $CB1D   RND      VB, #1D         ; VB = random & 1D
$DE0    $D60B   DRW      V6, V0, #B      ; Draw 11-byte sprite at V6, V0
$DE2    $7932   ADD      V9, #32         ; Add 50 to V9
$DE4    $F202   UNKNOWN  F202            ; Unknown Fxxx instruction
$DE6    $B758   JP       V0, $758        ; Jump to V0 + 758
$DE8    $D75C   DRW      V7, V5, #C      ; Draw 12-byte sprite at V7, V5
$DEA    $0B8B   SYS      $B8B            ; System call to B8B
$DEC    $AD90   LD       I, $D90         ; Load D90 into I
$DEE    $6E6D   LD       VE, #6D         ; Load 109 into VE
$DF0    $801F   UNKNOWN  801F            ; Unknown 8xxx instruction
$DF2    $1C15   JP       $C15            ; Jump to C15
$DF4    $1441   JP       $441            ; Jump to 441
$DF6    $23CB   CALL     $3CB            ; Call subroutine at 3CB
$DF8    $9C5D   UNKNOWN  $9C5D           ; Unknown 9xxx instruction
$DFA    $9F9F   UNKNOWN  $9F9F           ; Unknown 9xxx instruction
$DFC    $8FB7   SUBN     VF, VB          ; VF = VB - VF, VF = !borrow
$DFE    $D3CC   DRW      V3, VC, #C      ; Draw 12-byte sprite at V3, VC
$E00    $7BBB   ADD      VB, #BB         ; Add 187 to VB
$E02    $12BE   JP       $2BE            ; Jump to 2BE
$E04    $B5F4   JP       V0, $5F4        ; Jump to V0 + 5F4
$E06    $A0F3   LD       I, $0F3         ; Load 0F3 into I
$E08    $B9F6   JP       V0, $9F6        ; Jump to V0 + 9F6
$E0A    $4C87   SNE      VC, #87         ; Skip if VC != 135
$E0C    $5D4A   UNKNOWN  $5D4A           ; Unknown 5xxx instruction
$E0E    $761C   ADD      V6, #1C         ; Add 28 to V6
$E10    $C846   RND      V8, #46         ; V8 = random & 46
$E12    $51CE   UNKNOWN  $51CE           ; Unknown 5xxx instruction
$E14    $363C   SE       V6, #3C         ; Skip if V6 == 60
$E16    $304F   SE       V0, #4F         ; Skip if V0 == 79
$E18    $4D16   SNE      VD, #16         ; Skip if VD != 22
$E1A    $445D   SNE      V4, #5D         ; Skip if V4 != 93
$E1C    $B684   JP       V0, $684        ; Jump to V0 + 684
$E1E    $4DC5   SNE      VD, #C5         ; Skip if VD != 197
$E20    $39DC   SE       V9, #DC         ; Skip if V9 == 220
$E22    $B193   JP       V0, $193        ; Jump to V0 + 193
$E24    $CB3F   RND      VB, #3F         ; VB = random & 3F
$E26    $E671   UNKNOWN  $E671           ; Unknown Exxx instruction
$E28    $5F33   UNKNOWN  $5F33           ; Unknown 5xxx instruction
$E2A    $AA6C   LD       I, $A6C         ; Load A6C into I
$E2C    $D531   DRW      V5, V3, #1      ; Draw 1-byte sprite at V5, V3
$E2E    $9A85   UNKNOWN  $9A85           ; Unknown 9xxx instruction
$E30    $14D5   JP       $4D5            ; Jump to 4D5
$E32    $8740   LD       V7, V4          ; V7 = V4
$E34    $33BA   SE       V3, #BA         ; Skip if V3 == 186
$E36    $1BCE   JP       $BCE            ; Jump to BCE
$E38    $3F16   SE       VF, #16         ; Skip if VF == 22
$E3A    $B574   JP       V0, $574        ; Jump to V0 + 574
$E3C    $833F   UNKNOWN  833F            ; Unknown 8xxx instruction
$E3E    $EC57   UNKNOWN  $EC57           ; Unknown Exxx instruction
$E40    $1AA1   JP       $AA1            ; Jump to AA1
$E42    $456A   SNE      V5, #6A         ; Skip if V5 != 106
$E44    $C150   RND      V1, #50         ; V1 = random & 50
$E46    $4527   SNE      V5, #27         ; Skip if V5 != 39
$E48    $97D4   UNKNOWN  $97D4           ; Unknown 9xxx instruction
$E4A    $AA35   LD       I, $A35         ; Load A35 into I
$E4C    $7CD2   ADD      VC, #D2         ; Add 210 to VC
$E4E    $E531   UNKNOWN  $E531           ; Unknown Exxx instruction
$E50    $9E9B   UNKNOWN  $9E9B           ; Unknown 9xxx instruction
$E52    $9796   UNKNOWN  $9796           ; Unknown 9xxx instruction
$E54    $DBD0   DRW      VB, VD, #0      ; Draw 0-byte sprite at VB, VD
$E56    $EAC4   UNKNOWN  $EAC4           ; Unknown Exxx instruction
$E58    $6BE1   LD       VB, #E1         ; Load 225 into VB
$E5A    $972B   UNKNOWN  $972B           ; Unknown 9xxx instruction
$E5C    $5D6D   UNKNOWN  $5D6D           ; Unknown 5xxx instruction
$E5E    $3137   SE       V1, #37         ; Skip if V1 == 55
$E60    $D876   DRW      V8, V7, #6      ; Draw 6-byte sprite at V8, V7
$E62    $43C6   SNE      V3, #C6         ; Skip if V3 != 198
$E64    $BAA8   JP       V0, $AA8        ; Jump to V0 + AA8
$E66    $3E14   SE       VE, #14         ; Skip if VE == 20
$E68    $844E   SHL      V4              ; V4 <<= 1, VF = MSB
$E6A    $12DC   JP       $2DC            ; Jump to 2DC
$E6C    $CF2A   RND      VF, #2A         ; VF = random & 2A
$E6E    $3E36   SE       VE, #36         ; Skip if VE == 54
$E70    $9C4A   UNKNOWN  $9C4A           ; Unknown 9xxx instruction
$E72    $55F5   UNKNOWN  $55F5           ; Unknown 5xxx instruction
$E74    $7291   ADD      V2, #91         ; Add 145 to V2
$E76    $B5F5   JP       V0, $5F5        ; Jump to V0 + 5F5
$E78    $7208   ADD      V2, #08         ; Add 8 to V2
$E7A    $2F4C   CALL     $F4C            ; Call subroutine at F4C
$E7C    $7891   ADD      V8, #91         ; Add 145 to V8
$E7E    $10D3   JP       $0D3            ; Jump to 0D3
$E80    $6513   LD       V5, #13         ; Load 19 into V5
$E82    $F3A5   UNKNOWN  F3A5            ; Unknown Fxxx instruction
$E84    $3222   SE       V2, #22         ; Skip if V2 == 34
$E86    $1D9A   JP       $D9A            ; Jump to D9A
$E88    $A7C0   LD       I, $7C0         ; Load 7C0 into I
$E8A    $BD8C   JP       V0, $D8C        ; Jump to V0 + D8C
$E8C    $896C   UNKNOWN  896C            ; Unknown 8xxx instruction
$E8E    $84E8   UNKNOWN  84E8            ; Unknown 8xxx instruction
$E90    $4872   SNE      V8, #72         ; Skip if V8 != 114
$E92    $54B7   UNKNOWN  $54B7           ; Unknown 5xxx instruction
$E94    $ACC8   LD       I, $CC8         ; Load CC8 into I
$E96    $7104   ADD      V1, #04         ; Add 4 to V1
$E98    $2DB7   CALL     $DB7            ; Call subroutine at DB7
$E9A    $2731   CALL     $731            ; Call subroutine at 731
$E9C    $12A3   JP       $2A3            ; Jump to 2A3
$E9E    $EDB0   UNKNOWN  $EDB0           ; Unknown Exxx instruction
$EA0    $E567   UNKNOWN  $E567           ; Unknown Exxx instruction
$EA2    $4015   SNE      V0, #15         ; Skip if V0 != 21
$EA4    $FBEA   UNKNOWN  FBEA            ; Unknown Fxxx instruction
$EA6    $8912   AND      V9, V1          ; V9 &= V1
$EA8    $4E7E   SNE      VE, #7E         ; Skip if VE != 126
$EAA    $CACB   RND      VA, #CB         ; VA = random & CB
$EAC    $BFCB   JP       V0, $FCB        ; Jump to V0 + FCB
$EAE    $0B43   SYS      $B43            ; System call to B43
$EB0    $07AE   SYS      $7AE            ; System call to 7AE
$EB2    $1B48   JP       $B48            ; Jump to B48
$EB4    $8169   UNKNOWN  8169            ; Unknown 8xxx instruction
$EB6    $80F7   SUBN     V0, VF          ; V0 = VF - V0, VF = !borrow
$EB8    $C421   RND      V4, #21         ; V4 = random & 21
$EBA    $4E25   SNE      VE, #25         ; Skip if VE != 37
$EBC    $CB43   RND      VB, #43         ; VB = random & 43
$EBE    $C264   RND      V2, #64         ; V2 = random & 64
$EC0    $05BF   SYS      $5BF            ; System call to 5BF
$EC2    $E30A   UNKNOWN  $E30A           ; Unknown Exxx instruction
$EC4    $ABD8   LD       I, $BD8         ; Load BD8 into I
$EC6    $D4D5   DRW      V4, VD, #5      ; Draw 5-byte sprite at V4, VD
$EC8    $4A75   SNE      VA, #75         ; Skip if VA != 117
$ECA    $9664   UNKNOWN  $9664           ; Unknown 9xxx instruction
$ECC    $7821   ADD      V8, #21         ; Add 33 to V8
$ECE    $CDCE   RND      VD, #CE         ; VD = random & CE
$ED0    $6E4B   LD       VE, #4B         ; Load 75 into VE
$ED2    $9E6B   UNKNOWN  $9E6B           ; Unknown 9xxx instruction
$ED4    $29DF   CALL     $9DF            ; Call subroutine at 9DF
$ED6    $CA38   RND      VA, #38         ; VA = random & 38
$ED8    $8B64   ADD      VB, V6          ; VB += V6, VF = carry
$EDA    $7CAB   ADD      VC, #AB         ; Add 171 to VC
$EDC    $CD57   RND      VD, #57         ; VD = random & 57
$EDE    $8DFB   UNKNOWN  8DFB            ; Unknown 8xxx instruction
$EE0    $C797   RND      V7, #97         ; V7 = random & 97
$EE2    $9B3A   UNKNOWN  $9B3A           ; Unknown 9xxx instruction
$EE4    $EDCF   UNKNOWN  $EDCF           ; Unknown Exxx instruction
$EE6    $02EB   SYS      $2EB            ; System call to 2EB
$EE8    $B941   JP       V0, $941        ; Jump to V0 + 941
$EEA    $91F6   UNKNOWN  $91F6           ; Unknown 9xxx instruction
$EEC    $5082   UNKNOWN  $5082           ; Unknown 5xxx instruction
$EEE    $6CC4   LD       VC, #C4         ; Load 196 into VC
$EF0    $314B   SE       V1, #4B         ; Skip if V1 == 75
$EF2    $EFB0   UNKNOWN  $EFB0           ; Unknown Exxx instruction
$EF4    $B710   JP       V0, $710        ; Jump to V0 + 710
$EF6    $5D56   UNKNOWN  $5D56           ; Unknown 5xxx instruction
$EF8    $1B1F   JP       $B1F            ; Jump to B1F
$EFA    $D08A   DRW      V0, V8, #A      ; Draw 10-byte sprite at V0, V8
$EFC    $54A5   UNKNOWN  $54A5           ; Unknown 5xxx instruction
$EFE    $ADF2   LD       I, $DF2         ; Load DF2 into I
$F00    $68D1   LD       V8, #D1         ; Load 209 into V8
$F02    $5973   UNKNOWN  $5973           ; Unknown 5xxx instruction
$F04    $7652   ADD      V6, #52         ; Add 82 to V6
$F06    $5B09   UNKNOWN  $5B09           ; Unknown 5xxx instruction
$F08    $ED29   UNKNOWN  $ED29           ; Unknown Exxx instruction
$F0A    $E4AD   UNKNOWN  $E4AD           ; Unknown Exxx instruction
$F0C    $5FE5   UNKNOWN  $5FE5           ; Unknown 5xxx instruction
$F0E    $017A   SYS      $17A            ; System call to 17A
$F10    $D359   DRW      V3, V5, #9      ; Draw 9-byte sprite at V3, V5
$F12    $F7EE   UNKNOWN  F7EE            ; Unknown Fxxx instruction
$F14    $6287   LD       V2, #87         ; Load 135 into V2
$F16    $BFC4   JP       V0, $FC4        ; Jump to V0 + FC4
$F18    $6590   LD       V5, #90         ; Load 144 into V5
$F1A    $43C5   SNE      V3, #C5         ; Skip if V3 != 197
$F1C    $742F   ADD      V4, #2F         ; Add 47 to V4
$F1E    $1D11   JP       $D11            ; Jump to D11
$F20    $83E8   UNKNOWN  83E8            ; Unknown 8xxx instruction
$F22    $FBF9   UNKNOWN  FBF9            ; Unknown Fxxx instruction
$F24    $0576   SYS      $576            ; System call to 576
$F26    $EE1A   UNKNOWN  $EE1A           ; Unknown Exxx instruction
$F28    $4869   SNE      V8, #69         ; Skip if V8 != 105
$F2A    $B065   JP       V0, $065        ; Jump to V0 + 065
$F2C    $8521   OR       V5, V2          ; V5 |= V2
$F2E    $7DAC   ADD      VD, #AC         ; Add 172 to VD
$F30    $C9F6   RND      V9, #F6         ; V9 = random & F6
$F32    $85D7   SUBN     V5, VD          ; V5 = VD - V5, VF = !borrow
$F34    $4396   SNE      V3, #96         ; Skip if V3 != 150
$F36    $A010   LD       I, $010         ; Load 010 into I
$F38    $B29C   JP       V0, $29C        ; Jump to V0 + 29C
$F3A    $E7D3   UNKNOWN  $E7D3           ; Unknown Exxx instruction
$F3C    $35E5   SE       V5, #E5         ; Skip if V5 == 229
$F3E    $A76D   LD       I, $76D         ; Load 76D into I
$F40    $334F   SE       V3, #4F         ; Skip if V3 == 79
$F42    $8AA5   SUB      VA, VA          ; VA -= VA, VF = !borrow
$F44    $6D77   LD       VD, #77         ; Load 119 into VD
$F46    $C78B   RND      V7, #8B         ; V7 = random & 8B
$F48    $E767   UNKNOWN  $E767           ; Unknown Exxx instruction
$F4A    $FD3E   UNKNOWN  FD3E            ; Unknown Fxxx instruction
$F4C    $C04C   RND      V0, #4C         ; V0 = random & 4C
$F4E    $E0B4   UNKNOWN  $E0B4           ; Unknown Exxx instruction
$F50    $6F53   LD       VF, #53         ; Load 83 into VF
$F52    $8C53   XOR      VC, V5          ; VC ^= V5
$F54    $ACB4   LD       I, $CB4         ; Load CB4 into I
$F56    $0751   SYS      $751            ; System call to 751
$F58    $6269   LD       V2, #69         ; Load 105 into V2
$F5A    $1484   JP       $484            ; Jump to 484
$F5C    $F81A   UNKNOWN  F81A            ; Unknown Fxxx instruction
$F5E    $DB49   DRW      VB, V4, #9      ; Draw 9-byte sprite at VB, V4
$F60    $32E7   SE       V2, #E7         ; Skip if V2 == 231
$F62    $E98F   UNKNOWN  $E98F           ; Unknown Exxx instruction
$F64    $0700   SYS      $700            ; System call to 700
$F66    $A112   LD       I, $112         ; Load 112 into I
$F68    $18B7   JP       $8B7            ; Jump to 8B7
$F6A    $99DB   UNKNOWN  $99DB           ; Unknown 9xxx instruction
$F6C    $B952   JP       V0, $952        ; Jump to V0 + 952
$F6E    $5FA4   UNKNOWN  $5FA4           ; Unknown 5xxx instruction
$F70    $CF38   RND      VF, #38         ; VF = random & 38
$F72    $9A74   UNKNOWN  $9A74           ; Unknown 9xxx instruction
$F74    $37CC   SE       V7, #CC         ; Skip if V7 == 204
$F76    $E194   UNKNOWN  $E194           ; Unknown Exxx instruction
$F78    $BF63   JP       V0, $F63        ; Jump to V0 + F63
$F7A    $B354   JP       V0, $354        ; Jump to V0 + 354
$F7C    $D80C   DRW      V8, V0, #C      ; Draw 12-byte sprite at V8, V0
$F7E    $1763   JP       $763            ; Jump to 763
$F80    $12F2   JP       $2F2            ; Jump to 2F2
$F82    $9B0A   UNKNOWN  $9B0A           ; Unknown 9xxx instruction
$F84    $C211   RND      V2, #11         ; V2 = random & 11
$F86    $2AD1   CALL     $AD1            ; Call subroutine at AD1
$F88    $D753   DRW      V7, V5, #3      ; Draw 3-byte sprite at V7, V5
$F8A    $FEF4   UNKNOWN  FEF4            ; Unknown Fxxx instruction
$F8C    $3AE5   SE       VA, #E5         ; Skip if VA == 229
$F8E    $02A2   SYS      $2A2            ; System call to 2A2
$F90    $AE32   LD       I, $E32         ; Load E32 into I
$F92    $EE59   UNKNOWN  $EE59           ; Unknown Exxx instruction
$F94    $B8F8   JP       V0, $8F8        ; Jump to V0 + 8F8
$F96    $1534   JP       $534            ; Jump to 534
$F98    $1DAC   JP       $DAC            ; Jump to DAC
$F9A    $C2A8   RND      V2, #A8         ; V2 = random & A8
$F9C    $4ABB   SNE      VA, #BB         ; Skip if VA != 187
$F9E    $AFF6   LD       I, $FF6         ; Load FF6 into I
$FA0    $79B3   ADD      V9, #B3         ; Add 179 to V9
$FA2    $F736   UNKNOWN  F736            ; Unknown Fxxx instruction
$FA4    $3E24   SE       VE, #24         ; Skip if VE == 36
$FA6    $A954   LD       I, $954         ; Load 954 into I
$FA8    $AFB6   LD       I, $FB6         ; Load FB6 into I
$FAA    $3480   SE       V4, #80         ; Skip if V4 == 128
$FAC    $003D   SYS      $03D            ; System call to 03D
$FAE    $A3A0   LD       I, $3A0         ; Load 3A0 into I
$FB0    $123B   JP       $23B            ; Jump to 23B
$FB2    $B549   JP       V0, $549        ; Jump to V0 + 549
$FB4    $94A7   UNKNOWN  $94A7           ; Unknown 9xxx instruction
$FB6    $F48B   UNKNOWN  F48B            ; Unknown Fxxx instruction
$FB8    $68F1   LD       V8, #F1         ; Load 241 into V8
$FBA    $F912   UNKNOWN  F912            ; Unknown Fxxx instruction
$FBC    $60F0   LD       V0, #F0         ; Load 240 into V0
$FBE    $A02C   LD       I, $02C         ; Load 02C into I
$FC0    $CE5A   RND      VE, #5A         ; VE = random & 5A
$FC2    $E10A   UNKNOWN  $E10A           ; Unknown Exxx instruction
$FC4    $331E   SE       V3, #1E         ; Skip if V3 == 30
$FC6    $DA49   DRW      VA, V4, #9      ; Draw 9-byte sprite at VA, V4
$FC8    $8035   SUB      V0, V3          ; V0 -= V3, VF = !borrow
$FCA    $BC65   JP       V0, $C65        ; Jump to V0 + C65
$FCC    $BC3F   JP       V0, $C3F        ; Jump to V0 + C3F
$FCE    $8B27   SUBN     VB, V2          ; VB = V2 - VB, VF = !borrow
$FD0    $799F   ADD      V9, #9F         ; Add 159 to V9
$FD2    $FF89   UNKNOWN  FF89            ; Unknown Fxxx instruction
$FD4    $D900   DRW      V9, V0, #0      ; Draw 0-byte sprite at V9, V0
$FD6    $45F4   SNE      V5, #F4         ; Skip if V5 != 244
$FD8    $FE1C   UNKNOWN  FE1C            ; Unknown Fxxx instruction
$FDA    $6231   LD       V2, #31         ; Load 49 into V2
$FDC    $ABBD   LD       I, $BBD         ; Load BBD into I
$FDE    $DF84   DRW      VF, V8, #4      ; Draw 4-byte sprite at VF, V8
$FE0    $5BF9   UNKNOWN  $5BF9           ; Unknown 5xxx instruction
$FE2    $C539   RND      V5, #39         ; V5 = random & 39
$FE4    $407E   SNE      V0, #7E         ; Skip if V0 != 126
$FE6    $2CF0   CALL     $CF0            ; Call subroutine at CF0
$FE8    $A061   LD       I, $061         ; Load 061 into I
$FEA    $5298   UNKNOWN  $5298           ; Unknown 5xxx instruction
$FEC    $0AF8   SYS      $AF8            ; System call to AF8
$FEE    $6DAC   LD       VD, #AC         ; Load 172 into VD
$FF0    $6A12   LD       VA, #12         ; Load 18 into VA
$FF2    $C366   RND      V3, #66         ; V3 = random & 66
$FF4    $EF3E   UNKNOWN  $EF3E           ; Unknown Exxx instruction
$FF6    $BE3F   JP       V0, $E3F        ; Jump to V0 + E3F
$FF8    $99CA   UNKNOWN  $99CA           ; Unknown 9xxx instruction
$FFA    $B468   JP       V0, $468        ; Jump to V0 + 468
$FFC    $C957   RND      V9, #57         ; V9 = random & 57
$FFE    $320F   SE       V2, #0F         ; Skip if V2 == 15

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 493 (27.5%)
  LD      : 235 (13.1%)
  JP      : 230 (12.8%)
  SE      : 140 ( 7.8%)
  SNE     : 123 ( 6.9%)
  ADD     : 115 ( 6.4%)
  RND     : 109 ( 6.1%)
  SYS     : 102 ( 5.7%)
  DRW     :  98 ( 5.5%)
  CALL    :  90 ( 5.0%)
  SHL     :  11 ( 0.6%)
  SUBN    :  11 ( 0.6%)
  SHR     :  10 ( 0.6%)
  AND     :   9 ( 0.5%)
  SUB     :   8 ( 0.4%)
  XOR     :   4 ( 0.2%)
  OR      :   3 ( 0.2%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 350 (19.5%)
Arithmetic Operations: 150 (8.4%)
