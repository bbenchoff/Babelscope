
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B5711D01_I26138_C1001_ddcadfac8998.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 5711
Instance: 26138
Direction: ascending
Final Array: [0, 6, 6, 34, 105, 108, 142, 162]
Operations: R:0 W:2 C:84 S:36

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 104
Sort Array References:
  $236: LD I, $2F6 ; Load 2F6 into I
  $23A: LD I, $8A1 ; Load 8A1 into I
  $23C: LD I, $A75 ; Load A75 into I
  $242: LD I, $FD9 ; Load FD9 into I
  $254: LD I, $C79 ; Load C79 into I
  $264: LD I, $581 ; Load 581 into I
  $27E: LD I, $46A ; Load 46A into I
  $2AA: LD I, $2F3 ; Load 2F3 into I
  $2C6: LD I, $17B ; Load 17B into I
  $33C: LD I, $9FB ; Load 9FB into I
  $368: LD I, $933 ; Load 933 into I
  $37C: LD I, $2D2 ; Load 2D2 into I
  $38C: LD I, $322 ; Load 322 into I
  $3AC: LD I, $254 ; Load 254 into I
  $3CC: LD I, $BFB ; Load BFB into I
  $404: LD I, $9D0 ; Load 9D0 into I
  $45A: LD I, $6A4 ; Load 6A4 into I
  $486: LD I, $E31 ; Load E31 into I
  $4B4: LD I, $EEB ; Load EEB into I
  $4C2: LD I, $8A6 ; Load 8A6 into I
  $4CE: LD I, $549 ; Load 549 into I
  $4DA: LD I, $5F4 ; Load 5F4 into I
  $51A: LD I, $AF1 ; Load AF1 into I
  $526: LD I, $876 ; Load 876 into I
  $53A: LD I, $0F8 ; Load 0F8 into I
  $556: LD I, $243 ; Load 243 into I
  $56A: LD I, $954 ; Load 954 into I
  $570: LD I, $902 ; Load 902 into I
  $586: LD I, $F19 ; Load F19 into I
  $5A4: LD I, $71C ; Load 71C into I
  $5AE: LD I, $6CB ; Load 6CB into I
  $5B8: LD I, $0AD ; Load 0AD into I
  $5C6: LD I, $3E3 ; Load 3E3 into I
  $63A: LD I, $533 ; Load 533 into I
  $644: LD I, $F1D ; Load F1D into I
  $650: LD I, $D4F ; Load D4F into I
  $698: LD I, $BB0 ; Load BB0 into I
  $6B8: LD I, $AFE ; Load AFE into I
  $6F2: LD I, $D33 ; Load D33 into I
  $6FA: LD I, $210 ; Load 210 into I
  $70C: LD I, $811 ; Load 811 into I
  $710: LD I, $9EC ; Load 9EC into I
  $73E: LD I, $0A3 ; Load 0A3 into I
  $782: LD I, $6A2 ; Load 6A2 into I
  $7BC: LD I, $368 ; Load 368 into I
  $82A: LD I, $24E ; Load 24E into I
  $844: LD I, $3A7 ; Load 3A7 into I
  $864: LD I, $259 ; Load 259 into I
  $88C: LD I, $6CE ; Load 6CE into I
  $892: LD I, $696 ; Load 696 into I
  $896: LD I, $E30 ; Load E30 into I
  $8A8: LD I, $49D ; Load 49D into I
  $8BC: LD I, $53B ; Load 53B into I
  $8F2: LD I, $AEB ; Load AEB into I
  $912: LD I, $748 ; Load 748 into I
  $934: LD I, $AA3 ; Load AA3 into I
  $950: LD I, $188 ; Load 188 into I
  $978: LD I, $51F ; Load 51F into I
  $980: LD I, $7B7 ; Load 7B7 into I
  $98A: LD I, $04B ; Load 04B into I
  $99C: LD I, $1CD ; Load 1CD into I
  $9AC: LD I, $708 ; Load 708 into I
  $A02: LD I, $FF7 ; Load FF7 into I
  $A20: LD I, $A4A ; Load A4A into I
  $A76: LD I, $96C ; Load 96C into I
  $A8E: LD I, $A37 ; Load A37 into I
  $AA0: LD I, $DCC ; Load DCC into I
  $AA8: LD I, $B1D ; Load B1D into I
  $AAE: LD I, $061 ; Load 061 into I
  $AB6: LD I, $B87 ; Load B87 into I
  $ACA: LD I, $D7B ; Load D7B into I
  $AE6: LD I, $3DC ; Load 3DC into I
  $AFA: LD I, $AAC ; Load AAC into I
  $B0E: LD I, $86E ; Load 86E into I
  $B48: LD I, $4BC ; Load 4BC into I
  $B56: LD I, $589 ; Load 589 into I
  $B92: LD I, $D1A ; Load D1A into I
  $BC2: LD I, $E5A ; Load E5A into I
  $BC6: LD I, $15C ; Load 15C into I
  $C46: LD I, $46B ; Load 46B into I
  $C54: LD I, $CD5 ; Load CD5 into I
  $C64: LD I, $DA8 ; Load DA8 into I
  $C7E: LD I, $B09 ; Load B09 into I
  $C96: LD I, $A8B ; Load A8B into I
  $CA6: LD I, $0E5 ; Load 0E5 into I
  $CC8: LD I, $2E8 ; Load 2E8 into I
  $CCA: LD I, $E71 ; Load E71 into I
  $CD0: LD I, $3CC ; Load 3CC into I
  $CE8: LD I, $950 ; Load 950 into I
  $CFC: LD I, $6A8 ; Load 6A8 into I
  $D08: LD I, $FD2 ; Load FD2 into I
  $D10: LD I, $4A0 ; Load 4A0 into I
  $D1A: LD I, $F28 ; Load F28 into I
  $D30: LD I, $70A ; Load 70A into I
  $D80: LD I, $14F ; Load 14F into I
  $D8A: LD I, $EFA ; Load EFA into I
  $D8C: LD I, $3F0 ; Load 3F0 into I
  $DA4: LD I, $1C1 ; Load 1C1 into I
  $DC6: LD I, $72F ; Load 72F into I
  $DE6: LD I, $C28 ; Load C28 into I
  $E88: LD I, $2D2 ; Load 2D2 into I
  $EE0: LD I, $B01 ; Load B01 into I
  $EF4: LD I, $E90 ; Load E90 into I
  $F3E: LD I, $75C ; Load 75C into I

CONTROL FLOW ANALYSIS:
Jumps: 232
Calls: 98
Branches: 263
Loops: 132
Loop Structures:
  $23E -> $140 (backward jump)
  $246 -> $002 (backward jump)
  $2CE -> $03B (backward jump)
  $31C -> $31B (backward jump)
  $398 -> $150 (backward jump)
  $400 -> $349 (backward jump)
  $42C -> $064 (backward jump)
  $452 -> $29C (backward jump)
  $4D0 -> $258 (backward jump)
  $4D2 -> $073 (backward jump)
  $51E -> $367 (backward jump)
  $528 -> $46A (backward jump)
  $53E -> $284 (backward jump)
  $552 -> $0CA (backward jump)
  $598 -> $264 (backward jump)
  $59E -> $007 (backward jump)
  $5CC -> $1C0 (backward jump)
  $5EC -> $1BB (backward jump)
  $610 -> $22D (backward jump)
  $6C8 -> $334 (backward jump)
  $6FE -> $29F (backward jump)
  $728 -> $586 (backward jump)
  $72C -> $518 (backward jump)
  $742 -> $3CD (backward jump)
  $744 -> $680 (backward jump)
  $776 -> $549 (backward jump)
  $796 -> $582 (backward jump)
  $7A0 -> $127 (backward jump)
  $7A8 -> $518 (backward jump)
  $7C8 -> $198 (backward jump)
  $7E6 -> $40F (backward jump)
  $7EE -> $016 (backward jump)
  $82C -> $30C (backward jump)
  $846 -> $010 (backward jump)
  $84C -> $5A4 (backward jump)
  $85C -> $460 (backward jump)
  $884 -> $3A2 (backward jump)
  $8A6 -> $89B (backward jump)
  $8AA -> $557 (backward jump)
  $91E -> $222 (backward jump)
  $93C -> $564 (backward jump)
  $958 -> $922 (backward jump)
  $962 -> $3FA (backward jump)
  $968 -> $41B (backward jump)
  $9A8 -> $58D (backward jump)
  $9AA -> $035 (backward jump)
  $9AE -> $09E (backward jump)
  $9CA -> $55D (backward jump)
  $9D4 -> $67F (backward jump)
  $9D6 -> $886 (backward jump)
  $9E8 -> $096 (backward jump)
  $9EE -> $73B (backward jump)
  $A10 -> $2DE (backward jump)
  $A22 -> $664 (backward jump)
  $A24 -> $219 (backward jump)
  $A2A -> $60E (backward jump)
  $A4C -> $5C0 (backward jump)
  $A5A -> $29A (backward jump)
  $A7C -> $A6E (backward jump)
  $A7E -> $6AB (backward jump)
  $AB4 -> $5BC (backward jump)
  $B1E -> $918 (backward jump)
  $B3E -> $AC5 (backward jump)
  $B58 -> $14F (backward jump)
  $B64 -> $8B1 (backward jump)
  $B6A -> $6DD (backward jump)
  $B72 -> $755 (backward jump)
  $B76 -> $001 (backward jump)
  $B88 -> $75B (backward jump)
  $BB2 -> $053 (backward jump)
  $BBC -> $84A (backward jump)
  $BC8 -> $62C (backward jump)
  $BD6 -> $58C (backward jump)
  $BE0 -> $388 (backward jump)
  $BF6 -> $9FE (backward jump)
  $C0C -> $A12 (backward jump)
  $C1E -> $132 (backward jump)
  $C32 -> $977 (backward jump)
  $C50 -> $8A5 (backward jump)
  $C58 -> $4ED (backward jump)
  $C5E -> $798 (backward jump)
  $C62 -> $0C7 (backward jump)
  $C8E -> $916 (backward jump)
  $C92 -> $8C7 (backward jump)
  $CA8 -> $52A (backward jump)
  $CB8 -> $AAA (backward jump)
  $CD2 -> $963 (backward jump)
  $CE0 -> $8C8 (backward jump)
  $CE2 -> $CA4 (backward jump)
  $D14 -> $85E (backward jump)
  $D16 -> $845 (backward jump)
  $D20 -> $229 (backward jump)
  $D24 -> $396 (backward jump)
  $D3A -> $6B2 (backward jump)
  $D3E -> $9FC (backward jump)
  $D52 -> $660 (backward jump)
  $D88 -> $053 (backward jump)
  $D94 -> $CBF (backward jump)
  $DCE -> $541 (backward jump)
  $DFA -> $ADA (backward jump)
  $E04 -> $581 (backward jump)
  $E30 -> $148 (backward jump)
  $E38 -> $706 (backward jump)
  $E3C -> $A25 (backward jump)
  $E4C -> $79E (backward jump)
  $E64 -> $6E8 (backward jump)
  $E70 -> $52C (backward jump)
  $E7C -> $ACB (backward jump)
  $E82 -> $4C8 (backward jump)
  $E86 -> $C6F (backward jump)
  $E90 -> $0AC (backward jump)
  $EBA -> $154 (backward jump)
  $EBE -> $201 (backward jump)
  $EC0 -> $B85 (backward jump)
  $ECE -> $38F (backward jump)
  $ED2 -> $05D (backward jump)
  $EDC -> $4A2 (backward jump)
  $F00 -> $620 (backward jump)
  $F12 -> $492 (backward jump)
  $F18 -> $967 (backward jump)
  $F1E -> $094 (backward jump)
  $F32 -> $6E9 (backward jump)
  $F8E -> $2AF (backward jump)
  $FA8 -> $B71 (backward jump)
  $FB0 -> $90A (backward jump)
  $FB4 -> $984 (backward jump)
  $FBC -> $9AA (backward jump)
  $FD2 -> $268 (backward jump)
  $FDA -> $86A (backward jump)
  $FEC -> $1B5 (backward jump)
  $FF2 -> $2D7 (backward jump)
  $FFC -> $189 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $8FD5   SUB      VF, VD          ; VF -= VD, VF = !borrow
$202    $B320   JP       V0, $320        ; Jump to V0 + 320
$204    $2CF5   CALL     $CF5            ; Call subroutine at CF5
$206    $7295   ADD      V2, #95         ; Add 149 to V2
$208    $7FC4   ADD      VF, #C4         ; Add 196 to VF
$20A    $409A   SNE      V0, #9A         ; Skip if V0 != 154
$20C    $F244   UNKNOWN  F244            ; Unknown Fxxx instruction
$20E    $C9E0   RND      V9, #E0         ; V9 = random & E0
$210    $E620   UNKNOWN  $E620           ; Unknown Exxx instruction
$212    $38E2   SE       V8, #E2         ; Skip if V8 == 226
$214    $F424   UNKNOWN  F424            ; Unknown Fxxx instruction
$216    $62F2   LD       V2, #F2         ; Load 242 into V2
$218    $E344   UNKNOWN  $E344           ; Unknown Exxx instruction
$21A    $4CEF   SNE      VC, #EF         ; Skip if VC != 239
$21C    $8D03   XOR      VD, V0          ; VD ^= V0
$21E    $B37E   JP       V0, $37E        ; Jump to V0 + 37E
$220    $8C96   SHR      VC              ; VC >>= 1, VF = LSB
$222    $9D6F   UNKNOWN  $9D6F           ; Unknown 9xxx instruction
$224    $BC4A   JP       V0, $C4A        ; Jump to V0 + C4A
$226    $14AB   JP       $4AB            ; Jump to 4AB
$228    $3A95   SE       VA, #95         ; Skip if VA == 149
$22A    $6D35   LD       VD, #35         ; Load 53 into VD
$22C    $9D79   UNKNOWN  $9D79           ; Unknown 9xxx instruction
$22E    $7678   ADD      V6, #78         ; Add 120 to V6
$230    $F588   UNKNOWN  F588            ; Unknown Fxxx instruction
$232    $B2CD   JP       V0, $2CD        ; Jump to V0 + 2CD
$234    $85A0   LD       V5, VA          ; V5 = VA
$236    $A2F6   LD       I, $2F6         ; Load 2F6 into I
$238    $B302   JP       V0, $302        ; Jump to V0 + 302
$23A    $A8A1   LD       I, $8A1         ; Load 8A1 into I
$23C    $AA75   LD       I, $A75         ; Load A75 into I
$23E    $1140   JP       $140            ; Jump to 140
$240    $78D1   ADD      V8, #D1         ; Add 209 to V8
$242    $AFD9   LD       I, $FD9         ; Load FD9 into I
$244    $9FF6   UNKNOWN  $9FF6           ; Unknown 9xxx instruction
$246    $B002   JP       V0, $002        ; Jump to V0 + 002
$248    $ECD0   UNKNOWN  $ECD0           ; Unknown Exxx instruction
$24A    $7945   ADD      V9, #45         ; Add 69 to V9
$24C    $E6ED   UNKNOWN  $E6ED           ; Unknown Exxx instruction
$24E    $320B   SE       V2, #0B         ; Skip if V2 == 11
$250    $4B3A   SNE      VB, #3A         ; Skip if VB != 58
$252    $5F0F   UNKNOWN  $5F0F           ; Unknown 5xxx instruction
$254    $AC79   LD       I, $C79         ; Load C79 into I
$256    $B80C   JP       V0, $80C        ; Jump to V0 + 80C
$258    $14C1   JP       $4C1            ; Jump to 4C1
$25A    $0E16   SYS      $E16            ; System call to E16
$25C    $4840   SNE      V8, #40         ; Skip if V8 != 64
$25E    $E79E   SKP      V7              ; Skip if key V7 pressed
$260    $6F28   LD       VF, #28         ; Load 40 into VF
$262    $E867   UNKNOWN  $E867           ; Unknown Exxx instruction
$264    $A581   LD       I, $581         ; Load 581 into I
$266    $720F   ADD      V2, #0F         ; Add 15 to V2
$268    $264C   CALL     $64C            ; Call subroutine at 64C
$26A    $2E10   CALL     $E10            ; Call subroutine at E10
$26C    $0739   SYS      $739            ; System call to 739
$26E    $8939   UNKNOWN  8939            ; Unknown 8xxx instruction
$270    $E7F6   UNKNOWN  $E7F6           ; Unknown Exxx instruction
$272    $5E62   UNKNOWN  $5E62           ; Unknown 5xxx instruction
$274    $30D3   SE       V0, #D3         ; Skip if V0 == 211
$276    $3A6C   SE       VA, #6C         ; Skip if VA == 108
$278    $E52C   UNKNOWN  $E52C           ; Unknown Exxx instruction
$27A    $C27B   RND      V2, #7B         ; V2 = random & 7B
$27C    $225C   CALL     $25C            ; Call subroutine at 25C
$27E    $A46A   LD       I, $46A         ; Load 46A into I
$280    $8F4D   UNKNOWN  8F4D            ; Unknown 8xxx instruction
$282    $22E4   CALL     $2E4            ; Call subroutine at 2E4
$284    $15DA   JP       $5DA            ; Jump to 5DA
$286    $5ECB   UNKNOWN  $5ECB           ; Unknown 5xxx instruction
$288    $3914   SE       V9, #14         ; Skip if V9 == 20
$28A    $692E   LD       V9, #2E         ; Load 46 into V9
$28C    $445D   SNE      V4, #5D         ; Skip if V4 != 93
$28E    $2A55   CALL     $A55            ; Call subroutine at A55
$290    $FF48   UNKNOWN  FF48            ; Unknown Fxxx instruction
$292    $1A08   JP       $A08            ; Jump to A08
$294    $87F6   SHR      V7              ; V7 >>= 1, VF = LSB
$296    $D9D0   DRW      V9, VD, #0      ; Draw 0-byte sprite at V9, VD
$298    $7282   ADD      V2, #82         ; Add 130 to V2
$29A    $4B74   SNE      VB, #74         ; Skip if VB != 116
$29C    $9141   UNKNOWN  $9141           ; Unknown 9xxx instruction
$29E    $C8E0   RND      V8, #E0         ; V8 = random & E0
$2A0    $7727   ADD      V7, #27         ; Add 39 to V7
$2A2    $D86F   DRW      V8, V6, #F      ; Draw 15-byte sprite at V8, V6
$2A4    $1C61   JP       $C61            ; Jump to C61
$2A6    $9470   SNE      V4, V7          ; Skip if V4 != V7
$2A8    $F14E   UNKNOWN  F14E            ; Unknown Fxxx instruction
$2AA    $A2F3   LD       I, $2F3         ; Load 2F3 into I
$2AC    $9B92   UNKNOWN  $9B92           ; Unknown 9xxx instruction
$2AE    $33FF   SE       V3, #FF         ; Skip if V3 == 255
$2B0    $362B   SE       V6, #2B         ; Skip if V6 == 43
$2B2    $9F58   UNKNOWN  $9F58           ; Unknown 9xxx instruction
$2B4    $BDCB   JP       V0, $DCB        ; Jump to V0 + DCB
$2B6    $3B93   SE       VB, #93         ; Skip if VB == 147
$2B8    $EB21   UNKNOWN  $EB21           ; Unknown Exxx instruction
$2BA    $232B   CALL     $32B            ; Call subroutine at 32B
$2BC    $5E55   UNKNOWN  $5E55           ; Unknown 5xxx instruction
$2BE    $C169   RND      V1, #69         ; V1 = random & 69
$2C0    $2963   CALL     $963            ; Call subroutine at 963
$2C2    $8AAE   SHL      VA              ; VA <<= 1, VF = MSB
$2C4    $8A2C   UNKNOWN  8A2C            ; Unknown 8xxx instruction
$2C6    $A17B   LD       I, $17B         ; Load 17B into I
$2C8    $35BB   SE       V5, #BB         ; Skip if V5 == 187
$2CA    $B922   JP       V0, $922        ; Jump to V0 + 922
$2CC    $C19F   RND      V1, #9F         ; V1 = random & 9F
$2CE    $B03B   JP       V0, $03B        ; Jump to V0 + 03B
$2D0    $45C4   SNE      V5, #C4         ; Skip if V5 != 196
$2D2    $0476   SYS      $476            ; System call to 476
$2D4    $FC71   UNKNOWN  FC71            ; Unknown Fxxx instruction
$2D6    $432E   SNE      V3, #2E         ; Skip if V3 != 46
$2D8    $FCE6   UNKNOWN  FCE6            ; Unknown Fxxx instruction
$2DA    $3D03   SE       VD, #03         ; Skip if VD == 3
$2DC    $C4B8   RND      V4, #B8         ; V4 = random & B8
$2DE    $9774   UNKNOWN  $9774           ; Unknown 9xxx instruction
$2E0    $43CC   SNE      V3, #CC         ; Skip if V3 != 204
$2E2    $37F5   SE       V7, #F5         ; Skip if V7 == 245
$2E4    $44D6   SNE      V4, #D6         ; Skip if V4 != 214
$2E6    $4097   SNE      V0, #97         ; Skip if V0 != 151
$2E8    $BF5C   JP       V0, $F5C        ; Jump to V0 + F5C
$2EA    $557F   UNKNOWN  $557F           ; Unknown 5xxx instruction
$2EC    $2EE7   CALL     $EE7            ; Call subroutine at EE7
$2EE    $E862   UNKNOWN  $E862           ; Unknown Exxx instruction
$2F0    $D1E6   DRW      V1, VE, #6      ; Draw 6-byte sprite at V1, VE
$2F2    $B5C0   JP       V0, $5C0        ; Jump to V0 + 5C0
$2F4    $F435   UNKNOWN  F435            ; Unknown Fxxx instruction
$2F6    $C779   RND      V7, #79         ; V7 = random & 79
$2F8    $2C48   CALL     $C48            ; Call subroutine at C48
$2FA    $FEE9   UNKNOWN  FEE9            ; Unknown Fxxx instruction
$2FC    $9BC2   UNKNOWN  $9BC2           ; Unknown 9xxx instruction
$2FE    $C920   RND      V9, #20         ; V9 = random & 20
$300    $0006   SYS      $006            ; System call to 006
$302    $0622   SYS      $622            ; System call to 622
$304    $696C   LD       V9, #6C         ; Load 108 into V9
$306    $8EA2   AND      VE, VA          ; VE &= VA
$308    $5321   UNKNOWN  $5321           ; Unknown 5xxx instruction
$30A    $F0D9   UNKNOWN  F0D9            ; Unknown Fxxx instruction
$30C    $1A4E   JP       $A4E            ; Jump to A4E
$30E    $9652   UNKNOWN  $9652           ; Unknown 9xxx instruction
$310    $70CA   ADD      V0, #CA         ; Add 202 to V0
$312    $9456   UNKNOWN  $9456           ; Unknown 9xxx instruction
$314    $6168   LD       V1, #68         ; Load 104 into V1
$316    $1C02   JP       $C02            ; Jump to C02
$318    $1BD0   JP       $BD0            ; Jump to BD0
$31A    $8F20   LD       VF, V2          ; VF = V2
$31C    $B31B   JP       V0, $31B        ; Jump to V0 + 31B
$31E    $BB73   JP       V0, $B73        ; Jump to V0 + B73
$320    $1E30   JP       $E30            ; Jump to E30
$322    $49E5   SNE      V9, #E5         ; Skip if V9 != 229
$324    $459C   SNE      V5, #9C         ; Skip if V5 != 156
$326    $B9B7   JP       V0, $9B7        ; Jump to V0 + 9B7
$328    $DDBB   DRW      VD, VB, #B      ; Draw 11-byte sprite at VD, VB
$32A    $15E5   JP       $5E5            ; Jump to 5E5
$32C    $02FE   SYS      $2FE            ; System call to 2FE
$32E    $E8FC   UNKNOWN  $E8FC           ; Unknown Exxx instruction
$330    $C353   RND      V3, #53         ; V3 = random & 53
$332    $9EC2   UNKNOWN  $9EC2           ; Unknown 9xxx instruction
$334    $E45E   UNKNOWN  $E45E           ; Unknown Exxx instruction
$336    $5D80   SE       VD, V8          ; Skip if VD == V8
$338    $F56A   UNKNOWN  F56A            ; Unknown Fxxx instruction
$33A    $C0F6   RND      V0, #F6         ; V0 = random & F6
$33C    $A9FB   LD       I, $9FB         ; Load 9FB into I
$33E    $F326   UNKNOWN  F326            ; Unknown Fxxx instruction
$340    $6B4A   LD       VB, #4A         ; Load 74 into VB
$342    $9E8A   UNKNOWN  $9E8A           ; Unknown 9xxx instruction
$344    $D26B   DRW      V2, V6, #B      ; Draw 11-byte sprite at V2, V6
$346    $B562   JP       V0, $562        ; Jump to V0 + 562
$348    $E7F2   UNKNOWN  $E7F2           ; Unknown Exxx instruction
$34A    $8AE6   SHR      VA              ; VA >>= 1, VF = LSB
$34C    $3C50   SE       VC, #50         ; Skip if VC == 80
$34E    $19BF   JP       $9BF            ; Jump to 9BF
$350    $24CB   CALL     $4CB            ; Call subroutine at 4CB
$352    $8E72   AND      VE, V7          ; VE &= V7
$354    $F48A   UNKNOWN  F48A            ; Unknown Fxxx instruction
$356    $174B   JP       $74B            ; Jump to 74B
$358    $0E63   SYS      $E63            ; System call to E63
$35A    $6D12   LD       VD, #12         ; Load 18 into VD
$35C    $EF02   UNKNOWN  $EF02           ; Unknown Exxx instruction
$35E    $FC7E   UNKNOWN  FC7E            ; Unknown Fxxx instruction
$360    $CDB0   RND      VD, #B0         ; VD = random & B0
$362    $E12B   UNKNOWN  $E12B           ; Unknown Exxx instruction
$364    $FFB6   UNKNOWN  FFB6            ; Unknown Fxxx instruction
$366    $C653   RND      V6, #53         ; V6 = random & 53
$368    $A933   LD       I, $933         ; Load 933 into I
$36A    $9517   UNKNOWN  $9517           ; Unknown 9xxx instruction
$36C    $38D2   SE       V8, #D2         ; Skip if V8 == 210
$36E    $0C61   SYS      $C61            ; System call to C61
$370    $2612   CALL     $612            ; Call subroutine at 612
$372    $4013   SNE      V0, #13         ; Skip if V0 != 19
$374    $1B04   JP       $B04            ; Jump to B04
$376    $3B43   SE       VB, #43         ; Skip if VB == 67
$378    $71CB   ADD      V1, #CB         ; Add 203 to V1
$37A    $41D3   SNE      V1, #D3         ; Skip if V1 != 211
$37C    $A2D2   LD       I, $2D2         ; Load 2D2 into I
$37E    $1406   JP       $406            ; Jump to 406
$380    $19BA   JP       $9BA            ; Jump to 9BA
$382    $0D3A   SYS      $D3A            ; System call to D3A
$384    $9211   UNKNOWN  $9211           ; Unknown 9xxx instruction
$386    $B8B7   JP       V0, $8B7        ; Jump to V0 + 8B7
$388    $B691   JP       V0, $691        ; Jump to V0 + 691
$38A    $E32A   UNKNOWN  $E32A           ; Unknown Exxx instruction
$38C    $A322   LD       I, $322         ; Load 322 into I
$38E    $5401   UNKNOWN  $5401           ; Unknown 5xxx instruction
$390    $3189   SE       V1, #89         ; Skip if V1 == 137
$392    $E097   UNKNOWN  $E097           ; Unknown Exxx instruction
$394    $2323   CALL     $323            ; Call subroutine at 323
$396    $20E8   CALL     $0E8            ; Call subroutine at 0E8
$398    $1150   JP       $150            ; Jump to 150
$39A    $36EF   SE       V6, #EF         ; Skip if V6 == 239
$39C    $03C7   SYS      $3C7            ; System call to 3C7
$39E    $B67B   JP       V0, $67B        ; Jump to V0 + 67B
$3A0    $9D16   UNKNOWN  $9D16           ; Unknown 9xxx instruction
$3A2    $CF2A   RND      VF, #2A         ; VF = random & 2A
$3A4    $CF6B   RND      VF, #6B         ; VF = random & 6B
$3A6    $98B7   UNKNOWN  $98B7           ; Unknown 9xxx instruction
$3A8    $3C87   SE       VC, #87         ; Skip if VC == 135
$3AA    $19C8   JP       $9C8            ; Jump to 9C8
$3AC    $A254   LD       I, $254         ; Load 254 into I
$3AE    $C5F2   RND      V5, #F2         ; V5 = random & F2
$3B0    $5128   UNKNOWN  $5128           ; Unknown 5xxx instruction
$3B2    $4AB2   SNE      VA, #B2         ; Skip if VA != 178
$3B4    $F53F   UNKNOWN  F53F            ; Unknown Fxxx instruction
$3B6    $1728   JP       $728            ; Jump to 728
$3B8    $2DEE   CALL     $DEE            ; Call subroutine at DEE
$3BA    $7F54   ADD      VF, #54         ; Add 84 to VF
$3BC    $75B3   ADD      V5, #B3         ; Add 179 to V5
$3BE    $96FD   UNKNOWN  $96FD           ; Unknown 9xxx instruction
$3C0    $2991   CALL     $991            ; Call subroutine at 991
$3C2    $E4E8   UNKNOWN  $E4E8           ; Unknown Exxx instruction
$3C4    $51FE   UNKNOWN  $51FE           ; Unknown 5xxx instruction
$3C6    $2A54   CALL     $A54            ; Call subroutine at A54
$3C8    $C07B   RND      V0, #7B         ; V0 = random & 7B
$3CA    $6C54   LD       VC, #54         ; Load 84 into VC
$3CC    $ABFB   LD       I, $BFB         ; Load BFB into I
$3CE    $2298   CALL     $298            ; Call subroutine at 298
$3D0    $5C4B   UNKNOWN  $5C4B           ; Unknown 5xxx instruction
$3D2    $563C   UNKNOWN  $563C           ; Unknown 5xxx instruction
$3D4    $E7F6   UNKNOWN  $E7F6           ; Unknown Exxx instruction
$3D6    $B400   JP       V0, $400        ; Jump to V0 + 400
$3D8    $F690   UNKNOWN  F690            ; Unknown Fxxx instruction
$3DA    $83B3   XOR      V3, VB          ; V3 ^= VB
$3DC    $3604   SE       V6, #04         ; Skip if V6 == 4
$3DE    $7957   ADD      V9, #57         ; Add 87 to V9
$3E0    $E1D8   UNKNOWN  $E1D8           ; Unknown Exxx instruction
$3E2    $CA57   RND      VA, #57         ; VA = random & 57
$3E4    $C8E5   RND      V8, #E5         ; V8 = random & E5
$3E6    $0943   SYS      $943            ; System call to 943
$3E8    $49D5   SNE      V9, #D5         ; Skip if V9 != 213
$3EA    $5166   UNKNOWN  $5166           ; Unknown 5xxx instruction
$3EC    $F7F9   UNKNOWN  F7F9            ; Unknown Fxxx instruction
$3EE    $E97F   UNKNOWN  $E97F           ; Unknown Exxx instruction
$3F0    $F0B5   UNKNOWN  F0B5            ; Unknown Fxxx instruction
$3F2    $C130   RND      V1, #30         ; V1 = random & 30
$3F4    $4DF8   SNE      VD, #F8         ; Skip if VD != 248
$3F6    $E252   UNKNOWN  $E252           ; Unknown Exxx instruction
$3F8    $8B86   SHR      VB              ; VB >>= 1, VF = LSB
$3FA    $09BF   SYS      $9BF            ; System call to 9BF
$3FC    $8969   UNKNOWN  8969            ; Unknown 8xxx instruction
$3FE    $D48D   DRW      V4, V8, #D      ; Draw 13-byte sprite at V4, V8
$400    $1349   JP       $349            ; Jump to 349
$402    $B8F8   JP       V0, $8F8        ; Jump to V0 + 8F8
$404    $A9D0   LD       I, $9D0         ; Load 9D0 into I
$406    $013D   SYS      $13D            ; System call to 13D
$408    $C4DE   RND      V4, #DE         ; V4 = random & DE
$40A    $44BF   SNE      V4, #BF         ; Skip if V4 != 191
$40C    $986C   UNKNOWN  $986C           ; Unknown 9xxx instruction
$40E    $B60C   JP       V0, $60C        ; Jump to V0 + 60C
$410    $EED7   UNKNOWN  $EED7           ; Unknown Exxx instruction
$412    $527C   UNKNOWN  $527C           ; Unknown 5xxx instruction
$414    $CA54   RND      VA, #54         ; VA = random & 54
$416    $051E   SYS      $51E            ; System call to 51E
$418    $4DA3   SNE      VD, #A3         ; Skip if VD != 163
$41A    $3701   SE       V7, #01         ; Skip if V7 == 1
$41C    $0E84   SYS      $E84            ; System call to E84
$41E    $2F6D   CALL     $F6D            ; Call subroutine at F6D
$420    $92D6   UNKNOWN  $92D6           ; Unknown 9xxx instruction
$422    $8BA9   UNKNOWN  8BA9            ; Unknown 8xxx instruction
$424    $2F9D   CALL     $F9D            ; Call subroutine at F9D
$426    $913F   UNKNOWN  $913F           ; Unknown 9xxx instruction
$428    $77F4   ADD      V7, #F4         ; Add 244 to V7
$42A    $6E5A   LD       VE, #5A         ; Load 90 into VE
$42C    $B064   JP       V0, $064        ; Jump to V0 + 064
$42E    $7638   ADD      V6, #38         ; Add 56 to V6
$430    $EF25   UNKNOWN  $EF25           ; Unknown Exxx instruction
$432    $EF7E   UNKNOWN  $EF7E           ; Unknown Exxx instruction
$434    $7255   ADD      V2, #55         ; Add 85 to V2
$436    $7DB1   ADD      VD, #B1         ; Add 177 to VD
$438    $8473   XOR      V4, V7          ; V4 ^= V7
$43A    $16CF   JP       $6CF            ; Jump to 6CF
$43C    $0F79   SYS      $F79            ; System call to F79
$43E    $68AC   LD       V8, #AC         ; Load 172 into V8
$440    $FF5D   UNKNOWN  FF5D            ; Unknown Fxxx instruction
$442    $C411   RND      V4, #11         ; V4 = random & 11
$444    $2B9F   CALL     $B9F            ; Call subroutine at B9F
$446    $38B6   SE       V8, #B6         ; Skip if V8 == 182
$448    $8CEB   UNKNOWN  8CEB            ; Unknown 8xxx instruction
$44A    $F892   UNKNOWN  F892            ; Unknown Fxxx instruction
$44C    $F0B6   UNKNOWN  F0B6            ; Unknown Fxxx instruction
$44E    $19D3   JP       $9D3            ; Jump to 9D3
$450    $75F3   ADD      V5, #F3         ; Add 243 to V5
$452    $B29C   JP       V0, $29C        ; Jump to V0 + 29C
$454    $C048   RND      V0, #48         ; V0 = random & 48
$456    $0468   SYS      $468            ; System call to 468
$458    $93D1   UNKNOWN  $93D1           ; Unknown 9xxx instruction
$45A    $A6A4   LD       I, $6A4         ; Load 6A4 into I
$45C    $4F76   SNE      VF, #76         ; Skip if VF != 118
$45E    $86F9   UNKNOWN  86F9            ; Unknown 8xxx instruction
$460    $67B7   LD       V7, #B7         ; Load 183 into V7
$462    $CBC3   RND      VB, #C3         ; VB = random & C3
$464    $17EC   JP       $7EC            ; Jump to 7EC
$466    $7DCD   ADD      VD, #CD         ; Add 205 to VD
$468    $9AB7   UNKNOWN  $9AB7           ; Unknown 9xxx instruction
$46A    $4D99   SNE      VD, #99         ; Skip if VD != 153
$46C    $B8E9   JP       V0, $8E9        ; Jump to V0 + 8E9
$46E    $B5EA   JP       V0, $5EA        ; Jump to V0 + 5EA
$470    $598B   UNKNOWN  $598B           ; Unknown 5xxx instruction
$472    $3B1A   SE       VB, #1A         ; Skip if VB == 26
$474    $78CF   ADD      V8, #CF         ; Add 207 to V8
$476    $08D9   SYS      $8D9            ; System call to 8D9
$478    $D8BC   DRW      V8, VB, #C      ; Draw 12-byte sprite at V8, VB
$47A    $D368   DRW      V3, V6, #8      ; Draw 8-byte sprite at V3, V6
$47C    $3E07   SE       VE, #07         ; Skip if VE == 7
$47E    $403A   SNE      V0, #3A         ; Skip if V0 != 58
$480    $3CBA   SE       VC, #BA         ; Skip if VC == 186
$482    $EC62   UNKNOWN  $EC62           ; Unknown Exxx instruction
$484    $3891   SE       V8, #91         ; Skip if V8 == 145
$486    $AE31   LD       I, $E31         ; Load E31 into I
$488    $3BE4   SE       VB, #E4         ; Skip if VB == 228
$48A    $BE5A   JP       V0, $E5A        ; Jump to V0 + E5A
$48C    $0E2B   SYS      $E2B            ; System call to E2B
$48E    $FCF1   UNKNOWN  FCF1            ; Unknown Fxxx instruction
$490    $9A28   UNKNOWN  $9A28           ; Unknown 9xxx instruction
$492    $CEA5   RND      VE, #A5         ; VE = random & A5
$494    $C0F8   RND      V0, #F8         ; V0 = random & F8
$496    $19DB   JP       $9DB            ; Jump to 9DB
$498    $DC5E   DRW      VC, V5, #E      ; Draw 14-byte sprite at VC, V5
$49A    $F1FF   UNKNOWN  F1FF            ; Unknown Fxxx instruction
$49C    $23CD   CALL     $3CD            ; Call subroutine at 3CD
$49E    $F02F   UNKNOWN  F02F            ; Unknown Fxxx instruction
$4A0    $0DDA   SYS      $DDA            ; System call to DDA
$4A2    $CB55   RND      VB, #55         ; VB = random & 55
$4A4    $E76E   UNKNOWN  $E76E           ; Unknown Exxx instruction
$4A6    $E050   UNKNOWN  $E050           ; Unknown Exxx instruction
$4A8    $E23C   UNKNOWN  $E23C           ; Unknown Exxx instruction
$4AA    $00F7   SYS      $0F7            ; System call to 0F7
$4AC    $8941   OR       V9, V4          ; V9 |= V4
$4AE    $BB58   JP       V0, $B58        ; Jump to V0 + B58
$4B0    $1F68   JP       $F68            ; Jump to F68
$4B2    $82BE   SHL      V2              ; V2 <<= 1, VF = MSB
$4B4    $AEEB   LD       I, $EEB         ; Load EEB into I
$4B6    $72D4   ADD      V2, #D4         ; Add 212 to V2
$4B8    $8294   ADD      V2, V9          ; V2 += V9, VF = carry
$4BA    $8689   UNKNOWN  8689            ; Unknown 8xxx instruction
$4BC    $8E66   SHR      VE              ; VE >>= 1, VF = LSB
$4BE    $ED39   UNKNOWN  $ED39           ; Unknown Exxx instruction
$4C0    $4995   SNE      V9, #95         ; Skip if V9 != 149
$4C2    $A8A6   LD       I, $8A6         ; Load 8A6 into I
$4C4    $CC04   RND      VC, #04         ; VC = random & 04
$4C6    $D82A   DRW      V8, V2, #A      ; Draw 10-byte sprite at V8, V2
$4C8    $2CBD   CALL     $CBD            ; Call subroutine at CBD
$4CA    $2D7C   CALL     $D7C            ; Call subroutine at D7C
$4CC    $76EE   ADD      V6, #EE         ; Add 238 to V6
$4CE    $A549   LD       I, $549         ; Load 549 into I
$4D0    $1258   JP       $258            ; Jump to 258
$4D2    $B073   JP       V0, $073        ; Jump to V0 + 073
$4D4    $4B4A   SNE      VB, #4A         ; Skip if VB != 74
$4D6    $C9B8   RND      V9, #B8         ; V9 = random & B8
$4D8    $CFAA   RND      VF, #AA         ; VF = random & AA
$4DA    $A5F4   LD       I, $5F4         ; Load 5F4 into I
$4DC    $D24F   DRW      V2, V4, #F      ; Draw 15-byte sprite at V2, V4
$4DE    $C5A3   RND      V5, #A3         ; V5 = random & A3
$4E0    $4B0F   SNE      VB, #0F         ; Skip if VB != 15
$4E2    $7E8D   ADD      VE, #8D         ; Add 141 to VE
$4E4    $5C35   UNKNOWN  $5C35           ; Unknown 5xxx instruction
$4E6    $E7BF   UNKNOWN  $E7BF           ; Unknown Exxx instruction
$4E8    $DB66   DRW      VB, V6, #6      ; Draw 6-byte sprite at VB, V6
$4EA    $CB4A   RND      VB, #4A         ; VB = random & 4A
$4EC    $F4ED   UNKNOWN  F4ED            ; Unknown Fxxx instruction
$4EE    $909E   UNKNOWN  $909E           ; Unknown 9xxx instruction
$4F0    $1F57   JP       $F57            ; Jump to F57
$4F2    $7F1A   ADD      VF, #1A         ; Add 26 to VF
$4F4    $991F   UNKNOWN  $991F           ; Unknown 9xxx instruction
$4F6    $82EB   UNKNOWN  82EB            ; Unknown 8xxx instruction
$4F8    $28E3   CALL     $8E3            ; Call subroutine at 8E3
$4FA    $8D77   SUBN     VD, V7          ; VD = V7 - VD, VF = !borrow
$4FC    $00BD   SYS      $0BD            ; System call to 0BD
$4FE    $4725   SNE      V7, #25         ; Skip if V7 != 37
$500    $283B   CALL     $83B            ; Call subroutine at 83B
$502    $0871   SYS      $871            ; System call to 871
$504    $1B3B   JP       $B3B            ; Jump to B3B
$506    $B7A7   JP       V0, $7A7        ; Jump to V0 + 7A7
$508    $5A3C   UNKNOWN  $5A3C           ; Unknown 5xxx instruction
$50A    $0337   SYS      $337            ; System call to 337
$50C    $B63A   JP       V0, $63A        ; Jump to V0 + 63A
$50E    $DD9E   DRW      VD, V9, #E      ; Draw 14-byte sprite at VD, V9
$510    $039C   SYS      $39C            ; System call to 39C
$512    $0FD5   SYS      $FD5            ; System call to FD5
$514    $E461   UNKNOWN  $E461           ; Unknown Exxx instruction
$516    $53D7   UNKNOWN  $53D7           ; Unknown 5xxx instruction
$518    $F15D   UNKNOWN  F15D            ; Unknown Fxxx instruction
$51A    $AAF1   LD       I, $AF1         ; Load AF1 into I
$51C    $32F9   SE       V2, #F9         ; Skip if V2 == 249
$51E    $1367   JP       $367            ; Jump to 367
$520    $2679   CALL     $679            ; Call subroutine at 679
$522    $7525   ADD      V5, #25         ; Add 37 to V5
$524    $266E   CALL     $66E            ; Call subroutine at 66E
$526    $A876   LD       I, $876         ; Load 876 into I
$528    $B46A   JP       V0, $46A        ; Jump to V0 + 46A
$52A    $3923   SE       V9, #23         ; Skip if V9 == 35
$52C    $2E4A   CALL     $E4A            ; Call subroutine at E4A
$52E    $BF0D   JP       V0, $F0D        ; Jump to V0 + F0D
$530    $D1DE   DRW      V1, VD, #E      ; Draw 14-byte sprite at V1, VD
$532    $1D77   JP       $D77            ; Jump to D77
$534    $331C   SE       V3, #1C         ; Skip if V3 == 28
$536    $2AEB   CALL     $AEB            ; Call subroutine at AEB
$538    $701D   ADD      V0, #1D         ; Add 29 to V0
$53A    $A0F8   LD       I, $0F8         ; Load 0F8 into I
$53C    $1CE8   JP       $CE8            ; Jump to CE8
$53E    $B284   JP       V0, $284        ; Jump to V0 + 284
$540    $7064   ADD      V0, #64         ; Add 100 to V0
$542    $C441   RND      V4, #41         ; V4 = random & 41
$544    $4C2C   SNE      VC, #2C         ; Skip if VC != 44
$546    $4034   SNE      V0, #34         ; Skip if V0 != 52
$548    $9CFB   UNKNOWN  $9CFB           ; Unknown 9xxx instruction
$54A    $C169   RND      V1, #69         ; V1 = random & 69
$54C    $B7FF   JP       V0, $7FF        ; Jump to V0 + 7FF
$54E    $0A48   SYS      $A48            ; System call to A48
$550    $9119   UNKNOWN  $9119           ; Unknown 9xxx instruction
$552    $10CA   JP       $0CA            ; Jump to 0CA
$554    $4C8B   SNE      VC, #8B         ; Skip if VC != 139
$556    $A243   LD       I, $243         ; Load 243 into I
$558    $4225   SNE      V2, #25         ; Skip if V2 != 37
$55A    $9413   UNKNOWN  $9413           ; Unknown 9xxx instruction
$55C    $6998   LD       V9, #98         ; Load 152 into V9
$55E    $627A   LD       V2, #7A         ; Load 122 into V2
$560    $C372   RND      V3, #72         ; V3 = random & 72
$562    $EF21   UNKNOWN  $EF21           ; Unknown Exxx instruction
$564    $F084   UNKNOWN  F084            ; Unknown Fxxx instruction
$566    $3DB1   SE       VD, #B1         ; Skip if VD == 177
$568    $725A   ADD      V2, #5A         ; Add 90 to V2
$56A    $A954   LD       I, $954         ; Load 954 into I
$56C    $9DDC   UNKNOWN  $9DDC           ; Unknown 9xxx instruction
$56E    $9933   UNKNOWN  $9933           ; Unknown 9xxx instruction
$570    $A902   LD       I, $902         ; Load 902 into I
$572    $527D   UNKNOWN  $527D           ; Unknown 5xxx instruction
$574    $D93A   DRW      V9, V3, #A      ; Draw 10-byte sprite at V9, V3
$576    $F6F6   UNKNOWN  F6F6            ; Unknown Fxxx instruction
$578    $6C21   LD       VC, #21         ; Load 33 into VC
$57A    $3BC6   SE       VB, #C6         ; Skip if VB == 198
$57C    $0D74   SYS      $D74            ; System call to D74
$57E    $2ABD   CALL     $ABD            ; Call subroutine at ABD
$580    $49A0   SNE      V9, #A0         ; Skip if V9 != 160
$582    $70BB   ADD      V0, #BB         ; Add 187 to V0
$584    $CD3D   RND      VD, #3D         ; VD = random & 3D
$586    $AF19   LD       I, $F19         ; Load F19 into I
$588    $E9BD   UNKNOWN  $E9BD           ; Unknown Exxx instruction
$58A    $F5CA   UNKNOWN  F5CA            ; Unknown Fxxx instruction
$58C    $C75E   RND      V7, #5E         ; V7 = random & 5E
$58E    $6BD2   LD       VB, #D2         ; Load 210 into VB
$590    $6CA7   LD       VC, #A7         ; Load 167 into VC
$592    $7F3A   ADD      VF, #3A         ; Add 58 to VF
$594    $9672   UNKNOWN  $9672           ; Unknown 9xxx instruction
$596    $DB04   DRW      VB, V0, #4      ; Draw 4-byte sprite at VB, V0
$598    $1264   JP       $264            ; Jump to 264
$59A    $D27C   DRW      V2, V7, #C      ; Draw 12-byte sprite at V2, V7
$59C    $0E81   SYS      $E81            ; System call to E81
$59E    $1007   JP       $007            ; Jump to 007
$5A0    $7108   ADD      V1, #08         ; Add 8 to V1
$5A2    $1C95   JP       $C95            ; Jump to C95
$5A4    $A71C   LD       I, $71C         ; Load 71C into I
$5A6    $51CE   UNKNOWN  $51CE           ; Unknown 5xxx instruction
$5A8    $D54B   DRW      V5, V4, #B      ; Draw 11-byte sprite at V5, V4
$5AA    $0CED   SYS      $CED            ; System call to CED
$5AC    $9E98   UNKNOWN  $9E98           ; Unknown 9xxx instruction
$5AE    $A6CB   LD       I, $6CB         ; Load 6CB into I
$5B0    $8115   SUB      V1, V1          ; V1 -= V1, VF = !borrow
$5B2    $F1BA   UNKNOWN  F1BA            ; Unknown Fxxx instruction
$5B4    $20D7   CALL     $0D7            ; Call subroutine at 0D7
$5B6    $F64B   UNKNOWN  F64B            ; Unknown Fxxx instruction
$5B8    $A0AD   LD       I, $0AD         ; Load 0AD into I
$5BA    $9D2F   UNKNOWN  $9D2F           ; Unknown 9xxx instruction
$5BC    $F057   UNKNOWN  F057            ; Unknown Fxxx instruction
$5BE    $DC9A   DRW      VC, V9, #A      ; Draw 10-byte sprite at VC, V9
$5C0    $6274   LD       V2, #74         ; Load 116 into V2
$5C2    $0F32   SYS      $F32            ; System call to F32
$5C4    $75C3   ADD      V5, #C3         ; Add 195 to V5
$5C6    $A3E3   LD       I, $3E3         ; Load 3E3 into I
$5C8    $35C1   SE       V5, #C1         ; Skip if V5 == 193
$5CA    $6642   LD       V6, #42         ; Load 66 into V6
$5CC    $B1C0   JP       V0, $1C0        ; Jump to V0 + 1C0
$5CE    $4FBE   SNE      VF, #BE         ; Skip if VF != 190
$5D0    $4325   SNE      V3, #25         ; Skip if V3 != 37
$5D2    $CB07   RND      VB, #07         ; VB = random & 07
$5D4    $8E37   SUBN     VE, V3          ; VE = V3 - VE, VF = !borrow
$5D6    $522B   UNKNOWN  $522B           ; Unknown 5xxx instruction
$5D8    $0586   SYS      $586            ; System call to 586
$5DA    $F95B   UNKNOWN  F95B            ; Unknown Fxxx instruction
$5DC    $6382   LD       V3, #82         ; Load 130 into V3
$5DE    $D758   DRW      V7, V5, #8      ; Draw 8-byte sprite at V7, V5
$5E0    $2E3F   CALL     $E3F            ; Call subroutine at E3F
$5E2    $5D99   UNKNOWN  $5D99           ; Unknown 5xxx instruction
$5E4    $37E3   SE       V7, #E3         ; Skip if V7 == 227
$5E6    $627D   LD       V2, #7D         ; Load 125 into V2
$5E8    $F3DB   UNKNOWN  F3DB            ; Unknown Fxxx instruction
$5EA    $3521   SE       V5, #21         ; Skip if V5 == 33
$5EC    $B1BB   JP       V0, $1BB        ; Jump to V0 + 1BB
$5EE    $173C   JP       $73C            ; Jump to 73C
$5F0    $9CF4   UNKNOWN  $9CF4           ; Unknown 9xxx instruction
$5F2    $DABB   DRW      VA, VB, #B      ; Draw 11-byte sprite at VA, VB
$5F4    $D21A   DRW      V2, V1, #A      ; Draw 10-byte sprite at V2, V1
$5F6    $FE38   UNKNOWN  FE38            ; Unknown Fxxx instruction
$5F8    $2C20   CALL     $C20            ; Call subroutine at C20
$5FA    $F8EF   UNKNOWN  F8EF            ; Unknown Fxxx instruction
$5FC    $76B4   ADD      V6, #B4         ; Add 180 to V6
$5FE    $5143   UNKNOWN  $5143           ; Unknown 5xxx instruction
$600    $3539   SE       V5, #39         ; Skip if V5 == 57
$602    $F301   UNKNOWN  F301            ; Unknown Fxxx instruction
$604    $8953   XOR      V9, V5          ; V9 ^= V5
$606    $72D6   ADD      V2, #D6         ; Add 214 to V2
$608    $714E   ADD      V1, #4E         ; Add 78 to V1
$60A    $84F2   AND      V4, VF          ; V4 &= VF
$60C    $1D18   JP       $D18            ; Jump to D18
$60E    $BF4B   JP       V0, $F4B        ; Jump to V0 + F4B
$610    $B22D   JP       V0, $22D        ; Jump to V0 + 22D
$612    $C6E7   RND      V6, #E7         ; V6 = random & E7
$614    $0151   SYS      $151            ; System call to 151
$616    $5D53   UNKNOWN  $5D53           ; Unknown 5xxx instruction
$618    $47A4   SNE      V7, #A4         ; Skip if V7 != 164
$61A    $972E   UNKNOWN  $972E           ; Unknown 9xxx instruction
$61C    $6C86   LD       VC, #86         ; Load 134 into VC
$61E    $3B31   SE       VB, #31         ; Skip if VB == 49
$620    $73B7   ADD      V3, #B7         ; Add 183 to V3
$622    $CA43   RND      VA, #43         ; VA = random & 43
$624    $17EE   JP       $7EE            ; Jump to 7EE
$626    $8F23   XOR      VF, V2          ; VF ^= V2
$628    $6801   LD       V8, #01         ; Load 1 into V8
$62A    $FEA4   UNKNOWN  FEA4            ; Unknown Fxxx instruction
$62C    $00CA   SYS      $0CA            ; System call to 0CA
$62E    $8629   UNKNOWN  8629            ; Unknown 8xxx instruction
$630    $94C5   UNKNOWN  $94C5           ; Unknown 9xxx instruction
$632    $C202   RND      V2, #02         ; V2 = random & 02
$634    $890F   UNKNOWN  890F            ; Unknown 8xxx instruction
$636    $C0ED   RND      V0, #ED         ; V0 = random & ED
$638    $7F18   ADD      VF, #18         ; Add 24 to VF
$63A    $A533   LD       I, $533         ; Load 533 into I
$63C    $CAEF   RND      VA, #EF         ; VA = random & EF
$63E    $0C58   SYS      $C58            ; System call to C58
$640    $2050   CALL     $050            ; Call subroutine at 050
$642    $5B73   UNKNOWN  $5B73           ; Unknown 5xxx instruction
$644    $AF1D   LD       I, $F1D         ; Load F1D into I
$646    $CADE   RND      VA, #DE         ; VA = random & DE
$648    $3489   SE       V4, #89         ; Skip if V4 == 137
$64A    $4E49   SNE      VE, #49         ; Skip if VE != 73
$64C    $7ACC   ADD      VA, #CC         ; Add 204 to VA
$64E    $DEAF   DRW      VE, VA, #F      ; Draw 15-byte sprite at VE, VA
$650    $AD4F   LD       I, $D4F         ; Load D4F into I
$652    $4E30   SNE      VE, #30         ; Skip if VE != 48
$654    $2968   CALL     $968            ; Call subroutine at 968
$656    $C507   RND      V5, #07         ; V5 = random & 07
$658    $70A5   ADD      V0, #A5         ; Add 165 to V0
$65A    $0AF6   SYS      $AF6            ; System call to AF6
$65C    $E68D   UNKNOWN  $E68D           ; Unknown Exxx instruction
$65E    $9EA0   SNE      VE, VA          ; Skip if VE != VA
$660    $8137   SUBN     V1, V3          ; V1 = V3 - V1, VF = !borrow
$662    $95A4   UNKNOWN  $95A4           ; Unknown 9xxx instruction
$664    $FD5A   UNKNOWN  FD5A            ; Unknown Fxxx instruction
$666    $D4C1   DRW      V4, VC, #1      ; Draw 1-byte sprite at V4, VC
$668    $EB7A   UNKNOWN  $EB7A           ; Unknown Exxx instruction
$66A    $C1EC   RND      V1, #EC         ; V1 = random & EC
$66C    $42A7   SNE      V2, #A7         ; Skip if V2 != 167
$66E    $08C8   SYS      $8C8            ; System call to 8C8
$670    $8BEB   UNKNOWN  8BEB            ; Unknown 8xxx instruction
$672    $98D1   UNKNOWN  $98D1           ; Unknown 9xxx instruction
$674    $90F4   UNKNOWN  $90F4           ; Unknown 9xxx instruction
$676    $D273   DRW      V2, V7, #3      ; Draw 3-byte sprite at V2, V7
$678    $2CC2   CALL     $CC2            ; Call subroutine at CC2
$67A    $63DE   LD       V3, #DE         ; Load 222 into V3
$67C    $0F8B   SYS      $F8B            ; System call to F8B
$67E    $E051   UNKNOWN  $E051           ; Unknown Exxx instruction
$680    $40A2   SNE      V0, #A2         ; Skip if V0 != 162
$682    $6904   LD       V9, #04         ; Load 4 into V9
$684    $3896   SE       V8, #96         ; Skip if V8 == 150
$686    $5E12   UNKNOWN  $5E12           ; Unknown 5xxx instruction
$688    $0E36   SYS      $E36            ; System call to E36
$68A    $FB98   UNKNOWN  FB98            ; Unknown Fxxx instruction
$68C    $D7FF   DRW      V7, VF, #F      ; Draw 15-byte sprite at V7, VF
$68E    $6B7D   LD       VB, #7D         ; Load 125 into VB
$690    $3E12   SE       VE, #12         ; Skip if VE == 18
$692    $2920   CALL     $920            ; Call subroutine at 920
$694    $72B2   ADD      V2, #B2         ; Add 178 to V2
$696    $04E4   SYS      $4E4            ; System call to 4E4
$698    $ABB0   LD       I, $BB0         ; Load BB0 into I
$69A    $C621   RND      V6, #21         ; V6 = random & 21
$69C    $31CE   SE       V1, #CE         ; Skip if V1 == 206
$69E    $2EC0   CALL     $EC0            ; Call subroutine at EC0
$6A0    $7DFE   ADD      VD, #FE         ; Add 254 to VD
$6A2    $28CA   CALL     $8CA            ; Call subroutine at 8CA
$6A4    $FF56   UNKNOWN  FF56            ; Unknown Fxxx instruction
$6A6    $8EC2   AND      VE, VC          ; VE &= VC
$6A8    $6F33   LD       VF, #33         ; Load 51 into VF
$6AA    $3209   SE       V2, #09         ; Skip if V2 == 9
$6AC    $55AC   UNKNOWN  $55AC           ; Unknown 5xxx instruction
$6AE    $D4B6   DRW      V4, VB, #6      ; Draw 6-byte sprite at V4, VB
$6B0    $5ACD   UNKNOWN  $5ACD           ; Unknown 5xxx instruction
$6B2    $93D2   UNKNOWN  $93D2           ; Unknown 9xxx instruction
$6B4    $4909   SNE      V9, #09         ; Skip if V9 != 9
$6B6    $EAFB   UNKNOWN  $EAFB           ; Unknown Exxx instruction
$6B8    $AAFE   LD       I, $AFE         ; Load AFE into I
$6BA    $C7F3   RND      V7, #F3         ; V7 = random & F3
$6BC    $D40A   DRW      V4, V0, #A      ; Draw 10-byte sprite at V4, V0
$6BE    $3671   SE       V6, #71         ; Skip if V6 == 113
$6C0    $42E0   SNE      V2, #E0         ; Skip if V2 != 224
$6C2    $6EB7   LD       VE, #B7         ; Load 183 into VE
$6C4    $897D   UNKNOWN  897D            ; Unknown 8xxx instruction
$6C6    $6842   LD       V8, #42         ; Load 66 into V8
$6C8    $1334   JP       $334            ; Jump to 334
$6CA    $769B   ADD      V6, #9B         ; Add 155 to V6
$6CC    $381B   SE       V8, #1B         ; Skip if V8 == 27
$6CE    $6BB9   LD       VB, #B9         ; Load 185 into VB
$6D0    $82CB   UNKNOWN  82CB            ; Unknown 8xxx instruction
$6D2    $2A05   CALL     $A05            ; Call subroutine at A05
$6D4    $D6AE   DRW      V6, VA, #E      ; Draw 14-byte sprite at V6, VA
$6D6    $3867   SE       V8, #67         ; Skip if V8 == 103
$6D8    $6AE8   LD       VA, #E8         ; Load 232 into VA
$6DA    $BC94   JP       V0, $C94        ; Jump to V0 + C94
$6DC    $67D9   LD       V7, #D9         ; Load 217 into V7
$6DE    $8662   AND      V6, V6          ; V6 &= V6
$6E0    $F829   LD       F, V8           ; I = sprite address for digit V8
$6E2    $32FF   SE       V2, #FF         ; Skip if V2 == 255
$6E4    $1EE9   JP       $EE9            ; Jump to EE9
$6E6    $F5E0   UNKNOWN  F5E0            ; Unknown Fxxx instruction
$6E8    $43F0   SNE      V3, #F0         ; Skip if V3 != 240
$6EA    $64EA   LD       V4, #EA         ; Load 234 into V4
$6EC    $0090   SYS      $090            ; System call to 090
$6EE    $4C2B   SNE      VC, #2B         ; Skip if VC != 43
$6F0    $8320   LD       V3, V2          ; V3 = V2
$6F2    $AD33   LD       I, $D33         ; Load D33 into I
$6F4    $0FED   SYS      $FED            ; System call to FED
$6F6    $F77F   UNKNOWN  F77F            ; Unknown Fxxx instruction
$6F8    $8EE2   AND      VE, VE          ; VE &= VE
$6FA    $A210   LD       I, $210         ; Load 210 into I
$6FC    $98FB   UNKNOWN  $98FB           ; Unknown 9xxx instruction
$6FE    $129F   JP       $29F            ; Jump to 29F
$700    $0C79   SYS      $C79            ; System call to C79
$702    $9010   SNE      V0, V1          ; Skip if V0 != V1
$704    $C548   RND      V5, #48         ; V5 = random & 48
$706    $07E9   SYS      $7E9            ; System call to 7E9
$708    $D613   DRW      V6, V1, #3      ; Draw 3-byte sprite at V6, V1
$70A    $9D9C   UNKNOWN  $9D9C           ; Unknown 9xxx instruction
$70C    $A811   LD       I, $811         ; Load 811 into I
$70E    $FF19   UNKNOWN  FF19            ; Unknown Fxxx instruction
$710    $A9EC   LD       I, $9EC         ; Load 9EC into I
$712    $19E3   JP       $9E3            ; Jump to 9E3
$714    $8890   LD       V8, V9          ; V8 = V9
$716    $C847   RND      V8, #47         ; V8 = random & 47
$718    $C7ED   RND      V7, #ED         ; V7 = random & ED
$71A    $F594   UNKNOWN  F594            ; Unknown Fxxx instruction
$71C    $5DE9   UNKNOWN  $5DE9           ; Unknown 5xxx instruction
$71E    $855F   UNKNOWN  855F            ; Unknown 8xxx instruction
$720    $676F   LD       V7, #6F         ; Load 111 into V7
$722    $D3D8   DRW      V3, VD, #8      ; Draw 8-byte sprite at V3, VD
$724    $D7CA   DRW      V7, VC, #A      ; Draw 10-byte sprite at V7, VC
$726    $7D6F   ADD      VD, #6F         ; Add 111 to VD
$728    $1586   JP       $586            ; Jump to 586
$72A    $F19A   UNKNOWN  F19A            ; Unknown Fxxx instruction
$72C    $B518   JP       V0, $518        ; Jump to V0 + 518
$72E    $9239   UNKNOWN  $9239           ; Unknown 9xxx instruction
$730    $FB90   UNKNOWN  FB90            ; Unknown Fxxx instruction
$732    $5B0C   UNKNOWN  $5B0C           ; Unknown 5xxx instruction
$734    $8E6F   UNKNOWN  8E6F            ; Unknown 8xxx instruction
$736    $474D   SNE      V7, #4D         ; Skip if V7 != 77
$738    $D4A0   DRW      V4, VA, #0      ; Draw 0-byte sprite at V4, VA
$73A    $1B5E   JP       $B5E            ; Jump to B5E
$73C    $E12E   UNKNOWN  $E12E           ; Unknown Exxx instruction
$73E    $A0A3   LD       I, $0A3         ; Load 0A3 into I
$740    $6764   LD       V7, #64         ; Load 100 into V7
$742    $B3CD   JP       V0, $3CD        ; Jump to V0 + 3CD
$744    $B680   JP       V0, $680        ; Jump to V0 + 680
$746    $EF51   UNKNOWN  $EF51           ; Unknown Exxx instruction
$748    $6CAF   LD       VC, #AF         ; Load 175 into VC
$74A    $58D0   SE       V8, VD          ; Skip if V8 == VD
$74C    $38A0   SE       V8, #A0         ; Skip if V8 == 160
$74E    $91A9   UNKNOWN  $91A9           ; Unknown 9xxx instruction
$750    $BB3C   JP       V0, $B3C        ; Jump to V0 + B3C
$752    $1AC4   JP       $AC4            ; Jump to AC4
$754    $9BAC   UNKNOWN  $9BAC           ; Unknown 9xxx instruction
$756    $F6FB   UNKNOWN  F6FB            ; Unknown Fxxx instruction
$758    $1A79   JP       $A79            ; Jump to A79
$75A    $D9AC   DRW      V9, VA, #C      ; Draw 12-byte sprite at V9, VA
$75C    $DBA0   DRW      VB, VA, #0      ; Draw 0-byte sprite at VB, VA
$75E    $3E41   SE       VE, #41         ; Skip if VE == 65
$760    $DBF5   DRW      VB, VF, #5      ; Draw 5-byte sprite at VB, VF
$762    $1EA9   JP       $EA9            ; Jump to EA9
$764    $CC2F   RND      VC, #2F         ; VC = random & 2F
$766    $722D   ADD      V2, #2D         ; Add 45 to V2
$768    $4532   SNE      V5, #32         ; Skip if V5 != 50
$76A    $B933   JP       V0, $933        ; Jump to V0 + 933
$76C    $F484   UNKNOWN  F484            ; Unknown Fxxx instruction
$76E    $9E5E   UNKNOWN  $9E5E           ; Unknown 9xxx instruction
$770    $3EC2   SE       VE, #C2         ; Skip if VE == 194
$772    $9BE1   UNKNOWN  $9BE1           ; Unknown 9xxx instruction
$774    $C24A   RND      V2, #4A         ; V2 = random & 4A
$776    $1549   JP       $549            ; Jump to 549
$778    $8174   ADD      V1, V7          ; V1 += V7, VF = carry
$77A    $5BCD   UNKNOWN  $5BCD           ; Unknown 5xxx instruction
$77C    $8A32   AND      VA, V3          ; VA &= V3
$77E    $8155   SUB      V1, V5          ; V1 -= V5, VF = !borrow
$780    $9F53   UNKNOWN  $9F53           ; Unknown 9xxx instruction
$782    $A6A2   LD       I, $6A2         ; Load 6A2 into I
$784    $81EF   UNKNOWN  81EF            ; Unknown 8xxx instruction
$786    $6EFD   LD       VE, #FD         ; Load 253 into VE
$788    $CD6C   RND      VD, #6C         ; VD = random & 6C
$78A    $3239   SE       V2, #39         ; Skip if V2 == 57
$78C    $9BE6   UNKNOWN  $9BE6           ; Unknown 9xxx instruction
$78E    $FFD6   UNKNOWN  FFD6            ; Unknown Fxxx instruction
$790    $DE38   DRW      VE, V3, #8      ; Draw 8-byte sprite at VE, V3
$792    $95C7   UNKNOWN  $95C7           ; Unknown 9xxx instruction
$794    $C407   RND      V4, #07         ; V4 = random & 07
$796    $1582   JP       $582            ; Jump to 582
$798    $D8F2   DRW      V8, VF, #2      ; Draw 2-byte sprite at V8, VF
$79A    $99B3   UNKNOWN  $99B3           ; Unknown 9xxx instruction
$79C    $839A   UNKNOWN  839A            ; Unknown 8xxx instruction
$79E    $3C12   SE       VC, #12         ; Skip if VC == 18
$7A0    $B127   JP       V0, $127        ; Jump to V0 + 127
$7A2    $BF92   JP       V0, $F92        ; Jump to V0 + F92
$7A4    $94C9   UNKNOWN  $94C9           ; Unknown 9xxx instruction
$7A6    $C5EB   RND      V5, #EB         ; V5 = random & EB
$7A8    $1518   JP       $518            ; Jump to 518
$7AA    $CA16   RND      VA, #16         ; VA = random & 16
$7AC    $4B25   SNE      VB, #25         ; Skip if VB != 37
$7AE    $33D0   SE       V3, #D0         ; Skip if V3 == 208
$7B0    $5AFF   UNKNOWN  $5AFF           ; Unknown 5xxx instruction
$7B2    $4CD8   SNE      VC, #D8         ; Skip if VC != 216
$7B4    $C614   RND      V6, #14         ; V6 = random & 14
$7B6    $9966   UNKNOWN  $9966           ; Unknown 9xxx instruction
$7B8    $7729   ADD      V7, #29         ; Add 41 to V7
$7BA    $BAE6   JP       V0, $AE6        ; Jump to V0 + AE6
$7BC    $A368   LD       I, $368         ; Load 368 into I
$7BE    $7FA8   ADD      VF, #A8         ; Add 168 to VF
$7C0    $D543   DRW      V5, V4, #3      ; Draw 3-byte sprite at V5, V4
$7C2    $4EF7   SNE      VE, #F7         ; Skip if VE != 247
$7C4    $6C08   LD       VC, #08         ; Load 8 into VC
$7C6    $1DFF   JP       $DFF            ; Jump to DFF
$7C8    $1198   JP       $198            ; Jump to 198
$7CA    $1E83   JP       $E83            ; Jump to E83
$7CC    $2F77   CALL     $F77            ; Call subroutine at F77
$7CE    $C49A   RND      V4, #9A         ; V4 = random & 9A
$7D0    $635F   LD       V3, #5F         ; Load 95 into V3
$7D2    $19D2   JP       $9D2            ; Jump to 9D2
$7D4    $1863   JP       $863            ; Jump to 863
$7D6    $8D80   LD       VD, V8          ; VD = V8
$7D8    $21BA   CALL     $1BA            ; Call subroutine at 1BA
$7DA    $1882   JP       $882            ; Jump to 882
$7DC    $CFBD   RND      VF, #BD         ; VF = random & BD
$7DE    $7273   ADD      V2, #73         ; Add 115 to V2
$7E0    $5AEB   UNKNOWN  $5AEB           ; Unknown 5xxx instruction
$7E2    $7C8A   ADD      VC, #8A         ; Add 138 to VC
$7E4    $C15A   RND      V1, #5A         ; V1 = random & 5A
$7E6    $140F   JP       $40F            ; Jump to 40F
$7E8    $C1D4   RND      V1, #D4         ; V1 = random & D4
$7EA    $E953   UNKNOWN  $E953           ; Unknown Exxx instruction
$7EC    $D91A   DRW      V9, V1, #A      ; Draw 10-byte sprite at V9, V1
$7EE    $B016   JP       V0, $016        ; Jump to V0 + 016
$7F0    $CB4C   RND      VB, #4C         ; VB = random & 4C
$7F2    $F92D   UNKNOWN  F92D            ; Unknown Fxxx instruction
$7F4    $EE71   UNKNOWN  $EE71           ; Unknown Exxx instruction
$7F6    $3231   SE       V2, #31         ; Skip if V2 == 49
$7F8    $E6CC   UNKNOWN  $E6CC           ; Unknown Exxx instruction
$7FA    $2F04   CALL     $F04            ; Call subroutine at F04
$7FC    $9E8D   UNKNOWN  $9E8D           ; Unknown 9xxx instruction
$7FE    $8EF7   SUBN     VE, VF          ; VE = VF - VE, VF = !borrow
$800    $7BA2   ADD      VB, #A2         ; Add 162 to VB
$802    $22DD   CALL     $2DD            ; Call subroutine at 2DD
$804    $083E   SYS      $83E            ; System call to 83E
$806    $0E3F   SYS      $E3F            ; System call to E3F
$808    $FC54   UNKNOWN  FC54            ; Unknown Fxxx instruction
$80A    $44BD   SNE      V4, #BD         ; Skip if V4 != 189
$80C    $516C   UNKNOWN  $516C           ; Unknown 5xxx instruction
$80E    $F7A4   UNKNOWN  F7A4            ; Unknown Fxxx instruction
$810    $2AF6   CALL     $AF6            ; Call subroutine at AF6
$812    $640A   LD       V4, #0A         ; Load 10 into V4
$814    $7F23   ADD      VF, #23         ; Add 35 to VF
$816    $3D3F   SE       VD, #3F         ; Skip if VD == 63
$818    $F613   UNKNOWN  F613            ; Unknown Fxxx instruction
$81A    $610E   LD       V1, #0E         ; Load 14 into V1
$81C    $F1E8   UNKNOWN  F1E8            ; Unknown Fxxx instruction
$81E    $CFA3   RND      VF, #A3         ; VF = random & A3
$820    $BB21   JP       V0, $B21        ; Jump to V0 + B21
$822    $1F50   JP       $F50            ; Jump to F50
$824    $9886   UNKNOWN  $9886           ; Unknown 9xxx instruction
$826    $778B   ADD      V7, #8B         ; Add 139 to V7
$828    $5AD3   UNKNOWN  $5AD3           ; Unknown 5xxx instruction
$82A    $A24E   LD       I, $24E         ; Load 24E into I
$82C    $130C   JP       $30C            ; Jump to 30C
$82E    $3027   SE       V0, #27         ; Skip if V0 == 39
$830    $8CB6   SHR      VC              ; VC >>= 1, VF = LSB
$832    $E258   UNKNOWN  $E258           ; Unknown Exxx instruction
$834    $F858   UNKNOWN  F858            ; Unknown Fxxx instruction
$836    $5266   UNKNOWN  $5266           ; Unknown 5xxx instruction
$838    $3ADE   SE       VA, #DE         ; Skip if VA == 222
$83A    $5C91   UNKNOWN  $5C91           ; Unknown 5xxx instruction
$83C    $F890   UNKNOWN  F890            ; Unknown Fxxx instruction
$83E    $D180   DRW      V1, V8, #0      ; Draw 0-byte sprite at V1, V8
$840    $D029   DRW      V0, V2, #9      ; Draw 9-byte sprite at V0, V2
$842    $30F5   SE       V0, #F5         ; Skip if V0 == 245
$844    $A3A7   LD       I, $3A7         ; Load 3A7 into I
$846    $1010   JP       $010            ; Jump to 010
$848    $32F0   SE       V2, #F0         ; Skip if V2 == 240
$84A    $95A8   UNKNOWN  $95A8           ; Unknown 9xxx instruction
$84C    $15A4   JP       $5A4            ; Jump to 5A4
$84E    $8ED3   XOR      VE, VD          ; VE ^= VD
$850    $BE6B   JP       V0, $E6B        ; Jump to V0 + E6B
$852    $592C   UNKNOWN  $592C           ; Unknown 5xxx instruction
$854    $5832   UNKNOWN  $5832           ; Unknown 5xxx instruction
$856    $9421   UNKNOWN  $9421           ; Unknown 9xxx instruction
$858    $6E2E   LD       VE, #2E         ; Load 46 into VE
$85A    $060A   SYS      $60A            ; System call to 60A
$85C    $B460   JP       V0, $460        ; Jump to V0 + 460
$85E    $EA3D   UNKNOWN  $EA3D           ; Unknown Exxx instruction
$860    $CADF   RND      VA, #DF         ; VA = random & DF
$862    $5138   UNKNOWN  $5138           ; Unknown 5xxx instruction
$864    $A259   LD       I, $259         ; Load 259 into I
$866    $200F   CALL     $00F            ; Call subroutine at 00F
$868    $E097   UNKNOWN  $E097           ; Unknown Exxx instruction
$86A    $38FA   SE       V8, #FA         ; Skip if V8 == 250
$86C    $0D2D   SYS      $D2D            ; System call to D2D
$86E    $320C   SE       V2, #0C         ; Skip if V2 == 12
$870    $C7D0   RND      V7, #D0         ; V7 = random & D0
$872    $E9AD   UNKNOWN  $E9AD           ; Unknown Exxx instruction
$874    $7330   ADD      V3, #30         ; Add 48 to V3
$876    $01C6   SYS      $1C6            ; System call to 1C6
$878    $DC6A   DRW      VC, V6, #A      ; Draw 10-byte sprite at VC, V6
$87A    $478B   SNE      V7, #8B         ; Skip if V7 != 139
$87C    $D400   DRW      V4, V0, #0      ; Draw 0-byte sprite at V4, V0
$87E    $2520   CALL     $520            ; Call subroutine at 520
$880    $98FE   UNKNOWN  $98FE           ; Unknown 9xxx instruction
$882    $71E5   ADD      V1, #E5         ; Add 229 to V1
$884    $B3A2   JP       V0, $3A2        ; Jump to V0 + 3A2
$886    $CFE0   RND      VF, #E0         ; VF = random & E0
$888    $DFEC   DRW      VF, VE, #C      ; Draw 12-byte sprite at VF, VE
$88A    $0FF6   SYS      $FF6            ; System call to FF6
$88C    $A6CE   LD       I, $6CE         ; Load 6CE into I
$88E    $BACF   JP       V0, $ACF        ; Jump to V0 + ACF
$890    $7E31   ADD      VE, #31         ; Add 49 to VE
$892    $A696   LD       I, $696         ; Load 696 into I
$894    $021E   SYS      $21E            ; System call to 21E
$896    $AE30   LD       I, $E30         ; Load E30 into I
$898    $CB4C   RND      VB, #4C         ; VB = random & 4C
$89A    $79ED   ADD      V9, #ED         ; Add 237 to V9
$89C    $9C94   UNKNOWN  $9C94           ; Unknown 9xxx instruction
$89E    $D1AD   DRW      V1, VA, #D      ; Draw 13-byte sprite at V1, VA
$8A0    $6A18   LD       VA, #18         ; Load 24 into VA
$8A2    $3229   SE       V2, #29         ; Skip if V2 == 41
$8A4    $69FF   LD       V9, #FF         ; Load 255 into V9
$8A6    $189B   JP       $89B            ; Jump to 89B
$8A8    $A49D   LD       I, $49D         ; Load 49D into I
$8AA    $1557   JP       $557            ; Jump to 557
$8AC    $5C80   SE       VC, V8          ; Skip if VC == V8
$8AE    $B91A   JP       V0, $91A        ; Jump to V0 + 91A
$8B0    $2196   CALL     $196            ; Call subroutine at 196
$8B2    $F90E   UNKNOWN  F90E            ; Unknown Fxxx instruction
$8B4    $4CCF   SNE      VC, #CF         ; Skip if VC != 207
$8B6    $D09C   DRW      V0, V9, #C      ; Draw 12-byte sprite at V0, V9
$8B8    $DF43   DRW      VF, V4, #3      ; Draw 3-byte sprite at VF, V4
$8BA    $053D   SYS      $53D            ; System call to 53D
$8BC    $A53B   LD       I, $53B         ; Load 53B into I
$8BE    $944B   UNKNOWN  $944B           ; Unknown 9xxx instruction
$8C0    $6563   LD       V5, #63         ; Load 99 into V5
$8C2    $E69A   UNKNOWN  $E69A           ; Unknown Exxx instruction
$8C4    $D74D   DRW      V7, V4, #D      ; Draw 13-byte sprite at V7, V4
$8C6    $DE05   DRW      VE, V0, #5      ; Draw 5-byte sprite at VE, V0
$8C8    $652F   LD       V5, #2F         ; Load 47 into V5
$8CA    $7774   ADD      V7, #74         ; Add 116 to V7
$8CC    $B92A   JP       V0, $92A        ; Jump to V0 + 92A
$8CE    $EAA9   UNKNOWN  $EAA9           ; Unknown Exxx instruction
$8D0    $0F05   SYS      $F05            ; System call to F05
$8D2    $6B3A   LD       VB, #3A         ; Load 58 into VB
$8D4    $786F   ADD      V8, #6F         ; Add 111 to V8
$8D6    $CED4   RND      VE, #D4         ; VE = random & D4
$8D8    $F8C8   UNKNOWN  F8C8            ; Unknown Fxxx instruction
$8DA    $211A   CALL     $11A            ; Call subroutine at 11A
$8DC    $323D   SE       V2, #3D         ; Skip if V2 == 61
$8DE    $1940   JP       $940            ; Jump to 940
$8E0    $CA3C   RND      VA, #3C         ; VA = random & 3C
$8E2    $C0B4   RND      V0, #B4         ; V0 = random & B4
$8E4    $6FD7   LD       VF, #D7         ; Load 215 into VF
$8E6    $EEB3   UNKNOWN  $EEB3           ; Unknown Exxx instruction
$8E8    $2DC8   CALL     $DC8            ; Call subroutine at DC8
$8EA    $9BAB   UNKNOWN  $9BAB           ; Unknown 9xxx instruction
$8EC    $066C   SYS      $66C            ; System call to 66C
$8EE    $8281   OR       V2, V8          ; V2 |= V8
$8F0    $C3CE   RND      V3, #CE         ; V3 = random & CE
$8F2    $AAEB   LD       I, $AEB         ; Load AEB into I
$8F4    $3C41   SE       VC, #41         ; Skip if VC == 65
$8F6    $041E   SYS      $41E            ; System call to 41E
$8F8    $6121   LD       V1, #21         ; Load 33 into V1
$8FA    $E30A   UNKNOWN  $E30A           ; Unknown Exxx instruction
$8FC    $BEE2   JP       V0, $EE2        ; Jump to V0 + EE2
$8FE    $5F64   UNKNOWN  $5F64           ; Unknown 5xxx instruction
$900    $C063   RND      V0, #63         ; V0 = random & 63
$902    $5047   UNKNOWN  $5047           ; Unknown 5xxx instruction
$904    $5FDD   UNKNOWN  $5FDD           ; Unknown 5xxx instruction
$906    $437E   SNE      V3, #7E         ; Skip if V3 != 126
$908    $9561   UNKNOWN  $9561           ; Unknown 9xxx instruction
$90A    $7377   ADD      V3, #77         ; Add 119 to V3
$90C    $23E6   CALL     $3E6            ; Call subroutine at 3E6
$90E    $C2FF   RND      V2, #FF         ; V2 = random & FF
$910    $356F   SE       V5, #6F         ; Skip if V5 == 111
$912    $A748   LD       I, $748         ; Load 748 into I
$914    $6BB3   LD       VB, #B3         ; Load 179 into VB
$916    $2435   CALL     $435            ; Call subroutine at 435
$918    $744F   ADD      V4, #4F         ; Add 79 to V4
$91A    $2E8E   CALL     $E8E            ; Call subroutine at E8E
$91C    $C9F8   RND      V9, #F8         ; V9 = random & F8
$91E    $1222   JP       $222            ; Jump to 222
$920    $88BC   UNKNOWN  88BC            ; Unknown 8xxx instruction
$922    $E4D4   UNKNOWN  $E4D4           ; Unknown Exxx instruction
$924    $070A   SYS      $70A            ; System call to 70A
$926    $7CFF   ADD      VC, #FF         ; Add 255 to VC
$928    $2F64   CALL     $F64            ; Call subroutine at F64
$92A    $4347   SNE      V3, #47         ; Skip if V3 != 71
$92C    $5D44   UNKNOWN  $5D44           ; Unknown 5xxx instruction
$92E    $F877   UNKNOWN  F877            ; Unknown Fxxx instruction
$930    $5EC0   SE       VE, VC          ; Skip if VE == VC
$932    $E8CA   UNKNOWN  $E8CA           ; Unknown Exxx instruction
$934    $AAA3   LD       I, $AA3         ; Load AA3 into I
$936    $3170   SE       V1, #70         ; Skip if V1 == 112
$938    $F031   UNKNOWN  F031            ; Unknown Fxxx instruction
$93A    $5F04   UNKNOWN  $5F04           ; Unknown 5xxx instruction
$93C    $B564   JP       V0, $564        ; Jump to V0 + 564
$93E    $8DB4   ADD      VD, VB          ; VD += VB, VF = carry
$940    $36D2   SE       V6, #D2         ; Skip if V6 == 210
$942    $3930   SE       V9, #30         ; Skip if V9 == 48
$944    $8375   SUB      V3, V7          ; V3 -= V7, VF = !borrow
$946    $41B7   SNE      V1, #B7         ; Skip if V1 != 183
$948    $EACF   UNKNOWN  $EACF           ; Unknown Exxx instruction
$94A    $5466   UNKNOWN  $5466           ; Unknown 5xxx instruction
$94C    $C634   RND      V6, #34         ; V6 = random & 34
$94E    $2A6C   CALL     $A6C            ; Call subroutine at A6C
$950    $A188   LD       I, $188         ; Load 188 into I
$952    $08AB   SYS      $8AB            ; System call to 8AB
$954    $D493   DRW      V4, V9, #3      ; Draw 3-byte sprite at V4, V9
$956    $614C   LD       V1, #4C         ; Load 76 into V1
$958    $B922   JP       V0, $922        ; Jump to V0 + 922
$95A    $EC63   UNKNOWN  $EC63           ; Unknown Exxx instruction
$95C    $FB86   UNKNOWN  FB86            ; Unknown Fxxx instruction
$95E    $99B1   UNKNOWN  $99B1           ; Unknown 9xxx instruction
$960    $7D97   ADD      VD, #97         ; Add 151 to VD
$962    $13FA   JP       $3FA            ; Jump to 3FA
$964    $3B32   SE       VB, #32         ; Skip if VB == 50
$966    $1B2B   JP       $B2B            ; Jump to B2B
$968    $B41B   JP       V0, $41B        ; Jump to V0 + 41B
$96A    $5157   UNKNOWN  $5157           ; Unknown 5xxx instruction
$96C    $C718   RND      V7, #18         ; V7 = random & 18
$96E    $DCEA   DRW      VC, VE, #A      ; Draw 10-byte sprite at VC, VE
$970    $6592   LD       V5, #92         ; Load 146 into V5
$972    $9F3C   UNKNOWN  $9F3C           ; Unknown 9xxx instruction
$974    $3AC9   SE       VA, #C9         ; Skip if VA == 201
$976    $92CA   UNKNOWN  $92CA           ; Unknown 9xxx instruction
$978    $A51F   LD       I, $51F         ; Load 51F into I
$97A    $7591   ADD      V5, #91         ; Add 145 to V5
$97C    $BDC0   JP       V0, $DC0        ; Jump to V0 + DC0
$97E    $0400   SYS      $400            ; System call to 400
$980    $A7B7   LD       I, $7B7         ; Load 7B7 into I
$982    $BDCE   JP       V0, $DCE        ; Jump to V0 + DCE
$984    $2DC6   CALL     $DC6            ; Call subroutine at DC6
$986    $D17B   DRW      V1, V7, #B      ; Draw 11-byte sprite at V1, V7
$988    $742C   ADD      V4, #2C         ; Add 44 to V4
$98A    $A04B   LD       I, $04B         ; Load 04B into I
$98C    $C3A8   RND      V3, #A8         ; V3 = random & A8
$98E    $FAAF   UNKNOWN  FAAF            ; Unknown Fxxx instruction
$990    $C3EC   RND      V3, #EC         ; V3 = random & EC
$992    $4CCF   SNE      VC, #CF         ; Skip if VC != 207
$994    $8E53   XOR      VE, V5          ; VE ^= V5
$996    $DF00   DRW      VF, V0, #0      ; Draw 0-byte sprite at VF, V0
$998    $323A   SE       V2, #3A         ; Skip if V2 == 58
$99A    $01DD   SYS      $1DD            ; System call to 1DD
$99C    $A1CD   LD       I, $1CD         ; Load 1CD into I
$99E    $5A1C   UNKNOWN  $5A1C           ; Unknown 5xxx instruction
$9A0    $F666   UNKNOWN  F666            ; Unknown Fxxx instruction
$9A2    $E200   UNKNOWN  $E200           ; Unknown Exxx instruction
$9A4    $FD18   LD       ST, VD          ; Sound timer = VD
$9A6    $2552   CALL     $552            ; Call subroutine at 552
$9A8    $B58D   JP       V0, $58D        ; Jump to V0 + 58D
$9AA    $B035   JP       V0, $035        ; Jump to V0 + 035
$9AC    $A708   LD       I, $708         ; Load 708 into I
$9AE    $109E   JP       $09E            ; Jump to 09E
$9B0    $8843   XOR      V8, V4          ; V8 ^= V4
$9B2    $1B96   JP       $B96            ; Jump to B96
$9B4    $3BBE   SE       VB, #BE         ; Skip if VB == 190
$9B6    $04FE   SYS      $4FE            ; System call to 4FE
$9B8    $0AC3   SYS      $AC3            ; System call to AC3
$9BA    $D0FF   DRW      V0, VF, #F      ; Draw 15-byte sprite at V0, VF
$9BC    $83F8   UNKNOWN  83F8            ; Unknown 8xxx instruction
$9BE    $5515   UNKNOWN  $5515           ; Unknown 5xxx instruction
$9C0    $72D0   ADD      V2, #D0         ; Add 208 to V2
$9C2    $9306   UNKNOWN  $9306           ; Unknown 9xxx instruction
$9C4    $BA1C   JP       V0, $A1C        ; Jump to V0 + A1C
$9C6    $5832   UNKNOWN  $5832           ; Unknown 5xxx instruction
$9C8    $4EFB   SNE      VE, #FB         ; Skip if VE != 251
$9CA    $B55D   JP       V0, $55D        ; Jump to V0 + 55D
$9CC    $CE5A   RND      VE, #5A         ; VE = random & 5A
$9CE    $477C   SNE      V7, #7C         ; Skip if V7 != 124
$9D0    $6A92   LD       VA, #92         ; Load 146 into VA
$9D2    $3B12   SE       VB, #12         ; Skip if VB == 18
$9D4    $167F   JP       $67F            ; Jump to 67F
$9D6    $B886   JP       V0, $886        ; Jump to V0 + 886
$9D8    $8259   UNKNOWN  8259            ; Unknown 8xxx instruction
$9DA    $1BE2   JP       $BE2            ; Jump to BE2
$9DC    $E591   UNKNOWN  $E591           ; Unknown Exxx instruction
$9DE    $1BE4   JP       $BE4            ; Jump to BE4
$9E0    $D2F5   DRW      V2, VF, #5      ; Draw 5-byte sprite at V2, VF
$9E2    $09ED   SYS      $9ED            ; System call to 9ED
$9E4    $0508   SYS      $508            ; System call to 508
$9E6    $0B86   SYS      $B86            ; System call to B86
$9E8    $B096   JP       V0, $096        ; Jump to V0 + 096
$9EA    $D14C   DRW      V1, V4, #C      ; Draw 12-byte sprite at V1, V4
$9EC    $527E   UNKNOWN  $527E           ; Unknown 5xxx instruction
$9EE    $173B   JP       $73B            ; Jump to 73B
$9F0    $DF3D   DRW      VF, V3, #D      ; Draw 13-byte sprite at VF, V3
$9F2    $037C   SYS      $37C            ; System call to 37C
$9F4    $333F   SE       V3, #3F         ; Skip if V3 == 63
$9F6    $32FA   SE       V2, #FA         ; Skip if V2 == 250
$9F8    $9C93   UNKNOWN  $9C93           ; Unknown 9xxx instruction
$9FA    $4385   SNE      V3, #85         ; Skip if V3 != 133
$9FC    $D5F8   DRW      V5, VF, #8      ; Draw 8-byte sprite at V5, VF
$9FE    $CE5C   RND      VE, #5C         ; VE = random & 5C
$A00    $7576   ADD      V5, #76         ; Add 118 to V5
$A02    $AFF7   LD       I, $FF7         ; Load FF7 into I
$A04    $FB8C   UNKNOWN  FB8C            ; Unknown Fxxx instruction
$A06    $6A0E   LD       VA, #0E         ; Load 14 into VA
$A08    $87BD   UNKNOWN  87BD            ; Unknown 8xxx instruction
$A0A    $0533   SYS      $533            ; System call to 533
$A0C    $8DAB   UNKNOWN  8DAB            ; Unknown 8xxx instruction
$A0E    $C288   RND      V2, #88         ; V2 = random & 88
$A10    $B2DE   JP       V0, $2DE        ; Jump to V0 + 2DE
$A12    $D3B1   DRW      V3, VB, #1      ; Draw 1-byte sprite at V3, VB
$A14    $BA96   JP       V0, $A96        ; Jump to V0 + A96
$A16    $6B10   LD       VB, #10         ; Load 16 into VB
$A18    $3BE4   SE       VB, #E4         ; Skip if VB == 228
$A1A    $9980   SNE      V9, V8          ; Skip if V9 != V8
$A1C    $636F   LD       V3, #6F         ; Load 111 into V3
$A1E    $1AE9   JP       $AE9            ; Jump to AE9
$A20    $AA4A   LD       I, $A4A         ; Load A4A into I
$A22    $1664   JP       $664            ; Jump to 664
$A24    $1219   JP       $219            ; Jump to 219
$A26    $2E14   CALL     $E14            ; Call subroutine at E14
$A28    $029B   SYS      $29B            ; System call to 29B
$A2A    $160E   JP       $60E            ; Jump to 60E
$A2C    $BFFD   JP       V0, $FFD        ; Jump to V0 + FFD
$A2E    $3C46   SE       VC, #46         ; Skip if VC == 70
$A30    $4252   SNE      V2, #52         ; Skip if V2 != 82
$A32    $DF73   DRW      VF, V7, #3      ; Draw 3-byte sprite at VF, V7
$A34    $5841   UNKNOWN  $5841           ; Unknown 5xxx instruction
$A36    $9214   UNKNOWN  $9214           ; Unknown 9xxx instruction
$A38    $409C   SNE      V0, #9C         ; Skip if V0 != 156
$A3A    $8AB7   SUBN     VA, VB          ; VA = VB - VA, VF = !borrow
$A3C    $6C80   LD       VC, #80         ; Load 128 into VC
$A3E    $2D91   CALL     $D91            ; Call subroutine at D91
$A40    $096D   SYS      $96D            ; System call to 96D
$A42    $9E36   UNKNOWN  $9E36           ; Unknown 9xxx instruction
$A44    $402B   SNE      V0, #2B         ; Skip if V0 != 43
$A46    $8872   AND      V8, V7          ; V8 &= V7
$A48    $CDF6   RND      VD, #F6         ; VD = random & F6
$A4A    $F4A3   UNKNOWN  F4A3            ; Unknown Fxxx instruction
$A4C    $15C0   JP       $5C0            ; Jump to 5C0
$A4E    $79DD   ADD      V9, #DD         ; Add 221 to V9
$A50    $307F   SE       V0, #7F         ; Skip if V0 == 127
$A52    $88B7   SUBN     V8, VB          ; V8 = VB - V8, VF = !borrow
$A54    $223D   CALL     $23D            ; Call subroutine at 23D
$A56    $0470   SYS      $470            ; System call to 470
$A58    $CDB4   RND      VD, #B4         ; VD = random & B4
$A5A    $129A   JP       $29A            ; Jump to 29A
$A5C    $3A53   SE       VA, #53         ; Skip if VA == 83
$A5E    $DE57   DRW      VE, V5, #7      ; Draw 7-byte sprite at VE, V5
$A60    $4B53   SNE      VB, #53         ; Skip if VB != 83
$A62    $9737   UNKNOWN  $9737           ; Unknown 9xxx instruction
$A64    $BB4F   JP       V0, $B4F        ; Jump to V0 + B4F
$A66    $C374   RND      V3, #74         ; V3 = random & 74
$A68    $2ABD   CALL     $ABD            ; Call subroutine at ABD
$A6A    $9B29   UNKNOWN  $9B29           ; Unknown 9xxx instruction
$A6C    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$A6E    $D2D8   DRW      V2, VD, #8      ; Draw 8-byte sprite at V2, VD
$A70    $940D   UNKNOWN  $940D           ; Unknown 9xxx instruction
$A72    $F066   UNKNOWN  F066            ; Unknown Fxxx instruction
$A74    $66FC   LD       V6, #FC         ; Load 252 into V6
$A76    $A96C   LD       I, $96C         ; Load 96C into I
$A78    $35B4   SE       V5, #B4         ; Skip if V5 == 180
$A7A    $69A5   LD       V9, #A5         ; Load 165 into V9
$A7C    $BA6E   JP       V0, $A6E        ; Jump to V0 + A6E
$A7E    $B6AB   JP       V0, $6AB        ; Jump to V0 + 6AB
$A80    $560A   UNKNOWN  $560A           ; Unknown 5xxx instruction
$A82    $8BF0   LD       VB, VF          ; VB = VF
$A84    $BF4D   JP       V0, $F4D        ; Jump to V0 + F4D
$A86    $987D   UNKNOWN  $987D           ; Unknown 9xxx instruction
$A88    $4BA9   SNE      VB, #A9         ; Skip if VB != 169
$A8A    $4406   SNE      V4, #06         ; Skip if V4 != 6
$A8C    $0A01   SYS      $A01            ; System call to A01
$A8E    $AA37   LD       I, $A37         ; Load A37 into I
$A90    $71AB   ADD      V1, #AB         ; Add 171 to V1
$A92    $5C55   UNKNOWN  $5C55           ; Unknown 5xxx instruction
$A94    $485B   SNE      V8, #5B         ; Skip if V8 != 91
$A96    $4D3F   SNE      VD, #3F         ; Skip if VD != 63
$A98    $54EF   UNKNOWN  $54EF           ; Unknown 5xxx instruction
$A9A    $1B73   JP       $B73            ; Jump to B73
$A9C    $38F7   SE       V8, #F7         ; Skip if V8 == 247
$A9E    $86AF   UNKNOWN  86AF            ; Unknown 8xxx instruction
$AA0    $ADCC   LD       I, $DCC         ; Load DCC into I
$AA2    $6A00   LD       VA, #00         ; Load 0 into VA
$AA4    $61CB   LD       V1, #CB         ; Load 203 into V1
$AA6    $92A7   UNKNOWN  $92A7           ; Unknown 9xxx instruction
$AA8    $AB1D   LD       I, $B1D         ; Load B1D into I
$AAA    $9BF9   UNKNOWN  $9BF9           ; Unknown 9xxx instruction
$AAC    $7D7C   ADD      VD, #7C         ; Add 124 to VD
$AAE    $A061   LD       I, $061         ; Load 061 into I
$AB0    $37AF   SE       V7, #AF         ; Skip if V7 == 175
$AB2    $E79E   SKP      V7              ; Skip if key V7 pressed
$AB4    $15BC   JP       $5BC            ; Jump to 5BC
$AB6    $AB87   LD       I, $B87         ; Load B87 into I
$AB8    $4322   SNE      V3, #22         ; Skip if V3 != 34
$ABA    $2827   CALL     $827            ; Call subroutine at 827
$ABC    $574F   UNKNOWN  $574F           ; Unknown 5xxx instruction
$ABE    $95CD   UNKNOWN  $95CD           ; Unknown 9xxx instruction
$AC0    $7177   ADD      V1, #77         ; Add 119 to V1
$AC2    $675C   LD       V7, #5C         ; Load 92 into V7
$AC4    $2A0E   CALL     $A0E            ; Call subroutine at A0E
$AC6    $8722   AND      V7, V2          ; V7 &= V2
$AC8    $56C3   UNKNOWN  $56C3           ; Unknown 5xxx instruction
$ACA    $AD7B   LD       I, $D7B         ; Load D7B into I
$ACC    $0C0B   SYS      $C0B            ; System call to C0B
$ACE    $671E   LD       V7, #1E         ; Load 30 into V7
$AD0    $D8D7   DRW      V8, VD, #7      ; Draw 7-byte sprite at V8, VD
$AD2    $965D   UNKNOWN  $965D           ; Unknown 9xxx instruction
$AD4    $8500   LD       V5, V0          ; V5 = V0
$AD6    $5371   UNKNOWN  $5371           ; Unknown 5xxx instruction
$AD8    $C3F5   RND      V3, #F5         ; V3 = random & F5
$ADA    $E49E   SKP      V4              ; Skip if key V4 pressed
$ADC    $0DBC   SYS      $DBC            ; System call to DBC
$ADE    $56AC   UNKNOWN  $56AC           ; Unknown 5xxx instruction
$AE0    $2C57   CALL     $C57            ; Call subroutine at C57
$AE2    $DE47   DRW      VE, V4, #7      ; Draw 7-byte sprite at VE, V4
$AE4    $DA9A   DRW      VA, V9, #A      ; Draw 10-byte sprite at VA, V9
$AE6    $A3DC   LD       I, $3DC         ; Load 3DC into I
$AE8    $3009   SE       V0, #09         ; Skip if V0 == 9
$AEA    $0E87   SYS      $E87            ; System call to E87
$AEC    $6702   LD       V7, #02         ; Load 2 into V7
$AEE    $DE3A   DRW      VE, V3, #A      ; Draw 10-byte sprite at VE, V3
$AF0    $099E   SYS      $99E            ; System call to 99E
$AF2    $4E00   SNE      VE, #00         ; Skip if VE != 0
$AF4    $0053   SYS      $053            ; System call to 053
$AF6    $3165   SE       V1, #65         ; Skip if V1 == 101
$AF8    $5A31   UNKNOWN  $5A31           ; Unknown 5xxx instruction
$AFA    $AAAC   LD       I, $AAC         ; Load AAC into I
$AFC    $2727   CALL     $727            ; Call subroutine at 727
$AFE    $8C72   AND      VC, V7          ; VC &= V7
$B00    $7F7C   ADD      VF, #7C         ; Add 124 to VF
$B02    $39E6   SE       V9, #E6         ; Skip if V9 == 230
$B04    $DD0D   DRW      VD, V0, #D      ; Draw 13-byte sprite at VD, V0
$B06    $87BD   UNKNOWN  87BD            ; Unknown 8xxx instruction
$B08    $9BF4   UNKNOWN  $9BF4           ; Unknown 9xxx instruction
$B0A    $CCE9   RND      VC, #E9         ; VC = random & E9
$B0C    $56BA   UNKNOWN  $56BA           ; Unknown 5xxx instruction
$B0E    $A86E   LD       I, $86E         ; Load 86E into I
$B10    $BB90   JP       V0, $B90        ; Jump to V0 + B90
$B12    $8B5A   UNKNOWN  8B5A            ; Unknown 8xxx instruction
$B14    $F6BE   UNKNOWN  F6BE            ; Unknown Fxxx instruction
$B16    $BD84   JP       V0, $D84        ; Jump to V0 + D84
$B18    $D3B5   DRW      V3, VB, #5      ; Draw 5-byte sprite at V3, VB
$B1A    $FE37   UNKNOWN  FE37            ; Unknown Fxxx instruction
$B1C    $38F3   SE       V8, #F3         ; Skip if V8 == 243
$B1E    $1918   JP       $918            ; Jump to 918
$B20    $3CD7   SE       VC, #D7         ; Skip if VC == 215
$B22    $DCE7   DRW      VC, VE, #7      ; Draw 7-byte sprite at VC, VE
$B24    $281A   CALL     $81A            ; Call subroutine at 81A
$B26    $C481   RND      V4, #81         ; V4 = random & 81
$B28    $1DE7   JP       $DE7            ; Jump to DE7
$B2A    $4B07   SNE      VB, #07         ; Skip if VB != 7
$B2C    $CB9C   RND      VB, #9C         ; VB = random & 9C
$B2E    $7425   ADD      V4, #25         ; Add 37 to V4
$B30    $5487   UNKNOWN  $5487           ; Unknown 5xxx instruction
$B32    $8A7C   UNKNOWN  8A7C            ; Unknown 8xxx instruction
$B34    $C975   RND      V9, #75         ; V9 = random & 75
$B36    $8320   LD       V3, V2          ; V3 = V2
$B38    $34D7   SE       V4, #D7         ; Skip if V4 == 215
$B3A    $2B3C   CALL     $B3C            ; Call subroutine at B3C
$B3C    $829A   UNKNOWN  829A            ; Unknown 8xxx instruction
$B3E    $1AC5   JP       $AC5            ; Jump to AC5
$B40    $0299   SYS      $299            ; System call to 299
$B42    $F13C   UNKNOWN  F13C            ; Unknown Fxxx instruction
$B44    $72D0   ADD      V2, #D0         ; Add 208 to V2
$B46    $EF8D   UNKNOWN  $EF8D           ; Unknown Exxx instruction
$B48    $A4BC   LD       I, $4BC         ; Load 4BC into I
$B4A    $6594   LD       V5, #94         ; Load 148 into V5
$B4C    $91A6   UNKNOWN  $91A6           ; Unknown 9xxx instruction
$B4E    $3829   SE       V8, #29         ; Skip if V8 == 41
$B50    $C818   RND      V8, #18         ; V8 = random & 18
$B52    $941D   UNKNOWN  $941D           ; Unknown 9xxx instruction
$B54    $90DF   UNKNOWN  $90DF           ; Unknown 9xxx instruction
$B56    $A589   LD       I, $589         ; Load 589 into I
$B58    $114F   JP       $14F            ; Jump to 14F
$B5A    $F092   UNKNOWN  F092            ; Unknown Fxxx instruction
$B5C    $D8FD   DRW      V8, VF, #D      ; Draw 13-byte sprite at V8, VF
$B5E    $7301   ADD      V3, #01         ; Add 1 to V3
$B60    $36AA   SE       V6, #AA         ; Skip if V6 == 170
$B62    $7DA6   ADD      VD, #A6         ; Add 166 to VD
$B64    $B8B1   JP       V0, $8B1        ; Jump to V0 + 8B1
$B66    $7892   ADD      V8, #92         ; Add 146 to V8
$B68    $0EE6   SYS      $EE6            ; System call to EE6
$B6A    $B6DD   JP       V0, $6DD        ; Jump to V0 + 6DD
$B6C    $459C   SNE      V5, #9C         ; Skip if V5 != 156
$B6E    $DF5E   DRW      VF, V5, #E      ; Draw 14-byte sprite at VF, V5
$B70    $C112   RND      V1, #12         ; V1 = random & 12
$B72    $B755   JP       V0, $755        ; Jump to V0 + 755
$B74    $0707   SYS      $707            ; System call to 707
$B76    $B001   JP       V0, $001        ; Jump to V0 + 001
$B78    $577A   UNKNOWN  $577A           ; Unknown 5xxx instruction
$B7A    $C1DF   RND      V1, #DF         ; V1 = random & DF
$B7C    $863B   UNKNOWN  863B            ; Unknown 8xxx instruction
$B7E    $5E90   SE       VE, V9          ; Skip if VE == V9
$B80    $48FF   SNE      V8, #FF         ; Skip if V8 != 255
$B82    $6DF3   LD       VD, #F3         ; Load 243 into VD
$B84    $5C03   UNKNOWN  $5C03           ; Unknown 5xxx instruction
$B86    $DBA3   DRW      VB, VA, #3      ; Draw 3-byte sprite at VB, VA
$B88    $B75B   JP       V0, $75B        ; Jump to V0 + 75B
$B8A    $474F   SNE      V7, #4F         ; Skip if V7 != 79
$B8C    $E7EA   UNKNOWN  $E7EA           ; Unknown Exxx instruction
$B8E    $D669   DRW      V6, V6, #9      ; Draw 9-byte sprite at V6, V6
$B90    $7F40   ADD      VF, #40         ; Add 64 to VF
$B92    $AD1A   LD       I, $D1A         ; Load D1A into I
$B94    $3B6D   SE       VB, #6D         ; Skip if VB == 109
$B96    $4BD4   SNE      VB, #D4         ; Skip if VB != 212
$B98    $F769   UNKNOWN  F769            ; Unknown Fxxx instruction
$B9A    $978F   UNKNOWN  $978F           ; Unknown 9xxx instruction
$B9C    $4D99   SNE      VD, #99         ; Skip if VD != 153
$B9E    $303A   SE       V0, #3A         ; Skip if V0 == 58
$BA0    $DAA2   DRW      VA, VA, #2      ; Draw 2-byte sprite at VA, VA
$BA2    $4522   SNE      V5, #22         ; Skip if V5 != 34
$BA4    $5F8D   UNKNOWN  $5F8D           ; Unknown 5xxx instruction
$BA6    $FE49   UNKNOWN  FE49            ; Unknown Fxxx instruction
$BA8    $2D56   CALL     $D56            ; Call subroutine at D56
$BAA    $CE9E   RND      VE, #9E         ; VE = random & 9E
$BAC    $E356   UNKNOWN  $E356           ; Unknown Exxx instruction
$BAE    $993A   UNKNOWN  $993A           ; Unknown 9xxx instruction
$BB0    $93B6   UNKNOWN  $93B6           ; Unknown 9xxx instruction
$BB2    $B053   JP       V0, $053        ; Jump to V0 + 053
$BB4    $658D   LD       V5, #8D         ; Load 141 into V5
$BB6    $C7B5   RND      V7, #B5         ; V7 = random & B5
$BB8    $CB4E   RND      VB, #4E         ; VB = random & 4E
$BBA    $1CB0   JP       $CB0            ; Jump to CB0
$BBC    $B84A   JP       V0, $84A        ; Jump to V0 + 84A
$BBE    $67E6   LD       V7, #E6         ; Load 230 into V7
$BC0    $2811   CALL     $811            ; Call subroutine at 811
$BC2    $AE5A   LD       I, $E5A         ; Load E5A into I
$BC4    $765A   ADD      V6, #5A         ; Add 90 to V6
$BC6    $A15C   LD       I, $15C         ; Load 15C into I
$BC8    $B62C   JP       V0, $62C        ; Jump to V0 + 62C
$BCA    $5997   UNKNOWN  $5997           ; Unknown 5xxx instruction
$BCC    $2706   CALL     $706            ; Call subroutine at 706
$BCE    $712B   ADD      V1, #2B         ; Add 43 to V1
$BD0    $97DE   UNKNOWN  $97DE           ; Unknown 9xxx instruction
$BD2    $895E   SHL      V9              ; V9 <<= 1, VF = MSB
$BD4    $4284   SNE      V2, #84         ; Skip if V2 != 132
$BD6    $B58C   JP       V0, $58C        ; Jump to V0 + 58C
$BD8    $4B52   SNE      VB, #52         ; Skip if VB != 82
$BDA    $8A2A   UNKNOWN  8A2A            ; Unknown 8xxx instruction
$BDC    $9807   UNKNOWN  $9807           ; Unknown 9xxx instruction
$BDE    $E46A   UNKNOWN  $E46A           ; Unknown Exxx instruction
$BE0    $B388   JP       V0, $388        ; Jump to V0 + 388
$BE2    $C543   RND      V5, #43         ; V5 = random & 43
$BE4    $50AA   UNKNOWN  $50AA           ; Unknown 5xxx instruction
$BE6    $CE4B   RND      VE, #4B         ; VE = random & 4B
$BE8    $33C0   SE       V3, #C0         ; Skip if V3 == 192
$BEA    $5B44   UNKNOWN  $5B44           ; Unknown 5xxx instruction
$BEC    $2ADD   CALL     $ADD            ; Call subroutine at ADD
$BEE    $764D   ADD      V6, #4D         ; Add 77 to V6
$BF0    $741B   ADD      V4, #1B         ; Add 27 to V4
$BF2    $C72D   RND      V7, #2D         ; V7 = random & 2D
$BF4    $DCC5   DRW      VC, VC, #5      ; Draw 5-byte sprite at VC, VC
$BF6    $19FE   JP       $9FE            ; Jump to 9FE
$BF8    $0FCA   SYS      $FCA            ; System call to FCA
$BFA    $3801   SE       V8, #01         ; Skip if V8 == 1
$BFC    $3FCF   SE       VF, #CF         ; Skip if VF == 207
$BFE    $8DD5   SUB      VD, VD          ; VD -= VD, VF = !borrow
$C00    $687E   LD       V8, #7E         ; Load 126 into V8
$C02    $4288   SNE      V2, #88         ; Skip if V2 != 136
$C04    $0D6E   SYS      $D6E            ; System call to D6E
$C06    $F809   UNKNOWN  F809            ; Unknown Fxxx instruction
$C08    $DDA9   DRW      VD, VA, #9      ; Draw 9-byte sprite at VD, VA
$C0A    $C2AC   RND      V2, #AC         ; V2 = random & AC
$C0C    $BA12   JP       V0, $A12        ; Jump to V0 + A12
$C0E    $7AC2   ADD      VA, #C2         ; Add 194 to VA
$C10    $2F81   CALL     $F81            ; Call subroutine at F81
$C12    $C345   RND      V3, #45         ; V3 = random & 45
$C14    $C349   RND      V3, #49         ; V3 = random & 49
$C16    $02DC   SYS      $2DC            ; System call to 2DC
$C18    $6C48   LD       VC, #48         ; Load 72 into VC
$C1A    $F206   UNKNOWN  F206            ; Unknown Fxxx instruction
$C1C    $C682   RND      V6, #82         ; V6 = random & 82
$C1E    $B132   JP       V0, $132        ; Jump to V0 + 132
$C20    $5EF1   UNKNOWN  $5EF1           ; Unknown 5xxx instruction
$C22    $9107   UNKNOWN  $9107           ; Unknown 9xxx instruction
$C24    $32CF   SE       V2, #CF         ; Skip if V2 == 207
$C26    $4BCB   SNE      VB, #CB         ; Skip if VB != 203
$C28    $E6C1   UNKNOWN  $E6C1           ; Unknown Exxx instruction
$C2A    $301B   SE       V0, #1B         ; Skip if V0 == 27
$C2C    $F3BA   UNKNOWN  F3BA            ; Unknown Fxxx instruction
$C2E    $44AC   SNE      V4, #AC         ; Skip if V4 != 172
$C30    $501E   UNKNOWN  $501E           ; Unknown 5xxx instruction
$C32    $B977   JP       V0, $977        ; Jump to V0 + 977
$C34    $3CA4   SE       VC, #A4         ; Skip if VC == 164
$C36    $8354   ADD      V3, V5          ; V3 += V5, VF = carry
$C38    $9863   UNKNOWN  $9863           ; Unknown 9xxx instruction
$C3A    $F866   UNKNOWN  F866            ; Unknown Fxxx instruction
$C3C    $4EE9   SNE      VE, #E9         ; Skip if VE != 233
$C3E    $F97A   UNKNOWN  F97A            ; Unknown Fxxx instruction
$C40    $71CD   ADD      V1, #CD         ; Add 205 to V1
$C42    $34B8   SE       V4, #B8         ; Skip if V4 == 184
$C44    $8854   ADD      V8, V5          ; V8 += V5, VF = carry
$C46    $A46B   LD       I, $46B         ; Load 46B into I
$C48    $542B   UNKNOWN  $542B           ; Unknown 5xxx instruction
$C4A    $6449   LD       V4, #49         ; Load 73 into V4
$C4C    $86F1   OR       V6, VF          ; V6 |= VF
$C4E    $D2A6   DRW      V2, VA, #6      ; Draw 6-byte sprite at V2, VA
$C50    $18A5   JP       $8A5            ; Jump to 8A5
$C52    $7B4E   ADD      VB, #4E         ; Add 78 to VB
$C54    $ACD5   LD       I, $CD5         ; Load CD5 into I
$C56    $87D4   ADD      V7, VD          ; V7 += VD, VF = carry
$C58    $14ED   JP       $4ED            ; Jump to 4ED
$C5A    $FC6E   UNKNOWN  FC6E            ; Unknown Fxxx instruction
$C5C    $E1D9   UNKNOWN  $E1D9           ; Unknown Exxx instruction
$C5E    $1798   JP       $798            ; Jump to 798
$C60    $ED43   UNKNOWN  $ED43           ; Unknown Exxx instruction
$C62    $B0C7   JP       V0, $0C7        ; Jump to V0 + 0C7
$C64    $ADA8   LD       I, $DA8         ; Load DA8 into I
$C66    $6271   LD       V2, #71         ; Load 113 into V2
$C68    $8FC6   SHR      VF              ; VF >>= 1, VF = LSB
$C6A    $F1BB   UNKNOWN  F1BB            ; Unknown Fxxx instruction
$C6C    $C08F   RND      V0, #8F         ; V0 = random & 8F
$C6E    $47AE   SNE      V7, #AE         ; Skip if V7 != 174
$C70    $290C   CALL     $90C            ; Call subroutine at 90C
$C72    $ED84   UNKNOWN  $ED84           ; Unknown Exxx instruction
$C74    $8156   SHR      V1              ; V1 >>= 1, VF = LSB
$C76    $CE9A   RND      VE, #9A         ; VE = random & 9A
$C78    $D562   DRW      V5, V6, #2      ; Draw 2-byte sprite at V5, V6
$C7A    $8E4E   SHL      VE              ; VE <<= 1, VF = MSB
$C7C    $EBAA   UNKNOWN  $EBAA           ; Unknown Exxx instruction
$C7E    $AB09   LD       I, $B09         ; Load B09 into I
$C80    $3579   SE       V5, #79         ; Skip if V5 == 121
$C82    $5520   SE       V5, V2          ; Skip if V5 == V2
$C84    $81BF   UNKNOWN  81BF            ; Unknown 8xxx instruction
$C86    $F633   LD       B, V6           ; Store BCD of V6 at I, I+1, I+2
$C88    $2E61   CALL     $E61            ; Call subroutine at E61
$C8A    $3428   SE       V4, #28         ; Skip if V4 == 40
$C8C    $4A7D   SNE      VA, #7D         ; Skip if VA != 125
$C8E    $1916   JP       $916            ; Jump to 916
$C90    $FE5F   UNKNOWN  FE5F            ; Unknown Fxxx instruction
$C92    $18C7   JP       $8C7            ; Jump to 8C7
$C94    $FAC6   UNKNOWN  FAC6            ; Unknown Fxxx instruction
$C96    $AA8B   LD       I, $A8B         ; Load A8B into I
$C98    $2E18   CALL     $E18            ; Call subroutine at E18
$C9A    $C135   RND      V1, #35         ; V1 = random & 35
$C9C    $47BA   SNE      V7, #BA         ; Skip if V7 != 186
$C9E    $7D3F   ADD      VD, #3F         ; Add 63 to VD
$CA0    $2E3F   CALL     $E3F            ; Call subroutine at E3F
$CA2    $06CA   SYS      $6CA            ; System call to 6CA
$CA4    $32AC   SE       V2, #AC         ; Skip if V2 == 172
$CA6    $A0E5   LD       I, $0E5         ; Load 0E5 into I
$CA8    $B52A   JP       V0, $52A        ; Jump to V0 + 52A
$CAA    $5B78   UNKNOWN  $5B78           ; Unknown 5xxx instruction
$CAC    $D7AF   DRW      V7, VA, #F      ; Draw 15-byte sprite at V7, VA
$CAE    $562A   UNKNOWN  $562A           ; Unknown 5xxx instruction
$CB0    $5DA2   UNKNOWN  $5DA2           ; Unknown 5xxx instruction
$CB2    $F809   UNKNOWN  F809            ; Unknown Fxxx instruction
$CB4    $7E45   ADD      VE, #45         ; Add 69 to VE
$CB6    $C87F   RND      V8, #7F         ; V8 = random & 7F
$CB8    $BAAA   JP       V0, $AAA        ; Jump to V0 + AAA
$CBA    $763A   ADD      V6, #3A         ; Add 58 to V6
$CBC    $6D5B   LD       VD, #5B         ; Load 91 into VD
$CBE    $3CB7   SE       VC, #B7         ; Skip if VC == 183
$CC0    $0DC3   SYS      $DC3            ; System call to DC3
$CC2    $5E63   UNKNOWN  $5E63           ; Unknown 5xxx instruction
$CC4    $F5A7   UNKNOWN  F5A7            ; Unknown Fxxx instruction
$CC6    $E0E8   UNKNOWN  $E0E8           ; Unknown Exxx instruction
$CC8    $A2E8   LD       I, $2E8         ; Load 2E8 into I
$CCA    $AE71   LD       I, $E71         ; Load E71 into I
$CCC    $0E77   SYS      $E77            ; System call to E77
$CCE    $2B3E   CALL     $B3E            ; Call subroutine at B3E
$CD0    $A3CC   LD       I, $3CC         ; Load 3CC into I
$CD2    $1963   JP       $963            ; Jump to 963
$CD4    $36A0   SE       V6, #A0         ; Skip if V6 == 160
$CD6    $30AA   SE       V0, #AA         ; Skip if V0 == 170
$CD8    $E6F7   UNKNOWN  $E6F7           ; Unknown Exxx instruction
$CDA    $2A7F   CALL     $A7F            ; Call subroutine at A7F
$CDC    $388C   SE       V8, #8C         ; Skip if V8 == 140
$CDE    $3802   SE       V8, #02         ; Skip if V8 == 2
$CE0    $18C8   JP       $8C8            ; Jump to 8C8
$CE2    $BCA4   JP       V0, $CA4        ; Jump to V0 + CA4
$CE4    $4293   SNE      V2, #93         ; Skip if V2 != 147
$CE6    $769C   ADD      V6, #9C         ; Add 156 to V6
$CE8    $A950   LD       I, $950         ; Load 950 into I
$CEA    $5243   UNKNOWN  $5243           ; Unknown 5xxx instruction
$CEC    $3EE9   SE       VE, #E9         ; Skip if VE == 233
$CEE    $DC38   DRW      VC, V3, #8      ; Draw 8-byte sprite at VC, V3
$CF0    $F3A0   UNKNOWN  F3A0            ; Unknown Fxxx instruction
$CF2    $44F4   SNE      V4, #F4         ; Skip if V4 != 244
$CF4    $01A8   SYS      $1A8            ; System call to 1A8
$CF6    $9284   UNKNOWN  $9284           ; Unknown 9xxx instruction
$CF8    $93F8   UNKNOWN  $93F8           ; Unknown 9xxx instruction
$CFA    $476A   SNE      V7, #6A         ; Skip if V7 != 106
$CFC    $A6A8   LD       I, $6A8         ; Load 6A8 into I
$CFE    $CAA7   RND      VA, #A7         ; VA = random & A7
$D00    $BEED   JP       V0, $EED        ; Jump to V0 + EED
$D02    $5716   UNKNOWN  $5716           ; Unknown 5xxx instruction
$D04    $CEF1   RND      VE, #F1         ; VE = random & F1
$D06    $ED95   UNKNOWN  $ED95           ; Unknown Exxx instruction
$D08    $AFD2   LD       I, $FD2         ; Load FD2 into I
$D0A    $619C   LD       V1, #9C         ; Load 156 into V1
$D0C    $4CA6   SNE      VC, #A6         ; Skip if VC != 166
$D0E    $9B68   UNKNOWN  $9B68           ; Unknown 9xxx instruction
$D10    $A4A0   LD       I, $4A0         ; Load 4A0 into I
$D12    $6AB0   LD       VA, #B0         ; Load 176 into VA
$D14    $185E   JP       $85E            ; Jump to 85E
$D16    $B845   JP       V0, $845        ; Jump to V0 + 845
$D18    $774F   ADD      V7, #4F         ; Add 79 to V7
$D1A    $AF28   LD       I, $F28         ; Load F28 into I
$D1C    $6154   LD       V1, #54         ; Load 84 into V1
$D1E    $389C   SE       V8, #9C         ; Skip if V8 == 156
$D20    $B229   JP       V0, $229        ; Jump to V0 + 229
$D22    $766A   ADD      V6, #6A         ; Add 106 to V6
$D24    $B396   JP       V0, $396        ; Jump to V0 + 396
$D26    $6841   LD       V8, #41         ; Load 65 into V8
$D28    $0EB3   SYS      $EB3            ; System call to EB3
$D2A    $F2CC   UNKNOWN  F2CC            ; Unknown Fxxx instruction
$D2C    $0314   SYS      $314            ; System call to 314
$D2E    $3F73   SE       VF, #73         ; Skip if VF == 115
$D30    $A70A   LD       I, $70A         ; Load 70A into I
$D32    $964E   UNKNOWN  $964E           ; Unknown 9xxx instruction
$D34    $51AF   UNKNOWN  $51AF           ; Unknown 5xxx instruction
$D36    $626B   LD       V2, #6B         ; Load 107 into V2
$D38    $3370   SE       V3, #70         ; Skip if V3 == 112
$D3A    $B6B2   JP       V0, $6B2        ; Jump to V0 + 6B2
$D3C    $21BD   CALL     $1BD            ; Call subroutine at 1BD
$D3E    $B9FC   JP       V0, $9FC        ; Jump to V0 + 9FC
$D40    $9E7C   UNKNOWN  $9E7C           ; Unknown 9xxx instruction
$D42    $69B8   LD       V9, #B8         ; Load 184 into V9
$D44    $7CAD   ADD      VC, #AD         ; Add 173 to VC
$D46    $F548   UNKNOWN  F548            ; Unknown Fxxx instruction
$D48    $5370   SE       V3, V7          ; Skip if V3 == V7
$D4A    $2F22   CALL     $F22            ; Call subroutine at F22
$D4C    $3D41   SE       VD, #41         ; Skip if VD == 65
$D4E    $6BED   LD       VB, #ED         ; Load 237 into VB
$D50    $4DE9   SNE      VD, #E9         ; Skip if VD != 233
$D52    $1660   JP       $660            ; Jump to 660
$D54    $8E27   SUBN     VE, V2          ; VE = V2 - VE, VF = !borrow
$D56    $DFB4   DRW      VF, VB, #4      ; Draw 4-byte sprite at VF, VB
$D58    $09BB   SYS      $9BB            ; System call to 9BB
$D5A    $5102   UNKNOWN  $5102           ; Unknown 5xxx instruction
$D5C    $8DC6   SHR      VD              ; VD >>= 1, VF = LSB
$D5E    $F87A   UNKNOWN  F87A            ; Unknown Fxxx instruction
$D60    $7D10   ADD      VD, #10         ; Add 16 to VD
$D62    $9A6A   UNKNOWN  $9A6A           ; Unknown 9xxx instruction
$D64    $5417   UNKNOWN  $5417           ; Unknown 5xxx instruction
$D66    $2F7C   CALL     $F7C            ; Call subroutine at F7C
$D68    $4B4E   SNE      VB, #4E         ; Skip if VB != 78
$D6A    $90BF   UNKNOWN  $90BF           ; Unknown 9xxx instruction
$D6C    $50CF   UNKNOWN  $50CF           ; Unknown 5xxx instruction
$D6E    $91A3   UNKNOWN  $91A3           ; Unknown 9xxx instruction
$D70    $4114   SNE      V1, #14         ; Skip if V1 != 20
$D72    $FDBD   UNKNOWN  FDBD            ; Unknown Fxxx instruction
$D74    $2548   CALL     $548            ; Call subroutine at 548
$D76    $F09D   UNKNOWN  F09D            ; Unknown Fxxx instruction
$D78    $9965   UNKNOWN  $9965           ; Unknown 9xxx instruction
$D7A    $D704   DRW      V7, V0, #4      ; Draw 4-byte sprite at V7, V0
$D7C    $6875   LD       V8, #75         ; Load 117 into V8
$D7E    $C8CC   RND      V8, #CC         ; V8 = random & CC
$D80    $A14F   LD       I, $14F         ; Load 14F into I
$D82    $4709   SNE      V7, #09         ; Skip if V7 != 9
$D84    $CE5A   RND      VE, #5A         ; VE = random & 5A
$D86    $4A8B   SNE      VA, #8B         ; Skip if VA != 139
$D88    $1053   JP       $053            ; Jump to 053
$D8A    $AEFA   LD       I, $EFA         ; Load EFA into I
$D8C    $A3F0   LD       I, $3F0         ; Load 3F0 into I
$D8E    $2AB3   CALL     $AB3            ; Call subroutine at AB3
$D90    $9471   UNKNOWN  $9471           ; Unknown 9xxx instruction
$D92    $4AC1   SNE      VA, #C1         ; Skip if VA != 193
$D94    $1CBF   JP       $CBF            ; Jump to CBF
$D96    $33D5   SE       V3, #D5         ; Skip if V3 == 213
$D98    $84E1   OR       V4, VE          ; V4 |= VE
$D9A    $6BF3   LD       VB, #F3         ; Load 243 into VB
$D9C    $8C1C   UNKNOWN  8C1C            ; Unknown 8xxx instruction
$D9E    $55B4   UNKNOWN  $55B4           ; Unknown 5xxx instruction
$DA0    $3F0F   SE       VF, #0F         ; Skip if VF == 15
$DA2    $D9A4   DRW      V9, VA, #4      ; Draw 4-byte sprite at V9, VA
$DA4    $A1C1   LD       I, $1C1         ; Load 1C1 into I
$DA6    $EFD7   UNKNOWN  $EFD7           ; Unknown Exxx instruction
$DA8    $FE11   UNKNOWN  FE11            ; Unknown Fxxx instruction
$DAA    $FA30   UNKNOWN  FA30            ; Unknown Fxxx instruction
$DAC    $5121   UNKNOWN  $5121           ; Unknown 5xxx instruction
$DAE    $6E53   LD       VE, #53         ; Load 83 into VE
$DB0    $0D70   SYS      $D70            ; System call to D70
$DB2    $CB8F   RND      VB, #8F         ; VB = random & 8F
$DB4    $8A01   OR       VA, V0          ; VA |= V0
$DB6    $403C   SNE      V0, #3C         ; Skip if V0 != 60
$DB8    $9EB8   UNKNOWN  $9EB8           ; Unknown 9xxx instruction
$DBA    $7083   ADD      V0, #83         ; Add 131 to V0
$DBC    $8D4B   UNKNOWN  8D4B            ; Unknown 8xxx instruction
$DBE    $E2BD   UNKNOWN  $E2BD           ; Unknown Exxx instruction
$DC0    $47BA   SNE      V7, #BA         ; Skip if V7 != 186
$DC2    $D76D   DRW      V7, V6, #D      ; Draw 13-byte sprite at V7, V6
$DC4    $5CAB   UNKNOWN  $5CAB           ; Unknown 5xxx instruction
$DC6    $A72F   LD       I, $72F         ; Load 72F into I
$DC8    $64B3   LD       V4, #B3         ; Load 179 into V4
$DCA    $D691   DRW      V6, V9, #1      ; Draw 1-byte sprite at V6, V9
$DCC    $D7D3   DRW      V7, VD, #3      ; Draw 3-byte sprite at V7, VD
$DCE    $1541   JP       $541            ; Jump to 541
$DD0    $30FA   SE       V0, #FA         ; Skip if V0 == 250
$DD2    $FC3B   UNKNOWN  FC3B            ; Unknown Fxxx instruction
$DD4    $2957   CALL     $957            ; Call subroutine at 957
$DD6    $FA70   UNKNOWN  FA70            ; Unknown Fxxx instruction
$DD8    $CD97   RND      VD, #97         ; VD = random & 97
$DDA    $CB8C   RND      VB, #8C         ; VB = random & 8C
$DDC    $8F47   SUBN     VF, V4          ; VF = V4 - VF, VF = !borrow
$DDE    $E006   UNKNOWN  $E006           ; Unknown Exxx instruction
$DE0    $EBEE   UNKNOWN  $EBEE           ; Unknown Exxx instruction
$DE2    $379B   SE       V7, #9B         ; Skip if V7 == 155
$DE4    $70CD   ADD      V0, #CD         ; Add 205 to V0
$DE6    $AC28   LD       I, $C28         ; Load C28 into I
$DE8    $6D98   LD       VD, #98         ; Load 152 into VD
$DEA    $7967   ADD      V9, #67         ; Add 103 to V9
$DEC    $0F5B   SYS      $F5B            ; System call to F5B
$DEE    $4C73   SNE      VC, #73         ; Skip if VC != 115
$DF0    $0C4E   SYS      $C4E            ; System call to C4E
$DF2    $FFBD   UNKNOWN  FFBD            ; Unknown Fxxx instruction
$DF4    $52CC   UNKNOWN  $52CC           ; Unknown 5xxx instruction
$DF6    $530F   UNKNOWN  $530F           ; Unknown 5xxx instruction
$DF8    $6B05   LD       VB, #05         ; Load 5 into VB
$DFA    $1ADA   JP       $ADA            ; Jump to ADA
$DFC    $F46D   UNKNOWN  F46D            ; Unknown Fxxx instruction
$DFE    $7AF0   ADD      VA, #F0         ; Add 240 to VA
$E00    $E3B6   UNKNOWN  $E3B6           ; Unknown Exxx instruction
$E02    $8A0E   SHL      VA              ; VA <<= 1, VF = MSB
$E04    $1581   JP       $581            ; Jump to 581
$E06    $0277   SYS      $277            ; System call to 277
$E08    $76BF   ADD      V6, #BF         ; Add 191 to V6
$E0A    $8960   LD       V9, V6          ; V9 = V6
$E0C    $337F   SE       V3, #7F         ; Skip if V3 == 127
$E0E    $4FCA   SNE      VF, #CA         ; Skip if VF != 202
$E10    $0D56   SYS      $D56            ; System call to D56
$E12    $0839   SYS      $839            ; System call to 839
$E14    $685C   LD       V8, #5C         ; Load 92 into V8
$E16    $6A4A   LD       VA, #4A         ; Load 74 into VA
$E18    $DE48   DRW      VE, V4, #8      ; Draw 8-byte sprite at VE, V4
$E1A    $67E5   LD       V7, #E5         ; Load 229 into V7
$E1C    $C1CA   RND      V1, #CA         ; V1 = random & CA
$E1E    $DD21   DRW      VD, V2, #1      ; Draw 1-byte sprite at VD, V2
$E20    $71EE   ADD      V1, #EE         ; Add 238 to V1
$E22    $0222   SYS      $222            ; System call to 222
$E24    $F0ED   UNKNOWN  F0ED            ; Unknown Fxxx instruction
$E26    $36AF   SE       V6, #AF         ; Skip if V6 == 175
$E28    $5005   UNKNOWN  $5005           ; Unknown 5xxx instruction
$E2A    $EE91   UNKNOWN  $EE91           ; Unknown Exxx instruction
$E2C    $452C   SNE      V5, #2C         ; Skip if V5 != 44
$E2E    $803A   UNKNOWN  803A            ; Unknown 8xxx instruction
$E30    $1148   JP       $148            ; Jump to 148
$E32    $5F41   UNKNOWN  $5F41           ; Unknown 5xxx instruction
$E34    $DB86   DRW      VB, V8, #6      ; Draw 6-byte sprite at VB, V8
$E36    $3B32   SE       VB, #32         ; Skip if VB == 50
$E38    $B706   JP       V0, $706        ; Jump to V0 + 706
$E3A    $FC4E   UNKNOWN  FC4E            ; Unknown Fxxx instruction
$E3C    $BA25   JP       V0, $A25        ; Jump to V0 + A25
$E3E    $4567   SNE      V5, #67         ; Skip if V5 != 103
$E40    $33CC   SE       V3, #CC         ; Skip if V3 == 204
$E42    $6E32   LD       VE, #32         ; Load 50 into VE
$E44    $92A5   UNKNOWN  $92A5           ; Unknown 9xxx instruction
$E46    $E8E3   UNKNOWN  $E8E3           ; Unknown Exxx instruction
$E48    $0A81   SYS      $A81            ; System call to A81
$E4A    $C946   RND      V9, #46         ; V9 = random & 46
$E4C    $B79E   JP       V0, $79E        ; Jump to V0 + 79E
$E4E    $C8D7   RND      V8, #D7         ; V8 = random & D7
$E50    $8258   UNKNOWN  8258            ; Unknown 8xxx instruction
$E52    $437B   SNE      V3, #7B         ; Skip if V3 != 123
$E54    $E9F6   UNKNOWN  $E9F6           ; Unknown Exxx instruction
$E56    $631A   LD       V3, #1A         ; Load 26 into V3
$E58    $CAB2   RND      VA, #B2         ; VA = random & B2
$E5A    $3681   SE       V6, #81         ; Skip if V6 == 129
$E5C    $3010   SE       V0, #10         ; Skip if V0 == 16
$E5E    $7B56   ADD      VB, #56         ; Add 86 to VB
$E60    $E2FE   UNKNOWN  $E2FE           ; Unknown Exxx instruction
$E62    $9142   UNKNOWN  $9142           ; Unknown 9xxx instruction
$E64    $16E8   JP       $6E8            ; Jump to 6E8
$E66    $FD83   UNKNOWN  FD83            ; Unknown Fxxx instruction
$E68    $6450   LD       V4, #50         ; Load 80 into V4
$E6A    $D01B   DRW      V0, V1, #B      ; Draw 11-byte sprite at V0, V1
$E6C    $7D98   ADD      VD, #98         ; Add 152 to VD
$E6E    $552E   UNKNOWN  $552E           ; Unknown 5xxx instruction
$E70    $B52C   JP       V0, $52C        ; Jump to V0 + 52C
$E72    $757B   ADD      V5, #7B         ; Add 123 to V5
$E74    $461B   SNE      V6, #1B         ; Skip if V6 != 27
$E76    $E30D   UNKNOWN  $E30D           ; Unknown Exxx instruction
$E78    $6BDC   LD       VB, #DC         ; Load 220 into VB
$E7A    $05AC   SYS      $5AC            ; System call to 5AC
$E7C    $1ACB   JP       $ACB            ; Jump to ACB
$E7E    $CF40   RND      VF, #40         ; VF = random & 40
$E80    $8F81   OR       VF, V8          ; VF |= V8
$E82    $B4C8   JP       V0, $4C8        ; Jump to V0 + 4C8
$E84    $E8C0   UNKNOWN  $E8C0           ; Unknown Exxx instruction
$E86    $BC6F   JP       V0, $C6F        ; Jump to V0 + C6F
$E88    $A2D2   LD       I, $2D2         ; Load 2D2 into I
$E8A    $F142   UNKNOWN  F142            ; Unknown Fxxx instruction
$E8C    $CDED   RND      VD, #ED         ; VD = random & ED
$E8E    $0579   SYS      $579            ; System call to 579
$E90    $10AC   JP       $0AC            ; Jump to 0AC
$E92    $5886   UNKNOWN  $5886           ; Unknown 5xxx instruction
$E94    $D520   DRW      V5, V2, #0      ; Draw 0-byte sprite at V5, V2
$E96    $3160   SE       V1, #60         ; Skip if V1 == 96
$E98    $DD7E   DRW      VD, V7, #E      ; Draw 14-byte sprite at VD, V7
$E9A    $66F5   LD       V6, #F5         ; Load 245 into V6
$E9C    $0985   SYS      $985            ; System call to 985
$E9E    $7CB2   ADD      VC, #B2         ; Add 178 to VC
$EA0    $3DF1   SE       VD, #F1         ; Skip if VD == 241
$EA2    $4519   SNE      V5, #19         ; Skip if V5 != 25
$EA4    $96D2   UNKNOWN  $96D2           ; Unknown 9xxx instruction
$EA6    $2D60   CALL     $D60            ; Call subroutine at D60
$EA8    $F122   UNKNOWN  F122            ; Unknown Fxxx instruction
$EAA    $C11C   RND      V1, #1C         ; V1 = random & 1C
$EAC    $9FEB   UNKNOWN  $9FEB           ; Unknown 9xxx instruction
$EAE    $90C3   UNKNOWN  $90C3           ; Unknown 9xxx instruction
$EB0    $7592   ADD      V5, #92         ; Add 146 to V5
$EB2    $8655   SUB      V6, V5          ; V6 -= V5, VF = !borrow
$EB4    $E96A   UNKNOWN  $E96A           ; Unknown Exxx instruction
$EB6    $C16C   RND      V1, #6C         ; V1 = random & 6C
$EB8    $36AC   SE       V6, #AC         ; Skip if V6 == 172
$EBA    $1154   JP       $154            ; Jump to 154
$EBC    $8456   SHR      V4              ; V4 >>= 1, VF = LSB
$EBE    $B201   JP       V0, $201        ; Jump to V0 + 201
$EC0    $BB85   JP       V0, $B85        ; Jump to V0 + B85
$EC2    $393E   SE       V9, #3E         ; Skip if V9 == 62
$EC4    $8662   AND      V6, V6          ; V6 &= V6
$EC6    $9E20   SNE      VE, V2          ; Skip if VE != V2
$EC8    $C49F   RND      V4, #9F         ; V4 = random & 9F
$ECA    $E55F   UNKNOWN  $E55F           ; Unknown Exxx instruction
$ECC    $5DD4   UNKNOWN  $5DD4           ; Unknown 5xxx instruction
$ECE    $138F   JP       $38F            ; Jump to 38F
$ED0    $7618   ADD      V6, #18         ; Add 24 to V6
$ED2    $B05D   JP       V0, $05D        ; Jump to V0 + 05D
$ED4    $2B17   CALL     $B17            ; Call subroutine at B17
$ED6    $3181   SE       V1, #81         ; Skip if V1 == 129
$ED8    $C3AD   RND      V3, #AD         ; V3 = random & AD
$EDA    $4A02   SNE      VA, #02         ; Skip if VA != 2
$EDC    $B4A2   JP       V0, $4A2        ; Jump to V0 + 4A2
$EDE    $3B4B   SE       VB, #4B         ; Skip if VB == 75
$EE0    $AB01   LD       I, $B01         ; Load B01 into I
$EE2    $EC7C   UNKNOWN  $EC7C           ; Unknown Exxx instruction
$EE4    $8900   LD       V9, V0          ; V9 = V0
$EE6    $E5C5   UNKNOWN  $E5C5           ; Unknown Exxx instruction
$EE8    $DF0D   DRW      VF, V0, #D      ; Draw 13-byte sprite at VF, V0
$EEA    $F5CF   UNKNOWN  F5CF            ; Unknown Fxxx instruction
$EEC    $95B6   UNKNOWN  $95B6           ; Unknown 9xxx instruction
$EEE    $6A92   LD       VA, #92         ; Load 146 into VA
$EF0    $0410   SYS      $410            ; System call to 410
$EF2    $E20B   UNKNOWN  $E20B           ; Unknown Exxx instruction
$EF4    $AE90   LD       I, $E90         ; Load E90 into I
$EF6    $8E39   UNKNOWN  8E39            ; Unknown 8xxx instruction
$EF8    $E1FE   UNKNOWN  $E1FE           ; Unknown Exxx instruction
$EFA    $42C3   SNE      V2, #C3         ; Skip if V2 != 195
$EFC    $C8B2   RND      V8, #B2         ; V8 = random & B2
$EFE    $4E22   SNE      VE, #22         ; Skip if VE != 34
$F00    $1620   JP       $620            ; Jump to 620
$F02    $E3E8   UNKNOWN  $E3E8           ; Unknown Exxx instruction
$F04    $8B51   OR       VB, V5          ; VB |= V5
$F06    $2507   CALL     $507            ; Call subroutine at 507
$F08    $6623   LD       V6, #23         ; Load 35 into V6
$F0A    $01DE   SYS      $1DE            ; System call to 1DE
$F0C    $F86D   UNKNOWN  F86D            ; Unknown Fxxx instruction
$F0E    $09E9   SYS      $9E9            ; System call to 9E9
$F10    $DC51   DRW      VC, V5, #1      ; Draw 1-byte sprite at VC, V5
$F12    $B492   JP       V0, $492        ; Jump to V0 + 492
$F14    $439F   SNE      V3, #9F         ; Skip if V3 != 159
$F16    $0649   SYS      $649            ; System call to 649
$F18    $1967   JP       $967            ; Jump to 967
$F1A    $20AF   CALL     $0AF            ; Call subroutine at 0AF
$F1C    $3828   SE       V8, #28         ; Skip if V8 == 40
$F1E    $B094   JP       V0, $094        ; Jump to V0 + 094
$F20    $9A49   UNKNOWN  $9A49           ; Unknown 9xxx instruction
$F22    $F28C   UNKNOWN  F28C            ; Unknown Fxxx instruction
$F24    $7B89   ADD      VB, #89         ; Add 137 to VB
$F26    $3601   SE       V6, #01         ; Skip if V6 == 1
$F28    $542C   UNKNOWN  $542C           ; Unknown 5xxx instruction
$F2A    $EC31   UNKNOWN  $EC31           ; Unknown Exxx instruction
$F2C    $5E72   UNKNOWN  $5E72           ; Unknown 5xxx instruction
$F2E    $21A0   CALL     $1A0            ; Call subroutine at 1A0
$F30    $3F69   SE       VF, #69         ; Skip if VF == 105
$F32    $B6E9   JP       V0, $6E9        ; Jump to V0 + 6E9
$F34    $C472   RND      V4, #72         ; V4 = random & 72
$F36    $8E34   ADD      VE, V3          ; VE += V3, VF = carry
$F38    $C5B3   RND      V5, #B3         ; V5 = random & B3
$F3A    $CDBE   RND      VD, #BE         ; VD = random & BE
$F3C    $2AF5   CALL     $AF5            ; Call subroutine at AF5
$F3E    $A75C   LD       I, $75C         ; Load 75C into I
$F40    $21BE   CALL     $1BE            ; Call subroutine at 1BE
$F42    $ED9E   SKP      VD              ; Skip if key VD pressed
$F44    $9B65   UNKNOWN  $9B65           ; Unknown 9xxx instruction
$F46    $941B   UNKNOWN  $941B           ; Unknown 9xxx instruction
$F48    $C29F   RND      V2, #9F         ; V2 = random & 9F
$F4A    $7D7D   ADD      VD, #7D         ; Add 125 to VD
$F4C    $09A2   SYS      $9A2            ; System call to 9A2
$F4E    $EF40   UNKNOWN  $EF40           ; Unknown Exxx instruction
$F50    $C676   RND      V6, #76         ; V6 = random & 76
$F52    $913F   UNKNOWN  $913F           ; Unknown 9xxx instruction
$F54    $D90C   DRW      V9, V0, #C      ; Draw 12-byte sprite at V9, V0
$F56    $7483   ADD      V4, #83         ; Add 131 to V4
$F58    $C177   RND      V1, #77         ; V1 = random & 77
$F5A    $3EC6   SE       VE, #C6         ; Skip if VE == 198
$F5C    $74B8   ADD      V4, #B8         ; Add 184 to V4
$F5E    $5A29   UNKNOWN  $5A29           ; Unknown 5xxx instruction
$F60    $742C   ADD      V4, #2C         ; Add 44 to V4
$F62    $3782   SE       V7, #82         ; Skip if V7 == 130
$F64    $71DD   ADD      V1, #DD         ; Add 221 to V1
$F66    $8CC0   LD       VC, VC          ; VC = VC
$F68    $97CE   UNKNOWN  $97CE           ; Unknown 9xxx instruction
$F6A    $8153   XOR      V1, V5          ; V1 ^= V5
$F6C    $22CB   CALL     $2CB            ; Call subroutine at 2CB
$F6E    $FE0A   LD       VE, K           ; Wait for key press, store in VE
$F70    $9138   UNKNOWN  $9138           ; Unknown 9xxx instruction
$F72    $3716   SE       V7, #16         ; Skip if V7 == 22
$F74    $ED52   UNKNOWN  $ED52           ; Unknown Exxx instruction
$F76    $242A   CALL     $42A            ; Call subroutine at 42A
$F78    $4B45   SNE      VB, #45         ; Skip if VB != 69
$F7A    $774E   ADD      V7, #4E         ; Add 78 to V7
$F7C    $C3CD   RND      V3, #CD         ; V3 = random & CD
$F7E    $4B4D   SNE      VB, #4D         ; Skip if VB != 77
$F80    $CEA1   RND      VE, #A1         ; VE = random & A1
$F82    $976B   UNKNOWN  $976B           ; Unknown 9xxx instruction
$F84    $C6E1   RND      V6, #E1         ; V6 = random & E1
$F86    $6BE3   LD       VB, #E3         ; Load 227 into VB
$F88    $2F42   CALL     $F42            ; Call subroutine at F42
$F8A    $8211   OR       V2, V1          ; V2 |= V1
$F8C    $7F92   ADD      VF, #92         ; Add 146 to VF
$F8E    $12AF   JP       $2AF            ; Jump to 2AF
$F90    $07E4   SYS      $7E4            ; System call to 7E4
$F92    $2F02   CALL     $F02            ; Call subroutine at F02
$F94    $721E   ADD      V2, #1E         ; Add 30 to V2
$F96    $8E4C   UNKNOWN  8E4C            ; Unknown 8xxx instruction
$F98    $DCF4   DRW      VC, VF, #4      ; Draw 4-byte sprite at VC, VF
$F9A    $6B23   LD       VB, #23         ; Load 35 into VB
$F9C    $D131   DRW      V1, V3, #1      ; Draw 1-byte sprite at V1, V3
$F9E    $609B   LD       V0, #9B         ; Load 155 into V0
$FA0    $E2F5   UNKNOWN  $E2F5           ; Unknown Exxx instruction
$FA2    $9CA5   UNKNOWN  $9CA5           ; Unknown 9xxx instruction
$FA4    $02F1   SYS      $2F1            ; System call to 2F1
$FA6    $E8AC   UNKNOWN  $E8AC           ; Unknown Exxx instruction
$FA8    $1B71   JP       $B71            ; Jump to B71
$FAA    $7E2B   ADD      VE, #2B         ; Add 43 to VE
$FAC    $2DBF   CALL     $DBF            ; Call subroutine at DBF
$FAE    $FC9B   UNKNOWN  FC9B            ; Unknown Fxxx instruction
$FB0    $190A   JP       $90A            ; Jump to 90A
$FB2    $4209   SNE      V2, #09         ; Skip if V2 != 9
$FB4    $B984   JP       V0, $984        ; Jump to V0 + 984
$FB6    $2D76   CALL     $D76            ; Call subroutine at D76
$FB8    $01C9   SYS      $1C9            ; System call to 1C9
$FBA    $6047   LD       V0, #47         ; Load 71 into V0
$FBC    $19AA   JP       $9AA            ; Jump to 9AA
$FBE    $9941   UNKNOWN  $9941           ; Unknown 9xxx instruction
$FC0    $4D24   SNE      VD, #24         ; Skip if VD != 36
$FC2    $EA5B   UNKNOWN  $EA5B           ; Unknown Exxx instruction
$FC4    $59BC   UNKNOWN  $59BC           ; Unknown 5xxx instruction
$FC6    $CAC4   RND      VA, #C4         ; VA = random & C4
$FC8    $0FD4   SYS      $FD4            ; System call to FD4
$FCA    $9479   UNKNOWN  $9479           ; Unknown 9xxx instruction
$FCC    $F41B   UNKNOWN  F41B            ; Unknown Fxxx instruction
$FCE    $4FC6   SNE      VF, #C6         ; Skip if VF != 198
$FD0    $FB32   UNKNOWN  FB32            ; Unknown Fxxx instruction
$FD2    $1268   JP       $268            ; Jump to 268
$FD4    $9454   UNKNOWN  $9454           ; Unknown 9xxx instruction
$FD6    $CA11   RND      VA, #11         ; VA = random & 11
$FD8    $D080   DRW      V0, V8, #0      ; Draw 0-byte sprite at V0, V8
$FDA    $186A   JP       $86A            ; Jump to 86A
$FDC    $0B23   SYS      $B23            ; System call to B23
$FDE    $33B6   SE       V3, #B6         ; Skip if V3 == 182
$FE0    $75F9   ADD      V5, #F9         ; Add 249 to V5
$FE2    $79AF   ADD      V9, #AF         ; Add 175 to V9
$FE4    $73C7   ADD      V3, #C7         ; Add 199 to V3
$FE6    $0962   SYS      $962            ; System call to 962
$FE8    $56E0   SE       V6, VE          ; Skip if V6 == VE
$FEA    $4D8F   SNE      VD, #8F         ; Skip if VD != 143
$FEC    $B1B5   JP       V0, $1B5        ; Jump to V0 + 1B5
$FEE    $8CC0   LD       VC, VC          ; VC = VC
$FF0    $DC98   DRW      VC, V9, #8      ; Draw 8-byte sprite at VC, V9
$FF2    $B2D7   JP       V0, $2D7        ; Jump to V0 + 2D7
$FF4    $E1C2   UNKNOWN  $E1C2           ; Unknown Exxx instruction
$FF6    $C91A   RND      V9, #1A         ; V9 = random & 1A
$FF8    $0FB7   SYS      $FB7            ; System call to FB7
$FFA    $FE26   UNKNOWN  FE26            ; Unknown Fxxx instruction
$FFC    $1189   JP       $189            ; Jump to 189
$FFE    $CD78   RND      VD, #78         ; VD = random & 78

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 450 (25.1%)
  JP      : 232 (12.9%)
  LD      : 220 (12.3%)
  SE      : 141 ( 7.9%)
  RND     : 138 ( 7.7%)
  ADD     : 123 ( 6.9%)
  SNE     : 118 ( 6.6%)
  SYS     : 111 ( 6.2%)
  DRW     : 100 ( 5.6%)
  CALL    :  98 ( 5.5%)
  AND     :  11 ( 0.6%)
  SHR     :  10 ( 0.6%)
  XOR     :   9 ( 0.5%)
  OR      :   8 ( 0.4%)
  SUBN    :   8 ( 0.4%)
  SUB     :   6 ( 0.3%)
  SHL     :   5 ( 0.3%)
  SKP     :   4 ( 0.2%)

Memory Operations: 343 (19.1%)
Arithmetic Operations: 165 (9.2%)
