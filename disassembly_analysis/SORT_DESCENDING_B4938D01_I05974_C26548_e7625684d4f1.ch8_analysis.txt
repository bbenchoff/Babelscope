
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B4938D01_I05974_C26548_e7625684d4f1.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 4938
Instance: 5974
Direction: descending
Final Array: [243, 243, 243, 243, 243, 243, 243, 98]
Operations: R:0 W:7 C:979 S:1

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 108
Sort Array References:
  $30C: LD I, $74E ; Load 74E into I
  $33A: LD I, $87F ; Load 87F into I
  $368: LD I, $287 ; Load 287 into I
  $38A: LD I, $A41 ; Load A41 into I
  $392: LD I, $4E6 ; Load 4E6 into I
  $3C0: LD I, $1C4 ; Load 1C4 into I
  $3E8: LD I, $135 ; Load 135 into I
  $40A: LD I, $00A ; Load 00A into I
  $42A: LD I, $103 ; Load 103 into I
  $46E: LD I, $638 ; Load 638 into I
  $470: LD I, $B9E ; Load B9E into I
  $4FC: LD I, $912 ; Load 912 into I
  $518: LD I, $A18 ; Load A18 into I
  $52C: LD I, $921 ; Load 921 into I
  $562: LD I, $9E1 ; Load 9E1 into I
  $574: LD I, $CA0 ; Load CA0 into I
  $594: LD I, $E18 ; Load E18 into I
  $5F2: LD I, $8AF ; Load 8AF into I
  $600: LD I, $739 ; Load 739 into I
  $63C: LD I, $A6C ; Load A6C into I
  $644: LD I, $25D ; Load 25D into I
  $64E: LD I, $9D8 ; Load 9D8 into I
  $65C: LD I, $CF6 ; Load CF6 into I
  $660: LD I, $EE4 ; Load EE4 into I
  $67C: LD I, $F06 ; Load F06 into I
  $69A: LD I, $4C5 ; Load 4C5 into I
  $6A2: LD I, $463 ; Load 463 into I
  $6B6: LD I, $1AA ; Load 1AA into I
  $706: LD I, $32F ; Load 32F into I
  $70A: LD I, $88F ; Load 88F into I
  $740: LD I, $E16 ; Load E16 into I
  $75A: LD I, $105 ; Load 105 into I
  $78A: LD I, $C38 ; Load C38 into I
  $78E: LD I, $60D ; Load 60D into I
  $796: LD I, $0ED ; Load 0ED into I
  $7A8: LD I, $751 ; Load 751 into I
  $7BA: LD I, $05D ; Load 05D into I
  $80C: LD I, $BD8 ; Load BD8 into I
  $81E: LD I, $400 ; Load 400 into I
  $826: LD I, $B33 ; Load B33 into I
  $83A: LD I, $D03 ; Load D03 into I
  $84E: LD I, $F27 ; Load F27 into I
  $850: LD I, $F07 ; Load F07 into I
  $878: LD I, $16E ; Load 16E into I
  $884: LD I, $1ED ; Load 1ED into I
  $88A: LD I, $52F ; Load 52F into I
  $892: LD I, $310 ; Load 310 into I
  $8AE: LD I, $627 ; Load 627 into I
  $8E2: LD I, $678 ; Load 678 into I
  $8F8: LD I, $25A ; Load 25A into I
  $902: LD I, $24E ; Load 24E into I
  $910: LD I, $F03 ; Load F03 into I
  $936: LD I, $56A ; Load 56A into I
  $942: LD I, $B99 ; Load B99 into I
  $952: LD I, $2E9 ; Load 2E9 into I
  $95C: LD I, $63B ; Load 63B into I
  $97E: LD I, $2B6 ; Load 2B6 into I
  $9A8: LD I, $32E ; Load 32E into I
  $9BE: LD I, $6DE ; Load 6DE into I
  $9C4: ADD I, VE ; I ADDRESS MANIPULATION
  $9CC: LD I, $B02 ; Load B02 into I
  $9E8: LD I, $F2F ; Load F2F into I
  $A1E: LD I, $F2B ; Load F2B into I
  $A36: LD I, $314 ; Load 314 into I
  $A8E: LD I, $EC8 ; Load EC8 into I
  $AE4: LD I, $914 ; Load 914 into I
  $B52: LD I, $8AE ; Load 8AE into I
  $B56: LD I, $1D9 ; Load 1D9 into I
  $B60: LD I, $E69 ; Load E69 into I
  $B72: LD I, $7FD ; Load 7FD into I
  $B7C: LD I, $20F ; Load 20F into I
  $B8E: LD I, $DCC ; Load DCC into I
  $BC2: LD I, $999 ; Load 999 into I
  $C18: LD I, $AF6 ; Load AF6 into I
  $C20: LD I, $854 ; Load 854 into I
  $C28: LD I, $155 ; Load 155 into I
  $C38: LD I, $7E8 ; Load 7E8 into I
  $C54: LD I, $A32 ; Load A32 into I
  $C62: LD I, $9BF ; Load 9BF into I
  $C6C: LD I, $C05 ; Load C05 into I
  $C76: LD I, $1D0 ; Load 1D0 into I
  $C86: LD I, $4AD ; Load 4AD into I
  $CA8: LD I, $8E6 ; Load 8E6 into I
  $CDE: LD I, $421 ; Load 421 into I
  $D00: LD I, $EDC ; Load EDC into I
  $D40: LD I, $86D ; Load 86D into I
  $D5A: LD I, $D27 ; Load D27 into I
  $D7C: LD I, $593 ; Load 593 into I
  $D82: LD I, $31F ; Load 31F into I
  $D86: LD I, $B52 ; Load B52 into I
  $D8E: LD [I], V7 ; Store V0-V7 at I
  $D9E: LD I, $DFC ; Load DFC into I
  $DA0: LD I, $846 ; Load 846 into I
  $DAE: LD I, $DAD ; Load DAD into I
  $DE6: LD I, $D29 ; Load D29 into I
  $E06: LD I, $BCF ; Load BCF into I
  $E32: LD I, $972 ; Load 972 into I
  $E38: LD I, $8BD ; Load 8BD into I
  $E3E: LD I, $5CB ; Load 5CB into I
  $E6E: LD I, $7FE ; Load 7FE into I
  $EB8: LD I, $FEE ; Load FEE into I
  $EC6: LD I, $271 ; Load 271 into I
  $F08: LD I, $171 ; Load 171 into I
  $F58: LD I, $65F ; Load 65F into I
  $F5A: LD I, $825 ; Load 825 into I
  $F74: LD I, $D18 ; Load D18 into I
  $F86: LD I, $4A7 ; Load 4A7 into I
  $FC0: LD I, $908 ; Load 908 into I

CONTROL FLOW ANALYSIS:
Jumps: 186
Calls: 118
Branches: 224
Loops: 112
Loop Structures:
  $312 -> $123 (backward jump)
  $35C -> $0B2 (backward jump)
  $3CE -> $19D (backward jump)
  $3E6 -> $339 (backward jump)
  $45E -> $2A6 (backward jump)
  $49C -> $0A5 (backward jump)
  $4B0 -> $41F (backward jump)
  $4EC -> $1EF (backward jump)
  $516 -> $4CC (backward jump)
  $532 -> $437 (backward jump)
  $56E -> $07F (backward jump)
  $57A -> $157 (backward jump)
  $58A -> $275 (backward jump)
  $5C4 -> $010 (backward jump)
  $5E4 -> $41E (backward jump)
  $604 -> $543 (backward jump)
  $670 -> $342 (backward jump)
  $6BC -> $16D (backward jump)
  $6D4 -> $2CB (backward jump)
  $6F2 -> $6CF (backward jump)
  $724 -> $1A6 (backward jump)
  $726 -> $006 (backward jump)
  $738 -> $0ED (backward jump)
  $76A -> $675 (backward jump)
  $786 -> $6F8 (backward jump)
  $7C0 -> $5A4 (backward jump)
  $7D0 -> $2DC (backward jump)
  $7DC -> $188 (backward jump)
  $7E0 -> $277 (backward jump)
  $7F2 -> $2B7 (backward jump)
  $816 -> $5F8 (backward jump)
  $8C0 -> $01C (backward jump)
  $8E4 -> $19B (backward jump)
  $8EA -> $240 (backward jump)
  $938 -> $57F (backward jump)
  $956 -> $772 (backward jump)
  $96A -> $36C (backward jump)
  $99A -> $030 (backward jump)
  $9AE -> $138 (backward jump)
  $9CE -> $243 (backward jump)
  $A2C -> $265 (backward jump)
  $A32 -> $094 (backward jump)
  $A42 -> $617 (backward jump)
  $A56 -> $032 (backward jump)
  $A58 -> $78F (backward jump)
  $A76 -> $1B4 (backward jump)
  $A78 -> $1EF (backward jump)
  $AA0 -> $962 (backward jump)
  $AAA -> $24E (backward jump)
  $ACE -> $7D9 (backward jump)
  $AF0 -> $8D0 (backward jump)
  $AFE -> $24C (backward jump)
  $B1E -> $A1C (backward jump)
  $B22 -> $63E (backward jump)
  $B36 -> $A6C (backward jump)
  $B4C -> $A5B (backward jump)
  $B68 -> $756 (backward jump)
  $B96 -> $773 (backward jump)
  $BAC -> $677 (backward jump)
  $BB2 -> $336 (backward jump)
  $BB8 -> $6F0 (backward jump)
  $BD8 -> $9AB (backward jump)
  $C00 -> $015 (backward jump)
  $C10 -> $630 (backward jump)
  $C30 -> $2F7 (backward jump)
  $C32 -> $3B4 (backward jump)
  $C70 -> $908 (backward jump)
  $CA2 -> $792 (backward jump)
  $CAE -> $944 (backward jump)
  $CB8 -> $2A6 (backward jump)
  $CC2 -> $9CA (backward jump)
  $CC6 -> $AF3 (backward jump)
  $CCC -> $AA4 (backward jump)
  $CDA -> $3C5 (backward jump)
  $CF6 -> $90E (backward jump)
  $D08 -> $5F2 (backward jump)
  $D0C -> $855 (backward jump)
  $D10 -> $B0F (backward jump)
  $D22 -> $A69 (backward jump)
  $D26 -> $020 (backward jump)
  $D28 -> $9D2 (backward jump)
  $D42 -> $80F (backward jump)
  $D46 -> $537 (backward jump)
  $D5C -> $B9B (backward jump)
  $D90 -> $6C9 (backward jump)
  $DCE -> $799 (backward jump)
  $DD0 -> $ADA (backward jump)
  $DF0 -> $892 (backward jump)
  $E02 -> $B5C (backward jump)
  $E04 -> $23F (backward jump)
  $E28 -> $B3F (backward jump)
  $E30 -> $E1C (backward jump)
  $E36 -> $033 (backward jump)
  $E66 -> $0F5 (backward jump)
  $E82 -> $295 (backward jump)
  $EA0 -> $0B7 (backward jump)
  $EBC -> $C40 (backward jump)
  $EEE -> $1C3 (backward jump)
  $EFC -> $8A0 (backward jump)
  $F1C -> $5EB (backward jump)
  $F1E -> $1BE (backward jump)
  $F24 -> $EB6 (backward jump)
  $F3A -> $228 (backward jump)
  $F3E -> $4A1 (backward jump)
  $F52 -> $F4D (backward jump)
  $F70 -> $CD8 (backward jump)
  $F7C -> $D26 (backward jump)
  $F90 -> $D8B (backward jump)
  $F92 -> $107 (backward jump)
  $FB0 -> $D73 (backward jump)
  $FC4 -> $5E3 (backward jump)
  $FD6 -> $A5E (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$202    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$204    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$206    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$208    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$20A    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$20C    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$20E    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$210    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$212    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$214    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$216    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$218    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$21A    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$21C    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$21E    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$220    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$222    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$224    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$226    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$228    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$22A    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$22C    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$22E    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$230    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$232    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$234    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$236    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$238    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$23A    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$23C    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$23E    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$240    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$242    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$244    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$246    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$248    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$24A    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$24C    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$24E    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$250    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$252    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$254    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$256    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$258    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$25A    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$25C    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$25E    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$260    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$262    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$264    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$266    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$268    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$26A    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$26C    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$26E    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$270    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$272    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$274    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$276    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$278    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$27A    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$27C    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$27E    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$280    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$282    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$284    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$286    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$288    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$28A    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$28C    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$28E    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$290    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$292    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$294    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$296    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$298    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$29A    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$29C    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$29E    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2A0    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2A2    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2A4    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2A6    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2A8    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2AA    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2AC    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2AE    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2B0    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2B2    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2B4    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2B6    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2B8    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2BA    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2BC    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2BE    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2C0    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2C2    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2C4    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2C6    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2C8    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2CA    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2CC    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2CE    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2D0    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2D2    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2D4    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2D6    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2D8    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2DA    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2DC    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2DE    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2E0    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2E2    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2E4    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2E6    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2E8    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2EA    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2EC    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2EE    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2F0    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2F2    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2F4    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2F6    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2F8    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2FA    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2FC    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$2FE    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$300    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$302    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$304    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$306    $F362   UNKNOWN  F362            ; Unknown Fxxx instruction
$308    $17F2   JP       $7F2            ; Jump to 7F2
$30A    $6848   LD       V8, #48         ; Load 72 into V8
$30C    $A74E   LD       I, $74E         ; Load 74E into I
$30E    $F486   UNKNOWN  F486            ; Unknown Fxxx instruction
$310    $E884   UNKNOWN  $E884           ; Unknown Exxx instruction
$312    $1123   JP       $123            ; Jump to 123
$314    $65B9   LD       V5, #B9         ; Load 185 into V5
$316    $D8A5   DRW      V8, VA, #5      ; Draw 5-byte sprite at V8, VA
$318    $99F1   UNKNOWN  $99F1           ; Unknown 9xxx instruction
$31A    $7BA2   ADD      VB, #A2         ; Add 162 to VB
$31C    $C94B   RND      V9, #4B         ; V9 = random & 4B
$31E    $FAD2   UNKNOWN  FAD2            ; Unknown Fxxx instruction
$320    $D859   DRW      V8, V5, #9      ; Draw 9-byte sprite at V8, V5
$322    $0620   SYS      $620            ; System call to 620
$324    $C708   RND      V7, #08         ; V7 = random & 08
$326    $E834   UNKNOWN  $E834           ; Unknown Exxx instruction
$328    $FE30   UNKNOWN  FE30            ; Unknown Fxxx instruction
$32A    $DB49   DRW      VB, V4, #9      ; Draw 9-byte sprite at VB, V4
$32C    $2B7B   CALL     $B7B            ; Call subroutine at B7B
$32E    $5678   UNKNOWN  $5678           ; Unknown 5xxx instruction
$330    $D919   DRW      V9, V1, #9      ; Draw 9-byte sprite at V9, V1
$332    $DE26   DRW      VE, V2, #6      ; Draw 6-byte sprite at VE, V2
$334    $FF72   UNKNOWN  FF72            ; Unknown Fxxx instruction
$336    $F1ED   UNKNOWN  F1ED            ; Unknown Fxxx instruction
$338    $BCBF   JP       V0, $CBF        ; Jump to V0 + CBF
$33A    $A87F   LD       I, $87F         ; Load 87F into I
$33C    $0AB0   SYS      $AB0            ; System call to AB0
$33E    $0873   SYS      $873            ; System call to 873
$340    $9AB9   UNKNOWN  $9AB9           ; Unknown 9xxx instruction
$342    $B358   JP       V0, $358        ; Jump to V0 + 358
$344    $D184   DRW      V1, V8, #4      ; Draw 4-byte sprite at V1, V8
$346    $EE9D   UNKNOWN  $EE9D           ; Unknown Exxx instruction
$348    $E132   UNKNOWN  $E132           ; Unknown Exxx instruction
$34A    $F8D9   UNKNOWN  F8D9            ; Unknown Fxxx instruction
$34C    $92D1   UNKNOWN  $92D1           ; Unknown 9xxx instruction
$34E    $E894   UNKNOWN  $E894           ; Unknown Exxx instruction
$350    $CBE3   RND      VB, #E3         ; VB = random & E3
$352    $38BF   SE       V8, #BF         ; Skip if V8 == 191
$354    $771F   ADD      V7, #1F         ; Add 31 to V7
$356    $254B   CALL     $54B            ; Call subroutine at 54B
$358    $081B   SYS      $81B            ; System call to 81B
$35A    $3CFB   SE       VC, #FB         ; Skip if VC == 251
$35C    $B0B2   JP       V0, $0B2        ; Jump to V0 + 0B2
$35E    $408F   SNE      V0, #8F         ; Skip if V0 != 143
$360    $FCE0   UNKNOWN  FCE0            ; Unknown Fxxx instruction
$362    $7490   ADD      V4, #90         ; Add 144 to V4
$364    $5E95   UNKNOWN  $5E95           ; Unknown 5xxx instruction
$366    $228D   CALL     $28D            ; Call subroutine at 28D
$368    $A287   LD       I, $287         ; Load 287 into I
$36A    $8C8C   UNKNOWN  8C8C            ; Unknown 8xxx instruction
$36C    $C96F   RND      V9, #6F         ; V9 = random & 6F
$36E    $8E9D   UNKNOWN  8E9D            ; Unknown 8xxx instruction
$370    $6EA8   LD       VE, #A8         ; Load 168 into VE
$372    $947B   UNKNOWN  $947B           ; Unknown 9xxx instruction
$374    $ED0B   UNKNOWN  $ED0B           ; Unknown Exxx instruction
$376    $B7B9   JP       V0, $7B9        ; Jump to V0 + 7B9
$378    $51A6   UNKNOWN  $51A6           ; Unknown 5xxx instruction
$37A    $DBCD   DRW      VB, VC, #D      ; Draw 13-byte sprite at VB, VC
$37C    $79C4   ADD      V9, #C4         ; Add 196 to V9
$37E    $6760   LD       V7, #60         ; Load 96 into V7
$380    $1F67   JP       $F67            ; Jump to F67
$382    $B431   JP       V0, $431        ; Jump to V0 + 431
$384    $846A   UNKNOWN  846A            ; Unknown 8xxx instruction
$386    $943A   UNKNOWN  $943A           ; Unknown 9xxx instruction
$388    $B6AA   JP       V0, $6AA        ; Jump to V0 + 6AA
$38A    $AA41   LD       I, $A41         ; Load A41 into I
$38C    $485D   SNE      V8, #5D         ; Skip if V8 != 93
$38E    $C71A   RND      V7, #1A         ; V7 = random & 1A
$390    $8748   UNKNOWN  8748            ; Unknown 8xxx instruction
$392    $A4E6   LD       I, $4E6         ; Load 4E6 into I
$394    $83AA   UNKNOWN  83AA            ; Unknown 8xxx instruction
$396    $6943   LD       V9, #43         ; Load 67 into V9
$398    $152C   JP       $52C            ; Jump to 52C
$39A    $6E8F   LD       VE, #8F         ; Load 143 into VE
$39C    $9BCC   UNKNOWN  $9BCC           ; Unknown 9xxx instruction
$39E    $50E9   UNKNOWN  $50E9           ; Unknown 5xxx instruction
$3A0    $4FCC   SNE      VF, #CC         ; Skip if VF != 204
$3A2    $C66B   RND      V6, #6B         ; V6 = random & 6B
$3A4    $6C31   LD       VC, #31         ; Load 49 into VC
$3A6    $FE8E   UNKNOWN  FE8E            ; Unknown Fxxx instruction
$3A8    $6E7F   LD       VE, #7F         ; Load 127 into VE
$3AA    $DACB   DRW      VA, VC, #B      ; Draw 11-byte sprite at VA, VC
$3AC    $9FC7   UNKNOWN  $9FC7           ; Unknown 9xxx instruction
$3AE    $9F5C   UNKNOWN  $9F5C           ; Unknown 9xxx instruction
$3B0    $DD64   DRW      VD, V6, #4      ; Draw 4-byte sprite at VD, V6
$3B2    $2C8A   CALL     $C8A            ; Call subroutine at C8A
$3B4    $85C1   OR       V5, VC          ; V5 |= VC
$3B6    $B991   JP       V0, $991        ; Jump to V0 + 991
$3B8    $D670   DRW      V6, V7, #0      ; Draw 0-byte sprite at V6, V7
$3BA    $0DFA   SYS      $DFA            ; System call to DFA
$3BC    $0CB1   SYS      $CB1            ; System call to CB1
$3BE    $8051   OR       V0, V5          ; V0 |= V5
$3C0    $A1C4   LD       I, $1C4         ; Load 1C4 into I
$3C2    $3158   SE       V1, #58         ; Skip if V1 == 88
$3C4    $C9E1   RND      V9, #E1         ; V9 = random & E1
$3C6    $0DAD   SYS      $DAD            ; System call to DAD
$3C8    $93BF   UNKNOWN  $93BF           ; Unknown 9xxx instruction
$3CA    $4649   SNE      V6, #49         ; Skip if V6 != 73
$3CC    $626C   LD       V2, #6C         ; Load 108 into V2
$3CE    $B19D   JP       V0, $19D        ; Jump to V0 + 19D
$3D0    $903F   UNKNOWN  $903F           ; Unknown 9xxx instruction
$3D2    $3D28   SE       VD, #28         ; Skip if VD == 40
$3D4    $D70D   DRW      V7, V0, #D      ; Draw 13-byte sprite at V7, V0
$3D6    $CFF1   RND      VF, #F1         ; VF = random & F1
$3D8    $8399   UNKNOWN  8399            ; Unknown 8xxx instruction
$3DA    $C9BF   RND      V9, #BF         ; V9 = random & BF
$3DC    $D181   DRW      V1, V8, #1      ; Draw 1-byte sprite at V1, V8
$3DE    $8EDE   SHL      VE              ; VE <<= 1, VF = MSB
$3E0    $F0D2   UNKNOWN  F0D2            ; Unknown Fxxx instruction
$3E2    $8C3B   UNKNOWN  8C3B            ; Unknown 8xxx instruction
$3E4    $EFC4   UNKNOWN  $EFC4           ; Unknown Exxx instruction
$3E6    $B339   JP       V0, $339        ; Jump to V0 + 339
$3E8    $A135   LD       I, $135         ; Load 135 into I
$3EA    $907E   UNKNOWN  $907E           ; Unknown 9xxx instruction
$3EC    $0AC7   SYS      $AC7            ; System call to AC7
$3EE    $6102   LD       V1, #02         ; Load 2 into V1
$3F0    $7069   ADD      V0, #69         ; Add 105 to V0
$3F2    $70DA   ADD      V0, #DA         ; Add 218 to V0
$3F4    $9FFD   UNKNOWN  $9FFD           ; Unknown 9xxx instruction
$3F6    $E3E2   UNKNOWN  $E3E2           ; Unknown Exxx instruction
$3F8    $97C8   UNKNOWN  $97C8           ; Unknown 9xxx instruction
$3FA    $608D   LD       V0, #8D         ; Load 141 into V0
$3FC    $4A59   SNE      VA, #59         ; Skip if VA != 89
$3FE    $9562   UNKNOWN  $9562           ; Unknown 9xxx instruction
$400    $8098   UNKNOWN  8098            ; Unknown 8xxx instruction
$402    $44D8   SNE      V4, #D8         ; Skip if V4 != 216
$404    $6C30   LD       VC, #30         ; Load 48 into VC
$406    $01C9   SYS      $1C9            ; System call to 1C9
$408    $7686   ADD      V6, #86         ; Add 134 to V6
$40A    $A00A   LD       I, $00A         ; Load 00A into I
$40C    $3B7F   SE       VB, #7F         ; Skip if VB == 127
$40E    $29FF   CALL     $9FF            ; Call subroutine at 9FF
$410    $3FFA   SE       VF, #FA         ; Skip if VF == 250
$412    $64D7   LD       V4, #D7         ; Load 215 into V4
$414    $4A5D   SNE      VA, #5D         ; Skip if VA != 93
$416    $FFB9   UNKNOWN  FFB9            ; Unknown Fxxx instruction
$418    $0130   SYS      $130            ; System call to 130
$41A    $F471   UNKNOWN  F471            ; Unknown Fxxx instruction
$41C    $6529   LD       V5, #29         ; Load 41 into V5
$41E    $66EF   LD       V6, #EF         ; Load 239 into V6
$420    $796B   ADD      V9, #6B         ; Add 107 to V9
$422    $2B17   CALL     $B17            ; Call subroutine at B17
$424    $C87F   RND      V8, #7F         ; V8 = random & 7F
$426    $62B4   LD       V2, #B4         ; Load 180 into V2
$428    $8B49   UNKNOWN  8B49            ; Unknown 8xxx instruction
$42A    $A103   LD       I, $103         ; Load 103 into I
$42C    $4ACB   SNE      VA, #CB         ; Skip if VA != 203
$42E    $C255   RND      V2, #55         ; V2 = random & 55
$430    $0F23   SYS      $F23            ; System call to F23
$432    $BCA0   JP       V0, $CA0        ; Jump to V0 + CA0
$434    $54AA   UNKNOWN  $54AA           ; Unknown 5xxx instruction
$436    $27AE   CALL     $7AE            ; Call subroutine at 7AE
$438    $61C4   LD       V1, #C4         ; Load 196 into V1
$43A    $D8BF   DRW      V8, VB, #F      ; Draw 15-byte sprite at V8, VB
$43C    $8A2D   UNKNOWN  8A2D            ; Unknown 8xxx instruction
$43E    $9285   UNKNOWN  $9285           ; Unknown 9xxx instruction
$440    $E814   UNKNOWN  $E814           ; Unknown Exxx instruction
$442    $48E6   SNE      V8, #E6         ; Skip if V8 != 230
$444    $7813   ADD      V8, #13         ; Add 19 to V8
$446    $971F   UNKNOWN  $971F           ; Unknown 9xxx instruction
$448    $C123   RND      V1, #23         ; V1 = random & 23
$44A    $E9FF   UNKNOWN  $E9FF           ; Unknown Exxx instruction
$44C    $F710   UNKNOWN  F710            ; Unknown Fxxx instruction
$44E    $665B   LD       V6, #5B         ; Load 91 into V6
$450    $0895   SYS      $895            ; System call to 895
$452    $3E7F   SE       VE, #7F         ; Skip if VE == 127
$454    $FCA3   UNKNOWN  FCA3            ; Unknown Fxxx instruction
$456    $7DCA   ADD      VD, #CA         ; Add 202 to VD
$458    $EFC3   UNKNOWN  $EFC3           ; Unknown Exxx instruction
$45A    $28E4   CALL     $8E4            ; Call subroutine at 8E4
$45C    $DE10   DRW      VE, V1, #0      ; Draw 0-byte sprite at VE, V1
$45E    $B2A6   JP       V0, $2A6        ; Jump to V0 + 2A6
$460    $49B2   SNE      V9, #B2         ; Skip if V9 != 178
$462    $FF8D   UNKNOWN  FF8D            ; Unknown Fxxx instruction
$464    $487F   SNE      V8, #7F         ; Skip if V8 != 127
$466    $8931   OR       V9, V3          ; V9 |= V3
$468    $FC5F   UNKNOWN  FC5F            ; Unknown Fxxx instruction
$46A    $F628   UNKNOWN  F628            ; Unknown Fxxx instruction
$46C    $88DF   UNKNOWN  88DF            ; Unknown 8xxx instruction
$46E    $A638   LD       I, $638         ; Load 638 into I
$470    $AB9E   LD       I, $B9E         ; Load B9E into I
$472    $82A3   XOR      V2, VA          ; V2 ^= VA
$474    $05E5   SYS      $5E5            ; System call to 5E5
$476    $32B7   SE       V2, #B7         ; Skip if V2 == 183
$478    $EFFA   UNKNOWN  $EFFA           ; Unknown Exxx instruction
$47A    $6283   LD       V2, #83         ; Load 131 into V2
$47C    $4C37   SNE      VC, #37         ; Skip if VC != 55
$47E    $5DC5   UNKNOWN  $5DC5           ; Unknown 5xxx instruction
$480    $4619   SNE      V6, #19         ; Skip if V6 != 25
$482    $3C51   SE       VC, #51         ; Skip if VC == 81
$484    $69B7   LD       V9, #B7         ; Load 183 into V9
$486    $F8C0   UNKNOWN  F8C0            ; Unknown Fxxx instruction
$488    $320F   SE       V2, #0F         ; Skip if V2 == 15
$48A    $73B2   ADD      V3, #B2         ; Add 178 to V3
$48C    $423F   SNE      V2, #3F         ; Skip if V2 != 63
$48E    $218F   CALL     $18F            ; Call subroutine at 18F
$490    $D5FF   DRW      V5, VF, #F      ; Draw 15-byte sprite at V5, VF
$492    $F83E   UNKNOWN  F83E            ; Unknown Fxxx instruction
$494    $F23D   UNKNOWN  F23D            ; Unknown Fxxx instruction
$496    $E89E   SKP      V8              ; Skip if key V8 pressed
$498    $51AC   UNKNOWN  $51AC           ; Unknown 5xxx instruction
$49A    $4467   SNE      V4, #67         ; Skip if V4 != 103
$49C    $10A5   JP       $0A5            ; Jump to 0A5
$49E    $B87B   JP       V0, $87B        ; Jump to V0 + 87B
$4A0    $47B8   SNE      V7, #B8         ; Skip if V7 != 184
$4A2    $029B   SYS      $29B            ; System call to 29B
$4A4    $BD6E   JP       V0, $D6E        ; Jump to V0 + D6E
$4A6    $8669   UNKNOWN  8669            ; Unknown 8xxx instruction
$4A8    $8B50   LD       VB, V5          ; VB = V5
$4AA    $41C8   SNE      V1, #C8         ; Skip if V1 != 200
$4AC    $1AC5   JP       $AC5            ; Jump to AC5
$4AE    $5036   UNKNOWN  $5036           ; Unknown 5xxx instruction
$4B0    $141F   JP       $41F            ; Jump to 41F
$4B2    $4291   SNE      V2, #91         ; Skip if V2 != 145
$4B4    $B946   JP       V0, $946        ; Jump to V0 + 946
$4B6    $1BB3   JP       $BB3            ; Jump to BB3
$4B8    $C774   RND      V7, #74         ; V7 = random & 74
$4BA    $51FE   UNKNOWN  $51FE           ; Unknown 5xxx instruction
$4BC    $83C4   ADD      V3, VC          ; V3 += VC, VF = carry
$4BE    $6693   LD       V6, #93         ; Load 147 into V6
$4C0    $909C   UNKNOWN  $909C           ; Unknown 9xxx instruction
$4C2    $8064   ADD      V0, V6          ; V0 += V6, VF = carry
$4C4    $F713   UNKNOWN  F713            ; Unknown Fxxx instruction
$4C6    $FA96   UNKNOWN  FA96            ; Unknown Fxxx instruction
$4C8    $2686   CALL     $686            ; Call subroutine at 686
$4CA    $1BB9   JP       $BB9            ; Jump to BB9
$4CC    $2A55   CALL     $A55            ; Call subroutine at A55
$4CE    $6119   LD       V1, #19         ; Load 25 into V1
$4D0    $EC6A   UNKNOWN  $EC6A           ; Unknown Exxx instruction
$4D2    $749D   ADD      V4, #9D         ; Add 157 to V4
$4D4    $90C0   SNE      V0, VC          ; Skip if V0 != VC
$4D6    $47F2   SNE      V7, #F2         ; Skip if V7 != 242
$4D8    $E5F2   UNKNOWN  $E5F2           ; Unknown Exxx instruction
$4DA    $1A5A   JP       $A5A            ; Jump to A5A
$4DC    $737D   ADD      V3, #7D         ; Add 125 to V3
$4DE    $F5ED   UNKNOWN  F5ED            ; Unknown Fxxx instruction
$4E0    $2A20   CALL     $A20            ; Call subroutine at A20
$4E2    $36B2   SE       V6, #B2         ; Skip if V6 == 178
$4E4    $3491   SE       V4, #91         ; Skip if V4 == 145
$4E6    $35F3   SE       V5, #F3         ; Skip if V5 == 243
$4E8    $D447   DRW      V4, V4, #7      ; Draw 7-byte sprite at V4, V4
$4EA    $3805   SE       V8, #05         ; Skip if V8 == 5
$4EC    $B1EF   JP       V0, $1EF        ; Jump to V0 + 1EF
$4EE    $8692   AND      V6, V9          ; V6 &= V9
$4F0    $5128   UNKNOWN  $5128           ; Unknown 5xxx instruction
$4F2    $6B64   LD       VB, #64         ; Load 100 into VB
$4F4    $7494   ADD      V4, #94         ; Add 148 to V4
$4F6    $16FD   JP       $6FD            ; Jump to 6FD
$4F8    $82FE   SHL      V2              ; V2 <<= 1, VF = MSB
$4FA    $3812   SE       V8, #12         ; Skip if V8 == 18
$4FC    $A912   LD       I, $912         ; Load 912 into I
$4FE    $D153   DRW      V1, V5, #3      ; Draw 3-byte sprite at V1, V5
$500    $5087   UNKNOWN  $5087           ; Unknown 5xxx instruction
$502    $754A   ADD      V5, #4A         ; Add 74 to V5
$504    $2401   CALL     $401            ; Call subroutine at 401
$506    $04A4   SYS      $4A4            ; System call to 4A4
$508    $8712   AND      V7, V1          ; V7 &= V1
$50A    $1662   JP       $662            ; Jump to 662
$50C    $BB4C   JP       V0, $B4C        ; Jump to V0 + B4C
$50E    $4FBA   SNE      VF, #BA         ; Skip if VF != 186
$510    $9370   SNE      V3, V7          ; Skip if V3 != V7
$512    $037A   SYS      $37A            ; System call to 37A
$514    $D936   DRW      V9, V3, #6      ; Draw 6-byte sprite at V9, V3
$516    $14CC   JP       $4CC            ; Jump to 4CC
$518    $AA18   LD       I, $A18         ; Load A18 into I
$51A    $8236   SHR      V2              ; V2 >>= 1, VF = LSB
$51C    $5A4F   UNKNOWN  $5A4F           ; Unknown 5xxx instruction
$51E    $EB8D   UNKNOWN  $EB8D           ; Unknown Exxx instruction
$520    $74BA   ADD      V4, #BA         ; Add 186 to V4
$522    $50B3   UNKNOWN  $50B3           ; Unknown 5xxx instruction
$524    $FF1A   UNKNOWN  FF1A            ; Unknown Fxxx instruction
$526    $BAD2   JP       V0, $AD2        ; Jump to V0 + AD2
$528    $7AB3   ADD      VA, #B3         ; Add 179 to VA
$52A    $3D83   SE       VD, #83         ; Skip if VD == 131
$52C    $A921   LD       I, $921         ; Load 921 into I
$52E    $2345   CALL     $345            ; Call subroutine at 345
$530    $BAB7   JP       V0, $AB7        ; Jump to V0 + AB7
$532    $1437   JP       $437            ; Jump to 437
$534    $FD3E   UNKNOWN  FD3E            ; Unknown Fxxx instruction
$536    $8AAC   UNKNOWN  8AAC            ; Unknown 8xxx instruction
$538    $8375   SUB      V3, V7          ; V3 -= V7, VF = !borrow
$53A    $774F   ADD      V7, #4F         ; Add 79 to V7
$53C    $82E1   OR       V2, VE          ; V2 |= VE
$53E    $160A   JP       $60A            ; Jump to 60A
$540    $94A4   UNKNOWN  $94A4           ; Unknown 9xxx instruction
$542    $0624   SYS      $624            ; System call to 624
$544    $3BFE   SE       VB, #FE         ; Skip if VB == 254
$546    $F407   LD       V4, DT          ; V4 = delay timer
$548    $E14D   UNKNOWN  $E14D           ; Unknown Exxx instruction
$54A    $37CB   SE       V7, #CB         ; Skip if V7 == 203
$54C    $DE56   DRW      VE, V5, #6      ; Draw 6-byte sprite at VE, V5
$54E    $8C09   UNKNOWN  8C09            ; Unknown 8xxx instruction
$550    $5EF2   UNKNOWN  $5EF2           ; Unknown 5xxx instruction
$552    $993B   UNKNOWN  $993B           ; Unknown 9xxx instruction
$554    $E64D   UNKNOWN  $E64D           ; Unknown Exxx instruction
$556    $D8C9   DRW      V8, VC, #9      ; Draw 9-byte sprite at V8, VC
$558    $44B3   SNE      V4, #B3         ; Skip if V4 != 179
$55A    $DB51   DRW      VB, V5, #1      ; Draw 1-byte sprite at VB, V5
$55C    $4538   SNE      V5, #38         ; Skip if V5 != 56
$55E    $5A31   UNKNOWN  $5A31           ; Unknown 5xxx instruction
$560    $ECBC   UNKNOWN  $ECBC           ; Unknown Exxx instruction
$562    $A9E1   LD       I, $9E1         ; Load 9E1 into I
$564    $98D4   UNKNOWN  $98D4           ; Unknown 9xxx instruction
$566    $C739   RND      V7, #39         ; V7 = random & 39
$568    $C0C5   RND      V0, #C5         ; V0 = random & C5
$56A    $959A   UNKNOWN  $959A           ; Unknown 9xxx instruction
$56C    $50CB   UNKNOWN  $50CB           ; Unknown 5xxx instruction
$56E    $107F   JP       $07F            ; Jump to 07F
$570    $1E6C   JP       $E6C            ; Jump to E6C
$572    $33EE   SE       V3, #EE         ; Skip if V3 == 238
$574    $ACA0   LD       I, $CA0         ; Load CA0 into I
$576    $0E4A   SYS      $E4A            ; System call to E4A
$578    $300E   SE       V0, #0E         ; Skip if V0 == 14
$57A    $1157   JP       $157            ; Jump to 157
$57C    $87F4   ADD      V7, VF          ; V7 += VF, VF = carry
$57E    $6F45   LD       VF, #45         ; Load 69 into VF
$580    $3689   SE       V6, #89         ; Skip if V6 == 137
$582    $1867   JP       $867            ; Jump to 867
$584    $9037   UNKNOWN  $9037           ; Unknown 9xxx instruction
$586    $D691   DRW      V6, V9, #1      ; Draw 1-byte sprite at V6, V9
$588    $6F10   LD       VF, #10         ; Load 16 into VF
$58A    $B275   JP       V0, $275        ; Jump to V0 + 275
$58C    $0795   SYS      $795            ; System call to 795
$58E    $BD64   JP       V0, $D64        ; Jump to V0 + D64
$590    $D25E   DRW      V2, V5, #E      ; Draw 14-byte sprite at V2, V5
$592    $5793   UNKNOWN  $5793           ; Unknown 5xxx instruction
$594    $AE18   LD       I, $E18         ; Load E18 into I
$596    $6980   LD       V9, #80         ; Load 128 into V9
$598    $C9B4   RND      V9, #B4         ; V9 = random & B4
$59A    $38B0   SE       V8, #B0         ; Skip if V8 == 176
$59C    $9A84   UNKNOWN  $9A84           ; Unknown 9xxx instruction
$59E    $7A80   ADD      VA, #80         ; Add 128 to VA
$5A0    $4112   SNE      V1, #12         ; Skip if V1 != 18
$5A2    $4FDF   SNE      VF, #DF         ; Skip if VF != 223
$5A4    $D192   DRW      V1, V9, #2      ; Draw 2-byte sprite at V1, V9
$5A6    $FA1B   UNKNOWN  FA1B            ; Unknown Fxxx instruction
$5A8    $E354   UNKNOWN  $E354           ; Unknown Exxx instruction
$5AA    $893F   UNKNOWN  893F            ; Unknown 8xxx instruction
$5AC    $2432   CALL     $432            ; Call subroutine at 432
$5AE    $9B96   UNKNOWN  $9B96           ; Unknown 9xxx instruction
$5B0    $FD35   UNKNOWN  FD35            ; Unknown Fxxx instruction
$5B2    $CF1E   RND      VF, #1E         ; VF = random & 1E
$5B4    $DC57   DRW      VC, V5, #7      ; Draw 7-byte sprite at VC, V5
$5B6    $8BEA   UNKNOWN  8BEA            ; Unknown 8xxx instruction
$5B8    $75E1   ADD      V5, #E1         ; Add 225 to V5
$5BA    $675E   LD       V7, #5E         ; Load 94 into V7
$5BC    $240E   CALL     $40E            ; Call subroutine at 40E
$5BE    $2249   CALL     $249            ; Call subroutine at 249
$5C0    $3F22   SE       VF, #22         ; Skip if VF == 34
$5C2    $19FE   JP       $9FE            ; Jump to 9FE
$5C4    $1010   JP       $010            ; Jump to 010
$5C6    $C5F8   RND      V5, #F8         ; V5 = random & F8
$5C8    $0236   SYS      $236            ; System call to 236
$5CA    $3A9A   SE       VA, #9A         ; Skip if VA == 154
$5CC    $B874   JP       V0, $874        ; Jump to V0 + 874
$5CE    $CE00   RND      VE, #00         ; VE = random & 00
$5D0    $939D   UNKNOWN  $939D           ; Unknown 9xxx instruction
$5D2    $199B   JP       $99B            ; Jump to 99B
$5D4    $8421   OR       V4, V2          ; V4 |= V2
$5D6    $F2F3   UNKNOWN  F2F3            ; Unknown Fxxx instruction
$5D8    $540A   UNKNOWN  $540A           ; Unknown 5xxx instruction
$5DA    $CE1B   RND      VE, #1B         ; VE = random & 1B
$5DC    $F9B1   UNKNOWN  F9B1            ; Unknown Fxxx instruction
$5DE    $C463   RND      V4, #63         ; V4 = random & 63
$5E0    $F32C   UNKNOWN  F32C            ; Unknown Fxxx instruction
$5E2    $F033   LD       B, V0           ; Store BCD of V0 at I, I+1, I+2
$5E4    $141E   JP       $41E            ; Jump to 41E
$5E6    $23A0   CALL     $3A0            ; Call subroutine at 3A0
$5E8    $CBC6   RND      VB, #C6         ; VB = random & C6
$5EA    $7BD5   ADD      VB, #D5         ; Add 213 to VB
$5EC    $5825   UNKNOWN  $5825           ; Unknown 5xxx instruction
$5EE    $E900   UNKNOWN  $E900           ; Unknown Exxx instruction
$5F0    $5700   SE       V7, V0          ; Skip if V7 == V0
$5F2    $A8AF   LD       I, $8AF         ; Load 8AF into I
$5F4    $7646   ADD      V6, #46         ; Add 70 to V6
$5F6    $59DE   UNKNOWN  $59DE           ; Unknown 5xxx instruction
$5F8    $5D61   UNKNOWN  $5D61           ; Unknown 5xxx instruction
$5FA    $F9D9   UNKNOWN  F9D9            ; Unknown Fxxx instruction
$5FC    $2DD0   CALL     $DD0            ; Call subroutine at DD0
$5FE    $7672   ADD      V6, #72         ; Add 114 to V6
$600    $A739   LD       I, $739         ; Load 739 into I
$602    $DEF3   DRW      VE, VF, #3      ; Draw 3-byte sprite at VE, VF
$604    $1543   JP       $543            ; Jump to 543
$606    $8D74   ADD      VD, V7          ; VD += V7, VF = carry
$608    $938F   UNKNOWN  $938F           ; Unknown 9xxx instruction
$60A    $5CCB   UNKNOWN  $5CCB           ; Unknown 5xxx instruction
$60C    $D7C7   DRW      V7, VC, #7      ; Draw 7-byte sprite at V7, VC
$60E    $466B   SNE      V6, #6B         ; Skip if V6 != 107
$610    $D5D3   DRW      V5, VD, #3      ; Draw 3-byte sprite at V5, VD
$612    $D71E   DRW      V7, V1, #E      ; Draw 14-byte sprite at V7, V1
$614    $38DC   SE       V8, #DC         ; Skip if V8 == 220
$616    $978B   UNKNOWN  $978B           ; Unknown 9xxx instruction
$618    $2578   CALL     $578            ; Call subroutine at 578
$61A    $BB1B   JP       V0, $B1B        ; Jump to V0 + B1B
$61C    $947C   UNKNOWN  $947C           ; Unknown 9xxx instruction
$61E    $F95A   UNKNOWN  F95A            ; Unknown Fxxx instruction
$620    $BDC9   JP       V0, $DC9        ; Jump to V0 + DC9
$622    $1749   JP       $749            ; Jump to 749
$624    $34E4   SE       V4, #E4         ; Skip if V4 == 228
$626    $5AFD   UNKNOWN  $5AFD           ; Unknown 5xxx instruction
$628    $D041   DRW      V0, V4, #1      ; Draw 1-byte sprite at V0, V4
$62A    $66D9   LD       V6, #D9         ; Load 217 into V6
$62C    $27C6   CALL     $7C6            ; Call subroutine at 7C6
$62E    $06E9   SYS      $6E9            ; System call to 6E9
$630    $3993   SE       V9, #93         ; Skip if V9 == 147
$632    $C24F   RND      V2, #4F         ; V2 = random & 4F
$634    $5637   UNKNOWN  $5637           ; Unknown 5xxx instruction
$636    $0C3F   SYS      $C3F            ; System call to C3F
$638    $8D4D   UNKNOWN  8D4D            ; Unknown 8xxx instruction
$63A    $FBA9   UNKNOWN  FBA9            ; Unknown Fxxx instruction
$63C    $AA6C   LD       I, $A6C         ; Load A6C into I
$63E    $17E8   JP       $7E8            ; Jump to 7E8
$640    $C3A4   RND      V3, #A4         ; V3 = random & A4
$642    $8617   SUBN     V6, V1          ; V6 = V1 - V6, VF = !borrow
$644    $A25D   LD       I, $25D         ; Load 25D into I
$646    $3E7E   SE       VE, #7E         ; Skip if VE == 126
$648    $DE4A   DRW      VE, V4, #A      ; Draw 10-byte sprite at VE, V4
$64A    $75FC   ADD      V5, #FC         ; Add 252 to V5
$64C    $E831   UNKNOWN  $E831           ; Unknown Exxx instruction
$64E    $A9D8   LD       I, $9D8         ; Load 9D8 into I
$650    $2FC1   CALL     $FC1            ; Call subroutine at FC1
$652    $E30E   UNKNOWN  $E30E           ; Unknown Exxx instruction
$654    $521F   UNKNOWN  $521F           ; Unknown 5xxx instruction
$656    $D079   DRW      V0, V7, #9      ; Draw 9-byte sprite at V0, V7
$658    $9B58   UNKNOWN  $9B58           ; Unknown 9xxx instruction
$65A    $3C94   SE       VC, #94         ; Skip if VC == 148
$65C    $ACF6   LD       I, $CF6         ; Load CF6 into I
$65E    $0D71   SYS      $D71            ; System call to D71
$660    $AEE4   LD       I, $EE4         ; Load EE4 into I
$662    $F1B5   UNKNOWN  F1B5            ; Unknown Fxxx instruction
$664    $81B3   XOR      V1, VB          ; V1 ^= VB
$666    $E4EF   UNKNOWN  $E4EF           ; Unknown Exxx instruction
$668    $1E04   JP       $E04            ; Jump to E04
$66A    $48A6   SNE      V8, #A6         ; Skip if V8 != 166
$66C    $0B88   SYS      $B88            ; System call to B88
$66E    $C770   RND      V7, #70         ; V7 = random & 70
$670    $B342   JP       V0, $342        ; Jump to V0 + 342
$672    $282B   CALL     $82B            ; Call subroutine at 82B
$674    $33AE   SE       V3, #AE         ; Skip if V3 == 174
$676    $61F5   LD       V1, #F5         ; Load 245 into V1
$678    $2CF3   CALL     $CF3            ; Call subroutine at CF3
$67A    $4C87   SNE      VC, #87         ; Skip if VC != 135
$67C    $AF06   LD       I, $F06         ; Load F06 into I
$67E    $1DB9   JP       $DB9            ; Jump to DB9
$680    $E58A   UNKNOWN  $E58A           ; Unknown Exxx instruction
$682    $DF98   DRW      VF, V9, #8      ; Draw 8-byte sprite at VF, V9
$684    $026F   SYS      $26F            ; System call to 26F
$686    $97AA   UNKNOWN  $97AA           ; Unknown 9xxx instruction
$688    $3C8F   SE       VC, #8F         ; Skip if VC == 143
$68A    $E25F   UNKNOWN  $E25F           ; Unknown Exxx instruction
$68C    $C373   RND      V3, #73         ; V3 = random & 73
$68E    $CFE1   RND      VF, #E1         ; VF = random & E1
$690    $53F8   UNKNOWN  $53F8           ; Unknown 5xxx instruction
$692    $CBE0   RND      VB, #E0         ; VB = random & E0
$694    $E482   UNKNOWN  $E482           ; Unknown Exxx instruction
$696    $42ED   SNE      V2, #ED         ; Skip if V2 != 237
$698    $3530   SE       V5, #30         ; Skip if V5 == 48
$69A    $A4C5   LD       I, $4C5         ; Load 4C5 into I
$69C    $4F82   SNE      VF, #82         ; Skip if VF != 130
$69E    $8958   UNKNOWN  8958            ; Unknown 8xxx instruction
$6A0    $8194   ADD      V1, V9          ; V1 += V9, VF = carry
$6A2    $A463   LD       I, $463         ; Load 463 into I
$6A4    $4A15   SNE      VA, #15         ; Skip if VA != 21
$6A6    $D991   DRW      V9, V9, #1      ; Draw 1-byte sprite at V9, V9
$6A8    $E8FB   UNKNOWN  $E8FB           ; Unknown Exxx instruction
$6AA    $E91A   UNKNOWN  $E91A           ; Unknown Exxx instruction
$6AC    $9ABD   UNKNOWN  $9ABD           ; Unknown 9xxx instruction
$6AE    $EFE5   UNKNOWN  $EFE5           ; Unknown Exxx instruction
$6B0    $25C0   CALL     $5C0            ; Call subroutine at 5C0
$6B2    $93F2   UNKNOWN  $93F2           ; Unknown 9xxx instruction
$6B4    $C41E   RND      V4, #1E         ; V4 = random & 1E
$6B6    $A1AA   LD       I, $1AA         ; Load 1AA into I
$6B8    $0917   SYS      $917            ; System call to 917
$6BA    $FB01   UNKNOWN  FB01            ; Unknown Fxxx instruction
$6BC    $B16D   JP       V0, $16D        ; Jump to V0 + 16D
$6BE    $09BF   SYS      $9BF            ; System call to 9BF
$6C0    $2542   CALL     $542            ; Call subroutine at 542
$6C2    $24E1   CALL     $4E1            ; Call subroutine at 4E1
$6C4    $2934   CALL     $934            ; Call subroutine at 934
$6C6    $3742   SE       V7, #42         ; Skip if V7 == 66
$6C8    $9C53   UNKNOWN  $9C53           ; Unknown 9xxx instruction
$6CA    $72C7   ADD      V2, #C7         ; Add 199 to V2
$6CC    $BA19   JP       V0, $A19        ; Jump to V0 + A19
$6CE    $4617   SNE      V6, #17         ; Skip if V6 != 23
$6D0    $FEAB   UNKNOWN  FEAB            ; Unknown Fxxx instruction
$6D2    $CF2E   RND      VF, #2E         ; VF = random & 2E
$6D4    $B2CB   JP       V0, $2CB        ; Jump to V0 + 2CB
$6D6    $0054   SYS      $054            ; System call to 054
$6D8    $329B   SE       V2, #9B         ; Skip if V2 == 155
$6DA    $ED6A   UNKNOWN  $ED6A           ; Unknown Exxx instruction
$6DC    $C008   RND      V0, #08         ; V0 = random & 08
$6DE    $D5B7   DRW      V5, VB, #7      ; Draw 7-byte sprite at V5, VB
$6E0    $F891   UNKNOWN  F891            ; Unknown Fxxx instruction
$6E2    $6975   LD       V9, #75         ; Load 117 into V9
$6E4    $EE1C   UNKNOWN  $EE1C           ; Unknown Exxx instruction
$6E6    $7666   ADD      V6, #66         ; Add 102 to V6
$6E8    $220B   CALL     $20B            ; Call subroutine at 20B
$6EA    $73E8   ADD      V3, #E8         ; Add 232 to V3
$6EC    $542B   UNKNOWN  $542B           ; Unknown 5xxx instruction
$6EE    $CEF0   RND      VE, #F0         ; VE = random & F0
$6F0    $6729   LD       V7, #29         ; Load 41 into V7
$6F2    $16CF   JP       $6CF            ; Jump to 6CF
$6F4    $CF09   RND      VF, #09         ; VF = random & 09
$6F6    $5968   UNKNOWN  $5968           ; Unknown 5xxx instruction
$6F8    $1CFD   JP       $CFD            ; Jump to CFD
$6FA    $F250   UNKNOWN  F250            ; Unknown Fxxx instruction
$6FC    $39D7   SE       V9, #D7         ; Skip if V9 == 215
$6FE    $225A   CALL     $25A            ; Call subroutine at 25A
$700    $2EB4   CALL     $EB4            ; Call subroutine at EB4
$702    $852E   SHL      V5              ; V5 <<= 1, VF = MSB
$704    $644A   LD       V4, #4A         ; Load 74 into V4
$706    $A32F   LD       I, $32F         ; Load 32F into I
$708    $6046   LD       V0, #46         ; Load 70 into V0
$70A    $A88F   LD       I, $88F         ; Load 88F into I
$70C    $2C9F   CALL     $C9F            ; Call subroutine at C9F
$70E    $49FA   SNE      V9, #FA         ; Skip if V9 != 250
$710    $276C   CALL     $76C            ; Call subroutine at 76C
$712    $DC2A   DRW      VC, V2, #A      ; Draw 10-byte sprite at VC, V2
$714    $5350   SE       V3, V5          ; Skip if V3 == V5
$716    $031A   SYS      $31A            ; System call to 31A
$718    $F42A   UNKNOWN  F42A            ; Unknown Fxxx instruction
$71A    $D524   DRW      V5, V2, #4      ; Draw 4-byte sprite at V5, V2
$71C    $FBB6   UNKNOWN  FBB6            ; Unknown Fxxx instruction
$71E    $3565   SE       V5, #65         ; Skip if V5 == 101
$720    $F582   UNKNOWN  F582            ; Unknown Fxxx instruction
$722    $97E4   UNKNOWN  $97E4           ; Unknown 9xxx instruction
$724    $11A6   JP       $1A6            ; Jump to 1A6
$726    $1006   JP       $006            ; Jump to 006
$728    $8C68   UNKNOWN  8C68            ; Unknown 8xxx instruction
$72A    $66B6   LD       V6, #B6         ; Load 182 into V6
$72C    $D91F   DRW      V9, V1, #F      ; Draw 15-byte sprite at V9, V1
$72E    $23F1   CALL     $3F1            ; Call subroutine at 3F1
$730    $8FDF   UNKNOWN  8FDF            ; Unknown 8xxx instruction
$732    $7DFB   ADD      VD, #FB         ; Add 251 to VD
$734    $2C2A   CALL     $C2A            ; Call subroutine at C2A
$736    $EDE0   UNKNOWN  $EDE0           ; Unknown Exxx instruction
$738    $B0ED   JP       V0, $0ED        ; Jump to V0 + 0ED
$73A    $CEF7   RND      VE, #F7         ; VE = random & F7
$73C    $4B47   SNE      VB, #47         ; Skip if VB != 71
$73E    $BF6D   JP       V0, $F6D        ; Jump to V0 + F6D
$740    $AE16   LD       I, $E16         ; Load E16 into I
$742    $72DB   ADD      V2, #DB         ; Add 219 to V2
$744    $0087   SYS      $087            ; System call to 087
$746    $CD4C   RND      VD, #4C         ; VD = random & 4C
$748    $0697   SYS      $697            ; System call to 697
$74A    $CAB6   RND      VA, #B6         ; VA = random & B6
$74C    $B787   JP       V0, $787        ; Jump to V0 + 787
$74E    $F497   UNKNOWN  F497            ; Unknown Fxxx instruction
$750    $5F93   UNKNOWN  $5F93           ; Unknown 5xxx instruction
$752    $4AF2   SNE      VA, #F2         ; Skip if VA != 242
$754    $69A3   LD       V9, #A3         ; Load 163 into V9
$756    $B8C1   JP       V0, $8C1        ; Jump to V0 + 8C1
$758    $9E02   UNKNOWN  $9E02           ; Unknown 9xxx instruction
$75A    $A105   LD       I, $105         ; Load 105 into I
$75C    $78C6   ADD      V8, #C6         ; Add 198 to V8
$75E    $D404   DRW      V4, V0, #4      ; Draw 4-byte sprite at V4, V0
$760    $8AD2   AND      VA, VD          ; VA &= VD
$762    $34F8   SE       V4, #F8         ; Skip if V4 == 248
$764    $70D9   ADD      V0, #D9         ; Add 217 to V0
$766    $E9DD   UNKNOWN  $E9DD           ; Unknown Exxx instruction
$768    $BCC7   JP       V0, $CC7        ; Jump to V0 + CC7
$76A    $B675   JP       V0, $675        ; Jump to V0 + 675
$76C    $5303   UNKNOWN  $5303           ; Unknown 5xxx instruction
$76E    $F140   UNKNOWN  F140            ; Unknown Fxxx instruction
$770    $8AEF   UNKNOWN  8AEF            ; Unknown 8xxx instruction
$772    $8149   UNKNOWN  8149            ; Unknown 8xxx instruction
$774    $F2B4   UNKNOWN  F2B4            ; Unknown Fxxx instruction
$776    $838A   UNKNOWN  838A            ; Unknown 8xxx instruction
$778    $4970   SNE      V9, #70         ; Skip if V9 != 112
$77A    $4495   SNE      V4, #95         ; Skip if V4 != 149
$77C    $D8D7   DRW      V8, VD, #7      ; Draw 7-byte sprite at V8, VD
$77E    $7E48   ADD      VE, #48         ; Add 72 to VE
$780    $825C   UNKNOWN  825C            ; Unknown 8xxx instruction
$782    $968D   UNKNOWN  $968D           ; Unknown 9xxx instruction
$784    $44B0   SNE      V4, #B0         ; Skip if V4 != 176
$786    $B6F8   JP       V0, $6F8        ; Jump to V0 + 6F8
$788    $FD4C   UNKNOWN  FD4C            ; Unknown Fxxx instruction
$78A    $AC38   LD       I, $C38         ; Load C38 into I
$78C    $0CAF   SYS      $CAF            ; System call to CAF
$78E    $A60D   LD       I, $60D         ; Load 60D into I
$790    $25DD   CALL     $5DD            ; Call subroutine at 5DD
$792    $D995   DRW      V9, V9, #5      ; Draw 5-byte sprite at V9, V9
$794    $1937   JP       $937            ; Jump to 937
$796    $A0ED   LD       I, $0ED         ; Load 0ED into I
$798    $421A   SNE      V2, #1A         ; Skip if V2 != 26
$79A    $62BD   LD       V2, #BD         ; Load 189 into V2
$79C    $4816   SNE      V8, #16         ; Skip if V8 != 22
$79E    $FA08   UNKNOWN  FA08            ; Unknown Fxxx instruction
$7A0    $82D7   SUBN     V2, VD          ; V2 = VD - V2, VF = !borrow
$7A2    $01D9   SYS      $1D9            ; System call to 1D9
$7A4    $F24C   UNKNOWN  F24C            ; Unknown Fxxx instruction
$7A6    $92A3   UNKNOWN  $92A3           ; Unknown 9xxx instruction
$7A8    $A751   LD       I, $751         ; Load 751 into I
$7AA    $7135   ADD      V1, #35         ; Add 53 to V1
$7AC    $6D3C   LD       VD, #3C         ; Load 60 into VD
$7AE    $4677   SNE      V6, #77         ; Skip if V6 != 119
$7B0    $C3ED   RND      V3, #ED         ; V3 = random & ED
$7B2    $0648   SYS      $648            ; System call to 648
$7B4    $3454   SE       V4, #54         ; Skip if V4 == 84
$7B6    $4E0D   SNE      VE, #0D         ; Skip if VE != 13
$7B8    $C41C   RND      V4, #1C         ; V4 = random & 1C
$7BA    $A05D   LD       I, $05D         ; Load 05D into I
$7BC    $6A98   LD       VA, #98         ; Load 152 into VA
$7BE    $E761   UNKNOWN  $E761           ; Unknown Exxx instruction
$7C0    $B5A4   JP       V0, $5A4        ; Jump to V0 + 5A4
$7C2    $E466   UNKNOWN  $E466           ; Unknown Exxx instruction
$7C4    $8C18   UNKNOWN  8C18            ; Unknown 8xxx instruction
$7C6    $4FD3   SNE      VF, #D3         ; Skip if VF != 211
$7C8    $2352   CALL     $352            ; Call subroutine at 352
$7CA    $D25D   DRW      V2, V5, #D      ; Draw 13-byte sprite at V2, V5
$7CC    $9BB9   UNKNOWN  $9BB9           ; Unknown 9xxx instruction
$7CE    $DEB1   DRW      VE, VB, #1      ; Draw 1-byte sprite at VE, VB
$7D0    $B2DC   JP       V0, $2DC        ; Jump to V0 + 2DC
$7D2    $D967   DRW      V9, V6, #7      ; Draw 7-byte sprite at V9, V6
$7D4    $509D   UNKNOWN  $509D           ; Unknown 5xxx instruction
$7D6    $4F88   SNE      VF, #88         ; Skip if VF != 136
$7D8    $6702   LD       V7, #02         ; Load 2 into V7
$7DA    $5851   UNKNOWN  $5851           ; Unknown 5xxx instruction
$7DC    $B188   JP       V0, $188        ; Jump to V0 + 188
$7DE    $0CC6   SYS      $CC6            ; System call to CC6
$7E0    $1277   JP       $277            ; Jump to 277
$7E2    $C40B   RND      V4, #0B         ; V4 = random & 0B
$7E4    $BE33   JP       V0, $E33        ; Jump to V0 + E33
$7E6    $2FDB   CALL     $FDB            ; Call subroutine at FDB
$7E8    $B81F   JP       V0, $81F        ; Jump to V0 + 81F
$7EA    $1D87   JP       $D87            ; Jump to D87
$7EC    $3C94   SE       VC, #94         ; Skip if VC == 148
$7EE    $3BF8   SE       VB, #F8         ; Skip if VB == 248
$7F0    $5E05   UNKNOWN  $5E05           ; Unknown 5xxx instruction
$7F2    $12B7   JP       $2B7            ; Jump to 2B7
$7F4    $0656   SYS      $656            ; System call to 656
$7F6    $6116   LD       V1, #16         ; Load 22 into V1
$7F8    $2FFA   CALL     $FFA            ; Call subroutine at FFA
$7FA    $54CD   UNKNOWN  $54CD           ; Unknown 5xxx instruction
$7FC    $75FC   ADD      V5, #FC         ; Add 252 to V5
$7FE    $89FD   UNKNOWN  89FD            ; Unknown 8xxx instruction
$800    $38BC   SE       V8, #BC         ; Skip if V8 == 188
$802    $9533   UNKNOWN  $9533           ; Unknown 9xxx instruction
$804    $FF43   UNKNOWN  FF43            ; Unknown Fxxx instruction
$806    $FE68   UNKNOWN  FE68            ; Unknown Fxxx instruction
$808    $40A0   SNE      V0, #A0         ; Skip if V0 != 160
$80A    $4565   SNE      V5, #65         ; Skip if V5 != 101
$80C    $ABD8   LD       I, $BD8         ; Load BD8 into I
$80E    $7A2D   ADD      VA, #2D         ; Add 45 to VA
$810    $C7D8   RND      V7, #D8         ; V7 = random & D8
$812    $904F   UNKNOWN  $904F           ; Unknown 9xxx instruction
$814    $C01C   RND      V0, #1C         ; V0 = random & 1C
$816    $B5F8   JP       V0, $5F8        ; Jump to V0 + 5F8
$818    $0689   SYS      $689            ; System call to 689
$81A    $966B   UNKNOWN  $966B           ; Unknown 9xxx instruction
$81C    $E350   UNKNOWN  $E350           ; Unknown Exxx instruction
$81E    $A400   LD       I, $400         ; Load 400 into I
$820    $6827   LD       V8, #27         ; Load 39 into V8
$822    $6C0F   LD       VC, #0F         ; Load 15 into VC
$824    $1991   JP       $991            ; Jump to 991
$826    $AB33   LD       I, $B33         ; Load B33 into I
$828    $7FA4   ADD      VF, #A4         ; Add 164 to VF
$82A    $E822   UNKNOWN  $E822           ; Unknown Exxx instruction
$82C    $60E3   LD       V0, #E3         ; Load 227 into V0
$82E    $8CAA   UNKNOWN  8CAA            ; Unknown 8xxx instruction
$830    $2A77   CALL     $A77            ; Call subroutine at A77
$832    $EFD7   UNKNOWN  $EFD7           ; Unknown Exxx instruction
$834    $9AE0   SNE      VA, VE          ; Skip if VA != VE
$836    $83A3   XOR      V3, VA          ; V3 ^= VA
$838    $58AC   UNKNOWN  $58AC           ; Unknown 5xxx instruction
$83A    $AD03   LD       I, $D03         ; Load D03 into I
$83C    $3677   SE       V6, #77         ; Skip if V6 == 119
$83E    $497A   SNE      V9, #7A         ; Skip if V9 != 122
$840    $F554   UNKNOWN  F554            ; Unknown Fxxx instruction
$842    $0FEE   SYS      $FEE            ; System call to FEE
$844    $DC8B   DRW      VC, V8, #B      ; Draw 11-byte sprite at VC, V8
$846    $334B   SE       V3, #4B         ; Skip if V3 == 75
$848    $5A4B   UNKNOWN  $5A4B           ; Unknown 5xxx instruction
$84A    $EFEF   UNKNOWN  $EFEF           ; Unknown Exxx instruction
$84C    $3992   SE       V9, #92         ; Skip if V9 == 146
$84E    $AF27   LD       I, $F27         ; Load F27 into I
$850    $AF07   LD       I, $F07         ; Load F07 into I
$852    $9107   UNKNOWN  $9107           ; Unknown 9xxx instruction
$854    $5A6B   UNKNOWN  $5A6B           ; Unknown 5xxx instruction
$856    $4768   SNE      V7, #68         ; Skip if V7 != 104
$858    $7B75   ADD      VB, #75         ; Add 117 to VB
$85A    $2F55   CALL     $F55            ; Call subroutine at F55
$85C    $2500   CALL     $500            ; Call subroutine at 500
$85E    $8A73   XOR      VA, V7          ; VA ^= V7
$860    $F4FF   UNKNOWN  F4FF            ; Unknown Fxxx instruction
$862    $86D6   SHR      V6              ; V6 >>= 1, VF = LSB
$864    $001D   SYS      $01D            ; System call to 01D
$866    $852D   UNKNOWN  852D            ; Unknown 8xxx instruction
$868    $7C48   ADD      VC, #48         ; Add 72 to VC
$86A    $3C3C   SE       VC, #3C         ; Skip if VC == 60
$86C    $30CA   SE       V0, #CA         ; Skip if V0 == 202
$86E    $1EC2   JP       $EC2            ; Jump to EC2
$870    $9CD5   UNKNOWN  $9CD5           ; Unknown 9xxx instruction
$872    $8844   ADD      V8, V4          ; V8 += V4, VF = carry
$874    $2098   CALL     $098            ; Call subroutine at 098
$876    $C27A   RND      V2, #7A         ; V2 = random & 7A
$878    $A16E   LD       I, $16E         ; Load 16E into I
$87A    $08D3   SYS      $8D3            ; System call to 8D3
$87C    $FD4D   UNKNOWN  FD4D            ; Unknown Fxxx instruction
$87E    $EA61   UNKNOWN  $EA61           ; Unknown Exxx instruction
$880    $225A   CALL     $25A            ; Call subroutine at 25A
$882    $2072   CALL     $072            ; Call subroutine at 072
$884    $A1ED   LD       I, $1ED         ; Load 1ED into I
$886    $7817   ADD      V8, #17         ; Add 23 to V8
$888    $9E41   UNKNOWN  $9E41           ; Unknown 9xxx instruction
$88A    $A52F   LD       I, $52F         ; Load 52F into I
$88C    $9B9D   UNKNOWN  $9B9D           ; Unknown 9xxx instruction
$88E    $206A   CALL     $06A            ; Call subroutine at 06A
$890    $D8ED   DRW      V8, VE, #D      ; Draw 13-byte sprite at V8, VE
$892    $A310   LD       I, $310         ; Load 310 into I
$894    $1BC6   JP       $BC6            ; Jump to BC6
$896    $BB05   JP       V0, $B05        ; Jump to V0 + B05
$898    $2C9E   CALL     $C9E            ; Call subroutine at C9E
$89A    $01F7   SYS      $1F7            ; System call to 1F7
$89C    $D144   DRW      V1, V4, #4      ; Draw 4-byte sprite at V1, V4
$89E    $C5E8   RND      V5, #E8         ; V5 = random & E8
$8A0    $0E17   SYS      $E17            ; System call to E17
$8A2    $D195   DRW      V1, V9, #5      ; Draw 5-byte sprite at V1, V9
$8A4    $C4E4   RND      V4, #E4         ; V4 = random & E4
$8A6    $50C1   UNKNOWN  $50C1           ; Unknown 5xxx instruction
$8A8    $BA7D   JP       V0, $A7D        ; Jump to V0 + A7D
$8AA    $BFCA   JP       V0, $FCA        ; Jump to V0 + FCA
$8AC    $9A6E   UNKNOWN  $9A6E           ; Unknown 9xxx instruction
$8AE    $A627   LD       I, $627         ; Load 627 into I
$8B0    $2190   CALL     $190            ; Call subroutine at 190
$8B2    $BEC9   JP       V0, $EC9        ; Jump to V0 + EC9
$8B4    $4B46   SNE      VB, #46         ; Skip if VB != 70
$8B6    $F5F6   UNKNOWN  F5F6            ; Unknown Fxxx instruction
$8B8    $C5C9   RND      V5, #C9         ; V5 = random & C9
$8BA    $54E9   UNKNOWN  $54E9           ; Unknown 5xxx instruction
$8BC    $0965   SYS      $965            ; System call to 965
$8BE    $5065   UNKNOWN  $5065           ; Unknown 5xxx instruction
$8C0    $101C   JP       $01C            ; Jump to 01C
$8C2    $CEE6   RND      VE, #E6         ; VE = random & E6
$8C4    $F3B7   UNKNOWN  F3B7            ; Unknown Fxxx instruction
$8C6    $CCD7   RND      VC, #D7         ; VC = random & D7
$8C8    $8DEF   UNKNOWN  8DEF            ; Unknown 8xxx instruction
$8CA    $E8FA   UNKNOWN  $E8FA           ; Unknown Exxx instruction
$8CC    $2F93   CALL     $F93            ; Call subroutine at F93
$8CE    $8EDC   UNKNOWN  8EDC            ; Unknown 8xxx instruction
$8D0    $5A4C   UNKNOWN  $5A4C           ; Unknown 5xxx instruction
$8D2    $6274   LD       V2, #74         ; Load 116 into V2
$8D4    $1D5A   JP       $D5A            ; Jump to D5A
$8D6    $6A0B   LD       VA, #0B         ; Load 11 into VA
$8D8    $1B87   JP       $B87            ; Jump to B87
$8DA    $57AD   UNKNOWN  $57AD           ; Unknown 5xxx instruction
$8DC    $FFEE   UNKNOWN  FFEE            ; Unknown Fxxx instruction
$8DE    $F092   UNKNOWN  F092            ; Unknown Fxxx instruction
$8E0    $3F97   SE       VF, #97         ; Skip if VF == 151
$8E2    $A678   LD       I, $678         ; Load 678 into I
$8E4    $119B   JP       $19B            ; Jump to 19B
$8E6    $D8BE   DRW      V8, VB, #E      ; Draw 14-byte sprite at V8, VB
$8E8    $43D1   SNE      V3, #D1         ; Skip if V3 != 209
$8EA    $B240   JP       V0, $240        ; Jump to V0 + 240
$8EC    $DA1C   DRW      VA, V1, #C      ; Draw 12-byte sprite at VA, V1
$8EE    $C2E1   RND      V2, #E1         ; V2 = random & E1
$8F0    $9A13   UNKNOWN  $9A13           ; Unknown 9xxx instruction
$8F2    $FC33   LD       B, VC           ; Store BCD of VC at I, I+1, I+2
$8F4    $46D5   SNE      V6, #D5         ; Skip if V6 != 213
$8F6    $219B   CALL     $19B            ; Call subroutine at 19B
$8F8    $A25A   LD       I, $25A         ; Load 25A into I
$8FA    $7999   ADD      V9, #99         ; Add 153 to V9
$8FC    $07E4   SYS      $7E4            ; System call to 7E4
$8FE    $CA6C   RND      VA, #6C         ; VA = random & 6C
$900    $255D   CALL     $55D            ; Call subroutine at 55D
$902    $A24E   LD       I, $24E         ; Load 24E into I
$904    $0CC5   SYS      $CC5            ; System call to CC5
$906    $57A5   UNKNOWN  $57A5           ; Unknown 5xxx instruction
$908    $85C2   AND      V5, VC          ; V5 &= VC
$90A    $95DE   UNKNOWN  $95DE           ; Unknown 9xxx instruction
$90C    $6833   LD       V8, #33         ; Load 51 into V8
$90E    $0D5F   SYS      $D5F            ; System call to D5F
$910    $AF03   LD       I, $F03         ; Load F03 into I
$912    $D614   DRW      V6, V1, #4      ; Draw 4-byte sprite at V6, V1
$914    $6C59   LD       VC, #59         ; Load 89 into VC
$916    $F7D9   UNKNOWN  F7D9            ; Unknown Fxxx instruction
$918    $5437   UNKNOWN  $5437           ; Unknown 5xxx instruction
$91A    $F1AE   UNKNOWN  F1AE            ; Unknown Fxxx instruction
$91C    $7460   ADD      V4, #60         ; Add 96 to V4
$91E    $D5BC   DRW      V5, VB, #C      ; Draw 12-byte sprite at V5, VB
$920    $9CB7   UNKNOWN  $9CB7           ; Unknown 9xxx instruction
$922    $248E   CALL     $48E            ; Call subroutine at 48E
$924    $9B11   UNKNOWN  $9B11           ; Unknown 9xxx instruction
$926    $EC43   UNKNOWN  $EC43           ; Unknown Exxx instruction
$928    $0C57   SYS      $C57            ; System call to C57
$92A    $D43D   DRW      V4, V3, #D      ; Draw 13-byte sprite at V4, V3
$92C    $80FE   SHL      V0              ; V0 <<= 1, VF = MSB
$92E    $8DA7   SUBN     VD, VA          ; VD = VA - VD, VF = !borrow
$930    $49CC   SNE      V9, #CC         ; Skip if V9 != 204
$932    $4CC0   SNE      VC, #C0         ; Skip if VC != 192
$934    $CDCB   RND      VD, #CB         ; VD = random & CB
$936    $A56A   LD       I, $56A         ; Load 56A into I
$938    $157F   JP       $57F            ; Jump to 57F
$93A    $25EC   CALL     $5EC            ; Call subroutine at 5EC
$93C    $E37B   UNKNOWN  $E37B           ; Unknown Exxx instruction
$93E    $2D2E   CALL     $D2E            ; Call subroutine at D2E
$940    $C3E0   RND      V3, #E0         ; V3 = random & E0
$942    $AB99   LD       I, $B99         ; Load B99 into I
$944    $0FAD   SYS      $FAD            ; System call to FAD
$946    $2066   CALL     $066            ; Call subroutine at 066
$948    $0D69   SYS      $D69            ; System call to D69
$94A    $536B   UNKNOWN  $536B           ; Unknown 5xxx instruction
$94C    $3FD0   SE       VF, #D0         ; Skip if VF == 208
$94E    $21AF   CALL     $1AF            ; Call subroutine at 1AF
$950    $5500   SE       V5, V0          ; Skip if V5 == V0
$952    $A2E9   LD       I, $2E9         ; Load 2E9 into I
$954    $EA76   UNKNOWN  $EA76           ; Unknown Exxx instruction
$956    $1772   JP       $772            ; Jump to 772
$958    $92FE   UNKNOWN  $92FE           ; Unknown 9xxx instruction
$95A    $0B84   SYS      $B84            ; System call to B84
$95C    $A63B   LD       I, $63B         ; Load 63B into I
$95E    $06C1   SYS      $6C1            ; System call to 6C1
$960    $4B67   SNE      VB, #67         ; Skip if VB != 103
$962    $5FB3   UNKNOWN  $5FB3           ; Unknown 5xxx instruction
$964    $4547   SNE      V5, #47         ; Skip if V5 != 71
$966    $8405   SUB      V4, V0          ; V4 -= V0, VF = !borrow
$968    $E85A   UNKNOWN  $E85A           ; Unknown Exxx instruction
$96A    $B36C   JP       V0, $36C        ; Jump to V0 + 36C
$96C    $F5D2   UNKNOWN  F5D2            ; Unknown Fxxx instruction
$96E    $C86A   RND      V8, #6A         ; V8 = random & 6A
$970    $E11A   UNKNOWN  $E11A           ; Unknown Exxx instruction
$972    $5BBE   UNKNOWN  $5BBE           ; Unknown 5xxx instruction
$974    $C902   RND      V9, #02         ; V9 = random & 02
$976    $9DD1   UNKNOWN  $9DD1           ; Unknown 9xxx instruction
$978    $208F   CALL     $08F            ; Call subroutine at 08F
$97A    $0A42   SYS      $A42            ; System call to A42
$97C    $E7A7   UNKNOWN  $E7A7           ; Unknown Exxx instruction
$97E    $A2B6   LD       I, $2B6         ; Load 2B6 into I
$980    $8768   UNKNOWN  8768            ; Unknown 8xxx instruction
$982    $D5EB   DRW      V5, VE, #B      ; Draw 11-byte sprite at V5, VE
$984    $27C9   CALL     $7C9            ; Call subroutine at 7C9
$986    $0E41   SYS      $E41            ; System call to E41
$988    $2828   CALL     $828            ; Call subroutine at 828
$98A    $29D1   CALL     $9D1            ; Call subroutine at 9D1
$98C    $CE24   RND      VE, #24         ; VE = random & 24
$98E    $E77F   UNKNOWN  $E77F           ; Unknown Exxx instruction
$990    $4D87   SNE      VD, #87         ; Skip if VD != 135
$992    $2B95   CALL     $B95            ; Call subroutine at B95
$994    $87EA   UNKNOWN  87EA            ; Unknown 8xxx instruction
$996    $2060   CALL     $060            ; Call subroutine at 060
$998    $BE34   JP       V0, $E34        ; Jump to V0 + E34
$99A    $1030   JP       $030            ; Jump to 030
$99C    $0227   SYS      $227            ; System call to 227
$99E    $364A   SE       V6, #4A         ; Skip if V6 == 74
$9A0    $5FFF   UNKNOWN  $5FFF           ; Unknown 5xxx instruction
$9A2    $9A40   SNE      VA, V4          ; Skip if VA != V4
$9A4    $5E8B   UNKNOWN  $5E8B           ; Unknown 5xxx instruction
$9A6    $80F9   UNKNOWN  80F9            ; Unknown 8xxx instruction
$9A8    $A32E   LD       I, $32E         ; Load 32E into I
$9AA    $209A   CALL     $09A            ; Call subroutine at 09A
$9AC    $0B72   SYS      $B72            ; System call to B72
$9AE    $1138   JP       $138            ; Jump to 138
$9B0    $D962   DRW      V9, V6, #2      ; Draw 2-byte sprite at V9, V6
$9B2    $D644   DRW      V6, V4, #4      ; Draw 4-byte sprite at V6, V4
$9B4    $2C27   CALL     $C27            ; Call subroutine at C27
$9B6    $51AB   UNKNOWN  $51AB           ; Unknown 5xxx instruction
$9B8    $0A94   SYS      $A94            ; System call to A94
$9BA    $35CA   SE       V5, #CA         ; Skip if V5 == 202
$9BC    $0BA0   SYS      $BA0            ; System call to BA0
$9BE    $A6DE   LD       I, $6DE         ; Load 6DE into I
$9C0    $40AE   SNE      V0, #AE         ; Skip if V0 != 174
$9C2    $4708   SNE      V7, #08         ; Skip if V7 != 8
$9C4    $FE1E   ADD      I, VE           ; I += VE
$9C6    $EECF   UNKNOWN  $EECF           ; Unknown Exxx instruction
$9C8    $E6EF   UNKNOWN  $E6EF           ; Unknown Exxx instruction
$9CA    $D06E   DRW      V0, V6, #E      ; Draw 14-byte sprite at V0, V6
$9CC    $AB02   LD       I, $B02         ; Load B02 into I
$9CE    $B243   JP       V0, $243        ; Jump to V0 + 243
$9D0    $1F4A   JP       $F4A            ; Jump to F4A
$9D2    $E38F   UNKNOWN  $E38F           ; Unknown Exxx instruction
$9D4    $EDCA   UNKNOWN  $EDCA           ; Unknown Exxx instruction
$9D6    $6734   LD       V7, #34         ; Load 52 into V7
$9D8    $4B4E   SNE      VB, #4E         ; Skip if VB != 78
$9DA    $9CB4   UNKNOWN  $9CB4           ; Unknown 9xxx instruction
$9DC    $28ED   CALL     $8ED            ; Call subroutine at 8ED
$9DE    $276C   CALL     $76C            ; Call subroutine at 76C
$9E0    $3151   SE       V1, #51         ; Skip if V1 == 81
$9E2    $6DFD   LD       VD, #FD         ; Load 253 into VD
$9E4    $77DA   ADD      V7, #DA         ; Add 218 to V7
$9E6    $BE21   JP       V0, $E21        ; Jump to V0 + E21
$9E8    $AF2F   LD       I, $F2F         ; Load F2F into I
$9EA    $1A11   JP       $A11            ; Jump to A11
$9EC    $EE84   UNKNOWN  $EE84           ; Unknown Exxx instruction
$9EE    $E229   UNKNOWN  $E229           ; Unknown Exxx instruction
$9F0    $BDE0   JP       V0, $DE0        ; Jump to V0 + DE0
$9F2    $C229   RND      V2, #29         ; V2 = random & 29
$9F4    $501E   UNKNOWN  $501E           ; Unknown 5xxx instruction
$9F6    $3389   SE       V3, #89         ; Skip if V3 == 137
$9F8    $DC92   DRW      VC, V9, #2      ; Draw 2-byte sprite at VC, V9
$9FA    $58D1   UNKNOWN  $58D1           ; Unknown 5xxx instruction
$9FC    $5E51   UNKNOWN  $5E51           ; Unknown 5xxx instruction
$9FE    $EC89   UNKNOWN  $EC89           ; Unknown Exxx instruction
$A00    $4FCE   SNE      VF, #CE         ; Skip if VF != 206
$A02    $78B4   ADD      V8, #B4         ; Add 180 to V8
$A04    $37C2   SE       V7, #C2         ; Skip if V7 == 194
$A06    $BFB2   JP       V0, $FB2        ; Jump to V0 + FB2
$A08    $388D   SE       V8, #8D         ; Skip if V8 == 141
$A0A    $05D3   SYS      $5D3            ; System call to 5D3
$A0C    $BB59   JP       V0, $B59        ; Jump to V0 + B59
$A0E    $F94A   UNKNOWN  F94A            ; Unknown Fxxx instruction
$A10    $7511   ADD      V5, #11         ; Add 17 to V5
$A12    $44E6   SNE      V4, #E6         ; Skip if V4 != 230
$A14    $385B   SE       V8, #5B         ; Skip if V8 == 91
$A16    $3766   SE       V7, #66         ; Skip if V7 == 102
$A18    $BE07   JP       V0, $E07        ; Jump to V0 + E07
$A1A    $CBE9   RND      VB, #E9         ; VB = random & E9
$A1C    $CBC8   RND      VB, #C8         ; VB = random & C8
$A1E    $AF2B   LD       I, $F2B         ; Load F2B into I
$A20    $5C03   UNKNOWN  $5C03           ; Unknown 5xxx instruction
$A22    $8C6F   UNKNOWN  8C6F            ; Unknown 8xxx instruction
$A24    $5955   UNKNOWN  $5955           ; Unknown 5xxx instruction
$A26    $714A   ADD      V1, #4A         ; Add 74 to V1
$A28    $C5CE   RND      V5, #CE         ; V5 = random & CE
$A2A    $2D94   CALL     $D94            ; Call subroutine at D94
$A2C    $1265   JP       $265            ; Jump to 265
$A2E    $CD96   RND      VD, #96         ; VD = random & 96
$A30    $1FF3   JP       $FF3            ; Jump to FF3
$A32    $1094   JP       $094            ; Jump to 094
$A34    $01CD   SYS      $1CD            ; System call to 1CD
$A36    $A314   LD       I, $314         ; Load 314 into I
$A38    $DCFD   DRW      VC, VF, #D      ; Draw 13-byte sprite at VC, VF
$A3A    $3C85   SE       VC, #85         ; Skip if VC == 133
$A3C    $357C   SE       V5, #7C         ; Skip if V5 == 124
$A3E    $242C   CALL     $42C            ; Call subroutine at 42C
$A40    $3BB7   SE       VB, #B7         ; Skip if VB == 183
$A42    $1617   JP       $617            ; Jump to 617
$A44    $07E4   SYS      $7E4            ; System call to 7E4
$A46    $5D85   UNKNOWN  $5D85           ; Unknown 5xxx instruction
$A48    $EEAD   UNKNOWN  $EEAD           ; Unknown Exxx instruction
$A4A    $4411   SNE      V4, #11         ; Skip if V4 != 17
$A4C    $C58D   RND      V5, #8D         ; V5 = random & 8D
$A4E    $6E0B   LD       VE, #0B         ; Load 11 into VE
$A50    $CDEF   RND      VD, #EF         ; VD = random & EF
$A52    $8FDB   UNKNOWN  8FDB            ; Unknown 8xxx instruction
$A54    $3A14   SE       VA, #14         ; Skip if VA == 20
$A56    $B032   JP       V0, $032        ; Jump to V0 + 032
$A58    $178F   JP       $78F            ; Jump to 78F
$A5A    $88D7   SUBN     V8, VD          ; V8 = VD - V8, VF = !borrow
$A5C    $D2C4   DRW      V2, VC, #4      ; Draw 4-byte sprite at V2, VC
$A5E    $3322   SE       V3, #22         ; Skip if V3 == 34
$A60    $3E4A   SE       VE, #4A         ; Skip if VE == 74
$A62    $25E7   CALL     $5E7            ; Call subroutine at 5E7
$A64    $9FBC   UNKNOWN  $9FBC           ; Unknown 9xxx instruction
$A66    $95F3   UNKNOWN  $95F3           ; Unknown 9xxx instruction
$A68    $62A5   LD       V2, #A5         ; Load 165 into V2
$A6A    $CE9E   RND      VE, #9E         ; VE = random & 9E
$A6C    $8AC4   ADD      VA, VC          ; VA += VC, VF = carry
$A6E    $C5A1   RND      V5, #A1         ; V5 = random & A1
$A70    $2E0D   CALL     $E0D            ; Call subroutine at E0D
$A72    $9EB0   SNE      VE, VB          ; Skip if VE != VB
$A74    $53AE   UNKNOWN  $53AE           ; Unknown 5xxx instruction
$A76    $B1B4   JP       V0, $1B4        ; Jump to V0 + 1B4
$A78    $11EF   JP       $1EF            ; Jump to 1EF
$A7A    $573C   UNKNOWN  $573C           ; Unknown 5xxx instruction
$A7C    $58AD   UNKNOWN  $58AD           ; Unknown 5xxx instruction
$A7E    $6813   LD       V8, #13         ; Load 19 into V8
$A80    $4E0B   SNE      VE, #0B         ; Skip if VE != 11
$A82    $454A   SNE      V5, #4A         ; Skip if V5 != 74
$A84    $92C2   UNKNOWN  $92C2           ; Unknown 9xxx instruction
$A86    $6EFE   LD       VE, #FE         ; Load 254 into VE
$A88    $51C0   SE       V1, VC          ; Skip if V1 == VC
$A8A    $2765   CALL     $765            ; Call subroutine at 765
$A8C    $E3A5   UNKNOWN  $E3A5           ; Unknown Exxx instruction
$A8E    $AEC8   LD       I, $EC8         ; Load EC8 into I
$A90    $D51B   DRW      V5, V1, #B      ; Draw 11-byte sprite at V5, V1
$A92    $9B04   UNKNOWN  $9B04           ; Unknown 9xxx instruction
$A94    $5580   SE       V5, V8          ; Skip if V5 == V8
$A96    $FB5D   UNKNOWN  FB5D            ; Unknown Fxxx instruction
$A98    $02E8   SYS      $2E8            ; System call to 2E8
$A9A    $40AA   SNE      V0, #AA         ; Skip if V0 != 170
$A9C    $8558   UNKNOWN  8558            ; Unknown 8xxx instruction
$A9E    $CC97   RND      VC, #97         ; VC = random & 97
$AA0    $1962   JP       $962            ; Jump to 962
$AA2    $4686   SNE      V6, #86         ; Skip if V6 != 134
$AA4    $CCA7   RND      VC, #A7         ; VC = random & A7
$AA6    $FB2F   UNKNOWN  FB2F            ; Unknown Fxxx instruction
$AA8    $DEF5   DRW      VE, VF, #5      ; Draw 5-byte sprite at VE, VF
$AAA    $124E   JP       $24E            ; Jump to 24E
$AAC    $5D3D   UNKNOWN  $5D3D           ; Unknown 5xxx instruction
$AAE    $1F73   JP       $F73            ; Jump to F73
$AB0    $D313   DRW      V3, V1, #3      ; Draw 3-byte sprite at V3, V1
$AB2    $E6F0   UNKNOWN  $E6F0           ; Unknown Exxx instruction
$AB4    $4F42   SNE      VF, #42         ; Skip if VF != 66
$AB6    $2C28   CALL     $C28            ; Call subroutine at C28
$AB8    $812A   UNKNOWN  812A            ; Unknown 8xxx instruction
$ABA    $CF71   RND      VF, #71         ; VF = random & 71
$ABC    $47E3   SNE      V7, #E3         ; Skip if V7 != 227
$ABE    $2626   CALL     $626            ; Call subroutine at 626
$AC0    $5FDE   UNKNOWN  $5FDE           ; Unknown 5xxx instruction
$AC2    $59CF   UNKNOWN  $59CF           ; Unknown 5xxx instruction
$AC4    $5F53   UNKNOWN  $5F53           ; Unknown 5xxx instruction
$AC6    $C3EC   RND      V3, #EC         ; V3 = random & EC
$AC8    $9044   UNKNOWN  $9044           ; Unknown 9xxx instruction
$ACA    $1DE0   JP       $DE0            ; Jump to DE0
$ACC    $F2BD   UNKNOWN  F2BD            ; Unknown Fxxx instruction
$ACE    $17D9   JP       $7D9            ; Jump to 7D9
$AD0    $52BE   UNKNOWN  $52BE           ; Unknown 5xxx instruction
$AD2    $6E27   LD       VE, #27         ; Load 39 into VE
$AD4    $6D4F   LD       VD, #4F         ; Load 79 into VD
$AD6    $6F2A   LD       VF, #2A         ; Load 42 into VF
$AD8    $9770   SNE      V7, V7          ; Skip if V7 != V7
$ADA    $7FD9   ADD      VF, #D9         ; Add 217 to VF
$ADC    $04C2   SYS      $4C2            ; System call to 4C2
$ADE    $4BCD   SNE      VB, #CD         ; Skip if VB != 205
$AE0    $50C0   SE       V0, VC          ; Skip if V0 == VC
$AE2    $C86D   RND      V8, #6D         ; V8 = random & 6D
$AE4    $A914   LD       I, $914         ; Load 914 into I
$AE6    $512F   UNKNOWN  $512F           ; Unknown 5xxx instruction
$AE8    $3B67   SE       VB, #67         ; Skip if VB == 103
$AEA    $9477   UNKNOWN  $9477           ; Unknown 9xxx instruction
$AEC    $3A67   SE       VA, #67         ; Skip if VA == 103
$AEE    $56D5   UNKNOWN  $56D5           ; Unknown 5xxx instruction
$AF0    $B8D0   JP       V0, $8D0        ; Jump to V0 + 8D0
$AF2    $6186   LD       V1, #86         ; Load 134 into V1
$AF4    $6876   LD       V8, #76         ; Load 118 into V8
$AF6    $7EED   ADD      VE, #ED         ; Add 237 to VE
$AF8    $641C   LD       V4, #1C         ; Load 28 into V4
$AFA    $9B4D   UNKNOWN  $9B4D           ; Unknown 9xxx instruction
$AFC    $F064   UNKNOWN  F064            ; Unknown Fxxx instruction
$AFE    $B24C   JP       V0, $24C        ; Jump to V0 + 24C
$B00    $6530   LD       V5, #30         ; Load 48 into V5
$B02    $1B08   JP       $B08            ; Jump to B08
$B04    $8AF0   LD       VA, VF          ; VA = VF
$B06    $78A7   ADD      V8, #A7         ; Add 167 to V8
$B08    $0157   SYS      $157            ; System call to 157
$B0A    $5024   UNKNOWN  $5024           ; Unknown 5xxx instruction
$B0C    $E2C3   UNKNOWN  $E2C3           ; Unknown Exxx instruction
$B0E    $3426   SE       V4, #26         ; Skip if V4 == 38
$B10    $DC9A   DRW      VC, V9, #A      ; Draw 10-byte sprite at VC, V9
$B12    $22F3   CALL     $2F3            ; Call subroutine at 2F3
$B14    $7909   ADD      V9, #09         ; Add 9 to V9
$B16    $8D63   XOR      VD, V6          ; VD ^= V6
$B18    $45C1   SNE      V5, #C1         ; Skip if V5 != 193
$B1A    $F836   UNKNOWN  F836            ; Unknown Fxxx instruction
$B1C    $C8AE   RND      V8, #AE         ; V8 = random & AE
$B1E    $BA1C   JP       V0, $A1C        ; Jump to V0 + A1C
$B20    $656D   LD       V5, #6D         ; Load 109 into V5
$B22    $B63E   JP       V0, $63E        ; Jump to V0 + 63E
$B24    $C6AC   RND      V6, #AC         ; V6 = random & AC
$B26    $78D0   ADD      V8, #D0         ; Add 208 to V8
$B28    $D180   DRW      V1, V8, #0      ; Draw 0-byte sprite at V1, V8
$B2A    $3032   SE       V0, #32         ; Skip if V0 == 50
$B2C    $2866   CALL     $866            ; Call subroutine at 866
$B2E    $BDFF   JP       V0, $DFF        ; Jump to V0 + DFF
$B30    $E04D   UNKNOWN  $E04D           ; Unknown Exxx instruction
$B32    $78F1   ADD      V8, #F1         ; Add 241 to V8
$B34    $C431   RND      V4, #31         ; V4 = random & 31
$B36    $1A6C   JP       $A6C            ; Jump to A6C
$B38    $3E30   SE       VE, #30         ; Skip if VE == 48
$B3A    $41EF   SNE      V1, #EF         ; Skip if V1 != 239
$B3C    $843A   UNKNOWN  843A            ; Unknown 8xxx instruction
$B3E    $9050   SNE      V0, V5          ; Skip if V0 != V5
$B40    $75B7   ADD      V5, #B7         ; Add 183 to V5
$B42    $D1F8   DRW      V1, VF, #8      ; Draw 8-byte sprite at V1, VF
$B44    $3DAF   SE       VD, #AF         ; Skip if VD == 175
$B46    $6B8C   LD       VB, #8C         ; Load 140 into VB
$B48    $CAAE   RND      VA, #AE         ; VA = random & AE
$B4A    $983F   UNKNOWN  $983F           ; Unknown 9xxx instruction
$B4C    $BA5B   JP       V0, $A5B        ; Jump to V0 + A5B
$B4E    $9175   UNKNOWN  $9175           ; Unknown 9xxx instruction
$B50    $1C70   JP       $C70            ; Jump to C70
$B52    $A8AE   LD       I, $8AE         ; Load 8AE into I
$B54    $512F   UNKNOWN  $512F           ; Unknown 5xxx instruction
$B56    $A1D9   LD       I, $1D9         ; Load 1D9 into I
$B58    $C80D   RND      V8, #0D         ; V8 = random & 0D
$B5A    $D3D0   DRW      V3, VD, #0      ; Draw 0-byte sprite at V3, VD
$B5C    $265F   CALL     $65F            ; Call subroutine at 65F
$B5E    $9C74   UNKNOWN  $9C74           ; Unknown 9xxx instruction
$B60    $AE69   LD       I, $E69         ; Load E69 into I
$B62    $20A7   CALL     $0A7            ; Call subroutine at 0A7
$B64    $3BA7   SE       VB, #A7         ; Skip if VB == 167
$B66    $DCA2   DRW      VC, VA, #2      ; Draw 2-byte sprite at VC, VA
$B68    $1756   JP       $756            ; Jump to 756
$B6A    $C719   RND      V7, #19         ; V7 = random & 19
$B6C    $7BCE   ADD      VB, #CE         ; Add 206 to VB
$B6E    $0984   SYS      $984            ; System call to 984
$B70    $9BEE   UNKNOWN  $9BEE           ; Unknown 9xxx instruction
$B72    $A7FD   LD       I, $7FD         ; Load 7FD into I
$B74    $C497   RND      V4, #97         ; V4 = random & 97
$B76    $4399   SNE      V3, #99         ; Skip if V3 != 153
$B78    $7A9E   ADD      VA, #9E         ; Add 158 to VA
$B7A    $939E   UNKNOWN  $939E           ; Unknown 9xxx instruction
$B7C    $A20F   LD       I, $20F         ; Load 20F into I
$B7E    $6241   LD       V2, #41         ; Load 65 into V2
$B80    $71B9   ADD      V1, #B9         ; Add 185 to V1
$B82    $CE18   RND      VE, #18         ; VE = random & 18
$B84    $DA4A   DRW      VA, V4, #A      ; Draw 10-byte sprite at VA, V4
$B86    $D48D   DRW      V4, V8, #D      ; Draw 13-byte sprite at V4, V8
$B88    $9D9B   UNKNOWN  $9D9B           ; Unknown 9xxx instruction
$B8A    $E188   UNKNOWN  $E188           ; Unknown Exxx instruction
$B8C    $9444   UNKNOWN  $9444           ; Unknown 9xxx instruction
$B8E    $ADCC   LD       I, $DCC         ; Load DCC into I
$B90    $F6F9   UNKNOWN  F6F9            ; Unknown Fxxx instruction
$B92    $4403   SNE      V4, #03         ; Skip if V4 != 3
$B94    $9955   UNKNOWN  $9955           ; Unknown 9xxx instruction
$B96    $1773   JP       $773            ; Jump to 773
$B98    $9B96   UNKNOWN  $9B96           ; Unknown 9xxx instruction
$B9A    $9394   UNKNOWN  $9394           ; Unknown 9xxx instruction
$B9C    $FB5D   UNKNOWN  FB5D            ; Unknown Fxxx instruction
$B9E    $09C3   SYS      $9C3            ; System call to 9C3
$BA0    $BCBA   JP       V0, $CBA        ; Jump to V0 + CBA
$BA2    $7D2D   ADD      VD, #2D         ; Add 45 to VD
$BA4    $6F5E   LD       VF, #5E         ; Load 94 into VF
$BA6    $04B3   SYS      $4B3            ; System call to 4B3
$BA8    $0962   SYS      $962            ; System call to 962
$BAA    $816D   UNKNOWN  816D            ; Unknown 8xxx instruction
$BAC    $1677   JP       $677            ; Jump to 677
$BAE    $9EF9   UNKNOWN  $9EF9           ; Unknown 9xxx instruction
$BB0    $F59B   UNKNOWN  F59B            ; Unknown Fxxx instruction
$BB2    $1336   JP       $336            ; Jump to 336
$BB4    $7B09   ADD      VB, #09         ; Add 9 to VB
$BB6    $92A7   UNKNOWN  $92A7           ; Unknown 9xxx instruction
$BB8    $16F0   JP       $6F0            ; Jump to 6F0
$BBA    $4EF7   SNE      VE, #F7         ; Skip if VE != 247
$BBC    $DE51   DRW      VE, V5, #1      ; Draw 1-byte sprite at VE, V5
$BBE    $45BB   SNE      V5, #BB         ; Skip if V5 != 187
$BC0    $949A   UNKNOWN  $949A           ; Unknown 9xxx instruction
$BC2    $A999   LD       I, $999         ; Load 999 into I
$BC4    $5A63   UNKNOWN  $5A63           ; Unknown 5xxx instruction
$BC6    $2036   CALL     $036            ; Call subroutine at 036
$BC8    $5DD8   UNKNOWN  $5DD8           ; Unknown 5xxx instruction
$BCA    $845C   UNKNOWN  845C            ; Unknown 8xxx instruction
$BCC    $84CC   UNKNOWN  84CC            ; Unknown 8xxx instruction
$BCE    $65D9   LD       V5, #D9         ; Load 217 into V5
$BD0    $DD76   DRW      VD, V7, #6      ; Draw 6-byte sprite at VD, V7
$BD2    $4622   SNE      V6, #22         ; Skip if V6 != 34
$BD4    $5E47   UNKNOWN  $5E47           ; Unknown 5xxx instruction
$BD6    $F274   UNKNOWN  F274            ; Unknown Fxxx instruction
$BD8    $B9AB   JP       V0, $9AB        ; Jump to V0 + 9AB
$BDA    $E2A0   UNKNOWN  $E2A0           ; Unknown Exxx instruction
$BDC    $75D1   ADD      V5, #D1         ; Add 209 to V5
$BDE    $E166   UNKNOWN  $E166           ; Unknown Exxx instruction
$BE0    $2E14   CALL     $E14            ; Call subroutine at E14
$BE2    $2D67   CALL     $D67            ; Call subroutine at D67
$BE4    $7918   ADD      V9, #18         ; Add 24 to V9
$BE6    $7482   ADD      V4, #82         ; Add 130 to V4
$BE8    $99C7   UNKNOWN  $99C7           ; Unknown 9xxx instruction
$BEA    $285C   CALL     $85C            ; Call subroutine at 85C
$BEC    $E2C7   UNKNOWN  $E2C7           ; Unknown Exxx instruction
$BEE    $FB0F   UNKNOWN  FB0F            ; Unknown Fxxx instruction
$BF0    $E794   UNKNOWN  $E794           ; Unknown Exxx instruction
$BF2    $5814   UNKNOWN  $5814           ; Unknown 5xxx instruction
$BF4    $321B   SE       V2, #1B         ; Skip if V2 == 27
$BF6    $67FB   LD       V7, #FB         ; Load 251 into V7
$BF8    $23A0   CALL     $3A0            ; Call subroutine at 3A0
$BFA    $8734   ADD      V7, V3          ; V7 += V3, VF = carry
$BFC    $D4D8   DRW      V4, VD, #8      ; Draw 8-byte sprite at V4, VD
$BFE    $BD70   JP       V0, $D70        ; Jump to V0 + D70
$C00    $1015   JP       $015            ; Jump to 015
$C02    $5738   UNKNOWN  $5738           ; Unknown 5xxx instruction
$C04    $3CAF   SE       VC, #AF         ; Skip if VC == 175
$C06    $296C   CALL     $96C            ; Call subroutine at 96C
$C08    $0170   SYS      $170            ; System call to 170
$C0A    $F3EB   UNKNOWN  F3EB            ; Unknown Fxxx instruction
$C0C    $3493   SE       V4, #93         ; Skip if V4 == 147
$C0E    $F4CA   UNKNOWN  F4CA            ; Unknown Fxxx instruction
$C10    $B630   JP       V0, $630        ; Jump to V0 + 630
$C12    $275F   CALL     $75F            ; Call subroutine at 75F
$C14    $61F3   LD       V1, #F3         ; Load 243 into V1
$C16    $8873   XOR      V8, V7          ; V8 ^= V7
$C18    $AAF6   LD       I, $AF6         ; Load AF6 into I
$C1A    $650D   LD       V5, #0D         ; Load 13 into V5
$C1C    $0A60   SYS      $A60            ; System call to A60
$C1E    $CD92   RND      VD, #92         ; VD = random & 92
$C20    $A854   LD       I, $854         ; Load 854 into I
$C22    $2C5E   CALL     $C5E            ; Call subroutine at C5E
$C24    $70E4   ADD      V0, #E4         ; Add 228 to V0
$C26    $FD4C   UNKNOWN  FD4C            ; Unknown Fxxx instruction
$C28    $A155   LD       I, $155         ; Load 155 into I
$C2A    $2A99   CALL     $A99            ; Call subroutine at A99
$C2C    $2C9B   CALL     $C9B            ; Call subroutine at C9B
$C2E    $DFDD   DRW      VF, VD, #D      ; Draw 13-byte sprite at VF, VD
$C30    $B2F7   JP       V0, $2F7        ; Jump to V0 + 2F7
$C32    $B3B4   JP       V0, $3B4        ; Jump to V0 + 3B4
$C34    $8A77   SUBN     VA, V7          ; VA = V7 - VA, VF = !borrow
$C36    $0968   SYS      $968            ; System call to 968
$C38    $A7E8   LD       I, $7E8         ; Load 7E8 into I
$C3A    $66F6   LD       V6, #F6         ; Load 246 into V6
$C3C    $4626   SNE      V6, #26         ; Skip if V6 != 38
$C3E    $7FBE   ADD      VF, #BE         ; Add 190 to VF
$C40    $2CED   CALL     $CED            ; Call subroutine at CED
$C42    $8F25   SUB      VF, V2          ; VF -= V2, VF = !borrow
$C44    $5447   UNKNOWN  $5447           ; Unknown 5xxx instruction
$C46    $E770   UNKNOWN  $E770           ; Unknown Exxx instruction
$C48    $E7B0   UNKNOWN  $E7B0           ; Unknown Exxx instruction
$C4A    $DA22   DRW      VA, V2, #2      ; Draw 2-byte sprite at VA, V2
$C4C    $95F2   UNKNOWN  $95F2           ; Unknown 9xxx instruction
$C4E    $602A   LD       V0, #2A         ; Load 42 into V0
$C50    $0F0B   SYS      $F0B            ; System call to F0B
$C52    $3CEB   SE       VC, #EB         ; Skip if VC == 235
$C54    $AA32   LD       I, $A32         ; Load A32 into I
$C56    $05A6   SYS      $5A6            ; System call to 5A6
$C58    $86C6   SHR      V6              ; V6 >>= 1, VF = LSB
$C5A    $47E9   SNE      V7, #E9         ; Skip if V7 != 233
$C5C    $E76D   UNKNOWN  $E76D           ; Unknown Exxx instruction
$C5E    $DF4B   DRW      VF, V4, #B      ; Draw 11-byte sprite at VF, V4
$C60    $63D6   LD       V3, #D6         ; Load 214 into V3
$C62    $A9BF   LD       I, $9BF         ; Load 9BF into I
$C64    $E215   UNKNOWN  $E215           ; Unknown Exxx instruction
$C66    $E46E   UNKNOWN  $E46E           ; Unknown Exxx instruction
$C68    $F1DC   UNKNOWN  F1DC            ; Unknown Fxxx instruction
$C6A    $4F0A   SNE      VF, #0A         ; Skip if VF != 10
$C6C    $AC05   LD       I, $C05         ; Load C05 into I
$C6E    $5E8E   UNKNOWN  $5E8E           ; Unknown 5xxx instruction
$C70    $B908   JP       V0, $908        ; Jump to V0 + 908
$C72    $0AF3   SYS      $AF3            ; System call to AF3
$C74    $74A6   ADD      V4, #A6         ; Add 166 to V4
$C76    $A1D0   LD       I, $1D0         ; Load 1D0 into I
$C78    $4AE5   SNE      VA, #E5         ; Skip if VA != 229
$C7A    $F869   UNKNOWN  F869            ; Unknown Fxxx instruction
$C7C    $FC3E   UNKNOWN  FC3E            ; Unknown Fxxx instruction
$C7E    $8C18   UNKNOWN  8C18            ; Unknown 8xxx instruction
$C80    $448D   SNE      V4, #8D         ; Skip if V4 != 141
$C82    $909A   UNKNOWN  $909A           ; Unknown 9xxx instruction
$C84    $C52C   RND      V5, #2C         ; V5 = random & 2C
$C86    $A4AD   LD       I, $4AD         ; Load 4AD into I
$C88    $43F2   SNE      V3, #F2         ; Skip if V3 != 242
$C8A    $4D0A   SNE      VD, #0A         ; Skip if VD != 10
$C8C    $025A   SYS      $25A            ; System call to 25A
$C8E    $28E4   CALL     $8E4            ; Call subroutine at 8E4
$C90    $D227   DRW      V2, V2, #7      ; Draw 7-byte sprite at V2, V2
$C92    $5721   UNKNOWN  $5721           ; Unknown 5xxx instruction
$C94    $FD09   UNKNOWN  FD09            ; Unknown Fxxx instruction
$C96    $BF90   JP       V0, $F90        ; Jump to V0 + F90
$C98    $CDC9   RND      VD, #C9         ; VD = random & C9
$C9A    $454C   SNE      V5, #4C         ; Skip if V5 != 76
$C9C    $F1BA   UNKNOWN  F1BA            ; Unknown Fxxx instruction
$C9E    $5B51   UNKNOWN  $5B51           ; Unknown 5xxx instruction
$CA0    $CFE7   RND      VF, #E7         ; VF = random & E7
$CA2    $1792   JP       $792            ; Jump to 792
$CA4    $7059   ADD      V0, #59         ; Add 89 to V0
$CA6    $595E   UNKNOWN  $595E           ; Unknown 5xxx instruction
$CA8    $A8E6   LD       I, $8E6         ; Load 8E6 into I
$CAA    $D101   DRW      V1, V0, #1      ; Draw 1-byte sprite at V1, V0
$CAC    $5D59   UNKNOWN  $5D59           ; Unknown 5xxx instruction
$CAE    $B944   JP       V0, $944        ; Jump to V0 + 944
$CB0    $82CA   UNKNOWN  82CA            ; Unknown 8xxx instruction
$CB2    $D84C   DRW      V8, V4, #C      ; Draw 12-byte sprite at V8, V4
$CB4    $08CA   SYS      $8CA            ; System call to 8CA
$CB6    $3831   SE       V8, #31         ; Skip if V8 == 49
$CB8    $12A6   JP       $2A6            ; Jump to 2A6
$CBA    $5ADF   UNKNOWN  $5ADF           ; Unknown 5xxx instruction
$CBC    $944E   UNKNOWN  $944E           ; Unknown 9xxx instruction
$CBE    $72F6   ADD      V2, #F6         ; Add 246 to V2
$CC0    $6EE9   LD       VE, #E9         ; Load 233 into VE
$CC2    $19CA   JP       $9CA            ; Jump to 9CA
$CC4    $F713   UNKNOWN  F713            ; Unknown Fxxx instruction
$CC6    $BAF3   JP       V0, $AF3        ; Jump to V0 + AF3
$CC8    $70A4   ADD      V0, #A4         ; Add 164 to V0
$CCA    $2F82   CALL     $F82            ; Call subroutine at F82
$CCC    $1AA4   JP       $AA4            ; Jump to AA4
$CCE    $FA8C   UNKNOWN  FA8C            ; Unknown Fxxx instruction
$CD0    $7484   ADD      V4, #84         ; Add 132 to V4
$CD2    $275A   CALL     $75A            ; Call subroutine at 75A
$CD4    $E002   UNKNOWN  $E002           ; Unknown Exxx instruction
$CD6    $FAFF   UNKNOWN  FAFF            ; Unknown Fxxx instruction
$CD8    $FF49   UNKNOWN  FF49            ; Unknown Fxxx instruction
$CDA    $B3C5   JP       V0, $3C5        ; Jump to V0 + 3C5
$CDC    $4E16   SNE      VE, #16         ; Skip if VE != 22
$CDE    $A421   LD       I, $421         ; Load 421 into I
$CE0    $315E   SE       V1, #5E         ; Skip if V1 == 94
$CE2    $9DC2   UNKNOWN  $9DC2           ; Unknown 9xxx instruction
$CE4    $032D   SYS      $32D            ; System call to 32D
$CE6    $6DCB   LD       VD, #CB         ; Load 203 into VD
$CE8    $DFAF   DRW      VF, VA, #F      ; Draw 15-byte sprite at VF, VA
$CEA    $DA92   DRW      VA, V9, #2      ; Draw 2-byte sprite at VA, V9
$CEC    $0379   SYS      $379            ; System call to 379
$CEE    $2B18   CALL     $B18            ; Call subroutine at B18
$CF0    $416A   SNE      V1, #6A         ; Skip if V1 != 106
$CF2    $8A8D   UNKNOWN  8A8D            ; Unknown 8xxx instruction
$CF4    $0575   SYS      $575            ; System call to 575
$CF6    $B90E   JP       V0, $90E        ; Jump to V0 + 90E
$CF8    $74A0   ADD      V4, #A0         ; Add 160 to V4
$CFA    $51AF   UNKNOWN  $51AF           ; Unknown 5xxx instruction
$CFC    $5ADC   UNKNOWN  $5ADC           ; Unknown 5xxx instruction
$CFE    $7FC6   ADD      VF, #C6         ; Add 198 to VF
$D00    $AEDC   LD       I, $EDC         ; Load EDC into I
$D02    $2973   CALL     $973            ; Call subroutine at 973
$D04    $844B   UNKNOWN  844B            ; Unknown 8xxx instruction
$D06    $9AC6   UNKNOWN  $9AC6           ; Unknown 9xxx instruction
$D08    $15F2   JP       $5F2            ; Jump to 5F2
$D0A    $6D5A   LD       VD, #5A         ; Load 90 into VD
$D0C    $B855   JP       V0, $855        ; Jump to V0 + 855
$D0E    $9289   UNKNOWN  $9289           ; Unknown 9xxx instruction
$D10    $BB0F   JP       V0, $B0F        ; Jump to V0 + B0F
$D12    $E9E7   UNKNOWN  $E9E7           ; Unknown Exxx instruction
$D14    $D115   DRW      V1, V1, #5      ; Draw 5-byte sprite at V1, V1
$D16    $E9C8   UNKNOWN  $E9C8           ; Unknown Exxx instruction
$D18    $F247   UNKNOWN  F247            ; Unknown Fxxx instruction
$D1A    $85D6   SHR      V5              ; V5 >>= 1, VF = LSB
$D1C    $5250   SE       V2, V5          ; Skip if V2 == V5
$D1E    $586F   UNKNOWN  $586F           ; Unknown 5xxx instruction
$D20    $47AD   SNE      V7, #AD         ; Skip if V7 != 173
$D22    $1A69   JP       $A69            ; Jump to A69
$D24    $37CE   SE       V7, #CE         ; Skip if V7 == 206
$D26    $B020   JP       V0, $020        ; Jump to V0 + 020
$D28    $19D2   JP       $9D2            ; Jump to 9D2
$D2A    $1F82   JP       $F82            ; Jump to F82
$D2C    $C7BE   RND      V7, #BE         ; V7 = random & BE
$D2E    $07F0   SYS      $7F0            ; System call to 7F0
$D30    $6669   LD       V6, #69         ; Load 105 into V6
$D32    $6C3A   LD       VC, #3A         ; Load 58 into VC
$D34    $C24A   RND      V2, #4A         ; V2 = random & 4A
$D36    $FD6F   UNKNOWN  FD6F            ; Unknown Fxxx instruction
$D38    $5426   UNKNOWN  $5426           ; Unknown 5xxx instruction
$D3A    $7383   ADD      V3, #83         ; Add 131 to V3
$D3C    $237A   CALL     $37A            ; Call subroutine at 37A
$D3E    $5AB7   UNKNOWN  $5AB7           ; Unknown 5xxx instruction
$D40    $A86D   LD       I, $86D         ; Load 86D into I
$D42    $180F   JP       $80F            ; Jump to 80F
$D44    $0A3F   SYS      $A3F            ; System call to A3F
$D46    $1537   JP       $537            ; Jump to 537
$D48    $73B8   ADD      V3, #B8         ; Add 184 to V3
$D4A    $2BD2   CALL     $BD2            ; Call subroutine at BD2
$D4C    $57D7   UNKNOWN  $57D7           ; Unknown 5xxx instruction
$D4E    $2A79   CALL     $A79            ; Call subroutine at A79
$D50    $C3FF   RND      V3, #FF         ; V3 = random & FF
$D52    $F566   UNKNOWN  F566            ; Unknown Fxxx instruction
$D54    $9153   UNKNOWN  $9153           ; Unknown 9xxx instruction
$D56    $C781   RND      V7, #81         ; V7 = random & 81
$D58    $0903   SYS      $903            ; System call to 903
$D5A    $AD27   LD       I, $D27         ; Load D27 into I
$D5C    $BB9B   JP       V0, $B9B        ; Jump to V0 + B9B
$D5E    $E085   UNKNOWN  $E085           ; Unknown Exxx instruction
$D60    $DCDE   DRW      VC, VD, #E      ; Draw 14-byte sprite at VC, VD
$D62    $F7A5   UNKNOWN  F7A5            ; Unknown Fxxx instruction
$D64    $50C7   UNKNOWN  $50C7           ; Unknown 5xxx instruction
$D66    $8E20   LD       VE, V2          ; VE = V2
$D68    $2CDC   CALL     $CDC            ; Call subroutine at CDC
$D6A    $5027   UNKNOWN  $5027           ; Unknown 5xxx instruction
$D6C    $9DD4   UNKNOWN  $9DD4           ; Unknown 9xxx instruction
$D6E    $4E10   SNE      VE, #10         ; Skip if VE != 16
$D70    $592E   UNKNOWN  $592E           ; Unknown 5xxx instruction
$D72    $390C   SE       V9, #0C         ; Skip if V9 == 12
$D74    $8023   XOR      V0, V2          ; V0 ^= V2
$D76    $DE87   DRW      VE, V8, #7      ; Draw 7-byte sprite at VE, V8
$D78    $28C6   CALL     $8C6            ; Call subroutine at 8C6
$D7A    $77F0   ADD      V7, #F0         ; Add 240 to V7
$D7C    $A593   LD       I, $593         ; Load 593 into I
$D7E    $08BA   SYS      $8BA            ; System call to 8BA
$D80    $D589   DRW      V5, V8, #9      ; Draw 9-byte sprite at V5, V8
$D82    $A31F   LD       I, $31F         ; Load 31F into I
$D84    $F55D   UNKNOWN  F55D            ; Unknown Fxxx instruction
$D86    $AB52   LD       I, $B52         ; Load B52 into I
$D88    $63C3   LD       V3, #C3         ; Load 195 into V3
$D8A    $52B0   SE       V2, VB          ; Skip if V2 == VB
$D8C    $2A30   CALL     $A30            ; Call subroutine at A30
$D8E    $F755   LD       [I], V7         ; Store V0-V7 at I
$D90    $B6C9   JP       V0, $6C9        ; Jump to V0 + 6C9
$D92    $D6E8   DRW      V6, VE, #8      ; Draw 8-byte sprite at V6, VE
$D94    $762B   ADD      V6, #2B         ; Add 43 to V6
$D96    $59E6   UNKNOWN  $59E6           ; Unknown 5xxx instruction
$D98    $26FD   CALL     $6FD            ; Call subroutine at 6FD
$D9A    $1FA6   JP       $FA6            ; Jump to FA6
$D9C    $EFA4   UNKNOWN  $EFA4           ; Unknown Exxx instruction
$D9E    $ADFC   LD       I, $DFC         ; Load DFC into I
$DA0    $A846   LD       I, $846         ; Load 846 into I
$DA2    $CBD1   RND      VB, #D1         ; VB = random & D1
$DA4    $C2F4   RND      V2, #F4         ; V2 = random & F4
$DA6    $FD45   UNKNOWN  FD45            ; Unknown Fxxx instruction
$DA8    $5D39   UNKNOWN  $5D39           ; Unknown 5xxx instruction
$DAA    $CB06   RND      VB, #06         ; VB = random & 06
$DAC    $22E9   CALL     $2E9            ; Call subroutine at 2E9
$DAE    $ADAD   LD       I, $DAD         ; Load DAD into I
$DB0    $51C7   UNKNOWN  $51C7           ; Unknown 5xxx instruction
$DB2    $FFB0   UNKNOWN  FFB0            ; Unknown Fxxx instruction
$DB4    $429A   SNE      V2, #9A         ; Skip if V2 != 154
$DB6    $2C96   CALL     $C96            ; Call subroutine at C96
$DB8    $05AB   SYS      $5AB            ; System call to 5AB
$DBA    $068C   SYS      $68C            ; System call to 68C
$DBC    $DAE1   DRW      VA, VE, #1      ; Draw 1-byte sprite at VA, VE
$DBE    $9667   UNKNOWN  $9667           ; Unknown 9xxx instruction
$DC0    $87C3   XOR      V7, VC          ; V7 ^= VC
$DC2    $6D51   LD       VD, #51         ; Load 81 into VD
$DC4    $2A73   CALL     $A73            ; Call subroutine at A73
$DC6    $C526   RND      V5, #26         ; V5 = random & 26
$DC8    $0EFD   SYS      $EFD            ; System call to EFD
$DCA    $D43E   DRW      V4, V3, #E      ; Draw 14-byte sprite at V4, V3
$DCC    $E1F7   UNKNOWN  $E1F7           ; Unknown Exxx instruction
$DCE    $B799   JP       V0, $799        ; Jump to V0 + 799
$DD0    $1ADA   JP       $ADA            ; Jump to ADA
$DD2    $715C   ADD      V1, #5C         ; Add 92 to V1
$DD4    $8DB9   UNKNOWN  8DB9            ; Unknown 8xxx instruction
$DD6    $EBFD   UNKNOWN  $EBFD           ; Unknown Exxx instruction
$DD8    $0D1B   SYS      $D1B            ; System call to D1B
$DDA    $8E83   XOR      VE, V8          ; VE ^= V8
$DDC    $C00E   RND      V0, #0E         ; V0 = random & 0E
$DDE    $EE99   UNKNOWN  $EE99           ; Unknown Exxx instruction
$DE0    $3B8A   SE       VB, #8A         ; Skip if VB == 138
$DE2    $D4C8   DRW      V4, VC, #8      ; Draw 8-byte sprite at V4, VC
$DE4    $0918   SYS      $918            ; System call to 918
$DE6    $AD29   LD       I, $D29         ; Load D29 into I
$DE8    $E4DC   UNKNOWN  $E4DC           ; Unknown Exxx instruction
$DEA    $9322   UNKNOWN  $9322           ; Unknown 9xxx instruction
$DEC    $3486   SE       V4, #86         ; Skip if V4 == 134
$DEE    $DF0D   DRW      VF, V0, #D      ; Draw 13-byte sprite at VF, V0
$DF0    $B892   JP       V0, $892        ; Jump to V0 + 892
$DF2    $3732   SE       V7, #32         ; Skip if V7 == 50
$DF4    $0CEA   SYS      $CEA            ; System call to CEA
$DF6    $E8BE   UNKNOWN  $E8BE           ; Unknown Exxx instruction
$DF8    $672F   LD       V7, #2F         ; Load 47 into V7
$DFA    $D441   DRW      V4, V4, #1      ; Draw 1-byte sprite at V4, V4
$DFC    $967F   UNKNOWN  $967F           ; Unknown 9xxx instruction
$DFE    $9081   UNKNOWN  $9081           ; Unknown 9xxx instruction
$E00    $896F   UNKNOWN  896F            ; Unknown 8xxx instruction
$E02    $BB5C   JP       V0, $B5C        ; Jump to V0 + B5C
$E04    $B23F   JP       V0, $23F        ; Jump to V0 + 23F
$E06    $ABCF   LD       I, $BCF         ; Load BCF into I
$E08    $FD78   UNKNOWN  FD78            ; Unknown Fxxx instruction
$E0A    $DB55   DRW      VB, V5, #5      ; Draw 5-byte sprite at VB, V5
$E0C    $2A1F   CALL     $A1F            ; Call subroutine at A1F
$E0E    $33E2   SE       V3, #E2         ; Skip if V3 == 226
$E10    $67CF   LD       V7, #CF         ; Load 207 into V7
$E12    $9628   UNKNOWN  $9628           ; Unknown 9xxx instruction
$E14    $E0AD   UNKNOWN  $E0AD           ; Unknown Exxx instruction
$E16    $6DA9   LD       VD, #A9         ; Load 169 into VD
$E18    $E376   UNKNOWN  $E376           ; Unknown Exxx instruction
$E1A    $590E   UNKNOWN  $590E           ; Unknown 5xxx instruction
$E1C    $5D27   UNKNOWN  $5D27           ; Unknown 5xxx instruction
$E1E    $DFDD   DRW      VF, VD, #D      ; Draw 13-byte sprite at VF, VD
$E20    $0940   SYS      $940            ; System call to 940
$E22    $871B   UNKNOWN  871B            ; Unknown 8xxx instruction
$E24    $CCBD   RND      VC, #BD         ; VC = random & BD
$E26    $27C6   CALL     $7C6            ; Call subroutine at 7C6
$E28    $1B3F   JP       $B3F            ; Jump to B3F
$E2A    $F6FF   UNKNOWN  F6FF            ; Unknown Fxxx instruction
$E2C    $72D0   ADD      V2, #D0         ; Add 208 to V2
$E2E    $E47E   UNKNOWN  $E47E           ; Unknown Exxx instruction
$E30    $BE1C   JP       V0, $E1C        ; Jump to V0 + E1C
$E32    $A972   LD       I, $972         ; Load 972 into I
$E34    $D975   DRW      V9, V7, #5      ; Draw 5-byte sprite at V9, V7
$E36    $1033   JP       $033            ; Jump to 033
$E38    $A8BD   LD       I, $8BD         ; Load 8BD into I
$E3A    $6CF4   LD       VC, #F4         ; Load 244 into VC
$E3C    $2DDE   CALL     $DDE            ; Call subroutine at DDE
$E3E    $A5CB   LD       I, $5CB         ; Load 5CB into I
$E40    $8C90   LD       VC, V9          ; VC = V9
$E42    $C555   RND      V5, #55         ; V5 = random & 55
$E44    $314B   SE       V1, #4B         ; Skip if V1 == 75
$E46    $30C2   SE       V0, #C2         ; Skip if V0 == 194
$E48    $9992   UNKNOWN  $9992           ; Unknown 9xxx instruction
$E4A    $260E   CALL     $60E            ; Call subroutine at 60E
$E4C    $D6D9   DRW      V6, VD, #9      ; Draw 9-byte sprite at V6, VD
$E4E    $CDB5   RND      VD, #B5         ; VD = random & B5
$E50    $0974   SYS      $974            ; System call to 974
$E52    $3606   SE       V6, #06         ; Skip if V6 == 6
$E54    $8AB2   AND      VA, VB          ; VA &= VB
$E56    $36FC   SE       V6, #FC         ; Skip if V6 == 252
$E58    $05AB   SYS      $5AB            ; System call to 5AB
$E5A    $4D1E   SNE      VD, #1E         ; Skip if VD != 30
$E5C    $335B   SE       V3, #5B         ; Skip if V3 == 91
$E5E    $5544   UNKNOWN  $5544           ; Unknown 5xxx instruction
$E60    $D135   DRW      V1, V3, #5      ; Draw 5-byte sprite at V1, V3
$E62    $8154   ADD      V1, V5          ; V1 += V5, VF = carry
$E64    $F8E6   UNKNOWN  F8E6            ; Unknown Fxxx instruction
$E66    $10F5   JP       $0F5            ; Jump to 0F5
$E68    $63F6   LD       V3, #F6         ; Load 246 into V3
$E6A    $2F5F   CALL     $F5F            ; Call subroutine at F5F
$E6C    $9475   UNKNOWN  $9475           ; Unknown 9xxx instruction
$E6E    $A7FE   LD       I, $7FE         ; Load 7FE into I
$E70    $7D44   ADD      VD, #44         ; Add 68 to VD
$E72    $6AAE   LD       VA, #AE         ; Load 174 into VA
$E74    $9371   UNKNOWN  $9371           ; Unknown 9xxx instruction
$E76    $9D80   SNE      VD, V8          ; Skip if VD != V8
$E78    $6C10   LD       VC, #10         ; Load 16 into VC
$E7A    $6329   LD       V3, #29         ; Load 41 into V3
$E7C    $3D37   SE       VD, #37         ; Skip if VD == 55
$E7E    $6FAC   LD       VF, #AC         ; Load 172 into VF
$E80    $4C9F   SNE      VC, #9F         ; Skip if VC != 159
$E82    $B295   JP       V0, $295        ; Jump to V0 + 295
$E84    $CD61   RND      VD, #61         ; VD = random & 61
$E86    $FF48   UNKNOWN  FF48            ; Unknown Fxxx instruction
$E88    $F291   UNKNOWN  F291            ; Unknown Fxxx instruction
$E8A    $453D   SNE      V5, #3D         ; Skip if V5 != 61
$E8C    $C71C   RND      V7, #1C         ; V7 = random & 1C
$E8E    $81D1   OR       V1, VD          ; V1 |= VD
$E90    $3F92   SE       VF, #92         ; Skip if VF == 146
$E92    $DF31   DRW      VF, V3, #1      ; Draw 1-byte sprite at VF, V3
$E94    $686B   LD       V8, #6B         ; Load 107 into V8
$E96    $83ED   UNKNOWN  83ED            ; Unknown 8xxx instruction
$E98    $F5EC   UNKNOWN  F5EC            ; Unknown Fxxx instruction
$E9A    $428E   SNE      V2, #8E         ; Skip if V2 != 142
$E9C    $9B57   UNKNOWN  $9B57           ; Unknown 9xxx instruction
$E9E    $C779   RND      V7, #79         ; V7 = random & 79
$EA0    $10B7   JP       $0B7            ; Jump to 0B7
$EA2    $56F2   UNKNOWN  $56F2           ; Unknown 5xxx instruction
$EA4    $98D8   UNKNOWN  $98D8           ; Unknown 9xxx instruction
$EA6    $560E   UNKNOWN  $560E           ; Unknown 5xxx instruction
$EA8    $7E29   ADD      VE, #29         ; Add 41 to VE
$EAA    $F9A2   UNKNOWN  F9A2            ; Unknown Fxxx instruction
$EAC    $2054   CALL     $054            ; Call subroutine at 054
$EAE    $E094   UNKNOWN  $E094           ; Unknown Exxx instruction
$EB0    $E69B   UNKNOWN  $E69B           ; Unknown Exxx instruction
$EB2    $4FA9   SNE      VF, #A9         ; Skip if VF != 169
$EB4    $C3D5   RND      V3, #D5         ; V3 = random & D5
$EB6    $CCF4   RND      VC, #F4         ; VC = random & F4
$EB8    $AFEE   LD       I, $FEE         ; Load FEE into I
$EBA    $661B   LD       V6, #1B         ; Load 27 into V6
$EBC    $BC40   JP       V0, $C40        ; Jump to V0 + C40
$EBE    $3604   SE       V6, #04         ; Skip if V6 == 4
$EC0    $F42A   UNKNOWN  F42A            ; Unknown Fxxx instruction
$EC2    $81AA   UNKNOWN  81AA            ; Unknown 8xxx instruction
$EC4    $D7C4   DRW      V7, VC, #4      ; Draw 4-byte sprite at V7, VC
$EC6    $A271   LD       I, $271         ; Load 271 into I
$EC8    $4A02   SNE      VA, #02         ; Skip if VA != 2
$ECA    $939E   UNKNOWN  $939E           ; Unknown 9xxx instruction
$ECC    $E2E6   UNKNOWN  $E2E6           ; Unknown Exxx instruction
$ECE    $EE47   UNKNOWN  $EE47           ; Unknown Exxx instruction
$ED0    $DC65   DRW      VC, V6, #5      ; Draw 5-byte sprite at VC, V6
$ED2    $CB1A   RND      VB, #1A         ; VB = random & 1A
$ED4    $E1F2   UNKNOWN  $E1F2           ; Unknown Exxx instruction
$ED6    $6653   LD       V6, #53         ; Load 83 into V6
$ED8    $5BD6   UNKNOWN  $5BD6           ; Unknown 5xxx instruction
$EDA    $EC5F   UNKNOWN  $EC5F           ; Unknown Exxx instruction
$EDC    $C1D9   RND      V1, #D9         ; V1 = random & D9
$EDE    $8F39   UNKNOWN  8F39            ; Unknown 8xxx instruction
$EE0    $9B2D   UNKNOWN  $9B2D           ; Unknown 9xxx instruction
$EE2    $9833   UNKNOWN  $9833           ; Unknown 9xxx instruction
$EE4    $CE24   RND      VE, #24         ; VE = random & 24
$EE6    $C4F0   RND      V4, #F0         ; V4 = random & F0
$EE8    $2C51   CALL     $C51            ; Call subroutine at C51
$EEA    $BF71   JP       V0, $F71        ; Jump to V0 + F71
$EEC    $2718   CALL     $718            ; Call subroutine at 718
$EEE    $B1C3   JP       V0, $1C3        ; Jump to V0 + 1C3
$EF0    $5C2A   UNKNOWN  $5C2A           ; Unknown 5xxx instruction
$EF2    $8069   UNKNOWN  8069            ; Unknown 8xxx instruction
$EF4    $5483   UNKNOWN  $5483           ; Unknown 5xxx instruction
$EF6    $5BA5   UNKNOWN  $5BA5           ; Unknown 5xxx instruction
$EF8    $9D70   SNE      VD, V7          ; Skip if VD != V7
$EFA    $F260   UNKNOWN  F260            ; Unknown Fxxx instruction
$EFC    $18A0   JP       $8A0            ; Jump to 8A0
$EFE    $6A50   LD       VA, #50         ; Load 80 into VA
$F00    $802D   UNKNOWN  802D            ; Unknown 8xxx instruction
$F02    $6352   LD       V3, #52         ; Load 82 into V3
$F04    $CED9   RND      VE, #D9         ; VE = random & D9
$F06    $9E94   UNKNOWN  $9E94           ; Unknown 9xxx instruction
$F08    $A171   LD       I, $171         ; Load 171 into I
$F0A    $CD84   RND      VD, #84         ; VD = random & 84
$F0C    $DA91   DRW      VA, V9, #1      ; Draw 1-byte sprite at VA, V9
$F0E    $21C9   CALL     $1C9            ; Call subroutine at 1C9
$F10    $E5EA   UNKNOWN  $E5EA           ; Unknown Exxx instruction
$F12    $71AB   ADD      V1, #AB         ; Add 171 to V1
$F14    $E7B1   UNKNOWN  $E7B1           ; Unknown Exxx instruction
$F16    $2D54   CALL     $D54            ; Call subroutine at D54
$F18    $09AF   SYS      $9AF            ; System call to 9AF
$F1A    $7E22   ADD      VE, #22         ; Add 34 to VE
$F1C    $15EB   JP       $5EB            ; Jump to 5EB
$F1E    $B1BE   JP       V0, $1BE        ; Jump to V0 + 1BE
$F20    $9D06   UNKNOWN  $9D06           ; Unknown 9xxx instruction
$F22    $79E4   ADD      V9, #E4         ; Add 228 to V9
$F24    $1EB6   JP       $EB6            ; Jump to EB6
$F26    $6714   LD       V7, #14         ; Load 20 into V7
$F28    $9370   SNE      V3, V7          ; Skip if V3 != V7
$F2A    $3E79   SE       VE, #79         ; Skip if VE == 121
$F2C    $3D20   SE       VD, #20         ; Skip if VD == 32
$F2E    $2CE8   CALL     $CE8            ; Call subroutine at CE8
$F30    $644B   LD       V4, #4B         ; Load 75 into V4
$F32    $5462   UNKNOWN  $5462           ; Unknown 5xxx instruction
$F34    $38F2   SE       V8, #F2         ; Skip if V8 == 242
$F36    $9FD0   SNE      VF, VD          ; Skip if VF != VD
$F38    $7CA1   ADD      VC, #A1         ; Add 161 to VC
$F3A    $B228   JP       V0, $228        ; Jump to V0 + 228
$F3C    $2FC3   CALL     $FC3            ; Call subroutine at FC3
$F3E    $14A1   JP       $4A1            ; Jump to 4A1
$F40    $D79E   DRW      V7, V9, #E      ; Draw 14-byte sprite at V7, V9
$F42    $476C   SNE      V7, #6C         ; Skip if V7 != 108
$F44    $C419   RND      V4, #19         ; V4 = random & 19
$F46    $9F01   UNKNOWN  $9F01           ; Unknown 9xxx instruction
$F48    $CB90   RND      VB, #90         ; VB = random & 90
$F4A    $70D7   ADD      V0, #D7         ; Add 215 to V0
$F4C    $7162   ADD      V1, #62         ; Add 98 to V1
$F4E    $3B62   SE       VB, #62         ; Skip if VB == 98
$F50    $4605   SNE      V6, #05         ; Skip if V6 != 5
$F52    $BF4D   JP       V0, $F4D        ; Jump to V0 + F4D
$F54    $73A2   ADD      V3, #A2         ; Add 162 to V3
$F56    $47AC   SNE      V7, #AC         ; Skip if V7 != 172
$F58    $A65F   LD       I, $65F         ; Load 65F into I
$F5A    $A825   LD       I, $825         ; Load 825 into I
$F5C    $4F36   SNE      VF, #36         ; Skip if VF != 54
$F5E    $483E   SNE      V8, #3E         ; Skip if V8 != 62
$F60    $C320   RND      V3, #20         ; V3 = random & 20
$F62    $DC11   DRW      VC, V1, #1      ; Draw 1-byte sprite at VC, V1
$F64    $509E   UNKNOWN  $509E           ; Unknown 5xxx instruction
$F66    $68B7   LD       V8, #B7         ; Load 183 into V8
$F68    $CE22   RND      VE, #22         ; VE = random & 22
$F6A    $0E9D   SYS      $E9D            ; System call to E9D
$F6C    $99BD   UNKNOWN  $99BD           ; Unknown 9xxx instruction
$F6E    $3966   SE       V9, #66         ; Skip if V9 == 102
$F70    $BCD8   JP       V0, $CD8        ; Jump to V0 + CD8
$F72    $F33C   UNKNOWN  F33C            ; Unknown Fxxx instruction
$F74    $AD18   LD       I, $D18         ; Load D18 into I
$F76    $0F0B   SYS      $F0B            ; System call to F0B
$F78    $6C39   LD       VC, #39         ; Load 57 into VC
$F7A    $98BD   UNKNOWN  $98BD           ; Unknown 9xxx instruction
$F7C    $BD26   JP       V0, $D26        ; Jump to V0 + D26
$F7E    $FE67   UNKNOWN  FE67            ; Unknown Fxxx instruction
$F80    $5D3E   UNKNOWN  $5D3E           ; Unknown 5xxx instruction
$F82    $9DC8   UNKNOWN  $9DC8           ; Unknown 9xxx instruction
$F84    $6F4B   LD       VF, #4B         ; Load 75 into VF
$F86    $A4A7   LD       I, $4A7         ; Load 4A7 into I
$F88    $876F   UNKNOWN  876F            ; Unknown 8xxx instruction
$F8A    $05A5   SYS      $5A5            ; System call to 5A5
$F8C    $8D49   UNKNOWN  8D49            ; Unknown 8xxx instruction
$F8E    $FD13   UNKNOWN  FD13            ; Unknown Fxxx instruction
$F90    $1D8B   JP       $D8B            ; Jump to D8B
$F92    $1107   JP       $107            ; Jump to 107
$F94    $8318   UNKNOWN  8318            ; Unknown 8xxx instruction
$F96    $9C65   UNKNOWN  $9C65           ; Unknown 9xxx instruction
$F98    $2D51   CALL     $D51            ; Call subroutine at D51
$F9A    $885E   SHL      V8              ; V8 <<= 1, VF = MSB
$F9C    $D030   DRW      V0, V3, #0      ; Draw 0-byte sprite at V0, V3
$F9E    $4C23   SNE      VC, #23         ; Skip if VC != 35
$FA0    $5096   UNKNOWN  $5096           ; Unknown 5xxx instruction
$FA2    $468A   SNE      V6, #8A         ; Skip if V6 != 138
$FA4    $7422   ADD      V4, #22         ; Add 34 to V4
$FA6    $D5AA   DRW      V5, VA, #A      ; Draw 10-byte sprite at V5, VA
$FA8    $C8E6   RND      V8, #E6         ; V8 = random & E6
$FAA    $4045   SNE      V0, #45         ; Skip if V0 != 69
$FAC    $DDD9   DRW      VD, VD, #9      ; Draw 9-byte sprite at VD, VD
$FAE    $4D95   SNE      VD, #95         ; Skip if VD != 149
$FB0    $BD73   JP       V0, $D73        ; Jump to V0 + D73
$FB2    $777E   ADD      V7, #7E         ; Add 126 to V7
$FB4    $7754   ADD      V7, #54         ; Add 84 to V7
$FB6    $97B4   UNKNOWN  $97B4           ; Unknown 9xxx instruction
$FB8    $9868   UNKNOWN  $9868           ; Unknown 9xxx instruction
$FBA    $FCCE   UNKNOWN  FCCE            ; Unknown Fxxx instruction
$FBC    $2136   CALL     $136            ; Call subroutine at 136
$FBE    $4E6C   SNE      VE, #6C         ; Skip if VE != 108
$FC0    $A908   LD       I, $908         ; Load 908 into I
$FC2    $3FD2   SE       VF, #D2         ; Skip if VF == 210
$FC4    $15E3   JP       $5E3            ; Jump to 5E3
$FC6    $FFCB   UNKNOWN  FFCB            ; Unknown Fxxx instruction
$FC8    $CD13   RND      VD, #13         ; VD = random & 13
$FCA    $90B1   UNKNOWN  $90B1           ; Unknown 9xxx instruction
$FCC    $DC82   DRW      VC, V8, #2      ; Draw 2-byte sprite at VC, V8
$FCE    $9007   UNKNOWN  $9007           ; Unknown 9xxx instruction
$FD0    $F80B   UNKNOWN  F80B            ; Unknown Fxxx instruction
$FD2    $FF7F   UNKNOWN  FF7F            ; Unknown Fxxx instruction
$FD4    $8A23   XOR      VA, V2          ; VA ^= V2
$FD6    $BA5E   JP       V0, $A5E        ; Jump to V0 + A5E
$FD8    $3B1B   SE       VB, #1B         ; Skip if VB == 27
$FDA    $3BD5   SE       VB, #D5         ; Skip if VB == 213
$FDC    $8AE5   SUB      VA, VE          ; VA -= VE, VF = !borrow
$FDE    $45E2   SNE      V5, #E2         ; Skip if V5 != 226
$FE0    $826A   UNKNOWN  826A            ; Unknown 8xxx instruction
$FE2    $6040   LD       V0, #40         ; Load 64 into V0
$FE4    $E40D   UNKNOWN  $E40D           ; Unknown Exxx instruction
$FE6    $03A8   SYS      $3A8            ; System call to 3A8
$FE8    $F5D6   UNKNOWN  F5D6            ; Unknown Fxxx instruction
$FEA    $8E5B   UNKNOWN  8E5B            ; Unknown 8xxx instruction
$FEC    $6E08   LD       VE, #08         ; Load 8 into VE
$FEE    $3C31   SE       VC, #31         ; Skip if VC == 49
$FF0    $4BB8   SNE      VB, #B8         ; Skip if VB != 184
$FF2    $6507   LD       V5, #07         ; Load 7 into V5
$FF4    $D6AB   DRW      V6, VA, #B      ; Draw 11-byte sprite at V6, VA
$FF6    $96AA   UNKNOWN  $96AA           ; Unknown 9xxx instruction
$FF8    $25B8   CALL     $5B8            ; Call subroutine at 5B8
$FFA    $0E83   SYS      $E83            ; System call to E83
$FFC    $F293   UNKNOWN  F293            ; Unknown Fxxx instruction
$FFE    $E52A   UNKNOWN  $E52A           ; Unknown Exxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 601 (33.5%)
  LD      : 214 (11.9%)
  JP      : 186 (10.4%)
  CALL    : 118 ( 6.6%)
  SNE     : 117 ( 6.5%)
  RND     : 109 ( 6.1%)
  DRW     : 107 ( 6.0%)
  SE      : 106 ( 5.9%)
  ADD     :  97 ( 5.4%)
  SYS     :  97 ( 5.4%)
  XOR     :  10 ( 0.6%)
  OR      :   6 ( 0.3%)
  SHL     :   5 ( 0.3%)
  AND     :   5 ( 0.3%)
  SUBN    :   5 ( 0.3%)
  SHR     :   4 ( 0.2%)
  SUB     :   4 ( 0.2%)
  SKP     :   1 ( 0.1%)

Memory Operations: 311 (17.4%)
Arithmetic Operations: 127 (7.1%)
