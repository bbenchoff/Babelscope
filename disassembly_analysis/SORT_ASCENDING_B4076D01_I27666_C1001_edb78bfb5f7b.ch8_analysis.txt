
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B4076D01_I27666_C1001_edb78bfb5f7b.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 4076
Instance: 27666
Direction: ascending
Final Array: [1, 3, 3, 16, 148, 161, 193, 218]
Operations: R:0 W:1 C:284 S:1

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 124
Sort Array References:
  $218: LD I, $4B0 ; Load 4B0 into I
  $22C: LD I, $98A ; Load 98A into I
  $240: LD I, $B81 ; Load B81 into I
  $250: LD I, $8EE ; Load 8EE into I
  $2B6: LD I, $EB5 ; Load EB5 into I
  $2D6: LD I, $F72 ; Load F72 into I
  $2E2: LD I, $69C ; Load 69C into I
  $34C: LD I, $D28 ; Load D28 into I
  $374: LD I, $1CF ; Load 1CF into I
  $3B8: LD I, $7F7 ; Load 7F7 into I
  $3C2: LD V0, [I] ; Load V0-V0 from I
  $3C4: LD I, $C6D ; Load C6D into I
  $3C6: LD I, $B31 ; Load B31 into I
  $3E6: LD I, $9B4 ; Load 9B4 into I
  $3EE: LD I, $9FF ; Load 9FF into I
  $43A: LD I, $3E4 ; Load 3E4 into I
  $45A: LD I, $9BF ; Load 9BF into I
  $46A: LD I, $FBD ; Load FBD into I
  $476: LD I, $242 ; Load 242 into I
  $4A8: LD I, $317 ; Load 317 into I
  $4B6: LD I, $16A ; Load 16A into I
  $4D0: LD I, $31A ; Load 31A into I
  $4E6: LD I, $F23 ; Load F23 into I
  $4FC: LD I, $BB4 ; Load BB4 into I
  $506: LD I, $4BB ; Load 4BB into I
  $510: LD I, $7CB ; Load 7CB into I
  $518: LD I, $495 ; Load 495 into I
  $522: LD I, $57E ; Load 57E into I
  $526: LD I, $815 ; Load 815 into I
  $53E: LD I, $096 ; Load 096 into I
  $562: LD I, $C12 ; Load C12 into I
  $590: LD I, $8D5 ; Load 8D5 into I
  $5A8: LD I, $C8F ; Load C8F into I
  $5AE: LD I, $D34 ; Load D34 into I
  $5BE: LD I, $184 ; Load 184 into I
  $5E6: LD I, $DA1 ; Load DA1 into I
  $600: LD I, $AC8 ; Load AC8 into I
  $610: LD I, $E76 ; Load E76 into I
  $618: LD I, $A54 ; Load A54 into I
  $61A: LD I, $8CF ; Load 8CF into I
  $61E: LD I, $B90 ; Load B90 into I
  $638: LD [I], V9 ; Store V0-V9 at I
  $650: LD I, $9A0 ; Load 9A0 into I
  $67A: LD I, $7CF ; Load 7CF into I
  $69E: LD I, $18C ; Load 18C into I
  $6B2: LD I, $CCE ; Load CCE into I
  $6F6: LD I, $705 ; Load 705 into I
  $71E: LD I, $EB8 ; Load EB8 into I
  $72E: LD I, $8D1 ; Load 8D1 into I
  $760: LD I, $9EC ; Load 9EC into I
  $77A: LD I, $5AC ; Load 5AC into I
  $7A4: LD I, $F69 ; Load F69 into I
  $7B2: LD I, $277 ; Load 277 into I
  $7CC: LD I, $C07 ; Load C07 into I
  $7E2: LD I, $E2C ; Load E2C into I
  $882: LD I, $184 ; Load 184 into I
  $88C: LD I, $8CB ; Load 8CB into I
  $8BC: LD I, $7A6 ; Load 7A6 into I
  $8D6: LD I, $EAF ; Load EAF into I
  $8F2: LD I, $E5E ; Load E5E into I
  $900: LD I, $D97 ; Load D97 into I
  $90A: LD I, $C10 ; Load C10 into I
  $920: LD I, $3CC ; Load 3CC into I
  $952: LD I, $764 ; Load 764 into I
  $984: LD I, $393 ; Load 393 into I
  $9B8: LD I, $359 ; Load 359 into I
  $9CE: LD I, $0CE ; Load 0CE into I
  $9D4: LD I, $63F ; Load 63F into I
  $9F2: LD I, $5DB ; Load 5DB into I
  $A2E: LD I, $3CE ; Load 3CE into I
  $A58: LD I, $568 ; Load 568 into I
  $A60: LD I, $9BA ; Load 9BA into I
  $A68: LD I, $4E1 ; Load 4E1 into I
  $A6E: LD I, $7CA ; Load 7CA into I
  $A7E: LD I, $869 ; Load 869 into I
  $A9A: LD I, $590 ; Load 590 into I
  $AC2: LD I, $10E ; Load 10E into I
  $ACE: LD I, $C2E ; Load C2E into I
  $AFC: LD I, $8C8 ; Load 8C8 into I
  $B14: LD I, $173 ; Load 173 into I
  $B1E: LD I, $88F ; Load 88F into I
  $B44: LD I, $9D1 ; Load 9D1 into I
  $B78: LD I, $475 ; Load 475 into I
  $BD8: LD I, $AC3 ; Load AC3 into I
  $BDC: LD I, $2A1 ; Load 2A1 into I
  $BE2: LD I, $134 ; Load 134 into I
  $BE8: LD I, $A66 ; Load A66 into I
  $BF4: LD I, $049 ; Load 049 into I
  $C00: LD I, $1D1 ; Load 1D1 into I
  $C02: LD I, $69C ; Load 69C into I
  $C10: LD I, $831 ; Load 831 into I
  $C54: LD I, $454 ; Load 454 into I
  $C8E: LD I, $90C ; Load 90C into I
  $CA2: LD I, $E73 ; Load E73 into I
  $CAC: LD I, $EF8 ; Load EF8 into I
  $CBE: LD I, $A58 ; Load A58 into I
  $CC6: LD I, $C07 ; Load C07 into I
  $CDC: LD I, $923 ; Load 923 into I
  $CE8: LD I, $26D ; Load 26D into I
  $CEC: LD I, $42E ; Load 42E into I
  $D06: LD I, $90E ; Load 90E into I
  $D4E: LD I, $A35 ; Load A35 into I
  $D56: LD I, $BC9 ; Load BC9 into I
  $D66: LD I, $AA5 ; Load AA5 into I
  $DAC: LD I, $0D0 ; Load 0D0 into I
  $DBA: LD I, $723 ; Load 723 into I
  $DCC: LD I, $3A0 ; Load 3A0 into I
  $DE0: LD I, $A03 ; Load A03 into I
  $E42: LD I, $D94 ; Load D94 into I
  $E92: LD I, $CFF ; Load CFF into I
  $EAC: LD I, $FD5 ; Load FD5 into I
  $EBC: LD I, $86E ; Load 86E into I
  $EC6: LD I, $FE0 ; Load FE0 into I
  $EDE: LD I, $628 ; Load 628 into I
  $F0E: LD I, $AAC ; Load AAC into I
  $F32: LD I, $CE1 ; Load CE1 into I
  $F46: LD I, $63A ; Load 63A into I
  $F5C: LD I, $F45 ; Load F45 into I
  $F80: LD I, $D51 ; Load D51 into I
  $F90: LD I, $533 ; Load 533 into I
  $FC4: LD I, $381 ; Load 381 into I
  $FE2: LD I, $EE0 ; Load EE0 into I
  $FE8: LD I, $372 ; Load 372 into I
  $FF8: LD I, $620 ; Load 620 into I

CONTROL FLOW ANALYSIS:
Jumps: 223
Calls: 111
Branches: 229
Loops: 127
Loop Structures:
  $274 -> $0AA (backward jump)
  $2CA -> $13F (backward jump)
  $316 -> $28F (backward jump)
  $33C -> $080 (backward jump)
  $3DC -> $31E (backward jump)
  $4EE -> $472 (backward jump)
  $4FA -> $378 (backward jump)
  $528 -> $1A3 (backward jump)
  $532 -> $383 (backward jump)
  $548 -> $2BB (backward jump)
  $58E -> $2A7 (backward jump)
  $5D2 -> $351 (backward jump)
  $5FA -> $1AA (backward jump)
  $612 -> $178 (backward jump)
  $61C -> $005 (backward jump)
  $62E -> $06D (backward jump)
  $640 -> $1D0 (backward jump)
  $68A -> $571 (backward jump)
  $6D8 -> $031 (backward jump)
  $734 -> $266 (backward jump)
  $73A -> $40D (backward jump)
  $73E -> $15E (backward jump)
  $74C -> $2C6 (backward jump)
  $756 -> $4AD (backward jump)
  $77E -> $23F (backward jump)
  $782 -> $5DB (backward jump)
  $79C -> $22D (backward jump)
  $7DC -> $648 (backward jump)
  $7E0 -> $386 (backward jump)
  $814 -> $791 (backward jump)
  $820 -> $5B9 (backward jump)
  $874 -> $870 (backward jump)
  $886 -> $701 (backward jump)
  $8CC -> $214 (backward jump)
  $8E4 -> $851 (backward jump)
  $8F8 -> $6FE (backward jump)
  $936 -> $20D (backward jump)
  $946 -> $02A (backward jump)
  $958 -> $356 (backward jump)
  $974 -> $05D (backward jump)
  $992 -> $935 (backward jump)
  $9AA -> $3D8 (backward jump)
  $9C4 -> $20A (backward jump)
  $9D6 -> $527 (backward jump)
  $A10 -> $192 (backward jump)
  $A38 -> $97B (backward jump)
  $A3E -> $29F (backward jump)
  $A48 -> $35C (backward jump)
  $A4A -> $14A (backward jump)
  $A66 -> $4AB (backward jump)
  $A8E -> $498 (backward jump)
  $ABC -> $231 (backward jump)
  $AC8 -> $64E (backward jump)
  $AD0 -> $70D (backward jump)
  $AE0 -> $097 (backward jump)
  $AEC -> $3E8 (backward jump)
  $B00 -> $801 (backward jump)
  $B06 -> $9A9 (backward jump)
  $B46 -> $852 (backward jump)
  $B6A -> $0B6 (backward jump)
  $B84 -> $A90 (backward jump)
  $B98 -> $421 (backward jump)
  $B9A -> $93F (backward jump)
  $BA2 -> $24C (backward jump)
  $BAE -> $8E7 (backward jump)
  $BB2 -> $290 (backward jump)
  $BD6 -> $5E7 (backward jump)
  $BEA -> $8B2 (backward jump)
  $BF2 -> $8B6 (backward jump)
  $C4A -> $7A1 (backward jump)
  $C60 -> $480 (backward jump)
  $C62 -> $584 (backward jump)
  $C64 -> $7F5 (backward jump)
  $C84 -> $6DC (backward jump)
  $C96 -> $80E (backward jump)
  $C98 -> $497 (backward jump)
  $CA4 -> $C14 (backward jump)
  $CAE -> $15B (backward jump)
  $CBC -> $BD8 (backward jump)
  $CC4 -> $36F (backward jump)
  $CFA -> $C0D (backward jump)
  $D2E -> $839 (backward jump)
  $D44 -> $026 (backward jump)
  $D52 -> $36C (backward jump)
  $D58 -> $25E (backward jump)
  $D62 -> $AAA (backward jump)
  $D64 -> $D20 (backward jump)
  $D70 -> $38B (backward jump)
  $D96 -> $295 (backward jump)
  $DB0 -> $C3E (backward jump)
  $DBC -> $9C8 (backward jump)
  $DC6 -> $7DF (backward jump)
  $DD6 -> $76F (backward jump)
  $DE8 -> $9BE (backward jump)
  $DEE -> $AF8 (backward jump)
  $E26 -> $B8D (backward jump)
  $E36 -> $A51 (backward jump)
  $E5A -> $680 (backward jump)
  $E78 -> $074 (backward jump)
  $E8C -> $826 (backward jump)
  $EC2 -> $C55 (backward jump)
  $ECC -> $AFB (backward jump)
  $ECE -> $B0F (backward jump)
  $ED2 -> $E64 (backward jump)
  $EE2 -> $BD2 (backward jump)
  $EF2 -> $345 (backward jump)
  $F14 -> $ED7 (backward jump)
  $F2A -> $A03 (backward jump)
  $F38 -> $D1F (backward jump)
  $F40 -> $7B1 (backward jump)
  $F4E -> $D37 (backward jump)
  $F62 -> $E72 (backward jump)
  $F6A -> $A6A (backward jump)
  $F7E -> $24E (backward jump)
  $F84 -> $966 (backward jump)
  $F88 -> $6CF (backward jump)
  $F8C -> $872 (backward jump)
  $F9E -> $153 (backward jump)
  $FA2 -> $C4C (backward jump)
  $FA8 -> $C48 (backward jump)
  $FB0 -> $D4F (backward jump)
  $FB8 -> $BD0 (backward jump)
  $FBA -> $91F (backward jump)
  $FCE -> $D69 (backward jump)
  $FDA -> $D51 (backward jump)
  $FEA -> $4F3 (backward jump)
  $FFE -> $444 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $937E   UNKNOWN  $937E           ; Unknown 9xxx instruction
$202    $151D   JP       $51D            ; Jump to 51D
$204    $91B8   UNKNOWN  $91B8           ; Unknown 9xxx instruction
$206    $66F4   LD       V6, #F4         ; Load 244 into V6
$208    $1B97   JP       $B97            ; Jump to B97
$20A    $7DA0   ADD      VD, #A0         ; Add 160 to VD
$20C    $5365   UNKNOWN  $5365           ; Unknown 5xxx instruction
$20E    $27AA   CALL     $7AA            ; Call subroutine at 7AA
$210    $58B9   UNKNOWN  $58B9           ; Unknown 5xxx instruction
$212    $89DD   UNKNOWN  89DD            ; Unknown 8xxx instruction
$214    $4212   SNE      V2, #12         ; Skip if V2 != 18
$216    $8D78   UNKNOWN  8D78            ; Unknown 8xxx instruction
$218    $A4B0   LD       I, $4B0         ; Load 4B0 into I
$21A    $E502   UNKNOWN  $E502           ; Unknown Exxx instruction
$21C    $B987   JP       V0, $987        ; Jump to V0 + 987
$21E    $C23A   RND      V2, #3A         ; V2 = random & 3A
$220    $D26B   DRW      V2, V6, #B      ; Draw 11-byte sprite at V2, V6
$222    $0924   SYS      $924            ; System call to 924
$224    $561B   UNKNOWN  $561B           ; Unknown 5xxx instruction
$226    $486A   SNE      V8, #6A         ; Skip if V8 != 106
$228    $276A   CALL     $76A            ; Call subroutine at 76A
$22A    $D776   DRW      V7, V7, #6      ; Draw 6-byte sprite at V7, V7
$22C    $A98A   LD       I, $98A         ; Load 98A into I
$22E    $38FF   SE       V8, #FF         ; Skip if V8 == 255
$230    $E6D1   UNKNOWN  $E6D1           ; Unknown Exxx instruction
$232    $D32C   DRW      V3, V2, #C      ; Draw 12-byte sprite at V3, V2
$234    $D173   DRW      V1, V7, #3      ; Draw 3-byte sprite at V1, V7
$236    $D63C   DRW      V6, V3, #C      ; Draw 12-byte sprite at V6, V3
$238    $4762   SNE      V7, #62         ; Skip if V7 != 98
$23A    $2C36   CALL     $C36            ; Call subroutine at C36
$23C    $27DD   CALL     $7DD            ; Call subroutine at 7DD
$23E    $9646   UNKNOWN  $9646           ; Unknown 9xxx instruction
$240    $AB81   LD       I, $B81         ; Load B81 into I
$242    $4CF2   SNE      VC, #F2         ; Skip if VC != 242
$244    $1254   JP       $254            ; Jump to 254
$246    $4BFD   SNE      VB, #FD         ; Skip if VB != 253
$248    $97CD   UNKNOWN  $97CD           ; Unknown 9xxx instruction
$24A    $CBAB   RND      VB, #AB         ; VB = random & AB
$24C    $F841   UNKNOWN  F841            ; Unknown Fxxx instruction
$24E    $F463   UNKNOWN  F463            ; Unknown Fxxx instruction
$250    $A8EE   LD       I, $8EE         ; Load 8EE into I
$252    $72D3   ADD      V2, #D3         ; Add 211 to V2
$254    $E56D   UNKNOWN  $E56D           ; Unknown Exxx instruction
$256    $2223   CALL     $223            ; Call subroutine at 223
$258    $65C7   LD       V5, #C7         ; Load 199 into V5
$25A    $443F   SNE      V4, #3F         ; Skip if V4 != 63
$25C    $3C88   SE       VC, #88         ; Skip if VC == 136
$25E    $25F9   CALL     $5F9            ; Call subroutine at 5F9
$260    $B48F   JP       V0, $48F        ; Jump to V0 + 48F
$262    $85C5   SUB      V5, VC          ; V5 -= VC, VF = !borrow
$264    $EF96   UNKNOWN  $EF96           ; Unknown Exxx instruction
$266    $23CB   CALL     $3CB            ; Call subroutine at 3CB
$268    $2614   CALL     $614            ; Call subroutine at 614
$26A    $60C7   LD       V0, #C7         ; Load 199 into V0
$26C    $EC2E   UNKNOWN  $EC2E           ; Unknown Exxx instruction
$26E    $24B8   CALL     $4B8            ; Call subroutine at 4B8
$270    $7280   ADD      V2, #80         ; Add 128 to V2
$272    $942E   UNKNOWN  $942E           ; Unknown 9xxx instruction
$274    $B0AA   JP       V0, $0AA        ; Jump to V0 + 0AA
$276    $0E9B   SYS      $E9B            ; System call to E9B
$278    $456C   SNE      V5, #6C         ; Skip if V5 != 108
$27A    $5D22   UNKNOWN  $5D22           ; Unknown 5xxx instruction
$27C    $8DDF   UNKNOWN  8DDF            ; Unknown 8xxx instruction
$27E    $86B9   UNKNOWN  86B9            ; Unknown 8xxx instruction
$280    $9012   UNKNOWN  $9012           ; Unknown 9xxx instruction
$282    $5C42   UNKNOWN  $5C42           ; Unknown 5xxx instruction
$284    $B4E9   JP       V0, $4E9        ; Jump to V0 + 4E9
$286    $796E   ADD      V9, #6E         ; Add 110 to V9
$288    $039A   SYS      $39A            ; System call to 39A
$28A    $9A80   SNE      VA, V8          ; Skip if VA != V8
$28C    $4610   SNE      V6, #10         ; Skip if V6 != 16
$28E    $60B4   LD       V0, #B4         ; Load 180 into V0
$290    $0A4C   SYS      $A4C            ; System call to A4C
$292    $EAAF   UNKNOWN  $EAAF           ; Unknown Exxx instruction
$294    $5D35   UNKNOWN  $5D35           ; Unknown 5xxx instruction
$296    $0CF8   SYS      $CF8            ; System call to CF8
$298    $8F9F   UNKNOWN  8F9F            ; Unknown 8xxx instruction
$29A    $C024   RND      V0, #24         ; V0 = random & 24
$29C    $799B   ADD      V9, #9B         ; Add 155 to V9
$29E    $2CF4   CALL     $CF4            ; Call subroutine at CF4
$2A0    $6718   LD       V7, #18         ; Load 24 into V7
$2A2    $19A9   JP       $9A9            ; Jump to 9A9
$2A4    $976B   UNKNOWN  $976B           ; Unknown 9xxx instruction
$2A6    $487A   SNE      V8, #7A         ; Skip if V8 != 122
$2A8    $2DCB   CALL     $DCB            ; Call subroutine at DCB
$2AA    $B321   JP       V0, $321        ; Jump to V0 + 321
$2AC    $427D   SNE      V2, #7D         ; Skip if V2 != 125
$2AE    $6C28   LD       VC, #28         ; Load 40 into VC
$2B0    $DCD8   DRW      VC, VD, #8      ; Draw 8-byte sprite at VC, VD
$2B2    $7EF4   ADD      VE, #F4         ; Add 244 to VE
$2B4    $7F2A   ADD      VF, #2A         ; Add 42 to VF
$2B6    $AEB5   LD       I, $EB5         ; Load EB5 into I
$2B8    $00A3   SYS      $0A3            ; System call to 0A3
$2BA    $4DD3   SNE      VD, #D3         ; Skip if VD != 211
$2BC    $96E2   UNKNOWN  $96E2           ; Unknown 9xxx instruction
$2BE    $8631   OR       V6, V3          ; V6 |= V3
$2C0    $7CB3   ADD      VC, #B3         ; Add 179 to VC
$2C2    $7348   ADD      V3, #48         ; Add 72 to V3
$2C4    $B585   JP       V0, $585        ; Jump to V0 + 585
$2C6    $DAF5   DRW      VA, VF, #5      ; Draw 5-byte sprite at VA, VF
$2C8    $158A   JP       $58A            ; Jump to 58A
$2CA    $B13F   JP       V0, $13F        ; Jump to V0 + 13F
$2CC    $D6AF   DRW      V6, VA, #F      ; Draw 15-byte sprite at V6, VA
$2CE    $F8DC   UNKNOWN  F8DC            ; Unknown Fxxx instruction
$2D0    $4E4B   SNE      VE, #4B         ; Skip if VE != 75
$2D2    $DAF2   DRW      VA, VF, #2      ; Draw 2-byte sprite at VA, VF
$2D4    $9894   UNKNOWN  $9894           ; Unknown 9xxx instruction
$2D6    $AF72   LD       I, $F72         ; Load F72 into I
$2D8    $8BB2   AND      VB, VB          ; VB &= VB
$2DA    $E252   UNKNOWN  $E252           ; Unknown Exxx instruction
$2DC    $BDF4   JP       V0, $DF4        ; Jump to V0 + DF4
$2DE    $938D   UNKNOWN  $938D           ; Unknown 9xxx instruction
$2E0    $F74B   UNKNOWN  F74B            ; Unknown Fxxx instruction
$2E2    $A69C   LD       I, $69C         ; Load 69C into I
$2E4    $47C5   SNE      V7, #C5         ; Skip if V7 != 197
$2E6    $9911   UNKNOWN  $9911           ; Unknown 9xxx instruction
$2E8    $95B9   UNKNOWN  $95B9           ; Unknown 9xxx instruction
$2EA    $EFEF   UNKNOWN  $EFEF           ; Unknown Exxx instruction
$2EC    $7A8D   ADD      VA, #8D         ; Add 141 to VA
$2EE    $86BC   UNKNOWN  86BC            ; Unknown 8xxx instruction
$2F0    $0D85   SYS      $D85            ; System call to D85
$2F2    $B949   JP       V0, $949        ; Jump to V0 + 949
$2F4    $6034   LD       V0, #34         ; Load 52 into V0
$2F6    $E85E   UNKNOWN  $E85E           ; Unknown Exxx instruction
$2F8    $C0E9   RND      V0, #E9         ; V0 = random & E9
$2FA    $DBEB   DRW      VB, VE, #B      ; Draw 11-byte sprite at VB, VE
$2FC    $77A5   ADD      V7, #A5         ; Add 165 to V7
$2FE    $2123   CALL     $123            ; Call subroutine at 123
$300    $0103   SYS      $103            ; System call to 103
$302    $0310   SYS      $310            ; System call to 310
$304    $94A1   UNKNOWN  $94A1           ; Unknown 9xxx instruction
$306    $C1DA   RND      V1, #DA         ; V1 = random & DA
$308    $C36F   RND      V3, #6F         ; V3 = random & 6F
$30A    $5EE1   UNKNOWN  $5EE1           ; Unknown 5xxx instruction
$30C    $BD02   JP       V0, $D02        ; Jump to V0 + D02
$30E    $F614   UNKNOWN  F614            ; Unknown Fxxx instruction
$310    $FDE7   UNKNOWN  FDE7            ; Unknown Fxxx instruction
$312    $0A49   SYS      $A49            ; System call to A49
$314    $7CAE   ADD      VC, #AE         ; Add 174 to VC
$316    $B28F   JP       V0, $28F        ; Jump to V0 + 28F
$318    $0D96   SYS      $D96            ; System call to D96
$31A    $2297   CALL     $297            ; Call subroutine at 297
$31C    $FFD8   UNKNOWN  FFD8            ; Unknown Fxxx instruction
$31E    $FD05   UNKNOWN  FD05            ; Unknown Fxxx instruction
$320    $9D94   UNKNOWN  $9D94           ; Unknown 9xxx instruction
$322    $FA44   UNKNOWN  FA44            ; Unknown Fxxx instruction
$324    $6BED   LD       VB, #ED         ; Load 237 into VB
$326    $5854   UNKNOWN  $5854           ; Unknown 5xxx instruction
$328    $ED19   UNKNOWN  $ED19           ; Unknown Exxx instruction
$32A    $3232   SE       V2, #32         ; Skip if V2 == 50
$32C    $6971   LD       V9, #71         ; Load 113 into V9
$32E    $1AEE   JP       $AEE            ; Jump to AEE
$330    $7D23   ADD      VD, #23         ; Add 35 to VD
$332    $6D6B   LD       VD, #6B         ; Load 107 into VD
$334    $5FC1   UNKNOWN  $5FC1           ; Unknown 5xxx instruction
$336    $4591   SNE      V5, #91         ; Skip if V5 != 145
$338    $5489   UNKNOWN  $5489           ; Unknown 5xxx instruction
$33A    $DC5E   DRW      VC, V5, #E      ; Draw 14-byte sprite at VC, V5
$33C    $B080   JP       V0, $080        ; Jump to V0 + 080
$33E    $E09D   UNKNOWN  $E09D           ; Unknown Exxx instruction
$340    $9F93   UNKNOWN  $9F93           ; Unknown 9xxx instruction
$342    $58DC   UNKNOWN  $58DC           ; Unknown 5xxx instruction
$344    $9E5D   UNKNOWN  $9E5D           ; Unknown 9xxx instruction
$346    $59AA   UNKNOWN  $59AA           ; Unknown 5xxx instruction
$348    $2716   CALL     $716            ; Call subroutine at 716
$34A    $8B0E   SHL      VB              ; VB <<= 1, VF = MSB
$34C    $AD28   LD       I, $D28         ; Load D28 into I
$34E    $36A4   SE       V6, #A4         ; Skip if V6 == 164
$350    $1FB8   JP       $FB8            ; Jump to FB8
$352    $C272   RND      V2, #72         ; V2 = random & 72
$354    $1CAF   JP       $CAF            ; Jump to CAF
$356    $330D   SE       V3, #0D         ; Skip if V3 == 13
$358    $5091   UNKNOWN  $5091           ; Unknown 5xxx instruction
$35A    $BE89   JP       V0, $E89        ; Jump to V0 + E89
$35C    $3FEF   SE       VF, #EF         ; Skip if VF == 239
$35E    $05AE   SYS      $5AE            ; System call to 5AE
$360    $F629   LD       F, V6           ; I = sprite address for digit V6
$362    $645B   LD       V4, #5B         ; Load 91 into V4
$364    $859A   UNKNOWN  859A            ; Unknown 8xxx instruction
$366    $44B6   SNE      V4, #B6         ; Skip if V4 != 182
$368    $66BD   LD       V6, #BD         ; Load 189 into V6
$36A    $DC9B   DRW      VC, V9, #B      ; Draw 11-byte sprite at VC, V9
$36C    $87AC   UNKNOWN  87AC            ; Unknown 8xxx instruction
$36E    $FBE2   UNKNOWN  FBE2            ; Unknown Fxxx instruction
$370    $8008   UNKNOWN  8008            ; Unknown 8xxx instruction
$372    $1914   JP       $914            ; Jump to 914
$374    $A1CF   LD       I, $1CF         ; Load 1CF into I
$376    $C0C5   RND      V0, #C5         ; V0 = random & C5
$378    $CE1D   RND      VE, #1D         ; VE = random & 1D
$37A    $5A95   UNKNOWN  $5A95           ; Unknown 5xxx instruction
$37C    $9CAA   UNKNOWN  $9CAA           ; Unknown 9xxx instruction
$37E    $1A3E   JP       $A3E            ; Jump to A3E
$380    $F4AA   UNKNOWN  F4AA            ; Unknown Fxxx instruction
$382    $42A6   SNE      V2, #A6         ; Skip if V2 != 166
$384    $3660   SE       V6, #60         ; Skip if V6 == 96
$386    $9598   UNKNOWN  $9598           ; Unknown 9xxx instruction
$388    $484A   SNE      V8, #4A         ; Skip if V8 != 74
$38A    $EC6F   UNKNOWN  $EC6F           ; Unknown Exxx instruction
$38C    $9E9D   UNKNOWN  $9E9D           ; Unknown 9xxx instruction
$38E    $7643   ADD      V6, #43         ; Add 67 to V6
$390    $096C   SYS      $96C            ; System call to 96C
$392    $D9BE   DRW      V9, VB, #E      ; Draw 14-byte sprite at V9, VB
$394    $3392   SE       V3, #92         ; Skip if V3 == 146
$396    $DA7F   DRW      VA, V7, #F      ; Draw 15-byte sprite at VA, V7
$398    $D7E9   DRW      V7, VE, #9      ; Draw 9-byte sprite at V7, VE
$39A    $BD5A   JP       V0, $D5A        ; Jump to V0 + D5A
$39C    $7B80   ADD      VB, #80         ; Add 128 to VB
$39E    $89DA   UNKNOWN  89DA            ; Unknown 8xxx instruction
$3A0    $991B   UNKNOWN  $991B           ; Unknown 9xxx instruction
$3A2    $E25E   UNKNOWN  $E25E           ; Unknown Exxx instruction
$3A4    $DEFA   DRW      VE, VF, #A      ; Draw 10-byte sprite at VE, VF
$3A6    $D2F6   DRW      V2, VF, #6      ; Draw 6-byte sprite at V2, VF
$3A8    $B60A   JP       V0, $60A        ; Jump to V0 + 60A
$3AA    $077F   SYS      $77F            ; System call to 77F
$3AC    $E4BB   UNKNOWN  $E4BB           ; Unknown Exxx instruction
$3AE    $1CE0   JP       $CE0            ; Jump to CE0
$3B0    $F4C8   UNKNOWN  F4C8            ; Unknown Fxxx instruction
$3B2    $7057   ADD      V0, #57         ; Add 87 to V0
$3B4    $3A62   SE       VA, #62         ; Skip if VA == 98
$3B6    $C702   RND      V7, #02         ; V7 = random & 02
$3B8    $A7F7   LD       I, $7F7         ; Load 7F7 into I
$3BA    $B66D   JP       V0, $66D        ; Jump to V0 + 66D
$3BC    $7CA2   ADD      VC, #A2         ; Add 162 to VC
$3BE    $0BF7   SYS      $BF7            ; System call to BF7
$3C0    $69AC   LD       V9, #AC         ; Load 172 into V9
$3C2    $F065   LD       V0, [I]         ; Load V0-V0 from I
$3C4    $AC6D   LD       I, $C6D         ; Load C6D into I
$3C6    $AB31   LD       I, $B31         ; Load B31 into I
$3C8    $2A55   CALL     $A55            ; Call subroutine at A55
$3CA    $E9F5   UNKNOWN  $E9F5           ; Unknown Exxx instruction
$3CC    $178D   JP       $78D            ; Jump to 78D
$3CE    $71C3   ADD      V1, #C3         ; Add 195 to V1
$3D0    $C4BD   RND      V4, #BD         ; V4 = random & BD
$3D2    $9BCC   UNKNOWN  $9BCC           ; Unknown 9xxx instruction
$3D4    $529A   UNKNOWN  $529A           ; Unknown 5xxx instruction
$3D6    $CB10   RND      VB, #10         ; VB = random & 10
$3D8    $0381   SYS      $381            ; System call to 381
$3DA    $BC9C   JP       V0, $C9C        ; Jump to V0 + C9C
$3DC    $131E   JP       $31E            ; Jump to 31E
$3DE    $16E3   JP       $6E3            ; Jump to 6E3
$3E0    $9D82   UNKNOWN  $9D82           ; Unknown 9xxx instruction
$3E2    $3E5B   SE       VE, #5B         ; Skip if VE == 91
$3E4    $C73A   RND      V7, #3A         ; V7 = random & 3A
$3E6    $A9B4   LD       I, $9B4         ; Load 9B4 into I
$3E8    $4560   SNE      V5, #60         ; Skip if V5 != 96
$3EA    $BDA2   JP       V0, $DA2        ; Jump to V0 + DA2
$3EC    $90DC   UNKNOWN  $90DC           ; Unknown 9xxx instruction
$3EE    $A9FF   LD       I, $9FF         ; Load 9FF into I
$3F0    $7C7F   ADD      VC, #7F         ; Add 127 to VC
$3F2    $9475   UNKNOWN  $9475           ; Unknown 9xxx instruction
$3F4    $D112   DRW      V1, V1, #2      ; Draw 2-byte sprite at V1, V1
$3F6    $009E   SYS      $09E            ; System call to 09E
$3F8    $C7E5   RND      V7, #E5         ; V7 = random & E5
$3FA    $0A45   SYS      $A45            ; System call to A45
$3FC    $0868   SYS      $868            ; System call to 868
$3FE    $4312   SNE      V3, #12         ; Skip if V3 != 18
$400    $7C3C   ADD      VC, #3C         ; Add 60 to VC
$402    $C60A   RND      V6, #0A         ; V6 = random & 0A
$404    $5488   UNKNOWN  $5488           ; Unknown 5xxx instruction
$406    $46B4   SNE      V6, #B4         ; Skip if V6 != 180
$408    $F31C   UNKNOWN  F31C            ; Unknown Fxxx instruction
$40A    $D8E5   DRW      V8, VE, #5      ; Draw 5-byte sprite at V8, VE
$40C    $5425   UNKNOWN  $5425           ; Unknown 5xxx instruction
$40E    $921C   UNKNOWN  $921C           ; Unknown 9xxx instruction
$410    $B693   JP       V0, $693        ; Jump to V0 + 693
$412    $4F3C   SNE      VF, #3C         ; Skip if VF != 60
$414    $DE35   DRW      VE, V3, #5      ; Draw 5-byte sprite at VE, V3
$416    $BBF8   JP       V0, $BF8        ; Jump to V0 + BF8
$418    $551A   UNKNOWN  $551A           ; Unknown 5xxx instruction
$41A    $0457   SYS      $457            ; System call to 457
$41C    $4367   SNE      V3, #67         ; Skip if V3 != 103
$41E    $1AE8   JP       $AE8            ; Jump to AE8
$420    $B74B   JP       V0, $74B        ; Jump to V0 + 74B
$422    $BDA4   JP       V0, $DA4        ; Jump to V0 + DA4
$424    $B7D5   JP       V0, $7D5        ; Jump to V0 + 7D5
$426    $880D   UNKNOWN  880D            ; Unknown 8xxx instruction
$428    $5445   UNKNOWN  $5445           ; Unknown 5xxx instruction
$42A    $94CF   UNKNOWN  $94CF           ; Unknown 9xxx instruction
$42C    $F518   LD       ST, V5          ; Sound timer = V5
$42E    $59DC   UNKNOWN  $59DC           ; Unknown 5xxx instruction
$430    $2057   CALL     $057            ; Call subroutine at 057
$432    $CE73   RND      VE, #73         ; VE = random & 73
$434    $2324   CALL     $324            ; Call subroutine at 324
$436    $E180   UNKNOWN  $E180           ; Unknown Exxx instruction
$438    $BCBD   JP       V0, $CBD        ; Jump to V0 + CBD
$43A    $A3E4   LD       I, $3E4         ; Load 3E4 into I
$43C    $7A52   ADD      VA, #52         ; Add 82 to VA
$43E    $9515   UNKNOWN  $9515           ; Unknown 9xxx instruction
$440    $FA77   UNKNOWN  FA77            ; Unknown Fxxx instruction
$442    $87BF   UNKNOWN  87BF            ; Unknown 8xxx instruction
$444    $9538   UNKNOWN  $9538           ; Unknown 9xxx instruction
$446    $4811   SNE      V8, #11         ; Skip if V8 != 17
$448    $0A06   SYS      $A06            ; System call to A06
$44A    $2A52   CALL     $A52            ; Call subroutine at A52
$44C    $0016   SYS      $016            ; System call to 016
$44E    $ECF2   UNKNOWN  $ECF2           ; Unknown Exxx instruction
$450    $9AFB   UNKNOWN  $9AFB           ; Unknown 9xxx instruction
$452    $47B2   SNE      V7, #B2         ; Skip if V7 != 178
$454    $B686   JP       V0, $686        ; Jump to V0 + 686
$456    $5E16   UNKNOWN  $5E16           ; Unknown 5xxx instruction
$458    $556D   UNKNOWN  $556D           ; Unknown 5xxx instruction
$45A    $A9BF   LD       I, $9BF         ; Load 9BF into I
$45C    $6E66   LD       VE, #66         ; Load 102 into VE
$45E    $8612   AND      V6, V1          ; V6 &= V1
$460    $BC3A   JP       V0, $C3A        ; Jump to V0 + C3A
$462    $D051   DRW      V0, V5, #1      ; Draw 1-byte sprite at V0, V5
$464    $FBB0   UNKNOWN  FBB0            ; Unknown Fxxx instruction
$466    $6707   LD       V7, #07         ; Load 7 into V7
$468    $51EC   UNKNOWN  $51EC           ; Unknown 5xxx instruction
$46A    $AFBD   LD       I, $FBD         ; Load FBD into I
$46C    $6593   LD       V5, #93         ; Load 147 into V5
$46E    $220A   CALL     $20A            ; Call subroutine at 20A
$470    $C380   RND      V3, #80         ; V3 = random & 80
$472    $9909   UNKNOWN  $9909           ; Unknown 9xxx instruction
$474    $7F07   ADD      VF, #07         ; Add 7 to VF
$476    $A242   LD       I, $242         ; Load 242 into I
$478    $C7AD   RND      V7, #AD         ; V7 = random & AD
$47A    $3FA3   SE       VF, #A3         ; Skip if VF == 163
$47C    $DC50   DRW      VC, V5, #0      ; Draw 0-byte sprite at VC, V5
$47E    $8835   SUB      V8, V3          ; V8 -= V3, VF = !borrow
$480    $93BC   UNKNOWN  $93BC           ; Unknown 9xxx instruction
$482    $1E62   JP       $E62            ; Jump to E62
$484    $C222   RND      V2, #22         ; V2 = random & 22
$486    $73AF   ADD      V3, #AF         ; Add 175 to V3
$488    $BF81   JP       V0, $F81        ; Jump to V0 + F81
$48A    $7D7E   ADD      VD, #7E         ; Add 126 to VD
$48C    $247E   CALL     $47E            ; Call subroutine at 47E
$48E    $2531   CALL     $531            ; Call subroutine at 531
$490    $CC7B   RND      VC, #7B         ; VC = random & 7B
$492    $7DB7   ADD      VD, #B7         ; Add 183 to VD
$494    $56DF   UNKNOWN  $56DF           ; Unknown 5xxx instruction
$496    $C343   RND      V3, #43         ; V3 = random & 43
$498    $3F40   SE       VF, #40         ; Skip if VF == 64
$49A    $313C   SE       V1, #3C         ; Skip if V1 == 60
$49C    $2911   CALL     $911            ; Call subroutine at 911
$49E    $DBC6   DRW      VB, VC, #6      ; Draw 6-byte sprite at VB, VC
$4A0    $94CC   UNKNOWN  $94CC           ; Unknown 9xxx instruction
$4A2    $1FB2   JP       $FB2            ; Jump to FB2
$4A4    $60E7   LD       V0, #E7         ; Load 231 into V0
$4A6    $5388   UNKNOWN  $5388           ; Unknown 5xxx instruction
$4A8    $A317   LD       I, $317         ; Load 317 into I
$4AA    $2286   CALL     $286            ; Call subroutine at 286
$4AC    $E0DD   UNKNOWN  $E0DD           ; Unknown Exxx instruction
$4AE    $7998   ADD      V9, #98         ; Add 152 to V9
$4B0    $3D99   SE       VD, #99         ; Skip if VD == 153
$4B2    $7540   ADD      V5, #40         ; Add 64 to V5
$4B4    $2C3B   CALL     $C3B            ; Call subroutine at C3B
$4B6    $A16A   LD       I, $16A         ; Load 16A into I
$4B8    $7270   ADD      V2, #70         ; Add 112 to V2
$4BA    $686A   LD       V8, #6A         ; Load 106 into V8
$4BC    $5298   UNKNOWN  $5298           ; Unknown 5xxx instruction
$4BE    $F9B2   UNKNOWN  F9B2            ; Unknown Fxxx instruction
$4C0    $BDF2   JP       V0, $DF2        ; Jump to V0 + DF2
$4C2    $46E4   SNE      V6, #E4         ; Skip if V6 != 228
$4C4    $704C   ADD      V0, #4C         ; Add 76 to V0
$4C6    $9D9E   UNKNOWN  $9D9E           ; Unknown 9xxx instruction
$4C8    $0B31   SYS      $B31            ; System call to B31
$4CA    $CA44   RND      VA, #44         ; VA = random & 44
$4CC    $D7B6   DRW      V7, VB, #6      ; Draw 6-byte sprite at V7, VB
$4CE    $03AB   SYS      $3AB            ; System call to 3AB
$4D0    $A31A   LD       I, $31A         ; Load 31A into I
$4D2    $3076   SE       V0, #76         ; Skip if V0 == 118
$4D4    $D792   DRW      V7, V9, #2      ; Draw 2-byte sprite at V7, V9
$4D6    $1942   JP       $942            ; Jump to 942
$4D8    $4BBA   SNE      VB, #BA         ; Skip if VB != 186
$4DA    $BDA8   JP       V0, $DA8        ; Jump to V0 + DA8
$4DC    $F2FF   UNKNOWN  F2FF            ; Unknown Fxxx instruction
$4DE    $205A   CALL     $05A            ; Call subroutine at 05A
$4E0    $55F3   UNKNOWN  $55F3           ; Unknown 5xxx instruction
$4E2    $B96F   JP       V0, $96F        ; Jump to V0 + 96F
$4E4    $9853   UNKNOWN  $9853           ; Unknown 9xxx instruction
$4E6    $AF23   LD       I, $F23         ; Load F23 into I
$4E8    $BAC5   JP       V0, $AC5        ; Jump to V0 + AC5
$4EA    $E882   UNKNOWN  $E882           ; Unknown Exxx instruction
$4EC    $B6F2   JP       V0, $6F2        ; Jump to V0 + 6F2
$4EE    $B472   JP       V0, $472        ; Jump to V0 + 472
$4F0    $0AAE   SYS      $AAE            ; System call to AAE
$4F2    $BA6B   JP       V0, $A6B        ; Jump to V0 + A6B
$4F4    $6F31   LD       VF, #31         ; Load 49 into VF
$4F6    $B5C8   JP       V0, $5C8        ; Jump to V0 + 5C8
$4F8    $4FB5   SNE      VF, #B5         ; Skip if VF != 181
$4FA    $1378   JP       $378            ; Jump to 378
$4FC    $ABB4   LD       I, $BB4         ; Load BB4 into I
$4FE    $572D   UNKNOWN  $572D           ; Unknown 5xxx instruction
$500    $1DB3   JP       $DB3            ; Jump to DB3
$502    $BB96   JP       V0, $B96        ; Jump to V0 + B96
$504    $877E   SHL      V7              ; V7 <<= 1, VF = MSB
$506    $A4BB   LD       I, $4BB         ; Load 4BB into I
$508    $E5F7   UNKNOWN  $E5F7           ; Unknown Exxx instruction
$50A    $CAE0   RND      VA, #E0         ; VA = random & E0
$50C    $80C6   SHR      V0              ; V0 >>= 1, VF = LSB
$50E    $F8C3   UNKNOWN  F8C3            ; Unknown Fxxx instruction
$510    $A7CB   LD       I, $7CB         ; Load 7CB into I
$512    $F877   UNKNOWN  F877            ; Unknown Fxxx instruction
$514    $8727   SUBN     V7, V2          ; V7 = V2 - V7, VF = !borrow
$516    $DF6A   DRW      VF, V6, #A      ; Draw 10-byte sprite at VF, V6
$518    $A495   LD       I, $495         ; Load 495 into I
$51A    $6315   LD       V3, #15         ; Load 21 into V3
$51C    $7D57   ADD      VD, #57         ; Add 87 to VD
$51E    $FBF1   UNKNOWN  FBF1            ; Unknown Fxxx instruction
$520    $3302   SE       V3, #02         ; Skip if V3 == 2
$522    $A57E   LD       I, $57E         ; Load 57E into I
$524    $6CE2   LD       VC, #E2         ; Load 226 into VC
$526    $A815   LD       I, $815         ; Load 815 into I
$528    $B1A3   JP       V0, $1A3        ; Jump to V0 + 1A3
$52A    $C68F   RND      V6, #8F         ; V6 = random & 8F
$52C    $9CF6   UNKNOWN  $9CF6           ; Unknown 9xxx instruction
$52E    $7A44   ADD      VA, #44         ; Add 68 to VA
$530    $E32D   UNKNOWN  $E32D           ; Unknown Exxx instruction
$532    $1383   JP       $383            ; Jump to 383
$534    $8B78   UNKNOWN  8B78            ; Unknown 8xxx instruction
$536    $564B   UNKNOWN  $564B           ; Unknown 5xxx instruction
$538    $D79B   DRW      V7, V9, #B      ; Draw 11-byte sprite at V7, V9
$53A    $7684   ADD      V6, #84         ; Add 132 to V6
$53C    $3856   SE       V8, #56         ; Skip if V8 == 86
$53E    $A096   LD       I, $096         ; Load 096 into I
$540    $6ECE   LD       VE, #CE         ; Load 206 into VE
$542    $1A18   JP       $A18            ; Jump to A18
$544    $58DF   UNKNOWN  $58DF           ; Unknown 5xxx instruction
$546    $157A   JP       $57A            ; Jump to 57A
$548    $12BB   JP       $2BB            ; Jump to 2BB
$54A    $6701   LD       V7, #01         ; Load 1 into V7
$54C    $D1C8   DRW      V1, VC, #8      ; Draw 8-byte sprite at V1, VC
$54E    $7F26   ADD      VF, #26         ; Add 38 to VF
$550    $3C34   SE       VC, #34         ; Skip if VC == 52
$552    $CE50   RND      VE, #50         ; VE = random & 50
$554    $71A2   ADD      V1, #A2         ; Add 162 to V1
$556    $E45F   UNKNOWN  $E45F           ; Unknown Exxx instruction
$558    $DC54   DRW      VC, V5, #4      ; Draw 4-byte sprite at VC, V5
$55A    $83FB   UNKNOWN  83FB            ; Unknown 8xxx instruction
$55C    $79FB   ADD      V9, #FB         ; Add 251 to V9
$55E    $9EFF   UNKNOWN  $9EFF           ; Unknown 9xxx instruction
$560    $52A1   UNKNOWN  $52A1           ; Unknown 5xxx instruction
$562    $AC12   LD       I, $C12         ; Load C12 into I
$564    $15FE   JP       $5FE            ; Jump to 5FE
$566    $DDCE   DRW      VD, VC, #E      ; Draw 14-byte sprite at VD, VC
$568    $5AF4   UNKNOWN  $5AF4           ; Unknown 5xxx instruction
$56A    $ED33   UNKNOWN  $ED33           ; Unknown Exxx instruction
$56C    $7F5F   ADD      VF, #5F         ; Add 95 to VF
$56E    $F25F   UNKNOWN  F25F            ; Unknown Fxxx instruction
$570    $427C   SNE      V2, #7C         ; Skip if V2 != 124
$572    $D5CA   DRW      V5, VC, #A      ; Draw 10-byte sprite at V5, VC
$574    $7BA1   ADD      VB, #A1         ; Add 161 to VB
$576    $06A1   SYS      $6A1            ; System call to 6A1
$578    $2836   CALL     $836            ; Call subroutine at 836
$57A    $0FC9   SYS      $FC9            ; System call to FC9
$57C    $65B8   LD       V5, #B8         ; Load 184 into V5
$57E    $D0A5   DRW      V0, VA, #5      ; Draw 5-byte sprite at V0, VA
$580    $76CD   ADD      V6, #CD         ; Add 205 to V6
$582    $20E1   CALL     $0E1            ; Call subroutine at 0E1
$584    $9F34   UNKNOWN  $9F34           ; Unknown 9xxx instruction
$586    $581C   UNKNOWN  $581C           ; Unknown 5xxx instruction
$588    $C03B   RND      V0, #3B         ; V0 = random & 3B
$58A    $C369   RND      V3, #69         ; V3 = random & 69
$58C    $839C   UNKNOWN  839C            ; Unknown 8xxx instruction
$58E    $B2A7   JP       V0, $2A7        ; Jump to V0 + 2A7
$590    $A8D5   LD       I, $8D5         ; Load 8D5 into I
$592    $6D25   LD       VD, #25         ; Load 37 into VD
$594    $17D7   JP       $7D7            ; Jump to 7D7
$596    $8A70   LD       VA, V7          ; VA = V7
$598    $7395   ADD      V3, #95         ; Add 149 to V3
$59A    $F037   UNKNOWN  F037            ; Unknown Fxxx instruction
$59C    $1671   JP       $671            ; Jump to 671
$59E    $3DC4   SE       VD, #C4         ; Skip if VD == 196
$5A0    $3441   SE       V4, #41         ; Skip if V4 == 65
$5A2    $F905   UNKNOWN  F905            ; Unknown Fxxx instruction
$5A4    $3101   SE       V1, #01         ; Skip if V1 == 1
$5A6    $7689   ADD      V6, #89         ; Add 137 to V6
$5A8    $AC8F   LD       I, $C8F         ; Load C8F into I
$5AA    $79D8   ADD      V9, #D8         ; Add 216 to V9
$5AC    $F103   UNKNOWN  F103            ; Unknown Fxxx instruction
$5AE    $AD34   LD       I, $D34         ; Load D34 into I
$5B0    $C571   RND      V5, #71         ; V5 = random & 71
$5B2    $4041   SNE      V0, #41         ; Skip if V0 != 65
$5B4    $C503   RND      V5, #03         ; V5 = random & 03
$5B6    $9DE6   UNKNOWN  $9DE6           ; Unknown 9xxx instruction
$5B8    $90DC   UNKNOWN  $90DC           ; Unknown 9xxx instruction
$5BA    $2717   CALL     $717            ; Call subroutine at 717
$5BC    $3F95   SE       VF, #95         ; Skip if VF == 149
$5BE    $A184   LD       I, $184         ; Load 184 into I
$5C0    $D9E3   DRW      V9, VE, #3      ; Draw 3-byte sprite at V9, VE
$5C2    $57FA   UNKNOWN  $57FA           ; Unknown 5xxx instruction
$5C4    $E1BE   UNKNOWN  $E1BE           ; Unknown Exxx instruction
$5C6    $F739   UNKNOWN  F739            ; Unknown Fxxx instruction
$5C8    $FAB1   UNKNOWN  FAB1            ; Unknown Fxxx instruction
$5CA    $322D   SE       V2, #2D         ; Skip if V2 == 45
$5CC    $0B30   SYS      $B30            ; System call to B30
$5CE    $0448   SYS      $448            ; System call to 448
$5D0    $CE1A   RND      VE, #1A         ; VE = random & 1A
$5D2    $1351   JP       $351            ; Jump to 351
$5D4    $7DB9   ADD      VD, #B9         ; Add 185 to VD
$5D6    $0092   SYS      $092            ; System call to 092
$5D8    $36F6   SE       V6, #F6         ; Skip if V6 == 246
$5DA    $E39D   UNKNOWN  $E39D           ; Unknown Exxx instruction
$5DC    $1FA6   JP       $FA6            ; Jump to FA6
$5DE    $9B9A   UNKNOWN  $9B9A           ; Unknown 9xxx instruction
$5E0    $30F7   SE       V0, #F7         ; Skip if V0 == 247
$5E2    $52C5   UNKNOWN  $52C5           ; Unknown 5xxx instruction
$5E4    $BEF5   JP       V0, $EF5        ; Jump to V0 + EF5
$5E6    $ADA1   LD       I, $DA1         ; Load DA1 into I
$5E8    $C929   RND      V9, #29         ; V9 = random & 29
$5EA    $1DBA   JP       $DBA            ; Jump to DBA
$5EC    $E741   UNKNOWN  $E741           ; Unknown Exxx instruction
$5EE    $6A17   LD       VA, #17         ; Load 23 into VA
$5F0    $EBFC   UNKNOWN  $EBFC           ; Unknown Exxx instruction
$5F2    $C325   RND      V3, #25         ; V3 = random & 25
$5F4    $CA7C   RND      VA, #7C         ; VA = random & 7C
$5F6    $2DB6   CALL     $DB6            ; Call subroutine at DB6
$5F8    $480B   SNE      V8, #0B         ; Skip if V8 != 11
$5FA    $11AA   JP       $1AA            ; Jump to 1AA
$5FC    $C08A   RND      V0, #8A         ; V0 = random & 8A
$5FE    $0959   SYS      $959            ; System call to 959
$600    $AAC8   LD       I, $AC8         ; Load AC8 into I
$602    $D020   DRW      V0, V2, #0      ; Draw 0-byte sprite at V0, V2
$604    $1F34   JP       $F34            ; Jump to F34
$606    $8CC4   ADD      VC, VC          ; VC += VC, VF = carry
$608    $7283   ADD      V2, #83         ; Add 131 to V2
$60A    $FEFF   UNKNOWN  FEFF            ; Unknown Fxxx instruction
$60C    $52BF   UNKNOWN  $52BF           ; Unknown 5xxx instruction
$60E    $9180   SNE      V1, V8          ; Skip if V1 != V8
$610    $AE76   LD       I, $E76         ; Load E76 into I
$612    $B178   JP       V0, $178        ; Jump to V0 + 178
$614    $FC92   UNKNOWN  FC92            ; Unknown Fxxx instruction
$616    $4E63   SNE      VE, #63         ; Skip if VE != 99
$618    $AA54   LD       I, $A54         ; Load A54 into I
$61A    $A8CF   LD       I, $8CF         ; Load 8CF into I
$61C    $1005   JP       $005            ; Jump to 005
$61E    $AB90   LD       I, $B90         ; Load B90 into I
$620    $969E   UNKNOWN  $969E           ; Unknown 9xxx instruction
$622    $0484   SYS      $484            ; System call to 484
$624    $4F78   SNE      VF, #78         ; Skip if VF != 120
$626    $EF9E   SKP      VF              ; Skip if key VF pressed
$628    $F280   UNKNOWN  F280            ; Unknown Fxxx instruction
$62A    $38C1   SE       V8, #C1         ; Skip if V8 == 193
$62C    $01D9   SYS      $1D9            ; System call to 1D9
$62E    $B06D   JP       V0, $06D        ; Jump to V0 + 06D
$630    $FF59   UNKNOWN  FF59            ; Unknown Fxxx instruction
$632    $8181   OR       V1, V8          ; V1 |= V8
$634    $88A3   XOR      V8, VA          ; V8 ^= VA
$636    $4B5E   SNE      VB, #5E         ; Skip if VB != 94
$638    $F955   LD       [I], V9         ; Store V0-V9 at I
$63A    $90A6   UNKNOWN  $90A6           ; Unknown 9xxx instruction
$63C    $9AF1   UNKNOWN  $9AF1           ; Unknown 9xxx instruction
$63E    $E528   UNKNOWN  $E528           ; Unknown Exxx instruction
$640    $11D0   JP       $1D0            ; Jump to 1D0
$642    $61AF   LD       V1, #AF         ; Load 175 into V1
$644    $855E   SHL      V5              ; V5 <<= 1, VF = MSB
$646    $8FE6   SHR      VF              ; VF >>= 1, VF = LSB
$648    $D60D   DRW      V6, V0, #D      ; Draw 13-byte sprite at V6, V0
$64A    $6B4F   LD       VB, #4F         ; Load 79 into VB
$64C    $EEC3   UNKNOWN  $EEC3           ; Unknown Exxx instruction
$64E    $8618   UNKNOWN  8618            ; Unknown 8xxx instruction
$650    $A9A0   LD       I, $9A0         ; Load 9A0 into I
$652    $357F   SE       V5, #7F         ; Skip if V5 == 127
$654    $BB44   JP       V0, $B44        ; Jump to V0 + B44
$656    $8CE1   OR       VC, VE          ; VC |= VE
$658    $F5AC   UNKNOWN  F5AC            ; Unknown Fxxx instruction
$65A    $18D3   JP       $8D3            ; Jump to 8D3
$65C    $6DF0   LD       VD, #F0         ; Load 240 into VD
$65E    $E62E   UNKNOWN  $E62E           ; Unknown Exxx instruction
$660    $9391   UNKNOWN  $9391           ; Unknown 9xxx instruction
$662    $D342   DRW      V3, V4, #2      ; Draw 2-byte sprite at V3, V4
$664    $5167   UNKNOWN  $5167           ; Unknown 5xxx instruction
$666    $C562   RND      V5, #62         ; V5 = random & 62
$668    $E460   UNKNOWN  $E460           ; Unknown Exxx instruction
$66A    $29DC   CALL     $9DC            ; Call subroutine at 9DC
$66C    $4C3E   SNE      VC, #3E         ; Skip if VC != 62
$66E    $6DFE   LD       VD, #FE         ; Load 254 into VD
$670    $7B97   ADD      VB, #97         ; Add 151 to VB
$672    $63D2   LD       V3, #D2         ; Load 210 into V3
$674    $561E   UNKNOWN  $561E           ; Unknown 5xxx instruction
$676    $E185   UNKNOWN  $E185           ; Unknown Exxx instruction
$678    $7473   ADD      V4, #73         ; Add 115 to V4
$67A    $A7CF   LD       I, $7CF         ; Load 7CF into I
$67C    $7771   ADD      V7, #71         ; Add 113 to V7
$67E    $66BE   LD       V6, #BE         ; Load 190 into V6
$680    $F89B   UNKNOWN  F89B            ; Unknown Fxxx instruction
$682    $3DBF   SE       VD, #BF         ; Skip if VD == 191
$684    $5DB0   SE       VD, VB          ; Skip if VD == VB
$686    $CC4D   RND      VC, #4D         ; VC = random & 4D
$688    $702A   ADD      V0, #2A         ; Add 42 to V0
$68A    $1571   JP       $571            ; Jump to 571
$68C    $D759   DRW      V7, V5, #9      ; Draw 9-byte sprite at V7, V5
$68E    $885F   UNKNOWN  885F            ; Unknown 8xxx instruction
$690    $D12F   DRW      V1, V2, #F      ; Draw 15-byte sprite at V1, V2
$692    $9D06   UNKNOWN  $9D06           ; Unknown 9xxx instruction
$694    $BDD8   JP       V0, $DD8        ; Jump to V0 + DD8
$696    $E17B   UNKNOWN  $E17B           ; Unknown Exxx instruction
$698    $06FE   SYS      $6FE            ; System call to 6FE
$69A    $6A56   LD       VA, #56         ; Load 86 into VA
$69C    $E041   UNKNOWN  $E041           ; Unknown Exxx instruction
$69E    $A18C   LD       I, $18C         ; Load 18C into I
$6A0    $F6D3   UNKNOWN  F6D3            ; Unknown Fxxx instruction
$6A2    $781B   ADD      V8, #1B         ; Add 27 to V8
$6A4    $0680   SYS      $680            ; System call to 680
$6A6    $49FC   SNE      V9, #FC         ; Skip if V9 != 252
$6A8    $F6AF   UNKNOWN  F6AF            ; Unknown Fxxx instruction
$6AA    $0190   SYS      $190            ; System call to 190
$6AC    $36B1   SE       V6, #B1         ; Skip if V6 == 177
$6AE    $4168   SNE      V1, #68         ; Skip if V1 != 104
$6B0    $669E   LD       V6, #9E         ; Load 158 into V6
$6B2    $ACCE   LD       I, $CCE         ; Load CCE into I
$6B4    $D44C   DRW      V4, V4, #C      ; Draw 12-byte sprite at V4, V4
$6B6    $9B7D   UNKNOWN  $9B7D           ; Unknown 9xxx instruction
$6B8    $36F4   SE       V6, #F4         ; Skip if V6 == 244
$6BA    $E838   UNKNOWN  $E838           ; Unknown Exxx instruction
$6BC    $9693   UNKNOWN  $9693           ; Unknown 9xxx instruction
$6BE    $1E99   JP       $E99            ; Jump to E99
$6C0    $5283   UNKNOWN  $5283           ; Unknown 5xxx instruction
$6C2    $F2DE   UNKNOWN  F2DE            ; Unknown Fxxx instruction
$6C4    $EFB5   UNKNOWN  $EFB5           ; Unknown Exxx instruction
$6C6    $F516   UNKNOWN  F516            ; Unknown Fxxx instruction
$6C8    $C9E5   RND      V9, #E5         ; V9 = random & E5
$6CA    $ED22   UNKNOWN  $ED22           ; Unknown Exxx instruction
$6CC    $CDF4   RND      VD, #F4         ; VD = random & F4
$6CE    $D053   DRW      V0, V5, #3      ; Draw 3-byte sprite at V0, V5
$6D0    $D55D   DRW      V5, V5, #D      ; Draw 13-byte sprite at V5, V5
$6D2    $C55A   RND      V5, #5A         ; V5 = random & 5A
$6D4    $F499   UNKNOWN  F499            ; Unknown Fxxx instruction
$6D6    $6AA1   LD       VA, #A1         ; Load 161 into VA
$6D8    $1031   JP       $031            ; Jump to 031
$6DA    $21A8   CALL     $1A8            ; Call subroutine at 1A8
$6DC    $F9C5   UNKNOWN  F9C5            ; Unknown Fxxx instruction
$6DE    $D1C0   DRW      V1, VC, #0      ; Draw 0-byte sprite at V1, VC
$6E0    $DB99   DRW      VB, V9, #9      ; Draw 9-byte sprite at VB, V9
$6E2    $1718   JP       $718            ; Jump to 718
$6E4    $6AD9   LD       VA, #D9         ; Load 217 into VA
$6E6    $D036   DRW      V0, V3, #6      ; Draw 6-byte sprite at V0, V3
$6E8    $1C52   JP       $C52            ; Jump to C52
$6EA    $6393   LD       V3, #93         ; Load 147 into V3
$6EC    $6F80   LD       VF, #80         ; Load 128 into VF
$6EE    $80D6   SHR      V0              ; V0 >>= 1, VF = LSB
$6F0    $C35F   RND      V3, #5F         ; V3 = random & 5F
$6F2    $002D   SYS      $02D            ; System call to 02D
$6F4    $E485   UNKNOWN  $E485           ; Unknown Exxx instruction
$6F6    $A705   LD       I, $705         ; Load 705 into I
$6F8    $8CA3   XOR      VC, VA          ; VC ^= VA
$6FA    $C3AF   RND      V3, #AF         ; V3 = random & AF
$6FC    $F9AB   UNKNOWN  F9AB            ; Unknown Fxxx instruction
$6FE    $4FE7   SNE      VF, #E7         ; Skip if VF != 231
$700    $C6DF   RND      V6, #DF         ; V6 = random & DF
$702    $8CD6   SHR      VC              ; VC >>= 1, VF = LSB
$704    $FDAF   UNKNOWN  FDAF            ; Unknown Fxxx instruction
$706    $CEB3   RND      VE, #B3         ; VE = random & B3
$708    $89ED   UNKNOWN  89ED            ; Unknown 8xxx instruction
$70A    $7780   ADD      V7, #80         ; Add 128 to V7
$70C    $C8C0   RND      V8, #C0         ; V8 = random & C0
$70E    $6D80   LD       VD, #80         ; Load 128 into VD
$710    $F67B   UNKNOWN  F67B            ; Unknown Fxxx instruction
$712    $E6FD   UNKNOWN  $E6FD           ; Unknown Exxx instruction
$714    $0D36   SYS      $D36            ; System call to D36
$716    $E04A   UNKNOWN  $E04A           ; Unknown Exxx instruction
$718    $BA3D   JP       V0, $A3D        ; Jump to V0 + A3D
$71A    $514A   UNKNOWN  $514A           ; Unknown 5xxx instruction
$71C    $6BF0   LD       VB, #F0         ; Load 240 into VB
$71E    $AEB8   LD       I, $EB8         ; Load EB8 into I
$720    $3826   SE       V8, #26         ; Skip if V8 == 38
$722    $5351   UNKNOWN  $5351           ; Unknown 5xxx instruction
$724    $C0C4   RND      V0, #C4         ; V0 = random & C4
$726    $5AA1   UNKNOWN  $5AA1           ; Unknown 5xxx instruction
$728    $4375   SNE      V3, #75         ; Skip if V3 != 117
$72A    $DE78   DRW      VE, V7, #8      ; Draw 8-byte sprite at VE, V7
$72C    $27C8   CALL     $7C8            ; Call subroutine at 7C8
$72E    $A8D1   LD       I, $8D1         ; Load 8D1 into I
$730    $0DF8   SYS      $DF8            ; System call to DF8
$732    $296D   CALL     $96D            ; Call subroutine at 96D
$734    $B266   JP       V0, $266        ; Jump to V0 + 266
$736    $9521   UNKNOWN  $9521           ; Unknown 9xxx instruction
$738    $3F8C   SE       VF, #8C         ; Skip if VF == 140
$73A    $B40D   JP       V0, $40D        ; Jump to V0 + 40D
$73C    $5319   UNKNOWN  $5319           ; Unknown 5xxx instruction
$73E    $115E   JP       $15E            ; Jump to 15E
$740    $FC58   UNKNOWN  FC58            ; Unknown Fxxx instruction
$742    $BDD1   JP       V0, $DD1        ; Jump to V0 + DD1
$744    $F880   UNKNOWN  F880            ; Unknown Fxxx instruction
$746    $3E75   SE       VE, #75         ; Skip if VE == 117
$748    $B8E6   JP       V0, $8E6        ; Jump to V0 + 8E6
$74A    $92FB   UNKNOWN  $92FB           ; Unknown 9xxx instruction
$74C    $B2C6   JP       V0, $2C6        ; Jump to V0 + 2C6
$74E    $7BDD   ADD      VB, #DD         ; Add 221 to VB
$750    $FFB9   UNKNOWN  FFB9            ; Unknown Fxxx instruction
$752    $41DF   SNE      V1, #DF         ; Skip if V1 != 223
$754    $53E8   UNKNOWN  $53E8           ; Unknown 5xxx instruction
$756    $14AD   JP       $4AD            ; Jump to 4AD
$758    $271E   CALL     $71E            ; Call subroutine at 71E
$75A    $DA3F   DRW      VA, V3, #F      ; Draw 15-byte sprite at VA, V3
$75C    $C5E5   RND      V5, #E5         ; V5 = random & E5
$75E    $7CBD   ADD      VC, #BD         ; Add 189 to VC
$760    $A9EC   LD       I, $9EC         ; Load 9EC into I
$762    $7269   ADD      V2, #69         ; Add 105 to V2
$764    $6A3B   LD       VA, #3B         ; Load 59 into VA
$766    $38D4   SE       V8, #D4         ; Skip if V8 == 212
$768    $7A13   ADD      VA, #13         ; Add 19 to VA
$76A    $47B6   SNE      V7, #B6         ; Skip if V7 != 182
$76C    $3CEB   SE       VC, #EB         ; Skip if VC == 235
$76E    $735B   ADD      V3, #5B         ; Add 91 to V3
$770    $2F22   CALL     $F22            ; Call subroutine at F22
$772    $C221   RND      V2, #21         ; V2 = random & 21
$774    $8C99   UNKNOWN  8C99            ; Unknown 8xxx instruction
$776    $2F0F   CALL     $F0F            ; Call subroutine at F0F
$778    $4F3C   SNE      VF, #3C         ; Skip if VF != 60
$77A    $A5AC   LD       I, $5AC         ; Load 5AC into I
$77C    $0BCF   SYS      $BCF            ; System call to BCF
$77E    $123F   JP       $23F            ; Jump to 23F
$780    $80B1   OR       V0, VB          ; V0 |= VB
$782    $15DB   JP       $5DB            ; Jump to 5DB
$784    $840A   UNKNOWN  840A            ; Unknown 8xxx instruction
$786    $4268   SNE      V2, #68         ; Skip if V2 != 104
$788    $514A   UNKNOWN  $514A           ; Unknown 5xxx instruction
$78A    $9FC4   UNKNOWN  $9FC4           ; Unknown 9xxx instruction
$78C    $7948   ADD      V9, #48         ; Add 72 to V9
$78E    $36E8   SE       V6, #E8         ; Skip if V6 == 232
$790    $80B9   UNKNOWN  80B9            ; Unknown 8xxx instruction
$792    $5B10   SE       VB, V1          ; Skip if VB == V1
$794    $5EB9   UNKNOWN  $5EB9           ; Unknown 5xxx instruction
$796    $8CFE   SHL      VC              ; VC <<= 1, VF = MSB
$798    $3775   SE       V7, #75         ; Skip if V7 == 117
$79A    $90BE   UNKNOWN  $90BE           ; Unknown 9xxx instruction
$79C    $122D   JP       $22D            ; Jump to 22D
$79E    $827E   SHL      V2              ; V2 <<= 1, VF = MSB
$7A0    $9EE8   UNKNOWN  $9EE8           ; Unknown 9xxx instruction
$7A2    $B000   JP       V0, $000        ; Jump to V0 + 000
$7A4    $AF69   LD       I, $F69         ; Load F69 into I
$7A6    $4406   SNE      V4, #06         ; Skip if V4 != 6
$7A8    $F3E3   UNKNOWN  F3E3            ; Unknown Fxxx instruction
$7AA    $9A35   UNKNOWN  $9A35           ; Unknown 9xxx instruction
$7AC    $0B57   SYS      $B57            ; System call to B57
$7AE    $3DEE   SE       VD, #EE         ; Skip if VD == 238
$7B0    $FA2C   UNKNOWN  FA2C            ; Unknown Fxxx instruction
$7B2    $A277   LD       I, $277         ; Load 277 into I
$7B4    $0144   SYS      $144            ; System call to 144
$7B6    $64CD   LD       V4, #CD         ; Load 205 into V4
$7B8    $B7C7   JP       V0, $7C7        ; Jump to V0 + 7C7
$7BA    $B873   JP       V0, $873        ; Jump to V0 + 873
$7BC    $C2B9   RND      V2, #B9         ; V2 = random & B9
$7BE    $69DC   LD       V9, #DC         ; Load 220 into V9
$7C0    $53BF   UNKNOWN  $53BF           ; Unknown 5xxx instruction
$7C2    $5581   UNKNOWN  $5581           ; Unknown 5xxx instruction
$7C4    $D11F   DRW      V1, V1, #F      ; Draw 15-byte sprite at V1, V1
$7C6    $7F1F   ADD      VF, #1F         ; Add 31 to VF
$7C8    $98A1   UNKNOWN  $98A1           ; Unknown 9xxx instruction
$7CA    $0406   SYS      $406            ; System call to 406
$7CC    $AC07   LD       I, $C07         ; Load C07 into I
$7CE    $1FA0   JP       $FA0            ; Jump to FA0
$7D0    $4F63   SNE      VF, #63         ; Skip if VF != 99
$7D2    $4975   SNE      V9, #75         ; Skip if V9 != 117
$7D4    $9970   SNE      V9, V7          ; Skip if V9 != V7
$7D6    $609E   LD       V0, #9E         ; Load 158 into V0
$7D8    $5E07   UNKNOWN  $5E07           ; Unknown 5xxx instruction
$7DA    $E28E   UNKNOWN  $E28E           ; Unknown Exxx instruction
$7DC    $1648   JP       $648            ; Jump to 648
$7DE    $4351   SNE      V3, #51         ; Skip if V3 != 81
$7E0    $B386   JP       V0, $386        ; Jump to V0 + 386
$7E2    $AE2C   LD       I, $E2C         ; Load E2C into I
$7E4    $9E87   UNKNOWN  $9E87           ; Unknown 9xxx instruction
$7E6    $57F4   UNKNOWN  $57F4           ; Unknown 5xxx instruction
$7E8    $9C73   UNKNOWN  $9C73           ; Unknown 9xxx instruction
$7EA    $C1F0   RND      V1, #F0         ; V1 = random & F0
$7EC    $389D   SE       V8, #9D         ; Skip if V8 == 157
$7EE    $DAEE   DRW      VA, VE, #E      ; Draw 14-byte sprite at VA, VE
$7F0    $44B9   SNE      V4, #B9         ; Skip if V4 != 185
$7F2    $CCAE   RND      VC, #AE         ; VC = random & AE
$7F4    $C58D   RND      V5, #8D         ; V5 = random & 8D
$7F6    $D909   DRW      V9, V0, #9      ; Draw 9-byte sprite at V9, V0
$7F8    $4C85   SNE      VC, #85         ; Skip if VC != 133
$7FA    $3D1D   SE       VD, #1D         ; Skip if VD == 29
$7FC    $CF1A   RND      VF, #1A         ; VF = random & 1A
$7FE    $9052   UNKNOWN  $9052           ; Unknown 9xxx instruction
$800    $46E1   SNE      V6, #E1         ; Skip if V6 != 225
$802    $DF06   DRW      VF, V0, #6      ; Draw 6-byte sprite at VF, V0
$804    $71FA   ADD      V1, #FA         ; Add 250 to V1
$806    $0AFE   SYS      $AFE            ; System call to AFE
$808    $295B   CALL     $95B            ; Call subroutine at 95B
$80A    $BBEA   JP       V0, $BEA        ; Jump to V0 + BEA
$80C    $C775   RND      V7, #75         ; V7 = random & 75
$80E    $533C   UNKNOWN  $533C           ; Unknown 5xxx instruction
$810    $C58C   RND      V5, #8C         ; V5 = random & 8C
$812    $D88B   DRW      V8, V8, #B      ; Draw 11-byte sprite at V8, V8
$814    $1791   JP       $791            ; Jump to 791
$816    $7BE4   ADD      VB, #E4         ; Add 228 to VB
$818    $6BD1   LD       VB, #D1         ; Load 209 into VB
$81A    $E8D5   UNKNOWN  $E8D5           ; Unknown Exxx instruction
$81C    $B975   JP       V0, $975        ; Jump to V0 + 975
$81E    $2EC4   CALL     $EC4            ; Call subroutine at EC4
$820    $B5B9   JP       V0, $5B9        ; Jump to V0 + 5B9
$822    $735F   ADD      V3, #5F         ; Add 95 to V3
$824    $DE47   DRW      VE, V4, #7      ; Draw 7-byte sprite at VE, V4
$826    $5CCE   UNKNOWN  $5CCE           ; Unknown 5xxx instruction
$828    $0916   SYS      $916            ; System call to 916
$82A    $479B   SNE      V7, #9B         ; Skip if V7 != 155
$82C    $9EB8   UNKNOWN  $9EB8           ; Unknown 9xxx instruction
$82E    $70FE   ADD      V0, #FE         ; Add 254 to V0
$830    $7146   ADD      V1, #46         ; Add 70 to V1
$832    $C29D   RND      V2, #9D         ; V2 = random & 9D
$834    $8E5A   UNKNOWN  8E5A            ; Unknown 8xxx instruction
$836    $BCD8   JP       V0, $CD8        ; Jump to V0 + CD8
$838    $7052   ADD      V0, #52         ; Add 82 to V0
$83A    $B8C8   JP       V0, $8C8        ; Jump to V0 + 8C8
$83C    $98B1   UNKNOWN  $98B1           ; Unknown 9xxx instruction
$83E    $D4CB   DRW      V4, VC, #B      ; Draw 11-byte sprite at V4, VC
$840    $04EB   SYS      $4EB            ; System call to 4EB
$842    $3A81   SE       VA, #81         ; Skip if VA == 129
$844    $3D78   SE       VD, #78         ; Skip if VD == 120
$846    $22FC   CALL     $2FC            ; Call subroutine at 2FC
$848    $703D   ADD      V0, #3D         ; Add 61 to V0
$84A    $78D6   ADD      V8, #D6         ; Add 214 to V8
$84C    $F5AF   UNKNOWN  F5AF            ; Unknown Fxxx instruction
$84E    $0E4A   SYS      $E4A            ; System call to E4A
$850    $E454   UNKNOWN  $E454           ; Unknown Exxx instruction
$852    $8242   AND      V2, V4          ; V2 &= V4
$854    $E670   UNKNOWN  $E670           ; Unknown Exxx instruction
$856    $8C69   UNKNOWN  8C69            ; Unknown 8xxx instruction
$858    $59E6   UNKNOWN  $59E6           ; Unknown 5xxx instruction
$85A    $D7A5   DRW      V7, VA, #5      ; Draw 5-byte sprite at V7, VA
$85C    $6328   LD       V3, #28         ; Load 40 into V3
$85E    $889E   SHL      V8              ; V8 <<= 1, VF = MSB
$860    $7106   ADD      V1, #06         ; Add 6 to V1
$862    $2C15   CALL     $C15            ; Call subroutine at C15
$864    $F273   UNKNOWN  F273            ; Unknown Fxxx instruction
$866    $ECF4   UNKNOWN  $ECF4           ; Unknown Exxx instruction
$868    $2EEF   CALL     $EEF            ; Call subroutine at EEF
$86A    $DC64   DRW      VC, V6, #4      ; Draw 4-byte sprite at VC, V6
$86C    $446F   SNE      V4, #6F         ; Skip if V4 != 111
$86E    $9C6F   UNKNOWN  $9C6F           ; Unknown 9xxx instruction
$870    $35A6   SE       V5, #A6         ; Skip if V5 == 166
$872    $8C05   SUB      VC, V0          ; VC -= V0, VF = !borrow
$874    $1870   JP       $870            ; Jump to 870
$876    $4677   SNE      V6, #77         ; Skip if V6 != 119
$878    $666F   LD       V6, #6F         ; Load 111 into V6
$87A    $43E8   SNE      V3, #E8         ; Skip if V3 != 232
$87C    $479F   SNE      V7, #9F         ; Skip if V7 != 159
$87E    $BFA0   JP       V0, $FA0        ; Jump to V0 + FA0
$880    $C3F4   RND      V3, #F4         ; V3 = random & F4
$882    $A184   LD       I, $184         ; Load 184 into I
$884    $3B95   SE       VB, #95         ; Skip if VB == 149
$886    $1701   JP       $701            ; Jump to 701
$888    $581F   UNKNOWN  $581F           ; Unknown 5xxx instruction
$88A    $527A   UNKNOWN  $527A           ; Unknown 5xxx instruction
$88C    $A8CB   LD       I, $8CB         ; Load 8CB into I
$88E    $DA15   DRW      VA, V1, #5      ; Draw 5-byte sprite at VA, V1
$890    $0B9A   SYS      $B9A            ; System call to B9A
$892    $C582   RND      V5, #82         ; V5 = random & 82
$894    $2420   CALL     $420            ; Call subroutine at 420
$896    $3445   SE       V4, #45         ; Skip if V4 == 69
$898    $EFF4   UNKNOWN  $EFF4           ; Unknown Exxx instruction
$89A    $1FA6   JP       $FA6            ; Jump to FA6
$89C    $F1B2   UNKNOWN  F1B2            ; Unknown Fxxx instruction
$89E    $FED1   UNKNOWN  FED1            ; Unknown Fxxx instruction
$8A0    $5D1D   UNKNOWN  $5D1D           ; Unknown 5xxx instruction
$8A2    $267E   CALL     $67E            ; Call subroutine at 67E
$8A4    $D464   DRW      V4, V6, #4      ; Draw 4-byte sprite at V4, V6
$8A6    $7FCF   ADD      VF, #CF         ; Add 207 to VF
$8A8    $4092   SNE      V0, #92         ; Skip if V0 != 146
$8AA    $753B   ADD      V5, #3B         ; Add 59 to V5
$8AC    $34FD   SE       V4, #FD         ; Skip if V4 == 253
$8AE    $7A86   ADD      VA, #86         ; Add 134 to VA
$8B0    $3B38   SE       VB, #38         ; Skip if VB == 56
$8B2    $36A4   SE       V6, #A4         ; Skip if V6 == 164
$8B4    $4C7F   SNE      VC, #7F         ; Skip if VC != 127
$8B6    $BD3B   JP       V0, $D3B        ; Jump to V0 + D3B
$8B8    $FC9E   UNKNOWN  FC9E            ; Unknown Fxxx instruction
$8BA    $F59E   UNKNOWN  F59E            ; Unknown Fxxx instruction
$8BC    $A7A6   LD       I, $7A6         ; Load 7A6 into I
$8BE    $06C3   SYS      $6C3            ; System call to 6C3
$8C0    $9DEB   UNKNOWN  $9DEB           ; Unknown 9xxx instruction
$8C2    $6D63   LD       VD, #63         ; Load 99 into VD
$8C4    $3CB7   SE       VC, #B7         ; Skip if VC == 183
$8C6    $F3A1   UNKNOWN  F3A1            ; Unknown Fxxx instruction
$8C8    $0EDA   SYS      $EDA            ; System call to EDA
$8CA    $48DE   SNE      V8, #DE         ; Skip if V8 != 222
$8CC    $1214   JP       $214            ; Jump to 214
$8CE    $7F8E   ADD      VF, #8E         ; Add 142 to VF
$8D0    $698E   LD       V9, #8E         ; Load 142 into V9
$8D2    $7E5C   ADD      VE, #5C         ; Add 92 to VE
$8D4    $83BD   UNKNOWN  83BD            ; Unknown 8xxx instruction
$8D6    $AEAF   LD       I, $EAF         ; Load EAF into I
$8D8    $0583   SYS      $583            ; System call to 583
$8DA    $8445   SUB      V4, V4          ; V4 -= V4, VF = !borrow
$8DC    $47F1   SNE      V7, #F1         ; Skip if V7 != 241
$8DE    $0140   SYS      $140            ; System call to 140
$8E0    $6F2C   LD       VF, #2C         ; Load 44 into VF
$8E2    $910C   UNKNOWN  $910C           ; Unknown 9xxx instruction
$8E4    $B851   JP       V0, $851        ; Jump to V0 + 851
$8E6    $CDA4   RND      VD, #A4         ; VD = random & A4
$8E8    $297D   CALL     $97D            ; Call subroutine at 97D
$8EA    $8946   SHR      V9              ; V9 >>= 1, VF = LSB
$8EC    $3BE5   SE       VB, #E5         ; Skip if VB == 229
$8EE    $EFA6   UNKNOWN  $EFA6           ; Unknown Exxx instruction
$8F0    $9F7B   UNKNOWN  $9F7B           ; Unknown 9xxx instruction
$8F2    $AE5E   LD       I, $E5E         ; Load E5E into I
$8F4    $DC25   DRW      VC, V2, #5      ; Draw 5-byte sprite at VC, V2
$8F6    $0F33   SYS      $F33            ; System call to F33
$8F8    $16FE   JP       $6FE            ; Jump to 6FE
$8FA    $0656   SYS      $656            ; System call to 656
$8FC    $E79B   UNKNOWN  $E79B           ; Unknown Exxx instruction
$8FE    $D2F6   DRW      V2, VF, #6      ; Draw 6-byte sprite at V2, VF
$900    $AD97   LD       I, $D97         ; Load D97 into I
$902    $3AC0   SE       VA, #C0         ; Skip if VA == 192
$904    $2077   CALL     $077            ; Call subroutine at 077
$906    $4064   SNE      V0, #64         ; Skip if V0 != 100
$908    $C44A   RND      V4, #4A         ; V4 = random & 4A
$90A    $AC10   LD       I, $C10         ; Load C10 into I
$90C    $2E88   CALL     $E88            ; Call subroutine at E88
$90E    $2917   CALL     $917            ; Call subroutine at 917
$910    $8D39   UNKNOWN  8D39            ; Unknown 8xxx instruction
$912    $C955   RND      V9, #55         ; V9 = random & 55
$914    $0FE9   SYS      $FE9            ; System call to FE9
$916    $C3B2   RND      V3, #B2         ; V3 = random & B2
$918    $5462   UNKNOWN  $5462           ; Unknown 5xxx instruction
$91A    $5932   UNKNOWN  $5932           ; Unknown 5xxx instruction
$91C    $4689   SNE      V6, #89         ; Skip if V6 != 137
$91E    $8AD1   OR       VA, VD          ; VA |= VD
$920    $A3CC   LD       I, $3CC         ; Load 3CC into I
$922    $0019   SYS      $019            ; System call to 019
$924    $275E   CALL     $75E            ; Call subroutine at 75E
$926    $D054   DRW      V0, V5, #4      ; Draw 4-byte sprite at V0, V5
$928    $818B   UNKNOWN  818B            ; Unknown 8xxx instruction
$92A    $030E   SYS      $30E            ; System call to 30E
$92C    $C253   RND      V2, #53         ; V2 = random & 53
$92E    $FF3A   UNKNOWN  FF3A            ; Unknown Fxxx instruction
$930    $4775   SNE      V7, #75         ; Skip if V7 != 117
$932    $277E   CALL     $77E            ; Call subroutine at 77E
$934    $4E45   SNE      VE, #45         ; Skip if VE != 69
$936    $B20D   JP       V0, $20D        ; Jump to V0 + 20D
$938    $CE74   RND      VE, #74         ; VE = random & 74
$93A    $7C72   ADD      VC, #72         ; Add 114 to VC
$93C    $C96E   RND      V9, #6E         ; V9 = random & 6E
$93E    $5253   UNKNOWN  $5253           ; Unknown 5xxx instruction
$940    $54B8   UNKNOWN  $54B8           ; Unknown 5xxx instruction
$942    $D944   DRW      V9, V4, #4      ; Draw 4-byte sprite at V9, V4
$944    $BF40   JP       V0, $F40        ; Jump to V0 + F40
$946    $B02A   JP       V0, $02A        ; Jump to V0 + 02A
$948    $3EA0   SE       VE, #A0         ; Skip if VE == 160
$94A    $20D8   CALL     $0D8            ; Call subroutine at 0D8
$94C    $0FDC   SYS      $FDC            ; System call to FDC
$94E    $55BF   UNKNOWN  $55BF           ; Unknown 5xxx instruction
$950    $043E   SYS      $43E            ; System call to 43E
$952    $A764   LD       I, $764         ; Load 764 into I
$954    $70EA   ADD      V0, #EA         ; Add 234 to V0
$956    $CCB3   RND      VC, #B3         ; VC = random & B3
$958    $1356   JP       $356            ; Jump to 356
$95A    $09F7   SYS      $9F7            ; System call to 9F7
$95C    $0AC2   SYS      $AC2            ; System call to AC2
$95E    $639F   LD       V3, #9F         ; Load 159 into V3
$960    $3FA2   SE       VF, #A2         ; Skip if VF == 162
$962    $4B6A   SNE      VB, #6A         ; Skip if VB != 106
$964    $9E30   SNE      VE, V3          ; Skip if VE != V3
$966    $0198   SYS      $198            ; System call to 198
$968    $3C32   SE       VC, #32         ; Skip if VC == 50
$96A    $620B   LD       V2, #0B         ; Load 11 into V2
$96C    $2CA7   CALL     $CA7            ; Call subroutine at CA7
$96E    $51FF   UNKNOWN  $51FF           ; Unknown 5xxx instruction
$970    $7AF3   ADD      VA, #F3         ; Add 243 to VA
$972    $908F   UNKNOWN  $908F           ; Unknown 9xxx instruction
$974    $105D   JP       $05D            ; Jump to 05D
$976    $91A2   UNKNOWN  $91A2           ; Unknown 9xxx instruction
$978    $F726   UNKNOWN  F726            ; Unknown Fxxx instruction
$97A    $C7EF   RND      V7, #EF         ; V7 = random & EF
$97C    $578B   UNKNOWN  $578B           ; Unknown 5xxx instruction
$97E    $BF43   JP       V0, $F43        ; Jump to V0 + F43
$980    $C8ED   RND      V8, #ED         ; V8 = random & ED
$982    $386F   SE       V8, #6F         ; Skip if V8 == 111
$984    $A393   LD       I, $393         ; Load 393 into I
$986    $874A   UNKNOWN  874A            ; Unknown 8xxx instruction
$988    $6AE3   LD       VA, #E3         ; Load 227 into VA
$98A    $6E30   LD       VE, #30         ; Load 48 into VE
$98C    $45E2   SNE      V5, #E2         ; Skip if V5 != 226
$98E    $0D09   SYS      $D09            ; System call to D09
$990    $2164   CALL     $164            ; Call subroutine at 164
$992    $1935   JP       $935            ; Jump to 935
$994    $3B19   SE       VB, #19         ; Skip if VB == 25
$996    $1D45   JP       $D45            ; Jump to D45
$998    $6BA5   LD       VB, #A5         ; Load 165 into VB
$99A    $FE78   UNKNOWN  FE78            ; Unknown Fxxx instruction
$99C    $39AE   SE       V9, #AE         ; Skip if V9 == 174
$99E    $E18E   UNKNOWN  $E18E           ; Unknown Exxx instruction
$9A0    $3C2E   SE       VC, #2E         ; Skip if VC == 46
$9A2    $7B36   ADD      VB, #36         ; Add 54 to VB
$9A4    $FEE7   UNKNOWN  FEE7            ; Unknown Fxxx instruction
$9A6    $0877   SYS      $877            ; System call to 877
$9A8    $99E9   UNKNOWN  $99E9           ; Unknown 9xxx instruction
$9AA    $13D8   JP       $3D8            ; Jump to 3D8
$9AC    $320B   SE       V2, #0B         ; Skip if V2 == 11
$9AE    $78D4   ADD      V8, #D4         ; Add 212 to V8
$9B0    $D6D8   DRW      V6, VD, #8      ; Draw 8-byte sprite at V6, VD
$9B2    $6718   LD       V7, #18         ; Load 24 into V7
$9B4    $7375   ADD      V3, #75         ; Add 117 to V3
$9B6    $6820   LD       V8, #20         ; Load 32 into V8
$9B8    $A359   LD       I, $359         ; Load 359 into I
$9BA    $40D9   SNE      V0, #D9         ; Skip if V0 != 217
$9BC    $71B9   ADD      V1, #B9         ; Add 185 to V1
$9BE    $7A10   ADD      VA, #10         ; Add 16 to VA
$9C0    $F715   LD       DT, V7          ; Delay timer = V7
$9C2    $0F1F   SYS      $F1F            ; System call to F1F
$9C4    $120A   JP       $20A            ; Jump to 20A
$9C6    $BF15   JP       V0, $F15        ; Jump to V0 + F15
$9C8    $CC82   RND      VC, #82         ; VC = random & 82
$9CA    $0A3A   SYS      $A3A            ; System call to A3A
$9CC    $8804   ADD      V8, V0          ; V8 += V0, VF = carry
$9CE    $A0CE   LD       I, $0CE         ; Load 0CE into I
$9D0    $4B67   SNE      VB, #67         ; Skip if VB != 103
$9D2    $F97D   UNKNOWN  F97D            ; Unknown Fxxx instruction
$9D4    $A63F   LD       I, $63F         ; Load 63F into I
$9D6    $1527   JP       $527            ; Jump to 527
$9D8    $5FF5   UNKNOWN  $5FF5           ; Unknown 5xxx instruction
$9DA    $F20B   UNKNOWN  F20B            ; Unknown Fxxx instruction
$9DC    $8FB2   AND      VF, VB          ; VF &= VB
$9DE    $2F4D   CALL     $F4D            ; Call subroutine at F4D
$9E0    $F62C   UNKNOWN  F62C            ; Unknown Fxxx instruction
$9E2    $DEB3   DRW      VE, VB, #3      ; Draw 3-byte sprite at VE, VB
$9E4    $2596   CALL     $596            ; Call subroutine at 596
$9E6    $D177   DRW      V1, V7, #7      ; Draw 7-byte sprite at V1, V7
$9E8    $F296   UNKNOWN  F296            ; Unknown Fxxx instruction
$9EA    $F751   UNKNOWN  F751            ; Unknown Fxxx instruction
$9EC    $C195   RND      V1, #95         ; V1 = random & 95
$9EE    $3512   SE       V5, #12         ; Skip if V5 == 18
$9F0    $2891   CALL     $891            ; Call subroutine at 891
$9F2    $A5DB   LD       I, $5DB         ; Load 5DB into I
$9F4    $0979   SYS      $979            ; System call to 979
$9F6    $3C71   SE       VC, #71         ; Skip if VC == 113
$9F8    $6631   LD       V6, #31         ; Load 49 into V6
$9FA    $069C   SYS      $69C            ; System call to 69C
$9FC    $67EC   LD       V7, #EC         ; Load 236 into V7
$9FE    $8B6F   UNKNOWN  8B6F            ; Unknown 8xxx instruction
$A00    $DB29   DRW      VB, V2, #9      ; Draw 9-byte sprite at VB, V2
$A02    $63C6   LD       V3, #C6         ; Load 198 into V3
$A04    $9BCC   UNKNOWN  $9BCC           ; Unknown 9xxx instruction
$A06    $7332   ADD      V3, #32         ; Add 50 to V3
$A08    $4FAC   SNE      VF, #AC         ; Skip if VF != 172
$A0A    $8AB3   XOR      VA, VB          ; VA ^= VB
$A0C    $6250   LD       V2, #50         ; Load 80 into V2
$A0E    $FABB   UNKNOWN  FABB            ; Unknown Fxxx instruction
$A10    $1192   JP       $192            ; Jump to 192
$A12    $3DF3   SE       VD, #F3         ; Skip if VD == 243
$A14    $D7A4   DRW      V7, VA, #4      ; Draw 4-byte sprite at V7, VA
$A16    $5631   UNKNOWN  $5631           ; Unknown 5xxx instruction
$A18    $E06A   UNKNOWN  $E06A           ; Unknown Exxx instruction
$A1A    $BB99   JP       V0, $B99        ; Jump to V0 + B99
$A1C    $5DB0   SE       VD, VB          ; Skip if VD == VB
$A1E    $4285   SNE      V2, #85         ; Skip if V2 != 133
$A20    $22FC   CALL     $2FC            ; Call subroutine at 2FC
$A22    $570C   UNKNOWN  $570C           ; Unknown 5xxx instruction
$A24    $5A45   UNKNOWN  $5A45           ; Unknown 5xxx instruction
$A26    $0B5C   SYS      $B5C            ; System call to B5C
$A28    $2A3F   CALL     $A3F            ; Call subroutine at A3F
$A2A    $91CF   UNKNOWN  $91CF           ; Unknown 9xxx instruction
$A2C    $EE58   UNKNOWN  $EE58           ; Unknown Exxx instruction
$A2E    $A3CE   LD       I, $3CE         ; Load 3CE into I
$A30    $599D   UNKNOWN  $599D           ; Unknown 5xxx instruction
$A32    $2668   CALL     $668            ; Call subroutine at 668
$A34    $D60A   DRW      V6, V0, #A      ; Draw 10-byte sprite at V6, V0
$A36    $50B4   UNKNOWN  $50B4           ; Unknown 5xxx instruction
$A38    $197B   JP       $97B            ; Jump to 97B
$A3A    $2E25   CALL     $E25            ; Call subroutine at E25
$A3C    $2B26   CALL     $B26            ; Call subroutine at B26
$A3E    $B29F   JP       V0, $29F        ; Jump to V0 + 29F
$A40    $4D52   SNE      VD, #52         ; Skip if VD != 82
$A42    $9FE0   SNE      VF, VE          ; Skip if VF != VE
$A44    $BF16   JP       V0, $F16        ; Jump to V0 + F16
$A46    $8E4E   SHL      VE              ; VE <<= 1, VF = MSB
$A48    $135C   JP       $35C            ; Jump to 35C
$A4A    $B14A   JP       V0, $14A        ; Jump to V0 + 14A
$A4C    $46DF   SNE      V6, #DF         ; Skip if V6 != 223
$A4E    $9174   UNKNOWN  $9174           ; Unknown 9xxx instruction
$A50    $7701   ADD      V7, #01         ; Add 1 to V7
$A52    $F49C   UNKNOWN  F49C            ; Unknown Fxxx instruction
$A54    $CAEB   RND      VA, #EB         ; VA = random & EB
$A56    $0793   SYS      $793            ; System call to 793
$A58    $A568   LD       I, $568         ; Load 568 into I
$A5A    $5621   UNKNOWN  $5621           ; Unknown 5xxx instruction
$A5C    $4F05   SNE      VF, #05         ; Skip if VF != 5
$A5E    $02E6   SYS      $2E6            ; System call to 2E6
$A60    $A9BA   LD       I, $9BA         ; Load 9BA into I
$A62    $EE8A   UNKNOWN  $EE8A           ; Unknown Exxx instruction
$A64    $814F   UNKNOWN  814F            ; Unknown 8xxx instruction
$A66    $B4AB   JP       V0, $4AB        ; Jump to V0 + 4AB
$A68    $A4E1   LD       I, $4E1         ; Load 4E1 into I
$A6A    $35EE   SE       V5, #EE         ; Skip if V5 == 238
$A6C    $68E3   LD       V8, #E3         ; Load 227 into V8
$A6E    $A7CA   LD       I, $7CA         ; Load 7CA into I
$A70    $DB14   DRW      VB, V1, #4      ; Draw 4-byte sprite at VB, V1
$A72    $CA9B   RND      VA, #9B         ; VA = random & 9B
$A74    $552B   UNKNOWN  $552B           ; Unknown 5xxx instruction
$A76    $7C30   ADD      VC, #30         ; Add 48 to VC
$A78    $8D0A   UNKNOWN  8D0A            ; Unknown 8xxx instruction
$A7A    $33C9   SE       V3, #C9         ; Skip if V3 == 201
$A7C    $CB7F   RND      VB, #7F         ; VB = random & 7F
$A7E    $A869   LD       I, $869         ; Load 869 into I
$A80    $843A   UNKNOWN  843A            ; Unknown 8xxx instruction
$A82    $DE2C   DRW      VE, V2, #C      ; Draw 12-byte sprite at VE, V2
$A84    $3279   SE       V2, #79         ; Skip if V2 == 121
$A86    $8995   SUB      V9, V9          ; V9 -= V9, VF = !borrow
$A88    $9553   UNKNOWN  $9553           ; Unknown 9xxx instruction
$A8A    $6E18   LD       VE, #18         ; Load 24 into VE
$A8C    $9B88   UNKNOWN  $9B88           ; Unknown 9xxx instruction
$A8E    $B498   JP       V0, $498        ; Jump to V0 + 498
$A90    $70E1   ADD      V0, #E1         ; Add 225 to V0
$A92    $DBFA   DRW      VB, VF, #A      ; Draw 10-byte sprite at VB, VF
$A94    $85F4   ADD      V5, VF          ; V5 += VF, VF = carry
$A96    $D25E   DRW      V2, V5, #E      ; Draw 14-byte sprite at V2, V5
$A98    $1FF6   JP       $FF6            ; Jump to FF6
$A9A    $A590   LD       I, $590         ; Load 590 into I
$A9C    $E80C   UNKNOWN  $E80C           ; Unknown Exxx instruction
$A9E    $6B53   LD       VB, #53         ; Load 83 into VB
$AA0    $8190   LD       V1, V9          ; V1 = V9
$AA2    $4885   SNE      V8, #85         ; Skip if V8 != 133
$AA4    $9153   UNKNOWN  $9153           ; Unknown 9xxx instruction
$AA6    $BD35   JP       V0, $D35        ; Jump to V0 + D35
$AA8    $9F89   UNKNOWN  $9F89           ; Unknown 9xxx instruction
$AAA    $FF34   UNKNOWN  FF34            ; Unknown Fxxx instruction
$AAC    $22CC   CALL     $2CC            ; Call subroutine at 2CC
$AAE    $30AF   SE       V0, #AF         ; Skip if V0 == 175
$AB0    $06A9   SYS      $6A9            ; System call to 6A9
$AB2    $6C13   LD       VC, #13         ; Load 19 into VC
$AB4    $27E1   CALL     $7E1            ; Call subroutine at 7E1
$AB6    $70EC   ADD      V0, #EC         ; Add 236 to V0
$AB8    $95FE   UNKNOWN  $95FE           ; Unknown 9xxx instruction
$ABA    $E111   UNKNOWN  $E111           ; Unknown Exxx instruction
$ABC    $B231   JP       V0, $231        ; Jump to V0 + 231
$ABE    $3484   SE       V4, #84         ; Skip if V4 == 132
$AC0    $8D5C   UNKNOWN  8D5C            ; Unknown 8xxx instruction
$AC2    $A10E   LD       I, $10E         ; Load 10E into I
$AC4    $ED67   UNKNOWN  $ED67           ; Unknown Exxx instruction
$AC6    $2C12   CALL     $C12            ; Call subroutine at C12
$AC8    $164E   JP       $64E            ; Jump to 64E
$ACA    $1FE1   JP       $FE1            ; Jump to FE1
$ACC    $7139   ADD      V1, #39         ; Add 57 to V1
$ACE    $AC2E   LD       I, $C2E         ; Load C2E into I
$AD0    $170D   JP       $70D            ; Jump to 70D
$AD2    $77AF   ADD      V7, #AF         ; Add 175 to V7
$AD4    $40AE   SNE      V0, #AE         ; Skip if V0 != 174
$AD6    $FBF6   UNKNOWN  FBF6            ; Unknown Fxxx instruction
$AD8    $0D86   SYS      $D86            ; System call to D86
$ADA    $0435   SYS      $435            ; System call to 435
$ADC    $C46E   RND      V4, #6E         ; V4 = random & 6E
$ADE    $F14D   UNKNOWN  F14D            ; Unknown Fxxx instruction
$AE0    $B097   JP       V0, $097        ; Jump to V0 + 097
$AE2    $7F0E   ADD      VF, #0E         ; Add 14 to VF
$AE4    $7678   ADD      V6, #78         ; Add 120 to V6
$AE6    $4D1A   SNE      VD, #1A         ; Skip if VD != 26
$AE8    $8AC9   UNKNOWN  8AC9            ; Unknown 8xxx instruction
$AEA    $64E4   LD       V4, #E4         ; Load 228 into V4
$AEC    $B3E8   JP       V0, $3E8        ; Jump to V0 + 3E8
$AEE    $3247   SE       V2, #47         ; Skip if V2 == 71
$AF0    $4788   SNE      V7, #88         ; Skip if V7 != 136
$AF2    $58EC   UNKNOWN  $58EC           ; Unknown 5xxx instruction
$AF4    $006F   SYS      $06F            ; System call to 06F
$AF6    $9F07   UNKNOWN  $9F07           ; Unknown 9xxx instruction
$AF8    $4AEB   SNE      VA, #EB         ; Skip if VA != 235
$AFA    $0419   SYS      $419            ; System call to 419
$AFC    $A8C8   LD       I, $8C8         ; Load 8C8 into I
$AFE    $0FB6   SYS      $FB6            ; System call to FB6
$B00    $1801   JP       $801            ; Jump to 801
$B02    $6FFC   LD       VF, #FC         ; Load 252 into VF
$B04    $7AE7   ADD      VA, #E7         ; Add 231 to VA
$B06    $B9A9   JP       V0, $9A9        ; Jump to V0 + 9A9
$B08    $BB1E   JP       V0, $B1E        ; Jump to V0 + B1E
$B0A    $7C3F   ADD      VC, #3F         ; Add 63 to VC
$B0C    $BE7D   JP       V0, $E7D        ; Jump to V0 + E7D
$B0E    $DF53   DRW      VF, V5, #3      ; Draw 3-byte sprite at VF, V5
$B10    $44B1   SNE      V4, #B1         ; Skip if V4 != 177
$B12    $538F   UNKNOWN  $538F           ; Unknown 5xxx instruction
$B14    $A173   LD       I, $173         ; Load 173 into I
$B16    $2165   CALL     $165            ; Call subroutine at 165
$B18    $2DFF   CALL     $DFF            ; Call subroutine at DFF
$B1A    $0E9D   SYS      $E9D            ; System call to E9D
$B1C    $CB71   RND      VB, #71         ; VB = random & 71
$B1E    $A88F   LD       I, $88F         ; Load 88F into I
$B20    $4241   SNE      V2, #41         ; Skip if V2 != 65
$B22    $70DC   ADD      V0, #DC         ; Add 220 to V0
$B24    $396B   SE       V9, #6B         ; Skip if V9 == 107
$B26    $8AE5   SUB      VA, VE          ; VA -= VE, VF = !borrow
$B28    $3955   SE       V9, #55         ; Skip if V9 == 85
$B2A    $71DB   ADD      V1, #DB         ; Add 219 to V1
$B2C    $8E41   OR       VE, V4          ; VE |= V4
$B2E    $CB6E   RND      VB, #6E         ; VB = random & 6E
$B30    $CA5E   RND      VA, #5E         ; VA = random & 5E
$B32    $D34A   DRW      V3, V4, #A      ; Draw 10-byte sprite at V3, V4
$B34    $256B   CALL     $56B            ; Call subroutine at 56B
$B36    $2DBE   CALL     $DBE            ; Call subroutine at DBE
$B38    $059E   SYS      $59E            ; System call to 59E
$B3A    $C824   RND      V8, #24         ; V8 = random & 24
$B3C    $69D4   LD       V9, #D4         ; Load 212 into V9
$B3E    $D75C   DRW      V7, V5, #C      ; Draw 12-byte sprite at V7, V5
$B40    $E05C   UNKNOWN  $E05C           ; Unknown Exxx instruction
$B42    $E690   UNKNOWN  $E690           ; Unknown Exxx instruction
$B44    $A9D1   LD       I, $9D1         ; Load 9D1 into I
$B46    $B852   JP       V0, $852        ; Jump to V0 + 852
$B48    $3C1A   SE       VC, #1A         ; Skip if VC == 26
$B4A    $2525   CALL     $525            ; Call subroutine at 525
$B4C    $91EF   UNKNOWN  $91EF           ; Unknown 9xxx instruction
$B4E    $4F0C   SNE      VF, #0C         ; Skip if VF != 12
$B50    $9807   UNKNOWN  $9807           ; Unknown 9xxx instruction
$B52    $D4A9   DRW      V4, VA, #9      ; Draw 9-byte sprite at V4, VA
$B54    $DF53   DRW      VF, V5, #3      ; Draw 3-byte sprite at VF, V5
$B56    $BFDA   JP       V0, $FDA        ; Jump to V0 + FDA
$B58    $ED85   UNKNOWN  $ED85           ; Unknown Exxx instruction
$B5A    $86E0   LD       V6, VE          ; V6 = VE
$B5C    $9373   UNKNOWN  $9373           ; Unknown 9xxx instruction
$B5E    $552A   UNKNOWN  $552A           ; Unknown 5xxx instruction
$B60    $C5D3   RND      V5, #D3         ; V5 = random & D3
$B62    $26AD   CALL     $6AD            ; Call subroutine at 6AD
$B64    $0183   SYS      $183            ; System call to 183
$B66    $3A1C   SE       VA, #1C         ; Skip if VA == 28
$B68    $23CB   CALL     $3CB            ; Call subroutine at 3CB
$B6A    $10B6   JP       $0B6            ; Jump to 0B6
$B6C    $F2A7   UNKNOWN  F2A7            ; Unknown Fxxx instruction
$B6E    $DE56   DRW      VE, V5, #6      ; Draw 6-byte sprite at VE, V5
$B70    $3DB2   SE       VD, #B2         ; Skip if VD == 178
$B72    $865B   UNKNOWN  865B            ; Unknown 8xxx instruction
$B74    $88E7   SUBN     V8, VE          ; V8 = VE - V8, VF = !borrow
$B76    $4B35   SNE      VB, #35         ; Skip if VB != 53
$B78    $A475   LD       I, $475         ; Load 475 into I
$B7A    $9971   UNKNOWN  $9971           ; Unknown 9xxx instruction
$B7C    $043C   SYS      $43C            ; System call to 43C
$B7E    $60CB   LD       V0, #CB         ; Load 203 into V0
$B80    $64E8   LD       V4, #E8         ; Load 232 into V4
$B82    $4FD5   SNE      VF, #D5         ; Skip if VF != 213
$B84    $BA90   JP       V0, $A90        ; Jump to V0 + A90
$B86    $972E   UNKNOWN  $972E           ; Unknown 9xxx instruction
$B88    $FB47   UNKNOWN  FB47            ; Unknown Fxxx instruction
$B8A    $C7EF   RND      V7, #EF         ; V7 = random & EF
$B8C    $FD6C   UNKNOWN  FD6C            ; Unknown Fxxx instruction
$B8E    $EE19   UNKNOWN  $EE19           ; Unknown Exxx instruction
$B90    $45B0   SNE      V5, #B0         ; Skip if V5 != 176
$B92    $379B   SE       V7, #9B         ; Skip if V7 == 155
$B94    $4C72   SNE      VC, #72         ; Skip if VC != 114
$B96    $64C8   LD       V4, #C8         ; Load 200 into V4
$B98    $B421   JP       V0, $421        ; Jump to V0 + 421
$B9A    $B93F   JP       V0, $93F        ; Jump to V0 + 93F
$B9C    $6D53   LD       VD, #53         ; Load 83 into VD
$B9E    $5157   UNKNOWN  $5157           ; Unknown 5xxx instruction
$BA0    $D40E   DRW      V4, V0, #E      ; Draw 14-byte sprite at V4, V0
$BA2    $B24C   JP       V0, $24C        ; Jump to V0 + 24C
$BA4    $5795   UNKNOWN  $5795           ; Unknown 5xxx instruction
$BA6    $FB4C   UNKNOWN  FB4C            ; Unknown Fxxx instruction
$BA8    $9B2D   UNKNOWN  $9B2D           ; Unknown 9xxx instruction
$BAA    $D6C2   DRW      V6, VC, #2      ; Draw 2-byte sprite at V6, VC
$BAC    $D39E   DRW      V3, V9, #E      ; Draw 14-byte sprite at V3, V9
$BAE    $B8E7   JP       V0, $8E7        ; Jump to V0 + 8E7
$BB0    $398F   SE       V9, #8F         ; Skip if V9 == 143
$BB2    $1290   JP       $290            ; Jump to 290
$BB4    $7CD0   ADD      VC, #D0         ; Add 208 to VC
$BB6    $0750   SYS      $750            ; System call to 750
$BB8    $09AA   SYS      $9AA            ; System call to 9AA
$BBA    $F6D7   UNKNOWN  F6D7            ; Unknown Fxxx instruction
$BBC    $8B80   LD       VB, V8          ; VB = V8
$BBE    $7E4F   ADD      VE, #4F         ; Add 79 to VE
$BC0    $C646   RND      V6, #46         ; V6 = random & 46
$BC2    $CEFB   RND      VE, #FB         ; VE = random & FB
$BC4    $48D1   SNE      V8, #D1         ; Skip if V8 != 209
$BC6    $033F   SYS      $33F            ; System call to 33F
$BC8    $C434   RND      V4, #34         ; V4 = random & 34
$BCA    $4C22   SNE      VC, #22         ; Skip if VC != 34
$BCC    $3D3F   SE       VD, #3F         ; Skip if VD == 63
$BCE    $6276   LD       V2, #76         ; Load 118 into V2
$BD0    $3748   SE       V7, #48         ; Skip if V7 == 72
$BD2    $77D9   ADD      V7, #D9         ; Add 217 to V7
$BD4    $9CA0   SNE      VC, VA          ; Skip if VC != VA
$BD6    $15E7   JP       $5E7            ; Jump to 5E7
$BD8    $AAC3   LD       I, $AC3         ; Load AC3 into I
$BDA    $E594   UNKNOWN  $E594           ; Unknown Exxx instruction
$BDC    $A2A1   LD       I, $2A1         ; Load 2A1 into I
$BDE    $3092   SE       V0, #92         ; Skip if V0 == 146
$BE0    $519E   UNKNOWN  $519E           ; Unknown 5xxx instruction
$BE2    $A134   LD       I, $134         ; Load 134 into I
$BE4    $E2F5   UNKNOWN  $E2F5           ; Unknown Exxx instruction
$BE6    $80FD   UNKNOWN  80FD            ; Unknown 8xxx instruction
$BE8    $AA66   LD       I, $A66         ; Load A66 into I
$BEA    $B8B2   JP       V0, $8B2        ; Jump to V0 + 8B2
$BEC    $9EBD   UNKNOWN  $9EBD           ; Unknown 9xxx instruction
$BEE    $7D83   ADD      VD, #83         ; Add 131 to VD
$BF0    $544B   UNKNOWN  $544B           ; Unknown 5xxx instruction
$BF2    $18B6   JP       $8B6            ; Jump to 8B6
$BF4    $A049   LD       I, $049         ; Load 049 into I
$BF6    $4452   SNE      V4, #52         ; Skip if V4 != 82
$BF8    $513A   UNKNOWN  $513A           ; Unknown 5xxx instruction
$BFA    $D16A   DRW      V1, V6, #A      ; Draw 10-byte sprite at V1, V6
$BFC    $CFF8   RND      VF, #F8         ; VF = random & F8
$BFE    $54E8   UNKNOWN  $54E8           ; Unknown 5xxx instruction
$C00    $A1D1   LD       I, $1D1         ; Load 1D1 into I
$C02    $A69C   LD       I, $69C         ; Load 69C into I
$C04    $0E8B   SYS      $E8B            ; System call to E8B
$C06    $4291   SNE      V2, #91         ; Skip if V2 != 145
$C08    $7ABC   ADD      VA, #BC         ; Add 188 to VA
$C0A    $C30C   RND      V3, #0C         ; V3 = random & 0C
$C0C    $9CCF   UNKNOWN  $9CCF           ; Unknown 9xxx instruction
$C0E    $9FDB   UNKNOWN  $9FDB           ; Unknown 9xxx instruction
$C10    $A831   LD       I, $831         ; Load 831 into I
$C12    $9AA1   UNKNOWN  $9AA1           ; Unknown 9xxx instruction
$C14    $650E   LD       V5, #0E         ; Load 14 into V5
$C16    $2211   CALL     $211            ; Call subroutine at 211
$C18    $CBED   RND      VB, #ED         ; VB = random & ED
$C1A    $2AF3   CALL     $AF3            ; Call subroutine at AF3
$C1C    $26E5   CALL     $6E5            ; Call subroutine at 6E5
$C1E    $F19A   UNKNOWN  F19A            ; Unknown Fxxx instruction
$C20    $C050   RND      V0, #50         ; V0 = random & 50
$C22    $53B8   UNKNOWN  $53B8           ; Unknown 5xxx instruction
$C24    $F353   UNKNOWN  F353            ; Unknown Fxxx instruction
$C26    $D60D   DRW      V6, V0, #D      ; Draw 13-byte sprite at V6, V0
$C28    $BF47   JP       V0, $F47        ; Jump to V0 + F47
$C2A    $C6C1   RND      V6, #C1         ; V6 = random & C1
$C2C    $7E7F   ADD      VE, #7F         ; Add 127 to VE
$C2E    $FD39   UNKNOWN  FD39            ; Unknown Fxxx instruction
$C30    $5F88   UNKNOWN  $5F88           ; Unknown 5xxx instruction
$C32    $950B   UNKNOWN  $950B           ; Unknown 9xxx instruction
$C34    $20E1   CALL     $0E1            ; Call subroutine at 0E1
$C36    $67B7   LD       V7, #B7         ; Load 183 into V7
$C38    $2271   CALL     $271            ; Call subroutine at 271
$C3A    $CCE6   RND      VC, #E6         ; VC = random & E6
$C3C    $ECD8   UNKNOWN  $ECD8           ; Unknown Exxx instruction
$C3E    $EBFD   UNKNOWN  $EBFD           ; Unknown Exxx instruction
$C40    $9EF4   UNKNOWN  $9EF4           ; Unknown 9xxx instruction
$C42    $467B   SNE      V6, #7B         ; Skip if V6 != 123
$C44    $CBA7   RND      VB, #A7         ; VB = random & A7
$C46    $0B24   SYS      $B24            ; System call to B24
$C48    $90EE   UNKNOWN  $90EE           ; Unknown 9xxx instruction
$C4A    $B7A1   JP       V0, $7A1        ; Jump to V0 + 7A1
$C4C    $20A7   CALL     $0A7            ; Call subroutine at 0A7
$C4E    $67BF   LD       V7, #BF         ; Load 191 into V7
$C50    $C315   RND      V3, #15         ; V3 = random & 15
$C52    $7905   ADD      V9, #05         ; Add 5 to V9
$C54    $A454   LD       I, $454         ; Load 454 into I
$C56    $6E02   LD       VE, #02         ; Load 2 into VE
$C58    $DA67   DRW      VA, V6, #7      ; Draw 7-byte sprite at VA, V6
$C5A    $E082   UNKNOWN  $E082           ; Unknown Exxx instruction
$C5C    $2F56   CALL     $F56            ; Call subroutine at F56
$C5E    $55B8   UNKNOWN  $55B8           ; Unknown 5xxx instruction
$C60    $B480   JP       V0, $480        ; Jump to V0 + 480
$C62    $1584   JP       $584            ; Jump to 584
$C64    $17F5   JP       $7F5            ; Jump to 7F5
$C66    $7C0B   ADD      VC, #0B         ; Add 11 to VC
$C68    $7665   ADD      V6, #65         ; Add 101 to V6
$C6A    $912D   UNKNOWN  $912D           ; Unknown 9xxx instruction
$C6C    $9EC6   UNKNOWN  $9EC6           ; Unknown 9xxx instruction
$C6E    $07C4   SYS      $7C4            ; System call to 7C4
$C70    $E36C   UNKNOWN  $E36C           ; Unknown Exxx instruction
$C72    $7532   ADD      V5, #32         ; Add 50 to V5
$C74    $EC71   UNKNOWN  $EC71           ; Unknown Exxx instruction
$C76    $42C9   SNE      V2, #C9         ; Skip if V2 != 201
$C78    $E8D7   UNKNOWN  $E8D7           ; Unknown Exxx instruction
$C7A    $C6D1   RND      V6, #D1         ; V6 = random & D1
$C7C    $9CD5   UNKNOWN  $9CD5           ; Unknown 9xxx instruction
$C7E    $55FE   UNKNOWN  $55FE           ; Unknown 5xxx instruction
$C80    $9E1D   UNKNOWN  $9E1D           ; Unknown 9xxx instruction
$C82    $2DBD   CALL     $DBD            ; Call subroutine at DBD
$C84    $16DC   JP       $6DC            ; Jump to 6DC
$C86    $CD0B   RND      VD, #0B         ; VD = random & 0B
$C88    $704C   ADD      V0, #4C         ; Add 76 to V0
$C8A    $2398   CALL     $398            ; Call subroutine at 398
$C8C    $6078   LD       V0, #78         ; Load 120 into V0
$C8E    $A90C   LD       I, $90C         ; Load 90C into I
$C90    $6E3D   LD       VE, #3D         ; Load 61 into VE
$C92    $9815   UNKNOWN  $9815           ; Unknown 9xxx instruction
$C94    $D0F6   DRW      V0, VF, #6      ; Draw 6-byte sprite at V0, VF
$C96    $B80E   JP       V0, $80E        ; Jump to V0 + 80E
$C98    $1497   JP       $497            ; Jump to 497
$C9A    $7962   ADD      V9, #62         ; Add 98 to V9
$C9C    $89A7   SUBN     V9, VA          ; V9 = VA - V9, VF = !borrow
$C9E    $23FD   CALL     $3FD            ; Call subroutine at 3FD
$CA0    $7565   ADD      V5, #65         ; Add 101 to V5
$CA2    $AE73   LD       I, $E73         ; Load E73 into I
$CA4    $1C14   JP       $C14            ; Jump to C14
$CA6    $0CBB   SYS      $CBB            ; System call to CBB
$CA8    $5F0E   UNKNOWN  $5F0E           ; Unknown 5xxx instruction
$CAA    $CA0B   RND      VA, #0B         ; VA = random & 0B
$CAC    $AEF8   LD       I, $EF8         ; Load EF8 into I
$CAE    $115B   JP       $15B            ; Jump to 15B
$CB0    $407A   SNE      V0, #7A         ; Skip if V0 != 122
$CB2    $22C4   CALL     $2C4            ; Call subroutine at 2C4
$CB4    $F827   UNKNOWN  F827            ; Unknown Fxxx instruction
$CB6    $7313   ADD      V3, #13         ; Add 19 to V3
$CB8    $5025   UNKNOWN  $5025           ; Unknown 5xxx instruction
$CBA    $3EE3   SE       VE, #E3         ; Skip if VE == 227
$CBC    $BBD8   JP       V0, $BD8        ; Jump to V0 + BD8
$CBE    $AA58   LD       I, $A58         ; Load A58 into I
$CC0    $29DB   CALL     $9DB            ; Call subroutine at 9DB
$CC2    $6CE5   LD       VC, #E5         ; Load 229 into VC
$CC4    $136F   JP       $36F            ; Jump to 36F
$CC6    $AC07   LD       I, $C07         ; Load C07 into I
$CC8    $4EC7   SNE      VE, #C7         ; Skip if VE != 199
$CCA    $DF2D   DRW      VF, V2, #D      ; Draw 13-byte sprite at VF, V2
$CCC    $24D5   CALL     $4D5            ; Call subroutine at 4D5
$CCE    $238E   CALL     $38E            ; Call subroutine at 38E
$CD0    $FE4E   UNKNOWN  FE4E            ; Unknown Fxxx instruction
$CD2    $36D6   SE       V6, #D6         ; Skip if V6 == 214
$CD4    $87D8   UNKNOWN  87D8            ; Unknown 8xxx instruction
$CD6    $325B   SE       V2, #5B         ; Skip if V2 == 91
$CD8    $291C   CALL     $91C            ; Call subroutine at 91C
$CDA    $FE5D   UNKNOWN  FE5D            ; Unknown Fxxx instruction
$CDC    $A923   LD       I, $923         ; Load 923 into I
$CDE    $F8D2   UNKNOWN  F8D2            ; Unknown Fxxx instruction
$CE0    $54F1   UNKNOWN  $54F1           ; Unknown 5xxx instruction
$CE2    $DE1B   DRW      VE, V1, #B      ; Draw 11-byte sprite at VE, V1
$CE4    $24F8   CALL     $4F8            ; Call subroutine at 4F8
$CE6    $427D   SNE      V2, #7D         ; Skip if V2 != 125
$CE8    $A26D   LD       I, $26D         ; Load 26D into I
$CEA    $61E3   LD       V1, #E3         ; Load 227 into V1
$CEC    $A42E   LD       I, $42E         ; Load 42E into I
$CEE    $ED57   UNKNOWN  $ED57           ; Unknown Exxx instruction
$CF0    $7E86   ADD      VE, #86         ; Add 134 to VE
$CF2    $0DD2   SYS      $DD2            ; System call to DD2
$CF4    $2CB6   CALL     $CB6            ; Call subroutine at CB6
$CF6    $8A44   ADD      VA, V4          ; VA += V4, VF = carry
$CF8    $79FF   ADD      V9, #FF         ; Add 255 to V9
$CFA    $1C0D   JP       $C0D            ; Jump to C0D
$CFC    $8EB4   ADD      VE, VB          ; VE += VB, VF = carry
$CFE    $4D20   SNE      VD, #20         ; Skip if VD != 32
$D00    $E34B   UNKNOWN  $E34B           ; Unknown Exxx instruction
$D02    $2DEC   CALL     $DEC            ; Call subroutine at DEC
$D04    $7D9A   ADD      VD, #9A         ; Add 154 to VD
$D06    $A90E   LD       I, $90E         ; Load 90E into I
$D08    $9FB4   UNKNOWN  $9FB4           ; Unknown 9xxx instruction
$D0A    $9EA4   UNKNOWN  $9EA4           ; Unknown 9xxx instruction
$D0C    $ED6B   UNKNOWN  $ED6B           ; Unknown Exxx instruction
$D0E    $4B64   SNE      VB, #64         ; Skip if VB != 100
$D10    $1F1B   JP       $F1B            ; Jump to F1B
$D12    $92A5   UNKNOWN  $92A5           ; Unknown 9xxx instruction
$D14    $F5E2   UNKNOWN  F5E2            ; Unknown Fxxx instruction
$D16    $6A93   LD       VA, #93         ; Load 147 into VA
$D18    $F1C0   UNKNOWN  F1C0            ; Unknown Fxxx instruction
$D1A    $7AA3   ADD      VA, #A3         ; Add 163 to VA
$D1C    $68A4   LD       V8, #A4         ; Load 164 into V8
$D1E    $3F24   SE       VF, #24         ; Skip if VF == 36
$D20    $9B9A   UNKNOWN  $9B9A           ; Unknown 9xxx instruction
$D22    $456E   SNE      V5, #6E         ; Skip if V5 != 110
$D24    $8160   LD       V1, V6          ; V1 = V6
$D26    $4BA6   SNE      VB, #A6         ; Skip if VB != 166
$D28    $83F2   AND      V3, VF          ; V3 &= VF
$D2A    $9B4A   UNKNOWN  $9B4A           ; Unknown 9xxx instruction
$D2C    $0CD4   SYS      $CD4            ; System call to CD4
$D2E    $1839   JP       $839            ; Jump to 839
$D30    $0156   SYS      $156            ; System call to 156
$D32    $7801   ADD      V8, #01         ; Add 1 to V8
$D34    $75C5   ADD      V5, #C5         ; Add 197 to V5
$D36    $602B   LD       V0, #2B         ; Load 43 into V0
$D38    $F123   UNKNOWN  F123            ; Unknown Fxxx instruction
$D3A    $53FB   UNKNOWN  $53FB           ; Unknown 5xxx instruction
$D3C    $73DD   ADD      V3, #DD         ; Add 221 to V3
$D3E    $3CB3   SE       VC, #B3         ; Skip if VC == 179
$D40    $8677   SUBN     V6, V7          ; V6 = V7 - V6, VF = !borrow
$D42    $DEE0   DRW      VE, VE, #0      ; Draw 0-byte sprite at VE, VE
$D44    $1026   JP       $026            ; Jump to 026
$D46    $E7AF   UNKNOWN  $E7AF           ; Unknown Exxx instruction
$D48    $FB0C   UNKNOWN  FB0C            ; Unknown Fxxx instruction
$D4A    $04E6   SYS      $4E6            ; System call to 4E6
$D4C    $4030   SNE      V0, #30         ; Skip if V0 != 48
$D4E    $AA35   LD       I, $A35         ; Load A35 into I
$D50    $46D8   SNE      V6, #D8         ; Skip if V6 != 216
$D52    $B36C   JP       V0, $36C        ; Jump to V0 + 36C
$D54    $89AE   SHL      V9              ; V9 <<= 1, VF = MSB
$D56    $ABC9   LD       I, $BC9         ; Load BC9 into I
$D58    $125E   JP       $25E            ; Jump to 25E
$D5A    $C439   RND      V4, #39         ; V4 = random & 39
$D5C    $91AF   UNKNOWN  $91AF           ; Unknown 9xxx instruction
$D5E    $6C8F   LD       VC, #8F         ; Load 143 into VC
$D60    $7FC6   ADD      VF, #C6         ; Add 198 to VF
$D62    $1AAA   JP       $AAA            ; Jump to AAA
$D64    $1D20   JP       $D20            ; Jump to D20
$D66    $AAA5   LD       I, $AA5         ; Load AA5 into I
$D68    $DABE   DRW      VA, VB, #E      ; Draw 14-byte sprite at VA, VB
$D6A    $C44D   RND      V4, #4D         ; V4 = random & 4D
$D6C    $71B8   ADD      V1, #B8         ; Add 184 to V1
$D6E    $96B8   UNKNOWN  $96B8           ; Unknown 9xxx instruction
$D70    $B38B   JP       V0, $38B        ; Jump to V0 + 38B
$D72    $D39F   DRW      V3, V9, #F      ; Draw 15-byte sprite at V3, V9
$D74    $334A   SE       V3, #4A         ; Skip if V3 == 74
$D76    $6111   LD       V1, #11         ; Load 17 into V1
$D78    $8E73   XOR      VE, V7          ; VE ^= V7
$D7A    $2747   CALL     $747            ; Call subroutine at 747
$D7C    $2510   CALL     $510            ; Call subroutine at 510
$D7E    $60E2   LD       V0, #E2         ; Load 226 into V0
$D80    $77B3   ADD      V7, #B3         ; Add 179 to V7
$D82    $7412   ADD      V4, #12         ; Add 18 to V4
$D84    $82AA   UNKNOWN  82AA            ; Unknown 8xxx instruction
$D86    $8BB5   SUB      VB, VB          ; VB -= VB, VF = !borrow
$D88    $FB97   UNKNOWN  FB97            ; Unknown Fxxx instruction
$D8A    $5AAC   UNKNOWN  $5AAC           ; Unknown 5xxx instruction
$D8C    $7FE8   ADD      VF, #E8         ; Add 232 to VF
$D8E    $596B   UNKNOWN  $596B           ; Unknown 5xxx instruction
$D90    $3519   SE       V5, #19         ; Skip if V5 == 25
$D92    $9296   UNKNOWN  $9296           ; Unknown 9xxx instruction
$D94    $269D   CALL     $69D            ; Call subroutine at 69D
$D96    $B295   JP       V0, $295        ; Jump to V0 + 295
$D98    $691C   LD       V9, #1C         ; Load 28 into V9
$D9A    $CA56   RND      VA, #56         ; VA = random & 56
$D9C    $72D6   ADD      V2, #D6         ; Add 214 to V2
$D9E    $DB6C   DRW      VB, V6, #C      ; Draw 12-byte sprite at VB, V6
$DA0    $EAD0   UNKNOWN  $EAD0           ; Unknown Exxx instruction
$DA2    $E42A   UNKNOWN  $E42A           ; Unknown Exxx instruction
$DA4    $C25C   RND      V2, #5C         ; V2 = random & 5C
$DA6    $9124   UNKNOWN  $9124           ; Unknown 9xxx instruction
$DA8    $9C66   UNKNOWN  $9C66           ; Unknown 9xxx instruction
$DAA    $207F   CALL     $07F            ; Call subroutine at 07F
$DAC    $A0D0   LD       I, $0D0         ; Load 0D0 into I
$DAE    $58AF   UNKNOWN  $58AF           ; Unknown 5xxx instruction
$DB0    $BC3E   JP       V0, $C3E        ; Jump to V0 + C3E
$DB2    $498C   SNE      V9, #8C         ; Skip if V9 != 140
$DB4    $535E   UNKNOWN  $535E           ; Unknown 5xxx instruction
$DB6    $42AF   SNE      V2, #AF         ; Skip if V2 != 175
$DB8    $2713   CALL     $713            ; Call subroutine at 713
$DBA    $A723   LD       I, $723         ; Load 723 into I
$DBC    $B9C8   JP       V0, $9C8        ; Jump to V0 + 9C8
$DBE    $9986   UNKNOWN  $9986           ; Unknown 9xxx instruction
$DC0    $9798   UNKNOWN  $9798           ; Unknown 9xxx instruction
$DC2    $2F64   CALL     $F64            ; Call subroutine at F64
$DC4    $EA2C   UNKNOWN  $EA2C           ; Unknown Exxx instruction
$DC6    $B7DF   JP       V0, $7DF        ; Jump to V0 + 7DF
$DC8    $2E6B   CALL     $E6B            ; Call subroutine at E6B
$DCA    $EA99   UNKNOWN  $EA99           ; Unknown Exxx instruction
$DCC    $A3A0   LD       I, $3A0         ; Load 3A0 into I
$DCE    $679A   LD       V7, #9A         ; Load 154 into V7
$DD0    $3467   SE       V4, #67         ; Skip if V4 == 103
$DD2    $EA29   UNKNOWN  $EA29           ; Unknown Exxx instruction
$DD4    $0562   SYS      $562            ; System call to 562
$DD6    $B76F   JP       V0, $76F        ; Jump to V0 + 76F
$DD8    $57CD   UNKNOWN  $57CD           ; Unknown 5xxx instruction
$DDA    $E64B   UNKNOWN  $E64B           ; Unknown Exxx instruction
$DDC    $48CB   SNE      V8, #CB         ; Skip if V8 != 203
$DDE    $E197   UNKNOWN  $E197           ; Unknown Exxx instruction
$DE0    $AA03   LD       I, $A03         ; Load A03 into I
$DE2    $0D25   SYS      $D25            ; System call to D25
$DE4    $5D7E   UNKNOWN  $5D7E           ; Unknown 5xxx instruction
$DE6    $FA35   UNKNOWN  FA35            ; Unknown Fxxx instruction
$DE8    $B9BE   JP       V0, $9BE        ; Jump to V0 + 9BE
$DEA    $CBF4   RND      VB, #F4         ; VB = random & F4
$DEC    $3EF9   SE       VE, #F9         ; Skip if VE == 249
$DEE    $1AF8   JP       $AF8            ; Jump to AF8
$DF0    $8F38   UNKNOWN  8F38            ; Unknown 8xxx instruction
$DF2    $5341   UNKNOWN  $5341           ; Unknown 5xxx instruction
$DF4    $FBD9   UNKNOWN  FBD9            ; Unknown Fxxx instruction
$DF6    $06CC   SYS      $6CC            ; System call to 6CC
$DF8    $2B42   CALL     $B42            ; Call subroutine at B42
$DFA    $1FF4   JP       $FF4            ; Jump to FF4
$DFC    $2E88   CALL     $E88            ; Call subroutine at E88
$DFE    $FC37   UNKNOWN  FC37            ; Unknown Fxxx instruction
$E00    $0140   SYS      $140            ; System call to 140
$E02    $1F71   JP       $F71            ; Jump to F71
$E04    $DA87   DRW      VA, V8, #7      ; Draw 7-byte sprite at VA, V8
$E06    $9F8E   UNKNOWN  $9F8E           ; Unknown 9xxx instruction
$E08    $C83F   RND      V8, #3F         ; V8 = random & 3F
$E0A    $F32F   UNKNOWN  F32F            ; Unknown Fxxx instruction
$E0C    $CAB6   RND      VA, #B6         ; VA = random & B6
$E0E    $D6E2   DRW      V6, VE, #2      ; Draw 2-byte sprite at V6, VE
$E10    $8ED5   SUB      VE, VD          ; VE -= VD, VF = !borrow
$E12    $510F   UNKNOWN  $510F           ; Unknown 5xxx instruction
$E14    $746A   ADD      V4, #6A         ; Add 106 to V4
$E16    $801B   UNKNOWN  801B            ; Unknown 8xxx instruction
$E18    $DA74   DRW      VA, V7, #4      ; Draw 4-byte sprite at VA, V7
$E1A    $2880   CALL     $880            ; Call subroutine at 880
$E1C    $32BF   SE       V2, #BF         ; Skip if V2 == 191
$E1E    $D992   DRW      V9, V9, #2      ; Draw 2-byte sprite at V9, V9
$E20    $9B20   SNE      VB, V2          ; Skip if VB != V2
$E22    $1FB7   JP       $FB7            ; Jump to FB7
$E24    $330C   SE       V3, #0C         ; Skip if V3 == 12
$E26    $1B8D   JP       $B8D            ; Jump to B8D
$E28    $E4B3   UNKNOWN  $E4B3           ; Unknown Exxx instruction
$E2A    $86A1   OR       V6, VA          ; V6 |= VA
$E2C    $C060   RND      V0, #60         ; V0 = random & 60
$E2E    $2A13   CALL     $A13            ; Call subroutine at A13
$E30    $2B8D   CALL     $B8D            ; Call subroutine at B8D
$E32    $5E75   UNKNOWN  $5E75           ; Unknown 5xxx instruction
$E34    $81E7   SUBN     V1, VE          ; V1 = VE - V1, VF = !borrow
$E36    $BA51   JP       V0, $A51        ; Jump to V0 + A51
$E38    $9ECB   UNKNOWN  $9ECB           ; Unknown 9xxx instruction
$E3A    $BEFD   JP       V0, $EFD        ; Jump to V0 + EFD
$E3C    $02FF   SYS      $2FF            ; System call to 2FF
$E3E    $32B6   SE       V2, #B6         ; Skip if V2 == 182
$E40    $8AAE   SHL      VA              ; VA <<= 1, VF = MSB
$E42    $AD94   LD       I, $D94         ; Load D94 into I
$E44    $9B3A   UNKNOWN  $9B3A           ; Unknown 9xxx instruction
$E46    $8669   UNKNOWN  8669            ; Unknown 8xxx instruction
$E48    $F5EC   UNKNOWN  F5EC            ; Unknown Fxxx instruction
$E4A    $6D40   LD       VD, #40         ; Load 64 into VD
$E4C    $D56E   DRW      V5, V6, #E      ; Draw 14-byte sprite at V5, V6
$E4E    $C443   RND      V4, #43         ; V4 = random & 43
$E50    $0FFE   SYS      $FFE            ; System call to FFE
$E52    $F78E   UNKNOWN  F78E            ; Unknown Fxxx instruction
$E54    $4B71   SNE      VB, #71         ; Skip if VB != 113
$E56    $079B   SYS      $79B            ; System call to 79B
$E58    $7266   ADD      V2, #66         ; Add 102 to V2
$E5A    $1680   JP       $680            ; Jump to 680
$E5C    $4B7C   SNE      VB, #7C         ; Skip if VB != 124
$E5E    $EC3C   UNKNOWN  $EC3C           ; Unknown Exxx instruction
$E60    $2F9F   CALL     $F9F            ; Call subroutine at F9F
$E62    $3CEA   SE       VC, #EA         ; Skip if VC == 234
$E64    $E9AC   UNKNOWN  $E9AC           ; Unknown Exxx instruction
$E66    $7938   ADD      V9, #38         ; Add 56 to V9
$E68    $9BD1   UNKNOWN  $9BD1           ; Unknown 9xxx instruction
$E6A    $CF14   RND      VF, #14         ; VF = random & 14
$E6C    $74B0   ADD      V4, #B0         ; Add 176 to V4
$E6E    $5275   UNKNOWN  $5275           ; Unknown 5xxx instruction
$E70    $EF29   UNKNOWN  $EF29           ; Unknown Exxx instruction
$E72    $6701   LD       V7, #01         ; Load 1 into V7
$E74    $76F1   ADD      V6, #F1         ; Add 241 to V6
$E76    $335D   SE       V3, #5D         ; Skip if V3 == 93
$E78    $B074   JP       V0, $074        ; Jump to V0 + 074
$E7A    $6949   LD       V9, #49         ; Load 73 into V9
$E7C    $8EBF   UNKNOWN  8EBF            ; Unknown 8xxx instruction
$E7E    $56CF   UNKNOWN  $56CF           ; Unknown 5xxx instruction
$E80    $5642   UNKNOWN  $5642           ; Unknown 5xxx instruction
$E82    $999F   UNKNOWN  $999F           ; Unknown 9xxx instruction
$E84    $0B55   SYS      $B55            ; System call to B55
$E86    $2F45   CALL     $F45            ; Call subroutine at F45
$E88    $0D36   SYS      $D36            ; System call to D36
$E8A    $3AA7   SE       VA, #A7         ; Skip if VA == 167
$E8C    $1826   JP       $826            ; Jump to 826
$E8E    $F7B5   UNKNOWN  F7B5            ; Unknown Fxxx instruction
$E90    $2B74   CALL     $B74            ; Call subroutine at B74
$E92    $ACFF   LD       I, $CFF         ; Load CFF into I
$E94    $8C80   LD       VC, V8          ; VC = V8
$E96    $50C7   UNKNOWN  $50C7           ; Unknown 5xxx instruction
$E98    $C602   RND      V6, #02         ; V6 = random & 02
$E9A    $67E7   LD       V7, #E7         ; Load 231 into V7
$E9C    $6290   LD       V2, #90         ; Load 144 into V2
$E9E    $5D12   UNKNOWN  $5D12           ; Unknown 5xxx instruction
$EA0    $E390   UNKNOWN  $E390           ; Unknown Exxx instruction
$EA2    $6466   LD       V4, #66         ; Load 102 into V4
$EA4    $2156   CALL     $156            ; Call subroutine at 156
$EA6    $79BB   ADD      V9, #BB         ; Add 187 to V9
$EA8    $47EB   SNE      V7, #EB         ; Skip if V7 != 235
$EAA    $4ABE   SNE      VA, #BE         ; Skip if VA != 190
$EAC    $AFD5   LD       I, $FD5         ; Load FD5 into I
$EAE    $23F9   CALL     $3F9            ; Call subroutine at 3F9
$EB0    $3D7C   SE       VD, #7C         ; Skip if VD == 124
$EB2    $F03C   UNKNOWN  F03C            ; Unknown Fxxx instruction
$EB4    $84B9   UNKNOWN  84B9            ; Unknown 8xxx instruction
$EB6    $6BC9   LD       VB, #C9         ; Load 201 into VB
$EB8    $65F8   LD       V5, #F8         ; Load 248 into V5
$EBA    $F745   UNKNOWN  F745            ; Unknown Fxxx instruction
$EBC    $A86E   LD       I, $86E         ; Load 86E into I
$EBE    $251E   CALL     $51E            ; Call subroutine at 51E
$EC0    $7B4B   ADD      VB, #4B         ; Add 75 to VB
$EC2    $1C55   JP       $C55            ; Jump to C55
$EC4    $5B02   UNKNOWN  $5B02           ; Unknown 5xxx instruction
$EC6    $AFE0   LD       I, $FE0         ; Load FE0 into I
$EC8    $97BD   UNKNOWN  $97BD           ; Unknown 9xxx instruction
$ECA    $E09F   UNKNOWN  $E09F           ; Unknown Exxx instruction
$ECC    $BAFB   JP       V0, $AFB        ; Jump to V0 + AFB
$ECE    $1B0F   JP       $B0F            ; Jump to B0F
$ED0    $6682   LD       V6, #82         ; Load 130 into V6
$ED2    $1E64   JP       $E64            ; Jump to E64
$ED4    $E2C1   UNKNOWN  $E2C1           ; Unknown Exxx instruction
$ED6    $08B5   SYS      $8B5            ; System call to 8B5
$ED8    $96A5   UNKNOWN  $96A5           ; Unknown 9xxx instruction
$EDA    $2B4C   CALL     $B4C            ; Call subroutine at B4C
$EDC    $59E1   UNKNOWN  $59E1           ; Unknown 5xxx instruction
$EDE    $A628   LD       I, $628         ; Load 628 into I
$EE0    $EEE6   UNKNOWN  $EEE6           ; Unknown Exxx instruction
$EE2    $1BD2   JP       $BD2            ; Jump to BD2
$EE4    $718C   ADD      V1, #8C         ; Add 140 to V1
$EE6    $6EDB   LD       VE, #DB         ; Load 219 into VE
$EE8    $817D   UNKNOWN  817D            ; Unknown 8xxx instruction
$EEA    $C9BE   RND      V9, #BE         ; V9 = random & BE
$EEC    $988F   UNKNOWN  $988F           ; Unknown 9xxx instruction
$EEE    $8D40   LD       VD, V4          ; VD = V4
$EF0    $E130   UNKNOWN  $E130           ; Unknown Exxx instruction
$EF2    $B345   JP       V0, $345        ; Jump to V0 + 345
$EF4    $1EF8   JP       $EF8            ; Jump to EF8
$EF6    $8080   LD       V0, V8          ; V0 = V8
$EF8    $3A7A   SE       VA, #7A         ; Skip if VA == 122
$EFA    $D534   DRW      V5, V3, #4      ; Draw 4-byte sprite at V5, V3
$EFC    $6978   LD       V9, #78         ; Load 120 into V9
$EFE    $DD06   DRW      VD, V0, #6      ; Draw 6-byte sprite at VD, V0
$F00    $CEF3   RND      VE, #F3         ; VE = random & F3
$F02    $C326   RND      V3, #26         ; V3 = random & 26
$F04    $301B   SE       V0, #1B         ; Skip if V0 == 27
$F06    $67FC   LD       V7, #FC         ; Load 252 into V7
$F08    $7C85   ADD      VC, #85         ; Add 133 to VC
$F0A    $31B7   SE       V1, #B7         ; Skip if V1 == 183
$F0C    $0500   SYS      $500            ; System call to 500
$F0E    $AAAC   LD       I, $AAC         ; Load AAC into I
$F10    $C07E   RND      V0, #7E         ; V0 = random & 7E
$F12    $5884   UNKNOWN  $5884           ; Unknown 5xxx instruction
$F14    $BED7   JP       V0, $ED7        ; Jump to V0 + ED7
$F16    $9F81   UNKNOWN  $9F81           ; Unknown 9xxx instruction
$F18    $9016   UNKNOWN  $9016           ; Unknown 9xxx instruction
$F1A    $CE93   RND      VE, #93         ; VE = random & 93
$F1C    $24F9   CALL     $4F9            ; Call subroutine at 4F9
$F1E    $E69C   UNKNOWN  $E69C           ; Unknown Exxx instruction
$F20    $7F3D   ADD      VF, #3D         ; Add 61 to VF
$F22    $F9C8   UNKNOWN  F9C8            ; Unknown Fxxx instruction
$F24    $6692   LD       V6, #92         ; Load 146 into V6
$F26    $04DE   SYS      $4DE            ; System call to 4DE
$F28    $3706   SE       V7, #06         ; Skip if V7 == 6
$F2A    $1A03   JP       $A03            ; Jump to A03
$F2C    $7D4A   ADD      VD, #4A         ; Add 74 to VD
$F2E    $4ACB   SNE      VA, #CB         ; Skip if VA != 203
$F30    $6B27   LD       VB, #27         ; Load 39 into VB
$F32    $ACE1   LD       I, $CE1         ; Load CE1 into I
$F34    $6529   LD       V5, #29         ; Load 41 into V5
$F36    $6A31   LD       VA, #31         ; Load 49 into VA
$F38    $BD1F   JP       V0, $D1F        ; Jump to V0 + D1F
$F3A    $2373   CALL     $373            ; Call subroutine at 373
$F3C    $EC92   UNKNOWN  $EC92           ; Unknown Exxx instruction
$F3E    $3DC8   SE       VD, #C8         ; Skip if VD == 200
$F40    $B7B1   JP       V0, $7B1        ; Jump to V0 + 7B1
$F42    $0998   SYS      $998            ; System call to 998
$F44    $2F7A   CALL     $F7A            ; Call subroutine at F7A
$F46    $A63A   LD       I, $63A         ; Load 63A into I
$F48    $EE76   UNKNOWN  $EE76           ; Unknown Exxx instruction
$F4A    $413E   SNE      V1, #3E         ; Skip if V1 != 62
$F4C    $6493   LD       V4, #93         ; Load 147 into V4
$F4E    $BD37   JP       V0, $D37        ; Jump to V0 + D37
$F50    $41E7   SNE      V1, #E7         ; Skip if V1 != 231
$F52    $7137   ADD      V1, #37         ; Add 55 to V1
$F54    $DB9F   DRW      VB, V9, #F      ; Draw 15-byte sprite at VB, V9
$F56    $362D   SE       V6, #2D         ; Skip if V6 == 45
$F58    $40CE   SNE      V0, #CE         ; Skip if V0 != 206
$F5A    $55BF   UNKNOWN  $55BF           ; Unknown 5xxx instruction
$F5C    $AF45   LD       I, $F45         ; Load F45 into I
$F5E    $35B2   SE       V5, #B2         ; Skip if V5 == 178
$F60    $8FD8   UNKNOWN  8FD8            ; Unknown 8xxx instruction
$F62    $1E72   JP       $E72            ; Jump to E72
$F64    $44EF   SNE      V4, #EF         ; Skip if V4 != 239
$F66    $CABC   RND      VA, #BC         ; VA = random & BC
$F68    $0FEC   SYS      $FEC            ; System call to FEC
$F6A    $1A6A   JP       $A6A            ; Jump to A6A
$F6C    $EB53   UNKNOWN  $EB53           ; Unknown Exxx instruction
$F6E    $C631   RND      V6, #31         ; V6 = random & 31
$F70    $8AD6   SHR      VA              ; VA >>= 1, VF = LSB
$F72    $7E59   ADD      VE, #59         ; Add 89 to VE
$F74    $97C5   UNKNOWN  $97C5           ; Unknown 9xxx instruction
$F76    $852A   UNKNOWN  852A            ; Unknown 8xxx instruction
$F78    $434F   SNE      V3, #4F         ; Skip if V3 != 79
$F7A    $8583   XOR      V5, V8          ; V5 ^= V8
$F7C    $C740   RND      V7, #40         ; V7 = random & 40
$F7E    $124E   JP       $24E            ; Jump to 24E
$F80    $AD51   LD       I, $D51         ; Load D51 into I
$F82    $C4ED   RND      V4, #ED         ; V4 = random & ED
$F84    $B966   JP       V0, $966        ; Jump to V0 + 966
$F86    $D10A   DRW      V1, V0, #A      ; Draw 10-byte sprite at V1, V0
$F88    $16CF   JP       $6CF            ; Jump to 6CF
$F8A    $6538   LD       V5, #38         ; Load 56 into V5
$F8C    $B872   JP       V0, $872        ; Jump to V0 + 872
$F8E    $F985   UNKNOWN  F985            ; Unknown Fxxx instruction
$F90    $A533   LD       I, $533         ; Load 533 into I
$F92    $7722   ADD      V7, #22         ; Add 34 to V7
$F94    $D314   DRW      V3, V1, #4      ; Draw 4-byte sprite at V3, V1
$F96    $DB60   DRW      VB, V6, #0      ; Draw 0-byte sprite at VB, V6
$F98    $E161   UNKNOWN  $E161           ; Unknown Exxx instruction
$F9A    $D456   DRW      V4, V5, #6      ; Draw 6-byte sprite at V4, V5
$F9C    $FEA6   UNKNOWN  FEA6            ; Unknown Fxxx instruction
$F9E    $1153   JP       $153            ; Jump to 153
$FA0    $959B   UNKNOWN  $959B           ; Unknown 9xxx instruction
$FA2    $BC4C   JP       V0, $C4C        ; Jump to V0 + C4C
$FA4    $E085   UNKNOWN  $E085           ; Unknown Exxx instruction
$FA6    $9B82   UNKNOWN  $9B82           ; Unknown 9xxx instruction
$FA8    $BC48   JP       V0, $C48        ; Jump to V0 + C48
$FAA    $49B7   SNE      V9, #B7         ; Skip if V9 != 183
$FAC    $0082   SYS      $082            ; System call to 082
$FAE    $DB61   DRW      VB, V6, #1      ; Draw 1-byte sprite at VB, V6
$FB0    $1D4F   JP       $D4F            ; Jump to D4F
$FB2    $DD02   DRW      VD, V0, #2      ; Draw 2-byte sprite at VD, V0
$FB4    $5094   UNKNOWN  $5094           ; Unknown 5xxx instruction
$FB6    $9FA3   UNKNOWN  $9FA3           ; Unknown 9xxx instruction
$FB8    $1BD0   JP       $BD0            ; Jump to BD0
$FBA    $191F   JP       $91F            ; Jump to 91F
$FBC    $658F   LD       V5, #8F         ; Load 143 into V5
$FBE    $CBBA   RND      VB, #BA         ; VB = random & BA
$FC0    $9463   UNKNOWN  $9463           ; Unknown 9xxx instruction
$FC2    $9354   UNKNOWN  $9354           ; Unknown 9xxx instruction
$FC4    $A381   LD       I, $381         ; Load 381 into I
$FC6    $34CD   SE       V4, #CD         ; Skip if V4 == 205
$FC8    $F491   UNKNOWN  F491            ; Unknown Fxxx instruction
$FCA    $8E48   UNKNOWN  8E48            ; Unknown 8xxx instruction
$FCC    $D4FD   DRW      V4, VF, #D      ; Draw 13-byte sprite at V4, VF
$FCE    $BD69   JP       V0, $D69        ; Jump to V0 + D69
$FD0    $94CA   UNKNOWN  $94CA           ; Unknown 9xxx instruction
$FD2    $9588   UNKNOWN  $9588           ; Unknown 9xxx instruction
$FD4    $62C7   LD       V2, #C7         ; Load 199 into V2
$FD6    $21F4   CALL     $1F4            ; Call subroutine at 1F4
$FD8    $6EF7   LD       VE, #F7         ; Load 247 into VE
$FDA    $1D51   JP       $D51            ; Jump to D51
$FDC    $4A99   SNE      VA, #99         ; Skip if VA != 153
$FDE    $942B   UNKNOWN  $942B           ; Unknown 9xxx instruction
$FE0    $403A   SNE      V0, #3A         ; Skip if V0 != 58
$FE2    $AEE0   LD       I, $EE0         ; Load EE0 into I
$FE4    $5B00   SE       VB, V0          ; Skip if VB == V0
$FE6    $05B0   SYS      $5B0            ; System call to 5B0
$FE8    $A372   LD       I, $372         ; Load 372 into I
$FEA    $B4F3   JP       V0, $4F3        ; Jump to V0 + 4F3
$FEC    $4A0A   SNE      VA, #0A         ; Skip if VA != 10
$FEE    $7DDB   ADD      VD, #DB         ; Add 219 to VD
$FF0    $93C9   UNKNOWN  $93C9           ; Unknown 9xxx instruction
$FF2    $EC50   UNKNOWN  $EC50           ; Unknown Exxx instruction
$FF4    $0F93   SYS      $F93            ; System call to F93
$FF6    $0536   SYS      $536            ; System call to 536
$FF8    $A620   LD       I, $620         ; Load 620 into I
$FFA    $6563   LD       V5, #63         ; Load 99 into V5
$FFC    $CC9A   RND      VC, #9A         ; VC = random & 9A
$FFE    $B444   JP       V0, $444        ; Jump to V0 + 444

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 469 (26.2%)
  LD      : 246 (13.7%)
  JP      : 224 (12.5%)
  ADD     : 138 ( 7.7%)
  SNE     : 122 ( 6.8%)
  RND     : 115 ( 6.4%)
  CALL    : 111 ( 6.2%)
  SYS     : 110 ( 6.1%)
  SE      : 106 ( 5.9%)
  DRW     : 105 ( 5.9%)
  SHL     :   9 ( 0.5%)
  SUB     :   8 ( 0.4%)
  OR      :   7 ( 0.4%)
  SHR     :   6 ( 0.3%)
  AND     :   5 ( 0.3%)
  SUBN    :   5 ( 0.3%)
  XOR     :   5 ( 0.3%)
  SKP     :   1 ( 0.1%)

Memory Operations: 384 (21.4%)
Arithmetic Operations: 168 (9.4%)
