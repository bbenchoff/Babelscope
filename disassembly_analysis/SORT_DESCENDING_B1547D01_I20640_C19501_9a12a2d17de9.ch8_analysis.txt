
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B1547D01_I20640_C19501_9a12a2d17de9.ch8
ROM Size: 3584 bytes
Instructions Found: 1790

DISCOVERY INFORMATION:
Batch: 1547
Instance: 20640
Direction: descending
Final Array: [244, 193, 69, 65, 1, 0, 0, 0]
Operations: R:0 W:551 C:1113 S:1

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 126
Sort Array References:
  $282: LD I, $765 ; Load 765 into I
  $28A: LD I, $BCB ; Load BCB into I
  $29C: LD I, $939 ; Load 939 into I
  $29E: LD I, $F8A ; Load F8A into I
  $2AC: LD I, $768 ; Load 768 into I
  $2C2: LD I, $A89 ; Load A89 into I
  $332: LD I, $6CC ; Load 6CC into I
  $33C: LD I, $80E ; Load 80E into I
  $33E: LD I, $54E ; Load 54E into I
  $364: LD I, $98F ; Load 98F into I
  $3BC: LD I, $235 ; Load 235 into I
  $3EA: LD I, $FF9 ; Load FF9 into I
  $3EE: LD I, $C12 ; Load C12 into I
  $3FC: LD I, $2F8 ; Load 2F8 into I
  $408: LD I, $761 ; Load 761 into I
  $40A: LD I, $F85 ; Load F85 into I
  $41C: LD I, $C87 ; Load C87 into I
  $42E: LD I, $305 ; Load 305 into I
  $43C: LD I, $B51 ; Load B51 into I
  $45C: LD I, $FA1 ; Load FA1 into I
  $498: LD I, $7DA ; Load 7DA into I
  $4A8: LD I, $DE7 ; Load DE7 into I
  $4E4: LD I, $D9C ; Load D9C into I
  $4EC: LD I, $B94 ; Load B94 into I
  $514: LD I, $0B1 ; Load 0B1 into I
  $546: LD I, $FD7 ; Load FD7 into I
  $556: LD I, $C30 ; Load C30 into I
  $574: LD I, $293 ; Load 293 into I
  $578: LD I, $F7D ; Load F7D into I
  $588: LD I, $280 ; Load 280 into I
  $59C: LD I, $5B1 ; Load 5B1 into I
  $59E: LD I, $625 ; Load 625 into I
  $630: LD I, $628 ; Load 628 into I
  $638: LD I, $E18 ; Load E18 into I
  $644: LD I, $B9F ; Load B9F into I
  $652: LD I, $56F ; Load 56F into I
  $660: LD I, $66D ; Load 66D into I
  $6DC: LD I, $DCF ; Load DCF into I
  $71E: LD V3, [I] ; Load V0-V3 from I
  $732: LD I, $A3C ; Load A3C into I
  $764: LD I, $0F0 ; Load 0F0 into I
  $768: LD I, $EC5 ; Load EC5 into I
  $77E: LD I, $B72 ; Load B72 into I
  $7D2: LD I, $DFE ; Load DFE into I
  $7D8: LD I, $BFF ; Load BFF into I
  $7E4: LD I, $DAF ; Load DAF into I
  $7FA: LD I, $E2F ; Load E2F into I
  $7FC: LD I, $282 ; Load 282 into I
  $814: LD I, $00F ; Load 00F into I
  $824: LD I, $294 ; Load 294 into I
  $876: LD I, $7FD ; Load 7FD into I
  $878: LD I, $DA1 ; Load DA1 into I
  $87E: LD I, $108 ; Load 108 into I
  $886: LD I, $A34 ; Load A34 into I
  $888: LD I, $174 ; Load 174 into I
  $8C0: LD I, $F76 ; Load F76 into I
  $8CE: LD I, $43A ; Load 43A into I
  $916: LD I, $4F9 ; Load 4F9 into I
  $92C: LD I, $D03 ; Load D03 into I
  $938: LD I, $96C ; Load 96C into I
  $94C: LD I, $F89 ; Load F89 into I
  $97A: LD I, $49A ; Load 49A into I
  $98A: LD I, $57C ; Load 57C into I
  $98E: LD I, $153 ; Load 153 into I
  $9AA: LD I, $47E ; Load 47E into I
  $9BE: LD I, $3E6 ; Load 3E6 into I
  $9C6: LD I, $188 ; Load 188 into I
  $9CE: LD I, $C32 ; Load C32 into I
  $9D4: LD I, $884 ; Load 884 into I
  $9D6: LD I, $A83 ; Load A83 into I
  $9DC: LD I, $D70 ; Load D70 into I
  $A04: LD I, $5F8 ; Load 5F8 into I
  $A26: LD I, $934 ; Load 934 into I
  $A2C: LD I, $0B9 ; Load 0B9 into I
  $A64: LD I, $D71 ; Load D71 into I
  $A68: LD I, $F9D ; Load F9D into I
  $A6C: LD I, $A52 ; Load A52 into I
  $A90: LD I, $099 ; Load 099 into I
  $AA8: LD I, $CD1 ; Load CD1 into I
  $AC6: LD I, $547 ; Load 547 into I
  $AE4: LD I, $422 ; Load 422 into I
  $AEC: LD I, $285 ; Load 285 into I
  $AF6: LD I, $BA5 ; Load BA5 into I
  $AFC: LD I, $E6D ; Load E6D into I
  $B08: LD I, $969 ; Load 969 into I
  $B26: LD I, $1BE ; Load 1BE into I
  $B40: LD I, $0EE ; Load 0EE into I
  $B64: LD I, $E68 ; Load E68 into I
  $B74: LD I, $0D8 ; Load 0D8 into I
  $BBE: LD I, $DD8 ; Load DD8 into I
  $BD4: LD I, $330 ; Load 330 into I
  $BF0: LD I, $C90 ; Load C90 into I
  $BF6: LD I, $B68 ; Load B68 into I
  $C16: LD I, $7EB ; Load 7EB into I
  $C62: LD I, $615 ; Load 615 into I
  $C7E: LD I, $AF1 ; Load AF1 into I
  $CAA: LD I, $C56 ; Load C56 into I
  $CDC: LD I, $4FE ; Load 4FE into I
  $D0E: LD I, $BBB ; Load BBB into I
  $D2C: LD I, $7A8 ; Load 7A8 into I
  $D2E: LD I, $A4A ; Load A4A into I
  $D30: LD I, $57E ; Load 57E into I
  $D48: LD I, $656 ; Load 656 into I
  $D50: LD I, $FA3 ; Load FA3 into I
  $D64: LD I, $1FF ; Load 1FF into I
  $D6C: LD I, $146 ; Load 146 into I
  $D7C: LD I, $AA2 ; Load AA2 into I
  $D8C: LD I, $0D2 ; Load 0D2 into I
  $D9C: LD I, $963 ; Load 963 into I
  $DAC: LD I, $CB0 ; Load CB0 into I
  $DB0: LD I, $E36 ; Load E36 into I
  $DC4: LD I, $216 ; Load 216 into I
  $DFE: LD I, $EAE ; Load EAE into I
  $E1C: LD I, $A46 ; Load A46 into I
  $E2E: LD I, $EF2 ; Load EF2 into I
  $E9A: LD I, $C22 ; Load C22 into I
  $EAC: LD I, $671 ; Load 671 into I
  $EE4: LD I, $041 ; Load 041 into I
  $EF2: LD I, $B74 ; Load B74 into I
  $F06: LD I, $C6C ; Load C6C into I
  $F0E: LD I, $0FD ; Load 0FD into I
  $F56: LD I, $1C1 ; Load 1C1 into I
  $F68: LD I, $076 ; Load 076 into I
  $F7E: LD I, $DCE ; Load DCE into I
  $FA4: LD I, $939 ; Load 939 into I
  $FAC: LD I, $4E0 ; Load 4E0 into I

CONTROL FLOW ANALYSIS:
Jumps: 243
Calls: 115
Branches: 224
Loops: 137
Loop Structures:
  $2C8 -> $0A5 (backward jump)
  $2EA -> $028 (backward jump)
  $2EC -> $29F (backward jump)
  $334 -> $2F4 (backward jump)
  $39A -> $113 (backward jump)
  $3C2 -> $22E (backward jump)
  $3DC -> $0E7 (backward jump)
  $4CE -> $115 (backward jump)
  $4D2 -> $462 (backward jump)
  $502 -> $1DF (backward jump)
  $530 -> $3FA (backward jump)
  $542 -> $348 (backward jump)
  $54A -> $00F (backward jump)
  $552 -> $047 (backward jump)
  $570 -> $0C3 (backward jump)
  $594 -> $0E5 (backward jump)
  $60E -> $0D7 (backward jump)
  $61E -> $394 (backward jump)
  $628 -> $282 (backward jump)
  $640 -> $467 (backward jump)
  $650 -> $4DC (backward jump)
  $696 -> $556 (backward jump)
  $69A -> $207 (backward jump)
  $6C0 -> $549 (backward jump)
  $6C6 -> $472 (backward jump)
  $6D0 -> $31D (backward jump)
  $6FE -> $3E3 (backward jump)
  $702 -> $60B (backward jump)
  $756 -> $600 (backward jump)
  $776 -> $761 (backward jump)
  $77C -> $3B7 (backward jump)
  $79E -> $1EC (backward jump)
  $7A8 -> $5C0 (backward jump)
  $7C0 -> $57E (backward jump)
  $7DE -> $62D (backward jump)
  $7EE -> $661 (backward jump)
  $84C -> $0F1 (backward jump)
  $870 -> $47F (backward jump)
  $8B6 -> $7C7 (backward jump)
  $8E4 -> $2E1 (backward jump)
  $8F4 -> $109 (backward jump)
  $920 -> $2F0 (backward jump)
  $936 -> $1AD (backward jump)
  $95C -> $16A (backward jump)
  $970 -> $8A6 (backward jump)
  $982 -> $4EF (backward jump)
  $990 -> $7A0 (backward jump)
  $996 -> $063 (backward jump)
  $99E -> $59D (backward jump)
  $9C0 -> $1E2 (backward jump)
  $9E2 -> $634 (backward jump)
  $9F8 -> $814 (backward jump)
  $9FA -> $963 (backward jump)
  $A1A -> $101 (backward jump)
  $A2A -> $4B9 (backward jump)
  $A44 -> $71E (backward jump)
  $A4E -> $160 (backward jump)
  $A66 -> $92D (backward jump)
  $A78 -> $020 (backward jump)
  $A8C -> $6CF (backward jump)
  $A9A -> $417 (backward jump)
  $AAC -> $160 (backward jump)
  $AB4 -> $73C (backward jump)
  $ABE -> $455 (backward jump)
  $AC2 -> $17C (backward jump)
  $ACC -> $08A (backward jump)
  $AE8 -> $099 (backward jump)
  $B0E -> $89D (backward jump)
  $B22 -> $513 (backward jump)
  $B2E -> $373 (backward jump)
  $B54 -> $501 (backward jump)
  $B6E -> $5D4 (backward jump)
  $B78 -> $362 (backward jump)
  $B98 -> $054 (backward jump)
  $BA0 -> $606 (backward jump)
  $BA2 -> $62B (backward jump)
  $BB8 -> $2CC (backward jump)
  $BC4 -> $3DB (backward jump)
  $BDC -> $918 (backward jump)
  $BFA -> $499 (backward jump)
  $C18 -> $B52 (backward jump)
  $C20 -> $549 (backward jump)
  $C7C -> $1A5 (backward jump)
  $C88 -> $7DA (backward jump)
  $C8C -> $2F0 (backward jump)
  $C92 -> $38E (backward jump)
  $CBC -> $280 (backward jump)
  $CBE -> $7AA (backward jump)
  $CD2 -> $9D0 (backward jump)
  $CDA -> $C9D (backward jump)
  $CDE -> $5E2 (backward jump)
  $CF8 -> $500 (backward jump)
  $D1C -> $A6D (backward jump)
  $D24 -> $0D4 (backward jump)
  $D28 -> $B00 (backward jump)
  $D62 -> $CF5 (backward jump)
  $D6A -> $323 (backward jump)
  $D80 -> $11D (backward jump)
  $D8E -> $607 (backward jump)
  $D96 -> $48C (backward jump)
  $D9A -> $6C8 (backward jump)
  $DA4 -> $9F8 (backward jump)
  $DCE -> $93A (backward jump)
  $DE4 -> $320 (backward jump)
  $DE6 -> $4D8 (backward jump)
  $DEC -> $834 (backward jump)
  $E08 -> $793 (backward jump)
  $E0E -> $4BC (backward jump)
  $E10 -> $477 (backward jump)
  $E3C -> $C58 (backward jump)
  $E40 -> $DED (backward jump)
  $E44 -> $949 (backward jump)
  $E4C -> $DE0 (backward jump)
  $E62 -> $A4C (backward jump)
  $E6C -> $605 (backward jump)
  $E6E -> $2A4 (backward jump)
  $E72 -> $110 (backward jump)
  $E9C -> $1D0 (backward jump)
  $EA8 -> $509 (backward jump)
  $EC0 -> $D0A (backward jump)
  $EC6 -> $809 (backward jump)
  $ED6 -> $DE6 (backward jump)
  $EE8 -> $B59 (backward jump)
  $EF0 -> $A1A (backward jump)
  $F22 -> $92B (backward jump)
  $F6E -> $241 (backward jump)
  $F8A -> $9F0 (backward jump)
  $F9A -> $24A (backward jump)
  $FB2 -> $DDD (backward jump)
  $FB4 -> $2E7 (backward jump)
  $FCE -> $A40 (backward jump)
  $FD8 -> $88E (backward jump)
  $FDA -> $420 (backward jump)
  $FDC -> $B67 (backward jump)
  $FE4 -> $315 (backward jump)
  $FEE -> $72A (backward jump)
  $FF6 -> $959 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $304F   SE       V0, #4F         ; Skip if V0 == 79
$202    $CE06   RND      VE, #06         ; VE = random & 06
$204    $7489   ADD      V4, #89         ; Add 137 to V4
$206    $3FFB   SE       VF, #FB         ; Skip if VF == 251
$208    $E404   UNKNOWN  $E404           ; Unknown Exxx instruction
$20A    $56A6   UNKNOWN  $56A6           ; Unknown 5xxx instruction
$20C    $1E5D   JP       $E5D            ; Jump to E5D
$20E    $BF2E   JP       V0, $F2E        ; Jump to V0 + F2E
$210    $1FB4   JP       $FB4            ; Jump to FB4
$212    $3D22   SE       VD, #22         ; Skip if VD == 34
$214    $805E   SHL      V0              ; V0 <<= 1, VF = MSB
$216    $B673   JP       V0, $673        ; Jump to V0 + 673
$218    $20EA   CALL     $0EA            ; Call subroutine at 0EA
$21A    $470C   SNE      V7, #0C         ; Skip if V7 != 12
$21C    $431B   SNE      V3, #1B         ; Skip if V3 != 27
$21E    $B723   JP       V0, $723        ; Jump to V0 + 723
$220    $028D   SYS      $28D            ; System call to 28D
$222    $531C   UNKNOWN  $531C           ; Unknown 5xxx instruction
$224    $9A65   UNKNOWN  $9A65           ; Unknown 9xxx instruction
$226    $8630   LD       V6, V3          ; V6 = V3
$228    $F75F   UNKNOWN  F75F            ; Unknown Fxxx instruction
$22A    $BF27   JP       V0, $F27        ; Jump to V0 + F27
$22C    $787E   ADD      V8, #7E         ; Add 126 to V8
$22E    $0795   SYS      $795            ; System call to 795
$230    $1F74   JP       $F74            ; Jump to F74
$232    $8B69   UNKNOWN  8B69            ; Unknown 8xxx instruction
$234    $D413   DRW      V4, V1, #3      ; Draw 3-byte sprite at V4, V1
$236    $9CC4   UNKNOWN  $9CC4           ; Unknown 9xxx instruction
$238    $4888   SNE      V8, #88         ; Skip if V8 != 136
$23A    $2B87   CALL     $B87            ; Call subroutine at B87
$23C    $B572   JP       V0, $572        ; Jump to V0 + 572
$23E    $6E4F   LD       VE, #4F         ; Load 79 into VE
$240    $FF92   UNKNOWN  FF92            ; Unknown Fxxx instruction
$242    $1CBE   JP       $CBE            ; Jump to CBE
$244    $9E34   UNKNOWN  $9E34           ; Unknown 9xxx instruction
$246    $2255   CALL     $255            ; Call subroutine at 255
$248    $51A4   UNKNOWN  $51A4           ; Unknown 5xxx instruction
$24A    $27D5   CALL     $7D5            ; Call subroutine at 7D5
$24C    $472D   SNE      V7, #2D         ; Skip if V7 != 45
$24E    $6784   LD       V7, #84         ; Load 132 into V7
$250    $29A9   CALL     $9A9            ; Call subroutine at 9A9
$252    $B333   JP       V0, $333        ; Jump to V0 + 333
$254    $9F5F   UNKNOWN  $9F5F           ; Unknown 9xxx instruction
$256    $8B87   SUBN     VB, V8          ; VB = V8 - VB, VF = !borrow
$258    $5A2A   UNKNOWN  $5A2A           ; Unknown 5xxx instruction
$25A    $0791   SYS      $791            ; System call to 791
$25C    $45F3   SNE      V5, #F3         ; Skip if V5 != 243
$25E    $417D   SNE      V1, #7D         ; Skip if V1 != 125
$260    $1329   JP       $329            ; Jump to 329
$262    $9CC5   UNKNOWN  $9CC5           ; Unknown 9xxx instruction
$264    $0F06   SYS      $F06            ; System call to F06
$266    $8441   OR       V4, V4          ; V4 |= V4
$268    $BE5A   JP       V0, $E5A        ; Jump to V0 + E5A
$26A    $5EA4   UNKNOWN  $5EA4           ; Unknown 5xxx instruction
$26C    $7915   ADD      V9, #15         ; Add 21 to V9
$26E    $D1B3   DRW      V1, VB, #3      ; Draw 3-byte sprite at V1, VB
$270    $8241   OR       V2, V4          ; V2 |= V4
$272    $1692   JP       $692            ; Jump to 692
$274    $7C9A   ADD      VC, #9A         ; Add 154 to VC
$276    $B6D9   JP       V0, $6D9        ; Jump to V0 + 6D9
$278    $0CBB   SYS      $CBB            ; System call to CBB
$27A    $0563   SYS      $563            ; System call to 563
$27C    $9A2F   UNKNOWN  $9A2F           ; Unknown 9xxx instruction
$27E    $3233   SE       V2, #33         ; Skip if V2 == 51
$280    $B306   JP       V0, $306        ; Jump to V0 + 306
$282    $A765   LD       I, $765         ; Load 765 into I
$284    $08D6   SYS      $8D6            ; System call to 8D6
$286    $4A90   SNE      VA, #90         ; Skip if VA != 144
$288    $6501   LD       V5, #01         ; Load 1 into V5
$28A    $ABCB   LD       I, $BCB         ; Load BCB into I
$28C    $92F2   UNKNOWN  $92F2           ; Unknown 9xxx instruction
$28E    $682F   LD       V8, #2F         ; Load 47 into V8
$290    $1C77   JP       $C77            ; Jump to C77
$292    $0F54   SYS      $F54            ; System call to F54
$294    $9E8D   UNKNOWN  $9E8D           ; Unknown 9xxx instruction
$296    $4EDD   SNE      VE, #DD         ; Skip if VE != 221
$298    $0258   SYS      $258            ; System call to 258
$29A    $F587   UNKNOWN  F587            ; Unknown Fxxx instruction
$29C    $A939   LD       I, $939         ; Load 939 into I
$29E    $AF8A   LD       I, $F8A         ; Load F8A into I
$2A0    $96E0   SNE      V6, VE          ; Skip if V6 != VE
$2A2    $5D1A   UNKNOWN  $5D1A           ; Unknown 5xxx instruction
$2A4    $9F59   UNKNOWN  $9F59           ; Unknown 9xxx instruction
$2A6    $1CB3   JP       $CB3            ; Jump to CB3
$2A8    $40DB   SNE      V0, #DB         ; Skip if V0 != 219
$2AA    $8E91   OR       VE, V9          ; VE |= V9
$2AC    $A768   LD       I, $768         ; Load 768 into I
$2AE    $DE97   DRW      VE, V9, #7      ; Draw 7-byte sprite at VE, V9
$2B0    $5162   UNKNOWN  $5162           ; Unknown 5xxx instruction
$2B2    $C58E   RND      V5, #8E         ; V5 = random & 8E
$2B4    $4D1D   SNE      VD, #1D         ; Skip if VD != 29
$2B6    $F603   UNKNOWN  F603            ; Unknown Fxxx instruction
$2B8    $3B32   SE       VB, #32         ; Skip if VB == 50
$2BA    $F2A1   UNKNOWN  F2A1            ; Unknown Fxxx instruction
$2BC    $9BB5   UNKNOWN  $9BB5           ; Unknown 9xxx instruction
$2BE    $86CC   UNKNOWN  86CC            ; Unknown 8xxx instruction
$2C0    $D8A6   DRW      V8, VA, #6      ; Draw 6-byte sprite at V8, VA
$2C2    $AA89   LD       I, $A89         ; Load A89 into I
$2C4    $DF84   DRW      VF, V8, #4      ; Draw 4-byte sprite at VF, V8
$2C6    $2DE2   CALL     $DE2            ; Call subroutine at DE2
$2C8    $B0A5   JP       V0, $0A5        ; Jump to V0 + 0A5
$2CA    $F221   UNKNOWN  F221            ; Unknown Fxxx instruction
$2CC    $831E   SHL      V3              ; V3 <<= 1, VF = MSB
$2CE    $01C6   SYS      $1C6            ; System call to 1C6
$2D0    $F3DB   UNKNOWN  F3DB            ; Unknown Fxxx instruction
$2D2    $EE76   UNKNOWN  $EE76           ; Unknown Exxx instruction
$2D4    $C277   RND      V2, #77         ; V2 = random & 77
$2D6    $3483   SE       V4, #83         ; Skip if V4 == 131
$2D8    $F59D   UNKNOWN  F59D            ; Unknown Fxxx instruction
$2DA    $78A4   ADD      V8, #A4         ; Add 164 to V8
$2DC    $FEE1   UNKNOWN  FEE1            ; Unknown Fxxx instruction
$2DE    $9E32   UNKNOWN  $9E32           ; Unknown 9xxx instruction
$2E0    $3B39   SE       VB, #39         ; Skip if VB == 57
$2E2    $9EBC   UNKNOWN  $9EBC           ; Unknown 9xxx instruction
$2E4    $9A26   UNKNOWN  $9A26           ; Unknown 9xxx instruction
$2E6    $2432   CALL     $432            ; Call subroutine at 432
$2E8    $733B   ADD      V3, #3B         ; Add 59 to V3
$2EA    $B028   JP       V0, $028        ; Jump to V0 + 028
$2EC    $129F   JP       $29F            ; Jump to 29F
$2EE    $FB12   UNKNOWN  FB12            ; Unknown Fxxx instruction
$2F0    $D7AC   DRW      V7, VA, #C      ; Draw 12-byte sprite at V7, VA
$2F2    $DAD9   DRW      VA, VD, #9      ; Draw 9-byte sprite at VA, VD
$2F4    $BF9F   JP       V0, $F9F        ; Jump to V0 + F9F
$2F6    $9494   UNKNOWN  $9494           ; Unknown 9xxx instruction
$2F8    $7655   ADD      V6, #55         ; Add 85 to V6
$2FA    $47B8   SNE      V7, #B8         ; Skip if V7 != 184
$2FC    $E676   UNKNOWN  $E676           ; Unknown Exxx instruction
$2FE    $3573   SE       V5, #73         ; Skip if V5 == 115
$300    $F4C1   UNKNOWN  F4C1            ; Unknown Fxxx instruction
$302    $4541   SNE      V5, #41         ; Skip if V5 != 65
$304    $0100   SYS      $100            ; System call to 100
$308    $2AA8   CALL     $AA8            ; Call subroutine at AA8
$30A    $3F54   SE       VF, #54         ; Skip if VF == 84
$30C    $4E5E   SNE      VE, #5E         ; Skip if VE != 94
$30E    $95D2   UNKNOWN  $95D2           ; Unknown 9xxx instruction
$310    $92FB   UNKNOWN  $92FB           ; Unknown 9xxx instruction
$312    $0D43   SYS      $D43            ; System call to D43
$314    $56C0   SE       V6, VC          ; Skip if V6 == VC
$316    $BEB6   JP       V0, $EB6        ; Jump to V0 + EB6
$318    $D2C5   DRW      V2, VC, #5      ; Draw 5-byte sprite at V2, VC
$31A    $530E   UNKNOWN  $530E           ; Unknown 5xxx instruction
$31C    $271D   CALL     $71D            ; Call subroutine at 71D
$31E    $0A0D   SYS      $A0D            ; System call to A0D
$320    $50D8   UNKNOWN  $50D8           ; Unknown 5xxx instruction
$322    $6EC6   LD       VE, #C6         ; Load 198 into VE
$324    $0E13   SYS      $E13            ; System call to E13
$326    $4B72   SNE      VB, #72         ; Skip if VB != 114
$328    $B47B   JP       V0, $47B        ; Jump to V0 + 47B
$32A    $2A4A   CALL     $A4A            ; Call subroutine at A4A
$32C    $3772   SE       V7, #72         ; Skip if V7 == 114
$32E    $6AD9   LD       VA, #D9         ; Load 217 into VA
$330    $2FC6   CALL     $FC6            ; Call subroutine at FC6
$332    $A6CC   LD       I, $6CC         ; Load 6CC into I
$334    $12F4   JP       $2F4            ; Jump to 2F4
$336    $7E30   ADD      VE, #30         ; Add 48 to VE
$338    $64F5   LD       V4, #F5         ; Load 245 into V4
$33A    $4740   SNE      V7, #40         ; Skip if V7 != 64
$33C    $A80E   LD       I, $80E         ; Load 80E into I
$33E    $A54E   LD       I, $54E         ; Load 54E into I
$340    $CF7F   RND      VF, #7F         ; VF = random & 7F
$342    $3BE3   SE       VB, #E3         ; Skip if VB == 227
$344    $94B1   UNKNOWN  $94B1           ; Unknown 9xxx instruction
$346    $9F96   UNKNOWN  $9F96           ; Unknown 9xxx instruction
$348    $6CCA   LD       VC, #CA         ; Load 202 into VC
$34A    $5420   SE       V4, V2          ; Skip if V4 == V2
$34C    $4F36   SNE      VF, #36         ; Skip if VF != 54
$34E    $81B7   SUBN     V1, VB          ; V1 = VB - V1, VF = !borrow
$350    $151B   JP       $51B            ; Jump to 51B
$352    $CF7F   RND      VF, #7F         ; VF = random & 7F
$354    $73C1   ADD      V3, #C1         ; Add 193 to V3
$356    $0B66   SYS      $B66            ; System call to B66
$358    $F2C9   UNKNOWN  F2C9            ; Unknown Fxxx instruction
$35A    $79C8   ADD      V9, #C8         ; Add 200 to V9
$35C    $8CAA   UNKNOWN  8CAA            ; Unknown 8xxx instruction
$35E    $7CC2   ADD      VC, #C2         ; Add 194 to VC
$360    $7032   ADD      V0, #32         ; Add 50 to V0
$362    $5630   SE       V6, V3          ; Skip if V6 == V3
$364    $A98F   LD       I, $98F         ; Load 98F into I
$366    $BF09   JP       V0, $F09        ; Jump to V0 + F09
$368    $176A   JP       $76A            ; Jump to 76A
$36A    $5871   UNKNOWN  $5871           ; Unknown 5xxx instruction
$36C    $0584   SYS      $584            ; System call to 584
$36E    $BA95   JP       V0, $A95        ; Jump to V0 + A95
$370    $7673   ADD      V6, #73         ; Add 115 to V6
$372    $C37E   RND      V3, #7E         ; V3 = random & 7E
$374    $60DE   LD       V0, #DE         ; Load 222 into V0
$376    $F3B4   UNKNOWN  F3B4            ; Unknown Fxxx instruction
$378    $B822   JP       V0, $822        ; Jump to V0 + 822
$37A    $C0E2   RND      V0, #E2         ; V0 = random & E2
$37C    $37F6   SE       V7, #F6         ; Skip if V7 == 246
$37E    $90BF   UNKNOWN  $90BF           ; Unknown 9xxx instruction
$380    $8E39   UNKNOWN  8E39            ; Unknown 8xxx instruction
$382    $C1AD   RND      V1, #AD         ; V1 = random & AD
$384    $77F1   ADD      V7, #F1         ; Add 241 to V7
$386    $C976   RND      V9, #76         ; V9 = random & 76
$388    $E37A   UNKNOWN  $E37A           ; Unknown Exxx instruction
$38A    $D0B8   DRW      V0, VB, #8      ; Draw 8-byte sprite at V0, VB
$38C    $D36C   DRW      V3, V6, #C      ; Draw 12-byte sprite at V3, V6
$38E    $ED14   UNKNOWN  $ED14           ; Unknown Exxx instruction
$390    $6587   LD       V5, #87         ; Load 135 into V5
$392    $6E71   LD       VE, #71         ; Load 113 into VE
$394    $6750   LD       V7, #50         ; Load 80 into V7
$396    $72EC   ADD      V2, #EC         ; Add 236 to V2
$398    $2CFC   CALL     $CFC            ; Call subroutine at CFC
$39A    $1113   JP       $113            ; Jump to 113
$39C    $CA1C   RND      VA, #1C         ; VA = random & 1C
$39E    $09A0   SYS      $9A0            ; System call to 9A0
$3A0    $54DC   UNKNOWN  $54DC           ; Unknown 5xxx instruction
$3A2    $D61E   DRW      V6, V1, #E      ; Draw 14-byte sprite at V6, V1
$3A4    $C884   RND      V8, #84         ; V8 = random & 84
$3A6    $0DA6   SYS      $DA6            ; System call to DA6
$3A8    $95AA   UNKNOWN  $95AA           ; Unknown 9xxx instruction
$3AA    $56CF   UNKNOWN  $56CF           ; Unknown 5xxx instruction
$3AC    $F214   UNKNOWN  F214            ; Unknown Fxxx instruction
$3AE    $D6AC   DRW      V6, VA, #C      ; Draw 12-byte sprite at V6, VA
$3B0    $E20F   UNKNOWN  $E20F           ; Unknown Exxx instruction
$3B2    $50B4   UNKNOWN  $50B4           ; Unknown 5xxx instruction
$3B4    $958A   UNKNOWN  $958A           ; Unknown 9xxx instruction
$3B6    $506F   UNKNOWN  $506F           ; Unknown 5xxx instruction
$3B8    $CA64   RND      VA, #64         ; VA = random & 64
$3BA    $9AA7   UNKNOWN  $9AA7           ; Unknown 9xxx instruction
$3BC    $A235   LD       I, $235         ; Load 235 into I
$3BE    $6B31   LD       VB, #31         ; Load 49 into VB
$3C0    $345C   SE       V4, #5C         ; Skip if V4 == 92
$3C2    $B22E   JP       V0, $22E        ; Jump to V0 + 22E
$3C4    $25D8   CALL     $5D8            ; Call subroutine at 5D8
$3C6    $F8B7   UNKNOWN  F8B7            ; Unknown Fxxx instruction
$3C8    $CB2A   RND      VB, #2A         ; VB = random & 2A
$3CA    $0780   SYS      $780            ; System call to 780
$3CC    $EA59   UNKNOWN  $EA59           ; Unknown Exxx instruction
$3CE    $5023   UNKNOWN  $5023           ; Unknown 5xxx instruction
$3D0    $2368   CALL     $368            ; Call subroutine at 368
$3D2    $9BA5   UNKNOWN  $9BA5           ; Unknown 9xxx instruction
$3D4    $8768   UNKNOWN  8768            ; Unknown 8xxx instruction
$3D6    $89A2   AND      V9, VA          ; V9 &= VA
$3D8    $2336   CALL     $336            ; Call subroutine at 336
$3DA    $2371   CALL     $371            ; Call subroutine at 371
$3DC    $10E7   JP       $0E7            ; Jump to 0E7
$3DE    $BF66   JP       V0, $F66        ; Jump to V0 + F66
$3E0    $FA56   UNKNOWN  FA56            ; Unknown Fxxx instruction
$3E2    $960F   UNKNOWN  $960F           ; Unknown 9xxx instruction
$3E4    $CF11   RND      VF, #11         ; VF = random & 11
$3E6    $9100   SNE      V1, V0          ; Skip if V1 != V0
$3E8    $7975   ADD      V9, #75         ; Add 117 to V9
$3EA    $AFF9   LD       I, $FF9         ; Load FF9 into I
$3EC    $8F38   UNKNOWN  8F38            ; Unknown 8xxx instruction
$3EE    $AC12   LD       I, $C12         ; Load C12 into I
$3F0    $7E9E   ADD      VE, #9E         ; Add 158 to VE
$3F2    $5C6E   UNKNOWN  $5C6E           ; Unknown 5xxx instruction
$3F4    $4FF1   SNE      VF, #F1         ; Skip if VF != 241
$3F6    $0FFF   SYS      $FFF            ; System call to FFF
$3F8    $42F1   SNE      V2, #F1         ; Skip if V2 != 241
$3FA    $BE8C   JP       V0, $E8C        ; Jump to V0 + E8C
$3FC    $A2F8   LD       I, $2F8         ; Load 2F8 into I
$3FE    $53CB   UNKNOWN  $53CB           ; Unknown 5xxx instruction
$400    $4BC5   SNE      VB, #C5         ; Skip if VB != 197
$402    $D8F3   DRW      V8, VF, #3      ; Draw 3-byte sprite at V8, VF
$404    $4CA8   SNE      VC, #A8         ; Skip if VC != 168
$406    $06C2   SYS      $6C2            ; System call to 6C2
$408    $A761   LD       I, $761         ; Load 761 into I
$40A    $AF85   LD       I, $F85         ; Load F85 into I
$40C    $ED11   UNKNOWN  $ED11           ; Unknown Exxx instruction
$40E    $0E29   SYS      $E29            ; System call to E29
$410    $02DB   SYS      $2DB            ; System call to 2DB
$412    $CFB3   RND      VF, #B3         ; VF = random & B3
$414    $905D   UNKNOWN  $905D           ; Unknown 9xxx instruction
$416    $3424   SE       V4, #24         ; Skip if V4 == 36
$418    $5C61   UNKNOWN  $5C61           ; Unknown 5xxx instruction
$41A    $C1DC   RND      V1, #DC         ; V1 = random & DC
$41C    $AC87   LD       I, $C87         ; Load C87 into I
$41E    $42B3   SNE      V2, #B3         ; Skip if V2 != 179
$420    $43AC   SNE      V3, #AC         ; Skip if V3 != 172
$422    $D3FE   DRW      V3, VF, #E      ; Draw 14-byte sprite at V3, VF
$424    $FB38   UNKNOWN  FB38            ; Unknown Fxxx instruction
$426    $0543   SYS      $543            ; System call to 543
$428    $5B74   UNKNOWN  $5B74           ; Unknown 5xxx instruction
$42A    $C099   RND      V0, #99         ; V0 = random & 99
$42C    $82BD   UNKNOWN  82BD            ; Unknown 8xxx instruction
$42E    $A305   LD       I, $305         ; Load 305 into I
$430    $7CCF   ADD      VC, #CF         ; Add 207 to VC
$432    $BA9D   JP       V0, $A9D        ; Jump to V0 + A9D
$434    $0A22   SYS      $A22            ; System call to A22
$436    $5E93   UNKNOWN  $5E93           ; Unknown 5xxx instruction
$438    $197B   JP       $97B            ; Jump to 97B
$43A    $2438   CALL     $438            ; Call subroutine at 438
$43C    $AB51   LD       I, $B51         ; Load B51 into I
$43E    $26CA   CALL     $6CA            ; Call subroutine at 6CA
$440    $BB97   JP       V0, $B97        ; Jump to V0 + B97
$442    $E033   UNKNOWN  $E033           ; Unknown Exxx instruction
$444    $7D14   ADD      VD, #14         ; Add 20 to VD
$446    $D970   DRW      V9, V7, #0      ; Draw 0-byte sprite at V9, V7
$448    $77BE   ADD      V7, #BE         ; Add 190 to V7
$44A    $99B3   UNKNOWN  $99B3           ; Unknown 9xxx instruction
$44C    $8738   UNKNOWN  8738            ; Unknown 8xxx instruction
$44E    $7F03   ADD      VF, #03         ; Add 3 to VF
$450    $ED0A   UNKNOWN  $ED0A           ; Unknown Exxx instruction
$452    $F2EF   UNKNOWN  F2EF            ; Unknown Fxxx instruction
$454    $F725   UNKNOWN  F725            ; Unknown Fxxx instruction
$456    $F549   UNKNOWN  F549            ; Unknown Fxxx instruction
$458    $FBF2   UNKNOWN  FBF2            ; Unknown Fxxx instruction
$45A    $BD0A   JP       V0, $D0A        ; Jump to V0 + D0A
$45C    $AFA1   LD       I, $FA1         ; Load FA1 into I
$45E    $6C9B   LD       VC, #9B         ; Load 155 into VC
$460    $42BC   SNE      V2, #BC         ; Skip if V2 != 188
$462    $8204   ADD      V2, V0          ; V2 += V0, VF = carry
$464    $BC38   JP       V0, $C38        ; Jump to V0 + C38
$466    $0D29   SYS      $D29            ; System call to D29
$468    $FA00   UNKNOWN  FA00            ; Unknown Fxxx instruction
$46A    $0B27   SYS      $B27            ; System call to B27
$46C    $1EB8   JP       $EB8            ; Jump to EB8
$46E    $43DF   SNE      V3, #DF         ; Skip if V3 != 223
$470    $4BD3   SNE      VB, #D3         ; Skip if VB != 211
$472    $347A   SE       V4, #7A         ; Skip if V4 == 122
$474    $85EB   UNKNOWN  85EB            ; Unknown 8xxx instruction
$476    $5264   UNKNOWN  $5264           ; Unknown 5xxx instruction
$478    $16A4   JP       $6A4            ; Jump to 6A4
$47A    $9B42   UNKNOWN  $9B42           ; Unknown 9xxx instruction
$47C    $7FBF   ADD      VF, #BF         ; Add 191 to VF
$47E    $205B   CALL     $05B            ; Call subroutine at 05B
$480    $5BDC   UNKNOWN  $5BDC           ; Unknown 5xxx instruction
$482    $4762   SNE      V7, #62         ; Skip if V7 != 98
$484    $3222   SE       V2, #22         ; Skip if V2 == 34
$486    $E539   UNKNOWN  $E539           ; Unknown Exxx instruction
$488    $DB90   DRW      VB, V9, #0      ; Draw 0-byte sprite at VB, V9
$48A    $23C9   CALL     $3C9            ; Call subroutine at 3C9
$48C    $E37D   UNKNOWN  $E37D           ; Unknown Exxx instruction
$48E    $93C1   UNKNOWN  $93C1           ; Unknown 9xxx instruction
$490    $DC9B   DRW      VC, V9, #B      ; Draw 11-byte sprite at VC, V9
$492    $5187   UNKNOWN  $5187           ; Unknown 5xxx instruction
$494    $6C5E   LD       VC, #5E         ; Load 94 into VC
$496    $04F7   SYS      $4F7            ; System call to 4F7
$498    $A7DA   LD       I, $7DA         ; Load 7DA into I
$49A    $BDF3   JP       V0, $DF3        ; Jump to V0 + DF3
$49C    $0059   SYS      $059            ; System call to 059
$49E    $FD21   UNKNOWN  FD21            ; Unknown Fxxx instruction
$4A0    $7083   ADD      V0, #83         ; Add 131 to V0
$4A2    $849F   UNKNOWN  849F            ; Unknown 8xxx instruction
$4A4    $3221   SE       V2, #21         ; Skip if V2 == 33
$4A6    $394A   SE       V9, #4A         ; Skip if V9 == 74
$4A8    $ADE7   LD       I, $DE7         ; Load DE7 into I
$4AA    $D386   DRW      V3, V8, #6      ; Draw 6-byte sprite at V3, V8
$4AC    $CA98   RND      VA, #98         ; VA = random & 98
$4AE    $DD68   DRW      VD, V6, #8      ; Draw 8-byte sprite at VD, V6
$4B0    $6C67   LD       VC, #67         ; Load 103 into VC
$4B2    $674B   LD       V7, #4B         ; Load 75 into V7
$4B4    $2C0C   CALL     $C0C            ; Call subroutine at C0C
$4B6    $9098   UNKNOWN  $9098           ; Unknown 9xxx instruction
$4B8    $1DD2   JP       $DD2            ; Jump to DD2
$4BA    $8672   AND      V6, V7          ; V6 &= V7
$4BC    $1EE2   JP       $EE2            ; Jump to EE2
$4BE    $E258   UNKNOWN  $E258           ; Unknown Exxx instruction
$4C0    $5CCD   UNKNOWN  $5CCD           ; Unknown 5xxx instruction
$4C2    $8764   ADD      V7, V6          ; V7 += V6, VF = carry
$4C4    $84ED   UNKNOWN  84ED            ; Unknown 8xxx instruction
$4C6    $D170   DRW      V1, V7, #0      ; Draw 0-byte sprite at V1, V7
$4C8    $F33C   UNKNOWN  F33C            ; Unknown Fxxx instruction
$4CA    $169E   JP       $69E            ; Jump to 69E
$4CC    $E31B   UNKNOWN  $E31B           ; Unknown Exxx instruction
$4CE    $B115   JP       V0, $115        ; Jump to V0 + 115
$4D0    $08AA   SYS      $8AA            ; System call to 8AA
$4D2    $1462   JP       $462            ; Jump to 462
$4D4    $9DDD   UNKNOWN  $9DDD           ; Unknown 9xxx instruction
$4D6    $3247   SE       V2, #47         ; Skip if V2 == 71
$4D8    $CC26   RND      VC, #26         ; VC = random & 26
$4DA    $D6B9   DRW      V6, VB, #9      ; Draw 9-byte sprite at V6, VB
$4DC    $DF6C   DRW      VF, V6, #C      ; Draw 12-byte sprite at VF, V6
$4DE    $9B06   UNKNOWN  $9B06           ; Unknown 9xxx instruction
$4E0    $0C6D   SYS      $C6D            ; System call to C6D
$4E2    $D550   DRW      V5, V5, #0      ; Draw 0-byte sprite at V5, V5
$4E4    $AD9C   LD       I, $D9C         ; Load D9C into I
$4E6    $1707   JP       $707            ; Jump to 707
$4E8    $7732   ADD      V7, #32         ; Add 50 to V7
$4EA    $3D5D   SE       VD, #5D         ; Skip if VD == 93
$4EC    $AB94   LD       I, $B94         ; Load B94 into I
$4EE    $EC52   UNKNOWN  $EC52           ; Unknown Exxx instruction
$4F0    $635C   LD       V3, #5C         ; Load 92 into V3
$4F2    $D9BD   DRW      V9, VB, #D      ; Draw 13-byte sprite at V9, VB
$4F4    $6182   LD       V1, #82         ; Load 130 into V1
$4F6    $E341   UNKNOWN  $E341           ; Unknown Exxx instruction
$4F8    $48AB   SNE      V8, #AB         ; Skip if V8 != 171
$4FA    $C0CF   RND      V0, #CF         ; V0 = random & CF
$4FC    $E3B2   UNKNOWN  $E3B2           ; Unknown Exxx instruction
$4FE    $0932   SYS      $932            ; System call to 932
$500    $DB74   DRW      VB, V7, #4      ; Draw 4-byte sprite at VB, V7
$502    $11DF   JP       $1DF            ; Jump to 1DF
$504    $B548   JP       V0, $548        ; Jump to V0 + 548
$506    $4EC6   SNE      VE, #C6         ; Skip if VE != 198
$508    $5197   UNKNOWN  $5197           ; Unknown 5xxx instruction
$50A    $944D   UNKNOWN  $944D           ; Unknown 9xxx instruction
$50C    $0D1A   SYS      $D1A            ; System call to D1A
$50E    $BFA8   JP       V0, $FA8        ; Jump to V0 + FA8
$510    $93C3   UNKNOWN  $93C3           ; Unknown 9xxx instruction
$512    $48DE   SNE      V8, #DE         ; Skip if V8 != 222
$514    $A0B1   LD       I, $0B1         ; Load 0B1 into I
$516    $7B7C   ADD      VB, #7C         ; Add 124 to VB
$518    $18B3   JP       $8B3            ; Jump to 8B3
$51A    $DE6D   DRW      VE, V6, #D      ; Draw 13-byte sprite at VE, V6
$51C    $FB7D   UNKNOWN  FB7D            ; Unknown Fxxx instruction
$51E    $2646   CALL     $646            ; Call subroutine at 646
$520    $3EFF   SE       VE, #FF         ; Skip if VE == 255
$522    $7872   ADD      V8, #72         ; Add 114 to V8
$524    $0B2C   SYS      $B2C            ; System call to B2C
$526    $CA9B   RND      VA, #9B         ; VA = random & 9B
$528    $9B50   SNE      VB, V5          ; Skip if VB != V5
$52A    $B7B8   JP       V0, $7B8        ; Jump to V0 + 7B8
$52C    $0019   SYS      $019            ; System call to 019
$52E    $09E8   SYS      $9E8            ; System call to 9E8
$530    $13FA   JP       $3FA            ; Jump to 3FA
$532    $8503   XOR      V5, V0          ; V5 ^= V0
$534    $5A67   UNKNOWN  $5A67           ; Unknown 5xxx instruction
$536    $7C53   ADD      VC, #53         ; Add 83 to VC
$538    $FE0F   UNKNOWN  FE0F            ; Unknown Fxxx instruction
$53A    $2388   CALL     $388            ; Call subroutine at 388
$53C    $5BB9   UNKNOWN  $5BB9           ; Unknown 5xxx instruction
$53E    $3A04   SE       VA, #04         ; Skip if VA == 4
$540    $6318   LD       V3, #18         ; Load 24 into V3
$542    $1348   JP       $348            ; Jump to 348
$544    $8EDA   UNKNOWN  8EDA            ; Unknown 8xxx instruction
$546    $AFD7   LD       I, $FD7         ; Load FD7 into I
$548    $74DF   ADD      V4, #DF         ; Add 223 to V4
$54A    $B00F   JP       V0, $00F        ; Jump to V0 + 00F
$54C    $8E1D   UNKNOWN  8E1D            ; Unknown 8xxx instruction
$54E    $0CBC   SYS      $CBC            ; System call to CBC
$550    $3045   SE       V0, #45         ; Skip if V0 == 69
$552    $1047   JP       $047            ; Jump to 047
$554    $DC4D   DRW      VC, V4, #D      ; Draw 13-byte sprite at VC, V4
$556    $AC30   LD       I, $C30         ; Load C30 into I
$558    $FE14   UNKNOWN  FE14            ; Unknown Fxxx instruction
$55A    $C1A1   RND      V1, #A1         ; V1 = random & A1
$55C    $6034   LD       V0, #34         ; Load 52 into V0
$55E    $F7FE   UNKNOWN  F7FE            ; Unknown Fxxx instruction
$560    $E1FF   UNKNOWN  $E1FF           ; Unknown Exxx instruction
$562    $49C6   SNE      V9, #C6         ; Skip if V9 != 198
$564    $5657   UNKNOWN  $5657           ; Unknown 5xxx instruction
$566    $9040   SNE      V0, V4          ; Skip if V0 != V4
$568    $45C4   SNE      V5, #C4         ; Skip if V5 != 196
$56A    $092F   SYS      $92F            ; System call to 92F
$56C    $7F9F   ADD      VF, #9F         ; Add 159 to VF
$56E    $9316   UNKNOWN  $9316           ; Unknown 9xxx instruction
$570    $10C3   JP       $0C3            ; Jump to 0C3
$572    $7F9D   ADD      VF, #9D         ; Add 157 to VF
$574    $A293   LD       I, $293         ; Load 293 into I
$576    $9823   UNKNOWN  $9823           ; Unknown 9xxx instruction
$578    $AF7D   LD       I, $F7D         ; Load F7D into I
$57A    $0D60   SYS      $D60            ; System call to D60
$57C    $0489   SYS      $489            ; System call to 489
$57E    $F7D0   UNKNOWN  F7D0            ; Unknown Fxxx instruction
$580    $EB8E   UNKNOWN  $EB8E           ; Unknown Exxx instruction
$582    $4342   SNE      V3, #42         ; Skip if V3 != 66
$584    $3B80   SE       VB, #80         ; Skip if VB == 128
$586    $292F   CALL     $92F            ; Call subroutine at 92F
$588    $A280   LD       I, $280         ; Load 280 into I
$58A    $3CD4   SE       VC, #D4         ; Skip if VC == 212
$58C    $0D44   SYS      $D44            ; System call to D44
$58E    $2973   CALL     $973            ; Call subroutine at 973
$590    $C200   RND      V2, #00         ; V2 = random & 00
$592    $42FC   SNE      V2, #FC         ; Skip if V2 != 252
$594    $B0E5   JP       V0, $0E5        ; Jump to V0 + 0E5
$596    $C9E3   RND      V9, #E3         ; V9 = random & E3
$598    $0BF8   SYS      $BF8            ; System call to BF8
$59A    $2FC8   CALL     $FC8            ; Call subroutine at FC8
$59C    $A5B1   LD       I, $5B1         ; Load 5B1 into I
$59E    $A625   LD       I, $625         ; Load 625 into I
$5A0    $6103   LD       V1, #03         ; Load 3 into V1
$5A2    $268C   CALL     $68C            ; Call subroutine at 68C
$5A4    $2F80   CALL     $F80            ; Call subroutine at F80
$5A6    $BBE0   JP       V0, $BE0        ; Jump to V0 + BE0
$5A8    $1EE0   JP       $EE0            ; Jump to EE0
$5AA    $E29E   SKP      V2              ; Skip if key V2 pressed
$5AC    $861F   UNKNOWN  861F            ; Unknown 8xxx instruction
$5AE    $ED29   UNKNOWN  $ED29           ; Unknown Exxx instruction
$5B0    $BED6   JP       V0, $ED6        ; Jump to V0 + ED6
$5B2    $0B8C   SYS      $B8C            ; System call to B8C
$5B4    $6A08   LD       VA, #08         ; Load 8 into VA
$5B6    $CC0B   RND      VC, #0B         ; VC = random & 0B
$5B8    $40FC   SNE      V0, #FC         ; Skip if V0 != 252
$5BA    $1FD5   JP       $FD5            ; Jump to FD5
$5BC    $4E02   SNE      VE, #02         ; Skip if VE != 2
$5BE    $6038   LD       V0, #38         ; Load 56 into V0
$5C0    $8558   UNKNOWN  8558            ; Unknown 8xxx instruction
$5C2    $596F   UNKNOWN  $596F           ; Unknown 5xxx instruction
$5C4    $9275   UNKNOWN  $9275           ; Unknown 9xxx instruction
$5C6    $6C73   LD       VC, #73         ; Load 115 into VC
$5C8    $1A03   JP       $A03            ; Jump to A03
$5CA    $0A0A   SYS      $A0A            ; System call to A0A
$5CC    $67CE   LD       V7, #CE         ; Load 206 into V7
$5CE    $6225   LD       V2, #25         ; Load 37 into V2
$5D0    $9268   UNKNOWN  $9268           ; Unknown 9xxx instruction
$5D2    $4E25   SNE      VE, #25         ; Skip if VE != 37
$5D4    $FEBE   UNKNOWN  FEBE            ; Unknown Fxxx instruction
$5D6    $565E   UNKNOWN  $565E           ; Unknown 5xxx instruction
$5D8    $7C10   ADD      VC, #10         ; Add 16 to VC
$5DA    $8167   SUBN     V1, V6          ; V1 = V6 - V1, VF = !borrow
$5DC    $3DCB   SE       VD, #CB         ; Skip if VD == 203
$5DE    $208D   CALL     $08D            ; Call subroutine at 08D
$5E0    $7CB5   ADD      VC, #B5         ; Add 181 to VC
$5E2    $CAF6   RND      VA, #F6         ; VA = random & F6
$5E4    $60CA   LD       V0, #CA         ; Load 202 into V0
$5E6    $C37F   RND      V3, #7F         ; V3 = random & 7F
$5E8    $7D0D   ADD      VD, #0D         ; Add 13 to VD
$5EA    $3736   SE       V7, #36         ; Skip if V7 == 54
$5EC    $9622   UNKNOWN  $9622           ; Unknown 9xxx instruction
$5EE    $16F8   JP       $6F8            ; Jump to 6F8
$5F0    $344E   SE       V4, #4E         ; Skip if V4 == 78
$5F2    $F458   UNKNOWN  F458            ; Unknown Fxxx instruction
$5F4    $7893   ADD      V8, #93         ; Add 147 to V8
$5F6    $DAD6   DRW      VA, VD, #6      ; Draw 6-byte sprite at VA, VD
$5F8    $5F6A   UNKNOWN  $5F6A           ; Unknown 5xxx instruction
$5FA    $EA3F   UNKNOWN  $EA3F           ; Unknown Exxx instruction
$5FC    $EB4D   UNKNOWN  $EB4D           ; Unknown Exxx instruction
$5FE    $24BE   CALL     $4BE            ; Call subroutine at 4BE
$600    $2C52   CALL     $C52            ; Call subroutine at C52
$602    $EEB9   UNKNOWN  $EEB9           ; Unknown Exxx instruction
$604    $090E   SYS      $90E            ; System call to 90E
$606    $5459   UNKNOWN  $5459           ; Unknown 5xxx instruction
$608    $253A   CALL     $53A            ; Call subroutine at 53A
$60A    $5D44   UNKNOWN  $5D44           ; Unknown 5xxx instruction
$60C    $C275   RND      V2, #75         ; V2 = random & 75
$60E    $B0D7   JP       V0, $0D7        ; Jump to V0 + 0D7
$610    $1717   JP       $717            ; Jump to 717
$612    $45A3   SNE      V5, #A3         ; Skip if V5 != 163
$614    $0F1D   SYS      $F1D            ; System call to F1D
$616    $51F6   UNKNOWN  $51F6           ; Unknown 5xxx instruction
$618    $652F   LD       V5, #2F         ; Load 47 into V5
$61C    $19E1   JP       $9E1            ; Jump to 9E1
$61E    $1394   JP       $394            ; Jump to 394
$620    $B8D9   JP       V0, $8D9        ; Jump to V0 + 8D9
$622    $CDA0   RND      VD, #A0         ; VD = random & A0
$624    $2C57   CALL     $C57            ; Call subroutine at C57
$626    $980A   UNKNOWN  $980A           ; Unknown 9xxx instruction
$628    $1282   JP       $282            ; Jump to 282
$62A    $0421   SYS      $421            ; System call to 421
$62C    $6CCE   LD       VC, #CE         ; Load 206 into VC
$62E    $2760   CALL     $760            ; Call subroutine at 760
$630    $A628   LD       I, $628         ; Load 628 into I
$632    $FCB0   UNKNOWN  FCB0            ; Unknown Fxxx instruction
$634    $61EC   LD       V1, #EC         ; Load 236 into V1
$636    $7936   ADD      V9, #36         ; Add 54 to V9
$638    $AE18   LD       I, $E18         ; Load E18 into I
$63A    $DB58   DRW      VB, V5, #8      ; Draw 8-byte sprite at VB, V5
$63C    $7F2E   ADD      VF, #2E         ; Add 46 to VF
$63E    $3529   SE       V5, #29         ; Skip if V5 == 41
$640    $B467   JP       V0, $467        ; Jump to V0 + 467
$642    $4E83   SNE      VE, #83         ; Skip if VE != 131
$644    $AB9F   LD       I, $B9F         ; Load B9F into I
$646    $3701   SE       V7, #01         ; Skip if V7 == 1
$648    $C456   RND      V4, #56         ; V4 = random & 56
$64A    $99F5   UNKNOWN  $99F5           ; Unknown 9xxx instruction
$64C    $79F6   ADD      V9, #F6         ; Add 246 to V9
$64E    $723C   ADD      V2, #3C         ; Add 60 to V2
$650    $14DC   JP       $4DC            ; Jump to 4DC
$652    $A56F   LD       I, $56F         ; Load 56F into I
$654    $DE83   DRW      VE, V8, #3      ; Draw 3-byte sprite at VE, V8
$656    $5AE5   UNKNOWN  $5AE5           ; Unknown 5xxx instruction
$658    $FF5B   UNKNOWN  FF5B            ; Unknown Fxxx instruction
$65A    $CBB6   RND      VB, #B6         ; VB = random & B6
$65C    $01B0   SYS      $1B0            ; System call to 1B0
$65E    $DA52   DRW      VA, V5, #2      ; Draw 2-byte sprite at VA, V5
$660    $A66D   LD       I, $66D         ; Load 66D into I
$662    $27EF   CALL     $7EF            ; Call subroutine at 7EF
$664    $9906   UNKNOWN  $9906           ; Unknown 9xxx instruction
$666    $FC78   UNKNOWN  FC78            ; Unknown Fxxx instruction
$668    $92FD   UNKNOWN  $92FD           ; Unknown 9xxx instruction
$66A    $2DBD   CALL     $DBD            ; Call subroutine at DBD
$66C    $DEA1   DRW      VE, VA, #1      ; Draw 1-byte sprite at VE, VA
$66E    $749C   ADD      V4, #9C         ; Add 156 to V4
$670    $6281   LD       V2, #81         ; Load 129 into V2
$672    $BA59   JP       V0, $A59        ; Jump to V0 + A59
$674    $0D17   SYS      $D17            ; System call to D17
$676    $9F2B   UNKNOWN  $9F2B           ; Unknown 9xxx instruction
$678    $0DD2   SYS      $DD2            ; System call to DD2
$67A    $ECC7   UNKNOWN  $ECC7           ; Unknown Exxx instruction
$67C    $8776   SHR      V7              ; V7 >>= 1, VF = LSB
$67E    $44F3   SNE      V4, #F3         ; Skip if V4 != 243
$680    $7C54   ADD      VC, #54         ; Add 84 to VC
$682    $3F0E   SE       VF, #0E         ; Skip if VF == 14
$684    $C3C9   RND      V3, #C9         ; V3 = random & C9
$686    $1E30   JP       $E30            ; Jump to E30
$688    $27E2   CALL     $7E2            ; Call subroutine at 7E2
$68A    $BEDC   JP       V0, $EDC        ; Jump to V0 + EDC
$68C    $21FF   CALL     $1FF            ; Call subroutine at 1FF
$68E    $B7A3   JP       V0, $7A3        ; Jump to V0 + 7A3
$690    $DE01   DRW      VE, V0, #1      ; Draw 1-byte sprite at VE, V0
$692    $CE6D   RND      VE, #6D         ; VE = random & 6D
$694    $7D34   ADD      VD, #34         ; Add 52 to VD
$696    $B556   JP       V0, $556        ; Jump to V0 + 556
$698    $E68F   UNKNOWN  $E68F           ; Unknown Exxx instruction
$69A    $1207   JP       $207            ; Jump to 207
$69C    $EFC5   UNKNOWN  $EFC5           ; Unknown Exxx instruction
$69E    $C377   RND      V3, #77         ; V3 = random & 77
$6A0    $083B   SYS      $83B            ; System call to 83B
$6A2    $44A2   SNE      V4, #A2         ; Skip if V4 != 162
$6A4    $52BE   UNKNOWN  $52BE           ; Unknown 5xxx instruction
$6A6    $029F   SYS      $29F            ; System call to 29F
$6A8    $FFAD   UNKNOWN  FFAD            ; Unknown Fxxx instruction
$6AA    $399C   SE       V9, #9C         ; Skip if V9 == 156
$6AC    $5F00   SE       VF, V0          ; Skip if VF == V0
$6AE    $3C6D   SE       VC, #6D         ; Skip if VC == 109
$6B0    $D25B   DRW      V2, V5, #B      ; Draw 11-byte sprite at V2, V5
$6B2    $0738   SYS      $738            ; System call to 738
$6B4    $1BA7   JP       $BA7            ; Jump to BA7
$6B6    $5414   UNKNOWN  $5414           ; Unknown 5xxx instruction
$6B8    $E2D8   UNKNOWN  $E2D8           ; Unknown Exxx instruction
$6BA    $EA8A   UNKNOWN  $EA8A           ; Unknown Exxx instruction
$6BC    $F6FA   UNKNOWN  F6FA            ; Unknown Fxxx instruction
$6BE    $9592   UNKNOWN  $9592           ; Unknown 9xxx instruction
$6C0    $B549   JP       V0, $549        ; Jump to V0 + 549
$6C2    $4FF8   SNE      VF, #F8         ; Skip if VF != 248
$6C4    $D23C   DRW      V2, V3, #C      ; Draw 12-byte sprite at V2, V3
$6C6    $1472   JP       $472            ; Jump to 472
$6C8    $7C06   ADD      VC, #06         ; Add 6 to VC
$6CA    $7468   ADD      V4, #68         ; Add 104 to V4
$6CC    $5F3C   UNKNOWN  $5F3C           ; Unknown 5xxx instruction
$6CE    $C61F   RND      V6, #1F         ; V6 = random & 1F
$6D0    $131D   JP       $31D            ; Jump to 31D
$6D2    $C0CD   RND      V0, #CD         ; V0 = random & CD
$6D4    $70F3   ADD      V0, #F3         ; Add 243 to V0
$6D6    $6DF4   LD       VD, #F4         ; Load 244 into VD
$6D8    $CE5F   RND      VE, #5F         ; VE = random & 5F
$6DA    $EAF4   UNKNOWN  $EAF4           ; Unknown Exxx instruction
$6DC    $ADCF   LD       I, $DCF         ; Load DCF into I
$6DE    $7E64   ADD      VE, #64         ; Add 100 to VE
$6E0    $6B31   LD       VB, #31         ; Load 49 into VB
$6E2    $3EF2   SE       VE, #F2         ; Skip if VE == 242
$6E4    $D5CF   DRW      V5, VC, #F      ; Draw 15-byte sprite at V5, VC
$6E6    $C74F   RND      V7, #4F         ; V7 = random & 4F
$6E8    $513E   UNKNOWN  $513E           ; Unknown 5xxx instruction
$6EA    $CE58   RND      VE, #58         ; VE = random & 58
$6EC    $01A5   SYS      $1A5            ; System call to 1A5
$6EE    $4D37   SNE      VD, #37         ; Skip if VD != 55
$6F0    $07B8   SYS      $7B8            ; System call to 7B8
$6F2    $67ED   LD       V7, #ED         ; Load 237 into V7
$6F4    $5F03   UNKNOWN  $5F03           ; Unknown 5xxx instruction
$6F6    $F7D0   UNKNOWN  F7D0            ; Unknown Fxxx instruction
$6F8    $C942   RND      V9, #42         ; V9 = random & 42
$6FA    $81AF   UNKNOWN  81AF            ; Unknown 8xxx instruction
$6FC    $C53D   RND      V5, #3D         ; V5 = random & 3D
$6FE    $13E3   JP       $3E3            ; Jump to 3E3
$700    $D42E   DRW      V4, V2, #E      ; Draw 14-byte sprite at V4, V2
$702    $160B   JP       $60B            ; Jump to 60B
$704    $4130   SNE      V1, #30         ; Skip if V1 != 48
$706    $DBB8   DRW      VB, VB, #8      ; Draw 8-byte sprite at VB, VB
$708    $8BC0   LD       VB, VC          ; VB = VC
$70A    $2CBA   CALL     $CBA            ; Call subroutine at CBA
$70C    $823F   UNKNOWN  823F            ; Unknown 8xxx instruction
$70E    $FDEA   UNKNOWN  FDEA            ; Unknown Fxxx instruction
$710    $DC16   DRW      VC, V1, #6      ; Draw 6-byte sprite at VC, V1
$712    $38EF   SE       V8, #EF         ; Skip if V8 == 239
$714    $62FB   LD       V2, #FB         ; Load 251 into V2
$716    $092B   SYS      $92B            ; System call to 92B
$718    $9A5D   UNKNOWN  $9A5D           ; Unknown 9xxx instruction
$71A    $17E4   JP       $7E4            ; Jump to 7E4
$71C    $1D61   JP       $D61            ; Jump to D61
$71E    $F365   LD       V3, [I]         ; Load V0-V3 from I
$720    $B955   JP       V0, $955        ; Jump to V0 + 955
$722    $4649   SNE      V6, #49         ; Skip if V6 != 73
$724    $6819   LD       V8, #19         ; Load 25 into V8
$726    $7508   ADD      V5, #08         ; Add 8 to V5
$728    $03FC   SYS      $3FC            ; System call to 3FC
$72A    $EB7C   UNKNOWN  $EB7C           ; Unknown Exxx instruction
$72C    $F7DC   UNKNOWN  F7DC            ; Unknown Fxxx instruction
$72E    $46BD   SNE      V6, #BD         ; Skip if V6 != 189
$730    $51C8   UNKNOWN  $51C8           ; Unknown 5xxx instruction
$732    $AA3C   LD       I, $A3C         ; Load A3C into I
$734    $D2DE   DRW      V2, VD, #E      ; Draw 14-byte sprite at V2, VD
$736    $7572   ADD      V5, #72         ; Add 114 to V5
$738    $94AE   UNKNOWN  $94AE           ; Unknown 9xxx instruction
$73A    $D26B   DRW      V2, V6, #B      ; Draw 11-byte sprite at V2, V6
$73C    $2061   CALL     $061            ; Call subroutine at 061
$73E    $4618   SNE      V6, #18         ; Skip if V6 != 24
$740    $D8C0   DRW      V8, VC, #0      ; Draw 0-byte sprite at V8, VC
$742    $69D8   LD       V9, #D8         ; Load 216 into V9
$744    $C5D4   RND      V5, #D4         ; V5 = random & D4
$746    $41EA   SNE      V1, #EA         ; Skip if V1 != 234
$748    $F16F   UNKNOWN  F16F            ; Unknown Fxxx instruction
$74A    $05B1   SYS      $5B1            ; System call to 5B1
$74C    $E913   UNKNOWN  $E913           ; Unknown Exxx instruction
$74E    $B7BA   JP       V0, $7BA        ; Jump to V0 + 7BA
$750    $917F   UNKNOWN  $917F           ; Unknown 9xxx instruction
$752    $BD4B   JP       V0, $D4B        ; Jump to V0 + D4B
$754    $660B   LD       V6, #0B         ; Load 11 into V6
$756    $1600   JP       $600            ; Jump to 600
$758    $9DC0   SNE      VD, VC          ; Skip if VD != VC
$75A    $B99A   JP       V0, $99A        ; Jump to V0 + 99A
$75C    $8961   OR       V9, V6          ; V9 |= V6
$75E    $2A77   CALL     $A77            ; Call subroutine at A77
$760    $BBC6   JP       V0, $BC6        ; Jump to V0 + BC6
$762    $003E   SYS      $03E            ; System call to 03E
$764    $A0F0   LD       I, $0F0         ; Load 0F0 into I
$766    $E941   UNKNOWN  $E941           ; Unknown Exxx instruction
$768    $AEC5   LD       I, $EC5         ; Load EC5 into I
$76A    $42A2   SNE      V2, #A2         ; Skip if V2 != 162
$76C    $7FD4   ADD      VF, #D4         ; Add 212 to VF
$76E    $58B1   UNKNOWN  $58B1           ; Unknown 5xxx instruction
$770    $3B0C   SE       VB, #0C         ; Skip if VB == 12
$772    $2FF4   CALL     $FF4            ; Call subroutine at FF4
$774    $4F91   SNE      VF, #91         ; Skip if VF != 145
$776    $B761   JP       V0, $761        ; Jump to V0 + 761
$778    $D21F   DRW      V2, V1, #F      ; Draw 15-byte sprite at V2, V1
$77A    $D2A5   DRW      V2, VA, #5      ; Draw 5-byte sprite at V2, VA
$77C    $13B7   JP       $3B7            ; Jump to 3B7
$77E    $AB72   LD       I, $B72         ; Load B72 into I
$780    $3731   SE       V7, #31         ; Skip if V7 == 49
$782    $2465   CALL     $465            ; Call subroutine at 465
$784    $0EDA   SYS      $EDA            ; System call to EDA
$786    $91D5   UNKNOWN  $91D5           ; Unknown 9xxx instruction
$788    $7E4D   ADD      VE, #4D         ; Add 77 to VE
$78A    $09AB   SYS      $9AB            ; System call to 9AB
$78C    $CD09   RND      VD, #09         ; VD = random & 09
$78E    $BD57   JP       V0, $D57        ; Jump to V0 + D57
$790    $8E34   ADD      VE, V3          ; VE += V3, VF = carry
$792    $C1CD   RND      V1, #CD         ; V1 = random & CD
$794    $890C   UNKNOWN  890C            ; Unknown 8xxx instruction
$796    $0B72   SYS      $B72            ; System call to B72
$798    $E043   UNKNOWN  $E043           ; Unknown Exxx instruction
$79A    $765A   ADD      V6, #5A         ; Add 90 to V6
$79C    $8B7A   UNKNOWN  8B7A            ; Unknown 8xxx instruction
$79E    $B1EC   JP       V0, $1EC        ; Jump to V0 + 1EC
$7A0    $24BC   CALL     $4BC            ; Call subroutine at 4BC
$7A2    $7D63   ADD      VD, #63         ; Add 99 to VD
$7A4    $3C36   SE       VC, #36         ; Skip if VC == 54
$7A6    $D173   DRW      V1, V7, #3      ; Draw 3-byte sprite at V1, V7
$7A8    $B5C0   JP       V0, $5C0        ; Jump to V0 + 5C0
$7AA    $003A   SYS      $03A            ; System call to 03A
$7AC    $76D3   ADD      V6, #D3         ; Add 211 to V6
$7AE    $1FCC   JP       $FCC            ; Jump to FCC
$7B0    $31BF   SE       V1, #BF         ; Skip if V1 == 191
$7B2    $D401   DRW      V4, V0, #1      ; Draw 1-byte sprite at V4, V0
$7B4    $0B86   SYS      $B86            ; System call to B86
$7B6    $E6B2   UNKNOWN  $E6B2           ; Unknown Exxx instruction
$7B8    $F83F   UNKNOWN  F83F            ; Unknown Fxxx instruction
$7BA    $1A3A   JP       $A3A            ; Jump to A3A
$7BC    $8453   XOR      V4, V5          ; V4 ^= V5
$7BE    $C077   RND      V0, #77         ; V0 = random & 77
$7C0    $157E   JP       $57E            ; Jump to 57E
$7C2    $39F6   SE       V9, #F6         ; Skip if V9 == 246
$7C4    $4242   SNE      V2, #42         ; Skip if V2 != 66
$7C6    $9B0C   UNKNOWN  $9B0C           ; Unknown 9xxx instruction
$7C8    $8A21   OR       VA, V2          ; VA |= V2
$7CA    $95EC   UNKNOWN  $95EC           ; Unknown 9xxx instruction
$7CC    $7A5C   ADD      VA, #5C         ; Add 92 to VA
$7CE    $C60A   RND      V6, #0A         ; V6 = random & 0A
$7D0    $7813   ADD      V8, #13         ; Add 19 to V8
$7D2    $ADFE   LD       I, $DFE         ; Load DFE into I
$7D4    $D04D   DRW      V0, V4, #D      ; Draw 13-byte sprite at V0, V4
$7D6    $69E6   LD       V9, #E6         ; Load 230 into V9
$7D8    $ABFF   LD       I, $BFF         ; Load BFF into I
$7DA    $822C   UNKNOWN  822C            ; Unknown 8xxx instruction
$7DC    $C3E8   RND      V3, #E8         ; V3 = random & E8
$7DE    $B62D   JP       V0, $62D        ; Jump to V0 + 62D
$7E0    $E527   UNKNOWN  $E527           ; Unknown Exxx instruction
$7E2    $EF0B   UNKNOWN  $EF0B           ; Unknown Exxx instruction
$7E4    $ADAF   LD       I, $DAF         ; Load DAF into I
$7E6    $4EE6   SNE      VE, #E6         ; Skip if VE != 230
$7E8    $E89B   UNKNOWN  $E89B           ; Unknown Exxx instruction
$7EA    $93FD   UNKNOWN  $93FD           ; Unknown 9xxx instruction
$7EC    $2742   CALL     $742            ; Call subroutine at 742
$7EE    $B661   JP       V0, $661        ; Jump to V0 + 661
$7F0    $FF6B   UNKNOWN  FF6B            ; Unknown Fxxx instruction
$7F2    $47D2   SNE      V7, #D2         ; Skip if V7 != 210
$7F4    $E419   UNKNOWN  $E419           ; Unknown Exxx instruction
$7F6    $4B5D   SNE      VB, #5D         ; Skip if VB != 93
$7F8    $9F55   UNKNOWN  $9F55           ; Unknown 9xxx instruction
$7FA    $AE2F   LD       I, $E2F         ; Load E2F into I
$7FC    $A282   LD       I, $282         ; Load 282 into I
$7FE    $9599   UNKNOWN  $9599           ; Unknown 9xxx instruction
$800    $195A   JP       $95A            ; Jump to 95A
$802    $0C1F   SYS      $C1F            ; System call to C1F
$804    $733E   ADD      V3, #3E         ; Add 62 to V3
$806    $1BE1   JP       $BE1            ; Jump to BE1
$808    $86FA   UNKNOWN  86FA            ; Unknown 8xxx instruction
$80A    $08DA   SYS      $8DA            ; System call to 8DA
$80C    $5329   UNKNOWN  $5329           ; Unknown 5xxx instruction
$80E    $193D   JP       $93D            ; Jump to 93D
$810    $E423   UNKNOWN  $E423           ; Unknown Exxx instruction
$812    $4CDD   SNE      VC, #DD         ; Skip if VC != 221
$814    $A00F   LD       I, $00F         ; Load 00F into I
$816    $0F2E   SYS      $F2E            ; System call to F2E
$818    $58DE   UNKNOWN  $58DE           ; Unknown 5xxx instruction
$81A    $02CB   SYS      $2CB            ; System call to 2CB
$81C    $6E14   LD       VE, #14         ; Load 20 into VE
$81E    $5852   UNKNOWN  $5852           ; Unknown 5xxx instruction
$820    $2B96   CALL     $B96            ; Call subroutine at B96
$822    $0941   SYS      $941            ; System call to 941
$824    $A294   LD       I, $294         ; Load 294 into I
$826    $7F36   ADD      VF, #36         ; Add 54 to VF
$828    $73EB   ADD      V3, #EB         ; Add 235 to V3
$82A    $E09C   UNKNOWN  $E09C           ; Unknown Exxx instruction
$82C    $5DDF   UNKNOWN  $5DDF           ; Unknown 5xxx instruction
$82E    $5DAF   UNKNOWN  $5DAF           ; Unknown 5xxx instruction
$830    $237C   CALL     $37C            ; Call subroutine at 37C
$832    $4118   SNE      V1, #18         ; Skip if V1 != 24
$834    $6DA6   LD       VD, #A6         ; Load 166 into VD
$836    $E4BB   UNKNOWN  $E4BB           ; Unknown Exxx instruction
$838    $0CC4   SYS      $CC4            ; System call to CC4
$83A    $ED32   UNKNOWN  $ED32           ; Unknown Exxx instruction
$83C    $4CEC   SNE      VC, #EC         ; Skip if VC != 236
$83E    $F35B   UNKNOWN  F35B            ; Unknown Fxxx instruction
$840    $0F47   SYS      $F47            ; System call to F47
$842    $7F4E   ADD      VF, #4E         ; Add 78 to VF
$844    $6E30   LD       VE, #30         ; Load 48 into VE
$846    $D643   DRW      V6, V4, #3      ; Draw 3-byte sprite at V6, V4
$848    $43C7   SNE      V3, #C7         ; Skip if V3 != 199
$84A    $2CFE   CALL     $CFE            ; Call subroutine at CFE
$84C    $10F1   JP       $0F1            ; Jump to 0F1
$84E    $7E98   ADD      VE, #98         ; Add 152 to VE
$850    $65D2   LD       V5, #D2         ; Load 210 into V5
$852    $06DB   SYS      $6DB            ; System call to 6DB
$854    $3146   SE       V1, #46         ; Skip if V1 == 70
$856    $289B   CALL     $89B            ; Call subroutine at 89B
$858    $20B6   CALL     $0B6            ; Call subroutine at 0B6
$85A    $59C6   UNKNOWN  $59C6           ; Unknown 5xxx instruction
$85C    $E634   UNKNOWN  $E634           ; Unknown Exxx instruction
$85E    $0495   SYS      $495            ; System call to 495
$860    $D69A   DRW      V6, V9, #A      ; Draw 10-byte sprite at V6, V9
$862    $0CAB   SYS      $CAB            ; System call to CAB
$864    $7E1A   ADD      VE, #1A         ; Add 26 to VE
$866    $C2D1   RND      V2, #D1         ; V2 = random & D1
$868    $378A   SE       V7, #8A         ; Skip if V7 == 138
$86A    $06B0   SYS      $6B0            ; System call to 6B0
$86C    $E2CE   UNKNOWN  $E2CE           ; Unknown Exxx instruction
$86E    $FA68   UNKNOWN  FA68            ; Unknown Fxxx instruction
$870    $147F   JP       $47F            ; Jump to 47F
$872    $9C43   UNKNOWN  $9C43           ; Unknown 9xxx instruction
$874    $52B0   SE       V2, VB          ; Skip if V2 == VB
$876    $A7FD   LD       I, $7FD         ; Load 7FD into I
$878    $ADA1   LD       I, $DA1         ; Load DA1 into I
$87A    $70E2   ADD      V0, #E2         ; Add 226 to V0
$87C    $78EF   ADD      V8, #EF         ; Add 239 to V8
$87E    $A108   LD       I, $108         ; Load 108 into I
$880    $7FCD   ADD      VF, #CD         ; Add 205 to VF
$882    $8216   SHR      V2              ; V2 >>= 1, VF = LSB
$884    $4AF5   SNE      VA, #F5         ; Skip if VA != 245
$886    $AA34   LD       I, $A34         ; Load A34 into I
$888    $A174   LD       I, $174         ; Load 174 into I
$88A    $EFF8   UNKNOWN  $EFF8           ; Unknown Exxx instruction
$88C    $4B89   SNE      VB, #89         ; Skip if VB != 137
$88E    $CF86   RND      VF, #86         ; VF = random & 86
$890    $298B   CALL     $98B            ; Call subroutine at 98B
$892    $49C2   SNE      V9, #C2         ; Skip if V9 != 194
$894    $85B4   ADD      V5, VB          ; V5 += VB, VF = carry
$896    $BF47   JP       V0, $F47        ; Jump to V0 + F47
$898    $F272   UNKNOWN  F272            ; Unknown Fxxx instruction
$89A    $25CD   CALL     $5CD            ; Call subroutine at 5CD
$89C    $319A   SE       V1, #9A         ; Skip if V1 == 154
$89E    $2385   CALL     $385            ; Call subroutine at 385
$8A0    $8061   OR       V0, V6          ; V0 |= V6
$8A2    $0B15   SYS      $B15            ; System call to B15
$8A4    $3FB4   SE       VF, #B4         ; Skip if VF == 180
$8A6    $8976   SHR      V9              ; V9 >>= 1, VF = LSB
$8A8    $0272   SYS      $272            ; System call to 272
$8AA    $91AE   UNKNOWN  $91AE           ; Unknown 9xxx instruction
$8AC    $388B   SE       V8, #8B         ; Skip if V8 == 139
$8AE    $EA10   UNKNOWN  $EA10           ; Unknown Exxx instruction
$8B0    $F3EA   UNKNOWN  F3EA            ; Unknown Fxxx instruction
$8B2    $D659   DRW      V6, V5, #9      ; Draw 9-byte sprite at V6, V5
$8B4    $0B4C   SYS      $B4C            ; System call to B4C
$8B6    $B7C7   JP       V0, $7C7        ; Jump to V0 + 7C7
$8B8    $67DB   LD       V7, #DB         ; Load 219 into V7
$8BA    $3C05   SE       VC, #05         ; Skip if VC == 5
$8BC    $33DF   SE       V3, #DF         ; Skip if V3 == 223
$8BE    $73C4   ADD      V3, #C4         ; Add 196 to V3
$8C0    $AF76   LD       I, $F76         ; Load F76 into I
$8C2    $D479   DRW      V4, V7, #9      ; Draw 9-byte sprite at V4, V7
$8C4    $8B38   UNKNOWN  8B38            ; Unknown 8xxx instruction
$8C6    $DDE1   DRW      VD, VE, #1      ; Draw 1-byte sprite at VD, VE
$8C8    $DF06   DRW      VF, V0, #6      ; Draw 6-byte sprite at VF, V0
$8CA    $3569   SE       V5, #69         ; Skip if V5 == 105
$8CC    $1F1D   JP       $F1D            ; Jump to F1D
$8CE    $A43A   LD       I, $43A         ; Load 43A into I
$8D0    $4829   SNE      V8, #29         ; Skip if V8 != 41
$8D2    $CC12   RND      VC, #12         ; VC = random & 12
$8D4    $1D8E   JP       $D8E            ; Jump to D8E
$8D6    $F79E   UNKNOWN  F79E            ; Unknown Fxxx instruction
$8D8    $8E41   OR       VE, V4          ; VE |= V4
$8DA    $79ED   ADD      V9, #ED         ; Add 237 to V9
$8DC    $8634   ADD      V6, V3          ; V6 += V3, VF = carry
$8DE    $0EC3   SYS      $EC3            ; System call to EC3
$8E0    $55C2   UNKNOWN  $55C2           ; Unknown 5xxx instruction
$8E2    $98CB   UNKNOWN  $98CB           ; Unknown 9xxx instruction
$8E4    $B2E1   JP       V0, $2E1        ; Jump to V0 + 2E1
$8E6    $E17A   UNKNOWN  $E17A           ; Unknown Exxx instruction
$8E8    $8B6F   UNKNOWN  8B6F            ; Unknown 8xxx instruction
$8EA    $9FBE   UNKNOWN  $9FBE           ; Unknown 9xxx instruction
$8EC    $4DBC   SNE      VD, #BC         ; Skip if VD != 188
$8EE    $53C1   UNKNOWN  $53C1           ; Unknown 5xxx instruction
$8F0    $BB13   JP       V0, $B13        ; Jump to V0 + B13
$8F2    $30F9   SE       V0, #F9         ; Skip if V0 == 249
$8F4    $1109   JP       $109            ; Jump to 109
$8F6    $5EA5   UNKNOWN  $5EA5           ; Unknown 5xxx instruction
$8F8    $1E6E   JP       $E6E            ; Jump to E6E
$8FA    $F380   UNKNOWN  F380            ; Unknown Fxxx instruction
$8FC    $07A1   SYS      $7A1            ; System call to 7A1
$8FE    $FFC9   UNKNOWN  FFC9            ; Unknown Fxxx instruction
$900    $9652   UNKNOWN  $9652           ; Unknown 9xxx instruction
$902    $C441   RND      V4, #41         ; V4 = random & 41
$904    $F8DC   UNKNOWN  F8DC            ; Unknown Fxxx instruction
$906    $D0F4   DRW      V0, VF, #4      ; Draw 4-byte sprite at V0, VF
$908    $5672   UNKNOWN  $5672           ; Unknown 5xxx instruction
$90A    $4AF4   SNE      VA, #F4         ; Skip if VA != 244
$90C    $709B   ADD      V0, #9B         ; Add 155 to V0
$90E    $044C   SYS      $44C            ; System call to 44C
$910    $EFDC   UNKNOWN  $EFDC           ; Unknown Exxx instruction
$912    $1BC7   JP       $BC7            ; Jump to BC7
$914    $9206   UNKNOWN  $9206           ; Unknown 9xxx instruction
$916    $A4F9   LD       I, $4F9         ; Load 4F9 into I
$918    $8B91   OR       VB, V9          ; VB |= V9
$91A    $5FFA   UNKNOWN  $5FFA           ; Unknown 5xxx instruction
$91C    $6419   LD       V4, #19         ; Load 25 into V4
$91E    $C84C   RND      V8, #4C         ; V8 = random & 4C
$920    $12F0   JP       $2F0            ; Jump to 2F0
$922    $E948   UNKNOWN  $E948           ; Unknown Exxx instruction
$924    $543B   UNKNOWN  $543B           ; Unknown 5xxx instruction
$926    $ECCC   UNKNOWN  $ECCC           ; Unknown Exxx instruction
$928    $011E   SYS      $11E            ; System call to 11E
$92A    $4E72   SNE      VE, #72         ; Skip if VE != 114
$92C    $AD03   LD       I, $D03         ; Load D03 into I
$92E    $989C   UNKNOWN  $989C           ; Unknown 9xxx instruction
$930    $8E0B   UNKNOWN  8E0B            ; Unknown 8xxx instruction
$932    $6923   LD       V9, #23         ; Load 35 into V9
$934    $98F6   UNKNOWN  $98F6           ; Unknown 9xxx instruction
$936    $B1AD   JP       V0, $1AD        ; Jump to V0 + 1AD
$938    $A96C   LD       I, $96C         ; Load 96C into I
$93A    $7ED0   ADD      VE, #D0         ; Add 208 to VE
$93C    $3F11   SE       VF, #11         ; Skip if VF == 17
$93E    $CA92   RND      VA, #92         ; VA = random & 92
$940    $F821   UNKNOWN  F821            ; Unknown Fxxx instruction
$942    $3D5D   SE       VD, #5D         ; Skip if VD == 93
$944    $54E2   UNKNOWN  $54E2           ; Unknown 5xxx instruction
$946    $0E33   SYS      $E33            ; System call to E33
$948    $19ED   JP       $9ED            ; Jump to 9ED
$94A    $7ED5   ADD      VE, #D5         ; Add 213 to VE
$94C    $AF89   LD       I, $F89         ; Load F89 into I
$94E    $7FA0   ADD      VF, #A0         ; Add 160 to VF
$950    $0D19   SYS      $D19            ; System call to D19
$952    $524D   UNKNOWN  $524D           ; Unknown 5xxx instruction
$954    $19D1   JP       $9D1            ; Jump to 9D1
$956    $E705   UNKNOWN  $E705           ; Unknown Exxx instruction
$958    $6107   LD       V1, #07         ; Load 7 into V1
$95A    $44C2   SNE      V4, #C2         ; Skip if V4 != 194
$95C    $B16A   JP       V0, $16A        ; Jump to V0 + 16A
$95E    $497A   SNE      V9, #7A         ; Skip if V9 != 122
$960    $0824   SYS      $824            ; System call to 824
$962    $F870   UNKNOWN  F870            ; Unknown Fxxx instruction
$964    $01C1   SYS      $1C1            ; System call to 1C1
$966    $1D88   JP       $D88            ; Jump to D88
$968    $7083   ADD      V0, #83         ; Add 131 to V0
$96A    $1DEB   JP       $DEB            ; Jump to DEB
$96C    $88E9   UNKNOWN  88E9            ; Unknown 8xxx instruction
$96E    $081A   SYS      $81A            ; System call to 81A
$970    $B8A6   JP       V0, $8A6        ; Jump to V0 + 8A6
$972    $F56C   UNKNOWN  F56C            ; Unknown Fxxx instruction
$974    $9E8D   UNKNOWN  $9E8D           ; Unknown 9xxx instruction
$976    $0816   SYS      $816            ; System call to 816
$978    $1F99   JP       $F99            ; Jump to F99
$97A    $A49A   LD       I, $49A         ; Load 49A into I
$97C    $BF11   JP       V0, $F11        ; Jump to V0 + F11
$97E    $4841   SNE      V8, #41         ; Skip if V8 != 65
$980    $D9BC   DRW      V9, VB, #C      ; Draw 12-byte sprite at V9, VB
$982    $B4EF   JP       V0, $4EF        ; Jump to V0 + 4EF
$984    $E75A   UNKNOWN  $E75A           ; Unknown Exxx instruction
$986    $237E   CALL     $37E            ; Call subroutine at 37E
$988    $D5E4   DRW      V5, VE, #4      ; Draw 4-byte sprite at V5, VE
$98A    $A57C   LD       I, $57C         ; Load 57C into I
$98C    $F818   LD       ST, V8          ; Sound timer = V8
$98E    $A153   LD       I, $153         ; Load 153 into I
$990    $B7A0   JP       V0, $7A0        ; Jump to V0 + 7A0
$992    $4EB5   SNE      VE, #B5         ; Skip if VE != 181
$994    $7899   ADD      V8, #99         ; Add 153 to V8
$996    $1063   JP       $063            ; Jump to 063
$998    $FC9D   UNKNOWN  FC9D            ; Unknown Fxxx instruction
$99A    $94B8   UNKNOWN  $94B8           ; Unknown 9xxx instruction
$99C    $DCB4   DRW      VC, VB, #4      ; Draw 4-byte sprite at VC, VB
$99E    $B59D   JP       V0, $59D        ; Jump to V0 + 59D
$9A0    $9375   UNKNOWN  $9375           ; Unknown 9xxx instruction
$9A2    $4BA2   SNE      VB, #A2         ; Skip if VB != 162
$9A4    $395B   SE       V9, #5B         ; Skip if V9 == 91
$9A6    $F12A   UNKNOWN  F12A            ; Unknown Fxxx instruction
$9A8    $FD49   UNKNOWN  FD49            ; Unknown Fxxx instruction
$9AA    $A47E   LD       I, $47E         ; Load 47E into I
$9AC    $6D81   LD       VD, #81         ; Load 129 into VD
$9AE    $CE1D   RND      VE, #1D         ; VE = random & 1D
$9B0    $8C5C   UNKNOWN  8C5C            ; Unknown 8xxx instruction
$9B2    $5997   UNKNOWN  $5997           ; Unknown 5xxx instruction
$9B4    $4C0B   SNE      VC, #0B         ; Skip if VC != 11
$9B6    $DE8A   DRW      VE, V8, #A      ; Draw 10-byte sprite at VE, V8
$9B8    $6D75   LD       VD, #75         ; Load 117 into VD
$9BA    $8E6D   UNKNOWN  8E6D            ; Unknown 8xxx instruction
$9BC    $0950   SYS      $950            ; System call to 950
$9BE    $A3E6   LD       I, $3E6         ; Load 3E6 into I
$9C0    $B1E2   JP       V0, $1E2        ; Jump to V0 + 1E2
$9C2    $20B4   CALL     $0B4            ; Call subroutine at 0B4
$9C4    $4EE9   SNE      VE, #E9         ; Skip if VE != 233
$9C6    $A188   LD       I, $188         ; Load 188 into I
$9C8    $7878   ADD      V8, #78         ; Add 120 to V8
$9CA    $EF66   UNKNOWN  $EF66           ; Unknown Exxx instruction
$9CC    $57A3   UNKNOWN  $57A3           ; Unknown 5xxx instruction
$9CE    $AC32   LD       I, $C32         ; Load C32 into I
$9D0    $7A76   ADD      VA, #76         ; Add 118 to VA
$9D2    $BD33   JP       V0, $D33        ; Jump to V0 + D33
$9D4    $A884   LD       I, $884         ; Load 884 into I
$9D6    $AA83   LD       I, $A83         ; Load A83 into I
$9D8    $D170   DRW      V1, V7, #0      ; Draw 0-byte sprite at V1, V7
$9DA    $67E2   LD       V7, #E2         ; Load 226 into V7
$9DC    $AD70   LD       I, $D70         ; Load D70 into I
$9DE    $2930   CALL     $930            ; Call subroutine at 930
$9E0    $FB0C   UNKNOWN  FB0C            ; Unknown Fxxx instruction
$9E2    $1634   JP       $634            ; Jump to 634
$9E4    $BF84   JP       V0, $F84        ; Jump to V0 + F84
$9E6    $8038   UNKNOWN  8038            ; Unknown 8xxx instruction
$9E8    $DB25   DRW      VB, V2, #5      ; Draw 5-byte sprite at VB, V2
$9EA    $7B57   ADD      VB, #57         ; Add 87 to VB
$9EC    $2C51   CALL     $C51            ; Call subroutine at C51
$9EE    $4E9C   SNE      VE, #9C         ; Skip if VE != 156
$9F0    $8A90   LD       VA, V9          ; VA = V9
$9F2    $680E   LD       V8, #0E         ; Load 14 into V8
$9F4    $882C   UNKNOWN  882C            ; Unknown 8xxx instruction
$9F6    $D1DD   DRW      V1, VD, #D      ; Draw 13-byte sprite at V1, VD
$9F8    $B814   JP       V0, $814        ; Jump to V0 + 814
$9FA    $B963   JP       V0, $963        ; Jump to V0 + 963
$9FC    $CA0A   RND      VA, #0A         ; VA = random & 0A
$9FE    $9D56   UNKNOWN  $9D56           ; Unknown 9xxx instruction
$A00    $0575   SYS      $575            ; System call to 575
$A02    $8D43   XOR      VD, V4          ; VD ^= V4
$A04    $A5F8   LD       I, $5F8         ; Load 5F8 into I
$A06    $D17F   DRW      V1, V7, #F      ; Draw 15-byte sprite at V1, V7
$A08    $F1FE   UNKNOWN  F1FE            ; Unknown Fxxx instruction
$A0A    $8E7F   UNKNOWN  8E7F            ; Unknown 8xxx instruction
$A0C    $BCE2   JP       V0, $CE2        ; Jump to V0 + CE2
$A0E    $E479   UNKNOWN  $E479           ; Unknown Exxx instruction
$A10    $7604   ADD      V6, #04         ; Add 4 to V6
$A12    $34E2   SE       V4, #E2         ; Skip if V4 == 226
$A14    $CCA4   RND      VC, #A4         ; VC = random & A4
$A16    $D306   DRW      V3, V0, #6      ; Draw 6-byte sprite at V3, V0
$A18    $CF4C   RND      VF, #4C         ; VF = random & 4C
$A1A    $1101   JP       $101            ; Jump to 101
$A1C    $09AA   SYS      $9AA            ; System call to 9AA
$A1E    $CEF8   RND      VE, #F8         ; VE = random & F8
$A20    $D636   DRW      V6, V3, #6      ; Draw 6-byte sprite at V6, V3
$A22    $C84D   RND      V8, #4D         ; V8 = random & 4D
$A24    $554C   UNKNOWN  $554C           ; Unknown 5xxx instruction
$A26    $A934   LD       I, $934         ; Load 934 into I
$A28    $E2D2   UNKNOWN  $E2D2           ; Unknown Exxx instruction
$A2A    $14B9   JP       $4B9            ; Jump to 4B9
$A2C    $A0B9   LD       I, $0B9         ; Load 0B9 into I
$A2E    $C463   RND      V4, #63         ; V4 = random & 63
$A30    $E6CF   UNKNOWN  $E6CF           ; Unknown Exxx instruction
$A32    $0182   SYS      $182            ; System call to 182
$A34    $97FD   UNKNOWN  $97FD           ; Unknown 9xxx instruction
$A36    $9D7B   UNKNOWN  $9D7B           ; Unknown 9xxx instruction
$A38    $671F   LD       V7, #1F         ; Load 31 into V7
$A3A    $208A   CALL     $08A            ; Call subroutine at 08A
$A3C    $0EDC   SYS      $EDC            ; System call to EDC
$A3E    $62A0   LD       V2, #A0         ; Load 160 into V2
$A40    $64A4   LD       V4, #A4         ; Load 164 into V4
$A42    $9953   UNKNOWN  $9953           ; Unknown 9xxx instruction
$A44    $B71E   JP       V0, $71E        ; Jump to V0 + 71E
$A46    $4297   SNE      V2, #97         ; Skip if V2 != 151
$A48    $D5A0   DRW      V5, VA, #0      ; Draw 0-byte sprite at V5, VA
$A4A    $5A84   UNKNOWN  $5A84           ; Unknown 5xxx instruction
$A4C    $982C   UNKNOWN  $982C           ; Unknown 9xxx instruction
$A4E    $1160   JP       $160            ; Jump to 160
$A50    $CBBC   RND      VB, #BC         ; VB = random & BC
$A52    $67A6   LD       V7, #A6         ; Load 166 into V7
$A54    $EE1F   UNKNOWN  $EE1F           ; Unknown Exxx instruction
$A56    $042C   SYS      $42C            ; System call to 42C
$A58    $36B5   SE       V6, #B5         ; Skip if V6 == 181
$A5A    $63FC   LD       V3, #FC         ; Load 252 into V3
$A5C    $C50C   RND      V5, #0C         ; V5 = random & 0C
$A5E    $9B95   UNKNOWN  $9B95           ; Unknown 9xxx instruction
$A60    $CA65   RND      VA, #65         ; VA = random & 65
$A62    $D3B4   DRW      V3, VB, #4      ; Draw 4-byte sprite at V3, VB
$A64    $AD71   LD       I, $D71         ; Load D71 into I
$A66    $B92D   JP       V0, $92D        ; Jump to V0 + 92D
$A68    $AF9D   LD       I, $F9D         ; Load F9D into I
$A6A    $3501   SE       V5, #01         ; Skip if V5 == 1
$A6C    $AA52   LD       I, $A52         ; Load A52 into I
$A6E    $D180   DRW      V1, V8, #0      ; Draw 0-byte sprite at V1, V8
$A70    $C2B5   RND      V2, #B5         ; V2 = random & B5
$A72    $E779   UNKNOWN  $E779           ; Unknown Exxx instruction
$A74    $C93D   RND      V9, #3D         ; V9 = random & 3D
$A76    $8954   ADD      V9, V5          ; V9 += V5, VF = carry
$A78    $1020   JP       $020            ; Jump to 020
$A7A    $51DF   UNKNOWN  $51DF           ; Unknown 5xxx instruction
$A7C    $2C1A   CALL     $C1A            ; Call subroutine at C1A
$A7E    $F4ED   UNKNOWN  F4ED            ; Unknown Fxxx instruction
$A80    $35F7   SE       V5, #F7         ; Skip if V5 == 247
$A82    $9F7E   UNKNOWN  $9F7E           ; Unknown 9xxx instruction
$A84    $74A9   ADD      V4, #A9         ; Add 169 to V4
$A86    $06C0   SYS      $6C0            ; System call to 6C0
$A88    $6C44   LD       VC, #44         ; Load 68 into VC
$A8A    $D177   DRW      V1, V7, #7      ; Draw 7-byte sprite at V1, V7
$A8C    $B6CF   JP       V0, $6CF        ; Jump to V0 + 6CF
$A8E    $CD1A   RND      VD, #1A         ; VD = random & 1A
$A90    $A099   LD       I, $099         ; Load 099 into I
$A92    $0A38   SYS      $A38            ; System call to A38
$A94    $5D98   UNKNOWN  $5D98           ; Unknown 5xxx instruction
$A96    $7E9B   ADD      VE, #9B         ; Add 155 to VE
$A98    $214A   CALL     $14A            ; Call subroutine at 14A
$A9A    $1417   JP       $417            ; Jump to 417
$A9C    $47BC   SNE      V7, #BC         ; Skip if V7 != 188
$A9E    $CEB8   RND      VE, #B8         ; VE = random & B8
$AA0    $89F1   OR       V9, VF          ; V9 |= VF
$AA2    $1C17   JP       $C17            ; Jump to C17
$AA4    $5FA2   UNKNOWN  $5FA2           ; Unknown 5xxx instruction
$AA6    $9AD6   UNKNOWN  $9AD6           ; Unknown 9xxx instruction
$AA8    $ACD1   LD       I, $CD1         ; Load CD1 into I
$AAA    $4FCA   SNE      VF, #CA         ; Skip if VF != 202
$AAC    $1160   JP       $160            ; Jump to 160
$AAE    $EA46   UNKNOWN  $EA46           ; Unknown Exxx instruction
$AB0    $1E09   JP       $E09            ; Jump to E09
$AB2    $D36B   DRW      V3, V6, #B      ; Draw 11-byte sprite at V3, V6
$AB4    $B73C   JP       V0, $73C        ; Jump to V0 + 73C
$AB6    $E9B4   UNKNOWN  $E9B4           ; Unknown Exxx instruction
$AB8    $DD7B   DRW      VD, V7, #B      ; Draw 11-byte sprite at VD, V7
$ABA    $5825   UNKNOWN  $5825           ; Unknown 5xxx instruction
$ABC    $1F6E   JP       $F6E            ; Jump to F6E
$ABE    $1455   JP       $455            ; Jump to 455
$AC0    $5B14   UNKNOWN  $5B14           ; Unknown 5xxx instruction
$AC2    $B17C   JP       V0, $17C        ; Jump to V0 + 17C
$AC4    $E4C7   UNKNOWN  $E4C7           ; Unknown Exxx instruction
$AC6    $A547   LD       I, $547         ; Load 547 into I
$AC8    $0351   SYS      $351            ; System call to 351
$ACA    $E2CD   UNKNOWN  $E2CD           ; Unknown Exxx instruction
$ACC    $108A   JP       $08A            ; Jump to 08A
$ACE    $9755   UNKNOWN  $9755           ; Unknown 9xxx instruction
$AD0    $C770   RND      V7, #70         ; V7 = random & 70
$AD2    $284B   CALL     $84B            ; Call subroutine at 84B
$AD4    $7DF1   ADD      VD, #F1         ; Add 241 to VD
$AD6    $4C87   SNE      VC, #87         ; Skip if VC != 135
$AD8    $2BEF   CALL     $BEF            ; Call subroutine at BEF
$ADA    $3319   SE       V3, #19         ; Skip if V3 == 25
$ADC    $73FE   ADD      V3, #FE         ; Add 254 to V3
$ADE    $4441   SNE      V4, #41         ; Skip if V4 != 65
$AE0    $9AF2   UNKNOWN  $9AF2           ; Unknown 9xxx instruction
$AE2    $2A30   CALL     $A30            ; Call subroutine at A30
$AE4    $A422   LD       I, $422         ; Load 422 into I
$AE6    $C154   RND      V1, #54         ; V1 = random & 54
$AE8    $B099   JP       V0, $099        ; Jump to V0 + 099
$AEA    $F463   UNKNOWN  F463            ; Unknown Fxxx instruction
$AEC    $A285   LD       I, $285         ; Load 285 into I
$AEE    $CC73   RND      VC, #73         ; VC = random & 73
$AF0    $FC33   LD       B, VC           ; Store BCD of VC at I, I+1, I+2
$AF2    $DF4F   DRW      VF, V4, #F      ; Draw 15-byte sprite at VF, V4
$AF4    $2E7F   CALL     $E7F            ; Call subroutine at E7F
$AF6    $ABA5   LD       I, $BA5         ; Load BA5 into I
$AF8    $4CEC   SNE      VC, #EC         ; Skip if VC != 236
$AFA    $BEBF   JP       V0, $EBF        ; Jump to V0 + EBF
$AFC    $AE6D   LD       I, $E6D         ; Load E6D into I
$AFE    $1F20   JP       $F20            ; Jump to F20
$B00    $2FFA   CALL     $FFA            ; Call subroutine at FFA
$B02    $BF7C   JP       V0, $F7C        ; Jump to V0 + F7C
$B04    $6A71   LD       VA, #71         ; Load 113 into VA
$B06    $E328   UNKNOWN  $E328           ; Unknown Exxx instruction
$B08    $A969   LD       I, $969         ; Load 969 into I
$B0A    $7B4E   ADD      VB, #4E         ; Add 78 to VB
$B0C    $FC30   UNKNOWN  FC30            ; Unknown Fxxx instruction
$B0E    $B89D   JP       V0, $89D        ; Jump to V0 + 89D
$B10    $5B44   UNKNOWN  $5B44           ; Unknown 5xxx instruction
$B12    $458D   SNE      V5, #8D         ; Skip if V5 != 141
$B14    $0B67   SYS      $B67            ; System call to B67
$B16    $7A11   ADD      VA, #11         ; Add 17 to VA
$B18    $96E2   UNKNOWN  $96E2           ; Unknown 9xxx instruction
$B1A    $EB37   UNKNOWN  $EB37           ; Unknown Exxx instruction
$B1C    $C03F   RND      V0, #3F         ; V0 = random & 3F
$B1E    $C948   RND      V9, #48         ; V9 = random & 48
$B20    $DAE4   DRW      VA, VE, #4      ; Draw 4-byte sprite at VA, VE
$B22    $1513   JP       $513            ; Jump to 513
$B24    $334D   SE       V3, #4D         ; Skip if V3 == 77
$B26    $A1BE   LD       I, $1BE         ; Load 1BE into I
$B28    $1F56   JP       $F56            ; Jump to F56
$B2A    $BDBB   JP       V0, $DBB        ; Jump to V0 + DBB
$B2C    $9719   UNKNOWN  $9719           ; Unknown 9xxx instruction
$B2E    $B373   JP       V0, $373        ; Jump to V0 + 373
$B30    $2A65   CALL     $A65            ; Call subroutine at A65
$B32    $C56F   RND      V5, #6F         ; V5 = random & 6F
$B34    $FC8F   UNKNOWN  FC8F            ; Unknown Fxxx instruction
$B36    $7F2A   ADD      VF, #2A         ; Add 42 to VF
$B38    $9A9D   UNKNOWN  $9A9D           ; Unknown 9xxx instruction
$B3A    $08B0   SYS      $8B0            ; System call to 8B0
$B3C    $E691   UNKNOWN  $E691           ; Unknown Exxx instruction
$B3E    $0F7D   SYS      $F7D            ; System call to F7D
$B40    $A0EE   LD       I, $0EE         ; Load 0EE into I
$B42    $87CB   UNKNOWN  87CB            ; Unknown 8xxx instruction
$B44    $4CA5   SNE      VC, #A5         ; Skip if VC != 165
$B46    $E8BD   UNKNOWN  $E8BD           ; Unknown Exxx instruction
$B48    $5896   UNKNOWN  $5896           ; Unknown 5xxx instruction
$B4A    $81B0   LD       V1, VB          ; V1 = VB
$B4C    $00B9   SYS      $0B9            ; System call to 0B9
$B4E    $453C   SNE      V5, #3C         ; Skip if V5 != 60
$B50    $07A6   SYS      $7A6            ; System call to 7A6
$B52    $9E03   UNKNOWN  $9E03           ; Unknown 9xxx instruction
$B54    $B501   JP       V0, $501        ; Jump to V0 + 501
$B56    $7B38   ADD      VB, #38         ; Add 56 to VB
$B58    $2847   CALL     $847            ; Call subroutine at 847
$B5A    $D80A   DRW      V8, V0, #A      ; Draw 10-byte sprite at V8, V0
$B5C    $07ED   SYS      $7ED            ; System call to 7ED
$B5E    $E7B2   UNKNOWN  $E7B2           ; Unknown Exxx instruction
$B60    $6623   LD       V6, #23         ; Load 35 into V6
$B62    $1CEA   JP       $CEA            ; Jump to CEA
$B64    $AE68   LD       I, $E68         ; Load E68 into I
$B66    $C9CA   RND      V9, #CA         ; V9 = random & CA
$B68    $54FE   UNKNOWN  $54FE           ; Unknown 5xxx instruction
$B6A    $008D   SYS      $08D            ; System call to 08D
$B6C    $4586   SNE      V5, #86         ; Skip if V5 != 134
$B6E    $15D4   JP       $5D4            ; Jump to 5D4
$B70    $6135   LD       V1, #35         ; Load 53 into V1
$B72    $640C   LD       V4, #0C         ; Load 12 into V4
$B74    $A0D8   LD       I, $0D8         ; Load 0D8 into I
$B76    $8F7C   UNKNOWN  8F7C            ; Unknown 8xxx instruction
$B78    $1362   JP       $362            ; Jump to 362
$B7A    $2E32   CALL     $E32            ; Call subroutine at E32
$B7C    $4548   SNE      V5, #48         ; Skip if V5 != 72
$B7E    $382B   SE       V8, #2B         ; Skip if V8 == 43
$B80    $1D15   JP       $D15            ; Jump to D15
$B82    $6094   LD       V0, #94         ; Load 148 into V0
$B84    $35D1   SE       V5, #D1         ; Skip if V5 == 209
$B86    $E3A8   UNKNOWN  $E3A8           ; Unknown Exxx instruction
$B88    $37EC   SE       V7, #EC         ; Skip if V7 == 236
$B8A    $3221   SE       V2, #21         ; Skip if V2 == 33
$B8C    $489D   SNE      V8, #9D         ; Skip if V8 != 157
$B8E    $251A   CALL     $51A            ; Call subroutine at 51A
$B90    $EDE2   UNKNOWN  $EDE2           ; Unknown Exxx instruction
$B92    $2C08   CALL     $C08            ; Call subroutine at C08
$B94    $E046   UNKNOWN  $E046           ; Unknown Exxx instruction
$B96    $0D50   SYS      $D50            ; System call to D50
$B98    $B054   JP       V0, $054        ; Jump to V0 + 054
$B9A    $56A0   SE       V6, VA          ; Skip if V6 == VA
$B9C    $5CBC   UNKNOWN  $5CBC           ; Unknown 5xxx instruction
$B9E    $4700   SNE      V7, #00         ; Skip if V7 != 0
$BA0    $1606   JP       $606            ; Jump to 606
$BA2    $162B   JP       $62B            ; Jump to 62B
$BA4    $F5B4   UNKNOWN  F5B4            ; Unknown Fxxx instruction
$BA6    $F69D   UNKNOWN  F69D            ; Unknown Fxxx instruction
$BA8    $EF16   UNKNOWN  $EF16           ; Unknown Exxx instruction
$BAA    $2E28   CALL     $E28            ; Call subroutine at E28
$BAC    $D873   DRW      V8, V7, #3      ; Draw 3-byte sprite at V8, V7
$BAE    $7957   ADD      V9, #57         ; Add 87 to V9
$BB0    $512A   UNKNOWN  $512A           ; Unknown 5xxx instruction
$BB2    $1DD1   JP       $DD1            ; Jump to DD1
$BB4    $D0CB   DRW      V0, VC, #B      ; Draw 11-byte sprite at V0, VC
$BB6    $FC96   UNKNOWN  FC96            ; Unknown Fxxx instruction
$BB8    $B2CC   JP       V0, $2CC        ; Jump to V0 + 2CC
$BBA    $0E3C   SYS      $E3C            ; System call to E3C
$BBC    $949F   UNKNOWN  $949F           ; Unknown 9xxx instruction
$BBE    $ADD8   LD       I, $DD8         ; Load DD8 into I
$BC0    $BC7E   JP       V0, $C7E        ; Jump to V0 + C7E
$BC2    $3287   SE       V2, #87         ; Skip if V2 == 135
$BC4    $B3DB   JP       V0, $3DB        ; Jump to V0 + 3DB
$BC6    $8CC6   SHR      VC              ; VC >>= 1, VF = LSB
$BC8    $08CF   SYS      $8CF            ; System call to 8CF
$BCA    $9F89   UNKNOWN  $9F89           ; Unknown 9xxx instruction
$BCC    $5330   SE       V3, V3          ; Skip if V3 == V3
$BCE    $0FD6   SYS      $FD6            ; System call to FD6
$BD0    $7CB9   ADD      VC, #B9         ; Add 185 to VC
$BD2    $C476   RND      V4, #76         ; V4 = random & 76
$BD4    $A330   LD       I, $330         ; Load 330 into I
$BD6    $74D9   ADD      V4, #D9         ; Add 217 to V4
$BD8    $48A3   SNE      V8, #A3         ; Skip if V8 != 163
$BDA    $C99F   RND      V9, #9F         ; V9 = random & 9F
$BDC    $B918   JP       V0, $918        ; Jump to V0 + 918
$BDE    $2055   CALL     $055            ; Call subroutine at 055
$BE0    $2A0D   CALL     $A0D            ; Call subroutine at A0D
$BE2    $DB50   DRW      VB, V5, #0      ; Draw 0-byte sprite at VB, V5
$BE4    $80C0   LD       V0, VC          ; V0 = VC
$BE6    $D6FB   DRW      V6, VF, #B      ; Draw 11-byte sprite at V6, VF
$BE8    $E2A0   UNKNOWN  $E2A0           ; Unknown Exxx instruction
$BEA    $C48F   RND      V4, #8F         ; V4 = random & 8F
$BEC    $239A   CALL     $39A            ; Call subroutine at 39A
$BEE    $4936   SNE      V9, #36         ; Skip if V9 != 54
$BF0    $AC90   LD       I, $C90         ; Load C90 into I
$BF2    $850C   UNKNOWN  850C            ; Unknown 8xxx instruction
$BF4    $0C7E   SYS      $C7E            ; System call to C7E
$BF6    $AB68   LD       I, $B68         ; Load B68 into I
$BF8    $7E92   ADD      VE, #92         ; Add 146 to VE
$BFA    $B499   JP       V0, $499        ; Jump to V0 + 499
$BFC    $988F   UNKNOWN  $988F           ; Unknown 9xxx instruction
$BFE    $9BBE   UNKNOWN  $9BBE           ; Unknown 9xxx instruction
$C00    $D1A1   DRW      V1, VA, #1      ; Draw 1-byte sprite at V1, VA
$C02    $0048   SYS      $048            ; System call to 048
$C04    $5F72   UNKNOWN  $5F72           ; Unknown 5xxx instruction
$C06    $CF4F   RND      VF, #4F         ; VF = random & 4F
$C08    $2053   CALL     $053            ; Call subroutine at 053
$C0A    $390F   SE       V9, #0F         ; Skip if V9 == 15
$C0C    $7DDE   ADD      VD, #DE         ; Add 222 to VD
$C0E    $DB2C   DRW      VB, V2, #C      ; Draw 12-byte sprite at VB, V2
$C10    $3C02   SE       VC, #02         ; Skip if VC == 2
$C12    $4F1B   SNE      VF, #1B         ; Skip if VF != 27
$C14    $4FD9   SNE      VF, #D9         ; Skip if VF != 217
$C16    $A7EB   LD       I, $7EB         ; Load 7EB into I
$C18    $BB52   JP       V0, $B52        ; Jump to V0 + B52
$C1A    $F0C8   UNKNOWN  F0C8            ; Unknown Fxxx instruction
$C1C    $CE53   RND      VE, #53         ; VE = random & 53
$C1E    $7DE3   ADD      VD, #E3         ; Add 227 to VD
$C20    $B549   JP       V0, $549        ; Jump to V0 + 549
$C22    $F819   UNKNOWN  F819            ; Unknown Fxxx instruction
$C24    $88D5   SUB      V8, VD          ; V8 -= VD, VF = !borrow
$C26    $C409   RND      V4, #09         ; V4 = random & 09
$C28    $6DD4   LD       VD, #D4         ; Load 212 into VD
$C2A    $5AEB   UNKNOWN  $5AEB           ; Unknown 5xxx instruction
$C2C    $410F   SNE      V1, #0F         ; Skip if V1 != 15
$C2E    $CCF8   RND      VC, #F8         ; VC = random & F8
$C30    $6AB6   LD       VA, #B6         ; Load 182 into VA
$C32    $87A9   UNKNOWN  87A9            ; Unknown 8xxx instruction
$C34    $291E   CALL     $91E            ; Call subroutine at 91E
$C36    $2C0F   CALL     $C0F            ; Call subroutine at C0F
$C38    $31B9   SE       V1, #B9         ; Skip if V1 == 185
$C3A    $6857   LD       V8, #57         ; Load 87 into V8
$C3C    $4149   SNE      V1, #49         ; Skip if V1 != 73
$C3E    $0047   SYS      $047            ; System call to 047
$C40    $DE44   DRW      VE, V4, #4      ; Draw 4-byte sprite at VE, V4
$C42    $81BB   UNKNOWN  81BB            ; Unknown 8xxx instruction
$C44    $206E   CALL     $06E            ; Call subroutine at 06E
$C46    $9BC1   UNKNOWN  $9BC1           ; Unknown 9xxx instruction
$C48    $4F5A   SNE      VF, #5A         ; Skip if VF != 90
$C4A    $BFB0   JP       V0, $FB0        ; Jump to V0 + FB0
$C4C    $BFBD   JP       V0, $FBD        ; Jump to V0 + FBD
$C4E    $EAB7   UNKNOWN  $EAB7           ; Unknown Exxx instruction
$C50    $5979   UNKNOWN  $5979           ; Unknown 5xxx instruction
$C52    $7E96   ADD      VE, #96         ; Add 150 to VE
$C54    $E138   UNKNOWN  $E138           ; Unknown Exxx instruction
$C56    $26AE   CALL     $6AE            ; Call subroutine at 6AE
$C58    $8374   ADD      V3, V7          ; V3 += V7, VF = carry
$C5A    $E66B   UNKNOWN  $E66B           ; Unknown Exxx instruction
$C5C    $D39A   DRW      V3, V9, #A      ; Draw 10-byte sprite at V3, V9
$C5E    $CEDD   RND      VE, #DD         ; VE = random & DD
$C60    $53FF   UNKNOWN  $53FF           ; Unknown 5xxx instruction
$C62    $A615   LD       I, $615         ; Load 615 into I
$C64    $0EBF   SYS      $EBF            ; System call to EBF
$C66    $8EF1   OR       VE, VF          ; VE |= VF
$C68    $2B32   CALL     $B32            ; Call subroutine at B32
$C6A    $97EB   UNKNOWN  $97EB           ; Unknown 9xxx instruction
$C6C    $BC7F   JP       V0, $C7F        ; Jump to V0 + C7F
$C6E    $48A3   SNE      V8, #A3         ; Skip if V8 != 163
$C70    $2002   CALL     $002            ; Call subroutine at 002
$C72    $C7A1   RND      V7, #A1         ; V7 = random & A1
$C74    $8437   SUBN     V4, V3          ; V4 = V3 - V4, VF = !borrow
$C76    $0B73   SYS      $B73            ; System call to B73
$C78    $094F   SYS      $94F            ; System call to 94F
$C7A    $007A   SYS      $07A            ; System call to 07A
$C7C    $B1A5   JP       V0, $1A5        ; Jump to V0 + 1A5
$C7E    $AAF1   LD       I, $AF1         ; Load AF1 into I
$C80    $60BC   LD       V0, #BC         ; Load 188 into V0
$C82    $C9C3   RND      V9, #C3         ; V9 = random & C3
$C84    $6A8E   LD       VA, #8E         ; Load 142 into VA
$C86    $CDC3   RND      VD, #C3         ; VD = random & C3
$C88    $17DA   JP       $7DA            ; Jump to 7DA
$C8A    $FD90   UNKNOWN  FD90            ; Unknown Fxxx instruction
$C8C    $B2F0   JP       V0, $2F0        ; Jump to V0 + 2F0
$C8E    $48DF   SNE      V8, #DF         ; Skip if V8 != 223
$C90    $64ED   LD       V4, #ED         ; Load 237 into V4
$C92    $B38E   JP       V0, $38E        ; Jump to V0 + 38E
$C94    $404E   SNE      V0, #4E         ; Skip if V0 != 78
$C96    $C42D   RND      V4, #2D         ; V4 = random & 2D
$C98    $CF0E   RND      VF, #0E         ; VF = random & 0E
$C9A    $ED56   UNKNOWN  $ED56           ; Unknown Exxx instruction
$C9C    $89F7   SUBN     V9, VF          ; V9 = VF - V9, VF = !borrow
$C9E    $031D   SYS      $31D            ; System call to 31D
$CA0    $E86C   UNKNOWN  $E86C           ; Unknown Exxx instruction
$CA2    $F466   UNKNOWN  F466            ; Unknown Fxxx instruction
$CA4    $2097   CALL     $097            ; Call subroutine at 097
$CA6    $20EC   CALL     $0EC            ; Call subroutine at 0EC
$CA8    $D215   DRW      V2, V1, #5      ; Draw 5-byte sprite at V2, V1
$CAA    $AC56   LD       I, $C56         ; Load C56 into I
$CAC    $EEEA   UNKNOWN  $EEEA           ; Unknown Exxx instruction
$CAE    $0049   SYS      $049            ; System call to 049
$CB0    $C80F   RND      V8, #0F         ; V8 = random & 0F
$CB2    $DC18   DRW      VC, V1, #8      ; Draw 8-byte sprite at VC, V1
$CB4    $2CA4   CALL     $CA4            ; Call subroutine at CA4
$CB6    $F560   UNKNOWN  F560            ; Unknown Fxxx instruction
$CB8    $BE9F   JP       V0, $E9F        ; Jump to V0 + E9F
$CBA    $96D1   UNKNOWN  $96D1           ; Unknown 9xxx instruction
$CBC    $B280   JP       V0, $280        ; Jump to V0 + 280
$CBE    $17AA   JP       $7AA            ; Jump to 7AA
$CC0    $04F2   SYS      $4F2            ; System call to 4F2
$CC2    $95CE   UNKNOWN  $95CE           ; Unknown 9xxx instruction
$CC4    $53BA   UNKNOWN  $53BA           ; Unknown 5xxx instruction
$CC6    $4848   SNE      V8, #48         ; Skip if V8 != 72
$CC8    $1F30   JP       $F30            ; Jump to F30
$CCA    $F601   UNKNOWN  F601            ; Unknown Fxxx instruction
$CCC    $DD1A   DRW      VD, V1, #A      ; Draw 10-byte sprite at VD, V1
$CCE    $7D86   ADD      VD, #86         ; Add 134 to VD
$CD0    $E5EB   UNKNOWN  $E5EB           ; Unknown Exxx instruction
$CD2    $19D0   JP       $9D0            ; Jump to 9D0
$CD4    $C386   RND      V3, #86         ; V3 = random & 86
$CD6    $696A   LD       V9, #6A         ; Load 106 into V9
$CD8    $6968   LD       V9, #68         ; Load 104 into V9
$CDA    $1C9D   JP       $C9D            ; Jump to C9D
$CDC    $A4FE   LD       I, $4FE         ; Load 4FE into I
$CDE    $B5E2   JP       V0, $5E2        ; Jump to V0 + 5E2
$CE0    $F150   UNKNOWN  F150            ; Unknown Fxxx instruction
$CE2    $280D   CALL     $80D            ; Call subroutine at 80D
$CE4    $FA98   UNKNOWN  FA98            ; Unknown Fxxx instruction
$CE6    $C0B2   RND      V0, #B2         ; V0 = random & B2
$CE8    $6F8A   LD       VF, #8A         ; Load 138 into VF
$CEA    $944F   UNKNOWN  $944F           ; Unknown 9xxx instruction
$CEC    $FF9B   UNKNOWN  FF9B            ; Unknown Fxxx instruction
$CEE    $E6A8   UNKNOWN  $E6A8           ; Unknown Exxx instruction
$CF0    $C66C   RND      V6, #6C         ; V6 = random & 6C
$CF2    $D289   DRW      V2, V8, #9      ; Draw 9-byte sprite at V2, V8
$CF4    $03B1   SYS      $3B1            ; System call to 3B1
$CF6    $2929   CALL     $929            ; Call subroutine at 929
$CF8    $B500   JP       V0, $500        ; Jump to V0 + 500
$CFA    $C355   RND      V3, #55         ; V3 = random & 55
$CFC    $429C   SNE      V2, #9C         ; Skip if V2 != 156
$CFE    $9C33   UNKNOWN  $9C33           ; Unknown 9xxx instruction
$D00    $79BC   ADD      V9, #BC         ; Add 188 to V9
$D02    $3156   SE       V1, #56         ; Skip if V1 == 86
$D04    $87E8   UNKNOWN  87E8            ; Unknown 8xxx instruction
$D06    $23AF   CALL     $3AF            ; Call subroutine at 3AF
$D08    $8F8B   UNKNOWN  8F8B            ; Unknown 8xxx instruction
$D0A    $3E7B   SE       VE, #7B         ; Skip if VE == 123
$D0C    $D500   DRW      V5, V0, #0      ; Draw 0-byte sprite at V5, V0
$D0E    $ABBB   LD       I, $BBB         ; Load BBB into I
$D10    $CB24   RND      VB, #24         ; VB = random & 24
$D12    $0755   SYS      $755            ; System call to 755
$D14    $F997   UNKNOWN  F997            ; Unknown Fxxx instruction
$D16    $EC3D   UNKNOWN  $EC3D           ; Unknown Exxx instruction
$D18    $7B94   ADD      VB, #94         ; Add 148 to VB
$D1A    $5FBB   UNKNOWN  $5FBB           ; Unknown 5xxx instruction
$D1C    $BA6D   JP       V0, $A6D        ; Jump to V0 + A6D
$D1E    $98DC   UNKNOWN  $98DC           ; Unknown 9xxx instruction
$D20    $7B80   ADD      VB, #80         ; Add 128 to VB
$D22    $7CA7   ADD      VC, #A7         ; Add 167 to VC
$D24    $B0D4   JP       V0, $0D4        ; Jump to V0 + 0D4
$D26    $8786   SHR      V7              ; V7 >>= 1, VF = LSB
$D28    $1B00   JP       $B00            ; Jump to B00
$D2A    $E5FC   UNKNOWN  $E5FC           ; Unknown Exxx instruction
$D2C    $A7A8   LD       I, $7A8         ; Load 7A8 into I
$D2E    $AA4A   LD       I, $A4A         ; Load A4A into I
$D30    $A57E   LD       I, $57E         ; Load 57E into I
$D32    $5008   UNKNOWN  $5008           ; Unknown 5xxx instruction
$D34    $3D88   SE       VD, #88         ; Skip if VD == 136
$D36    $92E9   UNKNOWN  $92E9           ; Unknown 9xxx instruction
$D38    $812F   UNKNOWN  812F            ; Unknown 8xxx instruction
$D3A    $330C   SE       V3, #0C         ; Skip if V3 == 12
$D3C    $2672   CALL     $672            ; Call subroutine at 672
$D3E    $623C   LD       V2, #3C         ; Load 60 into V2
$D40    $5700   SE       V7, V0          ; Skip if V7 == V0
$D42    $5391   UNKNOWN  $5391           ; Unknown 5xxx instruction
$D44    $1F35   JP       $F35            ; Jump to F35
$D46    $56A6   UNKNOWN  $56A6           ; Unknown 5xxx instruction
$D48    $A656   LD       I, $656         ; Load 656 into I
$D4A    $C27F   RND      V2, #7F         ; V2 = random & 7F
$D4C    $9C87   UNKNOWN  $9C87           ; Unknown 9xxx instruction
$D4E    $C27A   RND      V2, #7A         ; V2 = random & 7A
$D50    $AFA3   LD       I, $FA3         ; Load FA3 into I
$D52    $E495   UNKNOWN  $E495           ; Unknown Exxx instruction
$D54    $6BCB   LD       VB, #CB         ; Load 203 into VB
$D56    $3583   SE       V5, #83         ; Skip if V5 == 131
$D58    $6F66   LD       VF, #66         ; Load 102 into VF
$D5A    $BDF9   JP       V0, $DF9        ; Jump to V0 + DF9
$D5C    $27B1   CALL     $7B1            ; Call subroutine at 7B1
$D5E    $42C7   SNE      V2, #C7         ; Skip if V2 != 199
$D60    $2AFF   CALL     $AFF            ; Call subroutine at AFF
$D62    $BCF5   JP       V0, $CF5        ; Jump to V0 + CF5
$D64    $A1FF   LD       I, $1FF         ; Load 1FF into I
$D66    $D5C3   DRW      V5, VC, #3      ; Draw 3-byte sprite at V5, VC
$D68    $D5B1   DRW      V5, VB, #1      ; Draw 1-byte sprite at V5, VB
$D6A    $1323   JP       $323            ; Jump to 323
$D6C    $A146   LD       I, $146         ; Load 146 into I
$D6E    $EE1E   UNKNOWN  $EE1E           ; Unknown Exxx instruction
$D70    $92DD   UNKNOWN  $92DD           ; Unknown 9xxx instruction
$D72    $E4D0   UNKNOWN  $E4D0           ; Unknown Exxx instruction
$D74    $F70F   UNKNOWN  F70F            ; Unknown Fxxx instruction
$D76    $893E   SHL      V9              ; V9 <<= 1, VF = MSB
$D78    $5F83   UNKNOWN  $5F83           ; Unknown 5xxx instruction
$D7A    $012F   SYS      $12F            ; System call to 12F
$D7C    $AAA2   LD       I, $AA2         ; Load AA2 into I
$D7E    $891C   UNKNOWN  891C            ; Unknown 8xxx instruction
$D80    $B11D   JP       V0, $11D        ; Jump to V0 + 11D
$D82    $9E2F   UNKNOWN  $9E2F           ; Unknown 9xxx instruction
$D84    $8866   SHR      V8              ; V8 >>= 1, VF = LSB
$D86    $F585   UNKNOWN  F585            ; Unknown Fxxx instruction
$D88    $61AF   LD       V1, #AF         ; Load 175 into V1
$D8A    $31FF   SE       V1, #FF         ; Skip if V1 == 255
$D8C    $A0D2   LD       I, $0D2         ; Load 0D2 into I
$D8E    $1607   JP       $607            ; Jump to 607
$D90    $57DF   UNKNOWN  $57DF           ; Unknown 5xxx instruction
$D92    $93CD   UNKNOWN  $93CD           ; Unknown 9xxx instruction
$D94    $00E1   SYS      $0E1            ; System call to 0E1
$D96    $148C   JP       $48C            ; Jump to 48C
$D98    $634B   LD       V3, #4B         ; Load 75 into V3
$D9A    $B6C8   JP       V0, $6C8        ; Jump to V0 + 6C8
$D9C    $A963   LD       I, $963         ; Load 963 into I
$D9E    $EFD3   UNKNOWN  $EFD3           ; Unknown Exxx instruction
$DA0    $EB8B   UNKNOWN  $EB8B           ; Unknown Exxx instruction
$DA2    $020B   SYS      $20B            ; System call to 20B
$DA4    $19F8   JP       $9F8            ; Jump to 9F8
$DA6    $67B5   LD       V7, #B5         ; Load 181 into V7
$DA8    $60C2   LD       V0, #C2         ; Load 194 into V0
$DAA    $390D   SE       V9, #0D         ; Skip if V9 == 13
$DAC    $ACB0   LD       I, $CB0         ; Load CB0 into I
$DAE    $F46A   UNKNOWN  F46A            ; Unknown Fxxx instruction
$DB0    $AE36   LD       I, $E36         ; Load E36 into I
$DB2    $90DF   UNKNOWN  $90DF           ; Unknown 9xxx instruction
$DB4    $62CA   LD       V2, #CA         ; Load 202 into V2
$DB6    $D461   DRW      V4, V6, #1      ; Draw 1-byte sprite at V4, V6
$DB8    $0D6F   SYS      $D6F            ; System call to D6F
$DBA    $31D1   SE       V1, #D1         ; Skip if V1 == 209
$DBC    $2C28   CALL     $C28            ; Call subroutine at C28
$DBE    $9644   UNKNOWN  $9644           ; Unknown 9xxx instruction
$DC0    $4C7F   SNE      VC, #7F         ; Skip if VC != 127
$DC2    $E4A4   UNKNOWN  $E4A4           ; Unknown Exxx instruction
$DC4    $A216   LD       I, $216         ; Load 216 into I
$DC6    $762C   ADD      V6, #2C         ; Add 44 to V6
$DC8    $DF44   DRW      VF, V4, #4      ; Draw 4-byte sprite at VF, V4
$DCA    $9A05   UNKNOWN  $9A05           ; Unknown 9xxx instruction
$DCC    $85DD   UNKNOWN  85DD            ; Unknown 8xxx instruction
$DCE    $B93A   JP       V0, $93A        ; Jump to V0 + 93A
$DD0    $EE63   UNKNOWN  $EE63           ; Unknown Exxx instruction
$DD2    $5F65   UNKNOWN  $5F65           ; Unknown 5xxx instruction
$DD4    $85D4   ADD      V5, VD          ; V5 += VD, VF = carry
$DD6    $5B2F   UNKNOWN  $5B2F           ; Unknown 5xxx instruction
$DD8    $7E03   ADD      VE, #03         ; Add 3 to VE
$DDA    $4341   SNE      V3, #41         ; Skip if V3 != 65
$DDC    $7522   ADD      V5, #22         ; Add 34 to V5
$DDE    $EBFB   UNKNOWN  $EBFB           ; Unknown Exxx instruction
$DE0    $53CF   UNKNOWN  $53CF           ; Unknown 5xxx instruction
$DE2    $436C   SNE      V3, #6C         ; Skip if V3 != 108
$DE4    $B320   JP       V0, $320        ; Jump to V0 + 320
$DE6    $B4D8   JP       V0, $4D8        ; Jump to V0 + 4D8
$DE8    $BF43   JP       V0, $F43        ; Jump to V0 + F43
$DEA    $6900   LD       V9, #00         ; Load 0 into V9
$DEC    $B834   JP       V0, $834        ; Jump to V0 + 834
$DEE    $6423   LD       V4, #23         ; Load 35 into V4
$DF0    $8EFB   UNKNOWN  8EFB            ; Unknown 8xxx instruction
$DF2    $3050   SE       V0, #50         ; Skip if V0 == 80
$DF4    $2B1F   CALL     $B1F            ; Call subroutine at B1F
$DF6    $20CC   CALL     $0CC            ; Call subroutine at 0CC
$DF8    $871B   UNKNOWN  871B            ; Unknown 8xxx instruction
$DFA    $54C5   UNKNOWN  $54C5           ; Unknown 5xxx instruction
$DFC    $297A   CALL     $97A            ; Call subroutine at 97A
$DFE    $AEAE   LD       I, $EAE         ; Load EAE into I
$E00    $7755   ADD      V7, #55         ; Add 85 to V7
$E02    $2336   CALL     $336            ; Call subroutine at 336
$E04    $E6B4   UNKNOWN  $E6B4           ; Unknown Exxx instruction
$E06    $C204   RND      V2, #04         ; V2 = random & 04
$E08    $B793   JP       V0, $793        ; Jump to V0 + 793
$E0A    $8913   XOR      V9, V1          ; V9 ^= V1
$E0C    $EF55   UNKNOWN  $EF55           ; Unknown Exxx instruction
$E0E    $14BC   JP       $4BC            ; Jump to 4BC
$E10    $1477   JP       $477            ; Jump to 477
$E12    $34F8   SE       V4, #F8         ; Skip if V4 == 248
$E14    $9A38   UNKNOWN  $9A38           ; Unknown 9xxx instruction
$E16    $0D6B   SYS      $D6B            ; System call to D6B
$E18    $8E65   SUB      VE, V6          ; VE -= V6, VF = !borrow
$E1A    $380B   SE       V8, #0B         ; Skip if V8 == 11
$E1C    $AA46   LD       I, $A46         ; Load A46 into I
$E1E    $E7B8   UNKNOWN  $E7B8           ; Unknown Exxx instruction
$E20    $6580   LD       V5, #80         ; Load 128 into V5
$E22    $07A3   SYS      $7A3            ; System call to 7A3
$E24    $E822   UNKNOWN  $E822           ; Unknown Exxx instruction
$E26    $7897   ADD      V8, #97         ; Add 151 to V8
$E28    $5E6C   UNKNOWN  $5E6C           ; Unknown 5xxx instruction
$E2A    $7831   ADD      V8, #31         ; Add 49 to V8
$E2C    $5878   UNKNOWN  $5878           ; Unknown 5xxx instruction
$E2E    $AEF2   LD       I, $EF2         ; Load EF2 into I
$E30    $5DF1   UNKNOWN  $5DF1           ; Unknown 5xxx instruction
$E32    $9717   UNKNOWN  $9717           ; Unknown 9xxx instruction
$E34    $E140   UNKNOWN  $E140           ; Unknown Exxx instruction
$E36    $CFF1   RND      VF, #F1         ; VF = random & F1
$E38    $4722   SNE      V7, #22         ; Skip if V7 != 34
$E3A    $F4D8   UNKNOWN  F4D8            ; Unknown Fxxx instruction
$E3C    $1C58   JP       $C58            ; Jump to C58
$E3E    $596D   UNKNOWN  $596D           ; Unknown 5xxx instruction
$E40    $1DED   JP       $DED            ; Jump to DED
$E42    $235E   CALL     $35E            ; Call subroutine at 35E
$E44    $1949   JP       $949            ; Jump to 949
$E46    $9FCE   UNKNOWN  $9FCE           ; Unknown 9xxx instruction
$E48    $63FF   LD       V3, #FF         ; Load 255 into V3
$E4A    $2DF2   CALL     $DF2            ; Call subroutine at DF2
$E4C    $1DE0   JP       $DE0            ; Jump to DE0
$E4E    $544C   UNKNOWN  $544C           ; Unknown 5xxx instruction
$E50    $0EA4   SYS      $EA4            ; System call to EA4
$E52    $46E3   SNE      V6, #E3         ; Skip if V6 != 227
$E54    $74F9   ADD      V4, #F9         ; Add 249 to V4
$E56    $CF2F   RND      VF, #2F         ; VF = random & 2F
$E58    $DBAF   DRW      VB, VA, #F      ; Draw 15-byte sprite at VB, VA
$E5A    $C2D9   RND      V2, #D9         ; V2 = random & D9
$E5C    $F17B   UNKNOWN  F17B            ; Unknown Fxxx instruction
$E5E    $F1A2   UNKNOWN  F1A2            ; Unknown Fxxx instruction
$E60    $7E00   ADD      VE, #00         ; Add 0 to VE
$E62    $BA4C   JP       V0, $A4C        ; Jump to V0 + A4C
$E64    $CF87   RND      VF, #87         ; VF = random & 87
$E66    $7504   ADD      V5, #04         ; Add 4 to V5
$E68    $D14D   DRW      V1, V4, #D      ; Draw 13-byte sprite at V1, V4
$E6A    $E531   UNKNOWN  $E531           ; Unknown Exxx instruction
$E6C    $1605   JP       $605            ; Jump to 605
$E6E    $B2A4   JP       V0, $2A4        ; Jump to V0 + 2A4
$E70    $545A   UNKNOWN  $545A           ; Unknown 5xxx instruction
$E72    $1110   JP       $110            ; Jump to 110
$E74    $F938   UNKNOWN  F938            ; Unknown Fxxx instruction
$E76    $9494   UNKNOWN  $9494           ; Unknown 9xxx instruction
$E78    $6C52   LD       VC, #52         ; Load 82 into VC
$E7A    $BF4F   JP       V0, $F4F        ; Jump to V0 + F4F
$E7C    $7B48   ADD      VB, #48         ; Add 72 to VB
$E7E    $09C1   SYS      $9C1            ; System call to 9C1
$E80    $2837   CALL     $837            ; Call subroutine at 837
$E82    $8920   LD       V9, V2          ; V9 = V2
$E84    $4916   SNE      V9, #16         ; Skip if V9 != 22
$E86    $7646   ADD      V6, #46         ; Add 70 to V6
$E88    $6F8B   LD       VF, #8B         ; Load 139 into VF
$E8A    $57BE   UNKNOWN  $57BE           ; Unknown 5xxx instruction
$E8C    $8325   SUB      V3, V2          ; V3 -= V2, VF = !borrow
$E8E    $99AE   UNKNOWN  $99AE           ; Unknown 9xxx instruction
$E90    $C622   RND      V6, #22         ; V6 = random & 22
$E92    $EE3C   UNKNOWN  $EE3C           ; Unknown Exxx instruction
$E94    $6091   LD       V0, #91         ; Load 145 into V0
$E96    $E7DE   UNKNOWN  $E7DE           ; Unknown Exxx instruction
$E98    $008D   SYS      $08D            ; System call to 08D
$E9A    $AC22   LD       I, $C22         ; Load C22 into I
$E9C    $B1D0   JP       V0, $1D0        ; Jump to V0 + 1D0
$E9E    $CAE1   RND      VA, #E1         ; VA = random & E1
$EA0    $6857   LD       V8, #57         ; Load 87 into V8
$EA2    $6275   LD       V2, #75         ; Load 117 into V2
$EA4    $7EB0   ADD      VE, #B0         ; Add 176 to VE
$EA6    $8640   LD       V6, V4          ; V6 = V4
$EA8    $B509   JP       V0, $509        ; Jump to V0 + 509
$EAA    $32C1   SE       V2, #C1         ; Skip if V2 == 193
$EAC    $A671   LD       I, $671         ; Load 671 into I
$EAE    $761F   ADD      V6, #1F         ; Add 31 to V6
$EB0    $3288   SE       V2, #88         ; Skip if V2 == 136
$EB2    $371A   SE       V7, #1A         ; Skip if V7 == 26
$EB4    $76A0   ADD      V6, #A0         ; Add 160 to V6
$EB6    $6BF5   LD       VB, #F5         ; Load 245 into VB
$EB8    $7155   ADD      V1, #55         ; Add 85 to V1
$EBA    $765B   ADD      V6, #5B         ; Add 91 to V6
$EBC    $653C   LD       V5, #3C         ; Load 60 into V5
$EBE    $26FA   CALL     $6FA            ; Call subroutine at 6FA
$EC0    $BD0A   JP       V0, $D0A        ; Jump to V0 + D0A
$EC2    $0FFE   SYS      $FFE            ; System call to FFE
$EC4    $F7C5   UNKNOWN  F7C5            ; Unknown Fxxx instruction
$EC6    $1809   JP       $809            ; Jump to 809
$EC8    $71C6   ADD      V1, #C6         ; Add 198 to V1
$ECA    $C88C   RND      V8, #8C         ; V8 = random & 8C
$ECC    $505D   UNKNOWN  $505D           ; Unknown 5xxx instruction
$ECE    $CC05   RND      VC, #05         ; VC = random & 05
$ED0    $8E56   SHR      VE              ; VE >>= 1, VF = LSB
$ED2    $D344   DRW      V3, V4, #4      ; Draw 4-byte sprite at V3, V4
$ED4    $4A6D   SNE      VA, #6D         ; Skip if VA != 109
$ED6    $BDE6   JP       V0, $DE6        ; Jump to V0 + DE6
$ED8    $F75C   UNKNOWN  F75C            ; Unknown Fxxx instruction
$EDA    $2359   CALL     $359            ; Call subroutine at 359
$EDC    $0940   SYS      $940            ; System call to 940
$EDE    $C6E8   RND      V6, #E8         ; V6 = random & E8
$EE0    $3E78   SE       VE, #78         ; Skip if VE == 120
$EE2    $F5A3   UNKNOWN  F5A3            ; Unknown Fxxx instruction
$EE4    $A041   LD       I, $041         ; Load 041 into I
$EE6    $4ECD   SNE      VE, #CD         ; Skip if VE != 205
$EE8    $BB59   JP       V0, $B59        ; Jump to V0 + B59
$EEA    $FB98   UNKNOWN  FB98            ; Unknown Fxxx instruction
$EEC    $DE43   DRW      VE, V4, #3      ; Draw 3-byte sprite at VE, V4
$EEE    $D710   DRW      V7, V1, #0      ; Draw 0-byte sprite at V7, V1
$EF0    $1A1A   JP       $A1A            ; Jump to A1A
$EF2    $AB74   LD       I, $B74         ; Load B74 into I
$EF4    $4CAB   SNE      VC, #AB         ; Skip if VC != 171
$EF6    $E46C   UNKNOWN  $E46C           ; Unknown Exxx instruction
$EF8    $2AB4   CALL     $AB4            ; Call subroutine at AB4
$EFA    $EFDC   UNKNOWN  $EFDC           ; Unknown Exxx instruction
$EFC    $93C0   SNE      V3, VC          ; Skip if V3 != VC
$EFE    $D7D6   DRW      V7, VD, #6      ; Draw 6-byte sprite at V7, VD
$F00    $4D5A   SNE      VD, #5A         ; Skip if VD != 90
$F02    $42CB   SNE      V2, #CB         ; Skip if V2 != 203
$F04    $9AB4   UNKNOWN  $9AB4           ; Unknown 9xxx instruction
$F06    $AC6C   LD       I, $C6C         ; Load C6C into I
$F08    $6AE7   LD       VA, #E7         ; Load 231 into VA
$F0A    $4653   SNE      V6, #53         ; Skip if V6 != 83
$F0C    $9D8C   UNKNOWN  $9D8C           ; Unknown 9xxx instruction
$F0E    $A0FD   LD       I, $0FD         ; Load 0FD into I
$F10    $02A6   SYS      $2A6            ; System call to 2A6
$F12    $55C1   UNKNOWN  $55C1           ; Unknown 5xxx instruction
$F14    $7124   ADD      V1, #24         ; Add 36 to V1
$F16    $E0B6   UNKNOWN  $E0B6           ; Unknown Exxx instruction
$F18    $9F3B   UNKNOWN  $9F3B           ; Unknown 9xxx instruction
$F1A    $76A7   ADD      V6, #A7         ; Add 167 to V6
$F1C    $0D4D   SYS      $D4D            ; System call to D4D
$F1E    $2DB0   CALL     $DB0            ; Call subroutine at DB0
$F20    $D5DC   DRW      V5, VD, #C      ; Draw 12-byte sprite at V5, VD
$F22    $B92B   JP       V0, $92B        ; Jump to V0 + 92B
$F24    $23A2   CALL     $3A2            ; Call subroutine at 3A2
$F26    $C428   RND      V4, #28         ; V4 = random & 28
$F28    $E550   UNKNOWN  $E550           ; Unknown Exxx instruction
$F2A    $9D97   UNKNOWN  $9D97           ; Unknown 9xxx instruction
$F2C    $87D6   SHR      V7              ; V7 >>= 1, VF = LSB
$F2E    $DCEA   DRW      VC, VE, #A      ; Draw 10-byte sprite at VC, VE
$F30    $462F   SNE      V6, #2F         ; Skip if V6 != 47
$F32    $7444   ADD      V4, #44         ; Add 68 to V4
$F34    $E65F   UNKNOWN  $E65F           ; Unknown Exxx instruction
$F36    $38F0   SE       V8, #F0         ; Skip if V8 == 240
$F38    $0719   SYS      $719            ; System call to 719
$F3A    $5022   UNKNOWN  $5022           ; Unknown 5xxx instruction
$F3C    $C2BD   RND      V2, #BD         ; V2 = random & BD
$F3E    $F81A   UNKNOWN  F81A            ; Unknown Fxxx instruction
$F40    $488A   SNE      V8, #8A         ; Skip if V8 != 138
$F42    $7556   ADD      V5, #56         ; Add 86 to V5
$F44    $281C   CALL     $81C            ; Call subroutine at 81C
$F46    $48D6   SNE      V8, #D6         ; Skip if V8 != 214
$F48    $D797   DRW      V7, V9, #7      ; Draw 7-byte sprite at V7, V9
$F4A    $8D16   SHR      VD              ; VD >>= 1, VF = LSB
$F4C    $8F19   UNKNOWN  8F19            ; Unknown 8xxx instruction
$F4E    $835D   UNKNOWN  835D            ; Unknown 8xxx instruction
$F50    $7F0F   ADD      VF, #0F         ; Add 15 to VF
$F52    $862F   UNKNOWN  862F            ; Unknown 8xxx instruction
$F54    $C289   RND      V2, #89         ; V2 = random & 89
$F56    $A1C1   LD       I, $1C1         ; Load 1C1 into I
$F58    $2633   CALL     $633            ; Call subroutine at 633
$F5A    $5D84   UNKNOWN  $5D84           ; Unknown 5xxx instruction
$F5C    $23DB   CALL     $3DB            ; Call subroutine at 3DB
$F5E    $27D7   CALL     $7D7            ; Call subroutine at 7D7
$F60    $3EFB   SE       VE, #FB         ; Skip if VE == 251
$F62    $D7E1   DRW      V7, VE, #1      ; Draw 1-byte sprite at V7, VE
$F64    $2DD3   CALL     $DD3            ; Call subroutine at DD3
$F66    $2BB2   CALL     $BB2            ; Call subroutine at BB2
$F68    $A076   LD       I, $076         ; Load 076 into I
$F6A    $51BF   UNKNOWN  $51BF           ; Unknown 5xxx instruction
$F6C    $4C3E   SNE      VC, #3E         ; Skip if VC != 62
$F6E    $1241   JP       $241            ; Jump to 241
$F70    $6655   LD       V6, #55         ; Load 85 into V6
$F72    $DDFB   DRW      VD, VF, #B      ; Draw 11-byte sprite at VD, VF
$F74    $2F12   CALL     $F12            ; Call subroutine at F12
$F76    $D1CA   DRW      V1, VC, #A      ; Draw 10-byte sprite at V1, VC
$F78    $543C   UNKNOWN  $543C           ; Unknown 5xxx instruction
$F7A    $28E6   CALL     $8E6            ; Call subroutine at 8E6
$F7C    $53E5   UNKNOWN  $53E5           ; Unknown 5xxx instruction
$F7E    $ADCE   LD       I, $DCE         ; Load DCE into I
$F80    $75B5   ADD      V5, #B5         ; Add 181 to V5
$F82    $CA81   RND      VA, #81         ; VA = random & 81
$F84    $7C7B   ADD      VC, #7B         ; Add 123 to VC
$F86    $76EB   ADD      V6, #EB         ; Add 235 to V6
$F88    $2D8C   CALL     $D8C            ; Call subroutine at D8C
$F8A    $B9F0   JP       V0, $9F0        ; Jump to V0 + 9F0
$F8C    $02D6   SYS      $2D6            ; System call to 2D6
$F8E    $6DF1   LD       VD, #F1         ; Load 241 into VD
$F90    $408D   SNE      V0, #8D         ; Skip if V0 != 141
$F92    $C7D1   RND      V7, #D1         ; V7 = random & D1
$F94    $4BED   SNE      VB, #ED         ; Skip if VB != 237
$F96    $4234   SNE      V2, #34         ; Skip if V2 != 52
$F98    $9F56   UNKNOWN  $9F56           ; Unknown 9xxx instruction
$F9A    $124A   JP       $24A            ; Jump to 24A
$F9C    $74C9   ADD      V4, #C9         ; Add 201 to V4
$F9E    $8CF5   SUB      VC, VF          ; VC -= VF, VF = !borrow
$FA0    $EB6E   UNKNOWN  $EB6E           ; Unknown Exxx instruction
$FA2    $2052   CALL     $052            ; Call subroutine at 052
$FA4    $A939   LD       I, $939         ; Load 939 into I
$FA6    $4B98   SNE      VB, #98         ; Skip if VB != 152
$FA8    $C275   RND      V2, #75         ; V2 = random & 75
$FAA    $2FDE   CALL     $FDE            ; Call subroutine at FDE
$FAC    $A4E0   LD       I, $4E0         ; Load 4E0 into I
$FAE    $FAA1   UNKNOWN  FAA1            ; Unknown Fxxx instruction
$FB0    $4301   SNE      V3, #01         ; Skip if V3 != 1
$FB2    $1DDD   JP       $DDD            ; Jump to DDD
$FB4    $12E7   JP       $2E7            ; Jump to 2E7
$FB6    $3B87   SE       VB, #87         ; Skip if VB == 135
$FB8    $F5BF   UNKNOWN  F5BF            ; Unknown Fxxx instruction
$FBA    $F3ED   UNKNOWN  F3ED            ; Unknown Fxxx instruction
$FBC    $7906   ADD      V9, #06         ; Add 6 to V9
$FBE    $919F   UNKNOWN  $919F           ; Unknown 9xxx instruction
$FC0    $2993   CALL     $993            ; Call subroutine at 993
$FC2    $6F6B   LD       VF, #6B         ; Load 107 into VF
$FC4    $4304   SNE      V3, #04         ; Skip if V3 != 4
$FC6    $8798   UNKNOWN  8798            ; Unknown 8xxx instruction
$FC8    $536F   UNKNOWN  $536F           ; Unknown 5xxx instruction
$FCA    $0070   SYS      $070            ; System call to 070
$FCC    $FA11   UNKNOWN  FA11            ; Unknown Fxxx instruction
$FCE    $1A40   JP       $A40            ; Jump to A40
$FD0    $79BC   ADD      V9, #BC         ; Add 188 to V9
$FD2    $40E3   SNE      V0, #E3         ; Skip if V0 != 227
$FD4    $DD09   DRW      VD, V0, #9      ; Draw 9-byte sprite at VD, V0
$FD6    $0B89   SYS      $B89            ; System call to B89
$FD8    $B88E   JP       V0, $88E        ; Jump to V0 + 88E
$FDA    $1420   JP       $420            ; Jump to 420
$FDC    $1B67   JP       $B67            ; Jump to B67
$FDE    $5260   SE       V2, V6          ; Skip if V2 == V6
$FE0    $3A0D   SE       VA, #0D         ; Skip if VA == 13
$FE2    $094E   SYS      $94E            ; System call to 94E
$FE4    $B315   JP       V0, $315        ; Jump to V0 + 315
$FE6    $7AF8   ADD      VA, #F8         ; Add 248 to VA
$FE8    $F3C1   UNKNOWN  F3C1            ; Unknown Fxxx instruction
$FEA    $E219   UNKNOWN  $E219           ; Unknown Exxx instruction
$FEC    $E522   UNKNOWN  $E522           ; Unknown Exxx instruction
$FEE    $172A   JP       $72A            ; Jump to 72A
$FF0    $92FE   UNKNOWN  $92FE           ; Unknown 9xxx instruction
$FF2    $7335   ADD      V3, #35         ; Add 53 to V3
$FF4    $7384   ADD      V3, #84         ; Add 132 to V3
$FF6    $1959   JP       $959            ; Jump to 959
$FF8    $3888   SE       V8, #88         ; Skip if V8 == 136
$FFA    $4A50   SNE      VA, #50         ; Skip if VA != 80
$FFC    $DD4B   DRW      VD, V4, #B      ; Draw 11-byte sprite at VD, V4
$FFE    $F2DD   UNKNOWN  F2DD            ; Unknown Fxxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 454 (25.4%)
  JP      : 243 (13.6%)
  LD      : 230 (12.8%)
  SYS     : 138 ( 7.7%)
  ADD     : 134 ( 7.5%)
  SNE     : 128 ( 7.2%)
  CALL    : 115 ( 6.4%)
  RND     : 111 ( 6.2%)
  DRW     : 104 ( 5.8%)
  SE      :  95 ( 5.3%)
  OR      :  10 ( 0.6%)
  SHR     :   9 ( 0.5%)
  SUBN    :   5 ( 0.3%)
  XOR     :   4 ( 0.2%)
  SUB     :   4 ( 0.2%)
  SHL     :   3 ( 0.2%)
  AND     :   2 ( 0.1%)
  SKP     :   1 ( 0.1%)

Memory Operations: 364 (20.3%)
Arithmetic Operations: 159 (8.9%)
