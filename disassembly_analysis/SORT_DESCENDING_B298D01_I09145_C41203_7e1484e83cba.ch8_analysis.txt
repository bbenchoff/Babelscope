
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B298D01_I09145_C41203_7e1484e83cba.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 298
Instance: 9145
Direction: descending
Final Array: [68, 68, 68, 68, 68, 68, 68, 19]
Operations: R:0 W:7 C:136 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 87
Sort Array References:
  $20A: LD I, $783 ; Load 783 into I
  $20E: LD I, $E49 ; Load E49 into I
  $21E: LD I, $5CA ; Load 5CA into I
  $260: LD I, $321 ; Load 321 into I
  $318: LD I, $8CB ; Load 8CB into I
  $340: LD I, $12F ; Load 12F into I
  $374: LD I, $5E8 ; Load 5E8 into I
  $3B6: LD I, $212 ; Load 212 into I
  $3BA: LD I, $7DB ; Load 7DB into I
  $3BE: LD I, $8AF ; Load 8AF into I
  $3D6: LD I, $ECD ; Load ECD into I
  $400: LD I, $DFB ; Load DFB into I
  $402: LD I, $3E7 ; Load 3E7 into I
  $44A: LD I, $657 ; Load 657 into I
  $488: LD I, $8E2 ; Load 8E2 into I
  $4BE: LD I, $EE7 ; Load EE7 into I
  $500: LD I, $A26 ; Load A26 into I
  $506: LD I, $D34 ; Load D34 into I
  $558: LD I, $8B0 ; Load 8B0 into I
  $57A: LD I, $389 ; Load 389 into I
  $5A8: LD I, $47F ; Load 47F into I
  $5C6: LD I, $B36 ; Load B36 into I
  $5D8: LD I, $FA2 ; Load FA2 into I
  $5E2: LD I, $DD3 ; Load DD3 into I
  $63E: LD I, $6F7 ; Load 6F7 into I
  $6BA: LD I, $2FC ; Load 2FC into I
  $6DA: LD I, $215 ; Load 215 into I
  $6E4: LD I, $B1B ; Load B1B into I
  $6E6: LD I, $09E ; Load 09E into I
  $746: LD [I], V0 ; Store V0-V0 at I
  $77C: LD I, $C58 ; Load C58 into I
  $790: LD I, $8E7 ; Load 8E7 into I
  $7AA: LD I, $595 ; Load 595 into I
  $7E2: LD I, $50E ; Load 50E into I
  $7EE: LD I, $663 ; Load 663 into I
  $7F8: LD I, $FAB ; Load FAB into I
  $81C: LD I, $BA6 ; Load BA6 into I
  $862: LD I, $DB5 ; Load DB5 into I
  $872: LD I, $717 ; Load 717 into I
  $8AC: LD I, $234 ; Load 234 into I
  $8CC: LD I, $AC4 ; Load AC4 into I
  $950: LD I, $AB0 ; Load AB0 into I
  $974: LD I, $E5B ; Load E5B into I
  $99A: LD I, $00B ; Load 00B into I
  $A2E: LD I, $04D ; Load 04D into I
  $A30: LD I, $1CA ; Load 1CA into I
  $A32: LD I, $618 ; Load 618 into I
  $A38: LD I, $B1D ; Load B1D into I
  $A52: LD I, $BC5 ; Load BC5 into I
  $AA8: LD I, $97F ; Load 97F into I
  $AB4: LD I, $843 ; Load 843 into I
  $AEE: LD I, $F3F ; Load F3F into I
  $B20: LD I, $A8C ; Load A8C into I
  $B26: LD I, $16A ; Load 16A into I
  $B3A: LD [I], VC ; Store V0-VC at I
  $B5E: LD I, $DA5 ; Load DA5 into I
  $B68: LD I, $B9C ; Load B9C into I
  $BB0: LD I, $87C ; Load 87C into I
  $BF6: LD I, $5BD ; Load 5BD into I
  $C2C: LD I, $049 ; Load 049 into I
  $C2E: LD I, $34E ; Load 34E into I
  $C7E: LD I, $B95 ; Load B95 into I
  $C9A: LD I, $B54 ; Load B54 into I
  $CD0: LD I, $8ED ; Load 8ED into I
  $CDE: LD I, $598 ; Load 598 into I
  $CF4: LD I, $291 ; Load 291 into I
  $D22: LD I, $599 ; Load 599 into I
  $D60: LD I, $293 ; Load 293 into I
  $DF6: LD I, $421 ; Load 421 into I
  $E24: LD I, $B88 ; Load B88 into I
  $E34: LD I, $D72 ; Load D72 into I
  $E6C: LD I, $7ED ; Load 7ED into I
  $E7E: LD I, $2D4 ; Load 2D4 into I
  $E94: LD I, $A72 ; Load A72 into I
  $EA4: LD I, $46E ; Load 46E into I
  $EF6: LD I, $F07 ; Load F07 into I
  $F0A: LD I, $50F ; Load 50F into I
  $F0C: LD I, $0C9 ; Load 0C9 into I
  $F1A: LD I, $7C1 ; Load 7C1 into I
  $F24: LD I, $DD5 ; Load DD5 into I
  $F5C: LD I, $E46 ; Load E46 into I
  $F5E: LD I, $7EE ; Load 7EE into I
  $F70: LD I, $C2B ; Load C2B into I
  $F78: LD I, $C73 ; Load C73 into I
  $FA0: LD I, $F35 ; Load F35 into I
  $FA2: LD I, $6EE ; Load 6EE into I
  $FD6: LD I, $2EE ; Load 2EE into I

CONTROL FLOW ANALYSIS:
Jumps: 217
Calls: 93
Branches: 300
Loops: 128
Loop Structures:
  $328 -> $045 (backward jump)
  $3C2 -> $1B8 (backward jump)
  $41A -> $299 (backward jump)
  $45E -> $13F (backward jump)
  $49A -> $187 (backward jump)
  $49E -> $16B (backward jump)
  $50C -> $330 (backward jump)
  $542 -> $256 (backward jump)
  $5C4 -> $579 (backward jump)
  $5F0 -> $362 (backward jump)
  $5FA -> $193 (backward jump)
  $61A -> $234 (backward jump)
  $652 -> $388 (backward jump)
  $666 -> $012 (backward jump)
  $6A8 -> $3EC (backward jump)
  $6DE -> $02F (backward jump)
  $6F0 -> $27E (backward jump)
  $716 -> $29F (backward jump)
  $71E -> $3A9 (backward jump)
  $72C -> $427 (backward jump)
  $73C -> $1BD (backward jump)
  $76A -> $217 (backward jump)
  $772 -> $49E (backward jump)
  $77E -> $171 (backward jump)
  $7A4 -> $38B (backward jump)
  $7E6 -> $4CA (backward jump)
  $7F0 -> $466 (backward jump)
  $840 -> $48D (backward jump)
  $84C -> $425 (backward jump)
  $84E -> $7AA (backward jump)
  $866 -> $217 (backward jump)
  $88A -> $6E1 (backward jump)
  $89A -> $804 (backward jump)
  $8A0 -> $43A (backward jump)
  $8EE -> $1E9 (backward jump)
  $940 -> $845 (backward jump)
  $96C -> $4ED (backward jump)
  $978 -> $532 (backward jump)
  $97E -> $640 (backward jump)
  $98E -> $0BC (backward jump)
  $994 -> $12B (backward jump)
  $9AC -> $86A (backward jump)
  $9AE -> $2B6 (backward jump)
  $9BE -> $252 (backward jump)
  $9CC -> $9A1 (backward jump)
  $9E2 -> $933 (backward jump)
  $9EA -> $3AC (backward jump)
  $9F2 -> $3C5 (backward jump)
  $A04 -> $217 (backward jump)
  $A0C -> $733 (backward jump)
  $A0E -> $68F (backward jump)
  $A28 -> $203 (backward jump)
  $A36 -> $275 (backward jump)
  $A46 -> $6CA (backward jump)
  $A50 -> $26A (backward jump)
  $A58 -> $A38 (backward jump)
  $A5A -> $10B (backward jump)
  $A5E -> $981 (backward jump)
  $A68 -> $5DA (backward jump)
  $A70 -> $9FB (backward jump)
  $A92 -> $15E (backward jump)
  $A9A -> $1A9 (backward jump)
  $AA0 -> $47E (backward jump)
  $AC2 -> $44C (backward jump)
  $ACE -> $43C (backward jump)
  $AFA -> $066 (backward jump)
  $B0E -> $562 (backward jump)
  $B46 -> $950 (backward jump)
  $B4A -> $381 (backward jump)
  $B54 -> $4ED (backward jump)
  $B56 -> $8F9 (backward jump)
  $B6C -> $6FD (backward jump)
  $B70 -> $4DB (backward jump)
  $B72 -> $B33 (backward jump)
  $B92 -> $B80 (backward jump)
  $BBE -> $342 (backward jump)
  $BD6 -> $672 (backward jump)
  $BDE -> $0EE (backward jump)
  $BE8 -> $823 (backward jump)
  $BF0 -> $16F (backward jump)
  $C04 -> $9CF (backward jump)
  $C52 -> $BAF (backward jump)
  $C58 -> $8F8 (backward jump)
  $C5A -> $222 (backward jump)
  $C60 -> $8C8 (backward jump)
  $CB8 -> $008 (backward jump)
  $CBC -> $B0A (backward jump)
  $CCA -> $669 (backward jump)
  $CFA -> $15F (backward jump)
  $D04 -> $378 (backward jump)
  $D0A -> $150 (backward jump)
  $D12 -> $686 (backward jump)
  $D1E -> $A18 (backward jump)
  $D2E -> $3F7 (backward jump)
  $D34 -> $ACD (backward jump)
  $D40 -> $AF1 (backward jump)
  $D4E -> $BDB (backward jump)
  $D72 -> $A85 (backward jump)
  $D7E -> $3B8 (backward jump)
  $D98 -> $98A (backward jump)
  $DB6 -> $CE9 (backward jump)
  $DC0 -> $212 (backward jump)
  $DDC -> $1A8 (backward jump)
  $DF0 -> $769 (backward jump)
  $E0C -> $A6A (backward jump)
  $E22 -> $6C7 (backward jump)
  $E70 -> $BA7 (backward jump)
  $E84 -> $201 (backward jump)
  $E86 -> $CF6 (backward jump)
  $E8A -> $B1F (backward jump)
  $E90 -> $80E (backward jump)
  $EA6 -> $99E (backward jump)
  $EB4 -> $42D (backward jump)
  $EBA -> $E9D (backward jump)
  $EBE -> $D07 (backward jump)
  $ED6 -> $BA4 (backward jump)
  $F08 -> $21F (backward jump)
  $F42 -> $8F5 (backward jump)
  $F4E -> $7D5 (backward jump)
  $F64 -> $270 (backward jump)
  $F6A -> $8FF (backward jump)
  $FA6 -> $851 (backward jump)
  $FAC -> $C97 (backward jump)
  $FB4 -> $F8E (backward jump)
  $FB8 -> $205 (backward jump)
  $FC2 -> $C94 (backward jump)
  $FCA -> $DB8 (backward jump)
  $FDC -> $59D (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $6CF0   LD       VC, #F0         ; Load 240 into VC
$202    $55DF   UNKNOWN  $55DF           ; Unknown 5xxx instruction
$204    $81C7   SUBN     V1, VC          ; V1 = VC - V1, VF = !borrow
$206    $5FE0   SE       VF, VE          ; Skip if VF == VE
$208    $1C79   JP       $C79            ; Jump to C79
$20A    $A783   LD       I, $783         ; Load 783 into I
$20C    $38B0   SE       V8, #B0         ; Skip if V8 == 176
$20E    $AE49   LD       I, $E49         ; Load E49 into I
$210    $CC38   RND      VC, #38         ; VC = random & 38
$212    $5C03   UNKNOWN  $5C03           ; Unknown 5xxx instruction
$214    $41D8   SNE      V1, #D8         ; Skip if V1 != 216
$216    $1CE8   JP       $CE8            ; Jump to CE8
$218    $EDB0   UNKNOWN  $EDB0           ; Unknown Exxx instruction
$21A    $5B58   UNKNOWN  $5B58           ; Unknown 5xxx instruction
$21C    $29CB   CALL     $9CB            ; Call subroutine at 9CB
$21E    $A5CA   LD       I, $5CA         ; Load 5CA into I
$220    $756A   ADD      V5, #6A         ; Add 106 to V5
$222    $20D5   CALL     $0D5            ; Call subroutine at 0D5
$224    $20F9   CALL     $0F9            ; Call subroutine at 0F9
$226    $33C2   SE       V3, #C2         ; Skip if V3 == 194
$228    $F1BF   UNKNOWN  F1BF            ; Unknown Fxxx instruction
$22A    $52D7   UNKNOWN  $52D7           ; Unknown 5xxx instruction
$22C    $5721   UNKNOWN  $5721           ; Unknown 5xxx instruction
$22E    $1BF9   JP       $BF9            ; Jump to BF9
$230    $D0D4   DRW      V0, VD, #4      ; Draw 4-byte sprite at V0, VD
$232    $5BA8   UNKNOWN  $5BA8           ; Unknown 5xxx instruction
$234    $0E72   SYS      $E72            ; System call to E72
$236    $4205   SNE      V2, #05         ; Skip if V2 != 5
$238    $C089   RND      V0, #89         ; V0 = random & 89
$23A    $293F   CALL     $93F            ; Call subroutine at 93F
$23C    $940D   UNKNOWN  $940D           ; Unknown 9xxx instruction
$23E    $56D0   SE       V6, VD          ; Skip if V6 == VD
$240    $5718   UNKNOWN  $5718           ; Unknown 5xxx instruction
$242    $CF67   RND      VF, #67         ; VF = random & 67
$244    $7A5F   ADD      VA, #5F         ; Add 95 to VA
$246    $267F   CALL     $67F            ; Call subroutine at 67F
$248    $7446   ADD      V4, #46         ; Add 70 to V4
$24A    $C9C9   RND      V9, #C9         ; V9 = random & C9
$24C    $5831   UNKNOWN  $5831           ; Unknown 5xxx instruction
$24E    $FA62   UNKNOWN  FA62            ; Unknown Fxxx instruction
$250    $340A   SE       V4, #0A         ; Skip if V4 == 10
$252    $1D16   JP       $D16            ; Jump to D16
$254    $0C6E   SYS      $C6E            ; System call to C6E
$256    $754A   ADD      V5, #4A         ; Add 74 to V5
$258    $C99F   RND      V9, #9F         ; V9 = random & 9F
$25A    $0705   SYS      $705            ; System call to 705
$25C    $8BF5   SUB      VB, VF          ; VB -= VF, VF = !borrow
$25E    $9116   UNKNOWN  $9116           ; Unknown 9xxx instruction
$260    $A321   LD       I, $321         ; Load 321 into I
$262    $DA0C   DRW      VA, V0, #C      ; Draw 12-byte sprite at VA, V0
$264    $96D5   UNKNOWN  $96D5           ; Unknown 9xxx instruction
$266    $7BBF   ADD      VB, #BF         ; Add 191 to VB
$268    $95C1   UNKNOWN  $95C1           ; Unknown 9xxx instruction
$26A    $540F   UNKNOWN  $540F           ; Unknown 5xxx instruction
$26C    $6638   LD       V6, #38         ; Load 56 into V6
$26E    $424A   SNE      V2, #4A         ; Skip if V2 != 74
$270    $BEA7   JP       V0, $EA7        ; Jump to V0 + EA7
$272    $DF9E   DRW      VF, V9, #E      ; Draw 14-byte sprite at VF, V9
$274    $8F9F   UNKNOWN  8F9F            ; Unknown 8xxx instruction
$276    $3727   SE       V7, #27         ; Skip if V7 == 39
$278    $456F   SNE      V5, #6F         ; Skip if V5 != 111
$27A    $E05C   UNKNOWN  $E05C           ; Unknown Exxx instruction
$27C    $4838   SNE      V8, #38         ; Skip if V8 != 56
$27E    $6ED1   LD       VE, #D1         ; Load 209 into VE
$280    $4444   SNE      V4, #44         ; Skip if V4 != 68
$282    $4444   SNE      V4, #44         ; Skip if V4 != 68
$284    $4444   SNE      V4, #44         ; Skip if V4 != 68
$286    $4444   SNE      V4, #44         ; Skip if V4 != 68
$288    $4444   SNE      V4, #44         ; Skip if V4 != 68
$28A    $4444   SNE      V4, #44         ; Skip if V4 != 68
$28C    $4444   SNE      V4, #44         ; Skip if V4 != 68
$28E    $4444   SNE      V4, #44         ; Skip if V4 != 68
$290    $4444   SNE      V4, #44         ; Skip if V4 != 68
$292    $4444   SNE      V4, #44         ; Skip if V4 != 68
$294    $4444   SNE      V4, #44         ; Skip if V4 != 68
$296    $4444   SNE      V4, #44         ; Skip if V4 != 68
$298    $4444   SNE      V4, #44         ; Skip if V4 != 68
$29A    $4444   SNE      V4, #44         ; Skip if V4 != 68
$29C    $4444   SNE      V4, #44         ; Skip if V4 != 68
$29E    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2A0    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2A2    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2A4    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2A6    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2A8    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2AA    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2AC    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2AE    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2B0    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2B2    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2B4    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2B6    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2B8    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2BA    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2BC    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2BE    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2C0    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2C2    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2C4    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2C6    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2C8    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2CA    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2CC    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2CE    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2D0    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2D2    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2D4    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2D6    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2D8    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2DA    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2DC    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2DE    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2E0    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2E2    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2E4    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2E6    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2E8    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2EA    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2EC    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2EE    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2F0    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2F2    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2F4    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2F6    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2F8    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2FA    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2FC    $4444   SNE      V4, #44         ; Skip if V4 != 68
$2FE    $4444   SNE      V4, #44         ; Skip if V4 != 68
$300    $4444   SNE      V4, #44         ; Skip if V4 != 68
$302    $4444   SNE      V4, #44         ; Skip if V4 != 68
$304    $4444   SNE      V4, #44         ; Skip if V4 != 68
$306    $4413   SNE      V4, #13         ; Skip if V4 != 19
$308    $3AEE   SE       VA, #EE         ; Skip if VA == 238
$30A    $365B   SE       V6, #5B         ; Skip if V6 == 91
$30C    $609B   LD       V0, #9B         ; Load 155 into V0
$30E    $94E1   UNKNOWN  $94E1           ; Unknown 9xxx instruction
$310    $9A81   UNKNOWN  $9A81           ; Unknown 9xxx instruction
$312    $8504   ADD      V5, V0          ; V5 += V0, VF = carry
$314    $1EBC   JP       $EBC            ; Jump to EBC
$316    $75DF   ADD      V5, #DF         ; Add 223 to V5
$318    $A8CB   LD       I, $8CB         ; Load 8CB into I
$31A    $41EB   SNE      V1, #EB         ; Skip if V1 != 235
$31C    $C014   RND      V0, #14         ; V0 = random & 14
$31E    $59BE   UNKNOWN  $59BE           ; Unknown 5xxx instruction
$320    $16ED   JP       $6ED            ; Jump to 6ED
$322    $FECD   UNKNOWN  FECD            ; Unknown Fxxx instruction
$324    $7817   ADD      V8, #17         ; Add 23 to V8
$326    $850E   SHL      V5              ; V5 <<= 1, VF = MSB
$328    $B045   JP       V0, $045        ; Jump to V0 + 045
$32A    $4198   SNE      V1, #98         ; Skip if V1 != 152
$32C    $F4C6   UNKNOWN  F4C6            ; Unknown Fxxx instruction
$32E    $4A90   SNE      VA, #90         ; Skip if VA != 144
$330    $53DF   UNKNOWN  $53DF           ; Unknown 5xxx instruction
$332    $C3B1   RND      V3, #B1         ; V3 = random & B1
$334    $2E67   CALL     $E67            ; Call subroutine at E67
$336    $C41C   RND      V4, #1C         ; V4 = random & 1C
$338    $85E8   UNKNOWN  85E8            ; Unknown 8xxx instruction
$33A    $6750   LD       V7, #50         ; Load 80 into V7
$33C    $3B26   SE       VB, #26         ; Skip if VB == 38
$33E    $156B   JP       $56B            ; Jump to 56B
$340    $A12F   LD       I, $12F         ; Load 12F into I
$342    $9C3E   UNKNOWN  $9C3E           ; Unknown 9xxx instruction
$344    $6D4A   LD       VD, #4A         ; Load 74 into VD
$346    $CFF4   RND      VF, #F4         ; VF = random & F4
$348    $2858   CALL     $858            ; Call subroutine at 858
$34A    $0FFB   SYS      $FFB            ; System call to FFB
$34C    $4573   SNE      V5, #73         ; Skip if V5 != 115
$34E    $0002   SYS      $002            ; System call to 002
$350    $76DE   ADD      V6, #DE         ; Add 222 to V6
$352    $6D3E   LD       VD, #3E         ; Load 62 into VD
$354    $638C   LD       V3, #8C         ; Load 140 into V3
$356    $5CE9   UNKNOWN  $5CE9           ; Unknown 5xxx instruction
$358    $15A4   JP       $5A4            ; Jump to 5A4
$35A    $5143   UNKNOWN  $5143           ; Unknown 5xxx instruction
$35C    $BBD9   JP       V0, $BD9        ; Jump to V0 + BD9
$35E    $689D   LD       V8, #9D         ; Load 157 into V8
$360    $6987   LD       V9, #87         ; Load 135 into V9
$362    $3191   SE       V1, #91         ; Skip if V1 == 145
$364    $3D79   SE       VD, #79         ; Skip if VD == 121
$366    $7CC9   ADD      VC, #C9         ; Add 201 to VC
$368    $C78B   RND      V7, #8B         ; V7 = random & 8B
$36A    $2F5C   CALL     $F5C            ; Call subroutine at F5C
$36C    $EA9E   SKP      VA              ; Skip if key VA pressed
$36E    $C787   RND      V7, #87         ; V7 = random & 87
$370    $7FEA   ADD      VF, #EA         ; Add 234 to VF
$372    $711D   ADD      V1, #1D         ; Add 29 to V1
$374    $A5E8   LD       I, $5E8         ; Load 5E8 into I
$376    $4EE2   SNE      VE, #E2         ; Skip if VE != 226
$378    $7DFE   ADD      VD, #FE         ; Add 254 to VD
$37A    $340F   SE       V4, #0F         ; Skip if V4 == 15
$37C    $513D   UNKNOWN  $513D           ; Unknown 5xxx instruction
$37E    $5C27   UNKNOWN  $5C27           ; Unknown 5xxx instruction
$380    $364A   SE       V6, #4A         ; Skip if V6 == 74
$382    $2455   CALL     $455            ; Call subroutine at 455
$384    $1FEE   JP       $FEE            ; Jump to FEE
$386    $DD71   DRW      VD, V7, #1      ; Draw 1-byte sprite at VD, V7
$388    $299B   CALL     $99B            ; Call subroutine at 99B
$38A    $95E6   UNKNOWN  $95E6           ; Unknown 9xxx instruction
$38C    $3F41   SE       VF, #41         ; Skip if VF == 65
$38E    $5398   UNKNOWN  $5398           ; Unknown 5xxx instruction
$390    $75B4   ADD      V5, #B4         ; Add 180 to V5
$392    $4B1A   SNE      VB, #1A         ; Skip if VB != 26
$394    $9413   UNKNOWN  $9413           ; Unknown 9xxx instruction
$396    $F126   UNKNOWN  F126            ; Unknown Fxxx instruction
$398    $0487   SYS      $487            ; System call to 487
$39A    $29D3   CALL     $9D3            ; Call subroutine at 9D3
$39C    $E926   UNKNOWN  $E926           ; Unknown Exxx instruction
$39E    $31BE   SE       V1, #BE         ; Skip if V1 == 190
$3A0    $0003   SYS      $003            ; System call to 003
$3A2    $D152   DRW      V1, V5, #2      ; Draw 2-byte sprite at V1, V5
$3A4    $73E7   ADD      V3, #E7         ; Add 231 to V3
$3A6    $4C4A   SNE      VC, #4A         ; Skip if VC != 74
$3A8    $33BC   SE       V3, #BC         ; Skip if V3 == 188
$3AA    $D66C   DRW      V6, V6, #C      ; Draw 12-byte sprite at V6, V6
$3AC    $3391   SE       V3, #91         ; Skip if V3 == 145
$3AE    $6C69   LD       VC, #69         ; Load 105 into VC
$3B0    $4A1B   SNE      VA, #1B         ; Skip if VA != 27
$3B2    $C01F   RND      V0, #1F         ; V0 = random & 1F
$3B4    $7BAC   ADD      VB, #AC         ; Add 172 to VB
$3B6    $A212   LD       I, $212         ; Load 212 into I
$3B8    $5E19   UNKNOWN  $5E19           ; Unknown 5xxx instruction
$3BA    $A7DB   LD       I, $7DB         ; Load 7DB into I
$3BC    $F176   UNKNOWN  F176            ; Unknown Fxxx instruction
$3BE    $A8AF   LD       I, $8AF         ; Load 8AF into I
$3C0    $BC4B   JP       V0, $C4B        ; Jump to V0 + C4B
$3C2    $B1B8   JP       V0, $1B8        ; Jump to V0 + 1B8
$3C4    $B9FA   JP       V0, $9FA        ; Jump to V0 + 9FA
$3C6    $42CC   SNE      V2, #CC         ; Skip if V2 != 204
$3C8    $4022   SNE      V0, #22         ; Skip if V0 != 34
$3CA    $9EFD   UNKNOWN  $9EFD           ; Unknown 9xxx instruction
$3CC    $527B   UNKNOWN  $527B           ; Unknown 5xxx instruction
$3CE    $6466   LD       V4, #66         ; Load 102 into V4
$3D0    $45B2   SNE      V5, #B2         ; Skip if V5 != 178
$3D2    $C495   RND      V4, #95         ; V4 = random & 95
$3D4    $60F7   LD       V0, #F7         ; Load 247 into V0
$3D6    $AECD   LD       I, $ECD         ; Load ECD into I
$3D8    $FDD6   UNKNOWN  FDD6            ; Unknown Fxxx instruction
$3DA    $CDF8   RND      VD, #F8         ; VD = random & F8
$3DC    $3B04   SE       VB, #04         ; Skip if VB == 4
$3DE    $F3CA   UNKNOWN  F3CA            ; Unknown Fxxx instruction
$3E0    $59FC   UNKNOWN  $59FC           ; Unknown 5xxx instruction
$3E2    $47C1   SNE      V7, #C1         ; Skip if V7 != 193
$3E4    $8751   OR       V7, V5          ; V7 |= V5
$3E6    $E83A   UNKNOWN  $E83A           ; Unknown Exxx instruction
$3E8    $FAA9   UNKNOWN  FAA9            ; Unknown Fxxx instruction
$3EA    $C585   RND      V5, #85         ; V5 = random & 85
$3EC    $D9F8   DRW      V9, VF, #8      ; Draw 8-byte sprite at V9, VF
$3EE    $C989   RND      V9, #89         ; V9 = random & 89
$3F0    $606B   LD       V0, #6B         ; Load 107 into V0
$3F2    $9C5D   UNKNOWN  $9C5D           ; Unknown 9xxx instruction
$3F4    $BA95   JP       V0, $A95        ; Jump to V0 + A95
$3F6    $F484   UNKNOWN  F484            ; Unknown Fxxx instruction
$3F8    $8E66   SHR      VE              ; VE >>= 1, VF = LSB
$3FA    $C476   RND      V4, #76         ; V4 = random & 76
$3FC    $FD05   UNKNOWN  FD05            ; Unknown Fxxx instruction
$3FE    $251D   CALL     $51D            ; Call subroutine at 51D
$400    $ADFB   LD       I, $DFB         ; Load DFB into I
$402    $A3E7   LD       I, $3E7         ; Load 3E7 into I
$404    $C6E0   RND      V6, #E0         ; V6 = random & E0
$406    $81D5   SUB      V1, VD          ; V1 -= VD, VF = !borrow
$408    $7EEB   ADD      VE, #EB         ; Add 235 to VE
$40A    $489A   SNE      V8, #9A         ; Skip if V8 != 154
$40C    $028B   SYS      $28B            ; System call to 28B
$40E    $0DB7   SYS      $DB7            ; System call to DB7
$410    $7F16   ADD      VF, #16         ; Add 22 to VF
$412    $27B7   CALL     $7B7            ; Call subroutine at 7B7
$414    $B67B   JP       V0, $67B        ; Jump to V0 + 67B
$416    $E664   UNKNOWN  $E664           ; Unknown Exxx instruction
$418    $9646   UNKNOWN  $9646           ; Unknown 9xxx instruction
$41A    $1299   JP       $299            ; Jump to 299
$41C    $6DC5   LD       VD, #C5         ; Load 197 into VD
$41E    $B4FB   JP       V0, $4FB        ; Jump to V0 + 4FB
$420    $F279   UNKNOWN  F279            ; Unknown Fxxx instruction
$422    $C82A   RND      V8, #2A         ; V8 = random & 2A
$424    $025B   SYS      $25B            ; System call to 25B
$426    $C657   RND      V6, #57         ; V6 = random & 57
$428    $46D0   SNE      V6, #D0         ; Skip if V6 != 208
$42A    $8528   UNKNOWN  8528            ; Unknown 8xxx instruction
$42C    $C997   RND      V9, #97         ; V9 = random & 97
$42E    $2183   CALL     $183            ; Call subroutine at 183
$430    $6560   LD       V5, #60         ; Load 96 into V5
$432    $4D24   SNE      VD, #24         ; Skip if VD != 36
$434    $26C2   CALL     $6C2            ; Call subroutine at 6C2
$436    $4070   SNE      V0, #70         ; Skip if V0 != 112
$438    $4D44   SNE      VD, #44         ; Skip if VD != 68
$43A    $CF1A   RND      VF, #1A         ; VF = random & 1A
$43C    $899D   UNKNOWN  899D            ; Unknown 8xxx instruction
$43E    $991E   UNKNOWN  $991E           ; Unknown 9xxx instruction
$440    $58A9   UNKNOWN  $58A9           ; Unknown 5xxx instruction
$442    $8300   LD       V3, V0          ; V3 = V0
$444    $9580   SNE      V5, V8          ; Skip if V5 != V8
$446    $265E   CALL     $65E            ; Call subroutine at 65E
$448    $4981   SNE      V9, #81         ; Skip if V9 != 129
$44A    $A657   LD       I, $657         ; Load 657 into I
$44C    $8E2F   UNKNOWN  8E2F            ; Unknown 8xxx instruction
$44E    $FC6A   UNKNOWN  FC6A            ; Unknown Fxxx instruction
$450    $F741   UNKNOWN  F741            ; Unknown Fxxx instruction
$452    $B744   JP       V0, $744        ; Jump to V0 + 744
$454    $F8F4   UNKNOWN  F8F4            ; Unknown Fxxx instruction
$456    $F083   UNKNOWN  F083            ; Unknown Fxxx instruction
$458    $91EB   UNKNOWN  $91EB           ; Unknown 9xxx instruction
$45A    $B990   JP       V0, $990        ; Jump to V0 + 990
$45C    $41A6   SNE      V1, #A6         ; Skip if V1 != 166
$45E    $B13F   JP       V0, $13F        ; Jump to V0 + 13F
$460    $ECBC   UNKNOWN  $ECBC           ; Unknown Exxx instruction
$462    $3924   SE       V9, #24         ; Skip if V9 == 36
$464    $8E5C   UNKNOWN  8E5C            ; Unknown 8xxx instruction
$466    $D332   DRW      V3, V3, #2      ; Draw 2-byte sprite at V3, V3
$468    $7E43   ADD      VE, #43         ; Add 67 to VE
$46A    $E054   UNKNOWN  $E054           ; Unknown Exxx instruction
$46C    $D828   DRW      V8, V2, #8      ; Draw 8-byte sprite at V8, V2
$46E    $BC8C   JP       V0, $C8C        ; Jump to V0 + C8C
$470    $0C2C   SYS      $C2C            ; System call to C2C
$472    $FC58   UNKNOWN  FC58            ; Unknown Fxxx instruction
$474    $0B09   SYS      $B09            ; System call to B09
$476    $F24C   UNKNOWN  F24C            ; Unknown Fxxx instruction
$478    $3ADF   SE       VA, #DF         ; Skip if VA == 223
$47A    $5BDE   UNKNOWN  $5BDE           ; Unknown 5xxx instruction
$47C    $5592   UNKNOWN  $5592           ; Unknown 5xxx instruction
$47E    $989B   UNKNOWN  $989B           ; Unknown 9xxx instruction
$480    $6751   LD       V7, #51         ; Load 81 into V7
$482    $411A   SNE      V1, #1A         ; Skip if V1 != 26
$484    $5AA9   UNKNOWN  $5AA9           ; Unknown 5xxx instruction
$486    $2AC1   CALL     $AC1            ; Call subroutine at AC1
$488    $A8E2   LD       I, $8E2         ; Load 8E2 into I
$48A    $CD3A   RND      VD, #3A         ; VD = random & 3A
$48C    $82D8   UNKNOWN  82D8            ; Unknown 8xxx instruction
$48E    $0546   SYS      $546            ; System call to 546
$490    $CE21   RND      VE, #21         ; VE = random & 21
$492    $5CFD   UNKNOWN  $5CFD           ; Unknown 5xxx instruction
$494    $79EA   ADD      V9, #EA         ; Add 234 to V9
$496    $C164   RND      V1, #64         ; V1 = random & 64
$498    $6172   LD       V1, #72         ; Load 114 into V1
$49A    $1187   JP       $187            ; Jump to 187
$49C    $4553   SNE      V5, #53         ; Skip if V5 != 83
$49E    $B16B   JP       V0, $16B        ; Jump to V0 + 16B
$4A0    $3983   SE       V9, #83         ; Skip if V9 == 131
$4A2    $8071   OR       V0, V7          ; V0 |= V7
$4A4    $BEED   JP       V0, $EED        ; Jump to V0 + EED
$4A6    $CF18   RND      VF, #18         ; VF = random & 18
$4A8    $778C   ADD      V7, #8C         ; Add 140 to V7
$4AA    $E3E5   UNKNOWN  $E3E5           ; Unknown Exxx instruction
$4AC    $73CB   ADD      V3, #CB         ; Add 203 to V3
$4AE    $5F14   UNKNOWN  $5F14           ; Unknown 5xxx instruction
$4B0    $DBCE   DRW      VB, VC, #E      ; Draw 14-byte sprite at VB, VC
$4B2    $B99D   JP       V0, $99D        ; Jump to V0 + 99D
$4B4    $B7A1   JP       V0, $7A1        ; Jump to V0 + 7A1
$4B6    $4D05   SNE      VD, #05         ; Skip if VD != 5
$4B8    $08C6   SYS      $8C6            ; System call to 8C6
$4BA    $CC81   RND      VC, #81         ; VC = random & 81
$4BC    $7204   ADD      V2, #04         ; Add 4 to V2
$4BE    $AEE7   LD       I, $EE7         ; Load EE7 into I
$4C0    $C972   RND      V9, #72         ; V9 = random & 72
$4C2    $642B   LD       V4, #2B         ; Load 43 into V4
$4C4    $F172   UNKNOWN  F172            ; Unknown Fxxx instruction
$4C6    $849E   SHL      V4              ; V4 <<= 1, VF = MSB
$4C8    $F9F7   UNKNOWN  F9F7            ; Unknown Fxxx instruction
$4CA    $0306   SYS      $306            ; System call to 306
$4CC    $D2F7   DRW      V2, VF, #7      ; Draw 7-byte sprite at V2, VF
$4CE    $790C   ADD      V9, #0C         ; Add 12 to V9
$4D0    $CD5E   RND      VD, #5E         ; VD = random & 5E
$4D2    $E3C6   UNKNOWN  $E3C6           ; Unknown Exxx instruction
$4D4    $0913   SYS      $913            ; System call to 913
$4D6    $4971   SNE      V9, #71         ; Skip if V9 != 113
$4D8    $D3FD   DRW      V3, VF, #D      ; Draw 13-byte sprite at V3, VF
$4DA    $BA7B   JP       V0, $A7B        ; Jump to V0 + A7B
$4DC    $4EC8   SNE      VE, #C8         ; Skip if VE != 200
$4DE    $9E7C   UNKNOWN  $9E7C           ; Unknown 9xxx instruction
$4E0    $00F5   SYS      $0F5            ; System call to 0F5
$4E2    $6A01   LD       VA, #01         ; Load 1 into VA
$4E4    $541C   UNKNOWN  $541C           ; Unknown 5xxx instruction
$4E6    $D3C4   DRW      V3, VC, #4      ; Draw 4-byte sprite at V3, VC
$4E8    $EE75   UNKNOWN  $EE75           ; Unknown Exxx instruction
$4EA    $0B2F   SYS      $B2F            ; System call to B2F
$4EC    $C27F   RND      V2, #7F         ; V2 = random & 7F
$4EE    $4BCD   SNE      VB, #CD         ; Skip if VB != 205
$4F0    $DFF3   DRW      VF, VF, #3      ; Draw 3-byte sprite at VF, VF
$4F2    $6D35   LD       VD, #35         ; Load 53 into VD
$4F4    $2272   CALL     $272            ; Call subroutine at 272
$4F6    $DD7D   DRW      VD, V7, #D      ; Draw 13-byte sprite at VD, V7
$4F8    $E567   UNKNOWN  $E567           ; Unknown Exxx instruction
$4FA    $9008   UNKNOWN  $9008           ; Unknown 9xxx instruction
$4FC    $6595   LD       V5, #95         ; Load 149 into V5
$4FE    $92EC   UNKNOWN  $92EC           ; Unknown 9xxx instruction
$500    $AA26   LD       I, $A26         ; Load A26 into I
$502    $FFC2   UNKNOWN  FFC2            ; Unknown Fxxx instruction
$504    $D74B   DRW      V7, V4, #B      ; Draw 11-byte sprite at V7, V4
$506    $AD34   LD       I, $D34         ; Load D34 into I
$508    $7A72   ADD      VA, #72         ; Add 114 to VA
$50A    $F8C1   UNKNOWN  F8C1            ; Unknown Fxxx instruction
$50C    $B330   JP       V0, $330        ; Jump to V0 + 330
$50E    $04CC   SYS      $4CC            ; System call to 4CC
$510    $F75F   UNKNOWN  F75F            ; Unknown Fxxx instruction
$512    $7602   ADD      V6, #02         ; Add 2 to V6
$514    $0FEA   SYS      $FEA            ; System call to FEA
$516    $F47A   UNKNOWN  F47A            ; Unknown Fxxx instruction
$518    $B90F   JP       V0, $90F        ; Jump to V0 + 90F
$51A    $960B   UNKNOWN  $960B           ; Unknown 9xxx instruction
$51C    $855E   SHL      V5              ; V5 <<= 1, VF = MSB
$51E    $1D5A   JP       $D5A            ; Jump to D5A
$520    $E6FF   UNKNOWN  $E6FF           ; Unknown Exxx instruction
$522    $267E   CALL     $67E            ; Call subroutine at 67E
$524    $FEC8   UNKNOWN  FEC8            ; Unknown Fxxx instruction
$526    $8CE8   UNKNOWN  8CE8            ; Unknown 8xxx instruction
$528    $3837   SE       V8, #37         ; Skip if V8 == 55
$52A    $4052   SNE      V0, #52         ; Skip if V0 != 82
$52C    $EF7A   UNKNOWN  $EF7A           ; Unknown Exxx instruction
$52E    $6AD8   LD       VA, #D8         ; Load 216 into VA
$530    $9520   SNE      V5, V2          ; Skip if V5 != V2
$532    $78FB   ADD      V8, #FB         ; Add 251 to V8
$534    $0009   SYS      $009            ; System call to 009
$536    $2A43   CALL     $A43            ; Call subroutine at A43
$538    $DFE0   DRW      VF, VE, #0      ; Draw 0-byte sprite at VF, VE
$53A    $4672   SNE      V6, #72         ; Skip if V6 != 114
$53C    $72C5   ADD      V2, #C5         ; Add 197 to V2
$53E    $FD50   UNKNOWN  FD50            ; Unknown Fxxx instruction
$540    $D8BC   DRW      V8, VB, #C      ; Draw 12-byte sprite at V8, VB
$542    $1256   JP       $256            ; Jump to 256
$544    $8F64   ADD      VF, V6          ; VF += V6, VF = carry
$546    $FC4F   UNKNOWN  FC4F            ; Unknown Fxxx instruction
$548    $25B6   CALL     $5B6            ; Call subroutine at 5B6
$54A    $1B86   JP       $B86            ; Jump to B86
$54C    $2C8F   CALL     $C8F            ; Call subroutine at C8F
$54E    $BE04   JP       V0, $E04        ; Jump to V0 + E04
$550    $0776   SYS      $776            ; System call to 776
$552    $85E5   SUB      V5, VE          ; V5 -= VE, VF = !borrow
$554    $38F4   SE       V8, #F4         ; Skip if V8 == 244
$556    $41ED   SNE      V1, #ED         ; Skip if V1 != 237
$558    $A8B0   LD       I, $8B0         ; Load 8B0 into I
$55A    $78AF   ADD      V8, #AF         ; Add 175 to V8
$55C    $876A   UNKNOWN  876A            ; Unknown 8xxx instruction
$55E    $D0E2   DRW      V0, VE, #2      ; Draw 2-byte sprite at V0, VE
$560    $80EB   UNKNOWN  80EB            ; Unknown 8xxx instruction
$562    $4D63   SNE      VD, #63         ; Skip if VD != 99
$564    $92F5   UNKNOWN  $92F5           ; Unknown 9xxx instruction
$566    $E564   UNKNOWN  $E564           ; Unknown Exxx instruction
$568    $5A6E   UNKNOWN  $5A6E           ; Unknown 5xxx instruction
$56A    $59E3   UNKNOWN  $59E3           ; Unknown 5xxx instruction
$56C    $5CF8   UNKNOWN  $5CF8           ; Unknown 5xxx instruction
$56E    $73B6   ADD      V3, #B6         ; Add 182 to V3
$570    $B7A2   JP       V0, $7A2        ; Jump to V0 + 7A2
$572    $7CAF   ADD      VC, #AF         ; Add 175 to VC
$574    $6F20   LD       VF, #20         ; Load 32 into VF
$576    $E879   UNKNOWN  $E879           ; Unknown Exxx instruction
$578    $2BAF   CALL     $BAF            ; Call subroutine at BAF
$57A    $A389   LD       I, $389         ; Load 389 into I
$57C    $CCC0   RND      VC, #C0         ; VC = random & C0
$57E    $CC02   RND      VC, #02         ; VC = random & 02
$580    $4697   SNE      V6, #97         ; Skip if V6 != 151
$582    $9FB9   UNKNOWN  $9FB9           ; Unknown 9xxx instruction
$584    $372D   SE       V7, #2D         ; Skip if V7 == 45
$586    $99A1   UNKNOWN  $99A1           ; Unknown 9xxx instruction
$588    $59AF   UNKNOWN  $59AF           ; Unknown 5xxx instruction
$58A    $1C39   JP       $C39            ; Jump to C39
$58C    $4A1F   SNE      VA, #1F         ; Skip if VA != 31
$58E    $C2F8   RND      V2, #F8         ; V2 = random & F8
$590    $DAD6   DRW      VA, VD, #6      ; Draw 6-byte sprite at VA, VD
$592    $0E6F   SYS      $E6F            ; System call to E6F
$594    $D841   DRW      V8, V4, #1      ; Draw 1-byte sprite at V8, V4
$596    $DBC5   DRW      VB, VC, #5      ; Draw 5-byte sprite at VB, VC
$598    $0CEC   SYS      $CEC            ; System call to CEC
$59A    $9264   UNKNOWN  $9264           ; Unknown 9xxx instruction
$59C    $2788   CALL     $788            ; Call subroutine at 788
$59E    $C154   RND      V1, #54         ; V1 = random & 54
$5A0    $E506   UNKNOWN  $E506           ; Unknown Exxx instruction
$5A2    $2EC5   CALL     $EC5            ; Call subroutine at EC5
$5A4    $8787   SUBN     V7, V8          ; V7 = V8 - V7, VF = !borrow
$5A6    $684D   LD       V8, #4D         ; Load 77 into V8
$5A8    $A47F   LD       I, $47F         ; Load 47F into I
$5AA    $84F5   SUB      V4, VF          ; V4 -= VF, VF = !borrow
$5AC    $686B   LD       V8, #6B         ; Load 107 into V8
$5AE    $59EC   UNKNOWN  $59EC           ; Unknown 5xxx instruction
$5B0    $1B46   JP       $B46            ; Jump to B46
$5B2    $6F32   LD       VF, #32         ; Load 50 into VF
$5B4    $6678   LD       V6, #78         ; Load 120 into V6
$5B6    $8F47   SUBN     VF, V4          ; VF = V4 - VF, VF = !borrow
$5B8    $08AE   SYS      $8AE            ; System call to 8AE
$5BA    $0F51   SYS      $F51            ; System call to F51
$5BC    $9B65   UNKNOWN  $9B65           ; Unknown 9xxx instruction
$5BE    $4A4C   SNE      VA, #4C         ; Skip if VA != 76
$5C0    $EC02   UNKNOWN  $EC02           ; Unknown Exxx instruction
$5C2    $E477   UNKNOWN  $E477           ; Unknown Exxx instruction
$5C4    $B579   JP       V0, $579        ; Jump to V0 + 579
$5C6    $AB36   LD       I, $B36         ; Load B36 into I
$5C8    $79C3   ADD      V9, #C3         ; Add 195 to V9
$5CA    $9D08   UNKNOWN  $9D08           ; Unknown 9xxx instruction
$5CC    $99BA   UNKNOWN  $99BA           ; Unknown 9xxx instruction
$5CE    $3352   SE       V3, #52         ; Skip if V3 == 82
$5D0    $044B   SYS      $44B            ; System call to 44B
$5D2    $C8C1   RND      V8, #C1         ; V8 = random & C1
$5D4    $0033   SYS      $033            ; System call to 033
$5D6    $26C4   CALL     $6C4            ; Call subroutine at 6C4
$5D8    $AFA2   LD       I, $FA2         ; Load FA2 into I
$5DA    $FC07   LD       VC, DT          ; VC = delay timer
$5DC    $579B   UNKNOWN  $579B           ; Unknown 5xxx instruction
$5DE    $3CBF   SE       VC, #BF         ; Skip if VC == 191
$5E0    $8207   SUBN     V2, V0          ; V2 = V0 - V2, VF = !borrow
$5E2    $ADD3   LD       I, $DD3         ; Load DD3 into I
$5E4    $6601   LD       V6, #01         ; Load 1 into V6
$5E6    $25E2   CALL     $5E2            ; Call subroutine at 5E2
$5E8    $89C2   AND      V9, VC          ; V9 &= VC
$5EA    $9059   UNKNOWN  $9059           ; Unknown 9xxx instruction
$5EC    $7BC2   ADD      VB, #C2         ; Add 194 to VB
$5EE    $D51C   DRW      V5, V1, #C      ; Draw 12-byte sprite at V5, V1
$5F0    $B362   JP       V0, $362        ; Jump to V0 + 362
$5F2    $0A2E   SYS      $A2E            ; System call to A2E
$5F4    $45E7   SNE      V5, #E7         ; Skip if V5 != 231
$5F6    $1B0C   JP       $B0C            ; Jump to B0C
$5F8    $1DA7   JP       $DA7            ; Jump to DA7
$5FA    $B193   JP       V0, $193        ; Jump to V0 + 193
$5FC    $866C   UNKNOWN  866C            ; Unknown 8xxx instruction
$5FE    $FDC0   UNKNOWN  FDC0            ; Unknown Fxxx instruction
$600    $2CC4   CALL     $CC4            ; Call subroutine at CC4
$602    $D477   DRW      V4, V7, #7      ; Draw 7-byte sprite at V4, V7
$604    $6A65   LD       VA, #65         ; Load 101 into VA
$606    $8860   LD       V8, V6          ; V8 = V6
$608    $7076   ADD      V0, #76         ; Add 118 to V0
$60A    $E2CF   UNKNOWN  $E2CF           ; Unknown Exxx instruction
$60C    $85BB   UNKNOWN  85BB            ; Unknown 8xxx instruction
$60E    $D9FD   DRW      V9, VF, #D      ; Draw 13-byte sprite at V9, VF
$610    $8C2C   UNKNOWN  8C2C            ; Unknown 8xxx instruction
$612    $2C69   CALL     $C69            ; Call subroutine at C69
$614    $3BF0   SE       VB, #F0         ; Skip if VB == 240
$616    $E173   UNKNOWN  $E173           ; Unknown Exxx instruction
$618    $5E71   UNKNOWN  $5E71           ; Unknown 5xxx instruction
$61A    $B234   JP       V0, $234        ; Jump to V0 + 234
$61C    $187B   JP       $87B            ; Jump to 87B
$61E    $C72E   RND      V7, #2E         ; V7 = random & 2E
$620    $FB60   UNKNOWN  FB60            ; Unknown Fxxx instruction
$622    $7D1A   ADD      VD, #1A         ; Add 26 to VD
$624    $F241   UNKNOWN  F241            ; Unknown Fxxx instruction
$626    $219A   CALL     $19A            ; Call subroutine at 19A
$628    $64F4   LD       V4, #F4         ; Load 244 into V4
$62A    $362D   SE       V6, #2D         ; Skip if V6 == 45
$62C    $76BA   ADD      V6, #BA         ; Add 186 to V6
$62E    $9777   UNKNOWN  $9777           ; Unknown 9xxx instruction
$630    $58F1   UNKNOWN  $58F1           ; Unknown 5xxx instruction
$632    $E3AA   UNKNOWN  $E3AA           ; Unknown Exxx instruction
$634    $D5D3   DRW      V5, VD, #3      ; Draw 3-byte sprite at V5, VD
$636    $E6CB   UNKNOWN  $E6CB           ; Unknown Exxx instruction
$638    $E532   UNKNOWN  $E532           ; Unknown Exxx instruction
$63A    $01F4   SYS      $1F4            ; System call to 1F4
$63C    $2DF7   CALL     $DF7            ; Call subroutine at DF7
$63E    $A6F7   LD       I, $6F7         ; Load 6F7 into I
$640    $01B3   SYS      $1B3            ; System call to 1B3
$642    $8097   SUBN     V0, V9          ; V0 = V9 - V0, VF = !borrow
$644    $BC19   JP       V0, $C19        ; Jump to V0 + C19
$646    $93EE   UNKNOWN  $93EE           ; Unknown 9xxx instruction
$648    $716A   ADD      V1, #6A         ; Add 106 to V1
$64A    $6857   LD       V8, #57         ; Load 87 into V8
$64C    $7585   ADD      V5, #85         ; Add 133 to V5
$64E    $D42E   DRW      V4, V2, #E      ; Draw 14-byte sprite at V4, V2
$650    $994F   UNKNOWN  $994F           ; Unknown 9xxx instruction
$652    $B388   JP       V0, $388        ; Jump to V0 + 388
$654    $D0C0   DRW      V0, VC, #0      ; Draw 0-byte sprite at V0, VC
$656    $03F0   SYS      $3F0            ; System call to 3F0
$658    $3F0C   SE       VF, #0C         ; Skip if VF == 12
$65A    $755E   ADD      V5, #5E         ; Add 94 to V5
$65C    $F312   UNKNOWN  F312            ; Unknown Fxxx instruction
$65E    $229C   CALL     $29C            ; Call subroutine at 29C
$660    $3D90   SE       VD, #90         ; Skip if VD == 144
$662    $F215   LD       DT, V2          ; Delay timer = V2
$664    $2FD8   CALL     $FD8            ; Call subroutine at FD8
$666    $1012   JP       $012            ; Jump to 012
$668    $1AD2   JP       $AD2            ; Jump to AD2
$66A    $9E05   UNKNOWN  $9E05           ; Unknown 9xxx instruction
$66C    $5ACD   UNKNOWN  $5ACD           ; Unknown 5xxx instruction
$66E    $1A17   JP       $A17            ; Jump to A17
$670    $86AF   UNKNOWN  86AF            ; Unknown 8xxx instruction
$672    $D370   DRW      V3, V7, #0      ; Draw 0-byte sprite at V3, V7
$674    $FC63   UNKNOWN  FC63            ; Unknown Fxxx instruction
$676    $DAF2   DRW      VA, VF, #2      ; Draw 2-byte sprite at VA, VF
$678    $F7AC   UNKNOWN  F7AC            ; Unknown Fxxx instruction
$67A    $BCCB   JP       V0, $CCB        ; Jump to V0 + CCB
$67C    $3D3B   SE       VD, #3B         ; Skip if VD == 59
$67E    $C91F   RND      V9, #1F         ; V9 = random & 1F
$680    $0A92   SYS      $A92            ; System call to A92
$682    $04D5   SYS      $4D5            ; System call to 4D5
$684    $F287   UNKNOWN  F287            ; Unknown Fxxx instruction
$686    $28D3   CALL     $8D3            ; Call subroutine at 8D3
$688    $B6E6   JP       V0, $6E6        ; Jump to V0 + 6E6
$68A    $9ED5   UNKNOWN  $9ED5           ; Unknown 9xxx instruction
$68C    $F971   UNKNOWN  F971            ; Unknown Fxxx instruction
$68E    $2A96   CALL     $A96            ; Call subroutine at A96
$690    $760A   ADD      V6, #0A         ; Add 10 to V6
$692    $75C7   ADD      V5, #C7         ; Add 199 to V5
$694    $03A6   SYS      $3A6            ; System call to 3A6
$696    $3619   SE       V6, #19         ; Skip if V6 == 25
$698    $45CE   SNE      V5, #CE         ; Skip if V5 != 206
$69A    $F28F   UNKNOWN  F28F            ; Unknown Fxxx instruction
$69C    $DAEB   DRW      VA, VE, #B      ; Draw 11-byte sprite at VA, VE
$69E    $811F   UNKNOWN  811F            ; Unknown 8xxx instruction
$6A0    $F5E3   UNKNOWN  F5E3            ; Unknown Fxxx instruction
$6A2    $4AC1   SNE      VA, #C1         ; Skip if VA != 193
$6A4    $E64B   UNKNOWN  $E64B           ; Unknown Exxx instruction
$6A6    $8A6B   UNKNOWN  8A6B            ; Unknown 8xxx instruction
$6A8    $B3EC   JP       V0, $3EC        ; Jump to V0 + 3EC
$6AA    $B865   JP       V0, $865        ; Jump to V0 + 865
$6AC    $FB36   UNKNOWN  FB36            ; Unknown Fxxx instruction
$6AE    $E201   UNKNOWN  $E201           ; Unknown Exxx instruction
$6B0    $91A5   UNKNOWN  $91A5           ; Unknown 9xxx instruction
$6B2    $1C03   JP       $C03            ; Jump to C03
$6B4    $E492   UNKNOWN  $E492           ; Unknown Exxx instruction
$6B6    $F6A9   UNKNOWN  F6A9            ; Unknown Fxxx instruction
$6B8    $0FB9   SYS      $FB9            ; System call to FB9
$6BA    $A2FC   LD       I, $2FC         ; Load 2FC into I
$6BC    $037E   SYS      $37E            ; System call to 37E
$6BE    $4C0F   SNE      VC, #0F         ; Skip if VC != 15
$6C0    $494A   SNE      V9, #4A         ; Skip if V9 != 74
$6C2    $3053   SE       V0, #53         ; Skip if V0 == 83
$6C4    $1AB9   JP       $AB9            ; Jump to AB9
$6C6    $639E   LD       V3, #9E         ; Load 158 into V3
$6C8    $EBE5   UNKNOWN  $EBE5           ; Unknown Exxx instruction
$6CA    $3B0C   SE       VB, #0C         ; Skip if VB == 12
$6CC    $7DCE   ADD      VD, #CE         ; Add 206 to VD
$6CE    $E0C8   UNKNOWN  $E0C8           ; Unknown Exxx instruction
$6D0    $C7C1   RND      V7, #C1         ; V7 = random & C1
$6D2    $F57C   UNKNOWN  F57C            ; Unknown Fxxx instruction
$6D4    $D239   DRW      V2, V3, #9      ; Draw 9-byte sprite at V2, V3
$6D6    $6107   LD       V1, #07         ; Load 7 into V1
$6D8    $7F98   ADD      VF, #98         ; Add 152 to VF
$6DA    $A215   LD       I, $215         ; Load 215 into I
$6DC    $2AF4   CALL     $AF4            ; Call subroutine at AF4
$6DE    $102F   JP       $02F            ; Jump to 02F
$6E0    $FFA3   UNKNOWN  FFA3            ; Unknown Fxxx instruction
$6E2    $E40D   UNKNOWN  $E40D           ; Unknown Exxx instruction
$6E4    $AB1B   LD       I, $B1B         ; Load B1B into I
$6E6    $A09E   LD       I, $09E         ; Load 09E into I
$6E8    $83FB   UNKNOWN  83FB            ; Unknown 8xxx instruction
$6EA    $CFA2   RND      VF, #A2         ; VF = random & A2
$6EC    $E7FC   UNKNOWN  $E7FC           ; Unknown Exxx instruction
$6EE    $DB66   DRW      VB, V6, #6      ; Draw 6-byte sprite at VB, V6
$6F0    $B27E   JP       V0, $27E        ; Jump to V0 + 27E
$6F2    $6B91   LD       VB, #91         ; Load 145 into VB
$6F4    $8310   LD       V3, V1          ; V3 = V1
$6F6    $DFF7   DRW      VF, VF, #7      ; Draw 7-byte sprite at VF, VF
$6F8    $9DD6   UNKNOWN  $9DD6           ; Unknown 9xxx instruction
$6FA    $BCAD   JP       V0, $CAD        ; Jump to V0 + CAD
$6FC    $4DAF   SNE      VD, #AF         ; Skip if VD != 175
$6FE    $7FF8   ADD      VF, #F8         ; Add 248 to VF
$700    $3B77   SE       VB, #77         ; Skip if VB == 119
$702    $3F8B   SE       VF, #8B         ; Skip if VF == 139
$704    $FDF6   UNKNOWN  FDF6            ; Unknown Fxxx instruction
$706    $4219   SNE      V2, #19         ; Skip if V2 != 25
$708    $D1E8   DRW      V1, VE, #8      ; Draw 8-byte sprite at V1, VE
$70A    $65C7   LD       V5, #C7         ; Load 199 into V5
$70C    $F2EC   UNKNOWN  F2EC            ; Unknown Fxxx instruction
$70E    $5952   UNKNOWN  $5952           ; Unknown 5xxx instruction
$710    $D477   DRW      V4, V7, #7      ; Draw 7-byte sprite at V4, V7
$712    $45D1   SNE      V5, #D1         ; Skip if V5 != 209
$714    $3B9F   SE       VB, #9F         ; Skip if VB == 159
$716    $B29F   JP       V0, $29F        ; Jump to V0 + 29F
$718    $0A40   SYS      $A40            ; System call to A40
$71A    $85A7   SUBN     V5, VA          ; V5 = VA - V5, VF = !borrow
$71C    $E0A3   UNKNOWN  $E0A3           ; Unknown Exxx instruction
$71E    $B3A9   JP       V0, $3A9        ; Jump to V0 + 3A9
$720    $EB91   UNKNOWN  $EB91           ; Unknown Exxx instruction
$722    $78C9   ADD      V8, #C9         ; Add 201 to V8
$724    $4CB6   SNE      VC, #B6         ; Skip if VC != 182
$726    $1D26   JP       $D26            ; Jump to D26
$728    $9EAE   UNKNOWN  $9EAE           ; Unknown 9xxx instruction
$72A    $8676   SHR      V6              ; V6 >>= 1, VF = LSB
$72C    $1427   JP       $427            ; Jump to 427
$72E    $FB67   UNKNOWN  FB67            ; Unknown Fxxx instruction
$730    $DA9A   DRW      VA, V9, #A      ; Draw 10-byte sprite at VA, V9
$732    $80A5   SUB      V0, VA          ; V0 -= VA, VF = !borrow
$734    $302D   SE       V0, #2D         ; Skip if V0 == 45
$736    $D97E   DRW      V9, V7, #E      ; Draw 14-byte sprite at V9, V7
$738    $FC0E   UNKNOWN  FC0E            ; Unknown Fxxx instruction
$73A    $B73C   JP       V0, $73C        ; Jump to V0 + 73C
$73C    $11BD   JP       $1BD            ; Jump to 1BD
$73E    $5C7E   UNKNOWN  $5C7E           ; Unknown 5xxx instruction
$740    $5B83   UNKNOWN  $5B83           ; Unknown 5xxx instruction
$742    $C624   RND      V6, #24         ; V6 = random & 24
$744    $3CBF   SE       VC, #BF         ; Skip if VC == 191
$746    $F055   LD       [I], V0         ; Store V0-V0 at I
$748    $8A15   SUB      VA, V1          ; VA -= V1, VF = !borrow
$74A    $BF2B   JP       V0, $F2B        ; Jump to V0 + F2B
$74C    $DB7C   DRW      VB, V7, #C      ; Draw 12-byte sprite at VB, V7
$74E    $BF18   JP       V0, $F18        ; Jump to V0 + F18
$750    $7D45   ADD      VD, #45         ; Add 69 to VD
$752    $951E   UNKNOWN  $951E           ; Unknown 9xxx instruction
$754    $4B7A   SNE      VB, #7A         ; Skip if VB != 122
$756    $8267   SUBN     V2, V6          ; V2 = V6 - V2, VF = !borrow
$758    $C257   RND      V2, #57         ; V2 = random & 57
$75A    $DE6E   DRW      VE, V6, #E      ; Draw 14-byte sprite at VE, V6
$75C    $BFF2   JP       V0, $FF2        ; Jump to V0 + FF2
$75E    $44DE   SNE      V4, #DE         ; Skip if V4 != 222
$760    $E662   UNKNOWN  $E662           ; Unknown Exxx instruction
$762    $8803   XOR      V8, V0          ; V8 ^= V0
$764    $BD87   JP       V0, $D87        ; Jump to V0 + D87
$766    $0086   SYS      $086            ; System call to 086
$768    $C863   RND      V8, #63         ; V8 = random & 63
$76A    $1217   JP       $217            ; Jump to 217
$76C    $3439   SE       V4, #39         ; Skip if V4 == 57
$76E    $E752   UNKNOWN  $E752           ; Unknown Exxx instruction
$770    $B993   JP       V0, $993        ; Jump to V0 + 993
$772    $149E   JP       $49E            ; Jump to 49E
$774    $F748   UNKNOWN  F748            ; Unknown Fxxx instruction
$776    $6F23   LD       VF, #23         ; Load 35 into VF
$778    $74E7   ADD      V4, #E7         ; Add 231 to V4
$77A    $0FCF   SYS      $FCF            ; System call to FCF
$77C    $AC58   LD       I, $C58         ; Load C58 into I
$77E    $1171   JP       $171            ; Jump to 171
$780    $00BD   SYS      $0BD            ; System call to 0BD
$782    $283A   CALL     $83A            ; Call subroutine at 83A
$784    $64DA   LD       V4, #DA         ; Load 218 into V4
$786    $738B   ADD      V3, #8B         ; Add 139 to V3
$788    $6672   LD       V6, #72         ; Load 114 into V6
$78A    $72A1   ADD      V2, #A1         ; Add 161 to V2
$78C    $FC5E   UNKNOWN  FC5E            ; Unknown Fxxx instruction
$78E    $D598   DRW      V5, V9, #8      ; Draw 8-byte sprite at V5, V9
$790    $A8E7   LD       I, $8E7         ; Load 8E7 into I
$792    $21C8   CALL     $1C8            ; Call subroutine at 1C8
$794    $538B   UNKNOWN  $538B           ; Unknown 5xxx instruction
$796    $BD5E   JP       V0, $D5E        ; Jump to V0 + D5E
$798    $416B   SNE      V1, #6B         ; Skip if V1 != 107
$79A    $FDFA   UNKNOWN  FDFA            ; Unknown Fxxx instruction
$79C    $805A   UNKNOWN  805A            ; Unknown 8xxx instruction
$79E    $277F   CALL     $77F            ; Call subroutine at 77F
$7A0    $FE85   UNKNOWN  FE85            ; Unknown Fxxx instruction
$7A2    $1E31   JP       $E31            ; Jump to E31
$7A4    $138B   JP       $38B            ; Jump to 38B
$7A6    $8E27   SUBN     VE, V2          ; VE = V2 - VE, VF = !borrow
$7A8    $9AF1   UNKNOWN  $9AF1           ; Unknown 9xxx instruction
$7AA    $A595   LD       I, $595         ; Load 595 into I
$7AC    $26F1   CALL     $6F1            ; Call subroutine at 6F1
$7AE    $34D6   SE       V4, #D6         ; Skip if V4 == 214
$7B0    $5765   UNKNOWN  $5765           ; Unknown 5xxx instruction
$7B2    $DC71   DRW      VC, V7, #1      ; Draw 1-byte sprite at VC, V7
$7B4    $7733   ADD      V7, #33         ; Add 51 to V7
$7B6    $DB1F   DRW      VB, V1, #F      ; Draw 15-byte sprite at VB, V1
$7B8    $E253   UNKNOWN  $E253           ; Unknown Exxx instruction
$7BA    $F5E7   UNKNOWN  F5E7            ; Unknown Fxxx instruction
$7BC    $80C7   SUBN     V0, VC          ; V0 = VC - V0, VF = !borrow
$7BE    $D32C   DRW      V3, V2, #C      ; Draw 12-byte sprite at V3, V2
$7C0    $FAE3   UNKNOWN  FAE3            ; Unknown Fxxx instruction
$7C2    $6AA2   LD       VA, #A2         ; Load 162 into VA
$7C4    $4D6F   SNE      VD, #6F         ; Skip if VD != 111
$7C6    $DC7D   DRW      VC, V7, #D      ; Draw 13-byte sprite at VC, V7
$7C8    $5512   UNKNOWN  $5512           ; Unknown 5xxx instruction
$7CA    $6B73   LD       VB, #73         ; Load 115 into VB
$7CC    $8467   SUBN     V4, V6          ; V4 = V6 - V4, VF = !borrow
$7CE    $DCC9   DRW      VC, VC, #9      ; Draw 9-byte sprite at VC, VC
$7D0    $3509   SE       V5, #09         ; Skip if V5 == 9
$7D2    $DD76   DRW      VD, V7, #6      ; Draw 6-byte sprite at VD, V7
$7D4    $EF24   UNKNOWN  $EF24           ; Unknown Exxx instruction
$7D6    $17E1   JP       $7E1            ; Jump to 7E1
$7D8    $DC54   DRW      VC, V5, #4      ; Draw 4-byte sprite at VC, V5
$7DA    $F45C   UNKNOWN  F45C            ; Unknown Fxxx instruction
$7DC    $BE9C   JP       V0, $E9C        ; Jump to V0 + E9C
$7DE    $D2C2   DRW      V2, VC, #2      ; Draw 2-byte sprite at V2, VC
$7E0    $19E2   JP       $9E2            ; Jump to 9E2
$7E2    $A50E   LD       I, $50E         ; Load 50E into I
$7E4    $92BE   UNKNOWN  $92BE           ; Unknown 9xxx instruction
$7E6    $B4CA   JP       V0, $4CA        ; Jump to V0 + 4CA
$7E8    $E68C   UNKNOWN  $E68C           ; Unknown Exxx instruction
$7EA    $1803   JP       $803            ; Jump to 803
$7EC    $D273   DRW      V2, V7, #3      ; Draw 3-byte sprite at V2, V7
$7EE    $A663   LD       I, $663         ; Load 663 into I
$7F0    $1466   JP       $466            ; Jump to 466
$7F2    $80AA   UNKNOWN  80AA            ; Unknown 8xxx instruction
$7F4    $8156   SHR      V1              ; V1 >>= 1, VF = LSB
$7F6    $2DB4   CALL     $DB4            ; Call subroutine at DB4
$7F8    $AFAB   LD       I, $FAB         ; Load FAB into I
$7FA    $2E2B   CALL     $E2B            ; Call subroutine at E2B
$7FC    $8970   LD       V9, V7          ; V9 = V7
$7FE    $62E1   LD       V2, #E1         ; Load 225 into V2
$800    $ED3B   UNKNOWN  $ED3B           ; Unknown Exxx instruction
$802    $BB09   JP       V0, $B09        ; Jump to V0 + B09
$804    $90A8   UNKNOWN  $90A8           ; Unknown 9xxx instruction
$806    $0B75   SYS      $B75            ; System call to B75
$808    $E9BF   UNKNOWN  $E9BF           ; Unknown Exxx instruction
$80A    $438D   SNE      V3, #8D         ; Skip if V3 != 141
$80C    $3F96   SE       VF, #96         ; Skip if VF == 150
$80E    $C554   RND      V5, #54         ; V5 = random & 54
$810    $F17F   UNKNOWN  F17F            ; Unknown Fxxx instruction
$812    $3CD5   SE       VC, #D5         ; Skip if VC == 213
$814    $33F4   SE       V3, #F4         ; Skip if V3 == 244
$816    $C3EA   RND      V3, #EA         ; V3 = random & EA
$818    $44E3   SNE      V4, #E3         ; Skip if V4 != 227
$81A    $E446   UNKNOWN  $E446           ; Unknown Exxx instruction
$81C    $ABA6   LD       I, $BA6         ; Load BA6 into I
$81E    $80C6   SHR      V0              ; V0 >>= 1, VF = LSB
$820    $6714   LD       V7, #14         ; Load 20 into V7
$822    $5A63   UNKNOWN  $5A63           ; Unknown 5xxx instruction
$824    $F7A8   UNKNOWN  F7A8            ; Unknown Fxxx instruction
$826    $712B   ADD      V1, #2B         ; Add 43 to V1
$828    $7EBD   ADD      VE, #BD         ; Add 189 to VE
$82A    $94CB   UNKNOWN  $94CB           ; Unknown 9xxx instruction
$82C    $8068   UNKNOWN  8068            ; Unknown 8xxx instruction
$82E    $4639   SNE      V6, #39         ; Skip if V6 != 57
$830    $961D   UNKNOWN  $961D           ; Unknown 9xxx instruction
$832    $4306   SNE      V3, #06         ; Skip if V3 != 6
$834    $4295   SNE      V2, #95         ; Skip if V2 != 149
$836    $9446   UNKNOWN  $9446           ; Unknown 9xxx instruction
$838    $C5CE   RND      V5, #CE         ; V5 = random & CE
$83A    $1E40   JP       $E40            ; Jump to E40
$83C    $F8FB   UNKNOWN  F8FB            ; Unknown Fxxx instruction
$83E    $6C6F   LD       VC, #6F         ; Load 111 into VC
$840    $B48D   JP       V0, $48D        ; Jump to V0 + 48D
$842    $5E22   UNKNOWN  $5E22           ; Unknown 5xxx instruction
$844    $36F6   SE       V6, #F6         ; Skip if V6 == 246
$846    $BF01   JP       V0, $F01        ; Jump to V0 + F01
$848    $5C70   SE       VC, V7          ; Skip if VC == V7
$84A    $9922   UNKNOWN  $9922           ; Unknown 9xxx instruction
$84C    $1425   JP       $425            ; Jump to 425
$84E    $17AA   JP       $7AA            ; Jump to 7AA
$850    $1E3A   JP       $E3A            ; Jump to E3A
$852    $5E06   UNKNOWN  $5E06           ; Unknown 5xxx instruction
$854    $BB92   JP       V0, $B92        ; Jump to V0 + B92
$856    $3082   SE       V0, #82         ; Skip if V0 == 130
$858    $BC58   JP       V0, $C58        ; Jump to V0 + C58
$85A    $8C68   UNKNOWN  8C68            ; Unknown 8xxx instruction
$85C    $E2C3   UNKNOWN  $E2C3           ; Unknown Exxx instruction
$85E    $34AC   SE       V4, #AC         ; Skip if V4 == 172
$860    $77E6   ADD      V7, #E6         ; Add 230 to V7
$862    $ADB5   LD       I, $DB5         ; Load DB5 into I
$864    $7E09   ADD      VE, #09         ; Add 9 to VE
$866    $B217   JP       V0, $217        ; Jump to V0 + 217
$868    $0F0E   SYS      $F0E            ; System call to F0E
$86A    $D803   DRW      V8, V0, #3      ; Draw 3-byte sprite at V8, V0
$86C    $47B1   SNE      V7, #B1         ; Skip if V7 != 177
$86E    $50A6   UNKNOWN  $50A6           ; Unknown 5xxx instruction
$870    $FB23   UNKNOWN  FB23            ; Unknown Fxxx instruction
$872    $A717   LD       I, $717         ; Load 717 into I
$874    $C2F6   RND      V2, #F6         ; V2 = random & F6
$876    $963A   UNKNOWN  $963A           ; Unknown 9xxx instruction
$878    $7E90   ADD      VE, #90         ; Add 144 to VE
$87A    $59A2   UNKNOWN  $59A2           ; Unknown 5xxx instruction
$87C    $0581   SYS      $581            ; System call to 581
$87E    $71A7   ADD      V1, #A7         ; Add 167 to V1
$880    $D4E9   DRW      V4, VE, #9      ; Draw 9-byte sprite at V4, VE
$882    $74D7   ADD      V4, #D7         ; Add 215 to V4
$884    $0E36   SYS      $E36            ; System call to E36
$886    $CC30   RND      VC, #30         ; VC = random & 30
$888    $2023   CALL     $023            ; Call subroutine at 023
$88A    $B6E1   JP       V0, $6E1        ; Jump to V0 + 6E1
$88C    $8A03   XOR      VA, V0          ; VA ^= V0
$88E    $FAF8   UNKNOWN  FAF8            ; Unknown Fxxx instruction
$890    $794D   ADD      V9, #4D         ; Add 77 to V9
$892    $0C2F   SYS      $C2F            ; System call to C2F
$894    $8E66   SHR      VE              ; VE >>= 1, VF = LSB
$896    $D711   DRW      V7, V1, #1      ; Draw 1-byte sprite at V7, V1
$898    $5FA2   UNKNOWN  $5FA2           ; Unknown 5xxx instruction
$89A    $1804   JP       $804            ; Jump to 804
$89C    $4D12   SNE      VD, #12         ; Skip if VD != 18
$89E    $0601   SYS      $601            ; System call to 601
$8A0    $143A   JP       $43A            ; Jump to 43A
$8A2    $9267   UNKNOWN  $9267           ; Unknown 9xxx instruction
$8A4    $D888   DRW      V8, V8, #8      ; Draw 8-byte sprite at V8, V8
$8A6    $2B3D   CALL     $B3D            ; Call subroutine at B3D
$8A8    $6700   LD       V7, #00         ; Load 0 into V7
$8AA    $53B1   UNKNOWN  $53B1           ; Unknown 5xxx instruction
$8AC    $A234   LD       I, $234         ; Load 234 into I
$8AE    $7933   ADD      V9, #33         ; Add 51 to V9
$8B0    $648A   LD       V4, #8A         ; Load 138 into V4
$8B2    $970E   UNKNOWN  $970E           ; Unknown 9xxx instruction
$8B4    $C99B   RND      V9, #9B         ; V9 = random & 9B
$8B6    $01F8   SYS      $1F8            ; System call to 1F8
$8B8    $F1EB   UNKNOWN  F1EB            ; Unknown Fxxx instruction
$8BA    $46A6   SNE      V6, #A6         ; Skip if V6 != 166
$8BC    $6E23   LD       VE, #23         ; Load 35 into VE
$8BE    $1FED   JP       $FED            ; Jump to FED
$8C0    $7E35   ADD      VE, #35         ; Add 53 to VE
$8C2    $1DC4   JP       $DC4            ; Jump to DC4
$8C4    $E257   UNKNOWN  $E257           ; Unknown Exxx instruction
$8C6    $CDB5   RND      VD, #B5         ; VD = random & B5
$8C8    $8EFF   UNKNOWN  8EFF            ; Unknown 8xxx instruction
$8CA    $735D   ADD      V3, #5D         ; Add 93 to V3
$8CC    $AAC4   LD       I, $AC4         ; Load AC4 into I
$8CE    $7B20   ADD      VB, #20         ; Add 32 to VB
$8D0    $432D   SNE      V3, #2D         ; Skip if V3 != 45
$8D2    $4F9F   SNE      VF, #9F         ; Skip if VF != 159
$8D4    $769A   ADD      V6, #9A         ; Add 154 to V6
$8D6    $E72F   UNKNOWN  $E72F           ; Unknown Exxx instruction
$8D8    $65CE   LD       V5, #CE         ; Load 206 into V5
$8DA    $432A   SNE      V3, #2A         ; Skip if V3 != 42
$8DC    $83A5   SUB      V3, VA          ; V3 -= VA, VF = !borrow
$8DE    $6020   LD       V0, #20         ; Load 32 into V0
$8E0    $452A   SNE      V5, #2A         ; Skip if V5 != 42
$8E2    $E745   UNKNOWN  $E745           ; Unknown Exxx instruction
$8E4    $0BCE   SYS      $BCE            ; System call to BCE
$8E6    $7F82   ADD      VF, #82         ; Add 130 to VF
$8E8    $DCE8   DRW      VC, VE, #8      ; Draw 8-byte sprite at VC, VE
$8EA    $0345   SYS      $345            ; System call to 345
$8EC    $2DED   CALL     $DED            ; Call subroutine at DED
$8EE    $B1E9   JP       V0, $1E9        ; Jump to V0 + 1E9
$8F0    $0666   SYS      $666            ; System call to 666
$8F2    $F80E   UNKNOWN  F80E            ; Unknown Fxxx instruction
$8F4    $F83D   UNKNOWN  F83D            ; Unknown Fxxx instruction
$8F6    $DF11   DRW      VF, V1, #1      ; Draw 1-byte sprite at VF, V1
$8F8    $DF57   DRW      VF, V5, #7      ; Draw 7-byte sprite at VF, V5
$8FA    $3931   SE       V9, #31         ; Skip if V9 == 49
$8FC    $1B73   JP       $B73            ; Jump to B73
$8FE    $C745   RND      V7, #45         ; V7 = random & 45
$900    $5465   UNKNOWN  $5465           ; Unknown 5xxx instruction
$902    $CDC0   RND      VD, #C0         ; VD = random & C0
$904    $DD3F   DRW      VD, V3, #F      ; Draw 15-byte sprite at VD, V3
$906    $9C65   UNKNOWN  $9C65           ; Unknown 9xxx instruction
$908    $F81D   UNKNOWN  F81D            ; Unknown Fxxx instruction
$90A    $D11B   DRW      V1, V1, #B      ; Draw 11-byte sprite at V1, V1
$90C    $9496   UNKNOWN  $9496           ; Unknown 9xxx instruction
$90E    $42D2   SNE      V2, #D2         ; Skip if V2 != 210
$910    $93E3   UNKNOWN  $93E3           ; Unknown 9xxx instruction
$912    $4571   SNE      V5, #71         ; Skip if V5 != 113
$914    $DF04   DRW      VF, V0, #4      ; Draw 4-byte sprite at VF, V0
$916    $5335   UNKNOWN  $5335           ; Unknown 5xxx instruction
$918    $7BAE   ADD      VB, #AE         ; Add 174 to VB
$91A    $404F   SNE      V0, #4F         ; Skip if V0 != 79
$91C    $1EC8   JP       $EC8            ; Jump to EC8
$91E    $0C7B   SYS      $C7B            ; System call to C7B
$920    $9C92   UNKNOWN  $9C92           ; Unknown 9xxx instruction
$922    $9B43   UNKNOWN  $9B43           ; Unknown 9xxx instruction
$924    $E5FC   UNKNOWN  $E5FC           ; Unknown Exxx instruction
$926    $336F   SE       V3, #6F         ; Skip if V3 == 111
$928    $0845   SYS      $845            ; System call to 845
$92A    $F3C1   UNKNOWN  F3C1            ; Unknown Fxxx instruction
$92C    $656B   LD       V5, #6B         ; Load 107 into V5
$92E    $2B68   CALL     $B68            ; Call subroutine at B68
$930    $C3B3   RND      V3, #B3         ; V3 = random & B3
$932    $78CA   ADD      V8, #CA         ; Add 202 to V8
$934    $4CD6   SNE      VC, #D6         ; Skip if VC != 214
$936    $E195   UNKNOWN  $E195           ; Unknown Exxx instruction
$938    $054B   SYS      $54B            ; System call to 54B
$93A    $9BE4   UNKNOWN  $9BE4           ; Unknown 9xxx instruction
$93C    $633A   LD       V3, #3A         ; Load 58 into V3
$93E    $8228   UNKNOWN  8228            ; Unknown 8xxx instruction
$940    $1845   JP       $845            ; Jump to 845
$942    $8CEE   SHL      VC              ; VC <<= 1, VF = MSB
$944    $BAE8   JP       V0, $AE8        ; Jump to V0 + AE8
$946    $6C73   LD       VC, #73         ; Load 115 into VC
$948    $0FFB   SYS      $FFB            ; System call to FFB
$94A    $0C32   SYS      $C32            ; System call to C32
$94C    $6308   LD       V3, #08         ; Load 8 into V3
$94E    $23AF   CALL     $3AF            ; Call subroutine at 3AF
$950    $AAB0   LD       I, $AB0         ; Load AB0 into I
$952    $DDC3   DRW      VD, VC, #3      ; Draw 3-byte sprite at VD, VC
$954    $7458   ADD      V4, #58         ; Add 88 to V4
$956    $5A06   UNKNOWN  $5A06           ; Unknown 5xxx instruction
$958    $C121   RND      V1, #21         ; V1 = random & 21
$95A    $01A6   SYS      $1A6            ; System call to 1A6
$95C    $D14D   DRW      V1, V4, #D      ; Draw 13-byte sprite at V1, V4
$95E    $765A   ADD      V6, #5A         ; Add 90 to V6
$960    $1EE8   JP       $EE8            ; Jump to EE8
$962    $CDBB   RND      VD, #BB         ; VD = random & BB
$964    $7DBE   ADD      VD, #BE         ; Add 190 to VD
$966    $EAE4   UNKNOWN  $EAE4           ; Unknown Exxx instruction
$968    $9D98   UNKNOWN  $9D98           ; Unknown 9xxx instruction
$96A    $75A3   ADD      V5, #A3         ; Add 163 to V5
$96C    $B4ED   JP       V0, $4ED        ; Jump to V0 + 4ED
$96E    $2B2B   CALL     $B2B            ; Call subroutine at B2B
$970    $4BC1   SNE      VB, #C1         ; Skip if VB != 193
$972    $6F58   LD       VF, #58         ; Load 88 into VF
$974    $AE5B   LD       I, $E5B         ; Load E5B into I
$976    $7D63   ADD      VD, #63         ; Add 99 to VD
$978    $1532   JP       $532            ; Jump to 532
$97A    $C963   RND      V9, #63         ; V9 = random & 63
$97C    $543D   UNKNOWN  $543D           ; Unknown 5xxx instruction
$97E    $B640   JP       V0, $640        ; Jump to V0 + 640
$980    $97E6   UNKNOWN  $97E6           ; Unknown 9xxx instruction
$982    $3CEA   SE       VC, #EA         ; Skip if VC == 234
$984    $E38D   UNKNOWN  $E38D           ; Unknown Exxx instruction
$986    $7C83   ADD      VC, #83         ; Add 131 to VC
$988    $9D37   UNKNOWN  $9D37           ; Unknown 9xxx instruction
$98A    $7605   ADD      V6, #05         ; Add 5 to V6
$98C    $F86F   UNKNOWN  F86F            ; Unknown Fxxx instruction
$98E    $10BC   JP       $0BC            ; Jump to 0BC
$990    $7D39   ADD      VD, #39         ; Add 57 to VD
$992    $E4D5   UNKNOWN  $E4D5           ; Unknown Exxx instruction
$994    $112B   JP       $12B            ; Jump to 12B
$996    $91BC   UNKNOWN  $91BC           ; Unknown 9xxx instruction
$998    $39FA   SE       V9, #FA         ; Skip if V9 == 250
$99A    $A00B   LD       I, $00B         ; Load 00B into I
$99C    $43D9   SNE      V3, #D9         ; Skip if V3 != 217
$99E    $C292   RND      V2, #92         ; V2 = random & 92
$9A0    $20F0   CALL     $0F0            ; Call subroutine at 0F0
$9A2    $6B34   LD       VB, #34         ; Load 52 into VB
$9A4    $7D1A   ADD      VD, #1A         ; Add 26 to VD
$9A6    $27D2   CALL     $7D2            ; Call subroutine at 7D2
$9A8    $9D1B   UNKNOWN  $9D1B           ; Unknown 9xxx instruction
$9AA    $932D   UNKNOWN  $932D           ; Unknown 9xxx instruction
$9AC    $B86A   JP       V0, $86A        ; Jump to V0 + 86A
$9AE    $12B6   JP       $2B6            ; Jump to 2B6
$9B0    $6EA0   LD       VE, #A0         ; Load 160 into VE
$9B2    $7E63   ADD      VE, #63         ; Add 99 to VE
$9B4    $D9E7   DRW      V9, VE, #7      ; Draw 7-byte sprite at V9, VE
$9B6    $EDD4   UNKNOWN  $EDD4           ; Unknown Exxx instruction
$9B8    $D3C4   DRW      V3, VC, #4      ; Draw 4-byte sprite at V3, VC
$9BA    $735E   ADD      V3, #5E         ; Add 94 to V3
$9BC    $3967   SE       V9, #67         ; Skip if V9 == 103
$9BE    $1252   JP       $252            ; Jump to 252
$9C0    $C752   RND      V7, #52         ; V7 = random & 52
$9C2    $321C   SE       V2, #1C         ; Skip if V2 == 28
$9C4    $7197   ADD      V1, #97         ; Add 151 to V1
$9C6    $8797   SUBN     V7, V9          ; V7 = V9 - V7, VF = !borrow
$9C8    $1AC5   JP       $AC5            ; Jump to AC5
$9CA    $3956   SE       V9, #56         ; Skip if V9 == 86
$9CC    $B9A1   JP       V0, $9A1        ; Jump to V0 + 9A1
$9CE    $3ACE   SE       VA, #CE         ; Skip if VA == 206
$9D0    $362F   SE       V6, #2F         ; Skip if V6 == 47
$9D2    $02A3   SYS      $2A3            ; System call to 2A3
$9D4    $DD99   DRW      VD, V9, #9      ; Draw 9-byte sprite at VD, V9
$9D6    $3661   SE       V6, #61         ; Skip if V6 == 97
$9D8    $6334   LD       V3, #34         ; Load 52 into V3
$9DA    $7A21   ADD      VA, #21         ; Add 33 to VA
$9DC    $CC78   RND      VC, #78         ; VC = random & 78
$9DE    $DD4D   DRW      VD, V4, #D      ; Draw 13-byte sprite at VD, V4
$9E0    $930A   UNKNOWN  $930A           ; Unknown 9xxx instruction
$9E2    $B933   JP       V0, $933        ; Jump to V0 + 933
$9E4    $F790   UNKNOWN  F790            ; Unknown Fxxx instruction
$9E6    $4926   SNE      V9, #26         ; Skip if V9 != 38
$9E8    $5D4A   UNKNOWN  $5D4A           ; Unknown 5xxx instruction
$9EA    $13AC   JP       $3AC            ; Jump to 3AC
$9EC    $50B2   UNKNOWN  $50B2           ; Unknown 5xxx instruction
$9EE    $E8E5   UNKNOWN  $E8E5           ; Unknown Exxx instruction
$9F0    $4BC1   SNE      VB, #C1         ; Skip if VB != 193
$9F2    $B3C5   JP       V0, $3C5        ; Jump to V0 + 3C5
$9F4    $6988   LD       V9, #88         ; Load 136 into V9
$9F6    $8478   UNKNOWN  8478            ; Unknown 8xxx instruction
$9F8    $1EE8   JP       $EE8            ; Jump to EE8
$9FA    $6EBD   LD       VE, #BD         ; Load 189 into VE
$9FC    $3D54   SE       VD, #54         ; Skip if VD == 84
$9FE    $2623   CALL     $623            ; Call subroutine at 623
$A00    $F0A9   UNKNOWN  F0A9            ; Unknown Fxxx instruction
$A02    $6740   LD       V7, #40         ; Load 64 into V7
$A04    $1217   JP       $217            ; Jump to 217
$A06    $C039   RND      V0, #39         ; V0 = random & 39
$A08    $875E   SHL      V7              ; V7 <<= 1, VF = MSB
$A0A    $1DAE   JP       $DAE            ; Jump to DAE
$A0C    $1733   JP       $733            ; Jump to 733
$A0E    $168F   JP       $68F            ; Jump to 68F
$A10    $3A44   SE       VA, #44         ; Skip if VA == 68
$A12    $67CC   LD       V7, #CC         ; Load 204 into V7
$A14    $5139   UNKNOWN  $5139           ; Unknown 5xxx instruction
$A16    $2295   CALL     $295            ; Call subroutine at 295
$A18    $CAF1   RND      VA, #F1         ; VA = random & F1
$A1A    $D455   DRW      V4, V5, #5      ; Draw 5-byte sprite at V4, V5
$A1C    $1D56   JP       $D56            ; Jump to D56
$A1E    $D40F   DRW      V4, V0, #F      ; Draw 15-byte sprite at V4, V0
$A20    $21CF   CALL     $1CF            ; Call subroutine at 1CF
$A22    $547D   UNKNOWN  $547D           ; Unknown 5xxx instruction
$A24    $0538   SYS      $538            ; System call to 538
$A26    $FFD1   UNKNOWN  FFD1            ; Unknown Fxxx instruction
$A28    $1203   JP       $203            ; Jump to 203
$A2A    $0024   SYS      $024            ; System call to 024
$A2C    $610B   LD       V1, #0B         ; Load 11 into V1
$A2E    $A04D   LD       I, $04D         ; Load 04D into I
$A30    $A1CA   LD       I, $1CA         ; Load 1CA into I
$A32    $A618   LD       I, $618         ; Load 618 into I
$A34    $E14F   UNKNOWN  $E14F           ; Unknown Exxx instruction
$A36    $B275   JP       V0, $275        ; Jump to V0 + 275
$A38    $AB1D   LD       I, $B1D         ; Load B1D into I
$A3A    $DCE8   DRW      VC, VE, #8      ; Draw 8-byte sprite at VC, VE
$A3C    $61FF   LD       V1, #FF         ; Load 255 into V1
$A3E    $D042   DRW      V0, V4, #2      ; Draw 2-byte sprite at V0, V4
$A40    $E5AE   UNKNOWN  $E5AE           ; Unknown Exxx instruction
$A42    $38AE   SE       V8, #AE         ; Skip if V8 == 174
$A44    $1F63   JP       $F63            ; Jump to F63
$A46    $16CA   JP       $6CA            ; Jump to 6CA
$A48    $E769   UNKNOWN  $E769           ; Unknown Exxx instruction
$A4A    $EB4D   UNKNOWN  $EB4D           ; Unknown Exxx instruction
$A4C    $5A98   UNKNOWN  $5A98           ; Unknown 5xxx instruction
$A4E    $E968   UNKNOWN  $E968           ; Unknown Exxx instruction
$A50    $126A   JP       $26A            ; Jump to 26A
$A52    $ABC5   LD       I, $BC5         ; Load BC5 into I
$A54    $4498   SNE      V4, #98         ; Skip if V4 != 152
$A56    $35BA   SE       V5, #BA         ; Skip if V5 == 186
$A58    $BA38   JP       V0, $A38        ; Jump to V0 + A38
$A5A    $B10B   JP       V0, $10B        ; Jump to V0 + 10B
$A5C    $42A7   SNE      V2, #A7         ; Skip if V2 != 167
$A5E    $1981   JP       $981            ; Jump to 981
$A60    $D692   DRW      V6, V9, #2      ; Draw 2-byte sprite at V6, V9
$A62    $D2E9   DRW      V2, VE, #9      ; Draw 9-byte sprite at V2, VE
$A64    $9CF1   UNKNOWN  $9CF1           ; Unknown 9xxx instruction
$A66    $30B6   SE       V0, #B6         ; Skip if V0 == 182
$A68    $15DA   JP       $5DA            ; Jump to 5DA
$A6A    $4B86   SNE      VB, #86         ; Skip if VB != 134
$A6C    $EF2B   UNKNOWN  $EF2B           ; Unknown Exxx instruction
$A6E    $DD6F   DRW      VD, V6, #F      ; Draw 15-byte sprite at VD, V6
$A70    $19FB   JP       $9FB            ; Jump to 9FB
$A72    $900C   UNKNOWN  $900C           ; Unknown 9xxx instruction
$A74    $64DB   LD       V4, #DB         ; Load 219 into V4
$A76    $BD2F   JP       V0, $D2F        ; Jump to V0 + D2F
$A78    $F6D0   UNKNOWN  F6D0            ; Unknown Fxxx instruction
$A7A    $FCA3   UNKNOWN  FCA3            ; Unknown Fxxx instruction
$A7C    $3EA8   SE       VE, #A8         ; Skip if VE == 168
$A7E    $0BC4   SYS      $BC4            ; System call to BC4
$A80    $EFA1   SKNP     VF              ; Skip if key VF not pressed
$A82    $5664   UNKNOWN  $5664           ; Unknown 5xxx instruction
$A84    $D893   DRW      V8, V9, #3      ; Draw 3-byte sprite at V8, V9
$A86    $7578   ADD      V5, #78         ; Add 120 to V5
$A88    $F0B9   UNKNOWN  F0B9            ; Unknown Fxxx instruction
$A8A    $4E96   SNE      VE, #96         ; Skip if VE != 150
$A8C    $602E   LD       V0, #2E         ; Load 46 into V0
$A8E    $3318   SE       V3, #18         ; Skip if V3 == 24
$A90    $E3B2   UNKNOWN  $E3B2           ; Unknown Exxx instruction
$A92    $B15E   JP       V0, $15E        ; Jump to V0 + 15E
$A94    $D7D3   DRW      V7, VD, #3      ; Draw 3-byte sprite at V7, VD
$A96    $9640   SNE      V6, V4          ; Skip if V6 != V4
$A98    $8695   SUB      V6, V9          ; V6 -= V9, VF = !borrow
$A9A    $11A9   JP       $1A9            ; Jump to 1A9
$A9C    $9A37   UNKNOWN  $9A37           ; Unknown 9xxx instruction
$A9E    $52BF   UNKNOWN  $52BF           ; Unknown 5xxx instruction
$AA0    $147E   JP       $47E            ; Jump to 47E
$AA2    $F957   UNKNOWN  F957            ; Unknown Fxxx instruction
$AA4    $DB72   DRW      VB, V7, #2      ; Draw 2-byte sprite at VB, V7
$AA6    $C17A   RND      V1, #7A         ; V1 = random & 7A
$AA8    $A97F   LD       I, $97F         ; Load 97F into I
$AAA    $C9FE   RND      V9, #FE         ; V9 = random & FE
$AAC    $6249   LD       V2, #49         ; Load 73 into V2
$AAE    $000C   SYS      $00C            ; System call to 00C
$AB0    $DE73   DRW      VE, V7, #3      ; Draw 3-byte sprite at VE, V7
$AB2    $576D   UNKNOWN  $576D           ; Unknown 5xxx instruction
$AB4    $A843   LD       I, $843         ; Load 843 into I
$AB6    $FB8A   UNKNOWN  FB8A            ; Unknown Fxxx instruction
$AB8    $5D7F   UNKNOWN  $5D7F           ; Unknown 5xxx instruction
$ABA    $F840   UNKNOWN  F840            ; Unknown Fxxx instruction
$ABC    $BC52   JP       V0, $C52        ; Jump to V0 + C52
$ABE    $E0C2   UNKNOWN  $E0C2           ; Unknown Exxx instruction
$AC0    $0F86   SYS      $F86            ; System call to F86
$AC2    $144C   JP       $44C            ; Jump to 44C
$AC4    $46F0   SNE      V6, #F0         ; Skip if V6 != 240
$AC6    $5013   UNKNOWN  $5013           ; Unknown 5xxx instruction
$AC8    $91C8   UNKNOWN  $91C8           ; Unknown 9xxx instruction
$ACA    $9053   UNKNOWN  $9053           ; Unknown 9xxx instruction
$ACC    $EA49   UNKNOWN  $EA49           ; Unknown Exxx instruction
$ACE    $B43C   JP       V0, $43C        ; Jump to V0 + 43C
$AD0    $61D3   LD       V1, #D3         ; Load 211 into V1
$AD2    $04B9   SYS      $4B9            ; System call to 4B9
$AD4    $0C56   SYS      $C56            ; System call to C56
$AD6    $8608   UNKNOWN  8608            ; Unknown 8xxx instruction
$AD8    $1E80   JP       $E80            ; Jump to E80
$ADA    $36D2   SE       V6, #D2         ; Skip if V6 == 210
$ADC    $576D   UNKNOWN  $576D           ; Unknown 5xxx instruction
$ADE    $81B2   AND      V1, VB          ; V1 &= VB
$AE0    $6CEF   LD       VC, #EF         ; Load 239 into VC
$AE2    $8777   SUBN     V7, V7          ; V7 = V7 - V7, VF = !borrow
$AE4    $271A   CALL     $71A            ; Call subroutine at 71A
$AE6    $0FF7   SYS      $FF7            ; System call to FF7
$AE8    $2E46   CALL     $E46            ; Call subroutine at E46
$AEA    $09DF   SYS      $9DF            ; System call to 9DF
$AEC    $09F5   SYS      $9F5            ; System call to 9F5
$AEE    $AF3F   LD       I, $F3F         ; Load F3F into I
$AF0    $F586   UNKNOWN  F586            ; Unknown Fxxx instruction
$AF2    $7A46   ADD      VA, #46         ; Add 70 to VA
$AF4    $73D4   ADD      V3, #D4         ; Add 212 to V3
$AF6    $426C   SNE      V2, #6C         ; Skip if V2 != 108
$AF8    $67AB   LD       V7, #AB         ; Load 171 into V7
$AFA    $1066   JP       $066            ; Jump to 066
$AFC    $0B92   SYS      $B92            ; System call to B92
$AFE    $444E   SNE      V4, #4E         ; Skip if V4 != 78
$B00    $258D   CALL     $58D            ; Call subroutine at 58D
$B02    $CC54   RND      VC, #54         ; VC = random & 54
$B04    $C5AB   RND      V5, #AB         ; V5 = random & AB
$B06    $E8F3   UNKNOWN  $E8F3           ; Unknown Exxx instruction
$B08    $E6AA   UNKNOWN  $E6AA           ; Unknown Exxx instruction
$B0A    $E8C8   UNKNOWN  $E8C8           ; Unknown Exxx instruction
$B0C    $6447   LD       V4, #47         ; Load 71 into V4
$B0E    $1562   JP       $562            ; Jump to 562
$B10    $907C   UNKNOWN  $907C           ; Unknown 9xxx instruction
$B12    $84CD   UNKNOWN  84CD            ; Unknown 8xxx instruction
$B14    $4F92   SNE      VF, #92         ; Skip if VF != 146
$B16    $5EFF   UNKNOWN  $5EFF           ; Unknown 5xxx instruction
$B18    $4C39   SNE      VC, #39         ; Skip if VC != 57
$B1A    $DC19   DRW      VC, V1, #9      ; Draw 9-byte sprite at VC, V1
$B1C    $FDB2   UNKNOWN  FDB2            ; Unknown Fxxx instruction
$B1E    $F4E9   UNKNOWN  F4E9            ; Unknown Fxxx instruction
$B20    $AA8C   LD       I, $A8C         ; Load A8C into I
$B22    $28E8   CALL     $8E8            ; Call subroutine at 8E8
$B24    $3B01   SE       VB, #01         ; Skip if VB == 1
$B26    $A16A   LD       I, $16A         ; Load 16A into I
$B28    $D1CF   DRW      V1, VC, #F      ; Draw 15-byte sprite at V1, VC
$B2A    $60BB   LD       V0, #BB         ; Load 187 into V0
$B2C    $E11B   UNKNOWN  $E11B           ; Unknown Exxx instruction
$B2E    $53A1   UNKNOWN  $53A1           ; Unknown 5xxx instruction
$B30    $978D   UNKNOWN  $978D           ; Unknown 9xxx instruction
$B32    $037A   SYS      $37A            ; System call to 37A
$B34    $E578   UNKNOWN  $E578           ; Unknown Exxx instruction
$B36    $42DB   SNE      V2, #DB         ; Skip if V2 != 219
$B38    $F0EC   UNKNOWN  F0EC            ; Unknown Fxxx instruction
$B3A    $FC55   LD       [I], VC         ; Store V0-VC at I
$B3C    $71A9   ADD      V1, #A9         ; Add 169 to V1
$B3E    $0C27   SYS      $C27            ; System call to C27
$B40    $ED23   UNKNOWN  $ED23           ; Unknown Exxx instruction
$B42    $9FED   UNKNOWN  $9FED           ; Unknown 9xxx instruction
$B44    $4015   SNE      V0, #15         ; Skip if V0 != 21
$B46    $B950   JP       V0, $950        ; Jump to V0 + 950
$B48    $6C84   LD       VC, #84         ; Load 132 into VC
$B4A    $1381   JP       $381            ; Jump to 381
$B4C    $9E84   UNKNOWN  $9E84           ; Unknown 9xxx instruction
$B4E    $8B33   XOR      VB, V3          ; VB ^= V3
$B50    $21AA   CALL     $1AA            ; Call subroutine at 1AA
$B52    $1ED1   JP       $ED1            ; Jump to ED1
$B54    $14ED   JP       $4ED            ; Jump to 4ED
$B56    $18F9   JP       $8F9            ; Jump to 8F9
$B58    $3FC8   SE       VF, #C8         ; Skip if VF == 200
$B5A    $0D00   SYS      $D00            ; System call to D00
$B5C    $72F5   ADD      V2, #F5         ; Add 245 to V2
$B5E    $ADA5   LD       I, $DA5         ; Load DA5 into I
$B60    $0ECA   SYS      $ECA            ; System call to ECA
$B62    $87E7   SUBN     V7, VE          ; V7 = VE - V7, VF = !borrow
$B64    $2464   CALL     $464            ; Call subroutine at 464
$B66    $DA1E   DRW      VA, V1, #E      ; Draw 14-byte sprite at VA, V1
$B68    $AB9C   LD       I, $B9C         ; Load B9C into I
$B6A    $9161   UNKNOWN  $9161           ; Unknown 9xxx instruction
$B6C    $B6FD   JP       V0, $6FD        ; Jump to V0 + 6FD
$B6E    $0C4F   SYS      $C4F            ; System call to C4F
$B70    $B4DB   JP       V0, $4DB        ; Jump to V0 + 4DB
$B72    $1B33   JP       $B33            ; Jump to B33
$B74    $9BEE   UNKNOWN  $9BEE           ; Unknown 9xxx instruction
$B76    $8E11   OR       VE, V1          ; VE |= V1
$B78    $59FE   UNKNOWN  $59FE           ; Unknown 5xxx instruction
$B7A    $D53C   DRW      V5, V3, #C      ; Draw 12-byte sprite at V5, V3
$B7C    $2106   CALL     $106            ; Call subroutine at 106
$B7E    $49FF   SNE      V9, #FF         ; Skip if V9 != 255
$B80    $C924   RND      V9, #24         ; V9 = random & 24
$B82    $6F9F   LD       VF, #9F         ; Load 159 into VF
$B84    $4BEF   SNE      VB, #EF         ; Skip if VB != 239
$B86    $95AC   UNKNOWN  $95AC           ; Unknown 9xxx instruction
$B88    $7A48   ADD      VA, #48         ; Add 72 to VA
$B8A    $0281   SYS      $281            ; System call to 281
$B8C    $2565   CALL     $565            ; Call subroutine at 565
$B8E    $5484   UNKNOWN  $5484           ; Unknown 5xxx instruction
$B90    $D9AA   DRW      V9, VA, #A      ; Draw 10-byte sprite at V9, VA
$B92    $1B80   JP       $B80            ; Jump to B80
$B94    $D8EB   DRW      V8, VE, #B      ; Draw 11-byte sprite at V8, VE
$B96    $8570   LD       V5, V7          ; V5 = V7
$B98    $7313   ADD      V3, #13         ; Add 19 to V3
$B9A    $EE7D   UNKNOWN  $EE7D           ; Unknown Exxx instruction
$B9C    $E9D5   UNKNOWN  $E9D5           ; Unknown Exxx instruction
$B9E    $D709   DRW      V7, V0, #9      ; Draw 9-byte sprite at V7, V0
$BA0    $7B34   ADD      VB, #34         ; Add 52 to VB
$BA2    $625B   LD       V2, #5B         ; Load 91 into V2
$BA4    $89E1   OR       V9, VE          ; V9 |= VE
$BA6    $8BBF   UNKNOWN  8BBF            ; Unknown 8xxx instruction
$BA8    $5E8D   UNKNOWN  $5E8D           ; Unknown 5xxx instruction
$BAA    $0783   SYS      $783            ; System call to 783
$BAC    $1E79   JP       $E79            ; Jump to E79
$BAE    $7C34   ADD      VC, #34         ; Add 52 to VC
$BB0    $A87C   LD       I, $87C         ; Load 87C into I
$BB2    $CBED   RND      VB, #ED         ; VB = random & ED
$BB4    $8FF4   ADD      VF, VF          ; VF += VF, VF = carry
$BB6    $5129   UNKNOWN  $5129           ; Unknown 5xxx instruction
$BB8    $8DFA   UNKNOWN  8DFA            ; Unknown 8xxx instruction
$BBA    $0AD8   SYS      $AD8            ; System call to AD8
$BBC    $C1CE   RND      V1, #CE         ; V1 = random & CE
$BBE    $B342   JP       V0, $342        ; Jump to V0 + 342
$BC0    $E9E2   UNKNOWN  $E9E2           ; Unknown Exxx instruction
$BC2    $9B0B   UNKNOWN  $9B0B           ; Unknown 9xxx instruction
$BC4    $C2EA   RND      V2, #EA         ; V2 = random & EA
$BC6    $81DE   SHL      V1              ; V1 <<= 1, VF = MSB
$BC8    $6517   LD       V5, #17         ; Load 23 into V5
$BCA    $FD51   UNKNOWN  FD51            ; Unknown Fxxx instruction
$BCC    $8BF8   UNKNOWN  8BF8            ; Unknown 8xxx instruction
$BCE    $ECF2   UNKNOWN  $ECF2           ; Unknown Exxx instruction
$BD0    $BE9C   JP       V0, $E9C        ; Jump to V0 + E9C
$BD2    $49EC   SNE      V9, #EC         ; Skip if V9 != 236
$BD4    $5AD7   UNKNOWN  $5AD7           ; Unknown 5xxx instruction
$BD6    $1672   JP       $672            ; Jump to 672
$BD8    $3216   SE       V2, #16         ; Skip if V2 == 22
$BDA    $5595   UNKNOWN  $5595           ; Unknown 5xxx instruction
$BDC    $2337   CALL     $337            ; Call subroutine at 337
$BDE    $10EE   JP       $0EE            ; Jump to 0EE
$BE0    $8BBF   UNKNOWN  8BBF            ; Unknown 8xxx instruction
$BE2    $F0B0   UNKNOWN  F0B0            ; Unknown Fxxx instruction
$BE4    $7472   ADD      V4, #72         ; Add 114 to V4
$BE6    $C2F5   RND      V2, #F5         ; V2 = random & F5
$BE8    $1823   JP       $823            ; Jump to 823
$BEA    $EDF7   UNKNOWN  $EDF7           ; Unknown Exxx instruction
$BEC    $5EA3   UNKNOWN  $5EA3           ; Unknown 5xxx instruction
$BEE    $3CC0   SE       VC, #C0         ; Skip if VC == 192
$BF0    $116F   JP       $16F            ; Jump to 16F
$BF2    $F2CF   UNKNOWN  F2CF            ; Unknown Fxxx instruction
$BF4    $47BE   SNE      V7, #BE         ; Skip if V7 != 190
$BF6    $A5BD   LD       I, $5BD         ; Load 5BD into I
$BF8    $ED95   UNKNOWN  $ED95           ; Unknown Exxx instruction
$BFA    $382B   SE       V8, #2B         ; Skip if V8 == 43
$BFC    $5993   UNKNOWN  $5993           ; Unknown 5xxx instruction
$BFE    $C9F7   RND      V9, #F7         ; V9 = random & F7
$C00    $D996   DRW      V9, V9, #6      ; Draw 6-byte sprite at V9, V9
$C02    $6E35   LD       VE, #35         ; Load 53 into VE
$C04    $B9CF   JP       V0, $9CF        ; Jump to V0 + 9CF
$C06    $587B   UNKNOWN  $587B           ; Unknown 5xxx instruction
$C08    $DBBC   DRW      VB, VB, #C      ; Draw 12-byte sprite at VB, VB
$C0A    $E004   UNKNOWN  $E004           ; Unknown Exxx instruction
$C0C    $4744   SNE      V7, #44         ; Skip if V7 != 68
$C0E    $0036   SYS      $036            ; System call to 036
$C10    $9BBB   UNKNOWN  $9BBB           ; Unknown 9xxx instruction
$C12    $0ED2   SYS      $ED2            ; System call to ED2
$C14    $634E   LD       V3, #4E         ; Load 78 into V3
$C16    $77A2   ADD      V7, #A2         ; Add 162 to V7
$C18    $C549   RND      V5, #49         ; V5 = random & 49
$C1A    $41F9   SNE      V1, #F9         ; Skip if V1 != 249
$C1C    $8AC8   UNKNOWN  8AC8            ; Unknown 8xxx instruction
$C1E    $22A3   CALL     $2A3            ; Call subroutine at 2A3
$C20    $F910   UNKNOWN  F910            ; Unknown Fxxx instruction
$C22    $520E   UNKNOWN  $520E           ; Unknown 5xxx instruction
$C24    $2FEB   CALL     $FEB            ; Call subroutine at FEB
$C26    $C703   RND      V7, #03         ; V7 = random & 03
$C28    $7A25   ADD      VA, #25         ; Add 37 to VA
$C2A    $F4FC   UNKNOWN  F4FC            ; Unknown Fxxx instruction
$C2C    $A049   LD       I, $049         ; Load 049 into I
$C2E    $A34E   LD       I, $34E         ; Load 34E into I
$C30    $C898   RND      V8, #98         ; V8 = random & 98
$C32    $747E   ADD      V4, #7E         ; Add 126 to V4
$C34    $6B95   LD       VB, #95         ; Load 149 into VB
$C36    $50D5   UNKNOWN  $50D5           ; Unknown 5xxx instruction
$C38    $0EF1   SYS      $EF1            ; System call to EF1
$C3A    $CCEA   RND      VC, #EA         ; VC = random & EA
$C3C    $DC23   DRW      VC, V2, #3      ; Draw 3-byte sprite at VC, V2
$C3E    $333F   SE       V3, #3F         ; Skip if V3 == 63
$C40    $7DAF   ADD      VD, #AF         ; Add 175 to VD
$C42    $8FBB   UNKNOWN  8FBB            ; Unknown 8xxx instruction
$C44    $C853   RND      V8, #53         ; V8 = random & 53
$C46    $E3DD   UNKNOWN  $E3DD           ; Unknown Exxx instruction
$C48    $1E99   JP       $E99            ; Jump to E99
$C4A    $7A00   ADD      VA, #00         ; Add 0 to VA
$C4C    $9AD9   UNKNOWN  $9AD9           ; Unknown 9xxx instruction
$C4E    $FCDA   UNKNOWN  FCDA            ; Unknown Fxxx instruction
$C50    $42FF   SNE      V2, #FF         ; Skip if V2 != 255
$C52    $1BAF   JP       $BAF            ; Jump to BAF
$C54    $FBB7   UNKNOWN  FBB7            ; Unknown Fxxx instruction
$C56    $E753   UNKNOWN  $E753           ; Unknown Exxx instruction
$C58    $B8F8   JP       V0, $8F8        ; Jump to V0 + 8F8
$C5A    $1222   JP       $222            ; Jump to 222
$C5C    $DB0C   DRW      VB, V0, #C      ; Draw 12-byte sprite at VB, V0
$C5E    $6B08   LD       VB, #08         ; Load 8 into VB
$C60    $18C8   JP       $8C8            ; Jump to 8C8
$C62    $F4A1   UNKNOWN  F4A1            ; Unknown Fxxx instruction
$C64    $08A3   SYS      $8A3            ; System call to 8A3
$C66    $E3A2   UNKNOWN  $E3A2           ; Unknown Exxx instruction
$C68    $568F   UNKNOWN  $568F           ; Unknown 5xxx instruction
$C6A    $E2C8   UNKNOWN  $E2C8           ; Unknown Exxx instruction
$C6C    $9C52   UNKNOWN  $9C52           ; Unknown 9xxx instruction
$C6E    $7D13   ADD      VD, #13         ; Add 19 to VD
$C70    $DCCC   DRW      VC, VC, #C      ; Draw 12-byte sprite at VC, VC
$C72    $25F1   CALL     $5F1            ; Call subroutine at 5F1
$C74    $619C   LD       V1, #9C         ; Load 156 into V1
$C76    $2ECC   CALL     $ECC            ; Call subroutine at ECC
$C78    $4E6E   SNE      VE, #6E         ; Skip if VE != 110
$C7A    $CF10   RND      VF, #10         ; VF = random & 10
$C7C    $C905   RND      V9, #05         ; V9 = random & 05
$C7E    $AB95   LD       I, $B95         ; Load B95 into I
$C80    $3EC2   SE       VE, #C2         ; Skip if VE == 194
$C82    $77A1   ADD      V7, #A1         ; Add 161 to V7
$C84    $7269   ADD      V2, #69         ; Add 105 to V2
$C86    $3992   SE       V9, #92         ; Skip if V9 == 146
$C88    $2BA4   CALL     $BA4            ; Call subroutine at BA4
$C8A    $8C29   UNKNOWN  8C29            ; Unknown 8xxx instruction
$C8C    $DBC0   DRW      VB, VC, #0      ; Draw 0-byte sprite at VB, VC
$C8E    $8C43   XOR      VC, V4          ; VC ^= V4
$C90    $59C5   UNKNOWN  $59C5           ; Unknown 5xxx instruction
$C92    $921F   UNKNOWN  $921F           ; Unknown 9xxx instruction
$C94    $4258   SNE      V2, #58         ; Skip if V2 != 88
$C96    $449D   SNE      V4, #9D         ; Skip if V4 != 157
$C98    $30B0   SE       V0, #B0         ; Skip if V0 == 176
$C9A    $AB54   LD       I, $B54         ; Load B54 into I
$C9C    $C389   RND      V3, #89         ; V3 = random & 89
$C9E    $DA95   DRW      VA, V9, #5      ; Draw 5-byte sprite at VA, V9
$CA0    $E6B0   UNKNOWN  $E6B0           ; Unknown Exxx instruction
$CA2    $0B62   SYS      $B62            ; System call to B62
$CA4    $8985   SUB      V9, V8          ; V9 -= V8, VF = !borrow
$CA6    $EE16   UNKNOWN  $EE16           ; Unknown Exxx instruction
$CA8    $EBC0   UNKNOWN  $EBC0           ; Unknown Exxx instruction
$CAA    $0B9B   SYS      $B9B            ; System call to B9B
$CAC    $F9F7   UNKNOWN  F9F7            ; Unknown Fxxx instruction
$CAE    $D146   DRW      V1, V4, #6      ; Draw 6-byte sprite at V1, V4
$CB0    $C4C9   RND      V4, #C9         ; V4 = random & C9
$CB2    $FB92   UNKNOWN  FB92            ; Unknown Fxxx instruction
$CB4    $1D1C   JP       $D1C            ; Jump to D1C
$CB6    $E86F   UNKNOWN  $E86F           ; Unknown Exxx instruction
$CB8    $B008   JP       V0, $008        ; Jump to V0 + 008
$CBA    $F3B9   UNKNOWN  F3B9            ; Unknown Fxxx instruction
$CBC    $1B0A   JP       $B0A            ; Jump to B0A
$CBE    $5A16   UNKNOWN  $5A16           ; Unknown 5xxx instruction
$CC0    $7B67   ADD      VB, #67         ; Add 103 to VB
$CC2    $2504   CALL     $504            ; Call subroutine at 504
$CC4    $7ECB   ADD      VE, #CB         ; Add 203 to VE
$CC6    $FC15   LD       DT, VC          ; Delay timer = VC
$CC8    $5E80   SE       VE, V8          ; Skip if VE == V8
$CCA    $1669   JP       $669            ; Jump to 669
$CCC    $CA5D   RND      VA, #5D         ; VA = random & 5D
$CCE    $6252   LD       V2, #52         ; Load 82 into V2
$CD0    $A8ED   LD       I, $8ED         ; Load 8ED into I
$CD2    $8D51   OR       VD, V5          ; VD |= V5
$CD4    $E41F   UNKNOWN  $E41F           ; Unknown Exxx instruction
$CD6    $2F1B   CALL     $F1B            ; Call subroutine at F1B
$CD8    $694F   LD       V9, #4F         ; Load 79 into V9
$CDA    $24B0   CALL     $4B0            ; Call subroutine at 4B0
$CDC    $2BB5   CALL     $BB5            ; Call subroutine at BB5
$CDE    $A598   LD       I, $598         ; Load 598 into I
$CE0    $5050   SE       V0, V5          ; Skip if V0 == V5
$CE2    $8280   LD       V2, V8          ; V2 = V8
$CE4    $4C65   SNE      VC, #65         ; Skip if VC != 101
$CE6    $7B5D   ADD      VB, #5D         ; Add 93 to VB
$CE8    $9B1E   UNKNOWN  $9B1E           ; Unknown 9xxx instruction
$CEA    $1D9D   JP       $D9D            ; Jump to D9D
$CEC    $481C   SNE      V8, #1C         ; Skip if V8 != 28
$CEE    $ECCA   UNKNOWN  $ECCA           ; Unknown Exxx instruction
$CF0    $CC2C   RND      VC, #2C         ; VC = random & 2C
$CF2    $46FC   SNE      V6, #FC         ; Skip if V6 != 252
$CF4    $A291   LD       I, $291         ; Load 291 into I
$CF6    $E6B0   UNKNOWN  $E6B0           ; Unknown Exxx instruction
$CF8    $4DE3   SNE      VD, #E3         ; Skip if VD != 227
$CFA    $B15F   JP       V0, $15F        ; Jump to V0 + 15F
$CFC    $9A65   UNKNOWN  $9A65           ; Unknown 9xxx instruction
$CFE    $7FEC   ADD      VF, #EC         ; Add 236 to VF
$D00    $0CC3   SYS      $CC3            ; System call to CC3
$D02    $730E   ADD      V3, #0E         ; Add 14 to V3
$D04    $1378   JP       $378            ; Jump to 378
$D06    $59C7   UNKNOWN  $59C7           ; Unknown 5xxx instruction
$D08    $4AB4   SNE      VA, #B4         ; Skip if VA != 180
$D0A    $1150   JP       $150            ; Jump to 150
$D0C    $8E21   OR       VE, V2          ; VE |= V2
$D0E    $F3DC   UNKNOWN  F3DC            ; Unknown Fxxx instruction
$D10    $DC69   DRW      VC, V6, #9      ; Draw 9-byte sprite at VC, V6
$D12    $1686   JP       $686            ; Jump to 686
$D14    $4F8E   SNE      VF, #8E         ; Skip if VF != 142
$D16    $E13C   UNKNOWN  $E13C           ; Unknown Exxx instruction
$D18    $66F0   LD       V6, #F0         ; Load 240 into V6
$D1A    $5540   SE       V5, V4          ; Skip if V5 == V4
$D1C    $9B30   SNE      VB, V3          ; Skip if VB != V3
$D1E    $1A18   JP       $A18            ; Jump to A18
$D20    $8BBE   SHL      VB              ; VB <<= 1, VF = MSB
$D22    $A599   LD       I, $599         ; Load 599 into I
$D24    $93F4   UNKNOWN  $93F4           ; Unknown 9xxx instruction
$D26    $3DE6   SE       VD, #E6         ; Skip if VD == 230
$D28    $27DC   CALL     $7DC            ; Call subroutine at 7DC
$D2A    $6CB3   LD       VC, #B3         ; Load 179 into VC
$D2C    $694F   LD       V9, #4F         ; Load 79 into V9
$D2E    $13F7   JP       $3F7            ; Jump to 3F7
$D30    $7618   ADD      V6, #18         ; Add 24 to V6
$D32    $08CB   SYS      $8CB            ; System call to 8CB
$D34    $BACD   JP       V0, $ACD        ; Jump to V0 + ACD
$D36    $DB20   DRW      VB, V2, #0      ; Draw 0-byte sprite at VB, V2
$D38    $E719   UNKNOWN  $E719           ; Unknown Exxx instruction
$D3A    $7A48   ADD      VA, #48         ; Add 72 to VA
$D3C    $CCB0   RND      VC, #B0         ; VC = random & B0
$D3E    $7AA3   ADD      VA, #A3         ; Add 163 to VA
$D40    $BAF1   JP       V0, $AF1        ; Jump to V0 + AF1
$D42    $D92F   DRW      V9, V2, #F      ; Draw 15-byte sprite at V9, V2
$D44    $1DED   JP       $DED            ; Jump to DED
$D46    $C793   RND      V7, #93         ; V7 = random & 93
$D48    $C0A3   RND      V0, #A3         ; V0 = random & A3
$D4A    $085A   SYS      $85A            ; System call to 85A
$D4C    $0018   SYS      $018            ; System call to 018
$D4E    $1BDB   JP       $BDB            ; Jump to BDB
$D50    $9B1D   UNKNOWN  $9B1D           ; Unknown 9xxx instruction
$D52    $67B8   LD       V7, #B8         ; Load 184 into V7
$D54    $1E10   JP       $E10            ; Jump to E10
$D56    $57B4   UNKNOWN  $57B4           ; Unknown 5xxx instruction
$D58    $8FC0   LD       VF, VC          ; VF = VC
$D5A    $6325   LD       V3, #25         ; Load 37 into V3
$D5C    $5E89   UNKNOWN  $5E89           ; Unknown 5xxx instruction
$D5E    $92C8   UNKNOWN  $92C8           ; Unknown 9xxx instruction
$D60    $A293   LD       I, $293         ; Load 293 into I
$D62    $F527   UNKNOWN  F527            ; Unknown Fxxx instruction
$D64    $9B71   UNKNOWN  $9B71           ; Unknown 9xxx instruction
$D66    $C2CA   RND      V2, #CA         ; V2 = random & CA
$D68    $2957   CALL     $957            ; Call subroutine at 957
$D6A    $2800   CALL     $800            ; Call subroutine at 800
$D6C    $7D66   ADD      VD, #66         ; Add 102 to VD
$D6E    $7B99   ADD      VB, #99         ; Add 153 to VB
$D70    $C9EB   RND      V9, #EB         ; V9 = random & EB
$D72    $BA85   JP       V0, $A85        ; Jump to V0 + A85
$D74    $4C00   SNE      VC, #00         ; Skip if VC != 0
$D76    $8073   XOR      V0, V7          ; V0 ^= V7
$D78    $968C   UNKNOWN  $968C           ; Unknown 9xxx instruction
$D7A    $86F1   OR       V6, VF          ; V6 |= VF
$D7C    $837F   UNKNOWN  837F            ; Unknown 8xxx instruction
$D7E    $13B8   JP       $3B8            ; Jump to 3B8
$D80    $828E   SHL      V2              ; V2 <<= 1, VF = MSB
$D82    $D22A   DRW      V2, V2, #A      ; Draw 10-byte sprite at V2, V2
$D84    $7C89   ADD      VC, #89         ; Add 137 to VC
$D86    $FED9   UNKNOWN  FED9            ; Unknown Fxxx instruction
$D88    $ECFB   UNKNOWN  $ECFB           ; Unknown Exxx instruction
$D8A    $2455   CALL     $455            ; Call subroutine at 455
$D8C    $F5C6   UNKNOWN  F5C6            ; Unknown Fxxx instruction
$D8E    $0D07   SYS      $D07            ; System call to D07
$D90    $0E07   SYS      $E07            ; System call to E07
$D92    $6CB8   LD       VC, #B8         ; Load 184 into VC
$D94    $038F   SYS      $38F            ; System call to 38F
$D96    $65D1   LD       V5, #D1         ; Load 209 into V5
$D98    $198A   JP       $98A            ; Jump to 98A
$D9A    $8687   SUBN     V6, V8          ; V6 = V8 - V6, VF = !borrow
$D9C    $9F55   UNKNOWN  $9F55           ; Unknown 9xxx instruction
$D9E    $BDD9   JP       V0, $DD9        ; Jump to V0 + DD9
$DA0    $0D7A   SYS      $D7A            ; System call to D7A
$DA2    $5940   SE       V9, V4          ; Skip if V9 == V4
$DA4    $747A   ADD      V4, #7A         ; Add 122 to V4
$DA6    $7C37   ADD      VC, #37         ; Add 55 to VC
$DA8    $EE6D   UNKNOWN  $EE6D           ; Unknown Exxx instruction
$DAA    $EF16   UNKNOWN  $EF16           ; Unknown Exxx instruction
$DAC    $2B34   CALL     $B34            ; Call subroutine at B34
$DAE    $FCB4   UNKNOWN  FCB4            ; Unknown Fxxx instruction
$DB0    $675C   LD       V7, #5C         ; Load 92 into V7
$DB2    $6800   LD       V8, #00         ; Load 0 into V8
$DB4    $5842   UNKNOWN  $5842           ; Unknown 5xxx instruction
$DB6    $BCE9   JP       V0, $CE9        ; Jump to V0 + CE9
$DB8    $3AAB   SE       VA, #AB         ; Skip if VA == 171
$DBA    $09B3   SYS      $9B3            ; System call to 9B3
$DBC    $7A55   ADD      VA, #55         ; Add 85 to VA
$DBE    $E52A   UNKNOWN  $E52A           ; Unknown Exxx instruction
$DC0    $B212   JP       V0, $212        ; Jump to V0 + 212
$DC2    $F393   UNKNOWN  F393            ; Unknown Fxxx instruction
$DC4    $74F0   ADD      V4, #F0         ; Add 240 to V4
$DC6    $F815   LD       DT, V8          ; Delay timer = V8
$DC8    $3D17   SE       VD, #17         ; Skip if VD == 23
$DCA    $0825   SYS      $825            ; System call to 825
$DCC    $3EC8   SE       VE, #C8         ; Skip if VE == 200
$DCE    $301F   SE       V0, #1F         ; Skip if V0 == 31
$DD0    $4223   SNE      V2, #23         ; Skip if V2 != 35
$DD2    $244A   CALL     $44A            ; Call subroutine at 44A
$DD4    $6EB8   LD       VE, #B8         ; Load 184 into VE
$DD6    $5FB5   UNKNOWN  $5FB5           ; Unknown 5xxx instruction
$DD8    $4176   SNE      V1, #76         ; Skip if V1 != 118
$DDA    $D097   DRW      V0, V9, #7      ; Draw 7-byte sprite at V0, V9
$DDC    $B1A8   JP       V0, $1A8        ; Jump to V0 + 1A8
$DDE    $8116   SHR      V1              ; V1 >>= 1, VF = LSB
$DE0    $7D2E   ADD      VD, #2E         ; Add 46 to VD
$DE2    $EF24   UNKNOWN  $EF24           ; Unknown Exxx instruction
$DE4    $3903   SE       V9, #03         ; Skip if V9 == 3
$DE6    $E325   UNKNOWN  $E325           ; Unknown Exxx instruction
$DE8    $1EB5   JP       $EB5            ; Jump to EB5
$DEA    $DA2E   DRW      VA, V2, #E      ; Draw 14-byte sprite at VA, V2
$DEC    $0693   SYS      $693            ; System call to 693
$DEE    $EF46   UNKNOWN  $EF46           ; Unknown Exxx instruction
$DF0    $B769   JP       V0, $769        ; Jump to V0 + 769
$DF2    $DD15   DRW      VD, V1, #5      ; Draw 5-byte sprite at VD, V1
$DF4    $2D37   CALL     $D37            ; Call subroutine at D37
$DF6    $A421   LD       I, $421         ; Load 421 into I
$DF8    $9017   UNKNOWN  $9017           ; Unknown 9xxx instruction
$DFA    $5260   SE       V2, V6          ; Skip if V2 == V6
$DFC    $3188   SE       V1, #88         ; Skip if V1 == 136
$DFE    $208E   CALL     $08E            ; Call subroutine at 08E
$E00    $D070   DRW      V0, V7, #0      ; Draw 0-byte sprite at V0, V7
$E02    $2B00   CALL     $B00            ; Call subroutine at B00
$E04    $F596   UNKNOWN  F596            ; Unknown Fxxx instruction
$E06    $822B   UNKNOWN  822B            ; Unknown 8xxx instruction
$E08    $C1F2   RND      V1, #F2         ; V1 = random & F2
$E0A    $9FE4   UNKNOWN  $9FE4           ; Unknown 9xxx instruction
$E0C    $BA6A   JP       V0, $A6A        ; Jump to V0 + A6A
$E0E    $6A49   LD       VA, #49         ; Load 73 into VA
$E10    $3A4F   SE       VA, #4F         ; Skip if VA == 79
$E12    $53FD   UNKNOWN  $53FD           ; Unknown 5xxx instruction
$E14    $8405   SUB      V4, V0          ; V4 -= V0, VF = !borrow
$E16    $FE07   LD       VE, DT          ; VE = delay timer
$E18    $698F   LD       V9, #8F         ; Load 143 into V9
$E1A    $94F3   UNKNOWN  $94F3           ; Unknown 9xxx instruction
$E1C    $3212   SE       V2, #12         ; Skip if V2 == 18
$E1E    $3A84   SE       VA, #84         ; Skip if VA == 132
$E20    $FA97   UNKNOWN  FA97            ; Unknown Fxxx instruction
$E22    $B6C7   JP       V0, $6C7        ; Jump to V0 + 6C7
$E24    $AB88   LD       I, $B88         ; Load B88 into I
$E26    $740E   ADD      V4, #0E         ; Add 14 to V4
$E28    $0F1D   SYS      $F1D            ; System call to F1D
$E2A    $5FF6   UNKNOWN  $5FF6           ; Unknown 5xxx instruction
$E2C    $89C8   UNKNOWN  89C8            ; Unknown 8xxx instruction
$E2E    $60FA   LD       V0, #FA         ; Load 250 into V0
$E30    $750F   ADD      V5, #0F         ; Add 15 to V5
$E32    $F885   UNKNOWN  F885            ; Unknown Fxxx instruction
$E34    $AD72   LD       I, $D72         ; Load D72 into I
$E36    $014D   SYS      $14D            ; System call to 14D
$E38    $BF80   JP       V0, $F80        ; Jump to V0 + F80
$E3A    $5AB8   UNKNOWN  $5AB8           ; Unknown 5xxx instruction
$E3C    $D165   DRW      V1, V6, #5      ; Draw 5-byte sprite at V1, V6
$E3E    $68AA   LD       V8, #AA         ; Load 170 into V8
$E40    $5071   UNKNOWN  $5071           ; Unknown 5xxx instruction
$E42    $25C4   CALL     $5C4            ; Call subroutine at 5C4
$E44    $29CE   CALL     $9CE            ; Call subroutine at 9CE
$E46    $7E69   ADD      VE, #69         ; Add 105 to VE
$E48    $535C   UNKNOWN  $535C           ; Unknown 5xxx instruction
$E4A    $30AC   SE       V0, #AC         ; Skip if V0 == 172
$E4C    $3F48   SE       VF, #48         ; Skip if VF == 72
$E4E    $C561   RND      V5, #61         ; V5 = random & 61
$E50    $3500   SE       V5, #00         ; Skip if V5 == 0
$E52    $4B73   SNE      VB, #73         ; Skip if VB != 115
$E54    $688C   LD       V8, #8C         ; Load 140 into V8
$E56    $9680   SNE      V6, V8          ; Skip if V6 != V8
$E58    $97A1   UNKNOWN  $97A1           ; Unknown 9xxx instruction
$E5A    $C74E   RND      V7, #4E         ; V7 = random & 4E
$E5C    $4EA0   SNE      VE, #A0         ; Skip if VE != 160
$E5E    $EF36   UNKNOWN  $EF36           ; Unknown Exxx instruction
$E60    $D6B5   DRW      V6, VB, #5      ; Draw 5-byte sprite at V6, VB
$E62    $6B5D   LD       VB, #5D         ; Load 93 into VB
$E64    $7A74   ADD      VA, #74         ; Add 116 to VA
$E66    $76F5   ADD      V6, #F5         ; Add 245 to V6
$E68    $3028   SE       V0, #28         ; Skip if V0 == 40
$E6A    $3E42   SE       VE, #42         ; Skip if VE == 66
$E6C    $A7ED   LD       I, $7ED         ; Load 7ED into I
$E6E    $1FE9   JP       $FE9            ; Jump to FE9
$E70    $BBA7   JP       V0, $BA7        ; Jump to V0 + BA7
$E72    $428D   SNE      V2, #8D         ; Skip if V2 != 141
$E74    $FC3C   UNKNOWN  FC3C            ; Unknown Fxxx instruction
$E76    $2193   CALL     $193            ; Call subroutine at 193
$E78    $85C6   SHR      V5              ; V5 >>= 1, VF = LSB
$E7A    $E907   UNKNOWN  $E907           ; Unknown Exxx instruction
$E7C    $57D0   SE       V7, VD          ; Skip if V7 == VD
$E7E    $A2D4   LD       I, $2D4         ; Load 2D4 into I
$E80    $73AB   ADD      V3, #AB         ; Add 171 to V3
$E82    $78E3   ADD      V8, #E3         ; Add 227 to V8
$E84    $B201   JP       V0, $201        ; Jump to V0 + 201
$E86    $1CF6   JP       $CF6            ; Jump to CF6
$E88    $49EB   SNE      V9, #EB         ; Skip if V9 != 235
$E8A    $1B1F   JP       $B1F            ; Jump to B1F
$E8C    $FE21   UNKNOWN  FE21            ; Unknown Fxxx instruction
$E8E    $EFD5   UNKNOWN  $EFD5           ; Unknown Exxx instruction
$E90    $B80E   JP       V0, $80E        ; Jump to V0 + 80E
$E92    $0B60   SYS      $B60            ; System call to B60
$E94    $AA72   LD       I, $A72         ; Load A72 into I
$E96    $8970   LD       V9, V7          ; V9 = V7
$E98    $CCC6   RND      VC, #C6         ; VC = random & C6
$E9A    $072B   SYS      $72B            ; System call to 72B
$E9C    $F5CE   UNKNOWN  F5CE            ; Unknown Fxxx instruction
$E9E    $CE55   RND      VE, #55         ; VE = random & 55
$EA0    $67E4   LD       V7, #E4         ; Load 228 into V7
$EA2    $F886   UNKNOWN  F886            ; Unknown Fxxx instruction
$EA4    $A46E   LD       I, $46E         ; Load 46E into I
$EA6    $B99E   JP       V0, $99E        ; Jump to V0 + 99E
$EA8    $566E   UNKNOWN  $566E           ; Unknown 5xxx instruction
$EAA    $D231   DRW      V2, V3, #1      ; Draw 1-byte sprite at V2, V3
$EAC    $5330   SE       V3, V3          ; Skip if V3 == V3
$EAE    $89F4   ADD      V9, VF          ; V9 += VF, VF = carry
$EB0    $1FB9   JP       $FB9            ; Jump to FB9
$EB2    $737A   ADD      V3, #7A         ; Add 122 to V3
$EB4    $B42D   JP       V0, $42D        ; Jump to V0 + 42D
$EB6    $9ADF   UNKNOWN  $9ADF           ; Unknown 9xxx instruction
$EB8    $D419   DRW      V4, V1, #9      ; Draw 9-byte sprite at V4, V1
$EBA    $BE9D   JP       V0, $E9D        ; Jump to V0 + E9D
$EBC    $FF94   UNKNOWN  FF94            ; Unknown Fxxx instruction
$EBE    $BD07   JP       V0, $D07        ; Jump to V0 + D07
$EC0    $DE01   DRW      VE, V0, #1      ; Draw 1-byte sprite at VE, V0
$EC2    $8CB3   XOR      VC, VB          ; VC ^= VB
$EC4    $DBC8   DRW      VB, VC, #8      ; Draw 8-byte sprite at VB, VC
$EC6    $04B2   SYS      $4B2            ; System call to 4B2
$EC8    $401A   SNE      V0, #1A         ; Skip if V0 != 26
$ECA    $C9F7   RND      V9, #F7         ; V9 = random & F7
$ECC    $ECA6   UNKNOWN  $ECA6           ; Unknown Exxx instruction
$ECE    $921E   UNKNOWN  $921E           ; Unknown 9xxx instruction
$ED0    $0FA5   SYS      $FA5            ; System call to FA5
$ED2    $0099   SYS      $099            ; System call to 099
$ED4    $0F30   SYS      $F30            ; System call to F30
$ED6    $BBA4   JP       V0, $BA4        ; Jump to V0 + BA4
$ED8    $87D2   AND      V7, VD          ; V7 &= VD
$EDA    $9C94   UNKNOWN  $9C94           ; Unknown 9xxx instruction
$EDC    $FABB   UNKNOWN  FABB            ; Unknown Fxxx instruction
$EDE    $364A   SE       V6, #4A         ; Skip if V6 == 74
$EE0    $0D9F   SYS      $D9F            ; System call to D9F
$EE2    $F718   LD       ST, V7          ; Sound timer = V7
$EE4    $C9DA   RND      V9, #DA         ; V9 = random & DA
$EE6    $F594   UNKNOWN  F594            ; Unknown Fxxx instruction
$EE8    $C7F4   RND      V7, #F4         ; V7 = random & F4
$EEA    $F7FB   UNKNOWN  F7FB            ; Unknown Fxxx instruction
$EEC    $E386   UNKNOWN  $E386           ; Unknown Exxx instruction
$EEE    $8315   SUB      V3, V1          ; V3 -= V1, VF = !borrow
$EF0    $0D80   SYS      $D80            ; System call to D80
$EF2    $7466   ADD      V4, #66         ; Add 102 to V4
$EF4    $F4B9   UNKNOWN  F4B9            ; Unknown Fxxx instruction
$EF6    $AF07   LD       I, $F07         ; Load F07 into I
$EF8    $C077   RND      V0, #77         ; V0 = random & 77
$EFA    $2332   CALL     $332            ; Call subroutine at 332
$EFC    $3C28   SE       VC, #28         ; Skip if VC == 40
$EFE    $2661   CALL     $661            ; Call subroutine at 661
$F00    $BFC7   JP       V0, $FC7        ; Jump to V0 + FC7
$F02    $62EF   LD       V2, #EF         ; Load 239 into V2
$F04    $49BF   SNE      V9, #BF         ; Skip if V9 != 191
$F06    $F9AB   UNKNOWN  F9AB            ; Unknown Fxxx instruction
$F08    $B21F   JP       V0, $21F        ; Jump to V0 + 21F
$F0A    $A50F   LD       I, $50F         ; Load 50F into I
$F0C    $A0C9   LD       I, $0C9         ; Load 0C9 into I
$F0E    $8334   ADD      V3, V3          ; V3 += V3, VF = carry
$F10    $42F2   SNE      V2, #F2         ; Skip if V2 != 242
$F12    $C9E5   RND      V9, #E5         ; V9 = random & E5
$F14    $75B4   ADD      V5, #B4         ; Add 180 to V5
$F16    $7BC4   ADD      VB, #C4         ; Add 196 to VB
$F18    $FA9B   UNKNOWN  FA9B            ; Unknown Fxxx instruction
$F1A    $A7C1   LD       I, $7C1         ; Load 7C1 into I
$F1C    $0B0E   SYS      $B0E            ; System call to B0E
$F1E    $46EC   SNE      V6, #EC         ; Skip if V6 != 236
$F20    $7228   ADD      V2, #28         ; Add 40 to V2
$F22    $D808   DRW      V8, V0, #8      ; Draw 8-byte sprite at V8, V0
$F24    $ADD5   LD       I, $DD5         ; Load DD5 into I
$F26    $E0E7   UNKNOWN  $E0E7           ; Unknown Exxx instruction
$F28    $9923   UNKNOWN  $9923           ; Unknown 9xxx instruction
$F2A    $ECF5   UNKNOWN  $ECF5           ; Unknown Exxx instruction
$F2C    $3C79   SE       VC, #79         ; Skip if VC == 121
$F2E    $6BF7   LD       VB, #F7         ; Load 247 into VB
$F30    $9920   SNE      V9, V2          ; Skip if V9 != V2
$F32    $0053   SYS      $053            ; System call to 053
$F34    $870F   UNKNOWN  870F            ; Unknown 8xxx instruction
$F36    $0651   SYS      $651            ; System call to 651
$F38    $5225   UNKNOWN  $5225           ; Unknown 5xxx instruction
$F3A    $36AF   SE       V6, #AF         ; Skip if V6 == 175
$F3C    $5C61   UNKNOWN  $5C61           ; Unknown 5xxx instruction
$F3E    $7AEA   ADD      VA, #EA         ; Add 234 to VA
$F40    $F911   UNKNOWN  F911            ; Unknown Fxxx instruction
$F42    $18F5   JP       $8F5            ; Jump to 8F5
$F44    $2EF1   CALL     $EF1            ; Call subroutine at EF1
$F46    $2BD3   CALL     $BD3            ; Call subroutine at BD3
$F48    $50A4   UNKNOWN  $50A4           ; Unknown 5xxx instruction
$F4A    $2B96   CALL     $B96            ; Call subroutine at B96
$F4C    $3590   SE       V5, #90         ; Skip if V5 == 144
$F4E    $B7D5   JP       V0, $7D5        ; Jump to V0 + 7D5
$F50    $3E62   SE       VE, #62         ; Skip if VE == 98
$F52    $8139   UNKNOWN  8139            ; Unknown 8xxx instruction
$F54    $E917   UNKNOWN  $E917           ; Unknown Exxx instruction
$F56    $E42D   UNKNOWN  $E42D           ; Unknown Exxx instruction
$F58    $5C4C   UNKNOWN  $5C4C           ; Unknown 5xxx instruction
$F5A    $E07D   UNKNOWN  $E07D           ; Unknown Exxx instruction
$F5C    $AE46   LD       I, $E46         ; Load E46 into I
$F5E    $A7EE   LD       I, $7EE         ; Load 7EE into I
$F60    $98B9   UNKNOWN  $98B9           ; Unknown 9xxx instruction
$F62    $982B   UNKNOWN  $982B           ; Unknown 9xxx instruction
$F64    $B270   JP       V0, $270        ; Jump to V0 + 270
$F66    $CBAE   RND      VB, #AE         ; VB = random & AE
$F68    $447F   SNE      V4, #7F         ; Skip if V4 != 127
$F6A    $B8FF   JP       V0, $8FF        ; Jump to V0 + 8FF
$F6C    $E9F4   UNKNOWN  $E9F4           ; Unknown Exxx instruction
$F6E    $F93E   UNKNOWN  F93E            ; Unknown Fxxx instruction
$F70    $AC2B   LD       I, $C2B         ; Load C2B into I
$F72    $7215   ADD      V2, #15         ; Add 21 to V2
$F74    $DD30   DRW      VD, V3, #0      ; Draw 0-byte sprite at VD, V3
$F76    $7F69   ADD      VF, #69         ; Add 105 to VF
$F78    $AC73   LD       I, $C73         ; Load C73 into I
$F7A    $99B8   UNKNOWN  $99B8           ; Unknown 9xxx instruction
$F7C    $E7D3   UNKNOWN  $E7D3           ; Unknown Exxx instruction
$F7E    $0B31   SYS      $B31            ; System call to B31
$F80    $0CBB   SYS      $CBB            ; System call to CBB
$F82    $CE29   RND      VE, #29         ; VE = random & 29
$F84    $2DD5   CALL     $DD5            ; Call subroutine at DD5
$F86    $4642   SNE      V6, #42         ; Skip if V6 != 66
$F88    $3F97   SE       VF, #97         ; Skip if VF == 151
$F8A    $8CE2   AND      VC, VE          ; VC &= VE
$F8C    $FEAF   UNKNOWN  FEAF            ; Unknown Fxxx instruction
$F8E    $C967   RND      V9, #67         ; V9 = random & 67
$F90    $4A7A   SNE      VA, #7A         ; Skip if VA != 122
$F92    $2AE4   CALL     $AE4            ; Call subroutine at AE4
$F94    $69A6   LD       V9, #A6         ; Load 166 into V9
$F96    $09DE   SYS      $9DE            ; System call to 9DE
$F98    $E00B   UNKNOWN  $E00B           ; Unknown Exxx instruction
$F9A    $68EF   LD       V8, #EF         ; Load 239 into V8
$F9C    $C075   RND      V0, #75         ; V0 = random & 75
$F9E    $9B5B   UNKNOWN  $9B5B           ; Unknown 9xxx instruction
$FA0    $AF35   LD       I, $F35         ; Load F35 into I
$FA2    $A6EE   LD       I, $6EE         ; Load 6EE into I
$FA4    $4036   SNE      V0, #36         ; Skip if V0 != 54
$FA6    $1851   JP       $851            ; Jump to 851
$FA8    $8E05   SUB      VE, V0          ; VE -= V0, VF = !borrow
$FAA    $F087   UNKNOWN  F087            ; Unknown Fxxx instruction
$FAC    $1C97   JP       $C97            ; Jump to C97
$FAE    $24D4   CALL     $4D4            ; Call subroutine at 4D4
$FB0    $4480   SNE      V4, #80         ; Skip if V4 != 128
$FB2    $EBD6   UNKNOWN  $EBD6           ; Unknown Exxx instruction
$FB4    $BF8E   JP       V0, $F8E        ; Jump to V0 + F8E
$FB6    $D34A   DRW      V3, V4, #A      ; Draw 10-byte sprite at V3, V4
$FB8    $1205   JP       $205            ; Jump to 205
$FBA    $7E90   ADD      VE, #90         ; Add 144 to VE
$FBC    $ED78   UNKNOWN  $ED78           ; Unknown Exxx instruction
$FBE    $D6EE   DRW      V6, VE, #E      ; Draw 14-byte sprite at V6, VE
$FC0    $ED8D   UNKNOWN  $ED8D           ; Unknown Exxx instruction
$FC2    $1C94   JP       $C94            ; Jump to C94
$FC4    $EE7B   UNKNOWN  $EE7B           ; Unknown Exxx instruction
$FC6    $5D6C   UNKNOWN  $5D6C           ; Unknown 5xxx instruction
$FC8    $C944   RND      V9, #44         ; V9 = random & 44
$FCA    $BDB8   JP       V0, $DB8        ; Jump to V0 + DB8
$FCC    $3066   SE       V0, #66         ; Skip if V0 == 102
$FCE    $D79D   DRW      V7, V9, #D      ; Draw 13-byte sprite at V7, V9
$FD0    $EAE4   UNKNOWN  $EAE4           ; Unknown Exxx instruction
$FD2    $0B2A   SYS      $B2A            ; System call to B2A
$FD4    $2093   CALL     $093            ; Call subroutine at 093
$FD6    $A2EE   LD       I, $2EE         ; Load 2EE into I
$FD8    $5C10   SE       VC, V1          ; Skip if VC == V1
$FDA    $DED9   DRW      VE, VD, #9      ; Draw 9-byte sprite at VE, VD
$FDC    $159D   JP       $59D            ; Jump to 59D
$FDE    $F953   UNKNOWN  F953            ; Unknown Fxxx instruction
$FE0    $3EAE   SE       VE, #AE         ; Skip if VE == 174
$FE2    $66D6   LD       V6, #D6         ; Load 214 into V6
$FE4    $987C   UNKNOWN  $987C           ; Unknown 9xxx instruction
$FE6    $DFE3   DRW      VF, VE, #3      ; Draw 3-byte sprite at VF, VE
$FE8    $5C8C   UNKNOWN  $5C8C           ; Unknown 5xxx instruction
$FEA    $25A4   CALL     $5A4            ; Call subroutine at 5A4
$FEC    $6B09   LD       VB, #09         ; Load 9 into VB
$FEE    $44EF   SNE      V4, #EF         ; Skip if V4 != 239
$FF0    $DF92   DRW      VF, V9, #2      ; Draw 2-byte sprite at VF, V9
$FF2    $CC80   RND      VC, #80         ; VC = random & 80
$FF4    $489E   SNE      V8, #9E         ; Skip if V8 != 158
$FF6    $93A1   UNKNOWN  $93A1           ; Unknown 9xxx instruction
$FF8    $6E79   LD       VE, #79         ; Load 121 into VE
$FFA    $DBE4   DRW      VB, VE, #4      ; Draw 4-byte sprite at VB, VE
$FFC    $4BB7   SNE      VB, #B7         ; Skip if VB != 183
$FFE    $D388   DRW      V3, V8, #8      ; Draw 8-byte sprite at V3, V8

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 455 (25.4%)
  JP      : 217 (12.1%)
  LD      : 207 (11.6%)
  SNE     : 190 (10.6%)
  ADD     : 133 ( 7.4%)
  DRW     : 116 ( 6.5%)
  SYS     : 111 ( 6.2%)
  SE      : 108 ( 6.0%)
  RND     : 102 ( 5.7%)
  CALL    :  93 ( 5.2%)
  SUBN    :  14 ( 0.8%)
  SUB     :  12 ( 0.7%)
  SHL     :   8 ( 0.4%)
  OR      :   7 ( 0.4%)
  SHR     :   7 ( 0.4%)
  XOR     :   6 ( 0.3%)
  AND     :   4 ( 0.2%)
  SKP     :   1 ( 0.1%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 340 (19.0%)
Arithmetic Operations: 176 (9.8%)
