
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B6910D01_I29364_C1001_b10b9a4e3f30.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 6910
Instance: 29364
Direction: descending
Final Array: [192, 107, 95, 95, 95, 82, 25, 5]
Operations: R:1 W:0 C:27 S:2

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 132
Sort Array References:
  $240: LD I, $395 ; Load 395 into I
  $252: LD I, $37A ; Load 37A into I
  $276: LD I, $83B ; Load 83B into I
  $290: LD I, $BEC ; Load BEC into I
  $2C0: LD I, $30A ; Load 30A into I
  $2CC: LD I, $450 ; Load 450 into I
  $2DA: LD I, $9ED ; Load 9ED into I
  $31C: LD I, $FE1 ; Load FE1 into I
  $370: LD I, $FC2 ; Load FC2 into I
  $386: LD I, $325 ; Load 325 into I
  $394: LD I, $314 ; Load 314 into I
  $3B8: LD I, $302 ; Load 302 into I
  $3BE: LD I, $D05 ; Load D05 into I
  $3C4: LD I, $073 ; Load 073 into I
  $3DE: LD I, $FEF ; Load FEF into I
  $3E0: LD I, $08C ; Load 08C into I
  $3E2: LD I, $37D ; Load 37D into I
  $3EC: LD I, $D08 ; Load D08 into I
  $41E: LD I, $C26 ; Load C26 into I
  $490: LD I, $6EC ; Load 6EC into I
  $49A: LD I, $60E ; Load 60E into I
  $49C: LD I, $59D ; Load 59D into I
  $4A2: LD I, $DBB ; Load DBB into I
  $4C6: LD I, $913 ; Load 913 into I
  $4D4: LD I, $7D4 ; Load 7D4 into I
  $4DC: LD I, $2F0 ; Load 2F0 into I
  $4E4: LD I, $86A ; Load 86A into I
  $512: LD I, $4E6 ; Load 4E6 into I
  $518: LD I, $D8F ; Load D8F into I
  $532: ADD I, V9 ; I ADDRESS MANIPULATION
  $544: LD I, $6DB ; Load 6DB into I
  $5A2: LD I, $DB1 ; Load DB1 into I
  $5B8: LD I, $BF7 ; Load BF7 into I
  $608: LD I, $7C2 ; Load 7C2 into I
  $610: LD I, $1E1 ; Load 1E1 into I
  $640: LD I, $586 ; Load 586 into I
  $652: LD I, $FF5 ; Load FF5 into I
  $654: LD I, $D5D ; Load D5D into I
  $672: LD I, $D16 ; Load D16 into I
  $688: LD I, $890 ; Load 890 into I
  $6D4: LD I, $F1B ; Load F1B into I
  $6D6: LD I, $42E ; Load 42E into I
  $6FA: LD I, $8E8 ; Load 8E8 into I
  $708: LD I, $E49 ; Load E49 into I
  $744: LD I, $05D ; Load 05D into I
  $764: LD I, $9CE ; Load 9CE into I
  $766: LD I, $D7C ; Load D7C into I
  $798: LD I, $AA7 ; Load AA7 into I
  $7B6: LD I, $93A ; Load 93A into I
  $7C0: LD I, $42B ; Load 42B into I
  $7E2: LD I, $C01 ; Load C01 into I
  $7EC: LD I, $082 ; Load 082 into I
  $7F6: LD I, $BEA ; Load BEA into I
  $816: LD I, $328 ; Load 328 into I
  $81E: LD I, $689 ; Load 689 into I
  $840: LD I, $C9F ; Load C9F into I
  $846: LD I, $AF3 ; Load AF3 into I
  $84E: LD I, $F17 ; Load F17 into I
  $852: LD I, $887 ; Load 887 into I
  $892: LD I, $E8C ; Load E8C into I
  $894: LD I, $FB8 ; Load FB8 into I
  $898: LD I, $C1D ; Load C1D into I
  $8A0: LD I, $086 ; Load 086 into I
  $8CA: LD I, $87A ; Load 87A into I
  $908: LD I, $684 ; Load 684 into I
  $94C: LD I, $F39 ; Load F39 into I
  $95A: LD I, $3A8 ; Load 3A8 into I
  $96E: LD I, $C7B ; Load C7B into I
  $972: LD [I], VC ; Store V0-VC at I
  $988: LD I, $5F4 ; Load 5F4 into I
  $9A4: LD I, $9BC ; Load 9BC into I
  $9E6: LD I, $E42 ; Load E42 into I
  $A18: LD I, $278 ; Load 278 into I
  $A34: LD I, $BF6 ; Load BF6 into I
  $A4A: LD I, $ADF ; Load ADF into I
  $A62: LD I, $E7C ; Load E7C into I
  $A6A: LD I, $BD5 ; Load BD5 into I
  $A86: LD I, $090 ; Load 090 into I
  $A98: LD I, $346 ; Load 346 into I
  $A9E: LD I, $970 ; Load 970 into I
  $ABA: LD I, $631 ; Load 631 into I
  $ACA: LD I, $1C8 ; Load 1C8 into I
  $ACC: LD I, $780 ; Load 780 into I
  $ADA: LD I, $A77 ; Load A77 into I
  $AE0: LD I, $E0E ; Load E0E into I
  $AE2: LD I, $68C ; Load 68C into I
  $AF6: LD I, $CB3 ; Load CB3 into I
  $AF8: LD I, $0A2 ; Load 0A2 into I
  $B18: LD I, $026 ; Load 026 into I
  $B5C: LD I, $7AE ; Load 7AE into I
  $B6A: LD I, $492 ; Load 492 into I
  $B7A: LD I, $839 ; Load 839 into I
  $B94: LD I, $599 ; Load 599 into I
  $BC6: LD I, $708 ; Load 708 into I
  $BCE: LD I, $4C8 ; Load 4C8 into I
  $C04: LD I, $187 ; Load 187 into I
  $C0E: LD I, $9AB ; Load 9AB into I
  $C1C: LD I, $988 ; Load 988 into I
  $C2A: LD I, $39B ; Load 39B into I
  $CA0: LD I, $C3C ; Load C3C into I
  $CA8: LD I, $61A ; Load 61A into I
  $D22: LD I, $8AA ; Load 8AA into I
  $D2C: LD I, $AFB ; Load AFB into I
  $D44: LD I, $FD2 ; Load FD2 into I
  $D52: LD I, $EDA ; Load EDA into I
  $D58: LD I, $ED4 ; Load ED4 into I
  $D68: LD I, $BCC ; Load BCC into I
  $D6A: LD I, $279 ; Load 279 into I
  $D80: LD I, $0C1 ; Load 0C1 into I
  $D84: LD I, $FFF ; Load FFF into I
  $D9A: LD I, $53C ; Load 53C into I
  $DD0: LD V0, [I] ; Load V0-V0 from I
  $DE8: LD I, $2A3 ; Load 2A3 into I
  $DF4: LD I, $3B3 ; Load 3B3 into I
  $E2C: LD I, $EA7 ; Load EA7 into I
  $E34: LD I, $06F ; Load 06F into I
  $E4E: LD I, $977 ; Load 977 into I
  $E90: LD I, $B0B ; Load B0B into I
  $EA6: LD I, $06C ; Load 06C into I
  $EC4: LD I, $1F0 ; Load 1F0 into I
  $ED2: LD I, $4A7 ; Load 4A7 into I
  $F1A: LD I, $B7F ; Load B7F into I
  $F26: LD I, $374 ; Load 374 into I
  $F2E: LD I, $D6F ; Load D6F into I
  $F3C: LD I, $550 ; Load 550 into I
  $F6A: LD I, $9D4 ; Load 9D4 into I
  $F80: LD I, $163 ; Load 163 into I
  $F9C: LD I, $38B ; Load 38B into I
  $FBE: LD I, $52C ; Load 52C into I
  $FC8: LD I, $90B ; Load 90B into I
  $FE0: LD I, $5B5 ; Load 5B5 into I
  $FFE: LD I, $F16 ; Load F16 into I

CONTROL FLOW ANALYSIS:
Jumps: 233
Calls: 126
Branches: 245
Loops: 135
Loop Structures:
  $22A -> $122 (backward jump)
  $314 -> $0C7 (backward jump)
  $358 -> $2DB (backward jump)
  $3F2 -> $1C1 (backward jump)
  $4AA -> $478 (backward jump)
  $4B6 -> $160 (backward jump)
  $4BA -> $307 (backward jump)
  $530 -> $2D1 (backward jump)
  $588 -> $56B (backward jump)
  $59C -> $416 (backward jump)
  $5EC -> $4D4 (backward jump)
  $636 -> $5B8 (backward jump)
  $658 -> $486 (backward jump)
  $65E -> $228 (backward jump)
  $67A -> $1AC (backward jump)
  $698 -> $62D (backward jump)
  $69C -> $321 (backward jump)
  $6A6 -> $61D (backward jump)
  $6B4 -> $2FA (backward jump)
  $6B6 -> $68E (backward jump)
  $6DC -> $03E (backward jump)
  $6F2 -> $61F (backward jump)
  $738 -> $258 (backward jump)
  $746 -> $12A (backward jump)
  $74A -> $39B (backward jump)
  $76E -> $690 (backward jump)
  $77C -> $698 (backward jump)
  $792 -> $78E (backward jump)
  $7BE -> $064 (backward jump)
  $81A -> $75E (backward jump)
  $820 -> $7E5 (backward jump)
  $864 -> $0A1 (backward jump)
  $87C -> $189 (backward jump)
  $8CE -> $0AF (backward jump)
  $8D2 -> $386 (backward jump)
  $8D6 -> $370 (backward jump)
  $8F0 -> $10D (backward jump)
  $912 -> $34C (backward jump)
  $91A -> $61F (backward jump)
  $92E -> $188 (backward jump)
  $932 -> $359 (backward jump)
  $976 -> $771 (backward jump)
  $97A -> $5F3 (backward jump)
  $9C2 -> $803 (backward jump)
  $9DE -> $829 (backward jump)
  $9E4 -> $501 (backward jump)
  $9F4 -> $454 (backward jump)
  $9F8 -> $5FA (backward jump)
  $9FA -> $702 (backward jump)
  $A02 -> $2FF (backward jump)
  $A0C -> $802 (backward jump)
  $A24 -> $4AC (backward jump)
  $A38 -> $1A2 (backward jump)
  $A5A -> $9F5 (backward jump)
  $A64 -> $4F4 (backward jump)
  $A66 -> $0E5 (backward jump)
  $ABE -> $637 (backward jump)
  $AC2 -> $5A9 (backward jump)
  $AE6 -> $33C (backward jump)
  $B04 -> $7DC (backward jump)
  $B0C -> $898 (backward jump)
  $B0E -> $3C4 (backward jump)
  $B22 -> $301 (backward jump)
  $B24 -> $2B3 (backward jump)
  $B58 -> $A1F (backward jump)
  $B64 -> $842 (backward jump)
  $B72 -> $7A4 (backward jump)
  $B8E -> $A4B (backward jump)
  $B92 -> $803 (backward jump)
  $BA0 -> $10C (backward jump)
  $BC0 -> $179 (backward jump)
  $BD2 -> $534 (backward jump)
  $BD6 -> $861 (backward jump)
  $BE4 -> $213 (backward jump)
  $C16 -> $921 (backward jump)
  $C18 -> $2FC (backward jump)
  $C1E -> $BF6 (backward jump)
  $C26 -> $67E (backward jump)
  $C3A -> $4F9 (backward jump)
  $C52 -> $33B (backward jump)
  $C5E -> $AF5 (backward jump)
  $C6A -> $202 (backward jump)
  $C7A -> $99A (backward jump)
  $C7C -> $943 (backward jump)
  $C7E -> $08F (backward jump)
  $C9C -> $0F2 (backward jump)
  $CA2 -> $13B (backward jump)
  $CAA -> $5ED (backward jump)
  $CB4 -> $667 (backward jump)
  $CBA -> $AE7 (backward jump)
  $CE2 -> $0B9 (backward jump)
  $CEC -> $1B3 (backward jump)
  $CF4 -> $15C (backward jump)
  $CFA -> $2E7 (backward jump)
  $CFC -> $7CD (backward jump)
  $D06 -> $27C (backward jump)
  $D08 -> $ADF (backward jump)
  $D28 -> $320 (backward jump)
  $D30 -> $193 (backward jump)
  $D40 -> $80F (backward jump)
  $DB2 -> $A14 (backward jump)
  $DB6 -> $4A4 (backward jump)
  $DE6 -> $75B (backward jump)
  $DF8 -> $460 (backward jump)
  $E02 -> $170 (backward jump)
  $E04 -> $49C (backward jump)
  $E0A -> $E00 (backward jump)
  $E22 -> $4D5 (backward jump)
  $E28 -> $0B5 (backward jump)
  $E50 -> $191 (backward jump)
  $E56 -> $14E (backward jump)
  $E66 -> $863 (backward jump)
  $E74 -> $830 (backward jump)
  $E7C -> $58E (backward jump)
  $E88 -> $129 (backward jump)
  $EB0 -> $577 (backward jump)
  $EB2 -> $AD0 (backward jump)
  $EC6 -> $CA5 (backward jump)
  $ED0 -> $52A (backward jump)
  $EE4 -> $19C (backward jump)
  $EE8 -> $E3A (backward jump)
  $F0A -> $A41 (backward jump)
  $F0E -> $772 (backward jump)
  $F22 -> $953 (backward jump)
  $F24 -> $BC1 (backward jump)
  $F2A -> $B78 (backward jump)
  $F30 -> $427 (backward jump)
  $F44 -> $6A1 (backward jump)
  $F52 -> $F23 (backward jump)
  $F60 -> $CD2 (backward jump)
  $F66 -> $639 (backward jump)
  $FB0 -> $DC0 (backward jump)
  $FC0 -> $E8F (backward jump)
  $FDA -> $B71 (backward jump)
  $FF6 -> $963 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $CB5D   RND      VB, #5D         ; VB = random & 5D
$202    $5F61   UNKNOWN  $5F61           ; Unknown 5xxx instruction
$204    $C4E6   RND      V4, #E6         ; V4 = random & E6
$206    $6645   LD       V6, #45         ; Load 69 into V6
$208    $3E90   SE       VE, #90         ; Skip if VE == 144
$20A    $19A7   JP       $9A7            ; Jump to 9A7
$20C    $EB7F   UNKNOWN  $EB7F           ; Unknown Exxx instruction
$20E    $D8BD   DRW      V8, VB, #D      ; Draw 13-byte sprite at V8, VB
$210    $F29E   UNKNOWN  F29E            ; Unknown Fxxx instruction
$212    $8E85   SUB      VE, V8          ; VE -= V8, VF = !borrow
$214    $DC83   DRW      VC, V8, #3      ; Draw 3-byte sprite at VC, V8
$216    $451F   SNE      V5, #1F         ; Skip if V5 != 31
$218    $EC4F   UNKNOWN  $EC4F           ; Unknown Exxx instruction
$21A    $2F18   CALL     $F18            ; Call subroutine at F18
$21C    $F7CB   UNKNOWN  F7CB            ; Unknown Fxxx instruction
$21E    $FB5C   UNKNOWN  FB5C            ; Unknown Fxxx instruction
$220    $967E   UNKNOWN  $967E           ; Unknown 9xxx instruction
$222    $3677   SE       V6, #77         ; Skip if V6 == 119
$224    $32FF   SE       V2, #FF         ; Skip if V2 == 255
$226    $9EBD   UNKNOWN  $9EBD           ; Unknown 9xxx instruction
$228    $2AFE   CALL     $AFE            ; Call subroutine at AFE
$22A    $1122   JP       $122            ; Jump to 122
$22C    $200E   CALL     $00E            ; Call subroutine at 00E
$22E    $2644   CALL     $644            ; Call subroutine at 644
$230    $12CB   JP       $2CB            ; Jump to 2CB
$232    $EE89   UNKNOWN  $EE89           ; Unknown Exxx instruction
$234    $75B7   ADD      V5, #B7         ; Add 183 to V5
$236    $F3BB   UNKNOWN  F3BB            ; Unknown Fxxx instruction
$238    $762C   ADD      V6, #2C         ; Add 44 to V6
$23A    $9D20   SNE      VD, V2          ; Skip if VD != V2
$23C    $14B2   JP       $4B2            ; Jump to 4B2
$23E    $20CB   CALL     $0CB            ; Call subroutine at 0CB
$240    $A395   LD       I, $395         ; Load 395 into I
$242    $C734   RND      V7, #34         ; V7 = random & 34
$244    $16CB   JP       $6CB            ; Jump to 6CB
$246    $060A   SYS      $60A            ; System call to 60A
$248    $F547   UNKNOWN  F547            ; Unknown Fxxx instruction
$24A    $1ABA   JP       $ABA            ; Jump to ABA
$24C    $CD55   RND      VD, #55         ; VD = random & 55
$24E    $EF3A   UNKNOWN  $EF3A           ; Unknown Exxx instruction
$250    $858A   UNKNOWN  858A            ; Unknown 8xxx instruction
$252    $A37A   LD       I, $37A         ; Load 37A into I
$254    $6EF8   LD       VE, #F8         ; Load 248 into VE
$256    $B2FD   JP       V0, $2FD        ; Jump to V0 + 2FD
$258    $C608   RND      V6, #08         ; V6 = random & 08
$25A    $4AA5   SNE      VA, #A5         ; Skip if VA != 165
$25C    $9775   UNKNOWN  $9775           ; Unknown 9xxx instruction
$25E    $2A74   CALL     $A74            ; Call subroutine at A74
$260    $73F8   ADD      V3, #F8         ; Add 248 to V3
$262    $66C2   LD       V6, #C2         ; Load 194 into V6
$264    $52D2   UNKNOWN  $52D2           ; Unknown 5xxx instruction
$266    $F043   UNKNOWN  F043            ; Unknown Fxxx instruction
$268    $D41D   DRW      V4, V1, #D      ; Draw 13-byte sprite at V4, V1
$26A    $C1F8   RND      V1, #F8         ; V1 = random & F8
$26C    $B5AE   JP       V0, $5AE        ; Jump to V0 + 5AE
$26E    $24C3   CALL     $4C3            ; Call subroutine at 4C3
$270    $E214   UNKNOWN  $E214           ; Unknown Exxx instruction
$272    $2458   CALL     $458            ; Call subroutine at 458
$274    $37DC   SE       V7, #DC         ; Skip if V7 == 220
$276    $A83B   LD       I, $83B         ; Load 83B into I
$278    $1DDF   JP       $DDF            ; Jump to DDF
$27A    $5B5D   UNKNOWN  $5B5D           ; Unknown 5xxx instruction
$27C    $47F7   SNE      V7, #F7         ; Skip if V7 != 247
$27E    $5013   UNKNOWN  $5013           ; Unknown 5xxx instruction
$280    $9D6C   UNKNOWN  $9D6C           ; Unknown 9xxx instruction
$282    $6109   LD       V1, #09         ; Load 9 into V1
$284    $246F   CALL     $46F            ; Call subroutine at 46F
$286    $19B8   JP       $9B8            ; Jump to 9B8
$288    $3B95   SE       VB, #95         ; Skip if VB == 149
$28A    $2720   CALL     $720            ; Call subroutine at 720
$28C    $C8D5   RND      V8, #D5         ; V8 = random & D5
$28E    $2B9F   CALL     $B9F            ; Call subroutine at B9F
$290    $ABEC   LD       I, $BEC         ; Load BEC into I
$292    $23C1   CALL     $3C1            ; Call subroutine at 3C1
$294    $5EA5   UNKNOWN  $5EA5           ; Unknown 5xxx instruction
$296    $E791   UNKNOWN  $E791           ; Unknown Exxx instruction
$298    $151F   JP       $51F            ; Jump to 51F
$29A    $DF8A   DRW      VF, V8, #A      ; Draw 10-byte sprite at VF, V8
$29C    $D032   DRW      V0, V3, #2      ; Draw 2-byte sprite at V0, V3
$29E    $6E2D   LD       VE, #2D         ; Load 45 into VE
$2A0    $3291   SE       V2, #91         ; Skip if V2 == 145
$2A2    $E4C6   UNKNOWN  $E4C6           ; Unknown Exxx instruction
$2A4    $537C   UNKNOWN  $537C           ; Unknown 5xxx instruction
$2A6    $30E7   SE       V0, #E7         ; Skip if V0 == 231
$2A8    $F1D4   UNKNOWN  F1D4            ; Unknown Fxxx instruction
$2AA    $39EA   SE       V9, #EA         ; Skip if V9 == 234
$2AC    $7B99   ADD      VB, #99         ; Add 153 to VB
$2AE    $0581   SYS      $581            ; System call to 581
$2B0    $32B6   SE       V2, #B6         ; Skip if V2 == 182
$2B2    $1B85   JP       $B85            ; Jump to B85
$2B4    $0C0D   SYS      $C0D            ; System call to C0D
$2B6    $7613   ADD      V6, #13         ; Add 19 to V6
$2B8    $047F   SYS      $47F            ; System call to 47F
$2BA    $9F9C   UNKNOWN  $9F9C           ; Unknown 9xxx instruction
$2BC    $D3F1   DRW      V3, VF, #1      ; Draw 1-byte sprite at V3, VF
$2BE    $7405   ADD      V4, #05         ; Add 5 to V4
$2C0    $A30A   LD       I, $30A         ; Load 30A into I
$2C2    $BDDC   JP       V0, $DDC        ; Jump to V0 + DDC
$2C4    $1D77   JP       $D77            ; Jump to D77
$2C6    $B9A6   JP       V0, $9A6        ; Jump to V0 + 9A6
$2C8    $4AE7   SNE      VA, #E7         ; Skip if VA != 231
$2CA    $F03C   UNKNOWN  F03C            ; Unknown Fxxx instruction
$2CC    $A450   LD       I, $450         ; Load 450 into I
$2CE    $C5ED   RND      V5, #ED         ; V5 = random & ED
$2D0    $6638   LD       V6, #38         ; Load 56 into V6
$2D2    $591C   UNKNOWN  $591C           ; Unknown 5xxx instruction
$2D4    $0A9A   SYS      $A9A            ; System call to A9A
$2D6    $7C39   ADD      VC, #39         ; Add 57 to VC
$2D8    $2A7D   CALL     $A7D            ; Call subroutine at A7D
$2DA    $A9ED   LD       I, $9ED         ; Load 9ED into I
$2DC    $4BAC   SNE      VB, #AC         ; Skip if VB != 172
$2DE    $27AA   CALL     $7AA            ; Call subroutine at 7AA
$2E0    $1EEA   JP       $EEA            ; Jump to EEA
$2E2    $7871   ADD      V8, #71         ; Add 113 to V8
$2E4    $6526   LD       V5, #26         ; Load 38 into V5
$2E6    $3AEB   SE       VA, #EB         ; Skip if VA == 235
$2E8    $9463   UNKNOWN  $9463           ; Unknown 9xxx instruction
$2EA    $DEC4   DRW      VE, VC, #4      ; Draw 4-byte sprite at VE, VC
$2EC    $CDF5   RND      VD, #F5         ; VD = random & F5
$2EE    $CE09   RND      VE, #09         ; VE = random & 09
$2F0    $D3AA   DRW      V3, VA, #A      ; Draw 10-byte sprite at V3, VA
$2F2    $6ADA   LD       VA, #DA         ; Load 218 into VA
$2F4    $8964   ADD      V9, V6          ; V9 += V6, VF = carry
$2F6    $E494   UNKNOWN  $E494           ; Unknown Exxx instruction
$2F8    $4C87   SNE      VC, #87         ; Skip if VC != 135
$2FA    $5E88   UNKNOWN  $5E88           ; Unknown 5xxx instruction
$2FC    $661E   LD       V6, #1E         ; Load 30 into V6
$2FE    $365A   SE       V6, #5A         ; Skip if V6 == 90
$300    $C06B   RND      V0, #6B         ; V0 = random & 6B
$302    $5F5F   UNKNOWN  $5F5F           ; Unknown 5xxx instruction
$304    $5F52   UNKNOWN  $5F52           ; Unknown 5xxx instruction
$306    $1905   JP       $905            ; Jump to 905
$308    $0D21   SYS      $D21            ; System call to D21
$30A    $4953   SNE      V9, #53         ; Skip if V9 != 83
$30C    $0F4F   SYS      $F4F            ; System call to F4F
$30E    $859F   UNKNOWN  859F            ; Unknown 8xxx instruction
$310    $6AA1   LD       VA, #A1         ; Load 161 into VA
$312    $E0D6   UNKNOWN  $E0D6           ; Unknown Exxx instruction
$314    $10C7   JP       $0C7            ; Jump to 0C7
$316    $45F9   SNE      V5, #F9         ; Skip if V5 != 249
$318    $7E1A   ADD      VE, #1A         ; Add 26 to VE
$31A    $5243   UNKNOWN  $5243           ; Unknown 5xxx instruction
$31C    $AFE1   LD       I, $FE1         ; Load FE1 into I
$31E    $3A35   SE       VA, #35         ; Skip if VA == 53
$320    $C3B1   RND      V3, #B1         ; V3 = random & B1
$322    $4EEF   SNE      VE, #EF         ; Skip if VE != 239
$324    $73B2   ADD      V3, #B2         ; Add 178 to V3
$326    $28DE   CALL     $8DE            ; Call subroutine at 8DE
$328    $DFD9   DRW      VF, VD, #9      ; Draw 9-byte sprite at VF, VD
$32A    $DF9A   DRW      VF, V9, #A      ; Draw 10-byte sprite at VF, V9
$32C    $DD0A   DRW      VD, V0, #A      ; Draw 10-byte sprite at VD, V0
$32E    $97F4   UNKNOWN  $97F4           ; Unknown 9xxx instruction
$330    $87E5   SUB      V7, VE          ; V7 -= VE, VF = !borrow
$332    $BD17   JP       V0, $D17        ; Jump to V0 + D17
$334    $5BCF   UNKNOWN  $5BCF           ; Unknown 5xxx instruction
$336    $9200   SNE      V2, V0          ; Skip if V2 != V0
$338    $97CF   UNKNOWN  $97CF           ; Unknown 9xxx instruction
$33A    $FD87   UNKNOWN  FD87            ; Unknown Fxxx instruction
$33C    $E6CD   UNKNOWN  $E6CD           ; Unknown Exxx instruction
$33E    $5B97   UNKNOWN  $5B97           ; Unknown 5xxx instruction
$340    $2E9E   CALL     $E9E            ; Call subroutine at E9E
$342    $1BE2   JP       $BE2            ; Jump to BE2
$344    $59AF   UNKNOWN  $59AF           ; Unknown 5xxx instruction
$346    $28C7   CALL     $8C7            ; Call subroutine at 8C7
$348    $9E1A   UNKNOWN  $9E1A           ; Unknown 9xxx instruction
$34A    $9472   UNKNOWN  $9472           ; Unknown 9xxx instruction
$34C    $EF04   UNKNOWN  $EF04           ; Unknown Exxx instruction
$34E    $6EED   LD       VE, #ED         ; Load 237 into VE
$350    $BFB3   JP       V0, $FB3        ; Jump to V0 + FB3
$352    $D22A   DRW      V2, V2, #A      ; Draw 10-byte sprite at V2, V2
$354    $1983   JP       $983            ; Jump to 983
$356    $1B8A   JP       $B8A            ; Jump to B8A
$358    $B2DB   JP       V0, $2DB        ; Jump to V0 + 2DB
$35A    $CD56   RND      VD, #56         ; VD = random & 56
$35C    $21BE   CALL     $1BE            ; Call subroutine at 1BE
$35E    $C05F   RND      V0, #5F         ; V0 = random & 5F
$360    $E1A3   UNKNOWN  $E1A3           ; Unknown Exxx instruction
$362    $E74A   UNKNOWN  $E74A           ; Unknown Exxx instruction
$364    $2003   CALL     $003            ; Call subroutine at 003
$366    $F678   UNKNOWN  F678            ; Unknown Fxxx instruction
$368    $97BD   UNKNOWN  $97BD           ; Unknown 9xxx instruction
$36A    $0947   SYS      $947            ; System call to 947
$36C    $2658   CALL     $658            ; Call subroutine at 658
$36E    $6A54   LD       VA, #54         ; Load 84 into VA
$370    $AFC2   LD       I, $FC2         ; Load FC2 into I
$372    $6DDC   LD       VD, #DC         ; Load 220 into VD
$374    $B7F6   JP       V0, $7F6        ; Jump to V0 + 7F6
$376    $314C   SE       V1, #4C         ; Skip if V1 == 76
$378    $998F   UNKNOWN  $998F           ; Unknown 9xxx instruction
$37A    $C5C9   RND      V5, #C9         ; V5 = random & C9
$37C    $9BDF   UNKNOWN  $9BDF           ; Unknown 9xxx instruction
$37E    $F2E0   UNKNOWN  F2E0            ; Unknown Fxxx instruction
$380    $F22A   UNKNOWN  F22A            ; Unknown Fxxx instruction
$382    $F411   UNKNOWN  F411            ; Unknown Fxxx instruction
$384    $5383   UNKNOWN  $5383           ; Unknown 5xxx instruction
$386    $A325   LD       I, $325         ; Load 325 into I
$388    $D56B   DRW      V5, V6, #B      ; Draw 11-byte sprite at V5, V6
$38A    $8CBD   UNKNOWN  8CBD            ; Unknown 8xxx instruction
$38C    $E53D   UNKNOWN  $E53D           ; Unknown Exxx instruction
$38E    $7DEA   ADD      VD, #EA         ; Add 234 to VD
$390    $DE66   DRW      VE, V6, #6      ; Draw 6-byte sprite at VE, V6
$392    $D329   DRW      V3, V2, #9      ; Draw 9-byte sprite at V3, V2
$394    $A314   LD       I, $314         ; Load 314 into I
$396    $18AC   JP       $8AC            ; Jump to 8AC
$398    $C074   RND      V0, #74         ; V0 = random & 74
$39A    $C6B5   RND      V6, #B5         ; V6 = random & B5
$39C    $6529   LD       V5, #29         ; Load 41 into V5
$39E    $4474   SNE      V4, #74         ; Skip if V4 != 116
$3A0    $9412   UNKNOWN  $9412           ; Unknown 9xxx instruction
$3A2    $825C   UNKNOWN  825C            ; Unknown 8xxx instruction
$3A4    $657C   LD       V5, #7C         ; Load 124 into V5
$3A6    $C5CF   RND      V5, #CF         ; V5 = random & CF
$3A8    $14A8   JP       $4A8            ; Jump to 4A8
$3AA    $19B9   JP       $9B9            ; Jump to 9B9
$3AC    $9E1B   UNKNOWN  $9E1B           ; Unknown 9xxx instruction
$3AE    $2FF2   CALL     $FF2            ; Call subroutine at FF2
$3B0    $F4DA   UNKNOWN  F4DA            ; Unknown Fxxx instruction
$3B2    $6979   LD       V9, #79         ; Load 121 into V9
$3B4    $7EBE   ADD      VE, #BE         ; Add 190 to VE
$3B6    $620B   LD       V2, #0B         ; Load 11 into V2
$3B8    $A302   LD       I, $302         ; Load 302 into I
$3BA    $785A   ADD      V8, #5A         ; Add 90 to V8
$3BC    $841A   UNKNOWN  841A            ; Unknown 8xxx instruction
$3BE    $AD05   LD       I, $D05         ; Load D05 into I
$3C0    $2A66   CALL     $A66            ; Call subroutine at A66
$3C2    $35BD   SE       V5, #BD         ; Skip if V5 == 189
$3C4    $A073   LD       I, $073         ; Load 073 into I
$3C6    $6ACE   LD       VA, #CE         ; Load 206 into VA
$3C8    $34D5   SE       V4, #D5         ; Skip if V4 == 213
$3CA    $32F8   SE       V2, #F8         ; Skip if V2 == 248
$3CC    $7962   ADD      V9, #62         ; Add 98 to V9
$3CE    $4686   SNE      V6, #86         ; Skip if V6 != 134
$3D0    $BA23   JP       V0, $A23        ; Jump to V0 + A23
$3D2    $2E2E   CALL     $E2E            ; Call subroutine at E2E
$3D4    $8492   AND      V4, V9          ; V4 &= V9
$3D6    $DC74   DRW      VC, V7, #4      ; Draw 4-byte sprite at VC, V7
$3D8    $021D   SYS      $21D            ; System call to 21D
$3DA    $0BF4   SYS      $BF4            ; System call to BF4
$3DC    $22DC   CALL     $2DC            ; Call subroutine at 2DC
$3DE    $AFEF   LD       I, $FEF         ; Load FEF into I
$3E0    $A08C   LD       I, $08C         ; Load 08C into I
$3E2    $A37D   LD       I, $37D         ; Load 37D into I
$3E4    $D78F   DRW      V7, V8, #F      ; Draw 15-byte sprite at V7, V8
$3E6    $694C   LD       V9, #4C         ; Load 76 into V9
$3E8    $0DE8   SYS      $DE8            ; System call to DE8
$3EA    $1A5B   JP       $A5B            ; Jump to A5B
$3EC    $AD08   LD       I, $D08         ; Load D08 into I
$3EE    $790D   ADD      V9, #0D         ; Add 13 to V9
$3F0    $F0C1   UNKNOWN  F0C1            ; Unknown Fxxx instruction
$3F2    $11C1   JP       $1C1            ; Jump to 1C1
$3F4    $021C   SYS      $21C            ; System call to 21C
$3F6    $2574   CALL     $574            ; Call subroutine at 574
$3F8    $EB2D   UNKNOWN  $EB2D           ; Unknown Exxx instruction
$3FA    $87BD   UNKNOWN  87BD            ; Unknown 8xxx instruction
$3FC    $C210   RND      V2, #10         ; V2 = random & 10
$3FE    $4518   SNE      V5, #18         ; Skip if V5 != 24
$400    $19B6   JP       $9B6            ; Jump to 9B6
$402    $6A60   LD       VA, #60         ; Load 96 into VA
$404    $68CE   LD       V8, #CE         ; Load 206 into V8
$406    $06B8   SYS      $6B8            ; System call to 6B8
$408    $D5C3   DRW      V5, VC, #3      ; Draw 3-byte sprite at V5, VC
$40A    $9AC0   SNE      VA, VC          ; Skip if VA != VC
$40C    $DA94   DRW      VA, V9, #4      ; Draw 4-byte sprite at VA, V9
$40E    $6B89   LD       VB, #89         ; Load 137 into VB
$410    $E7A6   UNKNOWN  $E7A6           ; Unknown Exxx instruction
$412    $EF15   UNKNOWN  $EF15           ; Unknown Exxx instruction
$414    $CEFE   RND      VE, #FE         ; VE = random & FE
$416    $C0F8   RND      V0, #F8         ; V0 = random & F8
$418    $F42B   UNKNOWN  F42B            ; Unknown Fxxx instruction
$41A    $2698   CALL     $698            ; Call subroutine at 698
$41C    $EE90   UNKNOWN  $EE90           ; Unknown Exxx instruction
$41E    $AC26   LD       I, $C26         ; Load C26 into I
$420    $0FC0   SYS      $FC0            ; System call to FC0
$422    $F657   UNKNOWN  F657            ; Unknown Fxxx instruction
$424    $6407   LD       V4, #07         ; Load 7 into V4
$426    $E7F5   UNKNOWN  $E7F5           ; Unknown Exxx instruction
$428    $46C3   SNE      V6, #C3         ; Skip if V6 != 195
$42A    $0179   SYS      $179            ; System call to 179
$42C    $C60F   RND      V6, #0F         ; V6 = random & 0F
$42E    $E4EF   UNKNOWN  $E4EF           ; Unknown Exxx instruction
$430    $E681   UNKNOWN  $E681           ; Unknown Exxx instruction
$432    $0942   SYS      $942            ; System call to 942
$434    $84A2   AND      V4, VA          ; V4 &= VA
$436    $93C2   UNKNOWN  $93C2           ; Unknown 9xxx instruction
$438    $603B   LD       V0, #3B         ; Load 59 into V0
$43A    $4A42   SNE      VA, #42         ; Skip if VA != 66
$43C    $EDF6   UNKNOWN  $EDF6           ; Unknown Exxx instruction
$43E    $6AB1   LD       VA, #B1         ; Load 177 into VA
$440    $F456   UNKNOWN  F456            ; Unknown Fxxx instruction
$442    $B76E   JP       V0, $76E        ; Jump to V0 + 76E
$444    $0BF7   SYS      $BF7            ; System call to BF7
$446    $5D56   UNKNOWN  $5D56           ; Unknown 5xxx instruction
$448    $3AF0   SE       VA, #F0         ; Skip if VA == 240
$44A    $D0A7   DRW      V0, VA, #7      ; Draw 7-byte sprite at V0, VA
$44C    $6890   LD       V8, #90         ; Load 144 into V8
$44E    $198A   JP       $98A            ; Jump to 98A
$450    $E154   UNKNOWN  $E154           ; Unknown Exxx instruction
$452    $72CB   ADD      V2, #CB         ; Add 203 to V2
$454    $6C65   LD       VC, #65         ; Load 101 into VC
$456    $EAE0   UNKNOWN  $EAE0           ; Unknown Exxx instruction
$458    $336B   SE       V3, #6B         ; Skip if V3 == 107
$45A    $DC6C   DRW      VC, V6, #C      ; Draw 12-byte sprite at VC, V6
$45C    $3149   SE       V1, #49         ; Skip if V1 == 73
$45E    $FB38   UNKNOWN  FB38            ; Unknown Fxxx instruction
$460    $3ACB   SE       VA, #CB         ; Skip if VA == 203
$462    $5F56   UNKNOWN  $5F56           ; Unknown 5xxx instruction
$464    $D1B0   DRW      V1, VB, #0      ; Draw 0-byte sprite at V1, VB
$466    $F4ED   UNKNOWN  F4ED            ; Unknown Fxxx instruction
$468    $3933   SE       V9, #33         ; Skip if V9 == 51
$46A    $946F   UNKNOWN  $946F           ; Unknown 9xxx instruction
$46C    $8BC8   UNKNOWN  8BC8            ; Unknown 8xxx instruction
$46E    $3E48   SE       VE, #48         ; Skip if VE == 72
$470    $1DC3   JP       $DC3            ; Jump to DC3
$472    $D4F7   DRW      V4, VF, #7      ; Draw 7-byte sprite at V4, VF
$474    $3D8C   SE       VD, #8C         ; Skip if VD == 140
$476    $5F78   UNKNOWN  $5F78           ; Unknown 5xxx instruction
$478    $FAF6   UNKNOWN  FAF6            ; Unknown Fxxx instruction
$47A    $159D   JP       $59D            ; Jump to 59D
$47C    $BFE3   JP       V0, $FE3        ; Jump to V0 + FE3
$47E    $94DD   UNKNOWN  $94DD           ; Unknown 9xxx instruction
$480    $D23C   DRW      V2, V3, #C      ; Draw 12-byte sprite at V2, V3
$482    $8D39   UNKNOWN  8D39            ; Unknown 8xxx instruction
$484    $3DB7   SE       VD, #B7         ; Skip if VD == 183
$486    $DDB2   DRW      VD, VB, #2      ; Draw 2-byte sprite at VD, VB
$488    $05C2   SYS      $5C2            ; System call to 5C2
$48A    $7B62   ADD      VB, #62         ; Add 98 to VB
$48C    $4EA6   SNE      VE, #A6         ; Skip if VE != 166
$48E    $E311   UNKNOWN  $E311           ; Unknown Exxx instruction
$490    $A6EC   LD       I, $6EC         ; Load 6EC into I
$492    $4069   SNE      V0, #69         ; Skip if V0 != 105
$494    $8C2B   UNKNOWN  8C2B            ; Unknown 8xxx instruction
$496    $8DB6   SHR      VD              ; VD >>= 1, VF = LSB
$498    $788A   ADD      V8, #8A         ; Add 138 to V8
$49A    $A60E   LD       I, $60E         ; Load 60E into I
$49C    $A59D   LD       I, $59D         ; Load 59D into I
$49E    $DBA5   DRW      VB, VA, #5      ; Draw 5-byte sprite at VB, VA
$4A0    $D54F   DRW      V5, V4, #F      ; Draw 15-byte sprite at V5, V4
$4A2    $ADBB   LD       I, $DBB         ; Load DBB into I
$4A4    $5446   UNKNOWN  $5446           ; Unknown 5xxx instruction
$4A6    $23CC   CALL     $3CC            ; Call subroutine at 3CC
$4A8    $9A56   UNKNOWN  $9A56           ; Unknown 9xxx instruction
$4AA    $1478   JP       $478            ; Jump to 478
$4AC    $4BEB   SNE      VB, #EB         ; Skip if VB != 235
$4AE    $F8D1   UNKNOWN  F8D1            ; Unknown Fxxx instruction
$4B0    $3BE2   SE       VB, #E2         ; Skip if VB == 226
$4B2    $CBD4   RND      VB, #D4         ; VB = random & D4
$4B4    $DF4C   DRW      VF, V4, #C      ; Draw 12-byte sprite at VF, V4
$4B6    $B160   JP       V0, $160        ; Jump to V0 + 160
$4B8    $D5B0   DRW      V5, VB, #0      ; Draw 0-byte sprite at V5, VB
$4BA    $1307   JP       $307            ; Jump to 307
$4BC    $0038   SYS      $038            ; System call to 038
$4BE    $B6BF   JP       V0, $6BF        ; Jump to V0 + 6BF
$4C0    $35BF   SE       V5, #BF         ; Skip if V5 == 191
$4C2    $19AC   JP       $9AC            ; Jump to 9AC
$4C4    $B51A   JP       V0, $51A        ; Jump to V0 + 51A
$4C6    $A913   LD       I, $913         ; Load 913 into I
$4C8    $F51A   UNKNOWN  F51A            ; Unknown Fxxx instruction
$4CA    $C83A   RND      V8, #3A         ; V8 = random & 3A
$4CC    $757F   ADD      V5, #7F         ; Add 127 to V5
$4CE    $54C6   UNKNOWN  $54C6           ; Unknown 5xxx instruction
$4D0    $57E0   SE       V7, VE          ; Skip if V7 == VE
$4D2    $302B   SE       V0, #2B         ; Skip if V0 == 43
$4D4    $A7D4   LD       I, $7D4         ; Load 7D4 into I
$4D6    $37C8   SE       V7, #C8         ; Skip if V7 == 200
$4D8    $4A4F   SNE      VA, #4F         ; Skip if VA != 79
$4DA    $F55D   UNKNOWN  F55D            ; Unknown Fxxx instruction
$4DC    $A2F0   LD       I, $2F0         ; Load 2F0 into I
$4DE    $9DD7   UNKNOWN  $9DD7           ; Unknown 9xxx instruction
$4E0    $72DF   ADD      V2, #DF         ; Add 223 to V2
$4E2    $F793   UNKNOWN  F793            ; Unknown Fxxx instruction
$4E4    $A86A   LD       I, $86A         ; Load 86A into I
$4E6    $C9EF   RND      V9, #EF         ; V9 = random & EF
$4E8    $59B4   UNKNOWN  $59B4           ; Unknown 5xxx instruction
$4EA    $BC97   JP       V0, $C97        ; Jump to V0 + C97
$4EC    $9FF5   UNKNOWN  $9FF5           ; Unknown 9xxx instruction
$4EE    $96FD   UNKNOWN  $96FD           ; Unknown 9xxx instruction
$4F0    $3E88   SE       VE, #88         ; Skip if VE == 136
$4F2    $26DF   CALL     $6DF            ; Call subroutine at 6DF
$4F4    $1561   JP       $561            ; Jump to 561
$4F6    $C412   RND      V4, #12         ; V4 = random & 12
$4F8    $694A   LD       V9, #4A         ; Load 74 into V9
$4FA    $BC30   JP       V0, $C30        ; Jump to V0 + C30
$4FC    $1586   JP       $586            ; Jump to 586
$4FE    $2EDC   CALL     $EDC            ; Call subroutine at EDC
$500    $41F3   SNE      V1, #F3         ; Skip if V1 != 243
$502    $8E7A   UNKNOWN  8E7A            ; Unknown 8xxx instruction
$504    $5277   UNKNOWN  $5277           ; Unknown 5xxx instruction
$506    $07A8   SYS      $7A8            ; System call to 7A8
$508    $3E15   SE       VE, #15         ; Skip if VE == 21
$50A    $4486   SNE      V4, #86         ; Skip if V4 != 134
$50C    $8488   UNKNOWN  8488            ; Unknown 8xxx instruction
$50E    $B626   JP       V0, $626        ; Jump to V0 + 626
$510    $CD6D   RND      VD, #6D         ; VD = random & 6D
$512    $A4E6   LD       I, $4E6         ; Load 4E6 into I
$514    $7050   ADD      V0, #50         ; Add 80 to V0
$516    $1F24   JP       $F24            ; Jump to F24
$518    $AD8F   LD       I, $D8F         ; Load D8F into I
$51A    $478E   SNE      V7, #8E         ; Skip if V7 != 142
$51C    $D222   DRW      V2, V2, #2      ; Draw 2-byte sprite at V2, V2
$51E    $2DAB   CALL     $DAB            ; Call subroutine at DAB
$520    $CBDE   RND      VB, #DE         ; VB = random & DE
$522    $2472   CALL     $472            ; Call subroutine at 472
$524    $49C8   SNE      V9, #C8         ; Skip if V9 != 200
$526    $47A5   SNE      V7, #A5         ; Skip if V7 != 165
$528    $B6BD   JP       V0, $6BD        ; Jump to V0 + 6BD
$52A    $FB1D   UNKNOWN  FB1D            ; Unknown Fxxx instruction
$52C    $1A4E   JP       $A4E            ; Jump to A4E
$52E    $7DEE   ADD      VD, #EE         ; Add 238 to VD
$530    $B2D1   JP       V0, $2D1        ; Jump to V0 + 2D1
$532    $F91E   ADD      I, V9           ; I += V9
$534    $D4AE   DRW      V4, VA, #E      ; Draw 14-byte sprite at V4, VA
$536    $CEE7   RND      VE, #E7         ; VE = random & E7
$538    $0ABB   SYS      $ABB            ; System call to ABB
$53A    $B787   JP       V0, $787        ; Jump to V0 + 787
$53C    $4E8C   SNE      VE, #8C         ; Skip if VE != 140
$53E    $0FB9   SYS      $FB9            ; System call to FB9
$540    $DE61   DRW      VE, V6, #1      ; Draw 1-byte sprite at VE, V6
$542    $658E   LD       V5, #8E         ; Load 142 into V5
$544    $A6DB   LD       I, $6DB         ; Load 6DB into I
$546    $1A7D   JP       $A7D            ; Jump to A7D
$548    $C93F   RND      V9, #3F         ; V9 = random & 3F
$54A    $F601   UNKNOWN  F601            ; Unknown Fxxx instruction
$54C    $4376   SNE      V3, #76         ; Skip if V3 != 118
$54E    $2529   CALL     $529            ; Call subroutine at 529
$550    $7971   ADD      V9, #71         ; Add 113 to V9
$552    $D522   DRW      V5, V2, #2      ; Draw 2-byte sprite at V5, V2
$554    $75B0   ADD      V5, #B0         ; Add 176 to V5
$556    $010E   SYS      $10E            ; System call to 10E
$558    $7345   ADD      V3, #45         ; Add 69 to V3
$55A    $6EE1   LD       VE, #E1         ; Load 225 into VE
$55C    $8BA3   XOR      VB, VA          ; VB ^= VA
$55E    $28F6   CALL     $8F6            ; Call subroutine at 8F6
$560    $04CB   SYS      $4CB            ; System call to 4CB
$562    $3DF4   SE       VD, #F4         ; Skip if VD == 244
$564    $31FE   SE       V1, #FE         ; Skip if V1 == 254
$566    $C2FC   RND      V2, #FC         ; V2 = random & FC
$568    $4DC9   SNE      VD, #C9         ; Skip if VD != 201
$56A    $1A52   JP       $A52            ; Jump to A52
$56C    $0855   SYS      $855            ; System call to 855
$56E    $171E   JP       $71E            ; Jump to 71E
$570    $95E9   UNKNOWN  $95E9           ; Unknown 9xxx instruction
$572    $FE3E   UNKNOWN  FE3E            ; Unknown Fxxx instruction
$574    $2CA9   CALL     $CA9            ; Call subroutine at CA9
$576    $D811   DRW      V8, V1, #1      ; Draw 1-byte sprite at V8, V1
$578    $0B76   SYS      $B76            ; System call to B76
$57A    $092E   SYS      $92E            ; System call to 92E
$57C    $F5E1   UNKNOWN  F5E1            ; Unknown Fxxx instruction
$57E    $FBEB   UNKNOWN  FBEB            ; Unknown Fxxx instruction
$580    $BD6C   JP       V0, $D6C        ; Jump to V0 + D6C
$582    $1CC8   JP       $CC8            ; Jump to CC8
$584    $C370   RND      V3, #70         ; V3 = random & 70
$586    $C0F5   RND      V0, #F5         ; V0 = random & F5
$588    $156B   JP       $56B            ; Jump to 56B
$58A    $1FBC   JP       $FBC            ; Jump to FBC
$58C    $DBA9   DRW      VB, VA, #9      ; Draw 9-byte sprite at VB, VA
$58E    $3605   SE       V6, #05         ; Skip if V6 == 5
$590    $0C97   SYS      $C97            ; System call to C97
$592    $4F79   SNE      VF, #79         ; Skip if VF != 121
$594    $7705   ADD      V7, #05         ; Add 5 to V7
$596    $67B3   LD       V7, #B3         ; Load 179 into V7
$598    $69C6   LD       V9, #C6         ; Load 198 into V9
$59A    $6A71   LD       VA, #71         ; Load 113 into VA
$59C    $B416   JP       V0, $416        ; Jump to V0 + 416
$59E    $F1D4   UNKNOWN  F1D4            ; Unknown Fxxx instruction
$5A0    $5686   UNKNOWN  $5686           ; Unknown 5xxx instruction
$5A2    $ADB1   LD       I, $DB1         ; Load DB1 into I
$5A4    $165D   JP       $65D            ; Jump to 65D
$5A6    $28BC   CALL     $8BC            ; Call subroutine at 8BC
$5A8    $1954   JP       $954            ; Jump to 954
$5AA    $8422   AND      V4, V2          ; V4 &= V2
$5AC    $567E   UNKNOWN  $567E           ; Unknown 5xxx instruction
$5AE    $CD8D   RND      VD, #8D         ; VD = random & 8D
$5B0    $E574   UNKNOWN  $E574           ; Unknown Exxx instruction
$5B2    $31E6   SE       V1, #E6         ; Skip if V1 == 230
$5B4    $8970   LD       V9, V7          ; V9 = V7
$5B6    $08B7   SYS      $8B7            ; System call to 8B7
$5B8    $ABF7   LD       I, $BF7         ; Load BF7 into I
$5BA    $768E   ADD      V6, #8E         ; Add 142 to V6
$5BC    $083C   SYS      $83C            ; System call to 83C
$5BE    $2B31   CALL     $B31            ; Call subroutine at B31
$5C0    $893D   UNKNOWN  893D            ; Unknown 8xxx instruction
$5C2    $4CC5   SNE      VC, #C5         ; Skip if VC != 197
$5C4    $2719   CALL     $719            ; Call subroutine at 719
$5C6    $51F3   UNKNOWN  $51F3           ; Unknown 5xxx instruction
$5C8    $59B8   UNKNOWN  $59B8           ; Unknown 5xxx instruction
$5CA    $B7A4   JP       V0, $7A4        ; Jump to V0 + 7A4
$5CC    $4D34   SNE      VD, #34         ; Skip if VD != 52
$5CE    $5E82   UNKNOWN  $5E82           ; Unknown 5xxx instruction
$5D0    $8D05   SUB      VD, V0          ; VD -= V0, VF = !borrow
$5D2    $57C5   UNKNOWN  $57C5           ; Unknown 5xxx instruction
$5D4    $DB1E   DRW      VB, V1, #E      ; Draw 14-byte sprite at VB, V1
$5D6    $53B4   UNKNOWN  $53B4           ; Unknown 5xxx instruction
$5D8    $EA6F   UNKNOWN  $EA6F           ; Unknown Exxx instruction
$5DA    $77AE   ADD      V7, #AE         ; Add 174 to V7
$5DC    $9200   SNE      V2, V0          ; Skip if V2 != V0
$5DE    $439C   SNE      V3, #9C         ; Skip if V3 != 156
$5E0    $D29A   DRW      V2, V9, #A      ; Draw 10-byte sprite at V2, V9
$5E2    $D875   DRW      V8, V7, #5      ; Draw 5-byte sprite at V8, V7
$5E4    $956C   UNKNOWN  $956C           ; Unknown 9xxx instruction
$5E6    $0A5A   SYS      $A5A            ; System call to A5A
$5E8    $320C   SE       V2, #0C         ; Skip if V2 == 12
$5EA    $C062   RND      V0, #62         ; V0 = random & 62
$5EC    $B4D4   JP       V0, $4D4        ; Jump to V0 + 4D4
$5EE    $66B7   LD       V6, #B7         ; Load 183 into V6
$5F0    $3DA3   SE       VD, #A3         ; Skip if VD == 163
$5F2    $8B71   OR       VB, V7          ; VB |= V7
$5F4    $0790   SYS      $790            ; System call to 790
$5F6    $772A   ADD      V7, #2A         ; Add 42 to V7
$5F8    $5117   UNKNOWN  $5117           ; Unknown 5xxx instruction
$5FA    $CAFE   RND      VA, #FE         ; VA = random & FE
$5FC    $6427   LD       V4, #27         ; Load 39 into V4
$5FE    $DA0D   DRW      VA, V0, #D      ; Draw 13-byte sprite at VA, V0
$600    $95D1   UNKNOWN  $95D1           ; Unknown 9xxx instruction
$602    $F8B5   UNKNOWN  F8B5            ; Unknown Fxxx instruction
$604    $84AE   SHL      V4              ; V4 <<= 1, VF = MSB
$606    $C1A6   RND      V1, #A6         ; V1 = random & A6
$608    $A7C2   LD       I, $7C2         ; Load 7C2 into I
$60A    $4643   SNE      V6, #43         ; Skip if V6 != 67
$60C    $9373   UNKNOWN  $9373           ; Unknown 9xxx instruction
$60E    $8001   OR       V0, V0          ; V0 |= V0
$610    $A1E1   LD       I, $1E1         ; Load 1E1 into I
$612    $9DA2   UNKNOWN  $9DA2           ; Unknown 9xxx instruction
$614    $68C5   LD       V8, #C5         ; Load 197 into V8
$616    $1DFD   JP       $DFD            ; Jump to DFD
$618    $4224   SNE      V2, #24         ; Skip if V2 != 36
$61A    $E211   UNKNOWN  $E211           ; Unknown Exxx instruction
$61C    $C72D   RND      V7, #2D         ; V7 = random & 2D
$61E    $5FCA   UNKNOWN  $5FCA           ; Unknown 5xxx instruction
$620    $7A8E   ADD      VA, #8E         ; Add 142 to VA
$622    $21C4   CALL     $1C4            ; Call subroutine at 1C4
$624    $712D   ADD      V1, #2D         ; Add 45 to V1
$626    $1EB2   JP       $EB2            ; Jump to EB2
$628    $029B   SYS      $29B            ; System call to 29B
$62A    $38E4   SE       V8, #E4         ; Skip if V8 == 228
$62C    $2D9B   CALL     $D9B            ; Call subroutine at D9B
$62E    $0F16   SYS      $F16            ; System call to F16
$630    $3596   SE       V5, #96         ; Skip if V5 == 150
$632    $5A65   UNKNOWN  $5A65           ; Unknown 5xxx instruction
$634    $599F   UNKNOWN  $599F           ; Unknown 5xxx instruction
$636    $B5B8   JP       V0, $5B8        ; Jump to V0 + 5B8
$638    $9F41   UNKNOWN  $9F41           ; Unknown 9xxx instruction
$63A    $2D2E   CALL     $D2E            ; Call subroutine at D2E
$63C    $1D42   JP       $D42            ; Jump to D42
$63E    $C372   RND      V3, #72         ; V3 = random & 72
$640    $A586   LD       I, $586         ; Load 586 into I
$642    $CF70   RND      VF, #70         ; VF = random & 70
$644    $96C0   SNE      V6, VC          ; Skip if V6 != VC
$646    $E882   UNKNOWN  $E882           ; Unknown Exxx instruction
$648    $C15C   RND      V1, #5C         ; V1 = random & 5C
$64A    $C6AA   RND      V6, #AA         ; V6 = random & AA
$64C    $8AD0   LD       VA, VD          ; VA = VD
$64E    $8A91   OR       VA, V9          ; VA |= V9
$650    $94AC   UNKNOWN  $94AC           ; Unknown 9xxx instruction
$652    $AFF5   LD       I, $FF5         ; Load FF5 into I
$654    $AD5D   LD       I, $D5D         ; Load D5D into I
$656    $5CA6   UNKNOWN  $5CA6           ; Unknown 5xxx instruction
$658    $1486   JP       $486            ; Jump to 486
$65A    $F56C   UNKNOWN  F56C            ; Unknown Fxxx instruction
$65C    $96A6   UNKNOWN  $96A6           ; Unknown 9xxx instruction
$65E    $1228   JP       $228            ; Jump to 228
$660    $6685   LD       V6, #85         ; Load 133 into V6
$662    $0542   SYS      $542            ; System call to 542
$664    $D7E8   DRW      V7, VE, #8      ; Draw 8-byte sprite at V7, VE
$666    $05CF   SYS      $5CF            ; System call to 5CF
$668    $E829   UNKNOWN  $E829           ; Unknown Exxx instruction
$66A    $BE9A   JP       V0, $E9A        ; Jump to V0 + E9A
$66C    $8162   AND      V1, V6          ; V1 &= V6
$66E    $4A9E   SNE      VA, #9E         ; Skip if VA != 158
$670    $7103   ADD      V1, #03         ; Add 3 to V1
$672    $AD16   LD       I, $D16         ; Load D16 into I
$674    $1DBF   JP       $DBF            ; Jump to DBF
$676    $F694   UNKNOWN  F694            ; Unknown Fxxx instruction
$678    $D2C1   DRW      V2, VC, #1      ; Draw 1-byte sprite at V2, VC
$67A    $B1AC   JP       V0, $1AC        ; Jump to V0 + 1AC
$67C    $6474   LD       V4, #74         ; Load 116 into V4
$67E    $63DC   LD       V3, #DC         ; Load 220 into V3
$680    $38F8   SE       V8, #F8         ; Skip if V8 == 248
$682    $7556   ADD      V5, #56         ; Add 86 to V5
$684    $C41E   RND      V4, #1E         ; V4 = random & 1E
$686    $212B   CALL     $12B            ; Call subroutine at 12B
$688    $A890   LD       I, $890         ; Load 890 into I
$68A    $06E0   SYS      $6E0            ; System call to 6E0
$68C    $8B83   XOR      VB, V8          ; VB ^= V8
$68E    $F86F   UNKNOWN  F86F            ; Unknown Fxxx instruction
$690    $926D   UNKNOWN  $926D           ; Unknown 9xxx instruction
$692    $0021   SYS      $021            ; System call to 021
$694    $3484   SE       V4, #84         ; Skip if V4 == 132
$696    $DDFF   DRW      VD, VF, #F      ; Draw 15-byte sprite at VD, VF
$698    $162D   JP       $62D            ; Jump to 62D
$69A    $53BB   UNKNOWN  $53BB           ; Unknown 5xxx instruction
$69C    $1321   JP       $321            ; Jump to 321
$69E    $E402   UNKNOWN  $E402           ; Unknown Exxx instruction
$6A0    $65AB   LD       V5, #AB         ; Load 171 into V5
$6A2    $6CC1   LD       VC, #C1         ; Load 193 into VC
$6A4    $319E   SE       V1, #9E         ; Skip if V1 == 158
$6A6    $B61D   JP       V0, $61D        ; Jump to V0 + 61D
$6A8    $39AA   SE       V9, #AA         ; Skip if V9 == 170
$6AA    $EB2D   UNKNOWN  $EB2D           ; Unknown Exxx instruction
$6AC    $6511   LD       V5, #11         ; Load 17 into V5
$6AE    $5708   UNKNOWN  $5708           ; Unknown 5xxx instruction
$6B0    $8A5C   UNKNOWN  8A5C            ; Unknown 8xxx instruction
$6B2    $4751   SNE      V7, #51         ; Skip if V7 != 81
$6B4    $B2FA   JP       V0, $2FA        ; Jump to V0 + 2FA
$6B6    $168E   JP       $68E            ; Jump to 68E
$6B8    $8685   SUB      V6, V8          ; V6 -= V8, VF = !borrow
$6BA    $7FBD   ADD      VF, #BD         ; Add 189 to VF
$6BC    $7C90   ADD      VC, #90         ; Add 144 to VC
$6BE    $44DE   SNE      V4, #DE         ; Skip if V4 != 222
$6C0    $CD67   RND      VD, #67         ; VD = random & 67
$6C2    $9AEE   UNKNOWN  $9AEE           ; Unknown 9xxx instruction
$6C4    $D33B   DRW      V3, V3, #B      ; Draw 11-byte sprite at V3, V3
$6C6    $581E   UNKNOWN  $581E           ; Unknown 5xxx instruction
$6C8    $09D0   SYS      $9D0            ; System call to 9D0
$6CA    $81DB   UNKNOWN  81DB            ; Unknown 8xxx instruction
$6CC    $E2BA   UNKNOWN  $E2BA           ; Unknown Exxx instruction
$6CE    $23C9   CALL     $3C9            ; Call subroutine at 3C9
$6D0    $7E51   ADD      VE, #51         ; Add 81 to VE
$6D2    $4FFF   SNE      VF, #FF         ; Skip if VF != 255
$6D4    $AF1B   LD       I, $F1B         ; Load F1B into I
$6D6    $A42E   LD       I, $42E         ; Load 42E into I
$6D8    $D1A7   DRW      V1, VA, #7      ; Draw 7-byte sprite at V1, VA
$6DA    $C7FE   RND      V7, #FE         ; V7 = random & FE
$6DC    $B03E   JP       V0, $03E        ; Jump to V0 + 03E
$6DE    $4CC8   SNE      VC, #C8         ; Skip if VC != 200
$6E0    $BCC5   JP       V0, $CC5        ; Jump to V0 + CC5
$6E2    $949F   UNKNOWN  $949F           ; Unknown 9xxx instruction
$6E4    $C280   RND      V2, #80         ; V2 = random & 80
$6E6    $2BF9   CALL     $BF9            ; Call subroutine at BF9
$6E8    $9A9D   UNKNOWN  $9A9D           ; Unknown 9xxx instruction
$6EA    $79E4   ADD      V9, #E4         ; Add 228 to V9
$6EC    $789D   ADD      V8, #9D         ; Add 157 to V8
$6EE    $4EB6   SNE      VE, #B6         ; Skip if VE != 182
$6F0    $5B11   UNKNOWN  $5B11           ; Unknown 5xxx instruction
$6F2    $B61F   JP       V0, $61F        ; Jump to V0 + 61F
$6F4    $0E5F   SYS      $E5F            ; System call to E5F
$6F6    $6F07   LD       VF, #07         ; Load 7 into VF
$6F8    $30CB   SE       V0, #CB         ; Skip if V0 == 203
$6FA    $A8E8   LD       I, $8E8         ; Load 8E8 into I
$6FC    $59DE   UNKNOWN  $59DE           ; Unknown 5xxx instruction
$6FE    $401E   SNE      V0, #1E         ; Skip if V0 != 30
$700    $D249   DRW      V2, V4, #9      ; Draw 9-byte sprite at V2, V4
$702    $068A   SYS      $68A            ; System call to 68A
$704    $F38D   UNKNOWN  F38D            ; Unknown Fxxx instruction
$706    $E3E7   UNKNOWN  $E3E7           ; Unknown Exxx instruction
$708    $AE49   LD       I, $E49         ; Load E49 into I
$70A    $4BFC   SNE      VB, #FC         ; Skip if VB != 252
$70C    $9DB0   SNE      VD, VB          ; Skip if VD != VB
$70E    $525C   UNKNOWN  $525C           ; Unknown 5xxx instruction
$710    $1A31   JP       $A31            ; Jump to A31
$712    $623A   LD       V2, #3A         ; Load 58 into V2
$714    $8D0E   SHL      VD              ; VD <<= 1, VF = MSB
$716    $8C91   OR       VC, V9          ; VC |= V9
$718    $4EC4   SNE      VE, #C4         ; Skip if VE != 196
$71A    $8022   AND      V0, V2          ; V0 &= V2
$71C    $8CA6   SHR      VC              ; VC >>= 1, VF = LSB
$71E    $096E   SYS      $96E            ; System call to 96E
$720    $5ED3   UNKNOWN  $5ED3           ; Unknown 5xxx instruction
$722    $24B0   CALL     $4B0            ; Call subroutine at 4B0
$724    $E180   UNKNOWN  $E180           ; Unknown Exxx instruction
$726    $7164   ADD      V1, #64         ; Add 100 to V1
$728    $0BC8   SYS      $BC8            ; System call to BC8
$72A    $C199   RND      V1, #99         ; V1 = random & 99
$72C    $3567   SE       V5, #67         ; Skip if V5 == 103
$72E    $02B5   SYS      $2B5            ; System call to 2B5
$730    $3417   SE       V4, #17         ; Skip if V4 == 23
$732    $F5F9   UNKNOWN  F5F9            ; Unknown Fxxx instruction
$734    $BE4E   JP       V0, $E4E        ; Jump to V0 + E4E
$736    $2209   CALL     $209            ; Call subroutine at 209
$738    $1258   JP       $258            ; Jump to 258
$73A    $007E   SYS      $07E            ; System call to 07E
$73C    $80EB   UNKNOWN  80EB            ; Unknown 8xxx instruction
$73E    $2034   CALL     $034            ; Call subroutine at 034
$740    $085B   SYS      $85B            ; System call to 85B
$742    $D003   DRW      V0, V0, #3      ; Draw 3-byte sprite at V0, V0
$744    $A05D   LD       I, $05D         ; Load 05D into I
$746    $B12A   JP       V0, $12A        ; Jump to V0 + 12A
$748    $199D   JP       $99D            ; Jump to 99D
$74A    $139B   JP       $39B            ; Jump to 39B
$74C    $9D32   UNKNOWN  $9D32           ; Unknown 9xxx instruction
$74E    $32CB   SE       V2, #CB         ; Skip if V2 == 203
$750    $3741   SE       V7, #41         ; Skip if V7 == 65
$752    $0C58   SYS      $C58            ; System call to C58
$754    $765E   ADD      V6, #5E         ; Add 94 to V6
$756    $099F   SYS      $99F            ; System call to 99F
$758    $631B   LD       V3, #1B         ; Load 27 into V3
$75A    $0E04   SYS      $E04            ; System call to E04
$75C    $6AAF   LD       VA, #AF         ; Load 175 into VA
$75E    $32F3   SE       V2, #F3         ; Skip if V2 == 243
$760    $CF69   RND      VF, #69         ; VF = random & 69
$762    $B9B3   JP       V0, $9B3        ; Jump to V0 + 9B3
$764    $A9CE   LD       I, $9CE         ; Load 9CE into I
$766    $AD7C   LD       I, $D7C         ; Load D7C into I
$768    $84BF   UNKNOWN  84BF            ; Unknown 8xxx instruction
$76A    $F6AB   UNKNOWN  F6AB            ; Unknown Fxxx instruction
$76C    $79DB   ADD      V9, #DB         ; Add 219 to V9
$76E    $B690   JP       V0, $690        ; Jump to V0 + 690
$770    $B9DA   JP       V0, $9DA        ; Jump to V0 + 9DA
$772    $4F63   SNE      VF, #63         ; Skip if VF != 99
$774    $BE61   JP       V0, $E61        ; Jump to V0 + E61
$776    $1935   JP       $935            ; Jump to 935
$778    $22C3   CALL     $2C3            ; Call subroutine at 2C3
$77A    $4EC3   SNE      VE, #C3         ; Skip if VE != 195
$77C    $1698   JP       $698            ; Jump to 698
$77E    $ECA9   UNKNOWN  $ECA9           ; Unknown Exxx instruction
$780    $99B0   SNE      V9, VB          ; Skip if V9 != VB
$782    $4000   SNE      V0, #00         ; Skip if V0 != 0
$784    $C918   RND      V9, #18         ; V9 = random & 18
$786    $BD63   JP       V0, $D63        ; Jump to V0 + D63
$788    $9857   UNKNOWN  $9857           ; Unknown 9xxx instruction
$78A    $BCD2   JP       V0, $CD2        ; Jump to V0 + CD2
$78C    $23EA   CALL     $3EA            ; Call subroutine at 3EA
$78E    $E0B4   UNKNOWN  $E0B4           ; Unknown Exxx instruction
$790    $D3AC   DRW      V3, VA, #C      ; Draw 12-byte sprite at V3, VA
$792    $B78E   JP       V0, $78E        ; Jump to V0 + 78E
$794    $514E   UNKNOWN  $514E           ; Unknown 5xxx instruction
$796    $E1AE   UNKNOWN  $E1AE           ; Unknown Exxx instruction
$798    $AAA7   LD       I, $AA7         ; Load AA7 into I
$79A    $5E8E   UNKNOWN  $5E8E           ; Unknown 5xxx instruction
$79C    $0CF7   SYS      $CF7            ; System call to CF7
$79E    $06C7   SYS      $6C7            ; System call to 6C7
$7A0    $7282   ADD      V2, #82         ; Add 130 to V2
$7A2    $720F   ADD      V2, #0F         ; Add 15 to V2
$7A4    $8C91   OR       VC, V9          ; VC |= V9
$7A6    $943F   UNKNOWN  $943F           ; Unknown 9xxx instruction
$7A8    $08FF   SYS      $8FF            ; System call to 8FF
$7AA    $4069   SNE      V0, #69         ; Skip if V0 != 105
$7AC    $05EF   SYS      $5EF            ; System call to 5EF
$7AE    $C1F1   RND      V1, #F1         ; V1 = random & F1
$7B0    $5EE3   UNKNOWN  $5EE3           ; Unknown 5xxx instruction
$7B2    $4A87   SNE      VA, #87         ; Skip if VA != 135
$7B4    $770B   ADD      V7, #0B         ; Add 11 to V7
$7B6    $A93A   LD       I, $93A         ; Load 93A into I
$7B8    $6849   LD       V8, #49         ; Load 73 into V8
$7BA    $C863   RND      V8, #63         ; V8 = random & 63
$7BC    $5DB8   UNKNOWN  $5DB8           ; Unknown 5xxx instruction
$7BE    $1064   JP       $064            ; Jump to 064
$7C0    $A42B   LD       I, $42B         ; Load 42B into I
$7C2    $3CD3   SE       VC, #D3         ; Skip if VC == 211
$7C4    $8F6D   UNKNOWN  8F6D            ; Unknown 8xxx instruction
$7C6    $3253   SE       V2, #53         ; Skip if V2 == 83
$7C8    $4EA0   SNE      VE, #A0         ; Skip if VE != 160
$7CA    $28A0   CALL     $8A0            ; Call subroutine at 8A0
$7CC    $17D5   JP       $7D5            ; Jump to 7D5
$7CE    $FFEE   UNKNOWN  FFEE            ; Unknown Fxxx instruction
$7D0    $9B9B   UNKNOWN  $9B9B           ; Unknown 9xxx instruction
$7D2    $1FA3   JP       $FA3            ; Jump to FA3
$7D4    $EE98   UNKNOWN  $EE98           ; Unknown Exxx instruction
$7D6    $43C6   SNE      V3, #C6         ; Skip if V3 != 198
$7D8    $65E0   LD       V5, #E0         ; Load 224 into V5
$7DA    $27E6   CALL     $7E6            ; Call subroutine at 7E6
$7DC    $8283   XOR      V2, V8          ; V2 ^= V8
$7DE    $6DF4   LD       VD, #F4         ; Load 244 into VD
$7E0    $34ED   SE       V4, #ED         ; Skip if V4 == 237
$7E2    $AC01   LD       I, $C01         ; Load C01 into I
$7E4    $8323   XOR      V3, V2          ; V3 ^= V2
$7E6    $D938   DRW      V9, V3, #8      ; Draw 8-byte sprite at V9, V3
$7E8    $EEB4   UNKNOWN  $EEB4           ; Unknown Exxx instruction
$7EA    $576F   UNKNOWN  $576F           ; Unknown 5xxx instruction
$7EC    $A082   LD       I, $082         ; Load 082 into I
$7EE    $0FFC   SYS      $FFC            ; System call to FFC
$7F0    $3E7C   SE       VE, #7C         ; Skip if VE == 124
$7F2    $0224   SYS      $224            ; System call to 224
$7F4    $E1B5   UNKNOWN  $E1B5           ; Unknown Exxx instruction
$7F6    $ABEA   LD       I, $BEA         ; Load BEA into I
$7F8    $C7D0   RND      V7, #D0         ; V7 = random & D0
$7FA    $BEB5   JP       V0, $EB5        ; Jump to V0 + EB5
$7FC    $287F   CALL     $87F            ; Call subroutine at 87F
$7FE    $51A6   UNKNOWN  $51A6           ; Unknown 5xxx instruction
$800    $FA02   UNKNOWN  FA02            ; Unknown Fxxx instruction
$802    $902C   UNKNOWN  $902C           ; Unknown 9xxx instruction
$804    $0686   SYS      $686            ; System call to 686
$806    $07F9   SYS      $7F9            ; System call to 7F9
$808    $87B5   SUB      V7, VB          ; V7 -= VB, VF = !borrow
$80A    $0E8D   SYS      $E8D            ; System call to E8D
$80C    $3461   SE       V4, #61         ; Skip if V4 == 97
$80E    $8EE7   SUBN     VE, VE          ; VE = VE - VE, VF = !borrow
$810    $795E   ADD      V9, #5E         ; Add 94 to V9
$812    $58C7   UNKNOWN  $58C7           ; Unknown 5xxx instruction
$814    $8DC9   UNKNOWN  8DC9            ; Unknown 8xxx instruction
$816    $A328   LD       I, $328         ; Load 328 into I
$818    $383E   SE       V8, #3E         ; Skip if V8 == 62
$81A    $175E   JP       $75E            ; Jump to 75E
$81C    $D535   DRW      V5, V3, #5      ; Draw 5-byte sprite at V5, V3
$81E    $A689   LD       I, $689         ; Load 689 into I
$820    $17E5   JP       $7E5            ; Jump to 7E5
$822    $35F3   SE       V5, #F3         ; Skip if V5 == 243
$824    $711F   ADD      V1, #1F         ; Add 31 to V1
$826    $80C2   AND      V0, VC          ; V0 &= VC
$828    $5283   UNKNOWN  $5283           ; Unknown 5xxx instruction
$82A    $9351   UNKNOWN  $9351           ; Unknown 9xxx instruction
$82C    $59D4   UNKNOWN  $59D4           ; Unknown 5xxx instruction
$82E    $2701   CALL     $701            ; Call subroutine at 701
$830    $7351   ADD      V3, #51         ; Add 81 to V3
$832    $E365   UNKNOWN  $E365           ; Unknown Exxx instruction
$834    $7F08   ADD      VF, #08         ; Add 8 to VF
$836    $EF7A   UNKNOWN  $EF7A           ; Unknown Exxx instruction
$838    $9EDF   UNKNOWN  $9EDF           ; Unknown 9xxx instruction
$83A    $E35C   UNKNOWN  $E35C           ; Unknown Exxx instruction
$83C    $E372   UNKNOWN  $E372           ; Unknown Exxx instruction
$83E    $1E90   JP       $E90            ; Jump to E90
$840    $AC9F   LD       I, $C9F         ; Load C9F into I
$842    $E254   UNKNOWN  $E254           ; Unknown Exxx instruction
$844    $F76B   UNKNOWN  F76B            ; Unknown Fxxx instruction
$846    $AAF3   LD       I, $AF3         ; Load AF3 into I
$848    $34D5   SE       V4, #D5         ; Skip if V4 == 213
$84A    $D477   DRW      V4, V7, #7      ; Draw 7-byte sprite at V4, V7
$84C    $714C   ADD      V1, #4C         ; Add 76 to V1
$84E    $AF17   LD       I, $F17         ; Load F17 into I
$850    $3045   SE       V0, #45         ; Skip if V0 == 69
$852    $A887   LD       I, $887         ; Load 887 into I
$854    $4158   SNE      V1, #58         ; Skip if V1 != 88
$856    $19E6   JP       $9E6            ; Jump to 9E6
$858    $80B4   ADD      V0, VB          ; V0 += VB, VF = carry
$85A    $C64A   RND      V6, #4A         ; V6 = random & 4A
$85C    $CA76   RND      VA, #76         ; VA = random & 76
$85E    $3F4B   SE       VF, #4B         ; Skip if VF == 75
$860    $7910   ADD      V9, #10         ; Add 16 to V9
$862    $EE4D   UNKNOWN  $EE4D           ; Unknown Exxx instruction
$864    $10A1   JP       $0A1            ; Jump to 0A1
$866    $DA79   DRW      VA, V7, #9      ; Draw 9-byte sprite at VA, V7
$868    $624F   LD       V2, #4F         ; Load 79 into V2
$86A    $542A   UNKNOWN  $542A           ; Unknown 5xxx instruction
$86C    $5CC9   UNKNOWN  $5CC9           ; Unknown 5xxx instruction
$86E    $83FC   UNKNOWN  83FC            ; Unknown 8xxx instruction
$870    $9011   UNKNOWN  $9011           ; Unknown 9xxx instruction
$872    $5B5D   UNKNOWN  $5B5D           ; Unknown 5xxx instruction
$874    $3EC7   SE       VE, #C7         ; Skip if VE == 199
$876    $3070   SE       V0, #70         ; Skip if V0 == 112
$878    $2904   CALL     $904            ; Call subroutine at 904
$87A    $4698   SNE      V6, #98         ; Skip if V6 != 152
$87C    $1189   JP       $189            ; Jump to 189
$87E    $7E85   ADD      VE, #85         ; Add 133 to VE
$880    $BF74   JP       V0, $F74        ; Jump to V0 + F74
$882    $80E1   OR       V0, VE          ; V0 |= VE
$884    $30C9   SE       V0, #C9         ; Skip if V0 == 201
$886    $C776   RND      V7, #76         ; V7 = random & 76
$888    $E5CD   UNKNOWN  $E5CD           ; Unknown Exxx instruction
$88A    $1E99   JP       $E99            ; Jump to E99
$88C    $B943   JP       V0, $943        ; Jump to V0 + 943
$88E    $7A20   ADD      VA, #20         ; Add 32 to VA
$890    $47BE   SNE      V7, #BE         ; Skip if V7 != 190
$892    $AE8C   LD       I, $E8C         ; Load E8C into I
$894    $AFB8   LD       I, $FB8         ; Load FB8 into I
$896    $7644   ADD      V6, #44         ; Add 68 to V6
$898    $AC1D   LD       I, $C1D         ; Load C1D into I
$89A    $28B2   CALL     $8B2            ; Call subroutine at 8B2
$89C    $0077   SYS      $077            ; System call to 077
$89E    $7B41   ADD      VB, #41         ; Add 65 to VB
$8A0    $A086   LD       I, $086         ; Load 086 into I
$8A2    $6684   LD       V6, #84         ; Load 132 into V6
$8A4    $7045   ADD      V0, #45         ; Add 69 to V0
$8A6    $6982   LD       V9, #82         ; Load 130 into V9
$8A8    $21C2   CALL     $1C2            ; Call subroutine at 1C2
$8AA    $F8AE   UNKNOWN  F8AE            ; Unknown Fxxx instruction
$8AC    $628D   LD       V2, #8D         ; Load 141 into V2
$8AE    $73FD   ADD      V3, #FD         ; Add 253 to V3
$8B0    $4E59   SNE      VE, #59         ; Skip if VE != 89
$8B2    $2632   CALL     $632            ; Call subroutine at 632
$8B4    $236A   CALL     $36A            ; Call subroutine at 36A
$8B6    $E543   UNKNOWN  $E543           ; Unknown Exxx instruction
$8B8    $96B4   UNKNOWN  $96B4           ; Unknown 9xxx instruction
$8BA    $6589   LD       V5, #89         ; Load 137 into V5
$8BC    $C95B   RND      V9, #5B         ; V9 = random & 5B
$8BE    $3E10   SE       VE, #10         ; Skip if VE == 16
$8C0    $4AFF   SNE      VA, #FF         ; Skip if VA != 255
$8C2    $0BF6   SYS      $BF6            ; System call to BF6
$8C4    $4C02   SNE      VC, #02         ; Skip if VC != 2
$8C6    $CBC9   RND      VB, #C9         ; VB = random & C9
$8C8    $EE39   UNKNOWN  $EE39           ; Unknown Exxx instruction
$8CA    $A87A   LD       I, $87A         ; Load 87A into I
$8CC    $4197   SNE      V1, #97         ; Skip if V1 != 151
$8CE    $B0AF   JP       V0, $0AF        ; Jump to V0 + 0AF
$8D0    $1BFF   JP       $BFF            ; Jump to BFF
$8D2    $B386   JP       V0, $386        ; Jump to V0 + 386
$8D4    $C51F   RND      V5, #1F         ; V5 = random & 1F
$8D6    $B370   JP       V0, $370        ; Jump to V0 + 370
$8D8    $9219   UNKNOWN  $9219           ; Unknown 9xxx instruction
$8DA    $E581   UNKNOWN  $E581           ; Unknown Exxx instruction
$8DC    $2404   CALL     $404            ; Call subroutine at 404
$8DE    $8EF1   OR       VE, VF          ; VE |= VF
$8E0    $900F   UNKNOWN  $900F           ; Unknown 9xxx instruction
$8E2    $4F09   SNE      VF, #09         ; Skip if VF != 9
$8E4    $65A0   LD       V5, #A0         ; Load 160 into V5
$8E6    $C944   RND      V9, #44         ; V9 = random & 44
$8E8    $22E4   CALL     $2E4            ; Call subroutine at 2E4
$8EA    $D817   DRW      V8, V1, #7      ; Draw 7-byte sprite at V8, V1
$8EC    $8B25   SUB      VB, V2          ; VB -= V2, VF = !borrow
$8EE    $654E   LD       V5, #4E         ; Load 78 into V5
$8F0    $110D   JP       $10D            ; Jump to 10D
$8F2    $391A   SE       V9, #1A         ; Skip if V9 == 26
$8F4    $2F85   CALL     $F85            ; Call subroutine at F85
$8F6    $3F84   SE       VF, #84         ; Skip if VF == 132
$8F8    $FFE5   UNKNOWN  FFE5            ; Unknown Fxxx instruction
$8FA    $75AC   ADD      V5, #AC         ; Add 172 to V5
$8FC    $07C3   SYS      $7C3            ; System call to 7C3
$8FE    $7034   ADD      V0, #34         ; Add 52 to V0
$900    $D0F3   DRW      V0, VF, #3      ; Draw 3-byte sprite at V0, VF
$902    $F0F7   UNKNOWN  F0F7            ; Unknown Fxxx instruction
$904    $4507   SNE      V5, #07         ; Skip if V5 != 7
$906    $4023   SNE      V0, #23         ; Skip if V0 != 35
$908    $A684   LD       I, $684         ; Load 684 into I
$90A    $49D5   SNE      V9, #D5         ; Skip if V9 != 213
$90C    $C3C5   RND      V3, #C5         ; V3 = random & C5
$90E    $068A   SYS      $68A            ; System call to 68A
$910    $0145   SYS      $145            ; System call to 145
$912    $B34C   JP       V0, $34C        ; Jump to V0 + 34C
$914    $CB1E   RND      VB, #1E         ; VB = random & 1E
$916    $1CB7   JP       $CB7            ; Jump to CB7
$918    $7D54   ADD      VD, #54         ; Add 84 to VD
$91A    $161F   JP       $61F            ; Jump to 61F
$91C    $3948   SE       V9, #48         ; Skip if V9 == 72
$91E    $8812   AND      V8, V1          ; V8 &= V1
$920    $0D7E   SYS      $D7E            ; System call to D7E
$922    $BA81   JP       V0, $A81        ; Jump to V0 + A81
$924    $8571   OR       V5, V7          ; V5 |= V7
$926    $5796   UNKNOWN  $5796           ; Unknown 5xxx instruction
$928    $ED72   UNKNOWN  $ED72           ; Unknown Exxx instruction
$92A    $022D   SYS      $22D            ; System call to 22D
$92C    $C5E8   RND      V5, #E8         ; V5 = random & E8
$92E    $B188   JP       V0, $188        ; Jump to V0 + 188
$930    $7E79   ADD      VE, #79         ; Add 121 to VE
$932    $1359   JP       $359            ; Jump to 359
$934    $8AD5   SUB      VA, VD          ; VA -= VD, VF = !borrow
$936    $05BD   SYS      $5BD            ; System call to 5BD
$938    $F325   UNKNOWN  F325            ; Unknown Fxxx instruction
$93A    $657B   LD       V5, #7B         ; Load 123 into V5
$93C    $2196   CALL     $196            ; Call subroutine at 196
$93E    $80ED   UNKNOWN  80ED            ; Unknown 8xxx instruction
$940    $61BB   LD       V1, #BB         ; Load 187 into V1
$942    $973F   UNKNOWN  $973F           ; Unknown 9xxx instruction
$944    $CFE3   RND      VF, #E3         ; VF = random & E3
$946    $D107   DRW      V1, V0, #7      ; Draw 7-byte sprite at V1, V0
$948    $E59F   UNKNOWN  $E59F           ; Unknown Exxx instruction
$94A    $4C79   SNE      VC, #79         ; Skip if VC != 121
$94C    $AF39   LD       I, $F39         ; Load F39 into I
$94E    $C587   RND      V5, #87         ; V5 = random & 87
$950    $DE92   DRW      VE, V9, #2      ; Draw 2-byte sprite at VE, V9
$952    $2E95   CALL     $E95            ; Call subroutine at E95
$954    $D40C   DRW      V4, V0, #C      ; Draw 12-byte sprite at V4, V0
$956    $2D18   CALL     $D18            ; Call subroutine at D18
$958    $5DCE   UNKNOWN  $5DCE           ; Unknown 5xxx instruction
$95A    $A3A8   LD       I, $3A8         ; Load 3A8 into I
$95C    $3E54   SE       VE, #54         ; Skip if VE == 84
$95E    $7EC7   ADD      VE, #C7         ; Add 199 to VE
$960    $3C86   SE       VC, #86         ; Skip if VC == 134
$962    $2BBC   CALL     $BBC            ; Call subroutine at BBC
$964    $28AF   CALL     $8AF            ; Call subroutine at 8AF
$966    $D59B   DRW      V5, V9, #B      ; Draw 11-byte sprite at V5, V9
$968    $6542   LD       V5, #42         ; Load 66 into V5
$96A    $255E   CALL     $55E            ; Call subroutine at 55E
$96C    $B9C0   JP       V0, $9C0        ; Jump to V0 + 9C0
$96E    $AC7B   LD       I, $C7B         ; Load C7B into I
$970    $ED75   UNKNOWN  $ED75           ; Unknown Exxx instruction
$972    $FC55   LD       [I], VC         ; Store V0-VC at I
$974    $599E   UNKNOWN  $599E           ; Unknown 5xxx instruction
$976    $B771   JP       V0, $771        ; Jump to V0 + 771
$978    $5F97   UNKNOWN  $5F97           ; Unknown 5xxx instruction
$97A    $B5F3   JP       V0, $5F3        ; Jump to V0 + 5F3
$97C    $487C   SNE      V8, #7C         ; Skip if V8 != 124
$97E    $92B6   UNKNOWN  $92B6           ; Unknown 9xxx instruction
$980    $9DF6   UNKNOWN  $9DF6           ; Unknown 9xxx instruction
$982    $DE4C   DRW      VE, V4, #C      ; Draw 12-byte sprite at VE, V4
$984    $BBDB   JP       V0, $BDB        ; Jump to V0 + BDB
$986    $0715   SYS      $715            ; System call to 715
$988    $A5F4   LD       I, $5F4         ; Load 5F4 into I
$98A    $CA23   RND      VA, #23         ; VA = random & 23
$98C    $F0FA   UNKNOWN  F0FA            ; Unknown Fxxx instruction
$98E    $6BAE   LD       VB, #AE         ; Load 174 into VB
$990    $6DBA   LD       VD, #BA         ; Load 186 into VD
$992    $43AF   SNE      V3, #AF         ; Skip if V3 != 175
$994    $E69D   UNKNOWN  $E69D           ; Unknown Exxx instruction
$996    $F015   LD       DT, V0          ; Delay timer = V0
$998    $0D49   SYS      $D49            ; System call to D49
$99A    $BF21   JP       V0, $F21        ; Jump to V0 + F21
$99C    $95FD   UNKNOWN  $95FD           ; Unknown 9xxx instruction
$99E    $251F   CALL     $51F            ; Call subroutine at 51F
$9A0    $5161   UNKNOWN  $5161           ; Unknown 5xxx instruction
$9A2    $6EB1   LD       VE, #B1         ; Load 177 into VE
$9A4    $A9BC   LD       I, $9BC         ; Load 9BC into I
$9A6    $F8CA   UNKNOWN  F8CA            ; Unknown Fxxx instruction
$9A8    $BC76   JP       V0, $C76        ; Jump to V0 + C76
$9AA    $F8BD   UNKNOWN  F8BD            ; Unknown Fxxx instruction
$9AC    $EB48   UNKNOWN  $EB48           ; Unknown Exxx instruction
$9AE    $208A   CALL     $08A            ; Call subroutine at 08A
$9B0    $4E8B   SNE      VE, #8B         ; Skip if VE != 139
$9B2    $2D79   CALL     $D79            ; Call subroutine at D79
$9B4    $403E   SNE      V0, #3E         ; Skip if V0 != 62
$9B6    $920B   UNKNOWN  $920B           ; Unknown 9xxx instruction
$9B8    $6D00   LD       VD, #00         ; Load 0 into VD
$9BA    $C349   RND      V3, #49         ; V3 = random & 49
$9BC    $CAAC   RND      VA, #AC         ; VA = random & AC
$9BE    $6B9B   LD       VB, #9B         ; Load 155 into VB
$9C0    $051D   SYS      $51D            ; System call to 51D
$9C2    $B803   JP       V0, $803        ; Jump to V0 + 803
$9C4    $720F   ADD      V2, #0F         ; Add 15 to V2
$9C6    $928D   UNKNOWN  $928D           ; Unknown 9xxx instruction
$9C8    $6331   LD       V3, #31         ; Load 49 into V3
$9CA    $D1E9   DRW      V1, VE, #9      ; Draw 9-byte sprite at V1, VE
$9CC    $CB37   RND      VB, #37         ; VB = random & 37
$9CE    $F561   UNKNOWN  F561            ; Unknown Fxxx instruction
$9D0    $BBA4   JP       V0, $BA4        ; Jump to V0 + BA4
$9D2    $77CA   ADD      V7, #CA         ; Add 202 to V7
$9D4    $543F   UNKNOWN  $543F           ; Unknown 5xxx instruction
$9D6    $0626   SYS      $626            ; System call to 626
$9D8    $2E89   CALL     $E89            ; Call subroutine at E89
$9DA    $D354   DRW      V3, V5, #4      ; Draw 4-byte sprite at V3, V5
$9DC    $BB71   JP       V0, $B71        ; Jump to V0 + B71
$9DE    $1829   JP       $829            ; Jump to 829
$9E0    $3EB1   SE       VE, #B1         ; Skip if VE == 177
$9E2    $4CE8   SNE      VC, #E8         ; Skip if VC != 232
$9E4    $B501   JP       V0, $501        ; Jump to V0 + 501
$9E6    $AE42   LD       I, $E42         ; Load E42 into I
$9E8    $9010   SNE      V0, V1          ; Skip if V0 != V1
$9EA    $0E61   SYS      $E61            ; System call to E61
$9EC    $6065   LD       V0, #65         ; Load 101 into V0
$9EE    $C8E6   RND      V8, #E6         ; V8 = random & E6
$9F0    $4955   SNE      V9, #55         ; Skip if V9 != 85
$9F2    $204C   CALL     $04C            ; Call subroutine at 04C
$9F4    $B454   JP       V0, $454        ; Jump to V0 + 454
$9F6    $FB01   UNKNOWN  FB01            ; Unknown Fxxx instruction
$9F8    $B5FA   JP       V0, $5FA        ; Jump to V0 + 5FA
$9FA    $1702   JP       $702            ; Jump to 702
$9FC    $C0FE   RND      V0, #FE         ; V0 = random & FE
$9FE    $F4AE   UNKNOWN  F4AE            ; Unknown Fxxx instruction
$A00    $4005   SNE      V0, #05         ; Skip if V0 != 5
$A02    $12FF   JP       $2FF            ; Jump to 2FF
$A04    $9DAA   UNKNOWN  $9DAA           ; Unknown 9xxx instruction
$A06    $F38A   UNKNOWN  F38A            ; Unknown Fxxx instruction
$A08    $EE0C   UNKNOWN  $EE0C           ; Unknown Exxx instruction
$A0A    $E76A   UNKNOWN  $E76A           ; Unknown Exxx instruction
$A0C    $1802   JP       $802            ; Jump to 802
$A0E    $7FE1   ADD      VF, #E1         ; Add 225 to VF
$A10    $408F   SNE      V0, #8F         ; Skip if V0 != 143
$A12    $8034   ADD      V0, V3          ; V0 += V3, VF = carry
$A14    $F504   UNKNOWN  F504            ; Unknown Fxxx instruction
$A16    $BA48   JP       V0, $A48        ; Jump to V0 + A48
$A18    $A278   LD       I, $278         ; Load 278 into I
$A1A    $2242   CALL     $242            ; Call subroutine at 242
$A1C    $EE5D   UNKNOWN  $EE5D           ; Unknown Exxx instruction
$A1E    $911C   UNKNOWN  $911C           ; Unknown 9xxx instruction
$A20    $78AF   ADD      V8, #AF         ; Add 175 to V8
$A22    $7ADC   ADD      VA, #DC         ; Add 220 to VA
$A24    $B4AC   JP       V0, $4AC        ; Jump to V0 + 4AC
$A26    $CE50   RND      VE, #50         ; VE = random & 50
$A28    $375C   SE       V7, #5C         ; Skip if V7 == 92
$A2A    $E835   UNKNOWN  $E835           ; Unknown Exxx instruction
$A2C    $762F   ADD      V6, #2F         ; Add 47 to V6
$A2E    $4061   SNE      V0, #61         ; Skip if V0 != 97
$A30    $4EAC   SNE      VE, #AC         ; Skip if VE != 172
$A32    $2C0F   CALL     $C0F            ; Call subroutine at C0F
$A34    $ABF6   LD       I, $BF6         ; Load BF6 into I
$A36    $BD64   JP       V0, $D64        ; Jump to V0 + D64
$A38    $11A2   JP       $1A2            ; Jump to 1A2
$A3A    $4344   SNE      V3, #44         ; Skip if V3 != 68
$A3C    $8B0C   UNKNOWN  8B0C            ; Unknown 8xxx instruction
$A3E    $77A1   ADD      V7, #A1         ; Add 161 to V7
$A40    $DE0B   DRW      VE, V0, #B      ; Draw 11-byte sprite at VE, V0
$A42    $6683   LD       V6, #83         ; Load 131 into V6
$A44    $47B1   SNE      V7, #B1         ; Skip if V7 != 177
$A46    $F11D   UNKNOWN  F11D            ; Unknown Fxxx instruction
$A48    $8021   OR       V0, V2          ; V0 |= V2
$A4A    $AADF   LD       I, $ADF         ; Load ADF into I
$A4C    $611C   LD       V1, #1C         ; Load 28 into V1
$A4E    $DB99   DRW      VB, V9, #9      ; Draw 9-byte sprite at VB, V9
$A50    $0B3F   SYS      $B3F            ; System call to B3F
$A52    $F23F   UNKNOWN  F23F            ; Unknown Fxxx instruction
$A54    $BB1B   JP       V0, $B1B        ; Jump to V0 + B1B
$A56    $561F   UNKNOWN  $561F           ; Unknown 5xxx instruction
$A58    $678D   LD       V7, #8D         ; Load 141 into V7
$A5A    $19F5   JP       $9F5            ; Jump to 9F5
$A5C    $ED6E   UNKNOWN  $ED6E           ; Unknown Exxx instruction
$A5E    $E9D0   UNKNOWN  $E9D0           ; Unknown Exxx instruction
$A60    $BD2E   JP       V0, $D2E        ; Jump to V0 + D2E
$A62    $AE7C   LD       I, $E7C         ; Load E7C into I
$A64    $14F4   JP       $4F4            ; Jump to 4F4
$A66    $B0E5   JP       V0, $0E5        ; Jump to V0 + 0E5
$A68    $8D7E   SHL      VD              ; VD <<= 1, VF = MSB
$A6A    $ABD5   LD       I, $BD5         ; Load BD5 into I
$A6C    $37A2   SE       V7, #A2         ; Skip if V7 == 162
$A6E    $65E9   LD       V5, #E9         ; Load 233 into V5
$A70    $EF0A   UNKNOWN  $EF0A           ; Unknown Exxx instruction
$A72    $3E85   SE       VE, #85         ; Skip if VE == 133
$A74    $0A4A   SYS      $A4A            ; System call to A4A
$A76    $3314   SE       V3, #14         ; Skip if V3 == 20
$A78    $8A02   AND      VA, V0          ; VA &= V0
$A7A    $4DBD   SNE      VD, #BD         ; Skip if VD != 189
$A7C    $2684   CALL     $684            ; Call subroutine at 684
$A7E    $EE9A   UNKNOWN  $EE9A           ; Unknown Exxx instruction
$A80    $408D   SNE      V0, #8D         ; Skip if V0 != 141
$A82    $D936   DRW      V9, V3, #6      ; Draw 6-byte sprite at V9, V3
$A84    $1CF2   JP       $CF2            ; Jump to CF2
$A86    $A090   LD       I, $090         ; Load 090 into I
$A88    $8B37   SUBN     VB, V3          ; VB = V3 - VB, VF = !borrow
$A8A    $540E   UNKNOWN  $540E           ; Unknown 5xxx instruction
$A8C    $E689   UNKNOWN  $E689           ; Unknown Exxx instruction
$A8E    $1FBB   JP       $FBB            ; Jump to FBB
$A90    $9FEB   UNKNOWN  $9FEB           ; Unknown 9xxx instruction
$A92    $9D1B   UNKNOWN  $9D1B           ; Unknown 9xxx instruction
$A94    $0452   SYS      $452            ; System call to 452
$A96    $EABE   UNKNOWN  $EABE           ; Unknown Exxx instruction
$A98    $A346   LD       I, $346         ; Load 346 into I
$A9A    $979F   UNKNOWN  $979F           ; Unknown 9xxx instruction
$A9C    $7655   ADD      V6, #55         ; Add 85 to V6
$A9E    $A970   LD       I, $970         ; Load 970 into I
$AA0    $64F4   LD       V4, #F4         ; Load 244 into V4
$AA2    $3B6B   SE       VB, #6B         ; Skip if VB == 107
$AA4    $296B   CALL     $96B            ; Call subroutine at 96B
$AA6    $8923   XOR      V9, V2          ; V9 ^= V2
$AA8    $78E1   ADD      V8, #E1         ; Add 225 to V8
$AAA    $2F4F   CALL     $F4F            ; Call subroutine at F4F
$AAC    $258D   CALL     $58D            ; Call subroutine at 58D
$AAE    $597B   UNKNOWN  $597B           ; Unknown 5xxx instruction
$AB0    $7EDC   ADD      VE, #DC         ; Add 220 to VE
$AB2    $7CC7   ADD      VC, #C7         ; Add 199 to VC
$AB4    $D21F   DRW      V2, V1, #F      ; Draw 15-byte sprite at V2, V1
$AB6    $C19E   RND      V1, #9E         ; V1 = random & 9E
$AB8    $88CB   UNKNOWN  88CB            ; Unknown 8xxx instruction
$ABA    $A631   LD       I, $631         ; Load 631 into I
$ABC    $C275   RND      V2, #75         ; V2 = random & 75
$ABE    $1637   JP       $637            ; Jump to 637
$AC0    $607A   LD       V0, #7A         ; Load 122 into V0
$AC2    $B5A9   JP       V0, $5A9        ; Jump to V0 + 5A9
$AC4    $37CE   SE       V7, #CE         ; Skip if V7 == 206
$AC6    $C2F1   RND      V2, #F1         ; V2 = random & F1
$AC8    $E9D1   UNKNOWN  $E9D1           ; Unknown Exxx instruction
$ACA    $A1C8   LD       I, $1C8         ; Load 1C8 into I
$ACC    $A780   LD       I, $780         ; Load 780 into I
$ACE    $F1BD   UNKNOWN  F1BD            ; Unknown Fxxx instruction
$AD0    $64F1   LD       V4, #F1         ; Load 241 into V4
$AD2    $0D80   SYS      $D80            ; System call to D80
$AD4    $84C3   XOR      V4, VC          ; V4 ^= VC
$AD6    $DF0E   DRW      VF, V0, #E      ; Draw 14-byte sprite at VF, V0
$AD8    $2D01   CALL     $D01            ; Call subroutine at D01
$ADA    $AA77   LD       I, $A77         ; Load A77 into I
$ADC    $6508   LD       V5, #08         ; Load 8 into V5
$ADE    $4B0A   SNE      VB, #0A         ; Skip if VB != 10
$AE0    $AE0E   LD       I, $E0E         ; Load E0E into I
$AE2    $A68C   LD       I, $68C         ; Load 68C into I
$AE4    $85D2   AND      V5, VD          ; V5 &= VD
$AE6    $B33C   JP       V0, $33C        ; Jump to V0 + 33C
$AE8    $4854   SNE      V8, #54         ; Skip if V8 != 84
$AEA    $F8B7   UNKNOWN  F8B7            ; Unknown Fxxx instruction
$AEC    $1F0C   JP       $F0C            ; Jump to F0C
$AEE    $87C1   OR       V7, VC          ; V7 |= VC
$AF0    $CD11   RND      VD, #11         ; VD = random & 11
$AF2    $4AC0   SNE      VA, #C0         ; Skip if VA != 192
$AF4    $8738   UNKNOWN  8738            ; Unknown 8xxx instruction
$AF6    $ACB3   LD       I, $CB3         ; Load CB3 into I
$AF8    $A0A2   LD       I, $0A2         ; Load 0A2 into I
$AFA    $83DF   UNKNOWN  83DF            ; Unknown 8xxx instruction
$AFC    $7FC7   ADD      VF, #C7         ; Add 199 to VF
$AFE    $695D   LD       V9, #5D         ; Load 93 into V9
$B00    $DD7D   DRW      VD, V7, #D      ; Draw 13-byte sprite at VD, V7
$B02    $5551   UNKNOWN  $5551           ; Unknown 5xxx instruction
$B04    $17DC   JP       $7DC            ; Jump to 7DC
$B06    $7DDE   ADD      VD, #DE         ; Add 222 to VD
$B08    $C050   RND      V0, #50         ; V0 = random & 50
$B0A    $6BFD   LD       VB, #FD         ; Load 253 into VB
$B0C    $1898   JP       $898            ; Jump to 898
$B0E    $13C4   JP       $3C4            ; Jump to 3C4
$B10    $0A2F   SYS      $A2F            ; System call to A2F
$B12    $1FE9   JP       $FE9            ; Jump to FE9
$B14    $2E84   CALL     $E84            ; Call subroutine at E84
$B16    $538D   UNKNOWN  $538D           ; Unknown 5xxx instruction
$B18    $A026   LD       I, $026         ; Load 026 into I
$B1A    $CD5D   RND      VD, #5D         ; VD = random & 5D
$B1C    $C346   RND      V3, #46         ; V3 = random & 46
$B1E    $0354   SYS      $354            ; System call to 354
$B20    $4D19   SNE      VD, #19         ; Skip if VD != 25
$B22    $1301   JP       $301            ; Jump to 301
$B24    $B2B3   JP       V0, $2B3        ; Jump to V0 + 2B3
$B26    $F7D4   UNKNOWN  F7D4            ; Unknown Fxxx instruction
$B28    $3B0C   SE       VB, #0C         ; Skip if VB == 12
$B2A    $F608   UNKNOWN  F608            ; Unknown Fxxx instruction
$B2C    $0F4B   SYS      $F4B            ; System call to F4B
$B2E    $62FB   LD       V2, #FB         ; Load 251 into V2
$B30    $958C   UNKNOWN  $958C           ; Unknown 9xxx instruction
$B32    $252C   CALL     $52C            ; Call subroutine at 52C
$B34    $CD8E   RND      VD, #8E         ; VD = random & 8E
$B36    $F5C6   UNKNOWN  F5C6            ; Unknown Fxxx instruction
$B38    $21BC   CALL     $1BC            ; Call subroutine at 1BC
$B3A    $E588   UNKNOWN  $E588           ; Unknown Exxx instruction
$B3C    $C7E5   RND      V7, #E5         ; V7 = random & E5
$B3E    $7C51   ADD      VC, #51         ; Add 81 to VC
$B40    $C2EF   RND      V2, #EF         ; V2 = random & EF
$B42    $FDAA   UNKNOWN  FDAA            ; Unknown Fxxx instruction
$B44    $8443   XOR      V4, V4          ; V4 ^= V4
$B46    $40DE   SNE      V0, #DE         ; Skip if V0 != 222
$B48    $2295   CALL     $295            ; Call subroutine at 295
$B4A    $5763   UNKNOWN  $5763           ; Unknown 5xxx instruction
$B4C    $52AF   UNKNOWN  $52AF           ; Unknown 5xxx instruction
$B4E    $C8F0   RND      V8, #F0         ; V8 = random & F0
$B50    $DCA1   DRW      VC, VA, #1      ; Draw 1-byte sprite at VC, VA
$B52    $833E   SHL      V3              ; V3 <<= 1, VF = MSB
$B54    $240D   CALL     $40D            ; Call subroutine at 40D
$B56    $D229   DRW      V2, V2, #9      ; Draw 9-byte sprite at V2, V2
$B58    $BA1F   JP       V0, $A1F        ; Jump to V0 + A1F
$B5A    $9812   UNKNOWN  $9812           ; Unknown 9xxx instruction
$B5C    $A7AE   LD       I, $7AE         ; Load 7AE into I
$B5E    $FEA1   UNKNOWN  FEA1            ; Unknown Fxxx instruction
$B60    $C23A   RND      V2, #3A         ; V2 = random & 3A
$B62    $62C3   LD       V2, #C3         ; Load 195 into V2
$B64    $1842   JP       $842            ; Jump to 842
$B66    $1E9F   JP       $E9F            ; Jump to E9F
$B68    $D6A8   DRW      V6, VA, #8      ; Draw 8-byte sprite at V6, VA
$B6A    $A492   LD       I, $492         ; Load 492 into I
$B6C    $FB57   UNKNOWN  FB57            ; Unknown Fxxx instruction
$B6E    $CB71   RND      VB, #71         ; VB = random & 71
$B70    $FB94   UNKNOWN  FB94            ; Unknown Fxxx instruction
$B72    $17A4   JP       $7A4            ; Jump to 7A4
$B74    $881C   UNKNOWN  881C            ; Unknown 8xxx instruction
$B76    $6F9A   LD       VF, #9A         ; Load 154 into VF
$B78    $22A9   CALL     $2A9            ; Call subroutine at 2A9
$B7A    $A839   LD       I, $839         ; Load 839 into I
$B7C    $95F5   UNKNOWN  $95F5           ; Unknown 9xxx instruction
$B7E    $0BCC   SYS      $BCC            ; System call to BCC
$B80    $91CB   UNKNOWN  $91CB           ; Unknown 9xxx instruction
$B82    $70B0   ADD      V0, #B0         ; Add 176 to V0
$B84    $2016   CALL     $016            ; Call subroutine at 016
$B86    $E6E8   UNKNOWN  $E6E8           ; Unknown Exxx instruction
$B88    $F717   UNKNOWN  F717            ; Unknown Fxxx instruction
$B8A    $58D9   UNKNOWN  $58D9           ; Unknown 5xxx instruction
$B8C    $8D6E   SHL      VD              ; VD <<= 1, VF = MSB
$B8E    $1A4B   JP       $A4B            ; Jump to A4B
$B90    $E3F5   UNKNOWN  $E3F5           ; Unknown Exxx instruction
$B92    $B803   JP       V0, $803        ; Jump to V0 + 803
$B94    $A599   LD       I, $599         ; Load 599 into I
$B96    $4219   SNE      V2, #19         ; Skip if V2 != 25
$B98    $D062   DRW      V0, V6, #2      ; Draw 2-byte sprite at V0, V6
$B9A    $87F8   UNKNOWN  87F8            ; Unknown 8xxx instruction
$B9C    $59B9   UNKNOWN  $59B9           ; Unknown 5xxx instruction
$B9E    $EC66   UNKNOWN  $EC66           ; Unknown Exxx instruction
$BA0    $110C   JP       $10C            ; Jump to 10C
$BA2    $FF7E   UNKNOWN  FF7E            ; Unknown Fxxx instruction
$BA4    $5C8C   UNKNOWN  $5C8C           ; Unknown 5xxx instruction
$BA6    $73CB   ADD      V3, #CB         ; Add 203 to V3
$BA8    $7078   ADD      V0, #78         ; Add 120 to V0
$BAA    $50F1   UNKNOWN  $50F1           ; Unknown 5xxx instruction
$BAC    $0D44   SYS      $D44            ; System call to D44
$BAE    $6ADA   LD       VA, #DA         ; Load 218 into VA
$BB0    $28AC   CALL     $8AC            ; Call subroutine at 8AC
$BB2    $D1C9   DRW      V1, VC, #9      ; Draw 9-byte sprite at V1, VC
$BB4    $9B77   UNKNOWN  $9B77           ; Unknown 9xxx instruction
$BB6    $CB14   RND      VB, #14         ; VB = random & 14
$BB8    $C791   RND      V7, #91         ; V7 = random & 91
$BBA    $8236   SHR      V2              ; V2 >>= 1, VF = LSB
$BBC    $48C7   SNE      V8, #C7         ; Skip if V8 != 199
$BBE    $2129   CALL     $129            ; Call subroutine at 129
$BC0    $1179   JP       $179            ; Jump to 179
$BC2    $4EC5   SNE      VE, #C5         ; Skip if VE != 197
$BC4    $E0C7   UNKNOWN  $E0C7           ; Unknown Exxx instruction
$BC6    $A708   LD       I, $708         ; Load 708 into I
$BC8    $0393   SYS      $393            ; System call to 393
$BCA    $6708   LD       V7, #08         ; Load 8 into V7
$BCC    $7A69   ADD      VA, #69         ; Add 105 to VA
$BCE    $A4C8   LD       I, $4C8         ; Load 4C8 into I
$BD0    $F8AF   UNKNOWN  F8AF            ; Unknown Fxxx instruction
$BD2    $1534   JP       $534            ; Jump to 534
$BD4    $6A93   LD       VA, #93         ; Load 147 into VA
$BD6    $B861   JP       V0, $861        ; Jump to V0 + 861
$BD8    $E6A8   UNKNOWN  $E6A8           ; Unknown Exxx instruction
$BDA    $057F   SYS      $57F            ; System call to 57F
$BDC    $97BF   UNKNOWN  $97BF           ; Unknown 9xxx instruction
$BDE    $5C83   UNKNOWN  $5C83           ; Unknown 5xxx instruction
$BE0    $655A   LD       V5, #5A         ; Load 90 into V5
$BE2    $64F6   LD       V4, #F6         ; Load 246 into V4
$BE4    $B213   JP       V0, $213        ; Jump to V0 + 213
$BE6    $39C9   SE       V9, #C9         ; Skip if V9 == 201
$BE8    $602C   LD       V0, #2C         ; Load 44 into V0
$BEA    $354A   SE       V5, #4A         ; Skip if V5 == 74
$BEC    $F7D4   UNKNOWN  F7D4            ; Unknown Fxxx instruction
$BEE    $962C   UNKNOWN  $962C           ; Unknown 9xxx instruction
$BF0    $6CCF   LD       VC, #CF         ; Load 207 into VC
$BF2    $88D7   SUBN     V8, VD          ; V8 = VD - V8, VF = !borrow
$BF4    $5949   UNKNOWN  $5949           ; Unknown 5xxx instruction
$BF6    $95C6   UNKNOWN  $95C6           ; Unknown 9xxx instruction
$BF8    $4D31   SNE      VD, #31         ; Skip if VD != 49
$BFA    $CF03   RND      VF, #03         ; VF = random & 03
$BFC    $543E   UNKNOWN  $543E           ; Unknown 5xxx instruction
$BFE    $0A3E   SYS      $A3E            ; System call to A3E
$C00    $F40B   UNKNOWN  F40B            ; Unknown Fxxx instruction
$C02    $44BF   SNE      V4, #BF         ; Skip if V4 != 191
$C04    $A187   LD       I, $187         ; Load 187 into I
$C06    $61C5   LD       V1, #C5         ; Load 197 into V1
$C08    $2806   CALL     $806            ; Call subroutine at 806
$C0A    $7FB1   ADD      VF, #B1         ; Add 177 to VF
$C0C    $9204   UNKNOWN  $9204           ; Unknown 9xxx instruction
$C0E    $A9AB   LD       I, $9AB         ; Load 9AB into I
$C10    $07C7   SYS      $7C7            ; System call to 7C7
$C12    $250B   CALL     $50B            ; Call subroutine at 50B
$C14    $FAF4   UNKNOWN  FAF4            ; Unknown Fxxx instruction
$C16    $1921   JP       $921            ; Jump to 921
$C18    $B2FC   JP       V0, $2FC        ; Jump to V0 + 2FC
$C1A    $0BD7   SYS      $BD7            ; System call to BD7
$C1C    $A988   LD       I, $988         ; Load 988 into I
$C1E    $1BF6   JP       $BF6            ; Jump to BF6
$C20    $DF79   DRW      VF, V7, #9      ; Draw 9-byte sprite at VF, V7
$C22    $462F   SNE      V6, #2F         ; Skip if V6 != 47
$C24    $262F   CALL     $62F            ; Call subroutine at 62F
$C26    $B67E   JP       V0, $67E        ; Jump to V0 + 67E
$C28    $F9A4   UNKNOWN  F9A4            ; Unknown Fxxx instruction
$C2A    $A39B   LD       I, $39B         ; Load 39B into I
$C2C    $FC31   UNKNOWN  FC31            ; Unknown Fxxx instruction
$C2E    $7D17   ADD      VD, #17         ; Add 23 to VD
$C30    $E316   UNKNOWN  $E316           ; Unknown Exxx instruction
$C32    $87AA   UNKNOWN  87AA            ; Unknown 8xxx instruction
$C34    $43F3   SNE      V3, #F3         ; Skip if V3 != 243
$C36    $9915   UNKNOWN  $9915           ; Unknown 9xxx instruction
$C38    $D258   DRW      V2, V5, #8      ; Draw 8-byte sprite at V2, V5
$C3A    $B4F9   JP       V0, $4F9        ; Jump to V0 + 4F9
$C3C    $267C   CALL     $67C            ; Call subroutine at 67C
$C3E    $DE3B   DRW      VE, V3, #B      ; Draw 11-byte sprite at VE, V3
$C40    $0BA3   SYS      $BA3            ; System call to BA3
$C42    $34B5   SE       V4, #B5         ; Skip if V4 == 181
$C44    $8216   SHR      V2              ; V2 >>= 1, VF = LSB
$C46    $2609   CALL     $609            ; Call subroutine at 609
$C48    $83AD   UNKNOWN  83AD            ; Unknown 8xxx instruction
$C4A    $4279   SNE      V2, #79         ; Skip if V2 != 121
$C4C    $964C   UNKNOWN  $964C           ; Unknown 9xxx instruction
$C4E    $7CA9   ADD      VC, #A9         ; Add 169 to VC
$C50    $57BF   UNKNOWN  $57BF           ; Unknown 5xxx instruction
$C52    $B33B   JP       V0, $33B        ; Jump to V0 + 33B
$C54    $E463   UNKNOWN  $E463           ; Unknown Exxx instruction
$C56    $F88A   UNKNOWN  F88A            ; Unknown Fxxx instruction
$C58    $8615   SUB      V6, V1          ; V6 -= V1, VF = !borrow
$C5A    $5B3F   UNKNOWN  $5B3F           ; Unknown 5xxx instruction
$C5C    $54D6   UNKNOWN  $54D6           ; Unknown 5xxx instruction
$C5E    $1AF5   JP       $AF5            ; Jump to AF5
$C60    $8135   SUB      V1, V3          ; V1 -= V3, VF = !borrow
$C62    $62B9   LD       V2, #B9         ; Load 185 into V2
$C64    $FBC2   UNKNOWN  FBC2            ; Unknown Fxxx instruction
$C66    $2814   CALL     $814            ; Call subroutine at 814
$C68    $C42A   RND      V4, #2A         ; V4 = random & 2A
$C6A    $1202   JP       $202            ; Jump to 202
$C6C    $7288   ADD      V2, #88         ; Add 136 to V2
$C6E    $89CD   UNKNOWN  89CD            ; Unknown 8xxx instruction
$C70    $4F6C   SNE      VF, #6C         ; Skip if VF != 108
$C72    $8FA5   SUB      VF, VA          ; VF -= VA, VF = !borrow
$C74    $7A3F   ADD      VA, #3F         ; Add 63 to VA
$C76    $D1DA   DRW      V1, VD, #A      ; Draw 10-byte sprite at V1, VD
$C78    $6DFF   LD       VD, #FF         ; Load 255 into VD
$C7A    $B99A   JP       V0, $99A        ; Jump to V0 + 99A
$C7C    $1943   JP       $943            ; Jump to 943
$C7E    $108F   JP       $08F            ; Jump to 08F
$C80    $0B79   SYS      $B79            ; System call to B79
$C82    $EDAA   UNKNOWN  $EDAA           ; Unknown Exxx instruction
$C84    $0711   SYS      $711            ; System call to 711
$C86    $88A4   ADD      V8, VA          ; V8 += VA, VF = carry
$C88    $2B51   CALL     $B51            ; Call subroutine at B51
$C8A    $75D0   ADD      V5, #D0         ; Add 208 to V5
$C8C    $7EB4   ADD      VE, #B4         ; Add 180 to VE
$C8E    $F2E0   UNKNOWN  F2E0            ; Unknown Fxxx instruction
$C90    $898E   SHL      V9              ; V9 <<= 1, VF = MSB
$C92    $FFD0   UNKNOWN  FFD0            ; Unknown Fxxx instruction
$C94    $636B   LD       V3, #6B         ; Load 107 into V3
$C96    $FCD8   UNKNOWN  FCD8            ; Unknown Fxxx instruction
$C98    $7B69   ADD      VB, #69         ; Add 105 to VB
$C9A    $005C   SYS      $05C            ; System call to 05C
$C9C    $B0F2   JP       V0, $0F2        ; Jump to V0 + 0F2
$C9E    $2AE9   CALL     $AE9            ; Call subroutine at AE9
$CA0    $AC3C   LD       I, $C3C         ; Load C3C into I
$CA2    $B13B   JP       V0, $13B        ; Jump to V0 + 13B
$CA4    $04CC   SYS      $4CC            ; System call to 4CC
$CA6    $E8E2   UNKNOWN  $E8E2           ; Unknown Exxx instruction
$CA8    $A61A   LD       I, $61A         ; Load 61A into I
$CAA    $15ED   JP       $5ED            ; Jump to 5ED
$CAC    $65B9   LD       V5, #B9         ; Load 185 into V5
$CAE    $DB08   DRW      VB, V0, #8      ; Draw 8-byte sprite at VB, V0
$CB0    $C5C5   RND      V5, #C5         ; V5 = random & C5
$CB2    $9213   UNKNOWN  $9213           ; Unknown 9xxx instruction
$CB4    $B667   JP       V0, $667        ; Jump to V0 + 667
$CB6    $C54B   RND      V5, #4B         ; V5 = random & 4B
$CB8    $5262   UNKNOWN  $5262           ; Unknown 5xxx instruction
$CBA    $1AE7   JP       $AE7            ; Jump to AE7
$CBC    $4534   SNE      V5, #34         ; Skip if V5 != 52
$CBE    $C68B   RND      V6, #8B         ; V6 = random & 8B
$CC0    $F6F3   UNKNOWN  F6F3            ; Unknown Fxxx instruction
$CC2    $C4B4   RND      V4, #B4         ; V4 = random & B4
$CC4    $8FEB   UNKNOWN  8FEB            ; Unknown 8xxx instruction
$CC6    $D3CF   DRW      V3, VC, #F      ; Draw 15-byte sprite at V3, VC
$CC8    $4D13   SNE      VD, #13         ; Skip if VD != 19
$CCA    $EE90   UNKNOWN  $EE90           ; Unknown Exxx instruction
$CCC    $1E37   JP       $E37            ; Jump to E37
$CCE    $4297   SNE      V2, #97         ; Skip if V2 != 151
$CD0    $39A2   SE       V9, #A2         ; Skip if V9 == 162
$CD2    $FE4D   UNKNOWN  FE4D            ; Unknown Fxxx instruction
$CD4    $4BDE   SNE      VB, #DE         ; Skip if VB != 222
$CD6    $3A98   SE       VA, #98         ; Skip if VA == 152
$CD8    $E159   UNKNOWN  $E159           ; Unknown Exxx instruction
$CDA    $5C32   UNKNOWN  $5C32           ; Unknown 5xxx instruction
$CDC    $2647   CALL     $647            ; Call subroutine at 647
$CDE    $5E6A   UNKNOWN  $5E6A           ; Unknown 5xxx instruction
$CE0    $E228   UNKNOWN  $E228           ; Unknown Exxx instruction
$CE2    $10B9   JP       $0B9            ; Jump to 0B9
$CE4    $545D   UNKNOWN  $545D           ; Unknown 5xxx instruction
$CE6    $9C16   UNKNOWN  $9C16           ; Unknown 9xxx instruction
$CE8    $DC69   DRW      VC, V6, #9      ; Draw 9-byte sprite at VC, V6
$CEA    $D38D   DRW      V3, V8, #D      ; Draw 13-byte sprite at V3, V8
$CEC    $11B3   JP       $1B3            ; Jump to 1B3
$CEE    $CF2F   RND      VF, #2F         ; VF = random & 2F
$CF0    $0CAF   SYS      $CAF            ; System call to CAF
$CF2    $5752   UNKNOWN  $5752           ; Unknown 5xxx instruction
$CF4    $B15C   JP       V0, $15C        ; Jump to V0 + 15C
$CF6    $F449   UNKNOWN  F449            ; Unknown Fxxx instruction
$CF8    $55CA   UNKNOWN  $55CA           ; Unknown 5xxx instruction
$CFA    $12E7   JP       $2E7            ; Jump to 2E7
$CFC    $17CD   JP       $7CD            ; Jump to 7CD
$CFE    $FBAE   UNKNOWN  FBAE            ; Unknown Fxxx instruction
$D00    $8AA7   SUBN     VA, VA          ; VA = VA - VA, VF = !borrow
$D02    $4FFF   SNE      VF, #FF         ; Skip if VF != 255
$D04    $502F   UNKNOWN  $502F           ; Unknown 5xxx instruction
$D06    $B27C   JP       V0, $27C        ; Jump to V0 + 27C
$D08    $BADF   JP       V0, $ADF        ; Jump to V0 + ADF
$D0A    $E307   UNKNOWN  $E307           ; Unknown Exxx instruction
$D0C    $FEE4   UNKNOWN  FEE4            ; Unknown Fxxx instruction
$D0E    $78F3   ADD      V8, #F3         ; Add 243 to V8
$D10    $44DE   SNE      V4, #DE         ; Skip if V4 != 222
$D12    $99FE   UNKNOWN  $99FE           ; Unknown 9xxx instruction
$D14    $2AF4   CALL     $AF4            ; Call subroutine at AF4
$D16    $FE45   UNKNOWN  FE45            ; Unknown Fxxx instruction
$D18    $0653   SYS      $653            ; System call to 653
$D1A    $511E   UNKNOWN  $511E           ; Unknown 5xxx instruction
$D1C    $3950   SE       V9, #50         ; Skip if V9 == 80
$D1E    $F16A   UNKNOWN  F16A            ; Unknown Fxxx instruction
$D20    $9ED0   SNE      VE, VD          ; Skip if VE != VD
$D22    $A8AA   LD       I, $8AA         ; Load 8AA into I
$D24    $F5D8   UNKNOWN  F5D8            ; Unknown Fxxx instruction
$D26    $6EBC   LD       VE, #BC         ; Load 188 into VE
$D28    $1320   JP       $320            ; Jump to 320
$D2A    $3393   SE       V3, #93         ; Skip if V3 == 147
$D2C    $AAFB   LD       I, $AFB         ; Load AFB into I
$D2E    $9878   UNKNOWN  $9878           ; Unknown 9xxx instruction
$D30    $B193   JP       V0, $193        ; Jump to V0 + 193
$D32    $C80E   RND      V8, #0E         ; V8 = random & 0E
$D34    $EAA6   UNKNOWN  $EAA6           ; Unknown Exxx instruction
$D36    $26DD   CALL     $6DD            ; Call subroutine at 6DD
$D38    $8527   SUBN     V5, V2          ; V5 = V2 - V5, VF = !borrow
$D3A    $8F89   UNKNOWN  8F89            ; Unknown 8xxx instruction
$D3C    $FB5C   UNKNOWN  FB5C            ; Unknown Fxxx instruction
$D3E    $3000   SE       V0, #00         ; Skip if V0 == 0
$D40    $180F   JP       $80F            ; Jump to 80F
$D42    $8D52   AND      VD, V5          ; VD &= V5
$D44    $AFD2   LD       I, $FD2         ; Load FD2 into I
$D46    $8F8A   UNKNOWN  8F8A            ; Unknown 8xxx instruction
$D48    $C48B   RND      V4, #8B         ; V4 = random & 8B
$D4A    $2237   CALL     $237            ; Call subroutine at 237
$D4C    $D5D1   DRW      V5, VD, #1      ; Draw 1-byte sprite at V5, VD
$D4E    $48F6   SNE      V8, #F6         ; Skip if V8 != 246
$D50    $3FD3   SE       VF, #D3         ; Skip if VF == 211
$D52    $AEDA   LD       I, $EDA         ; Load EDA into I
$D54    $0B85   SYS      $B85            ; System call to B85
$D56    $0DA3   SYS      $DA3            ; System call to DA3
$D58    $AED4   LD       I, $ED4         ; Load ED4 into I
$D5A    $2C7C   CALL     $C7C            ; Call subroutine at C7C
$D5C    $3C8D   SE       VC, #8D         ; Skip if VC == 141
$D5E    $653E   LD       V5, #3E         ; Load 62 into V5
$D60    $68EE   LD       V8, #EE         ; Load 238 into V8
$D62    $7D5D   ADD      VD, #5D         ; Add 93 to VD
$D64    $32DB   SE       V2, #DB         ; Skip if V2 == 219
$D66    $CCEE   RND      VC, #EE         ; VC = random & EE
$D68    $ABCC   LD       I, $BCC         ; Load BCC into I
$D6A    $A279   LD       I, $279         ; Load 279 into I
$D6C    $0402   SYS      $402            ; System call to 402
$D6E    $9477   UNKNOWN  $9477           ; Unknown 9xxx instruction
$D70    $E242   UNKNOWN  $E242           ; Unknown Exxx instruction
$D72    $3794   SE       V7, #94         ; Skip if V7 == 148
$D74    $3900   SE       V9, #00         ; Skip if V9 == 0
$D76    $7331   ADD      V3, #31         ; Add 49 to V3
$D78    $859B   UNKNOWN  859B            ; Unknown 8xxx instruction
$D7A    $4DD4   SNE      VD, #D4         ; Skip if VD != 212
$D7C    $427A   SNE      V2, #7A         ; Skip if V2 != 122
$D7E    $E110   UNKNOWN  $E110           ; Unknown Exxx instruction
$D80    $A0C1   LD       I, $0C1         ; Load 0C1 into I
$D82    $7C94   ADD      VC, #94         ; Add 148 to VC
$D84    $AFFF   LD       I, $FFF         ; Load FFF into I
$D86    $C2C0   RND      V2, #C0         ; V2 = random & C0
$D88    $7E49   ADD      VE, #49         ; Add 73 to VE
$D8A    $638E   LD       V3, #8E         ; Load 142 into V3
$D8C    $F6B5   UNKNOWN  F6B5            ; Unknown Fxxx instruction
$D8E    $FB9B   UNKNOWN  FB9B            ; Unknown Fxxx instruction
$D90    $D265   DRW      V2, V6, #5      ; Draw 5-byte sprite at V2, V6
$D92    $714D   ADD      V1, #4D         ; Add 77 to V1
$D94    $9A53   UNKNOWN  $9A53           ; Unknown 9xxx instruction
$D96    $2B5D   CALL     $B5D            ; Call subroutine at B5D
$D98    $0579   SYS      $579            ; System call to 579
$D9A    $A53C   LD       I, $53C         ; Load 53C into I
$D9C    $4DDF   SNE      VD, #DF         ; Skip if VD != 223
$D9E    $E689   UNKNOWN  $E689           ; Unknown Exxx instruction
$DA0    $6269   LD       V2, #69         ; Load 105 into V2
$DA2    $FBF3   UNKNOWN  FBF3            ; Unknown Fxxx instruction
$DA4    $DDE3   DRW      VD, VE, #3      ; Draw 3-byte sprite at VD, VE
$DA6    $7E10   ADD      VE, #10         ; Add 16 to VE
$DA8    $3517   SE       V5, #17         ; Skip if V5 == 23
$DAA    $7962   ADD      V9, #62         ; Add 98 to V9
$DAC    $5494   UNKNOWN  $5494           ; Unknown 5xxx instruction
$DAE    $858F   UNKNOWN  858F            ; Unknown 8xxx instruction
$DB0    $977F   UNKNOWN  $977F           ; Unknown 9xxx instruction
$DB2    $1A14   JP       $A14            ; Jump to A14
$DB4    $5410   SE       V4, V1          ; Skip if V4 == V1
$DB6    $B4A4   JP       V0, $4A4        ; Jump to V0 + 4A4
$DB8    $88D0   LD       V8, VD          ; V8 = VD
$DBA    $94B7   UNKNOWN  $94B7           ; Unknown 9xxx instruction
$DBC    $060F   SYS      $60F            ; System call to 60F
$DBE    $77B0   ADD      V7, #B0         ; Add 176 to V7
$DC0    $CE75   RND      VE, #75         ; VE = random & 75
$DC2    $99F2   UNKNOWN  $99F2           ; Unknown 9xxx instruction
$DC4    $D51E   DRW      V5, V1, #E      ; Draw 14-byte sprite at V5, V1
$DC6    $22E0   CALL     $2E0            ; Call subroutine at 2E0
$DC8    $C360   RND      V3, #60         ; V3 = random & 60
$DCA    $8EAD   UNKNOWN  8EAD            ; Unknown 8xxx instruction
$DCC    $6EC4   LD       VE, #C4         ; Load 196 into VE
$DCE    $3D4F   SE       VD, #4F         ; Skip if VD == 79
$DD0    $F065   LD       V0, [I]         ; Load V0-V0 from I
$DD2    $8BA5   SUB      VB, VA          ; VB -= VA, VF = !borrow
$DD4    $D96E   DRW      V9, V6, #E      ; Draw 14-byte sprite at V9, V6
$DD6    $8545   SUB      V5, V4          ; V5 -= V4, VF = !borrow
$DD8    $4E9A   SNE      VE, #9A         ; Skip if VE != 154
$DDA    $C7CF   RND      V7, #CF         ; V7 = random & CF
$DDC    $4E6E   SNE      VE, #6E         ; Skip if VE != 110
$DDE    $799E   ADD      V9, #9E         ; Add 158 to V9
$DE0    $FFC0   UNKNOWN  FFC0            ; Unknown Fxxx instruction
$DE2    $983B   UNKNOWN  $983B           ; Unknown 9xxx instruction
$DE4    $FB3D   UNKNOWN  FB3D            ; Unknown Fxxx instruction
$DE6    $175B   JP       $75B            ; Jump to 75B
$DE8    $A2A3   LD       I, $2A3         ; Load 2A3 into I
$DEA    $223B   CALL     $23B            ; Call subroutine at 23B
$DEC    $3078   SE       V0, #78         ; Skip if V0 == 120
$DEE    $3807   SE       V8, #07         ; Skip if V8 == 7
$DF0    $D303   DRW      V3, V0, #3      ; Draw 3-byte sprite at V3, V0
$DF2    $E7EB   UNKNOWN  $E7EB           ; Unknown Exxx instruction
$DF4    $A3B3   LD       I, $3B3         ; Load 3B3 into I
$DF6    $09B0   SYS      $9B0            ; System call to 9B0
$DF8    $1460   JP       $460            ; Jump to 460
$DFA    $8F99   UNKNOWN  8F99            ; Unknown 8xxx instruction
$DFC    $DBEF   DRW      VB, VE, #F      ; Draw 15-byte sprite at VB, VE
$DFE    $54AE   UNKNOWN  $54AE           ; Unknown 5xxx instruction
$E00    $2DBA   CALL     $DBA            ; Call subroutine at DBA
$E02    $B170   JP       V0, $170        ; Jump to V0 + 170
$E04    $B49C   JP       V0, $49C        ; Jump to V0 + 49C
$E06    $E59F   UNKNOWN  $E59F           ; Unknown Exxx instruction
$E08    $3F90   SE       VF, #90         ; Skip if VF == 144
$E0A    $BE00   JP       V0, $E00        ; Jump to V0 + E00
$E0C    $3F08   SE       VF, #08         ; Skip if VF == 8
$E0E    $8E82   AND      VE, V8          ; VE &= V8
$E10    $8A92   AND      VA, V9          ; VA &= V9
$E12    $64E7   LD       V4, #E7         ; Load 231 into V4
$E14    $2C5B   CALL     $C5B            ; Call subroutine at C5B
$E16    $7E1B   ADD      VE, #1B         ; Add 27 to VE
$E18    $FD73   UNKNOWN  FD73            ; Unknown Fxxx instruction
$E1A    $F15A   UNKNOWN  F15A            ; Unknown Fxxx instruction
$E1C    $D96F   DRW      V9, V6, #F      ; Draw 15-byte sprite at V9, V6
$E1E    $C160   RND      V1, #60         ; V1 = random & 60
$E20    $27DE   CALL     $7DE            ; Call subroutine at 7DE
$E22    $14D5   JP       $4D5            ; Jump to 4D5
$E24    $5A27   UNKNOWN  $5A27           ; Unknown 5xxx instruction
$E26    $C3EE   RND      V3, #EE         ; V3 = random & EE
$E28    $10B5   JP       $0B5            ; Jump to 0B5
$E2A    $5268   UNKNOWN  $5268           ; Unknown 5xxx instruction
$E2C    $AEA7   LD       I, $EA7         ; Load EA7 into I
$E2E    $511F   UNKNOWN  $511F           ; Unknown 5xxx instruction
$E30    $2859   CALL     $859            ; Call subroutine at 859
$E32    $C4A7   RND      V4, #A7         ; V4 = random & A7
$E34    $A06F   LD       I, $06F         ; Load 06F into I
$E36    $E606   UNKNOWN  $E606           ; Unknown Exxx instruction
$E38    $2E10   CALL     $E10            ; Call subroutine at E10
$E3A    $4EF6   SNE      VE, #F6         ; Skip if VE != 246
$E3C    $5D3D   UNKNOWN  $5D3D           ; Unknown 5xxx instruction
$E3E    $507B   UNKNOWN  $507B           ; Unknown 5xxx instruction
$E40    $3C7B   SE       VC, #7B         ; Skip if VC == 123
$E42    $33A0   SE       V3, #A0         ; Skip if V3 == 160
$E44    $1FD8   JP       $FD8            ; Jump to FD8
$E46    $2EC9   CALL     $EC9            ; Call subroutine at EC9
$E48    $0FE1   SYS      $FE1            ; System call to FE1
$E4A    $077D   SYS      $77D            ; System call to 77D
$E4C    $8906   SHR      V9              ; V9 >>= 1, VF = LSB
$E4E    $A977   LD       I, $977         ; Load 977 into I
$E50    $1191   JP       $191            ; Jump to 191
$E52    $319B   SE       V1, #9B         ; Skip if V1 == 155
$E54    $2CBB   CALL     $CBB            ; Call subroutine at CBB
$E56    $114E   JP       $14E            ; Jump to 14E
$E58    $DDE4   DRW      VD, VE, #4      ; Draw 4-byte sprite at VD, VE
$E5A    $781F   ADD      V8, #1F         ; Add 31 to V8
$E5C    $D169   DRW      V1, V6, #9      ; Draw 9-byte sprite at V1, V6
$E5E    $4193   SNE      V1, #93         ; Skip if V1 != 147
$E60    $234D   CALL     $34D            ; Call subroutine at 34D
$E62    $33D5   SE       V3, #D5         ; Skip if V3 == 213
$E64    $3F5A   SE       VF, #5A         ; Skip if VF == 90
$E66    $1863   JP       $863            ; Jump to 863
$E68    $626C   LD       V2, #6C         ; Load 108 into V2
$E6A    $FB99   UNKNOWN  FB99            ; Unknown Fxxx instruction
$E6C    $2DB4   CALL     $DB4            ; Call subroutine at DB4
$E6E    $5994   UNKNOWN  $5994           ; Unknown 5xxx instruction
$E70    $427D   SNE      V2, #7D         ; Skip if V2 != 125
$E72    $016A   SYS      $16A            ; System call to 16A
$E74    $1830   JP       $830            ; Jump to 830
$E76    $68F4   LD       V8, #F4         ; Load 244 into V8
$E78    $2D2D   CALL     $D2D            ; Call subroutine at D2D
$E7A    $1F8B   JP       $F8B            ; Jump to F8B
$E7C    $158E   JP       $58E            ; Jump to 58E
$E7E    $D8F0   DRW      V8, VF, #0      ; Draw 0-byte sprite at V8, VF
$E80    $05B4   SYS      $5B4            ; System call to 5B4
$E82    $D1C9   DRW      V1, VC, #9      ; Draw 9-byte sprite at V1, VC
$E84    $C64C   RND      V6, #4C         ; V6 = random & 4C
$E86    $64B2   LD       V4, #B2         ; Load 178 into V4
$E88    $B129   JP       V0, $129        ; Jump to V0 + 129
$E8A    $72C4   ADD      V2, #C4         ; Add 196 to V2
$E8C    $92D0   SNE      V2, VD          ; Skip if V2 != VD
$E8E    $EFAC   UNKNOWN  $EFAC           ; Unknown Exxx instruction
$E90    $AB0B   LD       I, $B0B         ; Load B0B into I
$E92    $94F4   UNKNOWN  $94F4           ; Unknown 9xxx instruction
$E94    $5509   UNKNOWN  $5509           ; Unknown 5xxx instruction
$E96    $2DB9   CALL     $DB9            ; Call subroutine at DB9
$E98    $2352   CALL     $352            ; Call subroutine at 352
$E9A    $C72A   RND      V7, #2A         ; V7 = random & 2A
$E9C    $3D68   SE       VD, #68         ; Skip if VD == 104
$E9E    $E877   UNKNOWN  $E877           ; Unknown Exxx instruction
$EA0    $61B0   LD       V1, #B0         ; Load 176 into V1
$EA2    $4175   SNE      V1, #75         ; Skip if V1 != 117
$EA4    $DD86   DRW      VD, V8, #6      ; Draw 6-byte sprite at VD, V8
$EA6    $A06C   LD       I, $06C         ; Load 06C into I
$EA8    $9457   UNKNOWN  $9457           ; Unknown 9xxx instruction
$EAA    $2E9A   CALL     $E9A            ; Call subroutine at E9A
$EAC    $8037   SUBN     V0, V3          ; V0 = V3 - V0, VF = !borrow
$EAE    $F79E   UNKNOWN  F79E            ; Unknown Fxxx instruction
$EB0    $B577   JP       V0, $577        ; Jump to V0 + 577
$EB2    $1AD0   JP       $AD0            ; Jump to AD0
$EB4    $63B3   LD       V3, #B3         ; Load 179 into V3
$EB6    $3FB5   SE       VF, #B5         ; Skip if VF == 181
$EB8    $D192   DRW      V1, V9, #2      ; Draw 2-byte sprite at V1, V9
$EBA    $83A5   SUB      V3, VA          ; V3 -= VA, VF = !borrow
$EBC    $F702   UNKNOWN  F702            ; Unknown Fxxx instruction
$EBE    $900D   UNKNOWN  $900D           ; Unknown 9xxx instruction
$EC0    $4A46   SNE      VA, #46         ; Skip if VA != 70
$EC2    $37B8   SE       V7, #B8         ; Skip if V7 == 184
$EC4    $A1F0   LD       I, $1F0         ; Load 1F0 into I
$EC6    $1CA5   JP       $CA5            ; Jump to CA5
$EC8    $05A0   SYS      $5A0            ; System call to 5A0
$ECA    $C5F9   RND      V5, #F9         ; V5 = random & F9
$ECC    $65CC   LD       V5, #CC         ; Load 204 into V5
$ECE    $8C08   UNKNOWN  8C08            ; Unknown 8xxx instruction
$ED0    $152A   JP       $52A            ; Jump to 52A
$ED2    $A4A7   LD       I, $4A7         ; Load 4A7 into I
$ED4    $4BCC   SNE      VB, #CC         ; Skip if VB != 204
$ED6    $FAE4   UNKNOWN  FAE4            ; Unknown Fxxx instruction
$ED8    $F868   UNKNOWN  F868            ; Unknown Fxxx instruction
$EDA    $31B6   SE       V1, #B6         ; Skip if V1 == 182
$EDC    $8F9B   UNKNOWN  8F9B            ; Unknown 8xxx instruction
$EDE    $D067   DRW      V0, V6, #7      ; Draw 7-byte sprite at V0, V6
$EE0    $E2E0   UNKNOWN  $E2E0           ; Unknown Exxx instruction
$EE2    $6DA8   LD       VD, #A8         ; Load 168 into VD
$EE4    $B19C   JP       V0, $19C        ; Jump to V0 + 19C
$EE6    $F2F4   UNKNOWN  F2F4            ; Unknown Fxxx instruction
$EE8    $1E3A   JP       $E3A            ; Jump to E3A
$EEA    $0674   SYS      $674            ; System call to 674
$EEC    $927A   UNKNOWN  $927A           ; Unknown 9xxx instruction
$EEE    $FD9B   UNKNOWN  FD9B            ; Unknown Fxxx instruction
$EF0    $01A5   SYS      $1A5            ; System call to 1A5
$EF2    $CC37   RND      VC, #37         ; VC = random & 37
$EF4    $959E   UNKNOWN  $959E           ; Unknown 9xxx instruction
$EF6    $0500   SYS      $500            ; System call to 500
$EF8    $4943   SNE      V9, #43         ; Skip if V9 != 67
$EFA    $34E6   SE       V4, #E6         ; Skip if V4 == 230
$EFC    $CD09   RND      VD, #09         ; VD = random & 09
$EFE    $0A89   SYS      $A89            ; System call to A89
$F00    $F485   UNKNOWN  F485            ; Unknown Fxxx instruction
$F02    $FCC2   UNKNOWN  FCC2            ; Unknown Fxxx instruction
$F04    $E9A4   UNKNOWN  $E9A4           ; Unknown Exxx instruction
$F06    $802F   UNKNOWN  802F            ; Unknown 8xxx instruction
$F08    $DB08   DRW      VB, V0, #8      ; Draw 8-byte sprite at VB, V0
$F0A    $1A41   JP       $A41            ; Jump to A41
$F0C    $28DD   CALL     $8DD            ; Call subroutine at 8DD
$F0E    $B772   JP       V0, $772        ; Jump to V0 + 772
$F10    $0571   SYS      $571            ; System call to 571
$F12    $47F5   SNE      V7, #F5         ; Skip if V7 != 245
$F14    $D731   DRW      V7, V3, #1      ; Draw 1-byte sprite at V7, V3
$F16    $2106   CALL     $106            ; Call subroutine at 106
$F18    $30B1   SE       V0, #B1         ; Skip if V0 == 177
$F1A    $AB7F   LD       I, $B7F         ; Load B7F into I
$F1C    $D3F6   DRW      V3, VF, #6      ; Draw 6-byte sprite at V3, VF
$F1E    $E3C7   UNKNOWN  $E3C7           ; Unknown Exxx instruction
$F20    $541B   UNKNOWN  $541B           ; Unknown 5xxx instruction
$F22    $B953   JP       V0, $953        ; Jump to V0 + 953
$F24    $1BC1   JP       $BC1            ; Jump to BC1
$F26    $A374   LD       I, $374         ; Load 374 into I
$F28    $9C54   UNKNOWN  $9C54           ; Unknown 9xxx instruction
$F2A    $1B78   JP       $B78            ; Jump to B78
$F2C    $270B   CALL     $70B            ; Call subroutine at 70B
$F2E    $AD6F   LD       I, $D6F         ; Load D6F into I
$F30    $B427   JP       V0, $427        ; Jump to V0 + 427
$F32    $9D40   SNE      VD, V4          ; Skip if VD != V4
$F34    $86A6   SHR      V6              ; V6 >>= 1, VF = LSB
$F36    $41C9   SNE      V1, #C9         ; Skip if V1 != 201
$F38    $98DE   UNKNOWN  $98DE           ; Unknown 9xxx instruction
$F3A    $7808   ADD      V8, #08         ; Add 8 to V8
$F3C    $A550   LD       I, $550         ; Load 550 into I
$F3E    $8AE9   UNKNOWN  8AE9            ; Unknown 8xxx instruction
$F40    $C8B0   RND      V8, #B0         ; V8 = random & B0
$F42    $DBFA   DRW      VB, VF, #A      ; Draw 10-byte sprite at VB, VF
$F44    $16A1   JP       $6A1            ; Jump to 6A1
$F46    $304E   SE       V0, #4E         ; Skip if V0 == 78
$F48    $EF07   UNKNOWN  $EF07           ; Unknown Exxx instruction
$F4A    $D47D   DRW      V4, V7, #D      ; Draw 13-byte sprite at V4, V7
$F4C    $F080   UNKNOWN  F080            ; Unknown Fxxx instruction
$F4E    $7918   ADD      V9, #18         ; Add 24 to V9
$F50    $EF2E   UNKNOWN  $EF2E           ; Unknown Exxx instruction
$F52    $1F23   JP       $F23            ; Jump to F23
$F54    $3855   SE       V8, #55         ; Skip if V8 == 85
$F56    $D058   DRW      V0, V5, #8      ; Draw 8-byte sprite at V0, V5
$F58    $3136   SE       V1, #36         ; Skip if V1 == 54
$F5A    $3CFF   SE       VC, #FF         ; Skip if VC == 255
$F5C    $6807   LD       V8, #07         ; Load 7 into V8
$F5E    $31C3   SE       V1, #C3         ; Skip if V1 == 195
$F60    $1CD2   JP       $CD2            ; Jump to CD2
$F62    $3D74   SE       VD, #74         ; Skip if VD == 116
$F64    $2B7D   CALL     $B7D            ; Call subroutine at B7D
$F66    $1639   JP       $639            ; Jump to 639
$F68    $5D56   UNKNOWN  $5D56           ; Unknown 5xxx instruction
$F6A    $A9D4   LD       I, $9D4         ; Load 9D4 into I
$F6C    $59B9   UNKNOWN  $59B9           ; Unknown 5xxx instruction
$F6E    $F87E   UNKNOWN  F87E            ; Unknown Fxxx instruction
$F70    $4F89   SNE      VF, #89         ; Skip if VF != 137
$F72    $4C5F   SNE      VC, #5F         ; Skip if VC != 95
$F74    $3925   SE       V9, #25         ; Skip if V9 == 37
$F76    $F633   LD       B, V6           ; Store BCD of V6 at I, I+1, I+2
$F78    $5A86   UNKNOWN  $5A86           ; Unknown 5xxx instruction
$F7A    $6241   LD       V2, #41         ; Load 65 into V2
$F7C    $EF8C   UNKNOWN  $EF8C           ; Unknown Exxx instruction
$F7E    $5D8E   UNKNOWN  $5D8E           ; Unknown 5xxx instruction
$F80    $A163   LD       I, $163         ; Load 163 into I
$F82    $744D   ADD      V4, #4D         ; Add 77 to V4
$F84    $3AE3   SE       VA, #E3         ; Skip if VA == 227
$F86    $E8F7   UNKNOWN  $E8F7           ; Unknown Exxx instruction
$F88    $6EAF   LD       VE, #AF         ; Load 175 into VE
$F8A    $C92A   RND      V9, #2A         ; V9 = random & 2A
$F8C    $9C60   SNE      VC, V6          ; Skip if VC != V6
$F8E    $214B   CALL     $14B            ; Call subroutine at 14B
$F90    $710C   ADD      V1, #0C         ; Add 12 to V1
$F92    $0249   SYS      $249            ; System call to 249
$F94    $4FEE   SNE      VF, #EE         ; Skip if VF != 238
$F96    $C145   RND      V1, #45         ; V1 = random & 45
$F98    $FFF9   UNKNOWN  FFF9            ; Unknown Fxxx instruction
$F9A    $0AB2   SYS      $AB2            ; System call to AB2
$F9C    $A38B   LD       I, $38B         ; Load 38B into I
$F9E    $7BB2   ADD      VB, #B2         ; Add 178 to VB
$FA0    $2EB5   CALL     $EB5            ; Call subroutine at EB5
$FA2    $8941   OR       V9, V4          ; V9 |= V4
$FA4    $C69F   RND      V6, #9F         ; V6 = random & 9F
$FA6    $3F0A   SE       VF, #0A         ; Skip if VF == 10
$FA8    $CE0C   RND      VE, #0C         ; VE = random & 0C
$FAA    $CBBB   RND      VB, #BB         ; VB = random & BB
$FAC    $C26A   RND      V2, #6A         ; V2 = random & 6A
$FAE    $9E92   UNKNOWN  $9E92           ; Unknown 9xxx instruction
$FB0    $1DC0   JP       $DC0            ; Jump to DC0
$FB2    $9658   UNKNOWN  $9658           ; Unknown 9xxx instruction
$FB4    $50D3   UNKNOWN  $50D3           ; Unknown 5xxx instruction
$FB6    $5E13   UNKNOWN  $5E13           ; Unknown 5xxx instruction
$FB8    $2EA4   CALL     $EA4            ; Call subroutine at EA4
$FBA    $6F45   LD       VF, #45         ; Load 69 into VF
$FBC    $875C   UNKNOWN  875C            ; Unknown 8xxx instruction
$FBE    $A52C   LD       I, $52C         ; Load 52C into I
$FC0    $BE8F   JP       V0, $E8F        ; Jump to V0 + E8F
$FC2    $ECD0   UNKNOWN  $ECD0           ; Unknown Exxx instruction
$FC4    $D08E   DRW      V0, V8, #E      ; Draw 14-byte sprite at V0, V8
$FC6    $2BF7   CALL     $BF7            ; Call subroutine at BF7
$FC8    $A90B   LD       I, $90B         ; Load 90B into I
$FCA    $5301   UNKNOWN  $5301           ; Unknown 5xxx instruction
$FCC    $CF5E   RND      VF, #5E         ; VF = random & 5E
$FCE    $4538   SNE      V5, #38         ; Skip if V5 != 56
$FD0    $808F   UNKNOWN  808F            ; Unknown 8xxx instruction
$FD2    $37AA   SE       V7, #AA         ; Skip if V7 == 170
$FD4    $5090   SE       V0, V9          ; Skip if V0 == V9
$FD6    $2E3D   CALL     $E3D            ; Call subroutine at E3D
$FD8    $7DA0   ADD      VD, #A0         ; Add 160 to VD
$FDA    $1B71   JP       $B71            ; Jump to B71
$FDC    $6F27   LD       VF, #27         ; Load 39 into VF
$FDE    $DB03   DRW      VB, V0, #3      ; Draw 3-byte sprite at VB, V0
$FE0    $A5B5   LD       I, $5B5         ; Load 5B5 into I
$FE2    $98E0   SNE      V8, VE          ; Skip if V8 != VE
$FE4    $8075   SUB      V0, V7          ; V0 -= V7, VF = !borrow
$FE6    $E852   UNKNOWN  $E852           ; Unknown Exxx instruction
$FE8    $5A10   SE       VA, V1          ; Skip if VA == V1
$FEA    $FA24   UNKNOWN  FA24            ; Unknown Fxxx instruction
$FEC    $FF4D   UNKNOWN  FF4D            ; Unknown Fxxx instruction
$FEE    $2526   CALL     $526            ; Call subroutine at 526
$FF0    $917C   UNKNOWN  $917C           ; Unknown 9xxx instruction
$FF2    $E367   UNKNOWN  $E367           ; Unknown Exxx instruction
$FF4    $78CF   ADD      V8, #CF         ; Add 207 to V8
$FF6    $1963   JP       $963            ; Jump to 963
$FF8    $65E2   LD       V5, #E2         ; Load 226 into V5
$FFA    $641A   LD       V4, #1A         ; Load 26 into V4
$FFC    $0F24   SYS      $F24            ; System call to F24
$FFE    $AF16   LD       I, $F16         ; Load F16 into I

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 437 (24.4%)
  LD      : 248 (13.8%)
  JP      : 233 (13.0%)
  SNE     : 126 ( 7.0%)
  CALL    : 126 ( 7.0%)
  SE      : 119 ( 6.6%)
  RND     : 116 ( 6.5%)
  ADD     : 112 ( 6.2%)
  SYS     : 111 ( 6.2%)
  DRW     : 102 ( 5.7%)
  SUB     :  14 ( 0.8%)
  AND     :  12 ( 0.7%)
  OR      :  11 ( 0.6%)
  XOR     :   7 ( 0.4%)
  SHR     :   6 ( 0.3%)
  SHL     :   6 ( 0.3%)
  SUBN    :   6 ( 0.3%)

Memory Operations: 360 (20.1%)
Arithmetic Operations: 162 (9.0%)
