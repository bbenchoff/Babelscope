
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B4637D01_I27034_C17891_3aa7f197ed8c.ch8
ROM Size: 3584 bytes
Instructions Found: 1791

DISCOVERY INFORMATION:
Batch: 4637
Instance: 27034
Direction: descending
Final Array: [248, 248, 248, 248, 248, 248, 248, 66]
Operations: R:0 W:7 C:5640 S:2

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 117
Sort Array References:
  $204: LD I, $82D ; Load 82D into I
  $230: LD I, $E51 ; Load E51 into I
  $236: LD I, $BFB ; Load BFB into I
  $25C: LD I, $6CA ; Load 6CA into I
  $26E: LD I, $B7D ; Load B7D into I
  $286: LD I, $532 ; Load 532 into I
  $28C: LD I, $517 ; Load 517 into I
  $324: LD I, $45B ; Load 45B into I
  $344: LD I, $48F ; Load 48F into I
  $34C: LD I, $9C1 ; Load 9C1 into I
  $34E: LD I, $DA5 ; Load DA5 into I
  $378: LD I, $8F1 ; Load 8F1 into I
  $3A4: LD I, $E98 ; Load E98 into I
  $3AA: LD I, $149 ; Load 149 into I
  $3D8: LD I, $5C8 ; Load 5C8 into I
  $42A: LD I, $F2B ; Load F2B into I
  $434: LD I, $735 ; Load 735 into I
  $440: LD I, $203 ; Load 203 into I
  $44C: LD I, $43D ; Load 43D into I
  $450: LD I, $88D ; Load 88D into I
  $454: LD I, $0DE ; Load 0DE into I
  $456: LD I, $140 ; Load 140 into I
  $472: LD I, $85E ; Load 85E into I
  $47E: LD I, $9F1 ; Load 9F1 into I
  $48E: LD I, $08A ; Load 08A into I
  $4B4: LD I, $FA1 ; Load FA1 into I
  $540: LD I, $781 ; Load 781 into I
  $578: LD I, $90A ; Load 90A into I
  $598: LD I, $A2B ; Load A2B into I
  $5B0: LD I, $B89 ; Load B89 into I
  $5F0: LD I, $BFF ; Load BFF into I
  $5F4: LD I, $891 ; Load 891 into I
  $5FE: LD I, $0B8 ; Load 0B8 into I
  $604: LD I, $B91 ; Load B91 into I
  $668: LD I, $598 ; Load 598 into I
  $678: LD I, $503 ; Load 503 into I
  $694: LD I, $0A7 ; Load 0A7 into I
  $6EA: LD I, $E8B ; Load E8B into I
  $6EC: LD I, $6FA ; Load 6FA into I
  $6F0: LD I, $A6D ; Load A6D into I
  $72A: LD I, $739 ; Load 739 into I
  $72E: LD I, $223 ; Load 223 into I
  $730: LD I, $0C1 ; Load 0C1 into I
  $764: LD I, $514 ; Load 514 into I
  $7B4: LD I, $C3C ; Load C3C into I
  $7B8: LD I, $5DC ; Load 5DC into I
  $7BC: LD I, $29A ; Load 29A into I
  $7DC: LD I, $BC7 ; Load BC7 into I
  $7F4: LD I, $B56 ; Load B56 into I
  $7F8: LD I, $E65 ; Load E65 into I
  $804: LD I, $474 ; Load 474 into I
  $84C: LD I, $EFB ; Load EFB into I
  $850: LD I, $4E8 ; Load 4E8 into I
  $86E: LD I, $488 ; Load 488 into I
  $882: LD I, $FA4 ; Load FA4 into I
  $8A4: LD I, $935 ; Load 935 into I
  $8A6: LD I, $742 ; Load 742 into I
  $8CA: LD I, $26F ; Load 26F into I
  $8D8: LD I, $44E ; Load 44E into I
  $8E4: LD I, $D52 ; Load D52 into I
  $8EE: LD I, $C8D ; Load C8D into I
  $8F2: LD I, $9A4 ; Load 9A4 into I
  $91C: LD I, $EA8 ; Load EA8 into I
  $95A: LD I, $A1C ; Load A1C into I
  $992: LD I, $735 ; Load 735 into I
  $99E: LD I, $E60 ; Load E60 into I
  $A00: LD I, $35B ; Load 35B into I
  $A04: LD I, $29E ; Load 29E into I
  $A3A: LD I, $3E9 ; Load 3E9 into I
  $A62: LD I, $9E6 ; Load 9E6 into I
  $A68: LD I, $B1B ; Load B1B into I
  $ABC: LD I, $195 ; Load 195 into I
  $ACA: LD I, $D12 ; Load D12 into I
  $AD4: LD I, $D2C ; Load D2C into I
  $AE2: LD I, $4F7 ; Load 4F7 into I
  $B0C: LD I, $DEA ; Load DEA into I
  $B0E: LD I, $2DB ; Load 2DB into I
  $B64: LD I, $D3E ; Load D3E into I
  $B70: LD V1, [I] ; Load V0-V1 from I
  $B9A: LD I, $F6D ; Load F6D into I
  $BAE: LD I, $C55 ; Load C55 into I
  $BCA: LD I, $D32 ; Load D32 into I
  $BEA: LD I, $E4F ; Load E4F into I
  $BEC: LD I, $7D4 ; Load 7D4 into I
  $BFC: LD I, $2AF ; Load 2AF into I
  $C08: LD I, $CF8 ; Load CF8 into I
  $C0A: LD I, $E16 ; Load E16 into I
  $C10: LD I, $498 ; Load 498 into I
  $C12: LD I, $B6E ; Load B6E into I
  $C7E: LD I, $103 ; Load 103 into I
  $C80: LD I, $18E ; Load 18E into I
  $C94: LD I, $825 ; Load 825 into I
  $CE6: LD I, $3DE ; Load 3DE into I
  $D08: LD I, $65E ; Load 65E into I
  $D10: LD I, $434 ; Load 434 into I
  $D16: LD I, $1C3 ; Load 1C3 into I
  $D1E: LD I, $21F ; Load 21F into I
  $D6E: LD I, $4DC ; Load 4DC into I
  $D9A: LD I, $0B4 ; Load 0B4 into I
  $DD6: LD I, $6AD ; Load 6AD into I
  $DEC: LD I, $8E5 ; Load 8E5 into I
  $E38: LD I, $CD0 ; Load CD0 into I
  $E4A: LD I, $A86 ; Load A86 into I
  $E66: LD I, $082 ; Load 082 into I
  $EBC: LD I, $767 ; Load 767 into I
  $EC6: LD I, $6CE ; Load 6CE into I
  $ECA: LD I, $5B1 ; Load 5B1 into I
  $ECC: LD I, $45D ; Load 45D into I
  $EF0: LD I, $1BE ; Load 1BE into I
  $F1C: LD I, $AAB ; Load AAB into I
  $F20: LD I, $86D ; Load 86D into I
  $F3E: LD I, $544 ; Load 544 into I
  $F6E: LD I, $8D3 ; Load 8D3 into I
  $F70: LD I, $FDE ; Load FDE into I
  $F96: LD I, $29A ; Load 29A into I
  $FD4: LD I, $E02 ; Load E02 into I
  $FF8: LD I, $960 ; Load 960 into I

CONTROL FLOW ANALYSIS:
Jumps: 222
Calls: 120
Branches: 232
Loops: 129
Loop Structures:
  $310 -> $300 (backward jump)
  $346 -> $1B8 (backward jump)
  $370 -> $13B (backward jump)
  $386 -> $1E1 (backward jump)
  $38E -> $366 (backward jump)
  $3EC -> $35F (backward jump)
  $446 -> $20B (backward jump)
  $48C -> $023 (backward jump)
  $4EE -> $459 (backward jump)
  $53E -> $349 (backward jump)
  $558 -> $3AC (backward jump)
  $5BC -> $433 (backward jump)
  $5DE -> $41A (backward jump)
  $5E0 -> $501 (backward jump)
  $5F6 -> $5B6 (backward jump)
  $606 -> $4F7 (backward jump)
  $640 -> $59D (backward jump)
  $682 -> $38E (backward jump)
  $68A -> $505 (backward jump)
  $696 -> $1A6 (backward jump)
  $6C8 -> $06B (backward jump)
  $6CA -> $1AC (backward jump)
  $6E4 -> $6CF (backward jump)
  $736 -> $229 (backward jump)
  $74C -> $12D (backward jump)
  $766 -> $03A (backward jump)
  $784 -> $2E8 (backward jump)
  $794 -> $2D2 (backward jump)
  $796 -> $75E (backward jump)
  $7D0 -> $32B (backward jump)
  $7FA -> $775 (backward jump)
  $82C -> $255 (backward jump)
  $834 -> $023 (backward jump)
  $884 -> $504 (backward jump)
  $88E -> $594 (backward jump)
  $8B0 -> $0D5 (backward jump)
  $8CE -> $844 (backward jump)
  $8D6 -> $0B0 (backward jump)
  $8DA -> $1C3 (backward jump)
  $8E0 -> $350 (backward jump)
  $900 -> $47A (backward jump)
  $91A -> $41E (backward jump)
  $928 -> $815 (backward jump)
  $970 -> $144 (backward jump)
  $972 -> $17E (backward jump)
  $97C -> $0CD (backward jump)
  $97E -> $2D9 (backward jump)
  $998 -> $271 (backward jump)
  $9A2 -> $647 (backward jump)
  $9AA -> $631 (backward jump)
  $9D0 -> $43B (backward jump)
  $9EA -> $940 (backward jump)
  $9F6 -> $3C1 (backward jump)
  $9FE -> $03F (backward jump)
  $A10 -> $5A5 (backward jump)
  $A28 -> $119 (backward jump)
  $A2C -> $38E (backward jump)
  $A64 -> $1ED (backward jump)
  $A8C -> $7A0 (backward jump)
  $ADC -> $328 (backward jump)
  $B02 -> $A9D (backward jump)
  $B1A -> $528 (backward jump)
  $B20 -> $979 (backward jump)
  $B40 -> $8CC (backward jump)
  $B44 -> $6EF (backward jump)
  $B58 -> $9E7 (backward jump)
  $B5C -> $AE8 (backward jump)
  $B66 -> $557 (backward jump)
  $B6E -> $668 (backward jump)
  $B76 -> $748 (backward jump)
  $BB2 -> $80F (backward jump)
  $BFA -> $293 (backward jump)
  $C02 -> $10B (backward jump)
  $C04 -> $4E9 (backward jump)
  $C1E -> $5B2 (backward jump)
  $C2A -> $023 (backward jump)
  $C42 -> $706 (backward jump)
  $C5C -> $C4C (backward jump)
  $C76 -> $A6A (backward jump)
  $C9E -> $582 (backward jump)
  $CAA -> $2A8 (backward jump)
  $CB0 -> $070 (backward jump)
  $CC2 -> $985 (backward jump)
  $CD4 -> $2B9 (backward jump)
  $CD6 -> $CCE (backward jump)
  $CE2 -> $2AC (backward jump)
  $CEA -> $7FF (backward jump)
  $CF8 -> $935 (backward jump)
  $D00 -> $68B (backward jump)
  $D04 -> $B39 (backward jump)
  $D0C -> $17A (backward jump)
  $D1A -> $4B1 (backward jump)
  $D22 -> $17C (backward jump)
  $D24 -> $950 (backward jump)
  $D2A -> $927 (backward jump)
  $D44 -> $AC0 (backward jump)
  $D5E -> $24F (backward jump)
  $D60 -> $2AE (backward jump)
  $D82 -> $291 (backward jump)
  $D8A -> $ACE (backward jump)
  $DAA -> $C72 (backward jump)
  $DBE -> $687 (backward jump)
  $DC6 -> $676 (backward jump)
  $DE2 -> $28B (backward jump)
  $E0A -> $486 (backward jump)
  $E42 -> $5E2 (backward jump)
  $E68 -> $2E2 (backward jump)
  $E6A -> $443 (backward jump)
  $E80 -> $B8E (backward jump)
  $EA6 -> $6CD (backward jump)
  $EB0 -> $20D (backward jump)
  $EB8 -> $3EA (backward jump)
  $EC2 -> $B99 (backward jump)
  $EE0 -> $9D4 (backward jump)
  $EE2 -> $481 (backward jump)
  $EF6 -> $7BD (backward jump)
  $F0E -> $7CE (backward jump)
  $F28 -> $385 (backward jump)
  $F36 -> $DE9 (backward jump)
  $F38 -> $449 (backward jump)
  $F4E -> $3B4 (backward jump)
  $F58 -> $6A8 (backward jump)
  $F62 -> $148 (backward jump)
  $FBA -> $80A (backward jump)
  $FC8 -> $873 (backward jump)
  $FD6 -> $212 (backward jump)
  $FEA -> $AFE (backward jump)
  $FFC -> $003 (backward jump)
  $FFE -> $11A (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $5558   UNKNOWN  $5558           ; Unknown 5xxx instruction
$202    $8181   OR       V1, V8          ; V1 |= V8
$204    $A82D   LD       I, $82D         ; Load 82D into I
$206    $2E1C   CALL     $E1C            ; Call subroutine at E1C
$208    $076F   SYS      $76F            ; System call to 76F
$20A    $B8C3   JP       V0, $8C3        ; Jump to V0 + 8C3
$20C    $8FD2   AND      VF, VD          ; VF &= VD
$20E    $03CE   SYS      $3CE            ; System call to 3CE
$210    $8782   AND      V7, V8          ; V7 &= V8
$212    $364D   SE       V6, #4D         ; Skip if V6 == 77
$214    $8A07   SUBN     VA, V0          ; VA = V0 - VA, VF = !borrow
$216    $DEA2   DRW      VE, VA, #2      ; Draw 2-byte sprite at VE, VA
$218    $1367   JP       $367            ; Jump to 367
$21A    $C855   RND      V8, #55         ; V8 = random & 55
$21C    $04BB   SYS      $4BB            ; System call to 4BB
$21E    $0A1B   SYS      $A1B            ; System call to A1B
$220    $BB8E   JP       V0, $B8E        ; Jump to V0 + B8E
$222    $B731   JP       V0, $731        ; Jump to V0 + 731
$224    $08ED   SYS      $8ED            ; System call to 8ED
$226    $C0F9   RND      V0, #F9         ; V0 = random & F9
$228    $614D   LD       V1, #4D         ; Load 77 into V1
$22A    $0433   SYS      $433            ; System call to 433
$22C    $592B   UNKNOWN  $592B           ; Unknown 5xxx instruction
$22E    $2BF4   CALL     $BF4            ; Call subroutine at BF4
$230    $AE51   LD       I, $E51         ; Load E51 into I
$232    $E254   UNKNOWN  $E254           ; Unknown Exxx instruction
$234    $9F12   UNKNOWN  $9F12           ; Unknown 9xxx instruction
$236    $ABFB   LD       I, $BFB         ; Load BFB into I
$238    $8C6A   UNKNOWN  8C6A            ; Unknown 8xxx instruction
$23A    $4660   SNE      V6, #60         ; Skip if V6 != 96
$23C    $1254   JP       $254            ; Jump to 254
$23E    $0647   SYS      $647            ; System call to 647
$240    $6AAD   LD       VA, #AD         ; Load 173 into VA
$242    $5613   UNKNOWN  $5613           ; Unknown 5xxx instruction
$244    $3560   SE       V5, #60         ; Skip if V5 == 96
$246    $D9B7   DRW      V9, VB, #7      ; Draw 7-byte sprite at V9, VB
$248    $4E54   SNE      VE, #54         ; Skip if VE != 84
$24A    $6CAE   LD       VC, #AE         ; Load 174 into VC
$24C    $8231   OR       V2, V3          ; V2 |= V3
$24E    $35AF   SE       V5, #AF         ; Skip if V5 == 175
$250    $4AA2   SNE      VA, #A2         ; Skip if VA != 162
$252    $7E13   ADD      VE, #13         ; Add 19 to VE
$254    $4201   SNE      V2, #01         ; Skip if V2 != 1
$256    $24CA   CALL     $4CA            ; Call subroutine at 4CA
$258    $683E   LD       V8, #3E         ; Load 62 into V8
$25A    $59DC   UNKNOWN  $59DC           ; Unknown 5xxx instruction
$25C    $A6CA   LD       I, $6CA         ; Load 6CA into I
$25E    $E0B5   UNKNOWN  $E0B5           ; Unknown Exxx instruction
$260    $6B43   LD       VB, #43         ; Load 67 into VB
$262    $2AFF   CALL     $AFF            ; Call subroutine at AFF
$264    $218C   CALL     $18C            ; Call subroutine at 18C
$266    $74AD   ADD      V4, #AD         ; Add 173 to V4
$268    $55D1   UNKNOWN  $55D1           ; Unknown 5xxx instruction
$26A    $30E3   SE       V0, #E3         ; Skip if V0 == 227
$26C    $0CA6   SYS      $CA6            ; System call to CA6
$26E    $AB7D   LD       I, $B7D         ; Load B7D into I
$270    $E449   UNKNOWN  $E449           ; Unknown Exxx instruction
$272    $C851   RND      V8, #51         ; V8 = random & 51
$274    $748C   ADD      V4, #8C         ; Add 140 to V4
$276    $88D4   ADD      V8, VD          ; V8 += VD, VF = carry
$278    $4EE7   SNE      VE, #E7         ; Skip if VE != 231
$27A    $26EF   CALL     $6EF            ; Call subroutine at 6EF
$27C    $0212   SYS      $212            ; System call to 212
$27E    $87A0   LD       V7, VA          ; V7 = VA
$280    $CD59   RND      VD, #59         ; VD = random & 59
$282    $00CE   SYS      $0CE            ; System call to 0CE
$284    $9C91   UNKNOWN  $9C91           ; Unknown 9xxx instruction
$286    $A532   LD       I, $532         ; Load 532 into I
$288    $5604   UNKNOWN  $5604           ; Unknown 5xxx instruction
$28A    $4079   SNE      V0, #79         ; Skip if V0 != 121
$28C    $A517   LD       I, $517         ; Load 517 into I
$28E    $87C3   XOR      V7, VC          ; V7 ^= VC
$290    $91F7   UNKNOWN  $91F7           ; Unknown 9xxx instruction
$292    $2B04   CALL     $B04            ; Call subroutine at B04
$294    $4C73   SNE      VC, #73         ; Skip if VC != 115
$296    $1F50   JP       $F50            ; Jump to F50
$298    $1316   JP       $316            ; Jump to 316
$29A    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$29C    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$29E    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2A0    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2A2    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2A4    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2A6    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2A8    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2AA    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2AC    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2AE    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2B0    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2B2    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2B4    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2B6    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2B8    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2BA    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2BC    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2BE    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2C0    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2C2    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2C4    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2C6    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2C8    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2CA    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2CC    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2CE    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2D0    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2D2    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2D4    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2D6    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2D8    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2DA    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2DC    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2DE    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2E0    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2E2    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2E4    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2E6    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2E8    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2EA    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2EC    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2EE    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2F0    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2F2    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2F4    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2F6    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2F8    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2FA    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2FC    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$2FE    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$300    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$302    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$304    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$306    $F842   UNKNOWN  F842            ; Unknown Fxxx instruction
$308    $4DC8   SNE      VD, #C8         ; Skip if VD != 200
$30A    $F446   UNKNOWN  F446            ; Unknown Fxxx instruction
$30C    $64BE   LD       V4, #BE         ; Load 190 into V4
$30E    $8916   SHR      V9              ; V9 >>= 1, VF = LSB
$310    $1300   JP       $300            ; Jump to 300
$312    $DA7F   DRW      VA, V7, #F      ; Draw 15-byte sprite at VA, V7
$314    $08B1   SYS      $8B1            ; System call to 8B1
$316    $35A6   SE       V5, #A6         ; Skip if V5 == 166
$318    $CBAC   RND      VB, #AC         ; VB = random & AC
$31A    $8078   UNKNOWN  8078            ; Unknown 8xxx instruction
$31C    $FAF5   UNKNOWN  FAF5            ; Unknown Fxxx instruction
$31E    $DE3A   DRW      VE, V3, #A      ; Draw 10-byte sprite at VE, V3
$320    $B922   JP       V0, $922        ; Jump to V0 + 922
$322    $F5B4   UNKNOWN  F5B4            ; Unknown Fxxx instruction
$324    $A45B   LD       I, $45B         ; Load 45B into I
$326    $CC0A   RND      VC, #0A         ; VC = random & 0A
$328    $05A2   SYS      $5A2            ; System call to 5A2
$32A    $FEAF   UNKNOWN  FEAF            ; Unknown Fxxx instruction
$32C    $329A   SE       V2, #9A         ; Skip if V2 == 154
$32E    $C789   RND      V7, #89         ; V7 = random & 89
$330    $6703   LD       V7, #03         ; Load 3 into V7
$332    $69BA   LD       V9, #BA         ; Load 186 into V9
$334    $0219   SYS      $219            ; System call to 219
$336    $8347   SUBN     V3, V4          ; V3 = V4 - V3, VF = !borrow
$338    $E9F3   UNKNOWN  $E9F3           ; Unknown Exxx instruction
$33A    $78EC   ADD      V8, #EC         ; Add 236 to V8
$33C    $9E61   UNKNOWN  $9E61           ; Unknown 9xxx instruction
$33E    $F843   UNKNOWN  F843            ; Unknown Fxxx instruction
$340    $B587   JP       V0, $587        ; Jump to V0 + 587
$342    $F3EF   UNKNOWN  F3EF            ; Unknown Fxxx instruction
$344    $A48F   LD       I, $48F         ; Load 48F into I
$346    $B1B8   JP       V0, $1B8        ; Jump to V0 + 1B8
$348    $92D9   UNKNOWN  $92D9           ; Unknown 9xxx instruction
$34A    $E100   UNKNOWN  $E100           ; Unknown Exxx instruction
$34C    $A9C1   LD       I, $9C1         ; Load 9C1 into I
$34E    $ADA5   LD       I, $DA5         ; Load DA5 into I
$350    $6DDC   LD       VD, #DC         ; Load 220 into VD
$352    $3D1F   SE       VD, #1F         ; Skip if VD == 31
$354    $B55C   JP       V0, $55C        ; Jump to V0 + 55C
$356    $BEB6   JP       V0, $EB6        ; Jump to V0 + EB6
$358    $C88E   RND      V8, #8E         ; V8 = random & 8E
$35A    $B6CD   JP       V0, $6CD        ; Jump to V0 + 6CD
$35C    $958B   UNKNOWN  $958B           ; Unknown 9xxx instruction
$35E    $1DD4   JP       $DD4            ; Jump to DD4
$360    $0DEC   SYS      $DEC            ; System call to DEC
$362    $4F86   SNE      VF, #86         ; Skip if VF != 134
$364    $BC94   JP       V0, $C94        ; Jump to V0 + C94
$366    $7088   ADD      V0, #88         ; Add 136 to V0
$368    $C917   RND      V9, #17         ; V9 = random & 17
$36A    $31C6   SE       V1, #C6         ; Skip if V1 == 198
$36C    $E5BB   UNKNOWN  $E5BB           ; Unknown Exxx instruction
$36E    $24BC   CALL     $4BC            ; Call subroutine at 4BC
$370    $113B   JP       $13B            ; Jump to 13B
$372    $412E   SNE      V1, #2E         ; Skip if V1 != 46
$374    $FDD8   UNKNOWN  FDD8            ; Unknown Fxxx instruction
$376    $5877   UNKNOWN  $5877           ; Unknown 5xxx instruction
$378    $A8F1   LD       I, $8F1         ; Load 8F1 into I
$37A    $182E   JP       $82E            ; Jump to 82E
$37C    $8554   ADD      V5, V5          ; V5 += V5, VF = carry
$37E    $F803   UNKNOWN  F803            ; Unknown Fxxx instruction
$380    $D0F0   DRW      V0, VF, #0      ; Draw 0-byte sprite at V0, VF
$382    $24FD   CALL     $4FD            ; Call subroutine at 4FD
$384    $DBEE   DRW      VB, VE, #E      ; Draw 14-byte sprite at VB, VE
$386    $11E1   JP       $1E1            ; Jump to 1E1
$388    $704D   ADD      V0, #4D         ; Add 77 to V0
$38A    $0ABD   SYS      $ABD            ; System call to ABD
$38C    $36AB   SE       V6, #AB         ; Skip if V6 == 171
$38E    $1366   JP       $366            ; Jump to 366
$390    $9C45   UNKNOWN  $9C45           ; Unknown 9xxx instruction
$392    $BF3A   JP       V0, $F3A        ; Jump to V0 + F3A
$394    $C29D   RND      V2, #9D         ; V2 = random & 9D
$396    $93DB   UNKNOWN  $93DB           ; Unknown 9xxx instruction
$398    $603C   LD       V0, #3C         ; Load 60 into V0
$39A    $3E04   SE       VE, #04         ; Skip if VE == 4
$39C    $9AA4   UNKNOWN  $9AA4           ; Unknown 9xxx instruction
$39E    $6AA2   LD       VA, #A2         ; Load 162 into VA
$3A0    $08BF   SYS      $8BF            ; System call to 8BF
$3A2    $6830   LD       V8, #30         ; Load 48 into V8
$3A4    $AE98   LD       I, $E98         ; Load E98 into I
$3A6    $5790   SE       V7, V9          ; Skip if V7 == V9
$3A8    $E5F7   UNKNOWN  $E5F7           ; Unknown Exxx instruction
$3AA    $A149   LD       I, $149         ; Load 149 into I
$3AC    $CE03   RND      VE, #03         ; VE = random & 03
$3AE    $DDF2   DRW      VD, VF, #2      ; Draw 2-byte sprite at VD, VF
$3B0    $57E4   UNKNOWN  $57E4           ; Unknown 5xxx instruction
$3B2    $877B   UNKNOWN  877B            ; Unknown 8xxx instruction
$3B4    $6F28   LD       VF, #28         ; Load 40 into VF
$3B6    $B466   JP       V0, $466        ; Jump to V0 + 466
$3B8    $2C9C   CALL     $C9C            ; Call subroutine at C9C
$3BA    $7A7B   ADD      VA, #7B         ; Add 123 to VA
$3BC    $CE16   RND      VE, #16         ; VE = random & 16
$3BE    $E3D9   UNKNOWN  $E3D9           ; Unknown Exxx instruction
$3C0    $88BA   UNKNOWN  88BA            ; Unknown 8xxx instruction
$3C2    $6144   LD       V1, #44         ; Load 68 into V1
$3C4    $2266   CALL     $266            ; Call subroutine at 266
$3C6    $94A3   UNKNOWN  $94A3           ; Unknown 9xxx instruction
$3C8    $53B4   UNKNOWN  $53B4           ; Unknown 5xxx instruction
$3CA    $CADE   RND      VA, #DE         ; VA = random & DE
$3CC    $365B   SE       V6, #5B         ; Skip if V6 == 91
$3CE    $F8F9   UNKNOWN  F8F9            ; Unknown Fxxx instruction
$3D0    $5ED1   UNKNOWN  $5ED1           ; Unknown 5xxx instruction
$3D2    $DF85   DRW      VF, V8, #5      ; Draw 5-byte sprite at VF, V8
$3D4    $7B87   ADD      VB, #87         ; Add 135 to VB
$3D6    $3A65   SE       VA, #65         ; Skip if VA == 101
$3D8    $A5C8   LD       I, $5C8         ; Load 5C8 into I
$3DA    $3DD6   SE       VD, #D6         ; Skip if VD == 214
$3DC    $C211   RND      V2, #11         ; V2 = random & 11
$3DE    $47E5   SNE      V7, #E5         ; Skip if V7 != 229
$3E0    $0F5B   SYS      $F5B            ; System call to F5B
$3E2    $F9E0   UNKNOWN  F9E0            ; Unknown Fxxx instruction
$3E4    $6DA6   LD       VD, #A6         ; Load 166 into VD
$3E6    $EFE2   UNKNOWN  $EFE2           ; Unknown Exxx instruction
$3E8    $88F6   SHR      V8              ; V8 >>= 1, VF = LSB
$3EA    $1B73   JP       $B73            ; Jump to B73
$3EC    $135F   JP       $35F            ; Jump to 35F
$3EE    $3A22   SE       VA, #22         ; Skip if VA == 34
$3F0    $B48D   JP       V0, $48D        ; Jump to V0 + 48D
$3F2    $9AAC   UNKNOWN  $9AAC           ; Unknown 9xxx instruction
$3F4    $230B   CALL     $30B            ; Call subroutine at 30B
$3F6    $7378   ADD      V3, #78         ; Add 120 to V3
$3F8    $F049   UNKNOWN  F049            ; Unknown Fxxx instruction
$3FA    $90BF   UNKNOWN  $90BF           ; Unknown 9xxx instruction
$3FC    $DB4E   DRW      VB, V4, #E      ; Draw 14-byte sprite at VB, V4
$3FE    $5B6B   UNKNOWN  $5B6B           ; Unknown 5xxx instruction
$400    $73A9   ADD      V3, #A9         ; Add 169 to V3
$402    $C8DD   RND      V8, #DD         ; V8 = random & DD
$404    $D2D7   DRW      V2, VD, #7      ; Draw 7-byte sprite at V2, VD
$406    $F945   UNKNOWN  F945            ; Unknown Fxxx instruction
$408    $C7A4   RND      V7, #A4         ; V7 = random & A4
$40A    $34DC   SE       V4, #DC         ; Skip if V4 == 220
$40C    $6F07   LD       VF, #07         ; Load 7 into VF
$40E    $3911   SE       V9, #11         ; Skip if V9 == 17
$410    $0593   SYS      $593            ; System call to 593
$412    $497A   SNE      V9, #7A         ; Skip if V9 != 122
$414    $6865   LD       V8, #65         ; Load 101 into V8
$416    $6CC8   LD       VC, #C8         ; Load 200 into VC
$418    $21BE   CALL     $1BE            ; Call subroutine at 1BE
$41A    $C82B   RND      V8, #2B         ; V8 = random & 2B
$41C    $6BD0   LD       VB, #D0         ; Load 208 into VB
$41E    $D053   DRW      V0, V5, #3      ; Draw 3-byte sprite at V0, V5
$420    $7101   ADD      V1, #01         ; Add 1 to V1
$422    $78B3   ADD      V8, #B3         ; Add 179 to V8
$424    $94A1   UNKNOWN  $94A1           ; Unknown 9xxx instruction
$426    $DAD5   DRW      VA, VD, #5      ; Draw 5-byte sprite at VA, VD
$428    $DE5E   DRW      VE, V5, #E      ; Draw 14-byte sprite at VE, V5
$42A    $AF2B   LD       I, $F2B         ; Load F2B into I
$42C    $E915   UNKNOWN  $E915           ; Unknown Exxx instruction
$42E    $D098   DRW      V0, V9, #8      ; Draw 8-byte sprite at V0, V9
$430    $5DBA   UNKNOWN  $5DBA           ; Unknown 5xxx instruction
$432    $391B   SE       V9, #1B         ; Skip if V9 == 27
$434    $A735   LD       I, $735         ; Load 735 into I
$436    $7DCB   ADD      VD, #CB         ; Add 203 to VD
$438    $0A1F   SYS      $A1F            ; System call to A1F
$43A    $2A62   CALL     $A62            ; Call subroutine at A62
$43C    $3BFA   SE       VB, #FA         ; Skip if VB == 250
$43E    $0928   SYS      $928            ; System call to 928
$440    $A203   LD       I, $203         ; Load 203 into I
$442    $EE6C   UNKNOWN  $EE6C           ; Unknown Exxx instruction
$444    $893D   UNKNOWN  893D            ; Unknown 8xxx instruction
$446    $120B   JP       $20B            ; Jump to 20B
$448    $4C36   SNE      VC, #36         ; Skip if VC != 54
$44A    $EAEB   UNKNOWN  $EAEB           ; Unknown Exxx instruction
$44C    $A43D   LD       I, $43D         ; Load 43D into I
$44E    $689E   LD       V8, #9E         ; Load 158 into V8
$450    $A88D   LD       I, $88D         ; Load 88D into I
$452    $50E5   UNKNOWN  $50E5           ; Unknown 5xxx instruction
$454    $A0DE   LD       I, $0DE         ; Load 0DE into I
$456    $A140   LD       I, $140         ; Load 140 into I
$458    $56B8   UNKNOWN  $56B8           ; Unknown 5xxx instruction
$45A    $89AF   UNKNOWN  89AF            ; Unknown 8xxx instruction
$45C    $021C   SYS      $21C            ; System call to 21C
$45E    $1BD1   JP       $BD1            ; Jump to BD1
$460    $C040   RND      V0, #40         ; V0 = random & 40
$462    $F983   UNKNOWN  F983            ; Unknown Fxxx instruction
$464    $8AFB   UNKNOWN  8AFB            ; Unknown 8xxx instruction
$466    $B9C9   JP       V0, $9C9        ; Jump to V0 + 9C9
$468    $3390   SE       V3, #90         ; Skip if V3 == 144
$46A    $9B96   UNKNOWN  $9B96           ; Unknown 9xxx instruction
$46C    $68B7   LD       V8, #B7         ; Load 183 into V8
$46E    $E686   UNKNOWN  $E686           ; Unknown Exxx instruction
$470    $3D7A   SE       VD, #7A         ; Skip if VD == 122
$472    $A85E   LD       I, $85E         ; Load 85E into I
$474    $08C6   SYS      $8C6            ; System call to 8C6
$476    $CD86   RND      VD, #86         ; VD = random & 86
$478    $54D3   UNKNOWN  $54D3           ; Unknown 5xxx instruction
$47A    $F901   UNKNOWN  F901            ; Unknown Fxxx instruction
$47C    $5A9B   UNKNOWN  $5A9B           ; Unknown 5xxx instruction
$47E    $A9F1   LD       I, $9F1         ; Load 9F1 into I
$480    $D28C   DRW      V2, V8, #C      ; Draw 12-byte sprite at V2, V8
$482    $F6FF   UNKNOWN  F6FF            ; Unknown Fxxx instruction
$484    $2F2B   CALL     $F2B            ; Call subroutine at F2B
$486    $1AC5   JP       $AC5            ; Jump to AC5
$488    $C743   RND      V7, #43         ; V7 = random & 43
$48A    $698F   LD       V9, #8F         ; Load 143 into V9
$48C    $1023   JP       $023            ; Jump to 023
$48E    $A08A   LD       I, $08A         ; Load 08A into I
$490    $87EC   UNKNOWN  87EC            ; Unknown 8xxx instruction
$492    $F681   UNKNOWN  F681            ; Unknown Fxxx instruction
$494    $6C12   LD       VC, #12         ; Load 18 into VC
$496    $554D   UNKNOWN  $554D           ; Unknown 5xxx instruction
$498    $D532   DRW      V5, V3, #2      ; Draw 2-byte sprite at V5, V3
$49A    $9FEE   UNKNOWN  $9FEE           ; Unknown 9xxx instruction
$49C    $82F5   SUB      V2, VF          ; V2 -= VF, VF = !borrow
$49E    $5AE2   UNKNOWN  $5AE2           ; Unknown 5xxx instruction
$4A0    $87B9   UNKNOWN  87B9            ; Unknown 8xxx instruction
$4A2    $799E   ADD      V9, #9E         ; Add 158 to V9
$4A4    $8383   XOR      V3, V8          ; V3 ^= V8
$4A6    $20E5   CALL     $0E5            ; Call subroutine at 0E5
$4A8    $31F3   SE       V1, #F3         ; Skip if V1 == 243
$4AA    $E971   UNKNOWN  $E971           ; Unknown Exxx instruction
$4AC    $87AB   UNKNOWN  87AB            ; Unknown 8xxx instruction
$4AE    $79D4   ADD      V9, #D4         ; Add 212 to V9
$4B0    $9F29   UNKNOWN  $9F29           ; Unknown 9xxx instruction
$4B2    $BE8B   JP       V0, $E8B        ; Jump to V0 + E8B
$4B4    $AFA1   LD       I, $FA1         ; Load FA1 into I
$4B6    $26EB   CALL     $6EB            ; Call subroutine at 6EB
$4B8    $FFF0   UNKNOWN  FFF0            ; Unknown Fxxx instruction
$4BA    $792F   ADD      V9, #2F         ; Add 47 to V9
$4BC    $2E09   CALL     $E09            ; Call subroutine at E09
$4BE    $6BE0   LD       VB, #E0         ; Load 224 into VB
$4C0    $4725   SNE      V7, #25         ; Skip if V7 != 37
$4C2    $FF8A   UNKNOWN  FF8A            ; Unknown Fxxx instruction
$4C4    $E8DE   UNKNOWN  $E8DE           ; Unknown Exxx instruction
$4C6    $CFB5   RND      VF, #B5         ; VF = random & B5
$4C8    $F8E4   UNKNOWN  F8E4            ; Unknown Fxxx instruction
$4CA    $0D8A   SYS      $D8A            ; System call to D8A
$4CC    $64CF   LD       V4, #CF         ; Load 207 into V4
$4CE    $0315   SYS      $315            ; System call to 315
$4D0    $D896   DRW      V8, V9, #6      ; Draw 6-byte sprite at V8, V9
$4D2    $8BF6   SHR      VB              ; VB >>= 1, VF = LSB
$4D4    $526A   UNKNOWN  $526A           ; Unknown 5xxx instruction
$4D6    $47E3   SNE      V7, #E3         ; Skip if V7 != 227
$4D8    $EC88   UNKNOWN  $EC88           ; Unknown Exxx instruction
$4DA    $3E86   SE       VE, #86         ; Skip if VE == 134
$4DC    $20E2   CALL     $0E2            ; Call subroutine at 0E2
$4DE    $5493   UNKNOWN  $5493           ; Unknown 5xxx instruction
$4E0    $BAFF   JP       V0, $AFF        ; Jump to V0 + AFF
$4E2    $9163   UNKNOWN  $9163           ; Unknown 9xxx instruction
$4E4    $74B0   ADD      V4, #B0         ; Add 176 to V4
$4E6    $5019   UNKNOWN  $5019           ; Unknown 5xxx instruction
$4E8    $DADC   DRW      VA, VD, #C      ; Draw 12-byte sprite at VA, VD
$4EA    $CD99   RND      VD, #99         ; VD = random & 99
$4EC    $C3CA   RND      V3, #CA         ; V3 = random & CA
$4EE    $1459   JP       $459            ; Jump to 459
$4F0    $992C   UNKNOWN  $992C           ; Unknown 9xxx instruction
$4F2    $6954   LD       V9, #54         ; Load 84 into V9
$4F4    $1DD4   JP       $DD4            ; Jump to DD4
$4F6    $372F   SE       V7, #2F         ; Skip if V7 == 47
$4F8    $5503   UNKNOWN  $5503           ; Unknown 5xxx instruction
$4FA    $6733   LD       V7, #33         ; Load 51 into V7
$4FC    $BFB4   JP       V0, $FB4        ; Jump to V0 + FB4
$4FE    $6CFE   LD       VC, #FE         ; Load 254 into VC
$500    $BE3A   JP       V0, $E3A        ; Jump to V0 + E3A
$502    $7C70   ADD      VC, #70         ; Add 112 to VC
$504    $FF02   UNKNOWN  FF02            ; Unknown Fxxx instruction
$506    $E43D   UNKNOWN  $E43D           ; Unknown Exxx instruction
$508    $B74E   JP       V0, $74E        ; Jump to V0 + 74E
$50A    $6903   LD       V9, #03         ; Load 3 into V9
$50C    $5611   UNKNOWN  $5611           ; Unknown 5xxx instruction
$50E    $8D43   XOR      VD, V4          ; VD ^= V4
$510    $C930   RND      V9, #30         ; V9 = random & 30
$512    $6840   LD       V8, #40         ; Load 64 into V8
$514    $0A21   SYS      $A21            ; System call to A21
$516    $D15F   DRW      V1, V5, #F      ; Draw 15-byte sprite at V1, V5
$518    $D248   DRW      V2, V4, #8      ; Draw 8-byte sprite at V2, V4
$51A    $078F   SYS      $78F            ; System call to 78F
$51C    $56D3   UNKNOWN  $56D3           ; Unknown 5xxx instruction
$51E    $04AC   SYS      $4AC            ; System call to 4AC
$520    $8F6E   SHL      VF              ; VF <<= 1, VF = MSB
$522    $8228   UNKNOWN  8228            ; Unknown 8xxx instruction
$524    $6B5F   LD       VB, #5F         ; Load 95 into VB
$526    $89FD   UNKNOWN  89FD            ; Unknown 8xxx instruction
$528    $6576   LD       V5, #76         ; Load 118 into V5
$52A    $8DAA   UNKNOWN  8DAA            ; Unknown 8xxx instruction
$52C    $6B9A   LD       VB, #9A         ; Load 154 into VB
$52E    $91BE   UNKNOWN  $91BE           ; Unknown 9xxx instruction
$530    $5D1B   UNKNOWN  $5D1B           ; Unknown 5xxx instruction
$532    $852A   UNKNOWN  852A            ; Unknown 8xxx instruction
$534    $0916   SYS      $916            ; System call to 916
$536    $7888   ADD      V8, #88         ; Add 136 to V8
$538    $4672   SNE      V6, #72         ; Skip if V6 != 114
$53A    $5032   UNKNOWN  $5032           ; Unknown 5xxx instruction
$53C    $607A   LD       V0, #7A         ; Load 122 into V0
$53E    $B349   JP       V0, $349        ; Jump to V0 + 349
$540    $A781   LD       I, $781         ; Load 781 into I
$542    $0F48   SYS      $F48            ; System call to F48
$544    $4EB5   SNE      VE, #B5         ; Skip if VE != 181
$546    $3C03   SE       VC, #03         ; Skip if VC == 3
$548    $735B   ADD      V3, #5B         ; Add 91 to V3
$54A    $3961   SE       V9, #61         ; Skip if V9 == 97
$54C    $23D3   CALL     $3D3            ; Call subroutine at 3D3
$54E    $473D   SNE      V7, #3D         ; Skip if V7 != 61
$550    $396A   SE       V9, #6A         ; Skip if V9 == 106
$552    $F009   UNKNOWN  F009            ; Unknown Fxxx instruction
$554    $CE22   RND      VE, #22         ; VE = random & 22
$556    $DE7E   DRW      VE, V7, #E      ; Draw 14-byte sprite at VE, V7
$558    $13AC   JP       $3AC            ; Jump to 3AC
$55A    $0C14   SYS      $C14            ; System call to C14
$55C    $60EF   LD       V0, #EF         ; Load 239 into V0
$55E    $C885   RND      V8, #85         ; V8 = random & 85
$560    $1719   JP       $719            ; Jump to 719
$562    $F693   UNKNOWN  F693            ; Unknown Fxxx instruction
$564    $5554   UNKNOWN  $5554           ; Unknown 5xxx instruction
$566    $36D9   SE       V6, #D9         ; Skip if V6 == 217
$568    $157F   JP       $57F            ; Jump to 57F
$56A    $31E2   SE       V1, #E2         ; Skip if V1 == 226
$56C    $FE0F   UNKNOWN  FE0F            ; Unknown Fxxx instruction
$56E    $518B   UNKNOWN  $518B           ; Unknown 5xxx instruction
$570    $29B9   CALL     $9B9            ; Call subroutine at 9B9
$572    $7D3D   ADD      VD, #3D         ; Add 61 to VD
$574    $0CD2   SYS      $CD2            ; System call to CD2
$576    $7321   ADD      V3, #21         ; Add 33 to V3
$578    $A90A   LD       I, $90A         ; Load 90A into I
$57A    $00BD   SYS      $0BD            ; System call to 0BD
$57C    $6A13   LD       VA, #13         ; Load 19 into VA
$57E    $E0E6   UNKNOWN  $E0E6           ; Unknown Exxx instruction
$580    $DA45   DRW      VA, V4, #5      ; Draw 5-byte sprite at VA, V4
$582    $3A3E   SE       VA, #3E         ; Skip if VA == 62
$584    $48C1   SNE      V8, #C1         ; Skip if V8 != 193
$586    $D946   DRW      V9, V4, #6      ; Draw 6-byte sprite at V9, V4
$588    $477A   SNE      V7, #7A         ; Skip if V7 != 122
$58A    $9CCA   UNKNOWN  $9CCA           ; Unknown 9xxx instruction
$58C    $EB59   UNKNOWN  $EB59           ; Unknown Exxx instruction
$58E    $3230   SE       V2, #30         ; Skip if V2 == 48
$590    $B6CB   JP       V0, $6CB        ; Jump to V0 + 6CB
$592    $04E8   SYS      $4E8            ; System call to 4E8
$594    $D502   DRW      V5, V0, #2      ; Draw 2-byte sprite at V5, V0
$596    $2150   CALL     $150            ; Call subroutine at 150
$598    $AA2B   LD       I, $A2B         ; Load A2B into I
$59A    $EF60   UNKNOWN  $EF60           ; Unknown Exxx instruction
$59C    $473E   SNE      V7, #3E         ; Skip if V7 != 62
$59E    $7D31   ADD      VD, #31         ; Add 49 to VD
$5A0    $965E   UNKNOWN  $965E           ; Unknown 9xxx instruction
$5A2    $64AE   LD       V4, #AE         ; Load 174 into V4
$5A4    $20BF   CALL     $0BF            ; Call subroutine at 0BF
$5A6    $0360   SYS      $360            ; System call to 360
$5A8    $6D71   LD       VD, #71         ; Load 113 into VD
$5AA    $C9AB   RND      V9, #AB         ; V9 = random & AB
$5AC    $F801   UNKNOWN  F801            ; Unknown Fxxx instruction
$5AE    $C690   RND      V6, #90         ; V6 = random & 90
$5B0    $AB89   LD       I, $B89         ; Load B89 into I
$5B2    $7548   ADD      V5, #48         ; Add 72 to V5
$5B4    $5F34   UNKNOWN  $5F34           ; Unknown 5xxx instruction
$5B6    $1BB3   JP       $BB3            ; Jump to BB3
$5B8    $045A   SYS      $45A            ; System call to 45A
$5BA    $99FC   UNKNOWN  $99FC           ; Unknown 9xxx instruction
$5BC    $B433   JP       V0, $433        ; Jump to V0 + 433
$5BE    $7B5D   ADD      VB, #5D         ; Add 93 to VB
$5C0    $53BF   UNKNOWN  $53BF           ; Unknown 5xxx instruction
$5C2    $3CCE   SE       VC, #CE         ; Skip if VC == 206
$5C4    $FF47   UNKNOWN  FF47            ; Unknown Fxxx instruction
$5C6    $9525   UNKNOWN  $9525           ; Unknown 9xxx instruction
$5C8    $6180   LD       V1, #80         ; Load 128 into V1
$5CA    $54A1   UNKNOWN  $54A1           ; Unknown 5xxx instruction
$5CC    $0E03   SYS      $E03            ; System call to E03
$5CE    $5742   UNKNOWN  $5742           ; Unknown 5xxx instruction
$5D0    $28F3   CALL     $8F3            ; Call subroutine at 8F3
$5D2    $D380   DRW      V3, V8, #0      ; Draw 0-byte sprite at V3, V8
$5D4    $E9BD   UNKNOWN  $E9BD           ; Unknown Exxx instruction
$5D6    $4410   SNE      V4, #10         ; Skip if V4 != 16
$5D8    $B8D7   JP       V0, $8D7        ; Jump to V0 + 8D7
$5DA    $4640   SNE      V6, #40         ; Skip if V6 != 64
$5DC    $9C39   UNKNOWN  $9C39           ; Unknown 9xxx instruction
$5DE    $B41A   JP       V0, $41A        ; Jump to V0 + 41A
$5E0    $B501   JP       V0, $501        ; Jump to V0 + 501
$5E2    $23CD   CALL     $3CD            ; Call subroutine at 3CD
$5E4    $61FE   LD       V1, #FE         ; Load 254 into V1
$5E6    $0017   SYS      $017            ; System call to 017
$5E8    $4F3E   SNE      VF, #3E         ; Skip if VF != 62
$5EA    $3975   SE       V9, #75         ; Skip if V9 == 117
$5EC    $1DD3   JP       $DD3            ; Jump to DD3
$5EE    $1BB5   JP       $BB5            ; Jump to BB5
$5F0    $ABFF   LD       I, $BFF         ; Load BFF into I
$5F2    $0C9E   SYS      $C9E            ; System call to C9E
$5F4    $A891   LD       I, $891         ; Load 891 into I
$5F6    $15B6   JP       $5B6            ; Jump to 5B6
$5F8    $0F5B   SYS      $F5B            ; System call to F5B
$5FA    $406C   SNE      V0, #6C         ; Skip if V0 != 108
$5FC    $CF77   RND      VF, #77         ; VF = random & 77
$5FE    $A0B8   LD       I, $0B8         ; Load 0B8 into I
$600    $3A12   SE       VA, #12         ; Skip if VA == 18
$602    $45AD   SNE      V5, #AD         ; Skip if V5 != 173
$604    $AB91   LD       I, $B91         ; Load B91 into I
$606    $B4F7   JP       V0, $4F7        ; Jump to V0 + 4F7
$608    $C48B   RND      V4, #8B         ; V4 = random & 8B
$60A    $1A71   JP       $A71            ; Jump to A71
$60C    $4191   SNE      V1, #91         ; Skip if V1 != 145
$60E    $CD82   RND      VD, #82         ; VD = random & 82
$610    $36A4   SE       V6, #A4         ; Skip if V6 == 164
$612    $01CD   SYS      $1CD            ; System call to 1CD
$614    $C05A   RND      V0, #5A         ; V0 = random & 5A
$616    $620C   LD       V2, #0C         ; Load 12 into V2
$618    $60A7   LD       V0, #A7         ; Load 167 into V0
$61A    $23FD   CALL     $3FD            ; Call subroutine at 3FD
$61C    $0F80   SYS      $F80            ; System call to F80
$61E    $4905   SNE      V9, #05         ; Skip if V9 != 5
$620    $5B2F   UNKNOWN  $5B2F           ; Unknown 5xxx instruction
$622    $8BF4   ADD      VB, VF          ; VB += VF, VF = carry
$624    $C824   RND      V8, #24         ; V8 = random & 24
$626    $63D4   LD       V3, #D4         ; Load 212 into V3
$628    $CB98   RND      VB, #98         ; VB = random & 98
$62A    $3894   SE       V8, #94         ; Skip if V8 == 148
$62C    $7494   ADD      V4, #94         ; Add 148 to V4
$62E    $EADE   UNKNOWN  $EADE           ; Unknown Exxx instruction
$630    $837F   UNKNOWN  837F            ; Unknown 8xxx instruction
$632    $6A4E   LD       VA, #4E         ; Load 78 into VA
$634    $59BA   UNKNOWN  $59BA           ; Unknown 5xxx instruction
$636    $929E   UNKNOWN  $929E           ; Unknown 9xxx instruction
$638    $4A25   SNE      VA, #25         ; Skip if VA != 37
$63A    $25B6   CALL     $5B6            ; Call subroutine at 5B6
$63C    $DE85   DRW      VE, V8, #5      ; Draw 5-byte sprite at VE, V8
$63E    $5870   SE       V8, V7          ; Skip if V8 == V7
$640    $159D   JP       $59D            ; Jump to 59D
$642    $E0A1   SKNP     V0              ; Skip if key V0 not pressed
$644    $F70A   LD       V7, K           ; Wait for key press, store in V7
$646    $3F18   SE       VF, #18         ; Skip if VF == 24
$648    $6DB3   LD       VD, #B3         ; Load 179 into VD
$64A    $BACF   JP       V0, $ACF        ; Jump to V0 + ACF
$64C    $C1C5   RND      V1, #C5         ; V1 = random & C5
$64E    $E978   UNKNOWN  $E978           ; Unknown Exxx instruction
$650    $726C   ADD      V2, #6C         ; Add 108 to V2
$652    $9E18   UNKNOWN  $9E18           ; Unknown 9xxx instruction
$654    $914B   UNKNOWN  $914B           ; Unknown 9xxx instruction
$656    $EC56   UNKNOWN  $EC56           ; Unknown Exxx instruction
$658    $322A   SE       V2, #2A         ; Skip if V2 == 42
$65A    $B905   JP       V0, $905        ; Jump to V0 + 905
$65C    $B8FF   JP       V0, $8FF        ; Jump to V0 + 8FF
$65E    $317E   SE       V1, #7E         ; Skip if V1 == 126
$660    $4B54   SNE      VB, #54         ; Skip if VB != 84
$662    $4AC9   SNE      VA, #C9         ; Skip if VA != 201
$664    $9A95   UNKNOWN  $9A95           ; Unknown 9xxx instruction
$666    $2611   CALL     $611            ; Call subroutine at 611
$668    $A598   LD       I, $598         ; Load 598 into I
$66A    $2D71   CALL     $D71            ; Call subroutine at D71
$66C    $64E0   LD       V4, #E0         ; Load 224 into V4
$66E    $D8DC   DRW      V8, VD, #C      ; Draw 12-byte sprite at V8, VD
$670    $B999   JP       V0, $999        ; Jump to V0 + 999
$672    $CABE   RND      VA, #BE         ; VA = random & BE
$674    $0996   SYS      $996            ; System call to 996
$676    $C3C4   RND      V3, #C4         ; V3 = random & C4
$678    $A503   LD       I, $503         ; Load 503 into I
$67A    $240F   CALL     $40F            ; Call subroutine at 40F
$67C    $18FD   JP       $8FD            ; Jump to 8FD
$67E    $30DA   SE       V0, #DA         ; Skip if V0 == 218
$680    $9FB6   UNKNOWN  $9FB6           ; Unknown 9xxx instruction
$682    $B38E   JP       V0, $38E        ; Jump to V0 + 38E
$684    $ED0E   UNKNOWN  $ED0E           ; Unknown Exxx instruction
$686    $DE36   DRW      VE, V3, #6      ; Draw 6-byte sprite at VE, V3
$688    $E894   UNKNOWN  $E894           ; Unknown Exxx instruction
$68A    $B505   JP       V0, $505        ; Jump to V0 + 505
$68C    $08AE   SYS      $8AE            ; System call to 8AE
$68E    $58A4   UNKNOWN  $58A4           ; Unknown 5xxx instruction
$690    $D157   DRW      V1, V5, #7      ; Draw 7-byte sprite at V1, V5
$692    $EE83   UNKNOWN  $EE83           ; Unknown Exxx instruction
$694    $A0A7   LD       I, $0A7         ; Load 0A7 into I
$696    $B1A6   JP       V0, $1A6        ; Jump to V0 + 1A6
$698    $0488   SYS      $488            ; System call to 488
$69A    $82B6   SHR      V2              ; V2 >>= 1, VF = LSB
$69C    $E603   UNKNOWN  $E603           ; Unknown Exxx instruction
$69E    $D40F   DRW      V4, V0, #F      ; Draw 15-byte sprite at V4, V0
$6A0    $47C1   SNE      V7, #C1         ; Skip if V7 != 193
$6A2    $726D   ADD      V2, #6D         ; Add 109 to V2
$6A4    $2725   CALL     $725            ; Call subroutine at 725
$6A6    $8C07   SUBN     VC, V0          ; VC = V0 - VC, VF = !borrow
$6A8    $3E6F   SE       VE, #6F         ; Skip if VE == 111
$6AA    $33D5   SE       V3, #D5         ; Skip if V3 == 213
$6AC    $26A0   CALL     $6A0            ; Call subroutine at 6A0
$6AE    $642E   LD       V4, #2E         ; Load 46 into V4
$6B0    $D381   DRW      V3, V8, #1      ; Draw 1-byte sprite at V3, V8
$6B2    $2A9E   CALL     $A9E            ; Call subroutine at A9E
$6B4    $6DB6   LD       VD, #B6         ; Load 182 into VD
$6B6    $2914   CALL     $914            ; Call subroutine at 914
$6B8    $731C   ADD      V3, #1C         ; Add 28 to V3
$6BA    $6297   LD       V2, #97         ; Load 151 into V2
$6BC    $5710   SE       V7, V1          ; Skip if V7 == V1
$6BE    $3F5A   SE       VF, #5A         ; Skip if VF == 90
$6C0    $90A9   UNKNOWN  $90A9           ; Unknown 9xxx instruction
$6C2    $8867   SUBN     V8, V6          ; V8 = V6 - V8, VF = !borrow
$6C4    $2325   CALL     $325            ; Call subroutine at 325
$6C6    $F5E9   UNKNOWN  F5E9            ; Unknown Fxxx instruction
$6C8    $106B   JP       $06B            ; Jump to 06B
$6CA    $B1AC   JP       V0, $1AC        ; Jump to V0 + 1AC
$6CC    $FB9F   UNKNOWN  FB9F            ; Unknown Fxxx instruction
$6CE    $3A31   SE       VA, #31         ; Skip if VA == 49
$6D0    $619C   LD       V1, #9C         ; Load 156 into V1
$6D2    $5328   UNKNOWN  $5328           ; Unknown 5xxx instruction
$6D4    $5AD9   UNKNOWN  $5AD9           ; Unknown 5xxx instruction
$6D6    $77D7   ADD      V7, #D7         ; Add 215 to V7
$6D8    $06DA   SYS      $6DA            ; System call to 6DA
$6DA    $361A   SE       V6, #1A         ; Skip if V6 == 26
$6DC    $7D4C   ADD      VD, #4C         ; Add 76 to VD
$6DE    $CE4D   RND      VE, #4D         ; VE = random & 4D
$6E0    $3C6A   SE       VC, #6A         ; Skip if VC == 106
$6E2    $8EE2   AND      VE, VE          ; VE &= VE
$6E4    $B6CF   JP       V0, $6CF        ; Jump to V0 + 6CF
$6E6    $F6AD   UNKNOWN  F6AD            ; Unknown Fxxx instruction
$6E8    $2E35   CALL     $E35            ; Call subroutine at E35
$6EA    $AE8B   LD       I, $E8B         ; Load E8B into I
$6EC    $A6FA   LD       I, $6FA         ; Load 6FA into I
$6EE    $3648   SE       V6, #48         ; Skip if V6 == 72
$6F0    $AA6D   LD       I, $A6D         ; Load A6D into I
$6F2    $568A   UNKNOWN  $568A           ; Unknown 5xxx instruction
$6F4    $0D17   SYS      $D17            ; System call to D17
$6F6    $1E99   JP       $E99            ; Jump to E99
$6F8    $5095   UNKNOWN  $5095           ; Unknown 5xxx instruction
$6FA    $0CE7   SYS      $CE7            ; System call to CE7
$6FC    $1FED   JP       $FED            ; Jump to FED
$6FE    $C533   RND      V5, #33         ; V5 = random & 33
$700    $2046   CALL     $046            ; Call subroutine at 046
$702    $2955   CALL     $955            ; Call subroutine at 955
$704    $749E   ADD      V4, #9E         ; Add 158 to V4
$706    $D6BA   DRW      V6, VB, #A      ; Draw 10-byte sprite at V6, VB
$708    $DDDC   DRW      VD, VD, #C      ; Draw 12-byte sprite at VD, VD
$70A    $76D3   ADD      V6, #D3         ; Add 211 to V6
$70C    $2D7B   CALL     $D7B            ; Call subroutine at D7B
$70E    $E714   UNKNOWN  $E714           ; Unknown Exxx instruction
$710    $6508   LD       V5, #08         ; Load 8 into V5
$712    $970B   UNKNOWN  $970B           ; Unknown 9xxx instruction
$714    $2753   CALL     $753            ; Call subroutine at 753
$716    $B9AD   JP       V0, $9AD        ; Jump to V0 + 9AD
$718    $51EC   UNKNOWN  $51EC           ; Unknown 5xxx instruction
$71A    $1C51   JP       $C51            ; Jump to C51
$71C    $5948   UNKNOWN  $5948           ; Unknown 5xxx instruction
$71E    $D859   DRW      V8, V5, #9      ; Draw 9-byte sprite at V8, V5
$720    $7052   ADD      V0, #52         ; Add 82 to V0
$722    $196C   JP       $96C            ; Jump to 96C
$724    $CF8B   RND      VF, #8B         ; VF = random & 8B
$726    $7D21   ADD      VD, #21         ; Add 33 to VD
$728    $F4E8   UNKNOWN  F4E8            ; Unknown Fxxx instruction
$72A    $A739   LD       I, $739         ; Load 739 into I
$72C    $817C   UNKNOWN  817C            ; Unknown 8xxx instruction
$72E    $A223   LD       I, $223         ; Load 223 into I
$730    $A0C1   LD       I, $0C1         ; Load 0C1 into I
$732    $31FE   SE       V1, #FE         ; Skip if V1 == 254
$734    $4E21   SNE      VE, #21         ; Skip if VE != 33
$736    $B229   JP       V0, $229        ; Jump to V0 + 229
$738    $E912   UNKNOWN  $E912           ; Unknown Exxx instruction
$73A    $7F4B   ADD      VF, #4B         ; Add 75 to VF
$73C    $0C33   SYS      $C33            ; System call to C33
$73E    $0AAB   SYS      $AAB            ; System call to AAB
$740    $BA00   JP       V0, $A00        ; Jump to V0 + A00
$742    $90B8   UNKNOWN  $90B8           ; Unknown 9xxx instruction
$744    $DB80   DRW      VB, V8, #0      ; Draw 0-byte sprite at VB, V8
$746    $B749   JP       V0, $749        ; Jump to V0 + 749
$748    $2F18   CALL     $F18            ; Call subroutine at F18
$74A    $5FC3   UNKNOWN  $5FC3           ; Unknown 5xxx instruction
$74C    $112D   JP       $12D            ; Jump to 12D
$74E    $98B2   UNKNOWN  $98B2           ; Unknown 9xxx instruction
$750    $8BD3   XOR      VB, VD          ; VB ^= VD
$752    $DA60   DRW      VA, V6, #0      ; Draw 0-byte sprite at VA, V6
$754    $D16D   DRW      V1, V6, #D      ; Draw 13-byte sprite at V1, V6
$756    $1D78   JP       $D78            ; Jump to D78
$758    $17C7   JP       $7C7            ; Jump to 7C7
$75A    $7745   ADD      V7, #45         ; Add 69 to V7
$75C    $D6A9   DRW      V6, VA, #9      ; Draw 9-byte sprite at V6, VA
$75E    $F305   UNKNOWN  F305            ; Unknown Fxxx instruction
$760    $1FFD   JP       $FFD            ; Jump to FFD
$762    $FB28   UNKNOWN  FB28            ; Unknown Fxxx instruction
$764    $A514   LD       I, $514         ; Load 514 into I
$766    $B03A   JP       V0, $03A        ; Jump to V0 + 03A
$768    $6347   LD       V3, #47         ; Load 71 into V3
$76A    $9959   UNKNOWN  $9959           ; Unknown 9xxx instruction
$76C    $7FEF   ADD      VF, #EF         ; Add 239 to VF
$770    $DA44   DRW      VA, V4, #4      ; Draw 4-byte sprite at VA, V4
$772    $665A   LD       V6, #5A         ; Load 90 into V6
$774    $90C2   UNKNOWN  $90C2           ; Unknown 9xxx instruction
$776    $8B60   LD       VB, V6          ; VB = V6
$778    $F419   UNKNOWN  F419            ; Unknown Fxxx instruction
$77A    $8DC0   LD       VD, VC          ; VD = VC
$77C    $CE83   RND      VE, #83         ; VE = random & 83
$77E    $254E   CALL     $54E            ; Call subroutine at 54E
$780    $7819   ADD      V8, #19         ; Add 25 to V8
$782    $D130   DRW      V1, V3, #0      ; Draw 0-byte sprite at V1, V3
$784    $12E8   JP       $2E8            ; Jump to 2E8
$786    $D097   DRW      V0, V9, #7      ; Draw 7-byte sprite at V0, V9
$788    $8E9D   UNKNOWN  8E9D            ; Unknown 8xxx instruction
$78A    $8FA9   UNKNOWN  8FA9            ; Unknown 8xxx instruction
$78C    $EA83   UNKNOWN  $EA83           ; Unknown Exxx instruction
$78E    $FF6D   UNKNOWN  FF6D            ; Unknown Fxxx instruction
$790    $E570   UNKNOWN  $E570           ; Unknown Exxx instruction
$792    $BAAB   JP       V0, $AAB        ; Jump to V0 + AAB
$794    $B2D2   JP       V0, $2D2        ; Jump to V0 + 2D2
$796    $175E   JP       $75E            ; Jump to 75E
$798    $6AA7   LD       VA, #A7         ; Load 167 into VA
$79A    $9939   UNKNOWN  $9939           ; Unknown 9xxx instruction
$79C    $610B   LD       V1, #0B         ; Load 11 into V1
$79E    $35B7   SE       V5, #B7         ; Skip if V5 == 183
$7A0    $D7F6   DRW      V7, VF, #6      ; Draw 6-byte sprite at V7, VF
$7A2    $C9E6   RND      V9, #E6         ; V9 = random & E6
$7A4    $6D5D   LD       VD, #5D         ; Load 93 into VD
$7A6    $2FC8   CALL     $FC8            ; Call subroutine at FC8
$7A8    $4EA0   SNE      VE, #A0         ; Skip if VE != 160
$7AA    $CC94   RND      VC, #94         ; VC = random & 94
$7AC    $7296   ADD      V2, #96         ; Add 150 to V2
$7AE    $6B3F   LD       VB, #3F         ; Load 63 into VB
$7B0    $9EB6   UNKNOWN  $9EB6           ; Unknown 9xxx instruction
$7B2    $4458   SNE      V4, #58         ; Skip if V4 != 88
$7B4    $AC3C   LD       I, $C3C         ; Load C3C into I
$7B6    $878F   UNKNOWN  878F            ; Unknown 8xxx instruction
$7B8    $A5DC   LD       I, $5DC         ; Load 5DC into I
$7BA    $5626   UNKNOWN  $5626           ; Unknown 5xxx instruction
$7BC    $A29A   LD       I, $29A         ; Load 29A into I
$7BE    $51D4   UNKNOWN  $51D4           ; Unknown 5xxx instruction
$7C0    $5B8C   UNKNOWN  $5B8C           ; Unknown 5xxx instruction
$7C2    $437D   SNE      V3, #7D         ; Skip if V3 != 125
$7C4    $DF47   DRW      VF, V4, #7      ; Draw 7-byte sprite at VF, V4
$7C6    $1ADE   JP       $ADE            ; Jump to ADE
$7C8    $4B19   SNE      VB, #19         ; Skip if VB != 25
$7CA    $1D32   JP       $D32            ; Jump to D32
$7CC    $CF87   RND      VF, #87         ; VF = random & 87
$7CE    $22BF   CALL     $2BF            ; Call subroutine at 2BF
$7D0    $132B   JP       $32B            ; Jump to 32B
$7D2    $2C8F   CALL     $C8F            ; Call subroutine at C8F
$7D4    $C7A1   RND      V7, #A1         ; V7 = random & A1
$7D6    $9728   UNKNOWN  $9728           ; Unknown 9xxx instruction
$7D8    $8D59   UNKNOWN  8D59            ; Unknown 8xxx instruction
$7DA    $C132   RND      V1, #32         ; V1 = random & 32
$7DC    $ABC7   LD       I, $BC7         ; Load BC7 into I
$7DE    $05AF   SYS      $5AF            ; System call to 5AF
$7E0    $F9E5   UNKNOWN  F9E5            ; Unknown Fxxx instruction
$7E2    $597F   UNKNOWN  $597F           ; Unknown 5xxx instruction
$7E4    $5CDF   UNKNOWN  $5CDF           ; Unknown 5xxx instruction
$7E6    $1997   JP       $997            ; Jump to 997
$7E8    $BCFF   JP       V0, $CFF        ; Jump to V0 + CFF
$7EA    $30AB   SE       V0, #AB         ; Skip if V0 == 171
$7EC    $5AF0   SE       VA, VF          ; Skip if VA == VF
$7EE    $6B73   LD       VB, #73         ; Load 115 into VB
$7F0    $5EFE   UNKNOWN  $5EFE           ; Unknown 5xxx instruction
$7F2    $2099   CALL     $099            ; Call subroutine at 099
$7F4    $AB56   LD       I, $B56         ; Load B56 into I
$7F6    $E298   UNKNOWN  $E298           ; Unknown Exxx instruction
$7F8    $AE65   LD       I, $E65         ; Load E65 into I
$7FA    $B775   JP       V0, $775        ; Jump to V0 + 775
$7FC    $EAAE   UNKNOWN  $EAAE           ; Unknown Exxx instruction
$7FE    $4547   SNE      V5, #47         ; Skip if V5 != 71
$800    $4C6B   SNE      VC, #6B         ; Skip if VC != 107
$802    $31B2   SE       V1, #B2         ; Skip if V1 == 178
$804    $A474   LD       I, $474         ; Load 474 into I
$806    $357B   SE       V5, #7B         ; Skip if V5 == 123
$808    $9504   UNKNOWN  $9504           ; Unknown 9xxx instruction
$80A    $8B28   UNKNOWN  8B28            ; Unknown 8xxx instruction
$80C    $3776   SE       V7, #76         ; Skip if V7 == 118
$80E    $E84E   UNKNOWN  $E84E           ; Unknown Exxx instruction
$810    $40B8   SNE      V0, #B8         ; Skip if V0 != 184
$812    $76BF   ADD      V6, #BF         ; Add 191 to V6
$814    $1A07   JP       $A07            ; Jump to A07
$816    $5934   UNKNOWN  $5934           ; Unknown 5xxx instruction
$818    $C815   RND      V8, #15         ; V8 = random & 15
$81A    $8C67   SUBN     VC, V6          ; VC = V6 - VC, VF = !borrow
$81C    $ED18   UNKNOWN  $ED18           ; Unknown Exxx instruction
$81E    $773E   ADD      V7, #3E         ; Add 62 to V7
$820    $8D0B   UNKNOWN  8D0B            ; Unknown 8xxx instruction
$822    $D511   DRW      V5, V1, #1      ; Draw 1-byte sprite at V5, V1
$824    $7C7F   ADD      VC, #7F         ; Add 127 to VC
$826    $32F9   SE       V2, #F9         ; Skip if V2 == 249
$828    $9055   UNKNOWN  $9055           ; Unknown 9xxx instruction
$82A    $0BDA   SYS      $BDA            ; System call to BDA
$82C    $B255   JP       V0, $255        ; Jump to V0 + 255
$82E    $DD28   DRW      VD, V2, #8      ; Draw 8-byte sprite at VD, V2
$830    $3CBE   SE       VC, #BE         ; Skip if VC == 190
$832    $4767   SNE      V7, #67         ; Skip if V7 != 103
$834    $1023   JP       $023            ; Jump to 023
$836    $2618   CALL     $618            ; Call subroutine at 618
$838    $75F7   ADD      V5, #F7         ; Add 247 to V5
$83A    $F11B   UNKNOWN  F11B            ; Unknown Fxxx instruction
$83C    $6DDE   LD       VD, #DE         ; Load 222 into VD
$83E    $BE5C   JP       V0, $E5C        ; Jump to V0 + E5C
$840    $2DF0   CALL     $DF0            ; Call subroutine at DF0
$842    $36C7   SE       V6, #C7         ; Skip if V6 == 199
$844    $EA32   UNKNOWN  $EA32           ; Unknown Exxx instruction
$846    $DDB1   DRW      VD, VB, #1      ; Draw 1-byte sprite at VD, VB
$848    $F4AE   UNKNOWN  F4AE            ; Unknown Fxxx instruction
$84A    $0142   SYS      $142            ; System call to 142
$84C    $AEFB   LD       I, $EFB         ; Load EFB into I
$84E    $F827   UNKNOWN  F827            ; Unknown Fxxx instruction
$850    $A4E8   LD       I, $4E8         ; Load 4E8 into I
$852    $2CC4   CALL     $CC4            ; Call subroutine at CC4
$854    $663A   LD       V6, #3A         ; Load 58 into V6
$856    $9A2A   UNKNOWN  $9A2A           ; Unknown 9xxx instruction
$858    $4710   SNE      V7, #10         ; Skip if V7 != 16
$85A    $98FC   UNKNOWN  $98FC           ; Unknown 9xxx instruction
$85C    $0125   SYS      $125            ; System call to 125
$85E    $FFF2   UNKNOWN  FFF2            ; Unknown Fxxx instruction
$860    $FE8E   UNKNOWN  FE8E            ; Unknown Fxxx instruction
$862    $D3C1   DRW      V3, VC, #1      ; Draw 1-byte sprite at V3, VC
$864    $C85C   RND      V8, #5C         ; V8 = random & 5C
$866    $3353   SE       V3, #53         ; Skip if V3 == 83
$868    $247A   CALL     $47A            ; Call subroutine at 47A
$86A    $5DB6   UNKNOWN  $5DB6           ; Unknown 5xxx instruction
$86C    $2C29   CALL     $C29            ; Call subroutine at C29
$86E    $A488   LD       I, $488         ; Load 488 into I
$870    $26A5   CALL     $6A5            ; Call subroutine at 6A5
$872    $71AD   ADD      V1, #AD         ; Add 173 to V1
$874    $433A   SNE      V3, #3A         ; Skip if V3 != 58
$876    $858E   SHL      V5              ; V5 <<= 1, VF = MSB
$878    $367C   SE       V6, #7C         ; Skip if V6 == 124
$87A    $03BA   SYS      $3BA            ; System call to 3BA
$87C    $5BB8   UNKNOWN  $5BB8           ; Unknown 5xxx instruction
$87E    $0FFB   SYS      $FFB            ; System call to FFB
$880    $469F   SNE      V6, #9F         ; Skip if V6 != 159
$882    $AFA4   LD       I, $FA4         ; Load FA4 into I
$884    $B504   JP       V0, $504        ; Jump to V0 + 504
$886    $CA0F   RND      VA, #0F         ; VA = random & 0F
$888    $5EC7   UNKNOWN  $5EC7           ; Unknown 5xxx instruction
$88A    $9968   UNKNOWN  $9968           ; Unknown 9xxx instruction
$88C    $CBD5   RND      VB, #D5         ; VB = random & D5
$88E    $1594   JP       $594            ; Jump to 594
$890    $7B3C   ADD      VB, #3C         ; Add 60 to VB
$892    $543D   UNKNOWN  $543D           ; Unknown 5xxx instruction
$894    $BDAE   JP       V0, $DAE        ; Jump to V0 + DAE
$896    $6F34   LD       VF, #34         ; Load 52 into VF
$898    $9EA9   UNKNOWN  $9EA9           ; Unknown 9xxx instruction
$89A    $5BF2   UNKNOWN  $5BF2           ; Unknown 5xxx instruction
$89C    $EF4F   UNKNOWN  $EF4F           ; Unknown Exxx instruction
$89E    $4343   SNE      V3, #43         ; Skip if V3 != 67
$8A0    $233E   CALL     $33E            ; Call subroutine at 33E
$8A2    $2A7C   CALL     $A7C            ; Call subroutine at A7C
$8A4    $A935   LD       I, $935         ; Load 935 into I
$8A6    $A742   LD       I, $742         ; Load 742 into I
$8A8    $3BCF   SE       VB, #CF         ; Skip if VB == 207
$8AA    $7466   ADD      V4, #66         ; Add 102 to V4
$8AC    $2B14   CALL     $B14            ; Call subroutine at B14
$8AE    $4865   SNE      V8, #65         ; Skip if V8 != 101
$8B0    $B0D5   JP       V0, $0D5        ; Jump to V0 + 0D5
$8B2    $820C   UNKNOWN  820C            ; Unknown 8xxx instruction
$8B4    $9CEA   UNKNOWN  $9CEA           ; Unknown 9xxx instruction
$8B6    $71EE   ADD      V1, #EE         ; Add 238 to V1
$8B8    $3294   SE       V2, #94         ; Skip if V2 == 148
$8BA    $1C79   JP       $C79            ; Jump to C79
$8BC    $C2DC   RND      V2, #DC         ; V2 = random & DC
$8BE    $E56F   UNKNOWN  $E56F           ; Unknown Exxx instruction
$8C0    $C2FF   RND      V2, #FF         ; V2 = random & FF
$8C2    $8909   UNKNOWN  8909            ; Unknown 8xxx instruction
$8C4    $5C01   UNKNOWN  $5C01           ; Unknown 5xxx instruction
$8C6    $5689   UNKNOWN  $5689           ; Unknown 5xxx instruction
$8C8    $67C8   LD       V7, #C8         ; Load 200 into V7
$8CA    $A26F   LD       I, $26F         ; Load 26F into I
$8CC    $3EDA   SE       VE, #DA         ; Skip if VE == 218
$8CE    $1844   JP       $844            ; Jump to 844
$8D0    $40B2   SNE      V0, #B2         ; Skip if V0 != 178
$8D2    $E126   UNKNOWN  $E126           ; Unknown Exxx instruction
$8D4    $4EF4   SNE      VE, #F4         ; Skip if VE != 244
$8D6    $B0B0   JP       V0, $0B0        ; Jump to V0 + 0B0
$8D8    $A44E   LD       I, $44E         ; Load 44E into I
$8DA    $B1C3   JP       V0, $1C3        ; Jump to V0 + 1C3
$8DC    $39F3   SE       V9, #F3         ; Skip if V9 == 243
$8DE    $52D2   UNKNOWN  $52D2           ; Unknown 5xxx instruction
$8E0    $B350   JP       V0, $350        ; Jump to V0 + 350
$8E2    $22C8   CALL     $2C8            ; Call subroutine at 2C8
$8E4    $AD52   LD       I, $D52         ; Load D52 into I
$8E6    $71BD   ADD      V1, #BD         ; Add 189 to V1
$8E8    $D96D   DRW      V9, V6, #D      ; Draw 13-byte sprite at V9, V6
$8EA    $5C63   UNKNOWN  $5C63           ; Unknown 5xxx instruction
$8EC    $DC6C   DRW      VC, V6, #C      ; Draw 12-byte sprite at VC, V6
$8EE    $AC8D   LD       I, $C8D         ; Load C8D into I
$8F0    $F97B   UNKNOWN  F97B            ; Unknown Fxxx instruction
$8F2    $A9A4   LD       I, $9A4         ; Load 9A4 into I
$8F4    $553B   UNKNOWN  $553B           ; Unknown 5xxx instruction
$8F6    $5623   UNKNOWN  $5623           ; Unknown 5xxx instruction
$8F8    $0625   SYS      $625            ; System call to 625
$8FA    $8942   AND      V9, V4          ; V9 &= V4
$8FC    $346B   SE       V4, #6B         ; Skip if V4 == 107
$8FE    $3FA8   SE       VF, #A8         ; Skip if VF == 168
$900    $B47A   JP       V0, $47A        ; Jump to V0 + 47A
$902    $8318   UNKNOWN  8318            ; Unknown 8xxx instruction
$904    $24D2   CALL     $4D2            ; Call subroutine at 4D2
$906    $0DB5   SYS      $DB5            ; System call to DB5
$908    $5CF7   UNKNOWN  $5CF7           ; Unknown 5xxx instruction
$90A    $CDF0   RND      VD, #F0         ; VD = random & F0
$90C    $2B7B   CALL     $B7B            ; Call subroutine at B7B
$90E    $28F7   CALL     $8F7            ; Call subroutine at 8F7
$910    $8C8B   UNKNOWN  8C8B            ; Unknown 8xxx instruction
$912    $6879   LD       V8, #79         ; Load 121 into V8
$914    $D730   DRW      V7, V3, #0      ; Draw 0-byte sprite at V7, V3
$916    $6CB1   LD       VC, #B1         ; Load 177 into VC
$918    $574F   UNKNOWN  $574F           ; Unknown 5xxx instruction
$91A    $141E   JP       $41E            ; Jump to 41E
$91C    $AEA8   LD       I, $EA8         ; Load EA8 into I
$91E    $0F44   SYS      $F44            ; System call to F44
$920    $0826   SYS      $826            ; System call to 826
$922    $8E62   AND      VE, V6          ; VE &= V6
$924    $8B45   SUB      VB, V4          ; VB -= V4, VF = !borrow
$926    $777A   ADD      V7, #7A         ; Add 122 to V7
$928    $1815   JP       $815            ; Jump to 815
$92A    $61B5   LD       V1, #B5         ; Load 181 into V1
$92C    $0211   SYS      $211            ; System call to 211
$92E    $C3FD   RND      V3, #FD         ; V3 = random & FD
$930    $2871   CALL     $871            ; Call subroutine at 871
$932    $9719   UNKNOWN  $9719           ; Unknown 9xxx instruction
$934    $6EAA   LD       VE, #AA         ; Load 170 into VE
$936    $4947   SNE      V9, #47         ; Skip if V9 != 71
$938    $CC6A   RND      VC, #6A         ; VC = random & 6A
$93A    $D322   DRW      V3, V2, #2      ; Draw 2-byte sprite at V3, V2
$93C    $62B7   LD       V2, #B7         ; Load 183 into V2
$93E    $8EFF   UNKNOWN  8EFF            ; Unknown 8xxx instruction
$940    $D506   DRW      V5, V0, #6      ; Draw 6-byte sprite at V5, V0
$942    $C5CE   RND      V5, #CE         ; V5 = random & CE
$944    $4C8D   SNE      VC, #8D         ; Skip if VC != 141
$946    $D32D   DRW      V3, V2, #D      ; Draw 13-byte sprite at V3, V2
$948    $3FFE   SE       VF, #FE         ; Skip if VF == 254
$94A    $49C5   SNE      V9, #C5         ; Skip if V9 != 197
$94C    $65AF   LD       V5, #AF         ; Load 175 into V5
$94E    $4C96   SNE      VC, #96         ; Skip if VC != 150
$950    $62B9   LD       V2, #B9         ; Load 185 into V2
$952    $EE82   UNKNOWN  $EE82           ; Unknown Exxx instruction
$954    $2491   CALL     $491            ; Call subroutine at 491
$956    $51B6   UNKNOWN  $51B6           ; Unknown 5xxx instruction
$958    $4F9A   SNE      VF, #9A         ; Skip if VF != 154
$95A    $AA1C   LD       I, $A1C         ; Load A1C into I
$95C    $E411   UNKNOWN  $E411           ; Unknown Exxx instruction
$95E    $2EE7   CALL     $EE7            ; Call subroutine at EE7
$960    $68F8   LD       V8, #F8         ; Load 248 into V8
$962    $800E   SHL      V0              ; V0 <<= 1, VF = MSB
$964    $3B56   SE       VB, #56         ; Skip if VB == 86
$966    $DDA5   DRW      VD, VA, #5      ; Draw 5-byte sprite at VD, VA
$968    $0623   SYS      $623            ; System call to 623
$96A    $77F5   ADD      V7, #F5         ; Add 245 to V7
$96C    $1F6D   JP       $F6D            ; Jump to F6D
$96E    $99C0   SNE      V9, VC          ; Skip if V9 != VC
$970    $1144   JP       $144            ; Jump to 144
$972    $B17E   JP       V0, $17E        ; Jump to V0 + 17E
$974    $4661   SNE      V6, #61         ; Skip if V6 != 97
$976    $5AB8   UNKNOWN  $5AB8           ; Unknown 5xxx instruction
$978    $F838   UNKNOWN  F838            ; Unknown Fxxx instruction
$97A    $4897   SNE      V8, #97         ; Skip if V8 != 151
$97C    $B0CD   JP       V0, $0CD        ; Jump to V0 + 0CD
$97E    $B2D9   JP       V0, $2D9        ; Jump to V0 + 2D9
$980    $8A23   XOR      VA, V2          ; VA ^= V2
$982    $0880   SYS      $880            ; System call to 880
$984    $5FFD   UNKNOWN  $5FFD           ; Unknown 5xxx instruction
$986    $6958   LD       V9, #58         ; Load 88 into V9
$988    $30DC   SE       V0, #DC         ; Skip if V0 == 220
$98A    $C9D2   RND      V9, #D2         ; V9 = random & D2
$98C    $D983   DRW      V9, V8, #3      ; Draw 3-byte sprite at V9, V8
$98E    $889B   UNKNOWN  889B            ; Unknown 8xxx instruction
$990    $6084   LD       V0, #84         ; Load 132 into V0
$992    $A735   LD       I, $735         ; Load 735 into I
$994    $CA28   RND      VA, #28         ; VA = random & 28
$996    $3344   SE       V3, #44         ; Skip if V3 == 68
$998    $B271   JP       V0, $271        ; Jump to V0 + 271
$99A    $94D4   UNKNOWN  $94D4           ; Unknown 9xxx instruction
$99C    $8E78   UNKNOWN  8E78            ; Unknown 8xxx instruction
$99E    $AE60   LD       I, $E60         ; Load E60 into I
$9A0    $3EC8   SE       VE, #C8         ; Skip if VE == 200
$9A2    $B647   JP       V0, $647        ; Jump to V0 + 647
$9A4    $EA1E   UNKNOWN  $EA1E           ; Unknown Exxx instruction
$9A6    $9177   UNKNOWN  $9177           ; Unknown 9xxx instruction
$9A8    $5A9B   UNKNOWN  $5A9B           ; Unknown 5xxx instruction
$9AA    $1631   JP       $631            ; Jump to 631
$9AC    $4803   SNE      V8, #03         ; Skip if V8 != 3
$9AE    $6FD7   LD       VF, #D7         ; Load 215 into VF
$9B0    $CB17   RND      VB, #17         ; VB = random & 17
$9B2    $FA2A   UNKNOWN  FA2A            ; Unknown Fxxx instruction
$9B4    $7BBF   ADD      VB, #BF         ; Add 191 to VB
$9B6    $E20B   UNKNOWN  $E20B           ; Unknown Exxx instruction
$9B8    $2FA3   CALL     $FA3            ; Call subroutine at FA3
$9BA    $6E56   LD       VE, #56         ; Load 86 into VE
$9BC    $6973   LD       V9, #73         ; Load 115 into V9
$9BE    $34F4   SE       V4, #F4         ; Skip if V4 == 244
$9C0    $1AC8   JP       $AC8            ; Jump to AC8
$9C2    $86ED   UNKNOWN  86ED            ; Unknown 8xxx instruction
$9C4    $4484   SNE      V4, #84         ; Skip if V4 != 132
$9C6    $86DA   UNKNOWN  86DA            ; Unknown 8xxx instruction
$9C8    $4BD6   SNE      VB, #D6         ; Skip if VB != 214
$9CA    $6A41   LD       VA, #41         ; Load 65 into VA
$9CC    $0D9C   SYS      $D9C            ; System call to D9C
$9CE    $C389   RND      V3, #89         ; V3 = random & 89
$9D0    $143B   JP       $43B            ; Jump to 43B
$9D2    $0CB7   SYS      $CB7            ; System call to CB7
$9D4    $3615   SE       V6, #15         ; Skip if V6 == 21
$9D6    $84A9   UNKNOWN  84A9            ; Unknown 8xxx instruction
$9D8    $DCD1   DRW      VC, VD, #1      ; Draw 1-byte sprite at VC, VD
$9DA    $5CC6   UNKNOWN  $5CC6           ; Unknown 5xxx instruction
$9DC    $43B5   SNE      V3, #B5         ; Skip if V3 != 181
$9DE    $37BB   SE       V7, #BB         ; Skip if V7 == 187
$9E0    $C771   RND      V7, #71         ; V7 = random & 71
$9E2    $979F   UNKNOWN  $979F           ; Unknown 9xxx instruction
$9E4    $F2D3   UNKNOWN  F2D3            ; Unknown Fxxx instruction
$9E6    $FDAD   UNKNOWN  FDAD            ; Unknown Fxxx instruction
$9E8    $0E21   SYS      $E21            ; System call to E21
$9EA    $B940   JP       V0, $940        ; Jump to V0 + 940
$9EC    $964B   UNKNOWN  $964B           ; Unknown 9xxx instruction
$9EE    $CC4E   RND      VC, #4E         ; VC = random & 4E
$9F0    $D103   DRW      V1, V0, #3      ; Draw 3-byte sprite at V1, V0
$9F2    $CDB8   RND      VD, #B8         ; VD = random & B8
$9F4    $FA35   UNKNOWN  FA35            ; Unknown Fxxx instruction
$9F6    $13C1   JP       $3C1            ; Jump to 3C1
$9F8    $24A5   CALL     $4A5            ; Call subroutine at 4A5
$9FA    $FB80   UNKNOWN  FB80            ; Unknown Fxxx instruction
$9FC    $77F0   ADD      V7, #F0         ; Add 240 to V7
$9FE    $B03F   JP       V0, $03F        ; Jump to V0 + 03F
$A00    $A35B   LD       I, $35B         ; Load 35B into I
$A02    $74BF   ADD      V4, #BF         ; Add 191 to V4
$A04    $A29E   LD       I, $29E         ; Load 29E into I
$A06    $28E7   CALL     $8E7            ; Call subroutine at 8E7
$A08    $E94B   UNKNOWN  $E94B           ; Unknown Exxx instruction
$A0A    $269A   CALL     $69A            ; Call subroutine at 69A
$A0C    $9690   SNE      V6, V9          ; Skip if V6 != V9
$A0E    $824C   UNKNOWN  824C            ; Unknown 8xxx instruction
$A10    $B5A5   JP       V0, $5A5        ; Jump to V0 + 5A5
$A12    $2589   CALL     $589            ; Call subroutine at 589
$A14    $4110   SNE      V1, #10         ; Skip if V1 != 16
$A16    $214B   CALL     $14B            ; Call subroutine at 14B
$A18    $8E52   AND      VE, V5          ; VE &= V5
$A1A    $67E3   LD       V7, #E3         ; Load 227 into V7
$A1C    $1F50   JP       $F50            ; Jump to F50
$A1E    $7F05   ADD      VF, #05         ; Add 5 to VF
$A20    $8397   SUBN     V3, V9          ; V3 = V9 - V3, VF = !borrow
$A22    $1C2B   JP       $C2B            ; Jump to C2B
$A24    $FF5E   UNKNOWN  FF5E            ; Unknown Fxxx instruction
$A26    $9C0E   UNKNOWN  $9C0E           ; Unknown 9xxx instruction
$A28    $1119   JP       $119            ; Jump to 119
$A2A    $94FB   UNKNOWN  $94FB           ; Unknown 9xxx instruction
$A2C    $B38E   JP       V0, $38E        ; Jump to V0 + 38E
$A2E    $F8FD   UNKNOWN  F8FD            ; Unknown Fxxx instruction
$A30    $F144   UNKNOWN  F144            ; Unknown Fxxx instruction
$A32    $2BF3   CALL     $BF3            ; Call subroutine at BF3
$A34    $C207   RND      V2, #07         ; V2 = random & 07
$A36    $F053   UNKNOWN  F053            ; Unknown Fxxx instruction
$A38    $0F40   SYS      $F40            ; System call to F40
$A3A    $A3E9   LD       I, $3E9         ; Load 3E9 into I
$A3C    $4135   SNE      V1, #35         ; Skip if V1 != 53
$A3E    $8EC3   XOR      VE, VC          ; VE ^= VC
$A40    $D1CF   DRW      V1, VC, #F      ; Draw 15-byte sprite at V1, VC
$A42    $D648   DRW      V6, V4, #8      ; Draw 8-byte sprite at V6, V4
$A44    $3E6E   SE       VE, #6E         ; Skip if VE == 110
$A46    $0CD5   SYS      $CD5            ; System call to CD5
$A48    $592F   UNKNOWN  $592F           ; Unknown 5xxx instruction
$A4A    $79E5   ADD      V9, #E5         ; Add 229 to V9
$A4C    $4950   SNE      V9, #50         ; Skip if V9 != 80
$A4E    $635F   LD       V3, #5F         ; Load 95 into V3
$A50    $C6D4   RND      V6, #D4         ; V6 = random & D4
$A52    $D8DA   DRW      V8, VD, #A      ; Draw 10-byte sprite at V8, VD
$A54    $8164   ADD      V1, V6          ; V1 += V6, VF = carry
$A56    $879C   UNKNOWN  879C            ; Unknown 8xxx instruction
$A58    $E42C   UNKNOWN  $E42C           ; Unknown Exxx instruction
$A5A    $7945   ADD      V9, #45         ; Add 69 to V9
$A5C    $4AD0   SNE      VA, #D0         ; Skip if VA != 208
$A5E    $09F2   SYS      $9F2            ; System call to 9F2
$A60    $DD47   DRW      VD, V4, #7      ; Draw 7-byte sprite at VD, V4
$A62    $A9E6   LD       I, $9E6         ; Load 9E6 into I
$A64    $11ED   JP       $1ED            ; Jump to 1ED
$A66    $47B9   SNE      V7, #B9         ; Skip if V7 != 185
$A68    $AB1B   LD       I, $B1B         ; Load B1B into I
$A6A    $35BA   SE       V5, #BA         ; Skip if V5 == 186
$A6C    $9053   UNKNOWN  $9053           ; Unknown 9xxx instruction
$A6E    $9458   UNKNOWN  $9458           ; Unknown 9xxx instruction
$A70    $98F9   UNKNOWN  $98F9           ; Unknown 9xxx instruction
$A72    $0980   SYS      $980            ; System call to 980
$A74    $BD54   JP       V0, $D54        ; Jump to V0 + D54
$A76    $8708   UNKNOWN  8708            ; Unknown 8xxx instruction
$A78    $7877   ADD      V8, #77         ; Add 119 to V8
$A7A    $284A   CALL     $84A            ; Call subroutine at 84A
$A7C    $6EA1   LD       VE, #A1         ; Load 161 into VE
$A7E    $EF7C   UNKNOWN  $EF7C           ; Unknown Exxx instruction
$A80    $DB3E   DRW      VB, V3, #E      ; Draw 14-byte sprite at VB, V3
$A82    $C423   RND      V4, #23         ; V4 = random & 23
$A84    $38D8   SE       V8, #D8         ; Skip if V8 == 216
$A86    $D56E   DRW      V5, V6, #E      ; Draw 14-byte sprite at V5, V6
$A88    $CBDF   RND      VB, #DF         ; VB = random & DF
$A8A    $2A1E   CALL     $A1E            ; Call subroutine at A1E
$A8C    $17A0   JP       $7A0            ; Jump to 7A0
$A8E    $E004   UNKNOWN  $E004           ; Unknown Exxx instruction
$A90    $BDB7   JP       V0, $DB7        ; Jump to V0 + DB7
$A92    $FE8E   UNKNOWN  FE8E            ; Unknown Fxxx instruction
$A94    $DE96   DRW      VE, V9, #6      ; Draw 6-byte sprite at VE, V9
$A96    $EDD0   UNKNOWN  $EDD0           ; Unknown Exxx instruction
$A98    $9233   UNKNOWN  $9233           ; Unknown 9xxx instruction
$A9A    $DBA8   DRW      VB, VA, #8      ; Draw 8-byte sprite at VB, VA
$A9C    $62BC   LD       V2, #BC         ; Load 188 into V2
$A9E    $D325   DRW      V3, V2, #5      ; Draw 5-byte sprite at V3, V2
$AA0    $BC40   JP       V0, $C40        ; Jump to V0 + C40
$AA2    $E493   UNKNOWN  $E493           ; Unknown Exxx instruction
$AA4    $FFCF   UNKNOWN  FFCF            ; Unknown Fxxx instruction
$AA6    $F273   UNKNOWN  F273            ; Unknown Fxxx instruction
$AA8    $F3E9   UNKNOWN  F3E9            ; Unknown Fxxx instruction
$AAA    $CDA8   RND      VD, #A8         ; VD = random & A8
$AAC    $3AD8   SE       VA, #D8         ; Skip if VA == 216
$AAE    $5679   UNKNOWN  $5679           ; Unknown 5xxx instruction
$AB0    $70FC   ADD      V0, #FC         ; Add 252 to V0
$AB2    $7F15   ADD      VF, #15         ; Add 21 to VF
$AB4    $E453   UNKNOWN  $E453           ; Unknown Exxx instruction
$AB6    $F00D   UNKNOWN  F00D            ; Unknown Fxxx instruction
$AB8    $D3D7   DRW      V3, VD, #7      ; Draw 7-byte sprite at V3, VD
$ABA    $C7D3   RND      V7, #D3         ; V7 = random & D3
$ABC    $A195   LD       I, $195         ; Load 195 into I
$ABE    $2B9B   CALL     $B9B            ; Call subroutine at B9B
$AC0    $22E2   CALL     $2E2            ; Call subroutine at 2E2
$AC2    $C858   RND      V8, #58         ; V8 = random & 58
$AC4    $31F2   SE       V1, #F2         ; Skip if V1 == 242
$AC6    $7570   ADD      V5, #70         ; Add 112 to V5
$AC8    $6E0F   LD       VE, #0F         ; Load 15 into VE
$ACA    $AD12   LD       I, $D12         ; Load D12 into I
$ACC    $BE5A   JP       V0, $E5A        ; Jump to V0 + E5A
$ACE    $5550   SE       V5, V5          ; Skip if V5 == V5
$AD0    $058B   SYS      $58B            ; System call to 58B
$AD2    $7E27   ADD      VE, #27         ; Add 39 to VE
$AD4    $AD2C   LD       I, $D2C         ; Load D2C into I
$AD6    $1EA5   JP       $EA5            ; Jump to EA5
$AD8    $3273   SE       V2, #73         ; Skip if V2 == 115
$ADA    $6EEF   LD       VE, #EF         ; Load 239 into VE
$ADC    $1328   JP       $328            ; Jump to 328
$ADE    $D3C2   DRW      V3, VC, #2      ; Draw 2-byte sprite at V3, VC
$AE0    $5BDD   UNKNOWN  $5BDD           ; Unknown 5xxx instruction
$AE2    $A4F7   LD       I, $4F7         ; Load 4F7 into I
$AE4    $2C84   CALL     $C84            ; Call subroutine at C84
$AE6    $1C64   JP       $C64            ; Jump to C64
$AE8    $2A83   CALL     $A83            ; Call subroutine at A83
$AEA    $5D66   UNKNOWN  $5D66           ; Unknown 5xxx instruction
$AEC    $8995   SUB      V9, V9          ; V9 -= V9, VF = !borrow
$AEE    $0FD4   SYS      $FD4            ; System call to FD4
$AF0    $E0F7   UNKNOWN  $E0F7           ; Unknown Exxx instruction
$AF2    $7590   ADD      V5, #90         ; Add 144 to V5
$AF4    $D4C8   DRW      V4, VC, #8      ; Draw 8-byte sprite at V4, VC
$AF6    $3FDF   SE       VF, #DF         ; Skip if VF == 223
$AF8    $ED0A   UNKNOWN  $ED0A           ; Unknown Exxx instruction
$AFA    $2523   CALL     $523            ; Call subroutine at 523
$AFC    $65DF   LD       V5, #DF         ; Load 223 into V5
$AFE    $C434   RND      V4, #34         ; V4 = random & 34
$B00    $BED1   JP       V0, $ED1        ; Jump to V0 + ED1
$B02    $BA9D   JP       V0, $A9D        ; Jump to V0 + A9D
$B04    $1FE1   JP       $FE1            ; Jump to FE1
$B06    $8646   SHR      V6              ; V6 >>= 1, VF = LSB
$B08    $3844   SE       V8, #44         ; Skip if V8 == 68
$B0A    $3323   SE       V3, #23         ; Skip if V3 == 35
$B0C    $ADEA   LD       I, $DEA         ; Load DEA into I
$B0E    $A2DB   LD       I, $2DB         ; Load 2DB into I
$B10    $9F55   UNKNOWN  $9F55           ; Unknown 9xxx instruction
$B12    $E04B   UNKNOWN  $E04B           ; Unknown Exxx instruction
$B14    $4580   SNE      V5, #80         ; Skip if V5 != 128
$B16    $BC0E   JP       V0, $C0E        ; Jump to V0 + C0E
$B18    $86DF   UNKNOWN  86DF            ; Unknown 8xxx instruction
$B1A    $1528   JP       $528            ; Jump to 528
$B1C    $D493   DRW      V4, V9, #3      ; Draw 3-byte sprite at V4, V9
$B1E    $5A6D   UNKNOWN  $5A6D           ; Unknown 5xxx instruction
$B20    $1979   JP       $979            ; Jump to 979
$B22    $CD3D   RND      VD, #3D         ; VD = random & 3D
$B24    $2FC1   CALL     $FC1            ; Call subroutine at FC1
$B26    $CD8B   RND      VD, #8B         ; VD = random & 8B
$B28    $CD4C   RND      VD, #4C         ; VD = random & 4C
$B2A    $90E9   UNKNOWN  $90E9           ; Unknown 9xxx instruction
$B2C    $BC77   JP       V0, $C77        ; Jump to V0 + C77
$B2E    $77FD   ADD      V7, #FD         ; Add 253 to V7
$B30    $66A7   LD       V6, #A7         ; Load 167 into V6
$B32    $C8FB   RND      V8, #FB         ; V8 = random & FB
$B34    $43DE   SNE      V3, #DE         ; Skip if V3 != 222
$B36    $0C97   SYS      $C97            ; System call to C97
$B38    $4E3E   SNE      VE, #3E         ; Skip if VE != 62
$B3A    $70D4   ADD      V0, #D4         ; Add 212 to V0
$B3C    $50E4   UNKNOWN  $50E4           ; Unknown 5xxx instruction
$B3E    $065D   SYS      $65D            ; System call to 65D
$B40    $B8CC   JP       V0, $8CC        ; Jump to V0 + 8CC
$B42    $EE76   UNKNOWN  $EE76           ; Unknown Exxx instruction
$B44    $16EF   JP       $6EF            ; Jump to 6EF
$B46    $30D7   SE       V0, #D7         ; Skip if V0 == 215
$B48    $F333   LD       B, V3           ; Store BCD of V3 at I, I+1, I+2
$B4A    $D6D6   DRW      V6, VD, #6      ; Draw 6-byte sprite at V6, VD
$B4C    $F5FF   UNKNOWN  F5FF            ; Unknown Fxxx instruction
$B4E    $6D88   LD       VD, #88         ; Load 136 into VD
$B50    $D023   DRW      V0, V2, #3      ; Draw 3-byte sprite at V0, V2
$B52    $279E   CALL     $79E            ; Call subroutine at 79E
$B54    $E2D0   UNKNOWN  $E2D0           ; Unknown Exxx instruction
$B56    $5700   SE       V7, V0          ; Skip if V7 == V0
$B58    $B9E7   JP       V0, $9E7        ; Jump to V0 + 9E7
$B5A    $1F0F   JP       $F0F            ; Jump to F0F
$B5C    $1AE8   JP       $AE8            ; Jump to AE8
$B5E    $BFB7   JP       V0, $FB7        ; Jump to V0 + FB7
$B60    $54F8   UNKNOWN  $54F8           ; Unknown 5xxx instruction
$B62    $6454   LD       V4, #54         ; Load 84 into V4
$B64    $AD3E   LD       I, $D3E         ; Load D3E into I
$B66    $1557   JP       $557            ; Jump to 557
$B68    $F774   UNKNOWN  F774            ; Unknown Fxxx instruction
$B6A    $F607   LD       V6, DT          ; V6 = delay timer
$B6C    $F68C   UNKNOWN  F68C            ; Unknown Fxxx instruction
$B6E    $1668   JP       $668            ; Jump to 668
$B70    $F165   LD       V1, [I]         ; Load V0-V1 from I
$B72    $620A   LD       V2, #0A         ; Load 10 into V2
$B74    $C7A1   RND      V7, #A1         ; V7 = random & A1
$B76    $1748   JP       $748            ; Jump to 748
$B78    $6ECA   LD       VE, #CA         ; Load 202 into VE
$B7A    $E7AA   UNKNOWN  $E7AA           ; Unknown Exxx instruction
$B7C    $FDBF   UNKNOWN  FDBF            ; Unknown Fxxx instruction
$B7E    $3B01   SE       VB, #01         ; Skip if VB == 1
$B80    $9626   UNKNOWN  $9626           ; Unknown 9xxx instruction
$B82    $9F04   UNKNOWN  $9F04           ; Unknown 9xxx instruction
$B84    $FD5B   UNKNOWN  FD5B            ; Unknown Fxxx instruction
$B86    $D2F9   DRW      V2, VF, #9      ; Draw 9-byte sprite at V2, VF
$B88    $9748   UNKNOWN  $9748           ; Unknown 9xxx instruction
$B8A    $73CC   ADD      V3, #CC         ; Add 204 to V3
$B8C    $457F   SNE      V5, #7F         ; Skip if V5 != 127
$B8E    $9A0D   UNKNOWN  $9A0D           ; Unknown 9xxx instruction
$B90    $21F9   CALL     $1F9            ; Call subroutine at 1F9
$B92    $93F3   UNKNOWN  $93F3           ; Unknown 9xxx instruction
$B94    $EDCF   UNKNOWN  $EDCF           ; Unknown Exxx instruction
$B96    $8C2E   SHL      VC              ; VC <<= 1, VF = MSB
$B98    $EFFB   UNKNOWN  $EFFB           ; Unknown Exxx instruction
$B9A    $AF6D   LD       I, $F6D         ; Load F6D into I
$B9C    $97F7   UNKNOWN  $97F7           ; Unknown 9xxx instruction
$B9E    $8D6C   UNKNOWN  8D6C            ; Unknown 8xxx instruction
$BA0    $5478   UNKNOWN  $5478           ; Unknown 5xxx instruction
$BA2    $95E8   UNKNOWN  $95E8           ; Unknown 9xxx instruction
$BA4    $C4C6   RND      V4, #C6         ; V4 = random & C6
$BA6    $51E2   UNKNOWN  $51E2           ; Unknown 5xxx instruction
$BA8    $2833   CALL     $833            ; Call subroutine at 833
$BAA    $6773   LD       V7, #73         ; Load 115 into V7
$BAC    $9CEB   UNKNOWN  $9CEB           ; Unknown 9xxx instruction
$BAE    $AC55   LD       I, $C55         ; Load C55 into I
$BB0    $22B2   CALL     $2B2            ; Call subroutine at 2B2
$BB2    $180F   JP       $80F            ; Jump to 80F
$BB4    $F8B2   UNKNOWN  F8B2            ; Unknown Fxxx instruction
$BB6    $BE16   JP       V0, $E16        ; Jump to V0 + E16
$BB8    $4D1B   SNE      VD, #1B         ; Skip if VD != 27
$BBA    $99E9   UNKNOWN  $99E9           ; Unknown 9xxx instruction
$BBC    $E17A   UNKNOWN  $E17A           ; Unknown Exxx instruction
$BBE    $5431   UNKNOWN  $5431           ; Unknown 5xxx instruction
$BC0    $FF01   UNKNOWN  FF01            ; Unknown Fxxx instruction
$BC2    $85A7   SUBN     V5, VA          ; V5 = VA - V5, VF = !borrow
$BC4    $3BCC   SE       VB, #CC         ; Skip if VB == 204
$BC6    $BCCD   JP       V0, $CCD        ; Jump to V0 + CCD
$BC8    $8FE7   SUBN     VF, VE          ; VF = VE - VF, VF = !borrow
$BCA    $AD32   LD       I, $D32         ; Load D32 into I
$BCC    $4622   SNE      V6, #22         ; Skip if V6 != 34
$BCE    $D572   DRW      V5, V7, #2      ; Draw 2-byte sprite at V5, V7
$BD0    $4623   SNE      V6, #23         ; Skip if V6 != 35
$BD2    $6599   LD       V5, #99         ; Load 153 into V5
$BD4    $7AB3   ADD      VA, #B3         ; Add 179 to VA
$BD6    $8EA8   UNKNOWN  8EA8            ; Unknown 8xxx instruction
$BD8    $E9B1   UNKNOWN  $E9B1           ; Unknown Exxx instruction
$BDA    $22E9   CALL     $2E9            ; Call subroutine at 2E9
$BDC    $1F1F   JP       $F1F            ; Jump to F1F
$BDE    $560A   UNKNOWN  $560A           ; Unknown 5xxx instruction
$BE0    $42C1   SNE      V2, #C1         ; Skip if V2 != 193
$BE2    $3AEF   SE       VA, #EF         ; Skip if VA == 239
$BE4    $CC09   RND      VC, #09         ; VC = random & 09
$BE6    $7043   ADD      V0, #43         ; Add 67 to V0
$BE8    $F8AF   UNKNOWN  F8AF            ; Unknown Fxxx instruction
$BEA    $AE4F   LD       I, $E4F         ; Load E4F into I
$BEC    $A7D4   LD       I, $7D4         ; Load 7D4 into I
$BEE    $4E89   SNE      VE, #89         ; Skip if VE != 137
$BF0    $F3E8   UNKNOWN  F3E8            ; Unknown Fxxx instruction
$BF2    $3461   SE       V4, #61         ; Skip if V4 == 97
$BF4    $C41B   RND      V4, #1B         ; V4 = random & 1B
$BF6    $C8AD   RND      V8, #AD         ; V8 = random & AD
$BF8    $BC5A   JP       V0, $C5A        ; Jump to V0 + C5A
$BFA    $B293   JP       V0, $293        ; Jump to V0 + 293
$BFC    $A2AF   LD       I, $2AF         ; Load 2AF into I
$BFE    $4ACB   SNE      VA, #CB         ; Skip if VA != 203
$C00    $638E   LD       V3, #8E         ; Load 142 into V3
$C02    $110B   JP       $10B            ; Jump to 10B
$C04    $14E9   JP       $4E9            ; Jump to 4E9
$C06    $6F80   LD       VF, #80         ; Load 128 into VF
$C08    $ACF8   LD       I, $CF8         ; Load CF8 into I
$C0A    $AE16   LD       I, $E16         ; Load E16 into I
$C0C    $C089   RND      V0, #89         ; V0 = random & 89
$C0E    $728E   ADD      V2, #8E         ; Add 142 to V2
$C10    $A498   LD       I, $498         ; Load 498 into I
$C12    $AB6E   LD       I, $B6E         ; Load B6E into I
$C14    $254A   CALL     $54A            ; Call subroutine at 54A
$C16    $EB81   UNKNOWN  $EB81           ; Unknown Exxx instruction
$C18    $6BFE   LD       VB, #FE         ; Load 254 into VB
$C1A    $E466   UNKNOWN  $E466           ; Unknown Exxx instruction
$C1C    $50D8   UNKNOWN  $50D8           ; Unknown 5xxx instruction
$C1E    $B5B2   JP       V0, $5B2        ; Jump to V0 + 5B2
$C20    $1E28   JP       $E28            ; Jump to E28
$C22    $1CD7   JP       $CD7            ; Jump to CD7
$C24    $6286   LD       V2, #86         ; Load 134 into V2
$C26    $7A9B   ADD      VA, #9B         ; Add 155 to VA
$C28    $77A9   ADD      V7, #A9         ; Add 169 to V7
$C2A    $1023   JP       $023            ; Jump to 023
$C2C    $E701   UNKNOWN  $E701           ; Unknown Exxx instruction
$C2E    $7F67   ADD      VF, #67         ; Add 103 to VF
$C30    $09FD   SYS      $9FD            ; System call to 9FD
$C32    $C2CA   RND      V2, #CA         ; V2 = random & CA
$C34    $2FAA   CALL     $FAA            ; Call subroutine at FAA
$C36    $27D2   CALL     $7D2            ; Call subroutine at 7D2
$C38    $5879   UNKNOWN  $5879           ; Unknown 5xxx instruction
$C3A    $6EB6   LD       VE, #B6         ; Load 182 into VE
$C3C    $FCAB   UNKNOWN  FCAB            ; Unknown Fxxx instruction
$C3E    $3AB6   SE       VA, #B6         ; Skip if VA == 182
$C40    $CB62   RND      VB, #62         ; VB = random & 62
$C42    $B706   JP       V0, $706        ; Jump to V0 + 706
$C44    $C98F   RND      V9, #8F         ; V9 = random & 8F
$C46    $4A03   SNE      VA, #03         ; Skip if VA != 3
$C48    $085F   SYS      $85F            ; System call to 85F
$C4A    $DDD9   DRW      VD, VD, #9      ; Draw 9-byte sprite at VD, VD
$C4C    $4C17   SNE      VC, #17         ; Skip if VC != 23
$C4E    $65C7   LD       V5, #C7         ; Load 199 into V5
$C50    $C640   RND      V6, #40         ; V6 = random & 40
$C52    $F3A5   UNKNOWN  F3A5            ; Unknown Fxxx instruction
$C54    $915D   UNKNOWN  $915D           ; Unknown 9xxx instruction
$C56    $0335   SYS      $335            ; System call to 335
$C58    $5B4C   UNKNOWN  $5B4C           ; Unknown 5xxx instruction
$C5A    $F5BD   UNKNOWN  F5BD            ; Unknown Fxxx instruction
$C5C    $BC4C   JP       V0, $C4C        ; Jump to V0 + C4C
$C5E    $3464   SE       V4, #64         ; Skip if V4 == 100
$C60    $4237   SNE      V2, #37         ; Skip if V2 != 55
$C62    $916B   UNKNOWN  $916B           ; Unknown 9xxx instruction
$C64    $C691   RND      V6, #91         ; V6 = random & 91
$C66    $9DE2   UNKNOWN  $9DE2           ; Unknown 9xxx instruction
$C68    $9E4F   UNKNOWN  $9E4F           ; Unknown 9xxx instruction
$C6A    $3F47   SE       VF, #47         ; Skip if VF == 71
$C6C    $4D44   SNE      VD, #44         ; Skip if VD != 68
$C6E    $0FFD   SYS      $FFD            ; System call to FFD
$C70    $209C   CALL     $09C            ; Call subroutine at 09C
$C72    $448B   SNE      V4, #8B         ; Skip if V4 != 139
$C74    $0CDB   SYS      $CDB            ; System call to CDB
$C76    $1A6A   JP       $A6A            ; Jump to A6A
$C78    $F82C   UNKNOWN  F82C            ; Unknown Fxxx instruction
$C7A    $4686   SNE      V6, #86         ; Skip if V6 != 134
$C7C    $0D1D   SYS      $D1D            ; System call to D1D
$C7E    $A103   LD       I, $103         ; Load 103 into I
$C80    $A18E   LD       I, $18E         ; Load 18E into I
$C82    $23C2   CALL     $3C2            ; Call subroutine at 3C2
$C84    $6D5B   LD       VD, #5B         ; Load 91 into VD
$C86    $6CF2   LD       VC, #F2         ; Load 242 into VC
$C88    $0CE1   SYS      $CE1            ; System call to CE1
$C8A    $3356   SE       V3, #56         ; Skip if V3 == 86
$C8C    $E8D8   UNKNOWN  $E8D8           ; Unknown Exxx instruction
$C8E    $5D75   UNKNOWN  $5D75           ; Unknown 5xxx instruction
$C90    $CE24   RND      VE, #24         ; VE = random & 24
$C92    $1D53   JP       $D53            ; Jump to D53
$C94    $A825   LD       I, $825         ; Load 825 into I
$C96    $2023   CALL     $023            ; Call subroutine at 023
$C98    $1D49   JP       $D49            ; Jump to D49
$C9A    $7ECB   ADD      VE, #CB         ; Add 203 to VE
$C9C    $2313   CALL     $313            ; Call subroutine at 313
$C9E    $1582   JP       $582            ; Jump to 582
$CA0    $0EF7   SYS      $EF7            ; System call to EF7
$CA2    $EB1C   UNKNOWN  $EB1C           ; Unknown Exxx instruction
$CA4    $7FAD   ADD      VF, #AD         ; Add 173 to VF
$CA6    $08F3   SYS      $8F3            ; System call to 8F3
$CA8    $D72B   DRW      V7, V2, #B      ; Draw 11-byte sprite at V7, V2
$CAA    $12A8   JP       $2A8            ; Jump to 2A8
$CAC    $FC56   UNKNOWN  FC56            ; Unknown Fxxx instruction
$CAE    $02FB   SYS      $2FB            ; System call to 2FB
$CB0    $1070   JP       $070            ; Jump to 070
$CB2    $333A   SE       V3, #3A         ; Skip if V3 == 58
$CB4    $EDAD   UNKNOWN  $EDAD           ; Unknown Exxx instruction
$CB6    $FB5E   UNKNOWN  FB5E            ; Unknown Fxxx instruction
$CB8    $34EF   SE       V4, #EF         ; Skip if V4 == 239
$CBA    $CE9B   RND      VE, #9B         ; VE = random & 9B
$CBC    $3DCF   SE       VD, #CF         ; Skip if VD == 207
$CBE    $5E7B   UNKNOWN  $5E7B           ; Unknown 5xxx instruction
$CC0    $480A   SNE      V8, #0A         ; Skip if V8 != 10
$CC2    $1985   JP       $985            ; Jump to 985
$CC4    $4780   SNE      V7, #80         ; Skip if V7 != 128
$CC6    $DA82   DRW      VA, V8, #2      ; Draw 2-byte sprite at VA, V8
$CC8    $9705   UNKNOWN  $9705           ; Unknown 9xxx instruction
$CCA    $FC8F   UNKNOWN  FC8F            ; Unknown Fxxx instruction
$CCC    $74AA   ADD      V4, #AA         ; Add 170 to V4
$CCE    $3E9C   SE       VE, #9C         ; Skip if VE == 156
$CD0    $DB74   DRW      VB, V7, #4      ; Draw 4-byte sprite at VB, V7
$CD2    $EFE7   UNKNOWN  $EFE7           ; Unknown Exxx instruction
$CD4    $12B9   JP       $2B9            ; Jump to 2B9
$CD6    $1CCE   JP       $CCE            ; Jump to CCE
$CD8    $9C4C   UNKNOWN  $9C4C           ; Unknown 9xxx instruction
$CDA    $61EE   LD       V1, #EE         ; Load 238 into V1
$CDC    $034E   SYS      $34E            ; System call to 34E
$CDE    $5CE2   UNKNOWN  $5CE2           ; Unknown 5xxx instruction
$CE0    $7B47   ADD      VB, #47         ; Add 71 to VB
$CE2    $B2AC   JP       V0, $2AC        ; Jump to V0 + 2AC
$CE4    $5768   UNKNOWN  $5768           ; Unknown 5xxx instruction
$CE6    $A3DE   LD       I, $3DE         ; Load 3DE into I
$CE8    $BE45   JP       V0, $E45        ; Jump to V0 + E45
$CEA    $B7FF   JP       V0, $7FF        ; Jump to V0 + 7FF
$CEC    $7D3E   ADD      VD, #3E         ; Add 62 to VD
$CEE    $EBCA   UNKNOWN  $EBCA           ; Unknown Exxx instruction
$CF0    $EB23   UNKNOWN  $EB23           ; Unknown Exxx instruction
$CF2    $7AA5   ADD      VA, #A5         ; Add 165 to VA
$CF4    $3B0B   SE       VB, #0B         ; Skip if VB == 11
$CF6    $224A   CALL     $24A            ; Call subroutine at 24A
$CF8    $B935   JP       V0, $935        ; Jump to V0 + 935
$CFA    $08AC   SYS      $8AC            ; System call to 8AC
$CFC    $6ECB   LD       VE, #CB         ; Load 203 into VE
$CFE    $1DAA   JP       $DAA            ; Jump to DAA
$D00    $B68B   JP       V0, $68B        ; Jump to V0 + 68B
$D02    $5C4F   UNKNOWN  $5C4F           ; Unknown 5xxx instruction
$D04    $1B39   JP       $B39            ; Jump to B39
$D06    $8B45   SUB      VB, V4          ; VB -= V4, VF = !borrow
$D08    $A65E   LD       I, $65E         ; Load 65E into I
$D0A    $950B   UNKNOWN  $950B           ; Unknown 9xxx instruction
$D0C    $B17A   JP       V0, $17A        ; Jump to V0 + 17A
$D0E    $914E   UNKNOWN  $914E           ; Unknown 9xxx instruction
$D10    $A434   LD       I, $434         ; Load 434 into I
$D12    $EE2E   UNKNOWN  $EE2E           ; Unknown Exxx instruction
$D14    $81FC   UNKNOWN  81FC            ; Unknown 8xxx instruction
$D16    $A1C3   LD       I, $1C3         ; Load 1C3 into I
$D18    $D1BC   DRW      V1, VB, #C      ; Draw 12-byte sprite at V1, VB
$D1A    $14B1   JP       $4B1            ; Jump to 4B1
$D1C    $68EE   LD       V8, #EE         ; Load 238 into V8
$D1E    $A21F   LD       I, $21F         ; Load 21F into I
$D20    $1D68   JP       $D68            ; Jump to D68
$D22    $117C   JP       $17C            ; Jump to 17C
$D24    $1950   JP       $950            ; Jump to 950
$D26    $4FE8   SNE      VF, #E8         ; Skip if VF != 232
$D28    $2594   CALL     $594            ; Call subroutine at 594
$D2A    $1927   JP       $927            ; Jump to 927
$D2C    $FB6F   UNKNOWN  FB6F            ; Unknown Fxxx instruction
$D2E    $6EFB   LD       VE, #FB         ; Load 251 into VE
$D30    $D346   DRW      V3, V4, #6      ; Draw 6-byte sprite at V3, V4
$D32    $2FA0   CALL     $FA0            ; Call subroutine at FA0
$D34    $C0CD   RND      V0, #CD         ; V0 = random & CD
$D36    $E900   UNKNOWN  $E900           ; Unknown Exxx instruction
$D38    $D2A6   DRW      V2, VA, #6      ; Draw 6-byte sprite at V2, VA
$D3A    $E427   UNKNOWN  $E427           ; Unknown Exxx instruction
$D3C    $5B51   UNKNOWN  $5B51           ; Unknown 5xxx instruction
$D3E    $ECBD   UNKNOWN  $ECBD           ; Unknown Exxx instruction
$D40    $F07F   UNKNOWN  F07F            ; Unknown Fxxx instruction
$D42    $2177   CALL     $177            ; Call subroutine at 177
$D44    $BAC0   JP       V0, $AC0        ; Jump to V0 + AC0
$D46    $67CD   LD       V7, #CD         ; Load 205 into V7
$D48    $EF70   UNKNOWN  $EF70           ; Unknown Exxx instruction
$D4A    $33D3   SE       V3, #D3         ; Skip if V3 == 211
$D4C    $572E   UNKNOWN  $572E           ; Unknown 5xxx instruction
$D4E    $DCAE   DRW      VC, VA, #E      ; Draw 14-byte sprite at VC, VA
$D50    $EF6A   UNKNOWN  $EF6A           ; Unknown Exxx instruction
$D52    $5FC6   UNKNOWN  $5FC6           ; Unknown 5xxx instruction
$D54    $2343   CALL     $343            ; Call subroutine at 343
$D56    $236D   CALL     $36D            ; Call subroutine at 36D
$D58    $D0DE   DRW      V0, VD, #E      ; Draw 14-byte sprite at V0, VD
$D5A    $279A   CALL     $79A            ; Call subroutine at 79A
$D5C    $E848   UNKNOWN  $E848           ; Unknown Exxx instruction
$D5E    $124F   JP       $24F            ; Jump to 24F
$D60    $12AE   JP       $2AE            ; Jump to 2AE
$D62    $5F77   UNKNOWN  $5F77           ; Unknown 5xxx instruction
$D64    $EBCF   UNKNOWN  $EBCF           ; Unknown Exxx instruction
$D66    $1DCB   JP       $DCB            ; Jump to DCB
$D68    $46B1   SNE      V6, #B1         ; Skip if V6 != 177
$D6A    $0A26   SYS      $A26            ; System call to A26
$D6C    $791E   ADD      V9, #1E         ; Add 30 to V9
$D6E    $A4DC   LD       I, $4DC         ; Load 4DC into I
$D70    $0E20   SYS      $E20            ; System call to E20
$D72    $255F   CALL     $55F            ; Call subroutine at 55F
$D74    $759D   ADD      V5, #9D         ; Add 157 to V5
$D76    $6B44   LD       VB, #44         ; Load 68 into VB
$D78    $D644   DRW      V6, V4, #4      ; Draw 4-byte sprite at V6, V4
$D7A    $5414   UNKNOWN  $5414           ; Unknown 5xxx instruction
$D7C    $66F4   LD       V6, #F4         ; Load 244 into V6
$D7E    $DD5C   DRW      VD, V5, #C      ; Draw 12-byte sprite at VD, V5
$D80    $CD1B   RND      VD, #1B         ; VD = random & 1B
$D82    $1291   JP       $291            ; Jump to 291
$D84    $EE19   UNKNOWN  $EE19           ; Unknown Exxx instruction
$D86    $FD9F   UNKNOWN  FD9F            ; Unknown Fxxx instruction
$D88    $4545   SNE      V5, #45         ; Skip if V5 != 69
$D8A    $1ACE   JP       $ACE            ; Jump to ACE
$D8C    $DB0A   DRW      VB, V0, #A      ; Draw 10-byte sprite at VB, V0
$D8E    $7228   ADD      V2, #28         ; Add 40 to V2
$D90    $6396   LD       V3, #96         ; Load 150 into V3
$D92    $3534   SE       V5, #34         ; Skip if V5 == 52
$D94    $DC74   DRW      VC, V7, #4      ; Draw 4-byte sprite at VC, V7
$D96    $4F5C   SNE      VF, #5C         ; Skip if VF != 92
$D98    $2687   CALL     $687            ; Call subroutine at 687
$D9A    $A0B4   LD       I, $0B4         ; Load 0B4 into I
$D9C    $0292   SYS      $292            ; System call to 292
$D9E    $8E4F   UNKNOWN  8E4F            ; Unknown 8xxx instruction
$DA0    $EFF0   UNKNOWN  $EFF0           ; Unknown Exxx instruction
$DA2    $53BD   UNKNOWN  $53BD           ; Unknown 5xxx instruction
$DA4    $1FF2   JP       $FF2            ; Jump to FF2
$DA6    $7FF8   ADD      VF, #F8         ; Add 248 to VF
$DA8    $D06C   DRW      V0, V6, #C      ; Draw 12-byte sprite at V0, V6
$DAA    $1C72   JP       $C72            ; Jump to C72
$DAC    $5FBC   UNKNOWN  $5FBC           ; Unknown 5xxx instruction
$DAE    $CCBC   RND      VC, #BC         ; VC = random & BC
$DB0    $5FED   UNKNOWN  $5FED           ; Unknown 5xxx instruction
$DB2    $69F6   LD       V9, #F6         ; Load 246 into V9
$DB4    $6842   LD       V8, #42         ; Load 66 into V8
$DB6    $49DE   SNE      V9, #DE         ; Skip if V9 != 222
$DB8    $EF62   UNKNOWN  $EF62           ; Unknown Exxx instruction
$DBA    $2E20   CALL     $E20            ; Call subroutine at E20
$DBC    $48FC   SNE      V8, #FC         ; Skip if V8 != 252
$DBE    $B687   JP       V0, $687        ; Jump to V0 + 687
$DC0    $6437   LD       V4, #37         ; Load 55 into V4
$DC2    $E211   UNKNOWN  $E211           ; Unknown Exxx instruction
$DC4    $BFCC   JP       V0, $FCC        ; Jump to V0 + FCC
$DC6    $1676   JP       $676            ; Jump to 676
$DC8    $9BE3   UNKNOWN  $9BE3           ; Unknown 9xxx instruction
$DCA    $01C1   SYS      $1C1            ; System call to 1C1
$DCC    $FA73   UNKNOWN  FA73            ; Unknown Fxxx instruction
$DCE    $C12F   RND      V1, #2F         ; V1 = random & 2F
$DD0    $7EE3   ADD      VE, #E3         ; Add 227 to VE
$DD2    $D2C4   DRW      V2, VC, #4      ; Draw 4-byte sprite at V2, VC
$DD4    $C4B8   RND      V4, #B8         ; V4 = random & B8
$DD6    $A6AD   LD       I, $6AD         ; Load 6AD into I
$DD8    $26C9   CALL     $6C9            ; Call subroutine at 6C9
$DDA    $5AC5   UNKNOWN  $5AC5           ; Unknown 5xxx instruction
$DDC    $32BD   SE       V2, #BD         ; Skip if V2 == 189
$DDE    $F088   UNKNOWN  F088            ; Unknown Fxxx instruction
$DE0    $6962   LD       V9, #62         ; Load 98 into V9
$DE2    $B28B   JP       V0, $28B        ; Jump to V0 + 28B
$DE4    $42B7   SNE      V2, #B7         ; Skip if V2 != 183
$DE6    $41F8   SNE      V1, #F8         ; Skip if V1 != 248
$DE8    $C6AD   RND      V6, #AD         ; V6 = random & AD
$DEA    $FF48   UNKNOWN  FF48            ; Unknown Fxxx instruction
$DEC    $A8E5   LD       I, $8E5         ; Load 8E5 into I
$DEE    $2413   CALL     $413            ; Call subroutine at 413
$DF0    $0354   SYS      $354            ; System call to 354
$DF2    $E9D7   UNKNOWN  $E9D7           ; Unknown Exxx instruction
$DF4    $36AF   SE       V6, #AF         ; Skip if V6 == 175
$DF6    $2D5B   CALL     $D5B            ; Call subroutine at D5B
$DF8    $6D0F   LD       VD, #0F         ; Load 15 into VD
$DFA    $0AB8   SYS      $AB8            ; System call to AB8
$DFC    $C6CE   RND      V6, #CE         ; V6 = random & CE
$DFE    $4332   SNE      V3, #32         ; Skip if V3 != 50
$E00    $C2EF   RND      V2, #EF         ; V2 = random & EF
$E02    $E265   UNKNOWN  $E265           ; Unknown Exxx instruction
$E04    $620D   LD       V2, #0D         ; Load 13 into V2
$E06    $42E0   SNE      V2, #E0         ; Skip if V2 != 224
$E08    $6461   LD       V4, #61         ; Load 97 into V4
$E0A    $B486   JP       V0, $486        ; Jump to V0 + 486
$E0C    $511B   UNKNOWN  $511B           ; Unknown 5xxx instruction
$E0E    $223E   CALL     $23E            ; Call subroutine at 23E
$E10    $2157   CALL     $157            ; Call subroutine at 157
$E12    $FAAF   UNKNOWN  FAAF            ; Unknown Fxxx instruction
$E14    $FEF3   UNKNOWN  FEF3            ; Unknown Fxxx instruction
$E16    $ECEC   UNKNOWN  $ECEC           ; Unknown Exxx instruction
$E18    $9E00   SNE      VE, V0          ; Skip if VE != V0
$E1A    $813C   UNKNOWN  813C            ; Unknown 8xxx instruction
$E1C    $BEAF   JP       V0, $EAF        ; Jump to V0 + EAF
$E1E    $C797   RND      V7, #97         ; V7 = random & 97
$E20    $8733   XOR      V7, V3          ; V7 ^= V3
$E22    $BE48   JP       V0, $E48        ; Jump to V0 + E48
$E24    $CA25   RND      VA, #25         ; VA = random & 25
$E26    $FEAC   UNKNOWN  FEAC            ; Unknown Fxxx instruction
$E28    $CFDC   RND      VF, #DC         ; VF = random & DC
$E2A    $7DDB   ADD      VD, #DB         ; Add 219 to VD
$E2C    $F85E   UNKNOWN  F85E            ; Unknown Fxxx instruction
$E2E    $001A   SYS      $01A            ; System call to 01A
$E30    $CE2B   RND      VE, #2B         ; VE = random & 2B
$E32    $2520   CALL     $520            ; Call subroutine at 520
$E34    $24C6   CALL     $4C6            ; Call subroutine at 4C6
$E36    $EF04   UNKNOWN  $EF04           ; Unknown Exxx instruction
$E38    $ACD0   LD       I, $CD0         ; Load CD0 into I
$E3A    $502C   UNKNOWN  $502C           ; Unknown 5xxx instruction
$E3C    $9F2E   UNKNOWN  $9F2E           ; Unknown 9xxx instruction
$E3E    $8A05   SUB      VA, V0          ; VA -= V0, VF = !borrow
$E40    $C2D6   RND      V2, #D6         ; V2 = random & D6
$E42    $15E2   JP       $5E2            ; Jump to 5E2
$E44    $3CF0   SE       VC, #F0         ; Skip if VC == 240
$E46    $493E   SNE      V9, #3E         ; Skip if V9 != 62
$E48    $9689   UNKNOWN  $9689           ; Unknown 9xxx instruction
$E4A    $AA86   LD       I, $A86         ; Load A86 into I
$E4C    $E055   UNKNOWN  $E055           ; Unknown Exxx instruction
$E4E    $C15A   RND      V1, #5A         ; V1 = random & 5A
$E50    $4488   SNE      V4, #88         ; Skip if V4 != 136
$E52    $CD0F   RND      VD, #0F         ; VD = random & 0F
$E54    $F494   UNKNOWN  F494            ; Unknown Fxxx instruction
$E56    $908C   UNKNOWN  $908C           ; Unknown 9xxx instruction
$E58    $51F2   UNKNOWN  $51F2           ; Unknown 5xxx instruction
$E5A    $9D18   UNKNOWN  $9D18           ; Unknown 9xxx instruction
$E5C    $9A00   SNE      VA, V0          ; Skip if VA != V0
$E5E    $964D   UNKNOWN  $964D           ; Unknown 9xxx instruction
$E60    $E047   UNKNOWN  $E047           ; Unknown Exxx instruction
$E62    $6D1E   LD       VD, #1E         ; Load 30 into VD
$E64    $716D   ADD      V1, #6D         ; Add 109 to V1
$E66    $A082   LD       I, $082         ; Load 082 into I
$E68    $12E2   JP       $2E2            ; Jump to 2E2
$E6A    $1443   JP       $443            ; Jump to 443
$E6C    $8392   AND      V3, V9          ; V3 &= V9
$E6E    $9855   UNKNOWN  $9855           ; Unknown 9xxx instruction
$E70    $30C2   SE       V0, #C2         ; Skip if V0 == 194
$E72    $71E2   ADD      V1, #E2         ; Add 226 to V1
$E74    $9209   UNKNOWN  $9209           ; Unknown 9xxx instruction
$E76    $7FFF   ADD      VF, #FF         ; Add 255 to VF
$E78    $0E25   SYS      $E25            ; System call to E25
$E7A    $2E6F   CALL     $E6F            ; Call subroutine at E6F
$E7C    $7B43   ADD      VB, #43         ; Add 67 to VB
$E7E    $0760   SYS      $760            ; System call to 760
$E80    $1B8E   JP       $B8E            ; Jump to B8E
$E82    $DD12   DRW      VD, V1, #2      ; Draw 2-byte sprite at VD, V1
$E84    $D921   DRW      V9, V2, #1      ; Draw 1-byte sprite at V9, V2
$E86    $8ACE   SHL      VA              ; VA <<= 1, VF = MSB
$E88    $3386   SE       V3, #86         ; Skip if V3 == 134
$E8A    $EAC1   UNKNOWN  $EAC1           ; Unknown Exxx instruction
$E8C    $2FB0   CALL     $FB0            ; Call subroutine at FB0
$E8E    $FE5F   UNKNOWN  FE5F            ; Unknown Fxxx instruction
$E90    $C83A   RND      V8, #3A         ; V8 = random & 3A
$E92    $8929   UNKNOWN  8929            ; Unknown 8xxx instruction
$E94    $2A0F   CALL     $A0F            ; Call subroutine at A0F
$E96    $6410   LD       V4, #10         ; Load 16 into V4
$E98    $0B0E   SYS      $B0E            ; System call to B0E
$E9A    $59E4   UNKNOWN  $59E4           ; Unknown 5xxx instruction
$E9C    $6519   LD       V5, #19         ; Load 25 into V5
$E9E    $57AB   UNKNOWN  $57AB           ; Unknown 5xxx instruction
$EA0    $08ED   SYS      $8ED            ; System call to 8ED
$EA2    $2FEA   CALL     $FEA            ; Call subroutine at FEA
$EA4    $3BDF   SE       VB, #DF         ; Skip if VB == 223
$EA6    $16CD   JP       $6CD            ; Jump to 6CD
$EA8    $51B8   UNKNOWN  $51B8           ; Unknown 5xxx instruction
$EAA    $4ACD   SNE      VA, #CD         ; Skip if VA != 205
$EAC    $3624   SE       V6, #24         ; Skip if V6 == 36
$EAE    $FABC   UNKNOWN  FABC            ; Unknown Fxxx instruction
$EB0    $120D   JP       $20D            ; Jump to 20D
$EB2    $6C67   LD       VC, #67         ; Load 103 into VC
$EB4    $6703   LD       V7, #03         ; Load 3 into V7
$EB6    $EE2E   UNKNOWN  $EE2E           ; Unknown Exxx instruction
$EB8    $B3EA   JP       V0, $3EA        ; Jump to V0 + 3EA
$EBA    $0528   SYS      $528            ; System call to 528
$EBC    $A767   LD       I, $767         ; Load 767 into I
$EBE    $E1BE   UNKNOWN  $E1BE           ; Unknown Exxx instruction
$EC0    $7DAE   ADD      VD, #AE         ; Add 174 to VD
$EC2    $BB99   JP       V0, $B99        ; Jump to V0 + B99
$EC4    $0A5D   SYS      $A5D            ; System call to A5D
$EC6    $A6CE   LD       I, $6CE         ; Load 6CE into I
$EC8    $9A88   UNKNOWN  $9A88           ; Unknown 9xxx instruction
$ECA    $A5B1   LD       I, $5B1         ; Load 5B1 into I
$ECC    $A45D   LD       I, $45D         ; Load 45D into I
$ECE    $022B   SYS      $22B            ; System call to 22B
$ED0    $DECC   DRW      VE, VC, #C      ; Draw 12-byte sprite at VE, VC
$ED2    $3F8E   SE       VF, #8E         ; Skip if VF == 142
$ED4    $1F8E   JP       $F8E            ; Jump to F8E
$ED6    $61C7   LD       V1, #C7         ; Load 199 into V1
$ED8    $726D   ADD      V2, #6D         ; Add 109 to V2
$EDA    $C391   RND      V3, #91         ; V3 = random & 91
$EDC    $FD59   UNKNOWN  FD59            ; Unknown Fxxx instruction
$EDE    $58F6   UNKNOWN  $58F6           ; Unknown 5xxx instruction
$EE0    $B9D4   JP       V0, $9D4        ; Jump to V0 + 9D4
$EE2    $1481   JP       $481            ; Jump to 481
$EE4    $E077   UNKNOWN  $E077           ; Unknown Exxx instruction
$EE6    $8924   ADD      V9, V2          ; V9 += V2, VF = carry
$EE8    $F6A7   UNKNOWN  F6A7            ; Unknown Fxxx instruction
$EEA    $67CE   LD       V7, #CE         ; Load 206 into V7
$EEC    $8DF3   XOR      VD, VF          ; VD ^= VF
$EEE    $72B1   ADD      V2, #B1         ; Add 177 to V2
$EF0    $A1BE   LD       I, $1BE         ; Load 1BE into I
$EF2    $5727   UNKNOWN  $5727           ; Unknown 5xxx instruction
$EF4    $5650   SE       V6, V5          ; Skip if V6 == V5
$EF6    $B7BD   JP       V0, $7BD        ; Jump to V0 + 7BD
$EF8    $504C   UNKNOWN  $504C           ; Unknown 5xxx instruction
$EFA    $FA30   UNKNOWN  FA30            ; Unknown Fxxx instruction
$EFC    $6F4C   LD       VF, #4C         ; Load 76 into VF
$EFE    $DF09   DRW      VF, V0, #9      ; Draw 9-byte sprite at VF, V0
$F00    $D987   DRW      V9, V8, #7      ; Draw 7-byte sprite at V9, V8
$F02    $2067   CALL     $067            ; Call subroutine at 067
$F04    $70B8   ADD      V0, #B8         ; Add 184 to V0
$F06    $C9FB   RND      V9, #FB         ; V9 = random & FB
$F08    $CCB1   RND      VC, #B1         ; VC = random & B1
$F0A    $D60D   DRW      V6, V0, #D      ; Draw 13-byte sprite at V6, V0
$F0C    $59A7   UNKNOWN  $59A7           ; Unknown 5xxx instruction
$F0E    $17CE   JP       $7CE            ; Jump to 7CE
$F10    $3B49   SE       VB, #49         ; Skip if VB == 73
$F12    $43FB   SNE      V3, #FB         ; Skip if V3 != 251
$F14    $32C0   SE       V2, #C0         ; Skip if V2 == 192
$F16    $26D1   CALL     $6D1            ; Call subroutine at 6D1
$F18    $46F3   SNE      V6, #F3         ; Skip if V6 != 243
$F1A    $D025   DRW      V0, V2, #5      ; Draw 5-byte sprite at V0, V2
$F1C    $AAAB   LD       I, $AAB         ; Load AAB into I
$F1E    $75E7   ADD      V5, #E7         ; Add 231 to V5
$F20    $A86D   LD       I, $86D         ; Load 86D into I
$F22    $F895   UNKNOWN  F895            ; Unknown Fxxx instruction
$F24    $F9EB   UNKNOWN  F9EB            ; Unknown Fxxx instruction
$F26    $3519   SE       V5, #19         ; Skip if V5 == 25
$F28    $1385   JP       $385            ; Jump to 385
$F2A    $0D54   SYS      $D54            ; System call to D54
$F2C    $2FD9   CALL     $FD9            ; Call subroutine at FD9
$F2E    $8799   UNKNOWN  8799            ; Unknown 8xxx instruction
$F30    $C92F   RND      V9, #2F         ; V9 = random & 2F
$F32    $C008   RND      V0, #08         ; V0 = random & 08
$F34    $3D2C   SE       VD, #2C         ; Skip if VD == 44
$F36    $1DE9   JP       $DE9            ; Jump to DE9
$F38    $1449   JP       $449            ; Jump to 449
$F3A    $5FC1   UNKNOWN  $5FC1           ; Unknown 5xxx instruction
$F3C    $4F9F   SNE      VF, #9F         ; Skip if VF != 159
$F3E    $A544   LD       I, $544         ; Load 544 into I
$F40    $9BC4   UNKNOWN  $9BC4           ; Unknown 9xxx instruction
$F42    $DB44   DRW      VB, V4, #4      ; Draw 4-byte sprite at VB, V4
$F44    $99F6   UNKNOWN  $99F6           ; Unknown 9xxx instruction
$F46    $0023   SYS      $023            ; System call to 023
$F48    $FEE0   UNKNOWN  FEE0            ; Unknown Fxxx instruction
$F4A    $262C   CALL     $62C            ; Call subroutine at 62C
$F4C    $D94B   DRW      V9, V4, #B      ; Draw 11-byte sprite at V9, V4
$F4E    $B3B4   JP       V0, $3B4        ; Jump to V0 + 3B4
$F50    $C006   RND      V0, #06         ; V0 = random & 06
$F52    $F9EF   UNKNOWN  F9EF            ; Unknown Fxxx instruction
$F54    $F456   UNKNOWN  F456            ; Unknown Fxxx instruction
$F56    $3FD3   SE       VF, #D3         ; Skip if VF == 211
$F58    $16A8   JP       $6A8            ; Jump to 6A8
$F5A    $FEAA   UNKNOWN  FEAA            ; Unknown Fxxx instruction
$F5C    $C7BA   RND      V7, #BA         ; V7 = random & BA
$F5E    $E55A   UNKNOWN  $E55A           ; Unknown Exxx instruction
$F60    $5F36   UNKNOWN  $5F36           ; Unknown 5xxx instruction
$F62    $B148   JP       V0, $148        ; Jump to V0 + 148
$F64    $936F   UNKNOWN  $936F           ; Unknown 9xxx instruction
$F66    $6BB8   LD       VB, #B8         ; Load 184 into VB
$F68    $7614   ADD      V6, #14         ; Add 20 to V6
$F6A    $5127   UNKNOWN  $5127           ; Unknown 5xxx instruction
$F6C    $47E3   SNE      V7, #E3         ; Skip if V7 != 227
$F6E    $A8D3   LD       I, $8D3         ; Load 8D3 into I
$F70    $AFDE   LD       I, $FDE         ; Load FDE into I
$F72    $63E0   LD       V3, #E0         ; Load 224 into V3
$F74    $C269   RND      V2, #69         ; V2 = random & 69
$F76    $2AFF   CALL     $AFF            ; Call subroutine at AFF
$F78    $FC9D   UNKNOWN  FC9D            ; Unknown Fxxx instruction
$F7A    $CDA0   RND      VD, #A0         ; VD = random & A0
$F7C    $FEFD   UNKNOWN  FEFD            ; Unknown Fxxx instruction
$F7E    $5DD2   UNKNOWN  $5DD2           ; Unknown 5xxx instruction
$F80    $7794   ADD      V7, #94         ; Add 148 to V7
$F82    $77B3   ADD      V7, #B3         ; Add 179 to V7
$F84    $82B3   XOR      V2, VB          ; V2 ^= VB
$F86    $47D5   SNE      V7, #D5         ; Skip if V7 != 213
$F88    $2AA8   CALL     $AA8            ; Call subroutine at AA8
$F8A    $3960   SE       V9, #60         ; Skip if V9 == 96
$F8C    $787A   ADD      V8, #7A         ; Add 122 to V8
$F8E    $C3C7   RND      V3, #C7         ; V3 = random & C7
$F90    $4B26   SNE      VB, #26         ; Skip if VB != 38
$F92    $0160   SYS      $160            ; System call to 160
$F94    $57D2   UNKNOWN  $57D2           ; Unknown 5xxx instruction
$F96    $A29A   LD       I, $29A         ; Load 29A into I
$F98    $0236   SYS      $236            ; System call to 236
$F9A    $53E3   UNKNOWN  $53E3           ; Unknown 5xxx instruction
$F9C    $9804   UNKNOWN  $9804           ; Unknown 9xxx instruction
$F9E    $5E2F   UNKNOWN  $5E2F           ; Unknown 5xxx instruction
$FA0    $593D   UNKNOWN  $593D           ; Unknown 5xxx instruction
$FA2    $25EC   CALL     $5EC            ; Call subroutine at 5EC
$FA4    $CED2   RND      VE, #D2         ; VE = random & D2
$FA6    $8760   LD       V7, V6          ; V7 = V6
$FA8    $4AD7   SNE      VA, #D7         ; Skip if VA != 215
$FAA    $518B   UNKNOWN  $518B           ; Unknown 5xxx instruction
$FAC    $D7D5   DRW      V7, VD, #5      ; Draw 5-byte sprite at V7, VD
$FAE    $42E3   SNE      V2, #E3         ; Skip if V2 != 227
$FB0    $8E14   ADD      VE, V1          ; VE += V1, VF = carry
$FB2    $693C   LD       V9, #3C         ; Load 60 into V9
$FB4    $30FA   SE       V0, #FA         ; Skip if V0 == 250
$FB6    $8242   AND      V2, V4          ; V2 &= V4
$FB8    $2774   CALL     $774            ; Call subroutine at 774
$FBA    $B80A   JP       V0, $80A        ; Jump to V0 + 80A
$FBC    $F6BC   UNKNOWN  F6BC            ; Unknown Fxxx instruction
$FBE    $F74F   UNKNOWN  F74F            ; Unknown Fxxx instruction
$FC0    $42E8   SNE      V2, #E8         ; Skip if V2 != 232
$FC2    $4C4D   SNE      VC, #4D         ; Skip if VC != 77
$FC4    $CC41   RND      VC, #41         ; VC = random & 41
$FC6    $8DEB   UNKNOWN  8DEB            ; Unknown 8xxx instruction
$FC8    $B873   JP       V0, $873        ; Jump to V0 + 873
$FCA    $7039   ADD      V0, #39         ; Add 57 to V0
$FCC    $2CE3   CALL     $CE3            ; Call subroutine at CE3
$FCE    $90A4   UNKNOWN  $90A4           ; Unknown 9xxx instruction
$FD0    $F27A   UNKNOWN  F27A            ; Unknown Fxxx instruction
$FD2    $03AC   SYS      $3AC            ; System call to 3AC
$FD4    $AE02   LD       I, $E02         ; Load E02 into I
$FD6    $B212   JP       V0, $212        ; Jump to V0 + 212
$FD8    $0EB8   SYS      $EB8            ; System call to EB8
$FDA    $D52A   DRW      V5, V2, #A      ; Draw 10-byte sprite at V5, V2
$FDC    $CD33   RND      VD, #33         ; VD = random & 33
$FDE    $DFA5   DRW      VF, VA, #5      ; Draw 5-byte sprite at VF, VA
$FE0    $418A   SNE      V1, #8A         ; Skip if V1 != 138
$FE2    $2E80   CALL     $E80            ; Call subroutine at E80
$FE4    $4C36   SNE      VC, #36         ; Skip if VC != 54
$FE6    $7026   ADD      V0, #26         ; Add 38 to V0
$FE8    $C7A4   RND      V7, #A4         ; V7 = random & A4
$FEA    $1AFE   JP       $AFE            ; Jump to AFE
$FEC    $E459   UNKNOWN  $E459           ; Unknown Exxx instruction
$FEE    $33CC   SE       V3, #CC         ; Skip if V3 == 204
$FF0    $64F8   LD       V4, #F8         ; Load 248 into V4
$FF2    $CE72   RND      VE, #72         ; VE = random & 72
$FF4    $32F3   SE       V2, #F3         ; Skip if V2 == 243
$FF6    $8FD0   LD       VF, VD          ; VF = VD
$FF8    $A960   LD       I, $960         ; Load 960 into I
$FFA    $02E6   SYS      $2E6            ; System call to 2E6
$FFC    $1003   JP       $003            ; Jump to 003
$FFE    $111A   JP       $11A            ; Jump to 11A

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 494 (27.6%)
  LD      : 250 (14.0%)
  JP      : 222 (12.4%)
  CALL    : 120 ( 6.7%)
  SE      : 120 ( 6.7%)
  RND     : 119 ( 6.6%)
  SNE     : 111 ( 6.2%)
  SYS     : 106 ( 5.9%)
  ADD     : 105 ( 5.9%)
  DRW     : 101 ( 5.6%)
  XOR     :   9 ( 0.5%)
  AND     :   8 ( 0.4%)
  SUBN    :   8 ( 0.4%)
  SHR     :   5 ( 0.3%)
  SUB     :   5 ( 0.3%)
  SHL     :   5 ( 0.3%)
  OR      :   2 ( 0.1%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 355 (19.8%)
Arithmetic Operations: 137 (7.6%)
