
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B2530D01_I00569_C1001_4adda64ffe0f.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 2530
Instance: 569
Direction: ascending
Final Array: [0, 15, 16, 134, 145, 147, 173, 185]
Operations: R:0 W:4 C:15 S:2

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 130
Sort Array References:
  $20A: LD I, $222 ; Load 222 into I
  $234: LD I, $53D ; Load 53D into I
  $23E: LD I, $6F5 ; Load 6F5 into I
  $24A: LD I, $688 ; Load 688 into I
  $25C: LD I, $644 ; Load 644 into I
  $27E: LD I, $F65 ; Load F65 into I
  $29E: LD I, $AFA ; Load AFA into I
  $2B2: LD I, $47A ; Load 47A into I
  $2B6: LD I, $F27 ; Load F27 into I
  $2B8: LD I, $A24 ; Load A24 into I
  $2FA: LD I, $819 ; Load 819 into I
  $306: LD I, $DB9 ; Load DB9 into I
  $31C: LD I, $7DF ; Load 7DF into I
  $32E: LD I, $34B ; Load 34B into I
  $336: LD I, $D89 ; Load D89 into I
  $340: LD I, $DB9 ; Load DB9 into I
  $34C: LD I, $8A9 ; Load 8A9 into I
  $35A: LD I, $381 ; Load 381 into I
  $374: LD I, $AAE ; Load AAE into I
  $384: LD I, $EE4 ; Load EE4 into I
  $396: LD I, $58B ; Load 58B into I
  $3B4: LD I, $7B5 ; Load 7B5 into I
  $3EA: LD I, $D0E ; Load D0E into I
  $402: LD I, $C2D ; Load C2D into I
  $41E: LD I, $7AB ; Load 7AB into I
  $44E: LD I, $583 ; Load 583 into I
  $462: LD I, $E24 ; Load E24 into I
  $49E: LD I, $D40 ; Load D40 into I
  $4CE: LD I, $C8F ; Load C8F into I
  $4E0: LD I, $EBB ; Load EBB into I
  $4E4: LD I, $F60 ; Load F60 into I
  $4EC: LD I, $3CA ; Load 3CA into I
  $50E: LD I, $7C6 ; Load 7C6 into I
  $514: LD I, $623 ; Load 623 into I
  $570: LD I, $FAE ; Load FAE into I
  $594: LD I, $82B ; Load 82B into I
  $5A6: LD I, $706 ; Load 706 into I
  $5BA: LD I, $854 ; Load 854 into I
  $5CC: LD I, $7D8 ; Load 7D8 into I
  $5CE: LD I, $DA6 ; Load DA6 into I
  $5FA: LD I, $7D3 ; Load 7D3 into I
  $606: LD I, $BD6 ; Load BD6 into I
  $608: LD I, $23B ; Load 23B into I
  $60A: LD I, $BA8 ; Load BA8 into I
  $62C: LD I, $1ED ; Load 1ED into I
  $654: LD I, $24A ; Load 24A into I
  $656: LD I, $67D ; Load 67D into I
  $65A: LD I, $00D ; Load 00D into I
  $66C: LD I, $41C ; Load 41C into I
  $6B0: LD I, $7E3 ; Load 7E3 into I
  $6B2: LD V8, [I] ; Load V0-V8 from I
  $702: LD I, $591 ; Load 591 into I
  $70C: LD I, $DDD ; Load DDD into I
  $730: LD I, $CDD ; Load CDD into I
  $736: LD I, $CF7 ; Load CF7 into I
  $7B2: LD I, $E9F ; Load E9F into I
  $7C8: LD I, $356 ; Load 356 into I
  $7D4: LD I, $34C ; Load 34C into I
  $814: LD I, $004 ; Load 004 into I
  $82A: LD I, $254 ; Load 254 into I
  $82C: LD I, $E44 ; Load E44 into I
  $83C: LD I, $D7E ; Load D7E into I
  $884: LD I, $D22 ; Load D22 into I
  $8B0: LD I, $9F2 ; Load 9F2 into I
  $8C6: LD I, $37F ; Load 37F into I
  $8E2: LD I, $AAC ; Load AAC into I
  $8F4: LD I, $CA2 ; Load CA2 into I
  $902: LD I, $B51 ; Load B51 into I
  $93A: LD I, $FF8 ; Load FF8 into I
  $946: LD I, $0B3 ; Load 0B3 into I
  $958: LD I, $7A2 ; Load 7A2 into I
  $962: LD I, $BDD ; Load BDD into I
  $9A6: LD I, $B80 ; Load B80 into I
  $9C8: LD I, $C02 ; Load C02 into I
  $9D0: LD I, $D22 ; Load D22 into I
  $9F6: LD I, $007 ; Load 007 into I
  $9FA: LD I, $D23 ; Load D23 into I
  $A14: LD I, $360 ; Load 360 into I
  $A1A: LD I, $420 ; Load 420 into I
  $A2C: LD I, $A2F ; Load A2F into I
  $A2E: LD I, $FAF ; Load FAF into I
  $A5E: LD I, $D54 ; Load D54 into I
  $A90: LD I, $91B ; Load 91B into I
  $A92: LD I, $662 ; Load 662 into I
  $AF4: LD I, $806 ; Load 806 into I
  $B2C: LD I, $75F ; Load 75F into I
  $B46: LD I, $C72 ; Load C72 into I
  $B4C: LD I, $6D6 ; Load 6D6 into I
  $B98: LD I, $EE1 ; Load EE1 into I
  $BA0: LD I, $D20 ; Load D20 into I
  $BC6: LD I, $02F ; Load 02F into I
  $BD6: LD I, $096 ; Load 096 into I
  $BF2: LD I, $B8D ; Load B8D into I
  $BFA: LD I, $7E7 ; Load 7E7 into I
  $C4E: LD I, $1AE ; Load 1AE into I
  $CAA: LD I, $30C ; Load 30C into I
  $CE4: LD I, $B3D ; Load B3D into I
  $CEA: LD I, $D92 ; Load D92 into I
  $D18: LD I, $C99 ; Load C99 into I
  $D34: LD I, $FB5 ; Load FB5 into I
  $D3C: LD I, $DE0 ; Load DE0 into I
  $D78: LD I, $E82 ; Load E82 into I
  $D94: LD I, $619 ; Load 619 into I
  $D96: LD I, $0A9 ; Load 0A9 into I
  $DB2: LD I, $A50 ; Load A50 into I
  $DD2: ADD I, VE ; I ADDRESS MANIPULATION
  $E06: LD I, $D43 ; Load D43 into I
  $E14: LD I, $3FD ; Load 3FD into I
  $E1E: LD I, $3F0 ; Load 3F0 into I
  $E36: LD I, $552 ; Load 552 into I
  $E38: LD I, $A24 ; Load A24 into I
  $E52: LD I, $77B ; Load 77B into I
  $E72: LD I, $353 ; Load 353 into I
  $EA0: LD I, $BD7 ; Load BD7 into I
  $EA2: LD I, $D4A ; Load D4A into I
  $EE4: LD I, $824 ; Load 824 into I
  $F0A: LD I, $060 ; Load 060 into I
  $F0C: LD I, $C4B ; Load C4B into I
  $F1C: LD I, $DA0 ; Load DA0 into I
  $F26: LD [I], V3 ; Store V0-V3 at I
  $F2E: LD I, $483 ; Load 483 into I
  $F30: LD I, $FE5 ; Load FE5 into I
  $F3C: LD I, $02A ; Load 02A into I
  $F3E: LD I, $738 ; Load 738 into I
  $F64: LD I, $220 ; Load 220 into I
  $F6C: LD I, $D7B ; Load D7B into I
  $F84: LD I, $D6E ; Load D6E into I
  $F86: LD I, $AA5 ; Load AA5 into I
  $FAA: LD I, $1F7 ; Load 1F7 into I
  $FF4: LD I, $DC2 ; Load DC2 into I

CONTROL FLOW ANALYSIS:
Jumps: 215
Calls: 106
Branches: 246
Loops: 126
Loop Structures:
  $282 -> $0BC (backward jump)
  $2CA -> $057 (backward jump)
  $302 -> $086 (backward jump)
  $30A -> $078 (backward jump)
  $322 -> $2EF (backward jump)
  $33C -> $087 (backward jump)
  $33E -> $09F (backward jump)
  $35E -> $1D9 (backward jump)
  $3A0 -> $0C7 (backward jump)
  $3CC -> $238 (backward jump)
  $40C -> $25E (backward jump)
  $438 -> $06D (backward jump)
  $45E -> $10B (backward jump)
  $490 -> $37D (backward jump)
  $4E8 -> $165 (backward jump)
  $542 -> $363 (backward jump)
  $564 -> $3B7 (backward jump)
  $574 -> $4CE (backward jump)
  $68A -> $4B0 (backward jump)
  $6A4 -> $0C8 (backward jump)
  $6B8 -> $356 (backward jump)
  $6BC -> $195 (backward jump)
  $6D6 -> $5EB (backward jump)
  $6F0 -> $4D1 (backward jump)
  $6F4 -> $651 (backward jump)
  $71A -> $094 (backward jump)
  $720 -> $114 (backward jump)
  $752 -> $335 (backward jump)
  $768 -> $740 (backward jump)
  $77E -> $620 (backward jump)
  $782 -> $346 (backward jump)
  $786 -> $44B (backward jump)
  $78A -> $601 (backward jump)
  $78C -> $74F (backward jump)
  $79E -> $36A (backward jump)
  $7CC -> $2FE (backward jump)
  $7DA -> $333 (backward jump)
  $7E2 -> $233 (backward jump)
  $818 -> $4D5 (backward jump)
  $85E -> $700 (backward jump)
  $876 -> $2FF (backward jump)
  $892 -> $747 (backward jump)
  $8BA -> $74E (backward jump)
  $8BC -> $846 (backward jump)
  $900 -> $0DC (backward jump)
  $904 -> $08E (backward jump)
  $91A -> $58D (backward jump)
  $938 -> $300 (backward jump)
  $970 -> $4BC (backward jump)
  $97A -> $32B (backward jump)
  $9A8 -> $539 (backward jump)
  $9BA -> $90C (backward jump)
  $9D6 -> $780 (backward jump)
  $9E6 -> $83E (backward jump)
  $9EE -> $09A (backward jump)
  $A64 -> $2DE (backward jump)
  $A76 -> $6E7 (backward jump)
  $A80 -> $13A (backward jump)
  $A84 -> $4B1 (backward jump)
  $A98 -> $6BA (backward jump)
  $A9C -> $8C2 (backward jump)
  $AA2 -> $6D8 (backward jump)
  $AD2 -> $9B5 (backward jump)
  $AE4 -> $0CF (backward jump)
  $B28 -> $343 (backward jump)
  $B5A -> $AC2 (backward jump)
  $B5C -> $A1C (backward jump)
  $B6E -> $494 (backward jump)
  $B7A -> $1F0 (backward jump)
  $B8E -> $ABA (backward jump)
  $B90 -> $63F (backward jump)
  $BD2 -> $62E (backward jump)
  $BEC -> $264 (backward jump)
  $C12 -> $5F4 (backward jump)
  $C38 -> $3E2 (backward jump)
  $C5C -> $AFE (backward jump)
  $C6A -> $BE0 (backward jump)
  $C74 -> $678 (backward jump)
  $C78 -> $A9D (backward jump)
  $C80 -> $8BA (backward jump)
  $C9C -> $999 (backward jump)
  $CB2 -> $BBB (backward jump)
  $CCE -> $49F (backward jump)
  $CD6 -> $421 (backward jump)
  $CD8 -> $C16 (backward jump)
  $CEC -> $809 (backward jump)
  $D00 -> $BF5 (backward jump)
  $D08 -> $2DE (backward jump)
  $D1A -> $B4B (backward jump)
  $D4A -> $C34 (backward jump)
  $D62 -> $973 (backward jump)
  $D9A -> $0AD (backward jump)
  $DAC -> $2A6 (backward jump)
  $DF2 -> $A40 (backward jump)
  $DF4 -> $50B (backward jump)
  $E18 -> $09B (backward jump)
  $E1C -> $DC8 (backward jump)
  $E3A -> $843 (backward jump)
  $E4E -> $C00 (backward jump)
  $E5C -> $0D0 (backward jump)
  $E60 -> $896 (backward jump)
  $E6C -> $0C3 (backward jump)
  $E6E -> $9A0 (backward jump)
  $E84 -> $97C (backward jump)
  $E8A -> $8CD (backward jump)
  $EC2 -> $B60 (backward jump)
  $ECA -> $48E (backward jump)
  $ED8 -> $519 (backward jump)
  $F14 -> $1B6 (backward jump)
  $F22 -> $68D (backward jump)
  $F2A -> $C92 (backward jump)
  $F46 -> $982 (backward jump)
  $F4A -> $4AD (backward jump)
  $F4E -> $C75 (backward jump)
  $F68 -> $E29 (backward jump)
  $F70 -> $898 (backward jump)
  $F80 -> $E81 (backward jump)
  $F88 -> $ADE (backward jump)
  $F92 -> $227 (backward jump)
  $FB4 -> $20B (backward jump)
  $FB6 -> $62E (backward jump)
  $FD2 -> $CC7 (backward jump)
  $FDE -> $926 (backward jump)
  $FE2 -> $47A (backward jump)
  $FF2 -> $D79 (backward jump)
  $FF6 -> $4A0 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $564A   UNKNOWN  $564A           ; Unknown 5xxx instruction
$202    $7A15   ADD      VA, #15         ; Add 21 to VA
$204    $E4D7   UNKNOWN  $E4D7           ; Unknown Exxx instruction
$206    $1A72   JP       $A72            ; Jump to A72
$208    $7E1B   ADD      VE, #1B         ; Add 27 to VE
$20A    $A222   LD       I, $222         ; Load 222 into I
$20C    $5FEB   UNKNOWN  $5FEB           ; Unknown 5xxx instruction
$20E    $8556   SHR      V5              ; V5 >>= 1, VF = LSB
$210    $DE2B   DRW      VE, V2, #B      ; Draw 11-byte sprite at VE, V2
$212    $EB13   UNKNOWN  $EB13           ; Unknown Exxx instruction
$214    $87CB   UNKNOWN  87CB            ; Unknown 8xxx instruction
$216    $5E65   UNKNOWN  $5E65           ; Unknown 5xxx instruction
$218    $864F   UNKNOWN  864F            ; Unknown 8xxx instruction
$21A    $EC06   UNKNOWN  $EC06           ; Unknown Exxx instruction
$21C    $FA5D   UNKNOWN  FA5D            ; Unknown Fxxx instruction
$21E    $D6C7   DRW      V6, VC, #7      ; Draw 7-byte sprite at V6, VC
$220    $F325   UNKNOWN  F325            ; Unknown Fxxx instruction
$222    $2217   CALL     $217            ; Call subroutine at 217
$224    $2288   CALL     $288            ; Call subroutine at 288
$226    $BF23   JP       V0, $F23        ; Jump to V0 + F23
$228    $45E7   SNE      V5, #E7         ; Skip if V5 != 231
$22A    $56C7   UNKNOWN  $56C7           ; Unknown 5xxx instruction
$22C    $5BFD   UNKNOWN  $5BFD           ; Unknown 5xxx instruction
$22E    $E3AA   UNKNOWN  $E3AA           ; Unknown Exxx instruction
$230    $2F30   CALL     $F30            ; Call subroutine at F30
$232    $88B1   OR       V8, VB          ; V8 |= VB
$234    $A53D   LD       I, $53D         ; Load 53D into I
$236    $69AE   LD       V9, #AE         ; Load 174 into V9
$238    $5F8D   UNKNOWN  $5F8D           ; Unknown 5xxx instruction
$23A    $846D   UNKNOWN  846D            ; Unknown 8xxx instruction
$23C    $36C5   SE       V6, #C5         ; Skip if V6 == 197
$23E    $A6F5   LD       I, $6F5         ; Load 6F5 into I
$240    $B973   JP       V0, $973        ; Jump to V0 + 973
$242    $7EEC   ADD      VE, #EC         ; Add 236 to VE
$244    $4762   SNE      V7, #62         ; Skip if V7 != 98
$246    $E22A   UNKNOWN  $E22A           ; Unknown Exxx instruction
$248    $9439   UNKNOWN  $9439           ; Unknown 9xxx instruction
$24A    $A688   LD       I, $688         ; Load 688 into I
$24C    $9A3B   UNKNOWN  $9A3B           ; Unknown 9xxx instruction
$24E    $E5F6   UNKNOWN  $E5F6           ; Unknown Exxx instruction
$250    $593A   UNKNOWN  $593A           ; Unknown 5xxx instruction
$252    $B69E   JP       V0, $69E        ; Jump to V0 + 69E
$254    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$256    $2FD7   CALL     $FD7            ; Call subroutine at FD7
$258    $8996   SHR      V9              ; V9 >>= 1, VF = LSB
$25A    $8B45   SUB      VB, V4          ; VB -= V4, VF = !borrow
$25C    $A644   LD       I, $644         ; Load 644 into I
$25E    $F4A7   UNKNOWN  F4A7            ; Unknown Fxxx instruction
$260    $1C8F   JP       $C8F            ; Jump to C8F
$262    $B397   JP       V0, $397        ; Jump to V0 + 397
$264    $E897   UNKNOWN  $E897           ; Unknown Exxx instruction
$266    $6CE9   LD       VC, #E9         ; Load 233 into VC
$268    $8B68   UNKNOWN  8B68            ; Unknown 8xxx instruction
$26A    $FDEC   UNKNOWN  FDEC            ; Unknown Fxxx instruction
$26C    $180E   JP       $80E            ; Jump to 80E
$26E    $5532   UNKNOWN  $5532           ; Unknown 5xxx instruction
$270    $28CE   CALL     $8CE            ; Call subroutine at 8CE
$272    $6194   LD       V1, #94         ; Load 148 into V1
$274    $BC47   JP       V0, $C47        ; Jump to V0 + C47
$276    $EF28   UNKNOWN  $EF28           ; Unknown Exxx instruction
$278    $CD2F   RND      VD, #2F         ; VD = random & 2F
$27A    $3DAA   SE       VD, #AA         ; Skip if VD == 170
$27C    $1DDB   JP       $DDB            ; Jump to DDB
$27E    $AF65   LD       I, $F65         ; Load F65 into I
$280    $C692   RND      V6, #92         ; V6 = random & 92
$282    $B0BC   JP       V0, $0BC        ; Jump to V0 + 0BC
$284    $9154   UNKNOWN  $9154           ; Unknown 9xxx instruction
$286    $B5C9   JP       V0, $5C9        ; Jump to V0 + 5C9
$288    $46DA   SNE      V6, #DA         ; Skip if V6 != 218
$28A    $23DE   CALL     $3DE            ; Call subroutine at 3DE
$28C    $411E   SNE      V1, #1E         ; Skip if V1 != 30
$28E    $EB51   UNKNOWN  $EB51           ; Unknown Exxx instruction
$290    $1859   JP       $859            ; Jump to 859
$292    $EF6A   UNKNOWN  $EF6A           ; Unknown Exxx instruction
$294    $DB9A   DRW      VB, V9, #A      ; Draw 10-byte sprite at VB, V9
$296    $36D2   SE       V6, #D2         ; Skip if V6 == 210
$298    $49E6   SNE      V9, #E6         ; Skip if V9 != 230
$29A    $D606   DRW      V6, V0, #6      ; Draw 6-byte sprite at V6, V0
$29C    $663B   LD       V6, #3B         ; Load 59 into V6
$29E    $AAFA   LD       I, $AFA         ; Load AFA into I
$2A0    $8DBB   UNKNOWN  8DBB            ; Unknown 8xxx instruction
$2A2    $B872   JP       V0, $872        ; Jump to V0 + 872
$2A4    $9497   UNKNOWN  $9497           ; Unknown 9xxx instruction
$2A6    $7E30   ADD      VE, #30         ; Add 48 to VE
$2A8    $8A06   SHR      VA              ; VA >>= 1, VF = LSB
$2AA    $BA04   JP       V0, $A04        ; Jump to V0 + A04
$2AC    $4551   SNE      V5, #51         ; Skip if V5 != 81
$2AE    $E692   UNKNOWN  $E692           ; Unknown Exxx instruction
$2B0    $F115   LD       DT, V1          ; Delay timer = V1
$2B2    $A47A   LD       I, $47A         ; Load 47A into I
$2B4    $BFFA   JP       V0, $FFA        ; Jump to V0 + FFA
$2B6    $AF27   LD       I, $F27         ; Load F27 into I
$2B8    $AA24   LD       I, $A24         ; Load A24 into I
$2BA    $91CF   UNKNOWN  $91CF           ; Unknown 9xxx instruction
$2BC    $18F4   JP       $8F4            ; Jump to 8F4
$2BE    $F96B   UNKNOWN  F96B            ; Unknown Fxxx instruction
$2C0    $3745   SE       V7, #45         ; Skip if V7 == 69
$2C2    $6AE2   LD       VA, #E2         ; Load 226 into VA
$2C4    $D4C1   DRW      V4, VC, #1      ; Draw 1-byte sprite at V4, VC
$2C6    $3FCF   SE       VF, #CF         ; Skip if VF == 207
$2C8    $357F   SE       V5, #7F         ; Skip if V5 == 127
$2CA    $1057   JP       $057            ; Jump to 057
$2CC    $C642   RND      V6, #42         ; V6 = random & 42
$2CE    $2C32   CALL     $C32            ; Call subroutine at C32
$2D0    $FB20   UNKNOWN  FB20            ; Unknown Fxxx instruction
$2D2    $5502   UNKNOWN  $5502           ; Unknown 5xxx instruction
$2D4    $E355   UNKNOWN  $E355           ; Unknown Exxx instruction
$2D6    $4D6F   SNE      VD, #6F         ; Skip if VD != 111
$2D8    $DA79   DRW      VA, V7, #9      ; Draw 9-byte sprite at VA, V7
$2DA    $C197   RND      V1, #97         ; V1 = random & 97
$2DC    $2EA8   CALL     $EA8            ; Call subroutine at EA8
$2DE    $DBC1   DRW      VB, VC, #1      ; Draw 1-byte sprite at VB, VC
$2E0    $F220   UNKNOWN  F220            ; Unknown Fxxx instruction
$2E2    $7D3D   ADD      VD, #3D         ; Add 61 to VD
$2E4    $7A9C   ADD      VA, #9C         ; Add 156 to VA
$2E6    $D3F1   DRW      V3, VF, #1      ; Draw 1-byte sprite at V3, VF
$2E8    $9BCE   UNKNOWN  $9BCE           ; Unknown 9xxx instruction
$2EA    $0636   SYS      $636            ; System call to 636
$2EC    $E789   UNKNOWN  $E789           ; Unknown Exxx instruction
$2EE    $0398   SYS      $398            ; System call to 398
$2F0    $9D36   UNKNOWN  $9D36           ; Unknown 9xxx instruction
$2F2    $C2D4   RND      V2, #D4         ; V2 = random & D4
$2F4    $6CD5   LD       VC, #D5         ; Load 213 into VC
$2F6    $F339   UNKNOWN  F339            ; Unknown Fxxx instruction
$2F8    $5107   UNKNOWN  $5107           ; Unknown 5xxx instruction
$2FA    $A819   LD       I, $819         ; Load 819 into I
$2FC    $3306   SE       V3, #06         ; Skip if V3 == 6
$2FE    $27B6   CALL     $7B6            ; Call subroutine at 7B6
$300    $000F   SYS      $00F            ; System call to 00F
$302    $1086   JP       $086            ; Jump to 086
$304    $9193   UNKNOWN  $9193           ; Unknown 9xxx instruction
$306    $ADB9   LD       I, $DB9         ; Load DB9 into I
$308    $C63E   RND      V6, #3E         ; V6 = random & 3E
$30A    $1078   JP       $078            ; Jump to 078
$30C    $D9CC   DRW      V9, VC, #C      ; Draw 12-byte sprite at V9, VC
$30E    $C426   RND      V4, #26         ; V4 = random & 26
$310    $92A2   UNKNOWN  $92A2           ; Unknown 9xxx instruction
$312    $F0C5   UNKNOWN  F0C5            ; Unknown Fxxx instruction
$314    $6760   LD       V7, #60         ; Load 96 into V7
$316    $5A73   UNKNOWN  $5A73           ; Unknown 5xxx instruction
$318    $C0AF   RND      V0, #AF         ; V0 = random & AF
$31A    $F891   UNKNOWN  F891            ; Unknown Fxxx instruction
$31C    $A7DF   LD       I, $7DF         ; Load 7DF into I
$31E    $8F44   ADD      VF, V4          ; VF += V4, VF = carry
$320    $22FC   CALL     $2FC            ; Call subroutine at 2FC
$322    $12EF   JP       $2EF            ; Jump to 2EF
$324    $39E2   SE       V9, #E2         ; Skip if V9 == 226
$326    $43EC   SNE      V3, #EC         ; Skip if V3 != 236
$328    $075A   SYS      $75A            ; System call to 75A
$32A    $7F7A   ADD      VF, #7A         ; Add 122 to VF
$32C    $84B5   SUB      V4, VB          ; V4 -= VB, VF = !borrow
$32E    $A34B   LD       I, $34B         ; Load 34B into I
$330    $0282   SYS      $282            ; System call to 282
$332    $F54D   UNKNOWN  F54D            ; Unknown Fxxx instruction
$334    $32BA   SE       V2, #BA         ; Skip if V2 == 186
$336    $AD89   LD       I, $D89         ; Load D89 into I
$338    $6EDD   LD       VE, #DD         ; Load 221 into VE
$33A    $0BC2   SYS      $BC2            ; System call to BC2
$33C    $B087   JP       V0, $087        ; Jump to V0 + 087
$33E    $109F   JP       $09F            ; Jump to 09F
$340    $ADB9   LD       I, $DB9         ; Load DB9 into I
$342    $D393   DRW      V3, V9, #3      ; Draw 3-byte sprite at V3, V9
$344    $E71B   UNKNOWN  $E71B           ; Unknown Exxx instruction
$346    $9C48   UNKNOWN  $9C48           ; Unknown 9xxx instruction
$348    $BB04   JP       V0, $B04        ; Jump to V0 + B04
$34A    $E00C   UNKNOWN  $E00C           ; Unknown Exxx instruction
$34C    $A8A9   LD       I, $8A9         ; Load 8A9 into I
$34E    $3385   SE       V3, #85         ; Skip if V3 == 133
$350    $4BEB   SNE      VB, #EB         ; Skip if VB != 235
$352    $CC91   RND      VC, #91         ; VC = random & 91
$354    $3437   SE       V4, #37         ; Skip if V4 == 55
$356    $F453   UNKNOWN  F453            ; Unknown Fxxx instruction
$358    $5950   SE       V9, V5          ; Skip if V9 == V5
$35A    $A381   LD       I, $381         ; Load 381 into I
$35C    $0E81   SYS      $E81            ; System call to E81
$35E    $11D9   JP       $1D9            ; Jump to 1D9
$360    $DF84   DRW      VF, V8, #4      ; Draw 4-byte sprite at VF, V8
$362    $359D   SE       V5, #9D         ; Skip if V5 == 157
$364    $3284   SE       V2, #84         ; Skip if V2 == 132
$366    $44F4   SNE      V4, #F4         ; Skip if V4 != 244
$368    $22C0   CALL     $2C0            ; Call subroutine at 2C0
$36A    $6DB8   LD       VD, #B8         ; Load 184 into VD
$36C    $9393   UNKNOWN  $9393           ; Unknown 9xxx instruction
$36E    $4709   SNE      V7, #09         ; Skip if V7 != 9
$370    $0EC6   SYS      $EC6            ; System call to EC6
$372    $8247   SUBN     V2, V4          ; V2 = V4 - V2, VF = !borrow
$374    $AAAE   LD       I, $AAE         ; Load AAE into I
$376    $550A   UNKNOWN  $550A           ; Unknown 5xxx instruction
$378    $2E50   CALL     $E50            ; Call subroutine at E50
$37A    $576E   UNKNOWN  $576E           ; Unknown 5xxx instruction
$37C    $1809   JP       $809            ; Jump to 809
$37E    $1CD8   JP       $CD8            ; Jump to CD8
$380    $5076   UNKNOWN  $5076           ; Unknown 5xxx instruction
$382    $E7C6   UNKNOWN  $E7C6           ; Unknown Exxx instruction
$384    $AEE4   LD       I, $EE4         ; Load EE4 into I
$386    $7319   ADD      V3, #19         ; Add 25 to V3
$388    $1D0A   JP       $D0A            ; Jump to D0A
$38A    $DD8B   DRW      VD, V8, #B      ; Draw 11-byte sprite at VD, V8
$38C    $1AE3   JP       $AE3            ; Jump to AE3
$38E    $0552   SYS      $552            ; System call to 552
$390    $8536   SHR      V5              ; V5 >>= 1, VF = LSB
$392    $921F   UNKNOWN  $921F           ; Unknown 9xxx instruction
$394    $5549   UNKNOWN  $5549           ; Unknown 5xxx instruction
$396    $A58B   LD       I, $58B         ; Load 58B into I
$398    $2433   CALL     $433            ; Call subroutine at 433
$39A    $34D9   SE       V4, #D9         ; Skip if V4 == 217
$39C    $0CB1   SYS      $CB1            ; System call to CB1
$39E    $2425   CALL     $425            ; Call subroutine at 425
$3A0    $10C7   JP       $0C7            ; Jump to 0C7
$3A2    $82FF   UNKNOWN  82FF            ; Unknown 8xxx instruction
$3A4    $8EDE   SHL      VE              ; VE <<= 1, VF = MSB
$3A6    $324F   SE       V2, #4F         ; Skip if V2 == 79
$3A8    $3E49   SE       VE, #49         ; Skip if VE == 73
$3AA    $13E0   JP       $3E0            ; Jump to 3E0
$3AC    $83D7   SUBN     V3, VD          ; V3 = VD - V3, VF = !borrow
$3AE    $7211   ADD      V2, #11         ; Add 17 to V2
$3B0    $9341   UNKNOWN  $9341           ; Unknown 9xxx instruction
$3B2    $C199   RND      V1, #99         ; V1 = random & 99
$3B4    $A7B5   LD       I, $7B5         ; Load 7B5 into I
$3B6    $BE98   JP       V0, $E98        ; Jump to V0 + E98
$3B8    $F6DF   UNKNOWN  F6DF            ; Unknown Fxxx instruction
$3BA    $6EDC   LD       VE, #DC         ; Load 220 into VE
$3BC    $C710   RND      V7, #10         ; V7 = random & 10
$3BE    $96FC   UNKNOWN  $96FC           ; Unknown 9xxx instruction
$3C0    $F1D1   UNKNOWN  F1D1            ; Unknown Fxxx instruction
$3C2    $74BA   ADD      V4, #BA         ; Add 186 to V4
$3C4    $0F12   SYS      $F12            ; System call to F12
$3C6    $E94D   UNKNOWN  $E94D           ; Unknown Exxx instruction
$3C8    $FAD0   UNKNOWN  FAD0            ; Unknown Fxxx instruction
$3CA    $28AD   CALL     $8AD            ; Call subroutine at 8AD
$3CC    $1238   JP       $238            ; Jump to 238
$3CE    $6BF5   LD       VB, #F5         ; Load 245 into VB
$3D0    $0947   SYS      $947            ; System call to 947
$3D2    $4752   SNE      V7, #52         ; Skip if V7 != 82
$3D4    $3E12   SE       VE, #12         ; Skip if VE == 18
$3D6    $B576   JP       V0, $576        ; Jump to V0 + 576
$3D8    $2C17   CALL     $C17            ; Call subroutine at C17
$3DA    $84AB   UNKNOWN  84AB            ; Unknown 8xxx instruction
$3DC    $66C2   LD       V6, #C2         ; Load 194 into V6
$3DE    $585A   UNKNOWN  $585A           ; Unknown 5xxx instruction
$3E0    $9508   UNKNOWN  $9508           ; Unknown 9xxx instruction
$3E2    $5101   UNKNOWN  $5101           ; Unknown 5xxx instruction
$3E4    $073D   SYS      $73D            ; System call to 73D
$3E6    $3183   SE       V1, #83         ; Skip if V1 == 131
$3E8    $2F3C   CALL     $F3C            ; Call subroutine at F3C
$3EA    $AD0E   LD       I, $D0E         ; Load D0E into I
$3EC    $49EA   SNE      V9, #EA         ; Skip if V9 != 234
$3EE    $8431   OR       V4, V3          ; V4 |= V3
$3F0    $1B53   JP       $B53            ; Jump to B53
$3F2    $5D7A   UNKNOWN  $5D7A           ; Unknown 5xxx instruction
$3F4    $1E1D   JP       $E1D            ; Jump to E1D
$3F6    $7933   ADD      V9, #33         ; Add 51 to V9
$3F8    $1939   JP       $939            ; Jump to 939
$3FA    $80AC   UNKNOWN  80AC            ; Unknown 8xxx instruction
$3FC    $998D   UNKNOWN  $998D           ; Unknown 9xxx instruction
$3FE    $E761   UNKNOWN  $E761           ; Unknown Exxx instruction
$400    $90A7   UNKNOWN  $90A7           ; Unknown 9xxx instruction
$402    $AC2D   LD       I, $C2D         ; Load C2D into I
$404    $7310   ADD      V3, #10         ; Add 16 to V3
$406    $219B   CALL     $19B            ; Call subroutine at 19B
$408    $0958   SYS      $958            ; System call to 958
$40A    $8D0B   UNKNOWN  8D0B            ; Unknown 8xxx instruction
$40C    $B25E   JP       V0, $25E        ; Jump to V0 + 25E
$40E    $9587   UNKNOWN  $9587           ; Unknown 9xxx instruction
$410    $B5BA   JP       V0, $5BA        ; Jump to V0 + 5BA
$412    $8E12   AND      VE, V1          ; VE &= V1
$414    $4F33   SNE      VF, #33         ; Skip if VF != 51
$416    $574B   UNKNOWN  $574B           ; Unknown 5xxx instruction
$418    $D490   DRW      V4, V9, #0      ; Draw 0-byte sprite at V4, V9
$41A    $CC00   RND      VC, #00         ; VC = random & 00
$41C    $9247   UNKNOWN  $9247           ; Unknown 9xxx instruction
$41E    $A7AB   LD       I, $7AB         ; Load 7AB into I
$420    $3951   SE       V9, #51         ; Skip if V9 == 81
$422    $59D7   UNKNOWN  $59D7           ; Unknown 5xxx instruction
$424    $445A   SNE      V4, #5A         ; Skip if V4 != 90
$426    $2C56   CALL     $C56            ; Call subroutine at C56
$428    $E3C6   UNKNOWN  $E3C6           ; Unknown Exxx instruction
$42A    $7E72   ADD      VE, #72         ; Add 114 to VE
$42C    $DE96   DRW      VE, V9, #6      ; Draw 6-byte sprite at VE, V9
$42E    $0D8D   SYS      $D8D            ; System call to D8D
$430    $5CD2   UNKNOWN  $5CD2           ; Unknown 5xxx instruction
$432    $6DCA   LD       VD, #CA         ; Load 202 into VD
$434    $2E54   CALL     $E54            ; Call subroutine at E54
$436    $D68D   DRW      V6, V8, #D      ; Draw 13-byte sprite at V6, V8
$438    $106D   JP       $06D            ; Jump to 06D
$43A    $BFD5   JP       V0, $FD5        ; Jump to V0 + FD5
$43C    $4AAB   SNE      VA, #AB         ; Skip if VA != 171
$43E    $3695   SE       V6, #95         ; Skip if V6 == 149
$440    $6149   LD       V1, #49         ; Load 73 into V1
$442    $43CF   SNE      V3, #CF         ; Skip if V3 != 207
$444    $6406   LD       V4, #06         ; Load 6 into V4
$446    $3AFB   SE       VA, #FB         ; Skip if VA == 251
$448    $C3A7   RND      V3, #A7         ; V3 = random & A7
$44A    $931E   UNKNOWN  $931E           ; Unknown 9xxx instruction
$44C    $EC54   UNKNOWN  $EC54           ; Unknown Exxx instruction
$44E    $A583   LD       I, $583         ; Load 583 into I
$450    $F37C   UNKNOWN  F37C            ; Unknown Fxxx instruction
$452    $4027   SNE      V0, #27         ; Skip if V0 != 39
$454    $F12F   UNKNOWN  F12F            ; Unknown Fxxx instruction
$456    $72A3   ADD      V2, #A3         ; Add 163 to V2
$458    $28D3   CALL     $8D3            ; Call subroutine at 8D3
$45A    $C434   RND      V4, #34         ; V4 = random & 34
$45C    $5961   UNKNOWN  $5961           ; Unknown 5xxx instruction
$45E    $B10B   JP       V0, $10B        ; Jump to V0 + 10B
$460    $FCB5   UNKNOWN  FCB5            ; Unknown Fxxx instruction
$462    $AE24   LD       I, $E24         ; Load E24 into I
$464    $89BE   SHL      V9              ; V9 <<= 1, VF = MSB
$466    $C3CC   RND      V3, #CC         ; V3 = random & CC
$468    $8E8D   UNKNOWN  8E8D            ; Unknown 8xxx instruction
$46A    $607E   LD       V0, #7E         ; Load 126 into V0
$46C    $6544   LD       V5, #44         ; Load 68 into V5
$46E    $0EE4   SYS      $EE4            ; System call to EE4
$470    $23F4   CALL     $3F4            ; Call subroutine at 3F4
$472    $4604   SNE      V6, #04         ; Skip if V6 != 4
$474    $04FA   SYS      $4FA            ; System call to 4FA
$476    $DD33   DRW      VD, V3, #3      ; Draw 3-byte sprite at VD, V3
$478    $D105   DRW      V1, V0, #5      ; Draw 5-byte sprite at V1, V0
$47A    $8A0D   UNKNOWN  8A0D            ; Unknown 8xxx instruction
$47C    $D6C0   DRW      V6, VC, #0      ; Draw 0-byte sprite at V6, VC
$47E    $E410   UNKNOWN  $E410           ; Unknown Exxx instruction
$480    $DF2A   DRW      VF, V2, #A      ; Draw 10-byte sprite at VF, V2
$482    $33A1   SE       V3, #A1         ; Skip if V3 == 161
$484    $ED79   UNKNOWN  $ED79           ; Unknown Exxx instruction
$486    $D43E   DRW      V4, V3, #E      ; Draw 14-byte sprite at V4, V3
$488    $50B7   UNKNOWN  $50B7           ; Unknown 5xxx instruction
$48A    $94E7   UNKNOWN  $94E7           ; Unknown 9xxx instruction
$48C    $163A   JP       $63A            ; Jump to 63A
$48E    $6B5F   LD       VB, #5F         ; Load 95 into VB
$490    $B37D   JP       V0, $37D        ; Jump to V0 + 37D
$492    $2B7F   CALL     $B7F            ; Call subroutine at B7F
$494    $24DD   CALL     $4DD            ; Call subroutine at 4DD
$496    $80C8   UNKNOWN  80C8            ; Unknown 8xxx instruction
$498    $EB6D   UNKNOWN  $EB6D           ; Unknown Exxx instruction
$49A    $6CD0   LD       VC, #D0         ; Load 208 into VC
$49C    $72BB   ADD      V2, #BB         ; Add 187 to V2
$49E    $AD40   LD       I, $D40         ; Load D40 into I
$4A0    $E419   UNKNOWN  $E419           ; Unknown Exxx instruction
$4A2    $CA43   RND      VA, #43         ; VA = random & 43
$4A4    $BC4A   JP       V0, $C4A        ; Jump to V0 + C4A
$4A6    $6654   LD       V6, #54         ; Load 84 into V6
$4A8    $8BC1   OR       VB, VC          ; VB |= VC
$4AA    $76C7   ADD      V6, #C7         ; Add 199 to V6
$4AC    $E225   UNKNOWN  $E225           ; Unknown Exxx instruction
$4AE    $6C7A   LD       VC, #7A         ; Load 122 into VC
$4B0    $C7A8   RND      V7, #A8         ; V7 = random & A8
$4B2    $6182   LD       V1, #82         ; Load 130 into V1
$4B4    $3274   SE       V2, #74         ; Skip if V2 == 116
$4B6    $B546   JP       V0, $546        ; Jump to V0 + 546
$4B8    $D48B   DRW      V4, V8, #B      ; Draw 11-byte sprite at V4, V8
$4BA    $81B5   SUB      V1, VB          ; V1 -= VB, VF = !borrow
$4BC    $31B9   SE       V1, #B9         ; Skip if V1 == 185
$4BE    $1AAA   JP       $AAA            ; Jump to AAA
$4C0    $BB96   JP       V0, $B96        ; Jump to V0 + B96
$4C2    $C4C2   RND      V4, #C2         ; V4 = random & C2
$4C4    $57C6   UNKNOWN  $57C6           ; Unknown 5xxx instruction
$4C6    $42A6   SNE      V2, #A6         ; Skip if V2 != 166
$4C8    $2B88   CALL     $B88            ; Call subroutine at B88
$4CA    $8306   SHR      V3              ; V3 >>= 1, VF = LSB
$4CC    $3890   SE       V8, #90         ; Skip if V8 == 144
$4CE    $AC8F   LD       I, $C8F         ; Load C8F into I
$4D0    $884C   UNKNOWN  884C            ; Unknown 8xxx instruction
$4D2    $1A44   JP       $A44            ; Jump to A44
$4D4    $66D6   LD       V6, #D6         ; Load 214 into V6
$4D6    $3F1F   SE       VF, #1F         ; Skip if VF == 31
$4D8    $1BE0   JP       $BE0            ; Jump to BE0
$4DA    $26AB   CALL     $6AB            ; Call subroutine at 6AB
$4DC    $60AD   LD       V0, #AD         ; Load 173 into V0
$4DE    $CA0B   RND      VA, #0B         ; VA = random & 0B
$4E0    $AEBB   LD       I, $EBB         ; Load EBB into I
$4E2    $E70F   UNKNOWN  $E70F           ; Unknown Exxx instruction
$4E4    $AF60   LD       I, $F60         ; Load F60 into I
$4E6    $747F   ADD      V4, #7F         ; Add 127 to V4
$4E8    $B165   JP       V0, $165        ; Jump to V0 + 165
$4EA    $2C80   CALL     $C80            ; Call subroutine at C80
$4EC    $A3CA   LD       I, $3CA         ; Load 3CA into I
$4EE    $20EA   CALL     $0EA            ; Call subroutine at 0EA
$4F0    $64DE   LD       V4, #DE         ; Load 222 into V4
$4F2    $479E   SNE      V7, #9E         ; Skip if V7 != 158
$4F4    $4A47   SNE      VA, #47         ; Skip if VA != 71
$4F6    $CDE8   RND      VD, #E8         ; VD = random & E8
$4F8    $8D71   OR       VD, V7          ; VD |= V7
$4FA    $32B9   SE       V2, #B9         ; Skip if V2 == 185
$4FC    $DF63   DRW      VF, V6, #3      ; Draw 3-byte sprite at VF, V6
$4FE    $6F0A   LD       VF, #0A         ; Load 10 into VF
$500    $EFE8   UNKNOWN  $EFE8           ; Unknown Exxx instruction
$502    $D03B   DRW      V0, V3, #B      ; Draw 11-byte sprite at V0, V3
$504    $C0A7   RND      V0, #A7         ; V0 = random & A7
$506    $D2CB   DRW      V2, VC, #B      ; Draw 11-byte sprite at V2, VC
$508    $689C   LD       V8, #9C         ; Load 156 into V8
$50A    $4BE6   SNE      VB, #E6         ; Skip if VB != 230
$50C    $C11A   RND      V1, #1A         ; V1 = random & 1A
$50E    $A7C6   LD       I, $7C6         ; Load 7C6 into I
$510    $92C6   UNKNOWN  $92C6           ; Unknown 9xxx instruction
$512    $C567   RND      V5, #67         ; V5 = random & 67
$514    $A623   LD       I, $623         ; Load 623 into I
$516    $1D04   JP       $D04            ; Jump to D04
$518    $9339   UNKNOWN  $9339           ; Unknown 9xxx instruction
$51A    $B86C   JP       V0, $86C        ; Jump to V0 + 86C
$51C    $5FE7   UNKNOWN  $5FE7           ; Unknown 5xxx instruction
$51E    $64C0   LD       V4, #C0         ; Load 192 into V4
$520    $E8A9   UNKNOWN  $E8A9           ; Unknown Exxx instruction
$522    $018B   SYS      $18B            ; System call to 18B
$524    $221C   CALL     $21C            ; Call subroutine at 21C
$526    $7871   ADD      V8, #71         ; Add 113 to V8
$528    $EBA3   UNKNOWN  $EBA3           ; Unknown Exxx instruction
$52A    $4576   SNE      V5, #76         ; Skip if V5 != 118
$52C    $5E22   UNKNOWN  $5E22           ; Unknown 5xxx instruction
$52E    $0026   SYS      $026            ; System call to 026
$530    $3DC7   SE       VD, #C7         ; Skip if VD == 199
$532    $4F6C   SNE      VF, #6C         ; Skip if VF != 108
$534    $7068   ADD      V0, #68         ; Add 104 to V0
$536    $E384   UNKNOWN  $E384           ; Unknown Exxx instruction
$538    $6C56   LD       VC, #56         ; Load 86 into VC
$53A    $5FC2   UNKNOWN  $5FC2           ; Unknown 5xxx instruction
$53C    $0158   SYS      $158            ; System call to 158
$53E    $0ABB   SYS      $ABB            ; System call to ABB
$540    $1C13   JP       $C13            ; Jump to C13
$542    $1363   JP       $363            ; Jump to 363
$544    $D1BD   DRW      V1, VB, #D      ; Draw 13-byte sprite at V1, VB
$546    $3F93   SE       VF, #93         ; Skip if VF == 147
$548    $587A   UNKNOWN  $587A           ; Unknown 5xxx instruction
$54A    $38F3   SE       V8, #F3         ; Skip if V8 == 243
$54C    $F850   UNKNOWN  F850            ; Unknown Fxxx instruction
$54E    $4482   SNE      V4, #82         ; Skip if V4 != 130
$550    $BFF8   JP       V0, $FF8        ; Jump to V0 + FF8
$552    $4ED8   SNE      VE, #D8         ; Skip if VE != 216
$554    $56E7   UNKNOWN  $56E7           ; Unknown 5xxx instruction
$556    $5D60   SE       VD, V6          ; Skip if VD == V6
$558    $8010   LD       V0, V1          ; V0 = V1
$55A    $B91C   JP       V0, $91C        ; Jump to V0 + 91C
$55C    $F3DE   UNKNOWN  F3DE            ; Unknown Fxxx instruction
$55E    $FB44   UNKNOWN  FB44            ; Unknown Fxxx instruction
$560    $865F   UNKNOWN  865F            ; Unknown 8xxx instruction
$562    $49CF   SNE      V9, #CF         ; Skip if V9 != 207
$564    $B3B7   JP       V0, $3B7        ; Jump to V0 + 3B7
$566    $0C67   SYS      $C67            ; System call to C67
$568    $362B   SE       V6, #2B         ; Skip if V6 == 43
$56A    $BF98   JP       V0, $F98        ; Jump to V0 + F98
$56C    $C1A6   RND      V1, #A6         ; V1 = random & A6
$56E    $05E3   SYS      $5E3            ; System call to 5E3
$570    $AFAE   LD       I, $FAE         ; Load FAE into I
$572    $8B93   XOR      VB, V9          ; VB ^= V9
$574    $14CE   JP       $4CE            ; Jump to 4CE
$576    $76A4   ADD      V6, #A4         ; Add 164 to V6
$578    $0F26   SYS      $F26            ; System call to F26
$57A    $FA12   UNKNOWN  FA12            ; Unknown Fxxx instruction
$57C    $F683   UNKNOWN  F683            ; Unknown Fxxx instruction
$57E    $4C6F   SNE      VC, #6F         ; Skip if VC != 111
$580    $4865   SNE      V8, #65         ; Skip if V8 != 101
$582    $8277   SUBN     V2, V7          ; V2 = V7 - V2, VF = !borrow
$584    $706D   ADD      V0, #6D         ; Add 109 to V0
$586    $347E   SE       V4, #7E         ; Skip if V4 == 126
$588    $D6F0   DRW      V6, VF, #0      ; Draw 0-byte sprite at V6, VF
$58A    $5053   UNKNOWN  $5053           ; Unknown 5xxx instruction
$58C    $DD42   DRW      VD, V4, #2      ; Draw 2-byte sprite at VD, V4
$58E    $D1D2   DRW      V1, VD, #2      ; Draw 2-byte sprite at V1, VD
$590    $762E   ADD      V6, #2E         ; Add 46 to V6
$592    $E4CC   UNKNOWN  $E4CC           ; Unknown Exxx instruction
$594    $A82B   LD       I, $82B         ; Load 82B into I
$596    $B75F   JP       V0, $75F        ; Jump to V0 + 75F
$598    $9C69   UNKNOWN  $9C69           ; Unknown 9xxx instruction
$59A    $5EF8   UNKNOWN  $5EF8           ; Unknown 5xxx instruction
$59C    $524C   UNKNOWN  $524C           ; Unknown 5xxx instruction
$59E    $2346   CALL     $346            ; Call subroutine at 346
$5A0    $2B9B   CALL     $B9B            ; Call subroutine at B9B
$5A2    $EAC0   UNKNOWN  $EAC0           ; Unknown Exxx instruction
$5A4    $2AE0   CALL     $AE0            ; Call subroutine at AE0
$5A6    $A706   LD       I, $706         ; Load 706 into I
$5A8    $D24A   DRW      V2, V4, #A      ; Draw 10-byte sprite at V2, V4
$5AA    $06DF   SYS      $6DF            ; System call to 6DF
$5AC    $E4AD   UNKNOWN  $E4AD           ; Unknown Exxx instruction
$5AE    $E77F   UNKNOWN  $E77F           ; Unknown Exxx instruction
$5B0    $92F3   UNKNOWN  $92F3           ; Unknown 9xxx instruction
$5B2    $3E36   SE       VE, #36         ; Skip if VE == 54
$5B4    $2C28   CALL     $C28            ; Call subroutine at C28
$5B6    $2969   CALL     $969            ; Call subroutine at 969
$5B8    $6DE5   LD       VD, #E5         ; Load 229 into VD
$5BA    $A854   LD       I, $854         ; Load 854 into I
$5BC    $3D1E   SE       VD, #1E         ; Skip if VD == 30
$5BE    $2554   CALL     $554            ; Call subroutine at 554
$5C0    $25E9   CALL     $5E9            ; Call subroutine at 5E9
$5C2    $4A10   SNE      VA, #10         ; Skip if VA != 16
$5C4    $E828   UNKNOWN  $E828           ; Unknown Exxx instruction
$5C6    $8084   ADD      V0, V8          ; V0 += V8, VF = carry
$5C8    $23EF   CALL     $3EF            ; Call subroutine at 3EF
$5CA    $6FA1   LD       VF, #A1         ; Load 161 into VF
$5CC    $A7D8   LD       I, $7D8         ; Load 7D8 into I
$5CE    $ADA6   LD       I, $DA6         ; Load DA6 into I
$5D0    $C750   RND      V7, #50         ; V7 = random & 50
$5D2    $EE1E   UNKNOWN  $EE1E           ; Unknown Exxx instruction
$5D4    $5D71   UNKNOWN  $5D71           ; Unknown 5xxx instruction
$5D6    $FBD3   UNKNOWN  FBD3            ; Unknown Fxxx instruction
$5D8    $2990   CALL     $990            ; Call subroutine at 990
$5DA    $8F77   SUBN     VF, V7          ; VF = V7 - VF, VF = !borrow
$5DC    $ECF0   UNKNOWN  $ECF0           ; Unknown Exxx instruction
$5DE    $41BC   SNE      V1, #BC         ; Skip if V1 != 188
$5E0    $3948   SE       V9, #48         ; Skip if V9 == 72
$5E2    $FFD1   UNKNOWN  FFD1            ; Unknown Fxxx instruction
$5E4    $4A4C   SNE      VA, #4C         ; Skip if VA != 76
$5E6    $D48F   DRW      V4, V8, #F      ; Draw 15-byte sprite at V4, V8
$5E8    $EE4A   UNKNOWN  $EE4A           ; Unknown Exxx instruction
$5EA    $6193   LD       V1, #93         ; Load 147 into V1
$5EC    $9965   UNKNOWN  $9965           ; Unknown 9xxx instruction
$5EE    $EA60   UNKNOWN  $EA60           ; Unknown Exxx instruction
$5F0    $DFD5   DRW      VF, VD, #5      ; Draw 5-byte sprite at VF, VD
$5F2    $57B6   UNKNOWN  $57B6           ; Unknown 5xxx instruction
$5F4    $3FF7   SE       VF, #F7         ; Skip if VF == 247
$5F6    $472A   SNE      V7, #2A         ; Skip if V7 != 42
$5F8    $8BF3   XOR      VB, VF          ; VB ^= VF
$5FA    $A7D3   LD       I, $7D3         ; Load 7D3 into I
$5FC    $C5A1   RND      V5, #A1         ; V5 = random & A1
$5FE    $017C   SYS      $17C            ; System call to 17C
$600    $1C71   JP       $C71            ; Jump to C71
$602    $4089   SNE      V0, #89         ; Skip if V0 != 137
$604    $6CC5   LD       VC, #C5         ; Load 197 into VC
$606    $ABD6   LD       I, $BD6         ; Load BD6 into I
$608    $A23B   LD       I, $23B         ; Load 23B into I
$60A    $ABA8   LD       I, $BA8         ; Load BA8 into I
$60C    $77ED   ADD      V7, #ED         ; Add 237 to V7
$60E    $1627   JP       $627            ; Jump to 627
$610    $72D8   ADD      V2, #D8         ; Add 216 to V2
$612    $8573   XOR      V5, V7          ; V5 ^= V7
$614    $EAEA   UNKNOWN  $EAEA           ; Unknown Exxx instruction
$616    $45A0   SNE      V5, #A0         ; Skip if V5 != 160
$618    $46FD   SNE      V6, #FD         ; Skip if V6 != 253
$61A    $C75C   RND      V7, #5C         ; V7 = random & 5C
$61C    $2162   CALL     $162            ; Call subroutine at 162
$61E    $5D8D   UNKNOWN  $5D8D           ; Unknown 5xxx instruction
$620    $FFF8   UNKNOWN  FFF8            ; Unknown Fxxx instruction
$622    $76F4   ADD      V6, #F4         ; Add 244 to V6
$624    $E526   UNKNOWN  $E526           ; Unknown Exxx instruction
$626    $D060   DRW      V0, V6, #0      ; Draw 0-byte sprite at V0, V6
$628    $2852   CALL     $852            ; Call subroutine at 852
$62A    $4082   SNE      V0, #82         ; Skip if V0 != 130
$62C    $A1ED   LD       I, $1ED         ; Load 1ED into I
$62E    $58CE   UNKNOWN  $58CE           ; Unknown 5xxx instruction
$630    $00FC   SYS      $0FC            ; System call to 0FC
$632    $567E   UNKNOWN  $567E           ; Unknown 5xxx instruction
$634    $F8CE   UNKNOWN  F8CE            ; Unknown Fxxx instruction
$636    $8A65   SUB      VA, V6          ; VA -= V6, VF = !borrow
$638    $CDB3   RND      VD, #B3         ; VD = random & B3
$63A    $0D04   SYS      $D04            ; System call to D04
$63C    $C401   RND      V4, #01         ; V4 = random & 01
$63E    $7F98   ADD      VF, #98         ; Add 152 to VF
$640    $0E58   SYS      $E58            ; System call to E58
$642    $6287   LD       V2, #87         ; Load 135 into V2
$644    $31AC   SE       V1, #AC         ; Skip if V1 == 172
$646    $957D   UNKNOWN  $957D           ; Unknown 9xxx instruction
$648    $D3B3   DRW      V3, VB, #3      ; Draw 3-byte sprite at V3, VB
$64A    $9839   UNKNOWN  $9839           ; Unknown 9xxx instruction
$64C    $6A6D   LD       VA, #6D         ; Load 109 into VA
$64E    $23AA   CALL     $3AA            ; Call subroutine at 3AA
$650    $5A93   UNKNOWN  $5A93           ; Unknown 5xxx instruction
$652    $BA1E   JP       V0, $A1E        ; Jump to V0 + A1E
$654    $A24A   LD       I, $24A         ; Load 24A into I
$656    $A67D   LD       I, $67D         ; Load 67D into I
$658    $77CC   ADD      V7, #CC         ; Add 204 to V7
$65A    $A00D   LD       I, $00D         ; Load 00D into I
$65C    $0CBB   SYS      $CBB            ; System call to CBB
$65E    $C0A4   RND      V0, #A4         ; V0 = random & A4
$660    $56CC   UNKNOWN  $56CC           ; Unknown 5xxx instruction
$662    $7385   ADD      V3, #85         ; Add 133 to V3
$664    $C74B   RND      V7, #4B         ; V7 = random & 4B
$666    $6613   LD       V6, #13         ; Load 19 into V6
$668    $88BF   UNKNOWN  88BF            ; Unknown 8xxx instruction
$66A    $9CBA   UNKNOWN  $9CBA           ; Unknown 9xxx instruction
$66C    $A41C   LD       I, $41C         ; Load 41C into I
$66E    $1750   JP       $750            ; Jump to 750
$670    $532F   UNKNOWN  $532F           ; Unknown 5xxx instruction
$672    $8A4B   UNKNOWN  8A4B            ; Unknown 8xxx instruction
$674    $21BF   CALL     $1BF            ; Call subroutine at 1BF
$676    $3625   SE       V6, #25         ; Skip if V6 == 37
$678    $D3E6   DRW      V3, VE, #6      ; Draw 6-byte sprite at V3, VE
$67A    $8C3D   UNKNOWN  8C3D            ; Unknown 8xxx instruction
$67C    $C0E9   RND      V0, #E9         ; V0 = random & E9
$67E    $4269   SNE      V2, #69         ; Skip if V2 != 105
$680    $0EF9   SYS      $EF9            ; System call to EF9
$682    $E679   UNKNOWN  $E679           ; Unknown Exxx instruction
$684    $955E   UNKNOWN  $955E           ; Unknown 9xxx instruction
$686    $31C7   SE       V1, #C7         ; Skip if V1 == 199
$688    $EDF5   UNKNOWN  $EDF5           ; Unknown Exxx instruction
$68A    $14B0   JP       $4B0            ; Jump to 4B0
$68C    $3E6B   SE       VE, #6B         ; Skip if VE == 107
$68E    $1AD2   JP       $AD2            ; Jump to AD2
$690    $C3AE   RND      V3, #AE         ; V3 = random & AE
$692    $66F7   LD       V6, #F7         ; Load 247 into V6
$694    $C684   RND      V6, #84         ; V6 = random & 84
$696    $0E2D   SYS      $E2D            ; System call to E2D
$698    $F936   UNKNOWN  F936            ; Unknown Fxxx instruction
$69A    $32B6   SE       V2, #B6         ; Skip if V2 == 182
$69C    $1B6A   JP       $B6A            ; Jump to B6A
$69E    $EF11   UNKNOWN  $EF11           ; Unknown Exxx instruction
$6A0    $00ED   SYS      $0ED            ; System call to 0ED
$6A2    $DBA7   DRW      VB, VA, #7      ; Draw 7-byte sprite at VB, VA
$6A4    $B0C8   JP       V0, $0C8        ; Jump to V0 + 0C8
$6A6    $0FCB   SYS      $FCB            ; System call to FCB
$6A8    $CCB3   RND      VC, #B3         ; VC = random & B3
$6AA    $3F9A   SE       VF, #9A         ; Skip if VF == 154
$6AC    $2857   CALL     $857            ; Call subroutine at 857
$6AE    $25B1   CALL     $5B1            ; Call subroutine at 5B1
$6B0    $A7E3   LD       I, $7E3         ; Load 7E3 into I
$6B2    $F865   LD       V8, [I]         ; Load V0-V8 from I
$6B4    $8392   AND      V3, V9          ; V3 &= V9
$6B6    $8702   AND      V7, V0          ; V7 &= V0
$6B8    $1356   JP       $356            ; Jump to 356
$6BA    $5AB3   UNKNOWN  $5AB3           ; Unknown 5xxx instruction
$6BC    $1195   JP       $195            ; Jump to 195
$6BE    $4C22   SNE      VC, #22         ; Skip if VC != 34
$6C0    $9826   UNKNOWN  $9826           ; Unknown 9xxx instruction
$6C2    $C6F4   RND      V6, #F4         ; V6 = random & F4
$6C4    $2A96   CALL     $A96            ; Call subroutine at A96
$6C6    $638B   LD       V3, #8B         ; Load 139 into V3
$6C8    $CEA4   RND      VE, #A4         ; VE = random & A4
$6CA    $D9DA   DRW      V9, VD, #A      ; Draw 10-byte sprite at V9, VD
$6CC    $FB4E   UNKNOWN  FB4E            ; Unknown Fxxx instruction
$6CE    $C716   RND      V7, #16         ; V7 = random & 16
$6D0    $6638   LD       V6, #38         ; Load 56 into V6
$6D2    $4EB1   SNE      VE, #B1         ; Skip if VE != 177
$6D4    $FA22   UNKNOWN  FA22            ; Unknown Fxxx instruction
$6D6    $B5EB   JP       V0, $5EB        ; Jump to V0 + 5EB
$6D8    $BFED   JP       V0, $FED        ; Jump to V0 + FED
$6DA    $2625   CALL     $625            ; Call subroutine at 625
$6DC    $35DD   SE       V5, #DD         ; Skip if V5 == 221
$6DE    $F2FD   UNKNOWN  F2FD            ; Unknown Fxxx instruction
$6E0    $4F1C   SNE      VF, #1C         ; Skip if VF != 28
$6E2    $C716   RND      V7, #16         ; V7 = random & 16
$6E4    $5991   UNKNOWN  $5991           ; Unknown 5xxx instruction
$6E6    $60F0   LD       V0, #F0         ; Load 240 into V0
$6E8    $0F62   SYS      $F62            ; System call to F62
$6EA    $0768   SYS      $768            ; System call to 768
$6EC    $3306   SE       V3, #06         ; Skip if V3 == 6
$6EE    $BD0D   JP       V0, $D0D        ; Jump to V0 + D0D
$6F0    $14D1   JP       $4D1            ; Jump to 4D1
$6F2    $96F0   SNE      V6, VF          ; Skip if V6 != VF
$6F4    $1651   JP       $651            ; Jump to 651
$6F6    $BBFD   JP       V0, $BFD        ; Jump to V0 + BFD
$6F8    $68CC   LD       V8, #CC         ; Load 204 into V8
$6FA    $384D   SE       V8, #4D         ; Skip if V8 == 77
$6FC    $8721   OR       V7, V2          ; V7 |= V2
$6FE    $3D55   SE       VD, #55         ; Skip if VD == 85
$700    $C7DC   RND      V7, #DC         ; V7 = random & DC
$702    $A591   LD       I, $591         ; Load 591 into I
$704    $4BF0   SNE      VB, #F0         ; Skip if VB != 240
$706    $6A08   LD       VA, #08         ; Load 8 into VA
$708    $58D6   UNKNOWN  $58D6           ; Unknown 5xxx instruction
$70A    $82F9   UNKNOWN  82F9            ; Unknown 8xxx instruction
$70C    $ADDD   LD       I, $DDD         ; Load DDD into I
$70E    $2841   CALL     $841            ; Call subroutine at 841
$710    $EEC0   UNKNOWN  $EEC0           ; Unknown Exxx instruction
$712    $CD10   RND      VD, #10         ; VD = random & 10
$714    $5C0D   UNKNOWN  $5C0D           ; Unknown 5xxx instruction
$716    $7CCB   ADD      VC, #CB         ; Add 203 to VC
$718    $3C3F   SE       VC, #3F         ; Skip if VC == 63
$71A    $1094   JP       $094            ; Jump to 094
$71C    $7263   ADD      V2, #63         ; Add 99 to V2
$71E    $2B94   CALL     $B94            ; Call subroutine at B94
$720    $B114   JP       V0, $114        ; Jump to V0 + 114
$722    $8000   LD       V0, V0          ; V0 = V0
$724    $277B   CALL     $77B            ; Call subroutine at 77B
$726    $0CCD   SYS      $CCD            ; System call to CCD
$728    $F758   UNKNOWN  F758            ; Unknown Fxxx instruction
$72A    $9E9C   UNKNOWN  $9E9C           ; Unknown 9xxx instruction
$72C    $4E37   SNE      VE, #37         ; Skip if VE != 55
$72E    $0836   SYS      $836            ; System call to 836
$730    $ACDD   LD       I, $CDD         ; Load CDD into I
$732    $CFAC   RND      VF, #AC         ; VF = random & AC
$734    $55BE   UNKNOWN  $55BE           ; Unknown 5xxx instruction
$736    $ACF7   LD       I, $CF7         ; Load CF7 into I
$738    $599E   UNKNOWN  $599E           ; Unknown 5xxx instruction
$73A    $CE04   RND      VE, #04         ; VE = random & 04
$73C    $424D   SNE      V2, #4D         ; Skip if V2 != 77
$73E    $E2F1   UNKNOWN  $E2F1           ; Unknown Exxx instruction
$740    $C71C   RND      V7, #1C         ; V7 = random & 1C
$742    $36A3   SE       V6, #A3         ; Skip if V6 == 163
$744    $0BF7   SYS      $BF7            ; System call to BF7
$746    $5E13   UNKNOWN  $5E13           ; Unknown 5xxx instruction
$748    $4ABB   SNE      VA, #BB         ; Skip if VA != 187
$74A    $945D   UNKNOWN  $945D           ; Unknown 9xxx instruction
$74C    $2789   CALL     $789            ; Call subroutine at 789
$74E    $FAFD   UNKNOWN  FAFD            ; Unknown Fxxx instruction
$750    $07DC   SYS      $7DC            ; System call to 7DC
$752    $1335   JP       $335            ; Jump to 335
$754    $DE54   DRW      VE, V5, #4      ; Draw 4-byte sprite at VE, V5
$756    $2411   CALL     $411            ; Call subroutine at 411
$758    $C1BE   RND      V1, #BE         ; V1 = random & BE
$75A    $400E   SNE      V0, #0E         ; Skip if V0 != 14
$75C    $4AC4   SNE      VA, #C4         ; Skip if VA != 196
$75E    $6F46   LD       VF, #46         ; Load 70 into VF
$760    $903F   UNKNOWN  $903F           ; Unknown 9xxx instruction
$762    $5929   UNKNOWN  $5929           ; Unknown 5xxx instruction
$764    $0E81   SYS      $E81            ; System call to E81
$766    $2489   CALL     $489            ; Call subroutine at 489
$768    $B740   JP       V0, $740        ; Jump to V0 + 740
$76A    $63EC   LD       V3, #EC         ; Load 236 into V3
$76C    $E5D5   UNKNOWN  $E5D5           ; Unknown Exxx instruction
$76E    $3D05   SE       VD, #05         ; Skip if VD == 5
$770    $2B92   CALL     $B92            ; Call subroutine at B92
$772    $D149   DRW      V1, V4, #9      ; Draw 9-byte sprite at V1, V4
$774    $9DC4   UNKNOWN  $9DC4           ; Unknown 9xxx instruction
$776    $986F   UNKNOWN  $986F           ; Unknown 9xxx instruction
$778    $3481   SE       V4, #81         ; Skip if V4 == 129
$77A    $B8C3   JP       V0, $8C3        ; Jump to V0 + 8C3
$77C    $7456   ADD      V4, #56         ; Add 86 to V4
$77E    $B620   JP       V0, $620        ; Jump to V0 + 620
$780    $5CD6   UNKNOWN  $5CD6           ; Unknown 5xxx instruction
$782    $B346   JP       V0, $346        ; Jump to V0 + 346
$784    $0E72   SYS      $E72            ; System call to E72
$786    $B44B   JP       V0, $44B        ; Jump to V0 + 44B
$788    $6BEF   LD       VB, #EF         ; Load 239 into VB
$78A    $B601   JP       V0, $601        ; Jump to V0 + 601
$78C    $B74F   JP       V0, $74F        ; Jump to V0 + 74F
$78E    $578A   UNKNOWN  $578A           ; Unknown 5xxx instruction
$790    $48A6   SNE      V8, #A6         ; Skip if V8 != 166
$792    $5EBF   UNKNOWN  $5EBF           ; Unknown 5xxx instruction
$794    $732F   ADD      V3, #2F         ; Add 47 to V3
$796    $7F4B   ADD      VF, #4B         ; Add 75 to VF
$798    $F923   UNKNOWN  F923            ; Unknown Fxxx instruction
$79A    $D41A   DRW      V4, V1, #A      ; Draw 10-byte sprite at V4, V1
$79C    $1827   JP       $827            ; Jump to 827
$79E    $136A   JP       $36A            ; Jump to 36A
$7A0    $1E7D   JP       $E7D            ; Jump to E7D
$7A2    $7809   ADD      V8, #09         ; Add 9 to V8
$7A4    $BA02   JP       V0, $A02        ; Jump to V0 + A02
$7A6    $50CB   UNKNOWN  $50CB           ; Unknown 5xxx instruction
$7A8    $9BB1   UNKNOWN  $9BB1           ; Unknown 9xxx instruction
$7AA    $02FE   SYS      $2FE            ; System call to 2FE
$7AC    $F079   UNKNOWN  F079            ; Unknown Fxxx instruction
$7AE    $97F2   UNKNOWN  $97F2           ; Unknown 9xxx instruction
$7B0    $D367   DRW      V3, V6, #7      ; Draw 7-byte sprite at V3, V6
$7B2    $AE9F   LD       I, $E9F         ; Load E9F into I
$7B4    $CD92   RND      VD, #92         ; VD = random & 92
$7B6    $0180   SYS      $180            ; System call to 180
$7B8    $EC6E   UNKNOWN  $EC6E           ; Unknown Exxx instruction
$7BA    $EDF0   UNKNOWN  $EDF0           ; Unknown Exxx instruction
$7BC    $79FB   ADD      V9, #FB         ; Add 251 to V9
$7BE    $9E5F   UNKNOWN  $9E5F           ; Unknown 9xxx instruction
$7C0    $EDC5   UNKNOWN  $EDC5           ; Unknown Exxx instruction
$7C2    $3910   SE       V9, #10         ; Skip if V9 == 16
$7C4    $63BD   LD       V3, #BD         ; Load 189 into V3
$7C6    $26FE   CALL     $6FE            ; Call subroutine at 6FE
$7C8    $A356   LD       I, $356         ; Load 356 into I
$7CA    $1A59   JP       $A59            ; Jump to A59
$7CC    $B2FE   JP       V0, $2FE        ; Jump to V0 + 2FE
$7CE    $CC1E   RND      VC, #1E         ; VC = random & 1E
$7D0    $8213   XOR      V2, V1          ; V2 ^= V1
$7D2    $7D3C   ADD      VD, #3C         ; Add 60 to VD
$7D4    $A34C   LD       I, $34C         ; Load 34C into I
$7D6    $74C2   ADD      V4, #C2         ; Add 194 to V4
$7D8    $6881   LD       V8, #81         ; Load 129 into V8
$7DA    $1333   JP       $333            ; Jump to 333
$7DC    $6887   LD       V8, #87         ; Load 135 into V8
$7DE    $2CCA   CALL     $CCA            ; Call subroutine at CCA
$7E0    $EFF6   UNKNOWN  $EFF6           ; Unknown Exxx instruction
$7E2    $B233   JP       V0, $233        ; Jump to V0 + 233
$7E4    $68A7   LD       V8, #A7         ; Load 167 into V8
$7E6    $1DEA   JP       $DEA            ; Jump to DEA
$7E8    $2252   CALL     $252            ; Call subroutine at 252
$7EA    $92DD   UNKNOWN  $92DD           ; Unknown 9xxx instruction
$7EC    $F4DF   UNKNOWN  F4DF            ; Unknown Fxxx instruction
$7EE    $EE97   UNKNOWN  $EE97           ; Unknown Exxx instruction
$7F0    $E882   UNKNOWN  $E882           ; Unknown Exxx instruction
$7F2    $3374   SE       V3, #74         ; Skip if V3 == 116
$7F4    $613F   LD       V1, #3F         ; Load 63 into V1
$7F6    $24FF   CALL     $4FF            ; Call subroutine at 4FF
$7F8    $9B5A   UNKNOWN  $9B5A           ; Unknown 9xxx instruction
$7FA    $1B20   JP       $B20            ; Jump to B20
$7FC    $E7D0   UNKNOWN  $E7D0           ; Unknown Exxx instruction
$7FE    $EF26   UNKNOWN  $EF26           ; Unknown Exxx instruction
$800    $ECFA   UNKNOWN  $ECFA           ; Unknown Exxx instruction
$802    $9341   UNKNOWN  $9341           ; Unknown 9xxx instruction
$804    $28DF   CALL     $8DF            ; Call subroutine at 8DF
$806    $404C   SNE      V0, #4C         ; Skip if V0 != 76
$808    $0B70   SYS      $B70            ; System call to B70
$80A    $1D4D   JP       $D4D            ; Jump to D4D
$80C    $2037   CALL     $037            ; Call subroutine at 037
$80E    $0A8B   SYS      $A8B            ; System call to A8B
$810    $C7B2   RND      V7, #B2         ; V7 = random & B2
$812    $7E86   ADD      VE, #86         ; Add 134 to VE
$814    $A004   LD       I, $004         ; Load 004 into I
$816    $9F98   UNKNOWN  $9F98           ; Unknown 9xxx instruction
$818    $14D5   JP       $4D5            ; Jump to 4D5
$81A    $772A   ADD      V7, #2A         ; Add 42 to V7
$81C    $BFD3   JP       V0, $FD3        ; Jump to V0 + FD3
$81E    $6E6A   LD       VE, #6A         ; Load 106 into VE
$820    $DEA8   DRW      VE, VA, #8      ; Draw 8-byte sprite at VE, VA
$822    $07B5   SYS      $7B5            ; System call to 7B5
$824    $26B5   CALL     $6B5            ; Call subroutine at 6B5
$826    $6B81   LD       VB, #81         ; Load 129 into VB
$828    $F429   LD       F, V4           ; I = sprite address for digit V4
$82A    $A254   LD       I, $254         ; Load 254 into I
$82C    $AE44   LD       I, $E44         ; Load E44 into I
$82E    $E27E   UNKNOWN  $E27E           ; Unknown Exxx instruction
$830    $EE37   UNKNOWN  $EE37           ; Unknown Exxx instruction
$832    $CA06   RND      VA, #06         ; VA = random & 06
$834    $01A5   SYS      $1A5            ; System call to 1A5
$836    $33A3   SE       V3, #A3         ; Skip if V3 == 163
$838    $BCD2   JP       V0, $CD2        ; Jump to V0 + CD2
$83A    $CE61   RND      VE, #61         ; VE = random & 61
$83C    $AD7E   LD       I, $D7E         ; Load D7E into I
$83E    $2364   CALL     $364            ; Call subroutine at 364
$840    $1E3E   JP       $E3E            ; Jump to E3E
$842    $FA81   UNKNOWN  FA81            ; Unknown Fxxx instruction
$844    $4354   SNE      V3, #54         ; Skip if V3 != 84
$846    $9F14   UNKNOWN  $9F14           ; Unknown 9xxx instruction
$848    $CA49   RND      VA, #49         ; VA = random & 49
$84A    $960A   UNKNOWN  $960A           ; Unknown 9xxx instruction
$84C    $6F67   LD       VF, #67         ; Load 103 into VF
$84E    $99DC   UNKNOWN  $99DC           ; Unknown 9xxx instruction
$850    $9B1B   UNKNOWN  $9B1B           ; Unknown 9xxx instruction
$852    $0322   SYS      $322            ; System call to 322
$854    $B85D   JP       V0, $85D        ; Jump to V0 + 85D
$856    $DAF8   DRW      VA, VF, #8      ; Draw 8-byte sprite at VA, VF
$858    $C23C   RND      V2, #3C         ; V2 = random & 3C
$85A    $FA2B   UNKNOWN  FA2B            ; Unknown Fxxx instruction
$85C    $F463   UNKNOWN  F463            ; Unknown Fxxx instruction
$85E    $B700   JP       V0, $700        ; Jump to V0 + 700
$860    $F6DF   UNKNOWN  F6DF            ; Unknown Fxxx instruction
$862    $0F90   SYS      $F90            ; System call to F90
$864    $F74F   UNKNOWN  F74F            ; Unknown Fxxx instruction
$866    $091E   SYS      $91E            ; System call to 91E
$868    $8A18   UNKNOWN  8A18            ; Unknown 8xxx instruction
$86A    $0EBE   SYS      $EBE            ; System call to EBE
$86C    $DFCE   DRW      VF, VC, #E      ; Draw 14-byte sprite at VF, VC
$86E    $8DF9   UNKNOWN  8DF9            ; Unknown 8xxx instruction
$870    $8080   LD       V0, V8          ; V0 = V8
$872    $374B   SE       V7, #4B         ; Skip if V7 == 75
$874    $8F70   LD       VF, V7          ; VF = V7
$876    $12FF   JP       $2FF            ; Jump to 2FF
$878    $D8F4   DRW      V8, VF, #4      ; Draw 4-byte sprite at V8, VF
$87A    $823D   UNKNOWN  823D            ; Unknown 8xxx instruction
$87C    $71E3   ADD      V1, #E3         ; Add 227 to V1
$87E    $C426   RND      V4, #26         ; V4 = random & 26
$880    $E058   UNKNOWN  $E058           ; Unknown Exxx instruction
$882    $4E91   SNE      VE, #91         ; Skip if VE != 145
$884    $AD22   LD       I, $D22         ; Load D22 into I
$886    $9035   UNKNOWN  $9035           ; Unknown 9xxx instruction
$888    $E4E5   UNKNOWN  $E4E5           ; Unknown Exxx instruction
$88A    $0F1A   SYS      $F1A            ; System call to F1A
$88C    $4CC4   SNE      VC, #C4         ; Skip if VC != 196
$88E    $077C   SYS      $77C            ; System call to 77C
$890    $8067   SUBN     V0, V6          ; V0 = V6 - V0, VF = !borrow
$892    $B747   JP       V0, $747        ; Jump to V0 + 747
$894    $7DFC   ADD      VD, #FC         ; Add 252 to VD
$896    $5399   UNKNOWN  $5399           ; Unknown 5xxx instruction
$898    $54FE   UNKNOWN  $54FE           ; Unknown 5xxx instruction
$89A    $8F0C   UNKNOWN  8F0C            ; Unknown 8xxx instruction
$89C    $63FF   LD       V3, #FF         ; Load 255 into V3
$89E    $2080   CALL     $080            ; Call subroutine at 080
$8A0    $7456   ADD      V4, #56         ; Add 86 to V4
$8A2    $7AAC   ADD      VA, #AC         ; Add 172 to VA
$8A4    $80B5   SUB      V0, VB          ; V0 -= VB, VF = !borrow
$8A6    $EA14   UNKNOWN  $EA14           ; Unknown Exxx instruction
$8A8    $65AD   LD       V5, #AD         ; Load 173 into V5
$8AA    $032E   SYS      $32E            ; System call to 32E
$8AC    $58E0   SE       V8, VE          ; Skip if V8 == VE
$8AE    $F4A5   UNKNOWN  F4A5            ; Unknown Fxxx instruction
$8B0    $A9F2   LD       I, $9F2         ; Load 9F2 into I
$8B2    $F097   UNKNOWN  F097            ; Unknown Fxxx instruction
$8B4    $4696   SNE      V6, #96         ; Skip if V6 != 150
$8B6    $B91E   JP       V0, $91E        ; Jump to V0 + 91E
$8B8    $EC51   UNKNOWN  $EC51           ; Unknown Exxx instruction
$8BA    $174E   JP       $74E            ; Jump to 74E
$8BC    $B846   JP       V0, $846        ; Jump to V0 + 846
$8BE    $20F4   CALL     $0F4            ; Call subroutine at 0F4
$8C0    $FA94   UNKNOWN  FA94            ; Unknown Fxxx instruction
$8C2    $F281   UNKNOWN  F281            ; Unknown Fxxx instruction
$8C4    $6A93   LD       VA, #93         ; Load 147 into VA
$8C6    $A37F   LD       I, $37F         ; Load 37F into I
$8C8    $8399   UNKNOWN  8399            ; Unknown 8xxx instruction
$8CA    $9A5B   UNKNOWN  $9A5B           ; Unknown 9xxx instruction
$8CC    $F630   UNKNOWN  F630            ; Unknown Fxxx instruction
$8CE    $7C44   ADD      VC, #44         ; Add 68 to VC
$8D0    $8213   XOR      V2, V1          ; V2 ^= V1
$8D2    $DAD5   DRW      VA, VD, #5      ; Draw 5-byte sprite at VA, VD
$8D4    $876E   SHL      V7              ; V7 <<= 1, VF = MSB
$8D6    $E220   UNKNOWN  $E220           ; Unknown Exxx instruction
$8D8    $E9FB   UNKNOWN  $E9FB           ; Unknown Exxx instruction
$8DA    $C578   RND      V5, #78         ; V5 = random & 78
$8DC    $2F3B   CALL     $F3B            ; Call subroutine at F3B
$8DE    $C6D3   RND      V6, #D3         ; V6 = random & D3
$8E0    $3800   SE       V8, #00         ; Skip if V8 == 0
$8E2    $AAAC   LD       I, $AAC         ; Load AAC into I
$8E4    $65F2   LD       V5, #F2         ; Load 242 into V5
$8E6    $EF25   UNKNOWN  $EF25           ; Unknown Exxx instruction
$8E8    $6BCC   LD       VB, #CC         ; Load 204 into VB
$8EA    $FBE2   UNKNOWN  FBE2            ; Unknown Fxxx instruction
$8EC    $3EFC   SE       VE, #FC         ; Skip if VE == 252
$8EE    $F2E1   UNKNOWN  F2E1            ; Unknown Fxxx instruction
$8F0    $3F56   SE       VF, #56         ; Skip if VF == 86
$8F2    $6EEC   LD       VE, #EC         ; Load 236 into VE
$8F4    $ACA2   LD       I, $CA2         ; Load CA2 into I
$8F6    $8CE3   XOR      VC, VE          ; VC ^= VE
$8F8    $CDB6   RND      VD, #B6         ; VD = random & B6
$8FA    $54C8   UNKNOWN  $54C8           ; Unknown 5xxx instruction
$8FC    $DE68   DRW      VE, V6, #8      ; Draw 8-byte sprite at VE, V6
$8FE    $68CA   LD       V8, #CA         ; Load 202 into V8
$900    $B0DC   JP       V0, $0DC        ; Jump to V0 + 0DC
$902    $AB51   LD       I, $B51         ; Load B51 into I
$904    $B08E   JP       V0, $08E        ; Jump to V0 + 08E
$906    $003B   SYS      $03B            ; System call to 03B
$908    $229E   CALL     $29E            ; Call subroutine at 29E
$90A    $7608   ADD      V6, #08         ; Add 8 to V6
$90C    $2D19   CALL     $D19            ; Call subroutine at D19
$90E    $CD05   RND      VD, #05         ; VD = random & 05
$910    $CB41   RND      VB, #41         ; VB = random & 41
$912    $82FF   UNKNOWN  82FF            ; Unknown 8xxx instruction
$914    $5682   UNKNOWN  $5682           ; Unknown 5xxx instruction
$916    $8F57   SUBN     VF, V5          ; VF = V5 - VF, VF = !borrow
$918    $E728   UNKNOWN  $E728           ; Unknown Exxx instruction
$91A    $B58D   JP       V0, $58D        ; Jump to V0 + 58D
$91C    $E178   UNKNOWN  $E178           ; Unknown Exxx instruction
$91E    $7C66   ADD      VC, #66         ; Add 102 to VC
$920    $37D8   SE       V7, #D8         ; Skip if V7 == 216
$922    $4BDB   SNE      VB, #DB         ; Skip if VB != 219
$924    $07E0   SYS      $7E0            ; System call to 7E0
$926    $F53F   UNKNOWN  F53F            ; Unknown Fxxx instruction
$928    $E1A2   UNKNOWN  $E1A2           ; Unknown Exxx instruction
$92A    $744F   ADD      V4, #4F         ; Add 79 to V4
$92C    $91C2   UNKNOWN  $91C2           ; Unknown 9xxx instruction
$92E    $D32A   DRW      V3, V2, #A      ; Draw 10-byte sprite at V3, V2
$930    $6CB1   LD       VC, #B1         ; Load 177 into VC
$932    $DC92   DRW      VC, V9, #2      ; Draw 2-byte sprite at VC, V9
$934    $4639   SNE      V6, #39         ; Skip if V6 != 57
$936    $E3FA   UNKNOWN  $E3FA           ; Unknown Exxx instruction
$938    $B300   JP       V0, $300        ; Jump to V0 + 300
$93A    $AFF8   LD       I, $FF8         ; Load FF8 into I
$93C    $D2A9   DRW      V2, VA, #9      ; Draw 9-byte sprite at V2, VA
$93E    $F6CF   UNKNOWN  F6CF            ; Unknown Fxxx instruction
$940    $00F2   SYS      $0F2            ; System call to 0F2
$942    $FC3C   UNKNOWN  FC3C            ; Unknown Fxxx instruction
$944    $E758   UNKNOWN  $E758           ; Unknown Exxx instruction
$946    $A0B3   LD       I, $0B3         ; Load 0B3 into I
$948    $7E8E   ADD      VE, #8E         ; Add 142 to VE
$94A    $7541   ADD      V5, #41         ; Add 65 to V5
$94C    $0DB6   SYS      $DB6            ; System call to DB6
$94E    $91E4   UNKNOWN  $91E4           ; Unknown 9xxx instruction
$950    $FC83   UNKNOWN  FC83            ; Unknown Fxxx instruction
$952    $C4E6   RND      V4, #E6         ; V4 = random & E6
$954    $19F0   JP       $9F0            ; Jump to 9F0
$956    $78C7   ADD      V8, #C7         ; Add 199 to V8
$958    $A7A2   LD       I, $7A2         ; Load 7A2 into I
$95A    $496B   SNE      V9, #6B         ; Skip if V9 != 107
$95C    $EE1A   UNKNOWN  $EE1A           ; Unknown Exxx instruction
$95E    $4867   SNE      V8, #67         ; Skip if V8 != 103
$960    $C805   RND      V8, #05         ; V8 = random & 05
$962    $ABDD   LD       I, $BDD         ; Load BDD into I
$964    $857D   UNKNOWN  857D            ; Unknown 8xxx instruction
$966    $0D3F   SYS      $D3F            ; System call to D3F
$968    $D0C5   DRW      V0, VC, #5      ; Draw 5-byte sprite at V0, VC
$96A    $CB35   RND      VB, #35         ; VB = random & 35
$96C    $E0BC   UNKNOWN  $E0BC           ; Unknown Exxx instruction
$96E    $9147   UNKNOWN  $9147           ; Unknown 9xxx instruction
$970    $14BC   JP       $4BC            ; Jump to 4BC
$972    $DF1C   DRW      VF, V1, #C      ; Draw 12-byte sprite at VF, V1
$974    $FAB8   UNKNOWN  FAB8            ; Unknown Fxxx instruction
$976    $0DA2   SYS      $DA2            ; System call to DA2
$978    $6AF9   LD       VA, #F9         ; Load 249 into VA
$97A    $132B   JP       $32B            ; Jump to 32B
$97C    $BF72   JP       V0, $F72        ; Jump to V0 + F72
$97E    $0E10   SYS      $E10            ; System call to E10
$980    $44EE   SNE      V4, #EE         ; Skip if V4 != 238
$982    $3D39   SE       VD, #39         ; Skip if VD == 57
$984    $C1FA   RND      V1, #FA         ; V1 = random & FA
$986    $CEAC   RND      VE, #AC         ; VE = random & AC
$988    $D640   DRW      V6, V4, #0      ; Draw 0-byte sprite at V6, V4
$98A    $60EF   LD       V0, #EF         ; Load 239 into V0
$98C    $F302   UNKNOWN  F302            ; Unknown Fxxx instruction
$98E    $F112   UNKNOWN  F112            ; Unknown Fxxx instruction
$990    $BB20   JP       V0, $B20        ; Jump to V0 + B20
$992    $CB2A   RND      VB, #2A         ; VB = random & 2A
$994    $0AAA   SYS      $AAA            ; System call to AAA
$996    $3130   SE       V1, #30         ; Skip if V1 == 48
$998    $F004   UNKNOWN  F004            ; Unknown Fxxx instruction
$99A    $D672   DRW      V6, V7, #2      ; Draw 2-byte sprite at V6, V7
$99C    $3F6C   SE       VF, #6C         ; Skip if VF == 108
$99E    $EAC4   UNKNOWN  $EAC4           ; Unknown Exxx instruction
$9A0    $488E   SNE      V8, #8E         ; Skip if V8 != 142
$9A2    $0AE1   SYS      $AE1            ; System call to AE1
$9A4    $CCA1   RND      VC, #A1         ; VC = random & A1
$9A6    $AB80   LD       I, $B80         ; Load B80 into I
$9A8    $B539   JP       V0, $539        ; Jump to V0 + 539
$9AA    $7917   ADD      V9, #17         ; Add 23 to V9
$9AC    $8338   UNKNOWN  8338            ; Unknown 8xxx instruction
$9AE    $75AB   ADD      V5, #AB         ; Add 171 to V5
$9B0    $6CCE   LD       VC, #CE         ; Load 206 into VC
$9B2    $5AA6   UNKNOWN  $5AA6           ; Unknown 5xxx instruction
$9B4    $7FB1   ADD      VF, #B1         ; Add 177 to VF
$9B6    $35D0   SE       V5, #D0         ; Skip if V5 == 208
$9B8    $2599   CALL     $599            ; Call subroutine at 599
$9BA    $190C   JP       $90C            ; Jump to 90C
$9BC    $C05F   RND      V0, #5F         ; V0 = random & 5F
$9BE    $0740   SYS      $740            ; System call to 740
$9C0    $9728   UNKNOWN  $9728           ; Unknown 9xxx instruction
$9C2    $E679   UNKNOWN  $E679           ; Unknown Exxx instruction
$9C4    $EC4B   UNKNOWN  $EC4B           ; Unknown Exxx instruction
$9C6    $9563   UNKNOWN  $9563           ; Unknown 9xxx instruction
$9C8    $AC02   LD       I, $C02         ; Load C02 into I
$9CA    $8FA8   UNKNOWN  8FA8            ; Unknown 8xxx instruction
$9CC    $98C6   UNKNOWN  $98C6           ; Unknown 9xxx instruction
$9CE    $E64D   UNKNOWN  $E64D           ; Unknown Exxx instruction
$9D0    $AD22   LD       I, $D22         ; Load D22 into I
$9D2    $3048   SE       V0, #48         ; Skip if V0 == 72
$9D4    $9F67   UNKNOWN  $9F67           ; Unknown 9xxx instruction
$9D6    $1780   JP       $780            ; Jump to 780
$9D8    $5AA6   UNKNOWN  $5AA6           ; Unknown 5xxx instruction
$9DA    $6AC4   LD       VA, #C4         ; Load 196 into VA
$9DC    $3CED   SE       VC, #ED         ; Skip if VC == 237
$9DE    $3718   SE       V7, #18         ; Skip if V7 == 24
$9E0    $4525   SNE      V5, #25         ; Skip if V5 != 37
$9E2    $8B8D   UNKNOWN  8B8D            ; Unknown 8xxx instruction
$9E4    $C625   RND      V6, #25         ; V6 = random & 25
$9E6    $B83E   JP       V0, $83E        ; Jump to V0 + 83E
$9E8    $4DE2   SNE      VD, #E2         ; Skip if VD != 226
$9EA    $7228   ADD      V2, #28         ; Add 40 to V2
$9EC    $1CA1   JP       $CA1            ; Jump to CA1
$9EE    $109A   JP       $09A            ; Jump to 09A
$9F0    $50DD   UNKNOWN  $50DD           ; Unknown 5xxx instruction
$9F2    $FE74   UNKNOWN  FE74            ; Unknown Fxxx instruction
$9F4    $8A7D   UNKNOWN  8A7D            ; Unknown 8xxx instruction
$9F6    $A007   LD       I, $007         ; Load 007 into I
$9F8    $3248   SE       V2, #48         ; Skip if V2 == 72
$9FA    $AD23   LD       I, $D23         ; Load D23 into I
$9FC    $6BA2   LD       VB, #A2         ; Load 162 into VB
$9FE    $077F   SYS      $77F            ; System call to 77F
$A00    $8766   SHR      V7              ; V7 >>= 1, VF = LSB
$A02    $DF68   DRW      VF, V6, #8      ; Draw 8-byte sprite at VF, V6
$A04    $8710   LD       V7, V1          ; V7 = V1
$A06    $F0A7   UNKNOWN  F0A7            ; Unknown Fxxx instruction
$A08    $9067   UNKNOWN  $9067           ; Unknown 9xxx instruction
$A0A    $CBF3   RND      VB, #F3         ; VB = random & F3
$A0C    $C04B   RND      V0, #4B         ; V0 = random & 4B
$A0E    $5EE8   UNKNOWN  $5EE8           ; Unknown 5xxx instruction
$A10    $5699   UNKNOWN  $5699           ; Unknown 5xxx instruction
$A12    $5A8F   UNKNOWN  $5A8F           ; Unknown 5xxx instruction
$A14    $A360   LD       I, $360         ; Load 360 into I
$A16    $E844   UNKNOWN  $E844           ; Unknown Exxx instruction
$A18    $F2F8   UNKNOWN  F2F8            ; Unknown Fxxx instruction
$A1A    $A420   LD       I, $420         ; Load 420 into I
$A1C    $0A3F   SYS      $A3F            ; System call to A3F
$A1E    $054F   SYS      $54F            ; System call to 54F
$A20    $F778   UNKNOWN  F778            ; Unknown Fxxx instruction
$A22    $D5E9   DRW      V5, VE, #9      ; Draw 9-byte sprite at V5, VE
$A24    $D988   DRW      V9, V8, #8      ; Draw 8-byte sprite at V9, V8
$A26    $3882   SE       V8, #82         ; Skip if V8 == 130
$A28    $46E8   SNE      V6, #E8         ; Skip if V6 != 232
$A2A    $E840   UNKNOWN  $E840           ; Unknown Exxx instruction
$A2C    $AA2F   LD       I, $A2F         ; Load A2F into I
$A2E    $AFAF   LD       I, $FAF         ; Load FAF into I
$A30    $7068   ADD      V0, #68         ; Add 104 to V0
$A32    $C742   RND      V7, #42         ; V7 = random & 42
$A34    $2C75   CALL     $C75            ; Call subroutine at C75
$A36    $0AE5   SYS      $AE5            ; System call to AE5
$A38    $CB85   RND      VB, #85         ; VB = random & 85
$A3A    $88E7   SUBN     V8, VE          ; V8 = VE - V8, VF = !borrow
$A3C    $6172   LD       V1, #72         ; Load 114 into V1
$A3E    $61F7   LD       V1, #F7         ; Load 247 into V1
$A40    $43FC   SNE      V3, #FC         ; Skip if V3 != 252
$A42    $6EC5   LD       VE, #C5         ; Load 197 into VE
$A44    $244D   CALL     $44D            ; Call subroutine at 44D
$A46    $C263   RND      V2, #63         ; V2 = random & 63
$A48    $2216   CALL     $216            ; Call subroutine at 216
$A4A    $2417   CALL     $417            ; Call subroutine at 417
$A4C    $C387   RND      V3, #87         ; V3 = random & 87
$A4E    $94F0   SNE      V4, VF          ; Skip if V4 != VF
$A50    $556E   UNKNOWN  $556E           ; Unknown 5xxx instruction
$A52    $1E72   JP       $E72            ; Jump to E72
$A54    $7605   ADD      V6, #05         ; Add 5 to V6
$A56    $3BBF   SE       VB, #BF         ; Skip if VB == 191
$A58    $641C   LD       V4, #1C         ; Load 28 into V4
$A5A    $0A87   SYS      $A87            ; System call to A87
$A5C    $E56F   UNKNOWN  $E56F           ; Unknown Exxx instruction
$A5E    $AD54   LD       I, $D54         ; Load D54 into I
$A60    $F293   UNKNOWN  F293            ; Unknown Fxxx instruction
$A62    $E553   UNKNOWN  $E553           ; Unknown Exxx instruction
$A64    $B2DE   JP       V0, $2DE        ; Jump to V0 + 2DE
$A66    $0AC3   SYS      $AC3            ; System call to AC3
$A68    $1D43   JP       $D43            ; Jump to D43
$A6A    $2978   CALL     $978            ; Call subroutine at 978
$A6C    $811C   UNKNOWN  811C            ; Unknown 8xxx instruction
$A6E    $841C   UNKNOWN  841C            ; Unknown 8xxx instruction
$A70    $0908   SYS      $908            ; System call to 908
$A72    $D0DF   DRW      V0, VD, #F      ; Draw 15-byte sprite at V0, VD
$A74    $C2D1   RND      V2, #D1         ; V2 = random & D1
$A76    $B6E7   JP       V0, $6E7        ; Jump to V0 + 6E7
$A78    $32EC   SE       V2, #EC         ; Skip if V2 == 236
$A7A    $4568   SNE      V5, #68         ; Skip if V5 != 104
$A7C    $8779   UNKNOWN  8779            ; Unknown 8xxx instruction
$A7E    $D8CB   DRW      V8, VC, #B      ; Draw 11-byte sprite at V8, VC
$A80    $B13A   JP       V0, $13A        ; Jump to V0 + 13A
$A82    $E80F   UNKNOWN  $E80F           ; Unknown Exxx instruction
$A84    $14B1   JP       $4B1            ; Jump to 4B1
$A86    $D1C6   DRW      V1, VC, #6      ; Draw 6-byte sprite at V1, VC
$A88    $5603   UNKNOWN  $5603           ; Unknown 5xxx instruction
$A8A    $D7B2   DRW      V7, VB, #2      ; Draw 2-byte sprite at V7, VB
$A8C    $433D   SNE      V3, #3D         ; Skip if V3 != 61
$A8E    $8C9E   SHL      VC              ; VC <<= 1, VF = MSB
$A90    $A91B   LD       I, $91B         ; Load 91B into I
$A92    $A662   LD       I, $662         ; Load 662 into I
$A94    $0428   SYS      $428            ; System call to 428
$A96    $D756   DRW      V7, V5, #6      ; Draw 6-byte sprite at V7, V5
$A98    $B6BA   JP       V0, $6BA        ; Jump to V0 + 6BA
$A9A    $2CF2   CALL     $CF2            ; Call subroutine at CF2
$A9C    $18C2   JP       $8C2            ; Jump to 8C2
$A9E    $38A5   SE       V8, #A5         ; Skip if V8 == 165
$AA0    $0078   SYS      $078            ; System call to 078
$AA2    $16D8   JP       $6D8            ; Jump to 6D8
$AA4    $DF9D   DRW      VF, V9, #D      ; Draw 13-byte sprite at VF, V9
$AA6    $1BD9   JP       $BD9            ; Jump to BD9
$AA8    $C6C8   RND      V6, #C8         ; V6 = random & C8
$AAA    $CB64   RND      VB, #64         ; VB = random & 64
$AAC    $BC71   JP       V0, $C71        ; Jump to V0 + C71
$AAE    $0F3F   SYS      $F3F            ; System call to F3F
$AB0    $1E23   JP       $E23            ; Jump to E23
$AB2    $C899   RND      V8, #99         ; V8 = random & 99
$AB4    $1EA6   JP       $EA6            ; Jump to EA6
$AB6    $0E08   SYS      $E08            ; System call to E08
$AB8    $4288   SNE      V2, #88         ; Skip if V2 != 136
$ABA    $87CC   UNKNOWN  87CC            ; Unknown 8xxx instruction
$ABC    $6BED   LD       VB, #ED         ; Load 237 into VB
$ABE    $63E0   LD       V3, #E0         ; Load 224 into V3
$AC0    $CAD9   RND      VA, #D9         ; VA = random & D9
$AC2    $CFFB   RND      VF, #FB         ; VF = random & FB
$AC4    $0683   SYS      $683            ; System call to 683
$AC6    $DB6D   DRW      VB, V6, #D      ; Draw 13-byte sprite at VB, V6
$AC8    $F7D2   UNKNOWN  F7D2            ; Unknown Fxxx instruction
$ACA    $8B90   LD       VB, V9          ; VB = V9
$ACC    $8425   SUB      V4, V2          ; V4 -= V2, VF = !borrow
$ACE    $4D85   SNE      VD, #85         ; Skip if VD != 133
$AD0    $3CA7   SE       VC, #A7         ; Skip if VC == 167
$AD2    $19B5   JP       $9B5            ; Jump to 9B5
$AD4    $68A6   LD       V8, #A6         ; Load 166 into V8
$AD6    $C64A   RND      V6, #4A         ; V6 = random & 4A
$AD8    $F717   UNKNOWN  F717            ; Unknown Fxxx instruction
$ADA    $40A6   SNE      V0, #A6         ; Skip if V0 != 166
$ADC    $3FB5   SE       VF, #B5         ; Skip if VF == 181
$ADE    $D590   DRW      V5, V9, #0      ; Draw 0-byte sprite at V5, V9
$AE0    $7B2B   ADD      VB, #2B         ; Add 43 to VB
$AE2    $ED13   UNKNOWN  $ED13           ; Unknown Exxx instruction
$AE4    $B0CF   JP       V0, $0CF        ; Jump to V0 + 0CF
$AE6    $F917   UNKNOWN  F917            ; Unknown Fxxx instruction
$AE8    $727E   ADD      V2, #7E         ; Add 126 to V2
$AEA    $3008   SE       V0, #08         ; Skip if V0 == 8
$AEC    $3AB5   SE       VA, #B5         ; Skip if VA == 181
$AEE    $5269   UNKNOWN  $5269           ; Unknown 5xxx instruction
$AF0    $33D2   SE       V3, #D2         ; Skip if V3 == 210
$AF2    $38D4   SE       V8, #D4         ; Skip if V8 == 212
$AF4    $A806   LD       I, $806         ; Load 806 into I
$AF6    $7335   ADD      V3, #35         ; Add 53 to V3
$AF8    $35E1   SE       V5, #E1         ; Skip if V5 == 225
$AFA    $20B0   CALL     $0B0            ; Call subroutine at 0B0
$AFC    $8B17   SUBN     VB, V1          ; VB = V1 - VB, VF = !borrow
$AFE    $62F6   LD       V2, #F6         ; Load 246 into V2
$B00    $50A3   UNKNOWN  $50A3           ; Unknown 5xxx instruction
$B02    $0AA4   SYS      $AA4            ; System call to AA4
$B04    $9E30   SNE      VE, V3          ; Skip if VE != V3
$B06    $C617   RND      V6, #17         ; V6 = random & 17
$B08    $6967   LD       V9, #67         ; Load 103 into V9
$B0A    $E00A   UNKNOWN  $E00A           ; Unknown Exxx instruction
$B0C    $99E5   UNKNOWN  $99E5           ; Unknown 9xxx instruction
$B0E    $07BE   SYS      $7BE            ; System call to 7BE
$B10    $5B72   UNKNOWN  $5B72           ; Unknown 5xxx instruction
$B12    $CAF7   RND      VA, #F7         ; VA = random & F7
$B14    $9E73   UNKNOWN  $9E73           ; Unknown 9xxx instruction
$B16    $4858   SNE      V8, #58         ; Skip if V8 != 88
$B18    $8256   SHR      V2              ; V2 >>= 1, VF = LSB
$B1A    $2FBA   CALL     $FBA            ; Call subroutine at FBA
$B1C    $3424   SE       V4, #24         ; Skip if V4 == 36
$B1E    $6D5E   LD       VD, #5E         ; Load 94 into VD
$B20    $8431   OR       V4, V3          ; V4 |= V3
$B22    $FA32   UNKNOWN  FA32            ; Unknown Fxxx instruction
$B24    $33C4   SE       V3, #C4         ; Skip if V3 == 196
$B26    $7219   ADD      V2, #19         ; Add 25 to V2
$B28    $1343   JP       $343            ; Jump to 343
$B2A    $87EF   UNKNOWN  87EF            ; Unknown 8xxx instruction
$B2C    $A75F   LD       I, $75F         ; Load 75F into I
$B2E    $3455   SE       V4, #55         ; Skip if V4 == 85
$B30    $0F53   SYS      $F53            ; System call to F53
$B32    $7C97   ADD      VC, #97         ; Add 151 to VC
$B34    $41CB   SNE      V1, #CB         ; Skip if V1 != 203
$B36    $1B38   JP       $B38            ; Jump to B38
$B38    $CBDD   RND      VB, #DD         ; VB = random & DD
$B3A    $5F7E   UNKNOWN  $5F7E           ; Unknown 5xxx instruction
$B3C    $6706   LD       V7, #06         ; Load 6 into V7
$B3E    $84A1   OR       V4, VA          ; V4 |= VA
$B40    $5A9F   UNKNOWN  $5A9F           ; Unknown 5xxx instruction
$B42    $5A13   UNKNOWN  $5A13           ; Unknown 5xxx instruction
$B44    $32B7   SE       V2, #B7         ; Skip if V2 == 183
$B46    $AC72   LD       I, $C72         ; Load C72 into I
$B48    $3D47   SE       VD, #47         ; Skip if VD == 71
$B4A    $8A5D   UNKNOWN  8A5D            ; Unknown 8xxx instruction
$B4C    $A6D6   LD       I, $6D6         ; Load 6D6 into I
$B4E    $4679   SNE      V6, #79         ; Skip if V6 != 121
$B50    $6AB3   LD       VA, #B3         ; Load 179 into VA
$B52    $8753   XOR      V7, V5          ; V7 ^= V5
$B54    $098E   SYS      $98E            ; System call to 98E
$B56    $DF1D   DRW      VF, V1, #D      ; Draw 13-byte sprite at VF, V1
$B58    $64EC   LD       V4, #EC         ; Load 236 into V4
$B5A    $1AC2   JP       $AC2            ; Jump to AC2
$B5C    $1A1C   JP       $A1C            ; Jump to A1C
$B5E    $9880   SNE      V8, V8          ; Skip if V8 != V8
$B60    $827E   SHL      V2              ; V2 <<= 1, VF = MSB
$B62    $DC32   DRW      VC, V3, #2      ; Draw 2-byte sprite at VC, V3
$B64    $3972   SE       V9, #72         ; Skip if V9 == 114
$B66    $9801   UNKNOWN  $9801           ; Unknown 9xxx instruction
$B68    $94BB   UNKNOWN  $94BB           ; Unknown 9xxx instruction
$B6A    $31C2   SE       V1, #C2         ; Skip if V1 == 194
$B6C    $6D73   LD       VD, #73         ; Load 115 into VD
$B6E    $1494   JP       $494            ; Jump to 494
$B70    $999A   UNKNOWN  $999A           ; Unknown 9xxx instruction
$B72    $E078   UNKNOWN  $E078           ; Unknown Exxx instruction
$B74    $EC26   UNKNOWN  $EC26           ; Unknown Exxx instruction
$B76    $F7C9   UNKNOWN  F7C9            ; Unknown Fxxx instruction
$B78    $C9D6   RND      V9, #D6         ; V9 = random & D6
$B7A    $11F0   JP       $1F0            ; Jump to 1F0
$B7C    $1C4A   JP       $C4A            ; Jump to C4A
$B7E    $407A   SNE      V0, #7A         ; Skip if V0 != 122
$B80    $E7AF   UNKNOWN  $E7AF           ; Unknown Exxx instruction
$B82    $F169   UNKNOWN  F169            ; Unknown Fxxx instruction
$B84    $E4CA   UNKNOWN  $E4CA           ; Unknown Exxx instruction
$B86    $D924   DRW      V9, V2, #4      ; Draw 4-byte sprite at V9, V2
$B88    $CF48   RND      VF, #48         ; VF = random & 48
$B8A    $853E   SHL      V5              ; V5 <<= 1, VF = MSB
$B8C    $E1AF   UNKNOWN  $E1AF           ; Unknown Exxx instruction
$B8E    $BABA   JP       V0, $ABA        ; Jump to V0 + ABA
$B90    $B63F   JP       V0, $63F        ; Jump to V0 + 63F
$B92    $47E4   SNE      V7, #E4         ; Skip if V7 != 228
$B94    $5A60   SE       VA, V6          ; Skip if VA == V6
$B96    $4F1B   SNE      VF, #1B         ; Skip if VF != 27
$B98    $AEE1   LD       I, $EE1         ; Load EE1 into I
$B9A    $7C3C   ADD      VC, #3C         ; Add 60 to VC
$B9C    $0452   SYS      $452            ; System call to 452
$B9E    $000C   SYS      $00C            ; System call to 00C
$BA0    $AD20   LD       I, $D20         ; Load D20 into I
$BA2    $3EF4   SE       VE, #F4         ; Skip if VE == 244
$BA4    $37AF   SE       V7, #AF         ; Skip if V7 == 175
$BA6    $C2E8   RND      V2, #E8         ; V2 = random & E8
$BA8    $594A   UNKNOWN  $594A           ; Unknown 5xxx instruction
$BAA    $E122   UNKNOWN  $E122           ; Unknown Exxx instruction
$BAC    $F52B   UNKNOWN  F52B            ; Unknown Fxxx instruction
$BAE    $0E1A   SYS      $E1A            ; System call to E1A
$BB0    $7D0F   ADD      VD, #0F         ; Add 15 to VD
$BB2    $8B00   LD       VB, V0          ; VB = V0
$BB4    $2E30   CALL     $E30            ; Call subroutine at E30
$BB6    $0DE3   SYS      $DE3            ; System call to DE3
$BB8    $77E6   ADD      V7, #E6         ; Add 230 to V7
$BBA    $8692   AND      V6, V9          ; V6 &= V9
$BBC    $2807   CALL     $807            ; Call subroutine at 807
$BBE    $F215   LD       DT, V2          ; Delay timer = V2
$BC0    $F1E4   UNKNOWN  F1E4            ; Unknown Fxxx instruction
$BC2    $DECC   DRW      VE, VC, #C      ; Draw 12-byte sprite at VE, VC
$BC4    $9536   UNKNOWN  $9536           ; Unknown 9xxx instruction
$BC6    $A02F   LD       I, $02F         ; Load 02F into I
$BC8    $C25F   RND      V2, #5F         ; V2 = random & 5F
$BCA    $613F   LD       V1, #3F         ; Load 63 into V1
$BCC    $E34B   UNKNOWN  $E34B           ; Unknown Exxx instruction
$BCE    $882F   UNKNOWN  882F            ; Unknown 8xxx instruction
$BD0    $6620   LD       V6, #20         ; Load 32 into V6
$BD2    $B62E   JP       V0, $62E        ; Jump to V0 + 62E
$BD4    $E7DF   UNKNOWN  $E7DF           ; Unknown Exxx instruction
$BD6    $A096   LD       I, $096         ; Load 096 into I
$BD8    $0E91   SYS      $E91            ; System call to E91
$BDA    $2BBE   CALL     $BBE            ; Call subroutine at BBE
$BDC    $C38D   RND      V3, #8D         ; V3 = random & 8D
$BDE    $81CC   UNKNOWN  81CC            ; Unknown 8xxx instruction
$BE0    $0924   SYS      $924            ; System call to 924
$BE2    $F551   UNKNOWN  F551            ; Unknown Fxxx instruction
$BE4    $68C1   LD       V8, #C1         ; Load 193 into V8
$BE6    $E9CC   UNKNOWN  $E9CC           ; Unknown Exxx instruction
$BE8    $D2FA   DRW      V2, VF, #A      ; Draw 10-byte sprite at V2, VF
$BEA    $DA52   DRW      VA, V5, #2      ; Draw 2-byte sprite at VA, V5
$BEC    $1264   JP       $264            ; Jump to 264
$BEE    $7FC8   ADD      VF, #C8         ; Add 200 to VF
$BF0    $03AC   SYS      $3AC            ; System call to 3AC
$BF2    $AB8D   LD       I, $B8D         ; Load B8D into I
$BF4    $2F65   CALL     $F65            ; Call subroutine at F65
$BF6    $727D   ADD      V2, #7D         ; Add 125 to V2
$BF8    $03D7   SYS      $3D7            ; System call to 3D7
$BFA    $A7E7   LD       I, $7E7         ; Load 7E7 into I
$BFC    $9C83   UNKNOWN  $9C83           ; Unknown 9xxx instruction
$BFE    $9E62   UNKNOWN  $9E62           ; Unknown 9xxx instruction
$C00    $76C7   ADD      V6, #C7         ; Add 199 to V6
$C02    $6AE5   LD       VA, #E5         ; Load 229 into VA
$C04    $62D0   LD       V2, #D0         ; Load 208 into V2
$C06    $9B24   UNKNOWN  $9B24           ; Unknown 9xxx instruction
$C08    $0B6D   SYS      $B6D            ; System call to B6D
$C0A    $426E   SNE      V2, #6E         ; Skip if V2 != 110
$C0C    $E75F   UNKNOWN  $E75F           ; Unknown Exxx instruction
$C0E    $9368   UNKNOWN  $9368           ; Unknown 9xxx instruction
$C10    $507F   UNKNOWN  $507F           ; Unknown 5xxx instruction
$C12    $B5F4   JP       V0, $5F4        ; Jump to V0 + 5F4
$C14    $BE6C   JP       V0, $E6C        ; Jump to V0 + E6C
$C16    $4AC6   SNE      VA, #C6         ; Skip if VA != 198
$C18    $45A1   SNE      V5, #A1         ; Skip if V5 != 161
$C1A    $70E2   ADD      V0, #E2         ; Add 226 to V0
$C1C    $E426   UNKNOWN  $E426           ; Unknown Exxx instruction
$C1E    $E3EA   UNKNOWN  $E3EA           ; Unknown Exxx instruction
$C20    $CD70   RND      VD, #70         ; VD = random & 70
$C22    $D140   DRW      V1, V4, #0      ; Draw 0-byte sprite at V1, V4
$C24    $4FFD   SNE      VF, #FD         ; Skip if VF != 253
$C26    $BEA0   JP       V0, $EA0        ; Jump to V0 + EA0
$C28    $8394   ADD      V3, V9          ; V3 += V9, VF = carry
$C2A    $D533   DRW      V5, V3, #3      ; Draw 3-byte sprite at V5, V3
$C2C    $3217   SE       V2, #17         ; Skip if V2 == 23
$C2E    $90C9   UNKNOWN  $90C9           ; Unknown 9xxx instruction
$C30    $EF1F   UNKNOWN  $EF1F           ; Unknown Exxx instruction
$C32    $BF3C   JP       V0, $F3C        ; Jump to V0 + F3C
$C34    $7059   ADD      V0, #59         ; Add 89 to V0
$C36    $489E   SNE      V8, #9E         ; Skip if V8 != 158
$C38    $B3E2   JP       V0, $3E2        ; Jump to V0 + 3E2
$C3A    $9ED3   UNKNOWN  $9ED3           ; Unknown 9xxx instruction
$C3C    $9809   UNKNOWN  $9809           ; Unknown 9xxx instruction
$C3E    $3507   SE       V5, #07         ; Skip if V5 == 7
$C40    $507D   UNKNOWN  $507D           ; Unknown 5xxx instruction
$C42    $82B6   SHR      V2              ; V2 >>= 1, VF = LSB
$C44    $F133   LD       B, V1           ; Store BCD of V1 at I, I+1, I+2
$C46    $D1EB   DRW      V1, VE, #B      ; Draw 11-byte sprite at V1, VE
$C48    $89B7   SUBN     V9, VB          ; V9 = VB - V9, VF = !borrow
$C4A    $9DC2   UNKNOWN  $9DC2           ; Unknown 9xxx instruction
$C4C    $32EE   SE       V2, #EE         ; Skip if V2 == 238
$C4E    $A1AE   LD       I, $1AE         ; Load 1AE into I
$C50    $398F   SE       V9, #8F         ; Skip if V9 == 143
$C52    $DDF8   DRW      VD, VF, #8      ; Draw 8-byte sprite at VD, VF
$C54    $C5FE   RND      V5, #FE         ; V5 = random & FE
$C56    $6FA6   LD       VF, #A6         ; Load 166 into VF
$C58    $DC61   DRW      VC, V6, #1      ; Draw 1-byte sprite at VC, V6
$C5A    $09FE   SYS      $9FE            ; System call to 9FE
$C5C    $1AFE   JP       $AFE            ; Jump to AFE
$C5E    $350F   SE       V5, #0F         ; Skip if V5 == 15
$C60    $8A75   SUB      VA, V7          ; VA -= V7, VF = !borrow
$C62    $9595   UNKNOWN  $9595           ; Unknown 9xxx instruction
$C64    $2975   CALL     $975            ; Call subroutine at 975
$C66    $8CD2   AND      VC, VD          ; VC &= VD
$C68    $1E4F   JP       $E4F            ; Jump to E4F
$C6A    $BBE0   JP       V0, $BE0        ; Jump to V0 + BE0
$C6C    $46C9   SNE      V6, #C9         ; Skip if V6 != 201
$C6E    $5D6B   UNKNOWN  $5D6B           ; Unknown 5xxx instruction
$C70    $1DCC   JP       $DCC            ; Jump to DCC
$C72    $6996   LD       V9, #96         ; Load 150 into V9
$C74    $B678   JP       V0, $678        ; Jump to V0 + 678
$C76    $FC66   UNKNOWN  FC66            ; Unknown Fxxx instruction
$C78    $1A9D   JP       $A9D            ; Jump to A9D
$C7A    $F38C   UNKNOWN  F38C            ; Unknown Fxxx instruction
$C7C    $D0EF   DRW      V0, VE, #F      ; Draw 15-byte sprite at V0, VE
$C7E    $9BF4   UNKNOWN  $9BF4           ; Unknown 9xxx instruction
$C80    $18BA   JP       $8BA            ; Jump to 8BA
$C82    $C39F   RND      V3, #9F         ; V3 = random & 9F
$C84    $8E6F   UNKNOWN  8E6F            ; Unknown 8xxx instruction
$C86    $9835   UNKNOWN  $9835           ; Unknown 9xxx instruction
$C88    $7DE1   ADD      VD, #E1         ; Add 225 to VD
$C8A    $49F7   SNE      V9, #F7         ; Skip if V9 != 247
$C8C    $D035   DRW      V0, V3, #5      ; Draw 5-byte sprite at V0, V3
$C8E    $CF81   RND      VF, #81         ; VF = random & 81
$C90    $2368   CALL     $368            ; Call subroutine at 368
$C92    $E6BF   UNKNOWN  $E6BF           ; Unknown Exxx instruction
$C94    $8208   UNKNOWN  8208            ; Unknown 8xxx instruction
$C96    $33DD   SE       V3, #DD         ; Skip if V3 == 221
$C98    $C528   RND      V5, #28         ; V5 = random & 28
$C9A    $5D81   UNKNOWN  $5D81           ; Unknown 5xxx instruction
$C9C    $1999   JP       $999            ; Jump to 999
$C9E    $CA02   RND      VA, #02         ; VA = random & 02
$CA0    $041A   SYS      $41A            ; System call to 41A
$CA2    $5680   SE       V6, V8          ; Skip if V6 == V8
$CA4    $FD0F   UNKNOWN  FD0F            ; Unknown Fxxx instruction
$CA6    $D381   DRW      V3, V8, #1      ; Draw 1-byte sprite at V3, V8
$CA8    $44B1   SNE      V4, #B1         ; Skip if V4 != 177
$CAA    $A30C   LD       I, $30C         ; Load 30C into I
$CAC    $9344   UNKNOWN  $9344           ; Unknown 9xxx instruction
$CAE    $F5D9   UNKNOWN  F5D9            ; Unknown Fxxx instruction
$CB0    $6358   LD       V3, #58         ; Load 88 into V3
$CB2    $BBBB   JP       V0, $BBB        ; Jump to V0 + BBB
$CB4    $9DCC   UNKNOWN  $9DCC           ; Unknown 9xxx instruction
$CB6    $0036   SYS      $036            ; System call to 036
$CB8    $2A38   CALL     $A38            ; Call subroutine at A38
$CBA    $56EA   UNKNOWN  $56EA           ; Unknown 5xxx instruction
$CBC    $7B1F   ADD      VB, #1F         ; Add 31 to VB
$CBE    $C477   RND      V4, #77         ; V4 = random & 77
$CC0    $DD15   DRW      VD, V1, #5      ; Draw 5-byte sprite at VD, V1
$CC2    $5C3B   UNKNOWN  $5C3B           ; Unknown 5xxx instruction
$CC4    $9AAA   UNKNOWN  $9AAA           ; Unknown 9xxx instruction
$CC6    $2934   CALL     $934            ; Call subroutine at 934
$CC8    $F299   UNKNOWN  F299            ; Unknown Fxxx instruction
$CCA    $899D   UNKNOWN  899D            ; Unknown 8xxx instruction
$CCC    $3F9A   SE       VF, #9A         ; Skip if VF == 154
$CCE    $149F   JP       $49F            ; Jump to 49F
$CD0    $21A8   CALL     $1A8            ; Call subroutine at 1A8
$CD2    $8B64   ADD      VB, V6          ; VB += V6, VF = carry
$CD4    $D900   DRW      V9, V0, #0      ; Draw 0-byte sprite at V9, V0
$CD6    $B421   JP       V0, $421        ; Jump to V0 + 421
$CD8    $BC16   JP       V0, $C16        ; Jump to V0 + C16
$CDA    $3B9E   SE       VB, #9E         ; Skip if VB == 158
$CDC    $9940   SNE      V9, V4          ; Skip if V9 != V4
$CDE    $8224   ADD      V2, V2          ; V2 += V2, VF = carry
$CE0    $DBE1   DRW      VB, VE, #1      ; Draw 1-byte sprite at VB, VE
$CE2    $D775   DRW      V7, V7, #5      ; Draw 5-byte sprite at V7, V7
$CE4    $AB3D   LD       I, $B3D         ; Load B3D into I
$CE6    $5A3A   UNKNOWN  $5A3A           ; Unknown 5xxx instruction
$CE8    $0241   SYS      $241            ; System call to 241
$CEA    $AD92   LD       I, $D92         ; Load D92 into I
$CEC    $1809   JP       $809            ; Jump to 809
$CEE    $21FC   CALL     $1FC            ; Call subroutine at 1FC
$CF0    $2287   CALL     $287            ; Call subroutine at 287
$CF2    $F684   UNKNOWN  F684            ; Unknown Fxxx instruction
$CF4    $DF61   DRW      VF, V6, #1      ; Draw 1-byte sprite at VF, V6
$CF6    $4D84   SNE      VD, #84         ; Skip if VD != 132
$CF8    $41FB   SNE      V1, #FB         ; Skip if V1 != 251
$CFA    $BE3B   JP       V0, $E3B        ; Jump to V0 + E3B
$CFC    $7723   ADD      V7, #23         ; Add 35 to V7
$CFE    $D364   DRW      V3, V6, #4      ; Draw 4-byte sprite at V3, V6
$D00    $1BF5   JP       $BF5            ; Jump to BF5
$D02    $3D1F   SE       VD, #1F         ; Skip if VD == 31
$D04    $3DE6   SE       VD, #E6         ; Skip if VD == 230
$D06    $F417   UNKNOWN  F417            ; Unknown Fxxx instruction
$D08    $B2DE   JP       V0, $2DE        ; Jump to V0 + 2DE
$D0A    $89FA   UNKNOWN  89FA            ; Unknown 8xxx instruction
$D0C    $4860   SNE      V8, #60         ; Skip if V8 != 96
$D0E    $0424   SYS      $424            ; System call to 424
$D10    $3F7F   SE       VF, #7F         ; Skip if VF == 127
$D12    $0FF1   SYS      $FF1            ; System call to FF1
$D14    $5EF1   UNKNOWN  $5EF1           ; Unknown 5xxx instruction
$D16    $4605   SNE      V6, #05         ; Skip if V6 != 5
$D18    $AC99   LD       I, $C99         ; Load C99 into I
$D1A    $BB4B   JP       V0, $B4B        ; Jump to V0 + B4B
$D1C    $ECE4   UNKNOWN  $ECE4           ; Unknown Exxx instruction
$D1E    $9070   SNE      V0, V7          ; Skip if V0 != V7
$D20    $5F44   UNKNOWN  $5F44           ; Unknown 5xxx instruction
$D22    $5146   UNKNOWN  $5146           ; Unknown 5xxx instruction
$D24    $8084   ADD      V0, V8          ; V0 += V8, VF = carry
$D26    $77C8   ADD      V7, #C8         ; Add 200 to V7
$D28    $8EDF   UNKNOWN  8EDF            ; Unknown 8xxx instruction
$D2A    $569A   UNKNOWN  $569A           ; Unknown 5xxx instruction
$D2C    $D6C6   DRW      V6, VC, #6      ; Draw 6-byte sprite at V6, VC
$D2E    $63D8   LD       V3, #D8         ; Load 216 into V3
$D30    $49FF   SNE      V9, #FF         ; Skip if V9 != 255
$D32    $2846   CALL     $846            ; Call subroutine at 846
$D34    $AFB5   LD       I, $FB5         ; Load FB5 into I
$D36    $9EF1   UNKNOWN  $9EF1           ; Unknown 9xxx instruction
$D38    $C9BA   RND      V9, #BA         ; V9 = random & BA
$D3A    $9A25   UNKNOWN  $9A25           ; Unknown 9xxx instruction
$D3C    $ADE0   LD       I, $DE0         ; Load DE0 into I
$D3E    $CD28   RND      VD, #28         ; VD = random & 28
$D40    $C0FC   RND      V0, #FC         ; V0 = random & FC
$D42    $6606   LD       V6, #06         ; Load 6 into V6
$D44    $BF7D   JP       V0, $F7D        ; Jump to V0 + F7D
$D46    $3D93   SE       VD, #93         ; Skip if VD == 147
$D48    $BE64   JP       V0, $E64        ; Jump to V0 + E64
$D4A    $BC34   JP       V0, $C34        ; Jump to V0 + C34
$D4C    $4C02   SNE      VC, #02         ; Skip if VC != 2
$D4E    $6320   LD       V3, #20         ; Load 32 into V3
$D50    $0FB9   SYS      $FB9            ; System call to FB9
$D52    $4794   SNE      V7, #94         ; Skip if V7 != 148
$D54    $8A9B   UNKNOWN  8A9B            ; Unknown 8xxx instruction
$D56    $49C5   SNE      V9, #C5         ; Skip if V9 != 197
$D58    $D0B8   DRW      V0, VB, #8      ; Draw 8-byte sprite at V0, VB
$D5A    $FB57   UNKNOWN  FB57            ; Unknown Fxxx instruction
$D5C    $1E6A   JP       $E6A            ; Jump to E6A
$D5E    $27C2   CALL     $7C2            ; Call subroutine at 7C2
$D60    $31EE   SE       V1, #EE         ; Skip if V1 == 238
$D62    $1973   JP       $973            ; Jump to 973
$D64    $D34A   DRW      V3, V4, #A      ; Draw 10-byte sprite at V3, V4
$D66    $D658   DRW      V6, V5, #8      ; Draw 8-byte sprite at V6, V5
$D68    $7EE7   ADD      VE, #E7         ; Add 231 to VE
$D6A    $1E64   JP       $E64            ; Jump to E64
$D6C    $5DF1   UNKNOWN  $5DF1           ; Unknown 5xxx instruction
$D6E    $98C4   UNKNOWN  $98C4           ; Unknown 9xxx instruction
$D70    $FBD0   UNKNOWN  FBD0            ; Unknown Fxxx instruction
$D72    $4B35   SNE      VB, #35         ; Skip if VB != 53
$D74    $D8FD   DRW      V8, VF, #D      ; Draw 13-byte sprite at V8, VF
$D76    $D23C   DRW      V2, V3, #C      ; Draw 12-byte sprite at V2, V3
$D78    $AE82   LD       I, $E82         ; Load E82 into I
$D7A    $31BF   SE       V1, #BF         ; Skip if V1 == 191
$D7C    $574E   UNKNOWN  $574E           ; Unknown 5xxx instruction
$D7E    $7F36   ADD      VF, #36         ; Add 54 to VF
$D80    $F802   UNKNOWN  F802            ; Unknown Fxxx instruction
$D82    $EAC6   UNKNOWN  $EAC6           ; Unknown Exxx instruction
$D84    $2C6D   CALL     $C6D            ; Call subroutine at C6D
$D86    $0521   SYS      $521            ; System call to 521
$D88    $F3A3   UNKNOWN  F3A3            ; Unknown Fxxx instruction
$D8A    $0B79   SYS      $B79            ; System call to B79
$D8C    $C55C   RND      V5, #5C         ; V5 = random & 5C
$D8E    $C8ED   RND      V8, #ED         ; V8 = random & ED
$D90    $8645   SUB      V6, V4          ; V6 -= V4, VF = !borrow
$D92    $FAE7   UNKNOWN  FAE7            ; Unknown Fxxx instruction
$D94    $A619   LD       I, $619         ; Load 619 into I
$D96    $A0A9   LD       I, $0A9         ; Load 0A9 into I
$D98    $45CD   SNE      V5, #CD         ; Skip if V5 != 205
$D9A    $10AD   JP       $0AD            ; Jump to 0AD
$D9C    $911C   UNKNOWN  $911C           ; Unknown 9xxx instruction
$D9E    $D552   DRW      V5, V5, #2      ; Draw 2-byte sprite at V5, V5
$DA0    $FC7B   UNKNOWN  FC7B            ; Unknown Fxxx instruction
$DA2    $45E8   SNE      V5, #E8         ; Skip if V5 != 232
$DA4    $6E37   LD       VE, #37         ; Load 55 into VE
$DA6    $84F2   AND      V4, VF          ; V4 &= VF
$DA8    $27FE   CALL     $7FE            ; Call subroutine at 7FE
$DAA    $4531   SNE      V5, #31         ; Skip if V5 != 49
$DAC    $B2A6   JP       V0, $2A6        ; Jump to V0 + 2A6
$DAE    $94E5   UNKNOWN  $94E5           ; Unknown 9xxx instruction
$DB0    $9217   UNKNOWN  $9217           ; Unknown 9xxx instruction
$DB2    $AA50   LD       I, $A50         ; Load A50 into I
$DB4    $9CF1   UNKNOWN  $9CF1           ; Unknown 9xxx instruction
$DB6    $7692   ADD      V6, #92         ; Add 146 to V6
$DB8    $D620   DRW      V6, V2, #0      ; Draw 0-byte sprite at V6, V2
$DBA    $2439   CALL     $439            ; Call subroutine at 439
$DBC    $66CC   LD       V6, #CC         ; Load 204 into V6
$DBE    $FF35   UNKNOWN  FF35            ; Unknown Fxxx instruction
$DC0    $3D07   SE       VD, #07         ; Skip if VD == 7
$DC2    $72BA   ADD      V2, #BA         ; Add 186 to V2
$DC4    $8F15   SUB      VF, V1          ; VF -= V1, VF = !borrow
$DC6    $458E   SNE      V5, #8E         ; Skip if V5 != 142
$DC8    $3D5A   SE       VD, #5A         ; Skip if VD == 90
$DCA    $DDAD   DRW      VD, VA, #D      ; Draw 13-byte sprite at VD, VA
$DCC    $EF9F   UNKNOWN  $EF9F           ; Unknown Exxx instruction
$DCE    $D8AF   DRW      V8, VA, #F      ; Draw 15-byte sprite at V8, VA
$DD0    $DA19   DRW      VA, V1, #9      ; Draw 9-byte sprite at VA, V1
$DD2    $FE1E   ADD      I, VE           ; I += VE
$DD4    $9729   UNKNOWN  $9729           ; Unknown 9xxx instruction
$DD6    $D29D   DRW      V2, V9, #D      ; Draw 13-byte sprite at V2, V9
$DD8    $88F1   OR       V8, VF          ; V8 |= VF
$DDA    $404D   SNE      V0, #4D         ; Skip if V0 != 77
$DDC    $7E0D   ADD      VE, #0D         ; Add 13 to VE
$DDE    $DE2F   DRW      VE, V2, #F      ; Draw 15-byte sprite at VE, V2
$DE0    $72A4   ADD      V2, #A4         ; Add 164 to V2
$DE2    $C996   RND      V9, #96         ; V9 = random & 96
$DE4    $0AA6   SYS      $AA6            ; System call to AA6
$DE6    $E963   UNKNOWN  $E963           ; Unknown Exxx instruction
$DE8    $8198   UNKNOWN  8198            ; Unknown 8xxx instruction
$DEA    $F9DE   UNKNOWN  F9DE            ; Unknown Fxxx instruction
$DEC    $2F9A   CALL     $F9A            ; Call subroutine at F9A
$DEE    $C45A   RND      V4, #5A         ; V4 = random & 5A
$DF0    $CEF5   RND      VE, #F5         ; VE = random & F5
$DF2    $BA40   JP       V0, $A40        ; Jump to V0 + A40
$DF4    $150B   JP       $50B            ; Jump to 50B
$DF6    $2D64   CALL     $D64            ; Call subroutine at D64
$DF8    $0DEC   SYS      $DEC            ; System call to DEC
$DFA    $C4A4   RND      V4, #A4         ; V4 = random & A4
$DFC    $2148   CALL     $148            ; Call subroutine at 148
$DFE    $928E   UNKNOWN  $928E           ; Unknown 9xxx instruction
$E00    $1F8D   JP       $F8D            ; Jump to F8D
$E02    $33A0   SE       V3, #A0         ; Skip if V3 == 160
$E04    $4805   SNE      V8, #05         ; Skip if V8 != 5
$E06    $AD43   LD       I, $D43         ; Load D43 into I
$E08    $7E63   ADD      VE, #63         ; Add 99 to VE
$E0A    $E5D1   UNKNOWN  $E5D1           ; Unknown Exxx instruction
$E0C    $2133   CALL     $133            ; Call subroutine at 133
$E0E    $7C0A   ADD      VC, #0A         ; Add 10 to VC
$E10    $C695   RND      V6, #95         ; V6 = random & 95
$E12    $8658   UNKNOWN  8658            ; Unknown 8xxx instruction
$E14    $A3FD   LD       I, $3FD         ; Load 3FD into I
$E16    $FEEB   UNKNOWN  FEEB            ; Unknown Fxxx instruction
$E18    $109B   JP       $09B            ; Jump to 09B
$E1A    $0133   SYS      $133            ; System call to 133
$E1C    $BDC8   JP       V0, $DC8        ; Jump to V0 + DC8
$E1E    $A3F0   LD       I, $3F0         ; Load 3F0 into I
$E20    $0930   SYS      $930            ; System call to 930
$E22    $E574   UNKNOWN  $E574           ; Unknown Exxx instruction
$E24    $9A84   UNKNOWN  $9A84           ; Unknown 9xxx instruction
$E26    $C94E   RND      V9, #4E         ; V9 = random & 4E
$E28    $2593   CALL     $593            ; Call subroutine at 593
$E2A    $8A8E   SHL      VA              ; VA <<= 1, VF = MSB
$E2C    $3871   SE       V8, #71         ; Skip if V8 == 113
$E2E    $EBAB   UNKNOWN  $EBAB           ; Unknown Exxx instruction
$E30    $321B   SE       V2, #1B         ; Skip if V2 == 27
$E32    $D497   DRW      V4, V9, #7      ; Draw 7-byte sprite at V4, V9
$E34    $973B   UNKNOWN  $973B           ; Unknown 9xxx instruction
$E36    $A552   LD       I, $552         ; Load 552 into I
$E38    $AA24   LD       I, $A24         ; Load A24 into I
$E3A    $1843   JP       $843            ; Jump to 843
$E3C    $F769   UNKNOWN  F769            ; Unknown Fxxx instruction
$E3E    $F40D   UNKNOWN  F40D            ; Unknown Fxxx instruction
$E40    $5CFF   UNKNOWN  $5CFF           ; Unknown 5xxx instruction
$E42    $E648   UNKNOWN  $E648           ; Unknown Exxx instruction
$E44    $8386   SHR      V3              ; V3 >>= 1, VF = LSB
$E46    $2A21   CALL     $A21            ; Call subroutine at A21
$E48    $D33A   DRW      V3, V3, #A      ; Draw 10-byte sprite at V3, V3
$E4A    $3D2B   SE       VD, #2B         ; Skip if VD == 43
$E4C    $7C3F   ADD      VC, #3F         ; Add 63 to VC
$E4E    $1C00   JP       $C00            ; Jump to C00
$E50    $0A2E   SYS      $A2E            ; System call to A2E
$E52    $A77B   LD       I, $77B         ; Load 77B into I
$E54    $9C52   UNKNOWN  $9C52           ; Unknown 9xxx instruction
$E56    $02CD   SYS      $2CD            ; System call to 2CD
$E58    $F504   UNKNOWN  F504            ; Unknown Fxxx instruction
$E5A    $E419   UNKNOWN  $E419           ; Unknown Exxx instruction
$E5C    $10D0   JP       $0D0            ; Jump to 0D0
$E5E    $6EA8   LD       VE, #A8         ; Load 168 into VE
$E60    $B896   JP       V0, $896        ; Jump to V0 + 896
$E62    $50ED   UNKNOWN  $50ED           ; Unknown 5xxx instruction
$E64    $4B05   SNE      VB, #05         ; Skip if VB != 5
$E66    $C624   RND      V6, #24         ; V6 = random & 24
$E68    $782F   ADD      V8, #2F         ; Add 47 to V8
$E6A    $487E   SNE      V8, #7E         ; Skip if V8 != 126
$E6C    $10C3   JP       $0C3            ; Jump to 0C3
$E6E    $B9A0   JP       V0, $9A0        ; Jump to V0 + 9A0
$E70    $394C   SE       V9, #4C         ; Skip if V9 == 76
$E72    $A353   LD       I, $353         ; Load 353 into I
$E74    $BF17   JP       V0, $F17        ; Jump to V0 + F17
$E76    $0EAE   SYS      $EAE            ; System call to EAE
$E78    $6E32   LD       VE, #32         ; Load 50 into VE
$E7A    $44B9   SNE      V4, #B9         ; Skip if V4 != 185
$E7C    $F664   UNKNOWN  F664            ; Unknown Fxxx instruction
$E7E    $9FF6   UNKNOWN  $9FF6           ; Unknown 9xxx instruction
$E80    $5B93   UNKNOWN  $5B93           ; Unknown 5xxx instruction
$E82    $F95B   UNKNOWN  F95B            ; Unknown Fxxx instruction
$E84    $B97C   JP       V0, $97C        ; Jump to V0 + 97C
$E86    $83F7   SUBN     V3, VF          ; V3 = VF - V3, VF = !borrow
$E88    $6A98   LD       VA, #98         ; Load 152 into VA
$E8A    $18CD   JP       $8CD            ; Jump to 8CD
$E8C    $7FB0   ADD      VF, #B0         ; Add 176 to VF
$E8E    $FB3F   UNKNOWN  FB3F            ; Unknown Fxxx instruction
$E90    $7B95   ADD      VB, #95         ; Add 149 to VB
$E92    $E9D0   UNKNOWN  $E9D0           ; Unknown Exxx instruction
$E94    $7575   ADD      V5, #75         ; Add 117 to V5
$E96    $9A26   UNKNOWN  $9A26           ; Unknown 9xxx instruction
$E98    $FCF3   UNKNOWN  FCF3            ; Unknown Fxxx instruction
$E9A    $8675   SUB      V6, V7          ; V6 -= V7, VF = !borrow
$E9C    $C83A   RND      V8, #3A         ; V8 = random & 3A
$E9E    $3DFA   SE       VD, #FA         ; Skip if VD == 250
$EA0    $ABD7   LD       I, $BD7         ; Load BD7 into I
$EA2    $AD4A   LD       I, $D4A         ; Load D4A into I
$EA4    $1ECE   JP       $ECE            ; Jump to ECE
$EA6    $650D   LD       V5, #0D         ; Load 13 into V5
$EA8    $5A26   UNKNOWN  $5A26           ; Unknown 5xxx instruction
$EAA    $7C29   ADD      VC, #29         ; Add 41 to VC
$EAC    $FCD0   UNKNOWN  FCD0            ; Unknown Fxxx instruction
$EAE    $F174   UNKNOWN  F174            ; Unknown Fxxx instruction
$EB0    $5DE4   UNKNOWN  $5DE4           ; Unknown 5xxx instruction
$EB2    $D27D   DRW      V2, V7, #D      ; Draw 13-byte sprite at V2, V7
$EB4    $0563   SYS      $563            ; System call to 563
$EB6    $FB9E   UNKNOWN  FB9E            ; Unknown Fxxx instruction
$EB8    $2DD1   CALL     $DD1            ; Call subroutine at DD1
$EBA    $8464   ADD      V4, V6          ; V4 += V6, VF = carry
$EBC    $7616   ADD      V6, #16         ; Add 22 to V6
$EBE    $F997   UNKNOWN  F997            ; Unknown Fxxx instruction
$EC0    $72FB   ADD      V2, #FB         ; Add 251 to V2
$EC2    $1B60   JP       $B60            ; Jump to B60
$EC4    $7986   ADD      V9, #86         ; Add 134 to V9
$EC6    $3EBC   SE       VE, #BC         ; Skip if VE == 188
$EC8    $7D86   ADD      VD, #86         ; Add 134 to VD
$ECA    $B48E   JP       V0, $48E        ; Jump to V0 + 48E
$ECC    $46B9   SNE      V6, #B9         ; Skip if V6 != 185
$ECE    $334F   SE       V3, #4F         ; Skip if V3 == 79
$ED0    $555B   UNKNOWN  $555B           ; Unknown 5xxx instruction
$ED2    $9804   UNKNOWN  $9804           ; Unknown 9xxx instruction
$ED4    $24A1   CALL     $4A1            ; Call subroutine at 4A1
$ED6    $0526   SYS      $526            ; System call to 526
$ED8    $1519   JP       $519            ; Jump to 519
$EDA    $08E7   SYS      $8E7            ; System call to 8E7
$EDC    $3718   SE       V7, #18         ; Skip if V7 == 24
$EDE    $D37A   DRW      V3, V7, #A      ; Draw 10-byte sprite at V3, V7
$EE0    $E1F9   UNKNOWN  $E1F9           ; Unknown Exxx instruction
$EE2    $4AEB   SNE      VA, #EB         ; Skip if VA != 235
$EE4    $A824   LD       I, $824         ; Load 824 into I
$EE6    $CDBC   RND      VD, #BC         ; VD = random & BC
$EE8    $79D5   ADD      V9, #D5         ; Add 213 to V9
$EEA    $2AFB   CALL     $AFB            ; Call subroutine at AFB
$EEC    $5AA7   UNKNOWN  $5AA7           ; Unknown 5xxx instruction
$EEE    $CA47   RND      VA, #47         ; VA = random & 47
$EF0    $97B7   UNKNOWN  $97B7           ; Unknown 9xxx instruction
$EF2    $F9A8   UNKNOWN  F9A8            ; Unknown Fxxx instruction
$EF4    $EB95   UNKNOWN  $EB95           ; Unknown Exxx instruction
$EF6    $F680   UNKNOWN  F680            ; Unknown Fxxx instruction
$EF8    $793A   ADD      V9, #3A         ; Add 58 to V9
$EFA    $8049   UNKNOWN  8049            ; Unknown 8xxx instruction
$EFC    $3F1D   SE       VF, #1D         ; Skip if VF == 29
$EFE    $3856   SE       V8, #56         ; Skip if V8 == 86
$F00    $C323   RND      V3, #23         ; V3 = random & 23
$F02    $7C3E   ADD      VC, #3E         ; Add 62 to VC
$F04    $F2B2   UNKNOWN  F2B2            ; Unknown Fxxx instruction
$F06    $E66C   UNKNOWN  $E66C           ; Unknown Exxx instruction
$F08    $0BD4   SYS      $BD4            ; System call to BD4
$F0A    $A060   LD       I, $060         ; Load 060 into I
$F0C    $AC4B   LD       I, $C4B         ; Load C4B into I
$F0E    $78CF   ADD      V8, #CF         ; Add 207 to V8
$F10    $4B57   SNE      VB, #57         ; Skip if VB != 87
$F12    $C23F   RND      V2, #3F         ; V2 = random & 3F
$F14    $11B6   JP       $1B6            ; Jump to 1B6
$F16    $31E9   SE       V1, #E9         ; Skip if V1 == 233
$F18    $F920   UNKNOWN  F920            ; Unknown Fxxx instruction
$F1A    $7BE3   ADD      VB, #E3         ; Add 227 to VB
$F1C    $ADA0   LD       I, $DA0         ; Load DA0 into I
$F1E    $43E1   SNE      V3, #E1         ; Skip if V3 != 225
$F20    $F9A5   UNKNOWN  F9A5            ; Unknown Fxxx instruction
$F22    $B68D   JP       V0, $68D        ; Jump to V0 + 68D
$F24    $5359   UNKNOWN  $5359           ; Unknown 5xxx instruction
$F26    $F355   LD       [I], V3         ; Store V0-V3 at I
$F28    $02FC   SYS      $2FC            ; System call to 2FC
$F2A    $1C92   JP       $C92            ; Jump to C92
$F2C    $D7EC   DRW      V7, VE, #C      ; Draw 12-byte sprite at V7, VE
$F2E    $A483   LD       I, $483         ; Load 483 into I
$F30    $AFE5   LD       I, $FE5         ; Load FE5 into I
$F32    $9093   UNKNOWN  $9093           ; Unknown 9xxx instruction
$F34    $86DA   UNKNOWN  86DA            ; Unknown 8xxx instruction
$F36    $8390   LD       V3, V9          ; V3 = V9
$F38    $6072   LD       V0, #72         ; Load 114 into V0
$F3A    $3315   SE       V3, #15         ; Skip if V3 == 21
$F3C    $A02A   LD       I, $02A         ; Load 02A into I
$F3E    $A738   LD       I, $738         ; Load 738 into I
$F40    $0BED   SYS      $BED            ; System call to BED
$F42    $C0B3   RND      V0, #B3         ; V0 = random & B3
$F44    $E7EA   UNKNOWN  $E7EA           ; Unknown Exxx instruction
$F46    $1982   JP       $982            ; Jump to 982
$F48    $86BD   UNKNOWN  86BD            ; Unknown 8xxx instruction
$F4A    $B4AD   JP       V0, $4AD        ; Jump to V0 + 4AD
$F4C    $82FE   SHL      V2              ; V2 <<= 1, VF = MSB
$F4E    $1C75   JP       $C75            ; Jump to C75
$F50    $6F87   LD       VF, #87         ; Load 135 into VF
$F52    $7289   ADD      V2, #89         ; Add 137 to V2
$F54    $F956   UNKNOWN  F956            ; Unknown Fxxx instruction
$F56    $462D   SNE      V6, #2D         ; Skip if V6 != 45
$F58    $FF06   UNKNOWN  FF06            ; Unknown Fxxx instruction
$F5A    $762C   ADD      V6, #2C         ; Add 44 to V6
$F5C    $6A73   LD       VA, #73         ; Load 115 into VA
$F5E    $E2DB   UNKNOWN  $E2DB           ; Unknown Exxx instruction
$F60    $96CC   UNKNOWN  $96CC           ; Unknown 9xxx instruction
$F62    $5DA1   UNKNOWN  $5DA1           ; Unknown 5xxx instruction
$F64    $A220   LD       I, $220         ; Load 220 into I
$F66    $044E   SYS      $44E            ; System call to 44E
$F68    $1E29   JP       $E29            ; Jump to E29
$F6A    $E6B5   UNKNOWN  $E6B5           ; Unknown Exxx instruction
$F6C    $AD7B   LD       I, $D7B         ; Load D7B into I
$F6E    $467B   SNE      V6, #7B         ; Skip if V6 != 123
$F70    $1898   JP       $898            ; Jump to 898
$F72    $21A3   CALL     $1A3            ; Call subroutine at 1A3
$F74    $CBB8   RND      VB, #B8         ; VB = random & B8
$F76    $4ED0   SNE      VE, #D0         ; Skip if VE != 208
$F78    $2384   CALL     $384            ; Call subroutine at 384
$F7A    $CF04   RND      VF, #04         ; VF = random & 04
$F7C    $0318   SYS      $318            ; System call to 318
$F7E    $3661   SE       V6, #61         ; Skip if V6 == 97
$F80    $BE81   JP       V0, $E81        ; Jump to V0 + E81
$F82    $25F2   CALL     $5F2            ; Call subroutine at 5F2
$F84    $AD6E   LD       I, $D6E         ; Load D6E into I
$F86    $AAA5   LD       I, $AA5         ; Load AA5 into I
$F88    $1ADE   JP       $ADE            ; Jump to ADE
$F8A    $C849   RND      V8, #49         ; V8 = random & 49
$F8C    $9599   UNKNOWN  $9599           ; Unknown 9xxx instruction
$F8E    $609B   LD       V0, #9B         ; Load 155 into V0
$F90    $C22D   RND      V2, #2D         ; V2 = random & 2D
$F92    $B227   JP       V0, $227        ; Jump to V0 + 227
$F94    $8602   AND      V6, V0          ; V6 &= V0
$F96    $5968   UNKNOWN  $5968           ; Unknown 5xxx instruction
$F98    $EB20   UNKNOWN  $EB20           ; Unknown Exxx instruction
$F9A    $76FE   ADD      V6, #FE         ; Add 254 to V6
$F9C    $363F   SE       V6, #3F         ; Skip if V6 == 63
$F9E    $F8A1   UNKNOWN  F8A1            ; Unknown Fxxx instruction
$FA0    $3407   SE       V4, #07         ; Skip if V4 == 7
$FA2    $D921   DRW      V9, V2, #1      ; Draw 1-byte sprite at V9, V2
$FA4    $69B9   LD       V9, #B9         ; Load 185 into V9
$FA6    $487D   SNE      V8, #7D         ; Skip if V8 != 125
$FA8    $974D   UNKNOWN  $974D           ; Unknown 9xxx instruction
$FAA    $A1F7   LD       I, $1F7         ; Load 1F7 into I
$FAC    $D92E   DRW      V9, V2, #E      ; Draw 14-byte sprite at V9, V2
$FAE    $4EE7   SNE      VE, #E7         ; Skip if VE != 231
$FB0    $3529   SE       V5, #29         ; Skip if V5 == 41
$FB2    $735B   ADD      V3, #5B         ; Add 91 to V3
$FB4    $120B   JP       $20B            ; Jump to 20B
$FB6    $162E   JP       $62E            ; Jump to 62E
$FB8    $C8CC   RND      V8, #CC         ; V8 = random & CC
$FBA    $FDCA   UNKNOWN  FDCA            ; Unknown Fxxx instruction
$FBC    $4110   SNE      V1, #10         ; Skip if V1 != 16
$FBE    $65D1   LD       V5, #D1         ; Load 209 into V5
$FC0    $E156   UNKNOWN  $E156           ; Unknown Exxx instruction
$FC2    $CE24   RND      VE, #24         ; VE = random & 24
$FC4    $30B1   SE       V0, #B1         ; Skip if V0 == 177
$FC6    $DBD4   DRW      VB, VD, #4      ; Draw 4-byte sprite at VB, VD
$FC8    $651C   LD       V5, #1C         ; Load 28 into V5
$FCA    $7F69   ADD      VF, #69         ; Add 105 to VF
$FCC    $C0E7   RND      V0, #E7         ; V0 = random & E7
$FCE    $2069   CALL     $069            ; Call subroutine at 069
$FD0    $5794   UNKNOWN  $5794           ; Unknown 5xxx instruction
$FD2    $1CC7   JP       $CC7            ; Jump to CC7
$FD4    $4002   SNE      V0, #02         ; Skip if V0 != 2
$FD6    $6234   LD       V2, #34         ; Load 52 into V2
$FD8    $0A23   SYS      $A23            ; System call to A23
$FDA    $4C59   SNE      VC, #59         ; Skip if VC != 89
$FDC    $37F5   SE       V7, #F5         ; Skip if V7 == 245
$FDE    $1926   JP       $926            ; Jump to 926
$FE0    $963E   UNKNOWN  $963E           ; Unknown 9xxx instruction
$FE2    $B47A   JP       V0, $47A        ; Jump to V0 + 47A
$FE4    $E3B6   UNKNOWN  $E3B6           ; Unknown Exxx instruction
$FE6    $49F7   SNE      V9, #F7         ; Skip if V9 != 247
$FE8    $02B7   SYS      $2B7            ; System call to 2B7
$FEA    $5878   UNKNOWN  $5878           ; Unknown 5xxx instruction
$FEC    $D4AD   DRW      V4, VA, #D      ; Draw 13-byte sprite at V4, VA
$FEE    $9CAA   UNKNOWN  $9CAA           ; Unknown 9xxx instruction
$FF0    $7C23   ADD      VC, #23         ; Add 35 to VC
$FF2    $BD79   JP       V0, $D79        ; Jump to V0 + D79
$FF4    $ADC2   LD       I, $DC2         ; Load DC2 into I
$FF6    $B4A0   JP       V0, $4A0        ; Jump to V0 + 4A0
$FF8    $679A   LD       V7, #9A         ; Load 154 into V7
$FFA    $2838   CALL     $838            ; Call subroutine at 838
$FFC    $7368   ADD      V3, #68         ; Add 104 to V3
$FFE    $2FF6   CALL     $FF6            ; Call subroutine at FF6

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 466 (26.0%)
  LD      : 247 (13.8%)
  JP      : 215 (12.0%)
  SE      : 126 ( 7.0%)
  SNE     : 120 ( 6.7%)
  RND     : 120 ( 6.7%)
  SYS     : 116 ( 6.5%)
  ADD     : 111 ( 6.2%)
  DRW     : 106 ( 5.9%)
  CALL    : 106 ( 5.9%)
  SUB     :  10 ( 0.6%)
  SUBN    :  10 ( 0.6%)
  SHR     :   9 ( 0.5%)
  OR      :   8 ( 0.4%)
  SHL     :   8 ( 0.4%)
  AND     :   7 ( 0.4%)
  XOR     :   7 ( 0.4%)

Memory Operations: 358 (20.0%)
Arithmetic Operations: 153 (8.5%)
