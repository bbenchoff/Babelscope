
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B3244D01_I37063_C1794_c008e8695a77.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 3244
Instance: 37063
Direction: descending
Final Array: [250, 210, 166, 140, 65, 53, 21, 19]
Operations: R:0 W:11 C:164 S:12

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 113
Sort Array References:
  $21C: LD I, $F50 ; Load F50 into I
  $220: LD I, $B0D ; Load B0D into I
  $24A: LD I, $14C ; Load 14C into I
  $26E: LD I, $AC3 ; Load AC3 into I
  $270: LD I, $202 ; Load 202 into I
  $290: LD I, $FEE ; Load FEE into I
  $2A0: LD I, $78A ; Load 78A into I
  $2B0: LD I, $189 ; Load 189 into I
  $2BE: LD I, $6C5 ; Load 6C5 into I
  $302: LD I, $68C ; Load 68C into I
  $314: LD I, $0B9 ; Load 0B9 into I
  $322: LD I, $739 ; Load 739 into I
  $328: LD I, $F11 ; Load F11 into I
  $346: LD I, $2E0 ; Load 2E0 into I
  $37A: LD I, $22E ; Load 22E into I
  $37C: LD I, $049 ; Load 049 into I
  $396: LD I, $1F3 ; Load 1F3 into I
  $3B2: LD I, $B63 ; Load B63 into I
  $3C4: LD I, $370 ; Load 370 into I
  $3D6: LD I, $00E ; Load 00E into I
  $3DA: LD I, $0D7 ; Load 0D7 into I
  $3E0: LD I, $32A ; Load 32A into I
  $3FE: LD I, $FF2 ; Load FF2 into I
  $426: LD I, $D8E ; Load D8E into I
  $458: LD I, $739 ; Load 739 into I
  $46A: LD I, $A9E ; Load A9E into I
  $498: LD I, $406 ; Load 406 into I
  $4BC: LD I, $B9A ; Load B9A into I
  $4D4: LD I, $1A0 ; Load 1A0 into I
  $4DA: LD I, $62D ; Load 62D into I
  $4FC: LD I, $E7C ; Load E7C into I
  $532: LD I, $98D ; Load 98D into I
  $560: LD I, $835 ; Load 835 into I
  $576: LD I, $754 ; Load 754 into I
  $580: LD I, $07E ; Load 07E into I
  $5B6: LD I, $979 ; Load 979 into I
  $5BE: LD I, $307 ; Load 307 into I
  $5F8: LD I, $720 ; Load 720 into I
  $656: LD I, $34F ; Load 34F into I
  $65A: LD I, $0AE ; Load 0AE into I
  $67A: LD I, $081 ; Load 081 into I
  $6B0: LD I, $6CA ; Load 6CA into I
  $6B6: LD I, $764 ; Load 764 into I
  $6BE: LD I, $351 ; Load 351 into I
  $724: LD I, $56D ; Load 56D into I
  $72A: LD I, $A5B ; Load A5B into I
  $73A: LD I, $951 ; Load 951 into I
  $854: LD I, $0C0 ; Load 0C0 into I
  $86C: LD I, $655 ; Load 655 into I
  $87E: LD I, $76F ; Load 76F into I
  $890: LD I, $ED2 ; Load ED2 into I
  $892: LD I, $7AC ; Load 7AC into I
  $8B8: LD I, $23D ; Load 23D into I
  $8E0: LD I, $F97 ; Load F97 into I
  $8F4: LD I, $2DE ; Load 2DE into I
  $93A: LD I, $456 ; Load 456 into I
  $942: LD I, $47E ; Load 47E into I
  $94E: LD I, $2DC ; Load 2DC into I
  $97A: LD I, $021 ; Load 021 into I
  $9DE: LD I, $780 ; Load 780 into I
  $9F6: LD I, $9CE ; Load 9CE into I
  $A16: LD I, $DDC ; Load DDC into I
  $A30: LD I, $DFB ; Load DFB into I
  $A44: LD I, $32E ; Load 32E into I
  $A4A: LD I, $03F ; Load 03F into I
  $A5E: LD I, $E56 ; Load E56 into I
  $A60: LD I, $A79 ; Load A79 into I
  $A82: LD I, $88B ; Load 88B into I
  $ACC: LD I, $9B7 ; Load 9B7 into I
  $AD0: LD I, $4AB ; Load 4AB into I
  $AD8: LD I, $A9E ; Load A9E into I
  $AFC: LD I, $D19 ; Load D19 into I
  $B4E: LD I, $428 ; Load 428 into I
  $B50: LD I, $195 ; Load 195 into I
  $B7C: LD I, $74C ; Load 74C into I
  $B7E: LD I, $21D ; Load 21D into I
  $B86: LD I, $5D9 ; Load 5D9 into I
  $B88: LD I, $6B7 ; Load 6B7 into I
  $BAE: LD I, $785 ; Load 785 into I
  $BB0: LD I, $991 ; Load 991 into I
  $BC6: LD I, $BB4 ; Load BB4 into I
  $BD6: LD I, $411 ; Load 411 into I
  $C12: LD I, $EEC ; Load EEC into I
  $C44: LD I, $DDD ; Load DDD into I
  $C82: LD I, $43A ; Load 43A into I
  $C90: LD I, $B93 ; Load B93 into I
  $CB4: LD I, $5D5 ; Load 5D5 into I
  $CD0: LD I, $DC0 ; Load DC0 into I
  $CF2: LD I, $26F ; Load 26F into I
  $D0C: LD I, $69B ; Load 69B into I
  $D0E: LD I, $CEA ; Load CEA into I
  $D6E: LD I, $27E ; Load 27E into I
  $DA0: LD I, $BBE ; Load BBE into I
  $DA6: LD I, $065 ; Load 065 into I
  $DC0: ADD I, V7 ; I ADDRESS MANIPULATION
  $DD0: LD I, $38B ; Load 38B into I
  $DEE: LD I, $06D ; Load 06D into I
  $E14: LD I, $3C7 ; Load 3C7 into I
  $E3C: LD I, $FD6 ; Load FD6 into I
  $E68: LD I, $BC6 ; Load BC6 into I
  $EC0: LD I, $9DD ; Load 9DD into I
  $EE6: LD I, $0C4 ; Load 0C4 into I
  $EEA: LD I, $B6D ; Load B6D into I
  $F3E: LD I, $52D ; Load 52D into I
  $F52: LD I, $DDC ; Load DDC into I
  $F56: LD I, $C8A ; Load C8A into I
  $F5A: LD I, $A13 ; Load A13 into I
  $F5E: LD I, $DEA ; Load DEA into I
  $F9A: LD I, $59B ; Load 59B into I
  $FD6: LD I, $E11 ; Load E11 into I
  $FDE: LD I, $3AB ; Load 3AB into I
  $FFA: LD I, $009 ; Load 009 into I
  $FFE: LD I, $4C8 ; Load 4C8 into I

CONTROL FLOW ANALYSIS:
Jumps: 227
Calls: 111
Branches: 256
Loops: 130
Loop Structures:
  $214 -> $08F (backward jump)
  $2A4 -> $0EA (backward jump)
  $30A -> $094 (backward jump)
  $340 -> $2B5 (backward jump)
  $3A0 -> $228 (backward jump)
  $3C8 -> $33C (backward jump)
  $3EA -> $05D (backward jump)
  $41A -> $05E (backward jump)
  $462 -> $139 (backward jump)
  $470 -> $21E (backward jump)
  $4FA -> $0E6 (backward jump)
  $520 -> $096 (backward jump)
  $582 -> $170 (backward jump)
  $5F2 -> $413 (backward jump)
  $614 -> $46D (backward jump)
  $620 -> $1DF (backward jump)
  $676 -> $19A (backward jump)
  $6AA -> $145 (backward jump)
  $6E4 -> $46D (backward jump)
  $71E -> $24D (backward jump)
  $738 -> $30F (backward jump)
  $754 -> $34B (backward jump)
  $764 -> $6C3 (backward jump)
  $782 -> $386 (backward jump)
  $7B6 -> $2CA (backward jump)
  $7C0 -> $012 (backward jump)
  $7D8 -> $127 (backward jump)
  $7E2 -> $55C (backward jump)
  $7FA -> $24D (backward jump)
  $810 -> $1A3 (backward jump)
  $83E -> $463 (backward jump)
  $842 -> $842 (backward jump)
  $866 -> $783 (backward jump)
  $88E -> $2B1 (backward jump)
  $8CC -> $128 (backward jump)
  $8F8 -> $684 (backward jump)
  $902 -> $22E (backward jump)
  $924 -> $4FE (backward jump)
  $94C -> $572 (backward jump)
  $956 -> $378 (backward jump)
  $95C -> $41B (backward jump)
  $960 -> $247 (backward jump)
  $96A -> $122 (backward jump)
  $970 -> $2FC (backward jump)
  $972 -> $765 (backward jump)
  $98A -> $029 (backward jump)
  $9B0 -> $47A (backward jump)
  $9B2 -> $638 (backward jump)
  $9B8 -> $5A4 (backward jump)
  $9C2 -> $76D (backward jump)
  $9FE -> $74C (backward jump)
  $A14 -> $85D (backward jump)
  $A2A -> $37C (backward jump)
  $A2C -> $597 (backward jump)
  $A34 -> $59E (backward jump)
  $A3E -> $529 (backward jump)
  $A56 -> $A44 (backward jump)
  $A5A -> $0C0 (backward jump)
  $A62 -> $5A0 (backward jump)
  $A74 -> $65C (backward jump)
  $AAA -> $099 (backward jump)
  $ABA -> $362 (backward jump)
  $AF0 -> $99E (backward jump)
  $AFE -> $70F (backward jump)
  $B26 -> $A8F (backward jump)
  $B30 -> $6BE (backward jump)
  $BA8 -> $6D6 (backward jump)
  $BB8 -> $65E (backward jump)
  $BBA -> $262 (backward jump)
  $BDC -> $3EE (backward jump)
  $C16 -> $462 (backward jump)
  $C18 -> $844 (backward jump)
  $C22 -> $04D (backward jump)
  $C46 -> $25A (backward jump)
  $C48 -> $C18 (backward jump)
  $C6E -> $667 (backward jump)
  $C7C -> $BA0 (backward jump)
  $C92 -> $6B3 (backward jump)
  $CA2 -> $17F (backward jump)
  $CAA -> $A03 (backward jump)
  $CB0 -> $0AF (backward jump)
  $CB2 -> $7ED (backward jump)
  $CDA -> $A7A (backward jump)
  $CF6 -> $7C4 (backward jump)
  $CF8 -> $153 (backward jump)
  $D06 -> $A45 (backward jump)
  $D16 -> $5D1 (backward jump)
  $D22 -> $2C3 (backward jump)
  $D2C -> $3EE (backward jump)
  $D32 -> $758 (backward jump)
  $D4E -> $C73 (backward jump)
  $D5A -> $81B (backward jump)
  $D70 -> $337 (backward jump)
  $D80 -> $4DA (backward jump)
  $D9A -> $554 (backward jump)
  $DAC -> $026 (backward jump)
  $DC6 -> $553 (backward jump)
  $DD4 -> $756 (backward jump)
  $DD6 -> $AA2 (backward jump)
  $DEA -> $CB2 (backward jump)
  $DF8 -> $3CC (backward jump)
  $E06 -> $06A (backward jump)
  $E10 -> $595 (backward jump)
  $E22 -> $AC4 (backward jump)
  $E26 -> $57A (backward jump)
  $E52 -> $BB6 (backward jump)
  $E8A -> $B5A (backward jump)
  $E8E -> $D6C (backward jump)
  $E9C -> $BF0 (backward jump)
  $E9E -> $973 (backward jump)
  $EA8 -> $B91 (backward jump)
  $EB8 -> $218 (backward jump)
  $EC6 -> $652 (backward jump)
  $EC8 -> $87A (backward jump)
  $EE4 -> $1EB (backward jump)
  $EEE -> $E5C (backward jump)
  $EF8 -> $368 (backward jump)
  $F0A -> $0F2 (backward jump)
  $F16 -> $714 (backward jump)
  $F2A -> $76B (backward jump)
  $F2E -> $34F (backward jump)
  $F54 -> $E18 (backward jump)
  $F66 -> $818 (backward jump)
  $F82 -> $A57 (backward jump)
  $FA2 -> $AE3 (backward jump)
  $FBE -> $1C3 (backward jump)
  $FCA -> $3CB (backward jump)
  $FCC -> $B51 (backward jump)
  $FDC -> $E27 (backward jump)
  $FE0 -> $FBB (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $D71C   DRW      V7, V1, #C      ; Draw 12-byte sprite at V7, V1
$202    $DB62   DRW      VB, V6, #2      ; Draw 2-byte sprite at VB, V6
$204    $15AE   JP       $5AE            ; Jump to 5AE
$206    $8F38   UNKNOWN  8F38            ; Unknown 8xxx instruction
$208    $293B   CALL     $93B            ; Call subroutine at 93B
$20A    $CF63   RND      VF, #63         ; VF = random & 63
$20C    $3468   SE       V4, #68         ; Skip if V4 == 104
$20E    $5E4E   UNKNOWN  $5E4E           ; Unknown 5xxx instruction
$210    $5BFB   UNKNOWN  $5BFB           ; Unknown 5xxx instruction
$212    $DE52   DRW      VE, V5, #2      ; Draw 2-byte sprite at VE, V5
$214    $B08F   JP       V0, $08F        ; Jump to V0 + 08F
$216    $231B   CALL     $31B            ; Call subroutine at 31B
$218    $E81E   UNKNOWN  $E81E           ; Unknown Exxx instruction
$21A    $EF4C   UNKNOWN  $EF4C           ; Unknown Exxx instruction
$21C    $AF50   LD       I, $F50         ; Load F50 into I
$21E    $D90E   DRW      V9, V0, #E      ; Draw 14-byte sprite at V9, V0
$220    $AB0D   LD       I, $B0D         ; Load B0D into I
$222    $4DF7   SNE      VD, #F7         ; Skip if VD != 247
$224    $5AA9   UNKNOWN  $5AA9           ; Unknown 5xxx instruction
$226    $EEEA   UNKNOWN  $EEEA           ; Unknown Exxx instruction
$228    $1AB1   JP       $AB1            ; Jump to AB1
$22A    $2124   CALL     $124            ; Call subroutine at 124
$22C    $0197   SYS      $197            ; System call to 197
$22E    $02E3   SYS      $2E3            ; System call to 2E3
$230    $D54F   DRW      V5, V4, #F      ; Draw 15-byte sprite at V5, V4
$232    $BE73   JP       V0, $E73        ; Jump to V0 + E73
$234    $3E93   SE       VE, #93         ; Skip if VE == 147
$236    $5525   UNKNOWN  $5525           ; Unknown 5xxx instruction
$238    $FEA1   UNKNOWN  FEA1            ; Unknown Fxxx instruction
$23A    $0BEC   SYS      $BEC            ; System call to BEC
$23C    $8170   LD       V1, V7          ; V1 = V7
$23E    $1468   JP       $468            ; Jump to 468
$240    $0E40   SYS      $E40            ; System call to E40
$242    $3262   SE       V2, #62         ; Skip if V2 == 98
$244    $27BA   CALL     $7BA            ; Call subroutine at 7BA
$246    $487E   SNE      V8, #7E         ; Skip if V8 != 126
$248    $80A6   SHR      V0              ; V0 >>= 1, VF = LSB
$24A    $A14C   LD       I, $14C         ; Load 14C into I
$24C    $1C34   JP       $C34            ; Jump to C34
$24E    $C834   RND      V8, #34         ; V8 = random & 34
$250    $DDC9   DRW      VD, VC, #9      ; Draw 9-byte sprite at VD, VC
$252    $8AEA   UNKNOWN  8AEA            ; Unknown 8xxx instruction
$254    $F51B   UNKNOWN  F51B            ; Unknown Fxxx instruction
$256    $275E   CALL     $75E            ; Call subroutine at 75E
$258    $F931   UNKNOWN  F931            ; Unknown Fxxx instruction
$25A    $D677   DRW      V6, V7, #7      ; Draw 7-byte sprite at V6, V7
$25C    $C653   RND      V6, #53         ; V6 = random & 53
$25E    $B781   JP       V0, $781        ; Jump to V0 + 781
$260    $EA91   UNKNOWN  $EA91           ; Unknown Exxx instruction
$262    $37AF   SE       V7, #AF         ; Skip if V7 == 175
$264    $1F76   JP       $F76            ; Jump to F76
$266    $5693   UNKNOWN  $5693           ; Unknown 5xxx instruction
$268    $EA3A   UNKNOWN  $EA3A           ; Unknown Exxx instruction
$26A    $8A2A   UNKNOWN  8A2A            ; Unknown 8xxx instruction
$26C    $3047   SE       V0, #47         ; Skip if V0 == 71
$26E    $AAC3   LD       I, $AC3         ; Load AC3 into I
$270    $A202   LD       I, $202         ; Load 202 into I
$272    $DDBE   DRW      VD, VB, #E      ; Draw 14-byte sprite at VD, VB
$274    $5BBC   UNKNOWN  $5BBC           ; Unknown 5xxx instruction
$276    $C7DC   RND      V7, #DC         ; V7 = random & DC
$278    $434B   SNE      V3, #4B         ; Skip if V3 != 75
$27A    $CD26   RND      VD, #26         ; VD = random & 26
$27C    $8503   XOR      V5, V0          ; V5 ^= V0
$27E    $D9FF   DRW      V9, VF, #F      ; Draw 15-byte sprite at V9, VF
$280    $4729   SNE      V7, #29         ; Skip if V7 != 41
$282    $1E6E   JP       $E6E            ; Jump to E6E
$284    $6BFC   LD       VB, #FC         ; Load 252 into VB
$286    $B7BD   JP       V0, $7BD        ; Jump to V0 + 7BD
$288    $8E65   SUB      VE, V6          ; VE -= V6, VF = !borrow
$28A    $04C5   SYS      $4C5            ; System call to 4C5
$28C    $45C1   SNE      V5, #C1         ; Skip if V5 != 193
$28E    $38DC   SE       V8, #DC         ; Skip if V8 == 220
$290    $AFEE   LD       I, $FEE         ; Load FEE into I
$292    $06E8   SYS      $6E8            ; System call to 6E8
$294    $28D4   CALL     $8D4            ; Call subroutine at 8D4
$296    $E62D   UNKNOWN  $E62D           ; Unknown Exxx instruction
$298    $998E   UNKNOWN  $998E           ; Unknown 9xxx instruction
$29A    $29E4   CALL     $9E4            ; Call subroutine at 9E4
$29C    $134E   JP       $34E            ; Jump to 34E
$29E    $7697   ADD      V6, #97         ; Add 151 to V6
$2A0    $A78A   LD       I, $78A         ; Load 78A into I
$2A2    $2426   CALL     $426            ; Call subroutine at 426
$2A4    $B0EA   JP       V0, $0EA        ; Jump to V0 + 0EA
$2A6    $BE01   JP       V0, $E01        ; Jump to V0 + E01
$2A8    $5616   UNKNOWN  $5616           ; Unknown 5xxx instruction
$2AA    $9FAB   UNKNOWN  $9FAB           ; Unknown 9xxx instruction
$2AC    $5038   UNKNOWN  $5038           ; Unknown 5xxx instruction
$2AE    $17D1   JP       $7D1            ; Jump to 7D1
$2B0    $A189   LD       I, $189         ; Load 189 into I
$2B2    $331A   SE       V3, #1A         ; Skip if V3 == 26
$2B4    $13F9   JP       $3F9            ; Jump to 3F9
$2B6    $90EB   UNKNOWN  $90EB           ; Unknown 9xxx instruction
$2B8    $15DB   JP       $5DB            ; Jump to 5DB
$2BA    $1342   JP       $342            ; Jump to 342
$2BC    $E276   UNKNOWN  $E276           ; Unknown Exxx instruction
$2BE    $A6C5   LD       I, $6C5         ; Load 6C5 into I
$2C0    $2FAC   CALL     $FAC            ; Call subroutine at FAC
$2C2    $FA09   UNKNOWN  FA09            ; Unknown Fxxx instruction
$2C4    $DB94   DRW      VB, V9, #4      ; Draw 4-byte sprite at VB, V9
$2C6    $3383   SE       V3, #83         ; Skip if V3 == 131
$2C8    $9757   UNKNOWN  $9757           ; Unknown 9xxx instruction
$2CA    $E365   UNKNOWN  $E365           ; Unknown Exxx instruction
$2CC    $42CE   SNE      V2, #CE         ; Skip if V2 != 206
$2CE    $5B74   UNKNOWN  $5B74           ; Unknown 5xxx instruction
$2D0    $E43C   UNKNOWN  $E43C           ; Unknown Exxx instruction
$2D2    $2EA0   CALL     $EA0            ; Call subroutine at EA0
$2D4    $E0C9   UNKNOWN  $E0C9           ; Unknown Exxx instruction
$2D6    $E6FA   UNKNOWN  $E6FA           ; Unknown Exxx instruction
$2D8    $3F35   SE       VF, #35         ; Skip if VF == 53
$2DA    $45BF   SNE      V5, #BF         ; Skip if V5 != 191
$2DC    $71CB   ADD      V1, #CB         ; Add 203 to V1
$2DE    $EC05   UNKNOWN  $EC05           ; Unknown Exxx instruction
$2E0    $6140   LD       V1, #40         ; Load 64 into V1
$2E2    $B3DC   JP       V0, $3DC        ; Jump to V0 + 3DC
$2E4    $1FF9   JP       $FF9            ; Jump to FF9
$2E6    $3110   SE       V1, #10         ; Skip if V1 == 16
$2E8    $EDE6   UNKNOWN  $EDE6           ; Unknown Exxx instruction
$2EA    $4ADF   SNE      VA, #DF         ; Skip if VA != 223
$2EC    $7434   ADD      V4, #34         ; Add 52 to V4
$2EE    $DC15   DRW      VC, V1, #5      ; Draw 5-byte sprite at VC, V1
$2F0    $4DF8   SNE      VD, #F8         ; Skip if VD != 248
$2F2    $C3B1   RND      V3, #B1         ; V3 = random & B1
$2F4    $3277   SE       V2, #77         ; Skip if V2 == 119
$2F6    $FEA0   UNKNOWN  FEA0            ; Unknown Fxxx instruction
$2F8    $8692   AND      V6, V9          ; V6 &= V9
$2FA    $410A   SNE      V1, #0A         ; Skip if V1 != 10
$2FC    $BF30   JP       V0, $F30        ; Jump to V0 + F30
$2FE    $23A6   CALL     $3A6            ; Call subroutine at 3A6
$300    $FAD2   UNKNOWN  FAD2            ; Unknown Fxxx instruction
$302    $A68C   LD       I, $68C         ; Load 68C into I
$304    $4135   SNE      V1, #35         ; Skip if V1 != 53
$306    $1513   JP       $513            ; Jump to 513
$308    $C842   RND      V8, #42         ; V8 = random & 42
$30A    $1094   JP       $094            ; Jump to 094
$30C    $FA44   UNKNOWN  FA44            ; Unknown Fxxx instruction
$30E    $003A   SYS      $03A            ; System call to 03A
$310    $F153   UNKNOWN  F153            ; Unknown Fxxx instruction
$312    $D864   DRW      V8, V6, #4      ; Draw 4-byte sprite at V8, V6
$314    $A0B9   LD       I, $0B9         ; Load 0B9 into I
$316    $67C7   LD       V7, #C7         ; Load 199 into V7
$318    $594E   UNKNOWN  $594E           ; Unknown 5xxx instruction
$31A    $2405   CALL     $405            ; Call subroutine at 405
$31C    $621C   LD       V2, #1C         ; Load 28 into V2
$31E    $9694   UNKNOWN  $9694           ; Unknown 9xxx instruction
$320    $9785   UNKNOWN  $9785           ; Unknown 9xxx instruction
$322    $A739   LD       I, $739         ; Load 739 into I
$324    $5012   UNKNOWN  $5012           ; Unknown 5xxx instruction
$326    $7281   ADD      V2, #81         ; Add 129 to V2
$328    $AF11   LD       I, $F11         ; Load F11 into I
$32A    $3307   SE       V3, #07         ; Skip if V3 == 7
$32C    $6290   LD       V2, #90         ; Load 144 into V2
$32E    $5308   UNKNOWN  $5308           ; Unknown 5xxx instruction
$330    $88C2   AND      V8, VC          ; V8 &= VC
$332    $4C3D   SNE      VC, #3D         ; Skip if VC != 61
$334    $294A   CALL     $94A            ; Call subroutine at 94A
$336    $1449   JP       $449            ; Jump to 449
$338    $25F7   CALL     $5F7            ; Call subroutine at 5F7
$33A    $7DA3   ADD      VD, #A3         ; Add 163 to VD
$33C    $E771   UNKNOWN  $E771           ; Unknown Exxx instruction
$33E    $3990   SE       V9, #90         ; Skip if V9 == 144
$340    $12B5   JP       $2B5            ; Jump to 2B5
$342    $6972   LD       V9, #72         ; Load 114 into V9
$344    $0EDC   SYS      $EDC            ; System call to EDC
$346    $A2E0   LD       I, $2E0         ; Load 2E0 into I
$348    $9083   UNKNOWN  $9083           ; Unknown 9xxx instruction
$34A    $EBEF   UNKNOWN  $EBEF           ; Unknown Exxx instruction
$34C    $53A2   UNKNOWN  $53A2           ; Unknown 5xxx instruction
$34E    $98FD   UNKNOWN  $98FD           ; Unknown 9xxx instruction
$350    $7517   ADD      V5, #17         ; Add 23 to V5
$352    $F713   UNKNOWN  F713            ; Unknown Fxxx instruction
$354    $CA20   RND      VA, #20         ; VA = random & 20
$356    $4FBE   SNE      VF, #BE         ; Skip if VF != 190
$358    $75DF   ADD      V5, #DF         ; Add 223 to V5
$35A    $437D   SNE      V3, #7D         ; Skip if V3 != 125
$35C    $BC9B   JP       V0, $C9B        ; Jump to V0 + C9B
$35E    $BA54   JP       V0, $A54        ; Jump to V0 + A54
$360    $BE04   JP       V0, $E04        ; Jump to V0 + E04
$362    $2113   CALL     $113            ; Call subroutine at 113
$364    $830D   UNKNOWN  830D            ; Unknown 8xxx instruction
$366    $0C99   SYS      $C99            ; System call to C99
$368    $EA66   UNKNOWN  $EA66           ; Unknown Exxx instruction
$36A    $3276   SE       V2, #76         ; Skip if V2 == 118
$36C    $87F7   SUBN     V7, VF          ; V7 = VF - V7, VF = !borrow
$36E    $E2F3   UNKNOWN  $E2F3           ; Unknown Exxx instruction
$370    $3B9F   SE       VB, #9F         ; Skip if VB == 159
$372    $48F7   SNE      V8, #F7         ; Skip if V8 != 247
$374    $60BB   LD       V0, #BB         ; Load 187 into V0
$376    $2F21   CALL     $F21            ; Call subroutine at F21
$378    $9D98   UNKNOWN  $9D98           ; Unknown 9xxx instruction
$37A    $A22E   LD       I, $22E         ; Load 22E into I
$37C    $A049   LD       I, $049         ; Load 049 into I
$37E    $E79F   UNKNOWN  $E79F           ; Unknown Exxx instruction
$380    $E69F   UNKNOWN  $E69F           ; Unknown Exxx instruction
$382    $2BC1   CALL     $BC1            ; Call subroutine at BC1
$384    $2365   CALL     $365            ; Call subroutine at 365
$386    $B9E6   JP       V0, $9E6        ; Jump to V0 + 9E6
$388    $7589   ADD      V5, #89         ; Add 137 to V5
$38A    $6D28   LD       VD, #28         ; Load 40 into VD
$38C    $E16B   UNKNOWN  $E16B           ; Unknown Exxx instruction
$38E    $D784   DRW      V7, V8, #4      ; Draw 4-byte sprite at V7, V8
$390    $EBEE   UNKNOWN  $EBEE           ; Unknown Exxx instruction
$392    $2F43   CALL     $F43            ; Call subroutine at F43
$394    $BAF2   JP       V0, $AF2        ; Jump to V0 + AF2
$396    $A1F3   LD       I, $1F3         ; Load 1F3 into I
$398    $65A9   LD       V5, #A9         ; Load 169 into V5
$39A    $1D4C   JP       $D4C            ; Jump to D4C
$39C    $DB1F   DRW      VB, V1, #F      ; Draw 15-byte sprite at VB, V1
$39E    $82B1   OR       V2, VB          ; V2 |= VB
$3A0    $B228   JP       V0, $228        ; Jump to V0 + 228
$3A2    $2228   CALL     $228            ; Call subroutine at 228
$3A4    $5269   UNKNOWN  $5269           ; Unknown 5xxx instruction
$3A6    $9CC0   SNE      VC, VC          ; Skip if VC != VC
$3A8    $D451   DRW      V4, V5, #1      ; Draw 1-byte sprite at V4, V5
$3AA    $32A0   SE       V2, #A0         ; Skip if V2 == 160
$3AC    $CE22   RND      VE, #22         ; VE = random & 22
$3AE    $EEFF   UNKNOWN  $EEFF           ; Unknown Exxx instruction
$3B0    $2B4A   CALL     $B4A            ; Call subroutine at B4A
$3B2    $AB63   LD       I, $B63         ; Load B63 into I
$3B4    $6046   LD       V0, #46         ; Load 70 into V0
$3B6    $D32C   DRW      V3, V2, #C      ; Draw 12-byte sprite at V3, V2
$3B8    $1F1A   JP       $F1A            ; Jump to F1A
$3BA    $8111   OR       V1, V1          ; V1 |= V1
$3BC    $087F   SYS      $87F            ; System call to 87F
$3BE    $54E6   UNKNOWN  $54E6           ; Unknown 5xxx instruction
$3C0    $6897   LD       V8, #97         ; Load 151 into V8
$3C2    $5761   UNKNOWN  $5761           ; Unknown 5xxx instruction
$3C4    $A370   LD       I, $370         ; Load 370 into I
$3C6    $917B   UNKNOWN  $917B           ; Unknown 9xxx instruction
$3C8    $B33C   JP       V0, $33C        ; Jump to V0 + 33C
$3CA    $C95F   RND      V9, #5F         ; V9 = random & 5F
$3CC    $636C   LD       V3, #6C         ; Load 108 into V3
$3CE    $FB69   UNKNOWN  FB69            ; Unknown Fxxx instruction
$3D0    $9801   UNKNOWN  $9801           ; Unknown 9xxx instruction
$3D2    $5C74   UNKNOWN  $5C74           ; Unknown 5xxx instruction
$3D4    $974F   UNKNOWN  $974F           ; Unknown 9xxx instruction
$3D6    $A00E   LD       I, $00E         ; Load 00E into I
$3D8    $1B01   JP       $B01            ; Jump to B01
$3DA    $A0D7   LD       I, $0D7         ; Load 0D7 into I
$3DC    $7323   ADD      V3, #23         ; Add 35 to V3
$3DE    $3188   SE       V1, #88         ; Skip if V1 == 136
$3E0    $A32A   LD       I, $32A         ; Load 32A into I
$3E2    $EEC3   UNKNOWN  $EEC3           ; Unknown Exxx instruction
$3E4    $DF9C   DRW      VF, V9, #C      ; Draw 12-byte sprite at VF, V9
$3E6    $8736   SHR      V7              ; V7 >>= 1, VF = LSB
$3E8    $D047   DRW      V0, V4, #7      ; Draw 7-byte sprite at V0, V4
$3EA    $B05D   JP       V0, $05D        ; Jump to V0 + 05D
$3EC    $42A4   SNE      V2, #A4         ; Skip if V2 != 164
$3EE    $3432   SE       V4, #32         ; Skip if V4 == 50
$3F0    $0400   SYS      $400            ; System call to 400
$3F2    $6560   LD       V5, #60         ; Load 96 into V5
$3F4    $FCD6   UNKNOWN  FCD6            ; Unknown Fxxx instruction
$3F6    $BDAC   JP       V0, $DAC        ; Jump to V0 + DAC
$3F8    $595B   UNKNOWN  $595B           ; Unknown 5xxx instruction
$3FA    $0F00   SYS      $F00            ; System call to F00
$3FC    $5B31   UNKNOWN  $5B31           ; Unknown 5xxx instruction
$3FE    $AFF2   LD       I, $FF2         ; Load FF2 into I
$400    $819D   UNKNOWN  819D            ; Unknown 8xxx instruction
$402    $456B   SNE      V5, #6B         ; Skip if V5 != 107
$404    $5145   UNKNOWN  $5145           ; Unknown 5xxx instruction
$406    $59DB   UNKNOWN  $59DB           ; Unknown 5xxx instruction
$408    $1506   JP       $506            ; Jump to 506
$40A    $1A51   JP       $A51            ; Jump to A51
$40C    $0077   SYS      $077            ; System call to 077
$40E    $610F   LD       V1, #0F         ; Load 15 into V1
$410    $EF24   UNKNOWN  $EF24           ; Unknown Exxx instruction
$412    $FFB6   UNKNOWN  FFB6            ; Unknown Fxxx instruction
$414    $1BA5   JP       $BA5            ; Jump to BA5
$416    $6B57   LD       VB, #57         ; Load 87 into VB
$418    $B648   JP       V0, $648        ; Jump to V0 + 648
$41A    $B05E   JP       V0, $05E        ; Jump to V0 + 05E
$41C    $0898   SYS      $898            ; System call to 898
$41E    $D7BB   DRW      V7, VB, #B      ; Draw 11-byte sprite at V7, VB
$420    $6C28   LD       VC, #28         ; Load 40 into VC
$422    $39D0   SE       V9, #D0         ; Skip if V9 == 208
$424    $4597   SNE      V5, #97         ; Skip if V5 != 151
$426    $AD8E   LD       I, $D8E         ; Load D8E into I
$428    $BDDC   JP       V0, $DDC        ; Jump to V0 + DDC
$42A    $183C   JP       $83C            ; Jump to 83C
$42C    $5CF3   UNKNOWN  $5CF3           ; Unknown 5xxx instruction
$42E    $0F12   SYS      $F12            ; System call to F12
$430    $449D   SNE      V4, #9D         ; Skip if V4 != 157
$432    $F906   UNKNOWN  F906            ; Unknown Fxxx instruction
$434    $55FA   UNKNOWN  $55FA           ; Unknown 5xxx instruction
$436    $FF12   UNKNOWN  FF12            ; Unknown Fxxx instruction
$438    $22B5   CALL     $2B5            ; Call subroutine at 2B5
$43A    $397C   SE       V9, #7C         ; Skip if V9 == 124
$43C    $195A   JP       $95A            ; Jump to 95A
$43E    $D89E   DRW      V8, V9, #E      ; Draw 14-byte sprite at V8, V9
$440    $9F3B   UNKNOWN  $9F3B           ; Unknown 9xxx instruction
$442    $166E   JP       $66E            ; Jump to 66E
$444    $6629   LD       V6, #29         ; Load 41 into V6
$446    $3A7C   SE       VA, #7C         ; Skip if VA == 124
$448    $2729   CALL     $729            ; Call subroutine at 729
$44A    $74F0   ADD      V4, #F0         ; Add 240 to V4
$44C    $6BDC   LD       VB, #DC         ; Load 220 into VB
$44E    $C3AE   RND      V3, #AE         ; V3 = random & AE
$450    $7653   ADD      V6, #53         ; Add 83 to V6
$452    $2A3B   CALL     $A3B            ; Call subroutine at A3B
$454    $E2A6   UNKNOWN  $E2A6           ; Unknown Exxx instruction
$456    $1C12   JP       $C12            ; Jump to C12
$458    $A739   LD       I, $739         ; Load 739 into I
$45A    $FA4E   UNKNOWN  FA4E            ; Unknown Fxxx instruction
$45C    $70A2   ADD      V0, #A2         ; Add 162 to V0
$45E    $217C   CALL     $17C            ; Call subroutine at 17C
$460    $0A63   SYS      $A63            ; System call to A63
$462    $B139   JP       V0, $139        ; Jump to V0 + 139
$464    $FD84   UNKNOWN  FD84            ; Unknown Fxxx instruction
$466    $7072   ADD      V0, #72         ; Add 114 to V0
$468    $53D1   UNKNOWN  $53D1           ; Unknown 5xxx instruction
$46A    $AA9E   LD       I, $A9E         ; Load A9E into I
$46C    $3DDC   SE       VD, #DC         ; Skip if VD == 220
$46E    $1A0B   JP       $A0B            ; Jump to A0B
$470    $B21E   JP       V0, $21E        ; Jump to V0 + 21E
$472    $D3B4   DRW      V3, VB, #4      ; Draw 4-byte sprite at V3, VB
$474    $B737   JP       V0, $737        ; Jump to V0 + 737
$476    $0CA6   SYS      $CA6            ; System call to CA6
$478    $C380   RND      V3, #80         ; V3 = random & 80
$47A    $6709   LD       V7, #09         ; Load 9 into V7
$47C    $9F89   UNKNOWN  $9F89           ; Unknown 9xxx instruction
$47E    $4191   SNE      V1, #91         ; Skip if V1 != 145
$480    $D2DD   DRW      V2, VD, #D      ; Draw 13-byte sprite at V2, VD
$482    $D52A   DRW      V5, V2, #A      ; Draw 10-byte sprite at V5, V2
$484    $7B09   ADD      VB, #09         ; Add 9 to VB
$486    $6420   LD       V4, #20         ; Load 32 into V4
$488    $314B   SE       V1, #4B         ; Skip if V1 == 75
$48A    $570F   UNKNOWN  $570F           ; Unknown 5xxx instruction
$48C    $D49C   DRW      V4, V9, #C      ; Draw 12-byte sprite at V4, V9
$48E    $F26D   UNKNOWN  F26D            ; Unknown Fxxx instruction
$490    $DA59   DRW      VA, V5, #9      ; Draw 9-byte sprite at VA, V5
$492    $8013   XOR      V0, V1          ; V0 ^= V1
$494    $9530   SNE      V5, V3          ; Skip if V5 != V3
$496    $4780   SNE      V7, #80         ; Skip if V7 != 128
$498    $A406   LD       I, $406         ; Load 406 into I
$49A    $C063   RND      V0, #63         ; V0 = random & 63
$49C    $5BFE   UNKNOWN  $5BFE           ; Unknown 5xxx instruction
$49E    $D0B0   DRW      V0, VB, #0      ; Draw 0-byte sprite at V0, VB
$4A0    $2393   CALL     $393            ; Call subroutine at 393
$4A2    $8FC1   OR       VF, VC          ; VF |= VC
$4A4    $7CDA   ADD      VC, #DA         ; Add 218 to VC
$4A6    $4384   SNE      V3, #84         ; Skip if V3 != 132
$4A8    $9D2F   UNKNOWN  $9D2F           ; Unknown 9xxx instruction
$4AA    $9A78   UNKNOWN  $9A78           ; Unknown 9xxx instruction
$4AC    $EF3C   UNKNOWN  $EF3C           ; Unknown Exxx instruction
$4AE    $ECFB   UNKNOWN  $ECFB           ; Unknown Exxx instruction
$4B0    $5509   UNKNOWN  $5509           ; Unknown 5xxx instruction
$4B2    $1E87   JP       $E87            ; Jump to E87
$4B4    $0E52   SYS      $E52            ; System call to E52
$4B6    $23A5   CALL     $3A5            ; Call subroutine at 3A5
$4B8    $6937   LD       V9, #37         ; Load 55 into V9
$4BA    $47D6   SNE      V7, #D6         ; Skip if V7 != 214
$4BC    $AB9A   LD       I, $B9A         ; Load B9A into I
$4BE    $7BF1   ADD      VB, #F1         ; Add 241 to VB
$4C0    $0C99   SYS      $C99            ; System call to C99
$4C2    $2269   CALL     $269            ; Call subroutine at 269
$4C4    $F170   UNKNOWN  F170            ; Unknown Fxxx instruction
$4C6    $86B1   OR       V6, VB          ; V6 |= VB
$4C8    $3AA4   SE       VA, #A4         ; Skip if VA == 164
$4CA    $B7ED   JP       V0, $7ED        ; Jump to V0 + 7ED
$4CC    $9898   UNKNOWN  $9898           ; Unknown 9xxx instruction
$4CE    $5E19   UNKNOWN  $5E19           ; Unknown 5xxx instruction
$4D0    $409C   SNE      V0, #9C         ; Skip if V0 != 156
$4D2    $321A   SE       V2, #1A         ; Skip if V2 == 26
$4D4    $A1A0   LD       I, $1A0         ; Load 1A0 into I
$4D6    $9F4B   UNKNOWN  $9F4B           ; Unknown 9xxx instruction
$4D8    $CE9C   RND      VE, #9C         ; VE = random & 9C
$4DA    $A62D   LD       I, $62D         ; Load 62D into I
$4DC    $1B5F   JP       $B5F            ; Jump to B5F
$4DE    $3987   SE       V9, #87         ; Skip if V9 == 135
$4E0    $EC6E   UNKNOWN  $EC6E           ; Unknown Exxx instruction
$4E2    $CD1B   RND      VD, #1B         ; VD = random & 1B
$4E4    $69A9   LD       V9, #A9         ; Load 169 into V9
$4E6    $30C1   SE       V0, #C1         ; Skip if V0 == 193
$4E8    $97D9   UNKNOWN  $97D9           ; Unknown 9xxx instruction
$4EA    $39A6   SE       V9, #A6         ; Skip if V9 == 166
$4EC    $259B   CALL     $59B            ; Call subroutine at 59B
$4EE    $9108   UNKNOWN  $9108           ; Unknown 9xxx instruction
$4F0    $86A3   XOR      V6, VA          ; V6 ^= VA
$4F2    $DD3F   DRW      VD, V3, #F      ; Draw 15-byte sprite at VD, V3
$4F4    $2CF3   CALL     $CF3            ; Call subroutine at CF3
$4F6    $420B   SNE      V2, #0B         ; Skip if V2 != 11
$4F8    $D8D5   DRW      V8, VD, #5      ; Draw 5-byte sprite at V8, VD
$4FA    $B0E6   JP       V0, $0E6        ; Jump to V0 + 0E6
$4FC    $AE7C   LD       I, $E7C         ; Load E7C into I
$4FE    $470B   SNE      V7, #0B         ; Skip if V7 != 11
$500    $3836   SE       V8, #36         ; Skip if V8 == 54
$502    $7197   ADD      V1, #97         ; Add 151 to V1
$504    $03B6   SYS      $3B6            ; System call to 3B6
$506    $1741   JP       $741            ; Jump to 741
$508    $44C0   SNE      V4, #C0         ; Skip if V4 != 192
$50A    $4670   SNE      V6, #70         ; Skip if V6 != 112
$50C    $9A3A   UNKNOWN  $9A3A           ; Unknown 9xxx instruction
$50E    $BD9D   JP       V0, $D9D        ; Jump to V0 + D9D
$510    $CEA0   RND      VE, #A0         ; VE = random & A0
$512    $DBFD   DRW      VB, VF, #D      ; Draw 13-byte sprite at VB, VF
$514    $7512   ADD      V5, #12         ; Add 18 to V5
$516    $2EBC   CALL     $EBC            ; Call subroutine at EBC
$518    $B7E3   JP       V0, $7E3        ; Jump to V0 + 7E3
$51A    $D6A9   DRW      V6, VA, #9      ; Draw 9-byte sprite at V6, VA
$51C    $FEED   UNKNOWN  FEED            ; Unknown Fxxx instruction
$51E    $0704   SYS      $704            ; System call to 704
$520    $B096   JP       V0, $096        ; Jump to V0 + 096
$522    $4BFB   SNE      VB, #FB         ; Skip if VB != 251
$524    $E0C7   UNKNOWN  $E0C7           ; Unknown Exxx instruction
$526    $276A   CALL     $76A            ; Call subroutine at 76A
$528    $65F6   LD       V5, #F6         ; Load 246 into V5
$52A    $F8A9   UNKNOWN  F8A9            ; Unknown Fxxx instruction
$52C    $9D64   UNKNOWN  $9D64           ; Unknown 9xxx instruction
$52E    $0A38   SYS      $A38            ; System call to A38
$530    $0DA7   SYS      $DA7            ; System call to DA7
$532    $A98D   LD       I, $98D         ; Load 98D into I
$534    $CB33   RND      VB, #33         ; VB = random & 33
$536    $C18F   RND      V1, #8F         ; V1 = random & 8F
$538    $3630   SE       V6, #30         ; Skip if V6 == 48
$53A    $010C   SYS      $10C            ; System call to 10C
$53C    $8EA6   SHR      VE              ; VE >>= 1, VF = LSB
$53E    $F777   UNKNOWN  F777            ; Unknown Fxxx instruction
$540    $388D   SE       V8, #8D         ; Skip if V8 == 141
$542    $4422   SNE      V4, #22         ; Skip if V4 != 34
$544    $6D97   LD       VD, #97         ; Load 151 into VD
$546    $6162   LD       V1, #62         ; Load 98 into V1
$548    $5996   UNKNOWN  $5996           ; Unknown 5xxx instruction
$54A    $CEA3   RND      VE, #A3         ; VE = random & A3
$54C    $8B3B   UNKNOWN  8B3B            ; Unknown 8xxx instruction
$54E    $0F4F   SYS      $F4F            ; System call to F4F
$550    $17CC   JP       $7CC            ; Jump to 7CC
$552    $FF9A   UNKNOWN  FF9A            ; Unknown Fxxx instruction
$554    $460A   SNE      V6, #0A         ; Skip if V6 != 10
$556    $4804   SNE      V8, #04         ; Skip if V8 != 4
$558    $D027   DRW      V0, V2, #7      ; Draw 7-byte sprite at V0, V2
$55A    $67D2   LD       V7, #D2         ; Load 210 into V7
$55C    $4749   SNE      V7, #49         ; Skip if V7 != 73
$55E    $7ADC   ADD      VA, #DC         ; Add 220 to VA
$560    $A835   LD       I, $835         ; Load 835 into I
$562    $2B67   CALL     $B67            ; Call subroutine at B67
$564    $CDCB   RND      VD, #CB         ; VD = random & CB
$566    $0DE2   SYS      $DE2            ; System call to DE2
$568    $F8EC   UNKNOWN  F8EC            ; Unknown Fxxx instruction
$56A    $7D2B   ADD      VD, #2B         ; Add 43 to VD
$56C    $D582   DRW      V5, V8, #2      ; Draw 2-byte sprite at V5, V8
$56E    $E632   UNKNOWN  $E632           ; Unknown Exxx instruction
$570    $5D56   UNKNOWN  $5D56           ; Unknown 5xxx instruction
$572    $56A5   UNKNOWN  $56A5           ; Unknown 5xxx instruction
$574    $EF06   UNKNOWN  $EF06           ; Unknown Exxx instruction
$576    $A754   LD       I, $754         ; Load 754 into I
$578    $D473   DRW      V4, V7, #3      ; Draw 3-byte sprite at V4, V7
$57A    $DBBB   DRW      VB, VB, #B      ; Draw 11-byte sprite at VB, VB
$57C    $F9A4   UNKNOWN  F9A4            ; Unknown Fxxx instruction
$57E    $9C3A   UNKNOWN  $9C3A           ; Unknown 9xxx instruction
$580    $A07E   LD       I, $07E         ; Load 07E into I
$582    $1170   JP       $170            ; Jump to 170
$584    $63A7   LD       V3, #A7         ; Load 167 into V3
$586    $25F7   CALL     $5F7            ; Call subroutine at 5F7
$588    $8F0F   UNKNOWN  8F0F            ; Unknown 8xxx instruction
$58A    $6BBB   LD       VB, #BB         ; Load 187 into VB
$58C    $EAB8   UNKNOWN  $EAB8           ; Unknown Exxx instruction
$58E    $23D5   CALL     $3D5            ; Call subroutine at 3D5
$590    $3C0B   SE       VC, #0B         ; Skip if VC == 11
$592    $327A   SE       V2, #7A         ; Skip if V2 == 122
$594    $ECF9   UNKNOWN  $ECF9           ; Unknown Exxx instruction
$596    $B653   JP       V0, $653        ; Jump to V0 + 653
$598    $5A51   UNKNOWN  $5A51           ; Unknown 5xxx instruction
$59A    $2122   CALL     $122            ; Call subroutine at 122
$59C    $7C27   ADD      VC, #27         ; Add 39 to VC
$59E    $31FF   SE       V1, #FF         ; Skip if V1 == 255
$5A0    $EC27   UNKNOWN  $EC27           ; Unknown Exxx instruction
$5A2    $E394   UNKNOWN  $E394           ; Unknown Exxx instruction
$5A4    $7F4A   ADD      VF, #4A         ; Add 74 to VF
$5A6    $70AB   ADD      V0, #AB         ; Add 171 to V0
$5A8    $0016   SYS      $016            ; System call to 016
$5AA    $D941   DRW      V9, V4, #1      ; Draw 1-byte sprite at V9, V4
$5AC    $6058   LD       V0, #58         ; Load 88 into V0
$5AE    $0BE9   SYS      $BE9            ; System call to BE9
$5B0    $2A0C   CALL     $A0C            ; Call subroutine at A0C
$5B2    $731D   ADD      V3, #1D         ; Add 29 to V3
$5B4    $465F   SNE      V6, #5F         ; Skip if V6 != 95
$5B6    $A979   LD       I, $979         ; Load 979 into I
$5B8    $7E9F   ADD      VE, #9F         ; Add 159 to VE
$5BA    $7E52   ADD      VE, #52         ; Add 82 to VE
$5BC    $2156   CALL     $156            ; Call subroutine at 156
$5BE    $A307   LD       I, $307         ; Load 307 into I
$5C0    $D6B5   DRW      V6, VB, #5      ; Draw 5-byte sprite at V6, VB
$5C2    $C373   RND      V3, #73         ; V3 = random & 73
$5C4    $D816   DRW      V8, V1, #6      ; Draw 6-byte sprite at V8, V1
$5C6    $5AD1   UNKNOWN  $5AD1           ; Unknown 5xxx instruction
$5C8    $4FC6   SNE      VF, #C6         ; Skip if VF != 198
$5CA    $B973   JP       V0, $973        ; Jump to V0 + 973
$5CC    $4764   SNE      V7, #64         ; Skip if V7 != 100
$5CE    $932A   UNKNOWN  $932A           ; Unknown 9xxx instruction
$5D0    $4B2A   SNE      VB, #2A         ; Skip if VB != 42
$5D2    $61B5   LD       V1, #B5         ; Load 181 into V1
$5D4    $7D3C   ADD      VD, #3C         ; Add 60 to VD
$5D6    $CAE6   RND      VA, #E6         ; VA = random & E6
$5D8    $707C   ADD      V0, #7C         ; Add 124 to V0
$5DA    $6A53   LD       VA, #53         ; Load 83 into VA
$5DC    $3089   SE       V0, #89         ; Skip if V0 == 137
$5DE    $0897   SYS      $897            ; System call to 897
$5E0    $7FB2   ADD      VF, #B2         ; Add 178 to VF
$5E2    $4070   SNE      V0, #70         ; Skip if V0 != 112
$5E4    $BA7B   JP       V0, $A7B        ; Jump to V0 + A7B
$5E6    $FE1D   UNKNOWN  FE1D            ; Unknown Fxxx instruction
$5E8    $52F8   UNKNOWN  $52F8           ; Unknown 5xxx instruction
$5EA    $4163   SNE      V1, #63         ; Skip if V1 != 99
$5EC    $3D10   SE       VD, #10         ; Skip if VD == 16
$5EE    $6168   LD       V1, #68         ; Load 104 into V1
$5F0    $7160   ADD      V1, #60         ; Add 96 to V1
$5F2    $B413   JP       V0, $413        ; Jump to V0 + 413
$5F4    $CB06   RND      VB, #06         ; VB = random & 06
$5F6    $556E   UNKNOWN  $556E           ; Unknown 5xxx instruction
$5F8    $A720   LD       I, $720         ; Load 720 into I
$5FA    $965E   UNKNOWN  $965E           ; Unknown 9xxx instruction
$5FC    $9ED8   UNKNOWN  $9ED8           ; Unknown 9xxx instruction
$5FE    $4E13   SNE      VE, #13         ; Skip if VE != 19
$600    $2FA4   CALL     $FA4            ; Call subroutine at FA4
$602    $1DCB   JP       $DCB            ; Jump to DCB
$604    $1710   JP       $710            ; Jump to 710
$606    $872A   UNKNOWN  872A            ; Unknown 8xxx instruction
$608    $60DA   LD       V0, #DA         ; Load 218 into V0
$60A    $EE0C   UNKNOWN  $EE0C           ; Unknown Exxx instruction
$60C    $F966   UNKNOWN  F966            ; Unknown Fxxx instruction
$60E    $DBAB   DRW      VB, VA, #B      ; Draw 11-byte sprite at VB, VA
$610    $53EC   UNKNOWN  $53EC           ; Unknown 5xxx instruction
$612    $F796   UNKNOWN  F796            ; Unknown Fxxx instruction
$614    $B46D   JP       V0, $46D        ; Jump to V0 + 46D
$616    $6241   LD       V2, #41         ; Load 65 into V2
$618    $DF8A   DRW      VF, V8, #A      ; Draw 10-byte sprite at VF, V8
$61A    $BE47   JP       V0, $E47        ; Jump to V0 + E47
$61C    $FC5B   UNKNOWN  FC5B            ; Unknown Fxxx instruction
$61E    $D5C6   DRW      V5, VC, #6      ; Draw 6-byte sprite at V5, VC
$620    $11DF   JP       $1DF            ; Jump to 1DF
$622    $5536   UNKNOWN  $5536           ; Unknown 5xxx instruction
$624    $FE66   UNKNOWN  FE66            ; Unknown Fxxx instruction
$626    $68B0   LD       V8, #B0         ; Load 176 into V8
$628    $CCB9   RND      VC, #B9         ; VC = random & B9
$62A    $D794   DRW      V7, V9, #4      ; Draw 4-byte sprite at V7, V9
$62C    $C678   RND      V6, #78         ; V6 = random & 78
$62E    $DA52   DRW      VA, V5, #2      ; Draw 2-byte sprite at VA, V5
$630    $6E7D   LD       VE, #7D         ; Load 125 into VE
$632    $C8BC   RND      V8, #BC         ; V8 = random & BC
$634    $7DEA   ADD      VD, #EA         ; Add 234 to VD
$636    $45DC   SNE      V5, #DC         ; Skip if V5 != 220
$638    $C378   RND      V3, #78         ; V3 = random & 78
$63A    $CD4C   RND      VD, #4C         ; VD = random & 4C
$63C    $D31B   DRW      V3, V1, #B      ; Draw 11-byte sprite at V3, V1
$63E    $098C   SYS      $98C            ; System call to 98C
$640    $C090   RND      V0, #90         ; V0 = random & 90
$642    $5338   UNKNOWN  $5338           ; Unknown 5xxx instruction
$644    $3A2F   SE       VA, #2F         ; Skip if VA == 47
$646    $307B   SE       V0, #7B         ; Skip if V0 == 123
$648    $3D7F   SE       VD, #7F         ; Skip if VD == 127
$64A    $7A32   ADD      VA, #32         ; Add 50 to VA
$64C    $8740   LD       V7, V4          ; V7 = V4
$64E    $C96B   RND      V9, #6B         ; V9 = random & 6B
$650    $E4AD   UNKNOWN  $E4AD           ; Unknown Exxx instruction
$652    $D566   DRW      V5, V6, #6      ; Draw 6-byte sprite at V5, V6
$654    $DF50   DRW      VF, V5, #0      ; Draw 0-byte sprite at VF, V5
$656    $A34F   LD       I, $34F         ; Load 34F into I
$658    $8807   SUBN     V8, V0          ; V8 = V0 - V8, VF = !borrow
$65A    $A0AE   LD       I, $0AE         ; Load 0AE into I
$65C    $46CE   SNE      V6, #CE         ; Skip if V6 != 206
$65E    $886A   UNKNOWN  886A            ; Unknown 8xxx instruction
$660    $74A2   ADD      V4, #A2         ; Add 162 to V4
$662    $7178   ADD      V1, #78         ; Add 120 to V1
$664    $8250   LD       V2, V5          ; V2 = V5
$666    $6FEC   LD       VF, #EC         ; Load 236 into VF
$668    $DA35   DRW      VA, V3, #5      ; Draw 5-byte sprite at VA, V3
$66A    $90ED   UNKNOWN  $90ED           ; Unknown 9xxx instruction
$66C    $C869   RND      V8, #69         ; V8 = random & 69
$66E    $5A2B   UNKNOWN  $5A2B           ; Unknown 5xxx instruction
$670    $5809   UNKNOWN  $5809           ; Unknown 5xxx instruction
$672    $97AC   UNKNOWN  $97AC           ; Unknown 9xxx instruction
$674    $F7D5   UNKNOWN  F7D5            ; Unknown Fxxx instruction
$676    $B19A   JP       V0, $19A        ; Jump to V0 + 19A
$678    $0E6D   SYS      $E6D            ; System call to E6D
$67A    $A081   LD       I, $081         ; Load 081 into I
$67C    $BA74   JP       V0, $A74        ; Jump to V0 + A74
$67E    $F632   UNKNOWN  F632            ; Unknown Fxxx instruction
$680    $5122   UNKNOWN  $5122           ; Unknown 5xxx instruction
$682    $D5D4   DRW      V5, VD, #4      ; Draw 4-byte sprite at V5, VD
$684    $BE53   JP       V0, $E53        ; Jump to V0 + E53
$686    $E715   UNKNOWN  $E715           ; Unknown Exxx instruction
$688    $1821   JP       $821            ; Jump to 821
$68A    $E93F   UNKNOWN  $E93F           ; Unknown Exxx instruction
$68C    $5FCC   UNKNOWN  $5FCC           ; Unknown 5xxx instruction
$68E    $E698   UNKNOWN  $E698           ; Unknown Exxx instruction
$690    $E0EF   UNKNOWN  $E0EF           ; Unknown Exxx instruction
$692    $6563   LD       V5, #63         ; Load 99 into V5
$694    $CBF5   RND      VB, #F5         ; VB = random & F5
$696    $CC72   RND      VC, #72         ; VC = random & 72
$698    $56E1   UNKNOWN  $56E1           ; Unknown 5xxx instruction
$69A    $3157   SE       V1, #57         ; Skip if V1 == 87
$69C    $F9EE   UNKNOWN  F9EE            ; Unknown Fxxx instruction
$69E    $E538   UNKNOWN  $E538           ; Unknown Exxx instruction
$6A0    $4178   SNE      V1, #78         ; Skip if V1 != 120
$6A2    $3B21   SE       VB, #21         ; Skip if VB == 33
$6A4    $DBE1   DRW      VB, VE, #1      ; Draw 1-byte sprite at VB, VE
$6A6    $70EB   ADD      V0, #EB         ; Add 235 to V0
$6A8    $4F5E   SNE      VF, #5E         ; Skip if VF != 94
$6AA    $B145   JP       V0, $145        ; Jump to V0 + 145
$6AC    $5062   UNKNOWN  $5062           ; Unknown 5xxx instruction
$6AE    $F451   UNKNOWN  F451            ; Unknown Fxxx instruction
$6B0    $A6CA   LD       I, $6CA         ; Load 6CA into I
$6B2    $8657   SUBN     V6, V5          ; V6 = V5 - V6, VF = !borrow
$6B4    $06EA   SYS      $6EA            ; System call to 6EA
$6B6    $A764   LD       I, $764         ; Load 764 into I
$6B8    $9E84   UNKNOWN  $9E84           ; Unknown 9xxx instruction
$6BA    $DF4A   DRW      VF, V4, #A      ; Draw 10-byte sprite at VF, V4
$6BC    $5010   SE       V0, V1          ; Skip if V0 == V1
$6BE    $A351   LD       I, $351         ; Load 351 into I
$6C0    $2C16   CALL     $C16            ; Call subroutine at C16
$6C2    $493A   SNE      V9, #3A         ; Skip if V9 != 58
$6C4    $FF42   UNKNOWN  FF42            ; Unknown Fxxx instruction
$6C6    $1B5A   JP       $B5A            ; Jump to B5A
$6C8    $767B   ADD      V6, #7B         ; Add 123 to V6
$6CA    $DBB7   DRW      VB, VB, #7      ; Draw 7-byte sprite at VB, VB
$6CC    $2478   CALL     $478            ; Call subroutine at 478
$6CE    $D890   DRW      V8, V9, #0      ; Draw 0-byte sprite at V8, V9
$6D0    $54DE   UNKNOWN  $54DE           ; Unknown 5xxx instruction
$6D2    $8610   LD       V6, V1          ; V6 = V1
$6D4    $DBA9   DRW      VB, VA, #9      ; Draw 9-byte sprite at VB, VA
$6D6    $CDE8   RND      VD, #E8         ; VD = random & E8
$6D8    $3A43   SE       VA, #43         ; Skip if VA == 67
$6DA    $3F5F   SE       VF, #5F         ; Skip if VF == 95
$6DC    $9273   UNKNOWN  $9273           ; Unknown 9xxx instruction
$6DE    $8694   ADD      V6, V9          ; V6 += V9, VF = carry
$6E0    $2770   CALL     $770            ; Call subroutine at 770
$6E2    $4B58   SNE      VB, #58         ; Skip if VB != 88
$6E4    $B46D   JP       V0, $46D        ; Jump to V0 + 46D
$6E6    $9065   UNKNOWN  $9065           ; Unknown 9xxx instruction
$6E8    $FBA0   UNKNOWN  FBA0            ; Unknown Fxxx instruction
$6EA    $7ED2   ADD      VE, #D2         ; Add 210 to VE
$6EC    $2839   CALL     $839            ; Call subroutine at 839
$6EE    $E485   UNKNOWN  $E485           ; Unknown Exxx instruction
$6F0    $E1CB   UNKNOWN  $E1CB           ; Unknown Exxx instruction
$6F2    $FADE   UNKNOWN  FADE            ; Unknown Fxxx instruction
$6F4    $697F   LD       V9, #7F         ; Load 127 into V9
$6F6    $6E78   LD       VE, #78         ; Load 120 into VE
$6F8    $658E   LD       V5, #8E         ; Load 142 into V5
$6FA    $9AEA   UNKNOWN  $9AEA           ; Unknown 9xxx instruction
$6FC    $D08C   DRW      V0, V8, #C      ; Draw 12-byte sprite at V0, V8
$6FE    $30B3   SE       V0, #B3         ; Skip if V0 == 179
$700    $D3C4   DRW      V3, VC, #4      ; Draw 4-byte sprite at V3, VC
$702    $E189   UNKNOWN  $E189           ; Unknown Exxx instruction
$704    $62AB   LD       V2, #AB         ; Load 171 into V2
$706    $3966   SE       V9, #66         ; Skip if V9 == 102
$708    $66E8   LD       V6, #E8         ; Load 232 into V6
$70A    $09BA   SYS      $9BA            ; System call to 9BA
$70C    $626A   LD       V2, #6A         ; Load 106 into V2
$70E    $0D53   SYS      $D53            ; System call to D53
$710    $2265   CALL     $265            ; Call subroutine at 265
$712    $7060   ADD      V0, #60         ; Add 96 to V0
$714    $91E8   UNKNOWN  $91E8           ; Unknown 9xxx instruction
$716    $9334   UNKNOWN  $9334           ; Unknown 9xxx instruction
$718    $CB57   RND      VB, #57         ; VB = random & 57
$71A    $1F94   JP       $F94            ; Jump to F94
$71C    $50E1   UNKNOWN  $50E1           ; Unknown 5xxx instruction
$71E    $B24D   JP       V0, $24D        ; Jump to V0 + 24D
$720    $6F18   LD       VF, #18         ; Load 24 into VF
$722    $4621   SNE      V6, #21         ; Skip if V6 != 33
$724    $A56D   LD       I, $56D         ; Load 56D into I
$726    $5113   UNKNOWN  $5113           ; Unknown 5xxx instruction
$728    $E3B8   UNKNOWN  $E3B8           ; Unknown Exxx instruction
$72A    $AA5B   LD       I, $A5B         ; Load A5B into I
$72C    $3E52   SE       VE, #52         ; Skip if VE == 82
$72E    $E075   UNKNOWN  $E075           ; Unknown Exxx instruction
$730    $1B9D   JP       $B9D            ; Jump to B9D
$732    $8161   OR       V1, V6          ; V1 |= V6
$734    $B8DF   JP       V0, $8DF        ; Jump to V0 + 8DF
$736    $CC3C   RND      VC, #3C         ; VC = random & 3C
$738    $130F   JP       $30F            ; Jump to 30F
$73A    $A951   LD       I, $951         ; Load 951 into I
$73C    $3CD6   SE       VC, #D6         ; Skip if VC == 214
$73E    $1FC5   JP       $FC5            ; Jump to FC5
$740    $D4E7   DRW      V4, VE, #7      ; Draw 7-byte sprite at V4, VE
$742    $B845   JP       V0, $845        ; Jump to V0 + 845
$744    $C23F   RND      V2, #3F         ; V2 = random & 3F
$746    $6145   LD       V1, #45         ; Load 69 into V1
$748    $DF2F   DRW      VF, V2, #F      ; Draw 15-byte sprite at VF, V2
$74A    $57A9   UNKNOWN  $57A9           ; Unknown 5xxx instruction
$74C    $2D22   CALL     $D22            ; Call subroutine at D22
$74E    $40EB   SNE      V0, #EB         ; Skip if V0 != 235
$750    $3C8B   SE       VC, #8B         ; Skip if VC == 139
$752    $7DE5   ADD      VD, #E5         ; Add 229 to VD
$754    $B34B   JP       V0, $34B        ; Jump to V0 + 34B
$756    $8EFE   SHL      VE              ; VE <<= 1, VF = MSB
$758    $4A31   SNE      VA, #31         ; Skip if VA != 49
$75A    $8ABA   UNKNOWN  8ABA            ; Unknown 8xxx instruction
$75C    $21EE   CALL     $1EE            ; Call subroutine at 1EE
$75E    $FA72   UNKNOWN  FA72            ; Unknown Fxxx instruction
$760    $324D   SE       V2, #4D         ; Skip if V2 == 77
$762    $EFB1   UNKNOWN  $EFB1           ; Unknown Exxx instruction
$764    $B6C3   JP       V0, $6C3        ; Jump to V0 + 6C3
$766    $61F1   LD       V1, #F1         ; Load 241 into V1
$768    $6815   LD       V8, #15         ; Load 21 into V8
$76A    $B90C   JP       V0, $90C        ; Jump to V0 + 90C
$76C    $614E   LD       V1, #4E         ; Load 78 into V1
$76E    $18DE   JP       $8DE            ; Jump to 8DE
$770    $F54A   UNKNOWN  F54A            ; Unknown Fxxx instruction
$772    $8C26   SHR      VC              ; VC >>= 1, VF = LSB
$774    $61D6   LD       V1, #D6         ; Load 214 into V1
$776    $C692   RND      V6, #92         ; V6 = random & 92
$778    $2F96   CALL     $F96            ; Call subroutine at F96
$77A    $4B1F   SNE      VB, #1F         ; Skip if VB != 31
$77C    $61FC   LD       V1, #FC         ; Load 252 into V1
$77E    $7EE6   ADD      VE, #E6         ; Add 230 to VE
$780    $0E39   SYS      $E39            ; System call to E39
$782    $B386   JP       V0, $386        ; Jump to V0 + 386
$784    $ED44   UNKNOWN  $ED44           ; Unknown Exxx instruction
$786    $5646   UNKNOWN  $5646           ; Unknown 5xxx instruction
$788    $8B5A   UNKNOWN  8B5A            ; Unknown 8xxx instruction
$78A    $CCC2   RND      VC, #C2         ; VC = random & C2
$78C    $FA5F   UNKNOWN  FA5F            ; Unknown Fxxx instruction
$78E    $2125   CALL     $125            ; Call subroutine at 125
$790    $CEBD   RND      VE, #BD         ; VE = random & BD
$792    $1FD5   JP       $FD5            ; Jump to FD5
$794    $0056   SYS      $056            ; System call to 056
$796    $3A09   SE       VA, #09         ; Skip if VA == 9
$798    $6138   LD       V1, #38         ; Load 56 into V1
$79A    $98BF   UNKNOWN  $98BF           ; Unknown 9xxx instruction
$79C    $BBE5   JP       V0, $BE5        ; Jump to V0 + BE5
$79E    $514F   UNKNOWN  $514F           ; Unknown 5xxx instruction
$7A0    $2686   CALL     $686            ; Call subroutine at 686
$7A2    $485C   SNE      V8, #5C         ; Skip if V8 != 92
$7A4    $3A6A   SE       VA, #6A         ; Skip if VA == 106
$7A6    $6C8C   LD       VC, #8C         ; Load 140 into VC
$7A8    $8E0F   UNKNOWN  8E0F            ; Unknown 8xxx instruction
$7AA    $ED4E   UNKNOWN  $ED4E           ; Unknown Exxx instruction
$7AC    $7DF4   ADD      VD, #F4         ; Add 244 to VD
$7AE    $BB8D   JP       V0, $B8D        ; Jump to V0 + B8D
$7B0    $97A0   SNE      V7, VA          ; Skip if V7 != VA
$7B2    $FB3A   UNKNOWN  FB3A            ; Unknown Fxxx instruction
$7B4    $F5B3   UNKNOWN  F5B3            ; Unknown Fxxx instruction
$7B6    $B2CA   JP       V0, $2CA        ; Jump to V0 + 2CA
$7B8    $589E   UNKNOWN  $589E           ; Unknown 5xxx instruction
$7BA    $589D   UNKNOWN  $589D           ; Unknown 5xxx instruction
$7BC    $E665   UNKNOWN  $E665           ; Unknown Exxx instruction
$7BE    $913F   UNKNOWN  $913F           ; Unknown 9xxx instruction
$7C0    $1012   JP       $012            ; Jump to 012
$7C2    $84D6   SHR      V4              ; V4 >>= 1, VF = LSB
$7C4    $BB58   JP       V0, $B58        ; Jump to V0 + B58
$7C6    $033B   SYS      $33B            ; System call to 33B
$7C8    $6206   LD       V2, #06         ; Load 6 into V2
$7CA    $268A   CALL     $68A            ; Call subroutine at 68A
$7CC    $9C32   UNKNOWN  $9C32           ; Unknown 9xxx instruction
$7CE    $C02A   RND      V0, #2A         ; V0 = random & 2A
$7D0    $0366   SYS      $366            ; System call to 366
$7D2    $0847   SYS      $847            ; System call to 847
$7D4    $4DD2   SNE      VD, #D2         ; Skip if VD != 210
$7D6    $6104   LD       V1, #04         ; Load 4 into V1
$7D8    $B127   JP       V0, $127        ; Jump to V0 + 127
$7DA    $197C   JP       $97C            ; Jump to 97C
$7DC    $D2E7   DRW      V2, VE, #7      ; Draw 7-byte sprite at V2, VE
$7DE    $9031   UNKNOWN  $9031           ; Unknown 9xxx instruction
$7E0    $093E   SYS      $93E            ; System call to 93E
$7E2    $B55C   JP       V0, $55C        ; Jump to V0 + 55C
$7E4    $060C   SYS      $60C            ; System call to 60C
$7E6    $2D1C   CALL     $D1C            ; Call subroutine at D1C
$7E8    $42DD   SNE      V2, #DD         ; Skip if V2 != 221
$7EA    $72AD   ADD      V2, #AD         ; Add 173 to V2
$7EC    $E642   UNKNOWN  $E642           ; Unknown Exxx instruction
$7EE    $9203   UNKNOWN  $9203           ; Unknown 9xxx instruction
$7F0    $7E57   ADD      VE, #57         ; Add 87 to VE
$7F2    $9DAE   UNKNOWN  $9DAE           ; Unknown 9xxx instruction
$7F4    $0575   SYS      $575            ; System call to 575
$7F6    $3C5F   SE       VC, #5F         ; Skip if VC == 95
$7F8    $34A3   SE       V4, #A3         ; Skip if V4 == 163
$7FA    $B24D   JP       V0, $24D        ; Jump to V0 + 24D
$7FC    $F9AA   UNKNOWN  F9AA            ; Unknown Fxxx instruction
$7FE    $3DB8   SE       VD, #B8         ; Skip if VD == 184
$800    $D4A0   DRW      V4, VA, #0      ; Draw 0-byte sprite at V4, VA
$802    $1B9D   JP       $B9D            ; Jump to B9D
$804    $500D   UNKNOWN  $500D           ; Unknown 5xxx instruction
$806    $2A78   CALL     $A78            ; Call subroutine at A78
$808    $771C   ADD      V7, #1C         ; Add 28 to V7
$80A    $ED92   UNKNOWN  $ED92           ; Unknown Exxx instruction
$80C    $759C   ADD      V5, #9C         ; Add 156 to V5
$80E    $3B72   SE       VB, #72         ; Skip if VB == 114
$810    $B1A3   JP       V0, $1A3        ; Jump to V0 + 1A3
$812    $4194   SNE      V1, #94         ; Skip if V1 != 148
$814    $5818   UNKNOWN  $5818           ; Unknown 5xxx instruction
$816    $4C63   SNE      VC, #63         ; Skip if VC != 99
$818    $E90E   UNKNOWN  $E90E           ; Unknown Exxx instruction
$81A    $1C0D   JP       $C0D            ; Jump to C0D
$81C    $D445   DRW      V4, V4, #5      ; Draw 5-byte sprite at V4, V4
$81E    $3573   SE       V5, #73         ; Skip if V5 == 115
$820    $4CCD   SNE      VC, #CD         ; Skip if VC != 205
$822    $5277   UNKNOWN  $5277           ; Unknown 5xxx instruction
$824    $C3FF   RND      V3, #FF         ; V3 = random & FF
$826    $66F2   LD       V6, #F2         ; Load 242 into V6
$828    $6B46   LD       VB, #46         ; Load 70 into VB
$82A    $8383   XOR      V3, V8          ; V3 ^= V8
$82C    $7E47   ADD      VE, #47         ; Add 71 to VE
$82E    $37E8   SE       V7, #E8         ; Skip if V7 == 232
$830    $9587   UNKNOWN  $9587           ; Unknown 9xxx instruction
$832    $04D3   SYS      $4D3            ; System call to 4D3
$834    $7BDD   ADD      VB, #DD         ; Add 221 to VB
$836    $30E6   SE       V0, #E6         ; Skip if V0 == 230
$838    $0646   SYS      $646            ; System call to 646
$83A    $1ED4   JP       $ED4            ; Jump to ED4
$83C    $9A62   UNKNOWN  $9A62           ; Unknown 9xxx instruction
$83E    $B463   JP       V0, $463        ; Jump to V0 + 463
$840    $CB97   RND      VB, #97         ; VB = random & 97
$842    $1842   JP       $842            ; Jump to 842
$844    $7FCD   ADD      VF, #CD         ; Add 205 to VF
$846    $8F11   OR       VF, V1          ; VF |= V1
$848    $D867   DRW      V8, V6, #7      ; Draw 7-byte sprite at V8, V6
$84A    $68D6   LD       V8, #D6         ; Load 214 into V8
$84C    $9094   UNKNOWN  $9094           ; Unknown 9xxx instruction
$84E    $216E   CALL     $16E            ; Call subroutine at 16E
$850    $D915   DRW      V9, V1, #5      ; Draw 5-byte sprite at V9, V1
$852    $4D1C   SNE      VD, #1C         ; Skip if VD != 28
$854    $A0C0   LD       I, $0C0         ; Load 0C0 into I
$856    $F241   UNKNOWN  F241            ; Unknown Fxxx instruction
$858    $7732   ADD      V7, #32         ; Add 50 to V7
$85A    $444F   SNE      V4, #4F         ; Skip if V4 != 79
$85C    $1C06   JP       $C06            ; Jump to C06
$85E    $0317   SYS      $317            ; System call to 317
$860    $495F   SNE      V9, #5F         ; Skip if V9 != 95
$862    $BCBA   JP       V0, $CBA        ; Jump to V0 + CBA
$864    $3676   SE       V6, #76         ; Skip if V6 == 118
$866    $B783   JP       V0, $783        ; Jump to V0 + 783
$868    $CD1B   RND      VD, #1B         ; VD = random & 1B
$86A    $2A87   CALL     $A87            ; Call subroutine at A87
$86C    $A655   LD       I, $655         ; Load 655 into I
$86E    $E242   UNKNOWN  $E242           ; Unknown Exxx instruction
$870    $8D09   UNKNOWN  8D09            ; Unknown 8xxx instruction
$872    $F82B   UNKNOWN  F82B            ; Unknown Fxxx instruction
$874    $98EC   UNKNOWN  $98EC           ; Unknown 9xxx instruction
$876    $06E3   SYS      $6E3            ; System call to 6E3
$878    $FFA3   UNKNOWN  FFA3            ; Unknown Fxxx instruction
$87A    $F358   UNKNOWN  F358            ; Unknown Fxxx instruction
$87C    $F06C   UNKNOWN  F06C            ; Unknown Fxxx instruction
$87E    $A76F   LD       I, $76F         ; Load 76F into I
$880    $F4B1   UNKNOWN  F4B1            ; Unknown Fxxx instruction
$882    $0C06   SYS      $C06            ; System call to C06
$884    $28A9   CALL     $8A9            ; Call subroutine at 8A9
$886    $3EF3   SE       VE, #F3         ; Skip if VE == 243
$888    $0E54   SYS      $E54            ; System call to E54
$88A    $1AB5   JP       $AB5            ; Jump to AB5
$88C    $3D48   SE       VD, #48         ; Skip if VD == 72
$88E    $12B1   JP       $2B1            ; Jump to 2B1
$890    $AED2   LD       I, $ED2         ; Load ED2 into I
$892    $A7AC   LD       I, $7AC         ; Load 7AC into I
$894    $F038   UNKNOWN  F038            ; Unknown Fxxx instruction
$896    $3CC0   SE       VC, #C0         ; Skip if VC == 192
$898    $E49C   UNKNOWN  $E49C           ; Unknown Exxx instruction
$89A    $6F75   LD       VF, #75         ; Load 117 into VF
$89C    $C20C   RND      V2, #0C         ; V2 = random & 0C
$89E    $6F05   LD       VF, #05         ; Load 5 into VF
$8A0    $0593   SYS      $593            ; System call to 593
$8A2    $695E   LD       V9, #5E         ; Load 94 into V9
$8A4    $54A8   UNKNOWN  $54A8           ; Unknown 5xxx instruction
$8A6    $9211   UNKNOWN  $9211           ; Unknown 9xxx instruction
$8A8    $5773   UNKNOWN  $5773           ; Unknown 5xxx instruction
$8AA    $EB3E   UNKNOWN  $EB3E           ; Unknown Exxx instruction
$8AC    $4DDD   SNE      VD, #DD         ; Skip if VD != 221
$8AE    $E4D9   UNKNOWN  $E4D9           ; Unknown Exxx instruction
$8B0    $9A30   SNE      VA, V3          ; Skip if VA != V3
$8B2    $2440   CALL     $440            ; Call subroutine at 440
$8B4    $D614   DRW      V6, V1, #4      ; Draw 4-byte sprite at V6, V1
$8B6    $6FB1   LD       VF, #B1         ; Load 177 into VF
$8B8    $A23D   LD       I, $23D         ; Load 23D into I
$8BA    $081F   SYS      $81F            ; System call to 81F
$8BC    $22CC   CALL     $2CC            ; Call subroutine at 2CC
$8BE    $0FBB   SYS      $FBB            ; System call to FBB
$8C0    $3066   SE       V0, #66         ; Skip if V0 == 102
$8C2    $814B   UNKNOWN  814B            ; Unknown 8xxx instruction
$8C4    $789C   ADD      V8, #9C         ; Add 156 to V8
$8C6    $CA43   RND      VA, #43         ; VA = random & 43
$8C8    $2083   CALL     $083            ; Call subroutine at 083
$8CA    $F4FA   UNKNOWN  F4FA            ; Unknown Fxxx instruction
$8CC    $1128   JP       $128            ; Jump to 128
$8CE    $6F2A   LD       VF, #2A         ; Load 42 into VF
$8D0    $97BA   UNKNOWN  $97BA           ; Unknown 9xxx instruction
$8D2    $BC2F   JP       V0, $C2F        ; Jump to V0 + C2F
$8D4    $E8E0   UNKNOWN  $E8E0           ; Unknown Exxx instruction
$8D6    $953A   UNKNOWN  $953A           ; Unknown 9xxx instruction
$8D8    $00D3   SYS      $0D3            ; System call to 0D3
$8DA    $EF3A   UNKNOWN  $EF3A           ; Unknown Exxx instruction
$8DC    $95F8   UNKNOWN  $95F8           ; Unknown 9xxx instruction
$8DE    $5502   UNKNOWN  $5502           ; Unknown 5xxx instruction
$8E0    $AF97   LD       I, $F97         ; Load F97 into I
$8E2    $2191   CALL     $191            ; Call subroutine at 191
$8E4    $71CA   ADD      V1, #CA         ; Add 202 to V1
$8E6    $828A   UNKNOWN  828A            ; Unknown 8xxx instruction
$8E8    $5CF0   SE       VC, VF          ; Skip if VC == VF
$8EA    $6456   LD       V4, #56         ; Load 86 into V4
$8EC    $5BDD   UNKNOWN  $5BDD           ; Unknown 5xxx instruction
$8EE    $F3D0   UNKNOWN  F3D0            ; Unknown Fxxx instruction
$8F0    $7E8A   ADD      VE, #8A         ; Add 138 to VE
$8F2    $F981   UNKNOWN  F981            ; Unknown Fxxx instruction
$8F4    $A2DE   LD       I, $2DE         ; Load 2DE into I
$8F6    $E68A   UNKNOWN  $E68A           ; Unknown Exxx instruction
$8F8    $B684   JP       V0, $684        ; Jump to V0 + 684
$8FA    $46E1   SNE      V6, #E1         ; Skip if V6 != 225
$8FC    $532F   UNKNOWN  $532F           ; Unknown 5xxx instruction
$8FE    $81C4   ADD      V1, VC          ; V1 += VC, VF = carry
$900    $469D   SNE      V6, #9D         ; Skip if V6 != 157
$902    $122E   JP       $22E            ; Jump to 22E
$904    $E3DE   UNKNOWN  $E3DE           ; Unknown Exxx instruction
$906    $1910   JP       $910            ; Jump to 910
$908    $99F6   UNKNOWN  $99F6           ; Unknown 9xxx instruction
$90A    $FBBE   UNKNOWN  FBBE            ; Unknown Fxxx instruction
$90C    $36AF   SE       V6, #AF         ; Skip if V6 == 175
$90E    $2CE1   CALL     $CE1            ; Call subroutine at CE1
$910    $459C   SNE      V5, #9C         ; Skip if V5 != 156
$912    $DD4D   DRW      VD, V4, #D      ; Draw 13-byte sprite at VD, V4
$914    $D54D   DRW      V5, V4, #D      ; Draw 13-byte sprite at V5, V4
$916    $6279   LD       V2, #79         ; Load 121 into V2
$918    $7024   ADD      V0, #24         ; Add 36 to V0
$91A    $7D72   ADD      VD, #72         ; Add 114 to VD
$91C    $87CC   UNKNOWN  87CC            ; Unknown 8xxx instruction
$91E    $E21A   UNKNOWN  $E21A           ; Unknown Exxx instruction
$920    $4482   SNE      V4, #82         ; Skip if V4 != 130
$922    $D5CE   DRW      V5, VC, #E      ; Draw 14-byte sprite at V5, VC
$924    $B4FE   JP       V0, $4FE        ; Jump to V0 + 4FE
$926    $BF4C   JP       V0, $F4C        ; Jump to V0 + F4C
$928    $06B6   SYS      $6B6            ; System call to 6B6
$92A    $C937   RND      V9, #37         ; V9 = random & 37
$92C    $D2E5   DRW      V2, VE, #5      ; Draw 5-byte sprite at V2, VE
$92E    $724E   ADD      V2, #4E         ; Add 78 to V2
$930    $46C6   SNE      V6, #C6         ; Skip if V6 != 198
$932    $9E28   UNKNOWN  $9E28           ; Unknown 9xxx instruction
$934    $5241   UNKNOWN  $5241           ; Unknown 5xxx instruction
$936    $3331   SE       V3, #31         ; Skip if V3 == 49
$938    $2E7B   CALL     $E7B            ; Call subroutine at E7B
$93A    $A456   LD       I, $456         ; Load 456 into I
$93C    $7CE3   ADD      VC, #E3         ; Add 227 to VC
$93E    $9BB6   UNKNOWN  $9BB6           ; Unknown 9xxx instruction
$940    $CDAF   RND      VD, #AF         ; VD = random & AF
$942    $A47E   LD       I, $47E         ; Load 47E into I
$944    $D7B6   DRW      V7, VB, #6      ; Draw 6-byte sprite at V7, VB
$946    $EA92   UNKNOWN  $EA92           ; Unknown Exxx instruction
$948    $EA9F   UNKNOWN  $EA9F           ; Unknown Exxx instruction
$94A    $23A7   CALL     $3A7            ; Call subroutine at 3A7
$94C    $B572   JP       V0, $572        ; Jump to V0 + 572
$94E    $A2DC   LD       I, $2DC         ; Load 2DC into I
$950    $007A   SYS      $07A            ; System call to 07A
$952    $0195   SYS      $195            ; System call to 195
$954    $7189   ADD      V1, #89         ; Add 137 to V1
$956    $B378   JP       V0, $378        ; Jump to V0 + 378
$958    $ED15   UNKNOWN  $ED15           ; Unknown Exxx instruction
$95A    $1CDA   JP       $CDA            ; Jump to CDA
$95C    $B41B   JP       V0, $41B        ; Jump to V0 + 41B
$95E    $D5DC   DRW      V5, VD, #C      ; Draw 12-byte sprite at V5, VD
$960    $B247   JP       V0, $247        ; Jump to V0 + 247
$962    $242D   CALL     $42D            ; Call subroutine at 42D
$964    $662E   LD       V6, #2E         ; Load 46 into V6
$966    $4A9E   SNE      VA, #9E         ; Skip if VA != 158
$968    $810B   UNKNOWN  810B            ; Unknown 8xxx instruction
$96A    $1122   JP       $122            ; Jump to 122
$96C    $2218   CALL     $218            ; Call subroutine at 218
$96E    $F7AE   UNKNOWN  F7AE            ; Unknown Fxxx instruction
$970    $12FC   JP       $2FC            ; Jump to 2FC
$972    $1765   JP       $765            ; Jump to 765
$974    $F62D   UNKNOWN  F62D            ; Unknown Fxxx instruction
$976    $3312   SE       V3, #12         ; Skip if V3 == 18
$978    $4354   SNE      V3, #54         ; Skip if V3 != 84
$97A    $A021   LD       I, $021         ; Load 021 into I
$97C    $088D   SYS      $88D            ; System call to 88D
$97E    $FF32   UNKNOWN  FF32            ; Unknown Fxxx instruction
$980    $BF5C   JP       V0, $F5C        ; Jump to V0 + F5C
$982    $700D   ADD      V0, #0D         ; Add 13 to V0
$984    $D203   DRW      V2, V0, #3      ; Draw 3-byte sprite at V2, V0
$986    $E45B   UNKNOWN  $E45B           ; Unknown Exxx instruction
$988    $69E4   LD       V9, #E4         ; Load 228 into V9
$98A    $1029   JP       $029            ; Jump to 029
$98C    $09D6   SYS      $9D6            ; System call to 9D6
$98E    $73B0   ADD      V3, #B0         ; Add 176 to V3
$990    $893E   SHL      V9              ; V9 <<= 1, VF = MSB
$992    $D7E9   DRW      V7, VE, #9      ; Draw 9-byte sprite at V7, VE
$994    $0363   SYS      $363            ; System call to 363
$996    $C31E   RND      V3, #1E         ; V3 = random & 1E
$998    $9190   SNE      V1, V9          ; Skip if V1 != V9
$99A    $41EB   SNE      V1, #EB         ; Skip if V1 != 235
$99C    $230D   CALL     $30D            ; Call subroutine at 30D
$99E    $6CA8   LD       VC, #A8         ; Load 168 into VC
$9A0    $D1BF   DRW      V1, VB, #F      ; Draw 15-byte sprite at V1, VB
$9A2    $FE2B   UNKNOWN  FE2B            ; Unknown Fxxx instruction
$9A4    $C8D1   RND      V8, #D1         ; V8 = random & D1
$9A6    $1FC7   JP       $FC7            ; Jump to FC7
$9A8    $211A   CALL     $11A            ; Call subroutine at 11A
$9AA    $EFCE   UNKNOWN  $EFCE           ; Unknown Exxx instruction
$9AC    $0915   SYS      $915            ; System call to 915
$9AE    $3B05   SE       VB, #05         ; Skip if VB == 5
$9B0    $B47A   JP       V0, $47A        ; Jump to V0 + 47A
$9B2    $1638   JP       $638            ; Jump to 638
$9B4    $EF22   UNKNOWN  $EF22           ; Unknown Exxx instruction
$9B6    $2082   CALL     $082            ; Call subroutine at 082
$9B8    $15A4   JP       $5A4            ; Jump to 5A4
$9BA    $F504   UNKNOWN  F504            ; Unknown Fxxx instruction
$9BC    $72B2   ADD      V2, #B2         ; Add 178 to V2
$9BE    $6806   LD       V8, #06         ; Load 6 into V8
$9C0    $32E6   SE       V2, #E6         ; Skip if V2 == 230
$9C2    $176D   JP       $76D            ; Jump to 76D
$9C4    $4642   SNE      V6, #42         ; Skip if V6 != 66
$9C6    $9656   UNKNOWN  $9656           ; Unknown 9xxx instruction
$9C8    $72E6   ADD      V2, #E6         ; Add 230 to V2
$9CA    $4541   SNE      V5, #41         ; Skip if V5 != 65
$9CC    $9F65   UNKNOWN  $9F65           ; Unknown 9xxx instruction
$9CE    $7345   ADD      V3, #45         ; Add 69 to V3
$9D0    $4A42   SNE      VA, #42         ; Skip if VA != 66
$9D2    $9CC2   UNKNOWN  $9CC2           ; Unknown 9xxx instruction
$9D4    $294B   CALL     $94B            ; Call subroutine at 94B
$9D6    $002C   SYS      $02C            ; System call to 02C
$9D8    $8A0C   UNKNOWN  8A0C            ; Unknown 8xxx instruction
$9DA    $E17D   UNKNOWN  $E17D           ; Unknown Exxx instruction
$9DC    $5100   SE       V1, V0          ; Skip if V1 == V0
$9DE    $A780   LD       I, $780         ; Load 780 into I
$9E0    $7A38   ADD      VA, #38         ; Add 56 to VA
$9E2    $D3ED   DRW      V3, VE, #D      ; Draw 13-byte sprite at V3, VE
$9E4    $0311   SYS      $311            ; System call to 311
$9E6    $D157   DRW      V1, V5, #7      ; Draw 7-byte sprite at V1, V5
$9E8    $92FD   UNKNOWN  $92FD           ; Unknown 9xxx instruction
$9EA    $760C   ADD      V6, #0C         ; Add 12 to V6
$9EC    $2AE4   CALL     $AE4            ; Call subroutine at AE4
$9EE    $CF49   RND      VF, #49         ; VF = random & 49
$9F0    $331D   SE       V3, #1D         ; Skip if V3 == 29
$9F2    $7A82   ADD      VA, #82         ; Add 130 to VA
$9F4    $7025   ADD      V0, #25         ; Add 37 to V0
$9F6    $A9CE   LD       I, $9CE         ; Load 9CE into I
$9F8    $58A8   UNKNOWN  $58A8           ; Unknown 5xxx instruction
$9FA    $3725   SE       V7, #25         ; Skip if V7 == 37
$9FC    $791F   ADD      V9, #1F         ; Add 31 to V9
$9FE    $B74C   JP       V0, $74C        ; Jump to V0 + 74C
$A00    $84A9   UNKNOWN  84A9            ; Unknown 8xxx instruction
$A02    $6A34   LD       VA, #34         ; Load 52 into VA
$A04    $5942   UNKNOWN  $5942           ; Unknown 5xxx instruction
$A06    $568A   UNKNOWN  $568A           ; Unknown 5xxx instruction
$A08    $3DA9   SE       VD, #A9         ; Skip if VD == 169
$A0A    $F95E   UNKNOWN  F95E            ; Unknown Fxxx instruction
$A0C    $EF38   UNKNOWN  $EF38           ; Unknown Exxx instruction
$A0E    $CA17   RND      VA, #17         ; VA = random & 17
$A10    $67CA   LD       V7, #CA         ; Load 202 into V7
$A12    $1C3A   JP       $C3A            ; Jump to C3A
$A14    $B85D   JP       V0, $85D        ; Jump to V0 + 85D
$A16    $ADDC   LD       I, $DDC         ; Load DDC into I
$A18    $99F6   UNKNOWN  $99F6           ; Unknown 9xxx instruction
$A1A    $6ADE   LD       VA, #DE         ; Load 222 into VA
$A1C    $01FF   SYS      $1FF            ; System call to 1FF
$A1E    $C75A   RND      V7, #5A         ; V7 = random & 5A
$A20    $1E69   JP       $E69            ; Jump to E69
$A22    $4E37   SNE      VE, #37         ; Skip if VE != 55
$A24    $FEDD   UNKNOWN  FEDD            ; Unknown Fxxx instruction
$A26    $33A6   SE       V3, #A6         ; Skip if V3 == 166
$A28    $EF31   UNKNOWN  $EF31           ; Unknown Exxx instruction
$A2A    $137C   JP       $37C            ; Jump to 37C
$A2C    $1597   JP       $597            ; Jump to 597
$A2E    $5E20   SE       VE, V2          ; Skip if VE == V2
$A30    $ADFB   LD       I, $DFB         ; Load DFB into I
$A32    $763A   ADD      V6, #3A         ; Add 58 to V6
$A34    $B59E   JP       V0, $59E        ; Jump to V0 + 59E
$A36    $DE1A   DRW      VE, V1, #A      ; Draw 10-byte sprite at VE, V1
$A38    $6472   LD       V4, #72         ; Load 114 into V4
$A3A    $72F4   ADD      V2, #F4         ; Add 244 to V2
$A3C    $2ABB   CALL     $ABB            ; Call subroutine at ABB
$A3E    $B529   JP       V0, $529        ; Jump to V0 + 529
$A40    $239F   CALL     $39F            ; Call subroutine at 39F
$A42    $815F   UNKNOWN  815F            ; Unknown 8xxx instruction
$A44    $A32E   LD       I, $32E         ; Load 32E into I
$A46    $E541   UNKNOWN  $E541           ; Unknown Exxx instruction
$A48    $1DEB   JP       $DEB            ; Jump to DEB
$A4A    $A03F   LD       I, $03F         ; Load 03F into I
$A4C    $4251   SNE      V2, #51         ; Skip if V2 != 81
$A4E    $FAEB   UNKNOWN  FAEB            ; Unknown Fxxx instruction
$A50    $7F3B   ADD      VF, #3B         ; Add 59 to VF
$A52    $6A8F   LD       VA, #8F         ; Load 143 into VA
$A54    $4668   SNE      V6, #68         ; Skip if V6 != 104
$A56    $1A44   JP       $A44            ; Jump to A44
$A58    $2A20   CALL     $A20            ; Call subroutine at A20
$A5A    $10C0   JP       $0C0            ; Jump to 0C0
$A5C    $6CFC   LD       VC, #FC         ; Load 252 into VC
$A5E    $AE56   LD       I, $E56         ; Load E56 into I
$A60    $AA79   LD       I, $A79         ; Load A79 into I
$A62    $B5A0   JP       V0, $5A0        ; Jump to V0 + 5A0
$A64    $2AD4   CALL     $AD4            ; Call subroutine at AD4
$A66    $936B   UNKNOWN  $936B           ; Unknown 9xxx instruction
$A68    $8851   OR       V8, V5          ; V8 |= V5
$A6A    $3815   SE       V8, #15         ; Skip if V8 == 21
$A6C    $DCBD   DRW      VC, VB, #D      ; Draw 13-byte sprite at VC, VB
$A6E    $C20F   RND      V2, #0F         ; V2 = random & 0F
$A70    $206D   CALL     $06D            ; Call subroutine at 06D
$A72    $65B4   LD       V5, #B4         ; Load 180 into V5
$A74    $B65C   JP       V0, $65C        ; Jump to V0 + 65C
$A76    $EA2E   UNKNOWN  $EA2E           ; Unknown Exxx instruction
$A78    $8A61   OR       VA, V6          ; VA |= V6
$A7A    $5762   UNKNOWN  $5762           ; Unknown 5xxx instruction
$A7C    $DDD3   DRW      VD, VD, #3      ; Draw 3-byte sprite at VD, VD
$A7E    $5C9C   UNKNOWN  $5C9C           ; Unknown 5xxx instruction
$A80    $F0A5   UNKNOWN  F0A5            ; Unknown Fxxx instruction
$A82    $A88B   LD       I, $88B         ; Load 88B into I
$A84    $554E   UNKNOWN  $554E           ; Unknown 5xxx instruction
$A86    $39E1   SE       V9, #E1         ; Skip if V9 == 225
$A88    $5013   UNKNOWN  $5013           ; Unknown 5xxx instruction
$A8A    $C665   RND      V6, #65         ; V6 = random & 65
$A8C    $42C1   SNE      V2, #C1         ; Skip if V2 != 193
$A8E    $E3FE   UNKNOWN  $E3FE           ; Unknown Exxx instruction
$A90    $91FA   UNKNOWN  $91FA           ; Unknown 9xxx instruction
$A92    $0A5F   SYS      $A5F            ; System call to A5F
$A94    $D069   DRW      V0, V6, #9      ; Draw 9-byte sprite at V0, V6
$A96    $8FC8   UNKNOWN  8FC8            ; Unknown 8xxx instruction
$A98    $1D7D   JP       $D7D            ; Jump to D7D
$A9A    $3C78   SE       VC, #78         ; Skip if VC == 120
$A9C    $42D2   SNE      V2, #D2         ; Skip if V2 != 210
$A9E    $97BA   UNKNOWN  $97BA           ; Unknown 9xxx instruction
$AA0    $9881   UNKNOWN  $9881           ; Unknown 9xxx instruction
$AA2    $F6B5   UNKNOWN  F6B5            ; Unknown Fxxx instruction
$AA4    $2D4B   CALL     $D4B            ; Call subroutine at D4B
$AA6    $923C   UNKNOWN  $923C           ; Unknown 9xxx instruction
$AA8    $CC21   RND      VC, #21         ; VC = random & 21
$AAA    $1099   JP       $099            ; Jump to 099
$AAC    $097B   SYS      $97B            ; System call to 97B
$AAE    $8570   LD       V5, V7          ; V5 = V7
$AB0    $2C61   CALL     $C61            ; Call subroutine at C61
$AB2    $7DF3   ADD      VD, #F3         ; Add 243 to VD
$AB4    $BF38   JP       V0, $F38        ; Jump to V0 + F38
$AB6    $E350   UNKNOWN  $E350           ; Unknown Exxx instruction
$AB8    $ED38   UNKNOWN  $ED38           ; Unknown Exxx instruction
$ABA    $B362   JP       V0, $362        ; Jump to V0 + 362
$ABC    $5011   UNKNOWN  $5011           ; Unknown 5xxx instruction
$ABE    $5BBA   UNKNOWN  $5BBA           ; Unknown 5xxx instruction
$AC0    $3645   SE       V6, #45         ; Skip if V6 == 69
$AC2    $BB77   JP       V0, $B77        ; Jump to V0 + B77
$AC4    $90BE   UNKNOWN  $90BE           ; Unknown 9xxx instruction
$AC6    $7F9F   ADD      VF, #9F         ; Add 159 to VF
$AC8    $D279   DRW      V2, V7, #9      ; Draw 9-byte sprite at V2, V7
$ACA    $2E9E   CALL     $E9E            ; Call subroutine at E9E
$ACC    $A9B7   LD       I, $9B7         ; Load 9B7 into I
$ACE    $5395   UNKNOWN  $5395           ; Unknown 5xxx instruction
$AD0    $A4AB   LD       I, $4AB         ; Load 4AB into I
$AD2    $0CDA   SYS      $CDA            ; System call to CDA
$AD4    $435B   SNE      V3, #5B         ; Skip if V3 != 91
$AD6    $3DD7   SE       VD, #D7         ; Skip if VD == 215
$AD8    $AA9E   LD       I, $A9E         ; Load A9E into I
$ADA    $E219   UNKNOWN  $E219           ; Unknown Exxx instruction
$ADC    $093B   SYS      $93B            ; System call to 93B
$ADE    $591C   UNKNOWN  $591C           ; Unknown 5xxx instruction
$AE0    $EFD0   UNKNOWN  $EFD0           ; Unknown Exxx instruction
$AE2    $51AA   UNKNOWN  $51AA           ; Unknown 5xxx instruction
$AE4    $753A   ADD      V5, #3A         ; Add 58 to V5
$AE6    $E881   UNKNOWN  $E881           ; Unknown Exxx instruction
$AE8    $C4D2   RND      V4, #D2         ; V4 = random & D2
$AEA    $73CF   ADD      V3, #CF         ; Add 207 to V3
$AEC    $9D91   UNKNOWN  $9D91           ; Unknown 9xxx instruction
$AEE    $E769   UNKNOWN  $E769           ; Unknown Exxx instruction
$AF0    $199E   JP       $99E            ; Jump to 99E
$AF2    $791B   ADD      V9, #1B         ; Add 27 to V9
$AF4    $34DF   SE       V4, #DF         ; Skip if V4 == 223
$AF6    $6259   LD       V2, #59         ; Load 89 into V2
$AF8    $DB0A   DRW      VB, V0, #A      ; Draw 10-byte sprite at VB, V0
$AFA    $71EF   ADD      V1, #EF         ; Add 239 to V1
$AFC    $AD19   LD       I, $D19         ; Load D19 into I
$AFE    $B70F   JP       V0, $70F        ; Jump to V0 + 70F
$B00    $5EC3   UNKNOWN  $5EC3           ; Unknown 5xxx instruction
$B02    $BE65   JP       V0, $E65        ; Jump to V0 + E65
$B04    $3C84   SE       VC, #84         ; Skip if VC == 132
$B06    $9574   UNKNOWN  $9574           ; Unknown 9xxx instruction
$B08    $636D   LD       V3, #6D         ; Load 109 into V3
$B0A    $6B7F   LD       VB, #7F         ; Load 127 into VB
$B0C    $511F   UNKNOWN  $511F           ; Unknown 5xxx instruction
$B0E    $6B14   LD       VB, #14         ; Load 20 into VB
$B10    $F0C6   UNKNOWN  F0C6            ; Unknown Fxxx instruction
$B12    $386A   SE       V8, #6A         ; Skip if V8 == 106
$B14    $96C4   UNKNOWN  $96C4           ; Unknown 9xxx instruction
$B16    $792B   ADD      V9, #2B         ; Add 43 to V9
$B18    $E328   UNKNOWN  $E328           ; Unknown Exxx instruction
$B1A    $8982   AND      V9, V8          ; V9 &= V8
$B1C    $F6A8   UNKNOWN  F6A8            ; Unknown Fxxx instruction
$B1E    $BD9B   JP       V0, $D9B        ; Jump to V0 + D9B
$B20    $EF8A   UNKNOWN  $EF8A           ; Unknown Exxx instruction
$B22    $39DE   SE       V9, #DE         ; Skip if V9 == 222
$B24    $5BEB   UNKNOWN  $5BEB           ; Unknown 5xxx instruction
$B26    $BA8F   JP       V0, $A8F        ; Jump to V0 + A8F
$B28    $4C48   SNE      VC, #48         ; Skip if VC != 72
$B2A    $253D   CALL     $53D            ; Call subroutine at 53D
$B2C    $C090   RND      V0, #90         ; V0 = random & 90
$B2E    $F1AF   UNKNOWN  F1AF            ; Unknown Fxxx instruction
$B30    $B6BE   JP       V0, $6BE        ; Jump to V0 + 6BE
$B32    $C931   RND      V9, #31         ; V9 = random & 31
$B34    $24D7   CALL     $4D7            ; Call subroutine at 4D7
$B36    $DFEA   DRW      VF, VE, #A      ; Draw 10-byte sprite at VF, VE
$B38    $5E66   UNKNOWN  $5E66           ; Unknown 5xxx instruction
$B3A    $2CA8   CALL     $CA8            ; Call subroutine at CA8
$B3C    $F8CB   UNKNOWN  F8CB            ; Unknown Fxxx instruction
$B3E    $94A6   UNKNOWN  $94A6           ; Unknown 9xxx instruction
$B40    $D02D   DRW      V0, V2, #D      ; Draw 13-byte sprite at V0, V2
$B42    $E238   UNKNOWN  $E238           ; Unknown Exxx instruction
$B44    $7AB6   ADD      VA, #B6         ; Add 182 to VA
$B46    $C453   RND      V4, #53         ; V4 = random & 53
$B48    $8109   UNKNOWN  8109            ; Unknown 8xxx instruction
$B4A    $C04F   RND      V0, #4F         ; V0 = random & 4F
$B4C    $43FC   SNE      V3, #FC         ; Skip if V3 != 252
$B4E    $A428   LD       I, $428         ; Load 428 into I
$B50    $A195   LD       I, $195         ; Load 195 into I
$B52    $497E   SNE      V9, #7E         ; Skip if V9 != 126
$B54    $CD62   RND      VD, #62         ; VD = random & 62
$B56    $6481   LD       V4, #81         ; Load 129 into V4
$B58    $8D46   SHR      VD              ; VD >>= 1, VF = LSB
$B5A    $E917   UNKNOWN  $E917           ; Unknown Exxx instruction
$B5C    $5442   UNKNOWN  $5442           ; Unknown 5xxx instruction
$B5E    $E826   UNKNOWN  $E826           ; Unknown Exxx instruction
$B60    $CB6F   RND      VB, #6F         ; VB = random & 6F
$B62    $056A   SYS      $56A            ; System call to 56A
$B64    $7316   ADD      V3, #16         ; Add 22 to V3
$B66    $3B89   SE       VB, #89         ; Skip if VB == 137
$B68    $6C0A   LD       VC, #0A         ; Load 10 into VC
$B6A    $E767   UNKNOWN  $E767           ; Unknown Exxx instruction
$B6C    $74D5   ADD      V4, #D5         ; Add 213 to V4
$B6E    $01DC   SYS      $1DC            ; System call to 1DC
$B70    $8FDC   UNKNOWN  8FDC            ; Unknown 8xxx instruction
$B72    $EF74   UNKNOWN  $EF74           ; Unknown Exxx instruction
$B74    $C28D   RND      V2, #8D         ; V2 = random & 8D
$B76    $6D2A   LD       VD, #2A         ; Load 42 into VD
$B78    $FEED   UNKNOWN  FEED            ; Unknown Fxxx instruction
$B7A    $EF27   UNKNOWN  $EF27           ; Unknown Exxx instruction
$B7C    $A74C   LD       I, $74C         ; Load 74C into I
$B7E    $A21D   LD       I, $21D         ; Load 21D into I
$B80    $C253   RND      V2, #53         ; V2 = random & 53
$B82    $D6C1   DRW      V6, VC, #1      ; Draw 1-byte sprite at V6, VC
$B84    $285B   CALL     $85B            ; Call subroutine at 85B
$B86    $A5D9   LD       I, $5D9         ; Load 5D9 into I
$B88    $A6B7   LD       I, $6B7         ; Load 6B7 into I
$B8A    $D1C5   DRW      V1, VC, #5      ; Draw 5-byte sprite at V1, VC
$B8C    $F94A   UNKNOWN  F94A            ; Unknown Fxxx instruction
$B8E    $381A   SE       V8, #1A         ; Skip if V8 == 26
$B90    $5661   UNKNOWN  $5661           ; Unknown 5xxx instruction
$B92    $47F3   SNE      V7, #F3         ; Skip if V7 != 243
$B94    $21FF   CALL     $1FF            ; Call subroutine at 1FF
$B96    $FDB0   UNKNOWN  FDB0            ; Unknown Fxxx instruction
$B98    $3ED8   SE       VE, #D8         ; Skip if VE == 216
$B9A    $8999   UNKNOWN  8999            ; Unknown 8xxx instruction
$B9C    $2ABD   CALL     $ABD            ; Call subroutine at ABD
$B9E    $C682   RND      V6, #82         ; V6 = random & 82
$BA0    $DFDE   DRW      VF, VD, #E      ; Draw 14-byte sprite at VF, VD
$BA2    $663D   LD       V6, #3D         ; Load 61 into V6
$BA4    $0984   SYS      $984            ; System call to 984
$BA6    $8A42   AND      VA, V4          ; VA &= V4
$BA8    $B6D6   JP       V0, $6D6        ; Jump to V0 + 6D6
$BAA    $375D   SE       V7, #5D         ; Skip if V7 == 93
$BAC    $70D8   ADD      V0, #D8         ; Add 216 to V0
$BAE    $A785   LD       I, $785         ; Load 785 into I
$BB0    $A991   LD       I, $991         ; Load 991 into I
$BB2    $D93E   DRW      V9, V3, #E      ; Draw 14-byte sprite at V9, V3
$BB4    $0351   SYS      $351            ; System call to 351
$BB6    $F40E   UNKNOWN  F40E            ; Unknown Fxxx instruction
$BB8    $B65E   JP       V0, $65E        ; Jump to V0 + 65E
$BBA    $B262   JP       V0, $262        ; Jump to V0 + 262
$BBC    $D36C   DRW      V3, V6, #C      ; Draw 12-byte sprite at V3, V6
$BBE    $D929   DRW      V9, V2, #9      ; Draw 9-byte sprite at V9, V2
$BC0    $C05F   RND      V0, #5F         ; V0 = random & 5F
$BC2    $9268   UNKNOWN  $9268           ; Unknown 9xxx instruction
$BC4    $4B93   SNE      VB, #93         ; Skip if VB != 147
$BC6    $ABB4   LD       I, $BB4         ; Load BB4 into I
$BC8    $F0D5   UNKNOWN  F0D5            ; Unknown Fxxx instruction
$BCA    $F941   UNKNOWN  F941            ; Unknown Fxxx instruction
$BCC    $4E28   SNE      VE, #28         ; Skip if VE != 40
$BCE    $DFE5   DRW      VF, VE, #5      ; Draw 5-byte sprite at VF, VE
$BD0    $E462   UNKNOWN  $E462           ; Unknown Exxx instruction
$BD2    $5923   UNKNOWN  $5923           ; Unknown 5xxx instruction
$BD4    $79FD   ADD      V9, #FD         ; Add 253 to V9
$BD6    $A411   LD       I, $411         ; Load 411 into I
$BD8    $DD54   DRW      VD, V5, #4      ; Draw 4-byte sprite at VD, V5
$BDA    $5A46   UNKNOWN  $5A46           ; Unknown 5xxx instruction
$BDC    $B3EE   JP       V0, $3EE        ; Jump to V0 + 3EE
$BDE    $4FAA   SNE      VF, #AA         ; Skip if VF != 170
$BE0    $987F   UNKNOWN  $987F           ; Unknown 9xxx instruction
$BE2    $5F71   UNKNOWN  $5F71           ; Unknown 5xxx instruction
$BE4    $47D6   SNE      V7, #D6         ; Skip if V7 != 214
$BE6    $0048   SYS      $048            ; System call to 048
$BE8    $83D4   ADD      V3, VD          ; V3 += VD, VF = carry
$BEA    $8083   XOR      V0, V8          ; V0 ^= V8
$BEC    $D49A   DRW      V4, V9, #A      ; Draw 10-byte sprite at V4, V9
$BEE    $1EF8   JP       $EF8            ; Jump to EF8
$BF0    $28AC   CALL     $8AC            ; Call subroutine at 8AC
$BF2    $D861   DRW      V8, V6, #1      ; Draw 1-byte sprite at V8, V6
$BF4    $7287   ADD      V2, #87         ; Add 135 to V2
$BF6    $CCF9   RND      VC, #F9         ; VC = random & F9
$BF8    $4A16   SNE      VA, #16         ; Skip if VA != 22
$BFA    $394C   SE       V9, #4C         ; Skip if V9 == 76
$BFC    $7F4C   ADD      VF, #4C         ; Add 76 to VF
$BFE    $F86A   UNKNOWN  F86A            ; Unknown Fxxx instruction
$C00    $7420   ADD      V4, #20         ; Add 32 to V4
$C02    $70BB   ADD      V0, #BB         ; Add 187 to V0
$C04    $7B25   ADD      VB, #25         ; Add 37 to VB
$C06    $0BF8   SYS      $BF8            ; System call to BF8
$C08    $FDEF   UNKNOWN  FDEF            ; Unknown Fxxx instruction
$C0A    $9DD5   UNKNOWN  $9DD5           ; Unknown 9xxx instruction
$C0C    $EBB6   UNKNOWN  $EBB6           ; Unknown Exxx instruction
$C0E    $E1B8   UNKNOWN  $E1B8           ; Unknown Exxx instruction
$C10    $7E24   ADD      VE, #24         ; Add 36 to VE
$C12    $AEEC   LD       I, $EEC         ; Load EEC into I
$C14    $9D66   UNKNOWN  $9D66           ; Unknown 9xxx instruction
$C16    $1462   JP       $462            ; Jump to 462
$C18    $B844   JP       V0, $844        ; Jump to V0 + 844
$C1A    $2600   CALL     $600            ; Call subroutine at 600
$C1C    $2683   CALL     $683            ; Call subroutine at 683
$C1E    $9EF1   UNKNOWN  $9EF1           ; Unknown 9xxx instruction
$C20    $EA9A   UNKNOWN  $EA9A           ; Unknown Exxx instruction
$C22    $B04D   JP       V0, $04D        ; Jump to V0 + 04D
$C24    $5680   SE       V6, V8          ; Skip if V6 == V8
$C26    $6053   LD       V0, #53         ; Load 83 into V0
$C28    $3F86   SE       VF, #86         ; Skip if VF == 134
$C2A    $59CF   UNKNOWN  $59CF           ; Unknown 5xxx instruction
$C2C    $2004   CALL     $004            ; Call subroutine at 004
$C2E    $73F4   ADD      V3, #F4         ; Add 244 to V3
$C30    $5E66   UNKNOWN  $5E66           ; Unknown 5xxx instruction
$C32    $F92D   UNKNOWN  F92D            ; Unknown Fxxx instruction
$C34    $3856   SE       V8, #56         ; Skip if V8 == 86
$C36    $909A   UNKNOWN  $909A           ; Unknown 9xxx instruction
$C38    $74D8   ADD      V4, #D8         ; Add 216 to V4
$C3A    $F166   UNKNOWN  F166            ; Unknown Fxxx instruction
$C3C    $EA84   UNKNOWN  $EA84           ; Unknown Exxx instruction
$C3E    $DDEE   DRW      VD, VE, #E      ; Draw 14-byte sprite at VD, VE
$C40    $4913   SNE      V9, #13         ; Skip if V9 != 19
$C42    $877B   UNKNOWN  877B            ; Unknown 8xxx instruction
$C44    $ADDD   LD       I, $DDD         ; Load DDD into I
$C46    $B25A   JP       V0, $25A        ; Jump to V0 + 25A
$C48    $1C18   JP       $C18            ; Jump to C18
$C4A    $D05E   DRW      V0, V5, #E      ; Draw 14-byte sprite at V0, V5
$C4C    $8E4D   UNKNOWN  8E4D            ; Unknown 8xxx instruction
$C4E    $D789   DRW      V7, V8, #9      ; Draw 9-byte sprite at V7, V8
$C50    $5537   UNKNOWN  $5537           ; Unknown 5xxx instruction
$C52    $0CDF   SYS      $CDF            ; System call to CDF
$C54    $2EFF   CALL     $EFF            ; Call subroutine at EFF
$C56    $0369   SYS      $369            ; System call to 369
$C58    $6F45   LD       VF, #45         ; Load 69 into VF
$C5A    $EF71   UNKNOWN  $EF71           ; Unknown Exxx instruction
$C5C    $6D5B   LD       VD, #5B         ; Load 91 into VD
$C5E    $E660   UNKNOWN  $E660           ; Unknown Exxx instruction
$C60    $021D   SYS      $21D            ; System call to 21D
$C62    $C2A3   RND      V2, #A3         ; V2 = random & A3
$C64    $D8D6   DRW      V8, VD, #6      ; Draw 6-byte sprite at V8, VD
$C66    $2496   CALL     $496            ; Call subroutine at 496
$C68    $0986   SYS      $986            ; System call to 986
$C6A    $EC1D   UNKNOWN  $EC1D           ; Unknown Exxx instruction
$C6C    $E2F7   UNKNOWN  $E2F7           ; Unknown Exxx instruction
$C6E    $1667   JP       $667            ; Jump to 667
$C70    $2B68   CALL     $B68            ; Call subroutine at B68
$C72    $86F3   XOR      V6, VF          ; V6 ^= VF
$C74    $CCDD   RND      VC, #DD         ; VC = random & DD
$C76    $EC12   UNKNOWN  $EC12           ; Unknown Exxx instruction
$C78    $5F9D   UNKNOWN  $5F9D           ; Unknown 5xxx instruction
$C7A    $0521   SYS      $521            ; System call to 521
$C7C    $BBA0   JP       V0, $BA0        ; Jump to V0 + BA0
$C7E    $9A45   UNKNOWN  $9A45           ; Unknown 9xxx instruction
$C80    $F984   UNKNOWN  F984            ; Unknown Fxxx instruction
$C82    $A43A   LD       I, $43A         ; Load 43A into I
$C84    $D8D0   DRW      V8, VD, #0      ; Draw 0-byte sprite at V8, VD
$C86    $C9B5   RND      V9, #B5         ; V9 = random & B5
$C88    $4CF7   SNE      VC, #F7         ; Skip if VC != 247
$C8A    $2D07   CALL     $D07            ; Call subroutine at D07
$C8C    $9AD0   SNE      VA, VD          ; Skip if VA != VD
$C8E    $6F70   LD       VF, #70         ; Load 112 into VF
$C90    $AB93   LD       I, $B93         ; Load B93 into I
$C92    $16B3   JP       $6B3            ; Jump to 6B3
$C94    $BDE2   JP       V0, $DE2        ; Jump to V0 + DE2
$C96    $C3B3   RND      V3, #B3         ; V3 = random & B3
$C98    $7134   ADD      V1, #34         ; Add 52 to V1
$C9A    $D018   DRW      V0, V1, #8      ; Draw 8-byte sprite at V0, V1
$C9C    $2634   CALL     $634            ; Call subroutine at 634
$C9E    $DCC2   DRW      VC, VC, #2      ; Draw 2-byte sprite at VC, VC
$CA0    $E837   UNKNOWN  $E837           ; Unknown Exxx instruction
$CA2    $B17F   JP       V0, $17F        ; Jump to V0 + 17F
$CA4    $969C   UNKNOWN  $969C           ; Unknown 9xxx instruction
$CA6    $344B   SE       V4, #4B         ; Skip if V4 == 75
$CA8    $47C9   SNE      V7, #C9         ; Skip if V7 != 201
$CAA    $BA03   JP       V0, $A03        ; Jump to V0 + A03
$CAC    $2B1F   CALL     $B1F            ; Call subroutine at B1F
$CAE    $F7C5   UNKNOWN  F7C5            ; Unknown Fxxx instruction
$CB0    $10AF   JP       $0AF            ; Jump to 0AF
$CB2    $17ED   JP       $7ED            ; Jump to 7ED
$CB4    $A5D5   LD       I, $5D5         ; Load 5D5 into I
$CB6    $E77F   UNKNOWN  $E77F           ; Unknown Exxx instruction
$CB8    $50E5   UNKNOWN  $50E5           ; Unknown 5xxx instruction
$CBA    $421E   SNE      V2, #1E         ; Skip if V2 != 30
$CBC    $FC82   UNKNOWN  FC82            ; Unknown Fxxx instruction
$CBE    $E5A7   UNKNOWN  $E5A7           ; Unknown Exxx instruction
$CC0    $CE9B   RND      VE, #9B         ; VE = random & 9B
$CC2    $D200   DRW      V2, V0, #0      ; Draw 0-byte sprite at V2, V0
$CC4    $F0A5   UNKNOWN  F0A5            ; Unknown Fxxx instruction
$CC6    $6B8C   LD       VB, #8C         ; Load 140 into VB
$CC8    $1E73   JP       $E73            ; Jump to E73
$CCA    $EFD7   UNKNOWN  $EFD7           ; Unknown Exxx instruction
$CCC    $0994   SYS      $994            ; System call to 994
$CCE    $DD28   DRW      VD, V2, #8      ; Draw 8-byte sprite at VD, V2
$CD0    $ADC0   LD       I, $DC0         ; Load DC0 into I
$CD2    $C25B   RND      V2, #5B         ; V2 = random & 5B
$CD4    $41E2   SNE      V1, #E2         ; Skip if V1 != 226
$CD6    $35F7   SE       V5, #F7         ; Skip if V5 == 247
$CD8    $3B0E   SE       VB, #0E         ; Skip if VB == 14
$CDA    $1A7A   JP       $A7A            ; Jump to A7A
$CDC    $9FDD   UNKNOWN  $9FDD           ; Unknown 9xxx instruction
$CDE    $E414   UNKNOWN  $E414           ; Unknown Exxx instruction
$CE0    $38DF   SE       V8, #DF         ; Skip if V8 == 223
$CE2    $D0B2   DRW      V0, VB, #2      ; Draw 2-byte sprite at V0, VB
$CE4    $6C46   LD       VC, #46         ; Load 70 into VC
$CE6    $D570   DRW      V5, V7, #0      ; Draw 0-byte sprite at V5, V7
$CE8    $65DD   LD       V5, #DD         ; Load 221 into V5
$CEA    $8DBE   SHL      VD              ; VD <<= 1, VF = MSB
$CEC    $93B7   UNKNOWN  $93B7           ; Unknown 9xxx instruction
$CEE    $2317   CALL     $317            ; Call subroutine at 317
$CF0    $7029   ADD      V0, #29         ; Add 41 to V0
$CF2    $A26F   LD       I, $26F         ; Load 26F into I
$CF4    $6840   LD       V8, #40         ; Load 64 into V8
$CF6    $17C4   JP       $7C4            ; Jump to 7C4
$CF8    $1153   JP       $153            ; Jump to 153
$CFA    $1E0C   JP       $E0C            ; Jump to E0C
$CFC    $6392   LD       V3, #92         ; Load 146 into V3
$CFE    $DB58   DRW      VB, V5, #8      ; Draw 8-byte sprite at VB, V5
$D00    $1D6A   JP       $D6A            ; Jump to D6A
$D02    $EEEF   UNKNOWN  $EEEF           ; Unknown Exxx instruction
$D04    $3BE6   SE       VB, #E6         ; Skip if VB == 230
$D06    $BA45   JP       V0, $A45        ; Jump to V0 + A45
$D08    $4964   SNE      V9, #64         ; Skip if V9 != 100
$D0A    $BF1C   JP       V0, $F1C        ; Jump to V0 + F1C
$D0C    $A69B   LD       I, $69B         ; Load 69B into I
$D0E    $ACEA   LD       I, $CEA         ; Load CEA into I
$D10    $DDA2   DRW      VD, VA, #2      ; Draw 2-byte sprite at VD, VA
$D12    $9153   UNKNOWN  $9153           ; Unknown 9xxx instruction
$D14    $8B1A   UNKNOWN  8B1A            ; Unknown 8xxx instruction
$D16    $B5D1   JP       V0, $5D1        ; Jump to V0 + 5D1
$D18    $F47B   UNKNOWN  F47B            ; Unknown Fxxx instruction
$D1A    $3768   SE       V7, #68         ; Skip if V7 == 104
$D1C    $6872   LD       V8, #72         ; Load 114 into V8
$D1E    $5488   UNKNOWN  $5488           ; Unknown 5xxx instruction
$D20    $F841   UNKNOWN  F841            ; Unknown Fxxx instruction
$D22    $B2C3   JP       V0, $2C3        ; Jump to V0 + 2C3
$D24    $F029   LD       F, V0           ; I = sprite address for digit V0
$D26    $8F94   ADD      VF, V9          ; VF += V9, VF = carry
$D28    $FA3B   UNKNOWN  FA3B            ; Unknown Fxxx instruction
$D2A    $011F   SYS      $11F            ; System call to 11F
$D2C    $B3EE   JP       V0, $3EE        ; Jump to V0 + 3EE
$D2E    $577A   UNKNOWN  $577A           ; Unknown 5xxx instruction
$D30    $D321   DRW      V3, V2, #1      ; Draw 1-byte sprite at V3, V2
$D32    $B758   JP       V0, $758        ; Jump to V0 + 758
$D34    $6FD9   LD       VF, #D9         ; Load 217 into VF
$D36    $F1FD   UNKNOWN  F1FD            ; Unknown Fxxx instruction
$D38    $4EBA   SNE      VE, #BA         ; Skip if VE != 186
$D3A    $5A4F   UNKNOWN  $5A4F           ; Unknown 5xxx instruction
$D3C    $7608   ADD      V6, #08         ; Add 8 to V6
$D3E    $C95A   RND      V9, #5A         ; V9 = random & 5A
$D40    $3B5D   SE       VB, #5D         ; Skip if VB == 93
$D42    $6C33   LD       VC, #33         ; Load 51 into VC
$D44    $F062   UNKNOWN  F062            ; Unknown Fxxx instruction
$D46    $CEAF   RND      VE, #AF         ; VE = random & AF
$D48    $2B6A   CALL     $B6A            ; Call subroutine at B6A
$D4A    $8BCC   UNKNOWN  8BCC            ; Unknown 8xxx instruction
$D4C    $9D3A   UNKNOWN  $9D3A           ; Unknown 9xxx instruction
$D4E    $1C73   JP       $C73            ; Jump to C73
$D50    $4297   SNE      V2, #97         ; Skip if V2 != 151
$D52    $9E2A   UNKNOWN  $9E2A           ; Unknown 9xxx instruction
$D54    $5368   UNKNOWN  $5368           ; Unknown 5xxx instruction
$D56    $D29E   DRW      V2, V9, #E      ; Draw 14-byte sprite at V2, V9
$D58    $7D21   ADD      VD, #21         ; Add 33 to VD
$D5A    $B81B   JP       V0, $81B        ; Jump to V0 + 81B
$D5C    $206A   CALL     $06A            ; Call subroutine at 06A
$D5E    $8F96   SHR      VF              ; VF >>= 1, VF = LSB
$D60    $0788   SYS      $788            ; System call to 788
$D62    $30D5   SE       V0, #D5         ; Skip if V0 == 213
$D64    $053D   SYS      $53D            ; System call to 53D
$D66    $0AE1   SYS      $AE1            ; System call to AE1
$D68    $C306   RND      V3, #06         ; V3 = random & 06
$D6A    $E293   UNKNOWN  $E293           ; Unknown Exxx instruction
$D6C    $08EF   SYS      $8EF            ; System call to 8EF
$D6E    $A27E   LD       I, $27E         ; Load 27E into I
$D70    $B337   JP       V0, $337        ; Jump to V0 + 337
$D72    $3E55   SE       VE, #55         ; Skip if VE == 85
$D74    $9B84   UNKNOWN  $9B84           ; Unknown 9xxx instruction
$D76    $85D5   SUB      V5, VD          ; V5 -= VD, VF = !borrow
$D78    $6E7D   LD       VE, #7D         ; Load 125 into VE
$D7A    $9816   UNKNOWN  $9816           ; Unknown 9xxx instruction
$D7C    $CC23   RND      VC, #23         ; VC = random & 23
$D7E    $C7E8   RND      V7, #E8         ; V7 = random & E8
$D80    $B4DA   JP       V0, $4DA        ; Jump to V0 + 4DA
$D82    $E724   UNKNOWN  $E724           ; Unknown Exxx instruction
$D84    $CECF   RND      VE, #CF         ; VE = random & CF
$D86    $737C   ADD      V3, #7C         ; Add 124 to V3
$D88    $91BD   UNKNOWN  $91BD           ; Unknown 9xxx instruction
$D8A    $9EBF   UNKNOWN  $9EBF           ; Unknown 9xxx instruction
$D8C    $6EA9   LD       VE, #A9         ; Load 169 into VE
$D8E    $98A0   SNE      V8, VA          ; Skip if V8 != VA
$D90    $0DBD   SYS      $DBD            ; System call to DBD
$D92    $3917   SE       V9, #17         ; Skip if V9 == 23
$D94    $BEF5   JP       V0, $EF5        ; Jump to V0 + EF5
$D96    $F619   UNKNOWN  F619            ; Unknown Fxxx instruction
$D98    $C2CC   RND      V2, #CC         ; V2 = random & CC
$D9A    $1554   JP       $554            ; Jump to 554
$D9C    $E0D9   UNKNOWN  $E0D9           ; Unknown Exxx instruction
$D9E    $9560   SNE      V5, V6          ; Skip if V5 != V6
$DA0    $ABBE   LD       I, $BBE         ; Load BBE into I
$DA2    $87FF   UNKNOWN  87FF            ; Unknown 8xxx instruction
$DA4    $2775   CALL     $775            ; Call subroutine at 775
$DA6    $A065   LD       I, $065         ; Load 065 into I
$DA8    $910B   UNKNOWN  $910B           ; Unknown 9xxx instruction
$DAA    $8A9E   SHL      VA              ; VA <<= 1, VF = MSB
$DAC    $B026   JP       V0, $026        ; Jump to V0 + 026
$DAE    $43C0   SNE      V3, #C0         ; Skip if V3 != 192
$DB0    $4C71   SNE      VC, #71         ; Skip if VC != 113
$DB2    $38A1   SE       V8, #A1         ; Skip if V8 == 161
$DB4    $FE84   UNKNOWN  FE84            ; Unknown Fxxx instruction
$DB6    $2310   CALL     $310            ; Call subroutine at 310
$DB8    $60FA   LD       V0, #FA         ; Load 250 into V0
$DBA    $E397   UNKNOWN  $E397           ; Unknown Exxx instruction
$DBC    $42CB   SNE      V2, #CB         ; Skip if V2 != 203
$DBE    $2A5C   CALL     $A5C            ; Call subroutine at A5C
$DC0    $F71E   ADD      I, V7           ; I += V7
$DC2    $EA05   UNKNOWN  $EA05           ; Unknown Exxx instruction
$DC4    $DE01   DRW      VE, V0, #1      ; Draw 1-byte sprite at VE, V0
$DC6    $B553   JP       V0, $553        ; Jump to V0 + 553
$DC8    $E70E   UNKNOWN  $E70E           ; Unknown Exxx instruction
$DCA    $7069   ADD      V0, #69         ; Add 105 to V0
$DCC    $4DFB   SNE      VD, #FB         ; Skip if VD != 251
$DCE    $2170   CALL     $170            ; Call subroutine at 170
$DD0    $A38B   LD       I, $38B         ; Load 38B into I
$DD2    $8C12   AND      VC, V1          ; VC &= V1
$DD4    $B756   JP       V0, $756        ; Jump to V0 + 756
$DD6    $1AA2   JP       $AA2            ; Jump to AA2
$DD8    $98EC   UNKNOWN  $98EC           ; Unknown 9xxx instruction
$DDA    $4CCB   SNE      VC, #CB         ; Skip if VC != 203
$DDC    $37F8   SE       V7, #F8         ; Skip if V7 == 248
$DDE    $4C19   SNE      VC, #19         ; Skip if VC != 25
$DE0    $7897   ADD      V8, #97         ; Add 151 to V8
$DE2    $0BDD   SYS      $BDD            ; System call to BDD
$DE4    $8A4B   UNKNOWN  8A4B            ; Unknown 8xxx instruction
$DE6    $9986   UNKNOWN  $9986           ; Unknown 9xxx instruction
$DE8    $D6CD   DRW      V6, VC, #D      ; Draw 13-byte sprite at V6, VC
$DEA    $BCB2   JP       V0, $CB2        ; Jump to V0 + CB2
$DEC    $6841   LD       V8, #41         ; Load 65 into V8
$DEE    $A06D   LD       I, $06D         ; Load 06D into I
$DF0    $EF1E   UNKNOWN  $EF1E           ; Unknown Exxx instruction
$DF2    $6326   LD       V3, #26         ; Load 38 into V3
$DF4    $27D6   CALL     $7D6            ; Call subroutine at 7D6
$DF6    $3028   SE       V0, #28         ; Skip if V0 == 40
$DF8    $B3CC   JP       V0, $3CC        ; Jump to V0 + 3CC
$DFA    $DC60   DRW      VC, V6, #0      ; Draw 0-byte sprite at VC, V6
$DFC    $92F9   UNKNOWN  $92F9           ; Unknown 9xxx instruction
$DFE    $C9BA   RND      V9, #BA         ; V9 = random & BA
$E00    $4864   SNE      V8, #64         ; Skip if V8 != 100
$E02    $3E3F   SE       VE, #3F         ; Skip if VE == 63
$E04    $7AE1   ADD      VA, #E1         ; Add 225 to VA
$E06    $B06A   JP       V0, $06A        ; Jump to V0 + 06A
$E08    $4E92   SNE      VE, #92         ; Skip if VE != 146
$E0A    $6D2E   LD       VD, #2E         ; Load 46 into VD
$E0C    $3654   SE       V6, #54         ; Skip if V6 == 84
$E0E    $6E8A   LD       VE, #8A         ; Load 138 into VE
$E10    $1595   JP       $595            ; Jump to 595
$E12    $E308   UNKNOWN  $E308           ; Unknown Exxx instruction
$E14    $A3C7   LD       I, $3C7         ; Load 3C7 into I
$E16    $72F9   ADD      V2, #F9         ; Add 249 to V2
$E18    $005E   SYS      $05E            ; System call to 05E
$E1A    $045D   SYS      $45D            ; System call to 45D
$E1C    $3EA6   SE       VE, #A6         ; Skip if VE == 166
$E1E    $E209   UNKNOWN  $E209           ; Unknown Exxx instruction
$E20    $07F9   SYS      $7F9            ; System call to 7F9
$E22    $BAC4   JP       V0, $AC4        ; Jump to V0 + AC4
$E24    $0BB3   SYS      $BB3            ; System call to BB3
$E26    $B57A   JP       V0, $57A        ; Jump to V0 + 57A
$E28    $CF52   RND      VF, #52         ; VF = random & 52
$E2A    $6D14   LD       VD, #14         ; Load 20 into VD
$E2C    $0028   SYS      $028            ; System call to 028
$E2E    $9B5D   UNKNOWN  $9B5D           ; Unknown 9xxx instruction
$E30    $3BCF   SE       VB, #CF         ; Skip if VB == 207
$E32    $81FE   SHL      V1              ; V1 <<= 1, VF = MSB
$E34    $20CE   CALL     $0CE            ; Call subroutine at 0CE
$E36    $3992   SE       V9, #92         ; Skip if V9 == 146
$E38    $FDCA   UNKNOWN  FDCA            ; Unknown Fxxx instruction
$E3A    $F22F   UNKNOWN  F22F            ; Unknown Fxxx instruction
$E3C    $AFD6   LD       I, $FD6         ; Load FD6 into I
$E3E    $36AF   SE       V6, #AF         ; Skip if V6 == 175
$E40    $61C1   LD       V1, #C1         ; Load 193 into V1
$E42    $87E4   ADD      V7, VE          ; V7 += VE, VF = carry
$E44    $69F3   LD       V9, #F3         ; Load 243 into V9
$E46    $8711   OR       V7, V1          ; V7 |= V1
$E48    $2ACE   CALL     $ACE            ; Call subroutine at ACE
$E4A    $D84D   DRW      V8, V4, #D      ; Draw 13-byte sprite at V8, V4
$E4C    $DB20   DRW      VB, V2, #0      ; Draw 0-byte sprite at VB, V2
$E4E    $0497   SYS      $497            ; System call to 497
$E50    $F17A   UNKNOWN  F17A            ; Unknown Fxxx instruction
$E52    $BBB6   JP       V0, $BB6        ; Jump to V0 + BB6
$E54    $315B   SE       V1, #5B         ; Skip if V1 == 91
$E56    $355E   SE       V5, #5E         ; Skip if V5 == 94
$E58    $FD40   UNKNOWN  FD40            ; Unknown Fxxx instruction
$E5A    $F674   UNKNOWN  F674            ; Unknown Fxxx instruction
$E5C    $FF86   UNKNOWN  FF86            ; Unknown Fxxx instruction
$E5E    $3FA6   SE       VF, #A6         ; Skip if VF == 166
$E60    $075A   SYS      $75A            ; System call to 75A
$E62    $F984   UNKNOWN  F984            ; Unknown Fxxx instruction
$E64    $FFC4   UNKNOWN  FFC4            ; Unknown Fxxx instruction
$E66    $3853   SE       V8, #53         ; Skip if V8 == 83
$E68    $ABC6   LD       I, $BC6         ; Load BC6 into I
$E6A    $0497   SYS      $497            ; System call to 497
$E6C    $EFA2   UNKNOWN  $EFA2           ; Unknown Exxx instruction
$E6E    $6FE2   LD       VF, #E2         ; Load 226 into VF
$E70    $ED2F   UNKNOWN  $ED2F           ; Unknown Exxx instruction
$E72    $5DE7   UNKNOWN  $5DE7           ; Unknown 5xxx instruction
$E74    $F278   UNKNOWN  F278            ; Unknown Fxxx instruction
$E76    $6BE1   LD       VB, #E1         ; Load 225 into VB
$E78    $04F1   SYS      $4F1            ; System call to 4F1
$E7A    $FEF7   UNKNOWN  FEF7            ; Unknown Fxxx instruction
$E7C    $6AC0   LD       VA, #C0         ; Load 192 into VA
$E7E    $77B6   ADD      V7, #B6         ; Add 182 to V7
$E80    $30C3   SE       V0, #C3         ; Skip if V0 == 195
$E82    $4A04   SNE      VA, #04         ; Skip if VA != 4
$E84    $D589   DRW      V5, V8, #9      ; Draw 9-byte sprite at V5, V8
$E86    $FBEF   UNKNOWN  FBEF            ; Unknown Fxxx instruction
$E88    $724E   ADD      V2, #4E         ; Add 78 to V2
$E8A    $BB5A   JP       V0, $B5A        ; Jump to V0 + B5A
$E8C    $8E92   AND      VE, V9          ; VE &= V9
$E8E    $1D6C   JP       $D6C            ; Jump to D6C
$E90    $2247   CALL     $247            ; Call subroutine at 247
$E92    $8BDA   UNKNOWN  8BDA            ; Unknown 8xxx instruction
$E94    $7007   ADD      V0, #07         ; Add 7 to V0
$E96    $72CA   ADD      V2, #CA         ; Add 202 to V2
$E98    $73A3   ADD      V3, #A3         ; Add 163 to V3
$E9A    $37A8   SE       V7, #A8         ; Skip if V7 == 168
$E9C    $1BF0   JP       $BF0            ; Jump to BF0
$E9E    $B973   JP       V0, $973        ; Jump to V0 + 973
$EA0    $7AB4   ADD      VA, #B4         ; Add 180 to VA
$EA2    $940E   UNKNOWN  $940E           ; Unknown 9xxx instruction
$EA4    $D46A   DRW      V4, V6, #A      ; Draw 10-byte sprite at V4, V6
$EA6    $394F   SE       V9, #4F         ; Skip if V9 == 79
$EA8    $1B91   JP       $B91            ; Jump to B91
$EAA    $86EF   UNKNOWN  86EF            ; Unknown 8xxx instruction
$EAC    $C017   RND      V0, #17         ; V0 = random & 17
$EAE    $03A5   SYS      $3A5            ; System call to 3A5
$EB0    $41D9   SNE      V1, #D9         ; Skip if V1 != 217
$EB2    $8376   SHR      V3              ; V3 >>= 1, VF = LSB
$EB4    $3649   SE       V6, #49         ; Skip if V6 == 73
$EB6    $C11F   RND      V1, #1F         ; V1 = random & 1F
$EB8    $1218   JP       $218            ; Jump to 218
$EBA    $24D2   CALL     $4D2            ; Call subroutine at 4D2
$EBC    $8479   UNKNOWN  8479            ; Unknown 8xxx instruction
$EBE    $F869   UNKNOWN  F869            ; Unknown Fxxx instruction
$EC0    $A9DD   LD       I, $9DD         ; Load 9DD into I
$EC2    $745F   ADD      V4, #5F         ; Add 95 to V4
$EC4    $3AFD   SE       VA, #FD         ; Skip if VA == 253
$EC6    $B652   JP       V0, $652        ; Jump to V0 + 652
$EC8    $B87A   JP       V0, $87A        ; Jump to V0 + 87A
$ECA    $36D9   SE       V6, #D9         ; Skip if V6 == 217
$ECC    $DDE9   DRW      VD, VE, #9      ; Draw 9-byte sprite at VD, VE
$ECE    $707E   ADD      V0, #7E         ; Add 126 to V0
$ED0    $C5CF   RND      V5, #CF         ; V5 = random & CF
$ED2    $ED5F   UNKNOWN  $ED5F           ; Unknown Exxx instruction
$ED4    $2168   CALL     $168            ; Call subroutine at 168
$ED6    $21BE   CALL     $1BE            ; Call subroutine at 1BE
$ED8    $EDAE   UNKNOWN  $EDAE           ; Unknown Exxx instruction
$EDA    $42A7   SNE      V2, #A7         ; Skip if V2 != 167
$EDC    $34F9   SE       V4, #F9         ; Skip if V4 == 249
$EDE    $FE01   UNKNOWN  FE01            ; Unknown Fxxx instruction
$EE0    $8940   LD       V9, V4          ; V9 = V4
$EE2    $E737   UNKNOWN  $E737           ; Unknown Exxx instruction
$EE4    $B1EB   JP       V0, $1EB        ; Jump to V0 + 1EB
$EE6    $A0C4   LD       I, $0C4         ; Load 0C4 into I
$EE8    $F369   UNKNOWN  F369            ; Unknown Fxxx instruction
$EEA    $AB6D   LD       I, $B6D         ; Load B6D into I
$EEC    $507E   UNKNOWN  $507E           ; Unknown 5xxx instruction
$EEE    $1E5C   JP       $E5C            ; Jump to E5C
$EF0    $0AFA   SYS      $AFA            ; System call to AFA
$EF2    $EA41   UNKNOWN  $EA41           ; Unknown Exxx instruction
$EF4    $48CF   SNE      V8, #CF         ; Skip if V8 != 207
$EF6    $E1CB   UNKNOWN  $E1CB           ; Unknown Exxx instruction
$EF8    $1368   JP       $368            ; Jump to 368
$EFA    $06FD   SYS      $6FD            ; System call to 6FD
$EFC    $5E9B   UNKNOWN  $5E9B           ; Unknown 5xxx instruction
$EFE    $C8E3   RND      V8, #E3         ; V8 = random & E3
$F00    $4838   SNE      V8, #38         ; Skip if V8 != 56
$F02    $E846   UNKNOWN  $E846           ; Unknown Exxx instruction
$F04    $CF8E   RND      VF, #8E         ; VF = random & 8E
$F06    $E5B5   UNKNOWN  $E5B5           ; Unknown Exxx instruction
$F08    $3832   SE       V8, #32         ; Skip if V8 == 50
$F0A    $B0F2   JP       V0, $0F2        ; Jump to V0 + 0F2
$F0C    $7699   ADD      V6, #99         ; Add 153 to V6
$F0E    $E614   UNKNOWN  $E614           ; Unknown Exxx instruction
$F10    $DEAB   DRW      VE, VA, #B      ; Draw 11-byte sprite at VE, VA
$F12    $5151   UNKNOWN  $5151           ; Unknown 5xxx instruction
$F14    $F779   UNKNOWN  F779            ; Unknown Fxxx instruction
$F16    $1714   JP       $714            ; Jump to 714
$F18    $7369   ADD      V3, #69         ; Add 105 to V3
$F1A    $4943   SNE      V9, #43         ; Skip if V9 != 67
$F1C    $9C2C   UNKNOWN  $9C2C           ; Unknown 9xxx instruction
$F1E    $6CB1   LD       VC, #B1         ; Load 177 into VC
$F20    $4B57   SNE      VB, #57         ; Skip if VB != 87
$F22    $5D70   SE       VD, V7          ; Skip if VD == V7
$F24    $46ED   SNE      V6, #ED         ; Skip if V6 != 237
$F26    $CF76   RND      VF, #76         ; VF = random & 76
$F28    $F525   UNKNOWN  F525            ; Unknown Fxxx instruction
$F2A    $B76B   JP       V0, $76B        ; Jump to V0 + 76B
$F2C    $DBF0   DRW      VB, VF, #0      ; Draw 0-byte sprite at VB, VF
$F2E    $134F   JP       $34F            ; Jump to 34F
$F30    $D88D   DRW      V8, V8, #D      ; Draw 13-byte sprite at V8, V8
$F32    $28D0   CALL     $8D0            ; Call subroutine at 8D0
$F34    $2CA7   CALL     $CA7            ; Call subroutine at CA7
$F36    $1F93   JP       $F93            ; Jump to F93
$F38    $0A48   SYS      $A48            ; System call to A48
$F3A    $834A   UNKNOWN  834A            ; Unknown 8xxx instruction
$F3C    $42E0   SNE      V2, #E0         ; Skip if V2 != 224
$F3E    $A52D   LD       I, $52D         ; Load 52D into I
$F40    $D51A   DRW      V5, V1, #A      ; Draw 10-byte sprite at V5, V1
$F42    $69B6   LD       V9, #B6         ; Load 182 into V9
$F44    $02BD   SYS      $2BD            ; System call to 2BD
$F46    $518C   UNKNOWN  $518C           ; Unknown 5xxx instruction
$F48    $733C   ADD      V3, #3C         ; Add 60 to V3
$F4A    $9D6B   UNKNOWN  $9D6B           ; Unknown 9xxx instruction
$F4C    $7F48   ADD      VF, #48         ; Add 72 to VF
$F4E    $0BF6   SYS      $BF6            ; System call to BF6
$F50    $CDBC   RND      VD, #BC         ; VD = random & BC
$F52    $ADDC   LD       I, $DDC         ; Load DDC into I
$F54    $1E18   JP       $E18            ; Jump to E18
$F56    $AC8A   LD       I, $C8A         ; Load C8A into I
$F58    $F333   LD       B, V3           ; Store BCD of V3 at I, I+1, I+2
$F5A    $AA13   LD       I, $A13         ; Load A13 into I
$F5C    $DCFC   DRW      VC, VF, #C      ; Draw 12-byte sprite at VC, VF
$F5E    $ADEA   LD       I, $DEA         ; Load DEA into I
$F60    $4F5A   SNE      VF, #5A         ; Skip if VF != 90
$F62    $4D0B   SNE      VD, #0B         ; Skip if VD != 11
$F64    $CE32   RND      VE, #32         ; VE = random & 32
$F66    $1818   JP       $818            ; Jump to 818
$F68    $39BB   SE       V9, #BB         ; Skip if V9 == 187
$F6A    $7CE0   ADD      VC, #E0         ; Add 224 to VC
$F6C    $80FE   SHL      V0              ; V0 <<= 1, VF = MSB
$F6E    $0AB3   SYS      $AB3            ; System call to AB3
$F70    $6FB9   LD       VF, #B9         ; Load 185 into VF
$F72    $618F   LD       V1, #8F         ; Load 143 into V1
$F74    $FC47   UNKNOWN  FC47            ; Unknown Fxxx instruction
$F76    $86A0   LD       V6, VA          ; V6 = VA
$F78    $3BA2   SE       VB, #A2         ; Skip if VB == 162
$F7A    $025D   SYS      $25D            ; System call to 25D
$F7C    $0B13   SYS      $B13            ; System call to B13
$F7E    $9355   UNKNOWN  $9355           ; Unknown 9xxx instruction
$F80    $C582   RND      V5, #82         ; V5 = random & 82
$F82    $BA57   JP       V0, $A57        ; Jump to V0 + A57
$F84    $011F   SYS      $11F            ; System call to 11F
$F86    $7A1F   ADD      VA, #1F         ; Add 31 to VA
$F88    $930E   UNKNOWN  $930E           ; Unknown 9xxx instruction
$F8A    $6D4F   LD       VD, #4F         ; Load 79 into VD
$F8C    $0302   SYS      $302            ; System call to 302
$F8E    $8F99   UNKNOWN  8F99            ; Unknown 8xxx instruction
$F90    $D4D8   DRW      V4, VD, #8      ; Draw 8-byte sprite at V4, VD
$F92    $E444   UNKNOWN  $E444           ; Unknown Exxx instruction
$F94    $D59D   DRW      V5, V9, #D      ; Draw 13-byte sprite at V5, V9
$F96    $CD4F   RND      VD, #4F         ; VD = random & 4F
$F98    $07E0   SYS      $7E0            ; System call to 7E0
$F9A    $A59B   LD       I, $59B         ; Load 59B into I
$F9C    $7AAB   ADD      VA, #AB         ; Add 171 to VA
$F9E    $C482   RND      V4, #82         ; V4 = random & 82
$FA0    $4F7B   SNE      VF, #7B         ; Skip if VF != 123
$FA2    $1AE3   JP       $AE3            ; Jump to AE3
$FA4    $2D28   CALL     $D28            ; Call subroutine at D28
$FA6    $C647   RND      V6, #47         ; V6 = random & 47
$FA8    $4C77   SNE      VC, #77         ; Skip if VC != 119
$FAA    $3B99   SE       VB, #99         ; Skip if VB == 153
$FAC    $4AC8   SNE      VA, #C8         ; Skip if VA != 200
$FAE    $E296   UNKNOWN  $E296           ; Unknown Exxx instruction
$FB0    $57AF   UNKNOWN  $57AF           ; Unknown 5xxx instruction
$FB2    $8491   OR       V4, V9          ; V4 |= V9
$FB4    $DC8E   DRW      VC, V8, #E      ; Draw 14-byte sprite at VC, V8
$FB6    $8ACD   UNKNOWN  8ACD            ; Unknown 8xxx instruction
$FB8    $442C   SNE      V4, #2C         ; Skip if V4 != 44
$FBA    $CFEB   RND      VF, #EB         ; VF = random & EB
$FBC    $F217   UNKNOWN  F217            ; Unknown Fxxx instruction
$FBE    $11C3   JP       $1C3            ; Jump to 1C3
$FC0    $0199   SYS      $199            ; System call to 199
$FC2    $0B2C   SYS      $B2C            ; System call to B2C
$FC4    $0DE8   SYS      $DE8            ; System call to DE8
$FC6    $C41D   RND      V4, #1D         ; V4 = random & 1D
$FC8    $550C   UNKNOWN  $550C           ; Unknown 5xxx instruction
$FCA    $13CB   JP       $3CB            ; Jump to 3CB
$FCC    $BB51   JP       V0, $B51        ; Jump to V0 + B51
$FCE    $7142   ADD      V1, #42         ; Add 66 to V1
$FD0    $4C30   SNE      VC, #30         ; Skip if VC != 48
$FD2    $422A   SNE      V2, #2A         ; Skip if V2 != 42
$FD4    $8A98   UNKNOWN  8A98            ; Unknown 8xxx instruction
$FD6    $AE11   LD       I, $E11         ; Load E11 into I
$FD8    $0277   SYS      $277            ; System call to 277
$FDA    $5ECC   UNKNOWN  $5ECC           ; Unknown 5xxx instruction
$FDC    $BE27   JP       V0, $E27        ; Jump to V0 + E27
$FDE    $A3AB   LD       I, $3AB         ; Load 3AB into I
$FE0    $BFBB   JP       V0, $FBB        ; Jump to V0 + FBB
$FE2    $48D7   SNE      V8, #D7         ; Skip if V8 != 215
$FE4    $2AAF   CALL     $AAF            ; Call subroutine at AAF
$FE6    $8E7D   UNKNOWN  8E7D            ; Unknown 8xxx instruction
$FE8    $8508   UNKNOWN  8508            ; Unknown 8xxx instruction
$FEA    $EC91   UNKNOWN  $EC91           ; Unknown Exxx instruction
$FEC    $FF5A   UNKNOWN  FF5A            ; Unknown Fxxx instruction
$FEE    $CB34   RND      VB, #34         ; VB = random & 34
$FF0    $E025   UNKNOWN  $E025           ; Unknown Exxx instruction
$FF2    $8577   SUBN     V5, V7          ; V5 = V7 - V5, VF = !borrow
$FF4    $66DE   LD       V6, #DE         ; Load 222 into V6
$FF6    $01C9   SYS      $1C9            ; System call to 1C9
$FF8    $DC8F   DRW      VC, V8, #F      ; Draw 15-byte sprite at VC, V8
$FFA    $A009   LD       I, $009         ; Load 009 into I
$FFC    $9DA8   UNKNOWN  $9DA8           ; Unknown 9xxx instruction
$FFE    $A4C8   LD       I, $4C8         ; Load 4C8 into I

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 467 (26.1%)
  LD      : 236 (13.2%)
  JP      : 227 (12.7%)
  SE      : 128 ( 7.1%)
  SNE     : 128 ( 7.1%)
  DRW     : 123 ( 6.9%)
  ADD     : 121 ( 6.8%)
  CALL    : 111 ( 6.2%)
  SYS     : 111 ( 6.2%)
  RND     :  98 ( 5.5%)
  OR      :  10 ( 0.6%)
  SHR     :   8 ( 0.4%)
  XOR     :   6 ( 0.3%)
  AND     :   6 ( 0.3%)
  SHL     :   6 ( 0.3%)
  SUBN    :   4 ( 0.2%)
  SUB     :   2 ( 0.1%)

Memory Operations: 357 (19.9%)
Arithmetic Operations: 149 (8.3%)
