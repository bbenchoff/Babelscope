
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B379D01_I15434_C3911_ac16dc7fc509.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 379
Instance: 15434
Direction: ascending
Final Array: [169, 169, 169, 169, 169, 169, 169, 230]
Operations: R:0 W:7 C:0 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 143
Sort Array References:
  $21E: LD I, $5EF ; Load 5EF into I
  $22E: LD I, $E44 ; Load E44 into I
  $234: LD I, $2A4 ; Load 2A4 into I
  $238: LD I, $AC0 ; Load AC0 into I
  $270: LD I, $978 ; Load 978 into I
  $2D2: LD I, $9A9 ; Load 9A9 into I
  $2D4: LD I, $9A9 ; Load 9A9 into I
  $2D6: LD I, $9A9 ; Load 9A9 into I
  $2D8: LD I, $9A9 ; Load 9A9 into I
  $2DA: LD I, $9A9 ; Load 9A9 into I
  $2DC: LD I, $9A9 ; Load 9A9 into I
  $2DE: LD I, $9A9 ; Load 9A9 into I
  $2E0: LD I, $9A9 ; Load 9A9 into I
  $2E2: LD I, $9A9 ; Load 9A9 into I
  $2E4: LD I, $9A9 ; Load 9A9 into I
  $2E6: LD I, $9A9 ; Load 9A9 into I
  $2E8: LD I, $9A9 ; Load 9A9 into I
  $2EA: LD I, $9A9 ; Load 9A9 into I
  $2EC: LD I, $9A9 ; Load 9A9 into I
  $2EE: LD I, $9A9 ; Load 9A9 into I
  $2F0: LD I, $9A9 ; Load 9A9 into I
  $2F2: LD I, $9A9 ; Load 9A9 into I
  $2F4: LD I, $9A9 ; Load 9A9 into I
  $2F6: LD I, $9A9 ; Load 9A9 into I
  $2F8: LD I, $9A9 ; Load 9A9 into I
  $2FA: LD I, $9A9 ; Load 9A9 into I
  $2FC: LD I, $9A9 ; Load 9A9 into I
  $2FE: LD I, $9A9 ; Load 9A9 into I
  $300: LD I, $9A9 ; Load 9A9 into I
  $302: LD I, $9A9 ; Load 9A9 into I
  $304: LD I, $9A9 ; Load 9A9 into I
  $306: LD I, $9E6 ; Load 9E6 into I
  $30A: LD I, $F84 ; Load F84 into I
  $324: LD I, $0F3 ; Load 0F3 into I
  $346: LD I, $6E5 ; Load 6E5 into I
  $352: LD I, $74F ; Load 74F into I
  $36A: LD I, $62A ; Load 62A into I
  $37A: LD I, $861 ; Load 861 into I
  $3A8: LD I, $850 ; Load 850 into I
  $3BE: LD I, $96E ; Load 96E into I
  $3CC: LD I, $36D ; Load 36D into I
  $402: LD I, $816 ; Load 816 into I
  $404: LD I, $D44 ; Load D44 into I
  $408: LD I, $586 ; Load 586 into I
  $44A: LD I, $3A3 ; Load 3A3 into I
  $458: LD I, $21E ; Load 21E into I
  $474: LD I, $C5E ; Load C5E into I
  $482: LD I, $11F ; Load 11F into I
  $49E: LD I, $8B4 ; Load 8B4 into I
  $4AA: LD I, $724 ; Load 724 into I
  $4B4: LD I, $A06 ; Load A06 into I
  $4E4: LD I, $B6B ; Load B6B into I
  $4F8: LD I, $E02 ; Load E02 into I
  $4FA: LD I, $8B8 ; Load 8B8 into I
  $512: LD I, $A47 ; Load A47 into I
  $522: LD I, $D7B ; Load D7B into I
  $53C: LD I, $B39 ; Load B39 into I
  $54C: LD I, $C06 ; Load C06 into I
  $584: LD I, $AE7 ; Load AE7 into I
  $58C: LD I, $0CE ; Load 0CE into I
  $59C: LD I, $42B ; Load 42B into I
  $5CC: LD I, $38A ; Load 38A into I
  $5D4: LD I, $F90 ; Load F90 into I
  $62E: LD I, $A04 ; Load A04 into I
  $650: LD I, $A96 ; Load A96 into I
  $652: LD I, $069 ; Load 069 into I
  $694: LD I, $15D ; Load 15D into I
  $6BC: LD V4, [I] ; Load V0-V4 from I
  $6F0: LD I, $A23 ; Load A23 into I
  $704: LD I, $27E ; Load 27E into I
  $734: LD I, $070 ; Load 070 into I
  $73C: LD I, $B83 ; Load B83 into I
  $74C: LD I, $A3E ; Load A3E into I
  $76C: LD I, $E83 ; Load E83 into I
  $796: LD I, $2AF ; Load 2AF into I
  $7A8: LD I, $3AD ; Load 3AD into I
  $7AA: LD I, $89B ; Load 89B into I
  $7DE: LD I, $ED9 ; Load ED9 into I
  $7EA: LD I, $EC2 ; Load EC2 into I
  $7FE: LD I, $9B3 ; Load 9B3 into I
  $82E: LD I, $B20 ; Load B20 into I
  $832: LD I, $511 ; Load 511 into I
  $83A: LD I, $718 ; Load 718 into I
  $842: LD I, $102 ; Load 102 into I
  $862: LD I, $10D ; Load 10D into I
  $92A: LD I, $EEF ; Load EEF into I
  $942: LD I, $C99 ; Load C99 into I
  $978: LD I, $C4A ; Load C4A into I
  $984: LD I, $03C ; Load 03C into I
  $9A6: LD I, $C08 ; Load C08 into I
  $9F2: LD I, $EBD ; Load EBD into I
  $A2E: LD I, $F99 ; Load F99 into I
  $A88: LD I, $329 ; Load 329 into I
  $A8C: LD I, $155 ; Load 155 into I
  $ABA: LD I, $92E ; Load 92E into I
  $ACA: LD I, $134 ; Load 134 into I
  $ACC: LD I, $34B ; Load 34B into I
  $AE0: LD I, $2C4 ; Load 2C4 into I
  $AF8: LD I, $BBE ; Load BBE into I
  $B0C: LD I, $2DE ; Load 2DE into I
  $B1A: LD I, $A75 ; Load A75 into I
  $B26: LD I, $DBA ; Load DBA into I
  $B2C: LD I, $0D9 ; Load 0D9 into I
  $B4A: LD I, $56B ; Load 56B into I
  $B4E: LD I, $2FA ; Load 2FA into I
  $B6C: LD I, $20A ; Load 20A into I
  $B90: LD I, $EAF ; Load EAF into I
  $BCE: LD I, $F56 ; Load F56 into I
  $BD8: LD I, $980 ; Load 980 into I
  $BE0: LD I, $FB6 ; Load FB6 into I
  $BE2: LD I, $BC3 ; Load BC3 into I
  $C12: LD I, $C26 ; Load C26 into I
  $C70: LD I, $BD7 ; Load BD7 into I
  $CA2: LD I, $392 ; Load 392 into I
  $CC0: LD I, $EC8 ; Load EC8 into I
  $CD0: LD I, $0E0 ; Load 0E0 into I
  $CF0: LD I, $B25 ; Load B25 into I
  $CF8: LD I, $2DF ; Load 2DF into I
  $CFA: LD I, $BEE ; Load BEE into I
  $D3C: LD I, $C5D ; Load C5D into I
  $D52: LD I, $62A ; Load 62A into I
  $D72: LD I, $E7A ; Load E7A into I
  $D7A: LD I, $931 ; Load 931 into I
  $D98: LD I, $66D ; Load 66D into I
  $D9A: LD I, $D2F ; Load D2F into I
  $DD2: LD I, $743 ; Load 743 into I
  $E10: LD I, $3D0 ; Load 3D0 into I
  $E44: LD I, $8CC ; Load 8CC into I
  $E5E: LD I, $05F ; Load 05F into I
  $E74: LD I, $952 ; Load 952 into I
  $E7A: LD I, $4F9 ; Load 4F9 into I
  $E84: LD I, $312 ; Load 312 into I
  $EA8: LD I, $A29 ; Load A29 into I
  $EAC: LD I, $D6F ; Load D6F into I
  $ED2: LD I, $B3B ; Load B3B into I
  $ED6: LD I, $C00 ; Load C00 into I
  $F04: LD I, $2F9 ; Load 2F9 into I
  $F0E: LD I, $826 ; Load 826 into I
  $F4E: LD I, $A62 ; Load A62 into I
  $F80: LD I, $6DC ; Load 6DC into I
  $F8C: LD I, $DA1 ; Load DA1 into I
  $FA6: LD I, $286 ; Load 286 into I
  $FBE: LD I, $ED9 ; Load ED9 into I

CONTROL FLOW ANALYSIS:
Jumps: 217
Calls: 104
Branches: 230
Loops: 109
Loop Structures:
  $216 -> $10F (backward jump)
  $272 -> $233 (backward jump)
  $320 -> $2C7 (backward jump)
  $376 -> $21D (backward jump)
  $3DC -> $31D (backward jump)
  $3E4 -> $399 (backward jump)
  $3EC -> $1BF (backward jump)
  $432 -> $114 (backward jump)
  $446 -> $184 (backward jump)
  $46E -> $0C2 (backward jump)
  $47C -> $0AD (backward jump)
  $48A -> $226 (backward jump)
  $4EA -> $05B (backward jump)
  $4F6 -> $0E4 (backward jump)
  $52E -> $2E7 (backward jump)
  $5AE -> $42A (backward jump)
  $5D2 -> $179 (backward jump)
  $5DE -> $396 (backward jump)
  $5F6 -> $57F (backward jump)
  $608 -> $1B4 (backward jump)
  $660 -> $40E (backward jump)
  $672 -> $540 (backward jump)
  $686 -> $1C9 (backward jump)
  $69C -> $127 (backward jump)
  $6A4 -> $32F (backward jump)
  $6E4 -> $409 (backward jump)
  $6F6 -> $18C (backward jump)
  $70C -> $63C (backward jump)
  $71C -> $1FC (backward jump)
  $722 -> $692 (backward jump)
  $726 -> $0ED (backward jump)
  $728 -> $482 (backward jump)
  $750 -> $484 (backward jump)
  $760 -> $2AC (backward jump)
  $76A -> $07E (backward jump)
  $790 -> $0BF (backward jump)
  $7F8 -> $670 (backward jump)
  $844 -> $626 (backward jump)
  $854 -> $3AD (backward jump)
  $85E -> $341 (backward jump)
  $894 -> $7DD (backward jump)
  $8AC -> $1C3 (backward jump)
  $8BC -> $761 (backward jump)
  $960 -> $6DE (backward jump)
  $972 -> $18D (backward jump)
  $9F4 -> $398 (backward jump)
  $9FA -> $169 (backward jump)
  $A12 -> $5E6 (backward jump)
  $A22 -> $283 (backward jump)
  $A5C -> $373 (backward jump)
  $A6A -> $655 (backward jump)
  $A74 -> $20F (backward jump)
  $A7A -> $3FB (backward jump)
  $AC2 -> $050 (backward jump)
  $AD8 -> $443 (backward jump)
  $ADC -> $1E6 (backward jump)
  $B04 -> $A08 (backward jump)
  $B16 -> $75A (backward jump)
  $B24 -> $00E (backward jump)
  $B50 -> $4D1 (backward jump)
  $B7C -> $00F (backward jump)
  $B92 -> $622 (backward jump)
  $B96 -> $51A (backward jump)
  $B9E -> $77C (backward jump)
  $BA6 -> $62C (backward jump)
  $BF8 -> $84C (backward jump)
  $C0A -> $2D6 (backward jump)
  $C14 -> $923 (backward jump)
  $C30 -> $1CD (backward jump)
  $C46 -> $95C (backward jump)
  $C48 -> $33B (backward jump)
  $C64 -> $6B7 (backward jump)
  $C82 -> $AC1 (backward jump)
  $C8E -> $242 (backward jump)
  $C94 -> $B35 (backward jump)
  $C98 -> $29C (backward jump)
  $C9E -> $561 (backward jump)
  $CB2 -> $8CC (backward jump)
  $CE8 -> $74E (backward jump)
  $CEC -> $6BE (backward jump)
  $CFC -> $A17 (backward jump)
  $CFE -> $2A6 (backward jump)
  $D00 -> $ADE (backward jump)
  $D0C -> $9BD (backward jump)
  $D48 -> $631 (backward jump)
  $D5C -> $58C (backward jump)
  $D64 -> $D08 (backward jump)
  $D6E -> $6F3 (backward jump)
  $D74 -> $1DD (backward jump)
  $D78 -> $7A0 (backward jump)
  $DE8 -> $48E (backward jump)
  $DFC -> $A42 (backward jump)
  $E0E -> $78C (backward jump)
  $E3A -> $353 (backward jump)
  $E6A -> $95D (backward jump)
  $E88 -> $571 (backward jump)
  $E9A -> $604 (backward jump)
  $ECA -> $BEA (backward jump)
  $ED8 -> $9CB (backward jump)
  $EF0 -> $D79 (backward jump)
  $F42 -> $A4F (backward jump)
  $F4A -> $893 (backward jump)
  $F54 -> $BF7 (backward jump)
  $F64 -> $7DB (backward jump)
  $F76 -> $619 (backward jump)
  $F8A -> $C02 (backward jump)
  $F8E -> $E6F (backward jump)
  $F9E -> $898 (backward jump)
  $FCA -> $223 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $FB6B   UNKNOWN  FB6B            ; Unknown Fxxx instruction
$202    $D482   DRW      V4, V8, #2      ; Draw 2-byte sprite at V4, V8
$204    $ED0F   UNKNOWN  $ED0F           ; Unknown Exxx instruction
$206    $69AA   LD       V9, #AA         ; Load 170 into V9
$208    $BED2   JP       V0, $ED2        ; Jump to V0 + ED2
$20A    $9639   UNKNOWN  $9639           ; Unknown 9xxx instruction
$20C    $8D51   OR       VD, V5          ; VD |= V5
$20E    $2F22   CALL     $F22            ; Call subroutine at F22
$210    $7984   ADD      V9, #84         ; Add 132 to V9
$212    $0D06   SYS      $D06            ; System call to D06
$214    $34E3   SE       V4, #E3         ; Skip if V4 == 227
$216    $110F   JP       $10F            ; Jump to 10F
$218    $495C   SNE      V9, #5C         ; Skip if V9 != 92
$21A    $8716   SHR      V7              ; V7 >>= 1, VF = LSB
$21C    $05BF   SYS      $5BF            ; System call to 5BF
$21E    $A5EF   LD       I, $5EF         ; Load 5EF into I
$220    $ED1F   UNKNOWN  $ED1F           ; Unknown Exxx instruction
$222    $C889   RND      V8, #89         ; V8 = random & 89
$224    $3CC7   SE       VC, #C7         ; Skip if VC == 199
$226    $4D9B   SNE      VD, #9B         ; Skip if VD != 155
$228    $2759   CALL     $759            ; Call subroutine at 759
$22A    $0B67   SYS      $B67            ; System call to B67
$22C    $2A19   CALL     $A19            ; Call subroutine at A19
$22E    $AE44   LD       I, $E44         ; Load E44 into I
$230    $64C1   LD       V4, #C1         ; Load 193 into V4
$232    $B4E9   JP       V0, $4E9        ; Jump to V0 + 4E9
$234    $A2A4   LD       I, $2A4         ; Load 2A4 into I
$236    $B844   JP       V0, $844        ; Jump to V0 + 844
$238    $AAC0   LD       I, $AC0         ; Load AC0 into I
$23A    $E8DA   UNKNOWN  $E8DA           ; Unknown Exxx instruction
$23C    $8CD5   SUB      VC, VD          ; VC -= VD, VF = !borrow
$23E    $CD7C   RND      VD, #7C         ; VD = random & 7C
$240    $7594   ADD      V5, #94         ; Add 148 to V5
$242    $35C4   SE       V5, #C4         ; Skip if V5 == 196
$244    $0743   SYS      $743            ; System call to 743
$246    $D14B   DRW      V1, V4, #B      ; Draw 11-byte sprite at V1, V4
$248    $87FF   UNKNOWN  87FF            ; Unknown 8xxx instruction
$24A    $C8DE   RND      V8, #DE         ; V8 = random & DE
$24C    $8B95   SUB      VB, V9          ; VB -= V9, VF = !borrow
$24E    $5BBD   UNKNOWN  $5BBD           ; Unknown 5xxx instruction
$250    $0515   SYS      $515            ; System call to 515
$252    $EF66   UNKNOWN  $EF66           ; Unknown Exxx instruction
$254    $9EB9   UNKNOWN  $9EB9           ; Unknown 9xxx instruction
$256    $51E1   UNKNOWN  $51E1           ; Unknown 5xxx instruction
$258    $C2C6   RND      V2, #C6         ; V2 = random & C6
$25A    $8A5F   UNKNOWN  8A5F            ; Unknown 8xxx instruction
$25C    $93D8   UNKNOWN  $93D8           ; Unknown 9xxx instruction
$25E    $69CB   LD       V9, #CB         ; Load 203 into V9
$260    $C5CD   RND      V5, #CD         ; V5 = random & CD
$262    $B36D   JP       V0, $36D        ; Jump to V0 + 36D
$264    $D3E9   DRW      V3, VE, #9      ; Draw 9-byte sprite at V3, VE
$266    $8F1F   UNKNOWN  8F1F            ; Unknown 8xxx instruction
$268    $1A4D   JP       $A4D            ; Jump to A4D
$26A    $1A13   JP       $A13            ; Jump to A13
$26C    $D5BE   DRW      V5, VB, #E      ; Draw 14-byte sprite at V5, VB
$26E    $E9D8   UNKNOWN  $E9D8           ; Unknown Exxx instruction
$270    $A978   LD       I, $978         ; Load 978 into I
$272    $B233   JP       V0, $233        ; Jump to V0 + 233
$274    $33CE   SE       V3, #CE         ; Skip if V3 == 206
$276    $3DE0   SE       VD, #E0         ; Skip if VD == 224
$278    $B454   JP       V0, $454        ; Jump to V0 + 454
$27A    $9257   UNKNOWN  $9257           ; Unknown 9xxx instruction
$27C    $232F   CALL     $32F            ; Call subroutine at 32F
$27E    $414C   SNE      V1, #4C         ; Skip if V1 != 76
$280    $81A8   UNKNOWN  81A8            ; Unknown 8xxx instruction
$282    $1726   JP       $726            ; Jump to 726
$284    $2B5F   CALL     $B5F            ; Call subroutine at B5F
$286    $4331   SNE      V3, #31         ; Skip if V3 != 49
$288    $93A9   UNKNOWN  $93A9           ; Unknown 9xxx instruction
$28A    $28A7   CALL     $8A7            ; Call subroutine at 8A7
$28C    $95BC   UNKNOWN  $95BC           ; Unknown 9xxx instruction
$28E    $4EE4   SNE      VE, #E4         ; Skip if VE != 228
$290    $9C57   UNKNOWN  $9C57           ; Unknown 9xxx instruction
$292    $8187   SUBN     V1, V8          ; V1 = V8 - V1, VF = !borrow
$294    $4573   SNE      V5, #73         ; Skip if V5 != 115
$296    $5621   UNKNOWN  $5621           ; Unknown 5xxx instruction
$298    $DEEE   DRW      VE, VE, #E      ; Draw 14-byte sprite at VE, VE
$29A    $8C17   SUBN     VC, V1          ; VC = V1 - VC, VF = !borrow
$29C    $D478   DRW      V4, V7, #8      ; Draw 8-byte sprite at V4, V7
$29E    $17F1   JP       $7F1            ; Jump to 7F1
$2A0    $166F   JP       $66F            ; Jump to 66F
$2A2    $0B79   SYS      $B79            ; System call to B79
$2A4    $FAD8   UNKNOWN  FAD8            ; Unknown Fxxx instruction
$2A6    $3DC7   SE       VD, #C7         ; Skip if VD == 199
$2A8    $51EA   UNKNOWN  $51EA           ; Unknown 5xxx instruction
$2AA    $94A1   UNKNOWN  $94A1           ; Unknown 9xxx instruction
$2AC    $B950   JP       V0, $950        ; Jump to V0 + 950
$2AE    $5F2E   UNKNOWN  $5F2E           ; Unknown 5xxx instruction
$2B0    $9FB3   UNKNOWN  $9FB3           ; Unknown 9xxx instruction
$2B2    $F1A1   UNKNOWN  F1A1            ; Unknown Fxxx instruction
$2B4    $8847   SUBN     V8, V4          ; V8 = V4 - V8, VF = !borrow
$2B6    $7D40   ADD      VD, #40         ; Add 64 to VD
$2B8    $E190   UNKNOWN  $E190           ; Unknown Exxx instruction
$2BA    $27C2   CALL     $7C2            ; Call subroutine at 7C2
$2BC    $BB3A   JP       V0, $B3A        ; Jump to V0 + B3A
$2BE    $5812   UNKNOWN  $5812           ; Unknown 5xxx instruction
$2C0    $14E9   JP       $4E9            ; Jump to 4E9
$2C2    $6ECF   LD       VE, #CF         ; Load 207 into VE
$2C4    $4E32   SNE      VE, #32         ; Skip if VE != 50
$2C6    $C7F2   RND      V7, #F2         ; V7 = random & F2
$2C8    $BD6C   JP       V0, $D6C        ; Jump to V0 + D6C
$2CA    $5A6D   UNKNOWN  $5A6D           ; Unknown 5xxx instruction
$2CC    $EA42   UNKNOWN  $EA42           ; Unknown Exxx instruction
$2CE    $0350   SYS      $350            ; System call to 350
$2D0    $E1E0   UNKNOWN  $E1E0           ; Unknown Exxx instruction
$2D2    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2D4    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2D6    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2D8    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2DA    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2DC    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2DE    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2E0    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2E2    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2E4    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2E6    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2E8    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2EA    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2EC    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2EE    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2F0    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2F2    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2F4    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2F6    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2F8    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2FA    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2FC    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$2FE    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$300    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$302    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$304    $A9A9   LD       I, $9A9         ; Load 9A9 into I
$306    $A9E6   LD       I, $9E6         ; Load 9E6 into I
$308    $60CC   LD       V0, #CC         ; Load 204 into V0
$30A    $AF84   LD       I, $F84         ; Load F84 into I
$30C    $8AA4   ADD      VA, VA          ; VA += VA, VF = carry
$30E    $5B8D   UNKNOWN  $5B8D           ; Unknown 5xxx instruction
$310    $D4DA   DRW      V4, VD, #A      ; Draw 10-byte sprite at V4, VD
$312    $3F39   SE       VF, #39         ; Skip if VF == 57
$314    $3AB6   SE       VA, #B6         ; Skip if VA == 182
$316    $8E0F   UNKNOWN  8E0F            ; Unknown 8xxx instruction
$318    $D611   DRW      V6, V1, #1      ; Draw 1-byte sprite at V6, V1
$31A    $B372   JP       V0, $372        ; Jump to V0 + 372
$31C    $C889   RND      V8, #89         ; V8 = random & 89
$31E    $EBA6   UNKNOWN  $EBA6           ; Unknown Exxx instruction
$320    $B2C7   JP       V0, $2C7        ; Jump to V0 + 2C7
$322    $E9A9   UNKNOWN  $E9A9           ; Unknown Exxx instruction
$324    $A0F3   LD       I, $0F3         ; Load 0F3 into I
$326    $3E72   SE       VE, #72         ; Skip if VE == 114
$328    $CD32   RND      VD, #32         ; VD = random & 32
$32A    $CEF1   RND      VE, #F1         ; VE = random & F1
$32C    $0CF7   SYS      $CF7            ; System call to CF7
$32E    $5679   UNKNOWN  $5679           ; Unknown 5xxx instruction
$330    $6082   LD       V0, #82         ; Load 130 into V0
$332    $DBE3   DRW      VB, VE, #3      ; Draw 3-byte sprite at VB, VE
$334    $0FDC   SYS      $FDC            ; System call to FDC
$336    $07D5   SYS      $7D5            ; System call to 7D5
$338    $21F7   CALL     $1F7            ; Call subroutine at 1F7
$33A    $85FA   UNKNOWN  85FA            ; Unknown 8xxx instruction
$33C    $20BC   CALL     $0BC            ; Call subroutine at 0BC
$33E    $9FE7   UNKNOWN  $9FE7           ; Unknown 9xxx instruction
$340    $BD36   JP       V0, $D36        ; Jump to V0 + D36
$342    $3FB9   SE       VF, #B9         ; Skip if VF == 185
$344    $1AC8   JP       $AC8            ; Jump to AC8
$346    $A6E5   LD       I, $6E5         ; Load 6E5 into I
$348    $988C   UNKNOWN  $988C           ; Unknown 9xxx instruction
$34A    $6D51   LD       VD, #51         ; Load 81 into VD
$34C    $6816   LD       V8, #16         ; Load 22 into V8
$34E    $9D9B   UNKNOWN  $9D9B           ; Unknown 9xxx instruction
$350    $EED1   UNKNOWN  $EED1           ; Unknown Exxx instruction
$352    $A74F   LD       I, $74F         ; Load 74F into I
$354    $DC2E   DRW      VC, V2, #E      ; Draw 14-byte sprite at VC, V2
$356    $7FEB   ADD      VF, #EB         ; Add 235 to VF
$358    $EB29   UNKNOWN  $EB29           ; Unknown Exxx instruction
$35A    $33F7   SE       V3, #F7         ; Skip if V3 == 247
$35C    $C8DF   RND      V8, #DF         ; V8 = random & DF
$35E    $29BD   CALL     $9BD            ; Call subroutine at 9BD
$360    $0113   SYS      $113            ; System call to 113
$362    $CA57   RND      VA, #57         ; VA = random & 57
$364    $6077   LD       V0, #77         ; Load 119 into V0
$366    $7ADD   ADD      VA, #DD         ; Add 221 to VA
$368    $33F3   SE       V3, #F3         ; Skip if V3 == 243
$36A    $A62A   LD       I, $62A         ; Load 62A into I
$36C    $5DD8   UNKNOWN  $5DD8           ; Unknown 5xxx instruction
$36E    $05D7   SYS      $5D7            ; System call to 5D7
$370    $D380   DRW      V3, V8, #0      ; Draw 0-byte sprite at V3, V8
$372    $697A   LD       V9, #7A         ; Load 122 into V9
$374    $710A   ADD      V1, #0A         ; Add 10 to V1
$376    $B21D   JP       V0, $21D        ; Jump to V0 + 21D
$378    $E1BD   UNKNOWN  $E1BD           ; Unknown Exxx instruction
$37A    $A861   LD       I, $861         ; Load 861 into I
$37C    $6AE3   LD       VA, #E3         ; Load 227 into VA
$37E    $07CB   SYS      $7CB            ; System call to 7CB
$380    $008D   SYS      $08D            ; System call to 08D
$382    $C619   RND      V6, #19         ; V6 = random & 19
$384    $C03B   RND      V0, #3B         ; V0 = random & 3B
$386    $8435   SUB      V4, V3          ; V4 -= V3, VF = !borrow
$388    $88AB   UNKNOWN  88AB            ; Unknown 8xxx instruction
$38A    $773E   ADD      V7, #3E         ; Add 62 to V7
$38C    $F541   UNKNOWN  F541            ; Unknown Fxxx instruction
$38E    $C2D2   RND      V2, #D2         ; V2 = random & D2
$390    $38D7   SE       V8, #D7         ; Skip if V8 == 215
$392    $8392   AND      V3, V9          ; V3 &= V9
$394    $BDA2   JP       V0, $DA2        ; Jump to V0 + DA2
$396    $B97B   JP       V0, $97B        ; Jump to V0 + 97B
$398    $5B9B   UNKNOWN  $5B9B           ; Unknown 5xxx instruction
$39A    $0A24   SYS      $A24            ; System call to A24
$39C    $E585   UNKNOWN  $E585           ; Unknown Exxx instruction
$39E    $9C4F   UNKNOWN  $9C4F           ; Unknown 9xxx instruction
$3A0    $270A   CALL     $70A            ; Call subroutine at 70A
$3A2    $2B09   CALL     $B09            ; Call subroutine at B09
$3A4    $D0D8   DRW      V0, VD, #8      ; Draw 8-byte sprite at V0, VD
$3A6    $6292   LD       V2, #92         ; Load 146 into V2
$3A8    $A850   LD       I, $850         ; Load 850 into I
$3AA    $F4DD   UNKNOWN  F4DD            ; Unknown Fxxx instruction
$3AC    $9486   UNKNOWN  $9486           ; Unknown 9xxx instruction
$3AE    $FDAC   UNKNOWN  FDAC            ; Unknown Fxxx instruction
$3B0    $6A01   LD       VA, #01         ; Load 1 into VA
$3B2    $DCCF   DRW      VC, VC, #F      ; Draw 15-byte sprite at VC, VC
$3B4    $99A2   UNKNOWN  $99A2           ; Unknown 9xxx instruction
$3B6    $C62D   RND      V6, #2D         ; V6 = random & 2D
$3B8    $2D75   CALL     $D75            ; Call subroutine at D75
$3BA    $0CFD   SYS      $CFD            ; System call to CFD
$3BC    $012F   SYS      $12F            ; System call to 12F
$3BE    $A96E   LD       I, $96E         ; Load 96E into I
$3C0    $6C27   LD       VC, #27         ; Load 39 into VC
$3C2    $9616   UNKNOWN  $9616           ; Unknown 9xxx instruction
$3C4    $B43C   JP       V0, $43C        ; Jump to V0 + 43C
$3C6    $00FD   SYS      $0FD            ; System call to 0FD
$3C8    $FC35   UNKNOWN  FC35            ; Unknown Fxxx instruction
$3CA    $37AD   SE       V7, #AD         ; Skip if V7 == 173
$3CC    $A36D   LD       I, $36D         ; Load 36D into I
$3CE    $517C   UNKNOWN  $517C           ; Unknown 5xxx instruction
$3D0    $9E33   UNKNOWN  $9E33           ; Unknown 9xxx instruction
$3D2    $8D0C   UNKNOWN  8D0C            ; Unknown 8xxx instruction
$3D4    $C99D   RND      V9, #9D         ; V9 = random & 9D
$3D6    $4637   SNE      V6, #37         ; Skip if V6 != 55
$3D8    $C49C   RND      V4, #9C         ; V4 = random & 9C
$3DA    $BC83   JP       V0, $C83        ; Jump to V0 + C83
$3DC    $131D   JP       $31D            ; Jump to 31D
$3DE    $32A0   SE       V2, #A0         ; Skip if V2 == 160
$3E0    $6602   LD       V6, #02         ; Load 2 into V6
$3E2    $C9A8   RND      V9, #A8         ; V9 = random & A8
$3E4    $B399   JP       V0, $399        ; Jump to V0 + 399
$3E6    $75ED   ADD      V5, #ED         ; Add 237 to V5
$3E8    $877B   UNKNOWN  877B            ; Unknown 8xxx instruction
$3EA    $4DB0   SNE      VD, #B0         ; Skip if VD != 176
$3EC    $11BF   JP       $1BF            ; Jump to 1BF
$3EE    $9A6A   UNKNOWN  $9A6A           ; Unknown 9xxx instruction
$3F0    $9CD9   UNKNOWN  $9CD9           ; Unknown 9xxx instruction
$3F2    $882E   SHL      V8              ; V8 <<= 1, VF = MSB
$3F4    $03E0   SYS      $3E0            ; System call to 3E0
$3F6    $E949   UNKNOWN  $E949           ; Unknown Exxx instruction
$3F8    $F911   UNKNOWN  F911            ; Unknown Fxxx instruction
$3FA    $F775   UNKNOWN  F775            ; Unknown Fxxx instruction
$3FC    $3ACF   SE       VA, #CF         ; Skip if VA == 207
$3FE    $1B1B   JP       $B1B            ; Jump to B1B
$400    $457C   SNE      V5, #7C         ; Skip if V5 != 124
$402    $A816   LD       I, $816         ; Load 816 into I
$404    $AD44   LD       I, $D44         ; Load D44 into I
$406    $68A7   LD       V8, #A7         ; Load 167 into V8
$408    $A586   LD       I, $586         ; Load 586 into I
$40A    $FCBA   UNKNOWN  FCBA            ; Unknown Fxxx instruction
$40C    $0FDA   SYS      $FDA            ; System call to FDA
$40E    $662A   LD       V6, #2A         ; Load 42 into V6
$410    $43EE   SNE      V3, #EE         ; Skip if V3 != 238
$412    $E104   UNKNOWN  $E104           ; Unknown Exxx instruction
$414    $3FCA   SE       VF, #CA         ; Skip if VF == 202
$416    $08DD   SYS      $8DD            ; System call to 8DD
$418    $088C   SYS      $88C            ; System call to 88C
$41A    $D5E5   DRW      V5, VE, #5      ; Draw 5-byte sprite at V5, VE
$41C    $8A0D   UNKNOWN  8A0D            ; Unknown 8xxx instruction
$41E    $1646   JP       $646            ; Jump to 646
$420    $86DB   UNKNOWN  86DB            ; Unknown 8xxx instruction
$422    $D2F1   DRW      V2, VF, #1      ; Draw 1-byte sprite at V2, VF
$424    $299E   CALL     $99E            ; Call subroutine at 99E
$426    $B9FC   JP       V0, $9FC        ; Jump to V0 + 9FC
$428    $DB2E   DRW      VB, V2, #E      ; Draw 14-byte sprite at VB, V2
$42A    $4E06   SNE      VE, #06         ; Skip if VE != 6
$42C    $C07C   RND      V0, #7C         ; V0 = random & 7C
$42E    $BB83   JP       V0, $B83        ; Jump to V0 + B83
$430    $6BC3   LD       VB, #C3         ; Load 195 into VB
$432    $1114   JP       $114            ; Jump to 114
$434    $45A9   SNE      V5, #A9         ; Skip if V5 != 169
$436    $C3EB   RND      V3, #EB         ; V3 = random & EB
$438    $4418   SNE      V4, #18         ; Skip if V4 != 24
$43A    $9C17   UNKNOWN  $9C17           ; Unknown 9xxx instruction
$43C    $6AD5   LD       VA, #D5         ; Load 213 into VA
$43E    $72AB   ADD      V2, #AB         ; Add 171 to V2
$440    $5872   UNKNOWN  $5872           ; Unknown 5xxx instruction
$442    $39B2   SE       V9, #B2         ; Skip if V9 == 178
$444    $790A   ADD      V9, #0A         ; Add 10 to V9
$446    $1184   JP       $184            ; Jump to 184
$448    $E70A   UNKNOWN  $E70A           ; Unknown Exxx instruction
$44A    $A3A3   LD       I, $3A3         ; Load 3A3 into I
$44C    $D81F   DRW      V8, V1, #F      ; Draw 15-byte sprite at V8, V1
$44E    $54F2   UNKNOWN  $54F2           ; Unknown 5xxx instruction
$450    $B72E   JP       V0, $72E        ; Jump to V0 + 72E
$452    $3750   SE       V7, #50         ; Skip if V7 == 80
$454    $2945   CALL     $945            ; Call subroutine at 945
$456    $6C40   LD       VC, #40         ; Load 64 into VC
$458    $A21E   LD       I, $21E         ; Load 21E into I
$45A    $643D   LD       V4, #3D         ; Load 61 into V4
$45C    $2591   CALL     $591            ; Call subroutine at 591
$45E    $5ECE   UNKNOWN  $5ECE           ; Unknown 5xxx instruction
$460    $F76C   UNKNOWN  F76C            ; Unknown Fxxx instruction
$462    $F1F4   UNKNOWN  F1F4            ; Unknown Fxxx instruction
$464    $EF28   UNKNOWN  $EF28           ; Unknown Exxx instruction
$466    $92C5   UNKNOWN  $92C5           ; Unknown 9xxx instruction
$468    $5D0B   UNKNOWN  $5D0B           ; Unknown 5xxx instruction
$46A    $5315   UNKNOWN  $5315           ; Unknown 5xxx instruction
$46C    $B9FA   JP       V0, $9FA        ; Jump to V0 + 9FA
$46E    $10C2   JP       $0C2            ; Jump to 0C2
$470    $F4C8   UNKNOWN  F4C8            ; Unknown Fxxx instruction
$472    $52BB   UNKNOWN  $52BB           ; Unknown 5xxx instruction
$474    $AC5E   LD       I, $C5E         ; Load C5E into I
$476    $9E69   UNKNOWN  $9E69           ; Unknown 9xxx instruction
$478    $8F2D   UNKNOWN  8F2D            ; Unknown 8xxx instruction
$47A    $803E   SHL      V0              ; V0 <<= 1, VF = MSB
$47C    $B0AD   JP       V0, $0AD        ; Jump to V0 + 0AD
$47E    $6B6C   LD       VB, #6C         ; Load 108 into VB
$480    $41D7   SNE      V1, #D7         ; Skip if V1 != 215
$482    $A11F   LD       I, $11F         ; Load 11F into I
$484    $6366   LD       V3, #66         ; Load 102 into V3
$486    $DEAB   DRW      VE, VA, #B      ; Draw 11-byte sprite at VE, VA
$488    $C430   RND      V4, #30         ; V4 = random & 30
$48A    $B226   JP       V0, $226        ; Jump to V0 + 226
$48C    $16D1   JP       $6D1            ; Jump to 6D1
$48E    $7A17   ADD      VA, #17         ; Add 23 to VA
$490    $C699   RND      V6, #99         ; V6 = random & 99
$492    $47C5   SNE      V7, #C5         ; Skip if V7 != 197
$494    $9E1C   UNKNOWN  $9E1C           ; Unknown 9xxx instruction
$496    $E08A   UNKNOWN  $E08A           ; Unknown Exxx instruction
$498    $905E   UNKNOWN  $905E           ; Unknown 9xxx instruction
$49A    $78B3   ADD      V8, #B3         ; Add 179 to V8
$49C    $58F6   UNKNOWN  $58F6           ; Unknown 5xxx instruction
$49E    $A8B4   LD       I, $8B4         ; Load 8B4 into I
$4A0    $C44F   RND      V4, #4F         ; V4 = random & 4F
$4A2    $2D22   CALL     $D22            ; Call subroutine at D22
$4A4    $72A7   ADD      V2, #A7         ; Add 167 to V2
$4A6    $67B7   LD       V7, #B7         ; Load 183 into V7
$4A8    $41DE   SNE      V1, #DE         ; Skip if V1 != 222
$4AA    $A724   LD       I, $724         ; Load 724 into I
$4AC    $34BC   SE       V4, #BC         ; Skip if V4 == 188
$4AE    $3BED   SE       VB, #ED         ; Skip if VB == 237
$4B0    $68E0   LD       V8, #E0         ; Load 224 into V8
$4B2    $8507   SUBN     V5, V0          ; V5 = V0 - V5, VF = !borrow
$4B4    $AA06   LD       I, $A06         ; Load A06 into I
$4B6    $5643   UNKNOWN  $5643           ; Unknown 5xxx instruction
$4B8    $BDB7   JP       V0, $DB7        ; Jump to V0 + DB7
$4BA    $FABE   UNKNOWN  FABE            ; Unknown Fxxx instruction
$4BC    $7A92   ADD      VA, #92         ; Add 146 to VA
$4BE    $2F8A   CALL     $F8A            ; Call subroutine at F8A
$4C0    $79A3   ADD      V9, #A3         ; Add 163 to V9
$4C2    $55B9   UNKNOWN  $55B9           ; Unknown 5xxx instruction
$4C4    $F329   LD       F, V3           ; I = sprite address for digit V3
$4C6    $D971   DRW      V9, V7, #1      ; Draw 1-byte sprite at V9, V7
$4C8    $BD72   JP       V0, $D72        ; Jump to V0 + D72
$4CA    $3491   SE       V4, #91         ; Skip if V4 == 145
$4CC    $844B   UNKNOWN  844B            ; Unknown 8xxx instruction
$4CE    $170E   JP       $70E            ; Jump to 70E
$4D0    $4CDE   SNE      VC, #DE         ; Skip if VC != 222
$4D2    $D3EB   DRW      V3, VE, #B      ; Draw 11-byte sprite at V3, VE
$4D4    $41C3   SNE      V1, #C3         ; Skip if V1 != 195
$4D6    $287C   CALL     $87C            ; Call subroutine at 87C
$4D8    $3B4C   SE       VB, #4C         ; Skip if VB == 76
$4DA    $65E5   LD       V5, #E5         ; Load 229 into V5
$4DC    $D1A2   DRW      V1, VA, #2      ; Draw 2-byte sprite at V1, VA
$4DE    $DF52   DRW      VF, V5, #2      ; Draw 2-byte sprite at VF, V5
$4E0    $F637   UNKNOWN  F637            ; Unknown Fxxx instruction
$4E2    $026C   SYS      $26C            ; System call to 26C
$4E4    $AB6B   LD       I, $B6B         ; Load B6B into I
$4E6    $4589   SNE      V5, #89         ; Skip if V5 != 137
$4E8    $CF91   RND      VF, #91         ; VF = random & 91
$4EA    $105B   JP       $05B            ; Jump to 05B
$4EC    $BEA3   JP       V0, $EA3        ; Jump to V0 + EA3
$4EE    $1F23   JP       $F23            ; Jump to F23
$4F0    $1EBE   JP       $EBE            ; Jump to EBE
$4F2    $CAE9   RND      VA, #E9         ; VA = random & E9
$4F4    $316D   SE       V1, #6D         ; Skip if V1 == 109
$4F6    $10E4   JP       $0E4            ; Jump to 0E4
$4F8    $AE02   LD       I, $E02         ; Load E02 into I
$4FA    $A8B8   LD       I, $8B8         ; Load 8B8 into I
$4FC    $F9BE   UNKNOWN  F9BE            ; Unknown Fxxx instruction
$4FE    $9453   UNKNOWN  $9453           ; Unknown 9xxx instruction
$500    $662D   LD       V6, #2D         ; Load 45 into V6
$502    $4B0F   SNE      VB, #0F         ; Skip if VB != 15
$504    $C20A   RND      V2, #0A         ; V2 = random & 0A
$506    $B7FE   JP       V0, $7FE        ; Jump to V0 + 7FE
$508    $FD23   UNKNOWN  FD23            ; Unknown Fxxx instruction
$50A    $7018   ADD      V0, #18         ; Add 24 to V0
$50C    $501C   UNKNOWN  $501C           ; Unknown 5xxx instruction
$50E    $FC4B   UNKNOWN  FC4B            ; Unknown Fxxx instruction
$510    $F726   UNKNOWN  F726            ; Unknown Fxxx instruction
$512    $AA47   LD       I, $A47         ; Load A47 into I
$514    $DF18   DRW      VF, V1, #8      ; Draw 8-byte sprite at VF, V1
$516    $2A8E   CALL     $A8E            ; Call subroutine at A8E
$518    $6DB2   LD       VD, #B2         ; Load 178 into VD
$51A    $52E8   UNKNOWN  $52E8           ; Unknown 5xxx instruction
$51C    $8E0D   UNKNOWN  8E0D            ; Unknown 8xxx instruction
$51E    $00EB   SYS      $0EB            ; System call to 0EB
$520    $E8D8   UNKNOWN  $E8D8           ; Unknown Exxx instruction
$522    $AD7B   LD       I, $D7B         ; Load D7B into I
$524    $0AF8   SYS      $AF8            ; System call to AF8
$526    $9D0A   UNKNOWN  $9D0A           ; Unknown 9xxx instruction
$528    $8DFF   UNKNOWN  8DFF            ; Unknown 8xxx instruction
$52A    $65A1   LD       V5, #A1         ; Load 161 into V5
$52C    $FCB3   UNKNOWN  FCB3            ; Unknown Fxxx instruction
$52E    $12E7   JP       $2E7            ; Jump to 2E7
$530    $74D0   ADD      V4, #D0         ; Add 208 to V4
$532    $737D   ADD      V3, #7D         ; Add 125 to V3
$534    $2C58   CALL     $C58            ; Call subroutine at C58
$536    $2F8A   CALL     $F8A            ; Call subroutine at F8A
$538    $06D7   SYS      $6D7            ; System call to 6D7
$53A    $BA9F   JP       V0, $A9F        ; Jump to V0 + A9F
$53C    $AB39   LD       I, $B39         ; Load B39 into I
$53E    $607E   LD       V0, #7E         ; Load 126 into V0
$540    $0552   SYS      $552            ; System call to 552
$542    $41CF   SNE      V1, #CF         ; Skip if V1 != 207
$544    $C67A   RND      V6, #7A         ; V6 = random & 7A
$546    $7B65   ADD      VB, #65         ; Add 101 to VB
$548    $3C31   SE       VC, #31         ; Skip if VC == 49
$54A    $3CF0   SE       VC, #F0         ; Skip if VC == 240
$54C    $AC06   LD       I, $C06         ; Load C06 into I
$54E    $D71A   DRW      V7, V1, #A      ; Draw 10-byte sprite at V7, V1
$550    $97CA   UNKNOWN  $97CA           ; Unknown 9xxx instruction
$552    $DA29   DRW      VA, V2, #9      ; Draw 9-byte sprite at VA, V2
$554    $D95F   DRW      V9, V5, #F      ; Draw 15-byte sprite at V9, V5
$556    $BF39   JP       V0, $F39        ; Jump to V0 + F39
$558    $1C41   JP       $C41            ; Jump to C41
$55A    $1F1D   JP       $F1D            ; Jump to F1D
$55C    $4878   SNE      V8, #78         ; Skip if V8 != 120
$55E    $9FCE   UNKNOWN  $9FCE           ; Unknown 9xxx instruction
$560    $9D21   UNKNOWN  $9D21           ; Unknown 9xxx instruction
$562    $2BC9   CALL     $BC9            ; Call subroutine at BC9
$564    $9275   UNKNOWN  $9275           ; Unknown 9xxx instruction
$566    $6458   LD       V4, #58         ; Load 88 into V4
$568    $D553   DRW      V5, V5, #3      ; Draw 3-byte sprite at V5, V5
$56A    $4454   SNE      V4, #54         ; Skip if V4 != 84
$56C    $EFED   UNKNOWN  $EFED           ; Unknown Exxx instruction
$56E    $4583   SNE      V5, #83         ; Skip if V5 != 131
$570    $0918   SYS      $918            ; System call to 918
$572    $B85C   JP       V0, $85C        ; Jump to V0 + 85C
$574    $9EE7   UNKNOWN  $9EE7           ; Unknown 9xxx instruction
$576    $3E09   SE       VE, #09         ; Skip if VE == 9
$578    $C995   RND      V9, #95         ; V9 = random & 95
$57A    $8294   ADD      V2, V9          ; V2 += V9, VF = carry
$57C    $4763   SNE      V7, #63         ; Skip if V7 != 99
$57E    $999A   UNKNOWN  $999A           ; Unknown 9xxx instruction
$580    $1A3F   JP       $A3F            ; Jump to A3F
$582    $2798   CALL     $798            ; Call subroutine at 798
$584    $AAE7   LD       I, $AE7         ; Load AE7 into I
$586    $DFF0   DRW      VF, VF, #0      ; Draw 0-byte sprite at VF, VF
$588    $CA00   RND      VA, #00         ; VA = random & 00
$58A    $DD2F   DRW      VD, V2, #F      ; Draw 15-byte sprite at VD, V2
$58C    $A0CE   LD       I, $0CE         ; Load 0CE into I
$58E    $D063   DRW      V0, V6, #3      ; Draw 3-byte sprite at V0, V6
$590    $4E1D   SNE      VE, #1D         ; Skip if VE != 29
$592    $0A4D   SYS      $A4D            ; System call to A4D
$594    $5A37   UNKNOWN  $5A37           ; Unknown 5xxx instruction
$596    $3384   SE       V3, #84         ; Skip if V3 == 132
$598    $243D   CALL     $43D            ; Call subroutine at 43D
$59A    $2775   CALL     $775            ; Call subroutine at 775
$59C    $A42B   LD       I, $42B         ; Load 42B into I
$59E    $70D5   ADD      V0, #D5         ; Add 213 to V0
$5A0    $7091   ADD      V0, #91         ; Add 145 to V0
$5A2    $B720   JP       V0, $720        ; Jump to V0 + 720
$5A4    $766E   ADD      V6, #6E         ; Add 110 to V6
$5A6    $BD4C   JP       V0, $D4C        ; Jump to V0 + D4C
$5A8    $845F   UNKNOWN  845F            ; Unknown 8xxx instruction
$5AA    $4C2C   SNE      VC, #2C         ; Skip if VC != 44
$5AC    $DAAC   DRW      VA, VA, #C      ; Draw 12-byte sprite at VA, VA
$5AE    $142A   JP       $42A            ; Jump to 42A
$5B0    $6CB2   LD       VC, #B2         ; Load 178 into VC
$5B2    $6C69   LD       VC, #69         ; Load 105 into VC
$5B4    $E737   UNKNOWN  $E737           ; Unknown Exxx instruction
$5B6    $E37F   UNKNOWN  $E37F           ; Unknown Exxx instruction
$5B8    $779E   ADD      V7, #9E         ; Add 158 to V7
$5BA    $21E2   CALL     $1E2            ; Call subroutine at 1E2
$5BC    $7858   ADD      V8, #58         ; Add 88 to V8
$5BE    $6420   LD       V4, #20         ; Load 32 into V4
$5C0    $22DC   CALL     $2DC            ; Call subroutine at 2DC
$5C2    $936A   UNKNOWN  $936A           ; Unknown 9xxx instruction
$5C4    $4985   SNE      V9, #85         ; Skip if V9 != 133
$5C6    $F380   UNKNOWN  F380            ; Unknown Fxxx instruction
$5C8    $3039   SE       V0, #39         ; Skip if V0 == 57
$5CA    $CFF7   RND      VF, #F7         ; VF = random & F7
$5CC    $A38A   LD       I, $38A         ; Load 38A into I
$5CE    $5D37   UNKNOWN  $5D37           ; Unknown 5xxx instruction
$5D0    $0A85   SYS      $A85            ; System call to A85
$5D2    $1179   JP       $179            ; Jump to 179
$5D4    $AF90   LD       I, $F90         ; Load F90 into I
$5D6    $6F47   LD       VF, #47         ; Load 71 into VF
$5D8    $F4A8   UNKNOWN  F4A8            ; Unknown Fxxx instruction
$5DA    $85E2   AND      V5, VE          ; V5 &= VE
$5DC    $95A8   UNKNOWN  $95A8           ; Unknown 9xxx instruction
$5DE    $1396   JP       $396            ; Jump to 396
$5E0    $9F9F   UNKNOWN  $9F9F           ; Unknown 9xxx instruction
$5E2    $F3FC   UNKNOWN  F3FC            ; Unknown Fxxx instruction
$5E4    $8317   SUBN     V3, V1          ; V3 = V1 - V3, VF = !borrow
$5E6    $1774   JP       $774            ; Jump to 774
$5E8    $774C   ADD      V7, #4C         ; Add 76 to V7
$5EA    $1CD4   JP       $CD4            ; Jump to CD4
$5EC    $4D3C   SNE      VD, #3C         ; Skip if VD != 60
$5EE    $F621   UNKNOWN  F621            ; Unknown Fxxx instruction
$5F0    $382B   SE       V8, #2B         ; Skip if V8 == 43
$5F2    $2978   CALL     $978            ; Call subroutine at 978
$5F4    $F670   UNKNOWN  F670            ; Unknown Fxxx instruction
$5F6    $B57F   JP       V0, $57F        ; Jump to V0 + 57F
$5F8    $C3B0   RND      V3, #B0         ; V3 = random & B0
$5FA    $F97E   UNKNOWN  F97E            ; Unknown Fxxx instruction
$5FC    $1FE7   JP       $FE7            ; Jump to FE7
$5FE    $4E87   SNE      VE, #87         ; Skip if VE != 135
$600    $4610   SNE      V6, #10         ; Skip if V6 != 16
$602    $C2B2   RND      V2, #B2         ; V2 = random & B2
$604    $8FC3   XOR      VF, VC          ; VF ^= VC
$606    $C400   RND      V4, #00         ; V4 = random & 00
$608    $11B4   JP       $1B4            ; Jump to 1B4
$60A    $8BAC   UNKNOWN  8BAC            ; Unknown 8xxx instruction
$60C    $FA49   UNKNOWN  FA49            ; Unknown Fxxx instruction
$60E    $BDA0   JP       V0, $DA0        ; Jump to V0 + DA0
$610    $D56A   DRW      V5, V6, #A      ; Draw 10-byte sprite at V5, V6
$612    $310A   SE       V1, #0A         ; Skip if V1 == 10
$614    $8D56   SHR      VD              ; VD >>= 1, VF = LSB
$616    $B7F3   JP       V0, $7F3        ; Jump to V0 + 7F3
$618    $1D29   JP       $D29            ; Jump to D29
$61A    $2625   CALL     $625            ; Call subroutine at 625
$61C    $4349   SNE      V3, #49         ; Skip if V3 != 73
$61E    $EB87   UNKNOWN  $EB87           ; Unknown Exxx instruction
$620    $FCC7   UNKNOWN  FCC7            ; Unknown Fxxx instruction
$622    $F909   UNKNOWN  F909            ; Unknown Fxxx instruction
$624    $D5CD   DRW      V5, VC, #D      ; Draw 13-byte sprite at V5, VC
$626    $C26D   RND      V2, #6D         ; V2 = random & 6D
$628    $9DA3   UNKNOWN  $9DA3           ; Unknown 9xxx instruction
$62A    $DA30   DRW      VA, V3, #0      ; Draw 0-byte sprite at VA, V3
$62C    $1FED   JP       $FED            ; Jump to FED
$62E    $AA04   LD       I, $A04         ; Load A04 into I
$630    $8589   UNKNOWN  8589            ; Unknown 8xxx instruction
$632    $E980   UNKNOWN  $E980           ; Unknown Exxx instruction
$634    $C93D   RND      V9, #3D         ; V9 = random & 3D
$636    $FDFC   UNKNOWN  FDFC            ; Unknown Fxxx instruction
$638    $F566   UNKNOWN  F566            ; Unknown Fxxx instruction
$63A    $C707   RND      V7, #07         ; V7 = random & 07
$63C    $0284   SYS      $284            ; System call to 284
$63E    $DB91   DRW      VB, V9, #1      ; Draw 1-byte sprite at VB, V9
$640    $63E7   LD       V3, #E7         ; Load 231 into V3
$642    $B96D   JP       V0, $96D        ; Jump to V0 + 96D
$644    $7EB3   ADD      VE, #B3         ; Add 179 to VE
$646    $0FFD   SYS      $FFD            ; System call to FFD
$648    $4F1F   SNE      VF, #1F         ; Skip if VF != 31
$64A    $5F97   UNKNOWN  $5F97           ; Unknown 5xxx instruction
$64C    $0CAC   SYS      $CAC            ; System call to CAC
$64E    $F65D   UNKNOWN  F65D            ; Unknown Fxxx instruction
$650    $AA96   LD       I, $A96         ; Load A96 into I
$652    $A069   LD       I, $069         ; Load 069 into I
$654    $9D69   UNKNOWN  $9D69           ; Unknown 9xxx instruction
$656    $5A98   UNKNOWN  $5A98           ; Unknown 5xxx instruction
$658    $0282   SYS      $282            ; System call to 282
$65A    $9CA5   UNKNOWN  $9CA5           ; Unknown 9xxx instruction
$65C    $395C   SE       V9, #5C         ; Skip if V9 == 92
$65E    $F7E6   UNKNOWN  F7E6            ; Unknown Fxxx instruction
$660    $B40E   JP       V0, $40E        ; Jump to V0 + 40E
$662    $E9E5   UNKNOWN  $E9E5           ; Unknown Exxx instruction
$664    $6DDB   LD       VD, #DB         ; Load 219 into VD
$666    $68BB   LD       V8, #BB         ; Load 187 into V8
$668    $8A03   XOR      VA, V0          ; VA ^= V0
$66A    $94DB   UNKNOWN  $94DB           ; Unknown 9xxx instruction
$66C    $E69B   UNKNOWN  $E69B           ; Unknown Exxx instruction
$66E    $E4C3   UNKNOWN  $E4C3           ; Unknown Exxx instruction
$670    $64A6   LD       V4, #A6         ; Load 166 into V4
$672    $1540   JP       $540            ; Jump to 540
$674    $71A9   ADD      V1, #A9         ; Add 169 to V1
$676    $5820   SE       V8, V2          ; Skip if V8 == V2
$678    $3869   SE       V8, #69         ; Skip if V8 == 105
$67A    $C7BC   RND      V7, #BC         ; V7 = random & BC
$67C    $E934   UNKNOWN  $E934           ; Unknown Exxx instruction
$67E    $DE00   DRW      VE, V0, #0      ; Draw 0-byte sprite at VE, V0
$680    $614A   LD       V1, #4A         ; Load 74 into V1
$682    $710A   ADD      V1, #0A         ; Add 10 to V1
$684    $3828   SE       V8, #28         ; Skip if V8 == 40
$686    $11C9   JP       $1C9            ; Jump to 1C9
$688    $CC3C   RND      VC, #3C         ; VC = random & 3C
$68A    $F04F   UNKNOWN  F04F            ; Unknown Fxxx instruction
$68C    $92BB   UNKNOWN  $92BB           ; Unknown 9xxx instruction
$68E    $D026   DRW      V0, V2, #6      ; Draw 6-byte sprite at V0, V2
$690    $E17D   UNKNOWN  $E17D           ; Unknown Exxx instruction
$692    $1D91   JP       $D91            ; Jump to D91
$694    $A15D   LD       I, $15D         ; Load 15D into I
$696    $ECE8   UNKNOWN  $ECE8           ; Unknown Exxx instruction
$698    $8220   LD       V2, V2          ; V2 = V2
$69A    $3A29   SE       VA, #29         ; Skip if VA == 41
$69C    $B127   JP       V0, $127        ; Jump to V0 + 127
$69E    $06A1   SYS      $6A1            ; System call to 6A1
$6A0    $4BF4   SNE      VB, #F4         ; Skip if VB != 244
$6A2    $F65F   UNKNOWN  F65F            ; Unknown Fxxx instruction
$6A4    $B32F   JP       V0, $32F        ; Jump to V0 + 32F
$6A6    $6465   LD       V4, #65         ; Load 101 into V4
$6A8    $1829   JP       $829            ; Jump to 829
$6AA    $BB8C   JP       V0, $B8C        ; Jump to V0 + B8C
$6AC    $68B0   LD       V8, #B0         ; Load 176 into V8
$6AE    $5444   UNKNOWN  $5444           ; Unknown 5xxx instruction
$6B0    $978B   UNKNOWN  $978B           ; Unknown 9xxx instruction
$6B2    $18E5   JP       $8E5            ; Jump to 8E5
$6B4    $9912   UNKNOWN  $9912           ; Unknown 9xxx instruction
$6B6    $2E83   CALL     $E83            ; Call subroutine at E83
$6B8    $D6D3   DRW      V6, VD, #3      ; Draw 3-byte sprite at V6, VD
$6BA    $9DBF   UNKNOWN  $9DBF           ; Unknown 9xxx instruction
$6BC    $F465   LD       V4, [I]         ; Load V0-V4 from I
$6BE    $CF94   RND      VF, #94         ; VF = random & 94
$6C0    $FD2A   UNKNOWN  FD2A            ; Unknown Fxxx instruction
$6C2    $175B   JP       $75B            ; Jump to 75B
$6C4    $1816   JP       $816            ; Jump to 816
$6C6    $2824   CALL     $824            ; Call subroutine at 824
$6C8    $34CD   SE       V4, #CD         ; Skip if V4 == 205
$6CA    $37D4   SE       V7, #D4         ; Skip if V7 == 212
$6CC    $69D7   LD       V9, #D7         ; Load 215 into V9
$6CE    $60D2   LD       V0, #D2         ; Load 210 into V0
$6D0    $200D   CALL     $00D            ; Call subroutine at 00D
$6D2    $1799   JP       $799            ; Jump to 799
$6D4    $F306   UNKNOWN  F306            ; Unknown Fxxx instruction
$6D6    $1E53   JP       $E53            ; Jump to E53
$6D8    $8987   SUBN     V9, V8          ; V9 = V8 - V9, VF = !borrow
$6DA    $FCBD   UNKNOWN  FCBD            ; Unknown Fxxx instruction
$6DC    $6E0F   LD       VE, #0F         ; Load 15 into VE
$6DE    $39AE   SE       V9, #AE         ; Skip if V9 == 174
$6E0    $8388   UNKNOWN  8388            ; Unknown 8xxx instruction
$6E2    $2371   CALL     $371            ; Call subroutine at 371
$6E4    $B409   JP       V0, $409        ; Jump to V0 + 409
$6E6    $9586   UNKNOWN  $9586           ; Unknown 9xxx instruction
$6E8    $ECCF   UNKNOWN  $ECCF           ; Unknown Exxx instruction
$6EA    $707A   ADD      V0, #7A         ; Add 122 to V0
$6EC    $6159   LD       V1, #59         ; Load 89 into V1
$6EE    $3070   SE       V0, #70         ; Skip if V0 == 112
$6F0    $AA23   LD       I, $A23         ; Load A23 into I
$6F2    $9937   UNKNOWN  $9937           ; Unknown 9xxx instruction
$6F4    $8385   SUB      V3, V8          ; V3 -= V8, VF = !borrow
$6F6    $B18C   JP       V0, $18C        ; Jump to V0 + 18C
$6F8    $FD0B   UNKNOWN  FD0B            ; Unknown Fxxx instruction
$6FA    $708D   ADD      V0, #8D         ; Add 141 to V0
$6FC    $EA87   UNKNOWN  $EA87           ; Unknown Exxx instruction
$6FE    $C927   RND      V9, #27         ; V9 = random & 27
$700    $2502   CALL     $502            ; Call subroutine at 502
$702    $46CD   SNE      V6, #CD         ; Skip if V6 != 205
$704    $A27E   LD       I, $27E         ; Load 27E into I
$706    $7CBC   ADD      VC, #BC         ; Add 188 to VC
$708    $532E   UNKNOWN  $532E           ; Unknown 5xxx instruction
$70A    $17BA   JP       $7BA            ; Jump to 7BA
$70C    $B63C   JP       V0, $63C        ; Jump to V0 + 63C
$70E    $F98C   UNKNOWN  F98C            ; Unknown Fxxx instruction
$710    $7917   ADD      V9, #17         ; Add 23 to V9
$712    $4E73   SNE      VE, #73         ; Skip if VE != 115
$714    $7E26   ADD      VE, #26         ; Add 38 to VE
$716    $7EA7   ADD      VE, #A7         ; Add 167 to VE
$718    $2945   CALL     $945            ; Call subroutine at 945
$71A    $09CC   SYS      $9CC            ; System call to 9CC
$71C    $11FC   JP       $1FC            ; Jump to 1FC
$71E    $D3DD   DRW      V3, VD, #D      ; Draw 13-byte sprite at V3, VD
$720    $0770   SYS      $770            ; System call to 770
$722    $B692   JP       V0, $692        ; Jump to V0 + 692
$724    $BEDD   JP       V0, $EDD        ; Jump to V0 + EDD
$726    $B0ED   JP       V0, $0ED        ; Jump to V0 + 0ED
$728    $1482   JP       $482            ; Jump to 482
$72A    $1F92   JP       $F92            ; Jump to F92
$72C    $42EE   SNE      V2, #EE         ; Skip if V2 != 238
$72E    $C8D4   RND      V8, #D4         ; V8 = random & D4
$730    $423D   SNE      V2, #3D         ; Skip if V2 != 61
$732    $7FD1   ADD      VF, #D1         ; Add 209 to VF
$734    $A070   LD       I, $070         ; Load 070 into I
$736    $650C   LD       V5, #0C         ; Load 12 into V5
$738    $5C18   UNKNOWN  $5C18           ; Unknown 5xxx instruction
$73A    $8549   UNKNOWN  8549            ; Unknown 8xxx instruction
$73C    $AB83   LD       I, $B83         ; Load B83 into I
$73E    $76E3   ADD      V6, #E3         ; Add 227 to V6
$740    $695C   LD       V9, #5C         ; Load 92 into V9
$742    $F75B   UNKNOWN  F75B            ; Unknown Fxxx instruction
$744    $57EE   UNKNOWN  $57EE           ; Unknown 5xxx instruction
$746    $F76B   UNKNOWN  F76B            ; Unknown Fxxx instruction
$748    $1F86   JP       $F86            ; Jump to F86
$74A    $47E7   SNE      V7, #E7         ; Skip if V7 != 231
$74C    $AA3E   LD       I, $A3E         ; Load A3E into I
$74E    $594E   UNKNOWN  $594E           ; Unknown 5xxx instruction
$750    $1484   JP       $484            ; Jump to 484
$752    $1771   JP       $771            ; Jump to 771
$754    $CC00   RND      VC, #00         ; VC = random & 00
$756    $6425   LD       V4, #25         ; Load 37 into V4
$758    $583B   UNKNOWN  $583B           ; Unknown 5xxx instruction
$75A    $7E20   ADD      VE, #20         ; Add 32 to VE
$75C    $19AF   JP       $9AF            ; Jump to 9AF
$75E    $7F68   ADD      VF, #68         ; Add 104 to VF
$760    $B2AC   JP       V0, $2AC        ; Jump to V0 + 2AC
$762    $2C72   CALL     $C72            ; Call subroutine at C72
$764    $7751   ADD      V7, #51         ; Add 81 to V7
$766    $EDFB   UNKNOWN  $EDFB           ; Unknown Exxx instruction
$768    $38EC   SE       V8, #EC         ; Skip if V8 == 236
$76A    $107E   JP       $07E            ; Jump to 07E
$76C    $AE83   LD       I, $E83         ; Load E83 into I
$76E    $D2A8   DRW      V2, VA, #8      ; Draw 8-byte sprite at V2, VA
$770    $7549   ADD      V5, #49         ; Add 73 to V5
$772    $0276   SYS      $276            ; System call to 276
$774    $5DC1   UNKNOWN  $5DC1           ; Unknown 5xxx instruction
$776    $7337   ADD      V3, #37         ; Add 55 to V3
$778    $C914   RND      V9, #14         ; V9 = random & 14
$77A    $C9FF   RND      V9, #FF         ; V9 = random & FF
$77C    $0EB1   SYS      $EB1            ; System call to EB1
$77E    $4091   SNE      V0, #91         ; Skip if V0 != 145
$780    $D12A   DRW      V1, V2, #A      ; Draw 10-byte sprite at V1, V2
$782    $5BC6   UNKNOWN  $5BC6           ; Unknown 5xxx instruction
$784    $C970   RND      V9, #70         ; V9 = random & 70
$786    $DB94   DRW      VB, V9, #4      ; Draw 4-byte sprite at VB, V9
$788    $C5F5   RND      V5, #F5         ; V5 = random & F5
$78A    $99D1   UNKNOWN  $99D1           ; Unknown 9xxx instruction
$78C    $D515   DRW      V5, V1, #5      ; Draw 5-byte sprite at V5, V1
$78E    $FA2E   UNKNOWN  FA2E            ; Unknown Fxxx instruction
$790    $B0BF   JP       V0, $0BF        ; Jump to V0 + 0BF
$792    $C64B   RND      V6, #4B         ; V6 = random & 4B
$794    $FEE2   UNKNOWN  FEE2            ; Unknown Fxxx instruction
$796    $A2AF   LD       I, $2AF         ; Load 2AF into I
$798    $2FFD   CALL     $FFD            ; Call subroutine at FFD
$79A    $3409   SE       V4, #09         ; Skip if V4 == 9
$79C    $763A   ADD      V6, #3A         ; Add 58 to V6
$79E    $C64D   RND      V6, #4D         ; V6 = random & 4D
$7A0    $8F6F   UNKNOWN  8F6F            ; Unknown 8xxx instruction
$7A2    $C60A   RND      V6, #0A         ; V6 = random & 0A
$7A4    $0856   SYS      $856            ; System call to 856
$7A6    $E7D0   UNKNOWN  $E7D0           ; Unknown Exxx instruction
$7A8    $A3AD   LD       I, $3AD         ; Load 3AD into I
$7AA    $A89B   LD       I, $89B         ; Load 89B into I
$7AC    $43E8   SNE      V3, #E8         ; Skip if V3 != 232
$7AE    $8C75   SUB      VC, V7          ; VC -= V7, VF = !borrow
$7B0    $9631   UNKNOWN  $9631           ; Unknown 9xxx instruction
$7B2    $8F60   LD       VF, V6          ; VF = V6
$7B4    $821B   UNKNOWN  821B            ; Unknown 8xxx instruction
$7B6    $6117   LD       V1, #17         ; Load 23 into V1
$7B8    $F7D5   UNKNOWN  F7D5            ; Unknown Fxxx instruction
$7BA    $F39C   UNKNOWN  F39C            ; Unknown Fxxx instruction
$7BC    $F528   UNKNOWN  F528            ; Unknown Fxxx instruction
$7BE    $E762   UNKNOWN  $E762           ; Unknown Exxx instruction
$7C0    $4B46   SNE      VB, #46         ; Skip if VB != 70
$7C2    $D030   DRW      V0, V3, #0      ; Draw 0-byte sprite at V0, V3
$7C4    $EF7E   UNKNOWN  $EF7E           ; Unknown Exxx instruction
$7C6    $2112   CALL     $112            ; Call subroutine at 112
$7C8    $C578   RND      V5, #78         ; V5 = random & 78
$7CA    $BFF7   JP       V0, $FF7        ; Jump to V0 + FF7
$7CC    $45BC   SNE      V5, #BC         ; Skip if V5 != 188
$7CE    $7901   ADD      V9, #01         ; Add 1 to V9
$7D0    $3991   SE       V9, #91         ; Skip if V9 == 145
$7D2    $000B   SYS      $00B            ; System call to 00B
$7D4    $40F7   SNE      V0, #F7         ; Skip if V0 != 247
$7D6    $C1AD   RND      V1, #AD         ; V1 = random & AD
$7D8    $FE6E   UNKNOWN  FE6E            ; Unknown Fxxx instruction
$7DA    $D224   DRW      V2, V2, #4      ; Draw 4-byte sprite at V2, V2
$7DC    $D271   DRW      V2, V7, #1      ; Draw 1-byte sprite at V2, V7
$7DE    $AED9   LD       I, $ED9         ; Load ED9 into I
$7E0    $30AC   SE       V0, #AC         ; Skip if V0 == 172
$7E2    $9772   UNKNOWN  $9772           ; Unknown 9xxx instruction
$7E4    $8E5D   UNKNOWN  8E5D            ; Unknown 8xxx instruction
$7E6    $B9C5   JP       V0, $9C5        ; Jump to V0 + 9C5
$7E8    $9DBF   UNKNOWN  $9DBF           ; Unknown 9xxx instruction
$7EA    $AEC2   LD       I, $EC2         ; Load EC2 into I
$7EC    $BA82   JP       V0, $A82        ; Jump to V0 + A82
$7EE    $8D7C   UNKNOWN  8D7C            ; Unknown 8xxx instruction
$7F0    $DA06   DRW      VA, V0, #6      ; Draw 6-byte sprite at VA, V0
$7F2    $6599   LD       V5, #99         ; Load 153 into V5
$7F4    $03BE   SYS      $3BE            ; System call to 3BE
$7F6    $48E8   SNE      V8, #E8         ; Skip if V8 != 232
$7F8    $1670   JP       $670            ; Jump to 670
$7FA    $354E   SE       V5, #4E         ; Skip if V5 == 78
$7FC    $7294   ADD      V2, #94         ; Add 148 to V2
$7FE    $A9B3   LD       I, $9B3         ; Load 9B3 into I
$800    $9DE6   UNKNOWN  $9DE6           ; Unknown 9xxx instruction
$802    $45DE   SNE      V5, #DE         ; Skip if V5 != 222
$804    $BE3B   JP       V0, $E3B        ; Jump to V0 + E3B
$806    $DDBB   DRW      VD, VB, #B      ; Draw 11-byte sprite at VD, VB
$808    $4B79   SNE      VB, #79         ; Skip if VB != 121
$80A    $FDE5   UNKNOWN  FDE5            ; Unknown Fxxx instruction
$80C    $DC6E   DRW      VC, V6, #E      ; Draw 14-byte sprite at VC, V6
$80E    $C7F1   RND      V7, #F1         ; V7 = random & F1
$810    $D301   DRW      V3, V0, #1      ; Draw 1-byte sprite at V3, V0
$812    $CAA1   RND      VA, #A1         ; VA = random & A1
$814    $B837   JP       V0, $837        ; Jump to V0 + 837
$816    $8E9E   SHL      VE              ; VE <<= 1, VF = MSB
$818    $38F9   SE       V8, #F9         ; Skip if V8 == 249
$81A    $4910   SNE      V9, #10         ; Skip if V9 != 16
$81C    $8495   SUB      V4, V9          ; V4 -= V9, VF = !borrow
$81E    $42EB   SNE      V2, #EB         ; Skip if V2 != 235
$820    $4B41   SNE      VB, #41         ; Skip if VB != 65
$822    $E2C1   UNKNOWN  $E2C1           ; Unknown Exxx instruction
$824    $FDDE   UNKNOWN  FDDE            ; Unknown Fxxx instruction
$826    $D381   DRW      V3, V8, #1      ; Draw 1-byte sprite at V3, V8
$828    $3D65   SE       VD, #65         ; Skip if VD == 101
$82A    $21E3   CALL     $1E3            ; Call subroutine at 1E3
$82C    $E7B0   UNKNOWN  $E7B0           ; Unknown Exxx instruction
$82E    $AB20   LD       I, $B20         ; Load B20 into I
$830    $3282   SE       V2, #82         ; Skip if V2 == 130
$832    $A511   LD       I, $511         ; Load 511 into I
$834    $6957   LD       V9, #57         ; Load 87 into V9
$836    $F1A9   UNKNOWN  F1A9            ; Unknown Fxxx instruction
$838    $2B04   CALL     $B04            ; Call subroutine at B04
$83A    $A718   LD       I, $718         ; Load 718 into I
$83C    $7342   ADD      V3, #42         ; Add 66 to V3
$83E    $C7CB   RND      V7, #CB         ; V7 = random & CB
$840    $8428   UNKNOWN  8428            ; Unknown 8xxx instruction
$842    $A102   LD       I, $102         ; Load 102 into I
$844    $B626   JP       V0, $626        ; Jump to V0 + 626
$846    $5538   UNKNOWN  $5538           ; Unknown 5xxx instruction
$848    $88FF   UNKNOWN  88FF            ; Unknown 8xxx instruction
$84A    $BAD8   JP       V0, $AD8        ; Jump to V0 + AD8
$84C    $1F0B   JP       $F0B            ; Jump to F0B
$84E    $27E4   CALL     $7E4            ; Call subroutine at 7E4
$850    $BDBF   JP       V0, $DBF        ; Jump to V0 + DBF
$852    $8646   SHR      V6              ; V6 >>= 1, VF = LSB
$854    $B3AD   JP       V0, $3AD        ; Jump to V0 + 3AD
$856    $391A   SE       V9, #1A         ; Skip if V9 == 26
$858    $768D   ADD      V6, #8D         ; Add 141 to V6
$85A    $9ED2   UNKNOWN  $9ED2           ; Unknown 9xxx instruction
$85C    $965E   UNKNOWN  $965E           ; Unknown 9xxx instruction
$85E    $1341   JP       $341            ; Jump to 341
$860    $0E4C   SYS      $E4C            ; System call to E4C
$862    $A10D   LD       I, $10D         ; Load 10D into I
$864    $4EE2   SNE      VE, #E2         ; Skip if VE != 226
$866    $BD66   JP       V0, $D66        ; Jump to V0 + D66
$868    $FFDD   UNKNOWN  FFDD            ; Unknown Fxxx instruction
$86A    $DAD5   DRW      VA, VD, #5      ; Draw 5-byte sprite at VA, VD
$86C    $0014   SYS      $014            ; System call to 014
$86E    $F163   UNKNOWN  F163            ; Unknown Fxxx instruction
$870    $5BA6   UNKNOWN  $5BA6           ; Unknown 5xxx instruction
$872    $4D81   SNE      VD, #81         ; Skip if VD != 129
$874    $B9A0   JP       V0, $9A0        ; Jump to V0 + 9A0
$876    $5DF8   UNKNOWN  $5DF8           ; Unknown 5xxx instruction
$878    $6F7E   LD       VF, #7E         ; Load 126 into VF
$87A    $3D02   SE       VD, #02         ; Skip if VD == 2
$87C    $5180   SE       V1, V8          ; Skip if V1 == V8
$87E    $6E54   LD       VE, #54         ; Load 84 into VE
$880    $89EB   UNKNOWN  89EB            ; Unknown 8xxx instruction
$882    $8279   UNKNOWN  8279            ; Unknown 8xxx instruction
$884    $3C46   SE       VC, #46         ; Skip if VC == 70
$886    $3CA6   SE       VC, #A6         ; Skip if VC == 166
$888    $83A5   SUB      V3, VA          ; V3 -= VA, VF = !borrow
$88A    $DA7A   DRW      VA, V7, #A      ; Draw 10-byte sprite at VA, V7
$88C    $6A0B   LD       VA, #0B         ; Load 11 into VA
$88E    $57F5   UNKNOWN  $57F5           ; Unknown 5xxx instruction
$890    $45AA   SNE      V5, #AA         ; Skip if V5 != 170
$892    $5415   UNKNOWN  $5415           ; Unknown 5xxx instruction
$894    $B7DD   JP       V0, $7DD        ; Jump to V0 + 7DD
$896    $03D0   SYS      $3D0            ; System call to 3D0
$898    $8B24   ADD      VB, V2          ; VB += V2, VF = carry
$89A    $6BC0   LD       VB, #C0         ; Load 192 into VB
$89C    $3F12   SE       VF, #12         ; Skip if VF == 18
$89E    $F70C   UNKNOWN  F70C            ; Unknown Fxxx instruction
$8A0    $1CE4   JP       $CE4            ; Jump to CE4
$8A2    $863D   UNKNOWN  863D            ; Unknown 8xxx instruction
$8A4    $1987   JP       $987            ; Jump to 987
$8A6    $465B   SNE      V6, #5B         ; Skip if V6 != 91
$8A8    $2A2E   CALL     $A2E            ; Call subroutine at A2E
$8AA    $5F9E   UNKNOWN  $5F9E           ; Unknown 5xxx instruction
$8AC    $11C3   JP       $1C3            ; Jump to 1C3
$8AE    $F0A4   UNKNOWN  F0A4            ; Unknown Fxxx instruction
$8B0    $6021   LD       V0, #21         ; Load 33 into V0
$8B2    $927F   UNKNOWN  $927F           ; Unknown 9xxx instruction
$8B4    $DFD3   DRW      VF, VD, #3      ; Draw 3-byte sprite at VF, VD
$8B6    $C59B   RND      V5, #9B         ; V5 = random & 9B
$8B8    $833E   SHL      V3              ; V3 <<= 1, VF = MSB
$8BA    $37CE   SE       V7, #CE         ; Skip if V7 == 206
$8BC    $B761   JP       V0, $761        ; Jump to V0 + 761
$8BE    $925C   UNKNOWN  $925C           ; Unknown 9xxx instruction
$8C0    $DC0A   DRW      VC, V0, #A      ; Draw 10-byte sprite at VC, V0
$8C2    $95B2   UNKNOWN  $95B2           ; Unknown 9xxx instruction
$8C4    $427D   SNE      V2, #7D         ; Skip if V2 != 125
$8C6    $D435   DRW      V4, V3, #5      ; Draw 5-byte sprite at V4, V3
$8C8    $DAEC   DRW      VA, VE, #C      ; Draw 12-byte sprite at VA, VE
$8CA    $2EB5   CALL     $EB5            ; Call subroutine at EB5
$8CC    $7295   ADD      V2, #95         ; Add 149 to V2
$8CE    $9FE1   UNKNOWN  $9FE1           ; Unknown 9xxx instruction
$8D0    $8485   SUB      V4, V8          ; V4 -= V8, VF = !borrow
$8D2    $8073   XOR      V0, V7          ; V0 ^= V7
$8D4    $E60A   UNKNOWN  $E60A           ; Unknown Exxx instruction
$8D6    $249E   CALL     $49E            ; Call subroutine at 49E
$8D8    $9122   UNKNOWN  $9122           ; Unknown 9xxx instruction
$8DA    $52CF   UNKNOWN  $52CF           ; Unknown 5xxx instruction
$8DC    $4035   SNE      V0, #35         ; Skip if V0 != 53
$8DE    $E10D   UNKNOWN  $E10D           ; Unknown Exxx instruction
$8E0    $CEE4   RND      VE, #E4         ; VE = random & E4
$8E2    $25D6   CALL     $5D6            ; Call subroutine at 5D6
$8E4    $7BC0   ADD      VB, #C0         ; Add 192 to VB
$8E6    $DE26   DRW      VE, V2, #6      ; Draw 6-byte sprite at VE, V2
$8E8    $C706   RND      V7, #06         ; V7 = random & 06
$8EA    $5ECF   UNKNOWN  $5ECF           ; Unknown 5xxx instruction
$8EC    $DF85   DRW      VF, V8, #5      ; Draw 5-byte sprite at VF, V8
$8EE    $2A8D   CALL     $A8D            ; Call subroutine at A8D
$8F0    $0B81   SYS      $B81            ; System call to B81
$8F2    $D25A   DRW      V2, V5, #A      ; Draw 10-byte sprite at V2, V5
$8F4    $393D   SE       V9, #3D         ; Skip if V9 == 61
$8F6    $F8A7   UNKNOWN  F8A7            ; Unknown Fxxx instruction
$8F8    $4C48   SNE      VC, #48         ; Skip if VC != 72
$8FA    $72EB   ADD      V2, #EB         ; Add 235 to V2
$8FC    $D985   DRW      V9, V8, #5      ; Draw 5-byte sprite at V9, V8
$8FE    $20D3   CALL     $0D3            ; Call subroutine at 0D3
$900    $5A17   UNKNOWN  $5A17           ; Unknown 5xxx instruction
$902    $C98E   RND      V9, #8E         ; V9 = random & 8E
$904    $0A96   SYS      $A96            ; System call to A96
$906    $DD6A   DRW      VD, V6, #A      ; Draw 10-byte sprite at VD, V6
$908    $4916   SNE      V9, #16         ; Skip if V9 != 22
$90A    $45DE   SNE      V5, #DE         ; Skip if V5 != 222
$90C    $BE55   JP       V0, $E55        ; Jump to V0 + E55
$90E    $9355   UNKNOWN  $9355           ; Unknown 9xxx instruction
$910    $3A41   SE       VA, #41         ; Skip if VA == 65
$912    $65CE   LD       V5, #CE         ; Load 206 into V5
$914    $264E   CALL     $64E            ; Call subroutine at 64E
$916    $400A   SNE      V0, #0A         ; Skip if V0 != 10
$918    $55C4   UNKNOWN  $55C4           ; Unknown 5xxx instruction
$91A    $2A56   CALL     $A56            ; Call subroutine at A56
$91C    $1E8C   JP       $E8C            ; Jump to E8C
$91E    $8362   AND      V3, V6          ; V3 &= V6
$920    $9086   UNKNOWN  $9086           ; Unknown 9xxx instruction
$922    $2DA5   CALL     $DA5            ; Call subroutine at DA5
$924    $EC5D   UNKNOWN  $EC5D           ; Unknown Exxx instruction
$926    $9E68   UNKNOWN  $9E68           ; Unknown 9xxx instruction
$928    $7BCD   ADD      VB, #CD         ; Add 205 to VB
$92A    $AEEF   LD       I, $EEF         ; Load EEF into I
$92C    $0048   SYS      $048            ; System call to 048
$92E    $F98E   UNKNOWN  F98E            ; Unknown Fxxx instruction
$930    $E219   UNKNOWN  $E219           ; Unknown Exxx instruction
$932    $9D66   UNKNOWN  $9D66           ; Unknown 9xxx instruction
$934    $FC1B   UNKNOWN  FC1B            ; Unknown Fxxx instruction
$936    $F706   UNKNOWN  F706            ; Unknown Fxxx instruction
$938    $0E41   SYS      $E41            ; System call to E41
$93A    $6FC8   LD       VF, #C8         ; Load 200 into VF
$93C    $6B3F   LD       VB, #3F         ; Load 63 into VB
$93E    $0D5A   SYS      $D5A            ; System call to D5A
$940    $C1CC   RND      V1, #CC         ; V1 = random & CC
$942    $AC99   LD       I, $C99         ; Load C99 into I
$944    $2FC4   CALL     $FC4            ; Call subroutine at FC4
$946    $3076   SE       V0, #76         ; Skip if V0 == 118
$948    $4103   SNE      V1, #03         ; Skip if V1 != 3
$94A    $D6CF   DRW      V6, VC, #F      ; Draw 15-byte sprite at V6, VC
$94C    $EE45   UNKNOWN  $EE45           ; Unknown Exxx instruction
$94E    $9F85   UNKNOWN  $9F85           ; Unknown 9xxx instruction
$950    $75EF   ADD      V5, #EF         ; Add 239 to V5
$952    $7BFE   ADD      VB, #FE         ; Add 254 to VB
$954    $65CE   LD       V5, #CE         ; Load 206 into V5
$956    $BC1A   JP       V0, $C1A        ; Jump to V0 + C1A
$958    $795C   ADD      V9, #5C         ; Add 92 to V9
$95A    $BC79   JP       V0, $C79        ; Jump to V0 + C79
$95C    $5F51   UNKNOWN  $5F51           ; Unknown 5xxx instruction
$95E    $2668   CALL     $668            ; Call subroutine at 668
$960    $16DE   JP       $6DE            ; Jump to 6DE
$962    $9267   UNKNOWN  $9267           ; Unknown 9xxx instruction
$964    $651B   LD       V5, #1B         ; Load 27 into V5
$966    $5B91   UNKNOWN  $5B91           ; Unknown 5xxx instruction
$968    $65E0   LD       V5, #E0         ; Load 224 into V5
$96A    $ED3A   UNKNOWN  $ED3A           ; Unknown Exxx instruction
$96C    $DFCF   DRW      VF, VC, #F      ; Draw 15-byte sprite at VF, VC
$96E    $8413   XOR      V4, V1          ; V4 ^= V1
$970    $1C23   JP       $C23            ; Jump to C23
$972    $B18D   JP       V0, $18D        ; Jump to V0 + 18D
$974    $1FDA   JP       $FDA            ; Jump to FDA
$976    $C449   RND      V4, #49         ; V4 = random & 49
$978    $AC4A   LD       I, $C4A         ; Load C4A into I
$97A    $D0E3   DRW      V0, VE, #3      ; Draw 3-byte sprite at V0, VE
$97C    $C4CD   RND      V4, #CD         ; V4 = random & CD
$97E    $515D   UNKNOWN  $515D           ; Unknown 5xxx instruction
$980    $5FC4   UNKNOWN  $5FC4           ; Unknown 5xxx instruction
$982    $9663   UNKNOWN  $9663           ; Unknown 9xxx instruction
$984    $A03C   LD       I, $03C         ; Load 03C into I
$986    $1F08   JP       $F08            ; Jump to F08
$988    $E88F   UNKNOWN  $E88F           ; Unknown Exxx instruction
$98A    $86F5   SUB      V6, VF          ; V6 -= VF, VF = !borrow
$98C    $1C86   JP       $C86            ; Jump to C86
$98E    $8933   XOR      V9, V3          ; V9 ^= V3
$990    $2497   CALL     $497            ; Call subroutine at 497
$992    $88B1   OR       V8, VB          ; V8 |= VB
$994    $958A   UNKNOWN  $958A           ; Unknown 9xxx instruction
$996    $86CF   UNKNOWN  86CF            ; Unknown 8xxx instruction
$998    $77D2   ADD      V7, #D2         ; Add 210 to V7
$99A    $871E   SHL      V7              ; V7 <<= 1, VF = MSB
$99C    $62B2   LD       V2, #B2         ; Load 178 into V2
$99E    $566C   UNKNOWN  $566C           ; Unknown 5xxx instruction
$9A0    $00C7   SYS      $0C7            ; System call to 0C7
$9A2    $2966   CALL     $966            ; Call subroutine at 966
$9A4    $E02E   UNKNOWN  $E02E           ; Unknown Exxx instruction
$9A6    $AC08   LD       I, $C08         ; Load C08 into I
$9A8    $E414   UNKNOWN  $E414           ; Unknown Exxx instruction
$9AA    $FD9E   UNKNOWN  FD9E            ; Unknown Fxxx instruction
$9AC    $2D01   CALL     $D01            ; Call subroutine at D01
$9AE    $7530   ADD      V5, #30         ; Add 48 to V5
$9B0    $DBA3   DRW      VB, VA, #3      ; Draw 3-byte sprite at VB, VA
$9B2    $4148   SNE      V1, #48         ; Skip if V1 != 72
$9B4    $923C   UNKNOWN  $923C           ; Unknown 9xxx instruction
$9B6    $E803   UNKNOWN  $E803           ; Unknown Exxx instruction
$9B8    $4D53   SNE      VD, #53         ; Skip if VD != 83
$9BA    $C6E4   RND      V6, #E4         ; V6 = random & E4
$9BC    $D50D   DRW      V5, V0, #D      ; Draw 13-byte sprite at V5, V0
$9BE    $E821   UNKNOWN  $E821           ; Unknown Exxx instruction
$9C0    $6799   LD       V7, #99         ; Load 153 into V7
$9C2    $4504   SNE      V5, #04         ; Skip if V5 != 4
$9C4    $CA49   RND      VA, #49         ; VA = random & 49
$9C6    $09C6   SYS      $9C6            ; System call to 9C6
$9C8    $4107   SNE      V1, #07         ; Skip if V1 != 7
$9CA    $D24B   DRW      V2, V4, #B      ; Draw 11-byte sprite at V2, V4
$9CC    $4823   SNE      V8, #23         ; Skip if V8 != 35
$9CE    $5D29   UNKNOWN  $5D29           ; Unknown 5xxx instruction
$9D0    $3C7C   SE       VC, #7C         ; Skip if VC == 124
$9D2    $BC72   JP       V0, $C72        ; Jump to V0 + C72
$9D4    $BAFB   JP       V0, $AFB        ; Jump to V0 + AFB
$9D6    $E65E   UNKNOWN  $E65E           ; Unknown Exxx instruction
$9D8    $FA81   UNKNOWN  FA81            ; Unknown Fxxx instruction
$9DA    $9E39   UNKNOWN  $9E39           ; Unknown 9xxx instruction
$9DC    $5180   SE       V1, V8          ; Skip if V1 == V8
$9DE    $23EE   CALL     $3EE            ; Call subroutine at 3EE
$9E0    $1CE8   JP       $CE8            ; Jump to CE8
$9E2    $8F1B   UNKNOWN  8F1B            ; Unknown 8xxx instruction
$9E4    $4681   SNE      V6, #81         ; Skip if V6 != 129
$9E6    $0A6C   SYS      $A6C            ; System call to A6C
$9E8    $209B   CALL     $09B            ; Call subroutine at 09B
$9EA    $8DE7   SUBN     VD, VE          ; VD = VE - VD, VF = !borrow
$9EC    $1A34   JP       $A34            ; Jump to A34
$9EE    $0C01   SYS      $C01            ; System call to C01
$9F0    $7C22   ADD      VC, #22         ; Add 34 to VC
$9F2    $AEBD   LD       I, $EBD         ; Load EBD into I
$9F4    $1398   JP       $398            ; Jump to 398
$9F6    $6D16   LD       VD, #16         ; Load 22 into VD
$9F8    $6BFF   LD       VB, #FF         ; Load 255 into VB
$9FA    $1169   JP       $169            ; Jump to 169
$9FC    $CF68   RND      VF, #68         ; VF = random & 68
$9FE    $59C1   UNKNOWN  $59C1           ; Unknown 5xxx instruction
$A00    $97D3   UNKNOWN  $97D3           ; Unknown 9xxx instruction
$A02    $6FD6   LD       VF, #D6         ; Load 214 into VF
$A04    $4364   SNE      V3, #64         ; Skip if V3 != 100
$A06    $9225   UNKNOWN  $9225           ; Unknown 9xxx instruction
$A08    $560E   UNKNOWN  $560E           ; Unknown 5xxx instruction
$A0A    $7C59   ADD      VC, #59         ; Add 89 to VC
$A0C    $FD20   UNKNOWN  FD20            ; Unknown Fxxx instruction
$A0E    $C168   RND      V1, #68         ; V1 = random & 68
$A10    $97F8   UNKNOWN  $97F8           ; Unknown 9xxx instruction
$A12    $15E6   JP       $5E6            ; Jump to 5E6
$A14    $BFE6   JP       V0, $FE6        ; Jump to V0 + FE6
$A16    $6AA5   LD       VA, #A5         ; Load 165 into VA
$A18    $8F99   UNKNOWN  8F99            ; Unknown 8xxx instruction
$A1A    $F8F5   UNKNOWN  F8F5            ; Unknown Fxxx instruction
$A1C    $C186   RND      V1, #86         ; V1 = random & 86
$A1E    $5EAE   UNKNOWN  $5EAE           ; Unknown 5xxx instruction
$A20    $210E   CALL     $10E            ; Call subroutine at 10E
$A22    $B283   JP       V0, $283        ; Jump to V0 + 283
$A24    $E9FA   UNKNOWN  $E9FA           ; Unknown Exxx instruction
$A26    $0517   SYS      $517            ; System call to 517
$A28    $C234   RND      V2, #34         ; V2 = random & 34
$A2A    $3D7B   SE       VD, #7B         ; Skip if VD == 123
$A2C    $93F5   UNKNOWN  $93F5           ; Unknown 9xxx instruction
$A2E    $AF99   LD       I, $F99         ; Load F99 into I
$A30    $9BE7   UNKNOWN  $9BE7           ; Unknown 9xxx instruction
$A32    $8F28   UNKNOWN  8F28            ; Unknown 8xxx instruction
$A34    $F6BC   UNKNOWN  F6BC            ; Unknown Fxxx instruction
$A36    $7302   ADD      V3, #02         ; Add 2 to V3
$A38    $CE60   RND      VE, #60         ; VE = random & 60
$A3A    $2096   CALL     $096            ; Call subroutine at 096
$A3C    $8C8B   UNKNOWN  8C8B            ; Unknown 8xxx instruction
$A3E    $0826   SYS      $826            ; System call to 826
$A40    $32D8   SE       V2, #D8         ; Skip if V2 == 216
$A42    $D152   DRW      V1, V5, #2      ; Draw 2-byte sprite at V1, V5
$A44    $E945   UNKNOWN  $E945           ; Unknown Exxx instruction
$A46    $C542   RND      V5, #42         ; V5 = random & 42
$A48    $FBE6   UNKNOWN  FBE6            ; Unknown Fxxx instruction
$A4A    $7519   ADD      V5, #19         ; Add 25 to V5
$A4C    $C536   RND      V5, #36         ; V5 = random & 36
$A4E    $49F6   SNE      V9, #F6         ; Skip if V9 != 246
$A50    $D335   DRW      V3, V3, #5      ; Draw 5-byte sprite at V3, V3
$A52    $1D65   JP       $D65            ; Jump to D65
$A54    $06AF   SYS      $6AF            ; System call to 6AF
$A56    $646D   LD       V4, #6D         ; Load 109 into V4
$A58    $2DFD   CALL     $DFD            ; Call subroutine at DFD
$A5A    $6F8C   LD       VF, #8C         ; Load 140 into VF
$A5C    $B373   JP       V0, $373        ; Jump to V0 + 373
$A5E    $D470   DRW      V4, V7, #0      ; Draw 0-byte sprite at V4, V7
$A60    $3428   SE       V4, #28         ; Skip if V4 == 40
$A62    $06AD   SYS      $6AD            ; System call to 6AD
$A64    $3170   SE       V1, #70         ; Skip if V1 == 112
$A66    $95D5   UNKNOWN  $95D5           ; Unknown 9xxx instruction
$A68    $98FF   UNKNOWN  $98FF           ; Unknown 9xxx instruction
$A6A    $B655   JP       V0, $655        ; Jump to V0 + 655
$A6C    $F532   UNKNOWN  F532            ; Unknown Fxxx instruction
$A6E    $37EF   SE       V7, #EF         ; Skip if V7 == 239
$A70    $0D54   SYS      $D54            ; System call to D54
$A72    $8605   SUB      V6, V0          ; V6 -= V0, VF = !borrow
$A74    $120F   JP       $20F            ; Jump to 20F
$A76    $3AEB   SE       VA, #EB         ; Skip if VA == 235
$A78    $BF84   JP       V0, $F84        ; Jump to V0 + F84
$A7A    $B3FB   JP       V0, $3FB        ; Jump to V0 + 3FB
$A7C    $E24D   UNKNOWN  $E24D           ; Unknown Exxx instruction
$A7E    $F1B2   UNKNOWN  F1B2            ; Unknown Fxxx instruction
$A80    $E8EF   UNKNOWN  $E8EF           ; Unknown Exxx instruction
$A82    $F31D   UNKNOWN  F31D            ; Unknown Fxxx instruction
$A84    $213B   CALL     $13B            ; Call subroutine at 13B
$A86    $0EC4   SYS      $EC4            ; System call to EC4
$A88    $A329   LD       I, $329         ; Load 329 into I
$A8A    $9610   SNE      V6, V1          ; Skip if V6 != V1
$A8C    $A155   LD       I, $155         ; Load 155 into I
$A8E    $66B2   LD       V6, #B2         ; Load 178 into V6
$A90    $F994   UNKNOWN  F994            ; Unknown Fxxx instruction
$A92    $0D52   SYS      $D52            ; System call to D52
$A94    $6358   LD       V3, #58         ; Load 88 into V3
$A96    $63AB   LD       V3, #AB         ; Load 171 into V3
$A98    $5538   UNKNOWN  $5538           ; Unknown 5xxx instruction
$A9A    $99DF   UNKNOWN  $99DF           ; Unknown 9xxx instruction
$A9C    $8B2E   SHL      VB              ; VB <<= 1, VF = MSB
$A9E    $6040   LD       V0, #40         ; Load 64 into V0
$AA0    $450D   SNE      V5, #0D         ; Skip if V5 != 13
$AA2    $C50B   RND      V5, #0B         ; V5 = random & 0B
$AA4    $CACB   RND      VA, #CB         ; VA = random & CB
$AA6    $F223   UNKNOWN  F223            ; Unknown Fxxx instruction
$AA8    $3495   SE       V4, #95         ; Skip if V4 == 149
$AAA    $D3B6   DRW      V3, VB, #6      ; Draw 6-byte sprite at V3, VB
$AAC    $2838   CALL     $838            ; Call subroutine at 838
$AAE    $E144   UNKNOWN  $E144           ; Unknown Exxx instruction
$AB0    $E3FA   UNKNOWN  $E3FA           ; Unknown Exxx instruction
$AB2    $D121   DRW      V1, V2, #1      ; Draw 1-byte sprite at V1, V2
$AB4    $9E11   UNKNOWN  $9E11           ; Unknown 9xxx instruction
$AB6    $044D   SYS      $44D            ; System call to 44D
$AB8    $537E   UNKNOWN  $537E           ; Unknown 5xxx instruction
$ABA    $A92E   LD       I, $92E         ; Load 92E into I
$ABC    $8AE5   SUB      VA, VE          ; VA -= VE, VF = !borrow
$ABE    $4804   SNE      V8, #04         ; Skip if V8 != 4
$AC0    $6BC3   LD       VB, #C3         ; Load 195 into VB
$AC2    $B050   JP       V0, $050        ; Jump to V0 + 050
$AC4    $28B3   CALL     $8B3            ; Call subroutine at 8B3
$AC6    $F59D   UNKNOWN  F59D            ; Unknown Fxxx instruction
$AC8    $C7C8   RND      V7, #C8         ; V7 = random & C8
$ACA    $A134   LD       I, $134         ; Load 134 into I
$ACC    $A34B   LD       I, $34B         ; Load 34B into I
$ACE    $61D5   LD       V1, #D5         ; Load 213 into V1
$AD0    $68C8   LD       V8, #C8         ; Load 200 into V8
$AD2    $F646   UNKNOWN  F646            ; Unknown Fxxx instruction
$AD4    $C7A1   RND      V7, #A1         ; V7 = random & A1
$AD6    $356C   SE       V5, #6C         ; Skip if V5 == 108
$AD8    $B443   JP       V0, $443        ; Jump to V0 + 443
$ADA    $DD50   DRW      VD, V5, #0      ; Draw 0-byte sprite at VD, V5
$ADC    $11E6   JP       $1E6            ; Jump to 1E6
$ADE    $CD67   RND      VD, #67         ; VD = random & 67
$AE0    $A2C4   LD       I, $2C4         ; Load 2C4 into I
$AE2    $2ACC   CALL     $ACC            ; Call subroutine at ACC
$AE4    $D639   DRW      V6, V3, #9      ; Draw 9-byte sprite at V6, V3
$AE6    $1E21   JP       $E21            ; Jump to E21
$AE8    $7F96   ADD      VF, #96         ; Add 150 to VF
$AEA    $45D8   SNE      V5, #D8         ; Skip if V5 != 216
$AEC    $6D4D   LD       VD, #4D         ; Load 77 into VD
$AEE    $2E84   CALL     $E84            ; Call subroutine at E84
$AF0    $2E37   CALL     $E37            ; Call subroutine at E37
$AF2    $4A94   SNE      VA, #94         ; Skip if VA != 148
$AF4    $9E6C   UNKNOWN  $9E6C           ; Unknown 9xxx instruction
$AF6    $0041   SYS      $041            ; System call to 041
$AF8    $ABBE   LD       I, $BBE         ; Load BBE into I
$AFA    $8C90   LD       VC, V9          ; VC = V9
$AFC    $5031   UNKNOWN  $5031           ; Unknown 5xxx instruction
$AFE    $E275   UNKNOWN  $E275           ; Unknown Exxx instruction
$B00    $6568   LD       V5, #68         ; Load 104 into V5
$B02    $709E   ADD      V0, #9E         ; Add 158 to V0
$B04    $BA08   JP       V0, $A08        ; Jump to V0 + A08
$B06    $02DE   SYS      $2DE            ; System call to 2DE
$B08    $6577   LD       V5, #77         ; Load 119 into V5
$B0A    $E22A   UNKNOWN  $E22A           ; Unknown Exxx instruction
$B0C    $A2DE   LD       I, $2DE         ; Load 2DE into I
$B0E    $66B3   LD       V6, #B3         ; Load 179 into V6
$B10    $4D71   SNE      VD, #71         ; Skip if VD != 113
$B12    $9C50   SNE      VC, V5          ; Skip if VC != V5
$B14    $004D   SYS      $04D            ; System call to 04D
$B16    $B75A   JP       V0, $75A        ; Jump to V0 + 75A
$B18    $8009   UNKNOWN  8009            ; Unknown 8xxx instruction
$B1A    $AA75   LD       I, $A75         ; Load A75 into I
$B1C    $3177   SE       V1, #77         ; Skip if V1 == 119
$B1E    $8358   UNKNOWN  8358            ; Unknown 8xxx instruction
$B20    $C346   RND      V3, #46         ; V3 = random & 46
$B22    $BFA1   JP       V0, $FA1        ; Jump to V0 + FA1
$B24    $B00E   JP       V0, $00E        ; Jump to V0 + 00E
$B26    $ADBA   LD       I, $DBA         ; Load DBA into I
$B28    $4723   SNE      V7, #23         ; Skip if V7 != 35
$B2A    $418D   SNE      V1, #8D         ; Skip if V1 != 141
$B2C    $A0D9   LD       I, $0D9         ; Load 0D9 into I
$B2E    $238F   CALL     $38F            ; Call subroutine at 38F
$B30    $1E9E   JP       $E9E            ; Jump to E9E
$B32    $0252   SYS      $252            ; System call to 252
$B34    $97B9   UNKNOWN  $97B9           ; Unknown 9xxx instruction
$B36    $0523   SYS      $523            ; System call to 523
$B38    $E95B   UNKNOWN  $E95B           ; Unknown Exxx instruction
$B3A    $C135   RND      V1, #35         ; V1 = random & 35
$B3C    $F517   UNKNOWN  F517            ; Unknown Fxxx instruction
$B3E    $CDF0   RND      VD, #F0         ; VD = random & F0
$B40    $569C   UNKNOWN  $569C           ; Unknown 5xxx instruction
$B42    $8463   XOR      V4, V6          ; V4 ^= V6
$B44    $E83A   UNKNOWN  $E83A           ; Unknown Exxx instruction
$B46    $219C   CALL     $19C            ; Call subroutine at 19C
$B48    $E7CF   UNKNOWN  $E7CF           ; Unknown Exxx instruction
$B4A    $A56B   LD       I, $56B         ; Load 56B into I
$B4C    $4336   SNE      V3, #36         ; Skip if V3 != 54
$B4E    $A2FA   LD       I, $2FA         ; Load 2FA into I
$B50    $B4D1   JP       V0, $4D1        ; Jump to V0 + 4D1
$B52    $0F01   SYS      $F01            ; System call to F01
$B54    $8784   ADD      V7, V8          ; V7 += V8, VF = carry
$B56    $F5B7   UNKNOWN  F5B7            ; Unknown Fxxx instruction
$B58    $07B3   SYS      $7B3            ; System call to 7B3
$B5A    $8A67   SUBN     VA, V6          ; VA = V6 - VA, VF = !borrow
$B5C    $8B20   LD       VB, V2          ; VB = V2
$B5E    $C515   RND      V5, #15         ; V5 = random & 15
$B60    $0700   SYS      $700            ; System call to 700
$B62    $D320   DRW      V3, V2, #0      ; Draw 0-byte sprite at V3, V2
$B64    $F384   UNKNOWN  F384            ; Unknown Fxxx instruction
$B66    $E14F   UNKNOWN  $E14F           ; Unknown Exxx instruction
$B68    $3ED6   SE       VE, #D6         ; Skip if VE == 214
$B6A    $86C5   SUB      V6, VC          ; V6 -= VC, VF = !borrow
$B6C    $A20A   LD       I, $20A         ; Load 20A into I
$B6E    $9B0F   UNKNOWN  $9B0F           ; Unknown 9xxx instruction
$B70    $938F   UNKNOWN  $938F           ; Unknown 9xxx instruction
$B72    $8988   UNKNOWN  8988            ; Unknown 8xxx instruction
$B74    $DE53   DRW      VE, V5, #3      ; Draw 3-byte sprite at VE, V5
$B76    $F9E6   UNKNOWN  F9E6            ; Unknown Fxxx instruction
$B78    $E413   UNKNOWN  $E413           ; Unknown Exxx instruction
$B7A    $2AE6   CALL     $AE6            ; Call subroutine at AE6
$B7C    $B00F   JP       V0, $00F        ; Jump to V0 + 00F
$B7E    $DB04   DRW      VB, V0, #4      ; Draw 4-byte sprite at VB, V0
$B80    $EB84   UNKNOWN  $EB84           ; Unknown Exxx instruction
$B82    $3E91   SE       VE, #91         ; Skip if VE == 145
$B84    $FB82   UNKNOWN  FB82            ; Unknown Fxxx instruction
$B86    $D42F   DRW      V4, V2, #F      ; Draw 15-byte sprite at V4, V2
$B88    $9D44   UNKNOWN  $9D44           ; Unknown 9xxx instruction
$B8A    $6316   LD       V3, #16         ; Load 22 into V3
$B8C    $D118   DRW      V1, V1, #8      ; Draw 8-byte sprite at V1, V1
$B8E    $22F7   CALL     $2F7            ; Call subroutine at 2F7
$B90    $AEAF   LD       I, $EAF         ; Load EAF into I
$B92    $1622   JP       $622            ; Jump to 622
$B94    $597C   UNKNOWN  $597C           ; Unknown 5xxx instruction
$B96    $B51A   JP       V0, $51A        ; Jump to V0 + 51A
$B98    $530F   UNKNOWN  $530F           ; Unknown 5xxx instruction
$B9A    $DAC6   DRW      VA, VC, #6      ; Draw 6-byte sprite at VA, VC
$B9C    $42BA   SNE      V2, #BA         ; Skip if V2 != 186
$B9E    $177C   JP       $77C            ; Jump to 77C
$BA0    $5269   UNKNOWN  $5269           ; Unknown 5xxx instruction
$BA2    $69FF   LD       V9, #FF         ; Load 255 into V9
$BA4    $8DF1   OR       VD, VF          ; VD |= VF
$BA6    $B62C   JP       V0, $62C        ; Jump to V0 + 62C
$BA8    $67E9   LD       V7, #E9         ; Load 233 into V7
$BAA    $E757   UNKNOWN  $E757           ; Unknown Exxx instruction
$BAC    $5FB3   UNKNOWN  $5FB3           ; Unknown 5xxx instruction
$BAE    $7E8D   ADD      VE, #8D         ; Add 141 to VE
$BB0    $CD9A   RND      VD, #9A         ; VD = random & 9A
$BB2    $F852   UNKNOWN  F852            ; Unknown Fxxx instruction
$BB4    $6AE9   LD       VA, #E9         ; Load 233 into VA
$BB6    $946E   UNKNOWN  $946E           ; Unknown 9xxx instruction
$BB8    $5736   UNKNOWN  $5736           ; Unknown 5xxx instruction
$BBA    $7A11   ADD      VA, #11         ; Add 17 to VA
$BBC    $CAF6   RND      VA, #F6         ; VA = random & F6
$BBE    $EAE3   UNKNOWN  $EAE3           ; Unknown Exxx instruction
$BC0    $49CE   SNE      V9, #CE         ; Skip if V9 != 206
$BC2    $77D5   ADD      V7, #D5         ; Add 213 to V7
$BC4    $9810   SNE      V8, V1          ; Skip if V8 != V1
$BC6    $6447   LD       V4, #47         ; Load 71 into V4
$BC8    $FA49   UNKNOWN  FA49            ; Unknown Fxxx instruction
$BCA    $1E58   JP       $E58            ; Jump to E58
$BCC    $9E0B   UNKNOWN  $9E0B           ; Unknown 9xxx instruction
$BCE    $AF56   LD       I, $F56         ; Load F56 into I
$BD0    $37D6   SE       V7, #D6         ; Skip if V7 == 214
$BD2    $5F96   UNKNOWN  $5F96           ; Unknown 5xxx instruction
$BD4    $CD55   RND      VD, #55         ; VD = random & 55
$BD6    $BF9B   JP       V0, $F9B        ; Jump to V0 + F9B
$BD8    $A980   LD       I, $980         ; Load 980 into I
$BDA    $4984   SNE      V9, #84         ; Skip if V9 != 132
$BDC    $F95C   UNKNOWN  F95C            ; Unknown Fxxx instruction
$BDE    $1DAB   JP       $DAB            ; Jump to DAB
$BE0    $AFB6   LD       I, $FB6         ; Load FB6 into I
$BE2    $ABC3   LD       I, $BC3         ; Load BC3 into I
$BE4    $E99B   UNKNOWN  $E99B           ; Unknown Exxx instruction
$BE6    $3CC3   SE       VC, #C3         ; Skip if VC == 195
$BE8    $7B81   ADD      VB, #81         ; Add 129 to VB
$BEA    $69B7   LD       V9, #B7         ; Load 183 into V9
$BEC    $E471   UNKNOWN  $E471           ; Unknown Exxx instruction
$BEE    $EC5F   UNKNOWN  $EC5F           ; Unknown Exxx instruction
$BF0    $BF34   JP       V0, $F34        ; Jump to V0 + F34
$BF2    $32AA   SE       V2, #AA         ; Skip if V2 == 170
$BF4    $02D6   SYS      $2D6            ; System call to 2D6
$BF6    $D7B6   DRW      V7, VB, #6      ; Draw 6-byte sprite at V7, VB
$BF8    $B84C   JP       V0, $84C        ; Jump to V0 + 84C
$BFA    $1FE5   JP       $FE5            ; Jump to FE5
$BFC    $0A2A   SYS      $A2A            ; System call to A2A
$BFE    $C5A6   RND      V5, #A6         ; V5 = random & A6
$C00    $6A10   LD       VA, #10         ; Load 16 into VA
$C02    $F1FC   UNKNOWN  F1FC            ; Unknown Fxxx instruction
$C04    $6409   LD       V4, #09         ; Load 9 into V4
$C06    $4BF6   SNE      VB, #F6         ; Skip if VB != 246
$C08    $FC8E   UNKNOWN  FC8E            ; Unknown Fxxx instruction
$C0A    $B2D6   JP       V0, $2D6        ; Jump to V0 + 2D6
$C0C    $E2D8   UNKNOWN  $E2D8           ; Unknown Exxx instruction
$C0E    $F80B   UNKNOWN  F80B            ; Unknown Fxxx instruction
$C10    $8DF4   ADD      VD, VF          ; VD += VF, VF = carry
$C12    $AC26   LD       I, $C26         ; Load C26 into I
$C14    $B923   JP       V0, $923        ; Jump to V0 + 923
$C16    $E3E1   UNKNOWN  $E3E1           ; Unknown Exxx instruction
$C18    $43C0   SNE      V3, #C0         ; Skip if V3 != 192
$C1A    $497F   SNE      V9, #7F         ; Skip if V9 != 127
$C1C    $51D7   UNKNOWN  $51D7           ; Unknown 5xxx instruction
$C1E    $C2FA   RND      V2, #FA         ; V2 = random & FA
$C20    $CA35   RND      VA, #35         ; VA = random & 35
$C22    $513C   UNKNOWN  $513C           ; Unknown 5xxx instruction
$C24    $6D14   LD       VD, #14         ; Load 20 into VD
$C26    $4C34   SNE      VC, #34         ; Skip if VC != 52
$C28    $9074   UNKNOWN  $9074           ; Unknown 9xxx instruction
$C2A    $DB14   DRW      VB, V1, #4      ; Draw 4-byte sprite at VB, V1
$C2C    $296B   CALL     $96B            ; Call subroutine at 96B
$C2E    $9160   SNE      V1, V6          ; Skip if V1 != V6
$C30    $B1CD   JP       V0, $1CD        ; Jump to V0 + 1CD
$C32    $233F   CALL     $33F            ; Call subroutine at 33F
$C34    $88F7   SUBN     V8, VF          ; V8 = VF - V8, VF = !borrow
$C36    $2B42   CALL     $B42            ; Call subroutine at B42
$C38    $9D77   UNKNOWN  $9D77           ; Unknown 9xxx instruction
$C3A    $2DD4   CALL     $DD4            ; Call subroutine at DD4
$C3C    $D881   DRW      V8, V8, #1      ; Draw 1-byte sprite at V8, V8
$C3E    $32AB   SE       V2, #AB         ; Skip if V2 == 171
$C40    $F658   UNKNOWN  F658            ; Unknown Fxxx instruction
$C42    $5A18   UNKNOWN  $5A18           ; Unknown 5xxx instruction
$C44    $F336   UNKNOWN  F336            ; Unknown Fxxx instruction
$C46    $B95C   JP       V0, $95C        ; Jump to V0 + 95C
$C48    $133B   JP       $33B            ; Jump to 33B
$C4A    $C1A2   RND      V1, #A2         ; V1 = random & A2
$C4C    $DA46   DRW      VA, V4, #6      ; Draw 6-byte sprite at VA, V4
$C4E    $FEF1   UNKNOWN  FEF1            ; Unknown Fxxx instruction
$C50    $2440   CALL     $440            ; Call subroutine at 440
$C52    $0209   SYS      $209            ; System call to 209
$C54    $1CB8   JP       $CB8            ; Jump to CB8
$C56    $9659   UNKNOWN  $9659           ; Unknown 9xxx instruction
$C58    $28A0   CALL     $8A0            ; Call subroutine at 8A0
$C5A    $3296   SE       V2, #96         ; Skip if V2 == 150
$C5C    $272D   CALL     $72D            ; Call subroutine at 72D
$C5E    $24EF   CALL     $4EF            ; Call subroutine at 4EF
$C60    $BEB4   JP       V0, $EB4        ; Jump to V0 + EB4
$C62    $0B10   SYS      $B10            ; System call to B10
$C64    $16B7   JP       $6B7            ; Jump to 6B7
$C66    $5AA6   UNKNOWN  $5AA6           ; Unknown 5xxx instruction
$C68    $E344   UNKNOWN  $E344           ; Unknown Exxx instruction
$C6A    $229B   CALL     $29B            ; Call subroutine at 29B
$C6C    $4933   SNE      V9, #33         ; Skip if V9 != 51
$C6E    $E277   UNKNOWN  $E277           ; Unknown Exxx instruction
$C70    $ABD7   LD       I, $BD7         ; Load BD7 into I
$C72    $0173   SYS      $173            ; System call to 173
$C74    $EAF2   UNKNOWN  $EAF2           ; Unknown Exxx instruction
$C76    $703E   ADD      V0, #3E         ; Add 62 to V0
$C78    $814B   UNKNOWN  814B            ; Unknown 8xxx instruction
$C7A    $C4D2   RND      V4, #D2         ; V4 = random & D2
$C7C    $F221   UNKNOWN  F221            ; Unknown Fxxx instruction
$C7E    $CFF7   RND      VF, #F7         ; VF = random & F7
$C80    $1DAA   JP       $DAA            ; Jump to DAA
$C82    $1AC1   JP       $AC1            ; Jump to AC1
$C84    $5E35   UNKNOWN  $5E35           ; Unknown 5xxx instruction
$C86    $CCB8   RND      VC, #B8         ; VC = random & B8
$C88    $96C8   UNKNOWN  $96C8           ; Unknown 9xxx instruction
$C8A    $49A1   SNE      V9, #A1         ; Skip if V9 != 161
$C8C    $781C   ADD      V8, #1C         ; Add 28 to V8
$C8E    $B242   JP       V0, $242        ; Jump to V0 + 242
$C90    $CE88   RND      VE, #88         ; VE = random & 88
$C92    $8C53   XOR      VC, V5          ; VC ^= V5
$C94    $BB35   JP       V0, $B35        ; Jump to V0 + B35
$C96    $40F4   SNE      V0, #F4         ; Skip if V0 != 244
$C98    $129C   JP       $29C            ; Jump to 29C
$C9A    $C70C   RND      V7, #0C         ; V7 = random & 0C
$C9C    $533F   UNKNOWN  $533F           ; Unknown 5xxx instruction
$C9E    $B561   JP       V0, $561        ; Jump to V0 + 561
$CA0    $DB06   DRW      VB, V0, #6      ; Draw 6-byte sprite at VB, V0
$CA2    $A392   LD       I, $392         ; Load 392 into I
$CA4    $33AC   SE       V3, #AC         ; Skip if V3 == 172
$CA6    $089F   SYS      $89F            ; System call to 89F
$CA8    $8EAC   UNKNOWN  8EAC            ; Unknown 8xxx instruction
$CAA    $4FB1   SNE      VF, #B1         ; Skip if VF != 177
$CAC    $78E6   ADD      V8, #E6         ; Add 230 to V8
$CAE    $CC3C   RND      VC, #3C         ; VC = random & 3C
$CB0    $F284   UNKNOWN  F284            ; Unknown Fxxx instruction
$CB2    $B8CC   JP       V0, $8CC        ; Jump to V0 + 8CC
$CB4    $ED4F   UNKNOWN  $ED4F           ; Unknown Exxx instruction
$CB6    $E53B   UNKNOWN  $E53B           ; Unknown Exxx instruction
$CB8    $7E58   ADD      VE, #58         ; Add 88 to VE
$CBA    $EDDC   UNKNOWN  $EDDC           ; Unknown Exxx instruction
$CBC    $5AA3   UNKNOWN  $5AA3           ; Unknown 5xxx instruction
$CBE    $63B4   LD       V3, #B4         ; Load 180 into V3
$CC0    $AEC8   LD       I, $EC8         ; Load EC8 into I
$CC2    $DB91   DRW      VB, V9, #1      ; Draw 1-byte sprite at VB, V9
$CC4    $0A67   SYS      $A67            ; System call to A67
$CC6    $2AA8   CALL     $AA8            ; Call subroutine at AA8
$CC8    $FE9D   UNKNOWN  FE9D            ; Unknown Fxxx instruction
$CCA    $EB2D   UNKNOWN  $EB2D           ; Unknown Exxx instruction
$CCC    $D58B   DRW      V5, V8, #B      ; Draw 11-byte sprite at V5, V8
$CCE    $37F8   SE       V7, #F8         ; Skip if V7 == 248
$CD0    $A0E0   LD       I, $0E0         ; Load 0E0 into I
$CD2    $CB18   RND      VB, #18         ; VB = random & 18
$CD4    $CAF9   RND      VA, #F9         ; VA = random & F9
$CD6    $2D0F   CALL     $D0F            ; Call subroutine at D0F
$CD8    $60B0   LD       V0, #B0         ; Load 176 into V0
$CDA    $F777   UNKNOWN  F777            ; Unknown Fxxx instruction
$CDC    $5275   UNKNOWN  $5275           ; Unknown 5xxx instruction
$CDE    $7284   ADD      V2, #84         ; Add 132 to V2
$CE0    $02AF   SYS      $2AF            ; System call to 2AF
$CE2    $ED77   UNKNOWN  $ED77           ; Unknown Exxx instruction
$CE4    $7367   ADD      V3, #67         ; Add 103 to V3
$CE6    $545E   UNKNOWN  $545E           ; Unknown 5xxx instruction
$CE8    $174E   JP       $74E            ; Jump to 74E
$CEA    $88E2   AND      V8, VE          ; V8 &= VE
$CEC    $B6BE   JP       V0, $6BE        ; Jump to V0 + 6BE
$CEE    $78C5   ADD      V8, #C5         ; Add 197 to V8
$CF0    $AB25   LD       I, $B25         ; Load B25 into I
$CF2    $D6D5   DRW      V6, VD, #5      ; Draw 5-byte sprite at V6, VD
$CF4    $9FF8   UNKNOWN  $9FF8           ; Unknown 9xxx instruction
$CF6    $0D29   SYS      $D29            ; System call to D29
$CF8    $A2DF   LD       I, $2DF         ; Load 2DF into I
$CFA    $ABEE   LD       I, $BEE         ; Load BEE into I
$CFC    $1A17   JP       $A17            ; Jump to A17
$CFE    $B2A6   JP       V0, $2A6        ; Jump to V0 + 2A6
$D00    $BADE   JP       V0, $ADE        ; Jump to V0 + ADE
$D02    $C68B   RND      V6, #8B         ; V6 = random & 8B
$D04    $018C   SYS      $18C            ; System call to 18C
$D06    $6E32   LD       VE, #32         ; Load 50 into VE
$D08    $DB09   DRW      VB, V0, #9      ; Draw 9-byte sprite at VB, V0
$D0A    $8EF1   OR       VE, VF          ; VE |= VF
$D0C    $19BD   JP       $9BD            ; Jump to 9BD
$D0E    $E504   UNKNOWN  $E504           ; Unknown Exxx instruction
$D10    $841E   SHL      V4              ; V4 <<= 1, VF = MSB
$D12    $59ED   UNKNOWN  $59ED           ; Unknown 5xxx instruction
$D14    $C0CB   RND      V0, #CB         ; V0 = random & CB
$D16    $1F56   JP       $F56            ; Jump to F56
$D18    $3132   SE       V1, #32         ; Skip if V1 == 50
$D1A    $0F4E   SYS      $F4E            ; System call to F4E
$D1C    $0FB1   SYS      $FB1            ; System call to FB1
$D1E    $8B9E   SHL      VB              ; VB <<= 1, VF = MSB
$D20    $6B72   LD       VB, #72         ; Load 114 into VB
$D22    $5884   UNKNOWN  $5884           ; Unknown 5xxx instruction
$D24    $37E9   SE       V7, #E9         ; Skip if V7 == 233
$D26    $2521   CALL     $521            ; Call subroutine at 521
$D28    $86D9   UNKNOWN  86D9            ; Unknown 8xxx instruction
$D2A    $972D   UNKNOWN  $972D           ; Unknown 9xxx instruction
$D2C    $4D41   SNE      VD, #41         ; Skip if VD != 65
$D2E    $EA96   UNKNOWN  $EA96           ; Unknown Exxx instruction
$D30    $E1D8   UNKNOWN  $E1D8           ; Unknown Exxx instruction
$D32    $8394   ADD      V3, V9          ; V3 += V9, VF = carry
$D34    $67ED   LD       V7, #ED         ; Load 237 into V7
$D36    $6A0C   LD       VA, #0C         ; Load 12 into VA
$D38    $3477   SE       V4, #77         ; Skip if V4 == 119
$D3A    $616C   LD       V1, #6C         ; Load 108 into V1
$D3C    $AC5D   LD       I, $C5D         ; Load C5D into I
$D3E    $FFEC   UNKNOWN  FFEC            ; Unknown Fxxx instruction
$D40    $5A9D   UNKNOWN  $5A9D           ; Unknown 5xxx instruction
$D42    $2CD3   CALL     $CD3            ; Call subroutine at CD3
$D44    $62A5   LD       V2, #A5         ; Load 165 into V2
$D46    $F0E8   UNKNOWN  F0E8            ; Unknown Fxxx instruction
$D48    $B631   JP       V0, $631        ; Jump to V0 + 631
$D4A    $C2A4   RND      V2, #A4         ; V2 = random & A4
$D4C    $6A5E   LD       VA, #5E         ; Load 94 into VA
$D4E    $7189   ADD      V1, #89         ; Add 137 to V1
$D50    $98F6   UNKNOWN  $98F6           ; Unknown 9xxx instruction
$D52    $A62A   LD       I, $62A         ; Load 62A into I
$D54    $C782   RND      V7, #82         ; V7 = random & 82
$D56    $D616   DRW      V6, V1, #6      ; Draw 6-byte sprite at V6, V1
$D58    $4A44   SNE      VA, #44         ; Skip if VA != 68
$D5A    $82A6   SHR      V2              ; V2 >>= 1, VF = LSB
$D5C    $B58C   JP       V0, $58C        ; Jump to V0 + 58C
$D5E    $96AF   UNKNOWN  $96AF           ; Unknown 9xxx instruction
$D60    $3474   SE       V4, #74         ; Skip if V4 == 116
$D62    $90ED   UNKNOWN  $90ED           ; Unknown 9xxx instruction
$D64    $1D08   JP       $D08            ; Jump to D08
$D66    $D9D4   DRW      V9, VD, #4      ; Draw 4-byte sprite at V9, VD
$D68    $0E82   SYS      $E82            ; System call to E82
$D6A    $3A73   SE       VA, #73         ; Skip if VA == 115
$D6C    $FE39   UNKNOWN  FE39            ; Unknown Fxxx instruction
$D6E    $16F3   JP       $6F3            ; Jump to 6F3
$D70    $37F7   SE       V7, #F7         ; Skip if V7 == 247
$D72    $AE7A   LD       I, $E7A         ; Load E7A into I
$D74    $11DD   JP       $1DD            ; Jump to 1DD
$D76    $F2BD   UNKNOWN  F2BD            ; Unknown Fxxx instruction
$D78    $B7A0   JP       V0, $7A0        ; Jump to V0 + 7A0
$D7A    $A931   LD       I, $931         ; Load 931 into I
$D7C    $ED23   UNKNOWN  $ED23           ; Unknown Exxx instruction
$D7E    $D8EE   DRW      V8, VE, #E      ; Draw 14-byte sprite at V8, VE
$D80    $C908   RND      V9, #08         ; V9 = random & 08
$D82    $68D8   LD       V8, #D8         ; Load 216 into V8
$D84    $E445   UNKNOWN  $E445           ; Unknown Exxx instruction
$D86    $0BD0   SYS      $BD0            ; System call to BD0
$D88    $49B2   SNE      V9, #B2         ; Skip if V9 != 178
$D8A    $E351   UNKNOWN  $E351           ; Unknown Exxx instruction
$D8C    $2EC4   CALL     $EC4            ; Call subroutine at EC4
$D8E    $F6CF   UNKNOWN  F6CF            ; Unknown Fxxx instruction
$D90    $C7B9   RND      V7, #B9         ; V7 = random & B9
$D92    $8040   LD       V0, V4          ; V0 = V4
$D94    $785A   ADD      V8, #5A         ; Add 90 to V8
$D96    $7E06   ADD      VE, #06         ; Add 6 to VE
$D98    $A66D   LD       I, $66D         ; Load 66D into I
$D9A    $AD2F   LD       I, $D2F         ; Load D2F into I
$D9C    $3944   SE       V9, #44         ; Skip if V9 == 68
$D9E    $5EC8   UNKNOWN  $5EC8           ; Unknown 5xxx instruction
$DA0    $6609   LD       V6, #09         ; Load 9 into V6
$DA2    $2C06   CALL     $C06            ; Call subroutine at C06
$DA4    $FA6A   UNKNOWN  FA6A            ; Unknown Fxxx instruction
$DA6    $5265   UNKNOWN  $5265           ; Unknown 5xxx instruction
$DA8    $460A   SNE      V6, #0A         ; Skip if V6 != 10
$DAA    $9BCD   UNKNOWN  $9BCD           ; Unknown 9xxx instruction
$DAC    $BF00   JP       V0, $F00        ; Jump to V0 + F00
$DAE    $E970   UNKNOWN  $E970           ; Unknown Exxx instruction
$DB0    $49DE   SNE      V9, #DE         ; Skip if V9 != 222
$DB2    $75A9   ADD      V5, #A9         ; Add 169 to V5
$DB4    $4565   SNE      V5, #65         ; Skip if V5 != 101
$DB6    $34CE   SE       V4, #CE         ; Skip if V4 == 206
$DB8    $682D   LD       V8, #2D         ; Load 45 into V8
$DBA    $4145   SNE      V1, #45         ; Skip if V1 != 69
$DBC    $3553   SE       V5, #53         ; Skip if V5 == 83
$DBE    $09E1   SYS      $9E1            ; System call to 9E1
$DC0    $D246   DRW      V2, V4, #6      ; Draw 6-byte sprite at V2, V4
$DC2    $FDBF   UNKNOWN  FDBF            ; Unknown Fxxx instruction
$DC4    $448A   SNE      V4, #8A         ; Skip if V4 != 138
$DC6    $4E2E   SNE      VE, #2E         ; Skip if VE != 46
$DC8    $4353   SNE      V3, #53         ; Skip if V3 != 83
$DCA    $F8A4   UNKNOWN  F8A4            ; Unknown Fxxx instruction
$DCC    $5BB6   UNKNOWN  $5BB6           ; Unknown 5xxx instruction
$DCE    $7C75   ADD      VC, #75         ; Add 117 to VC
$DD0    $E42D   UNKNOWN  $E42D           ; Unknown Exxx instruction
$DD2    $A743   LD       I, $743         ; Load 743 into I
$DD4    $9EF3   UNKNOWN  $9EF3           ; Unknown 9xxx instruction
$DD6    $5757   UNKNOWN  $5757           ; Unknown 5xxx instruction
$DD8    $540E   UNKNOWN  $540E           ; Unknown 5xxx instruction
$DDA    $29DE   CALL     $9DE            ; Call subroutine at 9DE
$DDC    $42FB   SNE      V2, #FB         ; Skip if V2 != 251
$DDE    $2C82   CALL     $C82            ; Call subroutine at C82
$DE0    $EA59   UNKNOWN  $EA59           ; Unknown Exxx instruction
$DE2    $8508   UNKNOWN  8508            ; Unknown 8xxx instruction
$DE4    $8995   SUB      V9, V9          ; V9 -= V9, VF = !borrow
$DE6    $51DB   UNKNOWN  $51DB           ; Unknown 5xxx instruction
$DE8    $148E   JP       $48E            ; Jump to 48E
$DEA    $6B2E   LD       VB, #2E         ; Load 46 into VB
$DEC    $F3BE   UNKNOWN  F3BE            ; Unknown Fxxx instruction
$DEE    $5A78   UNKNOWN  $5A78           ; Unknown 5xxx instruction
$DF0    $7FE0   ADD      VF, #E0         ; Add 224 to VF
$DF2    $5DBB   UNKNOWN  $5DBB           ; Unknown 5xxx instruction
$DF4    $2518   CALL     $518            ; Call subroutine at 518
$DF6    $D8B1   DRW      V8, VB, #1      ; Draw 1-byte sprite at V8, VB
$DF8    $7BA8   ADD      VB, #A8         ; Add 168 to VB
$DFA    $8A6D   UNKNOWN  8A6D            ; Unknown 8xxx instruction
$DFC    $BA42   JP       V0, $A42        ; Jump to V0 + A42
$DFE    $8F00   LD       VF, V0          ; VF = V0
$E00    $807E   SHL      V0              ; V0 <<= 1, VF = MSB
$E02    $334E   SE       V3, #4E         ; Skip if V3 == 78
$E04    $FDEC   UNKNOWN  FDEC            ; Unknown Fxxx instruction
$E06    $5394   UNKNOWN  $5394           ; Unknown 5xxx instruction
$E08    $86C5   SUB      V6, VC          ; V6 -= VC, VF = !borrow
$E0A    $61FF   LD       V1, #FF         ; Load 255 into V1
$E0C    $F30D   UNKNOWN  F30D            ; Unknown Fxxx instruction
$E0E    $B78C   JP       V0, $78C        ; Jump to V0 + 78C
$E10    $A3D0   LD       I, $3D0         ; Load 3D0 into I
$E12    $3095   SE       V0, #95         ; Skip if V0 == 149
$E14    $F13B   UNKNOWN  F13B            ; Unknown Fxxx instruction
$E16    $D3C9   DRW      V3, VC, #9      ; Draw 9-byte sprite at V3, VC
$E18    $E30B   UNKNOWN  $E30B           ; Unknown Exxx instruction
$E1A    $DCF5   DRW      VC, VF, #5      ; Draw 5-byte sprite at VC, VF
$E1C    $4C6A   SNE      VC, #6A         ; Skip if VC != 106
$E1E    $4219   SNE      V2, #19         ; Skip if V2 != 25
$E20    $2F17   CALL     $F17            ; Call subroutine at F17
$E22    $71D0   ADD      V1, #D0         ; Add 208 to V1
$E24    $03C1   SYS      $3C1            ; System call to 3C1
$E26    $94E2   UNKNOWN  $94E2           ; Unknown 9xxx instruction
$E28    $1EDC   JP       $EDC            ; Jump to EDC
$E2A    $FD80   UNKNOWN  FD80            ; Unknown Fxxx instruction
$E2C    $722C   ADD      V2, #2C         ; Add 44 to V2
$E2E    $2129   CALL     $129            ; Call subroutine at 129
$E30    $DDA0   DRW      VD, VA, #0      ; Draw 0-byte sprite at VD, VA
$E32    $8A8F   UNKNOWN  8A8F            ; Unknown 8xxx instruction
$E34    $7439   ADD      V4, #39         ; Add 57 to V4
$E36    $DFC4   DRW      VF, VC, #4      ; Draw 4-byte sprite at VF, VC
$E38    $FDF7   UNKNOWN  FDF7            ; Unknown Fxxx instruction
$E3A    $1353   JP       $353            ; Jump to 353
$E3C    $1F36   JP       $F36            ; Jump to F36
$E3E    $8226   SHR      V2              ; V2 >>= 1, VF = LSB
$E40    $0B7F   SYS      $B7F            ; System call to B7F
$E42    $947F   UNKNOWN  $947F           ; Unknown 9xxx instruction
$E44    $A8CC   LD       I, $8CC         ; Load 8CC into I
$E46    $2D2B   CALL     $D2B            ; Call subroutine at D2B
$E48    $7ABF   ADD      VA, #BF         ; Add 191 to VA
$E4A    $9427   UNKNOWN  $9427           ; Unknown 9xxx instruction
$E4C    $0F2B   SYS      $F2B            ; System call to F2B
$E4E    $4B45   SNE      VB, #45         ; Skip if VB != 69
$E50    $91E4   UNKNOWN  $91E4           ; Unknown 9xxx instruction
$E52    $6777   LD       V7, #77         ; Load 119 into V7
$E54    $C1AC   RND      V1, #AC         ; V1 = random & AC
$E56    $FA1A   UNKNOWN  FA1A            ; Unknown Fxxx instruction
$E58    $819B   UNKNOWN  819B            ; Unknown 8xxx instruction
$E5A    $4619   SNE      V6, #19         ; Skip if V6 != 25
$E5C    $C78E   RND      V7, #8E         ; V7 = random & 8E
$E5E    $A05F   LD       I, $05F         ; Load 05F into I
$E60    $FE3B   UNKNOWN  FE3B            ; Unknown Fxxx instruction
$E62    $313C   SE       V1, #3C         ; Skip if V1 == 60
$E64    $6043   LD       V0, #43         ; Load 67 into V0
$E66    $6E82   LD       VE, #82         ; Load 130 into VE
$E68    $D8FD   DRW      V8, VF, #D      ; Draw 13-byte sprite at V8, VF
$E6A    $B95D   JP       V0, $95D        ; Jump to V0 + 95D
$E6C    $6A75   LD       VA, #75         ; Load 117 into VA
$E6E    $65E7   LD       V5, #E7         ; Load 231 into V5
$E70    $5FCC   UNKNOWN  $5FCC           ; Unknown 5xxx instruction
$E72    $27FE   CALL     $7FE            ; Call subroutine at 7FE
$E74    $A952   LD       I, $952         ; Load 952 into I
$E76    $32DE   SE       V2, #DE         ; Skip if V2 == 222
$E78    $586A   UNKNOWN  $586A           ; Unknown 5xxx instruction
$E7A    $A4F9   LD       I, $4F9         ; Load 4F9 into I
$E7C    $C570   RND      V5, #70         ; V5 = random & 70
$E7E    $DDAF   DRW      VD, VA, #F      ; Draw 15-byte sprite at VD, VA
$E80    $9DAA   UNKNOWN  $9DAA           ; Unknown 9xxx instruction
$E82    $5AF8   UNKNOWN  $5AF8           ; Unknown 5xxx instruction
$E84    $A312   LD       I, $312         ; Load 312 into I
$E86    $410D   SNE      V1, #0D         ; Skip if V1 != 13
$E88    $1571   JP       $571            ; Jump to 571
$E8A    $2052   CALL     $052            ; Call subroutine at 052
$E8C    $67C1   LD       V7, #C1         ; Load 193 into V7
$E8E    $EF16   UNKNOWN  $EF16           ; Unknown Exxx instruction
$E90    $47F9   SNE      V7, #F9         ; Skip if V7 != 249
$E92    $891A   UNKNOWN  891A            ; Unknown 8xxx instruction
$E94    $F4C2   UNKNOWN  F4C2            ; Unknown Fxxx instruction
$E96    $EB95   UNKNOWN  $EB95           ; Unknown Exxx instruction
$E98    $D859   DRW      V8, V5, #9      ; Draw 9-byte sprite at V8, V5
$E9A    $B604   JP       V0, $604        ; Jump to V0 + 604
$E9C    $2FCE   CALL     $FCE            ; Call subroutine at FCE
$E9E    $73AF   ADD      V3, #AF         ; Add 175 to V3
$EA0    $FFA1   UNKNOWN  FFA1            ; Unknown Fxxx instruction
$EA2    $DC33   DRW      VC, V3, #3      ; Draw 3-byte sprite at VC, V3
$EA4    $031E   SYS      $31E            ; System call to 31E
$EA6    $58D7   UNKNOWN  $58D7           ; Unknown 5xxx instruction
$EA8    $AA29   LD       I, $A29         ; Load A29 into I
$EAA    $C3CC   RND      V3, #CC         ; V3 = random & CC
$EAC    $AD6F   LD       I, $D6F         ; Load D6F into I
$EAE    $8235   SUB      V2, V3          ; V2 -= V3, VF = !borrow
$EB0    $49A3   SNE      V9, #A3         ; Skip if V9 != 163
$EB2    $519F   UNKNOWN  $519F           ; Unknown 5xxx instruction
$EB4    $4B4A   SNE      VB, #4A         ; Skip if VB != 74
$EB6    $C03C   RND      V0, #3C         ; V0 = random & 3C
$EB8    $69F8   LD       V9, #F8         ; Load 248 into V9
$EBA    $5236   UNKNOWN  $5236           ; Unknown 5xxx instruction
$EBC    $8D31   OR       VD, V3          ; VD |= V3
$EBE    $FEA5   UNKNOWN  FEA5            ; Unknown Fxxx instruction
$EC0    $8D72   AND      VD, V7          ; VD &= V7
$EC2    $CE5A   RND      VE, #5A         ; VE = random & 5A
$EC4    $674A   LD       V7, #4A         ; Load 74 into V7
$EC6    $024B   SYS      $24B            ; System call to 24B
$EC8    $EFCE   UNKNOWN  $EFCE           ; Unknown Exxx instruction
$ECA    $BBEA   JP       V0, $BEA        ; Jump to V0 + BEA
$ECC    $4C5D   SNE      VC, #5D         ; Skip if VC != 93
$ECE    $08A4   SYS      $8A4            ; System call to 8A4
$ED0    $918F   UNKNOWN  $918F           ; Unknown 9xxx instruction
$ED2    $AB3B   LD       I, $B3B         ; Load B3B into I
$ED4    $C2B1   RND      V2, #B1         ; V2 = random & B1
$ED6    $AC00   LD       I, $C00         ; Load C00 into I
$ED8    $19CB   JP       $9CB            ; Jump to 9CB
$EDA    $8DE4   ADD      VD, VE          ; VD += VE, VF = carry
$EDC    $41F7   SNE      V1, #F7         ; Skip if V1 != 247
$EDE    $33B7   SE       V3, #B7         ; Skip if V3 == 183
$EE0    $C391   RND      V3, #91         ; V3 = random & 91
$EE2    $6D9B   LD       VD, #9B         ; Load 155 into VD
$EE4    $512C   UNKNOWN  $512C           ; Unknown 5xxx instruction
$EE6    $EEF4   UNKNOWN  $EEF4           ; Unknown Exxx instruction
$EE8    $51E3   UNKNOWN  $51E3           ; Unknown 5xxx instruction
$EEA    $2150   CALL     $150            ; Call subroutine at 150
$EEC    $D0C6   DRW      V0, VC, #6      ; Draw 6-byte sprite at V0, VC
$EEE    $1F20   JP       $F20            ; Jump to F20
$EF0    $BD79   JP       V0, $D79        ; Jump to V0 + D79
$EF2    $7BFB   ADD      VB, #FB         ; Add 251 to VB
$EF4    $808B   UNKNOWN  808B            ; Unknown 8xxx instruction
$EF6    $FAFD   UNKNOWN  FAFD            ; Unknown Fxxx instruction
$EF8    $2078   CALL     $078            ; Call subroutine at 078
$EFA    $CF56   RND      VF, #56         ; VF = random & 56
$EFC    $7914   ADD      V9, #14         ; Add 20 to V9
$EFE    $4FD6   SNE      VF, #D6         ; Skip if VF != 214
$F00    $9D70   SNE      VD, V7          ; Skip if VD != V7
$F02    $9F42   UNKNOWN  $9F42           ; Unknown 9xxx instruction
$F04    $A2F9   LD       I, $2F9         ; Load 2F9 into I
$F06    $3C53   SE       VC, #53         ; Skip if VC == 83
$F08    $D989   DRW      V9, V8, #9      ; Draw 9-byte sprite at V9, V8
$F0A    $08C2   SYS      $8C2            ; System call to 8C2
$F0C    $5B6A   UNKNOWN  $5B6A           ; Unknown 5xxx instruction
$F0E    $A826   LD       I, $826         ; Load 826 into I
$F10    $91FD   UNKNOWN  $91FD           ; Unknown 9xxx instruction
$F12    $D90F   DRW      V9, V0, #F      ; Draw 15-byte sprite at V9, V0
$F14    $7DDB   ADD      VD, #DB         ; Add 219 to VD
$F16    $6204   LD       V2, #04         ; Load 4 into V2
$F18    $257C   CALL     $57C            ; Call subroutine at 57C
$F1A    $988F   UNKNOWN  $988F           ; Unknown 9xxx instruction
$F1C    $48A1   SNE      V8, #A1         ; Skip if V8 != 161
$F1E    $E68D   UNKNOWN  $E68D           ; Unknown Exxx instruction
$F20    $21C9   CALL     $1C9            ; Call subroutine at 1C9
$F22    $DE43   DRW      VE, V4, #3      ; Draw 3-byte sprite at VE, V4
$F24    $82F6   SHR      V2              ; V2 >>= 1, VF = LSB
$F26    $4D2B   SNE      VD, #2B         ; Skip if VD != 43
$F28    $C823   RND      V8, #23         ; V8 = random & 23
$F2A    $65E8   LD       V5, #E8         ; Load 232 into V5
$F2C    $686C   LD       V8, #6C         ; Load 108 into V8
$F2E    $D43F   DRW      V4, V3, #F      ; Draw 15-byte sprite at V4, V3
$F30    $71C3   ADD      V1, #C3         ; Add 195 to V1
$F32    $027B   SYS      $27B            ; System call to 27B
$F34    $2065   CALL     $065            ; Call subroutine at 065
$F36    $4A45   SNE      VA, #45         ; Skip if VA != 69
$F38    $26DD   CALL     $6DD            ; Call subroutine at 6DD
$F3A    $E828   UNKNOWN  $E828           ; Unknown Exxx instruction
$F3C    $E8FA   UNKNOWN  $E8FA           ; Unknown Exxx instruction
$F3E    $877D   UNKNOWN  877D            ; Unknown 8xxx instruction
$F40    $90C3   UNKNOWN  $90C3           ; Unknown 9xxx instruction
$F42    $BA4F   JP       V0, $A4F        ; Jump to V0 + A4F
$F44    $2E85   CALL     $E85            ; Call subroutine at E85
$F46    $97A6   UNKNOWN  $97A6           ; Unknown 9xxx instruction
$F48    $D887   DRW      V8, V8, #7      ; Draw 7-byte sprite at V8, V8
$F4A    $B893   JP       V0, $893        ; Jump to V0 + 893
$F4C    $3752   SE       V7, #52         ; Skip if V7 == 82
$F4E    $AA62   LD       I, $A62         ; Load A62 into I
$F50    $D9C0   DRW      V9, VC, #0      ; Draw 0-byte sprite at V9, VC
$F52    $8772   AND      V7, V7          ; V7 &= V7
$F54    $BBF7   JP       V0, $BF7        ; Jump to V0 + BF7
$F56    $FA13   UNKNOWN  FA13            ; Unknown Fxxx instruction
$F58    $D671   DRW      V6, V7, #1      ; Draw 1-byte sprite at V6, V7
$F5A    $D495   DRW      V4, V9, #5      ; Draw 5-byte sprite at V4, V9
$F5C    $8992   AND      V9, V9          ; V9 &= V9
$F5E    $970F   UNKNOWN  $970F           ; Unknown 9xxx instruction
$F60    $600F   LD       V0, #0F         ; Load 15 into V0
$F62    $0846   SYS      $846            ; System call to 846
$F64    $17DB   JP       $7DB            ; Jump to 7DB
$F66    $666D   LD       V6, #6D         ; Load 109 into V6
$F68    $6143   LD       V1, #43         ; Load 67 into V1
$F6A    $54F7   UNKNOWN  $54F7           ; Unknown 5xxx instruction
$F6C    $C834   RND      V8, #34         ; V8 = random & 34
$F6E    $4AEC   SNE      VA, #EC         ; Skip if VA != 236
$F70    $099F   SYS      $99F            ; System call to 99F
$F72    $E628   UNKNOWN  $E628           ; Unknown Exxx instruction
$F74    $C659   RND      V6, #59         ; V6 = random & 59
$F76    $B619   JP       V0, $619        ; Jump to V0 + 619
$F78    $03CF   SYS      $3CF            ; System call to 3CF
$F7A    $99BF   UNKNOWN  $99BF           ; Unknown 9xxx instruction
$F7C    $68F9   LD       V8, #F9         ; Load 249 into V8
$F7E    $E9C3   UNKNOWN  $E9C3           ; Unknown Exxx instruction
$F80    $A6DC   LD       I, $6DC         ; Load 6DC into I
$F82    $D808   DRW      V8, V0, #8      ; Draw 8-byte sprite at V8, V0
$F84    $0BE9   SYS      $BE9            ; System call to BE9
$F86    $E984   UNKNOWN  $E984           ; Unknown Exxx instruction
$F88    $5607   UNKNOWN  $5607           ; Unknown 5xxx instruction
$F8A    $1C02   JP       $C02            ; Jump to C02
$F8C    $ADA1   LD       I, $DA1         ; Load DA1 into I
$F8E    $BE6F   JP       V0, $E6F        ; Jump to V0 + E6F
$F90    $C671   RND      V6, #71         ; V6 = random & 71
$F92    $E16A   UNKNOWN  $E16A           ; Unknown Exxx instruction
$F94    $F435   UNKNOWN  F435            ; Unknown Fxxx instruction
$F96    $D777   DRW      V7, V7, #7      ; Draw 7-byte sprite at V7, V7
$F98    $E761   UNKNOWN  $E761           ; Unknown Exxx instruction
$F9A    $6FC7   LD       VF, #C7         ; Load 199 into VF
$F9C    $0F45   SYS      $F45            ; System call to F45
$F9E    $B898   JP       V0, $898        ; Jump to V0 + 898
$FA0    $4895   SNE      V8, #95         ; Skip if V8 != 149
$FA2    $D7B2   DRW      V7, VB, #2      ; Draw 2-byte sprite at V7, VB
$FA4    $66CB   LD       V6, #CB         ; Load 203 into V6
$FA6    $A286   LD       I, $286         ; Load 286 into I
$FA8    $4A59   SNE      VA, #59         ; Skip if VA != 89
$FAA    $52A9   UNKNOWN  $52A9           ; Unknown 5xxx instruction
$FAC    $C095   RND      V0, #95         ; V0 = random & 95
$FAE    $02C3   SYS      $2C3            ; System call to 2C3
$FB0    $F1C1   UNKNOWN  F1C1            ; Unknown Fxxx instruction
$FB2    $67F2   LD       V7, #F2         ; Load 242 into V7
$FB4    $62DD   LD       V2, #DD         ; Load 221 into V2
$FB6    $69DB   LD       V9, #DB         ; Load 219 into V9
$FB8    $3818   SE       V8, #18         ; Skip if V8 == 24
$FBA    $95ED   UNKNOWN  $95ED           ; Unknown 9xxx instruction
$FBC    $07F2   SYS      $7F2            ; System call to 7F2
$FBE    $AED9   LD       I, $ED9         ; Load ED9 into I
$FC0    $82E0   LD       V2, VE          ; V2 = VE
$FC2    $2C5E   CALL     $C5E            ; Call subroutine at C5E
$FC4    $0803   SYS      $803            ; System call to 803
$FC6    $6015   LD       V0, #15         ; Load 21 into V0
$FC8    $EE6C   UNKNOWN  $EE6C           ; Unknown Exxx instruction
$FCA    $1223   JP       $223            ; Jump to 223
$FCC    $E331   UNKNOWN  $E331           ; Unknown Exxx instruction
$FCE    $9DF0   SNE      VD, VF          ; Skip if VD != VF
$FD0    $5525   UNKNOWN  $5525           ; Unknown 5xxx instruction
$FD2    $25B4   CALL     $5B4            ; Call subroutine at 5B4
$FD4    $4040   SNE      V0, #40         ; Skip if V0 != 64
$FD6    $C13C   RND      V1, #3C         ; V1 = random & 3C
$FD8    $5D6C   UNKNOWN  $5D6C           ; Unknown 5xxx instruction
$FDA    $4D04   SNE      VD, #04         ; Skip if VD != 4
$FDC    $769F   ADD      V6, #9F         ; Add 159 to V6
$FDE    $03FC   SYS      $3FC            ; System call to 3FC
$FE0    $4832   SNE      V8, #32         ; Skip if V8 != 50
$FE2    $C835   RND      V8, #35         ; V8 = random & 35
$FE4    $49CD   SNE      V9, #CD         ; Skip if V9 != 205
$FE6    $94E2   UNKNOWN  $94E2           ; Unknown 9xxx instruction
$FE8    $F397   UNKNOWN  F397            ; Unknown Fxxx instruction
$FEA    $01CF   SYS      $1CF            ; System call to 1CF
$FEC    $3F76   SE       VF, #76         ; Skip if VF == 118
$FEE    $3C33   SE       VC, #33         ; Skip if VC == 51
$FF0    $3276   SE       V2, #76         ; Skip if V2 == 118
$FF2    $429C   SNE      V2, #9C         ; Skip if V2 != 156
$FF4    $483B   SNE      V8, #3B         ; Skip if V8 != 59
$FF6    $3925   SE       V9, #25         ; Skip if V9 == 37
$FF8    $7A7A   ADD      VA, #7A         ; Add 122 to VA
$FFA    $3A3C   SE       VA, #3C         ; Skip if VA == 60
$FFC    $4FB1   SNE      VF, #B1         ; Skip if VF != 177
$FFE    $EC2A   UNKNOWN  $EC2A           ; Unknown Exxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 474 (26.5%)
  LD      : 278 (15.5%)
  JP      : 217 (12.1%)
  SNE     : 130 ( 7.3%)
  RND     : 116 ( 6.5%)
  DRW     : 115 ( 6.4%)
  CALL    : 104 ( 5.8%)
  SYS     : 103 ( 5.7%)
  SE      : 100 ( 5.6%)
  ADD     :  97 ( 5.4%)
  SUB     :  15 ( 0.8%)
  SUBN    :   9 ( 0.5%)
  SHL     :   9 ( 0.5%)
  AND     :   7 ( 0.4%)
  XOR     :   7 ( 0.4%)
  SHR     :   6 ( 0.3%)
  OR      :   5 ( 0.3%)

Memory Operations: 375 (20.9%)
Arithmetic Operations: 140 (7.8%)
