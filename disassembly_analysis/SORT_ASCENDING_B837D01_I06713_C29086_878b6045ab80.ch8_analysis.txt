
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B837D01_I06713_C29086_878b6045ab80.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 837
Instance: 6713
Direction: ascending
Final Array: [32, 32, 32, 32, 89, 138, 195, 215]
Operations: R:0 W:4 C:372 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 113
Sort Array References:
  $20E: LD I, $74A ; Load 74A into I
  $236: LD I, $ED8 ; Load ED8 into I
  $308: LD I, $577 ; Load 577 into I
  $314: LD I, $716 ; Load 716 into I
  $31A: LD I, $E71 ; Load E71 into I
  $336: LD I, $E05 ; Load E05 into I
  $36E: LD I, $9ED ; Load 9ED into I
  $386: LD I, $8A8 ; Load 8A8 into I
  $38E: LD I, $013 ; Load 013 into I
  $392: LD I, $C4F ; Load C4F into I
  $3BC: LD I, $B29 ; Load B29 into I
  $3CA: LD I, $A04 ; Load A04 into I
  $3E6: LD I, $C6E ; Load C6E into I
  $3EC: LD I, $88B ; Load 88B into I
  $3FE: LD I, $5E7 ; Load 5E7 into I
  $40A: LD I, $D8C ; Load D8C into I
  $470: LD I, $45C ; Load 45C into I
  $4BA: LD I, $ECE ; Load ECE into I
  $4DE: LD I, $27A ; Load 27A into I
  $4E2: LD I, $420 ; Load 420 into I
  $4EC: LD I, $BD1 ; Load BD1 into I
  $4EE: LD I, $0F6 ; Load 0F6 into I
  $508: LD I, $02B ; Load 02B into I
  $512: LD I, $EA0 ; Load EA0 into I
  $51A: LD I, $62B ; Load 62B into I
  $52E: LD I, $AD7 ; Load AD7 into I
  $538: LD I, $F96 ; Load F96 into I
  $550: LD I, $EE5 ; Load EE5 into I
  $582: LD I, $EB1 ; Load EB1 into I
  $5A0: LD I, $23E ; Load 23E into I
  $5AA: LD I, $C52 ; Load C52 into I
  $5BA: LD I, $6A0 ; Load 6A0 into I
  $5EE: LD I, $575 ; Load 575 into I
  $616: LD I, $D73 ; Load D73 into I
  $672: LD I, $AEF ; Load AEF into I
  $674: LD I, $2EC ; Load 2EC into I
  $67A: LD I, $FAF ; Load FAF into I
  $69E: LD I, $C3A ; Load C3A into I
  $6BE: LD I, $086 ; Load 086 into I
  $6D8: LD I, $400 ; Load 400 into I
  $6F8: LD I, $FC8 ; Load FC8 into I
  $736: LD I, $EF9 ; Load EF9 into I
  $73A: LD I, $AE0 ; Load AE0 into I
  $752: LD I, $F0B ; Load F0B into I
  $7A8: LD I, $BE8 ; Load BE8 into I
  $7C4: LD I, $002 ; Load 002 into I
  $7EC: LD I, $516 ; Load 516 into I
  $7F4: LD I, $598 ; Load 598 into I
  $7F6: LD I, $B33 ; Load B33 into I
  $806: LD I, $012 ; Load 012 into I
  $82A: LD I, $6BE ; Load 6BE into I
  $850: LD I, $41F ; Load 41F into I
  $8B8: LD I, $931 ; Load 931 into I
  $8CE: LD I, $4B0 ; Load 4B0 into I
  $8DA: LD I, $E1D ; Load E1D into I
  $916: LD I, $786 ; Load 786 into I
  $918: LD I, $2D4 ; Load 2D4 into I
  $92C: LD I, $EF8 ; Load EF8 into I
  $92E: LD I, $244 ; Load 244 into I
  $934: LD VB, [I] ; Load V0-VB from I
  $954: LD I, $97D ; Load 97D into I
  $95A: LD I, $635 ; Load 635 into I
  $976: LD I, $52B ; Load 52B into I
  $988: LD I, $246 ; Load 246 into I
  $9A4: LD I, $0F9 ; Load 0F9 into I
  $9AC: LD I, $220 ; Load 220 into I
  $9F2: LD I, $653 ; Load 653 into I
  $A2C: LD I, $255 ; Load 255 into I
  $A34: LD I, $BD4 ; Load BD4 into I
  $A3A: LD I, $3FC ; Load 3FC into I
  $A76: LD I, $A10 ; Load A10 into I
  $A94: LD I, $2A5 ; Load 2A5 into I
  $ABC: LD I, $658 ; Load 658 into I
  $AC0: LD I, $FA8 ; Load FA8 into I
  $AC8: LD I, $A81 ; Load A81 into I
  $AD8: LD I, $8E3 ; Load 8E3 into I
  $ADE: LD I, $51B ; Load 51B into I
  $AF2: LD I, $B4A ; Load B4A into I
  $B12: LD I, $AFE ; Load AFE into I
  $B1E: LD I, $E93 ; Load E93 into I
  $B2E: LD I, $13D ; Load 13D into I
  $B32: LD I, $43B ; Load 43B into I
  $B38: LD I, $4A9 ; Load 4A9 into I
  $B3C: LD I, $51D ; Load 51D into I
  $B6E: LD I, $8AE ; Load 8AE into I
  $B7C: LD I, $275 ; Load 275 into I
  $BC6: LD I, $196 ; Load 196 into I
  $C18: LD I, $35C ; Load 35C into I
  $C1E: LD I, $F6F ; Load F6F into I
  $C5A: LD I, $928 ; Load 928 into I
  $C72: LD I, $9BC ; Load 9BC into I
  $C8A: LD I, $606 ; Load 606 into I
  $CA8: LD I, $108 ; Load 108 into I
  $CD8: LD I, $E76 ; Load E76 into I
  $CE0: LD I, $2D3 ; Load 2D3 into I
  $D48: LD I, $3FB ; Load 3FB into I
  $DA2: LD I, $527 ; Load 527 into I
  $DE6: LD I, $261 ; Load 261 into I
  $DFC: LD I, $7AD ; Load 7AD into I
  $E92: LD I, $3E1 ; Load 3E1 into I
  $EA0: LD I, $73B ; Load 73B into I
  $EA6: LD I, $9F3 ; Load 9F3 into I
  $ED8: LD I, $47D ; Load 47D into I
  $EF2: LD I, $583 ; Load 583 into I
  $F26: LD I, $6B1 ; Load 6B1 into I
  $F38: LD I, $AFA ; Load AFA into I
  $F42: LD I, $1F2 ; Load 1F2 into I
  $F7E: LD I, $3D0 ; Load 3D0 into I
  $F88: LD [I], VB ; Store V0-VB at I
  $F92: LD I, $3DF ; Load 3DF into I
  $FA0: LD I, $0A2 ; Load 0A2 into I
  $FB6: LD I, $F4F ; Load F4F into I
  $FEC: LD I, $761 ; Load 761 into I

CONTROL FLOW ANALYSIS:
Jumps: 216
Calls: 198
Branches: 240
Loops: 115
Loop Structures:
  $3B6 -> $33B (backward jump)
  $3CC -> $1AA (backward jump)
  $414 -> $218 (backward jump)
  $478 -> $285 (backward jump)
  $498 -> $021 (backward jump)
  $566 -> $36C (backward jump)
  $57C -> $410 (backward jump)
  $58C -> $074 (backward jump)
  $594 -> $002 (backward jump)
  $60E -> $582 (backward jump)
  $626 -> $362 (backward jump)
  $66C -> $46F (backward jump)
  $676 -> $5F2 (backward jump)
  $6B6 -> $195 (backward jump)
  $6F4 -> $67F (backward jump)
  $6FE -> $2BF (backward jump)
  $706 -> $6B5 (backward jump)
  $70A -> $4C2 (backward jump)
  $720 -> $3FB (backward jump)
  $72A -> $67F (backward jump)
  $758 -> $3F5 (backward jump)
  $762 -> $325 (backward jump)
  $77A -> $3C8 (backward jump)
  $7B0 -> $418 (backward jump)
  $7B4 -> $5B6 (backward jump)
  $7E2 -> $3B1 (backward jump)
  $830 -> $0E0 (backward jump)
  $83C -> $011 (backward jump)
  $83E -> $495 (backward jump)
  $85A -> $23D (backward jump)
  $87A -> $831 (backward jump)
  $89A -> $6B6 (backward jump)
  $8DE -> $0DC (backward jump)
  $91E -> $2A0 (backward jump)
  $92A -> $8D5 (backward jump)
  $942 -> $67C (backward jump)
  $972 -> $2AA (backward jump)
  $9A2 -> $4E7 (backward jump)
  $9C2 -> $5FE (backward jump)
  $9C4 -> $579 (backward jump)
  $9CC -> $2B8 (backward jump)
  $A04 -> $9EF (backward jump)
  $A08 -> $651 (backward jump)
  $A16 -> $99D (backward jump)
  $A3E -> $45B (backward jump)
  $A54 -> $5D7 (backward jump)
  $A88 -> $8B5 (backward jump)
  $A98 -> $022 (backward jump)
  $AC6 -> $09C (backward jump)
  $B08 -> $60F (backward jump)
  $B3A -> $283 (backward jump)
  $B5C -> $25C (backward jump)
  $B82 -> $1C7 (backward jump)
  $B9C -> $59F (backward jump)
  $BC0 -> $10B (backward jump)
  $BDC -> $963 (backward jump)
  $BF0 -> $B69 (backward jump)
  $BFA -> $84D (backward jump)
  $C06 -> $688 (backward jump)
  $C20 -> $544 (backward jump)
  $C22 -> $93F (backward jump)
  $C2C -> $27C (backward jump)
  $C36 -> $7D1 (backward jump)
  $C3A -> $1BF (backward jump)
  $C54 -> $003 (backward jump)
  $C78 -> $1CF (backward jump)
  $C7C -> $52A (backward jump)
  $C88 -> $315 (backward jump)
  $CD0 -> $99F (backward jump)
  $CD6 -> $723 (backward jump)
  $CF2 -> $95B (backward jump)
  $CF6 -> $4E4 (backward jump)
  $D04 -> $6EC (backward jump)
  $D08 -> $AD6 (backward jump)
  $D12 -> $940 (backward jump)
  $D1A -> $014 (backward jump)
  $D38 -> $6BB (backward jump)
  $D56 -> $9BE (backward jump)
  $D66 -> $CB4 (backward jump)
  $D6C -> $320 (backward jump)
  $D76 -> $8B2 (backward jump)
  $D8E -> $D5F (backward jump)
  $D96 -> $AE2 (backward jump)
  $DE0 -> $768 (backward jump)
  $DEA -> $633 (backward jump)
  $DF4 -> $022 (backward jump)
  $DF6 -> $7F8 (backward jump)
  $E16 -> $BB6 (backward jump)
  $E22 -> $BA5 (backward jump)
  $E26 -> $661 (backward jump)
  $E40 -> $75E (backward jump)
  $E70 -> $A74 (backward jump)
  $E88 -> $05A (backward jump)
  $E94 -> $909 (backward jump)
  $EAA -> $DFB (backward jump)
  $EC8 -> $734 (backward jump)
  $ED4 -> $4F8 (backward jump)
  $EE8 -> $E4B (backward jump)
  $EFA -> $49A (backward jump)
  $EFC -> $419 (backward jump)
  $F20 -> $6D0 (backward jump)
  $F28 -> $BB2 (backward jump)
  $F2E -> $10C (backward jump)
  $F36 -> $8F5 (backward jump)
  $F56 -> $9CB (backward jump)
  $F6C -> $279 (backward jump)
  $F7C -> $B41 (backward jump)
  $F8E -> $A10 (backward jump)
  $F9E -> $2B4 (backward jump)
  $FA6 -> $06D (backward jump)
  $FC6 -> $32E (backward jump)
  $FEA -> $EB3 (backward jump)
  $FEE -> $64A (backward jump)
  $FF0 -> $CA8 (backward jump)
  $FF8 -> $457 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $BD62   JP       V0, $D62        ; Jump to V0 + D62
$202    $7AA0   ADD      VA, #A0         ; Add 160 to VA
$204    $873E   SHL      V7              ; V7 <<= 1, VF = MSB
$206    $4743   SNE      V7, #43         ; Skip if V7 != 67
$208    $C664   RND      V6, #64         ; V6 = random & 64
$20A    $6E54   LD       VE, #54         ; Load 84 into VE
$20C    $7E21   ADD      VE, #21         ; Add 33 to VE
$20E    $A74A   LD       I, $74A         ; Load 74A into I
$210    $F032   UNKNOWN  F032            ; Unknown Fxxx instruction
$212    $F4E8   UNKNOWN  F4E8            ; Unknown Fxxx instruction
$214    $130C   JP       $30C            ; Jump to 30C
$216    $91D5   UNKNOWN  $91D5           ; Unknown 9xxx instruction
$218    $433B   SNE      V3, #3B         ; Skip if V3 != 59
$21A    $BABB   JP       V0, $ABB        ; Jump to V0 + ABB
$21C    $D4C5   DRW      V4, VC, #5      ; Draw 5-byte sprite at V4, VC
$21E    $31D0   SE       V1, #D0         ; Skip if V1 == 208
$220    $7BBA   ADD      VB, #BA         ; Add 186 to VB
$222    $270B   CALL     $70B            ; Call subroutine at 70B
$224    $BDC2   JP       V0, $DC2        ; Jump to V0 + DC2
$226    $91CD   UNKNOWN  $91CD           ; Unknown 9xxx instruction
$228    $178B   JP       $78B            ; Jump to 78B
$22A    $67F3   LD       V7, #F3         ; Load 243 into V7
$22C    $F7E1   UNKNOWN  F7E1            ; Unknown Fxxx instruction
$22E    $1B6C   JP       $B6C            ; Jump to B6C
$230    $434C   SNE      V3, #4C         ; Skip if V3 != 76
$232    $7C41   ADD      VC, #41         ; Add 65 to VC
$234    $BA24   JP       V0, $A24        ; Jump to V0 + A24
$236    $AED8   LD       I, $ED8         ; Load ED8 into I
$238    $29C7   CALL     $9C7            ; Call subroutine at 9C7
$23A    $5923   UNKNOWN  $5923           ; Unknown 5xxx instruction
$23C    $82F7   SUBN     V2, VF          ; V2 = VF - V2, VF = !borrow
$23E    $3BC6   SE       VB, #C6         ; Skip if VB == 198
$240    $799B   ADD      V9, #9B         ; Add 155 to V9
$242    $7A2A   ADD      VA, #2A         ; Add 42 to VA
$244    $42AB   SNE      V2, #AB         ; Skip if V2 != 171
$246    $1612   JP       $612            ; Jump to 612
$248    $77A6   ADD      V7, #A6         ; Add 166 to V7
$24A    $2220   CALL     $220            ; Call subroutine at 220
$24C    $2020   CALL     $020            ; Call subroutine at 020
$24E    $2020   CALL     $020            ; Call subroutine at 020
$250    $2020   CALL     $020            ; Call subroutine at 020
$252    $2020   CALL     $020            ; Call subroutine at 020
$254    $2020   CALL     $020            ; Call subroutine at 020
$256    $2020   CALL     $020            ; Call subroutine at 020
$258    $2020   CALL     $020            ; Call subroutine at 020
$25A    $2020   CALL     $020            ; Call subroutine at 020
$25C    $2020   CALL     $020            ; Call subroutine at 020
$25E    $2020   CALL     $020            ; Call subroutine at 020
$260    $2020   CALL     $020            ; Call subroutine at 020
$262    $2020   CALL     $020            ; Call subroutine at 020
$264    $2020   CALL     $020            ; Call subroutine at 020
$266    $2020   CALL     $020            ; Call subroutine at 020
$268    $2020   CALL     $020            ; Call subroutine at 020
$26A    $2020   CALL     $020            ; Call subroutine at 020
$26C    $2020   CALL     $020            ; Call subroutine at 020
$26E    $2020   CALL     $020            ; Call subroutine at 020
$270    $2020   CALL     $020            ; Call subroutine at 020
$272    $2020   CALL     $020            ; Call subroutine at 020
$274    $2020   CALL     $020            ; Call subroutine at 020
$276    $2020   CALL     $020            ; Call subroutine at 020
$278    $2020   CALL     $020            ; Call subroutine at 020
$27A    $2020   CALL     $020            ; Call subroutine at 020
$27C    $2020   CALL     $020            ; Call subroutine at 020
$27E    $2020   CALL     $020            ; Call subroutine at 020
$280    $2020   CALL     $020            ; Call subroutine at 020
$282    $2020   CALL     $020            ; Call subroutine at 020
$284    $2020   CALL     $020            ; Call subroutine at 020
$286    $2020   CALL     $020            ; Call subroutine at 020
$288    $2020   CALL     $020            ; Call subroutine at 020
$28A    $2020   CALL     $020            ; Call subroutine at 020
$28C    $2020   CALL     $020            ; Call subroutine at 020
$28E    $2020   CALL     $020            ; Call subroutine at 020
$290    $2020   CALL     $020            ; Call subroutine at 020
$292    $2020   CALL     $020            ; Call subroutine at 020
$294    $2020   CALL     $020            ; Call subroutine at 020
$296    $2020   CALL     $020            ; Call subroutine at 020
$298    $2020   CALL     $020            ; Call subroutine at 020
$29A    $2020   CALL     $020            ; Call subroutine at 020
$29C    $2020   CALL     $020            ; Call subroutine at 020
$29E    $2020   CALL     $020            ; Call subroutine at 020
$2A0    $2020   CALL     $020            ; Call subroutine at 020
$2A2    $2020   CALL     $020            ; Call subroutine at 020
$2A4    $2020   CALL     $020            ; Call subroutine at 020
$2A6    $2020   CALL     $020            ; Call subroutine at 020
$2A8    $2020   CALL     $020            ; Call subroutine at 020
$2AA    $2020   CALL     $020            ; Call subroutine at 020
$2AC    $2020   CALL     $020            ; Call subroutine at 020
$2AE    $2020   CALL     $020            ; Call subroutine at 020
$2B0    $2020   CALL     $020            ; Call subroutine at 020
$2B2    $2020   CALL     $020            ; Call subroutine at 020
$2B4    $2020   CALL     $020            ; Call subroutine at 020
$2B6    $2020   CALL     $020            ; Call subroutine at 020
$2B8    $2020   CALL     $020            ; Call subroutine at 020
$2BA    $2020   CALL     $020            ; Call subroutine at 020
$2BC    $2020   CALL     $020            ; Call subroutine at 020
$2BE    $2020   CALL     $020            ; Call subroutine at 020
$2C0    $2020   CALL     $020            ; Call subroutine at 020
$2C2    $2020   CALL     $020            ; Call subroutine at 020
$2C4    $2020   CALL     $020            ; Call subroutine at 020
$2C6    $2020   CALL     $020            ; Call subroutine at 020
$2C8    $2020   CALL     $020            ; Call subroutine at 020
$2CA    $2020   CALL     $020            ; Call subroutine at 020
$2CC    $2020   CALL     $020            ; Call subroutine at 020
$2CE    $2020   CALL     $020            ; Call subroutine at 020
$2D0    $2020   CALL     $020            ; Call subroutine at 020
$2D2    $2020   CALL     $020            ; Call subroutine at 020
$2D4    $2020   CALL     $020            ; Call subroutine at 020
$2D6    $2020   CALL     $020            ; Call subroutine at 020
$2D8    $2020   CALL     $020            ; Call subroutine at 020
$2DA    $2020   CALL     $020            ; Call subroutine at 020
$2DC    $2020   CALL     $020            ; Call subroutine at 020
$2DE    $2020   CALL     $020            ; Call subroutine at 020
$2E0    $2020   CALL     $020            ; Call subroutine at 020
$2E2    $2020   CALL     $020            ; Call subroutine at 020
$2E4    $2020   CALL     $020            ; Call subroutine at 020
$2E6    $2020   CALL     $020            ; Call subroutine at 020
$2E8    $2020   CALL     $020            ; Call subroutine at 020
$2EA    $2020   CALL     $020            ; Call subroutine at 020
$2EC    $2020   CALL     $020            ; Call subroutine at 020
$2EE    $2020   CALL     $020            ; Call subroutine at 020
$2F0    $2020   CALL     $020            ; Call subroutine at 020
$2F2    $2020   CALL     $020            ; Call subroutine at 020
$2F4    $2020   CALL     $020            ; Call subroutine at 020
$2F6    $2020   CALL     $020            ; Call subroutine at 020
$2F8    $2020   CALL     $020            ; Call subroutine at 020
$2FA    $2020   CALL     $020            ; Call subroutine at 020
$2FC    $2020   CALL     $020            ; Call subroutine at 020
$2FE    $2020   CALL     $020            ; Call subroutine at 020
$300    $2020   CALL     $020            ; Call subroutine at 020
$302    $2020   CALL     $020            ; Call subroutine at 020
$304    $598A   UNKNOWN  $598A           ; Unknown 5xxx instruction
$306    $C3D7   RND      V3, #D7         ; V3 = random & D7
$308    $A577   LD       I, $577         ; Load 577 into I
$30A    $5885   UNKNOWN  $5885           ; Unknown 5xxx instruction
$30C    $E1C6   UNKNOWN  $E1C6           ; Unknown Exxx instruction
$30E    $BE94   JP       V0, $E94        ; Jump to V0 + E94
$310    $C560   RND      V5, #60         ; V5 = random & 60
$312    $58E0   SE       V8, VE          ; Skip if V8 == VE
$314    $A716   LD       I, $716         ; Load 716 into I
$316    $F682   UNKNOWN  F682            ; Unknown Fxxx instruction
$318    $1D14   JP       $D14            ; Jump to D14
$31A    $AE71   LD       I, $E71         ; Load E71 into I
$31C    $439B   SNE      V3, #9B         ; Skip if V3 != 155
$31E    $D347   DRW      V3, V4, #7      ; Draw 7-byte sprite at V3, V4
$320    $D073   DRW      V0, V7, #3      ; Draw 3-byte sprite at V0, V7
$322    $9927   UNKNOWN  $9927           ; Unknown 9xxx instruction
$324    $F1D0   UNKNOWN  F1D0            ; Unknown Fxxx instruction
$326    $F0A7   UNKNOWN  F0A7            ; Unknown Fxxx instruction
$328    $049F   SYS      $49F            ; System call to 49F
$32A    $707A   ADD      V0, #7A         ; Add 122 to V0
$32C    $96F7   UNKNOWN  $96F7           ; Unknown 9xxx instruction
$32E    $7E44   ADD      VE, #44         ; Add 68 to VE
$330    $BB4D   JP       V0, $B4D        ; Jump to V0 + B4D
$332    $F0B8   UNKNOWN  F0B8            ; Unknown Fxxx instruction
$334    $B5BE   JP       V0, $5BE        ; Jump to V0 + 5BE
$336    $AE05   LD       I, $E05         ; Load E05 into I
$338    $BA37   JP       V0, $A37        ; Jump to V0 + A37
$33A    $9D27   UNKNOWN  $9D27           ; Unknown 9xxx instruction
$33C    $F9B9   UNKNOWN  F9B9            ; Unknown Fxxx instruction
$33E    $4E8C   SNE      VE, #8C         ; Skip if VE != 140
$340    $0333   SYS      $333            ; System call to 333
$342    $D8C0   DRW      V8, VC, #0      ; Draw 0-byte sprite at V8, VC
$344    $B381   JP       V0, $381        ; Jump to V0 + 381
$346    $CFDE   RND      VF, #DE         ; VF = random & DE
$348    $9295   UNKNOWN  $9295           ; Unknown 9xxx instruction
$34A    $CCA0   RND      VC, #A0         ; VC = random & A0
$34C    $0C33   SYS      $C33            ; System call to C33
$34E    $BDCD   JP       V0, $DCD        ; Jump to V0 + DCD
$350    $38EF   SE       V8, #EF         ; Skip if V8 == 239
$352    $9D1E   UNKNOWN  $9D1E           ; Unknown 9xxx instruction
$354    $BE5C   JP       V0, $E5C        ; Jump to V0 + E5C
$356    $13EE   JP       $3EE            ; Jump to 3EE
$358    $B6CD   JP       V0, $6CD        ; Jump to V0 + 6CD
$35A    $BA28   JP       V0, $A28        ; Jump to V0 + A28
$35C    $BD28   JP       V0, $D28        ; Jump to V0 + D28
$35E    $89DD   UNKNOWN  89DD            ; Unknown 8xxx instruction
$360    $E590   UNKNOWN  $E590           ; Unknown Exxx instruction
$362    $CB25   RND      VB, #25         ; VB = random & 25
$364    $807A   UNKNOWN  807A            ; Unknown 8xxx instruction
$366    $814E   SHL      V1              ; V1 <<= 1, VF = MSB
$368    $7C61   ADD      VC, #61         ; Add 97 to VC
$36A    $61E0   LD       V1, #E0         ; Load 224 into V1
$36C    $BB46   JP       V0, $B46        ; Jump to V0 + B46
$36E    $A9ED   LD       I, $9ED         ; Load 9ED into I
$370    $3FC3   SE       VF, #C3         ; Skip if VF == 195
$372    $5B61   UNKNOWN  $5B61           ; Unknown 5xxx instruction
$374    $F2C2   UNKNOWN  F2C2            ; Unknown Fxxx instruction
$376    $5540   SE       V5, V4          ; Skip if V5 == V4
$378    $3819   SE       V8, #19         ; Skip if V8 == 25
$37A    $8AA8   UNKNOWN  8AA8            ; Unknown 8xxx instruction
$37C    $3EF6   SE       VE, #F6         ; Skip if VE == 246
$37E    $ED8A   UNKNOWN  $ED8A           ; Unknown Exxx instruction
$380    $5825   UNKNOWN  $5825           ; Unknown 5xxx instruction
$382    $05D5   SYS      $5D5            ; System call to 5D5
$384    $9B1D   UNKNOWN  $9B1D           ; Unknown 9xxx instruction
$386    $A8A8   LD       I, $8A8         ; Load 8A8 into I
$388    $1700   JP       $700            ; Jump to 700
$38A    $63AC   LD       V3, #AC         ; Load 172 into V3
$38C    $1AA3   JP       $AA3            ; Jump to AA3
$38E    $A013   LD       I, $013         ; Load 013 into I
$390    $53FA   UNKNOWN  $53FA           ; Unknown 5xxx instruction
$392    $AC4F   LD       I, $C4F         ; Load C4F into I
$394    $825D   UNKNOWN  825D            ; Unknown 8xxx instruction
$396    $0C63   SYS      $C63            ; System call to C63
$398    $F18A   UNKNOWN  F18A            ; Unknown Fxxx instruction
$39A    $8012   AND      V0, V1          ; V0 &= V1
$39C    $0BB8   SYS      $BB8            ; System call to BB8
$39E    $48C8   SNE      V8, #C8         ; Skip if V8 != 200
$3A0    $0A9E   SYS      $A9E            ; System call to A9E
$3A2    $DC48   DRW      VC, V4, #8      ; Draw 8-byte sprite at VC, V4
$3A4    $5318   UNKNOWN  $5318           ; Unknown 5xxx instruction
$3A6    $C8A9   RND      V8, #A9         ; V8 = random & A9
$3A8    $27E6   CALL     $7E6            ; Call subroutine at 7E6
$3AA    $6EE8   LD       VE, #E8         ; Load 232 into VE
$3AC    $346C   SE       V4, #6C         ; Skip if V4 == 108
$3AE    $D57B   DRW      V5, V7, #B      ; Draw 11-byte sprite at V5, V7
$3B0    $765B   ADD      V6, #5B         ; Add 91 to V6
$3B2    $8A31   OR       VA, V3          ; VA |= V3
$3B4    $7692   ADD      V6, #92         ; Add 146 to V6
$3B6    $B33B   JP       V0, $33B        ; Jump to V0 + 33B
$3B8    $DBC6   DRW      VB, VC, #6      ; Draw 6-byte sprite at VB, VC
$3BA    $9305   UNKNOWN  $9305           ; Unknown 9xxx instruction
$3BC    $AB29   LD       I, $B29         ; Load B29 into I
$3BE    $78BB   ADD      V8, #BB         ; Add 187 to V8
$3C0    $EA34   UNKNOWN  $EA34           ; Unknown Exxx instruction
$3C2    $1475   JP       $475            ; Jump to 475
$3C4    $3490   SE       V4, #90         ; Skip if V4 == 144
$3C6    $F627   UNKNOWN  F627            ; Unknown Fxxx instruction
$3C8    $2931   CALL     $931            ; Call subroutine at 931
$3CA    $AA04   LD       I, $A04         ; Load A04 into I
$3CC    $11AA   JP       $1AA            ; Jump to 1AA
$3CE    $CFA3   RND      VF, #A3         ; VF = random & A3
$3D0    $C835   RND      V8, #35         ; V8 = random & 35
$3D2    $E4EB   UNKNOWN  $E4EB           ; Unknown Exxx instruction
$3D4    $7486   ADD      V4, #86         ; Add 134 to V4
$3D6    $4734   SNE      V7, #34         ; Skip if V7 != 52
$3D8    $4D38   SNE      VD, #38         ; Skip if VD != 56
$3DA    $2B31   CALL     $B31            ; Call subroutine at B31
$3DC    $8102   AND      V1, V0          ; V1 &= V0
$3DE    $9706   UNKNOWN  $9706           ; Unknown 9xxx instruction
$3E0    $D299   DRW      V2, V9, #9      ; Draw 9-byte sprite at V2, V9
$3E2    $24A9   CALL     $4A9            ; Call subroutine at 4A9
$3E4    $CC34   RND      VC, #34         ; VC = random & 34
$3E6    $AC6E   LD       I, $C6E         ; Load C6E into I
$3E8    $DD35   DRW      VD, V3, #5      ; Draw 5-byte sprite at VD, V3
$3EA    $18C8   JP       $8C8            ; Jump to 8C8
$3EC    $A88B   LD       I, $88B         ; Load 88B into I
$3EE    $DD0D   DRW      VD, V0, #D      ; Draw 13-byte sprite at VD, V0
$3F0    $CDB7   RND      VD, #B7         ; VD = random & B7
$3F2    $884C   UNKNOWN  884C            ; Unknown 8xxx instruction
$3F4    $87B5   SUB      V7, VB          ; V7 -= VB, VF = !borrow
$3F6    $212E   CALL     $12E            ; Call subroutine at 12E
$3F8    $3BDF   SE       VB, #DF         ; Skip if VB == 223
$3FA    $8B11   OR       VB, V1          ; VB |= V1
$3FC    $598D   UNKNOWN  $598D           ; Unknown 5xxx instruction
$3FE    $A5E7   LD       I, $5E7         ; Load 5E7 into I
$400    $F32D   UNKNOWN  F32D            ; Unknown Fxxx instruction
$402    $E673   UNKNOWN  $E673           ; Unknown Exxx instruction
$404    $942B   UNKNOWN  $942B           ; Unknown 9xxx instruction
$406    $954A   UNKNOWN  $954A           ; Unknown 9xxx instruction
$408    $3DD1   SE       VD, #D1         ; Skip if VD == 209
$40A    $AD8C   LD       I, $D8C         ; Load D8C into I
$40C    $B61A   JP       V0, $61A        ; Jump to V0 + 61A
$40E    $020B   SYS      $20B            ; System call to 20B
$410    $7EAA   ADD      VE, #AA         ; Add 170 to VE
$412    $F216   UNKNOWN  F216            ; Unknown Fxxx instruction
$414    $1218   JP       $218            ; Jump to 218
$416    $82A8   UNKNOWN  82A8            ; Unknown 8xxx instruction
$418    $66FF   LD       V6, #FF         ; Load 255 into V6
$41A    $661F   LD       V6, #1F         ; Load 31 into V6
$41C    $B94B   JP       V0, $94B        ; Jump to V0 + 94B
$41E    $BA88   JP       V0, $A88        ; Jump to V0 + A88
$420    $D805   DRW      V8, V0, #5      ; Draw 5-byte sprite at V8, V0
$422    $83E1   OR       V3, VE          ; V3 |= VE
$424    $6352   LD       V3, #52         ; Load 82 into V3
$426    $4686   SNE      V6, #86         ; Skip if V6 != 134
$428    $43E4   SNE      V3, #E4         ; Skip if V3 != 228
$42A    $89C4   ADD      V9, VC          ; V9 += VC, VF = carry
$42C    $7299   ADD      V2, #99         ; Add 153 to V2
$42E    $E33F   UNKNOWN  $E33F           ; Unknown Exxx instruction
$430    $DB26   DRW      VB, V2, #6      ; Draw 6-byte sprite at VB, V2
$432    $9927   UNKNOWN  $9927           ; Unknown 9xxx instruction
$434    $7DE6   ADD      VD, #E6         ; Add 230 to VD
$436    $437C   SNE      V3, #7C         ; Skip if V3 != 124
$438    $4C46   SNE      VC, #46         ; Skip if VC != 70
$43A    $FE40   UNKNOWN  FE40            ; Unknown Fxxx instruction
$43C    $2C93   CALL     $C93            ; Call subroutine at C93
$43E    $300C   SE       V0, #0C         ; Skip if V0 == 12
$440    $0542   SYS      $542            ; System call to 542
$442    $659B   LD       V5, #9B         ; Load 155 into V5
$444    $F627   UNKNOWN  F627            ; Unknown Fxxx instruction
$446    $BA43   JP       V0, $A43        ; Jump to V0 + A43
$448    $447C   SNE      V4, #7C         ; Skip if V4 != 124
$44A    $0376   SYS      $376            ; System call to 376
$44C    $CE6B   RND      VE, #6B         ; VE = random & 6B
$44E    $CACE   RND      VA, #CE         ; VA = random & CE
$450    $D4B9   DRW      V4, VB, #9      ; Draw 9-byte sprite at V4, VB
$452    $8D04   ADD      VD, V0          ; VD += V0, VF = carry
$454    $1C91   JP       $C91            ; Jump to C91
$456    $F251   UNKNOWN  F251            ; Unknown Fxxx instruction
$458    $5458   UNKNOWN  $5458           ; Unknown 5xxx instruction
$45A    $7BD7   ADD      VB, #D7         ; Add 215 to VB
$45C    $1D74   JP       $D74            ; Jump to D74
$45E    $5560   SE       V5, V6          ; Skip if V5 == V6
$460    $C21D   RND      V2, #1D         ; V2 = random & 1D
$462    $6C55   LD       VC, #55         ; Load 85 into VC
$464    $958F   UNKNOWN  $958F           ; Unknown 9xxx instruction
$466    $598D   UNKNOWN  $598D           ; Unknown 5xxx instruction
$468    $E17A   UNKNOWN  $E17A           ; Unknown Exxx instruction
$46A    $7C8E   ADD      VC, #8E         ; Add 142 to VC
$46C    $1C1A   JP       $C1A            ; Jump to C1A
$46E    $6300   LD       V3, #00         ; Load 0 into V3
$470    $A45C   LD       I, $45C         ; Load 45C into I
$472    $88CF   UNKNOWN  88CF            ; Unknown 8xxx instruction
$474    $00B3   SYS      $0B3            ; System call to 0B3
$476    $1EE2   JP       $EE2            ; Jump to EE2
$478    $1285   JP       $285            ; Jump to 285
$47A    $B6F6   JP       V0, $6F6        ; Jump to V0 + 6F6
$47C    $3997   SE       V9, #97         ; Skip if V9 == 151
$47E    $D27A   DRW      V2, V7, #A      ; Draw 10-byte sprite at V2, V7
$480    $EAEA   UNKNOWN  $EAEA           ; Unknown Exxx instruction
$482    $9025   UNKNOWN  $9025           ; Unknown 9xxx instruction
$484    $BC38   JP       V0, $C38        ; Jump to V0 + C38
$486    $977B   UNKNOWN  $977B           ; Unknown 9xxx instruction
$488    $EE85   UNKNOWN  $EE85           ; Unknown Exxx instruction
$48A    $BCA7   JP       V0, $CA7        ; Jump to V0 + CA7
$48C    $FED9   UNKNOWN  FED9            ; Unknown Fxxx instruction
$48E    $E6B1   UNKNOWN  $E6B1           ; Unknown Exxx instruction
$490    $5781   UNKNOWN  $5781           ; Unknown 5xxx instruction
$492    $6E25   LD       VE, #25         ; Load 37 into VE
$494    $DC2B   DRW      VC, V2, #B      ; Draw 11-byte sprite at VC, V2
$496    $37DA   SE       V7, #DA         ; Skip if V7 == 218
$498    $B021   JP       V0, $021        ; Jump to V0 + 021
$49A    $2BE8   CALL     $BE8            ; Call subroutine at BE8
$49C    $48DB   SNE      V8, #DB         ; Skip if V8 != 219
$49E    $E37C   UNKNOWN  $E37C           ; Unknown Exxx instruction
$4A0    $D1F2   DRW      V1, VF, #2      ; Draw 2-byte sprite at V1, VF
$4A2    $7E81   ADD      VE, #81         ; Add 129 to VE
$4A4    $E45D   UNKNOWN  $E45D           ; Unknown Exxx instruction
$4A6    $3CE9   SE       VC, #E9         ; Skip if VC == 233
$4A8    $356C   SE       V5, #6C         ; Skip if V5 == 108
$4AA    $E0FF   UNKNOWN  $E0FF           ; Unknown Exxx instruction
$4AC    $172B   JP       $72B            ; Jump to 72B
$4AE    $E9A3   UNKNOWN  $E9A3           ; Unknown Exxx instruction
$4B0    $8B66   SHR      VB              ; VB >>= 1, VF = LSB
$4B2    $476D   SNE      V7, #6D         ; Skip if V7 != 109
$4B4    $092B   SYS      $92B            ; System call to 92B
$4B6    $2534   CALL     $534            ; Call subroutine at 534
$4B8    $3FFE   SE       VF, #FE         ; Skip if VF == 254
$4BA    $AECE   LD       I, $ECE         ; Load ECE into I
$4BC    $55D1   UNKNOWN  $55D1           ; Unknown 5xxx instruction
$4BE    $229A   CALL     $29A            ; Call subroutine at 29A
$4C0    $1BBF   JP       $BBF            ; Jump to BBF
$4C2    $CB30   RND      VB, #30         ; VB = random & 30
$4C4    $B9A1   JP       V0, $9A1        ; Jump to V0 + 9A1
$4C6    $82DE   SHL      V2              ; V2 <<= 1, VF = MSB
$4C8    $68BD   LD       V8, #BD         ; Load 189 into V8
$4CA    $CE3B   RND      VE, #3B         ; VE = random & 3B
$4CC    $0579   SYS      $579            ; System call to 579
$4CE    $3868   SE       V8, #68         ; Skip if V8 == 104
$4D0    $741A   ADD      V4, #1A         ; Add 26 to V4
$4D2    $3DF3   SE       VD, #F3         ; Skip if VD == 243
$4D4    $E472   UNKNOWN  $E472           ; Unknown Exxx instruction
$4D6    $DD53   DRW      VD, V5, #3      ; Draw 3-byte sprite at VD, V5
$4D8    $4AB8   SNE      VA, #B8         ; Skip if VA != 184
$4DA    $E9F9   UNKNOWN  $E9F9           ; Unknown Exxx instruction
$4DC    $6828   LD       V8, #28         ; Load 40 into V8
$4DE    $A27A   LD       I, $27A         ; Load 27A into I
$4E0    $0109   SYS      $109            ; System call to 109
$4E2    $A420   LD       I, $420         ; Load 420 into I
$4E4    $6599   LD       V5, #99         ; Load 153 into V5
$4E6    $E57F   UNKNOWN  $E57F           ; Unknown Exxx instruction
$4E8    $6C4E   LD       VC, #4E         ; Load 78 into VC
$4EA    $24D0   CALL     $4D0            ; Call subroutine at 4D0
$4EC    $ABD1   LD       I, $BD1         ; Load BD1 into I
$4EE    $A0F6   LD       I, $0F6         ; Load 0F6 into I
$4F0    $0062   SYS      $062            ; System call to 062
$4F2    $48C0   SNE      V8, #C0         ; Skip if V8 != 192
$4F4    $D7C4   DRW      V7, VC, #4      ; Draw 4-byte sprite at V7, VC
$4F6    $818A   UNKNOWN  818A            ; Unknown 8xxx instruction
$4F8    $9FDA   UNKNOWN  $9FDA           ; Unknown 9xxx instruction
$4FA    $FA52   UNKNOWN  FA52            ; Unknown Fxxx instruction
$4FC    $B89D   JP       V0, $89D        ; Jump to V0 + 89D
$4FE    $9342   UNKNOWN  $9342           ; Unknown 9xxx instruction
$500    $CF60   RND      VF, #60         ; VF = random & 60
$502    $F02B   UNKNOWN  F02B            ; Unknown Fxxx instruction
$504    $2F53   CALL     $F53            ; Call subroutine at F53
$506    $7B74   ADD      VB, #74         ; Add 116 to VB
$508    $A02B   LD       I, $02B         ; Load 02B into I
$50A    $3AC9   SE       VA, #C9         ; Skip if VA == 201
$50C    $7970   ADD      V9, #70         ; Add 112 to V9
$50E    $94DC   UNKNOWN  $94DC           ; Unknown 9xxx instruction
$510    $8EEE   SHL      VE              ; VE <<= 1, VF = MSB
$512    $AEA0   LD       I, $EA0         ; Load EA0 into I
$514    $9BF2   UNKNOWN  $9BF2           ; Unknown 9xxx instruction
$516    $E58D   UNKNOWN  $E58D           ; Unknown Exxx instruction
$518    $3091   SE       V0, #91         ; Skip if V0 == 145
$51A    $A62B   LD       I, $62B         ; Load 62B into I
$51C    $7D52   ADD      VD, #52         ; Add 82 to VD
$51E    $21E0   CALL     $1E0            ; Call subroutine at 1E0
$520    $53C8   UNKNOWN  $53C8           ; Unknown 5xxx instruction
$522    $92E8   UNKNOWN  $92E8           ; Unknown 9xxx instruction
$524    $5F4B   UNKNOWN  $5F4B           ; Unknown 5xxx instruction
$526    $55A6   UNKNOWN  $55A6           ; Unknown 5xxx instruction
$528    $0B93   SYS      $B93            ; System call to B93
$52A    $48DF   SNE      V8, #DF         ; Skip if V8 != 223
$52C    $E4F6   UNKNOWN  $E4F6           ; Unknown Exxx instruction
$52E    $AAD7   LD       I, $AD7         ; Load AD7 into I
$530    $9F35   UNKNOWN  $9F35           ; Unknown 9xxx instruction
$532    $54C3   UNKNOWN  $54C3           ; Unknown 5xxx instruction
$534    $B952   JP       V0, $952        ; Jump to V0 + 952
$536    $2CD2   CALL     $CD2            ; Call subroutine at CD2
$538    $AF96   LD       I, $F96         ; Load F96 into I
$53A    $5318   UNKNOWN  $5318           ; Unknown 5xxx instruction
$53C    $796D   ADD      V9, #6D         ; Add 109 to V9
$53E    $F2BA   UNKNOWN  F2BA            ; Unknown Fxxx instruction
$540    $E4B2   UNKNOWN  $E4B2           ; Unknown Exxx instruction
$542    $0A68   SYS      $A68            ; System call to A68
$544    $0CA7   SYS      $CA7            ; System call to CA7
$546    $047B   SYS      $47B            ; System call to 47B
$548    $2D1F   CALL     $D1F            ; Call subroutine at D1F
$54A    $4403   SNE      V4, #03         ; Skip if V4 != 3
$54C    $E0A1   SKNP     V0              ; Skip if key V0 not pressed
$54E    $C1EE   RND      V1, #EE         ; V1 = random & EE
$550    $AEE5   LD       I, $EE5         ; Load EE5 into I
$552    $5486   UNKNOWN  $5486           ; Unknown 5xxx instruction
$554    $53E9   UNKNOWN  $53E9           ; Unknown 5xxx instruction
$556    $E132   UNKNOWN  $E132           ; Unknown Exxx instruction
$558    $6210   LD       V2, #10         ; Load 16 into V2
$55A    $4A6A   SNE      VA, #6A         ; Skip if VA != 106
$55C    $1FF9   JP       $FF9            ; Jump to FF9
$55E    $D807   DRW      V8, V0, #7      ; Draw 7-byte sprite at V8, V0
$560    $51CA   UNKNOWN  $51CA           ; Unknown 5xxx instruction
$562    $3A9D   SE       VA, #9D         ; Skip if VA == 157
$564    $3EF0   SE       VE, #F0         ; Skip if VE == 240
$566    $B36C   JP       V0, $36C        ; Jump to V0 + 36C
$568    $1D64   JP       $D64            ; Jump to D64
$56A    $647D   LD       V4, #7D         ; Load 125 into V4
$56C    $62E8   LD       V2, #E8         ; Load 232 into V2
$56E    $5577   UNKNOWN  $5577           ; Unknown 5xxx instruction
$570    $5D31   UNKNOWN  $5D31           ; Unknown 5xxx instruction
$572    $6AA3   LD       VA, #A3         ; Load 163 into VA
$574    $06FB   SYS      $6FB            ; System call to 6FB
$576    $4029   SNE      V0, #29         ; Skip if V0 != 41
$578    $1FAE   JP       $FAE            ; Jump to FAE
$57A    $3547   SE       V5, #47         ; Skip if V5 == 71
$57C    $1410   JP       $410            ; Jump to 410
$57E    $C8DE   RND      V8, #DE         ; V8 = random & DE
$580    $E768   UNKNOWN  $E768           ; Unknown Exxx instruction
$582    $AEB1   LD       I, $EB1         ; Load EB1 into I
$584    $255B   CALL     $55B            ; Call subroutine at 55B
$586    $7149   ADD      V1, #49         ; Add 73 to V1
$588    $D5BC   DRW      V5, VB, #C      ; Draw 12-byte sprite at V5, VB
$58A    $9CCA   UNKNOWN  $9CCA           ; Unknown 9xxx instruction
$58C    $B074   JP       V0, $074        ; Jump to V0 + 074
$58E    $E5BE   UNKNOWN  $E5BE           ; Unknown Exxx instruction
$590    $CA79   RND      VA, #79         ; VA = random & 79
$592    $BC0D   JP       V0, $C0D        ; Jump to V0 + C0D
$594    $1002   JP       $002            ; Jump to 002
$596    $734E   ADD      V3, #4E         ; Add 78 to V3
$598    $9F2F   UNKNOWN  $9F2F           ; Unknown 9xxx instruction
$59A    $52D3   UNKNOWN  $52D3           ; Unknown 5xxx instruction
$59C    $4AEB   SNE      VA, #EB         ; Skip if VA != 235
$59E    $E748   UNKNOWN  $E748           ; Unknown Exxx instruction
$5A0    $A23E   LD       I, $23E         ; Load 23E into I
$5A2    $62FF   LD       V2, #FF         ; Load 255 into V2
$5A4    $0E94   SYS      $E94            ; System call to E94
$5A6    $FFA6   UNKNOWN  FFA6            ; Unknown Fxxx instruction
$5A8    $0595   SYS      $595            ; System call to 595
$5AA    $AC52   LD       I, $C52         ; Load C52 into I
$5AC    $ED63   UNKNOWN  $ED63           ; Unknown Exxx instruction
$5AE    $0709   SYS      $709            ; System call to 709
$5B0    $7EB0   ADD      VE, #B0         ; Add 176 to VE
$5B2    $4830   SNE      V8, #30         ; Skip if V8 != 48
$5B4    $DCB5   DRW      VC, VB, #5      ; Draw 5-byte sprite at VC, VB
$5B6    $7D48   ADD      VD, #48         ; Add 72 to VD
$5B8    $3B72   SE       VB, #72         ; Skip if VB == 114
$5BA    $A6A0   LD       I, $6A0         ; Load 6A0 into I
$5BC    $F1AB   UNKNOWN  F1AB            ; Unknown Fxxx instruction
$5BE    $B8DD   JP       V0, $8DD        ; Jump to V0 + 8DD
$5C0    $D60E   DRW      V6, V0, #E      ; Draw 14-byte sprite at V6, V0
$5C2    $47BD   SNE      V7, #BD         ; Skip if V7 != 189
$5C4    $789A   ADD      V8, #9A         ; Add 154 to V8
$5C6    $2D46   CALL     $D46            ; Call subroutine at D46
$5C8    $5CB7   UNKNOWN  $5CB7           ; Unknown 5xxx instruction
$5CA    $6EAE   LD       VE, #AE         ; Load 174 into VE
$5CC    $6368   LD       V3, #68         ; Load 104 into V3
$5CE    $8822   AND      V8, V2          ; V8 &= V2
$5D0    $333C   SE       V3, #3C         ; Skip if V3 == 60
$5D2    $EFF4   UNKNOWN  $EFF4           ; Unknown Exxx instruction
$5D4    $3EC1   SE       VE, #C1         ; Skip if VE == 193
$5D6    $5EDE   UNKNOWN  $5EDE           ; Unknown 5xxx instruction
$5D8    $1AF9   JP       $AF9            ; Jump to AF9
$5DA    $2CDF   CALL     $CDF            ; Call subroutine at CDF
$5DC    $881F   UNKNOWN  881F            ; Unknown 8xxx instruction
$5DE    $4EF0   SNE      VE, #F0         ; Skip if VE != 240
$5E0    $7D67   ADD      VD, #67         ; Add 103 to VD
$5E2    $5108   UNKNOWN  $5108           ; Unknown 5xxx instruction
$5E4    $390E   SE       V9, #0E         ; Skip if V9 == 14
$5E6    $0E6A   SYS      $E6A            ; System call to E6A
$5E8    $816E   SHL      V1              ; V1 <<= 1, VF = MSB
$5EA    $80EB   UNKNOWN  80EB            ; Unknown 8xxx instruction
$5EC    $8523   XOR      V5, V2          ; V5 ^= V2
$5EE    $A575   LD       I, $575         ; Load 575 into I
$5F0    $1B7B   JP       $B7B            ; Jump to B7B
$5F2    $794F   ADD      V9, #4F         ; Add 79 to V9
$5F4    $7F13   ADD      VF, #13         ; Add 19 to VF
$5F6    $B846   JP       V0, $846        ; Jump to V0 + 846
$5F8    $F18C   UNKNOWN  F18C            ; Unknown Fxxx instruction
$5FA    $4D9E   SNE      VD, #9E         ; Skip if VD != 158
$5FC    $90B2   UNKNOWN  $90B2           ; Unknown 9xxx instruction
$5FE    $0E76   SYS      $E76            ; System call to E76
$600    $5D5B   UNKNOWN  $5D5B           ; Unknown 5xxx instruction
$602    $F56C   UNKNOWN  F56C            ; Unknown Fxxx instruction
$604    $7BAF   ADD      VB, #AF         ; Add 175 to VB
$606    $BAEF   JP       V0, $AEF        ; Jump to V0 + AEF
$608    $6EB0   LD       VE, #B0         ; Load 176 into VE
$60A    $F786   UNKNOWN  F786            ; Unknown Fxxx instruction
$60C    $FF9F   UNKNOWN  FF9F            ; Unknown Fxxx instruction
$60E    $1582   JP       $582            ; Jump to 582
$610    $5E2C   UNKNOWN  $5E2C           ; Unknown 5xxx instruction
$612    $460B   SNE      V6, #0B         ; Skip if V6 != 11
$614    $9985   UNKNOWN  $9985           ; Unknown 9xxx instruction
$616    $AD73   LD       I, $D73         ; Load D73 into I
$618    $4469   SNE      V4, #69         ; Skip if V4 != 105
$61A    $7AD0   ADD      VA, #D0         ; Add 208 to VA
$61C    $C5F9   RND      V5, #F9         ; V5 = random & F9
$61E    $FF26   UNKNOWN  FF26            ; Unknown Fxxx instruction
$620    $7332   ADD      V3, #32         ; Add 50 to V3
$622    $4FE8   SNE      VF, #E8         ; Skip if VF != 232
$624    $663B   LD       V6, #3B         ; Load 59 into V6
$626    $B362   JP       V0, $362        ; Jump to V0 + 362
$628    $F3F2   UNKNOWN  F3F2            ; Unknown Fxxx instruction
$62A    $6745   LD       V7, #45         ; Load 69 into V7
$62C    $E41D   UNKNOWN  $E41D           ; Unknown Exxx instruction
$62E    $465A   SNE      V6, #5A         ; Skip if V6 != 90
$630    $7F53   ADD      VF, #53         ; Add 83 to VF
$632    $ECAB   UNKNOWN  $ECAB           ; Unknown Exxx instruction
$634    $2518   CALL     $518            ; Call subroutine at 518
$636    $E4FA   UNKNOWN  $E4FA           ; Unknown Exxx instruction
$638    $0DF9   SYS      $DF9            ; System call to DF9
$63A    $9E5E   UNKNOWN  $9E5E           ; Unknown 9xxx instruction
$63C    $9151   UNKNOWN  $9151           ; Unknown 9xxx instruction
$63E    $092C   SYS      $92C            ; System call to 92C
$640    $207E   CALL     $07E            ; Call subroutine at 07E
$642    $9ABE   UNKNOWN  $9ABE           ; Unknown 9xxx instruction
$644    $0635   SYS      $635            ; System call to 635
$646    $C782   RND      V7, #82         ; V7 = random & 82
$648    $3489   SE       V4, #89         ; Skip if V4 == 137
$64A    $FEF7   UNKNOWN  FEF7            ; Unknown Fxxx instruction
$64C    $5E64   UNKNOWN  $5E64           ; Unknown 5xxx instruction
$64E    $6939   LD       V9, #39         ; Load 57 into V9
$650    $3298   SE       V2, #98         ; Skip if V2 == 152
$652    $83ED   UNKNOWN  83ED            ; Unknown 8xxx instruction
$654    $1CC5   JP       $CC5            ; Jump to CC5
$656    $0B43   SYS      $B43            ; System call to B43
$658    $1E9D   JP       $E9D            ; Jump to E9D
$65A    $D413   DRW      V4, V1, #3      ; Draw 3-byte sprite at V4, V1
$65C    $5EDD   UNKNOWN  $5EDD           ; Unknown 5xxx instruction
$65E    $5F82   UNKNOWN  $5F82           ; Unknown 5xxx instruction
$660    $F039   UNKNOWN  F039            ; Unknown Fxxx instruction
$662    $C979   RND      V9, #79         ; V9 = random & 79
$664    $950D   UNKNOWN  $950D           ; Unknown 9xxx instruction
$666    $E61A   UNKNOWN  $E61A           ; Unknown Exxx instruction
$668    $901D   UNKNOWN  $901D           ; Unknown 9xxx instruction
$66A    $76A5   ADD      V6, #A5         ; Add 165 to V6
$66C    $146F   JP       $46F            ; Jump to 46F
$66E    $3C32   SE       VC, #32         ; Skip if VC == 50
$670    $F74D   UNKNOWN  F74D            ; Unknown Fxxx instruction
$672    $AAEF   LD       I, $AEF         ; Load AEF into I
$674    $A2EC   LD       I, $2EC         ; Load 2EC into I
$676    $15F2   JP       $5F2            ; Jump to 5F2
$678    $1AB5   JP       $AB5            ; Jump to AB5
$67A    $AFAF   LD       I, $FAF         ; Load FAF into I
$67C    $1B83   JP       $B83            ; Jump to B83
$67E    $BFA8   JP       V0, $FA8        ; Jump to V0 + FA8
$680    $2DC3   CALL     $DC3            ; Call subroutine at DC3
$682    $E359   UNKNOWN  $E359           ; Unknown Exxx instruction
$684    $56B2   UNKNOWN  $56B2           ; Unknown 5xxx instruction
$686    $53FA   UNKNOWN  $53FA           ; Unknown 5xxx instruction
$688    $2CDB   CALL     $CDB            ; Call subroutine at CDB
$68A    $BEE3   JP       V0, $EE3        ; Jump to V0 + EE3
$68C    $33B7   SE       V3, #B7         ; Skip if V3 == 183
$68E    $828C   UNKNOWN  828C            ; Unknown 8xxx instruction
$690    $C505   RND      V5, #05         ; V5 = random & 05
$692    $E919   UNKNOWN  $E919           ; Unknown Exxx instruction
$694    $8F03   XOR      VF, V0          ; VF ^= V0
$696    $41CC   SNE      V1, #CC         ; Skip if V1 != 204
$698    $6C64   LD       VC, #64         ; Load 100 into VC
$69A    $E07B   UNKNOWN  $E07B           ; Unknown Exxx instruction
$69C    $8F4A   UNKNOWN  8F4A            ; Unknown 8xxx instruction
$69E    $AC3A   LD       I, $C3A         ; Load C3A into I
$6A0    $3B89   SE       VB, #89         ; Skip if VB == 137
$6A2    $63A0   LD       V3, #A0         ; Load 160 into V3
$6A4    $57A2   UNKNOWN  $57A2           ; Unknown 5xxx instruction
$6A6    $970C   UNKNOWN  $970C           ; Unknown 9xxx instruction
$6A8    $F273   UNKNOWN  F273            ; Unknown Fxxx instruction
$6AA    $51E3   UNKNOWN  $51E3           ; Unknown 5xxx instruction
$6AC    $1D66   JP       $D66            ; Jump to D66
$6AE    $C82A   RND      V8, #2A         ; V8 = random & 2A
$6B0    $0A08   SYS      $A08            ; System call to A08
$6B2    $5081   UNKNOWN  $5081           ; Unknown 5xxx instruction
$6B4    $F5BD   UNKNOWN  F5BD            ; Unknown Fxxx instruction
$6B6    $1195   JP       $195            ; Jump to 195
$6B8    $2EFC   CALL     $EFC            ; Call subroutine at EFC
$6BA    $C31C   RND      V3, #1C         ; V3 = random & 1C
$6BC    $D9FA   DRW      V9, VF, #A      ; Draw 10-byte sprite at V9, VF
$6BE    $A086   LD       I, $086         ; Load 086 into I
$6C0    $1D71   JP       $D71            ; Jump to D71
$6C2    $764C   ADD      V6, #4C         ; Add 76 to V6
$6C4    $2884   CALL     $884            ; Call subroutine at 884
$6C6    $2661   CALL     $661            ; Call subroutine at 661
$6C8    $BA66   JP       V0, $A66        ; Jump to V0 + A66
$6CA    $B8FA   JP       V0, $8FA        ; Jump to V0 + 8FA
$6CC    $7703   ADD      V7, #03         ; Add 3 to V7
$6CE    $80B2   AND      V0, VB          ; V0 &= VB
$6D0    $6B4A   LD       VB, #4A         ; Load 74 into VB
$6D2    $5D9D   UNKNOWN  $5D9D           ; Unknown 5xxx instruction
$6D4    $DB11   DRW      VB, V1, #1      ; Draw 1-byte sprite at VB, V1
$6D6    $D950   DRW      V9, V5, #0      ; Draw 0-byte sprite at V9, V5
$6D8    $A400   LD       I, $400         ; Load 400 into I
$6DA    $1FF8   JP       $FF8            ; Jump to FF8
$6DC    $6AD0   LD       VA, #D0         ; Load 208 into VA
$6DE    $8DC9   UNKNOWN  8DC9            ; Unknown 8xxx instruction
$6E0    $5238   UNKNOWN  $5238           ; Unknown 5xxx instruction
$6E2    $4689   SNE      V6, #89         ; Skip if V6 != 137
$6E4    $5FC2   UNKNOWN  $5FC2           ; Unknown 5xxx instruction
$6E6    $2A12   CALL     $A12            ; Call subroutine at A12
$6E8    $23BD   CALL     $3BD            ; Call subroutine at 3BD
$6EA    $FB29   LD       F, VB           ; I = sprite address for digit VB
$6EC    $5C10   SE       VC, V1          ; Skip if VC == V1
$6EE    $81CE   SHL      V1              ; V1 <<= 1, VF = MSB
$6F0    $9EE5   UNKNOWN  $9EE5           ; Unknown 9xxx instruction
$6F2    $4059   SNE      V0, #59         ; Skip if V0 != 89
$6F4    $B67F   JP       V0, $67F        ; Jump to V0 + 67F
$6F6    $6CB9   LD       VC, #B9         ; Load 185 into VC
$6F8    $AFC8   LD       I, $FC8         ; Load FC8 into I
$6FA    $9952   UNKNOWN  $9952           ; Unknown 9xxx instruction
$6FC    $9CC2   UNKNOWN  $9CC2           ; Unknown 9xxx instruction
$6FE    $B2BF   JP       V0, $2BF        ; Jump to V0 + 2BF
$700    $5BF5   UNKNOWN  $5BF5           ; Unknown 5xxx instruction
$702    $6758   LD       V7, #58         ; Load 88 into V7
$704    $DB55   DRW      VB, V5, #5      ; Draw 5-byte sprite at VB, V5
$706    $16B5   JP       $6B5            ; Jump to 6B5
$708    $FFB8   UNKNOWN  FFB8            ; Unknown Fxxx instruction
$70A    $14C2   JP       $4C2            ; Jump to 4C2
$70C    $5D4B   UNKNOWN  $5D4B           ; Unknown 5xxx instruction
$70E    $C5C2   RND      V5, #C2         ; V5 = random & C2
$710    $E473   UNKNOWN  $E473           ; Unknown Exxx instruction
$712    $325A   SE       V2, #5A         ; Skip if V2 == 90
$714    $891C   UNKNOWN  891C            ; Unknown 8xxx instruction
$716    $8870   LD       V8, V7          ; V8 = V7
$718    $0F5A   SYS      $F5A            ; System call to F5A
$71A    $81AF   UNKNOWN  81AF            ; Unknown 8xxx instruction
$71C    $0A30   SYS      $A30            ; System call to A30
$71E    $CD36   RND      VD, #36         ; VD = random & 36
$720    $B3FB   JP       V0, $3FB        ; Jump to V0 + 3FB
$722    $CE09   RND      VE, #09         ; VE = random & 09
$724    $1BEC   JP       $BEC            ; Jump to BEC
$726    $4314   SNE      V3, #14         ; Skip if V3 != 20
$728    $92F9   UNKNOWN  $92F9           ; Unknown 9xxx instruction
$72A    $167F   JP       $67F            ; Jump to 67F
$72C    $5EFF   UNKNOWN  $5EFF           ; Unknown 5xxx instruction
$72E    $B847   JP       V0, $847        ; Jump to V0 + 847
$730    $E13D   UNKNOWN  $E13D           ; Unknown Exxx instruction
$732    $2840   CALL     $840            ; Call subroutine at 840
$734    $6458   LD       V4, #58         ; Load 88 into V4
$736    $AEF9   LD       I, $EF9         ; Load EF9 into I
$738    $D3D0   DRW      V3, VD, #0      ; Draw 0-byte sprite at V3, VD
$73A    $AAE0   LD       I, $AE0         ; Load AE0 into I
$73C    $BEAE   JP       V0, $EAE        ; Jump to V0 + EAE
$73E    $05AC   SYS      $5AC            ; System call to 5AC
$740    $8C75   SUB      VC, V7          ; VC -= V7, VF = !borrow
$742    $8321   OR       V3, V2          ; V3 |= V2
$744    $E550   UNKNOWN  $E550           ; Unknown Exxx instruction
$746    $6FC8   LD       VF, #C8         ; Load 200 into VF
$748    $CC43   RND      VC, #43         ; VC = random & 43
$74A    $73CB   ADD      V3, #CB         ; Add 203 to V3
$74C    $4417   SNE      V4, #17         ; Skip if V4 != 23
$74E    $2630   CALL     $630            ; Call subroutine at 630
$750    $F378   UNKNOWN  F378            ; Unknown Fxxx instruction
$752    $AF0B   LD       I, $F0B         ; Load F0B into I
$754    $743F   ADD      V4, #3F         ; Add 63 to V4
$756    $CFFA   RND      VF, #FA         ; VF = random & FA
$758    $13F5   JP       $3F5            ; Jump to 3F5
$75A    $5CB6   UNKNOWN  $5CB6           ; Unknown 5xxx instruction
$75C    $72C5   ADD      V2, #C5         ; Add 197 to V2
$75E    $58B0   SE       V8, VB          ; Skip if V8 == VB
$760    $5034   UNKNOWN  $5034           ; Unknown 5xxx instruction
$762    $1325   JP       $325            ; Jump to 325
$764    $9725   UNKNOWN  $9725           ; Unknown 9xxx instruction
$766    $8CF4   ADD      VC, VF          ; VC += VF, VF = carry
$768    $BD60   JP       V0, $D60        ; Jump to V0 + D60
$76A    $96BB   UNKNOWN  $96BB           ; Unknown 9xxx instruction
$76C    $D937   DRW      V9, V3, #7      ; Draw 7-byte sprite at V9, V3
$76E    $7873   ADD      V8, #73         ; Add 115 to V8
$770    $D570   DRW      V5, V7, #0      ; Draw 0-byte sprite at V5, V7
$772    $540C   UNKNOWN  $540C           ; Unknown 5xxx instruction
$774    $D979   DRW      V9, V7, #9      ; Draw 9-byte sprite at V9, V7
$776    $3578   SE       V5, #78         ; Skip if V5 == 120
$778    $4CF6   SNE      VC, #F6         ; Skip if VC != 246
$77A    $13C8   JP       $3C8            ; Jump to 3C8
$77C    $5FAF   UNKNOWN  $5FAF           ; Unknown 5xxx instruction
$77E    $C295   RND      V2, #95         ; V2 = random & 95
$780    $0EFA   SYS      $EFA            ; System call to EFA
$782    $7AD3   ADD      VA, #D3         ; Add 211 to VA
$784    $7D8D   ADD      VD, #8D         ; Add 141 to VD
$786    $4A97   SNE      VA, #97         ; Skip if VA != 151
$788    $06BE   SYS      $6BE            ; System call to 6BE
$78A    $E7FA   UNKNOWN  $E7FA           ; Unknown Exxx instruction
$78C    $6610   LD       V6, #10         ; Load 16 into V6
$78E    $8E30   LD       VE, V3          ; VE = V3
$790    $7643   ADD      V6, #43         ; Add 67 to V6
$792    $7BC3   ADD      VB, #C3         ; Add 195 to VB
$794    $4932   SNE      V9, #32         ; Skip if V9 != 50
$796    $74FC   ADD      V4, #FC         ; Add 252 to V4
$798    $5FBA   UNKNOWN  $5FBA           ; Unknown 5xxx instruction
$79A    $0982   SYS      $982            ; System call to 982
$79C    $E8EF   UNKNOWN  $E8EF           ; Unknown Exxx instruction
$79E    $1881   JP       $881            ; Jump to 881
$7A0    $E03B   UNKNOWN  $E03B           ; Unknown Exxx instruction
$7A2    $8ED4   ADD      VE, VD          ; VE += VD, VF = carry
$7A4    $D695   DRW      V6, V9, #5      ; Draw 5-byte sprite at V6, V9
$7A6    $BB5F   JP       V0, $B5F        ; Jump to V0 + B5F
$7A8    $ABE8   LD       I, $BE8         ; Load BE8 into I
$7AA    $E71A   UNKNOWN  $E71A           ; Unknown Exxx instruction
$7AC    $FFE2   UNKNOWN  FFE2            ; Unknown Fxxx instruction
$7AE    $3FB6   SE       VF, #B6         ; Skip if VF == 182
$7B0    $1418   JP       $418            ; Jump to 418
$7B2    $7A00   ADD      VA, #00         ; Add 0 to VA
$7B4    $15B6   JP       $5B6            ; Jump to 5B6
$7B6    $52ED   UNKNOWN  $52ED           ; Unknown 5xxx instruction
$7B8    $0E22   SYS      $E22            ; System call to E22
$7BA    $679E   LD       V7, #9E         ; Load 158 into V7
$7BC    $67B1   LD       V7, #B1         ; Load 177 into V7
$7BE    $654F   LD       V5, #4F         ; Load 79 into V5
$7C0    $5FF2   UNKNOWN  $5FF2           ; Unknown 5xxx instruction
$7C2    $6FB1   LD       VF, #B1         ; Load 177 into VF
$7C4    $A002   LD       I, $002         ; Load 002 into I
$7C6    $39A3   SE       V9, #A3         ; Skip if V9 == 163
$7C8    $DE1F   DRW      VE, V1, #F      ; Draw 15-byte sprite at VE, V1
$7CA    $BB3D   JP       V0, $B3D        ; Jump to V0 + B3D
$7CC    $8F99   UNKNOWN  8F99            ; Unknown 8xxx instruction
$7CE    $2FFD   CALL     $FFD            ; Call subroutine at FFD
$7D0    $7345   ADD      V3, #45         ; Add 69 to V3
$7D2    $2512   CALL     $512            ; Call subroutine at 512
$7D4    $F811   UNKNOWN  F811            ; Unknown Fxxx instruction
$7D6    $0AAF   SYS      $AAF            ; System call to AAF
$7D8    $7888   ADD      V8, #88         ; Add 136 to V8
$7DA    $06E2   SYS      $6E2            ; System call to 6E2
$7DC    $93B6   UNKNOWN  $93B6           ; Unknown 9xxx instruction
$7DE    $C62F   RND      V6, #2F         ; V6 = random & 2F
$7E0    $1B52   JP       $B52            ; Jump to B52
$7E2    $B3B1   JP       V0, $3B1        ; Jump to V0 + 3B1
$7E4    $B8D9   JP       V0, $8D9        ; Jump to V0 + 8D9
$7E6    $70D0   ADD      V0, #D0         ; Add 208 to V0
$7E8    $192F   JP       $92F            ; Jump to 92F
$7EA    $63A3   LD       V3, #A3         ; Load 163 into V3
$7EC    $A516   LD       I, $516         ; Load 516 into I
$7EE    $9505   UNKNOWN  $9505           ; Unknown 9xxx instruction
$7F0    $F2C8   UNKNOWN  F2C8            ; Unknown Fxxx instruction
$7F2    $E094   UNKNOWN  $E094           ; Unknown Exxx instruction
$7F4    $A598   LD       I, $598         ; Load 598 into I
$7F6    $AB33   LD       I, $B33         ; Load B33 into I
$7F8    $59EE   UNKNOWN  $59EE           ; Unknown 5xxx instruction
$7FA    $6609   LD       V6, #09         ; Load 9 into V6
$7FC    $5694   UNKNOWN  $5694           ; Unknown 5xxx instruction
$7FE    $52B6   UNKNOWN  $52B6           ; Unknown 5xxx instruction
$800    $5267   UNKNOWN  $5267           ; Unknown 5xxx instruction
$802    $D60B   DRW      V6, V0, #B      ; Draw 11-byte sprite at V6, V0
$804    $2ADC   CALL     $ADC            ; Call subroutine at ADC
$806    $A012   LD       I, $012         ; Load 012 into I
$808    $3081   SE       V0, #81         ; Skip if V0 == 129
$80A    $F927   UNKNOWN  F927            ; Unknown Fxxx instruction
$80C    $F70B   UNKNOWN  F70B            ; Unknown Fxxx instruction
$80E    $B82F   JP       V0, $82F        ; Jump to V0 + 82F
$810    $C008   RND      V0, #08         ; V0 = random & 08
$812    $5EF0   SE       VE, VF          ; Skip if VE == VF
$814    $5858   UNKNOWN  $5858           ; Unknown 5xxx instruction
$816    $F7C5   UNKNOWN  F7C5            ; Unknown Fxxx instruction
$818    $F909   UNKNOWN  F909            ; Unknown Fxxx instruction
$81A    $313C   SE       V1, #3C         ; Skip if V1 == 60
$81C    $7535   ADD      V5, #35         ; Add 53 to V5
$81E    $F2A7   UNKNOWN  F2A7            ; Unknown Fxxx instruction
$820    $28B4   CALL     $8B4            ; Call subroutine at 8B4
$822    $F43D   UNKNOWN  F43D            ; Unknown Fxxx instruction
$824    $1F75   JP       $F75            ; Jump to F75
$826    $2B84   CALL     $B84            ; Call subroutine at B84
$828    $C9DE   RND      V9, #DE         ; V9 = random & DE
$82A    $A6BE   LD       I, $6BE         ; Load 6BE into I
$82C    $7BE8   ADD      VB, #E8         ; Add 232 to VB
$82E    $E6A8   UNKNOWN  $E6A8           ; Unknown Exxx instruction
$830    $B0E0   JP       V0, $0E0        ; Jump to V0 + 0E0
$832    $4508   SNE      V5, #08         ; Skip if V5 != 8
$834    $2064   CALL     $064            ; Call subroutine at 064
$836    $94F2   UNKNOWN  $94F2           ; Unknown 9xxx instruction
$838    $90B8   UNKNOWN  $90B8           ; Unknown 9xxx instruction
$83A    $8404   ADD      V4, V0          ; V4 += V0, VF = carry
$83C    $B011   JP       V0, $011        ; Jump to V0 + 011
$83E    $1495   JP       $495            ; Jump to 495
$840    $28AC   CALL     $8AC            ; Call subroutine at 8AC
$842    $08DC   SYS      $8DC            ; System call to 8DC
$844    $8C3A   UNKNOWN  8C3A            ; Unknown 8xxx instruction
$846    $2CCF   CALL     $CCF            ; Call subroutine at CCF
$848    $DE2B   DRW      VE, V2, #B      ; Draw 11-byte sprite at VE, V2
$84A    $F209   UNKNOWN  F209            ; Unknown Fxxx instruction
$84C    $D47F   DRW      V4, V7, #F      ; Draw 15-byte sprite at V4, V7
$84E    $36AB   SE       V6, #AB         ; Skip if V6 == 171
$850    $A41F   LD       I, $41F         ; Load 41F into I
$852    $432E   SNE      V3, #2E         ; Skip if V3 != 46
$854    $454B   SNE      V5, #4B         ; Skip if V5 != 75
$856    $E5C2   UNKNOWN  $E5C2           ; Unknown Exxx instruction
$858    $58DF   UNKNOWN  $58DF           ; Unknown 5xxx instruction
$85A    $B23D   JP       V0, $23D        ; Jump to V0 + 23D
$85C    $F90E   UNKNOWN  F90E            ; Unknown Fxxx instruction
$85E    $81DD   UNKNOWN  81DD            ; Unknown 8xxx instruction
$860    $F0D5   UNKNOWN  F0D5            ; Unknown Fxxx instruction
$862    $E870   UNKNOWN  $E870           ; Unknown Exxx instruction
$864    $4B4C   SNE      VB, #4C         ; Skip if VB != 76
$866    $31AE   SE       V1, #AE         ; Skip if V1 == 174
$868    $4394   SNE      V3, #94         ; Skip if V3 != 148
$86A    $44B1   SNE      V4, #B1         ; Skip if V4 != 177
$86C    $9B4A   UNKNOWN  $9B4A           ; Unknown 9xxx instruction
$86E    $4800   SNE      V8, #00         ; Skip if V8 != 0
$870    $E164   UNKNOWN  $E164           ; Unknown Exxx instruction
$872    $DE85   DRW      VE, V8, #5      ; Draw 5-byte sprite at VE, V8
$874    $FAC1   UNKNOWN  FAC1            ; Unknown Fxxx instruction
$876    $F951   UNKNOWN  F951            ; Unknown Fxxx instruction
$878    $76A2   ADD      V6, #A2         ; Add 162 to V6
$87A    $1831   JP       $831            ; Jump to 831
$87C    $BE38   JP       V0, $E38        ; Jump to V0 + E38
$87E    $FDF0   UNKNOWN  FDF0            ; Unknown Fxxx instruction
$880    $E908   UNKNOWN  $E908           ; Unknown Exxx instruction
$882    $7020   ADD      V0, #20         ; Add 32 to V0
$884    $375E   SE       V7, #5E         ; Skip if V7 == 94
$886    $9F05   UNKNOWN  $9F05           ; Unknown 9xxx instruction
$888    $2E75   CALL     $E75            ; Call subroutine at E75
$88A    $46F5   SNE      V6, #F5         ; Skip if V6 != 245
$88C    $C147   RND      V1, #47         ; V1 = random & 47
$88E    $554B   UNKNOWN  $554B           ; Unknown 5xxx instruction
$890    $D875   DRW      V8, V7, #5      ; Draw 5-byte sprite at V8, V7
$892    $4C7B   SNE      VC, #7B         ; Skip if VC != 123
$894    $4499   SNE      V4, #99         ; Skip if V4 != 153
$896    $9316   UNKNOWN  $9316           ; Unknown 9xxx instruction
$898    $FD5C   UNKNOWN  FD5C            ; Unknown Fxxx instruction
$89A    $16B6   JP       $6B6            ; Jump to 6B6
$89C    $D66A   DRW      V6, V6, #A      ; Draw 10-byte sprite at V6, V6
$89E    $8F5B   UNKNOWN  8F5B            ; Unknown 8xxx instruction
$8A0    $C35F   RND      V3, #5F         ; V3 = random & 5F
$8A2    $8A73   XOR      VA, V7          ; VA ^= V7
$8A4    $5B7B   UNKNOWN  $5B7B           ; Unknown 5xxx instruction
$8A6    $E019   UNKNOWN  $E019           ; Unknown Exxx instruction
$8A8    $319D   SE       V1, #9D         ; Skip if V1 == 157
$8AA    $299D   CALL     $99D            ; Call subroutine at 99D
$8AC    $5941   UNKNOWN  $5941           ; Unknown 5xxx instruction
$8AE    $BCE2   JP       V0, $CE2        ; Jump to V0 + CE2
$8B0    $D593   DRW      V5, V9, #3      ; Draw 3-byte sprite at V5, V9
$8B2    $7DEB   ADD      VD, #EB         ; Add 235 to VD
$8B4    $356C   SE       V5, #6C         ; Skip if V5 == 108
$8B6    $3614   SE       V6, #14         ; Skip if V6 == 20
$8B8    $A931   LD       I, $931         ; Load 931 into I
$8BA    $6E9A   LD       VE, #9A         ; Load 154 into VE
$8BC    $9E78   UNKNOWN  $9E78           ; Unknown 9xxx instruction
$8BE    $6010   LD       V0, #10         ; Load 16 into V0
$8C0    $C2ED   RND      V2, #ED         ; V2 = random & ED
$8C2    $C794   RND      V7, #94         ; V7 = random & 94
$8C4    $D828   DRW      V8, V2, #8      ; Draw 8-byte sprite at V8, V2
$8C6    $5E0C   UNKNOWN  $5E0C           ; Unknown 5xxx instruction
$8C8    $C0B4   RND      V0, #B4         ; V0 = random & B4
$8CA    $5E87   UNKNOWN  $5E87           ; Unknown 5xxx instruction
$8CC    $4593   SNE      V5, #93         ; Skip if V5 != 147
$8CE    $A4B0   LD       I, $4B0         ; Load 4B0 into I
$8D0    $95F2   UNKNOWN  $95F2           ; Unknown 9xxx instruction
$8D2    $310D   SE       V1, #0D         ; Skip if V1 == 13
$8D4    $0C2F   SYS      $C2F            ; System call to C2F
$8D6    $2208   CALL     $208            ; Call subroutine at 208
$8D8    $464F   SNE      V6, #4F         ; Skip if V6 != 79
$8DA    $AE1D   LD       I, $E1D         ; Load E1D into I
$8DC    $C25E   RND      V2, #5E         ; V2 = random & 5E
$8DE    $10DC   JP       $0DC            ; Jump to 0DC
$8E0    $D1E1   DRW      V1, VE, #1      ; Draw 1-byte sprite at V1, VE
$8E2    $F429   LD       F, V4           ; I = sprite address for digit V4
$8E4    $CE90   RND      VE, #90         ; VE = random & 90
$8E6    $7BE4   ADD      VB, #E4         ; Add 228 to VB
$8E8    $EFB5   UNKNOWN  $EFB5           ; Unknown Exxx instruction
$8EA    $3716   SE       V7, #16         ; Skip if V7 == 22
$8EC    $9066   UNKNOWN  $9066           ; Unknown 9xxx instruction
$8EE    $791F   ADD      V9, #1F         ; Add 31 to V9
$8F0    $33EA   SE       V3, #EA         ; Skip if V3 == 234
$8F2    $41F2   SNE      V1, #F2         ; Skip if V1 != 242
$8F4    $F725   UNKNOWN  F725            ; Unknown Fxxx instruction
$8F6    $E26D   UNKNOWN  $E26D           ; Unknown Exxx instruction
$8F8    $329B   SE       V2, #9B         ; Skip if V2 == 155
$8FA    $C84B   RND      V8, #4B         ; V8 = random & 4B
$8FC    $5A31   UNKNOWN  $5A31           ; Unknown 5xxx instruction
$8FE    $94AC   UNKNOWN  $94AC           ; Unknown 9xxx instruction
$900    $42AF   SNE      V2, #AF         ; Skip if V2 != 175
$902    $E9AC   UNKNOWN  $E9AC           ; Unknown Exxx instruction
$904    $F194   UNKNOWN  F194            ; Unknown Fxxx instruction
$906    $3A63   SE       VA, #63         ; Skip if VA == 99
$908    $0220   SYS      $220            ; System call to 220
$90A    $4F15   SNE      VF, #15         ; Skip if VF != 21
$90C    $FD23   UNKNOWN  FD23            ; Unknown Fxxx instruction
$90E    $4476   SNE      V4, #76         ; Skip if V4 != 118
$910    $4B7E   SNE      VB, #7E         ; Skip if VB != 126
$912    $99DB   UNKNOWN  $99DB           ; Unknown 9xxx instruction
$914    $69DA   LD       V9, #DA         ; Load 218 into V9
$916    $A786   LD       I, $786         ; Load 786 into I
$918    $A2D4   LD       I, $2D4         ; Load 2D4 into I
$91A    $F8CF   UNKNOWN  F8CF            ; Unknown Fxxx instruction
$91C    $3A59   SE       VA, #59         ; Skip if VA == 89
$91E    $12A0   JP       $2A0            ; Jump to 2A0
$920    $0910   SYS      $910            ; System call to 910
$922    $E389   UNKNOWN  $E389           ; Unknown Exxx instruction
$924    $D2AF   DRW      V2, VA, #F      ; Draw 15-byte sprite at V2, VA
$926    $6907   LD       V9, #07         ; Load 7 into V9
$928    $86D7   SUBN     V6, VD          ; V6 = VD - V6, VF = !borrow
$92A    $B8D5   JP       V0, $8D5        ; Jump to V0 + 8D5
$92C    $AEF8   LD       I, $EF8         ; Load EF8 into I
$92E    $A244   LD       I, $244         ; Load 244 into I
$930    $D1A3   DRW      V1, VA, #3      ; Draw 3-byte sprite at V1, VA
$932    $2B5D   CALL     $B5D            ; Call subroutine at B5D
$934    $FB65   LD       VB, [I]         ; Load V0-VB from I
$936    $1F1D   JP       $F1D            ; Jump to F1D
$938    $58B6   UNKNOWN  $58B6           ; Unknown 5xxx instruction
$93A    $BA1B   JP       V0, $A1B        ; Jump to V0 + A1B
$93C    $974C   UNKNOWN  $974C           ; Unknown 9xxx instruction
$93E    $08E0   SYS      $8E0            ; System call to 8E0
$940    $0733   SYS      $733            ; System call to 733
$942    $B67C   JP       V0, $67C        ; Jump to V0 + 67C
$944    $E8D0   UNKNOWN  $E8D0           ; Unknown Exxx instruction
$946    $9F0E   UNKNOWN  $9F0E           ; Unknown 9xxx instruction
$948    $1B49   JP       $B49            ; Jump to B49
$94A    $C64E   RND      V6, #4E         ; V6 = random & 4E
$94C    $F43F   UNKNOWN  F43F            ; Unknown Fxxx instruction
$94E    $7393   ADD      V3, #93         ; Add 147 to V3
$950    $27C9   CALL     $7C9            ; Call subroutine at 7C9
$952    $938D   UNKNOWN  $938D           ; Unknown 9xxx instruction
$954    $A97D   LD       I, $97D         ; Load 97D into I
$956    $1F58   JP       $F58            ; Jump to F58
$958    $3CAE   SE       VC, #AE         ; Skip if VC == 174
$95A    $A635   LD       I, $635         ; Load 635 into I
$95C    $5C76   UNKNOWN  $5C76           ; Unknown 5xxx instruction
$95E    $1F63   JP       $F63            ; Jump to F63
$960    $77E6   ADD      V7, #E6         ; Add 230 to V7
$962    $6D55   LD       VD, #55         ; Load 85 into VD
$964    $D3AF   DRW      V3, VA, #F      ; Draw 15-byte sprite at V3, VA
$966    $8E9C   UNKNOWN  8E9C            ; Unknown 8xxx instruction
$968    $D907   DRW      V9, V0, #7      ; Draw 7-byte sprite at V9, V0
$96A    $ECC5   UNKNOWN  $ECC5           ; Unknown Exxx instruction
$96C    $CBC1   RND      VB, #C1         ; VB = random & C1
$96E    $29E6   CALL     $9E6            ; Call subroutine at 9E6
$970    $3C7E   SE       VC, #7E         ; Skip if VC == 126
$972    $12AA   JP       $2AA            ; Jump to 2AA
$974    $ED54   UNKNOWN  $ED54           ; Unknown Exxx instruction
$976    $A52B   LD       I, $52B         ; Load 52B into I
$978    $5965   UNKNOWN  $5965           ; Unknown 5xxx instruction
$97A    $3495   SE       V4, #95         ; Skip if V4 == 149
$97C    $9F9C   UNKNOWN  $9F9C           ; Unknown 9xxx instruction
$97E    $D3EF   DRW      V3, VE, #F      ; Draw 15-byte sprite at V3, VE
$980    $C9FE   RND      V9, #FE         ; V9 = random & FE
$982    $098F   SYS      $98F            ; System call to 98F
$984    $56BF   UNKNOWN  $56BF           ; Unknown 5xxx instruction
$986    $9148   UNKNOWN  $9148           ; Unknown 9xxx instruction
$988    $A246   LD       I, $246         ; Load 246 into I
$98A    $46EB   SNE      V6, #EB         ; Skip if V6 != 235
$98C    $DDC1   DRW      VD, VC, #1      ; Draw 1-byte sprite at VD, VC
$98E    $0A8E   SYS      $A8E            ; System call to A8E
$990    $2514   CALL     $514            ; Call subroutine at 514
$992    $1AD3   JP       $AD3            ; Jump to AD3
$994    $ECEC   UNKNOWN  $ECEC           ; Unknown Exxx instruction
$996    $0201   SYS      $201            ; System call to 201
$998    $1B41   JP       $B41            ; Jump to B41
$99A    $BDB4   JP       V0, $DB4        ; Jump to V0 + DB4
$99C    $2A94   CALL     $A94            ; Call subroutine at A94
$99E    $6955   LD       V9, #55         ; Load 85 into V9
$9A0    $9EF8   UNKNOWN  $9EF8           ; Unknown 9xxx instruction
$9A2    $14E7   JP       $4E7            ; Jump to 4E7
$9A4    $A0F9   LD       I, $0F9         ; Load 0F9 into I
$9A6    $EDF0   UNKNOWN  $EDF0           ; Unknown Exxx instruction
$9A8    $5510   SE       V5, V1          ; Skip if V5 == V1
$9AA    $5422   UNKNOWN  $5422           ; Unknown 5xxx instruction
$9AC    $A220   LD       I, $220         ; Load 220 into I
$9AE    $4DEA   SNE      VD, #EA         ; Skip if VD != 234
$9B0    $7010   ADD      V0, #10         ; Add 16 to V0
$9B2    $D411   DRW      V4, V1, #1      ; Draw 1-byte sprite at V4, V1
$9B4    $919B   UNKNOWN  $919B           ; Unknown 9xxx instruction
$9B6    $4A24   SNE      VA, #24         ; Skip if VA != 36
$9B8    $6BB2   LD       VB, #B2         ; Load 178 into VB
$9BA    $7C6B   ADD      VC, #6B         ; Add 107 to VC
$9BC    $0192   SYS      $192            ; System call to 192
$9BE    $4DAA   SNE      VD, #AA         ; Skip if VD != 170
$9C0    $FA1A   UNKNOWN  FA1A            ; Unknown Fxxx instruction
$9C2    $B5FE   JP       V0, $5FE        ; Jump to V0 + 5FE
$9C4    $B579   JP       V0, $579        ; Jump to V0 + 579
$9C6    $2FEA   CALL     $FEA            ; Call subroutine at FEA
$9C8    $6DA5   LD       VD, #A5         ; Load 165 into VD
$9CA    $9C27   UNKNOWN  $9C27           ; Unknown 9xxx instruction
$9CC    $B2B8   JP       V0, $2B8        ; Jump to V0 + 2B8
$9CE    $E271   UNKNOWN  $E271           ; Unknown Exxx instruction
$9D0    $70C5   ADD      V0, #C5         ; Add 197 to V0
$9D2    $F4DD   UNKNOWN  F4DD            ; Unknown Fxxx instruction
$9D4    $23A3   CALL     $3A3            ; Call subroutine at 3A3
$9D6    $CB61   RND      VB, #61         ; VB = random & 61
$9D8    $0631   SYS      $631            ; System call to 631
$9DA    $88B1   OR       V8, VB          ; V8 |= VB
$9DC    $32FA   SE       V2, #FA         ; Skip if V2 == 250
$9DE    $D7FE   DRW      V7, VF, #E      ; Draw 14-byte sprite at V7, VF
$9E0    $E651   UNKNOWN  $E651           ; Unknown Exxx instruction
$9E2    $5423   UNKNOWN  $5423           ; Unknown 5xxx instruction
$9E4    $1A15   JP       $A15            ; Jump to A15
$9E6    $CDC5   RND      VD, #C5         ; VD = random & C5
$9E8    $8C82   AND      VC, V8          ; VC &= V8
$9EA    $D275   DRW      V2, V7, #5      ; Draw 5-byte sprite at V2, V7
$9EC    $F289   UNKNOWN  F289            ; Unknown Fxxx instruction
$9EE    $8411   OR       V4, V1          ; V4 |= V1
$9F0    $8FE2   AND      VF, VE          ; VF &= VE
$9F2    $A653   LD       I, $653         ; Load 653 into I
$9F4    $BD9C   JP       V0, $D9C        ; Jump to V0 + D9C
$9F6    $9ADF   UNKNOWN  $9ADF           ; Unknown 9xxx instruction
$9F8    $F7A8   UNKNOWN  F7A8            ; Unknown Fxxx instruction
$9FA    $9655   UNKNOWN  $9655           ; Unknown 9xxx instruction
$9FC    $9E45   UNKNOWN  $9E45           ; Unknown 9xxx instruction
$9FE    $1AC8   JP       $AC8            ; Jump to AC8
$A00    $6470   LD       V4, #70         ; Load 112 into V4
$A02    $7711   ADD      V7, #11         ; Add 17 to V7
$A04    $B9EF   JP       V0, $9EF        ; Jump to V0 + 9EF
$A06    $F7B2   UNKNOWN  F7B2            ; Unknown Fxxx instruction
$A08    $1651   JP       $651            ; Jump to 651
$A0A    $53D0   SE       V3, VD          ; Skip if V3 == VD
$A0C    $DD71   DRW      VD, V7, #1      ; Draw 1-byte sprite at VD, V7
$A0E    $EA3E   UNKNOWN  $EA3E           ; Unknown Exxx instruction
$A10    $04B0   SYS      $4B0            ; System call to 4B0
$A12    $8C48   UNKNOWN  8C48            ; Unknown 8xxx instruction
$A14    $6A9F   LD       VA, #9F         ; Load 159 into VA
$A16    $B99D   JP       V0, $99D        ; Jump to V0 + 99D
$A18    $92A9   UNKNOWN  $92A9           ; Unknown 9xxx instruction
$A1A    $E45F   UNKNOWN  $E45F           ; Unknown Exxx instruction
$A1C    $1FC0   JP       $FC0            ; Jump to FC0
$A1E    $50EC   UNKNOWN  $50EC           ; Unknown 5xxx instruction
$A20    $F004   UNKNOWN  F004            ; Unknown Fxxx instruction
$A22    $98BD   UNKNOWN  $98BD           ; Unknown 9xxx instruction
$A24    $FB0E   UNKNOWN  FB0E            ; Unknown Fxxx instruction
$A26    $9A65   UNKNOWN  $9A65           ; Unknown 9xxx instruction
$A28    $8047   SUBN     V0, V4          ; V0 = V4 - V0, VF = !borrow
$A2A    $2498   CALL     $498            ; Call subroutine at 498
$A2C    $A255   LD       I, $255         ; Load 255 into I
$A2E    $552E   UNKNOWN  $552E           ; Unknown 5xxx instruction
$A30    $5E2B   UNKNOWN  $5E2B           ; Unknown 5xxx instruction
$A32    $4C37   SNE      VC, #37         ; Skip if VC != 55
$A34    $ABD4   LD       I, $BD4         ; Load BD4 into I
$A36    $38AD   SE       V8, #AD         ; Skip if V8 == 173
$A38    $7BF0   ADD      VB, #F0         ; Add 240 to VB
$A3A    $A3FC   LD       I, $3FC         ; Load 3FC into I
$A3C    $405B   SNE      V0, #5B         ; Skip if V0 != 91
$A3E    $145B   JP       $45B            ; Jump to 45B
$A40    $07CA   SYS      $7CA            ; System call to 7CA
$A42    $1D81   JP       $D81            ; Jump to D81
$A44    $1FC5   JP       $FC5            ; Jump to FC5
$A46    $3506   SE       V5, #06         ; Skip if V5 == 6
$A48    $9C43   UNKNOWN  $9C43           ; Unknown 9xxx instruction
$A4A    $DF3D   DRW      VF, V3, #D      ; Draw 13-byte sprite at VF, V3
$A4C    $41A9   SNE      V1, #A9         ; Skip if V1 != 169
$A4E    $5ED6   UNKNOWN  $5ED6           ; Unknown 5xxx instruction
$A50    $64FA   LD       V4, #FA         ; Load 250 into V4
$A52    $2503   CALL     $503            ; Call subroutine at 503
$A54    $15D7   JP       $5D7            ; Jump to 5D7
$A56    $E9DD   UNKNOWN  $E9DD           ; Unknown Exxx instruction
$A58    $75DD   ADD      V5, #DD         ; Add 221 to V5
$A5A    $4C57   SNE      VC, #57         ; Skip if VC != 87
$A5C    $4EAE   SNE      VE, #AE         ; Skip if VE != 174
$A5E    $D4D8   DRW      V4, VD, #8      ; Draw 8-byte sprite at V4, VD
$A60    $CABF   RND      VA, #BF         ; VA = random & BF
$A62    $0588   SYS      $588            ; System call to 588
$A64    $754D   ADD      V5, #4D         ; Add 77 to V5
$A66    $BFFC   JP       V0, $FFC        ; Jump to V0 + FFC
$A68    $9CE0   SNE      VC, VE          ; Skip if VC != VE
$A6A    $59CC   UNKNOWN  $59CC           ; Unknown 5xxx instruction
$A6C    $6D69   LD       VD, #69         ; Load 105 into VD
$A6E    $0957   SYS      $957            ; System call to 957
$A70    $5068   UNKNOWN  $5068           ; Unknown 5xxx instruction
$A72    $3A7E   SE       VA, #7E         ; Skip if VA == 126
$A74    $9265   UNKNOWN  $9265           ; Unknown 9xxx instruction
$A76    $AA10   LD       I, $A10         ; Load A10 into I
$A78    $1CEA   JP       $CEA            ; Jump to CEA
$A7A    $6A47   LD       VA, #47         ; Load 71 into VA
$A7C    $E4DA   UNKNOWN  $E4DA           ; Unknown Exxx instruction
$A7E    $DC23   DRW      VC, V2, #3      ; Draw 3-byte sprite at VC, V2
$A80    $4D0F   SNE      VD, #0F         ; Skip if VD != 15
$A82    $BED8   JP       V0, $ED8        ; Jump to V0 + ED8
$A84    $5C42   UNKNOWN  $5C42           ; Unknown 5xxx instruction
$A86    $3ED9   SE       VE, #D9         ; Skip if VE == 217
$A88    $B8B5   JP       V0, $8B5        ; Jump to V0 + 8B5
$A8A    $5CFF   UNKNOWN  $5CFF           ; Unknown 5xxx instruction
$A8C    $1F50   JP       $F50            ; Jump to F50
$A8E    $3B41   SE       VB, #41         ; Skip if VB == 65
$A90    $C0D1   RND      V0, #D1         ; V0 = random & D1
$A92    $95DB   UNKNOWN  $95DB           ; Unknown 9xxx instruction
$A94    $A2A5   LD       I, $2A5         ; Load 2A5 into I
$A96    $2213   CALL     $213            ; Call subroutine at 213
$A98    $1022   JP       $022            ; Jump to 022
$A9A    $2AEF   CALL     $AEF            ; Call subroutine at AEF
$A9C    $D4ED   DRW      V4, VE, #D      ; Draw 13-byte sprite at V4, VE
$A9E    $3FCD   SE       VF, #CD         ; Skip if VF == 205
$AA0    $0788   SYS      $788            ; System call to 788
$AA2    $ECF3   UNKNOWN  $ECF3           ; Unknown Exxx instruction
$AA4    $0DFB   SYS      $DFB            ; System call to DFB
$AA6    $3C55   SE       VC, #55         ; Skip if VC == 85
$AA8    $C576   RND      V5, #76         ; V5 = random & 76
$AAA    $C448   RND      V4, #48         ; V4 = random & 48
$AAC    $006E   SYS      $06E            ; System call to 06E
$AAE    $9148   UNKNOWN  $9148           ; Unknown 9xxx instruction
$AB0    $C865   RND      V8, #65         ; V8 = random & 65
$AB2    $53B1   UNKNOWN  $53B1           ; Unknown 5xxx instruction
$AB4    $5129   UNKNOWN  $5129           ; Unknown 5xxx instruction
$AB6    $7478   ADD      V4, #78         ; Add 120 to V4
$AB8    $0FCA   SYS      $FCA            ; System call to FCA
$ABA    $D17F   DRW      V1, V7, #F      ; Draw 15-byte sprite at V1, V7
$ABC    $A658   LD       I, $658         ; Load 658 into I
$ABE    $C6A0   RND      V6, #A0         ; V6 = random & A0
$AC0    $AFA8   LD       I, $FA8         ; Load FA8 into I
$AC2    $6337   LD       V3, #37         ; Load 55 into V3
$AC4    $3D6A   SE       VD, #6A         ; Skip if VD == 106
$AC6    $B09C   JP       V0, $09C        ; Jump to V0 + 09C
$AC8    $AA81   LD       I, $A81         ; Load A81 into I
$ACA    $9735   UNKNOWN  $9735           ; Unknown 9xxx instruction
$ACC    $908A   UNKNOWN  $908A           ; Unknown 9xxx instruction
$ACE    $45D8   SNE      V5, #D8         ; Skip if V5 != 216
$AD0    $2161   CALL     $161            ; Call subroutine at 161
$AD2    $DB7C   DRW      VB, V7, #C      ; Draw 12-byte sprite at VB, V7
$AD4    $2147   CALL     $147            ; Call subroutine at 147
$AD6    $83AD   UNKNOWN  83AD            ; Unknown 8xxx instruction
$AD8    $A8E3   LD       I, $8E3         ; Load 8E3 into I
$ADA    $01FB   SYS      $1FB            ; System call to 1FB
$ADC    $7191   ADD      V1, #91         ; Add 145 to V1
$ADE    $A51B   LD       I, $51B         ; Load 51B into I
$AE0    $F6E4   UNKNOWN  F6E4            ; Unknown Fxxx instruction
$AE2    $3733   SE       V7, #33         ; Skip if V7 == 51
$AE4    $4A62   SNE      VA, #62         ; Skip if VA != 98
$AE6    $FDEE   UNKNOWN  FDEE            ; Unknown Fxxx instruction
$AE8    $D29F   DRW      V2, V9, #F      ; Draw 15-byte sprite at V2, V9
$AEA    $72D9   ADD      V2, #D9         ; Add 217 to V2
$AEC    $CECA   RND      VE, #CA         ; VE = random & CA
$AEE    $7411   ADD      V4, #11         ; Add 17 to V4
$AF0    $71AE   ADD      V1, #AE         ; Add 174 to V1
$AF2    $AB4A   LD       I, $B4A         ; Load B4A into I
$AF4    $1DF5   JP       $DF5            ; Jump to DF5
$AF6    $059E   SYS      $59E            ; System call to 59E
$AF8    $4D05   SNE      VD, #05         ; Skip if VD != 5
$AFA    $28A1   CALL     $8A1            ; Call subroutine at 8A1
$AFC    $3E26   SE       VE, #26         ; Skip if VE == 38
$AFE    $C152   RND      V1, #52         ; V1 = random & 52
$B00    $C6C6   RND      V6, #C6         ; V6 = random & C6
$B02    $E00A   UNKNOWN  $E00A           ; Unknown Exxx instruction
$B04    $3AA2   SE       VA, #A2         ; Skip if VA == 162
$B06    $6AC5   LD       VA, #C5         ; Load 197 into VA
$B08    $B60F   JP       V0, $60F        ; Jump to V0 + 60F
$B0A    $1D85   JP       $D85            ; Jump to D85
$B0C    $C510   RND      V5, #10         ; V5 = random & 10
$B0E    $5802   UNKNOWN  $5802           ; Unknown 5xxx instruction
$B10    $9F0E   UNKNOWN  $9F0E           ; Unknown 9xxx instruction
$B12    $AAFE   LD       I, $AFE         ; Load AFE into I
$B14    $23CC   CALL     $3CC            ; Call subroutine at 3CC
$B16    $9F1B   UNKNOWN  $9F1B           ; Unknown 9xxx instruction
$B18    $E951   UNKNOWN  $E951           ; Unknown Exxx instruction
$B1A    $475F   SNE      V7, #5F         ; Skip if V7 != 95
$B1C    $2A79   CALL     $A79            ; Call subroutine at A79
$B1E    $AE93   LD       I, $E93         ; Load E93 into I
$B20    $7239   ADD      V2, #39         ; Add 57 to V2
$B22    $C8BA   RND      V8, #BA         ; V8 = random & BA
$B24    $BF4F   JP       V0, $F4F        ; Jump to V0 + F4F
$B26    $4807   SNE      V8, #07         ; Skip if V8 != 7
$B28    $75C4   ADD      V5, #C4         ; Add 196 to V5
$B2A    $C621   RND      V6, #21         ; V6 = random & 21
$B2C    $428C   SNE      V2, #8C         ; Skip if V2 != 140
$B2E    $A13D   LD       I, $13D         ; Load 13D into I
$B30    $CFA9   RND      VF, #A9         ; VF = random & A9
$B32    $A43B   LD       I, $43B         ; Load 43B into I
$B34    $80E0   LD       V0, VE          ; V0 = VE
$B36    $70B0   ADD      V0, #B0         ; Add 176 to V0
$B38    $A4A9   LD       I, $4A9         ; Load 4A9 into I
$B3A    $B283   JP       V0, $283        ; Jump to V0 + 283
$B3C    $A51D   LD       I, $51D         ; Load 51D into I
$B3E    $54D5   UNKNOWN  $54D5           ; Unknown 5xxx instruction
$B40    $7D5C   ADD      VD, #5C         ; Add 92 to VD
$B42    $3094   SE       V0, #94         ; Skip if V0 == 148
$B44    $5BE6   UNKNOWN  $5BE6           ; Unknown 5xxx instruction
$B46    $C75E   RND      V7, #5E         ; V7 = random & 5E
$B48    $E82A   UNKNOWN  $E82A           ; Unknown Exxx instruction
$B4A    $FDE0   UNKNOWN  FDE0            ; Unknown Fxxx instruction
$B4C    $0CDA   SYS      $CDA            ; System call to CDA
$B4E    $3243   SE       V2, #43         ; Skip if V2 == 67
$B50    $FC6F   UNKNOWN  FC6F            ; Unknown Fxxx instruction
$B52    $E411   UNKNOWN  $E411           ; Unknown Exxx instruction
$B54    $EBE4   UNKNOWN  $EBE4           ; Unknown Exxx instruction
$B56    $0B87   SYS      $B87            ; System call to B87
$B58    $0699   SYS      $699            ; System call to 699
$B5A    $79F0   ADD      V9, #F0         ; Add 240 to V9
$B5C    $B25C   JP       V0, $25C        ; Jump to V0 + 25C
$B5E    $F5A3   UNKNOWN  F5A3            ; Unknown Fxxx instruction
$B60    $6196   LD       V1, #96         ; Load 150 into V1
$B62    $E3B1   UNKNOWN  $E3B1           ; Unknown Exxx instruction
$B64    $D594   DRW      V5, V9, #4      ; Draw 4-byte sprite at V5, V9
$B66    $55A9   UNKNOWN  $55A9           ; Unknown 5xxx instruction
$B68    $2B27   CALL     $B27            ; Call subroutine at B27
$B6A    $3D15   SE       VD, #15         ; Skip if VD == 21
$B6C    $551F   UNKNOWN  $551F           ; Unknown 5xxx instruction
$B6E    $A8AE   LD       I, $8AE         ; Load 8AE into I
$B70    $962A   UNKNOWN  $962A           ; Unknown 9xxx instruction
$B72    $0C71   SYS      $C71            ; System call to C71
$B74    $0F91   SYS      $F91            ; System call to F91
$B76    $41EC   SNE      V1, #EC         ; Skip if V1 != 236
$B78    $C048   RND      V0, #48         ; V0 = random & 48
$B7A    $2372   CALL     $372            ; Call subroutine at 372
$B7C    $A275   LD       I, $275         ; Load 275 into I
$B7E    $1C3F   JP       $C3F            ; Jump to C3F
$B80    $8911   OR       V9, V1          ; V9 |= V1
$B82    $11C7   JP       $1C7            ; Jump to 1C7
$B84    $30A5   SE       V0, #A5         ; Skip if V0 == 165
$B86    $3C65   SE       VC, #65         ; Skip if VC == 101
$B88    $5859   UNKNOWN  $5859           ; Unknown 5xxx instruction
$B8A    $C46A   RND      V4, #6A         ; V4 = random & 6A
$B8C    $7036   ADD      V0, #36         ; Add 54 to V0
$B8E    $47CC   SNE      V7, #CC         ; Skip if V7 != 204
$B90    $5C60   SE       VC, V6          ; Skip if VC == V6
$B92    $6404   LD       V4, #04         ; Load 4 into V4
$B94    $53EF   UNKNOWN  $53EF           ; Unknown 5xxx instruction
$B96    $E857   UNKNOWN  $E857           ; Unknown Exxx instruction
$B98    $3B66   SE       VB, #66         ; Skip if VB == 102
$B9A    $3478   SE       V4, #78         ; Skip if V4 == 120
$B9C    $B59F   JP       V0, $59F        ; Jump to V0 + 59F
$B9E    $DC65   DRW      VC, V6, #5      ; Draw 5-byte sprite at VC, V6
$BA0    $2909   CALL     $909            ; Call subroutine at 909
$BA2    $444E   SNE      V4, #4E         ; Skip if V4 != 78
$BA4    $E34A   UNKNOWN  $E34A           ; Unknown Exxx instruction
$BA6    $6345   LD       V3, #45         ; Load 69 into V3
$BA8    $369E   SE       V6, #9E         ; Skip if V6 == 158
$BAA    $8A82   AND      VA, V8          ; VA &= V8
$BAC    $4709   SNE      V7, #09         ; Skip if V7 != 9
$BAE    $6EF2   LD       VE, #F2         ; Load 242 into VE
$BB0    $0845   SYS      $845            ; System call to 845
$BB2    $BEF4   JP       V0, $EF4        ; Jump to V0 + EF4
$BB4    $75F9   ADD      V5, #F9         ; Add 249 to V5
$BB6    $6AA4   LD       VA, #A4         ; Load 164 into VA
$BB8    $53FE   UNKNOWN  $53FE           ; Unknown 5xxx instruction
$BBA    $8516   SHR      V5              ; V5 >>= 1, VF = LSB
$BBC    $C8DB   RND      V8, #DB         ; V8 = random & DB
$BBE    $672A   LD       V7, #2A         ; Load 42 into V7
$BC0    $B10B   JP       V0, $10B        ; Jump to V0 + 10B
$BC2    $9CB6   UNKNOWN  $9CB6           ; Unknown 9xxx instruction
$BC4    $CE46   RND      VE, #46         ; VE = random & 46
$BC6    $A196   LD       I, $196         ; Load 196 into I
$BC8    $2DAF   CALL     $DAF            ; Call subroutine at DAF
$BCA    $2C90   CALL     $C90            ; Call subroutine at C90
$BCC    $99B0   SNE      V9, VB          ; Skip if V9 != VB
$BCE    $0199   SYS      $199            ; System call to 199
$BD0    $89BC   UNKNOWN  89BC            ; Unknown 8xxx instruction
$BD2    $CF22   RND      VF, #22         ; VF = random & 22
$BD4    $5562   UNKNOWN  $5562           ; Unknown 5xxx instruction
$BD6    $F1A3   UNKNOWN  F1A3            ; Unknown Fxxx instruction
$BD8    $69A1   LD       V9, #A1         ; Load 161 into V9
$BDA    $2166   CALL     $166            ; Call subroutine at 166
$BDC    $1963   JP       $963            ; Jump to 963
$BDE    $30DA   SE       V0, #DA         ; Skip if V0 == 218
$BE0    $92DD   UNKNOWN  $92DD           ; Unknown 9xxx instruction
$BE2    $C43D   RND      V4, #3D         ; V4 = random & 3D
$BE4    $DC0A   DRW      VC, V0, #A      ; Draw 10-byte sprite at VC, V0
$BE6    $DE62   DRW      VE, V6, #2      ; Draw 2-byte sprite at VE, V6
$BE8    $9E76   UNKNOWN  $9E76           ; Unknown 9xxx instruction
$BEA    $8592   AND      V5, V9          ; V5 &= V9
$BEC    $DD5D   DRW      VD, V5, #D      ; Draw 13-byte sprite at VD, V5
$BEE    $2BCC   CALL     $BCC            ; Call subroutine at BCC
$BF0    $1B69   JP       $B69            ; Jump to B69
$BF2    $9B9A   UNKNOWN  $9B9A           ; Unknown 9xxx instruction
$BF4    $61F9   LD       V1, #F9         ; Load 249 into V1
$BF6    $3C21   SE       VC, #21         ; Skip if VC == 33
$BF8    $793B   ADD      V9, #3B         ; Add 59 to V9
$BFA    $184D   JP       $84D            ; Jump to 84D
$BFC    $5298   UNKNOWN  $5298           ; Unknown 5xxx instruction
$BFE    $CF12   RND      VF, #12         ; VF = random & 12
$C00    $49A4   SNE      V9, #A4         ; Skip if V9 != 164
$C02    $3E72   SE       VE, #72         ; Skip if VE == 114
$C04    $DE12   DRW      VE, V1, #2      ; Draw 2-byte sprite at VE, V1
$C06    $1688   JP       $688            ; Jump to 688
$C08    $201A   CALL     $01A            ; Call subroutine at 01A
$C0A    $E528   UNKNOWN  $E528           ; Unknown Exxx instruction
$C0C    $417B   SNE      V1, #7B         ; Skip if V1 != 123
$C0E    $2E15   CALL     $E15            ; Call subroutine at E15
$C10    $2C93   CALL     $C93            ; Call subroutine at C93
$C12    $3BDB   SE       VB, #DB         ; Skip if VB == 219
$C14    $E90F   UNKNOWN  $E90F           ; Unknown Exxx instruction
$C16    $57B4   UNKNOWN  $57B4           ; Unknown 5xxx instruction
$C18    $A35C   LD       I, $35C         ; Load 35C into I
$C1A    $7AE3   ADD      VA, #E3         ; Add 227 to VA
$C1C    $5D42   UNKNOWN  $5D42           ; Unknown 5xxx instruction
$C1E    $AF6F   LD       I, $F6F         ; Load F6F into I
$C20    $B544   JP       V0, $544        ; Jump to V0 + 544
$C22    $193F   JP       $93F            ; Jump to 93F
$C24    $37F8   SE       V7, #F8         ; Skip if V7 == 248
$C26    $2D31   CALL     $D31            ; Call subroutine at D31
$C28    $0265   SYS      $265            ; System call to 265
$C2A    $D319   DRW      V3, V1, #9      ; Draw 9-byte sprite at V3, V1
$C2C    $127C   JP       $27C            ; Jump to 27C
$C2E    $9B14   UNKNOWN  $9B14           ; Unknown 9xxx instruction
$C30    $2DC4   CALL     $DC4            ; Call subroutine at DC4
$C32    $CB0B   RND      VB, #0B         ; VB = random & 0B
$C34    $FA5A   UNKNOWN  FA5A            ; Unknown Fxxx instruction
$C36    $B7D1   JP       V0, $7D1        ; Jump to V0 + 7D1
$C38    $9657   UNKNOWN  $9657           ; Unknown 9xxx instruction
$C3A    $11BF   JP       $1BF            ; Jump to 1BF
$C3C    $CDF6   RND      VD, #F6         ; VD = random & F6
$C3E    $C5BC   RND      V5, #BC         ; V5 = random & BC
$C40    $0FF4   SYS      $FF4            ; System call to FF4
$C42    $8D7F   UNKNOWN  8D7F            ; Unknown 8xxx instruction
$C44    $0653   SYS      $653            ; System call to 653
$C46    $C63E   RND      V6, #3E         ; V6 = random & 3E
$C48    $3D65   SE       VD, #65         ; Skip if VD == 101
$C4A    $49AB   SNE      V9, #AB         ; Skip if V9 != 171
$C4C    $6682   LD       V6, #82         ; Load 130 into V6
$C4E    $7496   ADD      V4, #96         ; Add 150 to V4
$C50    $EF47   UNKNOWN  $EF47           ; Unknown Exxx instruction
$C52    $F1C8   UNKNOWN  F1C8            ; Unknown Fxxx instruction
$C54    $1003   JP       $003            ; Jump to 003
$C56    $5AE6   UNKNOWN  $5AE6           ; Unknown 5xxx instruction
$C58    $621D   LD       V2, #1D         ; Load 29 into V2
$C5A    $A928   LD       I, $928         ; Load 928 into I
$C5C    $5ADD   UNKNOWN  $5ADD           ; Unknown 5xxx instruction
$C5E    $2E99   CALL     $E99            ; Call subroutine at E99
$C60    $DBF5   DRW      VB, VF, #5      ; Draw 5-byte sprite at VB, VF
$C62    $7149   ADD      V1, #49         ; Add 73 to V1
$C64    $6A36   LD       VA, #36         ; Load 54 into VA
$C66    $D765   DRW      V7, V6, #5      ; Draw 5-byte sprite at V7, V6
$C68    $5E6B   UNKNOWN  $5E6B           ; Unknown 5xxx instruction
$C6A    $DEBD   DRW      VE, VB, #D      ; Draw 13-byte sprite at VE, VB
$C6C    $D626   DRW      V6, V2, #6      ; Draw 6-byte sprite at V6, V2
$C6E    $2C11   CALL     $C11            ; Call subroutine at C11
$C70    $ED0E   UNKNOWN  $ED0E           ; Unknown Exxx instruction
$C72    $A9BC   LD       I, $9BC         ; Load 9BC into I
$C74    $BF1A   JP       V0, $F1A        ; Jump to V0 + F1A
$C76    $78D5   ADD      V8, #D5         ; Add 213 to V8
$C78    $11CF   JP       $1CF            ; Jump to 1CF
$C7A    $4003   SNE      V0, #03         ; Skip if V0 != 3
$C7C    $B52A   JP       V0, $52A        ; Jump to V0 + 52A
$C7E    $58C5   UNKNOWN  $58C5           ; Unknown 5xxx instruction
$C80    $8B13   XOR      VB, V1          ; VB ^= V1
$C82    $C982   RND      V9, #82         ; V9 = random & 82
$C84    $5C4F   UNKNOWN  $5C4F           ; Unknown 5xxx instruction
$C86    $6175   LD       V1, #75         ; Load 117 into V1
$C88    $B315   JP       V0, $315        ; Jump to V0 + 315
$C8A    $A606   LD       I, $606         ; Load 606 into I
$C8C    $86F7   SUBN     V6, VF          ; V6 = VF - V6, VF = !borrow
$C8E    $CF3C   RND      VF, #3C         ; VF = random & 3C
$C90    $2D09   CALL     $D09            ; Call subroutine at D09
$C92    $8DC3   XOR      VD, VC          ; VD ^= VC
$C94    $40DB   SNE      V0, #DB         ; Skip if V0 != 219
$C96    $051D   SYS      $51D            ; System call to 51D
$C98    $85FC   UNKNOWN  85FC            ; Unknown 8xxx instruction
$C9A    $9BAF   UNKNOWN  $9BAF           ; Unknown 9xxx instruction
$C9C    $3EF0   SE       VE, #F0         ; Skip if VE == 240
$C9E    $90EA   UNKNOWN  $90EA           ; Unknown 9xxx instruction
$CA0    $05F1   SYS      $5F1            ; System call to 5F1
$CA2    $C705   RND      V7, #05         ; V7 = random & 05
$CA4    $3E92   SE       VE, #92         ; Skip if VE == 146
$CA6    $8D73   XOR      VD, V7          ; VD ^= V7
$CA8    $A108   LD       I, $108         ; Load 108 into I
$CAA    $C6E9   RND      V6, #E9         ; V6 = random & E9
$CAC    $9843   UNKNOWN  $9843           ; Unknown 9xxx instruction
$CAE    $F9EE   UNKNOWN  F9EE            ; Unknown Fxxx instruction
$CB0    $469B   SNE      V6, #9B         ; Skip if V6 != 155
$CB2    $96AC   UNKNOWN  $96AC           ; Unknown 9xxx instruction
$CB4    $6875   LD       V8, #75         ; Load 117 into V8
$CB6    $5D25   UNKNOWN  $5D25           ; Unknown 5xxx instruction
$CB8    $35C2   SE       V5, #C2         ; Skip if V5 == 194
$CBA    $20CE   CALL     $0CE            ; Call subroutine at 0CE
$CBC    $4E44   SNE      VE, #44         ; Skip if VE != 68
$CBE    $9A4B   UNKNOWN  $9A4B           ; Unknown 9xxx instruction
$CC0    $2B13   CALL     $B13            ; Call subroutine at B13
$CC2    $51D5   UNKNOWN  $51D5           ; Unknown 5xxx instruction
$CC4    $3E81   SE       VE, #81         ; Skip if VE == 129
$CC6    $DE9F   DRW      VE, V9, #F      ; Draw 15-byte sprite at VE, V9
$CC8    $C4D2   RND      V4, #D2         ; V4 = random & D2
$CCA    $D309   DRW      V3, V0, #9      ; Draw 9-byte sprite at V3, V0
$CCC    $8CB6   SHR      VC              ; VC >>= 1, VF = LSB
$CCE    $E760   UNKNOWN  $E760           ; Unknown Exxx instruction
$CD0    $199F   JP       $99F            ; Jump to 99F
$CD2    $5790   SE       V7, V9          ; Skip if V7 == V9
$CD4    $83DB   UNKNOWN  83DB            ; Unknown 8xxx instruction
$CD6    $B723   JP       V0, $723        ; Jump to V0 + 723
$CD8    $AE76   LD       I, $E76         ; Load E76 into I
$CDA    $85F9   UNKNOWN  85F9            ; Unknown 8xxx instruction
$CDC    $FC30   UNKNOWN  FC30            ; Unknown Fxxx instruction
$CDE    $F791   UNKNOWN  F791            ; Unknown Fxxx instruction
$CE0    $A2D3   LD       I, $2D3         ; Load 2D3 into I
$CE2    $DD8E   DRW      VD, V8, #E      ; Draw 14-byte sprite at VD, V8
$CE4    $70B9   ADD      V0, #B9         ; Add 185 to V0
$CE6    $8015   SUB      V0, V1          ; V0 -= V1, VF = !borrow
$CE8    $6437   LD       V4, #37         ; Load 55 into V4
$CEA    $ED37   UNKNOWN  $ED37           ; Unknown Exxx instruction
$CEC    $4D2D   SNE      VD, #2D         ; Skip if VD != 45
$CEE    $7989   ADD      V9, #89         ; Add 137 to V9
$CF0    $DAC7   DRW      VA, VC, #7      ; Draw 7-byte sprite at VA, VC
$CF2    $B95B   JP       V0, $95B        ; Jump to V0 + 95B
$CF4    $591F   UNKNOWN  $591F           ; Unknown 5xxx instruction
$CF6    $14E4   JP       $4E4            ; Jump to 4E4
$CF8    $6E4C   LD       VE, #4C         ; Load 76 into VE
$CFA    $E121   UNKNOWN  $E121           ; Unknown Exxx instruction
$CFC    $DBD7   DRW      VB, VD, #7      ; Draw 7-byte sprite at VB, VD
$CFE    $7A4F   ADD      VA, #4F         ; Add 79 to VA
$D00    $28B1   CALL     $8B1            ; Call subroutine at 8B1
$D02    $E0B9   UNKNOWN  $E0B9           ; Unknown Exxx instruction
$D04    $B6EC   JP       V0, $6EC        ; Jump to V0 + 6EC
$D06    $5B81   UNKNOWN  $5B81           ; Unknown 5xxx instruction
$D08    $1AD6   JP       $AD6            ; Jump to AD6
$D0A    $3958   SE       V9, #58         ; Skip if V9 == 88
$D0C    $F539   UNKNOWN  F539            ; Unknown Fxxx instruction
$D0E    $865F   UNKNOWN  865F            ; Unknown 8xxx instruction
$D10    $594A   UNKNOWN  $594A           ; Unknown 5xxx instruction
$D12    $1940   JP       $940            ; Jump to 940
$D14    $C6C4   RND      V6, #C4         ; V6 = random & C4
$D16    $D528   DRW      V5, V2, #8      ; Draw 8-byte sprite at V5, V2
$D18    $3BBC   SE       VB, #BC         ; Skip if VB == 188
$D1A    $1014   JP       $014            ; Jump to 014
$D1C    $3E85   SE       VE, #85         ; Skip if VE == 133
$D1E    $7A17   ADD      VA, #17         ; Add 23 to VA
$D20    $2273   CALL     $273            ; Call subroutine at 273
$D22    $7014   ADD      V0, #14         ; Add 20 to V0
$D24    $3658   SE       V6, #58         ; Skip if V6 == 88
$D26    $8656   SHR      V6              ; V6 >>= 1, VF = LSB
$D28    $0E2F   SYS      $E2F            ; System call to E2F
$D2A    $D228   DRW      V2, V2, #8      ; Draw 8-byte sprite at V2, V2
$D2C    $478B   SNE      V7, #8B         ; Skip if V7 != 139
$D2E    $36D1   SE       V6, #D1         ; Skip if V6 == 209
$D30    $96D7   UNKNOWN  $96D7           ; Unknown 9xxx instruction
$D32    $48F1   SNE      V8, #F1         ; Skip if V8 != 241
$D34    $9350   SNE      V3, V5          ; Skip if V3 != V5
$D36    $614B   LD       V1, #4B         ; Load 75 into V1
$D38    $B6BB   JP       V0, $6BB        ; Jump to V0 + 6BB
$D3A    $3CAB   SE       VC, #AB         ; Skip if VC == 171
$D3C    $6800   LD       V8, #00         ; Load 0 into V8
$D3E    $8B5E   SHL      VB              ; VB <<= 1, VF = MSB
$D40    $C566   RND      V5, #66         ; V5 = random & 66
$D42    $826A   UNKNOWN  826A            ; Unknown 8xxx instruction
$D44    $6D39   LD       VD, #39         ; Load 57 into VD
$D46    $C3BC   RND      V3, #BC         ; V3 = random & BC
$D48    $A3FB   LD       I, $3FB         ; Load 3FB into I
$D4A    $EE5A   UNKNOWN  $EE5A           ; Unknown Exxx instruction
$D4C    $76FE   ADD      V6, #FE         ; Add 254 to V6
$D4E    $3136   SE       V1, #36         ; Skip if V1 == 54
$D50    $EE2B   UNKNOWN  $EE2B           ; Unknown Exxx instruction
$D52    $D731   DRW      V7, V3, #1      ; Draw 1-byte sprite at V7, V3
$D54    $294A   CALL     $94A            ; Call subroutine at 94A
$D56    $B9BE   JP       V0, $9BE        ; Jump to V0 + 9BE
$D58    $5C9C   UNKNOWN  $5C9C           ; Unknown 5xxx instruction
$D5A    $7988   ADD      V9, #88         ; Add 136 to V9
$D5C    $0CA3   SYS      $CA3            ; System call to CA3
$D5E    $9CFD   UNKNOWN  $9CFD           ; Unknown 9xxx instruction
$D60    $D434   DRW      V4, V3, #4      ; Draw 4-byte sprite at V4, V3
$D62    $04EF   SYS      $4EF            ; System call to 4EF
$D64    $0206   SYS      $206            ; System call to 206
$D66    $BCB4   JP       V0, $CB4        ; Jump to V0 + CB4
$D68    $C38D   RND      V3, #8D         ; V3 = random & 8D
$D6A    $81EB   UNKNOWN  81EB            ; Unknown 8xxx instruction
$D6C    $B320   JP       V0, $320        ; Jump to V0 + 320
$D6E    $824D   UNKNOWN  824D            ; Unknown 8xxx instruction
$D70    $632D   LD       V3, #2D         ; Load 45 into V3
$D72    $D14C   DRW      V1, V4, #C      ; Draw 12-byte sprite at V1, V4
$D74    $275E   CALL     $75E            ; Call subroutine at 75E
$D76    $18B2   JP       $8B2            ; Jump to 8B2
$D78    $9BE9   UNKNOWN  $9BE9           ; Unknown 9xxx instruction
$D7A    $287C   CALL     $87C            ; Call subroutine at 87C
$D7C    $7A61   ADD      VA, #61         ; Add 97 to VA
$D7E    $0B38   SYS      $B38            ; System call to B38
$D80    $626F   LD       V2, #6F         ; Load 111 into V2
$D82    $E1D9   UNKNOWN  $E1D9           ; Unknown Exxx instruction
$D84    $0B85   SYS      $B85            ; System call to B85
$D86    $F8CD   UNKNOWN  F8CD            ; Unknown Fxxx instruction
$D88    $E195   UNKNOWN  $E195           ; Unknown Exxx instruction
$D8A    $36AA   SE       V6, #AA         ; Skip if V6 == 170
$D8C    $DC89   DRW      VC, V8, #9      ; Draw 9-byte sprite at VC, V8
$D8E    $1D5F   JP       $D5F            ; Jump to D5F
$D90    $FA36   UNKNOWN  FA36            ; Unknown Fxxx instruction
$D92    $2C0B   CALL     $C0B            ; Call subroutine at C0B
$D94    $4D8F   SNE      VD, #8F         ; Skip if VD != 143
$D96    $1AE2   JP       $AE2            ; Jump to AE2
$D98    $3BB8   SE       VB, #B8         ; Skip if VB == 184
$D9A    $6D47   LD       VD, #47         ; Load 71 into VD
$D9C    $3E9C   SE       VE, #9C         ; Skip if VE == 156
$D9E    $4F60   SNE      VF, #60         ; Skip if VF != 96
$DA0    $4913   SNE      V9, #13         ; Skip if V9 != 19
$DA2    $A527   LD       I, $527         ; Load 527 into I
$DA4    $F720   UNKNOWN  F720            ; Unknown Fxxx instruction
$DA6    $8316   SHR      V3              ; V3 >>= 1, VF = LSB
$DA8    $6CF9   LD       VC, #F9         ; Load 249 into VC
$DAA    $82EC   UNKNOWN  82EC            ; Unknown 8xxx instruction
$DAC    $F31F   UNKNOWN  F31F            ; Unknown Fxxx instruction
$DAE    $F135   UNKNOWN  F135            ; Unknown Fxxx instruction
$DB0    $4E06   SNE      VE, #06         ; Skip if VE != 6
$DB2    $091B   SYS      $91B            ; System call to 91B
$DB4    $6952   LD       V9, #52         ; Load 82 into V9
$DB6    $FA08   UNKNOWN  FA08            ; Unknown Fxxx instruction
$DB8    $F63D   UNKNOWN  F63D            ; Unknown Fxxx instruction
$DBA    $3DB9   SE       VD, #B9         ; Skip if VD == 185
$DBC    $2CF2   CALL     $CF2            ; Call subroutine at CF2
$DBE    $7534   ADD      V5, #34         ; Add 52 to V5
$DC0    $0E4B   SYS      $E4B            ; System call to E4B
$DC2    $977F   UNKNOWN  $977F           ; Unknown 9xxx instruction
$DC4    $D171   DRW      V1, V7, #1      ; Draw 1-byte sprite at V1, V7
$DC6    $5427   UNKNOWN  $5427           ; Unknown 5xxx instruction
$DC8    $0915   SYS      $915            ; System call to 915
$DCA    $54C4   UNKNOWN  $54C4           ; Unknown 5xxx instruction
$DCC    $F7DF   UNKNOWN  F7DF            ; Unknown Fxxx instruction
$DCE    $8F9E   SHL      VF              ; VF <<= 1, VF = MSB
$DD0    $6819   LD       V8, #19         ; Load 25 into V8
$DD2    $9D91   UNKNOWN  $9D91           ; Unknown 9xxx instruction
$DD4    $4BE7   SNE      VB, #E7         ; Skip if VB != 231
$DD6    $4329   SNE      V3, #29         ; Skip if V3 != 41
$DD8    $2352   CALL     $352            ; Call subroutine at 352
$DDA    $CC9D   RND      VC, #9D         ; VC = random & 9D
$DDC    $3FF8   SE       VF, #F8         ; Skip if VF == 248
$DDE    $D01D   DRW      V0, V1, #D      ; Draw 13-byte sprite at V0, V1
$DE0    $B768   JP       V0, $768        ; Jump to V0 + 768
$DE2    $7F6B   ADD      VF, #6B         ; Add 107 to VF
$DE4    $07E2   SYS      $7E2            ; System call to 7E2
$DE6    $A261   LD       I, $261         ; Load 261 into I
$DE8    $5CD1   UNKNOWN  $5CD1           ; Unknown 5xxx instruction
$DEA    $B633   JP       V0, $633        ; Jump to V0 + 633
$DEC    $0338   SYS      $338            ; System call to 338
$DEE    $5489   UNKNOWN  $5489           ; Unknown 5xxx instruction
$DF0    $6FEA   LD       VF, #EA         ; Load 234 into VF
$DF2    $81FB   UNKNOWN  81FB            ; Unknown 8xxx instruction
$DF4    $1022   JP       $022            ; Jump to 022
$DF6    $17F8   JP       $7F8            ; Jump to 7F8
$DF8    $EC30   UNKNOWN  $EC30           ; Unknown Exxx instruction
$DFA    $4902   SNE      V9, #02         ; Skip if V9 != 2
$DFC    $A7AD   LD       I, $7AD         ; Load 7AD into I
$DFE    $584E   UNKNOWN  $584E           ; Unknown 5xxx instruction
$E00    $E22D   UNKNOWN  $E22D           ; Unknown Exxx instruction
$E02    $74E4   ADD      V4, #E4         ; Add 228 to V4
$E04    $7095   ADD      V0, #95         ; Add 149 to V0
$E06    $ED55   UNKNOWN  $ED55           ; Unknown Exxx instruction
$E08    $004F   SYS      $04F            ; System call to 04F
$E0A    $4F7C   SNE      VF, #7C         ; Skip if VF != 124
$E0C    $8C31   OR       VC, V3          ; VC |= V3
$E0E    $4F9F   SNE      VF, #9F         ; Skip if VF != 159
$E10    $FE8C   UNKNOWN  FE8C            ; Unknown Fxxx instruction
$E12    $E51E   UNKNOWN  $E51E           ; Unknown Exxx instruction
$E14    $5249   UNKNOWN  $5249           ; Unknown 5xxx instruction
$E16    $1BB6   JP       $BB6            ; Jump to BB6
$E18    $508B   UNKNOWN  $508B           ; Unknown 5xxx instruction
$E1A    $E906   UNKNOWN  $E906           ; Unknown Exxx instruction
$E1C    $04CC   SYS      $4CC            ; System call to 4CC
$E1E    $D36D   DRW      V3, V6, #D      ; Draw 13-byte sprite at V3, V6
$E20    $4A7F   SNE      VA, #7F         ; Skip if VA != 127
$E22    $BBA5   JP       V0, $BA5        ; Jump to V0 + BA5
$E24    $CBE0   RND      VB, #E0         ; VB = random & E0
$E26    $1661   JP       $661            ; Jump to 661
$E28    $2F00   CALL     $F00            ; Call subroutine at F00
$E2A    $75C2   ADD      V5, #C2         ; Add 194 to V5
$E2C    $4A92   SNE      VA, #92         ; Skip if VA != 146
$E2E    $440C   SNE      V4, #0C         ; Skip if V4 != 12
$E30    $59AA   UNKNOWN  $59AA           ; Unknown 5xxx instruction
$E32    $0AE4   SYS      $AE4            ; System call to AE4
$E34    $2264   CALL     $264            ; Call subroutine at 264
$E36    $4E81   SNE      VE, #81         ; Skip if VE != 129
$E38    $3C8A   SE       VC, #8A         ; Skip if VC == 138
$E3A    $73A4   ADD      V3, #A4         ; Add 164 to V3
$E3C    $CCA4   RND      VC, #A4         ; VC = random & A4
$E3E    $0652   SYS      $652            ; System call to 652
$E40    $B75E   JP       V0, $75E        ; Jump to V0 + 75E
$E42    $5991   UNKNOWN  $5991           ; Unknown 5xxx instruction
$E44    $70C3   ADD      V0, #C3         ; Add 195 to V0
$E46    $1EBA   JP       $EBA            ; Jump to EBA
$E48    $54E3   UNKNOWN  $54E3           ; Unknown 5xxx instruction
$E4A    $276D   CALL     $76D            ; Call subroutine at 76D
$E4C    $E1D0   UNKNOWN  $E1D0           ; Unknown Exxx instruction
$E4E    $67FA   LD       V7, #FA         ; Load 250 into V7
$E50    $F38B   UNKNOWN  F38B            ; Unknown Fxxx instruction
$E52    $9D70   SNE      VD, V7          ; Skip if VD != V7
$E54    $4F58   SNE      VF, #58         ; Skip if VF != 88
$E56    $3857   SE       V8, #57         ; Skip if V8 == 87
$E58    $66E1   LD       V6, #E1         ; Load 225 into V6
$E5A    $8FC7   SUBN     VF, VC          ; VF = VC - VF, VF = !borrow
$E5C    $7B3A   ADD      VB, #3A         ; Add 58 to VB
$E5E    $8BCE   SHL      VB              ; VB <<= 1, VF = MSB
$E60    $24EB   CALL     $4EB            ; Call subroutine at 4EB
$E62    $3708   SE       V7, #08         ; Skip if V7 == 8
$E64    $3A69   SE       VA, #69         ; Skip if VA == 105
$E66    $9C3E   UNKNOWN  $9C3E           ; Unknown 9xxx instruction
$E68    $7118   ADD      V1, #18         ; Add 24 to V1
$E6A    $3852   SE       V8, #52         ; Skip if V8 == 82
$E6C    $41BA   SNE      V1, #BA         ; Skip if V1 != 186
$E6E    $6876   LD       V8, #76         ; Load 118 into V8
$E70    $BA74   JP       V0, $A74        ; Jump to V0 + A74
$E72    $F6BE   UNKNOWN  F6BE            ; Unknown Fxxx instruction
$E74    $2EDB   CALL     $EDB            ; Call subroutine at EDB
$E76    $7279   ADD      V2, #79         ; Add 121 to V2
$E78    $793E   ADD      V9, #3E         ; Add 62 to V9
$E7A    $088C   SYS      $88C            ; System call to 88C
$E7C    $CD1C   RND      VD, #1C         ; VD = random & 1C
$E7E    $6397   LD       V3, #97         ; Load 151 into V3
$E80    $0F61   SYS      $F61            ; System call to F61
$E82    $D467   DRW      V4, V6, #7      ; Draw 7-byte sprite at V4, V6
$E84    $EE93   UNKNOWN  $EE93           ; Unknown Exxx instruction
$E86    $2CD1   CALL     $CD1            ; Call subroutine at CD1
$E88    $B05A   JP       V0, $05A        ; Jump to V0 + 05A
$E8A    $2490   CALL     $490            ; Call subroutine at 490
$E8C    $C448   RND      V4, #48         ; V4 = random & 48
$E8E    $0336   SYS      $336            ; System call to 336
$E90    $CC40   RND      VC, #40         ; VC = random & 40
$E92    $A3E1   LD       I, $3E1         ; Load 3E1 into I
$E94    $1909   JP       $909            ; Jump to 909
$E96    $6FEF   LD       VF, #EF         ; Load 239 into VF
$E98    $DD75   DRW      VD, V7, #5      ; Draw 5-byte sprite at VD, V7
$E9A    $33C0   SE       V3, #C0         ; Skip if V3 == 192
$E9C    $2CE3   CALL     $CE3            ; Call subroutine at CE3
$E9E    $42D8   SNE      V2, #D8         ; Skip if V2 != 216
$EA0    $A73B   LD       I, $73B         ; Load 73B into I
$EA2    $7F2A   ADD      VF, #2A         ; Add 42 to VF
$EA4    $F811   UNKNOWN  F811            ; Unknown Fxxx instruction
$EA6    $A9F3   LD       I, $9F3         ; Load 9F3 into I
$EA8    $CA22   RND      VA, #22         ; VA = random & 22
$EAA    $1DFB   JP       $DFB            ; Jump to DFB
$EAC    $C0DC   RND      V0, #DC         ; V0 = random & DC
$EAE    $7632   ADD      V6, #32         ; Add 50 to V6
$EB0    $24EF   CALL     $4EF            ; Call subroutine at 4EF
$EB2    $68DD   LD       V8, #DD         ; Load 221 into V8
$EB4    $7A18   ADD      VA, #18         ; Add 24 to VA
$EB6    $3517   SE       V5, #17         ; Skip if V5 == 23
$EB8    $526C   UNKNOWN  $526C           ; Unknown 5xxx instruction
$EBA    $2593   CALL     $593            ; Call subroutine at 593
$EBC    $2CD1   CALL     $CD1            ; Call subroutine at CD1
$EBE    $3DB9   SE       VD, #B9         ; Skip if VD == 185
$EC0    $02AC   SYS      $2AC            ; System call to 2AC
$EC2    $0ECC   SYS      $ECC            ; System call to ECC
$EC4    $8597   SUBN     V5, V9          ; V5 = V9 - V5, VF = !borrow
$EC6    $7314   ADD      V3, #14         ; Add 20 to V3
$EC8    $B734   JP       V0, $734        ; Jump to V0 + 734
$ECA    $84AB   UNKNOWN  84AB            ; Unknown 8xxx instruction
$ECC    $21D4   CALL     $1D4            ; Call subroutine at 1D4
$ECE    $9A48   UNKNOWN  $9A48           ; Unknown 9xxx instruction
$ED0    $D066   DRW      V0, V6, #6      ; Draw 6-byte sprite at V0, V6
$ED2    $DC2C   DRW      VC, V2, #C      ; Draw 12-byte sprite at VC, V2
$ED4    $B4F8   JP       V0, $4F8        ; Jump to V0 + 4F8
$ED6    $FF0B   UNKNOWN  FF0B            ; Unknown Fxxx instruction
$ED8    $A47D   LD       I, $47D         ; Load 47D into I
$EDA    $DBFA   DRW      VB, VF, #A      ; Draw 10-byte sprite at VB, VF
$EDC    $54C7   UNKNOWN  $54C7           ; Unknown 5xxx instruction
$EDE    $C1C9   RND      V1, #C9         ; V1 = random & C9
$EE0    $226E   CALL     $26E            ; Call subroutine at 26E
$EE2    $9790   SNE      V7, V9          ; Skip if V7 != V9
$EE4    $DF04   DRW      VF, V0, #4      ; Draw 4-byte sprite at VF, V0
$EE6    $3B94   SE       VB, #94         ; Skip if VB == 148
$EE8    $1E4B   JP       $E4B            ; Jump to E4B
$EEA    $325E   SE       V2, #5E         ; Skip if V2 == 94
$EEC    $067A   SYS      $67A            ; System call to 67A
$EEE    $DF7E   DRW      VF, V7, #E      ; Draw 14-byte sprite at VF, V7
$EF0    $0D08   SYS      $D08            ; System call to D08
$EF2    $A583   LD       I, $583         ; Load 583 into I
$EF4    $F9A1   UNKNOWN  F9A1            ; Unknown Fxxx instruction
$EF6    $DEE2   DRW      VE, VE, #2      ; Draw 2-byte sprite at VE, VE
$EF8    $2F23   CALL     $F23            ; Call subroutine at F23
$EFA    $149A   JP       $49A            ; Jump to 49A
$EFC    $B419   JP       V0, $419        ; Jump to V0 + 419
$EFE    $5B9F   UNKNOWN  $5B9F           ; Unknown 5xxx instruction
$F00    $48BD   SNE      V8, #BD         ; Skip if V8 != 189
$F02    $058B   SYS      $58B            ; System call to 58B
$F04    $F7DF   UNKNOWN  F7DF            ; Unknown Fxxx instruction
$F06    $2AFA   CALL     $AFA            ; Call subroutine at AFA
$F08    $C1FE   RND      V1, #FE         ; V1 = random & FE
$F0A    $6609   LD       V6, #09         ; Load 9 into V6
$F0C    $0A27   SYS      $A27            ; System call to A27
$F0E    $02DC   SYS      $2DC            ; System call to 2DC
$F10    $8BA7   SUBN     VB, VA          ; VB = VA - VB, VF = !borrow
$F12    $5B24   UNKNOWN  $5B24           ; Unknown 5xxx instruction
$F14    $0BA4   SYS      $BA4            ; System call to BA4
$F16    $0558   SYS      $558            ; System call to 558
$F18    $DE37   DRW      VE, V3, #7      ; Draw 7-byte sprite at VE, V3
$F1A    $082B   SYS      $82B            ; System call to 82B
$F1C    $5D85   UNKNOWN  $5D85           ; Unknown 5xxx instruction
$F1E    $C621   RND      V6, #21         ; V6 = random & 21
$F20    $B6D0   JP       V0, $6D0        ; Jump to V0 + 6D0
$F22    $815C   UNKNOWN  815C            ; Unknown 8xxx instruction
$F24    $6BCE   LD       VB, #CE         ; Load 206 into VB
$F26    $A6B1   LD       I, $6B1         ; Load 6B1 into I
$F28    $1BB2   JP       $BB2            ; Jump to BB2
$F2A    $4A79   SNE      VA, #79         ; Skip if VA != 121
$F2C    $86EC   UNKNOWN  86EC            ; Unknown 8xxx instruction
$F2E    $B10C   JP       V0, $10C        ; Jump to V0 + 10C
$F30    $658F   LD       V5, #8F         ; Load 143 into V5
$F32    $4E2F   SNE      VE, #2F         ; Skip if VE != 47
$F34    $CB48   RND      VB, #48         ; VB = random & 48
$F36    $B8F5   JP       V0, $8F5        ; Jump to V0 + 8F5
$F38    $AAFA   LD       I, $AFA         ; Load AFA into I
$F3A    $4932   SNE      V9, #32         ; Skip if V9 != 50
$F3C    $FDA7   UNKNOWN  FDA7            ; Unknown Fxxx instruction
$F3E    $D9C1   DRW      V9, VC, #1      ; Draw 1-byte sprite at V9, VC
$F40    $9CAA   UNKNOWN  $9CAA           ; Unknown 9xxx instruction
$F42    $A1F2   LD       I, $1F2         ; Load 1F2 into I
$F44    $2B71   CALL     $B71            ; Call subroutine at B71
$F46    $0CC6   SYS      $CC6            ; System call to CC6
$F48    $BFF9   JP       V0, $FF9        ; Jump to V0 + FF9
$F4A    $D188   DRW      V1, V8, #8      ; Draw 8-byte sprite at V1, V8
$F4C    $F992   UNKNOWN  F992            ; Unknown Fxxx instruction
$F4E    $5B9C   UNKNOWN  $5B9C           ; Unknown 5xxx instruction
$F50    $9705   UNKNOWN  $9705           ; Unknown 9xxx instruction
$F52    $4D24   SNE      VD, #24         ; Skip if VD != 36
$F54    $7430   ADD      V4, #30         ; Add 48 to V4
$F56    $19CB   JP       $9CB            ; Jump to 9CB
$F58    $4CAE   SNE      VC, #AE         ; Skip if VC != 174
$F5A    $7297   ADD      V2, #97         ; Add 151 to V2
$F5C    $8DB4   ADD      VD, VB          ; VD += VB, VF = carry
$F5E    $942B   UNKNOWN  $942B           ; Unknown 9xxx instruction
$F60    $4F3E   SNE      VF, #3E         ; Skip if VF != 62
$F62    $FE15   LD       DT, VE          ; Delay timer = VE
$F64    $6B4E   LD       VB, #4E         ; Load 78 into VB
$F66    $6477   LD       V4, #77         ; Load 119 into V4
$F68    $9D24   UNKNOWN  $9D24           ; Unknown 9xxx instruction
$F6A    $2878   CALL     $878            ; Call subroutine at 878
$F6C    $1279   JP       $279            ; Jump to 279
$F6E    $57DF   UNKNOWN  $57DF           ; Unknown 5xxx instruction
$F70    $2105   CALL     $105            ; Call subroutine at 105
$F72    $9919   UNKNOWN  $9919           ; Unknown 9xxx instruction
$F74    $7EA7   ADD      VE, #A7         ; Add 167 to VE
$F76    $2BE0   CALL     $BE0            ; Call subroutine at BE0
$F78    $8E78   UNKNOWN  8E78            ; Unknown 8xxx instruction
$F7A    $0DBF   SYS      $DBF            ; System call to DBF
$F7C    $1B41   JP       $B41            ; Jump to B41
$F7E    $A3D0   LD       I, $3D0         ; Load 3D0 into I
$F80    $DDD6   DRW      VD, VD, #6      ; Draw 6-byte sprite at VD, VD
$F82    $220F   CALL     $20F            ; Call subroutine at 20F
$F84    $2770   CALL     $770            ; Call subroutine at 770
$F86    $0151   SYS      $151            ; System call to 151
$F88    $FB55   LD       [I], VB         ; Store V0-VB at I
$F8A    $985E   UNKNOWN  $985E           ; Unknown 9xxx instruction
$F8C    $EC17   UNKNOWN  $EC17           ; Unknown Exxx instruction
$F8E    $1A10   JP       $A10            ; Jump to A10
$F90    $9AD0   SNE      VA, VD          ; Skip if VA != VD
$F92    $A3DF   LD       I, $3DF         ; Load 3DF into I
$F94    $4624   SNE      V6, #24         ; Skip if V6 != 36
$F96    $07D7   SYS      $7D7            ; System call to 7D7
$F98    $FE20   UNKNOWN  FE20            ; Unknown Fxxx instruction
$F9A    $94FB   UNKNOWN  $94FB           ; Unknown 9xxx instruction
$F9C    $6E9E   LD       VE, #9E         ; Load 158 into VE
$F9E    $12B4   JP       $2B4            ; Jump to 2B4
$FA0    $A0A2   LD       I, $0A2         ; Load 0A2 into I
$FA2    $9C56   UNKNOWN  $9C56           ; Unknown 9xxx instruction
$FA4    $9611   UNKNOWN  $9611           ; Unknown 9xxx instruction
$FA6    $B06D   JP       V0, $06D        ; Jump to V0 + 06D
$FA8    $85CE   SHL      V5              ; V5 <<= 1, VF = MSB
$FAA    $2768   CALL     $768            ; Call subroutine at 768
$FAC    $F0FE   UNKNOWN  F0FE            ; Unknown Fxxx instruction
$FAE    $763D   ADD      V6, #3D         ; Add 61 to V6
$FB0    $3577   SE       V5, #77         ; Skip if V5 == 119
$FB2    $DA38   DRW      VA, V3, #8      ; Draw 8-byte sprite at VA, V3
$FB4    $8514   ADD      V5, V1          ; V5 += V1, VF = carry
$FB6    $AF4F   LD       I, $F4F         ; Load F4F into I
$FB8    $3A0B   SE       VA, #0B         ; Skip if VA == 11
$FBA    $477D   SNE      V7, #7D         ; Skip if V7 != 125
$FBC    $D99D   DRW      V9, V9, #D      ; Draw 13-byte sprite at V9, V9
$FBE    $75EB   ADD      V5, #EB         ; Add 235 to V5
$FC0    $E235   UNKNOWN  $E235           ; Unknown Exxx instruction
$FC2    $D439   DRW      V4, V3, #9      ; Draw 9-byte sprite at V4, V3
$FC4    $0779   SYS      $779            ; System call to 779
$FC6    $132E   JP       $32E            ; Jump to 32E
$FC8    $772F   ADD      V7, #2F         ; Add 47 to V7
$FCA    $640E   LD       V4, #0E         ; Load 14 into V4
$FCC    $3114   SE       V1, #14         ; Skip if V1 == 20
$FCE    $948E   UNKNOWN  $948E           ; Unknown 9xxx instruction
$FD0    $7295   ADD      V2, #95         ; Add 149 to V2
$FD2    $9916   UNKNOWN  $9916           ; Unknown 9xxx instruction
$FD4    $3021   SE       V0, #21         ; Skip if V0 == 33
$FD6    $5562   UNKNOWN  $5562           ; Unknown 5xxx instruction
$FD8    $4A84   SNE      VA, #84         ; Skip if VA != 132
$FDA    $FEC1   UNKNOWN  FEC1            ; Unknown Fxxx instruction
$FDC    $7BF2   ADD      VB, #F2         ; Add 242 to VB
$FDE    $5CBC   UNKNOWN  $5CBC           ; Unknown 5xxx instruction
$FE0    $8C39   UNKNOWN  8C39            ; Unknown 8xxx instruction
$FE2    $4249   SNE      V2, #49         ; Skip if V2 != 73
$FE4    $84D4   ADD      V4, VD          ; V4 += VD, VF = carry
$FE6    $5630   SE       V6, V3          ; Skip if V6 == V3
$FE8    $DCE1   DRW      VC, VE, #1      ; Draw 1-byte sprite at VC, VE
$FEA    $BEB3   JP       V0, $EB3        ; Jump to V0 + EB3
$FEC    $A761   LD       I, $761         ; Load 761 into I
$FEE    $B64A   JP       V0, $64A        ; Jump to V0 + 64A
$FF0    $1CA8   JP       $CA8            ; Jump to CA8
$FF2    $C568   RND      V5, #68         ; V5 = random & 68
$FF4    $03BB   SYS      $3BB            ; System call to 3BB
$FF6    $2F54   CALL     $F54            ; Call subroutine at F54
$FF8    $1457   JP       $457            ; Jump to 457
$FFA    $C20D   RND      V2, #0D         ; V2 = random & 0D
$FFC    $0CDF   SYS      $CDF            ; System call to CDF
$FFE    $9DF4   UNKNOWN  $9DF4           ; Unknown 9xxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 449 (25.1%)
  JP      : 216 (12.1%)
  LD      : 214 (11.9%)
  CALL    : 198 (11.0%)
  ADD     : 125 ( 7.0%)
  SE      : 120 ( 6.7%)
  SNE     : 119 ( 6.6%)
  SYS     : 107 ( 6.0%)
  DRW     : 100 ( 5.6%)
  RND     :  96 ( 5.4%)
  SHL     :  10 ( 0.6%)
  AND     :   8 ( 0.4%)
  OR      :   8 ( 0.4%)
  SUBN    :   7 ( 0.4%)
  XOR     :   6 ( 0.3%)
  SHR     :   5 ( 0.3%)
  SUB     :   3 ( 0.2%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 339 (18.9%)
Arithmetic Operations: 157 (8.8%)
