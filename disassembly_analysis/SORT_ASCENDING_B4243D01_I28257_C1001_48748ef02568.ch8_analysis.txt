
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B4243D01_I28257_C1001_48748ef02568.ch8
ROM Size: 3584 bytes
Instructions Found: 1791

DISCOVERY INFORMATION:
Batch: 4243
Instance: 28257
Direction: ascending
Final Array: [0, 0, 0, 32, 62, 132, 178, 234]
Operations: R:0 W:1 C:27 S:1

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 131
Sort Array References:
  $214: LD I, $9E5 ; Load 9E5 into I
  $238: LD I, $8D4 ; Load 8D4 into I
  $23E: LD I, $C6E ; Load C6E into I
  $254: LD I, $48D ; Load 48D into I
  $256: LD I, $8CC ; Load 8CC into I
  $26A: LD I, $DA7 ; Load DA7 into I
  $276: LD I, $8B6 ; Load 8B6 into I
  $2AA: LD I, $547 ; Load 547 into I
  $2D0: LD I, $FAC ; Load FAC into I
  $312: LD I, $6D9 ; Load 6D9 into I
  $314: LD I, $4F2 ; Load 4F2 into I
  $320: LD I, $B20 ; Load B20 into I
  $328: LD I, $D93 ; Load D93 into I
  $364: LD I, $61C ; Load 61C into I
  $396: LD I, $C6C ; Load C6C into I
  $3BE: LD I, $277 ; Load 277 into I
  $3F0: LD I, $F90 ; Load F90 into I
  $40A: LD I, $379 ; Load 379 into I
  $432: LD I, $58D ; Load 58D into I
  $436: ADD I, V6 ; I ADDRESS MANIPULATION
  $438: LD I, $054 ; Load 054 into I
  $496: LD I, $81C ; Load 81C into I
  $4C8: LD I, $D4E ; Load D4E into I
  $4D8: LD I, $A3D ; Load A3D into I
  $4DE: LD I, $F27 ; Load F27 into I
  $502: LD I, $686 ; Load 686 into I
  $506: LD I, $831 ; Load 831 into I
  $518: LD I, $2A8 ; Load 2A8 into I
  $51C: LD I, $EB2 ; Load EB2 into I
  $538: LD I, $D74 ; Load D74 into I
  $562: LD V5, [I] ; Load V0-V5 from I
  $5A8: LD I, $931 ; Load 931 into I
  $5C0: LD I, $0F1 ; Load 0F1 into I
  $5F0: LD I, $B78 ; Load B78 into I
  $5F8: LD I, $26F ; Load 26F into I
  $61E: LD I, $F0B ; Load F0B into I
  $640: LD I, $705 ; Load 705 into I
  $66A: LD I, $592 ; Load 592 into I
  $66C: LD I, $40B ; Load 40B into I
  $670: LD I, $AF9 ; Load AF9 into I
  $684: LD I, $1D6 ; Load 1D6 into I
  $6CE: LD I, $EDA ; Load EDA into I
  $6F2: LD I, $B16 ; Load B16 into I
  $6FA: LD I, $349 ; Load 349 into I
  $712: LD I, $A5A ; Load A5A into I
  $748: LD I, $7FD ; Load 7FD into I
  $752: LD I, $F2A ; Load F2A into I
  $762: LD I, $731 ; Load 731 into I
  $78A: LD I, $64D ; Load 64D into I
  $7A2: LD I, $2FD ; Load 2FD into I
  $7A8: LD I, $E90 ; Load E90 into I
  $7D6: LD I, $CDE ; Load CDE into I
  $7E4: LD I, $454 ; Load 454 into I
  $816: LD I, $EB4 ; Load EB4 into I
  $81A: LD I, $367 ; Load 367 into I
  $82A: LD I, $15A ; Load 15A into I
  $84C: LD I, $089 ; Load 089 into I
  $850: LD I, $8B6 ; Load 8B6 into I
  $85C: LD I, $76B ; Load 76B into I
  $868: LD I, $021 ; Load 021 into I
  $86C: LD I, $DB2 ; Load DB2 into I
  $874: LD I, $4C3 ; Load 4C3 into I
  $8CC: LD I, $8EC ; Load 8EC into I
  $8D6: LD I, $938 ; Load 938 into I
  $8F6: LD I, $6E5 ; Load 6E5 into I
  $912: LD I, $7AB ; Load 7AB into I
  $91C: LD I, $017 ; Load 017 into I
  $9D6: LD I, $3E0 ; Load 3E0 into I
  $A10: LD I, $2C1 ; Load 2C1 into I
  $A22: LD I, $014 ; Load 014 into I
  $A3A: LD I, $69B ; Load 69B into I
  $A48: LD I, $62E ; Load 62E into I
  $A50: LD I, $5CD ; Load 5CD into I
  $A86: LD I, $6AA ; Load 6AA into I
  $AB4: LD I, $543 ; Load 543 into I
  $ACC: LD I, $8F5 ; Load 8F5 into I
  $ACE: LD I, $71E ; Load 71E into I
  $AE8: LD I, $D82 ; Load D82 into I
  $AF4: LD I, $CBB ; Load CBB into I
  $AF6: LD I, $C61 ; Load C61 into I
  $B0E: LD I, $718 ; Load 718 into I
  $B3A: LD I, $BA4 ; Load BA4 into I
  $B3C: LD I, $7AE ; Load 7AE into I
  $B4E: LD I, $FA7 ; Load FA7 into I
  $B7C: LD I, $717 ; Load 717 into I
  $B80: LD I, $F7D ; Load F7D into I
  $B8C: LD I, $4B3 ; Load 4B3 into I
  $BF6: LD I, $BAD ; Load BAD into I
  $C02: LD I, $706 ; Load 706 into I
  $C0A: LD I, $0E9 ; Load 0E9 into I
  $C1E: LD I, $99C ; Load 99C into I
  $C22: LD I, $5C8 ; Load 5C8 into I
  $C24: LD I, $11C ; Load 11C into I
  $C2C: LD I, $9EA ; Load 9EA into I
  $C2E: LD I, $588 ; Load 588 into I
  $C4A: LD I, $1FB ; Load 1FB into I
  $C60: LD I, $CBB ; Load CBB into I
  $C7A: LD I, $429 ; Load 429 into I
  $C8A: LD I, $A72 ; Load A72 into I
  $CC4: LD I, $0A7 ; Load 0A7 into I
  $D04: LD I, $26D ; Load 26D into I
  $D3A: LD I, $11F ; Load 11F into I
  $D4A: LD I, $A8E ; Load A8E into I
  $D50: LD I, $DB8 ; Load DB8 into I
  $D54: LD I, $384 ; Load 384 into I
  $D5A: LD I, $C13 ; Load C13 into I
  $D7C: LD I, $DCF ; Load DCF into I
  $D8A: LD I, $BD6 ; Load BD6 into I
  $D98: LD I, $274 ; Load 274 into I
  $DAA: LD I, $56A ; Load 56A into I
  $DC8: LD I, $0D7 ; Load 0D7 into I
  $DD4: LD I, $338 ; Load 338 into I
  $DFC: LD I, $3BB ; Load 3BB into I
  $E06: LD I, $482 ; Load 482 into I
  $E90: LD I, $432 ; Load 432 into I
  $E96: LD I, $5BE ; Load 5BE into I
  $ED2: LD I, $37F ; Load 37F into I
  $EE8: LD I, $2D6 ; Load 2D6 into I
  $EF6: LD I, $1A9 ; Load 1A9 into I
  $F0C: LD I, $B5F ; Load B5F into I
  $F10: LD I, $DE6 ; Load DE6 into I
  $F60: LD I, $6AA ; Load 6AA into I
  $F6C: LD I, $AC6 ; Load AC6 into I
  $F70: LD I, $C07 ; Load C07 into I
  $F74: LD I, $908 ; Load 908 into I
  $F7C: LD I, $964 ; Load 964 into I
  $F86: LD I, $2BC ; Load 2BC into I
  $F8E: LD I, $25A ; Load 25A into I
  $FB2: LD I, $880 ; Load 880 into I
  $FB8: LD I, $39E ; Load 39E into I
  $FF8: LD I, $908 ; Load 908 into I

CONTROL FLOW ANALYSIS:
Jumps: 223
Calls: 117
Branches: 235
Loops: 132
Loop Structures:
  $240 -> $230 (backward jump)
  $242 -> $106 (backward jump)
  $288 -> $1B9 (backward jump)
  $2C2 -> $27C (backward jump)
  $2D6 -> $299 (backward jump)
  $2FC -> $044 (backward jump)
  $306 -> $2EA (backward jump)
  $318 -> $315 (backward jump)
  $412 -> $29A (backward jump)
  $418 -> $067 (backward jump)
  $48A -> $211 (backward jump)
  $4E8 -> $2FA (backward jump)
  $522 -> $4FE (backward jump)
  $530 -> $4B3 (backward jump)
  $548 -> $292 (backward jump)
  $556 -> $502 (backward jump)
  $58A -> $01C (backward jump)
  $58E -> $3B6 (backward jump)
  $5A2 -> $267 (backward jump)
  $5B2 -> $0A2 (backward jump)
  $5E2 -> $2AC (backward jump)
  $5E6 -> $463 (backward jump)
  $62A -> $0C2 (backward jump)
  $634 -> $482 (backward jump)
  $67C -> $548 (backward jump)
  $682 -> $4E4 (backward jump)
  $6D8 -> $41B (backward jump)
  $6E0 -> $264 (backward jump)
  $6EC -> $4A8 (backward jump)
  $718 -> $537 (backward jump)
  $728 -> $6B6 (backward jump)
  $792 -> $481 (backward jump)
  $7B6 -> $022 (backward jump)
  $7B8 -> $1D0 (backward jump)
  $834 -> $5BA (backward jump)
  $888 -> $7F6 (backward jump)
  $8B4 -> $7F1 (backward jump)
  $8C4 -> $503 (backward jump)
  $8D2 -> $411 (backward jump)
  $8E6 -> $32E (backward jump)
  $92C -> $88C (backward jump)
  $938 -> $0A2 (backward jump)
  $964 -> $6DB (backward jump)
  $970 -> $189 (backward jump)
  $984 -> $618 (backward jump)
  $990 -> $4F7 (backward jump)
  $9AE -> $47E (backward jump)
  $9F4 -> $199 (backward jump)
  $9FC -> $0C6 (backward jump)
  $A72 -> $68F (backward jump)
  $A74 -> $436 (backward jump)
  $A7C -> $8C8 (backward jump)
  $A82 -> $470 (backward jump)
  $A88 -> $73B (backward jump)
  $A8A -> $9AC (backward jump)
  $A94 -> $454 (backward jump)
  $AA2 -> $5EC (backward jump)
  $AB2 -> $6FE (backward jump)
  $AB8 -> $744 (backward jump)
  $AC2 -> $7FD (backward jump)
  $ADA -> $859 (backward jump)
  $AEA -> $17D (backward jump)
  $AF2 -> $459 (backward jump)
  $B0A -> $7BF (backward jump)
  $B12 -> $93B (backward jump)
  $B22 -> $6B3 (backward jump)
  $B2C -> $1F9 (backward jump)
  $B34 -> $0E5 (backward jump)
  $B8E -> $8E9 (backward jump)
  $B92 -> $776 (backward jump)
  $BA2 -> $96D (backward jump)
  $BA4 -> $433 (backward jump)
  $BCA -> $597 (backward jump)
  $BD2 -> $63D (backward jump)
  $BEC -> $012 (backward jump)
  $C0C -> $243 (backward jump)
  $C40 -> $B47 (backward jump)
  $C98 -> $500 (backward jump)
  $C9E -> $3E7 (backward jump)
  $CB2 -> $A26 (backward jump)
  $CBC -> $699 (backward jump)
  $CC0 -> $652 (backward jump)
  $CDE -> $1F8 (backward jump)
  $CE0 -> $62B (backward jump)
  $CEA -> $220 (backward jump)
  $CEE -> $21A (backward jump)
  $CFA -> $8D9 (backward jump)
  $D02 -> $937 (backward jump)
  $D0E -> $37F (backward jump)
  $D10 -> $75F (backward jump)
  $D2A -> $075 (backward jump)
  $D2E -> $A1E (backward jump)
  $D60 -> $C66 (backward jump)
  $DC6 -> $D0B (backward jump)
  $DF4 -> $545 (backward jump)
  $DF6 -> $C3A (backward jump)
  $E16 -> $448 (backward jump)
  $E1C -> $5C2 (backward jump)
  $E26 -> $8EE (backward jump)
  $E2E -> $6EC (backward jump)
  $E38 -> $5FE (backward jump)
  $E3A -> $B15 (backward jump)
  $E3C -> $4E9 (backward jump)
  $E40 -> $E03 (backward jump)
  $E4E -> $906 (backward jump)
  $E52 -> $AAD (backward jump)
  $E68 -> $020 (backward jump)
  $E6C -> $3FF (backward jump)
  $E7A -> $B09 (backward jump)
  $E86 -> $9A9 (backward jump)
  $E8E -> $227 (backward jump)
  $EBA -> $441 (backward jump)
  $EC2 -> $68A (backward jump)
  $EE6 -> $084 (backward jump)
  $EF2 -> $30C (backward jump)
  $EFA -> $B07 (backward jump)
  $F22 -> $004 (backward jump)
  $F2A -> $DEA (backward jump)
  $F32 -> $0C4 (backward jump)
  $F3A -> $D1E (backward jump)
  $F42 -> $AE1 (backward jump)
  $F4A -> $EC8 (backward jump)
  $F5E -> $997 (backward jump)
  $F66 -> $6FA (backward jump)
  $F6A -> $EAF (backward jump)
  $F84 -> $C0E (backward jump)
  $FA0 -> $4DE (backward jump)
  $FC2 -> $003 (backward jump)
  $FC4 -> $008 (backward jump)
  $FE0 -> $2CA (backward jump)
  $FE2 -> $F46 (backward jump)
  $FFC -> $8DF (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $6377   LD       V3, #77         ; Load 119 into V3
$202    $68E1   LD       V8, #E1         ; Load 225 into V8
$204    $D513   DRW      V5, V1, #3      ; Draw 3-byte sprite at V5, V1
$206    $9B9E   UNKNOWN  $9B9E           ; Unknown 9xxx instruction
$208    $82D1   OR       V2, VD          ; V2 |= VD
$20A    $3476   SE       V4, #76         ; Skip if V4 == 118
$20C    $7D10   ADD      VD, #10         ; Add 16 to VD
$20E    $508D   UNKNOWN  $508D           ; Unknown 5xxx instruction
$210    $9C27   UNKNOWN  $9C27           ; Unknown 9xxx instruction
$212    $967E   UNKNOWN  $967E           ; Unknown 9xxx instruction
$214    $A9E5   LD       I, $9E5         ; Load 9E5 into I
$216    $2ED1   CALL     $ED1            ; Call subroutine at ED1
$218    $E09D   UNKNOWN  $E09D           ; Unknown Exxx instruction
$21A    $DD3E   DRW      VD, V3, #E      ; Draw 14-byte sprite at VD, V3
$21C    $8B3B   UNKNOWN  8B3B            ; Unknown 8xxx instruction
$21E    $0506   SYS      $506            ; System call to 506
$220    $506F   UNKNOWN  $506F           ; Unknown 5xxx instruction
$222    $6F11   LD       VF, #11         ; Load 17 into VF
$224    $C174   RND      V1, #74         ; V1 = random & 74
$226    $7059   ADD      V0, #59         ; Add 89 to V0
$228    $97FB   UNKNOWN  $97FB           ; Unknown 9xxx instruction
$22A    $B992   JP       V0, $992        ; Jump to V0 + 992
$22C    $29F4   CALL     $9F4            ; Call subroutine at 9F4
$22E    $BBB9   JP       V0, $BB9        ; Jump to V0 + BB9
$230    $3EFE   SE       VE, #FE         ; Skip if VE == 254
$232    $826E   SHL      V2              ; V2 <<= 1, VF = MSB
$234    $7022   ADD      V0, #22         ; Add 34 to V0
$236    $482D   SNE      V8, #2D         ; Skip if V8 != 45
$238    $A8D4   LD       I, $8D4         ; Load 8D4 into I
$23A    $B53E   JP       V0, $53E        ; Jump to V0 + 53E
$23C    $C2ED   RND      V2, #ED         ; V2 = random & ED
$23E    $AC6E   LD       I, $C6E         ; Load C6E into I
$240    $B230   JP       V0, $230        ; Jump to V0 + 230
$242    $B106   JP       V0, $106        ; Jump to V0 + 106
$244    $966D   UNKNOWN  $966D           ; Unknown 9xxx instruction
$246    $93B8   UNKNOWN  $93B8           ; Unknown 9xxx instruction
$248    $4C42   SNE      VC, #42         ; Skip if VC != 66
$24A    $8135   SUB      V1, V3          ; V1 -= V3, VF = !borrow
$24C    $EF91   UNKNOWN  $EF91           ; Unknown Exxx instruction
$24E    $B40D   JP       V0, $40D        ; Jump to V0 + 40D
$250    $6F00   LD       VF, #00         ; Load 0 into VF
$252    $52B8   UNKNOWN  $52B8           ; Unknown 5xxx instruction
$254    $A48D   LD       I, $48D         ; Load 48D into I
$256    $A8CC   LD       I, $8CC         ; Load 8CC into I
$258    $B259   JP       V0, $259        ; Jump to V0 + 259
$25A    $EA1A   UNKNOWN  $EA1A           ; Unknown Exxx instruction
$25C    $21BF   CALL     $1BF            ; Call subroutine at 1BF
$25E    $79C0   ADD      V9, #C0         ; Add 192 to V9
$260    $637C   LD       V3, #7C         ; Load 124 into V3
$262    $82DD   UNKNOWN  82DD            ; Unknown 8xxx instruction
$264    $28DC   CALL     $8DC            ; Call subroutine at 8DC
$266    $1C22   JP       $C22            ; Jump to C22
$268    $C41A   RND      V4, #1A         ; V4 = random & 1A
$26A    $ADA7   LD       I, $DA7         ; Load DA7 into I
$26C    $6A31   LD       VA, #31         ; Load 49 into VA
$26E    $ECBB   UNKNOWN  $ECBB           ; Unknown Exxx instruction
$270    $CA8B   RND      VA, #8B         ; VA = random & 8B
$272    $C3A2   RND      V3, #A2         ; V3 = random & A2
$274    $280B   CALL     $80B            ; Call subroutine at 80B
$276    $A8B6   LD       I, $8B6         ; Load 8B6 into I
$278    $F933   LD       B, V9           ; Store BCD of V9 at I, I+1, I+2
$27A    $E477   UNKNOWN  $E477           ; Unknown Exxx instruction
$27C    $DC7C   DRW      VC, V7, #C      ; Draw 12-byte sprite at VC, V7
$27E    $FFAB   UNKNOWN  FFAB            ; Unknown Fxxx instruction
$280    $BB2F   JP       V0, $B2F        ; Jump to V0 + B2F
$282    $FC82   UNKNOWN  FC82            ; Unknown Fxxx instruction
$284    $94F6   UNKNOWN  $94F6           ; Unknown 9xxx instruction
$286    $1FB7   JP       $FB7            ; Jump to FB7
$288    $11B9   JP       $1B9            ; Jump to 1B9
$28A    $C8BB   RND      V8, #BB         ; V8 = random & BB
$28C    $E452   UNKNOWN  $E452           ; Unknown Exxx instruction
$28E    $5130   SE       V1, V3          ; Skip if V1 == V3
$290    $8801   OR       V8, V0          ; V8 |= V0
$292    $E50D   UNKNOWN  $E50D           ; Unknown Exxx instruction
$294    $B78E   JP       V0, $78E        ; Jump to V0 + 78E
$296    $96EA   UNKNOWN  $96EA           ; Unknown 9xxx instruction
$298    $F18A   UNKNOWN  F18A            ; Unknown Fxxx instruction
$29A    $74C2   ADD      V4, #C2         ; Add 194 to V4
$29C    $D0B8   DRW      V0, VB, #8      ; Draw 8-byte sprite at V0, VB
$29E    $92ED   UNKNOWN  $92ED           ; Unknown 9xxx instruction
$2A0    $F974   UNKNOWN  F974            ; Unknown Fxxx instruction
$2A2    $0687   SYS      $687            ; System call to 687
$2A4    $F177   UNKNOWN  F177            ; Unknown Fxxx instruction
$2A6    $2348   CALL     $348            ; Call subroutine at 348
$2A8    $033B   SYS      $33B            ; System call to 33B
$2AA    $A547   LD       I, $547         ; Load 547 into I
$2AC    $66F3   LD       V6, #F3         ; Load 243 into V6
$2AE    $EC37   UNKNOWN  $EC37           ; Unknown Exxx instruction
$2B0    $7A7F   ADD      VA, #7F         ; Add 127 to VA
$2B2    $7ECF   ADD      VE, #CF         ; Add 207 to VE
$2B4    $0DC7   SYS      $DC7            ; System call to DC7
$2B6    $C4AE   RND      V4, #AE         ; V4 = random & AE
$2B8    $1987   JP       $987            ; Jump to 987
$2BA    $BD1D   JP       V0, $D1D        ; Jump to V0 + D1D
$2BC    $0B2D   SYS      $B2D            ; System call to B2D
$2BE    $0C3D   SYS      $C3D            ; System call to C3D
$2C0    $3070   SE       V0, #70         ; Skip if V0 == 112
$2C2    $B27C   JP       V0, $27C        ; Jump to V0 + 27C
$2C4    $6340   LD       V3, #40         ; Load 64 into V3
$2C6    $553C   UNKNOWN  $553C           ; Unknown 5xxx instruction
$2C8    $5ADA   UNKNOWN  $5ADA           ; Unknown 5xxx instruction
$2CA    $9D8A   UNKNOWN  $9D8A           ; Unknown 9xxx instruction
$2CC    $7303   ADD      V3, #03         ; Add 3 to V3
$2CE    $659F   LD       V5, #9F         ; Load 159 into V5
$2D0    $AFAC   LD       I, $FAC         ; Load FAC into I
$2D2    $9732   UNKNOWN  $9732           ; Unknown 9xxx instruction
$2D4    $C8A3   RND      V8, #A3         ; V8 = random & A3
$2D6    $1299   JP       $299            ; Jump to 299
$2D8    $1991   JP       $991            ; Jump to 991
$2DA    $00AE   SYS      $0AE            ; System call to 0AE
$2DC    $2A47   CALL     $A47            ; Call subroutine at A47
$2DE    $426E   SNE      V2, #6E         ; Skip if V2 != 110
$2E0    $5C7A   UNKNOWN  $5C7A           ; Unknown 5xxx instruction
$2E2    $3D1D   SE       VD, #1D         ; Skip if VD == 29
$2E4    $40E6   SNE      V0, #E6         ; Skip if V0 != 230
$2E6    $8BBB   UNKNOWN  8BBB            ; Unknown 8xxx instruction
$2E8    $F237   UNKNOWN  F237            ; Unknown Fxxx instruction
$2EA    $048B   SYS      $48B            ; System call to 48B
$2EC    $B4E8   JP       V0, $4E8        ; Jump to V0 + 4E8
$2EE    $FBB8   UNKNOWN  FBB8            ; Unknown Fxxx instruction
$2F0    $E6A7   UNKNOWN  $E6A7           ; Unknown Exxx instruction
$2F2    $6739   LD       V7, #39         ; Load 57 into V7
$2F4    $5A22   UNKNOWN  $5A22           ; Unknown 5xxx instruction
$2F6    $239C   CALL     $39C            ; Call subroutine at 39C
$2F8    $EFD5   UNKNOWN  $EFD5           ; Unknown Exxx instruction
$2FA    $28B3   CALL     $8B3            ; Call subroutine at 8B3
$2FC    $B044   JP       V0, $044        ; Jump to V0 + 044
$2FE    $39FB   SE       V9, #FB         ; Skip if V9 == 251
$302    $0020   SYS      $020            ; System call to 020
$304    $3E84   SE       VE, #84         ; Skip if VE == 132
$306    $B2EA   JP       V0, $2EA        ; Jump to V0 + 2EA
$308    $B96F   JP       V0, $96F        ; Jump to V0 + 96F
$30A    $8056   SHR      V0              ; V0 >>= 1, VF = LSB
$30C    $5755   UNKNOWN  $5755           ; Unknown 5xxx instruction
$30E    $938F   UNKNOWN  $938F           ; Unknown 9xxx instruction
$310    $3ADB   SE       VA, #DB         ; Skip if VA == 219
$312    $A6D9   LD       I, $6D9         ; Load 6D9 into I
$314    $A4F2   LD       I, $4F2         ; Load 4F2 into I
$316    $CE8B   RND      VE, #8B         ; VE = random & 8B
$318    $B315   JP       V0, $315        ; Jump to V0 + 315
$31A    $1C0F   JP       $C0F            ; Jump to C0F
$31C    $FDD9   UNKNOWN  FDD9            ; Unknown Fxxx instruction
$31E    $D620   DRW      V6, V2, #0      ; Draw 0-byte sprite at V6, V2
$320    $AB20   LD       I, $B20         ; Load B20 into I
$322    $99BE   UNKNOWN  $99BE           ; Unknown 9xxx instruction
$324    $0850   SYS      $850            ; System call to 850
$326    $5043   UNKNOWN  $5043           ; Unknown 5xxx instruction
$328    $AD93   LD       I, $D93         ; Load D93 into I
$32A    $EE45   UNKNOWN  $EE45           ; Unknown Exxx instruction
$32C    $D744   DRW      V7, V4, #4      ; Draw 4-byte sprite at V7, V4
$32E    $C170   RND      V1, #70         ; V1 = random & 70
$330    $F9C0   UNKNOWN  F9C0            ; Unknown Fxxx instruction
$332    $2EF3   CALL     $EF3            ; Call subroutine at EF3
$334    $D88E   DRW      V8, V8, #E      ; Draw 14-byte sprite at V8, V8
$336    $2C4B   CALL     $C4B            ; Call subroutine at C4B
$338    $2EC2   CALL     $EC2            ; Call subroutine at EC2
$33A    $3491   SE       V4, #91         ; Skip if V4 == 145
$33C    $C236   RND      V2, #36         ; V2 = random & 36
$33E    $D7C1   DRW      V7, VC, #1      ; Draw 1-byte sprite at V7, VC
$340    $6FFD   LD       VF, #FD         ; Load 253 into VF
$342    $5346   UNKNOWN  $5346           ; Unknown 5xxx instruction
$344    $90CB   UNKNOWN  $90CB           ; Unknown 9xxx instruction
$346    $14A3   JP       $4A3            ; Jump to 4A3
$348    $8A12   AND      VA, V1          ; VA &= V1
$34A    $2767   CALL     $767            ; Call subroutine at 767
$34C    $DDA2   DRW      VD, VA, #2      ; Draw 2-byte sprite at VD, VA
$34E    $0722   SYS      $722            ; System call to 722
$350    $C0F6   RND      V0, #F6         ; V0 = random & F6
$352    $6B35   LD       VB, #35         ; Load 53 into VB
$354    $B3D0   JP       V0, $3D0        ; Jump to V0 + 3D0
$356    $7738   ADD      V7, #38         ; Add 56 to V7
$358    $3B22   SE       VB, #22         ; Skip if VB == 34
$35A    $F1BD   UNKNOWN  F1BD            ; Unknown Fxxx instruction
$35C    $5B57   UNKNOWN  $5B57           ; Unknown 5xxx instruction
$35E    $F0FB   UNKNOWN  F0FB            ; Unknown Fxxx instruction
$360    $B3F8   JP       V0, $3F8        ; Jump to V0 + 3F8
$362    $E0DD   UNKNOWN  $E0DD           ; Unknown Exxx instruction
$364    $A61C   LD       I, $61C         ; Load 61C into I
$366    $06D0   SYS      $6D0            ; System call to 6D0
$368    $5FCE   UNKNOWN  $5FCE           ; Unknown 5xxx instruction
$36A    $271A   CALL     $71A            ; Call subroutine at 71A
$36C    $04E7   SYS      $4E7            ; System call to 4E7
$36E    $5DCA   UNKNOWN  $5DCA           ; Unknown 5xxx instruction
$370    $91E4   UNKNOWN  $91E4           ; Unknown 9xxx instruction
$372    $CCDF   RND      VC, #DF         ; VC = random & DF
$374    $8951   OR       V9, V5          ; V9 |= V5
$376    $F03B   UNKNOWN  F03B            ; Unknown Fxxx instruction
$378    $6CFF   LD       VC, #FF         ; Load 255 into VC
$37A    $7675   ADD      V6, #75         ; Add 117 to V6
$37C    $233B   CALL     $33B            ; Call subroutine at 33B
$37E    $E0F2   UNKNOWN  $E0F2           ; Unknown Exxx instruction
$380    $3460   SE       V4, #60         ; Skip if V4 == 96
$382    $EC77   UNKNOWN  $EC77           ; Unknown Exxx instruction
$384    $72A0   ADD      V2, #A0         ; Add 160 to V2
$386    $C9BC   RND      V9, #BC         ; V9 = random & BC
$388    $CF32   RND      VF, #32         ; VF = random & 32
$38A    $3C2A   SE       VC, #2A         ; Skip if VC == 42
$38C    $5143   UNKNOWN  $5143           ; Unknown 5xxx instruction
$38E    $C160   RND      V1, #60         ; V1 = random & 60
$390    $6107   LD       V1, #07         ; Load 7 into V1
$392    $6365   LD       V3, #65         ; Load 101 into V3
$394    $7548   ADD      V5, #48         ; Add 72 to V5
$396    $AC6C   LD       I, $C6C         ; Load C6C into I
$398    $CE80   RND      VE, #80         ; VE = random & 80
$39A    $4A3A   SNE      VA, #3A         ; Skip if VA != 58
$39C    $D116   DRW      V1, V1, #6      ; Draw 6-byte sprite at V1, V1
$39E    $6C83   LD       VC, #83         ; Load 131 into VC
$3A0    $CB19   RND      VB, #19         ; VB = random & 19
$3A2    $C46C   RND      V4, #6C         ; V4 = random & 6C
$3A4    $2954   CALL     $954            ; Call subroutine at 954
$3A6    $63D1   LD       V3, #D1         ; Load 209 into V3
$3A8    $6345   LD       V3, #45         ; Load 69 into V3
$3AA    $E728   UNKNOWN  $E728           ; Unknown Exxx instruction
$3AC    $DC05   DRW      VC, V0, #5      ; Draw 5-byte sprite at VC, V0
$3AE    $6F27   LD       VF, #27         ; Load 39 into VF
$3B0    $1BEF   JP       $BEF            ; Jump to BEF
$3B2    $E670   UNKNOWN  $E670           ; Unknown Exxx instruction
$3B4    $EBEC   UNKNOWN  $EBEC           ; Unknown Exxx instruction
$3B6    $7408   ADD      V4, #08         ; Add 8 to V4
$3B8    $8BA6   SHR      VB              ; VB >>= 1, VF = LSB
$3BA    $4324   SNE      V3, #24         ; Skip if V3 != 36
$3BC    $8DA8   UNKNOWN  8DA8            ; Unknown 8xxx instruction
$3BE    $A277   LD       I, $277         ; Load 277 into I
$3C0    $5D87   UNKNOWN  $5D87           ; Unknown 5xxx instruction
$3C2    $8246   SHR      V2              ; V2 >>= 1, VF = LSB
$3C4    $3E68   SE       VE, #68         ; Skip if VE == 104
$3C6    $E495   UNKNOWN  $E495           ; Unknown Exxx instruction
$3C8    $E92F   UNKNOWN  $E92F           ; Unknown Exxx instruction
$3CA    $6D5F   LD       VD, #5F         ; Load 95 into VD
$3CC    $29FE   CALL     $9FE            ; Call subroutine at 9FE
$3CE    $96F3   UNKNOWN  $96F3           ; Unknown 9xxx instruction
$3D0    $01D2   SYS      $1D2            ; System call to 1D2
$3D2    $7E1B   ADD      VE, #1B         ; Add 27 to VE
$3D4    $8835   SUB      V8, V3          ; V8 -= V3, VF = !borrow
$3D6    $1C63   JP       $C63            ; Jump to C63
$3D8    $755B   ADD      V5, #5B         ; Add 91 to V5
$3DA    $C101   RND      V1, #01         ; V1 = random & 01
$3DC    $B5F2   JP       V0, $5F2        ; Jump to V0 + 5F2
$3DE    $4E97   SNE      VE, #97         ; Skip if VE != 151
$3E0    $36A7   SE       V6, #A7         ; Skip if V6 == 167
$3E2    $713B   ADD      V1, #3B         ; Add 59 to V1
$3E4    $3121   SE       V1, #21         ; Skip if V1 == 33
$3E6    $7706   ADD      V7, #06         ; Add 6 to V7
$3E8    $6AFB   LD       VA, #FB         ; Load 251 into VA
$3EA    $B640   JP       V0, $640        ; Jump to V0 + 640
$3EC    $EE55   UNKNOWN  $EE55           ; Unknown Exxx instruction
$3EE    $1E7D   JP       $E7D            ; Jump to E7D
$3F0    $AF90   LD       I, $F90         ; Load F90 into I
$3F2    $73B9   ADD      V3, #B9         ; Add 185 to V3
$3F4    $DE91   DRW      VE, V9, #1      ; Draw 1-byte sprite at VE, V9
$3F6    $EC87   UNKNOWN  $EC87           ; Unknown Exxx instruction
$3F8    $389E   SE       V8, #9E         ; Skip if V8 == 158
$3FA    $F8FD   UNKNOWN  F8FD            ; Unknown Fxxx instruction
$3FC    $5CF5   UNKNOWN  $5CF5           ; Unknown 5xxx instruction
$3FE    $6500   LD       V5, #00         ; Load 0 into V5
$400    $5A42   UNKNOWN  $5A42           ; Unknown 5xxx instruction
$402    $15E0   JP       $5E0            ; Jump to 5E0
$404    $1B9F   JP       $B9F            ; Jump to B9F
$406    $693D   LD       V9, #3D         ; Load 61 into V9
$408    $2EB2   CALL     $EB2            ; Call subroutine at EB2
$40A    $A379   LD       I, $379         ; Load 379 into I
$40C    $5282   UNKNOWN  $5282           ; Unknown 5xxx instruction
$40E    $CBFB   RND      VB, #FB         ; VB = random & FB
$410    $8EC6   SHR      VE              ; VE >>= 1, VF = LSB
$412    $129A   JP       $29A            ; Jump to 29A
$414    $886A   UNKNOWN  886A            ; Unknown 8xxx instruction
$416    $C005   RND      V0, #05         ; V0 = random & 05
$418    $B067   JP       V0, $067        ; Jump to V0 + 067
$41A    $9C93   UNKNOWN  $9C93           ; Unknown 9xxx instruction
$41C    $2646   CALL     $646            ; Call subroutine at 646
$41E    $3965   SE       V9, #65         ; Skip if V9 == 101
$420    $B502   JP       V0, $502        ; Jump to V0 + 502
$422    $2318   CALL     $318            ; Call subroutine at 318
$424    $DED0   DRW      VE, VD, #0      ; Draw 0-byte sprite at VE, VD
$426    $9BF6   UNKNOWN  $9BF6           ; Unknown 9xxx instruction
$428    $79AC   ADD      V9, #AC         ; Add 172 to V9
$42A    $0926   SYS      $926            ; System call to 926
$42C    $4012   SNE      V0, #12         ; Skip if V0 != 18
$42E    $B578   JP       V0, $578        ; Jump to V0 + 578
$430    $0B6D   SYS      $B6D            ; System call to B6D
$432    $A58D   LD       I, $58D         ; Load 58D into I
$434    $414F   SNE      V1, #4F         ; Skip if V1 != 79
$436    $F61E   ADD      I, V6           ; I += V6
$438    $A054   LD       I, $054         ; Load 054 into I
$43A    $DA9F   DRW      VA, V9, #F      ; Draw 15-byte sprite at VA, V9
$43C    $CEB6   RND      VE, #B6         ; VE = random & B6
$43E    $817B   UNKNOWN  817B            ; Unknown 8xxx instruction
$440    $51F9   UNKNOWN  $51F9           ; Unknown 5xxx instruction
$442    $0745   SYS      $745            ; System call to 745
$444    $C88C   RND      V8, #8C         ; V8 = random & 8C
$446    $49DB   SNE      V9, #DB         ; Skip if V9 != 219
$448    $22B8   CALL     $2B8            ; Call subroutine at 2B8
$44A    $E7A0   UNKNOWN  $E7A0           ; Unknown Exxx instruction
$44C    $0FE8   SYS      $FE8            ; System call to FE8
$44E    $79FF   ADD      V9, #FF         ; Add 255 to V9
$450    $4B93   SNE      VB, #93         ; Skip if VB != 147
$452    $605D   LD       V0, #5D         ; Load 93 into V0
$454    $C0AC   RND      V0, #AC         ; V0 = random & AC
$456    $0D14   SYS      $D14            ; System call to D14
$458    $32E7   SE       V2, #E7         ; Skip if V2 == 231
$45A    $2594   CALL     $594            ; Call subroutine at 594
$45C    $F69C   UNKNOWN  F69C            ; Unknown Fxxx instruction
$45E    $92A9   UNKNOWN  $92A9           ; Unknown 9xxx instruction
$460    $4FC9   SNE      VF, #C9         ; Skip if VF != 201
$462    $2422   CALL     $422            ; Call subroutine at 422
$464    $F1C7   UNKNOWN  F1C7            ; Unknown Fxxx instruction
$466    $5B19   UNKNOWN  $5B19           ; Unknown 5xxx instruction
$468    $6D4F   LD       VD, #4F         ; Load 79 into VD
$46A    $5262   UNKNOWN  $5262           ; Unknown 5xxx instruction
$46C    $F1D9   UNKNOWN  F1D9            ; Unknown Fxxx instruction
$46E    $21B8   CALL     $1B8            ; Call subroutine at 1B8
$470    $5653   UNKNOWN  $5653           ; Unknown 5xxx instruction
$472    $1A47   JP       $A47            ; Jump to A47
$474    $3EE1   SE       VE, #E1         ; Skip if VE == 225
$476    $453F   SNE      V5, #3F         ; Skip if V5 != 63
$478    $EE7B   UNKNOWN  $EE7B           ; Unknown Exxx instruction
$47A    $3DA0   SE       VD, #A0         ; Skip if VD == 160
$47C    $F207   LD       V2, DT          ; V2 = delay timer
$47E    $E1BE   UNKNOWN  $E1BE           ; Unknown Exxx instruction
$480    $2FBB   CALL     $FBB            ; Call subroutine at FBB
$482    $F1AD   UNKNOWN  F1AD            ; Unknown Fxxx instruction
$484    $1F7D   JP       $F7D            ; Jump to F7D
$486    $517B   UNKNOWN  $517B           ; Unknown 5xxx instruction
$488    $012A   SYS      $12A            ; System call to 12A
$48A    $1211   JP       $211            ; Jump to 211
$48C    $1BCC   JP       $BCC            ; Jump to BCC
$48E    $70EB   ADD      V0, #EB         ; Add 235 to V0
$490    $6CD0   LD       VC, #D0         ; Load 208 into VC
$492    $44C8   SNE      V4, #C8         ; Skip if V4 != 200
$494    $327B   SE       V2, #7B         ; Skip if V2 == 123
$496    $A81C   LD       I, $81C         ; Load 81C into I
$498    $FC51   UNKNOWN  FC51            ; Unknown Fxxx instruction
$49A    $31AF   SE       V1, #AF         ; Skip if V1 == 175
$49C    $18CF   JP       $8CF            ; Jump to 8CF
$49E    $4D9B   SNE      VD, #9B         ; Skip if VD != 155
$4A0    $7860   ADD      V8, #60         ; Add 96 to V8
$4A2    $4ABD   SNE      VA, #BD         ; Skip if VA != 189
$4A4    $9EA0   SNE      VE, VA          ; Skip if VE != VA
$4A6    $6D8A   LD       VD, #8A         ; Load 138 into VD
$4A8    $C198   RND      V1, #98         ; V1 = random & 98
$4AA    $958D   UNKNOWN  $958D           ; Unknown 9xxx instruction
$4AC    $7872   ADD      V8, #72         ; Add 114 to V8
$4AE    $3856   SE       V8, #56         ; Skip if V8 == 86
$4B0    $C241   RND      V2, #41         ; V2 = random & 41
$4B2    $E2EC   UNKNOWN  $E2EC           ; Unknown Exxx instruction
$4B4    $EB13   UNKNOWN  $EB13           ; Unknown Exxx instruction
$4B6    $0D06   SYS      $D06            ; System call to D06
$4B8    $DBB9   DRW      VB, VB, #9      ; Draw 9-byte sprite at VB, VB
$4BA    $6C73   LD       VC, #73         ; Load 115 into VC
$4BC    $5C3C   UNKNOWN  $5C3C           ; Unknown 5xxx instruction
$4BE    $0379   SYS      $379            ; System call to 379
$4C0    $FFCE   UNKNOWN  FFCE            ; Unknown Fxxx instruction
$4C2    $7D58   ADD      VD, #58         ; Add 88 to VD
$4C4    $E9CB   UNKNOWN  $E9CB           ; Unknown Exxx instruction
$4C6    $8F9B   UNKNOWN  8F9B            ; Unknown 8xxx instruction
$4C8    $AD4E   LD       I, $D4E         ; Load D4E into I
$4CA    $3D54   SE       VD, #54         ; Skip if VD == 84
$4CC    $7AEA   ADD      VA, #EA         ; Add 234 to VA
$4CE    $1A55   JP       $A55            ; Jump to A55
$4D0    $1AB3   JP       $AB3            ; Jump to AB3
$4D2    $4B84   SNE      VB, #84         ; Skip if VB != 132
$4D4    $535D   UNKNOWN  $535D           ; Unknown 5xxx instruction
$4D6    $2A15   CALL     $A15            ; Call subroutine at A15
$4D8    $AA3D   LD       I, $A3D         ; Load A3D into I
$4DA    $3C23   SE       VC, #23         ; Skip if VC == 35
$4DC    $8C69   UNKNOWN  8C69            ; Unknown 8xxx instruction
$4DE    $AF27   LD       I, $F27         ; Load F27 into I
$4E0    $6A70   LD       VA, #70         ; Load 112 into VA
$4E2    $BC01   JP       V0, $C01        ; Jump to V0 + C01
$4E4    $0C59   SYS      $C59            ; System call to C59
$4E6    $0EB2   SYS      $EB2            ; System call to EB2
$4E8    $B2FA   JP       V0, $2FA        ; Jump to V0 + 2FA
$4EA    $6DD3   LD       VD, #D3         ; Load 211 into VD
$4EC    $5AC4   UNKNOWN  $5AC4           ; Unknown 5xxx instruction
$4EE    $35C1   SE       V5, #C1         ; Skip if V5 == 193
$4F0    $917C   UNKNOWN  $917C           ; Unknown 9xxx instruction
$4F2    $EF57   UNKNOWN  $EF57           ; Unknown Exxx instruction
$4F4    $81D7   SUBN     V1, VD          ; V1 = VD - V1, VF = !borrow
$4F6    $63E1   LD       V3, #E1         ; Load 225 into V3
$4F8    $85F4   ADD      V5, VF          ; V5 += VF, VF = carry
$4FA    $4FCA   SNE      VF, #CA         ; Skip if VF != 202
$4FC    $F514   UNKNOWN  F514            ; Unknown Fxxx instruction
$4FE    $3052   SE       V0, #52         ; Skip if V0 == 82
$500    $3B49   SE       VB, #49         ; Skip if VB == 73
$502    $A686   LD       I, $686         ; Load 686 into I
$504    $90EA   UNKNOWN  $90EA           ; Unknown 9xxx instruction
$506    $A831   LD       I, $831         ; Load 831 into I
$508    $F9FA   UNKNOWN  F9FA            ; Unknown Fxxx instruction
$50A    $EEEA   UNKNOWN  $EEEA           ; Unknown Exxx instruction
$50C    $1CBB   JP       $CBB            ; Jump to CBB
$50E    $84EF   UNKNOWN  84EF            ; Unknown 8xxx instruction
$510    $5C7C   UNKNOWN  $5C7C           ; Unknown 5xxx instruction
$512    $15BE   JP       $5BE            ; Jump to 5BE
$514    $3DDF   SE       VD, #DF         ; Skip if VD == 223
$516    $F6FF   UNKNOWN  F6FF            ; Unknown Fxxx instruction
$518    $A2A8   LD       I, $2A8         ; Load 2A8 into I
$51A    $9A0E   UNKNOWN  $9A0E           ; Unknown 9xxx instruction
$51C    $AEB2   LD       I, $EB2         ; Load EB2 into I
$51E    $F5B2   UNKNOWN  F5B2            ; Unknown Fxxx instruction
$520    $73A5   ADD      V3, #A5         ; Add 165 to V3
$522    $14FE   JP       $4FE            ; Jump to 4FE
$524    $3B7C   SE       VB, #7C         ; Skip if VB == 124
$526    $DDD5   DRW      VD, VD, #5      ; Draw 5-byte sprite at VD, VD
$528    $E113   UNKNOWN  $E113           ; Unknown Exxx instruction
$52A    $5CD0   SE       VC, VD          ; Skip if VC == VD
$52C    $CC7D   RND      VC, #7D         ; VC = random & 7D
$52E    $EA6E   UNKNOWN  $EA6E           ; Unknown Exxx instruction
$530    $B4B3   JP       V0, $4B3        ; Jump to V0 + 4B3
$532    $FC39   UNKNOWN  FC39            ; Unknown Fxxx instruction
$534    $260C   CALL     $60C            ; Call subroutine at 60C
$536    $C3C3   RND      V3, #C3         ; V3 = random & C3
$538    $AD74   LD       I, $D74         ; Load D74 into I
$53A    $1A35   JP       $A35            ; Jump to A35
$53C    $5347   UNKNOWN  $5347           ; Unknown 5xxx instruction
$53E    $EFBC   UNKNOWN  $EFBC           ; Unknown Exxx instruction
$540    $15E9   JP       $5E9            ; Jump to 5E9
$542    $8503   XOR      V5, V0          ; V5 ^= V0
$544    $2DEE   CALL     $DEE            ; Call subroutine at DEE
$546    $E8EA   UNKNOWN  $E8EA           ; Unknown Exxx instruction
$548    $B292   JP       V0, $292        ; Jump to V0 + 292
$54A    $F062   UNKNOWN  F062            ; Unknown Fxxx instruction
$54C    $C7C3   RND      V7, #C3         ; V7 = random & C3
$54E    $938C   UNKNOWN  $938C           ; Unknown 9xxx instruction
$550    $7070   ADD      V0, #70         ; Add 112 to V0
$552    $8338   UNKNOWN  8338            ; Unknown 8xxx instruction
$554    $DD8A   DRW      VD, V8, #A      ; Draw 10-byte sprite at VD, V8
$556    $1502   JP       $502            ; Jump to 502
$558    $3E39   SE       VE, #39         ; Skip if VE == 57
$55A    $F8C4   UNKNOWN  F8C4            ; Unknown Fxxx instruction
$55C    $BFF3   JP       V0, $FF3        ; Jump to V0 + FF3
$55E    $BD6E   JP       V0, $D6E        ; Jump to V0 + D6E
$560    $3E02   SE       VE, #02         ; Skip if VE == 2
$562    $F565   LD       V5, [I]         ; Load V0-V5 from I
$564    $B5B3   JP       V0, $5B3        ; Jump to V0 + 5B3
$566    $3307   SE       V3, #07         ; Skip if V3 == 7
$568    $95B0   SNE      V5, VB          ; Skip if V5 != VB
$56A    $98D5   UNKNOWN  $98D5           ; Unknown 9xxx instruction
$56C    $7A8A   ADD      VA, #8A         ; Add 138 to VA
$56E    $662B   LD       V6, #2B         ; Load 43 into V6
$570    $B5AC   JP       V0, $5AC        ; Jump to V0 + 5AC
$572    $25C0   CALL     $5C0            ; Call subroutine at 5C0
$574    $BF86   JP       V0, $F86        ; Jump to V0 + F86
$576    $5D1B   UNKNOWN  $5D1B           ; Unknown 5xxx instruction
$578    $4EBD   SNE      VE, #BD         ; Skip if VE != 189
$57A    $CE72   RND      VE, #72         ; VE = random & 72
$57C    $DDA7   DRW      VD, VA, #7      ; Draw 7-byte sprite at VD, VA
$57E    $4DCA   SNE      VD, #CA         ; Skip if VD != 202
$580    $F766   UNKNOWN  F766            ; Unknown Fxxx instruction
$582    $185B   JP       $85B            ; Jump to 85B
$584    $9F11   UNKNOWN  $9F11           ; Unknown 9xxx instruction
$586    $5EED   UNKNOWN  $5EED           ; Unknown 5xxx instruction
$588    $9920   SNE      V9, V2          ; Skip if V9 != V2
$58A    $B01C   JP       V0, $01C        ; Jump to V0 + 01C
$58C    $3990   SE       V9, #90         ; Skip if V9 == 144
$58E    $B3B6   JP       V0, $3B6        ; Jump to V0 + 3B6
$590    $9502   UNKNOWN  $9502           ; Unknown 9xxx instruction
$592    $DE9A   DRW      VE, V9, #A      ; Draw 10-byte sprite at VE, V9
$594    $D629   DRW      V6, V2, #9      ; Draw 9-byte sprite at V6, V2
$596    $6BFC   LD       VB, #FC         ; Load 252 into VB
$598    $1816   JP       $816            ; Jump to 816
$59A    $05C1   SYS      $5C1            ; System call to 5C1
$59C    $6849   LD       V8, #49         ; Load 73 into V8
$59E    $9805   UNKNOWN  $9805           ; Unknown 9xxx instruction
$5A0    $21CB   CALL     $1CB            ; Call subroutine at 1CB
$5A2    $1267   JP       $267            ; Jump to 267
$5A4    $1C91   JP       $C91            ; Jump to C91
$5A6    $FD1A   UNKNOWN  FD1A            ; Unknown Fxxx instruction
$5A8    $A931   LD       I, $931         ; Load 931 into I
$5AA    $851D   UNKNOWN  851D            ; Unknown 8xxx instruction
$5AC    $C24A   RND      V2, #4A         ; V2 = random & 4A
$5AE    $0628   SYS      $628            ; System call to 628
$5B0    $8E88   UNKNOWN  8E88            ; Unknown 8xxx instruction
$5B2    $10A2   JP       $0A2            ; Jump to 0A2
$5B4    $E364   UNKNOWN  $E364           ; Unknown Exxx instruction
$5B6    $0731   SYS      $731            ; System call to 731
$5B8    $C314   RND      V3, #14         ; V3 = random & 14
$5BA    $067A   SYS      $67A            ; System call to 67A
$5BC    $0B7C   SYS      $B7C            ; System call to B7C
$5BE    $40C2   SNE      V0, #C2         ; Skip if V0 != 194
$5C0    $A0F1   LD       I, $0F1         ; Load 0F1 into I
$5C2    $3555   SE       V5, #55         ; Skip if V5 == 85
$5C4    $FE1F   UNKNOWN  FE1F            ; Unknown Fxxx instruction
$5C6    $BD4D   JP       V0, $D4D        ; Jump to V0 + D4D
$5C8    $EBD3   UNKNOWN  $EBD3           ; Unknown Exxx instruction
$5CA    $516B   UNKNOWN  $516B           ; Unknown 5xxx instruction
$5CC    $05BB   SYS      $5BB            ; System call to 5BB
$5CE    $650A   LD       V5, #0A         ; Load 10 into V5
$5D0    $4461   SNE      V4, #61         ; Skip if V4 != 97
$5D2    $30E2   SE       V0, #E2         ; Skip if V0 == 226
$5D4    $0F7D   SYS      $F7D            ; System call to F7D
$5D6    $4174   SNE      V1, #74         ; Skip if V1 != 116
$5D8    $391F   SE       V9, #1F         ; Skip if V9 == 31
$5DA    $5659   UNKNOWN  $5659           ; Unknown 5xxx instruction
$5DC    $7110   ADD      V1, #10         ; Add 16 to V1
$5DE    $3337   SE       V3, #37         ; Skip if V3 == 55
$5E0    $F17C   UNKNOWN  F17C            ; Unknown Fxxx instruction
$5E2    $B2AC   JP       V0, $2AC        ; Jump to V0 + 2AC
$5E4    $D9DB   DRW      V9, VD, #B      ; Draw 11-byte sprite at V9, VD
$5E6    $1463   JP       $463            ; Jump to 463
$5E8    $8FCD   UNKNOWN  8FCD            ; Unknown 8xxx instruction
$5EA    $74B2   ADD      V4, #B2         ; Add 178 to V4
$5EC    $DEC8   DRW      VE, VC, #8      ; Draw 8-byte sprite at VE, VC
$5EE    $921B   UNKNOWN  $921B           ; Unknown 9xxx instruction
$5F0    $AB78   LD       I, $B78         ; Load B78 into I
$5F2    $8BEC   UNKNOWN  8BEC            ; Unknown 8xxx instruction
$5F4    $FA3E   UNKNOWN  FA3E            ; Unknown Fxxx instruction
$5F6    $5619   UNKNOWN  $5619           ; Unknown 5xxx instruction
$5F8    $A26F   LD       I, $26F         ; Load 26F into I
$5FA    $4AA7   SNE      VA, #A7         ; Skip if VA != 167
$5FC    $3E36   SE       VE, #36         ; Skip if VE == 54
$5FE    $DE33   DRW      VE, V3, #3      ; Draw 3-byte sprite at VE, V3
$600    $CAAF   RND      VA, #AF         ; VA = random & AF
$602    $2B49   CALL     $B49            ; Call subroutine at B49
$604    $7C4B   ADD      VC, #4B         ; Add 75 to VC
$606    $3B7B   SE       VB, #7B         ; Skip if VB == 123
$608    $F5B6   UNKNOWN  F5B6            ; Unknown Fxxx instruction
$60A    $83E5   SUB      V3, VE          ; V3 -= VE, VF = !borrow
$60C    $0FC9   SYS      $FC9            ; System call to FC9
$60E    $2C90   CALL     $C90            ; Call subroutine at C90
$610    $0D24   SYS      $D24            ; System call to D24
$612    $7050   ADD      V0, #50         ; Add 80 to V0
$614    $8A44   ADD      VA, V4          ; VA += V4, VF = carry
$616    $310D   SE       V1, #0D         ; Skip if V1 == 13
$618    $6C03   LD       VC, #03         ; Load 3 into VC
$61A    $3FCC   SE       VF, #CC         ; Skip if VF == 204
$61C    $0111   SYS      $111            ; System call to 111
$61E    $AF0B   LD       I, $F0B         ; Load F0B into I
$620    $C8EE   RND      V8, #EE         ; V8 = random & EE
$622    $3EC6   SE       VE, #C6         ; Skip if VE == 198
$624    $C7A8   RND      V7, #A8         ; V7 = random & A8
$626    $2857   CALL     $857            ; Call subroutine at 857
$628    $6BF6   LD       VB, #F6         ; Load 246 into VB
$62A    $10C2   JP       $0C2            ; Jump to 0C2
$62C    $F1C5   UNKNOWN  F1C5            ; Unknown Fxxx instruction
$62E    $79A0   ADD      V9, #A0         ; Add 160 to V9
$630    $0132   SYS      $132            ; System call to 132
$632    $FA99   UNKNOWN  FA99            ; Unknown Fxxx instruction
$634    $B482   JP       V0, $482        ; Jump to V0 + 482
$636    $31A4   SE       V1, #A4         ; Skip if V1 == 164
$638    $0CD0   SYS      $CD0            ; System call to CD0
$63A    $F9AD   UNKNOWN  F9AD            ; Unknown Fxxx instruction
$63C    $006E   SYS      $06E            ; System call to 06E
$63E    $36AF   SE       V6, #AF         ; Skip if V6 == 175
$640    $A705   LD       I, $705         ; Load 705 into I
$642    $0ADD   SYS      $ADD            ; System call to ADD
$644    $6420   LD       V4, #20         ; Load 32 into V4
$646    $5875   UNKNOWN  $5875           ; Unknown 5xxx instruction
$648    $E0FE   UNKNOWN  $E0FE           ; Unknown Exxx instruction
$64A    $6504   LD       V5, #04         ; Load 4 into V5
$64C    $2A56   CALL     $A56            ; Call subroutine at A56
$64E    $DDDE   DRW      VD, VD, #E      ; Draw 14-byte sprite at VD, VD
$650    $620B   LD       V2, #0B         ; Load 11 into V2
$652    $2EC3   CALL     $EC3            ; Call subroutine at EC3
$654    $FE9C   UNKNOWN  FE9C            ; Unknown Fxxx instruction
$656    $6F4C   LD       VF, #4C         ; Load 76 into VF
$658    $9CD0   SNE      VC, VD          ; Skip if VC != VD
$65A    $9A97   UNKNOWN  $9A97           ; Unknown 9xxx instruction
$65C    $9867   UNKNOWN  $9867           ; Unknown 9xxx instruction
$65E    $8662   AND      V6, V6          ; V6 &= V6
$660    $FEEE   UNKNOWN  FEEE            ; Unknown Fxxx instruction
$662    $566E   UNKNOWN  $566E           ; Unknown 5xxx instruction
$664    $EBB4   UNKNOWN  $EBB4           ; Unknown Exxx instruction
$666    $2BDE   CALL     $BDE            ; Call subroutine at BDE
$668    $0079   SYS      $079            ; System call to 079
$66A    $A592   LD       I, $592         ; Load 592 into I
$66C    $A40B   LD       I, $40B         ; Load 40B into I
$66E    $47A1   SNE      V7, #A1         ; Skip if V7 != 161
$670    $AAF9   LD       I, $AF9         ; Load AF9 into I
$672    $0B7F   SYS      $B7F            ; System call to B7F
$674    $BAED   JP       V0, $AED        ; Jump to V0 + AED
$676    $E41D   UNKNOWN  $E41D           ; Unknown Exxx instruction
$678    $F548   UNKNOWN  F548            ; Unknown Fxxx instruction
$67A    $819E   SHL      V1              ; V1 <<= 1, VF = MSB
$67C    $B548   JP       V0, $548        ; Jump to V0 + 548
$67E    $DCED   DRW      VC, VE, #D      ; Draw 13-byte sprite at VC, VE
$680    $3D07   SE       VD, #07         ; Skip if VD == 7
$682    $14E4   JP       $4E4            ; Jump to 4E4
$684    $A1D6   LD       I, $1D6         ; Load 1D6 into I
$686    $BED5   JP       V0, $ED5        ; Jump to V0 + ED5
$688    $7BB6   ADD      VB, #B6         ; Add 182 to VB
$68A    $6585   LD       V5, #85         ; Load 133 into V5
$68C    $E0A6   UNKNOWN  $E0A6           ; Unknown Exxx instruction
$68E    $E615   UNKNOWN  $E615           ; Unknown Exxx instruction
$690    $F8EF   UNKNOWN  F8EF            ; Unknown Fxxx instruction
$692    $C6A2   RND      V6, #A2         ; V6 = random & A2
$694    $1889   JP       $889            ; Jump to 889
$696    $2FA9   CALL     $FA9            ; Call subroutine at FA9
$698    $7104   ADD      V1, #04         ; Add 4 to V1
$69A    $4D2F   SNE      VD, #2F         ; Skip if VD != 47
$69C    $25CC   CALL     $5CC            ; Call subroutine at 5CC
$69E    $6714   LD       V7, #14         ; Load 20 into V7
$6A0    $CFD0   RND      VF, #D0         ; VF = random & D0
$6A2    $BF6A   JP       V0, $F6A        ; Jump to V0 + F6A
$6A4    $9A5D   UNKNOWN  $9A5D           ; Unknown 9xxx instruction
$6A6    $BB69   JP       V0, $B69        ; Jump to V0 + B69
$6A8    $D092   DRW      V0, V9, #2      ; Draw 2-byte sprite at V0, V9
$6AA    $7F57   ADD      VF, #57         ; Add 87 to VF
$6AC    $0A8B   SYS      $A8B            ; System call to A8B
$6AE    $E2AE   UNKNOWN  $E2AE           ; Unknown Exxx instruction
$6B0    $8029   UNKNOWN  8029            ; Unknown 8xxx instruction
$6B2    $2D4B   CALL     $D4B            ; Call subroutine at D4B
$6B4    $9024   UNKNOWN  $9024           ; Unknown 9xxx instruction
$6B6    $4CC3   SNE      VC, #C3         ; Skip if VC != 195
$6B8    $9CEF   UNKNOWN  $9CEF           ; Unknown 9xxx instruction
$6BA    $6244   LD       V2, #44         ; Load 68 into V2
$6BC    $7760   ADD      V7, #60         ; Add 96 to V7
$6BE    $28B3   CALL     $8B3            ; Call subroutine at 8B3
$6C0    $F364   UNKNOWN  F364            ; Unknown Fxxx instruction
$6C2    $C9CF   RND      V9, #CF         ; V9 = random & CF
$6C4    $F21C   UNKNOWN  F21C            ; Unknown Fxxx instruction
$6C6    $0B53   SYS      $B53            ; System call to B53
$6C8    $8103   XOR      V1, V0          ; V1 ^= V0
$6CA    $DA4E   DRW      VA, V4, #E      ; Draw 14-byte sprite at VA, V4
$6CC    $C014   RND      V0, #14         ; V0 = random & 14
$6CE    $AEDA   LD       I, $EDA         ; Load EDA into I
$6D0    $FAF8   UNKNOWN  FAF8            ; Unknown Fxxx instruction
$6D2    $F75D   UNKNOWN  F75D            ; Unknown Fxxx instruction
$6D4    $576B   UNKNOWN  $576B           ; Unknown 5xxx instruction
$6D6    $DBDA   DRW      VB, VD, #A      ; Draw 10-byte sprite at VB, VD
$6D8    $B41B   JP       V0, $41B        ; Jump to V0 + 41B
$6DA    $9E66   UNKNOWN  $9E66           ; Unknown 9xxx instruction
$6DC    $4EE5   SNE      VE, #E5         ; Skip if VE != 229
$6DE    $EB47   UNKNOWN  $EB47           ; Unknown Exxx instruction
$6E0    $B264   JP       V0, $264        ; Jump to V0 + 264
$6E2    $175E   JP       $75E            ; Jump to 75E
$6E4    $D43C   DRW      V4, V3, #C      ; Draw 12-byte sprite at V4, V3
$6E6    $FC4D   UNKNOWN  FC4D            ; Unknown Fxxx instruction
$6E8    $DDEE   DRW      VD, VE, #E      ; Draw 14-byte sprite at VD, VE
$6EA    $8A0C   UNKNOWN  8A0C            ; Unknown 8xxx instruction
$6EC    $B4A8   JP       V0, $4A8        ; Jump to V0 + 4A8
$6EE    $2DC6   CALL     $DC6            ; Call subroutine at DC6
$6F0    $9556   UNKNOWN  $9556           ; Unknown 9xxx instruction
$6F2    $AB16   LD       I, $B16         ; Load B16 into I
$6F4    $51DF   UNKNOWN  $51DF           ; Unknown 5xxx instruction
$6F6    $0656   SYS      $656            ; System call to 656
$6F8    $0A96   SYS      $A96            ; System call to A96
$6FA    $A349   LD       I, $349         ; Load 349 into I
$6FC    $E4BC   UNKNOWN  $E4BC           ; Unknown Exxx instruction
$6FE    $47F5   SNE      V7, #F5         ; Skip if V7 != 245
$700    $2FC8   CALL     $FC8            ; Call subroutine at FC8
$702    $362F   SE       V6, #2F         ; Skip if V6 == 47
$704    $94D8   UNKNOWN  $94D8           ; Unknown 9xxx instruction
$706    $D848   DRW      V8, V4, #8      ; Draw 8-byte sprite at V8, V4
$708    $0989   SYS      $989            ; System call to 989
$70A    $48CF   SNE      V8, #CF         ; Skip if V8 != 207
$70C    $FBA4   UNKNOWN  FBA4            ; Unknown Fxxx instruction
$70E    $9C9D   UNKNOWN  $9C9D           ; Unknown 9xxx instruction
$710    $86B9   UNKNOWN  86B9            ; Unknown 8xxx instruction
$712    $AA5A   LD       I, $A5A         ; Load A5A into I
$714    $43AD   SNE      V3, #AD         ; Skip if V3 != 173
$716    $9EE1   UNKNOWN  $9EE1           ; Unknown 9xxx instruction
$718    $B537   JP       V0, $537        ; Jump to V0 + 537
$71A    $D2E7   DRW      V2, VE, #7      ; Draw 7-byte sprite at V2, VE
$71C    $4969   SNE      V9, #69         ; Skip if V9 != 105
$71E    $D198   DRW      V1, V9, #8      ; Draw 8-byte sprite at V1, V9
$720    $55E5   UNKNOWN  $55E5           ; Unknown 5xxx instruction
$722    $EE8A   UNKNOWN  $EE8A           ; Unknown Exxx instruction
$724    $648A   LD       V4, #8A         ; Load 138 into V4
$726    $6E97   LD       VE, #97         ; Load 151 into VE
$728    $B6B6   JP       V0, $6B6        ; Jump to V0 + 6B6
$72A    $E569   UNKNOWN  $E569           ; Unknown Exxx instruction
$72C    $038B   SYS      $38B            ; System call to 38B
$72E    $03D2   SYS      $3D2            ; System call to 3D2
$730    $DB72   DRW      VB, V7, #2      ; Draw 2-byte sprite at VB, V7
$732    $665B   LD       V6, #5B         ; Load 91 into V6
$734    $E1CB   UNKNOWN  $E1CB           ; Unknown Exxx instruction
$736    $494F   SNE      V9, #4F         ; Skip if V9 != 79
$738    $0318   SYS      $318            ; System call to 318
$73A    $D46E   DRW      V4, V6, #E      ; Draw 14-byte sprite at V4, V6
$73C    $FE50   UNKNOWN  FE50            ; Unknown Fxxx instruction
$73E    $6195   LD       V1, #95         ; Load 149 into V1
$740    $6F26   LD       VF, #26         ; Load 38 into VF
$742    $2A9D   CALL     $A9D            ; Call subroutine at A9D
$744    $673D   LD       V7, #3D         ; Load 61 into V7
$746    $DE09   DRW      VE, V0, #9      ; Draw 9-byte sprite at VE, V0
$748    $A7FD   LD       I, $7FD         ; Load 7FD into I
$74A    $85B0   LD       V5, VB          ; V5 = VB
$74C    $3F2F   SE       VF, #2F         ; Skip if VF == 47
$74E    $C178   RND      V1, #78         ; V1 = random & 78
$750    $CAAC   RND      VA, #AC         ; VA = random & AC
$752    $AF2A   LD       I, $F2A         ; Load F2A into I
$754    $C8CD   RND      V8, #CD         ; V8 = random & CD
$756    $2834   CALL     $834            ; Call subroutine at 834
$758    $5A30   SE       VA, V3          ; Skip if VA == V3
$75A    $CEB6   RND      VE, #B6         ; VE = random & B6
$75C    $7941   ADD      V9, #41         ; Add 65 to V9
$75E    $EC24   UNKNOWN  $EC24           ; Unknown Exxx instruction
$760    $E808   UNKNOWN  $E808           ; Unknown Exxx instruction
$762    $A731   LD       I, $731         ; Load 731 into I
$764    $5B46   UNKNOWN  $5B46           ; Unknown 5xxx instruction
$766    $9851   UNKNOWN  $9851           ; Unknown 9xxx instruction
$768    $8203   XOR      V2, V0          ; V2 ^= V0
$76A    $7194   ADD      V1, #94         ; Add 148 to V1
$76C    $5276   UNKNOWN  $5276           ; Unknown 5xxx instruction
$76E    $0A26   SYS      $A26            ; System call to A26
$770    $543E   UNKNOWN  $543E           ; Unknown 5xxx instruction
$772    $D67B   DRW      V6, V7, #B      ; Draw 11-byte sprite at V6, V7
$774    $30B3   SE       V0, #B3         ; Skip if V0 == 179
$776    $C4BA   RND      V4, #BA         ; V4 = random & BA
$778    $2F96   CALL     $F96            ; Call subroutine at F96
$77A    $F4C2   UNKNOWN  F4C2            ; Unknown Fxxx instruction
$77C    $0F97   SYS      $F97            ; System call to F97
$77E    $6F4C   LD       VF, #4C         ; Load 76 into VF
$780    $253B   CALL     $53B            ; Call subroutine at 53B
$782    $8C59   UNKNOWN  8C59            ; Unknown 8xxx instruction
$784    $815D   UNKNOWN  815D            ; Unknown 8xxx instruction
$786    $5C00   SE       VC, V0          ; Skip if VC == V0
$788    $1DB7   JP       $DB7            ; Jump to DB7
$78A    $A64D   LD       I, $64D         ; Load 64D into I
$78C    $FA79   UNKNOWN  FA79            ; Unknown Fxxx instruction
$78E    $9D74   UNKNOWN  $9D74           ; Unknown 9xxx instruction
$790    $8CF6   SHR      VC              ; VC >>= 1, VF = LSB
$792    $B481   JP       V0, $481        ; Jump to V0 + 481
$794    $D5C0   DRW      V5, VC, #0      ; Draw 0-byte sprite at V5, VC
$796    $5697   UNKNOWN  $5697           ; Unknown 5xxx instruction
$798    $E396   UNKNOWN  $E396           ; Unknown Exxx instruction
$79A    $6753   LD       V7, #53         ; Load 83 into V7
$79C    $7771   ADD      V7, #71         ; Add 113 to V7
$79E    $929F   UNKNOWN  $929F           ; Unknown 9xxx instruction
$7A0    $5574   UNKNOWN  $5574           ; Unknown 5xxx instruction
$7A2    $A2FD   LD       I, $2FD         ; Load 2FD into I
$7A4    $E74D   UNKNOWN  $E74D           ; Unknown Exxx instruction
$7A6    $3549   SE       V5, #49         ; Skip if V5 == 73
$7A8    $AE90   LD       I, $E90         ; Load E90 into I
$7AA    $43D0   SNE      V3, #D0         ; Skip if V3 != 208
$7AC    $795A   ADD      V9, #5A         ; Add 90 to V9
$7AE    $964E   UNKNOWN  $964E           ; Unknown 9xxx instruction
$7B0    $7EA6   ADD      VE, #A6         ; Add 166 to VE
$7B2    $2912   CALL     $912            ; Call subroutine at 912
$7B4    $DA63   DRW      VA, V6, #3      ; Draw 3-byte sprite at VA, V6
$7B6    $1022   JP       $022            ; Jump to 022
$7B8    $11D0   JP       $1D0            ; Jump to 1D0
$7BA    $EB33   UNKNOWN  $EB33           ; Unknown Exxx instruction
$7BC    $E377   UNKNOWN  $E377           ; Unknown Exxx instruction
$7BE    $8658   UNKNOWN  8658            ; Unknown 8xxx instruction
$7C0    $3F31   SE       VF, #31         ; Skip if VF == 49
$7C2    $8C89   UNKNOWN  8C89            ; Unknown 8xxx instruction
$7C4    $5ACF   UNKNOWN  $5ACF           ; Unknown 5xxx instruction
$7C6    $0DD6   SYS      $DD6            ; System call to DD6
$7C8    $F8B9   UNKNOWN  F8B9            ; Unknown Fxxx instruction
$7CA    $1DEB   JP       $DEB            ; Jump to DEB
$7CC    $BE2E   JP       V0, $E2E        ; Jump to V0 + E2E
$7CE    $230A   CALL     $30A            ; Call subroutine at 30A
$7D0    $B8CF   JP       V0, $8CF        ; Jump to V0 + 8CF
$7D2    $2A44   CALL     $A44            ; Call subroutine at A44
$7D4    $9D7F   UNKNOWN  $9D7F           ; Unknown 9xxx instruction
$7D6    $ACDE   LD       I, $CDE         ; Load CDE into I
$7D8    $187A   JP       $87A            ; Jump to 87A
$7DA    $4661   SNE      V6, #61         ; Skip if V6 != 97
$7DC    $DFE4   DRW      VF, VE, #4      ; Draw 4-byte sprite at VF, VE
$7DE    $4C76   SNE      VC, #76         ; Skip if VC != 118
$7E0    $6AAC   LD       VA, #AC         ; Load 172 into VA
$7E2    $3E6D   SE       VE, #6D         ; Skip if VE == 109
$7E4    $A454   LD       I, $454         ; Load 454 into I
$7E6    $FFEA   UNKNOWN  FFEA            ; Unknown Fxxx instruction
$7E8    $5C85   UNKNOWN  $5C85           ; Unknown 5xxx instruction
$7EA    $E5B6   UNKNOWN  $E5B6           ; Unknown Exxx instruction
$7EC    $8717   SUBN     V7, V1          ; V7 = V1 - V7, VF = !borrow
$7EE    $6DEF   LD       VD, #EF         ; Load 239 into VD
$7F0    $474C   SNE      V7, #4C         ; Skip if V7 != 76
$7F2    $0431   SYS      $431            ; System call to 431
$7F4    $DA68   DRW      VA, V6, #8      ; Draw 8-byte sprite at VA, V6
$7F6    $683A   LD       V8, #3A         ; Load 58 into V8
$7F8    $1D70   JP       $D70            ; Jump to D70
$7FA    $F0CA   UNKNOWN  F0CA            ; Unknown Fxxx instruction
$7FC    $F304   UNKNOWN  F304            ; Unknown Fxxx instruction
$7FE    $9EEB   UNKNOWN  $9EEB           ; Unknown 9xxx instruction
$800    $615D   LD       V1, #5D         ; Load 93 into V1
$802    $C1FF   RND      V1, #FF         ; V1 = random & FF
$804    $3336   SE       V3, #36         ; Skip if V3 == 54
$806    $53FA   UNKNOWN  $53FA           ; Unknown 5xxx instruction
$808    $29C1   CALL     $9C1            ; Call subroutine at 9C1
$80A    $637C   LD       V3, #7C         ; Load 124 into V3
$80C    $4F7F   SNE      VF, #7F         ; Skip if VF != 127
$80E    $C0BD   RND      V0, #BD         ; V0 = random & BD
$810    $E37D   UNKNOWN  $E37D           ; Unknown Exxx instruction
$812    $4F6B   SNE      VF, #6B         ; Skip if VF != 107
$814    $6849   LD       V8, #49         ; Load 73 into V8
$816    $AEB4   LD       I, $EB4         ; Load EB4 into I
$818    $C72B   RND      V7, #2B         ; V7 = random & 2B
$81A    $A367   LD       I, $367         ; Load 367 into I
$81C    $F2C0   UNKNOWN  F2C0            ; Unknown Fxxx instruction
$81E    $1EC3   JP       $EC3            ; Jump to EC3
$820    $ED24   UNKNOWN  $ED24           ; Unknown Exxx instruction
$822    $93E6   UNKNOWN  $93E6           ; Unknown 9xxx instruction
$824    $F5C6   UNKNOWN  F5C6            ; Unknown Fxxx instruction
$826    $D304   DRW      V3, V0, #4      ; Draw 4-byte sprite at V3, V0
$828    $38D3   SE       V8, #D3         ; Skip if V8 == 211
$82A    $A15A   LD       I, $15A         ; Load 15A into I
$82C    $EB6D   UNKNOWN  $EB6D           ; Unknown Exxx instruction
$82E    $5A13   UNKNOWN  $5A13           ; Unknown 5xxx instruction
$830    $3909   SE       V9, #09         ; Skip if V9 == 9
$832    $E331   UNKNOWN  $E331           ; Unknown Exxx instruction
$834    $B5BA   JP       V0, $5BA        ; Jump to V0 + 5BA
$836    $BAC2   JP       V0, $AC2        ; Jump to V0 + AC2
$838    $EEF1   UNKNOWN  $EEF1           ; Unknown Exxx instruction
$83A    $51DB   UNKNOWN  $51DB           ; Unknown 5xxx instruction
$83C    $C136   RND      V1, #36         ; V1 = random & 36
$83E    $35BB   SE       V5, #BB         ; Skip if V5 == 187
$840    $EC15   UNKNOWN  $EC15           ; Unknown Exxx instruction
$842    $DB18   DRW      VB, V1, #8      ; Draw 8-byte sprite at VB, V1
$844    $DE8B   DRW      VE, V8, #B      ; Draw 11-byte sprite at VE, V8
$846    $FEFC   UNKNOWN  FEFC            ; Unknown Fxxx instruction
$848    $5369   UNKNOWN  $5369           ; Unknown 5xxx instruction
$84A    $D54A   DRW      V5, V4, #A      ; Draw 10-byte sprite at V5, V4
$84C    $A089   LD       I, $089         ; Load 089 into I
$84E    $49FD   SNE      V9, #FD         ; Skip if V9 != 253
$850    $A8B6   LD       I, $8B6         ; Load 8B6 into I
$852    $BC09   JP       V0, $C09        ; Jump to V0 + C09
$854    $7709   ADD      V7, #09         ; Add 9 to V7
$856    $D4E9   DRW      V4, VE, #9      ; Draw 9-byte sprite at V4, VE
$858    $EC58   UNKNOWN  $EC58           ; Unknown Exxx instruction
$85A    $8FFB   UNKNOWN  8FFB            ; Unknown 8xxx instruction
$85C    $A76B   LD       I, $76B         ; Load 76B into I
$85E    $79FA   ADD      V9, #FA         ; Add 250 to V9
$860    $BB75   JP       V0, $B75        ; Jump to V0 + B75
$862    $50CE   UNKNOWN  $50CE           ; Unknown 5xxx instruction
$864    $3474   SE       V4, #74         ; Skip if V4 == 116
$866    $C889   RND      V8, #89         ; V8 = random & 89
$868    $A021   LD       I, $021         ; Load 021 into I
$86A    $4480   SNE      V4, #80         ; Skip if V4 != 128
$86C    $ADB2   LD       I, $DB2         ; Load DB2 into I
$86E    $FD04   UNKNOWN  FD04            ; Unknown Fxxx instruction
$870    $E26D   UNKNOWN  $E26D           ; Unknown Exxx instruction
$872    $5513   UNKNOWN  $5513           ; Unknown 5xxx instruction
$874    $A4C3   LD       I, $4C3         ; Load 4C3 into I
$876    $F4F6   UNKNOWN  F4F6            ; Unknown Fxxx instruction
$878    $7014   ADD      V0, #14         ; Add 20 to V0
$87A    $9857   UNKNOWN  $9857           ; Unknown 9xxx instruction
$87C    $8FB3   XOR      VF, VB          ; VF ^= VB
$87E    $5C56   UNKNOWN  $5C56           ; Unknown 5xxx instruction
$880    $0E56   SYS      $E56            ; System call to E56
$882    $59EA   UNKNOWN  $59EA           ; Unknown 5xxx instruction
$884    $29D2   CALL     $9D2            ; Call subroutine at 9D2
$886    $9209   UNKNOWN  $9209           ; Unknown 9xxx instruction
$888    $B7F6   JP       V0, $7F6        ; Jump to V0 + 7F6
$88A    $506D   UNKNOWN  $506D           ; Unknown 5xxx instruction
$88C    $8BB6   SHR      VB              ; VB >>= 1, VF = LSB
$88E    $F872   UNKNOWN  F872            ; Unknown Fxxx instruction
$890    $C132   RND      V1, #32         ; V1 = random & 32
$892    $DB0A   DRW      VB, V0, #A      ; Draw 10-byte sprite at VB, V0
$894    $490F   SNE      V9, #0F         ; Skip if V9 != 15
$896    $458F   SNE      V5, #8F         ; Skip if V5 != 143
$898    $4C17   SNE      VC, #17         ; Skip if VC != 23
$89A    $02FB   SYS      $2FB            ; System call to 2FB
$89C    $42F8   SNE      V2, #F8         ; Skip if V2 != 248
$89E    $88B0   LD       V8, VB          ; V8 = VB
$8A0    $1C86   JP       $C86            ; Jump to C86
$8A2    $D2C3   DRW      V2, VC, #3      ; Draw 3-byte sprite at V2, VC
$8A4    $FF49   UNKNOWN  FF49            ; Unknown Fxxx instruction
$8A6    $9A0B   UNKNOWN  $9A0B           ; Unknown 9xxx instruction
$8A8    $8549   UNKNOWN  8549            ; Unknown 8xxx instruction
$8AA    $7B7E   ADD      VB, #7E         ; Add 126 to VB
$8AC    $E18A   UNKNOWN  $E18A           ; Unknown Exxx instruction
$8AE    $E5B0   UNKNOWN  $E5B0           ; Unknown Exxx instruction
$8B0    $637D   LD       V3, #7D         ; Load 125 into V3
$8B2    $3E3D   SE       VE, #3D         ; Skip if VE == 61
$8B4    $17F1   JP       $7F1            ; Jump to 7F1
$8B6    $5EA1   UNKNOWN  $5EA1           ; Unknown 5xxx instruction
$8B8    $7FFD   ADD      VF, #FD         ; Add 253 to VF
$8BA    $7EBB   ADD      VE, #BB         ; Add 187 to VE
$8BC    $7758   ADD      V7, #58         ; Add 88 to V7
$8BE    $9DDA   UNKNOWN  $9DDA           ; Unknown 9xxx instruction
$8C0    $8F8B   UNKNOWN  8F8B            ; Unknown 8xxx instruction
$8C2    $63EA   LD       V3, #EA         ; Load 234 into V3
$8C4    $1503   JP       $503            ; Jump to 503
$8C6    $88D3   XOR      V8, VD          ; V8 ^= VD
$8C8    $2080   CALL     $080            ; Call subroutine at 080
$8CA    $9785   UNKNOWN  $9785           ; Unknown 9xxx instruction
$8CC    $A8EC   LD       I, $8EC         ; Load 8EC into I
$8CE    $3368   SE       V3, #68         ; Skip if V3 == 104
$8D0    $3532   SE       V5, #32         ; Skip if V5 == 50
$8D2    $1411   JP       $411            ; Jump to 411
$8D4    $374F   SE       V7, #4F         ; Skip if V7 == 79
$8D6    $A938   LD       I, $938         ; Load 938 into I
$8D8    $8C0C   UNKNOWN  8C0C            ; Unknown 8xxx instruction
$8DA    $707C   ADD      V0, #7C         ; Add 124 to V0
$8DC    $39B5   SE       V9, #B5         ; Skip if V9 == 181
$8DE    $1F0A   JP       $F0A            ; Jump to F0A
$8E0    $3F50   SE       VF, #50         ; Skip if VF == 80
$8E2    $7D52   ADD      VD, #52         ; Add 82 to VD
$8E4    $2E81   CALL     $E81            ; Call subroutine at E81
$8E6    $132E   JP       $32E            ; Jump to 32E
$8E8    $E3B8   UNKNOWN  $E3B8           ; Unknown Exxx instruction
$8EA    $3838   SE       V8, #38         ; Skip if V8 == 56
$8EC    $6CB4   LD       VC, #B4         ; Load 180 into VC
$8EE    $731B   ADD      V3, #1B         ; Add 27 to V3
$8F0    $BF7F   JP       V0, $F7F        ; Jump to V0 + F7F
$8F2    $4AB8   SNE      VA, #B8         ; Skip if VA != 184
$8F4    $3EEA   SE       VE, #EA         ; Skip if VE == 234
$8F6    $A6E5   LD       I, $6E5         ; Load 6E5 into I
$8F8    $9A28   UNKNOWN  $9A28           ; Unknown 9xxx instruction
$8FA    $3511   SE       V5, #11         ; Skip if V5 == 17
$8FC    $6038   LD       V0, #38         ; Load 56 into V0
$8FE    $2213   CALL     $213            ; Call subroutine at 213
$900    $E3D1   UNKNOWN  $E3D1           ; Unknown Exxx instruction
$902    $C83E   RND      V8, #3E         ; V8 = random & 3E
$904    $6B7B   LD       VB, #7B         ; Load 123 into VB
$906    $4B83   SNE      VB, #83         ; Skip if VB != 131
$908    $0030   SYS      $030            ; System call to 030
$90A    $FB05   UNKNOWN  FB05            ; Unknown Fxxx instruction
$90C    $190D   JP       $90D            ; Jump to 90D
$90E    $4F92   SNE      VF, #92         ; Skip if VF != 146
$910    $CB46   RND      VB, #46         ; VB = random & 46
$912    $A7AB   LD       I, $7AB         ; Load 7AB into I
$914    $DEE2   DRW      VE, VE, #2      ; Draw 2-byte sprite at VE, VE
$916    $85E2   AND      V5, VE          ; V5 &= VE
$918    $7CA0   ADD      VC, #A0         ; Add 160 to VC
$91A    $96FD   UNKNOWN  $96FD           ; Unknown 9xxx instruction
$91C    $A017   LD       I, $017         ; Load 017 into I
$91E    $2F92   CALL     $F92            ; Call subroutine at F92
$920    $0109   SYS      $109            ; System call to 109
$922    $CEDC   RND      VE, #DC         ; VE = random & DC
$924    $59ED   UNKNOWN  $59ED           ; Unknown 5xxx instruction
$926    $1995   JP       $995            ; Jump to 995
$928    $2291   CALL     $291            ; Call subroutine at 291
$92A    $E165   UNKNOWN  $E165           ; Unknown Exxx instruction
$92C    $B88C   JP       V0, $88C        ; Jump to V0 + 88C
$92E    $7459   ADD      V4, #59         ; Add 89 to V4
$930    $CD62   RND      VD, #62         ; VD = random & 62
$932    $D59F   DRW      V5, V9, #F      ; Draw 15-byte sprite at V5, V9
$934    $EBD3   UNKNOWN  $EBD3           ; Unknown Exxx instruction
$936    $1CA2   JP       $CA2            ; Jump to CA2
$938    $B0A2   JP       V0, $0A2        ; Jump to V0 + 0A2
$93A    $EA2C   UNKNOWN  $EA2C           ; Unknown Exxx instruction
$93C    $E7E0   UNKNOWN  $E7E0           ; Unknown Exxx instruction
$93E    $1C8C   JP       $C8C            ; Jump to C8C
$940    $4B3F   SNE      VB, #3F         ; Skip if VB != 63
$942    $FDD5   UNKNOWN  FDD5            ; Unknown Fxxx instruction
$944    $6056   LD       V0, #56         ; Load 86 into V0
$946    $8B1C   UNKNOWN  8B1C            ; Unknown 8xxx instruction
$948    $85B0   LD       V5, VB          ; V5 = VB
$94A    $04B4   SYS      $4B4            ; System call to 4B4
$94C    $D24F   DRW      V2, V4, #F      ; Draw 15-byte sprite at V2, V4
$94E    $BC3C   JP       V0, $C3C        ; Jump to V0 + C3C
$950    $2413   CALL     $413            ; Call subroutine at 413
$952    $058A   SYS      $58A            ; System call to 58A
$954    $D4FE   DRW      V4, VF, #E      ; Draw 14-byte sprite at V4, VF
$956    $0BA4   SYS      $BA4            ; System call to BA4
$958    $406D   SNE      V0, #6D         ; Skip if V0 != 109
$95A    $3950   SE       V9, #50         ; Skip if V9 == 80
$95C    $2491   CALL     $491            ; Call subroutine at 491
$95E    $1F46   JP       $F46            ; Jump to F46
$960    $26EF   CALL     $6EF            ; Call subroutine at 6EF
$962    $D5DA   DRW      V5, VD, #A      ; Draw 10-byte sprite at V5, VD
$964    $16DB   JP       $6DB            ; Jump to 6DB
$966    $F2E5   UNKNOWN  F2E5            ; Unknown Fxxx instruction
$968    $8FC9   UNKNOWN  8FC9            ; Unknown 8xxx instruction
$96A    $01A6   SYS      $1A6            ; System call to 1A6
$96C    $FC12   UNKNOWN  FC12            ; Unknown Fxxx instruction
$96E    $E971   UNKNOWN  $E971           ; Unknown Exxx instruction
$970    $B189   JP       V0, $189        ; Jump to V0 + 189
$972    $D04E   DRW      V0, V4, #E      ; Draw 14-byte sprite at V0, V4
$974    $D8A7   DRW      V8, VA, #7      ; Draw 7-byte sprite at V8, VA
$976    $E154   UNKNOWN  $E154           ; Unknown Exxx instruction
$978    $E1D7   UNKNOWN  $E1D7           ; Unknown Exxx instruction
$97A    $885E   SHL      V8              ; V8 <<= 1, VF = MSB
$97C    $2D45   CALL     $D45            ; Call subroutine at D45
$97E    $7ED3   ADD      VE, #D3         ; Add 211 to VE
$980    $C7AE   RND      V7, #AE         ; V7 = random & AE
$982    $5EC9   UNKNOWN  $5EC9           ; Unknown 5xxx instruction
$984    $B618   JP       V0, $618        ; Jump to V0 + 618
$986    $5EE5   UNKNOWN  $5EE5           ; Unknown 5xxx instruction
$988    $2919   CALL     $919            ; Call subroutine at 919
$98A    $E07F   UNKNOWN  $E07F           ; Unknown Exxx instruction
$98C    $EC78   UNKNOWN  $EC78           ; Unknown Exxx instruction
$98E    $073E   SYS      $73E            ; System call to 73E
$990    $B4F7   JP       V0, $4F7        ; Jump to V0 + 4F7
$992    $F64E   UNKNOWN  F64E            ; Unknown Fxxx instruction
$994    $698E   LD       V9, #8E         ; Load 142 into V9
$996    $4001   SNE      V0, #01         ; Skip if V0 != 1
$998    $9717   UNKNOWN  $9717           ; Unknown 9xxx instruction
$99A    $0216   SYS      $216            ; System call to 216
$99C    $9CE1   UNKNOWN  $9CE1           ; Unknown 9xxx instruction
$99E    $4A2A   SNE      VA, #2A         ; Skip if VA != 42
$9A0    $35FF   SE       V5, #FF         ; Skip if V5 == 255
$9A2    $CC6B   RND      VC, #6B         ; VC = random & 6B
$9A4    $6F34   LD       VF, #34         ; Load 52 into VF
$9A6    $E861   UNKNOWN  $E861           ; Unknown Exxx instruction
$9A8    $FFE3   UNKNOWN  FFE3            ; Unknown Fxxx instruction
$9AA    $E55F   UNKNOWN  $E55F           ; Unknown Exxx instruction
$9AC    $077E   SYS      $77E            ; System call to 77E
$9AE    $B47E   JP       V0, $47E        ; Jump to V0 + 47E
$9B0    $8D19   UNKNOWN  8D19            ; Unknown 8xxx instruction
$9B2    $EB45   UNKNOWN  $EB45           ; Unknown Exxx instruction
$9B4    $E5CF   UNKNOWN  $E5CF           ; Unknown Exxx instruction
$9B6    $DB9E   DRW      VB, V9, #E      ; Draw 14-byte sprite at VB, V9
$9B8    $9182   UNKNOWN  $9182           ; Unknown 9xxx instruction
$9BA    $5CBE   UNKNOWN  $5CBE           ; Unknown 5xxx instruction
$9BC    $CF11   RND      VF, #11         ; VF = random & 11
$9BE    $DD86   DRW      VD, V8, #6      ; Draw 6-byte sprite at VD, V8
$9C0    $4F2D   SNE      VF, #2D         ; Skip if VF != 45
$9C2    $6D24   LD       VD, #24         ; Load 36 into VD
$9C4    $CAE2   RND      VA, #E2         ; VA = random & E2
$9C6    $75B6   ADD      V5, #B6         ; Add 182 to V5
$9C8    $608D   LD       V0, #8D         ; Load 141 into V0
$9CA    $003C   SYS      $03C            ; System call to 03C
$9CC    $277B   CALL     $77B            ; Call subroutine at 77B
$9CE    $D0C6   DRW      V0, VC, #6      ; Draw 6-byte sprite at V0, VC
$9D0    $6629   LD       V6, #29         ; Load 41 into V6
$9D2    $871B   UNKNOWN  871B            ; Unknown 8xxx instruction
$9D4    $0341   SYS      $341            ; System call to 341
$9D6    $A3E0   LD       I, $3E0         ; Load 3E0 into I
$9D8    $02AB   SYS      $2AB            ; System call to 2AB
$9DA    $75B5   ADD      V5, #B5         ; Add 181 to V5
$9DC    $3227   SE       V2, #27         ; Skip if V2 == 39
$9DE    $6429   LD       V4, #29         ; Load 41 into V4
$9E0    $8569   UNKNOWN  8569            ; Unknown 8xxx instruction
$9E2    $7690   ADD      V6, #90         ; Add 144 to V6
$9E4    $0F52   SYS      $F52            ; System call to F52
$9E6    $3C75   SE       VC, #75         ; Skip if VC == 117
$9E8    $357A   SE       V5, #7A         ; Skip if V5 == 122
$9EA    $CCE2   RND      VC, #E2         ; VC = random & E2
$9EC    $7E05   ADD      VE, #05         ; Add 5 to VE
$9EE    $CAB9   RND      VA, #B9         ; VA = random & B9
$9F0    $912A   UNKNOWN  $912A           ; Unknown 9xxx instruction
$9F2    $98B9   UNKNOWN  $98B9           ; Unknown 9xxx instruction
$9F4    $1199   JP       $199            ; Jump to 199
$9F6    $39AD   SE       V9, #AD         ; Skip if V9 == 173
$9F8    $5961   UNKNOWN  $5961           ; Unknown 5xxx instruction
$9FA    $298A   CALL     $98A            ; Call subroutine at 98A
$9FC    $10C6   JP       $0C6            ; Jump to 0C6
$9FE    $9E77   UNKNOWN  $9E77           ; Unknown 9xxx instruction
$A00    $FDD8   UNKNOWN  FDD8            ; Unknown Fxxx instruction
$A02    $7E3A   ADD      VE, #3A         ; Add 58 to VE
$A04    $26A1   CALL     $6A1            ; Call subroutine at 6A1
$A06    $BA94   JP       V0, $A94        ; Jump to V0 + A94
$A08    $72D6   ADD      V2, #D6         ; Add 214 to V2
$A0A    $0ABD   SYS      $ABD            ; System call to ABD
$A0C    $2143   CALL     $143            ; Call subroutine at 143
$A0E    $4CBC   SNE      VC, #BC         ; Skip if VC != 188
$A10    $A2C1   LD       I, $2C1         ; Load 2C1 into I
$A12    $F487   UNKNOWN  F487            ; Unknown Fxxx instruction
$A14    $231A   CALL     $31A            ; Call subroutine at 31A
$A16    $C26D   RND      V2, #6D         ; V2 = random & 6D
$A18    $4AC8   SNE      VA, #C8         ; Skip if VA != 200
$A1A    $F57B   UNKNOWN  F57B            ; Unknown Fxxx instruction
$A1C    $74A9   ADD      V4, #A9         ; Add 169 to V4
$A1E    $21CB   CALL     $1CB            ; Call subroutine at 1CB
$A20    $70CA   ADD      V0, #CA         ; Add 202 to V0
$A22    $A014   LD       I, $014         ; Load 014 into I
$A24    $61B3   LD       V1, #B3         ; Load 179 into V1
$A26    $4FB4   SNE      VF, #B4         ; Skip if VF != 180
$A28    $9882   UNKNOWN  $9882           ; Unknown 9xxx instruction
$A2A    $3C67   SE       VC, #67         ; Skip if VC == 103
$A2C    $DD68   DRW      VD, V6, #8      ; Draw 8-byte sprite at VD, V6
$A2E    $4B92   SNE      VB, #92         ; Skip if VB != 146
$A30    $BE7D   JP       V0, $E7D        ; Jump to V0 + E7D
$A32    $FA44   UNKNOWN  FA44            ; Unknown Fxxx instruction
$A34    $95F5   UNKNOWN  $95F5           ; Unknown 9xxx instruction
$A36    $68CC   LD       V8, #CC         ; Load 204 into V8
$A38    $D1AC   DRW      V1, VA, #C      ; Draw 12-byte sprite at V1, VA
$A3A    $A69B   LD       I, $69B         ; Load 69B into I
$A3C    $3596   SE       V5, #96         ; Skip if V5 == 150
$A3E    $F65E   UNKNOWN  F65E            ; Unknown Fxxx instruction
$A40    $37F5   SE       V7, #F5         ; Skip if V7 == 245
$A42    $6D73   LD       VD, #73         ; Load 115 into VD
$A44    $20A6   CALL     $0A6            ; Call subroutine at 0A6
$A46    $058C   SYS      $58C            ; System call to 58C
$A48    $A62E   LD       I, $62E         ; Load 62E into I
$A4A    $5010   SE       V0, V1          ; Skip if V0 == V1
$A4C    $9FE2   UNKNOWN  $9FE2           ; Unknown 9xxx instruction
$A4E    $7957   ADD      V9, #57         ; Add 87 to V9
$A50    $A5CD   LD       I, $5CD         ; Load 5CD into I
$A52    $4A12   SNE      VA, #12         ; Skip if VA != 18
$A54    $DD23   DRW      VD, V2, #3      ; Draw 3-byte sprite at VD, V2
$A56    $61A8   LD       V1, #A8         ; Load 168 into V1
$A58    $4065   SNE      V0, #65         ; Skip if V0 != 101
$A5A    $273D   CALL     $73D            ; Call subroutine at 73D
$A5C    $D756   DRW      V7, V5, #6      ; Draw 6-byte sprite at V7, V5
$A5E    $80E2   AND      V0, VE          ; V0 &= VE
$A60    $D1DA   DRW      V1, VD, #A      ; Draw 10-byte sprite at V1, VD
$A62    $F774   UNKNOWN  F774            ; Unknown Fxxx instruction
$A64    $4A2F   SNE      VA, #2F         ; Skip if VA != 47
$A66    $6013   LD       V0, #13         ; Load 19 into V0
$A68    $C67E   RND      V6, #7E         ; V6 = random & 7E
$A6A    $BF21   JP       V0, $F21        ; Jump to V0 + F21
$A6C    $BCA3   JP       V0, $CA3        ; Jump to V0 + CA3
$A6E    $BCB8   JP       V0, $CB8        ; Jump to V0 + CB8
$A70    $506F   UNKNOWN  $506F           ; Unknown 5xxx instruction
$A72    $168F   JP       $68F            ; Jump to 68F
$A74    $1436   JP       $436            ; Jump to 436
$A76    $9449   UNKNOWN  $9449           ; Unknown 9xxx instruction
$A78    $8D4F   UNKNOWN  8D4F            ; Unknown 8xxx instruction
$A7A    $4743   SNE      V7, #43         ; Skip if V7 != 67
$A7C    $18C8   JP       $8C8            ; Jump to 8C8
$A7E    $3925   SE       V9, #25         ; Skip if V9 == 37
$A80    $6EC7   LD       VE, #C7         ; Load 199 into VE
$A82    $1470   JP       $470            ; Jump to 470
$A84    $545B   UNKNOWN  $545B           ; Unknown 5xxx instruction
$A86    $A6AA   LD       I, $6AA         ; Load 6AA into I
$A88    $173B   JP       $73B            ; Jump to 73B
$A8A    $B9AC   JP       V0, $9AC        ; Jump to V0 + 9AC
$A8C    $6AA8   LD       VA, #A8         ; Load 168 into VA
$A8E    $FEF7   UNKNOWN  FEF7            ; Unknown Fxxx instruction
$A90    $319C   SE       V1, #9C         ; Skip if V1 == 156
$A92    $0B57   SYS      $B57            ; System call to B57
$A94    $B454   JP       V0, $454        ; Jump to V0 + 454
$A96    $90FC   UNKNOWN  $90FC           ; Unknown 9xxx instruction
$A98    $5DF6   UNKNOWN  $5DF6           ; Unknown 5xxx instruction
$A9A    $87A8   UNKNOWN  87A8            ; Unknown 8xxx instruction
$A9C    $E43D   UNKNOWN  $E43D           ; Unknown Exxx instruction
$A9E    $6297   LD       V2, #97         ; Load 151 into V2
$AA0    $C112   RND      V1, #12         ; V1 = random & 12
$AA2    $B5EC   JP       V0, $5EC        ; Jump to V0 + 5EC
$AA4    $2319   CALL     $319            ; Call subroutine at 319
$AA6    $8338   UNKNOWN  8338            ; Unknown 8xxx instruction
$AA8    $C135   RND      V1, #35         ; V1 = random & 35
$AAA    $3181   SE       V1, #81         ; Skip if V1 == 129
$AAC    $E2E8   UNKNOWN  $E2E8           ; Unknown Exxx instruction
$AAE    $FA02   UNKNOWN  FA02            ; Unknown Fxxx instruction
$AB0    $5222   UNKNOWN  $5222           ; Unknown 5xxx instruction
$AB2    $B6FE   JP       V0, $6FE        ; Jump to V0 + 6FE
$AB4    $A543   LD       I, $543         ; Load 543 into I
$AB6    $F185   UNKNOWN  F185            ; Unknown Fxxx instruction
$AB8    $1744   JP       $744            ; Jump to 744
$ABA    $2D2F   CALL     $D2F            ; Call subroutine at D2F
$ABC    $6317   LD       V3, #17         ; Load 23 into V3
$ABE    $CAC5   RND      VA, #C5         ; VA = random & C5
$AC0    $E671   UNKNOWN  $E671           ; Unknown Exxx instruction
$AC2    $B7FD   JP       V0, $7FD        ; Jump to V0 + 7FD
$AC4    $ECAA   UNKNOWN  $ECAA           ; Unknown Exxx instruction
$AC6    $0AD6   SYS      $AD6            ; System call to AD6
$AC8    $5E3E   UNKNOWN  $5E3E           ; Unknown 5xxx instruction
$ACA    $09F1   SYS      $9F1            ; System call to 9F1
$ACC    $A8F5   LD       I, $8F5         ; Load 8F5 into I
$ACE    $A71E   LD       I, $71E         ; Load 71E into I
$AD0    $7035   ADD      V0, #35         ; Add 53 to V0
$AD2    $FFE5   UNKNOWN  FFE5            ; Unknown Fxxx instruction
$AD4    $C264   RND      V2, #64         ; V2 = random & 64
$AD6    $3453   SE       V4, #53         ; Skip if V4 == 83
$AD8    $EDBE   UNKNOWN  $EDBE           ; Unknown Exxx instruction
$ADA    $1859   JP       $859            ; Jump to 859
$ADC    $87E4   ADD      V7, VE          ; V7 += VE, VF = carry
$ADE    $9CC1   UNKNOWN  $9CC1           ; Unknown 9xxx instruction
$AE0    $3AD9   SE       VA, #D9         ; Skip if VA == 217
$AE2    $5EB1   UNKNOWN  $5EB1           ; Unknown 5xxx instruction
$AE4    $998C   UNKNOWN  $998C           ; Unknown 9xxx instruction
$AE6    $5D5F   UNKNOWN  $5D5F           ; Unknown 5xxx instruction
$AE8    $AD82   LD       I, $D82         ; Load D82 into I
$AEA    $B17D   JP       V0, $17D        ; Jump to V0 + 17D
$AEC    $7216   ADD      V2, #16         ; Add 22 to V2
$AEE    $E90C   UNKNOWN  $E90C           ; Unknown Exxx instruction
$AF0    $05F4   SYS      $5F4            ; System call to 5F4
$AF2    $1459   JP       $459            ; Jump to 459
$AF4    $ACBB   LD       I, $CBB         ; Load CBB into I
$AF6    $AC61   LD       I, $C61         ; Load C61 into I
$AF8    $6579   LD       V5, #79         ; Load 121 into V5
$AFA    $EB71   UNKNOWN  $EB71           ; Unknown Exxx instruction
$AFC    $CE43   RND      VE, #43         ; VE = random & 43
$AFE    $742E   ADD      V4, #2E         ; Add 46 to V4
$B00    $0658   SYS      $658            ; System call to 658
$B02    $8B67   SUBN     VB, V6          ; VB = V6 - VB, VF = !borrow
$B04    $9890   SNE      V8, V9          ; Skip if V8 != V9
$B06    $EE96   UNKNOWN  $EE96           ; Unknown Exxx instruction
$B08    $98B4   UNKNOWN  $98B4           ; Unknown 9xxx instruction
$B0A    $17BF   JP       $7BF            ; Jump to 7BF
$B0C    $60B2   LD       V0, #B2         ; Load 178 into V0
$B0E    $A718   LD       I, $718         ; Load 718 into I
$B10    $44C3   SNE      V4, #C3         ; Skip if V4 != 195
$B12    $193B   JP       $93B            ; Jump to 93B
$B14    $394A   SE       V9, #4A         ; Skip if V9 == 74
$B16    $9E59   UNKNOWN  $9E59           ; Unknown 9xxx instruction
$B18    $DA93   DRW      VA, V9, #3      ; Draw 3-byte sprite at VA, V9
$B1A    $46DB   SNE      V6, #DB         ; Skip if V6 != 219
$B1C    $629A   LD       V2, #9A         ; Load 154 into V2
$B1E    $E046   UNKNOWN  $E046           ; Unknown Exxx instruction
$B20    $0D07   SYS      $D07            ; System call to D07
$B22    $B6B3   JP       V0, $6B3        ; Jump to V0 + 6B3
$B24    $63D7   LD       V3, #D7         ; Load 215 into V3
$B26    $79E9   ADD      V9, #E9         ; Add 233 to V9
$B28    $2709   CALL     $709            ; Call subroutine at 709
$B2A    $8873   XOR      V8, V7          ; V8 ^= V7
$B2C    $11F9   JP       $1F9            ; Jump to 1F9
$B2E    $EA33   UNKNOWN  $EA33           ; Unknown Exxx instruction
$B30    $EF1F   UNKNOWN  $EF1F           ; Unknown Exxx instruction
$B32    $F49C   UNKNOWN  F49C            ; Unknown Fxxx instruction
$B34    $10E5   JP       $0E5            ; Jump to 0E5
$B36    $5D16   UNKNOWN  $5D16           ; Unknown 5xxx instruction
$B38    $DC5E   DRW      VC, V5, #E      ; Draw 14-byte sprite at VC, V5
$B3A    $ABA4   LD       I, $BA4         ; Load BA4 into I
$B3C    $A7AE   LD       I, $7AE         ; Load 7AE into I
$B3E    $64B7   LD       V4, #B7         ; Load 183 into V4
$B40    $C57A   RND      V5, #7A         ; V5 = random & 7A
$B42    $C127   RND      V1, #27         ; V1 = random & 27
$B44    $73D4   ADD      V3, #D4         ; Add 212 to V3
$B46    $9792   UNKNOWN  $9792           ; Unknown 9xxx instruction
$B48    $5ACE   UNKNOWN  $5ACE           ; Unknown 5xxx instruction
$B4A    $84AC   UNKNOWN  84AC            ; Unknown 8xxx instruction
$B4C    $921C   UNKNOWN  $921C           ; Unknown 9xxx instruction
$B4E    $AFA7   LD       I, $FA7         ; Load FA7 into I
$B50    $EE22   UNKNOWN  $EE22           ; Unknown Exxx instruction
$B52    $D73D   DRW      V7, V3, #D      ; Draw 13-byte sprite at V7, V3
$B54    $E9B8   UNKNOWN  $E9B8           ; Unknown Exxx instruction
$B56    $CEFF   RND      VE, #FF         ; VE = random & FF
$B58    $7D62   ADD      VD, #62         ; Add 98 to VD
$B5A    $8A79   UNKNOWN  8A79            ; Unknown 8xxx instruction
$B5C    $1F83   JP       $F83            ; Jump to F83
$B5E    $394B   SE       V9, #4B         ; Skip if V9 == 75
$B60    $8A06   SHR      VA              ; VA >>= 1, VF = LSB
$B62    $BF8E   JP       V0, $F8E        ; Jump to V0 + F8E
$B64    $591A   UNKNOWN  $591A           ; Unknown 5xxx instruction
$B66    $3EF7   SE       VE, #F7         ; Skip if VE == 247
$B68    $7D09   ADD      VD, #09         ; Add 9 to VD
$B6A    $C8F7   RND      V8, #F7         ; V8 = random & F7
$B6C    $0142   SYS      $142            ; System call to 142
$B6E    $31D8   SE       V1, #D8         ; Skip if V1 == 216
$B70    $F62E   UNKNOWN  F62E            ; Unknown Fxxx instruction
$B72    $F080   UNKNOWN  F080            ; Unknown Fxxx instruction
$B74    $37DC   SE       V7, #DC         ; Skip if V7 == 220
$B76    $DFAD   DRW      VF, VA, #D      ; Draw 13-byte sprite at VF, VA
$B78    $2906   CALL     $906            ; Call subroutine at 906
$B7A    $4DE2   SNE      VD, #E2         ; Skip if VD != 226
$B7C    $A717   LD       I, $717         ; Load 717 into I
$B7E    $725C   ADD      V2, #5C         ; Add 92 to V2
$B80    $AF7D   LD       I, $F7D         ; Load F7D into I
$B82    $D709   DRW      V7, V0, #9      ; Draw 9-byte sprite at V7, V0
$B84    $1CE4   JP       $CE4            ; Jump to CE4
$B86    $0B63   SYS      $B63            ; System call to B63
$B88    $DA24   DRW      VA, V2, #4      ; Draw 4-byte sprite at VA, V2
$B8A    $3913   SE       V9, #13         ; Skip if V9 == 19
$B8C    $A4B3   LD       I, $4B3         ; Load 4B3 into I
$B8E    $18E9   JP       $8E9            ; Jump to 8E9
$B90    $6885   LD       V8, #85         ; Load 133 into V8
$B92    $B776   JP       V0, $776        ; Jump to V0 + 776
$B94    $84C8   UNKNOWN  84C8            ; Unknown 8xxx instruction
$B96    $F856   UNKNOWN  F856            ; Unknown Fxxx instruction
$B98    $2CFB   CALL     $CFB            ; Call subroutine at CFB
$B9A    $0573   SYS      $573            ; System call to 573
$B9C    $308F   SE       V0, #8F         ; Skip if V0 == 143
$B9E    $9A8C   UNKNOWN  $9A8C           ; Unknown 9xxx instruction
$BA0    $728A   ADD      V2, #8A         ; Add 138 to V2
$BA2    $196D   JP       $96D            ; Jump to 96D
$BA4    $1433   JP       $433            ; Jump to 433
$BA6    $FDE4   UNKNOWN  FDE4            ; Unknown Fxxx instruction
$BA8    $5E17   UNKNOWN  $5E17           ; Unknown 5xxx instruction
$BAA    $2BC2   CALL     $BC2            ; Call subroutine at BC2
$BAC    $3C3F   SE       VC, #3F         ; Skip if VC == 63
$BAE    $EF55   UNKNOWN  $EF55           ; Unknown Exxx instruction
$BB0    $3C35   SE       VC, #35         ; Skip if VC == 53
$BB2    $BF38   JP       V0, $F38        ; Jump to V0 + F38
$BB4    $48D6   SNE      V8, #D6         ; Skip if V8 != 214
$BB6    $619C   LD       V1, #9C         ; Load 156 into V1
$BB8    $C835   RND      V8, #35         ; V8 = random & 35
$BBA    $DC59   DRW      VC, V5, #9      ; Draw 9-byte sprite at VC, V5
$BBC    $7731   ADD      V7, #31         ; Add 49 to V7
$BBE    $E46C   UNKNOWN  $E46C           ; Unknown Exxx instruction
$BC0    $9A1B   UNKNOWN  $9A1B           ; Unknown 9xxx instruction
$BC2    $8311   OR       V3, V1          ; V3 |= V1
$BC4    $5273   UNKNOWN  $5273           ; Unknown 5xxx instruction
$BC6    $3EDB   SE       VE, #DB         ; Skip if VE == 219
$BC8    $3F08   SE       VF, #08         ; Skip if VF == 8
$BCA    $B597   JP       V0, $597        ; Jump to V0 + 597
$BCC    $F37C   UNKNOWN  F37C            ; Unknown Fxxx instruction
$BCE    $FE7F   UNKNOWN  FE7F            ; Unknown Fxxx instruction
$BD0    $E1A9   UNKNOWN  $E1A9           ; Unknown Exxx instruction
$BD2    $B63D   JP       V0, $63D        ; Jump to V0 + 63D
$BD4    $1E02   JP       $E02            ; Jump to E02
$BD6    $6759   LD       V7, #59         ; Load 89 into V7
$BD8    $C8BA   RND      V8, #BA         ; V8 = random & BA
$BDA    $E917   UNKNOWN  $E917           ; Unknown Exxx instruction
$BDC    $6D16   LD       VD, #16         ; Load 22 into VD
$BDE    $4A6E   SNE      VA, #6E         ; Skip if VA != 110
$BE0    $0471   SYS      $471            ; System call to 471
$BE2    $C58D   RND      V5, #8D         ; V5 = random & 8D
$BE4    $7F71   ADD      VF, #71         ; Add 113 to VF
$BE6    $6A26   LD       VA, #26         ; Load 38 into VA
$BE8    $5594   UNKNOWN  $5594           ; Unknown 5xxx instruction
$BEA    $EDC0   UNKNOWN  $EDC0           ; Unknown Exxx instruction
$BEC    $B012   JP       V0, $012        ; Jump to V0 + 012
$BEE    $E149   UNKNOWN  $E149           ; Unknown Exxx instruction
$BF0    $D381   DRW      V3, V8, #1      ; Draw 1-byte sprite at V3, V8
$BF2    $8470   LD       V4, V7          ; V4 = V7
$BF4    $1F51   JP       $F51            ; Jump to F51
$BF6    $ABAD   LD       I, $BAD         ; Load BAD into I
$BF8    $3975   SE       V9, #75         ; Skip if V9 == 117
$BFA    $3DD7   SE       VD, #D7         ; Skip if VD == 215
$BFC    $5323   UNKNOWN  $5323           ; Unknown 5xxx instruction
$BFE    $81DA   UNKNOWN  81DA            ; Unknown 8xxx instruction
$C00    $7A35   ADD      VA, #35         ; Add 53 to VA
$C02    $A706   LD       I, $706         ; Load 706 into I
$C04    $2974   CALL     $974            ; Call subroutine at 974
$C06    $E351   UNKNOWN  $E351           ; Unknown Exxx instruction
$C08    $745A   ADD      V4, #5A         ; Add 90 to V4
$C0A    $A0E9   LD       I, $0E9         ; Load 0E9 into I
$C0C    $B243   JP       V0, $243        ; Jump to V0 + 243
$C0E    $E639   UNKNOWN  $E639           ; Unknown Exxx instruction
$C10    $8223   XOR      V2, V2          ; V2 ^= V2
$C12    $7520   ADD      V5, #20         ; Add 32 to V5
$C14    $67F2   LD       V7, #F2         ; Load 242 into V7
$C16    $E077   UNKNOWN  $E077           ; Unknown Exxx instruction
$C18    $27A3   CALL     $7A3            ; Call subroutine at 7A3
$C1A    $6E88   LD       VE, #88         ; Load 136 into VE
$C1C    $4013   SNE      V0, #13         ; Skip if V0 != 19
$C1E    $A99C   LD       I, $99C         ; Load 99C into I
$C20    $0CFF   SYS      $CFF            ; System call to CFF
$C22    $A5C8   LD       I, $5C8         ; Load 5C8 into I
$C24    $A11C   LD       I, $11C         ; Load 11C into I
$C26    $03A6   SYS      $3A6            ; System call to 3A6
$C28    $342C   SE       V4, #2C         ; Skip if V4 == 44
$C2A    $71E2   ADD      V1, #E2         ; Add 226 to V1
$C2C    $A9EA   LD       I, $9EA         ; Load 9EA into I
$C2E    $A588   LD       I, $588         ; Load 588 into I
$C30    $6B55   LD       VB, #55         ; Load 85 into VB
$C32    $99D6   UNKNOWN  $99D6           ; Unknown 9xxx instruction
$C34    $D09E   DRW      V0, V9, #E      ; Draw 14-byte sprite at V0, V9
$C36    $352E   SE       V5, #2E         ; Skip if V5 == 46
$C38    $DADD   DRW      VA, VD, #D      ; Draw 13-byte sprite at VA, VD
$C3A    $EB7D   UNKNOWN  $EB7D           ; Unknown Exxx instruction
$C3C    $9E08   UNKNOWN  $9E08           ; Unknown 9xxx instruction
$C3E    $239D   CALL     $39D            ; Call subroutine at 39D
$C40    $BB47   JP       V0, $B47        ; Jump to V0 + B47
$C42    $3A7B   SE       VA, #7B         ; Skip if VA == 123
$C44    $501F   UNKNOWN  $501F           ; Unknown 5xxx instruction
$C46    $8A62   AND      VA, V6          ; VA &= V6
$C48    $9152   UNKNOWN  $9152           ; Unknown 9xxx instruction
$C4A    $A1FB   LD       I, $1FB         ; Load 1FB into I
$C4C    $E38D   UNKNOWN  $E38D           ; Unknown Exxx instruction
$C4E    $3A90   SE       VA, #90         ; Skip if VA == 144
$C50    $FEB2   UNKNOWN  FEB2            ; Unknown Fxxx instruction
$C52    $9BC1   UNKNOWN  $9BC1           ; Unknown 9xxx instruction
$C54    $D75B   DRW      V7, V5, #B      ; Draw 11-byte sprite at V7, V5
$C56    $F199   UNKNOWN  F199            ; Unknown Fxxx instruction
$C58    $F6B3   UNKNOWN  F6B3            ; Unknown Fxxx instruction
$C5A    $6CEB   LD       VC, #EB         ; Load 235 into VC
$C5C    $F41F   UNKNOWN  F41F            ; Unknown Fxxx instruction
$C5E    $5540   SE       V5, V4          ; Skip if V5 == V4
$C60    $ACBB   LD       I, $CBB         ; Load CBB into I
$C62    $8EE5   SUB      VE, VE          ; VE -= VE, VF = !borrow
$C64    $5B8D   UNKNOWN  $5B8D           ; Unknown 5xxx instruction
$C66    $75F1   ADD      V5, #F1         ; Add 241 to V5
$C68    $29CF   CALL     $9CF            ; Call subroutine at 9CF
$C6A    $C0AB   RND      V0, #AB         ; V0 = random & AB
$C6C    $23C3   CALL     $3C3            ; Call subroutine at 3C3
$C6E    $F5F7   UNKNOWN  F5F7            ; Unknown Fxxx instruction
$C70    $C5C3   RND      V5, #C3         ; V5 = random & C3
$C72    $937F   UNKNOWN  $937F           ; Unknown 9xxx instruction
$C74    $0E9C   SYS      $E9C            ; System call to E9C
$C76    $2FAE   CALL     $FAE            ; Call subroutine at FAE
$C78    $F918   LD       ST, V9          ; Sound timer = V9
$C7A    $A429   LD       I, $429         ; Load 429 into I
$C7C    $C901   RND      V9, #01         ; V9 = random & 01
$C7E    $C6D0   RND      V6, #D0         ; V6 = random & D0
$C80    $94AF   UNKNOWN  $94AF           ; Unknown 9xxx instruction
$C82    $3967   SE       V9, #67         ; Skip if V9 == 103
$C84    $337C   SE       V3, #7C         ; Skip if V3 == 124
$C86    $EDEC   UNKNOWN  $EDEC           ; Unknown Exxx instruction
$C88    $C1A3   RND      V1, #A3         ; V1 = random & A3
$C8A    $AA72   LD       I, $A72         ; Load A72 into I
$C8C    $5B6E   UNKNOWN  $5B6E           ; Unknown 5xxx instruction
$C8E    $BDC2   JP       V0, $DC2        ; Jump to V0 + DC2
$C90    $6CD5   LD       VC, #D5         ; Load 213 into VC
$C92    $87C5   SUB      V7, VC          ; V7 -= VC, VF = !borrow
$C94    $685D   LD       V8, #5D         ; Load 93 into V8
$C96    $E04B   UNKNOWN  $E04B           ; Unknown Exxx instruction
$C98    $B500   JP       V0, $500        ; Jump to V0 + 500
$C9A    $3975   SE       V9, #75         ; Skip if V9 == 117
$C9C    $4FBC   SNE      VF, #BC         ; Skip if VF != 188
$C9E    $13E7   JP       $3E7            ; Jump to 3E7
$CA0    $8968   UNKNOWN  8968            ; Unknown 8xxx instruction
$CA2    $941A   UNKNOWN  $941A           ; Unknown 9xxx instruction
$CA4    $89BE   SHL      V9              ; V9 <<= 1, VF = MSB
$CA6    $23D2   CALL     $3D2            ; Call subroutine at 3D2
$CA8    $8E7A   UNKNOWN  8E7A            ; Unknown 8xxx instruction
$CAA    $2452   CALL     $452            ; Call subroutine at 452
$CAC    $8959   UNKNOWN  8959            ; Unknown 8xxx instruction
$CAE    $E8D9   UNKNOWN  $E8D9           ; Unknown Exxx instruction
$CB0    $9EDD   UNKNOWN  $9EDD           ; Unknown 9xxx instruction
$CB2    $BA26   JP       V0, $A26        ; Jump to V0 + A26
$CB4    $3275   SE       V2, #75         ; Skip if V2 == 117
$CB6    $673E   LD       V7, #3E         ; Load 62 into V7
$CB8    $BDB9   JP       V0, $DB9        ; Jump to V0 + DB9
$CBA    $7C1A   ADD      VC, #1A         ; Add 26 to VC
$CBC    $1699   JP       $699            ; Jump to 699
$CBE    $D7DB   DRW      V7, VD, #B      ; Draw 11-byte sprite at V7, VD
$CC0    $1652   JP       $652            ; Jump to 652
$CC2    $994F   UNKNOWN  $994F           ; Unknown 9xxx instruction
$CC4    $A0A7   LD       I, $0A7         ; Load 0A7 into I
$CC6    $8AA1   OR       VA, VA          ; VA |= VA
$CC8    $328E   SE       V2, #8E         ; Skip if V2 == 142
$CCA    $3F1D   SE       VF, #1D         ; Skip if VF == 29
$CCC    $F414   UNKNOWN  F414            ; Unknown Fxxx instruction
$CCE    $2AC4   CALL     $AC4            ; Call subroutine at AC4
$CD0    $BD9A   JP       V0, $D9A        ; Jump to V0 + D9A
$CD2    $7F8E   ADD      VF, #8E         ; Add 142 to VF
$CD4    $499A   SNE      V9, #9A         ; Skip if V9 != 154
$CD6    $9F8D   UNKNOWN  $9F8D           ; Unknown 9xxx instruction
$CD8    $355C   SE       V5, #5C         ; Skip if V5 == 92
$CDA    $3113   SE       V1, #13         ; Skip if V1 == 19
$CDC    $C34F   RND      V3, #4F         ; V3 = random & 4F
$CDE    $B1F8   JP       V0, $1F8        ; Jump to V0 + 1F8
$CE0    $162B   JP       $62B            ; Jump to 62B
$CE2    $6DB6   LD       VD, #B6         ; Load 182 into VD
$CE4    $FAB5   UNKNOWN  FAB5            ; Unknown Fxxx instruction
$CE6    $0F0A   SYS      $F0A            ; System call to F0A
$CE8    $621B   LD       V2, #1B         ; Load 27 into V2
$CEA    $B220   JP       V0, $220        ; Jump to V0 + 220
$CEC    $1DC3   JP       $DC3            ; Jump to DC3
$CEE    $B21A   JP       V0, $21A        ; Jump to V0 + 21A
$CF0    $2730   CALL     $730            ; Call subroutine at 730
$CF2    $EE9D   UNKNOWN  $EE9D           ; Unknown Exxx instruction
$CF4    $40FF   SNE      V0, #FF         ; Skip if V0 != 255
$CF6    $8BF9   UNKNOWN  8BF9            ; Unknown 8xxx instruction
$CF8    $EDC7   UNKNOWN  $EDC7           ; Unknown Exxx instruction
$CFA    $18D9   JP       $8D9            ; Jump to 8D9
$CFC    $0241   SYS      $241            ; System call to 241
$CFE    $0CA7   SYS      $CA7            ; System call to CA7
$D00    $F37D   UNKNOWN  F37D            ; Unknown Fxxx instruction
$D02    $B937   JP       V0, $937        ; Jump to V0 + 937
$D04    $A26D   LD       I, $26D         ; Load 26D into I
$D06    $5453   UNKNOWN  $5453           ; Unknown 5xxx instruction
$D08    $90BA   UNKNOWN  $90BA           ; Unknown 9xxx instruction
$D0A    $6860   LD       V8, #60         ; Load 96 into V8
$D0C    $71B0   ADD      V1, #B0         ; Add 176 to V1
$D0E    $137F   JP       $37F            ; Jump to 37F
$D10    $B75F   JP       V0, $75F        ; Jump to V0 + 75F
$D12    $7A9D   ADD      VA, #9D         ; Add 157 to VA
$D14    $EF9C   UNKNOWN  $EF9C           ; Unknown Exxx instruction
$D16    $3228   SE       V2, #28         ; Skip if V2 == 40
$D18    $797B   ADD      V9, #7B         ; Add 123 to V9
$D1A    $D6E8   DRW      V6, VE, #8      ; Draw 8-byte sprite at V6, VE
$D1C    $F149   UNKNOWN  F149            ; Unknown Fxxx instruction
$D1E    $FC71   UNKNOWN  FC71            ; Unknown Fxxx instruction
$D20    $FE5F   UNKNOWN  FE5F            ; Unknown Fxxx instruction
$D22    $E01C   UNKNOWN  $E01C           ; Unknown Exxx instruction
$D24    $C154   RND      V1, #54         ; V1 = random & 54
$D26    $E215   UNKNOWN  $E215           ; Unknown Exxx instruction
$D28    $5046   UNKNOWN  $5046           ; Unknown 5xxx instruction
$D2A    $1075   JP       $075            ; Jump to 075
$D2C    $47E1   SNE      V7, #E1         ; Skip if V7 != 225
$D2E    $BA1E   JP       V0, $A1E        ; Jump to V0 + A1E
$D30    $7EAC   ADD      VE, #AC         ; Add 172 to VE
$D32    $445B   SNE      V4, #5B         ; Skip if V4 != 91
$D34    $C47E   RND      V4, #7E         ; V4 = random & 7E
$D36    $0602   SYS      $602            ; System call to 602
$D38    $3F34   SE       VF, #34         ; Skip if VF == 52
$D3A    $A11F   LD       I, $11F         ; Load 11F into I
$D3C    $4806   SNE      V8, #06         ; Skip if V8 != 6
$D3E    $9C78   UNKNOWN  $9C78           ; Unknown 9xxx instruction
$D40    $E6EF   UNKNOWN  $E6EF           ; Unknown Exxx instruction
$D42    $4979   SNE      V9, #79         ; Skip if V9 != 121
$D44    $D60B   DRW      V6, V0, #B      ; Draw 11-byte sprite at V6, V0
$D46    $7A57   ADD      VA, #57         ; Add 87 to VA
$D48    $95E9   UNKNOWN  $95E9           ; Unknown 9xxx instruction
$D4A    $AA8E   LD       I, $A8E         ; Load A8E into I
$D4C    $5248   UNKNOWN  $5248           ; Unknown 5xxx instruction
$D4E    $3A78   SE       VA, #78         ; Skip if VA == 120
$D50    $ADB8   LD       I, $DB8         ; Load DB8 into I
$D52    $8AEF   UNKNOWN  8AEF            ; Unknown 8xxx instruction
$D54    $A384   LD       I, $384         ; Load 384 into I
$D56    $03E5   SYS      $3E5            ; System call to 3E5
$D58    $0512   SYS      $512            ; System call to 512
$D5A    $AC13   LD       I, $C13         ; Load C13 into I
$D5C    $34AF   SE       V4, #AF         ; Skip if V4 == 175
$D5E    $833E   SHL      V3              ; V3 <<= 1, VF = MSB
$D60    $BC66   JP       V0, $C66        ; Jump to V0 + C66
$D62    $C05D   RND      V0, #5D         ; V0 = random & 5D
$D64    $23A1   CALL     $3A1            ; Call subroutine at 3A1
$D66    $0825   SYS      $825            ; System call to 825
$D68    $53E8   UNKNOWN  $53E8           ; Unknown 5xxx instruction
$D6A    $8DD0   LD       VD, VD          ; VD = VD
$D6C    $4FA4   SNE      VF, #A4         ; Skip if VF != 164
$D6E    $350D   SE       V5, #0D         ; Skip if V5 == 13
$D70    $9BE4   UNKNOWN  $9BE4           ; Unknown 9xxx instruction
$D72    $443B   SNE      V4, #3B         ; Skip if V4 != 59
$D74    $3385   SE       V3, #85         ; Skip if V3 == 133
$D76    $FB03   UNKNOWN  FB03            ; Unknown Fxxx instruction
$D78    $F8AA   UNKNOWN  F8AA            ; Unknown Fxxx instruction
$D7A    $0AB6   SYS      $AB6            ; System call to AB6
$D7C    $ADCF   LD       I, $DCF         ; Load DCF into I
$D7E    $9FE8   UNKNOWN  $9FE8           ; Unknown 9xxx instruction
$D80    $25BB   CALL     $5BB            ; Call subroutine at 5BB
$D82    $D625   DRW      V6, V2, #5      ; Draw 5-byte sprite at V6, V2
$D84    $CAAF   RND      VA, #AF         ; VA = random & AF
$D86    $C4C4   RND      V4, #C4         ; V4 = random & C4
$D88    $2297   CALL     $297            ; Call subroutine at 297
$D8A    $ABD6   LD       I, $BD6         ; Load BD6 into I
$D8C    $EC88   UNKNOWN  $EC88           ; Unknown Exxx instruction
$D8E    $5265   UNKNOWN  $5265           ; Unknown 5xxx instruction
$D90    $8F7E   SHL      VF              ; VF <<= 1, VF = MSB
$D92    $050E   SYS      $50E            ; System call to 50E
$D94    $CBA4   RND      VB, #A4         ; VB = random & A4
$D96    $F158   UNKNOWN  F158            ; Unknown Fxxx instruction
$D98    $A274   LD       I, $274         ; Load 274 into I
$D9A    $3DAA   SE       VD, #AA         ; Skip if VD == 170
$D9C    $5F29   UNKNOWN  $5F29           ; Unknown 5xxx instruction
$D9E    $1F83   JP       $F83            ; Jump to F83
$DA0    $C49E   RND      V4, #9E         ; V4 = random & 9E
$DA2    $9139   UNKNOWN  $9139           ; Unknown 9xxx instruction
$DA4    $F3FE   UNKNOWN  F3FE            ; Unknown Fxxx instruction
$DA6    $2484   CALL     $484            ; Call subroutine at 484
$DA8    $9ED0   SNE      VE, VD          ; Skip if VE != VD
$DAA    $A56A   LD       I, $56A         ; Load 56A into I
$DAC    $21D3   CALL     $1D3            ; Call subroutine at 1D3
$DAE    $8199   UNKNOWN  8199            ; Unknown 8xxx instruction
$DB0    $5C5E   UNKNOWN  $5C5E           ; Unknown 5xxx instruction
$DB2    $F12D   UNKNOWN  F12D            ; Unknown Fxxx instruction
$DB4    $6355   LD       V3, #55         ; Load 85 into V3
$DB6    $63C6   LD       V3, #C6         ; Load 198 into V3
$DB8    $709C   ADD      V0, #9C         ; Add 156 to V0
$DBA    $6066   LD       V0, #66         ; Load 102 into V0
$DBC    $C791   RND      V7, #91         ; V7 = random & 91
$DBE    $7283   ADD      V2, #83         ; Add 131 to V2
$DC0    $81CE   SHL      V1              ; V1 <<= 1, VF = MSB
$DC2    $211D   CALL     $11D            ; Call subroutine at 11D
$DC4    $4785   SNE      V7, #85         ; Skip if V7 != 133
$DC6    $1D0B   JP       $D0B            ; Jump to D0B
$DC8    $A0D7   LD       I, $0D7         ; Load 0D7 into I
$DCA    $420A   SNE      V2, #0A         ; Skip if V2 != 10
$DCC    $F4E5   UNKNOWN  F4E5            ; Unknown Fxxx instruction
$DCE    $6F48   LD       VF, #48         ; Load 72 into VF
$DD0    $D2C6   DRW      V2, VC, #6      ; Draw 6-byte sprite at V2, VC
$DD2    $2C03   CALL     $C03            ; Call subroutine at C03
$DD4    $A338   LD       I, $338         ; Load 338 into I
$DD6    $93AF   UNKNOWN  $93AF           ; Unknown 9xxx instruction
$DD8    $598D   UNKNOWN  $598D           ; Unknown 5xxx instruction
$DDA    $4D73   SNE      VD, #73         ; Skip if VD != 115
$DDC    $07DA   SYS      $7DA            ; System call to 7DA
$DDE    $D928   DRW      V9, V2, #8      ; Draw 8-byte sprite at V9, V2
$DE0    $22CA   CALL     $2CA            ; Call subroutine at 2CA
$DE2    $6B2E   LD       VB, #2E         ; Load 46 into VB
$DE4    $7463   ADD      V4, #63         ; Add 99 to V4
$DE6    $C79B   RND      V7, #9B         ; V7 = random & 9B
$DE8    $C651   RND      V6, #51         ; V6 = random & 51
$DEA    $70AF   ADD      V0, #AF         ; Add 175 to V0
$DEC    $227D   CALL     $27D            ; Call subroutine at 27D
$DEE    $52B2   UNKNOWN  $52B2           ; Unknown 5xxx instruction
$DF0    $86A1   OR       V6, VA          ; V6 |= VA
$DF2    $750C   ADD      V5, #0C         ; Add 12 to V5
$DF4    $1545   JP       $545            ; Jump to 545
$DF6    $BC3A   JP       V0, $C3A        ; Jump to V0 + C3A
$DF8    $0786   SYS      $786            ; System call to 786
$DFA    $C4C1   RND      V4, #C1         ; V4 = random & C1
$DFC    $A3BB   LD       I, $3BB         ; Load 3BB into I
$DFE    $9617   UNKNOWN  $9617           ; Unknown 9xxx instruction
$E00    $CF01   RND      VF, #01         ; VF = random & 01
$E02    $2123   CALL     $123            ; Call subroutine at 123
$E04    $4702   SNE      V7, #02         ; Skip if V7 != 2
$E06    $A482   LD       I, $482         ; Load 482 into I
$E08    $CEE9   RND      VE, #E9         ; VE = random & E9
$E0A    $304B   SE       V0, #4B         ; Skip if V0 == 75
$E0C    $62F7   LD       V2, #F7         ; Load 247 into V2
$E0E    $FE9C   UNKNOWN  FE9C            ; Unknown Fxxx instruction
$E10    $E497   UNKNOWN  $E497           ; Unknown Exxx instruction
$E12    $D8EE   DRW      V8, VE, #E      ; Draw 14-byte sprite at V8, VE
$E14    $201B   CALL     $01B            ; Call subroutine at 01B
$E16    $1448   JP       $448            ; Jump to 448
$E18    $22E2   CALL     $2E2            ; Call subroutine at 2E2
$E1A    $6CB0   LD       VC, #B0         ; Load 176 into VC
$E1C    $15C2   JP       $5C2            ; Jump to 5C2
$E1E    $5A36   UNKNOWN  $5A36           ; Unknown 5xxx instruction
$E20    $291A   CALL     $91A            ; Call subroutine at 91A
$E22    $9C7A   UNKNOWN  $9C7A           ; Unknown 9xxx instruction
$E24    $C4AC   RND      V4, #AC         ; V4 = random & AC
$E26    $18EE   JP       $8EE            ; Jump to 8EE
$E28    $06A8   SYS      $6A8            ; System call to 6A8
$E2A    $4EFC   SNE      VE, #FC         ; Skip if VE != 252
$E2C    $6C50   LD       VC, #50         ; Load 80 into VC
$E2E    $16EC   JP       $6EC            ; Jump to 6EC
$E30    $39F2   SE       V9, #F2         ; Skip if V9 == 242
$E32    $2165   CALL     $165            ; Call subroutine at 165
$E34    $2B6A   CALL     $B6A            ; Call subroutine at B6A
$E36    $2F03   CALL     $F03            ; Call subroutine at F03
$E38    $B5FE   JP       V0, $5FE        ; Jump to V0 + 5FE
$E3A    $BB15   JP       V0, $B15        ; Jump to V0 + B15
$E3C    $B4E9   JP       V0, $4E9        ; Jump to V0 + 4E9
$E3E    $817C   UNKNOWN  817C            ; Unknown 8xxx instruction
$E40    $1E03   JP       $E03            ; Jump to E03
$E42    $CF25   RND      VF, #25         ; VF = random & 25
$E44    $58FF   UNKNOWN  $58FF           ; Unknown 5xxx instruction
$E46    $5EFF   UNKNOWN  $5EFF           ; Unknown 5xxx instruction
$E48    $4C03   SNE      VC, #03         ; Skip if VC != 3
$E4A    $9181   UNKNOWN  $9181           ; Unknown 9xxx instruction
$E4C    $6ADD   LD       VA, #DD         ; Load 221 into VA
$E4E    $B906   JP       V0, $906        ; Jump to V0 + 906
$E50    $6DFE   LD       VD, #FE         ; Load 254 into VD
$E52    $BAAD   JP       V0, $AAD        ; Jump to V0 + AAD
$E54    $2EB6   CALL     $EB6            ; Call subroutine at EB6
$E56    $6F0E   LD       VF, #0E         ; Load 14 into VF
$E58    $4346   SNE      V3, #46         ; Skip if V3 != 70
$E5A    $9DDF   UNKNOWN  $9DDF           ; Unknown 9xxx instruction
$E5C    $57DD   UNKNOWN  $57DD           ; Unknown 5xxx instruction
$E5E    $2D96   CALL     $D96            ; Call subroutine at D96
$E60    $6F5C   LD       VF, #5C         ; Load 92 into VF
$E62    $7F52   ADD      VF, #52         ; Add 82 to VF
$E64    $E1E8   UNKNOWN  $E1E8           ; Unknown Exxx instruction
$E66    $F685   UNKNOWN  F685            ; Unknown Fxxx instruction
$E68    $B020   JP       V0, $020        ; Jump to V0 + 020
$E6A    $C8D6   RND      V8, #D6         ; V8 = random & D6
$E6C    $B3FF   JP       V0, $3FF        ; Jump to V0 + 3FF
$E6E    $8E8F   UNKNOWN  8E8F            ; Unknown 8xxx instruction
$E70    $68B6   LD       V8, #B6         ; Load 182 into V8
$E72    $09A0   SYS      $9A0            ; System call to 9A0
$E74    $BFA4   JP       V0, $FA4        ; Jump to V0 + FA4
$E76    $E8E1   UNKNOWN  $E8E1           ; Unknown Exxx instruction
$E78    $61CF   LD       V1, #CF         ; Load 207 into V1
$E7A    $1B09   JP       $B09            ; Jump to B09
$E7C    $BEDB   JP       V0, $EDB        ; Jump to V0 + EDB
$E7E    $2E50   CALL     $E50            ; Call subroutine at E50
$E80    $0091   SYS      $091            ; System call to 091
$E82    $ED19   UNKNOWN  $ED19           ; Unknown Exxx instruction
$E84    $CABC   RND      VA, #BC         ; VA = random & BC
$E86    $B9A9   JP       V0, $9A9        ; Jump to V0 + 9A9
$E88    $99F8   UNKNOWN  $99F8           ; Unknown 9xxx instruction
$E8A    $3E43   SE       VE, #43         ; Skip if VE == 67
$E8C    $4DF2   SNE      VD, #F2         ; Skip if VD != 242
$E8E    $B227   JP       V0, $227        ; Jump to V0 + 227
$E90    $A432   LD       I, $432         ; Load 432 into I
$E92    $D534   DRW      V5, V3, #4      ; Draw 4-byte sprite at V5, V3
$E94    $4FB4   SNE      VF, #B4         ; Skip if VF != 180
$E96    $A5BE   LD       I, $5BE         ; Load 5BE into I
$E98    $8F2D   UNKNOWN  8F2D            ; Unknown 8xxx instruction
$E9A    $51A0   SE       V1, VA          ; Skip if V1 == VA
$E9C    $6BC3   LD       VB, #C3         ; Load 195 into VB
$E9E    $C43C   RND      V4, #3C         ; V4 = random & 3C
$EA0    $2ECA   CALL     $ECA            ; Call subroutine at ECA
$EA2    $8F73   XOR      VF, V7          ; VF ^= V7
$EA4    $DE4D   DRW      VE, V4, #D      ; Draw 13-byte sprite at VE, V4
$EA6    $E23A   UNKNOWN  $E23A           ; Unknown Exxx instruction
$EA8    $E036   UNKNOWN  $E036           ; Unknown Exxx instruction
$EAA    $7648   ADD      V6, #48         ; Add 72 to V6
$EAC    $7A42   ADD      VA, #42         ; Add 66 to VA
$EAE    $F901   UNKNOWN  F901            ; Unknown Fxxx instruction
$EB0    $26C3   CALL     $6C3            ; Call subroutine at 6C3
$EB2    $27D8   CALL     $7D8            ; Call subroutine at 7D8
$EB4    $3254   SE       V2, #54         ; Skip if V2 == 84
$EB6    $6E87   LD       VE, #87         ; Load 135 into VE
$EB8    $DAF7   DRW      VA, VF, #7      ; Draw 7-byte sprite at VA, VF
$EBA    $1441   JP       $441            ; Jump to 441
$EBC    $3A3F   SE       VA, #3F         ; Skip if VA == 63
$EBE    $DA5F   DRW      VA, V5, #F      ; Draw 15-byte sprite at VA, V5
$EC0    $746F   ADD      V4, #6F         ; Add 111 to V4
$EC2    $168A   JP       $68A            ; Jump to 68A
$EC4    $F6B4   UNKNOWN  F6B4            ; Unknown Fxxx instruction
$EC6    $39A0   SE       V9, #A0         ; Skip if V9 == 160
$EC8    $8858   UNKNOWN  8858            ; Unknown 8xxx instruction
$ECA    $D193   DRW      V1, V9, #3      ; Draw 3-byte sprite at V1, V9
$ECC    $9C02   UNKNOWN  $9C02           ; Unknown 9xxx instruction
$ECE    $928A   UNKNOWN  $928A           ; Unknown 9xxx instruction
$ED0    $240D   CALL     $40D            ; Call subroutine at 40D
$ED2    $A37F   LD       I, $37F         ; Load 37F into I
$ED4    $016B   SYS      $16B            ; System call to 16B
$ED6    $82D3   XOR      V2, VD          ; V2 ^= VD
$ED8    $C246   RND      V2, #46         ; V2 = random & 46
$EDA    $3153   SE       V1, #53         ; Skip if V1 == 83
$EDC    $7A94   ADD      VA, #94         ; Add 148 to VA
$EDE    $5FE5   UNKNOWN  $5FE5           ; Unknown 5xxx instruction
$EE0    $85D3   XOR      V5, VD          ; V5 ^= VD
$EE2    $CCD4   RND      VC, #D4         ; VC = random & D4
$EE4    $6E7B   LD       VE, #7B         ; Load 123 into VE
$EE6    $1084   JP       $084            ; Jump to 084
$EE8    $A2D6   LD       I, $2D6         ; Load 2D6 into I
$EEA    $2A0D   CALL     $A0D            ; Call subroutine at A0D
$EEC    $E6B8   UNKNOWN  $E6B8           ; Unknown Exxx instruction
$EEE    $908A   UNKNOWN  $908A           ; Unknown 9xxx instruction
$EF0    $CB99   RND      VB, #99         ; VB = random & 99
$EF2    $B30C   JP       V0, $30C        ; Jump to V0 + 30C
$EF4    $648F   LD       V4, #8F         ; Load 143 into V4
$EF6    $A1A9   LD       I, $1A9         ; Load 1A9 into I
$EF8    $712C   ADD      V1, #2C         ; Add 44 to V1
$EFA    $BB07   JP       V0, $B07        ; Jump to V0 + B07
$EFC    $3A9D   SE       VA, #9D         ; Skip if VA == 157
$EFE    $30A2   SE       V0, #A2         ; Skip if V0 == 162
$F00    $3F9B   SE       VF, #9B         ; Skip if VF == 155
$F02    $70D3   ADD      V0, #D3         ; Add 211 to V0
$F04    $84FD   UNKNOWN  84FD            ; Unknown 8xxx instruction
$F06    $9528   UNKNOWN  $9528           ; Unknown 9xxx instruction
$F08    $E338   UNKNOWN  $E338           ; Unknown Exxx instruction
$F0A    $92B7   UNKNOWN  $92B7           ; Unknown 9xxx instruction
$F0C    $AB5F   LD       I, $B5F         ; Load B5F into I
$F0E    $79E0   ADD      V9, #E0         ; Add 224 to V9
$F10    $ADE6   LD       I, $DE6         ; Load DE6 into I
$F12    $FF32   UNKNOWN  FF32            ; Unknown Fxxx instruction
$F14    $3A01   SE       VA, #01         ; Skip if VA == 1
$F16    $4B47   SNE      VB, #47         ; Skip if VB != 71
$F18    $2F2C   CALL     $F2C            ; Call subroutine at F2C
$F1A    $E8A3   UNKNOWN  $E8A3           ; Unknown Exxx instruction
$F1C    $DE7C   DRW      VE, V7, #C      ; Draw 12-byte sprite at VE, V7
$F1E    $323D   SE       V2, #3D         ; Skip if V2 == 61
$F20    $636B   LD       V3, #6B         ; Load 107 into V3
$F22    $B004   JP       V0, $004        ; Jump to V0 + 004
$F24    $3733   SE       V7, #33         ; Skip if V7 == 51
$F26    $9C7B   UNKNOWN  $9C7B           ; Unknown 9xxx instruction
$F28    $EA00   UNKNOWN  $EA00           ; Unknown Exxx instruction
$F2A    $BDEA   JP       V0, $DEA        ; Jump to V0 + DEA
$F2C    $BFB6   JP       V0, $FB6        ; Jump to V0 + FB6
$F2E    $E1D2   UNKNOWN  $E1D2           ; Unknown Exxx instruction
$F30    $E6B1   UNKNOWN  $E6B1           ; Unknown Exxx instruction
$F32    $B0C4   JP       V0, $0C4        ; Jump to V0 + 0C4
$F34    $D372   DRW      V3, V7, #2      ; Draw 2-byte sprite at V3, V7
$F36    $739D   ADD      V3, #9D         ; Add 157 to V3
$F38    $854F   UNKNOWN  854F            ; Unknown 8xxx instruction
$F3A    $BD1E   JP       V0, $D1E        ; Jump to V0 + D1E
$F3C    $3DC4   SE       VD, #C4         ; Skip if VD == 196
$F3E    $5AA1   UNKNOWN  $5AA1           ; Unknown 5xxx instruction
$F40    $6FE1   LD       VF, #E1         ; Load 225 into VF
$F42    $1AE1   JP       $AE1            ; Jump to AE1
$F44    $0523   SYS      $523            ; System call to 523
$F46    $04BB   SYS      $4BB            ; System call to 4BB
$F48    $9CCA   UNKNOWN  $9CCA           ; Unknown 9xxx instruction
$F4A    $1EC8   JP       $EC8            ; Jump to EC8
$F4C    $F3BE   UNKNOWN  F3BE            ; Unknown Fxxx instruction
$F4E    $7EE1   ADD      VE, #E1         ; Add 225 to VE
$F50    $D841   DRW      V8, V4, #1      ; Draw 1-byte sprite at V8, V4
$F52    $5EEA   UNKNOWN  $5EEA           ; Unknown 5xxx instruction
$F54    $D412   DRW      V4, V1, #2      ; Draw 2-byte sprite at V4, V1
$F56    $25D1   CALL     $5D1            ; Call subroutine at 5D1
$F58    $8BA0   LD       VB, VA          ; VB = VA
$F5A    $211C   CALL     $11C            ; Call subroutine at 11C
$F5C    $36DA   SE       V6, #DA         ; Skip if V6 == 218
$F5E    $1997   JP       $997            ; Jump to 997
$F60    $A6AA   LD       I, $6AA         ; Load 6AA into I
$F62    $44AC   SNE      V4, #AC         ; Skip if V4 != 172
$F64    $CD26   RND      VD, #26         ; VD = random & 26
$F66    $B6FA   JP       V0, $6FA        ; Jump to V0 + 6FA
$F68    $9F51   UNKNOWN  $9F51           ; Unknown 9xxx instruction
$F6A    $BEAF   JP       V0, $EAF        ; Jump to V0 + EAF
$F6C    $AAC6   LD       I, $AC6         ; Load AC6 into I
$F6E    $EAAF   UNKNOWN  $EAAF           ; Unknown Exxx instruction
$F70    $AC07   LD       I, $C07         ; Load C07 into I
$F72    $88A8   UNKNOWN  88A8            ; Unknown 8xxx instruction
$F74    $A908   LD       I, $908         ; Load 908 into I
$F76    $6E44   LD       VE, #44         ; Load 68 into VE
$F78    $5F69   UNKNOWN  $5F69           ; Unknown 5xxx instruction
$F7A    $9425   UNKNOWN  $9425           ; Unknown 9xxx instruction
$F7C    $A964   LD       I, $964         ; Load 964 into I
$F7E    $D02B   DRW      V0, V2, #B      ; Draw 11-byte sprite at V0, V2
$F80    $8881   OR       V8, V8          ; V8 |= V8
$F82    $59AC   UNKNOWN  $59AC           ; Unknown 5xxx instruction
$F84    $1C0E   JP       $C0E            ; Jump to C0E
$F86    $A2BC   LD       I, $2BC         ; Load 2BC into I
$F88    $CA10   RND      VA, #10         ; VA = random & 10
$F8A    $9EB4   UNKNOWN  $9EB4           ; Unknown 9xxx instruction
$F8C    $4E14   SNE      VE, #14         ; Skip if VE != 20
$F8E    $A25A   LD       I, $25A         ; Load 25A into I
$F90    $2ADD   CALL     $ADD            ; Call subroutine at ADD
$F92    $4ED4   SNE      VE, #D4         ; Skip if VE != 212
$F94    $74F6   ADD      V4, #F6         ; Add 246 to V4
$F96    $DB72   DRW      VB, V7, #2      ; Draw 2-byte sprite at VB, V7
$F98    $FC98   UNKNOWN  FC98            ; Unknown Fxxx instruction
$F9A    $3A75   SE       VA, #75         ; Skip if VA == 117
$F9C    $4066   SNE      V0, #66         ; Skip if V0 != 102
$F9E    $D124   DRW      V1, V2, #4      ; Draw 4-byte sprite at V1, V2
$FA0    $14DE   JP       $4DE            ; Jump to 4DE
$FA2    $F251   UNKNOWN  F251            ; Unknown Fxxx instruction
$FA4    $62E6   LD       V2, #E6         ; Load 230 into V2
$FA6    $50B4   UNKNOWN  $50B4           ; Unknown 5xxx instruction
$FA8    $EEF4   UNKNOWN  $EEF4           ; Unknown Exxx instruction
$FAA    $49BD   SNE      V9, #BD         ; Skip if V9 != 189
$FAC    $F574   UNKNOWN  F574            ; Unknown Fxxx instruction
$FAE    $5461   UNKNOWN  $5461           ; Unknown 5xxx instruction
$FB0    $953E   UNKNOWN  $953E           ; Unknown 9xxx instruction
$FB2    $A880   LD       I, $880         ; Load 880 into I
$FB4    $3108   SE       V1, #08         ; Skip if V1 == 8
$FB6    $D1F0   DRW      V1, VF, #0      ; Draw 0-byte sprite at V1, VF
$FB8    $A39E   LD       I, $39E         ; Load 39E into I
$FBA    $27F7   CALL     $7F7            ; Call subroutine at 7F7
$FBC    $0051   SYS      $051            ; System call to 051
$FBE    $765A   ADD      V6, #5A         ; Add 90 to V6
$FC0    $6B3A   LD       VB, #3A         ; Load 58 into VB
$FC2    $B003   JP       V0, $003        ; Jump to V0 + 003
$FC4    $1008   JP       $008            ; Jump to 008
$FC6    $7C86   ADD      VC, #86         ; Add 134 to VC
$FC8    $49FB   SNE      V9, #FB         ; Skip if V9 != 251
$FCA    $2AC3   CALL     $AC3            ; Call subroutine at AC3
$FCC    $F738   UNKNOWN  F738            ; Unknown Fxxx instruction
$FCE    $9A3D   UNKNOWN  $9A3D           ; Unknown 9xxx instruction
$FD0    $407A   SNE      V0, #7A         ; Skip if V0 != 122
$FD2    $5FB1   UNKNOWN  $5FB1           ; Unknown 5xxx instruction
$FD4    $D27C   DRW      V2, V7, #C      ; Draw 12-byte sprite at V2, V7
$FD6    $F577   UNKNOWN  F577            ; Unknown Fxxx instruction
$FD8    $224A   CALL     $24A            ; Call subroutine at 24A
$FDA    $DB53   DRW      VB, V5, #3      ; Draw 3-byte sprite at VB, V5
$FDC    $D962   DRW      V9, V6, #2      ; Draw 2-byte sprite at V9, V6
$FDE    $80FB   UNKNOWN  80FB            ; Unknown 8xxx instruction
$FE0    $12CA   JP       $2CA            ; Jump to 2CA
$FE2    $BF46   JP       V0, $F46        ; Jump to V0 + F46
$FE4    $E71C   UNKNOWN  $E71C           ; Unknown Exxx instruction
$FE6    $885D   UNKNOWN  885D            ; Unknown 8xxx instruction
$FE8    $C8CB   RND      V8, #CB         ; V8 = random & CB
$FEA    $CFCB   RND      VF, #CB         ; VF = random & CB
$FEC    $2D32   CALL     $D32            ; Call subroutine at D32
$FEE    $7C08   ADD      VC, #08         ; Add 8 to VC
$FF0    $F0E5   UNKNOWN  F0E5            ; Unknown Fxxx instruction
$FF2    $C2AB   RND      V2, #AB         ; V2 = random & AB
$FF4    $60DB   LD       V0, #DB         ; Load 219 into V0
$FF6    $E91B   UNKNOWN  $E91B           ; Unknown Exxx instruction
$FF8    $A908   LD       I, $908         ; Load 908 into I
$FFA    $3781   SE       V7, #81         ; Skip if V7 == 129
$FFC    $B8DF   JP       V0, $8DF        ; Jump to V0 + 8DF
$FFE    $E074   UNKNOWN  $E074           ; Unknown Exxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 496 (27.7%)
  LD      : 262 (14.6%)
  JP      : 223 (12.5%)
  SE      : 136 ( 7.6%)
  CALL    : 117 ( 6.5%)
  ADD     : 110 ( 6.1%)
  RND     : 107 ( 6.0%)
  SYS     : 100 ( 5.6%)
  SNE     :  99 ( 5.5%)
  DRW     :  97 ( 5.4%)
  XOR     :  10 ( 0.6%)
  OR      :   7 ( 0.4%)
  SHL     :   7 ( 0.4%)
  SHR     :   7 ( 0.4%)
  SUB     :   5 ( 0.3%)
  AND     :   5 ( 0.3%)
  SUBN    :   3 ( 0.2%)

Memory Operations: 372 (20.8%)
Arithmetic Operations: 140 (7.8%)
