
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B1511D01_I37440_C8067_f954175648d7.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 1511
Instance: 37440
Direction: ascending
Final Array: [114, 121, 128, 135, 142, 149, 156, 163]
Operations: R:0 W:8 C:0 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 111
Sort Array References:
  $228: LD I, $E70 ; Load E70 into I
  $22A: LD I, $830 ; Load 830 into I
  $232: LD I, $91C ; Load 91C into I
  $250: LD I, $2A9 ; Load 2A9 into I
  $276: LD I, $CB3 ; Load CB3 into I
  $29A: LD I, $8AF ; Load 8AF into I
  $2BE: LD I, $4AB ; Load 4AB into I
  $2E2: LD I, $0A7 ; Load 0A7 into I
  $2E4: LD I, $EB5 ; Load EB5 into I
  $308: LD I, $AB1 ; Load AB1 into I
  $314: LD I, $2A4 ; Load 2A4 into I
  $324: LD I, $6B7 ; Load 6B7 into I
  $33C: LD I, $FC2 ; Load FC2 into I
  $352: LD I, $C08 ; Load C08 into I
  $358: LD I, $61F ; Load 61F into I
  $35C: LD I, $6B4 ; Load 6B4 into I
  $380: LD I, $EEA ; Load EEA into I
  $394: LD I, $387 ; Load 387 into I
  $39A: LD I, $379 ; Load 379 into I
  $3B6: LD I, $190 ; Load 190 into I
  $410: LD I, $AE8 ; Load AE8 into I
  $42E: LD I, $A2E ; Load A2E into I
  $45A: LD I, $40C ; Load 40C into I
  $46C: LD I, $BE4 ; Load BE4 into I
  $480: LD I, $94F ; Load 94F into I
  $494: LD I, $5E1 ; Load 5E1 into I
  $496: LD I, $596 ; Load 596 into I
  $498: LD I, $30A ; Load 30A into I
  $4E6: LD I, $F04 ; Load F04 into I
  $51C: LD I, $0E5 ; Load 0E5 into I
  $538: LD I, $2CD ; Load 2CD into I
  $54E: LD I, $9CE ; Load 9CE into I
  $56C: LD I, $7E3 ; Load 7E3 into I
  $59C: LD I, $9F5 ; Load 9F5 into I
  $5CE: LD I, $E33 ; Load E33 into I
  $5D0: LD I, $D6F ; Load D6F into I
  $5E0: LD I, $678 ; Load 678 into I
  $5EC: LD I, $E69 ; Load E69 into I
  $5F6: LD I, $50D ; Load 50D into I
  $602: LD I, $215 ; Load 215 into I
  $604: LD I, $5E7 ; Load 5E7 into I
  $66A: LD I, $39A ; Load 39A into I
  $6A2: LD I, $45E ; Load 45E into I
  $72A: LD I, $341 ; Load 341 into I
  $734: LD I, $C8E ; Load C8E into I
  $740: LD I, $BAA ; Load BAA into I
  $762: LD I, $5E7 ; Load 5E7 into I
  $76A: LD I, $FD9 ; Load FD9 into I
  $7AA: LD I, $698 ; Load 698 into I
  $7AC: LD I, $A40 ; Load A40 into I
  $7B2: LD I, $34B ; Load 34B into I
  $7F4: LD I, $571 ; Load 571 into I
  $83A: LD I, $E18 ; Load E18 into I
  $84E: LD I, $5C9 ; Load 5C9 into I
  $854: LD I, $B28 ; Load B28 into I
  $85C: LD I, $EE0 ; Load EE0 into I
  $878: LD I, $20B ; Load 20B into I
  $888: LD I, $791 ; Load 791 into I
  $8AA: LD I, $78C ; Load 78C into I
  $8B2: LD I, $A84 ; Load A84 into I
  $8D6: LD I, $B62 ; Load B62 into I
  $8E0: LD I, $3BA ; Load 3BA into I
  $8E8: LD I, $F6D ; Load F6D into I
  $934: LD I, $9FE ; Load 9FE into I
  $93A: LD I, $B97 ; Load B97 into I
  $952: LD I, $3A5 ; Load 3A5 into I
  $976: LD I, $490 ; Load 490 into I
  $97A: LD V6, [I] ; Load V0-V6 from I
  $98E: LD I, $F38 ; Load F38 into I
  $9F2: LD I, $96B ; Load 96B into I
  $9F8: LD I, $7FE ; Load 7FE into I
  $A2E: LD I, $81F ; Load 81F into I
  $A3A: LD I, $88F ; Load 88F into I
  $AAA: LD I, $F94 ; Load F94 into I
  $ABE: LD I, $CDE ; Load CDE into I
  $AD0: LD I, $675 ; Load 675 into I
  $AEE: LD I, $E92 ; Load E92 into I
  $AFA: LD I, $4F1 ; Load 4F1 into I
  $B16: LD I, $26A ; Load 26A into I
  $B1A: LD I, $55B ; Load 55B into I
  $B24: LD I, $FA5 ; Load FA5 into I
  $B36: LD I, $077 ; Load 077 into I
  $BA6: LD I, $552 ; Load 552 into I
  $BE0: LD I, $690 ; Load 690 into I
  $C2C: LD I, $D1B ; Load D1B into I
  $C4A: LD I, $508 ; Load 508 into I
  $CCA: LD I, $AD3 ; Load AD3 into I
  $CF8: LD I, $A6B ; Load A6B into I
  $D2A: LD I, $765 ; Load 765 into I
  $D58: LD I, $7E7 ; Load 7E7 into I
  $D5A: LD I, $3E6 ; Load 3E6 into I
  $DA4: LD I, $581 ; Load 581 into I
  $DA6: LD I, $639 ; Load 639 into I
  $DEE: LD I, $06A ; Load 06A into I
  $E0C: LD I, $29D ; Load 29D into I
  $E0E: LD I, $016 ; Load 016 into I
  $E12: LD I, $A65 ; Load A65 into I
  $E42: LD I, $DC1 ; Load DC1 into I
  $E4E: LD I, $A86 ; Load A86 into I
  $E6A: LD I, $234 ; Load 234 into I
  $EAC: LD I, $E30 ; Load E30 into I
  $EC6: LD I, $1C9 ; Load 1C9 into I
  $F3A: LD I, $1D4 ; Load 1D4 into I
  $F42: LD I, $1F6 ; Load 1F6 into I
  $F60: LD I, $263 ; Load 263 into I
  $FB2: LD I, $EE4 ; Load EE4 into I
  $FB4: LD I, $FF9 ; Load FF9 into I
  $FC4: LD I, $D31 ; Load D31 into I
  $FDA: LD I, $A85 ; Load A85 into I
  $FE4: LD I, $170 ; Load 170 into I
  $FF8: LD I, $2B6 ; Load 2B6 into I

CONTROL FLOW ANALYSIS:
Jumps: 229
Calls: 122
Branches: 241
Loops: 118
Loop Structures:
  $20E -> $140 (backward jump)
  $226 -> $1E3 (backward jump)
  $252 -> $0B7 (backward jump)
  $260 -> $219 (backward jump)
  $2C0 -> $2B9 (backward jump)
  $2F2 -> $017 (backward jump)
  $342 -> $04B (backward jump)
  $346 -> $31A (backward jump)
  $392 -> $12D (backward jump)
  $428 -> $284 (backward jump)
  $468 -> $07C (backward jump)
  $4B0 -> $30F (backward jump)
  $4D0 -> $2B8 (backward jump)
  $4E0 -> $308 (backward jump)
  $560 -> $0C7 (backward jump)
  $5C0 -> $1D9 (backward jump)
  $5D6 -> $0FC (backward jump)
  $65C -> $3F0 (backward jump)
  $672 -> $0F3 (backward jump)
  $692 -> $5E2 (backward jump)
  $6BA -> $33B (backward jump)
  $6BE -> $2CE (backward jump)
  $6D2 -> $180 (backward jump)
  $728 -> $355 (backward jump)
  $758 -> $2FC (backward jump)
  $75A -> $2AD (backward jump)
  $7DE -> $3C6 (backward jump)
  $814 -> $456 (backward jump)
  $822 -> $0CA (backward jump)
  $830 -> $35C (backward jump)
  $832 -> $110 (backward jump)
  $850 -> $3E2 (backward jump)
  $86C -> $171 (backward jump)
  $880 -> $318 (backward jump)
  $88E -> $002 (backward jump)
  $8A8 -> $822 (backward jump)
  $8DE -> $586 (backward jump)
  $958 -> $0A3 (backward jump)
  $96E -> $867 (backward jump)
  $A0C -> $964 (backward jump)
  $A3E -> $24E (backward jump)
  $A40 -> $9FF (backward jump)
  $A44 -> $01F (backward jump)
  $A78 -> $5CB (backward jump)
  $A8E -> $695 (backward jump)
  $A96 -> $7D8 (backward jump)
  $A98 -> $290 (backward jump)
  $A9C -> $5FD (backward jump)
  $AA4 -> $A9E (backward jump)
  $ADE -> $8ED (backward jump)
  $B00 -> $520 (backward jump)
  $B30 -> $077 (backward jump)
  $B3C -> $045 (backward jump)
  $B3E -> $935 (backward jump)
  $B44 -> $546 (backward jump)
  $B62 -> $616 (backward jump)
  $B64 -> $548 (backward jump)
  $B72 -> $546 (backward jump)
  $B78 -> $98E (backward jump)
  $B80 -> $AC4 (backward jump)
  $BA2 -> $45B (backward jump)
  $BA4 -> $4E4 (backward jump)
  $BC0 -> $226 (backward jump)
  $BC4 -> $823 (backward jump)
  $BCC -> $3EE (backward jump)
  $BF0 -> $3F6 (backward jump)
  $BF6 -> $B9C (backward jump)
  $BFE -> $693 (backward jump)
  $C08 -> $70B (backward jump)
  $C12 -> $AC1 (backward jump)
  $C22 -> $7BD (backward jump)
  $C2A -> $BD7 (backward jump)
  $C38 -> $6B6 (backward jump)
  $C50 -> $B1C (backward jump)
  $C7A -> $55D (backward jump)
  $C9A -> $2DC (backward jump)
  $CEA -> $AB1 (backward jump)
  $D04 -> $3E1 (backward jump)
  $D36 -> $344 (backward jump)
  $D46 -> $A2C (backward jump)
  $D6C -> $3EE (backward jump)
  $D6E -> $1EB (backward jump)
  $D72 -> $4C1 (backward jump)
  $D7E -> $B3D (backward jump)
  $D86 -> $9CC (backward jump)
  $D90 -> $4F0 (backward jump)
  $D92 -> $ADA (backward jump)
  $DA8 -> $863 (backward jump)
  $DB2 -> $61F (backward jump)
  $DB8 -> $9CE (backward jump)
  $DCA -> $2F3 (backward jump)
  $DD4 -> $410 (backward jump)
  $DEC -> $AB6 (backward jump)
  $DF6 -> $907 (backward jump)
  $DFC -> $75C (backward jump)
  $DFE -> $D63 (backward jump)
  $E06 -> $49C (backward jump)
  $E14 -> $DF0 (backward jump)
  $E32 -> $159 (backward jump)
  $E40 -> $357 (backward jump)
  $E5C -> $4CE (backward jump)
  $E6E -> $E3B (backward jump)
  $E76 -> $E1D (backward jump)
  $E88 -> $26B (backward jump)
  $E9C -> $ACF (backward jump)
  $EA4 -> $4E7 (backward jump)
  $EBE -> $71E (backward jump)
  $EDA -> $5C3 (backward jump)
  $EFE -> $A6C (backward jump)
  $F00 -> $01A (backward jump)
  $F12 -> $E4D (backward jump)
  $F16 -> $B4E (backward jump)
  $F1C -> $2BD (backward jump)
  $F28 -> $9DC (backward jump)
  $F32 -> $CEB (backward jump)
  $F4A -> $886 (backward jump)
  $F86 -> $204 (backward jump)
  $FD4 -> $609 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $193F   JP       $93F            ; Jump to 93F
$202    $FBDF   UNKNOWN  FBDF            ; Unknown Fxxx instruction
$204    $014C   SYS      $14C            ; System call to 14C
$206    $1BFA   JP       $BFA            ; Jump to BFA
$208    $0200   SYS      $200            ; System call to 200
$20A    $6772   LD       V7, #72         ; Load 114 into V7
$20C    $16F7   JP       $6F7            ; Jump to 6F7
$20E    $1140   JP       $140            ; Jump to 140
$210    $BD51   JP       V0, $D51        ; Jump to V0 + D51
$212    $3C81   SE       VC, #81         ; Skip if VC == 129
$214    $92FC   UNKNOWN  $92FC           ; Unknown 9xxx instruction
$216    $BC35   JP       V0, $C35        ; Jump to V0 + C35
$218    $0741   SYS      $741            ; System call to 741
$21A    $3171   SE       V1, #71         ; Skip if V1 == 113
$21C    $9467   UNKNOWN  $9467           ; Unknown 9xxx instruction
$21E    $3332   SE       V3, #32         ; Skip if V3 == 50
$220    $9AA8   UNKNOWN  $9AA8           ; Unknown 9xxx instruction
$222    $7CB5   ADD      VC, #B5         ; Add 181 to VC
$224    $65F7   LD       V5, #F7         ; Load 247 into V5
$226    $11E3   JP       $1E3            ; Jump to 1E3
$228    $AE70   LD       I, $E70         ; Load E70 into I
$22A    $A830   LD       I, $830         ; Load 830 into I
$22C    $CBB0   RND      VB, #B0         ; VB = random & B0
$22E    $5FA1   UNKNOWN  $5FA1           ; Unknown 5xxx instruction
$230    $561F   UNKNOWN  $561F           ; Unknown 5xxx instruction
$232    $A91C   LD       I, $91C         ; Load 91C into I
$234    $128F   JP       $28F            ; Jump to 28F
$236    $37A9   SE       V7, #A9         ; Skip if V7 == 169
$238    $1A01   JP       $A01            ; Jump to A01
$23A    $080F   SYS      $80F            ; System call to 80F
$23C    $161D   JP       $61D            ; Jump to 61D
$23E    $242B   CALL     $42B            ; Call subroutine at 42B
$240    $3239   SE       V2, #39         ; Skip if V2 == 57
$242    $4047   SNE      V0, #47         ; Skip if V0 != 71
$244    $4E55   SNE      VE, #55         ; Skip if VE != 85
$246    $5C63   UNKNOWN  $5C63           ; Unknown 5xxx instruction
$248    $6A71   LD       VA, #71         ; Load 113 into VA
$24A    $787F   ADD      V8, #7F         ; Add 127 to V8
$24C    $868D   UNKNOWN  868D            ; Unknown 8xxx instruction
$24E    $949B   UNKNOWN  $949B           ; Unknown 9xxx instruction
$250    $A2A9   LD       I, $2A9         ; Load 2A9 into I
$252    $B0B7   JP       V0, $0B7        ; Jump to V0 + 0B7
$254    $BEC5   JP       V0, $EC5        ; Jump to V0 + EC5
$256    $CCD3   RND      VC, #D3         ; VC = random & D3
$258    $DAE1   DRW      VA, VE, #1      ; Draw 1-byte sprite at VA, VE
$25A    $E8EF   UNKNOWN  $E8EF           ; Unknown Exxx instruction
$25C    $F6FD   UNKNOWN  F6FD            ; Unknown Fxxx instruction
$25E    $040B   SYS      $40B            ; System call to 40B
$260    $1219   JP       $219            ; Jump to 219
$262    $2027   CALL     $027            ; Call subroutine at 027
$264    $2E35   CALL     $E35            ; Call subroutine at E35
$266    $3C43   SE       VC, #43         ; Skip if VC == 67
$268    $4A51   SNE      VA, #51         ; Skip if VA != 81
$26A    $585F   UNKNOWN  $585F           ; Unknown 5xxx instruction
$26C    $666D   LD       V6, #6D         ; Load 109 into V6
$26E    $747B   ADD      V4, #7B         ; Add 123 to V4
$270    $8289   UNKNOWN  8289            ; Unknown 8xxx instruction
$272    $9097   UNKNOWN  $9097           ; Unknown 9xxx instruction
$274    $9EA5   UNKNOWN  $9EA5           ; Unknown 9xxx instruction
$276    $ACB3   LD       I, $CB3         ; Load CB3 into I
$278    $BAC1   JP       V0, $AC1        ; Jump to V0 + AC1
$27A    $C8CF   RND      V8, #CF         ; V8 = random & CF
$27C    $D6DD   DRW      V6, VD, #D      ; Draw 13-byte sprite at V6, VD
$27E    $E4EB   UNKNOWN  $E4EB           ; Unknown Exxx instruction
$280    $F2F9   UNKNOWN  F2F9            ; Unknown Fxxx instruction
$282    $0007   SYS      $007            ; System call to 007
$284    $0E15   SYS      $E15            ; System call to E15
$286    $1C23   JP       $C23            ; Jump to C23
$288    $2A31   CALL     $A31            ; Call subroutine at A31
$28A    $383F   SE       V8, #3F         ; Skip if V8 == 63
$28C    $464D   SNE      V6, #4D         ; Skip if V6 != 77
$28E    $545B   UNKNOWN  $545B           ; Unknown 5xxx instruction
$290    $6269   LD       V2, #69         ; Load 105 into V2
$292    $7077   ADD      V0, #77         ; Add 119 to V0
$294    $7E85   ADD      VE, #85         ; Add 133 to VE
$296    $8C93   XOR      VC, V9          ; VC ^= V9
$298    $9AA1   UNKNOWN  $9AA1           ; Unknown 9xxx instruction
$29A    $A8AF   LD       I, $8AF         ; Load 8AF into I
$29C    $B6BD   JP       V0, $6BD        ; Jump to V0 + 6BD
$29E    $C4CB   RND      V4, #CB         ; V4 = random & CB
$2A0    $D2D9   DRW      V2, VD, #9      ; Draw 9-byte sprite at V2, VD
$2A2    $E0E7   UNKNOWN  $E0E7           ; Unknown Exxx instruction
$2A4    $EEF5   UNKNOWN  $EEF5           ; Unknown Exxx instruction
$2A6    $FC03   UNKNOWN  FC03            ; Unknown Fxxx instruction
$2A8    $0A11   SYS      $A11            ; System call to A11
$2AA    $181F   JP       $81F            ; Jump to 81F
$2AC    $262D   CALL     $62D            ; Call subroutine at 62D
$2AE    $343B   SE       V4, #3B         ; Skip if V4 == 59
$2B0    $4249   SNE      V2, #49         ; Skip if V2 != 73
$2B2    $5057   UNKNOWN  $5057           ; Unknown 5xxx instruction
$2B4    $5E65   UNKNOWN  $5E65           ; Unknown 5xxx instruction
$2B6    $6C73   LD       VC, #73         ; Load 115 into VC
$2B8    $7A81   ADD      VA, #81         ; Add 129 to VA
$2BA    $888F   UNKNOWN  888F            ; Unknown 8xxx instruction
$2BC    $969D   UNKNOWN  $969D           ; Unknown 9xxx instruction
$2BE    $A4AB   LD       I, $4AB         ; Load 4AB into I
$2C0    $B2B9   JP       V0, $2B9        ; Jump to V0 + 2B9
$2C2    $C0C7   RND      V0, #C7         ; V0 = random & C7
$2C4    $CED5   RND      VE, #D5         ; VE = random & D5
$2C6    $DCE3   DRW      VC, VE, #3      ; Draw 3-byte sprite at VC, VE
$2C8    $EAF1   UNKNOWN  $EAF1           ; Unknown Exxx instruction
$2CA    $F8FF   UNKNOWN  F8FF            ; Unknown Fxxx instruction
$2CC    $060D   SYS      $60D            ; System call to 60D
$2CE    $141B   JP       $41B            ; Jump to 41B
$2D0    $2229   CALL     $229            ; Call subroutine at 229
$2D2    $3037   SE       V0, #37         ; Skip if V0 == 55
$2D4    $3E45   SE       VE, #45         ; Skip if VE == 69
$2D6    $4C53   SNE      VC, #53         ; Skip if VC != 83
$2D8    $5A61   UNKNOWN  $5A61           ; Unknown 5xxx instruction
$2DA    $686F   LD       V8, #6F         ; Load 111 into V8
$2DC    $767D   ADD      V6, #7D         ; Add 125 to V6
$2DE    $848B   UNKNOWN  848B            ; Unknown 8xxx instruction
$2E0    $9299   UNKNOWN  $9299           ; Unknown 9xxx instruction
$2E2    $A0A7   LD       I, $0A7         ; Load 0A7 into I
$2E4    $AEB5   LD       I, $EB5         ; Load EB5 into I
$2E6    $BCC3   JP       V0, $CC3        ; Jump to V0 + CC3
$2E8    $CAD1   RND      VA, #D1         ; VA = random & D1
$2EA    $D8DF   DRW      V8, VD, #F      ; Draw 15-byte sprite at V8, VD
$2EC    $E6ED   UNKNOWN  $E6ED           ; Unknown Exxx instruction
$2EE    $F4FB   UNKNOWN  F4FB            ; Unknown Fxxx instruction
$2F0    $0209   SYS      $209            ; System call to 209
$2F2    $1017   JP       $017            ; Jump to 017
$2F4    $1E25   JP       $E25            ; Jump to E25
$2F6    $2C33   CALL     $C33            ; Call subroutine at C33
$2F8    $3A41   SE       VA, #41         ; Skip if VA == 65
$2FA    $484F   SNE      V8, #4F         ; Skip if V8 != 79
$2FC    $565D   UNKNOWN  $565D           ; Unknown 5xxx instruction
$2FE    $646B   LD       V4, #6B         ; Load 107 into V4
$300    $7279   ADD      V2, #79         ; Add 121 to V2
$302    $8087   SUBN     V0, V8          ; V0 = V8 - V0, VF = !borrow
$304    $8E95   SUB      VE, V9          ; VE -= V9, VF = !borrow
$306    $9CA3   UNKNOWN  $9CA3           ; Unknown 9xxx instruction
$308    $AAB1   LD       I, $AB1         ; Load AB1 into I
$30A    $B8BF   JP       V0, $8BF        ; Jump to V0 + 8BF
$30C    $C6CD   RND      V6, #CD         ; V6 = random & CD
$30E    $1C30   JP       $C30            ; Jump to C30
$310    $7707   ADD      V7, #07         ; Add 7 to V7
$312    $07B6   SYS      $7B6            ; System call to 7B6
$314    $A2A4   LD       I, $2A4         ; Load 2A4 into I
$316    $6EAE   LD       VE, #AE         ; Load 174 into VE
$318    $6C6B   LD       VC, #6B         ; Load 107 into VC
$31A    $D6E1   DRW      V6, VE, #1      ; Draw 1-byte sprite at V6, VE
$31C    $592F   UNKNOWN  $592F           ; Unknown 5xxx instruction
$31E    $764F   ADD      V6, #4F         ; Add 79 to V6
$320    $0657   SYS      $657            ; System call to 657
$322    $8319   UNKNOWN  8319            ; Unknown 8xxx instruction
$324    $A6B7   LD       I, $6B7         ; Load 6B7 into I
$326    $FA26   UNKNOWN  FA26            ; Unknown Fxxx instruction
$328    $0FAF   SYS      $FAF            ; System call to FAF
$32A    $5678   UNKNOWN  $5678           ; Unknown 5xxx instruction
$32C    $26B7   CALL     $6B7            ; Call subroutine at 6B7
$32E    $99A1   UNKNOWN  $99A1           ; Unknown 9xxx instruction
$330    $21BF   CALL     $1BF            ; Call subroutine at 1BF
$332    $702E   ADD      V0, #2E         ; Add 46 to V0
$334    $4149   SNE      V1, #49         ; Skip if V1 != 73
$336    $4A69   SNE      VA, #69         ; Skip if VA != 105
$338    $5BA1   UNKNOWN  $5BA1           ; Unknown 5xxx instruction
$33A    $8478   UNKNOWN  8478            ; Unknown 8xxx instruction
$33C    $AFC2   LD       I, $FC2         ; Load FC2 into I
$33E    $0E8D   SYS      $E8D            ; System call to E8D
$340    $4750   SNE      V7, #50         ; Skip if V7 != 80
$342    $B04B   JP       V0, $04B        ; Jump to V0 + 04B
$344    $9455   UNKNOWN  $9455           ; Unknown 9xxx instruction
$346    $B31A   JP       V0, $31A        ; Jump to V0 + 31A
$348    $B9B2   JP       V0, $9B2        ; Jump to V0 + 9B2
$34A    $9DD7   UNKNOWN  $9DD7           ; Unknown 9xxx instruction
$34C    $FBCC   UNKNOWN  FBCC            ; Unknown Fxxx instruction
$34E    $3838   SE       V8, #38         ; Skip if V8 == 56
$350    $D5C2   DRW      V5, VC, #2      ; Draw 2-byte sprite at V5, VC
$352    $AC08   LD       I, $C08         ; Load C08 into I
$354    $18D6   JP       $8D6            ; Jump to 8D6
$356    $08CE   SYS      $8CE            ; System call to 8CE
$358    $A61F   LD       I, $61F         ; Load 61F into I
$35A    $2DBD   CALL     $DBD            ; Call subroutine at DBD
$35C    $A6B4   LD       I, $6B4         ; Load 6B4 into I
$35E    $00C9   SYS      $0C9            ; System call to 0C9
$360    $3529   SE       V5, #29         ; Skip if V5 == 41
$362    $D64C   DRW      V6, V4, #C      ; Draw 12-byte sprite at V6, V4
$364    $363B   SE       V6, #3B         ; Skip if V6 == 59
$366    $DF0F   DRW      VF, V0, #F      ; Draw 15-byte sprite at VF, V0
$368    $5711   UNKNOWN  $5711           ; Unknown 5xxx instruction
$36A    $489A   SNE      V8, #9A         ; Skip if V8 != 154
$36C    $C9A2   RND      V9, #A2         ; V9 = random & A2
$36E    $9E24   UNKNOWN  $9E24           ; Unknown 9xxx instruction
$370    $5B81   UNKNOWN  $5B81           ; Unknown 5xxx instruction
$372    $4ADF   SNE      VA, #DF         ; Skip if VA != 223
$374    $52E2   UNKNOWN  $52E2           ; Unknown 5xxx instruction
$376    $80C3   XOR      V0, VC          ; V0 ^= VC
$378    $EA97   UNKNOWN  $EA97           ; Unknown Exxx instruction
$37A    $979A   UNKNOWN  $979A           ; Unknown 9xxx instruction
$37C    $0A83   SYS      $A83            ; System call to A83
$37E    $8D28   UNKNOWN  8D28            ; Unknown 8xxx instruction
$380    $AEEA   LD       I, $EEA         ; Load EEA into I
$382    $673D   LD       V7, #3D         ; Load 61 into V7
$384    $BC47   JP       V0, $C47        ; Jump to V0 + C47
$386    $585B   UNKNOWN  $585B           ; Unknown 5xxx instruction
$388    $BBE3   JP       V0, $BE3        ; Jump to V0 + BE3
$38A    $E09A   UNKNOWN  $E09A           ; Unknown Exxx instruction
$38C    $EE63   UNKNOWN  $EE63           ; Unknown Exxx instruction
$38E    $4A04   SNE      VA, #04         ; Skip if VA != 4
$390    $2FD6   CALL     $FD6            ; Call subroutine at FD6
$392    $B12D   JP       V0, $12D        ; Jump to V0 + 12D
$394    $A387   LD       I, $387         ; Load 387 into I
$396    $2D0E   CALL     $D0E            ; Call subroutine at D0E
$398    $F056   UNKNOWN  F056            ; Unknown Fxxx instruction
$39A    $A379   LD       I, $379         ; Load 379 into I
$39C    $4FA5   SNE      VF, #A5         ; Skip if VF != 165
$39E    $1C63   JP       $C63            ; Jump to C63
$3A0    $4970   SNE      V9, #70         ; Skip if V9 != 112
$3A2    $6369   LD       V3, #69         ; Load 105 into V3
$3A4    $EDF5   UNKNOWN  $EDF5           ; Unknown Exxx instruction
$3A6    $C918   RND      V9, #18         ; V9 = random & 18
$3A8    $7676   ADD      V6, #76         ; Add 118 to V6
$3AA    $307B   SE       V0, #7B         ; Skip if V0 == 123
$3AC    $6A1C   LD       VA, #1C         ; Load 28 into VA
$3AE    $C6D5   RND      V6, #D5         ; V6 = random & D5
$3B0    $DD08   DRW      VD, V0, #8      ; Draw 8-byte sprite at VD, V0
$3B2    $BF84   JP       V0, $F84        ; Jump to V0 + F84
$3B4    $CEFC   RND      VE, #FC         ; VE = random & FC
$3B6    $A190   LD       I, $190         ; Load 190 into I
$3B8    $FB67   UNKNOWN  FB67            ; Unknown Fxxx instruction
$3BA    $233F   CALL     $33F            ; Call subroutine at 33F
$3BC    $354A   SE       V5, #4A         ; Skip if V5 == 74
$3BE    $141F   JP       $41F            ; Jump to 41F
$3C0    $935C   UNKNOWN  $935C           ; Unknown 9xxx instruction
$3C2    $7C20   ADD      VC, #20         ; Add 32 to VC
$3C4    $9FC8   UNKNOWN  $9FC8           ; Unknown 9xxx instruction
$3C6    $6204   LD       V2, #04         ; Load 4 into V2
$3C8    $C342   RND      V3, #42         ; V3 = random & 42
$3CA    $17AF   JP       $7AF            ; Jump to 7AF
$3CC    $4C1A   SNE      VC, #1A         ; Skip if VC != 26
$3CE    $BD35   JP       V0, $D35        ; Jump to V0 + D35
$3D0    $0BD4   SYS      $BD4            ; System call to BD4
$3D2    $9031   UNKNOWN  $9031           ; Unknown 9xxx instruction
$3D4    $6826   LD       V8, #26         ; Load 38 into V8
$3D6    $16AD   JP       $6AD            ; Jump to 6AD
$3D8    $7108   ADD      V1, #08         ; Add 8 to V1
$3DA    $C57B   RND      V5, #7B         ; V5 = random & 7B
$3DC    $BD7E   JP       V0, $D7E        ; Jump to V0 + D7E
$3DE    $95A5   UNKNOWN  $95A5           ; Unknown 9xxx instruction
$3E0    $793C   ADD      V9, #3C         ; Add 60 to V9
$3E2    $22D6   CALL     $2D6            ; Call subroutine at 2D6
$3E4    $3CB5   SE       VC, #B5         ; Skip if VC == 181
$3E6    $902A   UNKNOWN  $902A           ; Unknown 9xxx instruction
$3E8    $2A2F   CALL     $A2F            ; Call subroutine at A2F
$3EA    $95D6   UNKNOWN  $95D6           ; Unknown 9xxx instruction
$3EC    $ECCF   UNKNOWN  $ECCF           ; Unknown Exxx instruction
$3EE    $49AB   SNE      V9, #AB         ; Skip if V9 != 171
$3F0    $9DBC   UNKNOWN  $9DBC           ; Unknown 9xxx instruction
$3F2    $7503   ADD      V5, #03         ; Add 3 to V5
$3F4    $427B   SNE      V2, #7B         ; Skip if V2 != 123
$3F6    $BB95   JP       V0, $B95        ; Jump to V0 + B95
$3F8    $3C27   SE       VC, #27         ; Skip if VC == 39
$3FA    $9EE5   UNKNOWN  $9EE5           ; Unknown 9xxx instruction
$3FC    $B431   JP       V0, $431        ; Jump to V0 + 431
$3FE    $F2FF   UNKNOWN  F2FF            ; Unknown Fxxx instruction
$400    $D41D   DRW      V4, V1, #D      ; Draw 13-byte sprite at V4, V1
$402    $3619   SE       V6, #19         ; Skip if V6 == 25
$404    $642D   LD       V4, #2D         ; Load 45 into V4
$406    $698D   LD       V9, #8D         ; Load 141 into V9
$408    $6ADA   LD       VA, #DA         ; Load 218 into VA
$40A    $3F35   SE       VF, #35         ; Skip if VF == 53
$40C    $47BE   SNE      V7, #BE         ; Skip if V7 != 190
$40E    $1EC4   JP       $EC4            ; Jump to EC4
$410    $AAE8   LD       I, $AE8         ; Load AE8 into I
$412    $0B99   SYS      $B99            ; System call to B99
$414    $81B4   ADD      V1, VB          ; V1 += VB, VF = carry
$416    $43A3   SNE      V3, #A3         ; Skip if V3 != 163
$418    $7CBD   ADD      VC, #BD         ; Add 189 to VC
$41A    $CD67   RND      VD, #67         ; VD = random & 67
$41C    $8E68   UNKNOWN  8E68            ; Unknown 8xxx instruction
$41E    $DA22   DRW      VA, V2, #2      ; Draw 2-byte sprite at VA, V2
$420    $DF86   DRW      VF, V8, #6      ; Draw 6-byte sprite at VF, V8
$422    $01C2   SYS      $1C2            ; System call to 1C2
$424    $7290   ADD      V2, #90         ; Add 144 to V2
$426    $2DE4   CALL     $DE4            ; Call subroutine at DE4
$428    $1284   JP       $284            ; Jump to 284
$42A    $9F69   UNKNOWN  $9F69           ; Unknown 9xxx instruction
$42C    $5EE3   UNKNOWN  $5EE3           ; Unknown 5xxx instruction
$42E    $AA2E   LD       I, $A2E         ; Load A2E into I
$430    $8ABD   UNKNOWN  8ABD            ; Unknown 8xxx instruction
$432    $1F26   JP       $F26            ; Jump to F26
$434    $454E   SNE      V5, #4E         ; Skip if V5 != 78
$436    $4B9F   SNE      VB, #9F         ; Skip if VB != 159
$438    $3682   SE       V6, #82         ; Skip if V6 == 130
$43A    $4D9D   SNE      VD, #9D         ; Skip if VD != 157
$43C    $5804   UNKNOWN  $5804           ; Unknown 5xxx instruction
$43E    $51F5   UNKNOWN  $51F5           ; Unknown 5xxx instruction
$440    $C1D6   RND      V1, #D6         ; V1 = random & D6
$442    $D4FC   DRW      V4, VF, #C      ; Draw 12-byte sprite at V4, VF
$444    $0205   SYS      $205            ; System call to 205
$446    $6B14   LD       VB, #14         ; Load 20 into VB
$448    $8613   XOR      V6, V1          ; V6 ^= V1
$44A    $F061   UNKNOWN  F061            ; Unknown Fxxx instruction
$44C    $47F1   SNE      V7, #F1         ; Skip if V7 != 241
$44E    $5441   UNKNOWN  $5441           ; Unknown 5xxx instruction
$450    $6E30   LD       VE, #30         ; Load 48 into VE
$452    $23A7   CALL     $3A7            ; Call subroutine at 3A7
$454    $35D4   SE       V5, #D4         ; Skip if V5 == 212
$456    $B871   JP       V0, $871        ; Jump to V0 + 871
$458    $F6D1   UNKNOWN  F6D1            ; Unknown Fxxx instruction
$45A    $A40C   LD       I, $40C         ; Load 40C into I
$45C    $4BD2   SNE      VB, #D2         ; Skip if VB != 210
$45E    $F22E   UNKNOWN  F22E            ; Unknown Fxxx instruction
$460    $9ABC   UNKNOWN  $9ABC           ; Unknown 9xxx instruction
$462    $C538   RND      V5, #38         ; V5 = random & 38
$464    $8AA3   XOR      VA, VA          ; VA ^= VA
$466    $40DF   SNE      V0, #DF         ; Skip if V0 != 223
$468    $107C   JP       $07C            ; Jump to 07C
$46A    $BBC2   JP       V0, $BC2        ; Jump to V0 + BC2
$46C    $ABE4   LD       I, $BE4         ; Load BE4 into I
$46E    $4BC1   SNE      VB, #C1         ; Skip if VB != 193
$470    $68AB   LD       V8, #AB         ; Load 171 into V8
$472    $40C3   SNE      V0, #C3         ; Skip if V0 != 195
$474    $438D   SNE      V3, #8D         ; Skip if V3 != 141
$476    $F0E8   UNKNOWN  F0E8            ; Unknown Fxxx instruction
$478    $F731   UNKNOWN  F731            ; Unknown Fxxx instruction
$47A    $66EB   LD       V6, #EB         ; Load 235 into V6
$47C    $5549   UNKNOWN  $5549           ; Unknown 5xxx instruction
$47E    $EA1F   UNKNOWN  $EA1F           ; Unknown Exxx instruction
$480    $A94F   LD       I, $94F         ; Load 94F into I
$482    $D1A8   DRW      V1, VA, #8      ; Draw 8-byte sprite at V1, VA
$484    $E327   UNKNOWN  $E327           ; Unknown Exxx instruction
$486    $7F1B   ADD      VF, #1B         ; Add 27 to VF
$488    $39AB   SE       V9, #AB         ; Skip if V9 == 171
$48A    $CB20   RND      VB, #20         ; VB = random & 20
$48C    $C2EB   RND      V2, #EB         ; V2 = random & EB
$48E    $680F   LD       V8, #0F         ; Load 15 into V8
$490    $E077   UNKNOWN  $E077           ; Unknown Exxx instruction
$492    $DBBF   DRW      VB, VB, #F      ; Draw 15-byte sprite at VB, VB
$494    $A5E1   LD       I, $5E1         ; Load 5E1 into I
$496    $A596   LD       I, $596         ; Load 596 into I
$498    $A30A   LD       I, $30A         ; Load 30A into I
$49A    $1CA2   JP       $CA2            ; Jump to CA2
$49C    $82E1   OR       V2, VE          ; V2 |= VE
$49E    $BAF3   JP       V0, $AF3        ; Jump to V0 + AF3
$4A0    $82E4   ADD      V2, VE          ; V2 += VE, VF = carry
$4A2    $3D26   SE       VD, #26         ; Skip if VD == 38
$4A4    $6682   LD       V6, #82         ; Load 130 into V6
$4A6    $BC97   JP       V0, $C97        ; Jump to V0 + C97
$4A8    $3B66   SE       VB, #66         ; Skip if VB == 102
$4AA    $3F35   SE       VF, #35         ; Skip if VF == 53
$4AC    $D668   DRW      V6, V6, #8      ; Draw 8-byte sprite at V6, V6
$4AE    $2454   CALL     $454            ; Call subroutine at 454
$4B0    $B30F   JP       V0, $30F        ; Jump to V0 + 30F
$4B2    $47C3   SNE      V7, #C3         ; Skip if V7 != 195
$4B4    $BF2C   JP       V0, $F2C        ; Jump to V0 + F2C
$4B6    $300A   SE       V0, #0A         ; Skip if V0 == 10
$4B8    $FA1A   UNKNOWN  FA1A            ; Unknown Fxxx instruction
$4BA    $381B   SE       V8, #1B         ; Skip if V8 == 27
$4BC    $D809   DRW      V8, V0, #9      ; Draw 9-byte sprite at V8, V0
$4BE    $DA56   DRW      VA, V5, #6      ; Draw 6-byte sprite at VA, V5
$4C0    $8379   UNKNOWN  8379            ; Unknown 8xxx instruction
$4C2    $BBCF   JP       V0, $BCF        ; Jump to V0 + BCF
$4C4    $5429   UNKNOWN  $5429           ; Unknown 5xxx instruction
$4C6    $CAA8   RND      VA, #A8         ; VA = random & A8
$4C8    $3637   SE       V6, #37         ; Skip if V6 == 55
$4CA    $85E2   AND      V5, VE          ; V5 &= VE
$4CC    $874E   SHL      V7              ; V7 <<= 1, VF = MSB
$4CE    $6C53   LD       VC, #53         ; Load 83 into VC
$4D0    $12B8   JP       $2B8            ; Jump to 2B8
$4D2    $8A74   ADD      VA, V7          ; VA += V7, VF = carry
$4D4    $B88A   JP       V0, $88A        ; Jump to V0 + 88A
$4D6    $EDA2   UNKNOWN  $EDA2           ; Unknown Exxx instruction
$4D8    $057E   SYS      $57E            ; System call to 57E
$4DA    $2E0C   CALL     $E0C            ; Call subroutine at E0C
$4DC    $915B   UNKNOWN  $915B           ; Unknown 9xxx instruction
$4DE    $D734   DRW      V7, V3, #4      ; Draw 4-byte sprite at V7, V3
$4E0    $1308   JP       $308            ; Jump to 308
$4E2    $9EF6   UNKNOWN  $9EF6           ; Unknown 9xxx instruction
$4E4    $1708   JP       $708            ; Jump to 708
$4E6    $AF04   LD       I, $F04         ; Load F04 into I
$4E8    $6576   LD       V5, #76         ; Load 118 into V5
$4EA    $53DC   UNKNOWN  $53DC           ; Unknown 5xxx instruction
$4EC    $04C2   SYS      $4C2            ; System call to 4C2
$4EE    $8130   LD       V1, V3          ; V1 = V3
$4F0    $BF2E   JP       V0, $F2E        ; Jump to V0 + F2E
$4F2    $1C52   JP       $C52            ; Jump to C52
$4F4    $E702   UNKNOWN  $E702           ; Unknown Exxx instruction
$4F6    $963F   UNKNOWN  $963F           ; Unknown 9xxx instruction
$4F8    $3FDD   SE       VF, #DD         ; Skip if VF == 221
$4FA    $D652   DRW      V6, V5, #2      ; Draw 2-byte sprite at V6, V5
$4FC    $F691   UNKNOWN  F691            ; Unknown Fxxx instruction
$4FE    $F0EF   UNKNOWN  F0EF            ; Unknown Fxxx instruction
$500    $4E94   SNE      VE, #94         ; Skip if VE != 148
$502    $B930   JP       V0, $930        ; Jump to V0 + 930
$504    $FCB1   UNKNOWN  FCB1            ; Unknown Fxxx instruction
$506    $94F0   SNE      V4, VF          ; Skip if V4 != VF
$508    $03AE   SYS      $3AE            ; System call to 3AE
$50A    $60B3   LD       V0, #B3         ; Load 179 into V0
$50C    $EC6B   UNKNOWN  $EC6B           ; Unknown Exxx instruction
$50E    $8F0E   SHL      VF              ; VF <<= 1, VF = MSB
$510    $50D8   UNKNOWN  $50D8           ; Unknown 5xxx instruction
$512    $B711   JP       V0, $711        ; Jump to V0 + 711
$514    $5EBC   UNKNOWN  $5EBC           ; Unknown 5xxx instruction
$516    $C0E6   RND      V0, #E6         ; V0 = random & E6
$518    $5C87   UNKNOWN  $5C87           ; Unknown 5xxx instruction
$51A    $324B   SE       V2, #4B         ; Skip if V2 == 75
$51C    $A0E5   LD       I, $0E5         ; Load 0E5 into I
$51E    $B65D   JP       V0, $65D        ; Jump to V0 + 65D
$520    $CBDF   RND      VB, #DF         ; VB = random & DF
$522    $3974   SE       V9, #74         ; Skip if V9 == 116
$524    $8BA3   XOR      VB, VA          ; VB ^= VA
$526    $D5F1   DRW      V5, VF, #1      ; Draw 1-byte sprite at V5, VF
$528    $D657   DRW      V6, V5, #7      ; Draw 7-byte sprite at V6, V5
$52A    $CC5D   RND      VC, #5D         ; VC = random & 5D
$52C    $2EE5   CALL     $EE5            ; Call subroutine at EE5
$52E    $0625   SYS      $625            ; System call to 625
$530    $3234   SE       V2, #34         ; Skip if V2 == 52
$532    $0365   SYS      $365            ; System call to 365
$534    $E4BA   UNKNOWN  $E4BA           ; Unknown Exxx instruction
$536    $5E55   UNKNOWN  $5E55           ; Unknown 5xxx instruction
$538    $A2CD   LD       I, $2CD         ; Load 2CD into I
$53A    $795D   ADD      V9, #5D         ; Add 93 to V9
$53C    $79D6   ADD      V9, #D6         ; Add 214 to V9
$53E    $28C2   CALL     $8C2            ; Call subroutine at 8C2
$540    $6C73   LD       VC, #73         ; Load 115 into VC
$542    $F4A5   UNKNOWN  F4A5            ; Unknown Fxxx instruction
$544    $7B1C   ADD      VB, #1C         ; Add 28 to VB
$546    $C5D1   RND      V5, #D1         ; V5 = random & D1
$548    $6B05   LD       VB, #05         ; Load 5 into VB
$54A    $ECAC   UNKNOWN  $ECAC           ; Unknown Exxx instruction
$54C    $7C8E   ADD      VC, #8E         ; Add 142 to VC
$54E    $A9CE   LD       I, $9CE         ; Load 9CE into I
$550    $0E3B   SYS      $E3B            ; System call to E3B
$552    $5B97   UNKNOWN  $5B97           ; Unknown 5xxx instruction
$554    $FECA   UNKNOWN  FECA            ; Unknown Fxxx instruction
$556    $3760   SE       V7, #60         ; Skip if V7 == 96
$558    $0568   SYS      $568            ; System call to 568
$55A    $6805   LD       V8, #05         ; Load 5 into V8
$55C    $1B41   JP       $B41            ; Jump to B41
$55E    $F213   UNKNOWN  F213            ; Unknown Fxxx instruction
$560    $B0C7   JP       V0, $0C7        ; Jump to V0 + 0C7
$562    $0338   SYS      $338            ; System call to 338
$564    $9010   SNE      V0, V1          ; Skip if V0 != V1
$566    $BCE1   JP       V0, $CE1        ; Jump to V0 + CE1
$568    $6555   LD       V5, #55         ; Load 85 into V5
$56A    $7D2D   ADD      VD, #2D         ; Add 45 to VD
$56C    $A7E3   LD       I, $7E3         ; Load 7E3 into I
$56E    $D12E   DRW      V1, V2, #E      ; Draw 14-byte sprite at V1, V2
$570    $0089   SYS      $089            ; System call to 089
$572    $D91C   DRW      V9, V1, #C      ; Draw 12-byte sprite at V9, V1
$574    $2F61   CALL     $F61            ; Call subroutine at F61
$576    $4009   SNE      V0, #09         ; Skip if V0 != 9
$578    $EFEB   UNKNOWN  $EFEB           ; Unknown Exxx instruction
$57A    $36E9   SE       V6, #E9         ; Skip if V6 == 233
$57C    $7D5E   ADD      VD, #5E         ; Add 94 to VD
$57E    $EE51   UNKNOWN  $EE51           ; Unknown Exxx instruction
$580    $BEB6   JP       V0, $EB6        ; Jump to V0 + EB6
$582    $C68F   RND      V6, #8F         ; V6 = random & 8F
$584    $DFCC   DRW      VF, VC, #C      ; Draw 12-byte sprite at VF, VC
$586    $51BE   UNKNOWN  $51BE           ; Unknown 5xxx instruction
$588    $40EF   SNE      V0, #EF         ; Skip if V0 != 239
$58A    $4D13   SNE      VD, #13         ; Skip if VD != 19
$58C    $9DAE   UNKNOWN  $9DAE           ; Unknown 9xxx instruction
$58E    $84FB   UNKNOWN  84FB            ; Unknown 8xxx instruction
$590    $FCC6   UNKNOWN  FCC6            ; Unknown Fxxx instruction
$592    $19A7   JP       $9A7            ; Jump to 9A7
$594    $8A77   SUBN     VA, V7          ; VA = V7 - VA, VF = !borrow
$596    $4396   SNE      V3, #96         ; Skip if V3 != 150
$598    $69FB   LD       V9, #FB         ; Load 251 into V9
$59A    $F510   UNKNOWN  F510            ; Unknown Fxxx instruction
$59C    $A9F5   LD       I, $9F5         ; Load 9F5 into I
$59E    $FEDF   UNKNOWN  FEDF            ; Unknown Fxxx instruction
$5A0    $8054   ADD      V0, V5          ; V0 += V5, VF = carry
$5A2    $60AC   LD       V0, #AC         ; Load 172 into V0
$5A4    $1F49   JP       $F49            ; Jump to F49
$5A6    $175E   JP       $75E            ; Jump to 75E
$5A8    $0B40   SYS      $B40            ; System call to B40
$5AA    $6E1A   LD       VE, #1A         ; Load 26 into VE
$5AC    $43EE   SNE      V3, #EE         ; Skip if V3 != 238
$5AE    $1A76   JP       $A76            ; Jump to A76
$5B0    $F4B3   UNKNOWN  F4B3            ; Unknown Fxxx instruction
$5B2    $9C69   UNKNOWN  $9C69           ; Unknown 9xxx instruction
$5B4    $B77D   JP       V0, $77D        ; Jump to V0 + 77D
$5B6    $B6FF   JP       V0, $6FF        ; Jump to V0 + 6FF
$5B8    $7800   ADD      V8, #00         ; Add 0 to V8
$5BA    $D13D   DRW      V1, V3, #D      ; Draw 13-byte sprite at V1, V3
$5BC    $CCF2   RND      VC, #F2         ; VC = random & F2
$5BE    $BCEA   JP       V0, $CEA        ; Jump to V0 + CEA
$5C0    $11D9   JP       $1D9            ; Jump to 1D9
$5C2    $8F8C   UNKNOWN  8F8C            ; Unknown 8xxx instruction
$5C4    $B6FB   JP       V0, $6FB        ; Jump to V0 + 6FB
$5C6    $D7C5   DRW      V7, VC, #5      ; Draw 5-byte sprite at V7, VC
$5C8    $EF20   UNKNOWN  $EF20           ; Unknown Exxx instruction
$5CA    $8982   AND      V9, V8          ; V9 &= V8
$5CC    $33F6   SE       V3, #F6         ; Skip if V3 == 246
$5CE    $AE33   LD       I, $E33         ; Load E33 into I
$5D0    $AD6F   LD       I, $D6F         ; Load D6F into I
$5D2    $82D9   UNKNOWN  82D9            ; Unknown 8xxx instruction
$5D4    $9AAA   UNKNOWN  $9AAA           ; Unknown 9xxx instruction
$5D6    $B0FC   JP       V0, $0FC        ; Jump to V0 + 0FC
$5D8    $9DFD   UNKNOWN  $9DFD           ; Unknown 9xxx instruction
$5DA    $C7F4   RND      V7, #F4         ; V7 = random & F4
$5DC    $847E   SHL      V4              ; V4 <<= 1, VF = MSB
$5DE    $D287   DRW      V2, V8, #7      ; Draw 7-byte sprite at V2, V8
$5E0    $A678   LD       I, $678         ; Load 678 into I
$5E2    $D0FC   DRW      V0, VF, #C      ; Draw 12-byte sprite at V0, VF
$5E4    $8353   XOR      V3, V5          ; V3 ^= V5
$5E6    $59BF   UNKNOWN  $59BF           ; Unknown 5xxx instruction
$5E8    $CDA3   RND      VD, #A3         ; VD = random & A3
$5EA    $B9E0   JP       V0, $9E0        ; Jump to V0 + 9E0
$5EC    $AE69   LD       I, $E69         ; Load E69 into I
$5EE    $5302   UNKNOWN  $5302           ; Unknown 5xxx instruction
$5F0    $0297   SYS      $297            ; System call to 297
$5F2    $4B47   SNE      VB, #47         ; Skip if VB != 71
$5F4    $8D0A   UNKNOWN  8D0A            ; Unknown 8xxx instruction
$5F6    $A50D   LD       I, $50D         ; Load 50D into I
$5F8    $8EEE   SHL      VE              ; VE <<= 1, VF = MSB
$5FA    $35A2   SE       V5, #A2         ; Skip if V5 == 162
$5FC    $B75E   JP       V0, $75E        ; Jump to V0 + 75E
$5FE    $5263   UNKNOWN  $5263           ; Unknown 5xxx instruction
$600    $9272   UNKNOWN  $9272           ; Unknown 9xxx instruction
$602    $A215   LD       I, $215         ; Load 215 into I
$604    $A5E7   LD       I, $5E7         ; Load 5E7 into I
$606    $C713   RND      V7, #13         ; V7 = random & 13
$608    $F9C4   UNKNOWN  F9C4            ; Unknown Fxxx instruction
$60A    $CDEA   RND      VD, #EA         ; VD = random & EA
$60C    $2845   CALL     $845            ; Call subroutine at 845
$60E    $790A   ADD      V9, #0A         ; Add 10 to V9
$610    $3640   SE       V6, #40         ; Skip if V6 == 64
$612    $55F2   UNKNOWN  $55F2           ; Unknown 5xxx instruction
$614    $F56D   UNKNOWN  F56D            ; Unknown Fxxx instruction
$616    $2447   CALL     $447            ; Call subroutine at 447
$618    $6D61   LD       VD, #61         ; Load 97 into VD
$61A    $9FF1   UNKNOWN  $9FF1           ; Unknown 9xxx instruction
$61C    $E3F6   UNKNOWN  $E3F6           ; Unknown Exxx instruction
$61E    $53C8   UNKNOWN  $53C8           ; Unknown 5xxx instruction
$620    $9445   UNKNOWN  $9445           ; Unknown 9xxx instruction
$622    $63AF   LD       V3, #AF         ; Load 175 into V3
$624    $B759   JP       V0, $759        ; Jump to V0 + 759
$626    $2592   CALL     $592            ; Call subroutine at 592
$628    $2F53   CALL     $F53            ; Call subroutine at F53
$62A    $C4D2   RND      V4, #D2         ; V4 = random & D2
$62C    $51F2   UNKNOWN  $51F2           ; Unknown 5xxx instruction
$62E    $5039   UNKNOWN  $5039           ; Unknown 5xxx instruction
$630    $4715   SNE      V7, #15         ; Skip if V7 != 21
$632    $40BE   SNE      V0, #BE         ; Skip if V0 != 190
$634    $949D   UNKNOWN  $949D           ; Unknown 9xxx instruction
$636    $73CB   ADD      V3, #CB         ; Add 203 to V3
$638    $52B4   UNKNOWN  $52B4           ; Unknown 5xxx instruction
$63A    $00D9   SYS      $0D9            ; System call to 0D9
$63C    $04E1   SYS      $4E1            ; System call to 4E1
$63E    $29AB   CALL     $9AB            ; Call subroutine at 9AB
$640    $5AA7   UNKNOWN  $5AA7           ; Unknown 5xxx instruction
$642    $D2CF   DRW      V2, VC, #F      ; Draw 15-byte sprite at V2, VC
$644    $6290   LD       V2, #90         ; Load 144 into V2
$646    $CBA5   RND      VB, #A5         ; VB = random & A5
$648    $518B   UNKNOWN  $518B           ; Unknown 5xxx instruction
$64A    $81C0   LD       V1, VC          ; V1 = VC
$64C    $1E54   JP       $E54            ; Jump to E54
$64E    $7FFA   ADD      VF, #FA         ; Add 250 to VF
$650    $BBE9   JP       V0, $BE9        ; Jump to V0 + BE9
$652    $07CF   SYS      $7CF            ; System call to 7CF
$654    $C269   RND      V2, #69         ; V2 = random & 69
$656    $6B29   LD       VB, #29         ; Load 41 into VB
$658    $D632   DRW      V6, V3, #2      ; Draw 2-byte sprite at V6, V3
$65A    $98A3   UNKNOWN  $98A3           ; Unknown 9xxx instruction
$65C    $B3F0   JP       V0, $3F0        ; Jump to V0 + 3F0
$65E    $BE58   JP       V0, $E58        ; Jump to V0 + E58
$660    $0DB5   SYS      $DB5            ; System call to DB5
$662    $375C   SE       V7, #5C         ; Skip if V7 == 92
$664    $235C   CALL     $35C            ; Call subroutine at 35C
$666    $B704   JP       V0, $704        ; Jump to V0 + 704
$668    $0AB4   SYS      $AB4            ; System call to AB4
$66A    $A39A   LD       I, $39A         ; Load 39A into I
$66C    $0522   SYS      $522            ; System call to 522
$66E    $067B   SYS      $67B            ; System call to 67B
$670    $221D   CALL     $21D            ; Call subroutine at 21D
$672    $B0F3   JP       V0, $0F3        ; Jump to V0 + 0F3
$674    $2EF2   CALL     $EF2            ; Call subroutine at EF2
$676    $C98B   RND      V9, #8B         ; V9 = random & 8B
$678    $D69A   DRW      V6, V9, #A      ; Draw 10-byte sprite at V6, V9
$67A    $251B   CALL     $51B            ; Call subroutine at 51B
$67C    $3228   SE       V2, #28         ; Skip if V2 == 40
$67E    $BAEA   JP       V0, $AEA        ; Jump to V0 + AEA
$680    $6E35   LD       VE, #35         ; Load 53 into VE
$682    $2949   CALL     $949            ; Call subroutine at 949
$684    $8B6D   UNKNOWN  8B6D            ; Unknown 8xxx instruction
$686    $8E5A   UNKNOWN  8E5A            ; Unknown 8xxx instruction
$688    $05EC   SYS      $5EC            ; System call to 5EC
$68A    $1D3B   JP       $D3B            ; Jump to D3B
$68C    $257C   CALL     $57C            ; Call subroutine at 57C
$68E    $DAE5   DRW      VA, VE, #5      ; Draw 5-byte sprite at VA, VE
$690    $D655   DRW      V6, V5, #5      ; Draw 5-byte sprite at V6, V5
$692    $15E2   JP       $5E2            ; Jump to 5E2
$694    $1AEE   JP       $AEE            ; Jump to AEE
$696    $8F4B   UNKNOWN  8F4B            ; Unknown 8xxx instruction
$698    $201E   CALL     $01E            ; Call subroutine at 01E
$69A    $EC99   UNKNOWN  $EC99           ; Unknown Exxx instruction
$69C    $0D52   SYS      $D52            ; System call to D52
$69E    $2CAB   CALL     $CAB            ; Call subroutine at CAB
$6A0    $5894   UNKNOWN  $5894           ; Unknown 5xxx instruction
$6A2    $A45E   LD       I, $45E         ; Load 45E into I
$6A4    $7C98   ADD      VC, #98         ; Add 152 to VC
$6A6    $8EC3   XOR      VE, VC          ; VE ^= VC
$6A8    $6137   LD       V1, #37         ; Load 55 into V1
$6AA    $C6D9   RND      V6, #D9         ; V6 = random & D9
$6AC    $9E13   UNKNOWN  $9E13           ; Unknown 9xxx instruction
$6AE    $6E95   LD       VE, #95         ; Load 149 into VE
$6B0    $6A0A   LD       VA, #0A         ; Load 10 into VA
$6B2    $0984   SYS      $984            ; System call to 984
$6B4    $F0AF   UNKNOWN  F0AF            ; Unknown Fxxx instruction
$6B6    $3E6E   SE       VE, #6E         ; Skip if VE == 110
$6B8    $7707   ADD      V7, #07         ; Add 7 to V7
$6BA    $B33B   JP       V0, $33B        ; Jump to V0 + 33B
$6BC    $59D3   UNKNOWN  $59D3           ; Unknown 5xxx instruction
$6BE    $12CE   JP       $2CE            ; Jump to 2CE
$6C0    $81A1   OR       V1, VA          ; V1 |= VA
$6C2    $FFAC   UNKNOWN  FFAC            ; Unknown Fxxx instruction
$6C4    $807D   UNKNOWN  807D            ; Unknown 8xxx instruction
$6C6    $27A4   CALL     $7A4            ; Call subroutine at 7A4
$6C8    $2023   CALL     $023            ; Call subroutine at 023
$6CA    $320C   SE       V2, #0C         ; Skip if V2 == 12
$6CC    $BB67   JP       V0, $B67        ; Jump to V0 + B67
$6CE    $2EF5   CALL     $EF5            ; Call subroutine at EF5
$6D0    $C210   RND      V2, #10         ; V2 = random & 10
$6D2    $B180   JP       V0, $180        ; Jump to V0 + 180
$6D4    $01D1   SYS      $1D1            ; System call to 1D1
$6D6    $BF48   JP       V0, $F48        ; Jump to V0 + F48
$6D8    $0044   SYS      $044            ; System call to 044
$6DA    $9DA9   UNKNOWN  $9DA9           ; Unknown 9xxx instruction
$6DC    $00FB   SYS      $0FB            ; System call to 0FB
$6DE    $1806   JP       $806            ; Jump to 806
$6E0    $2C53   CALL     $C53            ; Call subroutine at C53
$6E2    $3363   SE       V3, #63         ; Skip if V3 == 99
$6E4    $3204   SE       V2, #04         ; Skip if V2 == 4
$6E6    $7E81   ADD      VE, #81         ; Add 129 to VE
$6E8    $2DA1   CALL     $DA1            ; Call subroutine at DA1
$6EA    $0A4E   SYS      $A4E            ; System call to A4E
$6EC    $2A41   CALL     $A41            ; Call subroutine at A41
$6EE    $3C6F   SE       VC, #6F         ; Skip if VC == 111
$6F0    $C502   RND      V5, #02         ; V5 = random & 02
$6F2    $53ED   UNKNOWN  $53ED           ; Unknown 5xxx instruction
$6F4    $B91B   JP       V0, $91B        ; Jump to V0 + 91B
$6F6    $1AB5   JP       $AB5            ; Jump to AB5
$6F8    $F3C3   UNKNOWN  F3C3            ; Unknown Fxxx instruction
$6FA    $DEE8   DRW      VE, VE, #8      ; Draw 8-byte sprite at VE, VE
$6FC    $DE0C   DRW      VE, V0, #C      ; Draw 12-byte sprite at VE, V0
$6FE    $7911   ADD      V9, #11         ; Add 17 to V9
$700    $DAF0   DRW      VA, VF, #0      ; Draw 0-byte sprite at VA, VF
$702    $F666   UNKNOWN  F666            ; Unknown Fxxx instruction
$704    $37AF   SE       V7, #AF         ; Skip if V7 == 175
$706    $24BB   CALL     $4BB            ; Call subroutine at 4BB
$708    $DF20   DRW      VF, V2, #0      ; Draw 0-byte sprite at VF, V2
$70A    $3E9C   SE       VE, #9C         ; Skip if VE == 156
$70C    $C265   RND      V2, #65         ; V2 = random & 65
$70E    $380C   SE       V8, #0C         ; Skip if V8 == 12
$710    $D7AD   DRW      V7, VA, #D      ; Draw 13-byte sprite at V7, VA
$712    $DDEB   DRW      VD, VE, #B      ; Draw 11-byte sprite at VD, VE
$714    $8BF2   AND      VB, VF          ; VB &= VF
$716    $CDC3   RND      VD, #C3         ; VD = random & C3
$718    $0C4C   SYS      $C4C            ; System call to C4C
$71A    $9415   UNKNOWN  $9415           ; Unknown 9xxx instruction
$71C    $7670   ADD      V6, #70         ; Add 112 to V6
$71E    $8F6F   UNKNOWN  8F6F            ; Unknown 8xxx instruction
$720    $846C   UNKNOWN  846C            ; Unknown 8xxx instruction
$722    $64F9   LD       V4, #F9         ; Load 249 into V4
$724    $5CDF   UNKNOWN  $5CDF           ; Unknown 5xxx instruction
$726    $E125   UNKNOWN  $E125           ; Unknown Exxx instruction
$728    $B355   JP       V0, $355        ; Jump to V0 + 355
$72A    $A341   LD       I, $341         ; Load 341 into I
$72C    $CD30   RND      VD, #30         ; VD = random & 30
$72E    $9409   UNKNOWN  $9409           ; Unknown 9xxx instruction
$730    $9F14   UNKNOWN  $9F14           ; Unknown 9xxx instruction
$732    $D883   DRW      V8, V8, #3      ; Draw 3-byte sprite at V8, V8
$734    $AC8E   LD       I, $C8E         ; Load C8E into I
$736    $B940   JP       V0, $940        ; Jump to V0 + 940
$738    $8E19   UNKNOWN  8E19            ; Unknown 8xxx instruction
$73A    $4524   SNE      V5, #24         ; Skip if V5 != 36
$73C    $6652   LD       V6, #52         ; Load 82 into V6
$73E    $D44E   DRW      V4, V4, #E      ; Draw 14-byte sprite at V4, V4
$740    $ABAA   LD       I, $BAA         ; Load BAA into I
$742    $5B27   UNKNOWN  $5B27           ; Unknown 5xxx instruction
$744    $3735   SE       V7, #35         ; Skip if V7 == 53
$746    $4489   SNE      V4, #89         ; Skip if V4 != 137
$748    $D7AB   DRW      V7, VA, #B      ; Draw 11-byte sprite at V7, VA
$74A    $CE95   RND      VE, #95         ; VE = random & 95
$74C    $9024   UNKNOWN  $9024           ; Unknown 9xxx instruction
$74E    $3806   SE       V8, #06         ; Skip if V8 == 6
$750    $D128   DRW      V1, V2, #8      ; Draw 8-byte sprite at V1, V2
$752    $0A05   SYS      $A05            ; System call to A05
$754    $00AD   SYS      $0AD            ; System call to 0AD
$756    $C3AF   RND      V3, #AF         ; V3 = random & AF
$758    $12FC   JP       $2FC            ; Jump to 2FC
$75A    $B2AD   JP       V0, $2AD        ; Jump to V0 + 2AD
$75C    $3C73   SE       VC, #73         ; Skip if VC == 115
$75E    $F68F   UNKNOWN  F68F            ; Unknown Fxxx instruction
$760    $5A4F   UNKNOWN  $5A4F           ; Unknown 5xxx instruction
$762    $A5E7   LD       I, $5E7         ; Load 5E7 into I
$764    $63BF   LD       V3, #BF         ; Load 191 into V3
$766    $3E38   SE       VE, #38         ; Skip if VE == 56
$768    $C41C   RND      V4, #1C         ; V4 = random & 1C
$76A    $AFD9   LD       I, $FD9         ; Load FD9 into I
$76C    $F41D   UNKNOWN  F41D            ; Unknown Fxxx instruction
$76E    $3171   SE       V1, #71         ; Skip if V1 == 113
$770    $9439   UNKNOWN  $9439           ; Unknown 9xxx instruction
$772    $DF51   DRW      VF, V5, #1      ; Draw 1-byte sprite at VF, V5
$774    $D991   DRW      V9, V9, #1      ; Draw 1-byte sprite at V9, V9
$776    $0B4C   SYS      $B4C            ; System call to B4C
$778    $C1EC   RND      V1, #EC         ; V1 = random & EC
$77A    $2FB1   CALL     $FB1            ; Call subroutine at FB1
$77C    $EEB3   UNKNOWN  $EEB3           ; Unknown Exxx instruction
$77E    $6F34   LD       VF, #34         ; Load 52 into VF
$780    $DC69   DRW      VC, V6, #9      ; Draw 9-byte sprite at VC, V6
$782    $208D   CALL     $08D            ; Call subroutine at 08D
$784    $3674   SE       V6, #74         ; Skip if V6 == 116
$786    $33F5   SE       V3, #F5         ; Skip if V3 == 245
$788    $02A1   SYS      $2A1            ; System call to 2A1
$78A    $7CFF   ADD      VC, #FF         ; Add 255 to VC
$78C    $4B85   SNE      VB, #85         ; Skip if VB != 133
$78E    $524C   UNKNOWN  $524C           ; Unknown 5xxx instruction
$790    $8DC5   SUB      VD, VC          ; VD -= VC, VF = !borrow
$792    $8672   AND      V6, V7          ; V6 &= V7
$794    $C97B   RND      V9, #7B         ; V9 = random & 7B
$796    $36C4   SE       V6, #C4         ; Skip if V6 == 196
$798    $DB39   DRW      VB, V3, #9      ; Draw 9-byte sprite at VB, V3
$79A    $DEA0   DRW      VE, VA, #0      ; Draw 0-byte sprite at VE, VA
$79C    $2D3E   CALL     $D3E            ; Call subroutine at D3E
$79E    $D9A8   DRW      V9, VA, #8      ; Draw 8-byte sprite at V9, VA
$7A0    $8AAE   SHL      VA              ; VA <<= 1, VF = MSB
$7A2    $0D20   SYS      $D20            ; System call to D20
$7A4    $8334   ADD      V3, V3          ; V3 += V3, VF = carry
$7A6    $8ACA   UNKNOWN  8ACA            ; Unknown 8xxx instruction
$7A8    $7954   ADD      V9, #54         ; Add 84 to V9
$7AA    $A698   LD       I, $698         ; Load 698 into I
$7AC    $AA40   LD       I, $A40         ; Load A40 into I
$7AE    $616D   LD       V1, #6D         ; Load 109 into V1
$7B0    $2E49   CALL     $E49            ; Call subroutine at E49
$7B2    $A34B   LD       I, $34B         ; Load 34B into I
$7B4    $EB66   UNKNOWN  $EB66           ; Unknown Exxx instruction
$7B6    $7B9C   ADD      VB, #9C         ; Add 156 to VB
$7B8    $791B   ADD      V9, #1B         ; Add 27 to V9
$7BA    $8460   LD       V4, V6          ; V4 = V6
$7BC    $D659   DRW      V6, V5, #9      ; Draw 9-byte sprite at V6, V5
$7BE    $4EE4   SNE      VE, #E4         ; Skip if VE != 228
$7C0    $E4CF   UNKNOWN  $E4CF           ; Unknown Exxx instruction
$7C2    $4D34   SNE      VD, #34         ; Skip if VD != 52
$7C4    $5ABE   UNKNOWN  $5ABE           ; Unknown 5xxx instruction
$7C6    $DE98   DRW      VE, V9, #8      ; Draw 8-byte sprite at VE, V9
$7C8    $3F38   SE       VF, #38         ; Skip if VF == 56
$7CA    $E933   UNKNOWN  $E933           ; Unknown Exxx instruction
$7CC    $470C   SNE      V7, #0C         ; Skip if V7 != 12
$7CE    $C0A9   RND      V0, #A9         ; V0 = random & A9
$7D0    $72B0   ADD      V2, #B0         ; Add 176 to V2
$7D2    $5A78   UNKNOWN  $5A78           ; Unknown 5xxx instruction
$7D4    $BF9B   JP       V0, $F9B        ; Jump to V0 + F9B
$7D6    $031F   SYS      $31F            ; System call to 31F
$7D8    $905B   UNKNOWN  $905B           ; Unknown 9xxx instruction
$7DA    $D1B8   DRW      V1, VB, #8      ; Draw 8-byte sprite at V1, VB
$7DC    $CC5E   RND      VC, #5E         ; VC = random & 5E
$7DE    $13C6   JP       $3C6            ; Jump to 3C6
$7E0    $7449   ADD      V4, #49         ; Add 73 to V4
$7E2    $DB0C   DRW      VB, V0, #C      ; Draw 12-byte sprite at VB, V0
$7E4    $5745   UNKNOWN  $5745           ; Unknown 5xxx instruction
$7E6    $8DD8   UNKNOWN  8DD8            ; Unknown 8xxx instruction
$7E8    $EA3D   UNKNOWN  $EA3D           ; Unknown Exxx instruction
$7EA    $E724   UNKNOWN  $E724           ; Unknown Exxx instruction
$7EC    $73AC   ADD      V3, #AC         ; Add 172 to V3
$7EE    $1870   JP       $870            ; Jump to 870
$7F0    $35BF   SE       V5, #BF         ; Skip if V5 == 191
$7F2    $554F   UNKNOWN  $554F           ; Unknown 5xxx instruction
$7F4    $A571   LD       I, $571         ; Load 571 into I
$7F6    $016F   SYS      $16F            ; System call to 16F
$7F8    $1B8D   JP       $B8D            ; Jump to B8D
$7FA    $00DD   SYS      $0DD            ; System call to 0DD
$7FC    $728D   ADD      V2, #8D         ; Add 141 to V2
$7FE    $41D4   SNE      V1, #D4         ; Skip if V1 != 212
$800    $2260   CALL     $260            ; Call subroutine at 260
$802    $CAC6   RND      VA, #C6         ; VA = random & C6
$804    $9BA5   UNKNOWN  $9BA5           ; Unknown 9xxx instruction
$806    $BE28   JP       V0, $E28        ; Jump to V0 + E28
$808    $3B28   SE       VB, #28         ; Skip if VB == 40
$80A    $2EFF   CALL     $EFF            ; Call subroutine at EFF
$80C    $96D2   UNKNOWN  $96D2           ; Unknown 9xxx instruction
$80E    $82FA   UNKNOWN  82FA            ; Unknown 8xxx instruction
$810    $68F2   LD       V8, #F2         ; Load 242 into V8
$812    $306B   SE       V0, #6B         ; Skip if V0 == 107
$814    $B456   JP       V0, $456        ; Jump to V0 + 456
$816    $F5A0   UNKNOWN  F5A0            ; Unknown Fxxx instruction
$818    $0CFA   SYS      $CFA            ; System call to CFA
$81A    $23C8   CALL     $3C8            ; Call subroutine at 3C8
$81C    $FEA1   UNKNOWN  FEA1            ; Unknown Fxxx instruction
$81E    $647A   LD       V4, #7A         ; Load 122 into V4
$820    $2C0F   CALL     $C0F            ; Call subroutine at C0F
$822    $B0CA   JP       V0, $0CA        ; Jump to V0 + 0CA
$824    $812E   SHL      V1              ; V1 <<= 1, VF = MSB
$826    $B9AA   JP       V0, $9AA        ; Jump to V0 + 9AA
$828    $490E   SNE      V9, #0E         ; Skip if V9 != 14
$82A    $DAB8   DRW      VA, VB, #8      ; Draw 8-byte sprite at VA, VB
$82C    $8847   SUBN     V8, V4          ; V8 = V4 - V8, VF = !borrow
$82E    $8473   XOR      V4, V7          ; V4 ^= V7
$830    $B35C   JP       V0, $35C        ; Jump to V0 + 35C
$832    $B110   JP       V0, $110        ; Jump to V0 + 110
$834    $5DA4   UNKNOWN  $5DA4           ; Unknown 5xxx instruction
$836    $C307   RND      V3, #07         ; V3 = random & 07
$838    $5AAA   UNKNOWN  $5AAA           ; Unknown 5xxx instruction
$83A    $AE18   LD       I, $E18         ; Load E18 into I
$83C    $BBB9   JP       V0, $BB9        ; Jump to V0 + BB9
$83E    $0E4A   SYS      $E4A            ; System call to E4A
$840    $5376   UNKNOWN  $5376           ; Unknown 5xxx instruction
$842    $E0DA   UNKNOWN  $E0DA           ; Unknown Exxx instruction
$844    $279F   CALL     $79F            ; Call subroutine at 79F
$846    $7AD7   ADD      VA, #D7         ; Add 215 to VA
$848    $CFCB   RND      VF, #CB         ; VF = random & CB
$84A    $0405   SYS      $405            ; System call to 405
$84C    $F9BD   UNKNOWN  F9BD            ; Unknown Fxxx instruction
$84E    $A5C9   LD       I, $5C9         ; Load 5C9 into I
$850    $B3E2   JP       V0, $3E2        ; Jump to V0 + 3E2
$852    $B8D4   JP       V0, $8D4        ; Jump to V0 + 8D4
$854    $AB28   LD       I, $B28         ; Load B28 into I
$856    $4B2A   SNE      VB, #2A         ; Skip if VB != 42
$858    $9E57   UNKNOWN  $9E57           ; Unknown 9xxx instruction
$85A    $28E8   CALL     $8E8            ; Call subroutine at 8E8
$85C    $AEE0   LD       I, $EE0         ; Load EE0 into I
$85E    $7DB5   ADD      VD, #B5         ; Add 181 to VD
$860    $CE1A   RND      VE, #1A         ; VE = random & 1A
$862    $4CF7   SNE      VC, #F7         ; Skip if VC != 247
$864    $409F   SNE      V0, #9F         ; Skip if V0 != 159
$866    $61DE   LD       V1, #DE         ; Load 222 into V1
$868    $1F5D   JP       $F5D            ; Jump to F5D
$86A    $E1FC   UNKNOWN  $E1FC           ; Unknown Exxx instruction
$86C    $1171   JP       $171            ; Jump to 171
$86E    $8C5F   UNKNOWN  8C5F            ; Unknown 8xxx instruction
$870    $C718   RND      V7, #18         ; V7 = random & 18
$872    $FD2C   UNKNOWN  FD2C            ; Unknown Fxxx instruction
$874    $4C79   SNE      VC, #79         ; Skip if VC != 121
$876    $93EA   UNKNOWN  $93EA           ; Unknown 9xxx instruction
$878    $A20B   LD       I, $20B         ; Load 20B into I
$87A    $9497   UNKNOWN  $9497           ; Unknown 9xxx instruction
$87C    $96C2   UNKNOWN  $96C2           ; Unknown 9xxx instruction
$87E    $5EEC   UNKNOWN  $5EEC           ; Unknown 5xxx instruction
$880    $B318   JP       V0, $318        ; Jump to V0 + 318
$882    $DDA6   DRW      VD, VA, #6      ; Draw 6-byte sprite at VD, VA
$884    $1917   JP       $917            ; Jump to 917
$886    $F7AC   UNKNOWN  F7AC            ; Unknown Fxxx instruction
$888    $A791   LD       I, $791         ; Load 791 into I
$88A    $3611   SE       V6, #11         ; Skip if V6 == 17
$88C    $0791   SYS      $791            ; System call to 791
$88E    $1002   JP       $002            ; Jump to 002
$890    $3E71   SE       VE, #71         ; Skip if VE == 113
$892    $BD9B   JP       V0, $D9B        ; Jump to V0 + D9B
$894    $4A80   SNE      VA, #80         ; Skip if VA != 128
$896    $55B9   UNKNOWN  $55B9           ; Unknown 5xxx instruction
$898    $017E   SYS      $17E            ; System call to 17E
$89A    $FB1A   UNKNOWN  FB1A            ; Unknown Fxxx instruction
$89C    $5284   UNKNOWN  $5284           ; Unknown 5xxx instruction
$89E    $35D1   SE       V5, #D1         ; Skip if V5 == 209
$8A0    $6CBF   LD       VC, #BF         ; Load 191 into VC
$8A2    $FD83   UNKNOWN  FD83            ; Unknown Fxxx instruction
$8A4    $1F88   JP       $F88            ; Jump to F88
$8A6    $D90E   DRW      V9, V0, #E      ; Draw 14-byte sprite at V9, V0
$8A8    $1822   JP       $822            ; Jump to 822
$8AA    $A78C   LD       I, $78C         ; Load 78C into I
$8AC    $F589   UNKNOWN  F589            ; Unknown Fxxx instruction
$8AE    $9FF4   UNKNOWN  $9FF4           ; Unknown 9xxx instruction
$8B0    $7ECE   ADD      VE, #CE         ; Add 206 to VE
$8B2    $AA84   LD       I, $A84         ; Load A84 into I
$8B4    $BFC9   JP       V0, $FC9        ; Jump to V0 + FC9
$8B6    $410C   SNE      V1, #0C         ; Skip if V1 != 12
$8B8    $E8B2   UNKNOWN  $E8B2           ; Unknown Exxx instruction
$8BA    $8C38   UNKNOWN  8C38            ; Unknown 8xxx instruction
$8BC    $CF85   RND      VF, #85         ; VF = random & 85
$8BE    $5DCB   UNKNOWN  $5DCB           ; Unknown 5xxx instruction
$8C0    $E36D   UNKNOWN  $E36D           ; Unknown Exxx instruction
$8C2    $7FE0   ADD      VF, #E0         ; Add 224 to VF
$8C4    $5ED4   UNKNOWN  $5ED4           ; Unknown 5xxx instruction
$8C6    $0C5B   SYS      $C5B            ; System call to C5B
$8C8    $7A8B   ADD      VA, #8B         ; Add 139 to VA
$8CA    $2B7B   CALL     $B7B            ; Call subroutine at B7B
$8CC    $2EAA   CALL     $EAA            ; Call subroutine at EAA
$8CE    $ECEB   UNKNOWN  $ECEB           ; Unknown Exxx instruction
$8D0    $0C48   SYS      $C48            ; System call to C48
$8D2    $7B88   ADD      VB, #88         ; Add 136 to VB
$8D4    $4376   SNE      V3, #76         ; Skip if V3 != 118
$8D6    $AB62   LD       I, $B62         ; Load B62 into I
$8D8    $0E01   SYS      $E01            ; System call to E01
$8DA    $9AE3   UNKNOWN  $9AE3           ; Unknown 9xxx instruction
$8DC    $3EA6   SE       VE, #A6         ; Skip if VE == 166
$8DE    $1586   JP       $586            ; Jump to 586
$8E0    $A3BA   LD       I, $3BA         ; Load 3BA into I
$8E2    $7706   ADD      V7, #06         ; Add 6 to V7
$8E4    $DF1D   DRW      VF, V1, #D      ; Draw 13-byte sprite at VF, V1
$8E6    $83F6   SHR      V3              ; V3 >>= 1, VF = LSB
$8E8    $AF6D   LD       I, $F6D         ; Load F6D into I
$8EA    $3E86   SE       VE, #86         ; Skip if VE == 134
$8EC    $2317   CALL     $317            ; Call subroutine at 317
$8EE    $BD8F   JP       V0, $D8F        ; Jump to V0 + D8F
$8F0    $DA13   DRW      VA, V1, #3      ; Draw 3-byte sprite at VA, V1
$8F2    $34F9   SE       V4, #F9         ; Skip if V4 == 249
$8F4    $D73B   DRW      V7, V3, #B      ; Draw 11-byte sprite at V7, V3
$8F6    $DCEE   DRW      VC, VE, #E      ; Draw 14-byte sprite at VC, VE
$8F8    $4081   SNE      V0, #81         ; Skip if V0 != 129
$8FA    $0F1F   SYS      $F1F            ; System call to F1F
$8FC    $DF59   DRW      VF, V5, #9      ; Draw 9-byte sprite at VF, V5
$8FE    $52C2   UNKNOWN  $52C2           ; Unknown 5xxx instruction
$900    $E8EE   UNKNOWN  $E8EE           ; Unknown Exxx instruction
$902    $4C01   SNE      VC, #01         ; Skip if VC != 1
$904    $86B4   ADD      V6, VB          ; V6 += VB, VF = carry
$906    $41AE   SNE      V1, #AE         ; Skip if V1 != 174
$908    $2218   CALL     $218            ; Call subroutine at 218
$90A    $954D   UNKNOWN  $954D           ; Unknown 9xxx instruction
$90C    $506B   UNKNOWN  $506B           ; Unknown 5xxx instruction
$90E    $4743   SNE      V7, #43         ; Skip if V7 != 67
$910    $7F96   ADD      VF, #96         ; Add 150 to VF
$912    $D8A2   DRW      V8, VA, #2      ; Draw 2-byte sprite at V8, VA
$914    $0109   SYS      $109            ; System call to 109
$916    $2C45   CALL     $C45            ; Call subroutine at C45
$918    $9F6A   UNKNOWN  $9F6A           ; Unknown 9xxx instruction
$91A    $088E   SYS      $88E            ; System call to 88E
$91C    $312A   SE       V1, #2A         ; Skip if V1 == 42
$91E    $7C78   ADD      VC, #78         ; Add 120 to VC
$920    $3FBA   SE       VF, #BA         ; Skip if VF == 186
$922    $3049   SE       V0, #49         ; Skip if V0 == 73
$924    $E769   UNKNOWN  $E769           ; Unknown Exxx instruction
$926    $5826   UNKNOWN  $5826           ; Unknown 5xxx instruction
$928    $5E61   UNKNOWN  $5E61           ; Unknown 5xxx instruction
$92A    $C9B9   RND      V9, #B9         ; V9 = random & B9
$92C    $C727   RND      V7, #27         ; V7 = random & 27
$92E    $6AC0   LD       VA, #C0         ; Load 192 into VA
$930    $9F0E   UNKNOWN  $9F0E           ; Unknown 9xxx instruction
$932    $9682   UNKNOWN  $9682           ; Unknown 9xxx instruction
$934    $A9FE   LD       I, $9FE         ; Load 9FE into I
$936    $5470   SE       V4, V7          ; Skip if V4 == V7
$938    $6C1F   LD       VC, #1F         ; Load 31 into VC
$93A    $AB97   LD       I, $B97         ; Load B97 into I
$93C    $F296   UNKNOWN  F296            ; Unknown Fxxx instruction
$93E    $FBFF   UNKNOWN  FBFF            ; Unknown Fxxx instruction
$940    $F0E9   UNKNOWN  F0E9            ; Unknown Fxxx instruction
$942    $92FF   UNKNOWN  $92FF           ; Unknown 9xxx instruction
$944    $5C8D   UNKNOWN  $5C8D           ; Unknown 5xxx instruction
$946    $DFF0   DRW      VF, VF, #0      ; Draw 0-byte sprite at VF, VF
$948    $5570   SE       V5, V7          ; Skip if V5 == V7
$94A    $07E6   SYS      $7E6            ; System call to 7E6
$94C    $0200   SYS      $200            ; System call to 200
$94E    $83BB   UNKNOWN  83BB            ; Unknown 8xxx instruction
$950    $687F   LD       V8, #7F         ; Load 127 into V8
$952    $A3A5   LD       I, $3A5         ; Load 3A5 into I
$954    $32D0   SE       V2, #D0         ; Skip if V2 == 208
$956    $5D86   UNKNOWN  $5D86           ; Unknown 5xxx instruction
$958    $B0A3   JP       V0, $0A3        ; Jump to V0 + 0A3
$95A    $D999   DRW      V9, V9, #9      ; Draw 9-byte sprite at V9, V9
$95C    $87B5   SUB      V7, VB          ; V7 -= VB, VF = !borrow
$95E    $E4E5   UNKNOWN  $E4E5           ; Unknown Exxx instruction
$960    $949E   UNKNOWN  $949E           ; Unknown 9xxx instruction
$962    $D81A   DRW      V8, V1, #A      ; Draw 10-byte sprite at V8, V1
$964    $52D3   UNKNOWN  $52D3           ; Unknown 5xxx instruction
$966    $DD3F   DRW      VD, V3, #F      ; Draw 15-byte sprite at VD, V3
$968    $5373   UNKNOWN  $5373           ; Unknown 5xxx instruction
$96A    $6329   LD       V3, #29         ; Load 41 into V3
$96C    $E0B3   UNKNOWN  $E0B3           ; Unknown Exxx instruction
$96E    $B867   JP       V0, $867        ; Jump to V0 + 867
$970    $62DC   LD       V2, #DC         ; Load 220 into V2
$972    $D990   DRW      V9, V9, #0      ; Draw 0-byte sprite at V9, V9
$974    $B9E2   JP       V0, $9E2        ; Jump to V0 + 9E2
$976    $A490   LD       I, $490         ; Load 490 into I
$978    $BC69   JP       V0, $C69        ; Jump to V0 + C69
$97A    $F665   LD       V6, [I]         ; Load V0-V6 from I
$97C    $5223   UNKNOWN  $5223           ; Unknown 5xxx instruction
$97E    $D812   DRW      V8, V1, #2      ; Draw 2-byte sprite at V8, V1
$980    $4DC8   SNE      VD, #C8         ; Skip if VD != 200
$982    $6084   LD       V0, #84         ; Load 132 into V0
$984    $D604   DRW      V6, V0, #4      ; Draw 4-byte sprite at V6, V0
$986    $DE59   DRW      VE, V5, #9      ; Draw 9-byte sprite at VE, V5
$988    $28ED   CALL     $8ED            ; Call subroutine at 8ED
$98A    $C97E   RND      V9, #7E         ; V9 = random & 7E
$98C    $994B   UNKNOWN  $994B           ; Unknown 9xxx instruction
$98E    $AF38   LD       I, $F38         ; Load F38 into I
$990    $7E51   ADD      VE, #51         ; Add 81 to VE
$992    $97AF   UNKNOWN  $97AF           ; Unknown 9xxx instruction
$994    $02A6   SYS      $2A6            ; System call to 2A6
$996    $1AE3   JP       $AE3            ; Jump to AE3
$998    $CB72   RND      VB, #72         ; VB = random & 72
$99A    $9D5F   UNKNOWN  $9D5F           ; Unknown 9xxx instruction
$99C    $6CDC   LD       VC, #DC         ; Load 220 into VC
$99E    $7491   ADD      V4, #91         ; Add 145 to V4
$9A0    $0B18   SYS      $B18            ; System call to B18
$9A2    $9083   UNKNOWN  $9083           ; Unknown 9xxx instruction
$9A4    $CBE9   RND      VB, #E9         ; VB = random & E9
$9A6    $C167   RND      V1, #67         ; V1 = random & 67
$9A8    $666D   LD       V6, #6D         ; Load 109 into V6
$9AA    $4574   SNE      V5, #74         ; Skip if V5 != 116
$9AC    $64A8   LD       V4, #A8         ; Load 168 into V4
$9AE    $5A0E   UNKNOWN  $5A0E           ; Unknown 5xxx instruction
$9B0    $3923   SE       V9, #23         ; Skip if V9 == 35
$9B2    $FB09   UNKNOWN  FB09            ; Unknown Fxxx instruction
$9B4    $9A39   UNKNOWN  $9A39           ; Unknown 9xxx instruction
$9B6    $6D49   LD       VD, #49         ; Load 73 into VD
$9B8    $2958   CALL     $958            ; Call subroutine at 958
$9BA    $473E   SNE      V7, #3E         ; Skip if V7 != 62
$9BC    $93EF   UNKNOWN  $93EF           ; Unknown 9xxx instruction
$9BE    $FD88   UNKNOWN  FD88            ; Unknown Fxxx instruction
$9C0    $0B1F   SYS      $B1F            ; System call to B1F
$9C2    $9645   UNKNOWN  $9645           ; Unknown 9xxx instruction
$9C4    $63CB   LD       V3, #CB         ; Load 203 into V3
$9C6    $54F7   UNKNOWN  $54F7           ; Unknown 5xxx instruction
$9C8    $1BDE   JP       $BDE            ; Jump to BDE
$9CA    $F5E4   UNKNOWN  F5E4            ; Unknown Fxxx instruction
$9CC    $7E6A   ADD      VE, #6A         ; Add 106 to VE
$9CE    $5D29   UNKNOWN  $5D29           ; Unknown 5xxx instruction
$9D0    $9FDD   UNKNOWN  $9FDD           ; Unknown 9xxx instruction
$9D2    $BEE8   JP       V0, $EE8        ; Jump to V0 + EE8
$9D4    $8F90   LD       VF, V9          ; VF = V9
$9D6    $396E   SE       V9, #6E         ; Skip if V9 == 110
$9D8    $7439   ADD      V4, #39         ; Add 57 to V4
$9DA    $8EC0   LD       VE, VC          ; VE = VC
$9DC    $7AB6   ADD      VA, #B6         ; Add 182 to VA
$9DE    $41CB   SNE      V1, #CB         ; Skip if V1 != 203
$9E0    $926A   UNKNOWN  $926A           ; Unknown 9xxx instruction
$9E2    $396F   SE       V9, #6F         ; Skip if V9 == 111
$9E4    $D561   DRW      V5, V6, #1      ; Draw 1-byte sprite at V5, V6
$9E6    $618D   LD       V1, #8D         ; Load 141 into V1
$9E8    $5FAF   UNKNOWN  $5FAF           ; Unknown 5xxx instruction
$9EA    $5155   UNKNOWN  $5155           ; Unknown 5xxx instruction
$9EC    $8444   ADD      V4, V4          ; V4 += V4, VF = carry
$9EE    $409A   SNE      V0, #9A         ; Skip if V0 != 154
$9F0    $8F1B   UNKNOWN  8F1B            ; Unknown 8xxx instruction
$9F2    $A96B   LD       I, $96B         ; Load 96B into I
$9F4    $ECAF   UNKNOWN  $ECAF           ; Unknown Exxx instruction
$9F6    $E5E8   UNKNOWN  $E5E8           ; Unknown Exxx instruction
$9F8    $A7FE   LD       I, $7FE         ; Load 7FE into I
$9FA    $24BB   CALL     $4BB            ; Call subroutine at 4BB
$9FC    $77BE   ADD      V7, #BE         ; Add 190 to V7
$9FE    $4E8C   SNE      VE, #8C         ; Skip if VE != 140
$A00    $9785   UNKNOWN  $9785           ; Unknown 9xxx instruction
$A02    $4317   SNE      V3, #17         ; Skip if V3 != 23
$A04    $4B5B   SNE      VB, #5B         ; Skip if VB != 91
$A06    $4720   SNE      V7, #20         ; Skip if V7 != 32
$A08    $5636   UNKNOWN  $5636           ; Unknown 5xxx instruction
$A0A    $9C29   UNKNOWN  $9C29           ; Unknown 9xxx instruction
$A0C    $B964   JP       V0, $964        ; Jump to V0 + 964
$A0E    $BB2F   JP       V0, $B2F        ; Jump to V0 + B2F
$A10    $832D   UNKNOWN  832D            ; Unknown 8xxx instruction
$A12    $2E00   CALL     $E00            ; Call subroutine at E00
$A14    $D078   DRW      V0, V7, #8      ; Draw 8-byte sprite at V0, V7
$A16    $700D   ADD      V0, #0D         ; Add 13 to V0
$A18    $C174   RND      V1, #74         ; V1 = random & 74
$A1A    $FA0F   UNKNOWN  FA0F            ; Unknown Fxxx instruction
$A1C    $5C15   UNKNOWN  $5C15           ; Unknown 5xxx instruction
$A1E    $961B   UNKNOWN  $961B           ; Unknown 9xxx instruction
$A20    $66A3   LD       V6, #A3         ; Load 163 into V6
$A22    $00B9   SYS      $0B9            ; System call to 0B9
$A24    $D7AF   DRW      V7, VA, #F      ; Draw 15-byte sprite at V7, VA
$A26    $F370   UNKNOWN  F370            ; Unknown Fxxx instruction
$A28    $23AF   CALL     $3AF            ; Call subroutine at 3AF
$A2A    $EFF7   UNKNOWN  $EFF7           ; Unknown Exxx instruction
$A2C    $3C4B   SE       VC, #4B         ; Skip if VC == 75
$A2E    $A81F   LD       I, $81F         ; Load 81F into I
$A30    $76D7   ADD      V6, #D7         ; Add 215 to V6
$A32    $ED66   UNKNOWN  $ED66           ; Unknown Exxx instruction
$A34    $E9ED   UNKNOWN  $E9ED           ; Unknown Exxx instruction
$A36    $3C06   SE       VC, #06         ; Skip if VC == 6
$A38    $61F4   LD       V1, #F4         ; Load 244 into V1
$A3A    $A88F   LD       I, $88F         ; Load 88F into I
$A3C    $620D   LD       V2, #0D         ; Load 13 into V2
$A3E    $B24E   JP       V0, $24E        ; Jump to V0 + 24E
$A40    $19FF   JP       $9FF            ; Jump to 9FF
$A42    $F016   UNKNOWN  F016            ; Unknown Fxxx instruction
$A44    $101F   JP       $01F            ; Jump to 01F
$A46    $5DFE   UNKNOWN  $5DFE           ; Unknown 5xxx instruction
$A48    $D88D   DRW      V8, V8, #D      ; Draw 13-byte sprite at V8, V8
$A4A    $3DEE   SE       VD, #EE         ; Skip if VD == 238
$A4C    $DA31   DRW      VA, V3, #1      ; Draw 1-byte sprite at VA, V3
$A4E    $DBC1   DRW      VB, VC, #1      ; Draw 1-byte sprite at VB, VC
$A50    $1BF4   JP       $BF4            ; Jump to BF4
$A52    $87BF   UNKNOWN  87BF            ; Unknown 8xxx instruction
$A54    $D905   DRW      V9, V0, #5      ; Draw 5-byte sprite at V9, V0
$A56    $D01F   DRW      V0, V1, #F      ; Draw 15-byte sprite at V0, V1
$A58    $0773   SYS      $773            ; System call to 773
$A5A    $282F   CALL     $82F            ; Call subroutine at 82F
$A5C    $C234   RND      V2, #34         ; V2 = random & 34
$A5E    $E787   UNKNOWN  $E787           ; Unknown Exxx instruction
$A60    $01D8   SYS      $1D8            ; System call to 1D8
$A62    $3C48   SE       VC, #48         ; Skip if VC == 72
$A64    $9AC8   UNKNOWN  $9AC8           ; Unknown 9xxx instruction
$A66    $2BF4   CALL     $BF4            ; Call subroutine at BF4
$A68    $FB18   LD       ST, VB          ; Sound timer = VB
$A6A    $2771   CALL     $771            ; Call subroutine at 771
$A6C    $0EC7   SYS      $EC7            ; System call to EC7
$A6E    $0724   SYS      $724            ; System call to 724
$A70    $1CD9   JP       $CD9            ; Jump to CD9
$A72    $4E61   SNE      VE, #61         ; Skip if VE != 97
$A74    $2EE9   CALL     $EE9            ; Call subroutine at EE9
$A76    $D41E   DRW      V4, V1, #E      ; Draw 14-byte sprite at V4, V1
$A78    $B5CB   JP       V0, $5CB        ; Jump to V0 + 5CB
$A7A    $7174   ADD      V1, #74         ; Add 116 to V1
$A7C    $5494   UNKNOWN  $5494           ; Unknown 5xxx instruction
$A7E    $8C79   UNKNOWN  8C79            ; Unknown 8xxx instruction
$A80    $F50E   UNKNOWN  F50E            ; Unknown Fxxx instruction
$A82    $57B6   UNKNOWN  $57B6           ; Unknown 5xxx instruction
$A84    $9AD8   UNKNOWN  $9AD8           ; Unknown 9xxx instruction
$A86    $D1CD   DRW      V1, VC, #D      ; Draw 13-byte sprite at V1, VC
$A88    $C011   RND      V0, #11         ; V0 = random & 11
$A8A    $F89F   UNKNOWN  F89F            ; Unknown Fxxx instruction
$A8C    $05EB   SYS      $5EB            ; System call to 5EB
$A8E    $B695   JP       V0, $695        ; Jump to V0 + 695
$A90    $C02E   RND      V0, #2E         ; V0 = random & 2E
$A92    $C914   RND      V9, #14         ; V9 = random & 14
$A94    $F02C   UNKNOWN  F02C            ; Unknown Fxxx instruction
$A96    $17D8   JP       $7D8            ; Jump to 7D8
$A98    $B290   JP       V0, $290        ; Jump to V0 + 290
$A9A    $4346   SNE      V3, #46         ; Skip if V3 != 70
$A9C    $B5FD   JP       V0, $5FD        ; Jump to V0 + 5FD
$A9E    $8CC4   ADD      VC, VC          ; VC += VC, VF = carry
$AA0    $67DD   LD       V7, #DD         ; Load 221 into V7
$AA2    $8525   SUB      V5, V2          ; V5 -= V2, VF = !borrow
$AA4    $BA9E   JP       V0, $A9E        ; Jump to V0 + A9E
$AA6    $CACA   RND      VA, #CA         ; VA = random & CA
$AA8    $6EB2   LD       VE, #B2         ; Load 178 into VE
$AAA    $AF94   LD       I, $F94         ; Load F94 into I
$AAC    $F2A6   UNKNOWN  F2A6            ; Unknown Fxxx instruction
$AAE    $FEA2   UNKNOWN  FEA2            ; Unknown Fxxx instruction
$AB0    $36BB   SE       V6, #BB         ; Skip if V6 == 187
$AB2    $72A8   ADD      V2, #A8         ; Add 168 to V2
$AB4    $C66E   RND      V6, #6E         ; V6 = random & 6E
$AB6    $E3B1   UNKNOWN  $E3B1           ; Unknown Exxx instruction
$AB8    $8DFA   UNKNOWN  8DFA            ; Unknown 8xxx instruction
$ABA    $7BA4   ADD      VB, #A4         ; Add 164 to VB
$ABC    $496D   SNE      V9, #6D         ; Skip if V9 != 109
$ABE    $ACDE   LD       I, $CDE         ; Load CDE into I
$AC0    $06BD   SYS      $6BD            ; System call to 6BD
$AC2    $5854   UNKNOWN  $5854           ; Unknown 5xxx instruction
$AC4    $05BD   SYS      $5BD            ; System call to 5BD
$AC6    $1B2B   JP       $B2B            ; Jump to B2B
$AC8    $266E   CALL     $66E            ; Call subroutine at 66E
$ACA    $D7FD   DRW      V7, VF, #D      ; Draw 13-byte sprite at V7, VF
$ACC    $0D68   SYS      $D68            ; System call to D68
$ACE    $2D8F   CALL     $D8F            ; Call subroutine at D8F
$AD0    $A675   LD       I, $675         ; Load 675 into I
$AD2    $E06B   UNKNOWN  $E06B           ; Unknown Exxx instruction
$AD4    $E92E   UNKNOWN  $E92E           ; Unknown Exxx instruction
$AD6    $5CD3   UNKNOWN  $5CD3           ; Unknown 5xxx instruction
$AD8    $2940   CALL     $940            ; Call subroutine at 940
$ADA    $6031   LD       V0, #31         ; Load 49 into V0
$ADC    $375E   SE       V7, #5E         ; Skip if V7 == 94
$ADE    $18ED   JP       $8ED            ; Jump to 8ED
$AE0    $0917   SYS      $917            ; System call to 917
$AE2    $1CF5   JP       $CF5            ; Jump to CF5
$AE4    $EF8E   UNKNOWN  $EF8E           ; Unknown Exxx instruction
$AE6    $414D   SNE      V1, #4D         ; Skip if V1 != 77
$AE8    $9241   UNKNOWN  $9241           ; Unknown 9xxx instruction
$AEA    $742D   ADD      V4, #2D         ; Add 45 to V4
$AEC    $4EB3   SNE      VE, #B3         ; Skip if VE != 179
$AEE    $AE92   LD       I, $E92         ; Load E92 into I
$AF0    $26E1   CALL     $6E1            ; Call subroutine at 6E1
$AF2    $7059   ADD      V0, #59         ; Add 89 to V0
$AF4    $CCC8   RND      VC, #C8         ; VC = random & C8
$AF6    $8A5E   SHL      VA              ; VA <<= 1, VF = MSB
$AF8    $D3EF   DRW      V3, VE, #F      ; Draw 15-byte sprite at V3, VE
$AFA    $A4F1   LD       I, $4F1         ; Load 4F1 into I
$AFC    $206B   CALL     $06B            ; Call subroutine at 06B
$AFE    $9992   UNKNOWN  $9992           ; Unknown 9xxx instruction
$B00    $1520   JP       $520            ; Jump to 520
$B02    $4AC1   SNE      VA, #C1         ; Skip if VA != 193
$B04    $30B8   SE       V0, #B8         ; Skip if V0 == 184
$B06    $F922   UNKNOWN  F922            ; Unknown Fxxx instruction
$B08    $2F77   CALL     $F77            ; Call subroutine at F77
$B0A    $DA9C   DRW      VA, V9, #C      ; Draw 12-byte sprite at VA, V9
$B0C    $3B37   SE       VB, #37         ; Skip if VB == 55
$B0E    $210B   CALL     $10B            ; Call subroutine at 10B
$B10    $DBBC   DRW      VB, VB, #C      ; Draw 12-byte sprite at VB, VB
$B12    $5B5F   UNKNOWN  $5B5F           ; Unknown 5xxx instruction
$B14    $82CB   UNKNOWN  82CB            ; Unknown 8xxx instruction
$B16    $A26A   LD       I, $26A         ; Load 26A into I
$B18    $EC8E   UNKNOWN  $EC8E           ; Unknown Exxx instruction
$B1A    $A55B   LD       I, $55B         ; Load 55B into I
$B1C    $C8F9   RND      V8, #F9         ; V8 = random & F9
$B1E    $6480   LD       V4, #80         ; Load 128 into V4
$B20    $CE32   RND      VE, #32         ; VE = random & 32
$B22    $0939   SYS      $939            ; System call to 939
$B24    $AFA5   LD       I, $FA5         ; Load FA5 into I
$B26    $916A   UNKNOWN  $916A           ; Unknown 9xxx instruction
$B28    $2A36   CALL     $A36            ; Call subroutine at A36
$B2A    $FE2B   UNKNOWN  FE2B            ; Unknown Fxxx instruction
$B2C    $1DCB   JP       $DCB            ; Jump to DCB
$B2E    $7BF2   ADD      VB, #F2         ; Add 242 to VB
$B30    $1077   JP       $077            ; Jump to 077
$B32    $57B0   SE       V7, VB          ; Skip if V7 == VB
$B34    $45A2   SNE      V5, #A2         ; Skip if V5 != 162
$B36    $A077   LD       I, $077         ; Load 077 into I
$B38    $DDEE   DRW      VD, VE, #E      ; Draw 14-byte sprite at VD, VE
$B3A    $4E98   SNE      VE, #98         ; Skip if VE != 152
$B3C    $1045   JP       $045            ; Jump to 045
$B3E    $B935   JP       V0, $935        ; Jump to V0 + 935
$B40    $DBD3   DRW      VB, VD, #3      ; Draw 3-byte sprite at VB, VD
$B42    $8058   UNKNOWN  8058            ; Unknown 8xxx instruction
$B44    $B546   JP       V0, $546        ; Jump to V0 + 546
$B46    $2907   CALL     $907            ; Call subroutine at 907
$B48    $7F92   ADD      VF, #92         ; Add 146 to VF
$B4A    $88CF   UNKNOWN  88CF            ; Unknown 8xxx instruction
$B4C    $6B39   LD       VB, #39         ; Load 57 into VB
$B4E    $6BE9   LD       VB, #E9         ; Load 233 into VB
$B50    $2E10   CALL     $E10            ; Call subroutine at E10
$B52    $E0A5   UNKNOWN  $E0A5           ; Unknown Exxx instruction
$B54    $3F8B   SE       VF, #8B         ; Skip if VF == 139
$B56    $2F92   CALL     $F92            ; Call subroutine at F92
$B58    $EA67   UNKNOWN  $EA67           ; Unknown Exxx instruction
$B5A    $C516   RND      V5, #16         ; V5 = random & 16
$B5C    $4A86   SNE      VA, #86         ; Skip if VA != 134
$B5E    $2792   CALL     $792            ; Call subroutine at 792
$B60    $4EB6   SNE      VE, #B6         ; Skip if VE != 182
$B62    $1616   JP       $616            ; Jump to 616
$B64    $1548   JP       $548            ; Jump to 548
$B66    $9D13   UNKNOWN  $9D13           ; Unknown 9xxx instruction
$B68    $8DDB   UNKNOWN  8DDB            ; Unknown 8xxx instruction
$B6A    $CBCF   RND      VB, #CF         ; VB = random & CF
$B6C    $0A8C   SYS      $A8C            ; System call to A8C
$B6E    $2499   CALL     $499            ; Call subroutine at 499
$B70    $4F3D   SNE      VF, #3D         ; Skip if VF != 61
$B72    $1546   JP       $546            ; Jump to 546
$B74    $3ED3   SE       VE, #D3         ; Skip if VE == 211
$B76    $7DB3   ADD      VD, #B3         ; Add 179 to VD
$B78    $198E   JP       $98E            ; Jump to 98E
$B7A    $5F45   UNKNOWN  $5F45           ; Unknown 5xxx instruction
$B7C    $C41F   RND      V4, #1F         ; V4 = random & 1F
$B7E    $017A   SYS      $17A            ; System call to 17A
$B80    $BAC4   JP       V0, $AC4        ; Jump to V0 + AC4
$B82    $7A6A   ADD      VA, #6A         ; Add 106 to VA
$B84    $9AD7   UNKNOWN  $9AD7           ; Unknown 9xxx instruction
$B86    $D855   DRW      V8, V5, #5      ; Draw 5-byte sprite at V8, V5
$B88    $402E   SNE      V0, #2E         ; Skip if V0 != 46
$B8A    $1D6F   JP       $D6F            ; Jump to D6F
$B8C    $67F3   LD       V7, #F3         ; Load 243 into V7
$B8E    $CCB6   RND      VC, #B6         ; VC = random & B6
$B90    $799A   ADD      V9, #9A         ; Add 154 to V9
$B92    $5E71   UNKNOWN  $5E71           ; Unknown 5xxx instruction
$B94    $EC7F   UNKNOWN  $EC7F           ; Unknown Exxx instruction
$B96    $C822   RND      V8, #22         ; V8 = random & 22
$B98    $62EB   LD       V2, #EB         ; Load 235 into V2
$B9A    $5FEA   UNKNOWN  $5FEA           ; Unknown 5xxx instruction
$B9C    $393D   SE       V9, #3D         ; Skip if V9 == 61
$B9E    $F516   UNKNOWN  F516            ; Unknown Fxxx instruction
$BA0    $6D2E   LD       VD, #2E         ; Load 46 into VD
$BA2    $145B   JP       $45B            ; Jump to 45B
$BA4    $B4E4   JP       V0, $4E4        ; Jump to V0 + 4E4
$BA6    $A552   LD       I, $552         ; Load 552 into I
$BA8    $FFE0   UNKNOWN  FFE0            ; Unknown Fxxx instruction
$BAA    $4558   SNE      V5, #58         ; Skip if V5 != 88
$BAC    $4C6C   SNE      VC, #6C         ; Skip if VC != 108
$BAE    $3C95   SE       VC, #95         ; Skip if VC == 149
$BB0    $4098   SNE      V0, #98         ; Skip if V0 != 152
$BB2    $FFF3   UNKNOWN  FFF3            ; Unknown Fxxx instruction
$BB4    $C3B1   RND      V3, #B1         ; V3 = random & B1
$BB6    $DD03   DRW      VD, V0, #3      ; Draw 3-byte sprite at VD, V0
$BB8    $D4DF   DRW      V4, VD, #F      ; Draw 15-byte sprite at V4, VD
$BBA    $5D9D   UNKNOWN  $5D9D           ; Unknown 5xxx instruction
$BBC    $232C   CALL     $32C            ; Call subroutine at 32C
$BBE    $4EB8   SNE      VE, #B8         ; Skip if VE != 184
$BC0    $1226   JP       $226            ; Jump to 226
$BC2    $EAE8   UNKNOWN  $EAE8           ; Unknown Exxx instruction
$BC4    $1823   JP       $823            ; Jump to 823
$BC6    $3B93   SE       VB, #93         ; Skip if VB == 147
$BC8    $9E1C   UNKNOWN  $9E1C           ; Unknown 9xxx instruction
$BCA    $DCFA   DRW      VC, VF, #A      ; Draw 10-byte sprite at VC, VF
$BCC    $13EE   JP       $3EE            ; Jump to 3EE
$BCE    $0976   SYS      $976            ; System call to 976
$BD0    $D38C   DRW      V3, V8, #C      ; Draw 12-byte sprite at V3, V8
$BD2    $1ECD   JP       $ECD            ; Jump to ECD
$BD4    $C49D   RND      V4, #9D         ; V4 = random & 9D
$BD6    $845C   UNKNOWN  845C            ; Unknown 8xxx instruction
$BD8    $0376   SYS      $376            ; System call to 376
$BDA    $2829   CALL     $829            ; Call subroutine at 829
$BDC    $014F   SYS      $14F            ; System call to 14F
$BDE    $FDF6   UNKNOWN  FDF6            ; Unknown Fxxx instruction
$BE0    $A690   LD       I, $690         ; Load 690 into I
$BE2    $93D4   UNKNOWN  $93D4           ; Unknown 9xxx instruction
$BE4    $C52D   RND      V5, #2D         ; V5 = random & 2D
$BE6    $3AE3   SE       VA, #E3         ; Skip if VA == 227
$BE8    $60D7   LD       V0, #D7         ; Load 215 into V0
$BEA    $FA10   UNKNOWN  FA10            ; Unknown Fxxx instruction
$BEC    $4610   SNE      V6, #10         ; Skip if V6 != 16
$BEE    $9D7F   UNKNOWN  $9D7F           ; Unknown 9xxx instruction
$BF0    $B3F6   JP       V0, $3F6        ; Jump to V0 + 3F6
$BF2    $20A5   CALL     $0A5            ; Call subroutine at 0A5
$BF4    $C45A   RND      V4, #5A         ; V4 = random & 5A
$BF6    $BB9C   JP       V0, $B9C        ; Jump to V0 + B9C
$BF8    $8108   UNKNOWN  8108            ; Unknown 8xxx instruction
$BFA    $FFE9   UNKNOWN  FFE9            ; Unknown Fxxx instruction
$BFC    $9160   SNE      V1, V6          ; Skip if V1 != V6
$BFE    $B693   JP       V0, $693        ; Jump to V0 + 693
$C00    $0F1B   SYS      $F1B            ; System call to F1B
$C02    $803C   UNKNOWN  803C            ; Unknown 8xxx instruction
$C04    $3487   SE       V4, #87         ; Skip if V4 == 135
$C06    $7EFB   ADD      VE, #FB         ; Add 251 to VE
$C08    $B70B   JP       V0, $70B        ; Jump to V0 + 70B
$C0A    $9F2B   UNKNOWN  $9F2B           ; Unknown 9xxx instruction
$C0C    $C495   RND      V4, #95         ; V4 = random & 95
$C0E    $94F9   UNKNOWN  $94F9           ; Unknown 9xxx instruction
$C10    $2378   CALL     $378            ; Call subroutine at 378
$C12    $BAC1   JP       V0, $AC1        ; Jump to V0 + AC1
$C14    $C1F7   RND      V1, #F7         ; V1 = random & F7
$C16    $D511   DRW      V5, V1, #1      ; Draw 1-byte sprite at V5, V1
$C18    $D653   DRW      V6, V5, #3      ; Draw 3-byte sprite at V6, V5
$C1A    $6848   LD       V8, #48         ; Load 72 into V8
$C1C    $738C   ADD      V3, #8C         ; Add 140 to V3
$C1E    $DE1F   DRW      VE, V1, #F      ; Draw 15-byte sprite at VE, V1
$C20    $D8B1   DRW      V8, VB, #1      ; Draw 1-byte sprite at V8, VB
$C22    $B7BD   JP       V0, $7BD        ; Jump to V0 + 7BD
$C24    $27DC   CALL     $7DC            ; Call subroutine at 7DC
$C26    $57BA   UNKNOWN  $57BA           ; Unknown 5xxx instruction
$C28    $3C49   SE       VC, #49         ; Skip if VC == 73
$C2A    $1BD7   JP       $BD7            ; Jump to BD7
$C2C    $AD1B   LD       I, $D1B         ; Load D1B into I
$C2E    $D34F   DRW      V3, V4, #F      ; Draw 15-byte sprite at V3, V4
$C30    $2650   CALL     $650            ; Call subroutine at 650
$C32    $D9A5   DRW      V9, VA, #5      ; Draw 5-byte sprite at V9, VA
$C34    $C073   RND      V0, #73         ; V0 = random & 73
$C36    $2803   CALL     $803            ; Call subroutine at 803
$C38    $B6B6   JP       V0, $6B6        ; Jump to V0 + 6B6
$C3A    $275A   CALL     $75A            ; Call subroutine at 75A
$C3C    $602C   LD       V0, #2C         ; Load 44 into V0
$C3E    $0B94   SYS      $B94            ; System call to B94
$C40    $23D9   CALL     $3D9            ; Call subroutine at 3D9
$C42    $1C97   JP       $C97            ; Jump to C97
$C44    $DDFB   DRW      VD, VF, #B      ; Draw 11-byte sprite at VD, VF
$C46    $9044   UNKNOWN  $9044           ; Unknown 9xxx instruction
$C48    $53C5   UNKNOWN  $53C5           ; Unknown 5xxx instruction
$C4A    $A508   LD       I, $508         ; Load 508 into I
$C4C    $DA1C   DRW      VA, V1, #C      ; Draw 12-byte sprite at VA, V1
$C4E    $EFC6   UNKNOWN  $EFC6           ; Unknown Exxx instruction
$C50    $1B1C   JP       $B1C            ; Jump to B1C
$C52    $79CA   ADD      V9, #CA         ; Add 202 to V9
$C54    $0C7C   SYS      $C7C            ; System call to C7C
$C56    $3374   SE       V3, #74         ; Skip if V3 == 116
$C58    $5E7A   UNKNOWN  $5E7A           ; Unknown 5xxx instruction
$C5A    $65AA   LD       V5, #AA         ; Load 170 into V5
$C5C    $5F28   UNKNOWN  $5F28           ; Unknown 5xxx instruction
$C5E    $2E8C   CALL     $E8C            ; Call subroutine at E8C
$C60    $FEDF   UNKNOWN  FEDF            ; Unknown Fxxx instruction
$C62    $8E74   ADD      VE, V7          ; VE += V7, VF = carry
$C64    $30BD   SE       V0, #BD         ; Skip if V0 == 189
$C66    $0876   SYS      $876            ; System call to 876
$C68    $6721   LD       V7, #21         ; Load 33 into V7
$C6A    $3F0D   SE       VF, #0D         ; Skip if VF == 13
$C6C    $9EEF   UNKNOWN  $9EEF           ; Unknown 9xxx instruction
$C6E    $1C96   JP       $C96            ; Jump to C96
$C70    $4708   SNE      V7, #08         ; Skip if V7 != 8
$C72    $E474   UNKNOWN  $E474           ; Unknown Exxx instruction
$C74    $8105   SUB      V1, V0          ; V1 -= V0, VF = !borrow
$C76    $2741   CALL     $741            ; Call subroutine at 741
$C78    $9AE4   UNKNOWN  $9AE4           ; Unknown 9xxx instruction
$C7A    $B55D   JP       V0, $55D        ; Jump to V0 + 55D
$C7C    $288C   CALL     $88C            ; Call subroutine at 88C
$C7E    $535E   UNKNOWN  $535E           ; Unknown 5xxx instruction
$C80    $6A50   LD       VA, #50         ; Load 80 into VA
$C82    $C83D   RND      V8, #3D         ; V8 = random & 3D
$C84    $62E8   LD       V2, #E8         ; Load 232 into V2
$C86    $C688   RND      V6, #88         ; V6 = random & 88
$C88    $C18D   RND      V1, #8D         ; V1 = random & 8D
$C8A    $469F   SNE      V6, #9F         ; Skip if V6 != 159
$C8C    $871A   UNKNOWN  871A            ; Unknown 8xxx instruction
$C8E    $23CF   CALL     $3CF            ; Call subroutine at 3CF
$C90    $5D1D   UNKNOWN  $5D1D           ; Unknown 5xxx instruction
$C92    $310D   SE       V1, #0D         ; Skip if V1 == 13
$C94    $9E6D   UNKNOWN  $9E6D           ; Unknown 9xxx instruction
$C96    $FAF4   UNKNOWN  FAF4            ; Unknown Fxxx instruction
$C98    $98C0   SNE      V8, VC          ; Skip if V8 != VC
$C9A    $12DC   JP       $2DC            ; Jump to 2DC
$C9C    $ECFE   UNKNOWN  $ECFE           ; Unknown Exxx instruction
$C9E    $7E1F   ADD      VE, #1F         ; Add 31 to VE
$CA0    $1EC3   JP       $EC3            ; Jump to EC3
$CA2    $1FE1   JP       $FE1            ; Jump to FE1
$CA4    $758A   ADD      V5, #8A         ; Add 138 to V5
$CA6    $1FD5   JP       $FD5            ; Jump to FD5
$CA8    $3344   SE       V3, #44         ; Skip if V3 == 68
$CAA    $5A84   UNKNOWN  $5A84           ; Unknown 5xxx instruction
$CAC    $C869   RND      V8, #69         ; V8 = random & 69
$CAE    $2031   CALL     $031            ; Call subroutine at 031
$CB0    $8E89   UNKNOWN  8E89            ; Unknown 8xxx instruction
$CB2    $772B   ADD      V7, #2B         ; Add 43 to V7
$CB4    $C3D6   RND      V3, #D6         ; V3 = random & D6
$CB6    $3474   SE       V4, #74         ; Skip if V4 == 116
$CB8    $F5A9   UNKNOWN  F5A9            ; Unknown Fxxx instruction
$CBA    $00AE   SYS      $0AE            ; System call to 0AE
$CBC    $D833   DRW      V8, V3, #3      ; Draw 3-byte sprite at V8, V3
$CBE    $E2CB   UNKNOWN  $E2CB           ; Unknown Exxx instruction
$CC0    $41B6   SNE      V1, #B6         ; Skip if V1 != 182
$CC2    $EF8C   UNKNOWN  $EF8C           ; Unknown Exxx instruction
$CC4    $5774   UNKNOWN  $5774           ; Unknown 5xxx instruction
$CC6    $4A48   SNE      VA, #48         ; Skip if VA != 72
$CC8    $CA2C   RND      VA, #2C         ; VA = random & 2C
$CCA    $AAD3   LD       I, $AD3         ; Load AD3 into I
$CCC    $3383   SE       V3, #83         ; Skip if V3 == 131
$CCE    $2E52   CALL     $E52            ; Call subroutine at E52
$CD0    $3300   SE       V3, #00         ; Skip if V3 == 0
$CD2    $4F12   SNE      VF, #12         ; Skip if VF != 18
$CD4    $EB23   UNKNOWN  $EB23           ; Unknown Exxx instruction
$CD6    $C9D8   RND      V9, #D8         ; V9 = random & D8
$CD8    $4BE6   SNE      VB, #E6         ; Skip if VB != 230
$CDA    $3ECC   SE       VE, #CC         ; Skip if VE == 204
$CDC    $92AE   UNKNOWN  $92AE           ; Unknown 9xxx instruction
$CDE    $4703   SNE      V7, #03         ; Skip if V7 != 3
$CE0    $F3AF   UNKNOWN  F3AF            ; Unknown Fxxx instruction
$CE2    $71B5   ADD      V1, #B5         ; Add 181 to V1
$CE4    $3B42   SE       VB, #42         ; Skip if VB == 66
$CE6    $E431   UNKNOWN  $E431           ; Unknown Exxx instruction
$CE8    $5C97   UNKNOWN  $5C97           ; Unknown 5xxx instruction
$CEA    $BAB1   JP       V0, $AB1        ; Jump to V0 + AB1
$CEC    $CB1A   RND      VB, #1A         ; VB = random & 1A
$CEE    $20DF   CALL     $0DF            ; Call subroutine at 0DF
$CF0    $9CE3   UNKNOWN  $9CE3           ; Unknown 9xxx instruction
$CF2    $9E7F   UNKNOWN  $9E7F           ; Unknown 9xxx instruction
$CF4    $8EA9   UNKNOWN  8EA9            ; Unknown 8xxx instruction
$CF6    $864A   UNKNOWN  864A            ; Unknown 8xxx instruction
$CF8    $AA6B   LD       I, $A6B         ; Load A6B into I
$CFA    $BEDA   JP       V0, $EDA        ; Jump to V0 + EDA
$CFC    $59D4   UNKNOWN  $59D4           ; Unknown 5xxx instruction
$CFE    $303E   SE       V0, #3E         ; Skip if V0 == 62
$D00    $E051   UNKNOWN  $E051           ; Unknown Exxx instruction
$D02    $FE6C   UNKNOWN  FE6C            ; Unknown Fxxx instruction
$D04    $13E1   JP       $3E1            ; Jump to 3E1
$D06    $0C03   SYS      $C03            ; System call to C03
$D08    $C798   RND      V7, #98         ; V7 = random & 98
$D0A    $C537   RND      V5, #37         ; V5 = random & 37
$D0C    $E8E9   UNKNOWN  $E8E9           ; Unknown Exxx instruction
$D0E    $E081   UNKNOWN  $E081           ; Unknown Exxx instruction
$D10    $701A   ADD      V0, #1A         ; Add 26 to V0
$D12    $46FB   SNE      V6, #FB         ; Skip if V6 != 251
$D14    $5477   UNKNOWN  $5477           ; Unknown 5xxx instruction
$D16    $92E5   UNKNOWN  $92E5           ; Unknown 9xxx instruction
$D18    $44AD   SNE      V4, #AD         ; Skip if V4 != 173
$D1A    $5EEF   UNKNOWN  $5EEF           ; Unknown 5xxx instruction
$D1C    $99F5   UNKNOWN  $99F5           ; Unknown 9xxx instruction
$D1E    $FE05   UNKNOWN  FE05            ; Unknown Fxxx instruction
$D20    $D44E   DRW      V4, V4, #E      ; Draw 14-byte sprite at V4, V4
$D22    $50B3   UNKNOWN  $50B3           ; Unknown 5xxx instruction
$D24    $CF79   RND      VF, #79         ; VF = random & 79
$D26    $42CD   SNE      V2, #CD         ; Skip if V2 != 205
$D28    $99FC   UNKNOWN  $99FC           ; Unknown 9xxx instruction
$D2A    $A765   LD       I, $765         ; Load 765 into I
$D2C    $26C5   CALL     $6C5            ; Call subroutine at 6C5
$D2E    $335F   SE       V3, #5F         ; Skip if V3 == 95
$D30    $6EF7   LD       VE, #F7         ; Load 247 into VE
$D32    $DA9F   DRW      VA, V9, #F      ; Draw 15-byte sprite at VA, V9
$D34    $968B   UNKNOWN  $968B           ; Unknown 9xxx instruction
$D36    $B344   JP       V0, $344        ; Jump to V0 + 344
$D38    $43CD   SNE      V3, #CD         ; Skip if V3 != 205
$D3A    $73BC   ADD      V3, #BC         ; Add 188 to V3
$D3C    $FF1D   UNKNOWN  FF1D            ; Unknown Fxxx instruction
$D3E    $CB44   RND      VB, #44         ; VB = random & 44
$D40    $1ED6   JP       $ED6            ; Jump to ED6
$D42    $6EB6   LD       VE, #B6         ; Load 182 into VE
$D44    $7072   ADD      V0, #72         ; Add 114 to V0
$D46    $BA2C   JP       V0, $A2C        ; Jump to V0 + A2C
$D48    $C44B   RND      V4, #4B         ; V4 = random & 4B
$D4A    $5C16   UNKNOWN  $5C16           ; Unknown 5xxx instruction
$D4C    $7D2F   ADD      VD, #2F         ; Add 47 to VD
$D4E    $77FD   ADD      V7, #FD         ; Add 253 to V7
$D50    $F912   UNKNOWN  F912            ; Unknown Fxxx instruction
$D52    $8096   SHR      V0              ; V0 >>= 1, VF = LSB
$D54    $9860   SNE      V8, V6          ; Skip if V8 != V6
$D56    $7714   ADD      V7, #14         ; Add 20 to V7
$D58    $A7E7   LD       I, $7E7         ; Load 7E7 into I
$D5A    $A3E6   LD       I, $3E6         ; Load 3E6 into I
$D5C    $41E1   SNE      V1, #E1         ; Skip if V1 != 225
$D5E    $E8BD   UNKNOWN  $E8BD           ; Unknown Exxx instruction
$D60    $6F3F   LD       VF, #3F         ; Load 63 into VF
$D62    $D6E5   DRW      V6, VE, #5      ; Draw 5-byte sprite at V6, VE
$D64    $FD3F   UNKNOWN  FD3F            ; Unknown Fxxx instruction
$D66    $D873   DRW      V8, V7, #3      ; Draw 3-byte sprite at V8, V7
$D68    $E5B6   UNKNOWN  $E5B6           ; Unknown Exxx instruction
$D6A    $899A   UNKNOWN  899A            ; Unknown 8xxx instruction
$D6C    $B3EE   JP       V0, $3EE        ; Jump to V0 + 3EE
$D6E    $B1EB   JP       V0, $1EB        ; Jump to V0 + 1EB
$D70    $EDF0   UNKNOWN  $EDF0           ; Unknown Exxx instruction
$D72    $B4C1   JP       V0, $4C1        ; Jump to V0 + 4C1
$D74    $C0A4   RND      V0, #A4         ; V0 = random & A4
$D76    $85BD   UNKNOWN  85BD            ; Unknown 8xxx instruction
$D78    $DDF6   DRW      VD, VF, #6      ; Draw 6-byte sprite at VD, VF
$D7A    $0CD5   SYS      $CD5            ; System call to CD5
$D7C    $6BA3   LD       VB, #A3         ; Load 163 into VB
$D7E    $1B3D   JP       $B3D            ; Jump to B3D
$D80    $4561   SNE      V5, #61         ; Skip if V5 != 97
$D82    $7CDE   ADD      VC, #DE         ; Add 222 to VC
$D84    $8917   SUBN     V9, V1          ; V9 = V1 - V9, VF = !borrow
$D86    $B9CC   JP       V0, $9CC        ; Jump to V0 + 9CC
$D88    $2842   CALL     $842            ; Call subroutine at 842
$D8A    $50B8   UNKNOWN  $50B8           ; Unknown 5xxx instruction
$D8C    $7CC9   ADD      VC, #C9         ; Add 201 to VC
$D8E    $38A7   SE       V8, #A7         ; Skip if V8 == 167
$D90    $14F0   JP       $4F0            ; Jump to 4F0
$D92    $1ADA   JP       $ADA            ; Jump to ADA
$D94    $CB22   RND      VB, #22         ; VB = random & 22
$D96    $DBAF   DRW      VB, VA, #F      ; Draw 15-byte sprite at VB, VA
$D98    $8F85   SUB      VF, V8          ; VF -= V8, VF = !borrow
$D9A    $C393   RND      V3, #93         ; V3 = random & 93
$D9C    $216A   CALL     $16A            ; Call subroutine at 16A
$D9E    $83B6   SHR      V3              ; V3 >>= 1, VF = LSB
$DA0    $F608   UNKNOWN  F608            ; Unknown Fxxx instruction
$DA2    $81F7   SUBN     V1, VF          ; V1 = VF - V1, VF = !borrow
$DA4    $A581   LD       I, $581         ; Load 581 into I
$DA6    $A639   LD       I, $639         ; Load 639 into I
$DA8    $1863   JP       $863            ; Jump to 863
$DAA    $E286   UNKNOWN  $E286           ; Unknown Exxx instruction
$DAC    $4F69   SNE      VF, #69         ; Skip if VF != 105
$DAE    $4F54   SNE      VF, #54         ; Skip if VF != 84
$DB0    $264F   CALL     $64F            ; Call subroutine at 64F
$DB2    $B61F   JP       V0, $61F        ; Jump to V0 + 61F
$DB4    $F4BF   UNKNOWN  F4BF            ; Unknown Fxxx instruction
$DB6    $E443   UNKNOWN  $E443           ; Unknown Exxx instruction
$DB8    $19CE   JP       $9CE            ; Jump to 9CE
$DBA    $8A2B   UNKNOWN  8A2B            ; Unknown 8xxx instruction
$DBC    $DAA0   DRW      VA, VA, #0      ; Draw 0-byte sprite at VA, VA
$DBE    $28F2   CALL     $8F2            ; Call subroutine at 8F2
$DC0    $EBE2   UNKNOWN  $EBE2           ; Unknown Exxx instruction
$DC2    $266B   CALL     $66B            ; Call subroutine at 66B
$DC4    $6350   LD       V3, #50         ; Load 80 into V3
$DC6    $D8AD   DRW      V8, VA, #D      ; Draw 13-byte sprite at V8, VA
$DC8    $C587   RND      V5, #87         ; V5 = random & 87
$DCA    $B2F3   JP       V0, $2F3        ; Jump to V0 + 2F3
$DCC    $C96E   RND      V9, #6E         ; V9 = random & 6E
$DCE    $7EA0   ADD      VE, #A0         ; Add 160 to VE
$DD0    $9E61   UNKNOWN  $9E61           ; Unknown 9xxx instruction
$DD2    $0F1E   SYS      $F1E            ; System call to F1E
$DD4    $1410   JP       $410            ; Jump to 410
$DD6    $22DF   CALL     $2DF            ; Call subroutine at 2DF
$DD8    $E548   UNKNOWN  $E548           ; Unknown Exxx instruction
$DDA    $6EE8   LD       VE, #E8         ; Load 232 into VE
$DDC    $018B   SYS      $18B            ; System call to 18B
$DDE    $7014   ADD      V0, #14         ; Add 20 to V0
$DE0    $BF14   JP       V0, $F14        ; Jump to V0 + F14
$DE2    $37A9   SE       V7, #A9         ; Skip if V7 == 169
$DE4    $C336   RND      V3, #36         ; V3 = random & 36
$DE6    $CEC4   RND      VE, #C4         ; VE = random & C4
$DE8    $0F14   SYS      $F14            ; System call to F14
$DEA    $2F29   CALL     $F29            ; Call subroutine at F29
$DEC    $BAB6   JP       V0, $AB6        ; Jump to V0 + AB6
$DEE    $A06A   LD       I, $06A         ; Load 06A into I
$DF0    $BEBB   JP       V0, $EBB        ; Jump to V0 + EBB
$DF2    $484C   SNE      V8, #4C         ; Skip if V8 != 76
$DF4    $074B   SYS      $74B            ; System call to 74B
$DF6    $1907   JP       $907            ; Jump to 907
$DF8    $C6C7   RND      V6, #C7         ; V6 = random & C7
$DFA    $C615   RND      V6, #15         ; V6 = random & 15
$DFC    $175C   JP       $75C            ; Jump to 75C
$DFE    $1D63   JP       $D63            ; Jump to D63
$E00    $E9EC   UNKNOWN  $E9EC           ; Unknown Exxx instruction
$E02    $85A2   AND      V5, VA          ; V5 &= VA
$E04    $5B52   UNKNOWN  $5B52           ; Unknown 5xxx instruction
$E06    $B49C   JP       V0, $49C        ; Jump to V0 + 49C
$E08    $FD21   UNKNOWN  FD21            ; Unknown Fxxx instruction
$E0A    $3145   SE       V1, #45         ; Skip if V1 == 69
$E0C    $A29D   LD       I, $29D         ; Load 29D into I
$E0E    $A016   LD       I, $016         ; Load 016 into I
$E10    $993F   UNKNOWN  $993F           ; Unknown 9xxx instruction
$E12    $AA65   LD       I, $A65         ; Load A65 into I
$E14    $1DF0   JP       $DF0            ; Jump to DF0
$E16    $E07A   UNKNOWN  $E07A           ; Unknown Exxx instruction
$E18    $395B   SE       V9, #5B         ; Skip if V9 == 91
$E1A    $0D33   SYS      $D33            ; System call to D33
$E1C    $0CC5   SYS      $CC5            ; System call to CC5
$E1E    $707D   ADD      V0, #7D         ; Add 125 to V0
$E20    $4876   SNE      V8, #76         ; Skip if V8 != 118
$E22    $63A2   LD       V3, #A2         ; Load 162 into V3
$E24    $0CC1   SYS      $CC1            ; System call to CC1
$E26    $9015   UNKNOWN  $9015           ; Unknown 9xxx instruction
$E28    $65DD   LD       V5, #DD         ; Load 221 into V5
$E2A    $4B48   SNE      VB, #48         ; Skip if VB != 72
$E2C    $6442   LD       V4, #42         ; Load 66 into V4
$E2E    $8AB2   AND      VA, VB          ; VA &= VB
$E30    $204F   CALL     $04F            ; Call subroutine at 04F
$E32    $B159   JP       V0, $159        ; Jump to V0 + 159
$E34    $414B   SNE      V1, #4B         ; Skip if V1 != 75
$E36    $8208   UNKNOWN  8208            ; Unknown 8xxx instruction
$E38    $611A   LD       V1, #1A         ; Load 26 into V1
$E3A    $36ED   SE       V6, #ED         ; Skip if V6 == 237
$E3C    $75C6   ADD      V5, #C6         ; Add 198 to V5
$E3E    $C47F   RND      V4, #7F         ; V4 = random & 7F
$E40    $1357   JP       $357            ; Jump to 357
$E42    $ADC1   LD       I, $DC1         ; Load DC1 into I
$E44    $0473   SYS      $473            ; System call to 473
$E46    $D06E   DRW      V0, V6, #E      ; Draw 14-byte sprite at V0, V6
$E48    $D6F6   DRW      V6, VF, #6      ; Draw 6-byte sprite at V6, VF
$E4A    $2F65   CALL     $F65            ; Call subroutine at F65
$E4C    $C69C   RND      V6, #9C         ; V6 = random & 9C
$E4E    $AA86   LD       I, $A86         ; Load A86 into I
$E50    $2560   CALL     $560            ; Call subroutine at 560
$E52    $1E95   JP       $E95            ; Jump to E95
$E54    $DC6A   DRW      VC, V6, #A      ; Draw 10-byte sprite at VC, V6
$E56    $F8EF   UNKNOWN  F8EF            ; Unknown Fxxx instruction
$E58    $F5BF   UNKNOWN  F5BF            ; Unknown Fxxx instruction
$E5A    $8111   OR       V1, V1          ; V1 |= V1
$E5C    $14CE   JP       $4CE            ; Jump to 4CE
$E5E    $0C17   SYS      $C17            ; System call to C17
$E60    $C743   RND      V7, #43         ; V7 = random & 43
$E62    $504A   UNKNOWN  $504A           ; Unknown 5xxx instruction
$E64    $6BD0   LD       VB, #D0         ; Load 208 into VB
$E66    $86B1   OR       V6, VB          ; V6 |= VB
$E68    $69EB   LD       V9, #EB         ; Load 235 into V9
$E6A    $A234   LD       I, $234         ; Load 234 into I
$E6C    $5B81   UNKNOWN  $5B81           ; Unknown 5xxx instruction
$E6E    $BE3B   JP       V0, $E3B        ; Jump to V0 + E3B
$E70    $CE34   RND      VE, #34         ; VE = random & 34
$E72    $F072   UNKNOWN  F072            ; Unknown Fxxx instruction
$E74    $22BD   CALL     $2BD            ; Call subroutine at 2BD
$E76    $1E1D   JP       $E1D            ; Jump to E1D
$E78    $752D   ADD      V5, #2D         ; Add 45 to V5
$E7A    $ECCD   UNKNOWN  $ECCD           ; Unknown Exxx instruction
$E7C    $4A56   SNE      VA, #56         ; Skip if VA != 86
$E7E    $2992   CALL     $992            ; Call subroutine at 992
$E80    $9EEF   UNKNOWN  $9EEF           ; Unknown 9xxx instruction
$E82    $E915   UNKNOWN  $E915           ; Unknown Exxx instruction
$E84    $4F00   SNE      VF, #00         ; Skip if VF != 0
$E86    $C272   RND      V2, #72         ; V2 = random & 72
$E88    $126B   JP       $26B            ; Jump to 26B
$E8A    $0F68   SYS      $F68            ; System call to F68
$E8C    $7AFB   ADD      VA, #FB         ; Add 251 to VA
$E8E    $6C1A   LD       VC, #1A         ; Load 26 into VC
$E90    $796F   ADD      V9, #6F         ; Add 111 to V9
$E92    $5182   UNKNOWN  $5182           ; Unknown 5xxx instruction
$E94    $2781   CALL     $781            ; Call subroutine at 781
$E96    $41E7   SNE      V1, #E7         ; Skip if V1 != 231
$E98    $9171   UNKNOWN  $9171           ; Unknown 9xxx instruction
$E9A    $0E49   SYS      $E49            ; System call to E49
$E9C    $1ACF   JP       $ACF            ; Jump to ACF
$E9E    $5774   UNKNOWN  $5774           ; Unknown 5xxx instruction
$EA0    $E756   UNKNOWN  $E756           ; Unknown Exxx instruction
$EA2    $6F62   LD       VF, #62         ; Load 98 into VF
$EA4    $B4E7   JP       V0, $4E7        ; Jump to V0 + 4E7
$EA6    $7F95   ADD      VF, #95         ; Add 149 to VF
$EA8    $3F0B   SE       VF, #0B         ; Skip if VF == 11
$EAA    $017D   SYS      $17D            ; System call to 17D
$EAC    $AE30   LD       I, $E30         ; Load E30 into I
$EAE    $9F3C   UNKNOWN  $9F3C           ; Unknown 9xxx instruction
$EB0    $24E5   CALL     $4E5            ; Call subroutine at 4E5
$EB2    $6420   LD       V4, #20         ; Load 32 into V4
$EB4    $8685   SUB      V6, V8          ; V6 -= V8, VF = !borrow
$EB6    $DD12   DRW      VD, V1, #2      ; Draw 2-byte sprite at VD, V1
$EB8    $DF84   DRW      VF, V8, #4      ; Draw 4-byte sprite at VF, V8
$EBA    $8EBF   UNKNOWN  8EBF            ; Unknown 8xxx instruction
$EBC    $0F40   SYS      $F40            ; System call to F40
$EBE    $171E   JP       $71E            ; Jump to 71E
$EC0    $9E76   UNKNOWN  $9E76           ; Unknown 9xxx instruction
$EC2    $77AE   ADD      V7, #AE         ; Add 174 to V7
$EC4    $C766   RND      V7, #66         ; V7 = random & 66
$EC6    $A1C9   LD       I, $1C9         ; Load 1C9 into I
$EC8    $7B9F   ADD      VB, #9F         ; Add 159 to VB
$ECA    $8543   XOR      V5, V4          ; V5 ^= V4
$ECC    $3513   SE       V5, #13         ; Skip if V5 == 19
$ECE    $7EF8   ADD      VE, #F8         ; Add 248 to VE
$ED0    $CB41   RND      VB, #41         ; VB = random & 41
$ED2    $7E50   ADD      VE, #50         ; Add 80 to VE
$ED4    $0B8B   SYS      $B8B            ; System call to B8B
$ED6    $66A7   LD       V6, #A7         ; Load 167 into V6
$ED8    $4536   SNE      V5, #36         ; Skip if V5 != 54
$EDA    $15C3   JP       $5C3            ; Jump to 5C3
$EDC    $6AF2   LD       VA, #F2         ; Load 242 into VA
$EDE    $7E1C   ADD      VE, #1C         ; Add 28 to VE
$EE0    $C7AF   RND      V7, #AF         ; V7 = random & AF
$EE2    $7D01   ADD      VD, #01         ; Add 1 to VD
$EE4    $C0E6   RND      V0, #E6         ; V0 = random & E6
$EE6    $2936   CALL     $936            ; Call subroutine at 936
$EE8    $3A84   SE       VA, #84         ; Skip if VA == 132
$EEA    $599A   UNKNOWN  $599A           ; Unknown 5xxx instruction
$EEC    $841D   UNKNOWN  841D            ; Unknown 8xxx instruction
$EEE    $9894   UNKNOWN  $9894           ; Unknown 9xxx instruction
$EF0    $F636   UNKNOWN  F636            ; Unknown Fxxx instruction
$EF2    $71CA   ADD      V1, #CA         ; Add 202 to V1
$EF4    $769C   ADD      V6, #9C         ; Add 156 to V6
$EF6    $79F3   ADD      V9, #F3         ; Add 243 to V9
$EF8    $CE30   RND      VE, #30         ; VE = random & 30
$EFA    $1FA5   JP       $FA5            ; Jump to FA5
$EFC    $86B0   LD       V6, VB          ; V6 = VB
$EFE    $1A6C   JP       $A6C            ; Jump to A6C
$F00    $B01A   JP       V0, $01A        ; Jump to V0 + 01A
$F02    $6CE0   LD       VC, #E0         ; Load 224 into VC
$F04    $9CF5   UNKNOWN  $9CF5           ; Unknown 9xxx instruction
$F06    $655A   LD       V5, #5A         ; Load 90 into V5
$F08    $3B2A   SE       VB, #2A         ; Skip if VB == 42
$F0A    $6D04   LD       VD, #04         ; Load 4 into VD
$F0C    $5AF4   UNKNOWN  $5AF4           ; Unknown 5xxx instruction
$F0E    $771A   ADD      V7, #1A         ; Add 26 to V7
$F10    $53E3   UNKNOWN  $53E3           ; Unknown 5xxx instruction
$F12    $BE4D   JP       V0, $E4D        ; Jump to V0 + E4D
$F14    $E125   UNKNOWN  $E125           ; Unknown Exxx instruction
$F16    $1B4E   JP       $B4E            ; Jump to B4E
$F18    $6BAE   LD       VB, #AE         ; Load 174 into VB
$F1A    $491B   SNE      V9, #1B         ; Skip if V9 != 27
$F1C    $12BD   JP       $2BD            ; Jump to 2BD
$F1E    $4798   SNE      V7, #98         ; Skip if V7 != 152
$F20    $37EF   SE       V7, #EF         ; Skip if V7 == 239
$F22    $5074   UNKNOWN  $5074           ; Unknown 5xxx instruction
$F24    $C11D   RND      V1, #1D         ; V1 = random & 1D
$F26    $E8C2   UNKNOWN  $E8C2           ; Unknown Exxx instruction
$F28    $19DC   JP       $9DC            ; Jump to 9DC
$F2A    $00D1   SYS      $0D1            ; System call to 0D1
$F2C    $288D   CALL     $88D            ; Call subroutine at 88D
$F2E    $2AFC   CALL     $AFC            ; Call subroutine at AFC
$F30    $54ED   UNKNOWN  $54ED           ; Unknown 5xxx instruction
$F32    $BCEB   JP       V0, $CEB        ; Jump to V0 + CEB
$F34    $7914   ADD      V9, #14         ; Add 20 to V9
$F36    $49D7   SNE      V9, #D7         ; Skip if V9 != 215
$F38    $DDDB   DRW      VD, VD, #B      ; Draw 11-byte sprite at VD, VD
$F3A    $A1D4   LD       I, $1D4         ; Load 1D4 into I
$F3C    $0999   SYS      $999            ; System call to 999
$F3E    $7E2E   ADD      VE, #2E         ; Add 46 to VE
$F40    $C69F   RND      V6, #9F         ; V6 = random & 9F
$F42    $A1F6   LD       I, $1F6         ; Load 1F6 into I
$F44    $CCD5   RND      VC, #D5         ; VC = random & D5
$F46    $5CBF   UNKNOWN  $5CBF           ; Unknown 5xxx instruction
$F48    $087F   SYS      $87F            ; System call to 87F
$F4A    $B886   JP       V0, $886        ; Jump to V0 + 886
$F4C    $54A0   SE       V4, VA          ; Skip if V4 == VA
$F4E    $D6B3   DRW      V6, VB, #3      ; Draw 3-byte sprite at V6, VB
$F50    $E67B   UNKNOWN  $E67B           ; Unknown Exxx instruction
$F52    $8500   LD       V5, V0          ; V5 = V0
$F54    $6BDE   LD       VB, #DE         ; Load 222 into VB
$F56    $510A   UNKNOWN  $510A           ; Unknown 5xxx instruction
$F58    $C0C9   RND      V0, #C9         ; V0 = random & C9
$F5A    $2AF2   CALL     $AF2            ; Call subroutine at AF2
$F5C    $26EE   CALL     $6EE            ; Call subroutine at 6EE
$F5E    $9882   UNKNOWN  $9882           ; Unknown 9xxx instruction
$F60    $A263   LD       I, $263         ; Load 263 into I
$F62    $91ED   UNKNOWN  $91ED           ; Unknown 9xxx instruction
$F64    $FC40   UNKNOWN  FC40            ; Unknown Fxxx instruction
$F66    $2FBE   CALL     $FBE            ; Call subroutine at FBE
$F68    $8E3D   UNKNOWN  8E3D            ; Unknown 8xxx instruction
$F6A    $8998   UNKNOWN  8998            ; Unknown 8xxx instruction
$F6C    $EBB5   UNKNOWN  $EBB5           ; Unknown Exxx instruction
$F6E    $23FA   CALL     $3FA            ; Call subroutine at 3FA
$F70    $625D   LD       V2, #5D         ; Load 93 into V2
$F72    $59B9   UNKNOWN  $59B9           ; Unknown 5xxx instruction
$F74    $D72F   DRW      V7, V2, #F      ; Draw 15-byte sprite at V7, V2
$F76    $FB29   LD       F, VB           ; I = sprite address for digit VB
$F78    $9245   UNKNOWN  $9245           ; Unknown 9xxx instruction
$F7A    $FA6E   UNKNOWN  FA6E            ; Unknown Fxxx instruction
$F7C    $0D3D   SYS      $D3D            ; System call to D3D
$F7E    $243D   CALL     $43D            ; Call subroutine at 43D
$F80    $4D51   SNE      VD, #51         ; Skip if VD != 81
$F82    $6D92   LD       VD, #92         ; Load 146 into VD
$F84    $81B9   UNKNOWN  81B9            ; Unknown 8xxx instruction
$F86    $1204   JP       $204            ; Jump to 204
$F88    $E59F   UNKNOWN  $E59F           ; Unknown Exxx instruction
$F8A    $6412   LD       V4, #12         ; Load 18 into V4
$F8C    $D1AD   DRW      V1, VA, #D      ; Draw 13-byte sprite at V1, VA
$F8E    $C8D9   RND      V8, #D9         ; V8 = random & D9
$F90    $28CE   CALL     $8CE            ; Call subroutine at 8CE
$F92    $ED64   UNKNOWN  $ED64           ; Unknown Exxx instruction
$F94    $5A01   UNKNOWN  $5A01           ; Unknown 5xxx instruction
$F96    $41BD   SNE      V1, #BD         ; Skip if V1 != 189
$F98    $44DB   SNE      V4, #DB         ; Skip if V4 != 219
$F9A    $36BE   SE       V6, #BE         ; Skip if V6 == 190
$F9C    $86B1   OR       V6, VB          ; V6 |= VB
$F9E    $618B   LD       V1, #8B         ; Load 139 into V1
$FA0    $68CB   LD       V8, #CB         ; Load 203 into V8
$FA2    $CA64   RND      VA, #64         ; VA = random & 64
$FA4    $4C73   SNE      VC, #73         ; Skip if VC != 115
$FA6    $C0A1   RND      V0, #A1         ; V0 = random & A1
$FA8    $F998   UNKNOWN  F998            ; Unknown Fxxx instruction
$FAA    $CC4F   RND      VC, #4F         ; VC = random & 4F
$FAC    $5A2D   UNKNOWN  $5A2D           ; Unknown 5xxx instruction
$FAE    $0C76   SYS      $C76            ; System call to C76
$FB0    $3758   SE       V7, #58         ; Skip if V7 == 88
$FB2    $AEE4   LD       I, $EE4         ; Load EE4 into I
$FB4    $AFF9   LD       I, $FF9         ; Load FF9 into I
$FB6    $4C48   SNE      VC, #48         ; Skip if VC != 72
$FB8    $9D10   SNE      VD, V1          ; Skip if VD != V1
$FBA    $31EE   SE       V1, #EE         ; Skip if V1 == 238
$FBC    $3D42   SE       VD, #42         ; Skip if VD == 66
$FBE    $EB0B   UNKNOWN  $EB0B           ; Unknown Exxx instruction
$FC0    $C826   RND      V8, #26         ; V8 = random & 26
$FC2    $C8A1   RND      V8, #A1         ; V8 = random & A1
$FC4    $AD31   LD       I, $D31         ; Load D31 into I
$FC6    $057C   SYS      $57C            ; System call to 57C
$FC8    $DF32   DRW      VF, V3, #2      ; Draw 2-byte sprite at VF, V3
$FCA    $2131   CALL     $131            ; Call subroutine at 131
$FCC    $5FE3   UNKNOWN  $5FE3           ; Unknown 5xxx instruction
$FCE    $C752   RND      V7, #52         ; V7 = random & 52
$FD0    $0294   SYS      $294            ; System call to 294
$FD2    $814D   UNKNOWN  814D            ; Unknown 8xxx instruction
$FD4    $1609   JP       $609            ; Jump to 609
$FD6    $3BD5   SE       VB, #D5         ; Skip if VB == 213
$FD8    $C057   RND      V0, #57         ; V0 = random & 57
$FDA    $AA85   LD       I, $A85         ; Load A85 into I
$FDC    $284D   CALL     $84D            ; Call subroutine at 84D
$FDE    $01AD   SYS      $1AD            ; System call to 1AD
$FE0    $81E0   LD       V1, VE          ; V1 = VE
$FE2    $2D82   CALL     $D82            ; Call subroutine at D82
$FE4    $A170   LD       I, $170         ; Load 170 into I
$FE6    $9C01   UNKNOWN  $9C01           ; Unknown 9xxx instruction
$FE8    $8628   UNKNOWN  8628            ; Unknown 8xxx instruction
$FEA    $EC5F   UNKNOWN  $EC5F           ; Unknown Exxx instruction
$FEC    $8C2C   UNKNOWN  8C2C            ; Unknown 8xxx instruction
$FEE    $6A11   LD       VA, #11         ; Load 17 into VA
$FF0    $69A7   LD       V9, #A7         ; Load 167 into V9
$FF2    $0991   SYS      $991            ; System call to 991
$FF4    $F9F3   UNKNOWN  F9F3            ; Unknown Fxxx instruction
$FF6    $5052   UNKNOWN  $5052           ; Unknown 5xxx instruction
$FF8    $A2B6   LD       I, $2B6         ; Load 2B6 into I
$FFA    $CC37   RND      VC, #37         ; VC = random & 37
$FFC    $07AD   SYS      $7AD            ; System call to 7AD
$FFE    $0CDA   SYS      $CDA            ; System call to CDA

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 448 (25.0%)
  LD      : 232 (12.9%)
  JP      : 229 (12.8%)
  RND     : 126 ( 7.0%)
  CALL    : 122 ( 6.8%)
  SNE     : 121 ( 6.8%)
  SE      : 120 ( 6.7%)
  DRW     : 120 ( 6.7%)
  SYS     : 119 ( 6.6%)
  ADD     : 113 ( 6.3%)
  XOR     :   9 ( 0.5%)
  SUB     :   7 ( 0.4%)
  SHL     :   7 ( 0.4%)
  AND     :   6 ( 0.3%)
  SUBN    :   5 ( 0.3%)
  OR      :   5 ( 0.3%)
  SHR     :   3 ( 0.2%)

Memory Operations: 345 (19.3%)
Arithmetic Operations: 145 (8.1%)
