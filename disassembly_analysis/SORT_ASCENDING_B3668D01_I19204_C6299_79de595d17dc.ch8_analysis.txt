
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B3668D01_I19204_C6299_79de595d17dc.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 3668
Instance: 19204
Direction: ascending
Final Array: [0, 2, 7, 45, 51, 125, 175, 232]
Operations: R:0 W:1 C:430 S:81

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 115
Sort Array References:
  $218: LD I, $268 ; Load 268 into I
  $250: LD I, $E58 ; Load E58 into I
  $25A: LD I, $095 ; Load 095 into I
  $26A: LD I, $17F ; Load 17F into I
  $286: LD I, $58E ; Load 58E into I
  $2CC: LD I, $3F1 ; Load 3F1 into I
  $2F6: LD I, $344 ; Load 344 into I
  $2F8: LD I, $DA7 ; Load DA7 into I
  $306: LD I, $FE8 ; Load FE8 into I
  $310: LD I, $684 ; Load 684 into I
  $368: LD I, $0DE ; Load 0DE into I
  $37C: LD I, $B03 ; Load B03 into I
  $37E: LD I, $836 ; Load 836 into I
  $38C: LD I, $724 ; Load 724 into I
  $3C2: LD I, $64C ; Load 64C into I
  $3F4: LD I, $EA0 ; Load EA0 into I
  $42A: LD I, $FC2 ; Load FC2 into I
  $43C: LD I, $1DB ; Load 1DB into I
  $460: LD I, $237 ; Load 237 into I
  $472: LD I, $095 ; Load 095 into I
  $4B0: LD I, $DBC ; Load DBC into I
  $4B4: LD I, $9EE ; Load 9EE into I
  $4F8: LD I, $40C ; Load 40C into I
  $510: LD I, $476 ; Load 476 into I
  $51A: LD I, $455 ; Load 455 into I
  $524: LD I, $F93 ; Load F93 into I
  $54A: LD I, $1D8 ; Load 1D8 into I
  $564: LD I, $71B ; Load 71B into I
  $57C: LD I, $7D9 ; Load 7D9 into I
  $5A8: LD I, $BE4 ; Load BE4 into I
  $5C4: LD I, $B48 ; Load B48 into I
  $5E2: LD I, $05C ; Load 05C into I
  $5F0: LD I, $ED8 ; Load ED8 into I
  $5FA: LD I, $803 ; Load 803 into I
  $622: LD I, $FF0 ; Load FF0 into I
  $62C: LD I, $480 ; Load 480 into I
  $668: LD I, $7FA ; Load 7FA into I
  $678: LD I, $F6A ; Load F6A into I
  $684: LD I, $968 ; Load 968 into I
  $69E: LD I, $A09 ; Load A09 into I
  $6A2: LD I, $8D6 ; Load 8D6 into I
  $6C6: LD I, $8D4 ; Load 8D4 into I
  $6D6: LD I, $155 ; Load 155 into I
  $732: LD I, $F2F ; Load F2F into I
  $738: LD I, $925 ; Load 925 into I
  $764: LD I, $33B ; Load 33B into I
  $76A: LD I, $548 ; Load 548 into I
  $770: LD I, $233 ; Load 233 into I
  $776: LD I, $2AA ; Load 2AA into I
  $784: LD I, $E20 ; Load E20 into I
  $796: LD I, $DE1 ; Load DE1 into I
  $798: LD I, $EA0 ; Load EA0 into I
  $7AC: LD I, $288 ; Load 288 into I
  $7CC: LD I, $5B9 ; Load 5B9 into I
  $7EA: LD I, $9FB ; Load 9FB into I
  $7FE: LD I, $03E ; Load 03E into I
  $850: LD I, $B41 ; Load B41 into I
  $85A: LD I, $147 ; Load 147 into I
  $882: LD I, $2B1 ; Load 2B1 into I
  $884: LD I, $618 ; Load 618 into I
  $88E: LD I, $603 ; Load 603 into I
  $896: LD I, $8FF ; Load 8FF into I
  $89A: LD I, $E91 ; Load E91 into I
  $89C: LD I, $628 ; Load 628 into I
  $8A6: LD I, $251 ; Load 251 into I
  $8BC: LD I, $F0F ; Load F0F into I
  $90E: LD I, $60C ; Load 60C into I
  $91A: LD I, $95D ; Load 95D into I
  $980: LD I, $99E ; Load 99E into I
  $998: LD I, $37A ; Load 37A into I
  $9C2: LD I, $31B ; Load 31B into I
  $9C6: LD I, $ED1 ; Load ED1 into I
  $9D4: LD I, $6AB ; Load 6AB into I
  $9E0: LD I, $635 ; Load 635 into I
  $A28: LD I, $CE2 ; Load CE2 into I
  $A46: LD I, $C93 ; Load C93 into I
  $A7E: LD I, $6C4 ; Load 6C4 into I
  $A84: LD I, $308 ; Load 308 into I
  $AA6: LD I, $9D5 ; Load 9D5 into I
  $AEA: LD I, $ACB ; Load ACB into I
  $AEC: LD I, $EDF ; Load EDF into I
  $AFA: LD I, $2B7 ; Load 2B7 into I
  $B16: LD I, $669 ; Load 669 into I
  $B4E: LD I, $237 ; Load 237 into I
  $B52: LD I, $DF1 ; Load DF1 into I
  $B7E: LD I, $A97 ; Load A97 into I
  $B82: LD I, $A53 ; Load A53 into I
  $B8C: LD I, $54D ; Load 54D into I
  $BF0: LD I, $3B7 ; Load 3B7 into I
  $BF2: LD I, $300 ; Load 300 into I
  $C0E: LD I, $BD8 ; Load BD8 into I
  $C2A: LD I, $8E5 ; Load 8E5 into I
  $C66: LD I, $D07 ; Load D07 into I
  $CFA: LD I, $F9C ; Load F9C into I
  $D38: LD I, $CF2 ; Load CF2 into I
  $D4E: LD I, $627 ; Load 627 into I
  $D8A: LD I, $9CB ; Load 9CB into I
  $DE4: LD I, $DC7 ; Load DC7 into I
  $DE6: LD I, $8C6 ; Load 8C6 into I
  $E3E: LD I, $069 ; Load 069 into I
  $E42: LD I, $3C4 ; Load 3C4 into I
  $E56: LD I, $795 ; Load 795 into I
  $E76: LD I, $AA5 ; Load AA5 into I
  $E8E: LD I, $D5C ; Load D5C into I
  $E92: LD I, $D43 ; Load D43 into I
  $EB0: LD I, $CBF ; Load CBF into I
  $F28: LD I, $13E ; Load 13E into I
  $F32: LD I, $1BD ; Load 1BD into I
  $F36: LD I, $42C ; Load 42C into I
  $F40: LD I, $D5C ; Load D5C into I
  $F4A: LD I, $164 ; Load 164 into I
  $FBE: LD I, $624 ; Load 624 into I
  $FC4: LD I, $E45 ; Load E45 into I
  $FDC: LD I, $6B2 ; Load 6B2 into I
  $FE6: LD I, $844 ; Load 844 into I

CONTROL FLOW ANALYSIS:
Jumps: 202
Calls: 122
Branches: 260
Loops: 113
Loop Structures:
  $3A8 -> $309 (backward jump)
  $3E6 -> $255 (backward jump)
  $3FE -> $2E1 (backward jump)
  $428 -> $1B6 (backward jump)
  $430 -> $086 (backward jump)
  $47A -> $24A (backward jump)
  $4F4 -> $194 (backward jump)
  $52C -> $050 (backward jump)
  $54E -> $0E0 (backward jump)
  $584 -> $1F7 (backward jump)
  $588 -> $185 (backward jump)
  $5AC -> $565 (backward jump)
  $5F4 -> $3F2 (backward jump)
  $626 -> $478 (backward jump)
  $672 -> $572 (backward jump)
  $674 -> $206 (backward jump)
  $686 -> $4F0 (backward jump)
  $6B0 -> $415 (backward jump)
  $726 -> $0B0 (backward jump)
  $77A -> $2FD (backward jump)
  $7D2 -> $3B2 (backward jump)
  $7E2 -> $60B (backward jump)
  $7EE -> $520 (backward jump)
  $7F6 -> $0AE (backward jump)
  $7FA -> $22C (backward jump)
  $82C -> $3B6 (backward jump)
  $84A -> $254 (backward jump)
  $868 -> $72C (backward jump)
  $876 -> $03F (backward jump)
  $890 -> $12B (backward jump)
  $8B8 -> $627 (backward jump)
  $8BE -> $0F4 (backward jump)
  $8DE -> $0C8 (backward jump)
  $8F6 -> $5B7 (backward jump)
  $92C -> $643 (backward jump)
  $944 -> $17C (backward jump)
  $956 -> $592 (backward jump)
  $99A -> $255 (backward jump)
  $9C8 -> $2F2 (backward jump)
  $A0E -> $04B (backward jump)
  $A24 -> $0E3 (backward jump)
  $A2E -> $995 (backward jump)
  $A4E -> $2A8 (backward jump)
  $A6E -> $740 (backward jump)
  $A76 -> $0A5 (backward jump)
  $ADE -> $661 (backward jump)
  $AEE -> $3BE (backward jump)
  $AF8 -> $9D5 (backward jump)
  $B2C -> $2DF (backward jump)
  $B3A -> $A5A (backward jump)
  $B4C -> $386 (backward jump)
  $B5E -> $698 (backward jump)
  $B6C -> $70B (backward jump)
  $B78 -> $125 (backward jump)
  $BAA -> $3DE (backward jump)
  $BEC -> $47C (backward jump)
  $C4A -> $14C (backward jump)
  $C50 -> $A5A (backward jump)
  $C5A -> $00D (backward jump)
  $C5E -> $48A (backward jump)
  $C64 -> $882 (backward jump)
  $C72 -> $608 (backward jump)
  $C84 -> $AB8 (backward jump)
  $C94 -> $3FC (backward jump)
  $CC0 -> $2E1 (backward jump)
  $CC6 -> $05B (backward jump)
  $CDC -> $B36 (backward jump)
  $CF8 -> $862 (backward jump)
  $D00 -> $79C (backward jump)
  $D08 -> $4E4 (backward jump)
  $D18 -> $ACC (backward jump)
  $D22 -> $C73 (backward jump)
  $D2C -> $11B (backward jump)
  $D32 -> $4AE (backward jump)
  $D3A -> $B77 (backward jump)
  $D46 -> $C75 (backward jump)
  $D52 -> $697 (backward jump)
  $D54 -> $489 (backward jump)
  $D58 -> $195 (backward jump)
  $D64 -> $75C (backward jump)
  $D70 -> $3F1 (backward jump)
  $DAC -> $192 (backward jump)
  $E0A -> $5F3 (backward jump)
  $E10 -> $9AE (backward jump)
  $E16 -> $58D (backward jump)
  $E40 -> $18D (backward jump)
  $E4E -> $AF3 (backward jump)
  $E52 -> $544 (backward jump)
  $E68 -> $D30 (backward jump)
  $E7A -> $E3A (backward jump)
  $E7E -> $556 (backward jump)
  $E80 -> $3D0 (backward jump)
  $E8C -> $830 (backward jump)
  $E96 -> $1D2 (backward jump)
  $EB6 -> $720 (backward jump)
  $ED8 -> $304 (backward jump)
  $EEE -> $9A3 (backward jump)
  $F10 -> $6A5 (backward jump)
  $F12 -> $407 (backward jump)
  $F14 -> $DCC (backward jump)
  $F1C -> $1FE (backward jump)
  $F22 -> $5DD (backward jump)
  $F38 -> $AB9 (backward jump)
  $F3C -> $17B (backward jump)
  $F54 -> $E54 (backward jump)
  $F56 -> $ABA (backward jump)
  $F90 -> $38F (backward jump)
  $FA6 -> $1B2 (backward jump)
  $FA8 -> $6B0 (backward jump)
  $FAE -> $630 (backward jump)
  $FC8 -> $2BB (backward jump)
  $FDE -> $81A (backward jump)
  $FF0 -> $4F0 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $CDE1   RND      VD, #E1         ; VD = random & E1
$202    $1F82   JP       $F82            ; Jump to F82
$204    $D0DC   DRW      V0, VD, #C      ; Draw 12-byte sprite at V0, VD
$206    $C068   RND      V0, #68         ; V0 = random & 68
$208    $4DFA   SNE      VD, #FA         ; Skip if VD != 250
$20A    $4F8A   SNE      VF, #8A         ; Skip if VF != 138
$20C    $98A2   UNKNOWN  $98A2           ; Unknown 9xxx instruction
$20E    $17DC   JP       $7DC            ; Jump to 7DC
$210    $3680   SE       V6, #80         ; Skip if V6 == 128
$212    $5EAB   UNKNOWN  $5EAB           ; Unknown 5xxx instruction
$214    $7510   ADD      V5, #10         ; Add 16 to V5
$216    $466B   SNE      V6, #6B         ; Skip if V6 != 107
$218    $A268   LD       I, $268         ; Load 268 into I
$21A    $43E9   SNE      V3, #E9         ; Skip if V3 != 233
$21C    $6A42   LD       VA, #42         ; Load 66 into VA
$21E    $0EDB   SYS      $EDB            ; System call to EDB
$220    $65A4   LD       V5, #A4         ; Load 164 into V5
$222    $FFEA   UNKNOWN  FFEA            ; Unknown Fxxx instruction
$224    $4ADF   SNE      VA, #DF         ; Skip if VA != 223
$226    $6348   LD       V3, #48         ; Load 72 into V3
$228    $ED75   UNKNOWN  $ED75           ; Unknown Exxx instruction
$22A    $1E61   JP       $E61            ; Jump to E61
$22C    $8D85   SUB      VD, V8          ; VD -= V8, VF = !borrow
$22E    $34B9   SE       V4, #B9         ; Skip if V4 == 185
$230    $7273   ADD      V2, #73         ; Add 115 to V2
$232    $FFDB   UNKNOWN  FFDB            ; Unknown Fxxx instruction
$234    $74A5   ADD      V4, #A5         ; Add 165 to V4
$236    $82CB   UNKNOWN  82CB            ; Unknown 8xxx instruction
$238    $2E5B   CALL     $E5B            ; Call subroutine at E5B
$23A    $CA48   RND      VA, #48         ; VA = random & 48
$23C    $62CD   LD       V2, #CD         ; Load 205 into V2
$23E    $E295   UNKNOWN  $E295           ; Unknown Exxx instruction
$240    $240F   CALL     $40F            ; Call subroutine at 40F
$242    $75FA   ADD      V5, #FA         ; Add 250 to V5
$244    $78ED   ADD      V8, #ED         ; Add 237 to V8
$246    $F72E   UNKNOWN  F72E            ; Unknown Fxxx instruction
$248    $D037   DRW      V0, V3, #7      ; Draw 7-byte sprite at V0, V3
$24A    $0DB6   SYS      $DB6            ; System call to DB6
$24C    $C8CD   RND      V8, #CD         ; V8 = random & CD
$24E    $4786   SNE      V7, #86         ; Skip if V7 != 134
$250    $AE58   LD       I, $E58         ; Load E58 into I
$252    $6052   LD       V0, #52         ; Load 82 into V0
$254    $6AE7   LD       VA, #E7         ; Load 231 into VA
$256    $F144   UNKNOWN  F144            ; Unknown Fxxx instruction
$258    $CCED   RND      VC, #ED         ; VC = random & ED
$25A    $A095   LD       I, $095         ; Load 095 into I
$25C    $93AB   UNKNOWN  $93AB           ; Unknown 9xxx instruction
$25E    $255A   CALL     $55A            ; Call subroutine at 55A
$260    $B8D0   JP       V0, $8D0        ; Jump to V0 + 8D0
$262    $1C32   JP       $C32            ; Jump to C32
$264    $2C6B   CALL     $C6B            ; Call subroutine at C6B
$266    $2932   CALL     $932            ; Call subroutine at 932
$268    $6FE0   LD       VF, #E0         ; Load 224 into VF
$26A    $A17F   LD       I, $17F         ; Load 17F into I
$26C    $875B   UNKNOWN  875B            ; Unknown 8xxx instruction
$26E    $720E   ADD      V2, #0E         ; Add 14 to V2
$270    $8AAC   UNKNOWN  8AAC            ; Unknown 8xxx instruction
$272    $B797   JP       V0, $797        ; Jump to V0 + 797
$274    $68A2   LD       V8, #A2         ; Load 162 into V8
$276    $D43D   DRW      V4, V3, #D      ; Draw 13-byte sprite at V4, V3
$278    $DC54   DRW      VC, V5, #4      ; Draw 4-byte sprite at VC, V5
$27A    $194A   JP       $94A            ; Jump to 94A
$27C    $FD5D   UNKNOWN  FD5D            ; Unknown Fxxx instruction
$27E    $89BB   UNKNOWN  89BB            ; Unknown 8xxx instruction
$280    $26B2   CALL     $6B2            ; Call subroutine at 6B2
$282    $23C7   CALL     $3C7            ; Call subroutine at 3C7
$284    $1531   JP       $531            ; Jump to 531
$286    $A58E   LD       I, $58E         ; Load 58E into I
$288    $268A   CALL     $68A            ; Call subroutine at 68A
$28A    $8B10   LD       VB, V1          ; VB = V1
$28C    $6AA7   LD       VA, #A7         ; Load 167 into VA
$28E    $B814   JP       V0, $814        ; Jump to V0 + 814
$290    $EBF4   UNKNOWN  $EBF4           ; Unknown Exxx instruction
$292    $E9EF   UNKNOWN  $E9EF           ; Unknown Exxx instruction
$294    $6F4B   LD       VF, #4B         ; Load 75 into VF
$296    $E235   UNKNOWN  $E235           ; Unknown Exxx instruction
$298    $B2D0   JP       V0, $2D0        ; Jump to V0 + 2D0
$29A    $4F49   SNE      VF, #49         ; Skip if VF != 73
$29C    $CEB8   RND      VE, #B8         ; VE = random & B8
$29E    $DF57   DRW      VF, V5, #7      ; Draw 7-byte sprite at VF, V5
$2A0    $E142   UNKNOWN  $E142           ; Unknown Exxx instruction
$2A2    $E25C   UNKNOWN  $E25C           ; Unknown Exxx instruction
$2A4    $7C94   ADD      VC, #94         ; Add 148 to VC
$2A6    $68C0   LD       V8, #C0         ; Load 192 into V8
$2A8    $44DE   SNE      V4, #DE         ; Skip if V4 != 222
$2AA    $D051   DRW      V0, V5, #1      ; Draw 1-byte sprite at V0, V5
$2AC    $999A   UNKNOWN  $999A           ; Unknown 9xxx instruction
$2AE    $25DC   CALL     $5DC            ; Call subroutine at 5DC
$2B0    $317B   SE       V1, #7B         ; Skip if V1 == 123
$2B2    $04B7   SYS      $4B7            ; System call to 4B7
$2B4    $335F   SE       V3, #5F         ; Skip if V3 == 95
$2B6    $5425   UNKNOWN  $5425           ; Unknown 5xxx instruction
$2B8    $3754   SE       V7, #54         ; Skip if V7 == 84
$2BA    $9312   UNKNOWN  $9312           ; Unknown 9xxx instruction
$2BC    $3F08   SE       VF, #08         ; Skip if VF == 8
$2BE    $312E   SE       V1, #2E         ; Skip if V1 == 46
$2C0    $4CB6   SNE      VC, #B6         ; Skip if VC != 182
$2C2    $5967   UNKNOWN  $5967           ; Unknown 5xxx instruction
$2C4    $EEF5   UNKNOWN  $EEF5           ; Unknown Exxx instruction
$2C6    $F3A5   UNKNOWN  F3A5            ; Unknown Fxxx instruction
$2C8    $0EAD   SYS      $EAD            ; System call to EAD
$2CA    $7F2D   ADD      VF, #2D         ; Add 45 to VF
$2CC    $A3F1   LD       I, $3F1         ; Load 3F1 into I
$2CE    $6D60   LD       VD, #60         ; Load 96 into VD
$2D0    $90D0   SNE      V0, VD          ; Skip if V0 != VD
$2D2    $5BA7   UNKNOWN  $5BA7           ; Unknown 5xxx instruction
$2D4    $DFE9   DRW      VF, VE, #9      ; Draw 9-byte sprite at VF, VE
$2D6    $5007   UNKNOWN  $5007           ; Unknown 5xxx instruction
$2D8    $FA40   UNKNOWN  FA40            ; Unknown Fxxx instruction
$2DA    $6C20   LD       VC, #20         ; Load 32 into VC
$2DC    $DDD0   DRW      VD, VD, #0      ; Draw 0-byte sprite at VD, VD
$2DE    $8251   OR       V2, V5          ; V2 |= V5
$2E0    $1C32   JP       $C32            ; Jump to C32
$2E2    $9338   UNKNOWN  $9338           ; Unknown 9xxx instruction
$2E4    $FE20   UNKNOWN  FE20            ; Unknown Fxxx instruction
$2E6    $291F   CALL     $91F            ; Call subroutine at 91F
$2E8    $5F7B   UNKNOWN  $5F7B           ; Unknown 5xxx instruction
$2EA    $FFD0   UNKNOWN  FFD0            ; Unknown Fxxx instruction
$2EC    $5EE9   UNKNOWN  $5EE9           ; Unknown 5xxx instruction
$2EE    $7CD5   ADD      VC, #D5         ; Add 213 to VC
$2F0    $EE83   UNKNOWN  $EE83           ; Unknown Exxx instruction
$2F2    $7D67   ADD      VD, #67         ; Add 103 to VD
$2F4    $F0B9   UNKNOWN  F0B9            ; Unknown Fxxx instruction
$2F6    $A344   LD       I, $344         ; Load 344 into I
$2F8    $ADA7   LD       I, $DA7         ; Load DA7 into I
$2FA    $D47E   DRW      V4, V7, #E      ; Draw 14-byte sprite at V4, V7
$2FC    $2B27   CALL     $B27            ; Call subroutine at B27
$2FE    $1CDA   JP       $CDA            ; Jump to CDA
$300    $0002   SYS      $002            ; System call to 002
$302    $072D   SYS      $72D            ; System call to 72D
$304    $337D   SE       V3, #7D         ; Skip if V3 == 125
$306    $AFE8   LD       I, $FE8         ; Load FE8 into I
$308    $0CF4   SYS      $CF4            ; System call to CF4
$30A    $7CBA   ADD      VC, #BA         ; Add 186 to VC
$30C    $1E85   JP       $E85            ; Jump to E85
$30E    $D04A   DRW      V0, V4, #A      ; Draw 10-byte sprite at V0, V4
$310    $A684   LD       I, $684         ; Load 684 into I
$312    $C9AE   RND      V9, #AE         ; V9 = random & AE
$314    $7CAA   ADD      VC, #AA         ; Add 170 to VC
$316    $E589   UNKNOWN  $E589           ; Unknown Exxx instruction
$318    $FF15   LD       DT, VF          ; Delay timer = VF
$31A    $0D9A   SYS      $D9A            ; System call to D9A
$31C    $94AC   UNKNOWN  $94AC           ; Unknown 9xxx instruction
$31E    $F54B   UNKNOWN  F54B            ; Unknown Fxxx instruction
$320    $6240   LD       V2, #40         ; Load 64 into V2
$322    $50EE   UNKNOWN  $50EE           ; Unknown 5xxx instruction
$324    $3483   SE       V4, #83         ; Skip if V4 == 131
$326    $D8E7   DRW      V8, VE, #7      ; Draw 7-byte sprite at V8, VE
$328    $7AFB   ADD      VA, #FB         ; Add 251 to VA
$32A    $97AA   UNKNOWN  $97AA           ; Unknown 9xxx instruction
$32C    $ED10   UNKNOWN  $ED10           ; Unknown Exxx instruction
$32E    $2760   CALL     $760            ; Call subroutine at 760
$330    $DE77   DRW      VE, V7, #7      ; Draw 7-byte sprite at VE, V7
$332    $42BD   SNE      V2, #BD         ; Skip if V2 != 189
$334    $5F62   UNKNOWN  $5F62           ; Unknown 5xxx instruction
$336    $D41F   DRW      V4, V1, #F      ; Draw 15-byte sprite at V4, V1
$338    $6E6D   LD       VE, #6D         ; Load 109 into VE
$33A    $BA0A   JP       V0, $A0A        ; Jump to V0 + A0A
$33C    $9202   UNKNOWN  $9202           ; Unknown 9xxx instruction
$33E    $4A91   SNE      VA, #91         ; Skip if VA != 145
$340    $9C42   UNKNOWN  $9C42           ; Unknown 9xxx instruction
$342    $45E7   SNE      V5, #E7         ; Skip if V5 != 231
$344    $7EFF   ADD      VE, #FF         ; Add 255 to VE
$346    $29A1   CALL     $9A1            ; Call subroutine at 9A1
$348    $8EC3   XOR      VE, VC          ; VE ^= VC
$34A    $B49C   JP       V0, $49C        ; Jump to V0 + 49C
$34C    $560B   UNKNOWN  $560B           ; Unknown 5xxx instruction
$34E    $4AA4   SNE      VA, #A4         ; Skip if VA != 164
$350    $4A37   SNE      VA, #37         ; Skip if VA != 55
$352    $6CF4   LD       VC, #F4         ; Load 244 into VC
$354    $1FD5   JP       $FD5            ; Jump to FD5
$356    $7CA1   ADD      VC, #A1         ; Add 161 to VC
$358    $0CD2   SYS      $CD2            ; System call to CD2
$35A    $8078   UNKNOWN  8078            ; Unknown 8xxx instruction
$35C    $BDA7   JP       V0, $DA7        ; Jump to V0 + DA7
$35E    $7A96   ADD      VA, #96         ; Add 150 to VA
$360    $2C9C   CALL     $C9C            ; Call subroutine at C9C
$362    $6946   LD       V9, #46         ; Load 70 into V9
$364    $EA05   UNKNOWN  $EA05           ; Unknown Exxx instruction
$366    $330A   SE       V3, #0A         ; Skip if V3 == 10
$368    $A0DE   LD       I, $0DE         ; Load 0DE into I
$36A    $2DBA   CALL     $DBA            ; Call subroutine at DBA
$36C    $75AE   ADD      V5, #AE         ; Add 174 to V5
$36E    $0162   SYS      $162            ; System call to 162
$370    $66F2   LD       V6, #F2         ; Load 242 into V6
$372    $025C   SYS      $25C            ; System call to 25C
$374    $7728   ADD      V7, #28         ; Add 40 to V7
$376    $62F1   LD       V2, #F1         ; Load 241 into V2
$378    $3792   SE       V7, #92         ; Skip if V7 == 146
$37A    $F5B3   UNKNOWN  F5B3            ; Unknown Fxxx instruction
$37C    $AB03   LD       I, $B03         ; Load B03 into I
$37E    $A836   LD       I, $836         ; Load 836 into I
$380    $5C64   UNKNOWN  $5C64           ; Unknown 5xxx instruction
$382    $C4A3   RND      V4, #A3         ; V4 = random & A3
$384    $5E1B   UNKNOWN  $5E1B           ; Unknown 5xxx instruction
$386    $9FBC   UNKNOWN  $9FBC           ; Unknown 9xxx instruction
$388    $6A43   LD       VA, #43         ; Load 67 into VA
$38A    $3659   SE       V6, #59         ; Skip if V6 == 89
$38C    $A724   LD       I, $724         ; Load 724 into I
$38E    $C821   RND      V8, #21         ; V8 = random & 21
$390    $77B0   ADD      V7, #B0         ; Add 176 to V7
$392    $F88A   UNKNOWN  F88A            ; Unknown Fxxx instruction
$394    $91B5   UNKNOWN  $91B5           ; Unknown 9xxx instruction
$396    $1958   JP       $958            ; Jump to 958
$398    $8B96   SHR      VB              ; VB >>= 1, VF = LSB
$39A    $0002   SYS      $002            ; System call to 002
$39C    $0567   SYS      $567            ; System call to 567
$39E    $707E   ADD      V0, #7E         ; Add 126 to V0
$3A0    $8883   XOR      V8, V8          ; V8 ^= V8
$3A2    $2A44   CALL     $A44            ; Call subroutine at A44
$3A4    $2C23   CALL     $C23            ; Call subroutine at C23
$3A6    $FB73   UNKNOWN  FB73            ; Unknown Fxxx instruction
$3A8    $B309   JP       V0, $309        ; Jump to V0 + 309
$3AA    $9780   SNE      V7, V8          ; Skip if V7 != V8
$3AC    $4A22   SNE      VA, #22         ; Skip if VA != 34
$3AE    $217B   CALL     $17B            ; Call subroutine at 17B
$3B0    $FB39   UNKNOWN  FB39            ; Unknown Fxxx instruction
$3B2    $09E1   SYS      $9E1            ; System call to 9E1
$3B4    $6A80   LD       VA, #80         ; Load 128 into VA
$3B6    $EC0B   UNKNOWN  $EC0B           ; Unknown Exxx instruction
$3B8    $0E46   SYS      $E46            ; System call to E46
$3BA    $D036   DRW      V0, V3, #6      ; Draw 6-byte sprite at V0, V3
$3BC    $84CD   UNKNOWN  84CD            ; Unknown 8xxx instruction
$3BE    $5335   UNKNOWN  $5335           ; Unknown 5xxx instruction
$3C0    $97FE   UNKNOWN  $97FE           ; Unknown 9xxx instruction
$3C2    $A64C   LD       I, $64C         ; Load 64C into I
$3C4    $2D16   CALL     $D16            ; Call subroutine at D16
$3C6    $6E74   LD       VE, #74         ; Load 116 into VE
$3C8    $779F   ADD      V7, #9F         ; Add 159 to V7
$3CA    $6CE5   LD       VC, #E5         ; Load 229 into VC
$3CC    $1934   JP       $934            ; Jump to 934
$3CE    $3966   SE       V9, #66         ; Skip if V9 == 102
$3D0    $F8A8   UNKNOWN  F8A8            ; Unknown Fxxx instruction
$3D2    $97AB   UNKNOWN  $97AB           ; Unknown 9xxx instruction
$3D4    $42E3   SNE      V2, #E3         ; Skip if V2 != 227
$3D6    $F511   UNKNOWN  F511            ; Unknown Fxxx instruction
$3D8    $8CC3   XOR      VC, VC          ; VC ^= VC
$3DA    $3CE1   SE       VC, #E1         ; Skip if VC == 225
$3DC    $492F   SNE      V9, #2F         ; Skip if V9 != 47
$3DE    $F057   UNKNOWN  F057            ; Unknown Fxxx instruction
$3E0    $1731   JP       $731            ; Jump to 731
$3E2    $5EFA   UNKNOWN  $5EFA           ; Unknown 5xxx instruction
$3E4    $7B35   ADD      VB, #35         ; Add 53 to VB
$3E6    $B255   JP       V0, $255        ; Jump to V0 + 255
$3E8    $49BA   SNE      V9, #BA         ; Skip if V9 != 186
$3EA    $E3AE   UNKNOWN  $E3AE           ; Unknown Exxx instruction
$3EC    $E3BB   UNKNOWN  $E3BB           ; Unknown Exxx instruction
$3EE    $2460   CALL     $460            ; Call subroutine at 460
$3F0    $D58D   DRW      V5, V8, #D      ; Draw 13-byte sprite at V5, V8
$3F2    $FAD7   UNKNOWN  FAD7            ; Unknown Fxxx instruction
$3F4    $AEA0   LD       I, $EA0         ; Load EA0 into I
$3F6    $42E1   SNE      V2, #E1         ; Skip if V2 != 225
$3F8    $40E2   SNE      V0, #E2         ; Skip if V0 != 226
$3FA    $5817   UNKNOWN  $5817           ; Unknown 5xxx instruction
$3FC    $89CA   UNKNOWN  89CA            ; Unknown 8xxx instruction
$3FE    $12E1   JP       $2E1            ; Jump to 2E1
$400    $8DD2   AND      VD, VD          ; VD &= VD
$402    $C0AC   RND      V0, #AC         ; V0 = random & AC
$404    $0C7D   SYS      $C7D            ; System call to C7D
$406    $BDCD   JP       V0, $DCD        ; Jump to V0 + DCD
$408    $CCE8   RND      VC, #E8         ; VC = random & E8
$40A    $C0E3   RND      V0, #E3         ; V0 = random & E3
$40C    $683D   LD       V8, #3D         ; Load 61 into V8
$40E    $5FFC   UNKNOWN  $5FFC           ; Unknown 5xxx instruction
$410    $9817   UNKNOWN  $9817           ; Unknown 9xxx instruction
$412    $6DA7   LD       VD, #A7         ; Load 167 into VD
$414    $2B0B   CALL     $B0B            ; Call subroutine at B0B
$416    $384F   SE       V8, #4F         ; Skip if V8 == 79
$418    $791B   ADD      V9, #1B         ; Add 27 to V9
$41A    $8848   UNKNOWN  8848            ; Unknown 8xxx instruction
$41C    $9771   UNKNOWN  $9771           ; Unknown 9xxx instruction
$41E    $22DC   CALL     $2DC            ; Call subroutine at 2DC
$420    $F677   UNKNOWN  F677            ; Unknown Fxxx instruction
$422    $CA6C   RND      VA, #6C         ; VA = random & 6C
$424    $E155   UNKNOWN  $E155           ; Unknown Exxx instruction
$426    $2C1A   CALL     $C1A            ; Call subroutine at C1A
$428    $B1B6   JP       V0, $1B6        ; Jump to V0 + 1B6
$42A    $AFC2   LD       I, $FC2         ; Load FC2 into I
$42C    $2B1D   CALL     $B1D            ; Call subroutine at B1D
$42E    $7590   ADD      V5, #90         ; Add 144 to V5
$430    $1086   JP       $086            ; Jump to 086
$432    $3245   SE       V2, #45         ; Skip if V2 == 69
$434    $DE13   DRW      VE, V1, #3      ; Draw 3-byte sprite at VE, V1
$436    $56D1   UNKNOWN  $56D1           ; Unknown 5xxx instruction
$438    $30C0   SE       V0, #C0         ; Skip if V0 == 192
$43A    $73CC   ADD      V3, #CC         ; Add 204 to V3
$43C    $A1DB   LD       I, $1DB         ; Load 1DB into I
$43E    $48B4   SNE      V8, #B4         ; Skip if V8 != 180
$440    $F9B9   UNKNOWN  F9B9            ; Unknown Fxxx instruction
$442    $9082   UNKNOWN  $9082           ; Unknown 9xxx instruction
$444    $9E1C   UNKNOWN  $9E1C           ; Unknown 9xxx instruction
$446    $D57C   DRW      V5, V7, #C      ; Draw 12-byte sprite at V5, V7
$448    $43B6   SNE      V3, #B6         ; Skip if V3 != 182
$44A    $53C2   UNKNOWN  $53C2           ; Unknown 5xxx instruction
$44C    $0799   SYS      $799            ; System call to 799
$44E    $414A   SNE      V1, #4A         ; Skip if V1 != 74
$450    $733A   ADD      V3, #3A         ; Add 58 to V3
$452    $B7AF   JP       V0, $7AF        ; Jump to V0 + 7AF
$454    $9067   UNKNOWN  $9067           ; Unknown 9xxx instruction
$456    $2EB0   CALL     $EB0            ; Call subroutine at EB0
$458    $51D4   UNKNOWN  $51D4           ; Unknown 5xxx instruction
$45A    $79EB   ADD      V9, #EB         ; Add 235 to V9
$45C    $67C5   LD       V7, #C5         ; Load 197 into V7
$45E    $8355   SUB      V3, V5          ; V3 -= V5, VF = !borrow
$460    $A237   LD       I, $237         ; Load 237 into I
$462    $08AE   SYS      $8AE            ; System call to 8AE
$464    $074F   SYS      $74F            ; System call to 74F
$466    $E1A0   UNKNOWN  $E1A0           ; Unknown Exxx instruction
$468    $DD06   DRW      VD, V0, #6      ; Draw 6-byte sprite at VD, V0
$46A    $F9C0   UNKNOWN  F9C0            ; Unknown Fxxx instruction
$46C    $E9CD   UNKNOWN  $E9CD           ; Unknown Exxx instruction
$46E    $DD36   DRW      VD, V3, #6      ; Draw 6-byte sprite at VD, V3
$470    $6287   LD       V2, #87         ; Load 135 into V2
$472    $A095   LD       I, $095         ; Load 095 into I
$474    $3BB3   SE       VB, #B3         ; Skip if VB == 179
$476    $FEAE   UNKNOWN  FEAE            ; Unknown Fxxx instruction
$478    $CAE3   RND      VA, #E3         ; VA = random & E3
$47A    $B24A   JP       V0, $24A        ; Jump to V0 + 24A
$47C    $CAAF   RND      VA, #AF         ; VA = random & AF
$47E    $FF54   UNKNOWN  FF54            ; Unknown Fxxx instruction
$480    $B493   JP       V0, $493        ; Jump to V0 + 493
$482    $95A2   UNKNOWN  $95A2           ; Unknown 9xxx instruction
$484    $8F48   UNKNOWN  8F48            ; Unknown 8xxx instruction
$486    $7C7A   ADD      VC, #7A         ; Add 122 to VC
$488    $D7B7   DRW      V7, VB, #7      ; Draw 7-byte sprite at V7, VB
$48A    $3D1E   SE       VD, #1E         ; Skip if VD == 30
$48C    $3EDF   SE       VE, #DF         ; Skip if VE == 223
$48E    $08F8   SYS      $8F8            ; System call to 8F8
$490    $E29D   UNKNOWN  $E29D           ; Unknown Exxx instruction
$492    $ED8C   UNKNOWN  $ED8C           ; Unknown Exxx instruction
$494    $CD8E   RND      VD, #8E         ; VD = random & 8E
$496    $B822   JP       V0, $822        ; Jump to V0 + 822
$498    $080F   SYS      $80F            ; System call to 80F
$49A    $D308   DRW      V3, V0, #8      ; Draw 8-byte sprite at V3, V0
$49C    $43AB   SNE      V3, #AB         ; Skip if V3 != 171
$49E    $0C7A   SYS      $C7A            ; System call to C7A
$4A0    $D0B4   DRW      V0, VB, #4      ; Draw 4-byte sprite at V0, VB
$4A2    $2959   CALL     $959            ; Call subroutine at 959
$4A4    $F579   UNKNOWN  F579            ; Unknown Fxxx instruction
$4A6    $387B   SE       V8, #7B         ; Skip if V8 == 123
$4A8    $51F3   UNKNOWN  $51F3           ; Unknown 5xxx instruction
$4AA    $4FCA   SNE      VF, #CA         ; Skip if VF != 202
$4AC    $F9FB   UNKNOWN  F9FB            ; Unknown Fxxx instruction
$4AE    $8305   SUB      V3, V0          ; V3 -= V0, VF = !borrow
$4B0    $ADBC   LD       I, $DBC         ; Load DBC into I
$4B2    $3A7D   SE       VA, #7D         ; Skip if VA == 125
$4B4    $A9EE   LD       I, $9EE         ; Load 9EE into I
$4B6    $E1A5   UNKNOWN  $E1A5           ; Unknown Exxx instruction
$4B8    $5CEF   UNKNOWN  $5CEF           ; Unknown 5xxx instruction
$4BA    $68D7   LD       V8, #D7         ; Load 215 into V8
$4BC    $EFCA   UNKNOWN  $EFCA           ; Unknown Exxx instruction
$4BE    $CFD7   RND      VF, #D7         ; VF = random & D7
$4C0    $6198   LD       V1, #98         ; Load 152 into V1
$4C2    $CBB7   RND      VB, #B7         ; VB = random & B7
$4C4    $C423   RND      V4, #23         ; V4 = random & 23
$4C6    $D5EB   DRW      V5, VE, #B      ; Draw 11-byte sprite at V5, VE
$4C8    $B8E6   JP       V0, $8E6        ; Jump to V0 + 8E6
$4CA    $CDE2   RND      VD, #E2         ; VD = random & E2
$4CC    $4802   SNE      V8, #02         ; Skip if V8 != 2
$4CE    $78F6   ADD      V8, #F6         ; Add 246 to V8
$4D0    $DDCD   DRW      VD, VC, #D      ; Draw 13-byte sprite at VD, VC
$4D2    $E60E   UNKNOWN  $E60E           ; Unknown Exxx instruction
$4D4    $90BE   UNKNOWN  $90BE           ; Unknown 9xxx instruction
$4D6    $C543   RND      V5, #43         ; V5 = random & 43
$4D8    $F649   UNKNOWN  F649            ; Unknown Fxxx instruction
$4DA    $B974   JP       V0, $974        ; Jump to V0 + 974
$4DC    $437F   SNE      V3, #7F         ; Skip if V3 != 127
$4DE    $D4D5   DRW      V4, VD, #5      ; Draw 5-byte sprite at V4, VD
$4E0    $D0B3   DRW      V0, VB, #3      ; Draw 3-byte sprite at V0, VB
$4E2    $4063   SNE      V0, #63         ; Skip if V0 != 99
$4E4    $028E   SYS      $28E            ; System call to 28E
$4E6    $8F1B   UNKNOWN  8F1B            ; Unknown 8xxx instruction
$4E8    $9D4D   UNKNOWN  $9D4D           ; Unknown 9xxx instruction
$4EA    $EEC0   UNKNOWN  $EEC0           ; Unknown Exxx instruction
$4EC    $DA4A   DRW      VA, V4, #A      ; Draw 10-byte sprite at VA, V4
$4EE    $6298   LD       V2, #98         ; Load 152 into V2
$4F0    $04B0   SYS      $4B0            ; System call to 4B0
$4F2    $2C94   CALL     $C94            ; Call subroutine at C94
$4F4    $B194   JP       V0, $194        ; Jump to V0 + 194
$4F6    $9B43   UNKNOWN  $9B43           ; Unknown 9xxx instruction
$4F8    $A40C   LD       I, $40C         ; Load 40C into I
$4FA    $1D5A   JP       $D5A            ; Jump to D5A
$4FC    $C507   RND      V5, #07         ; V5 = random & 07
$4FE    $B53E   JP       V0, $53E        ; Jump to V0 + 53E
$500    $D9EF   DRW      V9, VE, #F      ; Draw 15-byte sprite at V9, VE
$502    $C09D   RND      V0, #9D         ; V0 = random & 9D
$504    $53F7   UNKNOWN  $53F7           ; Unknown 5xxx instruction
$506    $2A5E   CALL     $A5E            ; Call subroutine at A5E
$508    $F17B   UNKNOWN  F17B            ; Unknown Fxxx instruction
$50A    $4D44   SNE      VD, #44         ; Skip if VD != 68
$50C    $837A   UNKNOWN  837A            ; Unknown 8xxx instruction
$50E    $FD1B   UNKNOWN  FD1B            ; Unknown Fxxx instruction
$510    $A476   LD       I, $476         ; Load 476 into I
$512    $674A   LD       V7, #4A         ; Load 74 into V7
$514    $3FD1   SE       VF, #D1         ; Skip if VF == 209
$516    $BFC9   JP       V0, $FC9        ; Jump to V0 + FC9
$518    $1BF2   JP       $BF2            ; Jump to BF2
$51A    $A455   LD       I, $455         ; Load 455 into I
$51C    $EA53   UNKNOWN  $EA53           ; Unknown Exxx instruction
$51E    $752B   ADD      V5, #2B         ; Add 43 to V5
$520    $4808   SNE      V8, #08         ; Skip if V8 != 8
$522    $F145   UNKNOWN  F145            ; Unknown Fxxx instruction
$524    $AF93   LD       I, $F93         ; Load F93 into I
$526    $F9E1   UNKNOWN  F9E1            ; Unknown Fxxx instruction
$528    $5B9E   UNKNOWN  $5B9E           ; Unknown 5xxx instruction
$52A    $350C   SE       V5, #0C         ; Skip if V5 == 12
$52C    $B050   JP       V0, $050        ; Jump to V0 + 050
$52E    $FD6D   UNKNOWN  FD6D            ; Unknown Fxxx instruction
$530    $818D   UNKNOWN  818D            ; Unknown 8xxx instruction
$532    $D760   DRW      V7, V6, #0      ; Draw 0-byte sprite at V7, V6
$534    $E06D   UNKNOWN  $E06D           ; Unknown Exxx instruction
$536    $87CD   UNKNOWN  87CD            ; Unknown 8xxx instruction
$538    $DBB1   DRW      VB, VB, #1      ; Draw 1-byte sprite at VB, VB
$53A    $0765   SYS      $765            ; System call to 765
$53C    $53F0   SE       V3, VF          ; Skip if V3 == VF
$53E    $89E5   SUB      V9, VE          ; V9 -= VE, VF = !borrow
$540    $5D8E   UNKNOWN  $5D8E           ; Unknown 5xxx instruction
$542    $1992   JP       $992            ; Jump to 992
$544    $225E   CALL     $25E            ; Call subroutine at 25E
$546    $90D3   UNKNOWN  $90D3           ; Unknown 9xxx instruction
$548    $50B7   UNKNOWN  $50B7           ; Unknown 5xxx instruction
$54A    $A1D8   LD       I, $1D8         ; Load 1D8 into I
$54C    $92A7   UNKNOWN  $92A7           ; Unknown 9xxx instruction
$54E    $10E0   JP       $0E0            ; Jump to 0E0
$550    $E382   UNKNOWN  $E382           ; Unknown Exxx instruction
$552    $BBE5   JP       V0, $BE5        ; Jump to V0 + BE5
$554    $4A95   SNE      VA, #95         ; Skip if VA != 149
$556    $3C9C   SE       VC, #9C         ; Skip if VC == 156
$558    $E729   UNKNOWN  $E729           ; Unknown Exxx instruction
$55A    $BD7E   JP       V0, $D7E        ; Jump to V0 + D7E
$55C    $082C   SYS      $82C            ; System call to 82C
$55E    $5CF5   UNKNOWN  $5CF5           ; Unknown 5xxx instruction
$560    $72FB   ADD      V2, #FB         ; Add 251 to V2
$562    $7F53   ADD      VF, #53         ; Add 83 to VF
$564    $A71B   LD       I, $71B         ; Load 71B into I
$566    $8656   SHR      V6              ; V6 >>= 1, VF = LSB
$568    $E8AE   UNKNOWN  $E8AE           ; Unknown Exxx instruction
$56A    $6EC9   LD       VE, #C9         ; Load 201 into VE
$56C    $39FF   SE       V9, #FF         ; Skip if V9 == 255
$56E    $DE26   DRW      VE, V2, #6      ; Draw 6-byte sprite at VE, V2
$570    $5569   UNKNOWN  $5569           ; Unknown 5xxx instruction
$572    $EF80   UNKNOWN  $EF80           ; Unknown Exxx instruction
$574    $B7F8   JP       V0, $7F8        ; Jump to V0 + 7F8
$576    $6923   LD       V9, #23         ; Load 35 into V9
$578    $2DD4   CALL     $DD4            ; Call subroutine at DD4
$57A    $331A   SE       V3, #1A         ; Skip if V3 == 26
$57C    $A7D9   LD       I, $7D9         ; Load 7D9 into I
$57E    $3BE8   SE       VB, #E8         ; Skip if VB == 232
$580    $82D1   OR       V2, VD          ; V2 |= VD
$582    $60A0   LD       V0, #A0         ; Load 160 into V0
$584    $11F7   JP       $1F7            ; Jump to 1F7
$586    $861C   UNKNOWN  861C            ; Unknown 8xxx instruction
$588    $1185   JP       $185            ; Jump to 185
$58A    $F3E5   UNKNOWN  F3E5            ; Unknown Fxxx instruction
$58C    $3144   SE       V1, #44         ; Skip if V1 == 68
$58E    $94A5   UNKNOWN  $94A5           ; Unknown 9xxx instruction
$590    $E262   UNKNOWN  $E262           ; Unknown Exxx instruction
$592    $8ABD   UNKNOWN  8ABD            ; Unknown 8xxx instruction
$594    $6C62   LD       VC, #62         ; Load 98 into VC
$596    $F1CC   UNKNOWN  F1CC            ; Unknown Fxxx instruction
$598    $8CEA   UNKNOWN  8CEA            ; Unknown 8xxx instruction
$59A    $0311   SYS      $311            ; System call to 311
$59C    $DD29   DRW      VD, V2, #9      ; Draw 9-byte sprite at VD, V2
$59E    $4CF5   SNE      VC, #F5         ; Skip if VC != 245
$5A0    $F0F8   UNKNOWN  F0F8            ; Unknown Fxxx instruction
$5A2    $4EF3   SNE      VE, #F3         ; Skip if VE != 243
$5A4    $EE26   UNKNOWN  $EE26           ; Unknown Exxx instruction
$5A6    $F1F5   UNKNOWN  F1F5            ; Unknown Fxxx instruction
$5A8    $ABE4   LD       I, $BE4         ; Load BE4 into I
$5AA    $474D   SNE      V7, #4D         ; Skip if V7 != 77
$5AC    $B565   JP       V0, $565        ; Jump to V0 + 565
$5AE    $2159   CALL     $159            ; Call subroutine at 159
$5B0    $9B41   UNKNOWN  $9B41           ; Unknown 9xxx instruction
$5B2    $48FA   SNE      V8, #FA         ; Skip if V8 != 250
$5B4    $4C70   SNE      VC, #70         ; Skip if VC != 112
$5B6    $6803   LD       V8, #03         ; Load 3 into V8
$5B8    $67B8   LD       V7, #B8         ; Load 184 into V7
$5BA    $311E   SE       V1, #1E         ; Skip if V1 == 30
$5BC    $2065   CALL     $065            ; Call subroutine at 065
$5BE    $794A   ADD      V9, #4A         ; Add 74 to V9
$5C0    $3AD7   SE       VA, #D7         ; Skip if VA == 215
$5C2    $6E8C   LD       VE, #8C         ; Load 140 into VE
$5C4    $AB48   LD       I, $B48         ; Load B48 into I
$5C6    $E964   UNKNOWN  $E964           ; Unknown Exxx instruction
$5C8    $7A7E   ADD      VA, #7E         ; Add 126 to VA
$5CA    $6634   LD       V6, #34         ; Load 52 into V6
$5CC    $60BC   LD       V0, #BC         ; Load 188 into V0
$5CE    $57A2   UNKNOWN  $57A2           ; Unknown 5xxx instruction
$5D0    $835B   UNKNOWN  835B            ; Unknown 8xxx instruction
$5D2    $C7A2   RND      V7, #A2         ; V7 = random & A2
$5D4    $5D22   UNKNOWN  $5D22           ; Unknown 5xxx instruction
$5D6    $7EEA   ADD      VE, #EA         ; Add 234 to VE
$5D8    $1F26   JP       $F26            ; Jump to F26
$5DA    $205D   CALL     $05D            ; Call subroutine at 05D
$5DC    $E25F   UNKNOWN  $E25F           ; Unknown Exxx instruction
$5DE    $DED4   DRW      VE, VD, #4      ; Draw 4-byte sprite at VE, VD
$5E0    $CC89   RND      VC, #89         ; VC = random & 89
$5E2    $A05C   LD       I, $05C         ; Load 05C into I
$5E4    $B633   JP       V0, $633        ; Jump to V0 + 633
$5E6    $85F7   SUBN     V5, VF          ; V5 = VF - V5, VF = !borrow
$5E8    $64BA   LD       V4, #BA         ; Load 186 into V4
$5EA    $3F7B   SE       VF, #7B         ; Skip if VF == 123
$5EC    $ED6B   UNKNOWN  $ED6B           ; Unknown Exxx instruction
$5EE    $CBB0   RND      VB, #B0         ; VB = random & B0
$5F0    $AED8   LD       I, $ED8         ; Load ED8 into I
$5F2    $4657   SNE      V6, #57         ; Skip if V6 != 87
$5F4    $13F2   JP       $3F2            ; Jump to 3F2
$5F6    $BC00   JP       V0, $C00        ; Jump to V0 + C00
$5F8    $4A76   SNE      VA, #76         ; Skip if VA != 118
$5FA    $A803   LD       I, $803         ; Load 803 into I
$5FC    $0D5C   SYS      $D5C            ; System call to D5C
$5FE    $7055   ADD      V0, #55         ; Add 85 to V0
$600    $9C31   UNKNOWN  $9C31           ; Unknown 9xxx instruction
$602    $7BB2   ADD      VB, #B2         ; Add 178 to VB
$604    $3127   SE       V1, #27         ; Skip if V1 == 39
$606    $F7E1   UNKNOWN  F7E1            ; Unknown Fxxx instruction
$608    $255F   CALL     $55F            ; Call subroutine at 55F
$60A    $D474   DRW      V4, V7, #4      ; Draw 4-byte sprite at V4, V7
$60C    $7E46   ADD      VE, #46         ; Add 70 to VE
$60E    $3C6F   SE       VC, #6F         ; Skip if VC == 111
$610    $3324   SE       V3, #24         ; Skip if V3 == 36
$612    $2F75   CALL     $F75            ; Call subroutine at F75
$614    $C63F   RND      V6, #3F         ; V6 = random & 3F
$616    $B96E   JP       V0, $96E        ; Jump to V0 + 96E
$618    $194A   JP       $94A            ; Jump to 94A
$61A    $238E   CALL     $38E            ; Call subroutine at 38E
$61C    $6C98   LD       VC, #98         ; Load 152 into VC
$61E    $DFCD   DRW      VF, VC, #D      ; Draw 13-byte sprite at VF, VC
$620    $76D8   ADD      V6, #D8         ; Add 216 to V6
$622    $AFF0   LD       I, $FF0         ; Load FF0 into I
$624    $0275   SYS      $275            ; System call to 275
$626    $B478   JP       V0, $478        ; Jump to V0 + 478
$628    $9E23   UNKNOWN  $9E23           ; Unknown 9xxx instruction
$62A    $1C96   JP       $C96            ; Jump to C96
$62C    $A480   LD       I, $480         ; Load 480 into I
$62E    $4087   SNE      V0, #87         ; Skip if V0 != 135
$630    $46A5   SNE      V6, #A5         ; Skip if V6 != 165
$632    $86A0   LD       V6, VA          ; V6 = VA
$634    $2C97   CALL     $C97            ; Call subroutine at C97
$636    $CB71   RND      VB, #71         ; VB = random & 71
$638    $D2A6   DRW      V2, VA, #6      ; Draw 6-byte sprite at V2, VA
$63A    $E7E8   UNKNOWN  $E7E8           ; Unknown Exxx instruction
$63C    $EF4D   UNKNOWN  $EF4D           ; Unknown Exxx instruction
$63E    $9F33   UNKNOWN  $9F33           ; Unknown 9xxx instruction
$640    $8B62   AND      VB, V6          ; VB &= V6
$642    $2FD9   CALL     $FD9            ; Call subroutine at FD9
$644    $4B0A   SNE      VB, #0A         ; Skip if VB != 10
$646    $9341   UNKNOWN  $9341           ; Unknown 9xxx instruction
$648    $4135   SNE      V1, #35         ; Skip if V1 != 53
$64A    $0D49   SYS      $D49            ; System call to D49
$64C    $70D9   ADD      V0, #D9         ; Add 217 to V0
$64E    $569C   UNKNOWN  $569C           ; Unknown 5xxx instruction
$650    $97BE   UNKNOWN  $97BE           ; Unknown 9xxx instruction
$652    $E711   UNKNOWN  $E711           ; Unknown Exxx instruction
$654    $BA6E   JP       V0, $A6E        ; Jump to V0 + A6E
$656    $1E4A   JP       $E4A            ; Jump to E4A
$658    $C1ED   RND      V1, #ED         ; V1 = random & ED
$65A    $7274   ADD      V2, #74         ; Add 116 to V2
$65C    $46D6   SNE      V6, #D6         ; Skip if V6 != 214
$65E    $24E4   CALL     $4E4            ; Call subroutine at 4E4
$660    $2E80   CALL     $E80            ; Call subroutine at E80
$662    $1C86   JP       $C86            ; Jump to C86
$664    $0291   SYS      $291            ; System call to 291
$666    $C3EC   RND      V3, #EC         ; V3 = random & EC
$668    $A7FA   LD       I, $7FA         ; Load 7FA into I
$66A    $6D92   LD       VD, #92         ; Load 146 into VD
$66C    $C704   RND      V7, #04         ; V7 = random & 04
$66E    $5EF3   UNKNOWN  $5EF3           ; Unknown 5xxx instruction
$670    $4AB8   SNE      VA, #B8         ; Skip if VA != 184
$672    $1572   JP       $572            ; Jump to 572
$674    $B206   JP       V0, $206        ; Jump to V0 + 206
$676    $21BE   CALL     $1BE            ; Call subroutine at 1BE
$678    $AF6A   LD       I, $F6A         ; Load F6A into I
$67A    $F257   UNKNOWN  F257            ; Unknown Fxxx instruction
$67C    $1C16   JP       $C16            ; Jump to C16
$67E    $6432   LD       V4, #32         ; Load 50 into V4
$680    $FD59   UNKNOWN  FD59            ; Unknown Fxxx instruction
$682    $9ACB   UNKNOWN  $9ACB           ; Unknown 9xxx instruction
$684    $A968   LD       I, $968         ; Load 968 into I
$686    $14F0   JP       $4F0            ; Jump to 4F0
$688    $2024   CALL     $024            ; Call subroutine at 024
$68A    $7D40   ADD      VD, #40         ; Add 64 to VD
$68C    $2AAD   CALL     $AAD            ; Call subroutine at AAD
$68E    $C2FA   RND      V2, #FA         ; V2 = random & FA
$690    $62A2   LD       V2, #A2         ; Load 162 into V2
$692    $9F98   UNKNOWN  $9F98           ; Unknown 9xxx instruction
$694    $0820   SYS      $820            ; System call to 820
$696    $DB4D   DRW      VB, V4, #D      ; Draw 13-byte sprite at VB, V4
$698    $08DD   SYS      $8DD            ; System call to 8DD
$69A    $848D   UNKNOWN  848D            ; Unknown 8xxx instruction
$69C    $075D   SYS      $75D            ; System call to 75D
$69E    $AA09   LD       I, $A09         ; Load A09 into I
$6A0    $60F4   LD       V0, #F4         ; Load 244 into V0
$6A2    $A8D6   LD       I, $8D6         ; Load 8D6 into I
$6A4    $5491   UNKNOWN  $5491           ; Unknown 5xxx instruction
$6A6    $7E42   ADD      VE, #42         ; Add 66 to VE
$6A8    $2FBB   CALL     $FBB            ; Call subroutine at FBB
$6AA    $5C3A   UNKNOWN  $5C3A           ; Unknown 5xxx instruction
$6AC    $2084   CALL     $084            ; Call subroutine at 084
$6AE    $985B   UNKNOWN  $985B           ; Unknown 9xxx instruction
$6B0    $B415   JP       V0, $415        ; Jump to V0 + 415
$6B2    $C304   RND      V3, #04         ; V3 = random & 04
$6B4    $1CB1   JP       $CB1            ; Jump to CB1
$6B6    $8BB8   UNKNOWN  8BB8            ; Unknown 8xxx instruction
$6B8    $5100   SE       V1, V0          ; Skip if V1 == V0
$6BA    $73FA   ADD      V3, #FA         ; Add 250 to V3
$6BC    $EAC3   UNKNOWN  $EAC3           ; Unknown Exxx instruction
$6BE    $9266   UNKNOWN  $9266           ; Unknown 9xxx instruction
$6C0    $C267   RND      V2, #67         ; V2 = random & 67
$6C2    $C343   RND      V3, #43         ; V3 = random & 43
$6C4    $6FAD   LD       VF, #AD         ; Load 173 into VF
$6C6    $A8D4   LD       I, $8D4         ; Load 8D4 into I
$6C8    $9919   UNKNOWN  $9919           ; Unknown 9xxx instruction
$6CA    $825C   UNKNOWN  825C            ; Unknown 8xxx instruction
$6CC    $2E7D   CALL     $E7D            ; Call subroutine at E7D
$6CE    $69E1   LD       V9, #E1         ; Load 225 into V9
$6D0    $B885   JP       V0, $885        ; Jump to V0 + 885
$6D2    $7C1A   ADD      VC, #1A         ; Add 26 to VC
$6D4    $D9FD   DRW      V9, VF, #D      ; Draw 13-byte sprite at V9, VF
$6D6    $A155   LD       I, $155         ; Load 155 into I
$6D8    $FBA2   UNKNOWN  FBA2            ; Unknown Fxxx instruction
$6DA    $1D0F   JP       $D0F            ; Jump to D0F
$6DC    $54F7   UNKNOWN  $54F7           ; Unknown 5xxx instruction
$6DE    $433C   SNE      V3, #3C         ; Skip if V3 != 60
$6E0    $C542   RND      V5, #42         ; V5 = random & 42
$6E2    $CBD5   RND      VB, #D5         ; VB = random & D5
$6E4    $2ECC   CALL     $ECC            ; Call subroutine at ECC
$6E6    $2DFC   CALL     $DFC            ; Call subroutine at DFC
$6E8    $0699   SYS      $699            ; System call to 699
$6EA    $2CD2   CALL     $CD2            ; Call subroutine at CD2
$6EC    $FB10   UNKNOWN  FB10            ; Unknown Fxxx instruction
$6EE    $2225   CALL     $225            ; Call subroutine at 225
$6F0    $0E29   SYS      $E29            ; System call to E29
$6F2    $57DF   UNKNOWN  $57DF           ; Unknown 5xxx instruction
$6F4    $477D   SNE      V7, #7D         ; Skip if V7 != 125
$6F6    $3667   SE       V6, #67         ; Skip if V6 == 103
$6F8    $D1B9   DRW      V1, VB, #9      ; Draw 9-byte sprite at V1, VB
$6FA    $88B3   XOR      V8, VB          ; V8 ^= VB
$6FC    $887A   UNKNOWN  887A            ; Unknown 8xxx instruction
$6FE    $2E60   CALL     $E60            ; Call subroutine at E60
$700    $CC25   RND      VC, #25         ; VC = random & 25
$702    $3470   SE       V4, #70         ; Skip if V4 == 112
$704    $2722   CALL     $722            ; Call subroutine at 722
$706    $F194   UNKNOWN  F194            ; Unknown Fxxx instruction
$708    $7570   ADD      V5, #70         ; Add 112 to V5
$70A    $D0E9   DRW      V0, VE, #9      ; Draw 9-byte sprite at V0, VE
$70C    $6881   LD       V8, #81         ; Load 129 into V8
$70E    $FA6F   UNKNOWN  FA6F            ; Unknown Fxxx instruction
$710    $45E3   SNE      V5, #E3         ; Skip if V5 != 227
$712    $4454   SNE      V4, #54         ; Skip if V4 != 84
$714    $4DAE   SNE      VD, #AE         ; Skip if VD != 174
$716    $882B   UNKNOWN  882B            ; Unknown 8xxx instruction
$718    $4CB3   SNE      VC, #B3         ; Skip if VC != 179
$71A    $38DA   SE       V8, #DA         ; Skip if V8 == 218
$71C    $1CD0   JP       $CD0            ; Jump to CD0
$71E    $2826   CALL     $826            ; Call subroutine at 826
$720    $26B4   CALL     $6B4            ; Call subroutine at 6B4
$722    $3A0D   SE       VA, #0D         ; Skip if VA == 13
$724    $715B   ADD      V1, #5B         ; Add 91 to V1
$726    $B0B0   JP       V0, $0B0        ; Jump to V0 + 0B0
$728    $33DE   SE       V3, #DE         ; Skip if V3 == 222
$72A    $503C   UNKNOWN  $503C           ; Unknown 5xxx instruction
$72C    $BE88   JP       V0, $E88        ; Jump to V0 + E88
$72E    $C23E   RND      V2, #3E         ; V2 = random & 3E
$730    $41FD   SNE      V1, #FD         ; Skip if V1 != 253
$732    $AF2F   LD       I, $F2F         ; Load F2F into I
$734    $7CBC   ADD      VC, #BC         ; Add 188 to VC
$736    $5857   UNKNOWN  $5857           ; Unknown 5xxx instruction
$738    $A925   LD       I, $925         ; Load 925 into I
$73A    $C832   RND      V8, #32         ; V8 = random & 32
$73C    $8657   SUBN     V6, V5          ; V6 = V5 - V6, VF = !borrow
$73E    $6FC2   LD       VF, #C2         ; Load 194 into VF
$740    $3220   SE       V2, #20         ; Skip if V2 == 32
$742    $C770   RND      V7, #70         ; V7 = random & 70
$744    $2B84   CALL     $B84            ; Call subroutine at B84
$746    $89FA   UNKNOWN  89FA            ; Unknown 8xxx instruction
$748    $1D4E   JP       $D4E            ; Jump to D4E
$74A    $B7D0   JP       V0, $7D0        ; Jump to V0 + 7D0
$74C    $7957   ADD      V9, #57         ; Add 87 to V9
$74E    $9424   UNKNOWN  $9424           ; Unknown 9xxx instruction
$750    $8BBB   UNKNOWN  8BBB            ; Unknown 8xxx instruction
$752    $EEBC   UNKNOWN  $EEBC           ; Unknown Exxx instruction
$754    $C121   RND      V1, #21         ; V1 = random & 21
$756    $1D53   JP       $D53            ; Jump to D53
$758    $9668   UNKNOWN  $9668           ; Unknown 9xxx instruction
$75A    $5F95   UNKNOWN  $5F95           ; Unknown 5xxx instruction
$75C    $E4E9   UNKNOWN  $E4E9           ; Unknown Exxx instruction
$75E    $817C   UNKNOWN  817C            ; Unknown 8xxx instruction
$760    $E447   UNKNOWN  $E447           ; Unknown Exxx instruction
$762    $9034   UNKNOWN  $9034           ; Unknown 9xxx instruction
$764    $A33B   LD       I, $33B         ; Load 33B into I
$766    $DFD5   DRW      VF, VD, #5      ; Draw 5-byte sprite at VF, VD
$768    $7529   ADD      V5, #29         ; Add 41 to V5
$76A    $A548   LD       I, $548         ; Load 548 into I
$76C    $1E00   JP       $E00            ; Jump to E00
$76E    $8A3B   UNKNOWN  8A3B            ; Unknown 8xxx instruction
$770    $A233   LD       I, $233         ; Load 233 into I
$772    $247F   CALL     $47F            ; Call subroutine at 47F
$774    $FD0E   UNKNOWN  FD0E            ; Unknown Fxxx instruction
$776    $A2AA   LD       I, $2AA         ; Load 2AA into I
$778    $5AA5   UNKNOWN  $5AA5           ; Unknown 5xxx instruction
$77A    $12FD   JP       $2FD            ; Jump to 2FD
$77C    $B858   JP       V0, $858        ; Jump to V0 + 858
$77E    $E63C   UNKNOWN  $E63C           ; Unknown Exxx instruction
$780    $6817   LD       V8, #17         ; Load 23 into V8
$782    $D6E7   DRW      V6, VE, #7      ; Draw 7-byte sprite at V6, VE
$784    $AE20   LD       I, $E20         ; Load E20 into I
$786    $0E0E   SYS      $E0E            ; System call to E0E
$788    $E759   UNKNOWN  $E759           ; Unknown Exxx instruction
$78A    $1ADC   JP       $ADC            ; Jump to ADC
$78C    $D3F8   DRW      V3, VF, #8      ; Draw 8-byte sprite at V3, VF
$78E    $672D   LD       V7, #2D         ; Load 45 into V7
$790    $50BA   UNKNOWN  $50BA           ; Unknown 5xxx instruction
$792    $3949   SE       V9, #49         ; Skip if V9 == 73
$794    $0EBD   SYS      $EBD            ; System call to EBD
$796    $ADE1   LD       I, $DE1         ; Load DE1 into I
$798    $AEA0   LD       I, $EA0         ; Load EA0 into I
$79A    $4C44   SNE      VC, #44         ; Skip if VC != 68
$79C    $2E73   CALL     $E73            ; Call subroutine at E73
$79E    $9EF2   UNKNOWN  $9EF2           ; Unknown 9xxx instruction
$7A0    $04D2   SYS      $4D2            ; System call to 4D2
$7A2    $7CC3   ADD      VC, #C3         ; Add 195 to VC
$7A4    $59A0   SE       V9, VA          ; Skip if V9 == VA
$7A6    $295E   CALL     $95E            ; Call subroutine at 95E
$7A8    $6D89   LD       VD, #89         ; Load 137 into VD
$7AA    $7355   ADD      V3, #55         ; Add 85 to V3
$7AC    $A288   LD       I, $288         ; Load 288 into I
$7AE    $6B1C   LD       VB, #1C         ; Load 28 into VB
$7B0    $7907   ADD      V9, #07         ; Add 7 to V9
$7B2    $0DF6   SYS      $DF6            ; System call to DF6
$7B4    $7479   ADD      V4, #79         ; Add 121 to V4
$7B6    $2CD3   CALL     $CD3            ; Call subroutine at CD3
$7B8    $969D   UNKNOWN  $969D           ; Unknown 9xxx instruction
$7BA    $D2FE   DRW      V2, VF, #E      ; Draw 14-byte sprite at V2, VF
$7BC    $FAAD   UNKNOWN  FAAD            ; Unknown Fxxx instruction
$7BE    $D7FC   DRW      V7, VF, #C      ; Draw 12-byte sprite at V7, VF
$7C0    $0FC9   SYS      $FC9            ; System call to FC9
$7C2    $30EA   SE       V0, #EA         ; Skip if V0 == 234
$7C4    $4944   SNE      V9, #44         ; Skip if V9 != 68
$7C6    $6192   LD       V1, #92         ; Load 146 into V1
$7C8    $0D48   SYS      $D48            ; System call to D48
$7CA    $450A   SNE      V5, #0A         ; Skip if V5 != 10
$7CC    $A5B9   LD       I, $5B9         ; Load 5B9 into I
$7CE    $FFB6   UNKNOWN  FFB6            ; Unknown Fxxx instruction
$7D0    $19BA   JP       $9BA            ; Jump to 9BA
$7D2    $B3B2   JP       V0, $3B2        ; Jump to V0 + 3B2
$7D4    $32DC   SE       V2, #DC         ; Skip if V2 == 220
$7D6    $F08F   UNKNOWN  F08F            ; Unknown Fxxx instruction
$7D8    $FE1F   UNKNOWN  FE1F            ; Unknown Fxxx instruction
$7DA    $E936   UNKNOWN  $E936           ; Unknown Exxx instruction
$7DC    $0234   SYS      $234            ; System call to 234
$7DE    $56AF   UNKNOWN  $56AF           ; Unknown 5xxx instruction
$7E0    $688E   LD       V8, #8E         ; Load 142 into V8
$7E2    $160B   JP       $60B            ; Jump to 60B
$7E4    $3009   SE       V0, #09         ; Skip if V0 == 9
$7E6    $9AB4   UNKNOWN  $9AB4           ; Unknown 9xxx instruction
$7E8    $F60F   UNKNOWN  F60F            ; Unknown Fxxx instruction
$7EA    $A9FB   LD       I, $9FB         ; Load 9FB into I
$7EC    $51A5   UNKNOWN  $51A5           ; Unknown 5xxx instruction
$7EE    $B520   JP       V0, $520        ; Jump to V0 + 520
$7F0    $4B5D   SNE      VB, #5D         ; Skip if VB != 93
$7F2    $3DA8   SE       VD, #A8         ; Skip if VD == 168
$7F4    $7048   ADD      V0, #48         ; Add 72 to V0
$7F6    $10AE   JP       $0AE            ; Jump to 0AE
$7F8    $4C8F   SNE      VC, #8F         ; Skip if VC != 143
$7FA    $122C   JP       $22C            ; Jump to 22C
$7FC    $3C5E   SE       VC, #5E         ; Skip if VC == 94
$7FE    $A03E   LD       I, $03E         ; Load 03E into I
$800    $081C   SYS      $81C            ; System call to 81C
$802    $5B82   UNKNOWN  $5B82           ; Unknown 5xxx instruction
$804    $0A5B   SYS      $A5B            ; System call to A5B
$806    $C198   RND      V1, #98         ; V1 = random & 98
$808    $3E32   SE       VE, #32         ; Skip if VE == 50
$80A    $B8C4   JP       V0, $8C4        ; Jump to V0 + 8C4
$80C    $34A8   SE       V4, #A8         ; Skip if V4 == 168
$80E    $DAAE   DRW      VA, VA, #E      ; Draw 14-byte sprite at VA, VA
$810    $652B   LD       V5, #2B         ; Load 43 into V5
$812    $4735   SNE      V7, #35         ; Skip if V7 != 53
$814    $6B35   LD       VB, #35         ; Load 53 into VB
$816    $0110   SYS      $110            ; System call to 110
$818    $5CDC   UNKNOWN  $5CDC           ; Unknown 5xxx instruction
$81A    $0022   SYS      $022            ; System call to 022
$81C    $E8F9   UNKNOWN  $E8F9           ; Unknown Exxx instruction
$81E    $6A6D   LD       VA, #6D         ; Load 109 into VA
$820    $4599   SNE      V5, #99         ; Skip if V5 != 153
$822    $5A18   UNKNOWN  $5A18           ; Unknown 5xxx instruction
$824    $DA3F   DRW      VA, V3, #F      ; Draw 15-byte sprite at VA, V3
$826    $6B2E   LD       VB, #2E         ; Load 46 into VB
$828    $B99D   JP       V0, $99D        ; Jump to V0 + 99D
$82A    $9DF6   UNKNOWN  $9DF6           ; Unknown 9xxx instruction
$82C    $B3B6   JP       V0, $3B6        ; Jump to V0 + 3B6
$82E    $F55C   UNKNOWN  F55C            ; Unknown Fxxx instruction
$830    $9882   UNKNOWN  $9882           ; Unknown 9xxx instruction
$832    $517D   UNKNOWN  $517D           ; Unknown 5xxx instruction
$834    $21CF   CALL     $1CF            ; Call subroutine at 1CF
$836    $8D5D   UNKNOWN  8D5D            ; Unknown 8xxx instruction
$838    $6A7F   LD       VA, #7F         ; Load 127 into VA
$83A    $D914   DRW      V9, V1, #4      ; Draw 4-byte sprite at V9, V1
$83C    $F58C   UNKNOWN  F58C            ; Unknown Fxxx instruction
$83E    $F372   UNKNOWN  F372            ; Unknown Fxxx instruction
$840    $43E0   SNE      V3, #E0         ; Skip if V3 != 224
$842    $4E1A   SNE      VE, #1A         ; Skip if VE != 26
$844    $2E8F   CALL     $E8F            ; Call subroutine at E8F
$846    $BD1F   JP       V0, $D1F        ; Jump to V0 + D1F
$848    $0E1A   SYS      $E1A            ; System call to E1A
$84A    $B254   JP       V0, $254        ; Jump to V0 + 254
$84C    $E776   UNKNOWN  $E776           ; Unknown Exxx instruction
$84E    $BC71   JP       V0, $C71        ; Jump to V0 + C71
$850    $AB41   LD       I, $B41         ; Load B41 into I
$852    $26D5   CALL     $6D5            ; Call subroutine at 6D5
$854    $5E7E   UNKNOWN  $5E7E           ; Unknown 5xxx instruction
$856    $D13F   DRW      V1, V3, #F      ; Draw 15-byte sprite at V1, V3
$858    $D9DB   DRW      V9, VD, #B      ; Draw 11-byte sprite at V9, VD
$85A    $A147   LD       I, $147         ; Load 147 into I
$85C    $93AB   UNKNOWN  $93AB           ; Unknown 9xxx instruction
$85E    $67A9   LD       V7, #A9         ; Load 169 into V7
$860    $5A5F   UNKNOWN  $5A5F           ; Unknown 5xxx instruction
$862    $EEAD   UNKNOWN  $EEAD           ; Unknown Exxx instruction
$864    $E86D   UNKNOWN  $E86D           ; Unknown Exxx instruction
$866    $4E47   SNE      VE, #47         ; Skip if VE != 71
$868    $B72C   JP       V0, $72C        ; Jump to V0 + 72C
$86A    $4563   SNE      V5, #63         ; Skip if V5 != 99
$86C    $60C3   LD       V0, #C3         ; Load 195 into V0
$86E    $C916   RND      V9, #16         ; V9 = random & 16
$870    $DA82   DRW      VA, V8, #2      ; Draw 2-byte sprite at VA, V8
$872    $6D1D   LD       VD, #1D         ; Load 29 into VD
$874    $0EFA   SYS      $EFA            ; System call to EFA
$876    $B03F   JP       V0, $03F        ; Jump to V0 + 03F
$878    $2E68   CALL     $E68            ; Call subroutine at E68
$87A    $F975   UNKNOWN  F975            ; Unknown Fxxx instruction
$87C    $D742   DRW      V7, V4, #2      ; Draw 2-byte sprite at V7, V4
$87E    $6180   LD       V1, #80         ; Load 128 into V1
$880    $DF93   DRW      VF, V9, #3      ; Draw 3-byte sprite at VF, V9
$882    $A2B1   LD       I, $2B1         ; Load 2B1 into I
$884    $A618   LD       I, $618         ; Load 618 into I
$886    $387B   SE       V8, #7B         ; Skip if V8 == 123
$888    $24E3   CALL     $4E3            ; Call subroutine at 4E3
$88A    $3314   SE       V3, #14         ; Skip if V3 == 20
$88C    $2847   CALL     $847            ; Call subroutine at 847
$88E    $A603   LD       I, $603         ; Load 603 into I
$890    $112B   JP       $12B            ; Jump to 12B
$892    $EE92   UNKNOWN  $EE92           ; Unknown Exxx instruction
$894    $6ABB   LD       VA, #BB         ; Load 187 into VA
$896    $A8FF   LD       I, $8FF         ; Load 8FF into I
$898    $55F3   UNKNOWN  $55F3           ; Unknown 5xxx instruction
$89A    $AE91   LD       I, $E91         ; Load E91 into I
$89C    $A628   LD       I, $628         ; Load 628 into I
$89E    $4358   SNE      V3, #58         ; Skip if V3 != 88
$8A0    $E6B2   UNKNOWN  $E6B2           ; Unknown Exxx instruction
$8A2    $6C5B   LD       VC, #5B         ; Load 91 into VC
$8A4    $4A26   SNE      VA, #26         ; Skip if VA != 38
$8A6    $A251   LD       I, $251         ; Load 251 into I
$8A8    $0F96   SYS      $F96            ; System call to F96
$8AA    $E678   UNKNOWN  $E678           ; Unknown Exxx instruction
$8AC    $CA54   RND      VA, #54         ; VA = random & 54
$8AE    $9E21   UNKNOWN  $9E21           ; Unknown 9xxx instruction
$8B0    $5256   UNKNOWN  $5256           ; Unknown 5xxx instruction
$8B2    $7A55   ADD      VA, #55         ; Add 85 to VA
$8B4    $8119   UNKNOWN  8119            ; Unknown 8xxx instruction
$8B6    $32D4   SE       V2, #D4         ; Skip if V2 == 212
$8B8    $1627   JP       $627            ; Jump to 627
$8BA    $45D4   SNE      V5, #D4         ; Skip if V5 != 212
$8BC    $AF0F   LD       I, $F0F         ; Load F0F into I
$8BE    $B0F4   JP       V0, $0F4        ; Jump to V0 + 0F4
$8C0    $CCE2   RND      VC, #E2         ; VC = random & E2
$8C2    $084C   SYS      $84C            ; System call to 84C
$8C4    $6DAD   LD       VD, #AD         ; Load 173 into VD
$8C6    $7343   ADD      V3, #43         ; Add 67 to V3
$8C8    $9B64   UNKNOWN  $9B64           ; Unknown 9xxx instruction
$8CA    $6DDD   LD       VD, #DD         ; Load 221 into VD
$8CC    $446D   SNE      V4, #6D         ; Skip if V4 != 109
$8CE    $CE9B   RND      VE, #9B         ; VE = random & 9B
$8D0    $0768   SYS      $768            ; System call to 768
$8D2    $4758   SNE      V7, #58         ; Skip if V7 != 88
$8D4    $C1AE   RND      V1, #AE         ; V1 = random & AE
$8D6    $D33C   DRW      V3, V3, #C      ; Draw 12-byte sprite at V3, V3
$8D8    $4240   SNE      V2, #40         ; Skip if V2 != 64
$8DA    $2BEE   CALL     $BEE            ; Call subroutine at BEE
$8DC    $E468   UNKNOWN  $E468           ; Unknown Exxx instruction
$8DE    $B0C8   JP       V0, $0C8        ; Jump to V0 + 0C8
$8E0    $4C8B   SNE      VC, #8B         ; Skip if VC != 139
$8E2    $0943   SYS      $943            ; System call to 943
$8E4    $7EBD   ADD      VE, #BD         ; Add 189 to VE
$8E6    $5CCC   UNKNOWN  $5CCC           ; Unknown 5xxx instruction
$8E8    $26CC   CALL     $6CC            ; Call subroutine at 6CC
$8EA    $EF34   UNKNOWN  $EF34           ; Unknown Exxx instruction
$8EC    $98C0   SNE      V8, VC          ; Skip if V8 != VC
$8EE    $5F63   UNKNOWN  $5F63           ; Unknown 5xxx instruction
$8F0    $DA49   DRW      VA, V4, #9      ; Draw 9-byte sprite at VA, V4
$8F2    $5770   SE       V7, V7          ; Skip if V7 == V7
$8F4    $322B   SE       V2, #2B         ; Skip if V2 == 43
$8F6    $B5B7   JP       V0, $5B7        ; Jump to V0 + 5B7
$8F8    $40E7   SNE      V0, #E7         ; Skip if V0 != 231
$8FA    $586D   UNKNOWN  $586D           ; Unknown 5xxx instruction
$8FC    $6CF3   LD       VC, #F3         ; Load 243 into VC
$8FE    $FD15   LD       DT, VD          ; Delay timer = VD
$900    $71BD   ADD      V1, #BD         ; Add 189 to V1
$902    $F25E   UNKNOWN  F25E            ; Unknown Fxxx instruction
$904    $BD03   JP       V0, $D03        ; Jump to V0 + D03
$906    $26CC   CALL     $6CC            ; Call subroutine at 6CC
$908    $9B1F   UNKNOWN  $9B1F           ; Unknown 9xxx instruction
$90A    $3024   SE       V0, #24         ; Skip if V0 == 36
$90C    $1EEB   JP       $EEB            ; Jump to EEB
$90E    $A60C   LD       I, $60C         ; Load 60C into I
$910    $7EEE   ADD      VE, #EE         ; Add 238 to VE
$912    $824C   UNKNOWN  824C            ; Unknown 8xxx instruction
$914    $1B4E   JP       $B4E            ; Jump to B4E
$916    $3F0C   SE       VF, #0C         ; Skip if VF == 12
$918    $7823   ADD      V8, #23         ; Add 35 to V8
$91A    $A95D   LD       I, $95D         ; Load 95D into I
$91C    $26D8   CALL     $6D8            ; Call subroutine at 6D8
$91E    $F6E3   UNKNOWN  F6E3            ; Unknown Fxxx instruction
$920    $55FA   UNKNOWN  $55FA           ; Unknown 5xxx instruction
$922    $9C98   UNKNOWN  $9C98           ; Unknown 9xxx instruction
$924    $5255   UNKNOWN  $5255           ; Unknown 5xxx instruction
$926    $195A   JP       $95A            ; Jump to 95A
$928    $D9AC   DRW      V9, VA, #C      ; Draw 12-byte sprite at V9, VA
$92A    $61A9   LD       V1, #A9         ; Load 169 into V1
$92C    $B643   JP       V0, $643        ; Jump to V0 + 643
$92E    $D8A2   DRW      V8, VA, #2      ; Draw 2-byte sprite at V8, VA
$930    $7D7D   ADD      VD, #7D         ; Add 125 to VD
$932    $352D   SE       V5, #2D         ; Skip if V5 == 45
$934    $C50A   RND      V5, #0A         ; V5 = random & 0A
$936    $DB35   DRW      VB, V3, #5      ; Draw 5-byte sprite at VB, V3
$938    $DC75   DRW      VC, V7, #5      ; Draw 5-byte sprite at VC, V7
$93A    $D0B9   DRW      V0, VB, #9      ; Draw 9-byte sprite at V0, VB
$93C    $C692   RND      V6, #92         ; V6 = random & 92
$93E    $24C1   CALL     $4C1            ; Call subroutine at 4C1
$940    $C42F   RND      V4, #2F         ; V4 = random & 2F
$942    $5026   UNKNOWN  $5026           ; Unknown 5xxx instruction
$944    $117C   JP       $17C            ; Jump to 17C
$946    $46B8   SNE      V6, #B8         ; Skip if V6 != 184
$948    $2FEC   CALL     $FEC            ; Call subroutine at FEC
$94A    $25C6   CALL     $5C6            ; Call subroutine at 5C6
$94C    $8599   UNKNOWN  8599            ; Unknown 8xxx instruction
$94E    $646F   LD       V4, #6F         ; Load 111 into V4
$950    $74D3   ADD      V4, #D3         ; Add 211 to V4
$952    $DCEA   DRW      VC, VE, #A      ; Draw 10-byte sprite at VC, VE
$954    $D0C0   DRW      V0, VC, #0      ; Draw 0-byte sprite at V0, VC
$956    $B592   JP       V0, $592        ; Jump to V0 + 592
$958    $D666   DRW      V6, V6, #6      ; Draw 6-byte sprite at V6, V6
$95A    $4919   SNE      V9, #19         ; Skip if V9 != 25
$95C    $69FC   LD       V9, #FC         ; Load 252 into V9
$95E    $C1D1   RND      V1, #D1         ; V1 = random & D1
$960    $2A96   CALL     $A96            ; Call subroutine at A96
$962    $3B8A   SE       VB, #8A         ; Skip if VB == 138
$964    $FD0C   UNKNOWN  FD0C            ; Unknown Fxxx instruction
$966    $2F8B   CALL     $F8B            ; Call subroutine at F8B
$968    $94CD   UNKNOWN  $94CD           ; Unknown 9xxx instruction
$96A    $D74A   DRW      V7, V4, #A      ; Draw 10-byte sprite at V7, V4
$96C    $C9F9   RND      V9, #F9         ; V9 = random & F9
$96E    $79D7   ADD      V9, #D7         ; Add 215 to V9
$970    $DA33   DRW      VA, V3, #3      ; Draw 3-byte sprite at VA, V3
$972    $786B   ADD      V8, #6B         ; Add 107 to V8
$974    $BF74   JP       V0, $F74        ; Jump to V0 + F74
$976    $6469   LD       V4, #69         ; Load 105 into V4
$978    $FDD2   UNKNOWN  FDD2            ; Unknown Fxxx instruction
$97A    $731F   ADD      V3, #1F         ; Add 31 to V3
$97C    $2EC2   CALL     $EC2            ; Call subroutine at EC2
$97E    $1BE5   JP       $BE5            ; Jump to BE5
$980    $A99E   LD       I, $99E         ; Load 99E into I
$982    $74CF   ADD      V4, #CF         ; Add 207 to V4
$984    $23BF   CALL     $3BF            ; Call subroutine at 3BF
$986    $735E   ADD      V3, #5E         ; Add 94 to V3
$988    $EB15   UNKNOWN  $EB15           ; Unknown Exxx instruction
$98A    $937D   UNKNOWN  $937D           ; Unknown 9xxx instruction
$98C    $966E   UNKNOWN  $966E           ; Unknown 9xxx instruction
$98E    $E08A   UNKNOWN  $E08A           ; Unknown Exxx instruction
$990    $80AA   UNKNOWN  80AA            ; Unknown 8xxx instruction
$992    $EB71   UNKNOWN  $EB71           ; Unknown Exxx instruction
$994    $BACC   JP       V0, $ACC        ; Jump to V0 + ACC
$996    $D0FE   DRW      V0, VF, #E      ; Draw 14-byte sprite at V0, VF
$998    $A37A   LD       I, $37A         ; Load 37A into I
$99A    $B255   JP       V0, $255        ; Jump to V0 + 255
$99C    $D1B5   DRW      V1, VB, #5      ; Draw 5-byte sprite at V1, VB
$99E    $BD23   JP       V0, $D23        ; Jump to V0 + D23
$9A0    $2DC2   CALL     $DC2            ; Call subroutine at DC2
$9A2    $C0C5   RND      V0, #C5         ; V0 = random & C5
$9A4    $4423   SNE      V4, #23         ; Skip if V4 != 35
$9A6    $BEC3   JP       V0, $EC3        ; Jump to V0 + EC3
$9A8    $5839   UNKNOWN  $5839           ; Unknown 5xxx instruction
$9AA    $6907   LD       V9, #07         ; Load 7 into V9
$9AC    $5465   UNKNOWN  $5465           ; Unknown 5xxx instruction
$9AE    $1B6E   JP       $B6E            ; Jump to B6E
$9B0    $9993   UNKNOWN  $9993           ; Unknown 9xxx instruction
$9B2    $45A5   SNE      V5, #A5         ; Skip if V5 != 165
$9B4    $D778   DRW      V7, V7, #8      ; Draw 8-byte sprite at V7, V7
$9B6    $35D6   SE       V5, #D6         ; Skip if V5 == 214
$9B8    $919A   UNKNOWN  $919A           ; Unknown 9xxx instruction
$9BA    $D55A   DRW      V5, V5, #A      ; Draw 10-byte sprite at V5, V5
$9BC    $1BF1   JP       $BF1            ; Jump to BF1
$9BE    $57FC   UNKNOWN  $57FC           ; Unknown 5xxx instruction
$9C0    $D292   DRW      V2, V9, #2      ; Draw 2-byte sprite at V2, V9
$9C2    $A31B   LD       I, $31B         ; Load 31B into I
$9C4    $F0DE   UNKNOWN  F0DE            ; Unknown Fxxx instruction
$9C6    $AED1   LD       I, $ED1         ; Load ED1 into I
$9C8    $B2F2   JP       V0, $2F2        ; Jump to V0 + 2F2
$9CA    $2805   CALL     $805            ; Call subroutine at 805
$9CC    $68D8   LD       V8, #D8         ; Load 216 into V8
$9CE    $F0F1   UNKNOWN  F0F1            ; Unknown Fxxx instruction
$9D0    $3C5C   SE       VC, #5C         ; Skip if VC == 92
$9D2    $BFC5   JP       V0, $FC5        ; Jump to V0 + FC5
$9D4    $A6AB   LD       I, $6AB         ; Load 6AB into I
$9D6    $3634   SE       V6, #34         ; Skip if V6 == 52
$9D8    $1CA4   JP       $CA4            ; Jump to CA4
$9DA    $43FC   SNE      V3, #FC         ; Skip if V3 != 252
$9DC    $9EA3   UNKNOWN  $9EA3           ; Unknown 9xxx instruction
$9DE    $D459   DRW      V4, V5, #9      ; Draw 9-byte sprite at V4, V5
$9E0    $A635   LD       I, $635         ; Load 635 into I
$9E2    $6D71   LD       VD, #71         ; Load 113 into VD
$9E4    $6302   LD       V3, #02         ; Load 2 into V3
$9E6    $50C4   UNKNOWN  $50C4           ; Unknown 5xxx instruction
$9E8    $1F3E   JP       $F3E            ; Jump to F3E
$9EA    $536B   UNKNOWN  $536B           ; Unknown 5xxx instruction
$9EC    $FF9D   UNKNOWN  FF9D            ; Unknown Fxxx instruction
$9EE    $3798   SE       V7, #98         ; Skip if V7 == 152
$9F0    $0274   SYS      $274            ; System call to 274
$9F2    $8EC0   LD       VE, VC          ; VE = VC
$9F4    $26C4   CALL     $6C4            ; Call subroutine at 6C4
$9F6    $C23B   RND      V2, #3B         ; V2 = random & 3B
$9F8    $943B   UNKNOWN  $943B           ; Unknown 9xxx instruction
$9FA    $C284   RND      V2, #84         ; V2 = random & 84
$9FC    $3FA5   SE       VF, #A5         ; Skip if VF == 165
$9FE    $379B   SE       V7, #9B         ; Skip if V7 == 155
$A00    $D357   DRW      V3, V5, #7      ; Draw 7-byte sprite at V3, V5
$A02    $DD3D   DRW      VD, V3, #D      ; Draw 13-byte sprite at VD, V3
$A04    $9F60   SNE      VF, V6          ; Skip if VF != V6
$A06    $6A53   LD       VA, #53         ; Load 83 into VA
$A08    $C0EE   RND      V0, #EE         ; V0 = random & EE
$A0A    $5274   UNKNOWN  $5274           ; Unknown 5xxx instruction
$A0C    $DD6D   DRW      VD, V6, #D      ; Draw 13-byte sprite at VD, V6
$A0E    $104B   JP       $04B            ; Jump to 04B
$A10    $6922   LD       V9, #22         ; Load 34 into V9
$A12    $E616   UNKNOWN  $E616           ; Unknown Exxx instruction
$A14    $4AE9   SNE      VA, #E9         ; Skip if VA != 233
$A16    $9018   UNKNOWN  $9018           ; Unknown 9xxx instruction
$A18    $2ABA   CALL     $ABA            ; Call subroutine at ABA
$A1A    $4B9C   SNE      VB, #9C         ; Skip if VB != 156
$A1C    $8D6F   UNKNOWN  8D6F            ; Unknown 8xxx instruction
$A1E    $2850   CALL     $850            ; Call subroutine at 850
$A20    $35F1   SE       V5, #F1         ; Skip if V5 == 241
$A22    $3966   SE       V9, #66         ; Skip if V9 == 102
$A24    $10E3   JP       $0E3            ; Jump to 0E3
$A26    $CA00   RND      VA, #00         ; VA = random & 00
$A28    $ACE2   LD       I, $CE2         ; Load CE2 into I
$A2A    $97CD   UNKNOWN  $97CD           ; Unknown 9xxx instruction
$A2C    $BEAF   JP       V0, $EAF        ; Jump to V0 + EAF
$A2E    $1995   JP       $995            ; Jump to 995
$A30    $3FED   SE       VF, #ED         ; Skip if VF == 237
$A32    $4252   SNE      V2, #52         ; Skip if V2 != 82
$A34    $CDE8   RND      VD, #E8         ; VD = random & E8
$A36    $D6FA   DRW      V6, VF, #A      ; Draw 10-byte sprite at V6, VF
$A38    $56AA   UNKNOWN  $56AA           ; Unknown 5xxx instruction
$A3A    $F1BC   UNKNOWN  F1BC            ; Unknown Fxxx instruction
$A3C    $8833   XOR      V8, V3          ; V8 ^= V3
$A3E    $6F92   LD       VF, #92         ; Load 146 into VF
$A40    $CE65   RND      VE, #65         ; VE = random & 65
$A42    $27C3   CALL     $7C3            ; Call subroutine at 7C3
$A44    $01B6   SYS      $1B6            ; System call to 1B6
$A46    $AC93   LD       I, $C93         ; Load C93 into I
$A48    $E70B   UNKNOWN  $E70B           ; Unknown Exxx instruction
$A4A    $3456   SE       V4, #56         ; Skip if V4 == 86
$A4C    $BC52   JP       V0, $C52        ; Jump to V0 + C52
$A4E    $B2A8   JP       V0, $2A8        ; Jump to V0 + 2A8
$A50    $7EE1   ADD      VE, #E1         ; Add 225 to VE
$A52    $9763   UNKNOWN  $9763           ; Unknown 9xxx instruction
$A54    $9239   UNKNOWN  $9239           ; Unknown 9xxx instruction
$A56    $6CC8   LD       VC, #C8         ; Load 200 into VC
$A58    $3254   SE       V2, #54         ; Skip if V2 == 84
$A5A    $F576   UNKNOWN  F576            ; Unknown Fxxx instruction
$A5C    $E772   UNKNOWN  $E772           ; Unknown Exxx instruction
$A5E    $7549   ADD      V5, #49         ; Add 73 to V5
$A60    $CB1A   RND      VB, #1A         ; VB = random & 1A
$A62    $668D   LD       V6, #8D         ; Load 141 into V6
$A64    $F9E3   UNKNOWN  F9E3            ; Unknown Fxxx instruction
$A66    $669B   LD       V6, #9B         ; Load 155 into V6
$A68    $58B5   UNKNOWN  $58B5           ; Unknown 5xxx instruction
$A6A    $F78A   UNKNOWN  F78A            ; Unknown Fxxx instruction
$A6C    $4A58   SNE      VA, #58         ; Skip if VA != 88
$A6E    $1740   JP       $740            ; Jump to 740
$A70    $06AD   SYS      $6AD            ; System call to 6AD
$A72    $8C5C   UNKNOWN  8C5C            ; Unknown 8xxx instruction
$A74    $9F41   UNKNOWN  $9F41           ; Unknown 9xxx instruction
$A76    $B0A5   JP       V0, $0A5        ; Jump to V0 + 0A5
$A78    $BDE0   JP       V0, $DE0        ; Jump to V0 + DE0
$A7A    $8BAA   UNKNOWN  8BAA            ; Unknown 8xxx instruction
$A7C    $9FA7   UNKNOWN  $9FA7           ; Unknown 9xxx instruction
$A7E    $A6C4   LD       I, $6C4         ; Load 6C4 into I
$A80    $1D8B   JP       $D8B            ; Jump to D8B
$A82    $BC61   JP       V0, $C61        ; Jump to V0 + C61
$A84    $A308   LD       I, $308         ; Load 308 into I
$A86    $73BB   ADD      V3, #BB         ; Add 187 to V3
$A88    $95DD   UNKNOWN  $95DD           ; Unknown 9xxx instruction
$A8A    $4170   SNE      V1, #70         ; Skip if V1 != 112
$A8C    $21E5   CALL     $1E5            ; Call subroutine at 1E5
$A8E    $DA49   DRW      VA, V4, #9      ; Draw 9-byte sprite at VA, V4
$A90    $F5FA   UNKNOWN  F5FA            ; Unknown Fxxx instruction
$A92    $4073   SNE      V0, #73         ; Skip if V0 != 115
$A94    $3291   SE       V2, #91         ; Skip if V2 == 145
$A96    $902F   UNKNOWN  $902F           ; Unknown 9xxx instruction
$A98    $3D71   SE       VD, #71         ; Skip if VD == 113
$A9A    $FFA7   UNKNOWN  FFA7            ; Unknown Fxxx instruction
$A9C    $2129   CALL     $129            ; Call subroutine at 129
$A9E    $1FA7   JP       $FA7            ; Jump to FA7
$AA0    $D95B   DRW      V9, V5, #B      ; Draw 11-byte sprite at V9, V5
$AA2    $590B   UNKNOWN  $590B           ; Unknown 5xxx instruction
$AA4    $082B   SYS      $82B            ; System call to 82B
$AA6    $A9D5   LD       I, $9D5         ; Load 9D5 into I
$AA8    $FCBD   UNKNOWN  FCBD            ; Unknown Fxxx instruction
$AAA    $95C1   UNKNOWN  $95C1           ; Unknown 9xxx instruction
$AAC    $F35D   UNKNOWN  F35D            ; Unknown Fxxx instruction
$AAE    $4C1A   SNE      VC, #1A         ; Skip if VC != 26
$AB0    $FE86   UNKNOWN  FE86            ; Unknown Fxxx instruction
$AB2    $43EA   SNE      V3, #EA         ; Skip if V3 != 234
$AB4    $5DBA   UNKNOWN  $5DBA           ; Unknown 5xxx instruction
$AB6    $EE37   UNKNOWN  $EE37           ; Unknown Exxx instruction
$AB8    $9984   UNKNOWN  $9984           ; Unknown 9xxx instruction
$ABA    $ED7A   UNKNOWN  $ED7A           ; Unknown Exxx instruction
$ABC    $FC14   UNKNOWN  FC14            ; Unknown Fxxx instruction
$ABE    $6741   LD       V7, #41         ; Load 65 into V7
$AC0    $7ABF   ADD      VA, #BF         ; Add 191 to VA
$AC2    $C374   RND      V3, #74         ; V3 = random & 74
$AC4    $6727   LD       V7, #27         ; Load 39 into V7
$AC6    $E605   UNKNOWN  $E605           ; Unknown Exxx instruction
$AC8    $FC5B   UNKNOWN  FC5B            ; Unknown Fxxx instruction
$ACA    $88A8   UNKNOWN  88A8            ; Unknown 8xxx instruction
$ACC    $9517   UNKNOWN  $9517           ; Unknown 9xxx instruction
$ACE    $5B87   UNKNOWN  $5B87           ; Unknown 5xxx instruction
$AD0    $3A2E   SE       VA, #2E         ; Skip if VA == 46
$AD2    $62FC   LD       V2, #FC         ; Load 252 into V2
$AD4    $6DD6   LD       VD, #D6         ; Load 214 into VD
$AD6    $3BAA   SE       VB, #AA         ; Skip if VB == 170
$AD8    $4935   SNE      V9, #35         ; Skip if V9 != 53
$ADA    $FE84   UNKNOWN  FE84            ; Unknown Fxxx instruction
$ADC    $767F   ADD      V6, #7F         ; Add 127 to V6
$ADE    $1661   JP       $661            ; Jump to 661
$AE0    $4D1A   SNE      VD, #1A         ; Skip if VD != 26
$AE2    $C5CE   RND      V5, #CE         ; V5 = random & CE
$AE4    $204C   CALL     $04C            ; Call subroutine at 04C
$AE6    $F200   UNKNOWN  F200            ; Unknown Fxxx instruction
$AE8    $C581   RND      V5, #81         ; V5 = random & 81
$AEA    $AACB   LD       I, $ACB         ; Load ACB into I
$AEC    $AEDF   LD       I, $EDF         ; Load EDF into I
$AEE    $13BE   JP       $3BE            ; Jump to 3BE
$AF0    $D5E8   DRW      V5, VE, #8      ; Draw 8-byte sprite at V5, VE
$AF2    $4E50   SNE      VE, #50         ; Skip if VE != 80
$AF4    $57E2   UNKNOWN  $57E2           ; Unknown 5xxx instruction
$AF6    $7081   ADD      V0, #81         ; Add 129 to V0
$AF8    $19D5   JP       $9D5            ; Jump to 9D5
$AFA    $A2B7   LD       I, $2B7         ; Load 2B7 into I
$AFC    $27EB   CALL     $7EB            ; Call subroutine at 7EB
$AFE    $3831   SE       V8, #31         ; Skip if V8 == 49
$B00    $9B1C   UNKNOWN  $9B1C           ; Unknown 9xxx instruction
$B02    $2B23   CALL     $B23            ; Call subroutine at B23
$B04    $9502   UNKNOWN  $9502           ; Unknown 9xxx instruction
$B06    $3FDE   SE       VF, #DE         ; Skip if VF == 222
$B08    $30D2   SE       V0, #D2         ; Skip if V0 == 210
$B0A    $8293   XOR      V2, V9          ; V2 ^= V9
$B0C    $863B   UNKNOWN  863B            ; Unknown 8xxx instruction
$B0E    $07E9   SYS      $7E9            ; System call to 7E9
$B10    $7A4F   ADD      VA, #4F         ; Add 79 to VA
$B12    $9ACC   UNKNOWN  $9ACC           ; Unknown 9xxx instruction
$B14    $5283   UNKNOWN  $5283           ; Unknown 5xxx instruction
$B16    $A669   LD       I, $669         ; Load 669 into I
$B18    $9279   UNKNOWN  $9279           ; Unknown 9xxx instruction
$B1A    $FF3E   UNKNOWN  FF3E            ; Unknown Fxxx instruction
$B1C    $1E51   JP       $E51            ; Jump to E51
$B1E    $51EE   UNKNOWN  $51EE           ; Unknown 5xxx instruction
$B20    $F687   UNKNOWN  F687            ; Unknown Fxxx instruction
$B22    $87D4   ADD      V7, VD          ; V7 += VD, VF = carry
$B24    $F319   UNKNOWN  F319            ; Unknown Fxxx instruction
$B26    $F762   UNKNOWN  F762            ; Unknown Fxxx instruction
$B28    $EACF   UNKNOWN  $EACF           ; Unknown Exxx instruction
$B2A    $EA1A   UNKNOWN  $EA1A           ; Unknown Exxx instruction
$B2C    $B2DF   JP       V0, $2DF        ; Jump to V0 + 2DF
$B2E    $5B4D   UNKNOWN  $5B4D           ; Unknown 5xxx instruction
$B30    $02A7   SYS      $2A7            ; System call to 2A7
$B32    $9EB8   UNKNOWN  $9EB8           ; Unknown 9xxx instruction
$B34    $7E20   ADD      VE, #20         ; Add 32 to VE
$B36    $F0C2   UNKNOWN  F0C2            ; Unknown Fxxx instruction
$B38    $6A58   LD       VA, #58         ; Load 88 into VA
$B3A    $BA5A   JP       V0, $A5A        ; Jump to V0 + A5A
$B3C    $9A89   UNKNOWN  $9A89           ; Unknown 9xxx instruction
$B3E    $9383   UNKNOWN  $9383           ; Unknown 9xxx instruction
$B40    $D855   DRW      V8, V5, #5      ; Draw 5-byte sprite at V8, V5
$B42    $D0DE   DRW      V0, VD, #E      ; Draw 14-byte sprite at V0, VD
$B44    $FBEA   UNKNOWN  FBEA            ; Unknown Fxxx instruction
$B46    $7D93   ADD      VD, #93         ; Add 147 to VD
$B48    $C919   RND      V9, #19         ; V9 = random & 19
$B4A    $E3B5   UNKNOWN  $E3B5           ; Unknown Exxx instruction
$B4C    $B386   JP       V0, $386        ; Jump to V0 + 386
$B4E    $A237   LD       I, $237         ; Load 237 into I
$B50    $1C7A   JP       $C7A            ; Jump to C7A
$B52    $ADF1   LD       I, $DF1         ; Load DF1 into I
$B54    $6D6D   LD       VD, #6D         ; Load 109 into VD
$B56    $3FBD   SE       VF, #BD         ; Skip if VF == 189
$B58    $47DA   SNE      V7, #DA         ; Skip if V7 != 218
$B5A    $3D09   SE       VD, #09         ; Skip if VD == 9
$B5C    $E884   UNKNOWN  $E884           ; Unknown Exxx instruction
$B5E    $1698   JP       $698            ; Jump to 698
$B60    $FC4C   UNKNOWN  FC4C            ; Unknown Fxxx instruction
$B62    $F29D   UNKNOWN  F29D            ; Unknown Fxxx instruction
$B64    $0387   SYS      $387            ; System call to 387
$B66    $6FBD   LD       VF, #BD         ; Load 189 into VF
$B68    $D2A9   DRW      V2, VA, #9      ; Draw 9-byte sprite at V2, VA
$B6A    $9E00   SNE      VE, V0          ; Skip if VE != V0
$B6C    $B70B   JP       V0, $70B        ; Jump to V0 + 70B
$B6E    $9FDD   UNKNOWN  $9FDD           ; Unknown 9xxx instruction
$B70    $4AB5   SNE      VA, #B5         ; Skip if VA != 181
$B72    $F060   UNKNOWN  F060            ; Unknown Fxxx instruction
$B74    $31C0   SE       V1, #C0         ; Skip if V1 == 192
$B76    $070D   SYS      $70D            ; System call to 70D
$B78    $B125   JP       V0, $125        ; Jump to V0 + 125
$B7A    $FBE4   UNKNOWN  FBE4            ; Unknown Fxxx instruction
$B7C    $6A76   LD       VA, #76         ; Load 118 into VA
$B7E    $AA97   LD       I, $A97         ; Load A97 into I
$B80    $5160   SE       V1, V6          ; Skip if V1 == V6
$B82    $AA53   LD       I, $A53         ; Load A53 into I
$B84    $6ADB   LD       VA, #DB         ; Load 219 into VA
$B86    $3343   SE       V3, #43         ; Skip if V3 == 67
$B88    $7DF5   ADD      VD, #F5         ; Add 245 to VD
$B8A    $45FD   SNE      V5, #FD         ; Skip if V5 != 253
$B8C    $A54D   LD       I, $54D         ; Load 54D into I
$B8E    $959E   UNKNOWN  $959E           ; Unknown 9xxx instruction
$B90    $FD94   UNKNOWN  FD94            ; Unknown Fxxx instruction
$B92    $DAD0   DRW      VA, VD, #0      ; Draw 0-byte sprite at VA, VD
$B94    $86CF   UNKNOWN  86CF            ; Unknown 8xxx instruction
$B96    $26BC   CALL     $6BC            ; Call subroutine at 6BC
$B98    $DFAB   DRW      VF, VA, #B      ; Draw 11-byte sprite at VF, VA
$B9A    $20DB   CALL     $0DB            ; Call subroutine at 0DB
$B9C    $39FF   SE       V9, #FF         ; Skip if V9 == 255
$B9E    $D0D8   DRW      V0, VD, #8      ; Draw 8-byte sprite at V0, VD
$BA0    $62DD   LD       V2, #DD         ; Load 221 into V2
$BA2    $001E   SYS      $01E            ; System call to 01E
$BA4    $7E42   ADD      VE, #42         ; Add 66 to VE
$BA6    $04D9   SYS      $4D9            ; System call to 4D9
$BA8    $64C6   LD       V4, #C6         ; Load 198 into V4
$BAA    $B3DE   JP       V0, $3DE        ; Jump to V0 + 3DE
$BAC    $8DE6   SHR      VD              ; VD >>= 1, VF = LSB
$BAE    $82D2   AND      V2, VD          ; V2 &= VD
$BB0    $61C9   LD       V1, #C9         ; Load 201 into V1
$BB2    $8334   ADD      V3, V3          ; V3 += V3, VF = carry
$BB4    $9453   UNKNOWN  $9453           ; Unknown 9xxx instruction
$BB6    $704F   ADD      V0, #4F         ; Add 79 to V0
$BB8    $9A40   SNE      VA, V4          ; Skip if VA != V4
$BBA    $F96F   UNKNOWN  F96F            ; Unknown Fxxx instruction
$BBC    $CFBA   RND      VF, #BA         ; VF = random & BA
$BBE    $814A   UNKNOWN  814A            ; Unknown 8xxx instruction
$BC0    $51CD   UNKNOWN  $51CD           ; Unknown 5xxx instruction
$BC2    $36E5   SE       V6, #E5         ; Skip if V6 == 229
$BC4    $FA6A   UNKNOWN  FA6A            ; Unknown Fxxx instruction
$BC6    $FB22   UNKNOWN  FB22            ; Unknown Fxxx instruction
$BC8    $D168   DRW      V1, V6, #8      ; Draw 8-byte sprite at V1, V6
$BCA    $0E58   SYS      $E58            ; System call to E58
$BCC    $CB77   RND      VB, #77         ; VB = random & 77
$BCE    $D14B   DRW      V1, V4, #B      ; Draw 11-byte sprite at V1, V4
$BD0    $E49C   UNKNOWN  $E49C           ; Unknown Exxx instruction
$BD2    $4BB6   SNE      VB, #B6         ; Skip if VB != 182
$BD4    $EC72   UNKNOWN  $EC72           ; Unknown Exxx instruction
$BD6    $61F4   LD       V1, #F4         ; Load 244 into V1
$BD8    $8FD8   UNKNOWN  8FD8            ; Unknown 8xxx instruction
$BDA    $1CB1   JP       $CB1            ; Jump to CB1
$BDC    $97E5   UNKNOWN  $97E5           ; Unknown 9xxx instruction
$BDE    $59E3   UNKNOWN  $59E3           ; Unknown 5xxx instruction
$BE0    $98EB   UNKNOWN  $98EB           ; Unknown 9xxx instruction
$BE2    $7693   ADD      V6, #93         ; Add 147 to V6
$BE4    $7E88   ADD      VE, #88         ; Add 136 to VE
$BE6    $3A1F   SE       VA, #1F         ; Skip if VA == 31
$BE8    $57A8   UNKNOWN  $57A8           ; Unknown 5xxx instruction
$BEA    $9029   UNKNOWN  $9029           ; Unknown 9xxx instruction
$BEC    $147C   JP       $47C            ; Jump to 47C
$BEE    $E10C   UNKNOWN  $E10C           ; Unknown Exxx instruction
$BF0    $A3B7   LD       I, $3B7         ; Load 3B7 into I
$BF2    $A300   LD       I, $300         ; Load 300 into I
$BF4    $880F   UNKNOWN  880F            ; Unknown 8xxx instruction
$BF6    $C8A6   RND      V8, #A6         ; V8 = random & A6
$BF8    $033C   SYS      $33C            ; System call to 33C
$BFA    $9D7E   UNKNOWN  $9D7E           ; Unknown 9xxx instruction
$BFC    $CCB8   RND      VC, #B8         ; VC = random & B8
$BFE    $D8E1   DRW      V8, VE, #1      ; Draw 1-byte sprite at V8, VE
$C00    $EC7C   UNKNOWN  $EC7C           ; Unknown Exxx instruction
$C02    $C953   RND      V9, #53         ; V9 = random & 53
$C04    $619B   LD       V1, #9B         ; Load 155 into V1
$C06    $003B   SYS      $03B            ; System call to 03B
$C08    $EE18   UNKNOWN  $EE18           ; Unknown Exxx instruction
$C0A    $0650   SYS      $650            ; System call to 650
$C0C    $F533   LD       B, V5           ; Store BCD of V5 at I, I+1, I+2
$C0E    $ABD8   LD       I, $BD8         ; Load BD8 into I
$C10    $CB31   RND      VB, #31         ; VB = random & 31
$C12    $2121   CALL     $121            ; Call subroutine at 121
$C14    $0BBF   SYS      $BBF            ; System call to BBF
$C16    $4504   SNE      V5, #04         ; Skip if V5 != 4
$C18    $D125   DRW      V1, V2, #5      ; Draw 5-byte sprite at V1, V2
$C1A    $33B0   SE       V3, #B0         ; Skip if V3 == 176
$C1C    $4725   SNE      V7, #25         ; Skip if V7 != 37
$C1E    $C2A5   RND      V2, #A5         ; V2 = random & A5
$C20    $7F88   ADD      VF, #88         ; Add 136 to VF
$C22    $450F   SNE      V5, #0F         ; Skip if V5 != 15
$C24    $C77C   RND      V7, #7C         ; V7 = random & 7C
$C26    $1F42   JP       $F42            ; Jump to F42
$C28    $FE1B   UNKNOWN  FE1B            ; Unknown Fxxx instruction
$C2A    $A8E5   LD       I, $8E5         ; Load 8E5 into I
$C2C    $DA5B   DRW      VA, V5, #B      ; Draw 11-byte sprite at VA, V5
$C2E    $7E94   ADD      VE, #94         ; Add 148 to VE
$C30    $8E6A   UNKNOWN  8E6A            ; Unknown 8xxx instruction
$C32    $FB9B   UNKNOWN  FB9B            ; Unknown Fxxx instruction
$C34    $26DB   CALL     $6DB            ; Call subroutine at 6DB
$C36    $3F53   SE       VF, #53         ; Skip if VF == 83
$C38    $329F   SE       V2, #9F         ; Skip if V2 == 159
$C3A    $CF15   RND      VF, #15         ; VF = random & 15
$C3C    $2FC1   CALL     $FC1            ; Call subroutine at FC1
$C3E    $EF26   UNKNOWN  $EF26           ; Unknown Exxx instruction
$C40    $DE27   DRW      VE, V2, #7      ; Draw 7-byte sprite at VE, V2
$C42    $333E   SE       V3, #3E         ; Skip if V3 == 62
$C44    $FD48   UNKNOWN  FD48            ; Unknown Fxxx instruction
$C46    $EB73   UNKNOWN  $EB73           ; Unknown Exxx instruction
$C48    $42A4   SNE      V2, #A4         ; Skip if V2 != 164
$C4A    $B14C   JP       V0, $14C        ; Jump to V0 + 14C
$C4C    $3FE6   SE       VF, #E6         ; Skip if VF == 230
$C4E    $E77D   UNKNOWN  $E77D           ; Unknown Exxx instruction
$C50    $BA5A   JP       V0, $A5A        ; Jump to V0 + A5A
$C52    $7E78   ADD      VE, #78         ; Add 120 to VE
$C54    $F398   UNKNOWN  F398            ; Unknown Fxxx instruction
$C56    $64B2   LD       V4, #B2         ; Load 178 into V4
$C58    $F22A   UNKNOWN  F22A            ; Unknown Fxxx instruction
$C5A    $100D   JP       $00D            ; Jump to 00D
$C5C    $48A5   SNE      V8, #A5         ; Skip if V8 != 165
$C5E    $B48A   JP       V0, $48A        ; Jump to V0 + 48A
$C60    $6F04   LD       VF, #04         ; Load 4 into VF
$C62    $4935   SNE      V9, #35         ; Skip if V9 != 53
$C64    $B882   JP       V0, $882        ; Jump to V0 + 882
$C66    $AD07   LD       I, $D07         ; Load D07 into I
$C68    $3374   SE       V3, #74         ; Skip if V3 == 116
$C6A    $CC40   RND      VC, #40         ; VC = random & 40
$C6C    $553D   UNKNOWN  $553D           ; Unknown 5xxx instruction
$C6E    $5A9B   UNKNOWN  $5A9B           ; Unknown 5xxx instruction
$C70    $3B4D   SE       VB, #4D         ; Skip if VB == 77
$C72    $B608   JP       V0, $608        ; Jump to V0 + 608
$C74    $3156   SE       V1, #56         ; Skip if V1 == 86
$C76    $CE43   RND      VE, #43         ; VE = random & 43
$C78    $44D1   SNE      V4, #D1         ; Skip if V4 != 209
$C7A    $E087   UNKNOWN  $E087           ; Unknown Exxx instruction
$C7C    $D506   DRW      V5, V0, #6      ; Draw 6-byte sprite at V5, V0
$C7E    $D8C8   DRW      V8, VC, #8      ; Draw 8-byte sprite at V8, VC
$C80    $1E30   JP       $E30            ; Jump to E30
$C82    $6FEA   LD       VF, #EA         ; Load 234 into VF
$C84    $BAB8   JP       V0, $AB8        ; Jump to V0 + AB8
$C86    $4FEF   SNE      VF, #EF         ; Skip if VF != 239
$C88    $55C3   UNKNOWN  $55C3           ; Unknown 5xxx instruction
$C8A    $9767   UNKNOWN  $9767           ; Unknown 9xxx instruction
$C8C    $EFB9   UNKNOWN  $EFB9           ; Unknown Exxx instruction
$C8E    $73F8   ADD      V3, #F8         ; Add 248 to V3
$C90    $6368   LD       V3, #68         ; Load 104 into V3
$C92    $21E5   CALL     $1E5            ; Call subroutine at 1E5
$C94    $13FC   JP       $3FC            ; Jump to 3FC
$C96    $9028   UNKNOWN  $9028           ; Unknown 9xxx instruction
$C98    $540D   UNKNOWN  $540D           ; Unknown 5xxx instruction
$C9A    $D05C   DRW      V0, V5, #C      ; Draw 12-byte sprite at V0, V5
$C9C    $FC96   UNKNOWN  FC96            ; Unknown Fxxx instruction
$C9E    $321F   SE       V2, #1F         ; Skip if V2 == 31
$CA0    $03DD   SYS      $3DD            ; System call to 3DD
$CA2    $FC11   UNKNOWN  FC11            ; Unknown Fxxx instruction
$CA4    $C3F3   RND      V3, #F3         ; V3 = random & F3
$CA6    $288E   CALL     $88E            ; Call subroutine at 88E
$CA8    $CA90   RND      VA, #90         ; VA = random & 90
$CAA    $5266   UNKNOWN  $5266           ; Unknown 5xxx instruction
$CAC    $FE71   UNKNOWN  FE71            ; Unknown Fxxx instruction
$CAE    $33C7   SE       V3, #C7         ; Skip if V3 == 199
$CB0    $7132   ADD      V1, #32         ; Add 50 to V1
$CB2    $3D46   SE       VD, #46         ; Skip if VD == 70
$CB4    $99E1   UNKNOWN  $99E1           ; Unknown 9xxx instruction
$CB6    $E187   UNKNOWN  $E187           ; Unknown Exxx instruction
$CB8    $D44F   DRW      V4, V4, #F      ; Draw 15-byte sprite at V4, V4
$CBA    $6FAD   LD       VF, #AD         ; Load 173 into VF
$CBC    $E529   UNKNOWN  $E529           ; Unknown Exxx instruction
$CBE    $9AED   UNKNOWN  $9AED           ; Unknown 9xxx instruction
$CC0    $B2E1   JP       V0, $2E1        ; Jump to V0 + 2E1
$CC2    $E876   UNKNOWN  $E876           ; Unknown Exxx instruction
$CC4    $D048   DRW      V0, V4, #8      ; Draw 8-byte sprite at V0, V4
$CC6    $B05B   JP       V0, $05B        ; Jump to V0 + 05B
$CC8    $73F4   ADD      V3, #F4         ; Add 244 to V3
$CCA    $F5E5   UNKNOWN  F5E5            ; Unknown Fxxx instruction
$CCC    $4060   SNE      V0, #60         ; Skip if V0 != 96
$CCE    $93F7   UNKNOWN  $93F7           ; Unknown 9xxx instruction
$CD0    $9EB2   UNKNOWN  $9EB2           ; Unknown 9xxx instruction
$CD2    $7D3E   ADD      VD, #3E         ; Add 62 to VD
$CD4    $3023   SE       V0, #23         ; Skip if V0 == 35
$CD6    $9BE2   UNKNOWN  $9BE2           ; Unknown 9xxx instruction
$CD8    $F667   UNKNOWN  F667            ; Unknown Fxxx instruction
$CDA    $D7C1   DRW      V7, VC, #1      ; Draw 1-byte sprite at V7, VC
$CDC    $1B36   JP       $B36            ; Jump to B36
$CDE    $D9D2   DRW      V9, VD, #2      ; Draw 2-byte sprite at V9, VD
$CE0    $7FCF   ADD      VF, #CF         ; Add 207 to VF
$CE2    $56A5   UNKNOWN  $56A5           ; Unknown 5xxx instruction
$CE4    $8155   SUB      V1, V5          ; V1 -= V5, VF = !borrow
$CE6    $771E   ADD      V7, #1E         ; Add 30 to V7
$CE8    $F80D   UNKNOWN  F80D            ; Unknown Fxxx instruction
$CEA    $200B   CALL     $00B            ; Call subroutine at 00B
$CEC    $EE68   UNKNOWN  $EE68           ; Unknown Exxx instruction
$CEE    $F733   LD       B, V7           ; Store BCD of V7 at I, I+1, I+2
$CF0    $C87D   RND      V8, #7D         ; V8 = random & 7D
$CF2    $4076   SNE      V0, #76         ; Skip if V0 != 118
$CF4    $3185   SE       V1, #85         ; Skip if V1 == 133
$CF6    $9E98   UNKNOWN  $9E98           ; Unknown 9xxx instruction
$CF8    $B862   JP       V0, $862        ; Jump to V0 + 862
$CFA    $AF9C   LD       I, $F9C         ; Load F9C into I
$CFC    $48A7   SNE      V8, #A7         ; Skip if V8 != 167
$CFE    $E8A3   UNKNOWN  $E8A3           ; Unknown Exxx instruction
$D00    $B79C   JP       V0, $79C        ; Jump to V0 + 79C
$D02    $C061   RND      V0, #61         ; V0 = random & 61
$D04    $4A5B   SNE      VA, #5B         ; Skip if VA != 91
$D06    $4703   SNE      V7, #03         ; Skip if V7 != 3
$D08    $14E4   JP       $4E4            ; Jump to 4E4
$D0A    $6B43   LD       VB, #43         ; Load 67 into VB
$D0C    $842A   UNKNOWN  842A            ; Unknown 8xxx instruction
$D0E    $68D5   LD       V8, #D5         ; Load 213 into V8
$D10    $DFF0   DRW      VF, VF, #0      ; Draw 0-byte sprite at VF, VF
$D12    $7E7C   ADD      VE, #7C         ; Add 124 to VE
$D14    $4553   SNE      V5, #53         ; Skip if V5 != 83
$D16    $C540   RND      V5, #40         ; V5 = random & 40
$D18    $1ACC   JP       $ACC            ; Jump to ACC
$D1A    $39C4   SE       V9, #C4         ; Skip if V9 == 196
$D1C    $250C   CALL     $50C            ; Call subroutine at 50C
$D1E    $6693   LD       V6, #93         ; Load 147 into V6
$D20    $BF5C   JP       V0, $F5C        ; Jump to V0 + F5C
$D22    $1C73   JP       $C73            ; Jump to C73
$D24    $C8AB   RND      V8, #AB         ; V8 = random & AB
$D26    $3A9D   SE       VA, #9D         ; Skip if VA == 157
$D28    $F8DE   UNKNOWN  F8DE            ; Unknown Fxxx instruction
$D2A    $368F   SE       V6, #8F         ; Skip if V6 == 143
$D2C    $111B   JP       $11B            ; Jump to 11B
$D2E    $0D92   SYS      $D92            ; System call to D92
$D30    $9D9A   UNKNOWN  $9D9A           ; Unknown 9xxx instruction
$D32    $B4AE   JP       V0, $4AE        ; Jump to V0 + 4AE
$D34    $9D05   UNKNOWN  $9D05           ; Unknown 9xxx instruction
$D36    $5B23   UNKNOWN  $5B23           ; Unknown 5xxx instruction
$D38    $ACF2   LD       I, $CF2         ; Load CF2 into I
$D3A    $1B77   JP       $B77            ; Jump to B77
$D3C    $85BC   UNKNOWN  85BC            ; Unknown 8xxx instruction
$D3E    $0F28   SYS      $F28            ; System call to F28
$D40    $7CF8   ADD      VC, #F8         ; Add 248 to VC
$D42    $ECB3   UNKNOWN  $ECB3           ; Unknown Exxx instruction
$D44    $8030   LD       V0, V3          ; V0 = V3
$D46    $BC75   JP       V0, $C75        ; Jump to V0 + C75
$D48    $C083   RND      V0, #83         ; V0 = random & 83
$D4A    $6EA7   LD       VE, #A7         ; Load 167 into VE
$D4C    $7682   ADD      V6, #82         ; Add 130 to V6
$D4E    $A627   LD       I, $627         ; Load 627 into I
$D50    $2C43   CALL     $C43            ; Call subroutine at C43
$D52    $1697   JP       $697            ; Jump to 697
$D54    $1489   JP       $489            ; Jump to 489
$D56    $329D   SE       V2, #9D         ; Skip if V2 == 157
$D58    $1195   JP       $195            ; Jump to 195
$D5A    $79A4   ADD      V9, #A4         ; Add 164 to V9
$D5C    $2A94   CALL     $A94            ; Call subroutine at A94
$D5E    $EBB2   UNKNOWN  $EBB2           ; Unknown Exxx instruction
$D60    $EA5C   UNKNOWN  $EA5C           ; Unknown Exxx instruction
$D62    $6DF1   LD       VD, #F1         ; Load 241 into VD
$D64    $175C   JP       $75C            ; Jump to 75C
$D66    $70C9   ADD      V0, #C9         ; Add 201 to V0
$D68    $9713   UNKNOWN  $9713           ; Unknown 9xxx instruction
$D6A    $9D3C   UNKNOWN  $9D3C           ; Unknown 9xxx instruction
$D6C    $73F6   ADD      V3, #F6         ; Add 246 to V3
$D6E    $C387   RND      V3, #87         ; V3 = random & 87
$D70    $B3F1   JP       V0, $3F1        ; Jump to V0 + 3F1
$D72    $747E   ADD      V4, #7E         ; Add 126 to V4
$D74    $924A   UNKNOWN  $924A           ; Unknown 9xxx instruction
$D76    $47C4   SNE      V7, #C4         ; Skip if V7 != 196
$D78    $9606   UNKNOWN  $9606           ; Unknown 9xxx instruction
$D7A    $067E   SYS      $67E            ; System call to 67E
$D7C    $6427   LD       V4, #27         ; Load 39 into V4
$D7E    $E4A5   UNKNOWN  $E4A5           ; Unknown Exxx instruction
$D80    $F6A4   UNKNOWN  F6A4            ; Unknown Fxxx instruction
$D82    $68EF   LD       V8, #EF         ; Load 239 into V8
$D84    $F02A   UNKNOWN  F02A            ; Unknown Fxxx instruction
$D86    $CB3A   RND      VB, #3A         ; VB = random & 3A
$D88    $7A8B   ADD      VA, #8B         ; Add 139 to VA
$D8A    $A9CB   LD       I, $9CB         ; Load 9CB into I
$D8C    $0382   SYS      $382            ; System call to 382
$D8E    $0A2B   SYS      $A2B            ; System call to A2B
$D90    $E428   UNKNOWN  $E428           ; Unknown Exxx instruction
$D92    $00ED   SYS      $0ED            ; System call to 0ED
$D94    $23F1   CALL     $3F1            ; Call subroutine at 3F1
$D96    $F075   UNKNOWN  F075            ; Unknown Fxxx instruction
$D98    $8BE3   XOR      VB, VE          ; VB ^= VE
$D9A    $DE15   DRW      VE, V1, #5      ; Draw 5-byte sprite at VE, V1
$D9C    $C162   RND      V1, #62         ; V1 = random & 62
$D9E    $3184   SE       V1, #84         ; Skip if V1 == 132
$DA0    $EE0E   UNKNOWN  $EE0E           ; Unknown Exxx instruction
$DA2    $E225   UNKNOWN  $E225           ; Unknown Exxx instruction
$DA4    $2756   CALL     $756            ; Call subroutine at 756
$DA6    $4D3B   SNE      VD, #3B         ; Skip if VD != 59
$DA8    $0831   SYS      $831            ; System call to 831
$DAA    $BF28   JP       V0, $F28        ; Jump to V0 + F28
$DAC    $1192   JP       $192            ; Jump to 192
$DAE    $3290   SE       V2, #90         ; Skip if V2 == 144
$DB0    $6B35   LD       VB, #35         ; Load 53 into VB
$DB2    $33EE   SE       V3, #EE         ; Skip if V3 == 238
$DB4    $059D   SYS      $59D            ; System call to 59D
$DB6    $CE91   RND      VE, #91         ; VE = random & 91
$DB8    $F257   UNKNOWN  F257            ; Unknown Fxxx instruction
$DBA    $E131   UNKNOWN  $E131           ; Unknown Exxx instruction
$DBC    $0FC9   SYS      $FC9            ; System call to FC9
$DBE    $8744   ADD      V7, V4          ; V7 += V4, VF = carry
$DC0    $9654   UNKNOWN  $9654           ; Unknown 9xxx instruction
$DC2    $C946   RND      V9, #46         ; V9 = random & 46
$DC4    $295C   CALL     $95C            ; Call subroutine at 95C
$DC6    $897B   UNKNOWN  897B            ; Unknown 8xxx instruction
$DC8    $3F78   SE       VF, #78         ; Skip if VF == 120
$DCA    $28A9   CALL     $8A9            ; Call subroutine at 8A9
$DCC    $5BA2   UNKNOWN  $5BA2           ; Unknown 5xxx instruction
$DCE    $CF5D   RND      VF, #5D         ; VF = random & 5D
$DD0    $DC6C   DRW      VC, V6, #C      ; Draw 12-byte sprite at VC, V6
$DD2    $5DF6   UNKNOWN  $5DF6           ; Unknown 5xxx instruction
$DD4    $5D0F   UNKNOWN  $5D0F           ; Unknown 5xxx instruction
$DD6    $DDC4   DRW      VD, VC, #4      ; Draw 4-byte sprite at VD, VC
$DD8    $2EFF   CALL     $EFF            ; Call subroutine at EFF
$DDA    $FB82   UNKNOWN  FB82            ; Unknown Fxxx instruction
$DDC    $D5F9   DRW      V5, VF, #9      ; Draw 9-byte sprite at V5, VF
$DDE    $4E0A   SNE      VE, #0A         ; Skip if VE != 10
$DE0    $EBC9   UNKNOWN  $EBC9           ; Unknown Exxx instruction
$DE2    $9920   SNE      V9, V2          ; Skip if V9 != V2
$DE4    $ADC7   LD       I, $DC7         ; Load DC7 into I
$DE6    $A8C6   LD       I, $8C6         ; Load 8C6 into I
$DE8    $5B5C   UNKNOWN  $5B5C           ; Unknown 5xxx instruction
$DEA    $27FD   CALL     $7FD            ; Call subroutine at 7FD
$DEC    $88B9   UNKNOWN  88B9            ; Unknown 8xxx instruction
$DEE    $E039   UNKNOWN  $E039           ; Unknown Exxx instruction
$DF0    $FF8D   UNKNOWN  FF8D            ; Unknown Fxxx instruction
$DF2    $0A62   SYS      $A62            ; System call to A62
$DF4    $629F   LD       V2, #9F         ; Load 159 into V2
$DF6    $FFF6   UNKNOWN  FFF6            ; Unknown Fxxx instruction
$DF8    $E2F1   UNKNOWN  $E2F1           ; Unknown Exxx instruction
$DFA    $CD22   RND      VD, #22         ; VD = random & 22
$DFC    $69F3   LD       V9, #F3         ; Load 243 into V9
$DFE    $0CB8   SYS      $CB8            ; System call to CB8
$E00    $E678   UNKNOWN  $E678           ; Unknown Exxx instruction
$E02    $699E   LD       V9, #9E         ; Load 158 into V9
$E04    $470A   SNE      V7, #0A         ; Skip if V7 != 10
$E06    $7E3C   ADD      VE, #3C         ; Add 60 to VE
$E08    $D837   DRW      V8, V3, #7      ; Draw 7-byte sprite at V8, V3
$E0A    $B5F3   JP       V0, $5F3        ; Jump to V0 + 5F3
$E0C    $DDDA   DRW      VD, VD, #A      ; Draw 10-byte sprite at VD, VD
$E0E    $40B0   SNE      V0, #B0         ; Skip if V0 != 176
$E10    $B9AE   JP       V0, $9AE        ; Jump to V0 + 9AE
$E12    $348C   SE       V4, #8C         ; Skip if V4 == 140
$E14    $5B87   UNKNOWN  $5B87           ; Unknown 5xxx instruction
$E16    $158D   JP       $58D            ; Jump to 58D
$E18    $664B   LD       V6, #4B         ; Load 75 into V6
$E1A    $1F85   JP       $F85            ; Jump to F85
$E1C    $9E10   SNE      VE, V1          ; Skip if VE != V1
$E1E    $48C6   SNE      V8, #C6         ; Skip if V8 != 198
$E20    $86DA   UNKNOWN  86DA            ; Unknown 8xxx instruction
$E22    $0190   SYS      $190            ; System call to 190
$E24    $0787   SYS      $787            ; System call to 787
$E26    $33EB   SE       V3, #EB         ; Skip if V3 == 235
$E28    $9E2D   UNKNOWN  $9E2D           ; Unknown 9xxx instruction
$E2A    $3869   SE       V8, #69         ; Skip if V8 == 105
$E2C    $25E2   CALL     $5E2            ; Call subroutine at 5E2
$E2E    $C6E5   RND      V6, #E5         ; V6 = random & E5
$E30    $FD0B   UNKNOWN  FD0B            ; Unknown Fxxx instruction
$E32    $C528   RND      V5, #28         ; V5 = random & 28
$E34    $3695   SE       V6, #95         ; Skip if V6 == 149
$E36    $4FB3   SNE      VF, #B3         ; Skip if VF != 179
$E38    $D913   DRW      V9, V1, #3      ; Draw 3-byte sprite at V9, V1
$E3A    $C5AE   RND      V5, #AE         ; V5 = random & AE
$E3C    $028B   SYS      $28B            ; System call to 28B
$E3E    $A069   LD       I, $069         ; Load 069 into I
$E40    $118D   JP       $18D            ; Jump to 18D
$E42    $A3C4   LD       I, $3C4         ; Load 3C4 into I
$E44    $5502   UNKNOWN  $5502           ; Unknown 5xxx instruction
$E46    $FA56   UNKNOWN  FA56            ; Unknown Fxxx instruction
$E48    $49E7   SNE      V9, #E7         ; Skip if V9 != 231
$E4A    $8FDC   UNKNOWN  8FDC            ; Unknown 8xxx instruction
$E4C    $42A7   SNE      V2, #A7         ; Skip if V2 != 167
$E4E    $1AF3   JP       $AF3            ; Jump to AF3
$E50    $25A9   CALL     $5A9            ; Call subroutine at 5A9
$E52    $1544   JP       $544            ; Jump to 544
$E54    $9022   UNKNOWN  $9022           ; Unknown 9xxx instruction
$E56    $A795   LD       I, $795         ; Load 795 into I
$E58    $2D06   CALL     $D06            ; Call subroutine at D06
$E5A    $FC78   UNKNOWN  FC78            ; Unknown Fxxx instruction
$E5C    $561C   UNKNOWN  $561C           ; Unknown 5xxx instruction
$E5E    $6097   LD       V0, #97         ; Load 151 into V0
$E60    $9A39   UNKNOWN  $9A39           ; Unknown 9xxx instruction
$E62    $D132   DRW      V1, V3, #2      ; Draw 2-byte sprite at V1, V3
$E64    $8D2C   UNKNOWN  8D2C            ; Unknown 8xxx instruction
$E66    $EBE5   UNKNOWN  $EBE5           ; Unknown Exxx instruction
$E68    $1D30   JP       $D30            ; Jump to D30
$E6A    $E17D   UNKNOWN  $E17D           ; Unknown Exxx instruction
$E6C    $CDA9   RND      VD, #A9         ; VD = random & A9
$E6E    $E885   UNKNOWN  $E885           ; Unknown Exxx instruction
$E70    $77D5   ADD      V7, #D5         ; Add 213 to V7
$E72    $DE31   DRW      VE, V3, #1      ; Draw 1-byte sprite at VE, V3
$E74    $6D32   LD       VD, #32         ; Load 50 into VD
$E76    $AAA5   LD       I, $AA5         ; Load AA5 into I
$E78    $560C   UNKNOWN  $560C           ; Unknown 5xxx instruction
$E7A    $BE3A   JP       V0, $E3A        ; Jump to V0 + E3A
$E7C    $C80C   RND      V8, #0C         ; V8 = random & 0C
$E7E    $1556   JP       $556            ; Jump to 556
$E80    $13D0   JP       $3D0            ; Jump to 3D0
$E82    $2B1D   CALL     $B1D            ; Call subroutine at B1D
$E84    $E641   UNKNOWN  $E641           ; Unknown Exxx instruction
$E86    $2D6C   CALL     $D6C            ; Call subroutine at D6C
$E88    $3D8F   SE       VD, #8F         ; Skip if VD == 143
$E8A    $04C1   SYS      $4C1            ; System call to 4C1
$E8C    $B830   JP       V0, $830        ; Jump to V0 + 830
$E8E    $AD5C   LD       I, $D5C         ; Load D5C into I
$E90    $8521   OR       V5, V2          ; V5 |= V2
$E92    $AD43   LD       I, $D43         ; Load D43 into I
$E94    $7BDD   ADD      VB, #DD         ; Add 221 to VB
$E96    $B1D2   JP       V0, $1D2        ; Jump to V0 + 1D2
$E98    $EFC9   UNKNOWN  $EFC9           ; Unknown Exxx instruction
$E9A    $4D53   SNE      VD, #53         ; Skip if VD != 83
$E9C    $79D3   ADD      V9, #D3         ; Add 211 to V9
$E9E    $59C3   UNKNOWN  $59C3           ; Unknown 5xxx instruction
$EA0    $60DD   LD       V0, #DD         ; Load 221 into V0
$EA2    $CB6A   RND      VB, #6A         ; VB = random & 6A
$EA4    $3231   SE       V2, #31         ; Skip if V2 == 49
$EA6    $2491   CALL     $491            ; Call subroutine at 491
$EA8    $0206   SYS      $206            ; System call to 206
$EAA    $4F06   SNE      VF, #06         ; Skip if VF != 6
$EAC    $38EC   SE       V8, #EC         ; Skip if V8 == 236
$EAE    $CDD7   RND      VD, #D7         ; VD = random & D7
$EB0    $ACBF   LD       I, $CBF         ; Load CBF into I
$EB2    $CC5B   RND      VC, #5B         ; VC = random & 5B
$EB4    $70EA   ADD      V0, #EA         ; Add 234 to V0
$EB6    $B720   JP       V0, $720        ; Jump to V0 + 720
$EB8    $C77D   RND      V7, #7D         ; V7 = random & 7D
$EBA    $78D6   ADD      V8, #D6         ; Add 214 to V8
$EBC    $27C1   CALL     $7C1            ; Call subroutine at 7C1
$EBE    $3A08   SE       VA, #08         ; Skip if VA == 8
$EC0    $98CD   UNKNOWN  $98CD           ; Unknown 9xxx instruction
$EC2    $C314   RND      V3, #14         ; V3 = random & 14
$EC4    $4EDF   SNE      VE, #DF         ; Skip if VE != 223
$EC6    $3534   SE       V5, #34         ; Skip if V5 == 52
$EC8    $E696   UNKNOWN  $E696           ; Unknown Exxx instruction
$ECA    $ECE7   UNKNOWN  $ECE7           ; Unknown Exxx instruction
$ECC    $9EBB   UNKNOWN  $9EBB           ; Unknown 9xxx instruction
$ECE    $5D2D   UNKNOWN  $5D2D           ; Unknown 5xxx instruction
$ED0    $4EE9   SNE      VE, #E9         ; Skip if VE != 233
$ED2    $24AA   CALL     $4AA            ; Call subroutine at 4AA
$ED4    $CADA   RND      VA, #DA         ; VA = random & DA
$ED6    $F3F5   UNKNOWN  F3F5            ; Unknown Fxxx instruction
$ED8    $B304   JP       V0, $304        ; Jump to V0 + 304
$EDA    $9BBA   UNKNOWN  $9BBA           ; Unknown 9xxx instruction
$EDC    $8F7C   UNKNOWN  8F7C            ; Unknown 8xxx instruction
$EDE    $D579   DRW      V5, V7, #9      ; Draw 9-byte sprite at V5, V7
$EE0    $4E6F   SNE      VE, #6F         ; Skip if VE != 111
$EE2    $F3DA   UNKNOWN  F3DA            ; Unknown Fxxx instruction
$EE4    $0FE3   SYS      $FE3            ; System call to FE3
$EE6    $784B   ADD      V8, #4B         ; Add 75 to V8
$EE8    $285C   CALL     $85C            ; Call subroutine at 85C
$EEA    $5BB3   UNKNOWN  $5BB3           ; Unknown 5xxx instruction
$EEC    $637C   LD       V3, #7C         ; Load 124 into V3
$EEE    $19A3   JP       $9A3            ; Jump to 9A3
$EF0    $2B77   CALL     $B77            ; Call subroutine at B77
$EF2    $5369   UNKNOWN  $5369           ; Unknown 5xxx instruction
$EF4    $0E7A   SYS      $E7A            ; System call to E7A
$EF6    $4898   SNE      V8, #98         ; Skip if V8 != 152
$EF8    $0B0B   SYS      $B0B            ; System call to B0B
$EFA    $0263   SYS      $263            ; System call to 263
$EFC    $4977   SNE      V9, #77         ; Skip if V9 != 119
$EFE    $C314   RND      V3, #14         ; V3 = random & 14
$F00    $D8C0   DRW      V8, VC, #0      ; Draw 0-byte sprite at V8, VC
$F02    $FE4C   UNKNOWN  FE4C            ; Unknown Fxxx instruction
$F04    $EB1C   UNKNOWN  $EB1C           ; Unknown Exxx instruction
$F06    $8232   AND      V2, V3          ; V2 &= V3
$F08    $7F3D   ADD      VF, #3D         ; Add 61 to VF
$F0A    $D4D0   DRW      V4, VD, #0      ; Draw 0-byte sprite at V4, VD
$F0C    $0CC5   SYS      $CC5            ; System call to CC5
$F0E    $8F85   SUB      VF, V8          ; VF -= V8, VF = !borrow
$F10    $16A5   JP       $6A5            ; Jump to 6A5
$F12    $1407   JP       $407            ; Jump to 407
$F14    $1DCC   JP       $DCC            ; Jump to DCC
$F16    $79BA   ADD      V9, #BA         ; Add 186 to V9
$F18    $ECC5   UNKNOWN  $ECC5           ; Unknown Exxx instruction
$F1A    $8489   UNKNOWN  8489            ; Unknown 8xxx instruction
$F1C    $11FE   JP       $1FE            ; Jump to 1FE
$F1E    $641E   LD       V4, #1E         ; Load 30 into V4
$F20    $59D4   UNKNOWN  $59D4           ; Unknown 5xxx instruction
$F22    $15DD   JP       $5DD            ; Jump to 5DD
$F24    $C904   RND      V9, #04         ; V9 = random & 04
$F26    $2809   CALL     $809            ; Call subroutine at 809
$F28    $A13E   LD       I, $13E         ; Load 13E into I
$F2A    $230C   CALL     $30C            ; Call subroutine at 30C
$F2C    $CF1A   RND      VF, #1A         ; VF = random & 1A
$F2E    $097E   SYS      $97E            ; System call to 97E
$F30    $6883   LD       V8, #83         ; Load 131 into V8
$F32    $A1BD   LD       I, $1BD         ; Load 1BD into I
$F34    $E573   UNKNOWN  $E573           ; Unknown Exxx instruction
$F36    $A42C   LD       I, $42C         ; Load 42C into I
$F38    $BAB9   JP       V0, $AB9        ; Jump to V0 + AB9
$F3A    $699F   LD       V9, #9F         ; Load 159 into V9
$F3C    $117B   JP       $17B            ; Jump to 17B
$F3E    $CD31   RND      VD, #31         ; VD = random & 31
$F40    $AD5C   LD       I, $D5C         ; Load D5C into I
$F42    $C5DC   RND      V5, #DC         ; V5 = random & DC
$F44    $57F3   UNKNOWN  $57F3           ; Unknown 5xxx instruction
$F46    $3FCE   SE       VF, #CE         ; Skip if VF == 206
$F48    $921B   UNKNOWN  $921B           ; Unknown 9xxx instruction
$F4A    $A164   LD       I, $164         ; Load 164 into I
$F4C    $62F1   LD       V2, #F1         ; Load 241 into V2
$F4E    $70E4   ADD      V0, #E4         ; Add 228 to V0
$F50    $C9A3   RND      V9, #A3         ; V9 = random & A3
$F52    $DB90   DRW      VB, V9, #0      ; Draw 0-byte sprite at VB, V9
$F54    $BE54   JP       V0, $E54        ; Jump to V0 + E54
$F56    $BABA   JP       V0, $ABA        ; Jump to V0 + ABA
$F58    $D016   DRW      V0, V1, #6      ; Draw 6-byte sprite at V0, V1
$F5A    $639E   LD       V3, #9E         ; Load 158 into V3
$F5C    $E4F8   UNKNOWN  $E4F8           ; Unknown Exxx instruction
$F5E    $7C93   ADD      VC, #93         ; Add 147 to VC
$F60    $2DD5   CALL     $DD5            ; Call subroutine at DD5
$F62    $6F4B   LD       VF, #4B         ; Load 75 into VF
$F64    $5A1A   UNKNOWN  $5A1A           ; Unknown 5xxx instruction
$F66    $4CF0   SNE      VC, #F0         ; Skip if VC != 240
$F68    $4E12   SNE      VE, #12         ; Skip if VE != 18
$F6A    $6E77   LD       VE, #77         ; Load 119 into VE
$F6C    $49E6   SNE      V9, #E6         ; Skip if V9 != 230
$F6E    $254B   CALL     $54B            ; Call subroutine at 54B
$F70    $FA85   UNKNOWN  FA85            ; Unknown Fxxx instruction
$F72    $C51D   RND      V5, #1D         ; V5 = random & 1D
$F74    $3305   SE       V3, #05         ; Skip if V3 == 5
$F76    $64B2   LD       V4, #B2         ; Load 178 into V4
$F78    $35ED   SE       V5, #ED         ; Skip if V5 == 237
$F7A    $48BF   SNE      V8, #BF         ; Skip if V8 != 191
$F7C    $70EF   ADD      V0, #EF         ; Add 239 to V0
$F7E    $2794   CALL     $794            ; Call subroutine at 794
$F80    $EF22   UNKNOWN  $EF22           ; Unknown Exxx instruction
$F82    $72B9   ADD      V2, #B9         ; Add 185 to V2
$F84    $24FA   CALL     $4FA            ; Call subroutine at 4FA
$F86    $7B14   ADD      VB, #14         ; Add 20 to VB
$F88    $C4EC   RND      V4, #EC         ; V4 = random & EC
$F8A    $829D   UNKNOWN  829D            ; Unknown 8xxx instruction
$F8C    $9635   UNKNOWN  $9635           ; Unknown 9xxx instruction
$F8E    $8998   UNKNOWN  8998            ; Unknown 8xxx instruction
$F90    $138F   JP       $38F            ; Jump to 38F
$F92    $040A   SYS      $40A            ; System call to 40A
$F94    $0C40   SYS      $C40            ; System call to C40
$F96    $87AD   UNKNOWN  87AD            ; Unknown 8xxx instruction
$F98    $0B38   SYS      $B38            ; System call to B38
$F9A    $7BC6   ADD      VB, #C6         ; Add 198 to VB
$F9C    $45A5   SNE      V5, #A5         ; Skip if V5 != 165
$F9E    $2B16   CALL     $B16            ; Call subroutine at B16
$FA0    $8A27   SUBN     VA, V2          ; VA = V2 - VA, VF = !borrow
$FA2    $DD9D   DRW      VD, V9, #D      ; Draw 13-byte sprite at VD, V9
$FA4    $6FCF   LD       VF, #CF         ; Load 207 into VF
$FA6    $11B2   JP       $1B2            ; Jump to 1B2
$FA8    $16B0   JP       $6B0            ; Jump to 6B0
$FAA    $010B   SYS      $10B            ; System call to 10B
$FAC    $E645   UNKNOWN  $E645           ; Unknown Exxx instruction
$FAE    $B630   JP       V0, $630        ; Jump to V0 + 630
$FB0    $99B6   UNKNOWN  $99B6           ; Unknown 9xxx instruction
$FB2    $40A3   SNE      V0, #A3         ; Skip if V0 != 163
$FB4    $BFC0   JP       V0, $FC0        ; Jump to V0 + FC0
$FB6    $8CBB   UNKNOWN  8CBB            ; Unknown 8xxx instruction
$FB8    $5919   UNKNOWN  $5919           ; Unknown 5xxx instruction
$FBA    $4159   SNE      V1, #59         ; Skip if V1 != 89
$FBC    $4D26   SNE      VD, #26         ; Skip if VD != 38
$FBE    $A624   LD       I, $624         ; Load 624 into I
$FC0    $E35B   UNKNOWN  $E35B           ; Unknown Exxx instruction
$FC2    $F11D   UNKNOWN  F11D            ; Unknown Fxxx instruction
$FC4    $AE45   LD       I, $E45         ; Load E45 into I
$FC6    $4F1F   SNE      VF, #1F         ; Skip if VF != 31
$FC8    $12BB   JP       $2BB            ; Jump to 2BB
$FCA    $6995   LD       V9, #95         ; Load 149 into V9
$FCC    $C2D4   RND      V2, #D4         ; V2 = random & D4
$FCE    $EB54   UNKNOWN  $EB54           ; Unknown Exxx instruction
$FD0    $3650   SE       V6, #50         ; Skip if V6 == 80
$FD2    $9256   UNKNOWN  $9256           ; Unknown 9xxx instruction
$FD4    $87EF   UNKNOWN  87EF            ; Unknown 8xxx instruction
$FD6    $8450   LD       V4, V5          ; V4 = V5
$FD8    $33D5   SE       V3, #D5         ; Skip if V3 == 213
$FDA    $FA8F   UNKNOWN  FA8F            ; Unknown Fxxx instruction
$FDC    $A6B2   LD       I, $6B2         ; Load 6B2 into I
$FDE    $181A   JP       $81A            ; Jump to 81A
$FE0    $2111   CALL     $111            ; Call subroutine at 111
$FE2    $E823   UNKNOWN  $E823           ; Unknown Exxx instruction
$FE4    $5D11   UNKNOWN  $5D11           ; Unknown 5xxx instruction
$FE6    $A844   LD       I, $844         ; Load 844 into I
$FE8    $CDF9   RND      VD, #F9         ; VD = random & F9
$FEA    $4ABF   SNE      VA, #BF         ; Skip if VA != 191
$FEC    $51BF   UNKNOWN  $51BF           ; Unknown 5xxx instruction
$FEE    $91D1   UNKNOWN  $91D1           ; Unknown 9xxx instruction
$FF0    $B4F0   JP       V0, $4F0        ; Jump to V0 + 4F0
$FF2    $0D65   SYS      $D65            ; System call to D65
$FF4    $EAD2   UNKNOWN  $EAD2           ; Unknown Exxx instruction
$FF6    $840E   SHL      V4              ; V4 <<= 1, VF = MSB
$FF8    $FDE8   UNKNOWN  FDE8            ; Unknown Fxxx instruction
$FFA    $D1B2   DRW      V1, VB, #2      ; Draw 2-byte sprite at V1, VB
$FFC    $74D3   ADD      V4, #D3         ; Add 211 to V4
$FFE    $D94B   DRW      V9, V4, #B      ; Draw 11-byte sprite at V9, V4

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 488 (27.2%)
  LD      : 253 (14.1%)
  JP      : 202 (11.3%)
  SNE     : 138 ( 7.7%)
  SE      : 122 ( 6.8%)
  CALL    : 122 ( 6.8%)
  ADD     : 118 ( 6.6%)
  DRW     : 115 ( 6.4%)
  RND     : 111 ( 6.2%)
  SYS     :  96 ( 5.4%)
  XOR     :   7 ( 0.4%)
  SUB     :   6 ( 0.3%)
  AND     :   4 ( 0.2%)
  OR      :   3 ( 0.2%)
  SHR     :   3 ( 0.2%)
  SUBN    :   3 ( 0.2%)
  SHL     :   1 ( 0.1%)

Memory Operations: 371 (20.7%)
Arithmetic Operations: 141 (7.9%)
