
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B4515D01_I09290_C1001_c481100e5473.ch8
ROM Size: 3584 bytes
Instructions Found: 1791

DISCOVERY INFORMATION:
Batch: 4515
Instance: 9290
Direction: ascending
Final Array: [0, 0, 0, 5, 36, 42, 153, 207]
Operations: R:0 W:1 C:54 S:5

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 106
Sort Array References:
  $216: LD I, $D03 ; Load D03 into I
  $22A: LD I, $4B1 ; Load 4B1 into I
  $25C: LD I, $007 ; Load 007 into I
  $2A0: LD I, $16F ; Load 16F into I
  $2A2: LD I, $BD7 ; Load BD7 into I
  $2B2: LD I, $EB6 ; Load EB6 into I
  $2D2: LD I, $E60 ; Load E60 into I
  $2E8: LD I, $76D ; Load 76D into I
  $318: LD I, $697 ; Load 697 into I
  $31A: LD I, $925 ; Load 925 into I
  $32A: LD I, $BCE ; Load BCE into I
  $3CA: LD I, $957 ; Load 957 into I
  $3D0: LD I, $D07 ; Load D07 into I
  $3EA: LD I, $D05 ; Load D05 into I
  $44C: LD I, $227 ; Load 227 into I
  $464: LD I, $E55 ; Load E55 into I
  $482: LD I, $B2E ; Load B2E into I
  $4B0: LD I, $D4F ; Load D4F into I
  $51A: LD I, $815 ; Load 815 into I
  $52A: LD I, $58D ; Load 58D into I
  $530: LD I, $5DA ; Load 5DA into I
  $532: LD I, $EED ; Load EED into I
  $548: LD I, $C50 ; Load C50 into I
  $54A: LD I, $3FD ; Load 3FD into I
  $596: LD I, $240 ; Load 240 into I
  $5B0: LD I, $3C6 ; Load 3C6 into I
  $5F0: LD I, $79B ; Load 79B into I
  $620: LD I, $63E ; Load 63E into I
  $65A: LD I, $679 ; Load 679 into I
  $660: LD I, $CB0 ; Load CB0 into I
  $662: LD I, $326 ; Load 326 into I
  $6B0: LD I, $BD1 ; Load BD1 into I
  $6CE: LD I, $AB4 ; Load AB4 into I
  $6E0: LD I, $3FF ; Load 3FF into I
  $706: LD I, $376 ; Load 376 into I
  $726: LD I, $2B3 ; Load 2B3 into I
  $73C: LD I, $74B ; Load 74B into I
  $74A: LD I, $BB1 ; Load BB1 into I
  $7A6: LD I, $67C ; Load 67C into I
  $7BA: LD I, $063 ; Load 063 into I
  $82A: LD I, $25F ; Load 25F into I
  $842: LD I, $D7C ; Load D7C into I
  $876: LD I, $740 ; Load 740 into I
  $888: LD I, $35E ; Load 35E into I
  $894: LD I, $B1A ; Load B1A into I
  $8A0: LD I, $871 ; Load 871 into I
  $8A6: LD I, $85B ; Load 85B into I
  $8DE: LD I, $913 ; Load 913 into I
  $97A: LD I, $D22 ; Load D22 into I
  $9A8: LD I, $BFD ; Load BFD into I
  $9C6: LD I, $26B ; Load 26B into I
  $9D0: LD I, $895 ; Load 895 into I
  $9FA: LD I, $7BF ; Load 7BF into I
  $A38: LD I, $097 ; Load 097 into I
  $AB6: LD I, $2E3 ; Load 2E3 into I
  $AF4: LD I, $D4F ; Load D4F into I
  $B82: LD I, $D4C ; Load D4C into I
  $B92: LD I, $76E ; Load 76E into I
  $BDA: LD I, $EE0 ; Load EE0 into I
  $BF0: LD I, $F15 ; Load F15 into I
  $C06: LD I, $B1A ; Load B1A into I
  $C0C: LD I, $F22 ; Load F22 into I
  $C26: LD I, $EE5 ; Load EE5 into I
  $C2A: LD I, $ED0 ; Load ED0 into I
  $C40: LD I, $6D1 ; Load 6D1 into I
  $C54: LD I, $63A ; Load 63A into I
  $C5C: LD I, $6E1 ; Load 6E1 into I
  $C74: LD I, $B3F ; Load B3F into I
  $C7E: LD I, $C96 ; Load C96 into I
  $CB4: LD I, $973 ; Load 973 into I
  $CD2: LD I, $B14 ; Load B14 into I
  $CE2: LD I, $E3F ; Load E3F into I
  $CE6: LD I, $60A ; Load 60A into I
  $CF8: LD I, $1CE ; Load 1CE into I
  $CFE: LD I, $410 ; Load 410 into I
  $D02: LD I, $5AC ; Load 5AC into I
  $D1C: LD I, $885 ; Load 885 into I
  $D2A: LD I, $6E1 ; Load 6E1 into I
  $D34: LD I, $C04 ; Load C04 into I
  $D46: LD I, $665 ; Load 665 into I
  $D50: LD I, $EE9 ; Load EE9 into I
  $D70: LD I, $CEF ; Load CEF into I
  $D98: LD I, $C9E ; Load C9E into I
  $DD2: LD I, $0D1 ; Load 0D1 into I
  $DF4: LD I, $95B ; Load 95B into I
  $E28: LD I, $DFD ; Load DFD into I
  $E2C: LD I, $1EF ; Load 1EF into I
  $E38: LD I, $63B ; Load 63B into I
  $E56: LD I, $5E1 ; Load 5E1 into I
  $E5E: LD I, $79A ; Load 79A into I
  $E78: LD I, $CB1 ; Load CB1 into I
  $E7E: LD I, $E1B ; Load E1B into I
  $EA4: LD I, $FF1 ; Load FF1 into I
  $EE6: LD I, $DBD ; Load DBD into I
  $F02: LD I, $68D ; Load 68D into I
  $F08: LD I, $55D ; Load 55D into I
  $F20: LD I, $6D8 ; Load 6D8 into I
  $F3E: LD I, $ABE ; Load ABE into I
  $F42: LD I, $91C ; Load 91C into I
  $F64: LD I, $F85 ; Load F85 into I
  $F6E: LD I, $672 ; Load 672 into I
  $F7E: ADD I, VD ; I ADDRESS MANIPULATION
  $FAA: LD I, $94F ; Load 94F into I
  $FD0: LD I, $CD0 ; Load CD0 into I
  $FDA: LD I, $322 ; Load 322 into I
  $FF8: LD I, $0A1 ; Load 0A1 into I

CONTROL FLOW ANALYSIS:
Jumps: 235
Calls: 111
Branches: 228
Loops: 125
Loop Structures:
  $204 -> $113 (backward jump)
  $2E6 -> $21C (backward jump)
  $310 -> $310 (backward jump)
  $3E0 -> $0EB (backward jump)
  $416 -> $189 (backward jump)
  $4BA -> $223 (backward jump)
  $4EE -> $2A1 (backward jump)
  $4F0 -> $13E (backward jump)
  $502 -> $179 (backward jump)
  $524 -> $418 (backward jump)
  $550 -> $09A (backward jump)
  $55E -> $206 (backward jump)
  $570 -> $0B4 (backward jump)
  $5A2 -> $071 (backward jump)
  $5A6 -> $154 (backward jump)
  $600 -> $421 (backward jump)
  $64A -> $158 (backward jump)
  $64C -> $344 (backward jump)
  $676 -> $2B0 (backward jump)
  $67E -> $362 (backward jump)
  $684 -> $3D9 (backward jump)
  $68E -> $1F6 (backward jump)
  $6FC -> $1E2 (backward jump)
  $708 -> $391 (backward jump)
  $712 -> $16F (backward jump)
  $722 -> $64F (backward jump)
  $728 -> $49B (backward jump)
  $756 -> $6E8 (backward jump)
  $760 -> $6B0 (backward jump)
  $79E -> $34D (backward jump)
  $7C6 -> $223 (backward jump)
  $7F6 -> $067 (backward jump)
  $800 -> $4B0 (backward jump)
  $826 -> $3BB (backward jump)
  $834 -> $061 (backward jump)
  $836 -> $6B9 (backward jump)
  $846 -> $217 (backward jump)
  $854 -> $01C (backward jump)
  $874 -> $4BD (backward jump)
  $8A2 -> $377 (backward jump)
  $8BE -> $29C (backward jump)
  $8DC -> $06B (backward jump)
  $8F2 -> $456 (backward jump)
  $972 -> $014 (backward jump)
  $9A0 -> $3FA (backward jump)
  $9A4 -> $82C (backward jump)
  $9BE -> $4EA (backward jump)
  $9CE -> $6F7 (backward jump)
  $9D8 -> $8EE (backward jump)
  $9DE -> $426 (backward jump)
  $9E8 -> $175 (backward jump)
  $A0A -> $2C4 (backward jump)
  $A18 -> $2E8 (backward jump)
  $A44 -> $133 (backward jump)
  $A5E -> $06D (backward jump)
  $A60 -> $504 (backward jump)
  $A72 -> $23D (backward jump)
  $A78 -> $69B (backward jump)
  $A8C -> $2A5 (backward jump)
  $AF2 -> $195 (backward jump)
  $B14 -> $4E4 (backward jump)
  $B20 -> $8B3 (backward jump)
  $B38 -> $6D4 (backward jump)
  $B62 -> $8C8 (backward jump)
  $B70 -> $99A (backward jump)
  $B7E -> $A34 (backward jump)
  $B90 -> $7F0 (backward jump)
  $BB0 -> $069 (backward jump)
  $BC2 -> $868 (backward jump)
  $BE0 -> $272 (backward jump)
  $C10 -> $7CC (backward jump)
  $C34 -> $422 (backward jump)
  $C3E -> $40F (backward jump)
  $C56 -> $24F (backward jump)
  $C9C -> $3CC (backward jump)
  $CBC -> $B8C (backward jump)
  $CC0 -> $185 (backward jump)
  $CC2 -> $34A (backward jump)
  $D0C -> $64C (backward jump)
  $D10 -> $548 (backward jump)
  $D16 -> $A90 (backward jump)
  $D18 -> $3E8 (backward jump)
  $D3C -> $95E (backward jump)
  $D3E -> $452 (backward jump)
  $D68 -> $AAF (backward jump)
  $D6E -> $AEF (backward jump)
  $D74 -> $5E9 (backward jump)
  $D78 -> $3B5 (backward jump)
  $D7E -> $C7F (backward jump)
  $D80 -> $4C5 (backward jump)
  $D90 -> $B29 (backward jump)
  $DA0 -> $9A8 (backward jump)
  $DA2 -> $5E6 (backward jump)
  $DB4 -> $673 (backward jump)
  $DD4 -> $931 (backward jump)
  $DE2 -> $DBB (backward jump)
  $DF2 -> $D1B (backward jump)
  $E34 -> $D3B (backward jump)
  $E70 -> $B22 (backward jump)
  $E7C -> $8EB (backward jump)
  $EA8 -> $6AA (backward jump)
  $EAE -> $733 (backward jump)
  $EBA -> $9B9 (backward jump)
  $EBC -> $016 (backward jump)
  $ED2 -> $C2E (backward jump)
  $EE4 -> $D46 (backward jump)
  $EEC -> $327 (backward jump)
  $F16 -> $D3A (backward jump)
  $F40 -> $05A (backward jump)
  $F44 -> $4AA (backward jump)
  $F56 -> $A36 (backward jump)
  $F58 -> $74C (backward jump)
  $F5A -> $2F2 (backward jump)
  $F7A -> $F77 (backward jump)
  $F86 -> $AF3 (backward jump)
  $F8A -> $14C (backward jump)
  $F8C -> $11B (backward jump)
  $F9C -> $44D (backward jump)
  $FAC -> $7B7 (backward jump)
  $FB4 -> $6F9 (backward jump)
  $FBE -> $16E (backward jump)
  $FC0 -> $847 (backward jump)
  $FEE -> $E3E (backward jump)
  $FF2 -> $B10 (backward jump)
  $FFA -> $D0B (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $ED26   UNKNOWN  $ED26           ; Unknown Exxx instruction
$202    $0CAC   SYS      $CAC            ; System call to CAC
$204    $B113   JP       V0, $113        ; Jump to V0 + 113
$206    $82A3   XOR      V2, VA          ; V2 ^= VA
$208    $390D   SE       V9, #0D         ; Skip if V9 == 13
$20A    $52BD   UNKNOWN  $52BD           ; Unknown 5xxx instruction
$20C    $4B15   SNE      VB, #15         ; Skip if VB != 21
$20E    $5028   UNKNOWN  $5028           ; Unknown 5xxx instruction
$210    $F6A9   UNKNOWN  F6A9            ; Unknown Fxxx instruction
$212    $8C10   LD       VC, V1          ; VC = V1
$214    $8CCC   UNKNOWN  8CCC            ; Unknown 8xxx instruction
$216    $AD03   LD       I, $D03         ; Load D03 into I
$218    $CACF   RND      VA, #CF         ; VA = random & CF
$21A    $E895   UNKNOWN  $E895           ; Unknown Exxx instruction
$21C    $E5E8   UNKNOWN  $E5E8           ; Unknown Exxx instruction
$21E    $5683   UNKNOWN  $5683           ; Unknown 5xxx instruction
$220    $DF92   DRW      VF, V9, #2      ; Draw 2-byte sprite at VF, V9
$222    $4A9D   SNE      VA, #9D         ; Skip if VA != 157
$224    $C2E5   RND      V2, #E5         ; V2 = random & E5
$226    $8608   UNKNOWN  8608            ; Unknown 8xxx instruction
$228    $5765   UNKNOWN  $5765           ; Unknown 5xxx instruction
$22A    $A4B1   LD       I, $4B1         ; Load 4B1 into I
$22C    $6F15   LD       VF, #15         ; Load 21 into VF
$22E    $01B7   SYS      $1B7            ; System call to 1B7
$230    $CC70   RND      VC, #70         ; VC = random & 70
$232    $EC67   UNKNOWN  $EC67           ; Unknown Exxx instruction
$234    $32C5   SE       V2, #C5         ; Skip if V2 == 197
$236    $2C61   CALL     $C61            ; Call subroutine at C61
$238    $913E   UNKNOWN  $913E           ; Unknown 9xxx instruction
$23A    $7566   ADD      V5, #66         ; Add 102 to V5
$23C    $9F8E   UNKNOWN  $9F8E           ; Unknown 9xxx instruction
$23E    $9AD5   UNKNOWN  $9AD5           ; Unknown 9xxx instruction
$240    $D03C   DRW      V0, V3, #C      ; Draw 12-byte sprite at V0, V3
$242    $0127   SYS      $127            ; System call to 127
$244    $0844   SYS      $844            ; System call to 844
$246    $7E5D   ADD      VE, #5D         ; Add 93 to VE
$248    $88F5   SUB      V8, VF          ; V8 -= VF, VF = !borrow
$24A    $3329   SE       V3, #29         ; Skip if V3 == 41
$24C    $7190   ADD      V1, #90         ; Add 144 to V1
$24E    $4090   SNE      V0, #90         ; Skip if V0 != 144
$250    $7E15   ADD      VE, #15         ; Add 21 to VE
$252    $69DB   LD       V9, #DB         ; Load 219 into V9
$254    $B27F   JP       V0, $27F        ; Jump to V0 + 27F
$256    $61D1   LD       V1, #D1         ; Load 209 into V1
$258    $77E2   ADD      V7, #E2         ; Add 226 to V7
$25A    $0C4A   SYS      $C4A            ; System call to C4A
$25C    $A007   LD       I, $007         ; Load 007 into I
$25E    $84B9   UNKNOWN  84B9            ; Unknown 8xxx instruction
$260    $2D1D   CALL     $D1D            ; Call subroutine at D1D
$262    $CC3A   RND      VC, #3A         ; VC = random & 3A
$264    $3331   SE       V3, #31         ; Skip if V3 == 49
$266    $2E68   CALL     $E68            ; Call subroutine at E68
$268    $6881   LD       V8, #81         ; Load 129 into V8
$26A    $0167   SYS      $167            ; System call to 167
$26C    $13C6   JP       $3C6            ; Jump to 3C6
$26E    $620F   LD       V2, #0F         ; Load 15 into V2
$270    $C220   RND      V2, #20         ; V2 = random & 20
$272    $6F8A   LD       VF, #8A         ; Load 138 into VF
$274    $6D9D   LD       VD, #9D         ; Load 157 into VD
$276    $47C3   SNE      V7, #C3         ; Skip if V7 != 195
$278    $17AF   JP       $7AF            ; Jump to 7AF
$27A    $BE41   JP       V0, $E41        ; Jump to V0 + E41
$27C    $8260   LD       V2, V6          ; V2 = V6
$27E    $0916   SYS      $916            ; System call to 916
$280    $1921   JP       $921            ; Jump to 921
$282    $BE7B   JP       V0, $E7B        ; Jump to V0 + E7B
$284    $B541   JP       V0, $541        ; Jump to V0 + 541
$286    $F541   UNKNOWN  F541            ; Unknown Fxxx instruction
$288    $C098   RND      V0, #98         ; V0 = random & 98
$28A    $DC85   DRW      VC, V8, #5      ; Draw 5-byte sprite at VC, V8
$28C    $52AC   UNKNOWN  $52AC           ; Unknown 5xxx instruction
$28E    $CFE4   RND      VF, #E4         ; VF = random & E4
$290    $58AD   UNKNOWN  $58AD           ; Unknown 5xxx instruction
$292    $23C2   CALL     $3C2            ; Call subroutine at 3C2
$294    $C51E   RND      V5, #1E         ; V5 = random & 1E
$296    $5123   UNKNOWN  $5123           ; Unknown 5xxx instruction
$298    $0CFE   SYS      $CFE            ; System call to CFE
$29A    $B846   JP       V0, $846        ; Jump to V0 + 846
$29C    $7F18   ADD      VF, #18         ; Add 24 to VF
$29E    $D6DF   DRW      V6, VD, #F      ; Draw 15-byte sprite at V6, VD
$2A0    $A16F   LD       I, $16F         ; Load 16F into I
$2A2    $ABD7   LD       I, $BD7         ; Load BD7 into I
$2A4    $31D4   SE       V1, #D4         ; Skip if V1 == 212
$2A6    $C342   RND      V3, #42         ; V3 = random & 42
$2A8    $91A8   UNKNOWN  $91A8           ; Unknown 9xxx instruction
$2AA    $96AB   UNKNOWN  $96AB           ; Unknown 9xxx instruction
$2AC    $96CA   UNKNOWN  $96CA           ; Unknown 9xxx instruction
$2AE    $C7F7   RND      V7, #F7         ; V7 = random & F7
$2B0    $F292   UNKNOWN  F292            ; Unknown Fxxx instruction
$2B2    $AEB6   LD       I, $EB6         ; Load EB6 into I
$2B4    $7859   ADD      V8, #59         ; Add 89 to V8
$2B6    $E844   UNKNOWN  $E844           ; Unknown Exxx instruction
$2B8    $FE42   UNKNOWN  FE42            ; Unknown Fxxx instruction
$2BA    $FBAD   UNKNOWN  FBAD            ; Unknown Fxxx instruction
$2BC    $2A86   CALL     $A86            ; Call subroutine at A86
$2BE    $5FDE   UNKNOWN  $5FDE           ; Unknown 5xxx instruction
$2C0    $DBAD   DRW      VB, VA, #D      ; Draw 13-byte sprite at VB, VA
$2C2    $F0E9   UNKNOWN  F0E9            ; Unknown Fxxx instruction
$2C4    $DEFB   DRW      VE, VF, #B      ; Draw 11-byte sprite at VE, VF
$2C6    $F66C   UNKNOWN  F66C            ; Unknown Fxxx instruction
$2C8    $06D6   SYS      $6D6            ; System call to 6D6
$2CA    $9CA1   UNKNOWN  $9CA1           ; Unknown 9xxx instruction
$2CC    $042A   SYS      $42A            ; System call to 42A
$2CE    $D50E   DRW      V5, V0, #E      ; Draw 14-byte sprite at V5, V0
$2D0    $6EB5   LD       VE, #B5         ; Load 181 into VE
$2D2    $AE60   LD       I, $E60         ; Load E60 into I
$2D4    $3FC1   SE       VF, #C1         ; Skip if VF == 193
$2D6    $4146   SNE      V1, #46         ; Skip if V1 != 70
$2D8    $6516   LD       V5, #16         ; Load 22 into V5
$2DA    $5A93   UNKNOWN  $5A93           ; Unknown 5xxx instruction
$2DC    $1E22   JP       $E22            ; Jump to E22
$2DE    $1E7F   JP       $E7F            ; Jump to E7F
$2E0    $492A   SNE      V9, #2A         ; Skip if V9 != 42
$2E2    $17ED   JP       $7ED            ; Jump to 7ED
$2E4    $07A2   SYS      $7A2            ; System call to 7A2
$2E6    $B21C   JP       V0, $21C        ; Jump to V0 + 21C
$2E8    $A76D   LD       I, $76D         ; Load 76D into I
$2EA    $369C   SE       V6, #9C         ; Skip if V6 == 156
$2EC    $220E   CALL     $20E            ; Call subroutine at 20E
$2EE    $5E4C   UNKNOWN  $5E4C           ; Unknown 5xxx instruction
$2F0    $D137   DRW      V1, V3, #7      ; Draw 7-byte sprite at V1, V3
$2F2    $46BA   SNE      V6, #BA         ; Skip if V6 != 186
$2F4    $791A   ADD      V9, #1A         ; Add 26 to V9
$2F6    $833E   SHL      V3              ; V3 <<= 1, VF = MSB
$2F8    $EF13   UNKNOWN  $EF13           ; Unknown Exxx instruction
$2FA    $16DF   JP       $6DF            ; Jump to 6DF
$2FC    $786E   ADD      V8, #6E         ; Add 110 to V8
$2FE    $273A   CALL     $73A            ; Call subroutine at 73A
$302    $0005   SYS      $005            ; System call to 005
$304    $242A   CALL     $42A            ; Call subroutine at 42A
$306    $99CF   UNKNOWN  $99CF           ; Unknown 9xxx instruction
$308    $5FC9   UNKNOWN  $5FC9           ; Unknown 5xxx instruction
$30A    $749D   ADD      V4, #9D         ; Add 157 to V4
$30C    $ED3C   UNKNOWN  $ED3C           ; Unknown Exxx instruction
$30E    $DF0D   DRW      VF, V0, #D      ; Draw 13-byte sprite at VF, V0
$310    $1310   JP       $310            ; Jump to 310
$312    $F977   UNKNOWN  F977            ; Unknown Fxxx instruction
$314    $0560   SYS      $560            ; System call to 560
$316    $5B96   UNKNOWN  $5B96           ; Unknown 5xxx instruction
$318    $A697   LD       I, $697         ; Load 697 into I
$31A    $A925   LD       I, $925         ; Load 925 into I
$31C    $20B7   CALL     $0B7            ; Call subroutine at 0B7
$31E    $53D9   UNKNOWN  $53D9           ; Unknown 5xxx instruction
$320    $B602   JP       V0, $602        ; Jump to V0 + 602
$322    $3801   SE       V8, #01         ; Skip if V8 == 1
$324    $C7C2   RND      V7, #C2         ; V7 = random & C2
$326    $3740   SE       V7, #40         ; Skip if V7 == 64
$328    $4BC0   SNE      VB, #C0         ; Skip if VB != 192
$32A    $ABCE   LD       I, $BCE         ; Load BCE into I
$32C    $18E5   JP       $8E5            ; Jump to 8E5
$32E    $8008   UNKNOWN  8008            ; Unknown 8xxx instruction
$330    $E9DD   UNKNOWN  $E9DD           ; Unknown Exxx instruction
$332    $BE09   JP       V0, $E09        ; Jump to V0 + E09
$334    $9D72   UNKNOWN  $9D72           ; Unknown 9xxx instruction
$336    $C7E7   RND      V7, #E7         ; V7 = random & E7
$338    $C146   RND      V1, #46         ; V1 = random & 46
$33A    $D565   DRW      V5, V6, #5      ; Draw 5-byte sprite at V5, V6
$33C    $D6C7   DRW      V6, VC, #7      ; Draw 7-byte sprite at V6, VC
$33E    $0FF3   SYS      $FF3            ; System call to FF3
$340    $1ABB   JP       $ABB            ; Jump to ABB
$342    $73D9   ADD      V3, #D9         ; Add 217 to V3
$344    $429B   SNE      V2, #9B         ; Skip if V2 != 155
$346    $3F82   SE       VF, #82         ; Skip if VF == 130
$348    $D26E   DRW      V2, V6, #E      ; Draw 14-byte sprite at V2, V6
$34A    $9529   UNKNOWN  $9529           ; Unknown 9xxx instruction
$34C    $D31A   DRW      V3, V1, #A      ; Draw 10-byte sprite at V3, V1
$34E    $5261   UNKNOWN  $5261           ; Unknown 5xxx instruction
$350    $D80B   DRW      V8, V0, #B      ; Draw 11-byte sprite at V8, V0
$352    $6F2B   LD       VF, #2B         ; Load 43 into VF
$354    $4375   SNE      V3, #75         ; Skip if V3 != 117
$356    $293F   CALL     $93F            ; Call subroutine at 93F
$358    $BDA6   JP       V0, $DA6        ; Jump to V0 + DA6
$35A    $0B64   SYS      $B64            ; System call to B64
$35C    $91FA   UNKNOWN  $91FA           ; Unknown 9xxx instruction
$35E    $4DB5   SNE      VD, #B5         ; Skip if VD != 181
$360    $F39A   UNKNOWN  F39A            ; Unknown Fxxx instruction
$362    $546D   UNKNOWN  $546D           ; Unknown 5xxx instruction
$364    $526D   UNKNOWN  $526D           ; Unknown 5xxx instruction
$366    $4A72   SNE      VA, #72         ; Skip if VA != 114
$368    $E442   UNKNOWN  $E442           ; Unknown Exxx instruction
$36A    $E561   UNKNOWN  $E561           ; Unknown Exxx instruction
$36C    $C06D   RND      V0, #6D         ; V0 = random & 6D
$36E    $F0ED   UNKNOWN  F0ED            ; Unknown Fxxx instruction
$370    $1AD3   JP       $AD3            ; Jump to AD3
$372    $8C44   ADD      VC, V4          ; VC += V4, VF = carry
$374    $C619   RND      V6, #19         ; V6 = random & 19
$376    $3B38   SE       VB, #38         ; Skip if VB == 56
$378    $6E38   LD       VE, #38         ; Load 56 into VE
$37A    $7699   ADD      V6, #99         ; Add 153 to V6
$37C    $95D5   UNKNOWN  $95D5           ; Unknown 9xxx instruction
$37E    $62B5   LD       V2, #B5         ; Load 181 into V2
$380    $D67D   DRW      V6, V7, #D      ; Draw 13-byte sprite at V6, V7
$382    $E157   UNKNOWN  $E157           ; Unknown Exxx instruction
$384    $2205   CALL     $205            ; Call subroutine at 205
$386    $B9E3   JP       V0, $9E3        ; Jump to V0 + 9E3
$388    $CAFF   RND      VA, #FF         ; VA = random & FF
$38A    $7CC7   ADD      VC, #C7         ; Add 199 to VC
$38C    $29AF   CALL     $9AF            ; Call subroutine at 9AF
$38E    $8117   SUBN     V1, V1          ; V1 = V1 - V1, VF = !borrow
$390    $4930   SNE      V9, #30         ; Skip if V9 != 48
$392    $BEB1   JP       V0, $EB1        ; Jump to V0 + EB1
$394    $CBB6   RND      VB, #B6         ; VB = random & B6
$396    $9526   UNKNOWN  $9526           ; Unknown 9xxx instruction
$398    $3488   SE       V4, #88         ; Skip if V4 == 136
$39A    $3DF5   SE       VD, #F5         ; Skip if VD == 245
$39C    $F954   UNKNOWN  F954            ; Unknown Fxxx instruction
$39E    $5876   UNKNOWN  $5876           ; Unknown 5xxx instruction
$3A0    $EAB7   UNKNOWN  $EAB7           ; Unknown Exxx instruction
$3A2    $C468   RND      V4, #68         ; V4 = random & 68
$3A4    $6035   LD       V0, #35         ; Load 53 into V0
$3A6    $61A9   LD       V1, #A9         ; Load 169 into V1
$3A8    $9DDA   UNKNOWN  $9DDA           ; Unknown 9xxx instruction
$3AA    $3BFD   SE       VB, #FD         ; Skip if VB == 253
$3AC    $3193   SE       V1, #93         ; Skip if V1 == 147
$3AE    $37C9   SE       V7, #C9         ; Skip if V7 == 201
$3B0    $3DBC   SE       VD, #BC         ; Skip if VD == 188
$3B2    $EADA   UNKNOWN  $EADA           ; Unknown Exxx instruction
$3B4    $E518   UNKNOWN  $E518           ; Unknown Exxx instruction
$3B6    $52C3   UNKNOWN  $52C3           ; Unknown 5xxx instruction
$3B8    $7842   ADD      V8, #42         ; Add 66 to V8
$3BA    $D95F   DRW      V9, V5, #F      ; Draw 15-byte sprite at V9, V5
$3BC    $31DF   SE       V1, #DF         ; Skip if V1 == 223
$3BE    $7ABD   ADD      VA, #BD         ; Add 189 to VA
$3C0    $85C1   OR       V5, VC          ; V5 |= VC
$3C2    $00E9   SYS      $0E9            ; System call to 0E9
$3C4    $6E34   LD       VE, #34         ; Load 52 into VE
$3C6    $CD99   RND      VD, #99         ; VD = random & 99
$3C8    $5AEF   UNKNOWN  $5AEF           ; Unknown 5xxx instruction
$3CA    $A957   LD       I, $957         ; Load 957 into I
$3CC    $3BA1   SE       VB, #A1         ; Skip if VB == 161
$3CE    $D3BE   DRW      V3, VB, #E      ; Draw 14-byte sprite at V3, VB
$3D0    $AD07   LD       I, $D07         ; Load D07 into I
$3D2    $3333   SE       V3, #33         ; Skip if V3 == 51
$3D4    $2051   CALL     $051            ; Call subroutine at 051
$3D6    $E26C   UNKNOWN  $E26C           ; Unknown Exxx instruction
$3D8    $FA8D   UNKNOWN  FA8D            ; Unknown Fxxx instruction
$3DA    $4746   SNE      V7, #46         ; Skip if V7 != 70
$3DC    $D365   DRW      V3, V6, #5      ; Draw 5-byte sprite at V3, V6
$3DE    $093F   SYS      $93F            ; System call to 93F
$3E0    $B0EB   JP       V0, $0EB        ; Jump to V0 + 0EB
$3E2    $E950   UNKNOWN  $E950           ; Unknown Exxx instruction
$3E4    $B893   JP       V0, $893        ; Jump to V0 + 893
$3E6    $9072   UNKNOWN  $9072           ; Unknown 9xxx instruction
$3E8    $F403   UNKNOWN  F403            ; Unknown Fxxx instruction
$3EA    $AD05   LD       I, $D05         ; Load D05 into I
$3EC    $CDBF   RND      VD, #BF         ; VD = random & BF
$3EE    $EE2F   UNKNOWN  $EE2F           ; Unknown Exxx instruction
$3F0    $0685   SYS      $685            ; System call to 685
$3F2    $8F74   ADD      VF, V7          ; VF += V7, VF = carry
$3F4    $44FD   SNE      V4, #FD         ; Skip if V4 != 253
$3F6    $906E   UNKNOWN  $906E           ; Unknown 9xxx instruction
$3F8    $2747   CALL     $747            ; Call subroutine at 747
$3FA    $7D39   ADD      VD, #39         ; Add 57 to VD
$3FC    $BAF0   JP       V0, $AF0        ; Jump to V0 + AF0
$3FE    $E6C6   UNKNOWN  $E6C6           ; Unknown Exxx instruction
$400    $7FB7   ADD      VF, #B7         ; Add 183 to VF
$402    $0257   SYS      $257            ; System call to 257
$404    $2CF0   CALL     $CF0            ; Call subroutine at CF0
$406    $FFE7   UNKNOWN  FFE7            ; Unknown Fxxx instruction
$408    $168B   JP       $68B            ; Jump to 68B
$40A    $E3F3   UNKNOWN  $E3F3           ; Unknown Exxx instruction
$40C    $F03F   UNKNOWN  F03F            ; Unknown Fxxx instruction
$40E    $987C   UNKNOWN  $987C           ; Unknown 9xxx instruction
$410    $663A   LD       V6, #3A         ; Load 58 into V6
$412    $5F86   UNKNOWN  $5F86           ; Unknown 5xxx instruction
$414    $BB2A   JP       V0, $B2A        ; Jump to V0 + B2A
$416    $1189   JP       $189            ; Jump to 189
$418    $0D21   SYS      $D21            ; System call to D21
$41A    $88EA   UNKNOWN  88EA            ; Unknown 8xxx instruction
$41C    $54FF   UNKNOWN  $54FF           ; Unknown 5xxx instruction
$41E    $BCF1   JP       V0, $CF1        ; Jump to V0 + CF1
$420    $BD01   JP       V0, $D01        ; Jump to V0 + D01
$422    $272A   CALL     $72A            ; Call subroutine at 72A
$424    $5A34   UNKNOWN  $5A34           ; Unknown 5xxx instruction
$426    $7BF1   ADD      VB, #F1         ; Add 241 to VB
$428    $5F55   UNKNOWN  $5F55           ; Unknown 5xxx instruction
$42A    $7921   ADD      V9, #21         ; Add 33 to V9
$42C    $F7C9   UNKNOWN  F7C9            ; Unknown Fxxx instruction
$42E    $62BF   LD       V2, #BF         ; Load 191 into V2
$430    $CDE3   RND      VD, #E3         ; VD = random & E3
$432    $235E   CALL     $35E            ; Call subroutine at 35E
$434    $CE40   RND      VE, #40         ; VE = random & 40
$436    $858D   UNKNOWN  858D            ; Unknown 8xxx instruction
$438    $8B07   SUBN     VB, V0          ; VB = V0 - VB, VF = !borrow
$43A    $01C2   SYS      $1C2            ; System call to 1C2
$43C    $6EE8   LD       VE, #E8         ; Load 232 into VE
$43E    $18F0   JP       $8F0            ; Jump to 8F0
$440    $40F3   SNE      V0, #F3         ; Skip if V0 != 243
$442    $FFBC   UNKNOWN  FFBC            ; Unknown Fxxx instruction
$444    $E0D2   UNKNOWN  $E0D2           ; Unknown Exxx instruction
$446    $9946   UNKNOWN  $9946           ; Unknown 9xxx instruction
$448    $55C3   UNKNOWN  $55C3           ; Unknown 5xxx instruction
$44A    $FC9D   UNKNOWN  FC9D            ; Unknown Fxxx instruction
$44C    $A227   LD       I, $227         ; Load 227 into I
$44E    $F5F7   UNKNOWN  F5F7            ; Unknown Fxxx instruction
$450    $B791   JP       V0, $791        ; Jump to V0 + 791
$452    $C0C0   RND      V0, #C0         ; V0 = random & C0
$454    $D56A   DRW      V5, V6, #A      ; Draw 10-byte sprite at V5, V6
$456    $48E5   SNE      V8, #E5         ; Skip if V8 != 229
$458    $0F1A   SYS      $F1A            ; System call to F1A
$45A    $EE35   UNKNOWN  $EE35           ; Unknown Exxx instruction
$45C    $5D76   UNKNOWN  $5D76           ; Unknown 5xxx instruction
$45E    $76D8   ADD      V6, #D8         ; Add 216 to V6
$460    $1598   JP       $598            ; Jump to 598
$462    $935D   UNKNOWN  $935D           ; Unknown 9xxx instruction
$464    $AE55   LD       I, $E55         ; Load E55 into I
$466    $64CA   LD       V4, #CA         ; Load 202 into V4
$468    $E837   UNKNOWN  $E837           ; Unknown Exxx instruction
$46A    $EC84   UNKNOWN  $EC84           ; Unknown Exxx instruction
$46C    $B813   JP       V0, $813        ; Jump to V0 + 813
$46E    $2B63   CALL     $B63            ; Call subroutine at B63
$470    $99B0   SNE      V9, VB          ; Skip if V9 != VB
$472    $D872   DRW      V8, V7, #2      ; Draw 2-byte sprite at V8, V7
$474    $9588   UNKNOWN  $9588           ; Unknown 9xxx instruction
$476    $1590   JP       $590            ; Jump to 590
$478    $27C3   CALL     $7C3            ; Call subroutine at 7C3
$47A    $8082   AND      V0, V8          ; V0 &= V8
$47C    $F402   UNKNOWN  F402            ; Unknown Fxxx instruction
$47E    $736A   ADD      V3, #6A         ; Add 106 to V3
$480    $0644   SYS      $644            ; System call to 644
$482    $AB2E   LD       I, $B2E         ; Load B2E into I
$484    $BEF2   JP       V0, $EF2        ; Jump to V0 + EF2
$486    $FAEB   UNKNOWN  FAEB            ; Unknown Fxxx instruction
$488    $C66A   RND      V6, #6A         ; V6 = random & 6A
$48A    $BF11   JP       V0, $F11        ; Jump to V0 + F11
$48C    $B856   JP       V0, $856        ; Jump to V0 + 856
$48E    $F25F   UNKNOWN  F25F            ; Unknown Fxxx instruction
$490    $DCC4   DRW      VC, VC, #4      ; Draw 4-byte sprite at VC, VC
$492    $93CE   UNKNOWN  $93CE           ; Unknown 9xxx instruction
$494    $CC02   RND      VC, #02         ; VC = random & 02
$496    $5128   UNKNOWN  $5128           ; Unknown 5xxx instruction
$498    $CD46   RND      VD, #46         ; VD = random & 46
$49A    $E2C4   UNKNOWN  $E2C4           ; Unknown Exxx instruction
$49C    $2BDC   CALL     $BDC            ; Call subroutine at BDC
$49E    $2F20   CALL     $F20            ; Call subroutine at F20
$4A0    $45B5   SNE      V5, #B5         ; Skip if V5 != 181
$4A2    $635B   LD       V3, #5B         ; Load 91 into V3
$4A4    $3DA3   SE       VD, #A3         ; Skip if VD == 163
$4A6    $4417   SNE      V4, #17         ; Skip if V4 != 23
$4A8    $E57C   UNKNOWN  $E57C           ; Unknown Exxx instruction
$4AA    $9E38   UNKNOWN  $9E38           ; Unknown 9xxx instruction
$4AC    $181D   JP       $81D            ; Jump to 81D
$4AE    $49FD   SNE      V9, #FD         ; Skip if V9 != 253
$4B0    $AD4F   LD       I, $D4F         ; Load D4F into I
$4B2    $F582   UNKNOWN  F582            ; Unknown Fxxx instruction
$4B4    $8B22   AND      VB, V2          ; VB &= V2
$4B6    $2DBB   CALL     $DBB            ; Call subroutine at DBB
$4B8    $3FD5   SE       VF, #D5         ; Skip if VF == 213
$4BA    $1223   JP       $223            ; Jump to 223
$4BC    $4EF9   SNE      VE, #F9         ; Skip if VE != 249
$4BE    $22A0   CALL     $2A0            ; Call subroutine at 2A0
$4C0    $E41E   UNKNOWN  $E41E           ; Unknown Exxx instruction
$4C2    $F84D   UNKNOWN  F84D            ; Unknown Fxxx instruction
$4C4    $0A5C   SYS      $A5C            ; System call to A5C
$4C6    $43CB   SNE      V3, #CB         ; Skip if V3 != 203
$4C8    $1B22   JP       $B22            ; Jump to B22
$4CA    $7A99   ADD      VA, #99         ; Add 153 to VA
$4CC    $6935   LD       V9, #35         ; Load 53 into V9
$4CE    $914E   UNKNOWN  $914E           ; Unknown 9xxx instruction
$4D0    $BB11   JP       V0, $B11        ; Jump to V0 + B11
$4D2    $CAB5   RND      VA, #B5         ; VA = random & B5
$4D4    $E18A   UNKNOWN  $E18A           ; Unknown Exxx instruction
$4D6    $C994   RND      V9, #94         ; V9 = random & 94
$4D8    $1D7D   JP       $D7D            ; Jump to D7D
$4DA    $9A37   UNKNOWN  $9A37           ; Unknown 9xxx instruction
$4DC    $1C69   JP       $C69            ; Jump to C69
$4DE    $2990   CALL     $990            ; Call subroutine at 990
$4E0    $82C3   XOR      V2, VC          ; V2 ^= VC
$4E2    $5294   UNKNOWN  $5294           ; Unknown 5xxx instruction
$4E4    $C150   RND      V1, #50         ; V1 = random & 50
$4E6    $38EA   SE       V8, #EA         ; Skip if V8 == 234
$4E8    $2260   CALL     $260            ; Call subroutine at 260
$4EA    $6EC6   LD       VE, #C6         ; Load 198 into VE
$4EC    $E252   UNKNOWN  $E252           ; Unknown Exxx instruction
$4EE    $12A1   JP       $2A1            ; Jump to 2A1
$4F0    $B13E   JP       V0, $13E        ; Jump to V0 + 13E
$4F2    $F397   UNKNOWN  F397            ; Unknown Fxxx instruction
$4F4    $5F7F   UNKNOWN  $5F7F           ; Unknown 5xxx instruction
$4F6    $E15C   UNKNOWN  $E15C           ; Unknown Exxx instruction
$4F8    $5DE0   SE       VD, VE          ; Skip if VD == VE
$4FA    $6A04   LD       VA, #04         ; Load 4 into VA
$4FC    $E4F0   UNKNOWN  $E4F0           ; Unknown Exxx instruction
$4FE    $587A   UNKNOWN  $587A           ; Unknown 5xxx instruction
$500    $E364   UNKNOWN  $E364           ; Unknown Exxx instruction
$502    $B179   JP       V0, $179        ; Jump to V0 + 179
$504    $0B19   SYS      $B19            ; System call to B19
$506    $7E76   ADD      VE, #76         ; Add 118 to VE
$508    $F4DD   UNKNOWN  F4DD            ; Unknown Fxxx instruction
$50A    $3F89   SE       VF, #89         ; Skip if VF == 137
$50C    $C1F9   RND      V1, #F9         ; V1 = random & F9
$50E    $0749   SYS      $749            ; System call to 749
$510    $FE14   UNKNOWN  FE14            ; Unknown Fxxx instruction
$512    $F73E   UNKNOWN  F73E            ; Unknown Fxxx instruction
$514    $6F47   LD       VF, #47         ; Load 71 into VF
$516    $7635   ADD      V6, #35         ; Add 53 to V6
$518    $F9A3   UNKNOWN  F9A3            ; Unknown Fxxx instruction
$51A    $A815   LD       I, $815         ; Load 815 into I
$51C    $E597   UNKNOWN  $E597           ; Unknown Exxx instruction
$51E    $1AD7   JP       $AD7            ; Jump to AD7
$520    $631F   LD       V3, #1F         ; Load 31 into V3
$522    $FF4B   UNKNOWN  FF4B            ; Unknown Fxxx instruction
$524    $1418   JP       $418            ; Jump to 418
$526    $426E   SNE      V2, #6E         ; Skip if V2 != 110
$528    $E2BE   UNKNOWN  $E2BE           ; Unknown Exxx instruction
$52A    $A58D   LD       I, $58D         ; Load 58D into I
$52C    $4B91   SNE      VB, #91         ; Skip if VB != 145
$52E    $4D73   SNE      VD, #73         ; Skip if VD != 115
$530    $A5DA   LD       I, $5DA         ; Load 5DA into I
$532    $AEED   LD       I, $EED         ; Load EED into I
$534    $04DD   SYS      $4DD            ; System call to 4DD
$536    $1973   JP       $973            ; Jump to 973
$538    $535E   UNKNOWN  $535E           ; Unknown 5xxx instruction
$53A    $D2E8   DRW      V2, VE, #8      ; Draw 8-byte sprite at V2, VE
$53C    $7E44   ADD      VE, #44         ; Add 68 to VE
$53E    $FA9C   UNKNOWN  FA9C            ; Unknown Fxxx instruction
$540    $D191   DRW      V1, V9, #1      ; Draw 1-byte sprite at V1, V9
$542    $7148   ADD      V1, #48         ; Add 72 to V1
$544    $C970   RND      V9, #70         ; V9 = random & 70
$546    $E827   UNKNOWN  $E827           ; Unknown Exxx instruction
$548    $AC50   LD       I, $C50         ; Load C50 into I
$54A    $A3FD   LD       I, $3FD         ; Load 3FD into I
$54C    $CD0C   RND      VD, #0C         ; VD = random & 0C
$54E    $85E1   OR       V5, VE          ; V5 |= VE
$550    $109A   JP       $09A            ; Jump to 09A
$552    $266E   CALL     $66E            ; Call subroutine at 66E
$554    $FF7F   UNKNOWN  FF7F            ; Unknown Fxxx instruction
$556    $063A   SYS      $63A            ; System call to 63A
$558    $C38E   RND      V3, #8E         ; V3 = random & 8E
$55A    $940A   UNKNOWN  $940A           ; Unknown 9xxx instruction
$55C    $F4FE   UNKNOWN  F4FE            ; Unknown Fxxx instruction
$55E    $B206   JP       V0, $206        ; Jump to V0 + 206
$560    $5BCC   UNKNOWN  $5BCC           ; Unknown 5xxx instruction
$562    $47E8   SNE      V7, #E8         ; Skip if V7 != 232
$564    $D0AE   DRW      V0, VA, #E      ; Draw 14-byte sprite at V0, VA
$566    $646B   LD       V4, #6B         ; Load 107 into V4
$568    $8E82   AND      VE, V8          ; VE &= V8
$56A    $7146   ADD      V1, #46         ; Add 70 to V1
$56C    $59A0   SE       V9, VA          ; Skip if V9 == VA
$56E    $2831   CALL     $831            ; Call subroutine at 831
$570    $10B4   JP       $0B4            ; Jump to 0B4
$572    $8428   UNKNOWN  8428            ; Unknown 8xxx instruction
$574    $B6ED   JP       V0, $6ED        ; Jump to V0 + 6ED
$576    $52AF   UNKNOWN  $52AF           ; Unknown 5xxx instruction
$578    $2A95   CALL     $A95            ; Call subroutine at A95
$57A    $40F4   SNE      V0, #F4         ; Skip if V0 != 244
$57C    $C0AD   RND      V0, #AD         ; V0 = random & AD
$57E    $9A24   UNKNOWN  $9A24           ; Unknown 9xxx instruction
$580    $6CA0   LD       VC, #A0         ; Load 160 into VC
$582    $6635   LD       V6, #35         ; Load 53 into V6
$584    $C801   RND      V8, #01         ; V8 = random & 01
$586    $9C6C   UNKNOWN  $9C6C           ; Unknown 9xxx instruction
$588    $3648   SE       V6, #48         ; Skip if V6 == 72
$58A    $7D6C   ADD      VD, #6C         ; Add 108 to VD
$58C    $44A2   SNE      V4, #A2         ; Skip if V4 != 162
$58E    $45B5   SNE      V5, #B5         ; Skip if V5 != 181
$590    $697C   LD       V9, #7C         ; Load 124 into V9
$592    $537E   UNKNOWN  $537E           ; Unknown 5xxx instruction
$594    $0EE1   SYS      $EE1            ; System call to EE1
$596    $A240   LD       I, $240         ; Load 240 into I
$598    $D3DB   DRW      V3, VD, #B      ; Draw 11-byte sprite at V3, VD
$59A    $B870   JP       V0, $870        ; Jump to V0 + 870
$59C    $5469   UNKNOWN  $5469           ; Unknown 5xxx instruction
$59E    $2436   CALL     $436            ; Call subroutine at 436
$5A0    $1B34   JP       $B34            ; Jump to B34
$5A2    $1071   JP       $071            ; Jump to 071
$5A4    $5741   UNKNOWN  $5741           ; Unknown 5xxx instruction
$5A6    $1154   JP       $154            ; Jump to 154
$5A8    $BFF9   JP       V0, $FF9        ; Jump to V0 + FF9
$5AA    $22DB   CALL     $2DB            ; Call subroutine at 2DB
$5AC    $089A   SYS      $89A            ; System call to 89A
$5AE    $EDB3   UNKNOWN  $EDB3           ; Unknown Exxx instruction
$5B0    $A3C6   LD       I, $3C6         ; Load 3C6 into I
$5B2    $402B   SNE      V0, #2B         ; Skip if V0 != 43
$5B4    $05DF   SYS      $5DF            ; System call to 5DF
$5B6    $9067   UNKNOWN  $9067           ; Unknown 9xxx instruction
$5B8    $3D6F   SE       VD, #6F         ; Skip if VD == 111
$5BA    $0641   SYS      $641            ; System call to 641
$5BC    $4ACF   SNE      VA, #CF         ; Skip if VA != 207
$5BE    $C262   RND      V2, #62         ; V2 = random & 62
$5C0    $5203   UNKNOWN  $5203           ; Unknown 5xxx instruction
$5C2    $BDB0   JP       V0, $DB0        ; Jump to V0 + DB0
$5C4    $2760   CALL     $760            ; Call subroutine at 760
$5C6    $7307   ADD      V3, #07         ; Add 7 to V3
$5C8    $E090   UNKNOWN  $E090           ; Unknown Exxx instruction
$5CA    $1841   JP       $841            ; Jump to 841
$5CC    $8A0C   UNKNOWN  8A0C            ; Unknown 8xxx instruction
$5CE    $46C8   SNE      V6, #C8         ; Skip if V6 != 200
$5D0    $82FC   UNKNOWN  82FC            ; Unknown 8xxx instruction
$5D2    $E7EF   UNKNOWN  $E7EF           ; Unknown Exxx instruction
$5D4    $8B3E   SHL      VB              ; VB <<= 1, VF = MSB
$5D6    $9112   UNKNOWN  $9112           ; Unknown 9xxx instruction
$5D8    $3A96   SE       VA, #96         ; Skip if VA == 150
$5DA    $9907   UNKNOWN  $9907           ; Unknown 9xxx instruction
$5DC    $B70C   JP       V0, $70C        ; Jump to V0 + 70C
$5DE    $D79E   DRW      V7, V9, #E      ; Draw 14-byte sprite at V7, V9
$5E0    $F9F4   UNKNOWN  F9F4            ; Unknown Fxxx instruction
$5E2    $E520   UNKNOWN  $E520           ; Unknown Exxx instruction
$5E4    $49F0   SNE      V9, #F0         ; Skip if V9 != 240
$5E6    $BA87   JP       V0, $A87        ; Jump to V0 + A87
$5E8    $923F   UNKNOWN  $923F           ; Unknown 9xxx instruction
$5EA    $3B7E   SE       VB, #7E         ; Skip if VB == 126
$5EC    $EB63   UNKNOWN  $EB63           ; Unknown Exxx instruction
$5EE    $FE84   UNKNOWN  FE84            ; Unknown Fxxx instruction
$5F0    $A79B   LD       I, $79B         ; Load 79B into I
$5F2    $EB50   UNKNOWN  $EB50           ; Unknown Exxx instruction
$5F4    $522F   UNKNOWN  $522F           ; Unknown 5xxx instruction
$5F6    $2A1E   CALL     $A1E            ; Call subroutine at A1E
$5F8    $5465   UNKNOWN  $5465           ; Unknown 5xxx instruction
$5FA    $83B0   LD       V3, VB          ; V3 = VB
$5FC    $0671   SYS      $671            ; System call to 671
$5FE    $20C1   CALL     $0C1            ; Call subroutine at 0C1
$600    $B421   JP       V0, $421        ; Jump to V0 + 421
$602    $C18B   RND      V1, #8B         ; V1 = random & 8B
$604    $BB35   JP       V0, $B35        ; Jump to V0 + B35
$606    $86BF   UNKNOWN  86BF            ; Unknown 8xxx instruction
$608    $C755   RND      V7, #55         ; V7 = random & 55
$60A    $D889   DRW      V8, V8, #9      ; Draw 9-byte sprite at V8, V8
$60C    $C031   RND      V0, #31         ; V0 = random & 31
$60E    $0F73   SYS      $F73            ; System call to F73
$610    $C59E   RND      V5, #9E         ; V5 = random & 9E
$612    $401B   SNE      V0, #1B         ; Skip if V0 != 27
$614    $4C3E   SNE      VC, #3E         ; Skip if VC != 62
$616    $F6D6   UNKNOWN  F6D6            ; Unknown Fxxx instruction
$618    $4122   SNE      V1, #22         ; Skip if V1 != 34
$61A    $75A0   ADD      V5, #A0         ; Add 160 to V5
$61C    $D70A   DRW      V7, V0, #A      ; Draw 10-byte sprite at V7, V0
$61E    $9C4E   UNKNOWN  $9C4E           ; Unknown 9xxx instruction
$620    $A63E   LD       I, $63E         ; Load 63E into I
$622    $79F3   ADD      V9, #F3         ; Add 243 to V9
$624    $E94F   UNKNOWN  $E94F           ; Unknown Exxx instruction
$626    $FAF4   UNKNOWN  FAF4            ; Unknown Fxxx instruction
$628    $1B0C   JP       $B0C            ; Jump to B0C
$62A    $5849   UNKNOWN  $5849           ; Unknown 5xxx instruction
$62C    $696D   LD       V9, #6D         ; Load 109 into V9
$62E    $0644   SYS      $644            ; System call to 644
$630    $F1DF   UNKNOWN  F1DF            ; Unknown Fxxx instruction
$632    $1D25   JP       $D25            ; Jump to D25
$634    $38D4   SE       V8, #D4         ; Skip if V8 == 212
$636    $0050   SYS      $050            ; System call to 050
$638    $075D   SYS      $75D            ; System call to 75D
$63A    $96F9   UNKNOWN  $96F9           ; Unknown 9xxx instruction
$63C    $F6C6   UNKNOWN  F6C6            ; Unknown Fxxx instruction
$63E    $ED47   UNKNOWN  $ED47           ; Unknown Exxx instruction
$640    $F7A3   UNKNOWN  F7A3            ; Unknown Fxxx instruction
$642    $C5DB   RND      V5, #DB         ; V5 = random & DB
$644    $57F0   SE       V7, VF          ; Skip if V7 == VF
$646    $7EDC   ADD      VE, #DC         ; Add 220 to VE
$648    $63DA   LD       V3, #DA         ; Load 218 into V3
$64A    $1158   JP       $158            ; Jump to 158
$64C    $1344   JP       $344            ; Jump to 344
$64E    $85C0   LD       V5, VC          ; V5 = VC
$650    $7508   ADD      V5, #08         ; Add 8 to V5
$652    $D560   DRW      V5, V6, #0      ; Draw 0-byte sprite at V5, V6
$654    $7A6F   ADD      VA, #6F         ; Add 111 to VA
$656    $EAF3   UNKNOWN  $EAF3           ; Unknown Exxx instruction
$658    $0040   SYS      $040            ; System call to 040
$65A    $A679   LD       I, $679         ; Load 679 into I
$65C    $1F5C   JP       $F5C            ; Jump to F5C
$65E    $8827   SUBN     V8, V2          ; V8 = V2 - V8, VF = !borrow
$660    $ACB0   LD       I, $CB0         ; Load CB0 into I
$662    $A326   LD       I, $326         ; Load 326 into I
$664    $C6DC   RND      V6, #DC         ; V6 = random & DC
$666    $8B55   SUB      VB, V5          ; VB -= V5, VF = !borrow
$668    $9834   UNKNOWN  $9834           ; Unknown 9xxx instruction
$66A    $1E46   JP       $E46            ; Jump to E46
$66C    $8781   OR       V7, V8          ; V7 |= V8
$66E    $9D71   UNKNOWN  $9D71           ; Unknown 9xxx instruction
$670    $EE21   UNKNOWN  $EE21           ; Unknown Exxx instruction
$672    $E09A   UNKNOWN  $E09A           ; Unknown Exxx instruction
$674    $8CD9   UNKNOWN  8CD9            ; Unknown 8xxx instruction
$676    $B2B0   JP       V0, $2B0        ; Jump to V0 + 2B0
$678    $FE17   UNKNOWN  FE17            ; Unknown Fxxx instruction
$67A    $3C46   SE       VC, #46         ; Skip if VC == 70
$67C    $1EE9   JP       $EE9            ; Jump to EE9
$67E    $1362   JP       $362            ; Jump to 362
$680    $1E68   JP       $E68            ; Jump to E68
$682    $67CB   LD       V7, #CB         ; Load 203 into V7
$684    $13D9   JP       $3D9            ; Jump to 3D9
$686    $014D   SYS      $14D            ; System call to 14D
$688    $02A1   SYS      $2A1            ; System call to 2A1
$68A    $0CE2   SYS      $CE2            ; System call to CE2
$68C    $F9D9   UNKNOWN  F9D9            ; Unknown Fxxx instruction
$68E    $B1F6   JP       V0, $1F6        ; Jump to V0 + 1F6
$690    $91EF   UNKNOWN  $91EF           ; Unknown 9xxx instruction
$692    $3C94   SE       VC, #94         ; Skip if VC == 148
$694    $821B   UNKNOWN  821B            ; Unknown 8xxx instruction
$696    $84DD   UNKNOWN  84DD            ; Unknown 8xxx instruction
$698    $8F3E   SHL      VF              ; VF <<= 1, VF = MSB
$69A    $7C79   ADD      VC, #79         ; Add 121 to VC
$69C    $4156   SNE      V1, #56         ; Skip if V1 != 86
$69E    $C9C8   RND      V9, #C8         ; V9 = random & C8
$6A0    $4F15   SNE      VF, #15         ; Skip if VF != 21
$6A2    $EAB6   UNKNOWN  $EAB6           ; Unknown Exxx instruction
$6A4    $E7EF   UNKNOWN  $E7EF           ; Unknown Exxx instruction
$6A6    $46CD   SNE      V6, #CD         ; Skip if V6 != 205
$6A8    $BC22   JP       V0, $C22        ; Jump to V0 + C22
$6AA    $9EA8   UNKNOWN  $9EA8           ; Unknown 9xxx instruction
$6AC    $5169   UNKNOWN  $5169           ; Unknown 5xxx instruction
$6AE    $B786   JP       V0, $786        ; Jump to V0 + 786
$6B0    $ABD1   LD       I, $BD1         ; Load BD1 into I
$6B2    $98A3   UNKNOWN  $98A3           ; Unknown 9xxx instruction
$6B4    $9C7C   UNKNOWN  $9C7C           ; Unknown 9xxx instruction
$6B6    $1C2B   JP       $C2B            ; Jump to C2B
$6B8    $F35B   UNKNOWN  F35B            ; Unknown Fxxx instruction
$6BA    $3F37   SE       VF, #37         ; Skip if VF == 55
$6BC    $704F   ADD      V0, #4F         ; Add 79 to V0
$6BE    $9E83   UNKNOWN  $9E83           ; Unknown 9xxx instruction
$6C0    $579A   UNKNOWN  $579A           ; Unknown 5xxx instruction
$6C2    $730F   ADD      V3, #0F         ; Add 15 to V3
$6C4    $0006   SYS      $006            ; System call to 006
$6C6    $64C3   LD       V4, #C3         ; Load 195 into V4
$6C8    $7542   ADD      V5, #42         ; Add 66 to V5
$6CA    $ED57   UNKNOWN  $ED57           ; Unknown Exxx instruction
$6CC    $E2B2   UNKNOWN  $E2B2           ; Unknown Exxx instruction
$6CE    $AAB4   LD       I, $AB4         ; Load AB4 into I
$6D0    $90C9   UNKNOWN  $90C9           ; Unknown 9xxx instruction
$6D2    $F5D2   UNKNOWN  F5D2            ; Unknown Fxxx instruction
$6D4    $2EA4   CALL     $EA4            ; Call subroutine at EA4
$6D6    $8CFA   UNKNOWN  8CFA            ; Unknown 8xxx instruction
$6D8    $0F52   SYS      $F52            ; System call to F52
$6DA    $4B35   SNE      VB, #35         ; Skip if VB != 53
$6DC    $96A8   UNKNOWN  $96A8           ; Unknown 9xxx instruction
$6DE    $8D82   AND      VD, V8          ; VD &= V8
$6E0    $A3FF   LD       I, $3FF         ; Load 3FF into I
$6E2    $9F53   UNKNOWN  $9F53           ; Unknown 9xxx instruction
$6E4    $87BC   UNKNOWN  87BC            ; Unknown 8xxx instruction
$6E6    $6E2C   LD       VE, #2C         ; Load 44 into VE
$6E8    $2F74   CALL     $F74            ; Call subroutine at F74
$6EA    $8F52   AND      VF, V5          ; VF &= V5
$6EC    $7678   ADD      V6, #78         ; Add 120 to V6
$6EE    $CB09   RND      VB, #09         ; VB = random & 09
$6F0    $E037   UNKNOWN  $E037           ; Unknown Exxx instruction
$6F2    $705C   ADD      V0, #5C         ; Add 92 to V0
$6F4    $1ACD   JP       $ACD            ; Jump to ACD
$6F6    $2803   CALL     $803            ; Call subroutine at 803
$6F8    $3F0A   SE       VF, #0A         ; Skip if VF == 10
$6FA    $DBE4   DRW      VB, VE, #4      ; Draw 4-byte sprite at VB, VE
$6FC    $11E2   JP       $1E2            ; Jump to 1E2
$6FE    $8B09   UNKNOWN  8B09            ; Unknown 8xxx instruction
$700    $87DF   UNKNOWN  87DF            ; Unknown 8xxx instruction
$702    $C01D   RND      V0, #1D         ; V0 = random & 1D
$704    $9A92   UNKNOWN  $9A92           ; Unknown 9xxx instruction
$706    $A376   LD       I, $376         ; Load 376 into I
$708    $B391   JP       V0, $391        ; Jump to V0 + 391
$70A    $9B90   SNE      VB, V9          ; Skip if VB != V9
$70C    $2931   CALL     $931            ; Call subroutine at 931
$70E    $0E26   SYS      $E26            ; System call to E26
$710    $19AB   JP       $9AB            ; Jump to 9AB
$712    $B16F   JP       V0, $16F        ; Jump to V0 + 16F
$714    $18A9   JP       $8A9            ; Jump to 8A9
$716    $0A16   SYS      $A16            ; System call to A16
$718    $3F38   SE       VF, #38         ; Skip if VF == 56
$71A    $0D1C   SYS      $D1C            ; System call to D1C
$71C    $1EAF   JP       $EAF            ; Jump to EAF
$71E    $CE3F   RND      VE, #3F         ; VE = random & 3F
$720    $0C09   SYS      $C09            ; System call to C09
$722    $B64F   JP       V0, $64F        ; Jump to V0 + 64F
$724    $F8E0   UNKNOWN  F8E0            ; Unknown Fxxx instruction
$726    $A2B3   LD       I, $2B3         ; Load 2B3 into I
$728    $B49B   JP       V0, $49B        ; Jump to V0 + 49B
$72A    $4F38   SNE      VF, #38         ; Skip if VF != 56
$72C    $EFA2   UNKNOWN  $EFA2           ; Unknown Exxx instruction
$72E    $8E83   XOR      VE, V8          ; VE ^= V8
$730    $2DFA   CALL     $DFA            ; Call subroutine at DFA
$732    $1CA3   JP       $CA3            ; Jump to CA3
$734    $3859   SE       V8, #59         ; Skip if V8 == 89
$736    $DD8E   DRW      VD, V8, #E      ; Draw 14-byte sprite at VD, V8
$738    $F731   UNKNOWN  F731            ; Unknown Fxxx instruction
$73A    $FAE7   UNKNOWN  FAE7            ; Unknown Fxxx instruction
$73C    $A74B   LD       I, $74B         ; Load 74B into I
$73E    $CF02   RND      VF, #02         ; VF = random & 02
$740    $BE0F   JP       V0, $E0F        ; Jump to V0 + E0F
$742    $ECBB   UNKNOWN  $ECBB           ; Unknown Exxx instruction
$744    $513B   UNKNOWN  $513B           ; Unknown 5xxx instruction
$746    $0EA0   SYS      $EA0            ; System call to EA0
$748    $98DD   UNKNOWN  $98DD           ; Unknown 9xxx instruction
$74A    $ABB1   LD       I, $BB1         ; Load BB1 into I
$74C    $F4C4   UNKNOWN  F4C4            ; Unknown Fxxx instruction
$74E    $BC2A   JP       V0, $C2A        ; Jump to V0 + C2A
$750    $4892   SNE      V8, #92         ; Skip if V8 != 146
$752    $9CC0   SNE      VC, VC          ; Skip if VC != VC
$754    $4B0F   SNE      VB, #0F         ; Skip if VB != 15
$756    $B6E8   JP       V0, $6E8        ; Jump to V0 + 6E8
$758    $C16C   RND      V1, #6C         ; V1 = random & 6C
$75A    $1B6D   JP       $B6D            ; Jump to B6D
$75C    $01EF   SYS      $1EF            ; System call to 1EF
$75E    $7FF2   ADD      VF, #F2         ; Add 242 to VF
$760    $16B0   JP       $6B0            ; Jump to 6B0
$762    $5218   UNKNOWN  $5218           ; Unknown 5xxx instruction
$764    $2300   CALL     $300            ; Call subroutine at 300
$766    $1877   JP       $877            ; Jump to 877
$768    $9441   UNKNOWN  $9441           ; Unknown 9xxx instruction
$76A    $F9D8   UNKNOWN  F9D8            ; Unknown Fxxx instruction
$76C    $F7B2   UNKNOWN  F7B2            ; Unknown Fxxx instruction
$76E    $EEA8   UNKNOWN  $EEA8           ; Unknown Exxx instruction
$770    $D3D2   DRW      V3, VD, #2      ; Draw 2-byte sprite at V3, VD
$772    $7BDB   ADD      VB, #DB         ; Add 219 to VB
$774    $0412   SYS      $412            ; System call to 412
$776    $19A9   JP       $9A9            ; Jump to 9A9
$778    $5DEB   UNKNOWN  $5DEB           ; Unknown 5xxx instruction
$77A    $BEFB   JP       V0, $EFB        ; Jump to V0 + EFB
$77C    $838A   UNKNOWN  838A            ; Unknown 8xxx instruction
$77E    $5295   UNKNOWN  $5295           ; Unknown 5xxx instruction
$780    $C1F6   RND      V1, #F6         ; V1 = random & F6
$782    $9D5E   UNKNOWN  $9D5E           ; Unknown 9xxx instruction
$784    $1C32   JP       $C32            ; Jump to C32
$786    $5D01   UNKNOWN  $5D01           ; Unknown 5xxx instruction
$788    $7AE1   ADD      VA, #E1         ; Add 225 to VA
$78A    $18AD   JP       $8AD            ; Jump to 8AD
$78C    $72FF   ADD      V2, #FF         ; Add 255 to V2
$78E    $7125   ADD      V1, #25         ; Add 37 to V1
$790    $CDD4   RND      VD, #D4         ; VD = random & D4
$792    $0A9F   SYS      $A9F            ; System call to A9F
$794    $F05A   UNKNOWN  F05A            ; Unknown Fxxx instruction
$796    $5AFE   UNKNOWN  $5AFE           ; Unknown 5xxx instruction
$798    $59E2   UNKNOWN  $59E2           ; Unknown 5xxx instruction
$79A    $654E   LD       V5, #4E         ; Load 78 into V5
$79C    $DC6C   DRW      VC, V6, #C      ; Draw 12-byte sprite at VC, V6
$79E    $B34D   JP       V0, $34D        ; Jump to V0 + 34D
$7A0    $4F2B   SNE      VF, #2B         ; Skip if VF != 43
$7A2    $903B   UNKNOWN  $903B           ; Unknown 9xxx instruction
$7A4    $5F26   UNKNOWN  $5F26           ; Unknown 5xxx instruction
$7A6    $A67C   LD       I, $67C         ; Load 67C into I
$7A8    $E53A   UNKNOWN  $E53A           ; Unknown Exxx instruction
$7AA    $0628   SYS      $628            ; System call to 628
$7AC    $EF67   UNKNOWN  $EF67           ; Unknown Exxx instruction
$7AE    $2EDA   CALL     $EDA            ; Call subroutine at EDA
$7B0    $20F5   CALL     $0F5            ; Call subroutine at 0F5
$7B2    $6A8A   LD       VA, #8A         ; Load 138 into VA
$7B4    $8844   ADD      V8, V4          ; V8 += V4, VF = carry
$7B6    $E147   UNKNOWN  $E147           ; Unknown Exxx instruction
$7B8    $C593   RND      V5, #93         ; V5 = random & 93
$7BA    $A063   LD       I, $063         ; Load 063 into I
$7BC    $706D   ADD      V0, #6D         ; Add 109 to V0
$7BE    $DDDC   DRW      VD, VD, #C      ; Draw 12-byte sprite at VD, VD
$7C0    $5391   UNKNOWN  $5391           ; Unknown 5xxx instruction
$7C2    $3CFB   SE       VC, #FB         ; Skip if VC == 251
$7C4    $32CB   SE       V2, #CB         ; Skip if V2 == 203
$7C6    $B223   JP       V0, $223        ; Jump to V0 + 223
$7C8    $8CF3   XOR      VC, VF          ; VC ^= VF
$7CA    $6929   LD       V9, #29         ; Load 41 into V9
$7CC    $277F   CALL     $77F            ; Call subroutine at 77F
$7CE    $C6F8   RND      V6, #F8         ; V6 = random & F8
$7D0    $4DE3   SNE      VD, #E3         ; Skip if VD != 227
$7D2    $E190   UNKNOWN  $E190           ; Unknown Exxx instruction
$7D4    $4266   SNE      V2, #66         ; Skip if V2 != 102
$7D6    $2370   CALL     $370            ; Call subroutine at 370
$7D8    $D142   DRW      V1, V4, #2      ; Draw 2-byte sprite at V1, V4
$7DA    $2766   CALL     $766            ; Call subroutine at 766
$7DC    $5EDF   UNKNOWN  $5EDF           ; Unknown 5xxx instruction
$7DE    $C9DF   RND      V9, #DF         ; V9 = random & DF
$7E0    $FC88   UNKNOWN  FC88            ; Unknown Fxxx instruction
$7E2    $CA4B   RND      VA, #4B         ; VA = random & 4B
$7E4    $4EBB   SNE      VE, #BB         ; Skip if VE != 187
$7E6    $5DAA   UNKNOWN  $5DAA           ; Unknown 5xxx instruction
$7E8    $C25B   RND      V2, #5B         ; V2 = random & 5B
$7EA    $034A   SYS      $34A            ; System call to 34A
$7EC    $34FC   SE       V4, #FC         ; Skip if V4 == 252
$7EE    $6896   LD       V8, #96         ; Load 150 into V8
$7F0    $3B1D   SE       VB, #1D         ; Skip if VB == 29
$7F2    $4473   SNE      V4, #73         ; Skip if V4 != 115
$7F4    $4F3A   SNE      VF, #3A         ; Skip if VF != 58
$7F6    $B067   JP       V0, $067        ; Jump to V0 + 067
$7F8    $9047   UNKNOWN  $9047           ; Unknown 9xxx instruction
$7FA    $613E   LD       V1, #3E         ; Load 62 into V1
$7FC    $3208   SE       V2, #08         ; Skip if V2 == 8
$7FE    $4E0B   SNE      VE, #0B         ; Skip if VE != 11
$800    $14B0   JP       $4B0            ; Jump to 4B0
$802    $87E5   SUB      V7, VE          ; V7 -= VE, VF = !borrow
$804    $3BA9   SE       VB, #A9         ; Skip if VB == 169
$806    $CD09   RND      VD, #09         ; VD = random & 09
$808    $4D7A   SNE      VD, #7A         ; Skip if VD != 122
$80A    $4F5E   SNE      VF, #5E         ; Skip if VF != 94
$80C    $8111   OR       V1, V1          ; V1 |= V1
$80E    $C03A   RND      V0, #3A         ; V0 = random & 3A
$810    $40C9   SNE      V0, #C9         ; Skip if V0 != 201
$812    $2948   CALL     $948            ; Call subroutine at 948
$814    $E023   UNKNOWN  $E023           ; Unknown Exxx instruction
$816    $061C   SYS      $61C            ; System call to 61C
$818    $0BE9   SYS      $BE9            ; System call to BE9
$81A    $071E   SYS      $71E            ; System call to 71E
$81C    $6FF2   LD       VF, #F2         ; Load 242 into VF
$81E    $7DAC   ADD      VD, #AC         ; Add 172 to VD
$820    $26CF   CALL     $6CF            ; Call subroutine at 6CF
$822    $2107   CALL     $107            ; Call subroutine at 107
$824    $9C38   UNKNOWN  $9C38           ; Unknown 9xxx instruction
$826    $13BB   JP       $3BB            ; Jump to 3BB
$828    $7D2B   ADD      VD, #2B         ; Add 43 to VD
$82A    $A25F   LD       I, $25F         ; Load 25F into I
$82C    $E108   UNKNOWN  $E108           ; Unknown Exxx instruction
$82E    $744B   ADD      V4, #4B         ; Add 75 to V4
$830    $BBFF   JP       V0, $BFF        ; Jump to V0 + BFF
$832    $3639   SE       V6, #39         ; Skip if V6 == 57
$834    $1061   JP       $061            ; Jump to 061
$836    $B6B9   JP       V0, $6B9        ; Jump to V0 + 6B9
$838    $23AC   CALL     $3AC            ; Call subroutine at 3AC
$83A    $4A63   SNE      VA, #63         ; Skip if VA != 99
$83C    $3AFD   SE       VA, #FD         ; Skip if VA == 253
$83E    $51B2   UNKNOWN  $51B2           ; Unknown 5xxx instruction
$840    $9701   UNKNOWN  $9701           ; Unknown 9xxx instruction
$842    $AD7C   LD       I, $D7C         ; Load D7C into I
$844    $8264   ADD      V2, V6          ; V2 += V6, VF = carry
$846    $1217   JP       $217            ; Jump to 217
$848    $953B   UNKNOWN  $953B           ; Unknown 9xxx instruction
$84A    $EEBE   UNKNOWN  $EEBE           ; Unknown Exxx instruction
$84C    $E707   UNKNOWN  $E707           ; Unknown Exxx instruction
$84E    $189E   JP       $89E            ; Jump to 89E
$850    $3863   SE       V8, #63         ; Skip if V8 == 99
$852    $BED0   JP       V0, $ED0        ; Jump to V0 + ED0
$854    $B01C   JP       V0, $01C        ; Jump to V0 + 01C
$856    $1D38   JP       $D38            ; Jump to D38
$858    $95D3   UNKNOWN  $95D3           ; Unknown 9xxx instruction
$85A    $F7D6   UNKNOWN  F7D6            ; Unknown Fxxx instruction
$85C    $34E7   SE       V4, #E7         ; Skip if V4 == 231
$85E    $D39E   DRW      V3, V9, #E      ; Draw 14-byte sprite at V3, V9
$860    $45CF   SNE      V5, #CF         ; Skip if V5 != 207
$862    $9489   UNKNOWN  $9489           ; Unknown 9xxx instruction
$864    $28B1   CALL     $8B1            ; Call subroutine at 8B1
$866    $2455   CALL     $455            ; Call subroutine at 455
$868    $702C   ADD      V0, #2C         ; Add 44 to V0
$86A    $D09F   DRW      V0, V9, #F      ; Draw 15-byte sprite at V0, V9
$86C    $D0BD   DRW      V0, VB, #D      ; Draw 13-byte sprite at V0, VB
$86E    $02E8   SYS      $2E8            ; System call to 2E8
$870    $ED9F   UNKNOWN  $ED9F           ; Unknown Exxx instruction
$872    $F2D2   UNKNOWN  F2D2            ; Unknown Fxxx instruction
$874    $B4BD   JP       V0, $4BD        ; Jump to V0 + 4BD
$876    $A740   LD       I, $740         ; Load 740 into I
$878    $05B5   SYS      $5B5            ; System call to 5B5
$87A    $F12E   UNKNOWN  F12E            ; Unknown Fxxx instruction
$87C    $017D   SYS      $17D            ; System call to 17D
$87E    $8313   XOR      V3, V1          ; V3 ^= V1
$880    $C413   RND      V4, #13         ; V4 = random & 13
$882    $ED0D   UNKNOWN  $ED0D           ; Unknown Exxx instruction
$884    $91F7   UNKNOWN  $91F7           ; Unknown 9xxx instruction
$886    $5C09   UNKNOWN  $5C09           ; Unknown 5xxx instruction
$888    $A35E   LD       I, $35E         ; Load 35E into I
$88A    $4B7A   SNE      VB, #7A         ; Skip if VB != 122
$88C    $0F88   SYS      $F88            ; System call to F88
$88E    $2D63   CALL     $D63            ; Call subroutine at D63
$890    $2A21   CALL     $A21            ; Call subroutine at A21
$892    $ED1F   UNKNOWN  $ED1F           ; Unknown Exxx instruction
$894    $AB1A   LD       I, $B1A         ; Load B1A into I
$896    $7AB0   ADD      VA, #B0         ; Add 176 to VA
$898    $2EE7   CALL     $EE7            ; Call subroutine at EE7
$89A    $99F2   UNKNOWN  $99F2           ; Unknown 9xxx instruction
$89C    $D176   DRW      V1, V7, #6      ; Draw 6-byte sprite at V1, V7
$89E    $F437   UNKNOWN  F437            ; Unknown Fxxx instruction
$8A0    $A871   LD       I, $871         ; Load 871 into I
$8A2    $1377   JP       $377            ; Jump to 377
$8A4    $720B   ADD      V2, #0B         ; Add 11 to V2
$8A6    $A85B   LD       I, $85B         ; Load 85B into I
$8A8    $06BD   SYS      $6BD            ; System call to 6BD
$8AA    $62E1   LD       V2, #E1         ; Load 225 into V2
$8AC    $FB8F   UNKNOWN  FB8F            ; Unknown Fxxx instruction
$8AE    $70C0   ADD      V0, #C0         ; Add 192 to V0
$8B0    $0AE6   SYS      $AE6            ; System call to AE6
$8B2    $CFC8   RND      VF, #C8         ; VF = random & C8
$8B4    $8CB1   OR       VC, VB          ; VC |= VB
$8B6    $D89C   DRW      V8, V9, #C      ; Draw 12-byte sprite at V8, V9
$8B8    $C9EB   RND      V9, #EB         ; V9 = random & EB
$8BA    $4986   SNE      V9, #86         ; Skip if V9 != 134
$8BC    $8181   OR       V1, V8          ; V1 |= V8
$8BE    $129C   JP       $29C            ; Jump to 29C
$8C0    $834C   UNKNOWN  834C            ; Unknown 8xxx instruction
$8C2    $BB0A   JP       V0, $B0A        ; Jump to V0 + B0A
$8C4    $DF0F   DRW      VF, V0, #F      ; Draw 15-byte sprite at VF, V0
$8C6    $0F49   SYS      $F49            ; System call to F49
$8C8    $1BDA   JP       $BDA            ; Jump to BDA
$8CA    $63C4   LD       V3, #C4         ; Load 196 into V3
$8CC    $318F   SE       V1, #8F         ; Skip if V1 == 143
$8CE    $F7F5   UNKNOWN  F7F5            ; Unknown Fxxx instruction
$8D0    $9FBE   UNKNOWN  $9FBE           ; Unknown 9xxx instruction
$8D2    $D42D   DRW      V4, V2, #D      ; Draw 13-byte sprite at V4, V2
$8D4    $0972   SYS      $972            ; System call to 972
$8D6    $0A92   SYS      $A92            ; System call to A92
$8D8    $8A5B   UNKNOWN  8A5B            ; Unknown 8xxx instruction
$8DA    $3D67   SE       VD, #67         ; Skip if VD == 103
$8DC    $106B   JP       $06B            ; Jump to 06B
$8DE    $A913   LD       I, $913         ; Load 913 into I
$8E0    $8238   UNKNOWN  8238            ; Unknown 8xxx instruction
$8E2    $9B4A   UNKNOWN  $9B4A           ; Unknown 9xxx instruction
$8E4    $3339   SE       V3, #39         ; Skip if V3 == 57
$8E6    $D151   DRW      V1, V5, #1      ; Draw 1-byte sprite at V1, V5
$8E8    $B9AD   JP       V0, $9AD        ; Jump to V0 + 9AD
$8EA    $F559   UNKNOWN  F559            ; Unknown Fxxx instruction
$8EC    $D327   DRW      V3, V2, #7      ; Draw 7-byte sprite at V3, V2
$8EE    $3406   SE       V4, #06         ; Skip if V4 == 6
$8F0    $449C   SNE      V4, #9C         ; Skip if V4 != 156
$8F2    $1456   JP       $456            ; Jump to 456
$8F4    $0985   SYS      $985            ; System call to 985
$8F6    $BB9F   JP       V0, $B9F        ; Jump to V0 + B9F
$8F8    $61BF   LD       V1, #BF         ; Load 191 into V1
$8FA    $497F   SNE      V9, #7F         ; Skip if V9 != 127
$8FC    $FAB3   UNKNOWN  FAB3            ; Unknown Fxxx instruction
$8FE    $CE7C   RND      VE, #7C         ; VE = random & 7C
$900    $1F9C   JP       $F9C            ; Jump to F9C
$902    $6625   LD       V6, #25         ; Load 37 into V6
$904    $D267   DRW      V2, V6, #7      ; Draw 7-byte sprite at V2, V6
$906    $C986   RND      V9, #86         ; V9 = random & 86
$908    $7D27   ADD      VD, #27         ; Add 39 to VD
$90A    $9123   UNKNOWN  $9123           ; Unknown 9xxx instruction
$90C    $1E65   JP       $E65            ; Jump to E65
$90E    $925A   UNKNOWN  $925A           ; Unknown 9xxx instruction
$910    $E3EA   UNKNOWN  $E3EA           ; Unknown Exxx instruction
$912    $CE09   RND      VE, #09         ; VE = random & 09
$914    $09F6   SYS      $9F6            ; System call to 9F6
$916    $7C5B   ADD      VC, #5B         ; Add 91 to VC
$918    $56A9   UNKNOWN  $56A9           ; Unknown 5xxx instruction
$91A    $6920   LD       V9, #20         ; Load 32 into V9
$91C    $539F   UNKNOWN  $539F           ; Unknown 5xxx instruction
$91E    $BAF4   JP       V0, $AF4        ; Jump to V0 + AF4
$920    $6E16   LD       VE, #16         ; Load 22 into VE
$922    $5D37   UNKNOWN  $5D37           ; Unknown 5xxx instruction
$924    $C448   RND      V4, #48         ; V4 = random & 48
$926    $71C8   ADD      V1, #C8         ; Add 200 to V1
$928    $E083   UNKNOWN  $E083           ; Unknown Exxx instruction
$92A    $9DDC   UNKNOWN  $9DDC           ; Unknown 9xxx instruction
$92C    $E234   UNKNOWN  $E234           ; Unknown Exxx instruction
$92E    $D0E8   DRW      V0, VE, #8      ; Draw 8-byte sprite at V0, VE
$930    $46F1   SNE      V6, #F1         ; Skip if V6 != 241
$932    $88CA   UNKNOWN  88CA            ; Unknown 8xxx instruction
$934    $90E0   SNE      V0, VE          ; Skip if V0 != VE
$936    $BFBF   JP       V0, $FBF        ; Jump to V0 + FBF
$938    $3382   SE       V3, #82         ; Skip if V3 == 130
$93A    $8AD9   UNKNOWN  8AD9            ; Unknown 8xxx instruction
$93C    $551F   UNKNOWN  $551F           ; Unknown 5xxx instruction
$93E    $F688   UNKNOWN  F688            ; Unknown Fxxx instruction
$940    $2238   CALL     $238            ; Call subroutine at 238
$942    $60CA   LD       V0, #CA         ; Load 202 into V0
$944    $D7FB   DRW      V7, VF, #B      ; Draw 11-byte sprite at V7, VF
$946    $CB90   RND      VB, #90         ; VB = random & 90
$948    $4C5F   SNE      VC, #5F         ; Skip if VC != 95
$94A    $3697   SE       V6, #97         ; Skip if V6 == 151
$94C    $EFF9   UNKNOWN  $EFF9           ; Unknown Exxx instruction
$94E    $D499   DRW      V4, V9, #9      ; Draw 9-byte sprite at V4, V9
$950    $8106   SHR      V1              ; V1 >>= 1, VF = LSB
$952    $7459   ADD      V4, #59         ; Add 89 to V4
$954    $C6A5   RND      V6, #A5         ; V6 = random & A5
$956    $BD8F   JP       V0, $D8F        ; Jump to V0 + D8F
$958    $513A   UNKNOWN  $513A           ; Unknown 5xxx instruction
$95A    $1B01   JP       $B01            ; Jump to B01
$95C    $8119   UNKNOWN  8119            ; Unknown 8xxx instruction
$95E    $270B   CALL     $70B            ; Call subroutine at 70B
$960    $7717   ADD      V7, #17         ; Add 23 to V7
$962    $4711   SNE      V7, #11         ; Skip if V7 != 17
$964    $09B8   SYS      $9B8            ; System call to 9B8
$966    $C080   RND      V0, #80         ; V0 = random & 80
$968    $710C   ADD      V1, #0C         ; Add 12 to V1
$96A    $26C4   CALL     $6C4            ; Call subroutine at 6C4
$96C    $4D69   SNE      VD, #69         ; Skip if VD != 105
$96E    $66EE   LD       V6, #EE         ; Load 238 into V6
$970    $DF23   DRW      VF, V2, #3      ; Draw 3-byte sprite at VF, V2
$972    $1014   JP       $014            ; Jump to 014
$974    $E9CA   UNKNOWN  $E9CA           ; Unknown Exxx instruction
$976    $2E87   CALL     $E87            ; Call subroutine at E87
$978    $4382   SNE      V3, #82         ; Skip if V3 != 130
$97A    $AD22   LD       I, $D22         ; Load D22 into I
$97C    $9BB3   UNKNOWN  $9BB3           ; Unknown 9xxx instruction
$97E    $F4F4   UNKNOWN  F4F4            ; Unknown Fxxx instruction
$980    $F816   UNKNOWN  F816            ; Unknown Fxxx instruction
$982    $1EEC   JP       $EEC            ; Jump to EEC
$984    $DDD9   DRW      VD, VD, #9      ; Draw 9-byte sprite at VD, VD
$986    $E772   UNKNOWN  $E772           ; Unknown Exxx instruction
$988    $EE19   UNKNOWN  $EE19           ; Unknown Exxx instruction
$98A    $9754   UNKNOWN  $9754           ; Unknown 9xxx instruction
$98C    $8FB6   SHR      VF              ; VF >>= 1, VF = LSB
$98E    $0FEE   SYS      $FEE            ; System call to FEE
$990    $4575   SNE      V5, #75         ; Skip if V5 != 117
$992    $7800   ADD      V8, #00         ; Add 0 to V8
$994    $5DB6   UNKNOWN  $5DB6           ; Unknown 5xxx instruction
$996    $FE38   UNKNOWN  FE38            ; Unknown Fxxx instruction
$998    $2E3F   CALL     $E3F            ; Call subroutine at E3F
$99A    $78DB   ADD      V8, #DB         ; Add 219 to V8
$99C    $49F2   SNE      V9, #F2         ; Skip if V9 != 242
$99E    $81BA   UNKNOWN  81BA            ; Unknown 8xxx instruction
$9A0    $B3FA   JP       V0, $3FA        ; Jump to V0 + 3FA
$9A2    $4FE1   SNE      VF, #E1         ; Skip if VF != 225
$9A4    $182C   JP       $82C            ; Jump to 82C
$9A6    $542A   UNKNOWN  $542A           ; Unknown 5xxx instruction
$9A8    $ABFD   LD       I, $BFD         ; Load BFD into I
$9AA    $D41E   DRW      V4, V1, #E      ; Draw 14-byte sprite at V4, V1
$9AC    $D28E   DRW      V2, V8, #E      ; Draw 14-byte sprite at V2, V8
$9AE    $7BBB   ADD      VB, #BB         ; Add 187 to VB
$9B0    $DA38   DRW      VA, V3, #8      ; Draw 8-byte sprite at VA, V3
$9B2    $795F   ADD      V9, #5F         ; Add 95 to V9
$9B4    $929E   UNKNOWN  $929E           ; Unknown 9xxx instruction
$9B6    $3F67   SE       VF, #67         ; Skip if VF == 103
$9B8    $6ADC   LD       VA, #DC         ; Load 220 into VA
$9BA    $F928   UNKNOWN  F928            ; Unknown Fxxx instruction
$9BC    $6F7E   LD       VF, #7E         ; Load 126 into VF
$9BE    $B4EA   JP       V0, $4EA        ; Jump to V0 + 4EA
$9C0    $3685   SE       V6, #85         ; Skip if V6 == 133
$9C2    $2F2B   CALL     $F2B            ; Call subroutine at F2B
$9C4    $9532   UNKNOWN  $9532           ; Unknown 9xxx instruction
$9C6    $A26B   LD       I, $26B         ; Load 26B into I
$9C8    $F48D   UNKNOWN  F48D            ; Unknown Fxxx instruction
$9CA    $5CA8   UNKNOWN  $5CA8           ; Unknown 5xxx instruction
$9CC    $872C   UNKNOWN  872C            ; Unknown 8xxx instruction
$9CE    $B6F7   JP       V0, $6F7        ; Jump to V0 + 6F7
$9D0    $A895   LD       I, $895         ; Load 895 into I
$9D2    $592F   UNKNOWN  $592F           ; Unknown 5xxx instruction
$9D4    $3313   SE       V3, #13         ; Skip if V3 == 19
$9D6    $4079   SNE      V0, #79         ; Skip if V0 != 121
$9D8    $B8EE   JP       V0, $8EE        ; Jump to V0 + 8EE
$9DA    $2135   CALL     $135            ; Call subroutine at 135
$9DC    $2202   CALL     $202            ; Call subroutine at 202
$9DE    $1426   JP       $426            ; Jump to 426
$9E0    $8F33   XOR      VF, V3          ; VF ^= V3
$9E2    $04AE   SYS      $4AE            ; System call to 4AE
$9E4    $C6BB   RND      V6, #BB         ; V6 = random & BB
$9E6    $472F   SNE      V7, #2F         ; Skip if V7 != 47
$9E8    $B175   JP       V0, $175        ; Jump to V0 + 175
$9EA    $F8D8   UNKNOWN  F8D8            ; Unknown Fxxx instruction
$9EC    $4196   SNE      V1, #96         ; Skip if V1 != 150
$9EE    $6CE4   LD       VC, #E4         ; Load 228 into VC
$9F0    $E0CA   UNKNOWN  $E0CA           ; Unknown Exxx instruction
$9F2    $D1D7   DRW      V1, VD, #7      ; Draw 7-byte sprite at V1, VD
$9F4    $E023   UNKNOWN  $E023           ; Unknown Exxx instruction
$9F6    $5847   UNKNOWN  $5847           ; Unknown 5xxx instruction
$9F8    $2680   CALL     $680            ; Call subroutine at 680
$9FA    $A7BF   LD       I, $7BF         ; Load 7BF into I
$9FC    $DB4E   DRW      VB, V4, #E      ; Draw 14-byte sprite at VB, V4
$9FE    $C4E5   RND      V4, #E5         ; V4 = random & E5
$A00    $E882   UNKNOWN  $E882           ; Unknown Exxx instruction
$A02    $3CDA   SE       VC, #DA         ; Skip if VC == 218
$A04    $3162   SE       V1, #62         ; Skip if V1 == 98
$A06    $576F   UNKNOWN  $576F           ; Unknown 5xxx instruction
$A08    $E580   UNKNOWN  $E580           ; Unknown Exxx instruction
$A0A    $12C4   JP       $2C4            ; Jump to 2C4
$A0C    $2576   CALL     $576            ; Call subroutine at 576
$A0E    $1F08   JP       $F08            ; Jump to F08
$A10    $D9D2   DRW      V9, VD, #2      ; Draw 2-byte sprite at V9, VD
$A12    $DE4D   DRW      VE, V4, #D      ; Draw 13-byte sprite at VE, V4
$A14    $DC5F   DRW      VC, V5, #F      ; Draw 15-byte sprite at VC, V5
$A16    $9C60   SNE      VC, V6          ; Skip if VC != V6
$A18    $12E8   JP       $2E8            ; Jump to 2E8
$A1A    $4822   SNE      V8, #22         ; Skip if V8 != 34
$A1C    $9D81   UNKNOWN  $9D81           ; Unknown 9xxx instruction
$A1E    $7596   ADD      V5, #96         ; Add 150 to V5
$A20    $BACB   JP       V0, $ACB        ; Jump to V0 + ACB
$A22    $69D5   LD       V9, #D5         ; Load 213 into V9
$A24    $EBDA   UNKNOWN  $EBDA           ; Unknown Exxx instruction
$A26    $93CB   UNKNOWN  $93CB           ; Unknown 9xxx instruction
$A28    $09DA   SYS      $9DA            ; System call to 9DA
$A2A    $BB4F   JP       V0, $B4F        ; Jump to V0 + B4F
$A2C    $8A47   SUBN     VA, V4          ; VA = V4 - VA, VF = !borrow
$A2E    $6629   LD       V6, #29         ; Load 41 into V6
$A30    $1B0D   JP       $B0D            ; Jump to B0D
$A32    $00D9   SYS      $0D9            ; System call to 0D9
$A34    $6158   LD       V1, #58         ; Load 88 into V1
$A36    $C424   RND      V4, #24         ; V4 = random & 24
$A38    $A097   LD       I, $097         ; Load 097 into I
$A3A    $EF96   UNKNOWN  $EF96           ; Unknown Exxx instruction
$A3C    $32CE   SE       V2, #CE         ; Skip if V2 == 206
$A3E    $03F6   SYS      $3F6            ; System call to 3F6
$A40    $4E20   SNE      VE, #20         ; Skip if VE != 32
$A42    $923F   UNKNOWN  $923F           ; Unknown 9xxx instruction
$A44    $B133   JP       V0, $133        ; Jump to V0 + 133
$A46    $0118   SYS      $118            ; System call to 118
$A48    $620C   LD       V2, #0C         ; Load 12 into V2
$A4A    $8DD3   XOR      VD, VD          ; VD ^= VD
$A4C    $8FAE   SHL      VF              ; VF <<= 1, VF = MSB
$A4E    $F009   UNKNOWN  F009            ; Unknown Fxxx instruction
$A50    $0874   SYS      $874            ; System call to 874
$A52    $ECB3   UNKNOWN  $ECB3           ; Unknown Exxx instruction
$A54    $7F9D   ADD      VF, #9D         ; Add 157 to VF
$A56    $C3A1   RND      V3, #A1         ; V3 = random & A1
$A58    $3826   SE       V8, #26         ; Skip if V8 == 38
$A5A    $80BA   UNKNOWN  80BA            ; Unknown 8xxx instruction
$A5C    $F6F8   UNKNOWN  F6F8            ; Unknown Fxxx instruction
$A5E    $106D   JP       $06D            ; Jump to 06D
$A60    $B504   JP       V0, $504        ; Jump to V0 + 504
$A62    $E33E   UNKNOWN  $E33E           ; Unknown Exxx instruction
$A64    $603E   LD       V0, #3E         ; Load 62 into V0
$A66    $64DC   LD       V4, #DC         ; Load 220 into V4
$A68    $3DEE   SE       VD, #EE         ; Skip if VD == 238
$A6A    $0512   SYS      $512            ; System call to 512
$A6C    $5911   UNKNOWN  $5911           ; Unknown 5xxx instruction
$A6E    $D57E   DRW      V5, V7, #E      ; Draw 14-byte sprite at V5, V7
$A70    $6A6D   LD       VA, #6D         ; Load 109 into VA
$A72    $B23D   JP       V0, $23D        ; Jump to V0 + 23D
$A74    $4246   SNE      V2, #46         ; Skip if V2 != 70
$A76    $0FC8   SYS      $FC8            ; System call to FC8
$A78    $169B   JP       $69B            ; Jump to 69B
$A7A    $24B0   CALL     $4B0            ; Call subroutine at 4B0
$A7C    $4E88   SNE      VE, #88         ; Skip if VE != 136
$A7E    $1C07   JP       $C07            ; Jump to C07
$A80    $7CF4   ADD      VC, #F4         ; Add 244 to VC
$A82    $55F6   UNKNOWN  $55F6           ; Unknown 5xxx instruction
$A84    $EEAD   UNKNOWN  $EEAD           ; Unknown Exxx instruction
$A86    $63A9   LD       V3, #A9         ; Load 169 into V3
$A88    $0668   SYS      $668            ; System call to 668
$A8A    $2704   CALL     $704            ; Call subroutine at 704
$A8C    $B2A5   JP       V0, $2A5        ; Jump to V0 + 2A5
$A8E    $77D7   ADD      V7, #D7         ; Add 215 to V7
$A90    $5695   UNKNOWN  $5695           ; Unknown 5xxx instruction
$A92    $702D   ADD      V0, #2D         ; Add 45 to V0
$A94    $5E10   SE       VE, V1          ; Skip if VE == V1
$A96    $5235   UNKNOWN  $5235           ; Unknown 5xxx instruction
$A98    $EC87   UNKNOWN  $EC87           ; Unknown Exxx instruction
$A9A    $EC5B   UNKNOWN  $EC5B           ; Unknown Exxx instruction
$A9C    $314C   SE       V1, #4C         ; Skip if V1 == 76
$A9E    $C45A   RND      V4, #5A         ; V4 = random & 5A
$AA0    $CFC4   RND      VF, #C4         ; VF = random & C4
$AA2    $DCD0   DRW      VC, VD, #0      ; Draw 0-byte sprite at VC, VD
$AA4    $CCDC   RND      VC, #DC         ; VC = random & DC
$AA6    $DB48   DRW      VB, V4, #8      ; Draw 8-byte sprite at VB, V4
$AA8    $8BD7   SUBN     VB, VD          ; VB = VD - VB, VF = !borrow
$AAA    $7B50   ADD      VB, #50         ; Add 80 to VB
$AAC    $E2A7   UNKNOWN  $E2A7           ; Unknown Exxx instruction
$AAE    $945E   UNKNOWN  $945E           ; Unknown 9xxx instruction
$AB0    $88FE   SHL      V8              ; V8 <<= 1, VF = MSB
$AB2    $2907   CALL     $907            ; Call subroutine at 907
$AB4    $8F6A   UNKNOWN  8F6A            ; Unknown 8xxx instruction
$AB6    $A2E3   LD       I, $2E3         ; Load 2E3 into I
$AB8    $5357   UNKNOWN  $5357           ; Unknown 5xxx instruction
$ABA    $4DA6   SNE      VD, #A6         ; Skip if VD != 166
$ABC    $8720   LD       V7, V2          ; V7 = V2
$ABE    $E95F   UNKNOWN  $E95F           ; Unknown Exxx instruction
$AC0    $49AC   SNE      V9, #AC         ; Skip if V9 != 172
$AC2    $5809   UNKNOWN  $5809           ; Unknown 5xxx instruction
$AC4    $48AD   SNE      V8, #AD         ; Skip if V8 != 173
$AC6    $FF17   UNKNOWN  FF17            ; Unknown Fxxx instruction
$AC8    $4497   SNE      V4, #97         ; Skip if V4 != 151
$ACA    $91E5   UNKNOWN  $91E5           ; Unknown 9xxx instruction
$ACC    $BC2E   JP       V0, $C2E        ; Jump to V0 + C2E
$ACE    $467A   SNE      V6, #7A         ; Skip if V6 != 122
$AD0    $8BCA   UNKNOWN  8BCA            ; Unknown 8xxx instruction
$AD2    $269A   CALL     $69A            ; Call subroutine at 69A
$AD4    $6AF2   LD       VA, #F2         ; Load 242 into VA
$AD6    $0017   SYS      $017            ; System call to 017
$AD8    $22C4   CALL     $2C4            ; Call subroutine at 2C4
$ADA    $006E   SYS      $06E            ; System call to 06E
$ADC    $F2AC   UNKNOWN  F2AC            ; Unknown Fxxx instruction
$ADE    $C37E   RND      V3, #7E         ; V3 = random & 7E
$AE0    $D300   DRW      V3, V0, #0      ; Draw 0-byte sprite at V3, V0
$AE2    $F6F2   UNKNOWN  F6F2            ; Unknown Fxxx instruction
$AE4    $E3F6   UNKNOWN  $E3F6           ; Unknown Exxx instruction
$AE6    $7206   ADD      V2, #06         ; Add 6 to V2
$AE8    $9F74   UNKNOWN  $9F74           ; Unknown 9xxx instruction
$AEA    $3855   SE       V8, #55         ; Skip if V8 == 85
$AEC    $41C9   SNE      V1, #C9         ; Skip if V1 != 201
$AEE    $D84E   DRW      V8, V4, #E      ; Draw 14-byte sprite at V8, V4
$AF0    $00ED   SYS      $0ED            ; System call to 0ED
$AF2    $B195   JP       V0, $195        ; Jump to V0 + 195
$AF4    $AD4F   LD       I, $D4F         ; Load D4F into I
$AF6    $F51C   UNKNOWN  F51C            ; Unknown Fxxx instruction
$AF8    $C6D0   RND      V6, #D0         ; V6 = random & D0
$AFA    $9BDF   UNKNOWN  $9BDF           ; Unknown 9xxx instruction
$AFC    $46AB   SNE      V6, #AB         ; Skip if V6 != 171
$AFE    $20C0   CALL     $0C0            ; Call subroutine at 0C0
$B00    $CEC4   RND      VE, #C4         ; VE = random & C4
$B02    $C512   RND      V5, #12         ; V5 = random & 12
$B04    $3FAF   SE       VF, #AF         ; Skip if VF == 175
$B06    $E005   UNKNOWN  $E005           ; Unknown Exxx instruction
$B08    $CFAD   RND      VF, #AD         ; VF = random & AD
$B0A    $4220   SNE      V2, #20         ; Skip if V2 != 32
$B0C    $F831   UNKNOWN  F831            ; Unknown Fxxx instruction
$B0E    $4239   SNE      V2, #39         ; Skip if V2 != 57
$B10    $1BE4   JP       $BE4            ; Jump to BE4
$B12    $4793   SNE      V7, #93         ; Skip if V7 != 147
$B14    $14E4   JP       $4E4            ; Jump to 4E4
$B16    $DC85   DRW      VC, V8, #5      ; Draw 5-byte sprite at VC, V8
$B18    $610B   LD       V1, #0B         ; Load 11 into V1
$B1A    $3FC9   SE       VF, #C9         ; Skip if VF == 201
$B1C    $6B4D   LD       VB, #4D         ; Load 77 into VB
$B1E    $7489   ADD      V4, #89         ; Add 137 to V4
$B20    $18B3   JP       $8B3            ; Jump to 8B3
$B22    $80CC   UNKNOWN  80CC            ; Unknown 8xxx instruction
$B24    $2B64   CALL     $B64            ; Call subroutine at B64
$B26    $BC39   JP       V0, $C39        ; Jump to V0 + C39
$B28    $E16A   UNKNOWN  $E16A           ; Unknown Exxx instruction
$B2A    $0D18   SYS      $D18            ; System call to D18
$B2C    $5D39   UNKNOWN  $5D39           ; Unknown 5xxx instruction
$B2E    $EDE1   UNKNOWN  $EDE1           ; Unknown Exxx instruction
$B30    $BE6B   JP       V0, $E6B        ; Jump to V0 + E6B
$B32    $7422   ADD      V4, #22         ; Add 34 to V4
$B34    $5EA9   UNKNOWN  $5EA9           ; Unknown 5xxx instruction
$B36    $3026   SE       V0, #26         ; Skip if V0 == 38
$B38    $16D4   JP       $6D4            ; Jump to 6D4
$B3A    $0D4F   SYS      $D4F            ; System call to D4F
$B3C    $3DD0   SE       VD, #D0         ; Skip if VD == 208
$B3E    $EE0B   UNKNOWN  $EE0B           ; Unknown Exxx instruction
$B40    $9DAA   UNKNOWN  $9DAA           ; Unknown 9xxx instruction
$B42    $7BCB   ADD      VB, #CB         ; Add 203 to VB
$B44    $C813   RND      V8, #13         ; V8 = random & 13
$B46    $1D00   JP       $D00            ; Jump to D00
$B48    $23DE   CALL     $3DE            ; Call subroutine at 3DE
$B4A    $E938   UNKNOWN  $E938           ; Unknown Exxx instruction
$B4C    $2516   CALL     $516            ; Call subroutine at 516
$B4E    $C7C0   RND      V7, #C0         ; V7 = random & C0
$B50    $D3FC   DRW      V3, VF, #C      ; Draw 12-byte sprite at V3, VF
$B52    $4347   SNE      V3, #47         ; Skip if V3 != 71
$B54    $8B19   UNKNOWN  8B19            ; Unknown 8xxx instruction
$B56    $76F8   ADD      V6, #F8         ; Add 248 to V6
$B58    $822B   UNKNOWN  822B            ; Unknown 8xxx instruction
$B5A    $D0DE   DRW      V0, VD, #E      ; Draw 14-byte sprite at V0, VD
$B5C    $23C8   CALL     $3C8            ; Call subroutine at 3C8
$B5E    $2530   CALL     $530            ; Call subroutine at 530
$B60    $53E0   SE       V3, VE          ; Skip if V3 == VE
$B62    $B8C8   JP       V0, $8C8        ; Jump to V0 + 8C8
$B64    $79E4   ADD      V9, #E4         ; Add 228 to V9
$B66    $3F33   SE       VF, #33         ; Skip if VF == 51
$B68    $8C0B   UNKNOWN  8C0B            ; Unknown 8xxx instruction
$B6A    $F2B1   UNKNOWN  F2B1            ; Unknown Fxxx instruction
$B6C    $F012   UNKNOWN  F012            ; Unknown Fxxx instruction
$B6E    $3A4C   SE       VA, #4C         ; Skip if VA == 76
$B70    $B99A   JP       V0, $99A        ; Jump to V0 + 99A
$B72    $D9CF   DRW      V9, VC, #F      ; Draw 15-byte sprite at V9, VC
$B74    $4DD0   SNE      VD, #D0         ; Skip if VD != 208
$B76    $91AF   UNKNOWN  $91AF           ; Unknown 9xxx instruction
$B78    $D841   DRW      V8, V4, #1      ; Draw 1-byte sprite at V8, V4
$B7A    $D735   DRW      V7, V3, #5      ; Draw 5-byte sprite at V7, V3
$B7C    $CC3C   RND      VC, #3C         ; VC = random & 3C
$B7E    $1A34   JP       $A34            ; Jump to A34
$B80    $6CF2   LD       VC, #F2         ; Load 242 into VC
$B82    $AD4C   LD       I, $D4C         ; Load D4C into I
$B84    $8B9C   UNKNOWN  8B9C            ; Unknown 8xxx instruction
$B86    $9905   UNKNOWN  $9905           ; Unknown 9xxx instruction
$B88    $E7A6   UNKNOWN  $E7A6           ; Unknown Exxx instruction
$B8A    $56D3   UNKNOWN  $56D3           ; Unknown 5xxx instruction
$B8C    $095B   SYS      $95B            ; System call to 95B
$B8E    $D73D   DRW      V7, V3, #D      ; Draw 13-byte sprite at V7, V3
$B90    $17F0   JP       $7F0            ; Jump to 7F0
$B92    $A76E   LD       I, $76E         ; Load 76E into I
$B94    $8710   LD       V7, V1          ; V7 = V1
$B96    $FD0B   UNKNOWN  FD0B            ; Unknown Fxxx instruction
$B98    $949B   UNKNOWN  $949B           ; Unknown 9xxx instruction
$B9A    $954A   UNKNOWN  $954A           ; Unknown 9xxx instruction
$B9C    $FAB3   UNKNOWN  FAB3            ; Unknown Fxxx instruction
$B9E    $D148   DRW      V1, V4, #8      ; Draw 8-byte sprite at V1, V4
$BA0    $C56F   RND      V5, #6F         ; V5 = random & 6F
$BA2    $C7DD   RND      V7, #DD         ; V7 = random & DD
$BA4    $7258   ADD      V2, #58         ; Add 88 to V2
$BA6    $BEC4   JP       V0, $EC4        ; Jump to V0 + EC4
$BA8    $4EBE   SNE      VE, #BE         ; Skip if VE != 190
$BAA    $82B8   UNKNOWN  82B8            ; Unknown 8xxx instruction
$BAC    $9CE1   UNKNOWN  $9CE1           ; Unknown 9xxx instruction
$BAE    $4369   SNE      V3, #69         ; Skip if V3 != 105
$BB0    $B069   JP       V0, $069        ; Jump to V0 + 069
$BB2    $29FB   CALL     $9FB            ; Call subroutine at 9FB
$BB4    $D54E   DRW      V5, V4, #E      ; Draw 14-byte sprite at V5, V4
$BB6    $3734   SE       V7, #34         ; Skip if V7 == 52
$BB8    $32B2   SE       V2, #B2         ; Skip if V2 == 178
$BBA    $5C51   UNKNOWN  $5C51           ; Unknown 5xxx instruction
$BBC    $EF52   UNKNOWN  $EF52           ; Unknown Exxx instruction
$BBE    $DF5B   DRW      VF, V5, #B      ; Draw 11-byte sprite at VF, V5
$BC0    $51A1   UNKNOWN  $51A1           ; Unknown 5xxx instruction
$BC2    $B868   JP       V0, $868        ; Jump to V0 + 868
$BC4    $5320   SE       V3, V2          ; Skip if V3 == V2
$BC6    $C705   RND      V7, #05         ; V7 = random & 05
$BC8    $0598   SYS      $598            ; System call to 598
$BCA    $7554   ADD      V5, #54         ; Add 84 to V5
$BCC    $375A   SE       V7, #5A         ; Skip if V7 == 90
$BCE    $2336   CALL     $336            ; Call subroutine at 336
$BD0    $7F1E   ADD      VF, #1E         ; Add 30 to VF
$BD2    $6531   LD       V5, #31         ; Load 49 into V5
$BD4    $5CBF   UNKNOWN  $5CBF           ; Unknown 5xxx instruction
$BD6    $7C77   ADD      VC, #77         ; Add 119 to VC
$BD8    $2C4C   CALL     $C4C            ; Call subroutine at C4C
$BDA    $AEE0   LD       I, $EE0         ; Load EE0 into I
$BDC    $EBE7   UNKNOWN  $EBE7           ; Unknown Exxx instruction
$BDE    $FAC6   UNKNOWN  FAC6            ; Unknown Fxxx instruction
$BE0    $B272   JP       V0, $272        ; Jump to V0 + 272
$BE2    $39FD   SE       V9, #FD         ; Skip if V9 == 253
$BE4    $50D0   SE       V0, VD          ; Skip if V0 == VD
$BE6    $7FEE   ADD      VF, #EE         ; Add 238 to VF
$BE8    $9A58   UNKNOWN  $9A58           ; Unknown 9xxx instruction
$BEA    $6CC2   LD       VC, #C2         ; Load 194 into VC
$BEC    $94C6   UNKNOWN  $94C6           ; Unknown 9xxx instruction
$BEE    $4243   SNE      V2, #43         ; Skip if V2 != 67
$BF0    $AF15   LD       I, $F15         ; Load F15 into I
$BF2    $7E4D   ADD      VE, #4D         ; Add 77 to VE
$BF4    $5B6B   UNKNOWN  $5B6B           ; Unknown 5xxx instruction
$BF6    $E0E2   UNKNOWN  $E0E2           ; Unknown Exxx instruction
$BF8    $0E6F   SYS      $E6F            ; System call to E6F
$BFA    $FBA5   UNKNOWN  FBA5            ; Unknown Fxxx instruction
$BFC    $2FA6   CALL     $FA6            ; Call subroutine at FA6
$BFE    $8015   SUB      V0, V1          ; V0 -= V1, VF = !borrow
$C00    $FE7C   UNKNOWN  FE7C            ; Unknown Fxxx instruction
$C02    $9BD6   UNKNOWN  $9BD6           ; Unknown 9xxx instruction
$C04    $CAD0   RND      VA, #D0         ; VA = random & D0
$C06    $AB1A   LD       I, $B1A         ; Load B1A into I
$C08    $C233   RND      V2, #33         ; V2 = random & 33
$C0A    $4392   SNE      V3, #92         ; Skip if V3 != 146
$C0C    $AF22   LD       I, $F22         ; Load F22 into I
$C0E    $3039   SE       V0, #39         ; Skip if V0 == 57
$C10    $17CC   JP       $7CC            ; Jump to 7CC
$C12    $EAC9   UNKNOWN  $EAC9           ; Unknown Exxx instruction
$C14    $812B   UNKNOWN  812B            ; Unknown 8xxx instruction
$C16    $01A9   SYS      $1A9            ; System call to 1A9
$C18    $BD9B   JP       V0, $D9B        ; Jump to V0 + D9B
$C1A    $60CE   LD       V0, #CE         ; Load 206 into V0
$C1C    $FC2D   UNKNOWN  FC2D            ; Unknown Fxxx instruction
$C1E    $FB66   UNKNOWN  FB66            ; Unknown Fxxx instruction
$C20    $70FA   ADD      V0, #FA         ; Add 250 to V0
$C22    $3FBE   SE       VF, #BE         ; Skip if VF == 190
$C24    $C2FF   RND      V2, #FF         ; V2 = random & FF
$C26    $AEE5   LD       I, $EE5         ; Load EE5 into I
$C28    $CA92   RND      VA, #92         ; VA = random & 92
$C2A    $AED0   LD       I, $ED0         ; Load ED0 into I
$C2C    $DE54   DRW      VE, V5, #4      ; Draw 4-byte sprite at VE, V5
$C2E    $895D   UNKNOWN  895D            ; Unknown 8xxx instruction
$C30    $5D8F   UNKNOWN  $5D8F           ; Unknown 5xxx instruction
$C32    $2898   CALL     $898            ; Call subroutine at 898
$C34    $1422   JP       $422            ; Jump to 422
$C36    $477D   SNE      V7, #7D         ; Skip if V7 != 125
$C38    $F16C   UNKNOWN  F16C            ; Unknown Fxxx instruction
$C3A    $0210   SYS      $210            ; System call to 210
$C3C    $BF4A   JP       V0, $F4A        ; Jump to V0 + F4A
$C3E    $B40F   JP       V0, $40F        ; Jump to V0 + 40F
$C40    $A6D1   LD       I, $6D1         ; Load 6D1 into I
$C42    $7CC1   ADD      VC, #C1         ; Add 193 to VC
$C44    $E698   UNKNOWN  $E698           ; Unknown Exxx instruction
$C46    $04D3   SYS      $4D3            ; System call to 4D3
$C48    $71A4   ADD      V1, #A4         ; Add 164 to V1
$C4A    $D987   DRW      V9, V8, #7      ; Draw 7-byte sprite at V9, V8
$C4C    $F6B0   UNKNOWN  F6B0            ; Unknown Fxxx instruction
$C4E    $F554   UNKNOWN  F554            ; Unknown Fxxx instruction
$C50    $C19D   RND      V1, #9D         ; V1 = random & 9D
$C52    $F61D   UNKNOWN  F61D            ; Unknown Fxxx instruction
$C54    $A63A   LD       I, $63A         ; Load 63A into I
$C56    $B24F   JP       V0, $24F        ; Jump to V0 + 24F
$C58    $FA0B   UNKNOWN  FA0B            ; Unknown Fxxx instruction
$C5A    $972B   UNKNOWN  $972B           ; Unknown 9xxx instruction
$C5C    $A6E1   LD       I, $6E1         ; Load 6E1 into I
$C5E    $4F59   SNE      VF, #59         ; Skip if VF != 89
$C60    $85E5   SUB      V5, VE          ; V5 -= VE, VF = !borrow
$C62    $8322   AND      V3, V2          ; V3 &= V2
$C64    $3F58   SE       VF, #58         ; Skip if VF == 88
$C66    $808C   UNKNOWN  808C            ; Unknown 8xxx instruction
$C68    $C844   RND      V8, #44         ; V8 = random & 44
$C6A    $E9C2   UNKNOWN  $E9C2           ; Unknown Exxx instruction
$C6C    $EFA1   SKNP     VF              ; Skip if key VF not pressed
$C6E    $9119   UNKNOWN  $9119           ; Unknown 9xxx instruction
$C70    $C094   RND      V0, #94         ; V0 = random & 94
$C72    $4D36   SNE      VD, #36         ; Skip if VD != 54
$C74    $AB3F   LD       I, $B3F         ; Load B3F into I
$C76    $E9F9   UNKNOWN  $E9F9           ; Unknown Exxx instruction
$C78    $EE98   UNKNOWN  $EE98           ; Unknown Exxx instruction
$C7A    $F7EE   UNKNOWN  F7EE            ; Unknown Fxxx instruction
$C7C    $D8F4   DRW      V8, VF, #4      ; Draw 4-byte sprite at V8, VF
$C7E    $AC96   LD       I, $C96         ; Load C96 into I
$C80    $D107   DRW      V1, V0, #7      ; Draw 7-byte sprite at V1, V0
$C82    $DDCB   DRW      VD, VC, #B      ; Draw 11-byte sprite at VD, VC
$C84    $7852   ADD      V8, #52         ; Add 82 to V8
$C86    $2EB8   CALL     $EB8            ; Call subroutine at EB8
$C88    $278D   CALL     $78D            ; Call subroutine at 78D
$C8A    $7745   ADD      V7, #45         ; Add 69 to V7
$C8C    $D7AE   DRW      V7, VA, #E      ; Draw 14-byte sprite at V7, VA
$C8E    $2F7B   CALL     $F7B            ; Call subroutine at F7B
$C90    $DA46   DRW      VA, V4, #6      ; Draw 6-byte sprite at VA, V4
$C92    $0767   SYS      $767            ; System call to 767
$C94    $2716   CALL     $716            ; Call subroutine at 716
$C96    $8F7F   UNKNOWN  8F7F            ; Unknown 8xxx instruction
$C98    $6B7C   LD       VB, #7C         ; Load 124 into VB
$C9A    $9E22   UNKNOWN  $9E22           ; Unknown 9xxx instruction
$C9C    $B3CC   JP       V0, $3CC        ; Jump to V0 + 3CC
$C9E    $C9F2   RND      V9, #F2         ; V9 = random & F2
$CA0    $6BEA   LD       VB, #EA         ; Load 234 into VB
$CA2    $DEF4   DRW      VE, VF, #4      ; Draw 4-byte sprite at VE, VF
$CA4    $6C95   LD       VC, #95         ; Load 149 into VC
$CA6    $66F6   LD       V6, #F6         ; Load 246 into V6
$CA8    $887C   UNKNOWN  887C            ; Unknown 8xxx instruction
$CAA    $5C39   UNKNOWN  $5C39           ; Unknown 5xxx instruction
$CAC    $99AD   UNKNOWN  $99AD           ; Unknown 9xxx instruction
$CAE    $7867   ADD      V8, #67         ; Add 103 to V8
$CB0    $BD87   JP       V0, $D87        ; Jump to V0 + D87
$CB2    $1E11   JP       $E11            ; Jump to E11
$CB4    $A973   LD       I, $973         ; Load 973 into I
$CB6    $9A4F   UNKNOWN  $9A4F           ; Unknown 9xxx instruction
$CB8    $6527   LD       V5, #27         ; Load 39 into V5
$CBA    $5285   UNKNOWN  $5285           ; Unknown 5xxx instruction
$CBC    $BB8C   JP       V0, $B8C        ; Jump to V0 + B8C
$CBE    $208B   CALL     $08B            ; Call subroutine at 08B
$CC0    $B185   JP       V0, $185        ; Jump to V0 + 185
$CC2    $B34A   JP       V0, $34A        ; Jump to V0 + 34A
$CC4    $0409   SYS      $409            ; System call to 409
$CC6    $839D   UNKNOWN  839D            ; Unknown 8xxx instruction
$CC8    $DAD8   DRW      VA, VD, #8      ; Draw 8-byte sprite at VA, VD
$CCA    $9897   UNKNOWN  $9897           ; Unknown 9xxx instruction
$CCC    $8065   SUB      V0, V6          ; V0 -= V6, VF = !borrow
$CCE    $3035   SE       V0, #35         ; Skip if V0 == 53
$CD0    $FDC7   UNKNOWN  FDC7            ; Unknown Fxxx instruction
$CD2    $AB14   LD       I, $B14         ; Load B14 into I
$CD4    $FA8B   UNKNOWN  FA8B            ; Unknown Fxxx instruction
$CD6    $C380   RND      V3, #80         ; V3 = random & 80
$CD8    $077D   SYS      $77D            ; System call to 77D
$CDA    $98E7   UNKNOWN  $98E7           ; Unknown 9xxx instruction
$CDC    $2186   CALL     $186            ; Call subroutine at 186
$CDE    $9245   UNKNOWN  $9245           ; Unknown 9xxx instruction
$CE0    $7ECA   ADD      VE, #CA         ; Add 202 to VE
$CE2    $AE3F   LD       I, $E3F         ; Load E3F into I
$CE4    $553A   UNKNOWN  $553A           ; Unknown 5xxx instruction
$CE6    $A60A   LD       I, $60A         ; Load 60A into I
$CE8    $9438   UNKNOWN  $9438           ; Unknown 9xxx instruction
$CEA    $9716   UNKNOWN  $9716           ; Unknown 9xxx instruction
$CEC    $F6A7   UNKNOWN  F6A7            ; Unknown Fxxx instruction
$CEE    $23C5   CALL     $3C5            ; Call subroutine at 3C5
$CF0    $5B6A   UNKNOWN  $5B6A           ; Unknown 5xxx instruction
$CF2    $FF9A   UNKNOWN  FF9A            ; Unknown Fxxx instruction
$CF4    $2FEB   CALL     $FEB            ; Call subroutine at FEB
$CF6    $9AB7   UNKNOWN  $9AB7           ; Unknown 9xxx instruction
$CF8    $A1CE   LD       I, $1CE         ; Load 1CE into I
$CFA    $FCEC   UNKNOWN  FCEC            ; Unknown Fxxx instruction
$CFC    $9F59   UNKNOWN  $9F59           ; Unknown 9xxx instruction
$CFE    $A410   LD       I, $410         ; Load 410 into I
$D00    $9DC9   UNKNOWN  $9DC9           ; Unknown 9xxx instruction
$D02    $A5AC   LD       I, $5AC         ; Load 5AC into I
$D04    $DCBD   DRW      VC, VB, #D      ; Draw 13-byte sprite at VC, VB
$D06    $6601   LD       V6, #01         ; Load 1 into V6
$D08    $0604   SYS      $604            ; System call to 604
$D0A    $E22A   UNKNOWN  $E22A           ; Unknown Exxx instruction
$D0C    $164C   JP       $64C            ; Jump to 64C
$D0E    $7445   ADD      V4, #45         ; Add 69 to V4
$D10    $1548   JP       $548            ; Jump to 548
$D12    $3651   SE       V6, #51         ; Skip if V6 == 81
$D14    $E3C5   UNKNOWN  $E3C5           ; Unknown Exxx instruction
$D16    $1A90   JP       $A90            ; Jump to A90
$D18    $13E8   JP       $3E8            ; Jump to 3E8
$D1A    $D3F9   DRW      V3, VF, #9      ; Draw 9-byte sprite at V3, VF
$D1C    $A885   LD       I, $885         ; Load 885 into I
$D1E    $4131   SNE      V1, #31         ; Skip if V1 != 49
$D20    $2D7B   CALL     $D7B            ; Call subroutine at D7B
$D22    $253F   CALL     $53F            ; Call subroutine at 53F
$D24    $1D8A   JP       $D8A            ; Jump to D8A
$D26    $8F3D   UNKNOWN  8F3D            ; Unknown 8xxx instruction
$D28    $BDCF   JP       V0, $DCF        ; Jump to V0 + DCF
$D2A    $A6E1   LD       I, $6E1         ; Load 6E1 into I
$D2C    $CD58   RND      VD, #58         ; VD = random & 58
$D2E    $D53F   DRW      V5, V3, #F      ; Draw 15-byte sprite at V5, V3
$D30    $5236   UNKNOWN  $5236           ; Unknown 5xxx instruction
$D32    $DCAC   DRW      VC, VA, #C      ; Draw 12-byte sprite at VC, VA
$D34    $AC04   LD       I, $C04         ; Load C04 into I
$D36    $5F4B   UNKNOWN  $5F4B           ; Unknown 5xxx instruction
$D38    $0A6B   SYS      $A6B            ; System call to A6B
$D3A    $C995   RND      V9, #95         ; V9 = random & 95
$D3C    $195E   JP       $95E            ; Jump to 95E
$D3E    $B452   JP       V0, $452        ; Jump to V0 + 452
$D40    $58B9   UNKNOWN  $58B9           ; Unknown 5xxx instruction
$D42    $544A   UNKNOWN  $544A           ; Unknown 5xxx instruction
$D44    $5BD3   UNKNOWN  $5BD3           ; Unknown 5xxx instruction
$D46    $A665   LD       I, $665         ; Load 665 into I
$D48    $2799   CALL     $799            ; Call subroutine at 799
$D4A    $2C0B   CALL     $C0B            ; Call subroutine at C0B
$D4C    $401A   SNE      V0, #1A         ; Skip if V0 != 26
$D4E    $3105   SE       V1, #05         ; Skip if V1 == 5
$D50    $AEE9   LD       I, $EE9         ; Load EE9 into I
$D52    $85F0   LD       V5, VF          ; V5 = VF
$D54    $84C7   SUBN     V4, VC          ; V4 = VC - V4, VF = !borrow
$D56    $E130   UNKNOWN  $E130           ; Unknown Exxx instruction
$D58    $7145   ADD      V1, #45         ; Add 69 to V1
$D5A    $4EE8   SNE      VE, #E8         ; Skip if VE != 232
$D5C    $E2F8   UNKNOWN  $E2F8           ; Unknown Exxx instruction
$D5E    $8EE9   UNKNOWN  8EE9            ; Unknown 8xxx instruction
$D60    $3FCD   SE       VF, #CD         ; Skip if VF == 205
$D62    $C033   RND      V0, #33         ; V0 = random & 33
$D64    $0AC7   SYS      $AC7            ; System call to AC7
$D66    $5A71   UNKNOWN  $5A71           ; Unknown 5xxx instruction
$D68    $BAAF   JP       V0, $AAF        ; Jump to V0 + AAF
$D6A    $275B   CALL     $75B            ; Call subroutine at 75B
$D6C    $F8AE   UNKNOWN  F8AE            ; Unknown Fxxx instruction
$D6E    $BAEF   JP       V0, $AEF        ; Jump to V0 + AEF
$D70    $ACEF   LD       I, $CEF         ; Load CEF into I
$D72    $5AEB   UNKNOWN  $5AEB           ; Unknown 5xxx instruction
$D74    $B5E9   JP       V0, $5E9        ; Jump to V0 + 5E9
$D76    $5A0A   UNKNOWN  $5A0A           ; Unknown 5xxx instruction
$D78    $B3B5   JP       V0, $3B5        ; Jump to V0 + 3B5
$D7A    $35B4   SE       V5, #B4         ; Skip if V5 == 180
$D7C    $9B4F   UNKNOWN  $9B4F           ; Unknown 9xxx instruction
$D7E    $1C7F   JP       $C7F            ; Jump to C7F
$D80    $14C5   JP       $4C5            ; Jump to 4C5
$D82    $29ED   CALL     $9ED            ; Call subroutine at 9ED
$D84    $D4D4   DRW      V4, VD, #4      ; Draw 4-byte sprite at V4, VD
$D86    $87A8   UNKNOWN  87A8            ; Unknown 8xxx instruction
$D88    $3AC6   SE       VA, #C6         ; Skip if VA == 198
$D8A    $EB77   UNKNOWN  $EB77           ; Unknown Exxx instruction
$D8C    $EB9F   UNKNOWN  $EB9F           ; Unknown Exxx instruction
$D8E    $D156   DRW      V1, V5, #6      ; Draw 6-byte sprite at V1, V5
$D90    $BB29   JP       V0, $B29        ; Jump to V0 + B29
$D92    $F9B4   UNKNOWN  F9B4            ; Unknown Fxxx instruction
$D94    $4E6D   SNE      VE, #6D         ; Skip if VE != 109
$D96    $0076   SYS      $076            ; System call to 076
$D98    $AC9E   LD       I, $C9E         ; Load C9E into I
$D9A    $858E   SHL      V5              ; V5 <<= 1, VF = MSB
$D9C    $7171   ADD      V1, #71         ; Add 113 to V1
$D9E    $5120   SE       V1, V2          ; Skip if V1 == V2
$DA0    $19A8   JP       $9A8            ; Jump to 9A8
$DA2    $B5E6   JP       V0, $5E6        ; Jump to V0 + 5E6
$DA4    $FEFC   UNKNOWN  FEFC            ; Unknown Fxxx instruction
$DA6    $DF8B   DRW      VF, V8, #B      ; Draw 11-byte sprite at VF, V8
$DA8    $F863   UNKNOWN  F863            ; Unknown Fxxx instruction
$DAA    $E1FA   UNKNOWN  $E1FA           ; Unknown Exxx instruction
$DAC    $C21B   RND      V2, #1B         ; V2 = random & 1B
$DAE    $31B0   SE       V1, #B0         ; Skip if V1 == 176
$DB0    $D96A   DRW      V9, V6, #A      ; Draw 10-byte sprite at V9, V6
$DB2    $D99F   DRW      V9, V9, #F      ; Draw 15-byte sprite at V9, V9
$DB4    $B673   JP       V0, $673        ; Jump to V0 + 673
$DB6    $0E15   SYS      $E15            ; System call to E15
$DB8    $E05B   UNKNOWN  $E05B           ; Unknown Exxx instruction
$DBA    $6927   LD       V9, #27         ; Load 39 into V9
$DBC    $D41D   DRW      V4, V1, #D      ; Draw 13-byte sprite at V4, V1
$DBE    $96E2   UNKNOWN  $96E2           ; Unknown 9xxx instruction
$DC0    $E532   UNKNOWN  $E532           ; Unknown Exxx instruction
$DC2    $35E3   SE       V5, #E3         ; Skip if V5 == 227
$DC4    $8745   SUB      V7, V4          ; V7 -= V4, VF = !borrow
$DC6    $46D8   SNE      V6, #D8         ; Skip if V6 != 216
$DC8    $DB3D   DRW      VB, V3, #D      ; Draw 13-byte sprite at VB, V3
$DCA    $53D7   UNKNOWN  $53D7           ; Unknown 5xxx instruction
$DCC    $FA87   UNKNOWN  FA87            ; Unknown Fxxx instruction
$DCE    $E5D5   UNKNOWN  $E5D5           ; Unknown Exxx instruction
$DD0    $DB8A   DRW      VB, V8, #A      ; Draw 10-byte sprite at VB, V8
$DD2    $A0D1   LD       I, $0D1         ; Load 0D1 into I
$DD4    $B931   JP       V0, $931        ; Jump to V0 + 931
$DD6    $0233   SYS      $233            ; System call to 233
$DD8    $0921   SYS      $921            ; System call to 921
$DDA    $79EB   ADD      V9, #EB         ; Add 235 to V9
$DDC    $6708   LD       V7, #08         ; Load 8 into V7
$DDE    $4800   SNE      V8, #00         ; Skip if V8 != 0
$DE0    $6BCD   LD       VB, #CD         ; Load 205 into VB
$DE2    $BDBB   JP       V0, $DBB        ; Jump to V0 + DBB
$DE4    $D45C   DRW      V4, V5, #C      ; Draw 12-byte sprite at V4, V5
$DE6    $8BC6   SHR      VB              ; VB >>= 1, VF = LSB
$DE8    $7AFA   ADD      VA, #FA         ; Add 250 to VA
$DEA    $96FE   UNKNOWN  $96FE           ; Unknown 9xxx instruction
$DEC    $D376   DRW      V3, V7, #6      ; Draw 6-byte sprite at V3, V7
$DEE    $27FF   CALL     $7FF            ; Call subroutine at 7FF
$DF0    $21A7   CALL     $1A7            ; Call subroutine at 1A7
$DF2    $BD1B   JP       V0, $D1B        ; Jump to V0 + D1B
$DF4    $A95B   LD       I, $95B         ; Load 95B into I
$DF6    $1F1F   JP       $F1F            ; Jump to F1F
$DF8    $FF6C   UNKNOWN  FF6C            ; Unknown Fxxx instruction
$DFA    $DBA7   DRW      VB, VA, #7      ; Draw 7-byte sprite at VB, VA
$DFC    $4628   SNE      V6, #28         ; Skip if V6 != 40
$DFE    $CA9A   RND      VA, #9A         ; VA = random & 9A
$E00    $672E   LD       V7, #2E         ; Load 46 into V7
$E02    $09E7   SYS      $9E7            ; System call to 9E7
$E04    $9F29   UNKNOWN  $9F29           ; Unknown 9xxx instruction
$E06    $F9E3   UNKNOWN  F9E3            ; Unknown Fxxx instruction
$E08    $1F4B   JP       $F4B            ; Jump to F4B
$E0A    $E464   UNKNOWN  $E464           ; Unknown Exxx instruction
$E0C    $6B9C   LD       VB, #9C         ; Load 156 into VB
$E0E    $6461   LD       V4, #61         ; Load 97 into V4
$E10    $3A15   SE       VA, #15         ; Skip if VA == 21
$E12    $9A0B   UNKNOWN  $9A0B           ; Unknown 9xxx instruction
$E14    $6CF0   LD       VC, #F0         ; Load 240 into VC
$E16    $81BB   UNKNOWN  81BB            ; Unknown 8xxx instruction
$E18    $BFF1   JP       V0, $FF1        ; Jump to V0 + FF1
$E1A    $5C3E   UNKNOWN  $5C3E           ; Unknown 5xxx instruction
$E1C    $C587   RND      V5, #87         ; V5 = random & 87
$E1E    $EA93   UNKNOWN  $EA93           ; Unknown Exxx instruction
$E20    $E0E9   UNKNOWN  $E0E9           ; Unknown Exxx instruction
$E22    $9535   UNKNOWN  $9535           ; Unknown 9xxx instruction
$E24    $74E2   ADD      V4, #E2         ; Add 226 to V4
$E26    $7E56   ADD      VE, #56         ; Add 86 to VE
$E28    $ADFD   LD       I, $DFD         ; Load DFD into I
$E2A    $D845   DRW      V8, V4, #5      ; Draw 5-byte sprite at V8, V4
$E2C    $A1EF   LD       I, $1EF         ; Load 1EF into I
$E2E    $8E63   XOR      VE, V6          ; VE ^= V6
$E30    $998F   UNKNOWN  $998F           ; Unknown 9xxx instruction
$E32    $04E9   SYS      $4E9            ; System call to 4E9
$E34    $BD3B   JP       V0, $D3B        ; Jump to V0 + D3B
$E36    $377A   SE       V7, #7A         ; Skip if V7 == 122
$E38    $A63B   LD       I, $63B         ; Load 63B into I
$E3A    $F820   UNKNOWN  F820            ; Unknown Fxxx instruction
$E3C    $4177   SNE      V1, #77         ; Skip if V1 != 119
$E3E    $7381   ADD      V3, #81         ; Add 129 to V3
$E40    $C5C2   RND      V5, #C2         ; V5 = random & C2
$E42    $F0A3   UNKNOWN  F0A3            ; Unknown Fxxx instruction
$E44    $5436   UNKNOWN  $5436           ; Unknown 5xxx instruction
$E46    $21D9   CALL     $1D9            ; Call subroutine at 1D9
$E48    $00CE   SYS      $0CE            ; System call to 0CE
$E4A    $4BBC   SNE      VB, #BC         ; Skip if VB != 188
$E4C    $078E   SYS      $78E            ; System call to 78E
$E4E    $FAC8   UNKNOWN  FAC8            ; Unknown Fxxx instruction
$E50    $FC27   UNKNOWN  FC27            ; Unknown Fxxx instruction
$E52    $2A0A   CALL     $A0A            ; Call subroutine at A0A
$E54    $6771   LD       V7, #71         ; Load 113 into V7
$E56    $A5E1   LD       I, $5E1         ; Load 5E1 into I
$E58    $7BD3   ADD      VB, #D3         ; Add 211 to VB
$E5A    $FE87   UNKNOWN  FE87            ; Unknown Fxxx instruction
$E5C    $59E9   UNKNOWN  $59E9           ; Unknown 5xxx instruction
$E5E    $A79A   LD       I, $79A         ; Load 79A into I
$E60    $488D   SNE      V8, #8D         ; Skip if V8 != 141
$E62    $D428   DRW      V4, V2, #8      ; Draw 8-byte sprite at V4, V2
$E64    $F27D   UNKNOWN  F27D            ; Unknown Fxxx instruction
$E66    $C81B   RND      V8, #1B         ; V8 = random & 1B
$E68    $516F   UNKNOWN  $516F           ; Unknown 5xxx instruction
$E6A    $5F09   UNKNOWN  $5F09           ; Unknown 5xxx instruction
$E6C    $9AC2   UNKNOWN  $9AC2           ; Unknown 9xxx instruction
$E6E    $272E   CALL     $72E            ; Call subroutine at 72E
$E70    $1B22   JP       $B22            ; Jump to B22
$E72    $9E0C   UNKNOWN  $9E0C           ; Unknown 9xxx instruction
$E74    $51E1   UNKNOWN  $51E1           ; Unknown 5xxx instruction
$E76    $E025   UNKNOWN  $E025           ; Unknown Exxx instruction
$E78    $ACB1   LD       I, $CB1         ; Load CB1 into I
$E7A    $CB09   RND      VB, #09         ; VB = random & 09
$E7C    $18EB   JP       $8EB            ; Jump to 8EB
$E7E    $AE1B   LD       I, $E1B         ; Load E1B into I
$E80    $D233   DRW      V2, V3, #3      ; Draw 3-byte sprite at V2, V3
$E82    $2C21   CALL     $C21            ; Call subroutine at C21
$E84    $42CC   SNE      V2, #CC         ; Skip if V2 != 204
$E86    $58FC   UNKNOWN  $58FC           ; Unknown 5xxx instruction
$E88    $2473   CALL     $473            ; Call subroutine at 473
$E8A    $E273   UNKNOWN  $E273           ; Unknown Exxx instruction
$E8C    $4B96   SNE      VB, #96         ; Skip if VB != 150
$E8E    $06BB   SYS      $6BB            ; System call to 6BB
$E90    $ECFC   UNKNOWN  $ECFC           ; Unknown Exxx instruction
$E92    $62F4   LD       V2, #F4         ; Load 244 into V2
$E94    $519E   UNKNOWN  $519E           ; Unknown 5xxx instruction
$E96    $6B88   LD       VB, #88         ; Load 136 into VB
$E98    $FDF1   UNKNOWN  FDF1            ; Unknown Fxxx instruction
$E9A    $D550   DRW      V5, V5, #0      ; Draw 0-byte sprite at V5, V5
$E9C    $6AD7   LD       VA, #D7         ; Load 215 into VA
$E9E    $C240   RND      V2, #40         ; V2 = random & 40
$EA0    $4FC4   SNE      VF, #C4         ; Skip if VF != 196
$EA2    $2E8D   CALL     $E8D            ; Call subroutine at E8D
$EA4    $AFF1   LD       I, $FF1         ; Load FF1 into I
$EA6    $E378   UNKNOWN  $E378           ; Unknown Exxx instruction
$EA8    $B6AA   JP       V0, $6AA        ; Jump to V0 + 6AA
$EAA    $FAB7   UNKNOWN  FAB7            ; Unknown Fxxx instruction
$EAC    $27D5   CALL     $7D5            ; Call subroutine at 7D5
$EAE    $B733   JP       V0, $733        ; Jump to V0 + 733
$EB0    $919C   UNKNOWN  $919C           ; Unknown 9xxx instruction
$EB2    $7986   ADD      V9, #86         ; Add 134 to V9
$EB4    $1EE9   JP       $EE9            ; Jump to EE9
$EB6    $42F5   SNE      V2, #F5         ; Skip if V2 != 245
$EB8    $0DFF   SYS      $DFF            ; System call to DFF
$EBA    $B9B9   JP       V0, $9B9        ; Jump to V0 + 9B9
$EBC    $B016   JP       V0, $016        ; Jump to V0 + 016
$EBE    $4252   SNE      V2, #52         ; Skip if V2 != 82
$EC0    $D078   DRW      V0, V7, #8      ; Draw 8-byte sprite at V0, V7
$EC2    $F333   LD       B, V3           ; Store BCD of V3 at I, I+1, I+2
$EC4    $090C   SYS      $90C            ; System call to 90C
$EC6    $4269   SNE      V2, #69         ; Skip if V2 != 105
$EC8    $25FF   CALL     $5FF            ; Call subroutine at 5FF
$ECA    $E058   UNKNOWN  $E058           ; Unknown Exxx instruction
$ECC    $62F9   LD       V2, #F9         ; Load 249 into V2
$ECE    $C92C   RND      V9, #2C         ; V9 = random & 2C
$ED0    $2DED   CALL     $DED            ; Call subroutine at DED
$ED2    $BC2E   JP       V0, $C2E        ; Jump to V0 + C2E
$ED4    $746D   ADD      V4, #6D         ; Add 109 to V4
$ED6    $66B8   LD       V6, #B8         ; Load 184 into V6
$ED8    $FE58   UNKNOWN  FE58            ; Unknown Fxxx instruction
$EDA    $4E41   SNE      VE, #41         ; Skip if VE != 65
$EDC    $E16D   UNKNOWN  $E16D           ; Unknown Exxx instruction
$EDE    $C3E4   RND      V3, #E4         ; V3 = random & E4
$EE0    $7B09   ADD      VB, #09         ; Add 9 to VB
$EE2    $DDFE   DRW      VD, VF, #E      ; Draw 14-byte sprite at VD, VF
$EE4    $1D46   JP       $D46            ; Jump to D46
$EE6    $ADBD   LD       I, $DBD         ; Load DBD into I
$EE8    $D6FB   DRW      V6, VF, #B      ; Draw 11-byte sprite at V6, VF
$EEA    $7B89   ADD      VB, #89         ; Add 137 to VB
$EEC    $B327   JP       V0, $327        ; Jump to V0 + 327
$EEE    $044F   SYS      $44F            ; System call to 44F
$EF0    $EEDB   UNKNOWN  $EEDB           ; Unknown Exxx instruction
$EF2    $4128   SNE      V1, #28         ; Skip if V1 != 40
$EF4    $C07B   RND      V0, #7B         ; V0 = random & 7B
$EF6    $3A93   SE       VA, #93         ; Skip if VA == 147
$EF8    $7326   ADD      V3, #26         ; Add 38 to V3
$EFA    $9B00   SNE      VB, V0          ; Skip if VB != V0
$EFC    $7248   ADD      V2, #48         ; Add 72 to V2
$EFE    $FDA1   UNKNOWN  FDA1            ; Unknown Fxxx instruction
$F00    $3817   SE       V8, #17         ; Skip if V8 == 23
$F02    $A68D   LD       I, $68D         ; Load 68D into I
$F04    $65A0   LD       V5, #A0         ; Load 160 into V5
$F06    $0753   SYS      $753            ; System call to 753
$F08    $A55D   LD       I, $55D         ; Load 55D into I
$F0A    $F5BC   UNKNOWN  F5BC            ; Unknown Fxxx instruction
$F0C    $D0AE   DRW      V0, VA, #E      ; Draw 14-byte sprite at V0, VA
$F0E    $DC0A   DRW      VC, V0, #A      ; Draw 10-byte sprite at VC, V0
$F10    $F05F   UNKNOWN  F05F            ; Unknown Fxxx instruction
$F12    $25BE   CALL     $5BE            ; Call subroutine at 5BE
$F14    $2A3C   CALL     $A3C            ; Call subroutine at A3C
$F16    $BD3A   JP       V0, $D3A        ; Jump to V0 + D3A
$F18    $EFB4   UNKNOWN  $EFB4           ; Unknown Exxx instruction
$F1A    $3015   SE       V0, #15         ; Skip if V0 == 21
$F1C    $59AF   UNKNOWN  $59AF           ; Unknown 5xxx instruction
$F1E    $9B58   UNKNOWN  $9B58           ; Unknown 9xxx instruction
$F20    $A6D8   LD       I, $6D8         ; Load 6D8 into I
$F22    $3F7F   SE       VF, #7F         ; Skip if VF == 127
$F24    $5230   SE       V2, V3          ; Skip if V2 == V3
$F26    $4CD9   SNE      VC, #D9         ; Skip if VC != 217
$F28    $3C32   SE       VC, #32         ; Skip if VC == 50
$F2A    $6527   LD       V5, #27         ; Load 39 into V5
$F2C    $4FA8   SNE      VF, #A8         ; Skip if VF != 168
$F2E    $3EFE   SE       VE, #FE         ; Skip if VE == 254
$F30    $DBE4   DRW      VB, VE, #4      ; Draw 4-byte sprite at VB, VE
$F32    $7B8E   ADD      VB, #8E         ; Add 142 to VB
$F34    $4332   SNE      V3, #32         ; Skip if V3 != 50
$F36    $756D   ADD      V5, #6D         ; Add 109 to V5
$F38    $CA1C   RND      VA, #1C         ; VA = random & 1C
$F3A    $32BA   SE       V2, #BA         ; Skip if V2 == 186
$F3C    $1F89   JP       $F89            ; Jump to F89
$F3E    $AABE   LD       I, $ABE         ; Load ABE into I
$F40    $105A   JP       $05A            ; Jump to 05A
$F42    $A91C   LD       I, $91C         ; Load 91C into I
$F44    $14AA   JP       $4AA            ; Jump to 4AA
$F46    $2685   CALL     $685            ; Call subroutine at 685
$F48    $EF21   UNKNOWN  $EF21           ; Unknown Exxx instruction
$F4A    $0F22   SYS      $F22            ; System call to F22
$F4C    $DA11   DRW      VA, V1, #1      ; Draw 1-byte sprite at VA, V1
$F4E    $647A   LD       V4, #7A         ; Load 122 into V4
$F50    $5D25   UNKNOWN  $5D25           ; Unknown 5xxx instruction
$F52    $E55C   UNKNOWN  $E55C           ; Unknown Exxx instruction
$F54    $9262   UNKNOWN  $9262           ; Unknown 9xxx instruction
$F56    $BA36   JP       V0, $A36        ; Jump to V0 + A36
$F58    $174C   JP       $74C            ; Jump to 74C
$F5A    $12F2   JP       $2F2            ; Jump to 2F2
$F5C    $C74D   RND      V7, #4D         ; V7 = random & 4D
$F5E    $0125   SYS      $125            ; System call to 125
$F60    $23C4   CALL     $3C4            ; Call subroutine at 3C4
$F62    $07F8   SYS      $7F8            ; System call to 7F8
$F64    $AF85   LD       I, $F85         ; Load F85 into I
$F66    $90C3   UNKNOWN  $90C3           ; Unknown 9xxx instruction
$F68    $DF97   DRW      VF, V9, #7      ; Draw 7-byte sprite at VF, V9
$F6A    $CC36   RND      VC, #36         ; VC = random & 36
$F6C    $6874   LD       V8, #74         ; Load 116 into V8
$F6E    $A672   LD       I, $672         ; Load 672 into I
$F70    $FE84   UNKNOWN  FE84            ; Unknown Fxxx instruction
$F72    $4D0D   SNE      VD, #0D         ; Skip if VD != 13
$F74    $5C24   UNKNOWN  $5C24           ; Unknown 5xxx instruction
$F76    $55DB   UNKNOWN  $55DB           ; Unknown 5xxx instruction
$F78    $93A8   UNKNOWN  $93A8           ; Unknown 9xxx instruction
$F7A    $BF77   JP       V0, $F77        ; Jump to V0 + F77
$F7C    $0DAE   SYS      $DAE            ; System call to DAE
$F7E    $FD1E   ADD      I, VD           ; I += VD
$F80    $3B03   SE       VB, #03         ; Skip if VB == 3
$F82    $F0B3   UNKNOWN  F0B3            ; Unknown Fxxx instruction
$F84    $8F5A   UNKNOWN  8F5A            ; Unknown 8xxx instruction
$F86    $1AF3   JP       $AF3            ; Jump to AF3
$F88    $C679   RND      V6, #79         ; V6 = random & 79
$F8A    $B14C   JP       V0, $14C        ; Jump to V0 + 14C
$F8C    $111B   JP       $11B            ; Jump to 11B
$F8E    $77AE   ADD      V7, #AE         ; Add 174 to V7
$F90    $47E4   SNE      V7, #E4         ; Skip if V7 != 228
$F92    $96EB   UNKNOWN  $96EB           ; Unknown 9xxx instruction
$F94    $8913   XOR      V9, V1          ; V9 ^= V1
$F96    $EA8B   UNKNOWN  $EA8B           ; Unknown Exxx instruction
$F98    $6CC3   LD       VC, #C3         ; Load 195 into VC
$F9A    $8740   LD       V7, V4          ; V7 = V4
$F9C    $144D   JP       $44D            ; Jump to 44D
$F9E    $FDB5   UNKNOWN  FDB5            ; Unknown Fxxx instruction
$FA0    $BFCC   JP       V0, $FCC        ; Jump to V0 + FCC
$FA2    $D0AD   DRW      V0, VA, #D      ; Draw 13-byte sprite at V0, VA
$FA4    $F303   UNKNOWN  F303            ; Unknown Fxxx instruction
$FA6    $FEC0   UNKNOWN  FEC0            ; Unknown Fxxx instruction
$FA8    $E3D3   UNKNOWN  $E3D3           ; Unknown Exxx instruction
$FAA    $A94F   LD       I, $94F         ; Load 94F into I
$FAC    $17B7   JP       $7B7            ; Jump to 7B7
$FAE    $9E09   UNKNOWN  $9E09           ; Unknown 9xxx instruction
$FB0    $C209   RND      V2, #09         ; V2 = random & 09
$FB2    $302E   SE       V0, #2E         ; Skip if V0 == 46
$FB4    $B6F9   JP       V0, $6F9        ; Jump to V0 + 6F9
$FB6    $2DBA   CALL     $DBA            ; Call subroutine at DBA
$FB8    $21E5   CALL     $1E5            ; Call subroutine at 1E5
$FBA    $D8A9   DRW      V8, VA, #9      ; Draw 9-byte sprite at V8, VA
$FBC    $08E9   SYS      $8E9            ; System call to 8E9
$FBE    $116E   JP       $16E            ; Jump to 16E
$FC0    $B847   JP       V0, $847        ; Jump to V0 + 847
$FC2    $D96E   DRW      V9, V6, #E      ; Draw 14-byte sprite at V9, V6
$FC4    $8A74   ADD      VA, V7          ; VA += V7, VF = carry
$FC6    $5C6A   UNKNOWN  $5C6A           ; Unknown 5xxx instruction
$FC8    $E3F5   UNKNOWN  $E3F5           ; Unknown Exxx instruction
$FCA    $C4E9   RND      V4, #E9         ; V4 = random & E9
$FCC    $3277   SE       V2, #77         ; Skip if V2 == 119
$FCE    $6205   LD       V2, #05         ; Load 5 into V2
$FD0    $ACD0   LD       I, $CD0         ; Load CD0 into I
$FD2    $E691   UNKNOWN  $E691           ; Unknown Exxx instruction
$FD4    $C797   RND      V7, #97         ; V7 = random & 97
$FD6    $FB4E   UNKNOWN  FB4E            ; Unknown Fxxx instruction
$FD8    $3D41   SE       VD, #41         ; Skip if VD == 65
$FDA    $A322   LD       I, $322         ; Load 322 into I
$FDC    $D182   DRW      V1, V8, #2      ; Draw 2-byte sprite at V1, V8
$FDE    $0638   SYS      $638            ; System call to 638
$FE0    $5E7A   UNKNOWN  $5E7A           ; Unknown 5xxx instruction
$FE2    $DE32   DRW      VE, V3, #2      ; Draw 2-byte sprite at VE, V3
$FE4    $D15F   DRW      V1, V5, #F      ; Draw 15-byte sprite at V1, V5
$FE6    $67F2   LD       V7, #F2         ; Load 242 into V7
$FE8    $5823   UNKNOWN  $5823           ; Unknown 5xxx instruction
$FEA    $472A   SNE      V7, #2A         ; Skip if V7 != 42
$FEC    $73F6   ADD      V3, #F6         ; Add 246 to V3
$FEE    $BE3E   JP       V0, $E3E        ; Jump to V0 + E3E
$FF0    $D75B   DRW      V7, V5, #B      ; Draw 11-byte sprite at V7, V5
$FF2    $BB10   JP       V0, $B10        ; Jump to V0 + B10
$FF4    $22AB   CALL     $2AB            ; Call subroutine at 2AB
$FF6    $CB86   RND      VB, #86         ; VB = random & 86
$FF8    $A0A1   LD       I, $0A1         ; Load 0A1 into I
$FFA    $BD0B   JP       V0, $D0B        ; Jump to V0 + D0B
$FFC    $D101   DRW      V1, V0, #1      ; Draw 1-byte sprite at V1, V0
$FFE    $D688   DRW      V6, V8, #8      ; Draw 8-byte sprite at V6, V8

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 508 (28.4%)
  JP      : 235 (13.1%)
  LD      : 206 (11.5%)
  SNE     : 123 ( 6.9%)
  DRW     : 118 ( 6.6%)
  RND     : 115 ( 6.4%)
  SYS     : 114 ( 6.4%)
  ADD     : 113 ( 6.3%)
  CALL    : 111 ( 6.2%)
  SE      : 104 ( 5.8%)
  XOR     :   9 ( 0.5%)
  SUB     :   7 ( 0.4%)
  SHL     :   6 ( 0.3%)
  SUBN    :   6 ( 0.3%)
  OR      :   6 ( 0.3%)
  AND     :   6 ( 0.3%)
  SHR     :   3 ( 0.2%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 319 (17.8%)
Arithmetic Operations: 147 (8.2%)
