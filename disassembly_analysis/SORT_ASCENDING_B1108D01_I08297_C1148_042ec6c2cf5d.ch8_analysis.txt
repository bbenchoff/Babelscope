
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B1108D01_I08297_C1148_042ec6c2cf5d.ch8
ROM Size: 3584 bytes
Instructions Found: 1791

DISCOVERY INFORMATION:
Batch: 1108
Instance: 8297
Direction: ascending
Final Array: [0, 0, 3, 81, 129, 172, 207, 235]
Operations: R:0 W:1 C:65 S:7

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 112
Sort Array References:
  $20E: LD I, $A52 ; Load A52 into I
  $228: LD I, $3FF ; Load 3FF into I
  $22A: LD I, $4B7 ; Load 4B7 into I
  $268: LD I, $1D0 ; Load 1D0 into I
  $28E: LD I, $E8D ; Load E8D into I
  $2F4: LD I, $023 ; Load 023 into I
  $2F8: LD I, $132 ; Load 132 into I
  $332: LD I, $3D6 ; Load 3D6 into I
  $346: LD I, $C81 ; Load C81 into I
  $366: LD I, $15B ; Load 15B into I
  $386: LD I, $45B ; Load 45B into I
  $39A: LD I, $9B9 ; Load 9B9 into I
  $3B2: LD I, $99A ; Load 99A into I
  $3BE: LD I, $A51 ; Load A51 into I
  $3D8: LD I, $1D5 ; Load 1D5 into I
  $3E6: LD I, $F62 ; Load F62 into I
  $3FE: LD I, $9C4 ; Load 9C4 into I
  $40C: LD I, $61A ; Load 61A into I
  $452: LD I, $E86 ; Load E86 into I
  $47E: LD I, $098 ; Load 098 into I
  $4B2: LD I, $36F ; Load 36F into I
  $4C6: LD I, $78A ; Load 78A into I
  $4F8: LD I, $290 ; Load 290 into I
  $506: LD I, $529 ; Load 529 into I
  $526: LD I, $AE1 ; Load AE1 into I
  $52E: LD I, $EA3 ; Load EA3 into I
  $538: LD I, $E86 ; Load E86 into I
  $542: LD I, $037 ; Load 037 into I
  $55A: LD I, $FB2 ; Load FB2 into I
  $560: LD I, $1B6 ; Load 1B6 into I
  $578: LD I, $8E3 ; Load 8E3 into I
  $5A0: LD I, $357 ; Load 357 into I
  $5FC: LD I, $E20 ; Load E20 into I
  $602: LD I, $A0B ; Load A0B into I
  $610: LD I, $563 ; Load 563 into I
  $660: LD I, $C00 ; Load C00 into I
  $678: LD I, $6F6 ; Load 6F6 into I
  $680: LD I, $97D ; Load 97D into I
  $684: LD I, $BAD ; Load BAD into I
  $6DE: LD I, $D16 ; Load D16 into I
  $6F4: LD I, $60E ; Load 60E into I
  $728: LD I, $882 ; Load 882 into I
  $73C: LD I, $13F ; Load 13F into I
  $752: LD I, $486 ; Load 486 into I
  $786: LD I, $C0F ; Load C0F into I
  $78A: LD I, $276 ; Load 276 into I
  $78C: LD I, $289 ; Load 289 into I
  $79E: LD I, $035 ; Load 035 into I
  $7AA: LD I, $631 ; Load 631 into I
  $7DA: LD I, $190 ; Load 190 into I
  $7F8: LD I, $4B5 ; Load 4B5 into I
  $81E: LD I, $3DC ; Load 3DC into I
  $836: LD I, $D09 ; Load D09 into I
  $856: LD I, $ABD ; Load ABD into I
  $860: LD I, $AE5 ; Load AE5 into I
  $878: LD I, $E6F ; Load E6F into I
  $8EE: LD I, $351 ; Load 351 into I
  $90A: LD I, $028 ; Load 028 into I
  $944: LD I, $89D ; Load 89D into I
  $94C: LD I, $5CC ; Load 5CC into I
  $97C: LD I, $1DC ; Load 1DC into I
  $A18: LD I, $374 ; Load 374 into I
  $A28: LD I, $AAF ; Load AAF into I
  $A60: LD I, $1AD ; Load 1AD into I
  $A76: LD I, $C9B ; Load C9B into I
  $A7E: LD I, $D76 ; Load D76 into I
  $A98: LD I, $AD3 ; Load AD3 into I
  $AAA: LD I, $552 ; Load 552 into I
  $AC0: LD I, $7A6 ; Load 7A6 into I
  $AC6: LD I, $BA5 ; Load BA5 into I
  $ACC: LD I, $B9A ; Load B9A into I
  $AEC: LD I, $7CF ; Load 7CF into I
  $AFC: LD I, $1B8 ; Load 1B8 into I
  $B04: LD I, $F58 ; Load F58 into I
  $B36: LD I, $A1A ; Load A1A into I
  $B56: LD I, $557 ; Load 557 into I
  $B5A: LD I, $89B ; Load 89B into I
  $B7E: LD I, $F60 ; Load F60 into I
  $B84: LD I, $14B ; Load 14B into I
  $BFE: LD I, $119 ; Load 119 into I
  $C34: LD I, $204 ; Load 204 into I
  $C38: LD I, $ADC ; Load ADC into I
  $CA2: LD I, $EFF ; Load EFF into I
  $CBA: LD I, $367 ; Load 367 into I
  $CCA: LD I, $D1A ; Load D1A into I
  $CD2: LD I, $C61 ; Load C61 into I
  $D0C: LD I, $7C9 ; Load 7C9 into I
  $D96: LD I, $082 ; Load 082 into I
  $DA6: LD I, $D8F ; Load D8F into I
  $DC0: LD I, $11F ; Load 11F into I
  $DD6: LD I, $BD7 ; Load BD7 into I
  $DE4: LD I, $ED9 ; Load ED9 into I
  $DF4: LD I, $C8F ; Load C8F into I
  $E08: LD I, $845 ; Load 845 into I
  $E24: LD I, $129 ; Load 129 into I
  $E40: LD I, $65C ; Load 65C into I
  $E5C: LD I, $C52 ; Load C52 into I
  $E7C: LD I, $9C6 ; Load 9C6 into I
  $E80: LD I, $965 ; Load 965 into I
  $EAA: LD I, $CD1 ; Load CD1 into I
  $EB8: LD I, $F6E ; Load F6E into I
  $EC6: LD I, $BAA ; Load BAA into I
  $F14: LD I, $465 ; Load 465 into I
  $F2C: LD I, $B34 ; Load B34 into I
  $F74: LD I, $98D ; Load 98D into I
  $F7A: LD I, $8AC ; Load 8AC into I
  $F7C: LD I, $269 ; Load 269 into I
  $F8A: LD I, $814 ; Load 814 into I
  $F94: LD I, $292 ; Load 292 into I
  $F9E: LD I, $F14 ; Load F14 into I
  $FBE: LD I, $50B ; Load 50B into I
  $FDC: LD I, $086 ; Load 086 into I

CONTROL FLOW ANALYSIS:
Jumps: 230
Calls: 112
Branches: 237
Loops: 114
Loop Structures:
  $2B0 -> $0AA (backward jump)
  $2E8 -> $13E (backward jump)
  $3D6 -> $2CC (backward jump)
  $3EC -> $0C1 (backward jump)
  $406 -> $13E (backward jump)
  $458 -> $1F7 (backward jump)
  $45C -> $1B9 (backward jump)
  $4C4 -> $44A (backward jump)
  $4E4 -> $306 (backward jump)
  $4FC -> $0E7 (backward jump)
  $514 -> $0E2 (backward jump)
  $540 -> $3F2 (backward jump)
  $59C -> $24A (backward jump)
  $65E -> $007 (backward jump)
  $676 -> $513 (backward jump)
  $6AC -> $158 (backward jump)
  $6CC -> $5DB (backward jump)
  $6EC -> $506 (backward jump)
  $6EE -> $5D6 (backward jump)
  $6FE -> $277 (backward jump)
  $700 -> $2B3 (backward jump)
  $730 -> $401 (backward jump)
  $756 -> $6F5 (backward jump)
  $75E -> $6E2 (backward jump)
  $768 -> $543 (backward jump)
  $76A -> $6D1 (backward jump)
  $76C -> $265 (backward jump)
  $778 -> $244 (backward jump)
  $78E -> $61A (backward jump)
  $80A -> $143 (backward jump)
  $834 -> $690 (backward jump)
  $850 -> $0EF (backward jump)
  $89C -> $1F0 (backward jump)
  $8D0 -> $7F1 (backward jump)
  $8D4 -> $3DF (backward jump)
  $8FE -> $12A (backward jump)
  $93C -> $62A (backward jump)
  $948 -> $5C7 (backward jump)
  $96C -> $84B (backward jump)
  $988 -> $7EC (backward jump)
  $992 -> $7D2 (backward jump)
  $99C -> $315 (backward jump)
  $9BC -> $71B (backward jump)
  $9BE -> $07B (backward jump)
  $9FE -> $02A (backward jump)
  $A04 -> $372 (backward jump)
  $A0E -> $3DD (backward jump)
  $A80 -> $172 (backward jump)
  $AA6 -> $0D3 (backward jump)
  $AB4 -> $932 (backward jump)
  $AB8 -> $89F (backward jump)
  $ABA -> $8D1 (backward jump)
  $AD6 -> $63B (backward jump)
  $B16 -> $664 (backward jump)
  $B52 -> $7A5 (backward jump)
  $B62 -> $A07 (backward jump)
  $B70 -> $9F4 (backward jump)
  $B82 -> $6EF (backward jump)
  $B90 -> $4A1 (backward jump)
  $BA0 -> $945 (backward jump)
  $BA2 -> $6F0 (backward jump)
  $BB6 -> $3B3 (backward jump)
  $BBC -> $297 (backward jump)
  $BD8 -> $8D1 (backward jump)
  $BE6 -> $760 (backward jump)
  $C40 -> $2D8 (backward jump)
  $C44 -> $AD2 (backward jump)
  $C4A -> $1B9 (backward jump)
  $CA6 -> $7B2 (backward jump)
  $CBE -> $0BB (backward jump)
  $CC2 -> $537 (backward jump)
  $CD0 -> $69C (backward jump)
  $CF0 -> $9DF (backward jump)
  $D18 -> $9FD (backward jump)
  $D54 -> $499 (backward jump)
  $D64 -> $D52 (backward jump)
  $D7C -> $17D (backward jump)
  $D86 -> $B50 (backward jump)
  $DA2 -> $383 (backward jump)
  $DBA -> $42C (backward jump)
  $DBE -> $B2A (backward jump)
  $DC4 -> $353 (backward jump)
  $DC8 -> $AD2 (backward jump)
  $DE0 -> $85C (backward jump)
  $DEE -> $4E5 (backward jump)
  $E02 -> $7F6 (backward jump)
  $E30 -> $06C (backward jump)
  $E36 -> $960 (backward jump)
  $E3C -> $172 (backward jump)
  $E52 -> $99A (backward jump)
  $E54 -> $AFE (backward jump)
  $E64 -> $D48 (backward jump)
  $E6C -> $E2E (backward jump)
  $E6E -> $564 (backward jump)
  $E72 -> $905 (backward jump)
  $E96 -> $A4D (backward jump)
  $E9E -> $870 (backward jump)
  $EB6 -> $5C1 (backward jump)
  $EDC -> $295 (backward jump)
  $EE4 -> $CE4 (backward jump)
  $F02 -> $CED (backward jump)
  $F4A -> $ECF (backward jump)
  $F50 -> $1BA (backward jump)
  $F58 -> $00B (backward jump)
  $F90 -> $CC2 (backward jump)
  $F92 -> $EB4 (backward jump)
  $F96 -> $500 (backward jump)
  $F98 -> $8F3 (backward jump)
  $FA0 -> $071 (backward jump)
  $FAA -> $BAE (backward jump)
  $FB8 -> $08F (backward jump)
  $FD0 -> $D44 (backward jump)
  $FD4 -> $994 (backward jump)
  $FE8 -> $BA6 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $5496   UNKNOWN  $5496           ; Unknown 5xxx instruction
$202    $5F6F   UNKNOWN  $5F6F           ; Unknown 5xxx instruction
$204    $5671   UNKNOWN  $5671           ; Unknown 5xxx instruction
$206    $C4F0   RND      V4, #F0         ; V4 = random & F0
$208    $2C51   CALL     $C51            ; Call subroutine at C51
$20A    $B6E7   JP       V0, $6E7        ; Jump to V0 + 6E7
$20C    $4ECE   SNE      VE, #CE         ; Skip if VE != 206
$20E    $AA52   LD       I, $A52         ; Load A52 into I
$210    $00C4   SYS      $0C4            ; System call to 0C4
$212    $FAE0   UNKNOWN  FAE0            ; Unknown Fxxx instruction
$214    $1F84   JP       $F84            ; Jump to F84
$216    $51D4   UNKNOWN  $51D4           ; Unknown 5xxx instruction
$218    $0858   SYS      $858            ; System call to 858
$21A    $6CF4   LD       VC, #F4         ; Load 244 into VC
$21C    $9077   UNKNOWN  $9077           ; Unknown 9xxx instruction
$21E    $B8F0   JP       V0, $8F0        ; Jump to V0 + 8F0
$220    $D2D7   DRW      V2, VD, #7      ; Draw 7-byte sprite at V2, VD
$222    $E7A0   UNKNOWN  $E7A0           ; Unknown Exxx instruction
$224    $CE28   RND      VE, #28         ; VE = random & 28
$226    $53C0   SE       V3, VC          ; Skip if V3 == VC
$228    $A3FF   LD       I, $3FF         ; Load 3FF into I
$22A    $A4B7   LD       I, $4B7         ; Load 4B7 into I
$22C    $FA17   UNKNOWN  FA17            ; Unknown Fxxx instruction
$22E    $39CE   SE       V9, #CE         ; Skip if V9 == 206
$230    $7CCB   ADD      VC, #CB         ; Add 203 to VC
$232    $97C0   SNE      V7, VC          ; Skip if V7 != VC
$234    $C83F   RND      V8, #3F         ; V8 = random & 3F
$236    $38C7   SE       V8, #C7         ; Skip if V8 == 199
$238    $F401   UNKNOWN  F401            ; Unknown Fxxx instruction
$23A    $CF1E   RND      VF, #1E         ; VF = random & 1E
$23C    $2764   CALL     $764            ; Call subroutine at 764
$23E    $99AA   UNKNOWN  $99AA           ; Unknown 9xxx instruction
$240    $6086   LD       V0, #86         ; Load 134 into V0
$242    $199D   JP       $99D            ; Jump to 99D
$244    $E374   UNKNOWN  $E374           ; Unknown Exxx instruction
$246    $19D1   JP       $9D1            ; Jump to 9D1
$248    $BACC   JP       V0, $ACC        ; Jump to V0 + ACC
$24A    $64C6   LD       V4, #C6         ; Load 198 into V4
$24C    $BBAC   JP       V0, $BAC        ; Jump to V0 + BAC
$24E    $6BAC   LD       VB, #AC         ; Load 172 into VB
$250    $BCE2   JP       V0, $CE2        ; Jump to V0 + CE2
$252    $B979   JP       V0, $979        ; Jump to V0 + 979
$254    $B27E   JP       V0, $27E        ; Jump to V0 + 27E
$256    $1989   JP       $989            ; Jump to 989
$258    $F50E   UNKNOWN  F50E            ; Unknown Fxxx instruction
$25A    $8DAD   UNKNOWN  8DAD            ; Unknown 8xxx instruction
$25C    $BA3C   JP       V0, $A3C        ; Jump to V0 + A3C
$25E    $FB29   LD       F, VB           ; I = sprite address for digit VB
$260    $1A4D   JP       $A4D            ; Jump to A4D
$262    $2EF7   CALL     $EF7            ; Call subroutine at EF7
$264    $54BD   UNKNOWN  $54BD           ; Unknown 5xxx instruction
$266    $23BF   CALL     $3BF            ; Call subroutine at 3BF
$268    $A1D0   LD       I, $1D0         ; Load 1D0 into I
$26A    $7F8B   ADD      VF, #8B         ; Add 139 to VF
$26C    $1E50   JP       $E50            ; Jump to E50
$26E    $056E   SYS      $56E            ; System call to 56E
$270    $CB1E   RND      VB, #1E         ; VB = random & 1E
$272    $203F   CALL     $03F            ; Call subroutine at 03F
$274    $0E25   SYS      $E25            ; System call to E25
$276    $2898   CALL     $898            ; Call subroutine at 898
$278    $2AA6   CALL     $AA6            ; Call subroutine at AA6
$27A    $2A77   CALL     $A77            ; Call subroutine at A77
$27C    $BAA3   JP       V0, $AA3        ; Jump to V0 + AA3
$27E    $9C06   UNKNOWN  $9C06           ; Unknown 9xxx instruction
$280    $41E9   SNE      V1, #E9         ; Skip if V1 != 233
$282    $4476   SNE      V4, #76         ; Skip if V4 != 118
$284    $49AC   SNE      V9, #AC         ; Skip if V9 != 172
$286    $267F   CALL     $67F            ; Call subroutine at 67F
$288    $5C94   UNKNOWN  $5C94           ; Unknown 5xxx instruction
$28A    $7DF0   ADD      VD, #F0         ; Add 240 to VD
$28C    $C834   RND      V8, #34         ; V8 = random & 34
$28E    $AE8D   LD       I, $E8D         ; Load E8D into I
$290    $8DE2   AND      VD, VE          ; VD &= VE
$292    $7E2B   ADD      VE, #2B         ; Add 43 to VE
$294    $4553   SNE      V5, #53         ; Skip if V5 != 83
$296    $8707   SUBN     V7, V0          ; V7 = V0 - V7, VF = !borrow
$298    $66FB   LD       V6, #FB         ; Load 251 into V6
$29A    $EC03   UNKNOWN  $EC03           ; Unknown Exxx instruction
$29C    $2731   CALL     $731            ; Call subroutine at 731
$29E    $05A1   SYS      $5A1            ; System call to 5A1
$2A0    $D56C   DRW      V5, V6, #C      ; Draw 12-byte sprite at V5, V6
$2A2    $9881   UNKNOWN  $9881           ; Unknown 9xxx instruction
$2A4    $6657   LD       V6, #57         ; Load 87 into V6
$2A6    $04A4   SYS      $4A4            ; System call to 4A4
$2A8    $4888   SNE      V8, #88         ; Skip if V8 != 136
$2AA    $411B   SNE      V1, #1B         ; Skip if V1 != 27
$2AC    $D703   DRW      V7, V0, #3      ; Draw 3-byte sprite at V7, V0
$2AE    $43FD   SNE      V3, #FD         ; Skip if V3 != 253
$2B0    $10AA   JP       $0AA            ; Jump to 0AA
$2B2    $EE42   UNKNOWN  $EE42           ; Unknown Exxx instruction
$2B4    $454A   SNE      V5, #4A         ; Skip if V5 != 74
$2B6    $D1D9   DRW      V1, VD, #9      ; Draw 9-byte sprite at V1, VD
$2B8    $74EE   ADD      V4, #EE         ; Add 238 to V4
$2BA    $1CC2   JP       $CC2            ; Jump to CC2
$2BC    $F8E1   UNKNOWN  F8E1            ; Unknown Fxxx instruction
$2BE    $B6A6   JP       V0, $6A6        ; Jump to V0 + 6A6
$2C0    $2E68   CALL     $E68            ; Call subroutine at E68
$2C2    $9582   UNKNOWN  $9582           ; Unknown 9xxx instruction
$2C4    $C0E7   RND      V0, #E7         ; V0 = random & E7
$2C6    $C6E7   RND      V6, #E7         ; V6 = random & E7
$2C8    $CBEB   RND      VB, #EB         ; VB = random & EB
$2CA    $06A9   SYS      $6A9            ; System call to 6A9
$2CC    $1C77   JP       $C77            ; Jump to C77
$2CE    $593D   UNKNOWN  $593D           ; Unknown 5xxx instruction
$2D0    $CC6B   RND      VC, #6B         ; VC = random & 6B
$2D2    $4308   SNE      V3, #08         ; Skip if V3 != 8
$2D4    $1F14   JP       $F14            ; Jump to F14
$2D6    $3B82   SE       VB, #82         ; Skip if VB == 130
$2D8    $EEE0   UNKNOWN  $EEE0           ; Unknown Exxx instruction
$2DA    $6648   LD       V6, #48         ; Load 72 into V6
$2DC    $E75B   UNKNOWN  $E75B           ; Unknown Exxx instruction
$2DE    $D198   DRW      V1, V9, #8      ; Draw 8-byte sprite at V1, V9
$2E0    $2A4E   CALL     $A4E            ; Call subroutine at A4E
$2E2    $9E1D   UNKNOWN  $9E1D           ; Unknown 9xxx instruction
$2E4    $5D71   UNKNOWN  $5D71           ; Unknown 5xxx instruction
$2E6    $8095   SUB      V0, V9          ; V0 -= V9, VF = !borrow
$2E8    $113E   JP       $13E            ; Jump to 13E
$2EA    $DCCE   DRW      VC, VC, #E      ; Draw 14-byte sprite at VC, VC
$2EC    $716A   ADD      V1, #6A         ; Add 106 to V1
$2EE    $743A   ADD      V4, #3A         ; Add 58 to V4
$2F0    $E782   UNKNOWN  $E782           ; Unknown Exxx instruction
$2F2    $E195   UNKNOWN  $E195           ; Unknown Exxx instruction
$2F4    $A023   LD       I, $023         ; Load 023 into I
$2F6    $CB22   RND      VB, #22         ; VB = random & 22
$2F8    $A132   LD       I, $132         ; Load 132 into I
$2FA    $1A24   JP       $A24            ; Jump to A24
$2FC    $14CD   JP       $4CD            ; Jump to 4CD
$2FE    $CCF0   RND      VC, #F0         ; VC = random & F0
$302    $0351   SYS      $351            ; System call to 351
$304    $81AC   UNKNOWN  81AC            ; Unknown 8xxx instruction
$306    $CFEB   RND      VF, #EB         ; VF = random & EB
$308    $485B   SNE      V8, #5B         ; Skip if V8 != 91
$30A    $86D7   SUBN     V6, VD          ; V6 = VD - V6, VF = !borrow
$30C    $DB21   DRW      VB, V2, #1      ; Draw 1-byte sprite at VB, V2
$30E    $624D   LD       V2, #4D         ; Load 77 into V2
$310    $7D80   ADD      VD, #80         ; Add 128 to VD
$312    $50FE   UNKNOWN  $50FE           ; Unknown 5xxx instruction
$314    $24B3   CALL     $4B3            ; Call subroutine at 4B3
$316    $0B64   SYS      $B64            ; System call to B64
$318    $C0F5   RND      V0, #F5         ; V0 = random & F5
$31A    $740C   ADD      V4, #0C         ; Add 12 to V4
$31C    $C48D   RND      V4, #8D         ; V4 = random & 8D
$31E    $9D5D   UNKNOWN  $9D5D           ; Unknown 9xxx instruction
$320    $6373   LD       V3, #73         ; Load 115 into V3
$322    $6C5F   LD       VC, #5F         ; Load 95 into VC
$324    $779C   ADD      V7, #9C         ; Add 156 to V7
$326    $7A7B   ADD      VA, #7B         ; Add 123 to VA
$328    $4601   SNE      V6, #01         ; Skip if V6 != 1
$32A    $8DB2   AND      VD, VB          ; VD &= VB
$32C    $09FE   SYS      $9FE            ; System call to 9FE
$32E    $E357   UNKNOWN  $E357           ; Unknown Exxx instruction
$330    $F705   UNKNOWN  F705            ; Unknown Fxxx instruction
$332    $A3D6   LD       I, $3D6         ; Load 3D6 into I
$334    $E171   UNKNOWN  $E171           ; Unknown Exxx instruction
$336    $6C07   LD       VC, #07         ; Load 7 into VC
$338    $F4B9   UNKNOWN  F4B9            ; Unknown Fxxx instruction
$33A    $8DE7   SUBN     VD, VE          ; VD = VE - VD, VF = !borrow
$33C    $1CAC   JP       $CAC            ; Jump to CAC
$33E    $F688   UNKNOWN  F688            ; Unknown Fxxx instruction
$340    $D9FB   DRW      V9, VF, #B      ; Draw 11-byte sprite at V9, VF
$342    $6E29   LD       VE, #29         ; Load 41 into VE
$344    $3864   SE       V8, #64         ; Skip if V8 == 100
$346    $AC81   LD       I, $C81         ; Load C81 into I
$348    $4BD9   SNE      VB, #D9         ; Skip if VB != 217
$34A    $3F28   SE       VF, #28         ; Skip if VF == 40
$34C    $19B0   JP       $9B0            ; Jump to 9B0
$34E    $2CA5   CALL     $CA5            ; Call subroutine at CA5
$350    $B5F0   JP       V0, $5F0        ; Jump to V0 + 5F0
$352    $B631   JP       V0, $631        ; Jump to V0 + 631
$354    $69EE   LD       V9, #EE         ; Load 238 into V9
$356    $2E2F   CALL     $E2F            ; Call subroutine at E2F
$358    $C596   RND      V5, #96         ; V5 = random & 96
$35A    $E600   UNKNOWN  $E600           ; Unknown Exxx instruction
$35C    $4A2A   SNE      VA, #2A         ; Skip if VA != 42
$35E    $4F20   SNE      VF, #20         ; Skip if VF != 32
$360    $F02B   UNKNOWN  F02B            ; Unknown Fxxx instruction
$362    $B93D   JP       V0, $93D        ; Jump to V0 + 93D
$364    $5453   UNKNOWN  $5453           ; Unknown 5xxx instruction
$366    $A15B   LD       I, $15B         ; Load 15B into I
$368    $F4C7   UNKNOWN  F4C7            ; Unknown Fxxx instruction
$36A    $5D61   UNKNOWN  $5D61           ; Unknown 5xxx instruction
$36C    $B74E   JP       V0, $74E        ; Jump to V0 + 74E
$36E    $E7AD   UNKNOWN  $E7AD           ; Unknown Exxx instruction
$370    $6A4E   LD       VA, #4E         ; Load 78 into VA
$372    $BC46   JP       V0, $C46        ; Jump to V0 + C46
$374    $8177   SUBN     V1, V7          ; V1 = V7 - V1, VF = !borrow
$376    $F0CD   UNKNOWN  F0CD            ; Unknown Fxxx instruction
$378    $53EA   UNKNOWN  $53EA           ; Unknown 5xxx instruction
$37A    $5263   UNKNOWN  $5263           ; Unknown 5xxx instruction
$37C    $F282   UNKNOWN  F282            ; Unknown Fxxx instruction
$37E    $C2A7   RND      V2, #A7         ; V2 = random & A7
$380    $4164   SNE      V1, #64         ; Skip if V1 != 100
$382    $4D63   SNE      VD, #63         ; Skip if VD != 99
$384    $9785   UNKNOWN  $9785           ; Unknown 9xxx instruction
$386    $A45B   LD       I, $45B         ; Load 45B into I
$388    $3C18   SE       VC, #18         ; Skip if VC == 24
$38A    $F039   UNKNOWN  F039            ; Unknown Fxxx instruction
$38C    $D27F   DRW      V2, V7, #F      ; Draw 15-byte sprite at V2, V7
$38E    $7E77   ADD      VE, #77         ; Add 119 to VE
$390    $2B13   CALL     $B13            ; Call subroutine at B13
$392    $7D1C   ADD      VD, #1C         ; Add 28 to VD
$394    $2852   CALL     $852            ; Call subroutine at 852
$396    $B9F6   JP       V0, $9F6        ; Jump to V0 + 9F6
$398    $1C2C   JP       $C2C            ; Jump to C2C
$39A    $A9B9   LD       I, $9B9         ; Load 9B9 into I
$39C    $877F   UNKNOWN  877F            ; Unknown 8xxx instruction
$39E    $366F   SE       V6, #6F         ; Skip if V6 == 111
$3A0    $F553   UNKNOWN  F553            ; Unknown Fxxx instruction
$3A2    $79BD   ADD      V9, #BD         ; Add 189 to V9
$3A4    $F81B   UNKNOWN  F81B            ; Unknown Fxxx instruction
$3A6    $7DE2   ADD      VD, #E2         ; Add 226 to VD
$3A8    $BCE9   JP       V0, $CE9        ; Jump to V0 + CE9
$3AA    $D27A   DRW      V2, V7, #A      ; Draw 10-byte sprite at V2, V7
$3AC    $CFAE   RND      VF, #AE         ; VF = random & AE
$3AE    $EC68   UNKNOWN  $EC68           ; Unknown Exxx instruction
$3B0    $F1DA   UNKNOWN  F1DA            ; Unknown Fxxx instruction
$3B2    $A99A   LD       I, $99A         ; Load 99A into I
$3B4    $0C2A   SYS      $C2A            ; System call to C2A
$3B6    $8AD9   UNKNOWN  8AD9            ; Unknown 8xxx instruction
$3B8    $61E4   LD       V1, #E4         ; Load 228 into V1
$3BA    $FD4A   UNKNOWN  FD4A            ; Unknown Fxxx instruction
$3BC    $3461   SE       V4, #61         ; Skip if V4 == 97
$3BE    $AA51   LD       I, $A51         ; Load A51 into I
$3C0    $3756   SE       V7, #56         ; Skip if V7 == 86
$3C2    $0D1D   SYS      $D1D            ; System call to D1D
$3C4    $8355   SUB      V3, V5          ; V3 -= V5, VF = !borrow
$3C6    $FFED   UNKNOWN  FFED            ; Unknown Fxxx instruction
$3C8    $EC70   UNKNOWN  $EC70           ; Unknown Exxx instruction
$3CA    $2224   CALL     $224            ; Call subroutine at 224
$3CC    $F0CA   UNKNOWN  F0CA            ; Unknown Fxxx instruction
$3CE    $C6E3   RND      V6, #E3         ; V6 = random & E3
$3D0    $B576   JP       V0, $576        ; Jump to V0 + 576
$3D2    $85F9   UNKNOWN  85F9            ; Unknown 8xxx instruction
$3D4    $1F9F   JP       $F9F            ; Jump to F9F
$3D6    $B2CC   JP       V0, $2CC        ; Jump to V0 + 2CC
$3D8    $A1D5   LD       I, $1D5         ; Load 1D5 into I
$3DA    $E316   UNKNOWN  $E316           ; Unknown Exxx instruction
$3DC    $7B37   ADD      VB, #37         ; Add 55 to VB
$3DE    $60FD   LD       V0, #FD         ; Load 253 into V0
$3E0    $84BB   UNKNOWN  84BB            ; Unknown 8xxx instruction
$3E2    $B48C   JP       V0, $48C        ; Jump to V0 + 48C
$3E4    $8B11   OR       VB, V1          ; VB |= V1
$3E6    $AF62   LD       I, $F62         ; Load F62 into I
$3E8    $C30B   RND      V3, #0B         ; V3 = random & 0B
$3EA    $E42B   UNKNOWN  $E42B           ; Unknown Exxx instruction
$3EC    $10C1   JP       $0C1            ; Jump to 0C1
$3EE    $7414   ADD      V4, #14         ; Add 20 to V4
$3F0    $4A2F   SNE      VA, #2F         ; Skip if VA != 47
$3F2    $CE16   RND      VE, #16         ; VE = random & 16
$3F4    $51E0   SE       V1, VE          ; Skip if V1 == VE
$3F6    $68BF   LD       V8, #BF         ; Load 191 into V8
$3F8    $324A   SE       V2, #4A         ; Skip if V2 == 74
$3FA    $C559   RND      V5, #59         ; V5 = random & 59
$3FC    $622B   LD       V2, #2B         ; Load 43 into V2
$3FE    $A9C4   LD       I, $9C4         ; Load 9C4 into I
$400    $0C2A   SYS      $C2A            ; System call to C2A
$402    $DE5D   DRW      VE, V5, #D      ; Draw 13-byte sprite at VE, V5
$404    $78F9   ADD      V8, #F9         ; Add 249 to V8
$406    $113E   JP       $13E            ; Jump to 13E
$408    $81BC   UNKNOWN  81BC            ; Unknown 8xxx instruction
$40A    $4D2C   SNE      VD, #2C         ; Skip if VD != 44
$40C    $A61A   LD       I, $61A         ; Load 61A into I
$40E    $E295   UNKNOWN  $E295           ; Unknown Exxx instruction
$410    $216F   CALL     $16F            ; Call subroutine at 16F
$412    $D4EB   DRW      V4, VE, #B      ; Draw 11-byte sprite at V4, VE
$414    $7E66   ADD      VE, #66         ; Add 102 to VE
$416    $CC3F   RND      VC, #3F         ; VC = random & 3F
$418    $0A12   SYS      $A12            ; System call to A12
$41A    $81C3   XOR      V1, VC          ; V1 ^= VC
$41C    $E9B1   UNKNOWN  $E9B1           ; Unknown Exxx instruction
$41E    $9B51   UNKNOWN  $9B51           ; Unknown 9xxx instruction
$420    $2580   CALL     $580            ; Call subroutine at 580
$422    $9673   UNKNOWN  $9673           ; Unknown 9xxx instruction
$424    $9464   UNKNOWN  $9464           ; Unknown 9xxx instruction
$426    $182C   JP       $82C            ; Jump to 82C
$428    $BC56   JP       V0, $C56        ; Jump to V0 + C56
$42A    $7788   ADD      V7, #88         ; Add 136 to V7
$42C    $9823   UNKNOWN  $9823           ; Unknown 9xxx instruction
$42E    $F3DE   UNKNOWN  F3DE            ; Unknown Fxxx instruction
$430    $676E   LD       V7, #6E         ; Load 110 into V7
$432    $8C99   UNKNOWN  8C99            ; Unknown 8xxx instruction
$434    $5116   UNKNOWN  $5116           ; Unknown 5xxx instruction
$436    $6C98   LD       VC, #98         ; Load 152 into VC
$438    $0EE7   SYS      $EE7            ; System call to EE7
$43A    $880D   UNKNOWN  880D            ; Unknown 8xxx instruction
$43C    $C5E6   RND      V5, #E6         ; V5 = random & E6
$43E    $C5BD   RND      V5, #BD         ; V5 = random & BD
$440    $01D4   SYS      $1D4            ; System call to 1D4
$442    $33C3   SE       V3, #C3         ; Skip if V3 == 195
$444    $6B5D   LD       VB, #5D         ; Load 93 into VB
$446    $698E   LD       V9, #8E         ; Load 142 into V9
$448    $EADA   UNKNOWN  $EADA           ; Unknown Exxx instruction
$44A    $951D   UNKNOWN  $951D           ; Unknown 9xxx instruction
$44C    $9852   UNKNOWN  $9852           ; Unknown 9xxx instruction
$44E    $1A86   JP       $A86            ; Jump to A86
$450    $01CA   SYS      $1CA            ; System call to 1CA
$452    $AE86   LD       I, $E86         ; Load E86 into I
$454    $C199   RND      V1, #99         ; V1 = random & 99
$456    $15F9   JP       $5F9            ; Jump to 5F9
$458    $B1F7   JP       V0, $1F7        ; Jump to V0 + 1F7
$45A    $8412   AND      V4, V1          ; V4 &= V1
$45C    $B1B9   JP       V0, $1B9        ; Jump to V0 + 1B9
$45E    $EE1C   UNKNOWN  $EE1C           ; Unknown Exxx instruction
$460    $F614   UNKNOWN  F614            ; Unknown Fxxx instruction
$462    $7417   ADD      V4, #17         ; Add 23 to V4
$464    $D0C3   DRW      V0, VC, #3      ; Draw 3-byte sprite at V0, VC
$466    $B9FA   JP       V0, $9FA        ; Jump to V0 + 9FA
$468    $9C1E   UNKNOWN  $9C1E           ; Unknown 9xxx instruction
$46A    $050D   SYS      $50D            ; System call to 50D
$46C    $2A72   CALL     $A72            ; Call subroutine at A72
$46E    $EAE2   UNKNOWN  $EAE2           ; Unknown Exxx instruction
$470    $16A3   JP       $6A3            ; Jump to 6A3
$472    $6FF1   LD       VF, #F1         ; Load 241 into VF
$474    $D546   DRW      V5, V4, #6      ; Draw 6-byte sprite at V5, V4
$476    $14C5   JP       $4C5            ; Jump to 4C5
$478    $EDCF   UNKNOWN  $EDCF           ; Unknown Exxx instruction
$47A    $DEC4   DRW      VE, VC, #4      ; Draw 4-byte sprite at VE, VC
$47C    $FF49   UNKNOWN  FF49            ; Unknown Fxxx instruction
$47E    $A098   LD       I, $098         ; Load 098 into I
$480    $7ACA   ADD      VA, #CA         ; Add 202 to VA
$482    $9175   UNKNOWN  $9175           ; Unknown 9xxx instruction
$484    $E984   UNKNOWN  $E984           ; Unknown Exxx instruction
$486    $C09C   RND      V0, #9C         ; V0 = random & 9C
$488    $2EB8   CALL     $EB8            ; Call subroutine at EB8
$48A    $28C0   CALL     $8C0            ; Call subroutine at 8C0
$48C    $027F   SYS      $27F            ; System call to 27F
$48E    $6297   LD       V2, #97         ; Load 151 into V2
$490    $CA11   RND      VA, #11         ; VA = random & 11
$492    $1607   JP       $607            ; Jump to 607
$494    $3CAE   SE       VC, #AE         ; Skip if VC == 174
$496    $7D77   ADD      VD, #77         ; Add 119 to VD
$498    $F9A0   UNKNOWN  F9A0            ; Unknown Fxxx instruction
$49A    $BE9D   JP       V0, $E9D        ; Jump to V0 + E9D
$49C    $38BF   SE       V8, #BF         ; Skip if V8 == 191
$49E    $2BB1   CALL     $BB1            ; Call subroutine at BB1
$4A0    $483A   SNE      V8, #3A         ; Skip if V8 != 58
$4A2    $317A   SE       V1, #7A         ; Skip if V1 == 122
$4A4    $95B4   UNKNOWN  $95B4           ; Unknown 9xxx instruction
$4A6    $ED66   UNKNOWN  $ED66           ; Unknown Exxx instruction
$4A8    $2498   CALL     $498            ; Call subroutine at 498
$4AA    $392F   SE       V9, #2F         ; Skip if V9 == 47
$4AC    $3F7B   SE       VF, #7B         ; Skip if VF == 123
$4AE    $6565   LD       V5, #65         ; Load 101 into V5
$4B0    $70DD   ADD      V0, #DD         ; Add 221 to V0
$4B2    $A36F   LD       I, $36F         ; Load 36F into I
$4B4    $1B0B   JP       $B0B            ; Jump to B0B
$4B6    $7552   ADD      V5, #52         ; Add 82 to V5
$4B8    $01E8   SYS      $1E8            ; System call to 1E8
$4BA    $823A   UNKNOWN  823A            ; Unknown 8xxx instruction
$4BC    $C388   RND      V3, #88         ; V3 = random & 88
$4BE    $8586   SHR      V5              ; V5 >>= 1, VF = LSB
$4C0    $9AF9   UNKNOWN  $9AF9           ; Unknown 9xxx instruction
$4C2    $8117   SUBN     V1, V1          ; V1 = V1 - V1, VF = !borrow
$4C4    $144A   JP       $44A            ; Jump to 44A
$4C6    $A78A   LD       I, $78A         ; Load 78A into I
$4C8    $2917   CALL     $917            ; Call subroutine at 917
$4CA    $18B9   JP       $8B9            ; Jump to 8B9
$4CC    $1F20   JP       $F20            ; Jump to F20
$4CE    $CF35   RND      VF, #35         ; VF = random & 35
$4D0    $4B16   SNE      VB, #16         ; Skip if VB != 22
$4D2    $8BBF   UNKNOWN  8BBF            ; Unknown 8xxx instruction
$4D4    $B5B4   JP       V0, $5B4        ; Jump to V0 + 5B4
$4D6    $F817   UNKNOWN  F817            ; Unknown Fxxx instruction
$4D8    $CFAC   RND      VF, #AC         ; VF = random & AC
$4DA    $FB84   UNKNOWN  FB84            ; Unknown Fxxx instruction
$4DC    $19E1   JP       $9E1            ; Jump to 9E1
$4DE    $C6A0   RND      V6, #A0         ; V6 = random & A0
$4E0    $44EA   SNE      V4, #EA         ; Skip if V4 != 234
$4E2    $2B9F   CALL     $B9F            ; Call subroutine at B9F
$4E4    $1306   JP       $306            ; Jump to 306
$4E6    $8196   SHR      V1              ; V1 >>= 1, VF = LSB
$4E8    $C4F3   RND      V4, #F3         ; V4 = random & F3
$4EA    $D3E5   DRW      V3, VE, #5      ; Draw 5-byte sprite at V3, VE
$4EC    $66E8   LD       V6, #E8         ; Load 232 into V6
$4EE    $926A   UNKNOWN  $926A           ; Unknown 9xxx instruction
$4F0    $2820   CALL     $820            ; Call subroutine at 820
$4F2    $E5A6   UNKNOWN  $E5A6           ; Unknown Exxx instruction
$4F4    $234A   CALL     $34A            ; Call subroutine at 34A
$4F6    $9E3B   UNKNOWN  $9E3B           ; Unknown 9xxx instruction
$4F8    $A290   LD       I, $290         ; Load 290 into I
$4FA    $2436   CALL     $436            ; Call subroutine at 436
$4FC    $10E7   JP       $0E7            ; Jump to 0E7
$4FE    $2C52   CALL     $C52            ; Call subroutine at C52
$500    $32DF   SE       V2, #DF         ; Skip if V2 == 223
$502    $28C0   CALL     $8C0            ; Call subroutine at 8C0
$504    $996E   UNKNOWN  $996E           ; Unknown 9xxx instruction
$506    $A529   LD       I, $529         ; Load 529 into I
$508    $FFA6   UNKNOWN  FFA6            ; Unknown Fxxx instruction
$50A    $58CB   UNKNOWN  $58CB           ; Unknown 5xxx instruction
$50C    $6D89   LD       VD, #89         ; Load 137 into VD
$50E    $D0FD   DRW      V0, VF, #D      ; Draw 13-byte sprite at V0, VF
$510    $62AD   LD       V2, #AD         ; Load 173 into V2
$512    $F55B   UNKNOWN  F55B            ; Unknown Fxxx instruction
$514    $B0E2   JP       V0, $0E2        ; Jump to V0 + 0E2
$516    $17B2   JP       $7B2            ; Jump to 7B2
$518    $261F   CALL     $61F            ; Call subroutine at 61F
$51A    $9190   SNE      V1, V9          ; Skip if V1 != V9
$51C    $D5D4   DRW      V5, VD, #4      ; Draw 4-byte sprite at V5, VD
$51E    $CE38   RND      VE, #38         ; VE = random & 38
$520    $8E2E   SHL      VE              ; VE <<= 1, VF = MSB
$522    $9086   UNKNOWN  $9086           ; Unknown 9xxx instruction
$524    $94B8   UNKNOWN  $94B8           ; Unknown 9xxx instruction
$526    $AAE1   LD       I, $AE1         ; Load AE1 into I
$528    $FC3A   UNKNOWN  FC3A            ; Unknown Fxxx instruction
$52A    $9295   UNKNOWN  $9295           ; Unknown 9xxx instruction
$52C    $355E   SE       V5, #5E         ; Skip if V5 == 94
$52E    $AEA3   LD       I, $EA3         ; Load EA3 into I
$530    $9E4D   UNKNOWN  $9E4D           ; Unknown 9xxx instruction
$532    $FA30   UNKNOWN  FA30            ; Unknown Fxxx instruction
$534    $9706   UNKNOWN  $9706           ; Unknown 9xxx instruction
$536    $67C7   LD       V7, #C7         ; Load 199 into V7
$538    $AE86   LD       I, $E86         ; Load E86 into I
$53A    $9191   UNKNOWN  $9191           ; Unknown 9xxx instruction
$53C    $031F   SYS      $31F            ; System call to 31F
$53E    $EB04   UNKNOWN  $EB04           ; Unknown Exxx instruction
$540    $B3F2   JP       V0, $3F2        ; Jump to V0 + 3F2
$542    $A037   LD       I, $037         ; Load 037 into I
$544    $F514   UNKNOWN  F514            ; Unknown Fxxx instruction
$546    $0CE1   SYS      $CE1            ; System call to CE1
$548    $82F5   SUB      V2, VF          ; V2 -= VF, VF = !borrow
$54A    $2D46   CALL     $D46            ; Call subroutine at D46
$54C    $CDDA   RND      VD, #DA         ; VD = random & DA
$54E    $EC53   UNKNOWN  $EC53           ; Unknown Exxx instruction
$550    $D1E6   DRW      V1, VE, #6      ; Draw 6-byte sprite at V1, VE
$552    $2A15   CALL     $A15            ; Call subroutine at A15
$554    $F440   UNKNOWN  F440            ; Unknown Fxxx instruction
$556    $6434   LD       V4, #34         ; Load 52 into V4
$558    $1D4A   JP       $D4A            ; Jump to D4A
$55A    $AFB2   LD       I, $FB2         ; Load FB2 into I
$55C    $64A6   LD       V4, #A6         ; Load 166 into V4
$55E    $DA4F   DRW      VA, V4, #F      ; Draw 15-byte sprite at VA, V4
$560    $A1B6   LD       I, $1B6         ; Load 1B6 into I
$562    $83B2   AND      V3, VB          ; V3 &= VB
$564    $593C   UNKNOWN  $593C           ; Unknown 5xxx instruction
$566    $39B2   SE       V9, #B2         ; Skip if V9 == 178
$568    $8B41   OR       VB, V4          ; VB |= V4
$56A    $2E9E   CALL     $E9E            ; Call subroutine at E9E
$56C    $D376   DRW      V3, V7, #6      ; Draw 6-byte sprite at V3, V7
$56E    $3F69   SE       VF, #69         ; Skip if VF == 105
$570    $32EB   SE       V2, #EB         ; Skip if V2 == 235
$572    $01F1   SYS      $1F1            ; System call to 1F1
$574    $8A5D   UNKNOWN  8A5D            ; Unknown 8xxx instruction
$576    $8731   OR       V7, V3          ; V7 |= V3
$578    $A8E3   LD       I, $8E3         ; Load 8E3 into I
$57A    $EA2F   UNKNOWN  $EA2F           ; Unknown Exxx instruction
$57C    $E78D   UNKNOWN  $E78D           ; Unknown Exxx instruction
$57E    $5CEC   UNKNOWN  $5CEC           ; Unknown 5xxx instruction
$580    $2353   CALL     $353            ; Call subroutine at 353
$582    $3EF8   SE       VE, #F8         ; Skip if VE == 248
$584    $D6DC   DRW      V6, VD, #C      ; Draw 12-byte sprite at V6, VD
$586    $261C   CALL     $61C            ; Call subroutine at 61C
$588    $B983   JP       V0, $983        ; Jump to V0 + 983
$58A    $3630   SE       V6, #30         ; Skip if V6 == 48
$58C    $75BA   ADD      V5, #BA         ; Add 186 to V5
$58E    $D268   DRW      V2, V6, #8      ; Draw 8-byte sprite at V2, V6
$590    $48FA   SNE      V8, #FA         ; Skip if V8 != 250
$592    $4730   SNE      V7, #30         ; Skip if V7 != 48
$594    $653A   LD       V5, #3A         ; Load 58 into V5
$596    $3B36   SE       VB, #36         ; Skip if VB == 54
$598    $502E   UNKNOWN  $502E           ; Unknown 5xxx instruction
$59A    $C625   RND      V6, #25         ; V6 = random & 25
$59C    $B24A   JP       V0, $24A        ; Jump to V0 + 24A
$59E    $BBF4   JP       V0, $BF4        ; Jump to V0 + BF4
$5A0    $A357   LD       I, $357         ; Load 357 into I
$5A2    $4959   SNE      V9, #59         ; Skip if V9 != 89
$5A4    $C06C   RND      V0, #6C         ; V0 = random & 6C
$5A6    $B680   JP       V0, $680        ; Jump to V0 + 680
$5A8    $CD59   RND      VD, #59         ; VD = random & 59
$5AA    $0D6D   SYS      $D6D            ; System call to D6D
$5AC    $99DA   UNKNOWN  $99DA           ; Unknown 9xxx instruction
$5AE    $F4CC   UNKNOWN  F4CC            ; Unknown Fxxx instruction
$5B0    $9005   UNKNOWN  $9005           ; Unknown 9xxx instruction
$5B2    $C8B2   RND      V8, #B2         ; V8 = random & B2
$5B4    $D924   DRW      V9, V2, #4      ; Draw 4-byte sprite at V9, V2
$5B6    $1E23   JP       $E23            ; Jump to E23
$5B8    $78D4   ADD      V8, #D4         ; Add 212 to V8
$5BA    $0F34   SYS      $F34            ; System call to F34
$5BC    $0360   SYS      $360            ; System call to 360
$5BE    $D997   DRW      V9, V9, #7      ; Draw 7-byte sprite at V9, V9
$5C0    $BB36   JP       V0, $B36        ; Jump to V0 + B36
$5C2    $8C79   UNKNOWN  8C79            ; Unknown 8xxx instruction
$5C4    $0200   SYS      $200            ; System call to 200
$5C6    $890D   UNKNOWN  890D            ; Unknown 8xxx instruction
$5C8    $9ABB   UNKNOWN  $9ABB           ; Unknown 9xxx instruction
$5CA    $7DCE   ADD      VD, #CE         ; Add 206 to VD
$5CC    $1C12   JP       $C12            ; Jump to C12
$5CE    $EB8D   UNKNOWN  $EB8D           ; Unknown Exxx instruction
$5D0    $0EE5   SYS      $EE5            ; System call to EE5
$5D2    $6E43   LD       VE, #43         ; Load 67 into VE
$5D4    $8A8E   SHL      VA              ; VA <<= 1, VF = MSB
$5D6    $6576   LD       V5, #76         ; Load 118 into V5
$5D8    $5220   SE       V2, V2          ; Skip if V2 == V2
$5DA    $521A   UNKNOWN  $521A           ; Unknown 5xxx instruction
$5DC    $2820   CALL     $820            ; Call subroutine at 820
$5DE    $8B6A   UNKNOWN  8B6A            ; Unknown 8xxx instruction
$5E0    $442C   SNE      V4, #2C         ; Skip if V4 != 44
$5E2    $C41A   RND      V4, #1A         ; V4 = random & 1A
$5E4    $5AA8   UNKNOWN  $5AA8           ; Unknown 5xxx instruction
$5E6    $56C4   UNKNOWN  $56C4           ; Unknown 5xxx instruction
$5E8    $FC24   UNKNOWN  FC24            ; Unknown Fxxx instruction
$5EA    $34E6   SE       V4, #E6         ; Skip if V4 == 230
$5EC    $EE5E   UNKNOWN  $EE5E           ; Unknown Exxx instruction
$5EE    $97F4   UNKNOWN  $97F4           ; Unknown 9xxx instruction
$5F0    $2DFA   CALL     $DFA            ; Call subroutine at DFA
$5F2    $7FC8   ADD      VF, #C8         ; Add 200 to VF
$5F4    $701D   ADD      V0, #1D         ; Add 29 to V0
$5F6    $307B   SE       V0, #7B         ; Skip if V0 == 123
$5F8    $9238   UNKNOWN  $9238           ; Unknown 9xxx instruction
$5FA    $BB3E   JP       V0, $B3E        ; Jump to V0 + B3E
$5FC    $AE20   LD       I, $E20         ; Load E20 into I
$5FE    $D8F4   DRW      V8, VF, #4      ; Draw 4-byte sprite at V8, VF
$600    $7D04   ADD      VD, #04         ; Add 4 to VD
$602    $AA0B   LD       I, $A0B         ; Load A0B into I
$604    $4B86   SNE      VB, #86         ; Skip if VB != 134
$606    $B7EA   JP       V0, $7EA        ; Jump to V0 + 7EA
$608    $1B7B   JP       $B7B            ; Jump to B7B
$60A    $6566   LD       V5, #66         ; Load 102 into V5
$60C    $C59E   RND      V5, #9E         ; V5 = random & 9E
$60E    $3941   SE       V9, #41         ; Skip if V9 == 65
$610    $A563   LD       I, $563         ; Load 563 into I
$612    $7487   ADD      V4, #87         ; Add 135 to V4
$614    $C461   RND      V4, #61         ; V4 = random & 61
$616    $C5DE   RND      V5, #DE         ; V5 = random & DE
$618    $496A   SNE      V9, #6A         ; Skip if V9 != 106
$61A    $EB86   UNKNOWN  $EB86           ; Unknown Exxx instruction
$61C    $DF1A   DRW      VF, V1, #A      ; Draw 10-byte sprite at VF, V1
$61E    $FC78   UNKNOWN  FC78            ; Unknown Fxxx instruction
$620    $FAAD   UNKNOWN  FAAD            ; Unknown Fxxx instruction
$622    $E6D1   UNKNOWN  $E6D1           ; Unknown Exxx instruction
$624    $E50A   UNKNOWN  $E50A           ; Unknown Exxx instruction
$626    $0947   SYS      $947            ; System call to 947
$628    $C5D2   RND      V5, #D2         ; V5 = random & D2
$62A    $F366   UNKNOWN  F366            ; Unknown Fxxx instruction
$62C    $E167   UNKNOWN  $E167           ; Unknown Exxx instruction
$62E    $6716   LD       V7, #16         ; Load 22 into V7
$630    $2420   CALL     $420            ; Call subroutine at 420
$632    $8BE1   OR       VB, VE          ; VB |= VE
$634    $5EAC   UNKNOWN  $5EAC           ; Unknown 5xxx instruction
$636    $6219   LD       V2, #19         ; Load 25 into V2
$638    $43E7   SNE      V3, #E7         ; Skip if V3 != 231
$63A    $4C98   SNE      VC, #98         ; Skip if VC != 152
$63C    $4CD4   SNE      VC, #D4         ; Skip if VC != 212
$63E    $0823   SYS      $823            ; System call to 823
$640    $DD1A   DRW      VD, V1, #A      ; Draw 10-byte sprite at VD, V1
$642    $44E7   SNE      V4, #E7         ; Skip if V4 != 231
$644    $E7C1   UNKNOWN  $E7C1           ; Unknown Exxx instruction
$646    $C7FD   RND      V7, #FD         ; V7 = random & FD
$648    $01F5   SYS      $1F5            ; System call to 1F5
$64A    $D632   DRW      V6, V3, #2      ; Draw 2-byte sprite at V6, V3
$64C    $D74C   DRW      V7, V4, #C      ; Draw 12-byte sprite at V7, V4
$64E    $0A58   SYS      $A58            ; System call to A58
$650    $4D15   SNE      VD, #15         ; Skip if VD != 21
$652    $585D   UNKNOWN  $585D           ; Unknown 5xxx instruction
$654    $BC6A   JP       V0, $C6A        ; Jump to V0 + C6A
$656    $F178   UNKNOWN  F178            ; Unknown Fxxx instruction
$658    $B6E7   JP       V0, $6E7        ; Jump to V0 + 6E7
$65A    $C5A5   RND      V5, #A5         ; V5 = random & A5
$65C    $338F   SE       V3, #8F         ; Skip if V3 == 143
$65E    $1007   JP       $007            ; Jump to 007
$660    $AC00   LD       I, $C00         ; Load C00 into I
$662    $5B65   UNKNOWN  $5B65           ; Unknown 5xxx instruction
$664    $5280   SE       V2, V8          ; Skip if V2 == V8
$666    $C2A9   RND      V2, #A9         ; V2 = random & A9
$668    $620A   LD       V2, #0A         ; Load 10 into V2
$66A    $27F0   CALL     $7F0            ; Call subroutine at 7F0
$66C    $D061   DRW      V0, V6, #1      ; Draw 1-byte sprite at V0, V6
$66E    $4E4D   SNE      VE, #4D         ; Skip if VE != 77
$670    $2B60   CALL     $B60            ; Call subroutine at B60
$672    $0C6C   SYS      $C6C            ; System call to C6C
$674    $2DA1   CALL     $DA1            ; Call subroutine at DA1
$676    $1513   JP       $513            ; Jump to 513
$678    $A6F6   LD       I, $6F6         ; Load 6F6 into I
$67A    $E421   UNKNOWN  $E421           ; Unknown Exxx instruction
$67C    $0DE4   SYS      $DE4            ; System call to DE4
$67E    $D372   DRW      V3, V7, #2      ; Draw 2-byte sprite at V3, V7
$680    $A97D   LD       I, $97D         ; Load 97D into I
$682    $4370   SNE      V3, #70         ; Skip if V3 != 112
$684    $ABAD   LD       I, $BAD         ; Load BAD into I
$686    $78D5   ADD      V8, #D5         ; Add 213 to V8
$688    $1C23   JP       $C23            ; Jump to C23
$68A    $9233   UNKNOWN  $9233           ; Unknown 9xxx instruction
$68C    $67CC   LD       V7, #CC         ; Load 204 into V7
$68E    $F559   UNKNOWN  F559            ; Unknown Fxxx instruction
$690    $8EE0   LD       VE, VE          ; VE = VE
$692    $3704   SE       V7, #04         ; Skip if V7 == 4
$694    $6058   LD       V0, #58         ; Load 88 into V0
$696    $861D   UNKNOWN  861D            ; Unknown 8xxx instruction
$698    $24B3   CALL     $4B3            ; Call subroutine at 4B3
$69A    $BBFD   JP       V0, $BFD        ; Jump to V0 + BFD
$69C    $DB63   DRW      VB, V6, #3      ; Draw 3-byte sprite at VB, V6
$69E    $4B7A   SNE      VB, #7A         ; Skip if VB != 122
$6A0    $5CC6   UNKNOWN  $5CC6           ; Unknown 5xxx instruction
$6A2    $6B46   LD       VB, #46         ; Load 70 into VB
$6A4    $D714   DRW      V7, V1, #4      ; Draw 4-byte sprite at V7, V1
$6A6    $2D42   CALL     $D42            ; Call subroutine at D42
$6A8    $1B9F   JP       $B9F            ; Jump to B9F
$6AA    $6BFB   LD       VB, #FB         ; Load 251 into VB
$6AC    $1158   JP       $158            ; Jump to 158
$6AE    $E847   UNKNOWN  $E847           ; Unknown Exxx instruction
$6B0    $911D   UNKNOWN  $911D           ; Unknown 9xxx instruction
$6B2    $E141   UNKNOWN  $E141           ; Unknown Exxx instruction
$6B4    $BDBC   JP       V0, $DBC        ; Jump to V0 + DBC
$6B6    $D635   DRW      V6, V3, #5      ; Draw 5-byte sprite at V6, V3
$6B8    $9376   UNKNOWN  $9376           ; Unknown 9xxx instruction
$6BA    $4A34   SNE      VA, #34         ; Skip if VA != 52
$6BC    $0853   SYS      $853            ; System call to 853
$6BE    $184D   JP       $84D            ; Jump to 84D
$6C0    $894F   UNKNOWN  894F            ; Unknown 8xxx instruction
$6C2    $1821   JP       $821            ; Jump to 821
$6C4    $4D73   SNE      VD, #73         ; Skip if VD != 115
$6C6    $30F5   SE       V0, #F5         ; Skip if V0 == 245
$6C8    $CA4B   RND      VA, #4B         ; VA = random & 4B
$6CA    $44A2   SNE      V4, #A2         ; Skip if V4 != 162
$6CC    $B5DB   JP       V0, $5DB        ; Jump to V0 + 5DB
$6CE    $0A88   SYS      $A88            ; System call to A88
$6D0    $2E12   CALL     $E12            ; Call subroutine at E12
$6D2    $6662   LD       V6, #62         ; Load 98 into V6
$6D4    $DB6D   DRW      VB, V6, #D      ; Draw 13-byte sprite at VB, V6
$6D6    $5150   SE       V1, V5          ; Skip if V1 == V5
$6D8    $D097   DRW      V0, V9, #7      ; Draw 7-byte sprite at V0, V9
$6DA    $D3B2   DRW      V3, VB, #2      ; Draw 2-byte sprite at V3, VB
$6DC    $C99B   RND      V9, #9B         ; V9 = random & 9B
$6DE    $AD16   LD       I, $D16         ; Load D16 into I
$6E0    $1FA2   JP       $FA2            ; Jump to FA2
$6E2    $6ACF   LD       VA, #CF         ; Load 207 into VA
$6E4    $9BA7   UNKNOWN  $9BA7           ; Unknown 9xxx instruction
$6E6    $CE81   RND      VE, #81         ; VE = random & 81
$6E8    $006D   SYS      $06D            ; System call to 06D
$6EA    $5BA7   UNKNOWN  $5BA7           ; Unknown 5xxx instruction
$6EC    $1506   JP       $506            ; Jump to 506
$6EE    $B5D6   JP       V0, $5D6        ; Jump to V0 + 5D6
$6F0    $0BF5   SYS      $BF5            ; System call to BF5
$6F2    $216E   CALL     $16E            ; Call subroutine at 16E
$6F4    $A60E   LD       I, $60E         ; Load 60E into I
$6F6    $28B5   CALL     $8B5            ; Call subroutine at 8B5
$6F8    $63EA   LD       V3, #EA         ; Load 234 into V3
$6FA    $04E9   SYS      $4E9            ; System call to 4E9
$6FC    $03A1   SYS      $3A1            ; System call to 3A1
$6FE    $1277   JP       $277            ; Jump to 277
$700    $12B3   JP       $2B3            ; Jump to 2B3
$702    $2CBA   CALL     $CBA            ; Call subroutine at CBA
$704    $D518   DRW      V5, V1, #8      ; Draw 8-byte sprite at V5, V1
$706    $4B3C   SNE      VB, #3C         ; Skip if VB != 60
$708    $9346   UNKNOWN  $9346           ; Unknown 9xxx instruction
$70A    $C9E1   RND      V9, #E1         ; V9 = random & E1
$70C    $8CE9   UNKNOWN  8CE9            ; Unknown 8xxx instruction
$70E    $6D3E   LD       VD, #3E         ; Load 62 into VD
$710    $2AF2   CALL     $AF2            ; Call subroutine at AF2
$712    $B740   JP       V0, $740        ; Jump to V0 + 740
$714    $541A   UNKNOWN  $541A           ; Unknown 5xxx instruction
$716    $D729   DRW      V7, V2, #9      ; Draw 9-byte sprite at V7, V2
$718    $B846   JP       V0, $846        ; Jump to V0 + 846
$71A    $0076   SYS      $076            ; System call to 076
$71C    $3A70   SE       VA, #70         ; Skip if VA == 112
$71E    $0373   SYS      $373            ; System call to 373
$720    $D0D7   DRW      V0, VD, #7      ; Draw 7-byte sprite at V0, VD
$722    $C52C   RND      V5, #2C         ; V5 = random & 2C
$724    $E94B   UNKNOWN  $E94B           ; Unknown Exxx instruction
$726    $6DDC   LD       VD, #DC         ; Load 220 into VD
$728    $A882   LD       I, $882         ; Load 882 into I
$72A    $38C3   SE       V8, #C3         ; Skip if V8 == 195
$72C    $99D5   UNKNOWN  $99D5           ; Unknown 9xxx instruction
$72E    $336F   SE       V3, #6F         ; Skip if V3 == 111
$730    $B401   JP       V0, $401        ; Jump to V0 + 401
$732    $52A6   UNKNOWN  $52A6           ; Unknown 5xxx instruction
$734    $66C0   LD       V6, #C0         ; Load 192 into V6
$736    $3B4B   SE       VB, #4B         ; Skip if VB == 75
$738    $49D8   SNE      V9, #D8         ; Skip if V9 != 216
$73A    $9A8B   UNKNOWN  $9A8B           ; Unknown 9xxx instruction
$73C    $A13F   LD       I, $13F         ; Load 13F into I
$73E    $9F16   UNKNOWN  $9F16           ; Unknown 9xxx instruction
$740    $26FE   CALL     $6FE            ; Call subroutine at 6FE
$742    $0929   SYS      $929            ; System call to 929
$744    $F196   UNKNOWN  F196            ; Unknown Fxxx instruction
$746    $86AC   UNKNOWN  86AC            ; Unknown 8xxx instruction
$748    $9396   UNKNOWN  $9396           ; Unknown 9xxx instruction
$74A    $6E40   LD       VE, #40         ; Load 64 into VE
$74C    $90BC   UNKNOWN  $90BC           ; Unknown 9xxx instruction
$74E    $FA93   UNKNOWN  FA93            ; Unknown Fxxx instruction
$750    $62C2   LD       V2, #C2         ; Load 194 into V2
$752    $A486   LD       I, $486         ; Load 486 into I
$754    $67B9   LD       V7, #B9         ; Load 185 into V7
$756    $B6F5   JP       V0, $6F5        ; Jump to V0 + 6F5
$758    $BEDE   JP       V0, $EDE        ; Jump to V0 + EDE
$75A    $699C   LD       V9, #9C         ; Load 156 into V9
$75C    $4A4B   SNE      VA, #4B         ; Skip if VA != 75
$75E    $B6E2   JP       V0, $6E2        ; Jump to V0 + 6E2
$760    $FB85   UNKNOWN  FB85            ; Unknown Fxxx instruction
$762    $441F   SNE      V4, #1F         ; Skip if V4 != 31
$764    $89A8   UNKNOWN  89A8            ; Unknown 8xxx instruction
$766    $B7AF   JP       V0, $7AF        ; Jump to V0 + 7AF
$768    $1543   JP       $543            ; Jump to 543
$76A    $16D1   JP       $6D1            ; Jump to 6D1
$76C    $1265   JP       $265            ; Jump to 265
$76E    $BF85   JP       V0, $F85        ; Jump to V0 + F85
$770    $8EF7   SUBN     VE, VF          ; VE = VF - VE, VF = !borrow
$772    $D9EF   DRW      V9, VE, #F      ; Draw 15-byte sprite at V9, VE
$774    $64BF   LD       V4, #BF         ; Load 191 into V4
$776    $FA5E   UNKNOWN  FA5E            ; Unknown Fxxx instruction
$778    $B244   JP       V0, $244        ; Jump to V0 + 244
$77A    $786C   ADD      V8, #6C         ; Add 108 to V8
$77C    $E08B   UNKNOWN  $E08B           ; Unknown Exxx instruction
$77E    $D22C   DRW      V2, V2, #C      ; Draw 12-byte sprite at V2, V2
$780    $8F50   LD       VF, V5          ; VF = V5
$782    $93E3   UNKNOWN  $93E3           ; Unknown 9xxx instruction
$784    $67D0   LD       V7, #D0         ; Load 208 into V7
$786    $AC0F   LD       I, $C0F         ; Load C0F into I
$788    $17AE   JP       $7AE            ; Jump to 7AE
$78A    $A276   LD       I, $276         ; Load 276 into I
$78C    $A289   LD       I, $289         ; Load 289 into I
$78E    $B61A   JP       V0, $61A        ; Jump to V0 + 61A
$790    $BD45   JP       V0, $D45        ; Jump to V0 + D45
$792    $3495   SE       V4, #95         ; Skip if V4 == 149
$794    $513B   UNKNOWN  $513B           ; Unknown 5xxx instruction
$796    $937D   UNKNOWN  $937D           ; Unknown 9xxx instruction
$798    $8DAF   UNKNOWN  8DAF            ; Unknown 8xxx instruction
$79A    $DFE2   DRW      VF, VE, #2      ; Draw 2-byte sprite at VF, VE
$79C    $3B1D   SE       VB, #1D         ; Skip if VB == 29
$79E    $A035   LD       I, $035         ; Load 035 into I
$7A0    $2B7B   CALL     $B7B            ; Call subroutine at B7B
$7A2    $0E60   SYS      $E60            ; System call to E60
$7A4    $22D7   CALL     $2D7            ; Call subroutine at 2D7
$7A6    $94C9   UNKNOWN  $94C9           ; Unknown 9xxx instruction
$7A8    $5A45   UNKNOWN  $5A45           ; Unknown 5xxx instruction
$7AA    $A631   LD       I, $631         ; Load 631 into I
$7AC    $E9CA   UNKNOWN  $E9CA           ; Unknown Exxx instruction
$7AE    $CB76   RND      VB, #76         ; VB = random & 76
$7B0    $0180   SYS      $180            ; System call to 180
$7B2    $F57D   UNKNOWN  F57D            ; Unknown Fxxx instruction
$7B4    $4812   SNE      V8, #12         ; Skip if V8 != 18
$7B6    $C37E   RND      V3, #7E         ; V3 = random & 7E
$7B8    $4061   SNE      V0, #61         ; Skip if V0 != 97
$7BA    $5076   UNKNOWN  $5076           ; Unknown 5xxx instruction
$7BC    $66AF   LD       V6, #AF         ; Load 175 into V6
$7BE    $69DD   LD       V9, #DD         ; Load 221 into V9
$7C0    $B946   JP       V0, $946        ; Jump to V0 + 946
$7C2    $2AF3   CALL     $AF3            ; Call subroutine at AF3
$7C4    $F580   UNKNOWN  F580            ; Unknown Fxxx instruction
$7C6    $EE24   UNKNOWN  $EE24           ; Unknown Exxx instruction
$7C8    $C8F6   RND      V8, #F6         ; V8 = random & F6
$7CA    $DC3D   DRW      VC, V3, #D      ; Draw 13-byte sprite at VC, V3
$7CC    $F3E7   UNKNOWN  F3E7            ; Unknown Fxxx instruction
$7CE    $913F   UNKNOWN  $913F           ; Unknown 9xxx instruction
$7D0    $EF06   UNKNOWN  $EF06           ; Unknown Exxx instruction
$7D2    $455E   SNE      V5, #5E         ; Skip if V5 != 94
$7D4    $62E8   LD       V2, #E8         ; Load 232 into V2
$7D6    $D905   DRW      V9, V0, #5      ; Draw 5-byte sprite at V9, V0
$7D8    $3D34   SE       VD, #34         ; Skip if VD == 52
$7DA    $A190   LD       I, $190         ; Load 190 into I
$7DC    $1A04   JP       $A04            ; Jump to A04
$7DE    $F0FF   UNKNOWN  F0FF            ; Unknown Fxxx instruction
$7E0    $CC4F   RND      VC, #4F         ; VC = random & 4F
$7E2    $FB4E   UNKNOWN  FB4E            ; Unknown Fxxx instruction
$7E4    $59A2   UNKNOWN  $59A2           ; Unknown 5xxx instruction
$7E6    $528E   UNKNOWN  $528E           ; Unknown 5xxx instruction
$7E8    $833C   UNKNOWN  833C            ; Unknown 8xxx instruction
$7EA    $E59D   UNKNOWN  $E59D           ; Unknown Exxx instruction
$7EC    $0FFE   SYS      $FFE            ; System call to FFE
$7EE    $FD1B   UNKNOWN  FD1B            ; Unknown Fxxx instruction
$7F0    $1D4F   JP       $D4F            ; Jump to D4F
$7F2    $2F32   CALL     $F32            ; Call subroutine at F32
$7F4    $DC12   DRW      VC, V1, #2      ; Draw 2-byte sprite at VC, V1
$7F6    $B935   JP       V0, $935        ; Jump to V0 + 935
$7F8    $A4B5   LD       I, $4B5         ; Load 4B5 into I
$7FA    $E199   UNKNOWN  $E199           ; Unknown Exxx instruction
$7FC    $6DFD   LD       VD, #FD         ; Load 253 into VD
$7FE    $FC9E   UNKNOWN  FC9E            ; Unknown Fxxx instruction
$800    $51E3   UNKNOWN  $51E3           ; Unknown 5xxx instruction
$802    $0430   SYS      $430            ; System call to 430
$804    $2923   CALL     $923            ; Call subroutine at 923
$806    $6AD8   LD       VA, #D8         ; Load 216 into VA
$808    $3DED   SE       VD, #ED         ; Skip if VD == 237
$80A    $1143   JP       $143            ; Jump to 143
$80C    $5F41   UNKNOWN  $5F41           ; Unknown 5xxx instruction
$80E    $6E54   LD       VE, #54         ; Load 84 into VE
$810    $57A1   UNKNOWN  $57A1           ; Unknown 5xxx instruction
$812    $DE88   DRW      VE, V8, #8      ; Draw 8-byte sprite at VE, V8
$814    $DBD0   DRW      VB, VD, #0      ; Draw 0-byte sprite at VB, VD
$816    $096A   SYS      $96A            ; System call to 96A
$818    $76B7   ADD      V6, #B7         ; Add 183 to V6
$81A    $935E   UNKNOWN  $935E           ; Unknown 9xxx instruction
$81C    $3FE0   SE       VF, #E0         ; Skip if VF == 224
$81E    $A3DC   LD       I, $3DC         ; Load 3DC into I
$820    $5433   UNKNOWN  $5433           ; Unknown 5xxx instruction
$822    $6ECE   LD       VE, #CE         ; Load 206 into VE
$824    $56A4   UNKNOWN  $56A4           ; Unknown 5xxx instruction
$826    $8981   OR       V9, V8          ; V9 |= V8
$828    $551C   UNKNOWN  $551C           ; Unknown 5xxx instruction
$82A    $3841   SE       V8, #41         ; Skip if V8 == 65
$82C    $8F55   SUB      VF, V5          ; VF -= V5, VF = !borrow
$82E    $DE50   DRW      VE, V5, #0      ; Draw 0-byte sprite at VE, V5
$830    $325E   SE       V2, #5E         ; Skip if V2 == 94
$832    $6E6B   LD       VE, #6B         ; Load 107 into VE
$834    $1690   JP       $690            ; Jump to 690
$836    $AD09   LD       I, $D09         ; Load D09 into I
$838    $CA5B   RND      VA, #5B         ; VA = random & 5B
$83A    $0943   SYS      $943            ; System call to 943
$83C    $DE13   DRW      VE, V1, #3      ; Draw 3-byte sprite at VE, V1
$83E    $6A8D   LD       VA, #8D         ; Load 141 into VA
$840    $E4A2   UNKNOWN  $E4A2           ; Unknown Exxx instruction
$842    $3896   SE       V8, #96         ; Skip if V8 == 150
$844    $0D8C   SYS      $D8C            ; System call to D8C
$846    $62A4   LD       V2, #A4         ; Load 164 into V2
$848    $6216   LD       V2, #16         ; Load 22 into V2
$84A    $3D6B   SE       VD, #6B         ; Skip if VD == 107
$84C    $D52C   DRW      V5, V2, #C      ; Draw 12-byte sprite at V5, V2
$84E    $E8BE   UNKNOWN  $E8BE           ; Unknown Exxx instruction
$850    $B0EF   JP       V0, $0EF        ; Jump to V0 + 0EF
$852    $F52C   UNKNOWN  F52C            ; Unknown Fxxx instruction
$854    $E998   UNKNOWN  $E998           ; Unknown Exxx instruction
$856    $AABD   LD       I, $ABD         ; Load ABD into I
$858    $5358   UNKNOWN  $5358           ; Unknown 5xxx instruction
$85A    $D5BA   DRW      V5, VB, #A      ; Draw 10-byte sprite at V5, VB
$85C    $E77E   UNKNOWN  $E77E           ; Unknown Exxx instruction
$85E    $B93A   JP       V0, $93A        ; Jump to V0 + 93A
$860    $AAE5   LD       I, $AE5         ; Load AE5 into I
$862    $DD5F   DRW      VD, V5, #F      ; Draw 15-byte sprite at VD, V5
$864    $85D5   SUB      V5, VD          ; V5 -= VD, VF = !borrow
$866    $3602   SE       V6, #02         ; Skip if V6 == 2
$868    $9730   SNE      V7, V3          ; Skip if V7 != V3
$86A    $7407   ADD      V4, #07         ; Add 7 to V4
$86C    $7E60   ADD      VE, #60         ; Add 96 to VE
$86E    $0FD3   SYS      $FD3            ; System call to FD3
$870    $18E5   JP       $8E5            ; Jump to 8E5
$872    $51A4   UNKNOWN  $51A4           ; Unknown 5xxx instruction
$874    $CA67   RND      VA, #67         ; VA = random & 67
$876    $76DB   ADD      V6, #DB         ; Add 219 to V6
$878    $AE6F   LD       I, $E6F         ; Load E6F into I
$87A    $EC2F   UNKNOWN  $EC2F           ; Unknown Exxx instruction
$87C    $F784   UNKNOWN  F784            ; Unknown Fxxx instruction
$87E    $E08C   UNKNOWN  $E08C           ; Unknown Exxx instruction
$880    $F723   UNKNOWN  F723            ; Unknown Fxxx instruction
$882    $DD84   DRW      VD, V8, #4      ; Draw 4-byte sprite at VD, V8
$884    $36FF   SE       V6, #FF         ; Skip if V6 == 255
$886    $1DEA   JP       $DEA            ; Jump to DEA
$888    $DB4F   DRW      VB, V4, #F      ; Draw 15-byte sprite at VB, V4
$88A    $8E03   XOR      VE, V0          ; VE ^= V0
$88C    $5BCA   UNKNOWN  $5BCA           ; Unknown 5xxx instruction
$88E    $07A9   SYS      $7A9            ; System call to 7A9
$890    $EBD4   UNKNOWN  $EBD4           ; Unknown Exxx instruction
$892    $DA08   DRW      VA, V0, #8      ; Draw 8-byte sprite at VA, V0
$894    $4231   SNE      V2, #31         ; Skip if V2 != 49
$896    $624B   LD       V2, #4B         ; Load 75 into V2
$898    $7CCD   ADD      VC, #CD         ; Add 205 to VC
$89A    $4A4A   SNE      VA, #4A         ; Skip if VA != 74
$89C    $11F0   JP       $1F0            ; Jump to 1F0
$89E    $510A   UNKNOWN  $510A           ; Unknown 5xxx instruction
$8A0    $C137   RND      V1, #37         ; V1 = random & 37
$8A2    $1D20   JP       $D20            ; Jump to D20
$8A4    $88D7   SUBN     V8, VD          ; V8 = VD - V8, VF = !borrow
$8A6    $7A3E   ADD      VA, #3E         ; Add 62 to VA
$8A8    $751F   ADD      V5, #1F         ; Add 31 to V5
$8AA    $59D3   UNKNOWN  $59D3           ; Unknown 5xxx instruction
$8AC    $5FE1   UNKNOWN  $5FE1           ; Unknown 5xxx instruction
$8AE    $0523   SYS      $523            ; System call to 523
$8B0    $71D5   ADD      V1, #D5         ; Add 213 to V1
$8B2    $DF76   DRW      VF, V7, #6      ; Draw 6-byte sprite at VF, V7
$8B4    $557E   UNKNOWN  $557E           ; Unknown 5xxx instruction
$8B6    $8902   AND      V9, V0          ; V9 &= V0
$8B8    $8E72   AND      VE, V7          ; VE &= V7
$8BA    $EB80   UNKNOWN  $EB80           ; Unknown Exxx instruction
$8BC    $4C48   SNE      VC, #48         ; Skip if VC != 72
$8BE    $998E   UNKNOWN  $998E           ; Unknown 9xxx instruction
$8C0    $E340   UNKNOWN  $E340           ; Unknown Exxx instruction
$8C2    $7740   ADD      V7, #40         ; Add 64 to V7
$8C4    $BA09   JP       V0, $A09        ; Jump to V0 + A09
$8C6    $8C23   XOR      VC, V2          ; VC ^= V2
$8C8    $240F   CALL     $40F            ; Call subroutine at 40F
$8CA    $2EEF   CALL     $EEF            ; Call subroutine at EEF
$8CC    $8726   SHR      V7              ; V7 >>= 1, VF = LSB
$8CE    $379D   SE       V7, #9D         ; Skip if V7 == 157
$8D0    $B7F1   JP       V0, $7F1        ; Jump to V0 + 7F1
$8D2    $8F9E   SHL      VF              ; VF <<= 1, VF = MSB
$8D4    $13DF   JP       $3DF            ; Jump to 3DF
$8D6    $74CF   ADD      V4, #CF         ; Add 207 to V4
$8D8    $E35D   UNKNOWN  $E35D           ; Unknown Exxx instruction
$8DA    $D8AB   DRW      V8, VA, #B      ; Draw 11-byte sprite at V8, VA
$8DC    $4D11   SNE      VD, #11         ; Skip if VD != 17
$8DE    $7358   ADD      V3, #58         ; Add 88 to V3
$8E0    $48CE   SNE      V8, #CE         ; Skip if V8 != 206
$8E2    $19B7   JP       $9B7            ; Jump to 9B7
$8E4    $78F8   ADD      V8, #F8         ; Add 248 to V8
$8E6    $57DE   UNKNOWN  $57DE           ; Unknown 5xxx instruction
$8E8    $D694   DRW      V6, V9, #4      ; Draw 4-byte sprite at V6, V9
$8EA    $378A   SE       V7, #8A         ; Skip if V7 == 138
$8EC    $85BF   UNKNOWN  85BF            ; Unknown 8xxx instruction
$8EE    $A351   LD       I, $351         ; Load 351 into I
$8F0    $786C   ADD      V8, #6C         ; Add 108 to V8
$8F2    $BC28   JP       V0, $C28        ; Jump to V0 + C28
$8F4    $89EC   UNKNOWN  89EC            ; Unknown 8xxx instruction
$8F6    $3766   SE       V7, #66         ; Skip if V7 == 102
$8F8    $839D   UNKNOWN  839D            ; Unknown 8xxx instruction
$8FA    $F975   UNKNOWN  F975            ; Unknown Fxxx instruction
$8FC    $234A   CALL     $34A            ; Call subroutine at 34A
$8FE    $112A   JP       $12A            ; Jump to 12A
$900    $D326   DRW      V3, V2, #6      ; Draw 6-byte sprite at V3, V2
$902    $1CE4   JP       $CE4            ; Jump to CE4
$904    $68F7   LD       V8, #F7         ; Load 247 into V8
$906    $EE8C   UNKNOWN  $EE8C           ; Unknown Exxx instruction
$908    $45C5   SNE      V5, #C5         ; Skip if V5 != 197
$90A    $A028   LD       I, $028         ; Load 028 into I
$90C    $9D5A   UNKNOWN  $9D5A           ; Unknown 9xxx instruction
$90E    $6710   LD       V7, #10         ; Load 16 into V7
$910    $08E2   SYS      $8E2            ; System call to 8E2
$912    $5D2C   UNKNOWN  $5D2C           ; Unknown 5xxx instruction
$914    $BA51   JP       V0, $A51        ; Jump to V0 + A51
$916    $4202   SNE      V2, #02         ; Skip if V2 != 2
$918    $EFF4   UNKNOWN  $EFF4           ; Unknown Exxx instruction
$91A    $84EC   UNKNOWN  84EC            ; Unknown 8xxx instruction
$91C    $BE9B   JP       V0, $E9B        ; Jump to V0 + E9B
$91E    $4F88   SNE      VF, #88         ; Skip if VF != 136
$920    $52BD   UNKNOWN  $52BD           ; Unknown 5xxx instruction
$922    $BF65   JP       V0, $F65        ; Jump to V0 + F65
$924    $05B5   SYS      $5B5            ; System call to 5B5
$926    $8145   SUB      V1, V4          ; V1 -= V4, VF = !borrow
$928    $9904   UNKNOWN  $9904           ; Unknown 9xxx instruction
$92A    $3B87   SE       VB, #87         ; Skip if VB == 135
$92C    $6E6A   LD       VE, #6A         ; Load 106 into VE
$92E    $0C40   SYS      $C40            ; System call to C40
$930    $1C41   JP       $C41            ; Jump to C41
$932    $8303   XOR      V3, V0          ; V3 ^= V0
$934    $804E   SHL      V0              ; V0 <<= 1, VF = MSB
$936    $91D3   UNKNOWN  $91D3           ; Unknown 9xxx instruction
$938    $F78A   UNKNOWN  F78A            ; Unknown Fxxx instruction
$93A    $3ADB   SE       VA, #DB         ; Skip if VA == 219
$93C    $162A   JP       $62A            ; Jump to 62A
$93E    $E5FF   UNKNOWN  $E5FF           ; Unknown Exxx instruction
$940    $5822   UNKNOWN  $5822           ; Unknown 5xxx instruction
$942    $3294   SE       V2, #94         ; Skip if V2 == 148
$944    $A89D   LD       I, $89D         ; Load 89D into I
$946    $8ED9   UNKNOWN  8ED9            ; Unknown 8xxx instruction
$948    $15C7   JP       $5C7            ; Jump to 5C7
$94A    $69A1   LD       V9, #A1         ; Load 161 into V9
$94C    $A5CC   LD       I, $5CC         ; Load 5CC into I
$94E    $27E4   CALL     $7E4            ; Call subroutine at 7E4
$950    $6D36   LD       VD, #36         ; Load 54 into VD
$952    $3EB7   SE       VE, #B7         ; Skip if VE == 183
$954    $C45F   RND      V4, #5F         ; V4 = random & 5F
$956    $7CFC   ADD      VC, #FC         ; Add 252 to VC
$958    $351B   SE       V5, #1B         ; Skip if V5 == 27
$95A    $53D5   UNKNOWN  $53D5           ; Unknown 5xxx instruction
$95C    $9C32   UNKNOWN  $9C32           ; Unknown 9xxx instruction
$95E    $FC69   UNKNOWN  FC69            ; Unknown Fxxx instruction
$960    $2EE2   CALL     $EE2            ; Call subroutine at EE2
$962    $C958   RND      V9, #58         ; V9 = random & 58
$964    $8551   OR       V5, V5          ; V5 |= V5
$966    $81C9   UNKNOWN  81C9            ; Unknown 8xxx instruction
$968    $9BA9   UNKNOWN  $9BA9           ; Unknown 9xxx instruction
$96A    $362A   SE       V6, #2A         ; Skip if V6 == 42
$96C    $184B   JP       $84B            ; Jump to 84B
$96E    $7CCE   ADD      VC, #CE         ; Add 206 to VC
$970    $F738   UNKNOWN  F738            ; Unknown Fxxx instruction
$972    $1BFC   JP       $BFC            ; Jump to BFC
$974    $D151   DRW      V1, V5, #1      ; Draw 1-byte sprite at V1, V5
$976    $2FBF   CALL     $FBF            ; Call subroutine at FBF
$978    $E31E   UNKNOWN  $E31E           ; Unknown Exxx instruction
$97A    $DAE5   DRW      VA, VE, #5      ; Draw 5-byte sprite at VA, VE
$97C    $A1DC   LD       I, $1DC         ; Load 1DC into I
$97E    $5FA7   UNKNOWN  $5FA7           ; Unknown 5xxx instruction
$980    $EE16   UNKNOWN  $EE16           ; Unknown Exxx instruction
$982    $3E42   SE       VE, #42         ; Skip if VE == 66
$984    $B9CD   JP       V0, $9CD        ; Jump to V0 + 9CD
$986    $6EE2   LD       VE, #E2         ; Load 226 into VE
$988    $B7EC   JP       V0, $7EC        ; Jump to V0 + 7EC
$98A    $44C6   SNE      V4, #C6         ; Skip if V4 != 198
$98C    $62BD   LD       V2, #BD         ; Load 189 into V2
$98E    $9AA8   UNKNOWN  $9AA8           ; Unknown 9xxx instruction
$990    $598D   UNKNOWN  $598D           ; Unknown 5xxx instruction
$992    $B7D2   JP       V0, $7D2        ; Jump to V0 + 7D2
$994    $2571   CALL     $571            ; Call subroutine at 571
$996    $E659   UNKNOWN  $E659           ; Unknown Exxx instruction
$998    $7334   ADD      V3, #34         ; Add 52 to V3
$99A    $74FF   ADD      V4, #FF         ; Add 255 to V4
$99C    $1315   JP       $315            ; Jump to 315
$99E    $7F6F   ADD      VF, #6F         ; Add 111 to VF
$9A0    $8573   XOR      V5, V7          ; V5 ^= V7
$9A2    $DB89   DRW      VB, V8, #9      ; Draw 9-byte sprite at VB, V8
$9A4    $34F1   SE       V4, #F1         ; Skip if V4 == 241
$9A6    $5CC6   UNKNOWN  $5CC6           ; Unknown 5xxx instruction
$9A8    $6962   LD       V9, #62         ; Load 98 into V9
$9AA    $3181   SE       V1, #81         ; Skip if V1 == 129
$9AC    $8EFA   UNKNOWN  8EFA            ; Unknown 8xxx instruction
$9AE    $D6DF   DRW      V6, VD, #F      ; Draw 15-byte sprite at V6, VD
$9B0    $19F9   JP       $9F9            ; Jump to 9F9
$9B2    $2CB4   CALL     $CB4            ; Call subroutine at CB4
$9B4    $715F   ADD      V1, #5F         ; Add 95 to V1
$9B6    $98C1   UNKNOWN  $98C1           ; Unknown 9xxx instruction
$9B8    $C114   RND      V1, #14         ; V1 = random & 14
$9BA    $413D   SNE      V1, #3D         ; Skip if V1 != 61
$9BC    $B71B   JP       V0, $71B        ; Jump to V0 + 71B
$9BE    $B07B   JP       V0, $07B        ; Jump to V0 + 07B
$9C0    $8124   ADD      V1, V2          ; V1 += V2, VF = carry
$9C2    $EEF7   UNKNOWN  $EEF7           ; Unknown Exxx instruction
$9C4    $1B8D   JP       $B8D            ; Jump to B8D
$9C6    $2849   CALL     $849            ; Call subroutine at 849
$9C8    $4E38   SNE      VE, #38         ; Skip if VE != 56
$9CA    $0E1F   SYS      $E1F            ; System call to E1F
$9CC    $89AB   UNKNOWN  89AB            ; Unknown 8xxx instruction
$9CE    $F929   LD       F, V9           ; I = sprite address for digit V9
$9D0    $1C1E   JP       $C1E            ; Jump to C1E
$9D2    $0106   SYS      $106            ; System call to 106
$9D4    $CBC9   RND      VB, #C9         ; VB = random & C9
$9D6    $D488   DRW      V4, V8, #8      ; Draw 8-byte sprite at V4, V8
$9D8    $8AF2   AND      VA, VF          ; VA &= VF
$9DA    $6293   LD       V2, #93         ; Load 147 into V2
$9DC    $23CA   CALL     $3CA            ; Call subroutine at 3CA
$9DE    $5389   UNKNOWN  $5389           ; Unknown 5xxx instruction
$9E0    $9581   UNKNOWN  $9581           ; Unknown 9xxx instruction
$9E2    $6586   LD       V5, #86         ; Load 134 into V5
$9E4    $4066   SNE      V0, #66         ; Skip if V0 != 102
$9E6    $73D5   ADD      V3, #D5         ; Add 213 to V3
$9E8    $920D   UNKNOWN  $920D           ; Unknown 9xxx instruction
$9EA    $7423   ADD      V4, #23         ; Add 35 to V4
$9EC    $EF33   UNKNOWN  $EF33           ; Unknown Exxx instruction
$9EE    $F736   UNKNOWN  F736            ; Unknown Fxxx instruction
$9F0    $382C   SE       V8, #2C         ; Skip if V8 == 44
$9F2    $8160   LD       V1, V6          ; V1 = V6
$9F4    $432A   SNE      V3, #2A         ; Skip if V3 != 42
$9F6    $88DD   UNKNOWN  88DD            ; Unknown 8xxx instruction
$9F8    $0A7F   SYS      $A7F            ; System call to A7F
$9FA    $D1A7   DRW      V1, VA, #7      ; Draw 7-byte sprite at V1, VA
$9FC    $C6B6   RND      V6, #B6         ; V6 = random & B6
$9FE    $102A   JP       $02A            ; Jump to 02A
$A00    $9564   UNKNOWN  $9564           ; Unknown 9xxx instruction
$A02    $DF97   DRW      VF, V9, #7      ; Draw 7-byte sprite at VF, V9
$A04    $B372   JP       V0, $372        ; Jump to V0 + 372
$A06    $C620   RND      V6, #20         ; V6 = random & 20
$A08    $42B0   SNE      V2, #B0         ; Skip if V2 != 176
$A0A    $003F   SYS      $03F            ; System call to 03F
$A0C    $C9EF   RND      V9, #EF         ; V9 = random & EF
$A0E    $13DD   JP       $3DD            ; Jump to 3DD
$A10    $D816   DRW      V8, V1, #6      ; Draw 6-byte sprite at V8, V1
$A12    $08A8   SYS      $8A8            ; System call to 8A8
$A14    $D81C   DRW      V8, V1, #C      ; Draw 12-byte sprite at V8, V1
$A16    $1F3A   JP       $F3A            ; Jump to F3A
$A18    $A374   LD       I, $374         ; Load 374 into I
$A1A    $2D40   CALL     $D40            ; Call subroutine at D40
$A1C    $5EBB   UNKNOWN  $5EBB           ; Unknown 5xxx instruction
$A1E    $7129   ADD      V1, #29         ; Add 41 to V1
$A20    $08D2   SYS      $8D2            ; System call to 8D2
$A22    $2F78   CALL     $F78            ; Call subroutine at F78
$A24    $D971   DRW      V9, V7, #1      ; Draw 1-byte sprite at V9, V7
$A26    $94F5   UNKNOWN  $94F5           ; Unknown 9xxx instruction
$A28    $AAAF   LD       I, $AAF         ; Load AAF into I
$A2A    $5DF1   UNKNOWN  $5DF1           ; Unknown 5xxx instruction
$A2C    $BBE9   JP       V0, $BE9        ; Jump to V0 + BE9
$A2E    $7AE7   ADD      VA, #E7         ; Add 231 to VA
$A30    $BD2B   JP       V0, $D2B        ; Jump to V0 + D2B
$A32    $887D   UNKNOWN  887D            ; Unknown 8xxx instruction
$A34    $21F3   CALL     $1F3            ; Call subroutine at 1F3
$A36    $E607   UNKNOWN  $E607           ; Unknown Exxx instruction
$A38    $248D   CALL     $48D            ; Call subroutine at 48D
$A3A    $DEF2   DRW      VE, VF, #2      ; Draw 2-byte sprite at VE, VF
$A3C    $F370   UNKNOWN  F370            ; Unknown Fxxx instruction
$A3E    $5BE1   UNKNOWN  $5BE1           ; Unknown 5xxx instruction
$A40    $E273   UNKNOWN  $E273           ; Unknown Exxx instruction
$A42    $9AB7   UNKNOWN  $9AB7           ; Unknown 9xxx instruction
$A44    $DCFD   DRW      VC, VF, #D      ; Draw 13-byte sprite at VC, VF
$A46    $F017   UNKNOWN  F017            ; Unknown Fxxx instruction
$A48    $676F   LD       V7, #6F         ; Load 111 into V7
$A4A    $FDC6   UNKNOWN  FDC6            ; Unknown Fxxx instruction
$A4C    $840A   UNKNOWN  840A            ; Unknown 8xxx instruction
$A4E    $7FE7   ADD      VF, #E7         ; Add 231 to VF
$A50    $8EC1   OR       VE, VC          ; VE |= VC
$A52    $BCB7   JP       V0, $CB7        ; Jump to V0 + CB7
$A54    $29D5   CALL     $9D5            ; Call subroutine at 9D5
$A56    $3103   SE       V1, #03         ; Skip if V1 == 3
$A58    $D8D4   DRW      V8, VD, #4      ; Draw 4-byte sprite at V8, VD
$A5A    $61E9   LD       V1, #E9         ; Load 233 into V1
$A5C    $C297   RND      V2, #97         ; V2 = random & 97
$A5E    $5C83   UNKNOWN  $5C83           ; Unknown 5xxx instruction
$A60    $A1AD   LD       I, $1AD         ; Load 1AD into I
$A62    $EF5D   UNKNOWN  $EF5D           ; Unknown Exxx instruction
$A64    $4413   SNE      V4, #13         ; Skip if V4 != 19
$A66    $EF4D   UNKNOWN  $EF4D           ; Unknown Exxx instruction
$A68    $9F35   UNKNOWN  $9F35           ; Unknown 9xxx instruction
$A6A    $93D6   UNKNOWN  $93D6           ; Unknown 9xxx instruction
$A6C    $36CD   SE       V6, #CD         ; Skip if V6 == 205
$A6E    $C2D3   RND      V2, #D3         ; V2 = random & D3
$A70    $C876   RND      V8, #76         ; V8 = random & 76
$A72    $0A50   SYS      $A50            ; System call to A50
$A74    $BA7A   JP       V0, $A7A        ; Jump to V0 + A7A
$A76    $AC9B   LD       I, $C9B         ; Load C9B into I
$A78    $5C2B   UNKNOWN  $5C2B           ; Unknown 5xxx instruction
$A7A    $866D   UNKNOWN  866D            ; Unknown 8xxx instruction
$A7C    $3F4A   SE       VF, #4A         ; Skip if VF == 74
$A7E    $AD76   LD       I, $D76         ; Load D76 into I
$A80    $1172   JP       $172            ; Jump to 172
$A82    $808D   UNKNOWN  808D            ; Unknown 8xxx instruction
$A84    $70B0   ADD      V0, #B0         ; Add 176 to V0
$A86    $8A6D   UNKNOWN  8A6D            ; Unknown 8xxx instruction
$A88    $06F4   SYS      $6F4            ; System call to 6F4
$A8A    $9B52   UNKNOWN  $9B52           ; Unknown 9xxx instruction
$A8C    $CFC1   RND      VF, #C1         ; VF = random & C1
$A8E    $56F1   UNKNOWN  $56F1           ; Unknown 5xxx instruction
$A90    $2C47   CALL     $C47            ; Call subroutine at C47
$A92    $D0C6   DRW      V0, VC, #6      ; Draw 6-byte sprite at V0, VC
$A94    $280D   CALL     $80D            ; Call subroutine at 80D
$A96    $7F56   ADD      VF, #56         ; Add 86 to VF
$A98    $AAD3   LD       I, $AD3         ; Load AD3 into I
$A9A    $5274   UNKNOWN  $5274           ; Unknown 5xxx instruction
$A9C    $7584   ADD      V5, #84         ; Add 132 to V5
$A9E    $0113   SYS      $113            ; System call to 113
$AA0    $5DF0   SE       VD, VF          ; Skip if VD == VF
$AA2    $C62F   RND      V6, #2F         ; V6 = random & 2F
$AA4    $9595   UNKNOWN  $9595           ; Unknown 9xxx instruction
$AA6    $B0D3   JP       V0, $0D3        ; Jump to V0 + 0D3
$AA8    $C514   RND      V5, #14         ; V5 = random & 14
$AAA    $A552   LD       I, $552         ; Load 552 into I
$AAC    $6420   LD       V4, #20         ; Load 32 into V4
$AAE    $BB97   JP       V0, $B97        ; Jump to V0 + B97
$AB0    $4205   SNE      V2, #05         ; Skip if V2 != 5
$AB2    $0F4B   SYS      $F4B            ; System call to F4B
$AB4    $B932   JP       V0, $932        ; Jump to V0 + 932
$AB6    $D88E   DRW      V8, V8, #E      ; Draw 14-byte sprite at V8, V8
$AB8    $B89F   JP       V0, $89F        ; Jump to V0 + 89F
$ABA    $18D1   JP       $8D1            ; Jump to 8D1
$ABC    $4339   SNE      V3, #39         ; Skip if V3 != 57
$ABE    $30ED   SE       V0, #ED         ; Skip if V0 == 237
$AC0    $A7A6   LD       I, $7A6         ; Load 7A6 into I
$AC2    $CCD0   RND      VC, #D0         ; VC = random & D0
$AC4    $2912   CALL     $912            ; Call subroutine at 912
$AC6    $ABA5   LD       I, $BA5         ; Load BA5 into I
$AC8    $641D   LD       V4, #1D         ; Load 29 into V4
$ACA    $47FB   SNE      V7, #FB         ; Skip if V7 != 251
$ACC    $AB9A   LD       I, $B9A         ; Load B9A into I
$ACE    $3D3B   SE       VD, #3B         ; Skip if VD == 59
$AD0    $BCF9   JP       V0, $CF9        ; Jump to V0 + CF9
$AD2    $BF53   JP       V0, $F53        ; Jump to V0 + F53
$AD4    $3040   SE       V0, #40         ; Skip if V0 == 64
$AD6    $163B   JP       $63B            ; Jump to 63B
$AD8    $390A   SE       V9, #0A         ; Skip if V9 == 10
$ADA    $1FB1   JP       $FB1            ; Jump to FB1
$ADC    $0B37   SYS      $B37            ; System call to B37
$ADE    $CA1B   RND      VA, #1B         ; VA = random & 1B
$AE0    $FF8E   UNKNOWN  FF8E            ; Unknown Fxxx instruction
$AE2    $C03F   RND      V0, #3F         ; V0 = random & 3F
$AE4    $F4C5   UNKNOWN  F4C5            ; Unknown Fxxx instruction
$AE6    $091C   SYS      $91C            ; System call to 91C
$AE8    $0A43   SYS      $A43            ; System call to A43
$AEA    $7082   ADD      V0, #82         ; Add 130 to V0
$AEC    $A7CF   LD       I, $7CF         ; Load 7CF into I
$AEE    $314E   SE       V1, #4E         ; Skip if V1 == 78
$AF0    $5091   UNKNOWN  $5091           ; Unknown 5xxx instruction
$AF2    $5CDA   UNKNOWN  $5CDA           ; Unknown 5xxx instruction
$AF4    $E10C   UNKNOWN  $E10C           ; Unknown Exxx instruction
$AF6    $9C02   UNKNOWN  $9C02           ; Unknown 9xxx instruction
$AF8    $EF2D   UNKNOWN  $EF2D           ; Unknown Exxx instruction
$AFA    $6D02   LD       VD, #02         ; Load 2 into VD
$AFC    $A1B8   LD       I, $1B8         ; Load 1B8 into I
$AFE    $C2D4   RND      V2, #D4         ; V2 = random & D4
$B00    $7B05   ADD      VB, #05         ; Add 5 to VB
$B02    $9FFA   UNKNOWN  $9FFA           ; Unknown 9xxx instruction
$B04    $AF58   LD       I, $F58         ; Load F58 into I
$B06    $1ECF   JP       $ECF            ; Jump to ECF
$B08    $2676   CALL     $676            ; Call subroutine at 676
$B0A    $F6F4   UNKNOWN  F6F4            ; Unknown Fxxx instruction
$B0C    $8044   ADD      V0, V4          ; V0 += V4, VF = carry
$B0E    $33CB   SE       V3, #CB         ; Skip if V3 == 203
$B10    $2249   CALL     $249            ; Call subroutine at 249
$B12    $0E5F   SYS      $E5F            ; System call to E5F
$B14    $4392   SNE      V3, #92         ; Skip if V3 != 146
$B16    $1664   JP       $664            ; Jump to 664
$B18    $5762   UNKNOWN  $5762           ; Unknown 5xxx instruction
$B1A    $0702   SYS      $702            ; System call to 702
$B1C    $96DF   UNKNOWN  $96DF           ; Unknown 9xxx instruction
$B1E    $7251   ADD      V2, #51         ; Add 81 to V2
$B20    $F8AB   UNKNOWN  F8AB            ; Unknown Fxxx instruction
$B22    $6433   LD       V4, #33         ; Load 51 into V4
$B24    $D2E2   DRW      V2, VE, #2      ; Draw 2-byte sprite at V2, VE
$B26    $9978   UNKNOWN  $9978           ; Unknown 9xxx instruction
$B28    $F443   UNKNOWN  F443            ; Unknown Fxxx instruction
$B2A    $4156   SNE      V1, #56         ; Skip if V1 != 86
$B2C    $E2B8   UNKNOWN  $E2B8           ; Unknown Exxx instruction
$B2E    $CFB4   RND      VF, #B4         ; VF = random & B4
$B30    $3138   SE       V1, #38         ; Skip if V1 == 56
$B32    $91A8   UNKNOWN  $91A8           ; Unknown 9xxx instruction
$B34    $29EE   CALL     $9EE            ; Call subroutine at 9EE
$B36    $AA1A   LD       I, $A1A         ; Load A1A into I
$B38    $C2B3   RND      V2, #B3         ; V2 = random & B3
$B3A    $FE83   UNKNOWN  FE83            ; Unknown Fxxx instruction
$B3C    $4543   SNE      V5, #43         ; Skip if V5 != 67
$B3E    $396C   SE       V9, #6C         ; Skip if V9 == 108
$B40    $8AF2   AND      VA, VF          ; VA &= VF
$B42    $59DA   UNKNOWN  $59DA           ; Unknown 5xxx instruction
$B44    $F762   UNKNOWN  F762            ; Unknown Fxxx instruction
$B46    $2205   CALL     $205            ; Call subroutine at 205
$B48    $99CA   UNKNOWN  $99CA           ; Unknown 9xxx instruction
$B4A    $0D7F   SYS      $D7F            ; System call to D7F
$B4C    $8CE2   AND      VC, VE          ; VC &= VE
$B4E    $DB5E   DRW      VB, V5, #E      ; Draw 14-byte sprite at VB, V5
$B50    $FF21   UNKNOWN  FF21            ; Unknown Fxxx instruction
$B52    $B7A5   JP       V0, $7A5        ; Jump to V0 + 7A5
$B54    $FEE8   UNKNOWN  FEE8            ; Unknown Fxxx instruction
$B56    $A557   LD       I, $557         ; Load 557 into I
$B58    $655D   LD       V5, #5D         ; Load 93 into V5
$B5A    $A89B   LD       I, $89B         ; Load 89B into I
$B5C    $D124   DRW      V1, V2, #4      ; Draw 4-byte sprite at V1, V2
$B5E    $689E   LD       V8, #9E         ; Load 158 into V8
$B60    $2AFA   CALL     $AFA            ; Call subroutine at AFA
$B62    $BA07   JP       V0, $A07        ; Jump to V0 + A07
$B64    $E785   UNKNOWN  $E785           ; Unknown Exxx instruction
$B66    $F215   LD       DT, V2          ; Delay timer = V2
$B68    $6A9D   LD       VA, #9D         ; Load 157 into VA
$B6A    $2365   CALL     $365            ; Call subroutine at 365
$B6C    $EE40   UNKNOWN  $EE40           ; Unknown Exxx instruction
$B6E    $DD03   DRW      VD, V0, #3      ; Draw 3-byte sprite at VD, V0
$B70    $B9F4   JP       V0, $9F4        ; Jump to V0 + 9F4
$B72    $6659   LD       V6, #59         ; Load 89 into V6
$B74    $F9C7   UNKNOWN  F9C7            ; Unknown Fxxx instruction
$B76    $03EA   SYS      $3EA            ; System call to 3EA
$B78    $D485   DRW      V4, V8, #5      ; Draw 5-byte sprite at V4, V8
$B7A    $5F4A   UNKNOWN  $5F4A           ; Unknown 5xxx instruction
$B7C    $6FDB   LD       VF, #DB         ; Load 219 into VF
$B7E    $AF60   LD       I, $F60         ; Load F60 into I
$B80    $D13A   DRW      V1, V3, #A      ; Draw 10-byte sprite at V1, V3
$B82    $B6EF   JP       V0, $6EF        ; Jump to V0 + 6EF
$B84    $A14B   LD       I, $14B         ; Load 14B into I
$B86    $5A2E   UNKNOWN  $5A2E           ; Unknown 5xxx instruction
$B88    $51AB   UNKNOWN  $51AB           ; Unknown 5xxx instruction
$B8A    $7DC5   ADD      VD, #C5         ; Add 197 to VD
$B8C    $BEF5   JP       V0, $EF5        ; Jump to V0 + EF5
$B8E    $7A4C   ADD      VA, #4C         ; Add 76 to VA
$B90    $B4A1   JP       V0, $4A1        ; Jump to V0 + 4A1
$B92    $BF1E   JP       V0, $F1E        ; Jump to V0 + F1E
$B94    $BDF5   JP       V0, $DF5        ; Jump to V0 + DF5
$B96    $4D3C   SNE      VD, #3C         ; Skip if VD != 60
$B98    $D3DD   DRW      V3, VD, #D      ; Draw 13-byte sprite at V3, VD
$B9A    $EE02   UNKNOWN  $EE02           ; Unknown Exxx instruction
$B9C    $30D4   SE       V0, #D4         ; Skip if V0 == 212
$B9E    $9E89   UNKNOWN  $9E89           ; Unknown 9xxx instruction
$BA0    $1945   JP       $945            ; Jump to 945
$BA2    $B6F0   JP       V0, $6F0        ; Jump to V0 + 6F0
$BA4    $DA94   DRW      VA, V9, #4      ; Draw 4-byte sprite at VA, V9
$BA6    $0C4A   SYS      $C4A            ; System call to C4A
$BA8    $41CE   SNE      V1, #CE         ; Skip if V1 != 206
$BAA    $D60B   DRW      V6, V0, #B      ; Draw 11-byte sprite at V6, V0
$BAC    $83D3   XOR      V3, VD          ; V3 ^= VD
$BAE    $3821   SE       V8, #21         ; Skip if V8 == 33
$BB0    $4B79   SNE      VB, #79         ; Skip if VB != 121
$BB2    $7BC1   ADD      VB, #C1         ; Add 193 to VB
$BB4    $0749   SYS      $749            ; System call to 749
$BB6    $13B3   JP       $3B3            ; Jump to 3B3
$BB8    $65C2   LD       V5, #C2         ; Load 194 into V5
$BBA    $457C   SNE      V5, #7C         ; Skip if V5 != 124
$BBC    $1297   JP       $297            ; Jump to 297
$BBE    $6BE6   LD       VB, #E6         ; Load 230 into VB
$BC0    $9D85   UNKNOWN  $9D85           ; Unknown 9xxx instruction
$BC2    $1D37   JP       $D37            ; Jump to D37
$BC4    $520E   UNKNOWN  $520E           ; Unknown 5xxx instruction
$BC6    $8F6F   UNKNOWN  8F6F            ; Unknown 8xxx instruction
$BC8    $E903   UNKNOWN  $E903           ; Unknown Exxx instruction
$BCA    $0389   SYS      $389            ; System call to 389
$BCC    $5640   SE       V6, V4          ; Skip if V6 == V4
$BCE    $8AB0   LD       VA, VB          ; VA = VB
$BD0    $BDC0   JP       V0, $DC0        ; Jump to V0 + DC0
$BD2    $03D5   SYS      $3D5            ; System call to 3D5
$BD4    $9C9D   UNKNOWN  $9C9D           ; Unknown 9xxx instruction
$BD6    $447A   SNE      V4, #7A         ; Skip if V4 != 122
$BD8    $B8D1   JP       V0, $8D1        ; Jump to V0 + 8D1
$BDA    $327D   SE       V2, #7D         ; Skip if V2 == 125
$BDC    $4B2D   SNE      VB, #2D         ; Skip if VB != 45
$BDE    $F0B4   UNKNOWN  F0B4            ; Unknown Fxxx instruction
$BE0    $5DBA   UNKNOWN  $5DBA           ; Unknown 5xxx instruction
$BE2    $5394   UNKNOWN  $5394           ; Unknown 5xxx instruction
$BE4    $474E   SNE      V7, #4E         ; Skip if V7 != 78
$BE6    $B760   JP       V0, $760        ; Jump to V0 + 760
$BE8    $4079   SNE      V0, #79         ; Skip if V0 != 121
$BEA    $76FE   ADD      V6, #FE         ; Add 254 to V6
$BEC    $E02B   UNKNOWN  $E02B           ; Unknown Exxx instruction
$BEE    $7A72   ADD      VA, #72         ; Add 114 to VA
$BF0    $99F7   UNKNOWN  $99F7           ; Unknown 9xxx instruction
$BF2    $7D9C   ADD      VD, #9C         ; Add 156 to VD
$BF4    $4A53   SNE      VA, #53         ; Skip if VA != 83
$BF6    $4D6A   SNE      VD, #6A         ; Skip if VD != 106
$BF8    $610B   LD       V1, #0B         ; Load 11 into V1
$BFA    $0BA8   SYS      $BA8            ; System call to BA8
$BFC    $EF04   UNKNOWN  $EF04           ; Unknown Exxx instruction
$BFE    $A119   LD       I, $119         ; Load 119 into I
$C00    $5066   UNKNOWN  $5066           ; Unknown 5xxx instruction
$C02    $F079   UNKNOWN  F079            ; Unknown Fxxx instruction
$C04    $42D9   SNE      V2, #D9         ; Skip if V2 != 217
$C06    $80E1   OR       V0, VE          ; V0 |= VE
$C08    $7EE7   ADD      VE, #E7         ; Add 231 to VE
$C0A    $3509   SE       V5, #09         ; Skip if V5 == 9
$C0C    $74B5   ADD      V4, #B5         ; Add 181 to V4
$C0E    $5441   UNKNOWN  $5441           ; Unknown 5xxx instruction
$C10    $F017   UNKNOWN  F017            ; Unknown Fxxx instruction
$C12    $3898   SE       V8, #98         ; Skip if V8 == 152
$C14    $9DAF   UNKNOWN  $9DAF           ; Unknown 9xxx instruction
$C16    $421F   SNE      V2, #1F         ; Skip if V2 != 31
$C18    $EB3D   UNKNOWN  $EB3D           ; Unknown Exxx instruction
$C1A    $2F01   CALL     $F01            ; Call subroutine at F01
$C1C    $F035   UNKNOWN  F035            ; Unknown Fxxx instruction
$C1E    $F5B4   UNKNOWN  F5B4            ; Unknown Fxxx instruction
$C20    $5951   UNKNOWN  $5951           ; Unknown 5xxx instruction
$C22    $FBF0   UNKNOWN  FBF0            ; Unknown Fxxx instruction
$C24    $65C6   LD       V5, #C6         ; Load 198 into V5
$C26    $0922   SYS      $922            ; System call to 922
$C28    $D0F8   DRW      V0, VF, #8      ; Draw 8-byte sprite at V0, VF
$C2A    $6F62   LD       VF, #62         ; Load 98 into VF
$C2C    $9A9A   UNKNOWN  $9A9A           ; Unknown 9xxx instruction
$C2E    $CA6F   RND      VA, #6F         ; VA = random & 6F
$C30    $F53A   UNKNOWN  F53A            ; Unknown Fxxx instruction
$C32    $E4FA   UNKNOWN  $E4FA           ; Unknown Exxx instruction
$C34    $A204   LD       I, $204         ; Load 204 into I
$C36    $3A05   SE       VA, #05         ; Skip if VA == 5
$C38    $AADC   LD       I, $ADC         ; Load ADC into I
$C3A    $D5E1   DRW      V5, VE, #1      ; Draw 1-byte sprite at V5, VE
$C3C    $DBEC   DRW      VB, VE, #C      ; Draw 12-byte sprite at VB, VE
$C3E    $316E   SE       V1, #6E         ; Skip if V1 == 110
$C40    $B2D8   JP       V0, $2D8        ; Jump to V0 + 2D8
$C42    $24BB   CALL     $4BB            ; Call subroutine at 4BB
$C44    $BAD2   JP       V0, $AD2        ; Jump to V0 + AD2
$C46    $5F03   UNKNOWN  $5F03           ; Unknown 5xxx instruction
$C48    $7615   ADD      V6, #15         ; Add 21 to V6
$C4A    $11B9   JP       $1B9            ; Jump to 1B9
$C4C    $63D1   LD       V3, #D1         ; Load 209 into V3
$C4E    $9844   UNKNOWN  $9844           ; Unknown 9xxx instruction
$C50    $D0F6   DRW      V0, VF, #6      ; Draw 6-byte sprite at V0, VF
$C52    $544B   UNKNOWN  $544B           ; Unknown 5xxx instruction
$C54    $48F1   SNE      V8, #F1         ; Skip if V8 != 241
$C56    $D835   DRW      V8, V3, #5      ; Draw 5-byte sprite at V8, V3
$C58    $C0EE   RND      V0, #EE         ; V0 = random & EE
$C5A    $FC6F   UNKNOWN  FC6F            ; Unknown Fxxx instruction
$C5C    $7B39   ADD      VB, #39         ; Add 57 to VB
$C5E    $929E   UNKNOWN  $929E           ; Unknown 9xxx instruction
$C60    $9290   SNE      V2, V9          ; Skip if V2 != V9
$C62    $472B   SNE      V7, #2B         ; Skip if V7 != 43
$C64    $3FB0   SE       VF, #B0         ; Skip if VF == 176
$C66    $51F3   UNKNOWN  $51F3           ; Unknown 5xxx instruction
$C68    $C72E   RND      V7, #2E         ; V7 = random & 2E
$C6A    $56CA   UNKNOWN  $56CA           ; Unknown 5xxx instruction
$C6C    $C962   RND      V9, #62         ; V9 = random & 62
$C6E    $6769   LD       V7, #69         ; Load 105 into V7
$C70    $49F1   SNE      V9, #F1         ; Skip if V9 != 241
$C72    $C0BF   RND      V0, #BF         ; V0 = random & BF
$C74    $0D64   SYS      $D64            ; System call to D64
$C76    $69F8   LD       V9, #F8         ; Load 248 into V9
$C78    $0507   SYS      $507            ; System call to 507
$C7A    $2218   CALL     $218            ; Call subroutine at 218
$C7C    $4220   SNE      V2, #20         ; Skip if V2 != 32
$C7E    $4B13   SNE      VB, #13         ; Skip if VB != 19
$C80    $4756   SNE      V7, #56         ; Skip if V7 != 86
$C82    $F82F   UNKNOWN  F82F            ; Unknown Fxxx instruction
$C84    $34AE   SE       V4, #AE         ; Skip if V4 == 174
$C86    $781A   ADD      V8, #1A         ; Add 26 to V8
$C88    $071B   SYS      $71B            ; System call to 71B
$C8A    $FFF9   UNKNOWN  FFF9            ; Unknown Fxxx instruction
$C8C    $431C   SNE      V3, #1C         ; Skip if V3 != 28
$C8E    $7CAE   ADD      VC, #AE         ; Add 174 to VC
$C90    $2F66   CALL     $F66            ; Call subroutine at F66
$C92    $4617   SNE      V6, #17         ; Skip if V6 != 23
$C94    $473F   SNE      V7, #3F         ; Skip if V7 != 63
$C96    $D822   DRW      V8, V2, #2      ; Draw 2-byte sprite at V8, V2
$C98    $EB18   UNKNOWN  $EB18           ; Unknown Exxx instruction
$C9A    $3FAB   SE       VF, #AB         ; Skip if VF == 171
$C9C    $3737   SE       V7, #37         ; Skip if V7 == 55
$C9E    $D9C4   DRW      V9, VC, #4      ; Draw 4-byte sprite at V9, VC
$CA0    $8CD5   SUB      VC, VD          ; VC -= VD, VF = !borrow
$CA2    $AEFF   LD       I, $EFF         ; Load EFF into I
$CA4    $CE12   RND      VE, #12         ; VE = random & 12
$CA6    $B7B2   JP       V0, $7B2        ; Jump to V0 + 7B2
$CA8    $E570   UNKNOWN  $E570           ; Unknown Exxx instruction
$CAA    $43BC   SNE      V3, #BC         ; Skip if V3 != 188
$CAC    $5CC3   UNKNOWN  $5CC3           ; Unknown 5xxx instruction
$CAE    $9D71   UNKNOWN  $9D71           ; Unknown 9xxx instruction
$CB0    $22B6   CALL     $2B6            ; Call subroutine at 2B6
$CB2    $3378   SE       V3, #78         ; Skip if V3 == 120
$CB4    $4F50   SNE      VF, #50         ; Skip if VF != 80
$CB6    $BFFB   JP       V0, $FFB        ; Jump to V0 + FFB
$CB8    $6C4A   LD       VC, #4A         ; Load 74 into VC
$CBA    $A367   LD       I, $367         ; Load 367 into I
$CBC    $8375   SUB      V3, V7          ; V3 -= V7, VF = !borrow
$CBE    $B0BB   JP       V0, $0BB        ; Jump to V0 + 0BB
$CC0    $FA4A   UNKNOWN  FA4A            ; Unknown Fxxx instruction
$CC2    $1537   JP       $537            ; Jump to 537
$CC4    $881D   UNKNOWN  881D            ; Unknown 8xxx instruction
$CC6    $99A1   UNKNOWN  $99A1           ; Unknown 9xxx instruction
$CC8    $5DE8   UNKNOWN  $5DE8           ; Unknown 5xxx instruction
$CCA    $AD1A   LD       I, $D1A         ; Load D1A into I
$CCC    $C8DC   RND      V8, #DC         ; V8 = random & DC
$CCE    $F111   UNKNOWN  F111            ; Unknown Fxxx instruction
$CD0    $B69C   JP       V0, $69C        ; Jump to V0 + 69C
$CD2    $AC61   LD       I, $C61         ; Load C61 into I
$CD4    $719C   ADD      V1, #9C         ; Add 156 to V1
$CD6    $9463   UNKNOWN  $9463           ; Unknown 9xxx instruction
$CD8    $3ED0   SE       VE, #D0         ; Skip if VE == 208
$CDA    $1CE0   JP       $CE0            ; Jump to CE0
$CDC    $3C7B   SE       VC, #7B         ; Skip if VC == 123
$CDE    $7089   ADD      V0, #89         ; Add 137 to V0
$CE0    $838B   UNKNOWN  838B            ; Unknown 8xxx instruction
$CE2    $8666   SHR      V6              ; V6 >>= 1, VF = LSB
$CE4    $3E99   SE       VE, #99         ; Skip if VE == 153
$CE6    $6A41   LD       VA, #41         ; Load 65 into VA
$CE8    $33D9   SE       V3, #D9         ; Skip if V3 == 217
$CEA    $DD1E   DRW      VD, V1, #E      ; Draw 14-byte sprite at VD, V1
$CEC    $0739   SYS      $739            ; System call to 739
$CEE    $09E9   SYS      $9E9            ; System call to 9E9
$CF0    $B9DF   JP       V0, $9DF        ; Jump to V0 + 9DF
$CF2    $F757   UNKNOWN  F757            ; Unknown Fxxx instruction
$CF4    $4764   SNE      V7, #64         ; Skip if V7 != 100
$CF6    $235F   CALL     $35F            ; Call subroutine at 35F
$CF8    $52D9   UNKNOWN  $52D9           ; Unknown 5xxx instruction
$CFA    $CEB7   RND      VE, #B7         ; VE = random & B7
$CFC    $4143   SNE      V1, #43         ; Skip if V1 != 67
$CFE    $8913   XOR      V9, V1          ; V9 ^= V1
$D00    $5DD4   UNKNOWN  $5DD4           ; Unknown 5xxx instruction
$D02    $FE39   UNKNOWN  FE39            ; Unknown Fxxx instruction
$D04    $2E66   CALL     $E66            ; Call subroutine at E66
$D06    $0F02   SYS      $F02            ; System call to F02
$D08    $E1CE   UNKNOWN  $E1CE           ; Unknown Exxx instruction
$D0A    $0A0B   SYS      $A0B            ; System call to A0B
$D0C    $A7C9   LD       I, $7C9         ; Load 7C9 into I
$D0E    $2DC0   CALL     $DC0            ; Call subroutine at DC0
$D10    $9AA9   UNKNOWN  $9AA9           ; Unknown 9xxx instruction
$D12    $D0C3   DRW      V0, VC, #3      ; Draw 3-byte sprite at V0, VC
$D14    $C83A   RND      V8, #3A         ; V8 = random & 3A
$D16    $6C43   LD       VC, #43         ; Load 67 into VC
$D18    $19FD   JP       $9FD            ; Jump to 9FD
$D1A    $3598   SE       V5, #98         ; Skip if V5 == 152
$D1C    $2C2D   CALL     $C2D            ; Call subroutine at C2D
$D1E    $724E   ADD      V2, #4E         ; Add 78 to V2
$D20    $998D   UNKNOWN  $998D           ; Unknown 9xxx instruction
$D22    $FD81   UNKNOWN  FD81            ; Unknown Fxxx instruction
$D24    $2EDE   CALL     $EDE            ; Call subroutine at EDE
$D26    $2944   CALL     $944            ; Call subroutine at 944
$D28    $7C27   ADD      VC, #27         ; Add 39 to VC
$D2A    $C633   RND      V6, #33         ; V6 = random & 33
$D2C    $4D5A   SNE      VD, #5A         ; Skip if VD != 90
$D2E    $82C9   UNKNOWN  82C9            ; Unknown 8xxx instruction
$D30    $0224   SYS      $224            ; System call to 224
$D32    $4F0D   SNE      VF, #0D         ; Skip if VF != 13
$D34    $2B62   CALL     $B62            ; Call subroutine at B62
$D36    $8B35   SUB      VB, V3          ; VB -= V3, VF = !borrow
$D38    $3D29   SE       VD, #29         ; Skip if VD == 41
$D3A    $5B5B   UNKNOWN  $5B5B           ; Unknown 5xxx instruction
$D3C    $5C7D   UNKNOWN  $5C7D           ; Unknown 5xxx instruction
$D3E    $4F68   SNE      VF, #68         ; Skip if VF != 104
$D40    $D644   DRW      V6, V4, #4      ; Draw 4-byte sprite at V6, V4
$D42    $C726   RND      V7, #26         ; V7 = random & 26
$D44    $BFCE   JP       V0, $FCE        ; Jump to V0 + FCE
$D46    $FF71   UNKNOWN  FF71            ; Unknown Fxxx instruction
$D48    $4C4B   SNE      VC, #4B         ; Skip if VC != 75
$D4A    $8C6D   UNKNOWN  8C6D            ; Unknown 8xxx instruction
$D4C    $55EE   UNKNOWN  $55EE           ; Unknown 5xxx instruction
$D4E    $6B1C   LD       VB, #1C         ; Load 28 into VB
$D50    $00C7   SYS      $0C7            ; System call to 0C7
$D52    $09DF   SYS      $9DF            ; System call to 9DF
$D54    $1499   JP       $499            ; Jump to 499
$D56    $2B61   CALL     $B61            ; Call subroutine at B61
$D58    $5565   UNKNOWN  $5565           ; Unknown 5xxx instruction
$D5A    $C4B6   RND      V4, #B6         ; V4 = random & B6
$D5C    $C270   RND      V2, #70         ; V2 = random & 70
$D5E    $43E2   SNE      V3, #E2         ; Skip if V3 != 226
$D60    $36ED   SE       V6, #ED         ; Skip if V6 == 237
$D62    $BF36   JP       V0, $F36        ; Jump to V0 + F36
$D64    $1D52   JP       $D52            ; Jump to D52
$D66    $8140   LD       V1, V4          ; V1 = V4
$D68    $FAA0   UNKNOWN  FAA0            ; Unknown Fxxx instruction
$D6A    $3129   SE       V1, #29         ; Skip if V1 == 41
$D6C    $65CA   LD       V5, #CA         ; Load 202 into V5
$D6E    $EF2B   UNKNOWN  $EF2B           ; Unknown Exxx instruction
$D70    $5203   UNKNOWN  $5203           ; Unknown 5xxx instruction
$D72    $469C   SNE      V6, #9C         ; Skip if V6 != 156
$D74    $0161   SYS      $161            ; System call to 161
$D76    $91A3   UNKNOWN  $91A3           ; Unknown 9xxx instruction
$D78    $0003   SYS      $003            ; System call to 003
$D7A    $056E   SYS      $56E            ; System call to 56E
$D7C    $B17D   JP       V0, $17D        ; Jump to V0 + 17D
$D7E    $9FEA   UNKNOWN  $9FEA           ; Unknown 9xxx instruction
$D80    $D2ED   DRW      V2, VE, #D      ; Draw 13-byte sprite at V2, VE
$D82    $63B5   LD       V3, #B5         ; Load 181 into V3
$D84    $F7C1   UNKNOWN  F7C1            ; Unknown Fxxx instruction
$D86    $BB50   JP       V0, $B50        ; Jump to V0 + B50
$D88    $53E9   UNKNOWN  $53E9           ; Unknown 5xxx instruction
$D8A    $7F9E   ADD      VF, #9E         ; Add 158 to VF
$D8C    $5E8F   UNKNOWN  $5E8F           ; Unknown 5xxx instruction
$D8E    $FBB8   UNKNOWN  FBB8            ; Unknown Fxxx instruction
$D90    $6C11   LD       VC, #11         ; Load 17 into VC
$D92    $CC1F   RND      VC, #1F         ; VC = random & 1F
$D94    $42E6   SNE      V2, #E6         ; Skip if V2 != 230
$D96    $A082   LD       I, $082         ; Load 082 into I
$D98    $68C2   LD       V8, #C2         ; Load 194 into V8
$D9A    $48B4   SNE      V8, #B4         ; Skip if V8 != 180
$D9C    $3360   SE       V3, #60         ; Skip if V3 == 96
$D9E    $0CF2   SYS      $CF2            ; System call to CF2
$DA0    $2667   CALL     $667            ; Call subroutine at 667
$DA2    $1383   JP       $383            ; Jump to 383
$DA4    $3B95   SE       VB, #95         ; Skip if VB == 149
$DA6    $AD8F   LD       I, $D8F         ; Load D8F into I
$DA8    $78A6   ADD      V8, #A6         ; Add 166 to V8
$DAA    $53DB   UNKNOWN  $53DB           ; Unknown 5xxx instruction
$DAC    $968D   UNKNOWN  $968D           ; Unknown 9xxx instruction
$DAE    $7A9A   ADD      VA, #9A         ; Add 154 to VA
$DB0    $EC4D   UNKNOWN  $EC4D           ; Unknown Exxx instruction
$DB2    $4C2D   SNE      VC, #2D         ; Skip if VC != 45
$DB4    $70CD   ADD      V0, #CD         ; Add 205 to V0
$DB6    $6266   LD       V2, #66         ; Load 102 into V2
$DB8    $8BA6   SHR      VB              ; VB >>= 1, VF = LSB
$DBA    $B42C   JP       V0, $42C        ; Jump to V0 + 42C
$DBC    $20BB   CALL     $0BB            ; Call subroutine at 0BB
$DBE    $BB2A   JP       V0, $B2A        ; Jump to V0 + B2A
$DC0    $A11F   LD       I, $11F         ; Load 11F into I
$DC2    $7837   ADD      V8, #37         ; Add 55 to V8
$DC4    $1353   JP       $353            ; Jump to 353
$DC6    $5FED   UNKNOWN  $5FED           ; Unknown 5xxx instruction
$DC8    $1AD2   JP       $AD2            ; Jump to AD2
$DCA    $C982   RND      V9, #82         ; V9 = random & 82
$DCC    $CF5F   RND      VF, #5F         ; VF = random & 5F
$DCE    $5D53   UNKNOWN  $5D53           ; Unknown 5xxx instruction
$DD0    $5007   UNKNOWN  $5007           ; Unknown 5xxx instruction
$DD2    $C24D   RND      V2, #4D         ; V2 = random & 4D
$DD4    $7B54   ADD      VB, #54         ; Add 84 to VB
$DD6    $ABD7   LD       I, $BD7         ; Load BD7 into I
$DD8    $F96C   UNKNOWN  F96C            ; Unknown Fxxx instruction
$DDA    $D41D   DRW      V4, V1, #D      ; Draw 13-byte sprite at V4, V1
$DDC    $59D6   UNKNOWN  $59D6           ; Unknown 5xxx instruction
$DDE    $9339   UNKNOWN  $9339           ; Unknown 9xxx instruction
$DE0    $185C   JP       $85C            ; Jump to 85C
$DE2    $8515   SUB      V5, V1          ; V5 -= V1, VF = !borrow
$DE4    $AED9   LD       I, $ED9         ; Load ED9 into I
$DE6    $903E   UNKNOWN  $903E           ; Unknown 9xxx instruction
$DE8    $6FEE   LD       VF, #EE         ; Load 238 into VF
$DEA    $25AD   CALL     $5AD            ; Call subroutine at 5AD
$DEC    $59DF   UNKNOWN  $59DF           ; Unknown 5xxx instruction
$DEE    $14E5   JP       $4E5            ; Jump to 4E5
$DF0    $C780   RND      V7, #80         ; V7 = random & 80
$DF2    $7615   ADD      V6, #15         ; Add 21 to V6
$DF4    $AC8F   LD       I, $C8F         ; Load C8F into I
$DF6    $021A   SYS      $21A            ; System call to 21A
$DF8    $580F   UNKNOWN  $580F           ; Unknown 5xxx instruction
$DFA    $E59A   UNKNOWN  $E59A           ; Unknown Exxx instruction
$DFC    $DDA0   DRW      VD, VA, #0      ; Draw 0-byte sprite at VD, VA
$DFE    $414B   SNE      V1, #4B         ; Skip if V1 != 75
$E00    $0C9A   SYS      $C9A            ; System call to C9A
$E02    $17F6   JP       $7F6            ; Jump to 7F6
$E04    $3C06   SE       VC, #06         ; Skip if VC == 6
$E06    $DF92   DRW      VF, V9, #2      ; Draw 2-byte sprite at VF, V9
$E08    $A845   LD       I, $845         ; Load 845 into I
$E0A    $DABD   DRW      VA, VB, #D      ; Draw 13-byte sprite at VA, VB
$E0C    $6823   LD       V8, #23         ; Load 35 into V8
$E0E    $20A7   CALL     $0A7            ; Call subroutine at 0A7
$E10    $2397   CALL     $397            ; Call subroutine at 397
$E12    $C92B   RND      V9, #2B         ; V9 = random & 2B
$E14    $ED67   UNKNOWN  $ED67           ; Unknown Exxx instruction
$E16    $33AD   SE       V3, #AD         ; Skip if V3 == 173
$E18    $D4D1   DRW      V4, VD, #1      ; Draw 1-byte sprite at V4, VD
$E1A    $C0EB   RND      V0, #EB         ; V0 = random & EB
$E1C    $6702   LD       V7, #02         ; Load 2 into V7
$E1E    $355D   SE       V5, #5D         ; Skip if V5 == 93
$E20    $FF11   UNKNOWN  FF11            ; Unknown Fxxx instruction
$E22    $537A   UNKNOWN  $537A           ; Unknown 5xxx instruction
$E24    $A129   LD       I, $129         ; Load 129 into I
$E26    $74F3   ADD      V4, #F3         ; Add 243 to V4
$E28    $3A22   SE       VA, #22         ; Skip if VA == 34
$E2A    $30F3   SE       V0, #F3         ; Skip if V0 == 243
$E2C    $0235   SYS      $235            ; System call to 235
$E2E    $9BBE   UNKNOWN  $9BBE           ; Unknown 9xxx instruction
$E30    $106C   JP       $06C            ; Jump to 06C
$E32    $65A7   LD       V5, #A7         ; Load 167 into V5
$E34    $0651   SYS      $651            ; System call to 651
$E36    $B960   JP       V0, $960        ; Jump to V0 + 960
$E38    $C109   RND      V1, #09         ; V1 = random & 09
$E3A    $61AD   LD       V1, #AD         ; Load 173 into V1
$E3C    $1172   JP       $172            ; Jump to 172
$E3E    $56D5   UNKNOWN  $56D5           ; Unknown 5xxx instruction
$E40    $A65C   LD       I, $65C         ; Load 65C into I
$E42    $8EFE   SHL      VE              ; VE <<= 1, VF = MSB
$E44    $E6B9   UNKNOWN  $E6B9           ; Unknown Exxx instruction
$E46    $FCCB   UNKNOWN  FCCB            ; Unknown Fxxx instruction
$E48    $9E53   UNKNOWN  $9E53           ; Unknown 9xxx instruction
$E4A    $2E4C   CALL     $E4C            ; Call subroutine at E4C
$E4C    $3F1B   SE       VF, #1B         ; Skip if VF == 27
$E4E    $3C35   SE       VC, #35         ; Skip if VC == 53
$E50    $25D6   CALL     $5D6            ; Call subroutine at 5D6
$E52    $B99A   JP       V0, $99A        ; Jump to V0 + 99A
$E54    $1AFE   JP       $AFE            ; Jump to AFE
$E56    $C2F5   RND      V2, #F5         ; V2 = random & F5
$E58    $472A   SNE      V7, #2A         ; Skip if V7 != 42
$E5A    $FCEC   UNKNOWN  FCEC            ; Unknown Fxxx instruction
$E5C    $AC52   LD       I, $C52         ; Load C52 into I
$E5E    $7206   ADD      V2, #06         ; Add 6 to V2
$E60    $DA5D   DRW      VA, V5, #D      ; Draw 13-byte sprite at VA, V5
$E62    $C94C   RND      V9, #4C         ; V9 = random & 4C
$E64    $1D48   JP       $D48            ; Jump to D48
$E66    $4A70   SNE      VA, #70         ; Skip if VA != 112
$E68    $3CEC   SE       VC, #EC         ; Skip if VC == 236
$E6A    $4A0E   SNE      VA, #0E         ; Skip if VA != 14
$E6C    $BE2E   JP       V0, $E2E        ; Jump to V0 + E2E
$E6E    $B564   JP       V0, $564        ; Jump to V0 + 564
$E70    $88E3   XOR      V8, VE          ; V8 ^= VE
$E72    $B905   JP       V0, $905        ; Jump to V0 + 905
$E74    $2519   CALL     $519            ; Call subroutine at 519
$E76    $FC62   UNKNOWN  FC62            ; Unknown Fxxx instruction
$E78    $009A   SYS      $09A            ; System call to 09A
$E7A    $F44D   UNKNOWN  F44D            ; Unknown Fxxx instruction
$E7C    $A9C6   LD       I, $9C6         ; Load 9C6 into I
$E7E    $5066   UNKNOWN  $5066           ; Unknown 5xxx instruction
$E80    $A965   LD       I, $965         ; Load 965 into I
$E82    $939B   UNKNOWN  $939B           ; Unknown 9xxx instruction
$E84    $EEAB   UNKNOWN  $EEAB           ; Unknown Exxx instruction
$E86    $654F   LD       V5, #4F         ; Load 79 into V5
$E88    $C647   RND      V6, #47         ; V6 = random & 47
$E8A    $353B   SE       V5, #3B         ; Skip if V5 == 59
$E8C    $DED0   DRW      VE, VD, #0      ; Draw 0-byte sprite at VE, VD
$E8E    $8F41   OR       VF, V4          ; VF |= V4
$E90    $418D   SNE      V1, #8D         ; Skip if V1 != 141
$E92    $D4AC   DRW      V4, VA, #C      ; Draw 12-byte sprite at V4, VA
$E94    $8AE5   SUB      VA, VE          ; VA -= VE, VF = !borrow
$E96    $1A4D   JP       $A4D            ; Jump to A4D
$E98    $91D7   UNKNOWN  $91D7           ; Unknown 9xxx instruction
$E9A    $6FEE   LD       VF, #EE         ; Load 238 into VF
$E9C    $6AA8   LD       VA, #A8         ; Load 168 into VA
$E9E    $1870   JP       $870            ; Jump to 870
$EA0    $4DB0   SNE      VD, #B0         ; Skip if VD != 176
$EA2    $CAB6   RND      VA, #B6         ; VA = random & B6
$EA4    $80BB   UNKNOWN  80BB            ; Unknown 8xxx instruction
$EA6    $4FDF   SNE      VF, #DF         ; Skip if VF != 223
$EA8    $6490   LD       V4, #90         ; Load 144 into V4
$EAA    $ACD1   LD       I, $CD1         ; Load CD1 into I
$EAC    $F178   UNKNOWN  F178            ; Unknown Fxxx instruction
$EAE    $CBAE   RND      VB, #AE         ; VB = random & AE
$EB0    $CEDA   RND      VE, #DA         ; VE = random & DA
$EB2    $7141   ADD      V1, #41         ; Add 65 to V1
$EB4    $551F   UNKNOWN  $551F           ; Unknown 5xxx instruction
$EB6    $15C1   JP       $5C1            ; Jump to 5C1
$EB8    $AF6E   LD       I, $F6E         ; Load F6E into I
$EBA    $666E   LD       V6, #6E         ; Load 110 into V6
$EBC    $D974   DRW      V9, V7, #4      ; Draw 4-byte sprite at V9, V7
$EBE    $66C7   LD       V6, #C7         ; Load 199 into V6
$EC0    $DC2C   DRW      VC, V2, #C      ; Draw 12-byte sprite at VC, V2
$EC2    $0E8E   SYS      $E8E            ; System call to E8E
$EC4    $019A   SYS      $19A            ; System call to 19A
$EC6    $ABAA   LD       I, $BAA         ; Load BAA into I
$EC8    $366D   SE       V6, #6D         ; Skip if V6 == 109
$ECA    $6685   LD       V6, #85         ; Load 133 into V6
$ECC    $3981   SE       V9, #81         ; Skip if V9 == 129
$ECE    $C6C9   RND      V6, #C9         ; V6 = random & C9
$ED0    $764E   ADD      V6, #4E         ; Add 78 to V6
$ED2    $5584   UNKNOWN  $5584           ; Unknown 5xxx instruction
$ED4    $65A0   LD       V5, #A0         ; Load 160 into V5
$ED6    $4511   SNE      V5, #11         ; Skip if V5 != 17
$ED8    $DCBE   DRW      VC, VB, #E      ; Draw 14-byte sprite at VC, VB
$EDA    $6108   LD       V1, #08         ; Load 8 into V1
$EDC    $1295   JP       $295            ; Jump to 295
$EDE    $5CF8   UNKNOWN  $5CF8           ; Unknown 5xxx instruction
$EE0    $5A0C   UNKNOWN  $5A0C           ; Unknown 5xxx instruction
$EE2    $78DD   ADD      V8, #DD         ; Add 221 to V8
$EE4    $1CE4   JP       $CE4            ; Jump to CE4
$EE6    $2E14   CALL     $E14            ; Call subroutine at E14
$EE8    $5CAE   UNKNOWN  $5CAE           ; Unknown 5xxx instruction
$EEA    $F0CB   UNKNOWN  F0CB            ; Unknown Fxxx instruction
$EEC    $9053   UNKNOWN  $9053           ; Unknown 9xxx instruction
$EEE    $FCC0   UNKNOWN  FCC0            ; Unknown Fxxx instruction
$EF0    $C49A   RND      V4, #9A         ; V4 = random & 9A
$EF2    $E218   UNKNOWN  $E218           ; Unknown Exxx instruction
$EF4    $E71C   UNKNOWN  $E71C           ; Unknown Exxx instruction
$EF6    $D7D9   DRW      V7, VD, #9      ; Draw 9-byte sprite at V7, VD
$EF8    $CA9B   RND      VA, #9B         ; VA = random & 9B
$EFA    $5FFB   UNKNOWN  $5FFB           ; Unknown 5xxx instruction
$EFC    $620D   LD       V2, #0D         ; Load 13 into V2
$EFE    $0B97   SYS      $B97            ; System call to B97
$F00    $5295   UNKNOWN  $5295           ; Unknown 5xxx instruction
$F02    $BCED   JP       V0, $CED        ; Jump to V0 + CED
$F04    $BF78   JP       V0, $F78        ; Jump to V0 + F78
$F06    $C1F8   RND      V1, #F8         ; V1 = random & F8
$F08    $FA7C   UNKNOWN  FA7C            ; Unknown Fxxx instruction
$F0A    $5B01   UNKNOWN  $5B01           ; Unknown 5xxx instruction
$F0C    $F437   UNKNOWN  F437            ; Unknown Fxxx instruction
$F0E    $FDA4   UNKNOWN  FDA4            ; Unknown Fxxx instruction
$F10    $C693   RND      V6, #93         ; V6 = random & 93
$F12    $CA4E   RND      VA, #4E         ; VA = random & 4E
$F14    $A465   LD       I, $465         ; Load 465 into I
$F16    $365B   SE       V6, #5B         ; Skip if V6 == 91
$F18    $8FE9   UNKNOWN  8FE9            ; Unknown 8xxx instruction
$F1A    $C883   RND      V8, #83         ; V8 = random & 83
$F1C    $9E64   UNKNOWN  $9E64           ; Unknown 9xxx instruction
$F1E    $23F8   CALL     $3F8            ; Call subroutine at 3F8
$F20    $0DBD   SYS      $DBD            ; System call to DBD
$F22    $8758   UNKNOWN  8758            ; Unknown 8xxx instruction
$F24    $C616   RND      V6, #16         ; V6 = random & 16
$F26    $8ED0   LD       VE, VD          ; VE = VD
$F28    $CF71   RND      VF, #71         ; VF = random & 71
$F2A    $8C43   XOR      VC, V4          ; VC ^= V4
$F2C    $AB34   LD       I, $B34         ; Load B34 into I
$F2E    $8A8A   UNKNOWN  8A8A            ; Unknown 8xxx instruction
$F30    $2FFF   CALL     $FFF            ; Call subroutine at FFF
$F32    $9B16   UNKNOWN  $9B16           ; Unknown 9xxx instruction
$F34    $EE88   UNKNOWN  $EE88           ; Unknown Exxx instruction
$F36    $3BFF   SE       VB, #FF         ; Skip if VB == 255
$F38    $53AF   UNKNOWN  $53AF           ; Unknown 5xxx instruction
$F3A    $8159   UNKNOWN  8159            ; Unknown 8xxx instruction
$F3C    $D608   DRW      V6, V0, #8      ; Draw 8-byte sprite at V6, V0
$F3E    $8B4B   UNKNOWN  8B4B            ; Unknown 8xxx instruction
$F40    $CD8B   RND      VD, #8B         ; VD = random & 8B
$F42    $7E9D   ADD      VE, #9D         ; Add 157 to VE
$F44    $5506   UNKNOWN  $5506           ; Unknown 5xxx instruction
$F46    $6ABF   LD       VA, #BF         ; Load 191 into VA
$F48    $E063   UNKNOWN  $E063           ; Unknown Exxx instruction
$F4A    $BECF   JP       V0, $ECF        ; Jump to V0 + ECF
$F4C    $46C2   SNE      V6, #C2         ; Skip if V6 != 194
$F4E    $9DF6   UNKNOWN  $9DF6           ; Unknown 9xxx instruction
$F50    $11BA   JP       $1BA            ; Jump to 1BA
$F52    $3337   SE       V3, #37         ; Skip if V3 == 55
$F54    $9F95   UNKNOWN  $9F95           ; Unknown 9xxx instruction
$F56    $E1E5   UNKNOWN  $E1E5           ; Unknown Exxx instruction
$F58    $100B   JP       $00B            ; Jump to 00B
$F5A    $91C8   UNKNOWN  $91C8           ; Unknown 9xxx instruction
$F5C    $86D1   OR       V6, VD          ; V6 |= VD
$F5E    $5F64   UNKNOWN  $5F64           ; Unknown 5xxx instruction
$F60    $8A95   SUB      VA, V9          ; VA -= V9, VF = !borrow
$F62    $484D   SNE      V8, #4D         ; Skip if V8 != 77
$F64    $8948   UNKNOWN  8948            ; Unknown 8xxx instruction
$F66    $014B   SYS      $14B            ; System call to 14B
$F68    $36A7   SE       V6, #A7         ; Skip if V6 == 167
$F6A    $2D81   CALL     $D81            ; Call subroutine at D81
$F6C    $96E1   UNKNOWN  $96E1           ; Unknown 9xxx instruction
$F6E    $21EB   CALL     $1EB            ; Call subroutine at 1EB
$F70    $7D9D   ADD      VD, #9D         ; Add 157 to VD
$F72    $2D2A   CALL     $D2A            ; Call subroutine at D2A
$F74    $A98D   LD       I, $98D         ; Load 98D into I
$F76    $77A2   ADD      V7, #A2         ; Add 162 to V7
$F78    $F000   UNKNOWN  F000            ; Unknown Fxxx instruction
$F7A    $A8AC   LD       I, $8AC         ; Load 8AC into I
$F7C    $A269   LD       I, $269         ; Load 269 into I
$F7E    $E15A   UNKNOWN  $E15A           ; Unknown Exxx instruction
$F80    $4679   SNE      V6, #79         ; Skip if V6 != 121
$F82    $7490   ADD      V4, #90         ; Add 144 to V4
$F84    $3C2E   SE       VC, #2E         ; Skip if VC == 46
$F86    $91AD   UNKNOWN  $91AD           ; Unknown 9xxx instruction
$F88    $2BC0   CALL     $BC0            ; Call subroutine at BC0
$F8A    $A814   LD       I, $814         ; Load 814 into I
$F8C    $D4D1   DRW      V4, VD, #1      ; Draw 1-byte sprite at V4, VD
$F8E    $5E0F   UNKNOWN  $5E0F           ; Unknown 5xxx instruction
$F90    $BCC2   JP       V0, $CC2        ; Jump to V0 + CC2
$F92    $1EB4   JP       $EB4            ; Jump to EB4
$F94    $A292   LD       I, $292         ; Load 292 into I
$F96    $B500   JP       V0, $500        ; Jump to V0 + 500
$F98    $B8F3   JP       V0, $8F3        ; Jump to V0 + 8F3
$F9A    $8159   UNKNOWN  8159            ; Unknown 8xxx instruction
$F9C    $8D73   XOR      VD, V7          ; VD ^= V7
$F9E    $AF14   LD       I, $F14         ; Load F14 into I
$FA0    $1071   JP       $071            ; Jump to 071
$FA2    $2891   CALL     $891            ; Call subroutine at 891
$FA4    $5DC4   UNKNOWN  $5DC4           ; Unknown 5xxx instruction
$FA6    $6DF2   LD       VD, #F2         ; Load 242 into VD
$FA8    $D51C   DRW      V5, V1, #C      ; Draw 12-byte sprite at V5, V1
$FAA    $1BAE   JP       $BAE            ; Jump to BAE
$FAC    $D1DD   DRW      V1, VD, #D      ; Draw 13-byte sprite at V1, VD
$FAE    $E0BF   UNKNOWN  $E0BF           ; Unknown Exxx instruction
$FB0    $3205   SE       V2, #05         ; Skip if V2 == 5
$FB2    $402B   SNE      V0, #2B         ; Skip if V0 != 43
$FB4    $4F14   SNE      VF, #14         ; Skip if VF != 20
$FB6    $F4B1   UNKNOWN  F4B1            ; Unknown Fxxx instruction
$FB8    $108F   JP       $08F            ; Jump to 08F
$FBA    $C581   RND      V5, #81         ; V5 = random & 81
$FBC    $D92A   DRW      V9, V2, #A      ; Draw 10-byte sprite at V9, V2
$FBE    $A50B   LD       I, $50B         ; Load 50B into I
$FC0    $5FDC   UNKNOWN  $5FDC           ; Unknown 5xxx instruction
$FC2    $6D18   LD       VD, #18         ; Load 24 into VD
$FC4    $0D46   SYS      $D46            ; System call to D46
$FC6    $9C4C   UNKNOWN  $9C4C           ; Unknown 9xxx instruction
$FC8    $8454   ADD      V4, V5          ; V4 += V5, VF = carry
$FCA    $F292   UNKNOWN  F292            ; Unknown Fxxx instruction
$FCC    $FD40   UNKNOWN  FD40            ; Unknown Fxxx instruction
$FCE    $DC53   DRW      VC, V5, #3      ; Draw 3-byte sprite at VC, V5
$FD0    $BD44   JP       V0, $D44        ; Jump to V0 + D44
$FD2    $5335   UNKNOWN  $5335           ; Unknown 5xxx instruction
$FD4    $1994   JP       $994            ; Jump to 994
$FD6    $28F6   CALL     $8F6            ; Call subroutine at 8F6
$FD8    $333D   SE       V3, #3D         ; Skip if V3 == 61
$FDA    $C602   RND      V6, #02         ; V6 = random & 02
$FDC    $A086   LD       I, $086         ; Load 086 into I
$FDE    $F4F1   UNKNOWN  F4F1            ; Unknown Fxxx instruction
$FE0    $832E   SHL      V3              ; V3 <<= 1, VF = MSB
$FE2    $5F82   UNKNOWN  $5F82           ; Unknown 5xxx instruction
$FE4    $0CEC   SYS      $CEC            ; System call to CEC
$FE6    $45FC   SNE      V5, #FC         ; Skip if V5 != 252
$FE8    $1BA6   JP       $BA6            ; Jump to BA6
$FEA    $8F7D   UNKNOWN  8F7D            ; Unknown 8xxx instruction
$FEC    $2DA3   CALL     $DA3            ; Call subroutine at DA3
$FEE    $7EBB   ADD      VE, #BB         ; Add 187 to VE
$FF0    $C658   RND      V6, #58         ; V6 = random & 58
$FF2    $6067   LD       V0, #67         ; Load 103 into V0
$FF4    $7660   ADD      V6, #60         ; Add 96 to V6
$FF6    $382C   SE       V8, #2C         ; Skip if V8 == 44
$FF8    $C44B   RND      V4, #4B         ; V4 = random & 4B
$FFA    $06A5   SYS      $6A5            ; System call to 6A5
$FFC    $41A6   SNE      V1, #A6         ; Skip if V1 != 166
$FFE    $CE80   RND      VE, #80         ; VE = random & 80

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 468 (26.1%)
  LD      : 244 (13.6%)
  JP      : 230 (12.8%)
  RND     : 120 ( 6.7%)
  SNE     : 120 ( 6.7%)
  SE      : 117 ( 6.5%)
  DRW     : 114 ( 6.4%)
  CALL    : 112 ( 6.3%)
  SYS     : 106 ( 5.9%)
  ADD     : 101 ( 5.6%)
  SUB     :  12 ( 0.7%)
  OR      :  10 ( 0.6%)
  XOR     :  10 ( 0.6%)
  AND     :   9 ( 0.5%)
  SUBN    :   7 ( 0.4%)
  SHL     :   6 ( 0.3%)
  SHR     :   5 ( 0.3%)

Memory Operations: 345 (19.3%)
Arithmetic Operations: 149 (8.3%)
