
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B478D01_I23345_C31294_76508be2d788.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 478
Instance: 23345
Direction: ascending
Final Array: [55, 55, 55, 55, 55, 55, 55, 120]
Operations: R:0 W:7 C:0 S:193

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 139
Sort Array References:
  $200: LD [I], V0 ; Store V0-V0 at I
  $206: LD I, $CDC ; Load CDC into I
  $224: LD I, $0A1 ; Load 0A1 into I
  $23A: LD I, $8EC ; Load 8EC into I
  $312: LD I, $EB4 ; Load EB4 into I
  $348: LD I, $695 ; Load 695 into I
  $34E: LD I, $DBE ; Load DBE into I
  $356: LD I, $EA1 ; Load EA1 into I
  $382: LD I, $1E4 ; Load 1E4 into I
  $38A: LD I, $216 ; Load 216 into I
  $3AC: LD I, $AF2 ; Load AF2 into I
  $3E8: LD I, $82D ; Load 82D into I
  $3EE: LD I, $88C ; Load 88C into I
  $3F6: LD I, $D96 ; Load D96 into I
  $402: LD I, $6C4 ; Load 6C4 into I
  $410: LD I, $8DA ; Load 8DA into I
  $43A: LD I, $746 ; Load 746 into I
  $446: LD I, $6B1 ; Load 6B1 into I
  $474: LD I, $CC2 ; Load CC2 into I
  $492: LD I, $84C ; Load 84C into I
  $4B0: LD I, $576 ; Load 576 into I
  $4EC: LD I, $E08 ; Load E08 into I
  $506: LD I, $21F ; Load 21F into I
  $518: LD I, $DFC ; Load DFC into I
  $55C: LD I, $CFD ; Load CFD into I
  $560: LD I, $C3D ; Load C3D into I
  $59A: LD I, $6B5 ; Load 6B5 into I
  $5AE: LD I, $3CA ; Load 3CA into I
  $5DE: LD I, $DC6 ; Load DC6 into I
  $610: LD I, $BF5 ; Load BF5 into I
  $61A: LD I, $104 ; Load 104 into I
  $62A: LD I, $5C0 ; Load 5C0 into I
  $634: LD I, $BC8 ; Load BC8 into I
  $640: LD I, $6CF ; Load 6CF into I
  $656: LD I, $2F6 ; Load 2F6 into I
  $66A: LD I, $903 ; Load 903 into I
  $696: LD I, $E5B ; Load E5B into I
  $69A: LD I, $5A4 ; Load 5A4 into I
  $6BE: LD I, $771 ; Load 771 into I
  $6C8: LD I, $831 ; Load 831 into I
  $6E4: LD I, $064 ; Load 064 into I
  $6EC: LD I, $230 ; Load 230 into I
  $710: LD I, $E71 ; Load E71 into I
  $730: LD I, $E22 ; Load E22 into I
  $764: LD I, $DA4 ; Load DA4 into I
  $7A4: LD I, $095 ; Load 095 into I
  $7DA: LD I, $213 ; Load 213 into I
  $818: LD I, $F9F ; Load F9F into I
  $83C: LD I, $F3B ; Load F3B into I
  $848: LD I, $CE4 ; Load CE4 into I
  $84A: LD I, $B8C ; Load B8C into I
  $86E: LD I, $354 ; Load 354 into I
  $87C: LD I, $A80 ; Load A80 into I
  $886: LD I, $AAC ; Load AAC into I
  $888: LD I, $416 ; Load 416 into I
  $88C: LD I, $B85 ; Load B85 into I
  $898: LD I, $DDE ; Load DDE into I
  $8AA: LD I, $6D7 ; Load 6D7 into I
  $8B0: LD I, $639 ; Load 639 into I
  $8B8: LD I, $DAE ; Load DAE into I
  $8BC: LD I, $B41 ; Load B41 into I
  $8C4: LD I, $D3C ; Load D3C into I
  $8CC: LD I, $A5D ; Load A5D into I
  $91E: LD I, $3B0 ; Load 3B0 into I
  $92C: LD I, $FBF ; Load FBF into I
  $942: LD I, $7A4 ; Load 7A4 into I
  $948: LD I, $D63 ; Load D63 into I
  $954: LD I, $3F2 ; Load 3F2 into I
  $966: LD I, $345 ; Load 345 into I
  $98A: LD I, $A79 ; Load A79 into I
  $98C: LD I, $371 ; Load 371 into I
  $994: LD I, $7C9 ; Load 7C9 into I
  $9AC: LD I, $939 ; Load 939 into I
  $9B8: LD I, $B78 ; Load B78 into I
  $9E6: LD I, $09B ; Load 09B into I
  $9E8: LD I, $0F4 ; Load 0F4 into I
  $A0C: LD I, $8D2 ; Load 8D2 into I
  $A10: LD I, $C40 ; Load C40 into I
  $A1E: LD I, $5FD ; Load 5FD into I
  $A2C: LD I, $1CA ; Load 1CA into I
  $A2E: LD I, $103 ; Load 103 into I
  $A48: LD I, $27C ; Load 27C into I
  $A5C: LD I, $A4C ; Load A4C into I
  $A64: LD I, $F8D ; Load F8D into I
  $A82: LD I, $F84 ; Load F84 into I
  $A90: LD I, $219 ; Load 219 into I
  $AB4: LD I, $C3A ; Load C3A into I
  $B18: LD I, $418 ; Load 418 into I
  $B28: LD I, $B7D ; Load B7D into I
  $B30: LD I, $CE4 ; Load CE4 into I
  $B3C: LD I, $EEC ; Load EEC into I
  $B98: LD I, $D3E ; Load D3E into I
  $BBE: LD I, $20E ; Load 20E into I
  $BCA: LD I, $D11 ; Load D11 into I
  $BD2: LD I, $B29 ; Load B29 into I
  $BDA: LD I, $20B ; Load 20B into I
  $BE2: LD I, $4A2 ; Load 4A2 into I
  $BF8: LD I, $FF3 ; Load FF3 into I
  $C30: LD I, $CAD ; Load CAD into I
  $C40: LD I, $BD6 ; Load BD6 into I
  $C5C: LD I, $F1E ; Load F1E into I
  $C6E: LD I, $4AD ; Load 4AD into I
  $C7C: LD I, $B3F ; Load B3F into I
  $C84: LD I, $59B ; Load 59B into I
  $CB2: LD I, $17D ; Load 17D into I
  $CC2: LD I, $8FE ; Load 8FE into I
  $CCC: LD I, $E6C ; Load E6C into I
  $CE0: LD I, $42E ; Load 42E into I
  $CFC: LD I, $338 ; Load 338 into I
  $D1E: LD I, $BE6 ; Load BE6 into I
  $D32: LD I, $A48 ; Load A48 into I
  $D3C: LD I, $89A ; Load 89A into I
  $D3E: LD I, $2EB ; Load 2EB into I
  $D40: LD I, $315 ; Load 315 into I
  $D68: LD I, $A8C ; Load A8C into I
  $DA0: LD I, $752 ; Load 752 into I
  $DCA: LD I, $DD6 ; Load DD6 into I
  $DE2: LD I, $E6B ; Load E6B into I
  $DEE: LD I, $E8E ; Load E8E into I
  $E40: LD I, $EF2 ; Load EF2 into I
  $E62: LD I, $19F ; Load 19F into I
  $E68: LD I, $8FD ; Load 8FD into I
  $E78: LD I, $144 ; Load 144 into I
  $E86: LD I, $19F ; Load 19F into I
  $E94: LD I, $159 ; Load 159 into I
  $EAE: LD I, $5D0 ; Load 5D0 into I
  $EFC: LD I, $17F ; Load 17F into I
  $EFE: LD I, $411 ; Load 411 into I
  $F0E: LD I, $04A ; Load 04A into I
  $F10: LD I, $F92 ; Load F92 into I
  $F32: LD I, $4A1 ; Load 4A1 into I
  $F68: LD I, $656 ; Load 656 into I
  $F6C: LD I, $92F ; Load 92F into I
  $F70: LD I, $25C ; Load 25C into I
  $F74: LD I, $AE7 ; Load AE7 into I
  $F7A: LD I, $E2D ; Load E2D into I
  $FA8: LD I, $B06 ; Load B06 into I
  $FB4: LD I, $2D4 ; Load 2D4 into I
  $FD6: LD I, $0D3 ; Load 0D3 into I

CONTROL FLOW ANALYSIS:
Jumps: 196
Calls: 110
Branches: 324
Loops: 118
Loop Structures:
  $202 -> $0C0 (backward jump)
  $33A -> $1E5 (backward jump)
  $3BE -> $28C (backward jump)
  $408 -> $22F (backward jump)
  $40E -> $00D (backward jump)
  $428 -> $001 (backward jump)
  $4AC -> $087 (backward jump)
  $4E8 -> $401 (backward jump)
  $4F4 -> $42F (backward jump)
  $58C -> $51D (backward jump)
  $59E -> $06C (backward jump)
  $5C8 -> $31D (backward jump)
  $5D0 -> $0E5 (backward jump)
  $5FC -> $422 (backward jump)
  $608 -> $585 (backward jump)
  $64E -> $611 (backward jump)
  $684 -> $288 (backward jump)
  $6BC -> $16D (backward jump)
  $6DA -> $69B (backward jump)
  $73C -> $2DB (backward jump)
  $760 -> $32D (backward jump)
  $786 -> $1D5 (backward jump)
  $7AE -> $442 (backward jump)
  $7E4 -> $17F (backward jump)
  $7E8 -> $134 (backward jump)
  $816 -> $255 (backward jump)
  $880 -> $4E6 (backward jump)
  $8A2 -> $182 (backward jump)
  $8B4 -> $1B0 (backward jump)
  $8E4 -> $50E (backward jump)
  $900 -> $12A (backward jump)
  $90C -> $0CC (backward jump)
  $91A -> $144 (backward jump)
  $93A -> $4CC (backward jump)
  $93E -> $15F (backward jump)
  $9A4 -> $198 (backward jump)
  $9B2 -> $565 (backward jump)
  $9B6 -> $6FC (backward jump)
  $9D4 -> $70F (backward jump)
  $9F2 -> $093 (backward jump)
  $9F4 -> $388 (backward jump)
  $A00 -> $4A0 (backward jump)
  $A02 -> $071 (backward jump)
  $A4C -> $198 (backward jump)
  $A7A -> $A18 (backward jump)
  $A7C -> $A0D (backward jump)
  $AD4 -> $4EC (backward jump)
  $AD6 -> $28C (backward jump)
  $ADC -> $513 (backward jump)
  $AE8 -> $41A (backward jump)
  $AEE -> $822 (backward jump)
  $AF2 -> $A3E (backward jump)
  $B10 -> $A43 (backward jump)
  $B16 -> $36E (backward jump)
  $B1C -> $8B8 (backward jump)
  $B58 -> $A87 (backward jump)
  $B60 -> $8A4 (backward jump)
  $BBA -> $0BC (backward jump)
  $BC4 -> $97C (backward jump)
  $BC6 -> $461 (backward jump)
  $BD6 -> $4B4 (backward jump)
  $BE0 -> $AC7 (backward jump)
  $BEA -> $4F5 (backward jump)
  $BF0 -> $4BF (backward jump)
  $BF2 -> $AE3 (backward jump)
  $C02 -> $83A (backward jump)
  $C26 -> $59F (backward jump)
  $C34 -> $AF2 (backward jump)
  $C38 -> $73F (backward jump)
  $C56 -> $359 (backward jump)
  $C64 -> $181 (backward jump)
  $C76 -> $036 (backward jump)
  $C7A -> $A04 (backward jump)
  $CA6 -> $70A (backward jump)
  $CDE -> $64E (backward jump)
  $CEA -> $2CB (backward jump)
  $D12 -> $1AF (backward jump)
  $D16 -> $914 (backward jump)
  $D30 -> $D16 (backward jump)
  $D86 -> $088 (backward jump)
  $D8A -> $54D (backward jump)
  $DA4 -> $32A (backward jump)
  $DB4 -> $3CC (backward jump)
  $DC2 -> $5D4 (backward jump)
  $DEC -> $041 (backward jump)
  $E00 -> $1E8 (backward jump)
  $E0C -> $1C9 (backward jump)
  $E1C -> $4EF (backward jump)
  $E2E -> $4EA (backward jump)
  $E3A -> $997 (backward jump)
  $E44 -> $056 (backward jump)
  $E4C -> $6FA (backward jump)
  $E84 -> $510 (backward jump)
  $E8C -> $928 (backward jump)
  $EA4 -> $067 (backward jump)
  $EB8 -> $751 (backward jump)
  $ECE -> $AE3 (backward jump)
  $ED2 -> $690 (backward jump)
  $ED4 -> $9CF (backward jump)
  $EF4 -> $60A (backward jump)
  $F14 -> $341 (backward jump)
  $F28 -> $CF0 (backward jump)
  $F2E -> $36E (backward jump)
  $F54 -> $174 (backward jump)
  $F58 -> $21B (backward jump)
  $F7E -> $798 (backward jump)
  $F86 -> $1C1 (backward jump)
  $F88 -> $607 (backward jump)
  $F8A -> $7F2 (backward jump)
  $F9C -> $2B7 (backward jump)
  $FAA -> $E80 (backward jump)
  $FB0 -> $748 (backward jump)
  $FC6 -> $626 (backward jump)
  $FD0 -> $EA2 (backward jump)
  $FD8 -> $D8D (backward jump)
  $FDE -> $EBB (backward jump)
  $FF4 -> $7A6 (backward jump)
  $FFE -> $EC9 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $F055   LD       [I], V0         ; Store V0-V0 at I
$202    $10C0   JP       $0C0            ; Jump to 0C0
$204    $99B9   UNKNOWN  $99B9           ; Unknown 9xxx instruction
$206    $ACDC   LD       I, $CDC         ; Load CDC into I
$208    $D459   DRW      V4, V5, #9      ; Draw 9-byte sprite at V4, V5
$20A    $6E42   LD       VE, #42         ; Load 66 into VE
$20C    $1840   JP       $840            ; Jump to 840
$20E    $1607   JP       $607            ; Jump to 607
$210    $5E2D   UNKNOWN  $5E2D           ; Unknown 5xxx instruction
$212    $3BF1   SE       VB, #F1         ; Skip if VB == 241
$214    $33B4   SE       V3, #B4         ; Skip if V3 == 180
$216    $1C92   JP       $C92            ; Jump to C92
$218    $4680   SNE      V6, #80         ; Skip if V6 != 128
$21A    $2031   CALL     $031            ; Call subroutine at 031
$21C    $2D49   CALL     $D49            ; Call subroutine at D49
$21E    $3D1A   SE       VD, #1A         ; Skip if VD == 26
$220    $73BB   ADD      V3, #BB         ; Add 187 to V3
$222    $3229   SE       V2, #29         ; Skip if V2 == 41
$224    $A0A1   LD       I, $0A1         ; Load 0A1 into I
$226    $8AFF   UNKNOWN  8AFF            ; Unknown 8xxx instruction
$228    $8E15   SUB      VE, V1          ; VE -= V1, VF = !borrow
$22A    $4C95   SNE      VC, #95         ; Skip if VC != 149
$22C    $324B   SE       V2, #4B         ; Skip if V2 == 75
$22E    $EAF6   UNKNOWN  $EAF6           ; Unknown Exxx instruction
$230    $023C   SYS      $23C            ; System call to 23C
$232    $9BC6   UNKNOWN  $9BC6           ; Unknown 9xxx instruction
$234    $48CE   SNE      V8, #CE         ; Skip if V8 != 206
$236    $7D3C   ADD      VD, #3C         ; Add 60 to VD
$238    $6232   LD       V2, #32         ; Load 50 into V2
$23A    $A8EC   LD       I, $8EC         ; Load 8EC into I
$23C    $7023   ADD      V0, #23         ; Add 35 to V0
$23E    $857D   UNKNOWN  857D            ; Unknown 8xxx instruction
$240    $6D3A   LD       VD, #3A         ; Load 58 into VD
$242    $5B8B   UNKNOWN  $5B8B           ; Unknown 5xxx instruction
$244    $9637   UNKNOWN  $9637           ; Unknown 9xxx instruction
$246    $3737   SE       V7, #37         ; Skip if V7 == 55
$248    $3737   SE       V7, #37         ; Skip if V7 == 55
$24A    $3737   SE       V7, #37         ; Skip if V7 == 55
$24C    $3737   SE       V7, #37         ; Skip if V7 == 55
$24E    $3737   SE       V7, #37         ; Skip if V7 == 55
$250    $3737   SE       V7, #37         ; Skip if V7 == 55
$252    $3737   SE       V7, #37         ; Skip if V7 == 55
$254    $3737   SE       V7, #37         ; Skip if V7 == 55
$256    $3737   SE       V7, #37         ; Skip if V7 == 55
$258    $3737   SE       V7, #37         ; Skip if V7 == 55
$25A    $3737   SE       V7, #37         ; Skip if V7 == 55
$25C    $3737   SE       V7, #37         ; Skip if V7 == 55
$25E    $3737   SE       V7, #37         ; Skip if V7 == 55
$260    $3737   SE       V7, #37         ; Skip if V7 == 55
$262    $3737   SE       V7, #37         ; Skip if V7 == 55
$264    $3737   SE       V7, #37         ; Skip if V7 == 55
$266    $3737   SE       V7, #37         ; Skip if V7 == 55
$268    $3737   SE       V7, #37         ; Skip if V7 == 55
$26A    $3737   SE       V7, #37         ; Skip if V7 == 55
$26C    $3737   SE       V7, #37         ; Skip if V7 == 55
$26E    $3737   SE       V7, #37         ; Skip if V7 == 55
$270    $3737   SE       V7, #37         ; Skip if V7 == 55
$272    $3737   SE       V7, #37         ; Skip if V7 == 55
$274    $3737   SE       V7, #37         ; Skip if V7 == 55
$276    $3737   SE       V7, #37         ; Skip if V7 == 55
$278    $3737   SE       V7, #37         ; Skip if V7 == 55
$27A    $3737   SE       V7, #37         ; Skip if V7 == 55
$27C    $3737   SE       V7, #37         ; Skip if V7 == 55
$27E    $3737   SE       V7, #37         ; Skip if V7 == 55
$280    $3737   SE       V7, #37         ; Skip if V7 == 55
$282    $3737   SE       V7, #37         ; Skip if V7 == 55
$284    $3737   SE       V7, #37         ; Skip if V7 == 55
$286    $3737   SE       V7, #37         ; Skip if V7 == 55
$288    $3737   SE       V7, #37         ; Skip if V7 == 55
$28A    $3737   SE       V7, #37         ; Skip if V7 == 55
$28C    $3737   SE       V7, #37         ; Skip if V7 == 55
$28E    $3737   SE       V7, #37         ; Skip if V7 == 55
$290    $3737   SE       V7, #37         ; Skip if V7 == 55
$292    $3737   SE       V7, #37         ; Skip if V7 == 55
$294    $3737   SE       V7, #37         ; Skip if V7 == 55
$296    $3737   SE       V7, #37         ; Skip if V7 == 55
$298    $3737   SE       V7, #37         ; Skip if V7 == 55
$29A    $3737   SE       V7, #37         ; Skip if V7 == 55
$29C    $3737   SE       V7, #37         ; Skip if V7 == 55
$29E    $3737   SE       V7, #37         ; Skip if V7 == 55
$2A0    $3737   SE       V7, #37         ; Skip if V7 == 55
$2A2    $3737   SE       V7, #37         ; Skip if V7 == 55
$2A4    $3737   SE       V7, #37         ; Skip if V7 == 55
$2A6    $3737   SE       V7, #37         ; Skip if V7 == 55
$2A8    $3737   SE       V7, #37         ; Skip if V7 == 55
$2AA    $3737   SE       V7, #37         ; Skip if V7 == 55
$2AC    $3737   SE       V7, #37         ; Skip if V7 == 55
$2AE    $3737   SE       V7, #37         ; Skip if V7 == 55
$2B0    $3737   SE       V7, #37         ; Skip if V7 == 55
$2B2    $3737   SE       V7, #37         ; Skip if V7 == 55
$2B4    $3737   SE       V7, #37         ; Skip if V7 == 55
$2B6    $3737   SE       V7, #37         ; Skip if V7 == 55
$2B8    $3737   SE       V7, #37         ; Skip if V7 == 55
$2BA    $3737   SE       V7, #37         ; Skip if V7 == 55
$2BC    $3737   SE       V7, #37         ; Skip if V7 == 55
$2BE    $3737   SE       V7, #37         ; Skip if V7 == 55
$2C0    $3737   SE       V7, #37         ; Skip if V7 == 55
$2C2    $3737   SE       V7, #37         ; Skip if V7 == 55
$2C4    $3737   SE       V7, #37         ; Skip if V7 == 55
$2C6    $3737   SE       V7, #37         ; Skip if V7 == 55
$2C8    $3737   SE       V7, #37         ; Skip if V7 == 55
$2CA    $3737   SE       V7, #37         ; Skip if V7 == 55
$2CC    $3737   SE       V7, #37         ; Skip if V7 == 55
$2CE    $3737   SE       V7, #37         ; Skip if V7 == 55
$2D0    $3737   SE       V7, #37         ; Skip if V7 == 55
$2D2    $3737   SE       V7, #37         ; Skip if V7 == 55
$2D4    $3737   SE       V7, #37         ; Skip if V7 == 55
$2D6    $3737   SE       V7, #37         ; Skip if V7 == 55
$2D8    $3737   SE       V7, #37         ; Skip if V7 == 55
$2DA    $3737   SE       V7, #37         ; Skip if V7 == 55
$2DC    $3737   SE       V7, #37         ; Skip if V7 == 55
$2DE    $3737   SE       V7, #37         ; Skip if V7 == 55
$2E0    $3737   SE       V7, #37         ; Skip if V7 == 55
$2E2    $3737   SE       V7, #37         ; Skip if V7 == 55
$2E4    $3737   SE       V7, #37         ; Skip if V7 == 55
$2E6    $3737   SE       V7, #37         ; Skip if V7 == 55
$2E8    $3737   SE       V7, #37         ; Skip if V7 == 55
$2EA    $3737   SE       V7, #37         ; Skip if V7 == 55
$2EC    $3737   SE       V7, #37         ; Skip if V7 == 55
$2EE    $3737   SE       V7, #37         ; Skip if V7 == 55
$2F0    $3737   SE       V7, #37         ; Skip if V7 == 55
$2F2    $3737   SE       V7, #37         ; Skip if V7 == 55
$2F4    $3737   SE       V7, #37         ; Skip if V7 == 55
$2F6    $3737   SE       V7, #37         ; Skip if V7 == 55
$2F8    $3737   SE       V7, #37         ; Skip if V7 == 55
$2FA    $3737   SE       V7, #37         ; Skip if V7 == 55
$2FC    $3737   SE       V7, #37         ; Skip if V7 == 55
$2FE    $3737   SE       V7, #37         ; Skip if V7 == 55
$300    $3737   SE       V7, #37         ; Skip if V7 == 55
$302    $3737   SE       V7, #37         ; Skip if V7 == 55
$304    $3737   SE       V7, #37         ; Skip if V7 == 55
$306    $3778   SE       V7, #78         ; Skip if V7 == 120
$308    $5694   UNKNOWN  $5694           ; Unknown 5xxx instruction
$30A    $0F8C   SYS      $F8C            ; System call to F8C
$30C    $1F15   JP       $F15            ; Jump to F15
$30E    $E28B   UNKNOWN  $E28B           ; Unknown Exxx instruction
$310    $7A81   ADD      VA, #81         ; Add 129 to VA
$312    $AEB4   LD       I, $EB4         ; Load EB4 into I
$314    $D333   DRW      V3, V3, #3      ; Draw 3-byte sprite at V3, V3
$316    $45AC   SNE      V5, #AC         ; Skip if V5 != 172
$318    $01F2   SYS      $1F2            ; System call to 1F2
$31A    $E4BB   UNKNOWN  $E4BB           ; Unknown Exxx instruction
$31C    $3D31   SE       VD, #31         ; Skip if VD == 49
$31E    $2BD5   CALL     $BD5            ; Call subroutine at BD5
$320    $D7C5   DRW      V7, VC, #5      ; Draw 5-byte sprite at V7, VC
$322    $6ACC   LD       VA, #CC         ; Load 204 into VA
$324    $13B0   JP       $3B0            ; Jump to 3B0
$326    $30D8   SE       V0, #D8         ; Skip if V0 == 216
$328    $8B04   ADD      VB, V0          ; VB += V0, VF = carry
$32A    $20A0   CALL     $0A0            ; Call subroutine at 0A0
$32C    $06D7   SYS      $6D7            ; System call to 6D7
$32E    $0BD7   SYS      $BD7            ; System call to BD7
$330    $7915   ADD      V9, #15         ; Add 21 to V9
$332    $E2E2   UNKNOWN  $E2E2           ; Unknown Exxx instruction
$334    $97F5   UNKNOWN  $97F5           ; Unknown 9xxx instruction
$336    $4A83   SNE      VA, #83         ; Skip if VA != 131
$338    $1E51   JP       $E51            ; Jump to E51
$33A    $B1E5   JP       V0, $1E5        ; Jump to V0 + 1E5
$33C    $C087   RND      V0, #87         ; V0 = random & 87
$33E    $62C1   LD       V2, #C1         ; Load 193 into V2
$340    $13D2   JP       $3D2            ; Jump to 3D2
$342    $2956   CALL     $956            ; Call subroutine at 956
$344    $8E54   ADD      VE, V5          ; VE += V5, VF = carry
$346    $420D   SNE      V2, #0D         ; Skip if V2 != 13
$348    $A695   LD       I, $695         ; Load 695 into I
$34A    $96E6   UNKNOWN  $96E6           ; Unknown 9xxx instruction
$34C    $E51A   UNKNOWN  $E51A           ; Unknown Exxx instruction
$34E    $ADBE   LD       I, $DBE         ; Load DBE into I
$350    $54C4   UNKNOWN  $54C4           ; Unknown 5xxx instruction
$352    $02B7   SYS      $2B7            ; System call to 2B7
$354    $7FFA   ADD      VF, #FA         ; Add 250 to VF
$356    $AEA1   LD       I, $EA1         ; Load EA1 into I
$358    $3F1E   SE       VF, #1E         ; Skip if VF == 30
$35A    $B41A   JP       V0, $41A        ; Jump to V0 + 41A
$35C    $20BA   CALL     $0BA            ; Call subroutine at 0BA
$35E    $2C0A   CALL     $C0A            ; Call subroutine at C0A
$360    $5A0B   UNKNOWN  $5A0B           ; Unknown 5xxx instruction
$362    $0E2B   SYS      $E2B            ; System call to E2B
$364    $809A   UNKNOWN  809A            ; Unknown 8xxx instruction
$366    $EF04   UNKNOWN  $EF04           ; Unknown Exxx instruction
$368    $534B   UNKNOWN  $534B           ; Unknown 5xxx instruction
$36A    $9200   SNE      V2, V0          ; Skip if V2 != V0
$36C    $5891   UNKNOWN  $5891           ; Unknown 5xxx instruction
$36E    $C6AB   RND      V6, #AB         ; V6 = random & AB
$370    $813C   UNKNOWN  813C            ; Unknown 8xxx instruction
$372    $B57B   JP       V0, $57B        ; Jump to V0 + 57B
$374    $8DD7   SUBN     VD, VD          ; VD = VD - VD, VF = !borrow
$376    $0B5B   SYS      $B5B            ; System call to B5B
$378    $F42E   UNKNOWN  F42E            ; Unknown Fxxx instruction
$37A    $4677   SNE      V6, #77         ; Skip if V6 != 119
$37C    $22DA   CALL     $2DA            ; Call subroutine at 2DA
$37E    $2A7C   CALL     $A7C            ; Call subroutine at A7C
$380    $DCC7   DRW      VC, VC, #7      ; Draw 7-byte sprite at VC, VC
$382    $A1E4   LD       I, $1E4         ; Load 1E4 into I
$384    $0B47   SYS      $B47            ; System call to B47
$386    $3A38   SE       VA, #38         ; Skip if VA == 56
$388    $8BA9   UNKNOWN  8BA9            ; Unknown 8xxx instruction
$38A    $A216   LD       I, $216         ; Load 216 into I
$38C    $0CD7   SYS      $CD7            ; System call to CD7
$38E    $0B8E   SYS      $B8E            ; System call to B8E
$390    $CECC   RND      VE, #CC         ; VE = random & CC
$392    $057F   SYS      $57F            ; System call to 57F
$394    $F664   UNKNOWN  F664            ; Unknown Fxxx instruction
$396    $FAFB   UNKNOWN  FAFB            ; Unknown Fxxx instruction
$398    $CF58   RND      VF, #58         ; VF = random & 58
$39A    $DD37   DRW      VD, V3, #7      ; Draw 7-byte sprite at VD, V3
$39C    $5B7C   UNKNOWN  $5B7C           ; Unknown 5xxx instruction
$39E    $F680   UNKNOWN  F680            ; Unknown Fxxx instruction
$3A0    $54C5   UNKNOWN  $54C5           ; Unknown 5xxx instruction
$3A2    $1857   JP       $857            ; Jump to 857
$3A4    $26D4   CALL     $6D4            ; Call subroutine at 6D4
$3A6    $ECDA   UNKNOWN  $ECDA           ; Unknown Exxx instruction
$3A8    $C43D   RND      V4, #3D         ; V4 = random & 3D
$3AA    $FC1C   UNKNOWN  FC1C            ; Unknown Fxxx instruction
$3AC    $AAF2   LD       I, $AF2         ; Load AF2 into I
$3AE    $EEE4   UNKNOWN  $EEE4           ; Unknown Exxx instruction
$3B0    $FA42   UNKNOWN  FA42            ; Unknown Fxxx instruction
$3B2    $0567   SYS      $567            ; System call to 567
$3B4    $84C0   LD       V4, VC          ; V4 = VC
$3B6    $25B4   CALL     $5B4            ; Call subroutine at 5B4
$3B8    $2BF2   CALL     $BF2            ; Call subroutine at BF2
$3BA    $683D   LD       V8, #3D         ; Load 61 into V8
$3BC    $BEBA   JP       V0, $EBA        ; Jump to V0 + EBA
$3BE    $128C   JP       $28C            ; Jump to 28C
$3C0    $267B   CALL     $67B            ; Call subroutine at 67B
$3C2    $6AC6   LD       VA, #C6         ; Load 198 into VA
$3C4    $E5F1   UNKNOWN  $E5F1           ; Unknown Exxx instruction
$3C6    $038C   SYS      $38C            ; System call to 38C
$3C8    $FEF1   UNKNOWN  FEF1            ; Unknown Fxxx instruction
$3CA    $5DA3   UNKNOWN  $5DA3           ; Unknown 5xxx instruction
$3CC    $845A   UNKNOWN  845A            ; Unknown 8xxx instruction
$3CE    $91DA   UNKNOWN  $91DA           ; Unknown 9xxx instruction
$3D0    $05B6   SYS      $5B6            ; System call to 5B6
$3D2    $F890   UNKNOWN  F890            ; Unknown Fxxx instruction
$3D4    $B62C   JP       V0, $62C        ; Jump to V0 + 62C
$3D6    $9D2F   UNKNOWN  $9D2F           ; Unknown 9xxx instruction
$3D8    $1DC9   JP       $DC9            ; Jump to DC9
$3DA    $555D   UNKNOWN  $555D           ; Unknown 5xxx instruction
$3DC    $B9D9   JP       V0, $9D9        ; Jump to V0 + 9D9
$3DE    $B52A   JP       V0, $52A        ; Jump to V0 + 52A
$3E0    $0354   SYS      $354            ; System call to 354
$3E2    $4AFF   SNE      VA, #FF         ; Skip if VA != 255
$3E4    $9FB9   UNKNOWN  $9FB9           ; Unknown 9xxx instruction
$3E6    $5537   UNKNOWN  $5537           ; Unknown 5xxx instruction
$3E8    $A82D   LD       I, $82D         ; Load 82D into I
$3EA    $4596   SNE      V5, #96         ; Skip if V5 != 150
$3EC    $99E9   UNKNOWN  $99E9           ; Unknown 9xxx instruction
$3EE    $A88C   LD       I, $88C         ; Load 88C into I
$3F0    $7A05   ADD      VA, #05         ; Add 5 to VA
$3F2    $6D87   LD       VD, #87         ; Load 135 into VD
$3F4    $E82B   UNKNOWN  $E82B           ; Unknown Exxx instruction
$3F6    $AD96   LD       I, $D96         ; Load D96 into I
$3F8    $D96F   DRW      V9, V6, #F      ; Draw 15-byte sprite at V9, V6
$3FA    $46A8   SNE      V6, #A8         ; Skip if V6 != 168
$3FC    $4AED   SNE      VA, #ED         ; Skip if VA != 237
$3FE    $CBC5   RND      VB, #C5         ; VB = random & C5
$400    $FA31   UNKNOWN  FA31            ; Unknown Fxxx instruction
$402    $A6C4   LD       I, $6C4         ; Load 6C4 into I
$404    $56B0   SE       V6, VB          ; Skip if V6 == VB
$406    $CDC8   RND      VD, #C8         ; VD = random & C8
$408    $B22F   JP       V0, $22F        ; Jump to V0 + 22F
$40A    $FE28   UNKNOWN  FE28            ; Unknown Fxxx instruction
$40C    $1D57   JP       $D57            ; Jump to D57
$40E    $B00D   JP       V0, $00D        ; Jump to V0 + 00D
$410    $A8DA   LD       I, $8DA         ; Load 8DA into I
$412    $75AB   ADD      V5, #AB         ; Add 171 to V5
$414    $32CF   SE       V2, #CF         ; Skip if V2 == 207
$416    $B64F   JP       V0, $64F        ; Jump to V0 + 64F
$418    $811F   UNKNOWN  811F            ; Unknown 8xxx instruction
$41A    $224E   CALL     $24E            ; Call subroutine at 24E
$41C    $1685   JP       $685            ; Jump to 685
$41E    $B616   JP       V0, $616        ; Jump to V0 + 616
$420    $BCE7   JP       V0, $CE7        ; Jump to V0 + CE7
$422    $0B5F   SYS      $B5F            ; System call to B5F
$424    $6246   LD       V2, #46         ; Load 70 into V2
$426    $3BEE   SE       VB, #EE         ; Skip if VB == 238
$428    $1001   JP       $001            ; Jump to 001
$42A    $6D50   LD       VD, #50         ; Load 80 into VD
$42C    $B890   JP       V0, $890        ; Jump to V0 + 890
$42E    $164A   JP       $64A            ; Jump to 64A
$430    $8428   UNKNOWN  8428            ; Unknown 8xxx instruction
$432    $452B   SNE      V5, #2B         ; Skip if V5 != 43
$434    $C1D4   RND      V1, #D4         ; V1 = random & D4
$436    $4028   SNE      V0, #28         ; Skip if V0 != 40
$438    $9F1E   UNKNOWN  $9F1E           ; Unknown 9xxx instruction
$43A    $A746   LD       I, $746         ; Load 746 into I
$43C    $662C   LD       V6, #2C         ; Load 44 into V6
$43E    $D6E9   DRW      V6, VE, #9      ; Draw 9-byte sprite at V6, VE
$440    $DB93   DRW      VB, V9, #3      ; Draw 3-byte sprite at VB, V9
$442    $4661   SNE      V6, #61         ; Skip if V6 != 97
$444    $C391   RND      V3, #91         ; V3 = random & 91
$446    $A6B1   LD       I, $6B1         ; Load 6B1 into I
$448    $2D43   CALL     $D43            ; Call subroutine at D43
$44A    $95AC   UNKNOWN  $95AC           ; Unknown 9xxx instruction
$44C    $8AA0   LD       VA, VA          ; VA = VA
$44E    $49F5   SNE      V9, #F5         ; Skip if V9 != 245
$450    $DA86   DRW      VA, V8, #6      ; Draw 6-byte sprite at VA, V8
$452    $4763   SNE      V7, #63         ; Skip if V7 != 99
$454    $F1F2   UNKNOWN  F1F2            ; Unknown Fxxx instruction
$456    $530B   UNKNOWN  $530B           ; Unknown 5xxx instruction
$458    $EB16   UNKNOWN  $EB16           ; Unknown Exxx instruction
$45A    $3034   SE       V0, #34         ; Skip if V0 == 52
$45C    $220F   CALL     $20F            ; Call subroutine at 20F
$45E    $0839   SYS      $839            ; System call to 839
$460    $7BFA   ADD      VB, #FA         ; Add 250 to VB
$462    $9D8D   UNKNOWN  $9D8D           ; Unknown 9xxx instruction
$464    $04BD   SYS      $4BD            ; System call to 4BD
$466    $5052   UNKNOWN  $5052           ; Unknown 5xxx instruction
$468    $4710   SNE      V7, #10         ; Skip if V7 != 16
$46A    $6F13   LD       VF, #13         ; Load 19 into VF
$46C    $4E91   SNE      VE, #91         ; Skip if VE != 145
$46E    $7970   ADD      V9, #70         ; Add 112 to V9
$470    $2758   CALL     $758            ; Call subroutine at 758
$472    $826B   UNKNOWN  826B            ; Unknown 8xxx instruction
$474    $ACC2   LD       I, $CC2         ; Load CC2 into I
$476    $74F1   ADD      V4, #F1         ; Add 241 to V4
$478    $C608   RND      V6, #08         ; V6 = random & 08
$47A    $2CC5   CALL     $CC5            ; Call subroutine at CC5
$47C    $FE9C   UNKNOWN  FE9C            ; Unknown Fxxx instruction
$47E    $4BF2   SNE      VB, #F2         ; Skip if VB != 242
$480    $D749   DRW      V7, V4, #9      ; Draw 9-byte sprite at V7, V4
$482    $9B31   UNKNOWN  $9B31           ; Unknown 9xxx instruction
$484    $CBA7   RND      VB, #A7         ; VB = random & A7
$486    $7EC9   ADD      VE, #C9         ; Add 201 to VE
$488    $05C3   SYS      $5C3            ; System call to 5C3
$48A    $593F   UNKNOWN  $593F           ; Unknown 5xxx instruction
$48C    $512C   UNKNOWN  $512C           ; Unknown 5xxx instruction
$48E    $8F0D   UNKNOWN  8F0D            ; Unknown 8xxx instruction
$490    $0701   SYS      $701            ; System call to 701
$492    $A84C   LD       I, $84C         ; Load 84C into I
$494    $58BB   UNKNOWN  $58BB           ; Unknown 5xxx instruction
$496    $66D1   LD       V6, #D1         ; Load 209 into V6
$498    $45F2   SNE      V5, #F2         ; Skip if V5 != 242
$49A    $6298   LD       V2, #98         ; Load 152 into V2
$49C    $65AB   LD       V5, #AB         ; Load 171 into V5
$49E    $6B4A   LD       VB, #4A         ; Load 74 into VB
$4A0    $0F04   SYS      $F04            ; System call to F04
$4A2    $D697   DRW      V6, V9, #7      ; Draw 7-byte sprite at V6, V9
$4A4    $7408   ADD      V4, #08         ; Add 8 to V4
$4A6    $6FE9   LD       VF, #E9         ; Load 233 into VF
$4A8    $0D73   SYS      $D73            ; System call to D73
$4AA    $0E0B   SYS      $E0B            ; System call to E0B
$4AC    $1087   JP       $087            ; Jump to 087
$4AE    $5FC7   UNKNOWN  $5FC7           ; Unknown 5xxx instruction
$4B0    $A576   LD       I, $576         ; Load 576 into I
$4B2    $1C34   JP       $C34            ; Jump to C34
$4B4    $5DD6   UNKNOWN  $5DD6           ; Unknown 5xxx instruction
$4B6    $912C   UNKNOWN  $912C           ; Unknown 9xxx instruction
$4B8    $D4C0   DRW      V4, VC, #0      ; Draw 0-byte sprite at V4, VC
$4BA    $D4AA   DRW      V4, VA, #A      ; Draw 10-byte sprite at V4, VA
$4BC    $DD63   DRW      VD, V6, #3      ; Draw 3-byte sprite at VD, V6
$4BE    $CCAE   RND      VC, #AE         ; VC = random & AE
$4C0    $48BC   SNE      V8, #BC         ; Skip if V8 != 188
$4C2    $B5CC   JP       V0, $5CC        ; Jump to V0 + 5CC
$4C4    $8557   SUBN     V5, V5          ; V5 = V5 - V5, VF = !borrow
$4C6    $40F0   SNE      V0, #F0         ; Skip if V0 != 240
$4C8    $9D21   UNKNOWN  $9D21           ; Unknown 9xxx instruction
$4CA    $ECC7   UNKNOWN  $ECC7           ; Unknown Exxx instruction
$4CC    $07F6   SYS      $7F6            ; System call to 7F6
$4CE    $BEA3   JP       V0, $EA3        ; Jump to V0 + EA3
$4D0    $C6A3   RND      V6, #A3         ; V6 = random & A3
$4D2    $FBC2   UNKNOWN  FBC2            ; Unknown Fxxx instruction
$4D4    $81F6   SHR      V1              ; V1 >>= 1, VF = LSB
$4D6    $17FA   JP       $7FA            ; Jump to 7FA
$4D8    $714C   ADD      V1, #4C         ; Add 76 to V1
$4DA    $57F1   UNKNOWN  $57F1           ; Unknown 5xxx instruction
$4DC    $06B4   SYS      $6B4            ; System call to 6B4
$4DE    $1DE0   JP       $DE0            ; Jump to DE0
$4E0    $9B4C   UNKNOWN  $9B4C           ; Unknown 9xxx instruction
$4E2    $69B2   LD       V9, #B2         ; Load 178 into V9
$4E4    $5B6C   UNKNOWN  $5B6C           ; Unknown 5xxx instruction
$4E6    $3FE1   SE       VF, #E1         ; Skip if VF == 225
$4E8    $1401   JP       $401            ; Jump to 401
$4EA    $075A   SYS      $75A            ; System call to 75A
$4EC    $AE08   LD       I, $E08         ; Load E08 into I
$4EE    $6F52   LD       VF, #52         ; Load 82 into VF
$4F0    $2F98   CALL     $F98            ; Call subroutine at F98
$4F2    $C51B   RND      V5, #1B         ; V5 = random & 1B
$4F4    $142F   JP       $42F            ; Jump to 42F
$4F6    $BB7A   JP       V0, $B7A        ; Jump to V0 + B7A
$4F8    $EC6B   UNKNOWN  $EC6B           ; Unknown Exxx instruction
$4FA    $2444   CALL     $444            ; Call subroutine at 444
$4FC    $6673   LD       V6, #73         ; Load 115 into V6
$4FE    $010B   SYS      $10B            ; System call to 10B
$500    $9FBF   UNKNOWN  $9FBF           ; Unknown 9xxx instruction
$502    $175B   JP       $75B            ; Jump to 75B
$504    $FD16   UNKNOWN  FD16            ; Unknown Fxxx instruction
$506    $A21F   LD       I, $21F         ; Load 21F into I
$508    $BE0F   JP       V0, $E0F        ; Jump to V0 + E0F
$50A    $395B   SE       V9, #5B         ; Skip if V9 == 91
$50C    $67E2   LD       V7, #E2         ; Load 226 into V7
$50E    $1AB8   JP       $AB8            ; Jump to AB8
$510    $85C2   AND      V5, VC          ; V5 &= VC
$512    $53D5   UNKNOWN  $53D5           ; Unknown 5xxx instruction
$514    $0736   SYS      $736            ; System call to 736
$516    $F1F0   UNKNOWN  F1F0            ; Unknown Fxxx instruction
$518    $ADFC   LD       I, $DFC         ; Load DFC into I
$51A    $304D   SE       V0, #4D         ; Skip if V0 == 77
$51C    $340E   SE       V4, #0E         ; Skip if V4 == 14
$51E    $5BFA   UNKNOWN  $5BFA           ; Unknown 5xxx instruction
$520    $F3E4   UNKNOWN  F3E4            ; Unknown Fxxx instruction
$522    $59AB   UNKNOWN  $59AB           ; Unknown 5xxx instruction
$524    $C07E   RND      V0, #7E         ; V0 = random & 7E
$526    $DF61   DRW      VF, V6, #1      ; Draw 1-byte sprite at VF, V6
$528    $1705   JP       $705            ; Jump to 705
$52A    $F7A6   UNKNOWN  F7A6            ; Unknown Fxxx instruction
$52C    $8650   LD       V6, V5          ; V6 = V5
$52E    $DC6D   DRW      VC, V6, #D      ; Draw 13-byte sprite at VC, V6
$530    $1983   JP       $983            ; Jump to 983
$532    $5F05   UNKNOWN  $5F05           ; Unknown 5xxx instruction
$534    $9953   UNKNOWN  $9953           ; Unknown 9xxx instruction
$536    $E75A   UNKNOWN  $E75A           ; Unknown Exxx instruction
$538    $2055   CALL     $055            ; Call subroutine at 055
$53A    $26B4   CALL     $6B4            ; Call subroutine at 6B4
$53C    $3436   SE       V4, #36         ; Skip if V4 == 54
$53E    $D6E8   DRW      V6, VE, #8      ; Draw 8-byte sprite at V6, VE
$540    $D00A   DRW      V0, V0, #A      ; Draw 10-byte sprite at V0, V0
$542    $09D6   SYS      $9D6            ; System call to 9D6
$544    $2555   CALL     $555            ; Call subroutine at 555
$546    $71B8   ADD      V1, #B8         ; Add 184 to V1
$548    $07D1   SYS      $7D1            ; System call to 7D1
$54A    $058C   SYS      $58C            ; System call to 58C
$54C    $8B8E   SHL      VB              ; VB <<= 1, VF = MSB
$54E    $0F8E   SYS      $F8E            ; System call to F8E
$550    $82EC   UNKNOWN  82EC            ; Unknown 8xxx instruction
$552    $7763   ADD      V7, #63         ; Add 99 to V7
$554    $598D   UNKNOWN  $598D           ; Unknown 5xxx instruction
$556    $0622   SYS      $622            ; System call to 622
$558    $954B   UNKNOWN  $954B           ; Unknown 9xxx instruction
$55A    $0CED   SYS      $CED            ; System call to CED
$55C    $ACFD   LD       I, $CFD         ; Load CFD into I
$55E    $67AE   LD       V7, #AE         ; Load 174 into V7
$560    $AC3D   LD       I, $C3D         ; Load C3D into I
$562    $E70A   UNKNOWN  $E70A           ; Unknown Exxx instruction
$564    $5DD4   UNKNOWN  $5DD4           ; Unknown 5xxx instruction
$566    $0EBD   SYS      $EBD            ; System call to EBD
$568    $9AAB   UNKNOWN  $9AAB           ; Unknown 9xxx instruction
$56A    $7B45   ADD      VB, #45         ; Add 69 to VB
$56C    $6049   LD       V0, #49         ; Load 73 into V0
$56E    $7066   ADD      V0, #66         ; Add 102 to V0
$570    $FD3C   UNKNOWN  FD3C            ; Unknown Fxxx instruction
$572    $29A9   CALL     $9A9            ; Call subroutine at 9A9
$574    $25BA   CALL     $5BA            ; Call subroutine at 5BA
$576    $0DC2   SYS      $DC2            ; System call to DC2
$578    $41C9   SNE      V1, #C9         ; Skip if V1 != 201
$57A    $C73A   RND      V7, #3A         ; V7 = random & 3A
$57C    $EE42   UNKNOWN  $EE42           ; Unknown Exxx instruction
$57E    $83C1   OR       V3, VC          ; V3 |= VC
$580    $CAF2   RND      VA, #F2         ; VA = random & F2
$582    $8CFA   UNKNOWN  8CFA            ; Unknown 8xxx instruction
$584    $53D3   UNKNOWN  $53D3           ; Unknown 5xxx instruction
$586    $81C2   AND      V1, VC          ; V1 &= VC
$588    $BB5C   JP       V0, $B5C        ; Jump to V0 + B5C
$58A    $64B5   LD       V4, #B5         ; Load 181 into V4
$58C    $B51D   JP       V0, $51D        ; Jump to V0 + 51D
$58E    $F1AC   UNKNOWN  F1AC            ; Unknown Fxxx instruction
$590    $E66B   UNKNOWN  $E66B           ; Unknown Exxx instruction
$592    $58BF   UNKNOWN  $58BF           ; Unknown 5xxx instruction
$594    $6F1B   LD       VF, #1B         ; Load 27 into VF
$596    $FD8E   UNKNOWN  FD8E            ; Unknown Fxxx instruction
$598    $57E9   UNKNOWN  $57E9           ; Unknown 5xxx instruction
$59A    $A6B5   LD       I, $6B5         ; Load 6B5 into I
$59C    $538A   UNKNOWN  $538A           ; Unknown 5xxx instruction
$59E    $106C   JP       $06C            ; Jump to 06C
$5A0    $01B6   SYS      $1B6            ; System call to 1B6
$5A2    $0404   SYS      $404            ; System call to 404
$5A4    $EB42   UNKNOWN  $EB42           ; Unknown Exxx instruction
$5A6    $37FB   SE       V7, #FB         ; Skip if V7 == 251
$5A8    $2A0C   CALL     $A0C            ; Call subroutine at A0C
$5AA    $2D76   CALL     $D76            ; Call subroutine at D76
$5AC    $EBE5   UNKNOWN  $EBE5           ; Unknown Exxx instruction
$5AE    $A3CA   LD       I, $3CA         ; Load 3CA into I
$5B0    $ED9D   UNKNOWN  $ED9D           ; Unknown Exxx instruction
$5B2    $5247   UNKNOWN  $5247           ; Unknown 5xxx instruction
$5B4    $74EA   ADD      V4, #EA         ; Add 234 to V4
$5B6    $00D6   SYS      $0D6            ; System call to 0D6
$5B8    $F0B9   UNKNOWN  F0B9            ; Unknown Fxxx instruction
$5BA    $DDDC   DRW      VD, VD, #C      ; Draw 12-byte sprite at VD, VD
$5BC    $FE64   UNKNOWN  FE64            ; Unknown Fxxx instruction
$5BE    $267E   CALL     $67E            ; Call subroutine at 67E
$5C0    $3A6D   SE       VA, #6D         ; Skip if VA == 109
$5C2    $9E3D   UNKNOWN  $9E3D           ; Unknown 9xxx instruction
$5C4    $BA88   JP       V0, $A88        ; Jump to V0 + A88
$5C6    $C326   RND      V3, #26         ; V3 = random & 26
$5C8    $131D   JP       $31D            ; Jump to 31D
$5CA    $1D53   JP       $D53            ; Jump to D53
$5CC    $3554   SE       V5, #54         ; Skip if V5 == 84
$5CE    $FBF0   UNKNOWN  FBF0            ; Unknown Fxxx instruction
$5D0    $10E5   JP       $0E5            ; Jump to 0E5
$5D2    $9B35   UNKNOWN  $9B35           ; Unknown 9xxx instruction
$5D4    $D7A3   DRW      V7, VA, #3      ; Draw 3-byte sprite at V7, VA
$5D6    $BA21   JP       V0, $A21        ; Jump to V0 + A21
$5D8    $B852   JP       V0, $852        ; Jump to V0 + 852
$5DA    $1DAE   JP       $DAE            ; Jump to DAE
$5DC    $D466   DRW      V4, V6, #6      ; Draw 6-byte sprite at V4, V6
$5DE    $ADC6   LD       I, $DC6         ; Load DC6 into I
$5E0    $92D0   SNE      V2, VD          ; Skip if V2 != VD
$5E2    $FBD4   UNKNOWN  FBD4            ; Unknown Fxxx instruction
$5E4    $499B   SNE      V9, #9B         ; Skip if V9 != 155
$5E6    $3AC5   SE       VA, #C5         ; Skip if VA == 197
$5E8    $C774   RND      V7, #74         ; V7 = random & 74
$5EA    $FF8A   UNKNOWN  FF8A            ; Unknown Fxxx instruction
$5EC    $398E   SE       V9, #8E         ; Skip if V9 == 142
$5EE    $D3E8   DRW      V3, VE, #8      ; Draw 8-byte sprite at V3, VE
$5F0    $EE44   UNKNOWN  $EE44           ; Unknown Exxx instruction
$5F2    $F700   UNKNOWN  F700            ; Unknown Fxxx instruction
$5F4    $D4F2   DRW      V4, VF, #2      ; Draw 2-byte sprite at V4, VF
$5F6    $5DF3   UNKNOWN  $5DF3           ; Unknown 5xxx instruction
$5F8    $C201   RND      V2, #01         ; V2 = random & 01
$5FA    $93BE   UNKNOWN  $93BE           ; Unknown 9xxx instruction
$5FC    $1422   JP       $422            ; Jump to 422
$5FE    $4616   SNE      V6, #16         ; Skip if V6 != 22
$600    $5C9F   UNKNOWN  $5C9F           ; Unknown 5xxx instruction
$602    $5C56   UNKNOWN  $5C56           ; Unknown 5xxx instruction
$604    $56EB   UNKNOWN  $56EB           ; Unknown 5xxx instruction
$606    $34D4   SE       V4, #D4         ; Skip if V4 == 212
$608    $B585   JP       V0, $585        ; Jump to V0 + 585
$60A    $9E3C   UNKNOWN  $9E3C           ; Unknown 9xxx instruction
$60C    $8A46   SHR      VA              ; VA >>= 1, VF = LSB
$60E    $6342   LD       V3, #42         ; Load 66 into V3
$610    $ABF5   LD       I, $BF5         ; Load BF5 into I
$612    $D1AA   DRW      V1, VA, #A      ; Draw 10-byte sprite at V1, VA
$614    $EA84   UNKNOWN  $EA84           ; Unknown Exxx instruction
$616    $6054   LD       V0, #54         ; Load 84 into V0
$618    $43DB   SNE      V3, #DB         ; Skip if V3 != 219
$61A    $A104   LD       I, $104         ; Load 104 into I
$61C    $9698   UNKNOWN  $9698           ; Unknown 9xxx instruction
$61E    $D1D1   DRW      V1, VD, #1      ; Draw 1-byte sprite at V1, VD
$620    $F40F   UNKNOWN  F40F            ; Unknown Fxxx instruction
$622    $473E   SNE      V7, #3E         ; Skip if V7 != 62
$624    $F1E7   UNKNOWN  F1E7            ; Unknown Fxxx instruction
$626    $6646   LD       V6, #46         ; Load 70 into V6
$628    $1EC1   JP       $EC1            ; Jump to EC1
$62A    $A5C0   LD       I, $5C0         ; Load 5C0 into I
$62C    $2E8C   CALL     $E8C            ; Call subroutine at E8C
$62E    $9FB1   UNKNOWN  $9FB1           ; Unknown 9xxx instruction
$630    $4C14   SNE      VC, #14         ; Skip if VC != 20
$632    $F897   UNKNOWN  F897            ; Unknown Fxxx instruction
$634    $ABC8   LD       I, $BC8         ; Load BC8 into I
$636    $39A8   SE       V9, #A8         ; Skip if V9 == 168
$638    $4A6A   SNE      VA, #6A         ; Skip if VA != 106
$63A    $6613   LD       V6, #13         ; Load 19 into V6
$63C    $25FB   CALL     $5FB            ; Call subroutine at 5FB
$63E    $0BBC   SYS      $BBC            ; System call to BBC
$640    $A6CF   LD       I, $6CF         ; Load 6CF into I
$642    $048E   SYS      $48E            ; System call to 48E
$644    $7ADB   ADD      VA, #DB         ; Add 219 to VA
$646    $7CE5   ADD      VC, #E5         ; Add 229 to VC
$648    $4541   SNE      V5, #41         ; Skip if V5 != 65
$64A    $EE74   UNKNOWN  $EE74           ; Unknown Exxx instruction
$64C    $E783   UNKNOWN  $E783           ; Unknown Exxx instruction
$64E    $B611   JP       V0, $611        ; Jump to V0 + 611
$650    $7C9F   ADD      VC, #9F         ; Add 159 to VC
$652    $5A2F   UNKNOWN  $5A2F           ; Unknown 5xxx instruction
$654    $9075   UNKNOWN  $9075           ; Unknown 9xxx instruction
$656    $A2F6   LD       I, $2F6         ; Load 2F6 into I
$658    $276A   CALL     $76A            ; Call subroutine at 76A
$65A    $BE36   JP       V0, $E36        ; Jump to V0 + E36
$65C    $0C9B   SYS      $C9B            ; System call to C9B
$65E    $D30D   DRW      V3, V0, #D      ; Draw 13-byte sprite at V3, V0
$660    $794E   ADD      V9, #4E         ; Add 78 to V9
$662    $2EBC   CALL     $EBC            ; Call subroutine at EBC
$664    $5A3B   UNKNOWN  $5A3B           ; Unknown 5xxx instruction
$666    $0527   SYS      $527            ; System call to 527
$668    $DA85   DRW      VA, V8, #5      ; Draw 5-byte sprite at VA, V8
$66A    $A903   LD       I, $903         ; Load 903 into I
$66C    $9522   UNKNOWN  $9522           ; Unknown 9xxx instruction
$66E    $69A8   LD       V9, #A8         ; Load 168 into V9
$670    $2C07   CALL     $C07            ; Call subroutine at C07
$672    $67BA   LD       V7, #BA         ; Load 186 into V7
$674    $44C5   SNE      V4, #C5         ; Skip if V4 != 197
$676    $C43C   RND      V4, #3C         ; V4 = random & 3C
$678    $D1CF   DRW      V1, VC, #F      ; Draw 15-byte sprite at V1, VC
$67A    $3C26   SE       VC, #26         ; Skip if VC == 38
$67C    $C972   RND      V9, #72         ; V9 = random & 72
$67E    $65BE   LD       V5, #BE         ; Load 190 into V5
$680    $9682   UNKNOWN  $9682           ; Unknown 9xxx instruction
$682    $72C8   ADD      V2, #C8         ; Add 200 to V2
$684    $1288   JP       $288            ; Jump to 288
$686    $6663   LD       V6, #63         ; Load 99 into V6
$688    $5C7A   UNKNOWN  $5C7A           ; Unknown 5xxx instruction
$68A    $2A4B   CALL     $A4B            ; Call subroutine at A4B
$68C    $7D92   ADD      VD, #92         ; Add 146 to VD
$68E    $7498   ADD      V4, #98         ; Add 152 to V4
$690    $6486   LD       V4, #86         ; Load 134 into V4
$692    $375A   SE       V7, #5A         ; Skip if V7 == 90
$694    $4972   SNE      V9, #72         ; Skip if V9 != 114
$696    $AE5B   LD       I, $E5B         ; Load E5B into I
$698    $CF2B   RND      VF, #2B         ; VF = random & 2B
$69A    $A5A4   LD       I, $5A4         ; Load 5A4 into I
$69C    $46B6   SNE      V6, #B6         ; Skip if V6 != 182
$69E    $394F   SE       V9, #4F         ; Skip if V9 == 79
$6A0    $C87A   RND      V8, #7A         ; V8 = random & 7A
$6A2    $7DFB   ADD      VD, #FB         ; Add 251 to VD
$6A4    $8519   UNKNOWN  8519            ; Unknown 8xxx instruction
$6A6    $60F0   LD       V0, #F0         ; Load 240 into V0
$6A8    $563C   UNKNOWN  $563C           ; Unknown 5xxx instruction
$6AA    $D0EB   DRW      V0, VE, #B      ; Draw 11-byte sprite at V0, VE
$6AC    $0E2A   SYS      $E2A            ; System call to E2A
$6AE    $D3AA   DRW      V3, VA, #A      ; Draw 10-byte sprite at V3, VA
$6B0    $C017   RND      V0, #17         ; V0 = random & 17
$6B2    $4074   SNE      V0, #74         ; Skip if V0 != 116
$6B4    $FDD3   UNKNOWN  FDD3            ; Unknown Fxxx instruction
$6B6    $7D3D   ADD      VD, #3D         ; Add 61 to VD
$6B8    $6285   LD       V2, #85         ; Load 133 into V2
$6BA    $5007   UNKNOWN  $5007           ; Unknown 5xxx instruction
$6BC    $116D   JP       $16D            ; Jump to 16D
$6BE    $A771   LD       I, $771         ; Load 771 into I
$6C0    $C914   RND      V9, #14         ; V9 = random & 14
$6C2    $6575   LD       V5, #75         ; Load 117 into V5
$6C4    $57C9   UNKNOWN  $57C9           ; Unknown 5xxx instruction
$6C6    $F1F1   UNKNOWN  F1F1            ; Unknown Fxxx instruction
$6C8    $A831   LD       I, $831         ; Load 831 into I
$6CA    $D52D   DRW      V5, V2, #D      ; Draw 13-byte sprite at V5, V2
$6CC    $1985   JP       $985            ; Jump to 985
$6CE    $4FBF   SNE      VF, #BF         ; Skip if VF != 191
$6D0    $7B34   ADD      VB, #34         ; Add 52 to VB
$6D2    $0483   SYS      $483            ; System call to 483
$6D4    $67A5   LD       V7, #A5         ; Load 165 into V7
$6D6    $E88D   UNKNOWN  $E88D           ; Unknown Exxx instruction
$6D8    $920F   UNKNOWN  $920F           ; Unknown 9xxx instruction
$6DA    $169B   JP       $69B            ; Jump to 69B
$6DC    $483F   SNE      V8, #3F         ; Skip if V8 != 63
$6DE    $8189   UNKNOWN  8189            ; Unknown 8xxx instruction
$6E0    $F1F9   UNKNOWN  F1F9            ; Unknown Fxxx instruction
$6E2    $2C68   CALL     $C68            ; Call subroutine at C68
$6E4    $A064   LD       I, $064         ; Load 064 into I
$6E6    $6B5C   LD       VB, #5C         ; Load 92 into VB
$6E8    $706C   ADD      V0, #6C         ; Add 108 to V0
$6EA    $858B   UNKNOWN  858B            ; Unknown 8xxx instruction
$6EC    $A230   LD       I, $230         ; Load 230 into I
$6EE    $3160   SE       V1, #60         ; Skip if V1 == 96
$6F0    $6708   LD       V7, #08         ; Load 8 into V7
$6F2    $F453   UNKNOWN  F453            ; Unknown Fxxx instruction
$6F4    $1F53   JP       $F53            ; Jump to F53
$6F6    $40D3   SNE      V0, #D3         ; Skip if V0 != 211
$6F8    $6FD6   LD       VF, #D6         ; Load 214 into VF
$6FA    $4454   SNE      V4, #54         ; Skip if V4 != 84
$6FC    $5CDB   UNKNOWN  $5CDB           ; Unknown 5xxx instruction
$6FE    $312A   SE       V1, #2A         ; Skip if V1 == 42
$700    $FACC   UNKNOWN  FACC            ; Unknown Fxxx instruction
$702    $CE4F   RND      VE, #4F         ; VE = random & 4F
$704    $E8B9   UNKNOWN  $E8B9           ; Unknown Exxx instruction
$706    $5021   UNKNOWN  $5021           ; Unknown 5xxx instruction
$708    $0DCE   SYS      $DCE            ; System call to DCE
$70A    $C69D   RND      V6, #9D         ; V6 = random & 9D
$70C    $4D23   SNE      VD, #23         ; Skip if VD != 35
$70E    $8C33   XOR      VC, V3          ; VC ^= V3
$710    $AE71   LD       I, $E71         ; Load E71 into I
$712    $550B   UNKNOWN  $550B           ; Unknown 5xxx instruction
$714    $255C   CALL     $55C            ; Call subroutine at 55C
$716    $5EF9   UNKNOWN  $5EF9           ; Unknown 5xxx instruction
$718    $BCEA   JP       V0, $CEA        ; Jump to V0 + CEA
$71A    $92F6   UNKNOWN  $92F6           ; Unknown 9xxx instruction
$71C    $F75D   UNKNOWN  F75D            ; Unknown Fxxx instruction
$71E    $55E6   UNKNOWN  $55E6           ; Unknown 5xxx instruction
$720    $3A59   SE       VA, #59         ; Skip if VA == 89
$722    $5260   SE       V2, V6          ; Skip if V2 == V6
$724    $D4FC   DRW      V4, VF, #C      ; Draw 12-byte sprite at V4, VF
$726    $F931   UNKNOWN  F931            ; Unknown Fxxx instruction
$728    $DD4F   DRW      VD, V4, #F      ; Draw 15-byte sprite at VD, V4
$72A    $69E7   LD       V9, #E7         ; Load 231 into V9
$72C    $CFE6   RND      VF, #E6         ; VF = random & E6
$72E    $0E85   SYS      $E85            ; System call to E85
$730    $AE22   LD       I, $E22         ; Load E22 into I
$732    $C0E2   RND      V0, #E2         ; V0 = random & E2
$734    $611E   LD       V1, #1E         ; Load 30 into V1
$736    $EF8A   UNKNOWN  $EF8A           ; Unknown Exxx instruction
$738    $8768   UNKNOWN  8768            ; Unknown 8xxx instruction
$73A    $6812   LD       V8, #12         ; Load 18 into V8
$73C    $12DB   JP       $2DB            ; Jump to 2DB
$73E    $4BBF   SNE      VB, #BF         ; Skip if VB != 191
$740    $D587   DRW      V5, V8, #7      ; Draw 7-byte sprite at V5, V8
$742    $BA45   JP       V0, $A45        ; Jump to V0 + A45
$744    $763E   ADD      V6, #3E         ; Add 62 to V6
$746    $3C61   SE       VC, #61         ; Skip if VC == 97
$748    $C33E   RND      V3, #3E         ; V3 = random & 3E
$74A    $61C4   LD       V1, #C4         ; Load 196 into V1
$74C    $F5F7   UNKNOWN  F5F7            ; Unknown Fxxx instruction
$74E    $D4A6   DRW      V4, VA, #6      ; Draw 6-byte sprite at V4, VA
$750    $D6CF   DRW      V6, VC, #F      ; Draw 15-byte sprite at V6, VC
$752    $2413   CALL     $413            ; Call subroutine at 413
$754    $5157   UNKNOWN  $5157           ; Unknown 5xxx instruction
$756    $C8F9   RND      V8, #F9         ; V8 = random & F9
$758    $2D0D   CALL     $D0D            ; Call subroutine at D0D
$75A    $F6EF   UNKNOWN  F6EF            ; Unknown Fxxx instruction
$75C    $9236   UNKNOWN  $9236           ; Unknown 9xxx instruction
$75E    $E5E6   UNKNOWN  $E5E6           ; Unknown Exxx instruction
$760    $B32D   JP       V0, $32D        ; Jump to V0 + 32D
$762    $1765   JP       $765            ; Jump to 765
$764    $ADA4   LD       I, $DA4         ; Load DA4 into I
$766    $2ACE   CALL     $ACE            ; Call subroutine at ACE
$768    $28F5   CALL     $8F5            ; Call subroutine at 8F5
$76A    $59E4   UNKNOWN  $59E4           ; Unknown 5xxx instruction
$76C    $578F   UNKNOWN  $578F           ; Unknown 5xxx instruction
$76E    $4DDF   SNE      VD, #DF         ; Skip if VD != 223
$770    $34FC   SE       V4, #FC         ; Skip if V4 == 252
$772    $67D8   LD       V7, #D8         ; Load 216 into V7
$774    $5DAE   UNKNOWN  $5DAE           ; Unknown 5xxx instruction
$776    $7EC0   ADD      VE, #C0         ; Add 192 to VE
$778    $5055   UNKNOWN  $5055           ; Unknown 5xxx instruction
$77A    $DC90   DRW      VC, V9, #0      ; Draw 0-byte sprite at VC, V9
$77C    $F6B2   UNKNOWN  F6B2            ; Unknown Fxxx instruction
$77E    $0FBC   SYS      $FBC            ; System call to FBC
$780    $5241   UNKNOWN  $5241           ; Unknown 5xxx instruction
$782    $3992   SE       V9, #92         ; Skip if V9 == 146
$784    $3418   SE       V4, #18         ; Skip if V4 == 24
$786    $B1D5   JP       V0, $1D5        ; Jump to V0 + 1D5
$788    $4A82   SNE      VA, #82         ; Skip if VA != 130
$78A    $3700   SE       V7, #00         ; Skip if V7 == 0
$78C    $595D   UNKNOWN  $595D           ; Unknown 5xxx instruction
$78E    $2D83   CALL     $D83            ; Call subroutine at D83
$790    $B79C   JP       V0, $79C        ; Jump to V0 + 79C
$792    $DEDD   DRW      VE, VD, #D      ; Draw 13-byte sprite at VE, VD
$794    $3738   SE       V7, #38         ; Skip if V7 == 56
$796    $7ABF   ADD      VA, #BF         ; Add 191 to VA
$798    $7970   ADD      V9, #70         ; Add 112 to V9
$79A    $67EE   LD       V7, #EE         ; Load 238 into V7
$79C    $0106   SYS      $106            ; System call to 106
$79E    $51B0   SE       V1, VB          ; Skip if V1 == VB
$7A0    $71F4   ADD      V1, #F4         ; Add 244 to V1
$7A2    $BD45   JP       V0, $D45        ; Jump to V0 + D45
$7A4    $A095   LD       I, $095         ; Load 095 into I
$7A6    $99C2   UNKNOWN  $99C2           ; Unknown 9xxx instruction
$7A8    $7F73   ADD      VF, #73         ; Add 115 to VF
$7AA    $FCC2   UNKNOWN  FCC2            ; Unknown Fxxx instruction
$7AC    $060D   SYS      $60D            ; System call to 60D
$7AE    $1442   JP       $442            ; Jump to 442
$7B0    $E194   UNKNOWN  $E194           ; Unknown Exxx instruction
$7B2    $9A42   UNKNOWN  $9A42           ; Unknown 9xxx instruction
$7B4    $2125   CALL     $125            ; Call subroutine at 125
$7B6    $BA05   JP       V0, $A05        ; Jump to V0 + A05
$7B8    $0835   SYS      $835            ; System call to 835
$7BA    $5AC5   UNKNOWN  $5AC5           ; Unknown 5xxx instruction
$7BC    $8412   AND      V4, V1          ; V4 &= V1
$7BE    $20FA   CALL     $0FA            ; Call subroutine at 0FA
$7C0    $5377   UNKNOWN  $5377           ; Unknown 5xxx instruction
$7C2    $F362   UNKNOWN  F362            ; Unknown Fxxx instruction
$7C4    $68EA   LD       V8, #EA         ; Load 234 into V8
$7C6    $6C1B   LD       VC, #1B         ; Load 27 into VC
$7C8    $CD1F   RND      VD, #1F         ; VD = random & 1F
$7CA    $DAB3   DRW      VA, VB, #3      ; Draw 3-byte sprite at VA, VB
$7CC    $D8DF   DRW      V8, VD, #F      ; Draw 15-byte sprite at V8, VD
$7CE    $D3E5   DRW      V3, VE, #5      ; Draw 5-byte sprite at V3, VE
$7D0    $8482   AND      V4, V8          ; V4 &= V8
$7D2    $CAAC   RND      VA, #AC         ; VA = random & AC
$7D4    $98EF   UNKNOWN  $98EF           ; Unknown 9xxx instruction
$7D6    $27B2   CALL     $7B2            ; Call subroutine at 7B2
$7D8    $9232   UNKNOWN  $9232           ; Unknown 9xxx instruction
$7DA    $A213   LD       I, $213         ; Load 213 into I
$7DC    $EDAF   UNKNOWN  $EDAF           ; Unknown Exxx instruction
$7DE    $2BFC   CALL     $BFC            ; Call subroutine at BFC
$7E0    $E999   UNKNOWN  $E999           ; Unknown Exxx instruction
$7E2    $E681   UNKNOWN  $E681           ; Unknown Exxx instruction
$7E4    $B17F   JP       V0, $17F        ; Jump to V0 + 17F
$7E6    $015A   SYS      $15A            ; System call to 15A
$7E8    $B134   JP       V0, $134        ; Jump to V0 + 134
$7EA    $FBA1   UNKNOWN  FBA1            ; Unknown Fxxx instruction
$7EC    $6C34   LD       VC, #34         ; Load 52 into VC
$7EE    $34CE   SE       V4, #CE         ; Skip if V4 == 206
$7F0    $04BA   SYS      $4BA            ; System call to 4BA
$7F2    $46F3   SNE      V6, #F3         ; Skip if V6 != 243
$7F4    $F4ED   UNKNOWN  F4ED            ; Unknown Fxxx instruction
$7F6    $BB8E   JP       V0, $B8E        ; Jump to V0 + B8E
$7F8    $0FC1   SYS      $FC1            ; System call to FC1
$7FA    $E699   UNKNOWN  $E699           ; Unknown Exxx instruction
$7FC    $B8E6   JP       V0, $8E6        ; Jump to V0 + 8E6
$7FE    $6474   LD       V4, #74         ; Load 116 into V4
$800    $1F4B   JP       $F4B            ; Jump to F4B
$802    $3914   SE       V9, #14         ; Skip if V9 == 20
$804    $9878   UNKNOWN  $9878           ; Unknown 9xxx instruction
$806    $422D   SNE      V2, #2D         ; Skip if V2 != 45
$808    $1D2D   JP       $D2D            ; Jump to D2D
$80A    $30E1   SE       V0, #E1         ; Skip if V0 == 225
$80C    $850E   SHL      V5              ; V5 <<= 1, VF = MSB
$80E    $C79C   RND      V7, #9C         ; V7 = random & 9C
$810    $EC50   UNKNOWN  $EC50           ; Unknown Exxx instruction
$812    $982C   UNKNOWN  $982C           ; Unknown 9xxx instruction
$814    $43FD   SNE      V3, #FD         ; Skip if V3 != 253
$816    $B255   JP       V0, $255        ; Jump to V0 + 255
$818    $AF9F   LD       I, $F9F         ; Load F9F into I
$81A    $E6B7   UNKNOWN  $E6B7           ; Unknown Exxx instruction
$81C    $6AD8   LD       VA, #D8         ; Load 216 into VA
$81E    $241A   CALL     $41A            ; Call subroutine at 41A
$820    $BD26   JP       V0, $D26        ; Jump to V0 + D26
$822    $0ABD   SYS      $ABD            ; System call to ABD
$824    $EBBE   UNKNOWN  $EBBE           ; Unknown Exxx instruction
$826    $BB19   JP       V0, $B19        ; Jump to V0 + B19
$828    $0A09   SYS      $A09            ; System call to A09
$82A    $EB69   UNKNOWN  $EB69           ; Unknown Exxx instruction
$82C    $522B   UNKNOWN  $522B           ; Unknown 5xxx instruction
$82E    $64F5   LD       V4, #F5         ; Load 245 into V4
$830    $240C   CALL     $40C            ; Call subroutine at 40C
$832    $3806   SE       V8, #06         ; Skip if V8 == 6
$834    $EDC0   UNKNOWN  $EDC0           ; Unknown Exxx instruction
$836    $269E   CALL     $69E            ; Call subroutine at 69E
$838    $D9FC   DRW      V9, VF, #C      ; Draw 12-byte sprite at V9, VF
$83A    $2277   CALL     $277            ; Call subroutine at 277
$83C    $AF3B   LD       I, $F3B         ; Load F3B into I
$83E    $80B6   SHR      V0              ; V0 >>= 1, VF = LSB
$840    $4762   SNE      V7, #62         ; Skip if V7 != 98
$842    $5239   UNKNOWN  $5239           ; Unknown 5xxx instruction
$844    $0286   SYS      $286            ; System call to 286
$846    $C975   RND      V9, #75         ; V9 = random & 75
$848    $ACE4   LD       I, $CE4         ; Load CE4 into I
$84A    $AB8C   LD       I, $B8C         ; Load B8C into I
$84C    $4F03   SNE      VF, #03         ; Skip if VF != 3
$84E    $5BED   UNKNOWN  $5BED           ; Unknown 5xxx instruction
$850    $06C1   SYS      $6C1            ; System call to 6C1
$852    $6B04   LD       VB, #04         ; Load 4 into VB
$854    $6646   LD       V6, #46         ; Load 70 into V6
$856    $4A29   SNE      VA, #29         ; Skip if VA != 41
$858    $F46E   UNKNOWN  F46E            ; Unknown Fxxx instruction
$85A    $CA17   RND      VA, #17         ; VA = random & 17
$85C    $D207   DRW      V2, V0, #7      ; Draw 7-byte sprite at V2, V0
$85E    $FE83   UNKNOWN  FE83            ; Unknown Fxxx instruction
$860    $CACC   RND      VA, #CC         ; VA = random & CC
$862    $FC52   UNKNOWN  FC52            ; Unknown Fxxx instruction
$864    $564A   UNKNOWN  $564A           ; Unknown 5xxx instruction
$866    $3AE9   SE       VA, #E9         ; Skip if VA == 233
$868    $E02E   UNKNOWN  $E02E           ; Unknown Exxx instruction
$86A    $0A2F   SYS      $A2F            ; System call to A2F
$86C    $583A   UNKNOWN  $583A           ; Unknown 5xxx instruction
$86E    $A354   LD       I, $354         ; Load 354 into I
$870    $57EB   UNKNOWN  $57EB           ; Unknown 5xxx instruction
$872    $E2A1   SKNP     V2              ; Skip if key V2 not pressed
$874    $4268   SNE      V2, #68         ; Skip if V2 != 104
$876    $7DF4   ADD      VD, #F4         ; Add 244 to VD
$878    $854C   UNKNOWN  854C            ; Unknown 8xxx instruction
$87A    $2B4B   CALL     $B4B            ; Call subroutine at B4B
$87C    $AA80   LD       I, $A80         ; Load A80 into I
$87E    $7B56   ADD      VB, #56         ; Add 86 to VB
$880    $B4E6   JP       V0, $4E6        ; Jump to V0 + 4E6
$882    $3B7B   SE       VB, #7B         ; Skip if VB == 123
$884    $04D3   SYS      $4D3            ; System call to 4D3
$886    $AAAC   LD       I, $AAC         ; Load AAC into I
$888    $A416   LD       I, $416         ; Load 416 into I
$88A    $25D2   CALL     $5D2            ; Call subroutine at 5D2
$88C    $AB85   LD       I, $B85         ; Load B85 into I
$88E    $0E21   SYS      $E21            ; System call to E21
$890    $6501   LD       V5, #01         ; Load 1 into V5
$892    $6E5E   LD       VE, #5E         ; Load 94 into VE
$894    $36CE   SE       V6, #CE         ; Skip if V6 == 206
$896    $BDBB   JP       V0, $DBB        ; Jump to V0 + DBB
$898    $ADDE   LD       I, $DDE         ; Load DDE into I
$89A    $020A   SYS      $20A            ; System call to 20A
$89C    $80D2   AND      V0, VD          ; V0 &= VD
$89E    $198F   JP       $98F            ; Jump to 98F
$8A0    $8151   OR       V1, V5          ; V1 |= V5
$8A2    $1182   JP       $182            ; Jump to 182
$8A4    $5B2B   UNKNOWN  $5B2B           ; Unknown 5xxx instruction
$8A6    $4A9B   SNE      VA, #9B         ; Skip if VA != 155
$8A8    $0F36   SYS      $F36            ; System call to F36
$8AA    $A6D7   LD       I, $6D7         ; Load 6D7 into I
$8AC    $3E24   SE       VE, #24         ; Skip if VE == 36
$8AE    $2441   CALL     $441            ; Call subroutine at 441
$8B0    $A639   LD       I, $639         ; Load 639 into I
$8B2    $6B55   LD       VB, #55         ; Load 85 into VB
$8B4    $B1B0   JP       V0, $1B0        ; Jump to V0 + 1B0
$8B6    $986C   UNKNOWN  $986C           ; Unknown 9xxx instruction
$8B8    $ADAE   LD       I, $DAE         ; Load DAE into I
$8BA    $3F72   SE       VF, #72         ; Skip if VF == 114
$8BC    $AB41   LD       I, $B41         ; Load B41 into I
$8BE    $3946   SE       V9, #46         ; Skip if V9 == 70
$8C0    $7948   ADD      V9, #48         ; Add 72 to V9
$8C2    $03C5   SYS      $3C5            ; System call to 3C5
$8C4    $AD3C   LD       I, $D3C         ; Load D3C into I
$8C6    $312F   SE       V1, #2F         ; Skip if V1 == 47
$8C8    $460F   SNE      V6, #0F         ; Skip if V6 != 15
$8CA    $D28C   DRW      V2, V8, #C      ; Draw 12-byte sprite at V2, V8
$8CC    $AA5D   LD       I, $A5D         ; Load A5D into I
$8CE    $725F   ADD      V2, #5F         ; Add 95 to V2
$8D0    $68D4   LD       V8, #D4         ; Load 212 into V8
$8D2    $E799   UNKNOWN  $E799           ; Unknown Exxx instruction
$8D4    $C005   RND      V0, #05         ; V0 = random & 05
$8D6    $7294   ADD      V2, #94         ; Add 148 to V2
$8D8    $D28B   DRW      V2, V8, #B      ; Draw 11-byte sprite at V2, V8
$8DA    $BE82   JP       V0, $E82        ; Jump to V0 + E82
$8DC    $3143   SE       V1, #43         ; Skip if V1 == 67
$8DE    $C751   RND      V7, #51         ; V7 = random & 51
$8E0    $FE50   UNKNOWN  FE50            ; Unknown Fxxx instruction
$8E2    $0014   SYS      $014            ; System call to 014
$8E4    $B50E   JP       V0, $50E        ; Jump to V0 + 50E
$8E6    $B9FE   JP       V0, $9FE        ; Jump to V0 + 9FE
$8E8    $7AD7   ADD      VA, #D7         ; Add 215 to VA
$8EA    $6029   LD       V0, #29         ; Load 41 into V0
$8EC    $348A   SE       V4, #8A         ; Skip if V4 == 138
$8EE    $8D3C   UNKNOWN  8D3C            ; Unknown 8xxx instruction
$8F0    $8368   UNKNOWN  8368            ; Unknown 8xxx instruction
$8F2    $883C   UNKNOWN  883C            ; Unknown 8xxx instruction
$8F4    $429C   SNE      V2, #9C         ; Skip if V2 != 156
$8F6    $49AB   SNE      V9, #AB         ; Skip if V9 != 171
$8F8    $E372   UNKNOWN  $E372           ; Unknown Exxx instruction
$8FA    $037E   SYS      $37E            ; System call to 37E
$8FC    $914B   UNKNOWN  $914B           ; Unknown 9xxx instruction
$8FE    $49C4   SNE      V9, #C4         ; Skip if V9 != 196
$900    $112A   JP       $12A            ; Jump to 12A
$902    $E070   UNKNOWN  $E070           ; Unknown Exxx instruction
$904    $55D9   UNKNOWN  $55D9           ; Unknown 5xxx instruction
$906    $C551   RND      V5, #51         ; V5 = random & 51
$908    $9892   UNKNOWN  $9892           ; Unknown 9xxx instruction
$90A    $5292   UNKNOWN  $5292           ; Unknown 5xxx instruction
$90C    $10CC   JP       $0CC            ; Jump to 0CC
$90E    $F410   UNKNOWN  F410            ; Unknown Fxxx instruction
$910    $8233   XOR      V2, V3          ; V2 ^= V3
$912    $8C4B   UNKNOWN  8C4B            ; Unknown 8xxx instruction
$914    $573F   UNKNOWN  $573F           ; Unknown 5xxx instruction
$916    $6DC0   LD       VD, #C0         ; Load 192 into VD
$918    $9B5F   UNKNOWN  $9B5F           ; Unknown 9xxx instruction
$91A    $B144   JP       V0, $144        ; Jump to V0 + 144
$91C    $286B   CALL     $86B            ; Call subroutine at 86B
$91E    $A3B0   LD       I, $3B0         ; Load 3B0 into I
$920    $C6BD   RND      V6, #BD         ; V6 = random & BD
$922    $7B9C   ADD      VB, #9C         ; Add 156 to VB
$924    $443F   SNE      V4, #3F         ; Skip if V4 != 63
$926    $4153   SNE      V1, #53         ; Skip if V1 != 83
$928    $FA56   UNKNOWN  FA56            ; Unknown Fxxx instruction
$92A    $876B   UNKNOWN  876B            ; Unknown 8xxx instruction
$92C    $AFBF   LD       I, $FBF         ; Load FBF into I
$92E    $EC7F   UNKNOWN  $EC7F           ; Unknown Exxx instruction
$930    $CD2F   RND      VD, #2F         ; VD = random & 2F
$932    $D394   DRW      V3, V9, #4      ; Draw 4-byte sprite at V3, V9
$934    $FF6D   UNKNOWN  FF6D            ; Unknown Fxxx instruction
$936    $3367   SE       V3, #67         ; Skip if V3 == 103
$938    $E466   UNKNOWN  $E466           ; Unknown Exxx instruction
$93A    $14CC   JP       $4CC            ; Jump to 4CC
$93C    $95B9   UNKNOWN  $95B9           ; Unknown 9xxx instruction
$93E    $B15F   JP       V0, $15F        ; Jump to V0 + 15F
$940    $C149   RND      V1, #49         ; V1 = random & 49
$942    $A7A4   LD       I, $7A4         ; Load 7A4 into I
$944    $F3E2   UNKNOWN  F3E2            ; Unknown Fxxx instruction
$946    $FCFC   UNKNOWN  FCFC            ; Unknown Fxxx instruction
$948    $AD63   LD       I, $D63         ; Load D63 into I
$94A    $82BA   UNKNOWN  82BA            ; Unknown 8xxx instruction
$94C    $FE11   UNKNOWN  FE11            ; Unknown Fxxx instruction
$94E    $FC16   UNKNOWN  FC16            ; Unknown Fxxx instruction
$950    $E680   UNKNOWN  $E680           ; Unknown Exxx instruction
$952    $9CC6   UNKNOWN  $9CC6           ; Unknown 9xxx instruction
$954    $A3F2   LD       I, $3F2         ; Load 3F2 into I
$956    $F416   UNKNOWN  F416            ; Unknown Fxxx instruction
$958    $C190   RND      V1, #90         ; V1 = random & 90
$95A    $4D9C   SNE      VD, #9C         ; Skip if VD != 156
$95C    $7764   ADD      V7, #64         ; Add 100 to V7
$95E    $D854   DRW      V8, V5, #4      ; Draw 4-byte sprite at V8, V5
$960    $C803   RND      V8, #03         ; V8 = random & 03
$962    $BB71   JP       V0, $B71        ; Jump to V0 + B71
$964    $679E   LD       V7, #9E         ; Load 158 into V7
$966    $A345   LD       I, $345         ; Load 345 into I
$968    $4D45   SNE      VD, #45         ; Skip if VD != 69
$96A    $0F74   SYS      $F74            ; System call to F74
$96C    $F5F0   UNKNOWN  F5F0            ; Unknown Fxxx instruction
$96E    $DCE0   DRW      VC, VE, #0      ; Draw 0-byte sprite at VC, VE
$970    $0B4F   SYS      $B4F            ; System call to B4F
$972    $8898   UNKNOWN  8898            ; Unknown 8xxx instruction
$974    $71C5   ADD      V1, #C5         ; Add 197 to V1
$976    $7209   ADD      V2, #09         ; Add 9 to V2
$978    $C40C   RND      V4, #0C         ; V4 = random & 0C
$97A    $FA3D   UNKNOWN  FA3D            ; Unknown Fxxx instruction
$97C    $E528   UNKNOWN  $E528           ; Unknown Exxx instruction
$97E    $FAAB   UNKNOWN  FAAB            ; Unknown Fxxx instruction
$980    $33D0   SE       V3, #D0         ; Skip if V3 == 208
$982    $619C   LD       V1, #9C         ; Load 156 into V1
$984    $7C26   ADD      VC, #26         ; Add 38 to VC
$986    $905A   UNKNOWN  $905A           ; Unknown 9xxx instruction
$988    $D1E6   DRW      V1, VE, #6      ; Draw 6-byte sprite at V1, VE
$98A    $AA79   LD       I, $A79         ; Load A79 into I
$98C    $A371   LD       I, $371         ; Load 371 into I
$98E    $747E   ADD      V4, #7E         ; Add 126 to V4
$990    $95AA   UNKNOWN  $95AA           ; Unknown 9xxx instruction
$992    $40A7   SNE      V0, #A7         ; Skip if V0 != 167
$994    $A7C9   LD       I, $7C9         ; Load 7C9 into I
$996    $BB3F   JP       V0, $B3F        ; Jump to V0 + B3F
$998    $9505   UNKNOWN  $9505           ; Unknown 9xxx instruction
$99A    $6D42   LD       VD, #42         ; Load 66 into VD
$99C    $224B   CALL     $24B            ; Call subroutine at 24B
$99E    $51E2   UNKNOWN  $51E2           ; Unknown 5xxx instruction
$9A0    $D60A   DRW      V6, V0, #A      ; Draw 10-byte sprite at V6, V0
$9A2    $D2A3   DRW      V2, VA, #3      ; Draw 3-byte sprite at V2, VA
$9A4    $B198   JP       V0, $198        ; Jump to V0 + 198
$9A6    $D926   DRW      V9, V2, #6      ; Draw 6-byte sprite at V9, V2
$9A8    $EEAE   UNKNOWN  $EEAE           ; Unknown Exxx instruction
$9AA    $7C83   ADD      VC, #83         ; Add 131 to VC
$9AC    $A939   LD       I, $939         ; Load 939 into I
$9AE    $C055   RND      V0, #55         ; V0 = random & 55
$9B0    $8B78   UNKNOWN  8B78            ; Unknown 8xxx instruction
$9B2    $B565   JP       V0, $565        ; Jump to V0 + 565
$9B4    $EB8E   UNKNOWN  $EB8E           ; Unknown Exxx instruction
$9B6    $B6FC   JP       V0, $6FC        ; Jump to V0 + 6FC
$9B8    $AB78   LD       I, $B78         ; Load B78 into I
$9BA    $72EE   ADD      V2, #EE         ; Add 238 to V2
$9BC    $3B3A   SE       VB, #3A         ; Skip if VB == 58
$9BE    $345C   SE       V4, #5C         ; Skip if V4 == 92
$9C0    $C62B   RND      V6, #2B         ; V6 = random & 2B
$9C2    $8A94   ADD      VA, V9          ; VA += V9, VF = carry
$9C4    $8D4A   UNKNOWN  8D4A            ; Unknown 8xxx instruction
$9C6    $BD20   JP       V0, $D20        ; Jump to V0 + D20
$9C8    $9D13   UNKNOWN  $9D13           ; Unknown 9xxx instruction
$9CA    $BD92   JP       V0, $D92        ; Jump to V0 + D92
$9CC    $BF4A   JP       V0, $F4A        ; Jump to V0 + F4A
$9CE    $601A   LD       V0, #1A         ; Load 26 into V0
$9D0    $9877   UNKNOWN  $9877           ; Unknown 9xxx instruction
$9D2    $615E   LD       V1, #5E         ; Load 94 into V1
$9D4    $B70F   JP       V0, $70F        ; Jump to V0 + 70F
$9D6    $5592   UNKNOWN  $5592           ; Unknown 5xxx instruction
$9D8    $DB1A   DRW      VB, V1, #A      ; Draw 10-byte sprite at VB, V1
$9DA    $6C40   LD       VC, #40         ; Load 64 into VC
$9DC    $93AE   UNKNOWN  $93AE           ; Unknown 9xxx instruction
$9DE    $7773   ADD      V7, #73         ; Add 115 to V7
$9E0    $F670   UNKNOWN  F670            ; Unknown Fxxx instruction
$9E2    $3291   SE       V2, #91         ; Skip if V2 == 145
$9E4    $8B68   UNKNOWN  8B68            ; Unknown 8xxx instruction
$9E6    $A09B   LD       I, $09B         ; Load 09B into I
$9E8    $A0F4   LD       I, $0F4         ; Load 0F4 into I
$9EA    $91A8   UNKNOWN  $91A8           ; Unknown 9xxx instruction
$9EC    $F41A   UNKNOWN  F41A            ; Unknown Fxxx instruction
$9EE    $5DF1   UNKNOWN  $5DF1           ; Unknown 5xxx instruction
$9F0    $8526   SHR      V5              ; V5 >>= 1, VF = LSB
$9F2    $B093   JP       V0, $093        ; Jump to V0 + 093
$9F4    $1388   JP       $388            ; Jump to 388
$9F6    $3763   SE       V7, #63         ; Skip if V7 == 99
$9F8    $91A6   UNKNOWN  $91A6           ; Unknown 9xxx instruction
$9FA    $7723   ADD      V7, #23         ; Add 35 to V7
$9FC    $5D14   UNKNOWN  $5D14           ; Unknown 5xxx instruction
$9FE    $22B1   CALL     $2B1            ; Call subroutine at 2B1
$A00    $B4A0   JP       V0, $4A0        ; Jump to V0 + 4A0
$A02    $1071   JP       $071            ; Jump to 071
$A04    $E3F7   UNKNOWN  $E3F7           ; Unknown Exxx instruction
$A06    $2B2D   CALL     $B2D            ; Call subroutine at B2D
$A08    $0ED5   SYS      $ED5            ; System call to ED5
$A0A    $79C9   ADD      V9, #C9         ; Add 201 to V9
$A0C    $A8D2   LD       I, $8D2         ; Load 8D2 into I
$A0E    $D2D9   DRW      V2, VD, #9      ; Draw 9-byte sprite at V2, VD
$A10    $AC40   LD       I, $C40         ; Load C40 into I
$A12    $8551   OR       V5, V5          ; V5 |= V5
$A14    $5E79   UNKNOWN  $5E79           ; Unknown 5xxx instruction
$A16    $4CF7   SNE      VC, #F7         ; Skip if VC != 247
$A18    $3102   SE       V1, #02         ; Skip if V1 == 2
$A1A    $33B4   SE       V3, #B4         ; Skip if V3 == 180
$A1C    $782E   ADD      V8, #2E         ; Add 46 to V8
$A1E    $A5FD   LD       I, $5FD         ; Load 5FD into I
$A20    $F518   LD       ST, V5          ; Sound timer = V5
$A22    $1AC5   JP       $AC5            ; Jump to AC5
$A24    $9673   UNKNOWN  $9673           ; Unknown 9xxx instruction
$A26    $2E64   CALL     $E64            ; Call subroutine at E64
$A28    $9338   UNKNOWN  $9338           ; Unknown 9xxx instruction
$A2A    $0FA0   SYS      $FA0            ; System call to FA0
$A2C    $A1CA   LD       I, $1CA         ; Load 1CA into I
$A2E    $A103   LD       I, $103         ; Load 103 into I
$A30    $ECC3   UNKNOWN  $ECC3           ; Unknown Exxx instruction
$A32    $586B   UNKNOWN  $586B           ; Unknown 5xxx instruction
$A34    $BE8F   JP       V0, $E8F        ; Jump to V0 + E8F
$A36    $F838   UNKNOWN  F838            ; Unknown Fxxx instruction
$A38    $8057   SUBN     V0, V5          ; V0 = V5 - V0, VF = !borrow
$A3A    $45C6   SNE      V5, #C6         ; Skip if V5 != 198
$A3C    $2002   CALL     $002            ; Call subroutine at 002
$A3E    $613C   LD       V1, #3C         ; Load 60 into V1
$A40    $8FBE   SHL      VF              ; VF <<= 1, VF = MSB
$A42    $05EB   SYS      $5EB            ; System call to 5EB
$A44    $89A6   SHR      V9              ; V9 >>= 1, VF = LSB
$A46    $F262   UNKNOWN  F262            ; Unknown Fxxx instruction
$A48    $A27C   LD       I, $27C         ; Load 27C into I
$A4A    $E3D0   UNKNOWN  $E3D0           ; Unknown Exxx instruction
$A4C    $1198   JP       $198            ; Jump to 198
$A4E    $2E19   CALL     $E19            ; Call subroutine at E19
$A50    $E755   UNKNOWN  $E755           ; Unknown Exxx instruction
$A52    $48CB   SNE      V8, #CB         ; Skip if V8 != 203
$A54    $3864   SE       V8, #64         ; Skip if V8 == 100
$A56    $2E75   CALL     $E75            ; Call subroutine at E75
$A58    $E252   UNKNOWN  $E252           ; Unknown Exxx instruction
$A5A    $76DA   ADD      V6, #DA         ; Add 218 to V6
$A5C    $AA4C   LD       I, $A4C         ; Load A4C into I
$A5E    $3AE5   SE       VA, #E5         ; Skip if VA == 229
$A60    $CE1B   RND      VE, #1B         ; VE = random & 1B
$A62    $2342   CALL     $342            ; Call subroutine at 342
$A64    $AF8D   LD       I, $F8D         ; Load F8D into I
$A66    $CF92   RND      VF, #92         ; VF = random & 92
$A68    $5302   UNKNOWN  $5302           ; Unknown 5xxx instruction
$A6A    $3EB6   SE       VE, #B6         ; Skip if VE == 182
$A6C    $457A   SNE      V5, #7A         ; Skip if V5 != 122
$A6E    $28B0   CALL     $8B0            ; Call subroutine at 8B0
$A70    $1C16   JP       $C16            ; Jump to C16
$A72    $9863   UNKNOWN  $9863           ; Unknown 9xxx instruction
$A74    $9727   UNKNOWN  $9727           ; Unknown 9xxx instruction
$A76    $408B   SNE      V0, #8B         ; Skip if V0 != 139
$A78    $6F58   LD       VF, #58         ; Load 88 into VF
$A7A    $1A18   JP       $A18            ; Jump to A18
$A7C    $BA0D   JP       V0, $A0D        ; Jump to V0 + A0D
$A7E    $1DFB   JP       $DFB            ; Jump to DFB
$A80    $8722   AND      V7, V2          ; V7 &= V2
$A82    $AF84   LD       I, $F84         ; Load F84 into I
$A84    $8DB7   SUBN     VD, VB          ; VD = VB - VD, VF = !borrow
$A86    $E547   UNKNOWN  $E547           ; Unknown Exxx instruction
$A88    $4A68   SNE      VA, #68         ; Skip if VA != 104
$A8A    $1CE9   JP       $CE9            ; Jump to CE9
$A8C    $FE73   UNKNOWN  FE73            ; Unknown Fxxx instruction
$A8E    $E28D   UNKNOWN  $E28D           ; Unknown Exxx instruction
$A90    $A219   LD       I, $219         ; Load 219 into I
$A92    $0B18   SYS      $B18            ; System call to B18
$A94    $827B   UNKNOWN  827B            ; Unknown 8xxx instruction
$A96    $8079   UNKNOWN  8079            ; Unknown 8xxx instruction
$A98    $5FB2   UNKNOWN  $5FB2           ; Unknown 5xxx instruction
$A9A    $F0DD   UNKNOWN  F0DD            ; Unknown Fxxx instruction
$A9C    $EF40   UNKNOWN  $EF40           ; Unknown Exxx instruction
$A9E    $E4F2   UNKNOWN  $E4F2           ; Unknown Exxx instruction
$AA0    $EF7D   UNKNOWN  $EF7D           ; Unknown Exxx instruction
$AA2    $4763   SNE      V7, #63         ; Skip if V7 != 99
$AA4    $2ECA   CALL     $ECA            ; Call subroutine at ECA
$AA6    $32C0   SE       V2, #C0         ; Skip if V2 == 192
$AA8    $C23B   RND      V2, #3B         ; V2 = random & 3B
$AAA    $927F   UNKNOWN  $927F           ; Unknown 9xxx instruction
$AAC    $42D3   SNE      V2, #D3         ; Skip if V2 != 211
$AAE    $2C26   CALL     $C26            ; Call subroutine at C26
$AB0    $DE29   DRW      VE, V2, #9      ; Draw 9-byte sprite at VE, V2
$AB2    $04C9   SYS      $4C9            ; System call to 4C9
$AB4    $AC3A   LD       I, $C3A         ; Load C3A into I
$AB6    $52B3   UNKNOWN  $52B3           ; Unknown 5xxx instruction
$AB8    $4231   SNE      V2, #31         ; Skip if V2 != 49
$ABA    $6415   LD       V4, #15         ; Load 21 into V4
$ABC    $CC6D   RND      VC, #6D         ; VC = random & 6D
$ABE    $8721   OR       V7, V2          ; V7 |= V2
$AC0    $381A   SE       V8, #1A         ; Skip if V8 == 26
$AC2    $419C   SNE      V1, #9C         ; Skip if V1 != 156
$AC4    $70BD   ADD      V0, #BD         ; Add 189 to V0
$AC6    $8787   SUBN     V7, V8          ; V7 = V8 - V7, VF = !borrow
$AC8    $3AF4   SE       VA, #F4         ; Skip if VA == 244
$ACA    $C3EF   RND      V3, #EF         ; V3 = random & EF
$ACC    $38EE   SE       V8, #EE         ; Skip if V8 == 238
$ACE    $DD41   DRW      VD, V4, #1      ; Draw 1-byte sprite at VD, V4
$AD0    $24D5   CALL     $4D5            ; Call subroutine at 4D5
$AD2    $2C5C   CALL     $C5C            ; Call subroutine at C5C
$AD4    $B4EC   JP       V0, $4EC        ; Jump to V0 + 4EC
$AD6    $B28C   JP       V0, $28C        ; Jump to V0 + 28C
$AD8    $C39C   RND      V3, #9C         ; V3 = random & 9C
$ADA    $DE6D   DRW      VE, V6, #D      ; Draw 13-byte sprite at VE, V6
$ADC    $B513   JP       V0, $513        ; Jump to V0 + 513
$ADE    $D999   DRW      V9, V9, #9      ; Draw 9-byte sprite at V9, V9
$AE0    $BB27   JP       V0, $B27        ; Jump to V0 + B27
$AE2    $EDAB   UNKNOWN  $EDAB           ; Unknown Exxx instruction
$AE4    $8592   AND      V5, V9          ; V5 &= V9
$AE6    $C1E3   RND      V1, #E3         ; V1 = random & E3
$AE8    $141A   JP       $41A            ; Jump to 41A
$AEA    $9C3A   UNKNOWN  $9C3A           ; Unknown 9xxx instruction
$AEC    $F5AB   UNKNOWN  F5AB            ; Unknown Fxxx instruction
$AEE    $B822   JP       V0, $822        ; Jump to V0 + 822
$AF0    $3B7D   SE       VB, #7D         ; Skip if VB == 125
$AF2    $BA3E   JP       V0, $A3E        ; Jump to V0 + A3E
$AF4    $059F   SYS      $59F            ; System call to 59F
$AF6    $68F9   LD       V8, #F9         ; Load 249 into V8
$AF8    $43C5   SNE      V3, #C5         ; Skip if V3 != 197
$AFA    $DA9D   DRW      VA, V9, #D      ; Draw 13-byte sprite at VA, V9
$AFC    $EB9D   UNKNOWN  $EB9D           ; Unknown Exxx instruction
$AFE    $4D4B   SNE      VD, #4B         ; Skip if VD != 75
$B00    $016D   SYS      $16D            ; System call to 16D
$B02    $376E   SE       V7, #6E         ; Skip if V7 == 110
$B04    $5B66   UNKNOWN  $5B66           ; Unknown 5xxx instruction
$B06    $5F91   UNKNOWN  $5F91           ; Unknown 5xxx instruction
$B08    $4D24   SNE      VD, #24         ; Skip if VD != 36
$B0A    $BF80   JP       V0, $F80        ; Jump to V0 + F80
$B0C    $4782   SNE      V7, #82         ; Skip if V7 != 130
$B0E    $2527   CALL     $527            ; Call subroutine at 527
$B10    $BA43   JP       V0, $A43        ; Jump to V0 + A43
$B12    $693A   LD       V9, #3A         ; Load 58 into V9
$B14    $78E6   ADD      V8, #E6         ; Add 230 to V8
$B16    $B36E   JP       V0, $36E        ; Jump to V0 + 36E
$B18    $A418   LD       I, $418         ; Load 418 into I
$B1A    $0605   SYS      $605            ; System call to 605
$B1C    $18B8   JP       $8B8            ; Jump to 8B8
$B1E    $6620   LD       V6, #20         ; Load 32 into V6
$B20    $812A   UNKNOWN  812A            ; Unknown 8xxx instruction
$B22    $310B   SE       V1, #0B         ; Skip if V1 == 11
$B24    $591C   UNKNOWN  $591C           ; Unknown 5xxx instruction
$B26    $5D00   SE       VD, V0          ; Skip if VD == V0
$B28    $AB7D   LD       I, $B7D         ; Load B7D into I
$B2A    $2E6E   CALL     $E6E            ; Call subroutine at E6E
$B2C    $9891   UNKNOWN  $9891           ; Unknown 9xxx instruction
$B2E    $942E   UNKNOWN  $942E           ; Unknown 9xxx instruction
$B30    $ACE4   LD       I, $CE4         ; Load CE4 into I
$B32    $57E3   UNKNOWN  $57E3           ; Unknown 5xxx instruction
$B34    $C392   RND      V3, #92         ; V3 = random & 92
$B36    $F199   UNKNOWN  F199            ; Unknown Fxxx instruction
$B38    $430D   SNE      V3, #0D         ; Skip if V3 != 13
$B3A    $F327   UNKNOWN  F327            ; Unknown Fxxx instruction
$B3C    $AEEC   LD       I, $EEC         ; Load EEC into I
$B3E    $6DEC   LD       VD, #EC         ; Load 236 into VD
$B40    $E17F   UNKNOWN  $E17F           ; Unknown Exxx instruction
$B42    $DFA2   DRW      VF, VA, #2      ; Draw 2-byte sprite at VF, VA
$B44    $5CF7   UNKNOWN  $5CF7           ; Unknown 5xxx instruction
$B46    $2D49   CALL     $D49            ; Call subroutine at D49
$B48    $245D   CALL     $45D            ; Call subroutine at 45D
$B4A    $E413   UNKNOWN  $E413           ; Unknown Exxx instruction
$B4C    $6A90   LD       VA, #90         ; Load 144 into VA
$B4E    $4048   SNE      V0, #48         ; Skip if V0 != 72
$B50    $323F   SE       V2, #3F         ; Skip if V2 == 63
$B52    $7662   ADD      V6, #62         ; Add 98 to V6
$B54    $924F   UNKNOWN  $924F           ; Unknown 9xxx instruction
$B56    $2AA9   CALL     $AA9            ; Call subroutine at AA9
$B58    $BA87   JP       V0, $A87        ; Jump to V0 + A87
$B5A    $F31B   UNKNOWN  F31B            ; Unknown Fxxx instruction
$B5C    $09CD   SYS      $9CD            ; System call to 9CD
$B5E    $6462   LD       V4, #62         ; Load 98 into V4
$B60    $B8A4   JP       V0, $8A4        ; Jump to V0 + 8A4
$B62    $CB20   RND      VB, #20         ; VB = random & 20
$B64    $4A39   SNE      VA, #39         ; Skip if VA != 57
$B66    $EA92   UNKNOWN  $EA92           ; Unknown Exxx instruction
$B68    $E7A9   UNKNOWN  $E7A9           ; Unknown Exxx instruction
$B6A    $D36F   DRW      V3, V6, #F      ; Draw 15-byte sprite at V3, V6
$B6C    $CF64   RND      VF, #64         ; VF = random & 64
$B6E    $595E   UNKNOWN  $595E           ; Unknown 5xxx instruction
$B70    $9817   UNKNOWN  $9817           ; Unknown 9xxx instruction
$B72    $7322   ADD      V3, #22         ; Add 34 to V3
$B74    $23F8   CALL     $3F8            ; Call subroutine at 3F8
$B76    $C5B2   RND      V5, #B2         ; V5 = random & B2
$B78    $7C9D   ADD      VC, #9D         ; Add 157 to VC
$B7A    $BD2D   JP       V0, $D2D        ; Jump to V0 + D2D
$B7C    $CBBD   RND      VB, #BD         ; VB = random & BD
$B7E    $275C   CALL     $75C            ; Call subroutine at 75C
$B80    $F422   UNKNOWN  F422            ; Unknown Fxxx instruction
$B82    $98A4   UNKNOWN  $98A4           ; Unknown 9xxx instruction
$B84    $902C   UNKNOWN  $902C           ; Unknown 9xxx instruction
$B86    $0CA4   SYS      $CA4            ; System call to CA4
$B88    $30A4   SE       V0, #A4         ; Skip if V0 == 164
$B8A    $C9A8   RND      V9, #A8         ; V9 = random & A8
$B8C    $2E5D   CALL     $E5D            ; Call subroutine at E5D
$B8E    $E75B   UNKNOWN  $E75B           ; Unknown Exxx instruction
$B90    $2B6E   CALL     $B6E            ; Call subroutine at B6E
$B92    $5971   UNKNOWN  $5971           ; Unknown 5xxx instruction
$B94    $5FBD   UNKNOWN  $5FBD           ; Unknown 5xxx instruction
$B96    $276C   CALL     $76C            ; Call subroutine at 76C
$B98    $AD3E   LD       I, $D3E         ; Load D3E into I
$B9A    $F751   UNKNOWN  F751            ; Unknown Fxxx instruction
$B9C    $610F   LD       V1, #0F         ; Load 15 into V1
$B9E    $5255   UNKNOWN  $5255           ; Unknown 5xxx instruction
$BA0    $424F   SNE      V2, #4F         ; Skip if V2 != 79
$BA2    $45D9   SNE      V5, #D9         ; Skip if V5 != 217
$BA4    $2D21   CALL     $D21            ; Call subroutine at D21
$BA6    $E639   UNKNOWN  $E639           ; Unknown Exxx instruction
$BA8    $F75A   UNKNOWN  F75A            ; Unknown Fxxx instruction
$BAA    $E857   UNKNOWN  $E857           ; Unknown Exxx instruction
$BAC    $4CC9   SNE      VC, #C9         ; Skip if VC != 201
$BAE    $F001   UNKNOWN  F001            ; Unknown Fxxx instruction
$BB0    $D0F8   DRW      V0, VF, #8      ; Draw 8-byte sprite at V0, VF
$BB2    $7C61   ADD      VC, #61         ; Add 97 to VC
$BB4    $8D0B   UNKNOWN  8D0B            ; Unknown 8xxx instruction
$BB6    $5C7D   UNKNOWN  $5C7D           ; Unknown 5xxx instruction
$BB8    $3942   SE       V9, #42         ; Skip if V9 == 66
$BBA    $10BC   JP       $0BC            ; Jump to 0BC
$BBC    $20FB   CALL     $0FB            ; Call subroutine at 0FB
$BBE    $A20E   LD       I, $20E         ; Load 20E into I
$BC0    $2EE2   CALL     $EE2            ; Call subroutine at EE2
$BC2    $4D42   SNE      VD, #42         ; Skip if VD != 66
$BC4    $B97C   JP       V0, $97C        ; Jump to V0 + 97C
$BC6    $B461   JP       V0, $461        ; Jump to V0 + 461
$BC8    $0FF5   SYS      $FF5            ; System call to FF5
$BCA    $AD11   LD       I, $D11         ; Load D11 into I
$BCC    $E589   UNKNOWN  $E589           ; Unknown Exxx instruction
$BCE    $3E18   SE       VE, #18         ; Skip if VE == 24
$BD0    $5585   UNKNOWN  $5585           ; Unknown 5xxx instruction
$BD2    $AB29   LD       I, $B29         ; Load B29 into I
$BD4    $F2ED   UNKNOWN  F2ED            ; Unknown Fxxx instruction
$BD6    $14B4   JP       $4B4            ; Jump to 4B4
$BD8    $EFD4   UNKNOWN  $EFD4           ; Unknown Exxx instruction
$BDA    $A20B   LD       I, $20B         ; Load 20B into I
$BDC    $58DB   UNKNOWN  $58DB           ; Unknown 5xxx instruction
$BDE    $2FA8   CALL     $FA8            ; Call subroutine at FA8
$BE0    $1AC7   JP       $AC7            ; Jump to AC7
$BE2    $A4A2   LD       I, $4A2         ; Load 4A2 into I
$BE4    $3D82   SE       VD, #82         ; Skip if VD == 130
$BE6    $47FB   SNE      V7, #FB         ; Skip if V7 != 251
$BE8    $E114   UNKNOWN  $E114           ; Unknown Exxx instruction
$BEA    $14F5   JP       $4F5            ; Jump to 4F5
$BEC    $7AF9   ADD      VA, #F9         ; Add 249 to VA
$BEE    $423E   SNE      V2, #3E         ; Skip if V2 != 62
$BF0    $B4BF   JP       V0, $4BF        ; Jump to V0 + 4BF
$BF2    $1AE3   JP       $AE3            ; Jump to AE3
$BF4    $6718   LD       V7, #18         ; Load 24 into V7
$BF6    $E720   UNKNOWN  $E720           ; Unknown Exxx instruction
$BF8    $AFF3   LD       I, $FF3         ; Load FF3 into I
$BFA    $DC6C   DRW      VC, V6, #C      ; Draw 12-byte sprite at VC, V6
$BFC    $E054   UNKNOWN  $E054           ; Unknown Exxx instruction
$BFE    $9375   UNKNOWN  $9375           ; Unknown 9xxx instruction
$C00    $7A03   ADD      VA, #03         ; Add 3 to VA
$C02    $183A   JP       $83A            ; Jump to 83A
$C04    $7A26   ADD      VA, #26         ; Add 38 to VA
$C06    $FC41   UNKNOWN  FC41            ; Unknown Fxxx instruction
$C08    $21AC   CALL     $1AC            ; Call subroutine at 1AC
$C0A    $48F7   SNE      V8, #F7         ; Skip if V8 != 247
$C0C    $580C   UNKNOWN  $580C           ; Unknown 5xxx instruction
$C0E    $8A08   UNKNOWN  8A08            ; Unknown 8xxx instruction
$C10    $55C4   UNKNOWN  $55C4           ; Unknown 5xxx instruction
$C12    $E92C   UNKNOWN  $E92C           ; Unknown Exxx instruction
$C14    $7658   ADD      V6, #58         ; Add 88 to V6
$C16    $6DFA   LD       VD, #FA         ; Load 250 into VD
$C18    $6987   LD       V9, #87         ; Load 135 into V9
$C1A    $391B   SE       V9, #1B         ; Skip if V9 == 27
$C1C    $F9FD   UNKNOWN  F9FD            ; Unknown Fxxx instruction
$C1E    $C02A   RND      V0, #2A         ; V0 = random & 2A
$C20    $3107   SE       V1, #07         ; Skip if V1 == 7
$C22    $7FDD   ADD      VF, #DD         ; Add 221 to VF
$C24    $F30E   UNKNOWN  F30E            ; Unknown Fxxx instruction
$C26    $159F   JP       $59F            ; Jump to 59F
$C28    $2302   CALL     $302            ; Call subroutine at 302
$C2A    $80F4   ADD      V0, VF          ; V0 += VF, VF = carry
$C2C    $4649   SNE      V6, #49         ; Skip if V6 != 73
$C2E    $389F   SE       V8, #9F         ; Skip if V8 == 159
$C30    $ACAD   LD       I, $CAD         ; Load CAD into I
$C32    $67F7   LD       V7, #F7         ; Load 247 into V7
$C34    $1AF2   JP       $AF2            ; Jump to AF2
$C36    $5A18   UNKNOWN  $5A18           ; Unknown 5xxx instruction
$C38    $173F   JP       $73F            ; Jump to 73F
$C3A    $8BC1   OR       VB, VC          ; VB |= VC
$C3C    $55CB   UNKNOWN  $55CB           ; Unknown 5xxx instruction
$C3E    $36DC   SE       V6, #DC         ; Skip if V6 == 220
$C40    $ABD6   LD       I, $BD6         ; Load BD6 into I
$C42    $EE08   UNKNOWN  $EE08           ; Unknown Exxx instruction
$C44    $2894   CALL     $894            ; Call subroutine at 894
$C46    $370F   SE       V7, #0F         ; Skip if V7 == 15
$C48    $38FF   SE       V8, #FF         ; Skip if V8 == 255
$C4A    $437D   SNE      V3, #7D         ; Skip if V3 != 125
$C4C    $0848   SYS      $848            ; System call to 848
$C4E    $D529   DRW      V5, V2, #9      ; Draw 9-byte sprite at V5, V2
$C50    $1E2C   JP       $E2C            ; Jump to E2C
$C52    $0BCB   SYS      $BCB            ; System call to BCB
$C54    $BDB6   JP       V0, $DB6        ; Jump to V0 + DB6
$C56    $B359   JP       V0, $359        ; Jump to V0 + 359
$C58    $6734   LD       V7, #34         ; Load 52 into V7
$C5A    $2EFC   CALL     $EFC            ; Call subroutine at EFC
$C5C    $AF1E   LD       I, $F1E         ; Load F1E into I
$C5E    $F60B   UNKNOWN  F60B            ; Unknown Fxxx instruction
$C60    $973D   UNKNOWN  $973D           ; Unknown 9xxx instruction
$C62    $8D51   OR       VD, V5          ; VD |= V5
$C64    $1181   JP       $181            ; Jump to 181
$C66    $26E7   CALL     $6E7            ; Call subroutine at 6E7
$C68    $55F3   UNKNOWN  $55F3           ; Unknown 5xxx instruction
$C6A    $040C   SYS      $40C            ; System call to 40C
$C6C    $F67F   UNKNOWN  F67F            ; Unknown Fxxx instruction
$C6E    $A4AD   LD       I, $4AD         ; Load 4AD into I
$C70    $5505   UNKNOWN  $5505           ; Unknown 5xxx instruction
$C72    $8094   ADD      V0, V9          ; V0 += V9, VF = carry
$C74    $0542   SYS      $542            ; System call to 542
$C76    $1036   JP       $036            ; Jump to 036
$C78    $BC9B   JP       V0, $C9B        ; Jump to V0 + C9B
$C7A    $1A04   JP       $A04            ; Jump to A04
$C7C    $AB3F   LD       I, $B3F         ; Load B3F into I
$C7E    $8ACB   UNKNOWN  8ACB            ; Unknown 8xxx instruction
$C80    $C422   RND      V4, #22         ; V4 = random & 22
$C82    $77FE   ADD      V7, #FE         ; Add 254 to V7
$C84    $A59B   LD       I, $59B         ; Load 59B into I
$C86    $72ED   ADD      V2, #ED         ; Add 237 to V2
$C88    $292A   CALL     $92A            ; Call subroutine at 92A
$C8A    $30C6   SE       V0, #C6         ; Skip if V0 == 198
$C8C    $F4BB   UNKNOWN  F4BB            ; Unknown Fxxx instruction
$C8E    $EE91   UNKNOWN  $EE91           ; Unknown Exxx instruction
$C90    $7A37   ADD      VA, #37         ; Add 55 to VA
$C92    $9D1F   UNKNOWN  $9D1F           ; Unknown 9xxx instruction
$C94    $38C9   SE       V8, #C9         ; Skip if V8 == 201
$C96    $2170   CALL     $170            ; Call subroutine at 170
$C98    $2541   CALL     $541            ; Call subroutine at 541
$C9A    $6C67   LD       VC, #67         ; Load 103 into VC
$C9C    $CA7D   RND      VA, #7D         ; VA = random & 7D
$C9E    $43BE   SNE      V3, #BE         ; Skip if V3 != 190
$CA0    $FAF5   UNKNOWN  FAF5            ; Unknown Fxxx instruction
$CA2    $4AE1   SNE      VA, #E1         ; Skip if VA != 225
$CA4    $2041   CALL     $041            ; Call subroutine at 041
$CA6    $170A   JP       $70A            ; Jump to 70A
$CA8    $61A5   LD       V1, #A5         ; Load 165 into V1
$CAA    $460B   SNE      V6, #0B         ; Skip if V6 != 11
$CAC    $783C   ADD      V8, #3C         ; Add 60 to V8
$CAE    $6D2E   LD       VD, #2E         ; Load 46 into VD
$CB0    $5855   UNKNOWN  $5855           ; Unknown 5xxx instruction
$CB2    $A17D   LD       I, $17D         ; Load 17D into I
$CB4    $D788   DRW      V7, V8, #8      ; Draw 8-byte sprite at V7, V8
$CB6    $4B96   SNE      VB, #96         ; Skip if VB != 150
$CB8    $2EE9   CALL     $EE9            ; Call subroutine at EE9
$CBA    $C4A0   RND      V4, #A0         ; V4 = random & A0
$CBC    $26F6   CALL     $6F6            ; Call subroutine at 6F6
$CBE    $E9A9   UNKNOWN  $E9A9           ; Unknown Exxx instruction
$CC0    $D807   DRW      V8, V0, #7      ; Draw 7-byte sprite at V8, V0
$CC2    $A8FE   LD       I, $8FE         ; Load 8FE into I
$CC4    $302D   SE       V0, #2D         ; Skip if V0 == 45
$CC6    $82A0   LD       V2, VA          ; V2 = VA
$CC8    $052D   SYS      $52D            ; System call to 52D
$CCA    $DBC4   DRW      VB, VC, #4      ; Draw 4-byte sprite at VB, VC
$CCC    $AE6C   LD       I, $E6C         ; Load E6C into I
$CCE    $C0D9   RND      V0, #D9         ; V0 = random & D9
$CD0    $26D9   CALL     $6D9            ; Call subroutine at 6D9
$CD2    $7D9E   ADD      VD, #9E         ; Add 158 to VD
$CD4    $7202   ADD      V2, #02         ; Add 2 to V2
$CD6    $9B96   UNKNOWN  $9B96           ; Unknown 9xxx instruction
$CD8    $BFD1   JP       V0, $FD1        ; Jump to V0 + FD1
$CDA    $5F0A   UNKNOWN  $5F0A           ; Unknown 5xxx instruction
$CDC    $F410   UNKNOWN  F410            ; Unknown Fxxx instruction
$CDE    $B64E   JP       V0, $64E        ; Jump to V0 + 64E
$CE0    $A42E   LD       I, $42E         ; Load 42E into I
$CE2    $082D   SYS      $82D            ; System call to 82D
$CE4    $8AA9   UNKNOWN  8AA9            ; Unknown 8xxx instruction
$CE6    $9A8D   UNKNOWN  $9A8D           ; Unknown 9xxx instruction
$CE8    $EBE1   UNKNOWN  $EBE1           ; Unknown Exxx instruction
$CEA    $12CB   JP       $2CB            ; Jump to 2CB
$CEC    $DC2B   DRW      VC, V2, #B      ; Draw 11-byte sprite at VC, V2
$CEE    $7506   ADD      V5, #06         ; Add 6 to V5
$CF0    $82D4   ADD      V2, VD          ; V2 += VD, VF = carry
$CF2    $F245   UNKNOWN  F245            ; Unknown Fxxx instruction
$CF4    $DD9C   DRW      VD, V9, #C      ; Draw 12-byte sprite at VD, V9
$CF6    $8E4B   UNKNOWN  8E4B            ; Unknown 8xxx instruction
$CF8    $84BE   SHL      V4              ; V4 <<= 1, VF = MSB
$CFA    $23F1   CALL     $3F1            ; Call subroutine at 3F1
$CFC    $A338   LD       I, $338         ; Load 338 into I
$CFE    $057A   SYS      $57A            ; System call to 57A
$D00    $D1F5   DRW      V1, VF, #5      ; Draw 5-byte sprite at V1, VF
$D02    $95FF   UNKNOWN  $95FF           ; Unknown 9xxx instruction
$D04    $6477   LD       V4, #77         ; Load 119 into V4
$D06    $DFAD   DRW      VF, VA, #D      ; Draw 13-byte sprite at VF, VA
$D08    $61F6   LD       V1, #F6         ; Load 246 into V1
$D0A    $9760   SNE      V7, V6          ; Skip if V7 != V6
$D0C    $49A1   SNE      V9, #A1         ; Skip if V9 != 161
$D0E    $E316   UNKNOWN  $E316           ; Unknown Exxx instruction
$D10    $C7F0   RND      V7, #F0         ; V7 = random & F0
$D12    $11AF   JP       $1AF            ; Jump to 1AF
$D14    $4969   SNE      V9, #69         ; Skip if V9 != 105
$D16    $1914   JP       $914            ; Jump to 914
$D18    $913F   UNKNOWN  $913F           ; Unknown 9xxx instruction
$D1A    $D785   DRW      V7, V8, #5      ; Draw 5-byte sprite at V7, V8
$D1C    $4B42   SNE      VB, #42         ; Skip if VB != 66
$D1E    $ABE6   LD       I, $BE6         ; Load BE6 into I
$D20    $DD67   DRW      VD, V6, #7      ; Draw 7-byte sprite at VD, V6
$D22    $6CDA   LD       VC, #DA         ; Load 218 into VC
$D24    $4713   SNE      V7, #13         ; Skip if V7 != 19
$D26    $4DAB   SNE      VD, #AB         ; Skip if VD != 171
$D28    $52D5   UNKNOWN  $52D5           ; Unknown 5xxx instruction
$D2A    $C466   RND      V4, #66         ; V4 = random & 66
$D2C    $5B7F   UNKNOWN  $5B7F           ; Unknown 5xxx instruction
$D2E    $C388   RND      V3, #88         ; V3 = random & 88
$D30    $BD16   JP       V0, $D16        ; Jump to V0 + D16
$D32    $AA48   LD       I, $A48         ; Load A48 into I
$D34    $3EF2   SE       VE, #F2         ; Skip if VE == 242
$D36    $6F2C   LD       VF, #2C         ; Load 44 into VF
$D38    $E49D   UNKNOWN  $E49D           ; Unknown Exxx instruction
$D3A    $833C   UNKNOWN  833C            ; Unknown 8xxx instruction
$D3C    $A89A   LD       I, $89A         ; Load 89A into I
$D3E    $A2EB   LD       I, $2EB         ; Load 2EB into I
$D40    $A315   LD       I, $315         ; Load 315 into I
$D42    $85AA   UNKNOWN  85AA            ; Unknown 8xxx instruction
$D44    $9EF0   SNE      VE, VF          ; Skip if VE != VF
$D46    $DCF8   DRW      VC, VF, #8      ; Draw 8-byte sprite at VC, VF
$D48    $BDBF   JP       V0, $DBF        ; Jump to V0 + DBF
$D4A    $5C83   UNKNOWN  $5C83           ; Unknown 5xxx instruction
$D4C    $592E   UNKNOWN  $592E           ; Unknown 5xxx instruction
$D4E    $468B   SNE      V6, #8B         ; Skip if V6 != 139
$D50    $51CD   UNKNOWN  $51CD           ; Unknown 5xxx instruction
$D52    $7B48   ADD      VB, #48         ; Add 72 to VB
$D54    $5546   UNKNOWN  $5546           ; Unknown 5xxx instruction
$D56    $95F4   UNKNOWN  $95F4           ; Unknown 9xxx instruction
$D58    $3725   SE       V7, #25         ; Skip if V7 == 37
$D5A    $7C84   ADD      VC, #84         ; Add 132 to VC
$D5C    $CCCA   RND      VC, #CA         ; VC = random & CA
$D5E    $D3FA   DRW      V3, VF, #A      ; Draw 10-byte sprite at V3, VF
$D60    $68ED   LD       V8, #ED         ; Load 237 into V8
$D62    $E9ED   UNKNOWN  $E9ED           ; Unknown Exxx instruction
$D64    $3376   SE       V3, #76         ; Skip if V3 == 118
$D66    $6595   LD       V5, #95         ; Load 149 into V5
$D68    $AA8C   LD       I, $A8C         ; Load A8C into I
$D6A    $9A12   UNKNOWN  $9A12           ; Unknown 9xxx instruction
$D6C    $3AF3   SE       VA, #F3         ; Skip if VA == 243
$D6E    $8A23   XOR      VA, V2          ; VA ^= V2
$D70    $7E19   ADD      VE, #19         ; Add 25 to VE
$D72    $811E   SHL      V1              ; V1 <<= 1, VF = MSB
$D74    $8B83   XOR      VB, V8          ; VB ^= V8
$D76    $D854   DRW      V8, V5, #4      ; Draw 4-byte sprite at V8, V5
$D78    $7A3E   ADD      VA, #3E         ; Add 62 to VA
$D7A    $97D1   UNKNOWN  $97D1           ; Unknown 9xxx instruction
$D7C    $429C   SNE      V2, #9C         ; Skip if V2 != 156
$D7E    $8595   SUB      V5, V9          ; V5 -= V9, VF = !borrow
$D80    $8E63   XOR      VE, V6          ; VE ^= V6
$D82    $E895   UNKNOWN  $E895           ; Unknown Exxx instruction
$D84    $9FF9   UNKNOWN  $9FF9           ; Unknown 9xxx instruction
$D86    $B088   JP       V0, $088        ; Jump to V0 + 088
$D88    $EA9F   UNKNOWN  $EA9F           ; Unknown Exxx instruction
$D8A    $B54D   JP       V0, $54D        ; Jump to V0 + 54D
$D8C    $E84E   UNKNOWN  $E84E           ; Unknown Exxx instruction
$D8E    $9FA0   SNE      VF, VA          ; Skip if VF != VA
$D90    $9B55   UNKNOWN  $9B55           ; Unknown 9xxx instruction
$D92    $2EBD   CALL     $EBD            ; Call subroutine at EBD
$D94    $995D   UNKNOWN  $995D           ; Unknown 9xxx instruction
$D96    $E42E   UNKNOWN  $E42E           ; Unknown Exxx instruction
$D98    $4F2F   SNE      VF, #2F         ; Skip if VF != 47
$D9A    $8E36   SHR      VE              ; VE >>= 1, VF = LSB
$D9C    $6D3F   LD       VD, #3F         ; Load 63 into VD
$D9E    $0A26   SYS      $A26            ; System call to A26
$DA0    $A752   LD       I, $752         ; Load 752 into I
$DA2    $2A21   CALL     $A21            ; Call subroutine at A21
$DA4    $132A   JP       $32A            ; Jump to 32A
$DA6    $53D0   SE       V3, VD          ; Skip if V3 == VD
$DA8    $3257   SE       V2, #57         ; Skip if V2 == 87
$DAA    $2AAF   CALL     $AAF            ; Call subroutine at AAF
$DAC    $7AF6   ADD      VA, #F6         ; Add 246 to VA
$DAE    $E769   UNKNOWN  $E769           ; Unknown Exxx instruction
$DB0    $D23A   DRW      V2, V3, #A      ; Draw 10-byte sprite at V2, V3
$DB2    $F4CE   UNKNOWN  F4CE            ; Unknown Fxxx instruction
$DB4    $B3CC   JP       V0, $3CC        ; Jump to V0 + 3CC
$DB6    $CC72   RND      VC, #72         ; VC = random & 72
$DB8    $D44D   DRW      V4, V4, #D      ; Draw 13-byte sprite at V4, V4
$DBA    $EBCC   UNKNOWN  $EBCC           ; Unknown Exxx instruction
$DBC    $3E80   SE       VE, #80         ; Skip if VE == 128
$DBE    $28C4   CALL     $8C4            ; Call subroutine at 8C4
$DC0    $87EF   UNKNOWN  87EF            ; Unknown 8xxx instruction
$DC2    $B5D4   JP       V0, $5D4        ; Jump to V0 + 5D4
$DC4    $9324   UNKNOWN  $9324           ; Unknown 9xxx instruction
$DC6    $9CB8   UNKNOWN  $9CB8           ; Unknown 9xxx instruction
$DC8    $37FC   SE       V7, #FC         ; Skip if V7 == 252
$DCA    $ADD6   LD       I, $DD6         ; Load DD6 into I
$DCC    $3128   SE       V1, #28         ; Skip if V1 == 40
$DCE    $E906   UNKNOWN  $E906           ; Unknown Exxx instruction
$DD0    $8DF6   SHR      VD              ; VD >>= 1, VF = LSB
$DD2    $8AB1   OR       VA, VB          ; VA |= VB
$DD4    $496A   SNE      V9, #6A         ; Skip if V9 != 106
$DD6    $481D   SNE      V8, #1D         ; Skip if V8 != 29
$DD8    $2F15   CALL     $F15            ; Call subroutine at F15
$DDA    $98F7   UNKNOWN  $98F7           ; Unknown 9xxx instruction
$DDC    $F2AB   UNKNOWN  F2AB            ; Unknown Fxxx instruction
$DDE    $CC2C   RND      VC, #2C         ; VC = random & 2C
$DE0    $2686   CALL     $686            ; Call subroutine at 686
$DE2    $AE6B   LD       I, $E6B         ; Load E6B into I
$DE4    $395C   SE       V9, #5C         ; Skip if V9 == 92
$DE6    $4F50   SNE      VF, #50         ; Skip if VF != 80
$DE8    $90E5   UNKNOWN  $90E5           ; Unknown 9xxx instruction
$DEA    $48C9   SNE      V8, #C9         ; Skip if V8 != 201
$DEC    $B041   JP       V0, $041        ; Jump to V0 + 041
$DEE    $AE8E   LD       I, $E8E         ; Load E8E into I
$DF0    $85AE   SHL      V5              ; V5 <<= 1, VF = MSB
$DF2    $94ED   UNKNOWN  $94ED           ; Unknown 9xxx instruction
$DF4    $C978   RND      V9, #78         ; V9 = random & 78
$DF6    $9009   UNKNOWN  $9009           ; Unknown 9xxx instruction
$DF8    $5A0B   UNKNOWN  $5A0B           ; Unknown 5xxx instruction
$DFA    $9A27   UNKNOWN  $9A27           ; Unknown 9xxx instruction
$DFC    $6D3E   LD       VD, #3E         ; Load 62 into VD
$DFE    $7741   ADD      V7, #41         ; Add 65 to V7
$E00    $11E8   JP       $1E8            ; Jump to 1E8
$E02    $E3AB   UNKNOWN  $E3AB           ; Unknown Exxx instruction
$E04    $E02D   UNKNOWN  $E02D           ; Unknown Exxx instruction
$E06    $8DF9   UNKNOWN  8DF9            ; Unknown 8xxx instruction
$E08    $4BD5   SNE      VB, #D5         ; Skip if VB != 213
$E0A    $CD37   RND      VD, #37         ; VD = random & 37
$E0C    $B1C9   JP       V0, $1C9        ; Jump to V0 + 1C9
$E0E    $6D10   LD       VD, #10         ; Load 16 into VD
$E10    $5848   UNKNOWN  $5848           ; Unknown 5xxx instruction
$E12    $D0B9   DRW      V0, VB, #9      ; Draw 9-byte sprite at V0, VB
$E14    $6DB3   LD       VD, #B3         ; Load 179 into VD
$E16    $E201   UNKNOWN  $E201           ; Unknown Exxx instruction
$E18    $914A   UNKNOWN  $914A           ; Unknown 9xxx instruction
$E1A    $9F2E   UNKNOWN  $9F2E           ; Unknown 9xxx instruction
$E1C    $B4EF   JP       V0, $4EF        ; Jump to V0 + 4EF
$E1E    $EFE2   UNKNOWN  $EFE2           ; Unknown Exxx instruction
$E20    $58F2   UNKNOWN  $58F2           ; Unknown 5xxx instruction
$E22    $363D   SE       V6, #3D         ; Skip if V6 == 61
$E24    $89BE   SHL      V9              ; V9 <<= 1, VF = MSB
$E26    $8D3C   UNKNOWN  8D3C            ; Unknown 8xxx instruction
$E28    $6930   LD       V9, #30         ; Load 48 into V9
$E2A    $5ADA   UNKNOWN  $5ADA           ; Unknown 5xxx instruction
$E2C    $F0D9   UNKNOWN  F0D9            ; Unknown Fxxx instruction
$E2E    $14EA   JP       $4EA            ; Jump to 4EA
$E30    $53FC   UNKNOWN  $53FC           ; Unknown 5xxx instruction
$E32    $D4F9   DRW      V4, VF, #9      ; Draw 9-byte sprite at V4, VF
$E34    $3C73   SE       VC, #73         ; Skip if VC == 115
$E36    $2056   CALL     $056            ; Call subroutine at 056
$E38    $DDDC   DRW      VD, VD, #C      ; Draw 12-byte sprite at VD, VD
$E3A    $B997   JP       V0, $997        ; Jump to V0 + 997
$E3C    $7F97   ADD      VF, #97         ; Add 151 to VF
$E3E    $66DD   LD       V6, #DD         ; Load 221 into V6
$E40    $AEF2   LD       I, $EF2         ; Load EF2 into I
$E42    $00F5   SYS      $0F5            ; System call to 0F5
$E44    $1056   JP       $056            ; Jump to 056
$E46    $6DCC   LD       VD, #CC         ; Load 204 into VD
$E48    $E7CB   UNKNOWN  $E7CB           ; Unknown Exxx instruction
$E4A    $594D   UNKNOWN  $594D           ; Unknown 5xxx instruction
$E4C    $16FA   JP       $6FA            ; Jump to 6FA
$E4E    $281F   CALL     $81F            ; Call subroutine at 81F
$E50    $C302   RND      V3, #02         ; V3 = random & 02
$E52    $7E75   ADD      VE, #75         ; Add 117 to VE
$E54    $5A04   UNKNOWN  $5A04           ; Unknown 5xxx instruction
$E56    $F0A8   UNKNOWN  F0A8            ; Unknown Fxxx instruction
$E58    $4425   SNE      V4, #25         ; Skip if V4 != 37
$E5A    $5869   UNKNOWN  $5869           ; Unknown 5xxx instruction
$E5C    $C9B3   RND      V9, #B3         ; V9 = random & B3
$E5E    $D7BC   DRW      V7, VB, #C      ; Draw 12-byte sprite at V7, VB
$E60    $9E51   UNKNOWN  $9E51           ; Unknown 9xxx instruction
$E62    $A19F   LD       I, $19F         ; Load 19F into I
$E64    $9EA9   UNKNOWN  $9EA9           ; Unknown 9xxx instruction
$E66    $3AC8   SE       VA, #C8         ; Skip if VA == 200
$E68    $A8FD   LD       I, $8FD         ; Load 8FD into I
$E6A    $0661   SYS      $661            ; System call to 661
$E6C    $C3C6   RND      V3, #C6         ; V3 = random & C6
$E6E    $03BD   SYS      $3BD            ; System call to 3BD
$E70    $8664   ADD      V6, V6          ; V6 += V6, VF = carry
$E72    $5B03   UNKNOWN  $5B03           ; Unknown 5xxx instruction
$E74    $D0CD   DRW      V0, VC, #D      ; Draw 13-byte sprite at V0, VC
$E76    $2293   CALL     $293            ; Call subroutine at 293
$E78    $A144   LD       I, $144         ; Load 144 into I
$E7A    $DA4E   DRW      VA, V4, #E      ; Draw 14-byte sprite at VA, V4
$E7C    $D90F   DRW      V9, V0, #F      ; Draw 15-byte sprite at V9, V0
$E7E    $058F   SYS      $58F            ; System call to 58F
$E80    $3F8E   SE       VF, #8E         ; Skip if VF == 142
$E82    $7712   ADD      V7, #12         ; Add 18 to V7
$E84    $1510   JP       $510            ; Jump to 510
$E86    $A19F   LD       I, $19F         ; Load 19F into I
$E88    $97A6   UNKNOWN  $97A6           ; Unknown 9xxx instruction
$E8A    $F0A4   UNKNOWN  F0A4            ; Unknown Fxxx instruction
$E8C    $B928   JP       V0, $928        ; Jump to V0 + 928
$E8E    $037D   SYS      $37D            ; System call to 37D
$E90    $9721   UNKNOWN  $9721           ; Unknown 9xxx instruction
$E92    $595F   UNKNOWN  $595F           ; Unknown 5xxx instruction
$E94    $A159   LD       I, $159         ; Load 159 into I
$E96    $7ADD   ADD      VA, #DD         ; Add 221 to VA
$E98    $F96D   UNKNOWN  F96D            ; Unknown Fxxx instruction
$E9A    $C177   RND      V1, #77         ; V1 = random & 77
$E9C    $7D0C   ADD      VD, #0C         ; Add 12 to VD
$E9E    $ED20   UNKNOWN  $ED20           ; Unknown Exxx instruction
$EA0    $41EC   SNE      V1, #EC         ; Skip if V1 != 236
$EA2    $758F   ADD      V5, #8F         ; Add 143 to V5
$EA4    $1067   JP       $067            ; Jump to 067
$EA6    $0427   SYS      $427            ; System call to 427
$EA8    $91FC   UNKNOWN  $91FC           ; Unknown 9xxx instruction
$EAA    $C676   RND      V6, #76         ; V6 = random & 76
$EAC    $907F   UNKNOWN  $907F           ; Unknown 9xxx instruction
$EAE    $A5D0   LD       I, $5D0         ; Load 5D0 into I
$EB0    $785C   ADD      V8, #5C         ; Add 92 to V8
$EB2    $276C   CALL     $76C            ; Call subroutine at 76C
$EB4    $4CA0   SNE      VC, #A0         ; Skip if VC != 160
$EB6    $F473   UNKNOWN  F473            ; Unknown Fxxx instruction
$EB8    $B751   JP       V0, $751        ; Jump to V0 + 751
$EBA    $C863   RND      V8, #63         ; V8 = random & 63
$EBC    $85BB   UNKNOWN  85BB            ; Unknown 8xxx instruction
$EBE    $9175   UNKNOWN  $9175           ; Unknown 9xxx instruction
$EC0    $47B1   SNE      V7, #B1         ; Skip if V7 != 177
$EC2    $8249   UNKNOWN  8249            ; Unknown 8xxx instruction
$EC4    $29E8   CALL     $9E8            ; Call subroutine at 9E8
$EC6    $0AE7   SYS      $AE7            ; System call to AE7
$EC8    $C6D0   RND      V6, #D0         ; V6 = random & D0
$ECA    $E1B6   UNKNOWN  $E1B6           ; Unknown Exxx instruction
$ECC    $F2CD   UNKNOWN  F2CD            ; Unknown Fxxx instruction
$ECE    $BAE3   JP       V0, $AE3        ; Jump to V0 + AE3
$ED0    $FC95   UNKNOWN  FC95            ; Unknown Fxxx instruction
$ED2    $1690   JP       $690            ; Jump to 690
$ED4    $19CF   JP       $9CF            ; Jump to 9CF
$ED6    $F868   UNKNOWN  F868            ; Unknown Fxxx instruction
$ED8    $E94F   UNKNOWN  $E94F           ; Unknown Exxx instruction
$EDA    $5163   UNKNOWN  $5163           ; Unknown 5xxx instruction
$EDC    $057C   SYS      $57C            ; System call to 57C
$EDE    $970F   UNKNOWN  $970F           ; Unknown 9xxx instruction
$EE0    $7F1D   ADD      VF, #1D         ; Add 29 to VF
$EE2    $1FCB   JP       $FCB            ; Jump to FCB
$EE4    $82EE   SHL      V2              ; V2 <<= 1, VF = MSB
$EE6    $6C14   LD       VC, #14         ; Load 20 into VC
$EE8    $2463   CALL     $463            ; Call subroutine at 463
$EEA    $2355   CALL     $355            ; Call subroutine at 355
$EEC    $04CD   SYS      $4CD            ; System call to 4CD
$EEE    $49D0   SNE      V9, #D0         ; Skip if V9 != 208
$EF0    $FAC8   UNKNOWN  FAC8            ; Unknown Fxxx instruction
$EF2    $818B   UNKNOWN  818B            ; Unknown 8xxx instruction
$EF4    $160A   JP       $60A            ; Jump to 60A
$EF6    $4ECF   SNE      VE, #CF         ; Skip if VE != 207
$EF8    $DDCF   DRW      VD, VC, #F      ; Draw 15-byte sprite at VD, VC
$EFA    $24B1   CALL     $4B1            ; Call subroutine at 4B1
$EFC    $A17F   LD       I, $17F         ; Load 17F into I
$EFE    $A411   LD       I, $411         ; Load 411 into I
$F00    $6351   LD       V3, #51         ; Load 81 into V3
$F02    $6949   LD       V9, #49         ; Load 73 into V9
$F04    $7E19   ADD      VE, #19         ; Add 25 to VE
$F06    $01D1   SYS      $1D1            ; System call to 1D1
$F08    $30AA   SE       V0, #AA         ; Skip if V0 == 170
$F0A    $7ABA   ADD      VA, #BA         ; Add 186 to VA
$F0C    $EEA8   UNKNOWN  $EEA8           ; Unknown Exxx instruction
$F0E    $A04A   LD       I, $04A         ; Load 04A into I
$F10    $AF92   LD       I, $F92         ; Load F92 into I
$F12    $65C4   LD       V5, #C4         ; Load 196 into V5
$F14    $B341   JP       V0, $341        ; Jump to V0 + 341
$F16    $D807   DRW      V8, V0, #7      ; Draw 7-byte sprite at V8, V0
$F18    $9EB6   UNKNOWN  $9EB6           ; Unknown 9xxx instruction
$F1A    $5D96   UNKNOWN  $5D96           ; Unknown 5xxx instruction
$F1C    $99F6   UNKNOWN  $99F6           ; Unknown 9xxx instruction
$F1E    $D735   DRW      V7, V3, #5      ; Draw 5-byte sprite at V7, V3
$F20    $0D25   SYS      $D25            ; System call to D25
$F22    $2C5D   CALL     $C5D            ; Call subroutine at C5D
$F24    $C1C7   RND      V1, #C7         ; V1 = random & C7
$F26    $6465   LD       V4, #65         ; Load 101 into V4
$F28    $1CF0   JP       $CF0            ; Jump to CF0
$F2A    $051F   SYS      $51F            ; System call to 51F
$F2C    $8404   ADD      V4, V0          ; V4 += V0, VF = carry
$F2E    $136E   JP       $36E            ; Jump to 36E
$F30    $9C61   UNKNOWN  $9C61           ; Unknown 9xxx instruction
$F32    $A4A1   LD       I, $4A1         ; Load 4A1 into I
$F34    $E7FC   UNKNOWN  $E7FC           ; Unknown Exxx instruction
$F36    $7EB2   ADD      VE, #B2         ; Add 178 to VE
$F38    $DAB5   DRW      VA, VB, #5      ; Draw 5-byte sprite at VA, VB
$F3A    $C42C   RND      V4, #2C         ; V4 = random & 2C
$F3C    $4C39   SNE      VC, #39         ; Skip if VC != 57
$F3E    $82ED   UNKNOWN  82ED            ; Unknown 8xxx instruction
$F40    $8AB3   XOR      VA, VB          ; VA ^= VB
$F42    $F2BD   UNKNOWN  F2BD            ; Unknown Fxxx instruction
$F44    $D867   DRW      V8, V6, #7      ; Draw 7-byte sprite at V8, V6
$F46    $6F08   LD       VF, #08         ; Load 8 into VF
$F48    $8481   OR       V4, V8          ; V4 |= V8
$F4A    $95CC   UNKNOWN  $95CC           ; Unknown 9xxx instruction
$F4C    $9139   UNKNOWN  $9139           ; Unknown 9xxx instruction
$F4E    $96C8   UNKNOWN  $96C8           ; Unknown 9xxx instruction
$F50    $721E   ADD      V2, #1E         ; Add 30 to V2
$F52    $9189   UNKNOWN  $9189           ; Unknown 9xxx instruction
$F54    $1174   JP       $174            ; Jump to 174
$F56    $E6C5   UNKNOWN  $E6C5           ; Unknown Exxx instruction
$F58    $B21B   JP       V0, $21B        ; Jump to V0 + 21B
$F5A    $FDB0   UNKNOWN  FDB0            ; Unknown Fxxx instruction
$F5C    $3684   SE       V6, #84         ; Skip if V6 == 132
$F5E    $D7C6   DRW      V7, VC, #6      ; Draw 6-byte sprite at V7, VC
$F60    $DF29   DRW      VF, V2, #9      ; Draw 9-byte sprite at VF, V2
$F62    $92BB   UNKNOWN  $92BB           ; Unknown 9xxx instruction
$F64    $D58A   DRW      V5, V8, #A      ; Draw 10-byte sprite at V5, V8
$F66    $4795   SNE      V7, #95         ; Skip if V7 != 149
$F68    $A656   LD       I, $656         ; Load 656 into I
$F6A    $445C   SNE      V4, #5C         ; Skip if V4 != 92
$F6C    $A92F   LD       I, $92F         ; Load 92F into I
$F6E    $E47D   UNKNOWN  $E47D           ; Unknown Exxx instruction
$F70    $A25C   LD       I, $25C         ; Load 25C into I
$F72    $9600   SNE      V6, V0          ; Skip if V6 != V0
$F74    $AAE7   LD       I, $AE7         ; Load AE7 into I
$F76    $F5D5   UNKNOWN  F5D5            ; Unknown Fxxx instruction
$F78    $34D5   SE       V4, #D5         ; Skip if V4 == 213
$F7A    $AE2D   LD       I, $E2D         ; Load E2D into I
$F7C    $E329   UNKNOWN  $E329           ; Unknown Exxx instruction
$F7E    $1798   JP       $798            ; Jump to 798
$F80    $EF50   UNKNOWN  $EF50           ; Unknown Exxx instruction
$F82    $CDFB   RND      VD, #FB         ; VD = random & FB
$F84    $F82D   UNKNOWN  F82D            ; Unknown Fxxx instruction
$F86    $11C1   JP       $1C1            ; Jump to 1C1
$F88    $B607   JP       V0, $607        ; Jump to V0 + 607
$F8A    $B7F2   JP       V0, $7F2        ; Jump to V0 + 7F2
$F8C    $4276   SNE      V2, #76         ; Skip if V2 != 118
$F8E    $9EE6   UNKNOWN  $9EE6           ; Unknown 9xxx instruction
$F90    $8431   OR       V4, V3          ; V4 |= V3
$F92    $81E0   LD       V1, VE          ; V1 = VE
$F94    $6FBC   LD       VF, #BC         ; Load 188 into VF
$F96    $E69D   UNKNOWN  $E69D           ; Unknown Exxx instruction
$F98    $49F9   SNE      V9, #F9         ; Skip if V9 != 249
$F9A    $5E58   UNKNOWN  $5E58           ; Unknown 5xxx instruction
$F9C    $B2B7   JP       V0, $2B7        ; Jump to V0 + 2B7
$F9E    $5344   UNKNOWN  $5344           ; Unknown 5xxx instruction
$FA0    $35AE   SE       V5, #AE         ; Skip if V5 == 174
$FA2    $70B6   ADD      V0, #B6         ; Add 182 to V0
$FA4    $28B5   CALL     $8B5            ; Call subroutine at 8B5
$FA6    $8960   LD       V9, V6          ; V9 = V6
$FA8    $AB06   LD       I, $B06         ; Load B06 into I
$FAA    $BE80   JP       V0, $E80        ; Jump to V0 + E80
$FAC    $8E45   SUB      VE, V4          ; VE -= V4, VF = !borrow
$FAE    $60D1   LD       V0, #D1         ; Load 209 into V0
$FB0    $B748   JP       V0, $748        ; Jump to V0 + 748
$FB2    $70CA   ADD      V0, #CA         ; Add 202 to V0
$FB4    $A2D4   LD       I, $2D4         ; Load 2D4 into I
$FB6    $E5BC   UNKNOWN  $E5BC           ; Unknown Exxx instruction
$FB8    $ED5D   UNKNOWN  $ED5D           ; Unknown Exxx instruction
$FBA    $6674   LD       V6, #74         ; Load 116 into V6
$FBC    $9EFE   UNKNOWN  $9EFE           ; Unknown 9xxx instruction
$FBE    $C26C   RND      V2, #6C         ; V2 = random & 6C
$FC0    $5279   UNKNOWN  $5279           ; Unknown 5xxx instruction
$FC2    $28CE   CALL     $8CE            ; Call subroutine at 8CE
$FC4    $F77A   UNKNOWN  F77A            ; Unknown Fxxx instruction
$FC6    $1626   JP       $626            ; Jump to 626
$FC8    $690C   LD       V9, #0C         ; Load 12 into V9
$FCA    $DDB1   DRW      VD, VB, #1      ; Draw 1-byte sprite at VD, VB
$FCC    $FEDD   UNKNOWN  FEDD            ; Unknown Fxxx instruction
$FCE    $3689   SE       V6, #89         ; Skip if V6 == 137
$FD0    $1EA2   JP       $EA2            ; Jump to EA2
$FD2    $83A3   XOR      V3, VA          ; V3 ^= VA
$FD4    $0B6B   SYS      $B6B            ; System call to B6B
$FD6    $A0D3   LD       I, $0D3         ; Load 0D3 into I
$FD8    $1D8D   JP       $D8D            ; Jump to D8D
$FDA    $0369   SYS      $369            ; System call to 369
$FDC    $82C8   UNKNOWN  82C8            ; Unknown 8xxx instruction
$FDE    $BEBB   JP       V0, $EBB        ; Jump to V0 + EBB
$FE0    $062C   SYS      $62C            ; System call to 62C
$FE2    $83E7   SUBN     V3, VE          ; V3 = VE - V3, VF = !borrow
$FE4    $8FB8   UNKNOWN  8FB8            ; Unknown 8xxx instruction
$FE6    $06BB   SYS      $6BB            ; System call to 6BB
$FE8    $80BC   UNKNOWN  80BC            ; Unknown 8xxx instruction
$FEA    $702D   ADD      V0, #2D         ; Add 45 to V0
$FEC    $8142   AND      V1, V4          ; V1 &= V4
$FEE    $E74C   UNKNOWN  $E74C           ; Unknown Exxx instruction
$FF0    $4D29   SNE      VD, #29         ; Skip if VD != 41
$FF2    $5A64   UNKNOWN  $5A64           ; Unknown 5xxx instruction
$FF4    $17A6   JP       $7A6            ; Jump to 7A6
$FF6    $6980   LD       V9, #80         ; Load 128 into V9
$FF8    $C4C2   RND      V4, #C2         ; V4 = random & C2
$FFA    $4381   SNE      V3, #81         ; Skip if V3 != 129
$FFC    $411E   SNE      V1, #1E         ; Skip if V1 != 30
$FFE    $1EC9   JP       $EC9            ; Jump to EC9

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 472 (26.3%)
  LD      : 255 (14.2%)
  SE      : 201 (11.2%)
  JP      : 196 (10.9%)
  SNE     : 122 ( 6.8%)
  CALL    : 110 ( 6.1%)
  SYS     : 104 ( 5.8%)
  ADD     : 102 ( 5.7%)
  DRW     :  94 ( 5.2%)
  RND     :  87 ( 4.9%)
  OR      :   9 ( 0.5%)
  AND     :   8 ( 0.4%)
  SHL     :   8 ( 0.4%)
  SHR     :   7 ( 0.4%)
  XOR     :   7 ( 0.4%)
  SUBN    :   6 ( 0.3%)
  SUB     :   3 ( 0.2%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 357 (19.9%)
Arithmetic Operations: 135 (7.5%)
