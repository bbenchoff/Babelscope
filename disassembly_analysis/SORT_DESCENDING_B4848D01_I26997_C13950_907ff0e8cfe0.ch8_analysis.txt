
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B4848D01_I26997_C13950_907ff0e8cfe0.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 4848
Instance: 26997
Direction: descending
Final Array: [183, 172, 161, 150, 139, 128, 117, 106]
Operations: R:0 W:8 C:620 S:4

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 119
Sort Array References:
  $202: LD I, $196 ; Load 196 into I
  $218: LD I, $FA4 ; Load FA4 into I
  $230: LD I, $79C ; Load 79C into I
  $25E: LD I, $DA2 ; Load DA2 into I
  $276: LD I, $59A ; Load 59A into I
  $2A4: LD I, $BA0 ; Load BA0 into I
  $2BC: LD I, $398 ; Load 398 into I
  $2EA: LD I, $99E ; Load 99E into I
  $302: LD I, $196 ; Load 196 into I
  $318: LD I, $61B ; Load 61B into I
  $330: LD I, $E9C ; Load E9C into I
  $366: LD I, $EFC ; Load EFC into I
  $3A4: LD I, $3CF ; Load 3CF into I
  $3BE: LD I, $445 ; Load 445 into I
  $3DC: LD I, $9AE ; Load 9AE into I
  $40C: LD I, $5C4 ; Load 5C4 into I
  $46E: LD I, $29A ; Load 29A into I
  $488: LD I, $D36 ; Load D36 into I
  $4B2: LD I, $16C ; Load 16C into I
  $4E8: LD I, $A32 ; Load A32 into I
  $534: LD I, $54E ; Load 54E into I
  $5B0: LD I, $487 ; Load 487 into I
  $5CA: LD I, $189 ; Load 189 into I
  $5E0: LD I, $EFA ; Load EFA into I
  $5EE: LD I, $F35 ; Load F35 into I
  $614: LD I, $D10 ; Load D10 into I
  $630: LD I, $46D ; Load 46D into I
  $63E: LD I, $165 ; Load 165 into I
  $640: LD I, $412 ; Load 412 into I
  $64C: LD I, $B45 ; Load B45 into I
  $664: LD I, $F32 ; Load F32 into I
  $6A0: LD I, $EEC ; Load EEC into I
  $6B6: LD I, $16F ; Load 16F into I
  $6D2: LD I, $852 ; Load 852 into I
  $6DA: LD I, $F3B ; Load F3B into I
  $6DE: LD I, $884 ; Load 884 into I
  $6F6: LD I, $5DD ; Load 5DD into I
  $700: LD I, $0E1 ; Load 0E1 into I
  $704: LD I, $D50 ; Load D50 into I
  $736: LD I, $192 ; Load 192 into I
  $73C: LD I, $3DA ; Load 3DA into I
  $762: LD I, $BC2 ; Load BC2 into I
  $78C: LD I, $187 ; Load 187 into I
  $794: LD I, $E6C ; Load E6C into I
  $7CC: LD I, $9A6 ; Load 9A6 into I
  $7E2: LD I, $131 ; Load 131 into I
  $81C: LD I, $8CF ; Load 8CF into I
  $832: LD I, $E2F ; Load E2F into I
  $83A: LD I, $5D1 ; Load 5D1 into I
  $860: LD I, $8D5 ; Load 8D5 into I
  $86C: LD I, $96F ; Load 96F into I
  $87C: LD I, $01A ; Load 01A into I
  $8B6: LD I, $F06 ; Load F06 into I
  $8CA: LD I, $1F9 ; Load 1F9 into I
  $8F4: LD I, $B84 ; Load B84 into I
  $8FC: LD I, $EDB ; Load EDB into I
  $91C: LD I, $CC8 ; Load CC8 into I
  $928: LD I, $470 ; Load 470 into I
  $958: LD I, $CC7 ; Load CC7 into I
  $962: LD I, $6BB ; Load 6BB into I
  $988: LD I, $E0A ; Load E0A into I
  $99E: LD I, $1CF ; Load 1CF into I
  $9B0: LD I, $8EA ; Load 8EA into I
  $9C6: LD I, $3B7 ; Load 3B7 into I
  $9CE: LD I, $553 ; Load 553 into I
  $9D6: LD I, $2AD ; Load 2AD into I
  $9E0: LD I, $25C ; Load 25C into I
  $9F8: LD I, $1F7 ; Load 1F7 into I
  $A0A: LD I, $04E ; Load 04E into I
  $A0E: LD I, $026 ; Load 026 into I
  $A78: LD I, $5A5 ; Load 5A5 into I
  $AA4: LD I, $DAC ; Load DAC into I
  $AE2: LD I, $502 ; Load 502 into I
  $AE6: LD I, $902 ; Load 902 into I
  $B3C: LD I, $B6A ; Load B6A into I
  $B56: LD I, $E17 ; Load E17 into I
  $B58: LD I, $5C9 ; Load 5C9 into I
  $B6A: LD I, $6E5 ; Load 6E5 into I
  $B72: LD I, $A22 ; Load A22 into I
  $B7C: LD I, $AEC ; Load AEC into I
  $B84: LD I, $AEA ; Load AEA into I
  $B90: LD I, $BE8 ; Load BE8 into I
  $BA8: LD I, $911 ; Load 911 into I
  $BAC: LD I, $E5A ; Load E5A into I
  $BBE: LD I, $BAE ; Load BAE into I
  $BFC: LD I, $992 ; Load 992 into I
  $C16: LD I, $514 ; Load 514 into I
  $C2E: LD I, $8BE ; Load 8BE into I
  $C40: LD I, $143 ; Load 143 into I
  $C62: LD I, $5E0 ; Load 5E0 into I
  $C92: LD I, $9A0 ; Load 9A0 into I
  $C94: LD I, $DBE ; Load DBE into I
  $C96: LD I, $2E2 ; Load 2E2 into I
  $D16: LD I, $423 ; Load 423 into I
  $D20: LD I, $C52 ; Load C52 into I
  $D52: LD I, $4BA ; Load 4BA into I
  $D54: LD I, $680 ; Load 680 into I
  $D9C: LD I, $056 ; Load 056 into I
  $DB0: LD I, $7AA ; Load 7AA into I
  $DB6: LD I, $7C5 ; Load 7C5 into I
  $DF2: LD I, $305 ; Load 305 into I
  $E16: LD I, $873 ; Load 873 into I
  $E28: LD I, $2AD ; Load 2AD into I
  $E36: LD I, $E16 ; Load E16 into I
  $E38: LD I, $6D1 ; Load 6D1 into I
  $E3E: LD I, $92A ; Load 92A into I
  $E52: LD I, $230 ; Load 230 into I
  $E82: LD I, $94B ; Load 94B into I
  $EAC: LD I, $59D ; Load 59D into I
  $F08: LD I, $790 ; Load 790 into I
  $F5E: LD I, $A5A ; Load A5A into I
  $F70: LD I, $616 ; Load 616 into I
  $F7E: LD I, $E96 ; Load E96 into I
  $F8A: LD I, $A9F ; Load A9F into I
  $F8E: ADD I, V6 ; I ADDRESS MANIPULATION
  $F90: LD I, $4E4 ; Load 4E4 into I
  $F9E: LD I, $0C9 ; Load 0C9 into I
  $FAE: LD I, $90B ; Load 90B into I
  $FF6: LD I, $360 ; Load 360 into I

CONTROL FLOW ANALYSIS:
Jumps: 224
Calls: 119
Branches: 249
Loops: 112
Loop Structures:
  $2B2 -> $106 (backward jump)
  $2D2 -> $1A6 (backward jump)
  $362 -> $2B8 (backward jump)
  $3B2 -> $07F (backward jump)
  $3FA -> $186 (backward jump)
  $406 -> $0E1 (backward jump)
  $416 -> $26A (backward jump)
  $468 -> $02A (backward jump)
  $4A2 -> $2AE (backward jump)
  $520 -> $295 (backward jump)
  $530 -> $443 (backward jump)
  $546 -> $06C (backward jump)
  $60E -> $44C (backward jump)
  $686 -> $149 (backward jump)
  $69C -> $5A4 (backward jump)
  $6D6 -> $37D (backward jump)
  $70E -> $343 (backward jump)
  $72E -> $58E (backward jump)
  $732 -> $610 (backward jump)
  $74A -> $51A (backward jump)
  $766 -> $147 (backward jump)
  $768 -> $163 (backward jump)
  $790 -> $01A (backward jump)
  $7A0 -> $3CF (backward jump)
  $7C2 -> $66F (backward jump)
  $7CE -> $512 (backward jump)
  $81E -> $294 (backward jump)
  $82A -> $57E (backward jump)
  $838 -> $299 (backward jump)
  $840 -> $396 (backward jump)
  $846 -> $493 (backward jump)
  $84A -> $30E (backward jump)
  $874 -> $3D8 (backward jump)
  $882 -> $749 (backward jump)
  $8A8 -> $240 (backward jump)
  $8F2 -> $5EE (backward jump)
  $8FE -> $7CB (backward jump)
  $926 -> $926 (backward jump)
  $94E -> $32A (backward jump)
  $96C -> $8AB (backward jump)
  $96E -> $410 (backward jump)
  $976 -> $8FD (backward jump)
  $97E -> $571 (backward jump)
  $99A -> $395 (backward jump)
  $9B8 -> $36A (backward jump)
  $9D2 -> $694 (backward jump)
  $9DA -> $6D4 (backward jump)
  $A0C -> $8C8 (backward jump)
  $A44 -> $06A (backward jump)
  $A5E -> $167 (backward jump)
  $A64 -> $5D3 (backward jump)
  $A94 -> $1F0 (backward jump)
  $A9A -> $4C3 (backward jump)
  $AC2 -> $0C1 (backward jump)
  $B24 -> $23D (backward jump)
  $B2E -> $81D (backward jump)
  $B34 -> $2BD (backward jump)
  $B92 -> $B77 (backward jump)
  $B9E -> $430 (backward jump)
  $BC2 -> $92F (backward jump)
  $BC6 -> $945 (backward jump)
  $BF6 -> $6F8 (backward jump)
  $C12 -> $48F (backward jump)
  $C28 -> $B88 (backward jump)
  $C32 -> $169 (backward jump)
  $C36 -> $109 (backward jump)
  $C42 -> $677 (backward jump)
  $C4A -> $161 (backward jump)
  $C98 -> $B73 (backward jump)
  $CA4 -> $241 (backward jump)
  $CFA -> $BD6 (backward jump)
  $D02 -> $605 (backward jump)
  $D2C -> $551 (backward jump)
  $D64 -> $6B3 (backward jump)
  $D70 -> $7F0 (backward jump)
  $D74 -> $8E1 (backward jump)
  $D86 -> $0E8 (backward jump)
  $DA2 -> $3B1 (backward jump)
  $DAE -> $CDE (backward jump)
  $DB2 -> $0A2 (backward jump)
  $DC2 -> $331 (backward jump)
  $E0A -> $062 (backward jump)
  $E12 -> $22A (backward jump)
  $E2C -> $DF4 (backward jump)
  $E44 -> $10F (backward jump)
  $E4C -> $CD2 (backward jump)
  $E5C -> $825 (backward jump)
  $E70 -> $50D (backward jump)
  $E8A -> $CA3 (backward jump)
  $E94 -> $35E (backward jump)
  $EA0 -> $22D (backward jump)
  $EA4 -> $31D (backward jump)
  $EB8 -> $C8A (backward jump)
  $ECC -> $D1D (backward jump)
  $ECE -> $A98 (backward jump)
  $EE0 -> $CC2 (backward jump)
  $F04 -> $C2C (backward jump)
  $F06 -> $D40 (backward jump)
  $F1E -> $F0E (backward jump)
  $F2C -> $BBB (backward jump)
  $F3A -> $B19 (backward jump)
  $F3E -> $43C (backward jump)
  $F44 -> $BFB (backward jump)
  $F46 -> $E3A (backward jump)
  $F4A -> $065 (backward jump)
  $F58 -> $0AE (backward jump)
  $F7C -> $7BE (backward jump)
  $F86 -> $304 (backward jump)
  $FAC -> $B35 (backward jump)
  $FB2 -> $464 (backward jump)
  $FD4 -> $875 (backward jump)
  $FFA -> $4E9 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $B7AC   JP       V0, $7AC        ; Jump to V0 + 7AC
$202    $A196   LD       I, $196         ; Load 196 into I
$204    $8B80   LD       VB, V8          ; VB = V8
$206    $756A   ADD      V5, #6A         ; Add 106 to V5
$208    $5F54   UNKNOWN  $5F54           ; Unknown 5xxx instruction
$20A    $493E   SNE      V9, #3E         ; Skip if V9 != 62
$20C    $3328   SE       V3, #28         ; Skip if V3 == 40
$20E    $1D12   JP       $D12            ; Jump to D12
$210    $07FC   SYS      $7FC            ; System call to 7FC
$212    $F1E6   UNKNOWN  F1E6            ; Unknown Fxxx instruction
$214    $DBD0   DRW      VB, VD, #0      ; Draw 0-byte sprite at VB, VD
$216    $C5BA   RND      V5, #BA         ; V5 = random & BA
$218    $AFA4   LD       I, $FA4         ; Load FA4 into I
$21A    $998E   UNKNOWN  $998E           ; Unknown 9xxx instruction
$21C    $8378   UNKNOWN  8378            ; Unknown 8xxx instruction
$21E    $6D62   LD       VD, #62         ; Load 98 into VD
$220    $574C   UNKNOWN  $574C           ; Unknown 5xxx instruction
$222    $4136   SNE      V1, #36         ; Skip if V1 != 54
$224    $2B20   CALL     $B20            ; Call subroutine at B20
$226    $150A   JP       $50A            ; Jump to 50A
$228    $FFF4   UNKNOWN  FFF4            ; Unknown Fxxx instruction
$22A    $E9DE   UNKNOWN  $E9DE           ; Unknown Exxx instruction
$22C    $D3C8   DRW      V3, VC, #8      ; Draw 8-byte sprite at V3, VC
$22E    $BDB2   JP       V0, $DB2        ; Jump to V0 + DB2
$230    $A79C   LD       I, $79C         ; Load 79C into I
$232    $9186   UNKNOWN  $9186           ; Unknown 9xxx instruction
$234    $7B70   ADD      VB, #70         ; Add 112 to VB
$236    $655A   LD       V5, #5A         ; Load 90 into V5
$238    $4F44   SNE      VF, #44         ; Skip if VF != 68
$23A    $392E   SE       V9, #2E         ; Skip if V9 == 46
$23C    $2318   CALL     $318            ; Call subroutine at 318
$23E    $0D02   SYS      $D02            ; System call to D02
$240    $F7EC   UNKNOWN  F7EC            ; Unknown Fxxx instruction
$242    $E1D6   UNKNOWN  $E1D6           ; Unknown Exxx instruction
$244    $CBC0   RND      VB, #C0         ; VB = random & C0
$246    $B5AA   JP       V0, $5AA        ; Jump to V0 + 5AA
$248    $9F94   UNKNOWN  $9F94           ; Unknown 9xxx instruction
$24A    $897E   SHL      V9              ; V9 <<= 1, VF = MSB
$24C    $7368   ADD      V3, #68         ; Add 104 to V3
$24E    $5D52   UNKNOWN  $5D52           ; Unknown 5xxx instruction
$250    $473C   SNE      V7, #3C         ; Skip if V7 != 60
$252    $3126   SE       V1, #26         ; Skip if V1 == 38
$254    $1B10   JP       $B10            ; Jump to B10
$256    $05FA   SYS      $5FA            ; System call to 5FA
$258    $EFE4   UNKNOWN  $EFE4           ; Unknown Exxx instruction
$25A    $D9CE   DRW      V9, VC, #E      ; Draw 14-byte sprite at V9, VC
$25C    $C3B8   RND      V3, #B8         ; V3 = random & B8
$25E    $ADA2   LD       I, $DA2         ; Load DA2 into I
$260    $978C   UNKNOWN  $978C           ; Unknown 9xxx instruction
$262    $8176   SHR      V1              ; V1 >>= 1, VF = LSB
$264    $6B60   LD       VB, #60         ; Load 96 into VB
$266    $554A   UNKNOWN  $554A           ; Unknown 5xxx instruction
$268    $3F34   SE       VF, #34         ; Skip if VF == 52
$26A    $291E   CALL     $91E            ; Call subroutine at 91E
$26C    $1308   JP       $308            ; Jump to 308
$26E    $FDF2   UNKNOWN  FDF2            ; Unknown Fxxx instruction
$270    $E7DC   UNKNOWN  $E7DC           ; Unknown Exxx instruction
$272    $D1C6   DRW      V1, VC, #6      ; Draw 6-byte sprite at V1, VC
$274    $BBB0   JP       V0, $BB0        ; Jump to V0 + BB0
$276    $A59A   LD       I, $59A         ; Load 59A into I
$278    $8F84   ADD      VF, V8          ; VF += V8, VF = carry
$27A    $796E   ADD      V9, #6E         ; Add 110 to V9
$27C    $6358   LD       V3, #58         ; Load 88 into V3
$27E    $4D42   SNE      VD, #42         ; Skip if VD != 66
$280    $372C   SE       V7, #2C         ; Skip if V7 == 44
$282    $2116   CALL     $116            ; Call subroutine at 116
$284    $0B00   SYS      $B00            ; System call to B00
$286    $F5EA   UNKNOWN  F5EA            ; Unknown Fxxx instruction
$288    $DFD4   DRW      VF, VD, #4      ; Draw 4-byte sprite at VF, VD
$28A    $C9BE   RND      V9, #BE         ; V9 = random & BE
$28C    $B3A8   JP       V0, $3A8        ; Jump to V0 + 3A8
$28E    $9D92   UNKNOWN  $9D92           ; Unknown 9xxx instruction
$290    $877C   UNKNOWN  877C            ; Unknown 8xxx instruction
$292    $7166   ADD      V1, #66         ; Add 102 to V1
$294    $5B50   SE       VB, V5          ; Skip if VB == V5
$296    $453A   SNE      V5, #3A         ; Skip if V5 != 58
$298    $2F24   CALL     $F24            ; Call subroutine at F24
$29A    $190E   JP       $90E            ; Jump to 90E
$29C    $03F8   SYS      $3F8            ; System call to 3F8
$29E    $EDE2   UNKNOWN  $EDE2           ; Unknown Exxx instruction
$2A0    $D7CC   DRW      V7, VC, #C      ; Draw 12-byte sprite at V7, VC
$2A2    $C1B6   RND      V1, #B6         ; V1 = random & B6
$2A4    $ABA0   LD       I, $BA0         ; Load BA0 into I
$2A6    $958A   UNKNOWN  $958A           ; Unknown 9xxx instruction
$2A8    $7F74   ADD      VF, #74         ; Add 116 to VF
$2AA    $695E   LD       V9, #5E         ; Load 94 into V9
$2AC    $5348   UNKNOWN  $5348           ; Unknown 5xxx instruction
$2AE    $3D32   SE       VD, #32         ; Skip if VD == 50
$2B0    $271C   CALL     $71C            ; Call subroutine at 71C
$2B2    $1106   JP       $106            ; Jump to 106
$2B4    $FBF0   UNKNOWN  FBF0            ; Unknown Fxxx instruction
$2B6    $E5DA   UNKNOWN  $E5DA           ; Unknown Exxx instruction
$2B8    $CFC4   RND      VF, #C4         ; VF = random & C4
$2BA    $B9AE   JP       V0, $9AE        ; Jump to V0 + 9AE
$2BC    $A398   LD       I, $398         ; Load 398 into I
$2BE    $8D82   AND      VD, V8          ; VD &= V8
$2C0    $776C   ADD      V7, #6C         ; Add 108 to V7
$2C2    $6156   LD       V1, #56         ; Load 86 into V1
$2C4    $4B40   SNE      VB, #40         ; Skip if VB != 64
$2C6    $352A   SE       V5, #2A         ; Skip if V5 == 42
$2C8    $1F14   JP       $F14            ; Jump to F14
$2CA    $09FE   SYS      $9FE            ; System call to 9FE
$2CC    $F3E8   UNKNOWN  F3E8            ; Unknown Fxxx instruction
$2CE    $DDD2   DRW      VD, VD, #2      ; Draw 2-byte sprite at VD, VD
$2D0    $C7BC   RND      V7, #BC         ; V7 = random & BC
$2D2    $B1A6   JP       V0, $1A6        ; Jump to V0 + 1A6
$2D4    $9B90   SNE      VB, V9          ; Skip if VB != V9
$2D6    $857A   UNKNOWN  857A            ; Unknown 8xxx instruction
$2D8    $6F64   LD       VF, #64         ; Load 100 into VF
$2DA    $594E   UNKNOWN  $594E           ; Unknown 5xxx instruction
$2DC    $4338   SNE      V3, #38         ; Skip if V3 != 56
$2DE    $2D22   CALL     $D22            ; Call subroutine at D22
$2E0    $170C   JP       $70C            ; Jump to 70C
$2E2    $01F6   SYS      $1F6            ; System call to 1F6
$2E4    $EBE0   UNKNOWN  $EBE0           ; Unknown Exxx instruction
$2E6    $D5CA   DRW      V5, VC, #A      ; Draw 10-byte sprite at V5, VC
$2E8    $BFB4   JP       V0, $FB4        ; Jump to V0 + FB4
$2EA    $A99E   LD       I, $99E         ; Load 99E into I
$2EC    $9388   UNKNOWN  $9388           ; Unknown 9xxx instruction
$2EE    $7D72   ADD      VD, #72         ; Add 114 to VD
$2F0    $675C   LD       V7, #5C         ; Load 92 into V7
$2F2    $5146   UNKNOWN  $5146           ; Unknown 5xxx instruction
$2F4    $3B30   SE       VB, #30         ; Skip if VB == 48
$2F6    $251A   CALL     $51A            ; Call subroutine at 51A
$2F8    $0F04   SYS      $F04            ; System call to F04
$2FA    $F9EE   UNKNOWN  F9EE            ; Unknown Fxxx instruction
$2FC    $E3D8   UNKNOWN  $E3D8           ; Unknown Exxx instruction
$2FE    $CDC2   RND      VD, #C2         ; VD = random & C2
$300    $B7AC   JP       V0, $7AC        ; Jump to V0 + 7AC
$302    $A196   LD       I, $196         ; Load 196 into I
$304    $8B80   LD       VB, V8          ; VB = V8
$306    $756A   ADD      V5, #6A         ; Add 106 to V5
$308    $5F54   UNKNOWN  $5F54           ; Unknown 5xxx instruction
$30A    $493E   SNE      V9, #3E         ; Skip if V9 != 62
$30C    $3328   SE       V3, #28         ; Skip if V3 == 40
$30E    $1D12   JP       $D12            ; Jump to D12
$310    $07FC   SYS      $7FC            ; System call to 7FC
$312    $F1E6   UNKNOWN  F1E6            ; Unknown Fxxx instruction
$314    $DBD0   DRW      VB, VD, #0      ; Draw 0-byte sprite at VB, VD
$316    $594D   UNKNOWN  $594D           ; Unknown 5xxx instruction
$318    $A61B   LD       I, $61B         ; Load 61B into I
$31A    $6982   LD       V9, #82         ; Load 130 into V9
$31C    $D927   DRW      V9, V2, #7      ; Draw 7-byte sprite at V9, V2
$31E    $4485   SNE      V4, #85         ; Skip if V4 != 133
$320    $D0A5   DRW      V0, VA, #5      ; Draw 5-byte sprite at V0, VA
$322    $1A3C   JP       $A3C            ; Jump to A3C
$324    $D888   DRW      V8, V8, #8      ; Draw 8-byte sprite at V8, V8
$326    $7AE8   ADD      VA, #E8         ; Add 232 to VA
$328    $30BD   SE       V0, #BD         ; Skip if V0 == 189
$32A    $08B0   SYS      $8B0            ; System call to 8B0
$32C    $E3D4   UNKNOWN  $E3D4           ; Unknown Exxx instruction
$32E    $884D   UNKNOWN  884D            ; Unknown 8xxx instruction
$330    $AE9C   LD       I, $E9C         ; Load E9C into I
$332    $2C6B   CALL     $C6B            ; Call subroutine at C6B
$334    $482D   SNE      V8, #2D         ; Skip if V8 != 45
$336    $E96C   UNKNOWN  $E96C           ; Unknown Exxx instruction
$338    $EE14   UNKNOWN  $EE14           ; Unknown Exxx instruction
$33A    $EE0F   UNKNOWN  $EE0F           ; Unknown Exxx instruction
$33C    $DD91   DRW      VD, V9, #1      ; Draw 1-byte sprite at VD, V9
$33E    $4578   SNE      V5, #78         ; Skip if V5 != 120
$340    $8C0E   SHL      VC              ; VC <<= 1, VF = MSB
$342    $E44D   UNKNOWN  $E44D           ; Unknown Exxx instruction
$344    $EB01   UNKNOWN  $EB01           ; Unknown Exxx instruction
$346    $60EF   LD       V0, #EF         ; Load 239 into V0
$348    $2907   CALL     $907            ; Call subroutine at 907
$34A    $1DF5   JP       $DF5            ; Jump to DF5
$34C    $8592   AND      V5, V9          ; V5 &= V9
$34E    $93E9   UNKNOWN  $93E9           ; Unknown 9xxx instruction
$350    $BFDD   JP       V0, $FDD        ; Jump to V0 + FDD
$352    $4832   SNE      V8, #32         ; Skip if V8 != 50
$354    $EF4C   UNKNOWN  $EF4C           ; Unknown Exxx instruction
$356    $42F6   SNE      V2, #F6         ; Skip if V2 != 246
$358    $B9A9   JP       V0, $9A9        ; Jump to V0 + 9A9
$35A    $B56C   JP       V0, $56C        ; Jump to V0 + 56C
$35C    $E654   UNKNOWN  $E654           ; Unknown Exxx instruction
$35E    $8077   SUBN     V0, V7          ; V0 = V7 - V0, VF = !borrow
$360    $FD4E   UNKNOWN  FD4E            ; Unknown Fxxx instruction
$362    $B2B8   JP       V0, $2B8        ; Jump to V0 + 2B8
$364    $5844   UNKNOWN  $5844           ; Unknown 5xxx instruction
$366    $AEFC   LD       I, $EFC         ; Load EFC into I
$368    $07B2   SYS      $7B2            ; System call to 7B2
$36A    $D508   DRW      V5, V0, #8      ; Draw 8-byte sprite at V5, V0
$36C    $05DB   SYS      $5DB            ; System call to 5DB
$36E    $9C4B   UNKNOWN  $9C4B           ; Unknown 9xxx instruction
$370    $86E8   UNKNOWN  86E8            ; Unknown 8xxx instruction
$372    $DEC3   DRW      VE, VC, #3      ; Draw 3-byte sprite at VE, VC
$374    $BDF1   JP       V0, $DF1        ; Jump to V0 + DF1
$376    $773B   ADD      V7, #3B         ; Add 59 to V7
$378    $1A62   JP       $A62            ; Jump to A62
$37A    $4B99   SNE      VB, #99         ; Skip if VB != 153
$37C    $E022   UNKNOWN  $E022           ; Unknown Exxx instruction
$37E    $833E   SHL      V3              ; V3 <<= 1, VF = MSB
$380    $4F84   SNE      VF, #84         ; Skip if VF != 132
$382    $84EE   SHL      V4              ; V4 <<= 1, VF = MSB
$384    $0647   SYS      $647            ; System call to 647
$386    $CAE7   RND      VA, #E7         ; VA = random & E7
$388    $24AA   CALL     $4AA            ; Call subroutine at 4AA
$38A    $DE7A   DRW      VE, V7, #A      ; Draw 10-byte sprite at VE, V7
$38C    $0AC0   SYS      $AC0            ; System call to AC0
$38E    $1C4A   JP       $C4A            ; Jump to C4A
$390    $8005   SUB      V0, V0          ; V0 -= V0, VF = !borrow
$392    $FDED   UNKNOWN  FDED            ; Unknown Fxxx instruction
$394    $061E   SYS      $61E            ; System call to 61E
$396    $965E   UNKNOWN  $965E           ; Unknown 9xxx instruction
$398    $6BE5   LD       VB, #E5         ; Load 229 into VB
$39A    $E6D7   UNKNOWN  $E6D7           ; Unknown Exxx instruction
$39C    $D088   DRW      V0, V8, #8      ; Draw 8-byte sprite at V0, V8
$39E    $5D13   UNKNOWN  $5D13           ; Unknown 5xxx instruction
$3A0    $BA2B   JP       V0, $A2B        ; Jump to V0 + A2B
$3A2    $2834   CALL     $834            ; Call subroutine at 834
$3A4    $A3CF   LD       I, $3CF         ; Load 3CF into I
$3A6    $F637   UNKNOWN  F637            ; Unknown Fxxx instruction
$3A8    $6587   LD       V5, #87         ; Load 135 into V5
$3AA    $CAF5   RND      VA, #F5         ; VA = random & F5
$3AC    $743A   ADD      V4, #3A         ; Add 58 to V4
$3AE    $44C4   SNE      V4, #C4         ; Skip if V4 != 196
$3B0    $7A9B   ADD      VA, #9B         ; Add 155 to VA
$3B2    $107F   JP       $07F            ; Jump to 07F
$3B4    $485B   SNE      V8, #5B         ; Skip if V8 != 91
$3B6    $EBE6   UNKNOWN  $EBE6           ; Unknown Exxx instruction
$3B8    $253B   CALL     $53B            ; Call subroutine at 53B
$3BA    $7E2A   ADD      VE, #2A         ; Add 42 to VE
$3BC    $2EC7   CALL     $EC7            ; Call subroutine at EC7
$3BE    $A445   LD       I, $445         ; Load 445 into I
$3C0    $F93E   UNKNOWN  F93E            ; Unknown Fxxx instruction
$3C2    $9612   UNKNOWN  $9612           ; Unknown 9xxx instruction
$3C4    $2F97   CALL     $F97            ; Call subroutine at F97
$3C6    $1AAF   JP       $AAF            ; Jump to AAF
$3C8    $2ACF   CALL     $ACF            ; Call subroutine at ACF
$3CA    $081B   SYS      $81B            ; System call to 81B
$3CC    $47BF   SNE      V7, #BF         ; Skip if V7 != 191
$3CE    $CAF8   RND      VA, #F8         ; VA = random & F8
$3D0    $FB90   UNKNOWN  FB90            ; Unknown Fxxx instruction
$3D2    $28E6   CALL     $8E6            ; Call subroutine at 8E6
$3D4    $EC19   UNKNOWN  $EC19           ; Unknown Exxx instruction
$3D6    $9992   UNKNOWN  $9992           ; Unknown 9xxx instruction
$3D8    $4592   SNE      V5, #92         ; Skip if V5 != 146
$3DA    $01AB   SYS      $1AB            ; System call to 1AB
$3DC    $A9AE   LD       I, $9AE         ; Load 9AE into I
$3DE    $205A   CALL     $05A            ; Call subroutine at 05A
$3E0    $B620   JP       V0, $620        ; Jump to V0 + 620
$3E2    $D011   DRW      V0, V1, #1      ; Draw 1-byte sprite at V0, V1
$3E4    $5F85   UNKNOWN  $5F85           ; Unknown 5xxx instruction
$3E6    $0D80   SYS      $D80            ; System call to D80
$3E8    $F396   UNKNOWN  F396            ; Unknown Fxxx instruction
$3EA    $05BA   SYS      $5BA            ; System call to 5BA
$3EC    $8A19   UNKNOWN  8A19            ; Unknown 8xxx instruction
$3EE    $1B54   JP       $B54            ; Jump to B54
$3F0    $8B23   XOR      VB, V2          ; VB ^= V2
$3F2    $FD30   UNKNOWN  FD30            ; Unknown Fxxx instruction
$3F4    $C627   RND      V6, #27         ; V6 = random & 27
$3F6    $E85F   UNKNOWN  $E85F           ; Unknown Exxx instruction
$3F8    $1B3B   JP       $B3B            ; Jump to B3B
$3FA    $B186   JP       V0, $186        ; Jump to V0 + 186
$3FC    $0C8E   SYS      $C8E            ; System call to C8E
$3FE    $8FBB   UNKNOWN  8FBB            ; Unknown 8xxx instruction
$400    $BC07   JP       V0, $C07        ; Jump to V0 + C07
$402    $1520   JP       $520            ; Jump to 520
$404    $8253   XOR      V2, V5          ; V2 ^= V5
$406    $10E1   JP       $0E1            ; Jump to 0E1
$408    $537F   UNKNOWN  $537F           ; Unknown 5xxx instruction
$40A    $5204   UNKNOWN  $5204           ; Unknown 5xxx instruction
$40C    $A5C4   LD       I, $5C4         ; Load 5C4 into I
$40E    $D7F8   DRW      V7, VF, #8      ; Draw 8-byte sprite at V7, VF
$410    $5FAD   UNKNOWN  $5FAD           ; Unknown 5xxx instruction
$412    $BC4D   JP       V0, $C4D        ; Jump to V0 + C4D
$414    $F8D1   UNKNOWN  F8D1            ; Unknown Fxxx instruction
$416    $126A   JP       $26A            ; Jump to 26A
$418    $8318   UNKNOWN  8318            ; Unknown 8xxx instruction
$41A    $E475   UNKNOWN  $E475           ; Unknown Exxx instruction
$41C    $BFD6   JP       V0, $FD6        ; Jump to V0 + FD6
$41E    $EBBD   UNKNOWN  $EBBD           ; Unknown Exxx instruction
$420    $4D9B   SNE      VD, #9B         ; Skip if VD != 155
$422    $4CE2   SNE      VC, #E2         ; Skip if VC != 226
$424    $9B75   UNKNOWN  $9B75           ; Unknown 9xxx instruction
$426    $D083   DRW      V0, V8, #3      ; Draw 3-byte sprite at V0, V8
$428    $B7E6   JP       V0, $7E6        ; Jump to V0 + 7E6
$42A    $999E   UNKNOWN  $999E           ; Unknown 9xxx instruction
$42C    $CEEE   RND      VE, #EE         ; VE = random & EE
$42E    $4BBF   SNE      VB, #BF         ; Skip if VB != 191
$430    $7343   ADD      V3, #43         ; Add 67 to V3
$432    $792D   ADD      V9, #2D         ; Add 45 to V9
$434    $8F13   XOR      VF, V1          ; VF ^= V1
$436    $3ED2   SE       VE, #D2         ; Skip if VE == 210
$438    $0268   SYS      $268            ; System call to 268
$43A    $3E01   SE       VE, #01         ; Skip if VE == 1
$43C    $35C6   SE       V5, #C6         ; Skip if V5 == 198
$43E    $31F0   SE       V1, #F0         ; Skip if V1 == 240
$440    $557A   UNKNOWN  $557A           ; Unknown 5xxx instruction
$442    $E2BC   UNKNOWN  $E2BC           ; Unknown Exxx instruction
$444    $D60B   DRW      V6, V0, #B      ; Draw 11-byte sprite at V6, V0
$446    $3682   SE       V6, #82         ; Skip if V6 == 130
$448    $61EA   LD       V1, #EA         ; Load 234 into V1
$44A    $0EDF   SYS      $EDF            ; System call to EDF
$44C    $358A   SE       V5, #8A         ; Skip if V5 == 138
$44E    $64FE   LD       V4, #FE         ; Load 254 into V4
$450    $3C61   SE       VC, #61         ; Skip if VC == 97
$452    $B7ED   JP       V0, $7ED        ; Jump to V0 + 7ED
$454    $9FF3   UNKNOWN  $9FF3           ; Unknown 9xxx instruction
$456    $5F83   UNKNOWN  $5F83           ; Unknown 5xxx instruction
$458    $3A9B   SE       VA, #9B         ; Skip if VA == 155
$45A    $B826   JP       V0, $826        ; Jump to V0 + 826
$45C    $8948   UNKNOWN  8948            ; Unknown 8xxx instruction
$45E    $7CBA   ADD      VC, #BA         ; Add 186 to VC
$460    $2E2B   CALL     $E2B            ; Call subroutine at E2B
$462    $209A   CALL     $09A            ; Call subroutine at 09A
$464    $EDEC   UNKNOWN  $EDEC           ; Unknown Exxx instruction
$466    $57BE   UNKNOWN  $57BE           ; Unknown 5xxx instruction
$468    $B02A   JP       V0, $02A        ; Jump to V0 + 02A
$46A    $907C   UNKNOWN  $907C           ; Unknown 9xxx instruction
$46C    $1B29   JP       $B29            ; Jump to B29
$46E    $A29A   LD       I, $29A         ; Load 29A into I
$470    $B486   JP       V0, $486        ; Jump to V0 + 486
$472    $65E5   LD       V5, #E5         ; Load 229 into V5
$474    $8158   UNKNOWN  8158            ; Unknown 8xxx instruction
$476    $2EF3   CALL     $EF3            ; Call subroutine at EF3
$478    $955C   UNKNOWN  $955C           ; Unknown 9xxx instruction
$47A    $785D   ADD      V8, #5D         ; Add 93 to V8
$47C    $E2C7   UNKNOWN  $E2C7           ; Unknown Exxx instruction
$47E    $5583   UNKNOWN  $5583           ; Unknown 5xxx instruction
$480    $6D9F   LD       VD, #9F         ; Load 159 into VD
$482    $C7E9   RND      V7, #E9         ; V7 = random & E9
$484    $3CEC   SE       VC, #EC         ; Skip if VC == 236
$486    $0205   SYS      $205            ; System call to 205
$488    $AD36   LD       I, $D36         ; Load D36 into I
$48A    $8886   SHR      V8              ; V8 >>= 1, VF = LSB
$48C    $2F4E   CALL     $F4E            ; Call subroutine at F4E
$48E    $1592   JP       $592            ; Jump to 592
$490    $C840   RND      V8, #40         ; V8 = random & 40
$492    $42B8   SNE      V2, #B8         ; Skip if V2 != 184
$494    $7402   ADD      V4, #02         ; Add 2 to V4
$496    $FA7B   UNKNOWN  FA7B            ; Unknown Fxxx instruction
$498    $4E8B   SNE      VE, #8B         ; Skip if VE != 139
$49A    $5C4D   UNKNOWN  $5C4D           ; Unknown 5xxx instruction
$49C    $8056   SHR      V0              ; V0 >>= 1, VF = LSB
$49E    $E8FB   UNKNOWN  $E8FB           ; Unknown Exxx instruction
$4A0    $1BF5   JP       $BF5            ; Jump to BF5
$4A2    $12AE   JP       $2AE            ; Jump to 2AE
$4A4    $DD9E   DRW      VD, V9, #E      ; Draw 14-byte sprite at VD, V9
$4A6    $5791   UNKNOWN  $5791           ; Unknown 5xxx instruction
$4A8    $DF0A   DRW      VF, V0, #A      ; Draw 10-byte sprite at VF, V0
$4AA    $9002   UNKNOWN  $9002           ; Unknown 9xxx instruction
$4AC    $5741   UNKNOWN  $5741           ; Unknown 5xxx instruction
$4AE    $8460   LD       V4, V6          ; V4 = V6
$4B0    $6A29   LD       VA, #29         ; Load 41 into VA
$4B2    $A16C   LD       I, $16C         ; Load 16C into I
$4B4    $660B   LD       V6, #0B         ; Load 11 into V6
$4B6    $18D9   JP       $8D9            ; Jump to 8D9
$4B8    $E898   UNKNOWN  $E898           ; Unknown Exxx instruction
$4BA    $01FA   SYS      $1FA            ; System call to 1FA
$4BC    $5CF8   UNKNOWN  $5CF8           ; Unknown 5xxx instruction
$4BE    $9B72   UNKNOWN  $9B72           ; Unknown 9xxx instruction
$4C0    $42B8   SNE      V2, #B8         ; Skip if V2 != 184
$4C2    $C393   RND      V3, #93         ; V3 = random & 93
$4C4    $CB6C   RND      VB, #6C         ; VB = random & 6C
$4C6    $99B4   UNKNOWN  $99B4           ; Unknown 9xxx instruction
$4C8    $5623   UNKNOWN  $5623           ; Unknown 5xxx instruction
$4CA    $E811   UNKNOWN  $E811           ; Unknown Exxx instruction
$4CC    $4381   SNE      V3, #81         ; Skip if V3 != 129
$4CE    $51B7   UNKNOWN  $51B7           ; Unknown 5xxx instruction
$4D0    $B96C   JP       V0, $96C        ; Jump to V0 + 96C
$4D2    $F2E9   UNKNOWN  F2E9            ; Unknown Fxxx instruction
$4D4    $CF4A   RND      VF, #4A         ; VF = random & 4A
$4D6    $BF82   JP       V0, $F82        ; Jump to V0 + F82
$4D8    $21F0   CALL     $1F0            ; Call subroutine at 1F0
$4DA    $0A9A   SYS      $A9A            ; System call to A9A
$4DC    $ED2C   UNKNOWN  $ED2C           ; Unknown Exxx instruction
$4DE    $3319   SE       V3, #19         ; Skip if V3 == 25
$4E0    $2AF2   CALL     $AF2            ; Call subroutine at AF2
$4E2    $9ECC   UNKNOWN  $9ECC           ; Unknown 9xxx instruction
$4E4    $0008   SYS      $008            ; System call to 008
$4E6    $07D1   SYS      $7D1            ; System call to 7D1
$4E8    $AA32   LD       I, $A32         ; Load A32 into I
$4EA    $2B96   CALL     $B96            ; Call subroutine at B96
$4EC    $26CC   CALL     $6CC            ; Call subroutine at 6CC
$4EE    $B952   JP       V0, $952        ; Jump to V0 + 952
$4F0    $37F6   SE       V7, #F6         ; Skip if V7 == 246
$4F2    $51AD   UNKNOWN  $51AD           ; Unknown 5xxx instruction
$4F4    $8ABE   SHL      VA              ; VA <<= 1, VF = MSB
$4F6    $5FF8   UNKNOWN  $5FF8           ; Unknown 5xxx instruction
$4F8    $7C88   ADD      VC, #88         ; Add 136 to VC
$4FA    $D785   DRW      V7, V8, #5      ; Draw 5-byte sprite at V7, V8
$4FC    $034C   SYS      $34C            ; System call to 34C
$4FE    $FDF3   UNKNOWN  FDF3            ; Unknown Fxxx instruction
$500    $25DB   CALL     $5DB            ; Call subroutine at 5DB
$502    $C47F   RND      V4, #7F         ; V4 = random & 7F
$504    $562C   UNKNOWN  $562C           ; Unknown 5xxx instruction
$506    $85BD   UNKNOWN  85BD            ; Unknown 8xxx instruction
$508    $6299   LD       V2, #99         ; Load 153 into V2
$50A    $94E7   UNKNOWN  $94E7           ; Unknown 9xxx instruction
$50C    $8FA2   AND      VF, VA          ; VF &= VA
$50E    $0C4C   SYS      $C4C            ; System call to C4C
$510    $3DBF   SE       VD, #BF         ; Skip if VD == 191
$512    $96D2   UNKNOWN  $96D2           ; Unknown 9xxx instruction
$514    $D224   DRW      V2, V2, #4      ; Draw 4-byte sprite at V2, V2
$516    $BB2C   JP       V0, $B2C        ; Jump to V0 + B2C
$518    $0B02   SYS      $B02            ; System call to B02
$51A    $1869   JP       $869            ; Jump to 869
$51C    $28B3   CALL     $8B3            ; Call subroutine at 8B3
$51E    $0A36   SYS      $A36            ; System call to A36
$520    $1295   JP       $295            ; Jump to 295
$522    $C725   RND      V7, #25         ; V7 = random & 25
$524    $6B29   LD       VB, #29         ; Load 41 into VB
$526    $3CFB   SE       VC, #FB         ; Skip if VC == 251
$528    $EFCE   UNKNOWN  $EFCE           ; Unknown Exxx instruction
$52A    $5026   UNKNOWN  $5026           ; Unknown 5xxx instruction
$52C    $FB6B   UNKNOWN  FB6B            ; Unknown Fxxx instruction
$52E    $3008   SE       V0, #08         ; Skip if V0 == 8
$530    $1443   JP       $443            ; Jump to 443
$532    $54C7   UNKNOWN  $54C7           ; Unknown 5xxx instruction
$534    $A54E   LD       I, $54E         ; Load 54E into I
$536    $CED3   RND      VE, #D3         ; VE = random & D3
$538    $DC13   DRW      VC, V1, #3      ; Draw 3-byte sprite at VC, V1
$53A    $2D13   CALL     $D13            ; Call subroutine at D13
$53C    $74C8   ADD      V4, #C8         ; Add 200 to V4
$53E    $84CD   UNKNOWN  84CD            ; Unknown 8xxx instruction
$540    $172E   JP       $72E            ; Jump to 72E
$542    $0B17   SYS      $B17            ; System call to B17
$544    $2E81   CALL     $E81            ; Call subroutine at E81
$546    $B06C   JP       V0, $06C        ; Jump to V0 + 06C
$548    $04BA   SYS      $4BA            ; System call to 4BA
$54A    $629C   LD       V2, #9C         ; Load 156 into V2
$54C    $82B9   UNKNOWN  82B9            ; Unknown 8xxx instruction
$54E    $E45C   UNKNOWN  $E45C           ; Unknown Exxx instruction
$550    $698A   LD       V9, #8A         ; Load 138 into V9
$552    $BD3C   JP       V0, $D3C        ; Jump to V0 + D3C
$554    $2750   CALL     $750            ; Call subroutine at 750
$556    $D7F4   DRW      V7, VF, #4      ; Draw 4-byte sprite at V7, VF
$558    $DCD0   DRW      VC, VD, #0      ; Draw 0-byte sprite at VC, VD
$55A    $B63A   JP       V0, $63A        ; Jump to V0 + 63A
$55C    $9840   SNE      V8, V4          ; Skip if V8 != V4
$55E    $F009   UNKNOWN  F009            ; Unknown Fxxx instruction
$560    $73E8   ADD      V3, #E8         ; Add 232 to V3
$562    $7F22   ADD      VF, #22         ; Add 34 to VF
$564    $4D03   SNE      VD, #03         ; Skip if VD != 3
$566    $5979   UNKNOWN  $5979           ; Unknown 5xxx instruction
$568    $5300   SE       V3, V0          ; Skip if V3 == V0
$56A    $D47D   DRW      V4, V7, #D      ; Draw 13-byte sprite at V4, V7
$56C    $85DB   UNKNOWN  85DB            ; Unknown 8xxx instruction
$56E    $490F   SNE      V9, #0F         ; Skip if V9 != 15
$570    $88C7   SUBN     V8, VC          ; V8 = VC - V8, VF = !borrow
$572    $D2C3   DRW      V2, VC, #3      ; Draw 3-byte sprite at V2, VC
$574    $57FE   UNKNOWN  $57FE           ; Unknown 5xxx instruction
$576    $5A0C   UNKNOWN  $5A0C           ; Unknown 5xxx instruction
$578    $F625   UNKNOWN  F625            ; Unknown Fxxx instruction
$57A    $840B   UNKNOWN  840B            ; Unknown 8xxx instruction
$57C    $1CB5   JP       $CB5            ; Jump to CB5
$57E    $CBE1   RND      VB, #E1         ; VB = random & E1
$580    $CCD5   RND      VC, #D5         ; VC = random & D5
$582    $4599   SNE      V5, #99         ; Skip if V5 != 153
$584    $F1AE   UNKNOWN  F1AE            ; Unknown Fxxx instruction
$586    $E8A1   SKNP     V8              ; Skip if key V8 not pressed
$588    $DD60   DRW      VD, V6, #0      ; Draw 0-byte sprite at VD, V6
$58A    $038D   SYS      $38D            ; System call to 38D
$58C    $E755   UNKNOWN  $E755           ; Unknown Exxx instruction
$58E    $0F9C   SYS      $F9C            ; System call to F9C
$590    $7E8F   ADD      VE, #8F         ; Add 143 to VE
$592    $BF82   JP       V0, $F82        ; Jump to V0 + F82
$594    $5473   UNKNOWN  $5473           ; Unknown 5xxx instruction
$596    $EF4F   UNKNOWN  $EF4F           ; Unknown Exxx instruction
$598    $ED9E   SKP      VD              ; Skip if key VD pressed
$59A    $9CD4   UNKNOWN  $9CD4           ; Unknown 9xxx instruction
$59C    $D066   DRW      V0, V6, #6      ; Draw 6-byte sprite at V0, V6
$59E    $46CA   SNE      V6, #CA         ; Skip if V6 != 202
$5A0    $4331   SNE      V3, #31         ; Skip if V3 != 49
$5A2    $41F9   SNE      V1, #F9         ; Skip if V1 != 249
$5A4    $08DE   SYS      $8DE            ; System call to 8DE
$5A6    $CF58   RND      VF, #58         ; VF = random & 58
$5A8    $678B   LD       V7, #8B         ; Load 139 into V7
$5AA    $7E16   ADD      VE, #16         ; Add 22 to VE
$5AC    $5E15   UNKNOWN  $5E15           ; Unknown 5xxx instruction
$5AE    $665A   LD       V6, #5A         ; Load 90 into V6
$5B0    $A487   LD       I, $487         ; Load 487 into I
$5B2    $D6F6   DRW      V6, VF, #6      ; Draw 6-byte sprite at V6, VF
$5B4    $5778   UNKNOWN  $5778           ; Unknown 5xxx instruction
$5B6    $FA62   UNKNOWN  FA62            ; Unknown Fxxx instruction
$5B8    $7918   ADD      V9, #18         ; Add 24 to V9
$5BA    $CD7E   RND      VD, #7E         ; VD = random & 7E
$5BC    $06B7   SYS      $6B7            ; System call to 6B7
$5BE    $8943   XOR      V9, V4          ; V9 ^= V4
$5C0    $331E   SE       V3, #1E         ; Skip if V3 == 30
$5C2    $F7D2   UNKNOWN  F7D2            ; Unknown Fxxx instruction
$5C4    $D711   DRW      V7, V1, #1      ; Draw 1-byte sprite at V7, V1
$5C6    $0BA5   SYS      $BA5            ; System call to BA5
$5C8    $9934   UNKNOWN  $9934           ; Unknown 9xxx instruction
$5CA    $A189   LD       I, $189         ; Load 189 into I
$5CC    $8EC7   SUBN     VE, VC          ; VE = VC - VE, VF = !borrow
$5CE    $15F7   JP       $5F7            ; Jump to 5F7
$5D0    $6CFE   LD       VC, #FE         ; Load 254 into VC
$5D2    $0BDA   SYS      $BDA            ; System call to BDA
$5D4    $6E39   LD       VE, #39         ; Load 57 into VE
$5D6    $F4B7   UNKNOWN  F4B7            ; Unknown Fxxx instruction
$5D8    $4AB3   SNE      VA, #B3         ; Skip if VA != 179
$5DA    $CA63   RND      VA, #63         ; VA = random & 63
$5DC    $8F9A   UNKNOWN  8F9A            ; Unknown 8xxx instruction
$5DE    $5981   UNKNOWN  $5981           ; Unknown 5xxx instruction
$5E0    $AEFA   LD       I, $EFA         ; Load EFA into I
$5E2    $BC1C   JP       V0, $C1C        ; Jump to V0 + C1C
$5E4    $176B   JP       $76B            ; Jump to 76B
$5E6    $BC9A   JP       V0, $C9A        ; Jump to V0 + C9A
$5E8    $4F54   SNE      VF, #54         ; Skip if VF != 84
$5EA    $DA30   DRW      VA, V3, #0      ; Draw 0-byte sprite at VA, V3
$5EC    $FDBD   UNKNOWN  FDBD            ; Unknown Fxxx instruction
$5EE    $AF35   LD       I, $F35         ; Load F35 into I
$5F0    $68FE   LD       V8, #FE         ; Load 254 into V8
$5F2    $4485   SNE      V4, #85         ; Skip if V4 != 133
$5F4    $5378   UNKNOWN  $5378           ; Unknown 5xxx instruction
$5F6    $C9DB   RND      V9, #DB         ; V9 = random & DB
$5F8    $8CBB   UNKNOWN  8CBB            ; Unknown 8xxx instruction
$5FA    $FD73   UNKNOWN  FD73            ; Unknown Fxxx instruction
$5FC    $7EAD   ADD      VE, #AD         ; Add 173 to VE
$5FE    $E012   UNKNOWN  $E012           ; Unknown Exxx instruction
$600    $1C77   JP       $C77            ; Jump to C77
$602    $3B4E   SE       VB, #4E         ; Skip if VB == 78
$604    $8300   LD       V3, V0          ; V3 = V0
$606    $4C04   SNE      VC, #04         ; Skip if VC != 4
$608    $35B8   SE       V5, #B8         ; Skip if V5 == 184
$60A    $2F94   CALL     $F94            ; Call subroutine at F94
$60C    $E104   UNKNOWN  $E104           ; Unknown Exxx instruction
$60E    $144C   JP       $44C            ; Jump to 44C
$610    $C9D3   RND      V9, #D3         ; V9 = random & D3
$612    $E1C2   UNKNOWN  $E1C2           ; Unknown Exxx instruction
$614    $AD10   LD       I, $D10         ; Load D10 into I
$616    $C81B   RND      V8, #1B         ; V8 = random & 1B
$618    $29F4   CALL     $9F4            ; Call subroutine at 9F4
$61A    $8006   SHR      V0              ; V0 >>= 1, VF = LSB
$61C    $517D   UNKNOWN  $517D           ; Unknown 5xxx instruction
$61E    $2F8D   CALL     $F8D            ; Call subroutine at F8D
$620    $28FE   CALL     $8FE            ; Call subroutine at 8FE
$622    $8EF2   AND      VE, VF          ; VE &= VF
$624    $7523   ADD      V5, #23         ; Add 35 to V5
$626    $1E38   JP       $E38            ; Jump to E38
$628    $25B6   CALL     $5B6            ; Call subroutine at 5B6
$62A    $3683   SE       V6, #83         ; Skip if V6 == 131
$62C    $76D0   ADD      V6, #D0         ; Add 208 to V6
$62E    $D62B   DRW      V6, V2, #B      ; Draw 11-byte sprite at V6, V2
$630    $A46D   LD       I, $46D         ; Load 46D into I
$632    $69CC   LD       V9, #CC         ; Load 204 into V9
$634    $BCAE   JP       V0, $CAE        ; Jump to V0 + CAE
$636    $61FB   LD       V1, #FB         ; Load 251 into V1
$638    $8CB1   OR       VC, VB          ; VC |= VB
$63A    $CD5F   RND      VD, #5F         ; VD = random & 5F
$63C    $E20C   UNKNOWN  $E20C           ; Unknown Exxx instruction
$63E    $A165   LD       I, $165         ; Load 165 into I
$640    $A412   LD       I, $412         ; Load 412 into I
$642    $ECA9   UNKNOWN  $ECA9           ; Unknown Exxx instruction
$644    $EEFD   UNKNOWN  $EEFD           ; Unknown Exxx instruction
$646    $8F15   SUB      VF, V1          ; VF -= V1, VF = !borrow
$648    $488F   SNE      V8, #8F         ; Skip if V8 != 143
$64A    $BD58   JP       V0, $D58        ; Jump to V0 + D58
$64C    $AB45   LD       I, $B45         ; Load B45 into I
$64E    $315F   SE       V1, #5F         ; Skip if V1 == 95
$650    $3A73   SE       VA, #73         ; Skip if VA == 115
$652    $45F2   SNE      V5, #F2         ; Skip if V5 != 242
$654    $CF2E   RND      VF, #2E         ; VF = random & 2E
$656    $3E47   SE       VE, #47         ; Skip if VE == 71
$658    $4B91   SNE      VB, #91         ; Skip if VB != 145
$65A    $CA16   RND      VA, #16         ; VA = random & 16
$65C    $B9C4   JP       V0, $9C4        ; Jump to V0 + 9C4
$65E    $6F0B   LD       VF, #0B         ; Load 11 into VF
$660    $90C9   UNKNOWN  $90C9           ; Unknown 9xxx instruction
$662    $821C   UNKNOWN  821C            ; Unknown 8xxx instruction
$664    $AF32   LD       I, $F32         ; Load F32 into I
$666    $DF25   DRW      VF, V2, #5      ; Draw 5-byte sprite at VF, V2
$668    $1F91   JP       $F91            ; Jump to F91
$66A    $D992   DRW      V9, V9, #2      ; Draw 2-byte sprite at V9, V9
$66C    $2FD2   CALL     $FD2            ; Call subroutine at FD2
$66E    $053F   SYS      $53F            ; System call to 53F
$670    $6349   LD       V3, #49         ; Load 73 into V3
$672    $3111   SE       V1, #11         ; Skip if V1 == 17
$674    $8401   OR       V4, V0          ; V4 |= V0
$676    $43E7   SNE      V3, #E7         ; Skip if V3 != 231
$678    $3D5F   SE       VD, #5F         ; Skip if VD == 95
$67A    $7E14   ADD      VE, #14         ; Add 20 to VE
$67C    $3B50   SE       VB, #50         ; Skip if VB == 80
$67E    $F0DB   UNKNOWN  F0DB            ; Unknown Fxxx instruction
$680    $E1FD   UNKNOWN  $E1FD           ; Unknown Exxx instruction
$682    $3B27   SE       VB, #27         ; Skip if VB == 39
$684    $71B7   ADD      V1, #B7         ; Add 183 to V1
$686    $B149   JP       V0, $149        ; Jump to V0 + 149
$688    $B92B   JP       V0, $92B        ; Jump to V0 + 92B
$68A    $C932   RND      V9, #32         ; V9 = random & 32
$68C    $7AAF   ADD      VA, #AF         ; Add 175 to VA
$68E    $7F55   ADD      VF, #55         ; Add 85 to VF
$690    $88EE   SHL      V8              ; V8 <<= 1, VF = MSB
$692    $01C5   SYS      $1C5            ; System call to 1C5
$694    $3CA5   SE       VC, #A5         ; Skip if VC == 165
$696    $5709   UNKNOWN  $5709           ; Unknown 5xxx instruction
$698    $BC45   JP       V0, $C45        ; Jump to V0 + C45
$69A    $4D08   SNE      VD, #08         ; Skip if VD != 8
$69C    $15A4   JP       $5A4            ; Jump to 5A4
$69E    $56AF   UNKNOWN  $56AF           ; Unknown 5xxx instruction
$6A0    $AEEC   LD       I, $EEC         ; Load EEC into I
$6A2    $4C32   SNE      VC, #32         ; Skip if VC != 50
$6A4    $CE8A   RND      VE, #8A         ; VE = random & 8A
$6A6    $FCB9   UNKNOWN  FCB9            ; Unknown Fxxx instruction
$6A8    $B732   JP       V0, $732        ; Jump to V0 + 732
$6AA    $ED62   UNKNOWN  $ED62           ; Unknown Exxx instruction
$6AC    $DFA3   DRW      VF, VA, #3      ; Draw 3-byte sprite at VF, VA
$6AE    $6787   LD       V7, #87         ; Load 135 into V7
$6B0    $C599   RND      V5, #99         ; V5 = random & 99
$6B2    $0BB1   SYS      $BB1            ; System call to BB1
$6B4    $BCCB   JP       V0, $CCB        ; Jump to V0 + CCB
$6B6    $A16F   LD       I, $16F         ; Load 16F into I
$6B8    $4E02   SNE      VE, #02         ; Skip if VE != 2
$6BA    $41C9   SNE      V1, #C9         ; Skip if V1 != 201
$6BC    $5865   UNKNOWN  $5865           ; Unknown 5xxx instruction
$6BE    $25D5   CALL     $5D5            ; Call subroutine at 5D5
$6C0    $6BEA   LD       VB, #EA         ; Load 234 into VB
$6C2    $E3AE   UNKNOWN  $E3AE           ; Unknown Exxx instruction
$6C4    $1C99   JP       $C99            ; Jump to C99
$6C6    $E969   UNKNOWN  $E969           ; Unknown Exxx instruction
$6C8    $D189   DRW      V1, V8, #9      ; Draw 9-byte sprite at V1, V8
$6CA    $6399   LD       V3, #99         ; Load 153 into V3
$6CC    $B9A8   JP       V0, $9A8        ; Jump to V0 + 9A8
$6CE    $38E4   SE       V8, #E4         ; Skip if V8 == 228
$6D0    $F8CA   UNKNOWN  F8CA            ; Unknown Fxxx instruction
$6D2    $A852   LD       I, $852         ; Load 852 into I
$6D4    $3B0E   SE       VB, #0E         ; Skip if VB == 14
$6D6    $137D   JP       $37D            ; Jump to 37D
$6D8    $4A60   SNE      VA, #60         ; Skip if VA != 96
$6DA    $AF3B   LD       I, $F3B         ; Load F3B into I
$6DC    $5D60   SE       VD, V6          ; Skip if VD == V6
$6DE    $A884   LD       I, $884         ; Load 884 into I
$6E0    $BDBE   JP       V0, $DBE        ; Jump to V0 + DBE
$6E2    $0646   SYS      $646            ; System call to 646
$6E4    $ECEF   UNKNOWN  $ECEF           ; Unknown Exxx instruction
$6E6    $D1DA   DRW      V1, VD, #A      ; Draw 10-byte sprite at V1, VD
$6E8    $315D   SE       V1, #5D         ; Skip if V1 == 93
$6EA    $C8B2   RND      V8, #B2         ; V8 = random & B2
$6EC    $FCF6   UNKNOWN  FCF6            ; Unknown Fxxx instruction
$6EE    $8F0A   UNKNOWN  8F0A            ; Unknown 8xxx instruction
$6F0    $D31C   DRW      V3, V1, #C      ; Draw 12-byte sprite at V3, V1
$6F2    $4BB5   SNE      VB, #B5         ; Skip if VB != 181
$6F4    $870A   UNKNOWN  870A            ; Unknown 8xxx instruction
$6F6    $A5DD   LD       I, $5DD         ; Load 5DD into I
$6F8    $03F2   SYS      $3F2            ; System call to 3F2
$6FA    $73B4   ADD      V3, #B4         ; Add 180 to V3
$6FC    $081B   SYS      $81B            ; System call to 81B
$6FE    $C95A   RND      V9, #5A         ; V9 = random & 5A
$700    $A0E1   LD       I, $0E1         ; Load 0E1 into I
$702    $CFB2   RND      VF, #B2         ; VF = random & B2
$704    $AD50   LD       I, $D50         ; Load D50 into I
$706    $74C2   ADD      V4, #C2         ; Add 194 to V4
$708    $03C9   SYS      $3C9            ; System call to 3C9
$70A    $E84D   UNKNOWN  $E84D           ; Unknown Exxx instruction
$70C    $9DAE   UNKNOWN  $9DAE           ; Unknown 9xxx instruction
$70E    $1343   JP       $343            ; Jump to 343
$710    $9CE7   UNKNOWN  $9CE7           ; Unknown 9xxx instruction
$712    $6177   LD       V1, #77         ; Load 119 into V1
$714    $63C6   LD       V3, #C6         ; Load 198 into V3
$716    $E89A   UNKNOWN  $E89A           ; Unknown Exxx instruction
$718    $ED2B   UNKNOWN  $ED2B           ; Unknown Exxx instruction
$71A    $3AEF   SE       VA, #EF         ; Skip if VA == 239
$71C    $648A   LD       V4, #8A         ; Load 138 into V4
$71E    $94A5   UNKNOWN  $94A5           ; Unknown 9xxx instruction
$720    $D95D   DRW      V9, V5, #D      ; Draw 13-byte sprite at V9, V5
$722    $7738   ADD      V7, #38         ; Add 56 to V7
$724    $B808   JP       V0, $808        ; Jump to V0 + 808
$726    $CB10   RND      VB, #10         ; VB = random & 10
$728    $FD21   UNKNOWN  FD21            ; Unknown Fxxx instruction
$72A    $906A   UNKNOWN  $906A           ; Unknown 9xxx instruction
$72C    $D275   DRW      V2, V7, #5      ; Draw 5-byte sprite at V2, V7
$72E    $158E   JP       $58E            ; Jump to 58E
$730    $73C1   ADD      V3, #C1         ; Add 193 to V3
$732    $1610   JP       $610            ; Jump to 610
$734    $DF47   DRW      VF, V4, #7      ; Draw 7-byte sprite at VF, V4
$736    $A192   LD       I, $192         ; Load 192 into I
$738    $D79B   DRW      V7, V9, #B      ; Draw 11-byte sprite at V7, V9
$73A    $F457   UNKNOWN  F457            ; Unknown Fxxx instruction
$73C    $A3DA   LD       I, $3DA         ; Load 3DA into I
$73E    $1DBB   JP       $DBB            ; Jump to DBB
$740    $497F   SNE      V9, #7F         ; Skip if V9 != 127
$742    $0518   SYS      $518            ; System call to 518
$744    $2795   CALL     $795            ; Call subroutine at 795
$746    $7812   ADD      V8, #12         ; Add 18 to V8
$748    $23E2   CALL     $3E2            ; Call subroutine at 3E2
$74A    $B51A   JP       V0, $51A        ; Jump to V0 + 51A
$74C    $59D5   UNKNOWN  $59D5           ; Unknown 5xxx instruction
$74E    $2173   CALL     $173            ; Call subroutine at 173
$750    $1C2B   JP       $C2B            ; Jump to C2B
$752    $8A09   UNKNOWN  8A09            ; Unknown 8xxx instruction
$754    $3A7E   SE       VA, #7E         ; Skip if VA == 126
$756    $9691   UNKNOWN  $9691           ; Unknown 9xxx instruction
$758    $DC99   DRW      VC, V9, #9      ; Draw 9-byte sprite at VC, V9
$75A    $446E   SNE      V4, #6E         ; Skip if V4 != 110
$75C    $6D13   LD       VD, #13         ; Load 19 into VD
$75E    $DED7   DRW      VE, VD, #7      ; Draw 7-byte sprite at VE, VD
$760    $B8D3   JP       V0, $8D3        ; Jump to V0 + 8D3
$762    $ABC2   LD       I, $BC2         ; Load BC2 into I
$764    $C5BC   RND      V5, #BC         ; V5 = random & BC
$766    $B147   JP       V0, $147        ; Jump to V0 + 147
$768    $B163   JP       V0, $163        ; Jump to V0 + 163
$76A    $C0F0   RND      V0, #F0         ; V0 = random & F0
$76C    $1D85   JP       $D85            ; Jump to D85
$76E    $D3EC   DRW      V3, VE, #C      ; Draw 12-byte sprite at V3, VE
$770    $0A2C   SYS      $A2C            ; System call to A2C
$772    $E47F   UNKNOWN  $E47F           ; Unknown Exxx instruction
$774    $0AF3   SYS      $AF3            ; System call to AF3
$776    $90E9   UNKNOWN  $90E9           ; Unknown 9xxx instruction
$778    $9C25   UNKNOWN  $9C25           ; Unknown 9xxx instruction
$77A    $D106   DRW      V1, V0, #6      ; Draw 6-byte sprite at V1, V0
$77C    $E5A8   UNKNOWN  $E5A8           ; Unknown Exxx instruction
$77E    $255B   CALL     $55B            ; Call subroutine at 55B
$780    $18CE   JP       $8CE            ; Jump to 8CE
$782    $7615   ADD      V6, #15         ; Add 21 to V6
$784    $CE5B   RND      VE, #5B         ; VE = random & 5B
$786    $D2D3   DRW      V2, VD, #3      ; Draw 3-byte sprite at V2, VD
$788    $8BB5   SUB      VB, VB          ; VB -= VB, VF = !borrow
$78A    $25FE   CALL     $5FE            ; Call subroutine at 5FE
$78C    $A187   LD       I, $187         ; Load 187 into I
$78E    $3F24   SE       VF, #24         ; Skip if VF == 36
$790    $101A   JP       $01A            ; Jump to 01A
$792    $1B3A   JP       $B3A            ; Jump to B3A
$794    $AE6C   LD       I, $E6C         ; Load E6C into I
$796    $581B   UNKNOWN  $581B           ; Unknown 5xxx instruction
$798    $D99D   DRW      V9, V9, #D      ; Draw 13-byte sprite at V9, V9
$79A    $293F   CALL     $93F            ; Call subroutine at 93F
$79C    $DAA9   DRW      VA, VA, #9      ; Draw 9-byte sprite at VA, VA
$79E    $1A26   JP       $A26            ; Jump to A26
$7A0    $13CF   JP       $3CF            ; Jump to 3CF
$7A2    $6668   LD       V6, #68         ; Load 104 into V6
$7A4    $E3C5   UNKNOWN  $E3C5           ; Unknown Exxx instruction
$7A6    $74CC   ADD      V4, #CC         ; Add 204 to V4
$7A8    $D5CF   DRW      V5, VC, #F      ; Draw 15-byte sprite at V5, VC
$7AA    $3BBE   SE       VB, #BE         ; Skip if VB == 190
$7AC    $9514   UNKNOWN  $9514           ; Unknown 9xxx instruction
$7AE    $05D1   SYS      $5D1            ; System call to 5D1
$7B0    $EA38   UNKNOWN  $EA38           ; Unknown Exxx instruction
$7B2    $2DC9   CALL     $DC9            ; Call subroutine at DC9
$7B4    $4454   SNE      V4, #54         ; Skip if V4 != 84
$7B6    $EE64   UNKNOWN  $EE64           ; Unknown Exxx instruction
$7B8    $8E21   OR       VE, V2          ; VE |= V2
$7BA    $2064   CALL     $064            ; Call subroutine at 064
$7BC    $52B7   UNKNOWN  $52B7           ; Unknown 5xxx instruction
$7BE    $8C7D   UNKNOWN  8C7D            ; Unknown 8xxx instruction
$7C0    $70F5   ADD      V0, #F5         ; Add 245 to V0
$7C2    $166F   JP       $66F            ; Jump to 66F
$7C4    $EBD1   UNKNOWN  $EBD1           ; Unknown Exxx instruction
$7C6    $C54F   RND      V5, #4F         ; V5 = random & 4F
$7C8    $4D3D   SNE      VD, #3D         ; Skip if VD != 61
$7CA    $FA0C   UNKNOWN  FA0C            ; Unknown Fxxx instruction
$7CC    $A9A6   LD       I, $9A6         ; Load 9A6 into I
$7CE    $1512   JP       $512            ; Jump to 512
$7D0    $E60F   UNKNOWN  $E60F           ; Unknown Exxx instruction
$7D2    $5C6B   UNKNOWN  $5C6B           ; Unknown 5xxx instruction
$7D4    $5D07   UNKNOWN  $5D07           ; Unknown 5xxx instruction
$7D6    $5FFD   UNKNOWN  $5FFD           ; Unknown 5xxx instruction
$7D8    $6360   LD       V3, #60         ; Load 96 into V3
$7DA    $25E9   CALL     $5E9            ; Call subroutine at 5E9
$7DC    $6CEC   LD       VC, #EC         ; Load 236 into VC
$7DE    $540F   UNKNOWN  $540F           ; Unknown 5xxx instruction
$7E0    $24DA   CALL     $4DA            ; Call subroutine at 4DA
$7E2    $A131   LD       I, $131         ; Load 131 into I
$7E4    $81AE   SHL      V1              ; V1 <<= 1, VF = MSB
$7E6    $83F2   AND      V3, VF          ; V3 &= VF
$7E8    $732F   ADD      V3, #2F         ; Add 47 to V3
$7EA    $3D7F   SE       VD, #7F         ; Skip if VD == 127
$7EC    $2A6C   CALL     $A6C            ; Call subroutine at A6C
$7EE    $4C53   SNE      VC, #53         ; Skip if VC != 83
$7F0    $5055   UNKNOWN  $5055           ; Unknown 5xxx instruction
$7F2    $C46D   RND      V4, #6D         ; V4 = random & 6D
$7F4    $08E5   SYS      $8E5            ; System call to 8E5
$7F6    $C95A   RND      V9, #5A         ; V9 = random & 5A
$7F8    $55C1   UNKNOWN  $55C1           ; Unknown 5xxx instruction
$7FA    $3E9D   SE       VE, #9D         ; Skip if VE == 157
$7FC    $D04F   DRW      V0, V4, #F      ; Draw 15-byte sprite at V0, V4
$7FE    $3A17   SE       VA, #17         ; Skip if VA == 23
$800    $9493   UNKNOWN  $9493           ; Unknown 9xxx instruction
$802    $894A   UNKNOWN  894A            ; Unknown 8xxx instruction
$804    $DFA3   DRW      VF, VA, #3      ; Draw 3-byte sprite at VF, VA
$806    $DBB2   DRW      VB, VB, #2      ; Draw 2-byte sprite at VB, VB
$808    $8ECC   UNKNOWN  8ECC            ; Unknown 8xxx instruction
$80A    $4BE1   SNE      VB, #E1         ; Skip if VB != 225
$80C    $6799   LD       V7, #99         ; Load 153 into V7
$80E    $F083   UNKNOWN  F083            ; Unknown Fxxx instruction
$810    $E81C   UNKNOWN  $E81C           ; Unknown Exxx instruction
$812    $E0D3   UNKNOWN  $E0D3           ; Unknown Exxx instruction
$814    $BC56   JP       V0, $C56        ; Jump to V0 + C56
$816    $78EE   ADD      V8, #EE         ; Add 238 to V8
$818    $4FF7   SNE      VF, #F7         ; Skip if VF != 247
$81A    $2750   CALL     $750            ; Call subroutine at 750
$81C    $A8CF   LD       I, $8CF         ; Load 8CF into I
$81E    $B294   JP       V0, $294        ; Jump to V0 + 294
$820    $4133   SNE      V1, #33         ; Skip if V1 != 51
$822    $F631   UNKNOWN  F631            ; Unknown Fxxx instruction
$824    $1EC8   JP       $EC8            ; Jump to EC8
$826    $EB1E   UNKNOWN  $EB1E           ; Unknown Exxx instruction
$828    $984E   UNKNOWN  $984E           ; Unknown 9xxx instruction
$82A    $157E   JP       $57E            ; Jump to 57E
$82C    $1D13   JP       $D13            ; Jump to D13
$82E    $F140   UNKNOWN  F140            ; Unknown Fxxx instruction
$830    $0019   SYS      $019            ; System call to 019
$832    $AE2F   LD       I, $E2F         ; Load E2F into I
$834    $F878   UNKNOWN  F878            ; Unknown Fxxx instruction
$836    $E085   UNKNOWN  $E085           ; Unknown Exxx instruction
$838    $B299   JP       V0, $299        ; Jump to V0 + 299
$83A    $A5D1   LD       I, $5D1         ; Load 5D1 into I
$83C    $8F97   SUBN     VF, V9          ; VF = V9 - VF, VF = !borrow
$83E    $6286   LD       V2, #86         ; Load 134 into V2
$840    $B396   JP       V0, $396        ; Jump to V0 + 396
$842    $3C57   SE       VC, #57         ; Skip if VC == 87
$844    $0A65   SYS      $A65            ; System call to A65
$846    $B493   JP       V0, $493        ; Jump to V0 + 493
$848    $7DF9   ADD      VD, #F9         ; Add 249 to VD
$84A    $B30E   JP       V0, $30E        ; Jump to V0 + 30E
$84C    $88B0   LD       V8, VB          ; V8 = VB
$84E    $6218   LD       V2, #18         ; Load 24 into V2
$850    $FB48   UNKNOWN  FB48            ; Unknown Fxxx instruction
$852    $F840   UNKNOWN  F840            ; Unknown Fxxx instruction
$854    $4219   SNE      V2, #19         ; Skip if V2 != 25
$856    $C39C   RND      V3, #9C         ; V3 = random & 9C
$858    $26D3   CALL     $6D3            ; Call subroutine at 6D3
$85A    $E983   UNKNOWN  $E983           ; Unknown Exxx instruction
$85C    $CBFA   RND      VB, #FA         ; VB = random & FA
$85E    $D131   DRW      V1, V3, #1      ; Draw 1-byte sprite at V1, V3
$860    $A8D5   LD       I, $8D5         ; Load 8D5 into I
$862    $9A0E   UNKNOWN  $9A0E           ; Unknown 9xxx instruction
$864    $426B   SNE      V2, #6B         ; Skip if V2 != 107
$866    $0C57   SYS      $C57            ; System call to C57
$868    $310E   SE       V1, #0E         ; Skip if V1 == 14
$86A    $3EDD   SE       VE, #DD         ; Skip if VE == 221
$86C    $A96F   LD       I, $96F         ; Load 96F into I
$86E    $EC76   UNKNOWN  $EC76           ; Unknown Exxx instruction
$870    $C014   RND      V0, #14         ; V0 = random & 14
$872    $2D5A   CALL     $D5A            ; Call subroutine at D5A
$874    $13D8   JP       $3D8            ; Jump to 3D8
$876    $F1A7   UNKNOWN  F1A7            ; Unknown Fxxx instruction
$878    $8BD1   OR       VB, VD          ; VB |= VD
$87A    $E144   UNKNOWN  $E144           ; Unknown Exxx instruction
$87C    $A01A   LD       I, $01A         ; Load 01A into I
$87E    $BBC5   JP       V0, $BC5        ; Jump to V0 + BC5
$880    $314D   SE       V1, #4D         ; Skip if V1 == 77
$882    $B749   JP       V0, $749        ; Jump to V0 + 749
$884    $FCFC   UNKNOWN  FCFC            ; Unknown Fxxx instruction
$886    $2343   CALL     $343            ; Call subroutine at 343
$888    $8685   SUB      V6, V8          ; V6 -= V8, VF = !borrow
$88A    $497D   SNE      V9, #7D         ; Skip if V9 != 125
$88C    $44AB   SNE      V4, #AB         ; Skip if V4 != 171
$88E    $359B   SE       V5, #9B         ; Skip if V5 == 155
$890    $8495   SUB      V4, V9          ; V4 -= V9, VF = !borrow
$892    $07C6   SYS      $7C6            ; System call to 7C6
$894    $F0A8   UNKNOWN  F0A8            ; Unknown Fxxx instruction
$896    $91B7   UNKNOWN  $91B7           ; Unknown 9xxx instruction
$898    $4D41   SNE      VD, #41         ; Skip if VD != 65
$89A    $E1A5   UNKNOWN  $E1A5           ; Unknown Exxx instruction
$89C    $BE3F   JP       V0, $E3F        ; Jump to V0 + E3F
$89E    $6F11   LD       VF, #11         ; Load 17 into VF
$8A0    $9A3C   UNKNOWN  $9A3C           ; Unknown 9xxx instruction
$8A2    $2201   CALL     $201            ; Call subroutine at 201
$8A4    $0AC8   SYS      $AC8            ; System call to AC8
$8A6    $7D8E   ADD      VD, #8E         ; Add 142 to VD
$8A8    $B240   JP       V0, $240        ; Jump to V0 + 240
$8AA    $D6C0   DRW      V6, VC, #0      ; Draw 0-byte sprite at V6, VC
$8AC    $0DD6   SYS      $DD6            ; System call to DD6
$8AE    $51DF   UNKNOWN  $51DF           ; Unknown 5xxx instruction
$8B0    $B9AF   JP       V0, $9AF        ; Jump to V0 + 9AF
$8B2    $52C4   UNKNOWN  $52C4           ; Unknown 5xxx instruction
$8B4    $25EA   CALL     $5EA            ; Call subroutine at 5EA
$8B6    $AF06   LD       I, $F06         ; Load F06 into I
$8B8    $8D52   AND      VD, V5          ; VD &= V5
$8BA    $98A1   UNKNOWN  $98A1           ; Unknown 9xxx instruction
$8BC    $2EA1   CALL     $EA1            ; Call subroutine at EA1
$8BE    $E8B4   UNKNOWN  $E8B4           ; Unknown Exxx instruction
$8C0    $319C   SE       V1, #9C         ; Skip if V1 == 156
$8C2    $967D   UNKNOWN  $967D           ; Unknown 9xxx instruction
$8C4    $6E85   LD       VE, #85         ; Load 133 into VE
$8C6    $6BD9   LD       VB, #D9         ; Load 217 into VB
$8C8    $1D66   JP       $D66            ; Jump to D66
$8CA    $A1F9   LD       I, $1F9         ; Load 1F9 into I
$8CC    $33B8   SE       V3, #B8         ; Skip if V3 == 184
$8CE    $71BF   ADD      V1, #BF         ; Add 191 to V1
$8D0    $0B95   SYS      $B95            ; System call to B95
$8D2    $26E0   CALL     $6E0            ; Call subroutine at 6E0
$8D4    $4347   SNE      V3, #47         ; Skip if V3 != 71
$8D6    $8CB7   SUBN     VC, VB          ; VC = VB - VC, VF = !borrow
$8D8    $5EBE   UNKNOWN  $5EBE           ; Unknown 5xxx instruction
$8DA    $C389   RND      V3, #89         ; V3 = random & 89
$8DC    $FA6F   UNKNOWN  FA6F            ; Unknown Fxxx instruction
$8DE    $2073   CALL     $073            ; Call subroutine at 073
$8E0    $DE37   DRW      VE, V3, #7      ; Draw 7-byte sprite at VE, V3
$8E2    $BAF3   JP       V0, $AF3        ; Jump to V0 + AF3
$8E4    $8044   ADD      V0, V4          ; V0 += V4, VF = carry
$8E6    $744E   ADD      V4, #4E         ; Add 78 to V4
$8E8    $F8F2   UNKNOWN  F8F2            ; Unknown Fxxx instruction
$8EA    $3D68   SE       VD, #68         ; Skip if VD == 104
$8EC    $1FD4   JP       $FD4            ; Jump to FD4
$8EE    $9A29   UNKNOWN  $9A29           ; Unknown 9xxx instruction
$8F0    $8882   AND      V8, V8          ; V8 &= V8
$8F2    $15EE   JP       $5EE            ; Jump to 5EE
$8F4    $AB84   LD       I, $B84         ; Load B84 into I
$8F6    $4E54   SNE      VE, #54         ; Skip if VE != 84
$8F8    $33D6   SE       V3, #D6         ; Skip if V3 == 214
$8FA    $32BF   SE       V2, #BF         ; Skip if V2 == 191
$8FC    $AEDB   LD       I, $EDB         ; Load EDB into I
$8FE    $17CB   JP       $7CB            ; Jump to 7CB
$900    $BDD4   JP       V0, $DD4        ; Jump to V0 + DD4
$902    $0401   SYS      $401            ; System call to 401
$904    $3B9E   SE       VB, #9E         ; Skip if VB == 158
$906    $8006   SHR      V0              ; V0 >>= 1, VF = LSB
$908    $2B36   CALL     $B36            ; Call subroutine at B36
$90A    $6649   LD       V6, #49         ; Load 73 into V6
$90C    $4B41   SNE      VB, #41         ; Skip if VB != 65
$90E    $61DE   LD       V1, #DE         ; Load 222 into V1
$910    $08BA   SYS      $8BA            ; System call to 8BA
$912    $383F   SE       V8, #3F         ; Skip if V8 == 63
$914    $3AC2   SE       VA, #C2         ; Skip if VA == 194
$916    $E876   UNKNOWN  $E876           ; Unknown Exxx instruction
$918    $0A5B   SYS      $A5B            ; System call to A5B
$91A    $D3C5   DRW      V3, VC, #5      ; Draw 5-byte sprite at V3, VC
$91C    $ACC8   LD       I, $CC8         ; Load CC8 into I
$91E    $BC4D   JP       V0, $C4D        ; Jump to V0 + C4D
$920    $9BCF   UNKNOWN  $9BCF           ; Unknown 9xxx instruction
$922    $2E5C   CALL     $E5C            ; Call subroutine at E5C
$924    $E682   UNKNOWN  $E682           ; Unknown Exxx instruction
$926    $1926   JP       $926            ; Jump to 926
$928    $A470   LD       I, $470         ; Load 470 into I
$92A    $E681   UNKNOWN  $E681           ; Unknown Exxx instruction
$92C    $3032   SE       V0, #32         ; Skip if V0 == 50
$92E    $C377   RND      V3, #77         ; V3 = random & 77
$930    $7B26   ADD      VB, #26         ; Add 38 to VB
$932    $506E   UNKNOWN  $506E           ; Unknown 5xxx instruction
$934    $411F   SNE      V1, #1F         ; Skip if V1 != 31
$936    $6F58   LD       VF, #58         ; Load 88 into VF
$938    $5906   UNKNOWN  $5906           ; Unknown 5xxx instruction
$93A    $5627   UNKNOWN  $5627           ; Unknown 5xxx instruction
$93C    $91D7   UNKNOWN  $91D7           ; Unknown 9xxx instruction
$93E    $FD36   UNKNOWN  FD36            ; Unknown Fxxx instruction
$940    $6444   LD       V4, #44         ; Load 68 into V4
$942    $5E08   UNKNOWN  $5E08           ; Unknown 5xxx instruction
$944    $81D5   SUB      V1, VD          ; V1 -= VD, VF = !borrow
$946    $0E53   SYS      $E53            ; System call to E53
$948    $C881   RND      V8, #81         ; V8 = random & 81
$94A    $59F6   UNKNOWN  $59F6           ; Unknown 5xxx instruction
$94C    $FC7B   UNKNOWN  FC7B            ; Unknown Fxxx instruction
$94E    $B32A   JP       V0, $32A        ; Jump to V0 + 32A
$950    $641F   LD       V4, #1F         ; Load 31 into V4
$952    $3FF0   SE       VF, #F0         ; Skip if VF == 240
$954    $F5BA   UNKNOWN  F5BA            ; Unknown Fxxx instruction
$956    $F2F3   UNKNOWN  F2F3            ; Unknown Fxxx instruction
$958    $ACC7   LD       I, $CC7         ; Load CC7 into I
$95A    $C1F3   RND      V1, #F3         ; V1 = random & F3
$95C    $4E24   SNE      VE, #24         ; Skip if VE != 36
$95E    $6BCD   LD       VB, #CD         ; Load 205 into VB
$960    $E1B6   UNKNOWN  $E1B6           ; Unknown Exxx instruction
$962    $A6BB   LD       I, $6BB         ; Load 6BB into I
$964    $6F80   LD       VF, #80         ; Load 128 into VF
$966    $5A7E   UNKNOWN  $5A7E           ; Unknown 5xxx instruction
$968    $4CDB   SNE      VC, #DB         ; Skip if VC != 219
$96A    $224D   CALL     $24D            ; Call subroutine at 24D
$96C    $18AB   JP       $8AB            ; Jump to 8AB
$96E    $B410   JP       V0, $410        ; Jump to V0 + 410
$970    $90A3   UNKNOWN  $90A3           ; Unknown 9xxx instruction
$972    $1F46   JP       $F46            ; Jump to F46
$974    $FCFE   UNKNOWN  FCFE            ; Unknown Fxxx instruction
$976    $18FD   JP       $8FD            ; Jump to 8FD
$978    $25F4   CALL     $5F4            ; Call subroutine at 5F4
$97A    $1EDF   JP       $EDF            ; Jump to EDF
$97C    $FD31   UNKNOWN  FD31            ; Unknown Fxxx instruction
$97E    $1571   JP       $571            ; Jump to 571
$980    $54E4   UNKNOWN  $54E4           ; Unknown 5xxx instruction
$982    $6D99   LD       VD, #99         ; Load 153 into VD
$984    $5989   UNKNOWN  $5989           ; Unknown 5xxx instruction
$986    $8B2E   SHL      VB              ; VB <<= 1, VF = MSB
$988    $AE0A   LD       I, $E0A         ; Load E0A into I
$98A    $96DF   UNKNOWN  $96DF           ; Unknown 9xxx instruction
$98C    $EDD1   UNKNOWN  $EDD1           ; Unknown Exxx instruction
$98E    $26D6   CALL     $6D6            ; Call subroutine at 6D6
$990    $EF23   UNKNOWN  $EF23           ; Unknown Exxx instruction
$992    $6925   LD       V9, #25         ; Load 37 into V9
$994    $8BE9   UNKNOWN  8BE9            ; Unknown 8xxx instruction
$996    $6CD3   LD       VC, #D3         ; Load 211 into VC
$998    $51F6   UNKNOWN  $51F6           ; Unknown 5xxx instruction
$99A    $B395   JP       V0, $395        ; Jump to V0 + 395
$99C    $61FF   LD       V1, #FF         ; Load 255 into V1
$99E    $A1CF   LD       I, $1CF         ; Load 1CF into I
$9A0    $49FD   SNE      V9, #FD         ; Skip if V9 != 253
$9A2    $3AC7   SE       VA, #C7         ; Skip if VA == 199
$9A4    $259E   CALL     $59E            ; Call subroutine at 59E
$9A6    $3342   SE       V3, #42         ; Skip if V3 == 66
$9A8    $5C5C   UNKNOWN  $5C5C           ; Unknown 5xxx instruction
$9AA    $7DDA   ADD      VD, #DA         ; Add 218 to VD
$9AC    $2CE5   CALL     $CE5            ; Call subroutine at CE5
$9AE    $EAEF   UNKNOWN  $EAEF           ; Unknown Exxx instruction
$9B0    $A8EA   LD       I, $8EA         ; Load 8EA into I
$9B2    $7478   ADD      V4, #78         ; Add 120 to V4
$9B4    $F1F1   UNKNOWN  F1F1            ; Unknown Fxxx instruction
$9B6    $8A0E   SHL      VA              ; VA <<= 1, VF = MSB
$9B8    $B36A   JP       V0, $36A        ; Jump to V0 + 36A
$9BA    $CF20   RND      VF, #20         ; VF = random & 20
$9BC    $19D1   JP       $9D1            ; Jump to 9D1
$9BE    $3557   SE       V5, #57         ; Skip if V5 == 87
$9C0    $47A8   SNE      V7, #A8         ; Skip if V7 != 168
$9C2    $34AF   SE       V4, #AF         ; Skip if V4 == 175
$9C4    $EF14   UNKNOWN  $EF14           ; Unknown Exxx instruction
$9C6    $A3B7   LD       I, $3B7         ; Load 3B7 into I
$9C8    $FA41   UNKNOWN  FA41            ; Unknown Fxxx instruction
$9CA    $064E   SYS      $64E            ; System call to 64E
$9CC    $5F9A   UNKNOWN  $5F9A           ; Unknown 5xxx instruction
$9CE    $A553   LD       I, $553         ; Load 553 into I
$9D0    $4C8C   SNE      VC, #8C         ; Skip if VC != 140
$9D2    $1694   JP       $694            ; Jump to 694
$9D4    $FCB3   UNKNOWN  FCB3            ; Unknown Fxxx instruction
$9D6    $A2AD   LD       I, $2AD         ; Load 2AD into I
$9D8    $3CA1   SE       VC, #A1         ; Skip if VC == 161
$9DA    $B6D4   JP       V0, $6D4        ; Jump to V0 + 6D4
$9DC    $E3CF   UNKNOWN  $E3CF           ; Unknown Exxx instruction
$9DE    $2E16   CALL     $E16            ; Call subroutine at E16
$9E0    $A25C   LD       I, $25C         ; Load 25C into I
$9E2    $DA42   DRW      VA, V4, #2      ; Draw 2-byte sprite at VA, V4
$9E4    $C943   RND      V9, #43         ; V9 = random & 43
$9E6    $E642   UNKNOWN  $E642           ; Unknown Exxx instruction
$9E8    $CB3F   RND      VB, #3F         ; VB = random & 3F
$9EA    $C6B2   RND      V6, #B2         ; V6 = random & B2
$9EC    $1FA4   JP       $FA4            ; Jump to FA4
$9EE    $4B2B   SNE      VB, #2B         ; Skip if VB != 43
$9F0    $BC21   JP       V0, $C21        ; Jump to V0 + C21
$9F2    $223E   CALL     $23E            ; Call subroutine at 23E
$9F4    $5D09   UNKNOWN  $5D09           ; Unknown 5xxx instruction
$9F6    $7D70   ADD      VD, #70         ; Add 112 to VD
$9F8    $A1F7   LD       I, $1F7         ; Load 1F7 into I
$9FA    $46F2   SNE      V6, #F2         ; Skip if V6 != 242
$9FC    $F18D   UNKNOWN  F18D            ; Unknown Fxxx instruction
$9FE    $EA8A   UNKNOWN  $EA8A           ; Unknown Exxx instruction
$A00    $BE4A   JP       V0, $E4A        ; Jump to V0 + E4A
$A02    $C29F   RND      V2, #9F         ; V2 = random & 9F
$A04    $37DB   SE       V7, #DB         ; Skip if V7 == 219
$A06    $018A   SYS      $18A            ; System call to 18A
$A08    $1E1B   JP       $E1B            ; Jump to E1B
$A0A    $A04E   LD       I, $04E         ; Load 04E into I
$A0C    $18C8   JP       $8C8            ; Jump to 8C8
$A0E    $A026   LD       I, $026         ; Load 026 into I
$A10    $7084   ADD      V0, #84         ; Add 132 to V0
$A12    $7F09   ADD      VF, #09         ; Add 9 to VF
$A14    $856C   UNKNOWN  856C            ; Unknown 8xxx instruction
$A16    $35A3   SE       V5, #A3         ; Skip if V5 == 163
$A18    $D276   DRW      V2, V7, #6      ; Draw 6-byte sprite at V2, V7
$A1A    $C0AE   RND      V0, #AE         ; V0 = random & AE
$A1C    $4589   SNE      V5, #89         ; Skip if V5 != 137
$A1E    $BCC5   JP       V0, $CC5        ; Jump to V0 + CC5
$A20    $C114   RND      V1, #14         ; V1 = random & 14
$A22    $9DD1   UNKNOWN  $9DD1           ; Unknown 9xxx instruction
$A24    $7BA5   ADD      VB, #A5         ; Add 165 to VB
$A26    $D84B   DRW      V8, V4, #B      ; Draw 11-byte sprite at V8, V4
$A28    $2859   CALL     $859            ; Call subroutine at 859
$A2A    $8AE3   XOR      VA, VE          ; VA ^= VE
$A2C    $9D9A   UNKNOWN  $9D9A           ; Unknown 9xxx instruction
$A2E    $1DCE   JP       $DCE            ; Jump to DCE
$A30    $3647   SE       V6, #47         ; Skip if V6 == 71
$A32    $7708   ADD      V7, #08         ; Add 8 to V7
$A34    $D88F   DRW      V8, V8, #F      ; Draw 15-byte sprite at V8, V8
$A36    $D014   DRW      V0, V1, #4      ; Draw 4-byte sprite at V0, V1
$A38    $7E56   ADD      VE, #56         ; Add 86 to VE
$A3A    $0CE1   SYS      $CE1            ; System call to CE1
$A3C    $D2B4   DRW      V2, VB, #4      ; Draw 4-byte sprite at V2, VB
$A3E    $5FAA   UNKNOWN  $5FAA           ; Unknown 5xxx instruction
$A40    $37BB   SE       V7, #BB         ; Skip if V7 == 187
$A42    $8155   SUB      V1, V5          ; V1 -= V5, VF = !borrow
$A44    $B06A   JP       V0, $06A        ; Jump to V0 + 06A
$A46    $D27A   DRW      V2, V7, #A      ; Draw 10-byte sprite at V2, V7
$A48    $4946   SNE      V9, #46         ; Skip if V9 != 70
$A4A    $7815   ADD      V8, #15         ; Add 21 to V8
$A4C    $09DC   SYS      $9DC            ; System call to 9DC
$A4E    $3870   SE       V8, #70         ; Skip if V8 == 112
$A50    $8C31   OR       VC, V3          ; VC |= V3
$A52    $8BAE   SHL      VB              ; VB <<= 1, VF = MSB
$A54    $EBFA   UNKNOWN  $EBFA           ; Unknown Exxx instruction
$A56    $55F2   UNKNOWN  $55F2           ; Unknown 5xxx instruction
$A58    $6FBF   LD       VF, #BF         ; Load 191 into VF
$A5A    $871B   UNKNOWN  871B            ; Unknown 8xxx instruction
$A5C    $D789   DRW      V7, V8, #9      ; Draw 9-byte sprite at V7, V8
$A5E    $1167   JP       $167            ; Jump to 167
$A60    $3526   SE       V5, #26         ; Skip if V5 == 38
$A62    $747D   ADD      V4, #7D         ; Add 125 to V4
$A64    $B5D3   JP       V0, $5D3        ; Jump to V0 + 5D3
$A66    $6A75   LD       VA, #75         ; Load 117 into VA
$A68    $C49B   RND      V4, #9B         ; V4 = random & 9B
$A6A    $F64C   UNKNOWN  F64C            ; Unknown Fxxx instruction
$A6C    $C0E1   RND      V0, #E1         ; V0 = random & E1
$A6E    $09FA   SYS      $9FA            ; System call to 9FA
$A70    $8AF9   UNKNOWN  8AF9            ; Unknown 8xxx instruction
$A72    $1BA3   JP       $BA3            ; Jump to BA3
$A74    $CF84   RND      VF, #84         ; VF = random & 84
$A76    $60F6   LD       V0, #F6         ; Load 246 into V0
$A78    $A5A5   LD       I, $5A5         ; Load 5A5 into I
$A7A    $6ECB   LD       VE, #CB         ; Load 203 into VE
$A7C    $5292   UNKNOWN  $5292           ; Unknown 5xxx instruction
$A7E    $75A2   ADD      V5, #A2         ; Add 162 to V5
$A80    $8865   SUB      V8, V6          ; V8 -= V6, VF = !borrow
$A82    $0868   SYS      $868            ; System call to 868
$A84    $27E8   CALL     $7E8            ; Call subroutine at 7E8
$A86    $E845   UNKNOWN  $E845           ; Unknown Exxx instruction
$A88    $D196   DRW      V1, V9, #6      ; Draw 6-byte sprite at V1, V9
$A8A    $4C12   SNE      VC, #12         ; Skip if VC != 18
$A8C    $3973   SE       V9, #73         ; Skip if V9 == 115
$A8E    $E9E6   UNKNOWN  $E9E6           ; Unknown Exxx instruction
$A90    $F982   UNKNOWN  F982            ; Unknown Fxxx instruction
$A92    $6216   LD       V2, #16         ; Load 22 into V2
$A94    $B1F0   JP       V0, $1F0        ; Jump to V0 + 1F0
$A96    $F317   UNKNOWN  F317            ; Unknown Fxxx instruction
$A98    $41DA   SNE      V1, #DA         ; Skip if V1 != 218
$A9A    $14C3   JP       $4C3            ; Jump to 4C3
$A9C    $831E   SHL      V3              ; V3 <<= 1, VF = MSB
$A9E    $6573   LD       V5, #73         ; Load 115 into V5
$AA0    $E64E   UNKNOWN  $E64E           ; Unknown Exxx instruction
$AA2    $0D4C   SYS      $D4C            ; System call to D4C
$AA4    $ADAC   LD       I, $DAC         ; Load DAC into I
$AA6    $725A   ADD      V2, #5A         ; Add 90 to V2
$AA8    $7AB6   ADD      VA, #B6         ; Add 182 to VA
$AAA    $5461   UNKNOWN  $5461           ; Unknown 5xxx instruction
$AAC    $4317   SNE      V3, #17         ; Skip if V3 != 23
$AAE    $F1D6   UNKNOWN  F1D6            ; Unknown Fxxx instruction
$AB0    $92E7   UNKNOWN  $92E7           ; Unknown 9xxx instruction
$AB2    $055C   SYS      $55C            ; System call to 55C
$AB4    $5F22   UNKNOWN  $5F22           ; Unknown 5xxx instruction
$AB6    $4A7A   SNE      VA, #7A         ; Skip if VA != 122
$AB8    $3F12   SE       VF, #12         ; Skip if VF == 18
$ABA    $0F80   SYS      $F80            ; System call to F80
$ABC    $F076   UNKNOWN  F076            ; Unknown Fxxx instruction
$ABE    $F051   UNKNOWN  F051            ; Unknown Fxxx instruction
$AC0    $3015   SE       V0, #15         ; Skip if V0 == 21
$AC2    $B0C1   JP       V0, $0C1        ; Jump to V0 + 0C1
$AC4    $0D0E   SYS      $D0E            ; System call to D0E
$AC6    $540B   UNKNOWN  $540B           ; Unknown 5xxx instruction
$AC8    $D480   DRW      V4, V8, #0      ; Draw 0-byte sprite at V4, V8
$ACA    $FDB8   UNKNOWN  FDB8            ; Unknown Fxxx instruction
$ACC    $7469   ADD      V4, #69         ; Add 105 to V4
$ACE    $01D5   SYS      $1D5            ; System call to 1D5
$AD0    $0C5D   SYS      $C5D            ; System call to C5D
$AD2    $02C7   SYS      $2C7            ; System call to 2C7
$AD4    $1E5A   JP       $E5A            ; Jump to E5A
$AD6    $9549   UNKNOWN  $9549           ; Unknown 9xxx instruction
$AD8    $622C   LD       V2, #2C         ; Load 44 into V2
$ADA    $265A   CALL     $65A            ; Call subroutine at 65A
$ADC    $9D30   SNE      VD, V3          ; Skip if VD != V3
$ADE    $3CF2   SE       VC, #F2         ; Skip if VC == 242
$AE0    $E711   UNKNOWN  $E711           ; Unknown Exxx instruction
$AE2    $A502   LD       I, $502         ; Load 502 into I
$AE4    $7CE3   ADD      VC, #E3         ; Add 227 to VC
$AE6    $A902   LD       I, $902         ; Load 902 into I
$AE8    $8BED   UNKNOWN  8BED            ; Unknown 8xxx instruction
$AEA    $978F   UNKNOWN  $978F           ; Unknown 9xxx instruction
$AEC    $3BEC   SE       VB, #EC         ; Skip if VB == 236
$AEE    $0D94   SYS      $D94            ; System call to D94
$AF0    $0B2A   SYS      $B2A            ; System call to B2A
$AF2    $076C   SYS      $76C            ; System call to 76C
$AF4    $EC8D   UNKNOWN  $EC8D           ; Unknown Exxx instruction
$AF6    $4AFB   SNE      VA, #FB         ; Skip if VA != 251
$AF8    $C18B   RND      V1, #8B         ; V1 = random & 8B
$AFA    $D6C2   DRW      V6, VC, #2      ; Draw 2-byte sprite at V6, VC
$AFC    $CC3D   RND      VC, #3D         ; VC = random & 3D
$AFE    $1F67   JP       $F67            ; Jump to F67
$B00    $D6BB   DRW      V6, VB, #B      ; Draw 11-byte sprite at V6, VB
$B02    $0A54   SYS      $A54            ; System call to A54
$B04    $2DA0   CALL     $DA0            ; Call subroutine at DA0
$B06    $882E   SHL      V8              ; V8 <<= 1, VF = MSB
$B08    $4255   SNE      V2, #55         ; Skip if V2 != 85
$B0A    $5EDE   UNKNOWN  $5EDE           ; Unknown 5xxx instruction
$B0C    $6621   LD       V6, #21         ; Load 33 into V6
$B0E    $CB2B   RND      VB, #2B         ; VB = random & 2B
$B10    $2260   CALL     $260            ; Call subroutine at 260
$B12    $1EF6   JP       $EF6            ; Jump to EF6
$B14    $66B5   LD       V6, #B5         ; Load 181 into V6
$B16    $6370   LD       V3, #70         ; Load 112 into V3
$B18    $CAF0   RND      VA, #F0         ; VA = random & F0
$B1A    $6349   LD       V3, #49         ; Load 73 into V3
$B1C    $20FF   CALL     $0FF            ; Call subroutine at 0FF
$B1E    $730B   ADD      V3, #0B         ; Add 11 to V3
$B20    $6EAA   LD       VE, #AA         ; Load 170 into VE
$B22    $6859   LD       V8, #59         ; Load 89 into V8
$B24    $B23D   JP       V0, $23D        ; Jump to V0 + 23D
$B26    $95C6   UNKNOWN  $95C6           ; Unknown 9xxx instruction
$B28    $3AA9   SE       VA, #A9         ; Skip if VA == 169
$B2A    $F850   UNKNOWN  F850            ; Unknown Fxxx instruction
$B2C    $94B8   UNKNOWN  $94B8           ; Unknown 9xxx instruction
$B2E    $B81D   JP       V0, $81D        ; Jump to V0 + 81D
$B30    $DE27   DRW      VE, V2, #7      ; Draw 7-byte sprite at VE, V2
$B32    $D823   DRW      V8, V2, #3      ; Draw 3-byte sprite at V8, V2
$B34    $B2BD   JP       V0, $2BD        ; Jump to V0 + 2BD
$B36    $CFCD   RND      VF, #CD         ; VF = random & CD
$B38    $F4A5   UNKNOWN  F4A5            ; Unknown Fxxx instruction
$B3A    $0AAF   SYS      $AAF            ; System call to AAF
$B3C    $AB6A   LD       I, $B6A         ; Load B6A into I
$B3E    $5A02   UNKNOWN  $5A02           ; Unknown 5xxx instruction
$B40    $00D5   SYS      $0D5            ; System call to 0D5
$B42    $7032   ADD      V0, #32         ; Add 50 to V0
$B44    $E9E3   UNKNOWN  $E9E3           ; Unknown Exxx instruction
$B46    $21B2   CALL     $1B2            ; Call subroutine at 1B2
$B48    $407E   SNE      V0, #7E         ; Skip if V0 != 126
$B4A    $6272   LD       V2, #72         ; Load 114 into V2
$B4C    $8E58   UNKNOWN  8E58            ; Unknown 8xxx instruction
$B4E    $F3F8   UNKNOWN  F3F8            ; Unknown Fxxx instruction
$B50    $6294   LD       V2, #94         ; Load 148 into V2
$B52    $303E   SE       V0, #3E         ; Skip if V0 == 62
$B54    $5383   UNKNOWN  $5383           ; Unknown 5xxx instruction
$B56    $AE17   LD       I, $E17         ; Load E17 into I
$B58    $A5C9   LD       I, $5C9         ; Load 5C9 into I
$B5A    $2F6A   CALL     $F6A            ; Call subroutine at F6A
$B5C    $098A   SYS      $98A            ; System call to 98A
$B5E    $019E   SYS      $19E            ; System call to 19E
$B60    $270A   CALL     $70A            ; Call subroutine at 70A
$B62    $BF65   JP       V0, $F65        ; Jump to V0 + F65
$B64    $C3B3   RND      V3, #B3         ; V3 = random & B3
$B66    $0451   SYS      $451            ; System call to 451
$B68    $3882   SE       V8, #82         ; Skip if V8 == 130
$B6A    $A6E5   LD       I, $6E5         ; Load 6E5 into I
$B6C    $D75B   DRW      V7, V5, #B      ; Draw 11-byte sprite at V7, V5
$B6E    $D8DD   DRW      V8, VD, #D      ; Draw 13-byte sprite at V8, VD
$B70    $D762   DRW      V7, V6, #2      ; Draw 2-byte sprite at V7, V6
$B72    $AA22   LD       I, $A22         ; Load A22 into I
$B74    $FFF0   UNKNOWN  FFF0            ; Unknown Fxxx instruction
$B76    $5213   UNKNOWN  $5213           ; Unknown 5xxx instruction
$B78    $2000   CALL     $000            ; Call subroutine at 000
$B7A    $7974   ADD      V9, #74         ; Add 116 to V9
$B7C    $AAEC   LD       I, $AEC         ; Load AEC into I
$B7E    $41A7   SNE      V1, #A7         ; Skip if V1 != 167
$B80    $7201   ADD      V2, #01         ; Add 1 to V2
$B82    $8F91   OR       VF, V9          ; VF |= V9
$B84    $AAEA   LD       I, $AEA         ; Load AEA into I
$B86    $5F66   UNKNOWN  $5F66           ; Unknown 5xxx instruction
$B88    $7BB2   ADD      VB, #B2         ; Add 178 to VB
$B8A    $2B75   CALL     $B75            ; Call subroutine at B75
$B8C    $DDDE   DRW      VD, VD, #E      ; Draw 14-byte sprite at VD, VD
$B8E    $F0E9   UNKNOWN  F0E9            ; Unknown Fxxx instruction
$B90    $ABE8   LD       I, $BE8         ; Load BE8 into I
$B92    $1B77   JP       $B77            ; Jump to B77
$B94    $EFD8   UNKNOWN  $EFD8           ; Unknown Exxx instruction
$B96    $CBDD   RND      VB, #DD         ; VB = random & DD
$B98    $9456   UNKNOWN  $9456           ; Unknown 9xxx instruction
$B9A    $57B9   UNKNOWN  $57B9           ; Unknown 5xxx instruction
$B9C    $C474   RND      V4, #74         ; V4 = random & 74
$B9E    $B430   JP       V0, $430        ; Jump to V0 + 430
$BA0    $EB95   UNKNOWN  $EB95           ; Unknown Exxx instruction
$BA2    $1DCF   JP       $DCF            ; Jump to DCF
$BA4    $C8C2   RND      V8, #C2         ; V8 = random & C2
$BA6    $40D3   SNE      V0, #D3         ; Skip if V0 != 211
$BA8    $A911   LD       I, $911         ; Load 911 into I
$BAA    $7AF1   ADD      VA, #F1         ; Add 241 to VA
$BAC    $AE5A   LD       I, $E5A         ; Load E5A into I
$BAE    $54ED   UNKNOWN  $54ED           ; Unknown 5xxx instruction
$BB0    $3D5B   SE       VD, #5B         ; Skip if VD == 91
$BB2    $9115   UNKNOWN  $9115           ; Unknown 9xxx instruction
$BB4    $23C5   CALL     $3C5            ; Call subroutine at 3C5
$BB6    $CFE3   RND      VF, #E3         ; VF = random & E3
$BB8    $EB00   UNKNOWN  $EB00           ; Unknown Exxx instruction
$BBA    $EEA8   UNKNOWN  $EEA8           ; Unknown Exxx instruction
$BBC    $69C2   LD       V9, #C2         ; Load 194 into V9
$BBE    $ABAE   LD       I, $BAE         ; Load BAE into I
$BC0    $FD8D   UNKNOWN  FD8D            ; Unknown Fxxx instruction
$BC2    $192F   JP       $92F            ; Jump to 92F
$BC4    $916F   UNKNOWN  $916F           ; Unknown 9xxx instruction
$BC6    $B945   JP       V0, $945        ; Jump to V0 + 945
$BC8    $2E7D   CALL     $E7D            ; Call subroutine at E7D
$BCA    $705F   ADD      V0, #5F         ; Add 95 to V0
$BCC    $5689   UNKNOWN  $5689           ; Unknown 5xxx instruction
$BCE    $3631   SE       V6, #31         ; Skip if V6 == 49
$BD0    $47D8   SNE      V7, #D8         ; Skip if V7 != 216
$BD2    $DB84   DRW      VB, V8, #4      ; Draw 4-byte sprite at VB, V8
$BD4    $92F8   UNKNOWN  $92F8           ; Unknown 9xxx instruction
$BD6    $C5CA   RND      V5, #CA         ; V5 = random & CA
$BD8    $DBD2   DRW      VB, VD, #2      ; Draw 2-byte sprite at VB, VD
$BDA    $636B   LD       V3, #6B         ; Load 107 into V3
$BDC    $60E7   LD       V0, #E7         ; Load 231 into V0
$BDE    $C489   RND      V4, #89         ; V4 = random & 89
$BE0    $2D4F   CALL     $D4F            ; Call subroutine at D4F
$BE2    $448D   SNE      V4, #8D         ; Skip if V4 != 141
$BE4    $D174   DRW      V1, V7, #4      ; Draw 4-byte sprite at V1, V7
$BE6    $1F58   JP       $F58            ; Jump to F58
$BE8    $0D31   SYS      $D31            ; System call to D31
$BEA    $57FF   UNKNOWN  $57FF           ; Unknown 5xxx instruction
$BEC    $7C19   ADD      VC, #19         ; Add 25 to VC
$BEE    $2A4F   CALL     $A4F            ; Call subroutine at A4F
$BF0    $C35F   RND      V3, #5F         ; V3 = random & 5F
$BF2    $D2F8   DRW      V2, VF, #8      ; Draw 8-byte sprite at V2, VF
$BF4    $9353   UNKNOWN  $9353           ; Unknown 9xxx instruction
$BF6    $16F8   JP       $6F8            ; Jump to 6F8
$BF8    $7A98   ADD      VA, #98         ; Add 152 to VA
$BFA    $E15B   UNKNOWN  $E15B           ; Unknown Exxx instruction
$BFC    $A992   LD       I, $992         ; Load 992 into I
$BFE    $458D   SNE      V5, #8D         ; Skip if V5 != 141
$C00    $588B   UNKNOWN  $588B           ; Unknown 5xxx instruction
$C02    $93F5   UNKNOWN  $93F5           ; Unknown 9xxx instruction
$C04    $26D6   CALL     $6D6            ; Call subroutine at 6D6
$C06    $2375   CALL     $375            ; Call subroutine at 375
$C08    $440E   SNE      V4, #0E         ; Skip if V4 != 14
$C0A    $0624   SYS      $624            ; System call to 624
$C0C    $235D   CALL     $35D            ; Call subroutine at 35D
$C0E    $556E   UNKNOWN  $556E           ; Unknown 5xxx instruction
$C10    $FA25   UNKNOWN  FA25            ; Unknown Fxxx instruction
$C12    $148F   JP       $48F            ; Jump to 48F
$C14    $8EFB   UNKNOWN  8EFB            ; Unknown 8xxx instruction
$C16    $A514   LD       I, $514         ; Load 514 into I
$C18    $344B   SE       V4, #4B         ; Skip if V4 == 75
$C1A    $9F5C   UNKNOWN  $9F5C           ; Unknown 9xxx instruction
$C1C    $CDB6   RND      VD, #B6         ; VD = random & B6
$C1E    $25B9   CALL     $5B9            ; Call subroutine at 5B9
$C20    $33E8   SE       V3, #E8         ; Skip if V3 == 232
$C22    $724A   ADD      V2, #4A         ; Add 74 to V2
$C24    $C774   RND      V7, #74         ; V7 = random & 74
$C26    $93B4   UNKNOWN  $93B4           ; Unknown 9xxx instruction
$C28    $1B88   JP       $B88            ; Jump to B88
$C2A    $0374   SYS      $374            ; System call to 374
$C2C    $4169   SNE      V1, #69         ; Skip if V1 != 105
$C2E    $A8BE   LD       I, $8BE         ; Load 8BE into I
$C30    $D68C   DRW      V6, V8, #C      ; Draw 12-byte sprite at V6, V8
$C32    $B169   JP       V0, $169        ; Jump to V0 + 169
$C34    $DE54   DRW      VE, V5, #4      ; Draw 4-byte sprite at VE, V5
$C36    $B109   JP       V0, $109        ; Jump to V0 + 109
$C38    $6B42   LD       VB, #42         ; Load 66 into VB
$C3A    $E399   UNKNOWN  $E399           ; Unknown Exxx instruction
$C3C    $8A48   UNKNOWN  8A48            ; Unknown 8xxx instruction
$C3E    $7066   ADD      V0, #66         ; Add 102 to V0
$C40    $A143   LD       I, $143         ; Load 143 into I
$C42    $1677   JP       $677            ; Jump to 677
$C44    $0439   SYS      $439            ; System call to 439
$C46    $21DC   CALL     $1DC            ; Call subroutine at 1DC
$C48    $204F   CALL     $04F            ; Call subroutine at 04F
$C4A    $1161   JP       $161            ; Jump to 161
$C4C    $4939   SNE      V9, #39         ; Skip if V9 != 57
$C4E    $7F35   ADD      VF, #35         ; Add 53 to VF
$C50    $3BF0   SE       VB, #F0         ; Skip if VB == 240
$C52    $8C52   AND      VC, V5          ; VC &= V5
$C54    $842A   UNKNOWN  842A            ; Unknown 8xxx instruction
$C56    $6733   LD       V7, #33         ; Load 51 into V7
$C58    $C5E2   RND      V5, #E2         ; V5 = random & E2
$C5A    $98D2   UNKNOWN  $98D2           ; Unknown 9xxx instruction
$C5C    $9E83   UNKNOWN  $9E83           ; Unknown 9xxx instruction
$C5E    $2710   CALL     $710            ; Call subroutine at 710
$C60    $3485   SE       V4, #85         ; Skip if V4 == 133
$C62    $A5E0   LD       I, $5E0         ; Load 5E0 into I
$C64    $41B7   SNE      V1, #B7         ; Skip if V1 != 183
$C66    $32D1   SE       V2, #D1         ; Skip if V2 == 209
$C68    $F571   UNKNOWN  F571            ; Unknown Fxxx instruction
$C6A    $3A76   SE       VA, #76         ; Skip if VA == 118
$C6C    $D9F4   DRW      V9, VF, #4      ; Draw 4-byte sprite at V9, VF
$C6E    $4991   SNE      V9, #91         ; Skip if V9 != 145
$C70    $2BC7   CALL     $BC7            ; Call subroutine at BC7
$C72    $4B40   SNE      VB, #40         ; Skip if VB != 64
$C74    $2482   CALL     $482            ; Call subroutine at 482
$C76    $443A   SNE      V4, #3A         ; Skip if V4 != 58
$C78    $D2BC   DRW      V2, VB, #C      ; Draw 12-byte sprite at V2, VB
$C7A    $378A   SE       V7, #8A         ; Skip if V7 == 138
$C7C    $5507   UNKNOWN  $5507           ; Unknown 5xxx instruction
$C7E    $2332   CALL     $332            ; Call subroutine at 332
$C80    $F599   UNKNOWN  F599            ; Unknown Fxxx instruction
$C82    $C06D   RND      V0, #6D         ; V0 = random & 6D
$C84    $4AEA   SNE      VA, #EA         ; Skip if VA != 234
$C86    $3687   SE       V6, #87         ; Skip if V6 == 135
$C88    $0472   SYS      $472            ; System call to 472
$C8A    $76C8   ADD      V6, #C8         ; Add 200 to V6
$C8C    $BEC6   JP       V0, $EC6        ; Jump to V0 + EC6
$C8E    $C406   RND      V4, #06         ; V4 = random & 06
$C90    $6D59   LD       VD, #59         ; Load 89 into VD
$C92    $A9A0   LD       I, $9A0         ; Load 9A0 into I
$C94    $ADBE   LD       I, $DBE         ; Load DBE into I
$C96    $A2E2   LD       I, $2E2         ; Load 2E2 into I
$C98    $BB73   JP       V0, $B73        ; Jump to V0 + B73
$C9A    $54DF   UNKNOWN  $54DF           ; Unknown 5xxx instruction
$C9C    $9A0F   UNKNOWN  $9A0F           ; Unknown 9xxx instruction
$C9E    $5722   UNKNOWN  $5722           ; Unknown 5xxx instruction
$CA0    $D29C   DRW      V2, V9, #C      ; Draw 12-byte sprite at V2, V9
$CA2    $8702   AND      V7, V0          ; V7 &= V0
$CA4    $B241   JP       V0, $241        ; Jump to V0 + 241
$CA6    $FE75   UNKNOWN  FE75            ; Unknown Fxxx instruction
$CA8    $09F1   SYS      $9F1            ; System call to 9F1
$CAA    $2EE2   CALL     $EE2            ; Call subroutine at EE2
$CAC    $0F95   SYS      $F95            ; System call to F95
$CAE    $F80F   UNKNOWN  F80F            ; Unknown Fxxx instruction
$CB0    $E79C   UNKNOWN  $E79C           ; Unknown Exxx instruction
$CB2    $8DF1   OR       VD, VF          ; VD |= VF
$CB4    $680C   LD       V8, #0C         ; Load 12 into V8
$CB6    $29C1   CALL     $9C1            ; Call subroutine at 9C1
$CB8    $6280   LD       V2, #80         ; Load 128 into V2
$CBA    $C785   RND      V7, #85         ; V7 = random & 85
$CBC    $41A8   SNE      V1, #A8         ; Skip if V1 != 168
$CBE    $3DD9   SE       VD, #D9         ; Skip if VD == 217
$CC0    $F27A   UNKNOWN  F27A            ; Unknown Fxxx instruction
$CC2    $29E3   CALL     $9E3            ; Call subroutine at 9E3
$CC4    $64F8   LD       V4, #F8         ; Load 248 into V4
$CC6    $F52A   UNKNOWN  F52A            ; Unknown Fxxx instruction
$CC8    $77C9   ADD      V7, #C9         ; Add 201 to V7
$CCA    $02BA   SYS      $2BA            ; System call to 2BA
$CCC    $3E5F   SE       VE, #5F         ; Skip if VE == 95
$CCE    $5282   UNKNOWN  $5282           ; Unknown 5xxx instruction
$CD0    $308B   SE       V0, #8B         ; Skip if V0 == 139
$CD2    $3680   SE       V6, #80         ; Skip if V6 == 128
$CD4    $584B   UNKNOWN  $584B           ; Unknown 5xxx instruction
$CD6    $51BC   UNKNOWN  $51BC           ; Unknown 5xxx instruction
$CD8    $073C   SYS      $73C            ; System call to 73C
$CDA    $D488   DRW      V4, V8, #8      ; Draw 8-byte sprite at V4, V8
$CDC    $DA23   DRW      VA, V2, #3      ; Draw 3-byte sprite at VA, V2
$CDE    $4636   SNE      V6, #36         ; Skip if V6 != 54
$CE0    $C309   RND      V3, #09         ; V3 = random & 09
$CE2    $20F5   CALL     $0F5            ; Call subroutine at 0F5
$CE4    $8CDB   UNKNOWN  8CDB            ; Unknown 8xxx instruction
$CE6    $80BD   UNKNOWN  80BD            ; Unknown 8xxx instruction
$CE8    $98D3   UNKNOWN  $98D3           ; Unknown 9xxx instruction
$CEA    $585D   UNKNOWN  $585D           ; Unknown 5xxx instruction
$CEC    $9394   UNKNOWN  $9394           ; Unknown 9xxx instruction
$CEE    $EABD   UNKNOWN  $EABD           ; Unknown Exxx instruction
$CF0    $1E6C   JP       $E6C            ; Jump to E6C
$CF2    $880E   SHL      V8              ; V8 <<= 1, VF = MSB
$CF4    $4E19   SNE      VE, #19         ; Skip if VE != 25
$CF6    $30C2   SE       V0, #C2         ; Skip if V0 == 194
$CF8    $4F4D   SNE      VF, #4D         ; Skip if VF != 77
$CFA    $1BD6   JP       $BD6            ; Jump to BD6
$CFC    $D13D   DRW      V1, V3, #D      ; Draw 13-byte sprite at V1, V3
$CFE    $ED4F   UNKNOWN  $ED4F           ; Unknown Exxx instruction
$D00    $C554   RND      V5, #54         ; V5 = random & 54
$D02    $1605   JP       $605            ; Jump to 605
$D04    $302D   SE       V0, #2D         ; Skip if V0 == 45
$D06    $3791   SE       V7, #91         ; Skip if V7 == 145
$D08    $595D   UNKNOWN  $595D           ; Unknown 5xxx instruction
$D0A    $8564   ADD      V5, V6          ; V5 += V6, VF = carry
$D0C    $789C   ADD      V8, #9C         ; Add 156 to V8
$D0E    $573C   UNKNOWN  $573C           ; Unknown 5xxx instruction
$D10    $8A09   UNKNOWN  8A09            ; Unknown 8xxx instruction
$D12    $4E7F   SNE      VE, #7F         ; Skip if VE != 127
$D14    $8FC2   AND      VF, VC          ; VF &= VC
$D16    $A423   LD       I, $423         ; Load 423 into I
$D18    $D93A   DRW      V9, V3, #A      ; Draw 10-byte sprite at V9, V3
$D1A    $6626   LD       V6, #26         ; Load 38 into V6
$D1C    $7D7E   ADD      VD, #7E         ; Add 126 to VD
$D1E    $2564   CALL     $564            ; Call subroutine at 564
$D20    $AC52   LD       I, $C52         ; Load C52 into I
$D22    $498E   SNE      V9, #8E         ; Skip if V9 != 142
$D24    $7D8B   ADD      VD, #8B         ; Add 139 to VD
$D26    $24CD   CALL     $4CD            ; Call subroutine at 4CD
$D28    $BED5   JP       V0, $ED5        ; Jump to V0 + ED5
$D2A    $6AC1   LD       VA, #C1         ; Load 193 into VA
$D2C    $1551   JP       $551            ; Jump to 551
$D2E    $6EA7   LD       VE, #A7         ; Load 167 into VE
$D30    $6AEC   LD       VA, #EC         ; Load 236 into VA
$D32    $9A08   UNKNOWN  $9A08           ; Unknown 9xxx instruction
$D34    $D574   DRW      V5, V7, #4      ; Draw 4-byte sprite at V5, V7
$D36    $2B65   CALL     $B65            ; Call subroutine at B65
$D38    $C661   RND      V6, #61         ; V6 = random & 61
$D3A    $6A25   LD       VA, #25         ; Load 37 into VA
$D3C    $CFF4   RND      VF, #F4         ; VF = random & F4
$D3E    $41E3   SNE      V1, #E3         ; Skip if V1 != 227
$D40    $EB2E   UNKNOWN  $EB2E           ; Unknown Exxx instruction
$D42    $4BB8   SNE      VB, #B8         ; Skip if VB != 184
$D44    $36F5   SE       V6, #F5         ; Skip if V6 == 245
$D46    $7B0D   ADD      VB, #0D         ; Add 13 to VB
$D48    $8763   XOR      V7, V6          ; V7 ^= V6
$D4A    $F9E6   UNKNOWN  F9E6            ; Unknown Fxxx instruction
$D4C    $C253   RND      V2, #53         ; V2 = random & 53
$D4E    $8C60   LD       VC, V6          ; VC = V6
$D50    $D1FF   DRW      V1, VF, #F      ; Draw 15-byte sprite at V1, VF
$D52    $A4BA   LD       I, $4BA         ; Load 4BA into I
$D54    $A680   LD       I, $680         ; Load 680 into I
$D56    $E1BF   UNKNOWN  $E1BF           ; Unknown Exxx instruction
$D58    $3783   SE       V7, #83         ; Skip if V7 == 131
$D5A    $1E85   JP       $E85            ; Jump to E85
$D5C    $376D   SE       V7, #6D         ; Skip if V7 == 109
$D5E    $6D45   LD       VD, #45         ; Load 69 into VD
$D60    $9721   UNKNOWN  $9721           ; Unknown 9xxx instruction
$D62    $53EF   UNKNOWN  $53EF           ; Unknown 5xxx instruction
$D64    $16B3   JP       $6B3            ; Jump to 6B3
$D66    $E643   UNKNOWN  $E643           ; Unknown Exxx instruction
$D68    $871C   UNKNOWN  871C            ; Unknown 8xxx instruction
$D6A    $2649   CALL     $649            ; Call subroutine at 649
$D6C    $1E8C   JP       $E8C            ; Jump to E8C
$D6E    $9AFC   UNKNOWN  $9AFC           ; Unknown 9xxx instruction
$D70    $B7F0   JP       V0, $7F0        ; Jump to V0 + 7F0
$D72    $3E79   SE       VE, #79         ; Skip if VE == 121
$D74    $18E1   JP       $8E1            ; Jump to 8E1
$D76    $0DBD   SYS      $DBD            ; System call to DBD
$D78    $7332   ADD      V3, #32         ; Add 50 to V3
$D7A    $95D3   UNKNOWN  $95D3           ; Unknown 9xxx instruction
$D7C    $6728   LD       V7, #28         ; Load 40 into V7
$D7E    $74C9   ADD      V4, #C9         ; Add 201 to V4
$D80    $59B6   UNKNOWN  $59B6           ; Unknown 5xxx instruction
$D82    $BF1D   JP       V0, $F1D        ; Jump to V0 + F1D
$D84    $31AB   SE       V1, #AB         ; Skip if V1 == 171
$D86    $B0E8   JP       V0, $0E8        ; Jump to V0 + 0E8
$D88    $51B7   UNKNOWN  $51B7           ; Unknown 5xxx instruction
$D8A    $C2F0   RND      V2, #F0         ; V2 = random & F0
$D8C    $5C39   UNKNOWN  $5C39           ; Unknown 5xxx instruction
$D8E    $FD05   UNKNOWN  FD05            ; Unknown Fxxx instruction
$D90    $D650   DRW      V6, V5, #0      ; Draw 0-byte sprite at V6, V5
$D92    $4BCD   SNE      VB, #CD         ; Skip if VB != 205
$D94    $692A   LD       V9, #2A         ; Load 42 into V9
$D96    $05FC   SYS      $5FC            ; System call to 5FC
$D98    $D63A   DRW      V6, V3, #A      ; Draw 10-byte sprite at V6, V3
$D9A    $739A   ADD      V3, #9A         ; Add 154 to V3
$D9C    $A056   LD       I, $056         ; Load 056 into I
$D9E    $064A   SYS      $64A            ; System call to 64A
$DA0    $1F8E   JP       $F8E            ; Jump to F8E
$DA2    $B3B1   JP       V0, $3B1        ; Jump to V0 + 3B1
$DA4    $35EB   SE       V5, #EB         ; Skip if V5 == 235
$DA6    $33FA   SE       V3, #FA         ; Skip if V3 == 250
$DA8    $2258   CALL     $258            ; Call subroutine at 258
$DAA    $866D   UNKNOWN  866D            ; Unknown 8xxx instruction
$DAC    $F0E6   UNKNOWN  F0E6            ; Unknown Fxxx instruction
$DAE    $BCDE   JP       V0, $CDE        ; Jump to V0 + CDE
$DB0    $A7AA   LD       I, $7AA         ; Load 7AA into I
$DB2    $B0A2   JP       V0, $0A2        ; Jump to V0 + 0A2
$DB4    $F926   UNKNOWN  F926            ; Unknown Fxxx instruction
$DB6    $A7C5   LD       I, $7C5         ; Load 7C5 into I
$DB8    $9733   UNKNOWN  $9733           ; Unknown 9xxx instruction
$DBA    $5922   UNKNOWN  $5922           ; Unknown 5xxx instruction
$DBC    $64D1   LD       V4, #D1         ; Load 209 into V4
$DBE    $46CC   SNE      V6, #CC         ; Skip if V6 != 204
$DC0    $6608   LD       V6, #08         ; Load 8 into V6
$DC2    $1331   JP       $331            ; Jump to 331
$DC4    $F4E6   UNKNOWN  F4E6            ; Unknown Fxxx instruction
$DC6    $56BD   UNKNOWN  $56BD           ; Unknown 5xxx instruction
$DC8    $322D   SE       V2, #2D         ; Skip if V2 == 45
$DCA    $9AA4   UNKNOWN  $9AA4           ; Unknown 9xxx instruction
$DCC    $565E   UNKNOWN  $565E           ; Unknown 5xxx instruction
$DCE    $1F78   JP       $F78            ; Jump to F78
$DD0    $60B5   LD       V0, #B5         ; Load 181 into V0
$DD2    $CACE   RND      VA, #CE         ; VA = random & CE
$DD4    $39C7   SE       V9, #C7         ; Skip if V9 == 199
$DD6    $F672   UNKNOWN  F672            ; Unknown Fxxx instruction
$DD8    $6533   LD       V5, #33         ; Load 51 into V5
$DDA    $1EE2   JP       $EE2            ; Jump to EE2
$DDC    $C54C   RND      V5, #4C         ; V5 = random & 4C
$DDE    $81F8   UNKNOWN  81F8            ; Unknown 8xxx instruction
$DE0    $85D0   LD       V5, VD          ; V5 = VD
$DE2    $FD7A   UNKNOWN  FD7A            ; Unknown Fxxx instruction
$DE4    $E22D   UNKNOWN  $E22D           ; Unknown Exxx instruction
$DE6    $E235   UNKNOWN  $E235           ; Unknown Exxx instruction
$DE8    $6FE4   LD       VF, #E4         ; Load 228 into VF
$DEA    $6629   LD       V6, #29         ; Load 41 into V6
$DEC    $C966   RND      V9, #66         ; V9 = random & 66
$DEE    $30B1   SE       V0, #B1         ; Skip if V0 == 177
$DF0    $C102   RND      V1, #02         ; V1 = random & 02
$DF2    $A305   LD       I, $305         ; Load 305 into I
$DF4    $9EEB   UNKNOWN  $9EEB           ; Unknown 9xxx instruction
$DF6    $2557   CALL     $557            ; Call subroutine at 557
$DF8    $D30F   DRW      V3, V0, #F      ; Draw 15-byte sprite at V3, V0
$DFA    $F977   UNKNOWN  F977            ; Unknown Fxxx instruction
$DFC    $E7B5   UNKNOWN  $E7B5           ; Unknown Exxx instruction
$DFE    $6572   LD       V5, #72         ; Load 114 into V5
$E00    $ECBF   UNKNOWN  $ECBF           ; Unknown Exxx instruction
$E02    $930B   UNKNOWN  $930B           ; Unknown 9xxx instruction
$E04    $9161   UNKNOWN  $9161           ; Unknown 9xxx instruction
$E06    $EB20   UNKNOWN  $EB20           ; Unknown Exxx instruction
$E08    $264E   CALL     $64E            ; Call subroutine at 64E
$E0A    $B062   JP       V0, $062        ; Jump to V0 + 062
$E0C    $DED3   DRW      VE, VD, #3      ; Draw 3-byte sprite at VE, VD
$E0E    $DCA2   DRW      VC, VA, #2      ; Draw 2-byte sprite at VC, VA
$E10    $4F63   SNE      VF, #63         ; Skip if VF != 99
$E12    $B22A   JP       V0, $22A        ; Jump to V0 + 22A
$E14    $290A   CALL     $90A            ; Call subroutine at 90A
$E16    $A873   LD       I, $873         ; Load 873 into I
$E18    $F4EB   UNKNOWN  F4EB            ; Unknown Fxxx instruction
$E1A    $7D6E   ADD      VD, #6E         ; Add 110 to VD
$E1C    $6698   LD       V6, #98         ; Load 152 into V6
$E1E    $649F   LD       V4, #9F         ; Load 159 into V4
$E20    $62EB   LD       V2, #EB         ; Load 235 into V2
$E22    $9792   UNKNOWN  $9792           ; Unknown 9xxx instruction
$E24    $5B88   UNKNOWN  $5B88           ; Unknown 5xxx instruction
$E26    $90DD   UNKNOWN  $90DD           ; Unknown 9xxx instruction
$E28    $A2AD   LD       I, $2AD         ; Load 2AD into I
$E2A    $FF10   UNKNOWN  FF10            ; Unknown Fxxx instruction
$E2C    $BDF4   JP       V0, $DF4        ; Jump to V0 + DF4
$E2E    $4333   SNE      V3, #33         ; Skip if V3 != 51
$E30    $7DA6   ADD      VD, #A6         ; Add 166 to VD
$E32    $348B   SE       V4, #8B         ; Skip if V4 == 139
$E34    $772A   ADD      V7, #2A         ; Add 42 to V7
$E36    $AE16   LD       I, $E16         ; Load E16 into I
$E38    $A6D1   LD       I, $6D1         ; Load 6D1 into I
$E3A    $8ADA   UNKNOWN  8ADA            ; Unknown 8xxx instruction
$E3C    $E6B5   UNKNOWN  $E6B5           ; Unknown Exxx instruction
$E3E    $A92A   LD       I, $92A         ; Load 92A into I
$E40    $48C2   SNE      V8, #C2         ; Skip if V8 != 194
$E42    $C7C6   RND      V7, #C6         ; V7 = random & C6
$E44    $B10F   JP       V0, $10F        ; Jump to V0 + 10F
$E46    $EEAE   UNKNOWN  $EEAE           ; Unknown Exxx instruction
$E48    $D9DB   DRW      V9, VD, #B      ; Draw 11-byte sprite at V9, VD
$E4A    $009D   SYS      $09D            ; System call to 09D
$E4C    $BCD2   JP       V0, $CD2        ; Jump to V0 + CD2
$E4E    $D646   DRW      V6, V4, #6      ; Draw 6-byte sprite at V6, V4
$E50    $251A   CALL     $51A            ; Call subroutine at 51A
$E52    $A230   LD       I, $230         ; Load 230 into I
$E54    $D865   DRW      V8, V6, #5      ; Draw 5-byte sprite at V8, V6
$E56    $780C   ADD      V8, #0C         ; Add 12 to V8
$E58    $C534   RND      V5, #34         ; V5 = random & 34
$E5A    $D467   DRW      V4, V6, #7      ; Draw 7-byte sprite at V4, V6
$E5C    $1825   JP       $825            ; Jump to 825
$E5E    $CF7E   RND      VF, #7E         ; VF = random & 7E
$E60    $DA1C   DRW      VA, V1, #C      ; Draw 12-byte sprite at VA, V1
$E62    $F5CC   UNKNOWN  F5CC            ; Unknown Fxxx instruction
$E64    $2C94   CALL     $C94            ; Call subroutine at C94
$E66    $D601   DRW      V6, V0, #1      ; Draw 1-byte sprite at V6, V0
$E68    $CB47   RND      VB, #47         ; VB = random & 47
$E6A    $8A22   AND      VA, V2          ; VA &= V2
$E6C    $0B9F   SYS      $B9F            ; System call to B9F
$E6E    $DE9A   DRW      VE, V9, #A      ; Draw 10-byte sprite at VE, V9
$E70    $B50D   JP       V0, $50D        ; Jump to V0 + 50D
$E72    $7B03   ADD      VB, #03         ; Add 3 to VB
$E74    $FD66   UNKNOWN  FD66            ; Unknown Fxxx instruction
$E76    $9188   UNKNOWN  $9188           ; Unknown 9xxx instruction
$E78    $21A4   CALL     $1A4            ; Call subroutine at 1A4
$E7A    $8C55   SUB      VC, V5          ; VC -= V5, VF = !borrow
$E7C    $0A12   SYS      $A12            ; System call to A12
$E7E    $F4A2   UNKNOWN  F4A2            ; Unknown Fxxx instruction
$E80    $C694   RND      V6, #94         ; V6 = random & 94
$E82    $A94B   LD       I, $94B         ; Load 94B into I
$E84    $F070   UNKNOWN  F070            ; Unknown Fxxx instruction
$E86    $331F   SE       V3, #1F         ; Skip if V3 == 31
$E88    $9FAF   UNKNOWN  $9FAF           ; Unknown 9xxx instruction
$E8A    $1CA3   JP       $CA3            ; Jump to CA3
$E8C    $7530   ADD      V5, #30         ; Add 48 to V5
$E8E    $919E   UNKNOWN  $919E           ; Unknown 9xxx instruction
$E90    $E103   UNKNOWN  $E103           ; Unknown Exxx instruction
$E92    $3D70   SE       VD, #70         ; Skip if VD == 112
$E94    $B35E   JP       V0, $35E        ; Jump to V0 + 35E
$E96    $DABE   DRW      VA, VB, #E      ; Draw 14-byte sprite at VA, VB
$E98    $FD64   UNKNOWN  FD64            ; Unknown Fxxx instruction
$E9A    $6656   LD       V6, #56         ; Load 86 into V6
$E9C    $575B   UNKNOWN  $575B           ; Unknown 5xxx instruction
$E9E    $FA64   UNKNOWN  FA64            ; Unknown Fxxx instruction
$EA0    $122D   JP       $22D            ; Jump to 22D
$EA2    $9DA3   UNKNOWN  $9DA3           ; Unknown 9xxx instruction
$EA4    $B31D   JP       V0, $31D        ; Jump to V0 + 31D
$EA6    $7A63   ADD      VA, #63         ; Add 99 to VA
$EA8    $DF33   DRW      VF, V3, #3      ; Draw 3-byte sprite at VF, V3
$EAA    $3DAD   SE       VD, #AD         ; Skip if VD == 173
$EAC    $A59D   LD       I, $59D         ; Load 59D into I
$EAE    $0A47   SYS      $A47            ; System call to A47
$EB0    $962F   UNKNOWN  $962F           ; Unknown 9xxx instruction
$EB2    $F7B6   UNKNOWN  F7B6            ; Unknown Fxxx instruction
$EB4    $D58A   DRW      V5, V8, #A      ; Draw 10-byte sprite at V5, V8
$EB6    $337C   SE       V3, #7C         ; Skip if V3 == 124
$EB8    $1C8A   JP       $C8A            ; Jump to C8A
$EBA    $2070   CALL     $070            ; Call subroutine at 070
$EBC    $255C   CALL     $55C            ; Call subroutine at 55C
$EBE    $2FF7   CALL     $FF7            ; Call subroutine at FF7
$EC0    $3681   SE       V6, #81         ; Skip if V6 == 129
$EC2    $38E8   SE       V8, #E8         ; Skip if V8 == 232
$EC4    $2EF4   CALL     $EF4            ; Call subroutine at EF4
$EC6    $54CE   UNKNOWN  $54CE           ; Unknown 5xxx instruction
$EC8    $C175   RND      V1, #75         ; V1 = random & 75
$ECA    $369C   SE       V6, #9C         ; Skip if V6 == 156
$ECC    $1D1D   JP       $D1D            ; Jump to D1D
$ECE    $BA98   JP       V0, $A98        ; Jump to V0 + A98
$ED0    $35A3   SE       V5, #A3         ; Skip if V5 == 163
$ED2    $DED2   DRW      VE, VD, #2      ; Draw 2-byte sprite at VE, VD
$ED4    $5643   UNKNOWN  $5643           ; Unknown 5xxx instruction
$ED6    $539D   UNKNOWN  $539D           ; Unknown 5xxx instruction
$ED8    $4F57   SNE      VF, #57         ; Skip if VF != 87
$EDA    $8204   ADD      V2, V0          ; V2 += V0, VF = carry
$EDC    $D946   DRW      V9, V4, #6      ; Draw 6-byte sprite at V9, V4
$EDE    $CC1B   RND      VC, #1B         ; VC = random & 1B
$EE0    $BCC2   JP       V0, $CC2        ; Jump to V0 + CC2
$EE2    $7BC7   ADD      VB, #C7         ; Add 199 to VB
$EE4    $3119   SE       V1, #19         ; Skip if V1 == 25
$EE6    $C77E   RND      V7, #7E         ; V7 = random & 7E
$EE8    $F0C8   UNKNOWN  F0C8            ; Unknown Fxxx instruction
$EEA    $7289   ADD      V2, #89         ; Add 137 to V2
$EEC    $2983   CALL     $983            ; Call subroutine at 983
$EEE    $EF8E   UNKNOWN  $EF8E           ; Unknown Exxx instruction
$EF0    $616C   LD       V1, #6C         ; Load 108 into V1
$EF2    $48F2   SNE      V8, #F2         ; Skip if V8 != 242
$EF4    $23B7   CALL     $3B7            ; Call subroutine at 3B7
$EF6    $7F95   ADD      VF, #95         ; Add 149 to VF
$EF8    $7DA4   ADD      VD, #A4         ; Add 164 to VD
$EFA    $61F6   LD       V1, #F6         ; Load 246 into V1
$EFC    $6B6E   LD       VB, #6E         ; Load 110 into VB
$EFE    $D885   DRW      V8, V8, #5      ; Draw 5-byte sprite at V8, V8
$F00    $8ED0   LD       VE, VD          ; VE = VD
$F02    $C7CB   RND      V7, #CB         ; V7 = random & CB
$F04    $1C2C   JP       $C2C            ; Jump to C2C
$F06    $BD40   JP       V0, $D40        ; Jump to V0 + D40
$F08    $A790   LD       I, $790         ; Load 790 into I
$F0A    $7929   ADD      V9, #29         ; Add 41 to V9
$F0C    $5221   UNKNOWN  $5221           ; Unknown 5xxx instruction
$F0E    $8A06   SHR      VA              ; VA >>= 1, VF = LSB
$F10    $6BE3   LD       VB, #E3         ; Load 227 into VB
$F12    $326E   SE       V2, #6E         ; Skip if V2 == 110
$F14    $E643   UNKNOWN  $E643           ; Unknown Exxx instruction
$F16    $0FE9   SYS      $FE9            ; System call to FE9
$F18    $9605   UNKNOWN  $9605           ; Unknown 9xxx instruction
$F1A    $5E50   SE       VE, V5          ; Skip if VE == V5
$F1C    $38E1   SE       V8, #E1         ; Skip if V8 == 225
$F1E    $1F0E   JP       $F0E            ; Jump to F0E
$F20    $DCFF   DRW      VC, VF, #F      ; Draw 15-byte sprite at VC, VF
$F22    $711C   ADD      V1, #1C         ; Add 28 to V1
$F24    $CC62   RND      VC, #62         ; VC = random & 62
$F26    $FDEC   UNKNOWN  FDEC            ; Unknown Fxxx instruction
$F28    $3B82   SE       VB, #82         ; Skip if VB == 130
$F2A    $424F   SNE      V2, #4F         ; Skip if V2 != 79
$F2C    $BBBB   JP       V0, $BBB        ; Jump to V0 + BBB
$F2E    $67F4   LD       V7, #F4         ; Load 244 into V7
$F30    $CC6C   RND      VC, #6C         ; VC = random & 6C
$F32    $DDC0   DRW      VD, VC, #0      ; Draw 0-byte sprite at VD, VC
$F34    $0412   SYS      $412            ; System call to 412
$F36    $FE90   UNKNOWN  FE90            ; Unknown Fxxx instruction
$F38    $4114   SNE      V1, #14         ; Skip if V1 != 20
$F3A    $BB19   JP       V0, $B19        ; Jump to V0 + B19
$F3C    $E31A   UNKNOWN  $E31A           ; Unknown Exxx instruction
$F3E    $B43C   JP       V0, $43C        ; Jump to V0 + 43C
$F40    $22D2   CALL     $2D2            ; Call subroutine at 2D2
$F42    $99AA   UNKNOWN  $99AA           ; Unknown 9xxx instruction
$F44    $1BFB   JP       $BFB            ; Jump to BFB
$F46    $1E3A   JP       $E3A            ; Jump to E3A
$F48    $8B65   SUB      VB, V6          ; VB -= V6, VF = !borrow
$F4A    $B065   JP       V0, $065        ; Jump to V0 + 065
$F4C    $7558   ADD      V5, #58         ; Add 88 to V5
$F4E    $3455   SE       V4, #55         ; Skip if V4 == 85
$F50    $0C9A   SYS      $C9A            ; System call to C9A
$F52    $F835   UNKNOWN  F835            ; Unknown Fxxx instruction
$F54    $5B8B   UNKNOWN  $5B8B           ; Unknown 5xxx instruction
$F56    $D3A1   DRW      V3, VA, #1      ; Draw 1-byte sprite at V3, VA
$F58    $B0AE   JP       V0, $0AE        ; Jump to V0 + 0AE
$F5A    $6277   LD       V2, #77         ; Load 119 into V2
$F5C    $0B52   SYS      $B52            ; System call to B52
$F5E    $AA5A   LD       I, $A5A         ; Load A5A into I
$F60    $3E2B   SE       VE, #2B         ; Skip if VE == 43
$F62    $2CFB   CALL     $CFB            ; Call subroutine at CFB
$F64    $DF36   DRW      VF, V3, #6      ; Draw 6-byte sprite at VF, V3
$F66    $8515   SUB      V5, V1          ; V5 -= V1, VF = !borrow
$F68    $D34B   DRW      V3, V4, #B      ; Draw 11-byte sprite at V3, V4
$F6A    $7747   ADD      V7, #47         ; Add 71 to V7
$F6C    $C335   RND      V3, #35         ; V3 = random & 35
$F6E    $D31A   DRW      V3, V1, #A      ; Draw 10-byte sprite at V3, V1
$F70    $A616   LD       I, $616         ; Load 616 into I
$F72    $28D8   CALL     $8D8            ; Call subroutine at 8D8
$F74    $FA64   UNKNOWN  FA64            ; Unknown Fxxx instruction
$F76    $D586   DRW      V5, V8, #6      ; Draw 6-byte sprite at V5, V8
$F78    $F0D1   UNKNOWN  F0D1            ; Unknown Fxxx instruction
$F7A    $5A08   UNKNOWN  $5A08           ; Unknown 5xxx instruction
$F7C    $17BE   JP       $7BE            ; Jump to 7BE
$F7E    $AE96   LD       I, $E96         ; Load E96 into I
$F80    $8337   SUBN     V3, V3          ; V3 = V3 - V3, VF = !borrow
$F82    $525D   UNKNOWN  $525D           ; Unknown 5xxx instruction
$F84    $5D0D   UNKNOWN  $5D0D           ; Unknown 5xxx instruction
$F86    $B304   JP       V0, $304        ; Jump to V0 + 304
$F88    $9217   UNKNOWN  $9217           ; Unknown 9xxx instruction
$F8A    $AA9F   LD       I, $A9F         ; Load A9F into I
$F8C    $8CDC   UNKNOWN  8CDC            ; Unknown 8xxx instruction
$F8E    $F61E   ADD      I, V6           ; I += V6
$F90    $A4E4   LD       I, $4E4         ; Load 4E4 into I
$F92    $3E33   SE       VE, #33         ; Skip if VE == 51
$F94    $C8CE   RND      V8, #CE         ; V8 = random & CE
$F96    $85E9   UNKNOWN  85E9            ; Unknown 8xxx instruction
$F98    $FA33   LD       B, VA           ; Store BCD of VA at I, I+1, I+2
$F9A    $93B2   UNKNOWN  $93B2           ; Unknown 9xxx instruction
$F9C    $D929   DRW      V9, V2, #9      ; Draw 9-byte sprite at V9, V2
$F9E    $A0C9   LD       I, $0C9         ; Load 0C9 into I
$FA0    $0CF0   SYS      $CF0            ; System call to CF0
$FA2    $E7CB   UNKNOWN  $E7CB           ; Unknown Exxx instruction
$FA4    $56B9   UNKNOWN  $56B9           ; Unknown 5xxx instruction
$FA6    $305B   SE       V0, #5B         ; Skip if V0 == 91
$FA8    $E612   UNKNOWN  $E612           ; Unknown Exxx instruction
$FAA    $990B   UNKNOWN  $990B           ; Unknown 9xxx instruction
$FAC    $1B35   JP       $B35            ; Jump to B35
$FAE    $A90B   LD       I, $90B         ; Load 90B into I
$FB0    $07D0   SYS      $7D0            ; System call to 7D0
$FB2    $B464   JP       V0, $464        ; Jump to V0 + 464
$FB4    $F422   UNKNOWN  F422            ; Unknown Fxxx instruction
$FB6    $FD06   UNKNOWN  FD06            ; Unknown Fxxx instruction
$FB8    $980A   UNKNOWN  $980A           ; Unknown 9xxx instruction
$FBA    $60CC   LD       V0, #CC         ; Load 204 into V0
$FBC    $310C   SE       V1, #0C         ; Skip if V1 == 12
$FBE    $65D7   LD       V5, #D7         ; Load 215 into V5
$FC0    $74E6   ADD      V4, #E6         ; Add 230 to V4
$FC2    $45B8   SNE      V5, #B8         ; Skip if V5 != 184
$FC4    $20CA   CALL     $0CA            ; Call subroutine at 0CA
$FC6    $E3FC   UNKNOWN  $E3FC           ; Unknown Exxx instruction
$FC8    $9191   UNKNOWN  $9191           ; Unknown 9xxx instruction
$FCA    $78F3   ADD      V8, #F3         ; Add 243 to V8
$FCC    $0FC4   SYS      $FC4            ; System call to FC4
$FCE    $CDB3   RND      VD, #B3         ; VD = random & B3
$FD0    $8986   SHR      V9              ; V9 >>= 1, VF = LSB
$FD2    $F019   UNKNOWN  F019            ; Unknown Fxxx instruction
$FD4    $B875   JP       V0, $875        ; Jump to V0 + 875
$FD6    $D654   DRW      V6, V5, #4      ; Draw 4-byte sprite at V6, V5
$FD8    $24AB   CALL     $4AB            ; Call subroutine at 4AB
$FDA    $F0E4   UNKNOWN  F0E4            ; Unknown Fxxx instruction
$FDC    $F57C   UNKNOWN  F57C            ; Unknown Fxxx instruction
$FDE    $3956   SE       V9, #56         ; Skip if V9 == 86
$FE0    $FAF6   UNKNOWN  FAF6            ; Unknown Fxxx instruction
$FE2    $401D   SNE      V0, #1D         ; Skip if V0 != 29
$FE4    $9321   UNKNOWN  $9321           ; Unknown 9xxx instruction
$FE6    $255A   CALL     $55A            ; Call subroutine at 55A
$FE8    $3118   SE       V1, #18         ; Skip if V1 == 24
$FEA    $093A   SYS      $93A            ; System call to 93A
$FEC    $CEA3   RND      VE, #A3         ; VE = random & A3
$FEE    $53C6   UNKNOWN  $53C6           ; Unknown 5xxx instruction
$FF0    $7640   ADD      V6, #40         ; Add 64 to V6
$FF2    $2200   CALL     $200            ; Call subroutine at 200
$FF4    $86C0   LD       V6, VC          ; V6 = VC
$FF6    $A360   LD       I, $360         ; Load 360 into I
$FF8    $44AE   SNE      V4, #AE         ; Skip if V4 != 174
$FFA    $B4E9   JP       V0, $4E9        ; Jump to V0 + 4E9
$FFC    $CB7E   RND      VB, #7E         ; VB = random & 7E
$FFE    $9A88   UNKNOWN  $9A88           ; Unknown 9xxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 458 (25.6%)
  LD      : 237 (13.2%)
  JP      : 224 (12.5%)
  SE      : 131 ( 7.3%)
  DRW     : 121 ( 6.8%)
  CALL    : 120 ( 6.7%)
  SNE     : 116 ( 6.5%)
  SYS     : 108 ( 6.0%)
  ADD     : 107 ( 6.0%)
  RND     : 107 ( 6.0%)
  SHL     :  13 ( 0.7%)
  AND     :  11 ( 0.6%)
  SUB     :  11 ( 0.6%)
  SHR     :   7 ( 0.4%)
  OR      :   7 ( 0.4%)
  SUBN    :   6 ( 0.3%)
  XOR     :   6 ( 0.3%)
  SKNP    :   1 ( 0.1%)
  SKP     :   1 ( 0.1%)

Memory Operations: 344 (19.2%)
Arithmetic Operations: 148 (8.3%)
