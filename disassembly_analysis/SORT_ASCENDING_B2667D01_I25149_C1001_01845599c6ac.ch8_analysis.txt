
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B2667D01_I25149_C1001_01845599c6ac.ch8
ROM Size: 3584 bytes
Instructions Found: 1790

DISCOVERY INFORMATION:
Batch: 2667
Instance: 25149
Direction: ascending
Final Array: [0, 0, 0, 49, 130, 166, 251, 254]
Operations: R:0 W:1 C:107 S:3

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 119
Sort Array References:
  $200: LD I, $991 ; Load 991 into I
  $20E: LD I, $4B3 ; Load 4B3 into I
  $298: LD I, $7FE ; Load 7FE into I
  $2BE: LD I, $8D3 ; Load 8D3 into I
  $2C0: LD I, $299 ; Load 299 into I
  $32C: LD I, $008 ; Load 008 into I
  $346: LD I, $B39 ; Load B39 into I
  $350: LD I, $1F2 ; Load 1F2 into I
  $354: LD I, $F89 ; Load F89 into I
  $35E: LD I, $052 ; Load 052 into I
  $36C: LD I, $394 ; Load 394 into I
  $36E: LD I, $1E0 ; Load 1E0 into I
  $396: LD I, $9C9 ; Load 9C9 into I
  $398: LD I, $0A5 ; Load 0A5 into I
  $39A: LD I, $75C ; Load 75C into I
  $3A8: LD I, $CEA ; Load CEA into I
  $3BE: LD I, $4F1 ; Load 4F1 into I
  $3C8: LD I, $BEA ; Load BEA into I
  $3D6: LD I, $9BA ; Load 9BA into I
  $424: LD I, $6F2 ; Load 6F2 into I
  $42E: LD I, $539 ; Load 539 into I
  $43E: LD I, $A3C ; Load A3C into I
  $450: LD I, $494 ; Load 494 into I
  $476: LD I, $66D ; Load 66D into I
  $48C: LD I, $147 ; Load 147 into I
  $496: LD I, $E4E ; Load E4E into I
  $49A: LD I, $DB0 ; Load DB0 into I
  $526: LD I, $8E0 ; Load 8E0 into I
  $546: LD I, $EF8 ; Load EF8 into I
  $54A: LD I, $10A ; Load 10A into I
  $54E: LD I, $D70 ; Load D70 into I
  $568: LD I, $870 ; Load 870 into I
  $56A: LD I, $279 ; Load 279 into I
  $574: LD I, $440 ; Load 440 into I
  $578: LD I, $75D ; Load 75D into I
  $5A0: LD I, $4DD ; Load 4DD into I
  $5A8: LD I, $A9F ; Load A9F into I
  $5AE: LD I, $25B ; Load 25B into I
  $5C2: LD I, $60C ; Load 60C into I
  $5C8: LD I, $0F7 ; Load 0F7 into I
  $5F6: LD I, $8BF ; Load 8BF into I
  $646: LD I, $C8B ; Load C8B into I
  $64C: LD I, $1D0 ; Load 1D0 into I
  $66C: LD I, $117 ; Load 117 into I
  $686: LD I, $5E9 ; Load 5E9 into I
  $6F2: LD I, $09A ; Load 09A into I
  $72E: LD I, $223 ; Load 223 into I
  $756: LD I, $2D1 ; Load 2D1 into I
  $78C: LD I, $2CE ; Load 2CE into I
  $796: LD I, $33F ; Load 33F into I
  $7C4: LD I, $CEC ; Load CEC into I
  $7FA: LD I, $067 ; Load 067 into I
  $80A: LD I, $249 ; Load 249 into I
  $818: LD I, $4A6 ; Load 4A6 into I
  $836: LD I, $4F2 ; Load 4F2 into I
  $862: LD I, $C79 ; Load C79 into I
  $870: LD I, $485 ; Load 485 into I
  $874: LD I, $B2F ; Load B2F into I
  $888: LD I, $CA7 ; Load CA7 into I
  $88A: LD I, $430 ; Load 430 into I
  $89A: LD I, $3E0 ; Load 3E0 into I
  $8E0: LD I, $2A9 ; Load 2A9 into I
  $8E6: LD I, $A2E ; Load A2E into I
  $8EC: LD I, $4FF ; Load 4FF into I
  $91A: LD I, $830 ; Load 830 into I
  $924: LD I, $542 ; Load 542 into I
  $940: LD [I], V5 ; Store V0-V5 at I
  $95E: LD I, $095 ; Load 095 into I
  $972: LD I, $C63 ; Load C63 into I
  $984: LD I, $9CA ; Load 9CA into I
  $99C: LD I, $5AF ; Load 5AF into I
  $99E: LD I, $27A ; Load 27A into I
  $9D8: LD I, $229 ; Load 229 into I
  $A18: LD I, $C30 ; Load C30 into I
  $A6E: LD I, $BA0 ; Load BA0 into I
  $A94: LD I, $B63 ; Load B63 into I
  $A9C: LD I, $3F1 ; Load 3F1 into I
  $AA6: LD I, $AAE ; Load AAE into I
  $ACE: LD I, $ADF ; Load ADF into I
  $AD4: LD I, $C0D ; Load C0D into I
  $B0A: LD I, $A62 ; Load A62 into I
  $B10: LD I, $BFB ; Load BFB into I
  $B4E: LD I, $F73 ; Load F73 into I
  $B5A: LD I, $386 ; Load 386 into I
  $B82: LD I, $2B2 ; Load 2B2 into I
  $B8E: LD I, $02F ; Load 02F into I
  $BCC: LD I, $5A5 ; Load 5A5 into I
  $BEE: LD I, $8CC ; Load 8CC into I
  $C60: LD I, $BC8 ; Load BC8 into I
  $C64: LD I, $D40 ; Load D40 into I
  $C7C: LD I, $2A9 ; Load 2A9 into I
  $C9C: LD I, $1A2 ; Load 1A2 into I
  $C9E: LD I, $C24 ; Load C24 into I
  $CBA: LD I, $352 ; Load 352 into I
  $D06: LD I, $FA9 ; Load FA9 into I
  $D50: LD I, $A65 ; Load A65 into I
  $D8E: LD I, $1BA ; Load 1BA into I
  $D94: LD I, $BF4 ; Load BF4 into I
  $DBA: LD I, $F95 ; Load F95 into I
  $E1C: LD I, $ABA ; Load ABA into I
  $E3C: LD I, $544 ; Load 544 into I
  $E4E: LD I, $ED6 ; Load ED6 into I
  $E70: LD I, $067 ; Load 067 into I
  $E78: LD I, $DF2 ; Load DF2 into I
  $E9E: LD I, $41E ; Load 41E into I
  $EC0: LD I, $F91 ; Load F91 into I
  $F04: LD I, $9E3 ; Load 9E3 into I
  $F12: LD I, $FDE ; Load FDE into I
  $F22: LD I, $5B1 ; Load 5B1 into I
  $F48: LD I, $88D ; Load 88D into I
  $F4C: LD I, $D5B ; Load D5B into I
  $F50: LD V2, [I] ; Load V0-V2 from I
  $F56: LD I, $7FB ; Load 7FB into I
  $F78: LD I, $2C2 ; Load 2C2 into I
  $F7C: LD I, $84A ; Load 84A into I
  $F90: LD I, $D74 ; Load D74 into I
  $FAA: LD I, $AFE ; Load AFE into I
  $FB4: LD I, $FA1 ; Load FA1 into I
  $FEE: LD I, $6AD ; Load 6AD into I

CONTROL FLOW ANALYSIS:
Jumps: 225
Calls: 112
Branches: 242
Loops: 128
Loop Structures:
  $2DC -> $141 (backward jump)
  $2F0 -> $2C0 (backward jump)
  $2F8 -> $1D8 (backward jump)
  $416 -> $120 (backward jump)
  $448 -> $114 (backward jump)
  $46C -> $19D (backward jump)
  $492 -> $3FA (backward jump)
  $4A8 -> $119 (backward jump)
  $504 -> $2F8 (backward jump)
  $544 -> $24E (backward jump)
  $55E -> $188 (backward jump)
  $5A6 -> $088 (backward jump)
  $5B6 -> $096 (backward jump)
  $614 -> $163 (backward jump)
  $63C -> $34F (backward jump)
  $648 -> $414 (backward jump)
  $652 -> $03D (backward jump)
  $658 -> $090 (backward jump)
  $67C -> $253 (backward jump)
  $6C6 -> $4CD (backward jump)
  $716 -> $0AE (backward jump)
  $746 -> $4D9 (backward jump)
  $784 -> $380 (backward jump)
  $786 -> $2F7 (backward jump)
  $78A -> $61F (backward jump)
  $7A8 -> $0F6 (backward jump)
  $7EC -> $45F (backward jump)
  $800 -> $1E7 (backward jump)
  $802 -> $77E (backward jump)
  $81E -> $2DA (backward jump)
  $834 -> $44C (backward jump)
  $85E -> $840 (backward jump)
  $872 -> $384 (backward jump)
  $8A2 -> $830 (backward jump)
  $8A8 -> $3A5 (backward jump)
  $8D6 -> $2D4 (backward jump)
  $8EE -> $6D5 (backward jump)
  $94A -> $748 (backward jump)
  $954 -> $5BC (backward jump)
  $960 -> $21E (backward jump)
  $968 -> $4A7 (backward jump)
  $9B8 -> $6FC (backward jump)
  $9DA -> $239 (backward jump)
  $A0A -> $2E8 (backward jump)
  $A2C -> $924 (backward jump)
  $A86 -> $16A (backward jump)
  $A88 -> $6E9 (backward jump)
  $AB2 -> $AAE (backward jump)
  $AB4 -> $6AC (backward jump)
  $AB6 -> $7BF (backward jump)
  $ABE -> $A9A (backward jump)
  $AEE -> $5E7 (backward jump)
  $AF4 -> $4E1 (backward jump)
  $AFC -> $7F3 (backward jump)
  $B3E -> $812 (backward jump)
  $B58 -> $3C3 (backward jump)
  $B5C -> $104 (backward jump)
  $B6A -> $2EE (backward jump)
  $B84 -> $5B0 (backward jump)
  $BAC -> $61B (backward jump)
  $BDA -> $059 (backward jump)
  $BE4 -> $02F (backward jump)
  $BEA -> $2C5 (backward jump)
  $C08 -> $172 (backward jump)
  $C0E -> $48B (backward jump)
  $C32 -> $5F7 (backward jump)
  $C42 -> $0D6 (backward jump)
  $C44 -> $69C (backward jump)
  $C54 -> $403 (backward jump)
  $C5C -> $89C (backward jump)
  $C68 -> $204 (backward jump)
  $C84 -> $B70 (backward jump)
  $C8A -> $50B (backward jump)
  $C90 -> $2D3 (backward jump)
  $CAC -> $52F (backward jump)
  $CB2 -> $AFE (backward jump)
  $CDC -> $B0C (backward jump)
  $CEA -> $72F (backward jump)
  $CF2 -> $A2F (backward jump)
  $D4A -> $81E (backward jump)
  $D5A -> $752 (backward jump)
  $D6C -> $908 (backward jump)
  $D80 -> $4FE (backward jump)
  $DAE -> $88A (backward jump)
  $DB4 -> $144 (backward jump)
  $DB8 -> $261 (backward jump)
  $DBC -> $DBA (backward jump)
  $DC0 -> $461 (backward jump)
  $DDA -> $A9A (backward jump)
  $DE2 -> $D68 (backward jump)
  $DE6 -> $851 (backward jump)
  $DFE -> $D45 (backward jump)
  $E00 -> $4CA (backward jump)
  $E0C -> $75B (backward jump)
  $E0E -> $CE0 (backward jump)
  $E2C -> $36B (backward jump)
  $E36 -> $CC0 (backward jump)
  $E5E -> $31B (backward jump)
  $E62 -> $765 (backward jump)
  $E6C -> $863 (backward jump)
  $E7C -> $ACE (backward jump)
  $E86 -> $7FD (backward jump)
  $E8E -> $D68 (backward jump)
  $EA8 -> $833 (backward jump)
  $EBA -> $A75 (backward jump)
  $ECA -> $491 (backward jump)
  $EE0 -> $7D7 (backward jump)
  $EEE -> $E7B (backward jump)
  $EF0 -> $2DC (backward jump)
  $F0C -> $8F7 (backward jump)
  $F16 -> $689 (backward jump)
  $F18 -> $779 (backward jump)
  $F1C -> $00F (backward jump)
  $F20 -> $9B5 (backward jump)
  $F3C -> $0E8 (backward jump)
  $F3E -> $AB1 (backward jump)
  $F44 -> $C79 (backward jump)
  $F58 -> $6E8 (backward jump)
  $F5A -> $E04 (backward jump)
  $F6E -> $85F (backward jump)
  $F88 -> $904 (backward jump)
  $F9C -> $EC3 (backward jump)
  $FB8 -> $597 (backward jump)
  $FD2 -> $AE3 (backward jump)
  $FD6 -> $CBC (backward jump)
  $FF0 -> $B32 (backward jump)
  $FF4 -> $811 (backward jump)
  $FFC -> $D24 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $A991   LD       I, $991         ; Load 991 into I
$202    $03E2   SYS      $3E2            ; System call to 3E2
$204    $D2BA   DRW      V2, VB, #A      ; Draw 10-byte sprite at V2, VB
$206    $5CE2   UNKNOWN  $5CE2           ; Unknown 5xxx instruction
$208    $E5EB   UNKNOWN  $E5EB           ; Unknown Exxx instruction
$20A    $5E0D   UNKNOWN  $5E0D           ; Unknown 5xxx instruction
$20C    $0263   SYS      $263            ; System call to 263
$20E    $A4B3   LD       I, $4B3         ; Load 4B3 into I
$210    $1D62   JP       $D62            ; Jump to D62
$212    $4E5F   SNE      VE, #5F         ; Skip if VE != 95
$214    $D152   DRW      V1, V5, #2      ; Draw 2-byte sprite at V1, V5
$216    $31B2   SE       V1, #B2         ; Skip if V1 == 178
$218    $BA34   JP       V0, $A34        ; Jump to V0 + A34
$21A    $3089   SE       V0, #89         ; Skip if V0 == 137
$21C    $2EC1   CALL     $EC1            ; Call subroutine at EC1
$21E    $D1B0   DRW      V1, VB, #0      ; Draw 0-byte sprite at V1, VB
$220    $6C99   LD       VC, #99         ; Load 153 into VC
$222    $D6BA   DRW      V6, VB, #A      ; Draw 10-byte sprite at V6, VB
$224    $192D   JP       $92D            ; Jump to 92D
$226    $70D0   ADD      V0, #D0         ; Add 208 to V0
$228    $9D48   UNKNOWN  $9D48           ; Unknown 9xxx instruction
$22A    $1ACA   JP       $ACA            ; Jump to ACA
$22C    $28A4   CALL     $8A4            ; Call subroutine at 8A4
$22E    $5C52   UNKNOWN  $5C52           ; Unknown 5xxx instruction
$230    $0EDE   SYS      $EDE            ; System call to EDE
$232    $EC7D   UNKNOWN  $EC7D           ; Unknown Exxx instruction
$234    $5BF5   UNKNOWN  $5BF5           ; Unknown 5xxx instruction
$236    $756C   ADD      V5, #6C         ; Add 108 to V5
$238    $0704   SYS      $704            ; System call to 704
$23A    $56F5   UNKNOWN  $56F5           ; Unknown 5xxx instruction
$23C    $D291   DRW      V2, V9, #1      ; Draw 1-byte sprite at V2, V9
$23E    $19E2   JP       $9E2            ; Jump to 9E2
$240    $58CA   UNKNOWN  $58CA           ; Unknown 5xxx instruction
$242    $2DD5   CALL     $DD5            ; Call subroutine at DD5
$244    $E0C4   UNKNOWN  $E0C4           ; Unknown Exxx instruction
$246    $2DCA   CALL     $DCA            ; Call subroutine at DCA
$248    $7FE5   ADD      VF, #E5         ; Add 229 to VF
$24A    $C65E   RND      V6, #5E         ; V6 = random & 5E
$24C    $0F83   SYS      $F83            ; System call to F83
$24E    $6C62   LD       VC, #62         ; Load 98 into VC
$250    $CE6A   RND      VE, #6A         ; VE = random & 6A
$252    $BC27   JP       V0, $C27        ; Jump to V0 + C27
$254    $E8B7   UNKNOWN  $E8B7           ; Unknown Exxx instruction
$256    $04EB   SYS      $4EB            ; System call to 4EB
$258    $7EDF   ADD      VE, #DF         ; Add 223 to VE
$25A    $E4DF   UNKNOWN  $E4DF           ; Unknown Exxx instruction
$25C    $9A95   UNKNOWN  $9A95           ; Unknown 9xxx instruction
$25E    $5500   SE       V5, V0          ; Skip if V5 == V0
$260    $45C4   SNE      V5, #C4         ; Skip if V5 != 196
$262    $4127   SNE      V1, #27         ; Skip if V1 != 39
$264    $2D74   CALL     $D74            ; Call subroutine at D74
$266    $6481   LD       V4, #81         ; Load 129 into V4
$268    $2032   CALL     $032            ; Call subroutine at 032
$26A    $634F   LD       V3, #4F         ; Load 79 into V3
$26C    $BB54   JP       V0, $B54        ; Jump to V0 + B54
$26E    $4556   SNE      V5, #56         ; Skip if V5 != 86
$270    $570F   UNKNOWN  $570F           ; Unknown 5xxx instruction
$272    $B78D   JP       V0, $78D        ; Jump to V0 + 78D
$274    $9519   UNKNOWN  $9519           ; Unknown 9xxx instruction
$276    $BB13   JP       V0, $B13        ; Jump to V0 + B13
$278    $BE4C   JP       V0, $E4C        ; Jump to V0 + E4C
$27A    $F94B   UNKNOWN  F94B            ; Unknown Fxxx instruction
$27C    $8DFA   UNKNOWN  8DFA            ; Unknown 8xxx instruction
$27E    $0133   SYS      $133            ; System call to 133
$280    $CDBA   RND      VD, #BA         ; VD = random & BA
$282    $BE64   JP       V0, $E64        ; Jump to V0 + E64
$284    $C4A5   RND      V4, #A5         ; V4 = random & A5
$286    $1C80   JP       $C80            ; Jump to C80
$288    $E6DE   UNKNOWN  $E6DE           ; Unknown Exxx instruction
$28A    $BA16   JP       V0, $A16        ; Jump to V0 + A16
$28C    $C183   RND      V1, #83         ; V1 = random & 83
$28E    $B9B8   JP       V0, $9B8        ; Jump to V0 + 9B8
$290    $6623   LD       V6, #23         ; Load 35 into V6
$292    $BBE2   JP       V0, $BE2        ; Jump to V0 + BE2
$294    $CD45   RND      VD, #45         ; VD = random & 45
$296    $CC4B   RND      VC, #4B         ; VC = random & 4B
$298    $A7FE   LD       I, $7FE         ; Load 7FE into I
$29A    $F5DD   UNKNOWN  F5DD            ; Unknown Fxxx instruction
$29C    $7FB0   ADD      VF, #B0         ; Add 176 to VF
$29E    $2AC9   CALL     $AC9            ; Call subroutine at AC9
$2A0    $63EA   LD       V3, #EA         ; Load 234 into V3
$2A2    $743E   ADD      V4, #3E         ; Add 62 to V4
$2A4    $22D0   CALL     $2D0            ; Call subroutine at 2D0
$2A6    $6028   LD       V0, #28         ; Load 40 into V0
$2A8    $6306   LD       V3, #06         ; Load 6 into V3
$2AA    $9929   UNKNOWN  $9929           ; Unknown 9xxx instruction
$2AC    $7CC2   ADD      VC, #C2         ; Add 194 to VC
$2AE    $B7A4   JP       V0, $7A4        ; Jump to V0 + 7A4
$2B0    $0CD9   SYS      $CD9            ; System call to CD9
$2B2    $028E   SYS      $28E            ; System call to 28E
$2B4    $C259   RND      V2, #59         ; V2 = random & 59
$2B6    $9E40   SNE      VE, V4          ; Skip if VE != V4
$2B8    $005A   SYS      $05A            ; System call to 05A
$2BA    $1A37   JP       $A37            ; Jump to A37
$2BC    $3F4B   SE       VF, #4B         ; Skip if VF == 75
$2BE    $A8D3   LD       I, $8D3         ; Load 8D3 into I
$2C0    $A299   LD       I, $299         ; Load 299 into I
$2C2    $CAE9   RND      VA, #E9         ; VA = random & E9
$2C4    $BEA2   JP       V0, $EA2        ; Jump to V0 + EA2
$2C6    $CEF7   RND      VE, #F7         ; VE = random & F7
$2C8    $C081   RND      V0, #81         ; V0 = random & 81
$2CA    $9F56   UNKNOWN  $9F56           ; Unknown 9xxx instruction
$2CC    $35DF   SE       V5, #DF         ; Skip if V5 == 223
$2CE    $0B6A   SYS      $B6A            ; System call to B6A
$2D0    $F844   UNKNOWN  F844            ; Unknown Fxxx instruction
$2D2    $0556   SYS      $556            ; System call to 556
$2D4    $7E1E   ADD      VE, #1E         ; Add 30 to VE
$2D6    $DDB7   DRW      VD, VB, #7      ; Draw 7-byte sprite at VD, VB
$2D8    $3AF7   SE       VA, #F7         ; Skip if VA == 247
$2DA    $E5E0   UNKNOWN  $E5E0           ; Unknown Exxx instruction
$2DC    $B141   JP       V0, $141        ; Jump to V0 + 141
$2DE    $7DAC   ADD      VD, #AC         ; Add 172 to VD
$2E0    $0BF4   SYS      $BF4            ; System call to BF4
$2E2    $60C3   LD       V0, #C3         ; Load 195 into V0
$2E4    $DFB6   DRW      VF, VB, #6      ; Draw 6-byte sprite at VF, VB
$2E6    $4174   SNE      V1, #74         ; Skip if V1 != 116
$2E8    $25B5   CALL     $5B5            ; Call subroutine at 5B5
$2EA    $6B2A   LD       VB, #2A         ; Load 42 into VB
$2EC    $5A90   SE       VA, V9          ; Skip if VA == V9
$2EE    $EAA1   SKNP     VA              ; Skip if key VA not pressed
$2F0    $B2C0   JP       V0, $2C0        ; Jump to V0 + 2C0
$2F2    $0ED4   SYS      $ED4            ; System call to ED4
$2F4    $E409   UNKNOWN  $E409           ; Unknown Exxx instruction
$2F6    $431B   SNE      V3, #1B         ; Skip if V3 != 27
$2F8    $11D8   JP       $1D8            ; Jump to 1D8
$2FA    $4A8A   SNE      VA, #8A         ; Skip if VA != 138
$2FC    $DD0B   DRW      VD, V0, #B      ; Draw 11-byte sprite at VD, V0
$2FE    $C4EC   RND      V4, #EC         ; V4 = random & EC
$302    $0031   SYS      $031            ; System call to 031
$304    $82A6   SHR      V2              ; V2 >>= 1, VF = LSB
$306    $FBFE   UNKNOWN  FBFE            ; Unknown Fxxx instruction
$308    $601D   LD       V0, #1D         ; Load 29 into V0
$30A    $EB7C   UNKNOWN  $EB7C           ; Unknown Exxx instruction
$30C    $CC07   RND      VC, #07         ; VC = random & 07
$30E    $682B   LD       V8, #2B         ; Load 43 into V8
$310    $B93B   JP       V0, $93B        ; Jump to V0 + 93B
$312    $18F4   JP       $8F4            ; Jump to 8F4
$314    $9B40   SNE      VB, V4          ; Skip if VB != V4
$316    $55FC   UNKNOWN  $55FC           ; Unknown 5xxx instruction
$318    $F11B   UNKNOWN  F11B            ; Unknown Fxxx instruction
$31A    $DFA3   DRW      VF, VA, #3      ; Draw 3-byte sprite at VF, VA
$31C    $86F1   OR       V6, VF          ; V6 |= VF
$31E    $3368   SE       V3, #68         ; Skip if V3 == 104
$320    $C0C9   RND      V0, #C9         ; V0 = random & C9
$322    $1BAE   JP       $BAE            ; Jump to BAE
$324    $98E0   SNE      V8, VE          ; Skip if V8 != VE
$326    $E369   UNKNOWN  $E369           ; Unknown Exxx instruction
$328    $F978   UNKNOWN  F978            ; Unknown Fxxx instruction
$32A    $52CF   UNKNOWN  $52CF           ; Unknown 5xxx instruction
$32C    $A008   LD       I, $008         ; Load 008 into I
$32E    $5C73   UNKNOWN  $5C73           ; Unknown 5xxx instruction
$330    $8A36   SHR      VA              ; VA >>= 1, VF = LSB
$332    $F899   UNKNOWN  F899            ; Unknown Fxxx instruction
$334    $9A97   UNKNOWN  $9A97           ; Unknown 9xxx instruction
$336    $2CB7   CALL     $CB7            ; Call subroutine at CB7
$338    $321D   SE       V2, #1D         ; Skip if V2 == 29
$33A    $BC17   JP       V0, $C17        ; Jump to V0 + C17
$33C    $3626   SE       V6, #26         ; Skip if V6 == 38
$33E    $008E   SYS      $08E            ; System call to 08E
$340    $5663   UNKNOWN  $5663           ; Unknown 5xxx instruction
$342    $79B2   ADD      V9, #B2         ; Add 178 to V9
$344    $0778   SYS      $778            ; System call to 778
$346    $AB39   LD       I, $B39         ; Load B39 into I
$348    $1FA7   JP       $FA7            ; Jump to FA7
$34A    $42A0   SNE      V2, #A0         ; Skip if V2 != 160
$34C    $6CF7   LD       VC, #F7         ; Load 247 into VC
$34E    $C5B8   RND      V5, #B8         ; V5 = random & B8
$350    $A1F2   LD       I, $1F2         ; Load 1F2 into I
$352    $262C   CALL     $62C            ; Call subroutine at 62C
$354    $AF89   LD       I, $F89         ; Load F89 into I
$356    $B91D   JP       V0, $91D        ; Jump to V0 + 91D
$358    $89A0   LD       V9, VA          ; V9 = VA
$35A    $3635   SE       V6, #35         ; Skip if V6 == 53
$35C    $8E22   AND      VE, V2          ; VE &= V2
$35E    $A052   LD       I, $052         ; Load 052 into I
$360    $FC78   UNKNOWN  FC78            ; Unknown Fxxx instruction
$362    $4470   SNE      V4, #70         ; Skip if V4 != 112
$364    $1FA4   JP       $FA4            ; Jump to FA4
$366    $CCB9   RND      VC, #B9         ; VC = random & B9
$368    $04B0   SYS      $4B0            ; System call to 4B0
$36A    $3BCD   SE       VB, #CD         ; Skip if VB == 205
$36C    $A394   LD       I, $394         ; Load 394 into I
$36E    $A1E0   LD       I, $1E0         ; Load 1E0 into I
$370    $015E   SYS      $15E            ; System call to 15E
$372    $28DA   CALL     $8DA            ; Call subroutine at 8DA
$374    $3CD7   SE       VC, #D7         ; Skip if VC == 215
$376    $9235   UNKNOWN  $9235           ; Unknown 9xxx instruction
$378    $2E38   CALL     $E38            ; Call subroutine at E38
$37A    $B6E5   JP       V0, $6E5        ; Jump to V0 + 6E5
$37C    $F1F6   UNKNOWN  F1F6            ; Unknown Fxxx instruction
$37E    $7A46   ADD      VA, #46         ; Add 70 to VA
$380    $51BD   UNKNOWN  $51BD           ; Unknown 5xxx instruction
$382    $3D5E   SE       VD, #5E         ; Skip if VD == 94
$384    $3252   SE       V2, #52         ; Skip if V2 == 82
$388    $008D   SYS      $08D            ; System call to 08D
$38A    $86C9   UNKNOWN  86C9            ; Unknown 8xxx instruction
$38C    $86F1   OR       V6, VF          ; V6 |= VF
$38E    $CEFC   RND      VE, #FC         ; VE = random & FC
$390    $62BC   LD       V2, #BC         ; Load 188 into V2
$392    $62BD   LD       V2, #BD         ; Load 189 into V2
$394    $B73C   JP       V0, $73C        ; Jump to V0 + 73C
$396    $A9C9   LD       I, $9C9         ; Load 9C9 into I
$398    $A0A5   LD       I, $0A5         ; Load 0A5 into I
$39A    $A75C   LD       I, $75C         ; Load 75C into I
$39C    $C08A   RND      V0, #8A         ; V0 = random & 8A
$39E    $BB36   JP       V0, $B36        ; Jump to V0 + B36
$3A0    $9CD5   UNKNOWN  $9CD5           ; Unknown 9xxx instruction
$3A2    $2B5A   CALL     $B5A            ; Call subroutine at B5A
$3A4    $E9E1   UNKNOWN  $E9E1           ; Unknown Exxx instruction
$3A6    $96B0   SNE      V6, VB          ; Skip if V6 != VB
$3A8    $ACEA   LD       I, $CEA         ; Load CEA into I
$3AA    $CC58   RND      VC, #58         ; VC = random & 58
$3AC    $467E   SNE      V6, #7E         ; Skip if V6 != 126
$3AE    $8643   XOR      V6, V4          ; V6 ^= V4
$3B0    $FC8A   UNKNOWN  FC8A            ; Unknown Fxxx instruction
$3B2    $7643   ADD      V6, #43         ; Add 67 to V6
$3B4    $7ED8   ADD      VE, #D8         ; Add 216 to VE
$3B6    $4D19   SNE      VD, #19         ; Skip if VD != 25
$3B8    $3254   SE       V2, #54         ; Skip if V2 == 84
$3BA    $5E5C   UNKNOWN  $5E5C           ; Unknown 5xxx instruction
$3BC    $27BE   CALL     $7BE            ; Call subroutine at 7BE
$3BE    $A4F1   LD       I, $4F1         ; Load 4F1 into I
$3C0    $FBF4   UNKNOWN  FBF4            ; Unknown Fxxx instruction
$3C2    $46EF   SNE      V6, #EF         ; Skip if V6 != 239
$3C4    $0E6F   SYS      $E6F            ; System call to E6F
$3C6    $6109   LD       V1, #09         ; Load 9 into V1
$3C8    $ABEA   LD       I, $BEA         ; Load BEA into I
$3CA    $DF2B   DRW      VF, V2, #B      ; Draw 11-byte sprite at VF, V2
$3CC    $DE8A   DRW      VE, V8, #A      ; Draw 10-byte sprite at VE, V8
$3CE    $86BF   UNKNOWN  86BF            ; Unknown 8xxx instruction
$3D0    $DA9C   DRW      VA, V9, #C      ; Draw 12-byte sprite at VA, V9
$3D2    $0C98   SYS      $C98            ; System call to C98
$3D4    $D8A1   DRW      V8, VA, #1      ; Draw 1-byte sprite at V8, VA
$3D6    $A9BA   LD       I, $9BA         ; Load 9BA into I
$3D8    $5289   UNKNOWN  $5289           ; Unknown 5xxx instruction
$3DA    $E360   UNKNOWN  $E360           ; Unknown Exxx instruction
$3DC    $7DFF   ADD      VD, #FF         ; Add 255 to VD
$3DE    $C12A   RND      V1, #2A         ; V1 = random & 2A
$3E0    $8A7E   SHL      VA              ; VA <<= 1, VF = MSB
$3E2    $C3FE   RND      V3, #FE         ; V3 = random & FE
$3E4    $8A09   UNKNOWN  8A09            ; Unknown 8xxx instruction
$3E6    $9638   UNKNOWN  $9638           ; Unknown 9xxx instruction
$3E8    $D8C8   DRW      V8, VC, #8      ; Draw 8-byte sprite at V8, VC
$3EA    $9FF4   UNKNOWN  $9FF4           ; Unknown 9xxx instruction
$3EC    $822B   UNKNOWN  822B            ; Unknown 8xxx instruction
$3EE    $9FC9   UNKNOWN  $9FC9           ; Unknown 9xxx instruction
$3F0    $27BD   CALL     $7BD            ; Call subroutine at 7BD
$3F2    $07CC   SYS      $7CC            ; System call to 7CC
$3F4    $EEBB   UNKNOWN  $EEBB           ; Unknown Exxx instruction
$3F6    $7579   ADD      V5, #79         ; Add 121 to V5
$3F8    $2C57   CALL     $C57            ; Call subroutine at C57
$3FA    $E484   UNKNOWN  $E484           ; Unknown Exxx instruction
$3FC    $C892   RND      V8, #92         ; V8 = random & 92
$3FE    $1F98   JP       $F98            ; Jump to F98
$400    $0372   SYS      $372            ; System call to 372
$402    $C9E3   RND      V9, #E3         ; V9 = random & E3
$404    $4701   SNE      V7, #01         ; Skip if V7 != 1
$406    $8502   AND      V5, V0          ; V5 &= V0
$408    $90A2   UNKNOWN  $90A2           ; Unknown 9xxx instruction
$40A    $06B0   SYS      $6B0            ; System call to 6B0
$40C    $CB97   RND      VB, #97         ; VB = random & 97
$40E    $8EDE   SHL      VE              ; VE <<= 1, VF = MSB
$410    $E4DF   UNKNOWN  $E4DF           ; Unknown Exxx instruction
$412    $8733   XOR      V7, V3          ; V7 ^= V3
$414    $81D7   SUBN     V1, VD          ; V1 = VD - V1, VF = !borrow
$416    $1120   JP       $120            ; Jump to 120
$418    $D9FC   DRW      V9, VF, #C      ; Draw 12-byte sprite at V9, VF
$41A    $2C40   CALL     $C40            ; Call subroutine at C40
$41C    $5647   UNKNOWN  $5647           ; Unknown 5xxx instruction
$41E    $526E   UNKNOWN  $526E           ; Unknown 5xxx instruction
$420    $447F   SNE      V4, #7F         ; Skip if V4 != 127
$422    $1628   JP       $628            ; Jump to 628
$424    $A6F2   LD       I, $6F2         ; Load 6F2 into I
$426    $00DE   SYS      $0DE            ; System call to 0DE
$428    $47DA   SNE      V7, #DA         ; Skip if V7 != 218
$42A    $9B56   UNKNOWN  $9B56           ; Unknown 9xxx instruction
$42C    $20B6   CALL     $0B6            ; Call subroutine at 0B6
$42E    $A539   LD       I, $539         ; Load 539 into I
$430    $70A9   ADD      V0, #A9         ; Add 169 to V0
$432    $7647   ADD      V6, #47         ; Add 71 to V6
$434    $3D72   SE       VD, #72         ; Skip if VD == 114
$436    $3D07   SE       VD, #07         ; Skip if VD == 7
$438    $7BA0   ADD      VB, #A0         ; Add 160 to VB
$43A    $8D6A   UNKNOWN  8D6A            ; Unknown 8xxx instruction
$43C    $2DF2   CALL     $DF2            ; Call subroutine at DF2
$43E    $AA3C   LD       I, $A3C         ; Load A3C into I
$440    $0F20   SYS      $F20            ; System call to F20
$442    $9E41   UNKNOWN  $9E41           ; Unknown 9xxx instruction
$444    $B9AC   JP       V0, $9AC        ; Jump to V0 + 9AC
$446    $4CB0   SNE      VC, #B0         ; Skip if VC != 176
$448    $B114   JP       V0, $114        ; Jump to V0 + 114
$44A    $84D7   SUBN     V4, VD          ; V4 = VD - V4, VF = !borrow
$44C    $05F3   SYS      $5F3            ; System call to 5F3
$44E    $85EF   UNKNOWN  85EF            ; Unknown 8xxx instruction
$450    $A494   LD       I, $494         ; Load 494 into I
$452    $BCA4   JP       V0, $CA4        ; Jump to V0 + CA4
$454    $85D3   XOR      V5, VD          ; V5 ^= VD
$456    $3A7F   SE       VA, #7F         ; Skip if VA == 127
$458    $9D42   UNKNOWN  $9D42           ; Unknown 9xxx instruction
$45A    $4B74   SNE      VB, #74         ; Skip if VB != 116
$45C    $1A27   JP       $A27            ; Jump to A27
$45E    $CE9D   RND      VE, #9D         ; VE = random & 9D
$460    $D577   DRW      V5, V7, #7      ; Draw 7-byte sprite at V5, V7
$462    $5B7D   UNKNOWN  $5B7D           ; Unknown 5xxx instruction
$464    $FBB2   UNKNOWN  FBB2            ; Unknown Fxxx instruction
$466    $D86A   DRW      V8, V6, #A      ; Draw 10-byte sprite at V8, V6
$468    $631D   LD       V3, #1D         ; Load 29 into V3
$46A    $08B9   SYS      $8B9            ; System call to 8B9
$46C    $B19D   JP       V0, $19D        ; Jump to V0 + 19D
$46E    $7AB9   ADD      VA, #B9         ; Add 185 to VA
$470    $984E   UNKNOWN  $984E           ; Unknown 9xxx instruction
$472    $5E0C   UNKNOWN  $5E0C           ; Unknown 5xxx instruction
$474    $0156   SYS      $156            ; System call to 156
$476    $A66D   LD       I, $66D         ; Load 66D into I
$478    $91F0   SNE      V1, VF          ; Skip if V1 != VF
$47A    $8734   ADD      V7, V3          ; V7 += V3, VF = carry
$47C    $63F1   LD       V3, #F1         ; Load 241 into V3
$47E    $DBFC   DRW      VB, VF, #C      ; Draw 12-byte sprite at VB, VF
$480    $7816   ADD      V8, #16         ; Add 22 to V8
$482    $6C25   LD       VC, #25         ; Load 37 into VC
$484    $F85C   UNKNOWN  F85C            ; Unknown Fxxx instruction
$486    $3B4C   SE       VB, #4C         ; Skip if VB == 76
$488    $201E   CALL     $01E            ; Call subroutine at 01E
$48A    $D9E3   DRW      V9, VE, #3      ; Draw 3-byte sprite at V9, VE
$48C    $A147   LD       I, $147         ; Load 147 into I
$48E    $C405   RND      V4, #05         ; V4 = random & 05
$490    $7F8A   ADD      VF, #8A         ; Add 138 to VF
$492    $B3FA   JP       V0, $3FA        ; Jump to V0 + 3FA
$494    $CA07   RND      VA, #07         ; VA = random & 07
$496    $AE4E   LD       I, $E4E         ; Load E4E into I
$498    $E6A0   UNKNOWN  $E6A0           ; Unknown Exxx instruction
$49A    $ADB0   LD       I, $DB0         ; Load DB0 into I
$49C    $7EC6   ADD      VE, #C6         ; Add 198 to VE
$49E    $D7C5   DRW      V7, VC, #5      ; Draw 5-byte sprite at V7, VC
$4A0    $98A6   UNKNOWN  $98A6           ; Unknown 9xxx instruction
$4A2    $8B66   SHR      VB              ; VB >>= 1, VF = LSB
$4A4    $EBCF   UNKNOWN  $EBCF           ; Unknown Exxx instruction
$4A6    $2452   CALL     $452            ; Call subroutine at 452
$4A8    $1119   JP       $119            ; Jump to 119
$4AA    $BB7C   JP       V0, $B7C        ; Jump to V0 + B7C
$4AC    $F752   UNKNOWN  F752            ; Unknown Fxxx instruction
$4AE    $3CCA   SE       VC, #CA         ; Skip if VC == 202
$4B0    $BBFE   JP       V0, $BFE        ; Jump to V0 + BFE
$4B2    $853B   UNKNOWN  853B            ; Unknown 8xxx instruction
$4B4    $0B3D   SYS      $B3D            ; System call to B3D
$4B6    $41AA   SNE      V1, #AA         ; Skip if V1 != 170
$4B8    $26A5   CALL     $6A5            ; Call subroutine at 6A5
$4BA    $DEC3   DRW      VE, VC, #3      ; Draw 3-byte sprite at VE, VC
$4BC    $5D41   UNKNOWN  $5D41           ; Unknown 5xxx instruction
$4BE    $E459   UNKNOWN  $E459           ; Unknown Exxx instruction
$4C0    $959E   UNKNOWN  $959E           ; Unknown 9xxx instruction
$4C2    $6FD5   LD       VF, #D5         ; Load 213 into VF
$4C4    $EFD5   UNKNOWN  $EFD5           ; Unknown Exxx instruction
$4C6    $1896   JP       $896            ; Jump to 896
$4C8    $DEA7   DRW      VE, VA, #7      ; Draw 7-byte sprite at VE, VA
$4CA    $1983   JP       $983            ; Jump to 983
$4CC    $E701   UNKNOWN  $E701           ; Unknown Exxx instruction
$4CE    $43BA   SNE      V3, #BA         ; Skip if V3 != 186
$4D0    $D3E7   DRW      V3, VE, #7      ; Draw 7-byte sprite at V3, VE
$4D2    $74A8   ADD      V4, #A8         ; Add 168 to V4
$4D4    $8E79   UNKNOWN  8E79            ; Unknown 8xxx instruction
$4D6    $6BC3   LD       VB, #C3         ; Load 195 into VB
$4D8    $FE9D   UNKNOWN  FE9D            ; Unknown Fxxx instruction
$4DA    $6F85   LD       VF, #85         ; Load 133 into VF
$4DC    $D40A   DRW      V4, V0, #A      ; Draw 10-byte sprite at V4, V0
$4DE    $C87F   RND      V8, #7F         ; V8 = random & 7F
$4E0    $EE47   UNKNOWN  $EE47           ; Unknown Exxx instruction
$4E2    $8B99   UNKNOWN  8B99            ; Unknown 8xxx instruction
$4E4    $CA6A   RND      VA, #6A         ; VA = random & 6A
$4E6    $0E52   SYS      $E52            ; System call to E52
$4E8    $3273   SE       V2, #73         ; Skip if V2 == 115
$4EA    $0C82   SYS      $C82            ; System call to C82
$4EC    $547A   UNKNOWN  $547A           ; Unknown 5xxx instruction
$4EE    $80F6   SHR      V0              ; V0 >>= 1, VF = LSB
$4F0    $CF19   RND      VF, #19         ; VF = random & 19
$4F2    $28B8   CALL     $8B8            ; Call subroutine at 8B8
$4F4    $34EA   SE       V4, #EA         ; Skip if V4 == 234
$4F6    $35F9   SE       V5, #F9         ; Skip if V5 == 249
$4F8    $6A4F   LD       VA, #4F         ; Load 79 into VA
$4FA    $59AE   UNKNOWN  $59AE           ; Unknown 5xxx instruction
$4FC    $2098   CALL     $098            ; Call subroutine at 098
$4FE    $09C7   SYS      $9C7            ; System call to 9C7
$500    $D06F   DRW      V0, V6, #F      ; Draw 15-byte sprite at V0, V6
$502    $D89D   DRW      V8, V9, #D      ; Draw 13-byte sprite at V8, V9
$504    $B2F8   JP       V0, $2F8        ; Jump to V0 + 2F8
$506    $337D   SE       V3, #7D         ; Skip if V3 == 125
$508    $88BE   SHL      V8              ; V8 <<= 1, VF = MSB
$50A    $1F0F   JP       $F0F            ; Jump to F0F
$50C    $41F4   SNE      V1, #F4         ; Skip if V1 != 244
$50E    $DE40   DRW      VE, V4, #0      ; Draw 0-byte sprite at VE, V4
$510    $0672   SYS      $672            ; System call to 672
$512    $0C53   SYS      $C53            ; System call to C53
$514    $D028   DRW      V0, V2, #8      ; Draw 8-byte sprite at V0, V2
$516    $80E5   SUB      V0, VE          ; V0 -= VE, VF = !borrow
$518    $9826   UNKNOWN  $9826           ; Unknown 9xxx instruction
$51A    $79D7   ADD      V9, #D7         ; Add 215 to V9
$51C    $2451   CALL     $451            ; Call subroutine at 451
$51E    $FD75   UNKNOWN  FD75            ; Unknown Fxxx instruction
$520    $786B   ADD      V8, #6B         ; Add 107 to V8
$522    $6CC6   LD       VC, #C6         ; Load 198 into VC
$524    $ED14   UNKNOWN  $ED14           ; Unknown Exxx instruction
$526    $A8E0   LD       I, $8E0         ; Load 8E0 into I
$528    $3978   SE       V9, #78         ; Skip if V9 == 120
$52A    $6981   LD       V9, #81         ; Load 129 into V9
$52C    $DEF1   DRW      VE, VF, #1      ; Draw 1-byte sprite at VE, VF
$52E    $384E   SE       V8, #4E         ; Skip if V8 == 78
$530    $4031   SNE      V0, #31         ; Skip if V0 != 49
$532    $46DC   SNE      V6, #DC         ; Skip if V6 != 220
$534    $2A7C   CALL     $A7C            ; Call subroutine at A7C
$536    $505D   UNKNOWN  $505D           ; Unknown 5xxx instruction
$538    $178F   JP       $78F            ; Jump to 78F
$53A    $07D2   SYS      $7D2            ; System call to 7D2
$53C    $B5A3   JP       V0, $5A3        ; Jump to V0 + 5A3
$53E    $4352   SNE      V3, #52         ; Skip if V3 != 82
$540    $BD93   JP       V0, $D93        ; Jump to V0 + D93
$542    $03BE   SYS      $3BE            ; System call to 3BE
$544    $124E   JP       $24E            ; Jump to 24E
$546    $AEF8   LD       I, $EF8         ; Load EF8 into I
$548    $2991   CALL     $991            ; Call subroutine at 991
$54A    $A10A   LD       I, $10A         ; Load 10A into I
$54C    $D6CC   DRW      V6, VC, #C      ; Draw 12-byte sprite at V6, VC
$54E    $AD70   LD       I, $D70         ; Load D70 into I
$550    $7B79   ADD      VB, #79         ; Add 121 to VB
$552    $20B6   CALL     $0B6            ; Call subroutine at 0B6
$554    $911F   UNKNOWN  $911F           ; Unknown 9xxx instruction
$556    $7AEB   ADD      VA, #EB         ; Add 235 to VA
$558    $7C90   ADD      VC, #90         ; Add 144 to VC
$55A    $82C4   ADD      V2, VC          ; V2 += VC, VF = carry
$55C    $2D2C   CALL     $D2C            ; Call subroutine at D2C
$55E    $B188   JP       V0, $188        ; Jump to V0 + 188
$560    $2397   CALL     $397            ; Call subroutine at 397
$562    $0DD7   SYS      $DD7            ; System call to DD7
$564    $C7C8   RND      V7, #C8         ; V7 = random & C8
$566    $67F4   LD       V7, #F4         ; Load 244 into V7
$568    $A870   LD       I, $870         ; Load 870 into I
$56A    $A279   LD       I, $279         ; Load 279 into I
$56C    $9C61   UNKNOWN  $9C61           ; Unknown 9xxx instruction
$56E    $DDFC   DRW      VD, VF, #C      ; Draw 12-byte sprite at VD, VF
$570    $9214   UNKNOWN  $9214           ; Unknown 9xxx instruction
$572    $19D5   JP       $9D5            ; Jump to 9D5
$574    $A440   LD       I, $440         ; Load 440 into I
$576    $D2C4   DRW      V2, VC, #4      ; Draw 4-byte sprite at V2, VC
$578    $A75D   LD       I, $75D         ; Load 75D into I
$57A    $F5C1   UNKNOWN  F5C1            ; Unknown Fxxx instruction
$57C    $89A6   SHR      V9              ; V9 >>= 1, VF = LSB
$57E    $4E71   SNE      VE, #71         ; Skip if VE != 113
$580    $6128   LD       V1, #28         ; Load 40 into V1
$582    $951C   UNKNOWN  $951C           ; Unknown 9xxx instruction
$584    $09A2   SYS      $9A2            ; System call to 9A2
$586    $D221   DRW      V2, V2, #1      ; Draw 1-byte sprite at V2, V2
$588    $0566   SYS      $566            ; System call to 566
$58A    $8CCB   UNKNOWN  8CCB            ; Unknown 8xxx instruction
$58C    $42F0   SNE      V2, #F0         ; Skip if V2 != 240
$58E    $5CB3   UNKNOWN  $5CB3           ; Unknown 5xxx instruction
$590    $88F3   XOR      V8, VF          ; V8 ^= VF
$592    $348A   SE       V4, #8A         ; Skip if V4 == 138
$594    $0679   SYS      $679            ; System call to 679
$596    $EA81   UNKNOWN  $EA81           ; Unknown Exxx instruction
$598    $9F34   UNKNOWN  $9F34           ; Unknown 9xxx instruction
$59A    $1862   JP       $862            ; Jump to 862
$59C    $D509   DRW      V5, V0, #9      ; Draw 9-byte sprite at V5, V0
$59E    $F001   UNKNOWN  F001            ; Unknown Fxxx instruction
$5A0    $A4DD   LD       I, $4DD         ; Load 4DD into I
$5A2    $03DD   SYS      $3DD            ; System call to 3DD
$5A4    $2AF6   CALL     $AF6            ; Call subroutine at AF6
$5A6    $1088   JP       $088            ; Jump to 088
$5A8    $AA9F   LD       I, $A9F         ; Load A9F into I
$5AA    $1AC6   JP       $AC6            ; Jump to AC6
$5AC    $D0B7   DRW      V0, VB, #7      ; Draw 7-byte sprite at V0, VB
$5AE    $A25B   LD       I, $25B         ; Load 25B into I
$5B0    $1B29   JP       $B29            ; Jump to B29
$5B2    $F075   UNKNOWN  F075            ; Unknown Fxxx instruction
$5B4    $8CC4   ADD      VC, VC          ; VC += VC, VF = carry
$5B6    $1096   JP       $096            ; Jump to 096
$5B8    $EC25   UNKNOWN  $EC25           ; Unknown Exxx instruction
$5BA    $B782   JP       V0, $782        ; Jump to V0 + 782
$5BC    $E431   UNKNOWN  $E431           ; Unknown Exxx instruction
$5BE    $74DD   ADD      V4, #DD         ; Add 221 to V4
$5C0    $43A2   SNE      V3, #A2         ; Skip if V3 != 162
$5C2    $A60C   LD       I, $60C         ; Load 60C into I
$5C4    $3A77   SE       VA, #77         ; Skip if VA == 119
$5C6    $C751   RND      V7, #51         ; V7 = random & 51
$5C8    $A0F7   LD       I, $0F7         ; Load 0F7 into I
$5CA    $DBD8   DRW      VB, VD, #8      ; Draw 8-byte sprite at VB, VD
$5CC    $8F22   AND      VF, V2          ; VF &= V2
$5CE    $9D16   UNKNOWN  $9D16           ; Unknown 9xxx instruction
$5D0    $FDF8   UNKNOWN  FDF8            ; Unknown Fxxx instruction
$5D2    $3CAD   SE       VC, #AD         ; Skip if VC == 173
$5D4    $ED1B   UNKNOWN  $ED1B           ; Unknown Exxx instruction
$5D6    $4EE6   SNE      VE, #E6         ; Skip if VE != 230
$5D8    $83CD   UNKNOWN  83CD            ; Unknown 8xxx instruction
$5DA    $4894   SNE      V8, #94         ; Skip if V8 != 148
$5DC    $0D16   SYS      $D16            ; System call to D16
$5DE    $DCF4   DRW      VC, VF, #4      ; Draw 4-byte sprite at VC, VF
$5E0    $8DCB   UNKNOWN  8DCB            ; Unknown 8xxx instruction
$5E2    $5C8E   UNKNOWN  $5C8E           ; Unknown 5xxx instruction
$5E4    $2473   CALL     $473            ; Call subroutine at 473
$5E6    $9B7E   UNKNOWN  $9B7E           ; Unknown 9xxx instruction
$5E8    $E14C   UNKNOWN  $E14C           ; Unknown Exxx instruction
$5EA    $E9BC   UNKNOWN  $E9BC           ; Unknown Exxx instruction
$5EC    $C66E   RND      V6, #6E         ; V6 = random & 6E
$5EE    $0F86   SYS      $F86            ; System call to F86
$5F0    $CDFE   RND      VD, #FE         ; VD = random & FE
$5F2    $6F3F   LD       VF, #3F         ; Load 63 into VF
$5F4    $3A2B   SE       VA, #2B         ; Skip if VA == 43
$5F6    $A8BF   LD       I, $8BF         ; Load 8BF into I
$5F8    $92DB   UNKNOWN  $92DB           ; Unknown 9xxx instruction
$5FA    $E30C   UNKNOWN  $E30C           ; Unknown Exxx instruction
$5FC    $191B   JP       $91B            ; Jump to 91B
$5FE    $5CC3   UNKNOWN  $5CC3           ; Unknown 5xxx instruction
$600    $966D   UNKNOWN  $966D           ; Unknown 9xxx instruction
$602    $685A   LD       V8, #5A         ; Load 90 into V8
$604    $0D89   SYS      $D89            ; System call to D89
$606    $0942   SYS      $942            ; System call to 942
$608    $E68F   UNKNOWN  $E68F           ; Unknown Exxx instruction
$60A    $7376   ADD      V3, #76         ; Add 118 to V3
$60C    $F3BA   UNKNOWN  F3BA            ; Unknown Fxxx instruction
$60E    $B61A   JP       V0, $61A        ; Jump to V0 + 61A
$610    $D0C3   DRW      V0, VC, #3      ; Draw 3-byte sprite at V0, VC
$612    $7E2B   ADD      VE, #2B         ; Add 43 to VE
$614    $B163   JP       V0, $163        ; Jump to V0 + 163
$616    $39C0   SE       V9, #C0         ; Skip if V9 == 192
$618    $6DC6   LD       VD, #C6         ; Load 198 into VD
$61A    $2C6C   CALL     $C6C            ; Call subroutine at C6C
$61C    $D795   DRW      V7, V9, #5      ; Draw 5-byte sprite at V7, V9
$61E    $BDFA   JP       V0, $DFA        ; Jump to V0 + DFA
$620    $57A5   UNKNOWN  $57A5           ; Unknown 5xxx instruction
$622    $E42C   UNKNOWN  $E42C           ; Unknown Exxx instruction
$624    $3560   SE       V5, #60         ; Skip if V5 == 96
$626    $B70A   JP       V0, $70A        ; Jump to V0 + 70A
$628    $02BF   SYS      $2BF            ; System call to 2BF
$62A    $67C0   LD       V7, #C0         ; Load 192 into V7
$62C    $8940   LD       V9, V4          ; V9 = V4
$62E    $3833   SE       V8, #33         ; Skip if V8 == 51
$630    $852E   SHL      V5              ; V5 <<= 1, VF = MSB
$632    $8626   SHR      V6              ; V6 >>= 1, VF = LSB
$634    $E465   UNKNOWN  $E465           ; Unknown Exxx instruction
$636    $1AD0   JP       $AD0            ; Jump to AD0
$638    $3699   SE       V6, #99         ; Skip if V6 == 153
$63A    $9CE3   UNKNOWN  $9CE3           ; Unknown 9xxx instruction
$63C    $134F   JP       $34F            ; Jump to 34F
$63E    $90E9   UNKNOWN  $90E9           ; Unknown 9xxx instruction
$640    $CDFC   RND      VD, #FC         ; VD = random & FC
$642    $3BD4   SE       VB, #D4         ; Skip if VB == 212
$644    $835E   SHL      V3              ; V3 <<= 1, VF = MSB
$646    $AC8B   LD       I, $C8B         ; Load C8B into I
$648    $B414   JP       V0, $414        ; Jump to V0 + 414
$64A    $C32E   RND      V3, #2E         ; V3 = random & 2E
$64C    $A1D0   LD       I, $1D0         ; Load 1D0 into I
$64E    $E214   UNKNOWN  $E214           ; Unknown Exxx instruction
$650    $BFC1   JP       V0, $FC1        ; Jump to V0 + FC1
$652    $103D   JP       $03D            ; Jump to 03D
$654    $4BDC   SNE      VB, #DC         ; Skip if VB != 220
$656    $FD42   UNKNOWN  FD42            ; Unknown Fxxx instruction
$658    $1090   JP       $090            ; Jump to 090
$65A    $5C10   SE       VC, V1          ; Skip if VC == V1
$65C    $F034   UNKNOWN  F034            ; Unknown Fxxx instruction
$65E    $7C07   ADD      VC, #07         ; Add 7 to VC
$660    $6541   LD       V5, #41         ; Load 65 into V5
$662    $52F9   UNKNOWN  $52F9           ; Unknown 5xxx instruction
$664    $2A0F   CALL     $A0F            ; Call subroutine at A0F
$666    $01B2   SYS      $1B2            ; System call to 1B2
$668    $BC93   JP       V0, $C93        ; Jump to V0 + C93
$66A    $CF38   RND      VF, #38         ; VF = random & 38
$66C    $A117   LD       I, $117         ; Load 117 into I
$66E    $0438   SYS      $438            ; System call to 438
$670    $8CB5   SUB      VC, VB          ; VC -= VB, VF = !borrow
$672    $2A2D   CALL     $A2D            ; Call subroutine at A2D
$674    $B81D   JP       V0, $81D        ; Jump to V0 + 81D
$676    $F638   UNKNOWN  F638            ; Unknown Fxxx instruction
$678    $D800   DRW      V8, V0, #0      ; Draw 0-byte sprite at V8, V0
$67A    $D78A   DRW      V7, V8, #A      ; Draw 10-byte sprite at V7, V8
$67C    $1253   JP       $253            ; Jump to 253
$67E    $3E8C   SE       VE, #8C         ; Skip if VE == 140
$680    $8C66   SHR      VC              ; VC >>= 1, VF = LSB
$682    $CE6C   RND      VE, #6C         ; VE = random & 6C
$684    $44B9   SNE      V4, #B9         ; Skip if V4 != 185
$686    $A5E9   LD       I, $5E9         ; Load 5E9 into I
$688    $45AB   SNE      V5, #AB         ; Skip if V5 != 171
$68A    $8A7A   UNKNOWN  8A7A            ; Unknown 8xxx instruction
$68C    $FFCA   UNKNOWN  FFCA            ; Unknown Fxxx instruction
$68E    $E35F   UNKNOWN  $E35F           ; Unknown Exxx instruction
$690    $1DA0   JP       $DA0            ; Jump to DA0
$692    $FE83   UNKNOWN  FE83            ; Unknown Fxxx instruction
$694    $EFFE   UNKNOWN  $EFFE           ; Unknown Exxx instruction
$696    $9A1A   UNKNOWN  $9A1A           ; Unknown 9xxx instruction
$698    $EFD5   UNKNOWN  $EFD5           ; Unknown Exxx instruction
$69A    $F432   UNKNOWN  F432            ; Unknown Fxxx instruction
$69C    $8AF1   OR       VA, VF          ; VA |= VF
$69E    $4E98   SNE      VE, #98         ; Skip if VE != 152
$6A0    $EE16   UNKNOWN  $EE16           ; Unknown Exxx instruction
$6A2    $D94D   DRW      V9, V4, #D      ; Draw 13-byte sprite at V9, V4
$6A4    $E904   UNKNOWN  $E904           ; Unknown Exxx instruction
$6A6    $CB85   RND      VB, #85         ; VB = random & 85
$6A8    $79E2   ADD      V9, #E2         ; Add 226 to V9
$6AA    $DDD8   DRW      VD, VD, #8      ; Draw 8-byte sprite at VD, VD
$6AC    $0EA2   SYS      $EA2            ; System call to EA2
$6AE    $45D6   SNE      V5, #D6         ; Skip if V5 != 214
$6B0    $76DD   ADD      V6, #DD         ; Add 221 to V6
$6B2    $E473   UNKNOWN  $E473           ; Unknown Exxx instruction
$6B4    $C370   RND      V3, #70         ; V3 = random & 70
$6B6    $E8F8   UNKNOWN  $E8F8           ; Unknown Exxx instruction
$6B8    $3452   SE       V4, #52         ; Skip if V4 == 82
$6BA    $680E   LD       V8, #0E         ; Load 14 into V8
$6BC    $259F   CALL     $59F            ; Call subroutine at 59F
$6BE    $7758   ADD      V7, #58         ; Add 88 to V7
$6C0    $81FA   UNKNOWN  81FA            ; Unknown 8xxx instruction
$6C2    $56BF   UNKNOWN  $56BF           ; Unknown 5xxx instruction
$6C4    $01E7   SYS      $1E7            ; System call to 1E7
$6C6    $B4CD   JP       V0, $4CD        ; Jump to V0 + 4CD
$6C8    $8AEC   UNKNOWN  8AEC            ; Unknown 8xxx instruction
$6CA    $20D3   CALL     $0D3            ; Call subroutine at 0D3
$6CC    $463E   SNE      V6, #3E         ; Skip if V6 != 62
$6CE    $291B   CALL     $91B            ; Call subroutine at 91B
$6D0    $2BAC   CALL     $BAC            ; Call subroutine at BAC
$6D2    $8327   SUBN     V3, V2          ; V3 = V2 - V3, VF = !borrow
$6D4    $18F5   JP       $8F5            ; Jump to 8F5
$6D6    $598E   UNKNOWN  $598E           ; Unknown 5xxx instruction
$6D8    $2BD7   CALL     $BD7            ; Call subroutine at BD7
$6DA    $BFA7   JP       V0, $FA7        ; Jump to V0 + FA7
$6DC    $79E1   ADD      V9, #E1         ; Add 225 to V9
$6DE    $CCDE   RND      VC, #DE         ; VC = random & DE
$6E0    $081C   SYS      $81C            ; System call to 81C
$6E2    $6A6B   LD       VA, #6B         ; Load 107 into VA
$6E4    $741B   ADD      V4, #1B         ; Add 27 to V4
$6E6    $F675   UNKNOWN  F675            ; Unknown Fxxx instruction
$6E8    $60E0   LD       V0, #E0         ; Load 224 into V0
$6EA    $806F   UNKNOWN  806F            ; Unknown 8xxx instruction
$6EC    $0414   SYS      $414            ; System call to 414
$6EE    $5A2D   UNKNOWN  $5A2D           ; Unknown 5xxx instruction
$6F0    $C6A9   RND      V6, #A9         ; V6 = random & A9
$6F2    $A09A   LD       I, $09A         ; Load 09A into I
$6F4    $3ED9   SE       VE, #D9         ; Skip if VE == 217
$6F6    $D7C9   DRW      V7, VC, #9      ; Draw 9-byte sprite at V7, VC
$6F8    $FDDF   UNKNOWN  FDDF            ; Unknown Fxxx instruction
$6FA    $D7A5   DRW      V7, VA, #5      ; Draw 5-byte sprite at V7, VA
$6FC    $3B45   SE       VB, #45         ; Skip if VB == 69
$6FE    $1E77   JP       $E77            ; Jump to E77
$700    $EA10   UNKNOWN  $EA10           ; Unknown Exxx instruction
$702    $B937   JP       V0, $937        ; Jump to V0 + 937
$704    $F46F   UNKNOWN  F46F            ; Unknown Fxxx instruction
$706    $4EAF   SNE      VE, #AF         ; Skip if VE != 175
$708    $F94D   UNKNOWN  F94D            ; Unknown Fxxx instruction
$70A    $031D   SYS      $31D            ; System call to 31D
$70C    $C30F   RND      V3, #0F         ; V3 = random & 0F
$70E    $F682   UNKNOWN  F682            ; Unknown Fxxx instruction
$710    $0AD0   SYS      $AD0            ; System call to AD0
$712    $F987   UNKNOWN  F987            ; Unknown Fxxx instruction
$714    $CA09   RND      VA, #09         ; VA = random & 09
$716    $10AE   JP       $0AE            ; Jump to 0AE
$718    $51D3   UNKNOWN  $51D3           ; Unknown 5xxx instruction
$71A    $57CD   UNKNOWN  $57CD           ; Unknown 5xxx instruction
$71C    $7F38   ADD      VF, #38         ; Add 56 to VF
$71E    $E49A   UNKNOWN  $E49A           ; Unknown Exxx instruction
$720    $D61F   DRW      V6, V1, #F      ; Draw 15-byte sprite at V6, V1
$722    $92EB   UNKNOWN  $92EB           ; Unknown 9xxx instruction
$724    $EEE1   UNKNOWN  $EEE1           ; Unknown Exxx instruction
$726    $EF6F   UNKNOWN  $EF6F           ; Unknown Exxx instruction
$728    $9649   UNKNOWN  $9649           ; Unknown 9xxx instruction
$72A    $C296   RND      V2, #96         ; V2 = random & 96
$72C    $3997   SE       V9, #97         ; Skip if V9 == 151
$72E    $A223   LD       I, $223         ; Load 223 into I
$730    $CA0B   RND      VA, #0B         ; VA = random & 0B
$732    $E744   UNKNOWN  $E744           ; Unknown Exxx instruction
$734    $3FB9   SE       VF, #B9         ; Skip if VF == 185
$736    $46AC   SNE      V6, #AC         ; Skip if V6 != 172
$738    $F2AF   UNKNOWN  F2AF            ; Unknown Fxxx instruction
$73A    $C14E   RND      V1, #4E         ; V1 = random & 4E
$73C    $CBDB   RND      VB, #DB         ; VB = random & DB
$73E    $BDA2   JP       V0, $DA2        ; Jump to V0 + DA2
$740    $BF2D   JP       V0, $F2D        ; Jump to V0 + F2D
$742    $9357   UNKNOWN  $9357           ; Unknown 9xxx instruction
$744    $8BE3   XOR      VB, VE          ; VB ^= VE
$746    $B4D9   JP       V0, $4D9        ; Jump to V0 + 4D9
$748    $5161   UNKNOWN  $5161           ; Unknown 5xxx instruction
$74A    $4A6E   SNE      VA, #6E         ; Skip if VA != 110
$74C    $E1C9   UNKNOWN  $E1C9           ; Unknown Exxx instruction
$74E    $5C0B   UNKNOWN  $5C0B           ; Unknown 5xxx instruction
$750    $4464   SNE      V4, #64         ; Skip if V4 != 100
$752    $094D   SYS      $94D            ; System call to 94D
$754    $8AEE   SHL      VA              ; VA <<= 1, VF = MSB
$756    $A2D1   LD       I, $2D1         ; Load 2D1 into I
$758    $480D   SNE      V8, #0D         ; Skip if V8 != 13
$75A    $DBBD   DRW      VB, VB, #D      ; Draw 13-byte sprite at VB, VB
$75C    $7658   ADD      V6, #58         ; Add 88 to V6
$75E    $262D   CALL     $62D            ; Call subroutine at 62D
$760    $F79A   UNKNOWN  F79A            ; Unknown Fxxx instruction
$762    $9DCC   UNKNOWN  $9DCC           ; Unknown 9xxx instruction
$764    $08DD   SYS      $8DD            ; System call to 8DD
$766    $D62B   DRW      V6, V2, #B      ; Draw 11-byte sprite at V6, V2
$768    $405D   SNE      V0, #5D         ; Skip if V0 != 93
$76A    $3790   SE       V7, #90         ; Skip if V7 == 144
$76C    $F463   UNKNOWN  F463            ; Unknown Fxxx instruction
$76E    $28A0   CALL     $8A0            ; Call subroutine at 8A0
$770    $DB13   DRW      VB, V1, #3      ; Draw 3-byte sprite at VB, V1
$772    $E79E   SKP      V7              ; Skip if key V7 pressed
$774    $66AC   LD       V6, #AC         ; Load 172 into V6
$776    $BF73   JP       V0, $F73        ; Jump to V0 + F73
$778    $3BA7   SE       VB, #A7         ; Skip if VB == 167
$77A    $BD6B   JP       V0, $D6B        ; Jump to V0 + D6B
$77C    $C4FB   RND      V4, #FB         ; V4 = random & FB
$77E    $2A80   CALL     $A80            ; Call subroutine at A80
$780    $E802   UNKNOWN  $E802           ; Unknown Exxx instruction
$782    $35AC   SE       V5, #AC         ; Skip if V5 == 172
$784    $1380   JP       $380            ; Jump to 380
$786    $12F7   JP       $2F7            ; Jump to 2F7
$788    $92F2   UNKNOWN  $92F2           ; Unknown 9xxx instruction
$78A    $161F   JP       $61F            ; Jump to 61F
$78C    $A2CE   LD       I, $2CE         ; Load 2CE into I
$78E    $1A73   JP       $A73            ; Jump to A73
$790    $714D   ADD      V1, #4D         ; Add 77 to V1
$792    $C079   RND      V0, #79         ; V0 = random & 79
$794    $DD48   DRW      VD, V4, #8      ; Draw 8-byte sprite at VD, V4
$796    $A33F   LD       I, $33F         ; Load 33F into I
$798    $3372   SE       V3, #72         ; Skip if V3 == 114
$79A    $5777   UNKNOWN  $5777           ; Unknown 5xxx instruction
$79C    $F79F   UNKNOWN  F79F            ; Unknown Fxxx instruction
$79E    $28CE   CALL     $8CE            ; Call subroutine at 8CE
$7A0    $EA3A   UNKNOWN  $EA3A           ; Unknown Exxx instruction
$7A2    $4716   SNE      V7, #16         ; Skip if V7 != 22
$7A4    $C45F   RND      V4, #5F         ; V4 = random & 5F
$7A6    $E010   UNKNOWN  $E010           ; Unknown Exxx instruction
$7A8    $B0F6   JP       V0, $0F6        ; Jump to V0 + 0F6
$7AA    $96BF   UNKNOWN  $96BF           ; Unknown 9xxx instruction
$7AC    $C20D   RND      V2, #0D         ; V2 = random & 0D
$7AE    $632C   LD       V3, #2C         ; Load 44 into V3
$7B0    $7A20   ADD      VA, #20         ; Add 32 to VA
$7B2    $94D2   UNKNOWN  $94D2           ; Unknown 9xxx instruction
$7B4    $8D87   SUBN     VD, V8          ; VD = V8 - VD, VF = !borrow
$7B6    $C131   RND      V1, #31         ; V1 = random & 31
$7B8    $D9F8   DRW      V9, VF, #8      ; Draw 8-byte sprite at V9, VF
$7BA    $47CF   SNE      V7, #CF         ; Skip if V7 != 207
$7BC    $7D12   ADD      VD, #12         ; Add 18 to VD
$7BE    $632B   LD       V3, #2B         ; Load 43 into V3
$7C0    $5DD4   UNKNOWN  $5DD4           ; Unknown 5xxx instruction
$7C2    $3C77   SE       VC, #77         ; Skip if VC == 119
$7C4    $ACEC   LD       I, $CEC         ; Load CEC into I
$7C6    $036C   SYS      $36C            ; System call to 36C
$7C8    $C6B3   RND      V6, #B3         ; V6 = random & B3
$7CA    $85C6   SHR      V5              ; V5 >>= 1, VF = LSB
$7CC    $F33E   UNKNOWN  F33E            ; Unknown Fxxx instruction
$7CE    $4C0E   SNE      VC, #0E         ; Skip if VC != 14
$7D0    $F281   UNKNOWN  F281            ; Unknown Fxxx instruction
$7D2    $B880   JP       V0, $880        ; Jump to V0 + 880
$7D4    $635D   LD       V3, #5D         ; Load 93 into V3
$7D6    $65C2   LD       V5, #C2         ; Load 194 into V5
$7D8    $2A1E   CALL     $A1E            ; Call subroutine at A1E
$7DA    $861F   UNKNOWN  861F            ; Unknown 8xxx instruction
$7DC    $66EB   LD       V6, #EB         ; Load 235 into V6
$7DE    $FB98   UNKNOWN  FB98            ; Unknown Fxxx instruction
$7E0    $271B   CALL     $71B            ; Call subroutine at 71B
$7E2    $6975   LD       V9, #75         ; Load 117 into V9
$7E4    $1B74   JP       $B74            ; Jump to B74
$7E6    $8346   SHR      V3              ; V3 >>= 1, VF = LSB
$7E8    $2189   CALL     $189            ; Call subroutine at 189
$7EA    $3C29   SE       VC, #29         ; Skip if VC == 41
$7EC    $145F   JP       $45F            ; Jump to 45F
$7EE    $222A   CALL     $22A            ; Call subroutine at 22A
$7F0    $89FF   UNKNOWN  89FF            ; Unknown 8xxx instruction
$7F2    $8987   SUBN     V9, V8          ; V9 = V8 - V9, VF = !borrow
$7F4    $E8BF   UNKNOWN  $E8BF           ; Unknown Exxx instruction
$7F6    $C93E   RND      V9, #3E         ; V9 = random & 3E
$7F8    $88EC   UNKNOWN  88EC            ; Unknown 8xxx instruction
$7FA    $A067   LD       I, $067         ; Load 067 into I
$7FC    $0BAD   SYS      $BAD            ; System call to BAD
$7FE    $1B20   JP       $B20            ; Jump to B20
$800    $B1E7   JP       V0, $1E7        ; Jump to V0 + 1E7
$802    $177E   JP       $77E            ; Jump to 77E
$804    $CEC4   RND      VE, #C4         ; VE = random & C4
$806    $2C8F   CALL     $C8F            ; Call subroutine at C8F
$808    $45D9   SNE      V5, #D9         ; Skip if V5 != 217
$80A    $A249   LD       I, $249         ; Load 249 into I
$80C    $EB7E   UNKNOWN  $EB7E           ; Unknown Exxx instruction
$80E    $78AE   ADD      V8, #AE         ; Add 174 to V8
$810    $E5F6   UNKNOWN  $E5F6           ; Unknown Exxx instruction
$812    $450A   SNE      V5, #0A         ; Skip if V5 != 10
$814    $87F2   AND      V7, VF          ; V7 &= VF
$816    $957B   UNKNOWN  $957B           ; Unknown 9xxx instruction
$818    $A4A6   LD       I, $4A6         ; Load 4A6 into I
$81A    $D3C0   DRW      V3, VC, #0      ; Draw 0-byte sprite at V3, VC
$81C    $4384   SNE      V3, #84         ; Skip if V3 != 132
$81E    $B2DA   JP       V0, $2DA        ; Jump to V0 + 2DA
$820    $1F90   JP       $F90            ; Jump to F90
$822    $CE5F   RND      VE, #5F         ; VE = random & 5F
$824    $3A18   SE       VA, #18         ; Skip if VA == 24
$826    $E2DB   UNKNOWN  $E2DB           ; Unknown Exxx instruction
$828    $44B0   SNE      V4, #B0         ; Skip if V4 != 176
$82A    $2E56   CALL     $E56            ; Call subroutine at E56
$82C    $255C   CALL     $55C            ; Call subroutine at 55C
$82E    $5FC1   UNKNOWN  $5FC1           ; Unknown 5xxx instruction
$830    $899C   UNKNOWN  899C            ; Unknown 8xxx instruction
$832    $F13A   UNKNOWN  F13A            ; Unknown Fxxx instruction
$834    $144C   JP       $44C            ; Jump to 44C
$836    $A4F2   LD       I, $4F2         ; Load 4F2 into I
$838    $4965   SNE      V9, #65         ; Skip if V9 != 101
$83A    $3522   SE       V5, #22         ; Skip if V5 == 34
$83C    $9767   UNKNOWN  $9767           ; Unknown 9xxx instruction
$83E    $44FD   SNE      V4, #FD         ; Skip if V4 != 253
$840    $9CF7   UNKNOWN  $9CF7           ; Unknown 9xxx instruction
$842    $CB7A   RND      VB, #7A         ; VB = random & 7A
$844    $9899   UNKNOWN  $9899           ; Unknown 9xxx instruction
$846    $1D7B   JP       $D7B            ; Jump to D7B
$848    $0594   SYS      $594            ; System call to 594
$84A    $8595   SUB      V5, V9          ; V5 -= V9, VF = !borrow
$84C    $192C   JP       $92C            ; Jump to 92C
$84E    $F947   UNKNOWN  F947            ; Unknown Fxxx instruction
$850    $C712   RND      V7, #12         ; V7 = random & 12
$852    $04FE   SYS      $4FE            ; System call to 4FE
$854    $8CE9   UNKNOWN  8CE9            ; Unknown 8xxx instruction
$856    $350B   SE       V5, #0B         ; Skip if V5 == 11
$858    $542C   UNKNOWN  $542C           ; Unknown 5xxx instruction
$85A    $F29B   UNKNOWN  F29B            ; Unknown Fxxx instruction
$85C    $5AE4   UNKNOWN  $5AE4           ; Unknown 5xxx instruction
$85E    $B840   JP       V0, $840        ; Jump to V0 + 840
$860    $607B   LD       V0, #7B         ; Load 123 into V0
$862    $AC79   LD       I, $C79         ; Load C79 into I
$864    $C476   RND      V4, #76         ; V4 = random & 76
$866    $3FB6   SE       VF, #B6         ; Skip if VF == 182
$868    $7B73   ADD      VB, #73         ; Add 115 to VB
$86A    $F986   UNKNOWN  F986            ; Unknown Fxxx instruction
$86C    $4EBE   SNE      VE, #BE         ; Skip if VE != 190
$86E    $4F69   SNE      VF, #69         ; Skip if VF != 105
$870    $A485   LD       I, $485         ; Load 485 into I
$872    $1384   JP       $384            ; Jump to 384
$874    $AB2F   LD       I, $B2F         ; Load B2F into I
$876    $79B1   ADD      V9, #B1         ; Add 177 to V9
$878    $F566   UNKNOWN  F566            ; Unknown Fxxx instruction
$87A    $0547   SYS      $547            ; System call to 547
$87C    $22F1   CALL     $2F1            ; Call subroutine at 2F1
$87E    $8507   SUBN     V5, V0          ; V5 = V0 - V5, VF = !borrow
$880    $39C8   SE       V9, #C8         ; Skip if V9 == 200
$882    $44D3   SNE      V4, #D3         ; Skip if V4 != 211
$884    $5783   UNKNOWN  $5783           ; Unknown 5xxx instruction
$886    $BD26   JP       V0, $D26        ; Jump to V0 + D26
$888    $ACA7   LD       I, $CA7         ; Load CA7 into I
$88A    $A430   LD       I, $430         ; Load 430 into I
$88C    $EC2A   UNKNOWN  $EC2A           ; Unknown Exxx instruction
$88E    $F551   UNKNOWN  F551            ; Unknown Fxxx instruction
$890    $1CCE   JP       $CCE            ; Jump to CCE
$892    $48E9   SNE      V8, #E9         ; Skip if V8 != 233
$894    $89ED   UNKNOWN  89ED            ; Unknown 8xxx instruction
$896    $2467   CALL     $467            ; Call subroutine at 467
$898    $F332   UNKNOWN  F332            ; Unknown Fxxx instruction
$89A    $A3E0   LD       I, $3E0         ; Load 3E0 into I
$89C    $F18A   UNKNOWN  F18A            ; Unknown Fxxx instruction
$89E    $4609   SNE      V6, #09         ; Skip if V6 != 9
$8A0    $C829   RND      V8, #29         ; V8 = random & 29
$8A2    $1830   JP       $830            ; Jump to 830
$8A4    $4635   SNE      V6, #35         ; Skip if V6 != 53
$8A6    $36D9   SE       V6, #D9         ; Skip if V6 == 217
$8A8    $B3A5   JP       V0, $3A5        ; Jump to V0 + 3A5
$8AA    $C70D   RND      V7, #0D         ; V7 = random & 0D
$8AC    $CC60   RND      VC, #60         ; VC = random & 60
$8AE    $E47A   UNKNOWN  $E47A           ; Unknown Exxx instruction
$8B0    $1ADE   JP       $ADE            ; Jump to ADE
$8B2    $552E   UNKNOWN  $552E           ; Unknown 5xxx instruction
$8B4    $1F10   JP       $F10            ; Jump to F10
$8B6    $85C0   LD       V5, VC          ; V5 = VC
$8B8    $378B   SE       V7, #8B         ; Skip if V7 == 139
$8BA    $36A2   SE       V6, #A2         ; Skip if V6 == 162
$8BC    $09D0   SYS      $9D0            ; System call to 9D0
$8BE    $1DFA   JP       $DFA            ; Jump to DFA
$8C0    $47AA   SNE      V7, #AA         ; Skip if V7 != 170
$8C2    $7368   ADD      V3, #68         ; Add 104 to V3
$8C4    $D1B6   DRW      V1, VB, #6      ; Draw 6-byte sprite at V1, VB
$8C6    $05ED   SYS      $5ED            ; System call to 5ED
$8C8    $CB97   RND      VB, #97         ; VB = random & 97
$8CA    $E10B   UNKNOWN  $E10B           ; Unknown Exxx instruction
$8CC    $C6D7   RND      V6, #D7         ; V6 = random & D7
$8CE    $5725   UNKNOWN  $5725           ; Unknown 5xxx instruction
$8D0    $1FF6   JP       $FF6            ; Jump to FF6
$8D2    $FFE8   UNKNOWN  FFE8            ; Unknown Fxxx instruction
$8D4    $E7B5   UNKNOWN  $E7B5           ; Unknown Exxx instruction
$8D6    $12D4   JP       $2D4            ; Jump to 2D4
$8D8    $6FE0   LD       VF, #E0         ; Load 224 into VF
$8DA    $877A   UNKNOWN  877A            ; Unknown 8xxx instruction
$8DC    $4EE3   SNE      VE, #E3         ; Skip if VE != 227
$8DE    $3B80   SE       VB, #80         ; Skip if VB == 128
$8E0    $A2A9   LD       I, $2A9         ; Load 2A9 into I
$8E2    $0E9A   SYS      $E9A            ; System call to E9A
$8E4    $5DDB   UNKNOWN  $5DDB           ; Unknown 5xxx instruction
$8E6    $AA2E   LD       I, $A2E         ; Load A2E into I
$8E8    $6A69   LD       VA, #69         ; Load 105 into VA
$8EA    $480C   SNE      V8, #0C         ; Skip if V8 != 12
$8EC    $A4FF   LD       I, $4FF         ; Load 4FF into I
$8EE    $16D5   JP       $6D5            ; Jump to 6D5
$8F0    $E6D2   UNKNOWN  $E6D2           ; Unknown Exxx instruction
$8F2    $62D0   LD       V2, #D0         ; Load 208 into V2
$8F4    $4AB2   SNE      VA, #B2         ; Skip if VA != 178
$8F6    $E445   UNKNOWN  $E445           ; Unknown Exxx instruction
$8F8    $3B51   SE       VB, #51         ; Skip if VB == 81
$8FA    $2048   CALL     $048            ; Call subroutine at 048
$8FC    $95A1   UNKNOWN  $95A1           ; Unknown 9xxx instruction
$8FE    $33D3   SE       V3, #D3         ; Skip if V3 == 211
$900    $7164   ADD      V1, #64         ; Add 100 to V1
$902    $73FE   ADD      V3, #FE         ; Add 254 to V3
$904    $71F3   ADD      V1, #F3         ; Add 243 to V1
$906    $7851   ADD      V8, #51         ; Add 81 to V8
$908    $E344   UNKNOWN  $E344           ; Unknown Exxx instruction
$90A    $053E   SYS      $53E            ; System call to 53E
$90C    $ECDC   UNKNOWN  $ECDC           ; Unknown Exxx instruction
$90E    $71FD   ADD      V1, #FD         ; Add 253 to V1
$910    $7AB8   ADD      VA, #B8         ; Add 184 to VA
$912    $D875   DRW      V8, V7, #5      ; Draw 5-byte sprite at V8, V7
$914    $D5BB   DRW      V5, VB, #B      ; Draw 11-byte sprite at V5, VB
$916    $0E95   SYS      $E95            ; System call to E95
$918    $BCAC   JP       V0, $CAC        ; Jump to V0 + CAC
$91A    $A830   LD       I, $830         ; Load 830 into I
$91C    $BDE8   JP       V0, $DE8        ; Jump to V0 + DE8
$91E    $8ACA   UNKNOWN  8ACA            ; Unknown 8xxx instruction
$920    $7BE4   ADD      VB, #E4         ; Add 228 to VB
$922    $644D   LD       V4, #4D         ; Load 77 into V4
$924    $A542   LD       I, $542         ; Load 542 into I
$926    $DFA8   DRW      VF, VA, #8      ; Draw 8-byte sprite at VF, VA
$928    $4261   SNE      V2, #61         ; Skip if V2 != 97
$92A    $EDD2   UNKNOWN  $EDD2           ; Unknown Exxx instruction
$92C    $5EE6   UNKNOWN  $5EE6           ; Unknown 5xxx instruction
$92E    $F422   UNKNOWN  F422            ; Unknown Fxxx instruction
$930    $6B07   LD       VB, #07         ; Load 7 into VB
$932    $7C7B   ADD      VC, #7B         ; Add 123 to VC
$934    $9F7D   UNKNOWN  $9F7D           ; Unknown 9xxx instruction
$936    $3F08   SE       VF, #08         ; Skip if VF == 8
$938    $E7E3   UNKNOWN  $E7E3           ; Unknown Exxx instruction
$93A    $60ED   LD       V0, #ED         ; Load 237 into V0
$93C    $DCA4   DRW      VC, VA, #4      ; Draw 4-byte sprite at VC, VA
$93E    $DE1A   DRW      VE, V1, #A      ; Draw 10-byte sprite at VE, V1
$940    $F555   LD       [I], V5         ; Store V0-V5 at I
$942    $32C0   SE       V2, #C0         ; Skip if V2 == 192
$944    $256D   CALL     $56D            ; Call subroutine at 56D
$946    $4D26   SNE      VD, #26         ; Skip if VD != 38
$948    $0BBD   SYS      $BBD            ; System call to BBD
$94A    $B748   JP       V0, $748        ; Jump to V0 + 748
$94C    $585E   UNKNOWN  $585E           ; Unknown 5xxx instruction
$94E    $6F92   LD       VF, #92         ; Load 146 into VF
$950    $3550   SE       V5, #50         ; Skip if V5 == 80
$952    $588C   UNKNOWN  $588C           ; Unknown 5xxx instruction
$954    $B5BC   JP       V0, $5BC        ; Jump to V0 + 5BC
$956    $CC29   RND      VC, #29         ; VC = random & 29
$958    $5A4D   UNKNOWN  $5A4D           ; Unknown 5xxx instruction
$95A    $C633   RND      V6, #33         ; V6 = random & 33
$95C    $83FB   UNKNOWN  83FB            ; Unknown 8xxx instruction
$95E    $A095   LD       I, $095         ; Load 095 into I
$960    $B21E   JP       V0, $21E        ; Jump to V0 + 21E
$962    $8502   AND      V5, V0          ; V5 &= V0
$964    $67B7   LD       V7, #B7         ; Load 183 into V7
$966    $E695   UNKNOWN  $E695           ; Unknown Exxx instruction
$968    $14A7   JP       $4A7            ; Jump to 4A7
$96A    $E220   UNKNOWN  $E220           ; Unknown Exxx instruction
$96C    $6D50   LD       VD, #50         ; Load 80 into VD
$96E    $4F9F   SNE      VF, #9F         ; Skip if VF != 159
$970    $9442   UNKNOWN  $9442           ; Unknown 9xxx instruction
$972    $AC63   LD       I, $C63         ; Load C63 into I
$974    $CBA7   RND      VB, #A7         ; VB = random & A7
$976    $4DC0   SNE      VD, #C0         ; Skip if VD != 192
$978    $39C4   SE       V9, #C4         ; Skip if V9 == 196
$97A    $BF55   JP       V0, $F55        ; Jump to V0 + F55
$97C    $9E54   UNKNOWN  $9E54           ; Unknown 9xxx instruction
$97E    $51DE   UNKNOWN  $51DE           ; Unknown 5xxx instruction
$980    $3CD1   SE       VC, #D1         ; Skip if VC == 209
$982    $6AC2   LD       VA, #C2         ; Load 194 into VA
$984    $A9CA   LD       I, $9CA         ; Load 9CA into I
$986    $7258   ADD      V2, #58         ; Add 88 to V2
$988    $E8AC   UNKNOWN  $E8AC           ; Unknown Exxx instruction
$98A    $1F8E   JP       $F8E            ; Jump to F8E
$98C    $7E59   ADD      VE, #59         ; Add 89 to VE
$98E    $498D   SNE      V9, #8D         ; Skip if V9 != 141
$990    $F841   UNKNOWN  F841            ; Unknown Fxxx instruction
$992    $977A   UNKNOWN  $977A           ; Unknown 9xxx instruction
$994    $7AD9   ADD      VA, #D9         ; Add 217 to VA
$996    $39CD   SE       V9, #CD         ; Skip if V9 == 205
$998    $4176   SNE      V1, #76         ; Skip if V1 != 118
$99A    $DE59   DRW      VE, V5, #9      ; Draw 9-byte sprite at VE, V5
$99C    $A5AF   LD       I, $5AF         ; Load 5AF into I
$99E    $A27A   LD       I, $27A         ; Load 27A into I
$9A0    $45D6   SNE      V5, #D6         ; Skip if V5 != 214
$9A2    $E5CD   UNKNOWN  $E5CD           ; Unknown Exxx instruction
$9A4    $4C4C   SNE      VC, #4C         ; Skip if VC != 76
$9A6    $85C2   AND      V5, VC          ; V5 &= VC
$9A8    $E3C1   UNKNOWN  $E3C1           ; Unknown Exxx instruction
$9AA    $D7A5   DRW      V7, VA, #5      ; Draw 5-byte sprite at V7, VA
$9AC    $8CAA   UNKNOWN  8CAA            ; Unknown 8xxx instruction
$9AE    $9307   UNKNOWN  $9307           ; Unknown 9xxx instruction
$9B0    $051A   SYS      $51A            ; System call to 51A
$9B2    $CD44   RND      VD, #44         ; VD = random & 44
$9B4    $392F   SE       V9, #2F         ; Skip if V9 == 47
$9B6    $9E7B   UNKNOWN  $9E7B           ; Unknown 9xxx instruction
$9B8    $B6FC   JP       V0, $6FC        ; Jump to V0 + 6FC
$9BA    $1B83   JP       $B83            ; Jump to B83
$9BC    $D594   DRW      V5, V9, #4      ; Draw 4-byte sprite at V5, V9
$9BE    $7A50   ADD      VA, #50         ; Add 80 to VA
$9C0    $BD87   JP       V0, $D87        ; Jump to V0 + D87
$9C2    $8122   AND      V1, V2          ; V1 &= V2
$9C4    $8539   UNKNOWN  8539            ; Unknown 8xxx instruction
$9C6    $CCC4   RND      VC, #C4         ; VC = random & C4
$9C8    $E2EF   UNKNOWN  $E2EF           ; Unknown Exxx instruction
$9CA    $E798   UNKNOWN  $E798           ; Unknown Exxx instruction
$9CC    $57FF   UNKNOWN  $57FF           ; Unknown 5xxx instruction
$9CE    $9773   UNKNOWN  $9773           ; Unknown 9xxx instruction
$9D0    $37A3   SE       V7, #A3         ; Skip if V7 == 163
$9D2    $621C   LD       V2, #1C         ; Load 28 into V2
$9D4    $02AD   SYS      $2AD            ; System call to 2AD
$9D6    $4169   SNE      V1, #69         ; Skip if V1 != 105
$9D8    $A229   LD       I, $229         ; Load 229 into I
$9DA    $B239   JP       V0, $239        ; Jump to V0 + 239
$9DC    $EB11   UNKNOWN  $EB11           ; Unknown Exxx instruction
$9DE    $9FDF   UNKNOWN  $9FDF           ; Unknown 9xxx instruction
$9E0    $2929   CALL     $929            ; Call subroutine at 929
$9E2    $892E   SHL      V9              ; V9 <<= 1, VF = MSB
$9E4    $3949   SE       V9, #49         ; Skip if V9 == 73
$9E6    $52F8   UNKNOWN  $52F8           ; Unknown 5xxx instruction
$9E8    $26B9   CALL     $6B9            ; Call subroutine at 6B9
$9EA    $DB0A   DRW      VB, V0, #A      ; Draw 10-byte sprite at VB, V0
$9EC    $4BDF   SNE      VB, #DF         ; Skip if VB != 223
$9EE    $7B98   ADD      VB, #98         ; Add 152 to VB
$9F0    $EF4E   UNKNOWN  $EF4E           ; Unknown Exxx instruction
$9F2    $F504   UNKNOWN  F504            ; Unknown Fxxx instruction
$9F4    $E657   UNKNOWN  $E657           ; Unknown Exxx instruction
$9F6    $93AC   UNKNOWN  $93AC           ; Unknown 9xxx instruction
$9F8    $5772   UNKNOWN  $5772           ; Unknown 5xxx instruction
$9FA    $F9A2   UNKNOWN  F9A2            ; Unknown Fxxx instruction
$9FC    $7F29   ADD      VF, #29         ; Add 41 to VF
$9FE    $53F4   UNKNOWN  $53F4           ; Unknown 5xxx instruction
$A00    $3552   SE       V5, #52         ; Skip if V5 == 82
$A02    $8599   UNKNOWN  8599            ; Unknown 8xxx instruction
$A04    $0B28   SYS      $B28            ; System call to B28
$A06    $9696   UNKNOWN  $9696           ; Unknown 9xxx instruction
$A08    $DB8F   DRW      VB, V8, #F      ; Draw 15-byte sprite at VB, V8
$A0A    $B2E8   JP       V0, $2E8        ; Jump to V0 + 2E8
$A0C    $69BC   LD       V9, #BC         ; Load 188 into V9
$A0E    $0749   SYS      $749            ; System call to 749
$A10    $00BE   SYS      $0BE            ; System call to 0BE
$A12    $1DD6   JP       $DD6            ; Jump to DD6
$A14    $C95D   RND      V9, #5D         ; V9 = random & 5D
$A16    $5BB1   UNKNOWN  $5BB1           ; Unknown 5xxx instruction
$A18    $AC30   LD       I, $C30         ; Load C30 into I
$A1A    $4030   SNE      V0, #30         ; Skip if V0 != 48
$A1C    $6978   LD       V9, #78         ; Load 120 into V9
$A1E    $6FB1   LD       VF, #B1         ; Load 177 into VF
$A20    $52C0   SE       V2, VC          ; Skip if V2 == VC
$A22    $F7DF   UNKNOWN  F7DF            ; Unknown Fxxx instruction
$A24    $3E59   SE       VE, #59         ; Skip if VE == 89
$A26    $8F31   OR       VF, V3          ; VF |= V3
$A28    $765F   ADD      V6, #5F         ; Add 95 to V6
$A2A    $0F3F   SYS      $F3F            ; System call to F3F
$A2C    $B924   JP       V0, $924        ; Jump to V0 + 924
$A2E    $26A9   CALL     $6A9            ; Call subroutine at 6A9
$A30    $CE0B   RND      VE, #0B         ; VE = random & 0B
$A32    $94E8   UNKNOWN  $94E8           ; Unknown 9xxx instruction
$A34    $EFF4   UNKNOWN  $EFF4           ; Unknown Exxx instruction
$A36    $8240   LD       V2, V4          ; V2 = V4
$A38    $3CD9   SE       VC, #D9         ; Skip if VC == 217
$A3A    $083A   SYS      $83A            ; System call to 83A
$A3C    $0424   SYS      $424            ; System call to 424
$A3E    $650A   LD       V5, #0A         ; Load 10 into V5
$A40    $52B6   UNKNOWN  $52B6           ; Unknown 5xxx instruction
$A42    $E125   UNKNOWN  $E125           ; Unknown Exxx instruction
$A44    $93DB   UNKNOWN  $93DB           ; Unknown 9xxx instruction
$A46    $256B   CALL     $56B            ; Call subroutine at 56B
$A48    $DCA9   DRW      VC, VA, #9      ; Draw 9-byte sprite at VC, VA
$A4A    $86FE   SHL      V6              ; V6 <<= 1, VF = MSB
$A4C    $9063   UNKNOWN  $9063           ; Unknown 9xxx instruction
$A4E    $F1AD   UNKNOWN  F1AD            ; Unknown Fxxx instruction
$A50    $23D7   CALL     $3D7            ; Call subroutine at 3D7
$A52    $1EE6   JP       $EE6            ; Jump to EE6
$A54    $285D   CALL     $85D            ; Call subroutine at 85D
$A56    $5F58   UNKNOWN  $5F58           ; Unknown 5xxx instruction
$A58    $3737   SE       V7, #37         ; Skip if V7 == 55
$A5A    $4D9A   SNE      VD, #9A         ; Skip if VD != 154
$A5C    $80C0   LD       V0, VC          ; V0 = VC
$A5E    $5870   SE       V8, V7          ; Skip if V8 == V7
$A60    $605F   LD       V0, #5F         ; Load 95 into V0
$A62    $CE97   RND      VE, #97         ; VE = random & 97
$A64    $F594   UNKNOWN  F594            ; Unknown Fxxx instruction
$A66    $7E8F   ADD      VE, #8F         ; Add 143 to VE
$A68    $5DB5   UNKNOWN  $5DB5           ; Unknown 5xxx instruction
$A6A    $7FDB   ADD      VF, #DB         ; Add 219 to VF
$A6C    $E48B   UNKNOWN  $E48B           ; Unknown Exxx instruction
$A6E    $ABA0   LD       I, $BA0         ; Load BA0 into I
$A70    $6A7C   LD       VA, #7C         ; Load 124 into VA
$A72    $D38A   DRW      V3, V8, #A      ; Draw 10-byte sprite at V3, V8
$A74    $3E32   SE       VE, #32         ; Skip if VE == 50
$A76    $32E3   SE       V2, #E3         ; Skip if V2 == 227
$A78    $7BDA   ADD      VB, #DA         ; Add 218 to VB
$A7A    $3D4C   SE       VD, #4C         ; Skip if VD == 76
$A7C    $4F8E   SNE      VF, #8E         ; Skip if VF != 142
$A7E    $4017   SNE      V0, #17         ; Skip if V0 != 23
$A80    $4FC8   SNE      VF, #C8         ; Skip if VF != 200
$A82    $E5BF   UNKNOWN  $E5BF           ; Unknown Exxx instruction
$A84    $C0E9   RND      V0, #E9         ; V0 = random & E9
$A86    $116A   JP       $16A            ; Jump to 16A
$A88    $16E9   JP       $6E9            ; Jump to 6E9
$A8A    $706F   ADD      V0, #6F         ; Add 111 to V0
$A8C    $E3A8   UNKNOWN  $E3A8           ; Unknown Exxx instruction
$A8E    $E893   UNKNOWN  $E893           ; Unknown Exxx instruction
$A90    $9242   UNKNOWN  $9242           ; Unknown 9xxx instruction
$A92    $58AB   UNKNOWN  $58AB           ; Unknown 5xxx instruction
$A94    $AB63   LD       I, $B63         ; Load B63 into I
$A96    $6670   LD       V6, #70         ; Load 112 into V6
$A98    $3C2B   SE       VC, #2B         ; Skip if VC == 43
$A9A    $4715   SNE      V7, #15         ; Skip if V7 != 21
$A9C    $A3F1   LD       I, $3F1         ; Load 3F1 into I
$A9E    $5CCC   UNKNOWN  $5CCC           ; Unknown 5xxx instruction
$AA0    $4D81   SNE      VD, #81         ; Skip if VD != 129
$AA2    $FB26   UNKNOWN  FB26            ; Unknown Fxxx instruction
$AA4    $3164   SE       V1, #64         ; Skip if V1 == 100
$AA6    $AAAE   LD       I, $AAE         ; Load AAE into I
$AA8    $09F1   SYS      $9F1            ; System call to 9F1
$AAA    $1F8D   JP       $F8D            ; Jump to F8D
$AAC    $2C68   CALL     $C68            ; Call subroutine at C68
$AAE    $FA9C   UNKNOWN  FA9C            ; Unknown Fxxx instruction
$AB0    $7159   ADD      V1, #59         ; Add 89 to V1
$AB2    $BAAE   JP       V0, $AAE        ; Jump to V0 + AAE
$AB4    $B6AC   JP       V0, $6AC        ; Jump to V0 + 6AC
$AB6    $B7BF   JP       V0, $7BF        ; Jump to V0 + 7BF
$AB8    $2CBD   CALL     $CBD            ; Call subroutine at CBD
$ABA    $5BC7   UNKNOWN  $5BC7           ; Unknown 5xxx instruction
$ABC    $2591   CALL     $591            ; Call subroutine at 591
$ABE    $1A9A   JP       $A9A            ; Jump to A9A
$AC0    $D11E   DRW      V1, V1, #E      ; Draw 14-byte sprite at V1, V1
$AC2    $0927   SYS      $927            ; System call to 927
$AC4    $D1C5   DRW      V1, VC, #5      ; Draw 5-byte sprite at V1, VC
$AC6    $D986   DRW      V9, V8, #6      ; Draw 6-byte sprite at V9, V8
$AC8    $E32C   UNKNOWN  $E32C           ; Unknown Exxx instruction
$ACA    $DCBC   DRW      VC, VB, #C      ; Draw 12-byte sprite at VC, VB
$ACC    $DFEF   DRW      VF, VE, #F      ; Draw 15-byte sprite at VF, VE
$ACE    $AADF   LD       I, $ADF         ; Load ADF into I
$AD0    $90D0   SNE      V0, VD          ; Skip if V0 != VD
$AD2    $64B7   LD       V4, #B7         ; Load 183 into V4
$AD4    $AC0D   LD       I, $C0D         ; Load C0D into I
$AD6    $E283   UNKNOWN  $E283           ; Unknown Exxx instruction
$AD8    $E0DF   UNKNOWN  $E0DF           ; Unknown Exxx instruction
$ADA    $E4B7   UNKNOWN  $E4B7           ; Unknown Exxx instruction
$ADC    $93D1   UNKNOWN  $93D1           ; Unknown 9xxx instruction
$ADE    $3601   SE       V6, #01         ; Skip if V6 == 1
$AE0    $C8A2   RND      V8, #A2         ; V8 = random & A2
$AE2    $F1FF   UNKNOWN  F1FF            ; Unknown Fxxx instruction
$AE4    $2663   CALL     $663            ; Call subroutine at 663
$AE6    $605E   LD       V0, #5E         ; Load 94 into V0
$AE8    $F95B   UNKNOWN  F95B            ; Unknown Fxxx instruction
$AEA    $1E83   JP       $E83            ; Jump to E83
$AEC    $DF04   DRW      VF, V0, #4      ; Draw 4-byte sprite at VF, V0
$AEE    $15E7   JP       $5E7            ; Jump to 5E7
$AF0    $EA00   UNKNOWN  $EA00           ; Unknown Exxx instruction
$AF2    $3D6E   SE       VD, #6E         ; Skip if VD == 110
$AF4    $14E1   JP       $4E1            ; Jump to 4E1
$AF6    $9828   UNKNOWN  $9828           ; Unknown 9xxx instruction
$AF8    $2E35   CALL     $E35            ; Call subroutine at E35
$AFA    $4E77   SNE      VE, #77         ; Skip if VE != 119
$AFC    $17F3   JP       $7F3            ; Jump to 7F3
$AFE    $6507   LD       V5, #07         ; Load 7 into V5
$B00    $2F8B   CALL     $F8B            ; Call subroutine at F8B
$B02    $51AB   UNKNOWN  $51AB           ; Unknown 5xxx instruction
$B04    $E6E6   UNKNOWN  $E6E6           ; Unknown Exxx instruction
$B06    $328B   SE       V2, #8B         ; Skip if V2 == 139
$B08    $0CD7   SYS      $CD7            ; System call to CD7
$B0A    $AA62   LD       I, $A62         ; Load A62 into I
$B0C    $414E   SNE      V1, #4E         ; Skip if V1 != 78
$B0E    $BBD1   JP       V0, $BD1        ; Jump to V0 + BD1
$B10    $ABFB   LD       I, $BFB         ; Load BFB into I
$B12    $CB69   RND      VB, #69         ; VB = random & 69
$B14    $5CF0   SE       VC, VF          ; Skip if VC == VF
$B16    $00C7   SYS      $0C7            ; System call to 0C7
$B18    $E694   UNKNOWN  $E694           ; Unknown Exxx instruction
$B1A    $E1E7   UNKNOWN  $E1E7           ; Unknown Exxx instruction
$B1C    $9B18   UNKNOWN  $9B18           ; Unknown 9xxx instruction
$B1E    $7245   ADD      V2, #45         ; Add 69 to V2
$B20    $F662   UNKNOWN  F662            ; Unknown Fxxx instruction
$B22    $9AB7   UNKNOWN  $9AB7           ; Unknown 9xxx instruction
$B24    $2847   CALL     $847            ; Call subroutine at 847
$B26    $0C99   SYS      $C99            ; System call to C99
$B28    $9353   UNKNOWN  $9353           ; Unknown 9xxx instruction
$B2A    $3081   SE       V0, #81         ; Skip if V0 == 129
$B2C    $7C9C   ADD      VC, #9C         ; Add 156 to VC
$B2E    $C1E2   RND      V1, #E2         ; V1 = random & E2
$B30    $5B15   UNKNOWN  $5B15           ; Unknown 5xxx instruction
$B32    $0175   SYS      $175            ; System call to 175
$B34    $C595   RND      V5, #95         ; V5 = random & 95
$B36    $8DF9   UNKNOWN  8DF9            ; Unknown 8xxx instruction
$B38    $573D   UNKNOWN  $573D           ; Unknown 5xxx instruction
$B3A    $DD48   DRW      VD, V4, #8      ; Draw 8-byte sprite at VD, V4
$B3C    $E01B   UNKNOWN  $E01B           ; Unknown Exxx instruction
$B3E    $B812   JP       V0, $812        ; Jump to V0 + 812
$B40    $DEC6   DRW      VE, VC, #6      ; Draw 6-byte sprite at VE, VC
$B42    $FE1A   UNKNOWN  FE1A            ; Unknown Fxxx instruction
$B44    $3628   SE       V6, #28         ; Skip if V6 == 40
$B46    $0720   SYS      $720            ; System call to 720
$B48    $7E50   ADD      VE, #50         ; Add 80 to VE
$B4A    $F979   UNKNOWN  F979            ; Unknown Fxxx instruction
$B4C    $C078   RND      V0, #78         ; V0 = random & 78
$B4E    $AF73   LD       I, $F73         ; Load F73 into I
$B50    $3741   SE       V7, #41         ; Skip if V7 == 65
$B52    $CF6B   RND      VF, #6B         ; VF = random & 6B
$B54    $C552   RND      V5, #52         ; V5 = random & 52
$B56    $9357   UNKNOWN  $9357           ; Unknown 9xxx instruction
$B58    $13C3   JP       $3C3            ; Jump to 3C3
$B5A    $A386   LD       I, $386         ; Load 386 into I
$B5C    $B104   JP       V0, $104        ; Jump to V0 + 104
$B5E    $96DA   UNKNOWN  $96DA           ; Unknown 9xxx instruction
$B60    $0217   SYS      $217            ; System call to 217
$B62    $54BE   UNKNOWN  $54BE           ; Unknown 5xxx instruction
$B64    $9677   UNKNOWN  $9677           ; Unknown 9xxx instruction
$B66    $8DD6   SHR      VD              ; VD >>= 1, VF = LSB
$B68    $2617   CALL     $617            ; Call subroutine at 617
$B6A    $B2EE   JP       V0, $2EE        ; Jump to V0 + 2EE
$B6C    $D217   DRW      V2, V1, #7      ; Draw 7-byte sprite at V2, V1
$B6E    $F627   UNKNOWN  F627            ; Unknown Fxxx instruction
$B70    $712C   ADD      V1, #2C         ; Add 44 to V1
$B72    $22AB   CALL     $2AB            ; Call subroutine at 2AB
$B74    $39AB   SE       V9, #AB         ; Skip if V9 == 171
$B76    $62B0   LD       V2, #B0         ; Load 176 into V2
$B78    $CA82   RND      VA, #82         ; VA = random & 82
$B7A    $01FC   SYS      $1FC            ; System call to 1FC
$B7C    $69DA   LD       V9, #DA         ; Load 218 into V9
$B7E    $E6E9   UNKNOWN  $E6E9           ; Unknown Exxx instruction
$B80    $4221   SNE      V2, #21         ; Skip if V2 != 33
$B82    $A2B2   LD       I, $2B2         ; Load 2B2 into I
$B84    $B5B0   JP       V0, $5B0        ; Jump to V0 + 5B0
$B86    $F46F   UNKNOWN  F46F            ; Unknown Fxxx instruction
$B88    $6118   LD       V1, #18         ; Load 24 into V1
$B8A    $E1F1   UNKNOWN  $E1F1           ; Unknown Exxx instruction
$B8C    $6439   LD       V4, #39         ; Load 57 into V4
$B8E    $A02F   LD       I, $02F         ; Load 02F into I
$B90    $DE0F   DRW      VE, V0, #F      ; Draw 15-byte sprite at VE, V0
$B92    $E301   UNKNOWN  $E301           ; Unknown Exxx instruction
$B94    $8EDF   UNKNOWN  8EDF            ; Unknown 8xxx instruction
$B96    $7D1E   ADD      VD, #1E         ; Add 30 to VD
$B98    $C561   RND      V5, #61         ; V5 = random & 61
$B9A    $F8A6   UNKNOWN  F8A6            ; Unknown Fxxx instruction
$B9C    $FC3A   UNKNOWN  FC3A            ; Unknown Fxxx instruction
$B9E    $C3EE   RND      V3, #EE         ; V3 = random & EE
$BA0    $ED93   UNKNOWN  $ED93           ; Unknown Exxx instruction
$BA2    $CFF4   RND      VF, #F4         ; VF = random & F4
$BA4    $0B4B   SYS      $B4B            ; System call to B4B
$BA6    $5889   UNKNOWN  $5889           ; Unknown 5xxx instruction
$BA8    $2ED6   CALL     $ED6            ; Call subroutine at ED6
$BAA    $6F56   LD       VF, #56         ; Load 86 into VF
$BAC    $161B   JP       $61B            ; Jump to 61B
$BAE    $4A12   SNE      VA, #12         ; Skip if VA != 18
$BB0    $35D1   SE       V5, #D1         ; Skip if V5 == 209
$BB2    $2234   CALL     $234            ; Call subroutine at 234
$BB4    $5236   UNKNOWN  $5236           ; Unknown 5xxx instruction
$BB6    $6B43   LD       VB, #43         ; Load 67 into VB
$BB8    $26CD   CALL     $6CD            ; Call subroutine at 6CD
$BBA    $52EE   UNKNOWN  $52EE           ; Unknown 5xxx instruction
$BBC    $6AD1   LD       VA, #D1         ; Load 209 into VA
$BBE    $04C9   SYS      $4C9            ; System call to 4C9
$BC0    $9A82   UNKNOWN  $9A82           ; Unknown 9xxx instruction
$BC2    $54E3   UNKNOWN  $54E3           ; Unknown 5xxx instruction
$BC4    $0D6F   SYS      $D6F            ; System call to D6F
$BC6    $81CA   UNKNOWN  81CA            ; Unknown 8xxx instruction
$BC8    $2051   CALL     $051            ; Call subroutine at 051
$BCA    $C87B   RND      V8, #7B         ; V8 = random & 7B
$BCC    $A5A5   LD       I, $5A5         ; Load 5A5 into I
$BCE    $0C9A   SYS      $C9A            ; System call to C9A
$BD0    $1C4F   JP       $C4F            ; Jump to C4F
$BD2    $DE0B   DRW      VE, V0, #B      ; Draw 11-byte sprite at VE, V0
$BD4    $E370   UNKNOWN  $E370           ; Unknown Exxx instruction
$BD6    $3CF4   SE       VC, #F4         ; Skip if VC == 244
$BD8    $8A94   ADD      VA, V9          ; VA += V9, VF = carry
$BDA    $B059   JP       V0, $059        ; Jump to V0 + 059
$BDC    $5B3C   UNKNOWN  $5B3C           ; Unknown 5xxx instruction
$BDE    $7A89   ADD      VA, #89         ; Add 137 to VA
$BE0    $EEF8   UNKNOWN  $EEF8           ; Unknown Exxx instruction
$BE2    $F4A1   UNKNOWN  F4A1            ; Unknown Fxxx instruction
$BE4    $102F   JP       $02F            ; Jump to 02F
$BE6    $FCFD   UNKNOWN  FCFD            ; Unknown Fxxx instruction
$BE8    $5A06   UNKNOWN  $5A06           ; Unknown 5xxx instruction
$BEA    $B2C5   JP       V0, $2C5        ; Jump to V0 + 2C5
$BEC    $EAF7   UNKNOWN  $EAF7           ; Unknown Exxx instruction
$BEE    $A8CC   LD       I, $8CC         ; Load 8CC into I
$BF0    $FF4D   UNKNOWN  FF4D            ; Unknown Fxxx instruction
$BF2    $F9E2   UNKNOWN  F9E2            ; Unknown Fxxx instruction
$BF4    $F85F   UNKNOWN  F85F            ; Unknown Fxxx instruction
$BF6    $CB3B   RND      VB, #3B         ; VB = random & 3B
$BF8    $09F0   SYS      $9F0            ; System call to 9F0
$BFA    $D7C8   DRW      V7, VC, #8      ; Draw 8-byte sprite at V7, VC
$BFC    $3E9A   SE       VE, #9A         ; Skip if VE == 154
$BFE    $6216   LD       V2, #16         ; Load 22 into V2
$C00    $DDF1   DRW      VD, VF, #1      ; Draw 1-byte sprite at VD, VF
$C02    $F0AB   UNKNOWN  F0AB            ; Unknown Fxxx instruction
$C04    $8528   UNKNOWN  8528            ; Unknown 8xxx instruction
$C06    $BC8C   JP       V0, $C8C        ; Jump to V0 + C8C
$C08    $1172   JP       $172            ; Jump to 172
$C0A    $9CD3   UNKNOWN  $9CD3           ; Unknown 9xxx instruction
$C0C    $8B26   SHR      VB              ; VB >>= 1, VF = LSB
$C0E    $B48B   JP       V0, $48B        ; Jump to V0 + 48B
$C10    $4840   SNE      V8, #40         ; Skip if V8 != 64
$C12    $337D   SE       V3, #7D         ; Skip if V3 == 125
$C14    $5BC4   UNKNOWN  $5BC4           ; Unknown 5xxx instruction
$C16    $9A7A   UNKNOWN  $9A7A           ; Unknown 9xxx instruction
$C18    $32EC   SE       V2, #EC         ; Skip if V2 == 236
$C1A    $DA81   DRW      VA, V8, #1      ; Draw 1-byte sprite at VA, V8
$C1C    $599B   UNKNOWN  $599B           ; Unknown 5xxx instruction
$C1E    $73C6   ADD      V3, #C6         ; Add 198 to V3
$C20    $35F8   SE       V5, #F8         ; Skip if V5 == 248
$C22    $0633   SYS      $633            ; System call to 633
$C24    $E37F   UNKNOWN  $E37F           ; Unknown Exxx instruction
$C26    $0AC2   SYS      $AC2            ; System call to AC2
$C28    $EF4C   UNKNOWN  $EF4C           ; Unknown Exxx instruction
$C2A    $2762   CALL     $762            ; Call subroutine at 762
$C2C    $6201   LD       V2, #01         ; Load 1 into V2
$C2E    $5373   UNKNOWN  $5373           ; Unknown 5xxx instruction
$C30    $BE00   JP       V0, $E00        ; Jump to V0 + E00
$C32    $B5F7   JP       V0, $5F7        ; Jump to V0 + 5F7
$C34    $7E01   ADD      VE, #01         ; Add 1 to VE
$C36    $E44F   UNKNOWN  $E44F           ; Unknown Exxx instruction
$C38    $C22A   RND      V2, #2A         ; V2 = random & 2A
$C3A    $2180   CALL     $180            ; Call subroutine at 180
$C3C    $481D   SNE      V8, #1D         ; Skip if V8 != 29
$C3E    $7F17   ADD      VF, #17         ; Add 23 to VF
$C40    $E3BA   UNKNOWN  $E3BA           ; Unknown Exxx instruction
$C42    $B0D6   JP       V0, $0D6        ; Jump to V0 + 0D6
$C44    $169C   JP       $69C            ; Jump to 69C
$C46    $E0B9   UNKNOWN  $E0B9           ; Unknown Exxx instruction
$C48    $4F8C   SNE      VF, #8C         ; Skip if VF != 140
$C4A    $346C   SE       V4, #6C         ; Skip if V4 == 108
$C4C    $62BE   LD       V2, #BE         ; Load 190 into V2
$C4E    $FDAA   UNKNOWN  FDAA            ; Unknown Fxxx instruction
$C50    $F3D9   UNKNOWN  F3D9            ; Unknown Fxxx instruction
$C52    $9A2D   UNKNOWN  $9A2D           ; Unknown 9xxx instruction
$C54    $B403   JP       V0, $403        ; Jump to V0 + 403
$C56    $DD9F   DRW      VD, V9, #F      ; Draw 15-byte sprite at VD, V9
$C58    $36FB   SE       V6, #FB         ; Skip if V6 == 251
$C5A    $F862   UNKNOWN  F862            ; Unknown Fxxx instruction
$C5C    $189C   JP       $89C            ; Jump to 89C
$C5E    $8D05   SUB      VD, V0          ; VD -= V0, VF = !borrow
$C60    $ABC8   LD       I, $BC8         ; Load BC8 into I
$C62    $2DD1   CALL     $DD1            ; Call subroutine at DD1
$C64    $AD40   LD       I, $D40         ; Load D40 into I
$C66    $3446   SE       V4, #46         ; Skip if V4 == 70
$C68    $B204   JP       V0, $204        ; Jump to V0 + 204
$C6A    $059E   SYS      $59E            ; System call to 59E
$C6C    $5679   UNKNOWN  $5679           ; Unknown 5xxx instruction
$C6E    $8B26   SHR      VB              ; VB >>= 1, VF = LSB
$C70    $659F   LD       V5, #9F         ; Load 159 into V5
$C72    $0F2D   SYS      $F2D            ; System call to F2D
$C74    $F13D   UNKNOWN  F13D            ; Unknown Fxxx instruction
$C76    $EB6F   UNKNOWN  $EB6F           ; Unknown Exxx instruction
$C78    $E890   UNKNOWN  $E890           ; Unknown Exxx instruction
$C7A    $50FD   UNKNOWN  $50FD           ; Unknown 5xxx instruction
$C7C    $A2A9   LD       I, $2A9         ; Load 2A9 into I
$C7E    $2E4B   CALL     $E4B            ; Call subroutine at E4B
$C80    $73CA   ADD      V3, #CA         ; Add 202 to V3
$C82    $6A2A   LD       VA, #2A         ; Load 42 into VA
$C84    $1B70   JP       $B70            ; Jump to B70
$C86    $D70F   DRW      V7, V0, #F      ; Draw 15-byte sprite at V7, V0
$C88    $D3A6   DRW      V3, VA, #6      ; Draw 6-byte sprite at V3, VA
$C8A    $B50B   JP       V0, $50B        ; Jump to V0 + 50B
$C8C    $D749   DRW      V7, V4, #9      ; Draw 9-byte sprite at V7, V4
$C8E    $1D41   JP       $D41            ; Jump to D41
$C90    $12D3   JP       $2D3            ; Jump to 2D3
$C92    $E8E7   UNKNOWN  $E8E7           ; Unknown Exxx instruction
$C94    $77D8   ADD      V7, #D8         ; Add 216 to V7
$C96    $0180   SYS      $180            ; System call to 180
$C98    $284F   CALL     $84F            ; Call subroutine at 84F
$C9A    $FCD5   UNKNOWN  FCD5            ; Unknown Fxxx instruction
$C9C    $A1A2   LD       I, $1A2         ; Load 1A2 into I
$C9E    $AC24   LD       I, $C24         ; Load C24 into I
$CA0    $2478   CALL     $478            ; Call subroutine at 478
$CA2    $79CD   ADD      V9, #CD         ; Add 205 to V9
$CA4    $0F2C   SYS      $F2C            ; System call to F2C
$CA6    $8850   LD       V8, V5          ; V8 = V5
$CA8    $50C6   UNKNOWN  $50C6           ; Unknown 5xxx instruction
$CAA    $C3BB   RND      V3, #BB         ; V3 = random & BB
$CAC    $152F   JP       $52F            ; Jump to 52F
$CAE    $6074   LD       V0, #74         ; Load 116 into V0
$CB0    $4C8C   SNE      VC, #8C         ; Skip if VC != 140
$CB2    $BAFE   JP       V0, $AFE        ; Jump to V0 + AFE
$CB4    $BF6C   JP       V0, $F6C        ; Jump to V0 + F6C
$CB6    $F897   UNKNOWN  F897            ; Unknown Fxxx instruction
$CB8    $3F36   SE       VF, #36         ; Skip if VF == 54
$CBA    $A352   LD       I, $352         ; Load 352 into I
$CBC    $6599   LD       V5, #99         ; Load 153 into V5
$CBE    $E88E   UNKNOWN  $E88E           ; Unknown Exxx instruction
$CC0    $6EBC   LD       VE, #BC         ; Load 188 into VE
$CC2    $C191   RND      V1, #91         ; V1 = random & 91
$CC4    $CA12   RND      VA, #12         ; VA = random & 12
$CC6    $8040   LD       V0, V4          ; V0 = V4
$CC8    $D425   DRW      V4, V2, #5      ; Draw 5-byte sprite at V4, V2
$CCA    $83CD   UNKNOWN  83CD            ; Unknown 8xxx instruction
$CCC    $0CD5   SYS      $CD5            ; System call to CD5
$CCE    $FC2F   UNKNOWN  FC2F            ; Unknown Fxxx instruction
$CD0    $3212   SE       V2, #12         ; Skip if V2 == 18
$CD2    $238E   CALL     $38E            ; Call subroutine at 38E
$CD4    $36C6   SE       V6, #C6         ; Skip if V6 == 198
$CD6    $8CB4   ADD      VC, VB          ; VC += VB, VF = carry
$CD8    $D737   DRW      V7, V3, #7      ; Draw 7-byte sprite at V7, V3
$CDA    $71C1   ADD      V1, #C1         ; Add 193 to V1
$CDC    $1B0C   JP       $B0C            ; Jump to B0C
$CDE    $F4AE   UNKNOWN  F4AE            ; Unknown Fxxx instruction
$CE0    $3E1B   SE       VE, #1B         ; Skip if VE == 27
$CE2    $239B   CALL     $39B            ; Call subroutine at 39B
$CE4    $401D   SNE      V0, #1D         ; Skip if V0 != 29
$CE6    $61B7   LD       V1, #B7         ; Load 183 into V1
$CE8    $F486   UNKNOWN  F486            ; Unknown Fxxx instruction
$CEA    $172F   JP       $72F            ; Jump to 72F
$CEC    $F86A   UNKNOWN  F86A            ; Unknown Fxxx instruction
$CEE    $C719   RND      V7, #19         ; V7 = random & 19
$CF0    $4859   SNE      V8, #59         ; Skip if V8 != 89
$CF2    $1A2F   JP       $A2F            ; Jump to A2F
$CF4    $C7DC   RND      V7, #DC         ; V7 = random & DC
$CF6    $99BA   UNKNOWN  $99BA           ; Unknown 9xxx instruction
$CF8    $C230   RND      V2, #30         ; V2 = random & 30
$CFA    $8DF4   ADD      VD, VF          ; VD += VF, VF = carry
$CFC    $74F2   ADD      V4, #F2         ; Add 242 to V4
$CFE    $FF32   UNKNOWN  FF32            ; Unknown Fxxx instruction
$D00    $551A   UNKNOWN  $551A           ; Unknown 5xxx instruction
$D02    $8957   SUBN     V9, V5          ; V9 = V5 - V9, VF = !borrow
$D04    $7EED   ADD      VE, #ED         ; Add 237 to VE
$D06    $AFA9   LD       I, $FA9         ; Load FA9 into I
$D08    $5AA4   UNKNOWN  $5AA4           ; Unknown 5xxx instruction
$D0A    $891E   SHL      V9              ; V9 <<= 1, VF = MSB
$D0C    $5CEB   UNKNOWN  $5CEB           ; Unknown 5xxx instruction
$D0E    $2E37   CALL     $E37            ; Call subroutine at E37
$D10    $527C   UNKNOWN  $527C           ; Unknown 5xxx instruction
$D12    $2C84   CALL     $C84            ; Call subroutine at C84
$D14    $3E61   SE       VE, #61         ; Skip if VE == 97
$D16    $264A   CALL     $64A            ; Call subroutine at 64A
$D18    $57E8   UNKNOWN  $57E8           ; Unknown 5xxx instruction
$D1A    $FA3F   UNKNOWN  FA3F            ; Unknown Fxxx instruction
$D1C    $9397   UNKNOWN  $9397           ; Unknown 9xxx instruction
$D1E    $4005   SNE      V0, #05         ; Skip if V0 != 5
$D20    $D8E1   DRW      V8, VE, #1      ; Draw 1-byte sprite at V8, VE
$D22    $2F7B   CALL     $F7B            ; Call subroutine at F7B
$D24    $26CD   CALL     $6CD            ; Call subroutine at 6CD
$D26    $01A1   SYS      $1A1            ; System call to 1A1
$D28    $5D1E   UNKNOWN  $5D1E           ; Unknown 5xxx instruction
$D2A    $49D5   SNE      V9, #D5         ; Skip if V9 != 213
$D2C    $53D8   UNKNOWN  $53D8           ; Unknown 5xxx instruction
$D2E    $444A   SNE      V4, #4A         ; Skip if V4 != 74
$D30    $3810   SE       V8, #10         ; Skip if V8 == 16
$D32    $9295   UNKNOWN  $9295           ; Unknown 9xxx instruction
$D34    $9FB4   UNKNOWN  $9FB4           ; Unknown 9xxx instruction
$D36    $7673   ADD      V6, #73         ; Add 115 to V6
$D38    $2DF7   CALL     $DF7            ; Call subroutine at DF7
$D3A    $0CC4   SYS      $CC4            ; System call to CC4
$D3C    $4A03   SNE      VA, #03         ; Skip if VA != 3
$D3E    $8461   OR       V4, V6          ; V4 |= V6
$D40    $9073   UNKNOWN  $9073           ; Unknown 9xxx instruction
$D42    $EB3E   UNKNOWN  $EB3E           ; Unknown Exxx instruction
$D44    $52EA   UNKNOWN  $52EA           ; Unknown 5xxx instruction
$D46    $8C2E   SHL      VC              ; VC <<= 1, VF = MSB
$D48    $6F42   LD       VF, #42         ; Load 66 into VF
$D4A    $B81E   JP       V0, $81E        ; Jump to V0 + 81E
$D4C    $CD50   RND      VD, #50         ; VD = random & 50
$D4E    $FCEA   UNKNOWN  FCEA            ; Unknown Fxxx instruction
$D50    $AA65   LD       I, $A65         ; Load A65 into I
$D52    $854B   UNKNOWN  854B            ; Unknown 8xxx instruction
$D54    $0B54   SYS      $B54            ; System call to B54
$D56    $8206   SHR      V2              ; V2 >>= 1, VF = LSB
$D58    $088B   SYS      $88B            ; System call to 88B
$D5A    $B752   JP       V0, $752        ; Jump to V0 + 752
$D5C    $3A42   SE       VA, #42         ; Skip if VA == 66
$D5E    $226F   CALL     $26F            ; Call subroutine at 26F
$D60    $00AC   SYS      $0AC            ; System call to 0AC
$D62    $358F   SE       V5, #8F         ; Skip if V5 == 143
$D64    $0650   SYS      $650            ; System call to 650
$D66    $F5FC   UNKNOWN  F5FC            ; Unknown Fxxx instruction
$D68    $6CA2   LD       VC, #A2         ; Load 162 into VC
$D6A    $FADD   UNKNOWN  FADD            ; Unknown Fxxx instruction
$D6C    $1908   JP       $908            ; Jump to 908
$D6E    $8821   OR       V8, V2          ; V8 |= V2
$D70    $C6DD   RND      V6, #DD         ; V6 = random & DD
$D72    $236C   CALL     $36C            ; Call subroutine at 36C
$D74    $1F13   JP       $F13            ; Jump to F13
$D76    $DD75   DRW      VD, V7, #5      ; Draw 5-byte sprite at VD, V7
$D78    $8620   LD       V6, V2          ; V6 = V2
$D7A    $D737   DRW      V7, V3, #7      ; Draw 7-byte sprite at V7, V3
$D7C    $0F04   SYS      $F04            ; System call to F04
$D7E    $F4BD   UNKNOWN  F4BD            ; Unknown Fxxx instruction
$D80    $14FE   JP       $4FE            ; Jump to 4FE
$D82    $DF83   DRW      VF, V8, #3      ; Draw 3-byte sprite at VF, V8
$D84    $E65C   UNKNOWN  $E65C           ; Unknown Exxx instruction
$D86    $DD5A   DRW      VD, V5, #A      ; Draw 10-byte sprite at VD, V5
$D88    $0E6F   SYS      $E6F            ; System call to E6F
$D8A    $4057   SNE      V0, #57         ; Skip if V0 != 87
$D8C    $2FC0   CALL     $FC0            ; Call subroutine at FC0
$D8E    $A1BA   LD       I, $1BA         ; Load 1BA into I
$D90    $D73C   DRW      V7, V3, #C      ; Draw 12-byte sprite at V7, V3
$D92    $450D   SNE      V5, #0D         ; Skip if V5 != 13
$D94    $ABF4   LD       I, $BF4         ; Load BF4 into I
$D96    $98BB   UNKNOWN  $98BB           ; Unknown 9xxx instruction
$D98    $E767   UNKNOWN  $E767           ; Unknown Exxx instruction
$D9A    $EAF2   UNKNOWN  $EAF2           ; Unknown Exxx instruction
$D9C    $38D2   SE       V8, #D2         ; Skip if V8 == 210
$D9E    $2DEB   CALL     $DEB            ; Call subroutine at DEB
$DA0    $DA72   DRW      VA, V7, #2      ; Draw 2-byte sprite at VA, V7
$DA2    $E614   UNKNOWN  $E614           ; Unknown Exxx instruction
$DA4    $6A28   LD       VA, #28         ; Load 40 into VA
$DA6    $7FB9   ADD      VF, #B9         ; Add 185 to VF
$DA8    $E2C8   UNKNOWN  $E2C8           ; Unknown Exxx instruction
$DAA    $E136   UNKNOWN  $E136           ; Unknown Exxx instruction
$DAC    $C521   RND      V5, #21         ; V5 = random & 21
$DAE    $B88A   JP       V0, $88A        ; Jump to V0 + 88A
$DB0    $1E2B   JP       $E2B            ; Jump to E2B
$DB2    $900A   UNKNOWN  $900A           ; Unknown 9xxx instruction
$DB4    $B144   JP       V0, $144        ; Jump to V0 + 144
$DB6    $68C6   LD       V8, #C6         ; Load 198 into V8
$DB8    $1261   JP       $261            ; Jump to 261
$DBA    $AF95   LD       I, $F95         ; Load F95 into I
$DBC    $1DBA   JP       $DBA            ; Jump to DBA
$DBE    $083D   SYS      $83D            ; System call to 83D
$DC0    $B461   JP       V0, $461        ; Jump to V0 + 461
$DC2    $3B3F   SE       VB, #3F         ; Skip if VB == 63
$DC4    $C374   RND      V3, #74         ; V3 = random & 74
$DC6    $6F88   LD       VF, #88         ; Load 136 into VF
$DC8    $7EFD   ADD      VE, #FD         ; Add 253 to VE
$DCA    $3036   SE       V0, #36         ; Skip if V0 == 54
$DCC    $3934   SE       V9, #34         ; Skip if V9 == 52
$DCE    $5A92   UNKNOWN  $5A92           ; Unknown 5xxx instruction
$DD0    $C0C5   RND      V0, #C5         ; V0 = random & C5
$DD2    $CBBC   RND      VB, #BC         ; VB = random & BC
$DD4    $F6F8   UNKNOWN  F6F8            ; Unknown Fxxx instruction
$DD6    $DA31   DRW      VA, V3, #1      ; Draw 1-byte sprite at VA, V3
$DD8    $BE25   JP       V0, $E25        ; Jump to V0 + E25
$DDA    $1A9A   JP       $A9A            ; Jump to A9A
$DDC    $7A92   ADD      VA, #92         ; Add 146 to VA
$DDE    $F33D   UNKNOWN  F33D            ; Unknown Fxxx instruction
$DE0    $5B27   UNKNOWN  $5B27           ; Unknown 5xxx instruction
$DE2    $1D68   JP       $D68            ; Jump to D68
$DE4    $2AF2   CALL     $AF2            ; Call subroutine at AF2
$DE6    $B851   JP       V0, $851        ; Jump to V0 + 851
$DE8    $F85B   UNKNOWN  F85B            ; Unknown Fxxx instruction
$DEA    $FD80   UNKNOWN  FD80            ; Unknown Fxxx instruction
$DEC    $0676   SYS      $676            ; System call to 676
$DEE    $FE14   UNKNOWN  FE14            ; Unknown Fxxx instruction
$DF0    $8A34   ADD      VA, V3          ; VA += V3, VF = carry
$DF2    $75CF   ADD      V5, #CF         ; Add 207 to V5
$DF4    $F5AA   UNKNOWN  F5AA            ; Unknown Fxxx instruction
$DF6    $D679   DRW      V6, V7, #9      ; Draw 9-byte sprite at V6, V7
$DF8    $D527   DRW      V5, V2, #7      ; Draw 7-byte sprite at V5, V2
$DFA    $DF74   DRW      VF, V7, #4      ; Draw 4-byte sprite at VF, V7
$DFC    $2875   CALL     $875            ; Call subroutine at 875
$DFE    $1D45   JP       $D45            ; Jump to D45
$E00    $14CA   JP       $4CA            ; Jump to 4CA
$E02    $0B22   SYS      $B22            ; System call to B22
$E04    $E5DB   UNKNOWN  $E5DB           ; Unknown Exxx instruction
$E06    $83CC   UNKNOWN  83CC            ; Unknown 8xxx instruction
$E08    $E23C   UNKNOWN  $E23C           ; Unknown Exxx instruction
$E0A    $3917   SE       V9, #17         ; Skip if V9 == 23
$E0C    $B75B   JP       V0, $75B        ; Jump to V0 + 75B
$E0E    $1CE0   JP       $CE0            ; Jump to CE0
$E10    $DF1B   DRW      VF, V1, #B      ; Draw 11-byte sprite at VF, V1
$E12    $24A8   CALL     $4A8            ; Call subroutine at 4A8
$E14    $368C   SE       V6, #8C         ; Skip if V6 == 140
$E16    $98BE   UNKNOWN  $98BE           ; Unknown 9xxx instruction
$E18    $0859   SYS      $859            ; System call to 859
$E1A    $FCC3   UNKNOWN  FCC3            ; Unknown Fxxx instruction
$E1C    $AABA   LD       I, $ABA         ; Load ABA into I
$E1E    $2E76   CALL     $E76            ; Call subroutine at E76
$E20    $4C28   SNE      VC, #28         ; Skip if VC != 40
$E22    $25B3   CALL     $5B3            ; Call subroutine at 5B3
$E24    $62C8   LD       V2, #C8         ; Load 200 into V2
$E26    $C6A7   RND      V6, #A7         ; V6 = random & A7
$E28    $DAA1   DRW      VA, VA, #1      ; Draw 1-byte sprite at VA, VA
$E2A    $FDC7   UNKNOWN  FDC7            ; Unknown Fxxx instruction
$E2C    $136B   JP       $36B            ; Jump to 36B
$E2E    $C1C5   RND      V1, #C5         ; V1 = random & C5
$E30    $EAFB   UNKNOWN  $EAFB           ; Unknown Exxx instruction
$E32    $D358   DRW      V3, V5, #8      ; Draw 8-byte sprite at V3, V5
$E34    $E06B   UNKNOWN  $E06B           ; Unknown Exxx instruction
$E36    $BCC0   JP       V0, $CC0        ; Jump to V0 + CC0
$E38    $DE7C   DRW      VE, V7, #C      ; Draw 12-byte sprite at VE, V7
$E3A    $0449   SYS      $449            ; System call to 449
$E3C    $A544   LD       I, $544         ; Load 544 into I
$E3E    $7F95   ADD      VF, #95         ; Add 149 to VF
$E40    $3720   SE       V7, #20         ; Skip if V7 == 32
$E42    $2331   CALL     $331            ; Call subroutine at 331
$E44    $9D33   UNKNOWN  $9D33           ; Unknown 9xxx instruction
$E46    $CC22   RND      VC, #22         ; VC = random & 22
$E48    $4A28   SNE      VA, #28         ; Skip if VA != 40
$E4A    $42E1   SNE      V2, #E1         ; Skip if V2 != 225
$E4C    $9EF1   UNKNOWN  $9EF1           ; Unknown 9xxx instruction
$E4E    $AED6   LD       I, $ED6         ; Load ED6 into I
$E50    $34E2   SE       V4, #E2         ; Skip if V4 == 226
$E52    $2769   CALL     $769            ; Call subroutine at 769
$E54    $0100   SYS      $100            ; System call to 100
$E56    $5249   UNKNOWN  $5249           ; Unknown 5xxx instruction
$E58    $07AD   SYS      $7AD            ; System call to 7AD
$E5A    $3987   SE       V9, #87         ; Skip if V9 == 135
$E5C    $C819   RND      V8, #19         ; V8 = random & 19
$E5E    $131B   JP       $31B            ; Jump to 31B
$E60    $CBBB   RND      VB, #BB         ; VB = random & BB
$E62    $1765   JP       $765            ; Jump to 765
$E64    $EE8F   UNKNOWN  $EE8F           ; Unknown Exxx instruction
$E66    $54EF   UNKNOWN  $54EF           ; Unknown 5xxx instruction
$E68    $E512   UNKNOWN  $E512           ; Unknown Exxx instruction
$E6A    $C42E   RND      V4, #2E         ; V4 = random & 2E
$E6C    $1863   JP       $863            ; Jump to 863
$E6E    $2455   CALL     $455            ; Call subroutine at 455
$E70    $A067   LD       I, $067         ; Load 067 into I
$E72    $6410   LD       V4, #10         ; Load 16 into V4
$E74    $CF36   RND      VF, #36         ; VF = random & 36
$E76    $991D   UNKNOWN  $991D           ; Unknown 9xxx instruction
$E78    $ADF2   LD       I, $DF2         ; Load DF2 into I
$E7A    $F5D9   UNKNOWN  F5D9            ; Unknown Fxxx instruction
$E7C    $1ACE   JP       $ACE            ; Jump to ACE
$E7E    $5143   UNKNOWN  $5143           ; Unknown 5xxx instruction
$E80    $3DCD   SE       VD, #CD         ; Skip if VD == 205
$E82    $57BB   UNKNOWN  $57BB           ; Unknown 5xxx instruction
$E84    $CDB4   RND      VD, #B4         ; VD = random & B4
$E86    $B7FD   JP       V0, $7FD        ; Jump to V0 + 7FD
$E88    $43A1   SNE      V3, #A1         ; Skip if V3 != 161
$E8A    $1F83   JP       $F83            ; Jump to F83
$E8C    $BFB2   JP       V0, $FB2        ; Jump to V0 + FB2
$E8E    $1D68   JP       $D68            ; Jump to D68
$E90    $259E   CALL     $59E            ; Call subroutine at 59E
$E92    $FF16   UNKNOWN  FF16            ; Unknown Fxxx instruction
$E94    $4F7C   SNE      VF, #7C         ; Skip if VF != 124
$E96    $7413   ADD      V4, #13         ; Add 19 to V4
$E98    $36F6   SE       V6, #F6         ; Skip if V6 == 246
$E9A    $7EEF   ADD      VE, #EF         ; Add 239 to VE
$E9C    $2908   CALL     $908            ; Call subroutine at 908
$E9E    $A41E   LD       I, $41E         ; Load 41E into I
$EA0    $36F9   SE       V6, #F9         ; Skip if V6 == 249
$EA2    $65D8   LD       V5, #D8         ; Load 216 into V5
$EA4    $97E2   UNKNOWN  $97E2           ; Unknown 9xxx instruction
$EA6    $6965   LD       V9, #65         ; Load 101 into V9
$EA8    $1833   JP       $833            ; Jump to 833
$EAA    $9FE4   UNKNOWN  $9FE4           ; Unknown 9xxx instruction
$EAC    $6474   LD       V4, #74         ; Load 116 into V4
$EAE    $D95A   DRW      V9, V5, #A      ; Draw 10-byte sprite at V9, V5
$EB0    $6364   LD       V3, #64         ; Load 100 into V3
$EB2    $5DE2   UNKNOWN  $5DE2           ; Unknown 5xxx instruction
$EB4    $0B8B   SYS      $B8B            ; System call to B8B
$EB6    $3F9D   SE       VF, #9D         ; Skip if VF == 157
$EB8    $CAD7   RND      VA, #D7         ; VA = random & D7
$EBA    $1A75   JP       $A75            ; Jump to A75
$EBC    $6214   LD       V2, #14         ; Load 20 into V2
$EBE    $E7B3   UNKNOWN  $E7B3           ; Unknown Exxx instruction
$EC0    $AF91   LD       I, $F91         ; Load F91 into I
$EC2    $0AFD   SYS      $AFD            ; System call to AFD
$EC4    $219C   CALL     $19C            ; Call subroutine at 19C
$EC6    $2424   CALL     $424            ; Call subroutine at 424
$EC8    $4CF2   SNE      VC, #F2         ; Skip if VC != 242
$ECA    $1491   JP       $491            ; Jump to 491
$ECC    $3DA7   SE       VD, #A7         ; Skip if VD == 167
$ECE    $02B1   SYS      $2B1            ; System call to 2B1
$ED0    $5CF9   UNKNOWN  $5CF9           ; Unknown 5xxx instruction
$ED2    $4CD0   SNE      VC, #D0         ; Skip if VC != 208
$ED4    $28C4   CALL     $8C4            ; Call subroutine at 8C4
$ED6    $E7C0   UNKNOWN  $E7C0           ; Unknown Exxx instruction
$ED8    $3D93   SE       VD, #93         ; Skip if VD == 147
$EDA    $8121   OR       V1, V2          ; V1 |= V2
$EDC    $9046   UNKNOWN  $9046           ; Unknown 9xxx instruction
$EDE    $C3D3   RND      V3, #D3         ; V3 = random & D3
$EE0    $17D7   JP       $7D7            ; Jump to 7D7
$EE2    $09F0   SYS      $9F0            ; System call to 9F0
$EE4    $7EA7   ADD      VE, #A7         ; Add 167 to VE
$EE6    $22F9   CALL     $2F9            ; Call subroutine at 2F9
$EE8    $5C6A   UNKNOWN  $5C6A           ; Unknown 5xxx instruction
$EEA    $08E8   SYS      $8E8            ; System call to 8E8
$EEC    $59C2   UNKNOWN  $59C2           ; Unknown 5xxx instruction
$EEE    $BE7B   JP       V0, $E7B        ; Jump to V0 + E7B
$EF0    $B2DC   JP       V0, $2DC        ; Jump to V0 + 2DC
$EF2    $5D29   UNKNOWN  $5D29           ; Unknown 5xxx instruction
$EF4    $9A49   UNKNOWN  $9A49           ; Unknown 9xxx instruction
$EF6    $CF5D   RND      VF, #5D         ; VF = random & 5D
$EF8    $EE02   UNKNOWN  $EE02           ; Unknown Exxx instruction
$EFA    $947E   UNKNOWN  $947E           ; Unknown 9xxx instruction
$EFC    $E4D8   UNKNOWN  $E4D8           ; Unknown Exxx instruction
$EFE    $D4F3   DRW      V4, VF, #3      ; Draw 3-byte sprite at V4, VF
$F00    $D9AC   DRW      V9, VA, #C      ; Draw 12-byte sprite at V9, VA
$F02    $092B   SYS      $92B            ; System call to 92B
$F04    $A9E3   LD       I, $9E3         ; Load 9E3 into I
$F06    $F41A   UNKNOWN  F41A            ; Unknown Fxxx instruction
$F08    $2820   CALL     $820            ; Call subroutine at 820
$F0A    $E987   UNKNOWN  $E987           ; Unknown Exxx instruction
$F0C    $18F7   JP       $8F7            ; Jump to 8F7
$F0E    $225C   CALL     $25C            ; Call subroutine at 25C
$F10    $D83F   DRW      V8, V3, #F      ; Draw 15-byte sprite at V8, V3
$F12    $AFDE   LD       I, $FDE         ; Load FDE into I
$F14    $9D22   UNKNOWN  $9D22           ; Unknown 9xxx instruction
$F16    $B689   JP       V0, $689        ; Jump to V0 + 689
$F18    $B779   JP       V0, $779        ; Jump to V0 + 779
$F1A    $96E6   UNKNOWN  $96E6           ; Unknown 9xxx instruction
$F1C    $B00F   JP       V0, $00F        ; Jump to V0 + 00F
$F1E    $9402   UNKNOWN  $9402           ; Unknown 9xxx instruction
$F20    $B9B5   JP       V0, $9B5        ; Jump to V0 + 9B5
$F22    $A5B1   LD       I, $5B1         ; Load 5B1 into I
$F24    $9575   UNKNOWN  $9575           ; Unknown 9xxx instruction
$F26    $E6CF   UNKNOWN  $E6CF           ; Unknown Exxx instruction
$F28    $5DF2   UNKNOWN  $5DF2           ; Unknown 5xxx instruction
$F2A    $68FD   LD       V8, #FD         ; Load 253 into V8
$F2C    $441B   SNE      V4, #1B         ; Skip if V4 != 27
$F2E    $0145   SYS      $145            ; System call to 145
$F30    $0514   SYS      $514            ; System call to 514
$F32    $F4DE   UNKNOWN  F4DE            ; Unknown Fxxx instruction
$F34    $2924   CALL     $924            ; Call subroutine at 924
$F36    $3723   SE       V7, #23         ; Skip if V7 == 35
$F38    $D51E   DRW      V5, V1, #E      ; Draw 14-byte sprite at V5, V1
$F3A    $90E2   UNKNOWN  $90E2           ; Unknown 9xxx instruction
$F3C    $10E8   JP       $0E8            ; Jump to 0E8
$F3E    $BAB1   JP       V0, $AB1        ; Jump to V0 + AB1
$F40    $0B9C   SYS      $B9C            ; System call to B9C
$F42    $D461   DRW      V4, V6, #1      ; Draw 1-byte sprite at V4, V6
$F44    $1C79   JP       $C79            ; Jump to C79
$F46    $6E03   LD       VE, #03         ; Load 3 into VE
$F48    $A88D   LD       I, $88D         ; Load 88D into I
$F4A    $6EAD   LD       VE, #AD         ; Load 173 into VE
$F4C    $AD5B   LD       I, $D5B         ; Load D5B into I
$F4E    $853F   UNKNOWN  853F            ; Unknown 8xxx instruction
$F50    $F265   LD       V2, [I]         ; Load V0-V2 from I
$F52    $43FF   SNE      V3, #FF         ; Skip if V3 != 255
$F54    $5BBC   UNKNOWN  $5BBC           ; Unknown 5xxx instruction
$F56    $A7FB   LD       I, $7FB         ; Load 7FB into I
$F58    $16E8   JP       $6E8            ; Jump to 6E8
$F5A    $BE04   JP       V0, $E04        ; Jump to V0 + E04
$F5C    $E801   UNKNOWN  $E801           ; Unknown Exxx instruction
$F5E    $6EC5   LD       VE, #C5         ; Load 197 into VE
$F60    $6069   LD       V0, #69         ; Load 105 into V0
$F62    $741D   ADD      V4, #1D         ; Add 29 to V4
$F64    $3C3D   SE       VC, #3D         ; Skip if VC == 61
$F66    $04E1   SYS      $4E1            ; System call to 4E1
$F68    $E000   UNKNOWN  $E000           ; Unknown Exxx instruction
$F6A    $7E25   ADD      VE, #25         ; Add 37 to VE
$F6C    $828D   UNKNOWN  828D            ; Unknown 8xxx instruction
$F6E    $B85F   JP       V0, $85F        ; Jump to V0 + 85F
$F70    $9444   UNKNOWN  $9444           ; Unknown 9xxx instruction
$F72    $9C2D   UNKNOWN  $9C2D           ; Unknown 9xxx instruction
$F74    $952C   UNKNOWN  $952C           ; Unknown 9xxx instruction
$F76    $EEE9   UNKNOWN  $EEE9           ; Unknown Exxx instruction
$F78    $A2C2   LD       I, $2C2         ; Load 2C2 into I
$F7A    $3B34   SE       VB, #34         ; Skip if VB == 52
$F7C    $A84A   LD       I, $84A         ; Load 84A into I
$F7E    $2B0D   CALL     $B0D            ; Call subroutine at B0D
$F80    $4700   SNE      V7, #00         ; Skip if V7 != 0
$F82    $7A38   ADD      VA, #38         ; Add 56 to VA
$F84    $7223   ADD      V2, #23         ; Add 35 to V2
$F86    $042D   SYS      $42D            ; System call to 42D
$F88    $1904   JP       $904            ; Jump to 904
$F8A    $308E   SE       V0, #8E         ; Skip if V0 == 142
$F8C    $549A   UNKNOWN  $549A           ; Unknown 5xxx instruction
$F8E    $F05D   UNKNOWN  F05D            ; Unknown Fxxx instruction
$F90    $AD74   LD       I, $D74         ; Load D74 into I
$F92    $8F86   SHR      VF              ; VF >>= 1, VF = LSB
$F94    $805B   UNKNOWN  805B            ; Unknown 8xxx instruction
$F96    $7DDF   ADD      VD, #DF         ; Add 223 to VD
$F98    $3872   SE       V8, #72         ; Skip if V8 == 114
$F9A    $62B6   LD       V2, #B6         ; Load 182 into V2
$F9C    $BEC3   JP       V0, $EC3        ; Jump to V0 + EC3
$F9E    $4FEB   SNE      VF, #EB         ; Skip if VF != 235
$FA0    $78B1   ADD      V8, #B1         ; Add 177 to V8
$FA2    $6989   LD       V9, #89         ; Load 137 into V9
$FA4    $4D00   SNE      VD, #00         ; Skip if VD != 0
$FA6    $0E8E   SYS      $E8E            ; System call to E8E
$FA8    $0B3C   SYS      $B3C            ; System call to B3C
$FAA    $AAFE   LD       I, $AFE         ; Load AFE into I
$FAC    $3DC8   SE       VD, #C8         ; Skip if VD == 200
$FAE    $9044   UNKNOWN  $9044           ; Unknown 9xxx instruction
$FB0    $F7B5   UNKNOWN  F7B5            ; Unknown Fxxx instruction
$FB2    $76FF   ADD      V6, #FF         ; Add 255 to V6
$FB4    $AFA1   LD       I, $FA1         ; Load FA1 into I
$FB6    $F59C   UNKNOWN  F59C            ; Unknown Fxxx instruction
$FB8    $1597   JP       $597            ; Jump to 597
$FBA    $C583   RND      V5, #83         ; V5 = random & 83
$FBC    $4BEA   SNE      VB, #EA         ; Skip if VB != 234
$FBE    $77F5   ADD      V7, #F5         ; Add 245 to V7
$FC0    $5E23   UNKNOWN  $5E23           ; Unknown 5xxx instruction
$FC2    $016E   SYS      $16E            ; System call to 16E
$FC4    $0522   SYS      $522            ; System call to 522
$FC6    $D427   DRW      V4, V2, #7      ; Draw 7-byte sprite at V4, V2
$FC8    $5097   UNKNOWN  $5097           ; Unknown 5xxx instruction
$FCA    $5E00   SE       VE, V0          ; Skip if VE == V0
$FCC    $DE89   DRW      VE, V8, #9      ; Draw 9-byte sprite at VE, V8
$FCE    $6BD2   LD       VB, #D2         ; Load 210 into VB
$FD0    $D263   DRW      V2, V6, #3      ; Draw 3-byte sprite at V2, V6
$FD2    $1AE3   JP       $AE3            ; Jump to AE3
$FD4    $CEAC   RND      VE, #AC         ; VE = random & AC
$FD6    $BCBC   JP       V0, $CBC        ; Jump to V0 + CBC
$FD8    $54B6   UNKNOWN  $54B6           ; Unknown 5xxx instruction
$FDA    $E81D   UNKNOWN  $E81D           ; Unknown Exxx instruction
$FDC    $805E   SHL      V0              ; V0 <<= 1, VF = MSB
$FDE    $4BD0   SNE      VB, #D0         ; Skip if VB != 208
$FE0    $D9F3   DRW      V9, VF, #3      ; Draw 3-byte sprite at V9, VF
$FE2    $591E   UNKNOWN  $591E           ; Unknown 5xxx instruction
$FE4    $241E   CALL     $41E            ; Call subroutine at 41E
$FE6    $DAAE   DRW      VA, VA, #E      ; Draw 14-byte sprite at VA, VA
$FE8    $7666   ADD      V6, #66         ; Add 102 to V6
$FEA    $5BD6   UNKNOWN  $5BD6           ; Unknown 5xxx instruction
$FEC    $D4C0   DRW      V4, VC, #0      ; Draw 0-byte sprite at V4, VC
$FEE    $A6AD   LD       I, $6AD         ; Load 6AD into I
$FF0    $1B32   JP       $B32            ; Jump to B32
$FF2    $4248   SNE      V2, #48         ; Skip if V2 != 72
$FF4    $B811   JP       V0, $811        ; Jump to V0 + 811
$FF6    $86FE   SHL      V6              ; V6 <<= 1, VF = MSB
$FF8    $E5F0   UNKNOWN  $E5F0           ; Unknown Exxx instruction
$FFA    $FBB9   UNKNOWN  FBB9            ; Unknown Fxxx instruction
$FFC    $BD24   JP       V0, $D24        ; Jump to V0 + D24
$FFE    $F5B0   UNKNOWN  F5B0            ; Unknown Fxxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 469 (26.2%)
  LD      : 227 (12.7%)
  JP      : 225 (12.6%)
  SYS     : 128 ( 7.2%)
  SE      : 127 ( 7.1%)
  SNE     : 113 ( 6.3%)
  RND     : 113 ( 6.3%)
  DRW     : 112 ( 6.3%)
  CALL    : 112 ( 6.3%)
  ADD     : 106 ( 5.9%)
  SHR     :  14 ( 0.8%)
  SHL     :  12 ( 0.7%)
  OR      :   7 ( 0.4%)
  AND     :   7 ( 0.4%)
  SUBN    :   7 ( 0.4%)
  XOR     :   5 ( 0.3%)
  SUB     :   4 ( 0.2%)
  SKNP    :   1 ( 0.1%)
  SKP     :   1 ( 0.1%)

Memory Operations: 333 (18.6%)
Arithmetic Operations: 136 (7.6%)
