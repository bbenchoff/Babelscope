
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B4695D01_I07327_C1001_e17a89723ddf.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 4695
Instance: 7327
Direction: ascending
Final Array: [1, 2, 8, 69, 70, 95, 175, 198]
Operations: R:0 W:3 C:65 S:8

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 98
Sort Array References:
  $204: LD I, $681 ; Load 681 into I
  $214: LD I, $181 ; Load 181 into I
  $216: LD I, $E5C ; Load E5C into I
  $236: LD I, $A60 ; Load A60 into I
  $240: LD I, $158 ; Load 158 into I
  $252: LD I, $A36 ; Load A36 into I
  $256: LD I, $788 ; Load 788 into I
  $286: LD I, $81D ; Load 81D into I
  $29A: LD I, $384 ; Load 384 into I
  $2AE: LD I, $A38 ; Load A38 into I
  $2B2: LD I, $B55 ; Load B55 into I
  $2B8: LD I, $16C ; Load 16C into I
  $306: LD I, $FC6 ; Load FC6 into I
  $308: LD I, $5E2 ; Load 5E2 into I
  $34A: LD I, $824 ; Load 824 into I
  $36C: LD I, $3C0 ; Load 3C0 into I
  $3B8: LD I, $0A8 ; Load 0A8 into I
  $3D6: LD I, $C5E ; Load C5E into I
  $424: LD I, $E00 ; Load E00 into I
  $428: LD I, $E48 ; Load E48 into I
  $472: LD I, $882 ; Load 882 into I
  $52C: LD I, $EC5 ; Load EC5 into I
  $588: LD I, $B79 ; Load B79 into I
  $59A: LD I, $7D7 ; Load 7D7 into I
  $5A8: LD I, $27E ; Load 27E into I
  $5CC: LD I, $9FA ; Load 9FA into I
  $5FA: LD I, $BE1 ; Load BE1 into I
  $61E: LD I, $0DA ; Load 0DA into I
  $620: LD I, $B7D ; Load B7D into I
  $634: LD I, $F6A ; Load F6A into I
  $67A: LD I, $72F ; Load 72F into I
  $6C0: LD I, $A55 ; Load A55 into I
  $6E2: LD I, $92B ; Load 92B into I
  $71A: LD I, $E2D ; Load E2D into I
  $726: LD I, $09D ; Load 09D into I
  $750: LD I, $50A ; Load 50A into I
  $7B8: LD I, $B18 ; Load B18 into I
  $7BA: LD I, $A41 ; Load A41 into I
  $814: LD I, $67F ; Load 67F into I
  $818: LD I, $16D ; Load 16D into I
  $82A: LD I, $A37 ; Load A37 into I
  $8F4: LD I, $015 ; Load 015 into I
  $8FA: LD I, $7CE ; Load 7CE into I
  $91A: LD I, $EED ; Load EED into I
  $980: LD I, $5CA ; Load 5CA into I
  $992: LD I, $813 ; Load 813 into I
  $9E0: LD I, $22C ; Load 22C into I
  $9EC: LD I, $CC9 ; Load CC9 into I
  $A38: LD I, $26A ; Load 26A into I
  $A3A: LD I, $EE1 ; Load EE1 into I
  $A72: LD I, $7FC ; Load 7FC into I
  $A96: LD I, $2B5 ; Load 2B5 into I
  $AB4: LD I, $539 ; Load 539 into I
  $ADE: LD I, $5C1 ; Load 5C1 into I
  $B30: LD I, $84D ; Load 84D into I
  $B40: LD I, $820 ; Load 820 into I
  $B4A: LD I, $AA2 ; Load AA2 into I
  $B6C: LD I, $73D ; Load 73D into I
  $BB2: LD I, $F70 ; Load F70 into I
  $BB6: LD I, $76C ; Load 76C into I
  $C12: LD I, $8B3 ; Load 8B3 into I
  $C24: LD I, $B50 ; Load B50 into I
  $C34: LD I, $1C8 ; Load 1C8 into I
  $C60: LD I, $B82 ; Load B82 into I
  $C84: LD I, $31F ; Load 31F into I
  $C9E: LD I, $9C1 ; Load 9C1 into I
  $CB2: LD I, $C91 ; Load C91 into I
  $CB6: LD I, $42B ; Load 42B into I
  $CD0: LD I, $724 ; Load 724 into I
  $CDA: LD I, $6A8 ; Load 6A8 into I
  $CE6: LD I, $801 ; Load 801 into I
  $D06: LD I, $B35 ; Load B35 into I
  $D18: LD I, $074 ; Load 074 into I
  $D38: LD I, $250 ; Load 250 into I
  $D5C: LD I, $35E ; Load 35E into I
  $D66: LD I, $530 ; Load 530 into I
  $D7E: LD I, $8BF ; Load 8BF into I
  $D84: LD I, $007 ; Load 007 into I
  $D9C: LD I, $067 ; Load 067 into I
  $DBE: LD I, $259 ; Load 259 into I
  $DCC: LD I, $C1D ; Load C1D into I
  $E10: LD I, $63A ; Load 63A into I
  $E84: LD I, $ED7 ; Load ED7 into I
  $EC6: LD I, $C5E ; Load C5E into I
  $ED2: LD I, $E30 ; Load E30 into I
  $F00: LD I, $742 ; Load 742 into I
  $F12: LD I, $D9C ; Load D9C into I
  $F14: LD I, $A1E ; Load A1E into I
  $F28: LD I, $446 ; Load 446 into I
  $F66: LD I, $42A ; Load 42A into I
  $F96: LD I, $F9A ; Load F9A into I
  $F98: LD I, $9BA ; Load 9BA into I
  $FA4: LD I, $DA4 ; Load DA4 into I
  $FBE: LD I, $28F ; Load 28F into I
  $FDE: LD I, $088 ; Load 088 into I
  $FE4: LD I, $90A ; Load 90A into I
  $FEC: LD I, $357 ; Load 357 into I
  $FFE: LD I, $29E ; Load 29E into I

CONTROL FLOW ANALYSIS:
Jumps: 216
Calls: 108
Branches: 209
Loops: 138
Loop Structures:
  $21A -> $171 (backward jump)
  $232 -> $01C (backward jump)
  $328 -> $2BA (backward jump)
  $358 -> $241 (backward jump)
  $372 -> $257 (backward jump)
  $390 -> $15C (backward jump)
  $3AC -> $0A9 (backward jump)
  $450 -> $270 (backward jump)
  $496 -> $0B3 (backward jump)
  $51E -> $407 (backward jump)
  $524 -> $103 (backward jump)
  $526 -> $179 (backward jump)
  $554 -> $145 (backward jump)
  $560 -> $2A6 (backward jump)
  $62C -> $5C6 (backward jump)
  $636 -> $25A (backward jump)
  $648 -> $628 (backward jump)
  $64A -> $140 (backward jump)
  $670 -> $2B8 (backward jump)
  $67E -> $1A4 (backward jump)
  $692 -> $3F6 (backward jump)
  $6B2 -> $33B (backward jump)
  $6EE -> $3A3 (backward jump)
  $6F8 -> $42A (backward jump)
  $6FA -> $007 (backward jump)
  $706 -> $6E3 (backward jump)
  $708 -> $4C7 (backward jump)
  $778 -> $140 (backward jump)
  $790 -> $503 (backward jump)
  $79C -> $089 (backward jump)
  $7AE -> $2F5 (backward jump)
  $7C8 -> $737 (backward jump)
  $834 -> $81D (backward jump)
  $85A -> $195 (backward jump)
  $872 -> $2F8 (backward jump)
  $886 -> $38A (backward jump)
  $888 -> $5CA (backward jump)
  $8A0 -> $879 (backward jump)
  $8A2 -> $6C0 (backward jump)
  $8CA -> $26D (backward jump)
  $8D8 -> $334 (backward jump)
  $900 -> $290 (backward jump)
  $928 -> $851 (backward jump)
  $930 -> $6B5 (backward jump)
  $932 -> $7D6 (backward jump)
  $972 -> $7C7 (backward jump)
  $990 -> $855 (backward jump)
  $9AC -> $59E (backward jump)
  $9BC -> $3AB (backward jump)
  $9E4 -> $070 (backward jump)
  $9FE -> $150 (backward jump)
  $A18 -> $842 (backward jump)
  $A2C -> $062 (backward jump)
  $A50 -> $0C9 (backward jump)
  $A54 -> $8CB (backward jump)
  $A6C -> $563 (backward jump)
  $AA2 -> $382 (backward jump)
  $ACE -> $887 (backward jump)
  $AF2 -> $9E3 (backward jump)
  $B2C -> $129 (backward jump)
  $B42 -> $1B6 (backward jump)
  $B56 -> $982 (backward jump)
  $B58 -> $6C3 (backward jump)
  $B5E -> $A02 (backward jump)
  $B82 -> $097 (backward jump)
  $B90 -> $543 (backward jump)
  $BA8 -> $B14 (backward jump)
  $BB0 -> $394 (backward jump)
  $BD0 -> $750 (backward jump)
  $BD2 -> $AFE (backward jump)
  $BE4 -> $309 (backward jump)
  $BEC -> $2AA (backward jump)
  $BF6 -> $326 (backward jump)
  $BFA -> $112 (backward jump)
  $C08 -> $A5B (backward jump)
  $C1C -> $0E6 (backward jump)
  $C2E -> $373 (backward jump)
  $C4A -> $852 (backward jump)
  $C4E -> $BAF (backward jump)
  $C68 -> $B23 (backward jump)
  $C96 -> $810 (backward jump)
  $CC0 -> $7F5 (backward jump)
  $CD4 -> $8B1 (backward jump)
  $CF8 -> $2CF (backward jump)
  $D22 -> $0F1 (backward jump)
  $D26 -> $013 (backward jump)
  $D2A -> $A20 (backward jump)
  $D2E -> $C7A (backward jump)
  $D3C -> $611 (backward jump)
  $D40 -> $AB0 (backward jump)
  $D58 -> $5FF (backward jump)
  $D5E -> $0C1 (backward jump)
  $D64 -> $228 (backward jump)
  $D68 -> $A46 (backward jump)
  $D6A -> $B00 (backward jump)
  $D6C -> $7DD (backward jump)
  $D74 -> $72E (backward jump)
  $D7A -> $AA9 (backward jump)
  $D8C -> $B6F (backward jump)
  $D94 -> $622 (backward jump)
  $D96 -> $D5B (backward jump)
  $D9A -> $8ED (backward jump)
  $DD4 -> $117 (backward jump)
  $DEE -> $964 (backward jump)
  $DF0 -> $160 (backward jump)
  $DFA -> $2EB (backward jump)
  $E12 -> $D54 (backward jump)
  $E20 -> $4F9 (backward jump)
  $E2E -> $0E3 (backward jump)
  $E38 -> $121 (backward jump)
  $E3A -> $1A4 (backward jump)
  $E44 -> $0F2 (backward jump)
  $E48 -> $5B6 (backward jump)
  $E66 -> $63C (backward jump)
  $E7A -> $BF7 (backward jump)
  $E7E -> $512 (backward jump)
  $E8E -> $19B (backward jump)
  $EA2 -> $C5B (backward jump)
  $EAE -> $E96 (backward jump)
  $EBE -> $E91 (backward jump)
  $EC4 -> $BF7 (backward jump)
  $EC8 -> $15A (backward jump)
  $ED0 -> $A22 (backward jump)
  $EF6 -> $94C (backward jump)
  $F32 -> $B63 (backward jump)
  $F34 -> $B96 (backward jump)
  $F38 -> $498 (backward jump)
  $F4A -> $3B0 (backward jump)
  $F7C -> $3DB (backward jump)
  $F88 -> $06B (backward jump)
  $F8E -> $EAA (backward jump)
  $FA0 -> $144 (backward jump)
  $FA6 -> $854 (backward jump)
  $FC4 -> $467 (backward jump)
  $FDC -> $B7F (backward jump)
  $FE0 -> $C9D (backward jump)
  $FEA -> $B45 (backward jump)
  $FF8 -> $622 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $23D6   CALL     $3D6            ; Call subroutine at 3D6
$202    $77FE   ADD      V7, #FE         ; Add 254 to V7
$204    $A681   LD       I, $681         ; Load 681 into I
$206    $4628   SNE      V6, #28         ; Skip if V6 != 40
$208    $9D55   UNKNOWN  $9D55           ; Unknown 9xxx instruction
$20A    $3A4C   SE       VA, #4C         ; Skip if VA == 76
$20C    $0758   SYS      $758            ; System call to 758
$20E    $9229   UNKNOWN  $9229           ; Unknown 9xxx instruction
$210    $22C7   CALL     $2C7            ; Call subroutine at 2C7
$212    $1F91   JP       $F91            ; Jump to F91
$214    $A181   LD       I, $181         ; Load 181 into I
$216    $AE5C   LD       I, $E5C         ; Load E5C into I
$218    $9A2A   UNKNOWN  $9A2A           ; Unknown 9xxx instruction
$21A    $1171   JP       $171            ; Jump to 171
$21C    $D423   DRW      V4, V2, #3      ; Draw 3-byte sprite at V4, V2
$21E    $98E0   SNE      V8, VE          ; Skip if V8 != VE
$220    $5436   UNKNOWN  $5436           ; Unknown 5xxx instruction
$222    $B8A9   JP       V0, $8A9        ; Jump to V0 + 8A9
$224    $D2B1   DRW      V2, VB, #1      ; Draw 1-byte sprite at V2, VB
$226    $EF1C   UNKNOWN  $EF1C           ; Unknown Exxx instruction
$228    $D71C   DRW      V7, V1, #C      ; Draw 12-byte sprite at V7, V1
$22A    $B55C   JP       V0, $55C        ; Jump to V0 + 55C
$22C    $2CAA   CALL     $CAA            ; Call subroutine at CAA
$22E    $DCC7   DRW      VC, VC, #7      ; Draw 7-byte sprite at VC, VC
$230    $FAC6   UNKNOWN  FAC6            ; Unknown Fxxx instruction
$232    $101C   JP       $01C            ; Jump to 01C
$234    $B7A7   JP       V0, $7A7        ; Jump to V0 + 7A7
$236    $AA60   LD       I, $A60         ; Load A60 into I
$238    $77D0   ADD      V7, #D0         ; Add 208 to V7
$23A    $5E81   UNKNOWN  $5E81           ; Unknown 5xxx instruction
$23C    $038E   SYS      $38E            ; System call to 38E
$23E    $2573   CALL     $573            ; Call subroutine at 573
$240    $A158   LD       I, $158         ; Load 158 into I
$242    $CCAA   RND      VC, #AA         ; VC = random & AA
$244    $F737   UNKNOWN  F737            ; Unknown Fxxx instruction
$246    $CE4D   RND      VE, #4D         ; VE = random & 4D
$248    $1390   JP       $390            ; Jump to 390
$24A    $880C   UNKNOWN  880C            ; Unknown 8xxx instruction
$24C    $F217   UNKNOWN  F217            ; Unknown Fxxx instruction
$24E    $913D   UNKNOWN  $913D           ; Unknown 9xxx instruction
$250    $C18C   RND      V1, #8C         ; V1 = random & 8C
$252    $AA36   LD       I, $A36         ; Load A36 into I
$254    $3ACE   SE       VA, #CE         ; Skip if VA == 206
$256    $A788   LD       I, $788         ; Load 788 into I
$258    $603A   LD       V0, #3A         ; Load 58 into V0
$25A    $3377   SE       V3, #77         ; Skip if V3 == 119
$25C    $7D3A   ADD      VD, #3A         ; Add 58 to VD
$25E    $0195   SYS      $195            ; System call to 195
$260    $3C77   SE       VC, #77         ; Skip if VC == 119
$262    $DF5B   DRW      VF, V5, #B      ; Draw 11-byte sprite at VF, V5
$264    $B9EB   JP       V0, $9EB        ; Jump to V0 + 9EB
$266    $7A6B   ADD      VA, #6B         ; Add 107 to VA
$268    $688F   LD       V8, #8F         ; Load 143 into V8
$26A    $CC53   RND      VC, #53         ; VC = random & 53
$26C    $FDBE   UNKNOWN  FDBE            ; Unknown Fxxx instruction
$26E    $079E   SYS      $79E            ; System call to 79E
$270    $C557   RND      V5, #57         ; V5 = random & 57
$272    $697B   LD       V9, #7B         ; Load 123 into V9
$274    $0E1B   SYS      $E1B            ; System call to E1B
$276    $8FC7   SUBN     VF, VC          ; VF = VC - VF, VF = !borrow
$278    $C65D   RND      V6, #5D         ; V6 = random & 5D
$27A    $5C97   UNKNOWN  $5C97           ; Unknown 5xxx instruction
$27C    $8BF4   ADD      VB, VF          ; VB += VF, VF = carry
$27E    $2A3D   CALL     $A3D            ; Call subroutine at A3D
$280    $03BD   SYS      $3BD            ; System call to 3BD
$282    $91AF   UNKNOWN  $91AF           ; Unknown 9xxx instruction
$284    $96EE   UNKNOWN  $96EE           ; Unknown 9xxx instruction
$286    $A81D   LD       I, $81D         ; Load 81D into I
$288    $0566   SYS      $566            ; System call to 566
$28A    $1FBD   JP       $FBD            ; Jump to FBD
$28C    $90D9   UNKNOWN  $90D9           ; Unknown 9xxx instruction
$28E    $2588   CALL     $588            ; Call subroutine at 588
$290    $F57D   UNKNOWN  F57D            ; Unknown Fxxx instruction
$292    $68BA   LD       V8, #BA         ; Load 186 into V8
$294    $B581   JP       V0, $581        ; Jump to V0 + 581
$296    $8987   SUBN     V9, V8          ; V9 = V8 - V9, VF = !borrow
$298    $5F6B   UNKNOWN  $5F6B           ; Unknown 5xxx instruction
$29A    $A384   LD       I, $384         ; Load 384 into I
$29C    $D73B   DRW      V7, V3, #B      ; Draw 11-byte sprite at V7, V3
$29E    $2E18   CALL     $E18            ; Call subroutine at E18
$2A0    $0CBD   SYS      $CBD            ; System call to CBD
$2A2    $45AC   SNE      V5, #AC         ; Skip if V5 != 172
$2A4    $42BE   SNE      V2, #BE         ; Skip if V2 != 190
$2A6    $D9A0   DRW      V9, VA, #0      ; Draw 0-byte sprite at V9, VA
$2A8    $53A4   UNKNOWN  $53A4           ; Unknown 5xxx instruction
$2AA    $1CBC   JP       $CBC            ; Jump to CBC
$2AC    $2F51   CALL     $F51            ; Call subroutine at F51
$2AE    $AA38   LD       I, $A38         ; Load A38 into I
$2B0    $4DD3   SNE      VD, #D3         ; Skip if VD != 211
$2B2    $AB55   LD       I, $B55         ; Load B55 into I
$2B4    $1E50   JP       $E50            ; Jump to E50
$2B6    $67FA   LD       V7, #FA         ; Load 250 into V7
$2B8    $A16C   LD       I, $16C         ; Load 16C into I
$2BA    $3C32   SE       VC, #32         ; Skip if VC == 50
$2BC    $50BD   UNKNOWN  $50BD           ; Unknown 5xxx instruction
$2BE    $E6AD   UNKNOWN  $E6AD           ; Unknown Exxx instruction
$2C0    $4458   SNE      V4, #58         ; Skip if V4 != 88
$2C2    $842A   UNKNOWN  842A            ; Unknown 8xxx instruction
$2C4    $6E38   LD       VE, #38         ; Load 56 into VE
$2C6    $C875   RND      V8, #75         ; V8 = random & 75
$2C8    $23B0   CALL     $3B0            ; Call subroutine at 3B0
$2CA    $57CC   UNKNOWN  $57CC           ; Unknown 5xxx instruction
$2CC    $5E6E   UNKNOWN  $5E6E           ; Unknown 5xxx instruction
$2CE    $F448   UNKNOWN  F448            ; Unknown Fxxx instruction
$2D0    $0B76   SYS      $B76            ; System call to B76
$2D2    $CC4B   RND      VC, #4B         ; VC = random & 4B
$2D4    $F804   UNKNOWN  F804            ; Unknown Fxxx instruction
$2D6    $7E53   ADD      VE, #53         ; Add 83 to VE
$2D8    $E80A   UNKNOWN  $E80A           ; Unknown Exxx instruction
$2DA    $1B18   JP       $B18            ; Jump to B18
$2DC    $C8A0   RND      V8, #A0         ; V8 = random & A0
$2DE    $5985   UNKNOWN  $5985           ; Unknown 5xxx instruction
$2E0    $3D2B   SE       VD, #2B         ; Skip if VD == 43
$2E2    $990F   UNKNOWN  $990F           ; Unknown 9xxx instruction
$2E4    $EFCC   UNKNOWN  $EFCC           ; Unknown Exxx instruction
$2E6    $802A   UNKNOWN  802A            ; Unknown 8xxx instruction
$2E8    $D3B1   DRW      V3, VB, #1      ; Draw 1-byte sprite at V3, VB
$2EA    $45A7   SNE      V5, #A7         ; Skip if V5 != 167
$2EC    $8887   SUBN     V8, V8          ; V8 = V8 - V8, VF = !borrow
$2EE    $04A0   SYS      $4A0            ; System call to 4A0
$2F0    $9AC6   UNKNOWN  $9AC6           ; Unknown 9xxx instruction
$2F2    $4F7F   SNE      VF, #7F         ; Skip if VF != 127
$2F4    $333B   SE       V3, #3B         ; Skip if V3 == 59
$2F6    $B4CF   JP       V0, $4CF        ; Jump to V0 + 4CF
$2F8    $53AB   UNKNOWN  $53AB           ; Unknown 5xxx instruction
$2FA    $F869   UNKNOWN  F869            ; Unknown Fxxx instruction
$2FC    $5483   UNKNOWN  $5483           ; Unknown 5xxx instruction
$2FE    $FB06   UNKNOWN  FB06            ; Unknown Fxxx instruction
$300    $0102   SYS      $102            ; System call to 102
$302    $0845   SYS      $845            ; System call to 845
$304    $465F   SNE      V6, #5F         ; Skip if V6 != 95
$306    $AFC6   LD       I, $FC6         ; Load FC6 into I
$308    $A5E2   LD       I, $5E2         ; Load 5E2 into I
$30A    $D1DA   DRW      V1, VD, #A      ; Draw 10-byte sprite at V1, VD
$30C    $2E21   CALL     $E21            ; Call subroutine at E21
$30E    $4338   SNE      V3, #38         ; Skip if V3 != 56
$310    $4340   SNE      V3, #40         ; Skip if V3 != 64
$312    $C295   RND      V2, #95         ; V2 = random & 95
$314    $8FD0   LD       VF, VD          ; VF = VD
$316    $C7C5   RND      V7, #C5         ; V7 = random & C5
$318    $6FFB   LD       VF, #FB         ; Load 251 into VF
$31A    $3181   SE       V1, #81         ; Skip if V1 == 129
$31C    $62B9   LD       V2, #B9         ; Load 185 into V2
$31E    $9779   UNKNOWN  $9779           ; Unknown 9xxx instruction
$320    $6A93   LD       VA, #93         ; Load 147 into VA
$322    $EFAF   UNKNOWN  $EFAF           ; Unknown Exxx instruction
$324    $88BE   SHL      V8              ; V8 <<= 1, VF = MSB
$326    $9113   UNKNOWN  $9113           ; Unknown 9xxx instruction
$328    $B2BA   JP       V0, $2BA        ; Jump to V0 + 2BA
$32A    $7E04   ADD      VE, #04         ; Add 4 to VE
$32C    $010F   SYS      $10F            ; System call to 10F
$32E    $0D4E   SYS      $D4E            ; System call to D4E
$330    $9D4E   UNKNOWN  $9D4E           ; Unknown 9xxx instruction
$332    $0404   SYS      $404            ; System call to 404
$334    $0829   SYS      $829            ; System call to 829
$336    $5637   UNKNOWN  $5637           ; Unknown 5xxx instruction
$338    $556F   UNKNOWN  $556F           ; Unknown 5xxx instruction
$33A    $983D   UNKNOWN  $983D           ; Unknown 9xxx instruction
$33C    $7477   ADD      V4, #77         ; Add 119 to V4
$33E    $2046   CALL     $046            ; Call subroutine at 046
$340    $BC8B   JP       V0, $C8B        ; Jump to V0 + C8B
$342    $91BE   UNKNOWN  $91BE           ; Unknown 9xxx instruction
$344    $690A   LD       V9, #0A         ; Load 10 into V9
$346    $616E   LD       V1, #6E         ; Load 110 into V1
$348    $F1F3   UNKNOWN  F1F3            ; Unknown Fxxx instruction
$34A    $A824   LD       I, $824         ; Load 824 into I
$34C    $73EB   ADD      V3, #EB         ; Add 235 to V3
$34E    $3191   SE       V1, #91         ; Skip if V1 == 145
$350    $80F4   ADD      V0, VF          ; V0 += VF, VF = carry
$352    $76BA   ADD      V6, #BA         ; Add 186 to V6
$354    $6F1F   LD       VF, #1F         ; Load 31 into VF
$356    $2E4C   CALL     $E4C            ; Call subroutine at E4C
$358    $B241   JP       V0, $241        ; Jump to V0 + 241
$35A    $FD09   UNKNOWN  FD09            ; Unknown Fxxx instruction
$35C    $80D9   UNKNOWN  80D9            ; Unknown 8xxx instruction
$35E    $E045   UNKNOWN  $E045           ; Unknown Exxx instruction
$360    $D260   DRW      V2, V6, #0      ; Draw 0-byte sprite at V2, V6
$362    $297A   CALL     $97A            ; Call subroutine at 97A
$364    $5377   UNKNOWN  $5377           ; Unknown 5xxx instruction
$366    $54A1   UNKNOWN  $54A1           ; Unknown 5xxx instruction
$368    $6AA8   LD       VA, #A8         ; Load 168 into VA
$36A    $E48C   UNKNOWN  $E48C           ; Unknown Exxx instruction
$36C    $A3C0   LD       I, $3C0         ; Load 3C0 into I
$36E    $364D   SE       V6, #4D         ; Skip if V6 == 77
$370    $4C1C   SNE      VC, #1C         ; Skip if VC != 28
$372    $B257   JP       V0, $257        ; Jump to V0 + 257
$374    $0EFB   SYS      $EFB            ; System call to EFB
$376    $5F97   UNKNOWN  $5F97           ; Unknown 5xxx instruction
$378    $BF18   JP       V0, $F18        ; Jump to V0 + F18
$37A    $C275   RND      V2, #75         ; V2 = random & 75
$37C    $B3DB   JP       V0, $3DB        ; Jump to V0 + 3DB
$37E    $FCB0   UNKNOWN  FCB0            ; Unknown Fxxx instruction
$380    $2E6E   CALL     $E6E            ; Call subroutine at E6E
$382    $4685   SNE      V6, #85         ; Skip if V6 != 133
$384    $6FEC   LD       VF, #EC         ; Load 236 into VF
$386    $BDCE   JP       V0, $DCE        ; Jump to V0 + DCE
$388    $9C4B   UNKNOWN  $9C4B           ; Unknown 9xxx instruction
$38A    $69B8   LD       V9, #B8         ; Load 184 into V9
$38C    $9C95   UNKNOWN  $9C95           ; Unknown 9xxx instruction
$38E    $5289   UNKNOWN  $5289           ; Unknown 5xxx instruction
$390    $115C   JP       $15C            ; Jump to 15C
$392    $BB85   JP       V0, $B85        ; Jump to V0 + B85
$394    $3016   SE       V0, #16         ; Skip if V0 == 22
$396    $59C8   UNKNOWN  $59C8           ; Unknown 5xxx instruction
$398    $03B4   SYS      $3B4            ; System call to 3B4
$39A    $1E4F   JP       $E4F            ; Jump to E4F
$39C    $F056   UNKNOWN  F056            ; Unknown Fxxx instruction
$39E    $C833   RND      V8, #33         ; V8 = random & 33
$3A0    $9D1D   UNKNOWN  $9D1D           ; Unknown 9xxx instruction
$3A2    $1DFA   JP       $DFA            ; Jump to DFA
$3A4    $88FC   UNKNOWN  88FC            ; Unknown 8xxx instruction
$3A6    $68A4   LD       V8, #A4         ; Load 164 into V8
$3A8    $4B55   SNE      VB, #55         ; Skip if VB != 85
$3AA    $8565   SUB      V5, V6          ; V5 -= V6, VF = !borrow
$3AC    $10A9   JP       $0A9            ; Jump to 0A9
$3AE    $E27A   UNKNOWN  $E27A           ; Unknown Exxx instruction
$3B0    $62E6   LD       V2, #E6         ; Load 230 into V2
$3B2    $D97E   DRW      V9, V7, #E      ; Draw 14-byte sprite at V9, V7
$3B4    $612C   LD       V1, #2C         ; Load 44 into V1
$3B6    $635C   LD       V3, #5C         ; Load 92 into V3
$3B8    $A0A8   LD       I, $0A8         ; Load 0A8 into I
$3BA    $5959   UNKNOWN  $5959           ; Unknown 5xxx instruction
$3BC    $FBB7   UNKNOWN  FBB7            ; Unknown Fxxx instruction
$3BE    $7FBF   ADD      VF, #BF         ; Add 191 to VF
$3C0    $44F1   SNE      V4, #F1         ; Skip if V4 != 241
$3C2    $1FDA   JP       $FDA            ; Jump to FDA
$3C4    $CB82   RND      VB, #82         ; VB = random & 82
$3C6    $51A5   UNKNOWN  $51A5           ; Unknown 5xxx instruction
$3C8    $4E90   SNE      VE, #90         ; Skip if VE != 144
$3CA    $2DB6   CALL     $DB6            ; Call subroutine at DB6
$3CC    $90A8   UNKNOWN  $90A8           ; Unknown 9xxx instruction
$3CE    $4514   SNE      V5, #14         ; Skip if V5 != 20
$3D0    $5699   UNKNOWN  $5699           ; Unknown 5xxx instruction
$3D2    $6D19   LD       VD, #19         ; Load 25 into VD
$3D4    $FD51   UNKNOWN  FD51            ; Unknown Fxxx instruction
$3D6    $AC5E   LD       I, $C5E         ; Load C5E into I
$3D8    $F6F9   UNKNOWN  F6F9            ; Unknown Fxxx instruction
$3DA    $82F4   ADD      V2, VF          ; V2 += VF, VF = carry
$3DC    $BF29   JP       V0, $F29        ; Jump to V0 + F29
$3DE    $384F   SE       V8, #4F         ; Skip if V8 == 79
$3E0    $7BCD   ADD      VB, #CD         ; Add 205 to VB
$3E2    $81C3   XOR      V1, VC          ; V1 ^= VC
$3E4    $3828   SE       V8, #28         ; Skip if V8 == 40
$3E6    $811F   UNKNOWN  811F            ; Unknown 8xxx instruction
$3E8    $D785   DRW      V7, V8, #5      ; Draw 5-byte sprite at V7, V8
$3EA    $8EA7   SUBN     VE, VA          ; VE = VA - VE, VF = !borrow
$3EC    $8FB1   OR       VF, VB          ; VF |= VB
$3EE    $81E9   UNKNOWN  81E9            ; Unknown 8xxx instruction
$3F0    $6154   LD       V1, #54         ; Load 84 into V1
$3F2    $65D2   LD       V5, #D2         ; Load 210 into V5
$3F4    $D255   DRW      V2, V5, #5      ; Draw 5-byte sprite at V2, V5
$3F6    $27E0   CALL     $7E0            ; Call subroutine at 7E0
$3F8    $4D28   SNE      VD, #28         ; Skip if VD != 40
$3FA    $9CB2   UNKNOWN  $9CB2           ; Unknown 9xxx instruction
$3FC    $F85B   UNKNOWN  F85B            ; Unknown Fxxx instruction
$3FE    $4862   SNE      V8, #62         ; Skip if V8 != 98
$400    $96D7   UNKNOWN  $96D7           ; Unknown 9xxx instruction
$402    $81FA   UNKNOWN  81FA            ; Unknown 8xxx instruction
$404    $32DB   SE       V2, #DB         ; Skip if V2 == 219
$406    $C803   RND      V8, #03         ; V8 = random & 03
$408    $E9AB   UNKNOWN  $E9AB           ; Unknown Exxx instruction
$40A    $7047   ADD      V0, #47         ; Add 71 to V0
$40C    $65AC   LD       V5, #AC         ; Load 172 into V5
$40E    $9E08   UNKNOWN  $9E08           ; Unknown 9xxx instruction
$410    $C05A   RND      V0, #5A         ; V0 = random & 5A
$412    $9074   UNKNOWN  $9074           ; Unknown 9xxx instruction
$414    $DA80   DRW      VA, V8, #0      ; Draw 0-byte sprite at VA, V8
$416    $9868   UNKNOWN  $9868           ; Unknown 9xxx instruction
$418    $49F1   SNE      V9, #F1         ; Skip if V9 != 241
$41A    $DA3D   DRW      VA, V3, #D      ; Draw 13-byte sprite at VA, V3
$41C    $072E   SYS      $72E            ; System call to 72E
$41E    $9A98   UNKNOWN  $9A98           ; Unknown 9xxx instruction
$420    $CE5F   RND      VE, #5F         ; VE = random & 5F
$422    $5A3E   UNKNOWN  $5A3E           ; Unknown 5xxx instruction
$424    $AE00   LD       I, $E00         ; Load E00 into I
$426    $7421   ADD      V4, #21         ; Add 33 to V4
$428    $AE48   LD       I, $E48         ; Load E48 into I
$42A    $DA0A   DRW      VA, V0, #A      ; Draw 10-byte sprite at VA, V0
$42C    $F72E   UNKNOWN  F72E            ; Unknown Fxxx instruction
$42E    $B836   JP       V0, $836        ; Jump to V0 + 836
$430    $7779   ADD      V7, #79         ; Add 121 to V7
$432    $30EC   SE       V0, #EC         ; Skip if V0 == 236
$434    $CB73   RND      VB, #73         ; VB = random & 73
$436    $5E47   UNKNOWN  $5E47           ; Unknown 5xxx instruction
$438    $540F   UNKNOWN  $540F           ; Unknown 5xxx instruction
$43A    $98D8   UNKNOWN  $98D8           ; Unknown 9xxx instruction
$43C    $C0A0   RND      V0, #A0         ; V0 = random & A0
$43E    $227C   CALL     $27C            ; Call subroutine at 27C
$440    $2D91   CALL     $D91            ; Call subroutine at D91
$442    $05F5   SYS      $5F5            ; System call to 5F5
$444    $8AAB   UNKNOWN  8AAB            ; Unknown 8xxx instruction
$446    $7386   ADD      V3, #86         ; Add 134 to V3
$448    $6A60   LD       VA, #60         ; Load 96 into VA
$44A    $921F   UNKNOWN  $921F           ; Unknown 9xxx instruction
$44C    $223C   CALL     $23C            ; Call subroutine at 23C
$44E    $F0DD   UNKNOWN  F0DD            ; Unknown Fxxx instruction
$450    $B270   JP       V0, $270        ; Jump to V0 + 270
$452    $2ED7   CALL     $ED7            ; Call subroutine at ED7
$454    $7C57   ADD      VC, #57         ; Add 87 to VC
$456    $C7F6   RND      V7, #F6         ; V7 = random & F6
$458    $9F70   SNE      VF, V7          ; Skip if VF != V7
$45A    $27EC   CALL     $7EC            ; Call subroutine at 7EC
$45C    $6227   LD       V2, #27         ; Load 39 into V2
$45E    $4700   SNE      V7, #00         ; Skip if V7 != 0
$460    $6F6B   LD       VF, #6B         ; Load 107 into VF
$462    $0A4A   SYS      $A4A            ; System call to A4A
$464    $34C2   SE       V4, #C2         ; Skip if V4 == 194
$466    $B940   JP       V0, $940        ; Jump to V0 + 940
$468    $0986   SYS      $986            ; System call to 986
$46A    $1F4B   JP       $F4B            ; Jump to F4B
$46C    $F65A   UNKNOWN  F65A            ; Unknown Fxxx instruction
$46E    $0A65   SYS      $A65            ; System call to A65
$470    $BE92   JP       V0, $E92        ; Jump to V0 + E92
$472    $A882   LD       I, $882         ; Load 882 into I
$474    $42A4   SNE      V2, #A4         ; Skip if V2 != 164
$476    $3B50   SE       VB, #50         ; Skip if VB == 80
$478    $EA3C   UNKNOWN  $EA3C           ; Unknown Exxx instruction
$47A    $6BBC   LD       VB, #BC         ; Load 188 into VB
$47C    $FE13   UNKNOWN  FE13            ; Unknown Fxxx instruction
$47E    $EA0C   UNKNOWN  $EA0C           ; Unknown Exxx instruction
$480    $7D1A   ADD      VD, #1A         ; Add 26 to VD
$482    $4801   SNE      V8, #01         ; Skip if V8 != 1
$484    $9CC2   UNKNOWN  $9CC2           ; Unknown 9xxx instruction
$486    $9389   UNKNOWN  $9389           ; Unknown 9xxx instruction
$488    $61D2   LD       V1, #D2         ; Load 210 into V1
$48A    $CC69   RND      VC, #69         ; VC = random & 69
$48C    $5EAA   UNKNOWN  $5EAA           ; Unknown 5xxx instruction
$48E    $86FF   UNKNOWN  86FF            ; Unknown 8xxx instruction
$490    $955C   UNKNOWN  $955C           ; Unknown 9xxx instruction
$492    $DF85   DRW      VF, V8, #5      ; Draw 5-byte sprite at VF, V8
$494    $4C42   SNE      VC, #42         ; Skip if VC != 66
$496    $B0B3   JP       V0, $0B3        ; Jump to V0 + 0B3
$498    $7A5E   ADD      VA, #5E         ; Add 94 to VA
$49A    $8237   SUBN     V2, V3          ; V2 = V3 - V2, VF = !borrow
$49C    $5CF0   SE       VC, VF          ; Skip if VC == VF
$49E    $5A4E   UNKNOWN  $5A4E           ; Unknown 5xxx instruction
$4A0    $2AF3   CALL     $AF3            ; Call subroutine at AF3
$4A2    $DB99   DRW      VB, V9, #9      ; Draw 9-byte sprite at VB, V9
$4A4    $DEA9   DRW      VE, VA, #9      ; Draw 9-byte sprite at VE, VA
$4A6    $31D6   SE       V1, #D6         ; Skip if V1 == 214
$4A8    $01AA   SYS      $1AA            ; System call to 1AA
$4AA    $9748   UNKNOWN  $9748           ; Unknown 9xxx instruction
$4AC    $0F97   SYS      $F97            ; System call to F97
$4AE    $79CA   ADD      V9, #CA         ; Add 202 to V9
$4B0    $3E75   SE       VE, #75         ; Skip if VE == 117
$4B2    $FCA9   UNKNOWN  FCA9            ; Unknown Fxxx instruction
$4B4    $4379   SNE      V3, #79         ; Skip if V3 != 121
$4B6    $7FD0   ADD      VF, #D0         ; Add 208 to VF
$4B8    $2B32   CALL     $B32            ; Call subroutine at B32
$4BA    $F80A   LD       V8, K           ; Wait for key press, store in V8
$4BC    $FD64   UNKNOWN  FD64            ; Unknown Fxxx instruction
$4BE    $DA89   DRW      VA, V8, #9      ; Draw 9-byte sprite at VA, V8
$4C0    $F85B   UNKNOWN  F85B            ; Unknown Fxxx instruction
$4C2    $6C40   LD       VC, #40         ; Load 64 into VC
$4C4    $6A55   LD       VA, #55         ; Load 85 into VA
$4C6    $8D98   UNKNOWN  8D98            ; Unknown 8xxx instruction
$4C8    $DF10   DRW      VF, V1, #0      ; Draw 0-byte sprite at VF, V1
$4CA    $6306   LD       V3, #06         ; Load 6 into V3
$4CC    $EDF5   UNKNOWN  $EDF5           ; Unknown Exxx instruction
$4CE    $BF70   JP       V0, $F70        ; Jump to V0 + F70
$4D0    $7BE1   ADD      VB, #E1         ; Add 225 to VB
$4D2    $6953   LD       V9, #53         ; Load 83 into V9
$4D4    $6776   LD       V7, #76         ; Load 118 into V7
$4D6    $765F   ADD      V6, #5F         ; Add 95 to V6
$4D8    $C9E7   RND      V9, #E7         ; V9 = random & E7
$4DA    $FAD7   UNKNOWN  FAD7            ; Unknown Fxxx instruction
$4DC    $E297   UNKNOWN  $E297           ; Unknown Exxx instruction
$4DE    $8DB2   AND      VD, VB          ; VD &= VB
$4E0    $07BD   SYS      $7BD            ; System call to 7BD
$4E2    $6488   LD       V4, #88         ; Load 136 into V4
$4E4    $E6FD   UNKNOWN  $E6FD           ; Unknown Exxx instruction
$4E6    $1C91   JP       $C91            ; Jump to C91
$4E8    $0F7F   SYS      $F7F            ; System call to F7F
$4EA    $7374   ADD      V3, #74         ; Add 116 to V3
$4EC    $D767   DRW      V7, V6, #7      ; Draw 7-byte sprite at V7, V6
$4EE    $1D95   JP       $D95            ; Jump to D95
$4F0    $5B51   UNKNOWN  $5B51           ; Unknown 5xxx instruction
$4F2    $3834   SE       V8, #34         ; Skip if V8 == 52
$4F4    $3795   SE       V7, #95         ; Skip if V7 == 149
$4F6    $2098   CALL     $098            ; Call subroutine at 098
$4F8    $1F87   JP       $F87            ; Jump to F87
$4FA    $C25A   RND      V2, #5A         ; V2 = random & 5A
$4FC    $D2D1   DRW      V2, VD, #1      ; Draw 1-byte sprite at V2, VD
$4FE    $FD8C   UNKNOWN  FD8C            ; Unknown Fxxx instruction
$500    $094E   SYS      $94E            ; System call to 94E
$502    $64A1   LD       V4, #A1         ; Load 161 into V4
$504    $1C8F   JP       $C8F            ; Jump to C8F
$506    $E984   UNKNOWN  $E984           ; Unknown Exxx instruction
$508    $9363   UNKNOWN  $9363           ; Unknown 9xxx instruction
$50A    $D45E   DRW      V4, V5, #E      ; Draw 14-byte sprite at V4, V5
$50C    $ECED   UNKNOWN  $ECED           ; Unknown Exxx instruction
$50E    $F35D   UNKNOWN  F35D            ; Unknown Fxxx instruction
$510    $BE33   JP       V0, $E33        ; Jump to V0 + E33
$512    $1ED1   JP       $ED1            ; Jump to ED1
$514    $E359   UNKNOWN  $E359           ; Unknown Exxx instruction
$516    $CBEC   RND      VB, #EC         ; VB = random & EC
$518    $3289   SE       V2, #89         ; Skip if V2 == 137
$51A    $41F8   SNE      V1, #F8         ; Skip if V1 != 248
$51C    $B7E5   JP       V0, $7E5        ; Jump to V0 + 7E5
$51E    $B407   JP       V0, $407        ; Jump to V0 + 407
$520    $642C   LD       V4, #2C         ; Load 44 into V4
$522    $2259   CALL     $259            ; Call subroutine at 259
$524    $B103   JP       V0, $103        ; Jump to V0 + 103
$526    $B179   JP       V0, $179        ; Jump to V0 + 179
$528    $93F3   UNKNOWN  $93F3           ; Unknown 9xxx instruction
$52A    $E999   UNKNOWN  $E999           ; Unknown Exxx instruction
$52C    $AEC5   LD       I, $EC5         ; Load EC5 into I
$52E    $5187   UNKNOWN  $5187           ; Unknown 5xxx instruction
$530    $FBD4   UNKNOWN  FBD4            ; Unknown Fxxx instruction
$532    $5887   UNKNOWN  $5887           ; Unknown 5xxx instruction
$534    $5B2F   UNKNOWN  $5B2F           ; Unknown 5xxx instruction
$536    $8153   XOR      V1, V5          ; V1 ^= V5
$538    $33CA   SE       V3, #CA         ; Skip if V3 == 202
$53A    $6D2B   LD       VD, #2B         ; Load 43 into VD
$53C    $DA22   DRW      VA, V2, #2      ; Draw 2-byte sprite at VA, V2
$53E    $6E5B   LD       VE, #5B         ; Load 91 into VE
$540    $32F9   SE       V2, #F9         ; Skip if V2 == 249
$542    $647E   LD       V4, #7E         ; Load 126 into V4
$544    $9C98   UNKNOWN  $9C98           ; Unknown 9xxx instruction
$546    $B57F   JP       V0, $57F        ; Jump to V0 + 57F
$548    $6D61   LD       VD, #61         ; Load 97 into VD
$54A    $DF83   DRW      VF, V8, #3      ; Draw 3-byte sprite at VF, V8
$54C    $CADD   RND      VA, #DD         ; VA = random & DD
$54E    $2DC9   CALL     $DC9            ; Call subroutine at DC9
$550    $3C72   SE       VC, #72         ; Skip if VC == 114
$552    $C490   RND      V4, #90         ; V4 = random & 90
$554    $1145   JP       $145            ; Jump to 145
$556    $6025   LD       V0, #25         ; Load 37 into V0
$558    $E329   UNKNOWN  $E329           ; Unknown Exxx instruction
$55A    $817F   UNKNOWN  817F            ; Unknown 8xxx instruction
$55C    $7C9F   ADD      VC, #9F         ; Add 159 to VC
$55E    $0519   SYS      $519            ; System call to 519
$560    $12A6   JP       $2A6            ; Jump to 2A6
$562    $99FA   UNKNOWN  $99FA           ; Unknown 9xxx instruction
$564    $D624   DRW      V6, V2, #4      ; Draw 4-byte sprite at V6, V2
$566    $602B   LD       V0, #2B         ; Load 43 into V0
$568    $9F6E   UNKNOWN  $9F6E           ; Unknown 9xxx instruction
$56A    $D71B   DRW      V7, V1, #B      ; Draw 11-byte sprite at V7, V1
$56C    $0221   SYS      $221            ; System call to 221
$56E    $0E78   SYS      $E78            ; System call to E78
$570    $934D   UNKNOWN  $934D           ; Unknown 9xxx instruction
$572    $43C8   SNE      V3, #C8         ; Skip if V3 != 200
$574    $8D1C   UNKNOWN  8D1C            ; Unknown 8xxx instruction
$576    $5A89   UNKNOWN  $5A89           ; Unknown 5xxx instruction
$578    $04C7   SYS      $4C7            ; System call to 4C7
$57A    $0B03   SYS      $B03            ; System call to B03
$57C    $C29F   RND      V2, #9F         ; V2 = random & 9F
$57E    $98AF   UNKNOWN  $98AF           ; Unknown 9xxx instruction
$580    $89CF   UNKNOWN  89CF            ; Unknown 8xxx instruction
$582    $B8C2   JP       V0, $8C2        ; Jump to V0 + 8C2
$584    $011E   SYS      $11E            ; System call to 11E
$586    $9221   UNKNOWN  $9221           ; Unknown 9xxx instruction
$588    $AB79   LD       I, $B79         ; Load B79 into I
$58A    $0268   SYS      $268            ; System call to 268
$58C    $3FC3   SE       VF, #C3         ; Skip if VF == 195
$58E    $709D   ADD      V0, #9D         ; Add 157 to V0
$590    $2E1C   CALL     $E1C            ; Call subroutine at E1C
$592    $9127   UNKNOWN  $9127           ; Unknown 9xxx instruction
$594    $8F2A   UNKNOWN  8F2A            ; Unknown 8xxx instruction
$596    $2473   CALL     $473            ; Call subroutine at 473
$598    $0846   SYS      $846            ; System call to 846
$59A    $A7D7   LD       I, $7D7         ; Load 7D7 into I
$59C    $63FD   LD       V3, #FD         ; Load 253 into V3
$59E    $331A   SE       V3, #1A         ; Skip if V3 == 26
$5A0    $F651   UNKNOWN  F651            ; Unknown Fxxx instruction
$5A2    $4B78   SNE      VB, #78         ; Skip if VB != 120
$5A4    $9B3B   UNKNOWN  $9B3B           ; Unknown 9xxx instruction
$5A6    $6581   LD       V5, #81         ; Load 129 into V5
$5A8    $A27E   LD       I, $27E         ; Load 27E into I
$5AA    $15B0   JP       $5B0            ; Jump to 5B0
$5AC    $E4DF   UNKNOWN  $E4DF           ; Unknown Exxx instruction
$5AE    $0987   SYS      $987            ; System call to 987
$5B0    $9D99   UNKNOWN  $9D99           ; Unknown 9xxx instruction
$5B2    $5AF7   UNKNOWN  $5AF7           ; Unknown 5xxx instruction
$5B4    $9C41   UNKNOWN  $9C41           ; Unknown 9xxx instruction
$5B6    $44D3   SNE      V4, #D3         ; Skip if V4 != 211
$5B8    $2B24   CALL     $B24            ; Call subroutine at B24
$5BA    $06D7   SYS      $6D7            ; System call to 6D7
$5BC    $CAB2   RND      VA, #B2         ; VA = random & B2
$5BE    $90B9   UNKNOWN  $90B9           ; Unknown 9xxx instruction
$5C0    $9BC6   UNKNOWN  $9BC6           ; Unknown 9xxx instruction
$5C2    $BEF5   JP       V0, $EF5        ; Jump to V0 + EF5
$5C4    $945D   UNKNOWN  $945D           ; Unknown 9xxx instruction
$5C6    $D7CA   DRW      V7, VC, #A      ; Draw 10-byte sprite at V7, VC
$5C8    $C34E   RND      V3, #4E         ; V3 = random & 4E
$5CA    $8296   SHR      V2              ; V2 >>= 1, VF = LSB
$5CC    $A9FA   LD       I, $9FA         ; Load 9FA into I
$5CE    $6E42   LD       VE, #42         ; Load 66 into VE
$5D0    $85F0   LD       V5, VF          ; V5 = VF
$5D2    $75C1   ADD      V5, #C1         ; Add 193 to V5
$5D4    $8046   SHR      V0              ; V0 >>= 1, VF = LSB
$5D6    $206B   CALL     $06B            ; Call subroutine at 06B
$5D8    $875D   UNKNOWN  875D            ; Unknown 8xxx instruction
$5DA    $58C7   UNKNOWN  $58C7           ; Unknown 5xxx instruction
$5DC    $46EE   SNE      V6, #EE         ; Skip if V6 != 238
$5DE    $5FB6   UNKNOWN  $5FB6           ; Unknown 5xxx instruction
$5E0    $CA32   RND      VA, #32         ; VA = random & 32
$5E2    $225F   CALL     $25F            ; Call subroutine at 25F
$5E4    $8019   UNKNOWN  8019            ; Unknown 8xxx instruction
$5E6    $E476   UNKNOWN  $E476           ; Unknown Exxx instruction
$5E8    $FDA0   UNKNOWN  FDA0            ; Unknown Fxxx instruction
$5EA    $2800   CALL     $800            ; Call subroutine at 800
$5EC    $1729   JP       $729            ; Jump to 729
$5EE    $C998   RND      V9, #98         ; V9 = random & 98
$5F0    $8B3E   SHL      VB              ; VB <<= 1, VF = MSB
$5F2    $535A   UNKNOWN  $535A           ; Unknown 5xxx instruction
$5F4    $7B27   ADD      VB, #27         ; Add 39 to VB
$5F6    $8B5A   UNKNOWN  8B5A            ; Unknown 8xxx instruction
$5F8    $0CDE   SYS      $CDE            ; System call to CDE
$5FA    $ABE1   LD       I, $BE1         ; Load BE1 into I
$5FC    $3590   SE       V5, #90         ; Skip if V5 == 144
$5FE    $9452   UNKNOWN  $9452           ; Unknown 9xxx instruction
$600    $D55C   DRW      V5, V5, #C      ; Draw 12-byte sprite at V5, V5
$602    $F963   UNKNOWN  F963            ; Unknown Fxxx instruction
$604    $2AE8   CALL     $AE8            ; Call subroutine at AE8
$606    $215B   CALL     $15B            ; Call subroutine at 15B
$608    $9D49   UNKNOWN  $9D49           ; Unknown 9xxx instruction
$60A    $77F0   ADD      V7, #F0         ; Add 240 to V7
$60C    $E208   UNKNOWN  $E208           ; Unknown Exxx instruction
$60E    $33DB   SE       V3, #DB         ; Skip if V3 == 219
$610    $EBBC   UNKNOWN  $EBBC           ; Unknown Exxx instruction
$612    $7E02   ADD      VE, #02         ; Add 2 to VE
$614    $1E06   JP       $E06            ; Jump to E06
$616    $6AF0   LD       VA, #F0         ; Load 240 into VA
$618    $84B2   AND      V4, VB          ; V4 &= VB
$61A    $0D37   SYS      $D37            ; System call to D37
$61C    $2D85   CALL     $D85            ; Call subroutine at D85
$61E    $A0DA   LD       I, $0DA         ; Load 0DA into I
$620    $AB7D   LD       I, $B7D         ; Load B7D into I
$622    $C479   RND      V4, #79         ; V4 = random & 79
$624    $DFCE   DRW      VF, VC, #E      ; Draw 14-byte sprite at VF, VC
$626    $F4F1   UNKNOWN  F4F1            ; Unknown Fxxx instruction
$628    $678D   LD       V7, #8D         ; Load 141 into V7
$62A    $0E5F   SYS      $E5F            ; System call to E5F
$62C    $B5C6   JP       V0, $5C6        ; Jump to V0 + 5C6
$62E    $73FA   ADD      V3, #FA         ; Add 250 to V3
$630    $E0C7   UNKNOWN  $E0C7           ; Unknown Exxx instruction
$632    $6488   LD       V4, #88         ; Load 136 into V4
$634    $AF6A   LD       I, $F6A         ; Load F6A into I
$636    $125A   JP       $25A            ; Jump to 25A
$638    $6B88   LD       VB, #88         ; Load 136 into VB
$63A    $16AE   JP       $6AE            ; Jump to 6AE
$63C    $DEED   DRW      VE, VE, #D      ; Draw 13-byte sprite at VE, VE
$63E    $E367   UNKNOWN  $E367           ; Unknown Exxx instruction
$640    $E026   UNKNOWN  $E026           ; Unknown Exxx instruction
$642    $437A   SNE      V3, #7A         ; Skip if V3 != 122
$644    $CE25   RND      VE, #25         ; VE = random & 25
$646    $C2CB   RND      V2, #CB         ; V2 = random & CB
$648    $B628   JP       V0, $628        ; Jump to V0 + 628
$64A    $1140   JP       $140            ; Jump to 140
$64C    $74FF   ADD      V4, #FF         ; Add 255 to V4
$64E    $8CEB   UNKNOWN  8CEB            ; Unknown 8xxx instruction
$650    $98C3   UNKNOWN  $98C3           ; Unknown 9xxx instruction
$652    $04DC   SYS      $4DC            ; System call to 4DC
$654    $C45E   RND      V4, #5E         ; V4 = random & 5E
$656    $BD53   JP       V0, $D53        ; Jump to V0 + D53
$658    $3398   SE       V3, #98         ; Skip if V3 == 152
$65A    $D0F1   DRW      V0, VF, #1      ; Draw 1-byte sprite at V0, VF
$65C    $8BFF   UNKNOWN  8BFF            ; Unknown 8xxx instruction
$65E    $89A2   AND      V9, VA          ; V9 &= VA
$660    $C058   RND      V0, #58         ; V0 = random & 58
$662    $B68A   JP       V0, $68A        ; Jump to V0 + 68A
$664    $64D7   LD       V4, #D7         ; Load 215 into V4
$666    $7165   ADD      V1, #65         ; Add 101 to V1
$668    $3B24   SE       VB, #24         ; Skip if VB == 36
$66A    $8F03   XOR      VF, V0          ; VF ^= V0
$66C    $FF16   UNKNOWN  FF16            ; Unknown Fxxx instruction
$66E    $BFCD   JP       V0, $FCD        ; Jump to V0 + FCD
$670    $12B8   JP       $2B8            ; Jump to 2B8
$672    $7CEB   ADD      VC, #EB         ; Add 235 to VC
$674    $639E   LD       V3, #9E         ; Load 158 into V3
$676    $5E9C   UNKNOWN  $5E9C           ; Unknown 5xxx instruction
$678    $4841   SNE      V8, #41         ; Skip if V8 != 65
$67A    $A72F   LD       I, $72F         ; Load 72F into I
$67C    $17B6   JP       $7B6            ; Jump to 7B6
$67E    $B1A4   JP       V0, $1A4        ; Jump to V0 + 1A4
$680    $EAA4   UNKNOWN  $EAA4           ; Unknown Exxx instruction
$682    $1A9C   JP       $A9C            ; Jump to A9C
$684    $3CC2   SE       VC, #C2         ; Skip if VC == 194
$686    $7C41   ADD      VC, #41         ; Add 65 to VC
$688    $8C72   AND      VC, V7          ; VC &= V7
$68A    $F902   UNKNOWN  F902            ; Unknown Fxxx instruction
$68C    $010C   SYS      $10C            ; System call to 10C
$68E    $DDB1   DRW      VD, VB, #1      ; Draw 1-byte sprite at VD, VB
$690    $66E8   LD       V6, #E8         ; Load 232 into V6
$692    $13F6   JP       $3F6            ; Jump to 3F6
$694    $3F0C   SE       VF, #0C         ; Skip if VF == 12
$696    $FB31   UNKNOWN  FB31            ; Unknown Fxxx instruction
$698    $3F61   SE       VF, #61         ; Skip if VF == 97
$69A    $80FA   UNKNOWN  80FA            ; Unknown 8xxx instruction
$69C    $2F4E   CALL     $F4E            ; Call subroutine at F4E
$69E    $20C0   CALL     $0C0            ; Call subroutine at 0C0
$6A0    $7104   ADD      V1, #04         ; Add 4 to V1
$6A2    $55D8   UNKNOWN  $55D8           ; Unknown 5xxx instruction
$6A4    $2828   CALL     $828            ; Call subroutine at 828
$6A6    $784D   ADD      V8, #4D         ; Add 77 to V8
$6A8    $CC73   RND      VC, #73         ; VC = random & 73
$6AA    $0B7F   SYS      $B7F            ; System call to B7F
$6AC    $9135   UNKNOWN  $9135           ; Unknown 9xxx instruction
$6AE    $0A18   SYS      $A18            ; System call to A18
$6B0    $54A1   UNKNOWN  $54A1           ; Unknown 5xxx instruction
$6B2    $133B   JP       $33B            ; Jump to 33B
$6B4    $6CBB   LD       VC, #BB         ; Load 187 into VC
$6B6    $182F   JP       $82F            ; Jump to 82F
$6B8    $0648   SYS      $648            ; System call to 648
$6BA    $317D   SE       V1, #7D         ; Skip if V1 == 125
$6BC    $7BA8   ADD      VB, #A8         ; Add 168 to VB
$6BE    $FBD1   UNKNOWN  FBD1            ; Unknown Fxxx instruction
$6C0    $AA55   LD       I, $A55         ; Load A55 into I
$6C2    $26A1   CALL     $6A1            ; Call subroutine at 6A1
$6C4    $CB95   RND      VB, #95         ; VB = random & 95
$6C6    $89A3   XOR      V9, VA          ; V9 ^= VA
$6C8    $0010   SYS      $010            ; System call to 010
$6CA    $E163   UNKNOWN  $E163           ; Unknown Exxx instruction
$6CC    $C8FB   RND      V8, #FB         ; V8 = random & FB
$6CE    $7348   ADD      V3, #48         ; Add 72 to V3
$6D0    $4E09   SNE      VE, #09         ; Skip if VE != 9
$6D2    $4420   SNE      V4, #20         ; Skip if V4 != 32
$6D4    $D2BA   DRW      V2, VB, #A      ; Draw 10-byte sprite at V2, VB
$6D6    $4712   SNE      V7, #12         ; Skip if V7 != 18
$6D8    $EE05   UNKNOWN  $EE05           ; Unknown Exxx instruction
$6DA    $7E8B   ADD      VE, #8B         ; Add 139 to VE
$6DC    $2225   CALL     $225            ; Call subroutine at 225
$6DE    $8D5A   UNKNOWN  8D5A            ; Unknown 8xxx instruction
$6E0    $288D   CALL     $88D            ; Call subroutine at 88D
$6E2    $A92B   LD       I, $92B         ; Load 92B into I
$6E4    $549C   UNKNOWN  $549C           ; Unknown 5xxx instruction
$6E6    $7C65   ADD      VC, #65         ; Add 101 to VC
$6E8    $39DB   SE       V9, #DB         ; Skip if V9 == 219
$6EA    $EEA2   UNKNOWN  $EEA2           ; Unknown Exxx instruction
$6EC    $74E8   ADD      V4, #E8         ; Add 232 to V4
$6EE    $B3A3   JP       V0, $3A3        ; Jump to V0 + 3A3
$6F0    $38B6   SE       V8, #B6         ; Skip if V8 == 182
$6F2    $5522   UNKNOWN  $5522           ; Unknown 5xxx instruction
$6F4    $80C6   SHR      V0              ; V0 >>= 1, VF = LSB
$6F6    $B8FA   JP       V0, $8FA        ; Jump to V0 + 8FA
$6F8    $B42A   JP       V0, $42A        ; Jump to V0 + 42A
$6FA    $1007   JP       $007            ; Jump to 007
$6FC    $4283   SNE      V2, #83         ; Skip if V2 != 131
$6FE    $2E5B   CALL     $E5B            ; Call subroutine at E5B
$700    $79DA   ADD      V9, #DA         ; Add 218 to V9
$702    $F863   UNKNOWN  F863            ; Unknown Fxxx instruction
$704    $369E   SE       V6, #9E         ; Skip if V6 == 158
$706    $16E3   JP       $6E3            ; Jump to 6E3
$708    $14C7   JP       $4C7            ; Jump to 4C7
$70A    $FF00   UNKNOWN  FF00            ; Unknown Fxxx instruction
$70C    $7A02   ADD      VA, #02         ; Add 2 to VA
$70E    $0B47   SYS      $B47            ; System call to B47
$710    $4E9B   SNE      VE, #9B         ; Skip if VE != 155
$712    $F6C8   UNKNOWN  F6C8            ; Unknown Fxxx instruction
$714    $E780   UNKNOWN  $E780           ; Unknown Exxx instruction
$716    $EF83   UNKNOWN  $EF83           ; Unknown Exxx instruction
$718    $BA47   JP       V0, $A47        ; Jump to V0 + A47
$71A    $AE2D   LD       I, $E2D         ; Load E2D into I
$71C    $520A   UNKNOWN  $520A           ; Unknown 5xxx instruction
$71E    $5F34   UNKNOWN  $5F34           ; Unknown 5xxx instruction
$720    $8912   AND      V9, V1          ; V9 &= V1
$722    $5751   UNKNOWN  $5751           ; Unknown 5xxx instruction
$724    $D17E   DRW      V1, V7, #E      ; Draw 14-byte sprite at V1, V7
$726    $A09D   LD       I, $09D         ; Load 09D into I
$728    $5C4F   UNKNOWN  $5C4F           ; Unknown 5xxx instruction
$72A    $F083   UNKNOWN  F083            ; Unknown Fxxx instruction
$72C    $0711   SYS      $711            ; System call to 711
$72E    $0A4D   SYS      $A4D            ; System call to A4D
$730    $8668   UNKNOWN  8668            ; Unknown 8xxx instruction
$732    $4DD3   SNE      VD, #D3         ; Skip if VD != 211
$734    $0318   SYS      $318            ; System call to 318
$736    $B8CF   JP       V0, $8CF        ; Jump to V0 + 8CF
$738    $FD64   UNKNOWN  FD64            ; Unknown Fxxx instruction
$73A    $3E0B   SE       VE, #0B         ; Skip if VE == 11
$73C    $CE56   RND      VE, #56         ; VE = random & 56
$73E    $0C87   SYS      $C87            ; System call to C87
$740    $5E5C   UNKNOWN  $5E5C           ; Unknown 5xxx instruction
$742    $C151   RND      V1, #51         ; V1 = random & 51
$744    $0707   SYS      $707            ; System call to 707
$746    $DA2A   DRW      VA, V2, #A      ; Draw 10-byte sprite at VA, V2
$748    $F0BF   UNKNOWN  F0BF            ; Unknown Fxxx instruction
$74A    $B997   JP       V0, $997        ; Jump to V0 + 997
$74C    $00E9   SYS      $0E9            ; System call to 0E9
$74E    $CA05   RND      VA, #05         ; VA = random & 05
$750    $A50A   LD       I, $50A         ; Load 50A into I
$752    $0011   SYS      $011            ; System call to 011
$754    $52C8   UNKNOWN  $52C8           ; Unknown 5xxx instruction
$756    $34AA   SE       V4, #AA         ; Skip if V4 == 170
$758    $C1AC   RND      V1, #AC         ; V1 = random & AC
$75A    $97E7   UNKNOWN  $97E7           ; Unknown 9xxx instruction
$75C    $DAE0   DRW      VA, VE, #0      ; Draw 0-byte sprite at VA, VE
$75E    $0D26   SYS      $D26            ; System call to D26
$760    $ECE6   UNKNOWN  $ECE6           ; Unknown Exxx instruction
$762    $0ECF   SYS      $ECF            ; System call to ECF
$764    $FF83   UNKNOWN  FF83            ; Unknown Fxxx instruction
$766    $DAB7   DRW      VA, VB, #7      ; Draw 7-byte sprite at VA, VB
$768    $C9B7   RND      V9, #B7         ; V9 = random & B7
$76A    $DF57   DRW      VF, V5, #7      ; Draw 7-byte sprite at VF, V5
$76C    $E6D6   UNKNOWN  $E6D6           ; Unknown Exxx instruction
$76E    $230B   CALL     $30B            ; Call subroutine at 30B
$770    $2205   CALL     $205            ; Call subroutine at 205
$772    $DBAF   DRW      VB, VA, #F      ; Draw 15-byte sprite at VB, VA
$774    $38F9   SE       V8, #F9         ; Skip if V8 == 249
$776    $6A99   LD       VA, #99         ; Load 153 into VA
$778    $1140   JP       $140            ; Jump to 140
$77A    $0615   SYS      $615            ; System call to 615
$77C    $02C3   SYS      $2C3            ; System call to 2C3
$77E    $3BF7   SE       VB, #F7         ; Skip if VB == 247
$780    $EBDB   UNKNOWN  $EBDB           ; Unknown Exxx instruction
$782    $0011   SYS      $011            ; System call to 011
$784    $470A   SNE      V7, #0A         ; Skip if V7 != 10
$786    $7247   ADD      V2, #47         ; Add 71 to V2
$788    $BE33   JP       V0, $E33        ; Jump to V0 + E33
$78A    $EB87   UNKNOWN  $EB87           ; Unknown Exxx instruction
$78C    $2630   CALL     $630            ; Call subroutine at 630
$78E    $470A   SNE      V7, #0A         ; Skip if V7 != 10
$790    $1503   JP       $503            ; Jump to 503
$792    $7476   ADD      V4, #76         ; Add 118 to V4
$794    $96EA   UNKNOWN  $96EA           ; Unknown 9xxx instruction
$796    $577C   UNKNOWN  $577C           ; Unknown 5xxx instruction
$798    $FAE3   UNKNOWN  FAE3            ; Unknown Fxxx instruction
$79A    $DBC0   DRW      VB, VC, #0      ; Draw 0-byte sprite at VB, VC
$79C    $B089   JP       V0, $089        ; Jump to V0 + 089
$79E    $56CE   UNKNOWN  $56CE           ; Unknown 5xxx instruction
$7A0    $811C   UNKNOWN  811C            ; Unknown 8xxx instruction
$7A2    $96E6   UNKNOWN  $96E6           ; Unknown 9xxx instruction
$7A4    $35E5   SE       V5, #E5         ; Skip if V5 == 229
$7A6    $9B96   UNKNOWN  $9B96           ; Unknown 9xxx instruction
$7A8    $472D   SNE      V7, #2D         ; Skip if V7 != 45
$7AA    $9809   UNKNOWN  $9809           ; Unknown 9xxx instruction
$7AC    $262A   CALL     $62A            ; Call subroutine at 62A
$7AE    $B2F5   JP       V0, $2F5        ; Jump to V0 + 2F5
$7B0    $55AE   UNKNOWN  $55AE           ; Unknown 5xxx instruction
$7B2    $4158   SNE      V1, #58         ; Skip if V1 != 88
$7B4    $342E   SE       V4, #2E         ; Skip if V4 == 46
$7B6    $9286   UNKNOWN  $9286           ; Unknown 9xxx instruction
$7B8    $AB18   LD       I, $B18         ; Load B18 into I
$7BA    $AA41   LD       I, $A41         ; Load A41 into I
$7BC    $E8F6   UNKNOWN  $E8F6           ; Unknown Exxx instruction
$7BE    $9F10   SNE      VF, V1          ; Skip if VF != V1
$7C0    $4290   SNE      V2, #90         ; Skip if V2 != 144
$7C2    $FD72   UNKNOWN  FD72            ; Unknown Fxxx instruction
$7C4    $7EEF   ADD      VE, #EF         ; Add 239 to VE
$7C6    $4A6C   SNE      VA, #6C         ; Skip if VA != 108
$7C8    $B737   JP       V0, $737        ; Jump to V0 + 737
$7CA    $4132   SNE      V1, #32         ; Skip if V1 != 50
$7CC    $CBED   RND      VB, #ED         ; VB = random & ED
$7CE    $DB33   DRW      VB, V3, #3      ; Draw 3-byte sprite at VB, V3
$7D0    $7FDA   ADD      VF, #DA         ; Add 218 to VF
$7D2    $CB46   RND      VB, #46         ; VB = random & 46
$7D4    $EABA   UNKNOWN  $EABA           ; Unknown Exxx instruction
$7D6    $8AA0   LD       VA, VA          ; VA = VA
$7D8    $E75F   UNKNOWN  $E75F           ; Unknown Exxx instruction
$7DA    $3744   SE       V7, #44         ; Skip if V7 == 68
$7DC    $040A   SYS      $40A            ; System call to 40A
$7DE    $8C8F   UNKNOWN  8C8F            ; Unknown 8xxx instruction
$7E0    $FF31   UNKNOWN  FF31            ; Unknown Fxxx instruction
$7E2    $F96D   UNKNOWN  F96D            ; Unknown Fxxx instruction
$7E4    $8A54   ADD      VA, V5          ; VA += V5, VF = carry
$7E6    $93C1   UNKNOWN  $93C1           ; Unknown 9xxx instruction
$7E8    $724D   ADD      V2, #4D         ; Add 77 to V2
$7EA    $E177   UNKNOWN  $E177           ; Unknown Exxx instruction
$7EC    $D20F   DRW      V2, V0, #F      ; Draw 15-byte sprite at V2, V0
$7EE    $C5F9   RND      V5, #F9         ; V5 = random & F9
$7F0    $9661   UNKNOWN  $9661           ; Unknown 9xxx instruction
$7F2    $E7CA   UNKNOWN  $E7CA           ; Unknown Exxx instruction
$7F4    $834A   UNKNOWN  834A            ; Unknown 8xxx instruction
$7F6    $F176   UNKNOWN  F176            ; Unknown Fxxx instruction
$7F8    $56FA   UNKNOWN  $56FA           ; Unknown 5xxx instruction
$7FA    $5B6B   UNKNOWN  $5B6B           ; Unknown 5xxx instruction
$7FC    $2ABC   CALL     $ABC            ; Call subroutine at ABC
$7FE    $9487   UNKNOWN  $9487           ; Unknown 9xxx instruction
$800    $9E18   UNKNOWN  $9E18           ; Unknown 9xxx instruction
$802    $3753   SE       V7, #53         ; Skip if V7 == 83
$804    $561C   UNKNOWN  $561C           ; Unknown 5xxx instruction
$806    $8258   UNKNOWN  8258            ; Unknown 8xxx instruction
$808    $63F3   LD       V3, #F3         ; Load 243 into V3
$80A    $CF06   RND      VF, #06         ; VF = random & 06
$80C    $FFA2   UNKNOWN  FFA2            ; Unknown Fxxx instruction
$80E    $9693   UNKNOWN  $9693           ; Unknown 9xxx instruction
$810    $088E   SYS      $88E            ; System call to 88E
$812    $34AD   SE       V4, #AD         ; Skip if V4 == 173
$814    $A67F   LD       I, $67F         ; Load 67F into I
$816    $9FC6   UNKNOWN  $9FC6           ; Unknown 9xxx instruction
$818    $A16D   LD       I, $16D         ; Load 16D into I
$81A    $264F   CALL     $64F            ; Call subroutine at 64F
$81C    $F375   UNKNOWN  F375            ; Unknown Fxxx instruction
$81E    $31B1   SE       V1, #B1         ; Skip if V1 == 177
$820    $0867   SYS      $867            ; System call to 867
$822    $834A   UNKNOWN  834A            ; Unknown 8xxx instruction
$824    $9329   UNKNOWN  $9329           ; Unknown 9xxx instruction
$826    $0A64   SYS      $A64            ; System call to A64
$828    $4DFD   SNE      VD, #FD         ; Skip if VD != 253
$82A    $AA37   LD       I, $A37         ; Load A37 into I
$82C    $60B7   LD       V0, #B7         ; Load 183 into V0
$82E    $9B25   UNKNOWN  $9B25           ; Unknown 9xxx instruction
$830    $7A3C   ADD      VA, #3C         ; Add 60 to VA
$832    $7B97   ADD      VB, #97         ; Add 151 to VB
$834    $B81D   JP       V0, $81D        ; Jump to V0 + 81D
$836    $3779   SE       V7, #79         ; Skip if V7 == 121
$838    $3DFC   SE       VD, #FC         ; Skip if VD == 252
$83A    $9AD6   UNKNOWN  $9AD6           ; Unknown 9xxx instruction
$83C    $0519   SYS      $519            ; System call to 519
$83E    $EC76   UNKNOWN  $EC76           ; Unknown Exxx instruction
$840    $DEDB   DRW      VE, VD, #B      ; Draw 11-byte sprite at VE, VD
$842    $9AB5   UNKNOWN  $9AB5           ; Unknown 9xxx instruction
$844    $55F5   UNKNOWN  $55F5           ; Unknown 5xxx instruction
$846    $6463   LD       V4, #63         ; Load 99 into V4
$848    $1A54   JP       $A54            ; Jump to A54
$84A    $9C43   UNKNOWN  $9C43           ; Unknown 9xxx instruction
$84C    $7C37   ADD      VC, #37         ; Add 55 to VC
$84E    $439E   SNE      V3, #9E         ; Skip if V3 != 158
$850    $3F95   SE       VF, #95         ; Skip if VF == 149
$852    $6E11   LD       VE, #11         ; Load 17 into VE
$854    $BB12   JP       V0, $B12        ; Jump to V0 + B12
$856    $552E   UNKNOWN  $552E           ; Unknown 5xxx instruction
$858    $7128   ADD      V1, #28         ; Add 40 to V1
$85A    $1195   JP       $195            ; Jump to 195
$85C    $E4FE   UNKNOWN  $E4FE           ; Unknown Exxx instruction
$85E    $DD95   DRW      VD, V9, #5      ; Draw 5-byte sprite at VD, V9
$860    $F514   UNKNOWN  F514            ; Unknown Fxxx instruction
$862    $E34E   UNKNOWN  $E34E           ; Unknown Exxx instruction
$864    $EBC7   UNKNOWN  $EBC7           ; Unknown Exxx instruction
$866    $5285   UNKNOWN  $5285           ; Unknown 5xxx instruction
$868    $3170   SE       V1, #70         ; Skip if V1 == 112
$86A    $89F9   UNKNOWN  89F9            ; Unknown 8xxx instruction
$86C    $DF99   DRW      VF, V9, #9      ; Draw 9-byte sprite at VF, V9
$86E    $2D96   CALL     $D96            ; Call subroutine at D96
$870    $6518   LD       V5, #18         ; Load 24 into V5
$872    $12F8   JP       $2F8            ; Jump to 2F8
$874    $C5B5   RND      V5, #B5         ; V5 = random & B5
$876    $F38F   UNKNOWN  F38F            ; Unknown Fxxx instruction
$878    $DC49   DRW      VC, V4, #9      ; Draw 9-byte sprite at VC, V4
$87A    $7DFB   ADD      VD, #FB         ; Add 251 to VD
$87C    $F617   UNKNOWN  F617            ; Unknown Fxxx instruction
$87E    $451B   SNE      V5, #1B         ; Skip if V5 != 27
$880    $5051   UNKNOWN  $5051           ; Unknown 5xxx instruction
$882    $38F8   SE       V8, #F8         ; Skip if V8 == 248
$884    $6449   LD       V4, #49         ; Load 73 into V4
$886    $138A   JP       $38A            ; Jump to 38A
$888    $15CA   JP       $5CA            ; Jump to 5CA
$88A    $ED1A   UNKNOWN  $ED1A           ; Unknown Exxx instruction
$88C    $7412   ADD      V4, #12         ; Add 18 to V4
$88E    $5D04   UNKNOWN  $5D04           ; Unknown 5xxx instruction
$890    $C481   RND      V4, #81         ; V4 = random & 81
$892    $3B38   SE       VB, #38         ; Skip if VB == 56
$894    $C63F   RND      V6, #3F         ; V6 = random & 3F
$896    $EE67   UNKNOWN  $EE67           ; Unknown Exxx instruction
$898    $2FB9   CALL     $FB9            ; Call subroutine at FB9
$89A    $DA2F   DRW      VA, V2, #F      ; Draw 15-byte sprite at VA, V2
$89C    $007C   SYS      $07C            ; System call to 07C
$89E    $8172   AND      V1, V7          ; V1 &= V7
$8A0    $1879   JP       $879            ; Jump to 879
$8A2    $16C0   JP       $6C0            ; Jump to 6C0
$8A4    $6723   LD       V7, #23         ; Load 35 into V7
$8A6    $C470   RND      V4, #70         ; V4 = random & 70
$8A8    $47C5   SNE      V7, #C5         ; Skip if V7 != 197
$8AA    $9305   UNKNOWN  $9305           ; Unknown 9xxx instruction
$8AC    $CF02   RND      VF, #02         ; VF = random & 02
$8AE    $912F   UNKNOWN  $912F           ; Unknown 9xxx instruction
$8B0    $583A   UNKNOWN  $583A           ; Unknown 5xxx instruction
$8B2    $8F4F   UNKNOWN  8F4F            ; Unknown 8xxx instruction
$8B4    $7174   ADD      V1, #74         ; Add 116 to V1
$8B6    $1EB0   JP       $EB0            ; Jump to EB0
$8B8    $D6C3   DRW      V6, VC, #3      ; Draw 3-byte sprite at V6, VC
$8BA    $2A18   CALL     $A18            ; Call subroutine at A18
$8BC    $6251   LD       V2, #51         ; Load 81 into V2
$8BE    $E1F8   UNKNOWN  $E1F8           ; Unknown Exxx instruction
$8C0    $EA8F   UNKNOWN  $EA8F           ; Unknown Exxx instruction
$8C2    $08B3   SYS      $8B3            ; System call to 8B3
$8C4    $DD39   DRW      VD, V3, #9      ; Draw 9-byte sprite at VD, V3
$8C6    $9556   UNKNOWN  $9556           ; Unknown 9xxx instruction
$8C8    $2EB6   CALL     $EB6            ; Call subroutine at EB6
$8CA    $126D   JP       $26D            ; Jump to 26D
$8CC    $4E9D   SNE      VE, #9D         ; Skip if VE != 157
$8CE    $F0D2   UNKNOWN  F0D2            ; Unknown Fxxx instruction
$8D0    $1F52   JP       $F52            ; Jump to F52
$8D2    $1AB4   JP       $AB4            ; Jump to AB4
$8D4    $0514   SYS      $514            ; System call to 514
$8D6    $CA24   RND      VA, #24         ; VA = random & 24
$8D8    $B334   JP       V0, $334        ; Jump to V0 + 334
$8DA    $0C9C   SYS      $C9C            ; System call to C9C
$8DC    $57F1   UNKNOWN  $57F1           ; Unknown 5xxx instruction
$8DE    $C24C   RND      V2, #4C         ; V2 = random & 4C
$8E0    $ED9E   SKP      VD              ; Skip if key VD pressed
$8E2    $E34C   UNKNOWN  $E34C           ; Unknown Exxx instruction
$8E4    $EB9A   UNKNOWN  $EB9A           ; Unknown Exxx instruction
$8E6    $ECE1   UNKNOWN  $ECE1           ; Unknown Exxx instruction
$8E8    $E3B9   UNKNOWN  $E3B9           ; Unknown Exxx instruction
$8EA    $4EF1   SNE      VE, #F1         ; Skip if VE != 241
$8EC    $FC42   UNKNOWN  FC42            ; Unknown Fxxx instruction
$8EE    $4D88   SNE      VD, #88         ; Skip if VD != 136
$8F0    $F54A   UNKNOWN  F54A            ; Unknown Fxxx instruction
$8F2    $2A1F   CALL     $A1F            ; Call subroutine at A1F
$8F4    $A015   LD       I, $015         ; Load 015 into I
$8F6    $6FD6   LD       VF, #D6         ; Load 214 into VF
$8F8    $FEB6   UNKNOWN  FEB6            ; Unknown Fxxx instruction
$8FA    $A7CE   LD       I, $7CE         ; Load 7CE into I
$8FC    $1E5C   JP       $E5C            ; Jump to E5C
$8FE    $EE7A   UNKNOWN  $EE7A           ; Unknown Exxx instruction
$900    $1290   JP       $290            ; Jump to 290
$902    $8C4E   SHL      VC              ; VC <<= 1, VF = MSB
$904    $66C4   LD       V6, #C4         ; Load 196 into V6
$906    $FB7D   UNKNOWN  FB7D            ; Unknown Fxxx instruction
$908    $3F5D   SE       VF, #5D         ; Skip if VF == 93
$90A    $7B62   ADD      VB, #62         ; Add 98 to VB
$90C    $2E40   CALL     $E40            ; Call subroutine at E40
$90E    $6708   LD       V7, #08         ; Load 8 into V7
$910    $855E   SHL      V5              ; V5 <<= 1, VF = MSB
$912    $FD1B   UNKNOWN  FD1B            ; Unknown Fxxx instruction
$914    $C90F   RND      V9, #0F         ; V9 = random & 0F
$916    $247E   CALL     $47E            ; Call subroutine at 47E
$918    $F244   UNKNOWN  F244            ; Unknown Fxxx instruction
$91A    $AEED   LD       I, $EED         ; Load EED into I
$91C    $9686   UNKNOWN  $9686           ; Unknown 9xxx instruction
$91E    $984B   UNKNOWN  $984B           ; Unknown 9xxx instruction
$920    $6430   LD       V4, #30         ; Load 48 into V4
$922    $EB5E   UNKNOWN  $EB5E           ; Unknown Exxx instruction
$924    $3C0B   SE       VC, #0B         ; Skip if VC == 11
$926    $EAC9   UNKNOWN  $EAC9           ; Unknown Exxx instruction
$928    $1851   JP       $851            ; Jump to 851
$92A    $8A46   SHR      VA              ; VA >>= 1, VF = LSB
$92C    $BA24   JP       V0, $A24        ; Jump to V0 + A24
$92E    $9080   SNE      V0, V8          ; Skip if V0 != V8
$930    $16B5   JP       $6B5            ; Jump to 6B5
$932    $17D6   JP       $7D6            ; Jump to 7D6
$934    $C23E   RND      V2, #3E         ; V2 = random & 3E
$936    $3E85   SE       VE, #85         ; Skip if VE == 133
$938    $23FA   CALL     $3FA            ; Call subroutine at 3FA
$93A    $D907   DRW      V9, V0, #7      ; Draw 7-byte sprite at V9, V0
$93C    $E495   UNKNOWN  $E495           ; Unknown Exxx instruction
$93E    $0BCB   SYS      $BCB            ; System call to BCB
$940    $E8F9   UNKNOWN  $E8F9           ; Unknown Exxx instruction
$942    $EFD2   UNKNOWN  $EFD2           ; Unknown Exxx instruction
$944    $D733   DRW      V7, V3, #3      ; Draw 3-byte sprite at V7, V3
$946    $6AFB   LD       VA, #FB         ; Load 251 into VA
$948    $693C   LD       V9, #3C         ; Load 60 into V9
$94A    $53DF   UNKNOWN  $53DF           ; Unknown 5xxx instruction
$94C    $4698   SNE      V6, #98         ; Skip if V6 != 152
$94E    $CF17   RND      VF, #17         ; VF = random & 17
$950    $CB99   RND      VB, #99         ; VB = random & 99
$952    $CB88   RND      VB, #88         ; VB = random & 88
$954    $1DC6   JP       $DC6            ; Jump to DC6
$956    $2BDC   CALL     $BDC            ; Call subroutine at BDC
$958    $36B6   SE       V6, #B6         ; Skip if V6 == 182
$95A    $51CB   UNKNOWN  $51CB           ; Unknown 5xxx instruction
$95C    $713F   ADD      V1, #3F         ; Add 63 to V1
$95E    $4F4A   SNE      VF, #4A         ; Skip if VF != 74
$960    $989D   UNKNOWN  $989D           ; Unknown 9xxx instruction
$962    $0191   SYS      $191            ; System call to 191
$964    $C1C3   RND      V1, #C3         ; V1 = random & C3
$966    $E07A   UNKNOWN  $E07A           ; Unknown Exxx instruction
$968    $68BD   LD       V8, #BD         ; Load 189 into V8
$96A    $5EE4   UNKNOWN  $5EE4           ; Unknown 5xxx instruction
$96C    $BC2A   JP       V0, $C2A        ; Jump to V0 + C2A
$96E    $E768   UNKNOWN  $E768           ; Unknown Exxx instruction
$970    $1B55   JP       $B55            ; Jump to B55
$972    $17C7   JP       $7C7            ; Jump to 7C7
$974    $27C9   CALL     $7C9            ; Call subroutine at 7C9
$976    $D5EE   DRW      V5, VE, #E      ; Draw 14-byte sprite at V5, VE
$978    $BFDA   JP       V0, $FDA        ; Jump to V0 + FDA
$97A    $88D1   OR       V8, VD          ; V8 |= VD
$97C    $E75A   UNKNOWN  $E75A           ; Unknown Exxx instruction
$97E    $23F7   CALL     $3F7            ; Call subroutine at 3F7
$980    $A5CA   LD       I, $5CA         ; Load 5CA into I
$982    $70C6   ADD      V0, #C6         ; Add 198 to V0
$984    $F697   UNKNOWN  F697            ; Unknown Fxxx instruction
$986    $D650   DRW      V6, V5, #0      ; Draw 0-byte sprite at V6, V5
$988    $EEA5   UNKNOWN  $EEA5           ; Unknown Exxx instruction
$98A    $0F1D   SYS      $F1D            ; System call to F1D
$98C    $709A   ADD      V0, #9A         ; Add 154 to V0
$98E    $4263   SNE      V2, #63         ; Skip if V2 != 99
$990    $1855   JP       $855            ; Jump to 855
$992    $A813   LD       I, $813         ; Load 813 into I
$994    $7E46   ADD      VE, #46         ; Add 70 to VE
$996    $4D43   SNE      VD, #43         ; Skip if VD != 67
$998    $5239   UNKNOWN  $5239           ; Unknown 5xxx instruction
$99A    $8F32   AND      VF, V3          ; VF &= V3
$99C    $606C   LD       V0, #6C         ; Load 108 into V0
$99E    $CD83   RND      VD, #83         ; VD = random & 83
$9A0    $C819   RND      V8, #19         ; V8 = random & 19
$9A2    $DB6A   DRW      VB, V6, #A      ; Draw 10-byte sprite at VB, V6
$9A4    $D5EF   DRW      V5, VE, #F      ; Draw 15-byte sprite at V5, VE
$9A6    $26DD   CALL     $6DD            ; Call subroutine at 6DD
$9A8    $F448   UNKNOWN  F448            ; Unknown Fxxx instruction
$9AA    $40A2   SNE      V0, #A2         ; Skip if V0 != 162
$9AC    $159E   JP       $59E            ; Jump to 59E
$9AE    $DE8C   DRW      VE, V8, #C      ; Draw 12-byte sprite at VE, V8
$9B0    $2FE0   CALL     $FE0            ; Call subroutine at FE0
$9B2    $7C41   ADD      VC, #41         ; Add 65 to VC
$9B4    $0E23   SYS      $E23            ; System call to E23
$9B6    $4B98   SNE      VB, #98         ; Skip if VB != 152
$9B8    $50ED   UNKNOWN  $50ED           ; Unknown 5xxx instruction
$9BA    $2E36   CALL     $E36            ; Call subroutine at E36
$9BC    $B3AB   JP       V0, $3AB        ; Jump to V0 + 3AB
$9BE    $DFED   DRW      VF, VE, #D      ; Draw 13-byte sprite at VF, VE
$9C0    $60BB   LD       V0, #BB         ; Load 187 into V0
$9C2    $848D   UNKNOWN  848D            ; Unknown 8xxx instruction
$9C4    $F647   UNKNOWN  F647            ; Unknown Fxxx instruction
$9C6    $656B   LD       V5, #6B         ; Load 107 into V5
$9C8    $551C   UNKNOWN  $551C           ; Unknown 5xxx instruction
$9CA    $05BE   SYS      $5BE            ; System call to 5BE
$9CC    $34AA   SE       V4, #AA         ; Skip if V4 == 170
$9CE    $1C1F   JP       $C1F            ; Jump to C1F
$9D0    $EBB7   UNKNOWN  $EBB7           ; Unknown Exxx instruction
$9D2    $D5B1   DRW      V5, VB, #1      ; Draw 1-byte sprite at V5, VB
$9D4    $6F67   LD       VF, #67         ; Load 103 into VF
$9D6    $CED4   RND      VE, #D4         ; VE = random & D4
$9D8    $DBDE   DRW      VB, VD, #E      ; Draw 14-byte sprite at VB, VD
$9DA    $0EF6   SYS      $EF6            ; System call to EF6
$9DC    $3210   SE       V2, #10         ; Skip if V2 == 16
$9DE    $7131   ADD      V1, #31         ; Add 49 to V1
$9E0    $A22C   LD       I, $22C         ; Load 22C into I
$9E2    $8CB9   UNKNOWN  8CB9            ; Unknown 8xxx instruction
$9E4    $1070   JP       $070            ; Jump to 070
$9E6    $E6F9   UNKNOWN  $E6F9           ; Unknown Exxx instruction
$9E8    $8552   AND      V5, V5          ; V5 &= V5
$9EA    $CC07   RND      VC, #07         ; VC = random & 07
$9EC    $ACC9   LD       I, $CC9         ; Load CC9 into I
$9EE    $94D5   UNKNOWN  $94D5           ; Unknown 9xxx instruction
$9F0    $5B23   UNKNOWN  $5B23           ; Unknown 5xxx instruction
$9F2    $2717   CALL     $717            ; Call subroutine at 717
$9F4    $F9B3   UNKNOWN  F9B3            ; Unknown Fxxx instruction
$9F6    $452A   SNE      V5, #2A         ; Skip if V5 != 42
$9F8    $DDB9   DRW      VD, VB, #9      ; Draw 9-byte sprite at VD, VB
$9FA    $2E27   CALL     $E27            ; Call subroutine at E27
$9FC    $C379   RND      V3, #79         ; V3 = random & 79
$9FE    $B150   JP       V0, $150        ; Jump to V0 + 150
$A00    $595F   UNKNOWN  $595F           ; Unknown 5xxx instruction
$A02    $D3CA   DRW      V3, VC, #A      ; Draw 10-byte sprite at V3, VC
$A04    $36E1   SE       V6, #E1         ; Skip if V6 == 225
$A06    $46D5   SNE      V6, #D5         ; Skip if V6 != 213
$A08    $7DFD   ADD      VD, #FD         ; Add 253 to VD
$A0A    $D518   DRW      V5, V1, #8      ; Draw 8-byte sprite at V5, V1
$A0C    $921D   UNKNOWN  $921D           ; Unknown 9xxx instruction
$A0E    $4204   SNE      V2, #04         ; Skip if V2 != 4
$A10    $F853   UNKNOWN  F853            ; Unknown Fxxx instruction
$A12    $C134   RND      V1, #34         ; V1 = random & 34
$A14    $35DD   SE       V5, #DD         ; Skip if V5 == 221
$A16    $D8DD   DRW      V8, VD, #D      ; Draw 13-byte sprite at V8, VD
$A18    $B842   JP       V0, $842        ; Jump to V0 + 842
$A1A    $93C3   UNKNOWN  $93C3           ; Unknown 9xxx instruction
$A1C    $75DE   ADD      V5, #DE         ; Add 222 to V5
$A1E    $2BDA   CALL     $BDA            ; Call subroutine at BDA
$A20    $5064   UNKNOWN  $5064           ; Unknown 5xxx instruction
$A22    $0732   SYS      $732            ; System call to 732
$A24    $F42D   UNKNOWN  F42D            ; Unknown Fxxx instruction
$A26    $542C   UNKNOWN  $542C           ; Unknown 5xxx instruction
$A28    $F483   UNKNOWN  F483            ; Unknown Fxxx instruction
$A2A    $7D9B   ADD      VD, #9B         ; Add 155 to VD
$A2C    $B062   JP       V0, $062        ; Jump to V0 + 062
$A2E    $3289   SE       V2, #89         ; Skip if V2 == 137
$A30    $E2AD   UNKNOWN  $E2AD           ; Unknown Exxx instruction
$A32    $2412   CALL     $412            ; Call subroutine at 412
$A34    $604F   LD       V0, #4F         ; Load 79 into V0
$A36    $002A   SYS      $02A            ; System call to 02A
$A38    $A26A   LD       I, $26A         ; Load 26A into I
$A3A    $AEE1   LD       I, $EE1         ; Load EE1 into I
$A3C    $099D   SYS      $99D            ; System call to 99D
$A3E    $DAB8   DRW      VA, VB, #8      ; Draw 8-byte sprite at VA, VB
$A40    $DEC7   DRW      VE, VC, #7      ; Draw 7-byte sprite at VE, VC
$A42    $BE93   JP       V0, $E93        ; Jump to V0 + E93
$A44    $07A6   SYS      $7A6            ; System call to 7A6
$A46    $47FA   SNE      V7, #FA         ; Skip if V7 != 250
$A48    $2767   CALL     $767            ; Call subroutine at 767
$A4A    $473F   SNE      V7, #3F         ; Skip if V7 != 63
$A4C    $C1F6   RND      V1, #F6         ; V1 = random & F6
$A4E    $BF12   JP       V0, $F12        ; Jump to V0 + F12
$A50    $B0C9   JP       V0, $0C9        ; Jump to V0 + 0C9
$A52    $86B7   SUBN     V6, VB          ; V6 = VB - V6, VF = !borrow
$A54    $18CB   JP       $8CB            ; Jump to 8CB
$A56    $CD9D   RND      VD, #9D         ; VD = random & 9D
$A58    $CF79   RND      VF, #79         ; VF = random & 79
$A5A    $326A   SE       V2, #6A         ; Skip if V2 == 106
$A5C    $6E01   LD       VE, #01         ; Load 1 into VE
$A5E    $7665   ADD      V6, #65         ; Add 101 to V6
$A60    $93B4   UNKNOWN  $93B4           ; Unknown 9xxx instruction
$A62    $35A1   SE       V5, #A1         ; Skip if V5 == 161
$A64    $1C49   JP       $C49            ; Jump to C49
$A66    $D580   DRW      V5, V8, #0      ; Draw 0-byte sprite at V5, V8
$A68    $6B43   LD       VB, #43         ; Load 67 into VB
$A6A    $388E   SE       V8, #8E         ; Skip if V8 == 142
$A6C    $1563   JP       $563            ; Jump to 563
$A6E    $8DDB   UNKNOWN  8DDB            ; Unknown 8xxx instruction
$A70    $2B47   CALL     $B47            ; Call subroutine at B47
$A72    $A7FC   LD       I, $7FC         ; Load 7FC into I
$A74    $DFD6   DRW      VF, VD, #6      ; Draw 6-byte sprite at VF, VD
$A76    $8316   SHR      V3              ; V3 >>= 1, VF = LSB
$A78    $26A6   CALL     $6A6            ; Call subroutine at 6A6
$A7A    $4BD9   SNE      VB, #D9         ; Skip if VB != 217
$A7C    $1E56   JP       $E56            ; Jump to E56
$A7E    $6948   LD       V9, #48         ; Load 72 into V9
$A80    $7183   ADD      V1, #83         ; Add 131 to V1
$A82    $597F   UNKNOWN  $597F           ; Unknown 5xxx instruction
$A84    $4471   SNE      V4, #71         ; Skip if V4 != 113
$A86    $FE5F   UNKNOWN  FE5F            ; Unknown Fxxx instruction
$A88    $C7E9   RND      V7, #E9         ; V7 = random & E9
$A8A    $632E   LD       V3, #2E         ; Load 46 into V3
$A8C    $2CB8   CALL     $CB8            ; Call subroutine at CB8
$A8E    $F416   UNKNOWN  F416            ; Unknown Fxxx instruction
$A90    $614F   LD       V1, #4F         ; Load 79 into V1
$A92    $61D1   LD       V1, #D1         ; Load 209 into V1
$A94    $F12A   UNKNOWN  F12A            ; Unknown Fxxx instruction
$A96    $A2B5   LD       I, $2B5         ; Load 2B5 into I
$A98    $D1A1   DRW      V1, VA, #1      ; Draw 1-byte sprite at V1, VA
$A9A    $0CB5   SYS      $CB5            ; System call to CB5
$A9C    $E561   UNKNOWN  $E561           ; Unknown Exxx instruction
$A9E    $74C4   ADD      V4, #C4         ; Add 196 to V4
$AA0    $8274   ADD      V2, V7          ; V2 += V7, VF = carry
$AA2    $B382   JP       V0, $382        ; Jump to V0 + 382
$AA4    $8E4E   SHL      VE              ; VE <<= 1, VF = MSB
$AA6    $3755   SE       V7, #55         ; Skip if V7 == 85
$AA8    $0B64   SYS      $B64            ; System call to B64
$AAA    $C3B3   RND      V3, #B3         ; V3 = random & B3
$AAC    $FA6C   UNKNOWN  FA6C            ; Unknown Fxxx instruction
$AAE    $C02F   RND      V0, #2F         ; V0 = random & 2F
$AB0    $3CBC   SE       VC, #BC         ; Skip if VC == 188
$AB2    $8585   SUB      V5, V8          ; V5 -= V8, VF = !borrow
$AB4    $A539   LD       I, $539         ; Load 539 into I
$AB6    $846F   UNKNOWN  846F            ; Unknown 8xxx instruction
$AB8    $FE69   UNKNOWN  FE69            ; Unknown Fxxx instruction
$ABA    $5352   UNKNOWN  $5352           ; Unknown 5xxx instruction
$ABC    $9110   SNE      V1, V1          ; Skip if V1 != V1
$ABE    $DF66   DRW      VF, V6, #6      ; Draw 6-byte sprite at VF, V6
$AC0    $04A4   SYS      $4A4            ; System call to 4A4
$AC2    $829B   UNKNOWN  829B            ; Unknown 8xxx instruction
$AC4    $D0F4   DRW      V0, VF, #4      ; Draw 4-byte sprite at V0, VF
$AC6    $5699   UNKNOWN  $5699           ; Unknown 5xxx instruction
$AC8    $6FD2   LD       VF, #D2         ; Load 210 into VF
$ACA    $DEFD   DRW      VE, VF, #D      ; Draw 13-byte sprite at VE, VF
$ACC    $68EF   LD       V8, #EF         ; Load 239 into V8
$ACE    $B887   JP       V0, $887        ; Jump to V0 + 887
$AD0    $32F5   SE       V2, #F5         ; Skip if V2 == 245
$AD2    $E190   UNKNOWN  $E190           ; Unknown Exxx instruction
$AD4    $9AD9   UNKNOWN  $9AD9           ; Unknown 9xxx instruction
$AD6    $8872   AND      V8, V7          ; V8 &= V7
$AD8    $DB1F   DRW      VB, V1, #F      ; Draw 15-byte sprite at VB, V1
$ADA    $CB25   RND      VB, #25         ; VB = random & 25
$ADC    $BE92   JP       V0, $E92        ; Jump to V0 + E92
$ADE    $A5C1   LD       I, $5C1         ; Load 5C1 into I
$AE0    $79D6   ADD      V9, #D6         ; Add 214 to V9
$AE2    $EEC3   UNKNOWN  $EEC3           ; Unknown Exxx instruction
$AE4    $874B   UNKNOWN  874B            ; Unknown 8xxx instruction
$AE6    $E178   UNKNOWN  $E178           ; Unknown Exxx instruction
$AE8    $E6A3   UNKNOWN  $E6A3           ; Unknown Exxx instruction
$AEA    $0F8D   SYS      $F8D            ; System call to F8D
$AEC    $9DA1   UNKNOWN  $9DA1           ; Unknown 9xxx instruction
$AEE    $C7E9   RND      V7, #E9         ; V7 = random & E9
$AF0    $773C   ADD      V7, #3C         ; Add 60 to V7
$AF2    $B9E3   JP       V0, $9E3        ; Jump to V0 + 9E3
$AF4    $8C85   SUB      VC, V8          ; VC -= V8, VF = !borrow
$AF6    $F3D0   UNKNOWN  F3D0            ; Unknown Fxxx instruction
$AF8    $9BAF   UNKNOWN  $9BAF           ; Unknown 9xxx instruction
$AFA    $4FEA   SNE      VF, #EA         ; Skip if VF != 234
$AFC    $E1EB   UNKNOWN  $E1EB           ; Unknown Exxx instruction
$AFE    $D740   DRW      V7, V4, #0      ; Draw 0-byte sprite at V7, V4
$B00    $35CE   SE       V5, #CE         ; Skip if V5 == 206
$B02    $7DE6   ADD      VD, #E6         ; Add 230 to VD
$B04    $3C5F   SE       VC, #5F         ; Skip if VC == 95
$B06    $529D   UNKNOWN  $529D           ; Unknown 5xxx instruction
$B08    $2171   CALL     $171            ; Call subroutine at 171
$B0A    $4533   SNE      V5, #33         ; Skip if V5 != 51
$B0C    $856E   SHL      V5              ; V5 <<= 1, VF = MSB
$B0E    $72FE   ADD      V2, #FE         ; Add 254 to V2
$B10    $29C6   CALL     $9C6            ; Call subroutine at 9C6
$B12    $CE39   RND      VE, #39         ; VE = random & 39
$B14    $FD00   UNKNOWN  FD00            ; Unknown Fxxx instruction
$B16    $7CCC   ADD      VC, #CC         ; Add 204 to VC
$B18    $0E1C   SYS      $E1C            ; System call to E1C
$B1A    $F432   UNKNOWN  F432            ; Unknown Fxxx instruction
$B1C    $E833   UNKNOWN  $E833           ; Unknown Exxx instruction
$B1E    $94E1   UNKNOWN  $94E1           ; Unknown 9xxx instruction
$B20    $C9A6   RND      V9, #A6         ; V9 = random & A6
$B22    $55BB   UNKNOWN  $55BB           ; Unknown 5xxx instruction
$B24    $514C   UNKNOWN  $514C           ; Unknown 5xxx instruction
$B26    $1E41   JP       $E41            ; Jump to E41
$B28    $F707   LD       V7, DT          ; V7 = delay timer
$B2A    $68BF   LD       V8, #BF         ; Load 191 into V8
$B2C    $B129   JP       V0, $129        ; Jump to V0 + 129
$B2E    $C841   RND      V8, #41         ; V8 = random & 41
$B30    $A84D   LD       I, $84D         ; Load 84D into I
$B32    $CD00   RND      VD, #00         ; VD = random & 00
$B34    $35B4   SE       V5, #B4         ; Skip if V5 == 180
$B36    $75EE   ADD      V5, #EE         ; Add 238 to V5
$B38    $6F91   LD       VF, #91         ; Load 145 into VF
$B3A    $F3FD   UNKNOWN  F3FD            ; Unknown Fxxx instruction
$B3C    $DD79   DRW      VD, V7, #9      ; Draw 9-byte sprite at VD, V7
$B3E    $7EAE   ADD      VE, #AE         ; Add 174 to VE
$B40    $A820   LD       I, $820         ; Load 820 into I
$B42    $B1B6   JP       V0, $1B6        ; Jump to V0 + 1B6
$B44    $3540   SE       V5, #40         ; Skip if V5 == 64
$B46    $D636   DRW      V6, V3, #6      ; Draw 6-byte sprite at V6, V3
$B48    $9C52   UNKNOWN  $9C52           ; Unknown 9xxx instruction
$B4A    $AAA2   LD       I, $AA2         ; Load AA2 into I
$B4C    $F7F8   UNKNOWN  F7F8            ; Unknown Fxxx instruction
$B4E    $F950   UNKNOWN  F950            ; Unknown Fxxx instruction
$B50    $77D1   ADD      V7, #D1         ; Add 209 to V7
$B52    $03B1   SYS      $3B1            ; System call to 3B1
$B54    $C1BC   RND      V1, #BC         ; V1 = random & BC
$B56    $B982   JP       V0, $982        ; Jump to V0 + 982
$B58    $B6C3   JP       V0, $6C3        ; Jump to V0 + 6C3
$B5A    $439A   SNE      V3, #9A         ; Skip if V3 != 154
$B5C    $01AC   SYS      $1AC            ; System call to 1AC
$B5E    $BA02   JP       V0, $A02        ; Jump to V0 + A02
$B60    $7998   ADD      V9, #98         ; Add 152 to V9
$B62    $C764   RND      V7, #64         ; V7 = random & 64
$B64    $BD1C   JP       V0, $D1C        ; Jump to V0 + D1C
$B66    $4534   SNE      V5, #34         ; Skip if V5 != 52
$B68    $73A7   ADD      V3, #A7         ; Add 167 to V3
$B6A    $C6D5   RND      V6, #D5         ; V6 = random & D5
$B6C    $A73D   LD       I, $73D         ; Load 73D into I
$B6E    $6426   LD       V4, #26         ; Load 38 into V4
$B70    $0F9D   SYS      $F9D            ; System call to F9D
$B72    $2691   CALL     $691            ; Call subroutine at 691
$B74    $1C6E   JP       $C6E            ; Jump to C6E
$B76    $8E62   AND      VE, V6          ; VE &= V6
$B78    $06CA   SYS      $6CA            ; System call to 6CA
$B7A    $7C5E   ADD      VC, #5E         ; Add 94 to VC
$B7C    $EA71   UNKNOWN  $EA71           ; Unknown Exxx instruction
$B7E    $C76E   RND      V7, #6E         ; V7 = random & 6E
$B80    $3745   SE       V7, #45         ; Skip if V7 == 69
$B82    $1097   JP       $097            ; Jump to 097
$B84    $0A8E   SYS      $A8E            ; System call to A8E
$B86    $DCE3   DRW      VC, VE, #3      ; Draw 3-byte sprite at VC, VE
$B88    $E628   UNKNOWN  $E628           ; Unknown Exxx instruction
$B8A    $506F   UNKNOWN  $506F           ; Unknown 5xxx instruction
$B8C    $78E1   ADD      V8, #E1         ; Add 225 to V8
$B8E    $5AB9   UNKNOWN  $5AB9           ; Unknown 5xxx instruction
$B90    $B543   JP       V0, $543        ; Jump to V0 + 543
$B92    $E51F   UNKNOWN  $E51F           ; Unknown Exxx instruction
$B94    $84A4   ADD      V4, VA          ; V4 += VA, VF = carry
$B96    $7900   ADD      V9, #00         ; Add 0 to V9
$B98    $32E9   SE       V2, #E9         ; Skip if V2 == 233
$B9A    $78C2   ADD      V8, #C2         ; Add 194 to V8
$B9C    $4E4D   SNE      VE, #4D         ; Skip if VE != 77
$B9E    $96C1   UNKNOWN  $96C1           ; Unknown 9xxx instruction
$BA0    $EE48   UNKNOWN  $EE48           ; Unknown Exxx instruction
$BA2    $DC11   DRW      VC, V1, #1      ; Draw 1-byte sprite at VC, V1
$BA4    $C781   RND      V7, #81         ; V7 = random & 81
$BA6    $F13F   UNKNOWN  F13F            ; Unknown Fxxx instruction
$BA8    $1B14   JP       $B14            ; Jump to B14
$BAA    $EAE2   UNKNOWN  $EAE2           ; Unknown Exxx instruction
$BAC    $C654   RND      V6, #54         ; V6 = random & 54
$BAE    $FAA2   UNKNOWN  FAA2            ; Unknown Fxxx instruction
$BB0    $1394   JP       $394            ; Jump to 394
$BB2    $AF70   LD       I, $F70         ; Load F70 into I
$BB4    $9593   UNKNOWN  $9593           ; Unknown 9xxx instruction
$BB6    $A76C   LD       I, $76C         ; Load 76C into I
$BB8    $F7DF   UNKNOWN  F7DF            ; Unknown Fxxx instruction
$BBA    $FD68   UNKNOWN  FD68            ; Unknown Fxxx instruction
$BBC    $568D   UNKNOWN  $568D           ; Unknown 5xxx instruction
$BBE    $231C   CALL     $31C            ; Call subroutine at 31C
$BC0    $599B   UNKNOWN  $599B           ; Unknown 5xxx instruction
$BC2    $D6AB   DRW      V6, VA, #B      ; Draw 11-byte sprite at V6, VA
$BC4    $D171   DRW      V1, V7, #1      ; Draw 1-byte sprite at V1, V7
$BC6    $31DD   SE       V1, #DD         ; Skip if V1 == 221
$BC8    $0192   SYS      $192            ; System call to 192
$BCA    $5FD2   UNKNOWN  $5FD2           ; Unknown 5xxx instruction
$BCC    $8725   SUB      V7, V2          ; V7 -= V2, VF = !borrow
$BCE    $FE23   UNKNOWN  FE23            ; Unknown Fxxx instruction
$BD0    $1750   JP       $750            ; Jump to 750
$BD2    $BAFE   JP       V0, $AFE        ; Jump to V0 + AFE
$BD4    $D1A4   DRW      V1, VA, #4      ; Draw 4-byte sprite at V1, VA
$BD6    $DEC2   DRW      VE, VC, #2      ; Draw 2-byte sprite at VE, VC
$BD8    $2296   CALL     $296            ; Call subroutine at 296
$BDA    $9E6A   UNKNOWN  $9E6A           ; Unknown 9xxx instruction
$BDC    $9833   UNKNOWN  $9833           ; Unknown 9xxx instruction
$BDE    $5E02   UNKNOWN  $5E02           ; Unknown 5xxx instruction
$BE0    $C912   RND      V9, #12         ; V9 = random & 12
$BE2    $DB3E   DRW      VB, V3, #E      ; Draw 14-byte sprite at VB, V3
$BE4    $B309   JP       V0, $309        ; Jump to V0 + 309
$BE6    $9787   UNKNOWN  $9787           ; Unknown 9xxx instruction
$BE8    $271A   CALL     $71A            ; Call subroutine at 71A
$BEA    $8BBE   SHL      VB              ; VB <<= 1, VF = MSB
$BEC    $12AA   JP       $2AA            ; Jump to 2AA
$BEE    $D718   DRW      V7, V1, #8      ; Draw 8-byte sprite at V7, V1
$BF0    $C8EE   RND      V8, #EE         ; V8 = random & EE
$BF2    $1D49   JP       $D49            ; Jump to D49
$BF4    $DA34   DRW      VA, V3, #4      ; Draw 4-byte sprite at VA, V3
$BF6    $B326   JP       V0, $326        ; Jump to V0 + 326
$BF8    $DE7A   DRW      VE, V7, #A      ; Draw 10-byte sprite at VE, V7
$BFA    $1112   JP       $112            ; Jump to 112
$BFC    $99C4   UNKNOWN  $99C4           ; Unknown 9xxx instruction
$BFE    $F26A   UNKNOWN  F26A            ; Unknown Fxxx instruction
$C00    $7992   ADD      V9, #92         ; Add 146 to V9
$C02    $5E40   SE       VE, V4          ; Skip if VE == V4
$C04    $6325   LD       V3, #25         ; Load 37 into V3
$C06    $2FAA   CALL     $FAA            ; Call subroutine at FAA
$C08    $1A5B   JP       $A5B            ; Jump to A5B
$C0A    $D4E8   DRW      V4, VE, #8      ; Draw 8-byte sprite at V4, VE
$C0C    $6E04   LD       VE, #04         ; Load 4 into VE
$C0E    $298B   CALL     $98B            ; Call subroutine at 98B
$C10    $0856   SYS      $856            ; System call to 856
$C12    $A8B3   LD       I, $8B3         ; Load 8B3 into I
$C14    $038C   SYS      $38C            ; System call to 38C
$C16    $04E7   SYS      $4E7            ; System call to 4E7
$C18    $4C92   SNE      VC, #92         ; Skip if VC != 146
$C1A    $4811   SNE      V8, #11         ; Skip if V8 != 17
$C1C    $B0E6   JP       V0, $0E6        ; Jump to V0 + 0E6
$C1E    $76D4   ADD      V6, #D4         ; Add 212 to V6
$C20    $8DF1   OR       VD, VF          ; VD |= VF
$C22    $9ACA   UNKNOWN  $9ACA           ; Unknown 9xxx instruction
$C24    $AB50   LD       I, $B50         ; Load B50 into I
$C26    $969C   UNKNOWN  $969C           ; Unknown 9xxx instruction
$C28    $8643   XOR      V6, V4          ; V6 ^= V4
$C2A    $4950   SNE      V9, #50         ; Skip if V9 != 80
$C2C    $CDDB   RND      VD, #DB         ; VD = random & DB
$C2E    $1373   JP       $373            ; Jump to 373
$C30    $2489   CALL     $489            ; Call subroutine at 489
$C32    $0970   SYS      $970            ; System call to 970
$C34    $A1C8   LD       I, $1C8         ; Load 1C8 into I
$C36    $C3BE   RND      V3, #BE         ; V3 = random & BE
$C38    $4AE6   SNE      VA, #E6         ; Skip if VA != 230
$C3A    $7F4F   ADD      VF, #4F         ; Add 79 to VF
$C3C    $654E   LD       V5, #4E         ; Load 78 into V5
$C3E    $957B   UNKNOWN  $957B           ; Unknown 9xxx instruction
$C40    $448F   SNE      V4, #8F         ; Skip if V4 != 143
$C42    $061A   SYS      $61A            ; System call to 61A
$C44    $CA52   RND      VA, #52         ; VA = random & 52
$C46    $8155   SUB      V1, V5          ; V1 -= V5, VF = !borrow
$C48    $DAE3   DRW      VA, VE, #3      ; Draw 3-byte sprite at VA, VE
$C4A    $B852   JP       V0, $852        ; Jump to V0 + 852
$C4C    $D54D   DRW      V5, V4, #D      ; Draw 13-byte sprite at V5, V4
$C4E    $1BAF   JP       $BAF            ; Jump to BAF
$C50    $2B01   CALL     $B01            ; Call subroutine at B01
$C52    $44F3   SNE      V4, #F3         ; Skip if V4 != 243
$C54    $C9BB   RND      V9, #BB         ; V9 = random & BB
$C56    $6D56   LD       VD, #56         ; Load 86 into VD
$C58    $5051   UNKNOWN  $5051           ; Unknown 5xxx instruction
$C5A    $C5D4   RND      V5, #D4         ; V5 = random & D4
$C5C    $F7CC   UNKNOWN  F7CC            ; Unknown Fxxx instruction
$C5E    $9634   UNKNOWN  $9634           ; Unknown 9xxx instruction
$C60    $AB82   LD       I, $B82         ; Load B82 into I
$C62    $68D5   LD       V8, #D5         ; Load 213 into V8
$C64    $8C6C   UNKNOWN  8C6C            ; Unknown 8xxx instruction
$C66    $F50E   UNKNOWN  F50E            ; Unknown Fxxx instruction
$C68    $1B23   JP       $B23            ; Jump to B23
$C6A    $3965   SE       V9, #65         ; Skip if V9 == 101
$C6C    $73F6   ADD      V3, #F6         ; Add 246 to V3
$C6E    $4D65   SNE      VD, #65         ; Skip if VD != 101
$C70    $94C6   UNKNOWN  $94C6           ; Unknown 9xxx instruction
$C72    $61BC   LD       V1, #BC         ; Load 188 into V1
$C74    $8740   LD       V7, V4          ; V7 = V4
$C76    $C670   RND      V6, #70         ; V6 = random & 70
$C78    $D5B3   DRW      V5, VB, #3      ; Draw 3-byte sprite at V5, VB
$C7A    $6A0B   LD       VA, #0B         ; Load 11 into VA
$C7C    $3E9D   SE       VE, #9D         ; Skip if VE == 157
$C7E    $59AC   UNKNOWN  $59AC           ; Unknown 5xxx instruction
$C80    $C27C   RND      V2, #7C         ; V2 = random & 7C
$C82    $F54B   UNKNOWN  F54B            ; Unknown Fxxx instruction
$C84    $A31F   LD       I, $31F         ; Load 31F into I
$C86    $6336   LD       V3, #36         ; Load 54 into V3
$C88    $6B44   LD       VB, #44         ; Load 68 into VB
$C8A    $5C5E   UNKNOWN  $5C5E           ; Unknown 5xxx instruction
$C8C    $4DCD   SNE      VD, #CD         ; Skip if VD != 205
$C8E    $FF17   UNKNOWN  FF17            ; Unknown Fxxx instruction
$C90    $EA46   UNKNOWN  $EA46           ; Unknown Exxx instruction
$C92    $67E9   LD       V7, #E9         ; Load 233 into V7
$C94    $F243   UNKNOWN  F243            ; Unknown Fxxx instruction
$C96    $B810   JP       V0, $810        ; Jump to V0 + 810
$C98    $4D1C   SNE      VD, #1C         ; Skip if VD != 28
$C9A    $0521   SYS      $521            ; System call to 521
$C9C    $8F7D   UNKNOWN  8F7D            ; Unknown 8xxx instruction
$C9E    $A9C1   LD       I, $9C1         ; Load 9C1 into I
$CA0    $06F9   SYS      $6F9            ; System call to 6F9
$CA2    $C368   RND      V3, #68         ; V3 = random & 68
$CA4    $2C94   CALL     $C94            ; Call subroutine at C94
$CA6    $3AA1   SE       VA, #A1         ; Skip if VA == 161
$CA8    $FC82   UNKNOWN  FC82            ; Unknown Fxxx instruction
$CAA    $35BD   SE       V5, #BD         ; Skip if V5 == 189
$CAC    $055A   SYS      $55A            ; System call to 55A
$CAE    $EE07   UNKNOWN  $EE07           ; Unknown Exxx instruction
$CB0    $8A36   SHR      VA              ; VA >>= 1, VF = LSB
$CB2    $AC91   LD       I, $C91         ; Load C91 into I
$CB4    $ECCB   UNKNOWN  $ECCB           ; Unknown Exxx instruction
$CB6    $A42B   LD       I, $42B         ; Load 42B into I
$CB8    $349B   SE       V4, #9B         ; Skip if V4 == 155
$CBA    $CCC8   RND      VC, #C8         ; VC = random & C8
$CBC    $9D04   UNKNOWN  $9D04           ; Unknown 9xxx instruction
$CBE    $FD59   UNKNOWN  FD59            ; Unknown Fxxx instruction
$CC0    $17F5   JP       $7F5            ; Jump to 7F5
$CC2    $7418   ADD      V4, #18         ; Add 24 to V4
$CC4    $D210   DRW      V2, V1, #0      ; Draw 0-byte sprite at V2, V1
$CC6    $F9AF   UNKNOWN  F9AF            ; Unknown Fxxx instruction
$CC8    $BD2C   JP       V0, $D2C        ; Jump to V0 + D2C
$CCA    $2233   CALL     $233            ; Call subroutine at 233
$CCC    $345F   SE       V4, #5F         ; Skip if V4 == 95
$CCE    $EF38   UNKNOWN  $EF38           ; Unknown Exxx instruction
$CD0    $A724   LD       I, $724         ; Load 724 into I
$CD2    $7F52   ADD      VF, #52         ; Add 82 to VF
$CD4    $18B1   JP       $8B1            ; Jump to 8B1
$CD6    $35B9   SE       V5, #B9         ; Skip if V5 == 185
$CD8    $598E   UNKNOWN  $598E           ; Unknown 5xxx instruction
$CDA    $A6A8   LD       I, $6A8         ; Load 6A8 into I
$CDC    $F20F   UNKNOWN  F20F            ; Unknown Fxxx instruction
$CDE    $D162   DRW      V1, V6, #2      ; Draw 2-byte sprite at V1, V6
$CE0    $5CCE   UNKNOWN  $5CCE           ; Unknown 5xxx instruction
$CE2    $BF95   JP       V0, $F95        ; Jump to V0 + F95
$CE4    $C51B   RND      V5, #1B         ; V5 = random & 1B
$CE6    $A801   LD       I, $801         ; Load 801 into I
$CE8    $D20E   DRW      V2, V0, #E      ; Draw 14-byte sprite at V2, V0
$CEA    $6FEF   LD       VF, #EF         ; Load 239 into VF
$CEC    $4E7C   SNE      VE, #7C         ; Skip if VE != 124
$CEE    $0B3C   SYS      $B3C            ; System call to B3C
$CF0    $6DDC   LD       VD, #DC         ; Load 220 into VD
$CF2    $9B20   SNE      VB, V2          ; Skip if VB != V2
$CF4    $2C4F   CALL     $C4F            ; Call subroutine at C4F
$CF6    $8E93   XOR      VE, V9          ; VE ^= V9
$CF8    $12CF   JP       $2CF            ; Jump to 2CF
$CFA    $7DB2   ADD      VD, #B2         ; Add 178 to VD
$CFC    $99CD   UNKNOWN  $99CD           ; Unknown 9xxx instruction
$CFE    $EB53   UNKNOWN  $EB53           ; Unknown Exxx instruction
$D00    $0524   SYS      $524            ; System call to 524
$D02    $00A7   SYS      $0A7            ; System call to 0A7
$D04    $E200   UNKNOWN  $E200           ; Unknown Exxx instruction
$D06    $AB35   LD       I, $B35         ; Load B35 into I
$D08    $377A   SE       V7, #7A         ; Skip if V7 == 122
$D0A    $738F   ADD      V3, #8F         ; Add 143 to V3
$D0C    $6263   LD       V2, #63         ; Load 99 into V2
$D0E    $C98C   RND      V9, #8C         ; V9 = random & 8C
$D10    $2E20   CALL     $E20            ; Call subroutine at E20
$D12    $941F   UNKNOWN  $941F           ; Unknown 9xxx instruction
$D14    $EB67   UNKNOWN  $EB67           ; Unknown Exxx instruction
$D16    $607D   LD       V0, #7D         ; Load 125 into V0
$D18    $A074   LD       I, $074         ; Load 074 into I
$D1A    $691C   LD       V9, #1C         ; Load 28 into V9
$D1C    $5AB0   SE       VA, VB          ; Skip if VA == VB
$D1E    $8882   AND      V8, V8          ; V8 &= V8
$D20    $F664   UNKNOWN  F664            ; Unknown Fxxx instruction
$D22    $10F1   JP       $0F1            ; Jump to 0F1
$D24    $0EDC   SYS      $EDC            ; System call to EDC
$D26    $B013   JP       V0, $013        ; Jump to V0 + 013
$D28    $8EB2   AND      VE, VB          ; VE &= VB
$D2A    $BA20   JP       V0, $A20        ; Jump to V0 + A20
$D2C    $FBBC   UNKNOWN  FBBC            ; Unknown Fxxx instruction
$D2E    $BC7A   JP       V0, $C7A        ; Jump to V0 + C7A
$D30    $DF52   DRW      VF, V5, #2      ; Draw 2-byte sprite at VF, V5
$D32    $5FBC   UNKNOWN  $5FBC           ; Unknown 5xxx instruction
$D34    $3740   SE       V7, #40         ; Skip if V7 == 64
$D36    $026B   SYS      $26B            ; System call to 26B
$D38    $A250   LD       I, $250         ; Load 250 into I
$D3A    $2F7C   CALL     $F7C            ; Call subroutine at F7C
$D3C    $1611   JP       $611            ; Jump to 611
$D3E    $3CCF   SE       VC, #CF         ; Skip if VC == 207
$D40    $BAB0   JP       V0, $AB0        ; Jump to V0 + AB0
$D42    $1E3C   JP       $E3C            ; Jump to E3C
$D44    $80F7   SUBN     V0, VF          ; V0 = VF - V0, VF = !borrow
$D46    $8ABC   UNKNOWN  8ABC            ; Unknown 8xxx instruction
$D48    $F0E8   UNKNOWN  F0E8            ; Unknown Fxxx instruction
$D4A    $DBD5   DRW      VB, VD, #5      ; Draw 5-byte sprite at VB, VD
$D4C    $BD80   JP       V0, $D80        ; Jump to V0 + D80
$D4E    $E406   UNKNOWN  $E406           ; Unknown Exxx instruction
$D50    $3B88   SE       VB, #88         ; Skip if VB == 136
$D52    $4FC8   SNE      VF, #C8         ; Skip if VF != 200
$D54    $80B5   SUB      V0, VB          ; V0 -= VB, VF = !borrow
$D56    $9CFB   UNKNOWN  $9CFB           ; Unknown 9xxx instruction
$D58    $15FF   JP       $5FF            ; Jump to 5FF
$D5A    $6226   LD       V2, #26         ; Load 38 into V2
$D5C    $A35E   LD       I, $35E         ; Load 35E into I
$D5E    $10C1   JP       $0C1            ; Jump to 0C1
$D60    $9BCF   UNKNOWN  $9BCF           ; Unknown 9xxx instruction
$D62    $CE3B   RND      VE, #3B         ; VE = random & 3B
$D64    $B228   JP       V0, $228        ; Jump to V0 + 228
$D66    $A530   LD       I, $530         ; Load 530 into I
$D68    $1A46   JP       $A46            ; Jump to A46
$D6A    $BB00   JP       V0, $B00        ; Jump to V0 + B00
$D6C    $B7DD   JP       V0, $7DD        ; Jump to V0 + 7DD
$D6E    $75A0   ADD      V5, #A0         ; Add 160 to V5
$D70    $8710   LD       V7, V1          ; V7 = V1
$D72    $0A88   SYS      $A88            ; System call to A88
$D74    $172E   JP       $72E            ; Jump to 72E
$D76    $EC79   UNKNOWN  $EC79           ; Unknown Exxx instruction
$D78    $78D8   ADD      V8, #D8         ; Add 216 to V8
$D7A    $BAA9   JP       V0, $AA9        ; Jump to V0 + AA9
$D7C    $D1A7   DRW      V1, VA, #7      ; Draw 7-byte sprite at V1, VA
$D7E    $A8BF   LD       I, $8BF         ; Load 8BF into I
$D80    $949A   UNKNOWN  $949A           ; Unknown 9xxx instruction
$D82    $08EC   SYS      $8EC            ; System call to 8EC
$D84    $A007   LD       I, $007         ; Load 007 into I
$D86    $3017   SE       V0, #17         ; Skip if V0 == 23
$D88    $87BE   SHL      V7              ; V7 <<= 1, VF = MSB
$D8A    $2F84   CALL     $F84            ; Call subroutine at F84
$D8C    $1B6F   JP       $B6F            ; Jump to B6F
$D8E    $D985   DRW      V9, V8, #5      ; Draw 5-byte sprite at V9, V8
$D90    $826D   UNKNOWN  826D            ; Unknown 8xxx instruction
$D92    $2333   CALL     $333            ; Call subroutine at 333
$D94    $B622   JP       V0, $622        ; Jump to V0 + 622
$D96    $1D5B   JP       $D5B            ; Jump to D5B
$D98    $560A   UNKNOWN  $560A           ; Unknown 5xxx instruction
$D9A    $18ED   JP       $8ED            ; Jump to 8ED
$D9C    $A067   LD       I, $067         ; Load 067 into I
$D9E    $57C4   UNKNOWN  $57C4           ; Unknown 5xxx instruction
$DA0    $7C18   ADD      VC, #18         ; Add 24 to VC
$DA2    $E0DF   UNKNOWN  $E0DF           ; Unknown Exxx instruction
$DA4    $0E94   SYS      $E94            ; System call to E94
$DA6    $7957   ADD      V9, #57         ; Add 87 to V9
$DA8    $009B   SYS      $09B            ; System call to 09B
$DAA    $DA53   DRW      VA, V5, #3      ; Draw 3-byte sprite at VA, V5
$DAC    $45B0   SNE      V5, #B0         ; Skip if V5 != 176
$DAE    $6554   LD       V5, #54         ; Load 84 into V5
$DB0    $D5F3   DRW      V5, VF, #3      ; Draw 3-byte sprite at V5, VF
$DB2    $6BD0   LD       VB, #D0         ; Load 208 into VB
$DB4    $2C71   CALL     $C71            ; Call subroutine at C71
$DB6    $96EF   UNKNOWN  $96EF           ; Unknown 9xxx instruction
$DB8    $E940   UNKNOWN  $E940           ; Unknown Exxx instruction
$DBA    $5CBB   UNKNOWN  $5CBB           ; Unknown 5xxx instruction
$DBC    $E447   UNKNOWN  $E447           ; Unknown Exxx instruction
$DBE    $A259   LD       I, $259         ; Load 259 into I
$DC0    $2E8C   CALL     $E8C            ; Call subroutine at E8C
$DC2    $C550   RND      V5, #50         ; V5 = random & 50
$DC4    $CBBE   RND      VB, #BE         ; VB = random & BE
$DC6    $F24F   UNKNOWN  F24F            ; Unknown Fxxx instruction
$DC8    $4DCA   SNE      VD, #CA         ; Skip if VD != 202
$DCA    $94D8   UNKNOWN  $94D8           ; Unknown 9xxx instruction
$DCC    $AC1D   LD       I, $C1D         ; Load C1D into I
$DCE    $6A8F   LD       VA, #8F         ; Load 143 into VA
$DD0    $EDD1   UNKNOWN  $EDD1           ; Unknown Exxx instruction
$DD2    $CA52   RND      VA, #52         ; VA = random & 52
$DD4    $B117   JP       V0, $117        ; Jump to V0 + 117
$DD6    $7272   ADD      V2, #72         ; Add 114 to V2
$DD8    $D84B   DRW      V8, V4, #B      ; Draw 11-byte sprite at V8, V4
$DDA    $0BAA   SYS      $BAA            ; System call to BAA
$DDC    $F6E1   UNKNOWN  F6E1            ; Unknown Fxxx instruction
$DDE    $4E21   SNE      VE, #21         ; Skip if VE != 33
$DE0    $F16E   UNKNOWN  F16E            ; Unknown Fxxx instruction
$DE2    $784E   ADD      V8, #4E         ; Add 78 to V8
$DE4    $C06A   RND      V0, #6A         ; V0 = random & 6A
$DE6    $2B6F   CALL     $B6F            ; Call subroutine at B6F
$DE8    $C3EB   RND      V3, #EB         ; V3 = random & EB
$DEA    $D03D   DRW      V0, V3, #D      ; Draw 13-byte sprite at V0, V3
$DEC    $50A2   UNKNOWN  $50A2           ; Unknown 5xxx instruction
$DEE    $1964   JP       $964            ; Jump to 964
$DF0    $B160   JP       V0, $160        ; Jump to V0 + 160
$DF2    $0F3F   SYS      $F3F            ; System call to F3F
$DF4    $C944   RND      V9, #44         ; V9 = random & 44
$DF6    $8CBF   UNKNOWN  8CBF            ; Unknown 8xxx instruction
$DF8    $2747   CALL     $747            ; Call subroutine at 747
$DFA    $12EB   JP       $2EB            ; Jump to 2EB
$DFC    $5B11   UNKNOWN  $5B11           ; Unknown 5xxx instruction
$DFE    $E166   UNKNOWN  $E166           ; Unknown Exxx instruction
$E00    $E2F8   UNKNOWN  $E2F8           ; Unknown Exxx instruction
$E02    $891E   SHL      V9              ; V9 <<= 1, VF = MSB
$E04    $36E3   SE       V6, #E3         ; Skip if V6 == 227
$E06    $83A2   AND      V3, VA          ; V3 &= VA
$E08    $D28D   DRW      V2, V8, #D      ; Draw 13-byte sprite at V2, V8
$E0A    $CA64   RND      VA, #64         ; VA = random & 64
$E0C    $7948   ADD      V9, #48         ; Add 72 to V9
$E0E    $4FFC   SNE      VF, #FC         ; Skip if VF != 252
$E10    $A63A   LD       I, $63A         ; Load 63A into I
$E12    $BD54   JP       V0, $D54        ; Jump to V0 + D54
$E14    $5D3E   UNKNOWN  $5D3E           ; Unknown 5xxx instruction
$E16    $CF8B   RND      VF, #8B         ; VF = random & 8B
$E18    $0968   SYS      $968            ; System call to 968
$E1A    $4708   SNE      V7, #08         ; Skip if V7 != 8
$E1C    $974A   UNKNOWN  $974A           ; Unknown 9xxx instruction
$E1E    $8953   XOR      V9, V5          ; V9 ^= V5
$E20    $B4F9   JP       V0, $4F9        ; Jump to V0 + 4F9
$E22    $9961   UNKNOWN  $9961           ; Unknown 9xxx instruction
$E24    $3E9F   SE       VE, #9F         ; Skip if VE == 159
$E26    $9D18   UNKNOWN  $9D18           ; Unknown 9xxx instruction
$E28    $CC1E   RND      VC, #1E         ; VC = random & 1E
$E2A    $4BA2   SNE      VB, #A2         ; Skip if VB != 162
$E2C    $CD62   RND      VD, #62         ; VD = random & 62
$E2E    $B0E3   JP       V0, $0E3        ; Jump to V0 + 0E3
$E30    $D65A   DRW      V6, V5, #A      ; Draw 10-byte sprite at V6, V5
$E32    $D18F   DRW      V1, V8, #F      ; Draw 15-byte sprite at V1, V8
$E34    $84D4   ADD      V4, VD          ; V4 += VD, VF = carry
$E36    $200F   CALL     $00F            ; Call subroutine at 00F
$E38    $1121   JP       $121            ; Jump to 121
$E3A    $B1A4   JP       V0, $1A4        ; Jump to V0 + 1A4
$E3C    $21B7   CALL     $1B7            ; Call subroutine at 1B7
$E3E    $24C7   CALL     $4C7            ; Call subroutine at 4C7
$E40    $21DA   CALL     $1DA            ; Call subroutine at 1DA
$E42    $F793   UNKNOWN  F793            ; Unknown Fxxx instruction
$E44    $10F2   JP       $0F2            ; Jump to 0F2
$E46    $8BE8   UNKNOWN  8BE8            ; Unknown 8xxx instruction
$E48    $15B6   JP       $5B6            ; Jump to 5B6
$E4A    $2746   CALL     $746            ; Call subroutine at 746
$E4C    $91B6   UNKNOWN  $91B6           ; Unknown 9xxx instruction
$E4E    $7564   ADD      V5, #64         ; Add 100 to V5
$E50    $858C   UNKNOWN  858C            ; Unknown 8xxx instruction
$E52    $5F2A   UNKNOWN  $5F2A           ; Unknown 5xxx instruction
$E54    $40D5   SNE      V0, #D5         ; Skip if V0 != 213
$E56    $9208   UNKNOWN  $9208           ; Unknown 9xxx instruction
$E58    $E0C8   UNKNOWN  $E0C8           ; Unknown Exxx instruction
$E5A    $0770   SYS      $770            ; System call to 770
$E5C    $E69F   UNKNOWN  $E69F           ; Unknown Exxx instruction
$E5E    $EFFF   UNKNOWN  $EFFF           ; Unknown Exxx instruction
$E60    $35D4   SE       V5, #D4         ; Skip if V5 == 212
$E62    $CE19   RND      VE, #19         ; VE = random & 19
$E64    $5218   UNKNOWN  $5218           ; Unknown 5xxx instruction
$E66    $163C   JP       $63C            ; Jump to 63C
$E68    $0B6A   SYS      $B6A            ; System call to B6A
$E6A    $77DC   ADD      V7, #DC         ; Add 220 to V7
$E6C    $F8CE   UNKNOWN  F8CE            ; Unknown Fxxx instruction
$E6E    $8295   SUB      V2, V9          ; V2 -= V9, VF = !borrow
$E70    $5171   UNKNOWN  $5171           ; Unknown 5xxx instruction
$E72    $9875   UNKNOWN  $9875           ; Unknown 9xxx instruction
$E74    $93E0   SNE      V3, VE          ; Skip if V3 != VE
$E76    $440C   SNE      V4, #0C         ; Skip if V4 != 12
$E78    $9B59   UNKNOWN  $9B59           ; Unknown 9xxx instruction
$E7A    $1BF7   JP       $BF7            ; Jump to BF7
$E7C    $F3FE   UNKNOWN  F3FE            ; Unknown Fxxx instruction
$E7E    $1512   JP       $512            ; Jump to 512
$E80    $4B08   SNE      VB, #08         ; Skip if VB != 8
$E82    $DCD8   DRW      VC, VD, #8      ; Draw 8-byte sprite at VC, VD
$E84    $AED7   LD       I, $ED7         ; Load ED7 into I
$E86    $CED3   RND      VE, #D3         ; VE = random & D3
$E88    $52A7   UNKNOWN  $52A7           ; Unknown 5xxx instruction
$E8A    $9FE6   UNKNOWN  $9FE6           ; Unknown 9xxx instruction
$E8C    $EF9F   UNKNOWN  $EF9F           ; Unknown Exxx instruction
$E8E    $119B   JP       $19B            ; Jump to 19B
$E90    $C7C2   RND      V7, #C2         ; V7 = random & C2
$E92    $E77B   UNKNOWN  $E77B           ; Unknown Exxx instruction
$E94    $0AD6   SYS      $AD6            ; System call to AD6
$E96    $3066   SE       V0, #66         ; Skip if V0 == 102
$E98    $1F93   JP       $F93            ; Jump to F93
$E9A    $371C   SE       V7, #1C         ; Skip if V7 == 28
$E9C    $F0C4   UNKNOWN  F0C4            ; Unknown Fxxx instruction
$E9E    $2203   CALL     $203            ; Call subroutine at 203
$EA0    $9FB7   UNKNOWN  $9FB7           ; Unknown 9xxx instruction
$EA2    $1C5B   JP       $C5B            ; Jump to C5B
$EA4    $6C3C   LD       VC, #3C         ; Load 60 into VC
$EA6    $BFA6   JP       V0, $FA6        ; Jump to V0 + FA6
$EA8    $0FAA   SYS      $FAA            ; System call to FAA
$EAA    $37B2   SE       V7, #B2         ; Skip if V7 == 178
$EAC    $7192   ADD      V1, #92         ; Add 146 to V1
$EAE    $BE96   JP       V0, $E96        ; Jump to V0 + E96
$EB0    $084F   SYS      $84F            ; System call to 84F
$EB2    $DC9F   DRW      VC, V9, #F      ; Draw 15-byte sprite at VC, V9
$EB4    $EB25   UNKNOWN  $EB25           ; Unknown Exxx instruction
$EB6    $8DA0   LD       VD, VA          ; VD = VA
$EB8    $5049   UNKNOWN  $5049           ; Unknown 5xxx instruction
$EBA    $0FF9   SYS      $FF9            ; System call to FF9
$EBC    $E5C7   UNKNOWN  $E5C7           ; Unknown Exxx instruction
$EBE    $1E91   JP       $E91            ; Jump to E91
$EC0    $44C1   SNE      V4, #C1         ; Skip if V4 != 193
$EC2    $0FD9   SYS      $FD9            ; System call to FD9
$EC4    $BBF7   JP       V0, $BF7        ; Jump to V0 + BF7
$EC6    $AC5E   LD       I, $C5E         ; Load C5E into I
$EC8    $115A   JP       $15A            ; Jump to 15A
$ECA    $87CD   UNKNOWN  87CD            ; Unknown 8xxx instruction
$ECC    $9288   UNKNOWN  $9288           ; Unknown 9xxx instruction
$ECE    $DB14   DRW      VB, V1, #4      ; Draw 4-byte sprite at VB, V1
$ED0    $1A22   JP       $A22            ; Jump to A22
$ED2    $AE30   LD       I, $E30         ; Load E30 into I
$ED4    $E8B6   UNKNOWN  $E8B6           ; Unknown Exxx instruction
$ED6    $EDC2   UNKNOWN  $EDC2           ; Unknown Exxx instruction
$ED8    $D358   DRW      V3, V5, #8      ; Draw 8-byte sprite at V3, V5
$EDA    $C82F   RND      V8, #2F         ; V8 = random & 2F
$EDC    $E13D   UNKNOWN  $E13D           ; Unknown Exxx instruction
$EDE    $7E30   ADD      VE, #30         ; Add 48 to VE
$EE0    $52E2   UNKNOWN  $52E2           ; Unknown 5xxx instruction
$EE2    $4070   SNE      V0, #70         ; Skip if V0 != 112
$EE4    $DF14   DRW      VF, V1, #4      ; Draw 4-byte sprite at VF, V1
$EE6    $DE6B   DRW      VE, V6, #B      ; Draw 11-byte sprite at VE, V6
$EE8    $6D0C   LD       VD, #0C         ; Load 12 into VD
$EEA    $EBC2   UNKNOWN  $EBC2           ; Unknown Exxx instruction
$EEC    $DE93   DRW      VE, V9, #3      ; Draw 3-byte sprite at VE, V9
$EEE    $C86F   RND      V8, #6F         ; V8 = random & 6F
$EF0    $E311   UNKNOWN  $E311           ; Unknown Exxx instruction
$EF2    $3E8B   SE       VE, #8B         ; Skip if VE == 139
$EF4    $57A6   UNKNOWN  $57A6           ; Unknown 5xxx instruction
$EF6    $194C   JP       $94C            ; Jump to 94C
$EF8    $8146   SHR      V1              ; V1 >>= 1, VF = LSB
$EFA    $93E9   UNKNOWN  $93E9           ; Unknown 9xxx instruction
$EFC    $E228   UNKNOWN  $E228           ; Unknown Exxx instruction
$EFE    $2B63   CALL     $B63            ; Call subroutine at B63
$F00    $A742   LD       I, $742         ; Load 742 into I
$F02    $F41D   UNKNOWN  F41D            ; Unknown Fxxx instruction
$F04    $04D2   SYS      $4D2            ; System call to 4D2
$F06    $92A1   UNKNOWN  $92A1           ; Unknown 9xxx instruction
$F08    $4B51   SNE      VB, #51         ; Skip if VB != 81
$F0A    $CC9F   RND      VC, #9F         ; VC = random & 9F
$F0C    $08EE   SYS      $8EE            ; System call to 8EE
$F0E    $473F   SNE      V7, #3F         ; Skip if V7 != 63
$F10    $F0B7   UNKNOWN  F0B7            ; Unknown Fxxx instruction
$F12    $AD9C   LD       I, $D9C         ; Load D9C into I
$F14    $AA1E   LD       I, $A1E         ; Load A1E into I
$F16    $58DD   UNKNOWN  $58DD           ; Unknown 5xxx instruction
$F18    $C98F   RND      V9, #8F         ; V9 = random & 8F
$F1A    $614B   LD       V1, #4B         ; Load 75 into V1
$F1C    $4119   SNE      V1, #19         ; Skip if V1 != 25
$F1E    $E02E   UNKNOWN  $E02E           ; Unknown Exxx instruction
$F20    $5463   UNKNOWN  $5463           ; Unknown 5xxx instruction
$F22    $F65D   UNKNOWN  F65D            ; Unknown Fxxx instruction
$F24    $7FD0   ADD      VF, #D0         ; Add 208 to VF
$F26    $0831   SYS      $831            ; System call to 831
$F28    $A446   LD       I, $446         ; Load 446 into I
$F2A    $7305   ADD      V3, #05         ; Add 5 to V3
$F2C    $CC41   RND      VC, #41         ; VC = random & 41
$F2E    $E447   UNKNOWN  $E447           ; Unknown Exxx instruction
$F30    $8FDF   UNKNOWN  8FDF            ; Unknown 8xxx instruction
$F32    $1B63   JP       $B63            ; Jump to B63
$F34    $BB96   JP       V0, $B96        ; Jump to V0 + B96
$F36    $D901   DRW      V9, V0, #1      ; Draw 1-byte sprite at V9, V0
$F38    $B498   JP       V0, $498        ; Jump to V0 + 498
$F3A    $2D89   CALL     $D89            ; Call subroutine at D89
$F3C    $8600   LD       V6, V0          ; V6 = V0
$F3E    $5ACC   UNKNOWN  $5ACC           ; Unknown 5xxx instruction
$F40    $36EE   SE       V6, #EE         ; Skip if V6 == 238
$F42    $0DF6   SYS      $DF6            ; System call to DF6
$F44    $29E8   CALL     $9E8            ; Call subroutine at 9E8
$F46    $7206   ADD      V2, #06         ; Add 6 to V2
$F48    $91FE   UNKNOWN  $91FE           ; Unknown 9xxx instruction
$F4A    $13B0   JP       $3B0            ; Jump to 3B0
$F4C    $7EC1   ADD      VE, #C1         ; Add 193 to VE
$F4E    $92BD   UNKNOWN  $92BD           ; Unknown 9xxx instruction
$F50    $693E   LD       V9, #3E         ; Load 62 into V9
$F52    $9718   UNKNOWN  $9718           ; Unknown 9xxx instruction
$F54    $2D18   CALL     $D18            ; Call subroutine at D18
$F56    $0E6D   SYS      $E6D            ; System call to E6D
$F58    $8E7E   SHL      VE              ; VE <<= 1, VF = MSB
$F5A    $82DE   SHL      V2              ; V2 <<= 1, VF = MSB
$F5C    $2701   CALL     $701            ; Call subroutine at 701
$F5E    $7D21   ADD      VD, #21         ; Add 33 to VD
$F60    $2EC9   CALL     $EC9            ; Call subroutine at EC9
$F62    $6675   LD       V6, #75         ; Load 117 into V6
$F64    $9255   UNKNOWN  $9255           ; Unknown 9xxx instruction
$F66    $A42A   LD       I, $42A         ; Load 42A into I
$F68    $E35E   UNKNOWN  $E35E           ; Unknown Exxx instruction
$F6A    $86C5   SUB      V6, VC          ; V6 -= VC, VF = !borrow
$F6C    $415B   SNE      V1, #5B         ; Skip if V1 != 91
$F6E    $84D1   OR       V4, VD          ; V4 |= VD
$F70    $9BFA   UNKNOWN  $9BFA           ; Unknown 9xxx instruction
$F72    $2862   CALL     $862            ; Call subroutine at 862
$F74    $8B4C   UNKNOWN  8B4C            ; Unknown 8xxx instruction
$F76    $88F8   UNKNOWN  88F8            ; Unknown 8xxx instruction
$F78    $EF4D   UNKNOWN  $EF4D           ; Unknown Exxx instruction
$F7A    $5C64   UNKNOWN  $5C64           ; Unknown 5xxx instruction
$F7C    $13DB   JP       $3DB            ; Jump to 3DB
$F7E    $9B74   UNKNOWN  $9B74           ; Unknown 9xxx instruction
$F80    $D433   DRW      V4, V3, #3      ; Draw 3-byte sprite at V4, V3
$F82    $8011   OR       V0, V1          ; V0 |= V1
$F84    $47B5   SNE      V7, #B5         ; Skip if V7 != 181
$F86    $FD52   UNKNOWN  FD52            ; Unknown Fxxx instruction
$F88    $B06B   JP       V0, $06B        ; Jump to V0 + 06B
$F8A    $8384   ADD      V3, V8          ; V3 += V8, VF = carry
$F8C    $0A33   SYS      $A33            ; System call to A33
$F8E    $BEAA   JP       V0, $EAA        ; Jump to V0 + EAA
$F90    $5AC9   UNKNOWN  $5AC9           ; Unknown 5xxx instruction
$F92    $0718   SYS      $718            ; System call to 718
$F94    $E6A5   UNKNOWN  $E6A5           ; Unknown Exxx instruction
$F96    $AF9A   LD       I, $F9A         ; Load F9A into I
$F98    $A9BA   LD       I, $9BA         ; Load 9BA into I
$F9A    $40CC   SNE      V0, #CC         ; Skip if V0 != 204
$F9C    $454F   SNE      V5, #4F         ; Skip if V5 != 79
$F9E    $34EB   SE       V4, #EB         ; Skip if V4 == 235
$FA0    $1144   JP       $144            ; Jump to 144
$FA2    $D6A8   DRW      V6, VA, #8      ; Draw 8-byte sprite at V6, VA
$FA4    $ADA4   LD       I, $DA4         ; Load DA4 into I
$FA6    $B854   JP       V0, $854        ; Jump to V0 + 854
$FA8    $5B8D   UNKNOWN  $5B8D           ; Unknown 5xxx instruction
$FAA    $D3CF   DRW      V3, VC, #F      ; Draw 15-byte sprite at V3, VC
$FAC    $8657   SUBN     V6, V5          ; V6 = V5 - V6, VF = !borrow
$FAE    $2C28   CALL     $C28            ; Call subroutine at C28
$FB0    $DCCE   DRW      VC, VC, #E      ; Draw 14-byte sprite at VC, VC
$FB2    $609D   LD       V0, #9D         ; Load 157 into V0
$FB4    $59CF   UNKNOWN  $59CF           ; Unknown 5xxx instruction
$FB6    $DAC8   DRW      VA, VC, #8      ; Draw 8-byte sprite at VA, VC
$FB8    $73BD   ADD      V3, #BD         ; Add 189 to V3
$FBA    $8103   XOR      V1, V0          ; V1 ^= V0
$FBC    $4BB5   SNE      VB, #B5         ; Skip if VB != 181
$FBE    $A28F   LD       I, $28F         ; Load 28F into I
$FC0    $879C   UNKNOWN  879C            ; Unknown 8xxx instruction
$FC2    $C2F8   RND      V2, #F8         ; V2 = random & F8
$FC4    $B467   JP       V0, $467        ; Jump to V0 + 467
$FC6    $7071   ADD      V0, #71         ; Add 113 to V0
$FC8    $D599   DRW      V5, V9, #9      ; Draw 9-byte sprite at V5, V9
$FCA    $9A6D   UNKNOWN  $9A6D           ; Unknown 9xxx instruction
$FCC    $26FA   CALL     $6FA            ; Call subroutine at 6FA
$FCE    $28E5   CALL     $8E5            ; Call subroutine at 8E5
$FD0    $E09F   UNKNOWN  $E09F           ; Unknown Exxx instruction
$FD2    $7D5D   ADD      VD, #5D         ; Add 93 to VD
$FD4    $7431   ADD      V4, #31         ; Add 49 to V4
$FD6    $E102   UNKNOWN  $E102           ; Unknown Exxx instruction
$FD8    $68A5   LD       V8, #A5         ; Load 165 into V8
$FDA    $9CA6   UNKNOWN  $9CA6           ; Unknown 9xxx instruction
$FDC    $1B7F   JP       $B7F            ; Jump to B7F
$FDE    $A088   LD       I, $088         ; Load 088 into I
$FE0    $1C9D   JP       $C9D            ; Jump to C9D
$FE2    $EB32   UNKNOWN  $EB32           ; Unknown Exxx instruction
$FE4    $A90A   LD       I, $90A         ; Load 90A into I
$FE6    $2FCD   CALL     $FCD            ; Call subroutine at FCD
$FE8    $810A   UNKNOWN  810A            ; Unknown 8xxx instruction
$FEA    $BB45   JP       V0, $B45        ; Jump to V0 + B45
$FEC    $A357   LD       I, $357         ; Load 357 into I
$FEE    $647D   LD       V4, #7D         ; Load 125 into V4
$FF0    $0DD7   SYS      $DD7            ; System call to DD7
$FF2    $390F   SE       V9, #0F         ; Skip if V9 == 15
$FF4    $8233   XOR      V2, V3          ; V2 ^= V3
$FF6    $4A4E   SNE      VA, #4E         ; Skip if VA != 78
$FF8    $1622   JP       $622            ; Jump to 622
$FFA    $CFB2   RND      VF, #B2         ; VF = random & B2
$FFC    $683B   LD       V8, #3B         ; Load 59 into V8
$FFE    $A29E   LD       I, $29E         ; Load 29E into I

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 497 (27.7%)
  LD      : 220 (12.3%)
  JP      : 216 (12.1%)
  SYS     : 125 ( 7.0%)
  DRW     : 119 ( 6.6%)
  RND     : 119 ( 6.6%)
  ADD     : 118 ( 6.6%)
  CALL    : 108 ( 6.0%)
  SNE     : 107 ( 6.0%)
  SE      : 101 ( 5.6%)
  AND     :  13 ( 0.7%)
  SHL     :  11 ( 0.6%)
  XOR     :   9 ( 0.5%)
  SUBN    :   8 ( 0.4%)
  SUB     :   8 ( 0.4%)
  SHR     :   7 ( 0.4%)
  OR      :   5 ( 0.3%)
  SKP     :   1 ( 0.1%)

Memory Operations: 338 (18.9%)
Arithmetic Operations: 161 (9.0%)
