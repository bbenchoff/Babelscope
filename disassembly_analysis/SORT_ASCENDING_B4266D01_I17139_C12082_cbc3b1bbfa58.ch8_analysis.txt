
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B4266D01_I17139_C12082_cbc3b1bbfa58.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 4266
Instance: 17139
Direction: ascending
Final Array: [8, 8, 8, 8, 8, 8, 8, 49]
Operations: R:0 W:7 C:149 S:50

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 125
Sort Array References:
  $202: LD I, $607 ; Load 607 into I
  $20C: LD I, $4CD ; Load 4CD into I
  $21E: LD I, $E34 ; Load E34 into I
  $246: LD I, $085 ; Load 085 into I
  $24C: LD I, $985 ; Load 985 into I
  $284: LD I, $ED4 ; Load ED4 into I
  $288: LD I, $4F2 ; Load 4F2 into I
  $2A4: LD I, $6E8 ; Load 6E8 into I
  $358: LD I, $FEE ; Load FEE into I
  $364: LD I, $7DE ; Load 7DE into I
  $39E: LD I, $E04 ; Load E04 into I
  $3D0: LD I, $A54 ; Load A54 into I
  $3E2: LD I, $87E ; Load 87E into I
  $3FC: LD I, $696 ; Load 696 into I
  $404: LD I, $0DC ; Load 0DC into I
  $418: LD I, $26C ; Load 26C into I
  $424: LD I, $A7C ; Load A7C into I
  $448: LD I, $E60 ; Load E60 into I
  $44C: LD I, $EDD ; Load EDD into I
  $456: LD I, $55F ; Load 55F into I
  $45E: LD I, $A2D ; Load A2D into I
  $46A: LD I, $FFB ; Load FFB into I
  $472: LD I, $393 ; Load 393 into I
  $476: LD I, $B57 ; Load B57 into I
  $47A: LD I, $F2E ; Load F2E into I
  $484: LD I, $D4D ; Load D4D into I
  $488: LD I, $795 ; Load 795 into I
  $49E: LD I, $FFC ; Load FFC into I
  $4E2: LD I, $E7E ; Load E7E into I
  $4EC: LD I, $72E ; Load 72E into I
  $530: LD I, $AF2 ; Load AF2 into I
  $53A: LD I, $811 ; Load 811 into I
  $53E: LD I, $6A5 ; Load 6A5 into I
  $552: LD I, $CAB ; Load CAB into I
  $59E: LD I, $815 ; Load 815 into I
  $5C8: LD I, $C44 ; Load C44 into I
  $5D6: LD I, $6B8 ; Load 6B8 into I
  $5FE: LD I, $0B7 ; Load 0B7 into I
  $612: LD I, $390 ; Load 390 into I
  $646: LD I, $182 ; Load 182 into I
  $648: LD I, $119 ; Load 119 into I
  $64C: LD I, $B7C ; Load B7C into I
  $690: LD I, $B34 ; Load B34 into I
  $6B8: LD I, $58B ; Load 58B into I
  $6FE: LD I, $51D ; Load 51D into I
  $716: LD I, $A34 ; Load A34 into I
  $71E: LD I, $568 ; Load 568 into I
  $728: LD I, $A15 ; Load A15 into I
  $740: LD I, $6A8 ; Load 6A8 into I
  $76E: LD I, $0E9 ; Load 0E9 into I
  $780: LD I, $A82 ; Load A82 into I
  $788: LD I, $E09 ; Load E09 into I
  $78C: LD I, $9E6 ; Load 9E6 into I
  $7CA: LD I, $CFA ; Load CFA into I
  $7D4: LD I, $D78 ; Load D78 into I
  $7E0: LD I, $357 ; Load 357 into I
  $7F2: LD I, $9F6 ; Load 9F6 into I
  $80E: LD I, $42A ; Load 42A into I
  $866: LD I, $EA7 ; Load EA7 into I
  $88A: LD I, $4F4 ; Load 4F4 into I
  $8A4: LD I, $976 ; Load 976 into I
  $8A6: LD I, $23A ; Load 23A into I
  $8AC: LD I, $D8B ; Load D8B into I
  $8C2: LD I, $ECF ; Load ECF into I
  $8E4: LD [I], V0 ; Store V0-V0 at I
  $8EC: LD I, $813 ; Load 813 into I
  $936: LD I, $972 ; Load 972 into I
  $960: LD I, $0F4 ; Load 0F4 into I
  $992: LD I, $3B7 ; Load 3B7 into I
  $9BA: LD I, $D2E ; Load D2E into I
  $9E8: LD I, $0B0 ; Load 0B0 into I
  $9FA: LD I, $96A ; Load 96A into I
  $A1E: LD I, $307 ; Load 307 into I
  $A88: LD I, $74A ; Load 74A into I
  $A9C: LD I, $E78 ; Load E78 into I
  $AA6: LD I, $D4A ; Load D4A into I
  $AA8: LD I, $6C8 ; Load 6C8 into I
  $AAC: LD I, $164 ; Load 164 into I
  $AD8: LD I, $CAB ; Load CAB into I
  $B16: LD I, $F9B ; Load F9B into I
  $B1E: LD I, $C83 ; Load C83 into I
  $B2C: LD I, $E6A ; Load E6A into I
  $B44: LD I, $A72 ; Load A72 into I
  $B6A: LD I, $303 ; Load 303 into I
  $B70: LD I, $548 ; Load 548 into I
  $B92: LD I, $790 ; Load 790 into I
  $BCE: LD I, $8C3 ; Load 8C3 into I
  $C00: LD I, $328 ; Load 328 into I
  $C0A: LD I, $3E1 ; Load 3E1 into I
  $C1E: LD I, $CC9 ; Load CC9 into I
  $C2E: LD I, $CFC ; Load CFC into I
  $C42: LD I, $D15 ; Load D15 into I
  $C4C: LD I, $3B6 ; Load 3B6 into I
  $C62: LD I, $439 ; Load 439 into I
  $C64: LD I, $16C ; Load 16C into I
  $C74: LD I, $9CB ; Load 9CB into I
  $C82: LD I, $64A ; Load 64A into I
  $C9A: LD I, $210 ; Load 210 into I
  $CA0: LD I, $BFE ; Load BFE into I
  $D12: LD I, $D19 ; Load D19 into I
  $D34: LD I, $D4F ; Load D4F into I
  $D42: LD I, $4F7 ; Load 4F7 into I
  $DB4: LD I, $5BD ; Load 5BD into I
  $DBC: LD I, $548 ; Load 548 into I
  $DC4: LD I, $206 ; Load 206 into I
  $DD2: LD I, $768 ; Load 768 into I
  $DD6: LD I, $BCE ; Load BCE into I
  $E3A: LD I, $C8A ; Load C8A into I
  $E5A: LD I, $E6E ; Load E6E into I
  $E64: LD I, $B19 ; Load B19 into I
  $E8E: LD I, $349 ; Load 349 into I
  $ECE: LD I, $8A7 ; Load 8A7 into I
  $EE4: LD I, $A65 ; Load A65 into I
  $EEE: LD I, $D48 ; Load D48 into I
  $F16: LD I, $498 ; Load 498 into I
  $F2E: LD I, $8F1 ; Load 8F1 into I
  $F4C: LD I, $8B9 ; Load 8B9 into I
  $F5C: LD VF, [I] ; Load V0-VF from I
  $F6E: LD I, $936 ; Load 936 into I
  $F70: LD I, $371 ; Load 371 into I
  $F80: LD I, $B9F ; Load B9F into I
  $FB2: LD I, $F08 ; Load F08 into I
  $FCA: LD I, $03F ; Load 03F into I
  $FEA: LD I, $96F ; Load 96F into I
  $FF4: LD I, $37B ; Load 37B into I

CONTROL FLOW ANALYSIS:
Jumps: 225
Calls: 121
Branches: 264
Loops: 131
Loop Structures:
  $204 -> $167 (backward jump)
  $35E -> $00D (backward jump)
  $378 -> $113 (backward jump)
  $386 -> $092 (backward jump)
  $40E -> $3C1 (backward jump)
  $44E -> $314 (backward jump)
  $450 -> $37F (backward jump)
  $462 -> $0F8 (backward jump)
  $466 -> $32C (backward jump)
  $46C -> $0D8 (backward jump)
  $48C -> $32D (backward jump)
  $4C6 -> $248 (backward jump)
  $4CA -> $461 (backward jump)
  $4F4 -> $4A8 (backward jump)
  $504 -> $1C5 (backward jump)
  $508 -> $3FF (backward jump)
  $512 -> $34E (backward jump)
  $514 -> $12B (backward jump)
  $54C -> $335 (backward jump)
  $556 -> $303 (backward jump)
  $56A -> $1AB (backward jump)
  $58A -> $2DC (backward jump)
  $624 -> $293 (backward jump)
  $626 -> $41E (backward jump)
  $63A -> $1E9 (backward jump)
  $63E -> $0B7 (backward jump)
  $670 -> $315 (backward jump)
  $6A6 -> $5F5 (backward jump)
  $6E8 -> $452 (backward jump)
  $704 -> $6D8 (backward jump)
  $734 -> $72D (backward jump)
  $79E -> $08A (backward jump)
  $7A8 -> $44E (backward jump)
  $7B0 -> $671 (backward jump)
  $7BE -> $133 (backward jump)
  $7FE -> $52F (backward jump)
  $81C -> $159 (backward jump)
  $828 -> $421 (backward jump)
  $85C -> $3F1 (backward jump)
  $8A0 -> $557 (backward jump)
  $8E6 -> $0C6 (backward jump)
  $914 -> $7DC (backward jump)
  $93E -> $25C (backward jump)
  $98E -> $74F (backward jump)
  $994 -> $348 (backward jump)
  $99A -> $311 (backward jump)
  $99C -> $902 (backward jump)
  $9BC -> $64A (backward jump)
  $9CC -> $70E (backward jump)
  $9DE -> $57A (backward jump)
  $9E0 -> $72E (backward jump)
  $A0E -> $5A7 (backward jump)
  $A2C -> $80C (backward jump)
  $A38 -> $8D5 (backward jump)
  $A3A -> $77A (backward jump)
  $A52 -> $6C2 (backward jump)
  $A5A -> $241 (backward jump)
  $A6C -> $858 (backward jump)
  $A70 -> $767 (backward jump)
  $A96 -> $867 (backward jump)
  $AA4 -> $A57 (backward jump)
  $AD2 -> $650 (backward jump)
  $AF8 -> $728 (backward jump)
  $AFC -> $988 (backward jump)
  $B18 -> $52F (backward jump)
  $B34 -> $8CB (backward jump)
  $B4E -> $A92 (backward jump)
  $B56 -> $A42 (backward jump)
  $B5C -> $508 (backward jump)
  $B5E -> $10A (backward jump)
  $B64 -> $784 (backward jump)
  $B7E -> $73D (backward jump)
  $B8E -> $6EA (backward jump)
  $B90 -> $15A (backward jump)
  $B9E -> $B04 (backward jump)
  $BA0 -> $7C7 (backward jump)
  $BAA -> $AF2 (backward jump)
  $BAC -> $6EB (backward jump)
  $BBC -> $17A (backward jump)
  $BE6 -> $0D9 (backward jump)
  $BEE -> $045 (backward jump)
  $C08 -> $348 (backward jump)
  $C0E -> $2EB (backward jump)
  $C14 -> $0B8 (backward jump)
  $C1A -> $84C (backward jump)
  $C28 -> $23E (backward jump)
  $C2A -> $612 (backward jump)
  $C7A -> $152 (backward jump)
  $CB4 -> $950 (backward jump)
  $CC8 -> $3FC (backward jump)
  $CD2 -> $A4F (backward jump)
  $CEC -> $C06 (backward jump)
  $CEE -> $48D (backward jump)
  $CF0 -> $2F6 (backward jump)
  $D14 -> $7C8 (backward jump)
  $D44 -> $3C7 (backward jump)
  $D6C -> $983 (backward jump)
  $D80 -> $928 (backward jump)
  $D9A -> $B13 (backward jump)
  $DB0 -> $D67 (backward jump)
  $DDA -> $D38 (backward jump)
  $E18 -> $B7A (backward jump)
  $E2C -> $328 (backward jump)
  $E44 -> $587 (backward jump)
  $E54 -> $47E (backward jump)
  $E56 -> $74F (backward jump)
  $E6A -> $622 (backward jump)
  $E7A -> $C33 (backward jump)
  $E82 -> $B30 (backward jump)
  $EA8 -> $2FF (backward jump)
  $EC0 -> $69C (backward jump)
  $EC2 -> $97C (backward jump)
  $ECC -> $1F8 (backward jump)
  $ED2 -> $D4A (backward jump)
  $ED4 -> $AF6 (backward jump)
  $EE2 -> $811 (backward jump)
  $F1C -> $C32 (backward jump)
  $F28 -> $820 (backward jump)
  $F32 -> $44A (backward jump)
  $F3E -> $A82 (backward jump)
  $F62 -> $1EE (backward jump)
  $F6A -> $8D9 (backward jump)
  $F6C -> $84E (backward jump)
  $F72 -> $4D2 (backward jump)
  $F7C -> $64D (backward jump)
  $F88 -> $259 (backward jump)
  $F94 -> $2B3 (backward jump)
  $F96 -> $CAA (backward jump)
  $FA8 -> $675 (backward jump)
  $FBA -> $678 (backward jump)
  $FBE -> $170 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $4C08   SNE      VC, #08         ; Skip if VC != 8
$202    $A607   LD       I, $607         ; Load 607 into I
$204    $B167   JP       V0, $167        ; Jump to V0 + 167
$206    $F612   UNKNOWN  F612            ; Unknown Fxxx instruction
$208    $391E   SE       V9, #1E         ; Skip if V9 == 30
$20A    $1F92   JP       $F92            ; Jump to F92
$20C    $A4CD   LD       I, $4CD         ; Load 4CD into I
$20E    $02A3   SYS      $2A3            ; System call to 2A3
$210    $19CE   JP       $9CE            ; Jump to 9CE
$212    $FD67   UNKNOWN  FD67            ; Unknown Fxxx instruction
$214    $D33D   DRW      V3, V3, #D      ; Draw 13-byte sprite at V3, V3
$216    $01E9   SYS      $1E9            ; System call to 1E9
$218    $63EA   LD       V3, #EA         ; Load 234 into V3
$21A    $24BE   CALL     $4BE            ; Call subroutine at 4BE
$21C    $6147   LD       V1, #47         ; Load 71 into V1
$21E    $AE34   LD       I, $E34         ; Load E34 into I
$220    $2DA5   CALL     $DA5            ; Call subroutine at DA5
$222    $7C51   ADD      VC, #51         ; Add 81 to VC
$224    $8AEF   UNKNOWN  8AEF            ; Unknown 8xxx instruction
$226    $2D8D   CALL     $D8D            ; Call subroutine at D8D
$228    $7AE5   ADD      VA, #E5         ; Add 229 to VA
$22A    $35B6   SE       V5, #B6         ; Skip if V5 == 182
$22C    $64E7   LD       V4, #E7         ; Load 231 into V4
$22E    $3E26   SE       VE, #26         ; Skip if VE == 38
$230    $4F4B   SNE      VF, #4B         ; Skip if VF != 75
$232    $9619   UNKNOWN  $9619           ; Unknown 9xxx instruction
$234    $38EC   SE       V8, #EC         ; Skip if V8 == 236
$236    $124F   JP       $24F            ; Jump to 24F
$238    $3F21   SE       VF, #21         ; Skip if VF == 33
$23A    $5066   UNKNOWN  $5066           ; Unknown 5xxx instruction
$23C    $72B7   ADD      V2, #B7         ; Add 183 to V2
$23E    $E0A3   UNKNOWN  $E0A3           ; Unknown Exxx instruction
$240    $E405   UNKNOWN  $E405           ; Unknown Exxx instruction
$242    $9B09   UNKNOWN  $9B09           ; Unknown 9xxx instruction
$244    $7A9A   ADD      VA, #9A         ; Add 154 to VA
$246    $A085   LD       I, $085         ; Load 085 into I
$248    $5AEE   UNKNOWN  $5AEE           ; Unknown 5xxx instruction
$24A    $DF3D   DRW      VF, V3, #D      ; Draw 13-byte sprite at VF, V3
$24C    $A985   LD       I, $985         ; Load 985 into I
$24E    $1F7C   JP       $F7C            ; Jump to F7C
$250    $4E0A   SNE      VE, #0A         ; Skip if VE != 10
$252    $EE6A   UNKNOWN  $EE6A           ; Unknown Exxx instruction
$254    $DCFB   DRW      VC, VF, #B      ; Draw 11-byte sprite at VC, VF
$256    $5E4F   UNKNOWN  $5E4F           ; Unknown 5xxx instruction
$258    $B3F2   JP       V0, $3F2        ; Jump to V0 + 3F2
$25A    $0C31   SYS      $C31            ; System call to C31
$25C    $B9E3   JP       V0, $9E3        ; Jump to V0 + 9E3
$25E    $8228   UNKNOWN  8228            ; Unknown 8xxx instruction
$260    $8FF8   UNKNOWN  8FF8            ; Unknown 8xxx instruction
$262    $9034   UNKNOWN  $9034           ; Unknown 9xxx instruction
$264    $4BB4   SNE      VB, #B4         ; Skip if VB != 180
$266    $FA7A   UNKNOWN  FA7A            ; Unknown Fxxx instruction
$268    $4726   SNE      V7, #26         ; Skip if V7 != 38
$26A    $535C   UNKNOWN  $535C           ; Unknown 5xxx instruction
$26C    $FE33   LD       B, VE           ; Store BCD of VE at I, I+1, I+2
$26E    $DCDB   DRW      VC, VD, #B      ; Draw 11-byte sprite at VC, VD
$270    $168E   JP       $68E            ; Jump to 68E
$272    $8473   XOR      V4, V7          ; V4 ^= V7
$274    $800A   UNKNOWN  800A            ; Unknown 8xxx instruction
$276    $7C74   ADD      VC, #74         ; Add 116 to VC
$278    $B29E   JP       V0, $29E        ; Jump to V0 + 29E
$27A    $E2CE   UNKNOWN  $E2CE           ; Unknown Exxx instruction
$27C    $D252   DRW      V2, V5, #2      ; Draw 2-byte sprite at V2, V5
$27E    $E6EB   UNKNOWN  $E6EB           ; Unknown Exxx instruction
$280    $1FE8   JP       $FE8            ; Jump to FE8
$282    $48AB   SNE      V8, #AB         ; Skip if V8 != 171
$284    $AED4   LD       I, $ED4         ; Load ED4 into I
$286    $28EB   CALL     $8EB            ; Call subroutine at 8EB
$288    $A4F2   LD       I, $4F2         ; Load 4F2 into I
$28A    $C9AE   RND      V9, #AE         ; V9 = random & AE
$28C    $820E   SHL      V2              ; V2 <<= 1, VF = MSB
$28E    $0474   SYS      $474            ; System call to 474
$290    $88D2   AND      V8, VD          ; V8 &= VD
$292    $973E   UNKNOWN  $973E           ; Unknown 9xxx instruction
$294    $D79B   DRW      V7, V9, #B      ; Draw 11-byte sprite at V7, V9
$296    $6EB8   LD       VE, #B8         ; Load 184 into VE
$298    $83ED   UNKNOWN  83ED            ; Unknown 8xxx instruction
$29A    $E13F   UNKNOWN  $E13F           ; Unknown Exxx instruction
$29C    $4BDF   SNE      VB, #DF         ; Skip if VB != 223
$29E    $0F79   SYS      $F79            ; System call to F79
$2A0    $396F   SE       V9, #6F         ; Skip if V9 == 111
$2A2    $0139   SYS      $139            ; System call to 139
$2A4    $A6E8   LD       I, $6E8         ; Load 6E8 into I
$2A6    $F917   UNKNOWN  F917            ; Unknown Fxxx instruction
$2A8    $807A   UNKNOWN  807A            ; Unknown 8xxx instruction
$2AA    $80C3   XOR      V0, VC          ; V0 ^= VC
$2AC    $C7AE   RND      V7, #AE         ; V7 = random & AE
$2AE    $E094   UNKNOWN  $E094           ; Unknown Exxx instruction
$2B0    $3F71   SE       VF, #71         ; Skip if VF == 113
$2B2    $285A   CALL     $85A            ; Call subroutine at 85A
$2B4    $699D   LD       V9, #9D         ; Load 157 into V9
$2B6    $F30E   UNKNOWN  F30E            ; Unknown Fxxx instruction
$2B8    $9916   UNKNOWN  $9916           ; Unknown 9xxx instruction
$2BA    $F854   UNKNOWN  F854            ; Unknown Fxxx instruction
$2BC    $C479   RND      V4, #79         ; V4 = random & 79
$2BE    $CFB2   RND      VF, #B2         ; VF = random & B2
$2C0    $77E8   ADD      V7, #E8         ; Add 232 to V7
$2C2    $1661   JP       $661            ; Jump to 661
$2C4    $DE54   DRW      VE, V5, #4      ; Draw 4-byte sprite at VE, V5
$2C6    $5C24   UNKNOWN  $5C24           ; Unknown 5xxx instruction
$2C8    $2B55   CALL     $B55            ; Call subroutine at B55
$2CA    $CC06   RND      VC, #06         ; VC = random & 06
$2CC    $8F79   UNKNOWN  8F79            ; Unknown 8xxx instruction
$2CE    $7EBD   ADD      VE, #BD         ; Add 189 to VE
$2D0    $BDC1   JP       V0, $DC1        ; Jump to V0 + DC1
$2D2    $9B73   UNKNOWN  $9B73           ; Unknown 9xxx instruction
$2D4    $1E08   JP       $E08            ; Jump to E08
$2D6    $0808   SYS      $808            ; System call to 808
$2D8    $0808   SYS      $808            ; System call to 808
$2DA    $0808   SYS      $808            ; System call to 808
$2DC    $0808   SYS      $808            ; System call to 808
$2DE    $0808   SYS      $808            ; System call to 808
$2E0    $0808   SYS      $808            ; System call to 808
$2E2    $0808   SYS      $808            ; System call to 808
$2E4    $0808   SYS      $808            ; System call to 808
$2E6    $0808   SYS      $808            ; System call to 808
$2E8    $0808   SYS      $808            ; System call to 808
$2EA    $0808   SYS      $808            ; System call to 808
$2EC    $0808   SYS      $808            ; System call to 808
$2EE    $0808   SYS      $808            ; System call to 808
$2F0    $0808   SYS      $808            ; System call to 808
$2F2    $0808   SYS      $808            ; System call to 808
$2F4    $0808   SYS      $808            ; System call to 808
$2F6    $0808   SYS      $808            ; System call to 808
$2F8    $0808   SYS      $808            ; System call to 808
$2FA    $0808   SYS      $808            ; System call to 808
$2FC    $0808   SYS      $808            ; System call to 808
$2FE    $0808   SYS      $808            ; System call to 808
$300    $0808   SYS      $808            ; System call to 808
$302    $0808   SYS      $808            ; System call to 808
$304    $0808   SYS      $808            ; System call to 808
$306    $0831   SYS      $831            ; System call to 831
$308    $98CB   UNKNOWN  $98CB           ; Unknown 9xxx instruction
$30A    $9599   UNKNOWN  $9599           ; Unknown 9xxx instruction
$30C    $C49D   RND      V4, #9D         ; V4 = random & 9D
$30E    $F6CE   UNKNOWN  F6CE            ; Unknown Fxxx instruction
$310    $FAC1   UNKNOWN  FAC1            ; Unknown Fxxx instruction
$312    $3833   SE       V8, #33         ; Skip if V8 == 51
$314    $7F1D   ADD      VF, #1D         ; Add 29 to VF
$316    $36B2   SE       V6, #B2         ; Skip if V6 == 178
$318    $7307   ADD      V3, #07         ; Add 7 to V3
$31A    $3938   SE       V9, #38         ; Skip if V9 == 56
$31C    $59C8   UNKNOWN  $59C8           ; Unknown 5xxx instruction
$31E    $0B8B   SYS      $B8B            ; System call to B8B
$320    $6116   LD       V1, #16         ; Load 22 into V1
$322    $8AA9   UNKNOWN  8AA9            ; Unknown 8xxx instruction
$324    $6215   LD       V2, #15         ; Load 21 into V2
$326    $63E9   LD       V3, #E9         ; Load 233 into V3
$328    $DA0E   DRW      VA, V0, #E      ; Draw 14-byte sprite at VA, V0
$32A    $326B   SE       V2, #6B         ; Skip if V2 == 107
$32C    $1749   JP       $749            ; Jump to 749
$32E    $9E03   UNKNOWN  $9E03           ; Unknown 9xxx instruction
$330    $9F22   UNKNOWN  $9F22           ; Unknown 9xxx instruction
$332    $58FD   UNKNOWN  $58FD           ; Unknown 5xxx instruction
$334    $EF28   UNKNOWN  $EF28           ; Unknown Exxx instruction
$336    $D30B   DRW      V3, V0, #B      ; Draw 11-byte sprite at V3, V0
$338    $1E01   JP       $E01            ; Jump to E01
$33A    $2007   CALL     $007            ; Call subroutine at 007
$33C    $9E15   UNKNOWN  $9E15           ; Unknown 9xxx instruction
$33E    $314F   SE       V1, #4F         ; Skip if V1 == 79
$340    $E6AF   UNKNOWN  $E6AF           ; Unknown Exxx instruction
$342    $49BD   SNE      V9, #BD         ; Skip if V9 != 189
$344    $8DE2   AND      VD, VE          ; VD &= VE
$346    $ED14   UNKNOWN  $ED14           ; Unknown Exxx instruction
$348    $4735   SNE      V7, #35         ; Skip if V7 != 53
$34A    $7E0E   ADD      VE, #0E         ; Add 14 to VE
$34C    $9F24   UNKNOWN  $9F24           ; Unknown 9xxx instruction
$34E    $14DB   JP       $4DB            ; Jump to 4DB
$350    $3C2A   SE       VC, #2A         ; Skip if VC == 42
$352    $3840   SE       V8, #40         ; Skip if V8 == 64
$354    $BB9E   JP       V0, $B9E        ; Jump to V0 + B9E
$356    $FB04   UNKNOWN  FB04            ; Unknown Fxxx instruction
$358    $AFEE   LD       I, $FEE         ; Load FEE into I
$35A    $9F5A   UNKNOWN  $9F5A           ; Unknown 9xxx instruction
$35C    $EAEF   UNKNOWN  $EAEF           ; Unknown Exxx instruction
$35E    $B00D   JP       V0, $00D        ; Jump to V0 + 00D
$360    $2F7F   CALL     $F7F            ; Call subroutine at F7F
$362    $E093   UNKNOWN  $E093           ; Unknown Exxx instruction
$364    $A7DE   LD       I, $7DE         ; Load 7DE into I
$366    $FAA7   UNKNOWN  FAA7            ; Unknown Fxxx instruction
$368    $4941   SNE      V9, #41         ; Skip if V9 != 65
$36A    $C387   RND      V3, #87         ; V3 = random & 87
$36C    $EE89   UNKNOWN  $EE89           ; Unknown Exxx instruction
$36E    $0691   SYS      $691            ; System call to 691
$370    $EFC7   UNKNOWN  $EFC7           ; Unknown Exxx instruction
$372    $1CF6   JP       $CF6            ; Jump to CF6
$374    $4F99   SNE      VF, #99         ; Skip if VF != 153
$376    $379F   SE       V7, #9F         ; Skip if V7 == 159
$378    $1113   JP       $113            ; Jump to 113
$37A    $474A   SNE      V7, #4A         ; Skip if V7 != 74
$37C    $76BE   ADD      V6, #BE         ; Add 190 to V6
$37E    $39C3   SE       V9, #C3         ; Skip if V9 == 195
$380    $B43A   JP       V0, $43A        ; Jump to V0 + 43A
$382    $250E   CALL     $50E            ; Call subroutine at 50E
$384    $3422   SE       V4, #22         ; Skip if V4 == 34
$386    $B092   JP       V0, $092        ; Jump to V0 + 092
$388    $D437   DRW      V4, V3, #7      ; Draw 7-byte sprite at V4, V3
$38A    $1D46   JP       $D46            ; Jump to D46
$38C    $344C   SE       V4, #4C         ; Skip if V4 == 76
$38E    $4485   SNE      V4, #85         ; Skip if V4 != 133
$390    $4F56   SNE      VF, #56         ; Skip if VF != 86
$392    $4CED   SNE      VC, #ED         ; Skip if VC != 237
$394    $E27A   UNKNOWN  $E27A           ; Unknown Exxx instruction
$396    $202C   CALL     $02C            ; Call subroutine at 02C
$398    $1B34   JP       $B34            ; Jump to B34
$39A    $7228   ADD      V2, #28         ; Add 40 to V2
$39C    $F75D   UNKNOWN  F75D            ; Unknown Fxxx instruction
$39E    $AE04   LD       I, $E04         ; Load E04 into I
$3A0    $9C17   UNKNOWN  $9C17           ; Unknown 9xxx instruction
$3A2    $182B   JP       $82B            ; Jump to 82B
$3A4    $20E8   CALL     $0E8            ; Call subroutine at 0E8
$3A6    $357B   SE       V5, #7B         ; Skip if V5 == 123
$3A8    $6879   LD       V8, #79         ; Load 121 into V8
$3AA    $3F98   SE       VF, #98         ; Skip if VF == 152
$3AC    $E63B   UNKNOWN  $E63B           ; Unknown Exxx instruction
$3AE    $74BF   ADD      V4, #BF         ; Add 191 to V4
$3B0    $8F5F   UNKNOWN  8F5F            ; Unknown 8xxx instruction
$3B2    $8804   ADD      V8, V0          ; V8 += V0, VF = carry
$3B4    $4D3D   SNE      VD, #3D         ; Skip if VD != 61
$3B6    $BF78   JP       V0, $F78        ; Jump to V0 + F78
$3B8    $0DFA   SYS      $DFA            ; System call to DFA
$3BA    $F4AC   UNKNOWN  F4AC            ; Unknown Fxxx instruction
$3BC    $18FC   JP       $8FC            ; Jump to 8FC
$3BE    $2143   CALL     $143            ; Call subroutine at 143
$3C0    $1AE4   JP       $AE4            ; Jump to AE4
$3C2    $1949   JP       $949            ; Jump to 949
$3C4    $6FAD   LD       VF, #AD         ; Load 173 into VF
$3C6    $85D5   SUB      V5, VD          ; V5 -= VD, VF = !borrow
$3C8    $F4CF   UNKNOWN  F4CF            ; Unknown Fxxx instruction
$3CA    $D639   DRW      V6, V3, #9      ; Draw 9-byte sprite at V6, V3
$3CC    $9AAE   UNKNOWN  $9AAE           ; Unknown 9xxx instruction
$3CE    $0417   SYS      $417            ; System call to 417
$3D0    $AA54   LD       I, $A54         ; Load A54 into I
$3D2    $D544   DRW      V5, V4, #4      ; Draw 4-byte sprite at V5, V4
$3D4    $D9E0   DRW      V9, VE, #0      ; Draw 0-byte sprite at V9, VE
$3D6    $6429   LD       V4, #29         ; Load 41 into V4
$3D8    $3499   SE       V4, #99         ; Skip if V4 == 153
$3DA    $286E   CALL     $86E            ; Call subroutine at 86E
$3DC    $479B   SNE      V7, #9B         ; Skip if V7 != 155
$3DE    $2769   CALL     $769            ; Call subroutine at 769
$3E0    $0399   SYS      $399            ; System call to 399
$3E2    $A87E   LD       I, $87E         ; Load 87E into I
$3E4    $75CB   ADD      V5, #CB         ; Add 203 to V5
$3E6    $37C5   SE       V7, #C5         ; Skip if V7 == 197
$3E8    $030E   SYS      $30E            ; System call to 30E
$3EA    $E91A   UNKNOWN  $E91A           ; Unknown Exxx instruction
$3EC    $3FD9   SE       VF, #D9         ; Skip if VF == 217
$3EE    $9C9E   UNKNOWN  $9C9E           ; Unknown 9xxx instruction
$3F0    $985F   UNKNOWN  $985F           ; Unknown 9xxx instruction
$3F2    $3C0E   SE       VC, #0E         ; Skip if VC == 14
$3F4    $256F   CALL     $56F            ; Call subroutine at 56F
$3F6    $F7B0   UNKNOWN  F7B0            ; Unknown Fxxx instruction
$3F8    $4405   SNE      V4, #05         ; Skip if V4 != 5
$3FA    $0702   SYS      $702            ; System call to 702
$3FC    $A696   LD       I, $696         ; Load 696 into I
$3FE    $DC05   DRW      VC, V0, #5      ; Draw 5-byte sprite at VC, V0
$400    $72C2   ADD      V2, #C2         ; Add 194 to V2
$402    $CC85   RND      VC, #85         ; VC = random & 85
$404    $A0DC   LD       I, $0DC         ; Load 0DC into I
$406    $CDFC   RND      VD, #FC         ; VD = random & FC
$408    $EF26   UNKNOWN  $EF26           ; Unknown Exxx instruction
$40A    $077D   SYS      $77D            ; System call to 77D
$40C    $F876   UNKNOWN  F876            ; Unknown Fxxx instruction
$40E    $13C1   JP       $3C1            ; Jump to 3C1
$410    $40D4   SNE      V0, #D4         ; Skip if V0 != 212
$412    $549A   UNKNOWN  $549A           ; Unknown 5xxx instruction
$414    $64BB   LD       V4, #BB         ; Load 187 into V4
$416    $E60D   UNKNOWN  $E60D           ; Unknown Exxx instruction
$418    $A26C   LD       I, $26C         ; Load 26C into I
$41A    $D1C3   DRW      V1, VC, #3      ; Draw 3-byte sprite at V1, VC
$41C    $D402   DRW      V4, V0, #2      ; Draw 2-byte sprite at V4, V0
$41E    $649A   LD       V4, #9A         ; Load 154 into V4
$420    $8420   LD       V4, V2          ; V4 = V2
$422    $411E   SNE      V1, #1E         ; Skip if V1 != 30
$424    $AA7C   LD       I, $A7C         ; Load A7C into I
$426    $39F2   SE       V9, #F2         ; Skip if V9 == 242
$428    $8736   SHR      V7              ; V7 >>= 1, VF = LSB
$42A    $21C0   CALL     $1C0            ; Call subroutine at 1C0
$42C    $4B15   SNE      VB, #15         ; Skip if VB != 21
$42E    $594D   UNKNOWN  $594D           ; Unknown 5xxx instruction
$430    $673E   LD       V7, #3E         ; Load 62 into V7
$432    $481C   SNE      V8, #1C         ; Skip if V8 != 28
$434    $C20F   RND      V2, #0F         ; V2 = random & 0F
$436    $F8E8   UNKNOWN  F8E8            ; Unknown Fxxx instruction
$438    $CDBE   RND      VD, #BE         ; VD = random & BE
$43A    $9B00   SNE      VB, V0          ; Skip if VB != V0
$43C    $2BB9   CALL     $BB9            ; Call subroutine at BB9
$43E    $06F2   SYS      $6F2            ; System call to 6F2
$440    $565B   UNKNOWN  $565B           ; Unknown 5xxx instruction
$442    $6FDE   LD       VF, #DE         ; Load 222 into VF
$444    $C154   RND      V1, #54         ; V1 = random & 54
$446    $CEDA   RND      VE, #DA         ; VE = random & DA
$448    $AE60   LD       I, $E60         ; Load E60 into I
$44A    $7321   ADD      V3, #21         ; Add 33 to V3
$44C    $AEDD   LD       I, $EDD         ; Load EDD into I
$44E    $B314   JP       V0, $314        ; Jump to V0 + 314
$450    $B37F   JP       V0, $37F        ; Jump to V0 + 37F
$452    $400C   SNE      V0, #0C         ; Skip if V0 != 12
$454    $9A78   UNKNOWN  $9A78           ; Unknown 9xxx instruction
$456    $A55F   LD       I, $55F         ; Load 55F into I
$458    $4597   SNE      V5, #97         ; Skip if V5 != 151
$45A    $CE93   RND      VE, #93         ; VE = random & 93
$45C    $FD17   UNKNOWN  FD17            ; Unknown Fxxx instruction
$45E    $AA2D   LD       I, $A2D         ; Load A2D into I
$460    $8255   SUB      V2, V5          ; V2 -= V5, VF = !borrow
$462    $B0F8   JP       V0, $0F8        ; Jump to V0 + 0F8
$464    $3E12   SE       VE, #12         ; Skip if VE == 18
$466    $132C   JP       $32C            ; Jump to 32C
$468    $460B   SNE      V6, #0B         ; Skip if V6 != 11
$46A    $AFFB   LD       I, $FFB         ; Load FFB into I
$46C    $B0D8   JP       V0, $0D8        ; Jump to V0 + 0D8
$46E    $C398   RND      V3, #98         ; V3 = random & 98
$470    $D52F   DRW      V5, V2, #F      ; Draw 15-byte sprite at V5, V2
$472    $A393   LD       I, $393         ; Load 393 into I
$474    $530B   UNKNOWN  $530B           ; Unknown 5xxx instruction
$476    $AB57   LD       I, $B57         ; Load B57 into I
$478    $02C4   SYS      $2C4            ; System call to 2C4
$47A    $AF2E   LD       I, $F2E         ; Load F2E into I
$47C    $DDAF   DRW      VD, VA, #F      ; Draw 15-byte sprite at VD, VA
$47E    $97A7   UNKNOWN  $97A7           ; Unknown 9xxx instruction
$480    $1997   JP       $997            ; Jump to 997
$482    $F967   UNKNOWN  F967            ; Unknown Fxxx instruction
$484    $AD4D   LD       I, $D4D         ; Load D4D into I
$486    $8A33   XOR      VA, V3          ; VA ^= V3
$488    $A795   LD       I, $795         ; Load 795 into I
$48A    $9D72   UNKNOWN  $9D72           ; Unknown 9xxx instruction
$48C    $B32D   JP       V0, $32D        ; Jump to V0 + 32D
$48E    $5D7D   UNKNOWN  $5D7D           ; Unknown 5xxx instruction
$490    $D23F   DRW      V2, V3, #F      ; Draw 15-byte sprite at V2, V3
$492    $F49A   UNKNOWN  F49A            ; Unknown Fxxx instruction
$494    $03C7   SYS      $3C7            ; System call to 3C7
$496    $8A5B   UNKNOWN  8A5B            ; Unknown 8xxx instruction
$498    $CD35   RND      VD, #35         ; VD = random & 35
$49A    $50D5   UNKNOWN  $50D5           ; Unknown 5xxx instruction
$49C    $2010   CALL     $010            ; Call subroutine at 010
$49E    $AFFC   LD       I, $FFC         ; Load FFC into I
$4A0    $C936   RND      V9, #36         ; V9 = random & 36
$4A2    $972D   UNKNOWN  $972D           ; Unknown 9xxx instruction
$4A4    $C847   RND      V8, #47         ; V8 = random & 47
$4A6    $C36D   RND      V3, #6D         ; V3 = random & 6D
$4A8    $D43B   DRW      V4, V3, #B      ; Draw 11-byte sprite at V4, V3
$4AA    $E16F   UNKNOWN  $E16F           ; Unknown Exxx instruction
$4AC    $9B84   UNKNOWN  $9B84           ; Unknown 9xxx instruction
$4AE    $BCF7   JP       V0, $CF7        ; Jump to V0 + CF7
$4B0    $FAC9   UNKNOWN  FAC9            ; Unknown Fxxx instruction
$4B2    $9DA3   UNKNOWN  $9DA3           ; Unknown 9xxx instruction
$4B4    $D87A   DRW      V8, V7, #A      ; Draw 10-byte sprite at V8, V7
$4B6    $2195   CALL     $195            ; Call subroutine at 195
$4B8    $731E   ADD      V3, #1E         ; Add 30 to V3
$4BA    $460A   SNE      V6, #0A         ; Skip if V6 != 10
$4BC    $B53F   JP       V0, $53F        ; Jump to V0 + 53F
$4BE    $8C37   SUBN     VC, V3          ; VC = V3 - VC, VF = !borrow
$4C0    $64B9   LD       V4, #B9         ; Load 185 into V4
$4C2    $2552   CALL     $552            ; Call subroutine at 552
$4C4    $4B64   SNE      VB, #64         ; Skip if VB != 100
$4C6    $1248   JP       $248            ; Jump to 248
$4C8    $683D   LD       V8, #3D         ; Load 61 into V8
$4CA    $B461   JP       V0, $461        ; Jump to V0 + 461
$4CC    $8598   UNKNOWN  8598            ; Unknown 8xxx instruction
$4CE    $CBE5   RND      VB, #E5         ; VB = random & E5
$4D0    $0A89   SYS      $A89            ; System call to A89
$4D2    $4600   SNE      V6, #00         ; Skip if V6 != 0
$4D4    $6F94   LD       VF, #94         ; Load 148 into VF
$4D6    $9413   UNKNOWN  $9413           ; Unknown 9xxx instruction
$4D8    $2C75   CALL     $C75            ; Call subroutine at C75
$4DA    $4C65   SNE      VC, #65         ; Skip if VC != 101
$4DC    $3AF1   SE       VA, #F1         ; Skip if VA == 241
$4DE    $D2B1   DRW      V2, VB, #1      ; Draw 1-byte sprite at V2, VB
$4E0    $7FDC   ADD      VF, #DC         ; Add 220 to VF
$4E2    $AE7E   LD       I, $E7E         ; Load E7E into I
$4E4    $682F   LD       V8, #2F         ; Load 47 into V8
$4E6    $F67C   UNKNOWN  F67C            ; Unknown Fxxx instruction
$4E8    $05DC   SYS      $5DC            ; System call to 5DC
$4EA    $77E5   ADD      V7, #E5         ; Add 229 to V7
$4EC    $A72E   LD       I, $72E         ; Load 72E into I
$4EE    $72EF   ADD      V2, #EF         ; Add 239 to V2
$4F0    $4F55   SNE      VF, #55         ; Skip if VF != 85
$4F2    $EF2A   UNKNOWN  $EF2A           ; Unknown Exxx instruction
$4F4    $B4A8   JP       V0, $4A8        ; Jump to V0 + 4A8
$4F6    $8146   SHR      V1              ; V1 >>= 1, VF = LSB
$4F8    $544D   UNKNOWN  $544D           ; Unknown 5xxx instruction
$4FA    $0B5F   SYS      $B5F            ; System call to B5F
$4FC    $D20F   DRW      V2, V0, #F      ; Draw 15-byte sprite at V2, V0
$4FE    $E8DD   UNKNOWN  $E8DD           ; Unknown Exxx instruction
$500    $54F3   UNKNOWN  $54F3           ; Unknown 5xxx instruction
$502    $9A7B   UNKNOWN  $9A7B           ; Unknown 9xxx instruction
$504    $11C5   JP       $1C5            ; Jump to 1C5
$506    $2E6A   CALL     $E6A            ; Call subroutine at E6A
$508    $13FF   JP       $3FF            ; Jump to 3FF
$50A    $84CE   SHL      V4              ; V4 <<= 1, VF = MSB
$50C    $301A   SE       V0, #1A         ; Skip if V0 == 26
$50E    $B755   JP       V0, $755        ; Jump to V0 + 755
$510    $CD99   RND      VD, #99         ; VD = random & 99
$512    $134E   JP       $34E            ; Jump to 34E
$514    $112B   JP       $12B            ; Jump to 12B
$516    $E760   UNKNOWN  $E760           ; Unknown Exxx instruction
$518    $FE1A   UNKNOWN  FE1A            ; Unknown Fxxx instruction
$51A    $5A8A   UNKNOWN  $5A8A           ; Unknown 5xxx instruction
$51C    $5A0D   UNKNOWN  $5A0D           ; Unknown 5xxx instruction
$51E    $C12C   RND      V1, #2C         ; V1 = random & 2C
$520    $41BA   SNE      V1, #BA         ; Skip if V1 != 186
$522    $CEBC   RND      VE, #BC         ; VE = random & BC
$524    $7C53   ADD      VC, #53         ; Add 83 to VC
$526    $725E   ADD      V2, #5E         ; Add 94 to V2
$528    $F631   UNKNOWN  F631            ; Unknown Fxxx instruction
$52A    $241A   CALL     $41A            ; Call subroutine at 41A
$52C    $B5B5   JP       V0, $5B5        ; Jump to V0 + 5B5
$52E    $E8C7   UNKNOWN  $E8C7           ; Unknown Exxx instruction
$530    $AAF2   LD       I, $AF2         ; Load AF2 into I
$532    $B720   JP       V0, $720        ; Jump to V0 + 720
$534    $7476   ADD      V4, #76         ; Add 118 to V4
$536    $2161   CALL     $161            ; Call subroutine at 161
$538    $FE90   UNKNOWN  FE90            ; Unknown Fxxx instruction
$53A    $A811   LD       I, $811         ; Load 811 into I
$53C    $31DF   SE       V1, #DF         ; Skip if V1 == 223
$53E    $A6A5   LD       I, $6A5         ; Load 6A5 into I
$540    $0A49   SYS      $A49            ; System call to A49
$542    $94A1   UNKNOWN  $94A1           ; Unknown 9xxx instruction
$544    $9AA9   UNKNOWN  $9AA9           ; Unknown 9xxx instruction
$546    $3B7C   SE       VB, #7C         ; Skip if VB == 124
$548    $170C   JP       $70C            ; Jump to 70C
$54A    $29EA   CALL     $9EA            ; Call subroutine at 9EA
$54C    $B335   JP       V0, $335        ; Jump to V0 + 335
$54E    $DC30   DRW      VC, V3, #0      ; Draw 0-byte sprite at VC, V3
$550    $2F42   CALL     $F42            ; Call subroutine at F42
$552    $ACAB   LD       I, $CAB         ; Load CAB into I
$554    $63F1   LD       V3, #F1         ; Load 241 into V3
$556    $1303   JP       $303            ; Jump to 303
$558    $3808   SE       V8, #08         ; Skip if V8 == 8
$55A    $7640   ADD      V6, #40         ; Add 64 to V6
$55C    $B729   JP       V0, $729        ; Jump to V0 + 729
$55E    $2667   CALL     $667            ; Call subroutine at 667
$560    $1F2F   JP       $F2F            ; Jump to F2F
$562    $165A   JP       $65A            ; Jump to 65A
$564    $2EDE   CALL     $EDE            ; Call subroutine at EDE
$566    $22AF   CALL     $2AF            ; Call subroutine at 2AF
$568    $4F0E   SNE      VF, #0E         ; Skip if VF != 14
$56A    $B1AB   JP       V0, $1AB        ; Jump to V0 + 1AB
$56C    $DFC1   DRW      VF, VC, #1      ; Draw 1-byte sprite at VF, VC
$56E    $40EB   SNE      V0, #EB         ; Skip if V0 != 235
$570    $F083   UNKNOWN  F083            ; Unknown Fxxx instruction
$572    $9E56   UNKNOWN  $9E56           ; Unknown 9xxx instruction
$574    $17A2   JP       $7A2            ; Jump to 7A2
$576    $E3BC   UNKNOWN  $E3BC           ; Unknown Exxx instruction
$578    $5525   UNKNOWN  $5525           ; Unknown 5xxx instruction
$57A    $7CC2   ADD      VC, #C2         ; Add 194 to VC
$57C    $DFDC   DRW      VF, VD, #C      ; Draw 12-byte sprite at VF, VD
$57E    $6FBC   LD       VF, #BC         ; Load 188 into VF
$580    $5E86   UNKNOWN  $5E86           ; Unknown 5xxx instruction
$582    $68DB   LD       V8, #DB         ; Load 219 into V8
$584    $7848   ADD      V8, #48         ; Add 72 to V8
$586    $FCAD   UNKNOWN  FCAD            ; Unknown Fxxx instruction
$588    $8DB8   UNKNOWN  8DB8            ; Unknown 8xxx instruction
$58A    $12DC   JP       $2DC            ; Jump to 2DC
$58C    $FE64   UNKNOWN  FE64            ; Unknown Fxxx instruction
$58E    $3CFB   SE       VC, #FB         ; Skip if VC == 251
$590    $DB96   DRW      VB, V9, #6      ; Draw 6-byte sprite at VB, V9
$592    $D7AB   DRW      V7, VA, #B      ; Draw 11-byte sprite at V7, VA
$594    $998D   UNKNOWN  $998D           ; Unknown 9xxx instruction
$596    $BC20   JP       V0, $C20        ; Jump to V0 + C20
$598    $1D1A   JP       $D1A            ; Jump to D1A
$59A    $6776   LD       V7, #76         ; Load 118 into V7
$59C    $413C   SNE      V1, #3C         ; Skip if V1 != 60
$59E    $A815   LD       I, $815         ; Load 815 into I
$5A0    $4861   SNE      V8, #61         ; Skip if V8 != 97
$5A2    $8C9A   UNKNOWN  8C9A            ; Unknown 8xxx instruction
$5A4    $D6CE   DRW      V6, VC, #E      ; Draw 14-byte sprite at V6, VC
$5A6    $5DA3   UNKNOWN  $5DA3           ; Unknown 5xxx instruction
$5A8    $805E   SHL      V0              ; V0 <<= 1, VF = MSB
$5AA    $7A21   ADD      VA, #21         ; Add 33 to VA
$5AC    $EAC9   UNKNOWN  $EAC9           ; Unknown Exxx instruction
$5AE    $5410   SE       V4, V1          ; Skip if V4 == V1
$5B0    $8E60   LD       VE, V6          ; VE = V6
$5B2    $054A   SYS      $54A            ; System call to 54A
$5B4    $CC94   RND      VC, #94         ; VC = random & 94
$5B6    $D52E   DRW      V5, V2, #E      ; Draw 14-byte sprite at V5, V2
$5B8    $2A1D   CALL     $A1D            ; Call subroutine at A1D
$5BA    $2396   CALL     $396            ; Call subroutine at 396
$5BC    $E876   UNKNOWN  $E876           ; Unknown Exxx instruction
$5BE    $993F   UNKNOWN  $993F           ; Unknown 9xxx instruction
$5C0    $64E8   LD       V4, #E8         ; Load 232 into V4
$5C2    $38E2   SE       V8, #E2         ; Skip if V8 == 226
$5C4    $D404   DRW      V4, V0, #4      ; Draw 4-byte sprite at V4, V0
$5C6    $7F82   ADD      VF, #82         ; Add 130 to VF
$5C8    $AC44   LD       I, $C44         ; Load C44 into I
$5CA    $1B42   JP       $B42            ; Jump to B42
$5CC    $68A7   LD       V8, #A7         ; Load 167 into V8
$5CE    $E9C3   UNKNOWN  $E9C3           ; Unknown Exxx instruction
$5D0    $3828   SE       V8, #28         ; Skip if V8 == 40
$5D2    $016B   SYS      $16B            ; System call to 16B
$5D4    $EF0F   UNKNOWN  $EF0F           ; Unknown Exxx instruction
$5D6    $A6B8   LD       I, $6B8         ; Load 6B8 into I
$5D8    $6ED0   LD       VE, #D0         ; Load 208 into VE
$5DA    $18D3   JP       $8D3            ; Jump to 8D3
$5DC    $25F4   CALL     $5F4            ; Call subroutine at 5F4
$5DE    $BE2E   JP       V0, $E2E        ; Jump to V0 + E2E
$5E0    $4DE9   SNE      VD, #E9         ; Skip if VD != 233
$5E2    $0A09   SYS      $A09            ; System call to A09
$5E4    $215C   CALL     $15C            ; Call subroutine at 15C
$5E6    $68AB   LD       V8, #AB         ; Load 171 into V8
$5E8    $7D65   ADD      VD, #65         ; Add 101 to VD
$5EA    $7DCF   ADD      VD, #CF         ; Add 207 to VD
$5EC    $DE26   DRW      VE, V2, #6      ; Draw 6-byte sprite at VE, V2
$5EE    $431D   SNE      V3, #1D         ; Skip if V3 != 29
$5F0    $8E86   SHR      VE              ; VE >>= 1, VF = LSB
$5F2    $BCB7   JP       V0, $CB7        ; Jump to V0 + CB7
$5F4    $5EAB   UNKNOWN  $5EAB           ; Unknown 5xxx instruction
$5F6    $9B99   UNKNOWN  $9B99           ; Unknown 9xxx instruction
$5F8    $00CC   SYS      $0CC            ; System call to 0CC
$5FA    $28F8   CALL     $8F8            ; Call subroutine at 8F8
$5FC    $413C   SNE      V1, #3C         ; Skip if V1 != 60
$5FE    $A0B7   LD       I, $0B7         ; Load 0B7 into I
$600    $7916   ADD      V9, #16         ; Add 22 to V9
$602    $F63A   UNKNOWN  F63A            ; Unknown Fxxx instruction
$604    $7594   ADD      V5, #94         ; Add 148 to V5
$606    $99BE   UNKNOWN  $99BE           ; Unknown 9xxx instruction
$608    $ED25   UNKNOWN  $ED25           ; Unknown Exxx instruction
$60A    $3124   SE       V1, #24         ; Skip if V1 == 36
$60C    $60C4   LD       V0, #C4         ; Load 196 into V0
$60E    $E0ED   UNKNOWN  $E0ED           ; Unknown Exxx instruction
$610    $5CEE   UNKNOWN  $5CEE           ; Unknown 5xxx instruction
$612    $A390   LD       I, $390         ; Load 390 into I
$614    $8B60   LD       VB, V6          ; VB = V6
$616    $0684   SYS      $684            ; System call to 684
$618    $B985   JP       V0, $985        ; Jump to V0 + 985
$61A    $CC76   RND      VC, #76         ; VC = random & 76
$61C    $74FE   ADD      V4, #FE         ; Add 254 to V4
$61E    $DFBE   DRW      VF, VB, #E      ; Draw 14-byte sprite at VF, VB
$620    $7D0D   ADD      VD, #0D         ; Add 13 to VD
$622    $2375   CALL     $375            ; Call subroutine at 375
$624    $B293   JP       V0, $293        ; Jump to V0 + 293
$626    $141E   JP       $41E            ; Jump to 41E
$628    $8193   XOR      V1, V9          ; V1 ^= V9
$62A    $56E1   UNKNOWN  $56E1           ; Unknown 5xxx instruction
$62C    $5E78   UNKNOWN  $5E78           ; Unknown 5xxx instruction
$62E    $0CCC   SYS      $CCC            ; System call to CCC
$630    $4769   SNE      V7, #69         ; Skip if V7 != 105
$632    $8C39   UNKNOWN  8C39            ; Unknown 8xxx instruction
$634    $FA51   UNKNOWN  FA51            ; Unknown Fxxx instruction
$636    $6525   LD       V5, #25         ; Load 37 into V5
$638    $6715   LD       V7, #15         ; Load 21 into V7
$63A    $B1E9   JP       V0, $1E9        ; Jump to V0 + 1E9
$63C    $7E0C   ADD      VE, #0C         ; Add 12 to VE
$63E    $B0B7   JP       V0, $0B7        ; Jump to V0 + 0B7
$640    $3FBD   SE       VF, #BD         ; Skip if VF == 189
$642    $32FA   SE       V2, #FA         ; Skip if V2 == 250
$644    $E2F8   UNKNOWN  $E2F8           ; Unknown Exxx instruction
$646    $A182   LD       I, $182         ; Load 182 into I
$648    $A119   LD       I, $119         ; Load 119 into I
$64A    $82E0   LD       V2, VE          ; V2 = VE
$64C    $AB7C   LD       I, $B7C         ; Load B7C into I
$64E    $48AB   SNE      V8, #AB         ; Skip if V8 != 171
$650    $5F2A   UNKNOWN  $5F2A           ; Unknown 5xxx instruction
$652    $4464   SNE      V4, #64         ; Skip if V4 != 100
$654    $58A2   UNKNOWN  $58A2           ; Unknown 5xxx instruction
$656    $C7E8   RND      V7, #E8         ; V7 = random & E8
$658    $BA4D   JP       V0, $A4D        ; Jump to V0 + A4D
$65A    $9902   UNKNOWN  $9902           ; Unknown 9xxx instruction
$65C    $DE6A   DRW      VE, V6, #A      ; Draw 10-byte sprite at VE, V6
$65E    $448B   SNE      V4, #8B         ; Skip if V4 != 139
$660    $6D6D   LD       VD, #6D         ; Load 109 into VD
$662    $5095   UNKNOWN  $5095           ; Unknown 5xxx instruction
$664    $3AEE   SE       VA, #EE         ; Skip if VA == 238
$666    $389B   SE       V8, #9B         ; Skip if V8 == 155
$668    $97CC   UNKNOWN  $97CC           ; Unknown 9xxx instruction
$66A    $2472   CALL     $472            ; Call subroutine at 472
$66C    $C02B   RND      V0, #2B         ; V0 = random & 2B
$66E    $EF47   UNKNOWN  $EF47           ; Unknown Exxx instruction
$670    $B315   JP       V0, $315        ; Jump to V0 + 315
$672    $BD30   JP       V0, $D30        ; Jump to V0 + D30
$674    $C12D   RND      V1, #2D         ; V1 = random & 2D
$676    $06E8   SYS      $6E8            ; System call to 6E8
$678    $8FFD   UNKNOWN  8FFD            ; Unknown 8xxx instruction
$67A    $916F   UNKNOWN  $916F           ; Unknown 9xxx instruction
$67C    $195B   JP       $95B            ; Jump to 95B
$67E    $9415   UNKNOWN  $9415           ; Unknown 9xxx instruction
$680    $EAD8   UNKNOWN  $EAD8           ; Unknown Exxx instruction
$682    $43C5   SNE      V3, #C5         ; Skip if V3 != 197
$684    $2F91   CALL     $F91            ; Call subroutine at F91
$686    $265C   CALL     $65C            ; Call subroutine at 65C
$688    $9A08   UNKNOWN  $9A08           ; Unknown 9xxx instruction
$68A    $D71A   DRW      V7, V1, #A      ; Draw 10-byte sprite at V7, V1
$68C    $3907   SE       V9, #07         ; Skip if V9 == 7
$68E    $25C2   CALL     $5C2            ; Call subroutine at 5C2
$690    $AB34   LD       I, $B34         ; Load B34 into I
$692    $F59F   UNKNOWN  F59F            ; Unknown Fxxx instruction
$694    $1C06   JP       $C06            ; Jump to C06
$696    $DF7F   DRW      VF, V7, #F      ; Draw 15-byte sprite at VF, V7
$698    $E554   UNKNOWN  $E554           ; Unknown Exxx instruction
$69A    $FD96   UNKNOWN  FD96            ; Unknown Fxxx instruction
$69C    $8102   AND      V1, V0          ; V1 &= V0
$69E    $8840   LD       V8, V4          ; V8 = V4
$6A0    $1855   JP       $855            ; Jump to 855
$6A2    $71FE   ADD      V1, #FE         ; Add 254 to V1
$6A4    $4D8B   SNE      VD, #8B         ; Skip if VD != 139
$6A6    $B5F5   JP       V0, $5F5        ; Jump to V0 + 5F5
$6A8    $E19E   SKP      V1              ; Skip if key V1 pressed
$6AA    $3EF5   SE       VE, #F5         ; Skip if VE == 245
$6AC    $2461   CALL     $461            ; Call subroutine at 461
$6AE    $6FE8   LD       VF, #E8         ; Load 232 into VF
$6B0    $5011   UNKNOWN  $5011           ; Unknown 5xxx instruction
$6B2    $E640   UNKNOWN  $E640           ; Unknown Exxx instruction
$6B4    $FB3B   UNKNOWN  FB3B            ; Unknown Fxxx instruction
$6B6    $746D   ADD      V4, #6D         ; Add 109 to V4
$6B8    $A58B   LD       I, $58B         ; Load 58B into I
$6BA    $E92E   UNKNOWN  $E92E           ; Unknown Exxx instruction
$6BC    $F10D   UNKNOWN  F10D            ; Unknown Fxxx instruction
$6BE    $22E4   CALL     $2E4            ; Call subroutine at 2E4
$6C0    $B83A   JP       V0, $83A        ; Jump to V0 + 83A
$6C2    $728B   ADD      V2, #8B         ; Add 139 to V2
$6C4    $5FAC   UNKNOWN  $5FAC           ; Unknown 5xxx instruction
$6C6    $3C79   SE       VC, #79         ; Skip if VC == 121
$6C8    $F846   UNKNOWN  F846            ; Unknown Fxxx instruction
$6CA    $90DA   UNKNOWN  $90DA           ; Unknown 9xxx instruction
$6CC    $4826   SNE      V8, #26         ; Skip if V8 != 38
$6CE    $D349   DRW      V3, V4, #9      ; Draw 9-byte sprite at V3, V4
$6D0    $BBDE   JP       V0, $BDE        ; Jump to V0 + BDE
$6D2    $2BB8   CALL     $BB8            ; Call subroutine at BB8
$6D4    $FAC8   UNKNOWN  FAC8            ; Unknown Fxxx instruction
$6D6    $B6E2   JP       V0, $6E2        ; Jump to V0 + 6E2
$6D8    $F8A1   UNKNOWN  F8A1            ; Unknown Fxxx instruction
$6DA    $96B4   UNKNOWN  $96B4           ; Unknown 9xxx instruction
$6DC    $56A5   UNKNOWN  $56A5           ; Unknown 5xxx instruction
$6DE    $3AAE   SE       VA, #AE         ; Skip if VA == 174
$6E0    $3C40   SE       VC, #40         ; Skip if VC == 64
$6E2    $D9BE   DRW      V9, VB, #E      ; Draw 14-byte sprite at V9, VB
$6E4    $FE29   LD       F, VE           ; I = sprite address for digit VE
$6E6    $0D30   SYS      $D30            ; System call to D30
$6E8    $B452   JP       V0, $452        ; Jump to V0 + 452
$6EA    $9FEF   UNKNOWN  $9FEF           ; Unknown 9xxx instruction
$6EC    $E65D   UNKNOWN  $E65D           ; Unknown Exxx instruction
$6EE    $206F   CALL     $06F            ; Call subroutine at 06F
$6F0    $4FCB   SNE      VF, #CB         ; Skip if VF != 203
$6F2    $880D   UNKNOWN  880D            ; Unknown 8xxx instruction
$6F4    $8759   UNKNOWN  8759            ; Unknown 8xxx instruction
$6F6    $8F96   SHR      VF              ; VF >>= 1, VF = LSB
$6F8    $2F49   CALL     $F49            ; Call subroutine at F49
$6FA    $B80F   JP       V0, $80F        ; Jump to V0 + 80F
$6FC    $632C   LD       V3, #2C         ; Load 44 into V3
$6FE    $A51D   LD       I, $51D         ; Load 51D into I
$700    $2F16   CALL     $F16            ; Call subroutine at F16
$702    $6C04   LD       VC, #04         ; Load 4 into VC
$704    $16D8   JP       $6D8            ; Jump to 6D8
$706    $F6D4   UNKNOWN  F6D4            ; Unknown Fxxx instruction
$708    $BC56   JP       V0, $C56        ; Jump to V0 + C56
$70A    $C555   RND      V5, #55         ; V5 = random & 55
$70C    $6504   LD       V5, #04         ; Load 4 into V5
$70E    $EF9C   UNKNOWN  $EF9C           ; Unknown Exxx instruction
$710    $FF07   LD       VF, DT          ; VF = delay timer
$712    $3026   SE       V0, #26         ; Skip if V0 == 38
$714    $FACC   UNKNOWN  FACC            ; Unknown Fxxx instruction
$716    $AA34   LD       I, $A34         ; Load A34 into I
$718    $2820   CALL     $820            ; Call subroutine at 820
$71A    $7860   ADD      V8, #60         ; Add 96 to V8
$71C    $7DBA   ADD      VD, #BA         ; Add 186 to VD
$71E    $A568   LD       I, $568         ; Load 568 into I
$720    $994D   UNKNOWN  $994D           ; Unknown 9xxx instruction
$722    $D37B   DRW      V3, V7, #B      ; Draw 11-byte sprite at V3, V7
$724    $36B7   SE       V6, #B7         ; Skip if V6 == 183
$726    $83B7   SUBN     V3, VB          ; V3 = VB - V3, VF = !borrow
$728    $AA15   LD       I, $A15         ; Load A15 into I
$72A    $39BC   SE       V9, #BC         ; Skip if V9 == 188
$72C    $469C   SNE      V6, #9C         ; Skip if V6 != 156
$72E    $77B7   ADD      V7, #B7         ; Add 183 to V7
$730    $603F   LD       V0, #3F         ; Load 63 into V0
$732    $5130   SE       V1, V3          ; Skip if V1 == V3
$734    $172D   JP       $72D            ; Jump to 72D
$736    $F374   UNKNOWN  F374            ; Unknown Fxxx instruction
$738    $6457   LD       V4, #57         ; Load 87 into V4
$73A    $0999   SYS      $999            ; System call to 999
$73C    $F52B   UNKNOWN  F52B            ; Unknown Fxxx instruction
$73E    $840C   UNKNOWN  840C            ; Unknown 8xxx instruction
$740    $A6A8   LD       I, $6A8         ; Load 6A8 into I
$742    $9CB9   UNKNOWN  $9CB9           ; Unknown 9xxx instruction
$744    $8949   UNKNOWN  8949            ; Unknown 8xxx instruction
$746    $9790   SNE      V7, V9          ; Skip if V7 != V9
$748    $2143   CALL     $143            ; Call subroutine at 143
$74A    $9734   UNKNOWN  $9734           ; Unknown 9xxx instruction
$74C    $8299   UNKNOWN  8299            ; Unknown 8xxx instruction
$74E    $9CF1   UNKNOWN  $9CF1           ; Unknown 9xxx instruction
$750    $E367   UNKNOWN  $E367           ; Unknown Exxx instruction
$752    $1B6F   JP       $B6F            ; Jump to B6F
$754    $00B1   SYS      $0B1            ; System call to 0B1
$756    $F122   UNKNOWN  F122            ; Unknown Fxxx instruction
$758    $5760   SE       V7, V6          ; Skip if V7 == V6
$75A    $511B   UNKNOWN  $511B           ; Unknown 5xxx instruction
$75C    $2143   CALL     $143            ; Call subroutine at 143
$75E    $42AC   SNE      V2, #AC         ; Skip if V2 != 172
$760    $95C2   UNKNOWN  $95C2           ; Unknown 9xxx instruction
$762    $6819   LD       V8, #19         ; Load 25 into V8
$764    $D673   DRW      V6, V7, #3      ; Draw 3-byte sprite at V6, V7
$766    $214A   CALL     $14A            ; Call subroutine at 14A
$768    $17DB   JP       $7DB            ; Jump to 7DB
$76A    $47E8   SNE      V7, #E8         ; Skip if V7 != 232
$76C    $361D   SE       V6, #1D         ; Skip if V6 == 29
$76E    $A0E9   LD       I, $0E9         ; Load 0E9 into I
$770    $30D2   SE       V0, #D2         ; Skip if V0 == 210
$772    $D5ED   DRW      V5, VE, #D      ; Draw 13-byte sprite at V5, VE
$774    $F3D5   UNKNOWN  F3D5            ; Unknown Fxxx instruction
$776    $80DD   UNKNOWN  80DD            ; Unknown 8xxx instruction
$778    $8A58   UNKNOWN  8A58            ; Unknown 8xxx instruction
$77A    $9F3B   UNKNOWN  $9F3B           ; Unknown 9xxx instruction
$77C    $BDCF   JP       V0, $DCF        ; Jump to V0 + DCF
$77E    $FE79   UNKNOWN  FE79            ; Unknown Fxxx instruction
$780    $AA82   LD       I, $A82         ; Load A82 into I
$782    $5C9A   UNKNOWN  $5C9A           ; Unknown 5xxx instruction
$784    $0485   SYS      $485            ; System call to 485
$786    $2C02   CALL     $C02            ; Call subroutine at C02
$788    $AE09   LD       I, $E09         ; Load E09 into I
$78A    $6A1E   LD       VA, #1E         ; Load 30 into VA
$78C    $A9E6   LD       I, $9E6         ; Load 9E6 into I
$78E    $7E59   ADD      VE, #59         ; Add 89 to VE
$790    $70D3   ADD      V0, #D3         ; Add 211 to V0
$792    $87AF   UNKNOWN  87AF            ; Unknown 8xxx instruction
$794    $2721   CALL     $721            ; Call subroutine at 721
$796    $1D39   JP       $D39            ; Jump to D39
$798    $20FC   CALL     $0FC            ; Call subroutine at 0FC
$79A    $7310   ADD      V3, #10         ; Add 16 to V3
$79C    $BF43   JP       V0, $F43        ; Jump to V0 + F43
$79E    $B08A   JP       V0, $08A        ; Jump to V0 + 08A
$7A0    $4CBE   SNE      VC, #BE         ; Skip if VC != 190
$7A2    $2528   CALL     $528            ; Call subroutine at 528
$7A4    $6996   LD       V9, #96         ; Load 150 into V9
$7A6    $D209   DRW      V2, V0, #9      ; Draw 9-byte sprite at V2, V0
$7A8    $144E   JP       $44E            ; Jump to 44E
$7AA    $3492   SE       V4, #92         ; Skip if V4 == 146
$7AC    $816B   UNKNOWN  816B            ; Unknown 8xxx instruction
$7AE    $039F   SYS      $39F            ; System call to 39F
$7B0    $B671   JP       V0, $671        ; Jump to V0 + 671
$7B2    $5A07   UNKNOWN  $5A07           ; Unknown 5xxx instruction
$7B4    $E5E9   UNKNOWN  $E5E9           ; Unknown Exxx instruction
$7B6    $D72C   DRW      V7, V2, #C      ; Draw 12-byte sprite at V7, V2
$7B8    $6E8B   LD       VE, #8B         ; Load 139 into VE
$7BA    $6C47   LD       VC, #47         ; Load 71 into VC
$7BC    $19E3   JP       $9E3            ; Jump to 9E3
$7BE    $B133   JP       V0, $133        ; Jump to V0 + 133
$7C0    $1BC1   JP       $BC1            ; Jump to BC1
$7C2    $FAE0   UNKNOWN  FAE0            ; Unknown Fxxx instruction
$7C4    $BFE4   JP       V0, $FE4        ; Jump to V0 + FE4
$7C6    $8585   SUB      V5, V8          ; V5 -= V8, VF = !borrow
$7C8    $6F7C   LD       VF, #7C         ; Load 124 into VF
$7CA    $ACFA   LD       I, $CFA         ; Load CFA into I
$7CC    $E4B7   UNKNOWN  $E4B7           ; Unknown Exxx instruction
$7CE    $626B   LD       V2, #6B         ; Load 107 into V2
$7D0    $FFE4   UNKNOWN  FFE4            ; Unknown Fxxx instruction
$7D2    $FAEB   UNKNOWN  FAEB            ; Unknown Fxxx instruction
$7D4    $AD78   LD       I, $D78         ; Load D78 into I
$7D6    $9877   UNKNOWN  $9877           ; Unknown 9xxx instruction
$7D8    $F315   LD       DT, V3          ; Delay timer = V3
$7DA    $8E60   LD       VE, V6          ; VE = V6
$7DC    $EC58   UNKNOWN  $EC58           ; Unknown Exxx instruction
$7DE    $9F6F   UNKNOWN  $9F6F           ; Unknown 9xxx instruction
$7E0    $A357   LD       I, $357         ; Load 357 into I
$7E2    $E168   UNKNOWN  $E168           ; Unknown Exxx instruction
$7E4    $34ED   SE       V4, #ED         ; Skip if V4 == 237
$7E6    $D70E   DRW      V7, V0, #E      ; Draw 14-byte sprite at V7, V0
$7E8    $41F5   SNE      V1, #F5         ; Skip if V1 != 245
$7EA    $2408   CALL     $408            ; Call subroutine at 408
$7EC    $EE05   UNKNOWN  $EE05           ; Unknown Exxx instruction
$7EE    $62A2   LD       V2, #A2         ; Load 162 into V2
$7F0    $0CAC   SYS      $CAC            ; System call to CAC
$7F2    $A9F6   LD       I, $9F6         ; Load 9F6 into I
$7F4    $7B03   ADD      VB, #03         ; Add 3 to VB
$7F6    $6E7C   LD       VE, #7C         ; Load 124 into VE
$7F8    $8C3A   UNKNOWN  8C3A            ; Unknown 8xxx instruction
$7FA    $BF09   JP       V0, $F09        ; Jump to V0 + F09
$7FC    $420F   SNE      V2, #0F         ; Skip if V2 != 15
$7FE    $152F   JP       $52F            ; Jump to 52F
$800    $6792   LD       V7, #92         ; Load 146 into V7
$802    $C504   RND      V5, #04         ; V5 = random & 04
$804    $22C1   CALL     $2C1            ; Call subroutine at 2C1
$806    $04B7   SYS      $4B7            ; System call to 4B7
$808    $548E   UNKNOWN  $548E           ; Unknown 5xxx instruction
$80A    $31D7   SE       V1, #D7         ; Skip if V1 == 215
$80C    $FDE0   UNKNOWN  FDE0            ; Unknown Fxxx instruction
$80E    $A42A   LD       I, $42A         ; Load 42A into I
$810    $4E50   SNE      VE, #50         ; Skip if VE != 80
$812    $2688   CALL     $688            ; Call subroutine at 688
$814    $80DF   UNKNOWN  80DF            ; Unknown 8xxx instruction
$816    $7AA4   ADD      VA, #A4         ; Add 164 to VA
$818    $4BE8   SNE      VB, #E8         ; Skip if VB != 232
$81A    $D6A8   DRW      V6, VA, #8      ; Draw 8-byte sprite at V6, VA
$81C    $B159   JP       V0, $159        ; Jump to V0 + 159
$81E    $8999   UNKNOWN  8999            ; Unknown 8xxx instruction
$820    $621D   LD       V2, #1D         ; Load 29 into V2
$822    $BD54   JP       V0, $D54        ; Jump to V0 + D54
$824    $73AC   ADD      V3, #AC         ; Add 172 to V3
$826    $978B   UNKNOWN  $978B           ; Unknown 9xxx instruction
$828    $B421   JP       V0, $421        ; Jump to V0 + 421
$82A    $6DF2   LD       VD, #F2         ; Load 242 into VD
$82C    $271D   CALL     $71D            ; Call subroutine at 71D
$82E    $C9F5   RND      V9, #F5         ; V9 = random & F5
$830    $DBDC   DRW      VB, VD, #C      ; Draw 12-byte sprite at VB, VD
$832    $8676   SHR      V6              ; V6 >>= 1, VF = LSB
$834    $D5C0   DRW      V5, VC, #0      ; Draw 0-byte sprite at V5, VC
$836    $1A37   JP       $A37            ; Jump to A37
$838    $EE51   UNKNOWN  $EE51           ; Unknown Exxx instruction
$83A    $47EA   SNE      V7, #EA         ; Skip if V7 != 234
$83C    $024E   SYS      $24E            ; System call to 24E
$83E    $6B0A   LD       VB, #0A         ; Load 10 into VB
$840    $D1A1   DRW      V1, VA, #1      ; Draw 1-byte sprite at V1, VA
$842    $EE0B   UNKNOWN  $EE0B           ; Unknown Exxx instruction
$844    $2AB0   CALL     $AB0            ; Call subroutine at AB0
$846    $714A   ADD      V1, #4A         ; Add 74 to V1
$848    $FD06   UNKNOWN  FD06            ; Unknown Fxxx instruction
$84A    $CB0C   RND      VB, #0C         ; VB = random & 0C
$84C    $99E4   UNKNOWN  $99E4           ; Unknown 9xxx instruction
$84E    $824D   UNKNOWN  824D            ; Unknown 8xxx instruction
$850    $B992   JP       V0, $992        ; Jump to V0 + 992
$852    $7828   ADD      V8, #28         ; Add 40 to V8
$854    $E9DD   UNKNOWN  $E9DD           ; Unknown Exxx instruction
$856    $52EC   UNKNOWN  $52EC           ; Unknown 5xxx instruction
$858    $B894   JP       V0, $894        ; Jump to V0 + 894
$85A    $7015   ADD      V0, #15         ; Add 21 to V0
$85C    $13F1   JP       $3F1            ; Jump to 3F1
$85E    $241F   CALL     $41F            ; Call subroutine at 41F
$860    $3900   SE       V9, #00         ; Skip if V9 == 0
$862    $1CFE   JP       $CFE            ; Jump to CFE
$864    $E7E0   UNKNOWN  $E7E0           ; Unknown Exxx instruction
$866    $AEA7   LD       I, $EA7         ; Load EA7 into I
$868    $25EE   CALL     $5EE            ; Call subroutine at 5EE
$86A    $D11A   DRW      V1, V1, #A      ; Draw 10-byte sprite at V1, V1
$86C    $6A5C   LD       VA, #5C         ; Load 92 into VA
$86E    $2C2C   CALL     $C2C            ; Call subroutine at C2C
$870    $D163   DRW      V1, V6, #3      ; Draw 3-byte sprite at V1, V6
$872    $E807   UNKNOWN  $E807           ; Unknown Exxx instruction
$874    $37A6   SE       V7, #A6         ; Skip if V7 == 166
$876    $1AE6   JP       $AE6            ; Jump to AE6
$878    $D7BC   DRW      V7, VB, #C      ; Draw 12-byte sprite at V7, VB
$87A    $CAAC   RND      VA, #AC         ; VA = random & AC
$87C    $EE8D   UNKNOWN  $EE8D           ; Unknown Exxx instruction
$87E    $4ECC   SNE      VE, #CC         ; Skip if VE != 204
$880    $D753   DRW      V7, V5, #3      ; Draw 3-byte sprite at V7, V5
$882    $82FE   SHL      V2              ; V2 <<= 1, VF = MSB
$884    $3D07   SE       VD, #07         ; Skip if VD == 7
$886    $842B   UNKNOWN  842B            ; Unknown 8xxx instruction
$888    $DBB9   DRW      VB, VB, #9      ; Draw 9-byte sprite at VB, VB
$88A    $A4F4   LD       I, $4F4         ; Load 4F4 into I
$88C    $F98F   UNKNOWN  F98F            ; Unknown Fxxx instruction
$88E    $BA54   JP       V0, $A54        ; Jump to V0 + A54
$890    $5420   SE       V4, V2          ; Skip if V4 == V2
$892    $22FA   CALL     $2FA            ; Call subroutine at 2FA
$894    $37FA   SE       V7, #FA         ; Skip if V7 == 250
$896    $72F4   ADD      V2, #F4         ; Add 244 to V2
$898    $EF2A   UNKNOWN  $EF2A           ; Unknown Exxx instruction
$89A    $2520   CALL     $520            ; Call subroutine at 520
$89C    $0FA7   SYS      $FA7            ; System call to FA7
$89E    $0C86   SYS      $C86            ; System call to C86
$8A0    $1557   JP       $557            ; Jump to 557
$8A2    $35D9   SE       V5, #D9         ; Skip if V5 == 217
$8A4    $A976   LD       I, $976         ; Load 976 into I
$8A6    $A23A   LD       I, $23A         ; Load 23A into I
$8A8    $05A0   SYS      $5A0            ; System call to 5A0
$8AA    $F151   UNKNOWN  F151            ; Unknown Fxxx instruction
$8AC    $AD8B   LD       I, $D8B         ; Load D8B into I
$8AE    $C21B   RND      V2, #1B         ; V2 = random & 1B
$8B0    $FC93   UNKNOWN  FC93            ; Unknown Fxxx instruction
$8B2    $D701   DRW      V7, V0, #1      ; Draw 1-byte sprite at V7, V0
$8B4    $5D5B   UNKNOWN  $5D5B           ; Unknown 5xxx instruction
$8B6    $6DB7   LD       VD, #B7         ; Load 183 into VD
$8B8    $3CF5   SE       VC, #F5         ; Skip if VC == 245
$8BA    $F279   UNKNOWN  F279            ; Unknown Fxxx instruction
$8BC    $3951   SE       V9, #51         ; Skip if V9 == 81
$8BE    $43E9   SNE      V3, #E9         ; Skip if V3 != 233
$8C0    $00E5   SYS      $0E5            ; System call to 0E5
$8C2    $AECF   LD       I, $ECF         ; Load ECF into I
$8C4    $295C   CALL     $95C            ; Call subroutine at 95C
$8C6    $9369   UNKNOWN  $9369           ; Unknown 9xxx instruction
$8C8    $C9B2   RND      V9, #B2         ; V9 = random & B2
$8CA    $3EA7   SE       VE, #A7         ; Skip if VE == 167
$8CC    $6067   LD       V0, #67         ; Load 103 into V0
$8CE    $C395   RND      V3, #95         ; V3 = random & 95
$8D0    $0D63   SYS      $D63            ; System call to D63
$8D2    $68EA   LD       V8, #EA         ; Load 234 into V8
$8D4    $2EAB   CALL     $EAB            ; Call subroutine at EAB
$8D6    $67E0   LD       V7, #E0         ; Load 224 into V7
$8D8    $6D4A   LD       VD, #4A         ; Load 74 into VD
$8DA    $3527   SE       V5, #27         ; Skip if V5 == 39
$8DC    $7F05   ADD      VF, #05         ; Add 5 to VF
$8DE    $49E4   SNE      V9, #E4         ; Skip if V9 != 228
$8E0    $1E30   JP       $E30            ; Jump to E30
$8E2    $2713   CALL     $713            ; Call subroutine at 713
$8E4    $F055   LD       [I], V0         ; Store V0-V0 at I
$8E6    $B0C6   JP       V0, $0C6        ; Jump to V0 + 0C6
$8E8    $3C53   SE       VC, #53         ; Skip if VC == 83
$8EA    $78F7   ADD      V8, #F7         ; Add 247 to V8
$8EC    $A813   LD       I, $813         ; Load 813 into I
$8EE    $86FB   UNKNOWN  86FB            ; Unknown 8xxx instruction
$8F0    $6912   LD       V9, #12         ; Load 18 into V9
$8F2    $653A   LD       V5, #3A         ; Load 58 into V5
$8F4    $7D35   ADD      VD, #35         ; Add 53 to VD
$8F6    $9DB0   SNE      VD, VB          ; Skip if VD != VB
$8F8    $42E2   SNE      V2, #E2         ; Skip if V2 != 226
$8FA    $F1D3   UNKNOWN  F1D3            ; Unknown Fxxx instruction
$8FC    $307F   SE       V0, #7F         ; Skip if V0 == 127
$8FE    $92AC   UNKNOWN  $92AC           ; Unknown 9xxx instruction
$900    $0680   SYS      $680            ; System call to 680
$902    $475C   SNE      V7, #5C         ; Skip if V7 != 92
$904    $3B84   SE       VB, #84         ; Skip if VB == 132
$906    $BA32   JP       V0, $A32        ; Jump to V0 + A32
$908    $E2A3   UNKNOWN  $E2A3           ; Unknown Exxx instruction
$90A    $C425   RND      V4, #25         ; V4 = random & 25
$90C    $4E2E   SNE      VE, #2E         ; Skip if VE != 46
$90E    $E15E   UNKNOWN  $E15E           ; Unknown Exxx instruction
$910    $DC4F   DRW      VC, V4, #F      ; Draw 15-byte sprite at VC, V4
$912    $D6FD   DRW      V6, VF, #D      ; Draw 13-byte sprite at V6, VF
$914    $17DC   JP       $7DC            ; Jump to 7DC
$916    $021C   SYS      $21C            ; System call to 21C
$918    $9355   UNKNOWN  $9355           ; Unknown 9xxx instruction
$91A    $9328   UNKNOWN  $9328           ; Unknown 9xxx instruction
$91C    $5F6A   UNKNOWN  $5F6A           ; Unknown 5xxx instruction
$91E    $6626   LD       V6, #26         ; Load 38 into V6
$920    $FC91   UNKNOWN  FC91            ; Unknown Fxxx instruction
$922    $C791   RND      V7, #91         ; V7 = random & 91
$924    $0185   SYS      $185            ; System call to 185
$926    $4739   SNE      V7, #39         ; Skip if V7 != 57
$928    $CFC9   RND      VF, #C9         ; VF = random & C9
$92A    $65F0   LD       V5, #F0         ; Load 240 into V5
$92C    $4D9C   SNE      VD, #9C         ; Skip if VD != 156
$92E    $3C59   SE       VC, #59         ; Skip if VC == 89
$930    $0EF0   SYS      $EF0            ; System call to EF0
$932    $8E69   UNKNOWN  8E69            ; Unknown 8xxx instruction
$934    $D3D6   DRW      V3, VD, #6      ; Draw 6-byte sprite at V3, VD
$936    $A972   LD       I, $972         ; Load 972 into I
$938    $97E9   UNKNOWN  $97E9           ; Unknown 9xxx instruction
$93A    $D83C   DRW      V8, V3, #C      ; Draw 12-byte sprite at V8, V3
$93C    $42CF   SNE      V2, #CF         ; Skip if V2 != 207
$93E    $125C   JP       $25C            ; Jump to 25C
$940    $98E0   SNE      V8, VE          ; Skip if V8 != VE
$942    $8650   LD       V6, V5          ; V6 = V5
$944    $74FF   ADD      V4, #FF         ; Add 255 to V4
$946    $E55A   UNKNOWN  $E55A           ; Unknown Exxx instruction
$948    $DFC6   DRW      VF, VC, #6      ; Draw 6-byte sprite at VF, VC
$94A    $F70A   LD       V7, K           ; Wait for key press, store in V7
$94C    $C505   RND      V5, #05         ; V5 = random & 05
$94E    $4196   SNE      V1, #96         ; Skip if V1 != 150
$950    $0BB6   SYS      $BB6            ; System call to BB6
$952    $4D5F   SNE      VD, #5F         ; Skip if VD != 95
$954    $C351   RND      V3, #51         ; V3 = random & 51
$956    $3C26   SE       VC, #26         ; Skip if VC == 38
$958    $FC2A   UNKNOWN  FC2A            ; Unknown Fxxx instruction
$95A    $7443   ADD      V4, #43         ; Add 67 to V4
$95C    $C95F   RND      V9, #5F         ; V9 = random & 5F
$95E    $5395   UNKNOWN  $5395           ; Unknown 5xxx instruction
$960    $A0F4   LD       I, $0F4         ; Load 0F4 into I
$962    $26CC   CALL     $6CC            ; Call subroutine at 6CC
$964    $D88D   DRW      V8, V8, #D      ; Draw 13-byte sprite at V8, V8
$966    $E56C   UNKNOWN  $E56C           ; Unknown Exxx instruction
$968    $3A07   SE       VA, #07         ; Skip if VA == 7
$96A    $9470   SNE      V4, V7          ; Skip if V4 != V7
$96C    $DC7F   DRW      VC, V7, #F      ; Draw 15-byte sprite at VC, V7
$96E    $3803   SE       V8, #03         ; Skip if V8 == 3
$970    $F7CC   UNKNOWN  F7CC            ; Unknown Fxxx instruction
$972    $3517   SE       V5, #17         ; Skip if V5 == 23
$974    $27F2   CALL     $7F2            ; Call subroutine at 7F2
$976    $6A64   LD       VA, #64         ; Load 100 into VA
$978    $78D1   ADD      V8, #D1         ; Add 209 to V8
$97A    $7731   ADD      V7, #31         ; Add 49 to V7
$97C    $2823   CALL     $823            ; Call subroutine at 823
$97E    $BD39   JP       V0, $D39        ; Jump to V0 + D39
$980    $55EF   UNKNOWN  $55EF           ; Unknown 5xxx instruction
$982    $0765   SYS      $765            ; System call to 765
$984    $42FA   SNE      V2, #FA         ; Skip if V2 != 250
$986    $33D1   SE       V3, #D1         ; Skip if V3 == 209
$988    $2045   CALL     $045            ; Call subroutine at 045
$98A    $7E87   ADD      VE, #87         ; Add 135 to VE
$98C    $1AA2   JP       $AA2            ; Jump to AA2
$98E    $B74F   JP       V0, $74F        ; Jump to V0 + 74F
$990    $40BA   SNE      V0, #BA         ; Skip if V0 != 186
$992    $A3B7   LD       I, $3B7         ; Load 3B7 into I
$994    $B348   JP       V0, $348        ; Jump to V0 + 348
$996    $8571   OR       V5, V7          ; V5 |= V7
$998    $D9D3   DRW      V9, VD, #3      ; Draw 3-byte sprite at V9, VD
$99A    $B311   JP       V0, $311        ; Jump to V0 + 311
$99C    $B902   JP       V0, $902        ; Jump to V0 + 902
$99E    $0C6E   SYS      $C6E            ; System call to C6E
$9A0    $7487   ADD      V4, #87         ; Add 135 to V4
$9A2    $1D51   JP       $D51            ; Jump to D51
$9A4    $57DA   UNKNOWN  $57DA           ; Unknown 5xxx instruction
$9A6    $C62B   RND      V6, #2B         ; V6 = random & 2B
$9A8    $D5B1   DRW      V5, VB, #1      ; Draw 1-byte sprite at V5, VB
$9AA    $DD9D   DRW      VD, V9, #D      ; Draw 13-byte sprite at VD, V9
$9AC    $D4AF   DRW      V4, VA, #F      ; Draw 15-byte sprite at V4, VA
$9AE    $EF52   UNKNOWN  $EF52           ; Unknown Exxx instruction
$9B0    $FDAF   UNKNOWN  FDAF            ; Unknown Fxxx instruction
$9B2    $C99E   RND      V9, #9E         ; V9 = random & 9E
$9B4    $9C98   UNKNOWN  $9C98           ; Unknown 9xxx instruction
$9B6    $2C2F   CALL     $C2F            ; Call subroutine at C2F
$9B8    $0061   SYS      $061            ; System call to 061
$9BA    $AD2E   LD       I, $D2E         ; Load D2E into I
$9BC    $B64A   JP       V0, $64A        ; Jump to V0 + 64A
$9BE    $E624   UNKNOWN  $E624           ; Unknown Exxx instruction
$9C0    $3177   SE       V1, #77         ; Skip if V1 == 119
$9C2    $1FCE   JP       $FCE            ; Jump to FCE
$9C4    $2401   CALL     $401            ; Call subroutine at 401
$9C6    $CE34   RND      VE, #34         ; VE = random & 34
$9C8    $BE41   JP       V0, $E41        ; Jump to V0 + E41
$9CA    $6069   LD       V0, #69         ; Load 105 into V0
$9CC    $170E   JP       $70E            ; Jump to 70E
$9CE    $233A   CALL     $33A            ; Call subroutine at 33A
$9D0    $353C   SE       V5, #3C         ; Skip if V5 == 60
$9D2    $3BD4   SE       VB, #D4         ; Skip if VB == 212
$9D4    $EFFA   UNKNOWN  $EFFA           ; Unknown Exxx instruction
$9D6    $4DE0   SNE      VD, #E0         ; Skip if VD != 224
$9D8    $2142   CALL     $142            ; Call subroutine at 142
$9DA    $5328   UNKNOWN  $5328           ; Unknown 5xxx instruction
$9DC    $D1EB   DRW      V1, VE, #B      ; Draw 11-byte sprite at V1, VE
$9DE    $B57A   JP       V0, $57A        ; Jump to V0 + 57A
$9E0    $B72E   JP       V0, $72E        ; Jump to V0 + 72E
$9E2    $F01A   UNKNOWN  F01A            ; Unknown Fxxx instruction
$9E4    $C279   RND      V2, #79         ; V2 = random & 79
$9E6    $BB46   JP       V0, $B46        ; Jump to V0 + B46
$9E8    $A0B0   LD       I, $0B0         ; Load 0B0 into I
$9EA    $0E9B   SYS      $E9B            ; System call to E9B
$9EC    $0E24   SYS      $E24            ; System call to E24
$9EE    $2BF0   CALL     $BF0            ; Call subroutine at BF0
$9F0    $C176   RND      V1, #76         ; V1 = random & 76
$9F2    $3DA1   SE       VD, #A1         ; Skip if VD == 161
$9F4    $E6FF   UNKNOWN  $E6FF           ; Unknown Exxx instruction
$9F6    $DDE1   DRW      VD, VE, #1      ; Draw 1-byte sprite at VD, VE
$9F8    $6C86   LD       VC, #86         ; Load 134 into VC
$9FA    $A96A   LD       I, $96A         ; Load 96A into I
$9FC    $2434   CALL     $434            ; Call subroutine at 434
$9FE    $6AF0   LD       VA, #F0         ; Load 240 into VA
$A00    $99EF   UNKNOWN  $99EF           ; Unknown 9xxx instruction
$A02    $6EB1   LD       VE, #B1         ; Load 177 into VE
$A04    $EC4E   UNKNOWN  $EC4E           ; Unknown Exxx instruction
$A06    $E4F5   UNKNOWN  $E4F5           ; Unknown Exxx instruction
$A08    $4CC1   SNE      VC, #C1         ; Skip if VC != 193
$A0A    $EFD9   UNKNOWN  $EFD9           ; Unknown Exxx instruction
$A0C    $8BCF   UNKNOWN  8BCF            ; Unknown 8xxx instruction
$A0E    $B5A7   JP       V0, $5A7        ; Jump to V0 + 5A7
$A10    $E4FB   UNKNOWN  $E4FB           ; Unknown Exxx instruction
$A12    $E212   UNKNOWN  $E212           ; Unknown Exxx instruction
$A14    $7C09   ADD      VC, #09         ; Add 9 to VC
$A16    $9619   UNKNOWN  $9619           ; Unknown 9xxx instruction
$A18    $5EA6   UNKNOWN  $5EA6           ; Unknown 5xxx instruction
$A1A    $D608   DRW      V6, V0, #8      ; Draw 8-byte sprite at V6, V0
$A1C    $E590   UNKNOWN  $E590           ; Unknown Exxx instruction
$A1E    $A307   LD       I, $307         ; Load 307 into I
$A20    $9CAA   UNKNOWN  $9CAA           ; Unknown 9xxx instruction
$A22    $36B2   SE       V6, #B2         ; Skip if V6 == 178
$A24    $2CAF   CALL     $CAF            ; Call subroutine at CAF
$A26    $29CF   CALL     $9CF            ; Call subroutine at 9CF
$A28    $F724   UNKNOWN  F724            ; Unknown Fxxx instruction
$A2A    $D8D6   DRW      V8, VD, #6      ; Draw 6-byte sprite at V8, VD
$A2C    $180C   JP       $80C            ; Jump to 80C
$A2E    $FA5C   UNKNOWN  FA5C            ; Unknown Fxxx instruction
$A30    $1ACD   JP       $ACD            ; Jump to ACD
$A32    $331D   SE       V3, #1D         ; Skip if V3 == 29
$A34    $EB23   UNKNOWN  $EB23           ; Unknown Exxx instruction
$A36    $59BA   UNKNOWN  $59BA           ; Unknown 5xxx instruction
$A38    $18D5   JP       $8D5            ; Jump to 8D5
$A3A    $B77A   JP       V0, $77A        ; Jump to V0 + 77A
$A3C    $6507   LD       V5, #07         ; Load 7 into V5
$A3E    $78D5   ADD      V8, #D5         ; Add 213 to V8
$A40    $8709   UNKNOWN  8709            ; Unknown 8xxx instruction
$A42    $7C78   ADD      VC, #78         ; Add 120 to VC
$A44    $9E01   UNKNOWN  $9E01           ; Unknown 9xxx instruction
$A46    $746B   ADD      V4, #6B         ; Add 107 to V4
$A48    $EB4D   UNKNOWN  $EB4D           ; Unknown Exxx instruction
$A4A    $8D82   AND      VD, V8          ; VD &= V8
$A4C    $4FDC   SNE      VF, #DC         ; Skip if VF != 220
$A4E    $214B   CALL     $14B            ; Call subroutine at 14B
$A50    $DDE6   DRW      VD, VE, #6      ; Draw 6-byte sprite at VD, VE
$A52    $B6C2   JP       V0, $6C2        ; Jump to V0 + 6C2
$A54    $5907   UNKNOWN  $5907           ; Unknown 5xxx instruction
$A56    $581F   UNKNOWN  $581F           ; Unknown 5xxx instruction
$A58    $7612   ADD      V6, #12         ; Add 18 to V6
$A5A    $1241   JP       $241            ; Jump to 241
$A5C    $C4BA   RND      V4, #BA         ; V4 = random & BA
$A5E    $9CFF   UNKNOWN  $9CFF           ; Unknown 9xxx instruction
$A60    $1C95   JP       $C95            ; Jump to C95
$A62    $CDF1   RND      VD, #F1         ; VD = random & F1
$A64    $DEBC   DRW      VE, VB, #C      ; Draw 12-byte sprite at VE, VB
$A66    $C2E4   RND      V2, #E4         ; V2 = random & E4
$A68    $CD88   RND      VD, #88         ; VD = random & 88
$A6A    $C5F4   RND      V5, #F4         ; V5 = random & F4
$A6C    $B858   JP       V0, $858        ; Jump to V0 + 858
$A6E    $66D6   LD       V6, #D6         ; Load 214 into V6
$A70    $B767   JP       V0, $767        ; Jump to V0 + 767
$A72    $3302   SE       V3, #02         ; Skip if V3 == 2
$A74    $8DA9   UNKNOWN  8DA9            ; Unknown 8xxx instruction
$A76    $D111   DRW      V1, V1, #1      ; Draw 1-byte sprite at V1, V1
$A78    $3E43   SE       VE, #43         ; Skip if VE == 67
$A7A    $541B   UNKNOWN  $541B           ; Unknown 5xxx instruction
$A7C    $E2F6   UNKNOWN  $E2F6           ; Unknown Exxx instruction
$A7E    $6A89   LD       VA, #89         ; Load 137 into VA
$A80    $59FA   UNKNOWN  $59FA           ; Unknown 5xxx instruction
$A82    $DD5A   DRW      VD, V5, #A      ; Draw 10-byte sprite at VD, V5
$A84    $9F87   UNKNOWN  $9F87           ; Unknown 9xxx instruction
$A86    $D107   DRW      V1, V0, #7      ; Draw 7-byte sprite at V1, V0
$A88    $A74A   LD       I, $74A         ; Load 74A into I
$A8A    $3E5F   SE       VE, #5F         ; Skip if VE == 95
$A8C    $F49F   UNKNOWN  F49F            ; Unknown Fxxx instruction
$A8E    $0E9A   SYS      $E9A            ; System call to E9A
$A90    $7780   ADD      V7, #80         ; Add 128 to V7
$A92    $9657   UNKNOWN  $9657           ; Unknown 9xxx instruction
$A94    $295A   CALL     $95A            ; Call subroutine at 95A
$A96    $1867   JP       $867            ; Jump to 867
$A98    $0E70   SYS      $E70            ; System call to E70
$A9A    $3CF3   SE       VC, #F3         ; Skip if VC == 243
$A9C    $AE78   LD       I, $E78         ; Load E78 into I
$A9E    $031C   SYS      $31C            ; System call to 31C
$AA0    $3B3D   SE       VB, #3D         ; Skip if VB == 61
$AA2    $2E9D   CALL     $E9D            ; Call subroutine at E9D
$AA4    $BA57   JP       V0, $A57        ; Jump to V0 + A57
$AA6    $AD4A   LD       I, $D4A         ; Load D4A into I
$AA8    $A6C8   LD       I, $6C8         ; Load 6C8 into I
$AAA    $5FBA   UNKNOWN  $5FBA           ; Unknown 5xxx instruction
$AAC    $A164   LD       I, $164         ; Load 164 into I
$AAE    $6F2A   LD       VF, #2A         ; Load 42 into VF
$AB0    $BB36   JP       V0, $B36        ; Jump to V0 + B36
$AB2    $2D44   CALL     $D44            ; Call subroutine at D44
$AB4    $592E   UNKNOWN  $592E           ; Unknown 5xxx instruction
$AB6    $2023   CALL     $023            ; Call subroutine at 023
$AB8    $63C4   LD       V3, #C4         ; Load 196 into V3
$ABA    $247D   CALL     $47D            ; Call subroutine at 47D
$ABC    $7B17   ADD      VB, #17         ; Add 23 to VB
$ABE    $4DB2   SNE      VD, #B2         ; Skip if VD != 178
$AC0    $633C   LD       V3, #3C         ; Load 60 into V3
$AC2    $E855   UNKNOWN  $E855           ; Unknown Exxx instruction
$AC4    $020E   SYS      $20E            ; System call to 20E
$AC6    $C437   RND      V4, #37         ; V4 = random & 37
$AC8    $72DE   ADD      V2, #DE         ; Add 222 to V2
$ACA    $5610   SE       V6, V1          ; Skip if V6 == V1
$ACC    $8458   UNKNOWN  8458            ; Unknown 8xxx instruction
$ACE    $583F   UNKNOWN  $583F           ; Unknown 5xxx instruction
$AD0    $4ED1   SNE      VE, #D1         ; Skip if VE != 209
$AD2    $1650   JP       $650            ; Jump to 650
$AD4    $9123   UNKNOWN  $9123           ; Unknown 9xxx instruction
$AD6    $09E2   SYS      $9E2            ; System call to 9E2
$AD8    $ACAB   LD       I, $CAB         ; Load CAB into I
$ADA    $054C   SYS      $54C            ; System call to 54C
$ADC    $6E72   LD       VE, #72         ; Load 114 into VE
$ADE    $9421   UNKNOWN  $9421           ; Unknown 9xxx instruction
$AE0    $8C62   AND      VC, V6          ; VC &= V6
$AE2    $942A   UNKNOWN  $942A           ; Unknown 9xxx instruction
$AE4    $4274   SNE      V2, #74         ; Skip if V2 != 116
$AE6    $6585   LD       V5, #85         ; Load 133 into V5
$AE8    $86A8   UNKNOWN  86A8            ; Unknown 8xxx instruction
$AEA    $9C33   UNKNOWN  $9C33           ; Unknown 9xxx instruction
$AEC    $8199   UNKNOWN  8199            ; Unknown 8xxx instruction
$AEE    $C996   RND      V9, #96         ; V9 = random & 96
$AF0    $640A   LD       V4, #0A         ; Load 10 into V4
$AF2    $5642   UNKNOWN  $5642           ; Unknown 5xxx instruction
$AF4    $5E83   UNKNOWN  $5E83           ; Unknown 5xxx instruction
$AF6    $D574   DRW      V5, V7, #4      ; Draw 4-byte sprite at V5, V7
$AF8    $B728   JP       V0, $728        ; Jump to V0 + 728
$AFA    $8271   OR       V2, V7          ; V2 |= V7
$AFC    $B988   JP       V0, $988        ; Jump to V0 + 988
$AFE    $33DB   SE       V3, #DB         ; Skip if V3 == 219
$B00    $1DDD   JP       $DDD            ; Jump to DDD
$B02    $97CB   UNKNOWN  $97CB           ; Unknown 9xxx instruction
$B04    $534C   UNKNOWN  $534C           ; Unknown 5xxx instruction
$B06    $3972   SE       V9, #72         ; Skip if V9 == 114
$B08    $3867   SE       V8, #67         ; Skip if V8 == 103
$B0A    $2101   CALL     $101            ; Call subroutine at 101
$B0C    $CE5D   RND      VE, #5D         ; VE = random & 5D
$B0E    $42F8   SNE      V2, #F8         ; Skip if V2 != 248
$B10    $4AE9   SNE      VA, #E9         ; Skip if VA != 233
$B12    $36CA   SE       V6, #CA         ; Skip if V6 == 202
$B14    $51DB   UNKNOWN  $51DB           ; Unknown 5xxx instruction
$B16    $AF9B   LD       I, $F9B         ; Load F9B into I
$B18    $B52F   JP       V0, $52F        ; Jump to V0 + 52F
$B1A    $48C7   SNE      V8, #C7         ; Skip if V8 != 199
$B1C    $7CB5   ADD      VC, #B5         ; Add 181 to VC
$B1E    $AC83   LD       I, $C83         ; Load C83 into I
$B20    $F186   UNKNOWN  F186            ; Unknown Fxxx instruction
$B22    $E0FB   UNKNOWN  $E0FB           ; Unknown Exxx instruction
$B24    $D55F   DRW      V5, V5, #F      ; Draw 15-byte sprite at V5, V5
$B26    $2FA3   CALL     $FA3            ; Call subroutine at FA3
$B28    $897E   SHL      V9              ; V9 <<= 1, VF = MSB
$B2A    $F040   UNKNOWN  F040            ; Unknown Fxxx instruction
$B2C    $AE6A   LD       I, $E6A         ; Load E6A into I
$B2E    $8E69   UNKNOWN  8E69            ; Unknown 8xxx instruction
$B30    $82BA   UNKNOWN  82BA            ; Unknown 8xxx instruction
$B32    $815D   UNKNOWN  815D            ; Unknown 8xxx instruction
$B34    $B8CB   JP       V0, $8CB        ; Jump to V0 + 8CB
$B36    $D4A3   DRW      V4, VA, #3      ; Draw 3-byte sprite at V4, VA
$B38    $2FE3   CALL     $FE3            ; Call subroutine at FE3
$B3A    $3605   SE       V6, #05         ; Skip if V6 == 5
$B3C    $6A76   LD       VA, #76         ; Load 118 into VA
$B3E    $F529   LD       F, V5           ; I = sprite address for digit V5
$B40    $6598   LD       V5, #98         ; Load 152 into V5
$B42    $9176   UNKNOWN  $9176           ; Unknown 9xxx instruction
$B44    $AA72   LD       I, $A72         ; Load A72 into I
$B46    $E5AB   UNKNOWN  $E5AB           ; Unknown Exxx instruction
$B48    $DC7D   DRW      VC, V7, #D      ; Draw 13-byte sprite at VC, V7
$B4A    $0D9E   SYS      $D9E            ; System call to D9E
$B4C    $21C4   CALL     $1C4            ; Call subroutine at 1C4
$B4E    $BA92   JP       V0, $A92        ; Jump to V0 + A92
$B50    $3643   SE       V6, #43         ; Skip if V6 == 67
$B52    $6A9F   LD       VA, #9F         ; Load 159 into VA
$B54    $4DAC   SNE      VD, #AC         ; Skip if VD != 172
$B56    $1A42   JP       $A42            ; Jump to A42
$B58    $E3ED   UNKNOWN  $E3ED           ; Unknown Exxx instruction
$B5A    $2C89   CALL     $C89            ; Call subroutine at C89
$B5C    $B508   JP       V0, $508        ; Jump to V0 + 508
$B5E    $110A   JP       $10A            ; Jump to 10A
$B60    $FAED   UNKNOWN  FAED            ; Unknown Fxxx instruction
$B62    $1FBB   JP       $FBB            ; Jump to FBB
$B64    $1784   JP       $784            ; Jump to 784
$B66    $5ACC   UNKNOWN  $5ACC           ; Unknown 5xxx instruction
$B68    $204C   CALL     $04C            ; Call subroutine at 04C
$B6A    $A303   LD       I, $303         ; Load 303 into I
$B6C    $E140   UNKNOWN  $E140           ; Unknown Exxx instruction
$B6E    $5D1C   UNKNOWN  $5D1C           ; Unknown 5xxx instruction
$B70    $A548   LD       I, $548         ; Load 548 into I
$B72    $E91B   UNKNOWN  $E91B           ; Unknown Exxx instruction
$B74    $40D1   SNE      V0, #D1         ; Skip if V0 != 209
$B76    $4A06   SNE      VA, #06         ; Skip if VA != 6
$B78    $3A16   SE       VA, #16         ; Skip if VA == 22
$B7A    $2D9E   CALL     $D9E            ; Call subroutine at D9E
$B7C    $87BF   UNKNOWN  87BF            ; Unknown 8xxx instruction
$B7E    $B73D   JP       V0, $73D        ; Jump to V0 + 73D
$B80    $481F   SNE      V8, #1F         ; Skip if V8 != 31
$B82    $2A4B   CALL     $A4B            ; Call subroutine at A4B
$B84    $1C31   JP       $C31            ; Jump to C31
$B86    $4BD8   SNE      VB, #D8         ; Skip if VB != 216
$B88    $45DF   SNE      V5, #DF         ; Skip if V5 != 223
$B8A    $FD74   UNKNOWN  FD74            ; Unknown Fxxx instruction
$B8C    $F901   UNKNOWN  F901            ; Unknown Fxxx instruction
$B8E    $B6EA   JP       V0, $6EA        ; Jump to V0 + 6EA
$B90    $B15A   JP       V0, $15A        ; Jump to V0 + 15A
$B92    $A790   LD       I, $790         ; Load 790 into I
$B94    $5FF3   UNKNOWN  $5FF3           ; Unknown 5xxx instruction
$B96    $2B8C   CALL     $B8C            ; Call subroutine at B8C
$B98    $CF68   RND      VF, #68         ; VF = random & 68
$B9A    $5DF2   UNKNOWN  $5DF2           ; Unknown 5xxx instruction
$B9C    $4329   SNE      V3, #29         ; Skip if V3 != 41
$B9E    $BB04   JP       V0, $B04        ; Jump to V0 + B04
$BA0    $17C7   JP       $7C7            ; Jump to 7C7
$BA2    $45EB   SNE      V5, #EB         ; Skip if V5 != 235
$BA4    $CC4B   RND      VC, #4B         ; VC = random & 4B
$BA6    $F854   UNKNOWN  F854            ; Unknown Fxxx instruction
$BA8    $F9C7   UNKNOWN  F9C7            ; Unknown Fxxx instruction
$BAA    $1AF2   JP       $AF2            ; Jump to AF2
$BAC    $16EB   JP       $6EB            ; Jump to 6EB
$BAE    $BCBF   JP       V0, $CBF        ; Jump to V0 + CBF
$BB0    $8193   XOR      V1, V9          ; V1 ^= V9
$BB2    $722C   ADD      V2, #2C         ; Add 44 to V2
$BB4    $6FC4   LD       VF, #C4         ; Load 196 into VF
$BB6    $D77C   DRW      V7, V7, #C      ; Draw 12-byte sprite at V7, V7
$BB8    $5570   SE       V5, V7          ; Skip if V5 == V7
$BBA    $0833   SYS      $833            ; System call to 833
$BBC    $117A   JP       $17A            ; Jump to 17A
$BBE    $750F   ADD      V5, #0F         ; Add 15 to V5
$BC0    $39DF   SE       V9, #DF         ; Skip if V9 == 223
$BC2    $5B6E   UNKNOWN  $5B6E           ; Unknown 5xxx instruction
$BC4    $E36F   UNKNOWN  $E36F           ; Unknown Exxx instruction
$BC6    $4507   SNE      V5, #07         ; Skip if V5 != 7
$BC8    $D9E2   DRW      V9, VE, #2      ; Draw 2-byte sprite at V9, VE
$BCA    $DE2F   DRW      VE, V2, #F      ; Draw 15-byte sprite at VE, V2
$BCC    $4A3B   SNE      VA, #3B         ; Skip if VA != 59
$BCE    $A8C3   LD       I, $8C3         ; Load 8C3 into I
$BD0    $F9C9   UNKNOWN  F9C9            ; Unknown Fxxx instruction
$BD2    $06A6   SYS      $6A6            ; System call to 6A6
$BD4    $CEED   RND      VE, #ED         ; VE = random & ED
$BD6    $8C32   AND      VC, V3          ; VC &= V3
$BD8    $75CC   ADD      V5, #CC         ; Add 204 to V5
$BDA    $9B9A   UNKNOWN  $9B9A           ; Unknown 9xxx instruction
$BDC    $4892   SNE      V8, #92         ; Skip if V8 != 146
$BDE    $8B75   SUB      VB, V7          ; VB -= V7, VF = !borrow
$BE0    $0FFE   SYS      $FFE            ; System call to FFE
$BE2    $BCD7   JP       V0, $CD7        ; Jump to V0 + CD7
$BE4    $6A0C   LD       VA, #0C         ; Load 12 into VA
$BE6    $10D9   JP       $0D9            ; Jump to 0D9
$BE8    $86AE   SHL      V6              ; V6 <<= 1, VF = MSB
$BEA    $70A7   ADD      V0, #A7         ; Add 167 to V0
$BEC    $48D3   SNE      V8, #D3         ; Skip if V8 != 211
$BEE    $B045   JP       V0, $045        ; Jump to V0 + 045
$BF0    $8972   AND      V9, V7          ; V9 &= V7
$BF2    $29DB   CALL     $9DB            ; Call subroutine at 9DB
$BF4    $E49B   UNKNOWN  $E49B           ; Unknown Exxx instruction
$BF6    $772F   ADD      V7, #2F         ; Add 47 to V7
$BF8    $8EE8   UNKNOWN  8EE8            ; Unknown 8xxx instruction
$BFA    $BCF2   JP       V0, $CF2        ; Jump to V0 + CF2
$BFC    $1E1D   JP       $E1D            ; Jump to E1D
$BFE    $E90B   UNKNOWN  $E90B           ; Unknown Exxx instruction
$C00    $A328   LD       I, $328         ; Load 328 into I
$C02    $EABF   UNKNOWN  $EABF           ; Unknown Exxx instruction
$C04    $C633   RND      V6, #33         ; V6 = random & 33
$C06    $8AD5   SUB      VA, VD          ; VA -= VD, VF = !borrow
$C08    $B348   JP       V0, $348        ; Jump to V0 + 348
$C0A    $A3E1   LD       I, $3E1         ; Load 3E1 into I
$C0C    $4F75   SNE      VF, #75         ; Skip if VF != 117
$C0E    $B2EB   JP       V0, $2EB        ; Jump to V0 + 2EB
$C10    $7466   ADD      V4, #66         ; Add 102 to V4
$C12    $9CF6   UNKNOWN  $9CF6           ; Unknown 9xxx instruction
$C14    $B0B8   JP       V0, $0B8        ; Jump to V0 + 0B8
$C16    $09C0   SYS      $9C0            ; System call to 9C0
$C18    $8A22   AND      VA, V2          ; VA &= V2
$C1A    $B84C   JP       V0, $84C        ; Jump to V0 + 84C
$C1C    $870D   UNKNOWN  870D            ; Unknown 8xxx instruction
$C1E    $ACC9   LD       I, $CC9         ; Load CC9 into I
$C20    $2ABC   CALL     $ABC            ; Call subroutine at ABC
$C22    $604D   LD       V0, #4D         ; Load 77 into V0
$C24    $8D67   SUBN     VD, V6          ; VD = V6 - VD, VF = !borrow
$C26    $5A7F   UNKNOWN  $5A7F           ; Unknown 5xxx instruction
$C28    $123E   JP       $23E            ; Jump to 23E
$C2A    $1612   JP       $612            ; Jump to 612
$C2C    $00BC   SYS      $0BC            ; System call to 0BC
$C2E    $ACFC   LD       I, $CFC         ; Load CFC into I
$C30    $C55C   RND      V5, #5C         ; V5 = random & 5C
$C32    $2359   CALL     $359            ; Call subroutine at 359
$C34    $E73B   UNKNOWN  $E73B           ; Unknown Exxx instruction
$C36    $8117   SUBN     V1, V1          ; V1 = V1 - V1, VF = !borrow
$C38    $ED84   UNKNOWN  $ED84           ; Unknown Exxx instruction
$C3A    $F8C0   UNKNOWN  F8C0            ; Unknown Fxxx instruction
$C3C    $EBB4   UNKNOWN  $EBB4           ; Unknown Exxx instruction
$C3E    $FD2E   UNKNOWN  FD2E            ; Unknown Fxxx instruction
$C40    $E01A   UNKNOWN  $E01A           ; Unknown Exxx instruction
$C42    $AD15   LD       I, $D15         ; Load D15 into I
$C44    $8356   SHR      V3              ; V3 >>= 1, VF = LSB
$C46    $7DC9   ADD      VD, #C9         ; Add 201 to VD
$C48    $F0B1   UNKNOWN  F0B1            ; Unknown Fxxx instruction
$C4A    $424E   SNE      V2, #4E         ; Skip if V2 != 78
$C4C    $A3B6   LD       I, $3B6         ; Load 3B6 into I
$C4E    $4689   SNE      V6, #89         ; Skip if V6 != 137
$C50    $5F1B   UNKNOWN  $5F1B           ; Unknown 5xxx instruction
$C52    $9726   UNKNOWN  $9726           ; Unknown 9xxx instruction
$C54    $D5D8   DRW      V5, VD, #8      ; Draw 8-byte sprite at V5, VD
$C56    $CF52   RND      VF, #52         ; VF = random & 52
$C58    $060E   SYS      $60E            ; System call to 60E
$C5A    $FE42   UNKNOWN  FE42            ; Unknown Fxxx instruction
$C5C    $3EDB   SE       VE, #DB         ; Skip if VE == 219
$C5E    $49F8   SNE      V9, #F8         ; Skip if V9 != 248
$C60    $9D21   UNKNOWN  $9D21           ; Unknown 9xxx instruction
$C62    $A439   LD       I, $439         ; Load 439 into I
$C64    $A16C   LD       I, $16C         ; Load 16C into I
$C66    $FA94   UNKNOWN  FA94            ; Unknown Fxxx instruction
$C68    $43FC   SNE      V3, #FC         ; Skip if V3 != 252
$C6A    $3F15   SE       VF, #15         ; Skip if VF == 21
$C6C    $5178   UNKNOWN  $5178           ; Unknown 5xxx instruction
$C6E    $884E   SHL      V8              ; V8 <<= 1, VF = MSB
$C70    $DAE8   DRW      VA, VE, #8      ; Draw 8-byte sprite at VA, VE
$C72    $914A   UNKNOWN  $914A           ; Unknown 9xxx instruction
$C74    $A9CB   LD       I, $9CB         ; Load 9CB into I
$C76    $F5AE   UNKNOWN  F5AE            ; Unknown Fxxx instruction
$C78    $DB54   DRW      VB, V5, #4      ; Draw 4-byte sprite at VB, V5
$C7A    $1152   JP       $152            ; Jump to 152
$C7C    $C50B   RND      V5, #0B         ; V5 = random & 0B
$C7E    $5A05   UNKNOWN  $5A05           ; Unknown 5xxx instruction
$C80    $33A2   SE       V3, #A2         ; Skip if V3 == 162
$C82    $A64A   LD       I, $64A         ; Load 64A into I
$C84    $9669   UNKNOWN  $9669           ; Unknown 9xxx instruction
$C86    $3BC4   SE       VB, #C4         ; Skip if VB == 196
$C88    $3C41   SE       VC, #41         ; Skip if VC == 65
$C8A    $FD2A   UNKNOWN  FD2A            ; Unknown Fxxx instruction
$C8C    $6ADD   LD       VA, #DD         ; Load 221 into VA
$C8E    $4C85   SNE      VC, #85         ; Skip if VC != 133
$C90    $EFBE   UNKNOWN  $EFBE           ; Unknown Exxx instruction
$C92    $4880   SNE      V8, #80         ; Skip if V8 != 128
$C94    $F63D   UNKNOWN  F63D            ; Unknown Fxxx instruction
$C96    $7CDF   ADD      VC, #DF         ; Add 223 to VC
$C98    $EB50   UNKNOWN  $EB50           ; Unknown Exxx instruction
$C9A    $A210   LD       I, $210         ; Load 210 into I
$C9C    $58C9   UNKNOWN  $58C9           ; Unknown 5xxx instruction
$C9E    $CC74   RND      VC, #74         ; VC = random & 74
$CA0    $ABFE   LD       I, $BFE         ; Load BFE into I
$CA2    $8CDA   UNKNOWN  8CDA            ; Unknown 8xxx instruction
$CA4    $246B   CALL     $46B            ; Call subroutine at 46B
$CA6    $FD6A   UNKNOWN  FD6A            ; Unknown Fxxx instruction
$CA8    $6123   LD       V1, #23         ; Load 35 into V1
$CAA    $808B   UNKNOWN  808B            ; Unknown 8xxx instruction
$CAC    $4C8F   SNE      VC, #8F         ; Skip if VC != 143
$CAE    $F586   UNKNOWN  F586            ; Unknown Fxxx instruction
$CB0    $6726   LD       V7, #26         ; Load 38 into V7
$CB2    $E61D   UNKNOWN  $E61D           ; Unknown Exxx instruction
$CB4    $B950   JP       V0, $950        ; Jump to V0 + 950
$CB6    $2DA1   CALL     $DA1            ; Call subroutine at DA1
$CB8    $5E04   UNKNOWN  $5E04           ; Unknown 5xxx instruction
$CBA    $7FA7   ADD      VF, #A7         ; Add 167 to VF
$CBC    $03A2   SYS      $3A2            ; System call to 3A2
$CBE    $FBA0   UNKNOWN  FBA0            ; Unknown Fxxx instruction
$CC0    $9656   UNKNOWN  $9656           ; Unknown 9xxx instruction
$CC2    $0F5A   SYS      $F5A            ; System call to F5A
$CC4    $C29C   RND      V2, #9C         ; V2 = random & 9C
$CC6    $C612   RND      V6, #12         ; V6 = random & 12
$CC8    $B3FC   JP       V0, $3FC        ; Jump to V0 + 3FC
$CCA    $7E29   ADD      VE, #29         ; Add 41 to VE
$CCC    $DA54   DRW      VA, V5, #4      ; Draw 4-byte sprite at VA, V5
$CCE    $0FBE   SYS      $FBE            ; System call to FBE
$CD0    $6912   LD       V9, #12         ; Load 18 into V9
$CD2    $BA4F   JP       V0, $A4F        ; Jump to V0 + A4F
$CD4    $44AB   SNE      V4, #AB         ; Skip if V4 != 171
$CD6    $7555   ADD      V5, #55         ; Add 85 to V5
$CD8    $C929   RND      V9, #29         ; V9 = random & 29
$CDA    $F938   UNKNOWN  F938            ; Unknown Fxxx instruction
$CDC    $F392   UNKNOWN  F392            ; Unknown Fxxx instruction
$CDE    $C20D   RND      V2, #0D         ; V2 = random & 0D
$CE0    $F7EB   UNKNOWN  F7EB            ; Unknown Fxxx instruction
$CE2    $8B53   XOR      VB, V5          ; VB ^= V5
$CE4    $1EBD   JP       $EBD            ; Jump to EBD
$CE6    $8DEB   UNKNOWN  8DEB            ; Unknown 8xxx instruction
$CE8    $F52B   UNKNOWN  F52B            ; Unknown Fxxx instruction
$CEA    $EC02   UNKNOWN  $EC02           ; Unknown Exxx instruction
$CEC    $1C06   JP       $C06            ; Jump to C06
$CEE    $B48D   JP       V0, $48D        ; Jump to V0 + 48D
$CF0    $B2F6   JP       V0, $2F6        ; Jump to V0 + 2F6
$CF2    $4EFC   SNE      VE, #FC         ; Skip if VE != 252
$CF4    $2C5F   CALL     $C5F            ; Call subroutine at C5F
$CF6    $4E76   SNE      VE, #76         ; Skip if VE != 118
$CF8    $DAE7   DRW      VA, VE, #7      ; Draw 7-byte sprite at VA, VE
$CFA    $D6CB   DRW      V6, VC, #B      ; Draw 11-byte sprite at V6, VC
$CFC    $FC4C   UNKNOWN  FC4C            ; Unknown Fxxx instruction
$CFE    $4324   SNE      V3, #24         ; Skip if V3 != 36
$D00    $6A8A   LD       VA, #8A         ; Load 138 into VA
$D02    $F5B0   UNKNOWN  F5B0            ; Unknown Fxxx instruction
$D04    $413B   SNE      V1, #3B         ; Skip if V1 != 59
$D06    $BD5D   JP       V0, $D5D        ; Jump to V0 + D5D
$D08    $C553   RND      V5, #53         ; V5 = random & 53
$D0A    $4DFB   SNE      VD, #FB         ; Skip if VD != 251
$D0C    $3524   SE       V5, #24         ; Skip if V5 == 36
$D0E    $2E6D   CALL     $E6D            ; Call subroutine at E6D
$D10    $F438   UNKNOWN  F438            ; Unknown Fxxx instruction
$D12    $AD19   LD       I, $D19         ; Load D19 into I
$D14    $17C8   JP       $7C8            ; Jump to 7C8
$D16    $83C6   SHR      V3              ; V3 >>= 1, VF = LSB
$D18    $9623   UNKNOWN  $9623           ; Unknown 9xxx instruction
$D1A    $5C8D   UNKNOWN  $5C8D           ; Unknown 5xxx instruction
$D1C    $E864   UNKNOWN  $E864           ; Unknown Exxx instruction
$D1E    $3088   SE       V0, #88         ; Skip if V0 == 136
$D20    $FDA6   UNKNOWN  FDA6            ; Unknown Fxxx instruction
$D22    $6458   LD       V4, #58         ; Load 88 into V4
$D24    $97EE   UNKNOWN  $97EE           ; Unknown 9xxx instruction
$D26    $0BA5   SYS      $BA5            ; System call to BA5
$D28    $2DAA   CALL     $DAA            ; Call subroutine at DAA
$D2A    $79B5   ADD      V9, #B5         ; Add 181 to V9
$D2C    $E1E4   UNKNOWN  $E1E4           ; Unknown Exxx instruction
$D2E    $F037   UNKNOWN  F037            ; Unknown Fxxx instruction
$D30    $BEFA   JP       V0, $EFA        ; Jump to V0 + EFA
$D32    $D406   DRW      V4, V0, #6      ; Draw 6-byte sprite at V4, V0
$D34    $AD4F   LD       I, $D4F         ; Load D4F into I
$D36    $3ABE   SE       VA, #BE         ; Skip if VA == 190
$D38    $58BE   UNKNOWN  $58BE           ; Unknown 5xxx instruction
$D3A    $D00E   DRW      V0, V0, #E      ; Draw 14-byte sprite at V0, V0
$D3C    $65F4   LD       V5, #F4         ; Load 244 into V5
$D3E    $649C   LD       V4, #9C         ; Load 156 into V4
$D40    $1E64   JP       $E64            ; Jump to E64
$D42    $A4F7   LD       I, $4F7         ; Load 4F7 into I
$D44    $B3C7   JP       V0, $3C7        ; Jump to V0 + 3C7
$D46    $4515   SNE      V5, #15         ; Skip if V5 != 21
$D48    $4C12   SNE      VC, #12         ; Skip if VC != 18
$D4A    $997A   UNKNOWN  $997A           ; Unknown 9xxx instruction
$D4C    $4807   SNE      V8, #07         ; Skip if V8 != 7
$D4E    $4677   SNE      V6, #77         ; Skip if V6 != 119
$D50    $664E   LD       V6, #4E         ; Load 78 into V6
$D52    $8272   AND      V2, V7          ; V2 &= V7
$D54    $EA02   UNKNOWN  $EA02           ; Unknown Exxx instruction
$D56    $56E9   UNKNOWN  $56E9           ; Unknown 5xxx instruction
$D58    $7146   ADD      V1, #46         ; Add 70 to V1
$D5A    $8BFC   UNKNOWN  8BFC            ; Unknown 8xxx instruction
$D5C    $8808   UNKNOWN  8808            ; Unknown 8xxx instruction
$D5E    $7079   ADD      V0, #79         ; Add 121 to V0
$D60    $9460   SNE      V4, V6          ; Skip if V4 != V6
$D62    $4766   SNE      V7, #66         ; Skip if V7 != 102
$D64    $00E1   SYS      $0E1            ; System call to 0E1
$D66    $DA68   DRW      VA, V6, #8      ; Draw 8-byte sprite at VA, V6
$D68    $26DC   CALL     $6DC            ; Call subroutine at 6DC
$D6A    $5B52   UNKNOWN  $5B52           ; Unknown 5xxx instruction
$D6C    $B983   JP       V0, $983        ; Jump to V0 + 983
$D6E    $900F   UNKNOWN  $900F           ; Unknown 9xxx instruction
$D70    $5B83   UNKNOWN  $5B83           ; Unknown 5xxx instruction
$D72    $C065   RND      V0, #65         ; V0 = random & 65
$D74    $7FCF   ADD      VF, #CF         ; Add 207 to VF
$D76    $968C   UNKNOWN  $968C           ; Unknown 9xxx instruction
$D78    $95FA   UNKNOWN  $95FA           ; Unknown 9xxx instruction
$D7A    $9CBF   UNKNOWN  $9CBF           ; Unknown 9xxx instruction
$D7C    $F94D   UNKNOWN  F94D            ; Unknown Fxxx instruction
$D7E    $C698   RND      V6, #98         ; V6 = random & 98
$D80    $B928   JP       V0, $928        ; Jump to V0 + 928
$D82    $6BD4   LD       VB, #D4         ; Load 212 into VB
$D84    $7348   ADD      V3, #48         ; Add 72 to V3
$D86    $6DE0   LD       VD, #E0         ; Load 224 into VD
$D88    $E757   UNKNOWN  $E757           ; Unknown Exxx instruction
$D8A    $92F1   UNKNOWN  $92F1           ; Unknown 9xxx instruction
$D8C    $90A7   UNKNOWN  $90A7           ; Unknown 9xxx instruction
$D8E    $32C8   SE       V2, #C8         ; Skip if V2 == 200
$D90    $616D   LD       V1, #6D         ; Load 109 into V1
$D92    $EB63   UNKNOWN  $EB63           ; Unknown Exxx instruction
$D94    $4BE8   SNE      VB, #E8         ; Skip if VB != 232
$D96    $92D4   UNKNOWN  $92D4           ; Unknown 9xxx instruction
$D98    $5446   UNKNOWN  $5446           ; Unknown 5xxx instruction
$D9A    $BB13   JP       V0, $B13        ; Jump to V0 + B13
$D9C    $0FAE   SYS      $FAE            ; System call to FAE
$D9E    $49F7   SNE      V9, #F7         ; Skip if V9 != 247
$DA0    $9415   UNKNOWN  $9415           ; Unknown 9xxx instruction
$DA2    $D1A4   DRW      V1, VA, #4      ; Draw 4-byte sprite at V1, VA
$DA4    $C045   RND      V0, #45         ; V0 = random & 45
$DA6    $017E   SYS      $17E            ; System call to 17E
$DA8    $4AF7   SNE      VA, #F7         ; Skip if VA != 247
$DAA    $03D4   SYS      $3D4            ; System call to 3D4
$DAC    $419C   SNE      V1, #9C         ; Skip if V1 != 156
$DAE    $CB38   RND      VB, #38         ; VB = random & 38
$DB0    $BD67   JP       V0, $D67        ; Jump to V0 + D67
$DB2    $FB22   UNKNOWN  FB22            ; Unknown Fxxx instruction
$DB4    $A5BD   LD       I, $5BD         ; Load 5BD into I
$DB6    $44FB   SNE      V4, #FB         ; Skip if V4 != 251
$DB8    $81EE   SHL      V1              ; V1 <<= 1, VF = MSB
$DBA    $C59F   RND      V5, #9F         ; V5 = random & 9F
$DBC    $A548   LD       I, $548         ; Load 548 into I
$DBE    $525E   UNKNOWN  $525E           ; Unknown 5xxx instruction
$DC0    $0E5C   SYS      $E5C            ; System call to E5C
$DC2    $0015   SYS      $015            ; System call to 015
$DC4    $A206   LD       I, $206         ; Load 206 into I
$DC6    $F058   UNKNOWN  F058            ; Unknown Fxxx instruction
$DC8    $76B3   ADD      V6, #B3         ; Add 179 to V6
$DCA    $0B57   SYS      $B57            ; System call to B57
$DCC    $0764   SYS      $764            ; System call to 764
$DCE    $94B1   UNKNOWN  $94B1           ; Unknown 9xxx instruction
$DD0    $2266   CALL     $266            ; Call subroutine at 266
$DD2    $A768   LD       I, $768         ; Load 768 into I
$DD4    $FB30   UNKNOWN  FB30            ; Unknown Fxxx instruction
$DD6    $ABCE   LD       I, $BCE         ; Load BCE into I
$DD8    $F592   UNKNOWN  F592            ; Unknown Fxxx instruction
$DDA    $1D38   JP       $D38            ; Jump to D38
$DDC    $39A4   SE       V9, #A4         ; Skip if V9 == 164
$DDE    $E7F8   UNKNOWN  $E7F8           ; Unknown Exxx instruction
$DE0    $8B9C   UNKNOWN  8B9C            ; Unknown 8xxx instruction
$DE2    $E5C9   UNKNOWN  $E5C9           ; Unknown Exxx instruction
$DE4    $7CA5   ADD      VC, #A5         ; Add 165 to VC
$DE6    $2480   CALL     $480            ; Call subroutine at 480
$DE8    $DBEB   DRW      VB, VE, #B      ; Draw 11-byte sprite at VB, VE
$DEA    $29CC   CALL     $9CC            ; Call subroutine at 9CC
$DEC    $F67C   UNKNOWN  F67C            ; Unknown Fxxx instruction
$DEE    $7FAD   ADD      VF, #AD         ; Add 173 to VF
$DF0    $5817   UNKNOWN  $5817           ; Unknown 5xxx instruction
$DF2    $3540   SE       V5, #40         ; Skip if V5 == 64
$DF4    $6789   LD       V7, #89         ; Load 137 into V7
$DF6    $3A43   SE       VA, #43         ; Skip if VA == 67
$DF8    $73F9   ADD      V3, #F9         ; Add 249 to V3
$DFA    $3B30   SE       VB, #30         ; Skip if VB == 48
$DFC    $500D   UNKNOWN  $500D           ; Unknown 5xxx instruction
$DFE    $277A   CALL     $77A            ; Call subroutine at 77A
$E00    $98EA   UNKNOWN  $98EA           ; Unknown 9xxx instruction
$E02    $9BDB   UNKNOWN  $9BDB           ; Unknown 9xxx instruction
$E04    $2881   CALL     $881            ; Call subroutine at 881
$E06    $96E8   UNKNOWN  $96E8           ; Unknown 9xxx instruction
$E08    $02C5   SYS      $2C5            ; System call to 2C5
$E0A    $4618   SNE      V6, #18         ; Skip if V6 != 24
$E0C    $79BA   ADD      V9, #BA         ; Add 186 to V9
$E0E    $4839   SNE      V8, #39         ; Skip if V8 != 57
$E10    $79BE   ADD      V9, #BE         ; Add 190 to V9
$E12    $FCF5   UNKNOWN  FCF5            ; Unknown Fxxx instruction
$E14    $DCDB   DRW      VC, VD, #B      ; Draw 11-byte sprite at VC, VD
$E16    $E83B   UNKNOWN  $E83B           ; Unknown Exxx instruction
$E18    $BB7A   JP       V0, $B7A        ; Jump to V0 + B7A
$E1A    $43B2   SNE      V3, #B2         ; Skip if V3 != 178
$E1C    $3231   SE       V2, #31         ; Skip if V2 == 49
$E1E    $DC1F   DRW      VC, V1, #F      ; Draw 15-byte sprite at VC, V1
$E20    $E088   UNKNOWN  $E088           ; Unknown Exxx instruction
$E22    $2884   CALL     $884            ; Call subroutine at 884
$E24    $568D   UNKNOWN  $568D           ; Unknown 5xxx instruction
$E26    $E68B   UNKNOWN  $E68B           ; Unknown Exxx instruction
$E28    $510A   UNKNOWN  $510A           ; Unknown 5xxx instruction
$E2A    $5B19   UNKNOWN  $5B19           ; Unknown 5xxx instruction
$E2C    $B328   JP       V0, $328        ; Jump to V0 + 328
$E2E    $8692   AND      V6, V9          ; V6 &= V9
$E30    $9716   UNKNOWN  $9716           ; Unknown 9xxx instruction
$E32    $9109   UNKNOWN  $9109           ; Unknown 9xxx instruction
$E34    $8A0A   UNKNOWN  8A0A            ; Unknown 8xxx instruction
$E36    $38BB   SE       V8, #BB         ; Skip if V8 == 187
$E38    $6E56   LD       VE, #56         ; Load 86 into VE
$E3A    $AC8A   LD       I, $C8A         ; Load C8A into I
$E3C    $E3A5   UNKNOWN  $E3A5           ; Unknown Exxx instruction
$E3E    $328B   SE       V2, #8B         ; Skip if V2 == 139
$E40    $05E7   SYS      $5E7            ; System call to 5E7
$E42    $7739   ADD      V7, #39         ; Add 57 to V7
$E44    $B587   JP       V0, $587        ; Jump to V0 + 587
$E46    $2C4C   CALL     $C4C            ; Call subroutine at C4C
$E48    $59D7   UNKNOWN  $59D7           ; Unknown 5xxx instruction
$E4A    $646B   LD       V4, #6B         ; Load 107 into V4
$E4C    $4789   SNE      V7, #89         ; Skip if V7 != 137
$E4E    $CFB3   RND      VF, #B3         ; VF = random & B3
$E50    $ED1C   UNKNOWN  $ED1C           ; Unknown Exxx instruction
$E52    $79CD   ADD      V9, #CD         ; Add 205 to V9
$E54    $B47E   JP       V0, $47E        ; Jump to V0 + 47E
$E56    $174F   JP       $74F            ; Jump to 74F
$E58    $CBEC   RND      VB, #EC         ; VB = random & EC
$E5A    $AE6E   LD       I, $E6E         ; Load E6E into I
$E5C    $F11A   UNKNOWN  F11A            ; Unknown Fxxx instruction
$E5E    $7FCC   ADD      VF, #CC         ; Add 204 to VF
$E60    $44E3   SNE      V4, #E3         ; Skip if V4 != 227
$E62    $0DAA   SYS      $DAA            ; System call to DAA
$E64    $AB19   LD       I, $B19         ; Load B19 into I
$E66    $C92A   RND      V9, #2A         ; V9 = random & 2A
$E68    $7B5D   ADD      VB, #5D         ; Add 93 to VB
$E6A    $B622   JP       V0, $622        ; Jump to V0 + 622
$E6C    $335E   SE       V3, #5E         ; Skip if V3 == 94
$E6E    $7A9E   ADD      VA, #9E         ; Add 158 to VA
$E70    $FFF2   UNKNOWN  FFF2            ; Unknown Fxxx instruction
$E72    $66C9   LD       V6, #C9         ; Load 201 into V6
$E74    $2249   CALL     $249            ; Call subroutine at 249
$E76    $D27C   DRW      V2, V7, #C      ; Draw 12-byte sprite at V2, V7
$E78    $09C8   SYS      $9C8            ; System call to 9C8
$E7A    $1C33   JP       $C33            ; Jump to C33
$E7C    $EC22   UNKNOWN  $EC22           ; Unknown Exxx instruction
$E7E    $9169   UNKNOWN  $9169           ; Unknown 9xxx instruction
$E80    $E10F   UNKNOWN  $E10F           ; Unknown Exxx instruction
$E82    $1B30   JP       $B30            ; Jump to B30
$E84    $0F7B   SYS      $F7B            ; System call to F7B
$E86    $990C   UNKNOWN  $990C           ; Unknown 9xxx instruction
$E88    $7854   ADD      V8, #54         ; Add 84 to V8
$E8A    $0B49   SYS      $B49            ; System call to B49
$E8C    $82C5   SUB      V2, VC          ; V2 -= VC, VF = !borrow
$E8E    $A349   LD       I, $349         ; Load 349 into I
$E90    $4F53   SNE      VF, #53         ; Skip if VF != 83
$E92    $2DCA   CALL     $DCA            ; Call subroutine at DCA
$E94    $28B7   CALL     $8B7            ; Call subroutine at 8B7
$E96    $C5AB   RND      V5, #AB         ; V5 = random & AB
$E98    $CA35   RND      VA, #35         ; VA = random & 35
$E9A    $852D   UNKNOWN  852D            ; Unknown 8xxx instruction
$E9C    $451B   SNE      V5, #1B         ; Skip if V5 != 27
$E9E    $F116   UNKNOWN  F116            ; Unknown Fxxx instruction
$EA0    $43F5   SNE      V3, #F5         ; Skip if V3 != 245
$EA2    $CE04   RND      VE, #04         ; VE = random & 04
$EA4    $4466   SNE      V4, #66         ; Skip if V4 != 102
$EA6    $895F   UNKNOWN  895F            ; Unknown 8xxx instruction
$EA8    $B2FF   JP       V0, $2FF        ; Jump to V0 + 2FF
$EAA    $2356   CALL     $356            ; Call subroutine at 356
$EAC    $6A89   LD       VA, #89         ; Load 137 into VA
$EAE    $9898   UNKNOWN  $9898           ; Unknown 9xxx instruction
$EB0    $7D02   ADD      VD, #02         ; Add 2 to VD
$EB2    $F538   UNKNOWN  F538            ; Unknown Fxxx instruction
$EB4    $8E5F   UNKNOWN  8E5F            ; Unknown 8xxx instruction
$EB6    $F31D   UNKNOWN  F31D            ; Unknown Fxxx instruction
$EB8    $66C1   LD       V6, #C1         ; Load 193 into V6
$EBA    $8166   SHR      V1              ; V1 >>= 1, VF = LSB
$EBC    $8C46   SHR      VC              ; VC >>= 1, VF = LSB
$EBE    $836C   UNKNOWN  836C            ; Unknown 8xxx instruction
$EC0    $169C   JP       $69C            ; Jump to 69C
$EC2    $B97C   JP       V0, $97C        ; Jump to V0 + 97C
$EC4    $DE03   DRW      VE, V0, #3      ; Draw 3-byte sprite at VE, V0
$EC6    $754C   ADD      V5, #4C         ; Add 76 to V5
$EC8    $8B41   OR       VB, V4          ; VB |= V4
$ECA    $7C2A   ADD      VC, #2A         ; Add 42 to VC
$ECC    $B1F8   JP       V0, $1F8        ; Jump to V0 + 1F8
$ECE    $A8A7   LD       I, $8A7         ; Load 8A7 into I
$ED0    $EB46   UNKNOWN  $EB46           ; Unknown Exxx instruction
$ED2    $1D4A   JP       $D4A            ; Jump to D4A
$ED4    $1AF6   JP       $AF6            ; Jump to AF6
$ED6    $9BBB   UNKNOWN  $9BBB           ; Unknown 9xxx instruction
$ED8    $45FF   SNE      V5, #FF         ; Skip if V5 != 255
$EDA    $3F4B   SE       VF, #4B         ; Skip if VF == 75
$EDC    $C30C   RND      V3, #0C         ; V3 = random & 0C
$EDE    $F0C9   UNKNOWN  F0C9            ; Unknown Fxxx instruction
$EE0    $25B5   CALL     $5B5            ; Call subroutine at 5B5
$EE2    $B811   JP       V0, $811        ; Jump to V0 + 811
$EE4    $AA65   LD       I, $A65         ; Load A65 into I
$EE6    $7A7C   ADD      VA, #7C         ; Add 124 to VA
$EE8    $2B2E   CALL     $B2E            ; Call subroutine at B2E
$EEA    $7BDF   ADD      VB, #DF         ; Add 223 to VB
$EEC    $FD3E   UNKNOWN  FD3E            ; Unknown Fxxx instruction
$EEE    $AD48   LD       I, $D48         ; Load D48 into I
$EF0    $C1BA   RND      V1, #BA         ; V1 = random & BA
$EF2    $6D9B   LD       VD, #9B         ; Load 155 into VD
$EF4    $0EE8   SYS      $EE8            ; System call to EE8
$EF6    $83F1   OR       V3, VF          ; V3 |= VF
$EF8    $9B14   UNKNOWN  $9B14           ; Unknown 9xxx instruction
$EFA    $559B   UNKNOWN  $559B           ; Unknown 5xxx instruction
$EFC    $C226   RND      V2, #26         ; V2 = random & 26
$EFE    $5F7F   UNKNOWN  $5F7F           ; Unknown 5xxx instruction
$F00    $389C   SE       V8, #9C         ; Skip if V8 == 156
$F02    $9759   UNKNOWN  $9759           ; Unknown 9xxx instruction
$F04    $761B   ADD      V6, #1B         ; Add 27 to V6
$F06    $350F   SE       V5, #0F         ; Skip if V5 == 15
$F08    $990A   UNKNOWN  $990A           ; Unknown 9xxx instruction
$F0A    $5DD2   UNKNOWN  $5DD2           ; Unknown 5xxx instruction
$F0C    $0B41   SYS      $B41            ; System call to B41
$F0E    $FF4B   UNKNOWN  FF4B            ; Unknown Fxxx instruction
$F10    $FAC1   UNKNOWN  FAC1            ; Unknown Fxxx instruction
$F12    $93F7   UNKNOWN  $93F7           ; Unknown 9xxx instruction
$F14    $E917   UNKNOWN  $E917           ; Unknown Exxx instruction
$F16    $A498   LD       I, $498         ; Load 498 into I
$F18    $BF70   JP       V0, $F70        ; Jump to V0 + F70
$F1A    $42EF   SNE      V2, #EF         ; Skip if V2 != 239
$F1C    $1C32   JP       $C32            ; Jump to C32
$F1E    $F79C   UNKNOWN  F79C            ; Unknown Fxxx instruction
$F20    $51A0   SE       V1, VA          ; Skip if V1 == VA
$F22    $3912   SE       V9, #12         ; Skip if V9 == 18
$F24    $7F6F   ADD      VF, #6F         ; Add 111 to VF
$F26    $8B95   SUB      VB, V9          ; VB -= V9, VF = !borrow
$F28    $1820   JP       $820            ; Jump to 820
$F2A    $3FDE   SE       VF, #DE         ; Skip if VF == 222
$F2C    $F890   UNKNOWN  F890            ; Unknown Fxxx instruction
$F2E    $A8F1   LD       I, $8F1         ; Load 8F1 into I
$F30    $27EC   CALL     $7EC            ; Call subroutine at 7EC
$F32    $B44A   JP       V0, $44A        ; Jump to V0 + 44A
$F34    $884E   SHL      V8              ; V8 <<= 1, VF = MSB
$F36    $02FD   SYS      $2FD            ; System call to 2FD
$F38    $C542   RND      V5, #42         ; V5 = random & 42
$F3A    $FE90   UNKNOWN  FE90            ; Unknown Fxxx instruction
$F3C    $82D6   SHR      V2              ; V2 >>= 1, VF = LSB
$F3E    $1A82   JP       $A82            ; Jump to A82
$F40    $C128   RND      V1, #28         ; V1 = random & 28
$F42    $4A0C   SNE      VA, #0C         ; Skip if VA != 12
$F44    $6008   LD       V0, #08         ; Load 8 into V0
$F46    $48C4   SNE      V8, #C4         ; Skip if V8 != 196
$F48    $FED4   UNKNOWN  FED4            ; Unknown Fxxx instruction
$F4A    $3B65   SE       VB, #65         ; Skip if VB == 101
$F4C    $A8B9   LD       I, $8B9         ; Load 8B9 into I
$F4E    $4D68   SNE      VD, #68         ; Skip if VD != 104
$F50    $0BE2   SYS      $BE2            ; System call to BE2
$F52    $7F29   ADD      VF, #29         ; Add 41 to VF
$F54    $88EF   UNKNOWN  88EF            ; Unknown 8xxx instruction
$F56    $4397   SNE      V3, #97         ; Skip if V3 != 151
$F58    $95FC   UNKNOWN  $95FC           ; Unknown 9xxx instruction
$F5A    $E708   UNKNOWN  $E708           ; Unknown Exxx instruction
$F5C    $FF65   LD       VF, [I]         ; Load V0-VF from I
$F5E    $E8D9   UNKNOWN  $E8D9           ; Unknown Exxx instruction
$F60    $62B3   LD       V2, #B3         ; Load 179 into V2
$F62    $B1EE   JP       V0, $1EE        ; Jump to V0 + 1EE
$F64    $5824   UNKNOWN  $5824           ; Unknown 5xxx instruction
$F66    $6ABF   LD       VA, #BF         ; Load 191 into VA
$F68    $246A   CALL     $46A            ; Call subroutine at 46A
$F6A    $18D9   JP       $8D9            ; Jump to 8D9
$F6C    $184E   JP       $84E            ; Jump to 84E
$F6E    $A936   LD       I, $936         ; Load 936 into I
$F70    $A371   LD       I, $371         ; Load 371 into I
$F72    $14D2   JP       $4D2            ; Jump to 4D2
$F74    $E12E   UNKNOWN  $E12E           ; Unknown Exxx instruction
$F76    $04E3   SYS      $4E3            ; System call to 4E3
$F78    $E9D4   UNKNOWN  $E9D4           ; Unknown Exxx instruction
$F7A    $99A0   SNE      V9, VA          ; Skip if V9 != VA
$F7C    $164D   JP       $64D            ; Jump to 64D
$F7E    $7F86   ADD      VF, #86         ; Add 134 to VF
$F80    $AB9F   LD       I, $B9F         ; Load B9F into I
$F82    $DFEA   DRW      VF, VE, #A      ; Draw 10-byte sprite at VF, VE
$F84    $0118   SYS      $118            ; System call to 118
$F86    $4293   SNE      V2, #93         ; Skip if V2 != 147
$F88    $1259   JP       $259            ; Jump to 259
$F8A    $344D   SE       V4, #4D         ; Skip if V4 == 77
$F8C    $FAD2   UNKNOWN  FAD2            ; Unknown Fxxx instruction
$F8E    $D32E   DRW      V3, V2, #E      ; Draw 14-byte sprite at V3, V2
$F90    $54F2   UNKNOWN  $54F2           ; Unknown 5xxx instruction
$F92    $96FE   UNKNOWN  $96FE           ; Unknown 9xxx instruction
$F94    $12B3   JP       $2B3            ; Jump to 2B3
$F96    $BCAA   JP       V0, $CAA        ; Jump to V0 + CAA
$F98    $E5FF   UNKNOWN  $E5FF           ; Unknown Exxx instruction
$F9A    $CA4A   RND      VA, #4A         ; VA = random & 4A
$F9C    $06D6   SYS      $6D6            ; System call to 6D6
$F9E    $F956   UNKNOWN  F956            ; Unknown Fxxx instruction
$FA0    $2F46   CALL     $F46            ; Call subroutine at F46
$FA2    $F215   LD       DT, V2          ; Delay timer = V2
$FA4    $F226   UNKNOWN  F226            ; Unknown Fxxx instruction
$FA6    $C244   RND      V2, #44         ; V2 = random & 44
$FA8    $1675   JP       $675            ; Jump to 675
$FAA    $EC30   UNKNOWN  $EC30           ; Unknown Exxx instruction
$FAC    $BFFE   JP       V0, $FFE        ; Jump to V0 + FFE
$FAE    $868A   UNKNOWN  868A            ; Unknown 8xxx instruction
$FB0    $F6B6   UNKNOWN  F6B6            ; Unknown Fxxx instruction
$FB2    $AF08   LD       I, $F08         ; Load F08 into I
$FB4    $2930   CALL     $930            ; Call subroutine at 930
$FB6    $9E60   SNE      VE, V6          ; Skip if VE != V6
$FB8    $C94A   RND      V9, #4A         ; V9 = random & 4A
$FBA    $B678   JP       V0, $678        ; Jump to V0 + 678
$FBC    $8B8C   UNKNOWN  8B8C            ; Unknown 8xxx instruction
$FBE    $1170   JP       $170            ; Jump to 170
$FC0    $F48A   UNKNOWN  F48A            ; Unknown Fxxx instruction
$FC2    $77FB   ADD      V7, #FB         ; Add 251 to V7
$FC4    $27A5   CALL     $7A5            ; Call subroutine at 7A5
$FC6    $4116   SNE      V1, #16         ; Skip if V1 != 22
$FC8    $DCC5   DRW      VC, VC, #5      ; Draw 5-byte sprite at VC, VC
$FCA    $A03F   LD       I, $03F         ; Load 03F into I
$FCC    $34C2   SE       V4, #C2         ; Skip if V4 == 194
$FCE    $031B   SYS      $31B            ; System call to 31B
$FD0    $6E27   LD       VE, #27         ; Load 39 into VE
$FD2    $9901   UNKNOWN  $9901           ; Unknown 9xxx instruction
$FD4    $78A1   ADD      V8, #A1         ; Add 161 to V8
$FD6    $E0B9   UNKNOWN  $E0B9           ; Unknown Exxx instruction
$FD8    $1FEC   JP       $FEC            ; Jump to FEC
$FDA    $E371   UNKNOWN  $E371           ; Unknown Exxx instruction
$FDC    $97F1   UNKNOWN  $97F1           ; Unknown 9xxx instruction
$FDE    $7416   ADD      V4, #16         ; Add 22 to V4
$FE0    $3F7E   SE       VF, #7E         ; Skip if VF == 126
$FE2    $8096   SHR      V0              ; V0 >>= 1, VF = LSB
$FE4    $24E3   CALL     $4E3            ; Call subroutine at 4E3
$FE6    $F8CD   UNKNOWN  F8CD            ; Unknown Fxxx instruction
$FE8    $ECA1   SKNP     VC              ; Skip if key VC not pressed
$FEA    $A96F   LD       I, $96F         ; Load 96F into I
$FEC    $4235   SNE      V2, #35         ; Skip if V2 != 53
$FEE    $0325   SYS      $325            ; System call to 325
$FF0    $5F34   UNKNOWN  $5F34           ; Unknown 5xxx instruction
$FF2    $665B   LD       V6, #5B         ; Load 91 into V6
$FF4    $A37B   LD       I, $37B         ; Load 37B into I
$FF6    $7E11   ADD      VE, #11         ; Add 17 to VE
$FF8    $6097   LD       V0, #97         ; Load 151 into V0
$FFA    $E963   UNKNOWN  $E963           ; Unknown Exxx instruction
$FFC    $04B2   SYS      $4B2            ; System call to 4B2
$FFE    $3C49   SE       VC, #49         ; Skip if VC == 73

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 473 (26.4%)
  LD      : 244 (13.6%)
  JP      : 225 (12.6%)
  SNE     : 139 ( 7.8%)
  SE      : 123 ( 6.9%)
  CALL    : 121 ( 6.8%)
  SYS     : 117 ( 6.5%)
  ADD     : 111 ( 6.2%)
  DRW     :  99 ( 5.5%)
  RND     :  87 ( 4.9%)
  SHR     :  11 ( 0.6%)
  AND     :  10 ( 0.6%)
  SHL     :   9 ( 0.5%)
  SUB     :   7 ( 0.4%)
  XOR     :   6 ( 0.3%)
  SUBN    :   4 ( 0.2%)
  OR      :   4 ( 0.2%)
  SKP     :   1 ( 0.1%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 355 (19.8%)
Arithmetic Operations: 142 (7.9%)
