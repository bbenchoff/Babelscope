
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B643D01_I06645_C15912_88405c5232d2.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 643
Instance: 6645
Direction: descending
Final Array: [255, 255, 255, 255, 255, 255, 255, 7]
Operations: R:0 W:7 C:411 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 110
Sort Array References:
  $20E: LD I, $4F0 ; Load 4F0 into I
  $230: LD I, $25F ; Load 25F into I
  $32A: LD I, $E87 ; Load E87 into I
  $356: LD I, $C23 ; Load C23 into I
  $388: LD I, $664 ; Load 664 into I
  $3B8: LD I, $A5B ; Load A5B into I
  $3BA: LD I, $288 ; Load 288 into I
  $3C6: LD I, $D1F ; Load D1F into I
  $3CC: LD I, $BD0 ; Load BD0 into I
  $3E8: LD I, $151 ; Load 151 into I
  $40C: LD I, $78A ; Load 78A into I
  $40E: LD I, $C91 ; Load C91 into I
  $426: LD I, $AAB ; Load AAB into I
  $47A: LD I, $1F7 ; Load 1F7 into I
  $49E: LD I, $39A ; Load 39A into I
  $4A0: LD I, $CF7 ; Load CF7 into I
  $4AE: LD I, $0AD ; Load 0AD into I
  $4C0: LD I, $E82 ; Load E82 into I
  $4D6: LD I, $A43 ; Load A43 into I
  $510: LD I, $516 ; Load 516 into I
  $516: LD I, $5C3 ; Load 5C3 into I
  $530: LD I, $1A9 ; Load 1A9 into I
  $53A: LD I, $756 ; Load 756 into I
  $552: LD I, $9B2 ; Load 9B2 into I
  $564: LD I, $67A ; Load 67A into I
  $594: LD I, $91A ; Load 91A into I
  $5B8: LD I, $F18 ; Load F18 into I
  $5F8: LD I, $87E ; Load 87E into I
  $5FA: LD I, $23B ; Load 23B into I
  $60A: LD I, $A68 ; Load A68 into I
  $62A: LD I, $B59 ; Load B59 into I
  $66E: LD I, $71E ; Load 71E into I
  $684: LD I, $D43 ; Load D43 into I
  $6F8: LD I, $8CE ; Load 8CE into I
  $714: LD I, $692 ; Load 692 into I
  $71C: LD I, $749 ; Load 749 into I
  $748: LD I, $FE5 ; Load FE5 into I
  $75E: LD I, $890 ; Load 890 into I
  $762: LD I, $5BC ; Load 5BC into I
  $780: LD I, $B44 ; Load B44 into I
  $7BE: LD I, $FEF ; Load FEF into I
  $7D0: LD I, $E6B ; Load E6B into I
  $804: LD I, $FFB ; Load FFB into I
  $816: LD I, $675 ; Load 675 into I
  $820: LD I, $5EA ; Load 5EA into I
  $852: LD V6, [I] ; Load V0-V6 from I
  $870: LD I, $A87 ; Load A87 into I
  $90A: LD [I], VF ; Store V0-VF at I
  $92A: LD I, $B23 ; Load B23 into I
  $956: LD I, $EDB ; Load EDB into I
  $974: LD I, $71C ; Load 71C into I
  $978: LD I, $AD1 ; Load AD1 into I
  $9A6: LD I, $391 ; Load 391 into I
  $9A8: LD I, $502 ; Load 502 into I
  $9B4: LD I, $64E ; Load 64E into I
  $9BE: LD I, $5F3 ; Load 5F3 into I
  $9CE: LD I, $EEB ; Load EEB into I
  $9EA: LD I, $B61 ; Load B61 into I
  $9EC: LD I, $7CD ; Load 7CD into I
  $9FA: LD I, $82F ; Load 82F into I
  $9FE: LD I, $3E8 ; Load 3E8 into I
  $A00: LD I, $6CB ; Load 6CB into I
  $A06: LD I, $554 ; Load 554 into I
  $A3E: LD I, $15C ; Load 15C into I
  $A7A: LD I, $2F9 ; Load 2F9 into I
  $A80: LD I, $0BD ; Load 0BD into I
  $AAC: LD I, $85F ; Load 85F into I
  $AB2: LD I, $624 ; Load 624 into I
  $AB8: LD I, $CDA ; Load CDA into I
  $AE4: LD I, $57D ; Load 57D into I
  $AE8: LD I, $941 ; Load 941 into I
  $AF6: LD I, $E35 ; Load E35 into I
  $B12: LD I, $D05 ; Load D05 into I
  $B4C: LD I, $DD5 ; Load DD5 into I
  $B64: LD I, $D87 ; Load D87 into I
  $BE6: LD I, $3F9 ; Load 3F9 into I
  $BF4: LD I, $44E ; Load 44E into I
  $C0A: LD I, $DCF ; Load DCF into I
  $C82: LD I, $D52 ; Load D52 into I
  $C9E: LD I, $266 ; Load 266 into I
  $CAA: LD I, $209 ; Load 209 into I
  $CB2: LD I, $874 ; Load 874 into I
  $CE2: LD I, $B80 ; Load B80 into I
  $D10: LD I, $37F ; Load 37F into I
  $D32: LD I, $A19 ; Load A19 into I
  $D38: LD I, $ED9 ; Load ED9 into I
  $D3C: LD I, $407 ; Load 407 into I
  $D9C: LD I, $2B2 ; Load 2B2 into I
  $DE2: LD I, $838 ; Load 838 into I
  $E02: LD I, $6F1 ; Load 6F1 into I
  $E1A: LD I, $46F ; Load 46F into I
  $E36: LD I, $D62 ; Load D62 into I
  $E4A: LD I, $BBD ; Load BBD into I
  $E5A: LD I, $B57 ; Load B57 into I
  $E60: LD I, $028 ; Load 028 into I
  $E64: LD I, $72A ; Load 72A into I
  $E8C: LD I, $4A8 ; Load 4A8 into I
  $EA4: LD I, $019 ; Load 019 into I
  $EB2: LD I, $2C0 ; Load 2C0 into I
  $EC0: LD I, $91D ; Load 91D into I
  $ED2: LD I, $715 ; Load 715 into I
  $ED6: LD I, $19D ; Load 19D into I
  $ED8: LD I, $DF9 ; Load DF9 into I
  $EDC: LD I, $883 ; Load 883 into I
  $EF6: LD I, $8FF ; Load 8FF into I
  $F1A: LD I, $DE1 ; Load DE1 into I
  $F20: LD I, $284 ; Load 284 into I
  $F34: LD I, $AB7 ; Load AB7 into I
  $F74: LD I, $A3C ; Load A3C into I
  $F94: LD I, $CE8 ; Load CE8 into I

CONTROL FLOW ANALYSIS:
Jumps: 232
Calls: 122
Branches: 221
Loops: 145
Loop Structures:
  $312 -> $00C (backward jump)
  $3E4 -> $37B (backward jump)
  $3F4 -> $033 (backward jump)
  $45A -> $39D (backward jump)
  $4C2 -> $104 (backward jump)
  $4DC -> $383 (backward jump)
  $4F2 -> $291 (backward jump)
  $528 -> $200 (backward jump)
  $532 -> $3D9 (backward jump)
  $546 -> $20F (backward jump)
  $548 -> $393 (backward jump)
  $570 -> $141 (backward jump)
  $5B2 -> $386 (backward jump)
  $5E0 -> $493 (backward jump)
  $5FE -> $0D1 (backward jump)
  $650 -> $2F5 (backward jump)
  $67C -> $632 (backward jump)
  $6A4 -> $3FF (backward jump)
  $6B6 -> $4D1 (backward jump)
  $6FA -> $12D (backward jump)
  $6FC -> $21E (backward jump)
  $726 -> $30F (backward jump)
  $736 -> $0DA (backward jump)
  $76E -> $522 (backward jump)
  $782 -> $725 (backward jump)
  $798 -> $708 (backward jump)
  $79C -> $3B8 (backward jump)
  $7A4 -> $545 (backward jump)
  $7C0 -> $1A9 (backward jump)
  $7C2 -> $621 (backward jump)
  $7D8 -> $085 (backward jump)
  $7E2 -> $057 (backward jump)
  $7FC -> $38E (backward jump)
  $826 -> $262 (backward jump)
  $83C -> $386 (backward jump)
  $848 -> $312 (backward jump)
  $8A6 -> $68A (backward jump)
  $8B0 -> $89D (backward jump)
  $8D2 -> $0B1 (backward jump)
  $900 -> $58F (backward jump)
  $904 -> $40B (backward jump)
  $914 -> $2F1 (backward jump)
  $94A -> $92D (backward jump)
  $94E -> $6C2 (backward jump)
  $972 -> $2AF (backward jump)
  $994 -> $075 (backward jump)
  $9AC -> $5DD (backward jump)
  $A04 -> $88A (backward jump)
  $A94 -> $A06 (backward jump)
  $A96 -> $15B (backward jump)
  $ABE -> $36C (backward jump)
  $ACE -> $9A1 (backward jump)
  $AFC -> $697 (backward jump)
  $B10 -> $ABC (backward jump)
  $B40 -> $70E (backward jump)
  $B8A -> $0AC (backward jump)
  $B8C -> $7A4 (backward jump)
  $B9E -> $6A9 (backward jump)
  $BA2 -> $372 (backward jump)
  $BC2 -> $107 (backward jump)
  $BD0 -> $A9E (backward jump)
  $BF2 -> $5B7 (backward jump)
  $BFE -> $0B4 (backward jump)
  $C02 -> $8D5 (backward jump)
  $C1E -> $637 (backward jump)
  $C28 -> $584 (backward jump)
  $C3C -> $2FD (backward jump)
  $C50 -> $4B3 (backward jump)
  $C5A -> $43B (backward jump)
  $C5C -> $32F (backward jump)
  $C70 -> $84B (backward jump)
  $C7C -> $128 (backward jump)
  $C84 -> $46E (backward jump)
  $C8A -> $933 (backward jump)
  $C8E -> $73C (backward jump)
  $C90 -> $87B (backward jump)
  $C92 -> $2B6 (backward jump)
  $C94 -> $3E7 (backward jump)
  $C98 -> $557 (backward jump)
  $CB4 -> $C6D (backward jump)
  $CC6 -> $4DE (backward jump)
  $CC8 -> $BBE (backward jump)
  $CCA -> $45F (backward jump)
  $CD4 -> $1EB (backward jump)
  $CEE -> $B34 (backward jump)
  $CFA -> $5DD (backward jump)
  $D08 -> $013 (backward jump)
  $D0A -> $730 (backward jump)
  $D0C -> $A26 (backward jump)
  $D18 -> $9AD (backward jump)
  $D24 -> $5C3 (backward jump)
  $D2A -> $2E7 (backward jump)
  $D36 -> $075 (backward jump)
  $D48 -> $44A (backward jump)
  $D4C -> $1DF (backward jump)
  $D4E -> $68A (backward jump)
  $D62 -> $90E (backward jump)
  $D86 -> $3F6 (backward jump)
  $D98 -> $812 (backward jump)
  $D9E -> $907 (backward jump)
  $DA2 -> $020 (backward jump)
  $DAE -> $373 (backward jump)
  $DB4 -> $47A (backward jump)
  $DB8 -> $473 (backward jump)
  $DF2 -> $8ED (backward jump)
  $DF6 -> $240 (backward jump)
  $DFA -> $5AB (backward jump)
  $E12 -> $078 (backward jump)
  $E1E -> $D37 (backward jump)
  $E28 -> $04F (backward jump)
  $E2C -> $562 (backward jump)
  $E30 -> $226 (backward jump)
  $E3A -> $E21 (backward jump)
  $E50 -> $606 (backward jump)
  $E58 -> $D8A (backward jump)
  $E5E -> $641 (backward jump)
  $E7A -> $7D9 (backward jump)
  $E82 -> $424 (backward jump)
  $EAE -> $CE6 (backward jump)
  $EB6 -> $55B (backward jump)
  $EE6 -> $0F8 (backward jump)
  $EF8 -> $7B4 (backward jump)
  $F08 -> $6A9 (backward jump)
  $F16 -> $7E1 (backward jump)
  $F18 -> $9EE (backward jump)
  $F2A -> $972 (backward jump)
  $F30 -> $6A3 (backward jump)
  $F3A -> $97C (backward jump)
  $F42 -> $E5F (backward jump)
  $F58 -> $AA0 (backward jump)
  $F60 -> $125 (backward jump)
  $F62 -> $161 (backward jump)
  $F64 -> $375 (backward jump)
  $F7A -> $E5B (backward jump)
  $F7E -> $533 (backward jump)
  $F92 -> $857 (backward jump)
  $FA4 -> $4D5 (backward jump)
  $FA8 -> $C44 (backward jump)
  $FAC -> $BD3 (backward jump)
  $FB0 -> $095 (backward jump)
  $FB2 -> $5E4 (backward jump)
  $FC2 -> $050 (backward jump)
  $FD2 -> $9C2 (backward jump)
  $FE4 -> $64A (backward jump)
  $FEE -> $CA6 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $C828   RND      V8, #28         ; V8 = random & 28
$202    $252C   CALL     $52C            ; Call subroutine at 52C
$204    $813C   UNKNOWN  813C            ; Unknown 8xxx instruction
$206    $290C   CALL     $90C            ; Call subroutine at 90C
$208    $2C48   CALL     $C48            ; Call subroutine at C48
$20A    $27CC   CALL     $7CC            ; Call subroutine at 7CC
$20C    $6305   LD       V3, #05         ; Load 5 into V3
$20E    $A4F0   LD       I, $4F0         ; Load 4F0 into I
$210    $5592   UNKNOWN  $5592           ; Unknown 5xxx instruction
$212    $77CD   ADD      V7, #CD         ; Add 205 to V7
$214    $39D6   SE       V9, #D6         ; Skip if V9 == 214
$216    $941E   UNKNOWN  $941E           ; Unknown 9xxx instruction
$218    $F5C3   UNKNOWN  F5C3            ; Unknown Fxxx instruction
$21A    $9199   UNKNOWN  $9199           ; Unknown 9xxx instruction
$21C    $7A4E   ADD      VA, #4E         ; Add 78 to VA
$21E    $27D5   CALL     $7D5            ; Call subroutine at 7D5
$220    $D3E8   DRW      V3, VE, #8      ; Draw 8-byte sprite at V3, VE
$222    $B909   JP       V0, $909        ; Jump to V0 + 909
$224    $D684   DRW      V6, V8, #4      ; Draw 4-byte sprite at V6, V8
$226    $065A   SYS      $65A            ; System call to 65A
$228    $4887   SNE      V8, #87         ; Skip if V8 != 135
$22A    $E416   UNKNOWN  $E416           ; Unknown Exxx instruction
$22C    $CD0D   RND      VD, #0D         ; VD = random & 0D
$22E    $3E57   SE       VE, #57         ; Skip if VE == 87
$230    $A25F   LD       I, $25F         ; Load 25F into I
$232    $4A4A   SNE      VA, #4A         ; Skip if VA != 74
$234    $283B   CALL     $83B            ; Call subroutine at 83B
$236    $861F   UNKNOWN  861F            ; Unknown 8xxx instruction
$238    $DD44   DRW      VD, V4, #4      ; Draw 4-byte sprite at VD, V4
$23A    $1FFF   JP       $FFF            ; Jump to FFF
$23C    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$23E    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$240    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$242    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$244    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$246    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$248    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$24A    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$24C    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$24E    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$250    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$252    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$254    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$256    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$258    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$25A    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$25C    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$25E    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$260    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$262    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$264    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$266    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$268    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$26A    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$26C    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$26E    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$270    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$272    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$274    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$276    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$278    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$27A    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$27C    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$27E    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$280    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$282    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$284    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$286    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$288    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$28A    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$28C    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$28E    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$290    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$292    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$294    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$296    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$298    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$29A    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$29C    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$29E    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2A0    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2A2    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2A4    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2A6    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2A8    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2AA    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2AC    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2AE    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2B0    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2B2    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2B4    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2B6    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2B8    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2BA    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2BC    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2BE    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2C0    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2C2    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2C4    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2C6    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2C8    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2CA    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2CC    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2CE    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2D0    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2D2    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2D4    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2D6    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2D8    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2DA    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2DC    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2DE    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2E0    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2E2    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2E4    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2E6    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2E8    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2EA    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2EC    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2EE    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2F0    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2F2    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2F4    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2F6    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2F8    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2FA    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2FC    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$2FE    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$300    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$302    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$304    $FFFF   UNKNOWN  FFFF            ; Unknown Fxxx instruction
$306    $FF07   LD       VF, DT          ; VF = delay timer
$308    $5146   UNKNOWN  $5146           ; Unknown 5xxx instruction
$30A    $16EF   JP       $6EF            ; Jump to 6EF
$30C    $C199   RND      V1, #99         ; V1 = random & 99
$30E    $840E   SHL      V4              ; V4 <<= 1, VF = MSB
$310    $338D   SE       V3, #8D         ; Skip if V3 == 141
$312    $100C   JP       $00C            ; Jump to 00C
$314    $F3DF   UNKNOWN  F3DF            ; Unknown Fxxx instruction
$316    $D562   DRW      V5, V6, #2      ; Draw 2-byte sprite at V5, V6
$318    $E672   UNKNOWN  $E672           ; Unknown Exxx instruction
$31A    $62DB   LD       V2, #DB         ; Load 219 into V2
$31C    $0AC2   SYS      $AC2            ; System call to AC2
$31E    $1975   JP       $975            ; Jump to 975
$320    $5E17   UNKNOWN  $5E17           ; Unknown 5xxx instruction
$322    $904C   UNKNOWN  $904C           ; Unknown 9xxx instruction
$324    $BA6B   JP       V0, $A6B        ; Jump to V0 + A6B
$326    $6639   LD       V6, #39         ; Load 57 into V6
$328    $1862   JP       $862            ; Jump to 862
$32A    $AE87   LD       I, $E87         ; Load E87 into I
$32C    $00A9   SYS      $0A9            ; System call to 0A9
$32E    $753C   ADD      V5, #3C         ; Add 60 to V5
$330    $F55F   UNKNOWN  F55F            ; Unknown Fxxx instruction
$332    $248D   CALL     $48D            ; Call subroutine at 48D
$334    $029F   SYS      $29F            ; System call to 29F
$336    $360D   SE       V6, #0D         ; Skip if V6 == 13
$338    $2ACC   CALL     $ACC            ; Call subroutine at ACC
$33A    $C8CD   RND      V8, #CD         ; V8 = random & CD
$33C    $3B63   SE       VB, #63         ; Skip if VB == 99
$33E    $6719   LD       V7, #19         ; Load 25 into V7
$340    $FFA4   UNKNOWN  FFA4            ; Unknown Fxxx instruction
$342    $E17C   UNKNOWN  $E17C           ; Unknown Exxx instruction
$344    $C74B   RND      V7, #4B         ; V7 = random & 4B
$346    $0AD0   SYS      $AD0            ; System call to AD0
$348    $E327   UNKNOWN  $E327           ; Unknown Exxx instruction
$34A    $1B26   JP       $B26            ; Jump to B26
$34C    $B8CB   JP       V0, $8CB        ; Jump to V0 + 8CB
$34E    $5EE4   UNKNOWN  $5EE4           ; Unknown 5xxx instruction
$350    $32CD   SE       V2, #CD         ; Skip if V2 == 205
$352    $04B3   SYS      $4B3            ; System call to 4B3
$354    $C5A2   RND      V5, #A2         ; V5 = random & A2
$356    $AC23   LD       I, $C23         ; Load C23 into I
$358    $3922   SE       V9, #22         ; Skip if V9 == 34
$35A    $ED11   UNKNOWN  $ED11           ; Unknown Exxx instruction
$35C    $C5BA   RND      V5, #BA         ; V5 = random & BA
$35E    $29D8   CALL     $9D8            ; Call subroutine at 9D8
$360    $28AD   CALL     $8AD            ; Call subroutine at 8AD
$362    $0618   SYS      $618            ; System call to 618
$364    $3876   SE       V8, #76         ; Skip if V8 == 118
$366    $700A   ADD      V0, #0A         ; Add 10 to V0
$368    $CB28   RND      VB, #28         ; VB = random & 28
$36A    $992A   UNKNOWN  $992A           ; Unknown 9xxx instruction
$36C    $7538   ADD      V5, #38         ; Add 56 to V5
$36E    $F92A   UNKNOWN  F92A            ; Unknown Fxxx instruction
$370    $E52D   UNKNOWN  $E52D           ; Unknown Exxx instruction
$372    $8C39   UNKNOWN  8C39            ; Unknown 8xxx instruction
$374    $6107   LD       V1, #07         ; Load 7 into V1
$376    $06EB   SYS      $6EB            ; System call to 6EB
$378    $003D   SYS      $03D            ; System call to 03D
$37A    $4E0D   SNE      VE, #0D         ; Skip if VE != 13
$37C    $FAE2   UNKNOWN  FAE2            ; Unknown Fxxx instruction
$37E    $C9E6   RND      V9, #E6         ; V9 = random & E6
$380    $FC25   UNKNOWN  FC25            ; Unknown Fxxx instruction
$382    $71AE   ADD      V1, #AE         ; Add 174 to V1
$384    $D4A7   DRW      V4, VA, #7      ; Draw 7-byte sprite at V4, VA
$386    $EF39   UNKNOWN  $EF39           ; Unknown Exxx instruction
$388    $A664   LD       I, $664         ; Load 664 into I
$38A    $82E8   UNKNOWN  82E8            ; Unknown 8xxx instruction
$38C    $EDA9   UNKNOWN  $EDA9           ; Unknown Exxx instruction
$38E    $706F   ADD      V0, #6F         ; Add 111 to V0
$390    $6C91   LD       VC, #91         ; Load 145 into VC
$392    $4632   SNE      V6, #32         ; Skip if V6 != 50
$394    $E694   UNKNOWN  $E694           ; Unknown Exxx instruction
$396    $9C30   SNE      VC, V3          ; Skip if VC != V3
$398    $B437   JP       V0, $437        ; Jump to V0 + 437
$39A    $C01F   RND      V0, #1F         ; V0 = random & 1F
$39C    $30BB   SE       V0, #BB         ; Skip if V0 == 187
$39E    $C401   RND      V4, #01         ; V4 = random & 01
$3A0    $76F4   ADD      V6, #F4         ; Add 244 to V6
$3A2    $9222   UNKNOWN  $9222           ; Unknown 9xxx instruction
$3A4    $E40C   UNKNOWN  $E40C           ; Unknown Exxx instruction
$3A6    $9288   UNKNOWN  $9288           ; Unknown 9xxx instruction
$3A8    $2AD5   CALL     $AD5            ; Call subroutine at AD5
$3AA    $237F   CALL     $37F            ; Call subroutine at 37F
$3AC    $F2D5   UNKNOWN  F2D5            ; Unknown Fxxx instruction
$3AE    $995E   UNKNOWN  $995E           ; Unknown 9xxx instruction
$3B0    $296E   CALL     $96E            ; Call subroutine at 96E
$3B2    $CBAB   RND      VB, #AB         ; VB = random & AB
$3B4    $1747   JP       $747            ; Jump to 747
$3B6    $D4AA   DRW      V4, VA, #A      ; Draw 10-byte sprite at V4, VA
$3B8    $AA5B   LD       I, $A5B         ; Load A5B into I
$3BA    $A288   LD       I, $288         ; Load 288 into I
$3BC    $1E96   JP       $E96            ; Jump to E96
$3BE    $C362   RND      V3, #62         ; V3 = random & 62
$3C0    $799B   ADD      V9, #9B         ; Add 155 to V9
$3C2    $5402   UNKNOWN  $5402           ; Unknown 5xxx instruction
$3C4    $18EE   JP       $8EE            ; Jump to 8EE
$3C6    $AD1F   LD       I, $D1F         ; Load D1F into I
$3C8    $BD78   JP       V0, $D78        ; Jump to V0 + D78
$3CA    $964A   UNKNOWN  $964A           ; Unknown 9xxx instruction
$3CC    $ABD0   LD       I, $BD0         ; Load BD0 into I
$3CE    $2FDC   CALL     $FDC            ; Call subroutine at FDC
$3D0    $F31C   UNKNOWN  F31C            ; Unknown Fxxx instruction
$3D2    $5420   SE       V4, V2          ; Skip if V4 == V2
$3D4    $26A2   CALL     $6A2            ; Call subroutine at 6A2
$3D6    $6EE3   LD       VE, #E3         ; Load 227 into VE
$3D8    $4140   SNE      V1, #40         ; Skip if V1 != 64
$3DA    $14F8   JP       $4F8            ; Jump to 4F8
$3DC    $C338   RND      V3, #38         ; V3 = random & 38
$3DE    $F7EC   UNKNOWN  F7EC            ; Unknown Fxxx instruction
$3E0    $FB06   UNKNOWN  FB06            ; Unknown Fxxx instruction
$3E2    $B852   JP       V0, $852        ; Jump to V0 + 852
$3E4    $137B   JP       $37B            ; Jump to 37B
$3E6    $CE55   RND      VE, #55         ; VE = random & 55
$3E8    $A151   LD       I, $151         ; Load 151 into I
$3EA    $F78A   UNKNOWN  F78A            ; Unknown Fxxx instruction
$3EC    $7531   ADD      V5, #31         ; Add 49 to V5
$3EE    $F487   UNKNOWN  F487            ; Unknown Fxxx instruction
$3F0    $762D   ADD      V6, #2D         ; Add 45 to V6
$3F2    $6732   LD       V7, #32         ; Load 50 into V7
$3F4    $1033   JP       $033            ; Jump to 033
$3F6    $1D9F   JP       $D9F            ; Jump to D9F
$3F8    $DB1A   DRW      VB, V1, #A      ; Draw 10-byte sprite at VB, V1
$3FA    $5884   UNKNOWN  $5884           ; Unknown 5xxx instruction
$3FC    $4694   SNE      V6, #94         ; Skip if V6 != 148
$3FE    $8579   UNKNOWN  8579            ; Unknown 8xxx instruction
$400    $D44A   DRW      V4, V4, #A      ; Draw 10-byte sprite at V4, V4
$402    $3348   SE       V3, #48         ; Skip if V3 == 72
$404    $44AA   SNE      V4, #AA         ; Skip if V4 != 170
$406    $394F   SE       V9, #4F         ; Skip if V9 == 79
$408    $C5FC   RND      V5, #FC         ; V5 = random & FC
$40A    $0E1E   SYS      $E1E            ; System call to E1E
$40C    $A78A   LD       I, $78A         ; Load 78A into I
$40E    $AC91   LD       I, $C91         ; Load C91 into I
$410    $72F0   ADD      V2, #F0         ; Add 240 to V2
$412    $FC98   UNKNOWN  FC98            ; Unknown Fxxx instruction
$414    $2CAE   CALL     $CAE            ; Call subroutine at CAE
$416    $B8E4   JP       V0, $8E4        ; Jump to V0 + 8E4
$418    $1D2F   JP       $D2F            ; Jump to D2F
$41A    $8BE2   AND      VB, VE          ; VB &= VE
$41C    $249D   CALL     $49D            ; Call subroutine at 49D
$41E    $C482   RND      V4, #82         ; V4 = random & 82
$420    $C927   RND      V9, #27         ; V9 = random & 27
$422    $1BB3   JP       $BB3            ; Jump to BB3
$424    $C216   RND      V2, #16         ; V2 = random & 16
$426    $AAAB   LD       I, $AAB         ; Load AAB into I
$428    $FAD1   UNKNOWN  FAD1            ; Unknown Fxxx instruction
$42A    $BE40   JP       V0, $E40        ; Jump to V0 + E40
$42C    $E62E   UNKNOWN  $E62E           ; Unknown Exxx instruction
$42E    $5218   UNKNOWN  $5218           ; Unknown 5xxx instruction
$430    $4F72   SNE      VF, #72         ; Skip if VF != 114
$432    $8EDC   UNKNOWN  8EDC            ; Unknown 8xxx instruction
$434    $99C9   UNKNOWN  $99C9           ; Unknown 9xxx instruction
$436    $8391   OR       V3, V9          ; V3 |= V9
$438    $E79B   UNKNOWN  $E79B           ; Unknown Exxx instruction
$43A    $8CC4   ADD      VC, VC          ; VC += VC, VF = carry
$43C    $3C45   SE       VC, #45         ; Skip if VC == 69
$43E    $F2BF   UNKNOWN  F2BF            ; Unknown Fxxx instruction
$440    $DCF5   DRW      VC, VF, #5      ; Draw 5-byte sprite at VC, VF
$442    $7134   ADD      V1, #34         ; Add 52 to V1
$444    $FA23   UNKNOWN  FA23            ; Unknown Fxxx instruction
$446    $F1A5   UNKNOWN  F1A5            ; Unknown Fxxx instruction
$448    $417C   SNE      V1, #7C         ; Skip if V1 != 124
$44A    $4333   SNE      V3, #33         ; Skip if V3 != 51
$44C    $23D0   CALL     $3D0            ; Call subroutine at 3D0
$44E    $9C8F   UNKNOWN  $9C8F           ; Unknown 9xxx instruction
$450    $CE2C   RND      VE, #2C         ; VE = random & 2C
$452    $BC80   JP       V0, $C80        ; Jump to V0 + C80
$454    $D903   DRW      V9, V0, #3      ; Draw 3-byte sprite at V9, V0
$456    $0525   SYS      $525            ; System call to 525
$458    $69E5   LD       V9, #E5         ; Load 229 into V9
$45A    $139D   JP       $39D            ; Jump to 39D
$45C    $4AFB   SNE      VA, #FB         ; Skip if VA != 251
$45E    $225A   CALL     $25A            ; Call subroutine at 25A
$460    $CF4E   RND      VF, #4E         ; VF = random & 4E
$462    $0676   SYS      $676            ; System call to 676
$464    $9AAD   UNKNOWN  $9AAD           ; Unknown 9xxx instruction
$466    $2861   CALL     $861            ; Call subroutine at 861
$468    $59BA   UNKNOWN  $59BA           ; Unknown 5xxx instruction
$46A    $76C0   ADD      V6, #C0         ; Add 192 to V6
$46C    $C9A0   RND      V9, #A0         ; V9 = random & A0
$46E    $0401   SYS      $401            ; System call to 401
$470    $4F71   SNE      VF, #71         ; Skip if VF != 113
$472    $90E9   UNKNOWN  $90E9           ; Unknown 9xxx instruction
$474    $663F   LD       V6, #3F         ; Load 63 into V6
$476    $1848   JP       $848            ; Jump to 848
$478    $F976   UNKNOWN  F976            ; Unknown Fxxx instruction
$47A    $A1F7   LD       I, $1F7         ; Load 1F7 into I
$47C    $50B0   SE       V0, VB          ; Skip if V0 == VB
$47E    $8A8D   UNKNOWN  8A8D            ; Unknown 8xxx instruction
$480    $870C   UNKNOWN  870C            ; Unknown 8xxx instruction
$482    $411C   SNE      V1, #1C         ; Skip if V1 != 28
$484    $5A90   SE       VA, V9          ; Skip if VA == V9
$486    $49E6   SNE      V9, #E6         ; Skip if V9 != 230
$488    $E230   UNKNOWN  $E230           ; Unknown Exxx instruction
$48A    $79A0   ADD      V9, #A0         ; Add 160 to V9
$48C    $28C7   CALL     $8C7            ; Call subroutine at 8C7
$48E    $D410   DRW      V4, V1, #0      ; Draw 0-byte sprite at V4, V1
$490    $995E   UNKNOWN  $995E           ; Unknown 9xxx instruction
$492    $D144   DRW      V1, V4, #4      ; Draw 4-byte sprite at V1, V4
$494    $296E   CALL     $96E            ; Call subroutine at 96E
$496    $802E   SHL      V0              ; V0 <<= 1, VF = MSB
$498    $C701   RND      V7, #01         ; V7 = random & 01
$49A    $F7C4   UNKNOWN  F7C4            ; Unknown Fxxx instruction
$49C    $2DE6   CALL     $DE6            ; Call subroutine at DE6
$49E    $A39A   LD       I, $39A         ; Load 39A into I
$4A0    $ACF7   LD       I, $CF7         ; Load CF7 into I
$4A2    $E2D1   UNKNOWN  $E2D1           ; Unknown Exxx instruction
$4A4    $70AB   ADD      V0, #AB         ; Add 171 to V0
$4A6    $9DE4   UNKNOWN  $9DE4           ; Unknown 9xxx instruction
$4A8    $200B   CALL     $00B            ; Call subroutine at 00B
$4AA    $E91A   UNKNOWN  $E91A           ; Unknown Exxx instruction
$4AC    $FE0F   UNKNOWN  FE0F            ; Unknown Fxxx instruction
$4AE    $A0AD   LD       I, $0AD         ; Load 0AD into I
$4B0    $7246   ADD      V2, #46         ; Add 70 to V2
$4B2    $72EB   ADD      V2, #EB         ; Add 235 to V2
$4B4    $B4D6   JP       V0, $4D6        ; Jump to V0 + 4D6
$4B6    $B7D7   JP       V0, $7D7        ; Jump to V0 + 7D7
$4B8    $8E55   SUB      VE, V5          ; VE -= V5, VF = !borrow
$4BA    $7C28   ADD      VC, #28         ; Add 40 to VC
$4BC    $BB91   JP       V0, $B91        ; Jump to V0 + B91
$4BE    $07FE   SYS      $7FE            ; System call to 7FE
$4C0    $AE82   LD       I, $E82         ; Load E82 into I
$4C2    $B104   JP       V0, $104        ; Jump to V0 + 104
$4C4    $88B2   AND      V8, VB          ; V8 &= VB
$4C6    $F5BC   UNKNOWN  F5BC            ; Unknown Fxxx instruction
$4C8    $FD6C   UNKNOWN  FD6C            ; Unknown Fxxx instruction
$4CA    $C38C   RND      V3, #8C         ; V3 = random & 8C
$4CC    $6B94   LD       VB, #94         ; Load 148 into VB
$4CE    $BBF2   JP       V0, $BF2        ; Jump to V0 + BF2
$4D0    $6AB7   LD       VA, #B7         ; Load 183 into VA
$4D2    $4712   SNE      V7, #12         ; Skip if V7 != 18
$4D4    $9B25   UNKNOWN  $9B25           ; Unknown 9xxx instruction
$4D6    $AA43   LD       I, $A43         ; Load A43 into I
$4D8    $5CA9   UNKNOWN  $5CA9           ; Unknown 5xxx instruction
$4DA    $FB0B   UNKNOWN  FB0B            ; Unknown Fxxx instruction
$4DC    $B383   JP       V0, $383        ; Jump to V0 + 383
$4DE    $1A30   JP       $A30            ; Jump to A30
$4E0    $93D2   UNKNOWN  $93D2           ; Unknown 9xxx instruction
$4E2    $38C4   SE       V8, #C4         ; Skip if V8 == 196
$4E4    $1872   JP       $872            ; Jump to 872
$4E6    $372A   SE       V7, #2A         ; Skip if V7 == 42
$4E8    $030F   SYS      $30F            ; System call to 30F
$4EA    $291F   CALL     $91F            ; Call subroutine at 91F
$4EC    $180A   JP       $80A            ; Jump to 80A
$4EE    $4D3E   SNE      VD, #3E         ; Skip if VD != 62
$4F0    $CC06   RND      VC, #06         ; VC = random & 06
$4F2    $1291   JP       $291            ; Jump to 291
$4F4    $5EA5   UNKNOWN  $5EA5           ; Unknown 5xxx instruction
$4F6    $CEFF   RND      VE, #FF         ; VE = random & FF
$4F8    $EAEA   UNKNOWN  $EAEA           ; Unknown Exxx instruction
$4FA    $70A0   ADD      V0, #A0         ; Add 160 to V0
$4FC    $B56E   JP       V0, $56E        ; Jump to V0 + 56E
$4FE    $F126   UNKNOWN  F126            ; Unknown Fxxx instruction
$500    $9E91   UNKNOWN  $9E91           ; Unknown 9xxx instruction
$502    $42B8   SNE      V2, #B8         ; Skip if V2 != 184
$504    $46AD   SNE      V6, #AD         ; Skip if V6 != 173
$506    $D73C   DRW      V7, V3, #C      ; Draw 12-byte sprite at V7, V3
$508    $9EA6   UNKNOWN  $9EA6           ; Unknown 9xxx instruction
$50A    $DFE6   DRW      VF, VE, #6      ; Draw 6-byte sprite at VF, VE
$50C    $5753   UNKNOWN  $5753           ; Unknown 5xxx instruction
$50E    $2186   CALL     $186            ; Call subroutine at 186
$510    $A516   LD       I, $516         ; Load 516 into I
$512    $DF18   DRW      VF, V1, #8      ; Draw 8-byte sprite at VF, V1
$514    $D7DF   DRW      V7, VD, #F      ; Draw 15-byte sprite at V7, VD
$516    $A5C3   LD       I, $5C3         ; Load 5C3 into I
$518    $6C40   LD       VC, #40         ; Load 64 into VC
$51A    $6B79   LD       VB, #79         ; Load 121 into VB
$51C    $1FFB   JP       $FFB            ; Jump to FFB
$51E    $7512   ADD      V5, #12         ; Add 18 to V5
$520    $8C29   UNKNOWN  8C29            ; Unknown 8xxx instruction
$522    $5277   UNKNOWN  $5277           ; Unknown 5xxx instruction
$524    $925B   UNKNOWN  $925B           ; Unknown 9xxx instruction
$526    $FA0A   LD       VA, K           ; Wait for key press, store in VA
$528    $B200   JP       V0, $200        ; Jump to V0 + 200
$52A    $16DB   JP       $6DB            ; Jump to 6DB
$52C    $2D8A   CALL     $D8A            ; Call subroutine at D8A
$52E    $CE88   RND      VE, #88         ; VE = random & 88
$530    $A1A9   LD       I, $1A9         ; Load 1A9 into I
$532    $13D9   JP       $3D9            ; Jump to 3D9
$534    $2F6B   CALL     $F6B            ; Call subroutine at F6B
$536    $4D6C   SNE      VD, #6C         ; Skip if VD != 108
$538    $BF03   JP       V0, $F03        ; Jump to V0 + F03
$53A    $A756   LD       I, $756         ; Load 756 into I
$53C    $217A   CALL     $17A            ; Call subroutine at 17A
$53E    $4A95   SNE      VA, #95         ; Skip if VA != 149
$540    $4756   SNE      V7, #56         ; Skip if V7 != 86
$542    $9441   UNKNOWN  $9441           ; Unknown 9xxx instruction
$544    $8B89   UNKNOWN  8B89            ; Unknown 8xxx instruction
$546    $B20F   JP       V0, $20F        ; Jump to V0 + 20F
$548    $1393   JP       $393            ; Jump to 393
$54A    $9E17   UNKNOWN  $9E17           ; Unknown 9xxx instruction
$54C    $9E68   UNKNOWN  $9E68           ; Unknown 9xxx instruction
$54E    $D857   DRW      V8, V5, #7      ; Draw 7-byte sprite at V8, V5
$550    $FD66   UNKNOWN  FD66            ; Unknown Fxxx instruction
$552    $A9B2   LD       I, $9B2         ; Load 9B2 into I
$554    $BDB5   JP       V0, $DB5        ; Jump to V0 + DB5
$556    $6B29   LD       VB, #29         ; Load 41 into VB
$558    $EDA6   UNKNOWN  $EDA6           ; Unknown Exxx instruction
$55A    $72B0   ADD      V2, #B0         ; Add 176 to V2
$55C    $BC31   JP       V0, $C31        ; Jump to V0 + C31
$55E    $9861   UNKNOWN  $9861           ; Unknown 9xxx instruction
$560    $E09A   UNKNOWN  $E09A           ; Unknown Exxx instruction
$562    $F5CB   UNKNOWN  F5CB            ; Unknown Fxxx instruction
$564    $A67A   LD       I, $67A         ; Load 67A into I
$566    $7E10   ADD      VE, #10         ; Add 16 to VE
$568    $01DB   SYS      $1DB            ; System call to 1DB
$56A    $08DB   SYS      $8DB            ; System call to 8DB
$56C    $9FC2   UNKNOWN  $9FC2           ; Unknown 9xxx instruction
$56E    $7A10   ADD      VA, #10         ; Add 16 to VA
$570    $B141   JP       V0, $141        ; Jump to V0 + 141
$572    $7BCF   ADD      VB, #CF         ; Add 207 to VB
$574    $EC93   UNKNOWN  $EC93           ; Unknown Exxx instruction
$576    $604F   LD       V0, #4F         ; Load 79 into V0
$578    $859F   UNKNOWN  859F            ; Unknown 8xxx instruction
$57A    $D95D   DRW      V9, V5, #D      ; Draw 13-byte sprite at V9, V5
$57C    $3A15   SE       VA, #15         ; Skip if VA == 21
$57E    $6298   LD       V2, #98         ; Load 152 into V2
$580    $53FB   UNKNOWN  $53FB           ; Unknown 5xxx instruction
$582    $4BF0   SNE      VB, #F0         ; Skip if VB != 240
$584    $1879   JP       $879            ; Jump to 879
$586    $24E2   CALL     $4E2            ; Call subroutine at 4E2
$588    $E02F   UNKNOWN  $E02F           ; Unknown Exxx instruction
$58A    $2D0F   CALL     $D0F            ; Call subroutine at D0F
$58C    $3C21   SE       VC, #21         ; Skip if VC == 33
$58E    $C553   RND      V5, #53         ; V5 = random & 53
$590    $9A35   UNKNOWN  $9A35           ; Unknown 9xxx instruction
$592    $B67C   JP       V0, $67C        ; Jump to V0 + 67C
$594    $A91A   LD       I, $91A         ; Load 91A into I
$596    $2571   CALL     $571            ; Call subroutine at 571
$598    $2CF6   CALL     $CF6            ; Call subroutine at CF6
$59A    $6BBA   LD       VB, #BA         ; Load 186 into VB
$59C    $28F2   CALL     $8F2            ; Call subroutine at 8F2
$59E    $3455   SE       V4, #55         ; Skip if V4 == 85
$5A0    $E61E   UNKNOWN  $E61E           ; Unknown Exxx instruction
$5A2    $38D6   SE       V8, #D6         ; Skip if V8 == 214
$5A4    $BA3C   JP       V0, $A3C        ; Jump to V0 + A3C
$5A6    $94AA   UNKNOWN  $94AA           ; Unknown 9xxx instruction
$5A8    $9561   UNKNOWN  $9561           ; Unknown 9xxx instruction
$5AA    $3DAF   SE       VD, #AF         ; Skip if VD == 175
$5AC    $5DAD   UNKNOWN  $5DAD           ; Unknown 5xxx instruction
$5AE    $FB88   UNKNOWN  FB88            ; Unknown Fxxx instruction
$5B0    $9E6A   UNKNOWN  $9E6A           ; Unknown 9xxx instruction
$5B2    $1386   JP       $386            ; Jump to 386
$5B4    $317B   SE       V1, #7B         ; Skip if V1 == 123
$5B6    $8DF4   ADD      VD, VF          ; VD += VF, VF = carry
$5B8    $AF18   LD       I, $F18         ; Load F18 into I
$5BA    $4868   SNE      V8, #68         ; Skip if V8 != 104
$5BC    $06EA   SYS      $6EA            ; System call to 6EA
$5BE    $1B11   JP       $B11            ; Jump to B11
$5C0    $031A   SYS      $31A            ; System call to 31A
$5C2    $1A90   JP       $A90            ; Jump to A90
$5C4    $C111   RND      V1, #11         ; V1 = random & 11
$5C6    $0027   SYS      $027            ; System call to 027
$5C8    $9D05   UNKNOWN  $9D05           ; Unknown 9xxx instruction
$5CA    $026F   SYS      $26F            ; System call to 26F
$5CC    $B73C   JP       V0, $73C        ; Jump to V0 + 73C
$5CE    $53AE   UNKNOWN  $53AE           ; Unknown 5xxx instruction
$5D0    $45F2   SNE      V5, #F2         ; Skip if V5 != 242
$5D2    $FB3B   UNKNOWN  FB3B            ; Unknown Fxxx instruction
$5D4    $DCC2   DRW      VC, VC, #2      ; Draw 2-byte sprite at VC, VC
$5D6    $B617   JP       V0, $617        ; Jump to V0 + 617
$5D8    $F65B   UNKNOWN  F65B            ; Unknown Fxxx instruction
$5DA    $043E   SYS      $43E            ; System call to 43E
$5DC    $462E   SNE      V6, #2E         ; Skip if V6 != 46
$5DE    $76B2   ADD      V6, #B2         ; Add 178 to V6
$5E0    $B493   JP       V0, $493        ; Jump to V0 + 493
$5E2    $0CBB   SYS      $CBB            ; System call to CBB
$5E4    $F4E5   UNKNOWN  F4E5            ; Unknown Fxxx instruction
$5E6    $865A   UNKNOWN  865A            ; Unknown 8xxx instruction
$5E8    $9E57   UNKNOWN  $9E57           ; Unknown 9xxx instruction
$5EA    $9F4B   UNKNOWN  $9F4B           ; Unknown 9xxx instruction
$5EC    $CDC8   RND      VD, #C8         ; VD = random & C8
$5EE    $2E58   CALL     $E58            ; Call subroutine at E58
$5F0    $FB5A   UNKNOWN  FB5A            ; Unknown Fxxx instruction
$5F2    $49E4   SNE      V9, #E4         ; Skip if V9 != 228
$5F4    $04E4   SYS      $4E4            ; System call to 4E4
$5F6    $5832   UNKNOWN  $5832           ; Unknown 5xxx instruction
$5F8    $A87E   LD       I, $87E         ; Load 87E into I
$5FA    $A23B   LD       I, $23B         ; Load 23B into I
$5FC    $E52D   UNKNOWN  $E52D           ; Unknown Exxx instruction
$5FE    $10D1   JP       $0D1            ; Jump to 0D1
$600    $6487   LD       V4, #87         ; Load 135 into V4
$602    $C18F   RND      V1, #8F         ; V1 = random & 8F
$604    $2890   CALL     $890            ; Call subroutine at 890
$606    $E02B   UNKNOWN  $E02B           ; Unknown Exxx instruction
$608    $B816   JP       V0, $816        ; Jump to V0 + 816
$60A    $AA68   LD       I, $A68         ; Load A68 into I
$60C    $9F69   UNKNOWN  $9F69           ; Unknown 9xxx instruction
$60E    $34DA   SE       V4, #DA         ; Skip if V4 == 218
$610    $8220   LD       V2, V2          ; V2 = V2
$612    $F7AE   UNKNOWN  F7AE            ; Unknown Fxxx instruction
$614    $05A7   SYS      $5A7            ; System call to 5A7
$616    $CF56   RND      VF, #56         ; VF = random & 56
$618    $EF75   UNKNOWN  $EF75           ; Unknown Exxx instruction
$61A    $701A   ADD      V0, #1A         ; Add 26 to V0
$61C    $3E05   SE       VE, #05         ; Skip if VE == 5
$61E    $9632   UNKNOWN  $9632           ; Unknown 9xxx instruction
$620    $5072   UNKNOWN  $5072           ; Unknown 5xxx instruction
$622    $5A38   UNKNOWN  $5A38           ; Unknown 5xxx instruction
$624    $C159   RND      V1, #59         ; V1 = random & 59
$626    $8EE4   ADD      VE, VE          ; VE += VE, VF = carry
$628    $4F78   SNE      VF, #78         ; Skip if VF != 120
$62A    $AB59   LD       I, $B59         ; Load B59 into I
$62C    $008D   SYS      $08D            ; System call to 08D
$62E    $5BEC   UNKNOWN  $5BEC           ; Unknown 5xxx instruction
$630    $80A0   LD       V0, VA          ; V0 = VA
$632    $E55F   UNKNOWN  $E55F           ; Unknown Exxx instruction
$634    $3B18   SE       VB, #18         ; Skip if VB == 24
$636    $904E   UNKNOWN  $904E           ; Unknown 9xxx instruction
$638    $84FC   UNKNOWN  84FC            ; Unknown 8xxx instruction
$63A    $CAC8   RND      VA, #C8         ; VA = random & C8
$63C    $FE43   UNKNOWN  FE43            ; Unknown Fxxx instruction
$63E    $0187   SYS      $187            ; System call to 187
$640    $4D67   SNE      VD, #67         ; Skip if VD != 103
$642    $888A   UNKNOWN  888A            ; Unknown 8xxx instruction
$644    $9C68   UNKNOWN  $9C68           ; Unknown 9xxx instruction
$646    $F8B5   UNKNOWN  F8B5            ; Unknown Fxxx instruction
$648    $317B   SE       V1, #7B         ; Skip if V1 == 123
$64A    $92FD   UNKNOWN  $92FD           ; Unknown 9xxx instruction
$64C    $709A   ADD      V0, #9A         ; Add 154 to V0
$64E    $D1A9   DRW      V1, VA, #9      ; Draw 9-byte sprite at V1, VA
$650    $B2F5   JP       V0, $2F5        ; Jump to V0 + 2F5
$652    $5B66   UNKNOWN  $5B66           ; Unknown 5xxx instruction
$654    $493E   SNE      V9, #3E         ; Skip if V9 != 62
$656    $485B   SNE      V8, #5B         ; Skip if V8 != 91
$658    $F4B6   UNKNOWN  F4B6            ; Unknown Fxxx instruction
$65A    $6212   LD       V2, #12         ; Load 18 into V2
$65C    $C54C   RND      V5, #4C         ; V5 = random & 4C
$65E    $C015   RND      V0, #15         ; V0 = random & 15
$660    $3609   SE       V6, #09         ; Skip if V6 == 9
$662    $6C0B   LD       VC, #0B         ; Load 11 into VC
$664    $C460   RND      V4, #60         ; V4 = random & 60
$666    $5021   UNKNOWN  $5021           ; Unknown 5xxx instruction
$668    $8607   SUBN     V6, V0          ; V6 = V0 - V6, VF = !borrow
$66A    $302A   SE       V0, #2A         ; Skip if V0 == 42
$66C    $2849   CALL     $849            ; Call subroutine at 849
$66E    $A71E   LD       I, $71E         ; Load 71E into I
$670    $CC5C   RND      VC, #5C         ; VC = random & 5C
$672    $01CF   SYS      $1CF            ; System call to 1CF
$674    $495F   SNE      V9, #5F         ; Skip if V9 != 95
$676    $611F   LD       V1, #1F         ; Load 31 into V1
$678    $D5AE   DRW      V5, VA, #E      ; Draw 14-byte sprite at V5, VA
$67A    $6B8F   LD       VB, #8F         ; Load 143 into VB
$67C    $B632   JP       V0, $632        ; Jump to V0 + 632
$67E    $49F6   SNE      V9, #F6         ; Skip if V9 != 246
$680    $37D7   SE       V7, #D7         ; Skip if V7 == 215
$682    $3B69   SE       VB, #69         ; Skip if VB == 105
$684    $AD43   LD       I, $D43         ; Load D43 into I
$686    $3BF5   SE       VB, #F5         ; Skip if VB == 245
$688    $ED5D   UNKNOWN  $ED5D           ; Unknown Exxx instruction
$68A    $D2CA   DRW      V2, VC, #A      ; Draw 10-byte sprite at V2, VC
$68C    $4E2D   SNE      VE, #2D         ; Skip if VE != 45
$68E    $84E9   UNKNOWN  84E9            ; Unknown 8xxx instruction
$690    $38A5   SE       V8, #A5         ; Skip if V8 == 165
$692    $2758   CALL     $758            ; Call subroutine at 758
$694    $2D53   CALL     $D53            ; Call subroutine at D53
$696    $3EAA   SE       VE, #AA         ; Skip if VE == 170
$698    $0A09   SYS      $A09            ; System call to A09
$69A    $BC30   JP       V0, $C30        ; Jump to V0 + C30
$69C    $38AC   SE       V8, #AC         ; Skip if V8 == 172
$69E    $4C27   SNE      VC, #27         ; Skip if VC != 39
$6A0    $E5F1   UNKNOWN  $E5F1           ; Unknown Exxx instruction
$6A2    $C2BB   RND      V2, #BB         ; V2 = random & BB
$6A4    $B3FF   JP       V0, $3FF        ; Jump to V0 + 3FF
$6A6    $3422   SE       V4, #22         ; Skip if V4 == 34
$6A8    $F719   UNKNOWN  F719            ; Unknown Fxxx instruction
$6AA    $F10B   UNKNOWN  F10B            ; Unknown Fxxx instruction
$6AC    $DE05   DRW      VE, V0, #5      ; Draw 5-byte sprite at VE, V0
$6AE    $0E32   SYS      $E32            ; System call to E32
$6B0    $486B   SNE      V8, #6B         ; Skip if V8 != 107
$6B2    $C7DA   RND      V7, #DA         ; V7 = random & DA
$6B4    $BC7F   JP       V0, $C7F        ; Jump to V0 + C7F
$6B6    $B4D1   JP       V0, $4D1        ; Jump to V0 + 4D1
$6B8    $EDE7   UNKNOWN  $EDE7           ; Unknown Exxx instruction
$6BA    $2E52   CALL     $E52            ; Call subroutine at E52
$6BC    $EC0B   UNKNOWN  $EC0B           ; Unknown Exxx instruction
$6BE    $1B2E   JP       $B2E            ; Jump to B2E
$6C0    $41F2   SNE      V1, #F2         ; Skip if V1 != 242
$6C2    $C005   RND      V0, #05         ; V0 = random & 05
$6C4    $D0D4   DRW      V0, VD, #4      ; Draw 4-byte sprite at V0, VD
$6C6    $5AE1   UNKNOWN  $5AE1           ; Unknown 5xxx instruction
$6C8    $3766   SE       V7, #66         ; Skip if V7 == 102
$6CA    $FA87   UNKNOWN  FA87            ; Unknown Fxxx instruction
$6CC    $7323   ADD      V3, #23         ; Add 35 to V3
$6CE    $51A2   UNKNOWN  $51A2           ; Unknown 5xxx instruction
$6D0    $EE4E   UNKNOWN  $EE4E           ; Unknown Exxx instruction
$6D2    $5815   UNKNOWN  $5815           ; Unknown 5xxx instruction
$6D4    $F7A9   UNKNOWN  F7A9            ; Unknown Fxxx instruction
$6D6    $E0F3   UNKNOWN  $E0F3           ; Unknown Exxx instruction
$6D8    $5D8B   UNKNOWN  $5D8B           ; Unknown 5xxx instruction
$6DA    $904A   UNKNOWN  $904A           ; Unknown 9xxx instruction
$6DC    $8226   SHR      V2              ; V2 >>= 1, VF = LSB
$6DE    $6E33   LD       VE, #33         ; Load 51 into VE
$6E0    $6E40   LD       VE, #40         ; Load 64 into VE
$6E2    $C35D   RND      V3, #5D         ; V3 = random & 5D
$6E4    $8D50   LD       VD, V5          ; VD = V5
$6E6    $C7D6   RND      V7, #D6         ; V7 = random & D6
$6E8    $5987   UNKNOWN  $5987           ; Unknown 5xxx instruction
$6EA    $CDB6   RND      VD, #B6         ; VD = random & B6
$6EC    $712F   ADD      V1, #2F         ; Add 47 to V1
$6EE    $C6DD   RND      V6, #DD         ; V6 = random & DD
$6F0    $BE86   JP       V0, $E86        ; Jump to V0 + E86
$6F2    $990D   UNKNOWN  $990D           ; Unknown 9xxx instruction
$6F4    $0DDC   SYS      $DDC            ; System call to DDC
$6F6    $BB2A   JP       V0, $B2A        ; Jump to V0 + B2A
$6F8    $A8CE   LD       I, $8CE         ; Load 8CE into I
$6FA    $112D   JP       $12D            ; Jump to 12D
$6FC    $B21E   JP       V0, $21E        ; Jump to V0 + 21E
$6FE    $95F3   UNKNOWN  $95F3           ; Unknown 9xxx instruction
$700    $1FFC   JP       $FFC            ; Jump to FFC
$702    $D548   DRW      V5, V4, #8      ; Draw 8-byte sprite at V5, V4
$704    $203B   CALL     $03B            ; Call subroutine at 03B
$706    $74E9   ADD      V4, #E9         ; Add 233 to V4
$708    $DCD0   DRW      VC, VD, #0      ; Draw 0-byte sprite at VC, VD
$70A    $2973   CALL     $973            ; Call subroutine at 973
$70C    $F24B   UNKNOWN  F24B            ; Unknown Fxxx instruction
$70E    $54AF   UNKNOWN  $54AF           ; Unknown 5xxx instruction
$710    $6437   LD       V4, #37         ; Load 55 into V4
$712    $830A   UNKNOWN  830A            ; Unknown 8xxx instruction
$714    $A692   LD       I, $692         ; Load 692 into I
$716    $832A   UNKNOWN  832A            ; Unknown 8xxx instruction
$718    $C963   RND      V9, #63         ; V9 = random & 63
$71A    $4783   SNE      V7, #83         ; Skip if V7 != 131
$71C    $A749   LD       I, $749         ; Load 749 into I
$71E    $7F01   ADD      VF, #01         ; Add 1 to VF
$720    $45A9   SNE      V5, #A9         ; Skip if V5 != 169
$722    $BE6C   JP       V0, $E6C        ; Jump to V0 + E6C
$724    $18C2   JP       $8C2            ; Jump to 8C2
$726    $130F   JP       $30F            ; Jump to 30F
$728    $8D64   ADD      VD, V6          ; VD += V6, VF = carry
$72A    $5E7A   UNKNOWN  $5E7A           ; Unknown 5xxx instruction
$72C    $C0A1   RND      V0, #A1         ; V0 = random & A1
$72E    $5E12   UNKNOWN  $5E12           ; Unknown 5xxx instruction
$730    $3386   SE       V3, #86         ; Skip if V3 == 134
$732    $6954   LD       V9, #54         ; Load 84 into V9
$734    $D90F   DRW      V9, V0, #F      ; Draw 15-byte sprite at V9, V0
$736    $B0DA   JP       V0, $0DA        ; Jump to V0 + 0DA
$738    $2DC4   CALL     $DC4            ; Call subroutine at DC4
$73A    $BF35   JP       V0, $F35        ; Jump to V0 + F35
$73C    $0D91   SYS      $D91            ; System call to D91
$73E    $6624   LD       V6, #24         ; Load 36 into V6
$740    $9111   UNKNOWN  $9111           ; Unknown 9xxx instruction
$742    $644E   LD       V4, #4E         ; Load 78 into V4
$744    $0E72   SYS      $E72            ; System call to E72
$746    $56F9   UNKNOWN  $56F9           ; Unknown 5xxx instruction
$748    $AFE5   LD       I, $FE5         ; Load FE5 into I
$74A    $2F39   CALL     $F39            ; Call subroutine at F39
$74C    $8487   SUBN     V4, V8          ; V4 = V8 - V4, VF = !borrow
$74E    $58FE   UNKNOWN  $58FE           ; Unknown 5xxx instruction
$750    $F208   UNKNOWN  F208            ; Unknown Fxxx instruction
$752    $52DF   UNKNOWN  $52DF           ; Unknown 5xxx instruction
$754    $5AE4   UNKNOWN  $5AE4           ; Unknown 5xxx instruction
$756    $0139   SYS      $139            ; System call to 139
$758    $D813   DRW      V8, V1, #3      ; Draw 3-byte sprite at V8, V1
$75A    $7F83   ADD      VF, #83         ; Add 131 to VF
$75C    $BE68   JP       V0, $E68        ; Jump to V0 + E68
$75E    $A890   LD       I, $890         ; Load 890 into I
$760    $05E4   SYS      $5E4            ; System call to 5E4
$762    $A5BC   LD       I, $5BC         ; Load 5BC into I
$764    $5709   UNKNOWN  $5709           ; Unknown 5xxx instruction
$766    $DBF0   DRW      VB, VF, #0      ; Draw 0-byte sprite at VB, VF
$768    $4CBD   SNE      VC, #BD         ; Skip if VC != 189
$76A    $0D2D   SYS      $D2D            ; System call to D2D
$76C    $9819   UNKNOWN  $9819           ; Unknown 9xxx instruction
$76E    $B522   JP       V0, $522        ; Jump to V0 + 522
$770    $787C   ADD      V8, #7C         ; Add 124 to V8
$772    $5C51   UNKNOWN  $5C51           ; Unknown 5xxx instruction
$774    $923A   UNKNOWN  $923A           ; Unknown 9xxx instruction
$776    $D661   DRW      V6, V6, #1      ; Draw 1-byte sprite at V6, V6
$778    $EEE5   UNKNOWN  $EEE5           ; Unknown Exxx instruction
$77A    $3A9A   SE       VA, #9A         ; Skip if VA == 154
$77C    $7FCB   ADD      VF, #CB         ; Add 203 to VF
$77E    $88C9   UNKNOWN  88C9            ; Unknown 8xxx instruction
$780    $AB44   LD       I, $B44         ; Load B44 into I
$782    $1725   JP       $725            ; Jump to 725
$784    $69F7   LD       V9, #F7         ; Load 247 into V9
$786    $DCA6   DRW      VC, VA, #6      ; Draw 6-byte sprite at VC, VA
$788    $F80A   LD       V8, K           ; Wait for key press, store in V8
$78A    $3816   SE       V8, #16         ; Skip if V8 == 22
$78C    $2B0E   CALL     $B0E            ; Call subroutine at B0E
$78E    $834C   UNKNOWN  834C            ; Unknown 8xxx instruction
$790    $4028   SNE      V0, #28         ; Skip if V0 != 40
$792    $9610   SNE      V6, V1          ; Skip if V6 != V1
$794    $DB9B   DRW      VB, V9, #B      ; Draw 11-byte sprite at VB, V9
$796    $5F50   SE       VF, V5          ; Skip if VF == V5
$798    $B708   JP       V0, $708        ; Jump to V0 + 708
$79A    $CF27   RND      VF, #27         ; VF = random & 27
$79C    $13B8   JP       $3B8            ; Jump to 3B8
$79E    $9D48   UNKNOWN  $9D48           ; Unknown 9xxx instruction
$7A0    $D923   DRW      V9, V2, #3      ; Draw 3-byte sprite at V9, V2
$7A2    $3B65   SE       VB, #65         ; Skip if VB == 101
$7A4    $B545   JP       V0, $545        ; Jump to V0 + 545
$7A6    $D890   DRW      V8, V9, #0      ; Draw 0-byte sprite at V8, V9
$7A8    $66D4   LD       V6, #D4         ; Load 212 into V6
$7AA    $D216   DRW      V2, V1, #6      ; Draw 6-byte sprite at V2, V1
$7AC    $DA21   DRW      VA, V2, #1      ; Draw 1-byte sprite at VA, V2
$7AE    $DDF9   DRW      VD, VF, #9      ; Draw 9-byte sprite at VD, VF
$7B0    $09F6   SYS      $9F6            ; System call to 9F6
$7B2    $2871   CALL     $871            ; Call subroutine at 871
$7B4    $80F9   UNKNOWN  80F9            ; Unknown 8xxx instruction
$7B6    $2B55   CALL     $B55            ; Call subroutine at B55
$7B8    $BF05   JP       V0, $F05        ; Jump to V0 + F05
$7BA    $DFAE   DRW      VF, VA, #E      ; Draw 14-byte sprite at VF, VA
$7BC    $84F9   UNKNOWN  84F9            ; Unknown 8xxx instruction
$7BE    $AFEF   LD       I, $FEF         ; Load FEF into I
$7C0    $B1A9   JP       V0, $1A9        ; Jump to V0 + 1A9
$7C2    $B621   JP       V0, $621        ; Jump to V0 + 621
$7C4    $0886   SYS      $886            ; System call to 886
$7C6    $3EBD   SE       VE, #BD         ; Skip if VE == 189
$7C8    $FF0C   UNKNOWN  FF0C            ; Unknown Fxxx instruction
$7CA    $2787   CALL     $787            ; Call subroutine at 787
$7CC    $5571   UNKNOWN  $5571           ; Unknown 5xxx instruction
$7CE    $3907   SE       V9, #07         ; Skip if V9 == 7
$7D0    $AE6B   LD       I, $E6B         ; Load E6B into I
$7D2    $983A   UNKNOWN  $983A           ; Unknown 9xxx instruction
$7D4    $DAF0   DRW      VA, VF, #0      ; Draw 0-byte sprite at VA, VF
$7D6    $6782   LD       V7, #82         ; Load 130 into V7
$7D8    $B085   JP       V0, $085        ; Jump to V0 + 085
$7DA    $2ECD   CALL     $ECD            ; Call subroutine at ECD
$7DC    $3177   SE       V1, #77         ; Skip if V1 == 119
$7DE    $DEF1   DRW      VE, VF, #1      ; Draw 1-byte sprite at VE, VF
$7E0    $1929   JP       $929            ; Jump to 929
$7E2    $1057   JP       $057            ; Jump to 057
$7E4    $29DF   CALL     $9DF            ; Call subroutine at 9DF
$7E6    $D8AD   DRW      V8, VA, #D      ; Draw 13-byte sprite at V8, VA
$7E8    $8536   SHR      V5              ; V5 >>= 1, VF = LSB
$7EA    $6DC8   LD       VD, #C8         ; Load 200 into VD
$7EC    $D0FD   DRW      V0, VF, #D      ; Draw 13-byte sprite at V0, VF
$7EE    $EEFA   UNKNOWN  $EEFA           ; Unknown Exxx instruction
$7F0    $2EBC   CALL     $EBC            ; Call subroutine at EBC
$7F2    $3803   SE       V8, #03         ; Skip if V8 == 3
$7F4    $D75E   DRW      V7, V5, #E      ; Draw 14-byte sprite at V7, V5
$7F6    $7DED   ADD      VD, #ED         ; Add 237 to VD
$7F8    $21FF   CALL     $1FF            ; Call subroutine at 1FF
$7FA    $D5B3   DRW      V5, VB, #3      ; Draw 3-byte sprite at V5, VB
$7FC    $B38E   JP       V0, $38E        ; Jump to V0 + 38E
$7FE    $8517   SUBN     V5, V1          ; V5 = V1 - V5, VF = !borrow
$800    $4082   SNE      V0, #82         ; Skip if V0 != 130
$802    $F83F   UNKNOWN  F83F            ; Unknown Fxxx instruction
$804    $AFFB   LD       I, $FFB         ; Load FFB into I
$806    $70D6   ADD      V0, #D6         ; Add 214 to V0
$808    $D263   DRW      V2, V6, #3      ; Draw 3-byte sprite at V2, V6
$80A    $49DD   SNE      V9, #DD         ; Skip if V9 != 221
$80C    $6075   LD       V0, #75         ; Load 117 into V0
$80E    $E732   UNKNOWN  $E732           ; Unknown Exxx instruction
$810    $E60B   UNKNOWN  $E60B           ; Unknown Exxx instruction
$812    $4084   SNE      V0, #84         ; Skip if V0 != 132
$814    $78FF   ADD      V8, #FF         ; Add 255 to V8
$816    $A675   LD       I, $675         ; Load 675 into I
$818    $41AC   SNE      V1, #AC         ; Skip if V1 != 172
$81A    $9C32   UNKNOWN  $9C32           ; Unknown 9xxx instruction
$81C    $44E4   SNE      V4, #E4         ; Skip if V4 != 228
$81E    $E2FA   UNKNOWN  $E2FA           ; Unknown Exxx instruction
$820    $A5EA   LD       I, $5EA         ; Load 5EA into I
$822    $629F   LD       V2, #9F         ; Load 159 into V2
$824    $0351   SYS      $351            ; System call to 351
$826    $1262   JP       $262            ; Jump to 262
$828    $E87C   UNKNOWN  $E87C           ; Unknown Exxx instruction
$82A    $6553   LD       V5, #53         ; Load 83 into V5
$82C    $5F11   UNKNOWN  $5F11           ; Unknown 5xxx instruction
$82E    $6A9A   LD       VA, #9A         ; Load 154 into VA
$830    $E8AB   UNKNOWN  $E8AB           ; Unknown Exxx instruction
$832    $EDCB   UNKNOWN  $EDCB           ; Unknown Exxx instruction
$834    $6DDD   LD       VD, #DD         ; Load 221 into VD
$836    $2E5F   CALL     $E5F            ; Call subroutine at E5F
$838    $78D6   ADD      V8, #D6         ; Add 214 to V8
$83A    $9702   UNKNOWN  $9702           ; Unknown 9xxx instruction
$83C    $1386   JP       $386            ; Jump to 386
$83E    $2548   CALL     $548            ; Call subroutine at 548
$840    $BC83   JP       V0, $C83        ; Jump to V0 + C83
$842    $4682   SNE      V6, #82         ; Skip if V6 != 130
$844    $9984   UNKNOWN  $9984           ; Unknown 9xxx instruction
$846    $FC3C   UNKNOWN  FC3C            ; Unknown Fxxx instruction
$848    $1312   JP       $312            ; Jump to 312
$84A    $1F67   JP       $F67            ; Jump to F67
$84C    $7EAF   ADD      VE, #AF         ; Add 175 to VE
$84E    $84E2   AND      V4, VE          ; V4 &= VE
$850    $5FEB   UNKNOWN  $5FEB           ; Unknown 5xxx instruction
$852    $F665   LD       V6, [I]         ; Load V0-V6 from I
$854    $786A   ADD      V8, #6A         ; Add 106 to V8
$856    $DFF9   DRW      VF, VF, #9      ; Draw 9-byte sprite at VF, VF
$858    $5B78   UNKNOWN  $5B78           ; Unknown 5xxx instruction
$85A    $D0D2   DRW      V0, VD, #2      ; Draw 2-byte sprite at V0, VD
$85C    $4D12   SNE      VD, #12         ; Skip if VD != 18
$85E    $3BBA   SE       VB, #BA         ; Skip if VB == 186
$860    $99E9   UNKNOWN  $99E9           ; Unknown 9xxx instruction
$862    $EC21   UNKNOWN  $EC21           ; Unknown Exxx instruction
$864    $8BA0   LD       VB, VA          ; VB = VA
$866    $5CE6   UNKNOWN  $5CE6           ; Unknown 5xxx instruction
$868    $655D   LD       V5, #5D         ; Load 93 into V5
$86A    $9071   UNKNOWN  $9071           ; Unknown 9xxx instruction
$86C    $3E30   SE       VE, #30         ; Skip if VE == 48
$86E    $232C   CALL     $32C            ; Call subroutine at 32C
$870    $AA87   LD       I, $A87         ; Load A87 into I
$872    $35D4   SE       V5, #D4         ; Skip if V5 == 212
$874    $6E71   LD       VE, #71         ; Load 113 into VE
$876    $2D8D   CALL     $D8D            ; Call subroutine at D8D
$878    $F322   UNKNOWN  F322            ; Unknown Fxxx instruction
$87A    $C249   RND      V2, #49         ; V2 = random & 49
$87C    $3B92   SE       VB, #92         ; Skip if VB == 146
$87E    $D187   DRW      V1, V8, #7      ; Draw 7-byte sprite at V1, V8
$880    $5F15   UNKNOWN  $5F15           ; Unknown 5xxx instruction
$882    $F204   UNKNOWN  F204            ; Unknown Fxxx instruction
$884    $3F15   SE       VF, #15         ; Skip if VF == 21
$886    $2465   CALL     $465            ; Call subroutine at 465
$888    $2019   CALL     $019            ; Call subroutine at 019
$88A    $0AF3   SYS      $AF3            ; System call to AF3
$88C    $4002   SNE      V0, #02         ; Skip if V0 != 2
$88E    $F374   UNKNOWN  F374            ; Unknown Fxxx instruction
$890    $0A65   SYS      $A65            ; System call to A65
$892    $2915   CALL     $915            ; Call subroutine at 915
$894    $F9EF   UNKNOWN  F9EF            ; Unknown Fxxx instruction
$896    $4131   SNE      V1, #31         ; Skip if V1 != 49
$898    $4011   SNE      V0, #11         ; Skip if V0 != 17
$89A    $3341   SE       V3, #41         ; Skip if V3 == 65
$89C    $E685   UNKNOWN  $E685           ; Unknown Exxx instruction
$89E    $92BF   UNKNOWN  $92BF           ; Unknown 9xxx instruction
$8A0    $C255   RND      V2, #55         ; V2 = random & 55
$8A2    $DD26   DRW      VD, V2, #6      ; Draw 6-byte sprite at VD, V2
$8A4    $F78B   UNKNOWN  F78B            ; Unknown Fxxx instruction
$8A6    $B68A   JP       V0, $68A        ; Jump to V0 + 68A
$8A8    $D055   DRW      V0, V5, #5      ; Draw 5-byte sprite at V0, V5
$8AA    $EEF0   UNKNOWN  $EEF0           ; Unknown Exxx instruction
$8AC    $554D   UNKNOWN  $554D           ; Unknown 5xxx instruction
$8AE    $21C3   CALL     $1C3            ; Call subroutine at 1C3
$8B0    $189D   JP       $89D            ; Jump to 89D
$8B2    $0718   SYS      $718            ; System call to 718
$8B4    $8FE6   SHR      VF              ; VF >>= 1, VF = LSB
$8B6    $365C   SE       V6, #5C         ; Skip if V6 == 92
$8B8    $D8FF   DRW      V8, VF, #F      ; Draw 15-byte sprite at V8, VF
$8BA    $2DD4   CALL     $DD4            ; Call subroutine at DD4
$8BC    $8F0A   UNKNOWN  8F0A            ; Unknown 8xxx instruction
$8BE    $7D05   ADD      VD, #05         ; Add 5 to VD
$8C0    $6129   LD       V1, #29         ; Load 41 into V1
$8C2    $334F   SE       V3, #4F         ; Skip if V3 == 79
$8C4    $62E2   LD       V2, #E2         ; Load 226 into V2
$8C6    $9E83   UNKNOWN  $9E83           ; Unknown 9xxx instruction
$8C8    $5301   UNKNOWN  $5301           ; Unknown 5xxx instruction
$8CA    $3F4D   SE       VF, #4D         ; Skip if VF == 77
$8CC    $50E7   UNKNOWN  $50E7           ; Unknown 5xxx instruction
$8CE    $7B6C   ADD      VB, #6C         ; Add 108 to VB
$8D0    $F997   UNKNOWN  F997            ; Unknown Fxxx instruction
$8D2    $10B1   JP       $0B1            ; Jump to 0B1
$8D4    $362D   SE       V6, #2D         ; Skip if V6 == 45
$8D6    $3D3D   SE       VD, #3D         ; Skip if VD == 61
$8D8    $84E0   LD       V4, VE          ; V4 = VE
$8DA    $5ACB   UNKNOWN  $5ACB           ; Unknown 5xxx instruction
$8DC    $22C7   CALL     $2C7            ; Call subroutine at 2C7
$8DE    $CEFA   RND      VE, #FA         ; VE = random & FA
$8E0    $85C0   LD       V5, VC          ; V5 = VC
$8E2    $84F6   SHR      V4              ; V4 >>= 1, VF = LSB
$8E4    $59A4   UNKNOWN  $59A4           ; Unknown 5xxx instruction
$8E6    $E98F   UNKNOWN  $E98F           ; Unknown Exxx instruction
$8E8    $1CE6   JP       $CE6            ; Jump to CE6
$8EA    $D3B3   DRW      V3, VB, #3      ; Draw 3-byte sprite at V3, VB
$8EC    $0451   SYS      $451            ; System call to 451
$8EE    $0F2D   SYS      $F2D            ; System call to F2D
$8F0    $7BFB   ADD      VB, #FB         ; Add 251 to VB
$8F2    $BA17   JP       V0, $A17        ; Jump to V0 + A17
$8F4    $E429   UNKNOWN  $E429           ; Unknown Exxx instruction
$8F6    $BF71   JP       V0, $F71        ; Jump to V0 + F71
$8F8    $32FC   SE       V2, #FC         ; Skip if V2 == 252
$8FA    $9FB3   UNKNOWN  $9FB3           ; Unknown 9xxx instruction
$8FC    $5608   UNKNOWN  $5608           ; Unknown 5xxx instruction
$8FE    $3E08   SE       VE, #08         ; Skip if VE == 8
$900    $B58F   JP       V0, $58F        ; Jump to V0 + 58F
$902    $90C1   UNKNOWN  $90C1           ; Unknown 9xxx instruction
$904    $B40B   JP       V0, $40B        ; Jump to V0 + 40B
$906    $DD7C   DRW      VD, V7, #C      ; Draw 12-byte sprite at VD, V7
$908    $86A5   SUB      V6, VA          ; V6 -= VA, VF = !borrow
$90A    $FF55   LD       [I], VF         ; Store V0-VF at I
$90C    $5CB2   UNKNOWN  $5CB2           ; Unknown 5xxx instruction
$90E    $F1D9   UNKNOWN  F1D9            ; Unknown Fxxx instruction
$910    $F38D   UNKNOWN  F38D            ; Unknown Fxxx instruction
$912    $7801   ADD      V8, #01         ; Add 1 to V8
$914    $B2F1   JP       V0, $2F1        ; Jump to V0 + 2F1
$916    $BD70   JP       V0, $D70        ; Jump to V0 + D70
$918    $8270   LD       V2, V7          ; V2 = V7
$91A    $8814   ADD      V8, V1          ; V8 += V1, VF = carry
$91C    $E552   UNKNOWN  $E552           ; Unknown Exxx instruction
$91E    $3FCB   SE       VF, #CB         ; Skip if VF == 203
$920    $700C   ADD      V0, #0C         ; Add 12 to V0
$922    $858C   UNKNOWN  858C            ; Unknown 8xxx instruction
$924    $FCFB   UNKNOWN  FCFB            ; Unknown Fxxx instruction
$926    $67E5   LD       V7, #E5         ; Load 229 into V7
$928    $F953   UNKNOWN  F953            ; Unknown Fxxx instruction
$92A    $AB23   LD       I, $B23         ; Load B23 into I
$92C    $D338   DRW      V3, V3, #8      ; Draw 8-byte sprite at V3, V3
$92E    $71FF   ADD      V1, #FF         ; Add 255 to V1
$930    $9BEE   UNKNOWN  $9BEE           ; Unknown 9xxx instruction
$932    $3D46   SE       VD, #46         ; Skip if VD == 70
$934    $6693   LD       V6, #93         ; Load 147 into V6
$936    $6DFB   LD       VD, #FB         ; Load 251 into VD
$938    $2C58   CALL     $C58            ; Call subroutine at C58
$93A    $0144   SYS      $144            ; System call to 144
$93C    $3831   SE       V8, #31         ; Skip if V8 == 49
$93E    $026B   SYS      $26B            ; System call to 26B
$940    $044F   SYS      $44F            ; System call to 44F
$942    $3D22   SE       VD, #22         ; Skip if VD == 34
$944    $ED29   UNKNOWN  $ED29           ; Unknown Exxx instruction
$946    $4CEF   SNE      VC, #EF         ; Skip if VC != 239
$948    $6CB0   LD       VC, #B0         ; Load 176 into VC
$94A    $B92D   JP       V0, $92D        ; Jump to V0 + 92D
$94C    $D5AA   DRW      V5, VA, #A      ; Draw 10-byte sprite at V5, VA
$94E    $B6C2   JP       V0, $6C2        ; Jump to V0 + 6C2
$950    $6F52   LD       VF, #52         ; Load 82 into VF
$952    $2170   CALL     $170            ; Call subroutine at 170
$954    $F6D5   UNKNOWN  F6D5            ; Unknown Fxxx instruction
$956    $AEDB   LD       I, $EDB         ; Load EDB into I
$958    $C327   RND      V3, #27         ; V3 = random & 27
$95A    $FC22   UNKNOWN  FC22            ; Unknown Fxxx instruction
$95C    $427C   SNE      V2, #7C         ; Skip if V2 != 124
$95E    $884D   UNKNOWN  884D            ; Unknown 8xxx instruction
$960    $7DE7   ADD      VD, #E7         ; Add 231 to VD
$962    $4959   SNE      V9, #59         ; Skip if V9 != 89
$964    $73EC   ADD      V3, #EC         ; Add 236 to V3
$966    $BDA9   JP       V0, $DA9        ; Jump to V0 + DA9
$968    $1C25   JP       $C25            ; Jump to C25
$96A    $9DBF   UNKNOWN  $9DBF           ; Unknown 9xxx instruction
$96C    $422F   SNE      V2, #2F         ; Skip if V2 != 47
$96E    $335B   SE       V3, #5B         ; Skip if V3 == 91
$970    $7E8C   ADD      VE, #8C         ; Add 140 to VE
$972    $B2AF   JP       V0, $2AF        ; Jump to V0 + 2AF
$974    $A71C   LD       I, $71C         ; Load 71C into I
$976    $924C   UNKNOWN  $924C           ; Unknown 9xxx instruction
$978    $AAD1   LD       I, $AD1         ; Load AD1 into I
$97A    $941E   UNKNOWN  $941E           ; Unknown 9xxx instruction
$97C    $1E69   JP       $E69            ; Jump to E69
$97E    $04F0   SYS      $4F0            ; System call to 4F0
$980    $FAEE   UNKNOWN  FAEE            ; Unknown Fxxx instruction
$982    $8CAB   UNKNOWN  8CAB            ; Unknown 8xxx instruction
$984    $29D5   CALL     $9D5            ; Call subroutine at 9D5
$986    $FD2E   UNKNOWN  FD2E            ; Unknown Fxxx instruction
$988    $78E8   ADD      V8, #E8         ; Add 232 to V8
$98A    $EA94   UNKNOWN  $EA94           ; Unknown Exxx instruction
$98C    $87CB   UNKNOWN  87CB            ; Unknown 8xxx instruction
$98E    $9794   UNKNOWN  $9794           ; Unknown 9xxx instruction
$990    $F45F   UNKNOWN  F45F            ; Unknown Fxxx instruction
$992    $2DC5   CALL     $DC5            ; Call subroutine at DC5
$994    $1075   JP       $075            ; Jump to 075
$996    $058E   SYS      $58E            ; System call to 58E
$998    $1BC5   JP       $BC5            ; Jump to BC5
$99A    $267E   CALL     $67E            ; Call subroutine at 67E
$99C    $7B68   ADD      VB, #68         ; Add 104 to VB
$99E    $2277   CALL     $277            ; Call subroutine at 277
$9A0    $CFFF   RND      VF, #FF         ; VF = random & FF
$9A2    $08B7   SYS      $8B7            ; System call to 8B7
$9A4    $C665   RND      V6, #65         ; V6 = random & 65
$9A6    $A391   LD       I, $391         ; Load 391 into I
$9A8    $A502   LD       I, $502         ; Load 502 into I
$9AA    $097D   SYS      $97D            ; System call to 97D
$9AC    $15DD   JP       $5DD            ; Jump to 5DD
$9AE    $33A8   SE       V3, #A8         ; Skip if V3 == 168
$9B0    $278A   CALL     $78A            ; Call subroutine at 78A
$9B2    $BCE9   JP       V0, $CE9        ; Jump to V0 + CE9
$9B4    $A64E   LD       I, $64E         ; Load 64E into I
$9B6    $25F1   CALL     $5F1            ; Call subroutine at 5F1
$9B8    $BAD2   JP       V0, $AD2        ; Jump to V0 + AD2
$9BA    $F793   UNKNOWN  F793            ; Unknown Fxxx instruction
$9BC    $EA23   UNKNOWN  $EA23           ; Unknown Exxx instruction
$9BE    $A5F3   LD       I, $5F3         ; Load 5F3 into I
$9C0    $9EEF   UNKNOWN  $9EEF           ; Unknown 9xxx instruction
$9C2    $9E89   UNKNOWN  $9E89           ; Unknown 9xxx instruction
$9C4    $38F7   SE       V8, #F7         ; Skip if V8 == 247
$9C6    $C114   RND      V1, #14         ; V1 = random & 14
$9C8    $EE98   UNKNOWN  $EE98           ; Unknown Exxx instruction
$9CA    $C744   RND      V7, #44         ; V7 = random & 44
$9CC    $824A   UNKNOWN  824A            ; Unknown 8xxx instruction
$9CE    $AEEB   LD       I, $EEB         ; Load EEB into I
$9D0    $7012   ADD      V0, #12         ; Add 18 to V0
$9D2    $E1C5   UNKNOWN  $E1C5           ; Unknown Exxx instruction
$9D4    $9566   UNKNOWN  $9566           ; Unknown 9xxx instruction
$9D6    $BD6F   JP       V0, $D6F        ; Jump to V0 + D6F
$9D8    $E53C   UNKNOWN  $E53C           ; Unknown Exxx instruction
$9DA    $0B8B   SYS      $B8B            ; System call to B8B
$9DC    $E0F6   UNKNOWN  $E0F6           ; Unknown Exxx instruction
$9DE    $4DE4   SNE      VD, #E4         ; Skip if VD != 228
$9E0    $1C60   JP       $C60            ; Jump to C60
$9E2    $E0E8   UNKNOWN  $E0E8           ; Unknown Exxx instruction
$9E4    $4C27   SNE      VC, #27         ; Skip if VC != 39
$9E6    $0B66   SYS      $B66            ; System call to B66
$9E8    $5BBE   UNKNOWN  $5BBE           ; Unknown 5xxx instruction
$9EA    $AB61   LD       I, $B61         ; Load B61 into I
$9EC    $A7CD   LD       I, $7CD         ; Load 7CD into I
$9EE    $4071   SNE      V0, #71         ; Skip if V0 != 113
$9F0    $23D7   CALL     $3D7            ; Call subroutine at 3D7
$9F2    $3428   SE       V4, #28         ; Skip if V4 == 40
$9F4    $0729   SYS      $729            ; System call to 729
$9F6    $49B5   SNE      V9, #B5         ; Skip if V9 != 181
$9F8    $05F8   SYS      $5F8            ; System call to 5F8
$9FA    $A82F   LD       I, $82F         ; Load 82F into I
$9FC    $0EF3   SYS      $EF3            ; System call to EF3
$9FE    $A3E8   LD       I, $3E8         ; Load 3E8 into I
$A00    $A6CB   LD       I, $6CB         ; Load 6CB into I
$A02    $031F   SYS      $31F            ; System call to 31F
$A04    $188A   JP       $88A            ; Jump to 88A
$A06    $A554   LD       I, $554         ; Load 554 into I
$A08    $870E   SHL      V7              ; V7 <<= 1, VF = MSB
$A0A    $5B61   UNKNOWN  $5B61           ; Unknown 5xxx instruction
$A0C    $DBCC   DRW      VB, VC, #C      ; Draw 12-byte sprite at VB, VC
$A0E    $3478   SE       V4, #78         ; Skip if V4 == 120
$A10    $26F1   CALL     $6F1            ; Call subroutine at 6F1
$A12    $2D25   CALL     $D25            ; Call subroutine at D25
$A14    $E8DB   UNKNOWN  $E8DB           ; Unknown Exxx instruction
$A16    $5558   UNKNOWN  $5558           ; Unknown 5xxx instruction
$A18    $EAFE   UNKNOWN  $EAFE           ; Unknown Exxx instruction
$A1A    $5CDF   UNKNOWN  $5CDF           ; Unknown 5xxx instruction
$A1C    $FE7A   UNKNOWN  FE7A            ; Unknown Fxxx instruction
$A1E    $7E84   ADD      VE, #84         ; Add 132 to VE
$A20    $F748   UNKNOWN  F748            ; Unknown Fxxx instruction
$A22    $2E1D   CALL     $E1D            ; Call subroutine at E1D
$A24    $D635   DRW      V6, V3, #5      ; Draw 5-byte sprite at V6, V3
$A26    $6F71   LD       VF, #71         ; Load 113 into VF
$A28    $FE07   LD       VE, DT          ; VE = delay timer
$A2A    $D327   DRW      V3, V2, #7      ; Draw 7-byte sprite at V3, V2
$A2C    $2965   CALL     $965            ; Call subroutine at 965
$A2E    $BD2B   JP       V0, $D2B        ; Jump to V0 + D2B
$A30    $438C   SNE      V3, #8C         ; Skip if V3 != 140
$A32    $E45A   UNKNOWN  $E45A           ; Unknown Exxx instruction
$A34    $C3C1   RND      V3, #C1         ; V3 = random & C1
$A36    $D8CA   DRW      V8, VC, #A      ; Draw 10-byte sprite at V8, VC
$A38    $6674   LD       V6, #74         ; Load 116 into V6
$A3A    $3A2F   SE       VA, #2F         ; Skip if VA == 47
$A3C    $6261   LD       V2, #61         ; Load 97 into V2
$A3E    $A15C   LD       I, $15C         ; Load 15C into I
$A40    $5DB6   UNKNOWN  $5DB6           ; Unknown 5xxx instruction
$A42    $E2FD   UNKNOWN  $E2FD           ; Unknown Exxx instruction
$A44    $E63A   UNKNOWN  $E63A           ; Unknown Exxx instruction
$A46    $9FF7   UNKNOWN  $9FF7           ; Unknown 9xxx instruction
$A48    $E7CC   UNKNOWN  $E7CC           ; Unknown Exxx instruction
$A4A    $7D9A   ADD      VD, #9A         ; Add 154 to VD
$A4C    $1C79   JP       $C79            ; Jump to C79
$A4E    $2FCD   CALL     $FCD            ; Call subroutine at FCD
$A50    $9B6D   UNKNOWN  $9B6D           ; Unknown 9xxx instruction
$A52    $6900   LD       V9, #00         ; Load 0 into V9
$A54    $72D2   ADD      V2, #D2         ; Add 210 to V2
$A56    $3501   SE       V5, #01         ; Skip if V5 == 1
$A58    $BBB0   JP       V0, $BB0        ; Jump to V0 + BB0
$A5A    $0B64   SYS      $B64            ; System call to B64
$A5C    $2114   CALL     $114            ; Call subroutine at 114
$A5E    $33D5   SE       V3, #D5         ; Skip if V3 == 213
$A60    $BE2B   JP       V0, $E2B        ; Jump to V0 + E2B
$A62    $01D2   SYS      $1D2            ; System call to 1D2
$A64    $DBB2   DRW      VB, VB, #2      ; Draw 2-byte sprite at VB, VB
$A66    $4216   SNE      V2, #16         ; Skip if V2 != 22
$A68    $51B7   UNKNOWN  $51B7           ; Unknown 5xxx instruction
$A6A    $DA3A   DRW      VA, V3, #A      ; Draw 10-byte sprite at VA, V3
$A6C    $BE81   JP       V0, $E81        ; Jump to V0 + E81
$A6E    $4071   SNE      V0, #71         ; Skip if V0 != 113
$A70    $F81C   UNKNOWN  F81C            ; Unknown Fxxx instruction
$A72    $097E   SYS      $97E            ; System call to 97E
$A74    $882C   UNKNOWN  882C            ; Unknown 8xxx instruction
$A76    $02C4   SYS      $2C4            ; System call to 2C4
$A78    $8D90   LD       VD, V9          ; VD = V9
$A7A    $A2F9   LD       I, $2F9         ; Load 2F9 into I
$A7C    $D83F   DRW      V8, V3, #F      ; Draw 15-byte sprite at V8, V3
$A7E    $992A   UNKNOWN  $992A           ; Unknown 9xxx instruction
$A80    $A0BD   LD       I, $0BD         ; Load 0BD into I
$A82    $D09A   DRW      V0, V9, #A      ; Draw 10-byte sprite at V0, V9
$A84    $47AF   SNE      V7, #AF         ; Skip if V7 != 175
$A86    $281C   CALL     $81C            ; Call subroutine at 81C
$A88    $D087   DRW      V0, V8, #7      ; Draw 7-byte sprite at V0, V8
$A8A    $44FE   SNE      V4, #FE         ; Skip if V4 != 254
$A8C    $DD09   DRW      VD, V0, #9      ; Draw 9-byte sprite at VD, V0
$A8E    $C904   RND      V9, #04         ; V9 = random & 04
$A90    $FB1D   UNKNOWN  FB1D            ; Unknown Fxxx instruction
$A92    $EDF7   UNKNOWN  $EDF7           ; Unknown Exxx instruction
$A94    $1A06   JP       $A06            ; Jump to A06
$A96    $B15B   JP       V0, $15B        ; Jump to V0 + 15B
$A98    $BF9E   JP       V0, $F9E        ; Jump to V0 + F9E
$A9A    $2192   CALL     $192            ; Call subroutine at 192
$A9C    $7D01   ADD      VD, #01         ; Add 1 to VD
$A9E    $4882   SNE      V8, #82         ; Skip if V8 != 130
$AA0    $5B5E   UNKNOWN  $5B5E           ; Unknown 5xxx instruction
$AA2    $9522   UNKNOWN  $9522           ; Unknown 9xxx instruction
$AA4    $BB73   JP       V0, $B73        ; Jump to V0 + B73
$AA6    $38DC   SE       V8, #DC         ; Skip if V8 == 220
$AA8    $CF90   RND      VF, #90         ; VF = random & 90
$AAA    $0871   SYS      $871            ; System call to 871
$AAC    $A85F   LD       I, $85F         ; Load 85F into I
$AAE    $7FA6   ADD      VF, #A6         ; Add 166 to VF
$AB0    $7818   ADD      V8, #18         ; Add 24 to V8
$AB2    $A624   LD       I, $624         ; Load 624 into I
$AB4    $8EBD   UNKNOWN  8EBD            ; Unknown 8xxx instruction
$AB6    $F018   LD       ST, V0          ; Sound timer = V0
$AB8    $ACDA   LD       I, $CDA         ; Load CDA into I
$ABA    $F305   UNKNOWN  F305            ; Unknown Fxxx instruction
$ABC    $D2A5   DRW      V2, VA, #5      ; Draw 5-byte sprite at V2, VA
$ABE    $136C   JP       $36C            ; Jump to 36C
$AC0    $CEAE   RND      VE, #AE         ; VE = random & AE
$AC2    $5FBC   UNKNOWN  $5FBC           ; Unknown 5xxx instruction
$AC4    $CF82   RND      VF, #82         ; VF = random & 82
$AC6    $1E0E   JP       $E0E            ; Jump to E0E
$AC8    $5410   SE       V4, V1          ; Skip if V4 == V1
$ACA    $3409   SE       V4, #09         ; Skip if V4 == 9
$ACC    $E5D7   UNKNOWN  $E5D7           ; Unknown Exxx instruction
$ACE    $B9A1   JP       V0, $9A1        ; Jump to V0 + 9A1
$AD0    $0ECF   SYS      $ECF            ; System call to ECF
$AD2    $8643   XOR      V6, V4          ; V6 ^= V4
$AD4    $F535   UNKNOWN  F535            ; Unknown Fxxx instruction
$AD6    $2D84   CALL     $D84            ; Call subroutine at D84
$AD8    $2C15   CALL     $C15            ; Call subroutine at C15
$ADA    $F869   UNKNOWN  F869            ; Unknown Fxxx instruction
$ADC    $4D6A   SNE      VD, #6A         ; Skip if VD != 106
$ADE    $636C   LD       V3, #6C         ; Load 108 into V3
$AE0    $956D   UNKNOWN  $956D           ; Unknown 9xxx instruction
$AE2    $7BF7   ADD      VB, #F7         ; Add 247 to VB
$AE4    $A57D   LD       I, $57D         ; Load 57D into I
$AE6    $92FC   UNKNOWN  $92FC           ; Unknown 9xxx instruction
$AE8    $A941   LD       I, $941         ; Load 941 into I
$AEA    $5546   UNKNOWN  $5546           ; Unknown 5xxx instruction
$AEC    $6BE1   LD       VB, #E1         ; Load 225 into VB
$AEE    $35FC   SE       V5, #FC         ; Skip if V5 == 252
$AF0    $C775   RND      V7, #75         ; V7 = random & 75
$AF2    $FF17   UNKNOWN  FF17            ; Unknown Fxxx instruction
$AF4    $9634   UNKNOWN  $9634           ; Unknown 9xxx instruction
$AF6    $AE35   LD       I, $E35         ; Load E35 into I
$AF8    $FCE0   UNKNOWN  FCE0            ; Unknown Fxxx instruction
$AFA    $52F4   UNKNOWN  $52F4           ; Unknown 5xxx instruction
$AFC    $B697   JP       V0, $697        ; Jump to V0 + 697
$AFE    $8C72   AND      VC, V7          ; VC &= V7
$B00    $DFA0   DRW      VF, VA, #0      ; Draw 0-byte sprite at VF, VA
$B02    $745E   ADD      V4, #5E         ; Add 94 to V4
$B04    $7595   ADD      V5, #95         ; Add 149 to V5
$B06    $CB6F   RND      VB, #6F         ; VB = random & 6F
$B08    $CC90   RND      VC, #90         ; VC = random & 90
$B0A    $5A98   UNKNOWN  $5A98           ; Unknown 5xxx instruction
$B0C    $C413   RND      V4, #13         ; V4 = random & 13
$B0E    $27ED   CALL     $7ED            ; Call subroutine at 7ED
$B10    $BABC   JP       V0, $ABC        ; Jump to V0 + ABC
$B12    $AD05   LD       I, $D05         ; Load D05 into I
$B14    $4C79   SNE      VC, #79         ; Skip if VC != 121
$B16    $9FF9   UNKNOWN  $9FF9           ; Unknown 9xxx instruction
$B18    $24E7   CALL     $4E7            ; Call subroutine at 4E7
$B1A    $0159   SYS      $159            ; System call to 159
$B1C    $04B5   SYS      $4B5            ; System call to 4B5
$B1E    $F868   UNKNOWN  F868            ; Unknown Fxxx instruction
$B20    $8F22   AND      VF, V2          ; VF &= V2
$B22    $2A52   CALL     $A52            ; Call subroutine at A52
$B24    $819E   SHL      V1              ; V1 <<= 1, VF = MSB
$B26    $0EB8   SYS      $EB8            ; System call to EB8
$B28    $58C0   SE       V8, VC          ; Skip if V8 == VC
$B2A    $BD67   JP       V0, $D67        ; Jump to V0 + D67
$B2C    $EE2F   UNKNOWN  $EE2F           ; Unknown Exxx instruction
$B2E    $635A   LD       V3, #5A         ; Load 90 into V3
$B30    $45DB   SNE      V5, #DB         ; Skip if V5 != 219
$B32    $FF23   UNKNOWN  FF23            ; Unknown Fxxx instruction
$B34    $C226   RND      V2, #26         ; V2 = random & 26
$B36    $3664   SE       V6, #64         ; Skip if V6 == 100
$B38    $2A41   CALL     $A41            ; Call subroutine at A41
$B3A    $8565   SUB      V5, V6          ; V5 -= V6, VF = !borrow
$B3C    $480B   SNE      V8, #0B         ; Skip if V8 != 11
$B3E    $8A47   SUBN     VA, V4          ; VA = V4 - VA, VF = !borrow
$B40    $B70E   JP       V0, $70E        ; Jump to V0 + 70E
$B42    $DA43   DRW      VA, V4, #3      ; Draw 3-byte sprite at VA, V4
$B44    $3318   SE       V3, #18         ; Skip if V3 == 24
$B46    $3DA9   SE       VD, #A9         ; Skip if VD == 169
$B48    $D9E3   DRW      V9, VE, #3      ; Draw 3-byte sprite at V9, VE
$B4A    $65E4   LD       V5, #E4         ; Load 228 into V5
$B4C    $ADD5   LD       I, $DD5         ; Load DD5 into I
$B4E    $71F9   ADD      V1, #F9         ; Add 249 to V1
$B50    $7532   ADD      V5, #32         ; Add 50 to V5
$B52    $20FA   CALL     $0FA            ; Call subroutine at 0FA
$B54    $276A   CALL     $76A            ; Call subroutine at 76A
$B56    $04C4   SYS      $4C4            ; System call to 4C4
$B58    $71E5   ADD      V1, #E5         ; Add 229 to V1
$B5A    $0FD8   SYS      $FD8            ; System call to FD8
$B5C    $29E0   CALL     $9E0            ; Call subroutine at 9E0
$B5E    $3DE9   SE       VD, #E9         ; Skip if VD == 233
$B60    $7052   ADD      V0, #52         ; Add 82 to V0
$B62    $81A9   UNKNOWN  81A9            ; Unknown 8xxx instruction
$B64    $AD87   LD       I, $D87         ; Load D87 into I
$B66    $2115   CALL     $115            ; Call subroutine at 115
$B68    $D3B5   DRW      V3, VB, #5      ; Draw 5-byte sprite at V3, VB
$B6A    $8349   UNKNOWN  8349            ; Unknown 8xxx instruction
$B6C    $DEC0   DRW      VE, VC, #0      ; Draw 0-byte sprite at VE, VC
$B6E    $05C8   SYS      $5C8            ; System call to 5C8
$B70    $F64A   UNKNOWN  F64A            ; Unknown Fxxx instruction
$B72    $D23E   DRW      V2, V3, #E      ; Draw 14-byte sprite at V2, V3
$B74    $DC93   DRW      VC, V9, #3      ; Draw 3-byte sprite at VC, V9
$B76    $2094   CALL     $094            ; Call subroutine at 094
$B78    $022F   SYS      $22F            ; System call to 22F
$B7A    $566A   UNKNOWN  $566A           ; Unknown 5xxx instruction
$B7C    $F1BB   UNKNOWN  F1BB            ; Unknown Fxxx instruction
$B7E    $3008   SE       V0, #08         ; Skip if V0 == 8
$B80    $733D   ADD      V3, #3D         ; Add 61 to V3
$B82    $7592   ADD      V5, #92         ; Add 146 to V5
$B84    $3398   SE       V3, #98         ; Skip if V3 == 152
$B86    $6B79   LD       VB, #79         ; Load 121 into VB
$B88    $EF12   UNKNOWN  $EF12           ; Unknown Exxx instruction
$B8A    $B0AC   JP       V0, $0AC        ; Jump to V0 + 0AC
$B8C    $B7A4   JP       V0, $7A4        ; Jump to V0 + 7A4
$B8E    $BCB6   JP       V0, $CB6        ; Jump to V0 + CB6
$B90    $0688   SYS      $688            ; System call to 688
$B92    $531C   UNKNOWN  $531C           ; Unknown 5xxx instruction
$B94    $65AF   LD       V5, #AF         ; Load 175 into V5
$B96    $6C74   LD       VC, #74         ; Load 116 into VC
$B98    $EAAA   UNKNOWN  $EAAA           ; Unknown Exxx instruction
$B9A    $EF47   UNKNOWN  $EF47           ; Unknown Exxx instruction
$B9C    $526C   UNKNOWN  $526C           ; Unknown 5xxx instruction
$B9E    $16A9   JP       $6A9            ; Jump to 6A9
$BA0    $31D6   SE       V1, #D6         ; Skip if V1 == 214
$BA2    $1372   JP       $372            ; Jump to 372
$BA4    $F60E   UNKNOWN  F60E            ; Unknown Fxxx instruction
$BA6    $8609   UNKNOWN  8609            ; Unknown 8xxx instruction
$BA8    $03CA   SYS      $3CA            ; System call to 3CA
$BAA    $914F   UNKNOWN  $914F           ; Unknown 9xxx instruction
$BAC    $0D74   SYS      $D74            ; System call to D74
$BAE    $E955   UNKNOWN  $E955           ; Unknown Exxx instruction
$BB0    $9704   UNKNOWN  $9704           ; Unknown 9xxx instruction
$BB2    $2EE6   CALL     $EE6            ; Call subroutine at EE6
$BB4    $EA16   UNKNOWN  $EA16           ; Unknown Exxx instruction
$BB6    $EB11   UNKNOWN  $EB11           ; Unknown Exxx instruction
$BB8    $C622   RND      V6, #22         ; V6 = random & 22
$BBA    $67B0   LD       V7, #B0         ; Load 176 into V7
$BBC    $F6F0   UNKNOWN  F6F0            ; Unknown Fxxx instruction
$BBE    $C325   RND      V3, #25         ; V3 = random & 25
$BC0    $88F4   ADD      V8, VF          ; V8 += VF, VF = carry
$BC2    $B107   JP       V0, $107        ; Jump to V0 + 107
$BC4    $0B9F   SYS      $B9F            ; System call to B9F
$BC6    $0BAE   SYS      $BAE            ; System call to BAE
$BC8    $5EBC   UNKNOWN  $5EBC           ; Unknown 5xxx instruction
$BCA    $FFCE   UNKNOWN  FFCE            ; Unknown Fxxx instruction
$BCC    $3064   SE       V0, #64         ; Skip if V0 == 100
$BCE    $453E   SNE      V5, #3E         ; Skip if V5 != 62
$BD0    $BA9E   JP       V0, $A9E        ; Jump to V0 + A9E
$BD2    $6360   LD       V3, #60         ; Load 96 into V3
$BD4    $7977   ADD      V9, #77         ; Add 119 to V9
$BD6    $01FF   SYS      $1FF            ; System call to 1FF
$BD8    $820D   UNKNOWN  820D            ; Unknown 8xxx instruction
$BDA    $9389   UNKNOWN  $9389           ; Unknown 9xxx instruction
$BDC    $5781   UNKNOWN  $5781           ; Unknown 5xxx instruction
$BDE    $F584   UNKNOWN  F584            ; Unknown Fxxx instruction
$BE0    $5C4B   UNKNOWN  $5C4B           ; Unknown 5xxx instruction
$BE2    $4FFC   SNE      VF, #FC         ; Skip if VF != 252
$BE4    $467C   SNE      V6, #7C         ; Skip if V6 != 124
$BE6    $A3F9   LD       I, $3F9         ; Load 3F9 into I
$BE8    $D8C5   DRW      V8, VC, #5      ; Draw 5-byte sprite at V8, VC
$BEA    $921C   UNKNOWN  $921C           ; Unknown 9xxx instruction
$BEC    $3670   SE       V6, #70         ; Skip if V6 == 112
$BEE    $7B9C   ADD      VB, #9C         ; Add 156 to VB
$BF0    $008B   SYS      $08B            ; System call to 08B
$BF2    $B5B7   JP       V0, $5B7        ; Jump to V0 + 5B7
$BF4    $A44E   LD       I, $44E         ; Load 44E into I
$BF6    $C006   RND      V0, #06         ; V0 = random & 06
$BF8    $4D85   SNE      VD, #85         ; Skip if VD != 133
$BFA    $6D0B   LD       VD, #0B         ; Load 11 into VD
$BFC    $5EB2   UNKNOWN  $5EB2           ; Unknown 5xxx instruction
$BFE    $10B4   JP       $0B4            ; Jump to 0B4
$C00    $0A73   SYS      $A73            ; System call to A73
$C02    $18D5   JP       $8D5            ; Jump to 8D5
$C04    $4A43   SNE      VA, #43         ; Skip if VA != 67
$C06    $692F   LD       V9, #2F         ; Load 47 into V9
$C08    $8824   ADD      V8, V2          ; V8 += V2, VF = carry
$C0A    $ADCF   LD       I, $DCF         ; Load DCF into I
$C0C    $F0BC   UNKNOWN  F0BC            ; Unknown Fxxx instruction
$C0E    $65A4   LD       V5, #A4         ; Load 164 into V5
$C10    $85F2   AND      V5, VF          ; V5 &= VF
$C12    $0F3A   SYS      $F3A            ; System call to F3A
$C14    $6BE9   LD       VB, #E9         ; Load 233 into VB
$C16    $8F65   SUB      VF, V6          ; VF -= V6, VF = !borrow
$C18    $9ACD   UNKNOWN  $9ACD           ; Unknown 9xxx instruction
$C1A    $CCDF   RND      VC, #DF         ; VC = random & DF
$C1C    $3BBE   SE       VB, #BE         ; Skip if VB == 190
$C1E    $B637   JP       V0, $637        ; Jump to V0 + 637
$C20    $52D1   UNKNOWN  $52D1           ; Unknown 5xxx instruction
$C22    $D92E   DRW      V9, V2, #E      ; Draw 14-byte sprite at V9, V2
$C24    $65AF   LD       V5, #AF         ; Load 175 into V5
$C26    $673F   LD       V7, #3F         ; Load 63 into V7
$C28    $1584   JP       $584            ; Jump to 584
$C2A    $CB9F   RND      VB, #9F         ; VB = random & 9F
$C2C    $9FFF   UNKNOWN  $9FFF           ; Unknown 9xxx instruction
$C2E    $0804   SYS      $804            ; System call to 804
$C30    $0AE8   SYS      $AE8            ; System call to AE8
$C32    $6E29   LD       VE, #29         ; Load 41 into VE
$C34    $8F0D   UNKNOWN  8F0D            ; Unknown 8xxx instruction
$C36    $CA2C   RND      VA, #2C         ; VA = random & 2C
$C38    $C141   RND      V1, #41         ; V1 = random & 41
$C3A    $1D38   JP       $D38            ; Jump to D38
$C3C    $12FD   JP       $2FD            ; Jump to 2FD
$C3E    $7B01   ADD      VB, #01         ; Add 1 to VB
$C40    $74E5   ADD      V4, #E5         ; Add 229 to V4
$C42    $0B4F   SYS      $B4F            ; System call to B4F
$C44    $802A   UNKNOWN  802A            ; Unknown 8xxx instruction
$C46    $6AEF   LD       VA, #EF         ; Load 239 into VA
$C48    $679C   LD       V7, #9C         ; Load 156 into V7
$C4A    $2FE8   CALL     $FE8            ; Call subroutine at FE8
$C4C    $542A   UNKNOWN  $542A           ; Unknown 5xxx instruction
$C4E    $8F0A   UNKNOWN  8F0A            ; Unknown 8xxx instruction
$C50    $14B3   JP       $4B3            ; Jump to 4B3
$C52    $F1D5   UNKNOWN  F1D5            ; Unknown Fxxx instruction
$C54    $0D22   SYS      $D22            ; System call to D22
$C56    $CB1B   RND      VB, #1B         ; VB = random & 1B
$C58    $E8F8   UNKNOWN  $E8F8           ; Unknown Exxx instruction
$C5A    $143B   JP       $43B            ; Jump to 43B
$C5C    $B32F   JP       V0, $32F        ; Jump to V0 + 32F
$C5E    $5284   UNKNOWN  $5284           ; Unknown 5xxx instruction
$C60    $CD21   RND      VD, #21         ; VD = random & 21
$C62    $5C41   UNKNOWN  $5C41           ; Unknown 5xxx instruction
$C64    $7140   ADD      V1, #40         ; Add 64 to V1
$C66    $919B   UNKNOWN  $919B           ; Unknown 9xxx instruction
$C68    $D3CE   DRW      V3, VC, #E      ; Draw 14-byte sprite at V3, VC
$C6A    $549D   UNKNOWN  $549D           ; Unknown 5xxx instruction
$C6C    $0F45   SYS      $F45            ; System call to F45
$C6E    $FACE   UNKNOWN  FACE            ; Unknown Fxxx instruction
$C70    $B84B   JP       V0, $84B        ; Jump to V0 + 84B
$C72    $9DBC   UNKNOWN  $9DBC           ; Unknown 9xxx instruction
$C74    $02CD   SYS      $2CD            ; System call to 2CD
$C76    $E2E1   UNKNOWN  $E2E1           ; Unknown Exxx instruction
$C78    $241C   CALL     $41C            ; Call subroutine at 41C
$C7A    $F032   UNKNOWN  F032            ; Unknown Fxxx instruction
$C7C    $B128   JP       V0, $128        ; Jump to V0 + 128
$C7E    $3F3D   SE       VF, #3D         ; Skip if VF == 61
$C80    $60B1   LD       V0, #B1         ; Load 177 into V0
$C82    $AD52   LD       I, $D52         ; Load D52 into I
$C84    $B46E   JP       V0, $46E        ; Jump to V0 + 46E
$C86    $7D99   ADD      VD, #99         ; Add 153 to VD
$C88    $8BC4   ADD      VB, VC          ; VB += VC, VF = carry
$C8A    $1933   JP       $933            ; Jump to 933
$C8C    $37CC   SE       V7, #CC         ; Skip if V7 == 204
$C8E    $B73C   JP       V0, $73C        ; Jump to V0 + 73C
$C90    $B87B   JP       V0, $87B        ; Jump to V0 + 87B
$C92    $B2B6   JP       V0, $2B6        ; Jump to V0 + 2B6
$C94    $B3E7   JP       V0, $3E7        ; Jump to V0 + 3E7
$C96    $6F2E   LD       VF, #2E         ; Load 46 into VF
$C98    $1557   JP       $557            ; Jump to 557
$C9A    $CB12   RND      VB, #12         ; VB = random & 12
$C9C    $DAB8   DRW      VA, VB, #8      ; Draw 8-byte sprite at VA, VB
$C9E    $A266   LD       I, $266         ; Load 266 into I
$CA0    $85E0   LD       V5, VE          ; V5 = VE
$CA2    $8844   ADD      V8, V4          ; V8 += V4, VF = carry
$CA4    $C97D   RND      V9, #7D         ; V9 = random & 7D
$CA6    $2B39   CALL     $B39            ; Call subroutine at B39
$CA8    $20CB   CALL     $0CB            ; Call subroutine at 0CB
$CAA    $A209   LD       I, $209         ; Load 209 into I
$CAC    $48CC   SNE      V8, #CC         ; Skip if V8 != 204
$CAE    $8599   UNKNOWN  8599            ; Unknown 8xxx instruction
$CB0    $F6B9   UNKNOWN  F6B9            ; Unknown Fxxx instruction
$CB2    $A874   LD       I, $874         ; Load 874 into I
$CB4    $1C6D   JP       $C6D            ; Jump to C6D
$CB6    $0121   SYS      $121            ; System call to 121
$CB8    $265F   CALL     $65F            ; Call subroutine at 65F
$CBA    $D459   DRW      V4, V5, #9      ; Draw 9-byte sprite at V4, V5
$CBC    $C9EF   RND      V9, #EF         ; V9 = random & EF
$CBE    $5F4E   UNKNOWN  $5F4E           ; Unknown 5xxx instruction
$CC0    $EA54   UNKNOWN  $EA54           ; Unknown Exxx instruction
$CC2    $9BE0   SNE      VB, VE          ; Skip if VB != VE
$CC4    $CF76   RND      VF, #76         ; VF = random & 76
$CC6    $14DE   JP       $4DE            ; Jump to 4DE
$CC8    $1BBE   JP       $BBE            ; Jump to BBE
$CCA    $145F   JP       $45F            ; Jump to 45F
$CCC    $D00E   DRW      V0, V0, #E      ; Draw 14-byte sprite at V0, V0
$CCE    $912E   UNKNOWN  $912E           ; Unknown 9xxx instruction
$CD0    $63A6   LD       V3, #A6         ; Load 166 into V3
$CD2    $2398   CALL     $398            ; Call subroutine at 398
$CD4    $11EB   JP       $1EB            ; Jump to 1EB
$CD6    $8E0B   UNKNOWN  8E0B            ; Unknown 8xxx instruction
$CD8    $21A7   CALL     $1A7            ; Call subroutine at 1A7
$CDA    $9733   UNKNOWN  $9733           ; Unknown 9xxx instruction
$CDC    $E5E0   UNKNOWN  $E5E0           ; Unknown Exxx instruction
$CDE    $76AC   ADD      V6, #AC         ; Add 172 to V6
$CE0    $0C11   SYS      $C11            ; System call to C11
$CE2    $AB80   LD       I, $B80         ; Load B80 into I
$CE4    $C65E   RND      V6, #5E         ; V6 = random & 5E
$CE6    $8DF6   SHR      VD              ; VD >>= 1, VF = LSB
$CE8    $249F   CALL     $49F            ; Call subroutine at 49F
$CEA    $9109   UNKNOWN  $9109           ; Unknown 9xxx instruction
$CEC    $9B9C   UNKNOWN  $9B9C           ; Unknown 9xxx instruction
$CEE    $BB34   JP       V0, $B34        ; Jump to V0 + B34
$CF0    $1F1C   JP       $F1C            ; Jump to F1C
$CF2    $D7ED   DRW      V7, VE, #D      ; Draw 13-byte sprite at V7, VE
$CF4    $BD81   JP       V0, $D81        ; Jump to V0 + D81
$CF6    $BE4A   JP       V0, $E4A        ; Jump to V0 + E4A
$CF8    $3C43   SE       VC, #43         ; Skip if VC == 67
$CFA    $15DD   JP       $5DD            ; Jump to 5DD
$CFC    $CF78   RND      VF, #78         ; VF = random & 78
$CFE    $908D   UNKNOWN  $908D           ; Unknown 9xxx instruction
$D00    $CBE8   RND      VB, #E8         ; VB = random & E8
$D02    $CDDB   RND      VD, #DB         ; VD = random & DB
$D04    $FB7C   UNKNOWN  FB7C            ; Unknown Fxxx instruction
$D06    $E2BC   UNKNOWN  $E2BC           ; Unknown Exxx instruction
$D08    $1013   JP       $013            ; Jump to 013
$D0A    $1730   JP       $730            ; Jump to 730
$D0C    $1A26   JP       $A26            ; Jump to A26
$D0E    $260B   CALL     $60B            ; Call subroutine at 60B
$D10    $A37F   LD       I, $37F         ; Load 37F into I
$D12    $2D55   CALL     $D55            ; Call subroutine at D55
$D14    $E76B   UNKNOWN  $E76B           ; Unknown Exxx instruction
$D16    $6C1F   LD       VC, #1F         ; Load 31 into VC
$D18    $B9AD   JP       V0, $9AD        ; Jump to V0 + 9AD
$D1A    $7A11   ADD      VA, #11         ; Add 17 to VA
$D1C    $55A0   SE       V5, VA          ; Skip if V5 == VA
$D1E    $CF10   RND      VF, #10         ; VF = random & 10
$D20    $29D6   CALL     $9D6            ; Call subroutine at 9D6
$D22    $CD1F   RND      VD, #1F         ; VD = random & 1F
$D24    $15C3   JP       $5C3            ; Jump to 5C3
$D26    $9D60   SNE      VD, V6          ; Skip if VD != V6
$D28    $87E6   SHR      V7              ; V7 >>= 1, VF = LSB
$D2A    $12E7   JP       $2E7            ; Jump to 2E7
$D2C    $5BA7   UNKNOWN  $5BA7           ; Unknown 5xxx instruction
$D2E    $8314   ADD      V3, V1          ; V3 += V1, VF = carry
$D30    $C716   RND      V7, #16         ; V7 = random & 16
$D32    $AA19   LD       I, $A19         ; Load A19 into I
$D34    $BF6A   JP       V0, $F6A        ; Jump to V0 + F6A
$D36    $B075   JP       V0, $075        ; Jump to V0 + 075
$D38    $AED9   LD       I, $ED9         ; Load ED9 into I
$D3A    $E811   UNKNOWN  $E811           ; Unknown Exxx instruction
$D3C    $A407   LD       I, $407         ; Load 407 into I
$D3E    $FA4F   UNKNOWN  FA4F            ; Unknown Fxxx instruction
$D40    $E8BD   UNKNOWN  $E8BD           ; Unknown Exxx instruction
$D42    $811B   UNKNOWN  811B            ; Unknown 8xxx instruction
$D44    $3121   SE       V1, #21         ; Skip if V1 == 33
$D46    $4036   SNE      V0, #36         ; Skip if V0 != 54
$D48    $144A   JP       $44A            ; Jump to 44A
$D4A    $7E0D   ADD      VE, #0D         ; Add 13 to VE
$D4C    $B1DF   JP       V0, $1DF        ; Jump to V0 + 1DF
$D4E    $B68A   JP       V0, $68A        ; Jump to V0 + 68A
$D50    $502F   UNKNOWN  $502F           ; Unknown 5xxx instruction
$D52    $3458   SE       V4, #58         ; Skip if V4 == 88
$D54    $CDF0   RND      VD, #F0         ; VD = random & F0
$D56    $DA0A   DRW      VA, V0, #A      ; Draw 10-byte sprite at VA, V0
$D58    $6D34   LD       VD, #34         ; Load 52 into VD
$D5A    $CF84   RND      VF, #84         ; VF = random & 84
$D5C    $5E9B   UNKNOWN  $5E9B           ; Unknown 5xxx instruction
$D5E    $3511   SE       V5, #11         ; Skip if V5 == 17
$D60    $BE23   JP       V0, $E23        ; Jump to V0 + E23
$D62    $B90E   JP       V0, $90E        ; Jump to V0 + 90E
$D64    $4615   SNE      V6, #15         ; Skip if V6 != 21
$D66    $001B   SYS      $01B            ; System call to 01B
$D68    $9F2D   UNKNOWN  $9F2D           ; Unknown 9xxx instruction
$D6A    $C7ED   RND      V7, #ED         ; V7 = random & ED
$D6C    $F959   UNKNOWN  F959            ; Unknown Fxxx instruction
$D6E    $4037   SNE      V0, #37         ; Skip if V0 != 55
$D70    $5B20   SE       VB, V2          ; Skip if VB == V2
$D72    $6F30   LD       VF, #30         ; Load 48 into VF
$D74    $F653   UNKNOWN  F653            ; Unknown Fxxx instruction
$D76    $8969   UNKNOWN  8969            ; Unknown 8xxx instruction
$D78    $5B74   UNKNOWN  $5B74           ; Unknown 5xxx instruction
$D7A    $CB99   RND      VB, #99         ; VB = random & 99
$D7C    $6B4E   LD       VB, #4E         ; Load 78 into VB
$D7E    $C3A6   RND      V3, #A6         ; V3 = random & A6
$D80    $7A90   ADD      VA, #90         ; Add 144 to VA
$D82    $4A33   SNE      VA, #33         ; Skip if VA != 51
$D84    $E796   UNKNOWN  $E796           ; Unknown Exxx instruction
$D86    $B3F6   JP       V0, $3F6        ; Jump to V0 + 3F6
$D88    $8B17   SUBN     VB, V1          ; VB = V1 - VB, VF = !borrow
$D8A    $889E   SHL      V8              ; V8 <<= 1, VF = MSB
$D8C    $0231   SYS      $231            ; System call to 231
$D8E    $0F04   SYS      $F04            ; System call to F04
$D90    $82BB   UNKNOWN  82BB            ; Unknown 8xxx instruction
$D92    $7DF4   ADD      VD, #F4         ; Add 244 to VD
$D94    $38F8   SE       V8, #F8         ; Skip if V8 == 248
$D96    $EE72   UNKNOWN  $EE72           ; Unknown Exxx instruction
$D98    $1812   JP       $812            ; Jump to 812
$D9A    $C85B   RND      V8, #5B         ; V8 = random & 5B
$D9C    $A2B2   LD       I, $2B2         ; Load 2B2 into I
$D9E    $1907   JP       $907            ; Jump to 907
$DA0    $65A7   LD       V5, #A7         ; Load 167 into V5
$DA2    $B020   JP       V0, $020        ; Jump to V0 + 020
$DA4    $7871   ADD      V8, #71         ; Add 113 to V8
$DA6    $8DA0   LD       VD, VA          ; VD = VA
$DA8    $39A2   SE       V9, #A2         ; Skip if V9 == 162
$DAA    $285E   CALL     $85E            ; Call subroutine at 85E
$DAC    $4705   SNE      V7, #05         ; Skip if V7 != 5
$DAE    $B373   JP       V0, $373        ; Jump to V0 + 373
$DB0    $52EF   UNKNOWN  $52EF           ; Unknown 5xxx instruction
$DB2    $2E8F   CALL     $E8F            ; Call subroutine at E8F
$DB4    $147A   JP       $47A            ; Jump to 47A
$DB6    $CB3A   RND      VB, #3A         ; VB = random & 3A
$DB8    $1473   JP       $473            ; Jump to 473
$DBA    $F26E   UNKNOWN  F26E            ; Unknown Fxxx instruction
$DBC    $40BD   SNE      V0, #BD         ; Skip if V0 != 189
$DBE    $8DB7   SUBN     VD, VB          ; VD = VB - VD, VF = !borrow
$DC0    $7DF3   ADD      VD, #F3         ; Add 243 to VD
$DC2    $7CD8   ADD      VC, #D8         ; Add 216 to VC
$DC4    $7FD5   ADD      VF, #D5         ; Add 213 to VF
$DC6    $83DA   UNKNOWN  83DA            ; Unknown 8xxx instruction
$DC8    $46F0   SNE      V6, #F0         ; Skip if V6 != 240
$DCA    $8093   XOR      V0, V9          ; V0 ^= V9
$DCC    $61B8   LD       V1, #B8         ; Load 184 into V1
$DCE    $C354   RND      V3, #54         ; V3 = random & 54
$DD0    $DEE7   DRW      VE, VE, #7      ; Draw 7-byte sprite at VE, VE
$DD2    $D50B   DRW      V5, V0, #B      ; Draw 11-byte sprite at V5, V0
$DD4    $D3A2   DRW      V3, VA, #2      ; Draw 2-byte sprite at V3, VA
$DD6    $878B   UNKNOWN  878B            ; Unknown 8xxx instruction
$DD8    $95DE   UNKNOWN  $95DE           ; Unknown 9xxx instruction
$DDA    $8E07   SUBN     VE, V0          ; VE = V0 - VE, VF = !borrow
$DDC    $226E   CALL     $26E            ; Call subroutine at 26E
$DDE    $8DD1   OR       VD, VD          ; VD |= VD
$DE0    $7DA9   ADD      VD, #A9         ; Add 169 to VD
$DE2    $A838   LD       I, $838         ; Load 838 into I
$DE4    $5B21   UNKNOWN  $5B21           ; Unknown 5xxx instruction
$DE6    $EABF   UNKNOWN  $EABF           ; Unknown Exxx instruction
$DE8    $DBEB   DRW      VB, VE, #B      ; Draw 11-byte sprite at VB, VE
$DEA    $3429   SE       V4, #29         ; Skip if V4 == 41
$DEC    $C0BB   RND      V0, #BB         ; V0 = random & BB
$DEE    $9A3A   UNKNOWN  $9A3A           ; Unknown 9xxx instruction
$DF0    $F4E6   UNKNOWN  F4E6            ; Unknown Fxxx instruction
$DF2    $B8ED   JP       V0, $8ED        ; Jump to V0 + 8ED
$DF4    $9420   SNE      V4, V2          ; Skip if V4 != V2
$DF6    $1240   JP       $240            ; Jump to 240
$DF8    $C918   RND      V9, #18         ; V9 = random & 18
$DFA    $B5AB   JP       V0, $5AB        ; Jump to V0 + 5AB
$DFC    $2072   CALL     $072            ; Call subroutine at 072
$DFE    $0D6C   SYS      $D6C            ; System call to D6C
$E00    $E369   UNKNOWN  $E369           ; Unknown Exxx instruction
$E02    $A6F1   LD       I, $6F1         ; Load 6F1 into I
$E04    $BF63   JP       V0, $F63        ; Jump to V0 + F63
$E06    $F766   UNKNOWN  F766            ; Unknown Fxxx instruction
$E08    $4571   SNE      V5, #71         ; Skip if V5 != 113
$E0A    $687F   LD       V8, #7F         ; Load 127 into V8
$E0C    $6138   LD       V1, #38         ; Load 56 into V1
$E0E    $0743   SYS      $743            ; System call to 743
$E10    $E69B   UNKNOWN  $E69B           ; Unknown Exxx instruction
$E12    $B078   JP       V0, $078        ; Jump to V0 + 078
$E14    $25D8   CALL     $5D8            ; Call subroutine at 5D8
$E16    $9545   UNKNOWN  $9545           ; Unknown 9xxx instruction
$E18    $D3AF   DRW      V3, VA, #F      ; Draw 15-byte sprite at V3, VA
$E1A    $A46F   LD       I, $46F         ; Load 46F into I
$E1C    $FA6E   UNKNOWN  FA6E            ; Unknown Fxxx instruction
$E1E    $BD37   JP       V0, $D37        ; Jump to V0 + D37
$E20    $77A9   ADD      V7, #A9         ; Add 169 to V7
$E22    $003A   SYS      $03A            ; System call to 03A
$E24    $0DCB   SYS      $DCB            ; System call to DCB
$E26    $5B97   UNKNOWN  $5B97           ; Unknown 5xxx instruction
$E28    $B04F   JP       V0, $04F        ; Jump to V0 + 04F
$E2A    $3F1C   SE       VF, #1C         ; Skip if VF == 28
$E2C    $B562   JP       V0, $562        ; Jump to V0 + 562
$E2E    $88DB   UNKNOWN  88DB            ; Unknown 8xxx instruction
$E30    $B226   JP       V0, $226        ; Jump to V0 + 226
$E32    $D297   DRW      V2, V9, #7      ; Draw 7-byte sprite at V2, V9
$E34    $4F55   SNE      VF, #55         ; Skip if VF != 85
$E36    $AD62   LD       I, $D62         ; Load D62 into I
$E38    $6BFE   LD       VB, #FE         ; Load 254 into VB
$E3A    $BE21   JP       V0, $E21        ; Jump to V0 + E21
$E3C    $4A10   SNE      VA, #10         ; Skip if VA != 16
$E3E    $3C1F   SE       VC, #1F         ; Skip if VC == 31
$E40    $9325   UNKNOWN  $9325           ; Unknown 9xxx instruction
$E42    $7AB0   ADD      VA, #B0         ; Add 176 to VA
$E44    $7F78   ADD      VF, #78         ; Add 120 to VF
$E46    $4052   SNE      V0, #52         ; Skip if V0 != 82
$E48    $737B   ADD      V3, #7B         ; Add 123 to V3
$E4A    $ABBD   LD       I, $BBD         ; Load BBD into I
$E4C    $4D46   SNE      VD, #46         ; Skip if VD != 70
$E4E    $77DE   ADD      V7, #DE         ; Add 222 to V7
$E50    $1606   JP       $606            ; Jump to 606
$E52    $D1C8   DRW      V1, VC, #8      ; Draw 8-byte sprite at V1, VC
$E54    $2D26   CALL     $D26            ; Call subroutine at D26
$E56    $4E6A   SNE      VE, #6A         ; Skip if VE != 106
$E58    $BD8A   JP       V0, $D8A        ; Jump to V0 + D8A
$E5A    $AB57   LD       I, $B57         ; Load B57 into I
$E5C    $CBB5   RND      VB, #B5         ; VB = random & B5
$E5E    $1641   JP       $641            ; Jump to 641
$E60    $A028   LD       I, $028         ; Load 028 into I
$E62    $601D   LD       V0, #1D         ; Load 29 into V0
$E64    $A72A   LD       I, $72A         ; Load 72A into I
$E66    $7ADB   ADD      VA, #DB         ; Add 219 to VA
$E68    $CC65   RND      VC, #65         ; VC = random & 65
$E6A    $D983   DRW      V9, V8, #3      ; Draw 3-byte sprite at V9, V8
$E6C    $C890   RND      V8, #90         ; V8 = random & 90
$E6E    $6246   LD       V2, #46         ; Load 70 into V2
$E70    $C302   RND      V3, #02         ; V3 = random & 02
$E72    $D899   DRW      V8, V9, #9      ; Draw 9-byte sprite at V8, V9
$E74    $3ADD   SE       VA, #DD         ; Skip if VA == 221
$E76    $9A83   UNKNOWN  $9A83           ; Unknown 9xxx instruction
$E78    $3401   SE       V4, #01         ; Skip if V4 == 1
$E7A    $17D9   JP       $7D9            ; Jump to 7D9
$E7C    $9660   SNE      V6, V6          ; Skip if V6 != V6
$E7E    $ED7A   UNKNOWN  $ED7A           ; Unknown Exxx instruction
$E80    $5F4E   UNKNOWN  $5F4E           ; Unknown 5xxx instruction
$E82    $1424   JP       $424            ; Jump to 424
$E84    $2856   CALL     $856            ; Call subroutine at 856
$E86    $45F3   SNE      V5, #F3         ; Skip if V5 != 243
$E88    $DC3F   DRW      VC, V3, #F      ; Draw 15-byte sprite at VC, V3
$E8A    $5BA6   UNKNOWN  $5BA6           ; Unknown 5xxx instruction
$E8C    $A4A8   LD       I, $4A8         ; Load 4A8 into I
$E8E    $8616   SHR      V6              ; V6 >>= 1, VF = LSB
$E90    $EE71   UNKNOWN  $EE71           ; Unknown Exxx instruction
$E92    $D600   DRW      V6, V0, #0      ; Draw 0-byte sprite at V6, V0
$E94    $FA78   UNKNOWN  FA78            ; Unknown Fxxx instruction
$E96    $E1F9   UNKNOWN  $E1F9           ; Unknown Exxx instruction
$E98    $DA5D   DRW      VA, V5, #D      ; Draw 13-byte sprite at VA, V5
$E9A    $48BE   SNE      V8, #BE         ; Skip if V8 != 190
$E9C    $763B   ADD      V6, #3B         ; Add 59 to V6
$E9E    $83C0   LD       V3, VC          ; V3 = VC
$EA0    $E74F   UNKNOWN  $E74F           ; Unknown Exxx instruction
$EA2    $28B8   CALL     $8B8            ; Call subroutine at 8B8
$EA4    $A019   LD       I, $019         ; Load 019 into I
$EA6    $E5C5   UNKNOWN  $E5C5           ; Unknown Exxx instruction
$EA8    $EEB9   UNKNOWN  $EEB9           ; Unknown Exxx instruction
$EAA    $7552   ADD      V5, #52         ; Add 82 to V5
$EAC    $FE96   UNKNOWN  FE96            ; Unknown Fxxx instruction
$EAE    $BCE6   JP       V0, $CE6        ; Jump to V0 + CE6
$EB0    $0669   SYS      $669            ; System call to 669
$EB2    $A2C0   LD       I, $2C0         ; Load 2C0 into I
$EB4    $38A2   SE       V8, #A2         ; Skip if V8 == 162
$EB6    $155B   JP       $55B            ; Jump to 55B
$EB8    $8C87   SUBN     VC, V8          ; VC = V8 - VC, VF = !borrow
$EBA    $4A35   SNE      VA, #35         ; Skip if VA != 53
$EBC    $E02F   UNKNOWN  $E02F           ; Unknown Exxx instruction
$EBE    $95D1   UNKNOWN  $95D1           ; Unknown 9xxx instruction
$EC0    $A91D   LD       I, $91D         ; Load 91D into I
$EC2    $4444   SNE      V4, #44         ; Skip if V4 != 68
$EC4    $742F   ADD      V4, #2F         ; Add 47 to V4
$EC6    $C52D   RND      V5, #2D         ; V5 = random & 2D
$EC8    $E49F   UNKNOWN  $E49F           ; Unknown Exxx instruction
$ECA    $FFCD   UNKNOWN  FFCD            ; Unknown Fxxx instruction
$ECC    $419A   SNE      V1, #9A         ; Skip if V1 != 154
$ECE    $6B1C   LD       VB, #1C         ; Load 28 into VB
$ED0    $7EAC   ADD      VE, #AC         ; Add 172 to VE
$ED2    $A715   LD       I, $715         ; Load 715 into I
$ED4    $30F7   SE       V0, #F7         ; Skip if V0 == 247
$ED6    $A19D   LD       I, $19D         ; Load 19D into I
$ED8    $ADF9   LD       I, $DF9         ; Load DF9 into I
$EDA    $25F9   CALL     $5F9            ; Call subroutine at 5F9
$EDC    $A883   LD       I, $883         ; Load 883 into I
$EDE    $E619   UNKNOWN  $E619           ; Unknown Exxx instruction
$EE0    $97C2   UNKNOWN  $97C2           ; Unknown 9xxx instruction
$EE2    $8896   SHR      V8              ; V8 >>= 1, VF = LSB
$EE4    $4B3B   SNE      VB, #3B         ; Skip if VB != 59
$EE6    $10F8   JP       $0F8            ; Jump to 0F8
$EE8    $0159   SYS      $159            ; System call to 159
$EEA    $0C50   SYS      $C50            ; System call to C50
$EEC    $DD83   DRW      VD, V8, #3      ; Draw 3-byte sprite at VD, V8
$EEE    $E5BC   UNKNOWN  $E5BC           ; Unknown Exxx instruction
$EF0    $0662   SYS      $662            ; System call to 662
$EF2    $3ED3   SE       VE, #D3         ; Skip if VE == 211
$EF4    $0584   SYS      $584            ; System call to 584
$EF6    $A8FF   LD       I, $8FF         ; Load 8FF into I
$EF8    $B7B4   JP       V0, $7B4        ; Jump to V0 + 7B4
$EFA    $4147   SNE      V1, #47         ; Skip if V1 != 71
$EFC    $E0DF   UNKNOWN  $E0DF           ; Unknown Exxx instruction
$EFE    $2D84   CALL     $D84            ; Call subroutine at D84
$F00    $88C7   SUBN     V8, VC          ; V8 = VC - V8, VF = !borrow
$F02    $EA09   UNKNOWN  $EA09           ; Unknown Exxx instruction
$F04    $3413   SE       V4, #13         ; Skip if V4 == 19
$F06    $056C   SYS      $56C            ; System call to 56C
$F08    $B6A9   JP       V0, $6A9        ; Jump to V0 + 6A9
$F0A    $C107   RND      V1, #07         ; V1 = random & 07
$F0C    $6D06   LD       VD, #06         ; Load 6 into VD
$F0E    $005E   SYS      $05E            ; System call to 05E
$F10    $2990   CALL     $990            ; Call subroutine at 990
$F12    $8280   LD       V2, V8          ; V2 = V8
$F14    $44E2   SNE      V4, #E2         ; Skip if V4 != 226
$F16    $B7E1   JP       V0, $7E1        ; Jump to V0 + 7E1
$F18    $19EE   JP       $9EE            ; Jump to 9EE
$F1A    $ADE1   LD       I, $DE1         ; Load DE1 into I
$F1C    $9E5F   UNKNOWN  $9E5F           ; Unknown 9xxx instruction
$F1E    $01A1   SYS      $1A1            ; System call to 1A1
$F20    $A284   LD       I, $284         ; Load 284 into I
$F22    $CF07   RND      VF, #07         ; VF = random & 07
$F24    $438F   SNE      V3, #8F         ; Skip if V3 != 143
$F26    $DF6B   DRW      VF, V6, #B      ; Draw 11-byte sprite at VF, V6
$F28    $4551   SNE      V5, #51         ; Skip if V5 != 81
$F2A    $B972   JP       V0, $972        ; Jump to V0 + 972
$F2C    $319C   SE       V1, #9C         ; Skip if V1 == 156
$F2E    $D4AA   DRW      V4, VA, #A      ; Draw 10-byte sprite at V4, VA
$F30    $16A3   JP       $6A3            ; Jump to 6A3
$F32    $C3A4   RND      V3, #A4         ; V3 = random & A4
$F34    $AAB7   LD       I, $AB7         ; Load AB7 into I
$F36    $D1EB   DRW      V1, VE, #B      ; Draw 11-byte sprite at V1, VE
$F38    $CEE8   RND      VE, #E8         ; VE = random & E8
$F3A    $B97C   JP       V0, $97C        ; Jump to V0 + 97C
$F3C    $68A1   LD       V8, #A1         ; Load 161 into V8
$F3E    $FAD9   UNKNOWN  FAD9            ; Unknown Fxxx instruction
$F40    $52F6   UNKNOWN  $52F6           ; Unknown 5xxx instruction
$F42    $1E5F   JP       $E5F            ; Jump to E5F
$F44    $5931   UNKNOWN  $5931           ; Unknown 5xxx instruction
$F46    $D736   DRW      V7, V3, #6      ; Draw 6-byte sprite at V7, V3
$F48    $2BF7   CALL     $BF7            ; Call subroutine at BF7
$F4A    $6837   LD       V8, #37         ; Load 55 into V8
$F4C    $3C54   SE       VC, #54         ; Skip if VC == 84
$F4E    $C475   RND      V4, #75         ; V4 = random & 75
$F50    $990D   UNKNOWN  $990D           ; Unknown 9xxx instruction
$F52    $EDFB   UNKNOWN  $EDFB           ; Unknown Exxx instruction
$F54    $4F07   SNE      VF, #07         ; Skip if VF != 7
$F56    $9969   UNKNOWN  $9969           ; Unknown 9xxx instruction
$F58    $BAA0   JP       V0, $AA0        ; Jump to V0 + AA0
$F5A    $73FE   ADD      V3, #FE         ; Add 254 to V3
$F5C    $27D5   CALL     $7D5            ; Call subroutine at 7D5
$F5E    $C942   RND      V9, #42         ; V9 = random & 42
$F60    $1125   JP       $125            ; Jump to 125
$F62    $B161   JP       V0, $161        ; Jump to V0 + 161
$F64    $1375   JP       $375            ; Jump to 375
$F66    $F212   UNKNOWN  F212            ; Unknown Fxxx instruction
$F68    $8364   ADD      V3, V6          ; V3 += V6, VF = carry
$F6A    $8918   UNKNOWN  8918            ; Unknown 8xxx instruction
$F6C    $EC40   UNKNOWN  $EC40           ; Unknown Exxx instruction
$F6E    $E59B   UNKNOWN  $E59B           ; Unknown Exxx instruction
$F70    $9348   UNKNOWN  $9348           ; Unknown 9xxx instruction
$F72    $9ADC   UNKNOWN  $9ADC           ; Unknown 9xxx instruction
$F74    $AA3C   LD       I, $A3C         ; Load A3C into I
$F76    $246C   CALL     $46C            ; Call subroutine at 46C
$F78    $CDA4   RND      VD, #A4         ; VD = random & A4
$F7A    $1E5B   JP       $E5B            ; Jump to E5B
$F7C    $3B78   SE       VB, #78         ; Skip if VB == 120
$F7E    $1533   JP       $533            ; Jump to 533
$F80    $CCDA   RND      VC, #DA         ; VC = random & DA
$F82    $C709   RND      V7, #09         ; V7 = random & 09
$F84    $D121   DRW      V1, V2, #1      ; Draw 1-byte sprite at V1, V2
$F86    $76B2   ADD      V6, #B2         ; Add 178 to V6
$F88    $71DF   ADD      V1, #DF         ; Add 223 to V1
$F8A    $E6B6   UNKNOWN  $E6B6           ; Unknown Exxx instruction
$F8C    $3D0F   SE       VD, #0F         ; Skip if VD == 15
$F8E    $3F6B   SE       VF, #6B         ; Skip if VF == 107
$F90    $0A2D   SYS      $A2D            ; System call to A2D
$F92    $1857   JP       $857            ; Jump to 857
$F94    $ACE8   LD       I, $CE8         ; Load CE8 into I
$F96    $0FFC   SYS      $FFC            ; System call to FFC
$F98    $55BE   UNKNOWN  $55BE           ; Unknown 5xxx instruction
$F9A    $C616   RND      V6, #16         ; V6 = random & 16
$F9C    $5A7D   UNKNOWN  $5A7D           ; Unknown 5xxx instruction
$F9E    $698F   LD       V9, #8F         ; Load 143 into V9
$FA0    $7D49   ADD      VD, #49         ; Add 73 to VD
$FA2    $2E28   CALL     $E28            ; Call subroutine at E28
$FA4    $B4D5   JP       V0, $4D5        ; Jump to V0 + 4D5
$FA6    $75C7   ADD      V5, #C7         ; Add 199 to V5
$FA8    $1C44   JP       $C44            ; Jump to C44
$FAA    $8FEF   UNKNOWN  8FEF            ; Unknown 8xxx instruction
$FAC    $BBD3   JP       V0, $BD3        ; Jump to V0 + BD3
$FAE    $C594   RND      V5, #94         ; V5 = random & 94
$FB0    $B095   JP       V0, $095        ; Jump to V0 + 095
$FB2    $B5E4   JP       V0, $5E4        ; Jump to V0 + 5E4
$FB4    $35AE   SE       V5, #AE         ; Skip if V5 == 174
$FB6    $0C5B   SYS      $C5B            ; System call to C5B
$FB8    $035D   SYS      $35D            ; System call to 35D
$FBA    $F7A8   UNKNOWN  F7A8            ; Unknown Fxxx instruction
$FBC    $70CC   ADD      V0, #CC         ; Add 204 to V0
$FBE    $2FEF   CALL     $FEF            ; Call subroutine at FEF
$FC0    $D975   DRW      V9, V7, #5      ; Draw 5-byte sprite at V9, V7
$FC2    $1050   JP       $050            ; Jump to 050
$FC4    $C521   RND      V5, #21         ; V5 = random & 21
$FC6    $44E9   SNE      V4, #E9         ; Skip if V4 != 233
$FC8    $2AF3   CALL     $AF3            ; Call subroutine at AF3
$FCA    $3AC5   SE       VA, #C5         ; Skip if VA == 197
$FCC    $3920   SE       V9, #20         ; Skip if V9 == 32
$FCE    $4230   SNE      V2, #30         ; Skip if V2 != 48
$FD0    $C8C5   RND      V8, #C5         ; V8 = random & C5
$FD2    $19C2   JP       $9C2            ; Jump to 9C2
$FD4    $2253   CALL     $253            ; Call subroutine at 253
$FD6    $2FD9   CALL     $FD9            ; Call subroutine at FD9
$FD8    $8135   SUB      V1, V3          ; V1 -= V3, VF = !borrow
$FDA    $FD75   UNKNOWN  FD75            ; Unknown Fxxx instruction
$FDC    $2C94   CALL     $C94            ; Call subroutine at C94
$FDE    $1FF2   JP       $FF2            ; Jump to FF2
$FE0    $73C0   ADD      V3, #C0         ; Add 192 to V3
$FE2    $ECCC   UNKNOWN  $ECCC           ; Unknown Exxx instruction
$FE4    $164A   JP       $64A            ; Jump to 64A
$FE6    $7A25   ADD      VA, #25         ; Add 37 to VA
$FE8    $F4AD   UNKNOWN  F4AD            ; Unknown Fxxx instruction
$FEA    $7E36   ADD      VE, #36         ; Add 54 to VE
$FEC    $695E   LD       V9, #5E         ; Load 94 into V9
$FEE    $BCA6   JP       V0, $CA6        ; Jump to V0 + CA6
$FF0    $6AD8   LD       VA, #D8         ; Load 216 into VA
$FF2    $D509   DRW      V5, V0, #9      ; Draw 9-byte sprite at V5, V0
$FF4    $6038   LD       V0, #38         ; Load 56 into V0
$FF6    $472F   SNE      V7, #2F         ; Skip if V7 != 47
$FF8    $0CE5   SYS      $CE5            ; System call to CE5
$FFA    $E2F6   UNKNOWN  $E2F6           ; Unknown Exxx instruction
$FFC    $3BB1   SE       VB, #B1         ; Skip if VB == 177
$FFE    $E04F   UNKNOWN  $E04F           ; Unknown Exxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 526 (29.4%)
  JP      : 232 (12.9%)
  LD      : 218 (12.2%)
  CALL    : 122 ( 6.8%)
  RND     : 114 ( 6.4%)
  ADD     : 114 ( 6.4%)
  SE      : 114 ( 6.4%)
  SYS     : 107 ( 6.0%)
  SNE     : 107 ( 6.0%)
  DRW     : 101 ( 5.6%)
  SUBN    :   9 ( 0.5%)
  SHR     :   8 ( 0.4%)
  AND     :   6 ( 0.3%)
  SHL     :   5 ( 0.3%)
  SUB     :   5 ( 0.3%)
  OR      :   2 ( 0.1%)
  XOR     :   2 ( 0.1%)

Memory Operations: 332 (18.5%)
Arithmetic Operations: 138 (7.7%)
