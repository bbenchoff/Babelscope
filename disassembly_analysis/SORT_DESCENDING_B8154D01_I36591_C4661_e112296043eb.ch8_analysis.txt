
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B8154D01_I36591_C4661_e112296043eb.ch8
ROM Size: 3584 bytes
Instructions Found: 1716

DISCOVERY INFORMATION:
Batch: 8154
Instance: 36591
Direction: descending
Final Array: [128, 0, 0, 0, 0, 0, 0, 0]
Operations: R:0 W:8 C:1 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 84
Sort Array References:
  $338: LD I, $67D ; Load 67D into I
  $358: LD I, $B5B ; Load B5B into I
  $380: LD I, $D4D ; Load D4D into I
  $3C8: LD I, $4F0 ; Load 4F0 into I
  $3D2: LD I, $04E ; Load 04E into I
  $400: LD I, $F1E ; Load F1E into I
  $408: LD I, $F32 ; Load F32 into I
  $418: LD I, $A8C ; Load A8C into I
  $43C: LD I, $A69 ; Load A69 into I
  $450: LD I, $DDD ; Load DDD into I
  $496: LD I, $1E2 ; Load 1E2 into I
  $4DC: LD I, $0A6 ; Load 0A6 into I
  $4E6: LD I, $08D ; Load 08D into I
  $516: LD I, $9E3 ; Load 9E3 into I
  $52C: LD I, $9F8 ; Load 9F8 into I
  $592: LD I, $C1E ; Load C1E into I
  $61E: LD I, $12A ; Load 12A into I
  $628: LD I, $B5A ; Load B5A into I
  $632: LD I, $EFB ; Load EFB into I
  $638: LD I, $421 ; Load 421 into I
  $64A: LD I, $ABF ; Load ABF into I
  $656: LD I, $AB9 ; Load AB9 into I
  $69C: LD I, $4AD ; Load 4AD into I
  $6B6: LD I, $F07 ; Load F07 into I
  $6E4: LD I, $186 ; Load 186 into I
  $6FE: LD I, $981 ; Load 981 into I
  $76E: LD I, $E5F ; Load E5F into I
  $784: LD I, $376 ; Load 376 into I
  $798: LD I, $C1B ; Load C1B into I
  $7D8: LD I, $BB5 ; Load BB5 into I
  $842: LD I, $A88 ; Load A88 into I
  $886: LD I, $655 ; Load 655 into I
  $894: LD I, $24B ; Load 24B into I
  $896: LD I, $F4D ; Load F4D into I
  $89C: LD I, $681 ; Load 681 into I
  $8CA: LD I, $B58 ; Load B58 into I
  $8D0: LD I, $49C ; Load 49C into I
  $90E: LD I, $C0F ; Load C0F into I
  $916: LD I, $8DA ; Load 8DA into I
  $91E: LD I, $8A0 ; Load 8A0 into I
  $94C: LD I, $73D ; Load 73D into I
  $966: LD I, $517 ; Load 517 into I
  $998: LD I, $E19 ; Load E19 into I
  $9AE: LD I, $D57 ; Load D57 into I
  $9C6: LD I, $08C ; Load 08C into I
  $9CC: LD I, $3DD ; Load 3DD into I
  $9DA: LD I, $56F ; Load 56F into I
  $9DC: LD I, $61E ; Load 61E into I
  $A96: LD I, $AB3 ; Load AB3 into I
  $AB4: LD I, $49E ; Load 49E into I
  $AD4: LD I, $93C ; Load 93C into I
  $B08: LD I, $C3F ; Load C3F into I
  $B64: LD I, $44C ; Load 44C into I
  $B7A: LD I, $280 ; Load 280 into I
  $BE2: LD I, $2F9 ; Load 2F9 into I
  $BF8: LD I, $51B ; Load 51B into I
  $C4A: LD I, $7BB ; Load 7BB into I
  $C58: LD I, $3A5 ; Load 3A5 into I
  $C9A: LD I, $F34 ; Load F34 into I
  $CC6: LD I, $0F5 ; Load 0F5 into I
  $CD4: LD I, $442 ; Load 442 into I
  $CD8: LD I, $867 ; Load 867 into I
  $D5C: LD I, $89E ; Load 89E into I
  $D60: LD I, $AB1 ; Load AB1 into I
  $D86: LD I, $5E7 ; Load 5E7 into I
  $DAE: LD I, $683 ; Load 683 into I
  $DBA: LD I, $A5E ; Load A5E into I
  $DD0: LD I, $EE1 ; Load EE1 into I
  $E0C: LD I, $2A8 ; Load 2A8 into I
  $E42: LD I, $CCA ; Load CCA into I
  $E5C: LD I, $903 ; Load 903 into I
  $E6C: LD I, $137 ; Load 137 into I
  $E80: LD I, $6FF ; Load 6FF into I
  $EAA: LD [I], V1 ; Store V0-V1 at I
  $EC2: LD I, $A0D ; Load A0D into I
  $EC8: LD I, $53C ; Load 53C into I
  $EDE: LD I, $3EA ; Load 3EA into I
  $F2A: LD I, $9DD ; Load 9DD into I
  $F4E: LD I, $85B ; Load 85B into I
  $F5E: LD I, $726 ; Load 726 into I
  $F92: LD I, $EC4 ; Load EC4 into I
  $F98: LD I, $F67 ; Load F67 into I
  $FBA: LD I, $387 ; Load 387 into I
  $FF6: LD I, $F7C ; Load F7C into I

CONTROL FLOW ANALYSIS:
Jumps: 218
Calls: 109
Branches: 218
Loops: 130
Loop Structures:
  $342 -> $211 (backward jump)
  $3E2 -> $1B7 (backward jump)
  $434 -> $185 (backward jump)
  $44E -> $272 (backward jump)
  $49E -> $0A7 (backward jump)
  $524 -> $168 (backward jump)
  $560 -> $550 (backward jump)
  $5BA -> $2FD (backward jump)
  $604 -> $507 (backward jump)
  $650 -> $5A8 (backward jump)
  $66C -> $5DB (backward jump)
  $674 -> $17E (backward jump)
  $6BA -> $358 (backward jump)
  $6F0 -> $525 (backward jump)
  $6F2 -> $1FA (backward jump)
  $6F4 -> $15A (backward jump)
  $718 -> $543 (backward jump)
  $732 -> $01D (backward jump)
  $73E -> $1F6 (backward jump)
  $7B2 -> $4FB (backward jump)
  $7CC -> $719 (backward jump)
  $7E2 -> $54A (backward jump)
  $7EE -> $403 (backward jump)
  $806 -> $11B (backward jump)
  $80A -> $2C6 (backward jump)
  $826 -> $193 (backward jump)
  $82A -> $681 (backward jump)
  $87E -> $40F (backward jump)
  $8A2 -> $568 (backward jump)
  $8AE -> $847 (backward jump)
  $8C0 -> $65C (backward jump)
  $8D4 -> $3F7 (backward jump)
  $8E0 -> $298 (backward jump)
  $8F0 -> $79D (backward jump)
  $8F4 -> $18A (backward jump)
  $900 -> $2A4 (backward jump)
  $912 -> $14B (backward jump)
  $91A -> $263 (backward jump)
  $930 -> $903 (backward jump)
  $94A -> $2AF (backward jump)
  $980 -> $870 (backward jump)
  $990 -> $91A (backward jump)
  $9C2 -> $182 (backward jump)
  $9C8 -> $445 (backward jump)
  $9EA -> $840 (backward jump)
  $A08 -> $6F4 (backward jump)
  $A0C -> $54D (backward jump)
  $A18 -> $721 (backward jump)
  $A32 -> $3BE (backward jump)
  $A34 -> $7D5 (backward jump)
  $A36 -> $9E9 (backward jump)
  $A4E -> $873 (backward jump)
  $A6E -> $73C (backward jump)
  $A70 -> $0CB (backward jump)
  $A78 -> $102 (backward jump)
  $A8E -> $4BA (backward jump)
  $A9C -> $A42 (backward jump)
  $AA0 -> $9BE (backward jump)
  $ACE -> $030 (backward jump)
  $AD0 -> $8FC (backward jump)
  $AE2 -> $7D4 (backward jump)
  $AE8 -> $0F5 (backward jump)
  $AEE -> $9A2 (backward jump)
  $AF2 -> $65E (backward jump)
  $AF8 -> $17D (backward jump)
  $B04 -> $3E4 (backward jump)
  $B10 -> $4B2 (backward jump)
  $B16 -> $50F (backward jump)
  $B1C -> $047 (backward jump)
  $B22 -> $850 (backward jump)
  $B44 -> $178 (backward jump)
  $B46 -> $62B (backward jump)
  $B52 -> $6A1 (backward jump)
  $BC2 -> $B4B (backward jump)
  $BFA -> $60C (backward jump)
  $C0A -> $055 (backward jump)
  $C1C -> $783 (backward jump)
  $C26 -> $14C (backward jump)
  $C44 -> $309 (backward jump)
  $C4C -> $14B (backward jump)
  $C54 -> $503 (backward jump)
  $C5A -> $419 (backward jump)
  $C66 -> $150 (backward jump)
  $C78 -> $936 (backward jump)
  $CA0 -> $14A (backward jump)
  $CE6 -> $43F (backward jump)
  $CF8 -> $0BB (backward jump)
  $CFC -> $59D (backward jump)
  $D02 -> $159 (backward jump)
  $D0A -> $B79 (backward jump)
  $D1C -> $B66 (backward jump)
  $D3E -> $40A (backward jump)
  $D50 -> $15C (backward jump)
  $D52 -> $86F (backward jump)
  $D5E -> $9CF (backward jump)
  $D70 -> $9C4 (backward jump)
  $D72 -> $0D3 (backward jump)
  $D80 -> $742 (backward jump)
  $DB2 -> $B5E (backward jump)
  $DB6 -> $D09 (backward jump)
  $DC8 -> $075 (backward jump)
  $DD2 -> $445 (backward jump)
  $E08 -> $018 (backward jump)
  $E24 -> $229 (backward jump)
  $E26 -> $5A6 (backward jump)
  $E30 -> $C4F (backward jump)
  $E4A -> $C4F (backward jump)
  $E4C -> $1E3 (backward jump)
  $E4E -> $D01 (backward jump)
  $E6A -> $3F9 (backward jump)
  $E8E -> $064 (backward jump)
  $EC0 -> $E9A (backward jump)
  $EDC -> $40B (backward jump)
  $EE0 -> $E39 (backward jump)
  $EF8 -> $B6D (backward jump)
  $EFE -> $10E (backward jump)
  $F06 -> $DF8 (backward jump)
  $F0C -> $D3F (backward jump)
  $F12 -> $25A (backward jump)
  $F16 -> $E88 (backward jump)
  $F32 -> $7C4 (backward jump)
  $F34 -> $C59 (backward jump)
  $F3A -> $6C2 (backward jump)
  $F7C -> $E25 (backward jump)
  $F9C -> $58E (backward jump)
  $FAA -> $65C (backward jump)
  $FAE -> $707 (backward jump)
  $FE0 -> $195 (backward jump)
  $FE6 -> $D72 (backward jump)
  $FEC -> $17D (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $8000   LD       V0, V0          ; V0 = V0
$202    $8000   LD       V0, V0          ; V0 = V0
$206    $8000   LD       V0, V0          ; V0 = V0
$20A    $8000   LD       V0, V0          ; V0 = V0
$20C    $8000   LD       V0, V0          ; V0 = V0
$214    $8000   LD       V0, V0          ; V0 = V0
$218    $8000   LD       V0, V0          ; V0 = V0
$21A    $8000   LD       V0, V0          ; V0 = V0
$220    $8000   LD       V0, V0          ; V0 = V0
$222    $8000   LD       V0, V0          ; V0 = V0
$228    $8000   LD       V0, V0          ; V0 = V0
$22E    $8000   LD       V0, V0          ; V0 = V0
$232    $8000   LD       V0, V0          ; V0 = V0
$236    $8000   LD       V0, V0          ; V0 = V0
$23A    $8000   LD       V0, V0          ; V0 = V0
$23C    $8000   LD       V0, V0          ; V0 = V0
$244    $8000   LD       V0, V0          ; V0 = V0
$248    $8000   LD       V0, V0          ; V0 = V0
$24A    $8000   LD       V0, V0          ; V0 = V0
$24C    $8000   LD       V0, V0          ; V0 = V0
$24E    $8000   LD       V0, V0          ; V0 = V0
$250    $8000   LD       V0, V0          ; V0 = V0
$252    $8000   LD       V0, V0          ; V0 = V0
$254    $8000   LD       V0, V0          ; V0 = V0
$25A    $8000   LD       V0, V0          ; V0 = V0
$25C    $8000   LD       V0, V0          ; V0 = V0
$25E    $8000   LD       V0, V0          ; V0 = V0
$262    $8000   LD       V0, V0          ; V0 = V0
$264    $8000   LD       V0, V0          ; V0 = V0
$26A    $8000   LD       V0, V0          ; V0 = V0
$272    $8000   LD       V0, V0          ; V0 = V0
$27A    $8000   LD       V0, V0          ; V0 = V0
$27E    $8000   LD       V0, V0          ; V0 = V0
$280    $8000   LD       V0, V0          ; V0 = V0
$290    $8000   LD       V0, V0          ; V0 = V0
$298    $8000   LD       V0, V0          ; V0 = V0
$29C    $8000   LD       V0, V0          ; V0 = V0
$29E    $8000   LD       V0, V0          ; V0 = V0
$2A2    $8000   LD       V0, V0          ; V0 = V0
$2A4    $8000   LD       V0, V0          ; V0 = V0
$2A6    $8000   LD       V0, V0          ; V0 = V0
$2AA    $8000   LD       V0, V0          ; V0 = V0
$2AC    $8000   LD       V0, V0          ; V0 = V0
$2AE    $8000   LD       V0, V0          ; V0 = V0
$2B2    $8000   LD       V0, V0          ; V0 = V0
$2B4    $8000   LD       V0, V0          ; V0 = V0
$2B6    $8000   LD       V0, V0          ; V0 = V0
$2BC    $8000   LD       V0, V0          ; V0 = V0
$2BE    $8000   LD       V0, V0          ; V0 = V0
$2C0    $8000   LD       V0, V0          ; V0 = V0
$2C2    $8000   LD       V0, V0          ; V0 = V0
$2C4    $8000   LD       V0, V0          ; V0 = V0
$2D2    $8000   LD       V0, V0          ; V0 = V0
$2D6    $8000   LD       V0, V0          ; V0 = V0
$2DA    $8000   LD       V0, V0          ; V0 = V0
$2DC    $8000   LD       V0, V0          ; V0 = V0
$2E2    $8000   LD       V0, V0          ; V0 = V0
$2E4    $8000   LD       V0, V0          ; V0 = V0
$2E6    $8000   LD       V0, V0          ; V0 = V0
$2EA    $8000   LD       V0, V0          ; V0 = V0
$2EE    $8000   LD       V0, V0          ; V0 = V0
$2F0    $8000   LD       V0, V0          ; V0 = V0
$2FE    $8000   LD       V0, V0          ; V0 = V0
$300    $8000   LD       V0, V0          ; V0 = V0
$308    $8000   LD       V0, V0          ; V0 = V0
$30C    $8000   LD       V0, V0          ; V0 = V0
$30E    $8000   LD       V0, V0          ; V0 = V0
$310    $8000   LD       V0, V0          ; V0 = V0
$314    $8000   LD       V0, V0          ; V0 = V0
$31A    $8000   LD       V0, V0          ; V0 = V0
$31E    $8000   LD       V0, V0          ; V0 = V0
$320    $8000   LD       V0, V0          ; V0 = V0
$324    $8000   LD       V0, V0          ; V0 = V0
$326    $8000   LD       V0, V0          ; V0 = V0
$328    $8000   LD       V0, V0          ; V0 = V0
$32A    $8000   LD       V0, V0          ; V0 = V0
$32C    $8000   LD       V0, V0          ; V0 = V0
$330    $8000   LD       V0, V0          ; V0 = V0
$334    $919B   UNKNOWN  $919B           ; Unknown 9xxx instruction
$336    $E46D   UNKNOWN  $E46D           ; Unknown Exxx instruction
$338    $A67D   LD       I, $67D         ; Load 67D into I
$33A    $1A18   JP       $A18            ; Jump to A18
$33C    $47D7   SNE      V7, #D7         ; Skip if V7 != 215
$33E    $284C   CALL     $84C            ; Call subroutine at 84C
$340    $EDCB   UNKNOWN  $EDCB           ; Unknown Exxx instruction
$342    $1211   JP       $211            ; Jump to 211
$344    $4CD1   SNE      VC, #D1         ; Skip if VC != 209
$346    $DA47   DRW      VA, V4, #7      ; Draw 7-byte sprite at VA, V4
$348    $05DC   SYS      $5DC            ; System call to 5DC
$34A    $D57D   DRW      V5, V7, #D      ; Draw 13-byte sprite at V5, V7
$34C    $CA7D   RND      VA, #7D         ; VA = random & 7D
$34E    $C4DD   RND      V4, #DD         ; V4 = random & DD
$350    $E0EB   UNKNOWN  $E0EB           ; Unknown Exxx instruction
$352    $C2DB   RND      V2, #DB         ; V2 = random & DB
$354    $93F9   UNKNOWN  $93F9           ; Unknown 9xxx instruction
$356    $5EAC   UNKNOWN  $5EAC           ; Unknown 5xxx instruction
$358    $AB5B   LD       I, $B5B         ; Load B5B into I
$35A    $F403   UNKNOWN  F403            ; Unknown Fxxx instruction
$35C    $4413   SNE      V4, #13         ; Skip if V4 != 19
$35E    $0977   SYS      $977            ; System call to 977
$360    $31F4   SE       V1, #F4         ; Skip if V1 == 244
$362    $60FA   LD       V0, #FA         ; Load 250 into V0
$364    $BC1F   JP       V0, $C1F        ; Jump to V0 + C1F
$366    $236C   CALL     $36C            ; Call subroutine at 36C
$368    $5A44   UNKNOWN  $5A44           ; Unknown 5xxx instruction
$36A    $DF26   DRW      VF, V2, #6      ; Draw 6-byte sprite at VF, V2
$36C    $5CFE   UNKNOWN  $5CFE           ; Unknown 5xxx instruction
$36E    $2818   CALL     $818            ; Call subroutine at 818
$370    $E4A7   UNKNOWN  $E4A7           ; Unknown Exxx instruction
$372    $29AD   CALL     $9AD            ; Call subroutine at 9AD
$374    $58FE   UNKNOWN  $58FE           ; Unknown 5xxx instruction
$376    $5A0F   UNKNOWN  $5A0F           ; Unknown 5xxx instruction
$378    $D49A   DRW      V4, V9, #A      ; Draw 10-byte sprite at V4, V9
$37A    $DE4E   DRW      VE, V4, #E      ; Draw 14-byte sprite at VE, V4
$37C    $E22D   UNKNOWN  $E22D           ; Unknown Exxx instruction
$37E    $5A88   UNKNOWN  $5A88           ; Unknown 5xxx instruction
$380    $AD4D   LD       I, $D4D         ; Load D4D into I
$382    $7A78   ADD      VA, #78         ; Add 120 to VA
$384    $1D41   JP       $D41            ; Jump to D41
$386    $446D   SNE      V4, #6D         ; Skip if V4 != 109
$388    $C28E   RND      V2, #8E         ; V2 = random & 8E
$38A    $D4FC   DRW      V4, VF, #C      ; Draw 12-byte sprite at V4, VF
$38C    $9822   UNKNOWN  $9822           ; Unknown 9xxx instruction
$38E    $2BFC   CALL     $BFC            ; Call subroutine at BFC
$390    $6B32   LD       VB, #32         ; Load 50 into VB
$392    $5D3A   UNKNOWN  $5D3A           ; Unknown 5xxx instruction
$394    $0198   SYS      $198            ; System call to 198
$396    $D7D3   DRW      V7, VD, #3      ; Draw 3-byte sprite at V7, VD
$398    $196D   JP       $96D            ; Jump to 96D
$39A    $BACE   JP       V0, $ACE        ; Jump to V0 + ACE
$39C    $0C2E   SYS      $C2E            ; System call to C2E
$39E    $509C   UNKNOWN  $509C           ; Unknown 5xxx instruction
$3A0    $2041   CALL     $041            ; Call subroutine at 041
$3A2    $7CF9   ADD      VC, #F9         ; Add 249 to VC
$3A4    $855E   SHL      V5              ; V5 <<= 1, VF = MSB
$3A6    $EFEB   UNKNOWN  $EFEB           ; Unknown Exxx instruction
$3A8    $2014   CALL     $014            ; Call subroutine at 014
$3AA    $CBC6   RND      VB, #C6         ; VB = random & C6
$3AC    $7E60   ADD      VE, #60         ; Add 96 to VE
$3AE    $7190   ADD      V1, #90         ; Add 144 to V1
$3B0    $2D8A   CALL     $D8A            ; Call subroutine at D8A
$3B2    $9124   UNKNOWN  $9124           ; Unknown 9xxx instruction
$3B4    $611C   LD       V1, #1C         ; Load 28 into V1
$3B6    $1F18   JP       $F18            ; Jump to F18
$3B8    $CD30   RND      VD, #30         ; VD = random & 30
$3BA    $6DBD   LD       VD, #BD         ; Load 189 into VD
$3BC    $98CF   UNKNOWN  $98CF           ; Unknown 9xxx instruction
$3BE    $F0B6   UNKNOWN  F0B6            ; Unknown Fxxx instruction
$3C0    $0A34   SYS      $A34            ; System call to A34
$3C2    $DC81   DRW      VC, V8, #1      ; Draw 1-byte sprite at VC, V8
$3C4    $C34D   RND      V3, #4D         ; V3 = random & 4D
$3C6    $93CA   UNKNOWN  $93CA           ; Unknown 9xxx instruction
$3C8    $A4F0   LD       I, $4F0         ; Load 4F0 into I
$3CA    $7844   ADD      V8, #44         ; Add 68 to V8
$3CC    $CB6E   RND      VB, #6E         ; VB = random & 6E
$3CE    $CE37   RND      VE, #37         ; VE = random & 37
$3D0    $D66C   DRW      V6, V6, #C      ; Draw 12-byte sprite at V6, V6
$3D2    $A04E   LD       I, $04E         ; Load 04E into I
$3D4    $1FD9   JP       $FD9            ; Jump to FD9
$3D6    $0B18   SYS      $B18            ; System call to B18
$3D8    $FCAF   UNKNOWN  FCAF            ; Unknown Fxxx instruction
$3DA    $26F9   CALL     $6F9            ; Call subroutine at 6F9
$3DC    $E597   UNKNOWN  $E597           ; Unknown Exxx instruction
$3DE    $3852   SE       V8, #52         ; Skip if V8 == 82
$3E0    $20DE   CALL     $0DE            ; Call subroutine at 0DE
$3E2    $11B7   JP       $1B7            ; Jump to 1B7
$3E4    $9301   UNKNOWN  $9301           ; Unknown 9xxx instruction
$3E6    $D718   DRW      V7, V1, #8      ; Draw 8-byte sprite at V7, V1
$3E8    $FBE0   UNKNOWN  FBE0            ; Unknown Fxxx instruction
$3EA    $5E33   UNKNOWN  $5E33           ; Unknown 5xxx instruction
$3EC    $9792   UNKNOWN  $9792           ; Unknown 9xxx instruction
$3EE    $2C8B   CALL     $C8B            ; Call subroutine at C8B
$3F0    $6663   LD       V6, #63         ; Load 99 into V6
$3F2    $2BD7   CALL     $BD7            ; Call subroutine at BD7
$3F4    $8F3D   UNKNOWN  8F3D            ; Unknown 8xxx instruction
$3F6    $22F8   CALL     $2F8            ; Call subroutine at 2F8
$3F8    $F7A7   UNKNOWN  F7A7            ; Unknown Fxxx instruction
$3FA    $9B16   UNKNOWN  $9B16           ; Unknown 9xxx instruction
$3FC    $9ECE   UNKNOWN  $9ECE           ; Unknown 9xxx instruction
$3FE    $1D5A   JP       $D5A            ; Jump to D5A
$400    $AF1E   LD       I, $F1E         ; Load F1E into I
$402    $9EB7   UNKNOWN  $9EB7           ; Unknown 9xxx instruction
$404    $1D02   JP       $D02            ; Jump to D02
$406    $DA7E   DRW      VA, V7, #E      ; Draw 14-byte sprite at VA, V7
$408    $AF32   LD       I, $F32         ; Load F32 into I
$40A    $78A4   ADD      V8, #A4         ; Add 164 to V8
$40C    $7093   ADD      V0, #93         ; Add 147 to V0
$40E    $06CC   SYS      $6CC            ; System call to 6CC
$410    $077B   SYS      $77B            ; System call to 77B
$412    $D7BD   DRW      V7, VB, #D      ; Draw 13-byte sprite at V7, VB
$414    $7C79   ADD      VC, #79         ; Add 121 to VC
$416    $2ABF   CALL     $ABF            ; Call subroutine at ABF
$418    $AA8C   LD       I, $A8C         ; Load A8C into I
$41A    $2A7F   CALL     $A7F            ; Call subroutine at A7F
$41C    $4E23   SNE      VE, #23         ; Skip if VE != 35
$41E    $698D   LD       V9, #8D         ; Load 141 into V9
$420    $C46E   RND      V4, #6E         ; V4 = random & 6E
$422    $FC89   UNKNOWN  FC89            ; Unknown Fxxx instruction
$424    $BE16   JP       V0, $E16        ; Jump to V0 + E16
$426    $482E   SNE      V8, #2E         ; Skip if V8 != 46
$428    $484C   SNE      V8, #4C         ; Skip if V8 != 76
$42A    $9E0F   UNKNOWN  $9E0F           ; Unknown 9xxx instruction
$42C    $2C53   CALL     $C53            ; Call subroutine at C53
$42E    $31E3   SE       V1, #E3         ; Skip if V1 == 227
$430    $B7DB   JP       V0, $7DB        ; Jump to V0 + 7DB
$432    $0952   SYS      $952            ; System call to 952
$434    $B185   JP       V0, $185        ; Jump to V0 + 185
$436    $2BB2   CALL     $BB2            ; Call subroutine at BB2
$438    $651F   LD       V5, #1F         ; Load 31 into V5
$43A    $53CC   UNKNOWN  $53CC           ; Unknown 5xxx instruction
$43C    $AA69   LD       I, $A69         ; Load A69 into I
$43E    $3476   SE       V4, #76         ; Skip if V4 == 118
$440    $B9B6   JP       V0, $9B6        ; Jump to V0 + 9B6
$442    $0EDD   SYS      $EDD            ; System call to EDD
$444    $5E38   UNKNOWN  $5E38           ; Unknown 5xxx instruction
$446    $92C0   SNE      V2, VC          ; Skip if V2 != VC
$448    $7616   ADD      V6, #16         ; Add 22 to V6
$44A    $306D   SE       V0, #6D         ; Skip if V0 == 109
$44C    $2129   CALL     $129            ; Call subroutine at 129
$44E    $1272   JP       $272            ; Jump to 272
$450    $ADDD   LD       I, $DDD         ; Load DDD into I
$452    $79B5   ADD      V9, #B5         ; Add 181 to V9
$454    $6555   LD       V5, #55         ; Load 85 into V5
$456    $C3A4   RND      V3, #A4         ; V3 = random & A4
$458    $4A63   SNE      VA, #63         ; Skip if VA != 99
$45A    $56E1   UNKNOWN  $56E1           ; Unknown 5xxx instruction
$45C    $579D   UNKNOWN  $579D           ; Unknown 5xxx instruction
$45E    $1969   JP       $969            ; Jump to 969
$460    $25E9   CALL     $5E9            ; Call subroutine at 5E9
$462    $53F5   UNKNOWN  $53F5           ; Unknown 5xxx instruction
$464    $1776   JP       $776            ; Jump to 776
$466    $C6ED   RND      V6, #ED         ; V6 = random & ED
$468    $D438   DRW      V4, V3, #8      ; Draw 8-byte sprite at V4, V3
$46A    $C2D9   RND      V2, #D9         ; V2 = random & D9
$46C    $8372   AND      V3, V7          ; V3 &= V7
$46E    $20F8   CALL     $0F8            ; Call subroutine at 0F8
$470    $C1D9   RND      V1, #D9         ; V1 = random & D9
$472    $DF6C   DRW      VF, V6, #C      ; Draw 12-byte sprite at VF, V6
$474    $83DA   UNKNOWN  83DA            ; Unknown 8xxx instruction
$476    $4B29   SNE      VB, #29         ; Skip if VB != 41
$478    $DBBB   DRW      VB, VB, #B      ; Draw 11-byte sprite at VB, VB
$47A    $D7FA   DRW      V7, VF, #A      ; Draw 10-byte sprite at V7, VF
$47C    $155F   JP       $55F            ; Jump to 55F
$47E    $C3BA   RND      V3, #BA         ; V3 = random & BA
$480    $3D06   SE       VD, #06         ; Skip if VD == 6
$482    $2BE0   CALL     $BE0            ; Call subroutine at BE0
$484    $B872   JP       V0, $872        ; Jump to V0 + 872
$486    $B54B   JP       V0, $54B        ; Jump to V0 + 54B
$488    $C01A   RND      V0, #1A         ; V0 = random & 1A
$48A    $5AA2   UNKNOWN  $5AA2           ; Unknown 5xxx instruction
$48C    $9F2A   UNKNOWN  $9F2A           ; Unknown 9xxx instruction
$48E    $97F5   UNKNOWN  $97F5           ; Unknown 9xxx instruction
$490    $42CF   SNE      V2, #CF         ; Skip if V2 != 207
$492    $04D6   SYS      $4D6            ; System call to 4D6
$494    $7927   ADD      V9, #27         ; Add 39 to V9
$496    $A1E2   LD       I, $1E2         ; Load 1E2 into I
$498    $9BBB   UNKNOWN  $9BBB           ; Unknown 9xxx instruction
$49A    $614C   LD       V1, #4C         ; Load 76 into V1
$49C    $98CF   UNKNOWN  $98CF           ; Unknown 9xxx instruction
$49E    $10A7   JP       $0A7            ; Jump to 0A7
$4A0    $560C   UNKNOWN  $560C           ; Unknown 5xxx instruction
$4A2    $9F83   UNKNOWN  $9F83           ; Unknown 9xxx instruction
$4A4    $F530   UNKNOWN  F530            ; Unknown Fxxx instruction
$4A6    $52CC   UNKNOWN  $52CC           ; Unknown 5xxx instruction
$4A8    $B560   JP       V0, $560        ; Jump to V0 + 560
$4AA    $7B59   ADD      VB, #59         ; Add 89 to VB
$4AC    $73CE   ADD      V3, #CE         ; Add 206 to V3
$4AE    $DCC2   DRW      VC, VC, #2      ; Draw 2-byte sprite at VC, VC
$4B0    $3BC5   SE       VB, #C5         ; Skip if VB == 197
$4B2    $6466   LD       V4, #66         ; Load 102 into V4
$4B4    $C0EC   RND      V0, #EC         ; V0 = random & EC
$4B6    $516F   UNKNOWN  $516F           ; Unknown 5xxx instruction
$4B8    $F83D   UNKNOWN  F83D            ; Unknown Fxxx instruction
$4BA    $451A   SNE      V5, #1A         ; Skip if V5 != 26
$4BC    $9088   UNKNOWN  $9088           ; Unknown 9xxx instruction
$4BE    $73B3   ADD      V3, #B3         ; Add 179 to V3
$4C0    $9A5D   UNKNOWN  $9A5D           ; Unknown 9xxx instruction
$4C2    $D2D9   DRW      V2, VD, #9      ; Draw 9-byte sprite at V2, VD
$4C4    $C564   RND      V5, #64         ; V5 = random & 64
$4C6    $5EDB   UNKNOWN  $5EDB           ; Unknown 5xxx instruction
$4C8    $4AEF   SNE      VA, #EF         ; Skip if VA != 239
$4CA    $BA5B   JP       V0, $A5B        ; Jump to V0 + A5B
$4CC    $33B8   SE       V3, #B8         ; Skip if V3 == 184
$4CE    $0798   SYS      $798            ; System call to 798
$4D0    $C74D   RND      V7, #4D         ; V7 = random & 4D
$4D2    $C8FF   RND      V8, #FF         ; V8 = random & FF
$4D4    $B84A   JP       V0, $84A        ; Jump to V0 + 84A
$4D6    $9690   SNE      V6, V9          ; Skip if V6 != V9
$4D8    $E1C8   UNKNOWN  $E1C8           ; Unknown Exxx instruction
$4DA    $28F6   CALL     $8F6            ; Call subroutine at 8F6
$4DC    $A0A6   LD       I, $0A6         ; Load 0A6 into I
$4DE    $E620   UNKNOWN  $E620           ; Unknown Exxx instruction
$4E0    $4746   SNE      V7, #46         ; Skip if V7 != 70
$4E2    $7135   ADD      V1, #35         ; Add 53 to V1
$4E4    $C4BA   RND      V4, #BA         ; V4 = random & BA
$4E6    $A08D   LD       I, $08D         ; Load 08D into I
$4E8    $16C3   JP       $6C3            ; Jump to 6C3
$4EA    $EDD8   UNKNOWN  $EDD8           ; Unknown Exxx instruction
$4EC    $6F8C   LD       VF, #8C         ; Load 140 into VF
$4EE    $6CDF   LD       VC, #DF         ; Load 223 into VC
$4F0    $9509   UNKNOWN  $9509           ; Unknown 9xxx instruction
$4F2    $5123   UNKNOWN  $5123           ; Unknown 5xxx instruction
$4F4    $5530   SE       V5, V3          ; Skip if V5 == V3
$4F6    $3B97   SE       VB, #97         ; Skip if VB == 151
$4F8    $582E   UNKNOWN  $582E           ; Unknown 5xxx instruction
$4FA    $6F02   LD       VF, #02         ; Load 2 into VF
$4FC    $24B4   CALL     $4B4            ; Call subroutine at 4B4
$4FE    $D1FD   DRW      V1, VF, #D      ; Draw 13-byte sprite at V1, VF
$500    $BDAE   JP       V0, $DAE        ; Jump to V0 + DAE
$502    $8AEE   SHL      VA              ; VA <<= 1, VF = MSB
$504    $F95F   UNKNOWN  F95F            ; Unknown Fxxx instruction
$506    $604B   LD       V0, #4B         ; Load 75 into V0
$508    $8DDC   UNKNOWN  8DDC            ; Unknown 8xxx instruction
$50A    $4E43   SNE      VE, #43         ; Skip if VE != 67
$50C    $20AE   CALL     $0AE            ; Call subroutine at 0AE
$50E    $19D8   JP       $9D8            ; Jump to 9D8
$510    $EDB5   UNKNOWN  $EDB5           ; Unknown Exxx instruction
$512    $08B0   SYS      $8B0            ; System call to 8B0
$514    $F818   LD       ST, V8          ; Sound timer = V8
$516    $A9E3   LD       I, $9E3         ; Load 9E3 into I
$518    $64EE   LD       V4, #EE         ; Load 238 into V4
$51A    $B80C   JP       V0, $80C        ; Jump to V0 + 80C
$51C    $EED7   UNKNOWN  $EED7           ; Unknown Exxx instruction
$51E    $9B0D   UNKNOWN  $9B0D           ; Unknown 9xxx instruction
$520    $BD4B   JP       V0, $D4B        ; Jump to V0 + D4B
$522    $3302   SE       V3, #02         ; Skip if V3 == 2
$524    $B168   JP       V0, $168        ; Jump to V0 + 168
$526    $B539   JP       V0, $539        ; Jump to V0 + 539
$528    $64C2   LD       V4, #C2         ; Load 194 into V4
$52A    $2F17   CALL     $F17            ; Call subroutine at F17
$52C    $A9F8   LD       I, $9F8         ; Load 9F8 into I
$52E    $94EB   UNKNOWN  $94EB           ; Unknown 9xxx instruction
$530    $CA7D   RND      VA, #7D         ; VA = random & 7D
$532    $1879   JP       $879            ; Jump to 879
$534    $DF9C   DRW      VF, V9, #C      ; Draw 12-byte sprite at VF, V9
$536    $5375   UNKNOWN  $5375           ; Unknown 5xxx instruction
$538    $16F3   JP       $6F3            ; Jump to 6F3
$53A    $97F6   UNKNOWN  $97F6           ; Unknown 9xxx instruction
$53C    $CE3E   RND      VE, #3E         ; VE = random & 3E
$53E    $0FED   SYS      $FED            ; System call to FED
$540    $CA74   RND      VA, #74         ; VA = random & 74
$542    $CF79   RND      VF, #79         ; VF = random & 79
$544    $C7F5   RND      V7, #F5         ; V7 = random & F5
$546    $CA84   RND      VA, #84         ; VA = random & 84
$548    $EAEC   UNKNOWN  $EAEC           ; Unknown Exxx instruction
$54A    $9C68   UNKNOWN  $9C68           ; Unknown 9xxx instruction
$54C    $9F16   UNKNOWN  $9F16           ; Unknown 9xxx instruction
$54E    $434C   SNE      V3, #4C         ; Skip if V3 != 76
$550    $28B9   CALL     $8B9            ; Call subroutine at 8B9
$552    $2F7D   CALL     $F7D            ; Call subroutine at F7D
$554    $56CE   UNKNOWN  $56CE           ; Unknown 5xxx instruction
$556    $5626   UNKNOWN  $5626           ; Unknown 5xxx instruction
$558    $53ED   UNKNOWN  $53ED           ; Unknown 5xxx instruction
$55A    $53A3   UNKNOWN  $53A3           ; Unknown 5xxx instruction
$55C    $4D16   SNE      VD, #16         ; Skip if VD != 22
$55E    $1D1D   JP       $D1D            ; Jump to D1D
$560    $1550   JP       $550            ; Jump to 550
$562    $2C94   CALL     $C94            ; Call subroutine at C94
$564    $1B24   JP       $B24            ; Jump to B24
$566    $F491   UNKNOWN  F491            ; Unknown Fxxx instruction
$568    $0361   SYS      $361            ; System call to 361
$56A    $8154   ADD      V1, V5          ; V1 += V5, VF = carry
$56C    $45EB   SNE      V5, #EB         ; Skip if V5 != 235
$56E    $BD3E   JP       V0, $D3E        ; Jump to V0 + D3E
$570    $4533   SNE      V5, #33         ; Skip if V5 != 51
$572    $7D5B   ADD      VD, #5B         ; Add 91 to VD
$574    $3AA6   SE       VA, #A6         ; Skip if VA == 166
$576    $7B9A   ADD      VB, #9A         ; Add 154 to VB
$578    $40FA   SNE      V0, #FA         ; Skip if V0 != 250
$57A    $1854   JP       $854            ; Jump to 854
$57C    $9BEA   UNKNOWN  $9BEA           ; Unknown 9xxx instruction
$57E    $099B   SYS      $99B            ; System call to 99B
$580    $7425   ADD      V4, #25         ; Add 37 to V4
$582    $C0F0   RND      V0, #F0         ; V0 = random & F0
$584    $FADB   UNKNOWN  FADB            ; Unknown Fxxx instruction
$586    $F23C   UNKNOWN  F23C            ; Unknown Fxxx instruction
$588    $79E8   ADD      V9, #E8         ; Add 232 to V9
$58A    $2EE0   CALL     $EE0            ; Call subroutine at EE0
$58C    $2688   CALL     $688            ; Call subroutine at 688
$58E    $FC13   UNKNOWN  FC13            ; Unknown Fxxx instruction
$590    $9A54   UNKNOWN  $9A54           ; Unknown 9xxx instruction
$592    $AC1E   LD       I, $C1E         ; Load C1E into I
$594    $B7DE   JP       V0, $7DE        ; Jump to V0 + 7DE
$596    $E7C3   UNKNOWN  $E7C3           ; Unknown Exxx instruction
$598    $6F8B   LD       VF, #8B         ; Load 139 into VF
$59A    $66FF   LD       V6, #FF         ; Load 255 into V6
$59C    $43F7   SNE      V3, #F7         ; Skip if V3 != 247
$59E    $B71B   JP       V0, $71B        ; Jump to V0 + 71B
$5A0    $1E4F   JP       $E4F            ; Jump to E4F
$5A2    $65EA   LD       V5, #EA         ; Load 234 into V5
$5A4    $75F9   ADD      V5, #F9         ; Add 249 to V5
$5A6    $BBBF   JP       V0, $BBF        ; Jump to V0 + BBF
$5A8    $4B66   SNE      VB, #66         ; Skip if VB != 102
$5AA    $9898   UNKNOWN  $9898           ; Unknown 9xxx instruction
$5AC    $41B3   SNE      V1, #B3         ; Skip if V1 != 179
$5AE    $8AE5   SUB      VA, VE          ; VA -= VE, VF = !borrow
$5B0    $ECE6   UNKNOWN  $ECE6           ; Unknown Exxx instruction
$5B2    $EC07   UNKNOWN  $EC07           ; Unknown Exxx instruction
$5B4    $6FF4   LD       VF, #F4         ; Load 244 into VF
$5B6    $2556   CALL     $556            ; Call subroutine at 556
$5B8    $D77F   DRW      V7, V7, #F      ; Draw 15-byte sprite at V7, V7
$5BA    $B2FD   JP       V0, $2FD        ; Jump to V0 + 2FD
$5BC    $0B51   SYS      $B51            ; System call to B51
$5BE    $6CEC   LD       VC, #EC         ; Load 236 into VC
$5C0    $8966   SHR      V9              ; V9 >>= 1, VF = LSB
$5C2    $CD6E   RND      VD, #6E         ; VD = random & 6E
$5C4    $34DC   SE       V4, #DC         ; Skip if V4 == 220
$5C6    $75C7   ADD      V5, #C7         ; Add 199 to V5
$5C8    $64BB   LD       V4, #BB         ; Load 187 into V4
$5CA    $5B4F   UNKNOWN  $5B4F           ; Unknown 5xxx instruction
$5CC    $FCFF   UNKNOWN  FCFF            ; Unknown Fxxx instruction
$5CE    $663F   LD       V6, #3F         ; Load 63 into V6
$5D0    $0EA7   SYS      $EA7            ; System call to EA7
$5D2    $7C15   ADD      VC, #15         ; Add 21 to VC
$5D4    $D889   DRW      V8, V8, #9      ; Draw 9-byte sprite at V8, V8
$5D6    $1D67   JP       $D67            ; Jump to D67
$5D8    $1748   JP       $748            ; Jump to 748
$5DA    $0C39   SYS      $C39            ; System call to C39
$5DC    $6D3B   LD       VD, #3B         ; Load 59 into VD
$5DE    $903D   UNKNOWN  $903D           ; Unknown 9xxx instruction
$5E0    $2A22   CALL     $A22            ; Call subroutine at A22
$5E2    $9DD3   UNKNOWN  $9DD3           ; Unknown 9xxx instruction
$5E4    $B891   JP       V0, $891        ; Jump to V0 + 891
$5E6    $4AF4   SNE      VA, #F4         ; Skip if VA != 244
$5E8    $C3B0   RND      V3, #B0         ; V3 = random & B0
$5EA    $29C8   CALL     $9C8            ; Call subroutine at 9C8
$5EC    $E2C9   UNKNOWN  $E2C9           ; Unknown Exxx instruction
$5EE    $3BE8   SE       VB, #E8         ; Skip if VB == 232
$5F0    $5D61   UNKNOWN  $5D61           ; Unknown 5xxx instruction
$5F2    $66C5   LD       V6, #C5         ; Load 197 into V6
$5F4    $91D8   UNKNOWN  $91D8           ; Unknown 9xxx instruction
$5F6    $27AA   CALL     $7AA            ; Call subroutine at 7AA
$5F8    $CEE1   RND      VE, #E1         ; VE = random & E1
$5FA    $CDB2   RND      VD, #B2         ; VD = random & B2
$5FC    $7AEB   ADD      VA, #EB         ; Add 235 to VA
$5FE    $9D6F   UNKNOWN  $9D6F           ; Unknown 9xxx instruction
$600    $6673   LD       V6, #73         ; Load 115 into V6
$602    $CDAE   RND      VD, #AE         ; VD = random & AE
$604    $B507   JP       V0, $507        ; Jump to V0 + 507
$606    $78A1   ADD      V8, #A1         ; Add 161 to V8
$608    $2524   CALL     $524            ; Call subroutine at 524
$60A    $4024   SNE      V0, #24         ; Skip if V0 != 36
$60C    $BA24   JP       V0, $A24        ; Jump to V0 + A24
$60E    $379D   SE       V7, #9D         ; Skip if V7 == 157
$610    $5989   UNKNOWN  $5989           ; Unknown 5xxx instruction
$612    $779A   ADD      V7, #9A         ; Add 154 to V7
$614    $85DE   SHL      V5              ; V5 <<= 1, VF = MSB
$616    $2B3E   CALL     $B3E            ; Call subroutine at B3E
$618    $B992   JP       V0, $992        ; Jump to V0 + 992
$61A    $B9E9   JP       V0, $9E9        ; Jump to V0 + 9E9
$61C    $2D58   CALL     $D58            ; Call subroutine at D58
$61E    $A12A   LD       I, $12A         ; Load 12A into I
$620    $B998   JP       V0, $998        ; Jump to V0 + 998
$622    $ECF6   UNKNOWN  $ECF6           ; Unknown Exxx instruction
$624    $17F8   JP       $7F8            ; Jump to 7F8
$626    $9E28   UNKNOWN  $9E28           ; Unknown 9xxx instruction
$628    $AB5A   LD       I, $B5A         ; Load B5A into I
$62A    $32B2   SE       V2, #B2         ; Skip if V2 == 178
$62C    $97A9   UNKNOWN  $97A9           ; Unknown 9xxx instruction
$62E    $8E3E   SHL      VE              ; VE <<= 1, VF = MSB
$630    $BC65   JP       V0, $C65        ; Jump to V0 + C65
$632    $AEFB   LD       I, $EFB         ; Load EFB into I
$634    $B7DA   JP       V0, $7DA        ; Jump to V0 + 7DA
$636    $764F   ADD      V6, #4F         ; Add 79 to V6
$638    $A421   LD       I, $421         ; Load 421 into I
$63A    $41C8   SNE      V1, #C8         ; Skip if V1 != 200
$63C    $7193   ADD      V1, #93         ; Add 147 to V1
$63E    $08AF   SYS      $8AF            ; System call to 8AF
$640    $834F   UNKNOWN  834F            ; Unknown 8xxx instruction
$642    $5C88   UNKNOWN  $5C88           ; Unknown 5xxx instruction
$644    $3FE3   SE       VF, #E3         ; Skip if VF == 227
$646    $3C94   SE       VC, #94         ; Skip if VC == 148
$648    $D735   DRW      V7, V3, #5      ; Draw 5-byte sprite at V7, V3
$64A    $AABF   LD       I, $ABF         ; Load ABF into I
$64C    $DC5D   DRW      VC, V5, #D      ; Draw 13-byte sprite at VC, V5
$64E    $4286   SNE      V2, #86         ; Skip if V2 != 134
$650    $B5A8   JP       V0, $5A8        ; Jump to V0 + 5A8
$652    $6E29   LD       VE, #29         ; Load 41 into VE
$654    $E52B   UNKNOWN  $E52B           ; Unknown Exxx instruction
$656    $AAB9   LD       I, $AB9         ; Load AB9 into I
$658    $774B   ADD      V7, #4B         ; Add 75 to V7
$65A    $6A5F   LD       VA, #5F         ; Load 95 into VA
$65C    $CB5D   RND      VB, #5D         ; VB = random & 5D
$65E    $6801   LD       V8, #01         ; Load 1 into V8
$660    $5EE0   SE       VE, VE          ; Skip if VE == VE
$662    $72EF   ADD      V2, #EF         ; Add 239 to V2
$664    $8C0D   UNKNOWN  8C0D            ; Unknown 8xxx instruction
$666    $3A29   SE       VA, #29         ; Skip if VA == 41
$668    $5FF4   UNKNOWN  $5FF4           ; Unknown 5xxx instruction
$66A    $91DD   UNKNOWN  $91DD           ; Unknown 9xxx instruction
$66C    $15DB   JP       $5DB            ; Jump to 5DB
$66E    $4C16   SNE      VC, #16         ; Skip if VC != 22
$670    $F475   UNKNOWN  F475            ; Unknown Fxxx instruction
$672    $01FA   SYS      $1FA            ; System call to 1FA
$674    $117E   JP       $17E            ; Jump to 17E
$676    $7E6F   ADD      VE, #6F         ; Add 111 to VE
$678    $8613   XOR      V6, V1          ; V6 ^= V1
$67A    $430A   SNE      V3, #0A         ; Skip if V3 != 10
$67C    $7D42   ADD      VD, #42         ; Add 66 to VD
$67E    $4D22   SNE      VD, #22         ; Skip if VD != 34
$680    $3ADD   SE       VA, #DD         ; Skip if VA == 221
$682    $305F   SE       V0, #5F         ; Skip if V0 == 95
$684    $23D2   CALL     $3D2            ; Call subroutine at 3D2
$686    $F73A   UNKNOWN  F73A            ; Unknown Fxxx instruction
$688    $0CFE   SYS      $CFE            ; System call to CFE
$68A    $56B3   UNKNOWN  $56B3           ; Unknown 5xxx instruction
$68C    $82B8   UNKNOWN  82B8            ; Unknown 8xxx instruction
$68E    $6B22   LD       VB, #22         ; Load 34 into VB
$690    $62DD   LD       V2, #DD         ; Load 221 into V2
$692    $4047   SNE      V0, #47         ; Skip if V0 != 71
$694    $DA0E   DRW      VA, V0, #E      ; Draw 14-byte sprite at VA, V0
$696    $BBB4   JP       V0, $BB4        ; Jump to V0 + BB4
$698    $EC03   UNKNOWN  $EC03           ; Unknown Exxx instruction
$69A    $C59A   RND      V5, #9A         ; V5 = random & 9A
$69C    $A4AD   LD       I, $4AD         ; Load 4AD into I
$69E    $7209   ADD      V2, #09         ; Add 9 to V2
$6A0    $96DE   UNKNOWN  $96DE           ; Unknown 9xxx instruction
$6A2    $4F3F   SNE      VF, #3F         ; Skip if VF != 63
$6A4    $D63F   DRW      V6, V3, #F      ; Draw 15-byte sprite at V6, V3
$6A6    $DBD2   DRW      VB, VD, #2      ; Draw 2-byte sprite at VB, VD
$6A8    $CABF   RND      VA, #BF         ; VA = random & BF
$6AA    $CAB7   RND      VA, #B7         ; VA = random & B7
$6AC    $842F   UNKNOWN  842F            ; Unknown 8xxx instruction
$6AE    $6A75   LD       VA, #75         ; Load 117 into VA
$6B0    $E9EB   UNKNOWN  $E9EB           ; Unknown Exxx instruction
$6B2    $5C37   UNKNOWN  $5C37           ; Unknown 5xxx instruction
$6B4    $4AA0   SNE      VA, #A0         ; Skip if VA != 160
$6B6    $AF07   LD       I, $F07         ; Load F07 into I
$6B8    $0256   SYS      $256            ; System call to 256
$6BA    $B358   JP       V0, $358        ; Jump to V0 + 358
$6BC    $1CFE   JP       $CFE            ; Jump to CFE
$6BE    $EC18   UNKNOWN  $EC18           ; Unknown Exxx instruction
$6C0    $7D15   ADD      VD, #15         ; Add 21 to VD
$6C2    $D0E9   DRW      V0, VE, #9      ; Draw 9-byte sprite at V0, VE
$6C4    $F784   UNKNOWN  F784            ; Unknown Fxxx instruction
$6C6    $60E7   LD       V0, #E7         ; Load 231 into V0
$6C8    $59E1   UNKNOWN  $59E1           ; Unknown 5xxx instruction
$6CA    $772A   ADD      V7, #2A         ; Add 42 to V7
$6CC    $BADB   JP       V0, $ADB        ; Jump to V0 + ADB
$6CE    $3855   SE       V8, #55         ; Skip if V8 == 85
$6D0    $0369   SYS      $369            ; System call to 369
$6D2    $D8A1   DRW      V8, VA, #1      ; Draw 1-byte sprite at V8, VA
$6D4    $0128   SYS      $128            ; System call to 128
$6D6    $4CCC   SNE      VC, #CC         ; Skip if VC != 204
$6D8    $39A4   SE       V9, #A4         ; Skip if V9 == 164
$6DA    $BADB   JP       V0, $ADB        ; Jump to V0 + ADB
$6DC    $3672   SE       V6, #72         ; Skip if V6 == 114
$6DE    $373C   SE       V7, #3C         ; Skip if V7 == 60
$6E0    $2D95   CALL     $D95            ; Call subroutine at D95
$6E2    $DE2D   DRW      VE, V2, #D      ; Draw 13-byte sprite at VE, V2
$6E4    $A186   LD       I, $186         ; Load 186 into I
$6E6    $0495   SYS      $495            ; System call to 495
$6E8    $F90B   UNKNOWN  F90B            ; Unknown Fxxx instruction
$6EA    $70C7   ADD      V0, #C7         ; Add 199 to V0
$6EC    $65CC   LD       V5, #CC         ; Load 204 into V5
$6EE    $7ED2   ADD      VE, #D2         ; Add 210 to VE
$6F0    $1525   JP       $525            ; Jump to 525
$6F2    $B1FA   JP       V0, $1FA        ; Jump to V0 + 1FA
$6F4    $B15A   JP       V0, $15A        ; Jump to V0 + 15A
$6F6    $F927   UNKNOWN  F927            ; Unknown Fxxx instruction
$6F8    $9FCB   UNKNOWN  $9FCB           ; Unknown 9xxx instruction
$6FA    $BEE6   JP       V0, $EE6        ; Jump to V0 + EE6
$6FC    $8611   OR       V6, V1          ; V6 |= V1
$6FE    $A981   LD       I, $981         ; Load 981 into I
$700    $7906   ADD      V9, #06         ; Add 6 to V9
$702    $8F81   OR       VF, V8          ; VF |= V8
$704    $4C4F   SNE      VC, #4F         ; Skip if VC != 79
$706    $F4F5   UNKNOWN  F4F5            ; Unknown Fxxx instruction
$708    $FFA5   UNKNOWN  FFA5            ; Unknown Fxxx instruction
$70A    $DEA1   DRW      VE, VA, #1      ; Draw 1-byte sprite at VE, VA
$70C    $D682   DRW      V6, V8, #2      ; Draw 2-byte sprite at V6, V8
$70E    $8753   XOR      V7, V5          ; V7 ^= V5
$710    $20FE   CALL     $0FE            ; Call subroutine at 0FE
$712    $9619   UNKNOWN  $9619           ; Unknown 9xxx instruction
$714    $0CB8   SYS      $CB8            ; System call to CB8
$716    $E40B   UNKNOWN  $E40B           ; Unknown Exxx instruction
$718    $1543   JP       $543            ; Jump to 543
$71A    $C86D   RND      V8, #6D         ; V8 = random & 6D
$71C    $4494   SNE      V4, #94         ; Skip if V4 != 148
$71E    $E543   UNKNOWN  $E543           ; Unknown Exxx instruction
$720    $6A3C   LD       VA, #3C         ; Load 60 into VA
$722    $4E68   SNE      VE, #68         ; Skip if VE != 104
$724    $20DA   CALL     $0DA            ; Call subroutine at 0DA
$726    $E7E1   UNKNOWN  $E7E1           ; Unknown Exxx instruction
$728    $535F   UNKNOWN  $535F           ; Unknown 5xxx instruction
$72A    $6E9E   LD       VE, #9E         ; Load 158 into VE
$72C    $74E9   ADD      V4, #E9         ; Add 233 to V4
$72E    $E034   UNKNOWN  $E034           ; Unknown Exxx instruction
$730    $25A5   CALL     $5A5            ; Call subroutine at 5A5
$732    $B01D   JP       V0, $01D        ; Jump to V0 + 01D
$734    $714B   ADD      V1, #4B         ; Add 75 to V1
$736    $C165   RND      V1, #65         ; V1 = random & 65
$738    $CC7C   RND      VC, #7C         ; VC = random & 7C
$73A    $D3EA   DRW      V3, VE, #A      ; Draw 10-byte sprite at V3, VE
$73C    $7B64   ADD      VB, #64         ; Add 100 to VB
$73E    $B1F6   JP       V0, $1F6        ; Jump to V0 + 1F6
$740    $7A66   ADD      VA, #66         ; Add 102 to VA
$742    $06DC   SYS      $6DC            ; System call to 6DC
$744    $F618   LD       ST, V6          ; Sound timer = V6
$746    $F36E   UNKNOWN  F36E            ; Unknown Fxxx instruction
$748    $BFBB   JP       V0, $FBB        ; Jump to V0 + FBB
$74A    $0DD3   SYS      $DD3            ; System call to DD3
$74C    $CB65   RND      VB, #65         ; VB = random & 65
$74E    $2629   CALL     $629            ; Call subroutine at 629
$750    $CBE5   RND      VB, #E5         ; VB = random & E5
$752    $48F4   SNE      V8, #F4         ; Skip if V8 != 244
$754    $6D91   LD       VD, #91         ; Load 145 into VD
$756    $C981   RND      V9, #81         ; V9 = random & 81
$758    $3D1B   SE       VD, #1B         ; Skip if VD == 27
$75A    $BFAB   JP       V0, $FAB        ; Jump to V0 + FAB
$75C    $EDC7   UNKNOWN  $EDC7           ; Unknown Exxx instruction
$75E    $3721   SE       V7, #21         ; Skip if V7 == 33
$760    $57BA   UNKNOWN  $57BA           ; Unknown 5xxx instruction
$762    $E8BC   UNKNOWN  $E8BC           ; Unknown Exxx instruction
$764    $6BE1   LD       VB, #E1         ; Load 225 into VB
$766    $D844   DRW      V8, V4, #4      ; Draw 4-byte sprite at V8, V4
$768    $E49A   UNKNOWN  $E49A           ; Unknown Exxx instruction
$76A    $E85B   UNKNOWN  $E85B           ; Unknown Exxx instruction
$76C    $B809   JP       V0, $809        ; Jump to V0 + 809
$76E    $AE5F   LD       I, $E5F         ; Load E5F into I
$770    $EC51   UNKNOWN  $EC51           ; Unknown Exxx instruction
$772    $E6FB   UNKNOWN  $E6FB           ; Unknown Exxx instruction
$774    $21B1   CALL     $1B1            ; Call subroutine at 1B1
$776    $6DE8   LD       VD, #E8         ; Load 232 into VD
$778    $3B52   SE       VB, #52         ; Skip if VB == 82
$77A    $C360   RND      V3, #60         ; V3 = random & 60
$77C    $890D   UNKNOWN  890D            ; Unknown 8xxx instruction
$77E    $48AC   SNE      V8, #AC         ; Skip if V8 != 172
$780    $1E44   JP       $E44            ; Jump to E44
$782    $83CC   UNKNOWN  83CC            ; Unknown 8xxx instruction
$784    $A376   LD       I, $376         ; Load 376 into I
$786    $4F9B   SNE      VF, #9B         ; Skip if VF != 155
$788    $F446   UNKNOWN  F446            ; Unknown Fxxx instruction
$78A    $E4D2   UNKNOWN  $E4D2           ; Unknown Exxx instruction
$78C    $63F4   LD       V3, #F4         ; Load 244 into V3
$78E    $F046   UNKNOWN  F046            ; Unknown Fxxx instruction
$790    $D841   DRW      V8, V4, #1      ; Draw 1-byte sprite at V8, V4
$792    $0CD4   SYS      $CD4            ; System call to CD4
$794    $87C2   AND      V7, VC          ; V7 &= VC
$796    $764D   ADD      V6, #4D         ; Add 77 to V6
$798    $AC1B   LD       I, $C1B         ; Load C1B into I
$79A    $8CC2   AND      VC, VC          ; VC &= VC
$79C    $1909   JP       $909            ; Jump to 909
$79E    $0273   SYS      $273            ; System call to 273
$7A0    $0BB9   SYS      $BB9            ; System call to BB9
$7A2    $D004   DRW      V0, V0, #4      ; Draw 4-byte sprite at V0, V0
$7A4    $946C   UNKNOWN  $946C           ; Unknown 9xxx instruction
$7A6    $FE3A   UNKNOWN  FE3A            ; Unknown Fxxx instruction
$7A8    $CB09   RND      VB, #09         ; VB = random & 09
$7AA    $390B   SE       V9, #0B         ; Skip if V9 == 11
$7AC    $8B9D   UNKNOWN  8B9D            ; Unknown 8xxx instruction
$7AE    $CFAA   RND      VF, #AA         ; VF = random & AA
$7B0    $4557   SNE      V5, #57         ; Skip if V5 != 87
$7B2    $14FB   JP       $4FB            ; Jump to 4FB
$7B4    $5FA7   UNKNOWN  $5FA7           ; Unknown 5xxx instruction
$7B6    $2696   CALL     $696            ; Call subroutine at 696
$7B8    $FF45   UNKNOWN  FF45            ; Unknown Fxxx instruction
$7BA    $638A   LD       V3, #8A         ; Load 138 into V3
$7BC    $5897   UNKNOWN  $5897           ; Unknown 5xxx instruction
$7BE    $6B95   LD       VB, #95         ; Load 149 into VB
$7C0    $B9DE   JP       V0, $9DE        ; Jump to V0 + 9DE
$7C2    $0CD8   SYS      $CD8            ; System call to CD8
$7C4    $9FC8   UNKNOWN  $9FC8           ; Unknown 9xxx instruction
$7C6    $DDDE   DRW      VD, VD, #E      ; Draw 14-byte sprite at VD, VD
$7C8    $2672   CALL     $672            ; Call subroutine at 672
$7CA    $877A   UNKNOWN  877A            ; Unknown 8xxx instruction
$7CC    $B719   JP       V0, $719        ; Jump to V0 + 719
$7CE    $23CB   CALL     $3CB            ; Call subroutine at 3CB
$7D0    $DF46   DRW      VF, V4, #6      ; Draw 6-byte sprite at VF, V4
$7D2    $4187   SNE      V1, #87         ; Skip if V1 != 135
$7D4    $2552   CALL     $552            ; Call subroutine at 552
$7D6    $5F1B   UNKNOWN  $5F1B           ; Unknown 5xxx instruction
$7D8    $ABB5   LD       I, $BB5         ; Load BB5 into I
$7DA    $F2C8   UNKNOWN  F2C8            ; Unknown Fxxx instruction
$7DC    $E808   UNKNOWN  $E808           ; Unknown Exxx instruction
$7DE    $7CB8   ADD      VC, #B8         ; Add 184 to VC
$7E0    $8D03   XOR      VD, V0          ; VD ^= V0
$7E2    $B54A   JP       V0, $54A        ; Jump to V0 + 54A
$7E4    $E8F4   UNKNOWN  $E8F4           ; Unknown Exxx instruction
$7E6    $3BFE   SE       VB, #FE         ; Skip if VB == 254
$7E8    $7D83   ADD      VD, #83         ; Add 131 to VD
$7EA    $CCF5   RND      VC, #F5         ; VC = random & F5
$7EC    $F211   UNKNOWN  F211            ; Unknown Fxxx instruction
$7EE    $1403   JP       $403            ; Jump to 403
$7F0    $5CF2   UNKNOWN  $5CF2           ; Unknown 5xxx instruction
$7F2    $BB6C   JP       V0, $B6C        ; Jump to V0 + B6C
$7F4    $7194   ADD      V1, #94         ; Add 148 to V1
$7F6    $E45F   UNKNOWN  $E45F           ; Unknown Exxx instruction
$7F8    $E904   UNKNOWN  $E904           ; Unknown Exxx instruction
$7FA    $3189   SE       V1, #89         ; Skip if V1 == 137
$7FC    $5AB6   UNKNOWN  $5AB6           ; Unknown 5xxx instruction
$7FE    $3CDC   SE       VC, #DC         ; Skip if VC == 220
$800    $EC5A   UNKNOWN  $EC5A           ; Unknown Exxx instruction
$802    $7F3E   ADD      VF, #3E         ; Add 62 to VF
$804    $46DF   SNE      V6, #DF         ; Skip if V6 != 223
$806    $111B   JP       $11B            ; Jump to 11B
$808    $FD15   LD       DT, VD          ; Delay timer = VD
$80A    $B2C6   JP       V0, $2C6        ; Jump to V0 + 2C6
$80C    $87CB   UNKNOWN  87CB            ; Unknown 8xxx instruction
$80E    $21A0   CALL     $1A0            ; Call subroutine at 1A0
$810    $583F   UNKNOWN  $583F           ; Unknown 5xxx instruction
$812    $9EA0   SNE      VE, VA          ; Skip if VE != VA
$814    $E588   UNKNOWN  $E588           ; Unknown Exxx instruction
$816    $9375   UNKNOWN  $9375           ; Unknown 9xxx instruction
$818    $1B2D   JP       $B2D            ; Jump to B2D
$81A    $7B0E   ADD      VB, #0E         ; Add 14 to VB
$81C    $51E0   SE       V1, VE          ; Skip if V1 == VE
$81E    $D865   DRW      V8, V6, #5      ; Draw 5-byte sprite at V8, V6
$820    $2D84   CALL     $D84            ; Call subroutine at D84
$822    $86B6   SHR      V6              ; V6 >>= 1, VF = LSB
$824    $363D   SE       V6, #3D         ; Skip if V6 == 61
$826    $1193   JP       $193            ; Jump to 193
$828    $EF19   UNKNOWN  $EF19           ; Unknown Exxx instruction
$82A    $B681   JP       V0, $681        ; Jump to V0 + 681
$82C    $022C   SYS      $22C            ; System call to 22C
$82E    $C7FE   RND      V7, #FE         ; V7 = random & FE
$830    $6E5C   LD       VE, #5C         ; Load 92 into VE
$832    $E9BA   UNKNOWN  $E9BA           ; Unknown Exxx instruction
$834    $C273   RND      V2, #73         ; V2 = random & 73
$836    $F774   UNKNOWN  F774            ; Unknown Fxxx instruction
$838    $BC35   JP       V0, $C35        ; Jump to V0 + C35
$83A    $DD2E   DRW      VD, V2, #E      ; Draw 14-byte sprite at VD, V2
$83C    $2282   CALL     $282            ; Call subroutine at 282
$83E    $7731   ADD      V7, #31         ; Add 49 to V7
$840    $4773   SNE      V7, #73         ; Skip if V7 != 115
$842    $AA88   LD       I, $A88         ; Load A88 into I
$844    $3AA1   SE       VA, #A1         ; Skip if VA == 161
$846    $FAC0   UNKNOWN  FAC0            ; Unknown Fxxx instruction
$848    $272B   CALL     $72B            ; Call subroutine at 72B
$84A    $4F18   SNE      VF, #18         ; Skip if VF != 24
$84C    $83BB   UNKNOWN  83BB            ; Unknown 8xxx instruction
$84E    $50F3   UNKNOWN  $50F3           ; Unknown 5xxx instruction
$850    $84D9   UNKNOWN  84D9            ; Unknown 8xxx instruction
$852    $5D79   UNKNOWN  $5D79           ; Unknown 5xxx instruction
$854    $3FE2   SE       VF, #E2         ; Skip if VF == 226
$856    $5283   UNKNOWN  $5283           ; Unknown 5xxx instruction
$858    $395B   SE       V9, #5B         ; Skip if V9 == 91
$85A    $BD26   JP       V0, $D26        ; Jump to V0 + D26
$85C    $F8A9   UNKNOWN  F8A9            ; Unknown Fxxx instruction
$85E    $3CB8   SE       VC, #B8         ; Skip if VC == 184
$860    $E01D   UNKNOWN  $E01D           ; Unknown Exxx instruction
$862    $8DAB   UNKNOWN  8DAB            ; Unknown 8xxx instruction
$864    $18D3   JP       $8D3            ; Jump to 8D3
$866    $EF6F   UNKNOWN  $EF6F           ; Unknown Exxx instruction
$868    $1DC0   JP       $DC0            ; Jump to DC0
$86A    $BAEF   JP       V0, $AEF        ; Jump to V0 + AEF
$86C    $6CF1   LD       VC, #F1         ; Load 241 into VC
$86E    $0604   SYS      $604            ; System call to 604
$870    $EC65   UNKNOWN  $EC65           ; Unknown Exxx instruction
$872    $4651   SNE      V6, #51         ; Skip if V6 != 81
$874    $99BE   UNKNOWN  $99BE           ; Unknown 9xxx instruction
$876    $6C55   LD       VC, #55         ; Load 85 into VC
$878    $4259   SNE      V2, #59         ; Skip if V2 != 89
$87A    $7F76   ADD      VF, #76         ; Add 118 to VF
$87C    $BDC4   JP       V0, $DC4        ; Jump to V0 + DC4
$87E    $B40F   JP       V0, $40F        ; Jump to V0 + 40F
$880    $8E16   SHR      VE              ; VE >>= 1, VF = LSB
$882    $52DA   UNKNOWN  $52DA           ; Unknown 5xxx instruction
$884    $7CE6   ADD      VC, #E6         ; Add 230 to VC
$886    $A655   LD       I, $655         ; Load 655 into I
$888    $D8CA   DRW      V8, VC, #A      ; Draw 10-byte sprite at V8, VC
$88A    $314C   SE       V1, #4C         ; Skip if V1 == 76
$88C    $BB6E   JP       V0, $B6E        ; Jump to V0 + B6E
$88E    $79C6   ADD      V9, #C6         ; Add 198 to V9
$890    $5657   UNKNOWN  $5657           ; Unknown 5xxx instruction
$892    $4742   SNE      V7, #42         ; Skip if V7 != 66
$894    $A24B   LD       I, $24B         ; Load 24B into I
$896    $AF4D   LD       I, $F4D         ; Load F4D into I
$898    $4F6A   SNE      VF, #6A         ; Skip if VF != 106
$89A    $CFB7   RND      VF, #B7         ; VF = random & B7
$89C    $A681   LD       I, $681         ; Load 681 into I
$89E    $61F1   LD       V1, #F1         ; Load 241 into V1
$8A0    $7883   ADD      V8, #83         ; Add 131 to V8
$8A2    $1568   JP       $568            ; Jump to 568
$8A4    $C713   RND      V7, #13         ; V7 = random & 13
$8A6    $87D7   SUBN     V7, VD          ; V7 = VD - V7, VF = !borrow
$8A8    $003B   SYS      $03B            ; System call to 03B
$8AA    $5EBE   UNKNOWN  $5EBE           ; Unknown 5xxx instruction
$8AC    $63ED   LD       V3, #ED         ; Load 237 into V3
$8AE    $B847   JP       V0, $847        ; Jump to V0 + 847
$8B0    $3FA9   SE       VF, #A9         ; Skip if VF == 169
$8B2    $EDCD   UNKNOWN  $EDCD           ; Unknown Exxx instruction
$8B4    $6AD6   LD       VA, #D6         ; Load 214 into VA
$8B6    $89D7   SUBN     V9, VD          ; V9 = VD - V9, VF = !borrow
$8B8    $1961   JP       $961            ; Jump to 961
$8BA    $8320   LD       V3, V2          ; V3 = V2
$8BC    $5026   UNKNOWN  $5026           ; Unknown 5xxx instruction
$8BE    $E555   UNKNOWN  $E555           ; Unknown Exxx instruction
$8C0    $B65C   JP       V0, $65C        ; Jump to V0 + 65C
$8C2    $7815   ADD      V8, #15         ; Add 21 to V8
$8C4    $6FDE   LD       VF, #DE         ; Load 222 into VF
$8C6    $5A74   UNKNOWN  $5A74           ; Unknown 5xxx instruction
$8C8    $6514   LD       V5, #14         ; Load 20 into V5
$8CA    $AB58   LD       I, $B58         ; Load B58 into I
$8CC    $85B9   UNKNOWN  85B9            ; Unknown 8xxx instruction
$8CE    $EBB4   UNKNOWN  $EBB4           ; Unknown Exxx instruction
$8D0    $A49C   LD       I, $49C         ; Load 49C into I
$8D2    $6135   LD       V1, #35         ; Load 53 into V1
$8D4    $13F7   JP       $3F7            ; Jump to 3F7
$8D6    $655C   LD       V5, #5C         ; Load 92 into V5
$8D8    $6862   LD       V8, #62         ; Load 98 into V8
$8DA    $510D   UNKNOWN  $510D           ; Unknown 5xxx instruction
$8DC    $FF6E   UNKNOWN  FF6E            ; Unknown Fxxx instruction
$8DE    $F480   UNKNOWN  F480            ; Unknown Fxxx instruction
$8E0    $B298   JP       V0, $298        ; Jump to V0 + 298
$8E2    $5E5F   UNKNOWN  $5E5F           ; Unknown 5xxx instruction
$8E4    $8CB2   AND      VC, VB          ; VC &= VB
$8E6    $72B6   ADD      V2, #B6         ; Add 182 to V2
$8E8    $2617   CALL     $617            ; Call subroutine at 617
$8EA    $320A   SE       V2, #0A         ; Skip if V2 == 10
$8EC    $0911   SYS      $911            ; System call to 911
$8EE    $C888   RND      V8, #88         ; V8 = random & 88
$8F0    $179D   JP       $79D            ; Jump to 79D
$8F2    $2965   CALL     $965            ; Call subroutine at 965
$8F4    $118A   JP       $18A            ; Jump to 18A
$8F6    $4E43   SNE      VE, #43         ; Skip if VE != 67
$8F8    $0C5B   SYS      $C5B            ; System call to C5B
$8FA    $0415   SYS      $415            ; System call to 415
$8FC    $5DD2   UNKNOWN  $5DD2           ; Unknown 5xxx instruction
$8FE    $6848   LD       V8, #48         ; Load 72 into V8
$900    $12A4   JP       $2A4            ; Jump to 2A4
$902    $2F6D   CALL     $F6D            ; Call subroutine at F6D
$904    $4AEE   SNE      VA, #EE         ; Skip if VA != 238
$906    $0E0C   SYS      $E0C            ; System call to E0C
$908    $8F7C   UNKNOWN  8F7C            ; Unknown 8xxx instruction
$90A    $336D   SE       V3, #6D         ; Skip if V3 == 109
$90C    $7C8A   ADD      VC, #8A         ; Add 138 to VC
$90E    $AC0F   LD       I, $C0F         ; Load C0F into I
$910    $24EF   CALL     $4EF            ; Call subroutine at 4EF
$912    $B14B   JP       V0, $14B        ; Jump to V0 + 14B
$914    $0DFC   SYS      $DFC            ; System call to DFC
$916    $A8DA   LD       I, $8DA         ; Load 8DA into I
$918    $8C0F   UNKNOWN  8C0F            ; Unknown 8xxx instruction
$91A    $1263   JP       $263            ; Jump to 263
$91C    $30AB   SE       V0, #AB         ; Skip if V0 == 171
$91E    $A8A0   LD       I, $8A0         ; Load 8A0 into I
$920    $3741   SE       V7, #41         ; Skip if V7 == 65
$922    $90BB   UNKNOWN  $90BB           ; Unknown 9xxx instruction
$924    $D101   DRW      V1, V0, #1      ; Draw 1-byte sprite at V1, V0
$926    $28F2   CALL     $8F2            ; Call subroutine at 8F2
$928    $416F   SNE      V1, #6F         ; Skip if V1 != 111
$92A    $C394   RND      V3, #94         ; V3 = random & 94
$92C    $DD6A   DRW      VD, V6, #A      ; Draw 10-byte sprite at VD, V6
$92E    $605D   LD       V0, #5D         ; Load 93 into V0
$930    $1903   JP       $903            ; Jump to 903
$932    $77BA   ADD      V7, #BA         ; Add 186 to V7
$934    $35AF   SE       V5, #AF         ; Skip if V5 == 175
$936    $4749   SNE      V7, #49         ; Skip if V7 != 73
$938    $4D45   SNE      VD, #45         ; Skip if VD != 69
$93A    $53C6   UNKNOWN  $53C6           ; Unknown 5xxx instruction
$93C    $85B4   ADD      V5, VB          ; V5 += VB, VF = carry
$93E    $DB59   DRW      VB, V5, #9      ; Draw 9-byte sprite at VB, V5
$940    $2A2F   CALL     $A2F            ; Call subroutine at A2F
$942    $56C7   UNKNOWN  $56C7           ; Unknown 5xxx instruction
$944    $0D6B   SYS      $D6B            ; System call to D6B
$946    $8568   UNKNOWN  8568            ; Unknown 8xxx instruction
$948    $861D   UNKNOWN  861D            ; Unknown 8xxx instruction
$94A    $12AF   JP       $2AF            ; Jump to 2AF
$94C    $A73D   LD       I, $73D         ; Load 73D into I
$94E    $CCCD   RND      VC, #CD         ; VC = random & CD
$950    $44DF   SNE      V4, #DF         ; Skip if V4 != 223
$952    $F086   UNKNOWN  F086            ; Unknown Fxxx instruction
$954    $5F31   UNKNOWN  $5F31           ; Unknown 5xxx instruction
$956    $BCC4   JP       V0, $CC4        ; Jump to V0 + CC4
$958    $936C   UNKNOWN  $936C           ; Unknown 9xxx instruction
$95A    $3465   SE       V4, #65         ; Skip if V4 == 101
$95C    $F32F   UNKNOWN  F32F            ; Unknown Fxxx instruction
$95E    $4F05   SNE      VF, #05         ; Skip if VF != 5
$960    $4A58   SNE      VA, #58         ; Skip if VA != 88
$962    $6046   LD       V0, #46         ; Load 70 into V0
$964    $DECE   DRW      VE, VC, #E      ; Draw 14-byte sprite at VE, VC
$966    $A517   LD       I, $517         ; Load 517 into I
$968    $2C6A   CALL     $C6A            ; Call subroutine at C6A
$96A    $5727   UNKNOWN  $5727           ; Unknown 5xxx instruction
$96C    $4C51   SNE      VC, #51         ; Skip if VC != 81
$96E    $380B   SE       V8, #0B         ; Skip if V8 == 11
$970    $230D   CALL     $30D            ; Call subroutine at 30D
$972    $D6AF   DRW      V6, VA, #F      ; Draw 15-byte sprite at V6, VA
$974    $FF0C   UNKNOWN  FF0C            ; Unknown Fxxx instruction
$976    $8ACC   UNKNOWN  8ACC            ; Unknown 8xxx instruction
$978    $0A83   SYS      $A83            ; System call to A83
$97A    $8409   UNKNOWN  8409            ; Unknown 8xxx instruction
$97C    $7069   ADD      V0, #69         ; Add 105 to V0
$97E    $FABC   UNKNOWN  FABC            ; Unknown Fxxx instruction
$980    $1870   JP       $870            ; Jump to 870
$982    $34CF   SE       V4, #CF         ; Skip if V4 == 207
$984    $EFC7   UNKNOWN  $EFC7           ; Unknown Exxx instruction
$986    $74F0   ADD      V4, #F0         ; Add 240 to V4
$988    $81BB   UNKNOWN  81BB            ; Unknown 8xxx instruction
$98A    $D36D   DRW      V3, V6, #D      ; Draw 13-byte sprite at V3, V6
$98C    $E9DD   UNKNOWN  $E9DD           ; Unknown Exxx instruction
$98E    $8067   SUBN     V0, V6          ; V0 = V6 - V0, VF = !borrow
$990    $191A   JP       $91A            ; Jump to 91A
$992    $6787   LD       V7, #87         ; Load 135 into V7
$994    $E3AD   UNKNOWN  $E3AD           ; Unknown Exxx instruction
$996    $FCEB   UNKNOWN  FCEB            ; Unknown Fxxx instruction
$998    $AE19   LD       I, $E19         ; Load E19 into I
$99A    $9EE4   UNKNOWN  $9EE4           ; Unknown 9xxx instruction
$99C    $E278   UNKNOWN  $E278           ; Unknown Exxx instruction
$99E    $3336   SE       V3, #36         ; Skip if V3 == 54
$9A0    $6157   LD       V1, #57         ; Load 87 into V1
$9A2    $9903   UNKNOWN  $9903           ; Unknown 9xxx instruction
$9A4    $2162   CALL     $162            ; Call subroutine at 162
$9A6    $5AD0   SE       VA, VD          ; Skip if VA == VD
$9A8    $8CB0   LD       VC, VB          ; VC = VB
$9AA    $8C35   SUB      VC, V3          ; VC -= V3, VF = !borrow
$9AC    $C0D9   RND      V0, #D9         ; V0 = random & D9
$9AE    $AD57   LD       I, $D57         ; Load D57 into I
$9B0    $FD20   UNKNOWN  FD20            ; Unknown Fxxx instruction
$9B2    $0B52   SYS      $B52            ; System call to B52
$9B4    $D23C   DRW      V2, V3, #C      ; Draw 12-byte sprite at V2, V3
$9B6    $53B8   UNKNOWN  $53B8           ; Unknown 5xxx instruction
$9B8    $5AD1   UNKNOWN  $5AD1           ; Unknown 5xxx instruction
$9BA    $5070   SE       V0, V7          ; Skip if V0 == V7
$9BC    $705A   ADD      V0, #5A         ; Add 90 to V0
$9BE    $6DAF   LD       VD, #AF         ; Load 175 into VD
$9C0    $E284   UNKNOWN  $E284           ; Unknown Exxx instruction
$9C2    $1182   JP       $182            ; Jump to 182
$9C4    $30DD   SE       V0, #DD         ; Skip if V0 == 221
$9C6    $A08C   LD       I, $08C         ; Load 08C into I
$9C8    $B445   JP       V0, $445        ; Jump to V0 + 445
$9CA    $35CB   SE       V5, #CB         ; Skip if V5 == 203
$9CC    $A3DD   LD       I, $3DD         ; Load 3DD into I
$9CE    $CFFD   RND      VF, #FD         ; VF = random & FD
$9D0    $6017   LD       V0, #17         ; Load 23 into V0
$9D2    $7F11   ADD      VF, #11         ; Add 17 to VF
$9D4    $9F84   UNKNOWN  $9F84           ; Unknown 9xxx instruction
$9D6    $C7BC   RND      V7, #BC         ; V7 = random & BC
$9D8    $6CF8   LD       VC, #F8         ; Load 248 into VC
$9DA    $A56F   LD       I, $56F         ; Load 56F into I
$9DC    $A61E   LD       I, $61E         ; Load 61E into I
$9DE    $3B1D   SE       VB, #1D         ; Skip if VB == 29
$9E0    $66E1   LD       V6, #E1         ; Load 225 into V6
$9E2    $7484   ADD      V4, #84         ; Add 132 to V4
$9E4    $2808   CALL     $808            ; Call subroutine at 808
$9E6    $D414   DRW      V4, V1, #4      ; Draw 4-byte sprite at V4, V1
$9E8    $48D4   SNE      V8, #D4         ; Skip if V8 != 212
$9EA    $1840   JP       $840            ; Jump to 840
$9EC    $83D4   ADD      V3, VD          ; V3 += VD, VF = carry
$9EE    $C908   RND      V9, #08         ; V9 = random & 08
$9F0    $4DD5   SNE      VD, #D5         ; Skip if VD != 213
$9F2    $4DBF   SNE      VD, #BF         ; Skip if VD != 191
$9F4    $BE61   JP       V0, $E61        ; Jump to V0 + E61
$9F6    $402F   SNE      V0, #2F         ; Skip if V0 != 47
$9F8    $07F7   SYS      $7F7            ; System call to 7F7
$9FA    $9F45   UNKNOWN  $9F45           ; Unknown 9xxx instruction
$9FC    $4DEE   SNE      VD, #EE         ; Skip if VD != 238
$9FE    $7E79   ADD      VE, #79         ; Add 121 to VE
$A00    $DE77   DRW      VE, V7, #7      ; Draw 7-byte sprite at VE, V7
$A02    $FED2   UNKNOWN  FED2            ; Unknown Fxxx instruction
$A04    $76DD   ADD      V6, #DD         ; Add 221 to V6
$A06    $D098   DRW      V0, V9, #8      ; Draw 8-byte sprite at V0, V9
$A08    $B6F4   JP       V0, $6F4        ; Jump to V0 + 6F4
$A0A    $6447   LD       V4, #47         ; Load 71 into V4
$A0C    $154D   JP       $54D            ; Jump to 54D
$A0E    $C7BB   RND      V7, #BB         ; V7 = random & BB
$A10    $E2B6   UNKNOWN  $E2B6           ; Unknown Exxx instruction
$A12    $58BD   UNKNOWN  $58BD           ; Unknown 5xxx instruction
$A14    $D166   DRW      V1, V6, #6      ; Draw 6-byte sprite at V1, V6
$A16    $61FC   LD       V1, #FC         ; Load 252 into V1
$A18    $1721   JP       $721            ; Jump to 721
$A1A    $BCAB   JP       V0, $CAB        ; Jump to V0 + CAB
$A1C    $5445   UNKNOWN  $5445           ; Unknown 5xxx instruction
$A1E    $E705   UNKNOWN  $E705           ; Unknown Exxx instruction
$A20    $C3D4   RND      V3, #D4         ; V3 = random & D4
$A22    $DBDB   DRW      VB, VD, #B      ; Draw 11-byte sprite at VB, VD
$A24    $C8BF   RND      V8, #BF         ; V8 = random & BF
$A26    $76A2   ADD      V6, #A2         ; Add 162 to V6
$A28    $C3D8   RND      V3, #D8         ; V3 = random & D8
$A2A    $D798   DRW      V7, V9, #8      ; Draw 8-byte sprite at V7, V9
$A2C    $621E   LD       V2, #1E         ; Load 30 into V2
$A2E    $DA52   DRW      VA, V5, #2      ; Draw 2-byte sprite at VA, V5
$A30    $F3DF   UNKNOWN  F3DF            ; Unknown Fxxx instruction
$A32    $B3BE   JP       V0, $3BE        ; Jump to V0 + 3BE
$A34    $B7D5   JP       V0, $7D5        ; Jump to V0 + 7D5
$A36    $B9E9   JP       V0, $9E9        ; Jump to V0 + 9E9
$A38    $59B8   UNKNOWN  $59B8           ; Unknown 5xxx instruction
$A3A    $9E97   UNKNOWN  $9E97           ; Unknown 9xxx instruction
$A3C    $F3A1   UNKNOWN  F3A1            ; Unknown Fxxx instruction
$A3E    $202A   CALL     $02A            ; Call subroutine at 02A
$A40    $67E1   LD       V7, #E1         ; Load 225 into V7
$A42    $D804   DRW      V8, V0, #4      ; Draw 4-byte sprite at V8, V0
$A44    $8ED4   ADD      VE, VD          ; VE += VD, VF = carry
$A46    $6918   LD       V9, #18         ; Load 24 into V9
$A48    $8D50   LD       VD, V5          ; VD = V5
$A4A    $DE08   DRW      VE, V0, #8      ; Draw 8-byte sprite at VE, V0
$A4C    $4A6D   SNE      VA, #6D         ; Skip if VA != 109
$A4E    $1873   JP       $873            ; Jump to 873
$A50    $DF27   DRW      VF, V2, #7      ; Draw 7-byte sprite at VF, V2
$A52    $F348   UNKNOWN  F348            ; Unknown Fxxx instruction
$A54    $9F19   UNKNOWN  $9F19           ; Unknown 9xxx instruction
$A56    $1F0E   JP       $F0E            ; Jump to F0E
$A58    $8718   UNKNOWN  8718            ; Unknown 8xxx instruction
$A5A    $3481   SE       V4, #81         ; Skip if V4 == 129
$A5C    $F7AC   UNKNOWN  F7AC            ; Unknown Fxxx instruction
$A5E    $57A0   SE       V7, VA          ; Skip if V7 == VA
$A60    $EDB1   UNKNOWN  $EDB1           ; Unknown Exxx instruction
$A62    $CECC   RND      VE, #CC         ; VE = random & CC
$A64    $6D2D   LD       VD, #2D         ; Load 45 into VD
$A66    $F73B   UNKNOWN  F73B            ; Unknown Fxxx instruction
$A68    $D324   DRW      V3, V2, #4      ; Draw 4-byte sprite at V3, V2
$A6A    $5B00   SE       VB, V0          ; Skip if VB == V0
$A6C    $5FC3   UNKNOWN  $5FC3           ; Unknown 5xxx instruction
$A6E    $B73C   JP       V0, $73C        ; Jump to V0 + 73C
$A70    $10CB   JP       $0CB            ; Jump to 0CB
$A72    $1FBD   JP       $FBD            ; Jump to FBD
$A74    $DACE   DRW      VA, VC, #E      ; Draw 14-byte sprite at VA, VC
$A76    $9708   UNKNOWN  $9708           ; Unknown 9xxx instruction
$A78    $B102   JP       V0, $102        ; Jump to V0 + 102
$A7A    $2023   CALL     $023            ; Call subroutine at 023
$A7C    $01BC   SYS      $1BC            ; System call to 1BC
$A7E    $DC64   DRW      VC, V6, #4      ; Draw 4-byte sprite at VC, V6
$A80    $1DAE   JP       $DAE            ; Jump to DAE
$A82    $25D5   CALL     $5D5            ; Call subroutine at 5D5
$A84    $DBB0   DRW      VB, VB, #0      ; Draw 0-byte sprite at VB, VB
$A86    $6EF4   LD       VE, #F4         ; Load 244 into VE
$A88    $3F8D   SE       VF, #8D         ; Skip if VF == 141
$A8A    $6701   LD       V7, #01         ; Load 1 into V7
$A8C    $5DF8   UNKNOWN  $5DF8           ; Unknown 5xxx instruction
$A8E    $B4BA   JP       V0, $4BA        ; Jump to V0 + 4BA
$A90    $DDE2   DRW      VD, VE, #2      ; Draw 2-byte sprite at VD, VE
$A92    $7B9E   ADD      VB, #9E         ; Add 158 to VB
$A94    $4969   SNE      V9, #69         ; Skip if V9 != 105
$A96    $AAB3   LD       I, $AB3         ; Load AB3 into I
$A98    $C0E4   RND      V0, #E4         ; V0 = random & E4
$A9A    $7C69   ADD      VC, #69         ; Add 105 to VC
$A9C    $1A42   JP       $A42            ; Jump to A42
$A9E    $9157   UNKNOWN  $9157           ; Unknown 9xxx instruction
$AA0    $19BE   JP       $9BE            ; Jump to 9BE
$AA2    $67AB   LD       V7, #AB         ; Load 171 into V7
$AA4    $E7F2   UNKNOWN  $E7F2           ; Unknown Exxx instruction
$AA6    $7D49   ADD      VD, #49         ; Add 73 to VD
$AA8    $C782   RND      V7, #82         ; V7 = random & 82
$AAA    $9C11   UNKNOWN  $9C11           ; Unknown 9xxx instruction
$AAC    $28C6   CALL     $8C6            ; Call subroutine at 8C6
$AAE    $75FF   ADD      V5, #FF         ; Add 255 to V5
$AB0    $43A5   SNE      V3, #A5         ; Skip if V3 != 165
$AB2    $DE3B   DRW      VE, V3, #B      ; Draw 11-byte sprite at VE, V3
$AB4    $A49E   LD       I, $49E         ; Load 49E into I
$AB6    $D005   DRW      V0, V0, #5      ; Draw 5-byte sprite at V0, V0
$AB8    $FF62   UNKNOWN  FF62            ; Unknown Fxxx instruction
$ABA    $508F   UNKNOWN  $508F           ; Unknown 5xxx instruction
$ABC    $E8EF   UNKNOWN  $E8EF           ; Unknown Exxx instruction
$ABE    $04AF   SYS      $4AF            ; System call to 4AF
$AC0    $E272   UNKNOWN  $E272           ; Unknown Exxx instruction
$AC2    $230D   CALL     $30D            ; Call subroutine at 30D
$AC4    $C6EF   RND      V6, #EF         ; V6 = random & EF
$AC6    $8D62   AND      VD, V6          ; VD &= V6
$AC8    $57C8   UNKNOWN  $57C8           ; Unknown 5xxx instruction
$ACA    $3309   SE       V3, #09         ; Skip if V3 == 9
$ACC    $8FE9   UNKNOWN  8FE9            ; Unknown 8xxx instruction
$ACE    $B030   JP       V0, $030        ; Jump to V0 + 030
$AD0    $B8FC   JP       V0, $8FC        ; Jump to V0 + 8FC
$AD2    $867F   UNKNOWN  867F            ; Unknown 8xxx instruction
$AD4    $A93C   LD       I, $93C         ; Load 93C into I
$AD6    $0A15   SYS      $A15            ; System call to A15
$AD8    $4D5B   SNE      VD, #5B         ; Skip if VD != 91
$ADA    $41E7   SNE      V1, #E7         ; Skip if V1 != 231
$ADC    $77D2   ADD      V7, #D2         ; Add 210 to V7
$ADE    $BB70   JP       V0, $B70        ; Jump to V0 + B70
$AE0    $4BBC   SNE      VB, #BC         ; Skip if VB != 188
$AE2    $17D4   JP       $7D4            ; Jump to 7D4
$AE4    $226B   CALL     $26B            ; Call subroutine at 26B
$AE6    $8F6D   UNKNOWN  8F6D            ; Unknown 8xxx instruction
$AE8    $10F5   JP       $0F5            ; Jump to 0F5
$AEA    $246F   CALL     $46F            ; Call subroutine at 46F
$AEC    $7E3C   ADD      VE, #3C         ; Add 60 to VE
$AEE    $19A2   JP       $9A2            ; Jump to 9A2
$AF0    $CF7C   RND      VF, #7C         ; VF = random & 7C
$AF2    $165E   JP       $65E            ; Jump to 65E
$AF4    $3FF8   SE       VF, #F8         ; Skip if VF == 248
$AF6    $335B   SE       V3, #5B         ; Skip if V3 == 91
$AF8    $117D   JP       $17D            ; Jump to 17D
$AFA    $D174   DRW      V1, V7, #4      ; Draw 4-byte sprite at V1, V7
$AFC    $0342   SYS      $342            ; System call to 342
$AFE    $942E   UNKNOWN  $942E           ; Unknown 9xxx instruction
$B00    $3F0D   SE       VF, #0D         ; Skip if VF == 13
$B02    $EAA0   UNKNOWN  $EAA0           ; Unknown Exxx instruction
$B04    $B3E4   JP       V0, $3E4        ; Jump to V0 + 3E4
$B06    $2D29   CALL     $D29            ; Call subroutine at D29
$B08    $AC3F   LD       I, $C3F         ; Load C3F into I
$B0A    $1C6F   JP       $C6F            ; Jump to C6F
$B0C    $084F   SYS      $84F            ; System call to 84F
$B0E    $31F6   SE       V1, #F6         ; Skip if V1 == 246
$B10    $B4B2   JP       V0, $4B2        ; Jump to V0 + 4B2
$B12    $6173   LD       V1, #73         ; Load 115 into V1
$B14    $3642   SE       V6, #42         ; Skip if V6 == 66
$B16    $B50F   JP       V0, $50F        ; Jump to V0 + 50F
$B18    $6FB6   LD       VF, #B6         ; Load 182 into VF
$B1A    $01C3   SYS      $1C3            ; System call to 1C3
$B1C    $1047   JP       $047            ; Jump to 047
$B1E    $63CD   LD       V3, #CD         ; Load 205 into V3
$B20    $5084   UNKNOWN  $5084           ; Unknown 5xxx instruction
$B22    $B850   JP       V0, $850        ; Jump to V0 + 850
$B24    $9E54   UNKNOWN  $9E54           ; Unknown 9xxx instruction
$B26    $E666   UNKNOWN  $E666           ; Unknown Exxx instruction
$B28    $D43D   DRW      V4, V3, #D      ; Draw 13-byte sprite at V4, V3
$B2A    $DB58   DRW      VB, V5, #8      ; Draw 8-byte sprite at VB, V5
$B2C    $84BE   SHL      V4              ; V4 <<= 1, VF = MSB
$B2E    $2DA0   CALL     $DA0            ; Call subroutine at DA0
$B30    $F13E   UNKNOWN  F13E            ; Unknown Fxxx instruction
$B32    $8BCD   UNKNOWN  8BCD            ; Unknown 8xxx instruction
$B34    $93DF   UNKNOWN  $93DF           ; Unknown 9xxx instruction
$B36    $2F25   CALL     $F25            ; Call subroutine at F25
$B38    $614D   LD       V1, #4D         ; Load 77 into V1
$B3A    $6548   LD       V5, #48         ; Load 72 into V5
$B3C    $5FD8   UNKNOWN  $5FD8           ; Unknown 5xxx instruction
$B3E    $BC3B   JP       V0, $C3B        ; Jump to V0 + C3B
$B40    $9BCA   UNKNOWN  $9BCA           ; Unknown 9xxx instruction
$B42    $BDC9   JP       V0, $DC9        ; Jump to V0 + DC9
$B44    $B178   JP       V0, $178        ; Jump to V0 + 178
$B46    $B62B   JP       V0, $62B        ; Jump to V0 + 62B
$B48    $F3F1   UNKNOWN  F3F1            ; Unknown Fxxx instruction
$B4A    $F0FF   UNKNOWN  F0FF            ; Unknown Fxxx instruction
$B4C    $8CB2   AND      VC, VB          ; VC &= VB
$B4E    $1DFA   JP       $DFA            ; Jump to DFA
$B50    $2A6D   CALL     $A6D            ; Call subroutine at A6D
$B52    $16A1   JP       $6A1            ; Jump to 6A1
$B54    $836C   UNKNOWN  836C            ; Unknown 8xxx instruction
$B56    $66F1   LD       V6, #F1         ; Load 241 into V6
$B58    $5B04   UNKNOWN  $5B04           ; Unknown 5xxx instruction
$B5A    $91AB   UNKNOWN  $91AB           ; Unknown 9xxx instruction
$B5C    $7364   ADD      V3, #64         ; Add 100 to V3
$B5E    $21F0   CALL     $1F0            ; Call subroutine at 1F0
$B60    $CE12   RND      VE, #12         ; VE = random & 12
$B62    $6074   LD       V0, #74         ; Load 116 into V0
$B64    $A44C   LD       I, $44C         ; Load 44C into I
$B66    $96FD   UNKNOWN  $96FD           ; Unknown 9xxx instruction
$B68    $4092   SNE      V0, #92         ; Skip if V0 != 146
$B6A    $CB42   RND      VB, #42         ; VB = random & 42
$B6C    $91CE   UNKNOWN  $91CE           ; Unknown 9xxx instruction
$B6E    $41A6   SNE      V1, #A6         ; Skip if V1 != 166
$B70    $F077   UNKNOWN  F077            ; Unknown Fxxx instruction
$B72    $6E3D   LD       VE, #3D         ; Load 61 into VE
$B74    $DC20   DRW      VC, V2, #0      ; Draw 0-byte sprite at VC, V2
$B76    $2E27   CALL     $E27            ; Call subroutine at E27
$B78    $546D   UNKNOWN  $546D           ; Unknown 5xxx instruction
$B7A    $A280   LD       I, $280         ; Load 280 into I
$B7C    $52D0   SE       V2, VD          ; Skip if V2 == VD
$B7E    $D2B4   DRW      V2, VB, #4      ; Draw 4-byte sprite at V2, VB
$B80    $8C0D   UNKNOWN  8C0D            ; Unknown 8xxx instruction
$B82    $D746   DRW      V7, V4, #6      ; Draw 6-byte sprite at V7, V4
$B84    $0592   SYS      $592            ; System call to 592
$B86    $6DD3   LD       VD, #D3         ; Load 211 into VD
$B88    $F594   UNKNOWN  F594            ; Unknown Fxxx instruction
$B8A    $F364   UNKNOWN  F364            ; Unknown Fxxx instruction
$B8C    $4E4A   SNE      VE, #4A         ; Skip if VE != 74
$B8E    $2B11   CALL     $B11            ; Call subroutine at B11
$B90    $3BEF   SE       VB, #EF         ; Skip if VB == 239
$B92    $CB8B   RND      VB, #8B         ; VB = random & 8B
$B94    $2A4B   CALL     $A4B            ; Call subroutine at A4B
$B96    $79C1   ADD      V9, #C1         ; Add 193 to V9
$B98    $9AEA   UNKNOWN  $9AEA           ; Unknown 9xxx instruction
$B9A    $8884   ADD      V8, V8          ; V8 += V8, VF = carry
$B9C    $1D5B   JP       $D5B            ; Jump to D5B
$B9E    $0F82   SYS      $F82            ; System call to F82
$BA0    $C880   RND      V8, #80         ; V8 = random & 80
$BA2    $D05C   DRW      V0, V5, #C      ; Draw 12-byte sprite at V0, V5
$BA4    $BE42   JP       V0, $E42        ; Jump to V0 + E42
$BA6    $721B   ADD      V2, #1B         ; Add 27 to V2
$BA8    $D23C   DRW      V2, V3, #C      ; Draw 12-byte sprite at V2, V3
$BAA    $22B0   CALL     $2B0            ; Call subroutine at 2B0
$BAC    $3DC7   SE       VD, #C7         ; Skip if VD == 199
$BAE    $8611   OR       V6, V1          ; V6 |= V1
$BB0    $E2A1   SKNP     V2              ; Skip if key V2 not pressed
$BB2    $9393   UNKNOWN  $9393           ; Unknown 9xxx instruction
$BB4    $7215   ADD      V2, #15         ; Add 21 to V2
$BB6    $7561   ADD      V5, #61         ; Add 97 to V5
$BB8    $50F8   UNKNOWN  $50F8           ; Unknown 5xxx instruction
$BBA    $ECE4   UNKNOWN  $ECE4           ; Unknown Exxx instruction
$BBC    $DF6C   DRW      VF, V6, #C      ; Draw 12-byte sprite at VF, V6
$BBE    $82DE   SHL      V2              ; V2 <<= 1, VF = MSB
$BC0    $F5B2   UNKNOWN  F5B2            ; Unknown Fxxx instruction
$BC2    $BB4B   JP       V0, $B4B        ; Jump to V0 + B4B
$BC4    $1E7F   JP       $E7F            ; Jump to E7F
$BC6    $8BD7   SUBN     VB, VD          ; VB = VD - VB, VF = !borrow
$BC8    $2EAA   CALL     $EAA            ; Call subroutine at EAA
$BCA    $4964   SNE      V9, #64         ; Skip if V9 != 100
$BCC    $4AA0   SNE      VA, #A0         ; Skip if VA != 160
$BCE    $3067   SE       V0, #67         ; Skip if V0 == 103
$BD0    $E3EB   UNKNOWN  $E3EB           ; Unknown Exxx instruction
$BD2    $0624   SYS      $624            ; System call to 624
$BD4    $81FB   UNKNOWN  81FB            ; Unknown 8xxx instruction
$BD6    $0066   SYS      $066            ; System call to 066
$BD8    $56E6   UNKNOWN  $56E6           ; Unknown 5xxx instruction
$BDA    $7880   ADD      V8, #80         ; Add 128 to V8
$BDC    $0A93   SYS      $A93            ; System call to A93
$BDE    $C192   RND      V1, #92         ; V1 = random & 92
$BE0    $BDE3   JP       V0, $DE3        ; Jump to V0 + DE3
$BE2    $A2F9   LD       I, $2F9         ; Load 2F9 into I
$BE4    $85BF   UNKNOWN  85BF            ; Unknown 8xxx instruction
$BE6    $0D86   SYS      $D86            ; System call to D86
$BE8    $E962   UNKNOWN  $E962           ; Unknown Exxx instruction
$BEA    $5090   SE       V0, V9          ; Skip if V0 == V9
$BEC    $DBA3   DRW      VB, VA, #3      ; Draw 3-byte sprite at VB, VA
$BEE    $C671   RND      V6, #71         ; V6 = random & 71
$BF0    $03D2   SYS      $3D2            ; System call to 3D2
$BF2    $0807   SYS      $807            ; System call to 807
$BF4    $D54A   DRW      V5, V4, #A      ; Draw 10-byte sprite at V5, V4
$BF6    $3055   SE       V0, #55         ; Skip if V0 == 85
$BF8    $A51B   LD       I, $51B         ; Load 51B into I
$BFA    $B60C   JP       V0, $60C        ; Jump to V0 + 60C
$BFC    $1E31   JP       $E31            ; Jump to E31
$BFE    $6515   LD       V5, #15         ; Load 21 into V5
$C00    $EAEA   UNKNOWN  $EAEA           ; Unknown Exxx instruction
$C02    $5C88   UNKNOWN  $5C88           ; Unknown 5xxx instruction
$C04    $EF46   UNKNOWN  $EF46           ; Unknown Exxx instruction
$C06    $0C58   SYS      $C58            ; System call to C58
$C08    $0C88   SYS      $C88            ; System call to C88
$C0A    $1055   JP       $055            ; Jump to 055
$C0C    $5FD9   UNKNOWN  $5FD9           ; Unknown 5xxx instruction
$C0E    $6EE3   LD       VE, #E3         ; Load 227 into VE
$C10    $FB96   UNKNOWN  FB96            ; Unknown Fxxx instruction
$C12    $6525   LD       V5, #25         ; Load 37 into V5
$C14    $7138   ADD      V1, #38         ; Add 56 to V1
$C16    $450B   SNE      V5, #0B         ; Skip if V5 != 11
$C18    $5A40   SE       VA, V4          ; Skip if VA == V4
$C1A    $1F34   JP       $F34            ; Jump to F34
$C1C    $B783   JP       V0, $783        ; Jump to V0 + 783
$C1E    $C863   RND      V8, #63         ; V8 = random & 63
$C20    $2BF6   CALL     $BF6            ; Call subroutine at BF6
$C22    $4134   SNE      V1, #34         ; Skip if V1 != 52
$C24    $E78E   UNKNOWN  $E78E           ; Unknown Exxx instruction
$C26    $B14C   JP       V0, $14C        ; Jump to V0 + 14C
$C28    $3681   SE       V6, #81         ; Skip if V6 == 129
$C2A    $7345   ADD      V3, #45         ; Add 69 to V3
$C2C    $C8E2   RND      V8, #E2         ; V8 = random & E2
$C2E    $4D9E   SNE      VD, #9E         ; Skip if VD != 158
$C30    $640B   LD       V4, #0B         ; Load 11 into V4
$C32    $02E0   SYS      $2E0            ; System call to 2E0
$C34    $7BCE   ADD      VB, #CE         ; Add 206 to VB
$C36    $769E   ADD      V6, #9E         ; Add 158 to V6
$C38    $7F74   ADD      VF, #74         ; Add 116 to VF
$C3A    $527E   UNKNOWN  $527E           ; Unknown 5xxx instruction
$C3C    $E79E   SKP      V7              ; Skip if key V7 pressed
$C3E    $E8B1   UNKNOWN  $E8B1           ; Unknown Exxx instruction
$C40    $0A48   SYS      $A48            ; System call to A48
$C42    $4F81   SNE      VF, #81         ; Skip if VF != 129
$C44    $B309   JP       V0, $309        ; Jump to V0 + 309
$C46    $806F   UNKNOWN  806F            ; Unknown 8xxx instruction
$C48    $1E54   JP       $E54            ; Jump to E54
$C4A    $A7BB   LD       I, $7BB         ; Load 7BB into I
$C4C    $B14B   JP       V0, $14B        ; Jump to V0 + 14B
$C4E    $49ED   SNE      V9, #ED         ; Skip if V9 != 237
$C50    $E704   UNKNOWN  $E704           ; Unknown Exxx instruction
$C52    $63EA   LD       V3, #EA         ; Load 234 into V3
$C54    $1503   JP       $503            ; Jump to 503
$C56    $F4E3   UNKNOWN  F4E3            ; Unknown Fxxx instruction
$C58    $A3A5   LD       I, $3A5         ; Load 3A5 into I
$C5A    $1419   JP       $419            ; Jump to 419
$C5C    $662D   LD       V6, #2D         ; Load 45 into V6
$C5E    $D6D8   DRW      V6, VD, #8      ; Draw 8-byte sprite at V6, VD
$C60    $20D0   CALL     $0D0            ; Call subroutine at 0D0
$C62    $0FC3   SYS      $FC3            ; System call to FC3
$C64    $FCE0   UNKNOWN  FCE0            ; Unknown Fxxx instruction
$C66    $B150   JP       V0, $150        ; Jump to V0 + 150
$C68    $323F   SE       V2, #3F         ; Skip if V2 == 63
$C6A    $597C   UNKNOWN  $597C           ; Unknown 5xxx instruction
$C6C    $D6AB   DRW      V6, VA, #B      ; Draw 11-byte sprite at V6, VA
$C6E    $8362   AND      V3, V6          ; V3 &= V6
$C70    $4C28   SNE      VC, #28         ; Skip if VC != 40
$C72    $893A   UNKNOWN  893A            ; Unknown 8xxx instruction
$C74    $5CE0   SE       VC, VE          ; Skip if VC == VE
$C76    $F33F   UNKNOWN  F33F            ; Unknown Fxxx instruction
$C78    $B936   JP       V0, $936        ; Jump to V0 + 936
$C7A    $86E3   XOR      V6, VE          ; V6 ^= VE
$C7C    $63F4   LD       V3, #F4         ; Load 244 into V3
$C7E    $DA61   DRW      VA, V6, #1      ; Draw 1-byte sprite at VA, V6
$C80    $4D1C   SNE      VD, #1C         ; Skip if VD != 28
$C82    $0580   SYS      $580            ; System call to 580
$C84    $0543   SYS      $543            ; System call to 543
$C86    $91C3   UNKNOWN  $91C3           ; Unknown 9xxx instruction
$C88    $FDB5   UNKNOWN  FDB5            ; Unknown Fxxx instruction
$C8A    $51DA   UNKNOWN  $51DA           ; Unknown 5xxx instruction
$C8C    $7076   ADD      V0, #76         ; Add 118 to V0
$C8E    $C945   RND      V9, #45         ; V9 = random & 45
$C90    $0435   SYS      $435            ; System call to 435
$C92    $4347   SNE      V3, #47         ; Skip if V3 != 71
$C94    $3ED5   SE       VE, #D5         ; Skip if VE == 213
$C96    $8B6F   UNKNOWN  8B6F            ; Unknown 8xxx instruction
$C98    $533A   UNKNOWN  $533A           ; Unknown 5xxx instruction
$C9A    $AF34   LD       I, $F34         ; Load F34 into I
$C9C    $810B   UNKNOWN  810B            ; Unknown 8xxx instruction
$C9E    $30C3   SE       V0, #C3         ; Skip if V0 == 195
$CA0    $B14A   JP       V0, $14A        ; Jump to V0 + 14A
$CA2    $580B   UNKNOWN  $580B           ; Unknown 5xxx instruction
$CA4    $3E4E   SE       VE, #4E         ; Skip if VE == 78
$CA6    $F297   UNKNOWN  F297            ; Unknown Fxxx instruction
$CA8    $4481   SNE      V4, #81         ; Skip if V4 != 129
$CAA    $8963   XOR      V9, V6          ; V9 ^= V6
$CAC    $7ED9   ADD      VE, #D9         ; Add 217 to VE
$CAE    $9913   UNKNOWN  $9913           ; Unknown 9xxx instruction
$CB0    $50EE   UNKNOWN  $50EE           ; Unknown 5xxx instruction
$CB2    $333E   SE       V3, #3E         ; Skip if V3 == 62
$CB4    $D126   DRW      V1, V2, #6      ; Draw 6-byte sprite at V1, V2
$CB6    $9657   UNKNOWN  $9657           ; Unknown 9xxx instruction
$CB8    $78A0   ADD      V8, #A0         ; Add 160 to V8
$CBA    $8C9B   UNKNOWN  8C9B            ; Unknown 8xxx instruction
$CBC    $7B9E   ADD      VB, #9E         ; Add 158 to VB
$CBE    $F5E7   UNKNOWN  F5E7            ; Unknown Fxxx instruction
$CC0    $0209   SYS      $209            ; System call to 209
$CC2    $4D1F   SNE      VD, #1F         ; Skip if VD != 31
$CC4    $1FB4   JP       $FB4            ; Jump to FB4
$CC6    $A0F5   LD       I, $0F5         ; Load 0F5 into I
$CC8    $8103   XOR      V1, V0          ; V1 ^= V0
$CCA    $6898   LD       V8, #98         ; Load 152 into V8
$CCC    $9071   UNKNOWN  $9071           ; Unknown 9xxx instruction
$CCE    $D708   DRW      V7, V0, #8      ; Draw 8-byte sprite at V7, V0
$CD0    $2239   CALL     $239            ; Call subroutine at 239
$CD2    $911C   UNKNOWN  $911C           ; Unknown 9xxx instruction
$CD4    $A442   LD       I, $442         ; Load 442 into I
$CD6    $4DFF   SNE      VD, #FF         ; Skip if VD != 255
$CD8    $A867   LD       I, $867         ; Load 867 into I
$CDA    $01E9   SYS      $1E9            ; System call to 1E9
$CDC    $312E   SE       V1, #2E         ; Skip if V1 == 46
$CDE    $F079   UNKNOWN  F079            ; Unknown Fxxx instruction
$CE0    $753C   ADD      V5, #3C         ; Add 60 to V5
$CE2    $9DBB   UNKNOWN  $9DBB           ; Unknown 9xxx instruction
$CE4    $0199   SYS      $199            ; System call to 199
$CE6    $143F   JP       $43F            ; Jump to 43F
$CE8    $D87B   DRW      V8, V7, #B      ; Draw 11-byte sprite at V8, V7
$CEA    $0AE9   SYS      $AE9            ; System call to AE9
$CEC    $8FD1   OR       VF, VD          ; VF |= VD
$CEE    $3947   SE       V9, #47         ; Skip if V9 == 71
$CF0    $885C   UNKNOWN  885C            ; Unknown 8xxx instruction
$CF2    $2792   CALL     $792            ; Call subroutine at 792
$CF4    $2AC2   CALL     $AC2            ; Call subroutine at AC2
$CF6    $6B95   LD       VB, #95         ; Load 149 into VB
$CF8    $B0BB   JP       V0, $0BB        ; Jump to V0 + 0BB
$CFA    $D098   DRW      V0, V9, #8      ; Draw 8-byte sprite at V0, V9
$CFC    $B59D   JP       V0, $59D        ; Jump to V0 + 59D
$CFE    $26E1   CALL     $6E1            ; Call subroutine at 6E1
$D00    $9A71   UNKNOWN  $9A71           ; Unknown 9xxx instruction
$D02    $B159   JP       V0, $159        ; Jump to V0 + 159
$D04    $9AE8   UNKNOWN  $9AE8           ; Unknown 9xxx instruction
$D06    $270D   CALL     $70D            ; Call subroutine at 70D
$D08    $0F54   SYS      $F54            ; System call to F54
$D0A    $BB79   JP       V0, $B79        ; Jump to V0 + B79
$D0C    $571A   UNKNOWN  $571A           ; Unknown 5xxx instruction
$D0E    $1F4A   JP       $F4A            ; Jump to F4A
$D10    $53A8   UNKNOWN  $53A8           ; Unknown 5xxx instruction
$D12    $007D   SYS      $07D            ; System call to 07D
$D14    $6EED   LD       VE, #ED         ; Load 237 into VE
$D16    $EFE2   UNKNOWN  $EFE2           ; Unknown Exxx instruction
$D18    $2A55   CALL     $A55            ; Call subroutine at A55
$D1A    $F8DB   UNKNOWN  F8DB            ; Unknown Fxxx instruction
$D1C    $BB66   JP       V0, $B66        ; Jump to V0 + B66
$D1E    $3C50   SE       VC, #50         ; Skip if VC == 80
$D20    $4628   SNE      V6, #28         ; Skip if V6 != 40
$D22    $C896   RND      V8, #96         ; V8 = random & 96
$D24    $5E2C   UNKNOWN  $5E2C           ; Unknown 5xxx instruction
$D26    $226E   CALL     $26E            ; Call subroutine at 26E
$D28    $749C   ADD      V4, #9C         ; Add 156 to V4
$D2A    $EF84   UNKNOWN  $EF84           ; Unknown Exxx instruction
$D2C    $7A7E   ADD      VA, #7E         ; Add 126 to VA
$D2E    $2823   CALL     $823            ; Call subroutine at 823
$D30    $0B15   SYS      $B15            ; System call to B15
$D32    $01B1   SYS      $1B1            ; System call to 1B1
$D34    $D959   DRW      V9, V5, #9      ; Draw 9-byte sprite at V9, V5
$D36    $9B4E   UNKNOWN  $9B4E           ; Unknown 9xxx instruction
$D38    $6F41   LD       VF, #41         ; Load 65 into VF
$D3A    $2C8B   CALL     $C8B            ; Call subroutine at C8B
$D3C    $1000   JP       $000            ; Jump to 000
$D3E    $B40A   JP       V0, $40A        ; Jump to V0 + 40A
$D40    $DD5E   DRW      VD, V5, #E      ; Draw 14-byte sprite at VD, V5
$D42    $519C   UNKNOWN  $519C           ; Unknown 5xxx instruction
$D44    $9B9B   UNKNOWN  $9B9B           ; Unknown 9xxx instruction
$D46    $EE6D   UNKNOWN  $EE6D           ; Unknown Exxx instruction
$D48    $34C3   SE       V4, #C3         ; Skip if V4 == 195
$D4A    $923B   UNKNOWN  $923B           ; Unknown 9xxx instruction
$D4C    $C9DF   RND      V9, #DF         ; V9 = random & DF
$D4E    $3EC0   SE       VE, #C0         ; Skip if VE == 192
$D50    $B15C   JP       V0, $15C        ; Jump to V0 + 15C
$D52    $186F   JP       $86F            ; Jump to 86F
$D54    $E6E1   UNKNOWN  $E6E1           ; Unknown Exxx instruction
$D56    $31B9   SE       V1, #B9         ; Skip if V1 == 185
$D58    $F641   UNKNOWN  F641            ; Unknown Fxxx instruction
$D5A    $9946   UNKNOWN  $9946           ; Unknown 9xxx instruction
$D5C    $A89E   LD       I, $89E         ; Load 89E into I
$D5E    $B9CF   JP       V0, $9CF        ; Jump to V0 + 9CF
$D60    $AAB1   LD       I, $AB1         ; Load AB1 into I
$D62    $0281   SYS      $281            ; System call to 281
$D64    $8F4C   UNKNOWN  8F4C            ; Unknown 8xxx instruction
$D66    $71AD   ADD      V1, #AD         ; Add 173 to V1
$D68    $F538   UNKNOWN  F538            ; Unknown Fxxx instruction
$D6A    $4820   SNE      V8, #20         ; Skip if V8 != 32
$D6C    $7EA1   ADD      VE, #A1         ; Add 161 to VE
$D6E    $C2D0   RND      V2, #D0         ; V2 = random & D0
$D70    $B9C4   JP       V0, $9C4        ; Jump to V0 + 9C4
$D72    $B0D3   JP       V0, $0D3        ; Jump to V0 + 0D3
$D74    $3484   SE       V4, #84         ; Skip if V4 == 132
$D76    $D45A   DRW      V4, V5, #A      ; Draw 10-byte sprite at V4, V5
$D78    $4584   SNE      V5, #84         ; Skip if V5 != 132
$D7A    $4B95   SNE      VB, #95         ; Skip if VB != 149
$D7C    $F2CB   UNKNOWN  F2CB            ; Unknown Fxxx instruction
$D7E    $E8F5   UNKNOWN  $E8F5           ; Unknown Exxx instruction
$D80    $1742   JP       $742            ; Jump to 742
$D82    $4FE3   SNE      VF, #E3         ; Skip if VF != 227
$D84    $7186   ADD      V1, #86         ; Add 134 to V1
$D86    $A5E7   LD       I, $5E7         ; Load 5E7 into I
$D88    $941A   UNKNOWN  $941A           ; Unknown 9xxx instruction
$D8A    $7F5E   ADD      VF, #5E         ; Add 94 to VF
$D8C    $8214   ADD      V2, V1          ; V2 += V1, VF = carry
$D8E    $C476   RND      V4, #76         ; V4 = random & 76
$D90    $0849   SYS      $849            ; System call to 849
$D92    $57D9   UNKNOWN  $57D9           ; Unknown 5xxx instruction
$D94    $3B08   SE       VB, #08         ; Skip if VB == 8
$D96    $FDF3   UNKNOWN  FDF3            ; Unknown Fxxx instruction
$D98    $84CA   UNKNOWN  84CA            ; Unknown 8xxx instruction
$D9A    $041C   SYS      $41C            ; System call to 41C
$D9C    $67A3   LD       V7, #A3         ; Load 163 into V7
$D9E    $EFE4   UNKNOWN  $EFE4           ; Unknown Exxx instruction
$DA0    $4310   SNE      V3, #10         ; Skip if V3 != 16
$DA2    $8CA0   LD       VC, VA          ; VC = VA
$DA4    $6DF5   LD       VD, #F5         ; Load 245 into VD
$DA6    $460D   SNE      V6, #0D         ; Skip if V6 != 13
$DA8    $E443   UNKNOWN  $E443           ; Unknown Exxx instruction
$DAA    $7D3C   ADD      VD, #3C         ; Add 60 to VD
$DAC    $8D7E   SHL      VD              ; VD <<= 1, VF = MSB
$DAE    $A683   LD       I, $683         ; Load 683 into I
$DB0    $E98F   UNKNOWN  $E98F           ; Unknown Exxx instruction
$DB2    $1B5E   JP       $B5E            ; Jump to B5E
$DB4    $D1D1   DRW      V1, VD, #1      ; Draw 1-byte sprite at V1, VD
$DB6    $BD09   JP       V0, $D09        ; Jump to V0 + D09
$DB8    $3913   SE       V9, #13         ; Skip if V9 == 19
$DBA    $AA5E   LD       I, $A5E         ; Load A5E into I
$DBC    $2B33   CALL     $B33            ; Call subroutine at B33
$DBE    $F6DF   UNKNOWN  F6DF            ; Unknown Fxxx instruction
$DC0    $D370   DRW      V3, V7, #0      ; Draw 0-byte sprite at V3, V7
$DC2    $0BD9   SYS      $BD9            ; System call to BD9
$DC4    $D42A   DRW      V4, V2, #A      ; Draw 10-byte sprite at V4, V2
$DC6    $C2AC   RND      V2, #AC         ; V2 = random & AC
$DC8    $B075   JP       V0, $075        ; Jump to V0 + 075
$DCA    $5F9E   UNKNOWN  $5F9E           ; Unknown 5xxx instruction
$DCC    $696C   LD       V9, #6C         ; Load 108 into V9
$DCE    $2105   CALL     $105            ; Call subroutine at 105
$DD0    $AEE1   LD       I, $EE1         ; Load EE1 into I
$DD2    $1445   JP       $445            ; Jump to 445
$DD4    $6F64   LD       VF, #64         ; Load 100 into VF
$DD6    $743D   ADD      V4, #3D         ; Add 61 to V4
$DD8    $0ABC   SYS      $ABC            ; System call to ABC
$DDA    $682E   LD       V8, #2E         ; Load 46 into V8
$DDC    $91AC   UNKNOWN  $91AC           ; Unknown 9xxx instruction
$DDE    $5DB1   UNKNOWN  $5DB1           ; Unknown 5xxx instruction
$DE0    $DDA2   DRW      VD, VA, #2      ; Draw 2-byte sprite at VD, VA
$DE2    $5C2B   UNKNOWN  $5C2B           ; Unknown 5xxx instruction
$DE4    $4D12   SNE      VD, #12         ; Skip if VD != 18
$DE6    $42A8   SNE      V2, #A8         ; Skip if V2 != 168
$DE8    $2B8D   CALL     $B8D            ; Call subroutine at B8D
$DEA    $50AA   UNKNOWN  $50AA           ; Unknown 5xxx instruction
$DEC    $FECB   UNKNOWN  FECB            ; Unknown Fxxx instruction
$DEE    $E066   UNKNOWN  $E066           ; Unknown Exxx instruction
$DF0    $4F16   SNE      VF, #16         ; Skip if VF != 22
$DF2    $0886   SYS      $886            ; System call to 886
$DF4    $6B94   LD       VB, #94         ; Load 148 into VB
$DF6    $C949   RND      V9, #49         ; V9 = random & 49
$DF8    $E86F   UNKNOWN  $E86F           ; Unknown Exxx instruction
$DFA    $9D2C   UNKNOWN  $9D2C           ; Unknown 9xxx instruction
$DFC    $CCB7   RND      VC, #B7         ; VC = random & B7
$DFE    $CD0B   RND      VD, #0B         ; VD = random & 0B
$E00    $33EA   SE       V3, #EA         ; Skip if V3 == 234
$E02    $49D1   SNE      V9, #D1         ; Skip if V9 != 209
$E04    $C87A   RND      V8, #7A         ; V8 = random & 7A
$E06    $7483   ADD      V4, #83         ; Add 131 to V4
$E08    $1018   JP       $018            ; Jump to 018
$E0A    $C1B5   RND      V1, #B5         ; V1 = random & B5
$E0C    $A2A8   LD       I, $2A8         ; Load 2A8 into I
$E0E    $6489   LD       V4, #89         ; Load 137 into V4
$E10    $47F4   SNE      V7, #F4         ; Skip if V7 != 244
$E12    $C866   RND      V8, #66         ; V8 = random & 66
$E14    $85DD   UNKNOWN  85DD            ; Unknown 8xxx instruction
$E16    $C3C1   RND      V3, #C1         ; V3 = random & C1
$E18    $F1EE   UNKNOWN  F1EE            ; Unknown Fxxx instruction
$E1A    $CBD9   RND      VB, #D9         ; VB = random & D9
$E1C    $2FA8   CALL     $FA8            ; Call subroutine at FA8
$E1E    $0C88   SYS      $C88            ; System call to C88
$E20    $4B7B   SNE      VB, #7B         ; Skip if VB != 123
$E22    $CC1E   RND      VC, #1E         ; VC = random & 1E
$E24    $1229   JP       $229            ; Jump to 229
$E26    $15A6   JP       $5A6            ; Jump to 5A6
$E28    $4C00   SNE      VC, #00         ; Skip if VC != 0
$E2A    $6955   LD       V9, #55         ; Load 85 into V9
$E2C    $22B5   CALL     $2B5            ; Call subroutine at 2B5
$E2E    $0430   SYS      $430            ; System call to 430
$E30    $1C4F   JP       $C4F            ; Jump to C4F
$E32    $DEB5   DRW      VE, VB, #5      ; Draw 5-byte sprite at VE, VB
$E34    $46B4   SNE      V6, #B4         ; Skip if V6 != 180
$E36    $2526   CALL     $526            ; Call subroutine at 526
$E38    $5B4E   UNKNOWN  $5B4E           ; Unknown 5xxx instruction
$E3A    $8A01   OR       VA, V0          ; VA |= V0
$E3C    $EBC2   UNKNOWN  $EBC2           ; Unknown Exxx instruction
$E3E    $58C9   UNKNOWN  $58C9           ; Unknown 5xxx instruction
$E40    $342C   SE       V4, #2C         ; Skip if V4 == 44
$E42    $ACCA   LD       I, $CCA         ; Load CCA into I
$E44    $FE9B   UNKNOWN  FE9B            ; Unknown Fxxx instruction
$E46    $CBDD   RND      VB, #DD         ; VB = random & DD
$E48    $7F7E   ADD      VF, #7E         ; Add 126 to VF
$E4A    $1C4F   JP       $C4F            ; Jump to C4F
$E4C    $B1E3   JP       V0, $1E3        ; Jump to V0 + 1E3
$E4E    $BD01   JP       V0, $D01        ; Jump to V0 + D01
$E50    $E399   UNKNOWN  $E399           ; Unknown Exxx instruction
$E52    $6233   LD       V2, #33         ; Load 51 into V2
$E54    $D972   DRW      V9, V7, #2      ; Draw 2-byte sprite at V9, V7
$E56    $E69E   SKP      V6              ; Skip if key V6 pressed
$E58    $8496   SHR      V4              ; V4 >>= 1, VF = LSB
$E5A    $F00F   UNKNOWN  F00F            ; Unknown Fxxx instruction
$E5C    $A903   LD       I, $903         ; Load 903 into I
$E5E    $C81D   RND      V8, #1D         ; V8 = random & 1D
$E60    $E788   UNKNOWN  $E788           ; Unknown Exxx instruction
$E62    $DAE7   DRW      VA, VE, #7      ; Draw 7-byte sprite at VA, VE
$E64    $E892   UNKNOWN  $E892           ; Unknown Exxx instruction
$E66    $496F   SNE      V9, #6F         ; Skip if V9 != 111
$E68    $D33D   DRW      V3, V3, #D      ; Draw 13-byte sprite at V3, V3
$E6A    $B3F9   JP       V0, $3F9        ; Jump to V0 + 3F9
$E6C    $A137   LD       I, $137         ; Load 137 into I
$E6E    $717F   ADD      V1, #7F         ; Add 127 to V1
$E70    $E92E   UNKNOWN  $E92E           ; Unknown Exxx instruction
$E72    $94A8   UNKNOWN  $94A8           ; Unknown 9xxx instruction
$E74    $2FCD   CALL     $FCD            ; Call subroutine at FCD
$E76    $DAE9   DRW      VA, VE, #9      ; Draw 9-byte sprite at VA, VE
$E78    $2BDD   CALL     $BDD            ; Call subroutine at BDD
$E7A    $2E45   CALL     $E45            ; Call subroutine at E45
$E7C    $C189   RND      V1, #89         ; V1 = random & 89
$E7E    $348B   SE       V4, #8B         ; Skip if V4 == 139
$E80    $A6FF   LD       I, $6FF         ; Load 6FF into I
$E82    $2330   CALL     $330            ; Call subroutine at 330
$E84    $F5FD   UNKNOWN  F5FD            ; Unknown Fxxx instruction
$E86    $D377   DRW      V3, V7, #7      ; Draw 7-byte sprite at V3, V7
$E88    $59FA   UNKNOWN  $59FA           ; Unknown 5xxx instruction
$E8A    $49EF   SNE      V9, #EF         ; Skip if V9 != 239
$E8C    $F8E1   UNKNOWN  F8E1            ; Unknown Fxxx instruction
$E8E    $1064   JP       $064            ; Jump to 064
$E90    $976E   UNKNOWN  $976E           ; Unknown 9xxx instruction
$E92    $2B99   CALL     $B99            ; Call subroutine at B99
$E94    $9467   UNKNOWN  $9467           ; Unknown 9xxx instruction
$E96    $8EE8   UNKNOWN  8EE8            ; Unknown 8xxx instruction
$E98    $392B   SE       V9, #2B         ; Skip if V9 == 43
$E9A    $D183   DRW      V1, V8, #3      ; Draw 3-byte sprite at V1, V8
$E9C    $06C7   SYS      $6C7            ; System call to 6C7
$E9E    $53AA   UNKNOWN  $53AA           ; Unknown 5xxx instruction
$EA0    $23A5   CALL     $3A5            ; Call subroutine at 3A5
$EA2    $E1DF   UNKNOWN  $E1DF           ; Unknown Exxx instruction
$EA4    $5A57   UNKNOWN  $5A57           ; Unknown 5xxx instruction
$EA6    $7FA8   ADD      VF, #A8         ; Add 168 to VF
$EA8    $24BB   CALL     $4BB            ; Call subroutine at 4BB
$EAA    $F155   LD       [I], V1         ; Store V0-V1 at I
$EAC    $FC0E   UNKNOWN  FC0E            ; Unknown Fxxx instruction
$EAE    $7D1F   ADD      VD, #1F         ; Add 31 to VD
$EB0    $9671   UNKNOWN  $9671           ; Unknown 9xxx instruction
$EB2    $C080   RND      V0, #80         ; V0 = random & 80
$EB4    $CA20   RND      VA, #20         ; VA = random & 20
$EB6    $2D74   CALL     $D74            ; Call subroutine at D74
$EB8    $91A6   UNKNOWN  $91A6           ; Unknown 9xxx instruction
$EBA    $DA64   DRW      VA, V6, #4      ; Draw 4-byte sprite at VA, V6
$EBC    $360C   SE       V6, #0C         ; Skip if V6 == 12
$EBE    $5AF4   UNKNOWN  $5AF4           ; Unknown 5xxx instruction
$EC0    $1E9A   JP       $E9A            ; Jump to E9A
$EC2    $AA0D   LD       I, $A0D         ; Load A0D into I
$EC4    $C2C3   RND      V2, #C3         ; V2 = random & C3
$EC6    $37FB   SE       V7, #FB         ; Skip if V7 == 251
$EC8    $A53C   LD       I, $53C         ; Load 53C into I
$ECA    $FFD7   UNKNOWN  FFD7            ; Unknown Fxxx instruction
$ECC    $8B8E   SHL      VB              ; VB <<= 1, VF = MSB
$ECE    $D48F   DRW      V4, V8, #F      ; Draw 15-byte sprite at V4, V8
$ED0    $D1EE   DRW      V1, VE, #E      ; Draw 14-byte sprite at V1, VE
$ED2    $8BE6   SHR      VB              ; VB >>= 1, VF = LSB
$ED4    $5C2B   UNKNOWN  $5C2B           ; Unknown 5xxx instruction
$ED6    $7E75   ADD      VE, #75         ; Add 117 to VE
$ED8    $5115   UNKNOWN  $5115           ; Unknown 5xxx instruction
$EDA    $0583   SYS      $583            ; System call to 583
$EDC    $140B   JP       $40B            ; Jump to 40B
$EDE    $A3EA   LD       I, $3EA         ; Load 3EA into I
$EE0    $1E39   JP       $E39            ; Jump to E39
$EE2    $8FC3   XOR      VF, VC          ; VF ^= VC
$EE4    $F4E6   UNKNOWN  F4E6            ; Unknown Fxxx instruction
$EE6    $DAE5   DRW      VA, VE, #5      ; Draw 5-byte sprite at VA, VE
$EE8    $63C4   LD       V3, #C4         ; Load 196 into V3
$EEA    $6A50   LD       VA, #50         ; Load 80 into VA
$EEC    $F4E7   UNKNOWN  F4E7            ; Unknown Fxxx instruction
$EEE    $41F3   SNE      V1, #F3         ; Skip if V1 != 243
$EF0    $D2BE   DRW      V2, VB, #E      ; Draw 14-byte sprite at V2, VB
$EF2    $6A5C   LD       VA, #5C         ; Load 92 into VA
$EF4    $618D   LD       V1, #8D         ; Load 141 into V1
$EF6    $90D1   UNKNOWN  $90D1           ; Unknown 9xxx instruction
$EF8    $BB6D   JP       V0, $B6D        ; Jump to V0 + B6D
$EFA    $2BFD   CALL     $BFD            ; Call subroutine at BFD
$EFC    $73C8   ADD      V3, #C8         ; Add 200 to V3
$EFE    $B10E   JP       V0, $10E        ; Jump to V0 + 10E
$F00    $7CA7   ADD      VC, #A7         ; Add 167 to VC
$F02    $46CB   SNE      V6, #CB         ; Skip if V6 != 203
$F04    $EA23   UNKNOWN  $EA23           ; Unknown Exxx instruction
$F06    $1DF8   JP       $DF8            ; Jump to DF8
$F08    $C4E5   RND      V4, #E5         ; V4 = random & E5
$F0A    $D4BC   DRW      V4, VB, #C      ; Draw 12-byte sprite at V4, VB
$F0C    $1D3F   JP       $D3F            ; Jump to D3F
$F0E    $9838   UNKNOWN  $9838           ; Unknown 9xxx instruction
$F10    $EBA8   UNKNOWN  $EBA8           ; Unknown Exxx instruction
$F12    $125A   JP       $25A            ; Jump to 25A
$F14    $D1A8   DRW      V1, VA, #8      ; Draw 8-byte sprite at V1, VA
$F16    $1E88   JP       $E88            ; Jump to E88
$F18    $96B3   UNKNOWN  $96B3           ; Unknown 9xxx instruction
$F1A    $0CC5   SYS      $CC5            ; System call to CC5
$F1C    $393D   SE       V9, #3D         ; Skip if V9 == 61
$F1E    $4A46   SNE      VA, #46         ; Skip if VA != 70
$F20    $8E04   ADD      VE, V0          ; VE += V0, VF = carry
$F22    $F93C   UNKNOWN  F93C            ; Unknown Fxxx instruction
$F24    $7F02   ADD      VF, #02         ; Add 2 to VF
$F26    $2EA3   CALL     $EA3            ; Call subroutine at EA3
$F28    $3B38   SE       VB, #38         ; Skip if VB == 56
$F2A    $A9DD   LD       I, $9DD         ; Load 9DD into I
$F2C    $8599   UNKNOWN  8599            ; Unknown 8xxx instruction
$F2E    $C2DC   RND      V2, #DC         ; V2 = random & DC
$F30    $417E   SNE      V1, #7E         ; Skip if V1 != 126
$F32    $B7C4   JP       V0, $7C4        ; Jump to V0 + 7C4
$F34    $1C59   JP       $C59            ; Jump to C59
$F36    $50D9   UNKNOWN  $50D9           ; Unknown 5xxx instruction
$F38    $E5AB   UNKNOWN  $E5AB           ; Unknown Exxx instruction
$F3A    $16C2   JP       $6C2            ; Jump to 6C2
$F3C    $CBF3   RND      VB, #F3         ; VB = random & F3
$F3E    $F118   LD       ST, V1          ; Sound timer = V1
$F40    $92A1   UNKNOWN  $92A1           ; Unknown 9xxx instruction
$F42    $F90D   UNKNOWN  F90D            ; Unknown Fxxx instruction
$F44    $799C   ADD      V9, #9C         ; Add 156 to V9
$F46    $9B91   UNKNOWN  $9B91           ; Unknown 9xxx instruction
$F48    $EC97   UNKNOWN  $EC97           ; Unknown Exxx instruction
$F4A    $DBF0   DRW      VB, VF, #0      ; Draw 0-byte sprite at VB, VF
$F4C    $5075   UNKNOWN  $5075           ; Unknown 5xxx instruction
$F4E    $A85B   LD       I, $85B         ; Load 85B into I
$F50    $8009   UNKNOWN  8009            ; Unknown 8xxx instruction
$F52    $DBD4   DRW      VB, VD, #4      ; Draw 4-byte sprite at VB, VD
$F54    $F44D   UNKNOWN  F44D            ; Unknown Fxxx instruction
$F56    $7A0F   ADD      VA, #0F         ; Add 15 to VA
$F58    $45D9   SNE      V5, #D9         ; Skip if V5 != 217
$F5A    $834E   SHL      V3              ; V3 <<= 1, VF = MSB
$F5C    $E942   UNKNOWN  $E942           ; Unknown Exxx instruction
$F5E    $A726   LD       I, $726         ; Load 726 into I
$F60    $50F6   UNKNOWN  $50F6           ; Unknown 5xxx instruction
$F62    $9593   UNKNOWN  $9593           ; Unknown 9xxx instruction
$F64    $1FEA   JP       $FEA            ; Jump to FEA
$F66    $E27C   UNKNOWN  $E27C           ; Unknown Exxx instruction
$F68    $C930   RND      V9, #30         ; V9 = random & 30
$F6A    $F593   UNKNOWN  F593            ; Unknown Fxxx instruction
$F6C    $74E3   ADD      V4, #E3         ; Add 227 to V4
$F6E    $49AF   SNE      V9, #AF         ; Skip if V9 != 175
$F70    $E3AE   UNKNOWN  $E3AE           ; Unknown Exxx instruction
$F72    $7DDF   ADD      VD, #DF         ; Add 223 to VD
$F74    $F778   UNKNOWN  F778            ; Unknown Fxxx instruction
$F76    $66E5   LD       V6, #E5         ; Load 229 into V6
$F78    $0214   SYS      $214            ; System call to 214
$F7A    $EDD7   UNKNOWN  $EDD7           ; Unknown Exxx instruction
$F7C    $1E25   JP       $E25            ; Jump to E25
$F7E    $46A8   SNE      V6, #A8         ; Skip if V6 != 168
$F80    $54E9   UNKNOWN  $54E9           ; Unknown 5xxx instruction
$F82    $003F   SYS      $03F            ; System call to 03F
$F84    $C478   RND      V4, #78         ; V4 = random & 78
$F86    $ED8C   UNKNOWN  $ED8C           ; Unknown Exxx instruction
$F88    $4E9D   SNE      VE, #9D         ; Skip if VE != 157
$F8A    $DE53   DRW      VE, V5, #3      ; Draw 3-byte sprite at VE, V5
$F8C    $2DC7   CALL     $DC7            ; Call subroutine at DC7
$F8E    $ED2D   UNKNOWN  $ED2D           ; Unknown Exxx instruction
$F90    $5336   UNKNOWN  $5336           ; Unknown 5xxx instruction
$F92    $AEC4   LD       I, $EC4         ; Load EC4 into I
$F94    $FEB9   UNKNOWN  FEB9            ; Unknown Fxxx instruction
$F96    $FE00   UNKNOWN  FE00            ; Unknown Fxxx instruction
$F98    $AF67   LD       I, $F67         ; Load F67 into I
$F9A    $FBA6   UNKNOWN  FBA6            ; Unknown Fxxx instruction
$F9C    $B58E   JP       V0, $58E        ; Jump to V0 + 58E
$F9E    $80FB   UNKNOWN  80FB            ; Unknown 8xxx instruction
$FA0    $432E   SNE      V3, #2E         ; Skip if V3 != 46
$FA2    $5BF5   UNKNOWN  $5BF5           ; Unknown 5xxx instruction
$FA4    $C7B0   RND      V7, #B0         ; V7 = random & B0
$FA6    $F46C   UNKNOWN  F46C            ; Unknown Fxxx instruction
$FA8    $9A50   SNE      VA, V5          ; Skip if VA != V5
$FAA    $B65C   JP       V0, $65C        ; Jump to V0 + 65C
$FAC    $20A0   CALL     $0A0            ; Call subroutine at 0A0
$FAE    $1707   JP       $707            ; Jump to 707
$FB0    $649D   LD       V4, #9D         ; Load 157 into V4
$FB2    $64D6   LD       V4, #D6         ; Load 214 into V4
$FB4    $F950   UNKNOWN  F950            ; Unknown Fxxx instruction
$FB6    $8000   LD       V0, V0          ; V0 = V0
$FB8    $41D6   SNE      V1, #D6         ; Skip if V1 != 214
$FBA    $A387   LD       I, $387         ; Load 387 into I
$FBC    $CB6C   RND      VB, #6C         ; VB = random & 6C
$FBE    $E53B   UNKNOWN  $E53B           ; Unknown Exxx instruction
$FC0    $DE96   DRW      VE, V9, #6      ; Draw 6-byte sprite at VE, V9
$FC2    $F728   UNKNOWN  F728            ; Unknown Fxxx instruction
$FC4    $CC8F   RND      VC, #8F         ; VC = random & 8F
$FC6    $8607   SUBN     V6, V0          ; V6 = V0 - V6, VF = !borrow
$FC8    $98D1   UNKNOWN  $98D1           ; Unknown 9xxx instruction
$FCA    $64BE   LD       V4, #BE         ; Load 190 into V4
$FCC    $0164   SYS      $164            ; System call to 164
$FCE    $0DF6   SYS      $DF6            ; System call to DF6
$FD0    $FFA9   UNKNOWN  FFA9            ; Unknown Fxxx instruction
$FD2    $3A33   SE       VA, #33         ; Skip if VA == 51
$FD4    $964D   UNKNOWN  $964D           ; Unknown 9xxx instruction
$FD6    $DBFD   DRW      VB, VF, #D      ; Draw 13-byte sprite at VB, VF
$FD8    $63B1   LD       V3, #B1         ; Load 177 into V3
$FDA    $4DDB   SNE      VD, #DB         ; Skip if VD != 219
$FDC    $50B0   SE       V0, VB          ; Skip if V0 == VB
$FDE    $74DE   ADD      V4, #DE         ; Add 222 to V4
$FE0    $B195   JP       V0, $195        ; Jump to V0 + 195
$FE2    $492A   SNE      V9, #2A         ; Skip if V9 != 42
$FE4    $F54E   UNKNOWN  F54E            ; Unknown Fxxx instruction
$FE6    $1D72   JP       $D72            ; Jump to D72
$FE8    $7263   ADD      V2, #63         ; Add 99 to V2
$FEA    $F953   UNKNOWN  F953            ; Unknown Fxxx instruction
$FEC    $B17D   JP       V0, $17D        ; Jump to V0 + 17D
$FEE    $09F6   SYS      $9F6            ; System call to 9F6
$FF0    $FC6F   UNKNOWN  FC6F            ; Unknown Fxxx instruction
$FF2    $6578   LD       V5, #78         ; Load 120 into V5
$FF4    $79E4   ADD      V9, #E4         ; Add 228 to V9
$FF6    $AF7C   LD       I, $F7C         ; Load F7C into I
$FF8    $2483   CALL     $483            ; Call subroutine at 483
$FFA    $DFDC   DRW      VF, VD, #C      ; Draw 12-byte sprite at VF, VD
$FFC    $DEB6   DRW      VE, VB, #6      ; Draw 6-byte sprite at VE, VB
$FFE    $5734   UNKNOWN  $5734           ; Unknown 5xxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 426 (24.8%)
  LD      : 281 (16.4%)
  JP      : 219 (12.8%)
  SNE     : 117 ( 6.8%)
  ADD     : 117 ( 6.8%)
  DRW     : 111 ( 6.5%)
  CALL    : 109 ( 6.4%)
  RND     : 104 ( 6.1%)
  SE      :  98 ( 5.7%)
  SYS     :  91 ( 5.3%)
  SHL     :   9 ( 0.5%)
  AND     :   7 ( 0.4%)
  XOR     :   7 ( 0.4%)
  SHR     :   5 ( 0.3%)
  OR      :   5 ( 0.3%)
  SUBN    :   5 ( 0.3%)
  SUB     :   2 ( 0.1%)
  SKP     :   2 ( 0.1%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 398 (23.2%)
Arithmetic Operations: 143 (8.3%)
