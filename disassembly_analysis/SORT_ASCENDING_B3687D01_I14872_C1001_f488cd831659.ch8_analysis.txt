
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B3687D01_I14872_C1001_f488cd831659.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 3687
Instance: 14872
Direction: ascending
Final Array: [0, 6, 8, 35, 51, 131, 141, 141]
Operations: R:0 W:1 C:15 S:5

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 101
Sort Array References:
  $216: LD I, $029 ; Load 029 into I
  $254: LD I, $885 ; Load 885 into I
  $258: LD I, $971 ; Load 971 into I
  $262: LD I, $7D5 ; Load 7D5 into I
  $27A: LD I, $A84 ; Load A84 into I
  $2BE: LD I, $83C ; Load 83C into I
  $2CE: LD I, $300 ; Load 300 into I
  $2F6: LD I, $856 ; Load 856 into I
  $31A: LD I, $A0C ; Load A0C into I
  $320: LD I, $2A2 ; Load 2A2 into I
  $32E: LD I, $9EA ; Load 9EA into I
  $336: LD I, $EFA ; Load EFA into I
  $34C: LD I, $378 ; Load 378 into I
  $34E: LD I, $D6A ; Load D6A into I
  $358: LD I, $B02 ; Load B02 into I
  $374: LD I, $BD9 ; Load BD9 into I
  $3C2: LD I, $E60 ; Load E60 into I
  $3D4: LD I, $CD9 ; Load CD9 into I
  $3DA: LD I, $04A ; Load 04A into I
  $402: LD I, $5FC ; Load 5FC into I
  $41E: LD I, $964 ; Load 964 into I
  $434: LD I, $080 ; Load 080 into I
  $460: LD I, $7CD ; Load 7CD into I
  $472: LD I, $78F ; Load 78F into I
  $4DC: LD I, $211 ; Load 211 into I
  $4E8: LD I, $763 ; Load 763 into I
  $514: LD I, $8E0 ; Load 8E0 into I
  $516: LD I, $588 ; Load 588 into I
  $51C: LD I, $E29 ; Load E29 into I
  $542: LD I, $CC7 ; Load CC7 into I
  $566: LD I, $601 ; Load 601 into I
  $596: LD I, $A72 ; Load A72 into I
  $598: LD I, $113 ; Load 113 into I
  $5E4: LD I, $C8A ; Load C8A into I
  $628: LD I, $794 ; Load 794 into I
  $664: LD I, $660 ; Load 660 into I
  $670: LD I, $5A8 ; Load 5A8 into I
  $6B4: LD I, $2EE ; Load 2EE into I
  $702: LD I, $07A ; Load 07A into I
  $716: LD I, $D43 ; Load D43 into I
  $728: LD I, $34E ; Load 34E into I
  $72A: LD I, $63C ; Load 63C into I
  $750: LD I, $9D5 ; Load 9D5 into I
  $768: LD I, $C2A ; Load C2A into I
  $76C: LD I, $827 ; Load 827 into I
  $774: LD I, $D52 ; Load D52 into I
  $79C: LD I, $257 ; Load 257 into I
  $7DC: LD I, $5BE ; Load 5BE into I
  $804: LD I, $864 ; Load 864 into I
  $816: LD I, $447 ; Load 447 into I
  $85C: LD I, $5E4 ; Load 5E4 into I
  $85E: LD I, $AED ; Load AED into I
  $89C: LD I, $B50 ; Load B50 into I
  $8BA: LD I, $78E ; Load 78E into I
  $8CE: LD I, $F9F ; Load F9F into I
  $8D0: LD I, $4D8 ; Load 4D8 into I
  $924: LD I, $43B ; Load 43B into I
  $944: LD I, $DA6 ; Load DA6 into I
  $94A: LD I, $3BF ; Load 3BF into I
  $9C8: LD I, $955 ; Load 955 into I
  $9D6: LD I, $6AC ; Load 6AC into I
  $9DA: LD I, $ED4 ; Load ED4 into I
  $A18: LD I, $210 ; Load 210 into I
  $A52: LD I, $5EF ; Load 5EF into I
  $A76: LD I, $E4D ; Load E4D into I
  $A84: LD I, $5EB ; Load 5EB into I
  $A88: LD I, $95C ; Load 95C into I
  $A8A: LD I, $146 ; Load 146 into I
  $AAE: LD I, $4AC ; Load 4AC into I
  $AE6: LD I, $808 ; Load 808 into I
  $B16: LD I, $068 ; Load 068 into I
  $B60: LD I, $FC9 ; Load FC9 into I
  $B7A: LD I, $B51 ; Load B51 into I
  $B80: LD I, $B44 ; Load B44 into I
  $BE0: LD I, $5AD ; Load 5AD into I
  $BF2: LD I, $6FF ; Load 6FF into I
  $BF4: LD I, $EF1 ; Load EF1 into I
  $C44: LD I, $62C ; Load 62C into I
  $C98: LD I, $70C ; Load 70C into I
  $CA2: LD I, $0E4 ; Load 0E4 into I
  $CD4: LD I, $58D ; Load 58D into I
  $CF8: LD I, $BB4 ; Load BB4 into I
  $D2C: LD I, $5DB ; Load 5DB into I
  $D32: LD I, $720 ; Load 720 into I
  $D44: LD I, $326 ; Load 326 into I
  $D48: LD I, $D93 ; Load D93 into I
  $D68: LD I, $522 ; Load 522 into I
  $DF0: LD I, $F21 ; Load F21 into I
  $E18: LD I, $C9C ; Load C9C into I
  $E2A: LD I, $C3F ; Load C3F into I
  $E42: LD I, $618 ; Load 618 into I
  $E74: LD I, $9A4 ; Load 9A4 into I
  $E8A: LD I, $E7A ; Load E7A into I
  $EEA: LD I, $278 ; Load 278 into I
  $F02: LD I, $AA8 ; Load AA8 into I
  $F04: LD I, $3C6 ; Load 3C6 into I
  $F34: LD I, $1E8 ; Load 1E8 into I
  $F60: LD I, $371 ; Load 371 into I
  $FE0: LD I, $35F ; Load 35F into I
  $FEE: ADD I, V8 ; I ADDRESS MANIPULATION
  $FF6: LD I, $674 ; Load 674 into I

CONTROL FLOW ANALYSIS:
Jumps: 219
Calls: 108
Branches: 264
Loops: 117
Loop Structures:
  $206 -> $096 (backward jump)
  $2F2 -> $1F3 (backward jump)
  $314 -> $009 (backward jump)
  $332 -> $010 (backward jump)
  $3C6 -> $263 (backward jump)
  $45E -> $43D (backward jump)
  $4A4 -> $149 (backward jump)
  $4CE -> $157 (backward jump)
  $552 -> $108 (backward jump)
  $556 -> $292 (backward jump)
  $5C8 -> $2CB (backward jump)
  $618 -> $285 (backward jump)
  $63A -> $0A4 (backward jump)
  $67C -> $58F (backward jump)
  $68C -> $61C (backward jump)
  $6A2 -> $3FC (backward jump)
  $6BE -> $2EB (backward jump)
  $738 -> $662 (backward jump)
  $7A6 -> $44E (backward jump)
  $7B6 -> $1DD (backward jump)
  $7C4 -> $501 (backward jump)
  $7CE -> $3D4 (backward jump)
  $7D6 -> $792 (backward jump)
  $7DA -> $77E (backward jump)
  $7E0 -> $5D5 (backward jump)
  $7FA -> $6AD (backward jump)
  $83E -> $36A (backward jump)
  $84A -> $0C5 (backward jump)
  $896 -> $54F (backward jump)
  $8B4 -> $405 (backward jump)
  $8CA -> $88A (backward jump)
  $8F0 -> $2F3 (backward jump)
  $942 -> $6DA (backward jump)
  $952 -> $637 (backward jump)
  $96A -> $384 (backward jump)
  $96C -> $42B (backward jump)
  $97E -> $66E (backward jump)
  $9B4 -> $6CE (backward jump)
  $A14 -> $277 (backward jump)
  $A16 -> $366 (backward jump)
  $A26 -> $84A (backward jump)
  $A28 -> $151 (backward jump)
  $A2C -> $26E (backward jump)
  $A30 -> $4A1 (backward jump)
  $A4E -> $2E0 (backward jump)
  $A5E -> $533 (backward jump)
  $A72 -> $481 (backward jump)
  $A8C -> $41D (backward jump)
  $A9A -> $44E (backward jump)
  $AAC -> $A87 (backward jump)
  $AFA -> $3C9 (backward jump)
  $B12 -> $1B4 (backward jump)
  $B18 -> $9B0 (backward jump)
  $B28 -> $50A (backward jump)
  $B44 -> $3A5 (backward jump)
  $B56 -> $AFD (backward jump)
  $B74 -> $327 (backward jump)
  $B7C -> $25C (backward jump)
  $B9A -> $500 (backward jump)
  $BA8 -> $0A6 (backward jump)
  $BBC -> $4E7 (backward jump)
  $BC8 -> $0A3 (backward jump)
  $BFA -> $28C (backward jump)
  $C38 -> $4C2 (backward jump)
  $C52 -> $806 (backward jump)
  $C5E -> $6D7 (backward jump)
  $C60 -> $BE3 (backward jump)
  $C6E -> $54E (backward jump)
  $C8C -> $3C1 (backward jump)
  $CCA -> $1FE (backward jump)
  $CD8 -> $726 (backward jump)
  $CE2 -> $1FA (backward jump)
  $D08 -> $C81 (backward jump)
  $D0E -> $635 (backward jump)
  $D1C -> $312 (backward jump)
  $D2E -> $C13 (backward jump)
  $D3A -> $BDC (backward jump)
  $D3C -> $8B2 (backward jump)
  $D4A -> $56A (backward jump)
  $D60 -> $B7E (backward jump)
  $D74 -> $61F (backward jump)
  $D98 -> $065 (backward jump)
  $D9A -> $80B (backward jump)
  $DB6 -> $6EB (backward jump)
  $DF2 -> $BAB (backward jump)
  $E50 -> $624 (backward jump)
  $E58 -> $C31 (backward jump)
  $E5E -> $3F6 (backward jump)
  $E62 -> $BE2 (backward jump)
  $E72 -> $5D2 (backward jump)
  $E78 -> $294 (backward jump)
  $E7E -> $16A (backward jump)
  $E80 -> $A27 (backward jump)
  $E86 -> $588 (backward jump)
  $E9E -> $1B6 (backward jump)
  $EBC -> $111 (backward jump)
  $EBE -> $C0E (backward jump)
  $EDA -> $5CB (backward jump)
  $EE0 -> $A55 (backward jump)
  $EE2 -> $9A9 (backward jump)
  $EF0 -> $B33 (backward jump)
  $F00 -> $1B0 (backward jump)
  $F06 -> $9FC (backward jump)
  $F10 -> $B79 (backward jump)
  $F22 -> $53C (backward jump)
  $F36 -> $2C7 (backward jump)
  $F3A -> $195 (backward jump)
  $F52 -> $DF9 (backward jump)
  $F58 -> $7A0 (backward jump)
  $F6E -> $069 (backward jump)
  $F9C -> $3C4 (backward jump)
  $FA8 -> $290 (backward jump)
  $FB6 -> $157 (backward jump)
  $FC0 -> $F95 (backward jump)
  $FC4 -> $644 (backward jump)
  $FC6 -> $E94 (backward jump)
  $FDE -> $A27 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $E91B   UNKNOWN  $E91B           ; Unknown Exxx instruction
$202    $9E3F   UNKNOWN  $9E3F           ; Unknown 9xxx instruction
$204    $756F   ADD      V5, #6F         ; Add 111 to V5
$206    $1096   JP       $096            ; Jump to 096
$208    $038C   SYS      $38C            ; System call to 38C
$20A    $1A77   JP       $A77            ; Jump to A77
$20C    $F84F   UNKNOWN  F84F            ; Unknown Fxxx instruction
$20E    $19DF   JP       $9DF            ; Jump to 9DF
$210    $5831   UNKNOWN  $5831           ; Unknown 5xxx instruction
$212    $8D55   SUB      VD, V5          ; VD -= V5, VF = !borrow
$214    $2829   CALL     $829            ; Call subroutine at 829
$216    $A029   LD       I, $029         ; Load 029 into I
$218    $6243   LD       V2, #43         ; Load 67 into V2
$21A    $51AC   UNKNOWN  $51AC           ; Unknown 5xxx instruction
$21C    $DACF   DRW      VA, VC, #F      ; Draw 15-byte sprite at VA, VC
$21E    $6E47   LD       VE, #47         ; Load 71 into VE
$220    $EFAF   UNKNOWN  $EFAF           ; Unknown Exxx instruction
$222    $2A00   CALL     $A00            ; Call subroutine at A00
$224    $DC10   DRW      VC, V1, #0      ; Draw 0-byte sprite at VC, V1
$226    $83E5   SUB      V3, VE          ; V3 -= VE, VF = !borrow
$228    $15EA   JP       $5EA            ; Jump to 5EA
$22A    $9BD0   SNE      VB, VD          ; Skip if VB != VD
$22C    $E287   UNKNOWN  $E287           ; Unknown Exxx instruction
$22E    $830A   UNKNOWN  830A            ; Unknown 8xxx instruction
$230    $F5A6   UNKNOWN  F5A6            ; Unknown Fxxx instruction
$232    $4FEB   SNE      VF, #EB         ; Skip if VF != 235
$234    $6951   LD       V9, #51         ; Load 81 into V9
$236    $371A   SE       V7, #1A         ; Skip if V7 == 26
$238    $2551   CALL     $551            ; Call subroutine at 551
$23A    $FB67   UNKNOWN  FB67            ; Unknown Fxxx instruction
$23C    $9B34   UNKNOWN  $9B34           ; Unknown 9xxx instruction
$23E    $B4F7   JP       V0, $4F7        ; Jump to V0 + 4F7
$240    $E6CD   UNKNOWN  $E6CD           ; Unknown Exxx instruction
$242    $6A82   LD       VA, #82         ; Load 130 into VA
$244    $54E2   UNKNOWN  $54E2           ; Unknown 5xxx instruction
$246    $F1F2   UNKNOWN  F1F2            ; Unknown Fxxx instruction
$248    $E2BD   UNKNOWN  $E2BD           ; Unknown Exxx instruction
$24A    $C7E5   RND      V7, #E5         ; V7 = random & E5
$24C    $350E   SE       V5, #0E         ; Skip if V5 == 14
$24E    $C964   RND      V9, #64         ; V9 = random & 64
$250    $6F00   LD       VF, #00         ; Load 0 into VF
$252    $52EB   UNKNOWN  $52EB           ; Unknown 5xxx instruction
$254    $A885   LD       I, $885         ; Load 885 into I
$256    $8CD5   SUB      VC, VD          ; VC -= VD, VF = !borrow
$258    $A971   LD       I, $971         ; Load 971 into I
$25A    $5AE3   UNKNOWN  $5AE3           ; Unknown 5xxx instruction
$25C    $3514   SE       V5, #14         ; Skip if V5 == 20
$25E    $296A   CALL     $96A            ; Call subroutine at 96A
$260    $1657   JP       $657            ; Jump to 657
$262    $A7D5   LD       I, $7D5         ; Load 7D5 into I
$264    $35A4   SE       V5, #A4         ; Skip if V5 == 164
$266    $01D8   SYS      $1D8            ; System call to 1D8
$268    $FBC3   UNKNOWN  FBC3            ; Unknown Fxxx instruction
$26A    $86D2   AND      V6, VD          ; V6 &= VD
$26C    $2DB8   CALL     $DB8            ; Call subroutine at DB8
$26E    $0E16   SYS      $E16            ; System call to E16
$270    $C233   RND      V2, #33         ; V2 = random & 33
$272    $6317   LD       V3, #17         ; Load 23 into V3
$274    $68C7   LD       V8, #C7         ; Load 199 into V8
$276    $98CC   UNKNOWN  $98CC           ; Unknown 9xxx instruction
$278    $5BA7   UNKNOWN  $5BA7           ; Unknown 5xxx instruction
$27A    $AA84   LD       I, $A84         ; Load A84 into I
$27C    $F119   UNKNOWN  F119            ; Unknown Fxxx instruction
$27E    $7108   ADD      V1, #08         ; Add 8 to V1
$280    $1546   JP       $546            ; Jump to 546
$282    $1ED6   JP       $ED6            ; Jump to ED6
$284    $9C19   UNKNOWN  $9C19           ; Unknown 9xxx instruction
$286    $2CBD   CALL     $CBD            ; Call subroutine at CBD
$288    $E86F   UNKNOWN  $E86F           ; Unknown Exxx instruction
$28A    $F9E7   UNKNOWN  F9E7            ; Unknown Fxxx instruction
$28C    $9E1A   UNKNOWN  $9E1A           ; Unknown 9xxx instruction
$28E    $6E94   LD       VE, #94         ; Load 148 into VE
$290    $2ACA   CALL     $ACA            ; Call subroutine at ACA
$292    $06F3   SYS      $6F3            ; System call to 6F3
$294    $5334   UNKNOWN  $5334           ; Unknown 5xxx instruction
$296    $945E   UNKNOWN  $945E           ; Unknown 9xxx instruction
$298    $0375   SYS      $375            ; System call to 375
$29A    $80B2   AND      V0, VB          ; V0 &= VB
$29C    $9DCA   UNKNOWN  $9DCA           ; Unknown 9xxx instruction
$29E    $56E1   UNKNOWN  $56E1           ; Unknown 5xxx instruction
$2A0    $EFC3   UNKNOWN  $EFC3           ; Unknown Exxx instruction
$2A2    $D8C7   DRW      V8, VC, #7      ; Draw 7-byte sprite at V8, VC
$2A4    $87BF   UNKNOWN  87BF            ; Unknown 8xxx instruction
$2A6    $2C92   CALL     $C92            ; Call subroutine at C92
$2A8    $01A0   SYS      $1A0            ; System call to 1A0
$2AA    $4FD1   SNE      VF, #D1         ; Skip if VF != 209
$2AC    $4271   SNE      V2, #71         ; Skip if V2 != 113
$2AE    $8035   SUB      V0, V3          ; V0 -= V3, VF = !borrow
$2B0    $5551   UNKNOWN  $5551           ; Unknown 5xxx instruction
$2B2    $7118   ADD      V1, #18         ; Add 24 to V1
$2B4    $E7B5   UNKNOWN  $E7B5           ; Unknown Exxx instruction
$2B6    $3E98   SE       VE, #98         ; Skip if VE == 152
$2B8    $2472   CALL     $472            ; Call subroutine at 472
$2BA    $3B2E   SE       VB, #2E         ; Skip if VB == 46
$2BC    $B416   JP       V0, $416        ; Jump to V0 + 416
$2BE    $A83C   LD       I, $83C         ; Load 83C into I
$2C0    $79C6   ADD      V9, #C6         ; Add 198 to V9
$2C2    $1EC7   JP       $EC7            ; Jump to EC7
$2C4    $4918   SNE      V9, #18         ; Skip if V9 != 24
$2C6    $0701   SYS      $701            ; System call to 701
$2C8    $D877   DRW      V8, V7, #7      ; Draw 7-byte sprite at V8, V7
$2CA    $0F88   SYS      $F88            ; System call to F88
$2CC    $FAFA   UNKNOWN  FAFA            ; Unknown Fxxx instruction
$2CE    $A300   LD       I, $300         ; Load 300 into I
$2D0    $9F9C   UNKNOWN  $9F9C           ; Unknown 9xxx instruction
$2D2    $6414   LD       V4, #14         ; Load 20 into V4
$2D4    $7A1D   ADD      VA, #1D         ; Add 29 to VA
$2D6    $6D1D   LD       VD, #1D         ; Load 29 into VD
$2D8    $B790   JP       V0, $790        ; Jump to V0 + 790
$2DA    $98F6   UNKNOWN  $98F6           ; Unknown 9xxx instruction
$2DC    $B519   JP       V0, $519        ; Jump to V0 + 519
$2DE    $2E1A   CALL     $E1A            ; Call subroutine at E1A
$2E0    $38E5   SE       V8, #E5         ; Skip if V8 == 229
$2E2    $06F9   SYS      $6F9            ; System call to 6F9
$2E4    $287E   CALL     $87E            ; Call subroutine at 87E
$2E6    $523B   UNKNOWN  $523B           ; Unknown 5xxx instruction
$2E8    $F1AA   UNKNOWN  F1AA            ; Unknown Fxxx instruction
$2EA    $C2F8   RND      V2, #F8         ; V2 = random & F8
$2EC    $392C   SE       V9, #2C         ; Skip if V9 == 44
$2EE    $F139   UNKNOWN  F139            ; Unknown Fxxx instruction
$2F0    $EEE0   UNKNOWN  $EEE0           ; Unknown Exxx instruction
$2F2    $B1F3   JP       V0, $1F3        ; Jump to V0 + 1F3
$2F4    $5A83   UNKNOWN  $5A83           ; Unknown 5xxx instruction
$2F6    $A856   LD       I, $856         ; Load 856 into I
$2F8    $1E29   JP       $E29            ; Jump to E29
$2FA    $1DF4   JP       $DF4            ; Jump to DF4
$2FC    $3CA4   SE       VC, #A4         ; Skip if VC == 164
$2FE    $359F   SE       V5, #9F         ; Skip if V5 == 159
$300    $0006   SYS      $006            ; System call to 006
$302    $0823   SYS      $823            ; System call to 823
$304    $3383   SE       V3, #83         ; Skip if V3 == 131
$306    $8D8D   UNKNOWN  8D8D            ; Unknown 8xxx instruction
$308    $7EBB   ADD      VE, #BB         ; Add 187 to VE
$30A    $2609   CALL     $609            ; Call subroutine at 609
$30C    $3855   SE       V8, #55         ; Skip if V8 == 85
$30E    $F135   UNKNOWN  F135            ; Unknown Fxxx instruction
$310    $6426   LD       V4, #26         ; Load 38 into V4
$312    $D25C   DRW      V2, V5, #C      ; Draw 12-byte sprite at V2, V5
$314    $1009   JP       $009            ; Jump to 009
$316    $01FD   SYS      $1FD            ; System call to 1FD
$318    $789B   ADD      V8, #9B         ; Add 155 to V8
$31A    $AA0C   LD       I, $A0C         ; Load A0C into I
$31C    $6BA4   LD       VB, #A4         ; Load 164 into VB
$31E    $BC94   JP       V0, $C94        ; Jump to V0 + C94
$320    $A2A2   LD       I, $2A2         ; Load 2A2 into I
$322    $76B2   ADD      V6, #B2         ; Add 178 to V6
$324    $B746   JP       V0, $746        ; Jump to V0 + 746
$326    $20DC   CALL     $0DC            ; Call subroutine at 0DC
$328    $7D71   ADD      VD, #71         ; Add 113 to VD
$32A    $BF64   JP       V0, $F64        ; Jump to V0 + F64
$32C    $3C13   SE       VC, #13         ; Skip if VC == 19
$32E    $A9EA   LD       I, $9EA         ; Load 9EA into I
$330    $6EF1   LD       VE, #F1         ; Load 241 into VE
$332    $1010   JP       $010            ; Jump to 010
$334    $0ACC   SYS      $ACC            ; System call to ACC
$336    $AEFA   LD       I, $EFA         ; Load EFA into I
$338    $2933   CALL     $933            ; Call subroutine at 933
$33A    $815F   UNKNOWN  815F            ; Unknown 8xxx instruction
$33C    $B66A   JP       V0, $66A        ; Jump to V0 + 66A
$33E    $DDF5   DRW      VD, VF, #5      ; Draw 5-byte sprite at VD, VF
$340    $FF05   UNKNOWN  FF05            ; Unknown Fxxx instruction
$342    $6081   LD       V0, #81         ; Load 129 into V0
$344    $402F   SNE      V0, #2F         ; Skip if V0 != 47
$346    $2B0E   CALL     $B0E            ; Call subroutine at B0E
$348    $1E28   JP       $E28            ; Jump to E28
$34A    $5DBE   UNKNOWN  $5DBE           ; Unknown 5xxx instruction
$34C    $A378   LD       I, $378         ; Load 378 into I
$34E    $AD6A   LD       I, $D6A         ; Load D6A into I
$350    $1C0E   JP       $C0E            ; Jump to C0E
$352    $E2E6   UNKNOWN  $E2E6           ; Unknown Exxx instruction
$354    $29FA   CALL     $9FA            ; Call subroutine at 9FA
$356    $D0B4   DRW      V0, VB, #4      ; Draw 4-byte sprite at V0, VB
$358    $AB02   LD       I, $B02         ; Load B02 into I
$35A    $CAEB   RND      VA, #EB         ; VA = random & EB
$35C    $6B8B   LD       VB, #8B         ; Load 139 into VB
$35E    $4E96   SNE      VE, #96         ; Skip if VE != 150
$360    $EC49   UNKNOWN  $EC49           ; Unknown Exxx instruction
$362    $E47B   UNKNOWN  $E47B           ; Unknown Exxx instruction
$364    $9864   UNKNOWN  $9864           ; Unknown 9xxx instruction
$366    $2203   CALL     $203            ; Call subroutine at 203
$368    $584B   UNKNOWN  $584B           ; Unknown 5xxx instruction
$36A    $069E   SYS      $69E            ; System call to 69E
$36C    $6ACD   LD       VA, #CD         ; Load 205 into VA
$36E    $5A1B   UNKNOWN  $5A1B           ; Unknown 5xxx instruction
$370    $02D1   SYS      $2D1            ; System call to 2D1
$372    $406C   SNE      V0, #6C         ; Skip if V0 != 108
$374    $ABD9   LD       I, $BD9         ; Load BD9 into I
$376    $0DA7   SYS      $DA7            ; System call to DA7
$378    $1A58   JP       $A58            ; Jump to A58
$37A    $0BB2   SYS      $BB2            ; System call to BB2
$37C    $17E3   JP       $7E3            ; Jump to 7E3
$37E    $19C7   JP       $9C7            ; Jump to 9C7
$380    $2A4B   CALL     $A4B            ; Call subroutine at A4B
$382    $92A4   UNKNOWN  $92A4           ; Unknown 9xxx instruction
$384    $979B   UNKNOWN  $979B           ; Unknown 9xxx instruction
$386    $5824   UNKNOWN  $5824           ; Unknown 5xxx instruction
$388    $1500   JP       $500            ; Jump to 500
$38A    $61C0   LD       V1, #C0         ; Load 192 into V1
$38C    $CCD9   RND      VC, #D9         ; VC = random & D9
$38E    $8779   UNKNOWN  8779            ; Unknown 8xxx instruction
$390    $3DCC   SE       VD, #CC         ; Skip if VD == 204
$392    $7BC0   ADD      VB, #C0         ; Add 192 to VB
$394    $0DF2   SYS      $DF2            ; System call to DF2
$396    $E4B4   UNKNOWN  $E4B4           ; Unknown Exxx instruction
$398    $243E   CALL     $43E            ; Call subroutine at 43E
$39A    $CFBA   RND      VF, #BA         ; VF = random & BA
$39C    $60D0   LD       V0, #D0         ; Load 208 into V0
$39E    $DC46   DRW      VC, V4, #6      ; Draw 6-byte sprite at VC, V4
$3A0    $1491   JP       $491            ; Jump to 491
$3A2    $9041   UNKNOWN  $9041           ; Unknown 9xxx instruction
$3A4    $E0A6   UNKNOWN  $E0A6           ; Unknown Exxx instruction
$3A6    $5A3A   UNKNOWN  $5A3A           ; Unknown 5xxx instruction
$3A8    $F128   UNKNOWN  F128            ; Unknown Fxxx instruction
$3AA    $2D51   CALL     $D51            ; Call subroutine at D51
$3AC    $4B19   SNE      VB, #19         ; Skip if VB != 25
$3AE    $BF13   JP       V0, $F13        ; Jump to V0 + F13
$3B0    $88C1   OR       V8, VC          ; V8 |= VC
$3B2    $5329   UNKNOWN  $5329           ; Unknown 5xxx instruction
$3B4    $F482   UNKNOWN  F482            ; Unknown Fxxx instruction
$3B6    $0129   SYS      $129            ; System call to 129
$3B8    $E8AD   UNKNOWN  $E8AD           ; Unknown Exxx instruction
$3BA    $4AA4   SNE      VA, #A4         ; Skip if VA != 164
$3BC    $FBC6   UNKNOWN  FBC6            ; Unknown Fxxx instruction
$3BE    $F88C   UNKNOWN  F88C            ; Unknown Fxxx instruction
$3C0    $396D   SE       V9, #6D         ; Skip if V9 == 109
$3C2    $AE60   LD       I, $E60         ; Load E60 into I
$3C4    $8CCE   SHL      VC              ; VC <<= 1, VF = MSB
$3C6    $B263   JP       V0, $263        ; Jump to V0 + 263
$3C8    $C552   RND      V5, #52         ; V5 = random & 52
$3CA    $15B7   JP       $5B7            ; Jump to 5B7
$3CC    $6069   LD       V0, #69         ; Load 105 into V0
$3CE    $587E   UNKNOWN  $587E           ; Unknown 5xxx instruction
$3D0    $8AFB   UNKNOWN  8AFB            ; Unknown 8xxx instruction
$3D2    $BB89   JP       V0, $B89        ; Jump to V0 + B89
$3D4    $ACD9   LD       I, $CD9         ; Load CD9 into I
$3D6    $5C54   UNKNOWN  $5C54           ; Unknown 5xxx instruction
$3D8    $3F30   SE       VF, #30         ; Skip if VF == 48
$3DA    $A04A   LD       I, $04A         ; Load 04A into I
$3DC    $62B3   LD       V2, #B3         ; Load 179 into V2
$3DE    $9F6D   UNKNOWN  $9F6D           ; Unknown 9xxx instruction
$3E0    $040A   SYS      $40A            ; System call to 40A
$3E2    $31AA   SE       V1, #AA         ; Skip if V1 == 170
$3E4    $CEFF   RND      VE, #FF         ; VE = random & FF
$3E6    $B972   JP       V0, $972        ; Jump to V0 + 972
$3E8    $5D9D   UNKNOWN  $5D9D           ; Unknown 5xxx instruction
$3EA    $24BA   CALL     $4BA            ; Call subroutine at 4BA
$3EC    $02CC   SYS      $2CC            ; System call to 2CC
$3EE    $8D59   UNKNOWN  8D59            ; Unknown 8xxx instruction
$3F0    $0ECE   SYS      $ECE            ; System call to ECE
$3F2    $00E0   CLS                      ; Clear display
$3F4    $015E   SYS      $15E            ; System call to 15E
$3F6    $F61F   UNKNOWN  F61F            ; Unknown Fxxx instruction
$3F8    $6C93   LD       VC, #93         ; Load 147 into VC
$3FA    $C4C8   RND      V4, #C8         ; V4 = random & C8
$3FC    $1DD0   JP       $DD0            ; Jump to DD0
$3FE    $3DDD   SE       VD, #DD         ; Skip if VD == 221
$400    $BECF   JP       V0, $ECF        ; Jump to V0 + ECF
$402    $A5FC   LD       I, $5FC         ; Load 5FC into I
$404    $97EF   UNKNOWN  $97EF           ; Unknown 9xxx instruction
$406    $71FD   ADD      V1, #FD         ; Add 253 to V1
$408    $C833   RND      V8, #33         ; V8 = random & 33
$40A    $8ADF   UNKNOWN  8ADF            ; Unknown 8xxx instruction
$40C    $80B9   UNKNOWN  80B9            ; Unknown 8xxx instruction
$40E    $40A0   SNE      V0, #A0         ; Skip if V0 != 160
$410    $9991   UNKNOWN  $9991           ; Unknown 9xxx instruction
$412    $E4A5   UNKNOWN  $E4A5           ; Unknown Exxx instruction
$414    $BD1F   JP       V0, $D1F        ; Jump to V0 + D1F
$416    $0F0E   SYS      $F0E            ; System call to F0E
$418    $1CF3   JP       $CF3            ; Jump to CF3
$41A    $C2E9   RND      V2, #E9         ; V2 = random & E9
$41C    $9686   UNKNOWN  $9686           ; Unknown 9xxx instruction
$41E    $A964   LD       I, $964         ; Load 964 into I
$420    $F982   UNKNOWN  F982            ; Unknown Fxxx instruction
$422    $7D41   ADD      VD, #41         ; Add 65 to VD
$424    $9F66   UNKNOWN  $9F66           ; Unknown 9xxx instruction
$426    $301F   SE       V0, #1F         ; Skip if V0 == 31
$428    $0040   SYS      $040            ; System call to 040
$42A    $4F2E   SNE      VF, #2E         ; Skip if VF != 46
$42C    $E751   UNKNOWN  $E751           ; Unknown Exxx instruction
$42E    $2B5A   CALL     $B5A            ; Call subroutine at B5A
$430    $3828   SE       V8, #28         ; Skip if V8 == 40
$432    $EF62   UNKNOWN  $EF62           ; Unknown Exxx instruction
$434    $A080   LD       I, $080         ; Load 080 into I
$436    $225C   CALL     $25C            ; Call subroutine at 25C
$438    $8691   OR       V6, V9          ; V6 |= V9
$43A    $EE3C   UNKNOWN  $EE3C           ; Unknown Exxx instruction
$43C    $4DDC   SNE      VD, #DC         ; Skip if VD != 220
$43E    $F6F4   UNKNOWN  F6F4            ; Unknown Fxxx instruction
$440    $D885   DRW      V8, V8, #5      ; Draw 5-byte sprite at V8, V8
$442    $8FB4   ADD      VF, VB          ; VF += VB, VF = carry
$444    $9C53   UNKNOWN  $9C53           ; Unknown 9xxx instruction
$446    $E40A   UNKNOWN  $E40A           ; Unknown Exxx instruction
$448    $9D8E   UNKNOWN  $9D8E           ; Unknown 9xxx instruction
$44A    $3C7E   SE       VC, #7E         ; Skip if VC == 126
$44C    $DCEE   DRW      VC, VE, #E      ; Draw 14-byte sprite at VC, VE
$44E    $8BB5   SUB      VB, VB          ; VB -= VB, VF = !borrow
$450    $2D71   CALL     $D71            ; Call subroutine at D71
$452    $2E80   CALL     $E80            ; Call subroutine at E80
$454    $7947   ADD      V9, #47         ; Add 71 to V9
$456    $6271   LD       V2, #71         ; Load 113 into V2
$458    $C906   RND      V9, #06         ; V9 = random & 06
$45A    $F097   UNKNOWN  F097            ; Unknown Fxxx instruction
$45C    $C2DF   RND      V2, #DF         ; V2 = random & DF
$45E    $B43D   JP       V0, $43D        ; Jump to V0 + 43D
$460    $A7CD   LD       I, $7CD         ; Load 7CD into I
$462    $8461   OR       V4, V6          ; V4 |= V6
$464    $C5CF   RND      V5, #CF         ; V5 = random & CF
$466    $44DC   SNE      V4, #DC         ; Skip if V4 != 220
$468    $FCD8   UNKNOWN  FCD8            ; Unknown Fxxx instruction
$46A    $D211   DRW      V2, V1, #1      ; Draw 1-byte sprite at V2, V1
$46C    $3763   SE       V7, #63         ; Skip if V7 == 99
$46E    $94CD   UNKNOWN  $94CD           ; Unknown 9xxx instruction
$470    $F13E   UNKNOWN  F13E            ; Unknown Fxxx instruction
$472    $A78F   LD       I, $78F         ; Load 78F into I
$474    $95F1   UNKNOWN  $95F1           ; Unknown 9xxx instruction
$476    $E75B   UNKNOWN  $E75B           ; Unknown Exxx instruction
$478    $66BC   LD       V6, #BC         ; Load 188 into V6
$47A    $875D   UNKNOWN  875D            ; Unknown 8xxx instruction
$47C    $D341   DRW      V3, V4, #1      ; Draw 1-byte sprite at V3, V4
$47E    $E0E6   UNKNOWN  $E0E6           ; Unknown Exxx instruction
$480    $6A75   LD       VA, #75         ; Load 117 into VA
$482    $41F6   SNE      V1, #F6         ; Skip if V1 != 246
$484    $707E   ADD      V0, #7E         ; Add 126 to V0
$486    $18E7   JP       $8E7            ; Jump to 8E7
$488    $1BED   JP       $BED            ; Jump to BED
$48A    $8D7B   UNKNOWN  8D7B            ; Unknown 8xxx instruction
$48C    $DB10   DRW      VB, V1, #0      ; Draw 0-byte sprite at VB, V1
$48E    $FA4E   UNKNOWN  FA4E            ; Unknown Fxxx instruction
$490    $1A52   JP       $A52            ; Jump to A52
$492    $5CD8   UNKNOWN  $5CD8           ; Unknown 5xxx instruction
$494    $1607   JP       $607            ; Jump to 607
$496    $99FF   UNKNOWN  $99FF           ; Unknown 9xxx instruction
$498    $E2F9   UNKNOWN  $E2F9           ; Unknown Exxx instruction
$49A    $5496   UNKNOWN  $5496           ; Unknown 5xxx instruction
$49C    $FE12   UNKNOWN  FE12            ; Unknown Fxxx instruction
$49E    $3900   SE       V9, #00         ; Skip if V9 == 0
$4A0    $9ABE   UNKNOWN  $9ABE           ; Unknown 9xxx instruction
$4A2    $6CE6   LD       VC, #E6         ; Load 230 into VC
$4A4    $1149   JP       $149            ; Jump to 149
$4A6    $443C   SNE      V4, #3C         ; Skip if V4 != 60
$4A8    $C324   RND      V3, #24         ; V3 = random & 24
$4AA    $7C03   ADD      VC, #03         ; Add 3 to VC
$4AC    $3A49   SE       VA, #49         ; Skip if VA == 73
$4AE    $258E   CALL     $58E            ; Call subroutine at 58E
$4B0    $50AA   UNKNOWN  $50AA           ; Unknown 5xxx instruction
$4B2    $073F   SYS      $73F            ; System call to 73F
$4B4    $08D7   SYS      $8D7            ; System call to 8D7
$4B6    $BD04   JP       V0, $D04        ; Jump to V0 + D04
$4B8    $7F84   ADD      VF, #84         ; Add 132 to VF
$4BA    $F7AD   UNKNOWN  F7AD            ; Unknown Fxxx instruction
$4BC    $7446   ADD      V4, #46         ; Add 70 to V4
$4BE    $1947   JP       $947            ; Jump to 947
$4C0    $3371   SE       V3, #71         ; Skip if V3 == 113
$4C2    $360F   SE       V6, #0F         ; Skip if V6 == 15
$4C4    $7F5F   ADD      VF, #5F         ; Add 95 to VF
$4C6    $14CA   JP       $4CA            ; Jump to 4CA
$4C8    $60D9   LD       V0, #D9         ; Load 217 into V0
$4CA    $C4DC   RND      V4, #DC         ; V4 = random & DC
$4CC    $2198   CALL     $198            ; Call subroutine at 198
$4CE    $B157   JP       V0, $157        ; Jump to V0 + 157
$4D0    $E245   UNKNOWN  $E245           ; Unknown Exxx instruction
$4D2    $EE83   UNKNOWN  $EE83           ; Unknown Exxx instruction
$4D4    $6407   LD       V4, #07         ; Load 7 into V4
$4D6    $9300   SNE      V3, V0          ; Skip if V3 != V0
$4D8    $D107   DRW      V1, V0, #7      ; Draw 7-byte sprite at V1, V0
$4DA    $318B   SE       V1, #8B         ; Skip if V1 == 139
$4DC    $A211   LD       I, $211         ; Load 211 into I
$4DE    $953E   UNKNOWN  $953E           ; Unknown 9xxx instruction
$4E0    $01B5   SYS      $1B5            ; System call to 1B5
$4E2    $652B   LD       V5, #2B         ; Load 43 into V5
$4E4    $3B00   SE       VB, #00         ; Skip if VB == 0
$4E6    $DEE1   DRW      VE, VE, #1      ; Draw 1-byte sprite at VE, VE
$4E8    $A763   LD       I, $763         ; Load 763 into I
$4EA    $0813   SYS      $813            ; System call to 813
$4EC    $3AE2   SE       VA, #E2         ; Skip if VA == 226
$4EE    $8F16   SHR      VF              ; VF >>= 1, VF = LSB
$4F0    $3A16   SE       VA, #16         ; Skip if VA == 22
$4F2    $1D96   JP       $D96            ; Jump to D96
$4F4    $2037   CALL     $037            ; Call subroutine at 037
$4F6    $C295   RND      V2, #95         ; V2 = random & 95
$4F8    $D3FE   DRW      V3, VF, #E      ; Draw 14-byte sprite at V3, VF
$4FA    $D459   DRW      V4, V5, #9      ; Draw 9-byte sprite at V4, V5
$4FC    $27FD   CALL     $7FD            ; Call subroutine at 7FD
$4FE    $07F5   SYS      $7F5            ; System call to 7F5
$500    $0B6A   SYS      $B6A            ; System call to B6A
$502    $04AF   SYS      $4AF            ; System call to 4AF
$504    $1E1D   JP       $E1D            ; Jump to E1D
$506    $FF49   UNKNOWN  FF49            ; Unknown Fxxx instruction
$508    $827E   SHL      V2              ; V2 <<= 1, VF = MSB
$50A    $C826   RND      V8, #26         ; V8 = random & 26
$50C    $0C6D   SYS      $C6D            ; System call to C6D
$50E    $195F   JP       $95F            ; Jump to 95F
$510    $57E7   UNKNOWN  $57E7           ; Unknown 5xxx instruction
$512    $E068   UNKNOWN  $E068           ; Unknown Exxx instruction
$514    $A8E0   LD       I, $8E0         ; Load 8E0 into I
$516    $A588   LD       I, $588         ; Load 588 into I
$518    $72EC   ADD      V2, #EC         ; Add 236 to V2
$51A    $0AA7   SYS      $AA7            ; System call to AA7
$51C    $AE29   LD       I, $E29         ; Load E29 into I
$51E    $949F   UNKNOWN  $949F           ; Unknown 9xxx instruction
$520    $72AB   ADD      V2, #AB         ; Add 171 to V2
$522    $1611   JP       $611            ; Jump to 611
$524    $429C   SNE      V2, #9C         ; Skip if V2 != 156
$526    $8089   UNKNOWN  8089            ; Unknown 8xxx instruction
$528    $6DE7   LD       VD, #E7         ; Load 231 into VD
$52A    $1CCC   JP       $CCC            ; Jump to CCC
$52C    $E77E   UNKNOWN  $E77E           ; Unknown Exxx instruction
$52E    $C905   RND      V9, #05         ; V9 = random & 05
$530    $9E75   UNKNOWN  $9E75           ; Unknown 9xxx instruction
$532    $EB18   UNKNOWN  $EB18           ; Unknown Exxx instruction
$534    $4254   SNE      V2, #54         ; Skip if V2 != 84
$536    $52CB   UNKNOWN  $52CB           ; Unknown 5xxx instruction
$538    $DBD7   DRW      VB, VD, #7      ; Draw 7-byte sprite at VB, VD
$53A    $3E4E   SE       VE, #4E         ; Skip if VE == 78
$53C    $6956   LD       V9, #56         ; Load 86 into V9
$53E    $FF86   UNKNOWN  FF86            ; Unknown Fxxx instruction
$540    $52A3   UNKNOWN  $52A3           ; Unknown 5xxx instruction
$542    $ACC7   LD       I, $CC7         ; Load CC7 into I
$544    $53D1   UNKNOWN  $53D1           ; Unknown 5xxx instruction
$546    $42DB   SNE      V2, #DB         ; Skip if V2 != 219
$548    $938E   UNKNOWN  $938E           ; Unknown 9xxx instruction
$54A    $DC65   DRW      VC, V6, #5      ; Draw 5-byte sprite at VC, V6
$54C    $9A3D   UNKNOWN  $9A3D           ; Unknown 9xxx instruction
$54E    $F0E5   UNKNOWN  F0E5            ; Unknown Fxxx instruction
$550    $CD55   RND      VD, #55         ; VD = random & 55
$552    $B108   JP       V0, $108        ; Jump to V0 + 108
$554    $52F6   UNKNOWN  $52F6           ; Unknown 5xxx instruction
$556    $B292   JP       V0, $292        ; Jump to V0 + 292
$558    $CEC2   RND      VE, #C2         ; VE = random & C2
$55A    $2DB2   CALL     $DB2            ; Call subroutine at DB2
$55C    $7D26   ADD      VD, #26         ; Add 38 to VD
$55E    $B568   JP       V0, $568        ; Jump to V0 + 568
$560    $C289   RND      V2, #89         ; V2 = random & 89
$562    $5A17   UNKNOWN  $5A17           ; Unknown 5xxx instruction
$564    $C178   RND      V1, #78         ; V1 = random & 78
$566    $A601   LD       I, $601         ; Load 601 into I
$568    $4B8E   SNE      VB, #8E         ; Skip if VB != 142
$56A    $54CC   UNKNOWN  $54CC           ; Unknown 5xxx instruction
$56C    $C73B   RND      V7, #3B         ; V7 = random & 3B
$56E    $6E4C   LD       VE, #4C         ; Load 76 into VE
$570    $CC2F   RND      VC, #2F         ; VC = random & 2F
$572    $EE9C   UNKNOWN  $EE9C           ; Unknown Exxx instruction
$574    $59A2   UNKNOWN  $59A2           ; Unknown 5xxx instruction
$576    $DF8F   DRW      VF, V8, #F      ; Draw 15-byte sprite at VF, V8
$578    $F808   UNKNOWN  F808            ; Unknown Fxxx instruction
$57A    $1939   JP       $939            ; Jump to 939
$57C    $6F2C   LD       VF, #2C         ; Load 44 into VF
$57E    $0155   SYS      $155            ; System call to 155
$580    $3264   SE       V2, #64         ; Skip if V2 == 100
$582    $D040   DRW      V0, V4, #0      ; Draw 0-byte sprite at V0, V4
$584    $83FF   UNKNOWN  83FF            ; Unknown 8xxx instruction
$586    $FA6F   UNKNOWN  FA6F            ; Unknown Fxxx instruction
$588    $D96C   DRW      V9, V6, #C      ; Draw 12-byte sprite at V9, V6
$58A    $6334   LD       V3, #34         ; Load 52 into V3
$58C    $3A81   SE       VA, #81         ; Skip if VA == 129
$58E    $019C   SYS      $19C            ; System call to 19C
$590    $6C23   LD       VC, #23         ; Load 35 into VC
$592    $4271   SNE      V2, #71         ; Skip if V2 != 113
$594    $4786   SNE      V7, #86         ; Skip if V7 != 134
$596    $AA72   LD       I, $A72         ; Load A72 into I
$598    $A113   LD       I, $113         ; Load 113 into I
$59A    $44A6   SNE      V4, #A6         ; Skip if V4 != 166
$59C    $EC4F   UNKNOWN  $EC4F           ; Unknown Exxx instruction
$59E    $25CB   CALL     $5CB            ; Call subroutine at 5CB
$5A0    $BDFE   JP       V0, $DFE        ; Jump to V0 + DFE
$5A2    $9642   UNKNOWN  $9642           ; Unknown 9xxx instruction
$5A4    $0D91   SYS      $D91            ; System call to D91
$5A6    $49EF   SNE      V9, #EF         ; Skip if V9 != 239
$5A8    $8D88   UNKNOWN  8D88            ; Unknown 8xxx instruction
$5AA    $EA57   UNKNOWN  $EA57           ; Unknown Exxx instruction
$5AC    $F9F2   UNKNOWN  F9F2            ; Unknown Fxxx instruction
$5AE    $1948   JP       $948            ; Jump to 948
$5B0    $7165   ADD      V1, #65         ; Add 101 to V1
$5B2    $36D2   SE       V6, #D2         ; Skip if V6 == 210
$5B4    $233B   CALL     $33B            ; Call subroutine at 33B
$5B6    $0D94   SYS      $D94            ; System call to D94
$5B8    $DA86   DRW      VA, V8, #6      ; Draw 6-byte sprite at VA, V8
$5BA    $E27A   UNKNOWN  $E27A           ; Unknown Exxx instruction
$5BC    $F426   UNKNOWN  F426            ; Unknown Fxxx instruction
$5BE    $C4EA   RND      V4, #EA         ; V4 = random & EA
$5C0    $3683   SE       V6, #83         ; Skip if V6 == 131
$5C2    $7851   ADD      V8, #51         ; Add 81 to V8
$5C4    $6E8D   LD       VE, #8D         ; Load 141 into VE
$5C6    $BAC7   JP       V0, $AC7        ; Jump to V0 + AC7
$5C8    $B2CB   JP       V0, $2CB        ; Jump to V0 + 2CB
$5CA    $816E   SHL      V1              ; V1 <<= 1, VF = MSB
$5CC    $EA07   UNKNOWN  $EA07           ; Unknown Exxx instruction
$5CE    $7700   ADD      V7, #00         ; Add 0 to V7
$5D0    $FFFC   UNKNOWN  FFFC            ; Unknown Fxxx instruction
$5D2    $5D5D   UNKNOWN  $5D5D           ; Unknown 5xxx instruction
$5D4    $5BEE   UNKNOWN  $5BEE           ; Unknown 5xxx instruction
$5D6    $3F73   SE       VF, #73         ; Skip if VF == 115
$5D8    $6276   LD       V2, #76         ; Load 118 into V2
$5DA    $83B8   UNKNOWN  83B8            ; Unknown 8xxx instruction
$5DC    $3CD6   SE       VC, #D6         ; Skip if VC == 214
$5DE    $4A84   SNE      VA, #84         ; Skip if VA != 132
$5E0    $36C3   SE       V6, #C3         ; Skip if V6 == 195
$5E2    $CD62   RND      VD, #62         ; VD = random & 62
$5E4    $AC8A   LD       I, $C8A         ; Load C8A into I
$5E6    $3416   SE       V4, #16         ; Skip if V4 == 22
$5E8    $4506   SNE      V5, #06         ; Skip if V5 != 6
$5EA    $01C5   SYS      $1C5            ; System call to 1C5
$5EC    $3590   SE       V5, #90         ; Skip if V5 == 144
$5EE    $2714   CALL     $714            ; Call subroutine at 714
$5F0    $D6F0   DRW      V6, VF, #0      ; Draw 0-byte sprite at V6, VF
$5F2    $1E90   JP       $E90            ; Jump to E90
$5F4    $298E   CALL     $98E            ; Call subroutine at 98E
$5F6    $77CE   ADD      V7, #CE         ; Add 206 to V7
$5F8    $BFAA   JP       V0, $FAA        ; Jump to V0 + FAA
$5FA    $7741   ADD      V7, #41         ; Add 65 to V7
$5FC    $CC94   RND      VC, #94         ; VC = random & 94
$5FE    $F5E5   UNKNOWN  F5E5            ; Unknown Fxxx instruction
$600    $2A0B   CALL     $A0B            ; Call subroutine at A0B
$602    $37B4   SE       V7, #B4         ; Skip if V7 == 180
$604    $4BB6   SNE      VB, #B6         ; Skip if VB != 182
$606    $7144   ADD      V1, #44         ; Add 68 to V1
$608    $9AE2   UNKNOWN  $9AE2           ; Unknown 9xxx instruction
$60A    $092F   SYS      $92F            ; System call to 92F
$60C    $BA15   JP       V0, $A15        ; Jump to V0 + A15
$60E    $DC94   DRW      VC, V9, #4      ; Draw 4-byte sprite at VC, V9
$610    $C474   RND      V4, #74         ; V4 = random & 74
$612    $D189   DRW      V1, V8, #9      ; Draw 9-byte sprite at V1, V8
$614    $B73F   JP       V0, $73F        ; Jump to V0 + 73F
$616    $D48C   DRW      V4, V8, #C      ; Draw 12-byte sprite at V4, V8
$618    $1285   JP       $285            ; Jump to 285
$61A    $0424   SYS      $424            ; System call to 424
$61C    $7CA5   ADD      VC, #A5         ; Add 165 to VC
$61E    $8020   LD       V0, V2          ; V0 = V2
$620    $4564   SNE      V5, #64         ; Skip if V5 != 100
$622    $87C9   UNKNOWN  87C9            ; Unknown 8xxx instruction
$624    $7816   ADD      V8, #16         ; Add 22 to V8
$626    $8268   UNKNOWN  8268            ; Unknown 8xxx instruction
$628    $A794   LD       I, $794         ; Load 794 into I
$62A    $8307   SUBN     V3, V0          ; V3 = V0 - V3, VF = !borrow
$62C    $8DE6   SHR      VD              ; VD >>= 1, VF = LSB
$62E    $C9F9   RND      V9, #F9         ; V9 = random & F9
$630    $1F39   JP       $F39            ; Jump to F39
$632    $7458   ADD      V4, #58         ; Add 88 to V4
$634    $8301   OR       V3, V0          ; V3 |= V0
$636    $7984   ADD      V9, #84         ; Add 132 to V9
$638    $7526   ADD      V5, #26         ; Add 38 to V5
$63A    $B0A4   JP       V0, $0A4        ; Jump to V0 + 0A4
$63C    $2EE4   CALL     $EE4            ; Call subroutine at EE4
$63E    $DE64   DRW      VE, V6, #4      ; Draw 4-byte sprite at VE, V6
$640    $6EE8   LD       VE, #E8         ; Load 232 into VE
$642    $E714   UNKNOWN  $E714           ; Unknown Exxx instruction
$644    $9BA4   UNKNOWN  $9BA4           ; Unknown 9xxx instruction
$646    $59E1   UNKNOWN  $59E1           ; Unknown 5xxx instruction
$648    $2FD3   CALL     $FD3            ; Call subroutine at FD3
$64A    $D088   DRW      V0, V8, #8      ; Draw 8-byte sprite at V0, V8
$64C    $9D68   UNKNOWN  $9D68           ; Unknown 9xxx instruction
$64E    $78F4   ADD      V8, #F4         ; Add 244 to V8
$650    $E6F0   UNKNOWN  $E6F0           ; Unknown Exxx instruction
$652    $982B   UNKNOWN  $982B           ; Unknown 9xxx instruction
$654    $C9F3   RND      V9, #F3         ; V9 = random & F3
$656    $3966   SE       V9, #66         ; Skip if V9 == 102
$658    $FA81   UNKNOWN  FA81            ; Unknown Fxxx instruction
$65A    $6C32   LD       VC, #32         ; Load 50 into VC
$65C    $C9F6   RND      V9, #F6         ; V9 = random & F6
$65E    $6E43   LD       VE, #43         ; Load 67 into VE
$660    $3373   SE       V3, #73         ; Skip if V3 == 115
$662    $5C05   UNKNOWN  $5C05           ; Unknown 5xxx instruction
$664    $A660   LD       I, $660         ; Load 660 into I
$666    $77C9   ADD      V7, #C9         ; Add 201 to V7
$668    $9F2C   UNKNOWN  $9F2C           ; Unknown 9xxx instruction
$66A    $2DD1   CALL     $DD1            ; Call subroutine at DD1
$66C    $991D   UNKNOWN  $991D           ; Unknown 9xxx instruction
$66E    $4C5C   SNE      VC, #5C         ; Skip if VC != 92
$670    $A5A8   LD       I, $5A8         ; Load 5A8 into I
$672    $4CF0   SNE      VC, #F0         ; Skip if VC != 240
$674    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$676    $967C   UNKNOWN  $967C           ; Unknown 9xxx instruction
$678    $2572   CALL     $572            ; Call subroutine at 572
$67A    $6D0C   LD       VD, #0C         ; Load 12 into VD
$67C    $B58F   JP       V0, $58F        ; Jump to V0 + 58F
$67E    $E54E   UNKNOWN  $E54E           ; Unknown Exxx instruction
$680    $E1EB   UNKNOWN  $E1EB           ; Unknown Exxx instruction
$682    $4141   SNE      V1, #41         ; Skip if V1 != 65
$684    $F2B1   UNKNOWN  F2B1            ; Unknown Fxxx instruction
$686    $E89E   SKP      V8              ; Skip if key V8 pressed
$688    $5CFC   UNKNOWN  $5CFC           ; Unknown 5xxx instruction
$68A    $4966   SNE      V9, #66         ; Skip if V9 != 102
$68C    $B61C   JP       V0, $61C        ; Jump to V0 + 61C
$68E    $01C1   SYS      $1C1            ; System call to 1C1
$690    $510E   UNKNOWN  $510E           ; Unknown 5xxx instruction
$692    $F6EE   UNKNOWN  F6EE            ; Unknown Fxxx instruction
$694    $1CFF   JP       $CFF            ; Jump to CFF
$696    $6BA0   LD       VB, #A0         ; Load 160 into VB
$698    $7F00   ADD      VF, #00         ; Add 0 to VF
$69A    $F3C3   UNKNOWN  F3C3            ; Unknown Fxxx instruction
$69C    $FC8A   UNKNOWN  FC8A            ; Unknown Fxxx instruction
$69E    $D7F7   DRW      V7, VF, #7      ; Draw 7-byte sprite at V7, VF
$6A0    $CB41   RND      VB, #41         ; VB = random & 41
$6A2    $13FC   JP       $3FC            ; Jump to 3FC
$6A4    $89D2   AND      V9, VD          ; V9 &= VD
$6A6    $079E   SYS      $79E            ; System call to 79E
$6A8    $3434   SE       V4, #34         ; Skip if V4 == 52
$6AA    $30FF   SE       V0, #FF         ; Skip if V0 == 255
$6AC    $5BDC   UNKNOWN  $5BDC           ; Unknown 5xxx instruction
$6AE    $F7EC   UNKNOWN  F7EC            ; Unknown Fxxx instruction
$6B0    $9B9D   UNKNOWN  $9B9D           ; Unknown 9xxx instruction
$6B2    $0F05   SYS      $F05            ; System call to F05
$6B4    $A2EE   LD       I, $2EE         ; Load 2EE into I
$6B6    $0573   SYS      $573            ; System call to 573
$6B8    $F721   UNKNOWN  F721            ; Unknown Fxxx instruction
$6BA    $27C8   CALL     $7C8            ; Call subroutine at 7C8
$6BC    $39DF   SE       V9, #DF         ; Skip if V9 == 223
$6BE    $B2EB   JP       V0, $2EB        ; Jump to V0 + 2EB
$6C0    $353F   SE       V5, #3F         ; Skip if V5 == 63
$6C2    $26F6   CALL     $6F6            ; Call subroutine at 6F6
$6C4    $F125   UNKNOWN  F125            ; Unknown Fxxx instruction
$6C6    $DFC9   DRW      VF, VC, #9      ; Draw 9-byte sprite at VF, VC
$6C8    $4CA5   SNE      VC, #A5         ; Skip if VC != 165
$6CA    $9905   UNKNOWN  $9905           ; Unknown 9xxx instruction
$6CC    $BABC   JP       V0, $ABC        ; Jump to V0 + ABC
$6CE    $2D51   CALL     $D51            ; Call subroutine at D51
$6D0    $8B05   SUB      VB, V0          ; VB -= V0, VF = !borrow
$6D2    $BBE2   JP       V0, $BE2        ; Jump to V0 + BE2
$6D4    $69B0   LD       V9, #B0         ; Load 176 into V9
$6D6    $6120   LD       V1, #20         ; Load 32 into V1
$6D8    $21F1   CALL     $1F1            ; Call subroutine at 1F1
$6DA    $DB96   DRW      VB, V9, #6      ; Draw 6-byte sprite at VB, V9
$6DC    $37F4   SE       V7, #F4         ; Skip if V7 == 244
$6DE    $20ED   CALL     $0ED            ; Call subroutine at 0ED
$6E0    $F93B   UNKNOWN  F93B            ; Unknown Fxxx instruction
$6E2    $0382   SYS      $382            ; System call to 382
$6E4    $05FF   SYS      $5FF            ; System call to 5FF
$6E6    $1C16   JP       $C16            ; Jump to C16
$6E8    $4415   SNE      V4, #15         ; Skip if V4 != 21
$6EA    $DEB0   DRW      VE, VB, #0      ; Draw 0-byte sprite at VE, VB
$6EC    $DC7A   DRW      VC, V7, #A      ; Draw 10-byte sprite at VC, V7
$6EE    $5B50   SE       VB, V5          ; Skip if VB == V5
$6F0    $311B   SE       V1, #1B         ; Skip if V1 == 27
$6F2    $94FA   UNKNOWN  $94FA           ; Unknown 9xxx instruction
$6F4    $3FEF   SE       VF, #EF         ; Skip if VF == 239
$6F6    $2780   CALL     $780            ; Call subroutine at 780
$6F8    $D16C   DRW      V1, V6, #C      ; Draw 12-byte sprite at V1, V6
$6FA    $3890   SE       V8, #90         ; Skip if V8 == 144
$6FC    $66BC   LD       V6, #BC         ; Load 188 into V6
$6FE    $262F   CALL     $62F            ; Call subroutine at 62F
$700    $81AE   SHL      V1              ; V1 <<= 1, VF = MSB
$702    $A07A   LD       I, $07A         ; Load 07A into I
$704    $E476   UNKNOWN  $E476           ; Unknown Exxx instruction
$706    $6A9C   LD       VA, #9C         ; Load 156 into VA
$708    $79D5   ADD      V9, #D5         ; Add 213 to V9
$70A    $7545   ADD      V5, #45         ; Add 69 to V5
$70C    $3BC2   SE       VB, #C2         ; Skip if VB == 194
$70E    $F8DB   UNKNOWN  F8DB            ; Unknown Fxxx instruction
$710    $7F3D   ADD      VF, #3D         ; Add 61 to VF
$712    $62BB   LD       V2, #BB         ; Load 187 into V2
$714    $41CC   SNE      V1, #CC         ; Skip if V1 != 204
$716    $AD43   LD       I, $D43         ; Load D43 into I
$718    $1F17   JP       $F17            ; Jump to F17
$71A    $0325   SYS      $325            ; System call to 325
$71C    $BA41   JP       V0, $A41        ; Jump to V0 + A41
$71E    $5C5B   UNKNOWN  $5C5B           ; Unknown 5xxx instruction
$720    $00A3   SYS      $0A3            ; System call to 0A3
$722    $3D21   SE       VD, #21         ; Skip if VD == 33
$724    $D369   DRW      V3, V6, #9      ; Draw 9-byte sprite at V3, V6
$726    $6895   LD       V8, #95         ; Load 149 into V8
$728    $A34E   LD       I, $34E         ; Load 34E into I
$72A    $A63C   LD       I, $63C         ; Load 63C into I
$72C    $BDA6   JP       V0, $DA6        ; Jump to V0 + DA6
$72E    $BC23   JP       V0, $C23        ; Jump to V0 + C23
$730    $37C8   SE       V7, #C8         ; Skip if V7 == 200
$732    $450D   SNE      V5, #0D         ; Skip if V5 != 13
$734    $84FC   UNKNOWN  84FC            ; Unknown 8xxx instruction
$736    $0795   SYS      $795            ; System call to 795
$738    $B662   JP       V0, $662        ; Jump to V0 + 662
$73A    $4C23   SNE      VC, #23         ; Skip if VC != 35
$73C    $CFC1   RND      VF, #C1         ; VF = random & C1
$73E    $FB30   UNKNOWN  FB30            ; Unknown Fxxx instruction
$740    $3CB0   SE       VC, #B0         ; Skip if VC == 176
$742    $C79C   RND      V7, #9C         ; V7 = random & 9C
$744    $1933   JP       $933            ; Jump to 933
$746    $363F   SE       V6, #3F         ; Skip if V6 == 63
$748    $5431   UNKNOWN  $5431           ; Unknown 5xxx instruction
$74A    $76DF   ADD      V6, #DF         ; Add 223 to V6
$74C    $3DF1   SE       VD, #F1         ; Skip if VD == 241
$74E    $6A50   LD       VA, #50         ; Load 80 into VA
$750    $A9D5   LD       I, $9D5         ; Load 9D5 into I
$752    $FFBD   UNKNOWN  FFBD            ; Unknown Fxxx instruction
$754    $C1B9   RND      V1, #B9         ; V1 = random & B9
$756    $DE51   DRW      VE, V5, #1      ; Draw 1-byte sprite at VE, V5
$758    $41A7   SNE      V1, #A7         ; Skip if V1 != 167
$75A    $3575   SE       V5, #75         ; Skip if V5 == 117
$75C    $2BB1   CALL     $BB1            ; Call subroutine at BB1
$75E    $1EBB   JP       $EBB            ; Jump to EBB
$760    $53DC   UNKNOWN  $53DC           ; Unknown 5xxx instruction
$762    $EAC2   UNKNOWN  $EAC2           ; Unknown Exxx instruction
$764    $5D67   UNKNOWN  $5D67           ; Unknown 5xxx instruction
$766    $95CE   UNKNOWN  $95CE           ; Unknown 9xxx instruction
$768    $AC2A   LD       I, $C2A         ; Load C2A into I
$76A    $054D   SYS      $54D            ; System call to 54D
$76C    $A827   LD       I, $827         ; Load 827 into I
$76E    $F878   UNKNOWN  F878            ; Unknown Fxxx instruction
$770    $497B   SNE      V9, #7B         ; Skip if V9 != 123
$772    $66A1   LD       V6, #A1         ; Load 161 into V6
$774    $AD52   LD       I, $D52         ; Load D52 into I
$776    $CB9F   RND      VB, #9F         ; VB = random & 9F
$778    $07F9   SYS      $7F9            ; System call to 7F9
$77A    $9841   UNKNOWN  $9841           ; Unknown 9xxx instruction
$77C    $E726   UNKNOWN  $E726           ; Unknown Exxx instruction
$77E    $3679   SE       V6, #79         ; Skip if V6 == 121
$780    $9223   UNKNOWN  $9223           ; Unknown 9xxx instruction
$782    $51F1   UNKNOWN  $51F1           ; Unknown 5xxx instruction
$784    $44B4   SNE      V4, #B4         ; Skip if V4 != 180
$786    $089D   SYS      $89D            ; System call to 89D
$788    $857D   UNKNOWN  857D            ; Unknown 8xxx instruction
$78A    $029A   SYS      $29A            ; System call to 29A
$78C    $8740   LD       V7, V4          ; V7 = V4
$78E    $59D4   UNKNOWN  $59D4           ; Unknown 5xxx instruction
$790    $4AA0   SNE      VA, #A0         ; Skip if VA != 160
$792    $3E6D   SE       VE, #6D         ; Skip if VE == 109
$794    $3F74   SE       VF, #74         ; Skip if VF == 116
$796    $76D8   ADD      V6, #D8         ; Add 216 to V6
$798    $9712   UNKNOWN  $9712           ; Unknown 9xxx instruction
$79A    $FE67   UNKNOWN  FE67            ; Unknown Fxxx instruction
$79C    $A257   LD       I, $257         ; Load 257 into I
$79E    $EEFB   UNKNOWN  $EEFB           ; Unknown Exxx instruction
$7A0    $2F67   CALL     $F67            ; Call subroutine at F67
$7A2    $50A2   UNKNOWN  $50A2           ; Unknown 5xxx instruction
$7A4    $F78F   UNKNOWN  F78F            ; Unknown Fxxx instruction
$7A6    $B44E   JP       V0, $44E        ; Jump to V0 + 44E
$7A8    $5978   UNKNOWN  $5978           ; Unknown 5xxx instruction
$7AA    $8DBF   UNKNOWN  8DBF            ; Unknown 8xxx instruction
$7AC    $E5C7   UNKNOWN  $E5C7           ; Unknown Exxx instruction
$7AE    $6896   LD       V8, #96         ; Load 150 into V8
$7B0    $0976   SYS      $976            ; System call to 976
$7B2    $081C   SYS      $81C            ; System call to 81C
$7B4    $E787   UNKNOWN  $E787           ; Unknown Exxx instruction
$7B6    $B1DD   JP       V0, $1DD        ; Jump to V0 + 1DD
$7B8    $2E17   CALL     $E17            ; Call subroutine at E17
$7BA    $CD7D   RND      VD, #7D         ; VD = random & 7D
$7BC    $C0AB   RND      V0, #AB         ; V0 = random & AB
$7BE    $F633   LD       B, V6           ; Store BCD of V6 at I, I+1, I+2
$7C0    $8811   OR       V8, V1          ; V8 |= V1
$7C2    $4674   SNE      V6, #74         ; Skip if V6 != 116
$7C4    $1501   JP       $501            ; Jump to 501
$7C6    $0E7A   SYS      $E7A            ; System call to E7A
$7C8    $3CCB   SE       VC, #CB         ; Skip if VC == 203
$7CA    $4CC8   SNE      VC, #C8         ; Skip if VC != 200
$7CC    $DEAE   DRW      VE, VA, #E      ; Draw 14-byte sprite at VE, VA
$7CE    $B3D4   JP       V0, $3D4        ; Jump to V0 + 3D4
$7D0    $22F1   CALL     $2F1            ; Call subroutine at 2F1
$7D2    $D05F   DRW      V0, V5, #F      ; Draw 15-byte sprite at V0, V5
$7D4    $70E0   ADD      V0, #E0         ; Add 224 to V0
$7D6    $B792   JP       V0, $792        ; Jump to V0 + 792
$7D8    $3D8E   SE       VD, #8E         ; Skip if VD == 142
$7DA    $B77E   JP       V0, $77E        ; Jump to V0 + 77E
$7DC    $A5BE   LD       I, $5BE         ; Load 5BE into I
$7DE    $0F79   SYS      $F79            ; System call to F79
$7E0    $15D5   JP       $5D5            ; Jump to 5D5
$7E2    $99E1   UNKNOWN  $99E1           ; Unknown 9xxx instruction
$7E4    $6DA7   LD       VD, #A7         ; Load 167 into VD
$7E6    $016B   SYS      $16B            ; System call to 16B
$7E8    $0E8A   SYS      $E8A            ; System call to E8A
$7EA    $C880   RND      V8, #80         ; V8 = random & 80
$7EC    $1A43   JP       $A43            ; Jump to A43
$7EE    $C507   RND      V5, #07         ; V5 = random & 07
$7F0    $8AD8   UNKNOWN  8AD8            ; Unknown 8xxx instruction
$7F2    $CE65   RND      VE, #65         ; VE = random & 65
$7F4    $817E   SHL      V1              ; V1 <<= 1, VF = MSB
$7F6    $3674   SE       V6, #74         ; Skip if V6 == 116
$7F8    $EFD0   UNKNOWN  $EFD0           ; Unknown Exxx instruction
$7FA    $16AD   JP       $6AD            ; Jump to 6AD
$7FC    $B86F   JP       V0, $86F        ; Jump to V0 + 86F
$7FE    $64C7   LD       V4, #C7         ; Load 199 into V4
$800    $509E   UNKNOWN  $509E           ; Unknown 5xxx instruction
$802    $6AEB   LD       VA, #EB         ; Load 235 into VA
$804    $A864   LD       I, $864         ; Load 864 into I
$806    $EF46   UNKNOWN  $EF46           ; Unknown Exxx instruction
$808    $BEA2   JP       V0, $EA2        ; Jump to V0 + EA2
$80A    $E872   UNKNOWN  $E872           ; Unknown Exxx instruction
$80C    $5C6A   UNKNOWN  $5C6A           ; Unknown 5xxx instruction
$80E    $E753   UNKNOWN  $E753           ; Unknown Exxx instruction
$810    $DB90   DRW      VB, V9, #0      ; Draw 0-byte sprite at VB, V9
$812    $9E81   UNKNOWN  $9E81           ; Unknown 9xxx instruction
$814    $68B1   LD       V8, #B1         ; Load 177 into V8
$816    $A447   LD       I, $447         ; Load 447 into I
$818    $3EB3   SE       VE, #B3         ; Skip if VE == 179
$81A    $6255   LD       V2, #55         ; Load 85 into V2
$81C    $8F3A   UNKNOWN  8F3A            ; Unknown 8xxx instruction
$81E    $49CE   SNE      V9, #CE         ; Skip if V9 != 206
$820    $447A   SNE      V4, #7A         ; Skip if V4 != 122
$822    $C1C5   RND      V1, #C5         ; V1 = random & C5
$824    $EAB0   UNKNOWN  $EAB0           ; Unknown Exxx instruction
$826    $8D17   SUBN     VD, V1          ; VD = V1 - VD, VF = !borrow
$828    $5624   UNKNOWN  $5624           ; Unknown 5xxx instruction
$82A    $C70D   RND      V7, #0D         ; V7 = random & 0D
$82C    $CA83   RND      VA, #83         ; VA = random & 83
$82E    $5F0B   UNKNOWN  $5F0B           ; Unknown 5xxx instruction
$830    $D996   DRW      V9, V9, #6      ; Draw 6-byte sprite at V9, V9
$832    $787E   ADD      V8, #7E         ; Add 126 to V8
$834    $2B3D   CALL     $B3D            ; Call subroutine at B3D
$836    $D1EB   DRW      V1, VE, #B      ; Draw 11-byte sprite at V1, VE
$838    $CB05   RND      VB, #05         ; VB = random & 05
$83A    $DD3E   DRW      VD, V3, #E      ; Draw 14-byte sprite at VD, V3
$83C    $F93E   UNKNOWN  F93E            ; Unknown Fxxx instruction
$83E    $B36A   JP       V0, $36A        ; Jump to V0 + 36A
$840    $049D   SYS      $49D            ; System call to 49D
$842    $3330   SE       V3, #30         ; Skip if V3 == 48
$844    $3448   SE       V4, #48         ; Skip if V4 == 72
$846    $9573   UNKNOWN  $9573           ; Unknown 9xxx instruction
$848    $F5BE   UNKNOWN  F5BE            ; Unknown Fxxx instruction
$84A    $B0C5   JP       V0, $0C5        ; Jump to V0 + 0C5
$84C    $D829   DRW      V8, V2, #9      ; Draw 9-byte sprite at V8, V2
$84E    $3B37   SE       VB, #37         ; Skip if VB == 55
$850    $9556   UNKNOWN  $9556           ; Unknown 9xxx instruction
$852    $86B4   ADD      V6, VB          ; V6 += VB, VF = carry
$854    $2501   CALL     $501            ; Call subroutine at 501
$856    $1DCC   JP       $DCC            ; Jump to DCC
$858    $E102   UNKNOWN  $E102           ; Unknown Exxx instruction
$85A    $F3EF   UNKNOWN  F3EF            ; Unknown Fxxx instruction
$85C    $A5E4   LD       I, $5E4         ; Load 5E4 into I
$85E    $AAED   LD       I, $AED         ; Load AED into I
$860    $032E   SYS      $32E            ; System call to 32E
$862    $C955   RND      V9, #55         ; V9 = random & 55
$864    $0E1F   SYS      $E1F            ; System call to E1F
$866    $FE5F   UNKNOWN  FE5F            ; Unknown Fxxx instruction
$868    $6B47   LD       VB, #47         ; Load 71 into VB
$86A    $4DA3   SNE      VD, #A3         ; Skip if VD != 163
$86C    $9088   UNKNOWN  $9088           ; Unknown 9xxx instruction
$86E    $EEFE   UNKNOWN  $EEFE           ; Unknown Exxx instruction
$870    $EBCD   UNKNOWN  $EBCD           ; Unknown Exxx instruction
$872    $8983   XOR      V9, V8          ; V9 ^= V8
$874    $0632   SYS      $632            ; System call to 632
$876    $E625   UNKNOWN  $E625           ; Unknown Exxx instruction
$878    $69F2   LD       V9, #F2         ; Load 242 into V9
$87A    $08A3   SYS      $8A3            ; System call to 8A3
$87C    $BA4C   JP       V0, $A4C        ; Jump to V0 + A4C
$87E    $1D15   JP       $D15            ; Jump to D15
$880    $76A1   ADD      V6, #A1         ; Add 161 to V6
$882    $C25C   RND      V2, #5C         ; V2 = random & 5C
$884    $DFAC   DRW      VF, VA, #C      ; Draw 12-byte sprite at VF, VA
$886    $7BCF   ADD      VB, #CF         ; Add 207 to VB
$888    $4D60   SNE      VD, #60         ; Skip if VD != 96
$88A    $1C57   JP       $C57            ; Jump to C57
$88C    $E48A   UNKNOWN  $E48A           ; Unknown Exxx instruction
$88E    $50D4   UNKNOWN  $50D4           ; Unknown 5xxx instruction
$890    $4CE5   SNE      VC, #E5         ; Skip if VC != 229
$892    $5C06   UNKNOWN  $5C06           ; Unknown 5xxx instruction
$894    $DC28   DRW      VC, V2, #8      ; Draw 8-byte sprite at VC, V2
$896    $154F   JP       $54F            ; Jump to 54F
$898    $1D1C   JP       $D1C            ; Jump to D1C
$89A    $2DC7   CALL     $DC7            ; Call subroutine at DC7
$89C    $AB50   LD       I, $B50         ; Load B50 into I
$89E    $7B0A   ADD      VB, #0A         ; Add 10 to VB
$8A0    $98AF   UNKNOWN  $98AF           ; Unknown 9xxx instruction
$8A2    $787D   ADD      V8, #7D         ; Add 125 to V8
$8A4    $8D96   SHR      VD              ; VD >>= 1, VF = LSB
$8A6    $2172   CALL     $172            ; Call subroutine at 172
$8A8    $DC56   DRW      VC, V5, #6      ; Draw 6-byte sprite at VC, V5
$8AA    $C85D   RND      V8, #5D         ; V8 = random & 5D
$8AC    $D00A   DRW      V0, V0, #A      ; Draw 10-byte sprite at V0, V0
$8AE    $43B9   SNE      V3, #B9         ; Skip if V3 != 185
$8B0    $C25D   RND      V2, #5D         ; V2 = random & 5D
$8B2    $7AE3   ADD      VA, #E3         ; Add 227 to VA
$8B4    $1405   JP       $405            ; Jump to 405
$8B6    $0DE2   SYS      $DE2            ; System call to DE2
$8B8    $50CA   UNKNOWN  $50CA           ; Unknown 5xxx instruction
$8BA    $A78E   LD       I, $78E         ; Load 78E into I
$8BC    $4B46   SNE      VB, #46         ; Skip if VB != 70
$8BE    $45B4   SNE      V5, #B4         ; Skip if V5 != 180
$8C0    $5B00   SE       VB, V0          ; Skip if VB == V0
$8C2    $352D   SE       V5, #2D         ; Skip if V5 == 45
$8C4    $1EC9   JP       $EC9            ; Jump to EC9
$8C6    $6759   LD       V7, #59         ; Load 89 into V7
$8C8    $2FD4   CALL     $FD4            ; Call subroutine at FD4
$8CA    $B88A   JP       V0, $88A        ; Jump to V0 + 88A
$8CC    $F320   UNKNOWN  F320            ; Unknown Fxxx instruction
$8CE    $AF9F   LD       I, $F9F         ; Load F9F into I
$8D0    $A4D8   LD       I, $4D8         ; Load 4D8 into I
$8D2    $CA28   RND      VA, #28         ; VA = random & 28
$8D4    $5F30   SE       VF, V3          ; Skip if VF == V3
$8D6    $C4F0   RND      V4, #F0         ; V4 = random & F0
$8D8    $287A   CALL     $87A            ; Call subroutine at 87A
$8DA    $D2FE   DRW      V2, VF, #E      ; Draw 14-byte sprite at V2, VF
$8DC    $CCF6   RND      VC, #F6         ; VC = random & F6
$8DE    $31F5   SE       V1, #F5         ; Skip if V1 == 245
$8E0    $7708   ADD      V7, #08         ; Add 8 to V7
$8E2    $8517   SUBN     V5, V1          ; V5 = V1 - V5, VF = !borrow
$8E4    $927B   UNKNOWN  $927B           ; Unknown 9xxx instruction
$8E6    $209E   CALL     $09E            ; Call subroutine at 09E
$8E8    $BC72   JP       V0, $C72        ; Jump to V0 + C72
$8EA    $2038   CALL     $038            ; Call subroutine at 038
$8EC    $5776   UNKNOWN  $5776           ; Unknown 5xxx instruction
$8EE    $DB84   DRW      VB, V8, #4      ; Draw 4-byte sprite at VB, V8
$8F0    $B2F3   JP       V0, $2F3        ; Jump to V0 + 2F3
$8F2    $1FCC   JP       $FCC            ; Jump to FCC
$8F4    $E3F1   UNKNOWN  $E3F1           ; Unknown Exxx instruction
$8F6    $82D4   ADD      V2, VD          ; V2 += VD, VF = carry
$8F8    $705E   ADD      V0, #5E         ; Add 94 to V0
$8FA    $EB0D   UNKNOWN  $EB0D           ; Unknown Exxx instruction
$8FC    $F0E1   UNKNOWN  F0E1            ; Unknown Fxxx instruction
$8FE    $2530   CALL     $530            ; Call subroutine at 530
$900    $34F9   SE       V4, #F9         ; Skip if V4 == 249
$902    $4AC3   SNE      VA, #C3         ; Skip if VA != 195
$904    $8CFC   UNKNOWN  8CFC            ; Unknown 8xxx instruction
$906    $C7EC   RND      V7, #EC         ; V7 = random & EC
$908    $4CF1   SNE      VC, #F1         ; Skip if VC != 241
$90A    $840E   SHL      V4              ; V4 <<= 1, VF = MSB
$90C    $E051   UNKNOWN  $E051           ; Unknown Exxx instruction
$90E    $383D   SE       V8, #3D         ; Skip if V8 == 61
$910    $BDE1   JP       V0, $DE1        ; Jump to V0 + DE1
$912    $25A2   CALL     $5A2            ; Call subroutine at 5A2
$914    $D29B   DRW      V2, V9, #B      ; Draw 11-byte sprite at V2, V9
$916    $C7AC   RND      V7, #AC         ; V7 = random & AC
$918    $8CEF   UNKNOWN  8CEF            ; Unknown 8xxx instruction
$91A    $E14A   UNKNOWN  $E14A           ; Unknown Exxx instruction
$91C    $64A4   LD       V4, #A4         ; Load 164 into V4
$91E    $1E94   JP       $E94            ; Jump to E94
$920    $2DD2   CALL     $DD2            ; Call subroutine at DD2
$922    $0066   SYS      $066            ; System call to 066
$924    $A43B   LD       I, $43B         ; Load 43B into I
$926    $DD97   DRW      VD, V9, #7      ; Draw 7-byte sprite at VD, V9
$928    $BAEA   JP       V0, $AEA        ; Jump to V0 + AEA
$92A    $9B33   UNKNOWN  $9B33           ; Unknown 9xxx instruction
$92C    $E9EC   UNKNOWN  $E9EC           ; Unknown Exxx instruction
$92E    $CC29   RND      VC, #29         ; VC = random & 29
$930    $D62D   DRW      V6, V2, #D      ; Draw 13-byte sprite at V6, V2
$932    $4D8A   SNE      VD, #8A         ; Skip if VD != 138
$934    $DA85   DRW      VA, V8, #5      ; Draw 5-byte sprite at VA, V8
$936    $D527   DRW      V5, V2, #7      ; Draw 7-byte sprite at V5, V2
$938    $CA02   RND      VA, #02         ; VA = random & 02
$93A    $5D9F   UNKNOWN  $5D9F           ; Unknown 5xxx instruction
$93C    $F22B   UNKNOWN  F22B            ; Unknown Fxxx instruction
$93E    $933F   UNKNOWN  $933F           ; Unknown 9xxx instruction
$940    $8B61   OR       VB, V6          ; VB |= V6
$942    $B6DA   JP       V0, $6DA        ; Jump to V0 + 6DA
$944    $ADA6   LD       I, $DA6         ; Load DA6 into I
$946    $E689   UNKNOWN  $E689           ; Unknown Exxx instruction
$948    $4CFA   SNE      VC, #FA         ; Skip if VC != 250
$94A    $A3BF   LD       I, $3BF         ; Load 3BF into I
$94C    $3A5E   SE       VA, #5E         ; Skip if VA == 94
$94E    $2A50   CALL     $A50            ; Call subroutine at A50
$950    $8ABB   UNKNOWN  8ABB            ; Unknown 8xxx instruction
$952    $B637   JP       V0, $637        ; Jump to V0 + 637
$954    $2A3D   CALL     $A3D            ; Call subroutine at A3D
$956    $6E46   LD       VE, #46         ; Load 70 into VE
$958    $BEFC   JP       V0, $EFC        ; Jump to V0 + EFC
$95A    $9F01   UNKNOWN  $9F01           ; Unknown 9xxx instruction
$95C    $2F39   CALL     $F39            ; Call subroutine at F39
$95E    $C595   RND      V5, #95         ; V5 = random & 95
$960    $05E2   SYS      $5E2            ; System call to 5E2
$962    $8301   OR       V3, V0          ; V3 |= V0
$964    $64DA   LD       V4, #DA         ; Load 218 into V4
$966    $6EDC   LD       VE, #DC         ; Load 220 into VE
$968    $609F   LD       V0, #9F         ; Load 159 into V0
$96A    $B384   JP       V0, $384        ; Jump to V0 + 384
$96C    $B42B   JP       V0, $42B        ; Jump to V0 + 42B
$96E    $89D0   LD       V9, VD          ; V9 = VD
$970    $86C7   SUBN     V6, VC          ; V6 = VC - V6, VF = !borrow
$972    $561B   UNKNOWN  $561B           ; Unknown 5xxx instruction
$974    $8F7A   UNKNOWN  8F7A            ; Unknown 8xxx instruction
$976    $38C3   SE       V8, #C3         ; Skip if V8 == 195
$978    $7158   ADD      V1, #58         ; Add 88 to V1
$97A    $8CBD   UNKNOWN  8CBD            ; Unknown 8xxx instruction
$97C    $6904   LD       V9, #04         ; Load 4 into V9
$97E    $B66E   JP       V0, $66E        ; Jump to V0 + 66E
$980    $7741   ADD      V7, #41         ; Add 65 to V7
$982    $9EA9   UNKNOWN  $9EA9           ; Unknown 9xxx instruction
$984    $CA8E   RND      VA, #8E         ; VA = random & 8E
$986    $29B9   CALL     $9B9            ; Call subroutine at 9B9
$988    $F7BE   UNKNOWN  F7BE            ; Unknown Fxxx instruction
$98A    $57B4   UNKNOWN  $57B4           ; Unknown 5xxx instruction
$98C    $975C   UNKNOWN  $975C           ; Unknown 9xxx instruction
$98E    $4B8D   SNE      VB, #8D         ; Skip if VB != 141
$990    $DFF5   DRW      VF, VF, #5      ; Draw 5-byte sprite at VF, VF
$992    $7829   ADD      V8, #29         ; Add 41 to V8
$994    $E6A1   SKNP     V6              ; Skip if key V6 not pressed
$996    $0C52   SYS      $C52            ; System call to C52
$998    $44F0   SNE      V4, #F0         ; Skip if V4 != 240
$99A    $6844   LD       V8, #44         ; Load 68 into V8
$99C    $C03A   RND      V0, #3A         ; V0 = random & 3A
$99E    $6550   LD       V5, #50         ; Load 80 into V5
$9A0    $57C6   UNKNOWN  $57C6           ; Unknown 5xxx instruction
$9A2    $F35D   UNKNOWN  F35D            ; Unknown Fxxx instruction
$9A4    $D195   DRW      V1, V9, #5      ; Draw 5-byte sprite at V1, V9
$9A6    $CA61   RND      VA, #61         ; VA = random & 61
$9A8    $CDF0   RND      VD, #F0         ; VD = random & F0
$9AA    $57E3   UNKNOWN  $57E3           ; Unknown 5xxx instruction
$9AC    $6C9A   LD       VC, #9A         ; Load 154 into VC
$9AE    $7226   ADD      V2, #26         ; Add 38 to V2
$9B0    $9AE1   UNKNOWN  $9AE1           ; Unknown 9xxx instruction
$9B2    $76E4   ADD      V6, #E4         ; Add 228 to V6
$9B4    $B6CE   JP       V0, $6CE        ; Jump to V0 + 6CE
$9B6    $841A   UNKNOWN  841A            ; Unknown 8xxx instruction
$9B8    $9088   UNKNOWN  $9088           ; Unknown 9xxx instruction
$9BA    $D385   DRW      V3, V8, #5      ; Draw 5-byte sprite at V3, V8
$9BC    $D86E   DRW      V8, V6, #E      ; Draw 14-byte sprite at V8, V6
$9BE    $419A   SNE      V1, #9A         ; Skip if V1 != 154
$9C0    $2E97   CALL     $E97            ; Call subroutine at E97
$9C2    $7B6D   ADD      VB, #6D         ; Add 109 to VB
$9C4    $4868   SNE      V8, #68         ; Skip if V8 != 104
$9C6    $4DDB   SNE      VD, #DB         ; Skip if VD != 219
$9C8    $A955   LD       I, $955         ; Load 955 into I
$9CA    $C857   RND      V8, #57         ; V8 = random & 57
$9CC    $0A5D   SYS      $A5D            ; System call to A5D
$9CE    $F033   LD       B, V0           ; Store BCD of V0 at I, I+1, I+2
$9D0    $50B3   UNKNOWN  $50B3           ; Unknown 5xxx instruction
$9D2    $E431   UNKNOWN  $E431           ; Unknown Exxx instruction
$9D4    $7414   ADD      V4, #14         ; Add 20 to V4
$9D6    $A6AC   LD       I, $6AC         ; Load 6AC into I
$9D8    $96EF   UNKNOWN  $96EF           ; Unknown 9xxx instruction
$9DA    $AED4   LD       I, $ED4         ; Load ED4 into I
$9DC    $E98F   UNKNOWN  $E98F           ; Unknown Exxx instruction
$9DE    $2B12   CALL     $B12            ; Call subroutine at B12
$9E0    $5B2A   UNKNOWN  $5B2A           ; Unknown 5xxx instruction
$9E2    $36D7   SE       V6, #D7         ; Skip if V6 == 215
$9E4    $57EA   UNKNOWN  $57EA           ; Unknown 5xxx instruction
$9E6    $BE35   JP       V0, $E35        ; Jump to V0 + E35
$9E8    $F3FC   UNKNOWN  F3FC            ; Unknown Fxxx instruction
$9EA    $2924   CALL     $924            ; Call subroutine at 924
$9EC    $C5C7   RND      V5, #C7         ; V5 = random & C7
$9EE    $9E9A   UNKNOWN  $9E9A           ; Unknown 9xxx instruction
$9F0    $383A   SE       V8, #3A         ; Skip if V8 == 58
$9F2    $24C1   CALL     $4C1            ; Call subroutine at 4C1
$9F4    $E88E   UNKNOWN  $E88E           ; Unknown Exxx instruction
$9F6    $97B7   UNKNOWN  $97B7           ; Unknown 9xxx instruction
$9F8    $046A   SYS      $46A            ; System call to 46A
$9FA    $8614   ADD      V6, V1          ; V6 += V1, VF = carry
$9FC    $F906   UNKNOWN  F906            ; Unknown Fxxx instruction
$9FE    $E5A0   UNKNOWN  $E5A0           ; Unknown Exxx instruction
$A00    $FD72   UNKNOWN  FD72            ; Unknown Fxxx instruction
$A02    $DB89   DRW      VB, V8, #9      ; Draw 9-byte sprite at VB, V8
$A04    $5EA2   UNKNOWN  $5EA2           ; Unknown 5xxx instruction
$A06    $9BE7   UNKNOWN  $9BE7           ; Unknown 9xxx instruction
$A08    $6E8E   LD       VE, #8E         ; Load 142 into VE
$A0A    $7F0C   ADD      VF, #0C         ; Add 12 to VF
$A0C    $D50E   DRW      V5, V0, #E      ; Draw 14-byte sprite at V5, V0
$A0E    $8F49   UNKNOWN  8F49            ; Unknown 8xxx instruction
$A10    $7139   ADD      V1, #39         ; Add 57 to V1
$A12    $78E1   ADD      V8, #E1         ; Add 225 to V8
$A14    $1277   JP       $277            ; Jump to 277
$A16    $B366   JP       V0, $366        ; Jump to V0 + 366
$A18    $A210   LD       I, $210         ; Load 210 into I
$A1A    $FE4B   UNKNOWN  FE4B            ; Unknown Fxxx instruction
$A1C    $D25D   DRW      V2, V5, #D      ; Draw 13-byte sprite at V2, V5
$A1E    $D386   DRW      V3, V8, #6      ; Draw 6-byte sprite at V3, V8
$A20    $85A5   SUB      V5, VA          ; V5 -= VA, VF = !borrow
$A22    $715B   ADD      V1, #5B         ; Add 91 to V1
$A24    $897D   UNKNOWN  897D            ; Unknown 8xxx instruction
$A26    $184A   JP       $84A            ; Jump to 84A
$A28    $B151   JP       V0, $151        ; Jump to V0 + 151
$A2A    $3A48   SE       VA, #48         ; Skip if VA == 72
$A2C    $B26E   JP       V0, $26E        ; Jump to V0 + 26E
$A2E    $5AED   UNKNOWN  $5AED           ; Unknown 5xxx instruction
$A30    $14A1   JP       $4A1            ; Jump to 4A1
$A32    $3FB1   SE       VF, #B1         ; Skip if VF == 177
$A34    $9027   UNKNOWN  $9027           ; Unknown 9xxx instruction
$A36    $433C   SNE      V3, #3C         ; Skip if V3 != 60
$A38    $3175   SE       V1, #75         ; Skip if V1 == 117
$A3A    $DF74   DRW      VF, V7, #4      ; Draw 4-byte sprite at VF, V7
$A3C    $65E9   LD       V5, #E9         ; Load 233 into V5
$A3E    $F6BB   UNKNOWN  F6BB            ; Unknown Fxxx instruction
$A40    $F645   UNKNOWN  F645            ; Unknown Fxxx instruction
$A42    $CA72   RND      VA, #72         ; VA = random & 72
$A44    $36FD   SE       V6, #FD         ; Skip if V6 == 253
$A46    $5F02   UNKNOWN  $5F02           ; Unknown 5xxx instruction
$A48    $5BED   UNKNOWN  $5BED           ; Unknown 5xxx instruction
$A4A    $FFA7   UNKNOWN  FFA7            ; Unknown Fxxx instruction
$A4C    $E5F7   UNKNOWN  $E5F7           ; Unknown Exxx instruction
$A4E    $12E0   JP       $2E0            ; Jump to 2E0
$A50    $BB31   JP       V0, $B31        ; Jump to V0 + B31
$A52    $A5EF   LD       I, $5EF         ; Load 5EF into I
$A54    $8216   SHR      V2              ; V2 >>= 1, VF = LSB
$A56    $9283   UNKNOWN  $9283           ; Unknown 9xxx instruction
$A58    $0824   SYS      $824            ; System call to 824
$A5A    $8EB9   UNKNOWN  8EB9            ; Unknown 8xxx instruction
$A5C    $C4E7   RND      V4, #E7         ; V4 = random & E7
$A5E    $1533   JP       $533            ; Jump to 533
$A60    $C9F4   RND      V9, #F4         ; V9 = random & F4
$A62    $3080   SE       V0, #80         ; Skip if V0 == 128
$A64    $61B6   LD       V1, #B6         ; Load 182 into V1
$A66    $7A32   ADD      VA, #32         ; Add 50 to VA
$A68    $45C6   SNE      V5, #C6         ; Skip if V5 != 198
$A6A    $60DF   LD       V0, #DF         ; Load 223 into V0
$A6C    $656B   LD       V5, #6B         ; Load 107 into V5
$A6E    $919B   UNKNOWN  $919B           ; Unknown 9xxx instruction
$A70    $D141   DRW      V1, V4, #1      ; Draw 1-byte sprite at V1, V4
$A72    $1481   JP       $481            ; Jump to 481
$A74    $7992   ADD      V9, #92         ; Add 146 to V9
$A76    $AE4D   LD       I, $E4D         ; Load E4D into I
$A78    $DFC6   DRW      VF, VC, #6      ; Draw 6-byte sprite at VF, VC
$A7A    $DC7F   DRW      VC, V7, #F      ; Draw 15-byte sprite at VC, V7
$A7C    $DE85   DRW      VE, V8, #5      ; Draw 5-byte sprite at VE, V8
$A7E    $6D46   LD       VD, #46         ; Load 70 into VD
$A80    $1B79   JP       $B79            ; Jump to B79
$A82    $5245   UNKNOWN  $5245           ; Unknown 5xxx instruction
$A84    $A5EB   LD       I, $5EB         ; Load 5EB into I
$A86    $C3B0   RND      V3, #B0         ; V3 = random & B0
$A88    $A95C   LD       I, $95C         ; Load 95C into I
$A8A    $A146   LD       I, $146         ; Load 146 into I
$A8C    $141D   JP       $41D            ; Jump to 41D
$A8E    $3002   SE       V0, #02         ; Skip if V0 == 2
$A90    $2473   CALL     $473            ; Call subroutine at 473
$A92    $447F   SNE      V4, #7F         ; Skip if V4 != 127
$A94    $3E41   SE       VE, #41         ; Skip if VE == 65
$A96    $8B50   LD       VB, V5          ; VB = V5
$A98    $BD53   JP       V0, $D53        ; Jump to V0 + D53
$A9A    $144E   JP       $44E            ; Jump to 44E
$A9C    $7CE1   ADD      VC, #E1         ; Add 225 to VC
$A9E    $2C4B   CALL     $C4B            ; Call subroutine at C4B
$AA0    $76F3   ADD      V6, #F3         ; Add 243 to V6
$AA2    $482E   SNE      V8, #2E         ; Skip if V8 != 46
$AA4    $820A   UNKNOWN  820A            ; Unknown 8xxx instruction
$AA6    $EC59   UNKNOWN  $EC59           ; Unknown Exxx instruction
$AA8    $EDAD   UNKNOWN  $EDAD           ; Unknown Exxx instruction
$AAA    $BCF0   JP       V0, $CF0        ; Jump to V0 + CF0
$AAC    $1A87   JP       $A87            ; Jump to A87
$AAE    $A4AC   LD       I, $4AC         ; Load 4AC into I
$AB0    $9D44   UNKNOWN  $9D44           ; Unknown 9xxx instruction
$AB2    $EA75   UNKNOWN  $EA75           ; Unknown Exxx instruction
$AB4    $751D   ADD      V5, #1D         ; Add 29 to V5
$AB6    $883F   UNKNOWN  883F            ; Unknown 8xxx instruction
$AB8    $91DA   UNKNOWN  $91DA           ; Unknown 9xxx instruction
$ABA    $F241   UNKNOWN  F241            ; Unknown Fxxx instruction
$ABC    $8EF5   SUB      VE, VF          ; VE -= VF, VF = !borrow
$ABE    $0FF0   SYS      $FF0            ; System call to FF0
$AC0    $1FDF   JP       $FDF            ; Jump to FDF
$AC2    $661E   LD       V6, #1E         ; Load 30 into V6
$AC4    $523B   UNKNOWN  $523B           ; Unknown 5xxx instruction
$AC6    $5D59   UNKNOWN  $5D59           ; Unknown 5xxx instruction
$AC8    $551F   UNKNOWN  $551F           ; Unknown 5xxx instruction
$ACA    $EA52   UNKNOWN  $EA52           ; Unknown Exxx instruction
$ACC    $E526   UNKNOWN  $E526           ; Unknown Exxx instruction
$ACE    $4804   SNE      V8, #04         ; Skip if V8 != 4
$AD0    $F69E   UNKNOWN  F69E            ; Unknown Fxxx instruction
$AD2    $86AD   UNKNOWN  86AD            ; Unknown 8xxx instruction
$AD4    $2CFF   CALL     $CFF            ; Call subroutine at CFF
$AD6    $BD87   JP       V0, $D87        ; Jump to V0 + D87
$AD8    $20F4   CALL     $0F4            ; Call subroutine at 0F4
$ADA    $3C14   SE       VC, #14         ; Skip if VC == 20
$ADC    $5C95   UNKNOWN  $5C95           ; Unknown 5xxx instruction
$ADE    $2ED0   CALL     $ED0            ; Call subroutine at ED0
$AE0    $0BE0   SYS      $BE0            ; System call to BE0
$AE2    $DF61   DRW      VF, V6, #1      ; Draw 1-byte sprite at VF, V6
$AE4    $BDD7   JP       V0, $DD7        ; Jump to V0 + DD7
$AE6    $A808   LD       I, $808         ; Load 808 into I
$AE8    $2457   CALL     $457            ; Call subroutine at 457
$AEA    $C62F   RND      V6, #2F         ; V6 = random & 2F
$AEC    $4809   SNE      V8, #09         ; Skip if V8 != 9
$AEE    $CECB   RND      VE, #CB         ; VE = random & CB
$AF0    $055E   SYS      $55E            ; System call to 55E
$AF2    $D883   DRW      V8, V8, #3      ; Draw 3-byte sprite at V8, V8
$AF4    $5F8F   UNKNOWN  $5F8F           ; Unknown 5xxx instruction
$AF6    $9EBC   UNKNOWN  $9EBC           ; Unknown 9xxx instruction
$AF8    $3D9A   SE       VD, #9A         ; Skip if VD == 154
$AFA    $B3C9   JP       V0, $3C9        ; Jump to V0 + 3C9
$AFC    $D260   DRW      V2, V6, #0      ; Draw 0-byte sprite at V2, V6
$AFE    $1B3E   JP       $B3E            ; Jump to B3E
$B00    $6176   LD       V1, #76         ; Load 118 into V1
$B02    $2243   CALL     $243            ; Call subroutine at 243
$B04    $F6F3   UNKNOWN  F6F3            ; Unknown Fxxx instruction
$B06    $097A   SYS      $97A            ; System call to 97A
$B08    $FF73   UNKNOWN  FF73            ; Unknown Fxxx instruction
$B0A    $FC37   UNKNOWN  FC37            ; Unknown Fxxx instruction
$B0C    $E42E   UNKNOWN  $E42E           ; Unknown Exxx instruction
$B0E    $307E   SE       V0, #7E         ; Skip if V0 == 126
$B10    $F22C   UNKNOWN  F22C            ; Unknown Fxxx instruction
$B12    $11B4   JP       $1B4            ; Jump to 1B4
$B14    $DF19   DRW      VF, V1, #9      ; Draw 9-byte sprite at VF, V1
$B16    $A068   LD       I, $068         ; Load 068 into I
$B18    $B9B0   JP       V0, $9B0        ; Jump to V0 + 9B0
$B1A    $863B   UNKNOWN  863B            ; Unknown 8xxx instruction
$B1C    $4EF9   SNE      VE, #F9         ; Skip if VE != 249
$B1E    $406F   SNE      V0, #6F         ; Skip if V0 != 111
$B20    $4972   SNE      V9, #72         ; Skip if V9 != 114
$B22    $3F97   SE       VF, #97         ; Skip if VF == 151
$B24    $E1E0   UNKNOWN  $E1E0           ; Unknown Exxx instruction
$B26    $F4FD   UNKNOWN  F4FD            ; Unknown Fxxx instruction
$B28    $B50A   JP       V0, $50A        ; Jump to V0 + 50A
$B2A    $C342   RND      V3, #42         ; V3 = random & 42
$B2C    $4E1E   SNE      VE, #1E         ; Skip if VE != 30
$B2E    $4631   SNE      V6, #31         ; Skip if V6 != 49
$B30    $8BEC   UNKNOWN  8BEC            ; Unknown 8xxx instruction
$B32    $37E3   SE       V7, #E3         ; Skip if V7 == 227
$B34    $38B7   SE       V8, #B7         ; Skip if V8 == 183
$B36    $7E75   ADD      VE, #75         ; Add 117 to VE
$B38    $360D   SE       V6, #0D         ; Skip if V6 == 13
$B3A    $9718   UNKNOWN  $9718           ; Unknown 9xxx instruction
$B3C    $5DA1   UNKNOWN  $5DA1           ; Unknown 5xxx instruction
$B3E    $96FD   UNKNOWN  $96FD           ; Unknown 9xxx instruction
$B40    $64DD   LD       V4, #DD         ; Load 221 into V4
$B42    $D9A9   DRW      V9, VA, #9      ; Draw 9-byte sprite at V9, VA
$B44    $13A5   JP       $3A5            ; Jump to 3A5
$B46    $FC1B   UNKNOWN  FC1B            ; Unknown Fxxx instruction
$B48    $8D71   OR       VD, V7          ; VD |= V7
$B4A    $782F   ADD      V8, #2F         ; Add 47 to V8
$B4C    $C38C   RND      V3, #8C         ; V3 = random & 8C
$B4E    $C751   RND      V7, #51         ; V7 = random & 51
$B50    $0A4C   SYS      $A4C            ; System call to A4C
$B52    $C914   RND      V9, #14         ; V9 = random & 14
$B54    $9CE3   UNKNOWN  $9CE3           ; Unknown 9xxx instruction
$B56    $BAFD   JP       V0, $AFD        ; Jump to V0 + AFD
$B58    $2B8C   CALL     $B8C            ; Call subroutine at B8C
$B5A    $20AB   CALL     $0AB            ; Call subroutine at 0AB
$B5C    $E779   UNKNOWN  $E779           ; Unknown Exxx instruction
$B5E    $3BE6   SE       VB, #E6         ; Skip if VB == 230
$B60    $AFC9   LD       I, $FC9         ; Load FC9 into I
$B62    $C700   RND      V7, #00         ; V7 = random & 00
$B64    $7612   ADD      V6, #12         ; Add 18 to V6
$B66    $79A0   ADD      V9, #A0         ; Add 160 to V9
$B68    $CFA5   RND      VF, #A5         ; VF = random & A5
$B6A    $BCE4   JP       V0, $CE4        ; Jump to V0 + CE4
$B6C    $7645   ADD      V6, #45         ; Add 69 to V6
$B6E    $CB91   RND      VB, #91         ; VB = random & 91
$B70    $D746   DRW      V7, V4, #6      ; Draw 6-byte sprite at V7, V4
$B72    $9BC8   UNKNOWN  $9BC8           ; Unknown 9xxx instruction
$B74    $1327   JP       $327            ; Jump to 327
$B76    $87E0   LD       V7, VE          ; V7 = VE
$B78    $85B4   ADD      V5, VB          ; V5 += VB, VF = carry
$B7A    $AB51   LD       I, $B51         ; Load B51 into I
$B7C    $125C   JP       $25C            ; Jump to 25C
$B7E    $E48F   UNKNOWN  $E48F           ; Unknown Exxx instruction
$B80    $AB44   LD       I, $B44         ; Load B44 into I
$B82    $960C   UNKNOWN  $960C           ; Unknown 9xxx instruction
$B84    $9BF9   UNKNOWN  $9BF9           ; Unknown 9xxx instruction
$B86    $665E   LD       V6, #5E         ; Load 94 into V6
$B88    $57C0   SE       V7, VC          ; Skip if V7 == VC
$B8A    $D077   DRW      V0, V7, #7      ; Draw 7-byte sprite at V0, V7
$B8C    $1CA3   JP       $CA3            ; Jump to CA3
$B8E    $71AA   ADD      V1, #AA         ; Add 170 to V1
$B90    $277A   CALL     $77A            ; Call subroutine at 77A
$B92    $0D58   SYS      $D58            ; System call to D58
$B94    $744E   ADD      V4, #4E         ; Add 78 to V4
$B96    $84AF   UNKNOWN  84AF            ; Unknown 8xxx instruction
$B98    $DC99   DRW      VC, V9, #9      ; Draw 9-byte sprite at VC, V9
$B9A    $B500   JP       V0, $500        ; Jump to V0 + 500
$B9C    $FAD2   UNKNOWN  FAD2            ; Unknown Fxxx instruction
$B9E    $E3A1   SKNP     V3              ; Skip if key V3 not pressed
$BA0    $4F7F   SNE      VF, #7F         ; Skip if VF != 127
$BA2    $6498   LD       V4, #98         ; Load 152 into V4
$BA4    $F3D7   UNKNOWN  F3D7            ; Unknown Fxxx instruction
$BA6    $28EA   CALL     $8EA            ; Call subroutine at 8EA
$BA8    $10A6   JP       $0A6            ; Jump to 0A6
$BAA    $250B   CALL     $50B            ; Call subroutine at 50B
$BAC    $3DAE   SE       VD, #AE         ; Skip if VD == 174
$BAE    $63A0   LD       V3, #A0         ; Load 160 into V3
$BB0    $4FD7   SNE      VF, #D7         ; Skip if VF != 215
$BB2    $3EE8   SE       VE, #E8         ; Skip if VE == 232
$BB4    $8C8B   UNKNOWN  8C8B            ; Unknown 8xxx instruction
$BB6    $8F1F   UNKNOWN  8F1F            ; Unknown 8xxx instruction
$BB8    $43B1   SNE      V3, #B1         ; Skip if V3 != 177
$BBA    $3859   SE       V8, #59         ; Skip if V8 == 89
$BBC    $B4E7   JP       V0, $4E7        ; Jump to V0 + 4E7
$BBE    $3401   SE       V4, #01         ; Skip if V4 == 1
$BC0    $7688   ADD      V6, #88         ; Add 136 to V6
$BC2    $03C8   SYS      $3C8            ; System call to 3C8
$BC4    $C1D2   RND      V1, #D2         ; V1 = random & D2
$BC6    $F833   LD       B, V8           ; Store BCD of V8 at I, I+1, I+2
$BC8    $10A3   JP       $0A3            ; Jump to 0A3
$BCA    $5150   SE       V1, V5          ; Skip if V1 == V5
$BCC    $7CCD   ADD      VC, #CD         ; Add 205 to VC
$BCE    $39F8   SE       V9, #F8         ; Skip if V9 == 248
$BD0    $E294   UNKNOWN  $E294           ; Unknown Exxx instruction
$BD2    $1C4D   JP       $C4D            ; Jump to C4D
$BD4    $49B1   SNE      V9, #B1         ; Skip if V9 != 177
$BD6    $066A   SYS      $66A            ; System call to 66A
$BD8    $F7FB   UNKNOWN  F7FB            ; Unknown Fxxx instruction
$BDA    $F51F   UNKNOWN  F51F            ; Unknown Fxxx instruction
$BDC    $2C0D   CALL     $C0D            ; Call subroutine at C0D
$BDE    $9EA6   UNKNOWN  $9EA6           ; Unknown 9xxx instruction
$BE0    $A5AD   LD       I, $5AD         ; Load 5AD into I
$BE2    $380E   SE       V8, #0E         ; Skip if V8 == 14
$BE4    $C35C   RND      V3, #5C         ; V3 = random & 5C
$BE6    $0366   SYS      $366            ; System call to 366
$BE8    $9188   UNKNOWN  $9188           ; Unknown 9xxx instruction
$BEA    $68E6   LD       V8, #E6         ; Load 230 into V8
$BEC    $1E92   JP       $E92            ; Jump to E92
$BEE    $5F10   SE       VF, V1          ; Skip if VF == V1
$BF0    $DB8B   DRW      VB, V8, #B      ; Draw 11-byte sprite at VB, V8
$BF2    $A6FF   LD       I, $6FF         ; Load 6FF into I
$BF4    $AEF1   LD       I, $EF1         ; Load EF1 into I
$BF6    $4846   SNE      V8, #46         ; Skip if V8 != 70
$BF8    $C376   RND      V3, #76         ; V3 = random & 76
$BFA    $B28C   JP       V0, $28C        ; Jump to V0 + 28C
$BFC    $CEE7   RND      VE, #E7         ; VE = random & E7
$BFE    $3767   SE       V7, #67         ; Skip if V7 == 103
$C00    $9470   SNE      V4, V7          ; Skip if V4 != V7
$C02    $C139   RND      V1, #39         ; V1 = random & 39
$C04    $0DC6   SYS      $DC6            ; System call to DC6
$C06    $9E0F   UNKNOWN  $9E0F           ; Unknown 9xxx instruction
$C08    $DC05   DRW      VC, V0, #5      ; Draw 5-byte sprite at VC, V0
$C0A    $5ABE   UNKNOWN  $5ABE           ; Unknown 5xxx instruction
$C0C    $9AB5   UNKNOWN  $9AB5           ; Unknown 9xxx instruction
$C0E    $06C4   SYS      $6C4            ; System call to 6C4
$C10    $656E   LD       V5, #6E         ; Load 110 into V5
$C12    $9B89   UNKNOWN  $9B89           ; Unknown 9xxx instruction
$C14    $D7B8   DRW      V7, VB, #8      ; Draw 8-byte sprite at V7, VB
$C16    $9830   SNE      V8, V3          ; Skip if V8 != V3
$C18    $7137   ADD      V1, #37         ; Add 55 to V1
$C1A    $BF60   JP       V0, $F60        ; Jump to V0 + F60
$C1C    $97DD   UNKNOWN  $97DD           ; Unknown 9xxx instruction
$C1E    $3622   SE       V6, #22         ; Skip if V6 == 34
$C20    $8A09   UNKNOWN  8A09            ; Unknown 8xxx instruction
$C22    $76D6   ADD      V6, #D6         ; Add 214 to V6
$C24    $D4C3   DRW      V4, VC, #3      ; Draw 3-byte sprite at V4, VC
$C26    $63EE   LD       V3, #EE         ; Load 238 into V3
$C28    $4139   SNE      V1, #39         ; Skip if V1 != 57
$C2A    $4826   SNE      V8, #26         ; Skip if V8 != 38
$C2C    $6C06   LD       VC, #06         ; Load 6 into VC
$C2E    $EE63   UNKNOWN  $EE63           ; Unknown Exxx instruction
$C30    $45D3   SNE      V5, #D3         ; Skip if V5 != 211
$C32    $D89A   DRW      V8, V9, #A      ; Draw 10-byte sprite at V8, V9
$C34    $8190   LD       V1, V9          ; V1 = V9
$C36    $3AC4   SE       VA, #C4         ; Skip if VA == 196
$C38    $B4C2   JP       V0, $4C2        ; Jump to V0 + 4C2
$C3A    $BF84   JP       V0, $F84        ; Jump to V0 + F84
$C3C    $7F21   ADD      VF, #21         ; Add 33 to VF
$C3E    $80DD   UNKNOWN  80DD            ; Unknown 8xxx instruction
$C40    $92DB   UNKNOWN  $92DB           ; Unknown 9xxx instruction
$C42    $953A   UNKNOWN  $953A           ; Unknown 9xxx instruction
$C44    $A62C   LD       I, $62C         ; Load 62C into I
$C46    $8FF0   LD       VF, VF          ; VF = VF
$C48    $F03D   UNKNOWN  F03D            ; Unknown Fxxx instruction
$C4A    $0AAB   SYS      $AAB            ; System call to AAB
$C4C    $23BB   CALL     $3BB            ; Call subroutine at 3BB
$C4E    $30C2   SE       V0, #C2         ; Skip if V0 == 194
$C50    $F8F3   UNKNOWN  F8F3            ; Unknown Fxxx instruction
$C52    $1806   JP       $806            ; Jump to 806
$C54    $FE8C   UNKNOWN  FE8C            ; Unknown Fxxx instruction
$C56    $71E9   ADD      V1, #E9         ; Add 233 to V1
$C58    $5A8A   UNKNOWN  $5A8A           ; Unknown 5xxx instruction
$C5A    $65A3   LD       V5, #A3         ; Load 163 into V5
$C5C    $ECDF   UNKNOWN  $ECDF           ; Unknown Exxx instruction
$C5E    $B6D7   JP       V0, $6D7        ; Jump to V0 + 6D7
$C60    $1BE3   JP       $BE3            ; Jump to BE3
$C62    $6F30   LD       VF, #30         ; Load 48 into VF
$C64    $7495   ADD      V4, #95         ; Add 149 to V4
$C66    $3546   SE       V5, #46         ; Skip if V5 == 70
$C68    $7670   ADD      V6, #70         ; Add 112 to V6
$C6A    $0BF0   SYS      $BF0            ; System call to BF0
$C6C    $2DA9   CALL     $DA9            ; Call subroutine at DA9
$C6E    $B54E   JP       V0, $54E        ; Jump to V0 + 54E
$C70    $7163   ADD      V1, #63         ; Add 99 to V1
$C72    $D9E0   DRW      V9, VE, #0      ; Draw 0-byte sprite at V9, VE
$C74    $6371   LD       V3, #71         ; Load 113 into V3
$C76    $FF46   UNKNOWN  FF46            ; Unknown Fxxx instruction
$C78    $CD16   RND      VD, #16         ; VD = random & 16
$C7A    $1FC2   JP       $FC2            ; Jump to FC2
$C7C    $4B40   SNE      VB, #40         ; Skip if VB != 64
$C7E    $989E   UNKNOWN  $989E           ; Unknown 9xxx instruction
$C80    $7633   ADD      V6, #33         ; Add 51 to V6
$C82    $F532   UNKNOWN  F532            ; Unknown Fxxx instruction
$C84    $FE4C   UNKNOWN  FE4C            ; Unknown Fxxx instruction
$C86    $5E43   UNKNOWN  $5E43           ; Unknown 5xxx instruction
$C88    $EEE4   UNKNOWN  $EEE4           ; Unknown Exxx instruction
$C8A    $270D   CALL     $70D            ; Call subroutine at 70D
$C8C    $13C1   JP       $3C1            ; Jump to 3C1
$C8E    $1FFB   JP       $FFB            ; Jump to FFB
$C90    $9958   UNKNOWN  $9958           ; Unknown 9xxx instruction
$C92    $F7FC   UNKNOWN  F7FC            ; Unknown Fxxx instruction
$C94    $795D   ADD      V9, #5D         ; Add 93 to V9
$C96    $62CB   LD       V2, #CB         ; Load 203 into V2
$C98    $A70C   LD       I, $70C         ; Load 70C into I
$C9A    $2801   CALL     $801            ; Call subroutine at 801
$C9C    $CBD6   RND      VB, #D6         ; VB = random & D6
$C9E    $8926   SHR      V9              ; V9 >>= 1, VF = LSB
$CA0    $387A   SE       V8, #7A         ; Skip if V8 == 122
$CA2    $A0E4   LD       I, $0E4         ; Load 0E4 into I
$CA4    $BEFD   JP       V0, $EFD        ; Jump to V0 + EFD
$CA6    $24A9   CALL     $4A9            ; Call subroutine at 4A9
$CA8    $87E1   OR       V7, VE          ; V7 |= VE
$CAA    $98CC   UNKNOWN  $98CC           ; Unknown 9xxx instruction
$CAC    $529A   UNKNOWN  $529A           ; Unknown 5xxx instruction
$CAE    $3ADF   SE       VA, #DF         ; Skip if VA == 223
$CB0    $E95F   UNKNOWN  $E95F           ; Unknown Exxx instruction
$CB2    $0529   SYS      $529            ; System call to 529
$CB4    $CE3F   RND      VE, #3F         ; VE = random & 3F
$CB6    $58CA   UNKNOWN  $58CA           ; Unknown 5xxx instruction
$CB8    $0C1B   SYS      $C1B            ; System call to C1B
$CBA    $4D36   SNE      VD, #36         ; Skip if VD != 54
$CBC    $5695   UNKNOWN  $5695           ; Unknown 5xxx instruction
$CBE    $9CFE   UNKNOWN  $9CFE           ; Unknown 9xxx instruction
$CC0    $D5CC   DRW      V5, VC, #C      ; Draw 12-byte sprite at V5, VC
$CC2    $DA7D   DRW      VA, V7, #D      ; Draw 13-byte sprite at VA, V7
$CC4    $3D56   SE       VD, #56         ; Skip if VD == 86
$CC6    $EE5A   UNKNOWN  $EE5A           ; Unknown Exxx instruction
$CC8    $0420   SYS      $420            ; System call to 420
$CCA    $B1FE   JP       V0, $1FE        ; Jump to V0 + 1FE
$CCC    $8A86   SHR      VA              ; VA >>= 1, VF = LSB
$CCE    $EA67   UNKNOWN  $EA67           ; Unknown Exxx instruction
$CD0    $DAC1   DRW      VA, VC, #1      ; Draw 1-byte sprite at VA, VC
$CD2    $2698   CALL     $698            ; Call subroutine at 698
$CD4    $A58D   LD       I, $58D         ; Load 58D into I
$CD6    $E560   UNKNOWN  $E560           ; Unknown Exxx instruction
$CD8    $B726   JP       V0, $726        ; Jump to V0 + 726
$CDA    $0C04   SYS      $C04            ; System call to C04
$CDC    $3E31   SE       VE, #31         ; Skip if VE == 49
$CDE    $38EC   SE       V8, #EC         ; Skip if V8 == 236
$CE0    $964C   UNKNOWN  $964C           ; Unknown 9xxx instruction
$CE2    $B1FA   JP       V0, $1FA        ; Jump to V0 + 1FA
$CE4    $37A4   SE       V7, #A4         ; Skip if V7 == 164
$CE6    $9D05   UNKNOWN  $9D05           ; Unknown 9xxx instruction
$CE8    $07D7   SYS      $7D7            ; System call to 7D7
$CEA    $E632   UNKNOWN  $E632           ; Unknown Exxx instruction
$CEC    $98E6   UNKNOWN  $98E6           ; Unknown 9xxx instruction
$CEE    $394F   SE       V9, #4F         ; Skip if V9 == 79
$CF0    $6FAC   LD       VF, #AC         ; Load 172 into VF
$CF2    $C989   RND      V9, #89         ; V9 = random & 89
$CF4    $46AC   SNE      V6, #AC         ; Skip if V6 != 172
$CF6    $3285   SE       V2, #85         ; Skip if V2 == 133
$CF8    $ABB4   LD       I, $BB4         ; Load BB4 into I
$CFA    $9537   UNKNOWN  $9537           ; Unknown 9xxx instruction
$CFC    $E97B   UNKNOWN  $E97B           ; Unknown Exxx instruction
$CFE    $49A5   SNE      V9, #A5         ; Skip if V9 != 165
$D00    $7D47   ADD      VD, #47         ; Add 71 to VD
$D02    $78D3   ADD      V8, #D3         ; Add 211 to V8
$D04    $8163   XOR      V1, V6          ; V1 ^= V6
$D06    $42F1   SNE      V2, #F1         ; Skip if V2 != 241
$D08    $BC81   JP       V0, $C81        ; Jump to V0 + C81
$D0A    $2D56   CALL     $D56            ; Call subroutine at D56
$D0C    $9D2E   UNKNOWN  $9D2E           ; Unknown 9xxx instruction
$D0E    $B635   JP       V0, $635        ; Jump to V0 + 635
$D10    $0DF1   SYS      $DF1            ; System call to DF1
$D12    $9F90   SNE      VF, V9          ; Skip if VF != V9
$D14    $CA87   RND      VA, #87         ; VA = random & 87
$D16    $93C9   UNKNOWN  $93C9           ; Unknown 9xxx instruction
$D18    $4F0E   SNE      VF, #0E         ; Skip if VF != 14
$D1A    $2F80   CALL     $F80            ; Call subroutine at F80
$D1C    $B312   JP       V0, $312        ; Jump to V0 + 312
$D1E    $8CFE   SHL      VC              ; VC <<= 1, VF = MSB
$D20    $3E6F   SE       VE, #6F         ; Skip if VE == 111
$D22    $8DDB   UNKNOWN  8DDB            ; Unknown 8xxx instruction
$D24    $2C3E   CALL     $C3E            ; Call subroutine at C3E
$D26    $5263   UNKNOWN  $5263           ; Unknown 5xxx instruction
$D28    $3DBD   SE       VD, #BD         ; Skip if VD == 189
$D2A    $D582   DRW      V5, V8, #2      ; Draw 2-byte sprite at V5, V8
$D2C    $A5DB   LD       I, $5DB         ; Load 5DB into I
$D2E    $1C13   JP       $C13            ; Jump to C13
$D30    $81F3   XOR      V1, VF          ; V1 ^= VF
$D32    $A720   LD       I, $720         ; Load 720 into I
$D34    $E09D   UNKNOWN  $E09D           ; Unknown Exxx instruction
$D36    $1FBD   JP       $FBD            ; Jump to FBD
$D38    $72CA   ADD      V2, #CA         ; Add 202 to V2
$D3A    $1BDC   JP       $BDC            ; Jump to BDC
$D3C    $18B2   JP       $8B2            ; Jump to 8B2
$D3E    $E66C   UNKNOWN  $E66C           ; Unknown Exxx instruction
$D40    $8B5C   UNKNOWN  8B5C            ; Unknown 8xxx instruction
$D42    $9D79   UNKNOWN  $9D79           ; Unknown 9xxx instruction
$D44    $A326   LD       I, $326         ; Load 326 into I
$D46    $EAFC   UNKNOWN  $EAFC           ; Unknown Exxx instruction
$D48    $AD93   LD       I, $D93         ; Load D93 into I
$D4A    $B56A   JP       V0, $56A        ; Jump to V0 + 56A
$D4C    $F191   UNKNOWN  F191            ; Unknown Fxxx instruction
$D4E    $26A4   CALL     $6A4            ; Call subroutine at 6A4
$D50    $C6D4   RND      V6, #D4         ; V6 = random & D4
$D52    $45CE   SNE      V5, #CE         ; Skip if V5 != 206
$D54    $EFBB   UNKNOWN  $EFBB           ; Unknown Exxx instruction
$D56    $E1DC   UNKNOWN  $E1DC           ; Unknown Exxx instruction
$D58    $CD82   RND      VD, #82         ; VD = random & 82
$D5A    $C8E9   RND      V8, #E9         ; V8 = random & E9
$D5C    $DAA0   DRW      VA, VA, #0      ; Draw 0-byte sprite at VA, VA
$D5E    $E146   UNKNOWN  $E146           ; Unknown Exxx instruction
$D60    $1B7E   JP       $B7E            ; Jump to B7E
$D62    $9E1F   UNKNOWN  $9E1F           ; Unknown 9xxx instruction
$D64    $D265   DRW      V2, V6, #5      ; Draw 5-byte sprite at V2, V6
$D66    $0195   SYS      $195            ; System call to 195
$D68    $A522   LD       I, $522         ; Load 522 into I
$D6A    $C243   RND      V2, #43         ; V2 = random & 43
$D6C    $DDCF   DRW      VD, VC, #F      ; Draw 15-byte sprite at VD, VC
$D6E    $D9AF   DRW      V9, VA, #F      ; Draw 15-byte sprite at V9, VA
$D70    $1F77   JP       $F77            ; Jump to F77
$D72    $342D   SE       V4, #2D         ; Skip if V4 == 45
$D74    $B61F   JP       V0, $61F        ; Jump to V0 + 61F
$D76    $0E93   SYS      $E93            ; System call to E93
$D78    $6C4B   LD       VC, #4B         ; Load 75 into VC
$D7A    $3ADF   SE       VA, #DF         ; Skip if VA == 223
$D7C    $C039   RND      V0, #39         ; V0 = random & 39
$D7E    $DD9D   DRW      VD, V9, #D      ; Draw 13-byte sprite at VD, V9
$D80    $7E3F   ADD      VE, #3F         ; Add 63 to VE
$D82    $289A   CALL     $89A            ; Call subroutine at 89A
$D84    $9E83   UNKNOWN  $9E83           ; Unknown 9xxx instruction
$D86    $FFAC   UNKNOWN  FFAC            ; Unknown Fxxx instruction
$D88    $5661   UNKNOWN  $5661           ; Unknown 5xxx instruction
$D8A    $8182   AND      V1, V8          ; V1 &= V8
$D8C    $FAD0   UNKNOWN  FAD0            ; Unknown Fxxx instruction
$D8E    $DA56   DRW      VA, V5, #6      ; Draw 6-byte sprite at VA, V5
$D90    $9C4D   UNKNOWN  $9C4D           ; Unknown 9xxx instruction
$D92    $46A1   SNE      V6, #A1         ; Skip if V6 != 161
$D94    $49AB   SNE      V9, #AB         ; Skip if V9 != 171
$D96    $5497   UNKNOWN  $5497           ; Unknown 5xxx instruction
$D98    $B065   JP       V0, $065        ; Jump to V0 + 065
$D9A    $180B   JP       $80B            ; Jump to 80B
$D9C    $CB0A   RND      VB, #0A         ; VB = random & 0A
$D9E    $03D8   SYS      $3D8            ; System call to 3D8
$DA0    $80E7   SUBN     V0, VE          ; V0 = VE - V0, VF = !borrow
$DA2    $2D86   CALL     $D86            ; Call subroutine at D86
$DA4    $D935   DRW      V9, V3, #5      ; Draw 5-byte sprite at V9, V3
$DA6    $C2AB   RND      V2, #AB         ; V2 = random & AB
$DA8    $36F1   SE       V6, #F1         ; Skip if V6 == 241
$DAA    $D16A   DRW      V1, V6, #A      ; Draw 10-byte sprite at V1, V6
$DAC    $5829   UNKNOWN  $5829           ; Unknown 5xxx instruction
$DAE    $9D28   UNKNOWN  $9D28           ; Unknown 9xxx instruction
$DB0    $4932   SNE      V9, #32         ; Skip if V9 != 50
$DB2    $67BF   LD       V7, #BF         ; Load 191 into V7
$DB4    $7E23   ADD      VE, #23         ; Add 35 to VE
$DB6    $B6EB   JP       V0, $6EB        ; Jump to V0 + 6EB
$DB8    $3BF5   SE       VB, #F5         ; Skip if VB == 245
$DBA    $46E1   SNE      V6, #E1         ; Skip if V6 != 225
$DBC    $DA8C   DRW      VA, V8, #C      ; Draw 12-byte sprite at VA, V8
$DBE    $08CD   SYS      $8CD            ; System call to 8CD
$DC0    $CE06   RND      VE, #06         ; VE = random & 06
$DC2    $7F79   ADD      VF, #79         ; Add 121 to VF
$DC4    $959F   UNKNOWN  $959F           ; Unknown 9xxx instruction
$DC6    $FE85   UNKNOWN  FE85            ; Unknown Fxxx instruction
$DC8    $CDFC   RND      VD, #FC         ; VD = random & FC
$DCA    $79D5   ADD      V9, #D5         ; Add 213 to V9
$DCC    $803D   UNKNOWN  803D            ; Unknown 8xxx instruction
$DCE    $586A   UNKNOWN  $586A           ; Unknown 5xxx instruction
$DD0    $F17F   UNKNOWN  F17F            ; Unknown Fxxx instruction
$DD2    $7A3A   ADD      VA, #3A         ; Add 58 to VA
$DD4    $F85E   UNKNOWN  F85E            ; Unknown Fxxx instruction
$DD6    $F5D9   UNKNOWN  F5D9            ; Unknown Fxxx instruction
$DD8    $8B85   SUB      VB, V8          ; VB -= V8, VF = !borrow
$DDA    $4007   SNE      V0, #07         ; Skip if V0 != 7
$DDC    $77D1   ADD      V7, #D1         ; Add 209 to V7
$DDE    $54E5   UNKNOWN  $54E5           ; Unknown 5xxx instruction
$DE0    $7F5F   ADD      VF, #5F         ; Add 95 to VF
$DE2    $3081   SE       V0, #81         ; Skip if V0 == 129
$DE4    $8399   UNKNOWN  8399            ; Unknown 8xxx instruction
$DE6    $E554   UNKNOWN  $E554           ; Unknown Exxx instruction
$DE8    $0729   SYS      $729            ; System call to 729
$DEA    $FA20   UNKNOWN  FA20            ; Unknown Fxxx instruction
$DEC    $0D60   SYS      $D60            ; System call to D60
$DEE    $0F6C   SYS      $F6C            ; System call to F6C
$DF0    $AF21   LD       I, $F21         ; Load F21 into I
$DF2    $BBAB   JP       V0, $BAB        ; Jump to V0 + BAB
$DF4    $22AC   CALL     $2AC            ; Call subroutine at 2AC
$DF6    $7F59   ADD      VF, #59         ; Add 89 to VF
$DF8    $8A06   SHR      VA              ; VA >>= 1, VF = LSB
$DFA    $232B   CALL     $32B            ; Call subroutine at 32B
$DFC    $CB05   RND      VB, #05         ; VB = random & 05
$DFE    $EDFF   UNKNOWN  $EDFF           ; Unknown Exxx instruction
$E00    $772A   ADD      V7, #2A         ; Add 42 to V7
$E02    $6A95   LD       VA, #95         ; Load 149 into VA
$E04    $E5B1   UNKNOWN  $E5B1           ; Unknown Exxx instruction
$E06    $076C   SYS      $76C            ; System call to 76C
$E08    $C46A   RND      V4, #6A         ; V4 = random & 6A
$E0A    $0D12   SYS      $D12            ; System call to D12
$E0C    $F78E   UNKNOWN  F78E            ; Unknown Fxxx instruction
$E0E    $422A   SNE      V2, #2A         ; Skip if V2 != 42
$E10    $0795   SYS      $795            ; System call to 795
$E12    $672F   LD       V7, #2F         ; Load 47 into V7
$E14    $33CE   SE       V3, #CE         ; Skip if V3 == 206
$E16    $3E96   SE       VE, #96         ; Skip if VE == 150
$E18    $AC9C   LD       I, $C9C         ; Load C9C into I
$E1A    $2530   CALL     $530            ; Call subroutine at 530
$E1C    $6E68   LD       VE, #68         ; Load 104 into VE
$E1E    $BE51   JP       V0, $E51        ; Jump to V0 + E51
$E20    $6848   LD       V8, #48         ; Load 72 into V8
$E22    $5984   UNKNOWN  $5984           ; Unknown 5xxx instruction
$E24    $850A   UNKNOWN  850A            ; Unknown 8xxx instruction
$E26    $0F66   SYS      $F66            ; System call to F66
$E28    $1E2D   JP       $E2D            ; Jump to E2D
$E2A    $AC3F   LD       I, $C3F         ; Load C3F into I
$E2C    $E587   UNKNOWN  $E587           ; Unknown Exxx instruction
$E2E    $ECC4   UNKNOWN  $ECC4           ; Unknown Exxx instruction
$E30    $48DE   SNE      V8, #DE         ; Skip if V8 != 222
$E32    $6E49   LD       VE, #49         ; Load 73 into VE
$E34    $6E5F   LD       VE, #5F         ; Load 95 into VE
$E36    $F6C7   UNKNOWN  F6C7            ; Unknown Fxxx instruction
$E38    $1F67   JP       $F67            ; Jump to F67
$E3A    $4EF4   SNE      VE, #F4         ; Skip if VE != 244
$E3C    $409B   SNE      V0, #9B         ; Skip if V0 != 155
$E3E    $5F65   UNKNOWN  $5F65           ; Unknown 5xxx instruction
$E40    $0600   SYS      $600            ; System call to 600
$E42    $A618   LD       I, $618         ; Load 618 into I
$E44    $9700   SNE      V7, V0          ; Skip if V7 != V0
$E46    $7C34   ADD      VC, #34         ; Add 52 to VC
$E48    $D8FE   DRW      V8, VF, #E      ; Draw 14-byte sprite at V8, VF
$E4A    $DA00   DRW      VA, V0, #0      ; Draw 0-byte sprite at VA, V0
$E4C    $7C45   ADD      VC, #45         ; Add 69 to VC
$E4E    $EB82   UNKNOWN  $EB82           ; Unknown Exxx instruction
$E50    $1624   JP       $624            ; Jump to 624
$E52    $039D   SYS      $39D            ; System call to 39D
$E54    $C783   RND      V7, #83         ; V7 = random & 83
$E56    $79B5   ADD      V9, #B5         ; Add 181 to V9
$E58    $BC31   JP       V0, $C31        ; Jump to V0 + C31
$E5A    $E95B   UNKNOWN  $E95B           ; Unknown Exxx instruction
$E5C    $98FA   UNKNOWN  $98FA           ; Unknown 9xxx instruction
$E5E    $B3F6   JP       V0, $3F6        ; Jump to V0 + 3F6
$E60    $EB17   UNKNOWN  $EB17           ; Unknown Exxx instruction
$E62    $BBE2   JP       V0, $BE2        ; Jump to V0 + BE2
$E64    $937C   UNKNOWN  $937C           ; Unknown 9xxx instruction
$E66    $470C   SNE      V7, #0C         ; Skip if V7 != 12
$E68    $5693   UNKNOWN  $5693           ; Unknown 5xxx instruction
$E6A    $91C0   SNE      V1, VC          ; Skip if V1 != VC
$E6C    $0CF4   SYS      $CF4            ; System call to CF4
$E6E    $943F   UNKNOWN  $943F           ; Unknown 9xxx instruction
$E70    $93F7   UNKNOWN  $93F7           ; Unknown 9xxx instruction
$E72    $B5D2   JP       V0, $5D2        ; Jump to V0 + 5D2
$E74    $A9A4   LD       I, $9A4         ; Load 9A4 into I
$E76    $F367   UNKNOWN  F367            ; Unknown Fxxx instruction
$E78    $B294   JP       V0, $294        ; Jump to V0 + 294
$E7A    $E2A6   UNKNOWN  $E2A6           ; Unknown Exxx instruction
$E7C    $3107   SE       V1, #07         ; Skip if V1 == 7
$E7E    $B16A   JP       V0, $16A        ; Jump to V0 + 16A
$E80    $1A27   JP       $A27            ; Jump to A27
$E82    $EDBC   UNKNOWN  $EDBC           ; Unknown Exxx instruction
$E84    $3386   SE       V3, #86         ; Skip if V3 == 134
$E86    $1588   JP       $588            ; Jump to 588
$E88    $0EA0   SYS      $EA0            ; System call to EA0
$E8A    $AE7A   LD       I, $E7A         ; Load E7A into I
$E8C    $2594   CALL     $594            ; Call subroutine at 594
$E8E    $FF78   UNKNOWN  FF78            ; Unknown Fxxx instruction
$E90    $6FD3   LD       VF, #D3         ; Load 211 into VF
$E92    $77FF   ADD      V7, #FF         ; Add 255 to V7
$E94    $71DA   ADD      V1, #DA         ; Add 218 to V1
$E96    $40A2   SNE      V0, #A2         ; Skip if V0 != 162
$E98    $8B93   XOR      VB, V9          ; VB ^= V9
$E9A    $01F3   SYS      $1F3            ; System call to 1F3
$E9C    $F0CE   UNKNOWN  F0CE            ; Unknown Fxxx instruction
$E9E    $B1B6   JP       V0, $1B6        ; Jump to V0 + 1B6
$EA0    $4380   SNE      V3, #80         ; Skip if V3 != 128
$EA2    $39EC   SE       V9, #EC         ; Skip if V9 == 236
$EA4    $3FC0   SE       VF, #C0         ; Skip if VF == 192
$EA6    $C91C   RND      V9, #1C         ; V9 = random & 1C
$EA8    $763F   ADD      V6, #3F         ; Add 63 to V6
$EAA    $3364   SE       V3, #64         ; Skip if V3 == 100
$EAC    $DDCB   DRW      VD, VC, #B      ; Draw 11-byte sprite at VD, VC
$EAE    $8114   ADD      V1, V1          ; V1 += V1, VF = carry
$EB0    $6507   LD       V5, #07         ; Load 7 into V5
$EB2    $3631   SE       V6, #31         ; Skip if V6 == 49
$EB4    $4A3B   SNE      VA, #3B         ; Skip if VA != 59
$EB6    $5016   UNKNOWN  $5016           ; Unknown 5xxx instruction
$EB8    $E161   UNKNOWN  $E161           ; Unknown Exxx instruction
$EBA    $7DE5   ADD      VD, #E5         ; Add 229 to VD
$EBC    $B111   JP       V0, $111        ; Jump to V0 + 111
$EBE    $BC0E   JP       V0, $C0E        ; Jump to V0 + C0E
$EC0    $6C8E   LD       VC, #8E         ; Load 142 into VC
$EC2    $5B5D   UNKNOWN  $5B5D           ; Unknown 5xxx instruction
$EC4    $55D7   UNKNOWN  $55D7           ; Unknown 5xxx instruction
$EC6    $DC89   DRW      VC, V8, #9      ; Draw 9-byte sprite at VC, V8
$EC8    $3745   SE       V7, #45         ; Skip if V7 == 69
$ECA    $86F0   LD       V6, VF          ; V6 = VF
$ECC    $991B   UNKNOWN  $991B           ; Unknown 9xxx instruction
$ECE    $EEB0   UNKNOWN  $EEB0           ; Unknown Exxx instruction
$ED0    $EE49   UNKNOWN  $EE49           ; Unknown Exxx instruction
$ED2    $E152   UNKNOWN  $E152           ; Unknown Exxx instruction
$ED4    $FF3C   UNKNOWN  FF3C            ; Unknown Fxxx instruction
$ED6    $C310   RND      V3, #10         ; V3 = random & 10
$ED8    $0497   SYS      $497            ; System call to 497
$EDA    $15CB   JP       $5CB            ; Jump to 5CB
$EDC    $348F   SE       V4, #8F         ; Skip if V4 == 143
$EDE    $CC1D   RND      VC, #1D         ; VC = random & 1D
$EE0    $BA55   JP       V0, $A55        ; Jump to V0 + A55
$EE2    $19A9   JP       $9A9            ; Jump to 9A9
$EE4    $2C23   CALL     $C23            ; Call subroutine at C23
$EE6    $9859   UNKNOWN  $9859           ; Unknown 9xxx instruction
$EE8    $6AA2   LD       VA, #A2         ; Load 162 into VA
$EEA    $A278   LD       I, $278         ; Load 278 into I
$EEC    $46BD   SNE      V6, #BD         ; Skip if V6 != 189
$EEE    $75E7   ADD      V5, #E7         ; Add 231 to V5
$EF0    $BB33   JP       V0, $B33        ; Jump to V0 + B33
$EF2    $2E76   CALL     $E76            ; Call subroutine at E76
$EF4    $7B81   ADD      VB, #81         ; Add 129 to VB
$EF6    $9C12   UNKNOWN  $9C12           ; Unknown 9xxx instruction
$EF8    $919C   UNKNOWN  $919C           ; Unknown 9xxx instruction
$EFA    $FCEC   UNKNOWN  FCEC            ; Unknown Fxxx instruction
$EFC    $9512   UNKNOWN  $9512           ; Unknown 9xxx instruction
$EFE    $3B68   SE       VB, #68         ; Skip if VB == 104
$F00    $11B0   JP       $1B0            ; Jump to 1B0
$F02    $AAA8   LD       I, $AA8         ; Load AA8 into I
$F04    $A3C6   LD       I, $3C6         ; Load 3C6 into I
$F06    $B9FC   JP       V0, $9FC        ; Jump to V0 + 9FC
$F08    $CC3C   RND      VC, #3C         ; VC = random & 3C
$F0A    $0C9B   SYS      $C9B            ; System call to C9B
$F0C    $8B53   XOR      VB, V5          ; VB ^= V5
$F0E    $4CA1   SNE      VC, #A1         ; Skip if VC != 161
$F10    $1B79   JP       $B79            ; Jump to B79
$F12    $7518   ADD      V5, #18         ; Add 24 to V5
$F14    $6529   LD       V5, #29         ; Load 41 into V5
$F16    $F116   UNKNOWN  F116            ; Unknown Fxxx instruction
$F18    $7898   ADD      V8, #98         ; Add 152 to V8
$F1A    $E7B1   UNKNOWN  $E7B1           ; Unknown Exxx instruction
$F1C    $E6EA   UNKNOWN  $E6EA           ; Unknown Exxx instruction
$F1E    $01E7   SYS      $1E7            ; System call to 1E7
$F20    $7C58   ADD      VC, #58         ; Add 88 to VC
$F22    $B53C   JP       V0, $53C        ; Jump to V0 + 53C
$F24    $ED05   UNKNOWN  $ED05           ; Unknown Exxx instruction
$F26    $3E92   SE       VE, #92         ; Skip if VE == 146
$F28    $3BD0   SE       VB, #D0         ; Skip if VB == 208
$F2A    $94DA   UNKNOWN  $94DA           ; Unknown 9xxx instruction
$F2C    $DDF8   DRW      VD, VF, #8      ; Draw 8-byte sprite at VD, VF
$F2E    $2C77   CALL     $C77            ; Call subroutine at C77
$F30    $CFD9   RND      VF, #D9         ; VF = random & D9
$F32    $917C   UNKNOWN  $917C           ; Unknown 9xxx instruction
$F34    $A1E8   LD       I, $1E8         ; Load 1E8 into I
$F36    $B2C7   JP       V0, $2C7        ; Jump to V0 + 2C7
$F38    $4FF9   SNE      VF, #F9         ; Skip if VF != 249
$F3A    $1195   JP       $195            ; Jump to 195
$F3C    $6A48   LD       VA, #48         ; Load 72 into VA
$F3E    $C4A0   RND      V4, #A0         ; V4 = random & A0
$F40    $3F06   SE       VF, #06         ; Skip if VF == 6
$F42    $44BE   SNE      V4, #BE         ; Skip if V4 != 190
$F44    $779A   ADD      V7, #9A         ; Add 154 to V7
$F46    $0C83   SYS      $C83            ; System call to C83
$F48    $E281   UNKNOWN  $E281           ; Unknown Exxx instruction
$F4A    $D934   DRW      V9, V3, #4      ; Draw 4-byte sprite at V9, V3
$F4C    $769A   ADD      V6, #9A         ; Add 154 to V6
$F4E    $8C65   SUB      VC, V6          ; VC -= V6, VF = !borrow
$F50    $C29E   RND      V2, #9E         ; V2 = random & 9E
$F52    $BDF9   JP       V0, $DF9        ; Jump to V0 + DF9
$F54    $6175   LD       V1, #75         ; Load 117 into V1
$F56    $FEF8   UNKNOWN  FEF8            ; Unknown Fxxx instruction
$F58    $17A0   JP       $7A0            ; Jump to 7A0
$F5A    $4294   SNE      V2, #94         ; Skip if V2 != 148
$F5C    $50FD   UNKNOWN  $50FD           ; Unknown 5xxx instruction
$F5E    $8B67   SUBN     VB, V6          ; VB = V6 - VB, VF = !borrow
$F60    $A371   LD       I, $371         ; Load 371 into I
$F62    $059E   SYS      $59E            ; System call to 59E
$F64    $36F8   SE       V6, #F8         ; Skip if V6 == 248
$F66    $0582   SYS      $582            ; System call to 582
$F68    $E89C   UNKNOWN  $E89C           ; Unknown Exxx instruction
$F6A    $ED61   UNKNOWN  $ED61           ; Unknown Exxx instruction
$F6C    $3FA4   SE       VF, #A4         ; Skip if VF == 164
$F6E    $1069   JP       $069            ; Jump to 069
$F70    $829C   UNKNOWN  829C            ; Unknown 8xxx instruction
$F72    $2EFF   CALL     $EFF            ; Call subroutine at EFF
$F74    $6EBD   LD       VE, #BD         ; Load 189 into VE
$F76    $2474   CALL     $474            ; Call subroutine at 474
$F78    $EE9F   UNKNOWN  $EE9F           ; Unknown Exxx instruction
$F7A    $EE8A   UNKNOWN  $EE8A           ; Unknown Exxx instruction
$F7C    $FCF1   UNKNOWN  FCF1            ; Unknown Fxxx instruction
$F7E    $07A1   SYS      $7A1            ; System call to 7A1
$F80    $5443   UNKNOWN  $5443           ; Unknown 5xxx instruction
$F82    $48B0   SNE      V8, #B0         ; Skip if V8 != 176
$F84    $E142   UNKNOWN  $E142           ; Unknown Exxx instruction
$F86    $7871   ADD      V8, #71         ; Add 113 to V8
$F88    $246F   CALL     $46F            ; Call subroutine at 46F
$F8A    $38A0   SE       V8, #A0         ; Skip if V8 == 160
$F8C    $38FA   SE       V8, #FA         ; Skip if V8 == 250
$F8E    $34D2   SE       V4, #D2         ; Skip if V4 == 210
$F90    $23A5   CALL     $3A5            ; Call subroutine at 3A5
$F92    $9624   UNKNOWN  $9624           ; Unknown 9xxx instruction
$F94    $6C84   LD       VC, #84         ; Load 132 into VC
$F96    $7DCA   ADD      VD, #CA         ; Add 202 to VD
$F98    $CB1E   RND      VB, #1E         ; VB = random & 1E
$F9A    $33F7   SE       V3, #F7         ; Skip if V3 == 247
$F9C    $B3C4   JP       V0, $3C4        ; Jump to V0 + 3C4
$F9E    $E70A   UNKNOWN  $E70A           ; Unknown Exxx instruction
$FA0    $0B93   SYS      $B93            ; System call to B93
$FA2    $E5A4   UNKNOWN  $E5A4           ; Unknown Exxx instruction
$FA4    $3D12   SE       VD, #12         ; Skip if VD == 18
$FA6    $809F   UNKNOWN  809F            ; Unknown 8xxx instruction
$FA8    $1290   JP       $290            ; Jump to 290
$FAA    $95EC   UNKNOWN  $95EC           ; Unknown 9xxx instruction
$FAC    $4849   SNE      V8, #49         ; Skip if V8 != 73
$FAE    $8645   SUB      V6, V4          ; V6 -= V4, VF = !borrow
$FB0    $812B   UNKNOWN  812B            ; Unknown 8xxx instruction
$FB2    $8E62   AND      VE, V6          ; VE &= V6
$FB4    $5C9C   UNKNOWN  $5C9C           ; Unknown 5xxx instruction
$FB6    $1157   JP       $157            ; Jump to 157
$FB8    $3845   SE       V8, #45         ; Skip if V8 == 69
$FBA    $C0D7   RND      V0, #D7         ; V0 = random & D7
$FBC    $3C29   SE       VC, #29         ; Skip if VC == 41
$FBE    $247F   CALL     $47F            ; Call subroutine at 47F
$FC0    $1F95   JP       $F95            ; Jump to F95
$FC2    $E248   UNKNOWN  $E248           ; Unknown Exxx instruction
$FC4    $B644   JP       V0, $644        ; Jump to V0 + 644
$FC6    $1E94   JP       $E94            ; Jump to E94
$FC8    $6E84   LD       VE, #84         ; Load 132 into VE
$FCA    $882E   SHL      V8              ; V8 <<= 1, VF = MSB
$FCC    $635E   LD       V3, #5E         ; Load 94 into V3
$FCE    $D217   DRW      V2, V1, #7      ; Draw 7-byte sprite at V2, V1
$FD0    $73DA   ADD      V3, #DA         ; Add 218 to V3
$FD2    $63FD   LD       V3, #FD         ; Load 253 into V3
$FD4    $660C   LD       V6, #0C         ; Load 12 into V6
$FD6    $2A11   CALL     $A11            ; Call subroutine at A11
$FD8    $33BD   SE       V3, #BD         ; Skip if V3 == 189
$FDA    $E43E   UNKNOWN  $E43E           ; Unknown Exxx instruction
$FDC    $3297   SE       V2, #97         ; Skip if V2 == 151
$FDE    $BA27   JP       V0, $A27        ; Jump to V0 + A27
$FE0    $A35F   LD       I, $35F         ; Load 35F into I
$FE2    $70E7   ADD      V0, #E7         ; Add 231 to V0
$FE4    $57F5   UNKNOWN  $57F5           ; Unknown 5xxx instruction
$FE6    $0233   SYS      $233            ; System call to 233
$FE8    $7900   ADD      V9, #00         ; Add 0 to V9
$FEA    $276D   CALL     $76D            ; Call subroutine at 76D
$FEC    $48A4   SNE      V8, #A4         ; Skip if V8 != 164
$FEE    $F81E   ADD      I, V8           ; I += V8
$FF0    $F551   UNKNOWN  F551            ; Unknown Fxxx instruction
$FF2    $7E74   ADD      VE, #74         ; Add 116 to VE
$FF4    $99D9   UNKNOWN  $99D9           ; Unknown 9xxx instruction
$FF6    $A674   LD       I, $674         ; Load 674 into I
$FF8    $E810   UNKNOWN  $E810           ; Unknown Exxx instruction
$FFA    $7A5E   ADD      VA, #5E         ; Add 94 to VA
$FFC    $F105   UNKNOWN  F105            ; Unknown Fxxx instruction
$FFE    $DEE4   DRW      VE, VE, #4      ; Draw 4-byte sprite at VE, VE

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 478 (26.7%)
  LD      : 220 (12.3%)
  JP      : 219 (12.2%)
  SE      : 148 ( 8.3%)
  ADD     : 123 ( 6.9%)
  SYS     : 116 ( 6.5%)
  SNE     : 113 ( 6.3%)
  RND     : 109 ( 6.1%)
  CALL    : 108 ( 6.0%)
  DRW     : 103 ( 5.7%)
  SUB     :  11 ( 0.6%)
  OR      :   9 ( 0.5%)
  SHL     :   8 ( 0.4%)
  SHR     :   7 ( 0.4%)
  SUBN    :   6 ( 0.3%)
  AND     :   5 ( 0.3%)
  XOR     :   5 ( 0.3%)
  SKNP    :   2 ( 0.1%)
  CLS     :   1 ( 0.1%)
  SKP     :   1 ( 0.1%)

Memory Operations: 343 (19.1%)
Arithmetic Operations: 159 (8.9%)
