
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B1587D01_I36716_C1001_11d16982238b.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 1587
Instance: 36716
Direction: ascending
Final Array: [0, 5, 9, 24, 93, 105, 172, 187]
Operations: R:0 W:2 C:35 S:12

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 118
Sort Array References:
  $20C: LD I, $833 ; Load 833 into I
  $230: LD I, $12E ; Load 12E into I
  $25A: LD I, $89E ; Load 89E into I
  $25C: LD I, $F10 ; Load F10 into I
  $26E: LD I, $64D ; Load 64D into I
  $2A8: LD I, $6BF ; Load 6BF into I
  $2D4: LD I, $0B6 ; Load 0B6 into I
  $2E6: LD I, $BCD ; Load BCD into I
  $2F0: LD I, $C49 ; Load C49 into I
  $306: LD I, $CBB ; Load CBB into I
  $32A: LD I, $D32 ; Load D32 into I
  $352: LD I, $F8C ; Load F8C into I
  $390: LD I, $3FD ; Load 3FD into I
  $3B4: LD I, $8AA ; Load 8AA into I
  $3C6: LD I, $427 ; Load 427 into I
  $408: LD I, $F67 ; Load F67 into I
  $442: LD I, $5B0 ; Load 5B0 into I
  $4B0: LD I, $44B ; Load 44B into I
  $4BA: LD I, $893 ; Load 893 into I
  $4EE: LD I, $C21 ; Load C21 into I
  $512: LD I, $C67 ; Load C67 into I
  $528: LD I, $57D ; Load 57D into I
  $52E: LD I, $95F ; Load 95F into I
  $538: LD I, $68E ; Load 68E into I
  $53A: LD I, $D26 ; Load D26 into I
  $566: LD I, $3D4 ; Load 3D4 into I
  $574: LD I, $E1C ; Load E1C into I
  $578: LD I, $978 ; Load 978 into I
  $584: LD I, $8FD ; Load 8FD into I
  $586: LD I, $FB6 ; Load FB6 into I
  $598: LD I, $061 ; Load 061 into I
  $5C0: LD I, $404 ; Load 404 into I
  $5CA: LD I, $C41 ; Load C41 into I
  $60C: LD I, $40E ; Load 40E into I
  $616: LD I, $153 ; Load 153 into I
  $62C: LD I, $0DE ; Load 0DE into I
  $664: LD I, $04A ; Load 04A into I
  $68C: LD I, $7B1 ; Load 7B1 into I
  $6A0: LD I, $872 ; Load 872 into I
  $6DC: LD I, $6B9 ; Load 6B9 into I
  $6DE: LD I, $362 ; Load 362 into I
  $6E2: LD I, $35C ; Load 35C into I
  $6F6: LD I, $7BD ; Load 7BD into I
  $6FA: LD I, $5BD ; Load 5BD into I
  $710: LD I, $BA0 ; Load BA0 into I
  $722: LD I, $7E4 ; Load 7E4 into I
  $756: LD I, $A4E ; Load A4E into I
  $75E: LD I, $91E ; Load 91E into I
  $768: LD I, $162 ; Load 162 into I
  $76A: LD I, $206 ; Load 206 into I
  $77A: LD I, $F37 ; Load F37 into I
  $78A: LD I, $B77 ; Load B77 into I
  $7D6: LD I, $364 ; Load 364 into I
  $81A: LD I, $274 ; Load 274 into I
  $856: LD I, $0BF ; Load 0BF into I
  $872: LD I, $E85 ; Load E85 into I
  $942: LD I, $969 ; Load 969 into I
  $95E: LD I, $616 ; Load 616 into I
  $962: LD I, $8CE ; Load 8CE into I
  $966: LD I, $676 ; Load 676 into I
  $970: LD I, $A5B ; Load A5B into I
  $9CA: LD I, $C15 ; Load C15 into I
  $9D0: LD I, $753 ; Load 753 into I
  $9DA: LD I, $B25 ; Load B25 into I
  $9E6: LD I, $CE9 ; Load CE9 into I
  $9F6: LD I, $678 ; Load 678 into I
  $A30: LD I, $12C ; Load 12C into I
  $A72: LD I, $91A ; Load 91A into I
  $ABE: LD I, $F25 ; Load F25 into I
  $ADC: LD I, $C8C ; Load C8C into I
  $AE0: LD I, $1CF ; Load 1CF into I
  $AE6: LD [I], V6 ; Store V0-V6 at I
  $B14: LD I, $ACD ; Load ACD into I
  $B16: LD I, $097 ; Load 097 into I
  $B50: LD I, $369 ; Load 369 into I
  $B5A: LD I, $4B0 ; Load 4B0 into I
  $B60: LD I, $AFA ; Load AFA into I
  $B8A: LD I, $9E2 ; Load 9E2 into I
  $BA4: LD I, $BA3 ; Load BA3 into I
  $BE4: LD I, $335 ; Load 335 into I
  $C12: LD I, $5D7 ; Load 5D7 into I
  $C34: LD I, $1AF ; Load 1AF into I
  $C40: LD I, $FF0 ; Load FF0 into I
  $C54: LD I, $AD1 ; Load AD1 into I
  $C60: LD I, $E60 ; Load E60 into I
  $C6E: ADD I, V8 ; I ADDRESS MANIPULATION
  $C98: LD I, $F87 ; Load F87 into I
  $CAC: LD I, $0E5 ; Load 0E5 into I
  $CC0: LD I, $4CB ; Load 4CB into I
  $CE0: LD I, $4BA ; Load 4BA into I
  $CEA: LD I, $139 ; Load 139 into I
  $CF0: LD I, $BB2 ; Load BB2 into I
  $D04: LD I, $B76 ; Load B76 into I
  $D8C: LD [I], VB ; Store V0-VB at I
  $D94: LD I, $DCB ; Load DCB into I
  $D9E: LD I, $91C ; Load 91C into I
  $DB2: LD I, $E5E ; Load E5E into I
  $DCA: LD I, $23A ; Load 23A into I
  $DFE: LD I, $729 ; Load 729 into I
  $E06: LD I, $0A3 ; Load 0A3 into I
  $E62: LD I, $0AE ; Load 0AE into I
  $E70: LD I, $01F ; Load 01F into I
  $E9E: LD I, $18D ; Load 18D into I
  $EA2: LD I, $65C ; Load 65C into I
  $ED6: LD I, $29A ; Load 29A into I
  $F16: LD I, $290 ; Load 290 into I
  $F1A: LD I, $CF1 ; Load CF1 into I
  $F2C: LD I, $BA2 ; Load BA2 into I
  $F2E: LD I, $4E7 ; Load 4E7 into I
  $F34: LD I, $C07 ; Load C07 into I
  $F74: LD I, $0BC ; Load 0BC into I
  $F78: LD I, $199 ; Load 199 into I
  $F8A: LD I, $AD6 ; Load AD6 into I
  $F92: LD I, $91A ; Load 91A into I
  $F96: LD I, $5BE ; Load 5BE into I
  $FBE: LD I, $65D ; Load 65D into I
  $FC2: LD I, $92A ; Load 92A into I
  $FF2: LD I, $280 ; Load 280 into I

CONTROL FLOW ANALYSIS:
Jumps: 199
Calls: 112
Branches: 238
Loops: 124
Loop Structures:
  $260 -> $148 (backward jump)
  $262 -> $1B7 (backward jump)
  $26A -> $20A (backward jump)
  $27C -> $137 (backward jump)
  $2B8 -> $16C (backward jump)
  $3C0 -> $0C5 (backward jump)
  $426 -> $165 (backward jump)
  $446 -> $124 (backward jump)
  $448 -> $3DB (backward jump)
  $450 -> $247 (backward jump)
  $480 -> $258 (backward jump)
  $486 -> $18F (backward jump)
  $48C -> $03E (backward jump)
  $4F0 -> $2A0 (backward jump)
  $54C -> $295 (backward jump)
  $5B2 -> $2DC (backward jump)
  $5B4 -> $565 (backward jump)
  $628 -> $5E0 (backward jump)
  $638 -> $39B (backward jump)
  $686 -> $4B1 (backward jump)
  $6BC -> $044 (backward jump)
  $6DA -> $372 (backward jump)
  $6EA -> $1FA (backward jump)
  $73E -> $2F1 (backward jump)
  $7AE -> $373 (backward jump)
  $7BE -> $619 (backward jump)
  $7CA -> $789 (backward jump)
  $7D8 -> $11F (backward jump)
  $814 -> $419 (backward jump)
  $81C -> $0FD (backward jump)
  $82C -> $349 (backward jump)
  $85A -> $824 (backward jump)
  $85C -> $71A (backward jump)
  $882 -> $86D (backward jump)
  $88C -> $088 (backward jump)
  $8AC -> $45B (backward jump)
  $8B8 -> $80E (backward jump)
  $8C6 -> $158 (backward jump)
  $924 -> $30F (backward jump)
  $958 -> $554 (backward jump)
  $976 -> $396 (backward jump)
  $97A -> $26E (backward jump)
  $98A -> $32D (backward jump)
  $98E -> $43B (backward jump)
  $99C -> $66C (backward jump)
  $9B8 -> $51A (backward jump)
  $9CE -> $3D8 (backward jump)
  $9D2 -> $753 (backward jump)
  $9EC -> $800 (backward jump)
  $9F2 -> $4E8 (backward jump)
  $A00 -> $479 (backward jump)
  $A02 -> $7F4 (backward jump)
  $A04 -> $5B1 (backward jump)
  $A08 -> $56D (backward jump)
  $A14 -> $594 (backward jump)
  $A46 -> $A45 (backward jump)
  $A50 -> $97B (backward jump)
  $A56 -> $287 (backward jump)
  $A58 -> $9D3 (backward jump)
  $A5E -> $468 (backward jump)
  $A76 -> $98F (backward jump)
  $A8E -> $6AA (backward jump)
  $A9A -> $711 (backward jump)
  $B1A -> $8E7 (backward jump)
  $B64 -> $013 (backward jump)
  $B6C -> $314 (backward jump)
  $BA0 -> $4E6 (backward jump)
  $C02 -> $9C6 (backward jump)
  $C0A -> $8A4 (backward jump)
  $C16 -> $4CD (backward jump)
  $C20 -> $592 (backward jump)
  $C26 -> $03D (backward jump)
  $C3E -> $BDC (backward jump)
  $C42 -> $7B2 (backward jump)
  $C56 -> $186 (backward jump)
  $C72 -> $2DC (backward jump)
  $C92 -> $AB6 (backward jump)
  $CA4 -> $182 (backward jump)
  $CA6 -> $346 (backward jump)
  $CCA -> $81E (backward jump)
  $D28 -> $B68 (backward jump)
  $D30 -> $BE2 (backward jump)
  $D38 -> $C14 (backward jump)
  $D80 -> $5A8 (backward jump)
  $D88 -> $503 (backward jump)
  $DA2 -> $8D1 (backward jump)
  $DB0 -> $D00 (backward jump)
  $DBE -> $742 (backward jump)
  $DC8 -> $D85 (backward jump)
  $DE2 -> $4B0 (backward jump)
  $DEA -> $470 (backward jump)
  $DEC -> $654 (backward jump)
  $DF2 -> $BBF (backward jump)
  $DFC -> $65C (backward jump)
  $E04 -> $3A4 (backward jump)
  $E0C -> $C90 (backward jump)
  $E1A -> $B04 (backward jump)
  $E22 -> $B49 (backward jump)
  $E2C -> $082 (backward jump)
  $E36 -> $D67 (backward jump)
  $E3E -> $334 (backward jump)
  $ECC -> $A60 (backward jump)
  $ED8 -> $77B (backward jump)
  $EDA -> $A86 (backward jump)
  $EE0 -> $E01 (backward jump)
  $EE6 -> $8EF (backward jump)
  $EEC -> $9C1 (backward jump)
  $EF0 -> $D8E (backward jump)
  $F28 -> $EF2 (backward jump)
  $F42 -> $75B (backward jump)
  $F44 -> $803 (backward jump)
  $F56 -> $D71 (backward jump)
  $F5A -> $E3F (backward jump)
  $F60 -> $798 (backward jump)
  $F72 -> $151 (backward jump)
  $F9A -> $951 (backward jump)
  $F9C -> $84A (backward jump)
  $FC4 -> $C30 (backward jump)
  $FC6 -> $F06 (backward jump)
  $FCE -> $9E8 (backward jump)
  $FD2 -> $F8A (backward jump)
  $FEA -> $B59 (backward jump)
  $FEC -> $380 (backward jump)
  $FFA -> $904 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $6697   LD       V6, #97         ; Load 151 into V6
$202    $8320   LD       V3, V2          ; V3 = V2
$204    $B66F   JP       V0, $66F        ; Jump to V0 + 66F
$206    $3B83   SE       VB, #83         ; Skip if VB == 131
$208    $559C   UNKNOWN  $559C           ; Unknown 5xxx instruction
$20A    $5B20   SE       VB, V2          ; Skip if VB == V2
$20C    $A833   LD       I, $833         ; Load 833 into I
$20E    $C01D   RND      V0, #1D         ; V0 = random & 1D
$210    $F289   UNKNOWN  F289            ; Unknown Fxxx instruction
$212    $5CC2   UNKNOWN  $5CC2           ; Unknown 5xxx instruction
$214    $4F76   SNE      VF, #76         ; Skip if VF != 118
$216    $046B   SYS      $46B            ; System call to 46B
$218    $C8DA   RND      V8, #DA         ; V8 = random & DA
$21A    $F856   UNKNOWN  F856            ; Unknown Fxxx instruction
$21C    $4A82   SNE      VA, #82         ; Skip if VA != 130
$21E    $479B   SNE      V7, #9B         ; Skip if V7 != 155
$220    $83A7   SUBN     V3, VA          ; V3 = VA - V3, VF = !borrow
$222    $820C   UNKNOWN  820C            ; Unknown 8xxx instruction
$224    $4962   SNE      V9, #62         ; Skip if V9 != 98
$226    $C030   RND      V0, #30         ; V0 = random & 30
$228    $DEB7   DRW      VE, VB, #7      ; Draw 7-byte sprite at VE, VB
$22A    $D3D8   DRW      V3, VD, #8      ; Draw 8-byte sprite at V3, VD
$22C    $86B0   LD       V6, VB          ; V6 = VB
$22E    $3ED7   SE       VE, #D7         ; Skip if VE == 215
$230    $A12E   LD       I, $12E         ; Load 12E into I
$232    $B895   JP       V0, $895        ; Jump to V0 + 895
$234    $3378   SE       V3, #78         ; Skip if V3 == 120
$236    $8461   OR       V4, V6          ; V4 |= V6
$238    $43CF   SNE      V3, #CF         ; Skip if V3 != 207
$23A    $8FBB   UNKNOWN  8FBB            ; Unknown 8xxx instruction
$23C    $F11B   UNKNOWN  F11B            ; Unknown Fxxx instruction
$23E    $3912   SE       V9, #12         ; Skip if V9 == 18
$240    $5883   UNKNOWN  $5883           ; Unknown 5xxx instruction
$242    $ED8F   UNKNOWN  $ED8F           ; Unknown Exxx instruction
$244    $39E0   SE       V9, #E0         ; Skip if V9 == 224
$246    $471D   SNE      V7, #1D         ; Skip if V7 != 29
$248    $C8DD   RND      V8, #DD         ; V8 = random & DD
$24A    $F11F   UNKNOWN  F11F            ; Unknown Fxxx instruction
$24C    $68BE   LD       V8, #BE         ; Load 190 into V8
$24E    $0B14   SYS      $B14            ; System call to B14
$250    $9006   UNKNOWN  $9006           ; Unknown 9xxx instruction
$252    $D3B0   DRW      V3, VB, #0      ; Draw 0-byte sprite at V3, VB
$254    $849A   UNKNOWN  849A            ; Unknown 8xxx instruction
$256    $36EC   SE       V6, #EC         ; Skip if V6 == 236
$258    $8E84   ADD      VE, V8          ; VE += V8, VF = carry
$25A    $A89E   LD       I, $89E         ; Load 89E into I
$25C    $AF10   LD       I, $F10         ; Load F10 into I
$25E    $2972   CALL     $972            ; Call subroutine at 972
$260    $B148   JP       V0, $148        ; Jump to V0 + 148
$262    $B1B7   JP       V0, $1B7        ; Jump to V0 + 1B7
$264    $3FED   SE       VF, #ED         ; Skip if VF == 237
$266    $614D   LD       V1, #4D         ; Load 77 into V1
$268    $550F   UNKNOWN  $550F           ; Unknown 5xxx instruction
$26A    $B20A   JP       V0, $20A        ; Jump to V0 + 20A
$26C    $F7DC   UNKNOWN  F7DC            ; Unknown Fxxx instruction
$26E    $A64D   LD       I, $64D         ; Load 64D into I
$270    $83EA   UNKNOWN  83EA            ; Unknown 8xxx instruction
$272    $17F5   JP       $7F5            ; Jump to 7F5
$274    $74A2   ADD      V4, #A2         ; Add 162 to V4
$276    $4D5C   SNE      VD, #5C         ; Skip if VD != 92
$278    $D7A5   DRW      V7, VA, #5      ; Draw 5-byte sprite at V7, VA
$27A    $96B0   SNE      V6, VB          ; Skip if V6 != VB
$27C    $1137   JP       $137            ; Jump to 137
$27E    $46FA   SNE      V6, #FA         ; Skip if V6 != 250
$280    $7AB3   ADD      VA, #B3         ; Add 179 to VA
$282    $9E49   UNKNOWN  $9E49           ; Unknown 9xxx instruction
$284    $6C1D   LD       VC, #1D         ; Load 29 into VC
$286    $5868   UNKNOWN  $5868           ; Unknown 5xxx instruction
$288    $4ADE   SNE      VA, #DE         ; Skip if VA != 222
$28A    $498E   SNE      V9, #8E         ; Skip if V9 != 142
$28C    $B638   JP       V0, $638        ; Jump to V0 + 638
$28E    $5EAA   UNKNOWN  $5EAA           ; Unknown 5xxx instruction
$290    $9709   UNKNOWN  $9709           ; Unknown 9xxx instruction
$292    $5BD5   UNKNOWN  $5BD5           ; Unknown 5xxx instruction
$294    $184F   JP       $84F            ; Jump to 84F
$296    $38B4   SE       V8, #B4         ; Skip if V8 == 180
$298    $4683   SNE      V6, #83         ; Skip if V6 != 131
$29A    $FD18   LD       ST, VD          ; Sound timer = VD
$29C    $0977   SYS      $977            ; System call to 977
$29E    $940C   UNKNOWN  $940C           ; Unknown 9xxx instruction
$2A0    $F062   UNKNOWN  F062            ; Unknown Fxxx instruction
$2A2    $785E   ADD      V8, #5E         ; Add 94 to V8
$2A4    $FD0B   UNKNOWN  FD0B            ; Unknown Fxxx instruction
$2A6    $5E3C   UNKNOWN  $5E3C           ; Unknown 5xxx instruction
$2A8    $A6BF   LD       I, $6BF         ; Load 6BF into I
$2AA    $D612   DRW      V6, V1, #2      ; Draw 2-byte sprite at V6, V1
$2AC    $CCAC   RND      VC, #AC         ; VC = random & AC
$2AE    $DE69   DRW      VE, V6, #9      ; Draw 9-byte sprite at VE, V6
$2B0    $CE43   RND      VE, #43         ; VE = random & 43
$2B2    $D601   DRW      V6, V0, #1      ; Draw 1-byte sprite at V6, V0
$2B4    $1BC7   JP       $BC7            ; Jump to BC7
$2B6    $CDCD   RND      VD, #CD         ; VD = random & CD
$2B8    $B16C   JP       V0, $16C        ; Jump to V0 + 16C
$2BA    $6D7F   LD       VD, #7F         ; Load 127 into VD
$2BC    $314D   SE       V1, #4D         ; Skip if V1 == 77
$2BE    $DA15   DRW      VA, V1, #5      ; Draw 5-byte sprite at VA, V1
$2C0    $3F2F   SE       VF, #2F         ; Skip if VF == 47
$2C2    $21A4   CALL     $1A4            ; Call subroutine at 1A4
$2C4    $7495   ADD      V4, #95         ; Add 149 to V4
$2C6    $5E6B   UNKNOWN  $5E6B           ; Unknown 5xxx instruction
$2C8    $222F   CALL     $22F            ; Call subroutine at 22F
$2CA    $0EEE   SYS      $EEE            ; System call to EEE
$2CC    $9446   UNKNOWN  $9446           ; Unknown 9xxx instruction
$2CE    $E66C   UNKNOWN  $E66C           ; Unknown Exxx instruction
$2D0    $F9FB   UNKNOWN  F9FB            ; Unknown Fxxx instruction
$2D2    $77FF   ADD      V7, #FF         ; Add 255 to V7
$2D4    $A0B6   LD       I, $0B6         ; Load 0B6 into I
$2D6    $7627   ADD      V6, #27         ; Add 39 to V6
$2D8    $F830   UNKNOWN  F830            ; Unknown Fxxx instruction
$2DA    $8A8B   UNKNOWN  8A8B            ; Unknown 8xxx instruction
$2DC    $C9B4   RND      V9, #B4         ; V9 = random & B4
$2DE    $673D   LD       V7, #3D         ; Load 61 into V7
$2E0    $3A9B   SE       VA, #9B         ; Skip if VA == 155
$2E2    $3161   SE       V1, #61         ; Skip if V1 == 97
$2E4    $5663   UNKNOWN  $5663           ; Unknown 5xxx instruction
$2E6    $ABCD   LD       I, $BCD         ; Load BCD into I
$2E8    $561F   UNKNOWN  $561F           ; Unknown 5xxx instruction
$2EA    $C23A   RND      V2, #3A         ; V2 = random & 3A
$2EC    $6A48   LD       VA, #48         ; Load 72 into VA
$2EE    $DE61   DRW      VE, V6, #1      ; Draw 1-byte sprite at VE, V6
$2F0    $AC49   LD       I, $C49         ; Load C49 into I
$2F2    $0148   SYS      $148            ; System call to 148
$2F4    $2E88   CALL     $E88            ; Call subroutine at E88
$2F6    $B4EE   JP       V0, $4EE        ; Jump to V0 + 4EE
$2F8    $1311   JP       $311            ; Jump to 311
$2FA    $06BA   SYS      $6BA            ; System call to 6BA
$2FC    $3A8A   SE       VA, #8A         ; Skip if VA == 138
$2FE    $4406   SNE      V4, #06         ; Skip if V4 != 6
$300    $0005   SYS      $005            ; System call to 005
$302    $0918   SYS      $918            ; System call to 918
$304    $5D69   UNKNOWN  $5D69           ; Unknown 5xxx instruction
$306    $ACBB   LD       I, $CBB         ; Load CBB into I
$308    $6A2E   LD       VA, #2E         ; Load 46 into VA
$30A    $C6E7   RND      V6, #E7         ; V6 = random & E7
$30C    $D161   DRW      V1, V6, #1      ; Draw 1-byte sprite at V1, V6
$30E    $BBB4   JP       V0, $BB4        ; Jump to V0 + BB4
$310    $2F29   CALL     $F29            ; Call subroutine at F29
$312    $76F9   ADD      V6, #F9         ; Add 249 to V6
$314    $365D   SE       V6, #5D         ; Skip if V6 == 93
$316    $D650   DRW      V6, V5, #0      ; Draw 0-byte sprite at V6, V5
$318    $9BBB   UNKNOWN  $9BBB           ; Unknown 9xxx instruction
$31A    $74DE   ADD      V4, #DE         ; Add 222 to V4
$31C    $2A37   CALL     $A37            ; Call subroutine at A37
$31E    $F79C   UNKNOWN  F79C            ; Unknown Fxxx instruction
$320    $924A   UNKNOWN  $924A           ; Unknown 9xxx instruction
$322    $52C0   SE       V2, VC          ; Skip if V2 == VC
$324    $2F07   CALL     $F07            ; Call subroutine at F07
$326    $1789   JP       $789            ; Jump to 789
$328    $69CA   LD       V9, #CA         ; Load 202 into V9
$32A    $AD32   LD       I, $D32         ; Load D32 into I
$32C    $E683   UNKNOWN  $E683           ; Unknown Exxx instruction
$32E    $7B6A   ADD      VB, #6A         ; Add 106 to VB
$330    $23FC   CALL     $3FC            ; Call subroutine at 3FC
$332    $6EFB   LD       VE, #FB         ; Load 251 into VE
$334    $8A58   UNKNOWN  8A58            ; Unknown 8xxx instruction
$336    $2587   CALL     $587            ; Call subroutine at 587
$338    $E8A8   UNKNOWN  $E8A8           ; Unknown Exxx instruction
$33A    $E825   UNKNOWN  $E825           ; Unknown Exxx instruction
$33C    $D052   DRW      V0, V5, #2      ; Draw 2-byte sprite at V0, V5
$33E    $C83F   RND      V8, #3F         ; V8 = random & 3F
$340    $1412   JP       $412            ; Jump to 412
$342    $F49B   UNKNOWN  F49B            ; Unknown Fxxx instruction
$344    $9738   UNKNOWN  $9738           ; Unknown 9xxx instruction
$346    $631B   LD       V3, #1B         ; Load 27 into V3
$348    $39AE   SE       V9, #AE         ; Skip if V9 == 174
$34A    $7594   ADD      V5, #94         ; Add 148 to V5
$34C    $C3A5   RND      V3, #A5         ; V3 = random & A5
$34E    $82F4   ADD      V2, VF          ; V2 += VF, VF = carry
$350    $16B9   JP       $6B9            ; Jump to 6B9
$352    $AF8C   LD       I, $F8C         ; Load F8C into I
$354    $6435   LD       V4, #35         ; Load 53 into V4
$356    $E63A   UNKNOWN  $E63A           ; Unknown Exxx instruction
$358    $8E05   SUB      VE, V0          ; VE -= V0, VF = !borrow
$35A    $8FFD   UNKNOWN  8FFD            ; Unknown 8xxx instruction
$35C    $7AFA   ADD      VA, #FA         ; Add 250 to VA
$35E    $D6BC   DRW      V6, VB, #C      ; Draw 12-byte sprite at V6, VB
$360    $CDFA   RND      VD, #FA         ; VD = random & FA
$362    $9666   UNKNOWN  $9666           ; Unknown 9xxx instruction
$364    $4559   SNE      V5, #59         ; Skip if V5 != 89
$366    $269D   CALL     $69D            ; Call subroutine at 69D
$368    $4F48   SNE      VF, #48         ; Skip if VF != 72
$36A    $5C7E   UNKNOWN  $5C7E           ; Unknown 5xxx instruction
$36C    $5690   SE       V6, V9          ; Skip if V6 == V9
$36E    $80FF   UNKNOWN  80FF            ; Unknown 8xxx instruction
$370    $09E1   SYS      $9E1            ; System call to 9E1
$372    $7301   ADD      V3, #01         ; Add 1 to V3
$374    $5A4E   UNKNOWN  $5A4E           ; Unknown 5xxx instruction
$376    $7414   ADD      V4, #14         ; Add 20 to V4
$378    $5E00   SE       VE, V0          ; Skip if VE == V0
$37A    $DEF8   DRW      VE, VF, #8      ; Draw 8-byte sprite at VE, VF
$37C    $96C7   UNKNOWN  $96C7           ; Unknown 9xxx instruction
$37E    $D48F   DRW      V4, V8, #F      ; Draw 15-byte sprite at V4, V8
$380    $54C9   UNKNOWN  $54C9           ; Unknown 5xxx instruction
$382    $4CD3   SNE      VC, #D3         ; Skip if VC != 211
$384    $0DB5   SYS      $DB5            ; System call to DB5
$386    $BEE5   JP       V0, $EE5        ; Jump to V0 + EE5
$388    $297E   CALL     $97E            ; Call subroutine at 97E
$38A    $C288   RND      V2, #88         ; V2 = random & 88
$38C    $B523   JP       V0, $523        ; Jump to V0 + 523
$38E    $E3CA   UNKNOWN  $E3CA           ; Unknown Exxx instruction
$390    $A3FD   LD       I, $3FD         ; Load 3FD into I
$392    $87ED   UNKNOWN  87ED            ; Unknown 8xxx instruction
$394    $017F   SYS      $17F            ; System call to 17F
$396    $4F37   SNE      VF, #37         ; Skip if VF != 55
$398    $E386   UNKNOWN  $E386           ; Unknown Exxx instruction
$39A    $9B3D   UNKNOWN  $9B3D           ; Unknown 9xxx instruction
$39C    $052D   SYS      $52D            ; System call to 52D
$39E    $6980   LD       V9, #80         ; Load 128 into V9
$3A0    $B44C   JP       V0, $44C        ; Jump to V0 + 44C
$3A2    $82B4   ADD      V2, VB          ; V2 += VB, VF = carry
$3A4    $7279   ADD      V2, #79         ; Add 121 to V2
$3A6    $E512   UNKNOWN  $E512           ; Unknown Exxx instruction
$3A8    $0541   SYS      $541            ; System call to 541
$3AA    $BC32   JP       V0, $C32        ; Jump to V0 + C32
$3AC    $22B5   CALL     $2B5            ; Call subroutine at 2B5
$3AE    $C37C   RND      V3, #7C         ; V3 = random & 7C
$3B0    $FC3E   UNKNOWN  FC3E            ; Unknown Fxxx instruction
$3B2    $4359   SNE      V3, #59         ; Skip if V3 != 89
$3B4    $A8AA   LD       I, $8AA         ; Load 8AA into I
$3B6    $9F6F   UNKNOWN  $9F6F           ; Unknown 9xxx instruction
$3B8    $3271   SE       V2, #71         ; Skip if V2 == 113
$3BA    $2CFD   CALL     $CFD            ; Call subroutine at CFD
$3BC    $51B3   UNKNOWN  $51B3           ; Unknown 5xxx instruction
$3BE    $F8CD   UNKNOWN  F8CD            ; Unknown Fxxx instruction
$3C0    $B0C5   JP       V0, $0C5        ; Jump to V0 + 0C5
$3C2    $2C24   CALL     $C24            ; Call subroutine at C24
$3C4    $24B6   CALL     $4B6            ; Call subroutine at 4B6
$3C6    $A427   LD       I, $427         ; Load 427 into I
$3C8    $C692   RND      V6, #92         ; V6 = random & 92
$3CA    $8DBE   SHL      VD              ; VD <<= 1, VF = MSB
$3CC    $7EAB   ADD      VE, #AB         ; Add 171 to VE
$3CE    $DF4F   DRW      VF, V4, #F      ; Draw 15-byte sprite at VF, V4
$3D0    $6DEC   LD       VD, #EC         ; Load 236 into VD
$3D2    $44EA   SNE      V4, #EA         ; Skip if V4 != 234
$3D4    $024C   SYS      $24C            ; System call to 24C
$3D6    $917F   UNKNOWN  $917F           ; Unknown 9xxx instruction
$3D8    $648C   LD       V4, #8C         ; Load 140 into V4
$3DA    $531F   UNKNOWN  $531F           ; Unknown 5xxx instruction
$3DC    $8D38   UNKNOWN  8D38            ; Unknown 8xxx instruction
$3DE    $CF12   RND      VF, #12         ; VF = random & 12
$3E0    $8C36   SHR      VC              ; VC >>= 1, VF = LSB
$3E2    $0BD6   SYS      $BD6            ; System call to BD6
$3E4    $F9C9   UNKNOWN  F9C9            ; Unknown Fxxx instruction
$3E6    $7553   ADD      V5, #53         ; Add 83 to V5
$3E8    $3F74   SE       VF, #74         ; Skip if VF == 116
$3EA    $9F3D   UNKNOWN  $9F3D           ; Unknown 9xxx instruction
$3EC    $9200   SNE      V2, V0          ; Skip if V2 != V0
$3EE    $8FE8   UNKNOWN  8FE8            ; Unknown 8xxx instruction
$3F0    $86E4   ADD      V6, VE          ; V6 += VE, VF = carry
$3F2    $DEFF   DRW      VE, VF, #F      ; Draw 15-byte sprite at VE, VF
$3F4    $F99E   UNKNOWN  F99E            ; Unknown Fxxx instruction
$3F6    $5BC1   UNKNOWN  $5BC1           ; Unknown 5xxx instruction
$3F8    $5A93   UNKNOWN  $5A93           ; Unknown 5xxx instruction
$3FA    $84DA   UNKNOWN  84DA            ; Unknown 8xxx instruction
$3FC    $888C   UNKNOWN  888C            ; Unknown 8xxx instruction
$3FE    $F5B6   UNKNOWN  F5B6            ; Unknown Fxxx instruction
$400    $FCF0   UNKNOWN  FCF0            ; Unknown Fxxx instruction
$402    $E84A   UNKNOWN  $E84A           ; Unknown Exxx instruction
$404    $CF7D   RND      VF, #7D         ; VF = random & 7D
$406    $779E   ADD      V7, #9E         ; Add 158 to V7
$408    $AF67   LD       I, $F67         ; Load F67 into I
$40A    $57B7   UNKNOWN  $57B7           ; Unknown 5xxx instruction
$40C    $3273   SE       V2, #73         ; Skip if V2 == 115
$40E    $2085   CALL     $085            ; Call subroutine at 085
$410    $0673   SYS      $673            ; System call to 673
$412    $F10D   UNKNOWN  F10D            ; Unknown Fxxx instruction
$414    $C995   RND      V9, #95         ; V9 = random & 95
$416    $F17D   UNKNOWN  F17D            ; Unknown Fxxx instruction
$418    $033D   SYS      $33D            ; System call to 33D
$41A    $8DF7   SUBN     VD, VF          ; VD = VF - VD, VF = !borrow
$41C    $25E5   CALL     $5E5            ; Call subroutine at 5E5
$41E    $0823   SYS      $823            ; System call to 823
$420    $87D1   OR       V7, VD          ; V7 |= VD
$422    $9C8F   UNKNOWN  $9C8F           ; Unknown 9xxx instruction
$424    $627C   LD       V2, #7C         ; Load 124 into V2
$426    $B165   JP       V0, $165        ; Jump to V0 + 165
$428    $70AF   ADD      V0, #AF         ; Add 175 to V0
$42A    $971F   UNKNOWN  $971F           ; Unknown 9xxx instruction
$42C    $63E4   LD       V3, #E4         ; Load 228 into V3
$42E    $6619   LD       V6, #19         ; Load 25 into V6
$430    $0AF7   SYS      $AF7            ; System call to AF7
$432    $3F6D   SE       VF, #6D         ; Skip if VF == 109
$434    $CA55   RND      VA, #55         ; VA = random & 55
$436    $96BC   UNKNOWN  $96BC           ; Unknown 9xxx instruction
$438    $378B   SE       V7, #8B         ; Skip if V7 == 139
$43A    $5348   UNKNOWN  $5348           ; Unknown 5xxx instruction
$43C    $8284   ADD      V2, V8          ; V2 += V8, VF = carry
$43E    $223D   CALL     $23D            ; Call subroutine at 23D
$440    $9E4C   UNKNOWN  $9E4C           ; Unknown 9xxx instruction
$442    $A5B0   LD       I, $5B0         ; Load 5B0 into I
$444    $46C8   SNE      V6, #C8         ; Skip if V6 != 200
$446    $1124   JP       $124            ; Jump to 124
$448    $13DB   JP       $3DB            ; Jump to 3DB
$44A    $E016   UNKNOWN  $E016           ; Unknown Exxx instruction
$44C    $095C   SYS      $95C            ; System call to 95C
$44E    $781F   ADD      V8, #1F         ; Add 31 to V8
$450    $B247   JP       V0, $247        ; Jump to V0 + 247
$452    $99D7   UNKNOWN  $99D7           ; Unknown 9xxx instruction
$454    $7EA1   ADD      VE, #A1         ; Add 161 to VE
$456    $7E47   ADD      VE, #47         ; Add 71 to VE
$458    $60CF   LD       V0, #CF         ; Load 207 into V0
$45A    $7979   ADD      V9, #79         ; Add 121 to V9
$45C    $8860   LD       V8, V6          ; V8 = V6
$45E    $3371   SE       V3, #71         ; Skip if V3 == 113
$460    $63DE   LD       V3, #DE         ; Load 222 into V3
$462    $CD0E   RND      VD, #0E         ; VD = random & 0E
$464    $623A   LD       V2, #3A         ; Load 58 into V2
$466    $FFF3   UNKNOWN  FFF3            ; Unknown Fxxx instruction
$468    $8015   SUB      V0, V1          ; V0 -= V1, VF = !borrow
$46A    $C5D7   RND      V5, #D7         ; V5 = random & D7
$46C    $479D   SNE      V7, #9D         ; Skip if V7 != 157
$46E    $5D6C   UNKNOWN  $5D6C           ; Unknown 5xxx instruction
$470    $223B   CALL     $23B            ; Call subroutine at 23B
$472    $3A1F   SE       VA, #1F         ; Skip if VA == 31
$474    $E4EA   UNKNOWN  $E4EA           ; Unknown Exxx instruction
$476    $76FA   ADD      V6, #FA         ; Add 250 to V6
$478    $7D06   ADD      VD, #06         ; Add 6 to VD
$47A    $0B7B   SYS      $B7B            ; System call to B7B
$47C    $49EF   SNE      V9, #EF         ; Skip if V9 != 239
$47E    $4CA4   SNE      VC, #A4         ; Skip if VC != 164
$480    $1258   JP       $258            ; Jump to 258
$482    $BD01   JP       V0, $D01        ; Jump to V0 + D01
$484    $37A9   SE       V7, #A9         ; Skip if V7 == 169
$486    $B18F   JP       V0, $18F        ; Jump to V0 + 18F
$488    $BD94   JP       V0, $D94        ; Jump to V0 + D94
$48A    $4E09   SNE      VE, #09         ; Skip if VE != 9
$48C    $B03E   JP       V0, $03E        ; Jump to V0 + 03E
$48E    $312C   SE       V1, #2C         ; Skip if V1 == 44
$490    $72D8   ADD      V2, #D8         ; Add 216 to V2
$492    $E1C4   UNKNOWN  $E1C4           ; Unknown Exxx instruction
$494    $B8EB   JP       V0, $8EB        ; Jump to V0 + 8EB
$496    $6A0B   LD       VA, #0B         ; Load 11 into VA
$498    $4756   SNE      V7, #56         ; Skip if V7 != 86
$49A    $F2D8   UNKNOWN  F2D8            ; Unknown Fxxx instruction
$49C    $47F4   SNE      V7, #F4         ; Skip if V7 != 244
$49E    $B769   JP       V0, $769        ; Jump to V0 + 769
$4A0    $D726   DRW      V7, V2, #6      ; Draw 6-byte sprite at V7, V2
$4A2    $779D   ADD      V7, #9D         ; Add 157 to V7
$4A4    $7FA4   ADD      VF, #A4         ; Add 164 to VF
$4A6    $7A33   ADD      VA, #33         ; Add 51 to VA
$4A8    $611C   LD       V1, #1C         ; Load 28 into V1
$4AA    $D5BC   DRW      V5, VB, #C      ; Draw 12-byte sprite at V5, VB
$4AC    $742B   ADD      V4, #2B         ; Add 43 to V4
$4AE    $37AD   SE       V7, #AD         ; Skip if V7 == 173
$4B0    $A44B   LD       I, $44B         ; Load 44B into I
$4B2    $CE37   RND      VE, #37         ; VE = random & 37
$4B4    $6F7E   LD       VF, #7E         ; Load 126 into VF
$4B6    $1DAA   JP       $DAA            ; Jump to DAA
$4B8    $B884   JP       V0, $884        ; Jump to V0 + 884
$4BA    $A893   LD       I, $893         ; Load 893 into I
$4BC    $5336   UNKNOWN  $5336           ; Unknown 5xxx instruction
$4BE    $0FA8   SYS      $FA8            ; System call to FA8
$4C0    $F53A   UNKNOWN  F53A            ; Unknown Fxxx instruction
$4C2    $764E   ADD      V6, #4E         ; Add 78 to V6
$4C4    $2C52   CALL     $C52            ; Call subroutine at C52
$4C6    $7974   ADD      V9, #74         ; Add 116 to V9
$4C8    $E50A   UNKNOWN  $E50A           ; Unknown Exxx instruction
$4CA    $7DE8   ADD      VD, #E8         ; Add 232 to VD
$4CC    $4D1A   SNE      VD, #1A         ; Skip if VD != 26
$4CE    $8589   UNKNOWN  8589            ; Unknown 8xxx instruction
$4D0    $53B8   UNKNOWN  $53B8           ; Unknown 5xxx instruction
$4D2    $CB74   RND      VB, #74         ; VB = random & 74
$4D4    $3931   SE       V9, #31         ; Skip if V9 == 49
$4D6    $F600   UNKNOWN  F600            ; Unknown Fxxx instruction
$4D8    $4FA5   SNE      VF, #A5         ; Skip if VF != 165
$4DA    $386A   SE       V8, #6A         ; Skip if V8 == 106
$4DC    $C719   RND      V7, #19         ; V7 = random & 19
$4DE    $048B   SYS      $48B            ; System call to 48B
$4E0    $552D   UNKNOWN  $552D           ; Unknown 5xxx instruction
$4E2    $4CD3   SNE      VC, #D3         ; Skip if VC != 211
$4E4    $3700   SE       V7, #00         ; Skip if V7 == 0
$4E6    $CD08   RND      VD, #08         ; VD = random & 08
$4E8    $0A23   SYS      $A23            ; System call to A23
$4EA    $3D61   SE       VD, #61         ; Skip if VD == 97
$4EC    $B7F3   JP       V0, $7F3        ; Jump to V0 + 7F3
$4EE    $AC21   LD       I, $C21         ; Load C21 into I
$4F0    $B2A0   JP       V0, $2A0        ; Jump to V0 + 2A0
$4F2    $0DAE   SYS      $DAE            ; System call to DAE
$4F4    $FCCB   UNKNOWN  FCCB            ; Unknown Fxxx instruction
$4F6    $68D2   LD       V8, #D2         ; Load 210 into V8
$4F8    $BF64   JP       V0, $F64        ; Jump to V0 + F64
$4FA    $2031   CALL     $031            ; Call subroutine at 031
$4FC    $B59B   JP       V0, $59B        ; Jump to V0 + 59B
$4FE    $BB30   JP       V0, $B30        ; Jump to V0 + B30
$500    $EB97   UNKNOWN  $EB97           ; Unknown Exxx instruction
$502    $D502   DRW      V5, V0, #2      ; Draw 2-byte sprite at V5, V0
$504    $D3CB   DRW      V3, VC, #B      ; Draw 11-byte sprite at V3, VC
$506    $9138   UNKNOWN  $9138           ; Unknown 9xxx instruction
$508    $E5BE   UNKNOWN  $E5BE           ; Unknown Exxx instruction
$50A    $3770   SE       V7, #70         ; Skip if V7 == 112
$50C    $0ABB   SYS      $ABB            ; System call to ABB
$50E    $E1CF   UNKNOWN  $E1CF           ; Unknown Exxx instruction
$510    $6074   LD       V0, #74         ; Load 116 into V0
$512    $AC67   LD       I, $C67         ; Load C67 into I
$514    $2271   CALL     $271            ; Call subroutine at 271
$516    $4705   SNE      V7, #05         ; Skip if V7 != 5
$518    $CF00   RND      VF, #00         ; VF = random & 00
$51A    $D938   DRW      V9, V3, #8      ; Draw 8-byte sprite at V9, V3
$51C    $5597   UNKNOWN  $5597           ; Unknown 5xxx instruction
$51E    $C40A   RND      V4, #0A         ; V4 = random & 0A
$520    $5E67   UNKNOWN  $5E67           ; Unknown 5xxx instruction
$522    $4C83   SNE      VC, #83         ; Skip if VC != 131
$524    $7B01   ADD      VB, #01         ; Add 1 to VB
$526    $2696   CALL     $696            ; Call subroutine at 696
$528    $A57D   LD       I, $57D         ; Load 57D into I
$52A    $4F4B   SNE      VF, #4B         ; Skip if VF != 75
$52C    $75F7   ADD      V5, #F7         ; Add 247 to V5
$52E    $A95F   LD       I, $95F         ; Load 95F into I
$530    $8E2A   UNKNOWN  8E2A            ; Unknown 8xxx instruction
$532    $7B56   ADD      VB, #56         ; Add 86 to VB
$534    $7700   ADD      V7, #00         ; Add 0 to V7
$536    $5ED6   UNKNOWN  $5ED6           ; Unknown 5xxx instruction
$538    $A68E   LD       I, $68E         ; Load 68E into I
$53A    $AD26   LD       I, $D26         ; Load D26 into I
$53C    $C0B6   RND      V0, #B6         ; V0 = random & B6
$53E    $F0FD   UNKNOWN  F0FD            ; Unknown Fxxx instruction
$540    $D688   DRW      V6, V8, #8      ; Draw 8-byte sprite at V6, V8
$542    $36B1   SE       V6, #B1         ; Skip if V6 == 177
$544    $D416   DRW      V4, V1, #6      ; Draw 6-byte sprite at V4, V1
$546    $0754   SYS      $754            ; System call to 754
$548    $647A   LD       V4, #7A         ; Load 122 into V4
$54A    $6C91   LD       VC, #91         ; Load 145 into VC
$54C    $B295   JP       V0, $295        ; Jump to V0 + 295
$54E    $7C51   ADD      VC, #51         ; Add 81 to VC
$550    $2507   CALL     $507            ; Call subroutine at 507
$552    $0887   SYS      $887            ; System call to 887
$554    $F6AD   UNKNOWN  F6AD            ; Unknown Fxxx instruction
$556    $6FEB   LD       VF, #EB         ; Load 235 into VF
$558    $01FA   SYS      $1FA            ; System call to 1FA
$55A    $9C15   UNKNOWN  $9C15           ; Unknown 9xxx instruction
$55C    $9B7F   UNKNOWN  $9B7F           ; Unknown 9xxx instruction
$55E    $4051   SNE      V0, #51         ; Skip if V0 != 81
$560    $87E3   XOR      V7, VE          ; V7 ^= VE
$562    $605F   LD       V0, #5F         ; Load 95 into V0
$564    $3BAA   SE       VB, #AA         ; Skip if VB == 170
$566    $A3D4   LD       I, $3D4         ; Load 3D4 into I
$568    $D4E9   DRW      V4, VE, #9      ; Draw 9-byte sprite at V4, VE
$56A    $F4CA   UNKNOWN  F4CA            ; Unknown Fxxx instruction
$56C    $360C   SE       V6, #0C         ; Skip if V6 == 12
$56E    $468E   SNE      V6, #8E         ; Skip if V6 != 142
$570    $39FB   SE       V9, #FB         ; Skip if V9 == 251
$572    $BB5F   JP       V0, $B5F        ; Jump to V0 + B5F
$574    $AE1C   LD       I, $E1C         ; Load E1C into I
$576    $363E   SE       V6, #3E         ; Skip if V6 == 62
$578    $A978   LD       I, $978         ; Load 978 into I
$57A    $E351   UNKNOWN  $E351           ; Unknown Exxx instruction
$57C    $8E1E   SHL      VE              ; VE <<= 1, VF = MSB
$57E    $7AA1   ADD      VA, #A1         ; Add 161 to VA
$580    $94FC   UNKNOWN  $94FC           ; Unknown 9xxx instruction
$582    $394A   SE       V9, #4A         ; Skip if V9 == 74
$584    $A8FD   LD       I, $8FD         ; Load 8FD into I
$586    $AFB6   LD       I, $FB6         ; Load FB6 into I
$588    $6E9A   LD       VE, #9A         ; Load 154 into VE
$58A    $E7B2   UNKNOWN  $E7B2           ; Unknown Exxx instruction
$58C    $53D3   UNKNOWN  $53D3           ; Unknown 5xxx instruction
$58E    $B68E   JP       V0, $68E        ; Jump to V0 + 68E
$590    $EF33   UNKNOWN  $EF33           ; Unknown Exxx instruction
$592    $C47D   RND      V4, #7D         ; V4 = random & 7D
$594    $E7F3   UNKNOWN  $E7F3           ; Unknown Exxx instruction
$596    $8400   LD       V4, V0          ; V4 = V0
$598    $A061   LD       I, $061         ; Load 061 into I
$59A    $638A   LD       V3, #8A         ; Load 138 into V3
$59C    $601A   LD       V0, #1A         ; Load 26 into V0
$59E    $745A   ADD      V4, #5A         ; Add 90 to V4
$5A0    $DD8F   DRW      VD, V8, #F      ; Draw 15-byte sprite at VD, V8
$5A2    $CC3E   RND      VC, #3E         ; VC = random & 3E
$5A4    $2F71   CALL     $F71            ; Call subroutine at F71
$5A6    $6A98   LD       VA, #98         ; Load 152 into VA
$5A8    $7086   ADD      V0, #86         ; Add 134 to V0
$5AA    $89B0   LD       V9, VB          ; V9 = VB
$5AC    $6A15   LD       VA, #15         ; Load 21 into VA
$5AE    $B752   JP       V0, $752        ; Jump to V0 + 752
$5B0    $B778   JP       V0, $778        ; Jump to V0 + 778
$5B2    $B2DC   JP       V0, $2DC        ; Jump to V0 + 2DC
$5B4    $1565   JP       $565            ; Jump to 565
$5B6    $5177   UNKNOWN  $5177           ; Unknown 5xxx instruction
$5B8    $04C1   SYS      $4C1            ; System call to 4C1
$5BA    $CC5C   RND      VC, #5C         ; VC = random & 5C
$5BC    $425B   SNE      V2, #5B         ; Skip if V2 != 91
$5BE    $8C57   SUBN     VC, V5          ; VC = V5 - VC, VF = !borrow
$5C0    $A404   LD       I, $404         ; Load 404 into I
$5C2    $74E7   ADD      V4, #E7         ; Add 231 to V4
$5C4    $D548   DRW      V5, V4, #8      ; Draw 8-byte sprite at V5, V4
$5C6    $BFC9   JP       V0, $FC9        ; Jump to V0 + FC9
$5C8    $2F31   CALL     $F31            ; Call subroutine at F31
$5CA    $AC41   LD       I, $C41         ; Load C41 into I
$5CC    $FC63   UNKNOWN  FC63            ; Unknown Fxxx instruction
$5CE    $CC3C   RND      VC, #3C         ; VC = random & 3C
$5D0    $328E   SE       V2, #8E         ; Skip if V2 == 142
$5D2    $D684   DRW      V6, V8, #4      ; Draw 4-byte sprite at V6, V8
$5D4    $DBEF   DRW      VB, VE, #F      ; Draw 15-byte sprite at VB, VE
$5D6    $DCA0   DRW      VC, VA, #0      ; Draw 0-byte sprite at VC, VA
$5D8    $4F80   SNE      VF, #80         ; Skip if VF != 128
$5DA    $175C   JP       $75C            ; Jump to 75C
$5DC    $5CD4   UNKNOWN  $5CD4           ; Unknown 5xxx instruction
$5DE    $4BC7   SNE      VB, #C7         ; Skip if VB != 199
$5E0    $E882   UNKNOWN  $E882           ; Unknown Exxx instruction
$5E2    $ED7B   UNKNOWN  $ED7B           ; Unknown Exxx instruction
$5E4    $30E9   SE       V0, #E9         ; Skip if V0 == 233
$5E6    $E324   UNKNOWN  $E324           ; Unknown Exxx instruction
$5E8    $CBC4   RND      VB, #C4         ; VB = random & C4
$5EA    $49D5   SNE      V9, #D5         ; Skip if V9 != 213
$5EC    $F6BA   UNKNOWN  F6BA            ; Unknown Fxxx instruction
$5EE    $41C1   SNE      V1, #C1         ; Skip if V1 != 193
$5F0    $C8DE   RND      V8, #DE         ; V8 = random & DE
$5F2    $9076   UNKNOWN  $9076           ; Unknown 9xxx instruction
$5F4    $B7F1   JP       V0, $7F1        ; Jump to V0 + 7F1
$5F6    $C657   RND      V6, #57         ; V6 = random & 57
$5F8    $78A1   ADD      V8, #A1         ; Add 161 to V8
$5FA    $63B0   LD       V3, #B0         ; Load 176 into V3
$5FC    $048D   SYS      $48D            ; System call to 48D
$5FE    $762E   ADD      V6, #2E         ; Add 46 to V6
$600    $F256   UNKNOWN  F256            ; Unknown Fxxx instruction
$602    $BB19   JP       V0, $B19        ; Jump to V0 + B19
$604    $B9E6   JP       V0, $9E6        ; Jump to V0 + 9E6
$606    $CD24   RND      VD, #24         ; VD = random & 24
$608    $8FFA   UNKNOWN  8FFA            ; Unknown 8xxx instruction
$60A    $21B4   CALL     $1B4            ; Call subroutine at 1B4
$60C    $A40E   LD       I, $40E         ; Load 40E into I
$60E    $F2D6   UNKNOWN  F2D6            ; Unknown Fxxx instruction
$610    $0483   SYS      $483            ; System call to 483
$612    $7063   ADD      V0, #63         ; Add 99 to V0
$614    $8A23   XOR      VA, V2          ; VA ^= V2
$616    $A153   LD       I, $153         ; Load 153 into I
$618    $6FD1   LD       VF, #D1         ; Load 209 into VF
$61A    $B875   JP       V0, $875        ; Jump to V0 + 875
$61C    $9579   UNKNOWN  $9579           ; Unknown 9xxx instruction
$61E    $1797   JP       $797            ; Jump to 797
$620    $39A4   SE       V9, #A4         ; Skip if V9 == 164
$622    $CA39   RND      VA, #39         ; VA = random & 39
$624    $52AD   UNKNOWN  $52AD           ; Unknown 5xxx instruction
$626    $3196   SE       V1, #96         ; Skip if V1 == 150
$628    $B5E0   JP       V0, $5E0        ; Jump to V0 + 5E0
$62A    $3F36   SE       VF, #36         ; Skip if VF == 54
$62C    $A0DE   LD       I, $0DE         ; Load 0DE into I
$62E    $C67A   RND      V6, #7A         ; V6 = random & 7A
$630    $CEE2   RND      VE, #E2         ; VE = random & E2
$632    $FA20   UNKNOWN  FA20            ; Unknown Fxxx instruction
$634    $242F   CALL     $42F            ; Call subroutine at 42F
$636    $689F   LD       V8, #9F         ; Load 159 into V8
$638    $139B   JP       $39B            ; Jump to 39B
$63A    $FEA2   UNKNOWN  FEA2            ; Unknown Fxxx instruction
$63C    $E5A2   UNKNOWN  $E5A2           ; Unknown Exxx instruction
$63E    $8DD6   SHR      VD              ; VD >>= 1, VF = LSB
$640    $3491   SE       V4, #91         ; Skip if V4 == 145
$642    $D3BE   DRW      V3, VB, #E      ; Draw 14-byte sprite at V3, VB
$644    $D132   DRW      V1, V3, #2      ; Draw 2-byte sprite at V1, V3
$646    $D398   DRW      V3, V9, #8      ; Draw 8-byte sprite at V3, V9
$648    $DA0A   DRW      VA, V0, #A      ; Draw 10-byte sprite at VA, V0
$64A    $D0C5   DRW      V0, VC, #5      ; Draw 5-byte sprite at V0, VC
$64C    $087F   SYS      $87F            ; System call to 87F
$64E    $F294   UNKNOWN  F294            ; Unknown Fxxx instruction
$650    $4543   SNE      V5, #43         ; Skip if V5 != 67
$652    $186F   JP       $86F            ; Jump to 86F
$654    $6A1D   LD       VA, #1D         ; Load 29 into VA
$656    $4BA0   SNE      VB, #A0         ; Skip if VB != 160
$658    $79C8   ADD      V9, #C8         ; Add 200 to V9
$65A    $5E27   UNKNOWN  $5E27           ; Unknown 5xxx instruction
$65C    $720B   ADD      V2, #0B         ; Add 11 to V2
$65E    $F4A2   UNKNOWN  F4A2            ; Unknown Fxxx instruction
$660    $99C1   UNKNOWN  $99C1           ; Unknown 9xxx instruction
$662    $4523   SNE      V5, #23         ; Skip if V5 != 35
$664    $A04A   LD       I, $04A         ; Load 04A into I
$666    $DA57   DRW      VA, V5, #7      ; Draw 7-byte sprite at VA, V5
$668    $1DC3   JP       $DC3            ; Jump to DC3
$66A    $233D   CALL     $33D            ; Call subroutine at 33D
$66C    $927E   UNKNOWN  $927E           ; Unknown 9xxx instruction
$66E    $BAF5   JP       V0, $AF5        ; Jump to V0 + AF5
$670    $3CA8   SE       VC, #A8         ; Skip if VC == 168
$672    $0760   SYS      $760            ; System call to 760
$674    $B878   JP       V0, $878        ; Jump to V0 + 878
$676    $03B0   SYS      $3B0            ; System call to 3B0
$678    $3930   SE       V9, #30         ; Skip if V9 == 48
$67A    $63D6   LD       V3, #D6         ; Load 214 into V3
$67C    $729D   ADD      V2, #9D         ; Add 157 to V2
$67E    $E4F2   UNKNOWN  $E4F2           ; Unknown Exxx instruction
$680    $930C   UNKNOWN  $930C           ; Unknown 9xxx instruction
$682    $3A7E   SE       VA, #7E         ; Skip if VA == 126
$684    $CF16   RND      VF, #16         ; VF = random & 16
$686    $14B1   JP       $4B1            ; Jump to 4B1
$688    $5095   UNKNOWN  $5095           ; Unknown 5xxx instruction
$68A    $7F9F   ADD      VF, #9F         ; Add 159 to VF
$68C    $A7B1   LD       I, $7B1         ; Load 7B1 into I
$68E    $1F69   JP       $F69            ; Jump to F69
$690    $5D33   UNKNOWN  $5D33           ; Unknown 5xxx instruction
$692    $6C38   LD       VC, #38         ; Load 56 into VC
$694    $1CA3   JP       $CA3            ; Jump to CA3
$696    $873D   UNKNOWN  873D            ; Unknown 8xxx instruction
$698    $7F2A   ADD      VF, #2A         ; Add 42 to VF
$69A    $FEB3   UNKNOWN  FEB3            ; Unknown Fxxx instruction
$69C    $CC0B   RND      VC, #0B         ; VC = random & 0B
$69E    $E842   UNKNOWN  $E842           ; Unknown Exxx instruction
$6A0    $A872   LD       I, $872         ; Load 872 into I
$6A2    $1ACB   JP       $ACB            ; Jump to ACB
$6A4    $26AF   CALL     $6AF            ; Call subroutine at 6AF
$6A6    $4137   SNE      V1, #37         ; Skip if V1 != 55
$6A8    $3C4E   SE       VC, #4E         ; Skip if VC == 78
$6AA    $8386   SHR      V3              ; V3 >>= 1, VF = LSB
$6AC    $3531   SE       V5, #31         ; Skip if V5 == 49
$6AE    $BB1E   JP       V0, $B1E        ; Jump to V0 + B1E
$6B0    $3677   SE       V6, #77         ; Skip if V6 == 119
$6B2    $638F   LD       V3, #8F         ; Load 143 into V3
$6B4    $8730   LD       V7, V3          ; V7 = V3
$6B6    $E9C1   UNKNOWN  $E9C1           ; Unknown Exxx instruction
$6B8    $3637   SE       V6, #37         ; Skip if V6 == 55
$6BA    $F9F0   UNKNOWN  F9F0            ; Unknown Fxxx instruction
$6BC    $B044   JP       V0, $044        ; Jump to V0 + 044
$6BE    $6FCB   LD       VF, #CB         ; Load 203 into VF
$6C0    $0F33   SYS      $F33            ; System call to F33
$6C2    $FAF2   UNKNOWN  FAF2            ; Unknown Fxxx instruction
$6C4    $58F9   UNKNOWN  $58F9           ; Unknown 5xxx instruction
$6C6    $DBBF   DRW      VB, VB, #F      ; Draw 15-byte sprite at VB, VB
$6C8    $3514   SE       V5, #14         ; Skip if V5 == 20
$6CA    $9FB9   UNKNOWN  $9FB9           ; Unknown 9xxx instruction
$6CC    $4036   SNE      V0, #36         ; Skip if V0 != 54
$6CE    $DFD2   DRW      VF, VD, #2      ; Draw 2-byte sprite at VF, VD
$6D0    $9A56   UNKNOWN  $9A56           ; Unknown 9xxx instruction
$6D2    $5831   UNKNOWN  $5831           ; Unknown 5xxx instruction
$6D4    $0305   SYS      $305            ; System call to 305
$6D6    $5B22   UNKNOWN  $5B22           ; Unknown 5xxx instruction
$6D8    $0F85   SYS      $F85            ; System call to F85
$6DA    $1372   JP       $372            ; Jump to 372
$6DC    $A6B9   LD       I, $6B9         ; Load 6B9 into I
$6DE    $A362   LD       I, $362         ; Load 362 into I
$6E0    $F21A   UNKNOWN  F21A            ; Unknown Fxxx instruction
$6E2    $A35C   LD       I, $35C         ; Load 35C into I
$6E4    $C57F   RND      V5, #7F         ; V5 = random & 7F
$6E6    $1F71   JP       $F71            ; Jump to F71
$6E8    $E92C   UNKNOWN  $E92C           ; Unknown Exxx instruction
$6EA    $11FA   JP       $1FA            ; Jump to 1FA
$6EC    $D876   DRW      V8, V7, #6      ; Draw 6-byte sprite at V8, V7
$6EE    $03CB   SYS      $3CB            ; System call to 3CB
$6F0    $50F5   UNKNOWN  $50F5           ; Unknown 5xxx instruction
$6F2    $E3E7   UNKNOWN  $E3E7           ; Unknown Exxx instruction
$6F4    $0BD4   SYS      $BD4            ; System call to BD4
$6F6    $A7BD   LD       I, $7BD         ; Load 7BD into I
$6F8    $660A   LD       V6, #0A         ; Load 10 into V6
$6FA    $A5BD   LD       I, $5BD         ; Load 5BD into I
$6FC    $D0B9   DRW      V0, VB, #9      ; Draw 9-byte sprite at V0, VB
$6FE    $D23E   DRW      V2, V3, #E      ; Draw 14-byte sprite at V2, V3
$700    $C1A6   RND      V1, #A6         ; V1 = random & A6
$702    $5438   UNKNOWN  $5438           ; Unknown 5xxx instruction
$704    $7A7B   ADD      VA, #7B         ; Add 123 to VA
$706    $8B81   OR       VB, V8          ; VB |= V8
$708    $98B6   UNKNOWN  $98B6           ; Unknown 9xxx instruction
$70A    $FA0C   UNKNOWN  FA0C            ; Unknown Fxxx instruction
$70C    $53E0   SE       V3, VE          ; Skip if V3 == VE
$70E    $DCCA   DRW      VC, VC, #A      ; Draw 10-byte sprite at VC, VC
$710    $ABA0   LD       I, $BA0         ; Load BA0 into I
$712    $39FF   SE       V9, #FF         ; Skip if V9 == 255
$714    $EEF9   UNKNOWN  $EEF9           ; Unknown Exxx instruction
$716    $D599   DRW      V5, V9, #9      ; Draw 9-byte sprite at V5, V9
$718    $C190   RND      V1, #90         ; V1 = random & 90
$71A    $E1EC   UNKNOWN  $E1EC           ; Unknown Exxx instruction
$71C    $7E9B   ADD      VE, #9B         ; Add 155 to VE
$71E    $F3AD   UNKNOWN  F3AD            ; Unknown Fxxx instruction
$720    $7EC4   ADD      VE, #C4         ; Add 196 to VE
$722    $A7E4   LD       I, $7E4         ; Load 7E4 into I
$724    $C213   RND      V2, #13         ; V2 = random & 13
$726    $CD81   RND      VD, #81         ; VD = random & 81
$728    $7993   ADD      V9, #93         ; Add 147 to V9
$72A    $2C23   CALL     $C23            ; Call subroutine at C23
$72C    $7B28   ADD      VB, #28         ; Add 40 to VB
$72E    $229E   CALL     $29E            ; Call subroutine at 29E
$730    $D4E6   DRW      V4, VE, #6      ; Draw 6-byte sprite at V4, VE
$732    $28F9   CALL     $8F9            ; Call subroutine at 8F9
$734    $3AE1   SE       VA, #E1         ; Skip if VA == 225
$736    $82C4   ADD      V2, VC          ; V2 += VC, VF = carry
$738    $62D6   LD       V2, #D6         ; Load 214 into V2
$73A    $C1F2   RND      V1, #F2         ; V1 = random & F2
$73C    $3015   SE       V0, #15         ; Skip if V0 == 21
$73E    $12F1   JP       $2F1            ; Jump to 2F1
$740    $198C   JP       $98C            ; Jump to 98C
$742    $05A9   SYS      $5A9            ; System call to 5A9
$744    $6A0F   LD       VA, #0F         ; Load 15 into VA
$746    $3270   SE       V2, #70         ; Skip if V2 == 112
$748    $3FD7   SE       VF, #D7         ; Skip if VF == 215
$74A    $1ECF   JP       $ECF            ; Jump to ECF
$74C    $C689   RND      V6, #89         ; V6 = random & 89
$74E    $50F0   SE       V0, VF          ; Skip if V0 == VF
$750    $2F58   CALL     $F58            ; Call subroutine at F58
$752    $657A   LD       V5, #7A         ; Load 122 into V5
$754    $E040   UNKNOWN  $E040           ; Unknown Exxx instruction
$756    $AA4E   LD       I, $A4E         ; Load A4E into I
$758    $63A4   LD       V3, #A4         ; Load 164 into V3
$75A    $59A9   UNKNOWN  $59A9           ; Unknown 5xxx instruction
$75C    $8CC7   SUBN     VC, VC          ; VC = VC - VC, VF = !borrow
$75E    $A91E   LD       I, $91E         ; Load 91E into I
$760    $C728   RND      V7, #28         ; V7 = random & 28
$762    $1AE0   JP       $AE0            ; Jump to AE0
$764    $5009   UNKNOWN  $5009           ; Unknown 5xxx instruction
$766    $F1EF   UNKNOWN  F1EF            ; Unknown Fxxx instruction
$768    $A162   LD       I, $162         ; Load 162 into I
$76A    $A206   LD       I, $206         ; Load 206 into I
$76C    $9FE9   UNKNOWN  $9FE9           ; Unknown 9xxx instruction
$76E    $D92E   DRW      V9, V2, #E      ; Draw 14-byte sprite at V9, V2
$770    $F01C   UNKNOWN  F01C            ; Unknown Fxxx instruction
$772    $0D0F   SYS      $D0F            ; System call to D0F
$774    $21A1   CALL     $1A1            ; Call subroutine at 1A1
$776    $D045   DRW      V0, V4, #5      ; Draw 5-byte sprite at V0, V4
$778    $849D   UNKNOWN  849D            ; Unknown 8xxx instruction
$77A    $AF37   LD       I, $F37         ; Load F37 into I
$77C    $D0A8   DRW      V0, VA, #8      ; Draw 8-byte sprite at V0, VA
$77E    $07B1   SYS      $7B1            ; System call to 7B1
$780    $5D63   UNKNOWN  $5D63           ; Unknown 5xxx instruction
$782    $1CAF   JP       $CAF            ; Jump to CAF
$784    $7DCF   ADD      VD, #CF         ; Add 207 to VD
$786    $5399   UNKNOWN  $5399           ; Unknown 5xxx instruction
$788    $7AFB   ADD      VA, #FB         ; Add 251 to VA
$78A    $AB77   LD       I, $B77         ; Load B77 into I
$78C    $8ABA   UNKNOWN  8ABA            ; Unknown 8xxx instruction
$78E    $0835   SYS      $835            ; System call to 835
$790    $9174   UNKNOWN  $9174           ; Unknown 9xxx instruction
$792    $9326   UNKNOWN  $9326           ; Unknown 9xxx instruction
$794    $9E65   UNKNOWN  $9E65           ; Unknown 9xxx instruction
$796    $DCED   DRW      VC, VE, #D      ; Draw 13-byte sprite at VC, VE
$798    $9977   UNKNOWN  $9977           ; Unknown 9xxx instruction
$79A    $DD36   DRW      VD, V3, #6      ; Draw 6-byte sprite at VD, V3
$79C    $282F   CALL     $82F            ; Call subroutine at 82F
$79E    $4DB3   SNE      VD, #B3         ; Skip if VD != 179
$7A0    $36B4   SE       V6, #B4         ; Skip if V6 == 180
$7A2    $463E   SNE      V6, #3E         ; Skip if V6 != 62
$7A4    $305F   SE       V0, #5F         ; Skip if V0 == 95
$7A6    $0E53   SYS      $E53            ; System call to E53
$7A8    $E04E   UNKNOWN  $E04E           ; Unknown Exxx instruction
$7AA    $F3F0   UNKNOWN  F3F0            ; Unknown Fxxx instruction
$7AC    $928E   UNKNOWN  $928E           ; Unknown 9xxx instruction
$7AE    $B373   JP       V0, $373        ; Jump to V0 + 373
$7B0    $7966   ADD      V9, #66         ; Add 102 to V9
$7B2    $D3F2   DRW      V3, VF, #2      ; Draw 2-byte sprite at V3, VF
$7B4    $E9F8   UNKNOWN  $E9F8           ; Unknown Exxx instruction
$7B6    $3E44   SE       VE, #44         ; Skip if VE == 68
$7B8    $51A0   SE       V1, VA          ; Skip if V1 == VA
$7BA    $29F8   CALL     $9F8            ; Call subroutine at 9F8
$7BC    $E3BD   UNKNOWN  $E3BD           ; Unknown Exxx instruction
$7BE    $B619   JP       V0, $619        ; Jump to V0 + 619
$7C0    $96FB   UNKNOWN  $96FB           ; Unknown 9xxx instruction
$7C2    $CC8E   RND      VC, #8E         ; VC = random & 8E
$7C4    $00A9   SYS      $0A9            ; System call to 0A9
$7C6    $56CA   UNKNOWN  $56CA           ; Unknown 5xxx instruction
$7C8    $9239   UNKNOWN  $9239           ; Unknown 9xxx instruction
$7CA    $B789   JP       V0, $789        ; Jump to V0 + 789
$7CC    $C720   RND      V7, #20         ; V7 = random & 20
$7CE    $28FE   CALL     $8FE            ; Call subroutine at 8FE
$7D0    $5BE8   UNKNOWN  $5BE8           ; Unknown 5xxx instruction
$7D2    $D614   DRW      V6, V1, #4      ; Draw 4-byte sprite at V6, V1
$7D4    $8086   SHR      V0              ; V0 >>= 1, VF = LSB
$7D6    $A364   LD       I, $364         ; Load 364 into I
$7D8    $B11F   JP       V0, $11F        ; Jump to V0 + 11F
$7DA    $C77F   RND      V7, #7F         ; V7 = random & 7F
$7DC    $5F50   SE       VF, V5          ; Skip if VF == V5
$7DE    $1DAC   JP       $DAC            ; Jump to DAC
$7E0    $0C5B   SYS      $C5B            ; System call to C5B
$7E2    $FA93   UNKNOWN  FA93            ; Unknown Fxxx instruction
$7E4    $EFC4   UNKNOWN  $EFC4           ; Unknown Exxx instruction
$7E6    $C3D6   RND      V3, #D6         ; V3 = random & D6
$7E8    $32FD   SE       V2, #FD         ; Skip if V2 == 253
$7EA    $2ECC   CALL     $ECC            ; Call subroutine at ECC
$7EC    $801E   SHL      V0              ; V0 <<= 1, VF = MSB
$7EE    $7E51   ADD      VE, #51         ; Add 81 to VE
$7F0    $6382   LD       V3, #82         ; Load 130 into V3
$7F2    $83C7   SUBN     V3, VC          ; V3 = VC - V3, VF = !borrow
$7F4    $27F2   CALL     $7F2            ; Call subroutine at 7F2
$7F6    $0F79   SYS      $F79            ; System call to F79
$7F8    $F9D0   UNKNOWN  F9D0            ; Unknown Fxxx instruction
$7FA    $EEC5   UNKNOWN  $EEC5           ; Unknown Exxx instruction
$7FC    $BBE3   JP       V0, $BE3        ; Jump to V0 + BE3
$7FE    $7A16   ADD      VA, #16         ; Add 22 to VA
$800    $DBC6   DRW      VB, VC, #6      ; Draw 6-byte sprite at VB, VC
$802    $FF87   UNKNOWN  FF87            ; Unknown Fxxx instruction
$804    $6052   LD       V0, #52         ; Load 82 into V0
$806    $BC3A   JP       V0, $C3A        ; Jump to V0 + C3A
$808    $4C83   SNE      VC, #83         ; Skip if VC != 131
$80A    $FF86   UNKNOWN  FF86            ; Unknown Fxxx instruction
$80C    $51AA   UNKNOWN  $51AA           ; Unknown 5xxx instruction
$80E    $5AC6   UNKNOWN  $5AC6           ; Unknown 5xxx instruction
$810    $046A   SYS      $46A            ; System call to 46A
$812    $8F8E   SHL      VF              ; VF <<= 1, VF = MSB
$814    $1419   JP       $419            ; Jump to 419
$816    $BD86   JP       V0, $D86        ; Jump to V0 + D86
$818    $C6DE   RND      V6, #DE         ; V6 = random & DE
$81A    $A274   LD       I, $274         ; Load 274 into I
$81C    $B0FD   JP       V0, $0FD        ; Jump to V0 + 0FD
$81E    $34C7   SE       V4, #C7         ; Skip if V4 == 199
$820    $C28A   RND      V2, #8A         ; V2 = random & 8A
$822    $CB1F   RND      VB, #1F         ; VB = random & 1F
$824    $D2D5   DRW      V2, VD, #5      ; Draw 5-byte sprite at V2, VD
$826    $9A0B   UNKNOWN  $9A0B           ; Unknown 9xxx instruction
$828    $CF86   RND      VF, #86         ; VF = random & 86
$82A    $7686   ADD      V6, #86         ; Add 134 to V6
$82C    $1349   JP       $349            ; Jump to 349
$82E    $4A4E   SNE      VA, #4E         ; Skip if VA != 78
$830    $DE1C   DRW      VE, V1, #C      ; Draw 12-byte sprite at VE, V1
$832    $4B86   SNE      VB, #86         ; Skip if VB != 134
$834    $6C52   LD       VC, #52         ; Load 82 into VC
$836    $6D44   LD       VD, #44         ; Load 68 into VD
$838    $454B   SNE      V5, #4B         ; Skip if V5 != 75
$83A    $4EE5   SNE      VE, #E5         ; Skip if VE != 229
$83C    $C6B4   RND      V6, #B4         ; V6 = random & B4
$83E    $C23F   RND      V2, #3F         ; V2 = random & 3F
$840    $4CBE   SNE      VC, #BE         ; Skip if VC != 190
$842    $5EAB   UNKNOWN  $5EAB           ; Unknown 5xxx instruction
$844    $7528   ADD      V5, #28         ; Add 40 to V5
$846    $D293   DRW      V2, V9, #3      ; Draw 3-byte sprite at V2, V9
$848    $95AC   UNKNOWN  $95AC           ; Unknown 9xxx instruction
$84A    $FBD1   UNKNOWN  FBD1            ; Unknown Fxxx instruction
$84C    $652A   LD       V5, #2A         ; Load 42 into V5
$84E    $D984   DRW      V9, V8, #4      ; Draw 4-byte sprite at V9, V8
$850    $6C75   LD       VC, #75         ; Load 117 into VC
$852    $77B3   ADD      V7, #B3         ; Add 179 to V7
$854    $2BCB   CALL     $BCB            ; Call subroutine at BCB
$856    $A0BF   LD       I, $0BF         ; Load 0BF into I
$858    $E839   UNKNOWN  $E839           ; Unknown Exxx instruction
$85A    $B824   JP       V0, $824        ; Jump to V0 + 824
$85C    $B71A   JP       V0, $71A        ; Jump to V0 + 71A
$85E    $03EE   SYS      $3EE            ; System call to 3EE
$860    $EB9C   UNKNOWN  $EB9C           ; Unknown Exxx instruction
$862    $3B60   SE       VB, #60         ; Skip if VB == 96
$864    $7A99   ADD      VA, #99         ; Add 153 to VA
$866    $7C7B   ADD      VC, #7B         ; Add 123 to VC
$868    $1BDD   JP       $BDD            ; Jump to BDD
$86A    $68D9   LD       V8, #D9         ; Load 217 into V8
$86C    $5629   UNKNOWN  $5629           ; Unknown 5xxx instruction
$86E    $FE48   UNKNOWN  FE48            ; Unknown Fxxx instruction
$870    $DAF6   DRW      VA, VF, #6      ; Draw 6-byte sprite at VA, VF
$872    $AE85   LD       I, $E85         ; Load E85 into I
$874    $F711   UNKNOWN  F711            ; Unknown Fxxx instruction
$876    $5666   UNKNOWN  $5666           ; Unknown 5xxx instruction
$878    $0DD3   SYS      $DD3            ; System call to DD3
$87A    $E8C3   UNKNOWN  $E8C3           ; Unknown Exxx instruction
$87C    $66BD   LD       V6, #BD         ; Load 189 into V6
$87E    $FB23   UNKNOWN  FB23            ; Unknown Fxxx instruction
$880    $0A11   SYS      $A11            ; System call to A11
$882    $B86D   JP       V0, $86D        ; Jump to V0 + 86D
$884    $9025   UNKNOWN  $9025           ; Unknown 9xxx instruction
$886    $24AA   CALL     $4AA            ; Call subroutine at 4AA
$888    $7E8A   ADD      VE, #8A         ; Add 138 to VE
$88A    $0394   SYS      $394            ; System call to 394
$88C    $B088   JP       V0, $088        ; Jump to V0 + 088
$88E    $8D9C   UNKNOWN  8D9C            ; Unknown 8xxx instruction
$890    $D448   DRW      V4, V4, #8      ; Draw 8-byte sprite at V4, V4
$892    $3676   SE       V6, #76         ; Skip if V6 == 118
$894    $793A   ADD      V9, #3A         ; Add 58 to V9
$896    $F4C7   UNKNOWN  F4C7            ; Unknown Fxxx instruction
$898    $DF3F   DRW      VF, V3, #F      ; Draw 15-byte sprite at VF, V3
$89A    $E96C   UNKNOWN  $E96C           ; Unknown Exxx instruction
$89C    $4140   SNE      V1, #40         ; Skip if V1 != 64
$89E    $04BB   SYS      $4BB            ; System call to 4BB
$8A0    $21F5   CALL     $1F5            ; Call subroutine at 1F5
$8A2    $32D8   SE       V2, #D8         ; Skip if V2 == 216
$8A4    $C791   RND      V7, #91         ; V7 = random & 91
$8A6    $2814   CALL     $814            ; Call subroutine at 814
$8A8    $956E   UNKNOWN  $956E           ; Unknown 9xxx instruction
$8AA    $3BD5   SE       VB, #D5         ; Skip if VB == 213
$8AC    $145B   JP       $45B            ; Jump to 45B
$8AE    $4CB5   SNE      VC, #B5         ; Skip if VC != 181
$8B0    $CF49   RND      VF, #49         ; VF = random & 49
$8B2    $D838   DRW      V8, V3, #8      ; Draw 8-byte sprite at V8, V3
$8B4    $5921   UNKNOWN  $5921           ; Unknown 5xxx instruction
$8B6    $C5F3   RND      V5, #F3         ; V5 = random & F3
$8B8    $B80E   JP       V0, $80E        ; Jump to V0 + 80E
$8BA    $83A3   XOR      V3, VA          ; V3 ^= VA
$8BC    $3D29   SE       VD, #29         ; Skip if VD == 41
$8BE    $93FD   UNKNOWN  $93FD           ; Unknown 9xxx instruction
$8C0    $01CF   SYS      $1CF            ; System call to 1CF
$8C2    $5C66   UNKNOWN  $5C66           ; Unknown 5xxx instruction
$8C4    $37C6   SE       V7, #C6         ; Skip if V7 == 198
$8C6    $1158   JP       $158            ; Jump to 158
$8C8    $E28D   UNKNOWN  $E28D           ; Unknown Exxx instruction
$8CA    $E654   UNKNOWN  $E654           ; Unknown Exxx instruction
$8CC    $48ED   SNE      V8, #ED         ; Skip if V8 != 237
$8CE    $E01B   UNKNOWN  $E01B           ; Unknown Exxx instruction
$8D0    $E557   UNKNOWN  $E557           ; Unknown Exxx instruction
$8D2    $7C0E   ADD      VC, #0E         ; Add 14 to VC
$8D4    $BAC5   JP       V0, $AC5        ; Jump to V0 + AC5
$8D6    $65EA   LD       V5, #EA         ; Load 234 into V5
$8D8    $4781   SNE      V7, #81         ; Skip if V7 != 129
$8DA    $C9B8   RND      V9, #B8         ; V9 = random & B8
$8DC    $6494   LD       V4, #94         ; Load 148 into V4
$8DE    $2D56   CALL     $D56            ; Call subroutine at D56
$8E0    $EAB4   UNKNOWN  $EAB4           ; Unknown Exxx instruction
$8E2    $91A0   SNE      V1, VA          ; Skip if V1 != VA
$8E4    $95E8   UNKNOWN  $95E8           ; Unknown 9xxx instruction
$8E6    $BBE1   JP       V0, $BE1        ; Jump to V0 + BE1
$8E8    $F09C   UNKNOWN  F09C            ; Unknown Fxxx instruction
$8EA    $2B8E   CALL     $B8E            ; Call subroutine at B8E
$8EC    $1ED0   JP       $ED0            ; Jump to ED0
$8EE    $D63B   DRW      V6, V3, #B      ; Draw 11-byte sprite at V6, V3
$8F0    $969A   UNKNOWN  $969A           ; Unknown 9xxx instruction
$8F2    $00A9   SYS      $0A9            ; System call to 0A9
$8F4    $FC41   UNKNOWN  FC41            ; Unknown Fxxx instruction
$8F6    $0FF3   SYS      $FF3            ; System call to FF3
$8F8    $771D   ADD      V7, #1D         ; Add 29 to V7
$8FA    $EDB2   UNKNOWN  $EDB2           ; Unknown Exxx instruction
$8FC    $00AE   SYS      $0AE            ; System call to 0AE
$8FE    $5496   UNKNOWN  $5496           ; Unknown 5xxx instruction
$900    $4CDB   SNE      VC, #DB         ; Skip if VC != 219
$902    $4CC0   SNE      VC, #C0         ; Skip if VC != 192
$904    $6604   LD       V6, #04         ; Load 4 into V6
$906    $6C3A   LD       VC, #3A         ; Load 58 into VC
$908    $6C3E   LD       VC, #3E         ; Load 62 into VC
$90A    $0616   SYS      $616            ; System call to 616
$90C    $571D   UNKNOWN  $571D           ; Unknown 5xxx instruction
$90E    $EED5   UNKNOWN  $EED5           ; Unknown Exxx instruction
$910    $7911   ADD      V9, #11         ; Add 17 to V9
$912    $E52D   UNKNOWN  $E52D           ; Unknown Exxx instruction
$914    $339B   SE       V3, #9B         ; Skip if V3 == 155
$916    $FCC7   UNKNOWN  FCC7            ; Unknown Fxxx instruction
$918    $DA69   DRW      VA, V6, #9      ; Draw 9-byte sprite at VA, V6
$91A    $634D   LD       V3, #4D         ; Load 77 into V3
$91C    $5681   UNKNOWN  $5681           ; Unknown 5xxx instruction
$91E    $F5AA   UNKNOWN  F5AA            ; Unknown Fxxx instruction
$920    $8E01   OR       VE, V0          ; VE |= V0
$922    $0907   SYS      $907            ; System call to 907
$924    $B30F   JP       V0, $30F        ; Jump to V0 + 30F
$926    $98D4   UNKNOWN  $98D4           ; Unknown 9xxx instruction
$928    $CCD0   RND      VC, #D0         ; VC = random & D0
$92A    $72A6   ADD      V2, #A6         ; Add 166 to V2
$92C    $200A   CALL     $00A            ; Call subroutine at 00A
$92E    $E596   UNKNOWN  $E596           ; Unknown Exxx instruction
$930    $9972   UNKNOWN  $9972           ; Unknown 9xxx instruction
$932    $FBDA   UNKNOWN  FBDA            ; Unknown Fxxx instruction
$934    $28C6   CALL     $8C6            ; Call subroutine at 8C6
$936    $9B0A   UNKNOWN  $9B0A           ; Unknown 9xxx instruction
$938    $0964   SYS      $964            ; System call to 964
$93A    $1C95   JP       $C95            ; Jump to C95
$93C    $6233   LD       V2, #33         ; Load 51 into V2
$93E    $E6F6   UNKNOWN  $E6F6           ; Unknown Exxx instruction
$940    $D806   DRW      V8, V0, #6      ; Draw 6-byte sprite at V8, V0
$942    $A969   LD       I, $969         ; Load 969 into I
$944    $6CE1   LD       VC, #E1         ; Load 225 into VC
$946    $6016   LD       V0, #16         ; Load 22 into V0
$948    $9AB7   UNKNOWN  $9AB7           ; Unknown 9xxx instruction
$94A    $C78A   RND      V7, #8A         ; V7 = random & 8A
$94C    $936B   UNKNOWN  $936B           ; Unknown 9xxx instruction
$94E    $FD83   UNKNOWN  FD83            ; Unknown Fxxx instruction
$950    $F6DD   UNKNOWN  F6DD            ; Unknown Fxxx instruction
$952    $46B7   SNE      V6, #B7         ; Skip if V6 != 183
$954    $6109   LD       V1, #09         ; Load 9 into V1
$956    $C044   RND      V0, #44         ; V0 = random & 44
$958    $B554   JP       V0, $554        ; Jump to V0 + 554
$95A    $872A   UNKNOWN  872A            ; Unknown 8xxx instruction
$95C    $E1D9   UNKNOWN  $E1D9           ; Unknown Exxx instruction
$95E    $A616   LD       I, $616         ; Load 616 into I
$960    $1969   JP       $969            ; Jump to 969
$962    $A8CE   LD       I, $8CE         ; Load 8CE into I
$964    $32A6   SE       V2, #A6         ; Skip if V2 == 166
$966    $A676   LD       I, $676         ; Load 676 into I
$968    $97BF   UNKNOWN  $97BF           ; Unknown 9xxx instruction
$96A    $4D94   SNE      VD, #94         ; Skip if VD != 148
$96C    $3FF9   SE       VF, #F9         ; Skip if VF == 249
$96E    $9F8E   UNKNOWN  $9F8E           ; Unknown 9xxx instruction
$970    $AA5B   LD       I, $A5B         ; Load A5B into I
$972    $7BD3   ADD      VB, #D3         ; Add 211 to VB
$974    $8FCF   UNKNOWN  8FCF            ; Unknown 8xxx instruction
$976    $B396   JP       V0, $396        ; Jump to V0 + 396
$978    $69F9   LD       V9, #F9         ; Load 249 into V9
$97A    $B26E   JP       V0, $26E        ; Jump to V0 + 26E
$97C    $C748   RND      V7, #48         ; V7 = random & 48
$97E    $41D0   SNE      V1, #D0         ; Skip if V1 != 208
$980    $6187   LD       V1, #87         ; Load 135 into V1
$982    $00C9   SYS      $0C9            ; System call to 0C9
$984    $2EF3   CALL     $EF3            ; Call subroutine at EF3
$986    $E960   UNKNOWN  $E960           ; Unknown Exxx instruction
$988    $67A9   LD       V7, #A9         ; Load 169 into V7
$98A    $132D   JP       $32D            ; Jump to 32D
$98C    $CC2C   RND      VC, #2C         ; VC = random & 2C
$98E    $143B   JP       $43B            ; Jump to 43B
$990    $9D67   UNKNOWN  $9D67           ; Unknown 9xxx instruction
$992    $0B5F   SYS      $B5F            ; System call to B5F
$994    $935B   UNKNOWN  $935B           ; Unknown 9xxx instruction
$996    $1BEB   JP       $BEB            ; Jump to BEB
$998    $41A1   SNE      V1, #A1         ; Skip if V1 != 161
$99A    $4908   SNE      V9, #08         ; Skip if V9 != 8
$99C    $166C   JP       $66C            ; Jump to 66C
$99E    $3BEA   SE       VB, #EA         ; Skip if VB == 234
$9A0    $2880   CALL     $880            ; Call subroutine at 880
$9A2    $9708   UNKNOWN  $9708           ; Unknown 9xxx instruction
$9A4    $D4AE   DRW      V4, VA, #E      ; Draw 14-byte sprite at V4, VA
$9A6    $BFA3   JP       V0, $FA3        ; Jump to V0 + FA3
$9A8    $28BB   CALL     $8BB            ; Call subroutine at 8BB
$9AA    $8D72   AND      VD, V7          ; VD &= V7
$9AC    $1FDC   JP       $FDC            ; Jump to FDC
$9AE    $F92F   UNKNOWN  F92F            ; Unknown Fxxx instruction
$9B0    $48ED   SNE      V8, #ED         ; Skip if V8 != 237
$9B2    $DA56   DRW      VA, V5, #6      ; Draw 6-byte sprite at VA, V5
$9B4    $6E1A   LD       VE, #1A         ; Load 26 into VE
$9B6    $5A5B   UNKNOWN  $5A5B           ; Unknown 5xxx instruction
$9B8    $B51A   JP       V0, $51A        ; Jump to V0 + 51A
$9BA    $636C   LD       V3, #6C         ; Load 108 into V3
$9BC    $67F4   LD       V7, #F4         ; Load 244 into V7
$9BE    $3875   SE       V8, #75         ; Skip if V8 == 117
$9C0    $3D67   SE       VD, #67         ; Skip if VD == 103
$9C2    $4BB5   SNE      VB, #B5         ; Skip if VB != 181
$9C4    $3622   SE       V6, #22         ; Skip if V6 == 34
$9C6    $E3C4   UNKNOWN  $E3C4           ; Unknown Exxx instruction
$9C8    $E879   UNKNOWN  $E879           ; Unknown Exxx instruction
$9CA    $AC15   LD       I, $C15         ; Load C15 into I
$9CC    $2C32   CALL     $C32            ; Call subroutine at C32
$9CE    $13D8   JP       $3D8            ; Jump to 3D8
$9D0    $A753   LD       I, $753         ; Load 753 into I
$9D2    $B753   JP       V0, $753        ; Jump to V0 + 753
$9D4    $30F8   SE       V0, #F8         ; Skip if V0 == 248
$9D6    $285C   CALL     $85C            ; Call subroutine at 85C
$9D8    $2DBC   CALL     $DBC            ; Call subroutine at DBC
$9DA    $AB25   LD       I, $B25         ; Load B25 into I
$9DC    $5E50   SE       VE, V5          ; Skip if VE == V5
$9DE    $7A6A   ADD      VA, #6A         ; Add 106 to VA
$9E0    $2F2B   CALL     $F2B            ; Call subroutine at F2B
$9E2    $9AF2   UNKNOWN  $9AF2           ; Unknown 9xxx instruction
$9E4    $383E   SE       V8, #3E         ; Skip if V8 == 62
$9E6    $ACE9   LD       I, $CE9         ; Load CE9 into I
$9E8    $ECD9   UNKNOWN  $ECD9           ; Unknown Exxx instruction
$9EA    $C5FB   RND      V5, #FB         ; V5 = random & FB
$9EC    $1800   JP       $800            ; Jump to 800
$9EE    $6074   LD       V0, #74         ; Load 116 into V0
$9F0    $6498   LD       V4, #98         ; Load 152 into V4
$9F2    $B4E8   JP       V0, $4E8        ; Jump to V0 + 4E8
$9F4    $C43B   RND      V4, #3B         ; V4 = random & 3B
$9F6    $A678   LD       I, $678         ; Load 678 into I
$9F8    $EC70   UNKNOWN  $EC70           ; Unknown Exxx instruction
$9FA    $35EA   SE       V5, #EA         ; Skip if V5 == 234
$9FC    $92E2   UNKNOWN  $92E2           ; Unknown 9xxx instruction
$9FE    $36DF   SE       V6, #DF         ; Skip if V6 == 223
$A00    $1479   JP       $479            ; Jump to 479
$A02    $B7F4   JP       V0, $7F4        ; Jump to V0 + 7F4
$A04    $15B1   JP       $5B1            ; Jump to 5B1
$A06    $2EEE   CALL     $EEE            ; Call subroutine at EEE
$A08    $B56D   JP       V0, $56D        ; Jump to V0 + 56D
$A0A    $F81B   UNKNOWN  F81B            ; Unknown Fxxx instruction
$A0C    $64A8   LD       V4, #A8         ; Load 168 into V4
$A0E    $00A0   SYS      $0A0            ; System call to 0A0
$A10    $2235   CALL     $235            ; Call subroutine at 235
$A12    $FFCA   UNKNOWN  FFCA            ; Unknown Fxxx instruction
$A14    $B594   JP       V0, $594        ; Jump to V0 + 594
$A16    $1CBF   JP       $CBF            ; Jump to CBF
$A18    $4F17   SNE      VF, #17         ; Skip if VF != 23
$A1A    $7C33   ADD      VC, #33         ; Add 51 to VC
$A1C    $41C9   SNE      V1, #C9         ; Skip if V1 != 201
$A1E    $BBAE   JP       V0, $BAE        ; Jump to V0 + BAE
$A20    $C521   RND      V5, #21         ; V5 = random & 21
$A22    $63E0   LD       V3, #E0         ; Load 224 into V3
$A24    $75A9   ADD      V5, #A9         ; Add 169 to V5
$A26    $5031   UNKNOWN  $5031           ; Unknown 5xxx instruction
$A28    $CBA1   RND      VB, #A1         ; VB = random & A1
$A2A    $6B9B   LD       VB, #9B         ; Load 155 into VB
$A2C    $6BD0   LD       VB, #D0         ; Load 208 into VB
$A2E    $6723   LD       V7, #23         ; Load 35 into V7
$A30    $A12C   LD       I, $12C         ; Load 12C into I
$A32    $2F46   CALL     $F46            ; Call subroutine at F46
$A34    $FC1C   UNKNOWN  FC1C            ; Unknown Fxxx instruction
$A36    $4425   SNE      V4, #25         ; Skip if V4 != 37
$A38    $7047   ADD      V0, #47         ; Add 71 to V0
$A3A    $24BA   CALL     $4BA            ; Call subroutine at 4BA
$A3C    $419D   SNE      V1, #9D         ; Skip if V1 != 157
$A3E    $55BB   UNKNOWN  $55BB           ; Unknown 5xxx instruction
$A40    $35BB   SE       V5, #BB         ; Skip if V5 == 187
$A42    $212E   CALL     $12E            ; Call subroutine at 12E
$A44    $4BD8   SNE      VB, #D8         ; Skip if VB != 216
$A46    $BA45   JP       V0, $A45        ; Jump to V0 + A45
$A48    $6147   LD       V1, #47         ; Load 71 into V1
$A4A    $C68F   RND      V6, #8F         ; V6 = random & 8F
$A4C    $424F   SNE      V2, #4F         ; Skip if V2 != 79
$A4E    $ED24   UNKNOWN  $ED24           ; Unknown Exxx instruction
$A50    $197B   JP       $97B            ; Jump to 97B
$A52    $7702   ADD      V7, #02         ; Add 2 to V7
$A54    $2162   CALL     $162            ; Call subroutine at 162
$A56    $1287   JP       $287            ; Jump to 287
$A58    $19D3   JP       $9D3            ; Jump to 9D3
$A5A    $EDB0   UNKNOWN  $EDB0           ; Unknown Exxx instruction
$A5C    $ED43   UNKNOWN  $ED43           ; Unknown Exxx instruction
$A5E    $B468   JP       V0, $468        ; Jump to V0 + 468
$A60    $224D   CALL     $24D            ; Call subroutine at 24D
$A62    $6DD1   LD       VD, #D1         ; Load 209 into VD
$A64    $8505   SUB      V5, V0          ; V5 -= V0, VF = !borrow
$A66    $632E   LD       V3, #2E         ; Load 46 into V3
$A68    $6350   LD       V3, #50         ; Load 80 into V3
$A6A    $2924   CALL     $924            ; Call subroutine at 924
$A6C    $99F9   UNKNOWN  $99F9           ; Unknown 9xxx instruction
$A6E    $F5C7   UNKNOWN  F5C7            ; Unknown Fxxx instruction
$A70    $8E1E   SHL      VE              ; VE <<= 1, VF = MSB
$A72    $A91A   LD       I, $91A         ; Load 91A into I
$A74    $5B47   UNKNOWN  $5B47           ; Unknown 5xxx instruction
$A76    $B98F   JP       V0, $98F        ; Jump to V0 + 98F
$A78    $4113   SNE      V1, #13         ; Skip if V1 != 19
$A7A    $51EC   UNKNOWN  $51EC           ; Unknown 5xxx instruction
$A7C    $F133   LD       B, V1           ; Store BCD of V1 at I, I+1, I+2
$A7E    $64A7   LD       V4, #A7         ; Load 167 into V4
$A80    $9E36   UNKNOWN  $9E36           ; Unknown 9xxx instruction
$A82    $CD57   RND      VD, #57         ; VD = random & 57
$A84    $D7E8   DRW      V7, VE, #8      ; Draw 8-byte sprite at V7, VE
$A86    $1BF3   JP       $BF3            ; Jump to BF3
$A88    $7C02   ADD      VC, #02         ; Add 2 to VC
$A8A    $FB23   UNKNOWN  FB23            ; Unknown Fxxx instruction
$A8C    $5E24   UNKNOWN  $5E24           ; Unknown 5xxx instruction
$A8E    $B6AA   JP       V0, $6AA        ; Jump to V0 + 6AA
$A90    $C66C   RND      V6, #6C         ; V6 = random & 6C
$A92    $4071   SNE      V0, #71         ; Skip if V0 != 113
$A94    $4C19   SNE      VC, #19         ; Skip if VC != 25
$A96    $FE96   UNKNOWN  FE96            ; Unknown Fxxx instruction
$A98    $F3DF   UNKNOWN  F3DF            ; Unknown Fxxx instruction
$A9A    $B711   JP       V0, $711        ; Jump to V0 + 711
$A9C    $83CB   UNKNOWN  83CB            ; Unknown 8xxx instruction
$A9E    $FF22   UNKNOWN  FF22            ; Unknown Fxxx instruction
$AA0    $F6B9   UNKNOWN  F6B9            ; Unknown Fxxx instruction
$AA2    $40BC   SNE      V0, #BC         ; Skip if V0 != 188
$AA4    $F503   UNKNOWN  F503            ; Unknown Fxxx instruction
$AA6    $2910   CALL     $910            ; Call subroutine at 910
$AA8    $43F2   SNE      V3, #F2         ; Skip if V3 != 242
$AAA    $25BA   CALL     $5BA            ; Call subroutine at 5BA
$AAC    $0578   SYS      $578            ; System call to 578
$AAE    $D34B   DRW      V3, V4, #B      ; Draw 11-byte sprite at V3, V4
$AB0    $FF09   UNKNOWN  FF09            ; Unknown Fxxx instruction
$AB2    $F6CF   UNKNOWN  F6CF            ; Unknown Fxxx instruction
$AB4    $887E   SHL      V8              ; V8 <<= 1, VF = MSB
$AB6    $7A03   ADD      VA, #03         ; Add 3 to VA
$AB8    $64D6   LD       V4, #D6         ; Load 214 into V4
$ABA    $5FDA   UNKNOWN  $5FDA           ; Unknown 5xxx instruction
$ABC    $CAFA   RND      VA, #FA         ; VA = random & FA
$ABE    $AF25   LD       I, $F25         ; Load F25 into I
$AC0    $0287   SYS      $287            ; System call to 287
$AC2    $78BE   ADD      V8, #BE         ; Add 190 to V8
$AC4    $5D35   UNKNOWN  $5D35           ; Unknown 5xxx instruction
$AC6    $4597   SNE      V5, #97         ; Skip if V5 != 151
$AC8    $289E   CALL     $89E            ; Call subroutine at 89E
$ACA    $81A9   UNKNOWN  81A9            ; Unknown 8xxx instruction
$ACC    $2330   CALL     $330            ; Call subroutine at 330
$ACE    $360D   SE       V6, #0D         ; Skip if V6 == 13
$AD0    $0DC4   SYS      $DC4            ; System call to DC4
$AD2    $7242   ADD      V2, #42         ; Add 66 to V2
$AD4    $C8B9   RND      V8, #B9         ; V8 = random & B9
$AD6    $EC31   UNKNOWN  $EC31           ; Unknown Exxx instruction
$AD8    $F302   UNKNOWN  F302            ; Unknown Fxxx instruction
$ADA    $C568   RND      V5, #68         ; V5 = random & 68
$ADC    $AC8C   LD       I, $C8C         ; Load C8C into I
$ADE    $C858   RND      V8, #58         ; V8 = random & 58
$AE0    $A1CF   LD       I, $1CF         ; Load 1CF into I
$AE2    $730D   ADD      V3, #0D         ; Add 13 to V3
$AE4    $D4B6   DRW      V4, VB, #6      ; Draw 6-byte sprite at V4, VB
$AE6    $F655   LD       [I], V6         ; Store V0-V6 at I
$AE8    $C60D   RND      V6, #0D         ; V6 = random & 0D
$AEA    $FE80   UNKNOWN  FE80            ; Unknown Fxxx instruction
$AEC    $5E45   UNKNOWN  $5E45           ; Unknown 5xxx instruction
$AEE    $2923   CALL     $923            ; Call subroutine at 923
$AF0    $E335   UNKNOWN  $E335           ; Unknown Exxx instruction
$AF2    $4065   SNE      V0, #65         ; Skip if V0 != 101
$AF4    $07EF   SYS      $7EF            ; System call to 7EF
$AF6    $8F49   UNKNOWN  8F49            ; Unknown 8xxx instruction
$AF8    $EC74   UNKNOWN  $EC74           ; Unknown Exxx instruction
$AFA    $CCCD   RND      VC, #CD         ; VC = random & CD
$AFC    $45D7   SNE      V5, #D7         ; Skip if V5 != 215
$AFE    $86BC   UNKNOWN  86BC            ; Unknown 8xxx instruction
$B00    $0545   SYS      $545            ; System call to 545
$B02    $7A74   ADD      VA, #74         ; Add 116 to VA
$B04    $7763   ADD      V7, #63         ; Add 99 to V7
$B06    $208B   CALL     $08B            ; Call subroutine at 08B
$B08    $D13D   DRW      V1, V3, #D      ; Draw 13-byte sprite at V1, V3
$B0A    $9557   UNKNOWN  $9557           ; Unknown 9xxx instruction
$B0C    $C27B   RND      V2, #7B         ; V2 = random & 7B
$B0E    $67BC   LD       V7, #BC         ; Load 188 into V7
$B10    $5D9E   UNKNOWN  $5D9E           ; Unknown 5xxx instruction
$B12    $C696   RND      V6, #96         ; V6 = random & 96
$B14    $AACD   LD       I, $ACD         ; Load ACD into I
$B16    $A097   LD       I, $097         ; Load 097 into I
$B18    $9324   UNKNOWN  $9324           ; Unknown 9xxx instruction
$B1A    $B8E7   JP       V0, $8E7        ; Jump to V0 + 8E7
$B1C    $DA45   DRW      VA, V4, #5      ; Draw 5-byte sprite at VA, V4
$B1E    $9722   UNKNOWN  $9722           ; Unknown 9xxx instruction
$B20    $C098   RND      V0, #98         ; V0 = random & 98
$B22    $E8FC   UNKNOWN  $E8FC           ; Unknown Exxx instruction
$B24    $F4CE   UNKNOWN  F4CE            ; Unknown Fxxx instruction
$B26    $89A2   AND      V9, VA          ; V9 &= VA
$B28    $460E   SNE      V6, #0E         ; Skip if V6 != 14
$B2A    $7BBB   ADD      VB, #BB         ; Add 187 to VB
$B2C    $6ABE   LD       VA, #BE         ; Load 190 into VA
$B2E    $2472   CALL     $472            ; Call subroutine at 472
$B30    $7D7D   ADD      VD, #7D         ; Add 125 to VD
$B32    $3102   SE       V1, #02         ; Skip if V1 == 2
$B34    $4E15   SNE      VE, #15         ; Skip if VE != 21
$B36    $31B6   SE       V1, #B6         ; Skip if V1 == 182
$B38    $EF30   UNKNOWN  $EF30           ; Unknown Exxx instruction
$B3A    $924F   UNKNOWN  $924F           ; Unknown 9xxx instruction
$B3C    $48B1   SNE      V8, #B1         ; Skip if V8 != 177
$B3E    $9ECD   UNKNOWN  $9ECD           ; Unknown 9xxx instruction
$B40    $0DF6   SYS      $DF6            ; System call to DF6
$B42    $99C8   UNKNOWN  $99C8           ; Unknown 9xxx instruction
$B44    $59EE   UNKNOWN  $59EE           ; Unknown 5xxx instruction
$B46    $2138   CALL     $138            ; Call subroutine at 138
$B48    $9DEA   UNKNOWN  $9DEA           ; Unknown 9xxx instruction
$B4A    $8AC5   SUB      VA, VC          ; VA -= VC, VF = !borrow
$B4C    $FA0D   UNKNOWN  FA0D            ; Unknown Fxxx instruction
$B4E    $DDE0   DRW      VD, VE, #0      ; Draw 0-byte sprite at VD, VE
$B50    $A369   LD       I, $369         ; Load 369 into I
$B52    $E9A3   UNKNOWN  $E9A3           ; Unknown Exxx instruction
$B54    $E0DD   UNKNOWN  $E0DD           ; Unknown Exxx instruction
$B56    $59EE   UNKNOWN  $59EE           ; Unknown 5xxx instruction
$B58    $305B   SE       V0, #5B         ; Skip if V0 == 91
$B5A    $A4B0   LD       I, $4B0         ; Load 4B0 into I
$B5C    $2C39   CALL     $C39            ; Call subroutine at C39
$B5E    $33E8   SE       V3, #E8         ; Skip if V3 == 232
$B60    $AAFA   LD       I, $AFA         ; Load AFA into I
$B62    $2E64   CALL     $E64            ; Call subroutine at E64
$B64    $1013   JP       $013            ; Jump to 013
$B66    $6D9D   LD       VD, #9D         ; Load 157 into VD
$B68    $8C53   XOR      VC, V5          ; VC ^= V5
$B6A    $D3AB   DRW      V3, VA, #B      ; Draw 11-byte sprite at V3, VA
$B6C    $B314   JP       V0, $314        ; Jump to V0 + 314
$B6E    $DB5C   DRW      VB, V5, #C      ; Draw 12-byte sprite at VB, V5
$B70    $2A7D   CALL     $A7D            ; Call subroutine at A7D
$B72    $75EA   ADD      V5, #EA         ; Add 234 to V5
$B74    $3980   SE       V9, #80         ; Skip if V9 == 128
$B76    $527C   UNKNOWN  $527C           ; Unknown 5xxx instruction
$B78    $E806   UNKNOWN  $E806           ; Unknown Exxx instruction
$B7A    $6858   LD       V8, #58         ; Load 88 into V8
$B7C    $8FCA   UNKNOWN  8FCA            ; Unknown 8xxx instruction
$B7E    $D3DA   DRW      V3, VD, #A      ; Draw 10-byte sprite at V3, VD
$B80    $F434   UNKNOWN  F434            ; Unknown Fxxx instruction
$B82    $2D31   CALL     $D31            ; Call subroutine at D31
$B84    $7228   ADD      V2, #28         ; Add 40 to V2
$B86    $3124   SE       V1, #24         ; Skip if V1 == 36
$B88    $25D2   CALL     $5D2            ; Call subroutine at 5D2
$B8A    $A9E2   LD       I, $9E2         ; Load 9E2 into I
$B8C    $F249   UNKNOWN  F249            ; Unknown Fxxx instruction
$B8E    $6AF3   LD       VA, #F3         ; Load 243 into VA
$B90    $CE26   RND      VE, #26         ; VE = random & 26
$B92    $2279   CALL     $279            ; Call subroutine at 279
$B94    $E519   UNKNOWN  $E519           ; Unknown Exxx instruction
$B96    $C659   RND      V6, #59         ; V6 = random & 59
$B98    $4919   SNE      V9, #19         ; Skip if V9 != 25
$B9A    $4F96   SNE      VF, #96         ; Skip if VF != 150
$B9C    $F16A   UNKNOWN  F16A            ; Unknown Fxxx instruction
$B9E    $9439   UNKNOWN  $9439           ; Unknown 9xxx instruction
$BA0    $B4E6   JP       V0, $4E6        ; Jump to V0 + 4E6
$BA2    $4AE5   SNE      VA, #E5         ; Skip if VA != 229
$BA4    $ABA3   LD       I, $BA3         ; Load BA3 into I
$BA6    $09B4   SYS      $9B4            ; System call to 9B4
$BA8    $0E56   SYS      $E56            ; System call to E56
$BAA    $ED01   UNKNOWN  $ED01           ; Unknown Exxx instruction
$BAC    $4667   SNE      V6, #67         ; Skip if V6 != 103
$BAE    $F305   UNKNOWN  F305            ; Unknown Fxxx instruction
$BB0    $63E7   LD       V3, #E7         ; Load 231 into V3
$BB2    $8C72   AND      VC, V7          ; VC &= V7
$BB4    $C0E6   RND      V0, #E6         ; V0 = random & E6
$BB6    $59D3   UNKNOWN  $59D3           ; Unknown 5xxx instruction
$BB8    $9BC4   UNKNOWN  $9BC4           ; Unknown 9xxx instruction
$BBA    $394B   SE       V9, #4B         ; Skip if V9 == 75
$BBC    $C868   RND      V8, #68         ; V8 = random & 68
$BBE    $731C   ADD      V3, #1C         ; Add 28 to V3
$BC0    $4CE5   SNE      VC, #E5         ; Skip if VC != 229
$BC2    $6E68   LD       VE, #68         ; Load 104 into VE
$BC4    $8E37   SUBN     VE, V3          ; VE = V3 - VE, VF = !borrow
$BC6    $E56D   UNKNOWN  $E56D           ; Unknown Exxx instruction
$BC8    $5CE6   UNKNOWN  $5CE6           ; Unknown 5xxx instruction
$BCA    $C36D   RND      V3, #6D         ; V3 = random & 6D
$BCC    $80CE   SHL      V0              ; V0 <<= 1, VF = MSB
$BCE    $C9BE   RND      V9, #BE         ; V9 = random & BE
$BD0    $7B66   ADD      VB, #66         ; Add 102 to VB
$BD2    $7B62   ADD      VB, #62         ; Add 98 to VB
$BD4    $8466   SHR      V4              ; V4 >>= 1, VF = LSB
$BD6    $863C   UNKNOWN  863C            ; Unknown 8xxx instruction
$BD8    $7CDA   ADD      VC, #DA         ; Add 218 to VC
$BDA    $E9AB   UNKNOWN  $E9AB           ; Unknown Exxx instruction
$BDC    $7510   ADD      V5, #10         ; Add 16 to V5
$BDE    $EBF7   UNKNOWN  $EBF7           ; Unknown Exxx instruction
$BE0    $FF13   UNKNOWN  FF13            ; Unknown Fxxx instruction
$BE2    $2417   CALL     $417            ; Call subroutine at 417
$BE4    $A335   LD       I, $335         ; Load 335 into I
$BE6    $4A73   SNE      VA, #73         ; Skip if VA != 115
$BE8    $3A73   SE       VA, #73         ; Skip if VA == 115
$BEA    $E177   UNKNOWN  $E177           ; Unknown Exxx instruction
$BEC    $459D   SNE      V5, #9D         ; Skip if V5 != 157
$BEE    $F5AF   UNKNOWN  F5AF            ; Unknown Fxxx instruction
$BF0    $05AB   SYS      $5AB            ; System call to 5AB
$BF2    $7893   ADD      V8, #93         ; Add 147 to V8
$BF4    $0E43   SYS      $E43            ; System call to E43
$BF6    $8594   ADD      V5, V9          ; V5 += V9, VF = carry
$BF8    $611E   LD       V1, #1E         ; Load 30 into V1
$BFA    $ED36   UNKNOWN  $ED36           ; Unknown Exxx instruction
$BFC    $943B   UNKNOWN  $943B           ; Unknown 9xxx instruction
$BFE    $DE29   DRW      VE, V2, #9      ; Draw 9-byte sprite at VE, V2
$C00    $BC35   JP       V0, $C35        ; Jump to V0 + C35
$C02    $19C6   JP       $9C6            ; Jump to 9C6
$C04    $9B2E   UNKNOWN  $9B2E           ; Unknown 9xxx instruction
$C06    $C827   RND      V8, #27         ; V8 = random & 27
$C08    $5268   UNKNOWN  $5268           ; Unknown 5xxx instruction
$C0A    $B8A4   JP       V0, $8A4        ; Jump to V0 + 8A4
$C0C    $6C24   LD       VC, #24         ; Load 36 into VC
$C0E    $5FE4   UNKNOWN  $5FE4           ; Unknown 5xxx instruction
$C10    $8846   SHR      V8              ; V8 >>= 1, VF = LSB
$C12    $A5D7   LD       I, $5D7         ; Load 5D7 into I
$C14    $CF6B   RND      VF, #6B         ; VF = random & 6B
$C16    $14CD   JP       $4CD            ; Jump to 4CD
$C18    $78F7   ADD      V8, #F7         ; Add 247 to V8
$C1A    $7966   ADD      V9, #66         ; Add 102 to V9
$C1C    $2F6F   CALL     $F6F            ; Call subroutine at F6F
$C1E    $C2B8   RND      V2, #B8         ; V2 = random & B8
$C20    $1592   JP       $592            ; Jump to 592
$C22    $4CB9   SNE      VC, #B9         ; Skip if VC != 185
$C24    $C3CE   RND      V3, #CE         ; V3 = random & CE
$C26    $B03D   JP       V0, $03D        ; Jump to V0 + 03D
$C28    $F66B   UNKNOWN  F66B            ; Unknown Fxxx instruction
$C2A    $350B   SE       V5, #0B         ; Skip if V5 == 11
$C2C    $5CE0   SE       VC, VE          ; Skip if VC == VE
$C2E    $E1DE   UNKNOWN  $E1DE           ; Unknown Exxx instruction
$C30    $305F   SE       V0, #5F         ; Skip if V0 == 95
$C32    $462E   SNE      V6, #2E         ; Skip if V6 != 46
$C34    $A1AF   LD       I, $1AF         ; Load 1AF into I
$C36    $4AE9   SNE      VA, #E9         ; Skip if VA != 233
$C38    $3319   SE       V3, #19         ; Skip if V3 == 25
$C3A    $4C8B   SNE      VC, #8B         ; Skip if VC != 139
$C3C    $5C0E   UNKNOWN  $5C0E           ; Unknown 5xxx instruction
$C3E    $BBDC   JP       V0, $BDC        ; Jump to V0 + BDC
$C40    $AFF0   LD       I, $FF0         ; Load FF0 into I
$C42    $17B2   JP       $7B2            ; Jump to 7B2
$C44    $86A4   ADD      V6, VA          ; V6 += VA, VF = carry
$C46    $2C12   CALL     $C12            ; Call subroutine at C12
$C48    $03AF   SYS      $3AF            ; System call to 3AF
$C4A    $6CCC   LD       VC, #CC         ; Load 204 into VC
$C4C    $E14C   UNKNOWN  $E14C           ; Unknown Exxx instruction
$C4E    $74C6   ADD      V4, #C6         ; Add 198 to V4
$C50    $3CF2   SE       VC, #F2         ; Skip if VC == 242
$C52    $88C0   LD       V8, VC          ; V8 = VC
$C54    $AAD1   LD       I, $AD1         ; Load AD1 into I
$C56    $B186   JP       V0, $186        ; Jump to V0 + 186
$C58    $9F0E   UNKNOWN  $9F0E           ; Unknown 9xxx instruction
$C5A    $DCF6   DRW      VC, VF, #6      ; Draw 6-byte sprite at VC, VF
$C5C    $4F89   SNE      VF, #89         ; Skip if VF != 137
$C5E    $C3F7   RND      V3, #F7         ; V3 = random & F7
$C60    $AE60   LD       I, $E60         ; Load E60 into I
$C62    $5372   UNKNOWN  $5372           ; Unknown 5xxx instruction
$C64    $E727   UNKNOWN  $E727           ; Unknown Exxx instruction
$C66    $2A7E   CALL     $A7E            ; Call subroutine at A7E
$C68    $6E20   LD       VE, #20         ; Load 32 into VE
$C6A    $5397   UNKNOWN  $5397           ; Unknown 5xxx instruction
$C6C    $6826   LD       V8, #26         ; Load 38 into V8
$C6E    $F81E   ADD      I, V8           ; I += V8
$C70    $2265   CALL     $265            ; Call subroutine at 265
$C72    $B2DC   JP       V0, $2DC        ; Jump to V0 + 2DC
$C74    $F5EF   UNKNOWN  F5EF            ; Unknown Fxxx instruction
$C76    $C62A   RND      V6, #2A         ; V6 = random & 2A
$C78    $35F4   SE       V5, #F4         ; Skip if V5 == 244
$C7A    $9782   UNKNOWN  $9782           ; Unknown 9xxx instruction
$C7C    $C2A1   RND      V2, #A1         ; V2 = random & A1
$C7E    $83A0   LD       V3, VA          ; V3 = VA
$C80    $FC16   UNKNOWN  FC16            ; Unknown Fxxx instruction
$C82    $229C   CALL     $29C            ; Call subroutine at 29C
$C84    $484B   SNE      V8, #4B         ; Skip if V8 != 75
$C86    $E483   UNKNOWN  $E483           ; Unknown Exxx instruction
$C88    $44D4   SNE      V4, #D4         ; Skip if V4 != 212
$C8A    $35CB   SE       V5, #CB         ; Skip if V5 == 203
$C8C    $2657   CALL     $657            ; Call subroutine at 657
$C8E    $2078   CALL     $078            ; Call subroutine at 078
$C90    $8E71   OR       VE, V7          ; VE |= V7
$C92    $BAB6   JP       V0, $AB6        ; Jump to V0 + AB6
$C94    $1EE0   JP       $EE0            ; Jump to EE0
$C96    $F612   UNKNOWN  F612            ; Unknown Fxxx instruction
$C98    $AF87   LD       I, $F87         ; Load F87 into I
$C9A    $BD8F   JP       V0, $D8F        ; Jump to V0 + D8F
$C9C    $272C   CALL     $72C            ; Call subroutine at 72C
$C9E    $F76D   UNKNOWN  F76D            ; Unknown Fxxx instruction
$CA0    $4041   SNE      V0, #41         ; Skip if V0 != 65
$CA2    $82F1   OR       V2, VF          ; V2 |= VF
$CA4    $B182   JP       V0, $182        ; Jump to V0 + 182
$CA6    $B346   JP       V0, $346        ; Jump to V0 + 346
$CA8    $2DF5   CALL     $DF5            ; Call subroutine at DF5
$CAA    $ED61   UNKNOWN  $ED61           ; Unknown Exxx instruction
$CAC    $A0E5   LD       I, $0E5         ; Load 0E5 into I
$CAE    $CDE6   RND      VD, #E6         ; VD = random & E6
$CB0    $E0C8   UNKNOWN  $E0C8           ; Unknown Exxx instruction
$CB2    $0E05   SYS      $E05            ; System call to E05
$CB4    $6EE1   LD       VE, #E1         ; Load 225 into VE
$CB6    $FAD6   UNKNOWN  FAD6            ; Unknown Fxxx instruction
$CB8    $CC26   RND      VC, #26         ; VC = random & 26
$CBA    $777C   ADD      V7, #7C         ; Add 124 to V7
$CBC    $6596   LD       V5, #96         ; Load 150 into V5
$CBE    $DBD4   DRW      VB, VD, #4      ; Draw 4-byte sprite at VB, VD
$CC0    $A4CB   LD       I, $4CB         ; Load 4CB into I
$CC2    $9C9B   UNKNOWN  $9C9B           ; Unknown 9xxx instruction
$CC4    $6FC0   LD       VF, #C0         ; Load 192 into VF
$CC6    $27F7   CALL     $7F7            ; Call subroutine at 7F7
$CC8    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$CCA    $181E   JP       $81E            ; Jump to 81E
$CCC    $E3CB   UNKNOWN  $E3CB           ; Unknown Exxx instruction
$CCE    $6033   LD       V0, #33         ; Load 51 into V0
$CD0    $C0D9   RND      V0, #D9         ; V0 = random & D9
$CD2    $9FF5   UNKNOWN  $9FF5           ; Unknown 9xxx instruction
$CD4    $DB13   DRW      VB, V1, #3      ; Draw 3-byte sprite at VB, V1
$CD6    $28E5   CALL     $8E5            ; Call subroutine at 8E5
$CD8    $CBF4   RND      VB, #F4         ; VB = random & F4
$CDA    $DA8C   DRW      VA, V8, #C      ; Draw 12-byte sprite at VA, V8
$CDC    $C699   RND      V6, #99         ; V6 = random & 99
$CDE    $5481   UNKNOWN  $5481           ; Unknown 5xxx instruction
$CE0    $A4BA   LD       I, $4BA         ; Load 4BA into I
$CE2    $E72E   UNKNOWN  $E72E           ; Unknown Exxx instruction
$CE4    $8D2D   UNKNOWN  8D2D            ; Unknown 8xxx instruction
$CE6    $D245   DRW      V2, V4, #5      ; Draw 5-byte sprite at V2, V4
$CE8    $897E   SHL      V9              ; V9 <<= 1, VF = MSB
$CEA    $A139   LD       I, $139         ; Load 139 into I
$CEC    $6A30   LD       VA, #30         ; Load 48 into VA
$CEE    $454B   SNE      V5, #4B         ; Skip if V5 != 75
$CF0    $ABB2   LD       I, $BB2         ; Load BB2 into I
$CF2    $2B8F   CALL     $B8F            ; Call subroutine at B8F
$CF4    $9D1D   UNKNOWN  $9D1D           ; Unknown 9xxx instruction
$CF6    $71AB   ADD      V1, #AB         ; Add 171 to V1
$CF8    $6ACE   LD       VA, #CE         ; Load 206 into VA
$CFA    $C9FD   RND      V9, #FD         ; V9 = random & FD
$CFC    $5ABF   UNKNOWN  $5ABF           ; Unknown 5xxx instruction
$CFE    $4BB1   SNE      VB, #B1         ; Skip if VB != 177
$D00    $2CF5   CALL     $CF5            ; Call subroutine at CF5
$D02    $7450   ADD      V4, #50         ; Add 80 to V4
$D04    $AB76   LD       I, $B76         ; Load B76 into I
$D06    $D04E   DRW      V0, V4, #E      ; Draw 14-byte sprite at V0, V4
$D08    $524C   UNKNOWN  $524C           ; Unknown 5xxx instruction
$D0A    $0A1A   SYS      $A1A            ; System call to A1A
$D0C    $FDEE   UNKNOWN  FDEE            ; Unknown Fxxx instruction
$D0E    $E8A3   UNKNOWN  $E8A3           ; Unknown Exxx instruction
$D10    $26BA   CALL     $6BA            ; Call subroutine at 6BA
$D12    $6A5E   LD       VA, #5E         ; Load 94 into VA
$D14    $8572   AND      V5, V7          ; V5 &= V7
$D16    $D325   DRW      V3, V2, #5      ; Draw 5-byte sprite at V3, V2
$D18    $5943   UNKNOWN  $5943           ; Unknown 5xxx instruction
$D1A    $0EDC   SYS      $EDC            ; System call to EDC
$D1C    $FF85   UNKNOWN  FF85            ; Unknown Fxxx instruction
$D1E    $0734   SYS      $734            ; System call to 734
$D20    $8CBD   UNKNOWN  8CBD            ; Unknown 8xxx instruction
$D22    $9E8B   UNKNOWN  $9E8B           ; Unknown 9xxx instruction
$D24    $3852   SE       V8, #52         ; Skip if V8 == 82
$D26    $ED7C   UNKNOWN  $ED7C           ; Unknown Exxx instruction
$D28    $1B68   JP       $B68            ; Jump to B68
$D2A    $6AF8   LD       VA, #F8         ; Load 248 into VA
$D2C    $0B24   SYS      $B24            ; System call to B24
$D2E    $CB11   RND      VB, #11         ; VB = random & 11
$D30    $1BE2   JP       $BE2            ; Jump to BE2
$D32    $93A6   UNKNOWN  $93A6           ; Unknown 9xxx instruction
$D34    $4A52   SNE      VA, #52         ; Skip if VA != 82
$D36    $E967   UNKNOWN  $E967           ; Unknown Exxx instruction
$D38    $BC14   JP       V0, $C14        ; Jump to V0 + C14
$D3A    $F3F6   UNKNOWN  F3F6            ; Unknown Fxxx instruction
$D3C    $04C3   SYS      $4C3            ; System call to 4C3
$D3E    $6CE4   LD       VC, #E4         ; Load 228 into VC
$D40    $D1FE   DRW      V1, VF, #E      ; Draw 14-byte sprite at V1, VF
$D42    $D2C5   DRW      V2, VC, #5      ; Draw 5-byte sprite at V2, VC
$D44    $4222   SNE      V2, #22         ; Skip if V2 != 34
$D46    $365E   SE       V6, #5E         ; Skip if V6 == 94
$D48    $5CB1   UNKNOWN  $5CB1           ; Unknown 5xxx instruction
$D4A    $4DB6   SNE      VD, #B6         ; Skip if VD != 182
$D4C    $FC12   UNKNOWN  FC12            ; Unknown Fxxx instruction
$D4E    $72C9   ADD      V2, #C9         ; Add 201 to V2
$D50    $5166   UNKNOWN  $5166           ; Unknown 5xxx instruction
$D52    $014C   SYS      $14C            ; System call to 14C
$D54    $08F3   SYS      $8F3            ; System call to 8F3
$D56    $FB69   UNKNOWN  FB69            ; Unknown Fxxx instruction
$D58    $FABF   UNKNOWN  FABF            ; Unknown Fxxx instruction
$D5A    $6B46   LD       VB, #46         ; Load 70 into VB
$D5C    $8CB5   SUB      VC, VB          ; VC -= VB, VF = !borrow
$D5E    $5BD4   UNKNOWN  $5BD4           ; Unknown 5xxx instruction
$D60    $4468   SNE      V4, #68         ; Skip if V4 != 104
$D62    $9658   UNKNOWN  $9658           ; Unknown 9xxx instruction
$D64    $9892   UNKNOWN  $9892           ; Unknown 9xxx instruction
$D66    $7E7B   ADD      VE, #7B         ; Add 123 to VE
$D68    $4D48   SNE      VD, #48         ; Skip if VD != 72
$D6A    $F342   UNKNOWN  F342            ; Unknown Fxxx instruction
$D6C    $BE56   JP       V0, $E56        ; Jump to V0 + E56
$D6E    $88CE   SHL      V8              ; V8 <<= 1, VF = MSB
$D70    $85B2   AND      V5, VB          ; V5 &= VB
$D72    $0E09   SYS      $E09            ; System call to E09
$D74    $2C06   CALL     $C06            ; Call subroutine at C06
$D76    $8596   SHR      V5              ; V5 >>= 1, VF = LSB
$D78    $D9A6   DRW      V9, VA, #6      ; Draw 6-byte sprite at V9, VA
$D7A    $573E   UNKNOWN  $573E           ; Unknown 5xxx instruction
$D7C    $C587   RND      V5, #87         ; V5 = random & 87
$D7E    $254C   CALL     $54C            ; Call subroutine at 54C
$D80    $B5A8   JP       V0, $5A8        ; Jump to V0 + 5A8
$D82    $567F   UNKNOWN  $567F           ; Unknown 5xxx instruction
$D84    $7DA1   ADD      VD, #A1         ; Add 161 to VD
$D86    $5936   UNKNOWN  $5936           ; Unknown 5xxx instruction
$D88    $B503   JP       V0, $503        ; Jump to V0 + 503
$D8A    $669E   LD       V6, #9E         ; Load 158 into V6
$D8C    $FB55   LD       [I], VB         ; Store V0-VB at I
$D8E    $D7A4   DRW      V7, VA, #4      ; Draw 4-byte sprite at V7, VA
$D90    $9909   UNKNOWN  $9909           ; Unknown 9xxx instruction
$D92    $C3E3   RND      V3, #E3         ; V3 = random & E3
$D94    $ADCB   LD       I, $DCB         ; Load DCB into I
$D96    $D610   DRW      V6, V1, #0      ; Draw 0-byte sprite at V6, V1
$D98    $576E   UNKNOWN  $576E           ; Unknown 5xxx instruction
$D9A    $C592   RND      V5, #92         ; V5 = random & 92
$D9C    $4E49   SNE      VE, #49         ; Skip if VE != 73
$D9E    $A91C   LD       I, $91C         ; Load 91C into I
$DA0    $FFE5   UNKNOWN  FFE5            ; Unknown Fxxx instruction
$DA2    $18D1   JP       $8D1            ; Jump to 8D1
$DA4    $7B4D   ADD      VB, #4D         ; Add 77 to VB
$DA6    $00F3   SYS      $0F3            ; System call to 0F3
$DA8    $D5F3   DRW      V5, VF, #3      ; Draw 3-byte sprite at V5, VF
$DAA    $CBCC   RND      VB, #CC         ; VB = random & CC
$DAC    $F6A9   UNKNOWN  F6A9            ; Unknown Fxxx instruction
$DAE    $E1B2   UNKNOWN  $E1B2           ; Unknown Exxx instruction
$DB0    $1D00   JP       $D00            ; Jump to D00
$DB2    $AE5E   LD       I, $E5E         ; Load E5E into I
$DB4    $8E01   OR       VE, V0          ; VE |= V0
$DB6    $7C92   ADD      VC, #92         ; Add 146 to VC
$DB8    $2719   CALL     $719            ; Call subroutine at 719
$DBA    $8633   XOR      V6, V3          ; V6 ^= V3
$DBC    $ED6E   UNKNOWN  $ED6E           ; Unknown Exxx instruction
$DBE    $1742   JP       $742            ; Jump to 742
$DC0    $88E7   SUBN     V8, VE          ; V8 = VE - V8, VF = !borrow
$DC2    $EA8D   UNKNOWN  $EA8D           ; Unknown Exxx instruction
$DC4    $6569   LD       V5, #69         ; Load 105 into V5
$DC6    $0548   SYS      $548            ; System call to 548
$DC8    $BD85   JP       V0, $D85        ; Jump to V0 + D85
$DCA    $A23A   LD       I, $23A         ; Load 23A into I
$DCC    $C29C   RND      V2, #9C         ; V2 = random & 9C
$DCE    $2D81   CALL     $D81            ; Call subroutine at D81
$DD0    $493F   SNE      V9, #3F         ; Skip if V9 != 63
$DD2    $F620   UNKNOWN  F620            ; Unknown Fxxx instruction
$DD4    $0EB5   SYS      $EB5            ; System call to EB5
$DD6    $7EAE   ADD      VE, #AE         ; Add 174 to VE
$DD8    $E5C5   UNKNOWN  $E5C5           ; Unknown Exxx instruction
$DDA    $C5F8   RND      V5, #F8         ; V5 = random & F8
$DDC    $5853   UNKNOWN  $5853           ; Unknown 5xxx instruction
$DDE    $DEE5   DRW      VE, VE, #5      ; Draw 5-byte sprite at VE, VE
$DE0    $4A73   SNE      VA, #73         ; Skip if VA != 115
$DE2    $B4B0   JP       V0, $4B0        ; Jump to V0 + 4B0
$DE4    $0B71   SYS      $B71            ; System call to B71
$DE6    $5246   UNKNOWN  $5246           ; Unknown 5xxx instruction
$DE8    $7E91   ADD      VE, #91         ; Add 145 to VE
$DEA    $B470   JP       V0, $470        ; Jump to V0 + 470
$DEC    $1654   JP       $654            ; Jump to 654
$DEE    $9514   UNKNOWN  $9514           ; Unknown 9xxx instruction
$DF0    $653B   LD       V5, #3B         ; Load 59 into V5
$DF2    $BBBF   JP       V0, $BBF        ; Jump to V0 + BBF
$DF4    $7DB6   ADD      VD, #B6         ; Add 182 to VD
$DF6    $2214   CALL     $214            ; Call subroutine at 214
$DF8    $0739   SYS      $739            ; System call to 739
$DFA    $93CA   UNKNOWN  $93CA           ; Unknown 9xxx instruction
$DFC    $165C   JP       $65C            ; Jump to 65C
$DFE    $A729   LD       I, $729         ; Load 729 into I
$E00    $915B   UNKNOWN  $915B           ; Unknown 9xxx instruction
$E02    $FD36   UNKNOWN  FD36            ; Unknown Fxxx instruction
$E04    $B3A4   JP       V0, $3A4        ; Jump to V0 + 3A4
$E06    $A0A3   LD       I, $0A3         ; Load 0A3 into I
$E08    $6F46   LD       VF, #46         ; Load 70 into VF
$E0A    $6D2E   LD       VD, #2E         ; Load 46 into VD
$E0C    $BC90   JP       V0, $C90        ; Jump to V0 + C90
$E0E    $C00C   RND      V0, #0C         ; V0 = random & 0C
$E10    $834A   UNKNOWN  834A            ; Unknown 8xxx instruction
$E12    $9783   UNKNOWN  $9783           ; Unknown 9xxx instruction
$E14    $D4C6   DRW      V4, VC, #6      ; Draw 6-byte sprite at V4, VC
$E16    $6ADD   LD       VA, #DD         ; Load 221 into VA
$E18    $CC60   RND      VC, #60         ; VC = random & 60
$E1A    $1B04   JP       $B04            ; Jump to B04
$E1C    $6A25   LD       VA, #25         ; Load 37 into VA
$E1E    $6295   LD       V2, #95         ; Load 149 into V2
$E20    $9C22   UNKNOWN  $9C22           ; Unknown 9xxx instruction
$E22    $1B49   JP       $B49            ; Jump to B49
$E24    $9328   UNKNOWN  $9328           ; Unknown 9xxx instruction
$E26    $E821   UNKNOWN  $E821           ; Unknown Exxx instruction
$E28    $DC25   DRW      VC, V2, #5      ; Draw 5-byte sprite at VC, V2
$E2A    $ED7B   UNKNOWN  $ED7B           ; Unknown Exxx instruction
$E2C    $B082   JP       V0, $082        ; Jump to V0 + 082
$E2E    $6A6E   LD       VA, #6E         ; Load 110 into VA
$E30    $9FBF   UNKNOWN  $9FBF           ; Unknown 9xxx instruction
$E32    $C0F9   RND      V0, #F9         ; V0 = random & F9
$E34    $6518   LD       V5, #18         ; Load 24 into V5
$E36    $1D67   JP       $D67            ; Jump to D67
$E38    $1EA6   JP       $EA6            ; Jump to EA6
$E3A    $5B8F   UNKNOWN  $5B8F           ; Unknown 5xxx instruction
$E3C    $5AE0   SE       VA, VE          ; Skip if VA == VE
$E3E    $B334   JP       V0, $334        ; Jump to V0 + 334
$E40    $2E8B   CALL     $E8B            ; Call subroutine at E8B
$E42    $4C72   SNE      VC, #72         ; Skip if VC != 114
$E44    $D157   DRW      V1, V5, #7      ; Draw 7-byte sprite at V1, V5
$E46    $E482   UNKNOWN  $E482           ; Unknown Exxx instruction
$E48    $EAB8   UNKNOWN  $EAB8           ; Unknown Exxx instruction
$E4A    $8D0E   SHL      VD              ; VD <<= 1, VF = MSB
$E4C    $781E   ADD      V8, #1E         ; Add 30 to V8
$E4E    $8D43   XOR      VD, V4          ; VD ^= V4
$E50    $3B94   SE       VB, #94         ; Skip if VB == 148
$E52    $7FEA   ADD      VF, #EA         ; Add 234 to VF
$E54    $FF63   UNKNOWN  FF63            ; Unknown Fxxx instruction
$E56    $7009   ADD      V0, #09         ; Add 9 to V0
$E58    $CF6F   RND      VF, #6F         ; VF = random & 6F
$E5A    $F064   UNKNOWN  F064            ; Unknown Fxxx instruction
$E5C    $E0D2   UNKNOWN  $E0D2           ; Unknown Exxx instruction
$E5E    $8640   LD       V6, V4          ; V6 = V4
$E60    $9623   UNKNOWN  $9623           ; Unknown 9xxx instruction
$E62    $A0AE   LD       I, $0AE         ; Load 0AE into I
$E64    $2DF9   CALL     $DF9            ; Call subroutine at DF9
$E66    $73AD   ADD      V3, #AD         ; Add 173 to V3
$E68    $CE14   RND      VE, #14         ; VE = random & 14
$E6A    $DDDC   DRW      VD, VD, #C      ; Draw 12-byte sprite at VD, VD
$E6C    $533A   UNKNOWN  $533A           ; Unknown 5xxx instruction
$E6E    $01D4   SYS      $1D4            ; System call to 1D4
$E70    $A01F   LD       I, $01F         ; Load 01F into I
$E72    $4F59   SNE      VF, #59         ; Skip if VF != 89
$E74    $DCDC   DRW      VC, VD, #C      ; Draw 12-byte sprite at VC, VD
$E76    $0BFD   SYS      $BFD            ; System call to BFD
$E78    $0A46   SYS      $A46            ; System call to A46
$E7A    $342C   SE       V4, #2C         ; Skip if V4 == 44
$E7C    $92A2   UNKNOWN  $92A2           ; Unknown 9xxx instruction
$E7E    $F6E5   UNKNOWN  F6E5            ; Unknown Fxxx instruction
$E80    $2947   CALL     $947            ; Call subroutine at 947
$E82    $5048   UNKNOWN  $5048           ; Unknown 5xxx instruction
$E84    $30A5   SE       V0, #A5         ; Skip if V0 == 165
$E86    $0F35   SYS      $F35            ; System call to F35
$E88    $87B6   SHR      V7              ; V7 >>= 1, VF = LSB
$E8A    $2472   CALL     $472            ; Call subroutine at 472
$E8C    $D2B0   DRW      V2, VB, #0      ; Draw 0-byte sprite at V2, VB
$E8E    $E3B9   UNKNOWN  $E3B9           ; Unknown Exxx instruction
$E90    $4147   SNE      V1, #47         ; Skip if V1 != 71
$E92    $EDA1   SKNP     VD              ; Skip if key VD not pressed
$E94    $965B   UNKNOWN  $965B           ; Unknown 9xxx instruction
$E96    $7D60   ADD      VD, #60         ; Add 96 to VD
$E98    $8162   AND      V1, V6          ; V1 &= V6
$E9A    $99FA   UNKNOWN  $99FA           ; Unknown 9xxx instruction
$E9C    $EFA2   UNKNOWN  $EFA2           ; Unknown Exxx instruction
$E9E    $A18D   LD       I, $18D         ; Load 18D into I
$EA0    $4599   SNE      V5, #99         ; Skip if V5 != 153
$EA2    $A65C   LD       I, $65C         ; Load 65C into I
$EA4    $53C4   UNKNOWN  $53C4           ; Unknown 5xxx instruction
$EA6    $7FFC   ADD      VF, #FC         ; Add 252 to VF
$EA8    $E50E   UNKNOWN  $E50E           ; Unknown Exxx instruction
$EAA    $C479   RND      V4, #79         ; V4 = random & 79
$EAC    $E894   UNKNOWN  $E894           ; Unknown Exxx instruction
$EAE    $BFFC   JP       V0, $FFC        ; Jump to V0 + FFC
$EB0    $390B   SE       V9, #0B         ; Skip if V9 == 11
$EB2    $55E9   UNKNOWN  $55E9           ; Unknown 5xxx instruction
$EB4    $2C34   CALL     $C34            ; Call subroutine at C34
$EB6    $9675   UNKNOWN  $9675           ; Unknown 9xxx instruction
$EB8    $D419   DRW      V4, V1, #9      ; Draw 9-byte sprite at V4, V1
$EBA    $3CEB   SE       VC, #EB         ; Skip if VC == 235
$EBC    $3926   SE       V9, #26         ; Skip if V9 == 38
$EBE    $8698   UNKNOWN  8698            ; Unknown 8xxx instruction
$EC0    $1F73   JP       $F73            ; Jump to F73
$EC2    $0CBD   SYS      $CBD            ; System call to CBD
$EC4    $062B   SYS      $62B            ; System call to 62B
$EC6    $9439   UNKNOWN  $9439           ; Unknown 9xxx instruction
$EC8    $2549   CALL     $549            ; Call subroutine at 549
$ECA    $98A8   UNKNOWN  $98A8           ; Unknown 9xxx instruction
$ECC    $1A60   JP       $A60            ; Jump to A60
$ECE    $863A   UNKNOWN  863A            ; Unknown 8xxx instruction
$ED0    $25AD   CALL     $5AD            ; Call subroutine at 5AD
$ED2    $5B4D   UNKNOWN  $5B4D           ; Unknown 5xxx instruction
$ED4    $DF05   DRW      VF, V0, #5      ; Draw 5-byte sprite at VF, V0
$ED6    $A29A   LD       I, $29A         ; Load 29A into I
$ED8    $B77B   JP       V0, $77B        ; Jump to V0 + 77B
$EDA    $1A86   JP       $A86            ; Jump to A86
$EDC    $4B99   SNE      VB, #99         ; Skip if VB != 153
$EDE    $0E18   SYS      $E18            ; System call to E18
$EE0    $1E01   JP       $E01            ; Jump to E01
$EE2    $DC8B   DRW      VC, V8, #B      ; Draw 11-byte sprite at VC, V8
$EE4    $8FC6   SHR      VF              ; VF >>= 1, VF = LSB
$EE6    $B8EF   JP       V0, $8EF        ; Jump to V0 + 8EF
$EE8    $76B7   ADD      V6, #B7         ; Add 183 to V6
$EEA    $491C   SNE      V9, #1C         ; Skip if V9 != 28
$EEC    $B9C1   JP       V0, $9C1        ; Jump to V0 + 9C1
$EEE    $6172   LD       V1, #72         ; Load 114 into V1
$EF0    $BD8E   JP       V0, $D8E        ; Jump to V0 + D8E
$EF2    $96EB   UNKNOWN  $96EB           ; Unknown 9xxx instruction
$EF4    $3F2B   SE       VF, #2B         ; Skip if VF == 43
$EF6    $6759   LD       V7, #59         ; Load 89 into V7
$EF8    $D2D5   DRW      V2, VD, #5      ; Draw 5-byte sprite at V2, VD
$EFA    $0EE3   SYS      $EE3            ; System call to EE3
$EFC    $6CDA   LD       VC, #DA         ; Load 218 into VC
$EFE    $9C3B   UNKNOWN  $9C3B           ; Unknown 9xxx instruction
$F00    $2D47   CALL     $D47            ; Call subroutine at D47
$F02    $8709   UNKNOWN  8709            ; Unknown 8xxx instruction
$F04    $5E3B   UNKNOWN  $5E3B           ; Unknown 5xxx instruction
$F06    $794C   ADD      V9, #4C         ; Add 76 to V9
$F08    $89F8   UNKNOWN  89F8            ; Unknown 8xxx instruction
$F0A    $CAF7   RND      VA, #F7         ; VA = random & F7
$F0C    $09D1   SYS      $9D1            ; System call to 9D1
$F0E    $DBFC   DRW      VB, VF, #C      ; Draw 12-byte sprite at VB, VF
$F10    $7F95   ADD      VF, #95         ; Add 149 to VF
$F12    $8CE1   OR       VC, VE          ; VC |= VE
$F14    $25FD   CALL     $5FD            ; Call subroutine at 5FD
$F16    $A290   LD       I, $290         ; Load 290 into I
$F18    $404A   SNE      V0, #4A         ; Skip if V0 != 74
$F1A    $ACF1   LD       I, $CF1         ; Load CF1 into I
$F1C    $993A   UNKNOWN  $993A           ; Unknown 9xxx instruction
$F1E    $CBE3   RND      VB, #E3         ; VB = random & E3
$F20    $DFAA   DRW      VF, VA, #A      ; Draw 10-byte sprite at VF, VA
$F22    $92B6   UNKNOWN  $92B6           ; Unknown 9xxx instruction
$F24    $E515   UNKNOWN  $E515           ; Unknown Exxx instruction
$F26    $F758   UNKNOWN  F758            ; Unknown Fxxx instruction
$F28    $1EF2   JP       $EF2            ; Jump to EF2
$F2A    $6A8A   LD       VA, #8A         ; Load 138 into VA
$F2C    $ABA2   LD       I, $BA2         ; Load BA2 into I
$F2E    $A4E7   LD       I, $4E7         ; Load 4E7 into I
$F30    $9359   UNKNOWN  $9359           ; Unknown 9xxx instruction
$F32    $5611   UNKNOWN  $5611           ; Unknown 5xxx instruction
$F34    $AC07   LD       I, $C07         ; Load C07 into I
$F36    $9B0C   UNKNOWN  $9B0C           ; Unknown 9xxx instruction
$F38    $8507   SUBN     V5, V0          ; V5 = V0 - V5, VF = !borrow
$F3A    $80E3   XOR      V0, VE          ; V0 ^= VE
$F3C    $09F4   SYS      $9F4            ; System call to 9F4
$F3E    $84C4   ADD      V4, VC          ; V4 += VC, VF = carry
$F40    $739E   ADD      V3, #9E         ; Add 158 to V3
$F42    $B75B   JP       V0, $75B        ; Jump to V0 + 75B
$F44    $1803   JP       $803            ; Jump to 803
$F46    $96C7   UNKNOWN  $96C7           ; Unknown 9xxx instruction
$F48    $D9EC   DRW      V9, VE, #C      ; Draw 12-byte sprite at V9, VE
$F4A    $966E   UNKNOWN  $966E           ; Unknown 9xxx instruction
$F4C    $D871   DRW      V8, V7, #1      ; Draw 1-byte sprite at V8, V7
$F4E    $DD8B   DRW      VD, V8, #B      ; Draw 11-byte sprite at VD, V8
$F50    $036C   SYS      $36C            ; System call to 36C
$F52    $BF80   JP       V0, $F80        ; Jump to V0 + F80
$F54    $3330   SE       V3, #30         ; Skip if V3 == 48
$F56    $1D71   JP       $D71            ; Jump to D71
$F58    $4D91   SNE      VD, #91         ; Skip if VD != 145
$F5A    $1E3F   JP       $E3F            ; Jump to E3F
$F5C    $9E08   UNKNOWN  $9E08           ; Unknown 9xxx instruction
$F5E    $86EB   UNKNOWN  86EB            ; Unknown 8xxx instruction
$F60    $1798   JP       $798            ; Jump to 798
$F62    $851A   UNKNOWN  851A            ; Unknown 8xxx instruction
$F64    $D885   DRW      V8, V8, #5      ; Draw 5-byte sprite at V8, V8
$F66    $2853   CALL     $853            ; Call subroutine at 853
$F68    $2A4B   CALL     $A4B            ; Call subroutine at A4B
$F6A    $61A9   LD       V1, #A9         ; Load 169 into V1
$F6C    $2721   CALL     $721            ; Call subroutine at 721
$F6E    $3F3B   SE       VF, #3B         ; Skip if VF == 59
$F70    $C79E   RND      V7, #9E         ; V7 = random & 9E
$F72    $1151   JP       $151            ; Jump to 151
$F74    $A0BC   LD       I, $0BC         ; Load 0BC into I
$F76    $7333   ADD      V3, #33         ; Add 51 to V3
$F78    $A199   LD       I, $199         ; Load 199 into I
$F7A    $9458   UNKNOWN  $9458           ; Unknown 9xxx instruction
$F7C    $5F22   UNKNOWN  $5F22           ; Unknown 5xxx instruction
$F7E    $8261   OR       V2, V6          ; V2 |= V6
$F80    $CEDE   RND      VE, #DE         ; VE = random & DE
$F82    $6738   LD       V7, #38         ; Load 56 into V7
$F84    $82CC   UNKNOWN  82CC            ; Unknown 8xxx instruction
$F86    $ED99   UNKNOWN  $ED99           ; Unknown Exxx instruction
$F88    $0F56   SYS      $F56            ; System call to F56
$F8A    $AAD6   LD       I, $AD6         ; Load AD6 into I
$F8C    $5707   UNKNOWN  $5707           ; Unknown 5xxx instruction
$F8E    $6604   LD       V6, #04         ; Load 4 into V6
$F90    $5961   UNKNOWN  $5961           ; Unknown 5xxx instruction
$F92    $A91A   LD       I, $91A         ; Load 91A into I
$F94    $59FB   UNKNOWN  $59FB           ; Unknown 5xxx instruction
$F96    $A5BE   LD       I, $5BE         ; Load 5BE into I
$F98    $5060   SE       V0, V6          ; Skip if V0 == V6
$F9A    $B951   JP       V0, $951        ; Jump to V0 + 951
$F9C    $B84A   JP       V0, $84A        ; Jump to V0 + 84A
$F9E    $DCCA   DRW      VC, VC, #A      ; Draw 10-byte sprite at VC, VC
$FA0    $7583   ADD      V5, #83         ; Add 131 to V5
$FA2    $252E   CALL     $52E            ; Call subroutine at 52E
$FA4    $470F   SNE      V7, #0F         ; Skip if V7 != 15
$FA6    $21BB   CALL     $1BB            ; Call subroutine at 1BB
$FA8    $F764   UNKNOWN  F764            ; Unknown Fxxx instruction
$FAA    $D09C   DRW      V0, V9, #C      ; Draw 12-byte sprite at V0, V9
$FAC    $5C58   UNKNOWN  $5C58           ; Unknown 5xxx instruction
$FAE    $DCBF   DRW      VC, VB, #F      ; Draw 15-byte sprite at VC, VB
$FB0    $66FE   LD       V6, #FE         ; Load 254 into V6
$FB2    $01BE   SYS      $1BE            ; System call to 1BE
$FB4    $6C86   LD       VC, #86         ; Load 134 into VC
$FB6    $564E   UNKNOWN  $564E           ; Unknown 5xxx instruction
$FB8    $82FC   UNKNOWN  82FC            ; Unknown 8xxx instruction
$FBA    $F805   UNKNOWN  F805            ; Unknown Fxxx instruction
$FBC    $CABD   RND      VA, #BD         ; VA = random & BD
$FBE    $A65D   LD       I, $65D         ; Load 65D into I
$FC0    $0C61   SYS      $C61            ; System call to C61
$FC2    $A92A   LD       I, $92A         ; Load 92A into I
$FC4    $1C30   JP       $C30            ; Jump to C30
$FC6    $BF06   JP       V0, $F06        ; Jump to V0 + F06
$FC8    $34AD   SE       V4, #AD         ; Skip if V4 == 173
$FCA    $66D5   LD       V6, #D5         ; Load 213 into V6
$FCC    $6FC3   LD       VF, #C3         ; Load 195 into VF
$FCE    $B9E8   JP       V0, $9E8        ; Jump to V0 + 9E8
$FD0    $D2DA   DRW      V2, VD, #A      ; Draw 10-byte sprite at V2, VD
$FD2    $BF8A   JP       V0, $F8A        ; Jump to V0 + F8A
$FD4    $DC9E   DRW      VC, V9, #E      ; Draw 14-byte sprite at VC, V9
$FD6    $5901   UNKNOWN  $5901           ; Unknown 5xxx instruction
$FD8    $1FF8   JP       $FF8            ; Jump to FF8
$FDA    $55BA   UNKNOWN  $55BA           ; Unknown 5xxx instruction
$FDC    $5819   UNKNOWN  $5819           ; Unknown 5xxx instruction
$FDE    $FE2E   UNKNOWN  FE2E            ; Unknown Fxxx instruction
$FE0    $74F8   ADD      V4, #F8         ; Add 248 to V4
$FE2    $D56B   DRW      V5, V6, #B      ; Draw 11-byte sprite at V5, V6
$FE4    $52D6   UNKNOWN  $52D6           ; Unknown 5xxx instruction
$FE6    $41D3   SNE      V1, #D3         ; Skip if V1 != 211
$FE8    $F7B7   UNKNOWN  F7B7            ; Unknown Fxxx instruction
$FEA    $BB59   JP       V0, $B59        ; Jump to V0 + B59
$FEC    $1380   JP       $380            ; Jump to 380
$FEE    $6140   LD       V1, #40         ; Load 64 into V1
$FF0    $079D   SYS      $79D            ; System call to 79D
$FF2    $A280   LD       I, $280         ; Load 280 into I
$FF4    $57B6   UNKNOWN  $57B6           ; Unknown 5xxx instruction
$FF6    $6608   LD       V6, #08         ; Load 8 into V6
$FF8    $5935   UNKNOWN  $5935           ; Unknown 5xxx instruction
$FFA    $1904   JP       $904            ; Jump to 904
$FFC    $494E   SNE      V9, #4E         ; Skip if V9 != 78
$FFE    $2C53   CALL     $C53            ; Call subroutine at C53

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 464 (25.9%)
  LD      : 258 (14.4%)
  JP      : 199 (11.1%)
  ADD     : 130 ( 7.3%)
  RND     : 122 ( 6.8%)
  SNE     : 120 ( 6.7%)
  SE      : 117 ( 6.5%)
  CALL    : 112 ( 6.2%)
  DRW     : 111 ( 6.2%)
  SYS     : 104 ( 5.8%)
  SHL     :  10 ( 0.6%)
  OR      :   9 ( 0.5%)
  SHR     :   9 ( 0.5%)
  SUBN    :   8 ( 0.4%)
  XOR     :   7 ( 0.4%)
  AND     :   6 ( 0.3%)
  SUB     :   5 ( 0.3%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 388 (21.7%)
Arithmetic Operations: 165 (9.2%)
