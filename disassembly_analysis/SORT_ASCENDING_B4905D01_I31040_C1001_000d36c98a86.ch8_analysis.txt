
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B4905D01_I31040_C1001_000d36c98a86.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 4905
Instance: 31040
Direction: ascending
Final Array: [0, 1, 6, 158, 171, 183, 219, 229]
Operations: R:0 W:1 C:68 S:8

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 107
Sort Array References:
  $200: LD I, $2ED ; Load 2ED into I
  $208: LD I, $487 ; Load 487 into I
  $210: LD I, $225 ; Load 225 into I
  $22A: LD I, $D8B ; Load D8B into I
  $27C: LD I, $5F1 ; Load 5F1 into I
  $2AC: LD I, $84C ; Load 84C into I
  $2B8: LD I, $A75 ; Load A75 into I
  $2D2: LD I, $0A5 ; Load 0A5 into I
  $2EA: LD I, $EDC ; Load EDC into I
  $304: LD I, $BB7 ; Load BB7 into I
  $314: LD I, $D0A ; Load D0A into I
  $338: LD I, $932 ; Load 932 into I
  $33A: LD I, $99E ; Load 99E into I
  $352: LD I, $8F9 ; Load 8F9 into I
  $364: LD I, $E0A ; Load E0A into I
  $37E: LD I, $BB7 ; Load BB7 into I
  $380: LD I, $DEB ; Load DEB into I
  $384: LD I, $C46 ; Load C46 into I
  $3A0: LD I, $77F ; Load 77F into I
  $3A6: LD I, $9F5 ; Load 9F5 into I
  $3BC: LD I, $646 ; Load 646 into I
  $41A: LD I, $8E2 ; Load 8E2 into I
  $41C: LD I, $474 ; Load 474 into I
  $458: LD I, $53C ; Load 53C into I
  $45E: LD [I], V8 ; Store V0-V8 at I
  $496: LD I, $750 ; Load 750 into I
  $4B6: LD I, $095 ; Load 095 into I
  $4BE: LD I, $9C9 ; Load 9C9 into I
  $4DA: LD I, $48B ; Load 48B into I
  $4F0: LD I, $407 ; Load 407 into I
  $502: LD I, $C3D ; Load C3D into I
  $532: LD I, $950 ; Load 950 into I
  $572: LD I, $B75 ; Load B75 into I
  $574: LD I, $E9B ; Load E9B into I
  $57C: LD I, $A2F ; Load A2F into I
  $58E: LD I, $04B ; Load 04B into I
  $5BC: LD I, $EA7 ; Load EA7 into I
  $5CC: LD I, $9D9 ; Load 9D9 into I
  $602: LD I, $89C ; Load 89C into I
  $630: LD I, $32B ; Load 32B into I
  $63C: LD I, $395 ; Load 395 into I
  $674: LD I, $950 ; Load 950 into I
  $694: LD I, $CBF ; Load CBF into I
  $6A2: LD I, $DCF ; Load DCF into I
  $6FE: LD I, $F9E ; Load F9E into I
  $706: LD I, $D2E ; Load D2E into I
  $736: LD I, $D25 ; Load D25 into I
  $738: LD I, $CC8 ; Load CC8 into I
  $73C: LD I, $F93 ; Load F93 into I
  $740: LD I, $4A3 ; Load 4A3 into I
  $798: LD I, $1C0 ; Load 1C0 into I
  $7B0: LD I, $99F ; Load 99F into I
  $804: LD I, $15F ; Load 15F into I
  $806: LD [I], VA ; Store V0-VA at I
  $81E: LD I, $557 ; Load 557 into I
  $850: LD I, $F88 ; Load F88 into I
  $88E: LD I, $89E ; Load 89E into I
  $894: LD I, $FF9 ; Load FF9 into I
  $8DC: LD I, $C8C ; Load C8C into I
  $8E4: LD I, $5AF ; Load 5AF into I
  $91A: LD I, $877 ; Load 877 into I
  $92A: LD I, $EB6 ; Load EB6 into I
  $932: LD I, $8B8 ; Load 8B8 into I
  $984: LD I, $7EE ; Load 7EE into I
  $9A2: LD I, $A65 ; Load A65 into I
  $9AA: LD I, $A09 ; Load A09 into I
  $9B4: LD I, $BE6 ; Load BE6 into I
  $9D0: LD I, $AE3 ; Load AE3 into I
  $A14: LD I, $3CB ; Load 3CB into I
  $A22: LD I, $70D ; Load 70D into I
  $A28: LD I, $88A ; Load 88A into I
  $A3A: LD I, $68A ; Load 68A into I
  $A6E: LD I, $CC0 ; Load CC0 into I
  $A7C: LD I, $133 ; Load 133 into I
  $A90: LD I, $297 ; Load 297 into I
  $AA0: LD I, $CF7 ; Load CF7 into I
  $ACC: LD I, $658 ; Load 658 into I
  $ADE: LD I, $4B0 ; Load 4B0 into I
  $AE8: LD I, $821 ; Load 821 into I
  $B70: LD I, $895 ; Load 895 into I
  $B7E: LD I, $E1D ; Load E1D into I
  $B94: LD I, $0A3 ; Load 0A3 into I
  $BC2: LD I, $CCA ; Load CCA into I
  $BFE: LD I, $748 ; Load 748 into I
  $C06: LD I, $320 ; Load 320 into I
  $C6A: LD I, $6E2 ; Load 6E2 into I
  $C9C: LD I, $D39 ; Load D39 into I
  $D08: LD I, $B20 ; Load B20 into I
  $D54: LD I, $1C2 ; Load 1C2 into I
  $D80: LD I, $385 ; Load 385 into I
  $DBA: LD I, $572 ; Load 572 into I
  $DC0: LD I, $6F0 ; Load 6F0 into I
  $DF2: LD I, $390 ; Load 390 into I
  $DFC: LD I, $3F1 ; Load 3F1 into I
  $E16: LD I, $9B1 ; Load 9B1 into I
  $E3A: LD I, $8DF ; Load 8DF into I
  $E8E: LD I, $DD1 ; Load DD1 into I
  $EBA: LD I, $26E ; Load 26E into I
  $EBE: LD I, $462 ; Load 462 into I
  $EDA: LD I, $B0B ; Load B0B into I
  $F04: LD I, $5E4 ; Load 5E4 into I
  $F0E: LD I, $7EC ; Load 7EC into I
  $F8A: LD I, $6AF ; Load 6AF into I
  $FC8: LD I, $AD3 ; Load AD3 into I
  $FD8: LD I, $C78 ; Load C78 into I
  $FE8: LD I, $0B1 ; Load 0B1 into I
  $FF2: LD I, $5D1 ; Load 5D1 into I

CONTROL FLOW ANALYSIS:
Jumps: 218
Calls: 120
Branches: 241
Loops: 129
Loop Structures:
  $28C -> $126 (backward jump)
  $2FA -> $047 (backward jump)
  $356 -> $21F (backward jump)
  $38E -> $2C5 (backward jump)
  $3A8 -> $1AC (backward jump)
  $3E4 -> $123 (backward jump)
  $3F6 -> $26A (backward jump)
  $408 -> $246 (backward jump)
  $414 -> $1BA (backward jump)
  $472 -> $329 (backward jump)
  $4E4 -> $0F4 (backward jump)
  $4F4 -> $34E (backward jump)
  $512 -> $09A (backward jump)
  $53C -> $052 (backward jump)
  $5D2 -> $146 (backward jump)
  $5DE -> $19C (backward jump)
  $5EA -> $56C (backward jump)
  $5F0 -> $05E (backward jump)
  $61E -> $333 (backward jump)
  $6F0 -> $539 (backward jump)
  $70C -> $355 (backward jump)
  $756 -> $39F (backward jump)
  $760 -> $3CD (backward jump)
  $780 -> $2CA (backward jump)
  $796 -> $1F5 (backward jump)
  $7B2 -> $355 (backward jump)
  $7E4 -> $0E8 (backward jump)
  $800 -> $162 (backward jump)
  $816 -> $513 (backward jump)
  $81C -> $57B (backward jump)
  $83C -> $505 (backward jump)
  $84A -> $2D1 (backward jump)
  $85A -> $74E (backward jump)
  $870 -> $19E (backward jump)
  $87E -> $0B2 (backward jump)
  $8AC -> $3CC (backward jump)
  $8C4 -> $05E (backward jump)
  $8D2 -> $640 (backward jump)
  $8E2 -> $7E3 (backward jump)
  $900 -> $8A8 (backward jump)
  $906 -> $349 (backward jump)
  $908 -> $3BE (backward jump)
  $90C -> $692 (backward jump)
  $93C -> $836 (backward jump)
  $940 -> $875 (backward jump)
  $952 -> $366 (backward jump)
  $95E -> $689 (backward jump)
  $968 -> $62C (backward jump)
  $9B0 -> $65D (backward jump)
  $A0E -> $05B (backward jump)
  $A2C -> $80A (backward jump)
  $A48 -> $52A (backward jump)
  $A5E -> $531 (backward jump)
  $A6A -> $036 (backward jump)
  $A94 -> $0DB (backward jump)
  $AA2 -> $4AC (backward jump)
  $AB8 -> $640 (backward jump)
  $ABC -> $143 (backward jump)
  $AE4 -> $49B (backward jump)
  $B04 -> $964 (backward jump)
  $B14 -> $3FA (backward jump)
  $B2C -> $3EA (backward jump)
  $B44 -> $744 (backward jump)
  $B4E -> $714 (backward jump)
  $B56 -> $25D (backward jump)
  $B5C -> $3FE (backward jump)
  $B68 -> $A66 (backward jump)
  $B6A -> $052 (backward jump)
  $BA4 -> $94E (backward jump)
  $BD8 -> $AEA (backward jump)
  $BE2 -> $3E8 (backward jump)
  $C38 -> $1F6 (backward jump)
  $C46 -> $A18 (backward jump)
  $C54 -> $2C4 (backward jump)
  $C72 -> $24B (backward jump)
  $C82 -> $9EE (backward jump)
  $C86 -> $11E (backward jump)
  $C8A -> $67D (backward jump)
  $C8C -> $5E1 (backward jump)
  $C9A -> $20C (backward jump)
  $CB8 -> $3DB (backward jump)
  $CF2 -> $297 (backward jump)
  $D18 -> $302 (backward jump)
  $D1C -> $299 (backward jump)
  $D46 -> $CB3 (backward jump)
  $D4C -> $B84 (backward jump)
  $D68 -> $A15 (backward jump)
  $D96 -> $478 (backward jump)
  $D9A -> $60A (backward jump)
  $D9E -> $D68 (backward jump)
  $DB2 -> $69C (backward jump)
  $DD6 -> $B23 (backward jump)
  $DFA -> $5CE (backward jump)
  $E0A -> $924 (backward jump)
  $E12 -> $21A (backward jump)
  $E2E -> $32D (backward jump)
  $E48 -> $DBA (backward jump)
  $E4C -> $6D4 (backward jump)
  $E62 -> $7BE (backward jump)
  $E78 -> $DA1 (backward jump)
  $E84 -> $95C (backward jump)
  $E86 -> $A5F (backward jump)
  $E96 -> $AA9 (backward jump)
  $EB4 -> $12F (backward jump)
  $EBC -> $824 (backward jump)
  $EC6 -> $8F8 (backward jump)
  $EDE -> $080 (backward jump)
  $EEA -> $1D4 (backward jump)
  $EF8 -> $889 (backward jump)
  $EFA -> $250 (backward jump)
  $EFE -> $033 (backward jump)
  $F06 -> $70C (backward jump)
  $F1E -> $076 (backward jump)
  $F3A -> $31B (backward jump)
  $F44 -> $BF6 (backward jump)
  $F46 -> $65E (backward jump)
  $F4C -> $299 (backward jump)
  $F5A -> $98D (backward jump)
  $F66 -> $577 (backward jump)
  $F6E -> $40B (backward jump)
  $FA0 -> $85F (backward jump)
  $FA6 -> $77E (backward jump)
  $FCC -> $212 (backward jump)
  $FD0 -> $E7B (backward jump)
  $FD2 -> $997 (backward jump)
  $FD6 -> $9B8 (backward jump)
  $FDC -> $A2B (backward jump)
  $FDE -> $1C4 (backward jump)
  $FF4 -> $4C8 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $A2ED   LD       I, $2ED         ; Load 2ED into I
$202    $78B3   ADD      V8, #B3         ; Add 179 to V8
$204    $8CF5   SUB      VC, VF          ; VC -= VF, VF = !borrow
$206    $6808   LD       V8, #08         ; Load 8 into V8
$208    $A487   LD       I, $487         ; Load 487 into I
$20A    $C136   RND      V1, #36         ; V1 = random & 36
$20C    $3E0A   SE       VE, #0A         ; Skip if VE == 10
$20E    $B377   JP       V0, $377        ; Jump to V0 + 377
$210    $A225   LD       I, $225         ; Load 225 into I
$212    $DABA   DRW      VA, VB, #A      ; Draw 10-byte sprite at VA, VB
$214    $2579   CALL     $579            ; Call subroutine at 579
$216    $F616   UNKNOWN  F616            ; Unknown Fxxx instruction
$218    $1235   JP       $235            ; Jump to 235
$21A    $63C2   LD       V3, #C2         ; Load 194 into V3
$21C    $E246   UNKNOWN  $E246           ; Unknown Exxx instruction
$21E    $CA47   RND      VA, #47         ; VA = random & 47
$220    $043F   SYS      $43F            ; System call to 43F
$222    $B5E4   JP       V0, $5E4        ; Jump to V0 + 5E4
$224    $74AB   ADD      V4, #AB         ; Add 171 to V4
$226    $9051   UNKNOWN  $9051           ; Unknown 9xxx instruction
$228    $4245   SNE      V2, #45         ; Skip if V2 != 69
$22A    $AD8B   LD       I, $D8B         ; Load D8B into I
$22C    $2165   CALL     $165            ; Call subroutine at 165
$22E    $123C   JP       $23C            ; Jump to 23C
$230    $9DFE   UNKNOWN  $9DFE           ; Unknown 9xxx instruction
$232    $2A39   CALL     $A39            ; Call subroutine at A39
$234    $47C8   SNE      V7, #C8         ; Skip if V7 != 200
$236    $2268   CALL     $268            ; Call subroutine at 268
$238    $2DEB   CALL     $DEB            ; Call subroutine at DEB
$23A    $CE28   RND      VE, #28         ; VE = random & 28
$23C    $3177   SE       V1, #77         ; Skip if V1 == 119
$23E    $77EA   ADD      V7, #EA         ; Add 234 to V7
$240    $0001   SYS      $001            ; System call to 001
$242    $06BE   SYS      $6BE            ; System call to 6BE
$244    $539D   UNKNOWN  $539D           ; Unknown 5xxx instruction
$246    $5070   SE       V0, V7          ; Skip if V0 == V7
$248    $CC26   RND      VC, #26         ; VC = random & 26
$24A    $5E10   SE       VE, V1          ; Skip if VE == V1
$24C    $243B   CALL     $43B            ; Call subroutine at 43B
$24E    $242B   CALL     $42B            ; Call subroutine at 42B
$250    $9293   UNKNOWN  $9293           ; Unknown 9xxx instruction
$252    $F127   UNKNOWN  F127            ; Unknown Fxxx instruction
$254    $6575   LD       V5, #75         ; Load 117 into V5
$256    $33B0   SE       V3, #B0         ; Skip if V3 == 176
$258    $7CA3   ADD      VC, #A3         ; Add 163 to VC
$25A    $1F4A   JP       $F4A            ; Jump to F4A
$25C    $7EA9   ADD      VE, #A9         ; Add 169 to VE
$25E    $31D3   SE       V1, #D3         ; Skip if V1 == 211
$260    $52CB   UNKNOWN  $52CB           ; Unknown 5xxx instruction
$262    $6ECE   LD       VE, #CE         ; Load 206 into VE
$264    $C62C   RND      V6, #2C         ; V6 = random & 2C
$266    $C50A   RND      V5, #0A         ; V5 = random & 0A
$268    $4632   SNE      V6, #32         ; Skip if V6 != 50
$26A    $9D4F   UNKNOWN  $9D4F           ; Unknown 9xxx instruction
$26C    $07E6   SYS      $7E6            ; System call to 7E6
$26E    $3F8E   SE       VF, #8E         ; Skip if VF == 142
$270    $96C0   SNE      V6, VC          ; Skip if V6 != VC
$272    $12EB   JP       $2EB            ; Jump to 2EB
$274    $F93C   UNKNOWN  F93C            ; Unknown Fxxx instruction
$276    $0EF2   SYS      $EF2            ; System call to EF2
$278    $79A1   ADD      V9, #A1         ; Add 161 to V9
$27A    $41B7   SNE      V1, #B7         ; Skip if V1 != 183
$27C    $A5F1   LD       I, $5F1         ; Load 5F1 into I
$27E    $7635   ADD      V6, #35         ; Add 53 to V6
$280    $4AB7   SNE      VA, #B7         ; Skip if VA != 183
$282    $CCA4   RND      VC, #A4         ; VC = random & A4
$284    $27C5   CALL     $7C5            ; Call subroutine at 7C5
$286    $D117   DRW      V1, V1, #7      ; Draw 7-byte sprite at V1, V1
$288    $31F8   SE       V1, #F8         ; Skip if V1 == 248
$28A    $90F3   UNKNOWN  $90F3           ; Unknown 9xxx instruction
$28C    $B126   JP       V0, $126        ; Jump to V0 + 126
$28E    $5810   SE       V8, V1          ; Skip if V8 == V1
$290    $F2B5   UNKNOWN  F2B5            ; Unknown Fxxx instruction
$292    $F4F8   UNKNOWN  F4F8            ; Unknown Fxxx instruction
$294    $14CC   JP       $4CC            ; Jump to 4CC
$296    $DB12   DRW      VB, V1, #2      ; Draw 2-byte sprite at VB, V1
$298    $1DDD   JP       $DDD            ; Jump to DDD
$29A    $DB66   DRW      VB, V6, #6      ; Draw 6-byte sprite at VB, V6
$29C    $9D8A   UNKNOWN  $9D8A           ; Unknown 9xxx instruction
$29E    $DEB3   DRW      VE, VB, #3      ; Draw 3-byte sprite at VE, VB
$2A0    $9E03   UNKNOWN  $9E03           ; Unknown 9xxx instruction
$2A2    $591A   UNKNOWN  $591A           ; Unknown 5xxx instruction
$2A4    $D77A   DRW      V7, V7, #A      ; Draw 10-byte sprite at V7, V7
$2A6    $3144   SE       V1, #44         ; Skip if V1 == 68
$2A8    $2B8E   CALL     $B8E            ; Call subroutine at B8E
$2AA    $D2A5   DRW      V2, VA, #5      ; Draw 5-byte sprite at V2, VA
$2AC    $A84C   LD       I, $84C         ; Load 84C into I
$2AE    $877E   SHL      V7              ; V7 <<= 1, VF = MSB
$2B0    $CE02   RND      VE, #02         ; VE = random & 02
$2B2    $9DEC   UNKNOWN  $9DEC           ; Unknown 9xxx instruction
$2B4    $E590   UNKNOWN  $E590           ; Unknown Exxx instruction
$2B6    $F73A   UNKNOWN  F73A            ; Unknown Fxxx instruction
$2B8    $AA75   LD       I, $A75         ; Load A75 into I
$2BA    $B2F8   JP       V0, $2F8        ; Jump to V0 + 2F8
$2BC    $7ACF   ADD      VA, #CF         ; Add 207 to VA
$2BE    $2B26   CALL     $B26            ; Call subroutine at B26
$2C0    $F07A   UNKNOWN  F07A            ; Unknown Fxxx instruction
$2C2    $E377   UNKNOWN  $E377           ; Unknown Exxx instruction
$2C4    $BA6A   JP       V0, $A6A        ; Jump to V0 + A6A
$2C6    $1BBC   JP       $BBC            ; Jump to BBC
$2C8    $B5F9   JP       V0, $5F9        ; Jump to V0 + 5F9
$2CA    $3F8B   SE       VF, #8B         ; Skip if VF == 139
$2CC    $49BC   SNE      V9, #BC         ; Skip if V9 != 188
$2CE    $F556   UNKNOWN  F556            ; Unknown Fxxx instruction
$2D0    $1E02   JP       $E02            ; Jump to E02
$2D2    $A0A5   LD       I, $0A5         ; Load 0A5 into I
$2D4    $DC24   DRW      VC, V2, #4      ; Draw 4-byte sprite at VC, V2
$2D6    $9E24   UNKNOWN  $9E24           ; Unknown 9xxx instruction
$2D8    $58F1   UNKNOWN  $58F1           ; Unknown 5xxx instruction
$2DA    $4823   SNE      V8, #23         ; Skip if V8 != 35
$2DC    $7A8A   ADD      VA, #8A         ; Add 138 to VA
$2DE    $2C77   CALL     $C77            ; Call subroutine at C77
$2E0    $E500   UNKNOWN  $E500           ; Unknown Exxx instruction
$2E2    $4E6E   SNE      VE, #6E         ; Skip if VE != 110
$2E4    $08F0   SYS      $8F0            ; System call to 8F0
$2E6    $E750   UNKNOWN  $E750           ; Unknown Exxx instruction
$2E8    $7BE7   ADD      VB, #E7         ; Add 231 to VB
$2EA    $AEDC   LD       I, $EDC         ; Load EDC into I
$2EC    $2FA1   CALL     $FA1            ; Call subroutine at FA1
$2EE    $5295   UNKNOWN  $5295           ; Unknown 5xxx instruction
$2F0    $4854   SNE      V8, #54         ; Skip if V8 != 84
$2F2    $F04A   UNKNOWN  F04A            ; Unknown Fxxx instruction
$2F4    $1591   JP       $591            ; Jump to 591
$2F6    $8581   OR       V5, V8          ; V5 |= V8
$2F8    $DEB7   DRW      VE, VB, #7      ; Draw 7-byte sprite at VE, VB
$2FA    $B047   JP       V0, $047        ; Jump to V0 + 047
$2FC    $533F   UNKNOWN  $533F           ; Unknown 5xxx instruction
$2FE    $F71C   UNKNOWN  F71C            ; Unknown Fxxx instruction
$300    $0001   SYS      $001            ; System call to 001
$302    $069E   SYS      $69E            ; System call to 69E
$304    $ABB7   LD       I, $BB7         ; Load BB7 into I
$306    $DBE5   DRW      VB, VE, #5      ; Draw 5-byte sprite at VB, VE
$308    $9532   UNKNOWN  $9532           ; Unknown 9xxx instruction
$30A    $7FD1   ADD      VF, #D1         ; Add 209 to VF
$30C    $96F7   UNKNOWN  $96F7           ; Unknown 9xxx instruction
$30E    $945A   UNKNOWN  $945A           ; Unknown 9xxx instruction
$310    $90C3   UNKNOWN  $90C3           ; Unknown 9xxx instruction
$312    $CFD7   RND      VF, #D7         ; VF = random & D7
$314    $AD0A   LD       I, $D0A         ; Load D0A into I
$316    $9AEA   UNKNOWN  $9AEA           ; Unknown 9xxx instruction
$318    $C5FC   RND      V5, #FC         ; V5 = random & FC
$31A    $BC2B   JP       V0, $C2B        ; Jump to V0 + C2B
$31C    $0951   SYS      $951            ; System call to 951
$31E    $19FF   JP       $9FF            ; Jump to 9FF
$320    $B8B5   JP       V0, $8B5        ; Jump to V0 + 8B5
$322    $EC25   UNKNOWN  $EC25           ; Unknown Exxx instruction
$324    $496B   SNE      V9, #6B         ; Skip if V9 != 107
$326    $D8C4   DRW      V8, VC, #4      ; Draw 4-byte sprite at V8, VC
$328    $57C1   UNKNOWN  $57C1           ; Unknown 5xxx instruction
$32A    $1E88   JP       $E88            ; Jump to E88
$32C    $7147   ADD      V1, #47         ; Add 71 to V1
$32E    $2772   CALL     $772            ; Call subroutine at 772
$330    $81E1   OR       V1, VE          ; V1 |= VE
$332    $FE86   UNKNOWN  FE86            ; Unknown Fxxx instruction
$334    $48BD   SNE      V8, #BD         ; Skip if V8 != 189
$336    $D29F   DRW      V2, V9, #F      ; Draw 15-byte sprite at V2, V9
$338    $A932   LD       I, $932         ; Load 932 into I
$33A    $A99E   LD       I, $99E         ; Load 99E into I
$33C    $767B   ADD      V6, #7B         ; Add 123 to V6
$33E    $81DD   UNKNOWN  81DD            ; Unknown 8xxx instruction
$340    $5D66   UNKNOWN  $5D66           ; Unknown 5xxx instruction
$342    $F2C6   UNKNOWN  F2C6            ; Unknown Fxxx instruction
$344    $0A52   SYS      $A52            ; System call to A52
$346    $E3CC   UNKNOWN  $E3CC           ; Unknown Exxx instruction
$348    $F13A   UNKNOWN  F13A            ; Unknown Fxxx instruction
$34A    $41EA   SNE      V1, #EA         ; Skip if V1 != 234
$34C    $F86C   UNKNOWN  F86C            ; Unknown Fxxx instruction
$34E    $CE53   RND      VE, #53         ; VE = random & 53
$350    $EACC   UNKNOWN  $EACC           ; Unknown Exxx instruction
$352    $A8F9   LD       I, $8F9         ; Load 8F9 into I
$354    $0E09   SYS      $E09            ; System call to E09
$356    $121F   JP       $21F            ; Jump to 21F
$358    $25A1   CALL     $5A1            ; Call subroutine at 5A1
$35A    $6125   LD       V1, #25         ; Load 37 into V1
$35C    $EA27   UNKNOWN  $EA27           ; Unknown Exxx instruction
$35E    $84E1   OR       V4, VE          ; V4 |= VE
$360    $7650   ADD      V6, #50         ; Add 80 to V6
$362    $D504   DRW      V5, V0, #4      ; Draw 4-byte sprite at V5, V0
$364    $AE0A   LD       I, $E0A         ; Load E0A into I
$366    $E0EE   UNKNOWN  $E0EE           ; Unknown Exxx instruction
$368    $627D   LD       V2, #7D         ; Load 125 into V2
$36A    $8410   LD       V4, V1          ; V4 = V1
$36C    $C78A   RND      V7, #8A         ; V7 = random & 8A
$36E    $6671   LD       V6, #71         ; Load 113 into V6
$370    $B699   JP       V0, $699        ; Jump to V0 + 699
$372    $2344   CALL     $344            ; Call subroutine at 344
$374    $0801   SYS      $801            ; System call to 801
$376    $EB67   UNKNOWN  $EB67           ; Unknown Exxx instruction
$378    $CC8B   RND      VC, #8B         ; VC = random & 8B
$37A    $8B5A   UNKNOWN  8B5A            ; Unknown 8xxx instruction
$37C    $043C   SYS      $43C            ; System call to 43C
$37E    $ABB7   LD       I, $BB7         ; Load BB7 into I
$380    $ADEB   LD       I, $DEB         ; Load DEB into I
$382    $58B5   UNKNOWN  $58B5           ; Unknown 5xxx instruction
$384    $AC46   LD       I, $C46         ; Load C46 into I
$386    $E4C8   UNKNOWN  $E4C8           ; Unknown Exxx instruction
$388    $1E05   JP       $E05            ; Jump to E05
$38A    $CC3A   RND      VC, #3A         ; VC = random & 3A
$38C    $DEC4   DRW      VE, VC, #4      ; Draw 4-byte sprite at VE, VC
$38E    $12C5   JP       $2C5            ; Jump to 2C5
$390    $B472   JP       V0, $472        ; Jump to V0 + 472
$392    $4F79   SNE      VF, #79         ; Skip if VF != 121
$394    $3EF9   SE       VE, #F9         ; Skip if VE == 249
$396    $DB19   DRW      VB, V1, #9      ; Draw 9-byte sprite at VB, V1
$398    $6AF2   LD       VA, #F2         ; Load 242 into VA
$39A    $D9D0   DRW      V9, VD, #0      ; Draw 0-byte sprite at V9, VD
$39C    $E2D0   UNKNOWN  $E2D0           ; Unknown Exxx instruction
$39E    $35CC   SE       V5, #CC         ; Skip if V5 == 204
$3A0    $A77F   LD       I, $77F         ; Load 77F into I
$3A2    $D688   DRW      V6, V8, #8      ; Draw 8-byte sprite at V6, V8
$3A4    $0D44   SYS      $D44            ; System call to D44
$3A6    $A9F5   LD       I, $9F5         ; Load 9F5 into I
$3A8    $11AC   JP       $1AC            ; Jump to 1AC
$3AA    $40C4   SNE      V0, #C4         ; Skip if V0 != 196
$3AC    $8BA0   LD       VB, VA          ; VB = VA
$3AE    $6AF8   LD       VA, #F8         ; Load 248 into VA
$3B0    $E65D   UNKNOWN  $E65D           ; Unknown Exxx instruction
$3B2    $DFDB   DRW      VF, VD, #B      ; Draw 11-byte sprite at VF, VD
$3B4    $1991   JP       $991            ; Jump to 991
$3B6    $416E   SNE      V1, #6E         ; Skip if V1 != 110
$3B8    $0BBA   SYS      $BBA            ; System call to BBA
$3BA    $8D2D   UNKNOWN  8D2D            ; Unknown 8xxx instruction
$3BC    $A646   LD       I, $646         ; Load 646 into I
$3BE    $C2F5   RND      V2, #F5         ; V2 = random & F5
$3C0    $6D78   LD       VD, #78         ; Load 120 into VD
$3C2    $EDF0   UNKNOWN  $EDF0           ; Unknown Exxx instruction
$3C4    $6596   LD       V5, #96         ; Load 150 into V5
$3C6    $4351   SNE      V3, #51         ; Skip if V3 != 81
$3C8    $2430   CALL     $430            ; Call subroutine at 430
$3CA    $B9B4   JP       V0, $9B4        ; Jump to V0 + 9B4
$3CC    $7E49   ADD      VE, #49         ; Add 73 to VE
$3CE    $8126   SHR      V1              ; V1 >>= 1, VF = LSB
$3D0    $BBF0   JP       V0, $BF0        ; Jump to V0 + BF0
$3D2    $1826   JP       $826            ; Jump to 826
$3D4    $36F8   SE       V6, #F8         ; Skip if V6 == 248
$3D6    $2E4C   CALL     $E4C            ; Call subroutine at E4C
$3D8    $5BBA   UNKNOWN  $5BBA           ; Unknown 5xxx instruction
$3DA    $5B7F   UNKNOWN  $5B7F           ; Unknown 5xxx instruction
$3DC    $76D2   ADD      V6, #D2         ; Add 210 to V6
$3DE    $898A   UNKNOWN  898A            ; Unknown 8xxx instruction
$3E0    $0D2E   SYS      $D2E            ; System call to D2E
$3E2    $37EC   SE       V7, #EC         ; Skip if V7 == 236
$3E4    $1123   JP       $123            ; Jump to 123
$3E6    $C0B9   RND      V0, #B9         ; V0 = random & B9
$3E8    $73F7   ADD      V3, #F7         ; Add 247 to V3
$3EA    $4706   SNE      V7, #06         ; Skip if V7 != 6
$3EC    $F64B   UNKNOWN  F64B            ; Unknown Fxxx instruction
$3EE    $55FD   UNKNOWN  $55FD           ; Unknown 5xxx instruction
$3F0    $93BC   UNKNOWN  $93BC           ; Unknown 9xxx instruction
$3F2    $4307   SNE      V3, #07         ; Skip if V3 != 7
$3F4    $8E36   SHR      VE              ; VE >>= 1, VF = LSB
$3F6    $126A   JP       $26A            ; Jump to 26A
$3F8    $7C7F   ADD      VC, #7F         ; Add 127 to VC
$3FA    $2604   CALL     $604            ; Call subroutine at 604
$3FC    $68A1   LD       V8, #A1         ; Load 161 into V8
$3FE    $3473   SE       V4, #73         ; Skip if V4 == 115
$400    $C955   RND      V9, #55         ; V9 = random & 55
$402    $D30F   DRW      V3, V0, #F      ; Draw 15-byte sprite at V3, V0
$404    $4F85   SNE      VF, #85         ; Skip if VF != 133
$406    $EC2E   UNKNOWN  $EC2E           ; Unknown Exxx instruction
$408    $1246   JP       $246            ; Jump to 246
$40A    $CB1E   RND      VB, #1E         ; VB = random & 1E
$40C    $5A12   UNKNOWN  $5A12           ; Unknown 5xxx instruction
$40E    $BCE9   JP       V0, $CE9        ; Jump to V0 + CE9
$410    $C081   RND      V0, #81         ; V0 = random & 81
$412    $0EB3   SYS      $EB3            ; System call to EB3
$414    $11BA   JP       $1BA            ; Jump to 1BA
$416    $CAA7   RND      VA, #A7         ; VA = random & A7
$418    $0DE4   SYS      $DE4            ; System call to DE4
$41A    $A8E2   LD       I, $8E2         ; Load 8E2 into I
$41C    $A474   LD       I, $474         ; Load 474 into I
$41E    $4714   SNE      V7, #14         ; Skip if V7 != 20
$420    $F6B0   UNKNOWN  F6B0            ; Unknown Fxxx instruction
$422    $579A   UNKNOWN  $579A           ; Unknown 5xxx instruction
$424    $80A6   SHR      V0              ; V0 >>= 1, VF = LSB
$426    $970F   UNKNOWN  $970F           ; Unknown 9xxx instruction
$428    $1CC8   JP       $CC8            ; Jump to CC8
$42A    $4FB3   SNE      VF, #B3         ; Skip if VF != 179
$42C    $7E01   ADD      VE, #01         ; Add 1 to VE
$42E    $C8C0   RND      V8, #C0         ; V8 = random & C0
$430    $31C8   SE       V1, #C8         ; Skip if V1 == 200
$432    $6532   LD       V5, #32         ; Load 50 into V5
$434    $48B0   SNE      V8, #B0         ; Skip if V8 != 176
$436    $8D51   OR       VD, V5          ; VD |= V5
$438    $E726   UNKNOWN  $E726           ; Unknown Exxx instruction
$43A    $669F   LD       V6, #9F         ; Load 159 into V6
$43C    $FBA6   UNKNOWN  FBA6            ; Unknown Fxxx instruction
$43E    $3889   SE       V8, #89         ; Skip if V8 == 137
$440    $F60D   UNKNOWN  F60D            ; Unknown Fxxx instruction
$442    $747E   ADD      V4, #7E         ; Add 126 to V4
$444    $CA25   RND      VA, #25         ; VA = random & 25
$446    $7605   ADD      V6, #05         ; Add 5 to V6
$448    $E416   UNKNOWN  $E416           ; Unknown Exxx instruction
$44A    $6036   LD       V0, #36         ; Load 54 into V0
$44C    $9AEC   UNKNOWN  $9AEC           ; Unknown 9xxx instruction
$44E    $0881   SYS      $881            ; System call to 881
$450    $8111   OR       V1, V1          ; V1 |= V1
$452    $44DF   SNE      V4, #DF         ; Skip if V4 != 223
$454    $3E53   SE       VE, #53         ; Skip if VE == 83
$456    $B8D7   JP       V0, $8D7        ; Jump to V0 + 8D7
$458    $A53C   LD       I, $53C         ; Load 53C into I
$45A    $6000   LD       V0, #00         ; Load 0 into V0
$45C    $508C   UNKNOWN  $508C           ; Unknown 5xxx instruction
$45E    $F855   LD       [I], V8         ; Store V0-V8 at I
$460    $BF6A   JP       V0, $F6A        ; Jump to V0 + F6A
$462    $FC08   UNKNOWN  FC08            ; Unknown Fxxx instruction
$464    $897F   UNKNOWN  897F            ; Unknown 8xxx instruction
$466    $4951   SNE      V9, #51         ; Skip if V9 != 81
$468    $75A8   ADD      V5, #A8         ; Add 168 to V5
$46A    $715C   ADD      V1, #5C         ; Add 92 to V1
$46C    $469D   SNE      V6, #9D         ; Skip if V6 != 157
$46E    $838A   UNKNOWN  838A            ; Unknown 8xxx instruction
$470    $2DAB   CALL     $DAB            ; Call subroutine at DAB
$472    $B329   JP       V0, $329        ; Jump to V0 + 329
$474    $F918   LD       ST, V9          ; Sound timer = V9
$476    $EE3D   UNKNOWN  $EE3D           ; Unknown Exxx instruction
$478    $1633   JP       $633            ; Jump to 633
$47A    $DD34   DRW      VD, V3, #4      ; Draw 4-byte sprite at VD, V3
$47C    $CCD5   RND      VC, #D5         ; VC = random & D5
$47E    $2E12   CALL     $E12            ; Call subroutine at E12
$480    $6DB8   LD       VD, #B8         ; Load 184 into VD
$482    $C5E2   RND      V5, #E2         ; V5 = random & E2
$484    $4850   SNE      V8, #50         ; Skip if V8 != 80
$486    $2621   CALL     $621            ; Call subroutine at 621
$488    $8B6F   UNKNOWN  8B6F            ; Unknown 8xxx instruction
$48A    $EA9D   UNKNOWN  $EA9D           ; Unknown Exxx instruction
$48C    $0509   SYS      $509            ; System call to 509
$48E    $E33F   UNKNOWN  $E33F           ; Unknown Exxx instruction
$490    $C394   RND      V3, #94         ; V3 = random & 94
$492    $92DD   UNKNOWN  $92DD           ; Unknown 9xxx instruction
$494    $6F46   LD       VF, #46         ; Load 70 into VF
$496    $A750   LD       I, $750         ; Load 750 into I
$498    $3EEB   SE       VE, #EB         ; Skip if VE == 235
$49A    $3055   SE       V0, #55         ; Skip if V0 == 85
$49C    $C94F   RND      V9, #4F         ; V9 = random & 4F
$49E    $9845   UNKNOWN  $9845           ; Unknown 9xxx instruction
$4A0    $1C61   JP       $C61            ; Jump to C61
$4A2    $48A6   SNE      V8, #A6         ; Skip if V8 != 166
$4A4    $30F5   SE       V0, #F5         ; Skip if V0 == 245
$4A6    $7603   ADD      V6, #03         ; Add 3 to V6
$4A8    $6664   LD       V6, #64         ; Load 100 into V6
$4AA    $4F81   SNE      VF, #81         ; Skip if VF != 129
$4AC    $9BA4   UNKNOWN  $9BA4           ; Unknown 9xxx instruction
$4AE    $1A60   JP       $A60            ; Jump to A60
$4B0    $4259   SNE      V2, #59         ; Skip if V2 != 89
$4B2    $7B16   ADD      VB, #16         ; Add 22 to VB
$4B4    $DA51   DRW      VA, V5, #1      ; Draw 1-byte sprite at VA, V5
$4B6    $A095   LD       I, $095         ; Load 095 into I
$4B8    $5707   UNKNOWN  $5707           ; Unknown 5xxx instruction
$4BA    $95F2   UNKNOWN  $95F2           ; Unknown 9xxx instruction
$4BC    $5CB3   UNKNOWN  $5CB3           ; Unknown 5xxx instruction
$4BE    $A9C9   LD       I, $9C9         ; Load 9C9 into I
$4C0    $6054   LD       V0, #54         ; Load 84 into V0
$4C2    $783C   ADD      V8, #3C         ; Add 60 to V8
$4C4    $33F8   SE       V3, #F8         ; Skip if V3 == 248
$4C6    $6087   LD       V0, #87         ; Load 135 into V0
$4C8    $0EF2   SYS      $EF2            ; System call to EF2
$4CA    $2E59   CALL     $E59            ; Call subroutine at E59
$4CC    $1509   JP       $509            ; Jump to 509
$4CE    $5090   SE       V0, V9          ; Skip if V0 == V9
$4D0    $28B6   CALL     $8B6            ; Call subroutine at 8B6
$4D2    $2568   CALL     $568            ; Call subroutine at 568
$4D4    $C75B   RND      V7, #5B         ; V7 = random & 5B
$4D6    $8F3C   UNKNOWN  8F3C            ; Unknown 8xxx instruction
$4D8    $D884   DRW      V8, V8, #4      ; Draw 4-byte sprite at V8, V8
$4DA    $A48B   LD       I, $48B         ; Load 48B into I
$4DC    $5790   SE       V7, V9          ; Skip if V7 == V9
$4DE    $3F75   SE       VF, #75         ; Skip if VF == 117
$4E0    $CB54   RND      VB, #54         ; VB = random & 54
$4E2    $0FB7   SYS      $FB7            ; System call to FB7
$4E4    $B0F4   JP       V0, $0F4        ; Jump to V0 + 0F4
$4E6    $63B8   LD       V3, #B8         ; Load 184 into V3
$4E8    $37D4   SE       V7, #D4         ; Skip if V7 == 212
$4EA    $39A2   SE       V9, #A2         ; Skip if V9 == 162
$4EC    $8DA5   SUB      VD, VA          ; VD -= VA, VF = !borrow
$4EE    $2ACF   CALL     $ACF            ; Call subroutine at ACF
$4F0    $A407   LD       I, $407         ; Load 407 into I
$4F2    $3DBE   SE       VD, #BE         ; Skip if VD == 190
$4F4    $B34E   JP       V0, $34E        ; Jump to V0 + 34E
$4F6    $918A   UNKNOWN  $918A           ; Unknown 9xxx instruction
$4F8    $60E9   LD       V0, #E9         ; Load 233 into V0
$4FA    $65CA   LD       V5, #CA         ; Load 202 into V5
$4FC    $3C50   SE       VC, #50         ; Skip if VC == 80
$4FE    $0DA2   SYS      $DA2            ; System call to DA2
$500    $279E   CALL     $79E            ; Call subroutine at 79E
$502    $AC3D   LD       I, $C3D         ; Load C3D into I
$504    $FD47   UNKNOWN  FD47            ; Unknown Fxxx instruction
$506    $BB18   JP       V0, $B18        ; Jump to V0 + B18
$508    $E8B6   UNKNOWN  $E8B6           ; Unknown Exxx instruction
$50A    $531C   UNKNOWN  $531C           ; Unknown 5xxx instruction
$50C    $98E3   UNKNOWN  $98E3           ; Unknown 9xxx instruction
$50E    $F91D   UNKNOWN  F91D            ; Unknown Fxxx instruction
$510    $6C78   LD       VC, #78         ; Load 120 into VC
$512    $B09A   JP       V0, $09A        ; Jump to V0 + 09A
$514    $4034   SNE      V0, #34         ; Skip if V0 != 52
$516    $C6A6   RND      V6, #A6         ; V6 = random & A6
$518    $52FF   UNKNOWN  $52FF           ; Unknown 5xxx instruction
$51A    $6F52   LD       VF, #52         ; Load 82 into VF
$51C    $354A   SE       V5, #4A         ; Skip if V5 == 74
$51E    $5243   UNKNOWN  $5243           ; Unknown 5xxx instruction
$520    $160D   JP       $60D            ; Jump to 60D
$522    $D7C4   DRW      V7, VC, #4      ; Draw 4-byte sprite at V7, VC
$524    $9583   UNKNOWN  $9583           ; Unknown 9xxx instruction
$526    $FFA8   UNKNOWN  FFA8            ; Unknown Fxxx instruction
$528    $63B2   LD       V3, #B2         ; Load 178 into V3
$52A    $243C   CALL     $43C            ; Call subroutine at 43C
$52C    $EE34   UNKNOWN  $EE34           ; Unknown Exxx instruction
$52E    $DAA4   DRW      VA, VA, #4      ; Draw 4-byte sprite at VA, VA
$530    $C386   RND      V3, #86         ; V3 = random & 86
$532    $A950   LD       I, $950         ; Load 950 into I
$534    $F02B   UNKNOWN  F02B            ; Unknown Fxxx instruction
$536    $5944   UNKNOWN  $5944           ; Unknown 5xxx instruction
$538    $EDF7   UNKNOWN  $EDF7           ; Unknown Exxx instruction
$53A    $0AFC   SYS      $AFC            ; System call to AFC
$53C    $B052   JP       V0, $052        ; Jump to V0 + 052
$53E    $D2B2   DRW      V2, VB, #2      ; Draw 2-byte sprite at V2, VB
$540    $86D1   OR       V6, VD          ; V6 |= VD
$542    $B5F9   JP       V0, $5F9        ; Jump to V0 + 5F9
$544    $3A3C   SE       VA, #3C         ; Skip if VA == 60
$546    $0CA7   SYS      $CA7            ; System call to CA7
$548    $4BCD   SNE      VB, #CD         ; Skip if VB != 205
$54A    $577E   UNKNOWN  $577E           ; Unknown 5xxx instruction
$54C    $3B57   SE       VB, #57         ; Skip if VB == 87
$54E    $64E2   LD       V4, #E2         ; Load 226 into V4
$550    $9006   UNKNOWN  $9006           ; Unknown 9xxx instruction
$552    $0586   SYS      $586            ; System call to 586
$554    $EEF8   UNKNOWN  $EEF8           ; Unknown Exxx instruction
$556    $5B6A   UNKNOWN  $5B6A           ; Unknown 5xxx instruction
$558    $EEA7   UNKNOWN  $EEA7           ; Unknown Exxx instruction
$55A    $F639   UNKNOWN  F639            ; Unknown Fxxx instruction
$55C    $61BF   LD       V1, #BF         ; Load 191 into V1
$55E    $320B   SE       V2, #0B         ; Skip if V2 == 11
$560    $896E   SHL      V9              ; V9 <<= 1, VF = MSB
$562    $C180   RND      V1, #80         ; V1 = random & 80
$564    $4CE0   SNE      VC, #E0         ; Skip if VC != 224
$566    $67D8   LD       V7, #D8         ; Load 216 into V7
$568    $418C   SNE      V1, #8C         ; Skip if V1 != 140
$56A    $43AA   SNE      V3, #AA         ; Skip if V3 != 170
$56C    $92E0   SNE      V2, VE          ; Skip if V2 != VE
$56E    $E162   UNKNOWN  $E162           ; Unknown Exxx instruction
$570    $F733   LD       B, V7           ; Store BCD of V7 at I, I+1, I+2
$572    $AB75   LD       I, $B75         ; Load B75 into I
$574    $AE9B   LD       I, $E9B         ; Load E9B into I
$576    $3A42   SE       VA, #42         ; Skip if VA == 66
$578    $525F   UNKNOWN  $525F           ; Unknown 5xxx instruction
$57A    $2F59   CALL     $F59            ; Call subroutine at F59
$57C    $AA2F   LD       I, $A2F         ; Load A2F into I
$57E    $2BF8   CALL     $BF8            ; Call subroutine at BF8
$580    $20D6   CALL     $0D6            ; Call subroutine at 0D6
$582    $3EB2   SE       VE, #B2         ; Skip if VE == 178
$584    $2DA0   CALL     $DA0            ; Call subroutine at DA0
$586    $7118   ADD      V1, #18         ; Add 24 to V1
$588    $27D6   CALL     $7D6            ; Call subroutine at 7D6
$58A    $E390   UNKNOWN  $E390           ; Unknown Exxx instruction
$58C    $05AB   SYS      $5AB            ; System call to 5AB
$58E    $A04B   LD       I, $04B         ; Load 04B into I
$590    $2C55   CALL     $C55            ; Call subroutine at C55
$592    $2988   CALL     $988            ; Call subroutine at 988
$594    $96A4   UNKNOWN  $96A4           ; Unknown 9xxx instruction
$596    $35C4   SE       V5, #C4         ; Skip if V5 == 196
$598    $7BD2   ADD      VB, #D2         ; Add 210 to VB
$59A    $0141   SYS      $141            ; System call to 141
$59C    $2C2D   CALL     $C2D            ; Call subroutine at C2D
$59E    $BD2F   JP       V0, $D2F        ; Jump to V0 + D2F
$5A0    $DE3A   DRW      VE, V3, #A      ; Draw 10-byte sprite at VE, V3
$5A2    $0D92   SYS      $D92            ; System call to D92
$5A4    $EA3C   UNKNOWN  $EA3C           ; Unknown Exxx instruction
$5A6    $E664   UNKNOWN  $E664           ; Unknown Exxx instruction
$5A8    $583F   UNKNOWN  $583F           ; Unknown 5xxx instruction
$5AA    $B9D4   JP       V0, $9D4        ; Jump to V0 + 9D4
$5AC    $0107   SYS      $107            ; System call to 107
$5AE    $00A1   SYS      $0A1            ; System call to 0A1
$5B0    $3756   SE       V7, #56         ; Skip if V7 == 86
$5B2    $5CF9   UNKNOWN  $5CF9           ; Unknown 5xxx instruction
$5B4    $F87F   UNKNOWN  F87F            ; Unknown Fxxx instruction
$5B6    $CB64   RND      VB, #64         ; VB = random & 64
$5B8    $4019   SNE      V0, #19         ; Skip if V0 != 25
$5BA    $728C   ADD      V2, #8C         ; Add 140 to V2
$5BC    $AEA7   LD       I, $EA7         ; Load EA7 into I
$5BE    $F27D   UNKNOWN  F27D            ; Unknown Fxxx instruction
$5C0    $74F1   ADD      V4, #F1         ; Add 241 to V4
$5C2    $497C   SNE      V9, #7C         ; Skip if V9 != 124
$5C4    $D1DE   DRW      V1, VD, #E      ; Draw 14-byte sprite at V1, VD
$5C6    $91C3   UNKNOWN  $91C3           ; Unknown 9xxx instruction
$5C8    $C97C   RND      V9, #7C         ; V9 = random & 7C
$5CA    $C539   RND      V5, #39         ; V5 = random & 39
$5CC    $A9D9   LD       I, $9D9         ; Load 9D9 into I
$5CE    $0A35   SYS      $A35            ; System call to A35
$5D0    $C391   RND      V3, #91         ; V3 = random & 91
$5D2    $1146   JP       $146            ; Jump to 146
$5D4    $35FB   SE       V5, #FB         ; Skip if V5 == 251
$5D6    $532E   UNKNOWN  $532E           ; Unknown 5xxx instruction
$5D8    $50EA   UNKNOWN  $50EA           ; Unknown 5xxx instruction
$5DA    $E1A7   UNKNOWN  $E1A7           ; Unknown Exxx instruction
$5DC    $53B6   UNKNOWN  $53B6           ; Unknown 5xxx instruction
$5DE    $119C   JP       $19C            ; Jump to 19C
$5E0    $ECDC   UNKNOWN  $ECDC           ; Unknown Exxx instruction
$5E2    $285D   CALL     $85D            ; Call subroutine at 85D
$5E4    $CBEB   RND      VB, #EB         ; VB = random & EB
$5E6    $8619   UNKNOWN  8619            ; Unknown 8xxx instruction
$5E8    $696F   LD       V9, #6F         ; Load 111 into V9
$5EA    $B56C   JP       V0, $56C        ; Jump to V0 + 56C
$5EC    $3D32   SE       VD, #32         ; Skip if VD == 50
$5EE    $69B4   LD       V9, #B4         ; Load 180 into V9
$5F0    $B05E   JP       V0, $05E        ; Jump to V0 + 05E
$5F2    $423A   SNE      V2, #3A         ; Skip if V2 != 58
$5F4    $CC28   RND      VC, #28         ; VC = random & 28
$5F6    $4955   SNE      V9, #55         ; Skip if V9 != 85
$5F8    $EE03   UNKNOWN  $EE03           ; Unknown Exxx instruction
$5FA    $22E4   CALL     $2E4            ; Call subroutine at 2E4
$5FC    $6F44   LD       VF, #44         ; Load 68 into VF
$5FE    $1BCF   JP       $BCF            ; Jump to BCF
$600    $4515   SNE      V5, #15         ; Skip if V5 != 21
$602    $A89C   LD       I, $89C         ; Load 89C into I
$604    $FB68   UNKNOWN  FB68            ; Unknown Fxxx instruction
$606    $76CC   ADD      V6, #CC         ; Add 204 to V6
$608    $6D71   LD       VD, #71         ; Load 113 into VD
$60A    $6606   LD       V6, #06         ; Load 6 into V6
$60C    $0627   SYS      $627            ; System call to 627
$60E    $FFAA   UNKNOWN  FFAA            ; Unknown Fxxx instruction
$610    $0565   SYS      $565            ; System call to 565
$612    $03EB   SYS      $3EB            ; System call to 3EB
$614    $9C18   UNKNOWN  $9C18           ; Unknown 9xxx instruction
$616    $0245   SYS      $245            ; System call to 245
$618    $00B0   SYS      $0B0            ; System call to 0B0
$61A    $C78E   RND      V7, #8E         ; V7 = random & 8E
$61C    $7122   ADD      V1, #22         ; Add 34 to V1
$61E    $1333   JP       $333            ; Jump to 333
$620    $5397   UNKNOWN  $5397           ; Unknown 5xxx instruction
$622    $C311   RND      V3, #11         ; V3 = random & 11
$624    $7724   ADD      V7, #24         ; Add 36 to V7
$626    $7153   ADD      V1, #53         ; Add 83 to V1
$628    $FD97   UNKNOWN  FD97            ; Unknown Fxxx instruction
$62A    $9CC8   UNKNOWN  $9CC8           ; Unknown 9xxx instruction
$62C    $2150   CALL     $150            ; Call subroutine at 150
$62E    $EA2A   UNKNOWN  $EA2A           ; Unknown Exxx instruction
$630    $A32B   LD       I, $32B         ; Load 32B into I
$632    $29C4   CALL     $9C4            ; Call subroutine at 9C4
$634    $C5B3   RND      V5, #B3         ; V5 = random & B3
$636    $51AE   UNKNOWN  $51AE           ; Unknown 5xxx instruction
$638    $2C8B   CALL     $C8B            ; Call subroutine at C8B
$63A    $C88E   RND      V8, #8E         ; V8 = random & 8E
$63C    $A395   LD       I, $395         ; Load 395 into I
$63E    $5B83   UNKNOWN  $5B83           ; Unknown 5xxx instruction
$640    $8CB7   SUBN     VC, VB          ; VC = VB - VC, VF = !borrow
$642    $2E3D   CALL     $E3D            ; Call subroutine at E3D
$644    $681A   LD       V8, #1A         ; Load 26 into V8
$646    $3BA7   SE       VB, #A7         ; Skip if VB == 167
$648    $7805   ADD      V8, #05         ; Add 5 to V8
$64A    $E166   UNKNOWN  $E166           ; Unknown Exxx instruction
$64C    $1BCC   JP       $BCC            ; Jump to BCC
$64E    $F211   UNKNOWN  F211            ; Unknown Fxxx instruction
$650    $44E6   SNE      V4, #E6         ; Skip if V4 != 230
$652    $5267   UNKNOWN  $5267           ; Unknown 5xxx instruction
$654    $9250   SNE      V2, V5          ; Skip if V2 != V5
$656    $97D8   UNKNOWN  $97D8           ; Unknown 9xxx instruction
$658    $771A   ADD      V7, #1A         ; Add 26 to V7
$65A    $5E78   UNKNOWN  $5E78           ; Unknown 5xxx instruction
$65C    $D378   DRW      V3, V7, #8      ; Draw 8-byte sprite at V3, V7
$65E    $7A96   ADD      VA, #96         ; Add 150 to VA
$660    $CF71   RND      VF, #71         ; VF = random & 71
$662    $3B25   SE       VB, #25         ; Skip if VB == 37
$664    $47B3   SNE      V7, #B3         ; Skip if V7 != 179
$666    $840D   UNKNOWN  840D            ; Unknown 8xxx instruction
$668    $FF32   UNKNOWN  FF32            ; Unknown Fxxx instruction
$66A    $FE8E   UNKNOWN  FE8E            ; Unknown Fxxx instruction
$66C    $88CE   SHL      V8              ; V8 <<= 1, VF = MSB
$66E    $0D37   SYS      $D37            ; System call to D37
$670    $0413   SYS      $413            ; System call to 413
$672    $CB1B   RND      VB, #1B         ; VB = random & 1B
$674    $A950   LD       I, $950         ; Load 950 into I
$676    $E369   UNKNOWN  $E369           ; Unknown Exxx instruction
$678    $F528   UNKNOWN  F528            ; Unknown Fxxx instruction
$67A    $D224   DRW      V2, V2, #4      ; Draw 4-byte sprite at V2, V2
$67C    $926B   UNKNOWN  $926B           ; Unknown 9xxx instruction
$67E    $434B   SNE      V3, #4B         ; Skip if V3 != 75
$680    $CBF7   RND      VB, #F7         ; VB = random & F7
$682    $1F1D   JP       $F1D            ; Jump to F1D
$684    $58CB   UNKNOWN  $58CB           ; Unknown 5xxx instruction
$686    $6C44   LD       VC, #44         ; Load 68 into VC
$688    $1C52   JP       $C52            ; Jump to C52
$68A    $5A4B   UNKNOWN  $5A4B           ; Unknown 5xxx instruction
$68C    $9B83   UNKNOWN  $9B83           ; Unknown 9xxx instruction
$68E    $51AC   UNKNOWN  $51AC           ; Unknown 5xxx instruction
$690    $E8E2   UNKNOWN  $E8E2           ; Unknown Exxx instruction
$692    $7DF4   ADD      VD, #F4         ; Add 244 to VD
$694    $ACBF   LD       I, $CBF         ; Load CBF into I
$696    $4012   SNE      V0, #12         ; Skip if V0 != 18
$698    $CBE3   RND      VB, #E3         ; VB = random & E3
$69A    $9518   UNKNOWN  $9518           ; Unknown 9xxx instruction
$69C    $721C   ADD      V2, #1C         ; Add 28 to V2
$69E    $C0F1   RND      V0, #F1         ; V0 = random & F1
$6A0    $0B91   SYS      $B91            ; System call to B91
$6A2    $ADCF   LD       I, $DCF         ; Load DCF into I
$6A4    $CBE5   RND      VB, #E5         ; VB = random & E5
$6A6    $BE5F   JP       V0, $E5F        ; Jump to V0 + E5F
$6A8    $2A34   CALL     $A34            ; Call subroutine at A34
$6AA    $2CE0   CALL     $CE0            ; Call subroutine at CE0
$6AC    $6B4E   LD       VB, #4E         ; Load 78 into VB
$6AE    $CB16   RND      VB, #16         ; VB = random & 16
$6B0    $671E   LD       V7, #1E         ; Load 30 into V7
$6B2    $4538   SNE      V5, #38         ; Skip if V5 != 56
$6B4    $2452   CALL     $452            ; Call subroutine at 452
$6B6    $7D74   ADD      VD, #74         ; Add 116 to VD
$6B8    $5D51   UNKNOWN  $5D51           ; Unknown 5xxx instruction
$6BA    $1BEB   JP       $BEB            ; Jump to BEB
$6BC    $468C   SNE      V6, #8C         ; Skip if V6 != 140
$6BE    $E967   UNKNOWN  $E967           ; Unknown Exxx instruction
$6C0    $680B   LD       V8, #0B         ; Load 11 into V8
$6C2    $DF0D   DRW      VF, V0, #D      ; Draw 13-byte sprite at VF, V0
$6C4    $9A79   UNKNOWN  $9A79           ; Unknown 9xxx instruction
$6C6    $1F3F   JP       $F3F            ; Jump to F3F
$6C8    $432E   SNE      V3, #2E         ; Skip if V3 != 46
$6CA    $E680   UNKNOWN  $E680           ; Unknown Exxx instruction
$6CC    $DFA2   DRW      VF, VA, #2      ; Draw 2-byte sprite at VF, VA
$6CE    $4A41   SNE      VA, #41         ; Skip if VA != 65
$6D0    $B781   JP       V0, $781        ; Jump to V0 + 781
$6D2    $E7C3   UNKNOWN  $E7C3           ; Unknown Exxx instruction
$6D4    $D652   DRW      V6, V5, #2      ; Draw 2-byte sprite at V6, V5
$6D6    $913C   UNKNOWN  $913C           ; Unknown 9xxx instruction
$6D8    $23D9   CALL     $3D9            ; Call subroutine at 3D9
$6DA    $2F7B   CALL     $F7B            ; Call subroutine at F7B
$6DC    $3952   SE       V9, #52         ; Skip if V9 == 82
$6DE    $E79D   UNKNOWN  $E79D           ; Unknown Exxx instruction
$6E0    $3E5D   SE       VE, #5D         ; Skip if VE == 93
$6E2    $300F   SE       V0, #0F         ; Skip if V0 == 15
$6E4    $CFE3   RND      VF, #E3         ; VF = random & E3
$6E6    $876F   UNKNOWN  876F            ; Unknown 8xxx instruction
$6E8    $7A38   ADD      VA, #38         ; Add 56 to VA
$6EA    $74D1   ADD      V4, #D1         ; Add 209 to V4
$6EC    $8176   SHR      V1              ; V1 >>= 1, VF = LSB
$6EE    $B9C2   JP       V0, $9C2        ; Jump to V0 + 9C2
$6F0    $1539   JP       $539            ; Jump to 539
$6F2    $756F   ADD      V5, #6F         ; Add 111 to V5
$6F4    $4F99   SNE      VF, #99         ; Skip if VF != 153
$6F6    $6A9E   LD       VA, #9E         ; Load 158 into VA
$6F8    $0166   SYS      $166            ; System call to 166
$6FA    $C658   RND      V6, #58         ; V6 = random & 58
$6FC    $8BD4   ADD      VB, VD          ; VB += VD, VF = carry
$6FE    $AF9E   LD       I, $F9E         ; Load F9E into I
$700    $B9AB   JP       V0, $9AB        ; Jump to V0 + 9AB
$702    $43C7   SNE      V3, #C7         ; Skip if V3 != 199
$704    $3114   SE       V1, #14         ; Skip if V1 == 20
$706    $AD2E   LD       I, $D2E         ; Load D2E into I
$708    $526B   UNKNOWN  $526B           ; Unknown 5xxx instruction
$70A    $FF70   UNKNOWN  FF70            ; Unknown Fxxx instruction
$70C    $1355   JP       $355            ; Jump to 355
$70E    $00E8   SYS      $0E8            ; System call to 0E8
$710    $59BF   UNKNOWN  $59BF           ; Unknown 5xxx instruction
$712    $2E06   CALL     $E06            ; Call subroutine at E06
$714    $E976   UNKNOWN  $E976           ; Unknown Exxx instruction
$716    $C322   RND      V3, #22         ; V3 = random & 22
$718    $BD31   JP       V0, $D31        ; Jump to V0 + D31
$71A    $0970   SYS      $970            ; System call to 970
$71C    $D8F7   DRW      V8, VF, #7      ; Draw 7-byte sprite at V8, VF
$71E    $6703   LD       V7, #03         ; Load 3 into V7
$720    $5DB8   UNKNOWN  $5DB8           ; Unknown 5xxx instruction
$722    $2714   CALL     $714            ; Call subroutine at 714
$724    $7BF6   ADD      VB, #F6         ; Add 246 to VB
$726    $2C7A   CALL     $C7A            ; Call subroutine at C7A
$728    $E021   UNKNOWN  $E021           ; Unknown Exxx instruction
$72A    $027C   SYS      $27C            ; System call to 27C
$72C    $8983   XOR      V9, V8          ; V9 ^= V8
$72E    $D357   DRW      V3, V5, #7      ; Draw 7-byte sprite at V3, V5
$730    $8A8A   UNKNOWN  8A8A            ; Unknown 8xxx instruction
$732    $1AE2   JP       $AE2            ; Jump to AE2
$734    $F15E   UNKNOWN  F15E            ; Unknown Fxxx instruction
$736    $AD25   LD       I, $D25         ; Load D25 into I
$738    $ACC8   LD       I, $CC8         ; Load CC8 into I
$73A    $D796   DRW      V7, V9, #6      ; Draw 6-byte sprite at V7, V9
$73C    $AF93   LD       I, $F93         ; Load F93 into I
$73E    $60A8   LD       V0, #A8         ; Load 168 into V0
$740    $A4A3   LD       I, $4A3         ; Load 4A3 into I
$742    $3A59   SE       VA, #59         ; Skip if VA == 89
$744    $F92C   UNKNOWN  F92C            ; Unknown Fxxx instruction
$746    $970A   UNKNOWN  $970A           ; Unknown 9xxx instruction
$748    $44D2   SNE      V4, #D2         ; Skip if V4 != 210
$74A    $87CC   UNKNOWN  87CC            ; Unknown 8xxx instruction
$74C    $9AA9   UNKNOWN  $9AA9           ; Unknown 9xxx instruction
$74E    $DBBE   DRW      VB, VB, #E      ; Draw 14-byte sprite at VB, VB
$750    $6F39   LD       VF, #39         ; Load 57 into VF
$752    $3CF4   SE       VC, #F4         ; Skip if VC == 244
$754    $18B3   JP       $8B3            ; Jump to 8B3
$756    $139F   JP       $39F            ; Jump to 39F
$758    $3E12   SE       VE, #12         ; Skip if VE == 18
$75A    $3EEF   SE       VE, #EF         ; Skip if VE == 239
$75C    $D70A   DRW      V7, V0, #A      ; Draw 10-byte sprite at V7, V0
$75E    $2EAC   CALL     $EAC            ; Call subroutine at EAC
$760    $B3CD   JP       V0, $3CD        ; Jump to V0 + 3CD
$762    $C1AA   RND      V1, #AA         ; V1 = random & AA
$764    $7C77   ADD      VC, #77         ; Add 119 to VC
$766    $0893   SYS      $893            ; System call to 893
$768    $0517   SYS      $517            ; System call to 517
$76A    $8478   UNKNOWN  8478            ; Unknown 8xxx instruction
$76C    $E5F5   UNKNOWN  $E5F5           ; Unknown Exxx instruction
$76E    $80BF   UNKNOWN  80BF            ; Unknown 8xxx instruction
$770    $32C4   SE       V2, #C4         ; Skip if V2 == 196
$772    $5CE9   UNKNOWN  $5CE9           ; Unknown 5xxx instruction
$774    $63E8   LD       V3, #E8         ; Load 232 into V3
$776    $6CF6   LD       VC, #F6         ; Load 246 into VC
$778    $B881   JP       V0, $881        ; Jump to V0 + 881
$77A    $2F8D   CALL     $F8D            ; Call subroutine at F8D
$77C    $4642   SNE      V6, #42         ; Skip if V6 != 66
$77E    $EA1B   UNKNOWN  $EA1B           ; Unknown Exxx instruction
$780    $12CA   JP       $2CA            ; Jump to 2CA
$782    $8AD4   ADD      VA, VD          ; VA += VD, VF = carry
$784    $C55B   RND      V5, #5B         ; V5 = random & 5B
$786    $D1F6   DRW      V1, VF, #6      ; Draw 6-byte sprite at V1, VF
$788    $F084   UNKNOWN  F084            ; Unknown Fxxx instruction
$78A    $C006   RND      V0, #06         ; V0 = random & 06
$78C    $04E9   SYS      $4E9            ; System call to 4E9
$78E    $3F3A   SE       VF, #3A         ; Skip if VF == 58
$790    $9B86   UNKNOWN  $9B86           ; Unknown 9xxx instruction
$792    $6085   LD       V0, #85         ; Load 133 into V0
$794    $21EF   CALL     $1EF            ; Call subroutine at 1EF
$796    $B1F5   JP       V0, $1F5        ; Jump to V0 + 1F5
$798    $A1C0   LD       I, $1C0         ; Load 1C0 into I
$79A    $56B8   UNKNOWN  $56B8           ; Unknown 5xxx instruction
$79C    $3B15   SE       VB, #15         ; Skip if VB == 21
$79E    $2CB6   CALL     $CB6            ; Call subroutine at CB6
$7A0    $3CE3   SE       VC, #E3         ; Skip if VC == 227
$7A2    $0314   SYS      $314            ; System call to 314
$7A4    $23F5   CALL     $3F5            ; Call subroutine at 3F5
$7A6    $7B54   ADD      VB, #54         ; Add 84 to VB
$7A8    $2C5D   CALL     $C5D            ; Call subroutine at C5D
$7AA    $31AE   SE       V1, #AE         ; Skip if V1 == 174
$7AC    $0B90   SYS      $B90            ; System call to B90
$7AE    $94D5   UNKNOWN  $94D5           ; Unknown 9xxx instruction
$7B0    $A99F   LD       I, $99F         ; Load 99F into I
$7B2    $1355   JP       $355            ; Jump to 355
$7B4    $C4B5   RND      V4, #B5         ; V4 = random & B5
$7B6    $DFD9   DRW      VF, VD, #9      ; Draw 9-byte sprite at VF, VD
$7B8    $E93A   UNKNOWN  $E93A           ; Unknown Exxx instruction
$7BA    $2C20   CALL     $C20            ; Call subroutine at C20
$7BC    $F71A   UNKNOWN  F71A            ; Unknown Fxxx instruction
$7BE    $85CC   UNKNOWN  85CC            ; Unknown 8xxx instruction
$7C0    $2034   CALL     $034            ; Call subroutine at 034
$7C2    $85E4   ADD      V5, VE          ; V5 += VE, VF = carry
$7C4    $3545   SE       V5, #45         ; Skip if V5 == 69
$7C6    $2CBB   CALL     $CBB            ; Call subroutine at CBB
$7C8    $73BF   ADD      V3, #BF         ; Add 191 to V3
$7CA    $F8CB   UNKNOWN  F8CB            ; Unknown Fxxx instruction
$7CC    $9F12   UNKNOWN  $9F12           ; Unknown 9xxx instruction
$7CE    $D4CF   DRW      V4, VC, #F      ; Draw 15-byte sprite at V4, VC
$7D0    $FCD5   UNKNOWN  FCD5            ; Unknown Fxxx instruction
$7D2    $8A1D   UNKNOWN  8A1D            ; Unknown 8xxx instruction
$7D4    $DCAE   DRW      VC, VA, #E      ; Draw 14-byte sprite at VC, VA
$7D6    $569F   UNKNOWN  $569F           ; Unknown 5xxx instruction
$7D8    $F890   UNKNOWN  F890            ; Unknown Fxxx instruction
$7DA    $F246   UNKNOWN  F246            ; Unknown Fxxx instruction
$7DC    $D329   DRW      V3, V2, #9      ; Draw 9-byte sprite at V3, V2
$7DE    $F4A9   UNKNOWN  F4A9            ; Unknown Fxxx instruction
$7E0    $6041   LD       V0, #41         ; Load 65 into V0
$7E2    $D000   DRW      V0, V0, #0      ; Draw 0-byte sprite at V0, V0
$7E4    $10E8   JP       $0E8            ; Jump to 0E8
$7E6    $BDCF   JP       V0, $DCF        ; Jump to V0 + DCF
$7E8    $4B30   SNE      VB, #30         ; Skip if VB != 48
$7EA    $C05A   RND      V0, #5A         ; V0 = random & 5A
$7EC    $BF04   JP       V0, $F04        ; Jump to V0 + F04
$7EE    $C97B   RND      V9, #7B         ; V9 = random & 7B
$7F0    $C168   RND      V1, #68         ; V1 = random & 68
$7F2    $929B   UNKNOWN  $929B           ; Unknown 9xxx instruction
$7F4    $FBE9   UNKNOWN  FBE9            ; Unknown Fxxx instruction
$7F6    $7B42   ADD      VB, #42         ; Add 66 to VB
$7F8    $BACE   JP       V0, $ACE        ; Jump to V0 + ACE
$7FA    $0736   SYS      $736            ; System call to 736
$7FC    $42FF   SNE      V2, #FF         ; Skip if V2 != 255
$7FE    $D1CE   DRW      V1, VC, #E      ; Draw 14-byte sprite at V1, VC
$800    $B162   JP       V0, $162        ; Jump to V0 + 162
$802    $E8AE   UNKNOWN  $E8AE           ; Unknown Exxx instruction
$804    $A15F   LD       I, $15F         ; Load 15F into I
$806    $FA55   LD       [I], VA         ; Store V0-VA at I
$808    $0367   SYS      $367            ; System call to 367
$80A    $1F10   JP       $F10            ; Jump to F10
$80C    $BF51   JP       V0, $F51        ; Jump to V0 + F51
$80E    $9CC1   UNKNOWN  $9CC1           ; Unknown 9xxx instruction
$810    $1B5E   JP       $B5E            ; Jump to B5E
$812    $D49C   DRW      V4, V9, #C      ; Draw 12-byte sprite at V4, V9
$814    $0AB5   SYS      $AB5            ; System call to AB5
$816    $B513   JP       V0, $513        ; Jump to V0 + 513
$818    $C991   RND      V9, #91         ; V9 = random & 91
$81A    $F4EE   UNKNOWN  F4EE            ; Unknown Fxxx instruction
$81C    $B57B   JP       V0, $57B        ; Jump to V0 + 57B
$81E    $A557   LD       I, $557         ; Load 557 into I
$820    $2F8C   CALL     $F8C            ; Call subroutine at F8C
$822    $88B5   SUB      V8, VB          ; V8 -= VB, VF = !borrow
$824    $9AF6   UNKNOWN  $9AF6           ; Unknown 9xxx instruction
$826    $0FF9   SYS      $FF9            ; System call to FF9
$828    $7ECC   ADD      VE, #CC         ; Add 204 to VE
$82A    $0203   SYS      $203            ; System call to 203
$82C    $86DD   UNKNOWN  86DD            ; Unknown 8xxx instruction
$82E    $71E4   ADD      V1, #E4         ; Add 228 to V1
$830    $D02C   DRW      V0, V2, #C      ; Draw 12-byte sprite at V0, V2
$832    $2B5C   CALL     $B5C            ; Call subroutine at B5C
$834    $2565   CALL     $565            ; Call subroutine at 565
$836    $9D32   UNKNOWN  $9D32           ; Unknown 9xxx instruction
$838    $84BA   UNKNOWN  84BA            ; Unknown 8xxx instruction
$83A    $FD3B   UNKNOWN  FD3B            ; Unknown Fxxx instruction
$83C    $B505   JP       V0, $505        ; Jump to V0 + 505
$83E    $0460   SYS      $460            ; System call to 460
$840    $D38E   DRW      V3, V8, #E      ; Draw 14-byte sprite at V3, V8
$842    $C100   RND      V1, #00         ; V1 = random & 00
$844    $98CE   UNKNOWN  $98CE           ; Unknown 9xxx instruction
$846    $1C62   JP       $C62            ; Jump to C62
$848    $2EF0   CALL     $EF0            ; Call subroutine at EF0
$84A    $12D1   JP       $2D1            ; Jump to 2D1
$84C    $9A0C   UNKNOWN  $9A0C           ; Unknown 9xxx instruction
$84E    $9B23   UNKNOWN  $9B23           ; Unknown 9xxx instruction
$850    $AF88   LD       I, $F88         ; Load F88 into I
$852    $63B2   LD       V3, #B2         ; Load 178 into V3
$854    $61D2   LD       V1, #D2         ; Load 210 into V1
$856    $92EF   UNKNOWN  $92EF           ; Unknown 9xxx instruction
$858    $948B   UNKNOWN  $948B           ; Unknown 9xxx instruction
$85A    $174E   JP       $74E            ; Jump to 74E
$85C    $2CED   CALL     $CED            ; Call subroutine at CED
$85E    $528E   UNKNOWN  $528E           ; Unknown 5xxx instruction
$860    $DEFA   DRW      VE, VF, #A      ; Draw 10-byte sprite at VE, VF
$862    $D41A   DRW      V4, V1, #A      ; Draw 10-byte sprite at V4, V1
$864    $7DF3   ADD      VD, #F3         ; Add 243 to VD
$866    $42CA   SNE      V2, #CA         ; Skip if V2 != 202
$868    $8DCA   UNKNOWN  8DCA            ; Unknown 8xxx instruction
$86A    $7104   ADD      V1, #04         ; Add 4 to V1
$86C    $CE55   RND      VE, #55         ; VE = random & 55
$86E    $1ED8   JP       $ED8            ; Jump to ED8
$870    $B19E   JP       V0, $19E        ; Jump to V0 + 19E
$872    $DE0E   DRW      VE, V0, #E      ; Draw 14-byte sprite at VE, V0
$874    $5835   UNKNOWN  $5835           ; Unknown 5xxx instruction
$876    $3D34   SE       VD, #34         ; Skip if VD == 52
$878    $FC66   UNKNOWN  FC66            ; Unknown Fxxx instruction
$87A    $5C9F   UNKNOWN  $5C9F           ; Unknown 5xxx instruction
$87C    $3EAD   SE       VE, #AD         ; Skip if VE == 173
$87E    $10B2   JP       $0B2            ; Jump to 0B2
$880    $4656   SNE      V6, #56         ; Skip if V6 != 86
$882    $5338   UNKNOWN  $5338           ; Unknown 5xxx instruction
$884    $D539   DRW      V5, V3, #9      ; Draw 9-byte sprite at V5, V3
$886    $48FB   SNE      V8, #FB         ; Skip if V8 != 251
$888    $5B7C   UNKNOWN  $5B7C           ; Unknown 5xxx instruction
$88A    $618B   LD       V1, #8B         ; Load 139 into V1
$88C    $0B64   SYS      $B64            ; System call to B64
$88E    $A89E   LD       I, $89E         ; Load 89E into I
$890    $6CDE   LD       VC, #DE         ; Load 222 into VC
$892    $BD83   JP       V0, $D83        ; Jump to V0 + D83
$894    $AFF9   LD       I, $FF9         ; Load FF9 into I
$896    $5BF0   SE       VB, VF          ; Skip if VB == VF
$898    $4D98   SNE      VD, #98         ; Skip if VD != 152
$89A    $0CDE   SYS      $CDE            ; System call to CDE
$89C    $4005   SNE      V0, #05         ; Skip if V0 != 5
$89E    $E5DF   UNKNOWN  $E5DF           ; Unknown Exxx instruction
$8A0    $BCC6   JP       V0, $CC6        ; Jump to V0 + CC6
$8A2    $29A5   CALL     $9A5            ; Call subroutine at 9A5
$8A4    $EEAA   UNKNOWN  $EEAA           ; Unknown Exxx instruction
$8A6    $9615   UNKNOWN  $9615           ; Unknown 9xxx instruction
$8A8    $310C   SE       V1, #0C         ; Skip if V1 == 12
$8AA    $C161   RND      V1, #61         ; V1 = random & 61
$8AC    $13CC   JP       $3CC            ; Jump to 3CC
$8AE    $2495   CALL     $495            ; Call subroutine at 495
$8B0    $7602   ADD      V6, #02         ; Add 2 to V6
$8B2    $6CEA   LD       VC, #EA         ; Load 234 into VC
$8B4    $CA73   RND      VA, #73         ; VA = random & 73
$8B6    $6A89   LD       VA, #89         ; Load 137 into VA
$8B8    $F9E1   UNKNOWN  F9E1            ; Unknown Fxxx instruction
$8BA    $6AF3   LD       VA, #F3         ; Load 243 into VA
$8BC    $03E3   SYS      $3E3            ; System call to 3E3
$8BE    $3CE5   SE       VC, #E5         ; Skip if VC == 229
$8C0    $2756   CALL     $756            ; Call subroutine at 756
$8C2    $868D   UNKNOWN  868D            ; Unknown 8xxx instruction
$8C4    $B05E   JP       V0, $05E        ; Jump to V0 + 05E
$8C6    $61C4   LD       V1, #C4         ; Load 196 into V1
$8C8    $0E83   SYS      $E83            ; System call to E83
$8CA    $7444   ADD      V4, #44         ; Add 68 to V4
$8CC    $6623   LD       V6, #23         ; Load 35 into V6
$8CE    $9E6F   UNKNOWN  $9E6F           ; Unknown 9xxx instruction
$8D0    $0C33   SYS      $C33            ; System call to C33
$8D2    $1640   JP       $640            ; Jump to 640
$8D4    $6520   LD       V5, #20         ; Load 32 into V5
$8D6    $DD93   DRW      VD, V9, #3      ; Draw 3-byte sprite at VD, V9
$8D8    $1BA9   JP       $BA9            ; Jump to BA9
$8DA    $EC66   UNKNOWN  $EC66           ; Unknown Exxx instruction
$8DC    $AC8C   LD       I, $C8C         ; Load C8C into I
$8DE    $FD1D   UNKNOWN  FD1D            ; Unknown Fxxx instruction
$8E0    $403C   SNE      V0, #3C         ; Skip if V0 != 60
$8E2    $17E3   JP       $7E3            ; Jump to 7E3
$8E4    $A5AF   LD       I, $5AF         ; Load 5AF into I
$8E6    $08D6   SYS      $8D6            ; System call to 8D6
$8E8    $54ED   UNKNOWN  $54ED           ; Unknown 5xxx instruction
$8EA    $FAFC   UNKNOWN  FAFC            ; Unknown Fxxx instruction
$8EC    $9D8F   UNKNOWN  $9D8F           ; Unknown 9xxx instruction
$8EE    $615A   LD       V1, #5A         ; Load 90 into V1
$8F0    $D812   DRW      V8, V1, #2      ; Draw 2-byte sprite at V8, V1
$8F2    $5717   UNKNOWN  $5717           ; Unknown 5xxx instruction
$8F4    $4762   SNE      V7, #62         ; Skip if V7 != 98
$8F6    $D993   DRW      V9, V9, #3      ; Draw 3-byte sprite at V9, V9
$8F8    $E32E   UNKNOWN  $E32E           ; Unknown Exxx instruction
$8FA    $8B9E   SHL      VB              ; VB <<= 1, VF = MSB
$8FC    $5C33   UNKNOWN  $5C33           ; Unknown 5xxx instruction
$8FE    $E71A   UNKNOWN  $E71A           ; Unknown Exxx instruction
$900    $18A8   JP       $8A8            ; Jump to 8A8
$902    $0F98   SYS      $F98            ; System call to F98
$904    $C8AE   RND      V8, #AE         ; V8 = random & AE
$906    $1349   JP       $349            ; Jump to 349
$908    $13BE   JP       $3BE            ; Jump to 3BE
$90A    $982E   UNKNOWN  $982E           ; Unknown 9xxx instruction
$90C    $B692   JP       V0, $692        ; Jump to V0 + 692
$90E    $336F   SE       V3, #6F         ; Skip if V3 == 111
$910    $84CA   UNKNOWN  84CA            ; Unknown 8xxx instruction
$912    $972E   UNKNOWN  $972E           ; Unknown 9xxx instruction
$914    $997B   UNKNOWN  $997B           ; Unknown 9xxx instruction
$916    $5637   UNKNOWN  $5637           ; Unknown 5xxx instruction
$918    $7AA7   ADD      VA, #A7         ; Add 167 to VA
$91A    $A877   LD       I, $877         ; Load 877 into I
$91C    $BAC1   JP       V0, $AC1        ; Jump to V0 + AC1
$91E    $89FD   UNKNOWN  89FD            ; Unknown 8xxx instruction
$920    $04E3   SYS      $4E3            ; System call to 4E3
$922    $4609   SNE      V6, #09         ; Skip if V6 != 9
$924    $5441   UNKNOWN  $5441           ; Unknown 5xxx instruction
$926    $EFEE   UNKNOWN  $EFEE           ; Unknown Exxx instruction
$928    $1D2F   JP       $D2F            ; Jump to D2F
$92A    $AEB6   LD       I, $EB6         ; Load EB6 into I
$92C    $06A9   SYS      $6A9            ; System call to 6A9
$92E    $7F66   ADD      VF, #66         ; Add 102 to VF
$930    $DB33   DRW      VB, V3, #3      ; Draw 3-byte sprite at VB, V3
$932    $A8B8   LD       I, $8B8         ; Load 8B8 into I
$934    $8D7E   SHL      VD              ; VD <<= 1, VF = MSB
$936    $6286   LD       V2, #86         ; Load 134 into V2
$938    $7240   ADD      V2, #40         ; Add 64 to V2
$93A    $5264   UNKNOWN  $5264           ; Unknown 5xxx instruction
$93C    $1836   JP       $836            ; Jump to 836
$93E    $710C   ADD      V1, #0C         ; Add 12 to V1
$940    $1875   JP       $875            ; Jump to 875
$942    $F226   UNKNOWN  F226            ; Unknown Fxxx instruction
$944    $C4AA   RND      V4, #AA         ; V4 = random & AA
$946    $F9A7   UNKNOWN  F9A7            ; Unknown Fxxx instruction
$948    $C2F6   RND      V2, #F6         ; V2 = random & F6
$94A    $090F   SYS      $90F            ; System call to 90F
$94C    $C7D7   RND      V7, #D7         ; V7 = random & D7
$94E    $842C   UNKNOWN  842C            ; Unknown 8xxx instruction
$950    $9FEA   UNKNOWN  $9FEA           ; Unknown 9xxx instruction
$952    $B366   JP       V0, $366        ; Jump to V0 + 366
$954    $7D5E   ADD      VD, #5E         ; Add 94 to VD
$956    $E318   UNKNOWN  $E318           ; Unknown Exxx instruction
$958    $F602   UNKNOWN  F602            ; Unknown Fxxx instruction
$95A    $22E2   CALL     $2E2            ; Call subroutine at 2E2
$95C    $9F7B   UNKNOWN  $9F7B           ; Unknown 9xxx instruction
$95E    $B689   JP       V0, $689        ; Jump to V0 + 689
$960    $0014   SYS      $014            ; System call to 014
$962    $F1AC   UNKNOWN  F1AC            ; Unknown Fxxx instruction
$964    $6771   LD       V7, #71         ; Load 113 into V7
$966    $7DD7   ADD      VD, #D7         ; Add 215 to VD
$968    $B62C   JP       V0, $62C        ; Jump to V0 + 62C
$96A    $4530   SNE      V5, #30         ; Skip if V5 != 48
$96C    $2FDA   CALL     $FDA            ; Call subroutine at FDA
$96E    $4290   SNE      V2, #90         ; Skip if V2 != 144
$970    $07ED   SYS      $7ED            ; System call to 7ED
$972    $CF2D   RND      VF, #2D         ; VF = random & 2D
$974    $3A77   SE       VA, #77         ; Skip if VA == 119
$976    $EB55   UNKNOWN  $EB55           ; Unknown Exxx instruction
$978    $FF4D   UNKNOWN  FF4D            ; Unknown Fxxx instruction
$97A    $6DC1   LD       VD, #C1         ; Load 193 into VD
$97C    $DF9A   DRW      VF, V9, #A      ; Draw 10-byte sprite at VF, V9
$97E    $4C6D   SNE      VC, #6D         ; Skip if VC != 109
$980    $2B67   CALL     $B67            ; Call subroutine at B67
$982    $6196   LD       V1, #96         ; Load 150 into V1
$984    $A7EE   LD       I, $7EE         ; Load 7EE into I
$986    $5776   UNKNOWN  $5776           ; Unknown 5xxx instruction
$988    $863E   SHL      V6              ; V6 <<= 1, VF = MSB
$98A    $8EB6   SHR      VE              ; VE >>= 1, VF = LSB
$98C    $8F40   LD       VF, V4          ; VF = V4
$98E    $D9DB   DRW      V9, VD, #B      ; Draw 11-byte sprite at V9, VD
$990    $0192   SYS      $192            ; System call to 192
$992    $042E   SYS      $42E            ; System call to 42E
$994    $BB2F   JP       V0, $B2F        ; Jump to V0 + B2F
$996    $408F   SNE      V0, #8F         ; Skip if V0 != 143
$998    $DA77   DRW      VA, V7, #7      ; Draw 7-byte sprite at VA, V7
$99A    $05AE   SYS      $5AE            ; System call to 5AE
$99C    $94C5   UNKNOWN  $94C5           ; Unknown 9xxx instruction
$99E    $70FB   ADD      V0, #FB         ; Add 251 to V0
$9A0    $57BF   UNKNOWN  $57BF           ; Unknown 5xxx instruction
$9A2    $AA65   LD       I, $A65         ; Load A65 into I
$9A4    $D05F   DRW      V0, V5, #F      ; Draw 15-byte sprite at V0, V5
$9A6    $C947   RND      V9, #47         ; V9 = random & 47
$9A8    $0336   SYS      $336            ; System call to 336
$9AA    $AA09   LD       I, $A09         ; Load A09 into I
$9AC    $360E   SE       V6, #0E         ; Skip if V6 == 14
$9AE    $D635   DRW      V6, V3, #5      ; Draw 5-byte sprite at V6, V3
$9B0    $165D   JP       $65D            ; Jump to 65D
$9B2    $7DB3   ADD      VD, #B3         ; Add 179 to VD
$9B4    $ABE6   LD       I, $BE6         ; Load BE6 into I
$9B6    $6600   LD       V6, #00         ; Load 0 into V6
$9B8    $5909   UNKNOWN  $5909           ; Unknown 5xxx instruction
$9BA    $F052   UNKNOWN  F052            ; Unknown Fxxx instruction
$9BC    $7922   ADD      V9, #22         ; Add 34 to V9
$9BE    $D24F   DRW      V2, V4, #F      ; Draw 15-byte sprite at V2, V4
$9C0    $0FA1   SYS      $FA1            ; System call to FA1
$9C2    $542B   UNKNOWN  $542B           ; Unknown 5xxx instruction
$9C4    $6B97   LD       VB, #97         ; Load 151 into VB
$9C6    $9559   UNKNOWN  $9559           ; Unknown 9xxx instruction
$9C8    $426B   SNE      V2, #6B         ; Skip if V2 != 107
$9CA    $96EC   UNKNOWN  $96EC           ; Unknown 9xxx instruction
$9CC    $6785   LD       V7, #85         ; Load 133 into V7
$9CE    $C648   RND      V6, #48         ; V6 = random & 48
$9D0    $AAE3   LD       I, $AE3         ; Load AE3 into I
$9D2    $21D0   CALL     $1D0            ; Call subroutine at 1D0
$9D4    $EEF1   UNKNOWN  $EEF1           ; Unknown Exxx instruction
$9D6    $D8F1   DRW      V8, VF, #1      ; Draw 1-byte sprite at V8, VF
$9D8    $3C77   SE       VC, #77         ; Skip if VC == 119
$9DA    $BA2A   JP       V0, $A2A        ; Jump to V0 + A2A
$9DC    $C373   RND      V3, #73         ; V3 = random & 73
$9DE    $656B   LD       V5, #6B         ; Load 107 into V5
$9E0    $6A65   LD       VA, #65         ; Load 101 into VA
$9E2    $3E35   SE       VE, #35         ; Skip if VE == 53
$9E4    $F8C4   UNKNOWN  F8C4            ; Unknown Fxxx instruction
$9E6    $6033   LD       V0, #33         ; Load 51 into V0
$9E8    $DE3F   DRW      VE, V3, #F      ; Draw 15-byte sprite at VE, V3
$9EA    $818D   UNKNOWN  818D            ; Unknown 8xxx instruction
$9EC    $92AF   UNKNOWN  $92AF           ; Unknown 9xxx instruction
$9EE    $FC51   UNKNOWN  FC51            ; Unknown Fxxx instruction
$9F0    $6495   LD       V4, #95         ; Load 149 into V4
$9F2    $DC06   DRW      VC, V0, #6      ; Draw 6-byte sprite at VC, V0
$9F4    $F000   UNKNOWN  F000            ; Unknown Fxxx instruction
$9F6    $0106   SYS      $106            ; System call to 106
$9F8    $BD32   JP       V0, $D32        ; Jump to V0 + D32
$9FA    $1C45   JP       $C45            ; Jump to C45
$9FC    $029B   SYS      $29B            ; System call to 29B
$9FE    $7975   ADD      V9, #75         ; Add 117 to V9
$A00    $834B   UNKNOWN  834B            ; Unknown 8xxx instruction
$A02    $0886   SYS      $886            ; System call to 886
$A04    $8C9F   UNKNOWN  8C9F            ; Unknown 8xxx instruction
$A06    $73C0   ADD      V3, #C0         ; Add 192 to V3
$A08    $413C   SNE      V1, #3C         ; Skip if V1 != 60
$A0A    $C8FD   RND      V8, #FD         ; V8 = random & FD
$A0C    $5792   UNKNOWN  $5792           ; Unknown 5xxx instruction
$A0E    $105B   JP       $05B            ; Jump to 05B
$A10    $2820   CALL     $820            ; Call subroutine at 820
$A12    $EF11   UNKNOWN  $EF11           ; Unknown Exxx instruction
$A14    $A3CB   LD       I, $3CB         ; Load 3CB into I
$A16    $0889   SYS      $889            ; System call to 889
$A18    $F5BD   UNKNOWN  F5BD            ; Unknown Fxxx instruction
$A1A    $077F   SYS      $77F            ; System call to 77F
$A1C    $D74B   DRW      V7, V4, #B      ; Draw 11-byte sprite at V7, V4
$A1E    $3781   SE       V7, #81         ; Skip if V7 == 129
$A20    $6057   LD       V0, #57         ; Load 87 into V0
$A22    $A70D   LD       I, $70D         ; Load 70D into I
$A24    $54CC   UNKNOWN  $54CC           ; Unknown 5xxx instruction
$A26    $1D52   JP       $D52            ; Jump to D52
$A28    $A88A   LD       I, $88A         ; Load 88A into I
$A2A    $035A   SYS      $35A            ; System call to 35A
$A2C    $B80A   JP       V0, $80A        ; Jump to V0 + 80A
$A2E    $FBF6   UNKNOWN  FBF6            ; Unknown Fxxx instruction
$A30    $06F0   SYS      $6F0            ; System call to 6F0
$A32    $7833   ADD      V8, #33         ; Add 51 to V8
$A34    $E8EC   UNKNOWN  $E8EC           ; Unknown Exxx instruction
$A36    $44B9   SNE      V4, #B9         ; Skip if V4 != 185
$A38    $F9FE   UNKNOWN  F9FE            ; Unknown Fxxx instruction
$A3A    $A68A   LD       I, $68A         ; Load 68A into I
$A3C    $7BD1   ADD      VB, #D1         ; Add 209 to VB
$A3E    $974E   UNKNOWN  $974E           ; Unknown 9xxx instruction
$A40    $804D   UNKNOWN  804D            ; Unknown 8xxx instruction
$A42    $5258   UNKNOWN  $5258           ; Unknown 5xxx instruction
$A44    $0D27   SYS      $D27            ; System call to D27
$A46    $92BC   UNKNOWN  $92BC           ; Unknown 9xxx instruction
$A48    $152A   JP       $52A            ; Jump to 52A
$A4A    $7B41   ADD      VB, #41         ; Add 65 to VB
$A4C    $5889   UNKNOWN  $5889           ; Unknown 5xxx instruction
$A4E    $DA36   DRW      VA, V3, #6      ; Draw 6-byte sprite at VA, V3
$A50    $EABB   UNKNOWN  $EABB           ; Unknown Exxx instruction
$A52    $BCB1   JP       V0, $CB1        ; Jump to V0 + CB1
$A54    $3D03   SE       VD, #03         ; Skip if VD == 3
$A56    $5CD0   SE       VC, VD          ; Skip if VC == VD
$A58    $40AE   SNE      V0, #AE         ; Skip if V0 != 174
$A5A    $EEEC   UNKNOWN  $EEEC           ; Unknown Exxx instruction
$A5C    $7783   ADD      V7, #83         ; Add 131 to V7
$A5E    $B531   JP       V0, $531        ; Jump to V0 + 531
$A60    $581F   UNKNOWN  $581F           ; Unknown 5xxx instruction
$A62    $1B59   JP       $B59            ; Jump to B59
$A64    $9690   SNE      V6, V9          ; Skip if V6 != V9
$A66    $896D   UNKNOWN  896D            ; Unknown 8xxx instruction
$A68    $79CF   ADD      V9, #CF         ; Add 207 to V9
$A6A    $1036   JP       $036            ; Jump to 036
$A6C    $CAAD   RND      VA, #AD         ; VA = random & AD
$A6E    $ACC0   LD       I, $CC0         ; Load CC0 into I
$A70    $5986   UNKNOWN  $5986           ; Unknown 5xxx instruction
$A72    $6D44   LD       VD, #44         ; Load 68 into VD
$A74    $7D54   ADD      VD, #54         ; Add 84 to VD
$A76    $FA40   UNKNOWN  FA40            ; Unknown Fxxx instruction
$A78    $C585   RND      V5, #85         ; V5 = random & 85
$A7A    $7226   ADD      V2, #26         ; Add 38 to V2
$A7C    $A133   LD       I, $133         ; Load 133 into I
$A7E    $877B   UNKNOWN  877B            ; Unknown 8xxx instruction
$A80    $E416   UNKNOWN  $E416           ; Unknown Exxx instruction
$A82    $EF03   UNKNOWN  $EF03           ; Unknown Exxx instruction
$A84    $2F4B   CALL     $F4B            ; Call subroutine at F4B
$A86    $9166   UNKNOWN  $9166           ; Unknown 9xxx instruction
$A88    $BEEE   JP       V0, $EEE        ; Jump to V0 + EEE
$A8A    $5453   UNKNOWN  $5453           ; Unknown 5xxx instruction
$A8C    $E95E   UNKNOWN  $E95E           ; Unknown Exxx instruction
$A8E    $CBBD   RND      VB, #BD         ; VB = random & BD
$A90    $A297   LD       I, $297         ; Load 297 into I
$A92    $25D9   CALL     $5D9            ; Call subroutine at 5D9
$A94    $B0DB   JP       V0, $0DB        ; Jump to V0 + 0DB
$A96    $8288   UNKNOWN  8288            ; Unknown 8xxx instruction
$A98    $2F9F   CALL     $F9F            ; Call subroutine at F9F
$A9A    $56B9   UNKNOWN  $56B9           ; Unknown 5xxx instruction
$A9C    $F9F2   UNKNOWN  F9F2            ; Unknown Fxxx instruction
$A9E    $8FD4   ADD      VF, VD          ; VF += VD, VF = carry
$AA0    $ACF7   LD       I, $CF7         ; Load CF7 into I
$AA2    $14AC   JP       $4AC            ; Jump to 4AC
$AA4    $3426   SE       V4, #26         ; Skip if V4 == 38
$AA6    $8357   SUBN     V3, V5          ; V3 = V5 - V3, VF = !borrow
$AA8    $31BD   SE       V1, #BD         ; Skip if V1 == 189
$AAA    $E715   UNKNOWN  $E715           ; Unknown Exxx instruction
$AAC    $92AA   UNKNOWN  $92AA           ; Unknown 9xxx instruction
$AAE    $5B39   UNKNOWN  $5B39           ; Unknown 5xxx instruction
$AB0    $BCB4   JP       V0, $CB4        ; Jump to V0 + CB4
$AB2    $3637   SE       V6, #37         ; Skip if V6 == 55
$AB4    $F10D   UNKNOWN  F10D            ; Unknown Fxxx instruction
$AB6    $4D13   SNE      VD, #13         ; Skip if VD != 19
$AB8    $1640   JP       $640            ; Jump to 640
$ABA    $5059   UNKNOWN  $5059           ; Unknown 5xxx instruction
$ABC    $1143   JP       $143            ; Jump to 143
$ABE    $5850   SE       V8, V5          ; Skip if V8 == V5
$AC0    $365E   SE       V6, #5E         ; Skip if V6 == 94
$AC2    $2844   CALL     $844            ; Call subroutine at 844
$AC4    $9442   UNKNOWN  $9442           ; Unknown 9xxx instruction
$AC6    $F7F9   UNKNOWN  F7F9            ; Unknown Fxxx instruction
$AC8    $20C4   CALL     $0C4            ; Call subroutine at 0C4
$ACA    $7EB1   ADD      VE, #B1         ; Add 177 to VE
$ACC    $A658   LD       I, $658         ; Load 658 into I
$ACE    $ED8D   UNKNOWN  $ED8D           ; Unknown Exxx instruction
$AD0    $5C85   UNKNOWN  $5C85           ; Unknown 5xxx instruction
$AD2    $C4F3   RND      V4, #F3         ; V4 = random & F3
$AD4    $7AAB   ADD      VA, #AB         ; Add 171 to VA
$AD6    $F3C8   UNKNOWN  F3C8            ; Unknown Fxxx instruction
$AD8    $83D5   SUB      V3, VD          ; V3 -= VD, VF = !borrow
$ADA    $D21B   DRW      V2, V1, #B      ; Draw 11-byte sprite at V2, V1
$ADC    $8704   ADD      V7, V0          ; V7 += V0, VF = carry
$ADE    $A4B0   LD       I, $4B0         ; Load 4B0 into I
$AE0    $F003   UNKNOWN  F003            ; Unknown Fxxx instruction
$AE2    $9AC3   UNKNOWN  $9AC3           ; Unknown 9xxx instruction
$AE4    $149B   JP       $49B            ; Jump to 49B
$AE6    $3F82   SE       VF, #82         ; Skip if VF == 130
$AE8    $A821   LD       I, $821         ; Load 821 into I
$AEA    $2CC9   CALL     $CC9            ; Call subroutine at CC9
$AEC    $C404   RND      V4, #04         ; V4 = random & 04
$AEE    $2347   CALL     $347            ; Call subroutine at 347
$AF0    $5BC3   UNKNOWN  $5BC3           ; Unknown 5xxx instruction
$AF2    $63E8   LD       V3, #E8         ; Load 232 into V3
$AF4    $3D1C   SE       VD, #1C         ; Skip if VD == 28
$AF6    $6B3F   LD       VB, #3F         ; Load 63 into VB
$AF8    $D356   DRW      V3, V5, #6      ; Draw 6-byte sprite at V3, V5
$AFA    $DBE1   DRW      VB, VE, #1      ; Draw 1-byte sprite at VB, VE
$AFC    $3D5E   SE       VD, #5E         ; Skip if VD == 94
$AFE    $57B7   UNKNOWN  $57B7           ; Unknown 5xxx instruction
$B00    $EDEF   UNKNOWN  $EDEF           ; Unknown Exxx instruction
$B02    $09A0   SYS      $9A0            ; System call to 9A0
$B04    $B964   JP       V0, $964        ; Jump to V0 + 964
$B06    $DA56   DRW      VA, V5, #6      ; Draw 6-byte sprite at VA, V5
$B08    $7662   ADD      V6, #62         ; Add 98 to V6
$B0A    $5CD6   UNKNOWN  $5CD6           ; Unknown 5xxx instruction
$B0C    $44BA   SNE      V4, #BA         ; Skip if V4 != 186
$B0E    $0116   SYS      $116            ; System call to 116
$B10    $FDA9   UNKNOWN  FDA9            ; Unknown Fxxx instruction
$B12    $78E0   ADD      V8, #E0         ; Add 224 to V8
$B14    $13FA   JP       $3FA            ; Jump to 3FA
$B16    $61B8   LD       V1, #B8         ; Load 184 into V1
$B18    $37EA   SE       V7, #EA         ; Skip if V7 == 234
$B1A    $7FA5   ADD      VF, #A5         ; Add 165 to VF
$B1C    $7C59   ADD      VC, #59         ; Add 89 to VC
$B1E    $D818   DRW      V8, V1, #8      ; Draw 8-byte sprite at V8, V1
$B20    $28D4   CALL     $8D4            ; Call subroutine at 8D4
$B22    $23B1   CALL     $3B1            ; Call subroutine at 3B1
$B24    $BDA2   JP       V0, $DA2        ; Jump to V0 + DA2
$B26    $5E0B   UNKNOWN  $5E0B           ; Unknown 5xxx instruction
$B28    $005F   SYS      $05F            ; System call to 05F
$B2A    $FF9B   UNKNOWN  FF9B            ; Unknown Fxxx instruction
$B2C    $13EA   JP       $3EA            ; Jump to 3EA
$B2E    $82F9   UNKNOWN  82F9            ; Unknown 8xxx instruction
$B30    $6F0B   LD       VF, #0B         ; Load 11 into VF
$B32    $26B4   CALL     $6B4            ; Call subroutine at 6B4
$B34    $E7A7   UNKNOWN  $E7A7           ; Unknown Exxx instruction
$B36    $57D7   UNKNOWN  $57D7           ; Unknown 5xxx instruction
$B38    $4104   SNE      V1, #04         ; Skip if V1 != 4
$B3A    $65C0   LD       V5, #C0         ; Load 192 into V5
$B3C    $8D45   SUB      VD, V4          ; VD -= V4, VF = !borrow
$B3E    $3309   SE       V3, #09         ; Skip if V3 == 9
$B40    $FEF1   UNKNOWN  FEF1            ; Unknown Fxxx instruction
$B42    $DD55   DRW      VD, V5, #5      ; Draw 5-byte sprite at VD, V5
$B44    $B744   JP       V0, $744        ; Jump to V0 + 744
$B46    $BED4   JP       V0, $ED4        ; Jump to V0 + ED4
$B48    $2D3D   CALL     $D3D            ; Call subroutine at D3D
$B4A    $26C9   CALL     $6C9            ; Call subroutine at 6C9
$B4C    $E3C5   UNKNOWN  $E3C5           ; Unknown Exxx instruction
$B4E    $1714   JP       $714            ; Jump to 714
$B50    $D535   DRW      V5, V3, #5      ; Draw 5-byte sprite at V5, V3
$B52    $508B   UNKNOWN  $508B           ; Unknown 5xxx instruction
$B54    $95D3   UNKNOWN  $95D3           ; Unknown 9xxx instruction
$B56    $B25D   JP       V0, $25D        ; Jump to V0 + 25D
$B58    $1EE3   JP       $EE3            ; Jump to EE3
$B5A    $8217   SUBN     V2, V1          ; V2 = V1 - V2, VF = !borrow
$B5C    $B3FE   JP       V0, $3FE        ; Jump to V0 + 3FE
$B5E    $212E   CALL     $12E            ; Call subroutine at 12E
$B60    $2D2D   CALL     $D2D            ; Call subroutine at D2D
$B62    $3EFD   SE       VE, #FD         ; Skip if VE == 253
$B64    $F31B   UNKNOWN  F31B            ; Unknown Fxxx instruction
$B66    $F708   UNKNOWN  F708            ; Unknown Fxxx instruction
$B68    $1A66   JP       $A66            ; Jump to A66
$B6A    $1052   JP       $052            ; Jump to 052
$B6C    $7C24   ADD      VC, #24         ; Add 36 to VC
$B6E    $D773   DRW      V7, V7, #3      ; Draw 3-byte sprite at V7, V7
$B70    $A895   LD       I, $895         ; Load 895 into I
$B72    $F7ED   UNKNOWN  F7ED            ; Unknown Fxxx instruction
$B74    $FF73   UNKNOWN  FF73            ; Unknown Fxxx instruction
$B76    $685B   LD       V8, #5B         ; Load 91 into V8
$B78    $9305   UNKNOWN  $9305           ; Unknown 9xxx instruction
$B7A    $C29B   RND      V2, #9B         ; V2 = random & 9B
$B7C    $FC99   UNKNOWN  FC99            ; Unknown Fxxx instruction
$B7E    $AE1D   LD       I, $E1D         ; Load E1D into I
$B80    $5AAF   UNKNOWN  $5AAF           ; Unknown 5xxx instruction
$B82    $D21D   DRW      V2, V1, #D      ; Draw 13-byte sprite at V2, V1
$B84    $BE1C   JP       V0, $E1C        ; Jump to V0 + E1C
$B86    $EA77   UNKNOWN  $EA77           ; Unknown Exxx instruction
$B88    $F6A1   UNKNOWN  F6A1            ; Unknown Fxxx instruction
$B8A    $2F96   CALL     $F96            ; Call subroutine at F96
$B8C    $4B13   SNE      VB, #13         ; Skip if VB != 19
$B8E    $920A   UNKNOWN  $920A           ; Unknown 9xxx instruction
$B90    $413C   SNE      V1, #3C         ; Skip if V1 != 60
$B92    $C82E   RND      V8, #2E         ; V8 = random & 2E
$B94    $A0A3   LD       I, $0A3         ; Load 0A3 into I
$B96    $6DEB   LD       VD, #EB         ; Load 235 into VD
$B98    $4778   SNE      V7, #78         ; Skip if V7 != 120
$B9A    $E3AE   UNKNOWN  $E3AE           ; Unknown Exxx instruction
$B9C    $EA65   UNKNOWN  $EA65           ; Unknown Exxx instruction
$B9E    $58DC   UNKNOWN  $58DC           ; Unknown 5xxx instruction
$BA0    $3B68   SE       VB, #68         ; Skip if VB == 104
$BA2    $2CAD   CALL     $CAD            ; Call subroutine at CAD
$BA4    $194E   JP       $94E            ; Jump to 94E
$BA6    $EDFB   UNKNOWN  $EDFB           ; Unknown Exxx instruction
$BA8    $5C8C   UNKNOWN  $5C8C           ; Unknown 5xxx instruction
$BAA    $97CE   UNKNOWN  $97CE           ; Unknown 9xxx instruction
$BAC    $26F3   CALL     $6F3            ; Call subroutine at 6F3
$BAE    $F271   UNKNOWN  F271            ; Unknown Fxxx instruction
$BB0    $C6F5   RND      V6, #F5         ; V6 = random & F5
$BB2    $DCFA   DRW      VC, VF, #A      ; Draw 10-byte sprite at VC, VF
$BB4    $7F13   ADD      VF, #13         ; Add 19 to VF
$BB6    $0321   SYS      $321            ; System call to 321
$BB8    $4ECD   SNE      VE, #CD         ; Skip if VE != 205
$BBA    $7E46   ADD      VE, #46         ; Add 70 to VE
$BBC    $2342   CALL     $342            ; Call subroutine at 342
$BBE    $62B9   LD       V2, #B9         ; Load 185 into V2
$BC0    $6EE8   LD       VE, #E8         ; Load 232 into VE
$BC2    $ACCA   LD       I, $CCA         ; Load CCA into I
$BC4    $8321   OR       V3, V2          ; V3 |= V2
$BC6    $7CA6   ADD      VC, #A6         ; Add 166 to VC
$BC8    $F492   UNKNOWN  F492            ; Unknown Fxxx instruction
$BCA    $EF2E   UNKNOWN  $EF2E           ; Unknown Exxx instruction
$BCC    $391F   SE       V9, #1F         ; Skip if V9 == 31
$BCE    $D76B   DRW      V7, V6, #B      ; Draw 11-byte sprite at V7, V6
$BD0    $FBDE   UNKNOWN  FBDE            ; Unknown Fxxx instruction
$BD2    $53F5   UNKNOWN  $53F5           ; Unknown 5xxx instruction
$BD4    $4C14   SNE      VC, #14         ; Skip if VC != 20
$BD6    $8B7F   UNKNOWN  8B7F            ; Unknown 8xxx instruction
$BD8    $BAEA   JP       V0, $AEA        ; Jump to V0 + AEA
$BDA    $5124   UNKNOWN  $5124           ; Unknown 5xxx instruction
$BDC    $6532   LD       V5, #32         ; Load 50 into V5
$BDE    $7C81   ADD      VC, #81         ; Add 129 to VC
$BE0    $F8BA   UNKNOWN  F8BA            ; Unknown Fxxx instruction
$BE2    $13E8   JP       $3E8            ; Jump to 3E8
$BE4    $2B1C   CALL     $B1C            ; Call subroutine at B1C
$BE6    $3840   SE       V8, #40         ; Skip if V8 == 64
$BE8    $CA27   RND      VA, #27         ; VA = random & 27
$BEA    $5B88   UNKNOWN  $5B88           ; Unknown 5xxx instruction
$BEC    $4461   SNE      V4, #61         ; Skip if V4 != 97
$BEE    $8249   UNKNOWN  8249            ; Unknown 8xxx instruction
$BF0    $D039   DRW      V0, V3, #9      ; Draw 9-byte sprite at V0, V3
$BF2    $681E   LD       V8, #1E         ; Load 30 into V8
$BF4    $D3C3   DRW      V3, VC, #3      ; Draw 3-byte sprite at V3, VC
$BF6    $4416   SNE      V4, #16         ; Skip if V4 != 22
$BF8    $C735   RND      V7, #35         ; V7 = random & 35
$BFA    $E982   UNKNOWN  $E982           ; Unknown Exxx instruction
$BFC    $89C9   UNKNOWN  89C9            ; Unknown 8xxx instruction
$BFE    $A748   LD       I, $748         ; Load 748 into I
$C00    $D7B3   DRW      V7, VB, #3      ; Draw 3-byte sprite at V7, VB
$C02    $EAAC   UNKNOWN  $EAAC           ; Unknown Exxx instruction
$C04    $BF50   JP       V0, $F50        ; Jump to V0 + F50
$C06    $A320   LD       I, $320         ; Load 320 into I
$C08    $7A2D   ADD      VA, #2D         ; Add 45 to VA
$C0A    $20F1   CALL     $0F1            ; Call subroutine at 0F1
$C0C    $4D64   SNE      VD, #64         ; Skip if VD != 100
$C0E    $264E   CALL     $64E            ; Call subroutine at 64E
$C10    $E58E   UNKNOWN  $E58E           ; Unknown Exxx instruction
$C12    $C29A   RND      V2, #9A         ; V2 = random & 9A
$C14    $0FD9   SYS      $FD9            ; System call to FD9
$C16    $F039   UNKNOWN  F039            ; Unknown Fxxx instruction
$C18    $3E8C   SE       VE, #8C         ; Skip if VE == 140
$C1A    $C48E   RND      V4, #8E         ; V4 = random & 8E
$C1C    $1F5B   JP       $F5B            ; Jump to F5B
$C1E    $303B   SE       V0, #3B         ; Skip if V0 == 59
$C20    $CC66   RND      VC, #66         ; VC = random & 66
$C22    $E242   UNKNOWN  $E242           ; Unknown Exxx instruction
$C24    $0362   SYS      $362            ; System call to 362
$C26    $FFF2   UNKNOWN  FFF2            ; Unknown Fxxx instruction
$C28    $CDC7   RND      VD, #C7         ; VD = random & C7
$C2A    $D121   DRW      V1, V2, #1      ; Draw 1-byte sprite at V1, V2
$C2C    $8CE3   XOR      VC, VE          ; VC ^= VE
$C2E    $EE4D   UNKNOWN  $EE4D           ; Unknown Exxx instruction
$C30    $1F5D   JP       $F5D            ; Jump to F5D
$C32    $5342   UNKNOWN  $5342           ; Unknown 5xxx instruction
$C34    $CBF1   RND      VB, #F1         ; VB = random & F1
$C36    $4D87   SNE      VD, #87         ; Skip if VD != 135
$C38    $B1F6   JP       V0, $1F6        ; Jump to V0 + 1F6
$C3A    $7382   ADD      V3, #82         ; Add 130 to V3
$C3C    $3014   SE       V0, #14         ; Skip if V0 == 20
$C3E    $04C0   SYS      $4C0            ; System call to 4C0
$C40    $CAB0   RND      VA, #B0         ; VA = random & B0
$C42    $CCF0   RND      VC, #F0         ; VC = random & F0
$C44    $FF59   UNKNOWN  FF59            ; Unknown Fxxx instruction
$C46    $BA18   JP       V0, $A18        ; Jump to V0 + A18
$C48    $1E65   JP       $E65            ; Jump to E65
$C4A    $8F16   SHR      VF              ; VF >>= 1, VF = LSB
$C4C    $DB37   DRW      VB, V3, #7      ; Draw 7-byte sprite at VB, V3
$C4E    $5695   UNKNOWN  $5695           ; Unknown 5xxx instruction
$C50    $4658   SNE      V6, #58         ; Skip if V6 != 88
$C52    $63E6   LD       V3, #E6         ; Load 230 into V3
$C54    $B2C4   JP       V0, $2C4        ; Jump to V0 + 2C4
$C56    $0389   SYS      $389            ; System call to 389
$C58    $780E   ADD      V8, #0E         ; Add 14 to V8
$C5A    $753E   ADD      V5, #3E         ; Add 62 to V5
$C5C    $1CC9   JP       $CC9            ; Jump to CC9
$C5E    $CC90   RND      VC, #90         ; VC = random & 90
$C60    $F458   UNKNOWN  F458            ; Unknown Fxxx instruction
$C62    $3A5C   SE       VA, #5C         ; Skip if VA == 92
$C64    $5D54   UNKNOWN  $5D54           ; Unknown 5xxx instruction
$C66    $5731   UNKNOWN  $5731           ; Unknown 5xxx instruction
$C68    $6EF5   LD       VE, #F5         ; Load 245 into VE
$C6A    $A6E2   LD       I, $6E2         ; Load 6E2 into I
$C6C    $2BDA   CALL     $BDA            ; Call subroutine at BDA
$C6E    $D0B3   DRW      V0, VB, #3      ; Draw 3-byte sprite at V0, VB
$C70    $3837   SE       V8, #37         ; Skip if V8 == 55
$C72    $B24B   JP       V0, $24B        ; Jump to V0 + 24B
$C74    $CD2F   RND      VD, #2F         ; VD = random & 2F
$C76    $79B3   ADD      V9, #B3         ; Add 179 to V9
$C78    $62D7   LD       V2, #D7         ; Load 215 into V2
$C7A    $C16C   RND      V1, #6C         ; V1 = random & 6C
$C7C    $4395   SNE      V3, #95         ; Skip if V3 != 149
$C7E    $EA4F   UNKNOWN  $EA4F           ; Unknown Exxx instruction
$C80    $C912   RND      V9, #12         ; V9 = random & 12
$C82    $19EE   JP       $9EE            ; Jump to 9EE
$C84    $E950   UNKNOWN  $E950           ; Unknown Exxx instruction
$C86    $B11E   JP       V0, $11E        ; Jump to V0 + 11E
$C88    $1F64   JP       $F64            ; Jump to F64
$C8A    $B67D   JP       V0, $67D        ; Jump to V0 + 67D
$C8C    $15E1   JP       $5E1            ; Jump to 5E1
$C8E    $27D8   CALL     $7D8            ; Call subroutine at 7D8
$C90    $C12F   RND      V1, #2F         ; V1 = random & 2F
$C92    $EB76   UNKNOWN  $EB76           ; Unknown Exxx instruction
$C94    $668B   LD       V6, #8B         ; Load 139 into V6
$C96    $31F9   SE       V1, #F9         ; Skip if V1 == 249
$C98    $E19A   UNKNOWN  $E19A           ; Unknown Exxx instruction
$C9A    $B20C   JP       V0, $20C        ; Jump to V0 + 20C
$C9C    $AD39   LD       I, $D39         ; Load D39 into I
$C9E    $DD04   DRW      VD, V0, #4      ; Draw 4-byte sprite at VD, V0
$CA0    $078B   SYS      $78B            ; System call to 78B
$CA2    $6F66   LD       VF, #66         ; Load 102 into VF
$CA4    $4916   SNE      V9, #16         ; Skip if V9 != 22
$CA6    $05C7   SYS      $5C7            ; System call to 5C7
$CA8    $0243   SYS      $243            ; System call to 243
$CAA    $36F7   SE       V6, #F7         ; Skip if V6 == 247
$CAC    $F14F   UNKNOWN  F14F            ; Unknown Fxxx instruction
$CAE    $C7FE   RND      V7, #FE         ; V7 = random & FE
$CB0    $384C   SE       V8, #4C         ; Skip if V8 == 76
$CB2    $CB33   RND      VB, #33         ; VB = random & 33
$CB4    $D287   DRW      V2, V8, #7      ; Draw 7-byte sprite at V2, V8
$CB6    $EF0B   UNKNOWN  $EF0B           ; Unknown Exxx instruction
$CB8    $13DB   JP       $3DB            ; Jump to 3DB
$CBA    $ECDA   UNKNOWN  $ECDA           ; Unknown Exxx instruction
$CBC    $6016   LD       V0, #16         ; Load 22 into V0
$CBE    $8F69   UNKNOWN  8F69            ; Unknown 8xxx instruction
$CC0    $9888   UNKNOWN  $9888           ; Unknown 9xxx instruction
$CC2    $5038   UNKNOWN  $5038           ; Unknown 5xxx instruction
$CC4    $1D40   JP       $D40            ; Jump to D40
$CC6    $F429   LD       F, V4           ; I = sprite address for digit V4
$CC8    $70C5   ADD      V0, #C5         ; Add 197 to V0
$CCA    $F194   UNKNOWN  F194            ; Unknown Fxxx instruction
$CCC    $FB2F   UNKNOWN  FB2F            ; Unknown Fxxx instruction
$CCE    $96C9   UNKNOWN  $96C9           ; Unknown 9xxx instruction
$CD0    $DC70   DRW      VC, V7, #0      ; Draw 0-byte sprite at VC, V7
$CD2    $2C2F   CALL     $C2F            ; Call subroutine at C2F
$CD4    $EE1A   UNKNOWN  $EE1A           ; Unknown Exxx instruction
$CD6    $63A0   LD       V3, #A0         ; Load 160 into V3
$CD8    $7009   ADD      V0, #09         ; Add 9 to V0
$CDA    $686B   LD       V8, #6B         ; Load 107 into V8
$CDC    $86D6   SHR      V6              ; V6 >>= 1, VF = LSB
$CDE    $CF44   RND      VF, #44         ; VF = random & 44
$CE0    $215D   CALL     $15D            ; Call subroutine at 15D
$CE2    $8C28   UNKNOWN  8C28            ; Unknown 8xxx instruction
$CE4    $8111   OR       V1, V1          ; V1 |= V1
$CE6    $4392   SNE      V3, #92         ; Skip if V3 != 146
$CE8    $4A81   SNE      VA, #81         ; Skip if VA != 129
$CEA    $04A0   SYS      $4A0            ; System call to 4A0
$CEC    $5A0D   UNKNOWN  $5A0D           ; Unknown 5xxx instruction
$CEE    $2977   CALL     $977            ; Call subroutine at 977
$CF0    $C3D0   RND      V3, #D0         ; V3 = random & D0
$CF2    $1297   JP       $297            ; Jump to 297
$CF4    $46CA   SNE      V6, #CA         ; Skip if V6 != 202
$CF6    $1FE5   JP       $FE5            ; Jump to FE5
$CF8    $3782   SE       V7, #82         ; Skip if V7 == 130
$CFA    $D07B   DRW      V0, V7, #B      ; Draw 11-byte sprite at V0, V7
$CFC    $DA78   DRW      VA, V7, #8      ; Draw 8-byte sprite at VA, V7
$CFE    $76A9   ADD      V6, #A9         ; Add 169 to V6
$D00    $06EE   SYS      $6EE            ; System call to 6EE
$D02    $2BCC   CALL     $BCC            ; Call subroutine at BCC
$D04    $7D09   ADD      VD, #09         ; Add 9 to VD
$D06    $CCE2   RND      VC, #E2         ; VC = random & E2
$D08    $AB20   LD       I, $B20         ; Load B20 into I
$D0A    $6B8E   LD       VB, #8E         ; Load 142 into VB
$D0C    $D772   DRW      V7, V7, #2      ; Draw 2-byte sprite at V7, V7
$D0E    $46B2   SNE      V6, #B2         ; Skip if V6 != 178
$D10    $D763   DRW      V7, V6, #3      ; Draw 3-byte sprite at V7, V6
$D12    $C504   RND      V5, #04         ; V5 = random & 04
$D14    $C6A1   RND      V6, #A1         ; V6 = random & A1
$D16    $EBFF   UNKNOWN  $EBFF           ; Unknown Exxx instruction
$D18    $1302   JP       $302            ; Jump to 302
$D1A    $C729   RND      V7, #29         ; V7 = random & 29
$D1C    $B299   JP       V0, $299        ; Jump to V0 + 299
$D1E    $3E8D   SE       VE, #8D         ; Skip if VE == 141
$D20    $729C   ADD      V2, #9C         ; Add 156 to V2
$D22    $F9C6   UNKNOWN  F9C6            ; Unknown Fxxx instruction
$D24    $C5FA   RND      V5, #FA         ; V5 = random & FA
$D26    $ED4D   UNKNOWN  $ED4D           ; Unknown Exxx instruction
$D28    $8095   SUB      V0, V9          ; V0 -= V9, VF = !borrow
$D2A    $354D   SE       V5, #4D         ; Skip if V5 == 77
$D2C    $85AC   UNKNOWN  85AC            ; Unknown 8xxx instruction
$D2E    $BD39   JP       V0, $D39        ; Jump to V0 + D39
$D30    $C840   RND      V8, #40         ; V8 = random & 40
$D32    $F15D   UNKNOWN  F15D            ; Unknown Fxxx instruction
$D34    $5A93   UNKNOWN  $5A93           ; Unknown 5xxx instruction
$D36    $6C5C   LD       VC, #5C         ; Load 92 into VC
$D38    $0672   SYS      $672            ; System call to 672
$D3A    $88DF   UNKNOWN  88DF            ; Unknown 8xxx instruction
$D3C    $8333   XOR      V3, V3          ; V3 ^= V3
$D3E    $40B3   SNE      V0, #B3         ; Skip if V0 != 179
$D40    $445E   SNE      V4, #5E         ; Skip if V4 != 94
$D42    $4F9F   SNE      VF, #9F         ; Skip if VF != 159
$D44    $7CA3   ADD      VC, #A3         ; Add 163 to VC
$D46    $1CB3   JP       $CB3            ; Jump to CB3
$D48    $E824   UNKNOWN  $E824           ; Unknown Exxx instruction
$D4A    $D7C4   DRW      V7, VC, #4      ; Draw 4-byte sprite at V7, VC
$D4C    $1B84   JP       $B84            ; Jump to B84
$D4E    $6A14   LD       VA, #14         ; Load 20 into VA
$D50    $2FEA   CALL     $FEA            ; Call subroutine at FEA
$D52    $6DC1   LD       VD, #C1         ; Load 193 into VD
$D54    $A1C2   LD       I, $1C2         ; Load 1C2 into I
$D56    $511C   UNKNOWN  $511C           ; Unknown 5xxx instruction
$D58    $8CD4   ADD      VC, VD          ; VC += VD, VF = carry
$D5A    $499F   SNE      V9, #9F         ; Skip if V9 != 159
$D5C    $BE19   JP       V0, $E19        ; Jump to V0 + E19
$D5E    $2C17   CALL     $C17            ; Call subroutine at C17
$D60    $E653   UNKNOWN  $E653           ; Unknown Exxx instruction
$D62    $082C   SYS      $82C            ; System call to 82C
$D64    $5ABD   UNKNOWN  $5ABD           ; Unknown 5xxx instruction
$D66    $9B3D   UNKNOWN  $9B3D           ; Unknown 9xxx instruction
$D68    $BA15   JP       V0, $A15        ; Jump to V0 + A15
$D6A    $4C98   SNE      VC, #98         ; Skip if VC != 152
$D6C    $9A78   UNKNOWN  $9A78           ; Unknown 9xxx instruction
$D6E    $4648   SNE      V6, #48         ; Skip if V6 != 72
$D70    $C1D2   RND      V1, #D2         ; V1 = random & D2
$D72    $3464   SE       V4, #64         ; Skip if V4 == 100
$D74    $DF75   DRW      VF, V7, #5      ; Draw 5-byte sprite at VF, V7
$D76    $8E7D   UNKNOWN  8E7D            ; Unknown 8xxx instruction
$D78    $3A45   SE       VA, #45         ; Skip if VA == 69
$D7A    $250C   CALL     $50C            ; Call subroutine at 50C
$D7C    $98D8   UNKNOWN  $98D8           ; Unknown 9xxx instruction
$D7E    $3CC7   SE       VC, #C7         ; Skip if VC == 199
$D80    $A385   LD       I, $385         ; Load 385 into I
$D82    $EE10   UNKNOWN  $EE10           ; Unknown Exxx instruction
$D84    $6502   LD       V5, #02         ; Load 2 into V5
$D86    $3682   SE       V6, #82         ; Skip if V6 == 130
$D88    $8C71   OR       VC, V7          ; VC |= V7
$D8A    $4F94   SNE      VF, #94         ; Skip if VF != 148
$D8C    $ECC4   UNKNOWN  $ECC4           ; Unknown Exxx instruction
$D8E    $411D   SNE      V1, #1D         ; Skip if V1 != 29
$D90    $97EE   UNKNOWN  $97EE           ; Unknown 9xxx instruction
$D92    $47B8   SNE      V7, #B8         ; Skip if V7 != 184
$D94    $E80C   UNKNOWN  $E80C           ; Unknown Exxx instruction
$D96    $B478   JP       V0, $478        ; Jump to V0 + 478
$D98    $05A4   SYS      $5A4            ; System call to 5A4
$D9A    $B60A   JP       V0, $60A        ; Jump to V0 + 60A
$D9C    $DC81   DRW      VC, V8, #1      ; Draw 1-byte sprite at VC, V8
$D9E    $BD68   JP       V0, $D68        ; Jump to V0 + D68
$DA0    $7FD7   ADD      VF, #D7         ; Add 215 to VF
$DA2    $22EA   CALL     $2EA            ; Call subroutine at 2EA
$DA4    $4C08   SNE      VC, #08         ; Skip if VC != 8
$DA6    $6D51   LD       VD, #51         ; Load 81 into VD
$DA8    $241E   CALL     $41E            ; Call subroutine at 41E
$DAA    $7AB9   ADD      VA, #B9         ; Add 185 to VA
$DAC    $7593   ADD      V5, #93         ; Add 147 to V5
$DAE    $8560   LD       V5, V6          ; V5 = V6
$DB0    $07FB   SYS      $7FB            ; System call to 7FB
$DB2    $B69C   JP       V0, $69C        ; Jump to V0 + 69C
$DB4    $4731   SNE      V7, #31         ; Skip if V7 != 49
$DB6    $6717   LD       V7, #17         ; Load 23 into V7
$DB8    $9DE0   SNE      VD, VE          ; Skip if VD != VE
$DBA    $A572   LD       I, $572         ; Load 572 into I
$DBC    $CA52   RND      VA, #52         ; VA = random & 52
$DBE    $CBD7   RND      VB, #D7         ; VB = random & D7
$DC0    $A6F0   LD       I, $6F0         ; Load 6F0 into I
$DC2    $EE58   UNKNOWN  $EE58           ; Unknown Exxx instruction
$DC4    $613A   LD       V1, #3A         ; Load 58 into V1
$DC6    $7ED1   ADD      VE, #D1         ; Add 209 to VE
$DC8    $7BFA   ADD      VB, #FA         ; Add 250 to VB
$DCA    $DF20   DRW      VF, V2, #0      ; Draw 0-byte sprite at VF, V2
$DCC    $5028   UNKNOWN  $5028           ; Unknown 5xxx instruction
$DCE    $7F93   ADD      VF, #93         ; Add 147 to VF
$DD0    $69AE   LD       V9, #AE         ; Load 174 into V9
$DD2    $51DE   UNKNOWN  $51DE           ; Unknown 5xxx instruction
$DD4    $6474   LD       V4, #74         ; Load 116 into V4
$DD6    $BB23   JP       V0, $B23        ; Jump to V0 + B23
$DD8    $4909   SNE      V9, #09         ; Skip if V9 != 9
$DDA    $914D   UNKNOWN  $914D           ; Unknown 9xxx instruction
$DDC    $7511   ADD      V5, #11         ; Add 17 to V5
$DDE    $E139   UNKNOWN  $E139           ; Unknown Exxx instruction
$DE0    $59F7   UNKNOWN  $59F7           ; Unknown 5xxx instruction
$DE2    $6FB3   LD       VF, #B3         ; Load 179 into VF
$DE4    $E9F5   UNKNOWN  $E9F5           ; Unknown Exxx instruction
$DE6    $7CA6   ADD      VC, #A6         ; Add 166 to VC
$DE8    $3E80   SE       VE, #80         ; Skip if VE == 128
$DEA    $C823   RND      V8, #23         ; V8 = random & 23
$DEC    $3C0C   SE       VC, #0C         ; Skip if VC == 12
$DEE    $755C   ADD      V5, #5C         ; Add 92 to V5
$DF0    $829D   UNKNOWN  829D            ; Unknown 8xxx instruction
$DF2    $A390   LD       I, $390         ; Load 390 into I
$DF4    $5733   UNKNOWN  $5733           ; Unknown 5xxx instruction
$DF6    $626A   LD       V2, #6A         ; Load 106 into V2
$DF8    $374F   SE       V7, #4F         ; Skip if V7 == 79
$DFA    $B5CE   JP       V0, $5CE        ; Jump to V0 + 5CE
$DFC    $A3F1   LD       I, $3F1         ; Load 3F1 into I
$DFE    $0E76   SYS      $E76            ; System call to E76
$E00    $DDE5   DRW      VD, VE, #5      ; Draw 5-byte sprite at VD, VE
$E02    $C6F5   RND      V6, #F5         ; V6 = random & F5
$E04    $44BB   SNE      V4, #BB         ; Skip if V4 != 187
$E06    $D73A   DRW      V7, V3, #A      ; Draw 10-byte sprite at V7, V3
$E08    $28F1   CALL     $8F1            ; Call subroutine at 8F1
$E0A    $B924   JP       V0, $924        ; Jump to V0 + 924
$E0C    $823C   UNKNOWN  823C            ; Unknown 8xxx instruction
$E0E    $C506   RND      V5, #06         ; V5 = random & 06
$E10    $368F   SE       V6, #8F         ; Skip if V6 == 143
$E12    $B21A   JP       V0, $21A        ; Jump to V0 + 21A
$E14    $7427   ADD      V4, #27         ; Add 39 to V4
$E16    $A9B1   LD       I, $9B1         ; Load 9B1 into I
$E18    $7919   ADD      V9, #19         ; Add 25 to V9
$E1A    $F72E   UNKNOWN  F72E            ; Unknown Fxxx instruction
$E1C    $FB8B   UNKNOWN  FB8B            ; Unknown Fxxx instruction
$E1E    $C989   RND      V9, #89         ; V9 = random & 89
$E20    $3D63   SE       VD, #63         ; Skip if VD == 99
$E22    $C98A   RND      V9, #8A         ; V9 = random & 8A
$E24    $2EF6   CALL     $EF6            ; Call subroutine at EF6
$E26    $6D7F   LD       VD, #7F         ; Load 127 into VD
$E28    $5750   SE       V7, V5          ; Skip if V7 == V5
$E2A    $D2D1   DRW      V2, VD, #1      ; Draw 1-byte sprite at V2, VD
$E2C    $F690   UNKNOWN  F690            ; Unknown Fxxx instruction
$E2E    $B32D   JP       V0, $32D        ; Jump to V0 + 32D
$E30    $442A   SNE      V4, #2A         ; Skip if V4 != 42
$E32    $7CD1   ADD      VC, #D1         ; Add 209 to VC
$E34    $F603   UNKNOWN  F603            ; Unknown Fxxx instruction
$E36    $5944   UNKNOWN  $5944           ; Unknown 5xxx instruction
$E38    $C496   RND      V4, #96         ; V4 = random & 96
$E3A    $A8DF   LD       I, $8DF         ; Load 8DF into I
$E3C    $6B63   LD       VB, #63         ; Load 99 into VB
$E3E    $849C   UNKNOWN  849C            ; Unknown 8xxx instruction
$E40    $3CC4   SE       VC, #C4         ; Skip if VC == 196
$E42    $C091   RND      V0, #91         ; V0 = random & 91
$E44    $051C   SYS      $51C            ; System call to 51C
$E46    $CA33   RND      VA, #33         ; VA = random & 33
$E48    $BDBA   JP       V0, $DBA        ; Jump to V0 + DBA
$E4A    $6A85   LD       VA, #85         ; Load 133 into VA
$E4C    $16D4   JP       $6D4            ; Jump to 6D4
$E4E    $D1B8   DRW      V1, VB, #8      ; Draw 8-byte sprite at V1, VB
$E50    $8882   AND      V8, V8          ; V8 &= V8
$E52    $71DF   ADD      V1, #DF         ; Add 223 to V1
$E54    $6E5C   LD       VE, #5C         ; Load 92 into VE
$E56    $EDEC   UNKNOWN  $EDEC           ; Unknown Exxx instruction
$E58    $DF4F   DRW      VF, V4, #F      ; Draw 15-byte sprite at VF, V4
$E5A    $9EF0   SNE      VE, VF          ; Skip if VE != VF
$E5C    $2205   CALL     $205            ; Call subroutine at 205
$E5E    $95AF   UNKNOWN  $95AF           ; Unknown 9xxx instruction
$E60    $0750   SYS      $750            ; System call to 750
$E62    $B7BE   JP       V0, $7BE        ; Jump to V0 + 7BE
$E64    $E444   UNKNOWN  $E444           ; Unknown Exxx instruction
$E66    $D61E   DRW      V6, V1, #E      ; Draw 14-byte sprite at V6, V1
$E68    $7D91   ADD      VD, #91         ; Add 145 to VD
$E6A    $7748   ADD      V7, #48         ; Add 72 to V7
$E6C    $3E12   SE       VE, #12         ; Skip if VE == 18
$E6E    $7C37   ADD      VC, #37         ; Add 55 to VC
$E70    $FA63   UNKNOWN  FA63            ; Unknown Fxxx instruction
$E72    $F093   UNKNOWN  F093            ; Unknown Fxxx instruction
$E74    $05CC   SYS      $5CC            ; System call to 5CC
$E76    $36C7   SE       V6, #C7         ; Skip if V6 == 199
$E78    $1DA1   JP       $DA1            ; Jump to DA1
$E7A    $9915   UNKNOWN  $9915           ; Unknown 9xxx instruction
$E7C    $C3B4   RND      V3, #B4         ; V3 = random & B4
$E7E    $D440   DRW      V4, V4, #0      ; Draw 0-byte sprite at V4, V4
$E80    $8525   SUB      V5, V2          ; V5 -= V2, VF = !borrow
$E82    $3D1A   SE       VD, #1A         ; Skip if VD == 26
$E84    $B95C   JP       V0, $95C        ; Jump to V0 + 95C
$E86    $1A5F   JP       $A5F            ; Jump to A5F
$E88    $6FDF   LD       VF, #DF         ; Load 223 into VF
$E8A    $C3C5   RND      V3, #C5         ; V3 = random & C5
$E8C    $9A55   UNKNOWN  $9A55           ; Unknown 9xxx instruction
$E8E    $ADD1   LD       I, $DD1         ; Load DD1 into I
$E90    $DC17   DRW      VC, V1, #7      ; Draw 7-byte sprite at VC, V1
$E92    $2B5A   CALL     $B5A            ; Call subroutine at B5A
$E94    $31C2   SE       V1, #C2         ; Skip if V1 == 194
$E96    $1AA9   JP       $AA9            ; Jump to AA9
$E98    $24C1   CALL     $4C1            ; Call subroutine at 4C1
$E9A    $3827   SE       V8, #27         ; Skip if V8 == 39
$E9C    $5355   UNKNOWN  $5355           ; Unknown 5xxx instruction
$E9E    $5032   UNKNOWN  $5032           ; Unknown 5xxx instruction
$EA0    $01CE   SYS      $1CE            ; System call to 1CE
$EA2    $4761   SNE      V7, #61         ; Skip if V7 != 97
$EA4    $6553   LD       V5, #53         ; Load 83 into V5
$EA6    $23F6   CALL     $3F6            ; Call subroutine at 3F6
$EA8    $2B67   CALL     $B67            ; Call subroutine at B67
$EAA    $7CB0   ADD      VC, #B0         ; Add 176 to VC
$EAC    $0D3C   SYS      $D3C            ; System call to D3C
$EAE    $7A42   ADD      VA, #42         ; Add 66 to VA
$EB0    $889C   UNKNOWN  889C            ; Unknown 8xxx instruction
$EB2    $2662   CALL     $662            ; Call subroutine at 662
$EB4    $112F   JP       $12F            ; Jump to 12F
$EB6    $83A2   AND      V3, VA          ; V3 &= VA
$EB8    $407A   SNE      V0, #7A         ; Skip if V0 != 122
$EBA    $A26E   LD       I, $26E         ; Load 26E into I
$EBC    $1824   JP       $824            ; Jump to 824
$EBE    $A462   LD       I, $462         ; Load 462 into I
$EC0    $F5FF   UNKNOWN  F5FF            ; Unknown Fxxx instruction
$EC2    $E1D3   UNKNOWN  $E1D3           ; Unknown Exxx instruction
$EC4    $03ED   SYS      $3ED            ; System call to 3ED
$EC6    $B8F8   JP       V0, $8F8        ; Jump to V0 + 8F8
$EC8    $3FBD   SE       VF, #BD         ; Skip if VF == 189
$ECA    $FA54   UNKNOWN  FA54            ; Unknown Fxxx instruction
$ECC    $0CE4   SYS      $CE4            ; System call to CE4
$ECE    $DB98   DRW      VB, V9, #8      ; Draw 8-byte sprite at VB, V9
$ED0    $EE8B   UNKNOWN  $EE8B           ; Unknown Exxx instruction
$ED2    $251A   CALL     $51A            ; Call subroutine at 51A
$ED4    $4791   SNE      V7, #91         ; Skip if V7 != 145
$ED6    $E209   UNKNOWN  $E209           ; Unknown Exxx instruction
$ED8    $2A7D   CALL     $A7D            ; Call subroutine at A7D
$EDA    $AB0B   LD       I, $B0B         ; Load B0B into I
$EDC    $9496   UNKNOWN  $9496           ; Unknown 9xxx instruction
$EDE    $B080   JP       V0, $080        ; Jump to V0 + 080
$EE0    $3449   SE       V4, #49         ; Skip if V4 == 73
$EE2    $03BE   SYS      $3BE            ; System call to 3BE
$EE4    $6735   LD       V7, #35         ; Load 53 into V7
$EE6    $C86F   RND      V8, #6F         ; V8 = random & 6F
$EE8    $81B2   AND      V1, VB          ; V1 &= VB
$EEA    $B1D4   JP       V0, $1D4        ; Jump to V0 + 1D4
$EEC    $44C9   SNE      V4, #C9         ; Skip if V4 != 201
$EEE    $9A60   SNE      VA, V6          ; Skip if VA != V6
$EF0    $E944   UNKNOWN  $E944           ; Unknown Exxx instruction
$EF2    $02B7   SYS      $2B7            ; System call to 2B7
$EF4    $FC64   UNKNOWN  FC64            ; Unknown Fxxx instruction
$EF6    $0B1B   SYS      $B1B            ; System call to B1B
$EF8    $1889   JP       $889            ; Jump to 889
$EFA    $1250   JP       $250            ; Jump to 250
$EFC    $D8A8   DRW      V8, VA, #8      ; Draw 8-byte sprite at V8, VA
$EFE    $1033   JP       $033            ; Jump to 033
$F00    $C7CD   RND      V7, #CD         ; V7 = random & CD
$F02    $8E21   OR       VE, V2          ; VE |= V2
$F04    $A5E4   LD       I, $5E4         ; Load 5E4 into I
$F06    $170C   JP       $70C            ; Jump to 70C
$F08    $8EC1   OR       VE, VC          ; VE |= VC
$F0A    $8990   LD       V9, V9          ; V9 = V9
$F0C    $8E2F   UNKNOWN  8E2F            ; Unknown 8xxx instruction
$F0E    $A7EC   LD       I, $7EC         ; Load 7EC into I
$F10    $47CA   SNE      V7, #CA         ; Skip if V7 != 202
$F12    $373C   SE       V7, #3C         ; Skip if V7 == 60
$F14    $493E   SNE      V9, #3E         ; Skip if V9 != 62
$F16    $4074   SNE      V0, #74         ; Skip if V0 != 116
$F18    $4214   SNE      V2, #14         ; Skip if V2 != 20
$F1A    $8B4D   UNKNOWN  8B4D            ; Unknown 8xxx instruction
$F1C    $DCCE   DRW      VC, VC, #E      ; Draw 14-byte sprite at VC, VC
$F1E    $1076   JP       $076            ; Jump to 076
$F20    $FBB2   UNKNOWN  FBB2            ; Unknown Fxxx instruction
$F22    $087D   SYS      $87D            ; System call to 87D
$F24    $8B58   UNKNOWN  8B58            ; Unknown 8xxx instruction
$F26    $6011   LD       V0, #11         ; Load 17 into V0
$F28    $0E27   SYS      $E27            ; System call to E27
$F2A    $05B3   SYS      $5B3            ; System call to 5B3
$F2C    $650E   LD       V5, #0E         ; Load 14 into V5
$F2E    $7759   ADD      V7, #59         ; Add 89 to V7
$F30    $D00A   DRW      V0, V0, #A      ; Draw 10-byte sprite at V0, V0
$F32    $9D2A   UNKNOWN  $9D2A           ; Unknown 9xxx instruction
$F34    $D72E   DRW      V7, V2, #E      ; Draw 14-byte sprite at V7, V2
$F36    $F9E3   UNKNOWN  F9E3            ; Unknown Fxxx instruction
$F38    $E198   UNKNOWN  $E198           ; Unknown Exxx instruction
$F3A    $B31B   JP       V0, $31B        ; Jump to V0 + 31B
$F3C    $9E29   UNKNOWN  $9E29           ; Unknown 9xxx instruction
$F3E    $EF79   UNKNOWN  $EF79           ; Unknown Exxx instruction
$F40    $8C5B   UNKNOWN  8C5B            ; Unknown 8xxx instruction
$F42    $FA0F   UNKNOWN  FA0F            ; Unknown Fxxx instruction
$F44    $1BF6   JP       $BF6            ; Jump to BF6
$F46    $B65E   JP       V0, $65E        ; Jump to V0 + 65E
$F48    $7904   ADD      V9, #04         ; Add 4 to V9
$F4A    $D7D5   DRW      V7, VD, #5      ; Draw 5-byte sprite at V7, VD
$F4C    $B299   JP       V0, $299        ; Jump to V0 + 299
$F4E    $3873   SE       V8, #73         ; Skip if V8 == 115
$F50    $0DFE   SYS      $DFE            ; System call to DFE
$F52    $60D2   LD       V0, #D2         ; Load 210 into V0
$F54    $4F37   SNE      VF, #37         ; Skip if VF != 55
$F56    $28AC   CALL     $8AC            ; Call subroutine at 8AC
$F58    $7E41   ADD      VE, #41         ; Add 65 to VE
$F5A    $B98D   JP       V0, $98D        ; Jump to V0 + 98D
$F5C    $9E41   UNKNOWN  $9E41           ; Unknown 9xxx instruction
$F5E    $8D49   UNKNOWN  8D49            ; Unknown 8xxx instruction
$F60    $C203   RND      V2, #03         ; V2 = random & 03
$F62    $992F   UNKNOWN  $992F           ; Unknown 9xxx instruction
$F64    $DB86   DRW      VB, V8, #6      ; Draw 6-byte sprite at VB, V8
$F66    $1577   JP       $577            ; Jump to 577
$F68    $248F   CALL     $48F            ; Call subroutine at 48F
$F6A    $0547   SYS      $547            ; System call to 547
$F6C    $7904   ADD      V9, #04         ; Add 4 to V9
$F6E    $140B   JP       $40B            ; Jump to 40B
$F70    $CF27   RND      VF, #27         ; VF = random & 27
$F72    $362D   SE       V6, #2D         ; Skip if V6 == 45
$F74    $F769   UNKNOWN  F769            ; Unknown Fxxx instruction
$F76    $BF85   JP       V0, $F85        ; Jump to V0 + F85
$F78    $9D5B   UNKNOWN  $9D5B           ; Unknown 9xxx instruction
$F7A    $0252   SYS      $252            ; System call to 252
$F7C    $F5FA   UNKNOWN  F5FA            ; Unknown Fxxx instruction
$F7E    $2668   CALL     $668            ; Call subroutine at 668
$F80    $39E0   SE       V9, #E0         ; Skip if V9 == 224
$F82    $3BD1   SE       VB, #D1         ; Skip if VB == 209
$F84    $F992   UNKNOWN  F992            ; Unknown Fxxx instruction
$F86    $796D   ADD      V9, #6D         ; Add 109 to V9
$F88    $C467   RND      V4, #67         ; V4 = random & 67
$F8A    $A6AF   LD       I, $6AF         ; Load 6AF into I
$F8C    $407D   SNE      V0, #7D         ; Skip if V0 != 125
$F8E    $648F   LD       V4, #8F         ; Load 143 into V4
$F90    $7BFC   ADD      VB, #FC         ; Add 252 to VB
$F92    $807D   UNKNOWN  807D            ; Unknown 8xxx instruction
$F94    $EEE0   UNKNOWN  $EEE0           ; Unknown Exxx instruction
$F96    $32FD   SE       V2, #FD         ; Skip if V2 == 253
$F98    $8ED7   SUBN     VE, VD          ; VE = VD - VE, VF = !borrow
$F9A    $257F   CALL     $57F            ; Call subroutine at 57F
$F9C    $4508   SNE      V5, #08         ; Skip if V5 != 8
$F9E    $3D34   SE       VD, #34         ; Skip if VD == 52
$FA0    $B85F   JP       V0, $85F        ; Jump to V0 + 85F
$FA2    $E8A4   UNKNOWN  $E8A4           ; Unknown Exxx instruction
$FA4    $2F52   CALL     $F52            ; Call subroutine at F52
$FA6    $177E   JP       $77E            ; Jump to 77E
$FA8    $680F   LD       V8, #0F         ; Load 15 into V8
$FAA    $83D7   SUBN     V3, VD          ; V3 = VD - V3, VF = !borrow
$FAC    $93D3   UNKNOWN  $93D3           ; Unknown 9xxx instruction
$FAE    $F073   UNKNOWN  F073            ; Unknown Fxxx instruction
$FB0    $F013   UNKNOWN  F013            ; Unknown Fxxx instruction
$FB2    $9F2E   UNKNOWN  $9F2E           ; Unknown 9xxx instruction
$FB4    $5B0D   UNKNOWN  $5B0D           ; Unknown 5xxx instruction
$FB6    $9E52   UNKNOWN  $9E52           ; Unknown 9xxx instruction
$FB8    $284F   CALL     $84F            ; Call subroutine at 84F
$FBA    $7623   ADD      V6, #23         ; Add 35 to V6
$FBC    $85BE   SHL      V5              ; V5 <<= 1, VF = MSB
$FBE    $6429   LD       V4, #29         ; Load 41 into V4
$FC0    $6EC3   LD       VE, #C3         ; Load 195 into VE
$FC2    $757B   ADD      V5, #7B         ; Add 123 to V5
$FC4    $7690   ADD      V6, #90         ; Add 144 to V6
$FC6    $27E0   CALL     $7E0            ; Call subroutine at 7E0
$FC8    $AAD3   LD       I, $AD3         ; Load AD3 into I
$FCA    $613F   LD       V1, #3F         ; Load 63 into V1
$FCC    $1212   JP       $212            ; Jump to 212
$FCE    $E332   UNKNOWN  $E332           ; Unknown Exxx instruction
$FD0    $BE7B   JP       V0, $E7B        ; Jump to V0 + E7B
$FD2    $B997   JP       V0, $997        ; Jump to V0 + 997
$FD4    $73BB   ADD      V3, #BB         ; Add 187 to V3
$FD6    $B9B8   JP       V0, $9B8        ; Jump to V0 + 9B8
$FD8    $AC78   LD       I, $C78         ; Load C78 into I
$FDA    $9A5C   UNKNOWN  $9A5C           ; Unknown 9xxx instruction
$FDC    $1A2B   JP       $A2B            ; Jump to A2B
$FDE    $B1C4   JP       V0, $1C4        ; Jump to V0 + 1C4
$FE0    $0409   SYS      $409            ; System call to 409
$FE2    $9882   UNKNOWN  $9882           ; Unknown 9xxx instruction
$FE4    $51BC   UNKNOWN  $51BC           ; Unknown 5xxx instruction
$FE6    $4A5A   SNE      VA, #5A         ; Skip if VA != 90
$FE8    $A0B1   LD       I, $0B1         ; Load 0B1 into I
$FEA    $9CEF   UNKNOWN  $9CEF           ; Unknown 9xxx instruction
$FEC    $C24C   RND      V2, #4C         ; V2 = random & 4C
$FEE    $EBB3   UNKNOWN  $EBB3           ; Unknown Exxx instruction
$FF0    $83EC   UNKNOWN  83EC            ; Unknown 8xxx instruction
$FF2    $A5D1   LD       I, $5D1         ; Load 5D1 into I
$FF4    $B4C8   JP       V0, $4C8        ; Jump to V0 + 4C8
$FF6    $4B9D   SNE      VB, #9D         ; Skip if VB != 157
$FF8    $CEC5   RND      VE, #C5         ; VE = random & C5
$FFA    $F708   UNKNOWN  F708            ; Unknown Fxxx instruction
$FFC    $91F1   UNKNOWN  $91F1           ; Unknown 9xxx instruction
$FFE    $F7E1   UNKNOWN  F7E1            ; Unknown Fxxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 461 (25.7%)
  LD      : 233 (13.0%)
  JP      : 218 (12.2%)
  ADD     : 128 ( 7.1%)
  RND     : 124 ( 6.9%)
  SNE     : 122 ( 6.8%)
  CALL    : 120 ( 6.7%)
  SE      : 119 ( 6.6%)
  SYS     : 115 ( 6.4%)
  DRW     : 109 ( 6.1%)
  OR      :  11 ( 0.6%)
  SUB     :   7 ( 0.4%)
  SHL     :   7 ( 0.4%)
  SHR     :   7 ( 0.4%)
  SUBN    :   5 ( 0.3%)
  XOR     :   3 ( 0.2%)
  AND     :   3 ( 0.2%)

Memory Operations: 361 (20.1%)
Arithmetic Operations: 157 (8.8%)
