
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B7791D01_I31581_C1001_0cc69e206621.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 7791
Instance: 31581
Direction: ascending
Final Array: [1, 3, 7, 11, 28, 46, 55, 246]
Operations: R:0 W:17 C:139 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 114
Sort Array References:
  $21C: LD I, $D6E ; Load D6E into I
  $22E: LD I, $EA2 ; Load EA2 into I
  $24A: LD I, $EC9 ; Load EC9 into I
  $270: LD I, $399 ; Load 399 into I
  $292: LD I, $861 ; Load 861 into I
  $2E6: LD I, $830 ; Load 830 into I
  $2FA: LD I, $B28 ; Load B28 into I
  $30C: LD I, $D60 ; Load D60 into I
  $368: LD I, $97A ; Load 97A into I
  $384: LD I, $CCE ; Load CCE into I
  $3C0: LD I, $68D ; Load 68D into I
  $3E4: LD I, $7A5 ; Load 7A5 into I
  $3F2: LD I, $C45 ; Load C45 into I
  $400: LD I, $E4A ; Load E4A into I
  $422: LD I, $E90 ; Load E90 into I
  $456: LD I, $958 ; Load 958 into I
  $470: LD I, $654 ; Load 654 into I
  $472: LD I, $49A ; Load 49A into I
  $47C: LD I, $1F3 ; Load 1F3 into I
  $4B6: LD I, $F7E ; Load F7E into I
  $4C4: LD I, $254 ; Load 254 into I
  $4C8: LD I, $AA3 ; Load AA3 into I
  $4FC: LD I, $A9D ; Load A9D into I
  $502: LD I, $D82 ; Load D82 into I
  $50E: LD I, $EE4 ; Load EE4 into I
  $52E: LD I, $388 ; Load 388 into I
  $574: LD I, $AD3 ; Load AD3 into I
  $580: LD I, $F51 ; Load F51 into I
  $5E0: LD I, $AD5 ; Load AD5 into I
  $5E2: LD I, $101 ; Load 101 into I
  $648: LD I, $214 ; Load 214 into I
  $68A: LD I, $DCB ; Load DCB into I
  $6B0: LD I, $59A ; Load 59A into I
  $6B4: LD I, $0E0 ; Load 0E0 into I
  $6BC: LD I, $5A5 ; Load 5A5 into I
  $6CA: LD I, $E0D ; Load E0D into I
  $704: LD I, $FAD ; Load FAD into I
  $74A: LD I, $481 ; Load 481 into I
  $792: LD I, $945 ; Load 945 into I
  $796: LD I, $8E2 ; Load 8E2 into I
  $7AE: LD I, $9C9 ; Load 9C9 into I
  $7C2: LD I, $9F7 ; Load 9F7 into I
  $7D0: LD I, $60C ; Load 60C into I
  $7D4: LD I, $FC4 ; Load FC4 into I
  $7EC: LD I, $9E4 ; Load 9E4 into I
  $7F0: LD I, $FCC ; Load FCC into I
  $824: LD I, $C7C ; Load C7C into I
  $85C: LD I, $CE5 ; Load CE5 into I
  $868: LD I, $6C7 ; Load 6C7 into I
  $878: LD I, $B7B ; Load B7B into I
  $87E: LD I, $ED3 ; Load ED3 into I
  $882: LD I, $B27 ; Load B27 into I
  $888: LD I, $F7C ; Load F7C into I
  $8F6: LD I, $822 ; Load 822 into I
  $912: LD I, $463 ; Load 463 into I
  $92E: LD I, $BCD ; Load BCD into I
  $996: LD I, $683 ; Load 683 into I
  $9AE: LD I, $C44 ; Load C44 into I
  $9BE: LD I, $80B ; Load 80B into I
  $9C2: LD I, $D06 ; Load D06 into I
  $9EA: LD I, $31F ; Load 31F into I
  $9F6: LD I, $569 ; Load 569 into I
  $A0A: LD I, $579 ; Load 579 into I
  $A24: LD I, $DA3 ; Load DA3 into I
  $A3A: LD I, $2D9 ; Load 2D9 into I
  $A58: LD I, $8E3 ; Load 8E3 into I
  $A7E: LD I, $1BE ; Load 1BE into I
  $AB4: LD I, $1A0 ; Load 1A0 into I
  $B1E: LD I, $3B1 ; Load 3B1 into I
  $B26: LD I, $F1F ; Load F1F into I
  $B52: LD I, $3FB ; Load 3FB into I
  $B72: LD I, $5EA ; Load 5EA into I
  $B84: LD I, $28C ; Load 28C into I
  $B86: LD I, $6A5 ; Load 6A5 into I
  $BD0: LD I, $B41 ; Load B41 into I
  $BEE: LD I, $84D ; Load 84D into I
  $C10: LD I, $0A0 ; Load 0A0 into I
  $C14: LD I, $C95 ; Load C95 into I
  $C2C: LD I, $AF8 ; Load AF8 into I
  $C4A: LD I, $CB5 ; Load CB5 into I
  $C86: LD I, $954 ; Load 954 into I
  $D0A: LD I, $A42 ; Load A42 into I
  $D2C: LD I, $A54 ; Load A54 into I
  $D32: LD I, $D8B ; Load D8B into I
  $D5E: LD I, $E73 ; Load E73 into I
  $DA2: ADD I, VC ; I ADDRESS MANIPULATION
  $DB2: LD I, $9C0 ; Load 9C0 into I
  $DC2: LD [I], VB ; Store V0-VB at I
  $DD2: LD I, $478 ; Load 478 into I
  $DD8: LD I, $952 ; Load 952 into I
  $E12: LD I, $269 ; Load 269 into I
  $E28: LD I, $965 ; Load 965 into I
  $E36: LD I, $E74 ; Load E74 into I
  $E3E: LD I, $3EF ; Load 3EF into I
  $E46: LD I, $235 ; Load 235 into I
  $E50: LD I, $BF2 ; Load BF2 into I
  $E54: LD I, $CBA ; Load CBA into I
  $E5E: LD I, $2AD ; Load 2AD into I
  $E60: LD I, $32D ; Load 32D into I
  $E70: LD I, $484 ; Load 484 into I
  $E7C: LD I, $0F5 ; Load 0F5 into I
  $E84: LD I, $8A2 ; Load 8A2 into I
  $EBA: LD I, $68D ; Load 68D into I
  $EBE: LD I, $5DA ; Load 5DA into I
  $EDC: LD I, $536 ; Load 536 into I
  $F00: LD I, $2E0 ; Load 2E0 into I
  $F08: LD I, $DFC ; Load DFC into I
  $F82: LD I, $2D0 ; Load 2D0 into I
  $F9A: LD I, $776 ; Load 776 into I
  $FB6: LD I, $9FC ; Load 9FC into I
  $FC4: LD I, $DBD ; Load DBD into I
  $FD0: LD I, $188 ; Load 188 into I
  $FD8: LD I, $8F0 ; Load 8F0 into I
  $FEE: LD I, $021 ; Load 021 into I

CONTROL FLOW ANALYSIS:
Jumps: 231
Calls: 122
Branches: 256
Loops: 139
Loop Structures:
  $2B2 -> $25D (backward jump)
  $30A -> $123 (backward jump)
  $326 -> $007 (backward jump)
  $42A -> $31B (backward jump)
  $43E -> $051 (backward jump)
  $478 -> $08E (backward jump)
  $4AA -> $1A2 (backward jump)
  $4D4 -> $394 (backward jump)
  $4D8 -> $383 (backward jump)
  $4DE -> $3CF (backward jump)
  $4E2 -> $419 (backward jump)
  $4E4 -> $235 (backward jump)
  $52A -> $3FD (backward jump)
  $52C -> $0D5 (backward jump)
  $53E -> $0BD (backward jump)
  $556 -> $53D (backward jump)
  $55E -> $017 (backward jump)
  $5C0 -> $40C (backward jump)
  $5EA -> $025 (backward jump)
  $60E -> $3F3 (backward jump)
  $624 -> $06A (backward jump)
  $630 -> $0A4 (backward jump)
  $63C -> $2BC (backward jump)
  $656 -> $31A (backward jump)
  $65E -> $5A9 (backward jump)
  $698 -> $317 (backward jump)
  $6E6 -> $58B (backward jump)
  $6EC -> $351 (backward jump)
  $6F4 -> $503 (backward jump)
  $706 -> $35C (backward jump)
  $718 -> $374 (backward jump)
  $72A -> $3CE (backward jump)
  $7B4 -> $60A (backward jump)
  $7D2 -> $6F0 (backward jump)
  $7E0 -> $23F (backward jump)
  $816 -> $03A (backward jump)
  $82C -> $539 (backward jump)
  $830 -> $783 (backward jump)
  $838 -> $76C (backward jump)
  $842 -> $436 (backward jump)
  $846 -> $0C0 (backward jump)
  $8FE -> $1B4 (backward jump)
  $91E -> $57A (backward jump)
  $924 -> $2A2 (backward jump)
  $928 -> $325 (backward jump)
  $944 -> $508 (backward jump)
  $94E -> $67C (backward jump)
  $95E -> $44C (backward jump)
  $970 -> $5C4 (backward jump)
  $972 -> $7B7 (backward jump)
  $97E -> $6D0 (backward jump)
  $99E -> $3A7 (backward jump)
  $9A2 -> $0BF (backward jump)
  $9A4 -> $2A4 (backward jump)
  $9B4 -> $039 (backward jump)
  $9B8 -> $616 (backward jump)
  $9BC -> $637 (backward jump)
  $9D6 -> $6A5 (backward jump)
  $9DE -> $26E (backward jump)
  $9EE -> $87C (backward jump)
  $A2A -> $70A (backward jump)
  $A30 -> $869 (backward jump)
  $A46 -> $24F (backward jump)
  $A52 -> $427 (backward jump)
  $A5C -> $77C (backward jump)
  $A64 -> $109 (backward jump)
  $A74 -> $273 (backward jump)
  $A8E -> $109 (backward jump)
  $AA2 -> $097 (backward jump)
  $AC4 -> $499 (backward jump)
  $AC8 -> $2C3 (backward jump)
  $ACC -> $64B (backward jump)
  $AD0 -> $522 (backward jump)
  $AE4 -> $514 (backward jump)
  $AF2 -> $038 (backward jump)
  $B0E -> $442 (backward jump)
  $B36 -> $4EE (backward jump)
  $B5A -> $07E (backward jump)
  $B62 -> $6D2 (backward jump)
  $B68 -> $578 (backward jump)
  $B74 -> $749 (backward jump)
  $BBC -> $B79 (backward jump)
  $BCC -> $081 (backward jump)
  $BF6 -> $946 (backward jump)
  $C0C -> $67E (backward jump)
  $C18 -> $B45 (backward jump)
  $C20 -> $A75 (backward jump)
  $C32 -> $AB2 (backward jump)
  $C3E -> $9FA (backward jump)
  $C50 -> $6E7 (backward jump)
  $C5E -> $1B0 (backward jump)
  $C64 -> $B32 (backward jump)
  $C9E -> $BC3 (backward jump)
  $CD4 -> $9D3 (backward jump)
  $CDC -> $9AE (backward jump)
  $CE6 -> $08E (backward jump)
  $D06 -> $33F (backward jump)
  $D1C -> $284 (backward jump)
  $D28 -> $581 (backward jump)
  $D42 -> $AA5 (backward jump)
  $D46 -> $32A (backward jump)
  $D52 -> $A4C (backward jump)
  $D5A -> $A20 (backward jump)
  $D6A -> $75F (backward jump)
  $D8A -> $7AF (backward jump)
  $D92 -> $93C (backward jump)
  $DA6 -> $3E8 (backward jump)
  $DAC -> $728 (backward jump)
  $DB6 -> $6E8 (backward jump)
  $DC8 -> $880 (backward jump)
  $DDE -> $58F (backward jump)
  $DEC -> $ABD (backward jump)
  $DEE -> $0C8 (backward jump)
  $DFA -> $D1C (backward jump)
  $E04 -> $AFC (backward jump)
  $E06 -> $411 (backward jump)
  $E1A -> $2AA (backward jump)
  $E2E -> $043 (backward jump)
  $E42 -> $49A (backward jump)
  $E64 -> $D1B (backward jump)
  $E6C -> $B22 (backward jump)
  $E74 -> $8E6 (backward jump)
  $E80 -> $CDE (backward jump)
  $EA8 -> $05F (backward jump)
  $ECC -> $873 (backward jump)
  $ED6 -> $4D8 (backward jump)
  $F0C -> $E10 (backward jump)
  $F36 -> $6DE (backward jump)
  $F5C -> $371 (backward jump)
  $F62 -> $82E (backward jump)
  $F64 -> $0EE (backward jump)
  $F66 -> $913 (backward jump)
  $F70 -> $531 (backward jump)
  $F76 -> $D7D (backward jump)
  $F78 -> $F56 (backward jump)
  $F8E -> $31A (backward jump)
  $FAC -> $543 (backward jump)
  $FBC -> $9B0 (backward jump)
  $FE4 -> $E2A (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $9FEE   UNKNOWN  $9FEE           ; Unknown 9xxx instruction
$202    $B606   JP       V0, $606        ; Jump to V0 + 606
$204    $841B   UNKNOWN  841B            ; Unknown 8xxx instruction
$206    $8CCE   SHL      VC              ; VC <<= 1, VF = MSB
$208    $7726   ADD      V7, #26         ; Add 38 to V7
$20A    $1F9A   JP       $F9A            ; Jump to F9A
$20C    $7205   ADD      V2, #05         ; Add 5 to V2
$20E    $78F8   ADD      V8, #F8         ; Add 248 to V8
$210    $FBFD   UNKNOWN  FBFD            ; Unknown Fxxx instruction
$212    $3EA3   SE       VE, #A3         ; Skip if VE == 163
$214    $4E6A   SNE      VE, #6A         ; Skip if VE != 106
$216    $0E50   SYS      $E50            ; System call to E50
$218    $E759   UNKNOWN  $E759           ; Unknown Exxx instruction
$21A    $F8A8   UNKNOWN  F8A8            ; Unknown Fxxx instruction
$21C    $AD6E   LD       I, $D6E         ; Load D6E into I
$21E    $9FC4   UNKNOWN  $9FC4           ; Unknown 9xxx instruction
$220    $0D5A   SYS      $D5A            ; System call to D5A
$222    $E575   UNKNOWN  $E575           ; Unknown Exxx instruction
$224    $7BE3   ADD      VB, #E3         ; Add 227 to VB
$226    $DDF2   DRW      VD, VF, #2      ; Draw 2-byte sprite at VD, VF
$228    $4363   SNE      V3, #63         ; Skip if V3 != 99
$22A    $583C   UNKNOWN  $583C           ; Unknown 5xxx instruction
$22C    $0952   SYS      $952            ; System call to 952
$22E    $AEA2   LD       I, $EA2         ; Load EA2 into I
$230    $8EDC   UNKNOWN  8EDC            ; Unknown 8xxx instruction
$232    $D452   DRW      V4, V5, #2      ; Draw 2-byte sprite at V4, V5
$234    $2D76   CALL     $D76            ; Call subroutine at D76
$236    $00B8   SYS      $0B8            ; System call to 0B8
$238    $254E   CALL     $54E            ; Call subroutine at 54E
$23A    $7F3F   ADD      VF, #3F         ; Add 63 to VF
$23C    $CC2B   RND      VC, #2B         ; VC = random & 2B
$23E    $330D   SE       V3, #0D         ; Skip if V3 == 13
$240    $85D9   UNKNOWN  85D9            ; Unknown 8xxx instruction
$242    $3E52   SE       VE, #52         ; Skip if VE == 82
$244    $85AA   UNKNOWN  85AA            ; Unknown 8xxx instruction
$246    $2163   CALL     $163            ; Call subroutine at 163
$248    $FAC0   UNKNOWN  FAC0            ; Unknown Fxxx instruction
$24A    $AEC9   LD       I, $EC9         ; Load EC9 into I
$24C    $32B8   SE       V2, #B8         ; Skip if V2 == 184
$24E    $E25A   UNKNOWN  $E25A           ; Unknown Exxx instruction
$250    $249F   CALL     $49F            ; Call subroutine at 49F
$252    $5E70   SE       VE, V7          ; Skip if VE == V7
$254    $B5C3   JP       V0, $5C3        ; Jump to V0 + 5C3
$256    $4930   SNE      V9, #30         ; Skip if V9 != 48
$258    $19F8   JP       $9F8            ; Jump to 9F8
$25A    $B4E6   JP       V0, $4E6        ; Jump to V0 + 4E6
$25C    $8874   ADD      V8, V7          ; V8 += V7, VF = carry
$25E    $1E87   JP       $E87            ; Jump to E87
$260    $3651   SE       V6, #51         ; Skip if V6 == 81
$262    $652E   LD       V5, #2E         ; Load 46 into V5
$264    $DC4B   DRW      VC, V4, #B      ; Draw 11-byte sprite at VC, V4
$266    $2CEF   CALL     $CEF            ; Call subroutine at CEF
$268    $351A   SE       V5, #1A         ; Skip if V5 == 26
$26A    $8CBC   UNKNOWN  8CBC            ; Unknown 8xxx instruction
$26C    $925A   UNKNOWN  $925A           ; Unknown 9xxx instruction
$26E    $8044   ADD      V0, V4          ; V0 += V4, VF = carry
$270    $A399   LD       I, $399         ; Load 399 into I
$272    $9B7A   UNKNOWN  $9B7A           ; Unknown 9xxx instruction
$274    $F20F   UNKNOWN  F20F            ; Unknown Fxxx instruction
$276    $D734   DRW      V7, V3, #4      ; Draw 4-byte sprite at V7, V3
$278    $FDE7   UNKNOWN  FDE7            ; Unknown Fxxx instruction
$27A    $DE84   DRW      VE, V8, #4      ; Draw 4-byte sprite at VE, V8
$27C    $8A7A   UNKNOWN  8A7A            ; Unknown 8xxx instruction
$27E    $216A   CALL     $16A            ; Call subroutine at 16A
$280    $000B   SYS      $00B            ; System call to 00B
$282    $BEAC   JP       V0, $EAC        ; Jump to V0 + EAC
$284    $9052   UNKNOWN  $9052           ; Unknown 9xxx instruction
$286    $87AA   UNKNOWN  87AA            ; Unknown 8xxx instruction
$288    $3B8F   SE       VB, #8F         ; Skip if VB == 143
$28A    $15F3   JP       $5F3            ; Jump to 5F3
$28C    $6A52   LD       VA, #52         ; Load 82 into VA
$28E    $4033   SNE      V0, #33         ; Skip if V0 != 51
$290    $D8B5   DRW      V8, VB, #5      ; Draw 5-byte sprite at V8, VB
$292    $A861   LD       I, $861         ; Load 861 into I
$294    $5EDE   UNKNOWN  $5EDE           ; Unknown 5xxx instruction
$296    $040B   SYS      $40B            ; System call to 40B
$298    $D60F   DRW      V6, V0, #F      ; Draw 15-byte sprite at V6, V0
$29A    $4B40   SNE      VB, #40         ; Skip if VB != 64
$29C    $DB16   DRW      VB, V1, #6      ; Draw 6-byte sprite at VB, V1
$29E    $6B47   LD       VB, #47         ; Load 71 into VB
$2A0    $8239   UNKNOWN  8239            ; Unknown 8xxx instruction
$2A2    $5299   UNKNOWN  $5299           ; Unknown 5xxx instruction
$2A4    $048C   SYS      $48C            ; System call to 48C
$2A6    $41E9   SNE      V1, #E9         ; Skip if V1 != 233
$2A8    $42B9   SNE      V2, #B9         ; Skip if V2 != 185
$2AA    $92ED   UNKNOWN  $92ED           ; Unknown 9xxx instruction
$2AC    $644E   LD       V4, #4E         ; Load 78 into V4
$2AE    $B391   JP       V0, $391        ; Jump to V0 + 391
$2B0    $396E   SE       V9, #6E         ; Skip if V9 == 110
$2B2    $125D   JP       $25D            ; Jump to 25D
$2B4    $221F   CALL     $21F            ; Call subroutine at 21F
$2B6    $707A   ADD      V0, #7A         ; Add 122 to V0
$2B8    $3E6A   SE       VE, #6A         ; Skip if VE == 106
$2BA    $CA83   RND      VA, #83         ; VA = random & 83
$2BC    $2652   CALL     $652            ; Call subroutine at 652
$2BE    $DFFC   DRW      VF, VF, #C      ; Draw 12-byte sprite at VF, VF
$2C0    $5D24   UNKNOWN  $5D24           ; Unknown 5xxx instruction
$2C2    $49B4   SNE      V9, #B4         ; Skip if V9 != 180
$2C4    $FA9D   UNKNOWN  FA9D            ; Unknown Fxxx instruction
$2C6    $0424   SYS      $424            ; System call to 424
$2C8    $0772   SYS      $772            ; System call to 772
$2CA    $217D   CALL     $17D            ; Call subroutine at 17D
$2CC    $0196   SYS      $196            ; System call to 196
$2CE    $E98C   UNKNOWN  $E98C           ; Unknown Exxx instruction
$2D0    $198A   JP       $98A            ; Jump to 98A
$2D2    $87A7   SUBN     V7, VA          ; V7 = VA - V7, VF = !borrow
$2D4    $7C32   ADD      VC, #32         ; Add 50 to VC
$2D6    $C5BD   RND      V5, #BD         ; V5 = random & BD
$2D8    $C1FC   RND      V1, #FC         ; V1 = random & FC
$2DA    $4D62   SNE      VD, #62         ; Skip if VD != 98
$2DC    $F84E   UNKNOWN  F84E            ; Unknown Fxxx instruction
$2DE    $E9BE   UNKNOWN  $E9BE           ; Unknown Exxx instruction
$2E0    $03BC   SYS      $3BC            ; System call to 3BC
$2E2    $7720   ADD      V7, #20         ; Add 32 to V7
$2E4    $2557   CALL     $557            ; Call subroutine at 557
$2E6    $A830   LD       I, $830         ; Load 830 into I
$2E8    $1F46   JP       $F46            ; Jump to F46
$2EA    $5FCF   UNKNOWN  $5FCF           ; Unknown 5xxx instruction
$2EC    $8A2F   UNKNOWN  8A2F            ; Unknown 8xxx instruction
$2EE    $80FA   UNKNOWN  80FA            ; Unknown 8xxx instruction
$2F0    $B59B   JP       V0, $59B        ; Jump to V0 + 59B
$2F2    $D0DC   DRW      V0, VD, #C      ; Draw 12-byte sprite at V0, VD
$2F4    $7B7E   ADD      VB, #7E         ; Add 126 to VB
$2F6    $F929   LD       F, V9           ; I = sprite address for digit V9
$2F8    $2F2C   CALL     $F2C            ; Call subroutine at F2C
$2FA    $AB28   LD       I, $B28         ; Load B28 into I
$2FC    $220A   CALL     $20A            ; Call subroutine at 20A
$2FE    $E25D   UNKNOWN  $E25D           ; Unknown Exxx instruction
$300    $0103   SYS      $103            ; System call to 103
$302    $070B   SYS      $70B            ; System call to 70B
$304    $1C2E   JP       $C2E            ; Jump to C2E
$306    $37F6   SE       V7, #F6         ; Skip if V7 == 246
$308    $3E83   SE       VE, #83         ; Skip if VE == 131
$30A    $1123   JP       $123            ; Jump to 123
$30C    $AD60   LD       I, $D60         ; Load D60 into I
$30E    $18D7   JP       $8D7            ; Jump to 8D7
$310    $0EEA   SYS      $EEA            ; System call to EEA
$312    $E745   UNKNOWN  $E745           ; Unknown Exxx instruction
$314    $1E8F   JP       $E8F            ; Jump to E8F
$316    $BB0A   JP       V0, $B0A        ; Jump to V0 + B0A
$318    $45E7   SNE      V5, #E7         ; Skip if V5 != 231
$31A    $263D   CALL     $63D            ; Call subroutine at 63D
$31C    $9152   UNKNOWN  $9152           ; Unknown 9xxx instruction
$31E    $80EA   UNKNOWN  80EA            ; Unknown 8xxx instruction
$320    $0D8E   SYS      $D8E            ; System call to D8E
$322    $0F2B   SYS      $F2B            ; System call to F2B
$324    $4AB6   SNE      VA, #B6         ; Skip if VA != 182
$326    $B007   JP       V0, $007        ; Jump to V0 + 007
$328    $4861   SNE      V8, #61         ; Skip if V8 != 97
$32A    $89A2   AND      V9, VA          ; V9 &= VA
$32C    $0E98   SYS      $E98            ; System call to E98
$32E    $25FC   CALL     $5FC            ; Call subroutine at 5FC
$330    $8593   XOR      V5, V9          ; V5 ^= V9
$332    $40FB   SNE      V0, #FB         ; Skip if V0 != 251
$334    $220B   CALL     $20B            ; Call subroutine at 20B
$336    $6B0D   LD       VB, #0D         ; Load 13 into VB
$338    $EC87   UNKNOWN  $EC87           ; Unknown Exxx instruction
$33A    $01C1   SYS      $1C1            ; System call to 1C1
$33C    $86A3   XOR      V6, VA          ; V6 ^= VA
$33E    $BEB4   JP       V0, $EB4        ; Jump to V0 + EB4
$340    $F3C7   UNKNOWN  F3C7            ; Unknown Fxxx instruction
$342    $30E5   SE       V0, #E5         ; Skip if V0 == 229
$344    $5EF0   SE       VE, VF          ; Skip if VE == VF
$346    $69BE   LD       V9, #BE         ; Load 190 into V9
$348    $5BF9   UNKNOWN  $5BF9           ; Unknown 5xxx instruction
$34A    $D144   DRW      V1, V4, #4      ; Draw 4-byte sprite at V1, V4
$34C    $4C8D   SNE      VC, #8D         ; Skip if VC != 141
$34E    $756A   ADD      V5, #6A         ; Add 106 to V5
$350    $C600   RND      V6, #00         ; V6 = random & 00
$352    $9E83   UNKNOWN  $9E83           ; Unknown 9xxx instruction
$354    $3CEF   SE       VC, #EF         ; Skip if VC == 239
$356    $99C4   UNKNOWN  $99C4           ; Unknown 9xxx instruction
$358    $801F   UNKNOWN  801F            ; Unknown 8xxx instruction
$35A    $3EF8   SE       VE, #F8         ; Skip if VE == 248
$35C    $683D   LD       V8, #3D         ; Load 61 into V8
$35E    $7850   ADD      V8, #50         ; Add 80 to V8
$360    $87D7   SUBN     V7, VD          ; V7 = VD - V7, VF = !borrow
$362    $FA23   UNKNOWN  FA23            ; Unknown Fxxx instruction
$364    $4FC4   SNE      VF, #C4         ; Skip if VF != 196
$366    $EDD7   UNKNOWN  $EDD7           ; Unknown Exxx instruction
$368    $A97A   LD       I, $97A         ; Load 97A into I
$36A    $5729   UNKNOWN  $5729           ; Unknown 5xxx instruction
$36C    $214C   CALL     $14C            ; Call subroutine at 14C
$36E    $9FF0   SNE      VF, VF          ; Skip if VF != VF
$370    $FC1A   UNKNOWN  FC1A            ; Unknown Fxxx instruction
$372    $80A7   SUBN     V0, VA          ; V0 = VA - V0, VF = !borrow
$374    $812B   UNKNOWN  812B            ; Unknown 8xxx instruction
$376    $5EE5   UNKNOWN  $5EE5           ; Unknown 5xxx instruction
$378    $86EF   UNKNOWN  86EF            ; Unknown 8xxx instruction
$37A    $F42C   UNKNOWN  F42C            ; Unknown Fxxx instruction
$37C    $9B40   SNE      VB, V4          ; Skip if VB != V4
$37E    $7481   ADD      V4, #81         ; Add 129 to V4
$380    $1D41   JP       $D41            ; Jump to D41
$382    $9BCC   UNKNOWN  $9BCC           ; Unknown 9xxx instruction
$384    $ACCE   LD       I, $CCE         ; Load CCE into I
$386    $0567   SYS      $567            ; System call to 567
$388    $BBB2   JP       V0, $BB2        ; Jump to V0 + BB2
$38A    $08A8   SYS      $8A8            ; System call to 8A8
$38C    $3E34   SE       VE, #34         ; Skip if VE == 52
$38E    $D14E   DRW      V1, V4, #E      ; Draw 14-byte sprite at V1, V4
$390    $33FD   SE       V3, #FD         ; Skip if V3 == 253
$392    $521F   UNKNOWN  $521F           ; Unknown 5xxx instruction
$394    $EF88   UNKNOWN  $EF88           ; Unknown Exxx instruction
$396    $4EDF   SNE      VE, #DF         ; Skip if VE != 223
$398    $B786   JP       V0, $786        ; Jump to V0 + 786
$39A    $8A44   ADD      VA, V4          ; VA += V4, VF = carry
$39C    $84E7   SUBN     V4, VE          ; V4 = VE - V4, VF = !borrow
$39E    $3BDA   SE       VB, #DA         ; Skip if VB == 218
$3A0    $9444   UNKNOWN  $9444           ; Unknown 9xxx instruction
$3A2    $6208   LD       V2, #08         ; Load 8 into V2
$3A4    $9E96   UNKNOWN  $9E96           ; Unknown 9xxx instruction
$3A6    $7E16   ADD      VE, #16         ; Add 22 to VE
$3A8    $BF13   JP       V0, $F13        ; Jump to V0 + F13
$3AA    $EF58   UNKNOWN  $EF58           ; Unknown Exxx instruction
$3AC    $F685   UNKNOWN  F685            ; Unknown Fxxx instruction
$3AE    $E242   UNKNOWN  $E242           ; Unknown Exxx instruction
$3B0    $C28A   RND      V2, #8A         ; V2 = random & 8A
$3B2    $E38D   UNKNOWN  $E38D           ; Unknown Exxx instruction
$3B4    $3FE8   SE       VF, #E8         ; Skip if VF == 232
$3B6    $308B   SE       V0, #8B         ; Skip if V0 == 139
$3B8    $CF27   RND      VF, #27         ; VF = random & 27
$3BA    $5779   UNKNOWN  $5779           ; Unknown 5xxx instruction
$3BC    $43A2   SNE      V3, #A2         ; Skip if V3 != 162
$3BE    $FF9D   UNKNOWN  FF9D            ; Unknown Fxxx instruction
$3C0    $A68D   LD       I, $68D         ; Load 68D into I
$3C2    $D643   DRW      V6, V4, #3      ; Draw 3-byte sprite at V6, V4
$3C4    $B709   JP       V0, $709        ; Jump to V0 + 709
$3C6    $D1BA   DRW      V1, VB, #A      ; Draw 10-byte sprite at V1, VB
$3C8    $C2B7   RND      V2, #B7         ; V2 = random & B7
$3CA    $DC09   DRW      VC, V0, #9      ; Draw 9-byte sprite at VC, V0
$3CC    $79F3   ADD      V9, #F3         ; Add 243 to V9
$3CE    $9167   UNKNOWN  $9167           ; Unknown 9xxx instruction
$3D0    $1E09   JP       $E09            ; Jump to E09
$3D2    $3DB5   SE       VD, #B5         ; Skip if VD == 181
$3D4    $98B8   UNKNOWN  $98B8           ; Unknown 9xxx instruction
$3D6    $3944   SE       V9, #44         ; Skip if V9 == 68
$3D8    $C6B4   RND      V6, #B4         ; V6 = random & B4
$3DA    $9EFE   UNKNOWN  $9EFE           ; Unknown 9xxx instruction
$3DC    $F9CA   UNKNOWN  F9CA            ; Unknown Fxxx instruction
$3DE    $6B25   LD       VB, #25         ; Load 37 into VB
$3E0    $C7B8   RND      V7, #B8         ; V7 = random & B8
$3E2    $1796   JP       $796            ; Jump to 796
$3E4    $A7A5   LD       I, $7A5         ; Load 7A5 into I
$3E6    $4136   SNE      V1, #36         ; Skip if V1 != 54
$3E8    $F87B   UNKNOWN  F87B            ; Unknown Fxxx instruction
$3EA    $3FC6   SE       VF, #C6         ; Skip if VF == 198
$3EC    $61FD   LD       V1, #FD         ; Load 253 into V1
$3EE    $F617   UNKNOWN  F617            ; Unknown Fxxx instruction
$3F0    $6A86   LD       VA, #86         ; Load 134 into VA
$3F2    $AC45   LD       I, $C45         ; Load C45 into I
$3F4    $8699   UNKNOWN  8699            ; Unknown 8xxx instruction
$3F6    $7013   ADD      V0, #13         ; Add 19 to V0
$3F8    $DC16   DRW      VC, V1, #6      ; Draw 6-byte sprite at VC, V1
$3FA    $1E69   JP       $E69            ; Jump to E69
$3FC    $87E5   SUB      V7, VE          ; V7 -= VE, VF = !borrow
$3FE    $6DC8   LD       VD, #C8         ; Load 200 into VD
$400    $AE4A   LD       I, $E4A         ; Load E4A into I
$402    $8B9C   UNKNOWN  8B9C            ; Unknown 8xxx instruction
$404    $3B77   SE       VB, #77         ; Skip if VB == 119
$406    $522B   UNKNOWN  $522B           ; Unknown 5xxx instruction
$408    $BBA8   JP       V0, $BA8        ; Jump to V0 + BA8
$40A    $45D7   SNE      V5, #D7         ; Skip if V5 != 215
$40C    $EBE3   UNKNOWN  $EBE3           ; Unknown Exxx instruction
$40E    $E449   UNKNOWN  $E449           ; Unknown Exxx instruction
$410    $FFAA   UNKNOWN  FFAA            ; Unknown Fxxx instruction
$412    $6056   LD       V0, #56         ; Load 86 into V0
$414    $24AB   CALL     $4AB            ; Call subroutine at 4AB
$416    $25FB   CALL     $5FB            ; Call subroutine at 5FB
$418    $2CB0   CALL     $CB0            ; Call subroutine at CB0
$41A    $1E45   JP       $E45            ; Jump to E45
$41C    $618B   LD       V1, #8B         ; Load 139 into V1
$41E    $E833   UNKNOWN  $E833           ; Unknown Exxx instruction
$420    $60B9   LD       V0, #B9         ; Load 185 into V0
$422    $AE90   LD       I, $E90         ; Load E90 into I
$424    $CBF6   RND      VB, #F6         ; VB = random & F6
$426    $09CD   SYS      $9CD            ; System call to 9CD
$428    $D27E   DRW      V2, V7, #E      ; Draw 14-byte sprite at V2, V7
$42A    $131B   JP       $31B            ; Jump to 31B
$42C    $9BF8   UNKNOWN  $9BF8           ; Unknown 9xxx instruction
$42E    $085D   SYS      $85D            ; System call to 85D
$430    $0671   SYS      $671            ; System call to 671
$432    $39B2   SE       V9, #B2         ; Skip if V9 == 178
$434    $4C3C   SNE      VC, #3C         ; Skip if VC != 60
$436    $14EE   JP       $4EE            ; Jump to 4EE
$438    $0E06   SYS      $E06            ; System call to E06
$43A    $240F   CALL     $40F            ; Call subroutine at 40F
$43C    $9F8B   UNKNOWN  $9F8B           ; Unknown 9xxx instruction
$43E    $1051   JP       $051            ; Jump to 051
$440    $45B9   SNE      V5, #B9         ; Skip if V5 != 185
$442    $C519   RND      V5, #19         ; V5 = random & 19
$444    $2D6A   CALL     $D6A            ; Call subroutine at D6A
$446    $21E1   CALL     $1E1            ; Call subroutine at 1E1
$448    $265E   CALL     $65E            ; Call subroutine at 65E
$44A    $6792   LD       V7, #92         ; Load 146 into V7
$44C    $5B02   UNKNOWN  $5B02           ; Unknown 5xxx instruction
$44E    $1888   JP       $888            ; Jump to 888
$450    $B762   JP       V0, $762        ; Jump to V0 + 762
$452    $3B73   SE       VB, #73         ; Skip if VB == 115
$454    $877D   UNKNOWN  877D            ; Unknown 8xxx instruction
$456    $A958   LD       I, $958         ; Load 958 into I
$458    $9064   UNKNOWN  $9064           ; Unknown 9xxx instruction
$45A    $0FC6   SYS      $FC6            ; System call to FC6
$45C    $64B8   LD       V4, #B8         ; Load 184 into V4
$45E    $C56F   RND      V5, #6F         ; V5 = random & 6F
$460    $D4DC   DRW      V4, VD, #C      ; Draw 12-byte sprite at V4, VD
$462    $8406   SHR      V4              ; V4 >>= 1, VF = LSB
$464    $6B79   LD       VB, #79         ; Load 121 into VB
$466    $198A   JP       $98A            ; Jump to 98A
$468    $63DF   LD       V3, #DF         ; Load 223 into V3
$46A    $DA2F   DRW      VA, V2, #F      ; Draw 15-byte sprite at VA, V2
$46C    $769F   ADD      V6, #9F         ; Add 159 to V6
$46E    $DAE3   DRW      VA, VE, #3      ; Draw 3-byte sprite at VA, VE
$470    $A654   LD       I, $654         ; Load 654 into I
$472    $A49A   LD       I, $49A         ; Load 49A into I
$474    $67CB   LD       V7, #CB         ; Load 203 into V7
$476    $723C   ADD      V2, #3C         ; Add 60 to V2
$478    $108E   JP       $08E            ; Jump to 08E
$47A    $C7B0   RND      V7, #B0         ; V7 = random & B0
$47C    $A1F3   LD       I, $1F3         ; Load 1F3 into I
$47E    $391B   SE       V9, #1B         ; Skip if V9 == 27
$480    $2045   CALL     $045            ; Call subroutine at 045
$482    $8A8A   UNKNOWN  8A8A            ; Unknown 8xxx instruction
$484    $28BC   CALL     $8BC            ; Call subroutine at 8BC
$486    $9A69   UNKNOWN  $9A69           ; Unknown 9xxx instruction
$488    $6247   LD       V2, #47         ; Load 71 into V2
$48A    $FEFF   UNKNOWN  FEFF            ; Unknown Fxxx instruction
$48C    $5380   SE       V3, V8          ; Skip if V3 == V8
$48E    $5B32   UNKNOWN  $5B32           ; Unknown 5xxx instruction
$490    $B92D   JP       V0, $92D        ; Jump to V0 + 92D
$492    $F74B   UNKNOWN  F74B            ; Unknown Fxxx instruction
$494    $2DD3   CALL     $DD3            ; Call subroutine at DD3
$496    $D7E2   DRW      V7, VE, #2      ; Draw 2-byte sprite at V7, VE
$498    $8140   LD       V1, V4          ; V1 = V4
$49A    $2EE6   CALL     $EE6            ; Call subroutine at EE6
$49C    $5BB7   UNKNOWN  $5BB7           ; Unknown 5xxx instruction
$49E    $5169   UNKNOWN  $5169           ; Unknown 5xxx instruction
$4A0    $FC0C   UNKNOWN  FC0C            ; Unknown Fxxx instruction
$4A2    $B959   JP       V0, $959        ; Jump to V0 + 959
$4A4    $1D66   JP       $D66            ; Jump to D66
$4A6    $3EDD   SE       VE, #DD         ; Skip if VE == 221
$4A8    $4F96   SNE      VF, #96         ; Skip if VF != 150
$4AA    $B1A2   JP       V0, $1A2        ; Jump to V0 + 1A2
$4AC    $202C   CALL     $02C            ; Call subroutine at 02C
$4AE    $EC21   UNKNOWN  $EC21           ; Unknown Exxx instruction
$4B0    $4E44   SNE      VE, #44         ; Skip if VE != 68
$4B2    $D89A   DRW      V8, V9, #A      ; Draw 10-byte sprite at V8, V9
$4B4    $8785   SUB      V7, V8          ; V7 -= V8, VF = !borrow
$4B6    $AF7E   LD       I, $F7E         ; Load F7E into I
$4B8    $8B20   LD       VB, V2          ; VB = V2
$4BA    $8EEF   UNKNOWN  8EEF            ; Unknown 8xxx instruction
$4BC    $44B7   SNE      V4, #B7         ; Skip if V4 != 183
$4BE    $8F60   LD       VF, V6          ; VF = V6
$4C0    $D6C6   DRW      V6, VC, #6      ; Draw 6-byte sprite at V6, VC
$4C2    $8CD5   SUB      VC, VD          ; VC -= VD, VF = !borrow
$4C4    $A254   LD       I, $254         ; Load 254 into I
$4C6    $BC6E   JP       V0, $C6E        ; Jump to V0 + C6E
$4C8    $AAA3   LD       I, $AA3         ; Load AA3 into I
$4CA    $CD14   RND      VD, #14         ; VD = random & 14
$4CC    $0244   SYS      $244            ; System call to 244
$4CE    $019C   SYS      $19C            ; System call to 19C
$4D0    $21F4   CALL     $1F4            ; Call subroutine at 1F4
$4D2    $1C08   JP       $C08            ; Jump to C08
$4D4    $B394   JP       V0, $394        ; Jump to V0 + 394
$4D6    $231E   CALL     $31E            ; Call subroutine at 31E
$4D8    $B383   JP       V0, $383        ; Jump to V0 + 383
$4DA    $C9C8   RND      V9, #C8         ; V9 = random & C8
$4DC    $231C   CALL     $31C            ; Call subroutine at 31C
$4DE    $13CF   JP       $3CF            ; Jump to 3CF
$4E0    $6017   LD       V0, #17         ; Load 23 into V0
$4E2    $1419   JP       $419            ; Jump to 419
$4E4    $1235   JP       $235            ; Jump to 235
$4E6    $C263   RND      V2, #63         ; V2 = random & 63
$4E8    $F66C   UNKNOWN  F66C            ; Unknown Fxxx instruction
$4EA    $E0B1   UNKNOWN  $E0B1           ; Unknown Exxx instruction
$4EC    $C6A2   RND      V6, #A2         ; V6 = random & A2
$4EE    $3D1D   SE       VD, #1D         ; Skip if VD == 29
$4F0    $17AC   JP       $7AC            ; Jump to 7AC
$4F2    $5519   UNKNOWN  $5519           ; Unknown 5xxx instruction
$4F4    $576C   UNKNOWN  $576C           ; Unknown 5xxx instruction
$4F6    $91DF   UNKNOWN  $91DF           ; Unknown 9xxx instruction
$4F8    $90CB   UNKNOWN  $90CB           ; Unknown 9xxx instruction
$4FA    $9D74   UNKNOWN  $9D74           ; Unknown 9xxx instruction
$4FC    $AA9D   LD       I, $A9D         ; Load A9D into I
$4FE    $FFAF   UNKNOWN  FFAF            ; Unknown Fxxx instruction
$500    $3791   SE       V7, #91         ; Skip if V7 == 145
$502    $AD82   LD       I, $D82         ; Load D82 into I
$504    $87EC   UNKNOWN  87EC            ; Unknown 8xxx instruction
$506    $BC16   JP       V0, $C16        ; Jump to V0 + C16
$508    $789E   ADD      V8, #9E         ; Add 158 to V8
$50A    $E5FD   UNKNOWN  $E5FD           ; Unknown Exxx instruction
$50C    $CACA   RND      VA, #CA         ; VA = random & CA
$50E    $AEE4   LD       I, $EE4         ; Load EE4 into I
$510    $BBFB   JP       V0, $BFB        ; Jump to V0 + BFB
$512    $88EC   UNKNOWN  88EC            ; Unknown 8xxx instruction
$514    $4219   SNE      V2, #19         ; Skip if V2 != 25
$516    $8ABE   SHL      VA              ; VA <<= 1, VF = MSB
$518    $92BE   UNKNOWN  $92BE           ; Unknown 9xxx instruction
$51A    $F617   UNKNOWN  F617            ; Unknown Fxxx instruction
$51C    $5D23   UNKNOWN  $5D23           ; Unknown 5xxx instruction
$51E    $03B8   SYS      $3B8            ; System call to 3B8
$520    $26EC   CALL     $6EC            ; Call subroutine at 6EC
$522    $56C8   UNKNOWN  $56C8           ; Unknown 5xxx instruction
$524    $8E0E   SHL      VE              ; VE <<= 1, VF = MSB
$526    $51BD   UNKNOWN  $51BD           ; Unknown 5xxx instruction
$528    $96B8   UNKNOWN  $96B8           ; Unknown 9xxx instruction
$52A    $13FD   JP       $3FD            ; Jump to 3FD
$52C    $10D5   JP       $0D5            ; Jump to 0D5
$52E    $A388   LD       I, $388         ; Load 388 into I
$530    $FAD8   UNKNOWN  FAD8            ; Unknown Fxxx instruction
$532    $EA3E   UNKNOWN  $EA3E           ; Unknown Exxx instruction
$534    $3843   SE       V8, #43         ; Skip if V8 == 67
$536    $CFD4   RND      VF, #D4         ; VF = random & D4
$538    $DF17   DRW      VF, V1, #7      ; Draw 7-byte sprite at VF, V1
$53A    $3A90   SE       VA, #90         ; Skip if VA == 144
$53C    $76F4   ADD      V6, #F4         ; Add 244 to V6
$53E    $B0BD   JP       V0, $0BD        ; Jump to V0 + 0BD
$540    $DF60   DRW      VF, V6, #0      ; Draw 0-byte sprite at VF, V6
$542    $C2E7   RND      V2, #E7         ; V2 = random & E7
$544    $9B5B   UNKNOWN  $9B5B           ; Unknown 9xxx instruction
$546    $F1EB   UNKNOWN  F1EB            ; Unknown Fxxx instruction
$548    $63DF   LD       V3, #DF         ; Load 223 into V3
$54A    $521C   UNKNOWN  $521C           ; Unknown 5xxx instruction
$54C    $038F   SYS      $38F            ; System call to 38F
$54E    $4BDE   SNE      VB, #DE         ; Skip if VB != 222
$550    $D1CE   DRW      V1, VC, #E      ; Draw 14-byte sprite at V1, VC
$552    $9620   SNE      V6, V2          ; Skip if V6 != V2
$554    $425A   SNE      V2, #5A         ; Skip if V2 != 90
$556    $B53D   JP       V0, $53D        ; Jump to V0 + 53D
$558    $811E   SHL      V1              ; V1 <<= 1, VF = MSB
$55A    $2452   CALL     $452            ; Call subroutine at 452
$55C    $182C   JP       $82C            ; Jump to 82C
$55E    $B017   JP       V0, $017        ; Jump to V0 + 017
$560    $F10C   UNKNOWN  F10C            ; Unknown Fxxx instruction
$562    $6A19   LD       VA, #19         ; Load 25 into VA
$564    $C1EC   RND      V1, #EC         ; V1 = random & EC
$566    $C3FE   RND      V3, #FE         ; V3 = random & FE
$568    $286F   CALL     $86F            ; Call subroutine at 86F
$56A    $888F   UNKNOWN  888F            ; Unknown 8xxx instruction
$56C    $D6A1   DRW      V6, VA, #1      ; Draw 1-byte sprite at V6, VA
$56E    $4E17   SNE      VE, #17         ; Skip if VE != 23
$570    $89C3   XOR      V9, VC          ; V9 ^= VC
$572    $0B7F   SYS      $B7F            ; System call to B7F
$574    $AAD3   LD       I, $AD3         ; Load AD3 into I
$576    $76C2   ADD      V6, #C2         ; Add 194 to V6
$578    $368C   SE       V6, #8C         ; Skip if V6 == 140
$57A    $1584   JP       $584            ; Jump to 584
$57C    $0AE1   SYS      $AE1            ; System call to AE1
$57E    $6FA4   LD       VF, #A4         ; Load 164 into VF
$580    $AF51   LD       I, $F51         ; Load F51 into I
$582    $1A22   JP       $A22            ; Jump to A22
$584    $927C   UNKNOWN  $927C           ; Unknown 9xxx instruction
$586    $2040   CALL     $040            ; Call subroutine at 040
$588    $5411   UNKNOWN  $5411           ; Unknown 5xxx instruction
$58A    $2B37   CALL     $B37            ; Call subroutine at B37
$58C    $23AE   CALL     $3AE            ; Call subroutine at 3AE
$58E    $F164   UNKNOWN  F164            ; Unknown Fxxx instruction
$590    $4FF2   SNE      VF, #F2         ; Skip if VF != 242
$592    $77C5   ADD      V7, #C5         ; Add 197 to V7
$594    $C0E5   RND      V0, #E5         ; V0 = random & E5
$596    $F0B1   UNKNOWN  F0B1            ; Unknown Fxxx instruction
$598    $7BAD   ADD      VB, #AD         ; Add 173 to VB
$59A    $BDD2   JP       V0, $DD2        ; Jump to V0 + DD2
$59C    $6591   LD       V5, #91         ; Load 145 into V5
$59E    $025E   SYS      $25E            ; System call to 25E
$5A0    $FCE3   UNKNOWN  FCE3            ; Unknown Fxxx instruction
$5A2    $2FFC   CALL     $FFC            ; Call subroutine at FFC
$5A4    $3D66   SE       VD, #66         ; Skip if VD == 102
$5A6    $E461   UNKNOWN  $E461           ; Unknown Exxx instruction
$5A8    $835C   UNKNOWN  835C            ; Unknown 8xxx instruction
$5AA    $B864   JP       V0, $864        ; Jump to V0 + 864
$5AC    $7A4C   ADD      VA, #4C         ; Add 76 to VA
$5AE    $E579   UNKNOWN  $E579           ; Unknown Exxx instruction
$5B0    $B8E6   JP       V0, $8E6        ; Jump to V0 + 8E6
$5B2    $2F0C   CALL     $F0C            ; Call subroutine at F0C
$5B4    $CBD6   RND      VB, #D6         ; VB = random & D6
$5B6    $6120   LD       V1, #20         ; Load 32 into V1
$5B8    $BD1E   JP       V0, $D1E        ; Jump to V0 + D1E
$5BA    $C43A   RND      V4, #3A         ; V4 = random & 3A
$5BC    $3520   SE       V5, #20         ; Skip if V5 == 32
$5BE    $7D8F   ADD      VD, #8F         ; Add 143 to VD
$5C0    $B40C   JP       V0, $40C        ; Jump to V0 + 40C
$5C2    $DE7D   DRW      VE, V7, #D      ; Draw 13-byte sprite at VE, V7
$5C4    $B8A2   JP       V0, $8A2        ; Jump to V0 + 8A2
$5C6    $1E2B   JP       $E2B            ; Jump to E2B
$5C8    $B7FD   JP       V0, $7FD        ; Jump to V0 + 7FD
$5CA    $1925   JP       $925            ; Jump to 925
$5CC    $0671   SYS      $671            ; System call to 671
$5CE    $91C4   UNKNOWN  $91C4           ; Unknown 9xxx instruction
$5D0    $2FAB   CALL     $FAB            ; Call subroutine at FAB
$5D2    $DD4B   DRW      VD, V4, #B      ; Draw 11-byte sprite at VD, V4
$5D4    $9542   UNKNOWN  $9542           ; Unknown 9xxx instruction
$5D6    $095A   SYS      $95A            ; System call to 95A
$5D8    $0870   SYS      $870            ; System call to 870
$5DA    $F067   UNKNOWN  F067            ; Unknown Fxxx instruction
$5DC    $7994   ADD      V9, #94         ; Add 148 to V9
$5DE    $46BC   SNE      V6, #BC         ; Skip if V6 != 188
$5E0    $AAD5   LD       I, $AD5         ; Load AD5 into I
$5E2    $A101   LD       I, $101         ; Load 101 into I
$5E4    $CB1B   RND      VB, #1B         ; VB = random & 1B
$5E6    $2828   CALL     $828            ; Call subroutine at 828
$5E8    $0CFE   SYS      $CFE            ; System call to CFE
$5EA    $B025   JP       V0, $025        ; Jump to V0 + 025
$5EC    $0150   SYS      $150            ; System call to 150
$5EE    $1C32   JP       $C32            ; Jump to C32
$5F0    $77AC   ADD      V7, #AC         ; Add 172 to V7
$5F2    $3FF4   SE       VF, #F4         ; Skip if VF == 244
$5F4    $F6FC   UNKNOWN  F6FC            ; Unknown Fxxx instruction
$5F6    $0E29   SYS      $E29            ; System call to E29
$5F8    $1CF3   JP       $CF3            ; Jump to CF3
$5FA    $8480   LD       V4, V8          ; V4 = V8
$5FC    $856D   UNKNOWN  856D            ; Unknown 8xxx instruction
$5FE    $54B1   UNKNOWN  $54B1           ; Unknown 5xxx instruction
$600    $914E   UNKNOWN  $914E           ; Unknown 9xxx instruction
$602    $758B   ADD      V5, #8B         ; Add 139 to V5
$604    $C798   RND      V7, #98         ; V7 = random & 98
$606    $7D6B   ADD      VD, #6B         ; Add 107 to VD
$608    $EAF4   UNKNOWN  $EAF4           ; Unknown Exxx instruction
$60A    $BD2F   JP       V0, $D2F        ; Jump to V0 + D2F
$60C    $D2C3   DRW      V2, VC, #3      ; Draw 3-byte sprite at V2, VC
$60E    $B3F3   JP       V0, $3F3        ; Jump to V0 + 3F3
$610    $5494   UNKNOWN  $5494           ; Unknown 5xxx instruction
$612    $211A   CALL     $11A            ; Call subroutine at 11A
$614    $5957   UNKNOWN  $5957           ; Unknown 5xxx instruction
$616    $D096   DRW      V0, V9, #6      ; Draw 6-byte sprite at V0, V9
$618    $50B1   UNKNOWN  $50B1           ; Unknown 5xxx instruction
$61A    $5DEC   UNKNOWN  $5DEC           ; Unknown 5xxx instruction
$61C    $5AA1   UNKNOWN  $5AA1           ; Unknown 5xxx instruction
$61E    $9F12   UNKNOWN  $9F12           ; Unknown 9xxx instruction
$620    $D1D5   DRW      V1, VD, #5      ; Draw 5-byte sprite at V1, VD
$622    $343C   SE       V4, #3C         ; Skip if V4 == 60
$624    $B06A   JP       V0, $06A        ; Jump to V0 + 06A
$626    $C44B   RND      V4, #4B         ; V4 = random & 4B
$628    $37F6   SE       V7, #F6         ; Skip if V7 == 246
$62A    $B72A   JP       V0, $72A        ; Jump to V0 + 72A
$62C    $F8C6   UNKNOWN  F8C6            ; Unknown Fxxx instruction
$62E    $540B   UNKNOWN  $540B           ; Unknown 5xxx instruction
$630    $B0A4   JP       V0, $0A4        ; Jump to V0 + 0A4
$632    $6107   LD       V1, #07         ; Load 7 into V1
$634    $241C   CALL     $41C            ; Call subroutine at 41C
$636    $4557   SNE      V5, #57         ; Skip if V5 != 87
$638    $8736   SHR      V7              ; V7 >>= 1, VF = LSB
$63A    $9B90   SNE      VB, V9          ; Skip if VB != V9
$63C    $B2BC   JP       V0, $2BC        ; Jump to V0 + 2BC
$63E    $09F7   SYS      $9F7            ; System call to 9F7
$640    $6B1A   LD       VB, #1A         ; Load 26 into VB
$642    $1A6E   JP       $A6E            ; Jump to A6E
$644    $F425   UNKNOWN  F425            ; Unknown Fxxx instruction
$646    $7459   ADD      V4, #59         ; Add 89 to V4
$648    $A214   LD       I, $214         ; Load 214 into I
$64A    $D952   DRW      V9, V5, #2      ; Draw 2-byte sprite at V9, V5
$64C    $9FE7   UNKNOWN  $9FE7           ; Unknown 9xxx instruction
$64E    $3006   SE       V0, #06         ; Skip if V0 == 6
$650    $BB22   JP       V0, $B22        ; Jump to V0 + B22
$652    $87D8   UNKNOWN  87D8            ; Unknown 8xxx instruction
$654    $6487   LD       V4, #87         ; Load 135 into V4
$656    $131A   JP       $31A            ; Jump to 31A
$658    $20C0   CALL     $0C0            ; Call subroutine at 0C0
$65A    $6A0D   LD       VA, #0D         ; Load 13 into VA
$65C    $C1FF   RND      V1, #FF         ; V1 = random & FF
$65E    $15A9   JP       $5A9            ; Jump to 5A9
$660    $9C2C   UNKNOWN  $9C2C           ; Unknown 9xxx instruction
$662    $6A60   LD       VA, #60         ; Load 96 into VA
$664    $3DE0   SE       VD, #E0         ; Skip if VD == 224
$666    $C4E4   RND      V4, #E4         ; V4 = random & E4
$668    $5F75   UNKNOWN  $5F75           ; Unknown 5xxx instruction
$66A    $2FC6   CALL     $FC6            ; Call subroutine at FC6
$66C    $8447   SUBN     V4, V4          ; V4 = V4 - V4, VF = !borrow
$66E    $22E0   CALL     $2E0            ; Call subroutine at 2E0
$670    $9473   UNKNOWN  $9473           ; Unknown 9xxx instruction
$672    $FF4E   UNKNOWN  FF4E            ; Unknown Fxxx instruction
$674    $6249   LD       V2, #49         ; Load 73 into V2
$676    $8D65   SUB      VD, V6          ; VD -= V6, VF = !borrow
$678    $C1A8   RND      V1, #A8         ; V1 = random & A8
$67A    $4977   SNE      V9, #77         ; Skip if V9 != 119
$67C    $0742   SYS      $742            ; System call to 742
$67E    $1E6D   JP       $E6D            ; Jump to E6D
$680    $26C4   CALL     $6C4            ; Call subroutine at 6C4
$682    $8A3F   UNKNOWN  8A3F            ; Unknown 8xxx instruction
$684    $E9BC   UNKNOWN  $E9BC           ; Unknown Exxx instruction
$686    $D200   DRW      V2, V0, #0      ; Draw 0-byte sprite at V2, V0
$688    $7C71   ADD      VC, #71         ; Add 113 to VC
$68A    $ADCB   LD       I, $DCB         ; Load DCB into I
$68C    $DCB0   DRW      VC, VB, #0      ; Draw 0-byte sprite at VC, VB
$68E    $0C4B   SYS      $C4B            ; System call to C4B
$690    $581E   UNKNOWN  $581E           ; Unknown 5xxx instruction
$692    $5E5F   UNKNOWN  $5E5F           ; Unknown 5xxx instruction
$694    $F6FA   UNKNOWN  F6FA            ; Unknown Fxxx instruction
$696    $E4A8   UNKNOWN  $E4A8           ; Unknown Exxx instruction
$698    $1317   JP       $317            ; Jump to 317
$69A    $FEA5   UNKNOWN  FEA5            ; Unknown Fxxx instruction
$69C    $96A6   UNKNOWN  $96A6           ; Unknown 9xxx instruction
$69E    $EC32   UNKNOWN  $EC32           ; Unknown Exxx instruction
$6A0    $9322   UNKNOWN  $9322           ; Unknown 9xxx instruction
$6A2    $1DD5   JP       $DD5            ; Jump to DD5
$6A4    $F90D   UNKNOWN  F90D            ; Unknown Fxxx instruction
$6A6    $2905   CALL     $905            ; Call subroutine at 905
$6A8    $4EFE   SNE      VE, #FE         ; Skip if VE != 254
$6AA    $2B0E   CALL     $B0E            ; Call subroutine at B0E
$6AC    $CED0   RND      VE, #D0         ; VE = random & D0
$6AE    $36A1   SE       V6, #A1         ; Skip if V6 == 161
$6B0    $A59A   LD       I, $59A         ; Load 59A into I
$6B2    $D4D9   DRW      V4, VD, #9      ; Draw 9-byte sprite at V4, VD
$6B4    $A0E0   LD       I, $0E0         ; Load 0E0 into I
$6B6    $D1D9   DRW      V1, VD, #9      ; Draw 9-byte sprite at V1, VD
$6B8    $80E2   AND      V0, VE          ; V0 &= VE
$6BA    $0117   SYS      $117            ; System call to 117
$6BC    $A5A5   LD       I, $5A5         ; Load 5A5 into I
$6BE    $64E0   LD       V4, #E0         ; Load 224 into V4
$6C0    $452C   SNE      V5, #2C         ; Skip if V5 != 44
$6C2    $4B5A   SNE      VB, #5A         ; Skip if VB != 90
$6C4    $7599   ADD      V5, #99         ; Add 153 to V5
$6C6    $DDC7   DRW      VD, VC, #7      ; Draw 7-byte sprite at VD, VC
$6C8    $1C52   JP       $C52            ; Jump to C52
$6CA    $AE0D   LD       I, $E0D         ; Load E0D into I
$6CC    $5E2A   UNKNOWN  $5E2A           ; Unknown 5xxx instruction
$6CE    $9D19   UNKNOWN  $9D19           ; Unknown 9xxx instruction
$6D0    $EBB9   UNKNOWN  $EBB9           ; Unknown Exxx instruction
$6D2    $4264   SNE      V2, #64         ; Skip if V2 != 100
$6D4    $6C69   LD       VC, #69         ; Load 105 into VC
$6D6    $D2F2   DRW      V2, VF, #2      ; Draw 2-byte sprite at V2, VF
$6D8    $EBC8   UNKNOWN  $EBC8           ; Unknown Exxx instruction
$6DA    $BFD6   JP       V0, $FD6        ; Jump to V0 + FD6
$6DC    $4504   SNE      V5, #04         ; Skip if V5 != 4
$6DE    $C7ED   RND      V7, #ED         ; V7 = random & ED
$6E0    $F768   UNKNOWN  F768            ; Unknown Fxxx instruction
$6E2    $1B48   JP       $B48            ; Jump to B48
$6E4    $5392   UNKNOWN  $5392           ; Unknown 5xxx instruction
$6E6    $158B   JP       $58B            ; Jump to 58B
$6E8    $C03D   RND      V0, #3D         ; V0 = random & 3D
$6EA    $1D89   JP       $D89            ; Jump to D89
$6EC    $1351   JP       $351            ; Jump to 351
$6EE    $0AC0   SYS      $AC0            ; System call to AC0
$6F0    $6F41   LD       VF, #41         ; Load 65 into VF
$6F2    $302B   SE       V0, #2B         ; Skip if V0 == 43
$6F4    $1503   JP       $503            ; Jump to 503
$6F6    $308B   SE       V0, #8B         ; Skip if V0 == 139
$6F8    $7F21   ADD      VF, #21         ; Add 33 to VF
$6FA    $D34A   DRW      V3, V4, #A      ; Draw 10-byte sprite at V3, V4
$6FC    $2BAD   CALL     $BAD            ; Call subroutine at BAD
$6FE    $ECF9   UNKNOWN  $ECF9           ; Unknown Exxx instruction
$700    $6FE0   LD       VF, #E0         ; Load 224 into VF
$702    $4C61   SNE      VC, #61         ; Skip if VC != 97
$704    $AFAD   LD       I, $FAD         ; Load FAD into I
$706    $135C   JP       $35C            ; Jump to 35C
$708    $5EA4   UNKNOWN  $5EA4           ; Unknown 5xxx instruction
$70A    $62C4   LD       V2, #C4         ; Load 196 into V2
$70C    $8EA4   ADD      VE, VA          ; VE += VA, VF = carry
$70E    $6027   LD       V0, #27         ; Load 39 into V0
$710    $9CE7   UNKNOWN  $9CE7           ; Unknown 9xxx instruction
$712    $4BE5   SNE      VB, #E5         ; Skip if VB != 229
$714    $71FC   ADD      V1, #FC         ; Add 252 to V1
$716    $0677   SYS      $677            ; System call to 677
$718    $1374   JP       $374            ; Jump to 374
$71A    $099F   SYS      $99F            ; System call to 99F
$71C    $6DB1   LD       VD, #B1         ; Load 177 into VD
$71E    $6227   LD       V2, #27         ; Load 39 into V2
$720    $68A7   LD       V8, #A7         ; Load 167 into V8
$722    $E9AD   UNKNOWN  $E9AD           ; Unknown Exxx instruction
$724    $FB01   UNKNOWN  FB01            ; Unknown Fxxx instruction
$726    $EB1D   UNKNOWN  $EB1D           ; Unknown Exxx instruction
$728    $30F1   SE       V0, #F1         ; Skip if V0 == 241
$72A    $13CE   JP       $3CE            ; Jump to 3CE
$72C    $25B1   CALL     $5B1            ; Call subroutine at 5B1
$72E    $93EA   UNKNOWN  $93EA           ; Unknown 9xxx instruction
$730    $E963   UNKNOWN  $E963           ; Unknown Exxx instruction
$732    $628E   LD       V2, #8E         ; Load 142 into V2
$734    $3F02   SE       VF, #02         ; Skip if VF == 2
$736    $54BE   UNKNOWN  $54BE           ; Unknown 5xxx instruction
$738    $FFF6   UNKNOWN  FFF6            ; Unknown Fxxx instruction
$73A    $67CC   LD       V7, #CC         ; Load 204 into V7
$73C    $D866   DRW      V8, V6, #6      ; Draw 6-byte sprite at V8, V6
$73E    $BCF0   JP       V0, $CF0        ; Jump to V0 + CF0
$740    $C070   RND      V0, #70         ; V0 = random & 70
$742    $F049   UNKNOWN  F049            ; Unknown Fxxx instruction
$744    $2AB8   CALL     $AB8            ; Call subroutine at AB8
$746    $7255   ADD      V2, #55         ; Add 85 to V2
$748    $1D02   JP       $D02            ; Jump to D02
$74A    $A481   LD       I, $481         ; Load 481 into I
$74C    $55A4   UNKNOWN  $55A4           ; Unknown 5xxx instruction
$74E    $7A2E   ADD      VA, #2E         ; Add 46 to VA
$750    $77F1   ADD      V7, #F1         ; Add 241 to V7
$752    $DBBA   DRW      VB, VB, #A      ; Draw 10-byte sprite at VB, VB
$754    $CB03   RND      VB, #03         ; VB = random & 03
$756    $09BB   SYS      $9BB            ; System call to 9BB
$758    $08DF   SYS      $8DF            ; System call to 8DF
$75A    $7B04   ADD      VB, #04         ; Add 4 to VB
$75C    $1D6B   JP       $D6B            ; Jump to D6B
$75E    $CC75   RND      VC, #75         ; VC = random & 75
$760    $B858   JP       V0, $858        ; Jump to V0 + 858
$762    $3A0B   SE       VA, #0B         ; Skip if VA == 11
$764    $C192   RND      V1, #92         ; V1 = random & 92
$766    $79E0   ADD      V9, #E0         ; Add 224 to V9
$768    $5C85   UNKNOWN  $5C85           ; Unknown 5xxx instruction
$76A    $35C6   SE       V5, #C6         ; Skip if V5 == 198
$76C    $D63C   DRW      V6, V3, #C      ; Draw 12-byte sprite at V6, V3
$76E    $6D03   LD       VD, #03         ; Load 3 into VD
$770    $0612   SYS      $612            ; System call to 612
$772    $47DD   SNE      V7, #DD         ; Skip if V7 != 221
$774    $7923   ADD      V9, #23         ; Add 35 to V9
$776    $EE9C   UNKNOWN  $EE9C           ; Unknown Exxx instruction
$778    $193D   JP       $93D            ; Jump to 93D
$77A    $6DD6   LD       VD, #D6         ; Load 214 into VD
$77C    $0CCC   SYS      $CCC            ; System call to CCC
$77E    $504F   UNKNOWN  $504F           ; Unknown 5xxx instruction
$780    $F2DF   UNKNOWN  F2DF            ; Unknown Fxxx instruction
$782    $F9E0   UNKNOWN  F9E0            ; Unknown Fxxx instruction
$784    $17BF   JP       $7BF            ; Jump to 7BF
$786    $F39A   UNKNOWN  F39A            ; Unknown Fxxx instruction
$788    $2095   CALL     $095            ; Call subroutine at 095
$78A    $0FA0   SYS      $FA0            ; System call to FA0
$78C    $BC71   JP       V0, $C71        ; Jump to V0 + C71
$78E    $30C4   SE       V0, #C4         ; Skip if V0 == 196
$790    $2DD1   CALL     $DD1            ; Call subroutine at DD1
$792    $A945   LD       I, $945         ; Load 945 into I
$794    $5DE0   SE       VD, VE          ; Skip if VD == VE
$796    $A8E2   LD       I, $8E2         ; Load 8E2 into I
$798    $68CA   LD       V8, #CA         ; Load 202 into V8
$79A    $621C   LD       V2, #1C         ; Load 28 into V2
$79C    $4BB9   SNE      VB, #B9         ; Skip if VB != 185
$79E    $6581   LD       V5, #81         ; Load 129 into V5
$7A0    $D513   DRW      V5, V1, #3      ; Draw 3-byte sprite at V5, V1
$7A2    $90AB   UNKNOWN  $90AB           ; Unknown 9xxx instruction
$7A4    $8D0F   UNKNOWN  8D0F            ; Unknown 8xxx instruction
$7A6    $60B3   LD       V0, #B3         ; Load 179 into V0
$7A8    $9ABF   UNKNOWN  $9ABF           ; Unknown 9xxx instruction
$7AA    $F499   UNKNOWN  F499            ; Unknown Fxxx instruction
$7AC    $45FE   SNE      V5, #FE         ; Skip if V5 != 254
$7AE    $A9C9   LD       I, $9C9         ; Load 9C9 into I
$7B0    $FE0A   LD       VE, K           ; Wait for key press, store in VE
$7B2    $4287   SNE      V2, #87         ; Skip if V2 != 135
$7B4    $B60A   JP       V0, $60A        ; Jump to V0 + 60A
$7B6    $03E3   SYS      $3E3            ; System call to 3E3
$7B8    $BE93   JP       V0, $E93        ; Jump to V0 + E93
$7BA    $CB53   RND      VB, #53         ; VB = random & 53
$7BC    $D732   DRW      V7, V3, #2      ; Draw 2-byte sprite at V7, V3
$7BE    $D502   DRW      V5, V0, #2      ; Draw 2-byte sprite at V5, V0
$7C0    $4DBF   SNE      VD, #BF         ; Skip if VD != 191
$7C2    $A9F7   LD       I, $9F7         ; Load 9F7 into I
$7C4    $1B05   JP       $B05            ; Jump to B05
$7C6    $4BA4   SNE      VB, #A4         ; Skip if VB != 164
$7C8    $57F1   UNKNOWN  $57F1           ; Unknown 5xxx instruction
$7CA    $C5D5   RND      V5, #D5         ; V5 = random & D5
$7CC    $8D73   XOR      VD, V7          ; VD ^= V7
$7CE    $5890   SE       V8, V9          ; Skip if V8 == V9
$7D0    $A60C   LD       I, $60C         ; Load 60C into I
$7D2    $16F0   JP       $6F0            ; Jump to 6F0
$7D4    $AFC4   LD       I, $FC4         ; Load FC4 into I
$7D6    $6516   LD       V5, #16         ; Load 22 into V5
$7D8    $F3BB   UNKNOWN  F3BB            ; Unknown Fxxx instruction
$7DA    $2B98   CALL     $B98            ; Call subroutine at B98
$7DC    $CB47   RND      VB, #47         ; VB = random & 47
$7DE    $5A58   UNKNOWN  $5A58           ; Unknown 5xxx instruction
$7E0    $B23F   JP       V0, $23F        ; Jump to V0 + 23F
$7E2    $C03E   RND      V0, #3E         ; V0 = random & 3E
$7E4    $DDEB   DRW      VD, VE, #B      ; Draw 11-byte sprite at VD, VE
$7E6    $6456   LD       V4, #56         ; Load 86 into V4
$7E8    $4DA5   SNE      VD, #A5         ; Skip if VD != 165
$7EA    $90D4   UNKNOWN  $90D4           ; Unknown 9xxx instruction
$7EC    $A9E4   LD       I, $9E4         ; Load 9E4 into I
$7EE    $22FC   CALL     $2FC            ; Call subroutine at 2FC
$7F0    $AFCC   LD       I, $FCC         ; Load FCC into I
$7F2    $5E8F   UNKNOWN  $5E8F           ; Unknown 5xxx instruction
$7F4    $55A5   UNKNOWN  $55A5           ; Unknown 5xxx instruction
$7F6    $D512   DRW      V5, V1, #2      ; Draw 2-byte sprite at V5, V1
$7F8    $9336   UNKNOWN  $9336           ; Unknown 9xxx instruction
$7FA    $7CCD   ADD      VC, #CD         ; Add 205 to VC
$7FC    $EFC0   UNKNOWN  $EFC0           ; Unknown Exxx instruction
$7FE    $1AEF   JP       $AEF            ; Jump to AEF
$800    $75A8   ADD      V5, #A8         ; Add 168 to V5
$802    $07BF   SYS      $7BF            ; System call to 7BF
$804    $3E4D   SE       VE, #4D         ; Skip if VE == 77
$806    $9060   SNE      V0, V6          ; Skip if V0 != V6
$808    $4B2D   SNE      VB, #2D         ; Skip if VB != 45
$80A    $9A56   UNKNOWN  $9A56           ; Unknown 9xxx instruction
$80C    $4FBF   SNE      VF, #BF         ; Skip if VF != 191
$80E    $9B49   UNKNOWN  $9B49           ; Unknown 9xxx instruction
$810    $6894   LD       V8, #94         ; Load 148 into V8
$812    $E9F4   UNKNOWN  $E9F4           ; Unknown Exxx instruction
$814    $CE90   RND      VE, #90         ; VE = random & 90
$816    $B03A   JP       V0, $03A        ; Jump to V0 + 03A
$818    $48BE   SNE      V8, #BE         ; Skip if V8 != 190
$81A    $1F74   JP       $F74            ; Jump to F74
$81C    $CA1D   RND      VA, #1D         ; VA = random & 1D
$81E    $9F96   UNKNOWN  $9F96           ; Unknown 9xxx instruction
$820    $6F60   LD       VF, #60         ; Load 96 into VF
$822    $6064   LD       V0, #64         ; Load 100 into V0
$824    $AC7C   LD       I, $C7C         ; Load C7C into I
$826    $7868   ADD      V8, #68         ; Add 104 to V8
$828    $96C3   UNKNOWN  $96C3           ; Unknown 9xxx instruction
$82A    $1A13   JP       $A13            ; Jump to A13
$82C    $1539   JP       $539            ; Jump to 539
$82E    $0E75   SYS      $E75            ; System call to E75
$830    $1783   JP       $783            ; Jump to 783
$832    $DD98   DRW      VD, V9, #8      ; Draw 8-byte sprite at VD, V9
$834    $94D9   UNKNOWN  $94D9           ; Unknown 9xxx instruction
$836    $43AD   SNE      V3, #AD         ; Skip if V3 != 173
$838    $176C   JP       $76C            ; Jump to 76C
$83A    $18F4   JP       $8F4            ; Jump to 8F4
$83C    $7D3F   ADD      VD, #3F         ; Add 63 to VD
$83E    $6734   LD       V7, #34         ; Load 52 into V7
$840    $572F   UNKNOWN  $572F           ; Unknown 5xxx instruction
$842    $B436   JP       V0, $436        ; Jump to V0 + 436
$844    $CF77   RND      VF, #77         ; VF = random & 77
$846    $10C0   JP       $0C0            ; Jump to 0C0
$848    $EE44   UNKNOWN  $EE44           ; Unknown Exxx instruction
$84A    $BCC6   JP       V0, $CC6        ; Jump to V0 + CC6
$84C    $2F9B   CALL     $F9B            ; Call subroutine at F9B
$84E    $9122   UNKNOWN  $9122           ; Unknown 9xxx instruction
$850    $9CB5   UNKNOWN  $9CB5           ; Unknown 9xxx instruction
$852    $9173   UNKNOWN  $9173           ; Unknown 9xxx instruction
$854    $2786   CALL     $786            ; Call subroutine at 786
$856    $0BE5   SYS      $BE5            ; System call to BE5
$858    $7E36   ADD      VE, #36         ; Add 54 to VE
$85A    $6B07   LD       VB, #07         ; Load 7 into VB
$85C    $ACE5   LD       I, $CE5         ; Load CE5 into I
$85E    $F90F   UNKNOWN  F90F            ; Unknown Fxxx instruction
$860    $51E8   UNKNOWN  $51E8           ; Unknown 5xxx instruction
$862    $5A79   UNKNOWN  $5A79           ; Unknown 5xxx instruction
$864    $E915   UNKNOWN  $E915           ; Unknown Exxx instruction
$866    $0B1F   SYS      $B1F            ; System call to B1F
$868    $A6C7   LD       I, $6C7         ; Load 6C7 into I
$86A    $9DF0   SNE      VD, VF          ; Skip if VD != VF
$86C    $9704   UNKNOWN  $9704           ; Unknown 9xxx instruction
$86E    $7077   ADD      V0, #77         ; Add 119 to V0
$870    $3217   SE       V2, #17         ; Skip if V2 == 23
$872    $6BC8   LD       VB, #C8         ; Load 200 into VB
$874    $9B99   UNKNOWN  $9B99           ; Unknown 9xxx instruction
$876    $4D68   SNE      VD, #68         ; Skip if VD != 104
$878    $AB7B   LD       I, $B7B         ; Load B7B into I
$87A    $0A0D   SYS      $A0D            ; System call to A0D
$87C    $C8E6   RND      V8, #E6         ; V8 = random & E6
$87E    $AED3   LD       I, $ED3         ; Load ED3 into I
$880    $9057   UNKNOWN  $9057           ; Unknown 9xxx instruction
$882    $AB27   LD       I, $B27         ; Load B27 into I
$884    $F645   UNKNOWN  F645            ; Unknown Fxxx instruction
$886    $75F4   ADD      V5, #F4         ; Add 244 to V5
$888    $AF7C   LD       I, $F7C         ; Load F7C into I
$88A    $406D   SNE      V0, #6D         ; Skip if V0 != 109
$88C    $D9C7   DRW      V9, VC, #7      ; Draw 7-byte sprite at V9, VC
$88E    $8A16   SHR      VA              ; VA >>= 1, VF = LSB
$890    $29E2   CALL     $9E2            ; Call subroutine at 9E2
$892    $7C13   ADD      VC, #13         ; Add 19 to VC
$894    $6F63   LD       VF, #63         ; Load 99 into VF
$896    $4395   SNE      V3, #95         ; Skip if V3 != 149
$898    $DFC7   DRW      VF, VC, #7      ; Draw 7-byte sprite at VF, VC
$89A    $5A42   UNKNOWN  $5A42           ; Unknown 5xxx instruction
$89C    $7F4C   ADD      VF, #4C         ; Add 76 to VF
$89E    $C8E9   RND      V8, #E9         ; V8 = random & E9
$8A0    $6AA9   LD       VA, #A9         ; Load 169 into VA
$8A2    $C346   RND      V3, #46         ; V3 = random & 46
$8A4    $5688   UNKNOWN  $5688           ; Unknown 5xxx instruction
$8A6    $8AF9   UNKNOWN  8AF9            ; Unknown 8xxx instruction
$8A8    $C415   RND      V4, #15         ; V4 = random & 15
$8AA    $E50C   UNKNOWN  $E50C           ; Unknown Exxx instruction
$8AC    $5DE8   UNKNOWN  $5DE8           ; Unknown 5xxx instruction
$8AE    $08E0   SYS      $8E0            ; System call to 8E0
$8B0    $31F4   SE       V1, #F4         ; Skip if V1 == 244
$8B2    $D8CC   DRW      V8, VC, #C      ; Draw 12-byte sprite at V8, VC
$8B4    $E0F6   UNKNOWN  $E0F6           ; Unknown Exxx instruction
$8B6    $2A77   CALL     $A77            ; Call subroutine at A77
$8B8    $FEA0   UNKNOWN  FEA0            ; Unknown Fxxx instruction
$8BA    $C21C   RND      V2, #1C         ; V2 = random & 1C
$8BC    $D7AA   DRW      V7, VA, #A      ; Draw 10-byte sprite at V7, VA
$8BE    $E4F3   UNKNOWN  $E4F3           ; Unknown Exxx instruction
$8C0    $CC32   RND      VC, #32         ; VC = random & 32
$8C2    $30BB   SE       V0, #BB         ; Skip if V0 == 187
$8C4    $3726   SE       V7, #26         ; Skip if V7 == 38
$8C6    $4E42   SNE      VE, #42         ; Skip if VE != 66
$8C8    $52BB   UNKNOWN  $52BB           ; Unknown 5xxx instruction
$8CA    $E5F6   UNKNOWN  $E5F6           ; Unknown Exxx instruction
$8CC    $CF8C   RND      VF, #8C         ; VF = random & 8C
$8CE    $2283   CALL     $283            ; Call subroutine at 283
$8D0    $F42D   UNKNOWN  F42D            ; Unknown Fxxx instruction
$8D2    $8D1D   UNKNOWN  8D1D            ; Unknown 8xxx instruction
$8D4    $7C6A   ADD      VC, #6A         ; Add 106 to VC
$8D6    $7721   ADD      V7, #21         ; Add 33 to V7
$8D8    $6EBA   LD       VE, #BA         ; Load 186 into VE
$8DA    $FAA2   UNKNOWN  FAA2            ; Unknown Fxxx instruction
$8DC    $D924   DRW      V9, V2, #4      ; Draw 4-byte sprite at V9, V2
$8DE    $2FEC   CALL     $FEC            ; Call subroutine at FEC
$8E0    $C7E3   RND      V7, #E3         ; V7 = random & E3
$8E2    $D57D   DRW      V5, V7, #D      ; Draw 13-byte sprite at V5, V7
$8E4    $5187   UNKNOWN  $5187           ; Unknown 5xxx instruction
$8E6    $8972   AND      V9, V7          ; V9 &= V7
$8E8    $EE12   UNKNOWN  $EE12           ; Unknown Exxx instruction
$8EA    $F3A5   UNKNOWN  F3A5            ; Unknown Fxxx instruction
$8EC    $7EBF   ADD      VE, #BF         ; Add 191 to VE
$8EE    $C7FD   RND      V7, #FD         ; V7 = random & FD
$8F0    $4A48   SNE      VA, #48         ; Skip if VA != 72
$8F2    $599B   UNKNOWN  $599B           ; Unknown 5xxx instruction
$8F4    $3E2D   SE       VE, #2D         ; Skip if VE == 45
$8F6    $A822   LD       I, $822         ; Load 822 into I
$8F8    $22E0   CALL     $2E0            ; Call subroutine at 2E0
$8FA    $24EF   CALL     $4EF            ; Call subroutine at 4EF
$8FC    $795D   ADD      V9, #5D         ; Add 93 to V9
$8FE    $B1B4   JP       V0, $1B4        ; Jump to V0 + 1B4
$900    $1F31   JP       $F31            ; Jump to F31
$902    $0D9F   SYS      $D9F            ; System call to D9F
$904    $66E4   LD       V6, #E4         ; Load 228 into V6
$906    $7D05   ADD      VD, #05         ; Add 5 to VD
$908    $3AB3   SE       VA, #B3         ; Skip if VA == 179
$90A    $64AF   LD       V4, #AF         ; Load 175 into V4
$90C    $C372   RND      V3, #72         ; V3 = random & 72
$90E    $E069   UNKNOWN  $E069           ; Unknown Exxx instruction
$910    $F178   UNKNOWN  F178            ; Unknown Fxxx instruction
$912    $A463   LD       I, $463         ; Load 463 into I
$914    $6B37   LD       VB, #37         ; Load 55 into VB
$916    $2E6C   CALL     $E6C            ; Call subroutine at E6C
$918    $1B91   JP       $B91            ; Jump to B91
$91A    $7888   ADD      V8, #88         ; Add 136 to V8
$91C    $E815   UNKNOWN  $E815           ; Unknown Exxx instruction
$91E    $157A   JP       $57A            ; Jump to 57A
$920    $CE9A   RND      VE, #9A         ; VE = random & 9A
$922    $F2EB   UNKNOWN  F2EB            ; Unknown Fxxx instruction
$924    $B2A2   JP       V0, $2A2        ; Jump to V0 + 2A2
$926    $0488   SYS      $488            ; System call to 488
$928    $1325   JP       $325            ; Jump to 325
$92A    $CA23   RND      VA, #23         ; VA = random & 23
$92C    $21C9   CALL     $1C9            ; Call subroutine at 1C9
$92E    $ABCD   LD       I, $BCD         ; Load BCD into I
$930    $7C6B   ADD      VC, #6B         ; Add 107 to VC
$932    $6A6E   LD       VA, #6E         ; Load 110 into VA
$934    $873B   UNKNOWN  873B            ; Unknown 8xxx instruction
$936    $3139   SE       V1, #39         ; Skip if V1 == 57
$938    $DC49   DRW      VC, V4, #9      ; Draw 9-byte sprite at VC, V4
$93A    $E784   UNKNOWN  $E784           ; Unknown Exxx instruction
$93C    $56C6   UNKNOWN  $56C6           ; Unknown 5xxx instruction
$93E    $028E   SYS      $28E            ; System call to 28E
$940    $EF0D   UNKNOWN  $EF0D           ; Unknown Exxx instruction
$942    $0569   SYS      $569            ; System call to 569
$944    $1508   JP       $508            ; Jump to 508
$946    $E35F   UNKNOWN  $E35F           ; Unknown Exxx instruction
$948    $51DA   UNKNOWN  $51DA           ; Unknown 5xxx instruction
$94A    $2A13   CALL     $A13            ; Call subroutine at A13
$94C    $03EA   SYS      $3EA            ; System call to 3EA
$94E    $167C   JP       $67C            ; Jump to 67C
$950    $650E   LD       V5, #0E         ; Load 14 into V5
$952    $D18C   DRW      V1, V8, #C      ; Draw 12-byte sprite at V1, V8
$954    $2CEA   CALL     $CEA            ; Call subroutine at CEA
$956    $514A   UNKNOWN  $514A           ; Unknown 5xxx instruction
$958    $9D0E   UNKNOWN  $9D0E           ; Unknown 9xxx instruction
$95A    $5755   UNKNOWN  $5755           ; Unknown 5xxx instruction
$95C    $FEF3   UNKNOWN  FEF3            ; Unknown Fxxx instruction
$95E    $B44C   JP       V0, $44C        ; Jump to V0 + 44C
$960    $7A50   ADD      VA, #50         ; Add 80 to VA
$962    $5AA9   UNKNOWN  $5AA9           ; Unknown 5xxx instruction
$964    $D781   DRW      V7, V8, #1      ; Draw 1-byte sprite at V7, V8
$966    $BBFB   JP       V0, $BFB        ; Jump to V0 + BFB
$968    $5280   SE       V2, V8          ; Skip if V2 == V8
$96A    $9530   SNE      V5, V3          ; Skip if V5 != V3
$96C    $6639   LD       V6, #39         ; Load 57 into V6
$96E    $0265   SYS      $265            ; System call to 265
$970    $B5C4   JP       V0, $5C4        ; Jump to V0 + 5C4
$972    $B7B7   JP       V0, $7B7        ; Jump to V0 + 7B7
$974    $4311   SNE      V3, #11         ; Skip if V3 != 17
$976    $62CB   LD       V2, #CB         ; Load 203 into V2
$978    $237E   CALL     $37E            ; Call subroutine at 37E
$97A    $0BF0   SYS      $BF0            ; System call to BF0
$97C    $DA08   DRW      VA, V0, #8      ; Draw 8-byte sprite at VA, V0
$97E    $B6D0   JP       V0, $6D0        ; Jump to V0 + 6D0
$980    $7C01   ADD      VC, #01         ; Add 1 to VC
$982    $CF37   RND      VF, #37         ; VF = random & 37
$984    $F5CF   UNKNOWN  F5CF            ; Unknown Fxxx instruction
$986    $F868   UNKNOWN  F868            ; Unknown Fxxx instruction
$988    $36E7   SE       V6, #E7         ; Skip if V6 == 231
$98A    $C4AD   RND      V4, #AD         ; V4 = random & AD
$98C    $7A03   ADD      VA, #03         ; Add 3 to VA
$98E    $986B   UNKNOWN  $986B           ; Unknown 9xxx instruction
$990    $4875   SNE      V8, #75         ; Skip if V8 != 117
$992    $E469   UNKNOWN  $E469           ; Unknown Exxx instruction
$994    $FDA8   UNKNOWN  FDA8            ; Unknown Fxxx instruction
$996    $A683   LD       I, $683         ; Load 683 into I
$998    $98E6   UNKNOWN  $98E6           ; Unknown 9xxx instruction
$99A    $C91E   RND      V9, #1E         ; V9 = random & 1E
$99C    $61FE   LD       V1, #FE         ; Load 254 into V1
$99E    $13A7   JP       $3A7            ; Jump to 3A7
$9A0    $E77E   UNKNOWN  $E77E           ; Unknown Exxx instruction
$9A2    $10BF   JP       $0BF            ; Jump to 0BF
$9A4    $12A4   JP       $2A4            ; Jump to 2A4
$9A6    $D00F   DRW      V0, V0, #F      ; Draw 15-byte sprite at V0, V0
$9A8    $736B   ADD      V3, #6B         ; Add 107 to V3
$9AA    $0AAF   SYS      $AAF            ; System call to AAF
$9AC    $27CD   CALL     $7CD            ; Call subroutine at 7CD
$9AE    $AC44   LD       I, $C44         ; Load C44 into I
$9B0    $94E0   SNE      V4, VE          ; Skip if V4 != VE
$9B2    $3FFE   SE       VF, #FE         ; Skip if VF == 254
$9B4    $1039   JP       $039            ; Jump to 039
$9B6    $2904   CALL     $904            ; Call subroutine at 904
$9B8    $B616   JP       V0, $616        ; Jump to V0 + 616
$9BA    $8046   SHR      V0              ; V0 >>= 1, VF = LSB
$9BC    $B637   JP       V0, $637        ; Jump to V0 + 637
$9BE    $A80B   LD       I, $80B         ; Load 80B into I
$9C0    $C0FE   RND      V0, #FE         ; V0 = random & FE
$9C2    $AD06   LD       I, $D06         ; Load D06 into I
$9C4    $37D5   SE       V7, #D5         ; Skip if V7 == 213
$9C6    $722B   ADD      V2, #2B         ; Add 43 to V2
$9C8    $2D29   CALL     $D29            ; Call subroutine at D29
$9CA    $E802   UNKNOWN  $E802           ; Unknown Exxx instruction
$9CC    $BC85   JP       V0, $C85        ; Jump to V0 + C85
$9CE    $41CF   SNE      V1, #CF         ; Skip if V1 != 207
$9D0    $3757   SE       V7, #57         ; Skip if V7 == 87
$9D2    $86B5   SUB      V6, VB          ; V6 -= VB, VF = !borrow
$9D4    $61D3   LD       V1, #D3         ; Load 211 into V1
$9D6    $16A5   JP       $6A5            ; Jump to 6A5
$9D8    $DBD2   DRW      VB, VD, #2      ; Draw 2-byte sprite at VB, VD
$9DA    $7EB2   ADD      VE, #B2         ; Add 178 to VE
$9DC    $7675   ADD      V6, #75         ; Add 117 to V6
$9DE    $B26E   JP       V0, $26E        ; Jump to V0 + 26E
$9E0    $0DEE   SYS      $DEE            ; System call to DEE
$9E2    $916D   UNKNOWN  $916D           ; Unknown 9xxx instruction
$9E4    $71ED   ADD      V1, #ED         ; Add 237 to V1
$9E6    $FD5F   UNKNOWN  FD5F            ; Unknown Fxxx instruction
$9E8    $20B0   CALL     $0B0            ; Call subroutine at 0B0
$9EA    $A31F   LD       I, $31F         ; Load 31F into I
$9EC    $7526   ADD      V5, #26         ; Add 38 to V5
$9EE    $187C   JP       $87C            ; Jump to 87C
$9F0    $397F   SE       V9, #7F         ; Skip if V9 == 127
$9F2    $2C6D   CALL     $C6D            ; Call subroutine at C6D
$9F4    $1C63   JP       $C63            ; Jump to C63
$9F6    $A569   LD       I, $569         ; Load 569 into I
$9F8    $62ED   LD       V2, #ED         ; Load 237 into V2
$9FA    $ED63   UNKNOWN  $ED63           ; Unknown Exxx instruction
$9FC    $5959   UNKNOWN  $5959           ; Unknown 5xxx instruction
$9FE    $760A   ADD      V6, #0A         ; Add 10 to V6
$A00    $2262   CALL     $262            ; Call subroutine at 262
$A02    $D5E9   DRW      V5, VE, #9      ; Draw 9-byte sprite at V5, VE
$A04    $0414   SYS      $414            ; System call to 414
$A06    $26C2   CALL     $6C2            ; Call subroutine at 6C2
$A08    $F882   UNKNOWN  F882            ; Unknown Fxxx instruction
$A0A    $A579   LD       I, $579         ; Load 579 into I
$A0C    $98BA   UNKNOWN  $98BA           ; Unknown 9xxx instruction
$A0E    $0F0B   SYS      $F0B            ; System call to F0B
$A10    $7BC3   ADD      VB, #C3         ; Add 195 to VB
$A12    $57D3   UNKNOWN  $57D3           ; Unknown 5xxx instruction
$A14    $32EB   SE       V2, #EB         ; Skip if V2 == 235
$A16    $479A   SNE      V7, #9A         ; Skip if V7 != 154
$A18    $51C3   UNKNOWN  $51C3           ; Unknown 5xxx instruction
$A1A    $94F0   SNE      V4, VF          ; Skip if V4 != VF
$A1C    $8FE1   OR       VF, VE          ; VF |= VE
$A1E    $25C5   CALL     $5C5            ; Call subroutine at 5C5
$A20    $6C82   LD       VC, #82         ; Load 130 into VC
$A22    $7D97   ADD      VD, #97         ; Add 151 to VD
$A24    $ADA3   LD       I, $DA3         ; Load DA3 into I
$A26    $9DC3   UNKNOWN  $9DC3           ; Unknown 9xxx instruction
$A28    $9AAF   UNKNOWN  $9AAF           ; Unknown 9xxx instruction
$A2A    $170A   JP       $70A            ; Jump to 70A
$A2C    $558B   UNKNOWN  $558B           ; Unknown 5xxx instruction
$A2E    $E2EB   UNKNOWN  $E2EB           ; Unknown Exxx instruction
$A30    $B869   JP       V0, $869        ; Jump to V0 + 869
$A32    $C509   RND      V5, #09         ; V5 = random & 09
$A34    $4B27   SNE      VB, #27         ; Skip if VB != 39
$A36    $7829   ADD      V8, #29         ; Add 41 to V8
$A38    $C145   RND      V1, #45         ; V1 = random & 45
$A3A    $A2D9   LD       I, $2D9         ; Load 2D9 into I
$A3C    $7974   ADD      V9, #74         ; Add 116 to V9
$A3E    $3AB2   SE       VA, #B2         ; Skip if VA == 178
$A40    $2DB2   CALL     $DB2            ; Call subroutine at DB2
$A42    $6D72   LD       VD, #72         ; Load 114 into VD
$A44    $CD8A   RND      VD, #8A         ; VD = random & 8A
$A46    $124F   JP       $24F            ; Jump to 24F
$A48    $F942   UNKNOWN  F942            ; Unknown Fxxx instruction
$A4A    $2DCE   CALL     $DCE            ; Call subroutine at DCE
$A4C    $0A2A   SYS      $A2A            ; System call to A2A
$A4E    $F7CF   UNKNOWN  F7CF            ; Unknown Fxxx instruction
$A50    $44C3   SNE      V4, #C3         ; Skip if V4 != 195
$A52    $1427   JP       $427            ; Jump to 427
$A54    $2E70   CALL     $E70            ; Call subroutine at E70
$A56    $E656   UNKNOWN  $E656           ; Unknown Exxx instruction
$A58    $A8E3   LD       I, $8E3         ; Load 8E3 into I
$A5A    $6893   LD       V8, #93         ; Load 147 into V8
$A5C    $B77C   JP       V0, $77C        ; Jump to V0 + 77C
$A5E    $6684   LD       V6, #84         ; Load 132 into V6
$A60    $8AEC   UNKNOWN  8AEC            ; Unknown 8xxx instruction
$A62    $7013   ADD      V0, #13         ; Add 19 to V0
$A64    $1109   JP       $109            ; Jump to 109
$A66    $82D5   SUB      V2, VD          ; V2 -= VD, VF = !borrow
$A68    $F538   UNKNOWN  F538            ; Unknown Fxxx instruction
$A6A    $961D   UNKNOWN  $961D           ; Unknown 9xxx instruction
$A6C    $4EA5   SNE      VE, #A5         ; Skip if VE != 165
$A6E    $EDA1   SKNP     VD              ; Skip if key VD not pressed
$A70    $FE64   UNKNOWN  FE64            ; Unknown Fxxx instruction
$A72    $2CFF   CALL     $CFF            ; Call subroutine at CFF
$A74    $B273   JP       V0, $273        ; Jump to V0 + 273
$A76    $25E4   CALL     $5E4            ; Call subroutine at 5E4
$A78    $9B28   UNKNOWN  $9B28           ; Unknown 9xxx instruction
$A7A    $7509   ADD      V5, #09         ; Add 9 to V5
$A7C    $7A80   ADD      VA, #80         ; Add 128 to VA
$A7E    $A1BE   LD       I, $1BE         ; Load 1BE into I
$A80    $2EBB   CALL     $EBB            ; Call subroutine at EBB
$A82    $6F10   LD       VF, #10         ; Load 16 into VF
$A84    $1D86   JP       $D86            ; Jump to D86
$A86    $587C   UNKNOWN  $587C           ; Unknown 5xxx instruction
$A88    $C43D   RND      V4, #3D         ; V4 = random & 3D
$A8A    $6C32   LD       VC, #32         ; Load 50 into VC
$A8C    $33B2   SE       V3, #B2         ; Skip if V3 == 178
$A8E    $B109   JP       V0, $109        ; Jump to V0 + 109
$A90    $3F10   SE       VF, #10         ; Skip if VF == 16
$A92    $C3BC   RND      V3, #BC         ; V3 = random & BC
$A94    $488E   SNE      V8, #8E         ; Skip if V8 != 142
$A96    $21BF   CALL     $1BF            ; Call subroutine at 1BF
$A98    $9E29   UNKNOWN  $9E29           ; Unknown 9xxx instruction
$A9A    $4067   SNE      V0, #67         ; Skip if V0 != 103
$A9C    $4461   SNE      V4, #61         ; Skip if V4 != 97
$A9E    $EAF8   UNKNOWN  $EAF8           ; Unknown Exxx instruction
$AA0    $8732   AND      V7, V3          ; V7 &= V3
$AA2    $1097   JP       $097            ; Jump to 097
$AA4    $778B   ADD      V7, #8B         ; Add 139 to V7
$AA6    $D55B   DRW      V5, V5, #B      ; Draw 11-byte sprite at V5, V5
$AA8    $C93E   RND      V9, #3E         ; V9 = random & 3E
$AAA    $0966   SYS      $966            ; System call to 966
$AAC    $9249   UNKNOWN  $9249           ; Unknown 9xxx instruction
$AAE    $000B   SYS      $00B            ; System call to 00B
$AB0    $9615   UNKNOWN  $9615           ; Unknown 9xxx instruction
$AB2    $38AB   SE       V8, #AB         ; Skip if V8 == 171
$AB4    $A1A0   LD       I, $1A0         ; Load 1A0 into I
$AB6    $7BF3   ADD      VB, #F3         ; Add 243 to VB
$AB8    $FF76   UNKNOWN  FF76            ; Unknown Fxxx instruction
$ABA    $5852   UNKNOWN  $5852           ; Unknown 5xxx instruction
$ABC    $4617   SNE      V6, #17         ; Skip if V6 != 23
$ABE    $4A17   SNE      VA, #17         ; Skip if VA != 23
$AC0    $8523   XOR      V5, V2          ; V5 ^= V2
$AC2    $2EB1   CALL     $EB1            ; Call subroutine at EB1
$AC4    $1499   JP       $499            ; Jump to 499
$AC6    $E52A   UNKNOWN  $E52A           ; Unknown Exxx instruction
$AC8    $B2C3   JP       V0, $2C3        ; Jump to V0 + 2C3
$ACA    $9E46   UNKNOWN  $9E46           ; Unknown 9xxx instruction
$ACC    $B64B   JP       V0, $64B        ; Jump to V0 + 64B
$ACE    $392A   SE       V9, #2A         ; Skip if V9 == 42
$AD0    $B522   JP       V0, $522        ; Jump to V0 + 522
$AD2    $852C   UNKNOWN  852C            ; Unknown 8xxx instruction
$AD4    $468F   SNE      V6, #8F         ; Skip if V6 != 143
$AD6    $0A36   SYS      $A36            ; System call to A36
$AD8    $0123   SYS      $123            ; System call to 123
$ADA    $EC1F   UNKNOWN  $EC1F           ; Unknown Exxx instruction
$ADC    $8EAE   SHL      VE              ; VE <<= 1, VF = MSB
$ADE    $FD85   UNKNOWN  FD85            ; Unknown Fxxx instruction
$AE0    $FF85   UNKNOWN  FF85            ; Unknown Fxxx instruction
$AE2    $E6E2   UNKNOWN  $E6E2           ; Unknown Exxx instruction
$AE4    $B514   JP       V0, $514        ; Jump to V0 + 514
$AE6    $F652   UNKNOWN  F652            ; Unknown Fxxx instruction
$AE8    $FF2C   UNKNOWN  FF2C            ; Unknown Fxxx instruction
$AEA    $8725   SUB      V7, V2          ; V7 -= V2, VF = !borrow
$AEC    $F288   UNKNOWN  F288            ; Unknown Fxxx instruction
$AEE    $50E7   UNKNOWN  $50E7           ; Unknown 5xxx instruction
$AF0    $3741   SE       V7, #41         ; Skip if V7 == 65
$AF2    $B038   JP       V0, $038        ; Jump to V0 + 038
$AF4    $944B   UNKNOWN  $944B           ; Unknown 9xxx instruction
$AF6    $0918   SYS      $918            ; System call to 918
$AF8    $567E   UNKNOWN  $567E           ; Unknown 5xxx instruction
$AFA    $8ECA   UNKNOWN  8ECA            ; Unknown 8xxx instruction
$AFC    $452E   SNE      V5, #2E         ; Skip if V5 != 46
$AFE    $2759   CALL     $759            ; Call subroutine at 759
$B00    $96A5   UNKNOWN  $96A5           ; Unknown 9xxx instruction
$B02    $473A   SNE      V7, #3A         ; Skip if V7 != 58
$B04    $9F86   UNKNOWN  $9F86           ; Unknown 9xxx instruction
$B06    $7D52   ADD      VD, #52         ; Add 82 to VD
$B08    $614B   LD       V1, #4B         ; Load 75 into V1
$B0A    $DC97   DRW      VC, V9, #7      ; Draw 7-byte sprite at VC, V9
$B0C    $58E8   UNKNOWN  $58E8           ; Unknown 5xxx instruction
$B0E    $1442   JP       $442            ; Jump to 442
$B10    $7E88   ADD      VE, #88         ; Add 136 to VE
$B12    $D9F1   DRW      V9, VF, #1      ; Draw 1-byte sprite at V9, VF
$B14    $738D   ADD      V3, #8D         ; Add 141 to V3
$B16    $5705   UNKNOWN  $5705           ; Unknown 5xxx instruction
$B18    $4CA6   SNE      VC, #A6         ; Skip if VC != 166
$B1A    $5291   UNKNOWN  $5291           ; Unknown 5xxx instruction
$B1C    $2E81   CALL     $E81            ; Call subroutine at E81
$B1E    $A3B1   LD       I, $3B1         ; Load 3B1 into I
$B20    $F034   UNKNOWN  F034            ; Unknown Fxxx instruction
$B22    $4CED   SNE      VC, #ED         ; Skip if VC != 237
$B24    $4EC0   SNE      VE, #C0         ; Skip if VE != 192
$B26    $AF1F   LD       I, $F1F         ; Load F1F into I
$B28    $2A93   CALL     $A93            ; Call subroutine at A93
$B2A    $254A   CALL     $54A            ; Call subroutine at 54A
$B2C    $E3CC   UNKNOWN  $E3CC           ; Unknown Exxx instruction
$B2E    $4DA1   SNE      VD, #A1         ; Skip if VD != 161
$B30    $5737   UNKNOWN  $5737           ; Unknown 5xxx instruction
$B32    $1E95   JP       $E95            ; Jump to E95
$B34    $6209   LD       V2, #09         ; Load 9 into V2
$B36    $B4EE   JP       V0, $4EE        ; Jump to V0 + 4EE
$B38    $23CF   CALL     $3CF            ; Call subroutine at 3CF
$B3A    $4FD7   SNE      VF, #D7         ; Skip if VF != 215
$B3C    $F025   UNKNOWN  F025            ; Unknown Fxxx instruction
$B3E    $C4C5   RND      V4, #C5         ; V4 = random & C5
$B40    $CF4B   RND      VF, #4B         ; VF = random & 4B
$B42    $D313   DRW      V3, V1, #3      ; Draw 3-byte sprite at V3, V1
$B44    $D101   DRW      V1, V0, #1      ; Draw 1-byte sprite at V1, V0
$B46    $66F0   LD       V6, #F0         ; Load 240 into V6
$B48    $BC62   JP       V0, $C62        ; Jump to V0 + C62
$B4A    $904E   UNKNOWN  $904E           ; Unknown 9xxx instruction
$B4C    $4A20   SNE      VA, #20         ; Skip if VA != 32
$B4E    $060C   SYS      $60C            ; System call to 60C
$B50    $8A10   LD       VA, V1          ; VA = V1
$B52    $A3FB   LD       I, $3FB         ; Load 3FB into I
$B54    $2A16   CALL     $A16            ; Call subroutine at A16
$B56    $1EA9   JP       $EA9            ; Jump to EA9
$B58    $E53F   UNKNOWN  $E53F           ; Unknown Exxx instruction
$B5A    $B07E   JP       V0, $07E        ; Jump to V0 + 07E
$B5C    $9D60   SNE      VD, V6          ; Skip if VD != V6
$B5E    $48A1   SNE      V8, #A1         ; Skip if V8 != 161
$B60    $EFB8   UNKNOWN  $EFB8           ; Unknown Exxx instruction
$B62    $B6D2   JP       V0, $6D2        ; Jump to V0 + 6D2
$B64    $4A15   SNE      VA, #15         ; Skip if VA != 21
$B66    $66AF   LD       V6, #AF         ; Load 175 into V6
$B68    $1578   JP       $578            ; Jump to 578
$B6A    $FADC   UNKNOWN  FADC            ; Unknown Fxxx instruction
$B6C    $4B6B   SNE      VB, #6B         ; Skip if VB != 107
$B6E    $F0AF   UNKNOWN  F0AF            ; Unknown Fxxx instruction
$B70    $DD99   DRW      VD, V9, #9      ; Draw 9-byte sprite at VD, V9
$B72    $A5EA   LD       I, $5EA         ; Load 5EA into I
$B74    $B749   JP       V0, $749        ; Jump to V0 + 749
$B76    $984D   UNKNOWN  $984D           ; Unknown 9xxx instruction
$B78    $BD45   JP       V0, $D45        ; Jump to V0 + D45
$B7A    $0574   SYS      $574            ; System call to 574
$B7C    $ED03   UNKNOWN  $ED03           ; Unknown Exxx instruction
$B7E    $DD99   DRW      VD, V9, #9      ; Draw 9-byte sprite at VD, V9
$B80    $30E3   SE       V0, #E3         ; Skip if V0 == 227
$B82    $95B5   UNKNOWN  $95B5           ; Unknown 9xxx instruction
$B84    $A28C   LD       I, $28C         ; Load 28C into I
$B86    $A6A5   LD       I, $6A5         ; Load 6A5 into I
$B88    $3916   SE       V9, #16         ; Skip if V9 == 22
$B8A    $92E9   UNKNOWN  $92E9           ; Unknown 9xxx instruction
$B8C    $E32B   UNKNOWN  $E32B           ; Unknown Exxx instruction
$B8E    $4E39   SNE      VE, #39         ; Skip if VE != 57
$B90    $82A3   XOR      V2, VA          ; V2 ^= VA
$B92    $E92C   UNKNOWN  $E92C           ; Unknown Exxx instruction
$B94    $78FE   ADD      V8, #FE         ; Add 254 to V8
$B96    $E1B5   UNKNOWN  $E1B5           ; Unknown Exxx instruction
$B98    $CE2D   RND      VE, #2D         ; VE = random & 2D
$B9A    $643D   LD       V4, #3D         ; Load 61 into V4
$B9C    $598D   UNKNOWN  $598D           ; Unknown 5xxx instruction
$B9E    $4B9D   SNE      VB, #9D         ; Skip if VB != 157
$BA0    $7278   ADD      V2, #78         ; Add 120 to V2
$BA2    $4A09   SNE      VA, #09         ; Skip if VA != 9
$BA4    $422C   SNE      V2, #2C         ; Skip if V2 != 44
$BA6    $D35B   DRW      V3, V5, #B      ; Draw 11-byte sprite at V3, V5
$BA8    $E82B   UNKNOWN  $E82B           ; Unknown Exxx instruction
$BAA    $C0A0   RND      V0, #A0         ; V0 = random & A0
$BAC    $6880   LD       V8, #80         ; Load 128 into V8
$BAE    $5DCF   UNKNOWN  $5DCF           ; Unknown 5xxx instruction
$BB0    $E289   UNKNOWN  $E289           ; Unknown Exxx instruction
$BB2    $4C30   SNE      VC, #30         ; Skip if VC != 48
$BB4    $760E   ADD      V6, #0E         ; Add 14 to V6
$BB6    $22AA   CALL     $2AA            ; Call subroutine at 2AA
$BB8    $497C   SNE      V9, #7C         ; Skip if V9 != 124
$BBA    $57BE   UNKNOWN  $57BE           ; Unknown 5xxx instruction
$BBC    $1B79   JP       $B79            ; Jump to B79
$BBE    $8B17   SUBN     VB, V1          ; VB = V1 - VB, VF = !borrow
$BC0    $F125   UNKNOWN  F125            ; Unknown Fxxx instruction
$BC2    $D90E   DRW      V9, V0, #E      ; Draw 14-byte sprite at V9, V0
$BC4    $E663   UNKNOWN  $E663           ; Unknown Exxx instruction
$BC6    $044D   SYS      $44D            ; System call to 44D
$BC8    $986D   UNKNOWN  $986D           ; Unknown 9xxx instruction
$BCA    $7C3B   ADD      VC, #3B         ; Add 59 to VC
$BCC    $1081   JP       $081            ; Jump to 081
$BCE    $740D   ADD      V4, #0D         ; Add 13 to V4
$BD0    $AB41   LD       I, $B41         ; Load B41 into I
$BD2    $21D8   CALL     $1D8            ; Call subroutine at 1D8
$BD4    $3396   SE       V3, #96         ; Skip if V3 == 150
$BD6    $93FC   UNKNOWN  $93FC           ; Unknown 9xxx instruction
$BD8    $0F47   SYS      $F47            ; System call to F47
$BDA    $F086   UNKNOWN  F086            ; Unknown Fxxx instruction
$BDC    $42DB   SNE      V2, #DB         ; Skip if V2 != 219
$BDE    $EB25   UNKNOWN  $EB25           ; Unknown Exxx instruction
$BE0    $FF06   UNKNOWN  FF06            ; Unknown Fxxx instruction
$BE2    $02FC   SYS      $2FC            ; System call to 2FC
$BE4    $74D8   ADD      V4, #D8         ; Add 216 to V4
$BE6    $3242   SE       V2, #42         ; Skip if V2 == 66
$BE8    $6D88   LD       VD, #88         ; Load 136 into VD
$BEA    $0186   SYS      $186            ; System call to 186
$BEC    $7D09   ADD      VD, #09         ; Add 9 to VD
$BEE    $A84D   LD       I, $84D         ; Load 84D into I
$BF0    $D27E   DRW      V2, V7, #E      ; Draw 14-byte sprite at V2, V7
$BF2    $86AE   SHL      V6              ; V6 <<= 1, VF = MSB
$BF4    $38AB   SE       V8, #AB         ; Skip if V8 == 171
$BF6    $B946   JP       V0, $946        ; Jump to V0 + 946
$BF8    $E6E8   UNKNOWN  $E6E8           ; Unknown Exxx instruction
$BFA    $93C2   UNKNOWN  $93C2           ; Unknown 9xxx instruction
$BFC    $4EE8   SNE      VE, #E8         ; Skip if VE != 232
$BFE    $CF70   RND      VF, #70         ; VF = random & 70
$C00    $953D   UNKNOWN  $953D           ; Unknown 9xxx instruction
$C02    $4907   SNE      V9, #07         ; Skip if V9 != 7
$C04    $3CC5   SE       VC, #C5         ; Skip if VC == 197
$C06    $D732   DRW      V7, V3, #2      ; Draw 2-byte sprite at V7, V3
$C08    $2370   CALL     $370            ; Call subroutine at 370
$C0A    $5046   UNKNOWN  $5046           ; Unknown 5xxx instruction
$C0C    $167E   JP       $67E            ; Jump to 67E
$C0E    $2A9D   CALL     $A9D            ; Call subroutine at A9D
$C10    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$C12    $3F16   SE       VF, #16         ; Skip if VF == 22
$C14    $AC95   LD       I, $C95         ; Load C95 into I
$C16    $9384   UNKNOWN  $9384           ; Unknown 9xxx instruction
$C18    $BB45   JP       V0, $B45        ; Jump to V0 + B45
$C1A    $0E11   SYS      $E11            ; System call to E11
$C1C    $2D55   CALL     $D55            ; Call subroutine at D55
$C1E    $31AD   SE       V1, #AD         ; Skip if V1 == 173
$C20    $1A75   JP       $A75            ; Jump to A75
$C22    $3A1B   SE       VA, #1B         ; Skip if VA == 27
$C24    $C17E   RND      V1, #7E         ; V1 = random & 7E
$C26    $BFB4   JP       V0, $FB4        ; Jump to V0 + FB4
$C28    $D6E1   DRW      V6, VE, #1      ; Draw 1-byte sprite at V6, VE
$C2A    $D163   DRW      V1, V6, #3      ; Draw 3-byte sprite at V1, V6
$C2C    $AAF8   LD       I, $AF8         ; Load AF8 into I
$C2E    $3814   SE       V8, #14         ; Skip if V8 == 20
$C30    $EB4F   UNKNOWN  $EB4F           ; Unknown Exxx instruction
$C32    $BAB2   JP       V0, $AB2        ; Jump to V0 + AB2
$C34    $FCF2   UNKNOWN  FCF2            ; Unknown Fxxx instruction
$C36    $63C2   LD       V3, #C2         ; Load 194 into V3
$C38    $EEDA   UNKNOWN  $EEDA           ; Unknown Exxx instruction
$C3A    $267B   CALL     $67B            ; Call subroutine at 67B
$C3C    $CEC5   RND      VE, #C5         ; VE = random & C5
$C3E    $B9FA   JP       V0, $9FA        ; Jump to V0 + 9FA
$C40    $D24F   DRW      V2, V4, #F      ; Draw 15-byte sprite at V2, V4
$C42    $3D64   SE       VD, #64         ; Skip if VD == 100
$C44    $574F   UNKNOWN  $574F           ; Unknown 5xxx instruction
$C46    $41C1   SNE      V1, #C1         ; Skip if V1 != 193
$C48    $8C46   SHR      VC              ; VC >>= 1, VF = LSB
$C4A    $ACB5   LD       I, $CB5         ; Load CB5 into I
$C4C    $6EF7   LD       VE, #F7         ; Load 247 into VE
$C4E    $83B5   SUB      V3, VB          ; V3 -= VB, VF = !borrow
$C50    $16E7   JP       $6E7            ; Jump to 6E7
$C52    $2BAD   CALL     $BAD            ; Call subroutine at BAD
$C54    $6E63   LD       VE, #63         ; Load 99 into VE
$C56    $702C   ADD      V0, #2C         ; Add 44 to V0
$C58    $0943   SYS      $943            ; System call to 943
$C5A    $2F2F   CALL     $F2F            ; Call subroutine at F2F
$C5C    $43CC   SNE      V3, #CC         ; Skip if V3 != 204
$C5E    $B1B0   JP       V0, $1B0        ; Jump to V0 + 1B0
$C60    $6E28   LD       VE, #28         ; Load 40 into VE
$C62    $0BAB   SYS      $BAB            ; System call to BAB
$C64    $1B32   JP       $B32            ; Jump to B32
$C66    $2C6C   CALL     $C6C            ; Call subroutine at C6C
$C68    $374B   SE       V7, #4B         ; Skip if V7 == 75
$C6A    $3BF2   SE       VB, #F2         ; Skip if VB == 242
$C6C    $E184   UNKNOWN  $E184           ; Unknown Exxx instruction
$C6E    $7ACA   ADD      VA, #CA         ; Add 202 to VA
$C70    $011B   SYS      $11B            ; System call to 11B
$C72    $FCA1   UNKNOWN  FCA1            ; Unknown Fxxx instruction
$C74    $BFB5   JP       V0, $FB5        ; Jump to V0 + FB5
$C76    $3367   SE       V3, #67         ; Skip if V3 == 103
$C78    $F45B   UNKNOWN  F45B            ; Unknown Fxxx instruction
$C7A    $90D1   UNKNOWN  $90D1           ; Unknown 9xxx instruction
$C7C    $D89A   DRW      V8, V9, #A      ; Draw 10-byte sprite at V8, V9
$C7E    $81BE   SHL      V1              ; V1 <<= 1, VF = MSB
$C80    $4BAE   SNE      VB, #AE         ; Skip if VB != 174
$C82    $95D3   UNKNOWN  $95D3           ; Unknown 9xxx instruction
$C84    $56F1   UNKNOWN  $56F1           ; Unknown 5xxx instruction
$C86    $A954   LD       I, $954         ; Load 954 into I
$C88    $CA6F   RND      VA, #6F         ; VA = random & 6F
$C8A    $902E   UNKNOWN  $902E           ; Unknown 9xxx instruction
$C8C    $4D22   SNE      VD, #22         ; Skip if VD != 34
$C8E    $0044   SYS      $044            ; System call to 044
$C90    $4DEE   SNE      VD, #EE         ; Skip if VD != 238
$C92    $CFFF   RND      VF, #FF         ; VF = random & FF
$C94    $576B   UNKNOWN  $576B           ; Unknown 5xxx instruction
$C96    $3CDD   SE       VC, #DD         ; Skip if VC == 221
$C98    $638B   LD       V3, #8B         ; Load 139 into V3
$C9A    $8BF1   OR       VB, VF          ; VB |= VF
$C9C    $4DD1   SNE      VD, #D1         ; Skip if VD != 209
$C9E    $1BC3   JP       $BC3            ; Jump to BC3
$CA0    $E675   UNKNOWN  $E675           ; Unknown Exxx instruction
$CA2    $E3A1   SKNP     V3              ; Skip if key V3 not pressed
$CA4    $E8FE   UNKNOWN  $E8FE           ; Unknown Exxx instruction
$CA6    $3A5C   SE       VA, #5C         ; Skip if VA == 92
$CA8    $435C   SNE      V3, #5C         ; Skip if V3 != 92
$CAA    $0E36   SYS      $E36            ; System call to E36
$CAC    $1E51   JP       $E51            ; Jump to E51
$CAE    $4BB4   SNE      VB, #B4         ; Skip if VB != 180
$CB0    $942C   UNKNOWN  $942C           ; Unknown 9xxx instruction
$CB2    $7C7C   ADD      VC, #7C         ; Add 124 to VC
$CB4    $21E1   CALL     $1E1            ; Call subroutine at 1E1
$CB6    $0D82   SYS      $D82            ; System call to D82
$CB8    $C675   RND      V6, #75         ; V6 = random & 75
$CBA    $9CE9   UNKNOWN  $9CE9           ; Unknown 9xxx instruction
$CBC    $6A60   LD       VA, #60         ; Load 96 into VA
$CBE    $DA00   DRW      VA, V0, #0      ; Draw 0-byte sprite at VA, V0
$CC0    $CC13   RND      VC, #13         ; VC = random & 13
$CC2    $C5B8   RND      V5, #B8         ; V5 = random & B8
$CC4    $75E7   ADD      V5, #E7         ; Add 231 to V5
$CC6    $566C   UNKNOWN  $566C           ; Unknown 5xxx instruction
$CC8    $280E   CALL     $80E            ; Call subroutine at 80E
$CCA    $0CA6   SYS      $CA6            ; System call to CA6
$CCC    $9C34   UNKNOWN  $9C34           ; Unknown 9xxx instruction
$CCE    $3BF8   SE       VB, #F8         ; Skip if VB == 248
$CD0    $2E7C   CALL     $E7C            ; Call subroutine at E7C
$CD2    $E24B   UNKNOWN  $E24B           ; Unknown Exxx instruction
$CD4    $B9D3   JP       V0, $9D3        ; Jump to V0 + 9D3
$CD6    $DBF0   DRW      VB, VF, #0      ; Draw 0-byte sprite at VB, VF
$CD8    $E74C   UNKNOWN  $E74C           ; Unknown Exxx instruction
$CDA    $4137   SNE      V1, #37         ; Skip if V1 != 55
$CDC    $B9AE   JP       V0, $9AE        ; Jump to V0 + 9AE
$CDE    $47AC   SNE      V7, #AC         ; Skip if V7 != 172
$CE0    $932D   UNKNOWN  $932D           ; Unknown 9xxx instruction
$CE2    $7575   ADD      V5, #75         ; Add 117 to V5
$CE4    $3637   SE       V6, #37         ; Skip if V6 == 55
$CE6    $108E   JP       $08E            ; Jump to 08E
$CE8    $D1EB   DRW      V1, VE, #B      ; Draw 11-byte sprite at V1, VE
$CEA    $4D8D   SNE      VD, #8D         ; Skip if VD != 141
$CEC    $832C   UNKNOWN  832C            ; Unknown 8xxx instruction
$CEE    $D9C8   DRW      V9, VC, #8      ; Draw 8-byte sprite at V9, VC
$CF0    $25F2   CALL     $5F2            ; Call subroutine at 5F2
$CF2    $9325   UNKNOWN  $9325           ; Unknown 9xxx instruction
$CF4    $98FF   UNKNOWN  $98FF           ; Unknown 9xxx instruction
$CF6    $95BE   UNKNOWN  $95BE           ; Unknown 9xxx instruction
$CF8    $6737   LD       V7, #37         ; Load 55 into V7
$CFA    $1DA8   JP       $DA8            ; Jump to DA8
$CFC    $042C   SYS      $42C            ; System call to 42C
$CFE    $0929   SYS      $929            ; System call to 929
$D00    $73C4   ADD      V3, #C4         ; Add 196 to V3
$D02    $4FFC   SNE      VF, #FC         ; Skip if VF != 252
$D04    $C650   RND      V6, #50         ; V6 = random & 50
$D06    $B33F   JP       V0, $33F        ; Jump to V0 + 33F
$D08    $8282   AND      V2, V8          ; V2 &= V8
$D0A    $AA42   LD       I, $A42         ; Load A42 into I
$D0C    $F2BC   UNKNOWN  F2BC            ; Unknown Fxxx instruction
$D0E    $5A6B   UNKNOWN  $5A6B           ; Unknown 5xxx instruction
$D10    $05C9   SYS      $5C9            ; System call to 5C9
$D12    $7B49   ADD      VB, #49         ; Add 73 to VB
$D14    $F4DA   UNKNOWN  F4DA            ; Unknown Fxxx instruction
$D16    $3A4E   SE       VA, #4E         ; Skip if VA == 78
$D18    $9256   UNKNOWN  $9256           ; Unknown 9xxx instruction
$D1A    $0C62   SYS      $C62            ; System call to C62
$D1C    $B284   JP       V0, $284        ; Jump to V0 + 284
$D1E    $EF55   UNKNOWN  $EF55           ; Unknown Exxx instruction
$D20    $C69F   RND      V6, #9F         ; V6 = random & 9F
$D22    $9A95   UNKNOWN  $9A95           ; Unknown 9xxx instruction
$D24    $7F87   ADD      VF, #87         ; Add 135 to VF
$D26    $E2E7   UNKNOWN  $E2E7           ; Unknown Exxx instruction
$D28    $B581   JP       V0, $581        ; Jump to V0 + 581
$D2A    $682C   LD       V8, #2C         ; Load 44 into V8
$D2C    $AA54   LD       I, $A54         ; Load A54 into I
$D2E    $3416   SE       V4, #16         ; Skip if V4 == 22
$D30    $CF17   RND      VF, #17         ; VF = random & 17
$D32    $AD8B   LD       I, $D8B         ; Load D8B into I
$D34    $23C6   CALL     $3C6            ; Call subroutine at 3C6
$D36    $42DF   SNE      V2, #DF         ; Skip if V2 != 223
$D38    $D645   DRW      V6, V4, #5      ; Draw 5-byte sprite at V6, V4
$D3A    $3F31   SE       VF, #31         ; Skip if VF == 49
$D3C    $F689   UNKNOWN  F689            ; Unknown Fxxx instruction
$D3E    $55E5   UNKNOWN  $55E5           ; Unknown 5xxx instruction
$D40    $97DE   UNKNOWN  $97DE           ; Unknown 9xxx instruction
$D42    $1AA5   JP       $AA5            ; Jump to AA5
$D44    $DDB5   DRW      VD, VB, #5      ; Draw 5-byte sprite at VD, VB
$D46    $B32A   JP       V0, $32A        ; Jump to V0 + 32A
$D48    $F917   UNKNOWN  F917            ; Unknown Fxxx instruction
$D4A    $56D6   UNKNOWN  $56D6           ; Unknown 5xxx instruction
$D4C    $581D   UNKNOWN  $581D           ; Unknown 5xxx instruction
$D4E    $0E0F   SYS      $E0F            ; System call to E0F
$D50    $C625   RND      V6, #25         ; V6 = random & 25
$D52    $BA4C   JP       V0, $A4C        ; Jump to V0 + A4C
$D54    $3256   SE       V2, #56         ; Skip if V2 == 86
$D56    $E175   UNKNOWN  $E175           ; Unknown Exxx instruction
$D58    $8D8C   UNKNOWN  8D8C            ; Unknown 8xxx instruction
$D5A    $BA20   JP       V0, $A20        ; Jump to V0 + A20
$D5C    $CDF0   RND      VD, #F0         ; VD = random & F0
$D5E    $AE73   LD       I, $E73         ; Load E73 into I
$D60    $30E8   SE       V0, #E8         ; Skip if V0 == 232
$D62    $0C98   SYS      $C98            ; System call to C98
$D64    $D542   DRW      V5, V4, #2      ; Draw 2-byte sprite at V5, V4
$D66    $5D95   UNKNOWN  $5D95           ; Unknown 5xxx instruction
$D68    $F7FC   UNKNOWN  F7FC            ; Unknown Fxxx instruction
$D6A    $175F   JP       $75F            ; Jump to 75F
$D6C    $5CB5   UNKNOWN  $5CB5           ; Unknown 5xxx instruction
$D6E    $5842   UNKNOWN  $5842           ; Unknown 5xxx instruction
$D70    $6711   LD       V7, #11         ; Load 17 into V7
$D72    $FCA6   UNKNOWN  FCA6            ; Unknown Fxxx instruction
$D74    $3C66   SE       VC, #66         ; Skip if VC == 102
$D76    $9AF0   SNE      VA, VF          ; Skip if VA != VF
$D78    $08AA   SYS      $8AA            ; System call to 8AA
$D7A    $44D2   SNE      V4, #D2         ; Skip if V4 != 210
$D7C    $62FC   LD       V2, #FC         ; Load 252 into V2
$D7E    $5600   SE       V6, V0          ; Skip if V6 == V0
$D80    $0469   SYS      $469            ; System call to 469
$D82    $25C6   CALL     $5C6            ; Call subroutine at 5C6
$D84    $EAF1   UNKNOWN  $EAF1           ; Unknown Exxx instruction
$D86    $3CEA   SE       VC, #EA         ; Skip if VC == 234
$D88    $0418   SYS      $418            ; System call to 418
$D8A    $17AF   JP       $7AF            ; Jump to 7AF
$D8C    $6368   LD       V3, #68         ; Load 104 into V3
$D8E    $E884   UNKNOWN  $E884           ; Unknown Exxx instruction
$D90    $E431   UNKNOWN  $E431           ; Unknown Exxx instruction
$D92    $B93C   JP       V0, $93C        ; Jump to V0 + 93C
$D94    $3FF8   SE       VF, #F8         ; Skip if VF == 248
$D96    $CB99   RND      VB, #99         ; VB = random & 99
$D98    $48A0   SNE      V8, #A0         ; Skip if V8 != 160
$D9A    $D71E   DRW      V7, V1, #E      ; Draw 14-byte sprite at V7, V1
$D9C    $23F1   CALL     $3F1            ; Call subroutine at 3F1
$D9E    $F22A   UNKNOWN  F22A            ; Unknown Fxxx instruction
$DA0    $0D1E   SYS      $D1E            ; System call to D1E
$DA2    $FC1E   ADD      I, VC           ; I += VC
$DA4    $4B0A   SNE      VB, #0A         ; Skip if VB != 10
$DA6    $13E8   JP       $3E8            ; Jump to 3E8
$DA8    $7AD1   ADD      VA, #D1         ; Add 209 to VA
$DAA    $CADF   RND      VA, #DF         ; VA = random & DF
$DAC    $1728   JP       $728            ; Jump to 728
$DAE    $D9A8   DRW      V9, VA, #8      ; Draw 8-byte sprite at V9, VA
$DB0    $EDD8   UNKNOWN  $EDD8           ; Unknown Exxx instruction
$DB2    $A9C0   LD       I, $9C0         ; Load 9C0 into I
$DB4    $92E7   UNKNOWN  $92E7           ; Unknown 9xxx instruction
$DB6    $16E8   JP       $6E8            ; Jump to 6E8
$DB8    $415B   SNE      V1, #5B         ; Skip if V1 != 91
$DBA    $542C   UNKNOWN  $542C           ; Unknown 5xxx instruction
$DBC    $F8BD   UNKNOWN  F8BD            ; Unknown Fxxx instruction
$DBE    $C02D   RND      V0, #2D         ; V0 = random & 2D
$DC0    $6D44   LD       VD, #44         ; Load 68 into VD
$DC2    $FB55   LD       [I], VB         ; Store V0-VB at I
$DC4    $9154   UNKNOWN  $9154           ; Unknown 9xxx instruction
$DC6    $6801   LD       V8, #01         ; Load 1 into V8
$DC8    $B880   JP       V0, $880        ; Jump to V0 + 880
$DCA    $E763   UNKNOWN  $E763           ; Unknown Exxx instruction
$DCC    $CB9D   RND      VB, #9D         ; VB = random & 9D
$DCE    $0AB7   SYS      $AB7            ; System call to AB7
$DD0    $0CA8   SYS      $CA8            ; System call to CA8
$DD2    $A478   LD       I, $478         ; Load 478 into I
$DD4    $D526   DRW      V5, V2, #6      ; Draw 6-byte sprite at V5, V2
$DD6    $5244   UNKNOWN  $5244           ; Unknown 5xxx instruction
$DD8    $A952   LD       I, $952         ; Load 952 into I
$DDA    $E5E7   UNKNOWN  $E5E7           ; Unknown Exxx instruction
$DDC    $0A1E   SYS      $A1E            ; System call to A1E
$DDE    $158F   JP       $58F            ; Jump to 58F
$DE0    $C1F9   RND      V1, #F9         ; V1 = random & F9
$DE2    $9D1C   UNKNOWN  $9D1C           ; Unknown 9xxx instruction
$DE4    $D712   DRW      V7, V1, #2      ; Draw 2-byte sprite at V7, V1
$DE6    $E2A2   UNKNOWN  $E2A2           ; Unknown Exxx instruction
$DE8    $D2E0   DRW      V2, VE, #0      ; Draw 0-byte sprite at V2, VE
$DEA    $856C   UNKNOWN  856C            ; Unknown 8xxx instruction
$DEC    $1ABD   JP       $ABD            ; Jump to ABD
$DEE    $10C8   JP       $0C8            ; Jump to 0C8
$DF0    $CCB0   RND      VC, #B0         ; VC = random & B0
$DF2    $46D2   SNE      V6, #D2         ; Skip if V6 != 210
$DF4    $7922   ADD      V9, #22         ; Add 34 to V9
$DF6    $360B   SE       V6, #0B         ; Skip if V6 == 11
$DF8    $288A   CALL     $88A            ; Call subroutine at 88A
$DFA    $1D1C   JP       $D1C            ; Jump to D1C
$DFC    $832B   UNKNOWN  832B            ; Unknown 8xxx instruction
$DFE    $FBD6   UNKNOWN  FBD6            ; Unknown Fxxx instruction
$E00    $E38E   UNKNOWN  $E38E           ; Unknown Exxx instruction
$E02    $F4B4   UNKNOWN  F4B4            ; Unknown Fxxx instruction
$E04    $BAFC   JP       V0, $AFC        ; Jump to V0 + AFC
$E06    $1411   JP       $411            ; Jump to 411
$E08    $49DA   SNE      V9, #DA         ; Skip if V9 != 218
$E0A    $67C4   LD       V7, #C4         ; Load 196 into V7
$E0C    $BE44   JP       V0, $E44        ; Jump to V0 + E44
$E0E    $D8A6   DRW      V8, VA, #6      ; Draw 6-byte sprite at V8, VA
$E10    $F347   UNKNOWN  F347            ; Unknown Fxxx instruction
$E12    $A269   LD       I, $269         ; Load 269 into I
$E14    $5556   UNKNOWN  $5556           ; Unknown 5xxx instruction
$E16    $415F   SNE      V1, #5F         ; Skip if V1 != 95
$E18    $DA30   DRW      VA, V3, #0      ; Draw 0-byte sprite at VA, V3
$E1A    $B2AA   JP       V0, $2AA        ; Jump to V0 + 2AA
$E1C    $83F2   AND      V3, VF          ; V3 &= VF
$E1E    $505D   UNKNOWN  $505D           ; Unknown 5xxx instruction
$E20    $2068   CALL     $068            ; Call subroutine at 068
$E22    $CFD4   RND      VF, #D4         ; VF = random & D4
$E24    $C241   RND      V2, #41         ; V2 = random & 41
$E26    $2686   CALL     $686            ; Call subroutine at 686
$E28    $A965   LD       I, $965         ; Load 965 into I
$E2A    $E226   UNKNOWN  $E226           ; Unknown Exxx instruction
$E2C    $6847   LD       V8, #47         ; Load 71 into V8
$E2E    $1043   JP       $043            ; Jump to 043
$E30    $F7CC   UNKNOWN  F7CC            ; Unknown Fxxx instruction
$E32    $592B   UNKNOWN  $592B           ; Unknown 5xxx instruction
$E34    $94C7   UNKNOWN  $94C7           ; Unknown 9xxx instruction
$E36    $AE74   LD       I, $E74         ; Load E74 into I
$E38    $4688   SNE      V6, #88         ; Skip if V6 != 136
$E3A    $C125   RND      V1, #25         ; V1 = random & 25
$E3C    $F9D5   UNKNOWN  F9D5            ; Unknown Fxxx instruction
$E3E    $A3EF   LD       I, $3EF         ; Load 3EF into I
$E40    $3AE4   SE       VA, #E4         ; Skip if VA == 228
$E42    $149A   JP       $49A            ; Jump to 49A
$E44    $70E3   ADD      V0, #E3         ; Add 227 to V0
$E46    $A235   LD       I, $235         ; Load 235 into I
$E48    $CB2E   RND      VB, #2E         ; VB = random & 2E
$E4A    $884A   UNKNOWN  884A            ; Unknown 8xxx instruction
$E4C    $94A1   UNKNOWN  $94A1           ; Unknown 9xxx instruction
$E4E    $4BA4   SNE      VB, #A4         ; Skip if VB != 164
$E50    $ABF2   LD       I, $BF2         ; Load BF2 into I
$E52    $54D7   UNKNOWN  $54D7           ; Unknown 5xxx instruction
$E54    $ACBA   LD       I, $CBA         ; Load CBA into I
$E56    $71FB   ADD      V1, #FB         ; Add 251 to V1
$E58    $D71F   DRW      V7, V1, #F      ; Draw 15-byte sprite at V7, V1
$E5A    $DAB0   DRW      VA, VB, #0      ; Draw 0-byte sprite at VA, VB
$E5C    $E062   UNKNOWN  $E062           ; Unknown Exxx instruction
$E5E    $A2AD   LD       I, $2AD         ; Load 2AD into I
$E60    $A32D   LD       I, $32D         ; Load 32D into I
$E62    $C4DC   RND      V4, #DC         ; V4 = random & DC
$E64    $BD1B   JP       V0, $D1B        ; Jump to V0 + D1B
$E66    $CCD2   RND      VC, #D2         ; VC = random & D2
$E68    $028F   SYS      $28F            ; System call to 28F
$E6A    $6B96   LD       VB, #96         ; Load 150 into VB
$E6C    $BB22   JP       V0, $B22        ; Jump to V0 + B22
$E6E    $6E64   LD       VE, #64         ; Load 100 into VE
$E70    $A484   LD       I, $484         ; Load 484 into I
$E72    $4DDF   SNE      VD, #DF         ; Skip if VD != 223
$E74    $B8E6   JP       V0, $8E6        ; Jump to V0 + 8E6
$E76    $3315   SE       V3, #15         ; Skip if V3 == 21
$E78    $9D4E   UNKNOWN  $9D4E           ; Unknown 9xxx instruction
$E7A    $5B3C   UNKNOWN  $5B3C           ; Unknown 5xxx instruction
$E7C    $A0F5   LD       I, $0F5         ; Load 0F5 into I
$E7E    $347D   SE       V4, #7D         ; Skip if V4 == 125
$E80    $1CDE   JP       $CDE            ; Jump to CDE
$E82    $D6C6   DRW      V6, VC, #6      ; Draw 6-byte sprite at V6, VC
$E84    $A8A2   LD       I, $8A2         ; Load 8A2 into I
$E86    $7082   ADD      V0, #82         ; Add 130 to V0
$E88    $82A9   UNKNOWN  82A9            ; Unknown 8xxx instruction
$E8A    $57EA   UNKNOWN  $57EA           ; Unknown 5xxx instruction
$E8C    $634F   LD       V3, #4F         ; Load 79 into V3
$E8E    $293E   CALL     $93E            ; Call subroutine at 93E
$E90    $7C0C   ADD      VC, #0C         ; Add 12 to VC
$E92    $DB51   DRW      VB, V5, #1      ; Draw 1-byte sprite at VB, V5
$E94    $DA7E   DRW      VA, V7, #E      ; Draw 14-byte sprite at VA, V7
$E96    $6375   LD       V3, #75         ; Load 117 into V3
$E98    $E1B1   UNKNOWN  $E1B1           ; Unknown Exxx instruction
$E9A    $2D3A   CALL     $D3A            ; Call subroutine at D3A
$E9C    $7337   ADD      V3, #37         ; Add 55 to V3
$E9E    $6A64   LD       VA, #64         ; Load 100 into VA
$EA0    $5491   UNKNOWN  $5491           ; Unknown 5xxx instruction
$EA2    $8E34   ADD      VE, V3          ; VE += V3, VF = carry
$EA4    $20EA   CALL     $0EA            ; Call subroutine at 0EA
$EA6    $6FBF   LD       VF, #BF         ; Load 191 into VF
$EA8    $105F   JP       $05F            ; Jump to 05F
$EAA    $3376   SE       V3, #76         ; Skip if V3 == 118
$EAC    $849E   SHL      V4              ; V4 <<= 1, VF = MSB
$EAE    $568A   UNKNOWN  $568A           ; Unknown 5xxx instruction
$EB0    $C7AA   RND      V7, #AA         ; V7 = random & AA
$EB2    $6618   LD       V6, #18         ; Load 24 into V6
$EB4    $C1E5   RND      V1, #E5         ; V1 = random & E5
$EB6    $93AC   UNKNOWN  $93AC           ; Unknown 9xxx instruction
$EB8    $09C7   SYS      $9C7            ; System call to 9C7
$EBA    $A68D   LD       I, $68D         ; Load 68D into I
$EBC    $D64A   DRW      V6, V4, #A      ; Draw 10-byte sprite at V6, V4
$EBE    $A5DA   LD       I, $5DA         ; Load 5DA into I
$EC0    $6112   LD       V1, #12         ; Load 18 into V1
$EC2    $7926   ADD      V9, #26         ; Add 38 to V9
$EC4    $777F   ADD      V7, #7F         ; Add 127 to V7
$EC6    $CDBE   RND      VD, #BE         ; VD = random & BE
$EC8    $4B37   SNE      VB, #37         ; Skip if VB != 55
$ECA    $34C4   SE       V4, #C4         ; Skip if V4 == 196
$ECC    $B873   JP       V0, $873        ; Jump to V0 + 873
$ECE    $C295   RND      V2, #95         ; V2 = random & 95
$ED0    $E748   UNKNOWN  $E748           ; Unknown Exxx instruction
$ED2    $48E5   SNE      V8, #E5         ; Skip if V8 != 229
$ED4    $0DDE   SYS      $DDE            ; System call to DDE
$ED6    $14D8   JP       $4D8            ; Jump to 4D8
$ED8    $019E   SYS      $19E            ; System call to 19E
$EDA    $72D0   ADD      V2, #D0         ; Add 208 to V2
$EDC    $A536   LD       I, $536         ; Load 536 into I
$EDE    $9F00   SNE      VF, V0          ; Skip if VF != V0
$EE0    $EBCA   UNKNOWN  $EBCA           ; Unknown Exxx instruction
$EE2    $0E4A   SYS      $E4A            ; System call to E4A
$EE4    $99D3   UNKNOWN  $99D3           ; Unknown 9xxx instruction
$EE6    $DB87   DRW      VB, V8, #7      ; Draw 7-byte sprite at VB, V8
$EE8    $C70E   RND      V7, #0E         ; V7 = random & 0E
$EEA    $5403   UNKNOWN  $5403           ; Unknown 5xxx instruction
$EEC    $2A13   CALL     $A13            ; Call subroutine at A13
$EEE    $6EF3   LD       VE, #F3         ; Load 243 into VE
$EF0    $CBA9   RND      VB, #A9         ; VB = random & A9
$EF2    $5036   UNKNOWN  $5036           ; Unknown 5xxx instruction
$EF4    $CB3C   RND      VB, #3C         ; VB = random & 3C
$EF6    $C1A3   RND      V1, #A3         ; V1 = random & A3
$EF8    $02E9   SYS      $2E9            ; System call to 2E9
$EFA    $E9C5   UNKNOWN  $E9C5           ; Unknown Exxx instruction
$EFC    $DC28   DRW      VC, V2, #8      ; Draw 8-byte sprite at VC, V2
$EFE    $7BA1   ADD      VB, #A1         ; Add 161 to VB
$F00    $A2E0   LD       I, $2E0         ; Load 2E0 into I
$F02    $43F8   SNE      V3, #F8         ; Skip if V3 != 248
$F04    $8A45   SUB      VA, V4          ; VA -= V4, VF = !borrow
$F06    $F2F8   UNKNOWN  F2F8            ; Unknown Fxxx instruction
$F08    $ADFC   LD       I, $DFC         ; Load DFC into I
$F0A    $8378   UNKNOWN  8378            ; Unknown 8xxx instruction
$F0C    $1E10   JP       $E10            ; Jump to E10
$F0E    $D937   DRW      V9, V3, #7      ; Draw 7-byte sprite at V9, V3
$F10    $2F95   CALL     $F95            ; Call subroutine at F95
$F12    $8395   SUB      V3, V9          ; V3 -= V9, VF = !borrow
$F14    $6508   LD       V5, #08         ; Load 8 into V5
$F16    $C34A   RND      V3, #4A         ; V3 = random & 4A
$F18    $99D9   UNKNOWN  $99D9           ; Unknown 9xxx instruction
$F1A    $3676   SE       V6, #76         ; Skip if V6 == 118
$F1C    $FA60   UNKNOWN  FA60            ; Unknown Fxxx instruction
$F1E    $9F2C   UNKNOWN  $9F2C           ; Unknown 9xxx instruction
$F20    $25AA   CALL     $5AA            ; Call subroutine at 5AA
$F22    $28A8   CALL     $8A8            ; Call subroutine at 8A8
$F24    $EF9C   UNKNOWN  $EF9C           ; Unknown Exxx instruction
$F26    $6BBB   LD       VB, #BB         ; Load 187 into VB
$F28    $EF8C   UNKNOWN  $EF8C           ; Unknown Exxx instruction
$F2A    $4EBB   SNE      VE, #BB         ; Skip if VE != 187
$F2C    $857F   UNKNOWN  857F            ; Unknown 8xxx instruction
$F2E    $5757   UNKNOWN  $5757           ; Unknown 5xxx instruction
$F30    $FDB0   UNKNOWN  FDB0            ; Unknown Fxxx instruction
$F32    $C356   RND      V3, #56         ; V3 = random & 56
$F34    $409B   SNE      V0, #9B         ; Skip if V0 != 155
$F36    $16DE   JP       $6DE            ; Jump to 6DE
$F38    $9D06   UNKNOWN  $9D06           ; Unknown 9xxx instruction
$F3A    $D7C4   DRW      V7, VC, #4      ; Draw 4-byte sprite at V7, VC
$F3C    $D61A   DRW      V6, V1, #A      ; Draw 10-byte sprite at V6, V1
$F3E    $3804   SE       V8, #04         ; Skip if V8 == 4
$F40    $BFE1   JP       V0, $FE1        ; Jump to V0 + FE1
$F42    $9F41   UNKNOWN  $9F41           ; Unknown 9xxx instruction
$F44    $23A4   CALL     $3A4            ; Call subroutine at 3A4
$F46    $433E   SNE      V3, #3E         ; Skip if V3 != 62
$F48    $E989   UNKNOWN  $E989           ; Unknown Exxx instruction
$F4A    $E02C   UNKNOWN  $E02C           ; Unknown Exxx instruction
$F4C    $58A4   UNKNOWN  $58A4           ; Unknown 5xxx instruction
$F4E    $CEA9   RND      VE, #A9         ; VE = random & A9
$F50    $3EBD   SE       VE, #BD         ; Skip if VE == 189
$F52    $0870   SYS      $870            ; System call to 870
$F54    $679A   LD       V7, #9A         ; Load 154 into V7
$F56    $0DF3   SYS      $DF3            ; System call to DF3
$F58    $3659   SE       V6, #59         ; Skip if V6 == 89
$F5A    $34D0   SE       V4, #D0         ; Skip if V4 == 208
$F5C    $B371   JP       V0, $371        ; Jump to V0 + 371
$F5E    $C09B   RND      V0, #9B         ; V0 = random & 9B
$F60    $412A   SNE      V1, #2A         ; Skip if V1 != 42
$F62    $B82E   JP       V0, $82E        ; Jump to V0 + 82E
$F64    $B0EE   JP       V0, $0EE        ; Jump to V0 + 0EE
$F66    $B913   JP       V0, $913        ; Jump to V0 + 913
$F68    $3EA9   SE       VE, #A9         ; Skip if VE == 169
$F6A    $5B45   UNKNOWN  $5B45           ; Unknown 5xxx instruction
$F6C    $4566   SNE      V5, #66         ; Skip if V5 != 102
$F6E    $8DD7   SUBN     VD, VD          ; VD = VD - VD, VF = !borrow
$F70    $1531   JP       $531            ; Jump to 531
$F72    $FFC6   UNKNOWN  FFC6            ; Unknown Fxxx instruction
$F74    $77D7   ADD      V7, #D7         ; Add 215 to V7
$F76    $BD7D   JP       V0, $D7D        ; Jump to V0 + D7D
$F78    $1F56   JP       $F56            ; Jump to F56
$F7A    $4220   SNE      V2, #20         ; Skip if V2 != 32
$F7C    $D48B   DRW      V4, V8, #B      ; Draw 11-byte sprite at V4, V8
$F7E    $497B   SNE      V9, #7B         ; Skip if V9 != 123
$F80    $4761   SNE      V7, #61         ; Skip if V7 != 97
$F82    $A2D0   LD       I, $2D0         ; Load 2D0 into I
$F84    $E3FE   UNKNOWN  $E3FE           ; Unknown Exxx instruction
$F86    $87D3   XOR      V7, VD          ; V7 ^= VD
$F88    $326B   SE       V2, #6B         ; Skip if V2 == 107
$F8A    $71C2   ADD      V1, #C2         ; Add 194 to V1
$F8C    $22AF   CALL     $2AF            ; Call subroutine at 2AF
$F8E    $131A   JP       $31A            ; Jump to 31A
$F90    $7CB1   ADD      VC, #B1         ; Add 177 to VC
$F92    $918A   UNKNOWN  $918A           ; Unknown 9xxx instruction
$F94    $852C   UNKNOWN  852C            ; Unknown 8xxx instruction
$F96    $E3A6   UNKNOWN  $E3A6           ; Unknown Exxx instruction
$F98    $FDCD   UNKNOWN  FDCD            ; Unknown Fxxx instruction
$F9A    $A776   LD       I, $776         ; Load 776 into I
$F9C    $35F2   SE       V5, #F2         ; Skip if V5 == 242
$F9E    $D812   DRW      V8, V1, #2      ; Draw 2-byte sprite at V8, V1
$FA0    $5ABF   UNKNOWN  $5ABF           ; Unknown 5xxx instruction
$FA2    $CC78   RND      VC, #78         ; VC = random & 78
$FA4    $D5DA   DRW      V5, VD, #A      ; Draw 10-byte sprite at V5, VD
$FA6    $D3A1   DRW      V3, VA, #1      ; Draw 1-byte sprite at V3, VA
$FA8    $45D7   SNE      V5, #D7         ; Skip if V5 != 215
$FAA    $6B3A   LD       VB, #3A         ; Load 58 into VB
$FAC    $1543   JP       $543            ; Jump to 543
$FAE    $4BC7   SNE      VB, #C7         ; Skip if VB != 199
$FB0    $716F   ADD      V1, #6F         ; Add 111 to V1
$FB2    $D6F1   DRW      V6, VF, #1      ; Draw 1-byte sprite at V6, VF
$FB4    $DAE9   DRW      VA, VE, #9      ; Draw 9-byte sprite at VA, VE
$FB6    $A9FC   LD       I, $9FC         ; Load 9FC into I
$FB8    $4758   SNE      V7, #58         ; Skip if V7 != 88
$FBA    $7317   ADD      V3, #17         ; Add 23 to V3
$FBC    $B9B0   JP       V0, $9B0        ; Jump to V0 + 9B0
$FBE    $9D52   UNKNOWN  $9D52           ; Unknown 9xxx instruction
$FC0    $8CA3   XOR      VC, VA          ; VC ^= VA
$FC2    $506C   UNKNOWN  $506C           ; Unknown 5xxx instruction
$FC4    $ADBD   LD       I, $DBD         ; Load DBD into I
$FC6    $EA58   UNKNOWN  $EA58           ; Unknown Exxx instruction
$FC8    $45FF   SNE      V5, #FF         ; Skip if V5 != 255
$FCA    $2B41   CALL     $B41            ; Call subroutine at B41
$FCC    $9882   UNKNOWN  $9882           ; Unknown 9xxx instruction
$FCE    $09C3   SYS      $9C3            ; System call to 9C3
$FD0    $A188   LD       I, $188         ; Load 188 into I
$FD2    $F69B   UNKNOWN  F69B            ; Unknown Fxxx instruction
$FD4    $C097   RND      V0, #97         ; V0 = random & 97
$FD6    $2309   CALL     $309            ; Call subroutine at 309
$FD8    $A8F0   LD       I, $8F0         ; Load 8F0 into I
$FDA    $E42B   UNKNOWN  $E42B           ; Unknown Exxx instruction
$FDC    $0770   SYS      $770            ; System call to 770
$FDE    $871A   UNKNOWN  871A            ; Unknown 8xxx instruction
$FE0    $501C   UNKNOWN  $501C           ; Unknown 5xxx instruction
$FE2    $23EA   CALL     $3EA            ; Call subroutine at 3EA
$FE4    $BE2A   JP       V0, $E2A        ; Jump to V0 + E2A
$FE6    $CCE5   RND      VC, #E5         ; VC = random & E5
$FE8    $549F   UNKNOWN  $549F           ; Unknown 5xxx instruction
$FEA    $592B   UNKNOWN  $592B           ; Unknown 5xxx instruction
$FEC    $49C7   SNE      V9, #C7         ; Skip if V9 != 199
$FEE    $A021   LD       I, $021         ; Load 021 into I
$FF0    $D01B   DRW      V0, V1, #B      ; Draw 11-byte sprite at V0, V1
$FF2    $F428   UNKNOWN  F428            ; Unknown Fxxx instruction
$FF4    $04ED   SYS      $4ED            ; System call to 4ED
$FF6    $62C5   LD       V2, #C5         ; Load 197 into V2
$FF8    $51E2   UNKNOWN  $51E2           ; Unknown 5xxx instruction
$FFA    $CAF7   RND      VA, #F7         ; VA = random & F7
$FFC    $09DE   SYS      $9DE            ; System call to 9DE
$FFE    $4FBB   SNE      VF, #BB         ; Skip if VF != 187

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 455 (25.4%)
  LD      : 233 (13.0%)
  JP      : 231 (12.9%)
  SNE     : 140 ( 7.8%)
  CALL    : 122 ( 6.8%)
  ADD     : 114 ( 6.4%)
  SE      : 114 ( 6.4%)
  SYS     : 113 ( 6.3%)
  RND     : 113 ( 6.3%)
  DRW     : 109 ( 6.1%)
  SUB     :  10 ( 0.6%)
  SHL     :   8 ( 0.4%)
  XOR     :   8 ( 0.4%)
  SUBN    :   7 ( 0.4%)
  AND     :   6 ( 0.3%)
  SHR     :   5 ( 0.3%)
  OR      :   2 ( 0.1%)
  SKNP    :   2 ( 0.1%)

Memory Operations: 347 (19.4%)
Arithmetic Operations: 147 (8.2%)
