
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B6607D01_I26596_C1001_2b15503ea384.ch8
ROM Size: 3584 bytes
Instructions Found: 1791

DISCOVERY INFORMATION:
Batch: 6607
Instance: 26596
Direction: descending
Final Array: [245, 186, 166, 150, 54, 0, 0, 0]
Operations: R:0 W:1 C:43 S:5

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 110
Sort Array References:
  $212: LD I, $046 ; Load 046 into I
  $230: LD I, $666 ; Load 666 into I
  $240: LD I, $2A3 ; Load 2A3 into I
  $258: LD I, $AB8 ; Load AB8 into I
  $25C: LD I, $7C8 ; Load 7C8 into I
  $26A: LD I, $AF6 ; Load AF6 into I
  $292: LD I, $8BC ; Load 8BC into I
  $2DA: LD I, $971 ; Load 971 into I
  $2E6: LD I, $64A ; Load 64A into I
  $2E8: LD I, $B43 ; Load B43 into I
  $2EC: LD I, $260 ; Load 260 into I
  $302: LD I, $696 ; Load 696 into I
  $30C: LD I, $2D2 ; Load 2D2 into I
  $312: LD I, $AE8 ; Load AE8 into I
  $338: LD I, $B39 ; Load B39 into I
  $37E: LD I, $D99 ; Load D99 into I
  $38A: LD I, $90E ; Load 90E into I
  $3E2: LD I, $D59 ; Load D59 into I
  $42E: LD I, $3FA ; Load 3FA into I
  $448: LD I, $2C7 ; Load 2C7 into I
  $4A0: LD I, $AE2 ; Load AE2 into I
  $4D0: LD I, $803 ; Load 803 into I
  $4D2: LD I, $FDC ; Load FDC into I
  $4F4: LD I, $54B ; Load 54B into I
  $4F6: LD I, $995 ; Load 995 into I
  $522: LD I, $DC5 ; Load DC5 into I
  $528: LD I, $0EE ; Load 0EE into I
  $52C: LD I, $44F ; Load 44F into I
  $54E: LD I, $CF0 ; Load CF0 into I
  $554: LD I, $643 ; Load 643 into I
  $562: LD I, $E35 ; Load E35 into I
  $56E: LD I, $BE7 ; Load BE7 into I
  $582: LD I, $199 ; Load 199 into I
  $5AA: LD I, $6E1 ; Load 6E1 into I
  $5BE: LD I, $CC3 ; Load CC3 into I
  $5D2: LD I, $276 ; Load 276 into I
  $5E4: LD I, $9E5 ; Load 9E5 into I
  $5F4: LD I, $83B ; Load 83B into I
  $5F8: LD I, $667 ; Load 667 into I
  $604: LD I, $21C ; Load 21C into I
  $610: LD I, $0DA ; Load 0DA into I
  $612: LD I, $E9D ; Load E9D into I
  $622: LD I, $693 ; Load 693 into I
  $642: LD I, $04B ; Load 04B into I
  $65C: LD I, $EAE ; Load EAE into I
  $694: LD I, $1F3 ; Load 1F3 into I
  $6BC: LD I, $F51 ; Load F51 into I
  $706: LD I, $FD9 ; Load FD9 into I
  $728: LD I, $54D ; Load 54D into I
  $738: LD I, $DBB ; Load DBB into I
  $762: LD I, $854 ; Load 854 into I
  $76C: LD I, $019 ; Load 019 into I
  $784: LD I, $09C ; Load 09C into I
  $798: LD I, $6CF ; Load 6CF into I
  $7C6: LD I, $93E ; Load 93E into I
  $838: LD I, $8CE ; Load 8CE into I
  $842: LD I, $780 ; Load 780 into I
  $860: LD I, $F63 ; Load F63 into I
  $868: LD I, $D4C ; Load D4C into I
  $8D2: LD I, $D22 ; Load D22 into I
  $8DA: LD I, $C80 ; Load C80 into I
  $98C: LD I, $7D9 ; Load 7D9 into I
  $9B0: LD I, $8D3 ; Load 8D3 into I
  $9C0: LD I, $909 ; Load 909 into I
  $A0A: LD I, $04C ; Load 04C into I
  $A30: LD I, $5A2 ; Load 5A2 into I
  $A5A: LD I, $735 ; Load 735 into I
  $A62: LD I, $E80 ; Load E80 into I
  $AAA: LD I, $4E3 ; Load 4E3 into I
  $AB2: LD I, $798 ; Load 798 into I
  $AD0: LD I, $E61 ; Load E61 into I
  $AD6: LD I, $F2D ; Load F2D into I
  $AE0: LD I, $F34 ; Load F34 into I
  $B12: LD I, $99C ; Load 99C into I
  $B5A: LD I, $D93 ; Load D93 into I
  $B96: LD I, $390 ; Load 390 into I
  $BAE: LD I, $2F6 ; Load 2F6 into I
  $BBE: LD I, $DDC ; Load DDC into I
  $BEA: LD I, $948 ; Load 948 into I
  $BF4: LD I, $31C ; Load 31C into I
  $C26: LD I, $55B ; Load 55B into I
  $C3A: LD I, $C5B ; Load C5B into I
  $C40: LD I, $8B9 ; Load 8B9 into I
  $C8C: LD I, $433 ; Load 433 into I
  $CB8: LD I, $5CF ; Load 5CF into I
  $CC4: LD I, $AB7 ; Load AB7 into I
  $CD4: LD I, $3EB ; Load 3EB into I
  $D38: LD I, $868 ; Load 868 into I
  $D64: LD I, $CF4 ; Load CF4 into I
  $D9E: LD I, $870 ; Load 870 into I
  $DAE: LD I, $174 ; Load 174 into I
  $DB6: LD I, $FC1 ; Load FC1 into I
  $DC8: LD I, $380 ; Load 380 into I
  $DD2: LD I, $D93 ; Load D93 into I
  $DD6: LD I, $C49 ; Load C49 into I
  $E06: LD I, $474 ; Load 474 into I
  $E12: LD I, $664 ; Load 664 into I
  $E46: LD I, $D84 ; Load D84 into I
  $E50: LD I, $60E ; Load 60E into I
  $E56: LD I, $6A1 ; Load 6A1 into I
  $E7C: LD I, $D08 ; Load D08 into I
  $E7E: LD I, $A38 ; Load A38 into I
  $E9C: LD I, $1CA ; Load 1CA into I
  $F10: LD I, $36D ; Load 36D into I
  $F46: LD I, $C24 ; Load C24 into I
  $F7C: LD I, $59F ; Load 59F into I
  $FC6: LD I, $88F ; Load 88F into I
  $FCE: LD I, $5AB ; Load 5AB into I
  $FE2: LD I, $779 ; Load 779 into I
  $FEE: LD I, $3A6 ; Load 3A6 into I

CONTROL FLOW ANALYSIS:
Jumps: 217
Calls: 113
Branches: 232
Loops: 129
Loop Structures:
  $22A -> $178 (backward jump)
  $2EA -> $22B (backward jump)
  $330 -> $067 (backward jump)
  $33C -> $163 (backward jump)
  $374 -> $23C (backward jump)
  $382 -> $2E3 (backward jump)
  $428 -> $0E8 (backward jump)
  $43C -> $2C1 (backward jump)
  $460 -> $37F (backward jump)
  $464 -> $173 (backward jump)
  $49E -> $395 (backward jump)
  $4B8 -> $444 (backward jump)
  $5D8 -> $1D5 (backward jump)
  $5E0 -> $079 (backward jump)
  $620 -> $5EC (backward jump)
  $658 -> $495 (backward jump)
  $66E -> $58E (backward jump)
  $674 -> $0C3 (backward jump)
  $680 -> $2CE (backward jump)
  $688 -> $03F (backward jump)
  $6B2 -> $302 (backward jump)
  $6D8 -> $614 (backward jump)
  $6E2 -> $3D6 (backward jump)
  $718 -> $182 (backward jump)
  $720 -> $2E9 (backward jump)
  $754 -> $10E (backward jump)
  $76A -> $589 (backward jump)
  $7B2 -> $75A (backward jump)
  $7F2 -> $557 (backward jump)
  $828 -> $76E (backward jump)
  $870 -> $39F (backward jump)
  $87C -> $84F (backward jump)
  $886 -> $2D8 (backward jump)
  $888 -> $16B (backward jump)
  $8E4 -> $7BC (backward jump)
  $8F8 -> $73A (backward jump)
  $8FA -> $27D (backward jump)
  $8FE -> $1F2 (backward jump)
  $928 -> $70B (backward jump)
  $936 -> $8C6 (backward jump)
  $95A -> $4CF (backward jump)
  $986 -> $5AF (backward jump)
  $988 -> $50D (backward jump)
  $9A2 -> $027 (backward jump)
  $9B4 -> $630 (backward jump)
  $9C6 -> $58D (backward jump)
  $9E6 -> $888 (backward jump)
  $9FA -> $1F7 (backward jump)
  $A24 -> $59C (backward jump)
  $A2C -> $304 (backward jump)
  $A38 -> $8ED (backward jump)
  $A4A -> $34A (backward jump)
  $A6C -> $05A (backward jump)
  $A78 -> $6FD (backward jump)
  $A84 -> $096 (backward jump)
  $A94 -> $0CB (backward jump)
  $A98 -> $A5A (backward jump)
  $AA0 -> $46D (backward jump)
  $AF6 -> $213 (backward jump)
  $B00 -> $4A7 (backward jump)
  $B06 -> $76C (backward jump)
  $B38 -> $B35 (backward jump)
  $B3E -> $A23 (backward jump)
  $B40 -> $A4B (backward jump)
  $B4E -> $1B2 (backward jump)
  $B5C -> $3E0 (backward jump)
  $B6C -> $2E5 (backward jump)
  $B7C -> $56E (backward jump)
  $BD8 -> $9F0 (backward jump)
  $BE4 -> $B9E (backward jump)
  $BF6 -> $220 (backward jump)
  $BFE -> $477 (backward jump)
  $C36 -> $48E (backward jump)
  $C3E -> $B17 (backward jump)
  $C50 -> $737 (backward jump)
  $C52 -> $434 (backward jump)
  $C68 -> $577 (backward jump)
  $C6C -> $AC1 (backward jump)
  $C6E -> $C47 (backward jump)
  $C9C -> $18B (backward jump)
  $CA2 -> $1D6 (backward jump)
  $CDC -> $A59 (backward jump)
  $CE0 -> $CD0 (backward jump)
  $CF8 -> $11E (backward jump)
  $D10 -> $B5B (backward jump)
  $D18 -> $0AF (backward jump)
  $D20 -> $081 (backward jump)
  $D22 -> $CF1 (backward jump)
  $D48 -> $733 (backward jump)
  $D58 -> $CE3 (backward jump)
  $D66 -> $C3D (backward jump)
  $D7C -> $622 (backward jump)
  $DA0 -> $44E (backward jump)
  $DD0 -> $936 (backward jump)
  $DDA -> $008 (backward jump)
  $DE2 -> $AA6 (backward jump)
  $DE6 -> $123 (backward jump)
  $DE8 -> $37E (backward jump)
  $DF0 -> $906 (backward jump)
  $DFE -> $4D9 (backward jump)
  $E32 -> $595 (backward jump)
  $E34 -> $510 (backward jump)
  $E42 -> $289 (backward jump)
  $E48 -> $DD1 (backward jump)
  $E4C -> $329 (backward jump)
  $E68 -> $BB6 (backward jump)
  $E80 -> $A21 (backward jump)
  $E86 -> $543 (backward jump)
  $EB4 -> $B0A (backward jump)
  $EBC -> $24E (backward jump)
  $ECA -> $5A7 (backward jump)
  $ED2 -> $64E (backward jump)
  $ED4 -> $084 (backward jump)
  $EF8 -> $B06 (backward jump)
  $F18 -> $017 (backward jump)
  $F1C -> $E64 (backward jump)
  $F3A -> $902 (backward jump)
  $F4A -> $451 (backward jump)
  $F4C -> $810 (backward jump)
  $F52 -> $F4C (backward jump)
  $F68 -> $978 (backward jump)
  $F78 -> $BBD (backward jump)
  $F9A -> $299 (backward jump)
  $FC0 -> $E74 (backward jump)
  $FD6 -> $57F (backward jump)
  $FDC -> $627 (backward jump)
  $FDE -> $4F8 (backward jump)
  $FEA -> $665 (backward jump)
  $FF4 -> $6E3 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $7C24   ADD      VC, #24         ; Add 36 to VC
$202    $B9ED   JP       V0, $9ED        ; Jump to V0 + 9ED
$204    $69F9   LD       V9, #F9         ; Load 249 into V9
$206    $8FBB   UNKNOWN  8FBB            ; Unknown 8xxx instruction
$208    $3A85   SE       VA, #85         ; Skip if VA == 133
$20A    $2A22   CALL     $A22            ; Call subroutine at A22
$20C    $80C2   AND      V0, VC          ; V0 &= VC
$20E    $F0D6   UNKNOWN  F0D6            ; Unknown Fxxx instruction
$210    $CB56   RND      VB, #56         ; VB = random & 56
$212    $A046   LD       I, $046         ; Load 046 into I
$214    $96B3   UNKNOWN  $96B3           ; Unknown 9xxx instruction
$216    $63A7   LD       V3, #A7         ; Load 167 into V3
$218    $48B2   SNE      V8, #B2         ; Skip if V8 != 178
$21A    $0DB5   SYS      $DB5            ; System call to DB5
$21C    $0107   SYS      $107            ; System call to 107
$21E    $04F6   SYS      $4F6            ; System call to 4F6
$220    $F469   UNKNOWN  F469            ; Unknown Fxxx instruction
$222    $F34B   UNKNOWN  F34B            ; Unknown Fxxx instruction
$224    $6414   LD       V4, #14         ; Load 20 into V4
$226    $D50D   DRW      V5, V0, #D      ; Draw 13-byte sprite at V5, V0
$228    $E99E   SKP      V9              ; Skip if key V9 pressed
$22A    $1178   JP       $178            ; Jump to 178
$22C    $13BE   JP       $3BE            ; Jump to 3BE
$22E    $8E91   OR       VE, V9          ; VE |= V9
$230    $A666   LD       I, $666         ; Load 666 into I
$232    $13B2   JP       $3B2            ; Jump to 3B2
$234    $D2F0   DRW      V2, VF, #0      ; Draw 0-byte sprite at V2, VF
$236    $C210   RND      V2, #10         ; V2 = random & 10
$238    $F671   UNKNOWN  F671            ; Unknown Fxxx instruction
$23A    $BC83   JP       V0, $C83        ; Jump to V0 + C83
$23C    $EF26   UNKNOWN  $EF26           ; Unknown Exxx instruction
$23E    $4C95   SNE      VC, #95         ; Skip if VC != 149
$240    $A2A3   LD       I, $2A3         ; Load 2A3 into I
$242    $5F72   UNKNOWN  $5F72           ; Unknown 5xxx instruction
$244    $6BCA   LD       VB, #CA         ; Load 202 into VB
$246    $85F0   LD       V5, VF          ; V5 = VF
$248    $7657   ADD      V6, #57         ; Add 87 to V6
$24A    $741D   ADD      V4, #1D         ; Add 29 to V4
$24C    $D36C   DRW      V3, V6, #C      ; Draw 12-byte sprite at V3, V6
$24E    $4631   SNE      V6, #31         ; Skip if V6 != 49
$250    $C452   RND      V4, #52         ; V4 = random & 52
$252    $C103   RND      V1, #03         ; V1 = random & 03
$254    $7A2B   ADD      VA, #2B         ; Add 43 to VA
$256    $F990   UNKNOWN  F990            ; Unknown Fxxx instruction
$258    $AAB8   LD       I, $AB8         ; Load AB8 into I
$25A    $3139   SE       V1, #39         ; Skip if V1 == 57
$25C    $A7C8   LD       I, $7C8         ; Load 7C8 into I
$25E    $C2F0   RND      V2, #F0         ; V2 = random & F0
$260    $3C16   SE       VC, #16         ; Skip if VC == 22
$262    $7DFE   ADD      VD, #FE         ; Add 254 to VD
$264    $9300   SNE      V3, V0          ; Skip if V3 != V0
$266    $942B   UNKNOWN  $942B           ; Unknown 9xxx instruction
$268    $8C07   SUBN     VC, V0          ; VC = V0 - VC, VF = !borrow
$26A    $AAF6   LD       I, $AF6         ; Load AF6 into I
$26C    $9414   UNKNOWN  $9414           ; Unknown 9xxx instruction
$26E    $EA36   UNKNOWN  $EA36           ; Unknown Exxx instruction
$270    $C573   RND      V5, #73         ; V5 = random & 73
$272    $ED93   UNKNOWN  $ED93           ; Unknown Exxx instruction
$274    $2420   CALL     $420            ; Call subroutine at 420
$276    $4000   SNE      V0, #00         ; Skip if V0 != 0
$278    $EEB8   UNKNOWN  $EEB8           ; Unknown Exxx instruction
$27A    $8871   OR       V8, V7          ; V8 |= V7
$27C    $CB4E   RND      VB, #4E         ; VB = random & 4E
$27E    $EBF3   UNKNOWN  $EBF3           ; Unknown Exxx instruction
$280    $6995   LD       V9, #95         ; Load 149 into V9
$282    $834B   UNKNOWN  834B            ; Unknown 8xxx instruction
$284    $D452   DRW      V4, V5, #2      ; Draw 2-byte sprite at V4, V5
$286    $C26C   RND      V2, #6C         ; V2 = random & 6C
$288    $5963   UNKNOWN  $5963           ; Unknown 5xxx instruction
$28A    $7D5E   ADD      VD, #5E         ; Add 94 to VD
$28C    $B913   JP       V0, $913        ; Jump to V0 + 913
$28E    $21D2   CALL     $1D2            ; Call subroutine at 1D2
$290    $6B5F   LD       VB, #5F         ; Load 95 into VB
$292    $A8BC   LD       I, $8BC         ; Load 8BC into I
$294    $DD26   DRW      VD, V2, #6      ; Draw 6-byte sprite at VD, V2
$296    $94EB   UNKNOWN  $94EB           ; Unknown 9xxx instruction
$298    $6FB4   LD       VF, #B4         ; Load 180 into VF
$29A    $76D0   ADD      V6, #D0         ; Add 208 to V6
$29C    $68CC   LD       V8, #CC         ; Load 204 into V8
$29E    $4B26   SNE      VB, #26         ; Skip if VB != 38
$2A0    $8B5D   UNKNOWN  8B5D            ; Unknown 8xxx instruction
$2A2    $B8B4   JP       V0, $8B4        ; Jump to V0 + 8B4
$2A4    $DDDA   DRW      VD, VD, #A      ; Draw 10-byte sprite at VD, VD
$2A6    $89F3   XOR      V9, VF          ; V9 ^= VF
$2A8    $D03D   DRW      V0, V3, #D      ; Draw 13-byte sprite at V0, V3
$2AA    $2F6E   CALL     $F6E            ; Call subroutine at F6E
$2AC    $D26E   DRW      V2, V6, #E      ; Draw 14-byte sprite at V2, V6
$2AE    $5F63   UNKNOWN  $5F63           ; Unknown 5xxx instruction
$2B0    $DCCA   DRW      VC, VC, #A      ; Draw 10-byte sprite at VC, VC
$2B2    $0CC3   SYS      $CC3            ; System call to CC3
$2B4    $F5AF   UNKNOWN  F5AF            ; Unknown Fxxx instruction
$2B6    $9C49   UNKNOWN  $9C49           ; Unknown 9xxx instruction
$2B8    $1446   JP       $446            ; Jump to 446
$2BA    $66A6   LD       V6, #A6         ; Load 166 into V6
$2BC    $4701   SNE      V7, #01         ; Skip if V7 != 1
$2BE    $C5D6   RND      V5, #D6         ; V5 = random & D6
$2C0    $92C6   UNKNOWN  $92C6           ; Unknown 9xxx instruction
$2C2    $CD4B   RND      VD, #4B         ; VD = random & 4B
$2C4    $02B5   SYS      $2B5            ; System call to 2B5
$2C6    $20E8   CALL     $0E8            ; Call subroutine at 0E8
$2C8    $6FDE   LD       VF, #DE         ; Load 222 into VF
$2CA    $8A4E   SHL      VA              ; VA <<= 1, VF = MSB
$2CC    $452E   SNE      V5, #2E         ; Skip if V5 != 46
$2CE    $74E7   ADD      V4, #E7         ; Add 231 to V4
$2D0    $CA76   RND      VA, #76         ; VA = random & 76
$2D2    $6591   LD       V5, #91         ; Load 145 into V5
$2D4    $EB0B   UNKNOWN  $EB0B           ; Unknown Exxx instruction
$2D6    $EE40   UNKNOWN  $EE40           ; Unknown Exxx instruction
$2D8    $77A5   ADD      V7, #A5         ; Add 165 to V7
$2DA    $A971   LD       I, $971         ; Load 971 into I
$2DC    $57E0   SE       V7, VE          ; Skip if V7 == VE
$2DE    $2733   CALL     $733            ; Call subroutine at 733
$2E0    $D2AD   DRW      V2, VA, #D      ; Draw 13-byte sprite at V2, VA
$2E2    $E4B2   UNKNOWN  $E4B2           ; Unknown Exxx instruction
$2E4    $0C17   SYS      $C17            ; System call to C17
$2E6    $A64A   LD       I, $64A         ; Load 64A into I
$2E8    $AB43   LD       I, $B43         ; Load B43 into I
$2EA    $B22B   JP       V0, $22B        ; Jump to V0 + 22B
$2EC    $A260   LD       I, $260         ; Load 260 into I
$2EE    $5366   UNKNOWN  $5366           ; Unknown 5xxx instruction
$2F0    $C543   RND      V5, #43         ; V5 = random & 43
$2F2    $0588   SYS      $588            ; System call to 588
$2F4    $8719   UNKNOWN  8719            ; Unknown 8xxx instruction
$2F6    $8A32   AND      VA, V3          ; VA &= V3
$2F8    $C656   RND      V6, #56         ; V6 = random & 56
$2FA    $4F3E   SNE      VF, #3E         ; Skip if VF != 62
$2FC    $B405   JP       V0, $405        ; Jump to V0 + 405
$2FE    $339E   SE       V3, #9E         ; Skip if V3 == 158
$300    $F5BA   UNKNOWN  F5BA            ; Unknown Fxxx instruction
$302    $A696   LD       I, $696         ; Load 696 into I
$304    $3600   SE       V6, #00         ; Skip if V6 == 0
$308    $2A66   CALL     $A66            ; Call subroutine at A66
$30A    $569B   UNKNOWN  $569B           ; Unknown 5xxx instruction
$30C    $A2D2   LD       I, $2D2         ; Load 2D2 into I
$30E    $F28F   UNKNOWN  F28F            ; Unknown Fxxx instruction
$310    $0BD7   SYS      $BD7            ; System call to BD7
$312    $AAE8   LD       I, $AE8         ; Load AE8 into I
$314    $590F   UNKNOWN  $590F           ; Unknown 5xxx instruction
$316    $89CA   UNKNOWN  89CA            ; Unknown 8xxx instruction
$318    $1736   JP       $736            ; Jump to 736
$31A    $5ACB   UNKNOWN  $5ACB           ; Unknown 5xxx instruction
$31C    $61A7   LD       V1, #A7         ; Load 167 into V1
$31E    $C999   RND      V9, #99         ; V9 = random & 99
$320    $4EA2   SNE      VE, #A2         ; Skip if VE != 162
$322    $386B   SE       V8, #6B         ; Skip if V8 == 107
$324    $606A   LD       V0, #6A         ; Load 106 into V0
$326    $736B   ADD      V3, #6B         ; Add 107 to V3
$328    $1727   JP       $727            ; Jump to 727
$32A    $5E07   UNKNOWN  $5E07           ; Unknown 5xxx instruction
$32C    $5E66   UNKNOWN  $5E66           ; Unknown 5xxx instruction
$32E    $D8CC   DRW      V8, VC, #C      ; Draw 12-byte sprite at V8, VC
$330    $B067   JP       V0, $067        ; Jump to V0 + 067
$332    $4982   SNE      V9, #82         ; Skip if V9 != 130
$334    $57E4   UNKNOWN  $57E4           ; Unknown 5xxx instruction
$336    $BF5D   JP       V0, $F5D        ; Jump to V0 + F5D
$338    $AB39   LD       I, $B39         ; Load B39 into I
$33A    $E71F   UNKNOWN  $E71F           ; Unknown Exxx instruction
$33C    $B163   JP       V0, $163        ; Jump to V0 + 163
$33E    $1BDB   JP       $BDB            ; Jump to BDB
$340    $C2CD   RND      V2, #CD         ; V2 = random & CD
$342    $E051   UNKNOWN  $E051           ; Unknown Exxx instruction
$344    $2A1F   CALL     $A1F            ; Call subroutine at A1F
$346    $5140   SE       V1, V4          ; Skip if V1 == V4
$348    $7532   ADD      V5, #32         ; Add 50 to V5
$34A    $9E30   SNE      VE, V3          ; Skip if VE != V3
$34C    $5DE8   UNKNOWN  $5DE8           ; Unknown 5xxx instruction
$34E    $BB41   JP       V0, $B41        ; Jump to V0 + B41
$350    $7236   ADD      V2, #36         ; Add 54 to V2
$352    $8DEF   UNKNOWN  8DEF            ; Unknown 8xxx instruction
$354    $CAE9   RND      VA, #E9         ; VA = random & E9
$356    $5909   UNKNOWN  $5909           ; Unknown 5xxx instruction
$358    $254B   CALL     $54B            ; Call subroutine at 54B
$35A    $52FA   UNKNOWN  $52FA           ; Unknown 5xxx instruction
$35C    $0E1D   SYS      $E1D            ; System call to E1D
$35E    $F101   UNKNOWN  F101            ; Unknown Fxxx instruction
$360    $4429   SNE      V4, #29         ; Skip if V4 != 41
$362    $DEB3   DRW      VE, VB, #3      ; Draw 3-byte sprite at VE, VB
$364    $41C2   SNE      V1, #C2         ; Skip if V1 != 194
$366    $9488   UNKNOWN  $9488           ; Unknown 9xxx instruction
$368    $3CCD   SE       VC, #CD         ; Skip if VC == 205
$36A    $15C4   JP       $5C4            ; Jump to 5C4
$36C    $6066   LD       V0, #66         ; Load 102 into V0
$36E    $7FE8   ADD      VF, #E8         ; Add 232 to VF
$370    $54F7   UNKNOWN  $54F7           ; Unknown 5xxx instruction
$372    $1AF5   JP       $AF5            ; Jump to AF5
$374    $123C   JP       $23C            ; Jump to 23C
$376    $281F   CALL     $81F            ; Call subroutine at 81F
$378    $1CA6   JP       $CA6            ; Jump to CA6
$37A    $822C   UNKNOWN  822C            ; Unknown 8xxx instruction
$37C    $6B29   LD       VB, #29         ; Load 41 into VB
$37E    $AD99   LD       I, $D99         ; Load D99 into I
$380    $B6FF   JP       V0, $6FF        ; Jump to V0 + 6FF
$382    $12E3   JP       $2E3            ; Jump to 2E3
$384    $50F8   UNKNOWN  $50F8           ; Unknown 5xxx instruction
$386    $FEAA   UNKNOWN  FEAA            ; Unknown Fxxx instruction
$388    $8A88   UNKNOWN  8A88            ; Unknown 8xxx instruction
$38A    $A90E   LD       I, $90E         ; Load 90E into I
$38C    $6B5D   LD       VB, #5D         ; Load 93 into VB
$38E    $D18D   DRW      V1, V8, #D      ; Draw 13-byte sprite at V1, V8
$390    $CF62   RND      VF, #62         ; VF = random & 62
$392    $023C   SYS      $23C            ; System call to 23C
$394    $46FE   SNE      V6, #FE         ; Skip if V6 != 254
$396    $7331   ADD      V3, #31         ; Add 49 to V3
$398    $2924   CALL     $924            ; Call subroutine at 924
$39A    $6E30   LD       VE, #30         ; Load 48 into VE
$39C    $3871   SE       V8, #71         ; Skip if V8 == 113
$39E    $F3D0   UNKNOWN  F3D0            ; Unknown Fxxx instruction
$3A0    $6727   LD       V7, #27         ; Load 39 into V7
$3A2    $F288   UNKNOWN  F288            ; Unknown Fxxx instruction
$3A4    $C5DA   RND      V5, #DA         ; V5 = random & DA
$3A6    $9D1E   UNKNOWN  $9D1E           ; Unknown 9xxx instruction
$3A8    $905B   UNKNOWN  $905B           ; Unknown 9xxx instruction
$3AA    $41AF   SNE      V1, #AF         ; Skip if V1 != 175
$3AC    $0380   SYS      $380            ; System call to 380
$3AE    $6F19   LD       VF, #19         ; Load 25 into VF
$3B0    $5D3F   UNKNOWN  $5D3F           ; Unknown 5xxx instruction
$3B2    $CE0E   RND      VE, #0E         ; VE = random & 0E
$3B4    $3BAC   SE       VB, #AC         ; Skip if VB == 172
$3B6    $2787   CALL     $787            ; Call subroutine at 787
$3B8    $49F4   SNE      V9, #F4         ; Skip if V9 != 244
$3BA    $1FA7   JP       $FA7            ; Jump to FA7
$3BC    $7381   ADD      V3, #81         ; Add 129 to V3
$3BE    $65D1   LD       V5, #D1         ; Load 209 into V5
$3C0    $295D   CALL     $95D            ; Call subroutine at 95D
$3C2    $592D   UNKNOWN  $592D           ; Unknown 5xxx instruction
$3C4    $30A5   SE       V0, #A5         ; Skip if V0 == 165
$3C6    $0044   SYS      $044            ; System call to 044
$3C8    $0B60   SYS      $B60            ; System call to B60
$3CA    $4E56   SNE      VE, #56         ; Skip if VE != 86
$3CC    $E9C6   UNKNOWN  $E9C6           ; Unknown Exxx instruction
$3CE    $BC62   JP       V0, $C62        ; Jump to V0 + C62
$3D0    $0399   SYS      $399            ; System call to 399
$3D2    $7399   ADD      V3, #99         ; Add 153 to V3
$3D4    $CBA1   RND      VB, #A1         ; VB = random & A1
$3D6    $7491   ADD      V4, #91         ; Add 145 to V4
$3D8    $47F9   SNE      V7, #F9         ; Skip if V7 != 249
$3DA    $8E2D   UNKNOWN  8E2D            ; Unknown 8xxx instruction
$3DC    $05AA   SYS      $5AA            ; System call to 5AA
$3DE    $782F   ADD      V8, #2F         ; Add 47 to V8
$3E0    $590C   UNKNOWN  $590C           ; Unknown 5xxx instruction
$3E2    $AD59   LD       I, $D59         ; Load D59 into I
$3E4    $94C8   UNKNOWN  $94C8           ; Unknown 9xxx instruction
$3E6    $5032   UNKNOWN  $5032           ; Unknown 5xxx instruction
$3E8    $49A8   SNE      V9, #A8         ; Skip if V9 != 168
$3EA    $B926   JP       V0, $926        ; Jump to V0 + 926
$3EC    $DB8F   DRW      VB, V8, #F      ; Draw 15-byte sprite at VB, V8
$3EE    $0466   SYS      $466            ; System call to 466
$3F0    $C58A   RND      V5, #8A         ; V5 = random & 8A
$3F2    $5F81   UNKNOWN  $5F81           ; Unknown 5xxx instruction
$3F4    $B759   JP       V0, $759        ; Jump to V0 + 759
$3F6    $4498   SNE      V4, #98         ; Skip if V4 != 152
$3F8    $363B   SE       V6, #3B         ; Skip if V6 == 59
$3FA    $CEBB   RND      VE, #BB         ; VE = random & BB
$3FC    $1456   JP       $456            ; Jump to 456
$3FE    $C03E   RND      V0, #3E         ; V0 = random & 3E
$400    $B553   JP       V0, $553        ; Jump to V0 + 553
$402    $9362   UNKNOWN  $9362           ; Unknown 9xxx instruction
$404    $C24B   RND      V2, #4B         ; V2 = random & 4B
$406    $4716   SNE      V7, #16         ; Skip if V7 != 22
$408    $32D0   SE       V2, #D0         ; Skip if V2 == 208
$40A    $2771   CALL     $771            ; Call subroutine at 771
$40C    $453A   SNE      V5, #3A         ; Skip if V5 != 58
$40E    $29E7   CALL     $9E7            ; Call subroutine at 9E7
$410    $B73A   JP       V0, $73A        ; Jump to V0 + 73A
$412    $79A9   ADD      V9, #A9         ; Add 169 to V9
$414    $5212   UNKNOWN  $5212           ; Unknown 5xxx instruction
$416    $35EE   SE       V5, #EE         ; Skip if V5 == 238
$418    $DEB7   DRW      VE, VB, #7      ; Draw 7-byte sprite at VE, VB
$41A    $4E68   SNE      VE, #68         ; Skip if VE != 104
$41C    $6542   LD       V5, #42         ; Load 66 into V5
$41E    $DEDA   DRW      VE, VD, #A      ; Draw 10-byte sprite at VE, VD
$420    $5169   UNKNOWN  $5169           ; Unknown 5xxx instruction
$422    $C157   RND      V1, #57         ; V1 = random & 57
$424    $D58F   DRW      V5, V8, #F      ; Draw 15-byte sprite at V5, V8
$426    $1629   JP       $629            ; Jump to 629
$428    $B0E8   JP       V0, $0E8        ; Jump to V0 + 0E8
$42A    $0D51   SYS      $D51            ; System call to D51
$42C    $43F9   SNE      V3, #F9         ; Skip if V3 != 249
$42E    $A3FA   LD       I, $3FA         ; Load 3FA into I
$430    $F0B0   UNKNOWN  F0B0            ; Unknown Fxxx instruction
$432    $58E8   UNKNOWN  $58E8           ; Unknown 5xxx instruction
$434    $4160   SNE      V1, #60         ; Skip if V1 != 96
$436    $6FF4   LD       VF, #F4         ; Load 244 into VF
$438    $814D   UNKNOWN  814D            ; Unknown 8xxx instruction
$43A    $E97C   UNKNOWN  $E97C           ; Unknown Exxx instruction
$43C    $12C1   JP       $2C1            ; Jump to 2C1
$43E    $3A89   SE       VA, #89         ; Skip if VA == 137
$440    $1530   JP       $530            ; Jump to 530
$442    $DF29   DRW      VF, V2, #9      ; Draw 9-byte sprite at VF, V2
$444    $373D   SE       V7, #3D         ; Skip if V7 == 61
$446    $0A7C   SYS      $A7C            ; System call to A7C
$448    $A2C7   LD       I, $2C7         ; Load 2C7 into I
$44A    $313E   SE       V1, #3E         ; Skip if V1 == 62
$44C    $D62A   DRW      V6, V2, #A      ; Draw 10-byte sprite at V6, V2
$44E    $2FD3   CALL     $FD3            ; Call subroutine at FD3
$450    $73D8   ADD      V3, #D8         ; Add 216 to V3
$452    $300D   SE       V0, #0D         ; Skip if V0 == 13
$454    $51BE   UNKNOWN  $51BE           ; Unknown 5xxx instruction
$456    $DF0C   DRW      VF, V0, #C      ; Draw 12-byte sprite at VF, V0
$458    $BCE2   JP       V0, $CE2        ; Jump to V0 + CE2
$45A    $BF11   JP       V0, $F11        ; Jump to V0 + F11
$45C    $F6ED   UNKNOWN  F6ED            ; Unknown Fxxx instruction
$45E    $C805   RND      V8, #05         ; V8 = random & 05
$460    $B37F   JP       V0, $37F        ; Jump to V0 + 37F
$462    $F2A5   UNKNOWN  F2A5            ; Unknown Fxxx instruction
$464    $B173   JP       V0, $173        ; Jump to V0 + 173
$466    $81F3   XOR      V1, VF          ; V1 ^= VF
$468    $97BE   UNKNOWN  $97BE           ; Unknown 9xxx instruction
$46A    $EF24   UNKNOWN  $EF24           ; Unknown Exxx instruction
$46C    $1829   JP       $829            ; Jump to 829
$46E    $6FDF   LD       VF, #DF         ; Load 223 into VF
$470    $2900   CALL     $900            ; Call subroutine at 900
$472    $F957   UNKNOWN  F957            ; Unknown Fxxx instruction
$474    $2836   CALL     $836            ; Call subroutine at 836
$476    $FEE4   UNKNOWN  FEE4            ; Unknown Fxxx instruction
$478    $D2BE   DRW      V2, VB, #E      ; Draw 14-byte sprite at V2, VB
$47A    $CE7C   RND      VE, #7C         ; VE = random & 7C
$47C    $C005   RND      V0, #05         ; V0 = random & 05
$47E    $793B   ADD      V9, #3B         ; Add 59 to V9
$480    $59F5   UNKNOWN  $59F5           ; Unknown 5xxx instruction
$482    $DC84   DRW      VC, V8, #4      ; Draw 4-byte sprite at VC, V8
$484    $730E   ADD      V3, #0E         ; Add 14 to V3
$486    $4A32   SNE      VA, #32         ; Skip if VA != 50
$488    $8A20   LD       VA, V2          ; VA = V2
$48A    $89E2   AND      V9, VE          ; V9 &= VE
$48C    $5470   SE       V4, V7          ; Skip if V4 == V7
$48E    $D941   DRW      V9, V4, #1      ; Draw 1-byte sprite at V9, V4
$490    $CDC6   RND      VD, #C6         ; VD = random & C6
$492    $950E   UNKNOWN  $950E           ; Unknown 9xxx instruction
$494    $03F1   SYS      $3F1            ; System call to 3F1
$496    $F2F4   UNKNOWN  F2F4            ; Unknown Fxxx instruction
$498    $19E6   JP       $9E6            ; Jump to 9E6
$49A    $7426   ADD      V4, #26         ; Add 38 to V4
$49C    $507D   UNKNOWN  $507D           ; Unknown 5xxx instruction
$49E    $B395   JP       V0, $395        ; Jump to V0 + 395
$4A0    $AAE2   LD       I, $AE2         ; Load AE2 into I
$4A2    $9C07   UNKNOWN  $9C07           ; Unknown 9xxx instruction
$4A4    $4523   SNE      V5, #23         ; Skip if V5 != 35
$4A6    $15E9   JP       $5E9            ; Jump to 5E9
$4A8    $CF2A   RND      VF, #2A         ; VF = random & 2A
$4AA    $C82B   RND      V8, #2B         ; V8 = random & 2B
$4AC    $6856   LD       V8, #56         ; Load 86 into V8
$4AE    $E4A4   UNKNOWN  $E4A4           ; Unknown Exxx instruction
$4B0    $CF47   RND      VF, #47         ; VF = random & 47
$4B2    $C9A6   RND      V9, #A6         ; V9 = random & A6
$4B4    $F28E   UNKNOWN  F28E            ; Unknown Fxxx instruction
$4B6    $5697   UNKNOWN  $5697           ; Unknown 5xxx instruction
$4B8    $1444   JP       $444            ; Jump to 444
$4BA    $8E04   ADD      VE, V0          ; VE += V0, VF = carry
$4BC    $C8FE   RND      V8, #FE         ; V8 = random & FE
$4BE    $2C18   CALL     $C18            ; Call subroutine at C18
$4C0    $90EE   UNKNOWN  $90EE           ; Unknown 9xxx instruction
$4C2    $3AE2   SE       VA, #E2         ; Skip if VA == 226
$4C4    $613F   LD       V1, #3F         ; Load 63 into V1
$4C6    $C175   RND      V1, #75         ; V1 = random & 75
$4C8    $5A57   UNKNOWN  $5A57           ; Unknown 5xxx instruction
$4CA    $807E   SHL      V0              ; V0 <<= 1, VF = MSB
$4CC    $C11B   RND      V1, #1B         ; V1 = random & 1B
$4CE    $4D48   SNE      VD, #48         ; Skip if VD != 72
$4D0    $A803   LD       I, $803         ; Load 803 into I
$4D2    $AFDC   LD       I, $FDC         ; Load FDC into I
$4D4    $5B15   UNKNOWN  $5B15           ; Unknown 5xxx instruction
$4D6    $6F7F   LD       VF, #7F         ; Load 127 into VF
$4D8    $935C   UNKNOWN  $935C           ; Unknown 9xxx instruction
$4DA    $0CF5   SYS      $CF5            ; System call to CF5
$4DC    $8A71   OR       VA, V7          ; VA |= V7
$4DE    $D641   DRW      V6, V4, #1      ; Draw 1-byte sprite at V6, V4
$4E0    $409B   SNE      V0, #9B         ; Skip if V0 != 155
$4E2    $E3E3   UNKNOWN  $E3E3           ; Unknown Exxx instruction
$4E4    $8FD0   LD       VF, VD          ; VF = VD
$4E6    $2C1C   CALL     $C1C            ; Call subroutine at C1C
$4E8    $D148   DRW      V1, V4, #8      ; Draw 8-byte sprite at V1, V4
$4EA    $E46E   UNKNOWN  $E46E           ; Unknown Exxx instruction
$4EC    $66FB   LD       V6, #FB         ; Load 251 into V6
$4EE    $5175   UNKNOWN  $5175           ; Unknown 5xxx instruction
$4F0    $F21F   UNKNOWN  F21F            ; Unknown Fxxx instruction
$4F2    $4FB6   SNE      VF, #B6         ; Skip if VF != 182
$4F4    $A54B   LD       I, $54B         ; Load 54B into I
$4F6    $A995   LD       I, $995         ; Load 995 into I
$4F8    $1E4A   JP       $E4A            ; Jump to E4A
$4FA    $01FA   SYS      $1FA            ; System call to 1FA
$4FC    $8242   AND      V2, V4          ; V2 &= V4
$4FE    $5AF7   UNKNOWN  $5AF7           ; Unknown 5xxx instruction
$500    $C6E1   RND      V6, #E1         ; V6 = random & E1
$502    $F8E1   UNKNOWN  F8E1            ; Unknown Fxxx instruction
$504    $2DCE   CALL     $DCE            ; Call subroutine at DCE
$506    $EF47   UNKNOWN  $EF47           ; Unknown Exxx instruction
$508    $D7E0   DRW      V7, VE, #0      ; Draw 0-byte sprite at V7, VE
$50A    $5705   UNKNOWN  $5705           ; Unknown 5xxx instruction
$50C    $17FB   JP       $7FB            ; Jump to 7FB
$50E    $8440   LD       V4, V4          ; V4 = V4
$510    $E7BF   UNKNOWN  $E7BF           ; Unknown Exxx instruction
$512    $8985   SUB      V9, V8          ; V9 -= V8, VF = !borrow
$514    $82F3   XOR      V2, VF          ; V2 ^= VF
$516    $EFBE   UNKNOWN  $EFBE           ; Unknown Exxx instruction
$518    $52E8   UNKNOWN  $52E8           ; Unknown 5xxx instruction
$51A    $CB7B   RND      VB, #7B         ; VB = random & 7B
$51C    $DB45   DRW      VB, V4, #5      ; Draw 5-byte sprite at VB, V4
$51E    $67B2   LD       V7, #B2         ; Load 178 into V7
$520    $054E   SYS      $54E            ; System call to 54E
$522    $ADC5   LD       I, $DC5         ; Load DC5 into I
$524    $7B46   ADD      VB, #46         ; Add 70 to VB
$526    $652E   LD       V5, #2E         ; Load 46 into V5
$528    $A0EE   LD       I, $0EE         ; Load 0EE into I
$52A    $59DD   UNKNOWN  $59DD           ; Unknown 5xxx instruction
$52C    $A44F   LD       I, $44F         ; Load 44F into I
$52E    $86A6   SHR      V6              ; V6 >>= 1, VF = LSB
$530    $30AF   SE       V0, #AF         ; Skip if V0 == 175
$532    $7D77   ADD      VD, #77         ; Add 119 to VD
$534    $B638   JP       V0, $638        ; Jump to V0 + 638
$536    $CFF0   RND      VF, #F0         ; VF = random & F0
$538    $4866   SNE      V8, #66         ; Skip if V8 != 102
$53A    $EAA3   UNKNOWN  $EAA3           ; Unknown Exxx instruction
$53C    $8E79   UNKNOWN  8E79            ; Unknown 8xxx instruction
$53E    $3503   SE       V5, #03         ; Skip if V5 == 3
$540    $8C34   ADD      VC, V3          ; VC += V3, VF = carry
$542    $92F9   UNKNOWN  $92F9           ; Unknown 9xxx instruction
$544    $E814   UNKNOWN  $E814           ; Unknown Exxx instruction
$546    $9513   UNKNOWN  $9513           ; Unknown 9xxx instruction
$548    $9F49   UNKNOWN  $9F49           ; Unknown 9xxx instruction
$54A    $964C   UNKNOWN  $964C           ; Unknown 9xxx instruction
$54C    $D137   DRW      V1, V3, #7      ; Draw 7-byte sprite at V1, V3
$54E    $ACF0   LD       I, $CF0         ; Load CF0 into I
$550    $6CBE   LD       VC, #BE         ; Load 190 into VC
$552    $4E5E   SNE      VE, #5E         ; Skip if VE != 94
$554    $A643   LD       I, $643         ; Load 643 into I
$556    $3249   SE       V2, #49         ; Skip if V2 == 73
$558    $82C7   SUBN     V2, VC          ; V2 = VC - V2, VF = !borrow
$55A    $7DEC   ADD      VD, #EC         ; Add 236 to VD
$55C    $7EE1   ADD      VE, #E1         ; Add 225 to VE
$55E    $CAB2   RND      VA, #B2         ; VA = random & B2
$560    $3751   SE       V7, #51         ; Skip if V7 == 81
$562    $AE35   LD       I, $E35         ; Load E35 into I
$564    $4314   SNE      V3, #14         ; Skip if V3 != 20
$566    $F607   LD       V6, DT          ; V6 = delay timer
$568    $FCA0   UNKNOWN  FCA0            ; Unknown Fxxx instruction
$56A    $74D2   ADD      V4, #D2         ; Add 210 to V4
$56C    $6A87   LD       VA, #87         ; Load 135 into VA
$56E    $ABE7   LD       I, $BE7         ; Load BE7 into I
$570    $C32A   RND      V3, #2A         ; V3 = random & 2A
$572    $0AA9   SYS      $AA9            ; System call to AA9
$574    $3EB0   SE       VE, #B0         ; Skip if VE == 176
$576    $3CB4   SE       VC, #B4         ; Skip if VC == 180
$578    $00B0   SYS      $0B0            ; System call to 0B0
$57A    $E6B0   UNKNOWN  $E6B0           ; Unknown Exxx instruction
$57C    $D01B   DRW      V0, V1, #B      ; Draw 11-byte sprite at V0, V1
$57E    $71E7   ADD      V1, #E7         ; Add 231 to V1
$580    $4333   SNE      V3, #33         ; Skip if V3 != 51
$582    $A199   LD       I, $199         ; Load 199 into I
$584    $0F3C   SYS      $F3C            ; System call to F3C
$586    $E883   UNKNOWN  $E883           ; Unknown Exxx instruction
$588    $4113   SNE      V1, #13         ; Skip if V1 != 19
$58A    $9660   SNE      V6, V6          ; Skip if V6 != V6
$58C    $2CBD   CALL     $CBD            ; Call subroutine at CBD
$58E    $8A95   SUB      VA, V9          ; VA -= V9, VF = !borrow
$590    $5D64   UNKNOWN  $5D64           ; Unknown 5xxx instruction
$592    $D616   DRW      V6, V1, #6      ; Draw 6-byte sprite at V6, V1
$594    $FA49   UNKNOWN  FA49            ; Unknown Fxxx instruction
$596    $9B74   UNKNOWN  $9B74           ; Unknown 9xxx instruction
$598    $31E6   SE       V1, #E6         ; Skip if V1 == 230
$59A    $C679   RND      V6, #79         ; V6 = random & 79
$59C    $3927   SE       V9, #27         ; Skip if V9 == 39
$59E    $02D7   SYS      $2D7            ; System call to 2D7
$5A0    $E220   UNKNOWN  $E220           ; Unknown Exxx instruction
$5A2    $D814   DRW      V8, V1, #4      ; Draw 4-byte sprite at V8, V1
$5A4    $BD5A   JP       V0, $D5A        ; Jump to V0 + D5A
$5A6    $7FA8   ADD      VF, #A8         ; Add 168 to VF
$5A8    $0238   SYS      $238            ; System call to 238
$5AA    $A6E1   LD       I, $6E1         ; Load 6E1 into I
$5AC    $015E   SYS      $15E            ; System call to 15E
$5AE    $9ED6   UNKNOWN  $9ED6           ; Unknown 9xxx instruction
$5B0    $D92E   DRW      V9, V2, #E      ; Draw 14-byte sprite at V9, V2
$5B2    $5D77   UNKNOWN  $5D77           ; Unknown 5xxx instruction
$5B4    $F5BF   UNKNOWN  F5BF            ; Unknown Fxxx instruction
$5B6    $ED8E   UNKNOWN  $ED8E           ; Unknown Exxx instruction
$5B8    $C156   RND      V1, #56         ; V1 = random & 56
$5BA    $2763   CALL     $763            ; Call subroutine at 763
$5BC    $4E3F   SNE      VE, #3F         ; Skip if VE != 63
$5BE    $ACC3   LD       I, $CC3         ; Load CC3 into I
$5C0    $28A3   CALL     $8A3            ; Call subroutine at 8A3
$5C2    $D194   DRW      V1, V9, #4      ; Draw 4-byte sprite at V1, V9
$5C4    $226E   CALL     $26E            ; Call subroutine at 26E
$5C6    $4815   SNE      V8, #15         ; Skip if V8 != 21
$5C8    $6E2D   LD       VE, #2D         ; Load 45 into VE
$5CA    $EBF0   UNKNOWN  $EBF0           ; Unknown Exxx instruction
$5CC    $5ADF   UNKNOWN  $5ADF           ; Unknown 5xxx instruction
$5CE    $D3B7   DRW      V3, VB, #7      ; Draw 7-byte sprite at V3, VB
$5D0    $4660   SNE      V6, #60         ; Skip if V6 != 96
$5D2    $A276   LD       I, $276         ; Load 276 into I
$5D4    $70F7   ADD      V0, #F7         ; Add 247 to V0
$5D6    $CBBE   RND      VB, #BE         ; VB = random & BE
$5D8    $11D5   JP       $1D5            ; Jump to 1D5
$5DA    $6F3D   LD       VF, #3D         ; Load 61 into VF
$5DC    $CA9F   RND      VA, #9F         ; VA = random & 9F
$5DE    $9465   UNKNOWN  $9465           ; Unknown 9xxx instruction
$5E0    $1079   JP       $079            ; Jump to 079
$5E2    $9211   UNKNOWN  $9211           ; Unknown 9xxx instruction
$5E4    $A9E5   LD       I, $9E5         ; Load 9E5 into I
$5E6    $F670   UNKNOWN  F670            ; Unknown Fxxx instruction
$5E8    $CA27   RND      VA, #27         ; VA = random & 27
$5EA    $2892   CALL     $892            ; Call subroutine at 892
$5EC    $9A7B   UNKNOWN  $9A7B           ; Unknown 9xxx instruction
$5EE    $5DA4   UNKNOWN  $5DA4           ; Unknown 5xxx instruction
$5F0    $20A9   CALL     $0A9            ; Call subroutine at 0A9
$5F2    $6356   LD       V3, #56         ; Load 86 into V3
$5F4    $A83B   LD       I, $83B         ; Load 83B into I
$5F6    $C492   RND      V4, #92         ; V4 = random & 92
$5F8    $A667   LD       I, $667         ; Load 667 into I
$5FA    $676A   LD       V7, #6A         ; Load 106 into V7
$5FC    $6843   LD       V8, #43         ; Load 67 into V8
$5FE    $899D   UNKNOWN  899D            ; Unknown 8xxx instruction
$600    $89A5   SUB      V9, VA          ; V9 -= VA, VF = !borrow
$602    $08F5   SYS      $8F5            ; System call to 8F5
$604    $A21C   LD       I, $21C         ; Load 21C into I
$606    $18DF   JP       $8DF            ; Jump to 8DF
$608    $8119   UNKNOWN  8119            ; Unknown 8xxx instruction
$60A    $02D9   SYS      $2D9            ; System call to 2D9
$60C    $7874   ADD      V8, #74         ; Add 116 to V8
$60E    $1B85   JP       $B85            ; Jump to B85
$610    $A0DA   LD       I, $0DA         ; Load 0DA into I
$612    $AE9D   LD       I, $E9D         ; Load E9D into I
$614    $5367   UNKNOWN  $5367           ; Unknown 5xxx instruction
$616    $C4FD   RND      V4, #FD         ; V4 = random & FD
$618    $6233   LD       V2, #33         ; Load 51 into V2
$61A    $EEAF   UNKNOWN  $EEAF           ; Unknown Exxx instruction
$61C    $929C   UNKNOWN  $929C           ; Unknown 9xxx instruction
$61E    $5118   UNKNOWN  $5118           ; Unknown 5xxx instruction
$620    $15EC   JP       $5EC            ; Jump to 5EC
$622    $A693   LD       I, $693         ; Load 693 into I
$624    $CB02   RND      VB, #02         ; VB = random & 02
$626    $4B90   SNE      VB, #90         ; Skip if VB != 144
$628    $E855   UNKNOWN  $E855           ; Unknown Exxx instruction
$62A    $6F1A   LD       VF, #1A         ; Load 26 into VF
$62C    $967E   UNKNOWN  $967E           ; Unknown 9xxx instruction
$62E    $4880   SNE      V8, #80         ; Skip if V8 != 128
$630    $D1CF   DRW      V1, VC, #F      ; Draw 15-byte sprite at V1, VC
$632    $73E4   ADD      V3, #E4         ; Add 228 to V3
$634    $F203   UNKNOWN  F203            ; Unknown Fxxx instruction
$636    $8BD5   SUB      VB, VD          ; VB -= VD, VF = !borrow
$638    $BD9C   JP       V0, $D9C        ; Jump to V0 + D9C
$63A    $0692   SYS      $692            ; System call to 692
$63C    $9588   UNKNOWN  $9588           ; Unknown 9xxx instruction
$63E    $D789   DRW      V7, V8, #9      ; Draw 9-byte sprite at V7, V8
$640    $7C6B   ADD      VC, #6B         ; Add 107 to VC
$642    $A04B   LD       I, $04B         ; Load 04B into I
$644    $4C16   SNE      VC, #16         ; Skip if VC != 22
$646    $1DED   JP       $DED            ; Jump to DED
$648    $6F66   LD       VF, #66         ; Load 102 into VF
$64A    $55B4   UNKNOWN  $55B4           ; Unknown 5xxx instruction
$64C    $8822   AND      V8, V2          ; V8 &= V2
$64E    $CD9F   RND      VD, #9F         ; VD = random & 9F
$650    $084A   SYS      $84A            ; System call to 84A
$652    $0789   SYS      $789            ; System call to 789
$654    $E441   UNKNOWN  $E441           ; Unknown Exxx instruction
$656    $CEBD   RND      VE, #BD         ; VE = random & BD
$658    $1495   JP       $495            ; Jump to 495
$65A    $C347   RND      V3, #47         ; V3 = random & 47
$65C    $AEAE   LD       I, $EAE         ; Load EAE into I
$65E    $97C4   UNKNOWN  $97C4           ; Unknown 9xxx instruction
$660    $FFFB   UNKNOWN  FFFB            ; Unknown Fxxx instruction
$662    $ECCA   UNKNOWN  $ECCA           ; Unknown Exxx instruction
$664    $66C0   LD       V6, #C0         ; Load 192 into V6
$666    $55CD   UNKNOWN  $55CD           ; Unknown 5xxx instruction
$668    $73EC   ADD      V3, #EC         ; Add 236 to V3
$66A    $D844   DRW      V8, V4, #4      ; Draw 4-byte sprite at V8, V4
$66C    $792D   ADD      V9, #2D         ; Add 45 to V9
$66E    $158E   JP       $58E            ; Jump to 58E
$670    $7B43   ADD      VB, #43         ; Add 67 to VB
$672    $C8FB   RND      V8, #FB         ; V8 = random & FB
$674    $10C3   JP       $0C3            ; Jump to 0C3
$676    $36D1   SE       V6, #D1         ; Skip if V6 == 209
$678    $E2F3   UNKNOWN  $E2F3           ; Unknown Exxx instruction
$67A    $D300   DRW      V3, V0, #0      ; Draw 0-byte sprite at V3, V0
$67C    $8E91   OR       VE, V9          ; VE |= V9
$67E    $E5DA   UNKNOWN  $E5DA           ; Unknown Exxx instruction
$680    $B2CE   JP       V0, $2CE        ; Jump to V0 + 2CE
$682    $022A   SYS      $22A            ; System call to 22A
$684    $641B   LD       V4, #1B         ; Load 27 into V4
$686    $2C1C   CALL     $C1C            ; Call subroutine at C1C
$688    $B03F   JP       V0, $03F        ; Jump to V0 + 03F
$68A    $8AD2   AND      VA, VD          ; VA &= VD
$68C    $6744   LD       V7, #44         ; Load 68 into V7
$68E    $C1EA   RND      V1, #EA         ; V1 = random & EA
$690    $8D7E   SHL      VD              ; VD <<= 1, VF = MSB
$692    $8CF9   UNKNOWN  8CF9            ; Unknown 8xxx instruction
$694    $A1F3   LD       I, $1F3         ; Load 1F3 into I
$696    $D011   DRW      V0, V1, #1      ; Draw 1-byte sprite at V0, V1
$698    $1C22   JP       $C22            ; Jump to C22
$69A    $5CDB   UNKNOWN  $5CDB           ; Unknown 5xxx instruction
$69C    $2CA4   CALL     $CA4            ; Call subroutine at CA4
$69E    $D690   DRW      V6, V9, #0      ; Draw 0-byte sprite at V6, V9
$6A0    $7641   ADD      V6, #41         ; Add 65 to V6
$6A2    $89F0   LD       V9, VF          ; V9 = VF
$6A4    $0E18   SYS      $E18            ; System call to E18
$6A6    $0CE2   SYS      $CE2            ; System call to CE2
$6A8    $78EF   ADD      V8, #EF         ; Add 239 to V8
$6AA    $855A   UNKNOWN  855A            ; Unknown 8xxx instruction
$6AC    $FF7B   UNKNOWN  FF7B            ; Unknown Fxxx instruction
$6AE    $5CC0   SE       VC, VC          ; Skip if VC == VC
$6B0    $9F7C   UNKNOWN  $9F7C           ; Unknown 9xxx instruction
$6B2    $B302   JP       V0, $302        ; Jump to V0 + 302
$6B4    $E3A4   UNKNOWN  $E3A4           ; Unknown Exxx instruction
$6B6    $D271   DRW      V2, V7, #1      ; Draw 1-byte sprite at V2, V7
$6B8    $0CB4   SYS      $CB4            ; System call to CB4
$6BA    $E81E   UNKNOWN  $E81E           ; Unknown Exxx instruction
$6BC    $AF51   LD       I, $F51         ; Load F51 into I
$6BE    $FEF6   UNKNOWN  FEF6            ; Unknown Fxxx instruction
$6C0    $59DF   UNKNOWN  $59DF           ; Unknown 5xxx instruction
$6C2    $1A3D   JP       $A3D            ; Jump to A3D
$6C4    $48ED   SNE      V8, #ED         ; Skip if V8 != 237
$6C6    $0919   SYS      $919            ; System call to 919
$6C8    $CE8D   RND      VE, #8D         ; VE = random & 8D
$6CA    $091A   SYS      $91A            ; System call to 91A
$6CC    $58E9   UNKNOWN  $58E9           ; Unknown 5xxx instruction
$6CE    $9343   UNKNOWN  $9343           ; Unknown 9xxx instruction
$6D0    $DCD1   DRW      VC, VD, #1      ; Draw 1-byte sprite at VC, VD
$6D2    $3D12   SE       VD, #12         ; Skip if VD == 18
$6D4    $5E83   UNKNOWN  $5E83           ; Unknown 5xxx instruction
$6D6    $6D66   LD       VD, #66         ; Load 102 into VD
$6D8    $1614   JP       $614            ; Jump to 614
$6DA    $5E10   SE       VE, V1          ; Skip if VE == V1
$6DC    $F054   UNKNOWN  F054            ; Unknown Fxxx instruction
$6DE    $CF81   RND      VF, #81         ; VF = random & 81
$6E0    $BAEC   JP       V0, $AEC        ; Jump to V0 + AEC
$6E2    $B3D6   JP       V0, $3D6        ; Jump to V0 + 3D6
$6E4    $DA08   DRW      VA, V0, #8      ; Draw 8-byte sprite at VA, V0
$6E6    $E444   UNKNOWN  $E444           ; Unknown Exxx instruction
$6E8    $DC43   DRW      VC, V4, #3      ; Draw 3-byte sprite at VC, V4
$6EA    $D7A1   DRW      V7, VA, #1      ; Draw 1-byte sprite at V7, VA
$6EC    $8298   UNKNOWN  8298            ; Unknown 8xxx instruction
$6EE    $024B   SYS      $24B            ; System call to 24B
$6F0    $570E   UNKNOWN  $570E           ; Unknown 5xxx instruction
$6F2    $D9F8   DRW      V9, VF, #8      ; Draw 8-byte sprite at V9, VF
$6F4    $557C   UNKNOWN  $557C           ; Unknown 5xxx instruction
$6F6    $3B1F   SE       VB, #1F         ; Skip if VB == 31
$6F8    $3197   SE       V1, #97         ; Skip if V1 == 151
$6FA    $BF56   JP       V0, $F56        ; Jump to V0 + F56
$6FC    $34E6   SE       V4, #E6         ; Skip if V4 == 230
$6FE    $F424   UNKNOWN  F424            ; Unknown Fxxx instruction
$700    $E9FC   UNKNOWN  $E9FC           ; Unknown Exxx instruction
$702    $EA5E   UNKNOWN  $EA5E           ; Unknown Exxx instruction
$704    $6403   LD       V4, #03         ; Load 3 into V4
$706    $AFD9   LD       I, $FD9         ; Load FD9 into I
$708    $3939   SE       V9, #39         ; Skip if V9 == 57
$70A    $4BF6   SNE      VB, #F6         ; Skip if VB != 246
$70C    $76D1   ADD      V6, #D1         ; Add 209 to V6
$70E    $3FD8   SE       VF, #D8         ; Skip if VF == 216
$710    $BD2E   JP       V0, $D2E        ; Jump to V0 + D2E
$712    $4745   SNE      V7, #45         ; Skip if V7 != 69
$714    $3CD0   SE       VC, #D0         ; Skip if VC == 208
$716    $C96A   RND      V9, #6A         ; V9 = random & 6A
$718    $1182   JP       $182            ; Jump to 182
$71A    $BCB5   JP       V0, $CB5        ; Jump to V0 + CB5
$71C    $C0DF   RND      V0, #DF         ; V0 = random & DF
$71E    $CD93   RND      VD, #93         ; VD = random & 93
$720    $12E9   JP       $2E9            ; Jump to 2E9
$722    $BFBA   JP       V0, $FBA        ; Jump to V0 + FBA
$724    $52A0   SE       V2, VA          ; Skip if V2 == VA
$726    $CC93   RND      VC, #93         ; VC = random & 93
$728    $A54D   LD       I, $54D         ; Load 54D into I
$72A    $69DF   LD       V9, #DF         ; Load 223 into V9
$72C    $BC54   JP       V0, $C54        ; Jump to V0 + C54
$72E    $EEA9   UNKNOWN  $EEA9           ; Unknown Exxx instruction
$730    $D54D   DRW      V5, V4, #D      ; Draw 13-byte sprite at V5, V4
$732    $1858   JP       $858            ; Jump to 858
$734    $2167   CALL     $167            ; Call subroutine at 167
$736    $E561   UNKNOWN  $E561           ; Unknown Exxx instruction
$738    $ADBB   LD       I, $DBB         ; Load DBB into I
$73A    $1ADD   JP       $ADD            ; Jump to ADD
$73C    $7B45   ADD      VB, #45         ; Add 69 to VB
$73E    $C7DE   RND      V7, #DE         ; V7 = random & DE
$740    $3C1A   SE       VC, #1A         ; Skip if VC == 26
$742    $8DDC   UNKNOWN  8DDC            ; Unknown 8xxx instruction
$744    $3B6D   SE       VB, #6D         ; Skip if VB == 109
$746    $830E   SHL      V3              ; V3 <<= 1, VF = MSB
$748    $46D9   SNE      V6, #D9         ; Skip if V6 != 217
$74A    $E1FD   UNKNOWN  $E1FD           ; Unknown Exxx instruction
$74C    $2428   CALL     $428            ; Call subroutine at 428
$74E    $8D9D   UNKNOWN  8D9D            ; Unknown 8xxx instruction
$750    $6023   LD       V0, #23         ; Load 35 into V0
$752    $30AA   SE       V0, #AA         ; Skip if V0 == 170
$754    $B10E   JP       V0, $10E        ; Jump to V0 + 10E
$756    $CC61   RND      VC, #61         ; VC = random & 61
$758    $4BDF   SNE      VB, #DF         ; Skip if VB != 223
$75A    $2187   CALL     $187            ; Call subroutine at 187
$75C    $EB22   UNKNOWN  $EB22           ; Unknown Exxx instruction
$75E    $3D73   SE       VD, #73         ; Skip if VD == 115
$760    $F3AC   UNKNOWN  F3AC            ; Unknown Fxxx instruction
$762    $A854   LD       I, $854         ; Load 854 into I
$764    $925F   UNKNOWN  $925F           ; Unknown 9xxx instruction
$766    $B8B9   JP       V0, $8B9        ; Jump to V0 + 8B9
$768    $53FF   UNKNOWN  $53FF           ; Unknown 5xxx instruction
$76A    $B589   JP       V0, $589        ; Jump to V0 + 589
$76C    $A019   LD       I, $019         ; Load 019 into I
$76E    $FDE2   UNKNOWN  FDE2            ; Unknown Fxxx instruction
$770    $4DDD   SNE      VD, #DD         ; Skip if VD != 221
$772    $41BE   SNE      V1, #BE         ; Skip if V1 != 190
$774    $80D0   LD       V0, VD          ; V0 = VD
$776    $EADA   UNKNOWN  $EADA           ; Unknown Exxx instruction
$778    $D510   DRW      V5, V1, #0      ; Draw 0-byte sprite at V5, V1
$77A    $0C54   SYS      $C54            ; System call to C54
$77C    $8C04   ADD      VC, V0          ; VC += V0, VF = carry
$77E    $D51D   DRW      V5, V1, #D      ; Draw 13-byte sprite at V5, V1
$780    $7049   ADD      V0, #49         ; Add 73 to V0
$782    $71F4   ADD      V1, #F4         ; Add 244 to V1
$784    $A09C   LD       I, $09C         ; Load 09C into I
$786    $7672   ADD      V6, #72         ; Add 114 to V6
$788    $4E41   SNE      VE, #41         ; Skip if VE != 65
$78A    $696E   LD       V9, #6E         ; Load 110 into V9
$78C    $3BFB   SE       VB, #FB         ; Skip if VB == 251
$78E    $0EDB   SYS      $EDB            ; System call to EDB
$790    $49BB   SNE      V9, #BB         ; Skip if V9 != 187
$792    $D5FA   DRW      V5, VF, #A      ; Draw 10-byte sprite at V5, VF
$794    $4341   SNE      V3, #41         ; Skip if V3 != 65
$796    $C616   RND      V6, #16         ; V6 = random & 16
$798    $A6CF   LD       I, $6CF         ; Load 6CF into I
$79A    $F051   UNKNOWN  F051            ; Unknown Fxxx instruction
$79C    $70CA   ADD      V0, #CA         ; Add 202 to V0
$79E    $FADF   UNKNOWN  FADF            ; Unknown Fxxx instruction
$7A0    $C175   RND      V1, #75         ; V1 = random & 75
$7A2    $E8C3   UNKNOWN  $E8C3           ; Unknown Exxx instruction
$7A4    $F776   UNKNOWN  F776            ; Unknown Fxxx instruction
$7A6    $5040   SE       V0, V4          ; Skip if V0 == V4
$7A8    $B7E3   JP       V0, $7E3        ; Jump to V0 + 7E3
$7AA    $7400   ADD      V4, #00         ; Add 0 to V4
$7AC    $C5B7   RND      V5, #B7         ; V5 = random & B7
$7AE    $32EE   SE       V2, #EE         ; Skip if V2 == 238
$7B0    $E9A2   UNKNOWN  $E9A2           ; Unknown Exxx instruction
$7B2    $175A   JP       $75A            ; Jump to 75A
$7B4    $CC2F   RND      VC, #2F         ; VC = random & 2F
$7B6    $E229   UNKNOWN  $E229           ; Unknown Exxx instruction
$7B8    $E64F   UNKNOWN  $E64F           ; Unknown Exxx instruction
$7BA    $FA04   UNKNOWN  FA04            ; Unknown Fxxx instruction
$7BC    $9E07   UNKNOWN  $9E07           ; Unknown 9xxx instruction
$7BE    $0C02   SYS      $C02            ; System call to C02
$7C0    $39E3   SE       V9, #E3         ; Skip if V9 == 227
$7C2    $BE16   JP       V0, $E16        ; Jump to V0 + E16
$7C4    $870A   UNKNOWN  870A            ; Unknown 8xxx instruction
$7C6    $A93E   LD       I, $93E         ; Load 93E into I
$7C8    $287C   CALL     $87C            ; Call subroutine at 87C
$7CA    $1A1E   JP       $A1E            ; Jump to A1E
$7CC    $56D9   UNKNOWN  $56D9           ; Unknown 5xxx instruction
$7CE    $57F9   UNKNOWN  $57F9           ; Unknown 5xxx instruction
$7D0    $55ED   UNKNOWN  $55ED           ; Unknown 5xxx instruction
$7D2    $95C1   UNKNOWN  $95C1           ; Unknown 9xxx instruction
$7D4    $0655   SYS      $655            ; System call to 655
$7D6    $DFB3   DRW      VF, VB, #3      ; Draw 3-byte sprite at VF, VB
$7D8    $6671   LD       V6, #71         ; Load 113 into V6
$7DA    $ECBA   UNKNOWN  $ECBA           ; Unknown Exxx instruction
$7DC    $7D6C   ADD      VD, #6C         ; Add 108 to VD
$7DE    $D055   DRW      V0, V5, #5      ; Draw 5-byte sprite at V0, V5
$7E0    $6979   LD       V9, #79         ; Load 121 into V9
$7E2    $0CA2   SYS      $CA2            ; System call to CA2
$7E4    $85F6   SHR      V5              ; V5 >>= 1, VF = LSB
$7E6    $9B48   UNKNOWN  $9B48           ; Unknown 9xxx instruction
$7E8    $EEAF   UNKNOWN  $EEAF           ; Unknown Exxx instruction
$7EA    $FF33   LD       B, VF           ; Store BCD of VF at I, I+1, I+2
$7EC    $06E1   SYS      $6E1            ; System call to 6E1
$7EE    $2BC4   CALL     $BC4            ; Call subroutine at BC4
$7F0    $CC04   RND      VC, #04         ; VC = random & 04
$7F2    $B557   JP       V0, $557        ; Jump to V0 + 557
$7F4    $5674   UNKNOWN  $5674           ; Unknown 5xxx instruction
$7F6    $D3E9   DRW      V3, VE, #9      ; Draw 9-byte sprite at V3, VE
$7F8    $926C   UNKNOWN  $926C           ; Unknown 9xxx instruction
$7FA    $03D6   SYS      $3D6            ; System call to 3D6
$7FC    $546E   UNKNOWN  $546E           ; Unknown 5xxx instruction
$7FE    $D98C   DRW      V9, V8, #C      ; Draw 12-byte sprite at V9, V8
$800    $C95D   RND      V9, #5D         ; V9 = random & 5D
$802    $8017   SUBN     V0, V1          ; V0 = V1 - V0, VF = !borrow
$804    $934F   UNKNOWN  $934F           ; Unknown 9xxx instruction
$806    $8F24   ADD      VF, V2          ; VF += V2, VF = carry
$808    $FDEE   UNKNOWN  FDEE            ; Unknown Fxxx instruction
$80A    $D0F8   DRW      V0, VF, #8      ; Draw 8-byte sprite at V0, VF
$80C    $D67A   DRW      V6, V7, #A      ; Draw 10-byte sprite at V6, V7
$80E    $3044   SE       V0, #44         ; Skip if V0 == 68
$810    $C94D   RND      V9, #4D         ; V9 = random & 4D
$812    $19D3   JP       $9D3            ; Jump to 9D3
$814    $9CB3   UNKNOWN  $9CB3           ; Unknown 9xxx instruction
$816    $C4D2   RND      V4, #D2         ; V4 = random & D2
$818    $F26C   UNKNOWN  F26C            ; Unknown Fxxx instruction
$81A    $C2FB   RND      V2, #FB         ; V2 = random & FB
$81C    $07BA   SYS      $7BA            ; System call to 7BA
$81E    $2630   CALL     $630            ; Call subroutine at 630
$820    $80F2   AND      V0, VF          ; V0 &= VF
$822    $9451   UNKNOWN  $9451           ; Unknown 9xxx instruction
$824    $E7A7   UNKNOWN  $E7A7           ; Unknown Exxx instruction
$826    $04F8   SYS      $4F8            ; System call to 4F8
$828    $B76E   JP       V0, $76E        ; Jump to V0 + 76E
$82A    $3B60   SE       VB, #60         ; Skip if VB == 96
$82C    $241E   CALL     $41E            ; Call subroutine at 41E
$82E    $58F0   SE       V8, VF          ; Skip if V8 == VF
$830    $2E8B   CALL     $E8B            ; Call subroutine at E8B
$832    $64D9   LD       V4, #D9         ; Load 217 into V4
$834    $8E2A   UNKNOWN  8E2A            ; Unknown 8xxx instruction
$836    $0CDE   SYS      $CDE            ; System call to CDE
$838    $A8CE   LD       I, $8CE         ; Load 8CE into I
$83A    $95C8   UNKNOWN  $95C8           ; Unknown 9xxx instruction
$83C    $CB74   RND      VB, #74         ; VB = random & 74
$83E    $017C   SYS      $17C            ; System call to 17C
$840    $F621   UNKNOWN  F621            ; Unknown Fxxx instruction
$842    $A780   LD       I, $780         ; Load 780 into I
$844    $6FFF   LD       VF, #FF         ; Load 255 into VF
$846    $1D37   JP       $D37            ; Jump to D37
$848    $FB52   UNKNOWN  FB52            ; Unknown Fxxx instruction
$84A    $71B8   ADD      V1, #B8         ; Add 184 to V1
$84C    $06A4   SYS      $6A4            ; System call to 6A4
$84E    $747C   ADD      V4, #7C         ; Add 124 to V4
$850    $3156   SE       V1, #56         ; Skip if V1 == 86
$852    $7A05   ADD      VA, #05         ; Add 5 to VA
$854    $6850   LD       V8, #50         ; Load 80 into V8
$856    $098D   SYS      $98D            ; System call to 98D
$858    $6C05   LD       VC, #05         ; Load 5 into VC
$85A    $9470   SNE      V4, V7          ; Skip if V4 != V7
$85C    $E639   UNKNOWN  $E639           ; Unknown Exxx instruction
$85E    $4EB2   SNE      VE, #B2         ; Skip if VE != 178
$860    $AF63   LD       I, $F63         ; Load F63 into I
$862    $4432   SNE      V4, #32         ; Skip if V4 != 50
$864    $1E11   JP       $E11            ; Jump to E11
$866    $21AD   CALL     $1AD            ; Call subroutine at 1AD
$868    $AD4C   LD       I, $D4C         ; Load D4C into I
$86A    $869A   UNKNOWN  869A            ; Unknown 8xxx instruction
$86C    $385A   SE       V8, #5A         ; Skip if V8 == 90
$86E    $5D5D   UNKNOWN  $5D5D           ; Unknown 5xxx instruction
$870    $B39F   JP       V0, $39F        ; Jump to V0 + 39F
$872    $8617   SUBN     V6, V1          ; V6 = V1 - V6, VF = !borrow
$874    $0106   SYS      $106            ; System call to 106
$876    $4C47   SNE      VC, #47         ; Skip if VC != 71
$878    $4943   SNE      V9, #43         ; Skip if V9 != 67
$87A    $9514   UNKNOWN  $9514           ; Unknown 9xxx instruction
$87C    $184F   JP       $84F            ; Jump to 84F
$87E    $8A96   SHR      VA              ; VA >>= 1, VF = LSB
$880    $FEF3   UNKNOWN  FEF3            ; Unknown Fxxx instruction
$882    $6ADA   LD       VA, #DA         ; Load 218 into VA
$884    $64E0   LD       V4, #E0         ; Load 224 into V4
$886    $B2D8   JP       V0, $2D8        ; Jump to V0 + 2D8
$888    $B16B   JP       V0, $16B        ; Jump to V0 + 16B
$88A    $D0D0   DRW      V0, VD, #0      ; Draw 0-byte sprite at V0, VD
$88C    $87D4   ADD      V7, VD          ; V7 += VD, VF = carry
$88E    $253D   CALL     $53D            ; Call subroutine at 53D
$890    $E02C   UNKNOWN  $E02C           ; Unknown Exxx instruction
$892    $627A   LD       V2, #7A         ; Load 122 into V2
$894    $DA8C   DRW      VA, V8, #C      ; Draw 12-byte sprite at VA, V8
$896    $4455   SNE      V4, #55         ; Skip if V4 != 85
$898    $2D01   CALL     $D01            ; Call subroutine at D01
$89A    $8BDD   UNKNOWN  8BDD            ; Unknown 8xxx instruction
$89C    $FA4D   UNKNOWN  FA4D            ; Unknown Fxxx instruction
$89E    $C8C4   RND      V8, #C4         ; V8 = random & C4
$8A0    $62D9   LD       V2, #D9         ; Load 217 into V2
$8A2    $EDA0   UNKNOWN  $EDA0           ; Unknown Exxx instruction
$8A4    $DC1C   DRW      VC, V1, #C      ; Draw 12-byte sprite at VC, V1
$8A6    $72BC   ADD      V2, #BC         ; Add 188 to V2
$8A8    $3B97   SE       VB, #97         ; Skip if VB == 151
$8AA    $19F6   JP       $9F6            ; Jump to 9F6
$8AC    $5BEC   UNKNOWN  $5BEC           ; Unknown 5xxx instruction
$8AE    $2F63   CALL     $F63            ; Call subroutine at F63
$8B0    $471D   SNE      V7, #1D         ; Skip if V7 != 29
$8B2    $EE12   UNKNOWN  $EE12           ; Unknown Exxx instruction
$8B4    $02C5   SYS      $2C5            ; System call to 2C5
$8B6    $2F32   CALL     $F32            ; Call subroutine at F32
$8B8    $FB02   UNKNOWN  FB02            ; Unknown Fxxx instruction
$8BA    $5C60   SE       VC, V6          ; Skip if VC == V6
$8BC    $9BE4   UNKNOWN  $9BE4           ; Unknown 9xxx instruction
$8BE    $2756   CALL     $756            ; Call subroutine at 756
$8C0    $755A   ADD      V5, #5A         ; Add 90 to V5
$8C2    $EC82   UNKNOWN  $EC82           ; Unknown Exxx instruction
$8C4    $5A68   UNKNOWN  $5A68           ; Unknown 5xxx instruction
$8C6    $8D35   SUB      VD, V3          ; VD -= V3, VF = !borrow
$8C8    $457D   SNE      V5, #7D         ; Skip if V5 != 125
$8CA    $BCD8   JP       V0, $CD8        ; Jump to V0 + CD8
$8CC    $8647   SUBN     V6, V4          ; V6 = V4 - V6, VF = !borrow
$8CE    $7005   ADD      V0, #05         ; Add 5 to V0
$8D0    $085D   SYS      $85D            ; System call to 85D
$8D2    $AD22   LD       I, $D22         ; Load D22 into I
$8D4    $9369   UNKNOWN  $9369           ; Unknown 9xxx instruction
$8D6    $9759   UNKNOWN  $9759           ; Unknown 9xxx instruction
$8D8    $E7FD   UNKNOWN  $E7FD           ; Unknown Exxx instruction
$8DA    $AC80   LD       I, $C80         ; Load C80 into I
$8DC    $336D   SE       V3, #6D         ; Skip if V3 == 109
$8DE    $5C5B   UNKNOWN  $5C5B           ; Unknown 5xxx instruction
$8E0    $351B   SE       V5, #1B         ; Skip if V5 == 27
$8E2    $84ED   UNKNOWN  84ED            ; Unknown 8xxx instruction
$8E4    $17BC   JP       $7BC            ; Jump to 7BC
$8E6    $3310   SE       V3, #10         ; Skip if V3 == 16
$8E8    $70CC   ADD      V0, #CC         ; Add 204 to V0
$8EA    $C2BE   RND      V2, #BE         ; V2 = random & BE
$8EC    $20AA   CALL     $0AA            ; Call subroutine at 0AA
$8EE    $7734   ADD      V7, #34         ; Add 52 to V7
$8F0    $526C   UNKNOWN  $526C           ; Unknown 5xxx instruction
$8F2    $9FA9   UNKNOWN  $9FA9           ; Unknown 9xxx instruction
$8F4    $7936   ADD      V9, #36         ; Add 54 to V9
$8F6    $0C49   SYS      $C49            ; System call to C49
$8F8    $173A   JP       $73A            ; Jump to 73A
$8FA    $B27D   JP       V0, $27D        ; Jump to V0 + 27D
$8FC    $1FA9   JP       $FA9            ; Jump to FA9
$8FE    $11F2   JP       $1F2            ; Jump to 1F2
$900    $062B   SYS      $62B            ; System call to 62B
$902    $8DD5   SUB      VD, VD          ; VD -= VD, VF = !borrow
$904    $E4FE   UNKNOWN  $E4FE           ; Unknown Exxx instruction
$906    $FA37   UNKNOWN  FA37            ; Unknown Fxxx instruction
$908    $5B80   SE       VB, V8          ; Skip if VB == V8
$90A    $5A69   UNKNOWN  $5A69           ; Unknown 5xxx instruction
$90C    $F651   UNKNOWN  F651            ; Unknown Fxxx instruction
$90E    $2796   CALL     $796            ; Call subroutine at 796
$910    $5166   UNKNOWN  $5166           ; Unknown 5xxx instruction
$912    $D9C7   DRW      V9, VC, #7      ; Draw 7-byte sprite at V9, VC
$914    $E198   UNKNOWN  $E198           ; Unknown Exxx instruction
$916    $DDB4   DRW      VD, VB, #4      ; Draw 4-byte sprite at VD, VB
$918    $06EB   SYS      $6EB            ; System call to 6EB
$91A    $57FC   UNKNOWN  $57FC           ; Unknown 5xxx instruction
$91C    $8BCD   UNKNOWN  8BCD            ; Unknown 8xxx instruction
$91E    $4638   SNE      V6, #38         ; Skip if V6 != 56
$920    $0902   SYS      $902            ; System call to 902
$922    $DF81   DRW      VF, V8, #1      ; Draw 1-byte sprite at VF, V8
$924    $7D21   ADD      VD, #21         ; Add 33 to VD
$926    $4ED9   SNE      VE, #D9         ; Skip if VE != 217
$928    $B70B   JP       V0, $70B        ; Jump to V0 + 70B
$92A    $1C07   JP       $C07            ; Jump to C07
$92C    $D5A1   DRW      V5, VA, #1      ; Draw 1-byte sprite at V5, VA
$92E    $56AC   UNKNOWN  $56AC           ; Unknown 5xxx instruction
$930    $1C7B   JP       $C7B            ; Jump to C7B
$932    $0B1F   SYS      $B1F            ; System call to B1F
$934    $DA5F   DRW      VA, V5, #F      ; Draw 15-byte sprite at VA, V5
$936    $18C6   JP       $8C6            ; Jump to 8C6
$938    $CFA0   RND      VF, #A0         ; VF = random & A0
$93A    $606D   LD       V0, #6D         ; Load 109 into V0
$93C    $D785   DRW      V7, V8, #5      ; Draw 5-byte sprite at V7, V8
$93E    $2B10   CALL     $B10            ; Call subroutine at B10
$940    $5F00   SE       VF, V0          ; Skip if VF == V0
$942    $DBF7   DRW      VB, VF, #7      ; Draw 7-byte sprite at VB, VF
$944    $FEDB   UNKNOWN  FEDB            ; Unknown Fxxx instruction
$946    $6116   LD       V1, #16         ; Load 22 into V1
$948    $252D   CALL     $52D            ; Call subroutine at 52D
$94A    $6FB6   LD       VF, #B6         ; Load 182 into VF
$94C    $3B63   SE       VB, #63         ; Skip if VB == 99
$94E    $033B   SYS      $33B            ; System call to 33B
$950    $2BE5   CALL     $BE5            ; Call subroutine at BE5
$952    $F89A   UNKNOWN  F89A            ; Unknown Fxxx instruction
$954    $2EDC   CALL     $EDC            ; Call subroutine at EDC
$956    $1D9C   JP       $D9C            ; Jump to D9C
$958    $1C0D   JP       $C0D            ; Jump to C0D
$95A    $B4CF   JP       V0, $4CF        ; Jump to V0 + 4CF
$95C    $3796   SE       V7, #96         ; Skip if V7 == 150
$95E    $3CAA   SE       VC, #AA         ; Skip if VC == 170
$960    $C7D4   RND      V7, #D4         ; V7 = random & D4
$962    $C5F6   RND      V5, #F6         ; V5 = random & F6
$964    $7C4A   ADD      VC, #4A         ; Add 74 to VC
$966    $2AC5   CALL     $AC5            ; Call subroutine at AC5
$968    $C54D   RND      V5, #4D         ; V5 = random & 4D
$96A    $2E66   CALL     $E66            ; Call subroutine at E66
$96C    $21DB   CALL     $1DB            ; Call subroutine at 1DB
$96E    $F22D   UNKNOWN  F22D            ; Unknown Fxxx instruction
$970    $4E09   SNE      VE, #09         ; Skip if VE != 9
$972    $DB93   DRW      VB, V9, #3      ; Draw 3-byte sprite at VB, V9
$974    $908B   UNKNOWN  $908B           ; Unknown 9xxx instruction
$976    $BBE2   JP       V0, $BE2        ; Jump to V0 + BE2
$978    $BE46   JP       V0, $E46        ; Jump to V0 + E46
$97A    $E58A   UNKNOWN  $E58A           ; Unknown Exxx instruction
$97C    $FC46   UNKNOWN  FC46            ; Unknown Fxxx instruction
$97E    $2D5F   CALL     $D5F            ; Call subroutine at D5F
$980    $EBAF   UNKNOWN  $EBAF           ; Unknown Exxx instruction
$982    $90DD   UNKNOWN  $90DD           ; Unknown 9xxx instruction
$984    $C958   RND      V9, #58         ; V9 = random & 58
$986    $B5AF   JP       V0, $5AF        ; Jump to V0 + 5AF
$988    $B50D   JP       V0, $50D        ; Jump to V0 + 50D
$98A    $F9C9   UNKNOWN  F9C9            ; Unknown Fxxx instruction
$98C    $A7D9   LD       I, $7D9         ; Load 7D9 into I
$98E    $4CD3   SNE      VC, #D3         ; Skip if VC != 211
$990    $FD61   UNKNOWN  FD61            ; Unknown Fxxx instruction
$992    $1F6D   JP       $F6D            ; Jump to F6D
$994    $320E   SE       V2, #0E         ; Skip if V2 == 14
$996    $1D6B   JP       $D6B            ; Jump to D6B
$998    $653C   LD       V5, #3C         ; Load 60 into V5
$99A    $7611   ADD      V6, #11         ; Add 17 to V6
$99C    $5D32   UNKNOWN  $5D32           ; Unknown 5xxx instruction
$99E    $2ED4   CALL     $ED4            ; Call subroutine at ED4
$9A0    $7FAA   ADD      VF, #AA         ; Add 170 to VF
$9A2    $B027   JP       V0, $027        ; Jump to V0 + 027
$9A4    $DE02   DRW      VE, V0, #2      ; Draw 2-byte sprite at VE, V0
$9A6    $D49B   DRW      V4, V9, #B      ; Draw 11-byte sprite at V4, V9
$9A8    $221B   CALL     $21B            ; Call subroutine at 21B
$9AA    $0329   SYS      $329            ; System call to 329
$9AC    $0F4C   SYS      $F4C            ; System call to F4C
$9AE    $C9FB   RND      V9, #FB         ; V9 = random & FB
$9B0    $A8D3   LD       I, $8D3         ; Load 8D3 into I
$9B2    $F38E   UNKNOWN  F38E            ; Unknown Fxxx instruction
$9B4    $B630   JP       V0, $630        ; Jump to V0 + 630
$9B6    $C6AE   RND      V6, #AE         ; V6 = random & AE
$9B8    $3553   SE       V5, #53         ; Skip if V5 == 83
$9BA    $8073   XOR      V0, V7          ; V0 ^= V7
$9BC    $BC7D   JP       V0, $C7D        ; Jump to V0 + C7D
$9BE    $CD86   RND      VD, #86         ; VD = random & 86
$9C0    $A909   LD       I, $909         ; Load 909 into I
$9C2    $F164   UNKNOWN  F164            ; Unknown Fxxx instruction
$9C4    $E1EE   UNKNOWN  $E1EE           ; Unknown Exxx instruction
$9C6    $B58D   JP       V0, $58D        ; Jump to V0 + 58D
$9C8    $01D1   SYS      $1D1            ; System call to 1D1
$9CA    $069F   SYS      $69F            ; System call to 69F
$9CC    $9553   UNKNOWN  $9553           ; Unknown 9xxx instruction
$9CE    $3860   SE       V8, #60         ; Skip if V8 == 96
$9D0    $226C   CALL     $26C            ; Call subroutine at 26C
$9D2    $7C6C   ADD      VC, #6C         ; Add 108 to VC
$9D4    $293C   CALL     $93C            ; Call subroutine at 93C
$9D6    $08A0   SYS      $8A0            ; System call to 8A0
$9D8    $BF79   JP       V0, $F79        ; Jump to V0 + F79
$9DA    $F80E   UNKNOWN  F80E            ; Unknown Fxxx instruction
$9DC    $6A0F   LD       VA, #0F         ; Load 15 into VA
$9DE    $1CED   JP       $CED            ; Jump to CED
$9E0    $E0BA   UNKNOWN  $E0BA           ; Unknown Exxx instruction
$9E2    $6F4F   LD       VF, #4F         ; Load 79 into VF
$9E4    $F8D0   UNKNOWN  F8D0            ; Unknown Fxxx instruction
$9E6    $1888   JP       $888            ; Jump to 888
$9E8    $1D7D   JP       $D7D            ; Jump to D7D
$9EA    $04E1   SYS      $4E1            ; System call to 4E1
$9EC    $64EE   LD       V4, #EE         ; Load 238 into V4
$9EE    $E08D   UNKNOWN  $E08D           ; Unknown Exxx instruction
$9F0    $8F00   LD       VF, V0          ; VF = V0
$9F2    $2D8F   CALL     $D8F            ; Call subroutine at D8F
$9F4    $1E67   JP       $E67            ; Jump to E67
$9F6    $43B7   SNE      V3, #B7         ; Skip if V3 != 183
$9F8    $9BD7   UNKNOWN  $9BD7           ; Unknown 9xxx instruction
$9FA    $B1F7   JP       V0, $1F7        ; Jump to V0 + 1F7
$9FC    $BE9A   JP       V0, $E9A        ; Jump to V0 + E9A
$9FE    $E93C   UNKNOWN  $E93C           ; Unknown Exxx instruction
$A00    $1CA1   JP       $CA1            ; Jump to CA1
$A02    $5BDF   UNKNOWN  $5BDF           ; Unknown 5xxx instruction
$A04    $8F8B   UNKNOWN  8F8B            ; Unknown 8xxx instruction
$A06    $F5A5   UNKNOWN  F5A5            ; Unknown Fxxx instruction
$A08    $F75F   UNKNOWN  F75F            ; Unknown Fxxx instruction
$A0A    $A04C   LD       I, $04C         ; Load 04C into I
$A0C    $7809   ADD      V8, #09         ; Add 9 to V8
$A0E    $BA64   JP       V0, $A64        ; Jump to V0 + A64
$A10    $4246   SNE      V2, #46         ; Skip if V2 != 70
$A12    $31F1   SE       V1, #F1         ; Skip if V1 == 241
$A14    $E95F   UNKNOWN  $E95F           ; Unknown Exxx instruction
$A16    $CF3C   RND      VF, #3C         ; VF = random & 3C
$A18    $2566   CALL     $566            ; Call subroutine at 566
$A1A    $0001   SYS      $001            ; System call to 001
$A1C    $5657   UNKNOWN  $5657           ; Unknown 5xxx instruction
$A1E    $0E0E   SYS      $E0E            ; System call to E0E
$A20    $FB2F   UNKNOWN  FB2F            ; Unknown Fxxx instruction
$A22    $55EF   UNKNOWN  $55EF           ; Unknown 5xxx instruction
$A24    $B59C   JP       V0, $59C        ; Jump to V0 + 59C
$A26    $34C4   SE       V4, #C4         ; Skip if V4 == 196
$A28    $F639   UNKNOWN  F639            ; Unknown Fxxx instruction
$A2A    $4E06   SNE      VE, #06         ; Skip if VE != 6
$A2C    $B304   JP       V0, $304        ; Jump to V0 + 304
$A2E    $2D78   CALL     $D78            ; Call subroutine at D78
$A30    $A5A2   LD       I, $5A2         ; Load 5A2 into I
$A32    $8EAA   UNKNOWN  8EAA            ; Unknown 8xxx instruction
$A34    $FA02   UNKNOWN  FA02            ; Unknown Fxxx instruction
$A36    $C27F   RND      V2, #7F         ; V2 = random & 7F
$A38    $18ED   JP       $8ED            ; Jump to 8ED
$A3A    $D9C6   DRW      V9, VC, #6      ; Draw 6-byte sprite at V9, VC
$A3C    $0055   SYS      $055            ; System call to 055
$A3E    $25D9   CALL     $5D9            ; Call subroutine at 5D9
$A40    $06BA   SYS      $6BA            ; System call to 6BA
$A42    $C68B   RND      V6, #8B         ; V6 = random & 8B
$A44    $F46D   UNKNOWN  F46D            ; Unknown Fxxx instruction
$A46    $466B   SNE      V6, #6B         ; Skip if V6 != 107
$A48    $6E77   LD       VE, #77         ; Load 119 into VE
$A4A    $134A   JP       $34A            ; Jump to 34A
$A4C    $3E98   SE       VE, #98         ; Skip if VE == 152
$A4E    $3C70   SE       VC, #70         ; Skip if VC == 112
$A50    $471F   SNE      V7, #1F         ; Skip if V7 != 31
$A52    $D542   DRW      V5, V4, #2      ; Draw 2-byte sprite at V5, V4
$A54    $5833   UNKNOWN  $5833           ; Unknown 5xxx instruction
$A56    $CC77   RND      VC, #77         ; VC = random & 77
$A58    $C0C6   RND      V0, #C6         ; V0 = random & C6
$A5A    $A735   LD       I, $735         ; Load 735 into I
$A5C    $8853   XOR      V8, V5          ; V8 ^= V5
$A5E    $349A   SE       V4, #9A         ; Skip if V4 == 154
$A60    $04F8   SYS      $4F8            ; System call to 4F8
$A62    $AE80   LD       I, $E80         ; Load E80 into I
$A64    $231C   CALL     $31C            ; Call subroutine at 31C
$A66    $0C7A   SYS      $C7A            ; System call to C7A
$A68    $8C50   LD       VC, V5          ; VC = V5
$A6A    $D3C2   DRW      V3, VC, #2      ; Draw 2-byte sprite at V3, VC
$A6C    $105A   JP       $05A            ; Jump to 05A
$A6E    $84D6   SHR      V4              ; V4 >>= 1, VF = LSB
$A70    $BFE4   JP       V0, $FE4        ; Jump to V0 + FE4
$A72    $75B3   ADD      V5, #B3         ; Add 179 to V5
$A74    $C03E   RND      V0, #3E         ; V0 = random & 3E
$A76    $F26B   UNKNOWN  F26B            ; Unknown Fxxx instruction
$A78    $16FD   JP       $6FD            ; Jump to 6FD
$A7A    $82F8   UNKNOWN  82F8            ; Unknown 8xxx instruction
$A7C    $4AC5   SNE      VA, #C5         ; Skip if VA != 197
$A7E    $C99B   RND      V9, #9B         ; V9 = random & 9B
$A80    $C064   RND      V0, #64         ; V0 = random & 64
$A82    $45B5   SNE      V5, #B5         ; Skip if V5 != 181
$A84    $1096   JP       $096            ; Jump to 096
$A86    $1CA6   JP       $CA6            ; Jump to CA6
$A88    $091C   SYS      $91C            ; System call to 91C
$A8A    $C789   RND      V7, #89         ; V7 = random & 89
$A8C    $BA9B   JP       V0, $A9B        ; Jump to V0 + A9B
$A8E    $6780   LD       V7, #80         ; Load 128 into V7
$A90    $97AB   UNKNOWN  $97AB           ; Unknown 9xxx instruction
$A92    $323F   SE       V2, #3F         ; Skip if V2 == 63
$A94    $B0CB   JP       V0, $0CB        ; Jump to V0 + 0CB
$A96    $D9A9   DRW      V9, VA, #9      ; Draw 9-byte sprite at V9, VA
$A98    $1A5A   JP       $A5A            ; Jump to A5A
$A9A    $00E7   SYS      $0E7            ; System call to 0E7
$A9C    $00EB   SYS      $0EB            ; System call to 0EB
$A9E    $64DE   LD       V4, #DE         ; Load 222 into V4
$AA0    $146D   JP       $46D            ; Jump to 46D
$AA2    $D3F7   DRW      V3, VF, #7      ; Draw 7-byte sprite at V3, VF
$AA4    $81ED   UNKNOWN  81ED            ; Unknown 8xxx instruction
$AA6    $E862   UNKNOWN  $E862           ; Unknown Exxx instruction
$AA8    $6CC9   LD       VC, #C9         ; Load 201 into VC
$AAA    $A4E3   LD       I, $4E3         ; Load 4E3 into I
$AAC    $F652   UNKNOWN  F652            ; Unknown Fxxx instruction
$AAE    $20AB   CALL     $0AB            ; Call subroutine at 0AB
$AB0    $CFD7   RND      VF, #D7         ; VF = random & D7
$AB2    $A798   LD       I, $798         ; Load 798 into I
$AB4    $D97C   DRW      V9, V7, #C      ; Draw 12-byte sprite at V9, V7
$AB6    $61A8   LD       V1, #A8         ; Load 168 into V1
$AB8    $67D8   LD       V7, #D8         ; Load 216 into V7
$ABA    $02A1   SYS      $2A1            ; System call to 2A1
$ABC    $5C41   UNKNOWN  $5C41           ; Unknown 5xxx instruction
$ABE    $4037   SNE      V0, #37         ; Skip if V0 != 55
$AC0    $D0C5   DRW      V0, VC, #5      ; Draw 5-byte sprite at V0, VC
$AC2    $C256   RND      V2, #56         ; V2 = random & 56
$AC4    $014F   SYS      $14F            ; System call to 14F
$AC6    $E90C   UNKNOWN  $E90C           ; Unknown Exxx instruction
$AC8    $95D9   UNKNOWN  $95D9           ; Unknown 9xxx instruction
$ACA    $3B00   SE       VB, #00         ; Skip if VB == 0
$ACC    $3E3C   SE       VE, #3C         ; Skip if VE == 60
$ACE    $BBB7   JP       V0, $BB7        ; Jump to V0 + BB7
$AD0    $AE61   LD       I, $E61         ; Load E61 into I
$AD2    $57C1   UNKNOWN  $57C1           ; Unknown 5xxx instruction
$AD4    $239A   CALL     $39A            ; Call subroutine at 39A
$AD6    $AF2D   LD       I, $F2D         ; Load F2D into I
$AD8    $BE01   JP       V0, $E01        ; Jump to V0 + E01
$ADA    $9E0D   UNKNOWN  $9E0D           ; Unknown 9xxx instruction
$ADC    $D20B   DRW      V2, V0, #B      ; Draw 11-byte sprite at V2, V0
$ADE    $BBAF   JP       V0, $BAF        ; Jump to V0 + BAF
$AE0    $AF34   LD       I, $F34         ; Load F34 into I
$AE2    $7E2B   ADD      VE, #2B         ; Add 43 to VE
$AE4    $0DE3   SYS      $DE3            ; System call to DE3
$AE6    $F9EE   UNKNOWN  F9EE            ; Unknown Fxxx instruction
$AE8    $9BDE   UNKNOWN  $9BDE           ; Unknown 9xxx instruction
$AEA    $C969   RND      V9, #69         ; V9 = random & 69
$AEC    $DEB8   DRW      VE, VB, #8      ; Draw 8-byte sprite at VE, VB
$AEE    $DCEA   DRW      VC, VE, #A      ; Draw 10-byte sprite at VC, VE
$AF0    $FDDE   UNKNOWN  FDDE            ; Unknown Fxxx instruction
$AF2    $4340   SNE      V3, #40         ; Skip if V3 != 64
$AF4    $BEB2   JP       V0, $EB2        ; Jump to V0 + EB2
$AF6    $B213   JP       V0, $213        ; Jump to V0 + 213
$AF8    $36B9   SE       V6, #B9         ; Skip if V6 == 185
$AFA    $8C25   SUB      VC, V2          ; VC -= V2, VF = !borrow
$AFC    $25CB   CALL     $5CB            ; Call subroutine at 5CB
$AFE    $DCBF   DRW      VC, VB, #F      ; Draw 15-byte sprite at VC, VB
$B00    $14A7   JP       $4A7            ; Jump to 4A7
$B02    $9738   UNKNOWN  $9738           ; Unknown 9xxx instruction
$B04    $0BE8   SYS      $BE8            ; System call to BE8
$B06    $B76C   JP       V0, $76C        ; Jump to V0 + 76C
$B08    $4C4A   SNE      VC, #4A         ; Skip if VC != 74
$B0A    $DED6   DRW      VE, VD, #6      ; Draw 6-byte sprite at VE, VD
$B0C    $9769   UNKNOWN  $9769           ; Unknown 9xxx instruction
$B0E    $938F   UNKNOWN  $938F           ; Unknown 9xxx instruction
$B10    $C5E5   RND      V5, #E5         ; V5 = random & E5
$B12    $A99C   LD       I, $99C         ; Load 99C into I
$B14    $0D10   SYS      $D10            ; System call to D10
$B16    $C8EE   RND      V8, #EE         ; V8 = random & EE
$B18    $ED0A   UNKNOWN  $ED0A           ; Unknown Exxx instruction
$B1A    $33E5   SE       V3, #E5         ; Skip if V3 == 229
$B1C    $9435   UNKNOWN  $9435           ; Unknown 9xxx instruction
$B1E    $2A59   CALL     $A59            ; Call subroutine at A59
$B20    $2FF4   CALL     $FF4            ; Call subroutine at FF4
$B22    $BF4A   JP       V0, $F4A        ; Jump to V0 + F4A
$B24    $335D   SE       V3, #5D         ; Skip if V3 == 93
$B26    $260B   CALL     $60B            ; Call subroutine at 60B
$B28    $D8C8   DRW      V8, VC, #8      ; Draw 8-byte sprite at V8, VC
$B2A    $6570   LD       V5, #70         ; Load 112 into V5
$B2C    $01DE   SYS      $1DE            ; System call to 1DE
$B2E    $8C8D   UNKNOWN  8C8D            ; Unknown 8xxx instruction
$B30    $69EF   LD       V9, #EF         ; Load 239 into V9
$B32    $7287   ADD      V2, #87         ; Add 135 to V2
$B34    $DDEC   DRW      VD, VE, #C      ; Draw 12-byte sprite at VD, VE
$B36    $8E2D   UNKNOWN  8E2D            ; Unknown 8xxx instruction
$B38    $BB35   JP       V0, $B35        ; Jump to V0 + B35
$B3A    $6618   LD       V6, #18         ; Load 24 into V6
$B3C    $325E   SE       V2, #5E         ; Skip if V2 == 94
$B3E    $BA23   JP       V0, $A23        ; Jump to V0 + A23
$B40    $1A4B   JP       $A4B            ; Jump to A4B
$B42    $21CD   CALL     $1CD            ; Call subroutine at 1CD
$B44    $5239   UNKNOWN  $5239           ; Unknown 5xxx instruction
$B46    $0A01   SYS      $A01            ; System call to A01
$B48    $CAAA   RND      VA, #AA         ; VA = random & AA
$B4A    $9968   UNKNOWN  $9968           ; Unknown 9xxx instruction
$B4C    $6DA2   LD       VD, #A2         ; Load 162 into VD
$B4E    $B1B2   JP       V0, $1B2        ; Jump to V0 + 1B2
$B50    $8F8E   SHL      VF              ; VF <<= 1, VF = MSB
$B52    $2B97   CALL     $B97            ; Call subroutine at B97
$B54    $5C9A   UNKNOWN  $5C9A           ; Unknown 5xxx instruction
$B56    $8366   SHR      V3              ; V3 >>= 1, VF = LSB
$B58    $075C   SYS      $75C            ; System call to 75C
$B5A    $AD93   LD       I, $D93         ; Load D93 into I
$B5C    $B3E0   JP       V0, $3E0        ; Jump to V0 + 3E0
$B5E    $4A8C   SNE      VA, #8C         ; Skip if VA != 140
$B60    $484E   SNE      V8, #4E         ; Skip if V8 != 78
$B62    $3537   SE       V5, #37         ; Skip if V5 == 55
$B64    $7490   ADD      V4, #90         ; Add 144 to V4
$B66    $43A0   SNE      V3, #A0         ; Skip if V3 != 160
$B68    $8E27   SUBN     VE, V2          ; VE = V2 - VE, VF = !borrow
$B6A    $9932   UNKNOWN  $9932           ; Unknown 9xxx instruction
$B6C    $12E5   JP       $2E5            ; Jump to 2E5
$B6E    $37C5   SE       V7, #C5         ; Skip if V7 == 197
$B70    $896F   UNKNOWN  896F            ; Unknown 8xxx instruction
$B72    $097B   SYS      $97B            ; System call to 97B
$B74    $5BE0   SE       VB, VE          ; Skip if VB == VE
$B76    $DA43   DRW      VA, V4, #3      ; Draw 3-byte sprite at VA, V4
$B78    $FF1B   UNKNOWN  FF1B            ; Unknown Fxxx instruction
$B7A    $D15E   DRW      V1, V5, #E      ; Draw 14-byte sprite at V1, V5
$B7C    $156E   JP       $56E            ; Jump to 56E
$B7E    $9B5B   UNKNOWN  $9B5B           ; Unknown 9xxx instruction
$B80    $3C7F   SE       VC, #7F         ; Skip if VC == 127
$B82    $2AA9   CALL     $AA9            ; Call subroutine at AA9
$B84    $8D37   SUBN     VD, V3          ; VD = V3 - VD, VF = !borrow
$B86    $FA33   LD       B, VA           ; Store BCD of VA at I, I+1, I+2
$B88    $E43D   UNKNOWN  $E43D           ; Unknown Exxx instruction
$B8A    $41C2   SNE      V1, #C2         ; Skip if V1 != 194
$B8C    $0D67   SYS      $D67            ; System call to D67
$B8E    $36D7   SE       V6, #D7         ; Skip if V6 == 215
$B90    $7F20   ADD      VF, #20         ; Add 32 to VF
$B92    $85B2   AND      V5, VB          ; V5 &= VB
$B94    $57D1   UNKNOWN  $57D1           ; Unknown 5xxx instruction
$B96    $A390   LD       I, $390         ; Load 390 into I
$B98    $838A   UNKNOWN  838A            ; Unknown 8xxx instruction
$B9A    $8678   UNKNOWN  8678            ; Unknown 8xxx instruction
$B9C    $EEA8   UNKNOWN  $EEA8           ; Unknown Exxx instruction
$B9E    $443E   SNE      V4, #3E         ; Skip if V4 != 62
$BA0    $DF54   DRW      VF, V5, #4      ; Draw 4-byte sprite at VF, V5
$BA2    $720D   ADD      V2, #0D         ; Add 13 to V2
$BA4    $6058   LD       V0, #58         ; Load 88 into V0
$BA6    $FCF3   UNKNOWN  FCF3            ; Unknown Fxxx instruction
$BA8    $870F   UNKNOWN  870F            ; Unknown 8xxx instruction
$BAA    $658A   LD       V5, #8A         ; Load 138 into V5
$BAC    $9367   UNKNOWN  $9367           ; Unknown 9xxx instruction
$BAE    $A2F6   LD       I, $2F6         ; Load 2F6 into I
$BB0    $7EB1   ADD      VE, #B1         ; Add 177 to VE
$BB2    $048E   SYS      $48E            ; System call to 48E
$BB4    $04BB   SYS      $4BB            ; System call to 4BB
$BB6    $D42D   DRW      V4, V2, #D      ; Draw 13-byte sprite at V4, V2
$BB8    $2A76   CALL     $A76            ; Call subroutine at A76
$BBA    $6BFF   LD       VB, #FF         ; Load 255 into VB
$BBC    $D351   DRW      V3, V5, #1      ; Draw 1-byte sprite at V3, V5
$BBE    $ADDC   LD       I, $DDC         ; Load DDC into I
$BC0    $DA42   DRW      VA, V4, #2      ; Draw 2-byte sprite at VA, V4
$BC2    $051C   SYS      $51C            ; System call to 51C
$BC4    $92FB   UNKNOWN  $92FB           ; Unknown 9xxx instruction
$BC6    $5B2D   UNKNOWN  $5B2D           ; Unknown 5xxx instruction
$BC8    $F190   UNKNOWN  F190            ; Unknown Fxxx instruction
$BCA    $80F0   LD       V0, VF          ; V0 = VF
$BCC    $2E8E   CALL     $E8E            ; Call subroutine at E8E
$BCE    $F4AE   UNKNOWN  F4AE            ; Unknown Fxxx instruction
$BD0    $FB0B   UNKNOWN  FB0B            ; Unknown Fxxx instruction
$BD2    $C1C6   RND      V1, #C6         ; V1 = random & C6
$BD4    $DBBA   DRW      VB, VB, #A      ; Draw 10-byte sprite at VB, VB
$BD6    $C93F   RND      V9, #3F         ; V9 = random & 3F
$BD8    $B9F0   JP       V0, $9F0        ; Jump to V0 + 9F0
$BDA    $FB29   LD       F, VB           ; I = sprite address for digit VB
$BDC    $994A   UNKNOWN  $994A           ; Unknown 9xxx instruction
$BDE    $09FF   SYS      $9FF            ; System call to 9FF
$BE0    $8473   XOR      V4, V7          ; V4 ^= V7
$BE2    $FDBD   UNKNOWN  FDBD            ; Unknown Fxxx instruction
$BE4    $1B9E   JP       $B9E            ; Jump to B9E
$BE6    $DF5D   DRW      VF, V5, #D      ; Draw 13-byte sprite at VF, V5
$BE8    $696B   LD       V9, #6B         ; Load 107 into V9
$BEA    $A948   LD       I, $948         ; Load 948 into I
$BEC    $8884   ADD      V8, V8          ; V8 += V8, VF = carry
$BEE    $7738   ADD      V7, #38         ; Add 56 to V7
$BF0    $91C5   UNKNOWN  $91C5           ; Unknown 9xxx instruction
$BF2    $9687   UNKNOWN  $9687           ; Unknown 9xxx instruction
$BF4    $A31C   LD       I, $31C         ; Load 31C into I
$BF6    $B220   JP       V0, $220        ; Jump to V0 + 220
$BF8    $C758   RND      V7, #58         ; V7 = random & 58
$BFA    $D62D   DRW      V6, V2, #D      ; Draw 13-byte sprite at V6, V2
$BFC    $3B35   SE       VB, #35         ; Skip if VB == 53
$BFE    $B477   JP       V0, $477        ; Jump to V0 + 477
$C00    $39E8   SE       V9, #E8         ; Skip if V9 == 232
$C02    $61C4   LD       V1, #C4         ; Load 196 into V1
$C04    $9885   UNKNOWN  $9885           ; Unknown 9xxx instruction
$C06    $55EC   UNKNOWN  $55EC           ; Unknown 5xxx instruction
$C08    $095B   SYS      $95B            ; System call to 95B
$C0A    $FDEC   UNKNOWN  FDEC            ; Unknown Fxxx instruction
$C0C    $E4C6   UNKNOWN  $E4C6           ; Unknown Exxx instruction
$C0E    $3794   SE       V7, #94         ; Skip if V7 == 148
$C10    $9EA5   UNKNOWN  $9EA5           ; Unknown 9xxx instruction
$C12    $954A   UNKNOWN  $954A           ; Unknown 9xxx instruction
$C14    $CE73   RND      VE, #73         ; VE = random & 73
$C16    $4BBA   SNE      VB, #BA         ; Skip if VB != 186
$C18    $0C0B   SYS      $C0B            ; System call to C0B
$C1A    $D0DF   DRW      V0, VD, #F      ; Draw 15-byte sprite at V0, VD
$C1C    $2339   CALL     $339            ; Call subroutine at 339
$C1E    $40E4   SNE      V0, #E4         ; Skip if V0 != 228
$C20    $C6DE   RND      V6, #DE         ; V6 = random & DE
$C22    $7ABA   ADD      VA, #BA         ; Add 186 to VA
$C24    $7CEC   ADD      VC, #EC         ; Add 236 to VC
$C26    $A55B   LD       I, $55B         ; Load 55B into I
$C28    $51E5   UNKNOWN  $51E5           ; Unknown 5xxx instruction
$C2A    $736D   ADD      V3, #6D         ; Add 109 to V3
$C2C    $FB6A   UNKNOWN  FB6A            ; Unknown Fxxx instruction
$C2E    $CFAA   RND      VF, #AA         ; VF = random & AA
$C30    $6898   LD       V8, #98         ; Load 152 into V8
$C32    $7191   ADD      V1, #91         ; Add 145 to V1
$C34    $360E   SE       V6, #0E         ; Skip if V6 == 14
$C36    $B48E   JP       V0, $48E        ; Jump to V0 + 48E
$C38    $D03A   DRW      V0, V3, #A      ; Draw 10-byte sprite at V0, V3
$C3A    $AC5B   LD       I, $C5B         ; Load C5B into I
$C3C    $21E3   CALL     $1E3            ; Call subroutine at 1E3
$C3E    $1B17   JP       $B17            ; Jump to B17
$C40    $A8B9   LD       I, $8B9         ; Load 8B9 into I
$C42    $9F32   UNKNOWN  $9F32           ; Unknown 9xxx instruction
$C44    $EE2E   UNKNOWN  $EE2E           ; Unknown Exxx instruction
$C46    $FB66   UNKNOWN  FB66            ; Unknown Fxxx instruction
$C48    $9EE7   UNKNOWN  $9EE7           ; Unknown 9xxx instruction
$C4A    $8D01   OR       VD, V0          ; VD |= V0
$C4C    $24B3   CALL     $4B3            ; Call subroutine at 4B3
$C4E    $DD1E   DRW      VD, V1, #E      ; Draw 14-byte sprite at VD, V1
$C50    $B737   JP       V0, $737        ; Jump to V0 + 737
$C52    $B434   JP       V0, $434        ; Jump to V0 + 434
$C54    $4F76   SNE      VF, #76         ; Skip if VF != 118
$C56    $657D   LD       V5, #7D         ; Load 125 into V5
$C58    $892F   UNKNOWN  892F            ; Unknown 8xxx instruction
$C5A    $E952   UNKNOWN  $E952           ; Unknown Exxx instruction
$C5C    $7B3A   ADD      VB, #3A         ; Add 58 to VB
$C5E    $5934   UNKNOWN  $5934           ; Unknown 5xxx instruction
$C60    $592F   UNKNOWN  $592F           ; Unknown 5xxx instruction
$C62    $6DF4   LD       VD, #F4         ; Load 244 into VD
$C64    $6260   LD       V2, #60         ; Load 96 into V2
$C66    $897C   UNKNOWN  897C            ; Unknown 8xxx instruction
$C68    $B577   JP       V0, $577        ; Jump to V0 + 577
$C6A    $C471   RND      V4, #71         ; V4 = random & 71
$C6C    $BAC1   JP       V0, $AC1        ; Jump to V0 + AC1
$C6E    $BC47   JP       V0, $C47        ; Jump to V0 + C47
$C70    $81B1   OR       V1, VB          ; V1 |= VB
$C72    $0FF6   SYS      $FF6            ; System call to FF6
$C74    $D503   DRW      V5, V0, #3      ; Draw 3-byte sprite at V5, V0
$C76    $32E3   SE       V2, #E3         ; Skip if V2 == 227
$C78    $21B3   CALL     $1B3            ; Call subroutine at 1B3
$C7A    $524E   UNKNOWN  $524E           ; Unknown 5xxx instruction
$C7C    $F01A   UNKNOWN  F01A            ; Unknown Fxxx instruction
$C7E    $65A6   LD       V5, #A6         ; Load 166 into V5
$C80    $80C3   XOR      V0, VC          ; V0 ^= VC
$C82    $9FAD   UNKNOWN  $9FAD           ; Unknown 9xxx instruction
$C84    $8026   SHR      V0              ; V0 >>= 1, VF = LSB
$C86    $5B81   UNKNOWN  $5B81           ; Unknown 5xxx instruction
$C88    $0EBE   SYS      $EBE            ; System call to EBE
$C8A    $0F1E   SYS      $F1E            ; System call to F1E
$C8C    $A433   LD       I, $433         ; Load 433 into I
$C8E    $9869   UNKNOWN  $9869           ; Unknown 9xxx instruction
$C90    $4D86   SNE      VD, #86         ; Skip if VD != 134
$C92    $78EF   ADD      V8, #EF         ; Add 239 to V8
$C94    $04C3   SYS      $4C3            ; System call to 4C3
$C96    $F256   UNKNOWN  F256            ; Unknown Fxxx instruction
$C98    $DCFC   DRW      VC, VF, #C      ; Draw 12-byte sprite at VC, VF
$C9A    $3F9A   SE       VF, #9A         ; Skip if VF == 154
$C9C    $118B   JP       $18B            ; Jump to 18B
$C9E    $7B4F   ADD      VB, #4F         ; Add 79 to VB
$CA0    $0AB6   SYS      $AB6            ; System call to AB6
$CA2    $B1D6   JP       V0, $1D6        ; Jump to V0 + 1D6
$CA4    $E26C   UNKNOWN  $E26C           ; Unknown Exxx instruction
$CA6    $1CBE   JP       $CBE            ; Jump to CBE
$CA8    $3010   SE       V0, #10         ; Skip if V0 == 16
$CAA    $62C4   LD       V2, #C4         ; Load 196 into V2
$CAC    $8EF4   ADD      VE, VF          ; VE += VF, VF = carry
$CAE    $4ACD   SNE      VA, #CD         ; Skip if VA != 205
$CB0    $C20D   RND      V2, #0D         ; V2 = random & 0D
$CB2    $8CFD   UNKNOWN  8CFD            ; Unknown 8xxx instruction
$CB4    $5FCF   UNKNOWN  $5FCF           ; Unknown 5xxx instruction
$CB6    $C37C   RND      V3, #7C         ; V3 = random & 7C
$CB8    $A5CF   LD       I, $5CF         ; Load 5CF into I
$CBA    $5033   UNKNOWN  $5033           ; Unknown 5xxx instruction
$CBC    $280C   CALL     $80C            ; Call subroutine at 80C
$CBE    $E6FA   UNKNOWN  $E6FA           ; Unknown Exxx instruction
$CC0    $6802   LD       V8, #02         ; Load 2 into V8
$CC2    $C7D9   RND      V7, #D9         ; V7 = random & D9
$CC4    $AAB7   LD       I, $AB7         ; Load AB7 into I
$CC6    $8A31   OR       VA, V3          ; VA |= V3
$CC8    $9661   UNKNOWN  $9661           ; Unknown 9xxx instruction
$CCA    $20F1   CALL     $0F1            ; Call subroutine at 0F1
$CCC    $3E1A   SE       VE, #1A         ; Skip if VE == 26
$CCE    $0D9B   SYS      $D9B            ; System call to D9B
$CD0    $D222   DRW      V2, V2, #2      ; Draw 2-byte sprite at V2, V2
$CD2    $0A27   SYS      $A27            ; System call to A27
$CD4    $A3EB   LD       I, $3EB         ; Load 3EB into I
$CD6    $FFD0   UNKNOWN  FFD0            ; Unknown Fxxx instruction
$CD8    $7712   ADD      V7, #12         ; Add 18 to V7
$CDA    $C292   RND      V2, #92         ; V2 = random & 92
$CDC    $BA59   JP       V0, $A59        ; Jump to V0 + A59
$CDE    $8A74   ADD      VA, V7          ; VA += V7, VF = carry
$CE0    $BCD0   JP       V0, $CD0        ; Jump to V0 + CD0
$CE2    $DC16   DRW      VC, V1, #6      ; Draw 6-byte sprite at VC, V1
$CE4    $D848   DRW      V8, V4, #8      ; Draw 8-byte sprite at V8, V4
$CE6    $6DF9   LD       VD, #F9         ; Load 249 into VD
$CE8    $279D   CALL     $79D            ; Call subroutine at 79D
$CEA    $9B23   UNKNOWN  $9B23           ; Unknown 9xxx instruction
$CEC    $85F6   SHR      V5              ; V5 >>= 1, VF = LSB
$CEE    $70E0   ADD      V0, #E0         ; Add 224 to V0
$CF0    $96AD   UNKNOWN  $96AD           ; Unknown 9xxx instruction
$CF2    $6484   LD       V4, #84         ; Load 132 into V4
$CF4    $231A   CALL     $31A            ; Call subroutine at 31A
$CF6    $0BF4   SYS      $BF4            ; System call to BF4
$CF8    $B11E   JP       V0, $11E        ; Jump to V0 + 11E
$CFA    $BD44   JP       V0, $D44        ; Jump to V0 + D44
$CFC    $FDBB   UNKNOWN  FDBB            ; Unknown Fxxx instruction
$CFE    $C407   RND      V4, #07         ; V4 = random & 07
$D00    $275C   CALL     $75C            ; Call subroutine at 75C
$D02    $9D84   UNKNOWN  $9D84           ; Unknown 9xxx instruction
$D04    $2CFC   CALL     $CFC            ; Call subroutine at CFC
$D06    $5075   UNKNOWN  $5075           ; Unknown 5xxx instruction
$D08    $9B65   UNKNOWN  $9B65           ; Unknown 9xxx instruction
$D0A    $F63D   UNKNOWN  F63D            ; Unknown Fxxx instruction
$D0C    $FF8A   UNKNOWN  FF8A            ; Unknown Fxxx instruction
$D0E    $9F5B   UNKNOWN  $9F5B           ; Unknown 9xxx instruction
$D10    $BB5B   JP       V0, $B5B        ; Jump to V0 + B5B
$D12    $220D   CALL     $20D            ; Call subroutine at 20D
$D14    $9F66   UNKNOWN  $9F66           ; Unknown 9xxx instruction
$D16    $F848   UNKNOWN  F848            ; Unknown Fxxx instruction
$D18    $10AF   JP       $0AF            ; Jump to 0AF
$D1A    $2FDA   CALL     $FDA            ; Call subroutine at FDA
$D1C    $4F4B   SNE      VF, #4B         ; Skip if VF != 75
$D1E    $89E3   XOR      V9, VE          ; V9 ^= VE
$D20    $1081   JP       $081            ; Jump to 081
$D22    $1CF1   JP       $CF1            ; Jump to CF1
$D24    $2770   CALL     $770            ; Call subroutine at 770
$D26    $35EF   SE       V5, #EF         ; Skip if V5 == 239
$D28    $DEC4   DRW      VE, VC, #4      ; Draw 4-byte sprite at VE, VC
$D2A    $3A5F   SE       VA, #5F         ; Skip if VA == 95
$D2C    $C0F5   RND      V0, #F5         ; V0 = random & F5
$D2E    $61F7   LD       V1, #F7         ; Load 247 into V1
$D30    $4DA0   SNE      VD, #A0         ; Skip if VD != 160
$D32    $5838   UNKNOWN  $5838           ; Unknown 5xxx instruction
$D34    $DC8B   DRW      VC, V8, #B      ; Draw 11-byte sprite at VC, V8
$D36    $0C3E   SYS      $C3E            ; System call to C3E
$D38    $A868   LD       I, $868         ; Load 868 into I
$D3A    $D349   DRW      V3, V4, #9      ; Draw 9-byte sprite at V3, V4
$D3C    $485A   SNE      V8, #5A         ; Skip if V8 != 90
$D3E    $F002   UNKNOWN  F002            ; Unknown Fxxx instruction
$D40    $7662   ADD      V6, #62         ; Add 98 to V6
$D42    $6E4F   LD       VE, #4F         ; Load 79 into VE
$D44    $0DA7   SYS      $DA7            ; System call to DA7
$D46    $E22E   UNKNOWN  $E22E           ; Unknown Exxx instruction
$D48    $1733   JP       $733            ; Jump to 733
$D4A    $4A17   SNE      VA, #17         ; Skip if VA != 23
$D4C    $D4FF   DRW      V4, VF, #F      ; Draw 15-byte sprite at V4, VF
$D4E    $D90E   DRW      V9, V0, #E      ; Draw 14-byte sprite at V9, V0
$D50    $0CC6   SYS      $CC6            ; System call to CC6
$D52    $242C   CALL     $42C            ; Call subroutine at 42C
$D54    $326C   SE       V2, #6C         ; Skip if V2 == 108
$D56    $4B06   SNE      VB, #06         ; Skip if VB != 6
$D58    $1CE3   JP       $CE3            ; Jump to CE3
$D5A    $5126   UNKNOWN  $5126           ; Unknown 5xxx instruction
$D5C    $34D6   SE       V4, #D6         ; Skip if V4 == 214
$D5E    $DD9B   DRW      VD, V9, #B      ; Draw 11-byte sprite at VD, V9
$D60    $C96B   RND      V9, #6B         ; V9 = random & 6B
$D62    $640A   LD       V4, #0A         ; Load 10 into V4
$D64    $ACF4   LD       I, $CF4         ; Load CF4 into I
$D66    $1C3D   JP       $C3D            ; Jump to C3D
$D68    $4EC0   SNE      VE, #C0         ; Skip if VE != 192
$D6A    $F77B   UNKNOWN  F77B            ; Unknown Fxxx instruction
$D6C    $0B1E   SYS      $B1E            ; System call to B1E
$D6E    $350D   SE       V5, #0D         ; Skip if V5 == 13
$D70    $0186   SYS      $186            ; System call to 186
$D72    $7276   ADD      V2, #76         ; Add 118 to V2
$D74    $CE73   RND      VE, #73         ; VE = random & 73
$D76    $0C4B   SYS      $C4B            ; System call to C4B
$D78    $E1F9   UNKNOWN  $E1F9           ; Unknown Exxx instruction
$D7A    $E37E   UNKNOWN  $E37E           ; Unknown Exxx instruction
$D7C    $B622   JP       V0, $622        ; Jump to V0 + 622
$D7E    $FBE9   UNKNOWN  FBE9            ; Unknown Fxxx instruction
$D80    $0F30   SYS      $F30            ; System call to F30
$D82    $DE4B   DRW      VE, V4, #B      ; Draw 11-byte sprite at VE, V4
$D84    $6FB2   LD       VF, #B2         ; Load 178 into VF
$D86    $3BA3   SE       VB, #A3         ; Skip if VB == 163
$D88    $0570   SYS      $570            ; System call to 570
$D8A    $2510   CALL     $510            ; Call subroutine at 510
$D8C    $E297   UNKNOWN  $E297           ; Unknown Exxx instruction
$D8E    $C2AD   RND      V2, #AD         ; V2 = random & AD
$D90    $2875   CALL     $875            ; Call subroutine at 875
$D92    $4DE4   SNE      VD, #E4         ; Skip if VD != 228
$D94    $06F4   SYS      $6F4            ; System call to 6F4
$D96    $EF4E   UNKNOWN  $EF4E           ; Unknown Exxx instruction
$D98    $4441   SNE      V4, #41         ; Skip if V4 != 65
$D9A    $D4D9   DRW      V4, VD, #9      ; Draw 9-byte sprite at V4, VD
$D9C    $43CD   SNE      V3, #CD         ; Skip if V3 != 205
$D9E    $A870   LD       I, $870         ; Load 870 into I
$DA0    $B44E   JP       V0, $44E        ; Jump to V0 + 44E
$DA2    $86B4   ADD      V6, VB          ; V6 += VB, VF = carry
$DA4    $28CB   CALL     $8CB            ; Call subroutine at 8CB
$DA6    $0F01   SYS      $F01            ; System call to F01
$DA8    $56C8   UNKNOWN  $56C8           ; Unknown 5xxx instruction
$DAA    $2469   CALL     $469            ; Call subroutine at 469
$DAC    $ED0B   UNKNOWN  $ED0B           ; Unknown Exxx instruction
$DAE    $A174   LD       I, $174         ; Load 174 into I
$DB0    $4F9E   SNE      VF, #9E         ; Skip if VF != 158
$DB2    $7A71   ADD      VA, #71         ; Add 113 to VA
$DB4    $953F   UNKNOWN  $953F           ; Unknown 9xxx instruction
$DB6    $AFC1   LD       I, $FC1         ; Load FC1 into I
$DB8    $328F   SE       V2, #8F         ; Skip if V2 == 143
$DBA    $E4C7   UNKNOWN  $E4C7           ; Unknown Exxx instruction
$DBC    $7110   ADD      V1, #10         ; Add 16 to V1
$DBE    $9455   UNKNOWN  $9455           ; Unknown 9xxx instruction
$DC0    $6BE6   LD       VB, #E6         ; Load 230 into VB
$DC2    $CF30   RND      VF, #30         ; VF = random & 30
$DC4    $39CB   SE       V9, #CB         ; Skip if V9 == 203
$DC6    $7DFB   ADD      VD, #FB         ; Add 251 to VD
$DC8    $A380   LD       I, $380         ; Load 380 into I
$DCA    $ECAF   UNKNOWN  $ECAF           ; Unknown Exxx instruction
$DCC    $3494   SE       V4, #94         ; Skip if V4 == 148
$DCE    $099F   SYS      $99F            ; System call to 99F
$DD0    $B936   JP       V0, $936        ; Jump to V0 + 936
$DD2    $AD93   LD       I, $D93         ; Load D93 into I
$DD4    $6FC2   LD       VF, #C2         ; Load 194 into VF
$DD6    $AC49   LD       I, $C49         ; Load C49 into I
$DD8    $9B9C   UNKNOWN  $9B9C           ; Unknown 9xxx instruction
$DDA    $1008   JP       $008            ; Jump to 008
$DDC    $51E1   UNKNOWN  $51E1           ; Unknown 5xxx instruction
$DDE    $9926   UNKNOWN  $9926           ; Unknown 9xxx instruction
$DE0    $8D2A   UNKNOWN  8D2A            ; Unknown 8xxx instruction
$DE2    $1AA6   JP       $AA6            ; Jump to AA6
$DE4    $8A4F   UNKNOWN  8A4F            ; Unknown 8xxx instruction
$DE6    $1123   JP       $123            ; Jump to 123
$DE8    $137E   JP       $37E            ; Jump to 37E
$DEA    $C217   RND      V2, #17         ; V2 = random & 17
$DEC    $6435   LD       V4, #35         ; Load 53 into V4
$DEE    $DD8A   DRW      VD, V8, #A      ; Draw 10-byte sprite at VD, V8
$DF0    $1906   JP       $906            ; Jump to 906
$DF2    $FCAC   UNKNOWN  FCAC            ; Unknown Fxxx instruction
$DF4    $4AEF   SNE      VA, #EF         ; Skip if VA != 239
$DF6    $F4C3   UNKNOWN  F4C3            ; Unknown Fxxx instruction
$DF8    $3E27   SE       VE, #27         ; Skip if VE == 39
$DFA    $C504   RND      V5, #04         ; V5 = random & 04
$DFC    $D237   DRW      V2, V3, #7      ; Draw 7-byte sprite at V2, V3
$DFE    $14D9   JP       $4D9            ; Jump to 4D9
$E00    $C921   RND      V9, #21         ; V9 = random & 21
$E02    $F356   UNKNOWN  F356            ; Unknown Fxxx instruction
$E04    $C225   RND      V2, #25         ; V2 = random & 25
$E06    $A474   LD       I, $474         ; Load 474 into I
$E08    $9F71   UNKNOWN  $9F71           ; Unknown 9xxx instruction
$E0A    $F0F2   UNKNOWN  F0F2            ; Unknown Fxxx instruction
$E0C    $3C76   SE       VC, #76         ; Skip if VC == 118
$E0E    $34E7   SE       V4, #E7         ; Skip if V4 == 231
$E10    $C8F9   RND      V8, #F9         ; V8 = random & F9
$E12    $A664   LD       I, $664         ; Load 664 into I
$E14    $6D16   LD       VD, #16         ; Load 22 into VD
$E16    $8773   XOR      V7, V7          ; V7 ^= V7
$E18    $CF25   RND      VF, #25         ; VF = random & 25
$E1A    $C486   RND      V4, #86         ; V4 = random & 86
$E1C    $CF9A   RND      VF, #9A         ; VF = random & 9A
$E1E    $0D5D   SYS      $D5D            ; System call to D5D
$E20    $4E52   SNE      VE, #52         ; Skip if VE != 82
$E22    $D4CE   DRW      V4, VC, #E      ; Draw 14-byte sprite at V4, VC
$E24    $5164   UNKNOWN  $5164           ; Unknown 5xxx instruction
$E26    $8E22   AND      VE, V2          ; VE &= V2
$E28    $7C94   ADD      VC, #94         ; Add 148 to VC
$E2A    $EE1C   UNKNOWN  $EE1C           ; Unknown Exxx instruction
$E2C    $E3C5   UNKNOWN  $E3C5           ; Unknown Exxx instruction
$E2E    $9B06   UNKNOWN  $9B06           ; Unknown 9xxx instruction
$E30    $E9F9   UNKNOWN  $E9F9           ; Unknown Exxx instruction
$E32    $1595   JP       $595            ; Jump to 595
$E34    $B510   JP       V0, $510        ; Jump to V0 + 510
$E36    $85AA   UNKNOWN  85AA            ; Unknown 8xxx instruction
$E38    $29BD   CALL     $9BD            ; Call subroutine at 9BD
$E3A    $D6DE   DRW      V6, VD, #E      ; Draw 14-byte sprite at V6, VD
$E3C    $746F   ADD      V4, #6F         ; Add 111 to V4
$E3E    $CAA4   RND      VA, #A4         ; VA = random & A4
$E40    $20C0   CALL     $0C0            ; Call subroutine at 0C0
$E42    $1289   JP       $289            ; Jump to 289
$E44    $72C0   ADD      V2, #C0         ; Add 192 to V2
$E46    $AD84   LD       I, $D84         ; Load D84 into I
$E48    $BDD1   JP       V0, $DD1        ; Jump to V0 + DD1
$E4A    $4EF2   SNE      VE, #F2         ; Skip if VE != 242
$E4C    $1329   JP       $329            ; Jump to 329
$E4E    $6FB7   LD       VF, #B7         ; Load 183 into VF
$E50    $A60E   LD       I, $60E         ; Load 60E into I
$E52    $627A   LD       V2, #7A         ; Load 122 into V2
$E54    $C7F3   RND      V7, #F3         ; V7 = random & F3
$E56    $A6A1   LD       I, $6A1         ; Load 6A1 into I
$E58    $8402   AND      V4, V0          ; V4 &= V0
$E5A    $4B7B   SNE      VB, #7B         ; Skip if VB != 123
$E5C    $7E18   ADD      VE, #18         ; Add 24 to VE
$E5E    $3B1F   SE       VB, #1F         ; Skip if VB == 31
$E60    $3D87   SE       VD, #87         ; Skip if VD == 135
$E62    $32B0   SE       V2, #B0         ; Skip if V2 == 176
$E64    $4F1B   SNE      VF, #1B         ; Skip if VF != 27
$E66    $48BA   SNE      V8, #BA         ; Skip if V8 != 186
$E68    $BBB6   JP       V0, $BB6        ; Jump to V0 + BB6
$E6A    $54FD   UNKNOWN  $54FD           ; Unknown 5xxx instruction
$E6C    $93FC   UNKNOWN  $93FC           ; Unknown 9xxx instruction
$E6E    $1EA1   JP       $EA1            ; Jump to EA1
$E70    $DA3F   DRW      VA, V3, #F      ; Draw 15-byte sprite at VA, V3
$E72    $7C95   ADD      VC, #95         ; Add 149 to VC
$E74    $1F46   JP       $F46            ; Jump to F46
$E76    $C69B   RND      V6, #9B         ; V6 = random & 9B
$E78    $3742   SE       V7, #42         ; Skip if V7 == 66
$E7A    $2FC7   CALL     $FC7            ; Call subroutine at FC7
$E7C    $AD08   LD       I, $D08         ; Load D08 into I
$E7E    $AA38   LD       I, $A38         ; Load A38 into I
$E80    $1A21   JP       $A21            ; Jump to A21
$E82    $2EE6   CALL     $EE6            ; Call subroutine at EE6
$E84    $F747   UNKNOWN  F747            ; Unknown Fxxx instruction
$E86    $1543   JP       $543            ; Jump to 543
$E88    $9725   UNKNOWN  $9725           ; Unknown 9xxx instruction
$E8A    $C79A   RND      V7, #9A         ; V7 = random & 9A
$E8C    $2CE8   CALL     $CE8            ; Call subroutine at CE8
$E8E    $23A8   CALL     $3A8            ; Call subroutine at 3A8
$E90    $D996   DRW      V9, V9, #6      ; Draw 6-byte sprite at V9, V9
$E92    $EFD2   UNKNOWN  $EFD2           ; Unknown Exxx instruction
$E94    $FCA1   UNKNOWN  FCA1            ; Unknown Fxxx instruction
$E96    $2969   CALL     $969            ; Call subroutine at 969
$E98    $CF06   RND      VF, #06         ; VF = random & 06
$E9A    $576A   UNKNOWN  $576A           ; Unknown 5xxx instruction
$E9C    $A1CA   LD       I, $1CA         ; Load 1CA into I
$E9E    $4F3E   SNE      VF, #3E         ; Skip if VF != 62
$EA0    $2017   CALL     $017            ; Call subroutine at 017
$EA2    $383E   SE       V8, #3E         ; Skip if V8 == 62
$EA4    $FEF5   UNKNOWN  FEF5            ; Unknown Fxxx instruction
$EA6    $3B43   SE       VB, #43         ; Skip if VB == 67
$EA8    $3099   SE       V0, #99         ; Skip if V0 == 153
$EAA    $D74F   DRW      V7, V4, #F      ; Draw 15-byte sprite at V7, V4
$EAC    $CC36   RND      VC, #36         ; VC = random & 36
$EAE    $D887   DRW      V8, V8, #7      ; Draw 7-byte sprite at V8, V8
$EB0    $44E9   SNE      V4, #E9         ; Skip if V4 != 233
$EB2    $3031   SE       V0, #31         ; Skip if V0 == 49
$EB4    $BB0A   JP       V0, $B0A        ; Jump to V0 + B0A
$EB6    $911E   UNKNOWN  $911E           ; Unknown 9xxx instruction
$EB8    $5A18   UNKNOWN  $5A18           ; Unknown 5xxx instruction
$EBA    $F5E4   UNKNOWN  F5E4            ; Unknown Fxxx instruction
$EBC    $B24E   JP       V0, $24E        ; Jump to V0 + 24E
$EBE    $5911   UNKNOWN  $5911           ; Unknown 5xxx instruction
$EC0    $5D3E   UNKNOWN  $5D3E           ; Unknown 5xxx instruction
$EC2    $0363   SYS      $363            ; System call to 363
$EC4    $D56C   DRW      V5, V6, #C      ; Draw 12-byte sprite at V5, V6
$EC6    $3BCA   SE       VB, #CA         ; Skip if VB == 202
$EC8    $EF4D   UNKNOWN  $EF4D           ; Unknown Exxx instruction
$ECA    $15A7   JP       $5A7            ; Jump to 5A7
$ECC    $FF59   UNKNOWN  FF59            ; Unknown Fxxx instruction
$ECE    $3817   SE       V8, #17         ; Skip if V8 == 23
$ED0    $FD4C   UNKNOWN  FD4C            ; Unknown Fxxx instruction
$ED2    $B64E   JP       V0, $64E        ; Jump to V0 + 64E
$ED4    $B084   JP       V0, $084        ; Jump to V0 + 084
$ED6    $0E8A   SYS      $E8A            ; System call to E8A
$ED8    $C404   RND      V4, #04         ; V4 = random & 04
$EDA    $9BFF   UNKNOWN  $9BFF           ; Unknown 9xxx instruction
$EDC    $6C20   LD       VC, #20         ; Load 32 into VC
$EDE    $99A7   UNKNOWN  $99A7           ; Unknown 9xxx instruction
$EE0    $CF3D   RND      VF, #3D         ; VF = random & 3D
$EE2    $70AD   ADD      V0, #AD         ; Add 173 to V0
$EE4    $53A6   UNKNOWN  $53A6           ; Unknown 5xxx instruction
$EE6    $C358   RND      V3, #58         ; V3 = random & 58
$EE8    $3A41   SE       VA, #41         ; Skip if VA == 65
$EEA    $D77B   DRW      V7, V7, #B      ; Draw 11-byte sprite at V7, V7
$EEC    $4406   SNE      V4, #06         ; Skip if V4 != 6
$EEE    $C7E7   RND      V7, #E7         ; V7 = random & E7
$EF0    $9DBB   UNKNOWN  $9DBB           ; Unknown 9xxx instruction
$EF2    $F948   UNKNOWN  F948            ; Unknown Fxxx instruction
$EF4    $C822   RND      V8, #22         ; V8 = random & 22
$EF6    $D4E0   DRW      V4, VE, #0      ; Draw 0-byte sprite at V4, VE
$EF8    $1B06   JP       $B06            ; Jump to B06
$EFA    $F162   UNKNOWN  F162            ; Unknown Fxxx instruction
$EFC    $C4CC   RND      V4, #CC         ; V4 = random & CC
$EFE    $0367   SYS      $367            ; System call to 367
$F00    $E351   UNKNOWN  $E351           ; Unknown Exxx instruction
$F02    $24A8   CALL     $4A8            ; Call subroutine at 4A8
$F04    $2B4A   CALL     $B4A            ; Call subroutine at B4A
$F06    $DB65   DRW      VB, V6, #5      ; Draw 5-byte sprite at VB, V6
$F08    $1FAD   JP       $FAD            ; Jump to FAD
$F0A    $3533   SE       V5, #33         ; Skip if V5 == 51
$F0C    $FFBD   UNKNOWN  FFBD            ; Unknown Fxxx instruction
$F0E    $FC3A   UNKNOWN  FC3A            ; Unknown Fxxx instruction
$F10    $A36D   LD       I, $36D         ; Load 36D into I
$F12    $FDA1   UNKNOWN  FDA1            ; Unknown Fxxx instruction
$F14    $7ACC   ADD      VA, #CC         ; Add 204 to VA
$F16    $5141   UNKNOWN  $5141           ; Unknown 5xxx instruction
$F18    $B017   JP       V0, $017        ; Jump to V0 + 017
$F1A    $5557   UNKNOWN  $5557           ; Unknown 5xxx instruction
$F1C    $1E64   JP       $E64            ; Jump to E64
$F1E    $F633   LD       B, V6           ; Store BCD of V6 at I, I+1, I+2
$F20    $29B9   CALL     $9B9            ; Call subroutine at 9B9
$F22    $0D7B   SYS      $D7B            ; System call to D7B
$F24    $8490   LD       V4, V9          ; V4 = V9
$F26    $418B   SNE      V1, #8B         ; Skip if V1 != 139
$F28    $34DF   SE       V4, #DF         ; Skip if V4 == 223
$F2A    $EF09   UNKNOWN  $EF09           ; Unknown Exxx instruction
$F2C    $233A   CALL     $33A            ; Call subroutine at 33A
$F2E    $D682   DRW      V6, V8, #2      ; Draw 2-byte sprite at V6, V8
$F30    $840A   UNKNOWN  840A            ; Unknown 8xxx instruction
$F32    $0D15   SYS      $D15            ; System call to D15
$F34    $316D   SE       V1, #6D         ; Skip if V1 == 109
$F36    $75D5   ADD      V5, #D5         ; Add 213 to V5
$F38    $80D7   SUBN     V0, VD          ; V0 = VD - V0, VF = !borrow
$F3A    $B902   JP       V0, $902        ; Jump to V0 + 902
$F3C    $FC18   LD       ST, VC          ; Sound timer = VC
$F3E    $5A65   UNKNOWN  $5A65           ; Unknown 5xxx instruction
$F40    $C554   RND      V5, #54         ; V5 = random & 54
$F42    $EDD7   UNKNOWN  $EDD7           ; Unknown Exxx instruction
$F44    $00E2   SYS      $0E2            ; System call to 0E2
$F46    $AC24   LD       I, $C24         ; Load C24 into I
$F48    $6796   LD       V7, #96         ; Load 150 into V7
$F4A    $1451   JP       $451            ; Jump to 451
$F4C    $1810   JP       $810            ; Jump to 810
$F4E    $FD2F   UNKNOWN  FD2F            ; Unknown Fxxx instruction
$F50    $696A   LD       V9, #6A         ; Load 106 into V9
$F52    $1F4C   JP       $F4C            ; Jump to F4C
$F54    $07E7   SYS      $7E7            ; System call to 7E7
$F56    $E928   UNKNOWN  $E928           ; Unknown Exxx instruction
$F58    $4B24   SNE      VB, #24         ; Skip if VB != 36
$F5A    $27BA   CALL     $7BA            ; Call subroutine at 7BA
$F5C    $8F88   UNKNOWN  8F88            ; Unknown 8xxx instruction
$F5E    $75B7   ADD      V5, #B7         ; Add 183 to V5
$F60    $2F20   CALL     $F20            ; Call subroutine at F20
$F62    $8844   ADD      V8, V4          ; V8 += V4, VF = carry
$F64    $E64C   UNKNOWN  $E64C           ; Unknown Exxx instruction
$F66    $E6CC   UNKNOWN  $E6CC           ; Unknown Exxx instruction
$F68    $B978   JP       V0, $978        ; Jump to V0 + 978
$F6A    $3FB2   SE       VF, #B2         ; Skip if VF == 178
$F6C    $9C52   UNKNOWN  $9C52           ; Unknown 9xxx instruction
$F6E    $5E3F   UNKNOWN  $5E3F           ; Unknown 5xxx instruction
$F70    $FFAE   UNKNOWN  FFAE            ; Unknown Fxxx instruction
$F72    $2681   CALL     $681            ; Call subroutine at 681
$F74    $30D3   SE       V0, #D3         ; Skip if V0 == 211
$F76    $DDC7   DRW      VD, VC, #7      ; Draw 7-byte sprite at VD, VC
$F78    $1BBD   JP       $BBD            ; Jump to BBD
$F7A    $DBA2   DRW      VB, VA, #2      ; Draw 2-byte sprite at VB, VA
$F7C    $A59F   LD       I, $59F         ; Load 59F into I
$F7E    $6D4A   LD       VD, #4A         ; Load 74 into VD
$F80    $0FAF   SYS      $FAF            ; System call to FAF
$F82    $CF73   RND      VF, #73         ; VF = random & 73
$F84    $9C92   UNKNOWN  $9C92           ; Unknown 9xxx instruction
$F86    $7895   ADD      V8, #95         ; Add 149 to V8
$F88    $2F5D   CALL     $F5D            ; Call subroutine at F5D
$F8A    $6708   LD       V7, #08         ; Load 8 into V7
$F8C    $C148   RND      V1, #48         ; V1 = random & 48
$F8E    $F53F   UNKNOWN  F53F            ; Unknown Fxxx instruction
$F90    $2CBC   CALL     $CBC            ; Call subroutine at CBC
$F92    $E33D   UNKNOWN  $E33D           ; Unknown Exxx instruction
$F94    $CCE0   RND      VC, #E0         ; VC = random & E0
$F96    $7858   ADD      V8, #58         ; Add 88 to V8
$F98    $DAEE   DRW      VA, VE, #E      ; Draw 14-byte sprite at VA, VE
$F9A    $1299   JP       $299            ; Jump to 299
$F9C    $51F5   UNKNOWN  $51F5           ; Unknown 5xxx instruction
$F9E    $5F4F   UNKNOWN  $5F4F           ; Unknown 5xxx instruction
$FA0    $7598   ADD      V5, #98         ; Add 152 to V5
$FA2    $E4C0   UNKNOWN  $E4C0           ; Unknown Exxx instruction
$FA4    $2872   CALL     $872            ; Call subroutine at 872
$FA6    $D2D5   DRW      V2, VD, #5      ; Draw 5-byte sprite at V2, VD
$FA8    $0973   SYS      $973            ; System call to 973
$FAA    $EDDE   UNKNOWN  $EDDE           ; Unknown Exxx instruction
$FAC    $4696   SNE      V6, #96         ; Skip if V6 != 150
$FAE    $FC2A   UNKNOWN  FC2A            ; Unknown Fxxx instruction
$FB0    $FDC5   UNKNOWN  FDC5            ; Unknown Fxxx instruction
$FB2    $DF8A   DRW      VF, V8, #A      ; Draw 10-byte sprite at VF, V8
$FB4    $795F   ADD      V9, #5F         ; Add 95 to V9
$FB6    $2DEB   CALL     $DEB            ; Call subroutine at DEB
$FB8    $0EB6   SYS      $EB6            ; System call to EB6
$FBA    $85BA   UNKNOWN  85BA            ; Unknown 8xxx instruction
$FBC    $98E4   UNKNOWN  $98E4           ; Unknown 9xxx instruction
$FBE    $8372   AND      V3, V7          ; V3 &= V7
$FC0    $1E74   JP       $E74            ; Jump to E74
$FC2    $59F9   UNKNOWN  $59F9           ; Unknown 5xxx instruction
$FC4    $3827   SE       V8, #27         ; Skip if V8 == 39
$FC6    $A88F   LD       I, $88F         ; Load 88F into I
$FC8    $0602   SYS      $602            ; System call to 602
$FCA    $34BE   SE       V4, #BE         ; Skip if V4 == 190
$FCC    $2D11   CALL     $D11            ; Call subroutine at D11
$FCE    $A5AB   LD       I, $5AB         ; Load 5AB into I
$FD0    $8884   ADD      V8, V8          ; V8 += V8, VF = carry
$FD2    $E464   UNKNOWN  $E464           ; Unknown Exxx instruction
$FD4    $DDC4   DRW      VD, VC, #4      ; Draw 4-byte sprite at VD, VC
$FD6    $157F   JP       $57F            ; Jump to 57F
$FD8    $6A12   LD       VA, #12         ; Load 18 into VA
$FDA    $4A76   SNE      VA, #76         ; Skip if VA != 118
$FDC    $1627   JP       $627            ; Jump to 627
$FDE    $B4F8   JP       V0, $4F8        ; Jump to V0 + 4F8
$FE0    $C81D   RND      V8, #1D         ; V8 = random & 1D
$FE2    $A779   LD       I, $779         ; Load 779 into I
$FE4    $0BF0   SYS      $BF0            ; System call to BF0
$FE6    $F134   UNKNOWN  F134            ; Unknown Fxxx instruction
$FE8    $2397   CALL     $397            ; Call subroutine at 397
$FEA    $B665   JP       V0, $665        ; Jump to V0 + 665
$FEC    $3139   SE       V1, #39         ; Skip if V1 == 57
$FEE    $A3A6   LD       I, $3A6         ; Load 3A6 into I
$FF0    $C014   RND      V0, #14         ; V0 = random & 14
$FF2    $337C   SE       V3, #7C         ; Skip if V3 == 124
$FF4    $B6E3   JP       V0, $6E3        ; Jump to V0 + 6E3
$FF6    $D505   DRW      V5, V0, #5      ; Draw 5-byte sprite at V5, V0
$FF8    $865A   UNKNOWN  865A            ; Unknown 8xxx instruction
$FFA    $2E9E   CALL     $E9E            ; Call subroutine at E9E
$FFC    $59EE   UNKNOWN  $59EE           ; Unknown 5xxx instruction
$FFE    $052E   SYS      $52E            ; System call to 52E

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 443 (24.7%)
  LD      : 230 (12.8%)
  JP      : 217 (12.1%)
  RND     : 140 ( 7.8%)
  DRW     : 128 ( 7.1%)
  SYS     : 126 ( 7.0%)
  SE      : 123 ( 6.9%)
  CALL    : 113 ( 6.3%)
  ADD     : 108 ( 6.0%)
  SNE     : 108 ( 6.0%)
  AND     :  11 ( 0.6%)
  XOR     :   9 ( 0.5%)
  SUBN    :   8 ( 0.4%)
  OR      :   7 ( 0.4%)
  SUB     :   7 ( 0.4%)
  SHR     :   7 ( 0.4%)
  SHL     :   5 ( 0.3%)
  SKP     :   1 ( 0.1%)

Memory Operations: 338 (18.9%)
Arithmetic Operations: 150 (8.4%)
