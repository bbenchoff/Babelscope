
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B4824D01_I28256_C1001_7eb10c9d97bb.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 4824
Instance: 28256
Direction: ascending
Final Array: [1, 1, 6, 18, 20, 42, 118, 123]
Operations: R:0 W:1 C:57 S:2

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 104
Sort Array References:
  $214: LD I, $E05 ; Load E05 into I
  $246: LD I, $018 ; Load 018 into I
  $2A6: LD I, $05E ; Load 05E into I
  $2E6: ADD I, VD ; I ADDRESS MANIPULATION
  $308: LD I, $BA8 ; Load BA8 into I
  $314: LD I, $FCB ; Load FCB into I
  $32A: LD I, $10E ; Load 10E into I
  $32E: LD I, $0C2 ; Load 0C2 into I
  $346: LD I, $D97 ; Load D97 into I
  $35C: LD I, $4EC ; Load 4EC into I
  $37C: LD I, $B8A ; Load B8A into I
  $37E: LD I, $DBA ; Load DBA into I
  $400: LD I, $2D5 ; Load 2D5 into I
  $41C: LD I, $EE8 ; Load EE8 into I
  $478: LD I, $C0C ; Load C0C into I
  $480: LD I, $24D ; Load 24D into I
  $498: LD I, $A2B ; Load A2B into I
  $4C6: LD I, $552 ; Load 552 into I
  $4D0: LD I, $EFB ; Load EFB into I
  $4FE: LD I, $E38 ; Load E38 into I
  $500: LD I, $F4F ; Load F4F into I
  $51C: LD I, $142 ; Load 142 into I
  $57A: LD I, $BE5 ; Load BE5 into I
  $58A: LD I, $A67 ; Load A67 into I
  $590: LD I, $85D ; Load 85D into I
  $5E6: LD I, $5B0 ; Load 5B0 into I
  $62C: LD I, $0C5 ; Load 0C5 into I
  $648: LD I, $1D5 ; Load 1D5 into I
  $67E: LD I, $440 ; Load 440 into I
  $680: LD I, $0AB ; Load 0AB into I
  $682: LD I, $5CC ; Load 5CC into I
  $684: LD I, $621 ; Load 621 into I
  $70C: LD I, $BCC ; Load BCC into I
  $714: LD I, $8D9 ; Load 8D9 into I
  $746: LD I, $360 ; Load 360 into I
  $768: LD I, $A97 ; Load A97 into I
  $76C: LD I, $272 ; Load 272 into I
  $778: LD I, $163 ; Load 163 into I
  $78C: LD I, $1AF ; Load 1AF into I
  $796: LD I, $B67 ; Load B67 into I
  $79A: LD I, $B33 ; Load B33 into I
  $7A0: LD I, $2D5 ; Load 2D5 into I
  $7C6: LD I, $1A5 ; Load 1A5 into I
  $82C: LD I, $D3E ; Load D3E into I
  $856: LD I, $07A ; Load 07A into I
  $876: LD I, $41F ; Load 41F into I
  $87C: LD I, $B70 ; Load B70 into I
  $8B8: LD I, $178 ; Load 178 into I
  $8BA: LD I, $188 ; Load 188 into I
  $8C8: LD I, $3A4 ; Load 3A4 into I
  $8D8: LD I, $E50 ; Load E50 into I
  $936: LD I, $B18 ; Load B18 into I
  $954: LD I, $E82 ; Load E82 into I
  $98E: LD I, $61D ; Load 61D into I
  $9C6: LD I, $D73 ; Load D73 into I
  $9FA: LD I, $5CB ; Load 5CB into I
  $A4A: LD I, $893 ; Load 893 into I
  $A4C: LD I, $915 ; Load 915 into I
  $A66: LD I, $455 ; Load 455 into I
  $A82: LD I, $167 ; Load 167 into I
  $A8C: LD I, $1B8 ; Load 1B8 into I
  $A96: LD I, $06F ; Load 06F into I
  $ABC: LD I, $8AA ; Load 8AA into I
  $AC0: LD I, $B91 ; Load B91 into I
  $AE2: LD I, $E82 ; Load E82 into I
  $B32: LD I, $8C8 ; Load 8C8 into I
  $B84: LD I, $881 ; Load 881 into I
  $BC4: LD I, $A4F ; Load A4F into I
  $BCE: LD I, $3FD ; Load 3FD into I
  $BD2: LD I, $141 ; Load 141 into I
  $C10: LD I, $726 ; Load 726 into I
  $C1C: LD I, $A31 ; Load A31 into I
  $C20: LD I, $46A ; Load 46A into I
  $C2A: LD I, $C08 ; Load C08 into I
  $C40: LD I, $ADB ; Load ADB into I
  $C6A: LD I, $9F3 ; Load 9F3 into I
  $C9C: LD I, $9B4 ; Load 9B4 into I
  $CD6: LD I, $E6F ; Load E6F into I
  $CDE: LD I, $788 ; Load 788 into I
  $CEA: LD I, $ADC ; Load ADC into I
  $D20: LD I, $ADA ; Load ADA into I
  $D24: LD I, $A42 ; Load A42 into I
  $D38: LD I, $A6D ; Load A6D into I
  $D4E: LD I, $393 ; Load 393 into I
  $D66: LD I, $4E2 ; Load 4E2 into I
  $DBE: LD I, $C3F ; Load C3F into I
  $DE6: LD I, $E6A ; Load E6A into I
  $E0A: LD I, $8E9 ; Load 8E9 into I
  $E18: LD I, $9BC ; Load 9BC into I
  $E2A: LD I, $813 ; Load 813 into I
  $E32: LD I, $387 ; Load 387 into I
  $E50: LD I, $E0F ; Load E0F into I
  $EB0: LD I, $07C ; Load 07C into I
  $EBA: LD I, $778 ; Load 778 into I
  $EC2: LD I, $248 ; Load 248 into I
  $ED6: LD I, $C40 ; Load C40 into I
  $EF6: LD I, $F76 ; Load F76 into I
  $F12: LD I, $A99 ; Load A99 into I
  $F2C: LD I, $5FC ; Load 5FC into I
  $F38: LD I, $897 ; Load 897 into I
  $F74: LD I, $1C0 ; Load 1C0 into I
  $F88: LD I, $05E ; Load 05E into I
  $FAA: LD I, $DFF ; Load DFF into I
  $FD4: LD I, $954 ; Load 954 into I

CONTROL FLOW ANALYSIS:
Jumps: 250
Calls: 113
Branches: 229
Loops: 155
Loop Structures:
  $278 -> $005 (backward jump)
  $364 -> $027 (backward jump)
  $3A4 -> $184 (backward jump)
  $3AE -> $359 (backward jump)
  $44C -> $2EF (backward jump)
  $49A -> $12A (backward jump)
  $4AE -> $221 (backward jump)
  $4E2 -> $1FA (backward jump)
  $506 -> $1DF (backward jump)
  $524 -> $3B6 (backward jump)
  $52E -> $021 (backward jump)
  $582 -> $00B (backward jump)
  $5C4 -> $10E (backward jump)
  $5EA -> $314 (backward jump)
  $5F2 -> $5CA (backward jump)
  $61C -> $582 (backward jump)
  $61E -> $39D (backward jump)
  $62A -> $594 (backward jump)
  $636 -> $184 (backward jump)
  $652 -> $3BF (backward jump)
  $68A -> $676 (backward jump)
  $6A0 -> $0CB (backward jump)
  $6AA -> $2DE (backward jump)
  $6D6 -> $2D8 (backward jump)
  $6F6 -> $3D1 (backward jump)
  $718 -> $496 (backward jump)
  $75C -> $447 (backward jump)
  $77A -> $22A (backward jump)
  $7CE -> $77C (backward jump)
  $7D6 -> $3D8 (backward jump)
  $7E8 -> $3DD (backward jump)
  $7F2 -> $71E (backward jump)
  $818 -> $5E3 (backward jump)
  $834 -> $1EE (backward jump)
  $842 -> $00E (backward jump)
  $85A -> $84B (backward jump)
  $862 -> $7C6 (backward jump)
  $864 -> $6D9 (backward jump)
  $868 -> $547 (backward jump)
  $890 -> $499 (backward jump)
  $8EA -> $2E3 (backward jump)
  $906 -> $0F0 (backward jump)
  $918 -> $2AB (backward jump)
  $91C -> $2F2 (backward jump)
  $932 -> $324 (backward jump)
  $944 -> $369 (backward jump)
  $94A -> $5A9 (backward jump)
  $96E -> $565 (backward jump)
  $97C -> $620 (backward jump)
  $982 -> $32F (backward jump)
  $99E -> $25C (backward jump)
  $9BC -> $1EE (backward jump)
  $9D0 -> $6D0 (backward jump)
  $9D6 -> $7A2 (backward jump)
  $9E2 -> $424 (backward jump)
  $9E6 -> $4B9 (backward jump)
  $9EC -> $270 (backward jump)
  $A08 -> $70F (backward jump)
  $A0E -> $1E7 (backward jump)
  $A10 -> $104 (backward jump)
  $A1E -> $12D (backward jump)
  $A44 -> $142 (backward jump)
  $A48 -> $55C (backward jump)
  $A7E -> $7E2 (backward jump)
  $A86 -> $3D4 (backward jump)
  $A8E -> $59E (backward jump)
  $A92 -> $5CD (backward jump)
  $AA4 -> $A99 (backward jump)
  $AEE -> $6EA (backward jump)
  $B0E -> $906 (backward jump)
  $B1E -> $201 (backward jump)
  $B20 -> $977 (backward jump)
  $B34 -> $25B (backward jump)
  $B40 -> $248 (backward jump)
  $B4A -> $698 (backward jump)
  $B6C -> $05F (backward jump)
  $B72 -> $68C (backward jump)
  $B94 -> $1CA (backward jump)
  $BAC -> $5DC (backward jump)
  $BB4 -> $B7C (backward jump)
  $BF4 -> $450 (backward jump)
  $C26 -> $545 (backward jump)
  $C2E -> $41F (backward jump)
  $C84 -> $325 (backward jump)
  $C94 -> $665 (backward jump)
  $CA2 -> $3D7 (backward jump)
  $CCA -> $441 (backward jump)
  $CD2 -> $034 (backward jump)
  $CE6 -> $AE5 (backward jump)
  $CE8 -> $2EA (backward jump)
  $CF4 -> $6A1 (backward jump)
  $D00 -> $75F (backward jump)
  $D0E -> $C92 (backward jump)
  $D10 -> $A85 (backward jump)
  $D12 -> $7D5 (backward jump)
  $D36 -> $641 (backward jump)
  $D3C -> $6CB (backward jump)
  $D42 -> $060 (backward jump)
  $D52 -> $815 (backward jump)
  $D56 -> $063 (backward jump)
  $D5A -> $4AE (backward jump)
  $D6C -> $96C (backward jump)
  $D6E -> $39E (backward jump)
  $D7E -> $B4B (backward jump)
  $D8A -> $C7F (backward jump)
  $D98 -> $800 (backward jump)
  $DA0 -> $C17 (backward jump)
  $DAA -> $538 (backward jump)
  $DBC -> $AE0 (backward jump)
  $DC6 -> $2F1 (backward jump)
  $DE4 -> $222 (backward jump)
  $DE8 -> $B0E (backward jump)
  $DEC -> $B49 (backward jump)
  $DF6 -> $A45 (backward jump)
  $E00 -> $9C4 (backward jump)
  $E14 -> $6F4 (backward jump)
  $E36 -> $DF8 (backward jump)
  $E3C -> $17C (backward jump)
  $E54 -> $4B6 (backward jump)
  $E6C -> $7E9 (backward jump)
  $E6E -> $1C6 (backward jump)
  $E70 -> $890 (backward jump)
  $E90 -> $039 (backward jump)
  $E98 -> $0FB (backward jump)
  $E9A -> $52E (backward jump)
  $EA4 -> $0FC (backward jump)
  $EA8 -> $9A8 (backward jump)
  $EB4 -> $37A (backward jump)
  $ED4 -> $0BF (backward jump)
  $ED8 -> $254 (backward jump)
  $EDA -> $8E5 (backward jump)
  $EE4 -> $862 (backward jump)
  $EEC -> $194 (backward jump)
  $EFE -> $675 (backward jump)
  $F16 -> $724 (backward jump)
  $F1E -> $2A4 (backward jump)
  $F28 -> $C0F (backward jump)
  $F46 -> $226 (backward jump)
  $F70 -> $E96 (backward jump)
  $F7A -> $44A (backward jump)
  $F84 -> $4D2 (backward jump)
  $F86 -> $759 (backward jump)
  $F94 -> $C9A (backward jump)
  $F9C -> $2EF (backward jump)
  $F9E -> $8E0 (backward jump)
  $FB4 -> $8DA (backward jump)
  $FB6 -> $C26 (backward jump)
  $FB8 -> $C76 (backward jump)
  $FBC -> $C5A (backward jump)
  $FC2 -> $AFF (backward jump)
  $FCA -> $D88 (backward jump)
  $FCE -> $9DE (backward jump)
  $FD2 -> $EE1 (backward jump)
  $FD8 -> $82E (backward jump)
  $FFC -> $B0B (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $85AE   SHL      V5              ; V5 <<= 1, VF = MSB
$202    $5751   UNKNOWN  $5751           ; Unknown 5xxx instruction
$204    $F813   UNKNOWN  F813            ; Unknown Fxxx instruction
$206    $02FF   SYS      $2FF            ; System call to 2FF
$208    $59B3   UNKNOWN  $59B3           ; Unknown 5xxx instruction
$20A    $1435   JP       $435            ; Jump to 435
$20C    $E581   UNKNOWN  $E581           ; Unknown Exxx instruction
$20E    $5FF2   UNKNOWN  $5FF2           ; Unknown 5xxx instruction
$210    $F906   UNKNOWN  F906            ; Unknown Fxxx instruction
$212    $1592   JP       $592            ; Jump to 592
$214    $AE05   LD       I, $E05         ; Load E05 into I
$216    $BDA8   JP       V0, $DA8        ; Jump to V0 + DA8
$218    $ECBE   UNKNOWN  $ECBE           ; Unknown Exxx instruction
$21A    $C098   RND      V0, #98         ; V0 = random & 98
$21C    $9C3E   UNKNOWN  $9C3E           ; Unknown 9xxx instruction
$21E    $22BC   CALL     $2BC            ; Call subroutine at 2BC
$220    $DBE4   DRW      VB, VE, #4      ; Draw 4-byte sprite at VB, VE
$222    $0F3E   SYS      $F3E            ; System call to F3E
$224    $1EDA   JP       $EDA            ; Jump to EDA
$226    $B4BF   JP       V0, $4BF        ; Jump to V0 + 4BF
$228    $B8DB   JP       V0, $8DB        ; Jump to V0 + 8DB
$22A    $1415   JP       $415            ; Jump to 415
$22C    $C857   RND      V8, #57         ; V8 = random & 57
$22E    $91DC   UNKNOWN  $91DC           ; Unknown 9xxx instruction
$230    $95E1   UNKNOWN  $95E1           ; Unknown 9xxx instruction
$232    $38EF   SE       V8, #EF         ; Skip if V8 == 239
$234    $C086   RND      V0, #86         ; V0 = random & 86
$236    $3F72   SE       VF, #72         ; Skip if VF == 114
$238    $DE60   DRW      VE, V6, #0      ; Draw 0-byte sprite at VE, V6
$23A    $6F9E   LD       VF, #9E         ; Load 158 into VF
$23C    $92A7   UNKNOWN  $92A7           ; Unknown 9xxx instruction
$23E    $9C1B   UNKNOWN  $9C1B           ; Unknown 9xxx instruction
$240    $60CC   LD       V0, #CC         ; Load 204 into V0
$242    $E98B   UNKNOWN  $E98B           ; Unknown Exxx instruction
$244    $062F   SYS      $62F            ; System call to 62F
$246    $A018   LD       I, $018         ; Load 018 into I
$248    $E1C7   UNKNOWN  $E1C7           ; Unknown Exxx instruction
$24A    $085F   SYS      $85F            ; System call to 85F
$24C    $505B   UNKNOWN  $505B           ; Unknown 5xxx instruction
$24E    $2331   CALL     $331            ; Call subroutine at 331
$250    $C596   RND      V5, #96         ; V5 = random & 96
$252    $2D66   CALL     $D66            ; Call subroutine at D66
$254    $C15B   RND      V1, #5B         ; V1 = random & 5B
$256    $9422   UNKNOWN  $9422           ; Unknown 9xxx instruction
$258    $4E9D   SNE      VE, #9D         ; Skip if VE != 157
$25A    $76CB   ADD      V6, #CB         ; Add 203 to V6
$25C    $DB58   DRW      VB, V5, #8      ; Draw 8-byte sprite at VB, V5
$25E    $2AB5   CALL     $AB5            ; Call subroutine at AB5
$260    $CB46   RND      VB, #46         ; VB = random & 46
$262    $CB17   RND      VB, #17         ; VB = random & 17
$264    $3C90   SE       VC, #90         ; Skip if VC == 144
$266    $F6BB   UNKNOWN  F6BB            ; Unknown Fxxx instruction
$268    $32D5   SE       V2, #D5         ; Skip if V2 == 213
$26A    $E37D   UNKNOWN  $E37D           ; Unknown Exxx instruction
$26C    $2C5C   CALL     $C5C            ; Call subroutine at C5C
$26E    $FE93   UNKNOWN  FE93            ; Unknown Fxxx instruction
$270    $1A35   JP       $A35            ; Jump to A35
$272    $8720   LD       V7, V2          ; V7 = V2
$274    $3965   SE       V9, #65         ; Skip if V9 == 101
$276    $44B5   SNE      V4, #B5         ; Skip if V4 != 181
$278    $1005   JP       $005            ; Jump to 005
$27A    $540D   UNKNOWN  $540D           ; Unknown 5xxx instruction
$27C    $09C1   SYS      $9C1            ; System call to 9C1
$27E    $7A49   ADD      VA, #49         ; Add 73 to VA
$280    $B5BB   JP       V0, $5BB        ; Jump to V0 + 5BB
$282    $FA2A   UNKNOWN  FA2A            ; Unknown Fxxx instruction
$284    $7015   ADD      V0, #15         ; Add 21 to V0
$286    $D2DC   DRW      V2, VD, #C      ; Draw 12-byte sprite at V2, VD
$288    $555E   UNKNOWN  $555E           ; Unknown 5xxx instruction
$28A    $C405   RND      V4, #05         ; V4 = random & 05
$28C    $33A1   SE       V3, #A1         ; Skip if V3 == 161
$28E    $69E4   LD       V9, #E4         ; Load 228 into V9
$290    $3766   SE       V7, #66         ; Skip if V7 == 102
$292    $2065   CALL     $065            ; Call subroutine at 065
$294    $F15D   UNKNOWN  F15D            ; Unknown Fxxx instruction
$296    $7D52   ADD      VD, #52         ; Add 82 to VD
$298    $8DE3   XOR      VD, VE          ; VD ^= VE
$29A    $DCAF   DRW      VC, VA, #F      ; Draw 15-byte sprite at VC, VA
$29C    $E2C2   UNKNOWN  $E2C2           ; Unknown Exxx instruction
$29E    $96AF   UNKNOWN  $96AF           ; Unknown 9xxx instruction
$2A0    $BACA   JP       V0, $ACA        ; Jump to V0 + ACA
$2A2    $08E0   SYS      $8E0            ; System call to 8E0
$2A4    $5F99   UNKNOWN  $5F99           ; Unknown 5xxx instruction
$2A6    $A05E   LD       I, $05E         ; Load 05E into I
$2A8    $3ACF   SE       VA, #CF         ; Skip if VA == 207
$2AA    $DCD6   DRW      VC, VD, #6      ; Draw 6-byte sprite at VC, VD
$2AC    $301B   SE       V0, #1B         ; Skip if V0 == 27
$2AE    $5FF4   UNKNOWN  $5FF4           ; Unknown 5xxx instruction
$2B0    $8F06   SHR      VF              ; VF >>= 1, VF = LSB
$2B2    $5FCE   UNKNOWN  $5FCE           ; Unknown 5xxx instruction
$2B4    $3E33   SE       VE, #33         ; Skip if VE == 51
$2B6    $49A8   SNE      V9, #A8         ; Skip if V9 != 168
$2B8    $1F1C   JP       $F1C            ; Jump to F1C
$2BA    $B820   JP       V0, $820        ; Jump to V0 + 820
$2BC    $162E   JP       $62E            ; Jump to 62E
$2BE    $2FE2   CALL     $FE2            ; Call subroutine at FE2
$2C0    $884F   UNKNOWN  884F            ; Unknown 8xxx instruction
$2C2    $4D92   SNE      VD, #92         ; Skip if VD != 146
$2C4    $87D3   XOR      V7, VD          ; V7 ^= VD
$2C6    $68D0   LD       V8, #D0         ; Load 208 into V8
$2C8    $046D   SYS      $46D            ; System call to 46D
$2CA    $4673   SNE      V6, #73         ; Skip if V6 != 115
$2CC    $DB62   DRW      VB, V6, #2      ; Draw 2-byte sprite at VB, V6
$2CE    $FF52   UNKNOWN  FF52            ; Unknown Fxxx instruction
$2D0    $FDD6   UNKNOWN  FDD6            ; Unknown Fxxx instruction
$2D2    $22CC   CALL     $2CC            ; Call subroutine at 2CC
$2D4    $E41E   UNKNOWN  $E41E           ; Unknown Exxx instruction
$2D6    $9070   SNE      V0, V7          ; Skip if V0 != V7
$2D8    $7BBF   ADD      VB, #BF         ; Add 191 to VB
$2DA    $8BD2   AND      VB, VD          ; VB &= VD
$2DC    $8370   LD       V3, V7          ; V3 = V7
$2DE    $9684   UNKNOWN  $9684           ; Unknown 9xxx instruction
$2E0    $5281   UNKNOWN  $5281           ; Unknown 5xxx instruction
$2E2    $8BD6   SHR      VB              ; VB >>= 1, VF = LSB
$2E4    $9075   UNKNOWN  $9075           ; Unknown 9xxx instruction
$2E6    $FD1E   ADD      I, VD           ; I += VD
$2E8    $8C98   UNKNOWN  8C98            ; Unknown 8xxx instruction
$2EA    $DEB3   DRW      VE, VB, #3      ; Draw 3-byte sprite at VE, VB
$2EC    $4969   SNE      V9, #69         ; Skip if V9 != 105
$2EE    $743A   ADD      V4, #3A         ; Add 58 to V4
$2F0    $35C5   SE       V5, #C5         ; Skip if V5 == 197
$2F2    $4117   SNE      V1, #17         ; Skip if V1 != 23
$2F4    $17F6   JP       $7F6            ; Jump to 7F6
$2F6    $412D   SNE      V1, #2D         ; Skip if V1 != 45
$2F8    $DF3B   DRW      VF, V3, #B      ; Draw 11-byte sprite at VF, V3
$2FA    $61DF   LD       V1, #DF         ; Load 223 into V1
$2FC    $0405   SYS      $405            ; System call to 405
$2FE    $918A   UNKNOWN  $918A           ; Unknown 9xxx instruction
$300    $0101   SYS      $101            ; System call to 101
$302    $0612   SYS      $612            ; System call to 612
$304    $142A   JP       $42A            ; Jump to 42A
$306    $767B   ADD      V6, #7B         ; Add 123 to V6
$308    $ABA8   LD       I, $BA8         ; Load BA8 into I
$30A    $3844   SE       V8, #44         ; Skip if V8 == 68
$30C    $3199   SE       V1, #99         ; Skip if V1 == 153
$30E    $9264   UNKNOWN  $9264           ; Unknown 9xxx instruction
$310    $5662   UNKNOWN  $5662           ; Unknown 5xxx instruction
$312    $1770   JP       $770            ; Jump to 770
$314    $AFCB   LD       I, $FCB         ; Load FCB into I
$316    $6796   LD       V7, #96         ; Load 150 into V7
$318    $6287   LD       V2, #87         ; Load 135 into V2
$31A    $F4A9   UNKNOWN  F4A9            ; Unknown Fxxx instruction
$31C    $0FF0   SYS      $FF0            ; System call to FF0
$31E    $D2EA   DRW      V2, VE, #A      ; Draw 10-byte sprite at V2, VE
$320    $1FBB   JP       $FBB            ; Jump to FBB
$322    $85BB   UNKNOWN  85BB            ; Unknown 8xxx instruction
$324    $359D   SE       V5, #9D         ; Skip if V5 == 157
$326    $8890   LD       V8, V9          ; V8 = V9
$328    $62DA   LD       V2, #DA         ; Load 218 into V2
$32A    $A10E   LD       I, $10E         ; Load 10E into I
$32C    $E494   UNKNOWN  $E494           ; Unknown Exxx instruction
$32E    $A0C2   LD       I, $0C2         ; Load 0C2 into I
$330    $3CAC   SE       VC, #AC         ; Skip if VC == 172
$332    $C497   RND      V4, #97         ; V4 = random & 97
$334    $F1C6   UNKNOWN  F1C6            ; Unknown Fxxx instruction
$336    $FB72   UNKNOWN  FB72            ; Unknown Fxxx instruction
$338    $CFCC   RND      VF, #CC         ; VF = random & CC
$33A    $65C2   LD       V5, #C2         ; Load 194 into V5
$33C    $1D5D   JP       $D5D            ; Jump to D5D
$33E    $8B57   SUBN     VB, V5          ; VB = V5 - VB, VF = !borrow
$340    $835E   SHL      V3              ; V3 <<= 1, VF = MSB
$342    $CFD7   RND      VF, #D7         ; VF = random & D7
$344    $D382   DRW      V3, V8, #2      ; Draw 2-byte sprite at V3, V8
$346    $AD97   LD       I, $D97         ; Load D97 into I
$348    $6BA1   LD       VB, #A1         ; Load 161 into VB
$34A    $86F4   ADD      V6, VF          ; V6 += VF, VF = carry
$34C    $3C5B   SE       VC, #5B         ; Skip if VC == 91
$34E    $1756   JP       $756            ; Jump to 756
$350    $4786   SNE      V7, #86         ; Skip if V7 != 134
$352    $438C   SNE      V3, #8C         ; Skip if V3 != 140
$354    $6FE3   LD       VF, #E3         ; Load 227 into VF
$356    $D84C   DRW      V8, V4, #C      ; Draw 12-byte sprite at V8, V4
$358    $59F6   UNKNOWN  $59F6           ; Unknown 5xxx instruction
$35A    $D8B1   DRW      V8, VB, #1      ; Draw 1-byte sprite at V8, VB
$35C    $A4EC   LD       I, $4EC         ; Load 4EC into I
$35E    $1370   JP       $370            ; Jump to 370
$360    $0E20   SYS      $E20            ; System call to E20
$362    $EC49   UNKNOWN  $EC49           ; Unknown Exxx instruction
$364    $B027   JP       V0, $027        ; Jump to V0 + 027
$366    $DE23   DRW      VE, V2, #3      ; Draw 3-byte sprite at VE, V2
$368    $3A7F   SE       VA, #7F         ; Skip if VA == 127
$36A    $D2A3   DRW      V2, VA, #3      ; Draw 3-byte sprite at V2, VA
$36C    $5D8F   UNKNOWN  $5D8F           ; Unknown 5xxx instruction
$36E    $16C1   JP       $6C1            ; Jump to 6C1
$370    $5CE9   UNKNOWN  $5CE9           ; Unknown 5xxx instruction
$372    $B512   JP       V0, $512        ; Jump to V0 + 512
$374    $06D5   SYS      $6D5            ; System call to 6D5
$376    $BA01   JP       V0, $A01        ; Jump to V0 + A01
$378    $D4DA   DRW      V4, VD, #A      ; Draw 10-byte sprite at V4, VD
$37A    $36DF   SE       V6, #DF         ; Skip if V6 == 223
$37C    $AB8A   LD       I, $B8A         ; Load B8A into I
$37E    $ADBA   LD       I, $DBA         ; Load DBA into I
$380    $DBA0   DRW      VB, VA, #0      ; Draw 0-byte sprite at VB, VA
$382    $9564   UNKNOWN  $9564           ; Unknown 9xxx instruction
$384    $3DD8   SE       VD, #D8         ; Skip if VD == 216
$386    $4058   SNE      V0, #58         ; Skip if V0 != 88
$388    $0AC9   SYS      $AC9            ; System call to AC9
$38A    $5C91   UNKNOWN  $5C91           ; Unknown 5xxx instruction
$38C    $48F1   SNE      V8, #F1         ; Skip if V8 != 241
$38E    $6AB2   LD       VA, #B2         ; Load 178 into VA
$390    $BC31   JP       V0, $C31        ; Jump to V0 + C31
$392    $DC2C   DRW      VC, V2, #C      ; Draw 12-byte sprite at VC, V2
$394    $980F   UNKNOWN  $980F           ; Unknown 9xxx instruction
$396    $4542   SNE      V5, #42         ; Skip if V5 != 66
$398    $E2F5   UNKNOWN  $E2F5           ; Unknown Exxx instruction
$39A    $950A   UNKNOWN  $950A           ; Unknown 9xxx instruction
$39C    $3D89   SE       VD, #89         ; Skip if VD == 137
$39E    $E0C9   UNKNOWN  $E0C9           ; Unknown Exxx instruction
$3A0    $2151   CALL     $151            ; Call subroutine at 151
$3A2    $7742   ADD      V7, #42         ; Add 66 to V7
$3A4    $B184   JP       V0, $184        ; Jump to V0 + 184
$3A6    $FF1D   UNKNOWN  FF1D            ; Unknown Fxxx instruction
$3A8    $9B0B   UNKNOWN  $9B0B           ; Unknown 9xxx instruction
$3AA    $7E1C   ADD      VE, #1C         ; Add 28 to VE
$3AC    $C403   RND      V4, #03         ; V4 = random & 03
$3AE    $1359   JP       $359            ; Jump to 359
$3B0    $05C7   SYS      $5C7            ; System call to 5C7
$3B2    $0922   SYS      $922            ; System call to 922
$3B4    $E403   UNKNOWN  $E403           ; Unknown Exxx instruction
$3B6    $6D1D   LD       VD, #1D         ; Load 29 into VD
$3B8    $F06B   UNKNOWN  F06B            ; Unknown Fxxx instruction
$3BA    $2B9B   CALL     $B9B            ; Call subroutine at B9B
$3BC    $1863   JP       $863            ; Jump to 863
$3BE    $937F   UNKNOWN  $937F           ; Unknown 9xxx instruction
$3C0    $57CB   UNKNOWN  $57CB           ; Unknown 5xxx instruction
$3C2    $6CD1   LD       VC, #D1         ; Load 209 into VC
$3C4    $D1AC   DRW      V1, VA, #C      ; Draw 12-byte sprite at V1, VA
$3C6    $8BAF   UNKNOWN  8BAF            ; Unknown 8xxx instruction
$3C8    $0C27   SYS      $C27            ; System call to C27
$3CA    $3D6B   SE       VD, #6B         ; Skip if VD == 107
$3CC    $C6EF   RND      V6, #EF         ; V6 = random & EF
$3CE    $01FE   SYS      $1FE            ; System call to 1FE
$3D0    $53A2   UNKNOWN  $53A2           ; Unknown 5xxx instruction
$3D2    $16AF   JP       $6AF            ; Jump to 6AF
$3D4    $FD18   LD       ST, VD          ; Sound timer = VD
$3D6    $9369   UNKNOWN  $9369           ; Unknown 9xxx instruction
$3D8    $2262   CALL     $262            ; Call subroutine at 262
$3DA    $5272   UNKNOWN  $5272           ; Unknown 5xxx instruction
$3DC    $F1E1   UNKNOWN  F1E1            ; Unknown Fxxx instruction
$3DE    $FDF8   UNKNOWN  FDF8            ; Unknown Fxxx instruction
$3E0    $693C   LD       V9, #3C         ; Load 60 into V9
$3E2    $698C   LD       V9, #8C         ; Load 140 into V9
$3E4    $E086   UNKNOWN  $E086           ; Unknown Exxx instruction
$3E6    $D1AD   DRW      V1, VA, #D      ; Draw 13-byte sprite at V1, VA
$3E8    $C7B2   RND      V7, #B2         ; V7 = random & B2
$3EA    $4BE9   SNE      VB, #E9         ; Skip if VB != 233
$3EC    $0806   SYS      $806            ; System call to 806
$3EE    $72E6   ADD      V2, #E6         ; Add 230 to V2
$3F0    $5FAA   UNKNOWN  $5FAA           ; Unknown 5xxx instruction
$3F2    $61FF   LD       V1, #FF         ; Load 255 into V1
$3F4    $5A32   UNKNOWN  $5A32           ; Unknown 5xxx instruction
$3F6    $BA5C   JP       V0, $A5C        ; Jump to V0 + A5C
$3F8    $8083   XOR      V0, V8          ; V0 ^= V8
$3FA    $98DC   UNKNOWN  $98DC           ; Unknown 9xxx instruction
$3FC    $810E   SHL      V1              ; V1 <<= 1, VF = MSB
$3FE    $7847   ADD      V8, #47         ; Add 71 to V8
$400    $A2D5   LD       I, $2D5         ; Load 2D5 into I
$402    $7831   ADD      V8, #31         ; Add 49 to V8
$404    $7A97   ADD      VA, #97         ; Add 151 to VA
$406    $CC0A   RND      VC, #0A         ; VC = random & 0A
$408    $357C   SE       V5, #7C         ; Skip if V5 == 124
$40A    $8A21   OR       VA, V2          ; VA |= V2
$40C    $9B59   UNKNOWN  $9B59           ; Unknown 9xxx instruction
$40E    $32C9   SE       V2, #C9         ; Skip if V2 == 201
$410    $2B9B   CALL     $B9B            ; Call subroutine at B9B
$412    $8CE6   SHR      VC              ; VC >>= 1, VF = LSB
$414    $2891   CALL     $891            ; Call subroutine at 891
$416    $96E9   UNKNOWN  $96E9           ; Unknown 9xxx instruction
$418    $469F   SNE      V6, #9F         ; Skip if V6 != 159
$41A    $5E06   UNKNOWN  $5E06           ; Unknown 5xxx instruction
$41C    $AEE8   LD       I, $EE8         ; Load EE8 into I
$41E    $E93E   UNKNOWN  $E93E           ; Unknown Exxx instruction
$420    $E83E   UNKNOWN  $E83E           ; Unknown Exxx instruction
$422    $7586   ADD      V5, #86         ; Add 134 to V5
$424    $1AA6   JP       $AA6            ; Jump to AA6
$426    $BF9F   JP       V0, $F9F        ; Jump to V0 + F9F
$428    $6032   LD       V0, #32         ; Load 50 into V0
$42A    $6CFA   LD       VC, #FA         ; Load 250 into VC
$42C    $02A3   SYS      $2A3            ; System call to 2A3
$42E    $0067   SYS      $067            ; System call to 067
$430    $D524   DRW      V5, V2, #4      ; Draw 4-byte sprite at V5, V2
$432    $865B   UNKNOWN  865B            ; Unknown 8xxx instruction
$434    $3C47   SE       VC, #47         ; Skip if VC == 71
$436    $2DA3   CALL     $DA3            ; Call subroutine at DA3
$438    $5C24   UNKNOWN  $5C24           ; Unknown 5xxx instruction
$43A    $83D9   UNKNOWN  83D9            ; Unknown 8xxx instruction
$43C    $6737   LD       V7, #37         ; Load 55 into V7
$43E    $DB90   DRW      VB, V9, #0      ; Draw 0-byte sprite at VB, V9
$440    $EFC9   UNKNOWN  $EFC9           ; Unknown Exxx instruction
$442    $4A67   SNE      VA, #67         ; Skip if VA != 103
$444    $4FF6   SNE      VF, #F6         ; Skip if VF != 246
$446    $C651   RND      V6, #51         ; V6 = random & 51
$448    $EFD9   UNKNOWN  $EFD9           ; Unknown Exxx instruction
$44A    $D580   DRW      V5, V8, #0      ; Draw 0-byte sprite at V5, V8
$44C    $12EF   JP       $2EF            ; Jump to 2EF
$44E    $FD37   UNKNOWN  FD37            ; Unknown Fxxx instruction
$450    $BEFC   JP       V0, $EFC        ; Jump to V0 + EFC
$452    $335C   SE       V3, #5C         ; Skip if V3 == 92
$454    $E558   UNKNOWN  $E558           ; Unknown Exxx instruction
$456    $FE77   UNKNOWN  FE77            ; Unknown Fxxx instruction
$458    $6D9A   LD       VD, #9A         ; Load 154 into VD
$45A    $00F4   SYS      $0F4            ; System call to 0F4
$45C    $BBD5   JP       V0, $BD5        ; Jump to V0 + BD5
$45E    $0839   SYS      $839            ; System call to 839
$460    $742A   ADD      V4, #2A         ; Add 42 to V4
$462    $367C   SE       V6, #7C         ; Skip if V6 == 124
$464    $72ED   ADD      V2, #ED         ; Add 237 to V2
$466    $D1D7   DRW      V1, VD, #7      ; Draw 7-byte sprite at V1, VD
$468    $219B   CALL     $19B            ; Call subroutine at 19B
$46A    $C180   RND      V1, #80         ; V1 = random & 80
$46C    $0034   SYS      $034            ; System call to 034
$46E    $4CB4   SNE      VC, #B4         ; Skip if VC != 180
$470    $6895   LD       V8, #95         ; Load 149 into V8
$472    $EC3F   UNKNOWN  $EC3F           ; Unknown Exxx instruction
$474    $858A   UNKNOWN  858A            ; Unknown 8xxx instruction
$476    $915D   UNKNOWN  $915D           ; Unknown 9xxx instruction
$478    $AC0C   LD       I, $C0C         ; Load C0C into I
$47A    $14C8   JP       $4C8            ; Jump to 4C8
$47C    $91F2   UNKNOWN  $91F2           ; Unknown 9xxx instruction
$47E    $F9CD   UNKNOWN  F9CD            ; Unknown Fxxx instruction
$480    $A24D   LD       I, $24D         ; Load 24D into I
$482    $FBE6   UNKNOWN  FBE6            ; Unknown Fxxx instruction
$484    $1DA8   JP       $DA8            ; Jump to DA8
$486    $099E   SYS      $99E            ; System call to 99E
$488    $52F9   UNKNOWN  $52F9           ; Unknown 5xxx instruction
$48A    $F278   UNKNOWN  F278            ; Unknown Fxxx instruction
$48C    $3CDF   SE       VC, #DF         ; Skip if VC == 223
$48E    $156A   JP       $56A            ; Jump to 56A
$490    $6854   LD       V8, #54         ; Load 84 into V8
$492    $0087   SYS      $087            ; System call to 087
$494    $86F1   OR       V6, VF          ; V6 |= VF
$496    $6106   LD       V1, #06         ; Load 6 into V1
$498    $AA2B   LD       I, $A2B         ; Load A2B into I
$49A    $112A   JP       $12A            ; Jump to 12A
$49C    $6C6A   LD       VC, #6A         ; Load 106 into VC
$49E    $B598   JP       V0, $598        ; Jump to V0 + 598
$4A0    $6B94   LD       VB, #94         ; Load 148 into VB
$4A2    $5A77   UNKNOWN  $5A77           ; Unknown 5xxx instruction
$4A4    $655C   LD       V5, #5C         ; Load 92 into V5
$4A6    $7CE9   ADD      VC, #E9         ; Add 233 to VC
$4A8    $2184   CALL     $184            ; Call subroutine at 184
$4AA    $85C2   AND      V5, VC          ; V5 &= VC
$4AC    $D43C   DRW      V4, V3, #C      ; Draw 12-byte sprite at V4, V3
$4AE    $1221   JP       $221            ; Jump to 221
$4B0    $C373   RND      V3, #73         ; V3 = random & 73
$4B2    $E3D9   UNKNOWN  $E3D9           ; Unknown Exxx instruction
$4B4    $5819   UNKNOWN  $5819           ; Unknown 5xxx instruction
$4B6    $F3F5   UNKNOWN  F3F5            ; Unknown Fxxx instruction
$4B8    $579A   UNKNOWN  $579A           ; Unknown 5xxx instruction
$4BA    $5A8E   UNKNOWN  $5A8E           ; Unknown 5xxx instruction
$4BC    $40FD   SNE      V0, #FD         ; Skip if V0 != 253
$4BE    $E3FE   UNKNOWN  $E3FE           ; Unknown Exxx instruction
$4C0    $7154   ADD      V1, #54         ; Add 84 to V1
$4C2    $540E   UNKNOWN  $540E           ; Unknown 5xxx instruction
$4C4    $29B5   CALL     $9B5            ; Call subroutine at 9B5
$4C6    $A552   LD       I, $552         ; Load 552 into I
$4C8    $62B6   LD       V2, #B6         ; Load 182 into V2
$4CA    $8424   ADD      V4, V2          ; V4 += V2, VF = carry
$4CC    $E669   UNKNOWN  $E669           ; Unknown Exxx instruction
$4CE    $D4F0   DRW      V4, VF, #0      ; Draw 0-byte sprite at V4, VF
$4D0    $AEFB   LD       I, $EFB         ; Load EFB into I
$4D2    $5DD8   UNKNOWN  $5DD8           ; Unknown 5xxx instruction
$4D4    $5F70   SE       VF, V7          ; Skip if VF == V7
$4D6    $0E2A   SYS      $E2A            ; System call to E2A
$4D8    $2003   CALL     $003            ; Call subroutine at 003
$4DA    $C483   RND      V4, #83         ; V4 = random & 83
$4DC    $F23A   UNKNOWN  F23A            ; Unknown Fxxx instruction
$4DE    $4A9D   SNE      VA, #9D         ; Skip if VA != 157
$4E0    $5126   UNKNOWN  $5126           ; Unknown 5xxx instruction
$4E2    $11FA   JP       $1FA            ; Jump to 1FA
$4E4    $87D4   ADD      V7, VD          ; V7 += VD, VF = carry
$4E6    $1548   JP       $548            ; Jump to 548
$4E8    $FCEC   UNKNOWN  FCEC            ; Unknown Fxxx instruction
$4EA    $8201   OR       V2, V0          ; V2 |= V0
$4EC    $0200   SYS      $200            ; System call to 200
$4EE    $F95D   UNKNOWN  F95D            ; Unknown Fxxx instruction
$4F0    $1608   JP       $608            ; Jump to 608
$4F2    $0374   SYS      $374            ; System call to 374
$4F4    $3B0A   SE       VB, #0A         ; Skip if VB == 10
$4F6    $0E50   SYS      $E50            ; System call to E50
$4F8    $FC5C   UNKNOWN  FC5C            ; Unknown Fxxx instruction
$4FA    $5AC3   UNKNOWN  $5AC3           ; Unknown 5xxx instruction
$4FC    $2431   CALL     $431            ; Call subroutine at 431
$4FE    $AE38   LD       I, $E38         ; Load E38 into I
$500    $AF4F   LD       I, $F4F         ; Load F4F into I
$502    $DFCA   DRW      VF, VC, #A      ; Draw 10-byte sprite at VF, VC
$504    $8F78   UNKNOWN  8F78            ; Unknown 8xxx instruction
$506    $B1DF   JP       V0, $1DF        ; Jump to V0 + 1DF
$508    $6535   LD       V5, #35         ; Load 53 into V5
$50A    $3BB3   SE       VB, #B3         ; Skip if VB == 179
$50C    $493E   SNE      V9, #3E         ; Skip if V9 != 62
$50E    $7BBA   ADD      VB, #BA         ; Add 186 to VB
$510    $6FD7   LD       VF, #D7         ; Load 215 into VF
$512    $81EB   UNKNOWN  81EB            ; Unknown 8xxx instruction
$514    $E211   UNKNOWN  $E211           ; Unknown Exxx instruction
$516    $8F7C   UNKNOWN  8F7C            ; Unknown 8xxx instruction
$518    $8DE2   AND      VD, VE          ; VD &= VE
$51A    $EC9A   UNKNOWN  $EC9A           ; Unknown Exxx instruction
$51C    $A142   LD       I, $142         ; Load 142 into I
$51E    $3A5A   SE       VA, #5A         ; Skip if VA == 90
$520    $290E   CALL     $90E            ; Call subroutine at 90E
$522    $BA32   JP       V0, $A32        ; Jump to V0 + A32
$524    $B3B6   JP       V0, $3B6        ; Jump to V0 + 3B6
$526    $81B4   ADD      V1, VB          ; V1 += VB, VF = carry
$528    $3539   SE       V5, #39         ; Skip if V5 == 57
$52A    $ED41   UNKNOWN  $ED41           ; Unknown Exxx instruction
$52C    $3DAF   SE       VD, #AF         ; Skip if VD == 175
$52E    $1021   JP       $021            ; Jump to 021
$530    $2D52   CALL     $D52            ; Call subroutine at D52
$532    $F17C   UNKNOWN  F17C            ; Unknown Fxxx instruction
$534    $7B76   ADD      VB, #76         ; Add 118 to VB
$536    $1809   JP       $809            ; Jump to 809
$538    $8332   AND      V3, V3          ; V3 &= V3
$53A    $D8D3   DRW      V8, VD, #3      ; Draw 3-byte sprite at V8, VD
$53C    $D650   DRW      V6, V5, #0      ; Draw 0-byte sprite at V6, V5
$53E    $92E8   UNKNOWN  $92E8           ; Unknown 9xxx instruction
$540    $4359   SNE      V3, #59         ; Skip if V3 != 89
$542    $4CBA   SNE      VC, #BA         ; Skip if VC != 186
$544    $C217   RND      V2, #17         ; V2 = random & 17
$546    $580D   UNKNOWN  $580D           ; Unknown 5xxx instruction
$548    $F22A   UNKNOWN  F22A            ; Unknown Fxxx instruction
$54A    $00DA   SYS      $0DA            ; System call to 0DA
$54C    $9778   UNKNOWN  $9778           ; Unknown 9xxx instruction
$54E    $8481   OR       V4, V8          ; V4 |= V8
$550    $4F52   SNE      VF, #52         ; Skip if VF != 82
$552    $BF05   JP       V0, $F05        ; Jump to V0 + F05
$554    $37E8   SE       V7, #E8         ; Skip if V7 == 232
$556    $FB45   UNKNOWN  FB45            ; Unknown Fxxx instruction
$558    $0F0C   SYS      $F0C            ; System call to F0C
$55A    $0AF4   SYS      $AF4            ; System call to AF4
$55C    $F3CB   UNKNOWN  F3CB            ; Unknown Fxxx instruction
$55E    $CF9D   RND      VF, #9D         ; VF = random & 9D
$560    $8808   UNKNOWN  8808            ; Unknown 8xxx instruction
$562    $61EB   LD       V1, #EB         ; Load 235 into V1
$564    $DCC0   DRW      VC, VC, #0      ; Draw 0-byte sprite at VC, VC
$566    $C0AA   RND      V0, #AA         ; V0 = random & AA
$568    $BBDE   JP       V0, $BDE        ; Jump to V0 + BDE
$56A    $5BAC   UNKNOWN  $5BAC           ; Unknown 5xxx instruction
$56C    $CD40   RND      VD, #40         ; VD = random & 40
$56E    $99FA   UNKNOWN  $99FA           ; Unknown 9xxx instruction
$570    $03C6   SYS      $3C6            ; System call to 3C6
$572    $4B16   SNE      VB, #16         ; Skip if VB != 22
$574    $02A8   SYS      $2A8            ; System call to 2A8
$576    $5B8D   UNKNOWN  $5B8D           ; Unknown 5xxx instruction
$578    $452A   SNE      V5, #2A         ; Skip if V5 != 42
$57A    $ABE5   LD       I, $BE5         ; Load BE5 into I
$57C    $CE17   RND      VE, #17         ; VE = random & 17
$57E    $6925   LD       V9, #25         ; Load 37 into V9
$580    $543E   UNKNOWN  $543E           ; Unknown 5xxx instruction
$582    $B00B   JP       V0, $00B        ; Jump to V0 + 00B
$584    $9134   UNKNOWN  $9134           ; Unknown 9xxx instruction
$586    $5D3E   UNKNOWN  $5D3E           ; Unknown 5xxx instruction
$588    $67CD   LD       V7, #CD         ; Load 205 into V7
$58A    $AA67   LD       I, $A67         ; Load A67 into I
$58C    $D5EB   DRW      V5, VE, #B      ; Draw 11-byte sprite at V5, VE
$58E    $BE7B   JP       V0, $E7B        ; Jump to V0 + E7B
$590    $A85D   LD       I, $85D         ; Load 85D into I
$592    $3E22   SE       VE, #22         ; Skip if VE == 34
$594    $99FF   UNKNOWN  $99FF           ; Unknown 9xxx instruction
$596    $CD8A   RND      VD, #8A         ; VD = random & 8A
$598    $9EE3   UNKNOWN  $9EE3           ; Unknown 9xxx instruction
$59A    $4D5E   SNE      VD, #5E         ; Skip if VD != 94
$59C    $07B5   SYS      $7B5            ; System call to 7B5
$59E    $5E38   UNKNOWN  $5E38           ; Unknown 5xxx instruction
$5A0    $F8CD   UNKNOWN  F8CD            ; Unknown Fxxx instruction
$5A2    $85E8   UNKNOWN  85E8            ; Unknown 8xxx instruction
$5A4    $354A   SE       V5, #4A         ; Skip if V5 == 74
$5A6    $D81E   DRW      V8, V1, #E      ; Draw 14-byte sprite at V8, V1
$5A8    $C5EB   RND      V5, #EB         ; V5 = random & EB
$5AA    $6A34   LD       VA, #34         ; Load 52 into VA
$5AC    $6A3B   LD       VA, #3B         ; Load 59 into VA
$5AE    $BBF2   JP       V0, $BF2        ; Jump to V0 + BF2
$5B0    $F05B   UNKNOWN  F05B            ; Unknown Fxxx instruction
$5B2    $3986   SE       V9, #86         ; Skip if V9 == 134
$5B4    $53E6   UNKNOWN  $53E6           ; Unknown 5xxx instruction
$5B6    $DD4D   DRW      VD, V4, #D      ; Draw 13-byte sprite at VD, V4
$5B8    $D6F1   DRW      V6, VF, #1      ; Draw 1-byte sprite at V6, VF
$5BA    $9957   UNKNOWN  $9957           ; Unknown 9xxx instruction
$5BC    $6BDA   LD       VB, #DA         ; Load 218 into VB
$5BE    $2555   CALL     $555            ; Call subroutine at 555
$5C0    $6202   LD       V2, #02         ; Load 2 into V2
$5C2    $9CD1   UNKNOWN  $9CD1           ; Unknown 9xxx instruction
$5C4    $B10E   JP       V0, $10E        ; Jump to V0 + 10E
$5C6    $6840   LD       V8, #40         ; Load 64 into V8
$5C8    $242D   CALL     $42D            ; Call subroutine at 42D
$5CA    $4369   SNE      V3, #69         ; Skip if V3 != 105
$5CC    $F2BB   UNKNOWN  F2BB            ; Unknown Fxxx instruction
$5CE    $2557   CALL     $557            ; Call subroutine at 557
$5D0    $2DD6   CALL     $DD6            ; Call subroutine at DD6
$5D2    $7168   ADD      V1, #68         ; Add 104 to V1
$5D4    $BD1D   JP       V0, $D1D        ; Jump to V0 + D1D
$5D6    $9521   UNKNOWN  $9521           ; Unknown 9xxx instruction
$5D8    $563C   UNKNOWN  $563C           ; Unknown 5xxx instruction
$5DA    $63F3   LD       V3, #F3         ; Load 243 into V3
$5DC    $3E1B   SE       VE, #1B         ; Skip if VE == 27
$5DE    $9057   UNKNOWN  $9057           ; Unknown 9xxx instruction
$5E0    $9B1B   UNKNOWN  $9B1B           ; Unknown 9xxx instruction
$5E2    $2B47   CALL     $B47            ; Call subroutine at B47
$5E4    $3292   SE       V2, #92         ; Skip if V2 == 146
$5E6    $A5B0   LD       I, $5B0         ; Load 5B0 into I
$5E8    $7B34   ADD      VB, #34         ; Add 52 to VB
$5EA    $B314   JP       V0, $314        ; Jump to V0 + 314
$5EC    $870B   UNKNOWN  870B            ; Unknown 8xxx instruction
$5EE    $8931   OR       V9, V3          ; V9 |= V3
$5F0    $4C66   SNE      VC, #66         ; Skip if VC != 102
$5F2    $15CA   JP       $5CA            ; Jump to 5CA
$5F4    $C9A0   RND      V9, #A0         ; V9 = random & A0
$5F6    $0D50   SYS      $D50            ; System call to D50
$5F8    $22A9   CALL     $2A9            ; Call subroutine at 2A9
$5FA    $8547   SUBN     V5, V4          ; V5 = V4 - V5, VF = !borrow
$5FC    $84CB   UNKNOWN  84CB            ; Unknown 8xxx instruction
$5FE    $2634   CALL     $634            ; Call subroutine at 634
$600    $31F5   SE       V1, #F5         ; Skip if V1 == 245
$602    $39FD   SE       V9, #FD         ; Skip if V9 == 253
$604    $FFDF   UNKNOWN  FFDF            ; Unknown Fxxx instruction
$606    $1EEC   JP       $EEC            ; Jump to EEC
$608    $0652   SYS      $652            ; System call to 652
$60A    $3FE8   SE       VF, #E8         ; Skip if VF == 232
$60C    $2C11   CALL     $C11            ; Call subroutine at C11
$60E    $0053   SYS      $053            ; System call to 053
$610    $DFCE   DRW      VF, VC, #E      ; Draw 14-byte sprite at VF, VC
$612    $2DF3   CALL     $DF3            ; Call subroutine at DF3
$614    $E7D9   UNKNOWN  $E7D9           ; Unknown Exxx instruction
$616    $0CC0   SYS      $CC0            ; System call to CC0
$618    $DE72   DRW      VE, V7, #2      ; Draw 2-byte sprite at VE, V7
$61A    $F049   UNKNOWN  F049            ; Unknown Fxxx instruction
$61C    $1582   JP       $582            ; Jump to 582
$61E    $139D   JP       $39D            ; Jump to 39D
$620    $7B65   ADD      VB, #65         ; Add 101 to VB
$622    $5461   UNKNOWN  $5461           ; Unknown 5xxx instruction
$624    $8D17   SUBN     VD, V1          ; VD = V1 - VD, VF = !borrow
$626    $751C   ADD      V5, #1C         ; Add 28 to V5
$628    $FDAD   UNKNOWN  FDAD            ; Unknown Fxxx instruction
$62A    $B594   JP       V0, $594        ; Jump to V0 + 594
$62C    $A0C5   LD       I, $0C5         ; Load 0C5 into I
$62E    $2E34   CALL     $E34            ; Call subroutine at E34
$630    $99A2   UNKNOWN  $99A2           ; Unknown 9xxx instruction
$632    $3D62   SE       VD, #62         ; Skip if VD == 98
$634    $02F6   SYS      $2F6            ; System call to 2F6
$636    $B184   JP       V0, $184        ; Jump to V0 + 184
$638    $CC2B   RND      VC, #2B         ; VC = random & 2B
$63A    $6106   LD       V1, #06         ; Load 6 into V1
$63C    $3DB0   SE       VD, #B0         ; Skip if VD == 176
$63E    $0EE2   SYS      $EE2            ; System call to EE2
$640    $9348   UNKNOWN  $9348           ; Unknown 9xxx instruction
$642    $D6B6   DRW      V6, VB, #6      ; Draw 6-byte sprite at V6, VB
$644    $E3B1   UNKNOWN  $E3B1           ; Unknown Exxx instruction
$646    $231B   CALL     $31B            ; Call subroutine at 31B
$648    $A1D5   LD       I, $1D5         ; Load 1D5 into I
$64A    $F728   UNKNOWN  F728            ; Unknown Fxxx instruction
$64C    $0A86   SYS      $A86            ; System call to A86
$64E    $486C   SNE      V8, #6C         ; Skip if V8 != 108
$650    $4E6F   SNE      VE, #6F         ; Skip if VE != 111
$652    $B3BF   JP       V0, $3BF        ; Jump to V0 + 3BF
$654    $EE59   UNKNOWN  $EE59           ; Unknown Exxx instruction
$656    $6BCC   LD       VB, #CC         ; Load 204 into VB
$658    $DC53   DRW      VC, V5, #3      ; Draw 3-byte sprite at VC, V5
$65A    $EB5F   UNKNOWN  $EB5F           ; Unknown Exxx instruction
$65C    $94C5   UNKNOWN  $94C5           ; Unknown 9xxx instruction
$65E    $5106   UNKNOWN  $5106           ; Unknown 5xxx instruction
$660    $9A41   UNKNOWN  $9A41           ; Unknown 9xxx instruction
$662    $37B1   SE       V7, #B1         ; Skip if V7 == 177
$664    $0173   SYS      $173            ; System call to 173
$666    $4AA7   SNE      VA, #A7         ; Skip if VA != 167
$668    $F370   UNKNOWN  F370            ; Unknown Fxxx instruction
$66A    $91B4   UNKNOWN  $91B4           ; Unknown 9xxx instruction
$66C    $3552   SE       V5, #52         ; Skip if V5 == 82
$66E    $7C19   ADD      VC, #19         ; Add 25 to VC
$670    $F87D   UNKNOWN  F87D            ; Unknown Fxxx instruction
$672    $3FA3   SE       VF, #A3         ; Skip if VF == 163
$674    $B90C   JP       V0, $90C        ; Jump to V0 + 90C
$676    $3356   SE       V3, #56         ; Skip if V3 == 86
$678    $7872   ADD      V8, #72         ; Add 114 to V8
$67A    $EE63   UNKNOWN  $EE63           ; Unknown Exxx instruction
$67C    $322E   SE       V2, #2E         ; Skip if V2 == 46
$67E    $A440   LD       I, $440         ; Load 440 into I
$680    $A0AB   LD       I, $0AB         ; Load 0AB into I
$682    $A5CC   LD       I, $5CC         ; Load 5CC into I
$684    $A621   LD       I, $621         ; Load 621 into I
$686    $5823   UNKNOWN  $5823           ; Unknown 5xxx instruction
$688    $B9AD   JP       V0, $9AD        ; Jump to V0 + 9AD
$68A    $B676   JP       V0, $676        ; Jump to V0 + 676
$68C    $7F28   ADD      VF, #28         ; Add 40 to VF
$68E    $86C8   UNKNOWN  86C8            ; Unknown 8xxx instruction
$690    $D6C8   DRW      V6, VC, #8      ; Draw 8-byte sprite at V6, VC
$692    $F21D   UNKNOWN  F21D            ; Unknown Fxxx instruction
$694    $72C8   ADD      V2, #C8         ; Add 200 to V2
$696    $286B   CALL     $86B            ; Call subroutine at 86B
$698    $4629   SNE      V6, #29         ; Skip if V6 != 41
$69A    $C95D   RND      V9, #5D         ; V9 = random & 5D
$69C    $835D   UNKNOWN  835D            ; Unknown 8xxx instruction
$69E    $5A5D   UNKNOWN  $5A5D           ; Unknown 5xxx instruction
$6A0    $B0CB   JP       V0, $0CB        ; Jump to V0 + 0CB
$6A2    $5E4D   UNKNOWN  $5E4D           ; Unknown 5xxx instruction
$6A4    $9B8C   UNKNOWN  $9B8C           ; Unknown 9xxx instruction
$6A6    $C24A   RND      V2, #4A         ; V2 = random & 4A
$6A8    $7188   ADD      V1, #88         ; Add 136 to V1
$6AA    $12DE   JP       $2DE            ; Jump to 2DE
$6AC    $4C2E   SNE      VC, #2E         ; Skip if VC != 46
$6AE    $512F   UNKNOWN  $512F           ; Unknown 5xxx instruction
$6B0    $71C3   ADD      V1, #C3         ; Add 195 to V1
$6B2    $9FAF   UNKNOWN  $9FAF           ; Unknown 9xxx instruction
$6B4    $EC59   UNKNOWN  $EC59           ; Unknown Exxx instruction
$6B6    $58F8   UNKNOWN  $58F8           ; Unknown 5xxx instruction
$6B8    $054D   SYS      $54D            ; System call to 54D
$6BA    $CD7F   RND      VD, #7F         ; VD = random & 7F
$6BC    $3268   SE       V2, #68         ; Skip if V2 == 104
$6BE    $DA50   DRW      VA, V5, #0      ; Draw 0-byte sprite at VA, V5
$6C0    $704E   ADD      V0, #4E         ; Add 78 to V0
$6C2    $C900   RND      V9, #00         ; V9 = random & 00
$6C4    $8145   SUB      V1, V4          ; V1 -= V4, VF = !borrow
$6C6    $0B3D   SYS      $B3D            ; System call to B3D
$6C8    $41F8   SNE      V1, #F8         ; Skip if V1 != 248
$6CA    $3B73   SE       VB, #73         ; Skip if VB == 115
$6CC    $7C74   ADD      VC, #74         ; Add 116 to VC
$6CE    $4817   SNE      V8, #17         ; Skip if V8 != 23
$6D0    $83B2   AND      V3, VB          ; V3 &= VB
$6D2    $8DED   UNKNOWN  8DED            ; Unknown 8xxx instruction
$6D4    $0240   SYS      $240            ; System call to 240
$6D6    $12D8   JP       $2D8            ; Jump to 2D8
$6D8    $B6F0   JP       V0, $6F0        ; Jump to V0 + 6F0
$6DA    $FB6A   UNKNOWN  FB6A            ; Unknown Fxxx instruction
$6DC    $88A3   XOR      V8, VA          ; V8 ^= VA
$6DE    $2AD1   CALL     $AD1            ; Call subroutine at AD1
$6E0    $D54D   DRW      V5, V4, #D      ; Draw 13-byte sprite at V5, V4
$6E2    $8024   ADD      V0, V2          ; V0 += V2, VF = carry
$6E4    $019A   SYS      $19A            ; System call to 19A
$6E6    $329E   SE       V2, #9E         ; Skip if V2 == 158
$6E8    $C69A   RND      V6, #9A         ; V6 = random & 9A
$6EA    $25C5   CALL     $5C5            ; Call subroutine at 5C5
$6EC    $FB67   UNKNOWN  FB67            ; Unknown Fxxx instruction
$6EE    $941C   UNKNOWN  $941C           ; Unknown 9xxx instruction
$6F0    $EEDE   UNKNOWN  $EEDE           ; Unknown Exxx instruction
$6F2    $2E11   CALL     $E11            ; Call subroutine at E11
$6F4    $5B83   UNKNOWN  $5B83           ; Unknown 5xxx instruction
$6F6    $13D1   JP       $3D1            ; Jump to 3D1
$6F8    $E10E   UNKNOWN  $E10E           ; Unknown Exxx instruction
$6FA    $7363   ADD      V3, #63         ; Add 99 to V3
$6FC    $B86B   JP       V0, $86B        ; Jump to V0 + 86B
$6FE    $FE94   UNKNOWN  FE94            ; Unknown Fxxx instruction
$700    $9F36   UNKNOWN  $9F36           ; Unknown 9xxx instruction
$702    $E120   UNKNOWN  $E120           ; Unknown Exxx instruction
$704    $C681   RND      V6, #81         ; V6 = random & 81
$706    $357A   SE       V5, #7A         ; Skip if V5 == 122
$708    $F9C4   UNKNOWN  F9C4            ; Unknown Fxxx instruction
$70A    $5882   UNKNOWN  $5882           ; Unknown 5xxx instruction
$70C    $ABCC   LD       I, $BCC         ; Load BCC into I
$70E    $5AB1   UNKNOWN  $5AB1           ; Unknown 5xxx instruction
$710    $41CE   SNE      V1, #CE         ; Skip if V1 != 206
$712    $8F0B   UNKNOWN  8F0B            ; Unknown 8xxx instruction
$714    $A8D9   LD       I, $8D9         ; Load 8D9 into I
$716    $C96A   RND      V9, #6A         ; V9 = random & 6A
$718    $1496   JP       $496            ; Jump to 496
$71A    $F9E2   UNKNOWN  F9E2            ; Unknown Fxxx instruction
$71C    $0382   SYS      $382            ; System call to 382
$71E    $95D2   UNKNOWN  $95D2           ; Unknown 9xxx instruction
$720    $ED6C   UNKNOWN  $ED6C           ; Unknown Exxx instruction
$722    $2CE2   CALL     $CE2            ; Call subroutine at CE2
$724    $7645   ADD      V6, #45         ; Add 69 to V6
$726    $3F70   SE       VF, #70         ; Skip if VF == 112
$728    $C86C   RND      V8, #6C         ; V8 = random & 6C
$72A    $41C3   SNE      V1, #C3         ; Skip if V1 != 195
$72C    $0A18   SYS      $A18            ; System call to A18
$72E    $C278   RND      V2, #78         ; V2 = random & 78
$730    $4223   SNE      V2, #23         ; Skip if V2 != 35
$732    $CC97   RND      VC, #97         ; VC = random & 97
$734    $D8B0   DRW      V8, VB, #0      ; Draw 0-byte sprite at V8, VB
$736    $5D61   UNKNOWN  $5D61           ; Unknown 5xxx instruction
$738    $BE45   JP       V0, $E45        ; Jump to V0 + E45
$73A    $BE3A   JP       V0, $E3A        ; Jump to V0 + E3A
$73C    $EE14   UNKNOWN  $EE14           ; Unknown Exxx instruction
$73E    $9A6F   UNKNOWN  $9A6F           ; Unknown 9xxx instruction
$740    $823F   UNKNOWN  823F            ; Unknown 8xxx instruction
$742    $F520   UNKNOWN  F520            ; Unknown Fxxx instruction
$744    $08A7   SYS      $8A7            ; System call to 8A7
$746    $A360   LD       I, $360         ; Load 360 into I
$748    $F3C4   UNKNOWN  F3C4            ; Unknown Fxxx instruction
$74A    $9DF9   UNKNOWN  $9DF9           ; Unknown 9xxx instruction
$74C    $0BC6   SYS      $BC6            ; System call to BC6
$74E    $C8CD   RND      V8, #CD         ; V8 = random & CD
$750    $CD06   RND      VD, #06         ; VD = random & 06
$752    $9098   UNKNOWN  $9098           ; Unknown 9xxx instruction
$754    $E07A   UNKNOWN  $E07A           ; Unknown Exxx instruction
$756    $365F   SE       V6, #5F         ; Skip if V6 == 95
$758    $6A7A   LD       VA, #7A         ; Load 122 into VA
$75A    $E953   UNKNOWN  $E953           ; Unknown Exxx instruction
$75C    $B447   JP       V0, $447        ; Jump to V0 + 447
$75E    $E597   UNKNOWN  $E597           ; Unknown Exxx instruction
$760    $864F   UNKNOWN  864F            ; Unknown 8xxx instruction
$762    $D857   DRW      V8, V5, #7      ; Draw 7-byte sprite at V8, V5
$764    $C76C   RND      V7, #6C         ; V7 = random & 6C
$766    $1D55   JP       $D55            ; Jump to D55
$768    $AA97   LD       I, $A97         ; Load A97 into I
$76A    $2814   CALL     $814            ; Call subroutine at 814
$76C    $A272   LD       I, $272         ; Load 272 into I
$76E    $0D79   SYS      $D79            ; System call to D79
$770    $DFA3   DRW      VF, VA, #3      ; Draw 3-byte sprite at VF, VA
$772    $8F3A   UNKNOWN  8F3A            ; Unknown 8xxx instruction
$774    $01AC   SYS      $1AC            ; System call to 1AC
$776    $B779   JP       V0, $779        ; Jump to V0 + 779
$778    $A163   LD       I, $163         ; Load 163 into I
$77A    $122A   JP       $22A            ; Jump to 22A
$77C    $C712   RND      V7, #12         ; V7 = random & 12
$77E    $4A19   SNE      VA, #19         ; Skip if VA != 25
$780    $9043   UNKNOWN  $9043           ; Unknown 9xxx instruction
$782    $F31F   UNKNOWN  F31F            ; Unknown Fxxx instruction
$784    $CFB3   RND      VF, #B3         ; VF = random & B3
$786    $FE5E   UNKNOWN  FE5E            ; Unknown Fxxx instruction
$788    $9B1B   UNKNOWN  $9B1B           ; Unknown 9xxx instruction
$78A    $85F6   SHR      V5              ; V5 >>= 1, VF = LSB
$78C    $A1AF   LD       I, $1AF         ; Load 1AF into I
$78E    $CC82   RND      VC, #82         ; VC = random & 82
$790    $9F03   UNKNOWN  $9F03           ; Unknown 9xxx instruction
$792    $7806   ADD      V8, #06         ; Add 6 to V8
$794    $0E28   SYS      $E28            ; System call to E28
$796    $AB67   LD       I, $B67         ; Load B67 into I
$798    $0D2F   SYS      $D2F            ; System call to D2F
$79A    $AB33   LD       I, $B33         ; Load B33 into I
$79C    $B9F1   JP       V0, $9F1        ; Jump to V0 + 9F1
$79E    $3038   SE       V0, #38         ; Skip if V0 == 56
$7A0    $A2D5   LD       I, $2D5         ; Load 2D5 into I
$7A2    $9731   UNKNOWN  $9731           ; Unknown 9xxx instruction
$7A4    $5E5C   UNKNOWN  $5E5C           ; Unknown 5xxx instruction
$7A6    $0240   SYS      $240            ; System call to 240
$7A8    $C0B8   RND      V0, #B8         ; V0 = random & B8
$7AA    $4CBA   SNE      VC, #BA         ; Skip if VC != 186
$7AC    $C7F8   RND      V7, #F8         ; V7 = random & F8
$7AE    $D31E   DRW      V3, V1, #E      ; Draw 14-byte sprite at V3, V1
$7B0    $95D1   UNKNOWN  $95D1           ; Unknown 9xxx instruction
$7B2    $7CFF   ADD      VC, #FF         ; Add 255 to VC
$7B4    $1E87   JP       $E87            ; Jump to E87
$7B6    $E407   UNKNOWN  $E407           ; Unknown Exxx instruction
$7B8    $EADB   UNKNOWN  $EADB           ; Unknown Exxx instruction
$7BA    $BD27   JP       V0, $D27        ; Jump to V0 + D27
$7BC    $BE6E   JP       V0, $E6E        ; Jump to V0 + E6E
$7BE    $C12E   RND      V1, #2E         ; V1 = random & 2E
$7C0    $BE93   JP       V0, $E93        ; Jump to V0 + E93
$7C2    $DA99   DRW      VA, V9, #9      ; Draw 9-byte sprite at VA, V9
$7C4    $5666   UNKNOWN  $5666           ; Unknown 5xxx instruction
$7C6    $A1A5   LD       I, $1A5         ; Load 1A5 into I
$7C8    $5029   UNKNOWN  $5029           ; Unknown 5xxx instruction
$7CA    $8488   UNKNOWN  8488            ; Unknown 8xxx instruction
$7CC    $3418   SE       V4, #18         ; Skip if V4 == 24
$7CE    $177C   JP       $77C            ; Jump to 77C
$7D0    $8051   OR       V0, V5          ; V0 |= V5
$7D2    $E563   UNKNOWN  $E563           ; Unknown Exxx instruction
$7D4    $F59E   UNKNOWN  F59E            ; Unknown Fxxx instruction
$7D6    $13D8   JP       $3D8            ; Jump to 3D8
$7D8    $E900   UNKNOWN  $E900           ; Unknown Exxx instruction
$7DA    $5C15   UNKNOWN  $5C15           ; Unknown 5xxx instruction
$7DC    $EE22   UNKNOWN  $EE22           ; Unknown Exxx instruction
$7DE    $6C22   LD       VC, #22         ; Load 34 into VC
$7E0    $7D3C   ADD      VD, #3C         ; Add 60 to VD
$7E2    $8B1C   UNKNOWN  8B1C            ; Unknown 8xxx instruction
$7E4    $2ACC   CALL     $ACC            ; Call subroutine at ACC
$7E6    $D37D   DRW      V3, V7, #D      ; Draw 13-byte sprite at V3, V7
$7E8    $13DD   JP       $3DD            ; Jump to 3DD
$7EA    $042C   SYS      $42C            ; System call to 42C
$7EC    $5CAD   UNKNOWN  $5CAD           ; Unknown 5xxx instruction
$7EE    $83C4   ADD      V3, VC          ; V3 += VC, VF = carry
$7F0    $6F96   LD       VF, #96         ; Load 150 into VF
$7F2    $171E   JP       $71E            ; Jump to 71E
$7F4    $6EDA   LD       VE, #DA         ; Load 218 into VE
$7F6    $04BD   SYS      $4BD            ; System call to 4BD
$7F8    $B8C4   JP       V0, $8C4        ; Jump to V0 + 8C4
$7FA    $28FB   CALL     $8FB            ; Call subroutine at 8FB
$7FC    $BB64   JP       V0, $B64        ; Jump to V0 + B64
$7FE    $6F1A   LD       VF, #1A         ; Load 26 into VF
$800    $199C   JP       $99C            ; Jump to 99C
$802    $255B   CALL     $55B            ; Call subroutine at 55B
$804    $FC88   UNKNOWN  FC88            ; Unknown Fxxx instruction
$806    $770A   ADD      V7, #0A         ; Add 10 to V7
$808    $9939   UNKNOWN  $9939           ; Unknown 9xxx instruction
$80A    $6553   LD       V5, #53         ; Load 83 into V5
$80C    $E429   UNKNOWN  $E429           ; Unknown Exxx instruction
$80E    $6EB5   LD       VE, #B5         ; Load 181 into VE
$810    $8247   SUBN     V2, V4          ; V2 = V4 - V2, VF = !borrow
$812    $4489   SNE      V4, #89         ; Skip if V4 != 137
$814    $722B   ADD      V2, #2B         ; Add 43 to V2
$816    $8765   SUB      V7, V6          ; V7 -= V6, VF = !borrow
$818    $B5E3   JP       V0, $5E3        ; Jump to V0 + 5E3
$81A    $3FCC   SE       VF, #CC         ; Skip if VF == 204
$81C    $DC67   DRW      VC, V6, #7      ; Draw 7-byte sprite at VC, V6
$81E    $0388   SYS      $388            ; System call to 388
$820    $C5D6   RND      V5, #D6         ; V5 = random & D6
$822    $36B2   SE       V6, #B2         ; Skip if V6 == 178
$824    $D5AE   DRW      V5, VA, #E      ; Draw 14-byte sprite at V5, VA
$826    $9CBD   UNKNOWN  $9CBD           ; Unknown 9xxx instruction
$828    $CBA0   RND      VB, #A0         ; VB = random & A0
$82A    $6D95   LD       VD, #95         ; Load 149 into VD
$82C    $AD3E   LD       I, $D3E         ; Load D3E into I
$82E    $E3C5   UNKNOWN  $E3C5           ; Unknown Exxx instruction
$830    $2F29   CALL     $F29            ; Call subroutine at F29
$832    $C3D6   RND      V3, #D6         ; V3 = random & D6
$834    $11EE   JP       $1EE            ; Jump to 1EE
$836    $8AB7   SUBN     VA, VB          ; VA = VB - VA, VF = !borrow
$838    $3611   SE       V6, #11         ; Skip if V6 == 17
$83A    $D07D   DRW      V0, V7, #D      ; Draw 13-byte sprite at V0, V7
$83C    $29C6   CALL     $9C6            ; Call subroutine at 9C6
$83E    $E31C   UNKNOWN  $E31C           ; Unknown Exxx instruction
$840    $92C1   UNKNOWN  $92C1           ; Unknown 9xxx instruction
$842    $100E   JP       $00E            ; Jump to 00E
$844    $5AAE   UNKNOWN  $5AAE           ; Unknown 5xxx instruction
$846    $74D1   ADD      V4, #D1         ; Add 209 to V4
$848    $700B   ADD      V0, #0B         ; Add 11 to V0
$84A    $E57A   UNKNOWN  $E57A           ; Unknown Exxx instruction
$84C    $7209   ADD      V2, #09         ; Add 9 to V2
$84E    $750F   ADD      V5, #0F         ; Add 15 to V5
$850    $DF9A   DRW      VF, V9, #A      ; Draw 10-byte sprite at VF, V9
$852    $E663   UNKNOWN  $E663           ; Unknown Exxx instruction
$854    $3573   SE       V5, #73         ; Skip if V5 == 115
$856    $A07A   LD       I, $07A         ; Load 07A into I
$858    $7EB6   ADD      VE, #B6         ; Add 182 to VE
$85A    $184B   JP       $84B            ; Jump to 84B
$85C    $840A   UNKNOWN  840A            ; Unknown 8xxx instruction
$85E    $8FDF   UNKNOWN  8FDF            ; Unknown 8xxx instruction
$860    $D4A2   DRW      V4, VA, #2      ; Draw 2-byte sprite at V4, VA
$862    $B7C6   JP       V0, $7C6        ; Jump to V0 + 7C6
$864    $B6D9   JP       V0, $6D9        ; Jump to V0 + 6D9
$866    $045A   SYS      $45A            ; System call to 45A
$868    $B547   JP       V0, $547        ; Jump to V0 + 547
$86A    $93DC   UNKNOWN  $93DC           ; Unknown 9xxx instruction
$86C    $DC32   DRW      VC, V3, #2      ; Draw 2-byte sprite at VC, V3
$86E    $885C   UNKNOWN  885C            ; Unknown 8xxx instruction
$870    $D700   DRW      V7, V0, #0      ; Draw 0-byte sprite at V7, V0
$872    $6116   LD       V1, #16         ; Load 22 into V1
$874    $F5EE   UNKNOWN  F5EE            ; Unknown Fxxx instruction
$876    $A41F   LD       I, $41F         ; Load 41F into I
$878    $7CE3   ADD      VC, #E3         ; Add 227 to VC
$87A    $381E   SE       V8, #1E         ; Skip if V8 == 30
$87C    $AB70   LD       I, $B70         ; Load B70 into I
$87E    $1A8C   JP       $A8C            ; Jump to A8C
$880    $2DCA   CALL     $DCA            ; Call subroutine at DCA
$882    $4045   SNE      V0, #45         ; Skip if V0 != 69
$884    $6823   LD       V8, #23         ; Load 35 into V8
$886    $36E0   SE       V6, #E0         ; Skip if V6 == 224
$888    $6369   LD       V3, #69         ; Load 105 into V3
$88A    $7772   ADD      V7, #72         ; Add 114 to V7
$88C    $E240   UNKNOWN  $E240           ; Unknown Exxx instruction
$88E    $314D   SE       V1, #4D         ; Skip if V1 == 77
$890    $1499   JP       $499            ; Jump to 499
$892    $F6C4   UNKNOWN  F6C4            ; Unknown Fxxx instruction
$894    $004D   SYS      $04D            ; System call to 04D
$896    $63AD   LD       V3, #AD         ; Load 173 into V3
$898    $C064   RND      V0, #64         ; V0 = random & 64
$89A    $6208   LD       V2, #08         ; Load 8 into V2
$89C    $18A4   JP       $8A4            ; Jump to 8A4
$89E    $2814   CALL     $814            ; Call subroutine at 814
$8A0    $20AA   CALL     $0AA            ; Call subroutine at 0AA
$8A2    $C6E2   RND      V6, #E2         ; V6 = random & E2
$8A4    $204E   CALL     $04E            ; Call subroutine at 04E
$8A6    $1AB9   JP       $AB9            ; Jump to AB9
$8A8    $371E   SE       V7, #1E         ; Skip if V7 == 30
$8AA    $22B6   CALL     $2B6            ; Call subroutine at 2B6
$8AC    $E22A   UNKNOWN  $E22A           ; Unknown Exxx instruction
$8AE    $4F68   SNE      VF, #68         ; Skip if VF != 104
$8B0    $08BE   SYS      $8BE            ; System call to 8BE
$8B2    $6423   LD       V4, #23         ; Load 35 into V4
$8B4    $5023   UNKNOWN  $5023           ; Unknown 5xxx instruction
$8B6    $C30B   RND      V3, #0B         ; V3 = random & 0B
$8B8    $A178   LD       I, $178         ; Load 178 into I
$8BA    $A188   LD       I, $188         ; Load 188 into I
$8BC    $85BB   UNKNOWN  85BB            ; Unknown 8xxx instruction
$8BE    $98D9   UNKNOWN  $98D9           ; Unknown 9xxx instruction
$8C0    $84C6   SHR      V4              ; V4 >>= 1, VF = LSB
$8C2    $FDAB   UNKNOWN  FDAB            ; Unknown Fxxx instruction
$8C4    $0AE7   SYS      $AE7            ; System call to AE7
$8C6    $98D4   UNKNOWN  $98D4           ; Unknown 9xxx instruction
$8C8    $A3A4   LD       I, $3A4         ; Load 3A4 into I
$8CA    $6F97   LD       VF, #97         ; Load 151 into VF
$8CC    $EA0E   UNKNOWN  $EA0E           ; Unknown Exxx instruction
$8CE    $32EB   SE       V2, #EB         ; Skip if V2 == 235
$8D0    $7895   ADD      V8, #95         ; Add 149 to V8
$8D2    $2D82   CALL     $D82            ; Call subroutine at D82
$8D4    $7619   ADD      V6, #19         ; Add 25 to V6
$8D6    $99DE   UNKNOWN  $99DE           ; Unknown 9xxx instruction
$8D8    $AE50   LD       I, $E50         ; Load E50 into I
$8DA    $65D4   LD       V5, #D4         ; Load 212 into V5
$8DC    $948A   UNKNOWN  $948A           ; Unknown 9xxx instruction
$8DE    $CBF7   RND      VB, #F7         ; VB = random & F7
$8E0    $E815   UNKNOWN  $E815           ; Unknown Exxx instruction
$8E2    $EC04   UNKNOWN  $EC04           ; Unknown Exxx instruction
$8E4    $893C   UNKNOWN  893C            ; Unknown 8xxx instruction
$8E6    $FEF3   UNKNOWN  FEF3            ; Unknown Fxxx instruction
$8E8    $4027   SNE      V0, #27         ; Skip if V0 != 39
$8EA    $B2E3   JP       V0, $2E3        ; Jump to V0 + 2E3
$8EC    $8FAF   UNKNOWN  8FAF            ; Unknown 8xxx instruction
$8EE    $EE15   UNKNOWN  $EE15           ; Unknown Exxx instruction
$8F0    $BBD3   JP       V0, $BD3        ; Jump to V0 + BD3
$8F2    $21F8   CALL     $1F8            ; Call subroutine at 1F8
$8F4    $BD84   JP       V0, $D84        ; Jump to V0 + D84
$8F6    $4760   SNE      V7, #60         ; Skip if V7 != 96
$8F8    $5EFA   UNKNOWN  $5EFA           ; Unknown 5xxx instruction
$8FA    $E02D   UNKNOWN  $E02D           ; Unknown Exxx instruction
$8FC    $2EEB   CALL     $EEB            ; Call subroutine at EEB
$8FE    $D015   DRW      V0, V1, #5      ; Draw 5-byte sprite at V0, V1
$900    $7A31   ADD      VA, #31         ; Add 49 to VA
$902    $0CB5   SYS      $CB5            ; System call to CB5
$904    $297F   CALL     $97F            ; Call subroutine at 97F
$906    $B0F0   JP       V0, $0F0        ; Jump to V0 + 0F0
$908    $BFD9   JP       V0, $FD9        ; Jump to V0 + FD9
$90A    $5D78   UNKNOWN  $5D78           ; Unknown 5xxx instruction
$90C    $08ED   SYS      $8ED            ; System call to 8ED
$90E    $6ED9   LD       VE, #D9         ; Load 217 into VE
$910    $3D80   SE       VD, #80         ; Skip if VD == 128
$912    $6135   LD       V1, #35         ; Load 53 into V1
$914    $789D   ADD      V8, #9D         ; Add 157 to V8
$916    $842C   UNKNOWN  842C            ; Unknown 8xxx instruction
$918    $12AB   JP       $2AB            ; Jump to 2AB
$91A    $4346   SNE      V3, #46         ; Skip if V3 != 70
$91C    $12F2   JP       $2F2            ; Jump to 2F2
$91E    $CAEE   RND      VA, #EE         ; VA = random & EE
$920    $DAB7   DRW      VA, VB, #7      ; Draw 7-byte sprite at VA, VB
$922    $6944   LD       V9, #44         ; Load 68 into V9
$924    $D382   DRW      V3, V8, #2      ; Draw 2-byte sprite at V3, V8
$926    $3773   SE       V7, #73         ; Skip if V7 == 115
$928    $9FF8   UNKNOWN  $9FF8           ; Unknown 9xxx instruction
$92A    $5E44   UNKNOWN  $5E44           ; Unknown 5xxx instruction
$92C    $BB8B   JP       V0, $B8B        ; Jump to V0 + B8B
$92E    $E329   UNKNOWN  $E329           ; Unknown Exxx instruction
$930    $F77A   UNKNOWN  F77A            ; Unknown Fxxx instruction
$932    $B324   JP       V0, $324        ; Jump to V0 + 324
$934    $3600   SE       V6, #00         ; Skip if V6 == 0
$936    $AB18   LD       I, $B18         ; Load B18 into I
$938    $75C7   ADD      V5, #C7         ; Add 199 to V5
$93A    $5AFF   UNKNOWN  $5AFF           ; Unknown 5xxx instruction
$93C    $0789   SYS      $789            ; System call to 789
$93E    $743F   ADD      V4, #3F         ; Add 63 to V4
$940    $D374   DRW      V3, V7, #4      ; Draw 4-byte sprite at V3, V7
$942    $E674   UNKNOWN  $E674           ; Unknown Exxx instruction
$944    $B369   JP       V0, $369        ; Jump to V0 + 369
$946    $CAA7   RND      VA, #A7         ; VA = random & A7
$948    $BAC0   JP       V0, $AC0        ; Jump to V0 + AC0
$94A    $15A9   JP       $5A9            ; Jump to 5A9
$94C    $BE9C   JP       V0, $E9C        ; Jump to V0 + E9C
$94E    $BDD5   JP       V0, $DD5        ; Jump to V0 + DD5
$950    $4B8C   SNE      VB, #8C         ; Skip if VB != 140
$952    $EA4B   UNKNOWN  $EA4B           ; Unknown Exxx instruction
$954    $AE82   LD       I, $E82         ; Load E82 into I
$956    $4492   SNE      V4, #92         ; Skip if V4 != 146
$958    $48BB   SNE      V8, #BB         ; Skip if V8 != 187
$95A    $5189   UNKNOWN  $5189           ; Unknown 5xxx instruction
$95C    $EC8F   UNKNOWN  $EC8F           ; Unknown Exxx instruction
$95E    $553B   UNKNOWN  $553B           ; Unknown 5xxx instruction
$960    $21D9   CALL     $1D9            ; Call subroutine at 1D9
$962    $CE8D   RND      VE, #8D         ; VE = random & 8D
$964    $3C8D   SE       VC, #8D         ; Skip if VC == 141
$966    $D558   DRW      V5, V5, #8      ; Draw 8-byte sprite at V5, V5
$968    $4AEE   SNE      VA, #EE         ; Skip if VA != 238
$96A    $0AF4   SYS      $AF4            ; System call to AF4
$96C    $3818   SE       V8, #18         ; Skip if V8 == 24
$96E    $B565   JP       V0, $565        ; Jump to V0 + 565
$970    $2A1F   CALL     $A1F            ; Call subroutine at A1F
$972    $DAD3   DRW      VA, VD, #3      ; Draw 3-byte sprite at VA, VD
$974    $4F77   SNE      VF, #77         ; Skip if VF != 119
$976    $253F   CALL     $53F            ; Call subroutine at 53F
$978    $5F92   UNKNOWN  $5F92           ; Unknown 5xxx instruction
$97A    $3AC3   SE       VA, #C3         ; Skip if VA == 195
$97C    $B620   JP       V0, $620        ; Jump to V0 + 620
$97E    $BCF4   JP       V0, $CF4        ; Jump to V0 + CF4
$980    $C136   RND      V1, #36         ; V1 = random & 36
$982    $132F   JP       $32F            ; Jump to 32F
$984    $2FFB   CALL     $FFB            ; Call subroutine at FFB
$986    $CC9E   RND      VC, #9E         ; VC = random & 9E
$988    $E5E7   UNKNOWN  $E5E7           ; Unknown Exxx instruction
$98A    $D5E4   DRW      V5, VE, #4      ; Draw 4-byte sprite at V5, VE
$98C    $CC01   RND      VC, #01         ; VC = random & 01
$98E    $A61D   LD       I, $61D         ; Load 61D into I
$990    $214F   CALL     $14F            ; Call subroutine at 14F
$992    $D184   DRW      V1, V8, #4      ; Draw 4-byte sprite at V1, V8
$994    $0A1A   SYS      $A1A            ; System call to A1A
$996    $CF9D   RND      VF, #9D         ; VF = random & 9D
$998    $F587   UNKNOWN  F587            ; Unknown Fxxx instruction
$99A    $734C   ADD      V3, #4C         ; Add 76 to V3
$99C    $284D   CALL     $84D            ; Call subroutine at 84D
$99E    $B25C   JP       V0, $25C        ; Jump to V0 + 25C
$9A0    $EAE5   UNKNOWN  $EAE5           ; Unknown Exxx instruction
$9A2    $7C83   ADD      VC, #83         ; Add 131 to VC
$9A4    $F4E4   UNKNOWN  F4E4            ; Unknown Fxxx instruction
$9A6    $70E6   ADD      V0, #E6         ; Add 230 to V0
$9A8    $5007   UNKNOWN  $5007           ; Unknown 5xxx instruction
$9AA    $22DC   CALL     $2DC            ; Call subroutine at 2DC
$9AC    $F03E   UNKNOWN  F03E            ; Unknown Fxxx instruction
$9AE    $FA39   UNKNOWN  FA39            ; Unknown Fxxx instruction
$9B0    $FE93   UNKNOWN  FE93            ; Unknown Fxxx instruction
$9B2    $8984   ADD      V9, V8          ; V9 += V8, VF = carry
$9B4    $8192   AND      V1, V9          ; V1 &= V9
$9B6    $23DC   CALL     $3DC            ; Call subroutine at 3DC
$9B8    $E642   UNKNOWN  $E642           ; Unknown Exxx instruction
$9BA    $509A   UNKNOWN  $509A           ; Unknown 5xxx instruction
$9BC    $B1EE   JP       V0, $1EE        ; Jump to V0 + 1EE
$9BE    $385B   SE       V8, #5B         ; Skip if V8 == 91
$9C0    $788F   ADD      V8, #8F         ; Add 143 to V8
$9C2    $227D   CALL     $27D            ; Call subroutine at 27D
$9C4    $58F8   UNKNOWN  $58F8           ; Unknown 5xxx instruction
$9C6    $AD73   LD       I, $D73         ; Load D73 into I
$9C8    $39D2   SE       V9, #D2         ; Skip if V9 == 210
$9CA    $9210   SNE      V2, V1          ; Skip if V2 != V1
$9CC    $79D9   ADD      V9, #D9         ; Add 217 to V9
$9CE    $2AA1   CALL     $AA1            ; Call subroutine at AA1
$9D0    $B6D0   JP       V0, $6D0        ; Jump to V0 + 6D0
$9D2    $D3F0   DRW      V3, VF, #0      ; Draw 0-byte sprite at V3, VF
$9D4    $6C7E   LD       VC, #7E         ; Load 126 into VC
$9D6    $B7A2   JP       V0, $7A2        ; Jump to V0 + 7A2
$9D8    $E42A   UNKNOWN  $E42A           ; Unknown Exxx instruction
$9DA    $994E   UNKNOWN  $994E           ; Unknown 9xxx instruction
$9DC    $9CD7   UNKNOWN  $9CD7           ; Unknown 9xxx instruction
$9DE    $FB08   UNKNOWN  FB08            ; Unknown Fxxx instruction
$9E0    $3B0E   SE       VB, #0E         ; Skip if VB == 14
$9E2    $B424   JP       V0, $424        ; Jump to V0 + 424
$9E4    $725A   ADD      V2, #5A         ; Add 90 to V2
$9E6    $B4B9   JP       V0, $4B9        ; Jump to V0 + 4B9
$9E8    $F053   UNKNOWN  F053            ; Unknown Fxxx instruction
$9EA    $F434   UNKNOWN  F434            ; Unknown Fxxx instruction
$9EC    $1270   JP       $270            ; Jump to 270
$9EE    $99E7   UNKNOWN  $99E7           ; Unknown 9xxx instruction
$9F0    $C319   RND      V3, #19         ; V3 = random & 19
$9F2    $DAD3   DRW      VA, VD, #3      ; Draw 3-byte sprite at VA, VD
$9F4    $035D   SYS      $35D            ; System call to 35D
$9F6    $D2E2   DRW      V2, VE, #2      ; Draw 2-byte sprite at V2, VE
$9F8    $823A   UNKNOWN  823A            ; Unknown 8xxx instruction
$9FA    $A5CB   LD       I, $5CB         ; Load 5CB into I
$9FC    $D9DC   DRW      V9, VD, #C      ; Draw 12-byte sprite at V9, VD
$9FE    $6E94   LD       VE, #94         ; Load 148 into VE
$A00    $46F8   SNE      V6, #F8         ; Skip if V6 != 248
$A02    $5A7A   UNKNOWN  $5A7A           ; Unknown 5xxx instruction
$A04    $9292   UNKNOWN  $9292           ; Unknown 9xxx instruction
$A06    $72C4   ADD      V2, #C4         ; Add 196 to V2
$A08    $B70F   JP       V0, $70F        ; Jump to V0 + 70F
$A0A    $0E34   SYS      $E34            ; System call to E34
$A0C    $CA6E   RND      VA, #6E         ; VA = random & 6E
$A0E    $B1E7   JP       V0, $1E7        ; Jump to V0 + 1E7
$A10    $B104   JP       V0, $104        ; Jump to V0 + 104
$A12    $5BAE   UNKNOWN  $5BAE           ; Unknown 5xxx instruction
$A14    $5830   SE       V8, V3          ; Skip if V8 == V3
$A16    $F25F   UNKNOWN  F25F            ; Unknown Fxxx instruction
$A18    $02D1   SYS      $2D1            ; System call to 2D1
$A1A    $20A4   CALL     $0A4            ; Call subroutine at 0A4
$A1C    $84B3   XOR      V4, VB          ; V4 ^= VB
$A1E    $B12D   JP       V0, $12D        ; Jump to V0 + 12D
$A20    $7E6B   ADD      VE, #6B         ; Add 107 to VE
$A22    $9505   UNKNOWN  $9505           ; Unknown 9xxx instruction
$A24    $0075   SYS      $075            ; System call to 075
$A26    $82E1   OR       V2, VE          ; V2 |= VE
$A28    $8C5F   UNKNOWN  8C5F            ; Unknown 8xxx instruction
$A2A    $DCB9   DRW      VC, VB, #9      ; Draw 9-byte sprite at VC, VB
$A2C    $67AB   LD       V7, #AB         ; Load 171 into V7
$A2E    $F22B   UNKNOWN  F22B            ; Unknown Fxxx instruction
$A30    $3756   SE       V7, #56         ; Skip if V7 == 86
$A32    $8DE0   LD       VD, VE          ; VD = VE
$A34    $0D41   SYS      $D41            ; System call to D41
$A36    $719B   ADD      V1, #9B         ; Add 155 to V1
$A38    $E73A   UNKNOWN  $E73A           ; Unknown Exxx instruction
$A3A    $09C8   SYS      $9C8            ; System call to 9C8
$A3C    $4071   SNE      V0, #71         ; Skip if V0 != 113
$A3E    $D8AD   DRW      V8, VA, #D      ; Draw 13-byte sprite at V8, VA
$A40    $EB5C   UNKNOWN  $EB5C           ; Unknown Exxx instruction
$A42    $CD47   RND      VD, #47         ; VD = random & 47
$A44    $1142   JP       $142            ; Jump to 142
$A46    $416B   SNE      V1, #6B         ; Skip if V1 != 107
$A48    $155C   JP       $55C            ; Jump to 55C
$A4A    $A893   LD       I, $893         ; Load 893 into I
$A4C    $A915   LD       I, $915         ; Load 915 into I
$A4E    $0FC3   SYS      $FC3            ; System call to FC3
$A50    $4778   SNE      V7, #78         ; Skip if V7 != 120
$A52    $3FF5   SE       VF, #F5         ; Skip if VF == 245
$A54    $5C9E   UNKNOWN  $5C9E           ; Unknown 5xxx instruction
$A56    $D24D   DRW      V2, V4, #D      ; Draw 13-byte sprite at V2, V4
$A58    $C175   RND      V1, #75         ; V1 = random & 75
$A5A    $812A   UNKNOWN  812A            ; Unknown 8xxx instruction
$A5C    $432B   SNE      V3, #2B         ; Skip if V3 != 43
$A5E    $9AF3   UNKNOWN  $9AF3           ; Unknown 9xxx instruction
$A60    $4EE2   SNE      VE, #E2         ; Skip if VE != 226
$A62    $703E   ADD      V0, #3E         ; Add 62 to V0
$A64    $1EBE   JP       $EBE            ; Jump to EBE
$A66    $A455   LD       I, $455         ; Load 455 into I
$A68    $4330   SNE      V3, #30         ; Skip if V3 != 48
$A6A    $6D8B   LD       VD, #8B         ; Load 139 into VD
$A6C    $59CE   UNKNOWN  $59CE           ; Unknown 5xxx instruction
$A6E    $81F1   OR       V1, VF          ; V1 |= VF
$A70    $259C   CALL     $59C            ; Call subroutine at 59C
$A72    $2DFF   CALL     $DFF            ; Call subroutine at DFF
$A74    $2A08   CALL     $A08            ; Call subroutine at A08
$A76    $EAD0   UNKNOWN  $EAD0           ; Unknown Exxx instruction
$A78    $03E9   SYS      $3E9            ; System call to 3E9
$A7A    $F131   UNKNOWN  F131            ; Unknown Fxxx instruction
$A7C    $D9C6   DRW      V9, VC, #6      ; Draw 6-byte sprite at V9, VC
$A7E    $17E2   JP       $7E2            ; Jump to 7E2
$A80    $BC03   JP       V0, $C03        ; Jump to V0 + C03
$A82    $A167   LD       I, $167         ; Load 167 into I
$A84    $233B   CALL     $33B            ; Call subroutine at 33B
$A86    $13D4   JP       $3D4            ; Jump to 3D4
$A88    $92F7   UNKNOWN  $92F7           ; Unknown 9xxx instruction
$A8A    $EA46   UNKNOWN  $EA46           ; Unknown Exxx instruction
$A8C    $A1B8   LD       I, $1B8         ; Load 1B8 into I
$A8E    $159E   JP       $59E            ; Jump to 59E
$A90    $96CC   UNKNOWN  $96CC           ; Unknown 9xxx instruction
$A92    $B5CD   JP       V0, $5CD        ; Jump to V0 + 5CD
$A94    $94E1   UNKNOWN  $94E1           ; Unknown 9xxx instruction
$A96    $A06F   LD       I, $06F         ; Load 06F into I
$A98    $D7AA   DRW      V7, VA, #A      ; Draw 10-byte sprite at V7, VA
$A9A    $5DAF   UNKNOWN  $5DAF           ; Unknown 5xxx instruction
$A9C    $8C11   OR       VC, V1          ; VC |= V1
$A9E    $C5BB   RND      V5, #BB         ; V5 = random & BB
$AA0    $6EFF   LD       VE, #FF         ; Load 255 into VE
$AA2    $6A96   LD       VA, #96         ; Load 150 into VA
$AA4    $BA99   JP       V0, $A99        ; Jump to V0 + A99
$AA6    $5951   UNKNOWN  $5951           ; Unknown 5xxx instruction
$AA8    $830B   UNKNOWN  830B            ; Unknown 8xxx instruction
$AAA    $9F28   UNKNOWN  $9F28           ; Unknown 9xxx instruction
$AAC    $38E4   SE       V8, #E4         ; Skip if V8 == 228
$AAE    $8642   AND      V6, V4          ; V6 &= V4
$AB0    $F408   UNKNOWN  F408            ; Unknown Fxxx instruction
$AB2    $61EB   LD       V1, #EB         ; Load 235 into V1
$AB4    $CE4B   RND      VE, #4B         ; VE = random & 4B
$AB6    $FCE5   UNKNOWN  FCE5            ; Unknown Fxxx instruction
$AB8    $251D   CALL     $51D            ; Call subroutine at 51D
$ABA    $D0A9   DRW      V0, VA, #9      ; Draw 9-byte sprite at V0, VA
$ABC    $A8AA   LD       I, $8AA         ; Load 8AA into I
$ABE    $5B8E   UNKNOWN  $5B8E           ; Unknown 5xxx instruction
$AC0    $AB91   LD       I, $B91         ; Load B91 into I
$AC2    $4FF6   SNE      VF, #F6         ; Skip if VF != 246
$AC4    $3D52   SE       VD, #52         ; Skip if VD == 82
$AC6    $0D09   SYS      $D09            ; System call to D09
$AC8    $0363   SYS      $363            ; System call to 363
$ACA    $67C3   LD       V7, #C3         ; Load 195 into V7
$ACC    $E341   UNKNOWN  $E341           ; Unknown Exxx instruction
$ACE    $4945   SNE      V9, #45         ; Skip if V9 != 69
$AD0    $9FFF   UNKNOWN  $9FFF           ; Unknown 9xxx instruction
$AD2    $9AE8   UNKNOWN  $9AE8           ; Unknown 9xxx instruction
$AD4    $4207   SNE      V2, #07         ; Skip if V2 != 7
$AD6    $D818   DRW      V8, V1, #8      ; Draw 8-byte sprite at V8, V1
$AD8    $591C   UNKNOWN  $591C           ; Unknown 5xxx instruction
$ADA    $C0A3   RND      V0, #A3         ; V0 = random & A3
$ADC    $0E8A   SYS      $E8A            ; System call to E8A
$ADE    $E567   UNKNOWN  $E567           ; Unknown Exxx instruction
$AE0    $E4E1   UNKNOWN  $E4E1           ; Unknown Exxx instruction
$AE2    $AE82   LD       I, $E82         ; Load E82 into I
$AE4    $F878   UNKNOWN  F878            ; Unknown Fxxx instruction
$AE6    $02EB   SYS      $2EB            ; System call to 2EB
$AE8    $6744   LD       V7, #44         ; Load 68 into V7
$AEA    $0F46   SYS      $F46            ; System call to F46
$AEC    $6C57   LD       VC, #57         ; Load 87 into VC
$AEE    $16EA   JP       $6EA            ; Jump to 6EA
$AF0    $C720   RND      V7, #20         ; V7 = random & 20
$AF2    $6C04   LD       VC, #04         ; Load 4 into VC
$AF4    $0F08   SYS      $F08            ; System call to F08
$AF6    $3730   SE       V7, #30         ; Skip if V7 == 48
$AF8    $EAF1   UNKNOWN  $EAF1           ; Unknown Exxx instruction
$AFA    $E48C   UNKNOWN  $E48C           ; Unknown Exxx instruction
$AFC    $92FB   UNKNOWN  $92FB           ; Unknown 9xxx instruction
$AFE    $6BC1   LD       VB, #C1         ; Load 193 into VB
$B00    $44D0   SNE      V4, #D0         ; Skip if V4 != 208
$B02    $FAFF   UNKNOWN  FAFF            ; Unknown Fxxx instruction
$B04    $29C5   CALL     $9C5            ; Call subroutine at 9C5
$B06    $44E8   SNE      V4, #E8         ; Skip if V4 != 232
$B08    $EB3D   UNKNOWN  $EB3D           ; Unknown Exxx instruction
$B0A    $2C09   CALL     $C09            ; Call subroutine at C09
$B0C    $F435   UNKNOWN  F435            ; Unknown Fxxx instruction
$B0E    $B906   JP       V0, $906        ; Jump to V0 + 906
$B10    $EC45   UNKNOWN  $EC45           ; Unknown Exxx instruction
$B12    $916A   UNKNOWN  $916A           ; Unknown 9xxx instruction
$B14    $0F37   SYS      $F37            ; System call to F37
$B16    $2C0E   CALL     $C0E            ; Call subroutine at C0E
$B18    $F02F   UNKNOWN  F02F            ; Unknown Fxxx instruction
$B1A    $8994   ADD      V9, V9          ; V9 += V9, VF = carry
$B1C    $D976   DRW      V9, V7, #6      ; Draw 6-byte sprite at V9, V7
$B1E    $B201   JP       V0, $201        ; Jump to V0 + 201
$B20    $B977   JP       V0, $977        ; Jump to V0 + 977
$B22    $53F7   UNKNOWN  $53F7           ; Unknown 5xxx instruction
$B24    $D87F   DRW      V8, V7, #F      ; Draw 15-byte sprite at V8, V7
$B26    $BCAB   JP       V0, $CAB        ; Jump to V0 + CAB
$B28    $23BE   CALL     $3BE            ; Call subroutine at 3BE
$B2A    $2E95   CALL     $E95            ; Call subroutine at E95
$B2C    $CF44   RND      VF, #44         ; VF = random & 44
$B2E    $63FC   LD       V3, #FC         ; Load 252 into V3
$B30    $E483   UNKNOWN  $E483           ; Unknown Exxx instruction
$B32    $A8C8   LD       I, $8C8         ; Load 8C8 into I
$B34    $125B   JP       $25B            ; Jump to 25B
$B36    $7E61   ADD      VE, #61         ; Add 97 to VE
$B38    $E83B   UNKNOWN  $E83B           ; Unknown Exxx instruction
$B3A    $8404   ADD      V4, V0          ; V4 += V0, VF = carry
$B3C    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$B3E    $34B3   SE       V4, #B3         ; Skip if V4 == 179
$B40    $B248   JP       V0, $248        ; Jump to V0 + 248
$B42    $3DCA   SE       VD, #CA         ; Skip if VD == 202
$B44    $863B   UNKNOWN  863B            ; Unknown 8xxx instruction
$B46    $D156   DRW      V1, V5, #6      ; Draw 6-byte sprite at V1, V5
$B48    $21B1   CALL     $1B1            ; Call subroutine at 1B1
$B4A    $B698   JP       V0, $698        ; Jump to V0 + 698
$B4C    $6AB0   LD       VA, #B0         ; Load 176 into VA
$B4E    $E432   UNKNOWN  $E432           ; Unknown Exxx instruction
$B50    $BCED   JP       V0, $CED        ; Jump to V0 + CED
$B52    $6EF9   LD       VE, #F9         ; Load 249 into VE
$B54    $CE8E   RND      VE, #8E         ; VE = random & 8E
$B56    $E225   UNKNOWN  $E225           ; Unknown Exxx instruction
$B58    $2690   CALL     $690            ; Call subroutine at 690
$B5A    $F188   UNKNOWN  F188            ; Unknown Fxxx instruction
$B5C    $61F8   LD       V1, #F8         ; Load 248 into V1
$B5E    $DB42   DRW      VB, V4, #2      ; Draw 2-byte sprite at VB, V4
$B60    $94D4   UNKNOWN  $94D4           ; Unknown 9xxx instruction
$B62    $5237   UNKNOWN  $5237           ; Unknown 5xxx instruction
$B64    $E16D   UNKNOWN  $E16D           ; Unknown Exxx instruction
$B66    $9458   UNKNOWN  $9458           ; Unknown 9xxx instruction
$B68    $1BDD   JP       $BDD            ; Jump to BDD
$B6A    $4741   SNE      V7, #41         ; Skip if V7 != 65
$B6C    $B05F   JP       V0, $05F        ; Jump to V0 + 05F
$B6E    $89E4   ADD      V9, VE          ; V9 += VE, VF = carry
$B70    $C56B   RND      V5, #6B         ; V5 = random & 6B
$B72    $168C   JP       $68C            ; Jump to 68C
$B74    $0A03   SYS      $A03            ; System call to A03
$B76    $231F   CALL     $31F            ; Call subroutine at 31F
$B78    $4BFC   SNE      VB, #FC         ; Skip if VB != 252
$B7A    $93DA   UNKNOWN  $93DA           ; Unknown 9xxx instruction
$B7C    $45A2   SNE      V5, #A2         ; Skip if V5 != 162
$B7E    $277A   CALL     $77A            ; Call subroutine at 77A
$B80    $918B   UNKNOWN  $918B           ; Unknown 9xxx instruction
$B82    $1E12   JP       $E12            ; Jump to E12
$B84    $A881   LD       I, $881         ; Load 881 into I
$B86    $8E11   OR       VE, V1          ; VE |= V1
$B88    $33C5   SE       V3, #C5         ; Skip if V3 == 197
$B8A    $F1F5   UNKNOWN  F1F5            ; Unknown Fxxx instruction
$B8C    $4364   SNE      V3, #64         ; Skip if V3 != 100
$B8E    $8168   UNKNOWN  8168            ; Unknown 8xxx instruction
$B90    $68EB   LD       V8, #EB         ; Load 235 into V8
$B92    $C7C6   RND      V7, #C6         ; V7 = random & C6
$B94    $B1CA   JP       V0, $1CA        ; Jump to V0 + 1CA
$B96    $65D2   LD       V5, #D2         ; Load 210 into V5
$B98    $4E84   SNE      VE, #84         ; Skip if VE != 132
$B9A    $72AB   ADD      V2, #AB         ; Add 171 to V2
$B9C    $3B3F   SE       VB, #3F         ; Skip if VB == 63
$B9E    $793F   ADD      V9, #3F         ; Add 63 to V9
$BA0    $0481   SYS      $481            ; System call to 481
$BA2    $0917   SYS      $917            ; System call to 917
$BA4    $30F6   SE       V0, #F6         ; Skip if V0 == 246
$BA6    $99AD   UNKNOWN  $99AD           ; Unknown 9xxx instruction
$BA8    $92A6   UNKNOWN  $92A6           ; Unknown 9xxx instruction
$BAA    $60BA   LD       V0, #BA         ; Load 186 into V0
$BAC    $B5DC   JP       V0, $5DC        ; Jump to V0 + 5DC
$BAE    $E5D7   UNKNOWN  $E5D7           ; Unknown Exxx instruction
$BB0    $4C89   SNE      VC, #89         ; Skip if VC != 137
$BB2    $338F   SE       V3, #8F         ; Skip if V3 == 143
$BB4    $1B7C   JP       $B7C            ; Jump to B7C
$BB6    $1EA1   JP       $EA1            ; Jump to EA1
$BB8    $86EA   UNKNOWN  86EA            ; Unknown 8xxx instruction
$BBA    $EDEE   UNKNOWN  $EDEE           ; Unknown Exxx instruction
$BBC    $E1BB   UNKNOWN  $E1BB           ; Unknown Exxx instruction
$BBE    $8E88   UNKNOWN  8E88            ; Unknown 8xxx instruction
$BC0    $F620   UNKNOWN  F620            ; Unknown Fxxx instruction
$BC2    $F1CE   UNKNOWN  F1CE            ; Unknown Fxxx instruction
$BC4    $AA4F   LD       I, $A4F         ; Load A4F into I
$BC6    $58C4   UNKNOWN  $58C4           ; Unknown 5xxx instruction
$BC8    $6031   LD       V0, #31         ; Load 49 into V0
$BCA    $8A0A   UNKNOWN  8A0A            ; Unknown 8xxx instruction
$BCC    $9789   UNKNOWN  $9789           ; Unknown 9xxx instruction
$BCE    $A3FD   LD       I, $3FD         ; Load 3FD into I
$BD0    $6498   LD       V4, #98         ; Load 152 into V4
$BD2    $A141   LD       I, $141         ; Load 141 into I
$BD4    $5BD0   SE       VB, VD          ; Skip if VB == VD
$BD6    $718C   ADD      V1, #8C         ; Add 140 to V1
$BD8    $1F47   JP       $F47            ; Jump to F47
$BDA    $600A   LD       V0, #0A         ; Load 10 into V0
$BDC    $9408   UNKNOWN  $9408           ; Unknown 9xxx instruction
$BDE    $F7A5   UNKNOWN  F7A5            ; Unknown Fxxx instruction
$BE0    $3B07   SE       VB, #07         ; Skip if VB == 7
$BE2    $C19A   RND      V1, #9A         ; V1 = random & 9A
$BE4    $5B7F   UNKNOWN  $5B7F           ; Unknown 5xxx instruction
$BE6    $9561   UNKNOWN  $9561           ; Unknown 9xxx instruction
$BE8    $35A1   SE       V5, #A1         ; Skip if V5 == 161
$BEA    $2A5B   CALL     $A5B            ; Call subroutine at A5B
$BEC    $6F8E   LD       VF, #8E         ; Load 142 into VF
$BEE    $ECDD   UNKNOWN  $ECDD           ; Unknown Exxx instruction
$BF0    $29B6   CALL     $9B6            ; Call subroutine at 9B6
$BF2    $D0A1   DRW      V0, VA, #1      ; Draw 1-byte sprite at V0, VA
$BF4    $B450   JP       V0, $450        ; Jump to V0 + 450
$BF6    $896A   UNKNOWN  896A            ; Unknown 8xxx instruction
$BF8    $082A   SYS      $82A            ; System call to 82A
$BFA    $D7A8   DRW      V7, VA, #8      ; Draw 8-byte sprite at V7, VA
$BFC    $81BD   UNKNOWN  81BD            ; Unknown 8xxx instruction
$BFE    $1EAB   JP       $EAB            ; Jump to EAB
$C00    $87A2   AND      V7, VA          ; V7 &= VA
$C02    $36AF   SE       V6, #AF         ; Skip if V6 == 175
$C04    $836D   UNKNOWN  836D            ; Unknown 8xxx instruction
$C06    $0684   SYS      $684            ; System call to 684
$C08    $ED19   UNKNOWN  $ED19           ; Unknown Exxx instruction
$C0A    $22C2   CALL     $2C2            ; Call subroutine at 2C2
$C0C    $E1F2   UNKNOWN  $E1F2           ; Unknown Exxx instruction
$C0E    $578A   UNKNOWN  $578A           ; Unknown 5xxx instruction
$C10    $A726   LD       I, $726         ; Load 726 into I
$C12    $7835   ADD      V8, #35         ; Add 53 to V8
$C14    $2E28   CALL     $E28            ; Call subroutine at E28
$C16    $238F   CALL     $38F            ; Call subroutine at 38F
$C18    $9F4F   UNKNOWN  $9F4F           ; Unknown 9xxx instruction
$C1A    $0AFF   SYS      $AFF            ; System call to AFF
$C1C    $AA31   LD       I, $A31         ; Load A31 into I
$C1E    $368F   SE       V6, #8F         ; Skip if V6 == 143
$C20    $A46A   LD       I, $46A         ; Load 46A into I
$C22    $D155   DRW      V1, V5, #5      ; Draw 5-byte sprite at V1, V5
$C24    $8298   UNKNOWN  8298            ; Unknown 8xxx instruction
$C26    $B545   JP       V0, $545        ; Jump to V0 + 545
$C28    $2803   CALL     $803            ; Call subroutine at 803
$C2A    $AC08   LD       I, $C08         ; Load C08 into I
$C2C    $7EFF   ADD      VE, #FF         ; Add 255 to VE
$C2E    $B41F   JP       V0, $41F        ; Jump to V0 + 41F
$C30    $6263   LD       V2, #63         ; Load 99 into V2
$C32    $F4D3   UNKNOWN  F4D3            ; Unknown Fxxx instruction
$C34    $BDB2   JP       V0, $DB2        ; Jump to V0 + DB2
$C36    $1FF3   JP       $FF3            ; Jump to FF3
$C38    $EEB6   UNKNOWN  $EEB6           ; Unknown Exxx instruction
$C3A    $E225   UNKNOWN  $E225           ; Unknown Exxx instruction
$C3C    $3CE3   SE       VC, #E3         ; Skip if VC == 227
$C3E    $CD4C   RND      VD, #4C         ; VD = random & 4C
$C40    $AADB   LD       I, $ADB         ; Load ADB into I
$C42    $FBBC   UNKNOWN  FBBC            ; Unknown Fxxx instruction
$C44    $8A31   OR       VA, V3          ; VA |= V3
$C46    $39CC   SE       V9, #CC         ; Skip if V9 == 204
$C48    $28B4   CALL     $8B4            ; Call subroutine at 8B4
$C4A    $54D7   UNKNOWN  $54D7           ; Unknown 5xxx instruction
$C4C    $E101   UNKNOWN  $E101           ; Unknown Exxx instruction
$C4E    $39ED   SE       V9, #ED         ; Skip if V9 == 237
$C50    $30AA   SE       V0, #AA         ; Skip if V0 == 170
$C52    $0D0F   SYS      $D0F            ; System call to D0F
$C54    $34D5   SE       V4, #D5         ; Skip if V4 == 213
$C56    $52A8   UNKNOWN  $52A8           ; Unknown 5xxx instruction
$C58    $5248   UNKNOWN  $5248           ; Unknown 5xxx instruction
$C5A    $7716   ADD      V7, #16         ; Add 22 to V7
$C5C    $447E   SNE      V4, #7E         ; Skip if V4 != 126
$C5E    $7C50   ADD      VC, #50         ; Add 80 to VC
$C60    $8809   UNKNOWN  8809            ; Unknown 8xxx instruction
$C62    $7ED5   ADD      VE, #D5         ; Add 213 to VE
$C64    $7A44   ADD      VA, #44         ; Add 68 to VA
$C66    $3187   SE       V1, #87         ; Skip if V1 == 135
$C68    $00E7   SYS      $0E7            ; System call to 0E7
$C6A    $A9F3   LD       I, $9F3         ; Load 9F3 into I
$C6C    $235E   CALL     $35E            ; Call subroutine at 35E
$C6E    $F81D   UNKNOWN  F81D            ; Unknown Fxxx instruction
$C70    $9402   UNKNOWN  $9402           ; Unknown 9xxx instruction
$C72    $513E   UNKNOWN  $513E           ; Unknown 5xxx instruction
$C74    $3884   SE       V8, #84         ; Skip if V8 == 132
$C76    $D0E8   DRW      V0, VE, #8      ; Draw 8-byte sprite at V0, VE
$C78    $9458   UNKNOWN  $9458           ; Unknown 9xxx instruction
$C7A    $C3C6   RND      V3, #C6         ; V3 = random & C6
$C7C    $319F   SE       V1, #9F         ; Skip if V1 == 159
$C7E    $91BA   UNKNOWN  $91BA           ; Unknown 9xxx instruction
$C80    $6618   LD       V6, #18         ; Load 24 into V6
$C82    $6966   LD       V9, #66         ; Load 102 into V9
$C84    $1325   JP       $325            ; Jump to 325
$C86    $24C3   CALL     $4C3            ; Call subroutine at 4C3
$C88    $1FF7   JP       $FF7            ; Jump to FF7
$C8A    $8A21   OR       VA, V2          ; VA |= V2
$C8C    $32AE   SE       V2, #AE         ; Skip if V2 == 174
$C8E    $C468   RND      V4, #68         ; V4 = random & 68
$C90    $78AA   ADD      V8, #AA         ; Add 170 to V8
$C92    $22A2   CALL     $2A2            ; Call subroutine at 2A2
$C94    $B665   JP       V0, $665        ; Jump to V0 + 665
$C96    $6F71   LD       VF, #71         ; Load 113 into VF
$C98    $C0DA   RND      V0, #DA         ; V0 = random & DA
$C9A    $C3A0   RND      V3, #A0         ; V3 = random & A0
$C9C    $A9B4   LD       I, $9B4         ; Load 9B4 into I
$C9E    $83BB   UNKNOWN  83BB            ; Unknown 8xxx instruction
$CA0    $9906   UNKNOWN  $9906           ; Unknown 9xxx instruction
$CA2    $13D7   JP       $3D7            ; Jump to 3D7
$CA4    $1CAF   JP       $CAF            ; Jump to CAF
$CA6    $F4E3   UNKNOWN  F4E3            ; Unknown Fxxx instruction
$CA8    $29CB   CALL     $9CB            ; Call subroutine at 9CB
$CAA    $E162   UNKNOWN  $E162           ; Unknown Exxx instruction
$CAC    $6B5A   LD       VB, #5A         ; Load 90 into VB
$CAE    $3ADE   SE       VA, #DE         ; Skip if VA == 222
$CB0    $0B60   SYS      $B60            ; System call to B60
$CB2    $4739   SNE      V7, #39         ; Skip if V7 != 57
$CB4    $720A   ADD      V2, #0A         ; Add 10 to V2
$CB6    $3109   SE       V1, #09         ; Skip if V1 == 9
$CB8    $FB8D   UNKNOWN  FB8D            ; Unknown Fxxx instruction
$CBA    $88E5   SUB      V8, VE          ; V8 -= VE, VF = !borrow
$CBC    $9AB7   UNKNOWN  $9AB7           ; Unknown 9xxx instruction
$CBE    $3467   SE       V4, #67         ; Skip if V4 == 103
$CC0    $E3EC   UNKNOWN  $E3EC           ; Unknown Exxx instruction
$CC2    $6F0A   LD       VF, #0A         ; Load 10 into VF
$CC4    $D8D0   DRW      V8, VD, #0      ; Draw 0-byte sprite at V8, VD
$CC6    $6DE8   LD       VD, #E8         ; Load 232 into VD
$CC8    $D2A1   DRW      V2, VA, #1      ; Draw 1-byte sprite at V2, VA
$CCA    $B441   JP       V0, $441        ; Jump to V0 + 441
$CCC    $7306   ADD      V3, #06         ; Add 6 to V3
$CCE    $4E64   SNE      VE, #64         ; Skip if VE != 100
$CD0    $0ACF   SYS      $ACF            ; System call to ACF
$CD2    $1034   JP       $034            ; Jump to 034
$CD4    $32E7   SE       V2, #E7         ; Skip if V2 == 231
$CD6    $AE6F   LD       I, $E6F         ; Load E6F into I
$CD8    $6D0A   LD       VD, #0A         ; Load 10 into VD
$CDA    $FB97   UNKNOWN  FB97            ; Unknown Fxxx instruction
$CDC    $024D   SYS      $24D            ; System call to 24D
$CDE    $A788   LD       I, $788         ; Load 788 into I
$CE0    $3FE9   SE       VF, #E9         ; Skip if VF == 233
$CE2    $F10D   UNKNOWN  F10D            ; Unknown Fxxx instruction
$CE4    $7A43   ADD      VA, #43         ; Add 67 to VA
$CE6    $BAE5   JP       V0, $AE5        ; Jump to V0 + AE5
$CE8    $12EA   JP       $2EA            ; Jump to 2EA
$CEA    $AADC   LD       I, $ADC         ; Load ADC into I
$CEC    $E920   UNKNOWN  $E920           ; Unknown Exxx instruction
$CEE    $45AF   SNE      V5, #AF         ; Skip if V5 != 175
$CF0    $1D23   JP       $D23            ; Jump to D23
$CF2    $2C8C   CALL     $C8C            ; Call subroutine at C8C
$CF4    $B6A1   JP       V0, $6A1        ; Jump to V0 + 6A1
$CF6    $E869   UNKNOWN  $E869           ; Unknown Exxx instruction
$CF8    $C9A7   RND      V9, #A7         ; V9 = random & A7
$CFA    $BF1F   JP       V0, $F1F        ; Jump to V0 + F1F
$CFC    $52C5   UNKNOWN  $52C5           ; Unknown 5xxx instruction
$CFE    $948B   UNKNOWN  $948B           ; Unknown 9xxx instruction
$D00    $B75F   JP       V0, $75F        ; Jump to V0 + 75F
$D02    $7181   ADD      V1, #81         ; Add 129 to V1
$D04    $6593   LD       V5, #93         ; Load 147 into V5
$D06    $3BC9   SE       VB, #C9         ; Skip if VB == 201
$D08    $1F16   JP       $F16            ; Jump to F16
$D0A    $2FA2   CALL     $FA2            ; Call subroutine at FA2
$D0C    $671D   LD       V7, #1D         ; Load 29 into V7
$D0E    $1C92   JP       $C92            ; Jump to C92
$D10    $1A85   JP       $A85            ; Jump to A85
$D12    $B7D5   JP       V0, $7D5        ; Jump to V0 + 7D5
$D14    $0F71   SYS      $F71            ; System call to F71
$D16    $30BF   SE       V0, #BF         ; Skip if V0 == 191
$D18    $8261   OR       V2, V6          ; V2 |= V6
$D1A    $5BA6   UNKNOWN  $5BA6           ; Unknown 5xxx instruction
$D1C    $4A77   SNE      VA, #77         ; Skip if VA != 119
$D1E    $9F3A   UNKNOWN  $9F3A           ; Unknown 9xxx instruction
$D20    $AADA   LD       I, $ADA         ; Load ADA into I
$D22    $6FC8   LD       VF, #C8         ; Load 200 into VF
$D24    $AA42   LD       I, $A42         ; Load A42 into I
$D26    $E923   UNKNOWN  $E923           ; Unknown Exxx instruction
$D28    $BEE0   JP       V0, $EE0        ; Jump to V0 + EE0
$D2A    $0DB2   SYS      $DB2            ; System call to DB2
$D2C    $2D1F   CALL     $D1F            ; Call subroutine at D1F
$D2E    $3A0D   SE       VA, #0D         ; Skip if VA == 13
$D30    $3569   SE       V5, #69         ; Skip if V5 == 105
$D32    $91C6   UNKNOWN  $91C6           ; Unknown 9xxx instruction
$D34    $BEEF   JP       V0, $EEF        ; Jump to V0 + EEF
$D36    $1641   JP       $641            ; Jump to 641
$D38    $AA6D   LD       I, $A6D         ; Load A6D into I
$D3A    $0B31   SYS      $B31            ; System call to B31
$D3C    $B6CB   JP       V0, $6CB        ; Jump to V0 + 6CB
$D3E    $C027   RND      V0, #27         ; V0 = random & 27
$D40    $9AB2   UNKNOWN  $9AB2           ; Unknown 9xxx instruction
$D42    $1060   JP       $060            ; Jump to 060
$D44    $E948   UNKNOWN  $E948           ; Unknown Exxx instruction
$D46    $2D3C   CALL     $D3C            ; Call subroutine at D3C
$D48    $5706   UNKNOWN  $5706           ; Unknown 5xxx instruction
$D4A    $560D   UNKNOWN  $560D           ; Unknown 5xxx instruction
$D4C    $3A81   SE       VA, #81         ; Skip if VA == 129
$D4E    $A393   LD       I, $393         ; Load 393 into I
$D50    $68D2   LD       V8, #D2         ; Load 210 into V8
$D52    $B815   JP       V0, $815        ; Jump to V0 + 815
$D54    $6D17   LD       VD, #17         ; Load 23 into VD
$D56    $B063   JP       V0, $063        ; Jump to V0 + 063
$D58    $71A7   ADD      V1, #A7         ; Add 167 to V1
$D5A    $B4AE   JP       V0, $4AE        ; Jump to V0 + 4AE
$D5C    $C7DC   RND      V7, #DC         ; V7 = random & DC
$D5E    $3F26   SE       VF, #26         ; Skip if VF == 38
$D60    $DFA1   DRW      VF, VA, #1      ; Draw 1-byte sprite at VF, VA
$D62    $9069   UNKNOWN  $9069           ; Unknown 9xxx instruction
$D64    $422D   SNE      V2, #2D         ; Skip if V2 != 45
$D66    $A4E2   LD       I, $4E2         ; Load 4E2 into I
$D68    $CF5B   RND      VF, #5B         ; VF = random & 5B
$D6A    $D069   DRW      V0, V6, #9      ; Draw 9-byte sprite at V0, V6
$D6C    $196C   JP       $96C            ; Jump to 96C
$D6E    $B39E   JP       V0, $39E        ; Jump to V0 + 39E
$D70    $79F8   ADD      V9, #F8         ; Add 248 to V9
$D72    $7EC4   ADD      VE, #C4         ; Add 196 to VE
$D74    $031D   SYS      $31D            ; System call to 31D
$D76    $2D1D   CALL     $D1D            ; Call subroutine at D1D
$D78    $4304   SNE      V3, #04         ; Skip if V3 != 4
$D7A    $5B87   UNKNOWN  $5B87           ; Unknown 5xxx instruction
$D7C    $28DB   CALL     $8DB            ; Call subroutine at 8DB
$D7E    $BB4B   JP       V0, $B4B        ; Jump to V0 + B4B
$D80    $F04E   UNKNOWN  F04E            ; Unknown Fxxx instruction
$D82    $C986   RND      V9, #86         ; V9 = random & 86
$D84    $DC22   DRW      VC, V2, #2      ; Draw 2-byte sprite at VC, V2
$D86    $EAF8   UNKNOWN  $EAF8           ; Unknown Exxx instruction
$D88    $3DBD   SE       VD, #BD         ; Skip if VD == 189
$D8A    $1C7F   JP       $C7F            ; Jump to C7F
$D8C    $4ADF   SNE      VA, #DF         ; Skip if VA != 223
$D8E    $FC9E   UNKNOWN  FC9E            ; Unknown Fxxx instruction
$D90    $089E   SYS      $89E            ; System call to 89E
$D92    $922D   UNKNOWN  $922D           ; Unknown 9xxx instruction
$D94    $892D   UNKNOWN  892D            ; Unknown 8xxx instruction
$D96    $45E4   SNE      V5, #E4         ; Skip if V5 != 228
$D98    $1800   JP       $800            ; Jump to 800
$D9A    $86FF   UNKNOWN  86FF            ; Unknown 8xxx instruction
$D9C    $5603   UNKNOWN  $5603           ; Unknown 5xxx instruction
$D9E    $821B   UNKNOWN  821B            ; Unknown 8xxx instruction
$DA0    $1C17   JP       $C17            ; Jump to C17
$DA2    $ED5A   UNKNOWN  $ED5A           ; Unknown Exxx instruction
$DA4    $EF61   UNKNOWN  $EF61           ; Unknown Exxx instruction
$DA6    $9AD3   UNKNOWN  $9AD3           ; Unknown 9xxx instruction
$DA8    $C8D9   RND      V8, #D9         ; V8 = random & D9
$DAA    $1538   JP       $538            ; Jump to 538
$DAC    $88CF   UNKNOWN  88CF            ; Unknown 8xxx instruction
$DAE    $7C33   ADD      VC, #33         ; Add 51 to VC
$DB0    $7775   ADD      V7, #75         ; Add 117 to V7
$DB2    $C304   RND      V3, #04         ; V3 = random & 04
$DB4    $2FCD   CALL     $FCD            ; Call subroutine at FCD
$DB6    $7E65   ADD      VE, #65         ; Add 101 to VE
$DB8    $0044   SYS      $044            ; System call to 044
$DBA    $EE64   UNKNOWN  $EE64           ; Unknown Exxx instruction
$DBC    $BAE0   JP       V0, $AE0        ; Jump to V0 + AE0
$DBE    $AC3F   LD       I, $C3F         ; Load C3F into I
$DC0    $DBB1   DRW      VB, VB, #1      ; Draw 1-byte sprite at VB, VB
$DC2    $F8F7   UNKNOWN  F8F7            ; Unknown Fxxx instruction
$DC4    $52EE   UNKNOWN  $52EE           ; Unknown 5xxx instruction
$DC6    $B2F1   JP       V0, $2F1        ; Jump to V0 + 2F1
$DC8    $5274   UNKNOWN  $5274           ; Unknown 5xxx instruction
$DCA    $7C2E   ADD      VC, #2E         ; Add 46 to VC
$DCC    $0DF5   SYS      $DF5            ; System call to DF5
$DCE    $7DCB   ADD      VD, #CB         ; Add 203 to VD
$DD0    $D1A7   DRW      V1, VA, #7      ; Draw 7-byte sprite at V1, VA
$DD2    $E563   UNKNOWN  $E563           ; Unknown Exxx instruction
$DD4    $5F45   UNKNOWN  $5F45           ; Unknown 5xxx instruction
$DD6    $C7DD   RND      V7, #DD         ; V7 = random & DD
$DD8    $5A9F   UNKNOWN  $5A9F           ; Unknown 5xxx instruction
$DDA    $C983   RND      V9, #83         ; V9 = random & 83
$DDC    $4CA7   SNE      VC, #A7         ; Skip if VC != 167
$DDE    $94B7   UNKNOWN  $94B7           ; Unknown 9xxx instruction
$DE0    $DC97   DRW      VC, V9, #7      ; Draw 7-byte sprite at VC, V9
$DE2    $FEE9   UNKNOWN  FEE9            ; Unknown Fxxx instruction
$DE4    $B222   JP       V0, $222        ; Jump to V0 + 222
$DE6    $AE6A   LD       I, $E6A         ; Load E6A into I
$DE8    $1B0E   JP       $B0E            ; Jump to B0E
$DEA    $9073   UNKNOWN  $9073           ; Unknown 9xxx instruction
$DEC    $1B49   JP       $B49            ; Jump to B49
$DEE    $55F2   UNKNOWN  $55F2           ; Unknown 5xxx instruction
$DF0    $C488   RND      V4, #88         ; V4 = random & 88
$DF2    $5B44   UNKNOWN  $5B44           ; Unknown 5xxx instruction
$DF4    $D1CF   DRW      V1, VC, #F      ; Draw 15-byte sprite at V1, VC
$DF6    $1A45   JP       $A45            ; Jump to A45
$DF8    $E4CC   UNKNOWN  $E4CC           ; Unknown Exxx instruction
$DFA    $E535   UNKNOWN  $E535           ; Unknown Exxx instruction
$DFC    $BF0D   JP       V0, $F0D        ; Jump to V0 + F0D
$DFE    $6C55   LD       VC, #55         ; Load 85 into VC
$E00    $B9C4   JP       V0, $9C4        ; Jump to V0 + 9C4
$E02    $0828   SYS      $828            ; System call to 828
$E04    $D3B3   DRW      V3, VB, #3      ; Draw 3-byte sprite at V3, VB
$E06    $0B3D   SYS      $B3D            ; System call to B3D
$E08    $8377   SUBN     V3, V7          ; V3 = V7 - V3, VF = !borrow
$E0A    $A8E9   LD       I, $8E9         ; Load 8E9 into I
$E0C    $EC8F   UNKNOWN  $EC8F           ; Unknown Exxx instruction
$E0E    $7E40   ADD      VE, #40         ; Add 64 to VE
$E10    $55C0   SE       V5, VC          ; Skip if V5 == VC
$E12    $9802   UNKNOWN  $9802           ; Unknown 9xxx instruction
$E14    $B6F4   JP       V0, $6F4        ; Jump to V0 + 6F4
$E16    $80FF   UNKNOWN  80FF            ; Unknown 8xxx instruction
$E18    $A9BC   LD       I, $9BC         ; Load 9BC into I
$E1A    $D6EC   DRW      V6, VE, #C      ; Draw 12-byte sprite at V6, VE
$E1C    $22BA   CALL     $2BA            ; Call subroutine at 2BA
$E1E    $7A7A   ADD      VA, #7A         ; Add 122 to VA
$E20    $73DD   ADD      V3, #DD         ; Add 221 to V3
$E22    $8660   LD       V6, V6          ; V6 = V6
$E24    $FB1A   UNKNOWN  FB1A            ; Unknown Fxxx instruction
$E26    $0CCF   SYS      $CCF            ; System call to CCF
$E28    $268E   CALL     $68E            ; Call subroutine at 68E
$E2A    $A813   LD       I, $813         ; Load 813 into I
$E2C    $5112   UNKNOWN  $5112           ; Unknown 5xxx instruction
$E2E    $D118   DRW      V1, V1, #8      ; Draw 8-byte sprite at V1, V1
$E30    $977E   UNKNOWN  $977E           ; Unknown 9xxx instruction
$E32    $A387   LD       I, $387         ; Load 387 into I
$E34    $6CA4   LD       VC, #A4         ; Load 164 into VC
$E36    $BDF8   JP       V0, $DF8        ; Jump to V0 + DF8
$E38    $41D6   SNE      V1, #D6         ; Skip if V1 != 214
$E3A    $7600   ADD      V6, #00         ; Add 0 to V6
$E3C    $117C   JP       $17C            ; Jump to 17C
$E3E    $C942   RND      V9, #42         ; V9 = random & 42
$E40    $78FE   ADD      V8, #FE         ; Add 254 to V8
$E42    $3FA4   SE       VF, #A4         ; Skip if VF == 164
$E44    $D434   DRW      V4, V3, #4      ; Draw 4-byte sprite at V4, V3
$E46    $0F16   SYS      $F16            ; System call to F16
$E48    $8B0E   SHL      VB              ; VB <<= 1, VF = MSB
$E4A    $ED6B   UNKNOWN  $ED6B           ; Unknown Exxx instruction
$E4C    $406F   SNE      V0, #6F         ; Skip if V0 != 111
$E4E    $6F41   LD       VF, #41         ; Load 65 into VF
$E50    $AE0F   LD       I, $E0F         ; Load E0F into I
$E52    $4702   SNE      V7, #02         ; Skip if V7 != 2
$E54    $14B6   JP       $4B6            ; Jump to 4B6
$E56    $6149   LD       V1, #49         ; Load 73 into V1
$E58    $F80D   UNKNOWN  F80D            ; Unknown Fxxx instruction
$E5A    $4033   SNE      V0, #33         ; Skip if V0 != 51
$E5C    $686E   LD       V8, #6E         ; Load 110 into V8
$E5E    $0986   SYS      $986            ; System call to 986
$E60    $236F   CALL     $36F            ; Call subroutine at 36F
$E62    $80B9   UNKNOWN  80B9            ; Unknown 8xxx instruction
$E64    $FC10   UNKNOWN  FC10            ; Unknown Fxxx instruction
$E66    $2C40   CALL     $C40            ; Call subroutine at C40
$E68    $64FF   LD       V4, #FF         ; Load 255 into V4
$E6A    $728B   ADD      V2, #8B         ; Add 139 to V2
$E6C    $B7E9   JP       V0, $7E9        ; Jump to V0 + 7E9
$E6E    $11C6   JP       $1C6            ; Jump to 1C6
$E70    $1890   JP       $890            ; Jump to 890
$E72    $E462   UNKNOWN  $E462           ; Unknown Exxx instruction
$E74    $5FA2   UNKNOWN  $5FA2           ; Unknown 5xxx instruction
$E76    $8138   UNKNOWN  8138            ; Unknown 8xxx instruction
$E78    $35D2   SE       V5, #D2         ; Skip if V5 == 210
$E7A    $F726   UNKNOWN  F726            ; Unknown Fxxx instruction
$E7C    $DA32   DRW      VA, V3, #2      ; Draw 2-byte sprite at VA, V3
$E7E    $C3D6   RND      V3, #D6         ; V3 = random & D6
$E80    $EFD2   UNKNOWN  $EFD2           ; Unknown Exxx instruction
$E82    $63B2   LD       V3, #B2         ; Load 178 into V3
$E84    $3A43   SE       VA, #43         ; Skip if VA == 67
$E86    $3DE4   SE       VD, #E4         ; Skip if VD == 228
$E88    $31B1   SE       V1, #B1         ; Skip if V1 == 177
$E8A    $79D3   ADD      V9, #D3         ; Add 211 to V9
$E8C    $65C8   LD       V5, #C8         ; Load 200 into V5
$E8E    $F05B   UNKNOWN  F05B            ; Unknown Fxxx instruction
$E90    $B039   JP       V0, $039        ; Jump to V0 + 039
$E92    $C05A   RND      V0, #5A         ; V0 = random & 5A
$E94    $7483   ADD      V4, #83         ; Add 131 to V4
$E96    $4461   SNE      V4, #61         ; Skip if V4 != 97
$E98    $10FB   JP       $0FB            ; Jump to 0FB
$E9A    $B52E   JP       V0, $52E        ; Jump to V0 + 52E
$E9C    $BF16   JP       V0, $F16        ; Jump to V0 + F16
$E9E    $5B89   UNKNOWN  $5B89           ; Unknown 5xxx instruction
$EA0    $8698   UNKNOWN  8698            ; Unknown 8xxx instruction
$EA2    $D8D5   DRW      V8, VD, #5      ; Draw 5-byte sprite at V8, VD
$EA4    $B0FC   JP       V0, $0FC        ; Jump to V0 + 0FC
$EA6    $9E64   UNKNOWN  $9E64           ; Unknown 9xxx instruction
$EA8    $19A8   JP       $9A8            ; Jump to 9A8
$EAA    $9D23   UNKNOWN  $9D23           ; Unknown 9xxx instruction
$EAC    $4ED1   SNE      VE, #D1         ; Skip if VE != 209
$EAE    $F3B0   UNKNOWN  F3B0            ; Unknown Fxxx instruction
$EB0    $A07C   LD       I, $07C         ; Load 07C into I
$EB2    $BF12   JP       V0, $F12        ; Jump to V0 + F12
$EB4    $B37A   JP       V0, $37A        ; Jump to V0 + 37A
$EB6    $CE10   RND      VE, #10         ; VE = random & 10
$EB8    $694E   LD       V9, #4E         ; Load 78 into V9
$EBA    $A778   LD       I, $778         ; Load 778 into I
$EBC    $23FA   CALL     $3FA            ; Call subroutine at 3FA
$EBE    $382C   SE       V8, #2C         ; Skip if V8 == 44
$EC0    $DF98   DRW      VF, V9, #8      ; Draw 8-byte sprite at VF, V9
$EC2    $A248   LD       I, $248         ; Load 248 into I
$EC4    $28F8   CALL     $8F8            ; Call subroutine at 8F8
$EC6    $60E6   LD       V0, #E6         ; Load 230 into V0
$EC8    $ED2E   UNKNOWN  $ED2E           ; Unknown Exxx instruction
$ECA    $3C5D   SE       VC, #5D         ; Skip if VC == 93
$ECC    $4DA4   SNE      VD, #A4         ; Skip if VD != 164
$ECE    $9CA3   UNKNOWN  $9CA3           ; Unknown 9xxx instruction
$ED0    $3BD7   SE       VB, #D7         ; Skip if VB == 215
$ED2    $5B8B   UNKNOWN  $5B8B           ; Unknown 5xxx instruction
$ED4    $B0BF   JP       V0, $0BF        ; Jump to V0 + 0BF
$ED6    $AC40   LD       I, $C40         ; Load C40 into I
$ED8    $B254   JP       V0, $254        ; Jump to V0 + 254
$EDA    $B8E5   JP       V0, $8E5        ; Jump to V0 + 8E5
$EDC    $FCFD   UNKNOWN  FCFD            ; Unknown Fxxx instruction
$EDE    $68F3   LD       V8, #F3         ; Load 243 into V8
$EE0    $C8FB   RND      V8, #FB         ; V8 = random & FB
$EE2    $F17C   UNKNOWN  F17C            ; Unknown Fxxx instruction
$EE4    $1862   JP       $862            ; Jump to 862
$EE6    $CA17   RND      VA, #17         ; VA = random & 17
$EE8    $0EE1   SYS      $EE1            ; System call to EE1
$EEA    $3154   SE       V1, #54         ; Skip if V1 == 84
$EEC    $1194   JP       $194            ; Jump to 194
$EEE    $7959   ADD      V9, #59         ; Add 89 to V9
$EF0    $2275   CALL     $275            ; Call subroutine at 275
$EF2    $D641   DRW      V6, V4, #1      ; Draw 1-byte sprite at V6, V4
$EF4    $0B99   SYS      $B99            ; System call to B99
$EF6    $AF76   LD       I, $F76         ; Load F76 into I
$EF8    $EC28   UNKNOWN  $EC28           ; Unknown Exxx instruction
$EFA    $003E   SYS      $03E            ; System call to 03E
$EFC    $4F36   SNE      VF, #36         ; Skip if VF != 54
$EFE    $B675   JP       V0, $675        ; Jump to V0 + 675
$F00    $D842   DRW      V8, V4, #2      ; Draw 2-byte sprite at V8, V4
$F02    $5544   UNKNOWN  $5544           ; Unknown 5xxx instruction
$F04    $E890   UNKNOWN  $E890           ; Unknown Exxx instruction
$F06    $D02E   DRW      V0, V2, #E      ; Draw 14-byte sprite at V0, V2
$F08    $E662   UNKNOWN  $E662           ; Unknown Exxx instruction
$F0A    $020B   SYS      $20B            ; System call to 20B
$F0C    $9B8A   UNKNOWN  $9B8A           ; Unknown 9xxx instruction
$F0E    $2B42   CALL     $B42            ; Call subroutine at B42
$F10    $9B1C   UNKNOWN  $9B1C           ; Unknown 9xxx instruction
$F12    $AA99   LD       I, $A99         ; Load A99 into I
$F14    $5153   UNKNOWN  $5153           ; Unknown 5xxx instruction
$F16    $B724   JP       V0, $724        ; Jump to V0 + 724
$F18    $DED2   DRW      VE, VD, #2      ; Draw 2-byte sprite at VE, VD
$F1A    $4137   SNE      V1, #37         ; Skip if V1 != 55
$F1C    $8BE7   SUBN     VB, VE          ; VB = VE - VB, VF = !borrow
$F1E    $12A4   JP       $2A4            ; Jump to 2A4
$F20    $8941   OR       V9, V4          ; V9 |= V4
$F22    $80E9   UNKNOWN  80E9            ; Unknown 8xxx instruction
$F24    $521B   UNKNOWN  $521B           ; Unknown 5xxx instruction
$F26    $023D   SYS      $23D            ; System call to 23D
$F28    $BC0F   JP       V0, $C0F        ; Jump to V0 + C0F
$F2A    $355C   SE       V5, #5C         ; Skip if V5 == 92
$F2C    $A5FC   LD       I, $5FC         ; Load 5FC into I
$F2E    $65AE   LD       V5, #AE         ; Load 174 into V5
$F30    $2A95   CALL     $A95            ; Call subroutine at A95
$F32    $86FA   UNKNOWN  86FA            ; Unknown 8xxx instruction
$F34    $84DD   UNKNOWN  84DD            ; Unknown 8xxx instruction
$F36    $FE2D   UNKNOWN  FE2D            ; Unknown Fxxx instruction
$F38    $A897   LD       I, $897         ; Load 897 into I
$F3A    $8E8B   UNKNOWN  8E8B            ; Unknown 8xxx instruction
$F3C    $404B   SNE      V0, #4B         ; Skip if V0 != 75
$F3E    $C49B   RND      V4, #9B         ; V4 = random & 9B
$F40    $70E6   ADD      V0, #E6         ; Add 230 to V0
$F42    $205B   CALL     $05B            ; Call subroutine at 05B
$F44    $CF78   RND      VF, #78         ; VF = random & 78
$F46    $1226   JP       $226            ; Jump to 226
$F48    $43F9   SNE      V3, #F9         ; Skip if V3 != 249
$F4A    $6868   LD       V8, #68         ; Load 104 into V8
$F4C    $7369   ADD      V3, #69         ; Add 105 to V3
$F4E    $E924   UNKNOWN  $E924           ; Unknown Exxx instruction
$F50    $26CA   CALL     $6CA            ; Call subroutine at 6CA
$F52    $9A55   UNKNOWN  $9A55           ; Unknown 9xxx instruction
$F54    $53EF   UNKNOWN  $53EF           ; Unknown 5xxx instruction
$F56    $2CD3   CALL     $CD3            ; Call subroutine at CD3
$F58    $D624   DRW      V6, V2, #4      ; Draw 4-byte sprite at V6, V2
$F5A    $25F8   CALL     $5F8            ; Call subroutine at 5F8
$F5C    $2564   CALL     $564            ; Call subroutine at 564
$F5E    $036E   SYS      $36E            ; System call to 36E
$F60    $9AB8   UNKNOWN  $9AB8           ; Unknown 9xxx instruction
$F62    $411D   SNE      V1, #1D         ; Skip if V1 != 29
$F64    $EC40   UNKNOWN  $EC40           ; Unknown Exxx instruction
$F66    $DE1A   DRW      VE, V1, #A      ; Draw 10-byte sprite at VE, V1
$F68    $31C3   SE       V1, #C3         ; Skip if V1 == 195
$F6A    $1FC7   JP       $FC7            ; Jump to FC7
$F6C    $FDB8   UNKNOWN  FDB8            ; Unknown Fxxx instruction
$F6E    $51FB   UNKNOWN  $51FB           ; Unknown 5xxx instruction
$F70    $BE96   JP       V0, $E96        ; Jump to V0 + E96
$F72    $1F9B   JP       $F9B            ; Jump to F9B
$F74    $A1C0   LD       I, $1C0         ; Load 1C0 into I
$F76    $9079   UNKNOWN  $9079           ; Unknown 9xxx instruction
$F78    $8CB0   LD       VC, VB          ; VC = VB
$F7A    $B44A   JP       V0, $44A        ; Jump to V0 + 44A
$F7C    $6E8C   LD       VE, #8C         ; Load 140 into VE
$F7E    $DED4   DRW      VE, VD, #4      ; Draw 4-byte sprite at VE, VD
$F80    $CC4A   RND      VC, #4A         ; VC = random & 4A
$F82    $2D5F   CALL     $D5F            ; Call subroutine at D5F
$F84    $B4D2   JP       V0, $4D2        ; Jump to V0 + 4D2
$F86    $1759   JP       $759            ; Jump to 759
$F88    $A05E   LD       I, $05E         ; Load 05E into I
$F8A    $9FF0   SNE      VF, VF          ; Skip if VF != VF
$F8C    $9D9A   UNKNOWN  $9D9A           ; Unknown 9xxx instruction
$F8E    $0510   SYS      $510            ; System call to 510
$F90    $445B   SNE      V4, #5B         ; Skip if V4 != 91
$F92    $6857   LD       V8, #57         ; Load 87 into V8
$F94    $BC9A   JP       V0, $C9A        ; Jump to V0 + C9A
$F96    $95BF   UNKNOWN  $95BF           ; Unknown 9xxx instruction
$F98    $8F93   XOR      VF, V9          ; VF ^= V9
$F9A    $FA69   UNKNOWN  FA69            ; Unknown Fxxx instruction
$F9C    $B2EF   JP       V0, $2EF        ; Jump to V0 + 2EF
$F9E    $18E0   JP       $8E0            ; Jump to 8E0
$FA0    $6529   LD       V5, #29         ; Load 41 into V5
$FA2    $8D71   OR       VD, V7          ; VD |= V7
$FA4    $71E6   ADD      V1, #E6         ; Add 230 to V1
$FA6    $64E4   LD       V4, #E4         ; Load 228 into V4
$FA8    $F76F   UNKNOWN  F76F            ; Unknown Fxxx instruction
$FAA    $ADFF   LD       I, $DFF         ; Load DFF into I
$FAC    $5010   SE       V0, V1          ; Skip if V0 == V1
$FAE    $9AB1   UNKNOWN  $9AB1           ; Unknown 9xxx instruction
$FB0    $2E5F   CALL     $E5F            ; Call subroutine at E5F
$FB2    $5E68   UNKNOWN  $5E68           ; Unknown 5xxx instruction
$FB4    $18DA   JP       $8DA            ; Jump to 8DA
$FB6    $1C26   JP       $C26            ; Jump to C26
$FB8    $1C76   JP       $C76            ; Jump to C76
$FBA    $FBAB   UNKNOWN  FBAB            ; Unknown Fxxx instruction
$FBC    $1C5A   JP       $C5A            ; Jump to C5A
$FBE    $8D6C   UNKNOWN  8D6C            ; Unknown 8xxx instruction
$FC0    $3346   SE       V3, #46         ; Skip if V3 == 70
$FC2    $1AFF   JP       $AFF            ; Jump to AFF
$FC4    $E3D4   UNKNOWN  $E3D4           ; Unknown Exxx instruction
$FC6    $369E   SE       V6, #9E         ; Skip if V6 == 158
$FC8    $272C   CALL     $72C            ; Call subroutine at 72C
$FCA    $1D88   JP       $D88            ; Jump to D88
$FCC    $48C4   SNE      V8, #C4         ; Skip if V8 != 196
$FCE    $19DE   JP       $9DE            ; Jump to 9DE
$FD0    $4115   SNE      V1, #15         ; Skip if V1 != 21
$FD2    $1EE1   JP       $EE1            ; Jump to EE1
$FD4    $A954   LD       I, $954         ; Load 954 into I
$FD6    $DCCE   DRW      VC, VC, #E      ; Draw 14-byte sprite at VC, VC
$FD8    $182E   JP       $82E            ; Jump to 82E
$FDA    $28E2   CALL     $8E2            ; Call subroutine at 8E2
$FDC    $9D59   UNKNOWN  $9D59           ; Unknown 9xxx instruction
$FDE    $7838   ADD      V8, #38         ; Add 56 to V8
$FE0    $0001   SYS      $001            ; System call to 001
$FE2    $601F   LD       V0, #1F         ; Load 31 into V0
$FE4    $76E5   ADD      V6, #E5         ; Add 229 to V6
$FE6    $C638   RND      V6, #38         ; V6 = random & 38
$FE8    $4A7E   SNE      VA, #7E         ; Skip if VA != 126
$FEA    $8C56   SHR      VC              ; VC >>= 1, VF = LSB
$FEC    $C95E   RND      V9, #5E         ; V9 = random & 5E
$FEE    $3DC7   SE       VD, #C7         ; Skip if VD == 199
$FF0    $FA88   UNKNOWN  FA88            ; Unknown Fxxx instruction
$FF2    $C60D   RND      V6, #0D         ; V6 = random & 0D
$FF4    $C1DB   RND      V1, #DB         ; V1 = random & DB
$FF6    $65ED   LD       V5, #ED         ; Load 237 into V5
$FF8    $EB71   UNKNOWN  $EB71           ; Unknown Exxx instruction
$FFA    $EEFC   UNKNOWN  $EEFC           ; Unknown Exxx instruction
$FFC    $BB0B   JP       V0, $B0B        ; Jump to V0 + B0B
$FFE    $34AE   SE       V4, #AE         ; Skip if V4 == 174

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 494 (27.6%)
  JP      : 250 (14.0%)
  LD      : 225 (12.6%)
  SE      : 130 ( 7.3%)
  SYS     : 115 ( 6.4%)
  CALL    : 113 ( 6.3%)
  ADD     : 110 ( 6.1%)
  DRW     : 105 ( 5.9%)
  RND     : 102 ( 5.7%)
  SNE     :  99 ( 5.5%)
  OR      :  15 ( 0.8%)
  AND     :   8 ( 0.4%)
  SUBN    :   7 ( 0.4%)
  XOR     :   6 ( 0.3%)
  SHR     :   6 ( 0.3%)
  SHL     :   4 ( 0.2%)
  SUB     :   3 ( 0.2%)

Memory Operations: 335 (18.7%)
Arithmetic Operations: 149 (8.3%)
