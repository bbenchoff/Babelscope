
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B1900D01_I04623_C7534_2cd38bccd269.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 1900
Instance: 4623
Direction: ascending
Final Array: [51, 51, 51, 51, 51, 51, 203, 232]
Operations: R:0 W:6 C:255 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 97
Sort Array References:
  $206: LD [I], V0 ; Store V0-V0 at I
  $228: LD I, $781 ; Load 781 into I
  $262: LD I, $5C7 ; Load 5C7 into I
  $26C: LD I, $080 ; Load 080 into I
  $274: LD I, $717 ; Load 717 into I
  $27C: LD I, $9DA ; Load 9DA into I
  $27E: LD I, $B50 ; Load B50 into I
  $35E: LD I, $9AF ; Load 9AF into I
  $372: LD I, $5F0 ; Load 5F0 into I
  $376: LD I, $530 ; Load 530 into I
  $37C: LD I, $57A ; Load 57A into I
  $386: LD I, $7D4 ; Load 7D4 into I
  $388: LD I, $166 ; Load 166 into I
  $396: LD I, $A03 ; Load A03 into I
  $3B2: LD I, $0EA ; Load 0EA into I
  $42A: LD I, $6E4 ; Load 6E4 into I
  $456: LD I, $E3B ; Load E3B into I
  $47C: LD I, $C27 ; Load C27 into I
  $48A: LD V3, [I] ; Load V0-V3 from I
  $4B0: LD I, $0A5 ; Load 0A5 into I
  $4F8: LD I, $D7F ; Load D7F into I
  $528: LD [I], V4 ; Store V0-V4 at I
  $530: LD I, $32D ; Load 32D into I
  $56E: LD I, $A16 ; Load A16 into I
  $57A: LD I, $8F3 ; Load 8F3 into I
  $58E: LD I, $0A5 ; Load 0A5 into I
  $59C: LD I, $A2F ; Load A2F into I
  $5A4: LD I, $A46 ; Load A46 into I
  $5AA: LD I, $B7A ; Load B7A into I
  $5CA: LD I, $034 ; Load 034 into I
  $60E: LD I, $F37 ; Load F37 into I
  $61A: LD I, $88B ; Load 88B into I
  $64E: LD I, $5CE ; Load 5CE into I
  $656: LD I, $F76 ; Load F76 into I
  $662: LD I, $A1E ; Load A1E into I
  $66E: LD I, $4EC ; Load 4EC into I
  $68E: LD I, $D0A ; Load D0A into I
  $6AE: LD I, $AA3 ; Load AA3 into I
  $6E4: LD I, $CF2 ; Load CF2 into I
  $74C: LD I, $577 ; Load 577 into I
  $758: LD I, $796 ; Load 796 into I
  $790: LD I, $3C7 ; Load 3C7 into I
  $792: LD I, $196 ; Load 196 into I
  $7E6: LD I, $271 ; Load 271 into I
  $7F4: LD I, $027 ; Load 027 into I
  $868: LD I, $557 ; Load 557 into I
  $886: LD I, $31C ; Load 31C into I
  $888: LD I, $24F ; Load 24F into I
  $88C: LD I, $0A1 ; Load 0A1 into I
  $8C2: LD I, $74A ; Load 74A into I
  $8D6: LD I, $BF3 ; Load BF3 into I
  $8DA: LD I, $626 ; Load 626 into I
  $946: LD I, $C77 ; Load C77 into I
  $998: LD I, $01A ; Load 01A into I
  $9A0: LD I, $58E ; Load 58E into I
  $9A2: LD I, $11C ; Load 11C into I
  $9C0: LD I, $8B5 ; Load 8B5 into I
  $A5E: LD I, $7C4 ; Load 7C4 into I
  $A80: LD I, $C15 ; Load C15 into I
  $A82: LD I, $F2E ; Load F2E into I
  $A92: LD I, $B36 ; Load B36 into I
  $AB4: LD I, $301 ; Load 301 into I
  $AD2: LD I, $A25 ; Load A25 into I
  $B42: LD I, $06F ; Load 06F into I
  $B4C: LD I, $F8B ; Load F8B into I
  $B56: LD I, $794 ; Load 794 into I
  $B66: LD I, $9D7 ; Load 9D7 into I
  $B7E: LD I, $8C0 ; Load 8C0 into I
  $B86: LD I, $0BD ; Load 0BD into I
  $B9C: LD I, $571 ; Load 571 into I
  $BD8: LD I, $09A ; Load 09A into I
  $C0E: LD I, $1A6 ; Load 1A6 into I
  $C26: LD I, $39D ; Load 39D into I
  $C3E: LD I, $E40 ; Load E40 into I
  $C62: LD I, $D1C ; Load D1C into I
  $CAA: LD I, $7D2 ; Load 7D2 into I
  $CB6: LD I, $138 ; Load 138 into I
  $CE6: LD I, $0E0 ; Load 0E0 into I
  $D00: LD I, $C26 ; Load C26 into I
  $D0C: LD I, $4FE ; Load 4FE into I
  $D46: LD I, $1CB ; Load 1CB into I
  $D50: LD I, $0D3 ; Load 0D3 into I
  $D8C: LD I, $829 ; Load 829 into I
  $DF8: LD I, $413 ; Load 413 into I
  $DFE: LD I, $B29 ; Load B29 into I
  $E46: LD I, $641 ; Load 641 into I
  $EDE: LD I, $15E ; Load 15E into I
  $F1C: LD I, $B88 ; Load B88 into I
  $F20: LD I, $35C ; Load 35C into I
  $F4C: LD I, $053 ; Load 053 into I
  $F54: LD I, $66F ; Load 66F into I
  $F7A: LD I, $AFF ; Load AFF into I
  $F9C: LD I, $CD7 ; Load CD7 into I
  $FAE: LD I, $D68 ; Load D68 into I
  $FBE: LD I, $5A4 ; Load 5A4 into I
  $FE4: LD I, $179 ; Load 179 into I
  $FF8: LD I, $3C4 ; Load 3C4 into I

CONTROL FLOW ANALYSIS:
Jumps: 222
Calls: 117
Branches: 261
Loops: 138
Loop Structures:
  $20C -> $156 (backward jump)
  $320 -> $146 (backward jump)
  $39C -> $0BE (backward jump)
  $3AA -> $103 (backward jump)
  $3CC -> $069 (backward jump)
  $3DC -> $13A (backward jump)
  $3E0 -> $1B0 (backward jump)
  $3F8 -> $23E (backward jump)
  $438 -> $037 (backward jump)
  $48E -> $0D9 (backward jump)
  $4CA -> $487 (backward jump)
  $4D8 -> $287 (backward jump)
  $4DC -> $1A6 (backward jump)
  $4E4 -> $159 (backward jump)
  $556 -> $1EB (backward jump)
  $558 -> $130 (backward jump)
  $568 -> $259 (backward jump)
  $578 -> $526 (backward jump)
  $588 -> $3F9 (backward jump)
  $59A -> $0E8 (backward jump)
  $5BC -> $3C5 (backward jump)
  $5EE -> $44C (backward jump)
  $62A -> $09E (backward jump)
  $64A -> $446 (backward jump)
  $64C -> $4AF (backward jump)
  $654 -> $5AC (backward jump)
  $65E -> $34D (backward jump)
  $660 -> $440 (backward jump)
  $664 -> $013 (backward jump)
  $672 -> $449 (backward jump)
  $67C -> $615 (backward jump)
  $690 -> $379 (backward jump)
  $6A0 -> $27C (backward jump)
  $6F2 -> $1A1 (backward jump)
  $6F4 -> $25F (backward jump)
  $70A -> $553 (backward jump)
  $70C -> $2F6 (backward jump)
  $71A -> $66B (backward jump)
  $748 -> $1E1 (backward jump)
  $77A -> $20E (backward jump)
  $796 -> $2B0 (backward jump)
  $7A8 -> $366 (backward jump)
  $80C -> $51B (backward jump)
  $832 -> $811 (backward jump)
  $842 -> $4DB (backward jump)
  $848 -> $69D (backward jump)
  $84C -> $5FE (backward jump)
  $8F6 -> $0E1 (backward jump)
  $904 -> $141 (backward jump)
  $908 -> $2A7 (backward jump)
  $976 -> $87B (backward jump)
  $98C -> $072 (backward jump)
  $9B8 -> $5DF (backward jump)
  $9EA -> $073 (backward jump)
  $9F4 -> $462 (backward jump)
  $9F6 -> $63D (backward jump)
  $A12 -> $6B3 (backward jump)
  $A40 -> $54D (backward jump)
  $A46 -> $12F (backward jump)
  $A48 -> $587 (backward jump)
  $A4E -> $A09 (backward jump)
  $A60 -> $8C5 (backward jump)
  $A62 -> $403 (backward jump)
  $A76 -> $9FD (backward jump)
  $A78 -> $355 (backward jump)
  $A7A -> $3BF (backward jump)
  $A9E -> $207 (backward jump)
  $AB8 -> $430 (backward jump)
  $AD8 -> $755 (backward jump)
  $ADE -> $550 (backward jump)
  $B16 -> $67B (backward jump)
  $B24 -> $2F8 (backward jump)
  $B44 -> $B24 (backward jump)
  $B60 -> $15C (backward jump)
  $B7A -> $10A (backward jump)
  $B84 -> $395 (backward jump)
  $B9E -> $0C3 (backward jump)
  $BDC -> $A1E (backward jump)
  $C3A -> $8A0 (backward jump)
  $C4A -> $94F (backward jump)
  $C5C -> $AA8 (backward jump)
  $C72 -> $569 (backward jump)
  $C74 -> $3A7 (backward jump)
  $C78 -> $B54 (backward jump)
  $C86 -> $0B5 (backward jump)
  $C90 -> $AD3 (backward jump)
  $C92 -> $AE5 (backward jump)
  $C9C -> $02C (backward jump)
  $CA2 -> $87B (backward jump)
  $CA4 -> $102 (backward jump)
  $CA6 -> $965 (backward jump)
  $CBA -> $03A (backward jump)
  $CE2 -> $A9A (backward jump)
  $CF0 -> $443 (backward jump)
  $CF4 -> $CDE (backward jump)
  $D12 -> $C08 (backward jump)
  $D16 -> $BDF (backward jump)
  $D22 -> $184 (backward jump)
  $D2C -> $A5F (backward jump)
  $D2E -> $4E8 (backward jump)
  $D34 -> $28E (backward jump)
  $D4E -> $182 (backward jump)
  $D52 -> $277 (backward jump)
  $D58 -> $619 (backward jump)
  $D62 -> $834 (backward jump)
  $D96 -> $951 (backward jump)
  $DA4 -> $CFA (backward jump)
  $DA8 -> $593 (backward jump)
  $DAC -> $A3D (backward jump)
  $DC4 -> $A85 (backward jump)
  $DE8 -> $8FC (backward jump)
  $DEA -> $A02 (backward jump)
  $E08 -> $243 (backward jump)
  $E1A -> $DCA (backward jump)
  $E34 -> $2F6 (backward jump)
  $E42 -> $7D0 (backward jump)
  $E48 -> $11F (backward jump)
  $E88 -> $7C4 (backward jump)
  $EE6 -> $DD8 (backward jump)
  $EF4 -> $EA0 (backward jump)
  $EF6 -> $971 (backward jump)
  $EFE -> $294 (backward jump)
  $F06 -> $A43 (backward jump)
  $F10 -> $07C (backward jump)
  $F14 -> $D9C (backward jump)
  $F22 -> $BE3 (backward jump)
  $F28 -> $4F6 (backward jump)
  $F40 -> $713 (backward jump)
  $F46 -> $99A (backward jump)
  $F50 -> $2C6 (backward jump)
  $F58 -> $1C4 (backward jump)
  $F64 -> $773 (backward jump)
  $F70 -> $9CF (backward jump)
  $F92 -> $929 (backward jump)
  $F98 -> $4A3 (backward jump)
  $F9A -> $E75 (backward jump)
  $FA8 -> $CC7 (backward jump)
  $FCA -> $051 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $082A   SYS      $82A            ; System call to 82A
$202    $9909   UNKNOWN  $9909           ; Unknown 9xxx instruction
$204    $9895   UNKNOWN  $9895           ; Unknown 9xxx instruction
$206    $F055   LD       [I], V0         ; Store V0-V0 at I
$208    $87BB   UNKNOWN  87BB            ; Unknown 8xxx instruction
$20A    $E545   UNKNOWN  $E545           ; Unknown Exxx instruction
$20C    $1156   JP       $156            ; Jump to 156
$20E    $1D59   JP       $D59            ; Jump to D59
$210    $52E1   UNKNOWN  $52E1           ; Unknown 5xxx instruction
$212    $DCA0   DRW      VC, VA, #0      ; Draw 0-byte sprite at VC, VA
$214    $F68F   UNKNOWN  F68F            ; Unknown Fxxx instruction
$216    $5537   UNKNOWN  $5537           ; Unknown 5xxx instruction
$218    $7E38   ADD      VE, #38         ; Add 56 to VE
$21A    $E1FB   UNKNOWN  $E1FB           ; Unknown Exxx instruction
$21C    $F949   UNKNOWN  F949            ; Unknown Fxxx instruction
$21E    $E388   UNKNOWN  $E388           ; Unknown Exxx instruction
$220    $D08B   DRW      V0, V8, #B      ; Draw 11-byte sprite at V0, V8
$222    $0C1E   SYS      $C1E            ; System call to C1E
$224    $FEAD   UNKNOWN  FEAD            ; Unknown Fxxx instruction
$226    $DA85   DRW      VA, V8, #5      ; Draw 5-byte sprite at VA, V8
$228    $A781   LD       I, $781         ; Load 781 into I
$22A    $3B7E   SE       VB, #7E         ; Skip if VB == 126
$22C    $D5A2   DRW      V5, VA, #2      ; Draw 2-byte sprite at V5, VA
$22E    $E834   UNKNOWN  $E834           ; Unknown Exxx instruction
$230    $C281   RND      V2, #81         ; V2 = random & 81
$232    $5478   UNKNOWN  $5478           ; Unknown 5xxx instruction
$234    $0B47   SYS      $B47            ; System call to B47
$236    $B44F   JP       V0, $44F        ; Jump to V0 + 44F
$238    $EC60   UNKNOWN  $EC60           ; Unknown Exxx instruction
$23A    $793E   ADD      V9, #3E         ; Add 62 to V9
$23C    $4329   SNE      V3, #29         ; Skip if V3 != 41
$23E    $665F   LD       V6, #5F         ; Load 95 into V6
$240    $47E6   SNE      V7, #E6         ; Skip if V7 != 230
$242    $73FF   ADD      V3, #FF         ; Add 255 to V3
$244    $67B0   LD       V7, #B0         ; Load 176 into V7
$246    $D136   DRW      V1, V3, #6      ; Draw 6-byte sprite at V1, V3
$248    $1644   JP       $644            ; Jump to 644
$24A    $13A7   JP       $3A7            ; Jump to 3A7
$24C    $E164   UNKNOWN  $E164           ; Unknown Exxx instruction
$24E    $515A   UNKNOWN  $515A           ; Unknown 5xxx instruction
$250    $02F2   SYS      $2F2            ; System call to 2F2
$252    $F930   UNKNOWN  F930            ; Unknown Fxxx instruction
$254    $D12C   DRW      V1, V2, #C      ; Draw 12-byte sprite at V1, V2
$256    $704F   ADD      V0, #4F         ; Add 79 to V0
$258    $DD1F   DRW      VD, V1, #F      ; Draw 15-byte sprite at VD, V1
$25A    $FC10   UNKNOWN  FC10            ; Unknown Fxxx instruction
$25C    $F8C2   UNKNOWN  F8C2            ; Unknown Fxxx instruction
$25E    $7914   ADD      V9, #14         ; Add 20 to V9
$260    $5DE4   UNKNOWN  $5DE4           ; Unknown 5xxx instruction
$262    $A5C7   LD       I, $5C7         ; Load 5C7 into I
$264    $8949   UNKNOWN  8949            ; Unknown 8xxx instruction
$266    $D54E   DRW      V5, V4, #E      ; Draw 14-byte sprite at V5, V4
$268    $FEE8   UNKNOWN  FEE8            ; Unknown Fxxx instruction
$26A    $4451   SNE      V4, #51         ; Skip if V4 != 81
$26C    $A080   LD       I, $080         ; Load 080 into I
$26E    $F7CB   UNKNOWN  F7CB            ; Unknown Fxxx instruction
$270    $40D7   SNE      V0, #D7         ; Skip if V0 != 215
$272    $9F13   UNKNOWN  $9F13           ; Unknown 9xxx instruction
$274    $A717   LD       I, $717         ; Load 717 into I
$276    $9172   UNKNOWN  $9172           ; Unknown 9xxx instruction
$278    $5128   UNKNOWN  $5128           ; Unknown 5xxx instruction
$27A    $7EAC   ADD      VE, #AC         ; Add 172 to VE
$27C    $A9DA   LD       I, $9DA         ; Load 9DA into I
$27E    $AB50   LD       I, $B50         ; Load B50 into I
$280    $4209   SNE      V2, #09         ; Skip if V2 != 9
$282    $F7B0   UNKNOWN  F7B0            ; Unknown Fxxx instruction
$284    $3690   SE       V6, #90         ; Skip if V6 == 144
$286    $6497   LD       V4, #97         ; Load 151 into V4
$288    $4EBD   SNE      VE, #BD         ; Skip if VE != 189
$28A    $02DE   SYS      $2DE            ; System call to 2DE
$28C    $0292   SYS      $292            ; System call to 292
$28E    $E613   UNKNOWN  $E613           ; Unknown Exxx instruction
$290    $9ED3   UNKNOWN  $9ED3           ; Unknown 9xxx instruction
$292    $0CFB   SYS      $CFB            ; System call to CFB
$294    $C93A   RND      V9, #3A         ; V9 = random & 3A
$296    $0724   SYS      $724            ; System call to 724
$298    $3E3F   SE       VE, #3F         ; Skip if VE == 63
$29A    $CDFE   RND      VD, #FE         ; VD = random & FE
$29C    $7CE3   ADD      VC, #E3         ; Add 227 to VC
$29E    $9BE8   UNKNOWN  $9BE8           ; Unknown 9xxx instruction
$2A0    $9FC9   UNKNOWN  $9FC9           ; Unknown 9xxx instruction
$2A2    $5A0A   UNKNOWN  $5A0A           ; Unknown 5xxx instruction
$2A4    $4D14   SNE      VD, #14         ; Skip if VD != 20
$2A6    $C9D5   RND      V9, #D5         ; V9 = random & D5
$2A8    $C8F9   RND      V8, #F9         ; V8 = random & F9
$2AA    $90BB   UNKNOWN  $90BB           ; Unknown 9xxx instruction
$2AC    $5A8B   UNKNOWN  $5A8B           ; Unknown 5xxx instruction
$2AE    $B696   JP       V0, $696        ; Jump to V0 + 696
$2B0    $D933   DRW      V9, V3, #3      ; Draw 3-byte sprite at V9, V3
$2B2    $3333   SE       V3, #33         ; Skip if V3 == 51
$2B4    $3333   SE       V3, #33         ; Skip if V3 == 51
$2B6    $3333   SE       V3, #33         ; Skip if V3 == 51
$2B8    $3333   SE       V3, #33         ; Skip if V3 == 51
$2BA    $3333   SE       V3, #33         ; Skip if V3 == 51
$2BC    $3333   SE       V3, #33         ; Skip if V3 == 51
$2BE    $3333   SE       V3, #33         ; Skip if V3 == 51
$2C0    $3333   SE       V3, #33         ; Skip if V3 == 51
$2C2    $3333   SE       V3, #33         ; Skip if V3 == 51
$2C4    $3333   SE       V3, #33         ; Skip if V3 == 51
$2C6    $3333   SE       V3, #33         ; Skip if V3 == 51
$2C8    $3333   SE       V3, #33         ; Skip if V3 == 51
$2CA    $3333   SE       V3, #33         ; Skip if V3 == 51
$2CC    $3333   SE       V3, #33         ; Skip if V3 == 51
$2CE    $3333   SE       V3, #33         ; Skip if V3 == 51
$2D0    $3333   SE       V3, #33         ; Skip if V3 == 51
$2D2    $3333   SE       V3, #33         ; Skip if V3 == 51
$2D4    $3333   SE       V3, #33         ; Skip if V3 == 51
$2D6    $3333   SE       V3, #33         ; Skip if V3 == 51
$2D8    $3333   SE       V3, #33         ; Skip if V3 == 51
$2DA    $3333   SE       V3, #33         ; Skip if V3 == 51
$2DC    $3333   SE       V3, #33         ; Skip if V3 == 51
$2DE    $3333   SE       V3, #33         ; Skip if V3 == 51
$2E0    $3333   SE       V3, #33         ; Skip if V3 == 51
$2E2    $3333   SE       V3, #33         ; Skip if V3 == 51
$2E4    $3333   SE       V3, #33         ; Skip if V3 == 51
$2E6    $3333   SE       V3, #33         ; Skip if V3 == 51
$2E8    $3333   SE       V3, #33         ; Skip if V3 == 51
$2EA    $3333   SE       V3, #33         ; Skip if V3 == 51
$2EC    $3333   SE       V3, #33         ; Skip if V3 == 51
$2EE    $3333   SE       V3, #33         ; Skip if V3 == 51
$2F0    $3333   SE       V3, #33         ; Skip if V3 == 51
$2F2    $3333   SE       V3, #33         ; Skip if V3 == 51
$2F4    $3333   SE       V3, #33         ; Skip if V3 == 51
$2F6    $3333   SE       V3, #33         ; Skip if V3 == 51
$2F8    $3333   SE       V3, #33         ; Skip if V3 == 51
$2FA    $3333   SE       V3, #33         ; Skip if V3 == 51
$2FC    $3333   SE       V3, #33         ; Skip if V3 == 51
$2FE    $3333   SE       V3, #33         ; Skip if V3 == 51
$300    $3333   SE       V3, #33         ; Skip if V3 == 51
$302    $3333   SE       V3, #33         ; Skip if V3 == 51
$304    $3333   SE       V3, #33         ; Skip if V3 == 51
$306    $CBE8   RND      VB, #E8         ; VB = random & E8
$308    $51DD   UNKNOWN  $51DD           ; Unknown 5xxx instruction
$30A    $7A7F   ADD      VA, #7F         ; Add 127 to VA
$30C    $89DF   UNKNOWN  89DF            ; Unknown 8xxx instruction
$30E    $3A70   SE       VA, #70         ; Skip if VA == 112
$310    $3F24   SE       VF, #24         ; Skip if VF == 36
$312    $BE35   JP       V0, $E35        ; Jump to V0 + E35
$314    $7969   ADD      V9, #69         ; Add 105 to V9
$316    $461B   SNE      V6, #1B         ; Skip if V6 != 27
$318    $32C7   SE       V2, #C7         ; Skip if V2 == 199
$31A    $F3BC   UNKNOWN  F3BC            ; Unknown Fxxx instruction
$31C    $E3D0   UNKNOWN  $E3D0           ; Unknown Exxx instruction
$31E    $9E6B   UNKNOWN  $9E6B           ; Unknown 9xxx instruction
$320    $B146   JP       V0, $146        ; Jump to V0 + 146
$322    $50D4   UNKNOWN  $50D4           ; Unknown 5xxx instruction
$324    $933B   UNKNOWN  $933B           ; Unknown 9xxx instruction
$326    $2FB1   CALL     $FB1            ; Call subroutine at FB1
$328    $C565   RND      V5, #65         ; V5 = random & 65
$32A    $4336   SNE      V3, #36         ; Skip if V3 != 54
$32C    $392A   SE       V9, #2A         ; Skip if V9 == 42
$32E    $C802   RND      V8, #02         ; V8 = random & 02
$330    $CDE2   RND      VD, #E2         ; VD = random & E2
$332    $81D6   SHR      V1              ; V1 >>= 1, VF = LSB
$334    $E1FC   UNKNOWN  $E1FC           ; Unknown Exxx instruction
$336    $2B5E   CALL     $B5E            ; Call subroutine at B5E
$338    $DBA3   DRW      VB, VA, #3      ; Draw 3-byte sprite at VB, VA
$33A    $01B6   SYS      $1B6            ; System call to 1B6
$33C    $0896   SYS      $896            ; System call to 896
$33E    $0951   SYS      $951            ; System call to 951
$340    $28E4   CALL     $8E4            ; Call subroutine at 8E4
$342    $B347   JP       V0, $347        ; Jump to V0 + 347
$344    $8768   UNKNOWN  8768            ; Unknown 8xxx instruction
$346    $ED2C   UNKNOWN  $ED2C           ; Unknown Exxx instruction
$348    $9EE1   UNKNOWN  $9EE1           ; Unknown 9xxx instruction
$34A    $5B85   UNKNOWN  $5B85           ; Unknown 5xxx instruction
$34C    $CD61   RND      VD, #61         ; VD = random & 61
$34E    $FD12   UNKNOWN  FD12            ; Unknown Fxxx instruction
$350    $2D70   CALL     $D70            ; Call subroutine at D70
$352    $02D8   SYS      $2D8            ; System call to 2D8
$354    $D49E   DRW      V4, V9, #E      ; Draw 14-byte sprite at V4, V9
$356    $4EF1   SNE      VE, #F1         ; Skip if VE != 241
$358    $3A32   SE       VA, #32         ; Skip if VA == 50
$35A    $64EA   LD       V4, #EA         ; Load 234 into V4
$35C    $D557   DRW      V5, V5, #7      ; Draw 7-byte sprite at V5, V5
$35E    $A9AF   LD       I, $9AF         ; Load 9AF into I
$360    $545B   UNKNOWN  $545B           ; Unknown 5xxx instruction
$362    $DA16   DRW      VA, V1, #6      ; Draw 6-byte sprite at VA, V1
$364    $4B6C   SNE      VB, #6C         ; Skip if VB != 108
$366    $BBAE   JP       V0, $BAE        ; Jump to V0 + BAE
$368    $2AB6   CALL     $AB6            ; Call subroutine at AB6
$36A    $16BF   JP       $6BF            ; Jump to 6BF
$36C    $016D   SYS      $16D            ; System call to 16D
$36E    $23E3   CALL     $3E3            ; Call subroutine at 3E3
$370    $444A   SNE      V4, #4A         ; Skip if V4 != 74
$372    $A5F0   LD       I, $5F0         ; Load 5F0 into I
$374    $92E6   UNKNOWN  $92E6           ; Unknown 9xxx instruction
$376    $A530   LD       I, $530         ; Load 530 into I
$378    $1FAF   JP       $FAF            ; Jump to FAF
$37A    $4330   SNE      V3, #30         ; Skip if V3 != 48
$37C    $A57A   LD       I, $57A         ; Load 57A into I
$37E    $9B07   UNKNOWN  $9B07           ; Unknown 9xxx instruction
$380    $494E   SNE      V9, #4E         ; Skip if V9 != 78
$382    $DF08   DRW      VF, V0, #8      ; Draw 8-byte sprite at VF, V0
$384    $09B3   SYS      $9B3            ; System call to 9B3
$386    $A7D4   LD       I, $7D4         ; Load 7D4 into I
$388    $A166   LD       I, $166         ; Load 166 into I
$38A    $5F71   UNKNOWN  $5F71           ; Unknown 5xxx instruction
$38C    $6314   LD       V3, #14         ; Load 20 into V3
$38E    $D611   DRW      V6, V1, #1      ; Draw 1-byte sprite at V6, V1
$390    $2952   CALL     $952            ; Call subroutine at 952
$392    $974D   UNKNOWN  $974D           ; Unknown 9xxx instruction
$394    $0131   SYS      $131            ; System call to 131
$396    $AA03   LD       I, $A03         ; Load A03 into I
$398    $810F   UNKNOWN  810F            ; Unknown 8xxx instruction
$39A    $77B9   ADD      V7, #B9         ; Add 185 to V7
$39C    $10BE   JP       $0BE            ; Jump to 0BE
$39E    $9F75   UNKNOWN  $9F75           ; Unknown 9xxx instruction
$3A0    $38C7   SE       V8, #C7         ; Skip if V8 == 199
$3A2    $8E66   SHR      VE              ; VE >>= 1, VF = LSB
$3A4    $1E12   JP       $E12            ; Jump to E12
$3A6    $2843   CALL     $843            ; Call subroutine at 843
$3A8    $1C39   JP       $C39            ; Jump to C39
$3AA    $B103   JP       V0, $103        ; Jump to V0 + 103
$3AC    $C41C   RND      V4, #1C         ; V4 = random & 1C
$3AE    $808F   UNKNOWN  808F            ; Unknown 8xxx instruction
$3B0    $CCCD   RND      VC, #CD         ; VC = random & CD
$3B2    $A0EA   LD       I, $0EA         ; Load 0EA into I
$3B4    $0C32   SYS      $C32            ; System call to C32
$3B6    $E58C   UNKNOWN  $E58C           ; Unknown Exxx instruction
$3B8    $166B   JP       $66B            ; Jump to 66B
$3BA    $D21A   DRW      V2, V1, #A      ; Draw 10-byte sprite at V2, V1
$3BC    $1732   JP       $732            ; Jump to 732
$3BE    $F366   UNKNOWN  F366            ; Unknown Fxxx instruction
$3C0    $9AD5   UNKNOWN  $9AD5           ; Unknown 9xxx instruction
$3C2    $E99F   UNKNOWN  $E99F           ; Unknown Exxx instruction
$3C4    $4969   SNE      V9, #69         ; Skip if V9 != 105
$3C6    $2D9F   CALL     $D9F            ; Call subroutine at D9F
$3C8    $8097   SUBN     V0, V9          ; V0 = V9 - V0, VF = !borrow
$3CA    $06FE   SYS      $6FE            ; System call to 6FE
$3CC    $1069   JP       $069            ; Jump to 069
$3CE    $69BA   LD       V9, #BA         ; Load 186 into V9
$3D0    $23B8   CALL     $3B8            ; Call subroutine at 3B8
$3D2    $48B6   SNE      V8, #B6         ; Skip if V8 != 182
$3D4    $0FEF   SYS      $FEF            ; System call to FEF
$3D6    $6238   LD       V2, #38         ; Load 56 into V2
$3D8    $7470   ADD      V4, #70         ; Add 112 to V4
$3DA    $BC24   JP       V0, $C24        ; Jump to V0 + C24
$3DC    $113A   JP       $13A            ; Jump to 13A
$3DE    $3BC3   SE       VB, #C3         ; Skip if VB == 195
$3E0    $B1B0   JP       V0, $1B0        ; Jump to V0 + 1B0
$3E2    $C24C   RND      V2, #4C         ; V2 = random & 4C
$3E4    $C72F   RND      V7, #2F         ; V7 = random & 2F
$3E6    $4104   SNE      V1, #04         ; Skip if V1 != 4
$3E8    $929A   UNKNOWN  $929A           ; Unknown 9xxx instruction
$3EA    $6A53   LD       VA, #53         ; Load 83 into VA
$3EC    $0019   SYS      $019            ; System call to 019
$3EE    $913C   UNKNOWN  $913C           ; Unknown 9xxx instruction
$3F0    $C52A   RND      V5, #2A         ; V5 = random & 2A
$3F2    $9FE7   UNKNOWN  $9FE7           ; Unknown 9xxx instruction
$3F4    $021D   SYS      $21D            ; System call to 21D
$3F6    $1413   JP       $413            ; Jump to 413
$3F8    $123E   JP       $23E            ; Jump to 23E
$3FA    $FB39   UNKNOWN  FB39            ; Unknown Fxxx instruction
$3FC    $955A   UNKNOWN  $955A           ; Unknown 9xxx instruction
$3FE    $C814   RND      V8, #14         ; V8 = random & 14
$400    $D552   DRW      V5, V5, #2      ; Draw 2-byte sprite at V5, V5
$402    $7400   ADD      V4, #00         ; Add 0 to V4
$404    $6CED   LD       VC, #ED         ; Load 237 into VC
$406    $05F1   SYS      $5F1            ; System call to 5F1
$408    $C18E   RND      V1, #8E         ; V1 = random & 8E
$40A    $3042   SE       V0, #42         ; Skip if V0 == 66
$40C    $FADA   UNKNOWN  FADA            ; Unknown Fxxx instruction
$40E    $D0A1   DRW      V0, VA, #1      ; Draw 1-byte sprite at V0, VA
$410    $5C10   SE       VC, V1          ; Skip if VC == V1
$412    $CD32   RND      VD, #32         ; VD = random & 32
$414    $DF3C   DRW      VF, V3, #C      ; Draw 12-byte sprite at VF, V3
$416    $0F2A   SYS      $F2A            ; System call to F2A
$418    $81EF   UNKNOWN  81EF            ; Unknown 8xxx instruction
$41A    $24BF   CALL     $4BF            ; Call subroutine at 4BF
$41C    $2D23   CALL     $D23            ; Call subroutine at D23
$41E    $B68B   JP       V0, $68B        ; Jump to V0 + 68B
$420    $DCCA   DRW      VC, VC, #A      ; Draw 10-byte sprite at VC, VC
$422    $33EA   SE       V3, #EA         ; Skip if V3 == 234
$424    $FFE6   UNKNOWN  FFE6            ; Unknown Fxxx instruction
$426    $C8E1   RND      V8, #E1         ; V8 = random & E1
$428    $16E4   JP       $6E4            ; Jump to 6E4
$42A    $A6E4   LD       I, $6E4         ; Load 6E4 into I
$42C    $7A31   ADD      VA, #31         ; Add 49 to VA
$42E    $DCB5   DRW      VC, VB, #5      ; Draw 5-byte sprite at VC, VB
$430    $FF14   UNKNOWN  FF14            ; Unknown Fxxx instruction
$432    $BAF1   JP       V0, $AF1        ; Jump to V0 + AF1
$434    $985D   UNKNOWN  $985D           ; Unknown 9xxx instruction
$436    $14ED   JP       $4ED            ; Jump to 4ED
$438    $1037   JP       $037            ; Jump to 037
$43A    $977E   UNKNOWN  $977E           ; Unknown 9xxx instruction
$43C    $B6F8   JP       V0, $6F8        ; Jump to V0 + 6F8
$43E    $4777   SNE      V7, #77         ; Skip if V7 != 119
$440    $FB39   UNKNOWN  FB39            ; Unknown Fxxx instruction
$442    $726F   ADD      V2, #6F         ; Add 111 to V2
$444    $45B6   SNE      V5, #B6         ; Skip if V5 != 182
$446    $6F11   LD       VF, #11         ; Load 17 into VF
$448    $00A5   SYS      $0A5            ; System call to 0A5
$44A    $C7CA   RND      V7, #CA         ; V7 = random & CA
$44C    $8A6E   SHL      VA              ; VA <<= 1, VF = MSB
$44E    $43C0   SNE      V3, #C0         ; Skip if V3 != 192
$450    $B794   JP       V0, $794        ; Jump to V0 + 794
$452    $9D9C   UNKNOWN  $9D9C           ; Unknown 9xxx instruction
$454    $2718   CALL     $718            ; Call subroutine at 718
$456    $AE3B   LD       I, $E3B         ; Load E3B into I
$458    $5A35   UNKNOWN  $5A35           ; Unknown 5xxx instruction
$45A    $00E4   SYS      $0E4            ; System call to 0E4
$45C    $67EE   LD       V7, #EE         ; Load 238 into V7
$45E    $49A2   SNE      V9, #A2         ; Skip if V9 != 162
$460    $75F9   ADD      V5, #F9         ; Add 249 to V5
$462    $DD31   DRW      VD, V3, #1      ; Draw 1-byte sprite at VD, V3
$464    $18EF   JP       $8EF            ; Jump to 8EF
$466    $8EFD   UNKNOWN  8EFD            ; Unknown 8xxx instruction
$468    $FA7B   UNKNOWN  FA7B            ; Unknown Fxxx instruction
$46A    $FEC7   UNKNOWN  FEC7            ; Unknown Fxxx instruction
$46C    $C009   RND      V0, #09         ; V0 = random & 09
$46E    $0F42   SYS      $F42            ; System call to F42
$470    $5C0F   UNKNOWN  $5C0F           ; Unknown 5xxx instruction
$472    $909E   UNKNOWN  $909E           ; Unknown 9xxx instruction
$474    $993D   UNKNOWN  $993D           ; Unknown 9xxx instruction
$476    $C875   RND      V8, #75         ; V8 = random & 75
$478    $8DF3   XOR      VD, VF          ; VD ^= VF
$47A    $C95A   RND      V9, #5A         ; V9 = random & 5A
$47C    $AC27   LD       I, $C27         ; Load C27 into I
$47E    $7D45   ADD      VD, #45         ; Add 69 to VD
$480    $426D   SNE      V2, #6D         ; Skip if V2 != 109
$482    $D806   DRW      V8, V0, #6      ; Draw 6-byte sprite at V8, V0
$484    $E321   UNKNOWN  $E321           ; Unknown Exxx instruction
$486    $2B67   CALL     $B67            ; Call subroutine at B67
$488    $838A   UNKNOWN  838A            ; Unknown 8xxx instruction
$48A    $F365   LD       V3, [I]         ; Load V0-V3 from I
$48C    $37C5   SE       V7, #C5         ; Skip if V7 == 197
$48E    $B0D9   JP       V0, $0D9        ; Jump to V0 + 0D9
$490    $2308   CALL     $308            ; Call subroutine at 308
$492    $091A   SYS      $91A            ; System call to 91A
$494    $78D0   ADD      V8, #D0         ; Add 208 to V8
$496    $324F   SE       V2, #4F         ; Skip if V2 == 79
$498    $6E69   LD       VE, #69         ; Load 105 into VE
$49A    $DDE3   DRW      VD, VE, #3      ; Draw 3-byte sprite at VD, VE
$49C    $F00E   UNKNOWN  F00E            ; Unknown Fxxx instruction
$49E    $5BB4   UNKNOWN  $5BB4           ; Unknown 5xxx instruction
$4A0    $01BE   SYS      $1BE            ; System call to 1BE
$4A2    $E180   UNKNOWN  $E180           ; Unknown Exxx instruction
$4A4    $8514   ADD      V5, V1          ; V5 += V1, VF = carry
$4A6    $1F43   JP       $F43            ; Jump to F43
$4A8    $3BE0   SE       VB, #E0         ; Skip if VB == 224
$4AA    $E209   UNKNOWN  $E209           ; Unknown Exxx instruction
$4AC    $891B   UNKNOWN  891B            ; Unknown 8xxx instruction
$4AE    $C13C   RND      V1, #3C         ; V1 = random & 3C
$4B0    $A0A5   LD       I, $0A5         ; Load 0A5 into I
$4B2    $7B87   ADD      VB, #87         ; Add 135 to VB
$4B4    $2704   CALL     $704            ; Call subroutine at 704
$4B6    $9A61   UNKNOWN  $9A61           ; Unknown 9xxx instruction
$4B8    $BB4C   JP       V0, $B4C        ; Jump to V0 + B4C
$4BA    $0174   SYS      $174            ; System call to 174
$4BC    $E2A7   UNKNOWN  $E2A7           ; Unknown Exxx instruction
$4BE    $DA30   DRW      VA, V3, #0      ; Draw 0-byte sprite at VA, V3
$4C0    $712D   ADD      V1, #2D         ; Add 45 to V1
$4C2    $0184   SYS      $184            ; System call to 184
$4C4    $D1AC   DRW      V1, VA, #C      ; Draw 12-byte sprite at V1, VA
$4C6    $FD0E   UNKNOWN  FD0E            ; Unknown Fxxx instruction
$4C8    $D67A   DRW      V6, V7, #A      ; Draw 10-byte sprite at V6, V7
$4CA    $1487   JP       $487            ; Jump to 487
$4CC    $3606   SE       V6, #06         ; Skip if V6 == 6
$4CE    $E486   UNKNOWN  $E486           ; Unknown Exxx instruction
$4D0    $69C0   LD       V9, #C0         ; Load 192 into V9
$4D2    $D85B   DRW      V8, V5, #B      ; Draw 11-byte sprite at V8, V5
$4D4    $2B56   CALL     $B56            ; Call subroutine at B56
$4D6    $3669   SE       V6, #69         ; Skip if V6 == 105
$4D8    $B287   JP       V0, $287        ; Jump to V0 + 287
$4DA    $8DAB   UNKNOWN  8DAB            ; Unknown 8xxx instruction
$4DC    $11A6   JP       $1A6            ; Jump to 1A6
$4DE    $6BA4   LD       VB, #A4         ; Load 164 into VB
$4E0    $97C5   UNKNOWN  $97C5           ; Unknown 9xxx instruction
$4E2    $DE97   DRW      VE, V9, #7      ; Draw 7-byte sprite at VE, V9
$4E4    $1159   JP       $159            ; Jump to 159
$4E6    $9525   UNKNOWN  $9525           ; Unknown 9xxx instruction
$4E8    $23C3   CALL     $3C3            ; Call subroutine at 3C3
$4EA    $2F4B   CALL     $F4B            ; Call subroutine at F4B
$4EC    $1EB5   JP       $EB5            ; Jump to EB5
$4EE    $8E7E   SHL      VE              ; VE <<= 1, VF = MSB
$4F0    $7F83   ADD      VF, #83         ; Add 131 to VF
$4F2    $61AA   LD       V1, #AA         ; Load 170 into V1
$4F4    $3FB5   SE       VF, #B5         ; Skip if VF == 181
$4F6    $2620   CALL     $620            ; Call subroutine at 620
$4F8    $AD7F   LD       I, $D7F         ; Load D7F into I
$4FA    $6BE2   LD       VB, #E2         ; Load 226 into VB
$4FC    $6CE9   LD       VC, #E9         ; Load 233 into VC
$4FE    $5DC7   UNKNOWN  $5DC7           ; Unknown 5xxx instruction
$500    $0F63   SYS      $F63            ; System call to F63
$502    $72BF   ADD      V2, #BF         ; Add 191 to V2
$504    $9D1D   UNKNOWN  $9D1D           ; Unknown 9xxx instruction
$506    $8C80   LD       VC, V8          ; VC = V8
$508    $CEA3   RND      VE, #A3         ; VE = random & A3
$50A    $3922   SE       V9, #22         ; Skip if V9 == 34
$50C    $96AE   UNKNOWN  $96AE           ; Unknown 9xxx instruction
$50E    $E907   UNKNOWN  $E907           ; Unknown Exxx instruction
$510    $EA64   UNKNOWN  $EA64           ; Unknown Exxx instruction
$512    $0DE1   SYS      $DE1            ; System call to DE1
$514    $F34E   UNKNOWN  F34E            ; Unknown Fxxx instruction
$516    $E063   UNKNOWN  $E063           ; Unknown Exxx instruction
$518    $5A5F   UNKNOWN  $5A5F           ; Unknown 5xxx instruction
$51A    $24DB   CALL     $4DB            ; Call subroutine at 4DB
$51C    $4F39   SNE      VF, #39         ; Skip if VF != 57
$51E    $EAB8   UNKNOWN  $EAB8           ; Unknown Exxx instruction
$520    $5036   UNKNOWN  $5036           ; Unknown 5xxx instruction
$522    $6018   LD       V0, #18         ; Load 24 into V0
$524    $DBD4   DRW      VB, VD, #4      ; Draw 4-byte sprite at VB, VD
$526    $CA03   RND      VA, #03         ; VA = random & 03
$528    $F455   LD       [I], V4         ; Store V0-V4 at I
$52A    $0629   SYS      $629            ; System call to 629
$52C    $CE18   RND      VE, #18         ; VE = random & 18
$52E    $1EF8   JP       $EF8            ; Jump to EF8
$530    $A32D   LD       I, $32D         ; Load 32D into I
$532    $2A82   CALL     $A82            ; Call subroutine at A82
$534    $42C7   SNE      V2, #C7         ; Skip if V2 != 199
$536    $546B   UNKNOWN  $546B           ; Unknown 5xxx instruction
$538    $8AEE   SHL      VA              ; VA <<= 1, VF = MSB
$53A    $63C9   LD       V3, #C9         ; Load 201 into V3
$53C    $54B7   UNKNOWN  $54B7           ; Unknown 5xxx instruction
$53E    $611B   LD       V1, #1B         ; Load 27 into V1
$540    $323C   SE       V2, #3C         ; Skip if V2 == 60
$542    $5CBA   UNKNOWN  $5CBA           ; Unknown 5xxx instruction
$544    $7B02   ADD      VB, #02         ; Add 2 to VB
$546    $8B1E   SHL      VB              ; VB <<= 1, VF = MSB
$548    $FCBB   UNKNOWN  FCBB            ; Unknown Fxxx instruction
$54A    $29A3   CALL     $9A3            ; Call subroutine at 9A3
$54C    $2AC3   CALL     $AC3            ; Call subroutine at AC3
$54E    $5FE4   UNKNOWN  $5FE4           ; Unknown 5xxx instruction
$550    $88CF   UNKNOWN  88CF            ; Unknown 8xxx instruction
$552    $8180   LD       V1, V8          ; V1 = V8
$554    $9FF5   UNKNOWN  $9FF5           ; Unknown 9xxx instruction
$556    $B1EB   JP       V0, $1EB        ; Jump to V0 + 1EB
$558    $B130   JP       V0, $130        ; Jump to V0 + 130
$55A    $D10A   DRW      V1, V0, #A      ; Draw 10-byte sprite at V1, V0
$55C    $CE40   RND      VE, #40         ; VE = random & 40
$55E    $1788   JP       $788            ; Jump to 788
$560    $2949   CALL     $949            ; Call subroutine at 949
$562    $1DA5   JP       $DA5            ; Jump to DA5
$564    $8660   LD       V6, V6          ; V6 = V6
$566    $063C   SYS      $63C            ; System call to 63C
$568    $B259   JP       V0, $259        ; Jump to V0 + 259
$56A    $9B80   SNE      VB, V8          ; Skip if VB != V8
$56C    $5FB4   UNKNOWN  $5FB4           ; Unknown 5xxx instruction
$56E    $AA16   LD       I, $A16         ; Load A16 into I
$570    $E9D0   UNKNOWN  $E9D0           ; Unknown Exxx instruction
$572    $0A1E   SYS      $A1E            ; System call to A1E
$574    $CCBE   RND      VC, #BE         ; VC = random & BE
$576    $CD96   RND      VD, #96         ; VD = random & 96
$578    $1526   JP       $526            ; Jump to 526
$57A    $A8F3   LD       I, $8F3         ; Load 8F3 into I
$57C    $C162   RND      V1, #62         ; V1 = random & 62
$57E    $7ED7   ADD      VE, #D7         ; Add 215 to VE
$580    $042C   SYS      $42C            ; System call to 42C
$582    $7D86   ADD      VD, #86         ; Add 134 to VD
$584    $07EF   SYS      $7EF            ; System call to 7EF
$586    $3342   SE       V3, #42         ; Skip if V3 == 66
$588    $B3F9   JP       V0, $3F9        ; Jump to V0 + 3F9
$58A    $41BC   SNE      V1, #BC         ; Skip if V1 != 188
$58C    $0948   SYS      $948            ; System call to 948
$58E    $A0A5   LD       I, $0A5         ; Load 0A5 into I
$590    $02A0   SYS      $2A0            ; System call to 2A0
$592    $FDE7   UNKNOWN  FDE7            ; Unknown Fxxx instruction
$594    $86A5   SUB      V6, VA          ; V6 -= VA, VF = !borrow
$596    $57F6   UNKNOWN  $57F6           ; Unknown 5xxx instruction
$598    $6DC4   LD       VD, #C4         ; Load 196 into VD
$59A    $10E8   JP       $0E8            ; Jump to 0E8
$59C    $AA2F   LD       I, $A2F         ; Load A2F into I
$59E    $56E2   UNKNOWN  $56E2           ; Unknown 5xxx instruction
$5A0    $63F5   LD       V3, #F5         ; Load 245 into V3
$5A2    $C910   RND      V9, #10         ; V9 = random & 10
$5A4    $AA46   LD       I, $A46         ; Load A46 into I
$5A6    $8533   XOR      V5, V3          ; V5 ^= V3
$5A8    $15D3   JP       $5D3            ; Jump to 5D3
$5AA    $AB7A   LD       I, $B7A         ; Load B7A into I
$5AC    $21D8   CALL     $1D8            ; Call subroutine at 1D8
$5AE    $01B7   SYS      $1B7            ; System call to 1B7
$5B0    $013C   SYS      $13C            ; System call to 13C
$5B2    $23DB   CALL     $3DB            ; Call subroutine at 3DB
$5B4    $D453   DRW      V4, V5, #3      ; Draw 3-byte sprite at V4, V5
$5B6    $3FB6   SE       VF, #B6         ; Skip if VF == 182
$5B8    $7FF0   ADD      VF, #F0         ; Add 240 to VF
$5BA    $E574   UNKNOWN  $E574           ; Unknown Exxx instruction
$5BC    $B3C5   JP       V0, $3C5        ; Jump to V0 + 3C5
$5BE    $7F92   ADD      VF, #92         ; Add 146 to VF
$5C0    $E1A9   UNKNOWN  $E1A9           ; Unknown Exxx instruction
$5C2    $BE82   JP       V0, $E82        ; Jump to V0 + E82
$5C4    $4CC0   SNE      VC, #C0         ; Skip if VC != 192
$5C6    $92A3   UNKNOWN  $92A3           ; Unknown 9xxx instruction
$5C8    $DC69   DRW      VC, V6, #9      ; Draw 9-byte sprite at VC, V6
$5CA    $A034   LD       I, $034         ; Load 034 into I
$5CC    $7DEB   ADD      VD, #EB         ; Add 235 to VD
$5CE    $3F69   SE       VF, #69         ; Skip if VF == 105
$5D0    $2DE2   CALL     $DE2            ; Call subroutine at DE2
$5D2    $69A4   LD       V9, #A4         ; Load 164 into V9
$5D4    $1B5E   JP       $B5E            ; Jump to B5E
$5D6    $27EA   CALL     $7EA            ; Call subroutine at 7EA
$5D8    $CEF2   RND      VE, #F2         ; VE = random & F2
$5DA    $9037   UNKNOWN  $9037           ; Unknown 9xxx instruction
$5DC    $1C7B   JP       $C7B            ; Jump to C7B
$5DE    $642D   LD       V4, #2D         ; Load 45 into V4
$5E0    $DB64   DRW      VB, V6, #4      ; Draw 4-byte sprite at VB, V6
$5E2    $F650   UNKNOWN  F650            ; Unknown Fxxx instruction
$5E4    $7F92   ADD      VF, #92         ; Add 146 to VF
$5E6    $69A8   LD       V9, #A8         ; Load 168 into V9
$5E8    $E4F7   UNKNOWN  $E4F7           ; Unknown Exxx instruction
$5EA    $03F3   SYS      $3F3            ; System call to 3F3
$5EC    $5A21   UNKNOWN  $5A21           ; Unknown 5xxx instruction
$5EE    $144C   JP       $44C            ; Jump to 44C
$5F0    $CD7A   RND      VD, #7A         ; VD = random & 7A
$5F2    $7875   ADD      V8, #75         ; Add 117 to V8
$5F4    $85DE   SHL      V5              ; V5 <<= 1, VF = MSB
$5F6    $DA1E   DRW      VA, V1, #E      ; Draw 14-byte sprite at VA, V1
$5F8    $DD01   DRW      VD, V0, #1      ; Draw 1-byte sprite at VD, V0
$5FA    $3929   SE       V9, #29         ; Skip if V9 == 41
$5FC    $3816   SE       V8, #16         ; Skip if V8 == 22
$5FE    $8E49   UNKNOWN  8E49            ; Unknown 8xxx instruction
$600    $5B4C   UNKNOWN  $5B4C           ; Unknown 5xxx instruction
$602    $3505   SE       V5, #05         ; Skip if V5 == 5
$604    $BD90   JP       V0, $D90        ; Jump to V0 + D90
$606    $F92D   UNKNOWN  F92D            ; Unknown Fxxx instruction
$608    $638E   LD       V3, #8E         ; Load 142 into V3
$60A    $933D   UNKNOWN  $933D           ; Unknown 9xxx instruction
$60C    $409D   SNE      V0, #9D         ; Skip if V0 != 157
$60E    $AF37   LD       I, $F37         ; Load F37 into I
$610    $02EA   SYS      $2EA            ; System call to 2EA
$612    $F7A4   UNKNOWN  F7A4            ; Unknown Fxxx instruction
$614    $C45E   RND      V4, #5E         ; V4 = random & 5E
$616    $0174   SYS      $174            ; System call to 174
$618    $25E0   CALL     $5E0            ; Call subroutine at 5E0
$61A    $A88B   LD       I, $88B         ; Load 88B into I
$61C    $CD54   RND      VD, #54         ; VD = random & 54
$61E    $1B3D   JP       $B3D            ; Jump to B3D
$620    $DACA   DRW      VA, VC, #A      ; Draw 10-byte sprite at VA, VC
$622    $C267   RND      V2, #67         ; V2 = random & 67
$624    $E0BB   UNKNOWN  $E0BB           ; Unknown Exxx instruction
$626    $26EA   CALL     $6EA            ; Call subroutine at 6EA
$628    $E769   UNKNOWN  $E769           ; Unknown Exxx instruction
$62A    $B09E   JP       V0, $09E        ; Jump to V0 + 09E
$62C    $47FA   SNE      V7, #FA         ; Skip if V7 != 250
$62E    $DF55   DRW      VF, V5, #5      ; Draw 5-byte sprite at VF, V5
$630    $0B34   SYS      $B34            ; System call to B34
$632    $45AC   SNE      V5, #AC         ; Skip if V5 != 172
$634    $17D7   JP       $7D7            ; Jump to 7D7
$636    $FB90   UNKNOWN  FB90            ; Unknown Fxxx instruction
$638    $EC36   UNKNOWN  $EC36           ; Unknown Exxx instruction
$63A    $9DB6   UNKNOWN  $9DB6           ; Unknown 9xxx instruction
$63C    $BCCD   JP       V0, $CCD        ; Jump to V0 + CCD
$63E    $4E5A   SNE      VE, #5A         ; Skip if VE != 90
$640    $8ED9   UNKNOWN  8ED9            ; Unknown 8xxx instruction
$642    $C5B8   RND      V5, #B8         ; V5 = random & B8
$644    $4AD0   SNE      VA, #D0         ; Skip if VA != 208
$646    $0BCC   SYS      $BCC            ; System call to BCC
$648    $BC57   JP       V0, $C57        ; Jump to V0 + C57
$64A    $1446   JP       $446            ; Jump to 446
$64C    $14AF   JP       $4AF            ; Jump to 4AF
$64E    $A5CE   LD       I, $5CE         ; Load 5CE into I
$650    $7CA2   ADD      VC, #A2         ; Add 162 to VC
$652    $044D   SYS      $44D            ; System call to 44D
$654    $15AC   JP       $5AC            ; Jump to 5AC
$656    $AF76   LD       I, $F76         ; Load F76 into I
$658    $4E8A   SNE      VE, #8A         ; Skip if VE != 138
$65A    $E7AD   UNKNOWN  $E7AD           ; Unknown Exxx instruction
$65C    $87CE   SHL      V7              ; V7 <<= 1, VF = MSB
$65E    $B34D   JP       V0, $34D        ; Jump to V0 + 34D
$660    $B440   JP       V0, $440        ; Jump to V0 + 440
$662    $AA1E   LD       I, $A1E         ; Load A1E into I
$664    $B013   JP       V0, $013        ; Jump to V0 + 013
$666    $FB42   UNKNOWN  FB42            ; Unknown Fxxx instruction
$668    $4C35   SNE      VC, #35         ; Skip if VC != 53
$66A    $19FF   JP       $9FF            ; Jump to 9FF
$66C    $5784   UNKNOWN  $5784           ; Unknown 5xxx instruction
$66E    $A4EC   LD       I, $4EC         ; Load 4EC into I
$670    $C1FE   RND      V1, #FE         ; V1 = random & FE
$672    $1449   JP       $449            ; Jump to 449
$674    $D949   DRW      V9, V4, #9      ; Draw 9-byte sprite at V9, V4
$676    $2BB9   CALL     $BB9            ; Call subroutine at BB9
$678    $E318   UNKNOWN  $E318           ; Unknown Exxx instruction
$67A    $3472   SE       V4, #72         ; Skip if V4 == 114
$67C    $B615   JP       V0, $615        ; Jump to V0 + 615
$67E    $C1EB   RND      V1, #EB         ; V1 = random & EB
$680    $F5F9   UNKNOWN  F5F9            ; Unknown Fxxx instruction
$682    $C42E   RND      V4, #2E         ; V4 = random & 2E
$684    $69D3   LD       V9, #D3         ; Load 211 into V9
$686    $2E5D   CALL     $E5D            ; Call subroutine at E5D
$688    $0519   SYS      $519            ; System call to 519
$68A    $806E   SHL      V0              ; V0 <<= 1, VF = MSB
$68C    $915E   UNKNOWN  $915E           ; Unknown 9xxx instruction
$68E    $AD0A   LD       I, $D0A         ; Load D0A into I
$690    $B379   JP       V0, $379        ; Jump to V0 + 379
$692    $5E5F   UNKNOWN  $5E5F           ; Unknown 5xxx instruction
$694    $F48B   UNKNOWN  F48B            ; Unknown Fxxx instruction
$696    $4D98   SNE      VD, #98         ; Skip if VD != 152
$698    $60B8   LD       V0, #B8         ; Load 184 into V0
$69A    $20FE   CALL     $0FE            ; Call subroutine at 0FE
$69C    $62A5   LD       V2, #A5         ; Load 165 into V2
$69E    $8272   AND      V2, V7          ; V2 &= V7
$6A0    $127C   JP       $27C            ; Jump to 27C
$6A2    $CAD7   RND      VA, #D7         ; VA = random & D7
$6A4    $06C9   SYS      $6C9            ; System call to 6C9
$6A6    $5DD2   UNKNOWN  $5DD2           ; Unknown 5xxx instruction
$6A8    $8C25   SUB      VC, V2          ; VC -= V2, VF = !borrow
$6AA    $6ACA   LD       VA, #CA         ; Load 202 into VA
$6AC    $7A5B   ADD      VA, #5B         ; Add 91 to VA
$6AE    $AAA3   LD       I, $AA3         ; Load AA3 into I
$6B0    $299B   CALL     $99B            ; Call subroutine at 99B
$6B2    $86E4   ADD      V6, VE          ; V6 += VE, VF = carry
$6B4    $7DED   ADD      VD, #ED         ; Add 237 to VD
$6B6    $46B5   SNE      V6, #B5         ; Skip if V6 != 181
$6B8    $F078   UNKNOWN  F078            ; Unknown Fxxx instruction
$6BA    $2E0A   CALL     $E0A            ; Call subroutine at E0A
$6BC    $59B0   SE       V9, VB          ; Skip if V9 == VB
$6BE    $DB5A   DRW      VB, V5, #A      ; Draw 10-byte sprite at VB, V5
$6C0    $34F5   SE       V4, #F5         ; Skip if V4 == 245
$6C2    $E380   UNKNOWN  $E380           ; Unknown Exxx instruction
$6C4    $D242   DRW      V2, V4, #2      ; Draw 2-byte sprite at V2, V4
$6C6    $0890   SYS      $890            ; System call to 890
$6C8    $DBD9   DRW      VB, VD, #9      ; Draw 9-byte sprite at VB, VD
$6CA    $C858   RND      V8, #58         ; V8 = random & 58
$6CC    $FCD5   UNKNOWN  FCD5            ; Unknown Fxxx instruction
$6CE    $8029   UNKNOWN  8029            ; Unknown 8xxx instruction
$6D0    $D139   DRW      V1, V3, #9      ; Draw 9-byte sprite at V1, V3
$6D2    $2B84   CALL     $B84            ; Call subroutine at B84
$6D4    $6572   LD       V5, #72         ; Load 114 into V5
$6D6    $8DAC   UNKNOWN  8DAC            ; Unknown 8xxx instruction
$6D8    $79BB   ADD      V9, #BB         ; Add 187 to V9
$6DA    $4657   SNE      V6, #57         ; Skip if V6 != 87
$6DC    $4EE0   SNE      VE, #E0         ; Skip if VE != 224
$6DE    $9221   UNKNOWN  $9221           ; Unknown 9xxx instruction
$6E0    $D68F   DRW      V6, V8, #F      ; Draw 15-byte sprite at V6, V8
$6E2    $0009   SYS      $009            ; System call to 009
$6E4    $ACF2   LD       I, $CF2         ; Load CF2 into I
$6E6    $68E5   LD       V8, #E5         ; Load 229 into V8
$6E8    $B97E   JP       V0, $97E        ; Jump to V0 + 97E
$6EA    $83E9   UNKNOWN  83E9            ; Unknown 8xxx instruction
$6EC    $28FF   CALL     $8FF            ; Call subroutine at 8FF
$6EE    $4F6A   SNE      VF, #6A         ; Skip if VF != 106
$6F0    $4304   SNE      V3, #04         ; Skip if V3 != 4
$6F2    $B1A1   JP       V0, $1A1        ; Jump to V0 + 1A1
$6F4    $125F   JP       $25F            ; Jump to 25F
$6F6    $812E   SHL      V1              ; V1 <<= 1, VF = MSB
$6F8    $C994   RND      V9, #94         ; V9 = random & 94
$6FA    $E660   UNKNOWN  $E660           ; Unknown Exxx instruction
$6FC    $2E69   CALL     $E69            ; Call subroutine at E69
$6FE    $E743   UNKNOWN  $E743           ; Unknown Exxx instruction
$700    $32B9   SE       V2, #B9         ; Skip if V2 == 185
$702    $BF2F   JP       V0, $F2F        ; Jump to V0 + F2F
$704    $3DFE   SE       VD, #FE         ; Skip if VD == 254
$706    $5FBB   UNKNOWN  $5FBB           ; Unknown 5xxx instruction
$708    $BBE6   JP       V0, $BE6        ; Jump to V0 + BE6
$70A    $1553   JP       $553            ; Jump to 553
$70C    $B2F6   JP       V0, $2F6        ; Jump to V0 + 2F6
$70E    $EDCD   UNKNOWN  $EDCD           ; Unknown Exxx instruction
$710    $1AE2   JP       $AE2            ; Jump to AE2
$712    $47EA   SNE      V7, #EA         ; Skip if V7 != 234
$714    $872B   UNKNOWN  872B            ; Unknown 8xxx instruction
$716    $D6D3   DRW      V6, VD, #3      ; Draw 3-byte sprite at V6, VD
$718    $82BC   UNKNOWN  82BC            ; Unknown 8xxx instruction
$71A    $B66B   JP       V0, $66B        ; Jump to V0 + 66B
$71C    $238E   CALL     $38E            ; Call subroutine at 38E
$71E    $37D9   SE       V7, #D9         ; Skip if V7 == 217
$720    $E0BF   UNKNOWN  $E0BF           ; Unknown Exxx instruction
$722    $DB16   DRW      VB, V1, #6      ; Draw 6-byte sprite at VB, V1
$724    $312D   SE       V1, #2D         ; Skip if V1 == 45
$726    $75CC   ADD      V5, #CC         ; Add 204 to V5
$728    $2A05   CALL     $A05            ; Call subroutine at A05
$72A    $4FAF   SNE      VF, #AF         ; Skip if VF != 175
$72C    $0AC5   SYS      $AC5            ; System call to AC5
$72E    $21AD   CALL     $1AD            ; Call subroutine at 1AD
$730    $8AD3   XOR      VA, VD          ; VA ^= VD
$732    $9813   UNKNOWN  $9813           ; Unknown 9xxx instruction
$734    $9A9C   UNKNOWN  $9A9C           ; Unknown 9xxx instruction
$736    $B9B2   JP       V0, $9B2        ; Jump to V0 + 9B2
$738    $6730   LD       V7, #30         ; Load 48 into V7
$73A    $BD44   JP       V0, $D44        ; Jump to V0 + D44
$73C    $8AA4   ADD      VA, VA          ; VA += VA, VF = carry
$73E    $9E99   UNKNOWN  $9E99           ; Unknown 9xxx instruction
$740    $1B61   JP       $B61            ; Jump to B61
$742    $D3CC   DRW      V3, VC, #C      ; Draw 12-byte sprite at V3, VC
$744    $F1A4   UNKNOWN  F1A4            ; Unknown Fxxx instruction
$746    $F204   UNKNOWN  F204            ; Unknown Fxxx instruction
$748    $B1E1   JP       V0, $1E1        ; Jump to V0 + 1E1
$74A    $CC00   RND      VC, #00         ; VC = random & 00
$74C    $A577   LD       I, $577         ; Load 577 into I
$74E    $C593   RND      V5, #93         ; V5 = random & 93
$750    $EDFF   UNKNOWN  $EDFF           ; Unknown Exxx instruction
$752    $2812   CALL     $812            ; Call subroutine at 812
$754    $6516   LD       V5, #16         ; Load 22 into V5
$756    $9C43   UNKNOWN  $9C43           ; Unknown 9xxx instruction
$758    $A796   LD       I, $796         ; Load 796 into I
$75A    $2A12   CALL     $A12            ; Call subroutine at A12
$75C    $E17A   UNKNOWN  $E17A           ; Unknown Exxx instruction
$75E    $7B20   ADD      VB, #20         ; Add 32 to VB
$760    $047A   SYS      $47A            ; System call to 47A
$762    $F85B   UNKNOWN  F85B            ; Unknown Fxxx instruction
$764    $4CB9   SNE      VC, #B9         ; Skip if VC != 185
$766    $0069   SYS      $069            ; System call to 069
$768    $E170   UNKNOWN  $E170           ; Unknown Exxx instruction
$76A    $DB10   DRW      VB, V1, #0      ; Draw 0-byte sprite at VB, V1
$76C    $06A1   SYS      $6A1            ; System call to 6A1
$76E    $34E6   SE       V4, #E6         ; Skip if V4 == 230
$770    $77B6   ADD      V7, #B6         ; Add 182 to V7
$772    $612D   LD       V1, #2D         ; Load 45 into V1
$774    $9E37   UNKNOWN  $9E37           ; Unknown 9xxx instruction
$776    $4E99   SNE      VE, #99         ; Skip if VE != 153
$778    $8841   OR       V8, V4          ; V8 |= V4
$77A    $B20E   JP       V0, $20E        ; Jump to V0 + 20E
$77C    $E59C   UNKNOWN  $E59C           ; Unknown Exxx instruction
$77E    $E273   UNKNOWN  $E273           ; Unknown Exxx instruction
$780    $5C7F   UNKNOWN  $5C7F           ; Unknown 5xxx instruction
$782    $6930   LD       V9, #30         ; Load 48 into V9
$784    $E80F   UNKNOWN  $E80F           ; Unknown Exxx instruction
$786    $4A74   SNE      VA, #74         ; Skip if VA != 116
$788    $7295   ADD      V2, #95         ; Add 149 to V2
$78A    $BD87   JP       V0, $D87        ; Jump to V0 + D87
$78C    $45D2   SNE      V5, #D2         ; Skip if V5 != 210
$78E    $8AFF   UNKNOWN  8AFF            ; Unknown 8xxx instruction
$790    $A3C7   LD       I, $3C7         ; Load 3C7 into I
$792    $A196   LD       I, $196         ; Load 196 into I
$794    $3AF1   SE       VA, #F1         ; Skip if VA == 241
$796    $12B0   JP       $2B0            ; Jump to 2B0
$798    $346F   SE       V4, #6F         ; Skip if V4 == 111
$79A    $79D5   ADD      V9, #D5         ; Add 213 to V9
$79C    $9A82   UNKNOWN  $9A82           ; Unknown 9xxx instruction
$79E    $6E21   LD       VE, #21         ; Load 33 into VE
$7A0    $33A1   SE       V3, #A1         ; Skip if V3 == 161
$7A2    $EED3   UNKNOWN  $EED3           ; Unknown Exxx instruction
$7A4    $0AC4   SYS      $AC4            ; System call to AC4
$7A6    $E150   UNKNOWN  $E150           ; Unknown Exxx instruction
$7A8    $B366   JP       V0, $366        ; Jump to V0 + 366
$7AA    $DF47   DRW      VF, V4, #7      ; Draw 7-byte sprite at VF, V4
$7AC    $EB5D   UNKNOWN  $EB5D           ; Unknown Exxx instruction
$7AE    $FD7A   UNKNOWN  FD7A            ; Unknown Fxxx instruction
$7B0    $052F   SYS      $52F            ; System call to 52F
$7B2    $C2D3   RND      V2, #D3         ; V2 = random & D3
$7B4    $63E9   LD       V3, #E9         ; Load 233 into V3
$7B6    $348C   SE       V4, #8C         ; Skip if V4 == 140
$7B8    $5206   UNKNOWN  $5206           ; Unknown 5xxx instruction
$7BA    $00F0   SYS      $0F0            ; System call to 0F0
$7BC    $6BB5   LD       VB, #B5         ; Load 181 into VB
$7BE    $DBC8   DRW      VB, VC, #8      ; Draw 8-byte sprite at VB, VC
$7C0    $024C   SYS      $24C            ; System call to 24C
$7C2    $6B50   LD       VB, #50         ; Load 80 into VB
$7C4    $0C9D   SYS      $C9D            ; System call to C9D
$7C6    $0E68   SYS      $E68            ; System call to E68
$7C8    $1AA9   JP       $AA9            ; Jump to AA9
$7CA    $3E7E   SE       VE, #7E         ; Skip if VE == 126
$7CC    $0F03   SYS      $F03            ; System call to F03
$7CE    $9912   UNKNOWN  $9912           ; Unknown 9xxx instruction
$7D0    $22B2   CALL     $2B2            ; Call subroutine at 2B2
$7D2    $EA4D   UNKNOWN  $EA4D           ; Unknown Exxx instruction
$7D4    $CD2A   RND      VD, #2A         ; VD = random & 2A
$7D6    $0C67   SYS      $C67            ; System call to C67
$7D8    $CF89   RND      VF, #89         ; VF = random & 89
$7DA    $619C   LD       V1, #9C         ; Load 156 into V1
$7DC    $0E09   SYS      $E09            ; System call to E09
$7DE    $F128   UNKNOWN  F128            ; Unknown Fxxx instruction
$7E0    $6FF6   LD       VF, #F6         ; Load 246 into VF
$7E2    $19D5   JP       $9D5            ; Jump to 9D5
$7E4    $9070   SNE      V0, V7          ; Skip if V0 != V7
$7E6    $A271   LD       I, $271         ; Load 271 into I
$7E8    $2CF9   CALL     $CF9            ; Call subroutine at CF9
$7EA    $0A79   SYS      $A79            ; System call to A79
$7EC    $F416   UNKNOWN  F416            ; Unknown Fxxx instruction
$7EE    $46C8   SNE      V6, #C8         ; Skip if V6 != 200
$7F0    $C2A3   RND      V2, #A3         ; V2 = random & A3
$7F2    $8439   UNKNOWN  8439            ; Unknown 8xxx instruction
$7F4    $A027   LD       I, $027         ; Load 027 into I
$7F6    $42A8   SNE      V2, #A8         ; Skip if V2 != 168
$7F8    $B8B5   JP       V0, $8B5        ; Jump to V0 + 8B5
$7FA    $2CB2   CALL     $CB2            ; Call subroutine at CB2
$7FC    $9A1D   UNKNOWN  $9A1D           ; Unknown 9xxx instruction
$7FE    $7E17   ADD      VE, #17         ; Add 23 to VE
$800    $298C   CALL     $98C            ; Call subroutine at 98C
$802    $01F8   SYS      $1F8            ; System call to 1F8
$804    $3093   SE       V0, #93         ; Skip if V0 == 147
$806    $9A55   UNKNOWN  $9A55           ; Unknown 9xxx instruction
$808    $F485   UNKNOWN  F485            ; Unknown Fxxx instruction
$80A    $78D8   ADD      V8, #D8         ; Add 216 to V8
$80C    $151B   JP       $51B            ; Jump to 51B
$80E    $3B5A   SE       VB, #5A         ; Skip if VB == 90
$810    $08B1   SYS      $8B1            ; System call to 8B1
$812    $3F4B   SE       VF, #4B         ; Skip if VF == 75
$814    $69E2   LD       V9, #E2         ; Load 226 into V9
$816    $8EEF   UNKNOWN  8EEF            ; Unknown 8xxx instruction
$818    $5F42   UNKNOWN  $5F42           ; Unknown 5xxx instruction
$81A    $5CFD   UNKNOWN  $5CFD           ; Unknown 5xxx instruction
$81C    $CE1F   RND      VE, #1F         ; VE = random & 1F
$81E    $7582   ADD      V5, #82         ; Add 130 to V5
$820    $8EF6   SHR      VE              ; VE >>= 1, VF = LSB
$822    $4EF4   SNE      VE, #F4         ; Skip if VE != 244
$824    $877A   UNKNOWN  877A            ; Unknown 8xxx instruction
$826    $F42D   UNKNOWN  F42D            ; Unknown Fxxx instruction
$828    $F1D3   UNKNOWN  F1D3            ; Unknown Fxxx instruction
$82A    $5738   UNKNOWN  $5738           ; Unknown 5xxx instruction
$82C    $EA0F   UNKNOWN  $EA0F           ; Unknown Exxx instruction
$82E    $D349   DRW      V3, V4, #9      ; Draw 9-byte sprite at V3, V4
$830    $C4C9   RND      V4, #C9         ; V4 = random & C9
$832    $B811   JP       V0, $811        ; Jump to V0 + 811
$834    $E8AE   UNKNOWN  $E8AE           ; Unknown Exxx instruction
$836    $F6EF   UNKNOWN  F6EF            ; Unknown Fxxx instruction
$838    $7AD7   ADD      VA, #D7         ; Add 215 to VA
$83A    $5D28   UNKNOWN  $5D28           ; Unknown 5xxx instruction
$83C    $BD42   JP       V0, $D42        ; Jump to V0 + D42
$83E    $2697   CALL     $697            ; Call subroutine at 697
$840    $D774   DRW      V7, V7, #4      ; Draw 4-byte sprite at V7, V7
$842    $14DB   JP       $4DB            ; Jump to 4DB
$844    $EC78   UNKNOWN  $EC78           ; Unknown Exxx instruction
$846    $C556   RND      V5, #56         ; V5 = random & 56
$848    $B69D   JP       V0, $69D        ; Jump to V0 + 69D
$84A    $9F29   UNKNOWN  $9F29           ; Unknown 9xxx instruction
$84C    $15FE   JP       $5FE            ; Jump to 5FE
$84E    $4916   SNE      V9, #16         ; Skip if V9 != 22
$850    $1DDC   JP       $DDC            ; Jump to DDC
$852    $FBF2   UNKNOWN  FBF2            ; Unknown Fxxx instruction
$854    $6F70   LD       VF, #70         ; Load 112 into VF
$856    $F1D1   UNKNOWN  F1D1            ; Unknown Fxxx instruction
$858    $F813   UNKNOWN  F813            ; Unknown Fxxx instruction
$85A    $C7CE   RND      V7, #CE         ; V7 = random & CE
$85C    $2C84   CALL     $C84            ; Call subroutine at C84
$85E    $2D46   CALL     $D46            ; Call subroutine at D46
$860    $8B7A   UNKNOWN  8B7A            ; Unknown 8xxx instruction
$862    $7520   ADD      V5, #20         ; Add 32 to V5
$864    $FB0D   UNKNOWN  FB0D            ; Unknown Fxxx instruction
$866    $ED03   UNKNOWN  $ED03           ; Unknown Exxx instruction
$868    $A557   LD       I, $557         ; Load 557 into I
$86A    $57EE   UNKNOWN  $57EE           ; Unknown 5xxx instruction
$86C    $4DD7   SNE      VD, #D7         ; Skip if VD != 215
$86E    $422C   SNE      V2, #2C         ; Skip if V2 != 44
$870    $8840   LD       V8, V4          ; V8 = V4
$872    $77FF   ADD      V7, #FF         ; Add 255 to V7
$874    $E3B7   UNKNOWN  $E3B7           ; Unknown Exxx instruction
$876    $8E62   AND      VE, V6          ; VE &= V6
$878    $DC1E   DRW      VC, V1, #E      ; Draw 14-byte sprite at VC, V1
$87A    $73DB   ADD      V3, #DB         ; Add 219 to V3
$87C    $1E38   JP       $E38            ; Jump to E38
$87E    $F45D   UNKNOWN  F45D            ; Unknown Fxxx instruction
$880    $0DD1   SYS      $DD1            ; System call to DD1
$882    $3C95   SE       VC, #95         ; Skip if VC == 149
$884    $541D   UNKNOWN  $541D           ; Unknown 5xxx instruction
$886    $A31C   LD       I, $31C         ; Load 31C into I
$888    $A24F   LD       I, $24F         ; Load 24F into I
$88A    $DB2C   DRW      VB, V2, #C      ; Draw 12-byte sprite at VB, V2
$88C    $A0A1   LD       I, $0A1         ; Load 0A1 into I
$88E    $D5D1   DRW      V5, VD, #1      ; Draw 1-byte sprite at V5, VD
$890    $4E65   SNE      VE, #65         ; Skip if VE != 101
$892    $5354   UNKNOWN  $5354           ; Unknown 5xxx instruction
$894    $2FC0   CALL     $FC0            ; Call subroutine at FC0
$896    $4137   SNE      V1, #37         ; Skip if V1 != 55
$898    $5D04   UNKNOWN  $5D04           ; Unknown 5xxx instruction
$89A    $302B   SE       V0, #2B         ; Skip if V0 == 43
$89C    $2774   CALL     $774            ; Call subroutine at 774
$89E    $E02C   UNKNOWN  $E02C           ; Unknown Exxx instruction
$8A0    $C536   RND      V5, #36         ; V5 = random & 36
$8A2    $3463   SE       V4, #63         ; Skip if V4 == 99
$8A4    $C310   RND      V3, #10         ; V3 = random & 10
$8A6    $EB31   UNKNOWN  $EB31           ; Unknown Exxx instruction
$8A8    $9B02   UNKNOWN  $9B02           ; Unknown 9xxx instruction
$8AA    $9C93   UNKNOWN  $9C93           ; Unknown 9xxx instruction
$8AC    $5200   SE       V2, V0          ; Skip if V2 == V0
$8AE    $D42D   DRW      V4, V2, #D      ; Draw 13-byte sprite at V4, V2
$8B0    $6541   LD       V5, #41         ; Load 65 into V5
$8B2    $D374   DRW      V3, V7, #4      ; Draw 4-byte sprite at V3, V7
$8B4    $824E   SHL      V2              ; V2 <<= 1, VF = MSB
$8B6    $0345   SYS      $345            ; System call to 345
$8B8    $7E25   ADD      VE, #25         ; Add 37 to VE
$8BA    $79FA   ADD      V9, #FA         ; Add 250 to V9
$8BC    $D30A   DRW      V3, V0, #A      ; Draw 10-byte sprite at V3, V0
$8BE    $CEF7   RND      VE, #F7         ; VE = random & F7
$8C0    $7C4C   ADD      VC, #4C         ; Add 76 to VC
$8C2    $A74A   LD       I, $74A         ; Load 74A into I
$8C4    $7511   ADD      V5, #11         ; Add 17 to V5
$8C6    $FFD3   UNKNOWN  FFD3            ; Unknown Fxxx instruction
$8C8    $F406   UNKNOWN  F406            ; Unknown Fxxx instruction
$8CA    $38FF   SE       V8, #FF         ; Skip if V8 == 255
$8CC    $EF05   UNKNOWN  $EF05           ; Unknown Exxx instruction
$8CE    $4389   SNE      V3, #89         ; Skip if V3 != 137
$8D0    $2168   CALL     $168            ; Call subroutine at 168
$8D2    $42D7   SNE      V2, #D7         ; Skip if V2 != 215
$8D4    $BD71   JP       V0, $D71        ; Jump to V0 + D71
$8D6    $ABF3   LD       I, $BF3         ; Load BF3 into I
$8D8    $7BC8   ADD      VB, #C8         ; Add 200 to VB
$8DA    $A626   LD       I, $626         ; Load 626 into I
$8DC    $3C2E   SE       VC, #2E         ; Skip if VC == 46
$8DE    $6BC8   LD       VB, #C8         ; Load 200 into VB
$8E0    $2F1D   CALL     $F1D            ; Call subroutine at F1D
$8E2    $5A15   UNKNOWN  $5A15           ; Unknown 5xxx instruction
$8E4    $3546   SE       V5, #46         ; Skip if V5 == 70
$8E6    $8075   SUB      V0, V7          ; V0 -= V7, VF = !borrow
$8E8    $EC34   UNKNOWN  $EC34           ; Unknown Exxx instruction
$8EA    $F6D2   UNKNOWN  F6D2            ; Unknown Fxxx instruction
$8EC    $1A87   JP       $A87            ; Jump to A87
$8EE    $8D30   LD       VD, V3          ; VD = V3
$8F0    $9775   UNKNOWN  $9775           ; Unknown 9xxx instruction
$8F2    $CB8E   RND      VB, #8E         ; VB = random & 8E
$8F4    $EECB   UNKNOWN  $EECB           ; Unknown Exxx instruction
$8F6    $B0E1   JP       V0, $0E1        ; Jump to V0 + 0E1
$8F8    $6BFD   LD       VB, #FD         ; Load 253 into VB
$8FA    $ECBB   UNKNOWN  $ECBB           ; Unknown Exxx instruction
$8FC    $7617   ADD      V6, #17         ; Add 23 to V6
$8FE    $C9FF   RND      V9, #FF         ; V9 = random & FF
$900    $E1F3   UNKNOWN  $E1F3           ; Unknown Exxx instruction
$902    $7D4E   ADD      VD, #4E         ; Add 78 to VD
$904    $B141   JP       V0, $141        ; Jump to V0 + 141
$906    $7FB3   ADD      VF, #B3         ; Add 179 to VF
$908    $12A7   JP       $2A7            ; Jump to 2A7
$90A    $691B   LD       V9, #1B         ; Load 27 into V9
$90C    $C910   RND      V9, #10         ; V9 = random & 10
$90E    $2843   CALL     $843            ; Call subroutine at 843
$910    $F693   UNKNOWN  F693            ; Unknown Fxxx instruction
$912    $3B2C   SE       VB, #2C         ; Skip if VB == 44
$914    $9C43   UNKNOWN  $9C43           ; Unknown 9xxx instruction
$916    $E10A   UNKNOWN  $E10A           ; Unknown Exxx instruction
$918    $C227   RND      V2, #27         ; V2 = random & 27
$91A    $3C5A   SE       VC, #5A         ; Skip if VC == 90
$91C    $46B3   SNE      V6, #B3         ; Skip if V6 != 179
$91E    $573E   UNKNOWN  $573E           ; Unknown 5xxx instruction
$920    $C33E   RND      V3, #3E         ; V3 = random & 3E
$922    $7227   ADD      V2, #27         ; Add 39 to V2
$924    $4E10   SNE      VE, #10         ; Skip if VE != 16
$926    $C267   RND      V2, #67         ; V2 = random & 67
$928    $F7AD   UNKNOWN  F7AD            ; Unknown Fxxx instruction
$92A    $5361   UNKNOWN  $5361           ; Unknown 5xxx instruction
$92C    $69D5   LD       V9, #D5         ; Load 213 into V9
$92E    $6217   LD       V2, #17         ; Load 23 into V2
$930    $F63D   UNKNOWN  F63D            ; Unknown Fxxx instruction
$932    $C3C6   RND      V3, #C6         ; V3 = random & C6
$934    $43DD   SNE      V3, #DD         ; Skip if V3 != 221
$936    $9081   UNKNOWN  $9081           ; Unknown 9xxx instruction
$938    $6490   LD       V4, #90         ; Load 144 into V4
$93A    $F559   UNKNOWN  F559            ; Unknown Fxxx instruction
$93C    $4AAA   SNE      VA, #AA         ; Skip if VA != 170
$93E    $FBEA   UNKNOWN  FBEA            ; Unknown Fxxx instruction
$940    $5532   UNKNOWN  $5532           ; Unknown 5xxx instruction
$942    $84F2   AND      V4, VF          ; V4 &= VF
$944    $0832   SYS      $832            ; System call to 832
$946    $AC77   LD       I, $C77         ; Load C77 into I
$948    $6358   LD       V3, #58         ; Load 88 into V3
$94A    $40DE   SNE      V0, #DE         ; Skip if V0 != 222
$94C    $2CBB   CALL     $CBB            ; Call subroutine at CBB
$94E    $83E9   UNKNOWN  83E9            ; Unknown 8xxx instruction
$950    $DD59   DRW      VD, V5, #9      ; Draw 9-byte sprite at VD, V5
$952    $BCCA   JP       V0, $CCA        ; Jump to V0 + CCA
$954    $C826   RND      V8, #26         ; V8 = random & 26
$956    $3795   SE       V7, #95         ; Skip if V7 == 149
$958    $3D52   SE       VD, #52         ; Skip if VD == 82
$95A    $84C6   SHR      V4              ; V4 >>= 1, VF = LSB
$95C    $F950   UNKNOWN  F950            ; Unknown Fxxx instruction
$95E    $6FD4   LD       VF, #D4         ; Load 212 into VF
$960    $96FF   UNKNOWN  $96FF           ; Unknown 9xxx instruction
$962    $DEA2   DRW      VE, VA, #2      ; Draw 2-byte sprite at VE, VA
$964    $9032   UNKNOWN  $9032           ; Unknown 9xxx instruction
$966    $4535   SNE      V5, #35         ; Skip if V5 != 53
$968    $FAFE   UNKNOWN  FAFE            ; Unknown Fxxx instruction
$96A    $2F55   CALL     $F55            ; Call subroutine at F55
$96C    $1F05   JP       $F05            ; Jump to F05
$96E    $D935   DRW      V9, V3, #5      ; Draw 5-byte sprite at V9, V3
$970    $585D   UNKNOWN  $585D           ; Unknown 5xxx instruction
$972    $9884   UNKNOWN  $9884           ; Unknown 9xxx instruction
$974    $FBAB   UNKNOWN  FBAB            ; Unknown Fxxx instruction
$976    $187B   JP       $87B            ; Jump to 87B
$978    $3686   SE       V6, #86         ; Skip if V6 == 134
$97A    $D9D4   DRW      V9, VD, #4      ; Draw 4-byte sprite at V9, VD
$97C    $8943   XOR      V9, V4          ; V9 ^= V4
$97E    $0B5D   SYS      $B5D            ; System call to B5D
$980    $BC76   JP       V0, $C76        ; Jump to V0 + C76
$982    $95E5   UNKNOWN  $95E5           ; Unknown 9xxx instruction
$984    $EB0D   UNKNOWN  $EB0D           ; Unknown Exxx instruction
$986    $5435   UNKNOWN  $5435           ; Unknown 5xxx instruction
$988    $7968   ADD      V9, #68         ; Add 104 to V9
$98A    $CE43   RND      VE, #43         ; VE = random & 43
$98C    $1072   JP       $072            ; Jump to 072
$98E    $049A   SYS      $49A            ; System call to 49A
$990    $2DF4   CALL     $DF4            ; Call subroutine at DF4
$992    $CBE9   RND      VB, #E9         ; VB = random & E9
$994    $727C   ADD      V2, #7C         ; Add 124 to V2
$996    $37CD   SE       V7, #CD         ; Skip if V7 == 205
$998    $A01A   LD       I, $01A         ; Load 01A into I
$99A    $01A7   SYS      $1A7            ; System call to 1A7
$99C    $3D81   SE       VD, #81         ; Skip if VD == 129
$99E    $66F5   LD       V6, #F5         ; Load 245 into V6
$9A0    $A58E   LD       I, $58E         ; Load 58E into I
$9A2    $A11C   LD       I, $11C         ; Load 11C into I
$9A4    $5478   UNKNOWN  $5478           ; Unknown 5xxx instruction
$9A6    $07D7   SYS      $7D7            ; System call to 7D7
$9A8    $38D5   SE       V8, #D5         ; Skip if V8 == 213
$9AA    $570E   UNKNOWN  $570E           ; Unknown 5xxx instruction
$9AC    $EA06   UNKNOWN  $EA06           ; Unknown Exxx instruction
$9AE    $88F8   UNKNOWN  88F8            ; Unknown 8xxx instruction
$9B0    $09DB   SYS      $9DB            ; System call to 9DB
$9B2    $D195   DRW      V1, V9, #5      ; Draw 5-byte sprite at V1, V9
$9B4    $252C   CALL     $52C            ; Call subroutine at 52C
$9B6    $25F5   CALL     $5F5            ; Call subroutine at 5F5
$9B8    $15DF   JP       $5DF            ; Jump to 5DF
$9BA    $7163   ADD      V1, #63         ; Add 99 to V1
$9BC    $40D9   SNE      V0, #D9         ; Skip if V0 != 217
$9BE    $5394   UNKNOWN  $5394           ; Unknown 5xxx instruction
$9C0    $A8B5   LD       I, $8B5         ; Load 8B5 into I
$9C2    $651F   LD       V5, #1F         ; Load 31 into V5
$9C4    $EFE3   UNKNOWN  $EFE3           ; Unknown Exxx instruction
$9C6    $C92D   RND      V9, #2D         ; V9 = random & 2D
$9C8    $8E32   AND      VE, V3          ; VE &= V3
$9CA    $BC4E   JP       V0, $C4E        ; Jump to V0 + C4E
$9CC    $5B29   UNKNOWN  $5B29           ; Unknown 5xxx instruction
$9CE    $83B8   UNKNOWN  83B8            ; Unknown 8xxx instruction
$9D0    $9EBA   UNKNOWN  $9EBA           ; Unknown 9xxx instruction
$9D2    $3C97   SE       VC, #97         ; Skip if VC == 151
$9D4    $0A95   SYS      $A95            ; System call to A95
$9D6    $E35B   UNKNOWN  $E35B           ; Unknown Exxx instruction
$9D8    $76B9   ADD      V6, #B9         ; Add 185 to V6
$9DA    $FB35   UNKNOWN  FB35            ; Unknown Fxxx instruction
$9DC    $7A3D   ADD      VA, #3D         ; Add 61 to VA
$9DE    $D9D7   DRW      V9, VD, #7      ; Draw 7-byte sprite at V9, VD
$9E0    $6B70   LD       VB, #70         ; Load 112 into VB
$9E2    $709A   ADD      V0, #9A         ; Add 154 to V0
$9E4    $9FB3   UNKNOWN  $9FB3           ; Unknown 9xxx instruction
$9E6    $8B3D   UNKNOWN  8B3D            ; Unknown 8xxx instruction
$9E8    $9A5D   UNKNOWN  $9A5D           ; Unknown 9xxx instruction
$9EA    $1073   JP       $073            ; Jump to 073
$9EC    $3AA4   SE       VA, #A4         ; Skip if VA == 164
$9EE    $E773   UNKNOWN  $E773           ; Unknown Exxx instruction
$9F0    $3362   SE       V3, #62         ; Skip if V3 == 98
$9F2    $CA1D   RND      VA, #1D         ; VA = random & 1D
$9F4    $B462   JP       V0, $462        ; Jump to V0 + 462
$9F6    $B63D   JP       V0, $63D        ; Jump to V0 + 63D
$9F8    $F9D0   UNKNOWN  F9D0            ; Unknown Fxxx instruction
$9FA    $5BF7   UNKNOWN  $5BF7           ; Unknown 5xxx instruction
$9FC    $85BF   UNKNOWN  85BF            ; Unknown 8xxx instruction
$9FE    $9617   UNKNOWN  $9617           ; Unknown 9xxx instruction
$A00    $BCC1   JP       V0, $CC1        ; Jump to V0 + CC1
$A02    $4EB0   SNE      VE, #B0         ; Skip if VE != 176
$A04    $F713   UNKNOWN  F713            ; Unknown Fxxx instruction
$A06    $4B87   SNE      VB, #87         ; Skip if VB != 135
$A08    $1EBA   JP       $EBA            ; Jump to EBA
$A0A    $29BE   CALL     $9BE            ; Call subroutine at 9BE
$A0C    $6799   LD       V7, #99         ; Load 153 into V7
$A0E    $F328   UNKNOWN  F328            ; Unknown Fxxx instruction
$A10    $50C9   UNKNOWN  $50C9           ; Unknown 5xxx instruction
$A12    $B6B3   JP       V0, $6B3        ; Jump to V0 + 6B3
$A14    $0702   SYS      $702            ; System call to 702
$A16    $3230   SE       V2, #30         ; Skip if V2 == 48
$A18    $5B0F   UNKNOWN  $5B0F           ; Unknown 5xxx instruction
$A1A    $9F8D   UNKNOWN  $9F8D           ; Unknown 9xxx instruction
$A1C    $CE74   RND      VE, #74         ; VE = random & 74
$A1E    $EEAB   UNKNOWN  $EEAB           ; Unknown Exxx instruction
$A20    $2620   CALL     $620            ; Call subroutine at 620
$A22    $5F08   UNKNOWN  $5F08           ; Unknown 5xxx instruction
$A24    $FFFC   UNKNOWN  FFFC            ; Unknown Fxxx instruction
$A26    $D08C   DRW      V0, V8, #C      ; Draw 12-byte sprite at V0, V8
$A28    $6FB3   LD       VF, #B3         ; Load 179 into VF
$A2A    $1EA3   JP       $EA3            ; Jump to EA3
$A2C    $E042   UNKNOWN  $E042           ; Unknown Exxx instruction
$A2E    $C304   RND      V3, #04         ; V3 = random & 04
$A30    $BCD1   JP       V0, $CD1        ; Jump to V0 + CD1
$A32    $475E   SNE      V7, #5E         ; Skip if V7 != 94
$A34    $E171   UNKNOWN  $E171           ; Unknown Exxx instruction
$A36    $F032   UNKNOWN  F032            ; Unknown Fxxx instruction
$A38    $D0AB   DRW      V0, VA, #B      ; Draw 11-byte sprite at V0, VA
$A3A    $0F27   SYS      $F27            ; System call to F27
$A3C    $D987   DRW      V9, V8, #7      ; Draw 7-byte sprite at V9, V8
$A3E    $E9C0   UNKNOWN  $E9C0           ; Unknown Exxx instruction
$A40    $154D   JP       $54D            ; Jump to 54D
$A42    $5FE7   UNKNOWN  $5FE7           ; Unknown 5xxx instruction
$A44    $8B2A   UNKNOWN  8B2A            ; Unknown 8xxx instruction
$A46    $B12F   JP       V0, $12F        ; Jump to V0 + 12F
$A48    $1587   JP       $587            ; Jump to 587
$A4A    $ECF9   UNKNOWN  $ECF9           ; Unknown Exxx instruction
$A4C    $9FB4   UNKNOWN  $9FB4           ; Unknown 9xxx instruction
$A4E    $1A09   JP       $A09            ; Jump to A09
$A50    $9C6D   UNKNOWN  $9C6D           ; Unknown 9xxx instruction
$A52    $9EA5   UNKNOWN  $9EA5           ; Unknown 9xxx instruction
$A54    $EECE   UNKNOWN  $EECE           ; Unknown Exxx instruction
$A56    $5113   UNKNOWN  $5113           ; Unknown 5xxx instruction
$A58    $F778   UNKNOWN  F778            ; Unknown Fxxx instruction
$A5A    $03F2   SYS      $3F2            ; System call to 3F2
$A5C    $F5C3   UNKNOWN  F5C3            ; Unknown Fxxx instruction
$A5E    $A7C4   LD       I, $7C4         ; Load 7C4 into I
$A60    $B8C5   JP       V0, $8C5        ; Jump to V0 + 8C5
$A62    $B403   JP       V0, $403        ; Jump to V0 + 403
$A64    $4388   SNE      V3, #88         ; Skip if V3 != 136
$A66    $4C03   SNE      VC, #03         ; Skip if VC != 3
$A68    $2193   CALL     $193            ; Call subroutine at 193
$A6A    $254B   CALL     $54B            ; Call subroutine at 54B
$A6C    $6D86   LD       VD, #86         ; Load 134 into VD
$A6E    $2589   CALL     $589            ; Call subroutine at 589
$A70    $9629   UNKNOWN  $9629           ; Unknown 9xxx instruction
$A72    $9DF5   UNKNOWN  $9DF5           ; Unknown 9xxx instruction
$A74    $FDA5   UNKNOWN  FDA5            ; Unknown Fxxx instruction
$A76    $B9FD   JP       V0, $9FD        ; Jump to V0 + 9FD
$A78    $1355   JP       $355            ; Jump to 355
$A7A    $13BF   JP       $3BF            ; Jump to 3BF
$A7C    $DC95   DRW      VC, V9, #5      ; Draw 5-byte sprite at VC, V9
$A7E    $066A   SYS      $66A            ; System call to 66A
$A80    $AC15   LD       I, $C15         ; Load C15 into I
$A82    $AF2E   LD       I, $F2E         ; Load F2E into I
$A84    $5058   UNKNOWN  $5058           ; Unknown 5xxx instruction
$A86    $99BE   UNKNOWN  $99BE           ; Unknown 9xxx instruction
$A88    $F8BD   UNKNOWN  F8BD            ; Unknown Fxxx instruction
$A8A    $00BC   SYS      $0BC            ; System call to 0BC
$A8C    $6D4A   LD       VD, #4A         ; Load 74 into VD
$A8E    $5941   UNKNOWN  $5941           ; Unknown 5xxx instruction
$A90    $BE77   JP       V0, $E77        ; Jump to V0 + E77
$A92    $AB36   LD       I, $B36         ; Load B36 into I
$A94    $D260   DRW      V2, V6, #0      ; Draw 0-byte sprite at V2, V6
$A96    $C14C   RND      V1, #4C         ; V1 = random & 4C
$A98    $995F   UNKNOWN  $995F           ; Unknown 9xxx instruction
$A9A    $8B4F   UNKNOWN  8B4F            ; Unknown 8xxx instruction
$A9C    $BE52   JP       V0, $E52        ; Jump to V0 + E52
$A9E    $1207   JP       $207            ; Jump to 207
$AA0    $3C41   SE       VC, #41         ; Skip if VC == 65
$AA2    $F98A   UNKNOWN  F98A            ; Unknown Fxxx instruction
$AA4    $3696   SE       V6, #96         ; Skip if V6 == 150
$AA6    $9099   UNKNOWN  $9099           ; Unknown 9xxx instruction
$AA8    $0D91   SYS      $D91            ; System call to D91
$AAA    $75CB   ADD      V5, #CB         ; Add 203 to V5
$AAC    $3F99   SE       VF, #99         ; Skip if VF == 153
$AAE    $4CC3   SNE      VC, #C3         ; Skip if VC != 195
$AB0    $2B25   CALL     $B25            ; Call subroutine at B25
$AB2    $FB80   UNKNOWN  FB80            ; Unknown Fxxx instruction
$AB4    $A301   LD       I, $301         ; Load 301 into I
$AB6    $59CE   UNKNOWN  $59CE           ; Unknown 5xxx instruction
$AB8    $B430   JP       V0, $430        ; Jump to V0 + 430
$ABA    $D876   DRW      V8, V7, #6      ; Draw 6-byte sprite at V8, V7
$ABC    $8701   OR       V7, V0          ; V7 |= V0
$ABE    $C36D   RND      V3, #6D         ; V3 = random & 6D
$AC0    $0ABB   SYS      $ABB            ; System call to ABB
$AC2    $42E7   SNE      V2, #E7         ; Skip if V2 != 231
$AC4    $8EC7   SUBN     VE, VC          ; VE = VC - VE, VF = !borrow
$AC6    $298C   CALL     $98C            ; Call subroutine at 98C
$AC8    $4EF3   SNE      VE, #F3         ; Skip if VE != 243
$ACA    $4B3F   SNE      VB, #3F         ; Skip if VB != 63
$ACC    $CB1F   RND      VB, #1F         ; VB = random & 1F
$ACE    $ED03   UNKNOWN  $ED03           ; Unknown Exxx instruction
$AD0    $8BF3   XOR      VB, VF          ; VB ^= VF
$AD2    $AA25   LD       I, $A25         ; Load A25 into I
$AD4    $21A7   CALL     $1A7            ; Call subroutine at 1A7
$AD6    $4965   SNE      V9, #65         ; Skip if V9 != 101
$AD8    $1755   JP       $755            ; Jump to 755
$ADA    $3316   SE       V3, #16         ; Skip if V3 == 22
$ADC    $EC48   UNKNOWN  $EC48           ; Unknown Exxx instruction
$ADE    $1550   JP       $550            ; Jump to 550
$AE0    $C819   RND      V8, #19         ; V8 = random & 19
$AE2    $D71A   DRW      V7, V1, #A      ; Draw 10-byte sprite at V7, V1
$AE4    $43C9   SNE      V3, #C9         ; Skip if V3 != 201
$AE6    $5158   UNKNOWN  $5158           ; Unknown 5xxx instruction
$AE8    $E257   UNKNOWN  $E257           ; Unknown Exxx instruction
$AEA    $F536   UNKNOWN  F536            ; Unknown Fxxx instruction
$AEC    $7964   ADD      V9, #64         ; Add 100 to V9
$AEE    $1BB4   JP       $BB4            ; Jump to BB4
$AF0    $BEF2   JP       V0, $EF2        ; Jump to V0 + EF2
$AF2    $5450   SE       V4, V5          ; Skip if V4 == V5
$AF4    $C5B6   RND      V5, #B6         ; V5 = random & B6
$AF6    $FA35   UNKNOWN  FA35            ; Unknown Fxxx instruction
$AF8    $829A   UNKNOWN  829A            ; Unknown 8xxx instruction
$AFA    $569E   UNKNOWN  $569E           ; Unknown 5xxx instruction
$AFC    $0B4C   SYS      $B4C            ; System call to B4C
$AFE    $8383   XOR      V3, V8          ; V3 ^= V8
$B00    $36F3   SE       V6, #F3         ; Skip if V6 == 243
$B02    $8957   SUBN     V9, V5          ; V9 = V5 - V9, VF = !borrow
$B04    $0600   SYS      $600            ; System call to 600
$B06    $E319   UNKNOWN  $E319           ; Unknown Exxx instruction
$B08    $52D3   UNKNOWN  $52D3           ; Unknown 5xxx instruction
$B0A    $C5F5   RND      V5, #F5         ; V5 = random & F5
$B0C    $4653   SNE      V6, #53         ; Skip if V6 != 83
$B0E    $3C59   SE       VC, #59         ; Skip if VC == 89
$B10    $D217   DRW      V2, V1, #7      ; Draw 7-byte sprite at V2, V1
$B12    $C2D5   RND      V2, #D5         ; V2 = random & D5
$B14    $E3CF   UNKNOWN  $E3CF           ; Unknown Exxx instruction
$B16    $B67B   JP       V0, $67B        ; Jump to V0 + 67B
$B18    $9207   UNKNOWN  $9207           ; Unknown 9xxx instruction
$B1A    $FD15   LD       DT, VD          ; Delay timer = VD
$B1C    $DE42   DRW      VE, V4, #2      ; Draw 2-byte sprite at VE, V4
$B1E    $6E00   LD       VE, #00         ; Load 0 into VE
$B20    $5D05   UNKNOWN  $5D05           ; Unknown 5xxx instruction
$B22    $4906   SNE      V9, #06         ; Skip if V9 != 6
$B24    $B2F8   JP       V0, $2F8        ; Jump to V0 + 2F8
$B26    $CB26   RND      VB, #26         ; VB = random & 26
$B28    $28A8   CALL     $8A8            ; Call subroutine at 8A8
$B2A    $0309   SYS      $309            ; System call to 309
$B2C    $2B2A   CALL     $B2A            ; Call subroutine at B2A
$B2E    $E9D4   UNKNOWN  $E9D4           ; Unknown Exxx instruction
$B30    $C49D   RND      V4, #9D         ; V4 = random & 9D
$B32    $CBE2   RND      VB, #E2         ; VB = random & E2
$B34    $935C   UNKNOWN  $935C           ; Unknown 9xxx instruction
$B36    $F5D3   UNKNOWN  F5D3            ; Unknown Fxxx instruction
$B38    $9DD5   UNKNOWN  $9DD5           ; Unknown 9xxx instruction
$B3A    $2F6D   CALL     $F6D            ; Call subroutine at F6D
$B3C    $3F9D   SE       VF, #9D         ; Skip if VF == 157
$B3E    $1E96   JP       $E96            ; Jump to E96
$B40    $3969   SE       V9, #69         ; Skip if V9 == 105
$B42    $A06F   LD       I, $06F         ; Load 06F into I
$B44    $1B24   JP       $B24            ; Jump to B24
$B46    $3C58   SE       VC, #58         ; Skip if VC == 88
$B48    $CBCD   RND      VB, #CD         ; VB = random & CD
$B4A    $8156   SHR      V1              ; V1 >>= 1, VF = LSB
$B4C    $AF8B   LD       I, $F8B         ; Load F8B into I
$B4E    $C227   RND      V2, #27         ; V2 = random & 27
$B50    $D07C   DRW      V0, V7, #C      ; Draw 12-byte sprite at V0, V7
$B52    $1C00   JP       $C00            ; Jump to C00
$B54    $58FD   UNKNOWN  $58FD           ; Unknown 5xxx instruction
$B56    $A794   LD       I, $794         ; Load 794 into I
$B58    $D00E   DRW      V0, V0, #E      ; Draw 14-byte sprite at V0, V0
$B5A    $1DFC   JP       $DFC            ; Jump to DFC
$B5C    $1C20   JP       $C20            ; Jump to C20
$B5E    $2650   CALL     $650            ; Call subroutine at 650
$B60    $B15C   JP       V0, $15C        ; Jump to V0 + 15C
$B62    $2940   CALL     $940            ; Call subroutine at 940
$B64    $69E7   LD       V9, #E7         ; Load 231 into V9
$B66    $A9D7   LD       I, $9D7         ; Load 9D7 into I
$B68    $CD26   RND      VD, #26         ; VD = random & 26
$B6A    $F49D   UNKNOWN  F49D            ; Unknown Fxxx instruction
$B6C    $8068   UNKNOWN  8068            ; Unknown 8xxx instruction
$B6E    $E36A   UNKNOWN  $E36A           ; Unknown Exxx instruction
$B70    $EA01   UNKNOWN  $EA01           ; Unknown Exxx instruction
$B72    $F0CB   UNKNOWN  F0CB            ; Unknown Fxxx instruction
$B74    $5293   UNKNOWN  $5293           ; Unknown 5xxx instruction
$B76    $89F2   AND      V9, VF          ; V9 &= VF
$B78    $DB4C   DRW      VB, V4, #C      ; Draw 12-byte sprite at VB, V4
$B7A    $B10A   JP       V0, $10A        ; Jump to V0 + 10A
$B7C    $FBA1   UNKNOWN  FBA1            ; Unknown Fxxx instruction
$B7E    $A8C0   LD       I, $8C0         ; Load 8C0 into I
$B80    $8FDB   UNKNOWN  8FDB            ; Unknown 8xxx instruction
$B82    $548A   UNKNOWN  $548A           ; Unknown 5xxx instruction
$B84    $B395   JP       V0, $395        ; Jump to V0 + 395
$B86    $A0BD   LD       I, $0BD         ; Load 0BD into I
$B88    $547E   UNKNOWN  $547E           ; Unknown 5xxx instruction
$B8A    $D6BD   DRW      V6, VB, #D      ; Draw 13-byte sprite at V6, VB
$B8C    $7E85   ADD      VE, #85         ; Add 133 to VE
$B8E    $D22E   DRW      V2, V2, #E      ; Draw 14-byte sprite at V2, V2
$B90    $2B82   CALL     $B82            ; Call subroutine at B82
$B92    $F614   UNKNOWN  F614            ; Unknown Fxxx instruction
$B94    $561A   UNKNOWN  $561A           ; Unknown 5xxx instruction
$B96    $E759   UNKNOWN  $E759           ; Unknown Exxx instruction
$B98    $6A3A   LD       VA, #3A         ; Load 58 into VA
$B9A    $233F   CALL     $33F            ; Call subroutine at 33F
$B9C    $A571   LD       I, $571         ; Load 571 into I
$B9E    $10C3   JP       $0C3            ; Jump to 0C3
$BA0    $DB65   DRW      VB, V6, #5      ; Draw 5-byte sprite at VB, V6
$BA2    $2E81   CALL     $E81            ; Call subroutine at E81
$BA4    $5A8C   UNKNOWN  $5A8C           ; Unknown 5xxx instruction
$BA6    $E2FB   UNKNOWN  $E2FB           ; Unknown Exxx instruction
$BA8    $51A5   UNKNOWN  $51A5           ; Unknown 5xxx instruction
$BAA    $6DD0   LD       VD, #D0         ; Load 208 into VD
$BAC    $21A6   CALL     $1A6            ; Call subroutine at 1A6
$BAE    $EE15   UNKNOWN  $EE15           ; Unknown Exxx instruction
$BB0    $9FB6   UNKNOWN  $9FB6           ; Unknown 9xxx instruction
$BB2    $F1A7   UNKNOWN  F1A7            ; Unknown Fxxx instruction
$BB4    $28E5   CALL     $8E5            ; Call subroutine at 8E5
$BB6    $D27D   DRW      V2, V7, #D      ; Draw 13-byte sprite at V2, V7
$BB8    $E2DD   UNKNOWN  $E2DD           ; Unknown Exxx instruction
$BBA    $3865   SE       V8, #65         ; Skip if V8 == 101
$BBC    $0C64   SYS      $C64            ; System call to C64
$BBE    $4808   SNE      V8, #08         ; Skip if V8 != 8
$BC0    $0FDB   SYS      $FDB            ; System call to FDB
$BC2    $2F8C   CALL     $F8C            ; Call subroutine at F8C
$BC4    $9C3D   UNKNOWN  $9C3D           ; Unknown 9xxx instruction
$BC6    $6835   LD       V8, #35         ; Load 53 into V8
$BC8    $45BC   SNE      V5, #BC         ; Skip if V5 != 188
$BCA    $2BCA   CALL     $BCA            ; Call subroutine at BCA
$BCC    $FF9F   UNKNOWN  FF9F            ; Unknown Fxxx instruction
$BCE    $433A   SNE      V3, #3A         ; Skip if V3 != 58
$BD0    $4AFE   SNE      VA, #FE         ; Skip if VA != 254
$BD2    $7A57   ADD      VA, #57         ; Add 87 to VA
$BD4    $EE7E   UNKNOWN  $EE7E           ; Unknown Exxx instruction
$BD6    $3DD4   SE       VD, #D4         ; Skip if VD == 212
$BD8    $A09A   LD       I, $09A         ; Load 09A into I
$BDA    $8AC9   UNKNOWN  8AC9            ; Unknown 8xxx instruction
$BDC    $1A1E   JP       $A1E            ; Jump to A1E
$BDE    $6420   LD       V4, #20         ; Load 32 into V4
$BE0    $F323   UNKNOWN  F323            ; Unknown Fxxx instruction
$BE2    $6CF1   LD       VC, #F1         ; Load 241 into VC
$BE4    $2BA1   CALL     $BA1            ; Call subroutine at BA1
$BE6    $C095   RND      V0, #95         ; V0 = random & 95
$BE8    $8B3D   UNKNOWN  8B3D            ; Unknown 8xxx instruction
$BEA    $4BA8   SNE      VB, #A8         ; Skip if VB != 168
$BEC    $844F   UNKNOWN  844F            ; Unknown 8xxx instruction
$BEE    $4F97   SNE      VF, #97         ; Skip if VF != 151
$BF0    $7A3D   ADD      VA, #3D         ; Add 61 to VA
$BF2    $BE67   JP       V0, $E67        ; Jump to V0 + E67
$BF4    $1E9D   JP       $E9D            ; Jump to E9D
$BF6    $CD87   RND      VD, #87         ; VD = random & 87
$BF8    $8231   OR       V2, V3          ; V2 |= V3
$BFA    $CC4B   RND      VC, #4B         ; VC = random & 4B
$BFC    $4D1A   SNE      VD, #1A         ; Skip if VD != 26
$BFE    $CD6C   RND      VD, #6C         ; VD = random & 6C
$C00    $5505   UNKNOWN  $5505           ; Unknown 5xxx instruction
$C02    $27C4   CALL     $7C4            ; Call subroutine at 7C4
$C04    $5436   UNKNOWN  $5436           ; Unknown 5xxx instruction
$C06    $CDC7   RND      VD, #C7         ; VD = random & C7
$C08    $5217   UNKNOWN  $5217           ; Unknown 5xxx instruction
$C0A    $031E   SYS      $31E            ; System call to 31E
$C0C    $756B   ADD      V5, #6B         ; Add 107 to V5
$C0E    $A1A6   LD       I, $1A6         ; Load 1A6 into I
$C10    $3115   SE       V1, #15         ; Skip if V1 == 21
$C12    $40F9   SNE      V0, #F9         ; Skip if V0 != 249
$C14    $60F4   LD       V0, #F4         ; Load 244 into V0
$C16    $60ED   LD       V0, #ED         ; Load 237 into V0
$C18    $D497   DRW      V4, V9, #7      ; Draw 7-byte sprite at V4, V9
$C1A    $CFE7   RND      VF, #E7         ; VF = random & E7
$C1C    $DA43   DRW      VA, V4, #3      ; Draw 3-byte sprite at VA, V4
$C1E    $85DA   UNKNOWN  85DA            ; Unknown 8xxx instruction
$C20    $CAE5   RND      VA, #E5         ; VA = random & E5
$C22    $FA8E   UNKNOWN  FA8E            ; Unknown Fxxx instruction
$C24    $7598   ADD      V5, #98         ; Add 152 to V5
$C26    $A39D   LD       I, $39D         ; Load 39D into I
$C28    $32A9   SE       V2, #A9         ; Skip if V2 == 169
$C2A    $1FE3   JP       $FE3            ; Jump to FE3
$C2C    $2328   CALL     $328            ; Call subroutine at 328
$C2E    $3809   SE       V8, #09         ; Skip if V8 == 9
$C30    $9A4E   UNKNOWN  $9A4E           ; Unknown 9xxx instruction
$C32    $5E54   UNKNOWN  $5E54           ; Unknown 5xxx instruction
$C34    $0CD0   SYS      $CD0            ; System call to CD0
$C36    $CE09   RND      VE, #09         ; VE = random & 09
$C38    $2A6F   CALL     $A6F            ; Call subroutine at A6F
$C3A    $18A0   JP       $8A0            ; Jump to 8A0
$C3C    $33CD   SE       V3, #CD         ; Skip if V3 == 205
$C3E    $AE40   LD       I, $E40         ; Load E40 into I
$C40    $D311   DRW      V3, V1, #1      ; Draw 1-byte sprite at V3, V1
$C42    $4A66   SNE      VA, #66         ; Skip if VA != 102
$C44    $4209   SNE      V2, #09         ; Skip if V2 != 9
$C46    $65F7   LD       V5, #F7         ; Load 247 into V5
$C48    $3498   SE       V4, #98         ; Skip if V4 == 152
$C4A    $B94F   JP       V0, $94F        ; Jump to V0 + 94F
$C4C    $F699   UNKNOWN  F699            ; Unknown Fxxx instruction
$C4E    $4BA8   SNE      VB, #A8         ; Skip if VB != 168
$C50    $F94C   UNKNOWN  F94C            ; Unknown Fxxx instruction
$C52    $7C62   ADD      VC, #62         ; Add 98 to VC
$C54    $C10F   RND      V1, #0F         ; V1 = random & 0F
$C56    $8F40   LD       VF, V4          ; VF = V4
$C58    $2351   CALL     $351            ; Call subroutine at 351
$C5A    $D1EC   DRW      V1, VE, #C      ; Draw 12-byte sprite at V1, VE
$C5C    $1AA8   JP       $AA8            ; Jump to AA8
$C5E    $8B1D   UNKNOWN  8B1D            ; Unknown 8xxx instruction
$C60    $59B9   UNKNOWN  $59B9           ; Unknown 5xxx instruction
$C62    $AD1C   LD       I, $D1C         ; Load D1C into I
$C64    $3ABB   SE       VA, #BB         ; Skip if VA == 187
$C66    $61FC   LD       V1, #FC         ; Load 252 into V1
$C68    $9F99   UNKNOWN  $9F99           ; Unknown 9xxx instruction
$C6A    $4FFE   SNE      VF, #FE         ; Skip if VF != 254
$C6C    $597C   UNKNOWN  $597C           ; Unknown 5xxx instruction
$C6E    $9323   UNKNOWN  $9323           ; Unknown 9xxx instruction
$C70    $6484   LD       V4, #84         ; Load 132 into V4
$C72    $B569   JP       V0, $569        ; Jump to V0 + 569
$C74    $13A7   JP       $3A7            ; Jump to 3A7
$C76    $7736   ADD      V7, #36         ; Add 54 to V7
$C78    $BB54   JP       V0, $B54        ; Jump to V0 + B54
$C7A    $2D87   CALL     $D87            ; Call subroutine at D87
$C7C    $2578   CALL     $578            ; Call subroutine at 578
$C7E    $9BC1   UNKNOWN  $9BC1           ; Unknown 9xxx instruction
$C80    $0165   SYS      $165            ; System call to 165
$C82    $7214   ADD      V2, #14         ; Add 20 to V2
$C84    $29F9   CALL     $9F9            ; Call subroutine at 9F9
$C86    $10B5   JP       $0B5            ; Jump to 0B5
$C88    $60D2   LD       V0, #D2         ; Load 210 into V0
$C8A    $5F61   UNKNOWN  $5F61           ; Unknown 5xxx instruction
$C8C    $1E34   JP       $E34            ; Jump to E34
$C8E    $6151   LD       V1, #51         ; Load 81 into V1
$C90    $BAD3   JP       V0, $AD3        ; Jump to V0 + AD3
$C92    $BAE5   JP       V0, $AE5        ; Jump to V0 + AE5
$C94    $85D0   LD       V5, VD          ; V5 = VD
$C96    $7A99   ADD      VA, #99         ; Add 153 to VA
$C98    $F272   UNKNOWN  F272            ; Unknown Fxxx instruction
$C9A    $334D   SE       V3, #4D         ; Skip if V3 == 77
$C9C    $B02C   JP       V0, $02C        ; Jump to V0 + 02C
$C9E    $82B4   ADD      V2, VB          ; V2 += VB, VF = carry
$CA0    $0A4C   SYS      $A4C            ; System call to A4C
$CA2    $187B   JP       $87B            ; Jump to 87B
$CA4    $B102   JP       V0, $102        ; Jump to V0 + 102
$CA6    $B965   JP       V0, $965        ; Jump to V0 + 965
$CA8    $FCF8   UNKNOWN  FCF8            ; Unknown Fxxx instruction
$CAA    $A7D2   LD       I, $7D2         ; Load 7D2 into I
$CAC    $D595   DRW      V5, V9, #5      ; Draw 5-byte sprite at V5, V9
$CAE    $D555   DRW      V5, V5, #5      ; Draw 5-byte sprite at V5, V5
$CB0    $6D1C   LD       VD, #1C         ; Load 28 into VD
$CB2    $FD09   UNKNOWN  FD09            ; Unknown Fxxx instruction
$CB4    $3CD5   SE       VC, #D5         ; Skip if VC == 213
$CB6    $A138   LD       I, $138         ; Load 138 into I
$CB8    $74F9   ADD      V4, #F9         ; Add 249 to V4
$CBA    $B03A   JP       V0, $03A        ; Jump to V0 + 03A
$CBC    $BE8C   JP       V0, $E8C        ; Jump to V0 + E8C
$CBE    $C4A2   RND      V4, #A2         ; V4 = random & A2
$CC0    $E6F7   UNKNOWN  $E6F7           ; Unknown Exxx instruction
$CC2    $20B3   CALL     $0B3            ; Call subroutine at 0B3
$CC4    $46D5   SNE      V6, #D5         ; Skip if V6 != 213
$CC6    $1D0F   JP       $D0F            ; Jump to D0F
$CC8    $76D1   ADD      V6, #D1         ; Add 209 to V6
$CCA    $7FF0   ADD      VF, #F0         ; Add 240 to VF
$CCC    $CDA3   RND      VD, #A3         ; VD = random & A3
$CCE    $2DC0   CALL     $DC0            ; Call subroutine at DC0
$CD0    $892E   SHL      V9              ; V9 <<= 1, VF = MSB
$CD2    $D885   DRW      V8, V8, #5      ; Draw 5-byte sprite at V8, V8
$CD4    $0771   SYS      $771            ; System call to 771
$CD6    $EB40   UNKNOWN  $EB40           ; Unknown Exxx instruction
$CD8    $D58B   DRW      V5, V8, #B      ; Draw 11-byte sprite at V5, V8
$CDA    $4B3C   SNE      VB, #3C         ; Skip if VB != 60
$CDC    $0C1E   SYS      $C1E            ; System call to C1E
$CDE    $C569   RND      V5, #69         ; V5 = random & 69
$CE0    $50B1   UNKNOWN  $50B1           ; Unknown 5xxx instruction
$CE2    $BA9A   JP       V0, $A9A        ; Jump to V0 + A9A
$CE4    $4012   SNE      V0, #12         ; Skip if V0 != 18
$CE6    $A0E0   LD       I, $0E0         ; Load 0E0 into I
$CE8    $F42C   UNKNOWN  F42C            ; Unknown Fxxx instruction
$CEA    $67EB   LD       V7, #EB         ; Load 235 into V7
$CEC    $D168   DRW      V1, V6, #8      ; Draw 8-byte sprite at V1, V6
$CEE    $88E7   SUBN     V8, VE          ; V8 = VE - V8, VF = !borrow
$CF0    $B443   JP       V0, $443        ; Jump to V0 + 443
$CF2    $E341   UNKNOWN  $E341           ; Unknown Exxx instruction
$CF4    $1CDE   JP       $CDE            ; Jump to CDE
$CF6    $9884   UNKNOWN  $9884           ; Unknown 9xxx instruction
$CF8    $D215   DRW      V2, V1, #5      ; Draw 5-byte sprite at V2, V1
$CFA    $E27A   UNKNOWN  $E27A           ; Unknown Exxx instruction
$CFC    $BD3B   JP       V0, $D3B        ; Jump to V0 + D3B
$CFE    $3275   SE       V2, #75         ; Skip if V2 == 117
$D00    $AC26   LD       I, $C26         ; Load C26 into I
$D02    $C70F   RND      V7, #0F         ; V7 = random & 0F
$D04    $585C   UNKNOWN  $585C           ; Unknown 5xxx instruction
$D06    $31EB   SE       V1, #EB         ; Skip if V1 == 235
$D08    $665F   LD       V6, #5F         ; Load 95 into V6
$D0A    $8757   SUBN     V7, V5          ; V7 = V5 - V7, VF = !borrow
$D0C    $A4FE   LD       I, $4FE         ; Load 4FE into I
$D0E    $2FB5   CALL     $FB5            ; Call subroutine at FB5
$D10    $3A47   SE       VA, #47         ; Skip if VA == 71
$D12    $BC08   JP       V0, $C08        ; Jump to V0 + C08
$D14    $7502   ADD      V5, #02         ; Add 2 to V5
$D16    $1BDF   JP       $BDF            ; Jump to BDF
$D18    $1E8F   JP       $E8F            ; Jump to E8F
$D1A    $041C   SYS      $41C            ; System call to 41C
$D1C    $09BD   SYS      $9BD            ; System call to 9BD
$D1E    $8DA2   AND      VD, VA          ; VD &= VA
$D20    $0BD3   SYS      $BD3            ; System call to BD3
$D22    $1184   JP       $184            ; Jump to 184
$D24    $FDCF   UNKNOWN  FDCF            ; Unknown Fxxx instruction
$D26    $7CF8   ADD      VC, #F8         ; Add 248 to VC
$D28    $7001   ADD      V0, #01         ; Add 1 to V0
$D2A    $8928   UNKNOWN  8928            ; Unknown 8xxx instruction
$D2C    $BA5F   JP       V0, $A5F        ; Jump to V0 + A5F
$D2E    $B4E8   JP       V0, $4E8        ; Jump to V0 + 4E8
$D30    $DCFA   DRW      VC, VF, #A      ; Draw 10-byte sprite at VC, VF
$D32    $D024   DRW      V0, V2, #4      ; Draw 4-byte sprite at V0, V2
$D34    $128E   JP       $28E            ; Jump to 28E
$D36    $99B1   UNKNOWN  $99B1           ; Unknown 9xxx instruction
$D38    $70F0   ADD      V0, #F0         ; Add 240 to V0
$D3A    $6424   LD       V4, #24         ; Load 36 into V4
$D3C    $89D1   OR       V9, VD          ; V9 |= VD
$D3E    $5C64   UNKNOWN  $5C64           ; Unknown 5xxx instruction
$D40    $2529   CALL     $529            ; Call subroutine at 529
$D42    $0065   SYS      $065            ; System call to 065
$D44    $03D5   SYS      $3D5            ; System call to 3D5
$D46    $A1CB   LD       I, $1CB         ; Load 1CB into I
$D48    $01BB   SYS      $1BB            ; System call to 1BB
$D4A    $3D6C   SE       VD, #6C         ; Skip if VD == 108
$D4C    $2052   CALL     $052            ; Call subroutine at 052
$D4E    $1182   JP       $182            ; Jump to 182
$D50    $A0D3   LD       I, $0D3         ; Load 0D3 into I
$D52    $B277   JP       V0, $277        ; Jump to V0 + 277
$D54    $4FC1   SNE      VF, #C1         ; Skip if VF != 193
$D56    $CDE2   RND      VD, #E2         ; VD = random & E2
$D58    $1619   JP       $619            ; Jump to 619
$D5A    $9C73   UNKNOWN  $9C73           ; Unknown 9xxx instruction
$D5C    $F50A   LD       V5, K           ; Wait for key press, store in V5
$D5E    $FFF9   UNKNOWN  FFF9            ; Unknown Fxxx instruction
$D60    $9126   UNKNOWN  $9126           ; Unknown 9xxx instruction
$D62    $1834   JP       $834            ; Jump to 834
$D64    $0AD5   SYS      $AD5            ; System call to AD5
$D66    $CAED   RND      VA, #ED         ; VA = random & ED
$D68    $FA52   UNKNOWN  FA52            ; Unknown Fxxx instruction
$D6A    $C122   RND      V1, #22         ; V1 = random & 22
$D6C    $4006   SNE      V0, #06         ; Skip if V0 != 6
$D6E    $52FC   UNKNOWN  $52FC           ; Unknown 5xxx instruction
$D70    $CAF8   RND      VA, #F8         ; VA = random & F8
$D72    $D57A   DRW      V5, V7, #A      ; Draw 10-byte sprite at V5, V7
$D74    $62AB   LD       V2, #AB         ; Load 171 into V2
$D76    $E9BD   UNKNOWN  $E9BD           ; Unknown Exxx instruction
$D78    $3F58   SE       VF, #58         ; Skip if VF == 88
$D7A    $9644   UNKNOWN  $9644           ; Unknown 9xxx instruction
$D7C    $44C1   SNE      V4, #C1         ; Skip if V4 != 193
$D7E    $0A27   SYS      $A27            ; System call to A27
$D80    $5C9D   UNKNOWN  $5C9D           ; Unknown 5xxx instruction
$D82    $4A24   SNE      VA, #24         ; Skip if VA != 36
$D84    $C0FA   RND      V0, #FA         ; V0 = random & FA
$D86    $20A6   CALL     $0A6            ; Call subroutine at 0A6
$D88    $D4CC   DRW      V4, VC, #C      ; Draw 12-byte sprite at V4, VC
$D8A    $0C57   SYS      $C57            ; System call to C57
$D8C    $A829   LD       I, $829         ; Load 829 into I
$D8E    $0EA6   SYS      $EA6            ; System call to EA6
$D90    $C5BD   RND      V5, #BD         ; V5 = random & BD
$D92    $E5AE   UNKNOWN  $E5AE           ; Unknown Exxx instruction
$D94    $F1D8   UNKNOWN  F1D8            ; Unknown Fxxx instruction
$D96    $B951   JP       V0, $951        ; Jump to V0 + 951
$D98    $2951   CALL     $951            ; Call subroutine at 951
$D9A    $F17A   UNKNOWN  F17A            ; Unknown Fxxx instruction
$D9C    $6576   LD       V5, #76         ; Load 118 into V5
$D9E    $C714   RND      V7, #14         ; V7 = random & 14
$DA0    $D236   DRW      V2, V3, #6      ; Draw 6-byte sprite at V2, V3
$DA2    $767A   ADD      V6, #7A         ; Add 122 to V6
$DA4    $1CFA   JP       $CFA            ; Jump to CFA
$DA6    $F8F7   UNKNOWN  F8F7            ; Unknown Fxxx instruction
$DA8    $1593   JP       $593            ; Jump to 593
$DAA    $03A2   SYS      $3A2            ; System call to 3A2
$DAC    $1A3D   JP       $A3D            ; Jump to A3D
$DAE    $64F6   LD       V4, #F6         ; Load 246 into V4
$DB0    $EDC1   UNKNOWN  $EDC1           ; Unknown Exxx instruction
$DB2    $5F2F   UNKNOWN  $5F2F           ; Unknown 5xxx instruction
$DB4    $9B11   UNKNOWN  $9B11           ; Unknown 9xxx instruction
$DB6    $8DD1   OR       VD, VD          ; VD |= VD
$DB8    $E406   UNKNOWN  $E406           ; Unknown Exxx instruction
$DBA    $F663   UNKNOWN  F663            ; Unknown Fxxx instruction
$DBC    $F3BC   UNKNOWN  F3BC            ; Unknown Fxxx instruction
$DBE    $E0B8   UNKNOWN  $E0B8           ; Unknown Exxx instruction
$DC0    $668C   LD       V6, #8C         ; Load 140 into V6
$DC2    $319D   SE       V1, #9D         ; Skip if V1 == 157
$DC4    $BA85   JP       V0, $A85        ; Jump to V0 + A85
$DC6    $F82A   UNKNOWN  F82A            ; Unknown Fxxx instruction
$DC8    $8232   AND      V2, V3          ; V2 &= V3
$DCA    $9DFE   UNKNOWN  $9DFE           ; Unknown 9xxx instruction
$DCC    $5D7D   UNKNOWN  $5D7D           ; Unknown 5xxx instruction
$DCE    $7F84   ADD      VF, #84         ; Add 132 to VF
$DD0    $E291   UNKNOWN  $E291           ; Unknown Exxx instruction
$DD2    $3684   SE       V6, #84         ; Skip if V6 == 132
$DD4    $60AD   LD       V0, #AD         ; Load 173 into V0
$DD6    $E1CB   UNKNOWN  $E1CB           ; Unknown Exxx instruction
$DD8    $7644   ADD      V6, #44         ; Add 68 to V6
$DDA    $5808   UNKNOWN  $5808           ; Unknown 5xxx instruction
$DDC    $DB85   DRW      VB, V8, #5      ; Draw 5-byte sprite at VB, V8
$DDE    $1E27   JP       $E27            ; Jump to E27
$DE0    $6348   LD       V3, #48         ; Load 72 into V3
$DE2    $8F42   AND      VF, V4          ; VF &= V4
$DE4    $D8B7   DRW      V8, VB, #7      ; Draw 7-byte sprite at V8, VB
$DE6    $79D5   ADD      V9, #D5         ; Add 213 to V9
$DE8    $18FC   JP       $8FC            ; Jump to 8FC
$DEA    $BA02   JP       V0, $A02        ; Jump to V0 + A02
$DEC    $CD34   RND      VD, #34         ; VD = random & 34
$DEE    $68DE   LD       V8, #DE         ; Load 222 into V8
$DF0    $62D2   LD       V2, #D2         ; Load 210 into V2
$DF2    $DCF1   DRW      VC, VF, #1      ; Draw 1-byte sprite at VC, VF
$DF4    $2635   CALL     $635            ; Call subroutine at 635
$DF6    $4D8E   SNE      VD, #8E         ; Skip if VD != 142
$DF8    $A413   LD       I, $413         ; Load 413 into I
$DFA    $066A   SYS      $66A            ; System call to 66A
$DFC    $9AD8   UNKNOWN  $9AD8           ; Unknown 9xxx instruction
$DFE    $AB29   LD       I, $B29         ; Load B29 into I
$E00    $C57E   RND      V5, #7E         ; V5 = random & 7E
$E02    $E2E3   UNKNOWN  $E2E3           ; Unknown Exxx instruction
$E04    $4776   SNE      V7, #76         ; Skip if V7 != 118
$E06    $52DB   UNKNOWN  $52DB           ; Unknown 5xxx instruction
$E08    $1243   JP       $243            ; Jump to 243
$E0A    $C3EA   RND      V3, #EA         ; V3 = random & EA
$E0C    $86DE   SHL      V6              ; V6 <<= 1, VF = MSB
$E0E    $CFA1   RND      VF, #A1         ; VF = random & A1
$E10    $433F   SNE      V3, #3F         ; Skip if V3 != 63
$E12    $42D3   SNE      V2, #D3         ; Skip if V2 != 211
$E14    $DC55   DRW      VC, V5, #5      ; Draw 5-byte sprite at VC, V5
$E16    $2CFC   CALL     $CFC            ; Call subroutine at CFC
$E18    $59FD   UNKNOWN  $59FD           ; Unknown 5xxx instruction
$E1A    $BDCA   JP       V0, $DCA        ; Jump to V0 + DCA
$E1C    $4A92   SNE      VA, #92         ; Skip if VA != 146
$E1E    $96BD   UNKNOWN  $96BD           ; Unknown 9xxx instruction
$E20    $2542   CALL     $542            ; Call subroutine at 542
$E22    $0FCC   SYS      $FCC            ; System call to FCC
$E24    $6FDA   LD       VF, #DA         ; Load 218 into VF
$E26    $2C21   CALL     $C21            ; Call subroutine at C21
$E28    $8500   LD       V5, V0          ; V5 = V0
$E2A    $630D   LD       V3, #0D         ; Load 13 into V3
$E2C    $38F6   SE       V8, #F6         ; Skip if V8 == 246
$E2E    $8095   SUB      V0, V9          ; V0 -= V9, VF = !borrow
$E30    $8E5C   UNKNOWN  8E5C            ; Unknown 8xxx instruction
$E32    $C955   RND      V9, #55         ; V9 = random & 55
$E34    $B2F6   JP       V0, $2F6        ; Jump to V0 + 2F6
$E36    $24E5   CALL     $4E5            ; Call subroutine at 4E5
$E38    $5AEF   UNKNOWN  $5AEF           ; Unknown 5xxx instruction
$E3A    $5AEC   UNKNOWN  $5AEC           ; Unknown 5xxx instruction
$E3C    $6B34   LD       VB, #34         ; Load 52 into VB
$E3E    $3FB9   SE       VF, #B9         ; Skip if VF == 185
$E40    $6B9D   LD       VB, #9D         ; Load 157 into VB
$E42    $B7D0   JP       V0, $7D0        ; Jump to V0 + 7D0
$E44    $0C1F   SYS      $C1F            ; System call to C1F
$E46    $A641   LD       I, $641         ; Load 641 into I
$E48    $B11F   JP       V0, $11F        ; Jump to V0 + 11F
$E4A    $E735   UNKNOWN  $E735           ; Unknown Exxx instruction
$E4C    $8D3B   UNKNOWN  8D3B            ; Unknown 8xxx instruction
$E4E    $4FC7   SNE      VF, #C7         ; Skip if VF != 199
$E50    $28F3   CALL     $8F3            ; Call subroutine at 8F3
$E52    $5C11   UNKNOWN  $5C11           ; Unknown 5xxx instruction
$E54    $2B58   CALL     $B58            ; Call subroutine at B58
$E56    $4274   SNE      V2, #74         ; Skip if V2 != 116
$E58    $BE75   JP       V0, $E75        ; Jump to V0 + E75
$E5A    $2E70   CALL     $E70            ; Call subroutine at E70
$E5C    $CEC6   RND      VE, #C6         ; VE = random & C6
$E5E    $C24B   RND      V2, #4B         ; V2 = random & 4B
$E60    $9155   UNKNOWN  $9155           ; Unknown 9xxx instruction
$E62    $FEE8   UNKNOWN  FEE8            ; Unknown Fxxx instruction
$E64    $BE71   JP       V0, $E71        ; Jump to V0 + E71
$E66    $FCA9   UNKNOWN  FCA9            ; Unknown Fxxx instruction
$E68    $45B4   SNE      V5, #B4         ; Skip if V5 != 180
$E6A    $35D2   SE       V5, #D2         ; Skip if V5 == 210
$E6C    $5C7A   UNKNOWN  $5C7A           ; Unknown 5xxx instruction
$E6E    $D4E2   DRW      V4, VE, #2      ; Draw 2-byte sprite at V4, VE
$E70    $42FC   SNE      V2, #FC         ; Skip if V2 != 252
$E72    $1E79   JP       $E79            ; Jump to E79
$E74    $0088   SYS      $088            ; System call to 088
$E76    $2BC1   CALL     $BC1            ; Call subroutine at BC1
$E78    $CA56   RND      VA, #56         ; VA = random & 56
$E7A    $4FEC   SNE      VF, #EC         ; Skip if VF != 236
$E7C    $5865   UNKNOWN  $5865           ; Unknown 5xxx instruction
$E7E    $8ACF   UNKNOWN  8ACF            ; Unknown 8xxx instruction
$E80    $03C7   SYS      $3C7            ; System call to 3C7
$E82    $E5D2   UNKNOWN  $E5D2           ; Unknown Exxx instruction
$E84    $7ADC   ADD      VA, #DC         ; Add 220 to VA
$E86    $8179   UNKNOWN  8179            ; Unknown 8xxx instruction
$E88    $B7C4   JP       V0, $7C4        ; Jump to V0 + 7C4
$E8A    $DC27   DRW      VC, V2, #7      ; Draw 7-byte sprite at VC, V2
$E8C    $910E   UNKNOWN  $910E           ; Unknown 9xxx instruction
$E8E    $82C1   OR       V2, VC          ; V2 |= VC
$E90    $22F7   CALL     $2F7            ; Call subroutine at 2F7
$E92    $00E2   SYS      $0E2            ; System call to 0E2
$E94    $6EA6   LD       VE, #A6         ; Load 166 into VE
$E96    $5278   UNKNOWN  $5278           ; Unknown 5xxx instruction
$E98    $2D58   CALL     $D58            ; Call subroutine at D58
$E9A    $6304   LD       V3, #04         ; Load 4 into V3
$E9C    $D2C6   DRW      V2, VC, #6      ; Draw 6-byte sprite at V2, VC
$E9E    $E84A   UNKNOWN  $E84A           ; Unknown Exxx instruction
$EA0    $6FC6   LD       VF, #C6         ; Load 198 into VF
$EA2    $60F2   LD       V0, #F2         ; Load 242 into V0
$EA4    $380C   SE       V8, #0C         ; Skip if V8 == 12
$EA6    $9374   UNKNOWN  $9374           ; Unknown 9xxx instruction
$EA8    $3CBF   SE       VC, #BF         ; Skip if VC == 191
$EAA    $5023   UNKNOWN  $5023           ; Unknown 5xxx instruction
$EAC    $4106   SNE      V1, #06         ; Skip if V1 != 6
$EAE    $C091   RND      V0, #91         ; V0 = random & 91
$EB0    $7F12   ADD      VF, #12         ; Add 18 to VF
$EB2    $CFFB   RND      VF, #FB         ; VF = random & FB
$EB4    $3D39   SE       VD, #39         ; Skip if VD == 57
$EB6    $8EC4   ADD      VE, VC          ; VE += VC, VF = carry
$EB8    $34C7   SE       V4, #C7         ; Skip if V4 == 199
$EBA    $6388   LD       V3, #88         ; Load 136 into V3
$EBC    $09D7   SYS      $9D7            ; System call to 9D7
$EBE    $2873   CALL     $873            ; Call subroutine at 873
$EC0    $378B   SE       V7, #8B         ; Skip if V7 == 139
$EC2    $51FC   UNKNOWN  $51FC           ; Unknown 5xxx instruction
$EC4    $EEFE   UNKNOWN  $EEFE           ; Unknown Exxx instruction
$EC6    $9417   UNKNOWN  $9417           ; Unknown 9xxx instruction
$EC8    $421D   SNE      V2, #1D         ; Skip if V2 != 29
$ECA    $089E   SYS      $89E            ; System call to 89E
$ECC    $D9F6   DRW      V9, VF, #6      ; Draw 6-byte sprite at V9, VF
$ECE    $2227   CALL     $227            ; Call subroutine at 227
$ED0    $DB1F   DRW      VB, V1, #F      ; Draw 15-byte sprite at VB, V1
$ED2    $56D6   UNKNOWN  $56D6           ; Unknown 5xxx instruction
$ED4    $C7AD   RND      V7, #AD         ; V7 = random & AD
$ED6    $9652   UNKNOWN  $9652           ; Unknown 9xxx instruction
$ED8    $451E   SNE      V5, #1E         ; Skip if V5 != 30
$EDA    $9519   UNKNOWN  $9519           ; Unknown 9xxx instruction
$EDC    $CC45   RND      VC, #45         ; VC = random & 45
$EDE    $A15E   LD       I, $15E         ; Load 15E into I
$EE0    $2CB0   CALL     $CB0            ; Call subroutine at CB0
$EE2    $0B63   SYS      $B63            ; System call to B63
$EE4    $F11A   UNKNOWN  F11A            ; Unknown Fxxx instruction
$EE6    $BDD8   JP       V0, $DD8        ; Jump to V0 + DD8
$EE8    $028E   SYS      $28E            ; System call to 28E
$EEA    $4FAE   SNE      VF, #AE         ; Skip if VF != 174
$EEC    $6C36   LD       VC, #36         ; Load 54 into VC
$EEE    $7213   ADD      V2, #13         ; Add 19 to V2
$EF0    $3825   SE       V8, #25         ; Skip if V8 == 37
$EF2    $0AAE   SYS      $AAE            ; System call to AAE
$EF4    $1EA0   JP       $EA0            ; Jump to EA0
$EF6    $1971   JP       $971            ; Jump to 971
$EF8    $ED4B   UNKNOWN  $ED4B           ; Unknown Exxx instruction
$EFA    $827F   UNKNOWN  827F            ; Unknown 8xxx instruction
$EFC    $8E6A   UNKNOWN  8E6A            ; Unknown 8xxx instruction
$EFE    $B294   JP       V0, $294        ; Jump to V0 + 294
$F00    $6EFA   LD       VE, #FA         ; Load 250 into VE
$F02    $285A   CALL     $85A            ; Call subroutine at 85A
$F04    $C197   RND      V1, #97         ; V1 = random & 97
$F06    $BA43   JP       V0, $A43        ; Jump to V0 + A43
$F08    $EF57   UNKNOWN  $EF57           ; Unknown Exxx instruction
$F0A    $4702   SNE      V7, #02         ; Skip if V7 != 2
$F0C    $0CB7   SYS      $CB7            ; System call to CB7
$F0E    $3917   SE       V9, #17         ; Skip if V9 == 23
$F10    $B07C   JP       V0, $07C        ; Jump to V0 + 07C
$F12    $0D95   SYS      $D95            ; System call to D95
$F14    $1D9C   JP       $D9C            ; Jump to D9C
$F16    $9E52   UNKNOWN  $9E52           ; Unknown 9xxx instruction
$F18    $2CBD   CALL     $CBD            ; Call subroutine at CBD
$F1A    $FE0B   UNKNOWN  FE0B            ; Unknown Fxxx instruction
$F1C    $AB88   LD       I, $B88         ; Load B88 into I
$F1E    $34F4   SE       V4, #F4         ; Skip if V4 == 244
$F20    $A35C   LD       I, $35C         ; Load 35C into I
$F22    $BBE3   JP       V0, $BE3        ; Jump to V0 + BE3
$F24    $D17E   DRW      V1, V7, #E      ; Draw 14-byte sprite at V1, V7
$F26    $637E   LD       V3, #7E         ; Load 126 into V3
$F28    $B4F6   JP       V0, $4F6        ; Jump to V0 + 4F6
$F2A    $5B4A   UNKNOWN  $5B4A           ; Unknown 5xxx instruction
$F2C    $642C   LD       V4, #2C         ; Load 44 into V4
$F2E    $91C3   UNKNOWN  $91C3           ; Unknown 9xxx instruction
$F30    $FCCA   UNKNOWN  FCCA            ; Unknown Fxxx instruction
$F32    $5B8D   UNKNOWN  $5B8D           ; Unknown 5xxx instruction
$F34    $99F8   UNKNOWN  $99F8           ; Unknown 9xxx instruction
$F36    $F7FE   UNKNOWN  F7FE            ; Unknown Fxxx instruction
$F38    $6639   LD       V6, #39         ; Load 57 into V6
$F3A    $E322   UNKNOWN  $E322           ; Unknown Exxx instruction
$F3C    $5FFD   UNKNOWN  $5FFD           ; Unknown 5xxx instruction
$F3E    $207E   CALL     $07E            ; Call subroutine at 07E
$F40    $B713   JP       V0, $713        ; Jump to V0 + 713
$F42    $DB7B   DRW      VB, V7, #B      ; Draw 11-byte sprite at VB, V7
$F44    $6E59   LD       VE, #59         ; Load 89 into VE
$F46    $B99A   JP       V0, $99A        ; Jump to V0 + 99A
$F48    $5A94   UNKNOWN  $5A94           ; Unknown 5xxx instruction
$F4A    $FC27   UNKNOWN  FC27            ; Unknown Fxxx instruction
$F4C    $A053   LD       I, $053         ; Load 053 into I
$F4E    $2435   CALL     $435            ; Call subroutine at 435
$F50    $B2C6   JP       V0, $2C6        ; Jump to V0 + 2C6
$F52    $9B27   UNKNOWN  $9B27           ; Unknown 9xxx instruction
$F54    $A66F   LD       I, $66F         ; Load 66F into I
$F56    $8B28   UNKNOWN  8B28            ; Unknown 8xxx instruction
$F58    $B1C4   JP       V0, $1C4        ; Jump to V0 + 1C4
$F5A    $8CD9   UNKNOWN  8CD9            ; Unknown 8xxx instruction
$F5C    $6F82   LD       VF, #82         ; Load 130 into VF
$F5E    $E339   UNKNOWN  $E339           ; Unknown Exxx instruction
$F60    $6419   LD       V4, #19         ; Load 25 into V4
$F62    $0DF9   SYS      $DF9            ; System call to DF9
$F64    $B773   JP       V0, $773        ; Jump to V0 + 773
$F66    $EAF4   UNKNOWN  $EAF4           ; Unknown Exxx instruction
$F68    $5F84   UNKNOWN  $5F84           ; Unknown 5xxx instruction
$F6A    $9CD0   SNE      VC, VD          ; Skip if VC != VD
$F6C    $297F   CALL     $97F            ; Call subroutine at 97F
$F6E    $6A2B   LD       VA, #2B         ; Load 43 into VA
$F70    $19CF   JP       $9CF            ; Jump to 9CF
$F72    $3E77   SE       VE, #77         ; Skip if VE == 119
$F74    $DC2E   DRW      VC, V2, #E      ; Draw 14-byte sprite at VC, V2
$F76    $4840   SNE      V8, #40         ; Skip if V8 != 64
$F78    $D48D   DRW      V4, V8, #D      ; Draw 13-byte sprite at V4, V8
$F7A    $AAFF   LD       I, $AFF         ; Load AFF into I
$F7C    $5FC2   UNKNOWN  $5FC2           ; Unknown 5xxx instruction
$F7E    $9E38   UNKNOWN  $9E38           ; Unknown 9xxx instruction
$F80    $07BE   SYS      $7BE            ; System call to 7BE
$F82    $6C6C   LD       VC, #6C         ; Load 108 into VC
$F84    $4DF0   SNE      VD, #F0         ; Skip if VD != 240
$F86    $2324   CALL     $324            ; Call subroutine at 324
$F88    $6913   LD       V9, #13         ; Load 19 into V9
$F8A    $3B5F   SE       VB, #5F         ; Skip if VB == 95
$F8C    $378E   SE       V7, #8E         ; Skip if V7 == 142
$F8E    $0DFB   SYS      $DFB            ; System call to DFB
$F90    $6AE2   LD       VA, #E2         ; Load 226 into VA
$F92    $1929   JP       $929            ; Jump to 929
$F94    $D188   DRW      V1, V8, #8      ; Draw 8-byte sprite at V1, V8
$F96    $1FC2   JP       $FC2            ; Jump to FC2
$F98    $14A3   JP       $4A3            ; Jump to 4A3
$F9A    $1E75   JP       $E75            ; Jump to E75
$F9C    $ACD7   LD       I, $CD7         ; Load CD7 into I
$F9E    $E119   UNKNOWN  $E119           ; Unknown Exxx instruction
$FA0    $EA94   UNKNOWN  $EA94           ; Unknown Exxx instruction
$FA2    $8B5F   UNKNOWN  8B5F            ; Unknown 8xxx instruction
$FA4    $EF66   UNKNOWN  $EF66           ; Unknown Exxx instruction
$FA6    $01E4   SYS      $1E4            ; System call to 1E4
$FA8    $BCC7   JP       V0, $CC7        ; Jump to V0 + CC7
$FAA    $980F   UNKNOWN  $980F           ; Unknown 9xxx instruction
$FAC    $D900   DRW      V9, V0, #0      ; Draw 0-byte sprite at V9, V0
$FAE    $AD68   LD       I, $D68         ; Load D68 into I
$FB0    $E777   UNKNOWN  $E777           ; Unknown Exxx instruction
$FB2    $D8AA   DRW      V8, VA, #A      ; Draw 10-byte sprite at V8, VA
$FB4    $8F20   LD       VF, V2          ; VF = V2
$FB6    $6BF4   LD       VB, #F4         ; Load 244 into VB
$FB8    $7EFF   ADD      VE, #FF         ; Add 255 to VE
$FBA    $6616   LD       V6, #16         ; Load 22 into V6
$FBC    $45EC   SNE      V5, #EC         ; Skip if V5 != 236
$FBE    $A5A4   LD       I, $5A4         ; Load 5A4 into I
$FC0    $5C67   UNKNOWN  $5C67           ; Unknown 5xxx instruction
$FC2    $9CFD   UNKNOWN  $9CFD           ; Unknown 9xxx instruction
$FC4    $716D   ADD      V1, #6D         ; Add 109 to V1
$FC6    $FE6A   UNKNOWN  FE6A            ; Unknown Fxxx instruction
$FC8    $40B5   SNE      V0, #B5         ; Skip if V0 != 181
$FCA    $B051   JP       V0, $051        ; Jump to V0 + 051
$FCC    $EF68   UNKNOWN  $EF68           ; Unknown Exxx instruction
$FCE    $DEB3   DRW      VE, VB, #3      ; Draw 3-byte sprite at VE, VB
$FD0    $5B06   UNKNOWN  $5B06           ; Unknown 5xxx instruction
$FD2    $9987   UNKNOWN  $9987           ; Unknown 9xxx instruction
$FD4    $88F5   SUB      V8, VF          ; V8 -= VF, VF = !borrow
$FD6    $DB5C   DRW      VB, V5, #C      ; Draw 12-byte sprite at VB, V5
$FD8    $5C64   UNKNOWN  $5C64           ; Unknown 5xxx instruction
$FDA    $9E67   UNKNOWN  $9E67           ; Unknown 9xxx instruction
$FDC    $69BE   LD       V9, #BE         ; Load 190 into V9
$FDE    $5E3E   UNKNOWN  $5E3E           ; Unknown 5xxx instruction
$FE0    $D8FD   DRW      V8, VF, #D      ; Draw 13-byte sprite at V8, VF
$FE2    $D8DB   DRW      V8, VD, #B      ; Draw 11-byte sprite at V8, VD
$FE4    $A179   LD       I, $179         ; Load 179 into I
$FE6    $5138   UNKNOWN  $5138           ; Unknown 5xxx instruction
$FE8    $E277   UNKNOWN  $E277           ; Unknown Exxx instruction
$FEA    $6FAF   LD       VF, #AF         ; Load 175 into VF
$FEC    $65C8   LD       V5, #C8         ; Load 200 into V5
$FEE    $0C40   SYS      $C40            ; System call to C40
$FF0    $8232   AND      V2, V3          ; V2 &= V3
$FF2    $5BB9   UNKNOWN  $5BB9           ; Unknown 5xxx instruction
$FF4    $8DDD   UNKNOWN  8DDD            ; Unknown 8xxx instruction
$FF6    $675A   LD       V7, #5A         ; Load 90 into V7
$FF8    $A3C4   LD       I, $3C4         ; Load 3C4 into I
$FFA    $E4B4   UNKNOWN  $E4B4           ; Unknown Exxx instruction
$FFC    $99A3   UNKNOWN  $99A3           ; Unknown 9xxx instruction
$FFE    $2C08   CALL     $C08            ; Call subroutine at C08

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 478 (26.7%)
  JP      : 222 (12.4%)
  LD      : 221 (12.3%)
  SE      : 145 ( 8.1%)
  SYS     : 122 ( 6.8%)
  RND     : 117 ( 6.5%)
  CALL    : 117 ( 6.5%)
  SNE     : 116 ( 6.5%)
  DRW     : 115 ( 6.4%)
  ADD     :  92 ( 5.1%)
  SHL     :  11 ( 0.6%)
  AND     :   9 ( 0.5%)
  XOR     :   6 ( 0.3%)
  OR      :   6 ( 0.3%)
  SHR     :   5 ( 0.3%)
  SUBN    :   5 ( 0.3%)
  SUB     :   5 ( 0.3%)

Memory Operations: 313 (17.5%)
Arithmetic Operations: 123 (6.9%)
