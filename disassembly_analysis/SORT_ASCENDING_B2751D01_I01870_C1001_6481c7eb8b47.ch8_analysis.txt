
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B2751D01_I01870_C1001_6481c7eb8b47.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 2751
Instance: 1870
Direction: ascending
Final Array: [41, 49, 126, 129, 144, 174, 188, 219]
Operations: R:8 W:0 C:60 S:24

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 103
Sort Array References:
  $244: LD I, $D47 ; Load D47 into I
  $252: LD I, $ECE ; Load ECE into I
  $256: LD I, $A76 ; Load A76 into I
  $272: LD I, $5F9 ; Load 5F9 into I
  $28A: LD I, $639 ; Load 639 into I
  $2C2: LD I, $644 ; Load 644 into I
  $2E8: LD I, $0E9 ; Load 0E9 into I
  $330: LD I, $09B ; Load 09B into I
  $346: LD I, $4DB ; Load 4DB into I
  $370: LD I, $939 ; Load 939 into I
  $3DE: LD I, $B8C ; Load B8C into I
  $3E4: LD I, $4A3 ; Load 4A3 into I
  $3FC: LD I, $657 ; Load 657 into I
  $3FE: LD I, $CAB ; Load CAB into I
  $40E: LD I, $CA8 ; Load CA8 into I
  $430: LD I, $57F ; Load 57F into I
  $432: LD I, $93E ; Load 93E into I
  $44E: LD I, $372 ; Load 372 into I
  $454: LD I, $85D ; Load 85D into I
  $46A: LD I, $1CF ; Load 1CF into I
  $474: LD I, $72C ; Load 72C into I
  $478: LD I, $C3E ; Load C3E into I
  $498: LD I, $2E2 ; Load 2E2 into I
  $4BE: LD I, $579 ; Load 579 into I
  $4F4: LD I, $AA5 ; Load AA5 into I
  $51E: LD [I], V6 ; Store V0-V6 at I
  $524: LD I, $06A ; Load 06A into I
  $55C: LD I, $D36 ; Load D36 into I
  $560: LD I, $633 ; Load 633 into I
  $5C6: LD I, $2C6 ; Load 2C6 into I
  $5CC: LD I, $33C ; Load 33C into I
  $5E0: LD I, $FA1 ; Load FA1 into I
  $5E2: LD I, $AC7 ; Load AC7 into I
  $5F4: LD I, $43A ; Load 43A into I
  $5F8: LD I, $151 ; Load 151 into I
  $644: LD I, $460 ; Load 460 into I
  $64E: LD I, $F15 ; Load F15 into I
  $696: LD I, $60F ; Load 60F into I
  $6A2: LD I, $D84 ; Load D84 into I
  $72C: LD I, $876 ; Load 876 into I
  $77A: LD I, $D8E ; Load D8E into I
  $7A0: LD I, $D85 ; Load D85 into I
  $7A6: LD I, $10B ; Load 10B into I
  $7B4: LD I, $502 ; Load 502 into I
  $7EC: LD I, $EBA ; Load EBA into I
  $7F2: LD I, $6BE ; Load 6BE into I
  $808: LD I, $B88 ; Load B88 into I
  $878: LD I, $B52 ; Load B52 into I
  $87A: LD I, $845 ; Load 845 into I
  $910: LD I, $324 ; Load 324 into I
  $916: LD I, $D81 ; Load D81 into I
  $92A: LD I, $A3C ; Load A3C into I
  $938: LD I, $A4C ; Load A4C into I
  $944: LD I, $C3A ; Load C3A into I
  $948: LD I, $83B ; Load 83B into I
  $962: LD I, $A9B ; Load A9B into I
  $988: LD I, $FDB ; Load FDB into I
  $9A2: LD I, $EA9 ; Load EA9 into I
  $9BC: LD I, $15B ; Load 15B into I
  $9C4: LD I, $3CE ; Load 3CE into I
  $9C8: LD I, $D2F ; Load D2F into I
  $A38: LD I, $52B ; Load 52B into I
  $A66: LD I, $6A5 ; Load 6A5 into I
  $A86: LD I, $85B ; Load 85B into I
  $A88: LD I, $FE2 ; Load FE2 into I
  $AA4: LD I, $3CF ; Load 3CF into I
  $AB4: LD I, $E82 ; Load E82 into I
  $ACE: LD I, $A76 ; Load A76 into I
  $AEE: LD I, $5E0 ; Load 5E0 into I
  $AF8: LD I, $D80 ; Load D80 into I
  $B16: LD I, $516 ; Load 516 into I
  $B4C: LD V0, [I] ; Load V0-V0 from I
  $B52: LD I, $906 ; Load 906 into I
  $B62: LD I, $E53 ; Load E53 into I
  $B7C: LD I, $8F3 ; Load 8F3 into I
  $B9E: LD I, $BAF ; Load BAF into I
  $BA6: LD I, $13A ; Load 13A into I
  $BB0: LD I, $BB7 ; Load BB7 into I
  $BB6: LD I, $A03 ; Load A03 into I
  $BBA: LD I, $030 ; Load 030 into I
  $BC4: LD I, $128 ; Load 128 into I
  $BD8: LD I, $B16 ; Load B16 into I
  $C3C: LD I, $167 ; Load 167 into I
  $C9C: LD I, $9D8 ; Load 9D8 into I
  $CBC: LD I, $74B ; Load 74B into I
  $CC6: LD I, $2FF ; Load 2FF into I
  $D22: LD I, $BC5 ; Load BC5 into I
  $D26: LD I, $862 ; Load 862 into I
  $D48: LD V9, [I] ; Load V0-V9 from I
  $D54: LD I, $EEB ; Load EEB into I
  $DCC: LD I, $AC7 ; Load AC7 into I
  $E32: LD I, $6F6 ; Load 6F6 into I
  $E88: LD I, $FDD ; Load FDD into I
  $EAE: LD I, $EAA ; Load EAA into I
  $ECE: LD I, $E90 ; Load E90 into I
  $ED0: LD I, $6A0 ; Load 6A0 into I
  $F14: LD I, $B7B ; Load B7B into I
  $F32: LD I, $8E1 ; Load 8E1 into I
  $F5C: LD I, $BCF ; Load BCF into I
  $F6E: LD I, $CD0 ; Load CD0 into I
  $F80: LD I, $C0B ; Load C0B into I
  $F8C: LD I, $893 ; Load 893 into I
  $FAA: LD I, $5E9 ; Load 5E9 into I

CONTROL FLOW ANALYSIS:
Jumps: 243
Calls: 124
Branches: 246
Loops: 133
Loop Structures:
  $2C8 -> $106 (backward jump)
  $2D4 -> $02A (backward jump)
  $320 -> $218 (backward jump)
  $3F2 -> $2DB (backward jump)
  $402 -> $24C (backward jump)
  $42A -> $3C8 (backward jump)
  $42C -> $373 (backward jump)
  $446 -> $30D (backward jump)
  $448 -> $224 (backward jump)
  $466 -> $16C (backward jump)
  $484 -> $01B (backward jump)
  $486 -> $226 (backward jump)
  $494 -> $36F (backward jump)
  $4A0 -> $429 (backward jump)
  $4AC -> $2DA (backward jump)
  $4C4 -> $0CA (backward jump)
  $4CA -> $301 (backward jump)
  $4FC -> $4BF (backward jump)
  $544 -> $1BC (backward jump)
  $546 -> $399 (backward jump)
  $598 -> $16E (backward jump)
  $5E8 -> $116 (backward jump)
  $5F6 -> $058 (backward jump)
  $604 -> $5D3 (backward jump)
  $616 -> $511 (backward jump)
  $690 -> $292 (backward jump)
  $694 -> $475 (backward jump)
  $6B6 -> $357 (backward jump)
  $6E6 -> $665 (backward jump)
  $6F2 -> $438 (backward jump)
  $712 -> $439 (backward jump)
  $728 -> $572 (backward jump)
  $736 -> $212 (backward jump)
  $740 -> $5C3 (backward jump)
  $76A -> $449 (backward jump)
  $77C -> $6B1 (backward jump)
  $7CE -> $5D4 (backward jump)
  $852 -> $320 (backward jump)
  $87C -> $31C (backward jump)
  $88E -> $510 (backward jump)
  $8A6 -> $4E2 (backward jump)
  $8CC -> $48F (backward jump)
  $8D4 -> $2EA (backward jump)
  $8F4 -> $69A (backward jump)
  $934 -> $191 (backward jump)
  $96E -> $84C (backward jump)
  $972 -> $1F4 (backward jump)
  $98A -> $67E (backward jump)
  $990 -> $620 (backward jump)
  $9BE -> $3A0 (backward jump)
  $9EA -> $42B (backward jump)
  $9F8 -> $71B (backward jump)
  $A14 -> $5DD (backward jump)
  $A18 -> $81D (backward jump)
  $A4E -> $74D (backward jump)
  $A68 -> $766 (backward jump)
  $AAE -> $2B6 (backward jump)
  $AB6 -> $487 (backward jump)
  $ABC -> $922 (backward jump)
  $B10 -> $110 (backward jump)
  $B38 -> $2DC (backward jump)
  $B3C -> $77D (backward jump)
  $B46 -> $71F (backward jump)
  $B58 -> $8D0 (backward jump)
  $B86 -> $B13 (backward jump)
  $B92 -> $9B5 (backward jump)
  $BC2 -> $AB5 (backward jump)
  $BD4 -> $842 (backward jump)
  $BE2 -> $971 (backward jump)
  $C16 -> $119 (backward jump)
  $C1A -> $109 (backward jump)
  $C52 -> $8DD (backward jump)
  $C88 -> $344 (backward jump)
  $CA6 -> $048 (backward jump)
  $CB0 -> $261 (backward jump)
  $CCA -> $35C (backward jump)
  $CD6 -> $9C0 (backward jump)
  $CE4 -> $650 (backward jump)
  $CFE -> $C4F (backward jump)
  $D02 -> $979 (backward jump)
  $D1A -> $111 (backward jump)
  $D24 -> $08B (backward jump)
  $D30 -> $212 (backward jump)
  $D3A -> $2C3 (backward jump)
  $D5E -> $23D (backward jump)
  $D66 -> $04B (backward jump)
  $D8E -> $270 (backward jump)
  $DB2 -> $9FC (backward jump)
  $DC0 -> $084 (backward jump)
  $DC4 -> $4E3 (backward jump)
  $DCE -> $7C6 (backward jump)
  $DD2 -> $928 (backward jump)
  $DEE -> $822 (backward jump)
  $E00 -> $49D (backward jump)
  $E08 -> $C52 (backward jump)
  $E0A -> $6F2 (backward jump)
  $E18 -> $662 (backward jump)
  $E1A -> $D53 (backward jump)
  $E1C -> $AF0 (backward jump)
  $E20 -> $7BB (backward jump)
  $E30 -> $B4F (backward jump)
  $E4C -> $7AA (backward jump)
  $E50 -> $7C3 (backward jump)
  $E70 -> $568 (backward jump)
  $E78 -> $D85 (backward jump)
  $E7E -> $4F8 (backward jump)
  $E82 -> $DFD (backward jump)
  $E84 -> $66B (backward jump)
  $E86 -> $591 (backward jump)
  $EA6 -> $59F (backward jump)
  $ED4 -> $A47 (backward jump)
  $F1C -> $34F (backward jump)
  $F22 -> $08C (backward jump)
  $F34 -> $07A (backward jump)
  $F40 -> $D5B (backward jump)
  $F4C -> $445 (backward jump)
  $F56 -> $693 (backward jump)
  $F78 -> $482 (backward jump)
  $F8A -> $18D (backward jump)
  $F90 -> $0F9 (backward jump)
  $F92 -> $789 (backward jump)
  $FA4 -> $2E3 (backward jump)
  $FB2 -> $65F (backward jump)
  $FB4 -> $35F (backward jump)
  $FB8 -> $F4B (backward jump)
  $FBC -> $01A (backward jump)
  $FC0 -> $BE4 (backward jump)
  $FD8 -> $4C2 (backward jump)
  $FDE -> $196 (backward jump)
  $FEA -> $94E (backward jump)
  $FEC -> $F12 (backward jump)
  $FF2 -> $5F7 (backward jump)
  $FF6 -> $0C6 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $F2D6   UNKNOWN  F2D6            ; Unknown Fxxx instruction
$202    $0A21   SYS      $A21            ; System call to A21
$204    $7741   ADD      V7, #41         ; Add 65 to V7
$206    $640B   LD       V4, #0B         ; Load 11 into V4
$208    $B8F8   JP       V0, $8F8        ; Jump to V0 + 8F8
$20A    $E9BB   UNKNOWN  $E9BB           ; Unknown Exxx instruction
$20C    $3B03   SE       VB, #03         ; Skip if VB == 3
$20E    $B388   JP       V0, $388        ; Jump to V0 + 388
$210    $44C1   SNE      V4, #C1         ; Skip if V4 != 193
$212    $12F1   JP       $2F1            ; Jump to 2F1
$214    $19F5   JP       $9F5            ; Jump to 9F5
$216    $9D2F   UNKNOWN  $9D2F           ; Unknown 9xxx instruction
$218    $7287   ADD      V2, #87         ; Add 135 to V2
$21A    $0193   SYS      $193            ; System call to 193
$21C    $476C   SNE      V7, #6C         ; Skip if V7 != 108
$21E    $DF1F   DRW      VF, V1, #F      ; Draw 15-byte sprite at VF, V1
$220    $6405   LD       V4, #05         ; Load 5 into V4
$222    $D965   DRW      V9, V6, #5      ; Draw 5-byte sprite at V9, V6
$224    $DD95   DRW      VD, V9, #5      ; Draw 5-byte sprite at VD, V9
$226    $5AEA   UNKNOWN  $5AEA           ; Unknown 5xxx instruction
$228    $2E9E   CALL     $E9E            ; Call subroutine at E9E
$22A    $5BD9   UNKNOWN  $5BD9           ; Unknown 5xxx instruction
$22C    $7863   ADD      V8, #63         ; Add 99 to V8
$22E    $446D   SNE      V4, #6D         ; Skip if V4 != 109
$230    $6B73   LD       VB, #73         ; Load 115 into VB
$232    $DE2A   DRW      VE, V2, #A      ; Draw 10-byte sprite at VE, V2
$234    $B49E   JP       V0, $49E        ; Jump to V0 + 49E
$236    $C7A4   RND      V7, #A4         ; V7 = random & A4
$238    $E0AF   UNKNOWN  $E0AF           ; Unknown Exxx instruction
$23A    $D03E   DRW      V0, V3, #E      ; Draw 14-byte sprite at V0, V3
$23C    $03B3   SYS      $3B3            ; System call to 3B3
$23E    $C826   RND      V8, #26         ; V8 = random & 26
$240    $2242   CALL     $242            ; Call subroutine at 242
$242    $B542   JP       V0, $542        ; Jump to V0 + 542
$244    $AD47   LD       I, $D47         ; Load D47 into I
$246    $89AB   UNKNOWN  89AB            ; Unknown 8xxx instruction
$248    $5B46   UNKNOWN  $5B46           ; Unknown 5xxx instruction
$24A    $DD8C   DRW      VD, V8, #C      ; Draw 12-byte sprite at VD, V8
$24C    $673E   LD       V7, #3E         ; Load 62 into V7
$24E    $5545   UNKNOWN  $5545           ; Unknown 5xxx instruction
$250    $5B2A   UNKNOWN  $5B2A           ; Unknown 5xxx instruction
$252    $AECE   LD       I, $ECE         ; Load ECE into I
$254    $48E7   SNE      V8, #E7         ; Skip if V8 != 231
$256    $AA76   LD       I, $A76         ; Load A76 into I
$258    $FC68   UNKNOWN  FC68            ; Unknown Fxxx instruction
$25A    $599A   UNKNOWN  $599A           ; Unknown 5xxx instruction
$25C    $1B9A   JP       $B9A            ; Jump to B9A
$25E    $5DF4   UNKNOWN  $5DF4           ; Unknown 5xxx instruction
$260    $BB96   JP       V0, $B96        ; Jump to V0 + B96
$262    $90B2   UNKNOWN  $90B2           ; Unknown 9xxx instruction
$264    $7534   ADD      V5, #34         ; Add 52 to V5
$266    $82EF   UNKNOWN  82EF            ; Unknown 8xxx instruction
$268    $2E50   CALL     $E50            ; Call subroutine at E50
$26A    $921B   UNKNOWN  $921B           ; Unknown 9xxx instruction
$26C    $6B76   LD       VB, #76         ; Load 118 into VB
$26E    $2A27   CALL     $A27            ; Call subroutine at A27
$270    $5106   UNKNOWN  $5106           ; Unknown 5xxx instruction
$272    $A5F9   LD       I, $5F9         ; Load 5F9 into I
$274    $8C92   AND      VC, V9          ; VC &= V9
$276    $EF09   UNKNOWN  $EF09           ; Unknown Exxx instruction
$278    $8D08   UNKNOWN  8D08            ; Unknown 8xxx instruction
$27A    $2558   CALL     $558            ; Call subroutine at 558
$27C    $6104   LD       V1, #04         ; Load 4 into V1
$27E    $068F   SYS      $68F            ; System call to 68F
$280    $18A9   JP       $8A9            ; Jump to 8A9
$282    $3EF7   SE       VE, #F7         ; Skip if VE == 247
$284    $CD8A   RND      VD, #8A         ; VD = random & 8A
$286    $B526   JP       V0, $526        ; Jump to V0 + 526
$288    $E5D8   UNKNOWN  $E5D8           ; Unknown Exxx instruction
$28A    $A639   LD       I, $639         ; Load 639 into I
$28C    $5C9C   UNKNOWN  $5C9C           ; Unknown 5xxx instruction
$28E    $1AA2   JP       $AA2            ; Jump to AA2
$290    $6E84   LD       VE, #84         ; Load 132 into VE
$292    $48B4   SNE      V8, #B4         ; Skip if V8 != 180
$294    $88A7   SUBN     V8, VA          ; V8 = VA - V8, VF = !borrow
$296    $9DD7   UNKNOWN  $9DD7           ; Unknown 9xxx instruction
$298    $5EFC   UNKNOWN  $5EFC           ; Unknown 5xxx instruction
$29A    $6276   LD       V2, #76         ; Load 118 into V2
$29C    $ECC8   UNKNOWN  $ECC8           ; Unknown Exxx instruction
$29E    $EC61   UNKNOWN  $EC61           ; Unknown Exxx instruction
$2A0    $29D2   CALL     $9D2            ; Call subroutine at 9D2
$2A2    $465B   SNE      V6, #5B         ; Skip if V6 != 91
$2A4    $C4B1   RND      V4, #B1         ; V4 = random & B1
$2A6    $C981   RND      V9, #81         ; V9 = random & 81
$2A8    $8631   OR       V6, V3          ; V6 |= V3
$2AA    $7058   ADD      V0, #58         ; Add 88 to V0
$2AC    $7CE7   ADD      VC, #E7         ; Add 231 to VC
$2AE    $0A70   SYS      $A70            ; System call to A70
$2B0    $BC8A   JP       V0, $C8A        ; Jump to V0 + C8A
$2B2    $1583   JP       $583            ; Jump to 583
$2B4    $379D   SE       V7, #9D         ; Skip if V7 == 157
$2B6    $57B9   UNKNOWN  $57B9           ; Unknown 5xxx instruction
$2B8    $8208   UNKNOWN  8208            ; Unknown 8xxx instruction
$2BA    $EE41   UNKNOWN  $EE41           ; Unknown Exxx instruction
$2BC    $BAB7   JP       V0, $AB7        ; Jump to V0 + AB7
$2BE    $2B5B   CALL     $B5B            ; Call subroutine at B5B
$2C0    $3DDD   SE       VD, #DD         ; Skip if VD == 221
$2C2    $A644   LD       I, $644         ; Load 644 into I
$2C4    $978D   UNKNOWN  $978D           ; Unknown 9xxx instruction
$2C6    $0366   SYS      $366            ; System call to 366
$2C8    $B106   JP       V0, $106        ; Jump to V0 + 106
$2CA    $EAE6   UNKNOWN  $EAE6           ; Unknown Exxx instruction
$2CC    $FF36   UNKNOWN  FF36            ; Unknown Fxxx instruction
$2CE    $408D   SNE      V0, #8D         ; Skip if V0 != 141
$2D0    $B519   JP       V0, $519        ; Jump to V0 + 519
$2D2    $DBD3   DRW      VB, VD, #3      ; Draw 3-byte sprite at VB, VD
$2D4    $102A   JP       $02A            ; Jump to 02A
$2D6    $8854   ADD      V8, V5          ; V8 += V5, VF = carry
$2D8    $988E   UNKNOWN  $988E           ; Unknown 9xxx instruction
$2DA    $BB89   JP       V0, $B89        ; Jump to V0 + B89
$2DC    $4E7D   SNE      VE, #7D         ; Skip if VE != 125
$2DE    $9DEB   UNKNOWN  $9DEB           ; Unknown 9xxx instruction
$2E0    $314F   SE       V1, #4F         ; Skip if V1 == 79
$2E2    $D663   DRW      V6, V6, #3      ; Draw 3-byte sprite at V6, V6
$2E4    $0A72   SYS      $A72            ; System call to A72
$2E6    $76D6   ADD      V6, #D6         ; Add 214 to V6
$2E8    $A0E9   LD       I, $0E9         ; Load 0E9 into I
$2EA    $ECE0   UNKNOWN  $ECE0           ; Unknown Exxx instruction
$2EC    $EF28   UNKNOWN  $EF28           ; Unknown Exxx instruction
$2EE    $26B8   CALL     $6B8            ; Call subroutine at 6B8
$2F0    $59F4   UNKNOWN  $59F4           ; Unknown 5xxx instruction
$2F2    $698F   LD       V9, #8F         ; Load 143 into V9
$2F4    $9524   UNKNOWN  $9524           ; Unknown 9xxx instruction
$2F6    $81CF   UNKNOWN  81CF            ; Unknown 8xxx instruction
$2F8    $66AD   LD       V6, #AD         ; Load 173 into V6
$2FA    $F299   UNKNOWN  F299            ; Unknown Fxxx instruction
$2FC    $F8B7   UNKNOWN  F8B7            ; Unknown Fxxx instruction
$2FE    $6E3C   LD       VE, #3C         ; Load 60 into VE
$300    $2931   CALL     $931            ; Call subroutine at 931
$302    $7E81   ADD      VE, #81         ; Add 129 to VE
$304    $90AE   UNKNOWN  $90AE           ; Unknown 9xxx instruction
$306    $BCDB   JP       V0, $CDB        ; Jump to V0 + CDB
$308    $B810   JP       V0, $810        ; Jump to V0 + 810
$30A    $E555   UNKNOWN  $E555           ; Unknown Exxx instruction
$30C    $37F8   SE       V7, #F8         ; Skip if V7 == 248
$30E    $4FFE   SNE      VF, #FE         ; Skip if VF != 254
$310    $CBBF   RND      VB, #BF         ; VB = random & BF
$312    $859A   UNKNOWN  859A            ; Unknown 8xxx instruction
$314    $499C   SNE      V9, #9C         ; Skip if V9 != 156
$316    $7253   ADD      V2, #53         ; Add 83 to V2
$318    $D0E3   DRW      V0, VE, #3      ; Draw 3-byte sprite at V0, VE
$31A    $FC57   UNKNOWN  FC57            ; Unknown Fxxx instruction
$31C    $5EAE   UNKNOWN  $5EAE           ; Unknown 5xxx instruction
$31E    $7313   ADD      V3, #13         ; Add 19 to V3
$320    $1218   JP       $218            ; Jump to 218
$322    $B58A   JP       V0, $58A        ; Jump to V0 + 58A
$324    $0EA9   SYS      $EA9            ; System call to EA9
$326    $5A1C   UNKNOWN  $5A1C           ; Unknown 5xxx instruction
$328    $7BE5   ADD      VB, #E5         ; Add 229 to VB
$32A    $73B1   ADD      V3, #B1         ; Add 177 to V3
$32C    $8512   AND      V5, V1          ; V5 &= V1
$32E    $893F   UNKNOWN  893F            ; Unknown 8xxx instruction
$330    $A09B   LD       I, $09B         ; Load 09B into I
$332    $05E4   SYS      $5E4            ; System call to 5E4
$334    $D31A   DRW      V3, V1, #A      ; Draw 10-byte sprite at V3, V1
$336    $160F   JP       $60F            ; Jump to 60F
$338    $9502   UNKNOWN  $9502           ; Unknown 9xxx instruction
$33A    $08FF   SYS      $8FF            ; System call to 8FF
$33C    $CDF6   RND      VD, #F6         ; VD = random & F6
$33E    $2A90   CALL     $A90            ; Call subroutine at A90
$340    $BFD4   JP       V0, $FD4        ; Jump to V0 + FD4
$342    $8FB3   XOR      VF, VB          ; VF ^= VB
$344    $014E   SYS      $14E            ; System call to 14E
$346    $A4DB   LD       I, $4DB         ; Load 4DB into I
$348    $BB00   JP       V0, $B00        ; Jump to V0 + B00
$34A    $09BF   SYS      $9BF            ; System call to 9BF
$34C    $3646   SE       V6, #46         ; Skip if V6 == 70
$34E    $33C3   SE       V3, #C3         ; Skip if V3 == 195
$350    $DCAB   DRW      VC, VA, #B      ; Draw 11-byte sprite at VC, VA
$352    $7219   ADD      V2, #19         ; Add 25 to V2
$354    $021C   SYS      $21C            ; System call to 21C
$356    $8F47   SUBN     VF, V4          ; VF = V4 - VF, VF = !borrow
$358    $981A   UNKNOWN  $981A           ; Unknown 9xxx instruction
$35A    $46A9   SNE      V6, #A9         ; Skip if V6 != 169
$35C    $404D   SNE      V0, #4D         ; Skip if V0 != 77
$35E    $C1E4   RND      V1, #E4         ; V1 = random & E4
$360    $D49F   DRW      V4, V9, #F      ; Draw 15-byte sprite at V4, V9
$362    $8F5C   UNKNOWN  8F5C            ; Unknown 8xxx instruction
$364    $2475   CALL     $475            ; Call subroutine at 475
$366    $CEE7   RND      VE, #E7         ; VE = random & E7
$368    $CC52   RND      VC, #52         ; VC = random & 52
$36A    $F877   UNKNOWN  F877            ; Unknown Fxxx instruction
$36C    $C779   RND      V7, #79         ; V7 = random & 79
$36E    $760B   ADD      V6, #0B         ; Add 11 to V6
$370    $A939   LD       I, $939         ; Load 939 into I
$372    $E355   UNKNOWN  $E355           ; Unknown Exxx instruction
$374    $45CB   SNE      V5, #CB         ; Skip if V5 != 203
$376    $3FB6   SE       VF, #B6         ; Skip if VF == 182
$378    $2F91   CALL     $F91            ; Call subroutine at F91
$37A    $CEAA   RND      VE, #AA         ; VE = random & AA
$37C    $B480   JP       V0, $480        ; Jump to V0 + 480
$37E    $2A1C   CALL     $A1C            ; Call subroutine at A1C
$380    $CE80   RND      VE, #80         ; VE = random & 80
$382    $5726   UNKNOWN  $5726           ; Unknown 5xxx instruction
$384    $8AD1   OR       VA, VD          ; VA |= VD
$386    $3468   SE       V4, #68         ; Skip if V4 == 104
$388    $B769   JP       V0, $769        ; Jump to V0 + 769
$38A    $F2F1   UNKNOWN  F2F1            ; Unknown Fxxx instruction
$38C    $53E2   UNKNOWN  $53E2           ; Unknown 5xxx instruction
$38E    $D037   DRW      V0, V3, #7      ; Draw 7-byte sprite at V0, V3
$390    $25B1   CALL     $5B1            ; Call subroutine at 5B1
$392    $1A49   JP       $A49            ; Jump to A49
$394    $43D1   SNE      V3, #D1         ; Skip if V3 != 209
$396    $D811   DRW      V8, V1, #1      ; Draw 1-byte sprite at V8, V1
$398    $B875   JP       V0, $875        ; Jump to V0 + 875
$39A    $5DC3   UNKNOWN  $5DC3           ; Unknown 5xxx instruction
$39C    $BF8F   JP       V0, $F8F        ; Jump to V0 + F8F
$39E    $6821   LD       V8, #21         ; Load 33 into V8
$3A0    $6C84   LD       VC, #84         ; Load 132 into VC
$3A2    $BCA4   JP       V0, $CA4        ; Jump to V0 + CA4
$3A4    $484B   SNE      V8, #4B         ; Skip if V8 != 75
$3A6    $B46D   JP       V0, $46D        ; Jump to V0 + 46D
$3A8    $E147   UNKNOWN  $E147           ; Unknown Exxx instruction
$3AA    $7C10   ADD      VC, #10         ; Add 16 to VC
$3AC    $1F7B   JP       $F7B            ; Jump to F7B
$3AE    $7AE0   ADD      VA, #E0         ; Add 224 to VA
$3B0    $7013   ADD      V0, #13         ; Add 19 to V0
$3B2    $1B0F   JP       $B0F            ; Jump to B0F
$3B4    $9982   UNKNOWN  $9982           ; Unknown 9xxx instruction
$3B6    $7111   ADD      V1, #11         ; Add 17 to V1
$3B8    $1DC5   JP       $DC5            ; Jump to DC5
$3BA    $CB01   RND      VB, #01         ; VB = random & 01
$3BC    $0622   SYS      $622            ; System call to 622
$3BE    $BE38   JP       V0, $E38        ; Jump to V0 + E38
$3C0    $4FF1   SNE      VF, #F1         ; Skip if VF != 241
$3C2    $EF61   UNKNOWN  $EF61           ; Unknown Exxx instruction
$3C4    $1482   JP       $482            ; Jump to 482
$3C6    $7EFD   ADD      VE, #FD         ; Add 253 to VE
$3C8    $E568   UNKNOWN  $E568           ; Unknown Exxx instruction
$3CA    $9F50   SNE      VF, V5          ; Skip if VF != V5
$3CC    $C57D   RND      V5, #7D         ; V5 = random & 7D
$3CE    $8A7F   UNKNOWN  8A7F            ; Unknown 8xxx instruction
$3D0    $C4E1   RND      V4, #E1         ; V4 = random & E1
$3D2    $436A   SNE      V3, #6A         ; Skip if V3 != 106
$3D4    $6EEE   LD       VE, #EE         ; Load 238 into VE
$3D6    $D671   DRW      V6, V7, #1      ; Draw 1-byte sprite at V6, V7
$3D8    $7302   ADD      V3, #02         ; Add 2 to V3
$3DA    $4F87   SNE      VF, #87         ; Skip if VF != 135
$3DC    $CB6B   RND      VB, #6B         ; VB = random & 6B
$3DE    $AB8C   LD       I, $B8C         ; Load B8C into I
$3E0    $28C7   CALL     $8C7            ; Call subroutine at 8C7
$3E2    $55AF   UNKNOWN  $55AF           ; Unknown 5xxx instruction
$3E4    $A4A3   LD       I, $4A3         ; Load 4A3 into I
$3E6    $4172   SNE      V1, #72         ; Skip if V1 != 114
$3E8    $2DFB   CALL     $DFB            ; Call subroutine at DFB
$3EA    $BA70   JP       V0, $A70        ; Jump to V0 + A70
$3EC    $2C75   CALL     $C75            ; Call subroutine at C75
$3EE    $33DD   SE       V3, #DD         ; Skip if V3 == 221
$3F0    $5A87   UNKNOWN  $5A87           ; Unknown 5xxx instruction
$3F2    $B2DB   JP       V0, $2DB        ; Jump to V0 + 2DB
$3F4    $0C47   SYS      $C47            ; System call to C47
$3F6    $D22F   DRW      V2, V2, #F      ; Draw 15-byte sprite at V2, V2
$3F8    $CDEF   RND      VD, #EF         ; VD = random & EF
$3FA    $E47A   UNKNOWN  $E47A           ; Unknown Exxx instruction
$3FC    $A657   LD       I, $657         ; Load 657 into I
$3FE    $ACAB   LD       I, $CAB         ; Load CAB into I
$400    $1A1A   JP       $A1A            ; Jump to A1A
$402    $B24C   JP       V0, $24C        ; Jump to V0 + 24C
$404    $5F8D   UNKNOWN  $5F8D           ; Unknown 5xxx instruction
$406    $F19E   UNKNOWN  F19E            ; Unknown Fxxx instruction
$408    $DF09   DRW      VF, V0, #9      ; Draw 9-byte sprite at VF, V0
$40A    $8F51   OR       VF, V5          ; VF |= V5
$40C    $76CF   ADD      V6, #CF         ; Add 207 to V6
$40E    $ACA8   LD       I, $CA8         ; Load CA8 into I
$410    $92B3   UNKNOWN  $92B3           ; Unknown 9xxx instruction
$412    $2190   CALL     $190            ; Call subroutine at 190
$414    $04BA   SYS      $4BA            ; System call to 4BA
$416    $0B5D   SYS      $B5D            ; System call to B5D
$418    $9026   UNKNOWN  $9026           ; Unknown 9xxx instruction
$41A    $445D   SNE      V4, #5D         ; Skip if V4 != 93
$41C    $C912   RND      V9, #12         ; V9 = random & 12
$41E    $49F9   SNE      V9, #F9         ; Skip if V9 != 249
$420    $E900   UNKNOWN  $E900           ; Unknown Exxx instruction
$422    $E7D7   UNKNOWN  $E7D7           ; Unknown Exxx instruction
$424    $2DB8   CALL     $DB8            ; Call subroutine at DB8
$426    $3098   SE       V0, #98         ; Skip if V0 == 152
$428    $86E9   UNKNOWN  86E9            ; Unknown 8xxx instruction
$42A    $13C8   JP       $3C8            ; Jump to 3C8
$42C    $B373   JP       V0, $373        ; Jump to V0 + 373
$42E    $7B70   ADD      VB, #70         ; Add 112 to VB
$430    $A57F   LD       I, $57F         ; Load 57F into I
$432    $A93E   LD       I, $93E         ; Load 93E into I
$434    $17D1   JP       $7D1            ; Jump to 7D1
$436    $2A58   CALL     $A58            ; Call subroutine at A58
$438    $7E00   ADD      VE, #00         ; Add 0 to VE
$43A    $6855   LD       V8, #55         ; Load 85 into V8
$43C    $0948   SYS      $948            ; System call to 948
$43E    $7D6F   ADD      VD, #6F         ; Add 111 to VD
$440    $4B49   SNE      VB, #49         ; Skip if VB != 73
$442    $D773   DRW      V7, V7, #3      ; Draw 3-byte sprite at V7, V7
$444    $FA99   UNKNOWN  FA99            ; Unknown Fxxx instruction
$446    $130D   JP       $30D            ; Jump to 30D
$448    $B224   JP       V0, $224        ; Jump to V0 + 224
$44A    $200D   CALL     $00D            ; Call subroutine at 00D
$44C    $07FD   SYS      $7FD            ; System call to 7FD
$44E    $A372   LD       I, $372         ; Load 372 into I
$450    $1E4A   JP       $E4A            ; Jump to E4A
$452    $8C18   UNKNOWN  8C18            ; Unknown 8xxx instruction
$454    $A85D   LD       I, $85D         ; Load 85D into I
$456    $19F1   JP       $9F1            ; Jump to 9F1
$458    $3188   SE       V1, #88         ; Skip if V1 == 136
$45A    $D115   DRW      V1, V1, #5      ; Draw 5-byte sprite at V1, V1
$45C    $C84B   RND      V8, #4B         ; V8 = random & 4B
$45E    $7837   ADD      V8, #37         ; Add 55 to V8
$460    $7722   ADD      V7, #22         ; Add 34 to V7
$462    $CFEE   RND      VF, #EE         ; VF = random & EE
$464    $27AC   CALL     $7AC            ; Call subroutine at 7AC
$466    $116C   JP       $16C            ; Jump to 16C
$468    $959C   UNKNOWN  $959C           ; Unknown 9xxx instruction
$46A    $A1CF   LD       I, $1CF         ; Load 1CF into I
$46C    $E07A   UNKNOWN  $E07A           ; Unknown Exxx instruction
$46E    $F961   UNKNOWN  F961            ; Unknown Fxxx instruction
$470    $888F   UNKNOWN  888F            ; Unknown 8xxx instruction
$472    $1C58   JP       $C58            ; Jump to C58
$474    $A72C   LD       I, $72C         ; Load 72C into I
$476    $E3A5   UNKNOWN  $E3A5           ; Unknown Exxx instruction
$478    $AC3E   LD       I, $C3E         ; Load C3E into I
$47A    $453B   SNE      V5, #3B         ; Skip if V5 != 59
$47C    $577F   UNKNOWN  $577F           ; Unknown 5xxx instruction
$47E    $58F9   UNKNOWN  $58F9           ; Unknown 5xxx instruction
$480    $0E8D   SYS      $E8D            ; System call to E8D
$482    $4C7B   SNE      VC, #7B         ; Skip if VC != 123
$484    $101B   JP       $01B            ; Jump to 01B
$486    $1226   JP       $226            ; Jump to 226
$488    $1A22   JP       $A22            ; Jump to A22
$48A    $2879   CALL     $879            ; Call subroutine at 879
$48C    $0739   SYS      $739            ; System call to 739
$48E    $5ED1   UNKNOWN  $5ED1           ; Unknown 5xxx instruction
$490    $B6B1   JP       V0, $6B1        ; Jump to V0 + 6B1
$492    $3376   SE       V3, #76         ; Skip if V3 == 118
$494    $B36F   JP       V0, $36F        ; Jump to V0 + 36F
$496    $1B79   JP       $B79            ; Jump to B79
$498    $A2E2   LD       I, $2E2         ; Load 2E2 into I
$49A    $2582   CALL     $582            ; Call subroutine at 582
$49C    $25AC   CALL     $5AC            ; Call subroutine at 5AC
$49E    $4524   SNE      V5, #24         ; Skip if V5 != 36
$4A0    $1429   JP       $429            ; Jump to 429
$4A2    $229A   CALL     $29A            ; Call subroutine at 29A
$4A4    $B875   JP       V0, $875        ; Jump to V0 + 875
$4A6    $5D35   UNKNOWN  $5D35           ; Unknown 5xxx instruction
$4A8    $DF52   DRW      VF, V5, #2      ; Draw 2-byte sprite at VF, V5
$4AA    $2797   CALL     $797            ; Call subroutine at 797
$4AC    $B2DA   JP       V0, $2DA        ; Jump to V0 + 2DA
$4AE    $CF05   RND      VF, #05         ; VF = random & 05
$4B0    $8090   LD       V0, V9          ; V0 = V9
$4B2    $558F   UNKNOWN  $558F           ; Unknown 5xxx instruction
$4B4    $2D4A   CALL     $D4A            ; Call subroutine at D4A
$4B6    $9FA7   UNKNOWN  $9FA7           ; Unknown 9xxx instruction
$4B8    $3D25   SE       VD, #25         ; Skip if VD == 37
$4BA    $91AC   UNKNOWN  $91AC           ; Unknown 9xxx instruction
$4BC    $190E   JP       $90E            ; Jump to 90E
$4BE    $A579   LD       I, $579         ; Load 579 into I
$4C0    $0D21   SYS      $D21            ; System call to D21
$4C2    $DE6F   DRW      VE, V6, #F      ; Draw 15-byte sprite at VE, V6
$4C4    $10CA   JP       $0CA            ; Jump to 0CA
$4C6    $49B8   SNE      V9, #B8         ; Skip if V9 != 184
$4C8    $3589   SE       V5, #89         ; Skip if V5 == 137
$4CA    $B301   JP       V0, $301        ; Jump to V0 + 301
$4CC    $C06A   RND      V0, #6A         ; V0 = random & 6A
$4CE    $C24A   RND      V2, #4A         ; V2 = random & 4A
$4D0    $7158   ADD      V1, #58         ; Add 88 to V1
$4D2    $DD7D   DRW      VD, V7, #D      ; Draw 13-byte sprite at VD, V7
$4D4    $3184   SE       V1, #84         ; Skip if V1 == 132
$4D6    $036E   SYS      $36E            ; System call to 36E
$4D8    $7045   ADD      V0, #45         ; Add 69 to V0
$4DA    $654B   LD       V5, #4B         ; Load 75 into V5
$4DC    $5880   SE       V8, V8          ; Skip if V8 == V8
$4DE    $8E8B   UNKNOWN  8E8B            ; Unknown 8xxx instruction
$4E0    $490D   SNE      V9, #0D         ; Skip if V9 != 13
$4E2    $B69B   JP       V0, $69B        ; Jump to V0 + 69B
$4E4    $BA8A   JP       V0, $A8A        ; Jump to V0 + A8A
$4E6    $979A   UNKNOWN  $979A           ; Unknown 9xxx instruction
$4E8    $7B72   ADD      VB, #72         ; Add 114 to VB
$4EA    $7BD5   ADD      VB, #D5         ; Add 213 to VB
$4EC    $7BB7   ADD      VB, #B7         ; Add 183 to VB
$4EE    $2309   CALL     $309            ; Call subroutine at 309
$4F0    $5C7A   UNKNOWN  $5C7A           ; Unknown 5xxx instruction
$4F2    $E489   UNKNOWN  $E489           ; Unknown Exxx instruction
$4F4    $AAA5   LD       I, $AA5         ; Load AA5 into I
$4F6    $878B   UNKNOWN  878B            ; Unknown 8xxx instruction
$4F8    $CF58   RND      VF, #58         ; VF = random & 58
$4FA    $EB30   UNKNOWN  $EB30           ; Unknown Exxx instruction
$4FC    $B4BF   JP       V0, $4BF        ; Jump to V0 + 4BF
$4FE    $BE50   JP       V0, $E50        ; Jump to V0 + E50
$500    $64AD   LD       V4, #AD         ; Load 173 into V4
$502    $4DC4   SNE      VD, #C4         ; Skip if VD != 196
$504    $C64E   RND      V6, #4E         ; V6 = random & 4E
$506    $4D1C   SNE      VD, #1C         ; Skip if VD != 28
$508    $0CA4   SYS      $CA4            ; System call to CA4
$50A    $9D54   UNKNOWN  $9D54           ; Unknown 9xxx instruction
$50C    $B9E0   JP       V0, $9E0        ; Jump to V0 + 9E0
$50E    $1968   JP       $968            ; Jump to 968
$510    $E2BA   UNKNOWN  $E2BA           ; Unknown Exxx instruction
$512    $9007   UNKNOWN  $9007           ; Unknown 9xxx instruction
$514    $6E77   LD       VE, #77         ; Load 119 into VE
$516    $CBD7   RND      VB, #D7         ; VB = random & D7
$518    $C939   RND      V9, #39         ; V9 = random & 39
$51A    $3993   SE       V9, #93         ; Skip if V9 == 147
$51C    $DBB1   DRW      VB, VB, #1      ; Draw 1-byte sprite at VB, VB
$51E    $F655   LD       [I], V6         ; Store V0-V6 at I
$520    $437E   SNE      V3, #7E         ; Skip if V3 != 126
$522    $F7D0   UNKNOWN  F7D0            ; Unknown Fxxx instruction
$524    $A06A   LD       I, $06A         ; Load 06A into I
$526    $C5C1   RND      V5, #C1         ; V5 = random & C1
$528    $52CA   UNKNOWN  $52CA           ; Unknown 5xxx instruction
$52A    $E49D   UNKNOWN  $E49D           ; Unknown Exxx instruction
$52C    $4C30   SNE      VC, #30         ; Skip if VC != 48
$52E    $8FE8   UNKNOWN  8FE8            ; Unknown 8xxx instruction
$530    $F17E   UNKNOWN  F17E            ; Unknown Fxxx instruction
$532    $EBB7   UNKNOWN  $EBB7           ; Unknown Exxx instruction
$534    $0439   SYS      $439            ; System call to 439
$536    $787F   ADD      V8, #7F         ; Add 127 to V8
$538    $89BA   UNKNOWN  89BA            ; Unknown 8xxx instruction
$53A    $559F   UNKNOWN  $559F           ; Unknown 5xxx instruction
$53C    $6785   LD       V7, #85         ; Load 133 into V7
$53E    $8618   UNKNOWN  8618            ; Unknown 8xxx instruction
$540    $882E   SHL      V8              ; V8 <<= 1, VF = MSB
$542    $B554   JP       V0, $554        ; Jump to V0 + 554
$544    $11BC   JP       $1BC            ; Jump to 1BC
$546    $1399   JP       $399            ; Jump to 399
$548    $0A5C   SYS      $A5C            ; System call to A5C
$54A    $5DA4   UNKNOWN  $5DA4           ; Unknown 5xxx instruction
$54C    $CC1C   RND      VC, #1C         ; VC = random & 1C
$54E    $84B0   LD       V4, VB          ; V4 = VB
$550    $CC23   RND      VC, #23         ; VC = random & 23
$552    $C870   RND      V8, #70         ; V8 = random & 70
$554    $9B6A   UNKNOWN  $9B6A           ; Unknown 9xxx instruction
$556    $CDC1   RND      VD, #C1         ; VD = random & C1
$558    $3318   SE       V3, #18         ; Skip if V3 == 24
$55A    $3141   SE       V1, #41         ; Skip if V1 == 65
$55C    $AD36   LD       I, $D36         ; Load D36 into I
$55E    $FFD0   UNKNOWN  FFD0            ; Unknown Fxxx instruction
$560    $A633   LD       I, $633         ; Load 633 into I
$562    $664D   LD       V6, #4D         ; Load 77 into V6
$564    $3F0A   SE       VF, #0A         ; Skip if VF == 10
$566    $57AD   UNKNOWN  $57AD           ; Unknown 5xxx instruction
$568    $3767   SE       V7, #67         ; Skip if V7 == 103
$56A    $994D   UNKNOWN  $994D           ; Unknown 9xxx instruction
$56C    $3723   SE       V7, #23         ; Skip if V7 == 35
$56E    $2E58   CALL     $E58            ; Call subroutine at E58
$570    $DCE4   DRW      VC, VE, #4      ; Draw 4-byte sprite at VC, VE
$572    $483F   SNE      V8, #3F         ; Skip if V8 != 63
$574    $86A6   SHR      V6              ; V6 >>= 1, VF = LSB
$576    $23CF   CALL     $3CF            ; Call subroutine at 3CF
$578    $D33A   DRW      V3, V3, #A      ; Draw 10-byte sprite at V3, V3
$57A    $29E1   CALL     $9E1            ; Call subroutine at 9E1
$57C    $FC53   UNKNOWN  FC53            ; Unknown Fxxx instruction
$57E    $4E25   SNE      VE, #25         ; Skip if VE != 37
$580    $18F2   JP       $8F2            ; Jump to 8F2
$582    $B8BA   JP       V0, $8BA        ; Jump to V0 + 8BA
$584    $F5ED   UNKNOWN  F5ED            ; Unknown Fxxx instruction
$586    $C938   RND      V9, #38         ; V9 = random & 38
$588    $4E6D   SNE      VE, #6D         ; Skip if VE != 109
$58A    $9037   UNKNOWN  $9037           ; Unknown 9xxx instruction
$58C    $6F24   LD       VF, #24         ; Load 36 into VF
$58E    $C8CE   RND      V8, #CE         ; V8 = random & CE
$590    $44F0   SNE      V4, #F0         ; Skip if V4 != 240
$592    $586D   UNKNOWN  $586D           ; Unknown 5xxx instruction
$594    $5EFA   UNKNOWN  $5EFA           ; Unknown 5xxx instruction
$596    $08DE   SYS      $8DE            ; System call to 8DE
$598    $B16E   JP       V0, $16E        ; Jump to V0 + 16E
$59A    $3058   SE       V0, #58         ; Skip if V0 == 88
$59C    $8CCE   SHL      VC              ; VC <<= 1, VF = MSB
$59E    $9303   UNKNOWN  $9303           ; Unknown 9xxx instruction
$5A0    $F787   UNKNOWN  F787            ; Unknown Fxxx instruction
$5A2    $B698   JP       V0, $698        ; Jump to V0 + 698
$5A4    $1653   JP       $653            ; Jump to 653
$5A6    $320A   SE       V2, #0A         ; Skip if V2 == 10
$5A8    $CBE1   RND      VB, #E1         ; VB = random & E1
$5AA    $42BC   SNE      V2, #BC         ; Skip if V2 != 188
$5AC    $1A6F   JP       $A6F            ; Jump to A6F
$5AE    $54C8   UNKNOWN  $54C8           ; Unknown 5xxx instruction
$5B0    $5145   UNKNOWN  $5145           ; Unknown 5xxx instruction
$5B2    $41C8   SNE      V1, #C8         ; Skip if V1 != 200
$5B4    $0D2F   SYS      $D2F            ; System call to D2F
$5B6    $5302   UNKNOWN  $5302           ; Unknown 5xxx instruction
$5B8    $220F   CALL     $20F            ; Call subroutine at 20F
$5BA    $DC0C   DRW      VC, V0, #C      ; Draw 12-byte sprite at VC, V0
$5BC    $1659   JP       $659            ; Jump to 659
$5BE    $EAB6   UNKNOWN  $EAB6           ; Unknown Exxx instruction
$5C0    $CC2D   RND      VC, #2D         ; VC = random & 2D
$5C2    $9964   UNKNOWN  $9964           ; Unknown 9xxx instruction
$5C4    $4FFF   SNE      VF, #FF         ; Skip if VF != 255
$5C6    $A2C6   LD       I, $2C6         ; Load 2C6 into I
$5C8    $6E61   LD       VE, #61         ; Load 97 into VE
$5CA    $2EC7   CALL     $EC7            ; Call subroutine at EC7
$5CC    $A33C   LD       I, $33C         ; Load 33C into I
$5CE    $045A   SYS      $45A            ; System call to 45A
$5D0    $4955   SNE      V9, #55         ; Skip if V9 != 85
$5D2    $C041   RND      V0, #41         ; V0 = random & 41
$5D4    $4A1F   SNE      VA, #1F         ; Skip if VA != 31
$5D6    $4765   SNE      V7, #65         ; Skip if V7 != 101
$5D8    $4209   SNE      V2, #09         ; Skip if V2 != 9
$5DA    $9F09   UNKNOWN  $9F09           ; Unknown 9xxx instruction
$5DC    $6BC1   LD       VB, #C1         ; Load 193 into VB
$5DE    $5962   UNKNOWN  $5962           ; Unknown 5xxx instruction
$5E0    $AFA1   LD       I, $FA1         ; Load FA1 into I
$5E2    $AAC7   LD       I, $AC7         ; Load AC7 into I
$5E4    $DA94   DRW      VA, V9, #4      ; Draw 4-byte sprite at VA, V9
$5E6    $93B7   UNKNOWN  $93B7           ; Unknown 9xxx instruction
$5E8    $B116   JP       V0, $116        ; Jump to V0 + 116
$5EA    $F613   UNKNOWN  F613            ; Unknown Fxxx instruction
$5EC    $D51C   DRW      V5, V1, #C      ; Draw 12-byte sprite at V5, V1
$5EE    $CE24   RND      VE, #24         ; VE = random & 24
$5F0    $7083   ADD      V0, #83         ; Add 131 to V0
$5F2    $02FA   SYS      $2FA            ; System call to 2FA
$5F4    $A43A   LD       I, $43A         ; Load 43A into I
$5F6    $B058   JP       V0, $058        ; Jump to V0 + 058
$5F8    $A151   LD       I, $151         ; Load 151 into I
$5FA    $78CE   ADD      V8, #CE         ; Add 206 to V8
$5FC    $4622   SNE      V6, #22         ; Skip if V6 != 34
$5FE    $3A33   SE       VA, #33         ; Skip if VA == 51
$600    $78B3   ADD      V8, #B3         ; Add 179 to V8
$602    $22D3   CALL     $2D3            ; Call subroutine at 2D3
$604    $15D3   JP       $5D3            ; Jump to 5D3
$606    $93C9   UNKNOWN  $93C9           ; Unknown 9xxx instruction
$608    $D0CF   DRW      V0, VC, #F      ; Draw 15-byte sprite at V0, VC
$60A    $514C   UNKNOWN  $514C           ; Unknown 5xxx instruction
$60C    $712D   ADD      V1, #2D         ; Add 45 to V1
$60E    $4AFA   SNE      VA, #FA         ; Skip if VA != 250
$610    $8BA8   UNKNOWN  8BA8            ; Unknown 8xxx instruction
$612    $310C   SE       V1, #0C         ; Skip if V1 == 12
$614    $2FAE   CALL     $FAE            ; Call subroutine at FAE
$616    $B511   JP       V0, $511        ; Jump to V0 + 511
$618    $7465   ADD      V4, #65         ; Add 101 to V4
$61A    $019D   SYS      $19D            ; System call to 19D
$61C    $3F2B   SE       VF, #2B         ; Skip if VF == 43
$61E    $FB2C   UNKNOWN  FB2C            ; Unknown Fxxx instruction
$620    $71AE   ADD      V1, #AE         ; Add 174 to V1
$622    $2DA2   CALL     $DA2            ; Call subroutine at DA2
$624    $413A   SNE      V1, #3A         ; Skip if V1 != 58
$626    $C733   RND      V7, #33         ; V7 = random & 33
$628    $9A87   UNKNOWN  $9A87           ; Unknown 9xxx instruction
$62A    $9706   UNKNOWN  $9706           ; Unknown 9xxx instruction
$62C    $7B40   ADD      VB, #40         ; Add 64 to VB
$62E    $9483   UNKNOWN  $9483           ; Unknown 9xxx instruction
$630    $D4FF   DRW      V4, VF, #F      ; Draw 15-byte sprite at V4, VF
$632    $7B32   ADD      VB, #32         ; Add 50 to VB
$634    $D8D4   DRW      V8, VD, #4      ; Draw 4-byte sprite at V8, VD
$636    $E8F0   UNKNOWN  $E8F0           ; Unknown Exxx instruction
$638    $C31F   RND      V3, #1F         ; V3 = random & 1F
$63A    $46C0   SNE      V6, #C0         ; Skip if V6 != 192
$63C    $B9C4   JP       V0, $9C4        ; Jump to V0 + 9C4
$63E    $2B31   CALL     $B31            ; Call subroutine at B31
$640    $765A   ADD      V6, #5A         ; Add 90 to V6
$642    $49C8   SNE      V9, #C8         ; Skip if V9 != 200
$644    $A460   LD       I, $460         ; Load 460 into I
$646    $3194   SE       V1, #94         ; Skip if V1 == 148
$648    $0FA4   SYS      $FA4            ; System call to FA4
$64A    $6D70   LD       VD, #70         ; Load 112 into VD
$64C    $071C   SYS      $71C            ; System call to 71C
$64E    $AF15   LD       I, $F15         ; Load F15 into I
$650    $26AE   CALL     $6AE            ; Call subroutine at 6AE
$652    $DFD8   DRW      VF, VD, #8      ; Draw 8-byte sprite at VF, VD
$654    $3A64   SE       VA, #64         ; Skip if VA == 100
$656    $D010   DRW      V0, V1, #0      ; Draw 0-byte sprite at V0, V1
$658    $4F1D   SNE      VF, #1D         ; Skip if VF != 29
$65A    $8450   LD       V4, V5          ; V4 = V5
$65C    $528F   UNKNOWN  $528F           ; Unknown 5xxx instruction
$65E    $5058   UNKNOWN  $5058           ; Unknown 5xxx instruction
$660    $FB58   UNKNOWN  FB58            ; Unknown Fxxx instruction
$662    $2B99   CALL     $B99            ; Call subroutine at B99
$664    $00F8   SYS      $0F8            ; System call to 0F8
$666    $F0D2   UNKNOWN  F0D2            ; Unknown Fxxx instruction
$668    $4BEB   SNE      VB, #EB         ; Skip if VB != 235
$66A    $5E28   UNKNOWN  $5E28           ; Unknown 5xxx instruction
$66C    $C4C5   RND      V4, #C5         ; V4 = random & C5
$66E    $E6E2   UNKNOWN  $E6E2           ; Unknown Exxx instruction
$670    $5C70   SE       VC, V7          ; Skip if VC == V7
$672    $E46D   UNKNOWN  $E46D           ; Unknown Exxx instruction
$674    $DA9C   DRW      VA, V9, #C      ; Draw 12-byte sprite at VA, V9
$676    $73EE   ADD      V3, #EE         ; Add 238 to V3
$678    $E2BB   UNKNOWN  $E2BB           ; Unknown Exxx instruction
$67A    $28A5   CALL     $8A5            ; Call subroutine at 8A5
$67C    $5D4D   UNKNOWN  $5D4D           ; Unknown 5xxx instruction
$67E    $75F7   ADD      V5, #F7         ; Add 247 to V5
$680    $92FE   UNKNOWN  $92FE           ; Unknown 9xxx instruction
$682    $72C0   ADD      V2, #C0         ; Add 192 to V2
$684    $92C6   UNKNOWN  $92C6           ; Unknown 9xxx instruction
$686    $94C7   UNKNOWN  $94C7           ; Unknown 9xxx instruction
$688    $CA35   RND      VA, #35         ; VA = random & 35
$68A    $FD1A   UNKNOWN  FD1A            ; Unknown Fxxx instruction
$68C    $C459   RND      V4, #59         ; V4 = random & 59
$68E    $8348   UNKNOWN  8348            ; Unknown 8xxx instruction
$690    $B292   JP       V0, $292        ; Jump to V0 + 292
$692    $801B   UNKNOWN  801B            ; Unknown 8xxx instruction
$694    $1475   JP       $475            ; Jump to 475
$696    $A60F   LD       I, $60F         ; Load 60F into I
$698    $D9BC   DRW      V9, VB, #C      ; Draw 12-byte sprite at V9, VB
$69A    $1E9E   JP       $E9E            ; Jump to E9E
$69C    $51A9   UNKNOWN  $51A9           ; Unknown 5xxx instruction
$69E    $4900   SNE      V9, #00         ; Skip if V9 != 0
$6A0    $BBC4   JP       V0, $BC4        ; Jump to V0 + BC4
$6A2    $AD84   LD       I, $D84         ; Load D84 into I
$6A4    $6903   LD       V9, #03         ; Load 3 into V9
$6A6    $F3A8   UNKNOWN  F3A8            ; Unknown Fxxx instruction
$6A8    $37A5   SE       V7, #A5         ; Skip if V7 == 165
$6AA    $E580   UNKNOWN  $E580           ; Unknown Exxx instruction
$6AC    $721C   ADD      V2, #1C         ; Add 28 to V2
$6AE    $D6F9   DRW      V6, VF, #9      ; Draw 9-byte sprite at V6, VF
$6B0    $4C86   SNE      VC, #86         ; Skip if VC != 134
$6B2    $6870   LD       V8, #70         ; Load 112 into V8
$6B4    $FE63   UNKNOWN  FE63            ; Unknown Fxxx instruction
$6B6    $B357   JP       V0, $357        ; Jump to V0 + 357
$6B8    $80D4   ADD      V0, VD          ; V0 += VD, VF = carry
$6BA    $19BE   JP       $9BE            ; Jump to 9BE
$6BC    $C789   RND      V7, #89         ; V7 = random & 89
$6BE    $C4EB   RND      V4, #EB         ; V4 = random & EB
$6C0    $995B   UNKNOWN  $995B           ; Unknown 9xxx instruction
$6C2    $237D   CALL     $37D            ; Call subroutine at 37D
$6C4    $82CD   UNKNOWN  82CD            ; Unknown 8xxx instruction
$6C6    $1BA4   JP       $BA4            ; Jump to BA4
$6C8    $884F   UNKNOWN  884F            ; Unknown 8xxx instruction
$6CA    $E46B   UNKNOWN  $E46B           ; Unknown Exxx instruction
$6CC    $F2FA   UNKNOWN  F2FA            ; Unknown Fxxx instruction
$6CE    $3258   SE       V2, #58         ; Skip if V2 == 88
$6D0    $295E   CALL     $95E            ; Call subroutine at 95E
$6D2    $3685   SE       V6, #85         ; Skip if V6 == 133
$6D4    $475B   SNE      V7, #5B         ; Skip if V7 != 91
$6D6    $BC7F   JP       V0, $C7F        ; Jump to V0 + C7F
$6D8    $EA44   UNKNOWN  $EA44           ; Unknown Exxx instruction
$6DA    $60AB   LD       V0, #AB         ; Load 171 into V0
$6DC    $96C6   UNKNOWN  $96C6           ; Unknown 9xxx instruction
$6DE    $435D   SNE      V3, #5D         ; Skip if V3 != 93
$6E0    $714C   ADD      V1, #4C         ; Add 76 to V1
$6E2    $BB21   JP       V0, $B21        ; Jump to V0 + B21
$6E4    $771F   ADD      V7, #1F         ; Add 31 to V7
$6E6    $1665   JP       $665            ; Jump to 665
$6E8    $F4AB   UNKNOWN  F4AB            ; Unknown Fxxx instruction
$6EA    $5B7E   UNKNOWN  $5B7E           ; Unknown 5xxx instruction
$6EC    $7246   ADD      V2, #46         ; Add 70 to V2
$6EE    $0229   SYS      $229            ; System call to 229
$6F0    $3DF8   SE       VD, #F8         ; Skip if VD == 248
$6F2    $B438   JP       V0, $438        ; Jump to V0 + 438
$6F4    $2B0F   CALL     $B0F            ; Call subroutine at B0F
$6F6    $47E9   SNE      V7, #E9         ; Skip if V7 != 233
$6F8    $47F4   SNE      V7, #F4         ; Skip if V7 != 244
$6FA    $8617   SUBN     V6, V1          ; V6 = V1 - V6, VF = !borrow
$6FC    $854D   UNKNOWN  854D            ; Unknown 8xxx instruction
$6FE    $F3D9   UNKNOWN  F3D9            ; Unknown Fxxx instruction
$700    $885A   UNKNOWN  885A            ; Unknown 8xxx instruction
$702    $F7ED   UNKNOWN  F7ED            ; Unknown Fxxx instruction
$704    $7A42   ADD      VA, #42         ; Add 66 to VA
$706    $8098   UNKNOWN  8098            ; Unknown 8xxx instruction
$708    $4C46   SNE      VC, #46         ; Skip if VC != 70
$70A    $9153   UNKNOWN  $9153           ; Unknown 9xxx instruction
$70C    $8D70   LD       VD, V7          ; VD = V7
$70E    $F088   UNKNOWN  F088            ; Unknown Fxxx instruction
$710    $7335   ADD      V3, #35         ; Add 53 to V3
$712    $B439   JP       V0, $439        ; Jump to V0 + 439
$714    $4A2D   SNE      VA, #2D         ; Skip if VA != 45
$716    $4047   SNE      V0, #47         ; Skip if V0 != 71
$718    $F4BE   UNKNOWN  F4BE            ; Unknown Fxxx instruction
$71A    $B8DE   JP       V0, $8DE        ; Jump to V0 + 8DE
$71C    $FB0E   UNKNOWN  FB0E            ; Unknown Fxxx instruction
$71E    $0D37   SYS      $D37            ; System call to D37
$720    $EC2A   UNKNOWN  $EC2A           ; Unknown Exxx instruction
$722    $ED9C   UNKNOWN  $ED9C           ; Unknown Exxx instruction
$724    $9988   UNKNOWN  $9988           ; Unknown 9xxx instruction
$726    $8FE8   UNKNOWN  8FE8            ; Unknown 8xxx instruction
$728    $B572   JP       V0, $572        ; Jump to V0 + 572
$72A    $8F62   AND      VF, V6          ; VF &= V6
$72C    $A876   LD       I, $876         ; Load 876 into I
$72E    $B8AC   JP       V0, $8AC        ; Jump to V0 + 8AC
$730    $72E0   ADD      V2, #E0         ; Add 224 to V2
$732    $CF01   RND      VF, #01         ; VF = random & 01
$734    $BE58   JP       V0, $E58        ; Jump to V0 + E58
$736    $B212   JP       V0, $212        ; Jump to V0 + 212
$738    $D8E2   DRW      V8, VE, #2      ; Draw 2-byte sprite at V8, VE
$73A    $95A7   UNKNOWN  $95A7           ; Unknown 9xxx instruction
$73C    $0C5C   SYS      $C5C            ; System call to C5C
$73E    $4C43   SNE      VC, #43         ; Skip if VC != 67
$740    $B5C3   JP       V0, $5C3        ; Jump to V0 + 5C3
$742    $3C04   SE       VC, #04         ; Skip if VC == 4
$744    $0B55   SYS      $B55            ; System call to B55
$746    $77A3   ADD      V7, #A3         ; Add 163 to V7
$748    $C336   RND      V3, #36         ; V3 = random & 36
$74A    $EDD0   UNKNOWN  $EDD0           ; Unknown Exxx instruction
$74C    $2089   CALL     $089            ; Call subroutine at 089
$74E    $CDED   RND      VD, #ED         ; VD = random & ED
$750    $D512   DRW      V5, V1, #2      ; Draw 2-byte sprite at V5, V1
$752    $E60A   UNKNOWN  $E60A           ; Unknown Exxx instruction
$754    $9DEC   UNKNOWN  $9DEC           ; Unknown 9xxx instruction
$756    $51F3   UNKNOWN  $51F3           ; Unknown 5xxx instruction
$758    $7E51   ADD      VE, #51         ; Add 81 to VE
$75A    $B8D8   JP       V0, $8D8        ; Jump to V0 + 8D8
$75C    $BD15   JP       V0, $D15        ; Jump to V0 + D15
$75E    $C43F   RND      V4, #3F         ; V4 = random & 3F
$760    $C55D   RND      V5, #5D         ; V5 = random & 5D
$762    $EA91   UNKNOWN  $EA91           ; Unknown Exxx instruction
$764    $E1ED   UNKNOWN  $E1ED           ; Unknown Exxx instruction
$766    $CB8D   RND      VB, #8D         ; VB = random & 8D
$768    $E14F   UNKNOWN  $E14F           ; Unknown Exxx instruction
$76A    $B449   JP       V0, $449        ; Jump to V0 + 449
$76C    $2742   CALL     $742            ; Call subroutine at 742
$76E    $E169   UNKNOWN  $E169           ; Unknown Exxx instruction
$770    $33F9   SE       V3, #F9         ; Skip if V3 == 249
$772    $36C6   SE       V6, #C6         ; Skip if V6 == 198
$774    $FE6A   UNKNOWN  FE6A            ; Unknown Fxxx instruction
$776    $371E   SE       V7, #1E         ; Skip if V7 == 30
$778    $809A   UNKNOWN  809A            ; Unknown 8xxx instruction
$77A    $AD8E   LD       I, $D8E         ; Load D8E into I
$77C    $B6B1   JP       V0, $6B1        ; Jump to V0 + 6B1
$77E    $6E1B   LD       VE, #1B         ; Load 27 into VE
$780    $DFF5   DRW      VF, VF, #5      ; Draw 5-byte sprite at VF, VF
$782    $727D   ADD      V2, #7D         ; Add 125 to V2
$784    $6EA9   LD       VE, #A9         ; Load 169 into VE
$786    $5784   UNKNOWN  $5784           ; Unknown 5xxx instruction
$788    $C166   RND      V1, #66         ; V1 = random & 66
$78A    $8F06   SHR      VF              ; VF >>= 1, VF = LSB
$78C    $C021   RND      V0, #21         ; V0 = random & 21
$78E    $6632   LD       V6, #32         ; Load 50 into V6
$790    $6D52   LD       VD, #52         ; Load 82 into VD
$792    $8672   AND      V6, V7          ; V6 &= V7
$794    $740A   ADD      V4, #0A         ; Add 10 to V4
$796    $8E84   ADD      VE, V8          ; VE += V8, VF = carry
$798    $7322   ADD      V3, #22         ; Add 34 to V3
$79A    $8EF9   UNKNOWN  8EF9            ; Unknown 8xxx instruction
$79C    $8CB1   OR       VC, VB          ; VC |= VB
$79E    $5E15   UNKNOWN  $5E15           ; Unknown 5xxx instruction
$7A0    $AD85   LD       I, $D85         ; Load D85 into I
$7A2    $5637   UNKNOWN  $5637           ; Unknown 5xxx instruction
$7A4    $FF4B   UNKNOWN  FF4B            ; Unknown Fxxx instruction
$7A6    $A10B   LD       I, $10B         ; Load 10B into I
$7A8    $FDA3   UNKNOWN  FDA3            ; Unknown Fxxx instruction
$7AA    $2A25   CALL     $A25            ; Call subroutine at A25
$7AC    $73F5   ADD      V3, #F5         ; Add 245 to V3
$7AE    $8395   SUB      V3, V9          ; V3 -= V9, VF = !borrow
$7B0    $8C40   LD       VC, V4          ; VC = V4
$7B2    $19C7   JP       $9C7            ; Jump to 9C7
$7B4    $A502   LD       I, $502         ; Load 502 into I
$7B6    $5C6B   UNKNOWN  $5C6B           ; Unknown 5xxx instruction
$7B8    $3DA2   SE       VD, #A2         ; Skip if VD == 162
$7BA    $5426   UNKNOWN  $5426           ; Unknown 5xxx instruction
$7BC    $0041   SYS      $041            ; System call to 041
$7BE    $57EC   UNKNOWN  $57EC           ; Unknown 5xxx instruction
$7C0    $2DE2   CALL     $DE2            ; Call subroutine at DE2
$7C2    $D44D   DRW      V4, V4, #D      ; Draw 13-byte sprite at V4, V4
$7C4    $4FDD   SNE      VF, #DD         ; Skip if VF != 221
$7C6    $0743   SYS      $743            ; System call to 743
$7C8    $3962   SE       V9, #62         ; Skip if V9 == 98
$7CA    $E049   UNKNOWN  $E049           ; Unknown Exxx instruction
$7CC    $0AA7   SYS      $AA7            ; System call to AA7
$7CE    $B5D4   JP       V0, $5D4        ; Jump to V0 + 5D4
$7D0    $9B65   UNKNOWN  $9B65           ; Unknown 9xxx instruction
$7D2    $9923   UNKNOWN  $9923           ; Unknown 9xxx instruction
$7D4    $E216   UNKNOWN  $E216           ; Unknown Exxx instruction
$7D6    $275E   CALL     $75E            ; Call subroutine at 75E
$7D8    $7936   ADD      V9, #36         ; Add 54 to V9
$7DA    $BF8D   JP       V0, $F8D        ; Jump to V0 + F8D
$7DC    $3CB4   SE       VC, #B4         ; Skip if VC == 180
$7DE    $EBD4   UNKNOWN  $EBD4           ; Unknown Exxx instruction
$7E0    $8B17   SUBN     VB, V1          ; VB = V1 - VB, VF = !borrow
$7E2    $BC09   JP       V0, $C09        ; Jump to V0 + C09
$7E4    $6F64   LD       VF, #64         ; Load 100 into VF
$7E6    $2AA9   CALL     $AA9            ; Call subroutine at AA9
$7E8    $6BDF   LD       VB, #DF         ; Load 223 into VB
$7EA    $08E2   SYS      $8E2            ; System call to 8E2
$7EC    $AEBA   LD       I, $EBA         ; Load EBA into I
$7EE    $EC18   UNKNOWN  $EC18           ; Unknown Exxx instruction
$7F0    $916B   UNKNOWN  $916B           ; Unknown 9xxx instruction
$7F2    $A6BE   LD       I, $6BE         ; Load 6BE into I
$7F4    $7175   ADD      V1, #75         ; Add 117 to V1
$7F6    $030D   SYS      $30D            ; System call to 30D
$7F8    $23E4   CALL     $3E4            ; Call subroutine at 3E4
$7FA    $F31C   UNKNOWN  F31C            ; Unknown Fxxx instruction
$7FC    $521A   UNKNOWN  $521A           ; Unknown 5xxx instruction
$7FE    $948C   UNKNOWN  $948C           ; Unknown 9xxx instruction
$800    $8862   AND      V8, V6          ; V8 &= V6
$802    $568F   UNKNOWN  $568F           ; Unknown 5xxx instruction
$804    $C135   RND      V1, #35         ; V1 = random & 35
$806    $81A8   UNKNOWN  81A8            ; Unknown 8xxx instruction
$808    $AB88   LD       I, $B88         ; Load B88 into I
$80A    $857C   UNKNOWN  857C            ; Unknown 8xxx instruction
$80C    $745A   ADD      V4, #5A         ; Add 90 to V4
$80E    $F1A4   UNKNOWN  F1A4            ; Unknown Fxxx instruction
$810    $BE51   JP       V0, $E51        ; Jump to V0 + E51
$812    $68B7   LD       V8, #B7         ; Load 183 into V8
$814    $CC49   RND      VC, #49         ; VC = random & 49
$816    $3B92   SE       VB, #92         ; Skip if VB == 146
$818    $8FF1   OR       VF, VF          ; VF |= VF
$81A    $BB3D   JP       V0, $B3D        ; Jump to V0 + B3D
$81C    $3282   SE       V2, #82         ; Skip if V2 == 130
$81E    $61F1   LD       V1, #F1         ; Load 241 into V1
$820    $5F9A   UNKNOWN  $5F9A           ; Unknown 5xxx instruction
$822    $7816   ADD      V8, #16         ; Add 22 to V8
$824    $1C70   JP       $C70            ; Jump to C70
$826    $8F7C   UNKNOWN  8F7C            ; Unknown 8xxx instruction
$828    $C257   RND      V2, #57         ; V2 = random & 57
$82A    $52B8   UNKNOWN  $52B8           ; Unknown 5xxx instruction
$82C    $1DE1   JP       $DE1            ; Jump to DE1
$82E    $5BB1   UNKNOWN  $5BB1           ; Unknown 5xxx instruction
$830    $4DA2   SNE      VD, #A2         ; Skip if VD != 162
$832    $E6D8   UNKNOWN  $E6D8           ; Unknown Exxx instruction
$834    $429F   SNE      V2, #9F         ; Skip if V2 != 159
$836    $68D9   LD       V8, #D9         ; Load 217 into V8
$838    $BACC   JP       V0, $ACC        ; Jump to V0 + ACC
$83A    $7C7F   ADD      VC, #7F         ; Add 127 to VC
$83C    $2CEA   CALL     $CEA            ; Call subroutine at CEA
$83E    $706A   ADD      V0, #6A         ; Add 106 to V0
$840    $8267   SUBN     V2, V6          ; V2 = V6 - V2, VF = !borrow
$842    $2391   CALL     $391            ; Call subroutine at 391
$844    $98E9   UNKNOWN  $98E9           ; Unknown 9xxx instruction
$846    $2A85   CALL     $A85            ; Call subroutine at A85
$848    $F9D0   UNKNOWN  F9D0            ; Unknown Fxxx instruction
$84A    $428F   SNE      V2, #8F         ; Skip if V2 != 143
$84C    $974C   UNKNOWN  $974C           ; Unknown 9xxx instruction
$84E    $7CD4   ADD      VC, #D4         ; Add 212 to VC
$850    $4C8E   SNE      VC, #8E         ; Skip if VC != 142
$852    $1320   JP       $320            ; Jump to 320
$854    $6D21   LD       VD, #21         ; Load 33 into VD
$856    $C506   RND      V5, #06         ; V5 = random & 06
$858    $5177   UNKNOWN  $5177           ; Unknown 5xxx instruction
$85A    $1CB8   JP       $CB8            ; Jump to CB8
$85C    $5C96   UNKNOWN  $5C96           ; Unknown 5xxx instruction
$85E    $862E   SHL      V6              ; V6 <<= 1, VF = MSB
$860    $73C2   ADD      V3, #C2         ; Add 194 to V3
$862    $8FF0   LD       VF, VF          ; VF = VF
$864    $3997   SE       V9, #97         ; Skip if V9 == 151
$866    $4309   SNE      V3, #09         ; Skip if V3 != 9
$868    $077A   SYS      $77A            ; System call to 77A
$86A    $89E1   OR       V9, VE          ; V9 |= VE
$86C    $2ABE   CALL     $ABE            ; Call subroutine at ABE
$86E    $EF3B   UNKNOWN  $EF3B           ; Unknown Exxx instruction
$870    $E1EE   UNKNOWN  $E1EE           ; Unknown Exxx instruction
$872    $08FC   SYS      $8FC            ; System call to 8FC
$874    $8BD7   SUBN     VB, VD          ; VB = VD - VB, VF = !borrow
$876    $40C2   SNE      V0, #C2         ; Skip if V0 != 194
$878    $AB52   LD       I, $B52         ; Load B52 into I
$87A    $A845   LD       I, $845         ; Load 845 into I
$87C    $B31C   JP       V0, $31C        ; Jump to V0 + 31C
$87E    $2FA5   CALL     $FA5            ; Call subroutine at FA5
$880    $3180   SE       V1, #80         ; Skip if V1 == 128
$882    $4849   SNE      V8, #49         ; Skip if V8 != 73
$884    $0075   SYS      $075            ; System call to 075
$886    $0DD1   SYS      $DD1            ; System call to DD1
$888    $8B3C   UNKNOWN  8B3C            ; Unknown 8xxx instruction
$88A    $C159   RND      V1, #59         ; V1 = random & 59
$88C    $BFE0   JP       V0, $FE0        ; Jump to V0 + FE0
$88E    $B510   JP       V0, $510        ; Jump to V0 + 510
$890    $F417   UNKNOWN  F417            ; Unknown Fxxx instruction
$892    $C295   RND      V2, #95         ; V2 = random & 95
$894    $0FB3   SYS      $FB3            ; System call to FB3
$896    $6906   LD       V9, #06         ; Load 6 into V9
$898    $5F45   UNKNOWN  $5F45           ; Unknown 5xxx instruction
$89A    $0B1B   SYS      $B1B            ; System call to B1B
$89C    $DD17   DRW      VD, V1, #7      ; Draw 7-byte sprite at VD, V1
$89E    $BBCD   JP       V0, $BCD        ; Jump to V0 + BCD
$8A0    $3844   SE       V8, #44         ; Skip if V8 == 68
$8A2    $309F   SE       V0, #9F         ; Skip if V0 == 159
$8A4    $F608   UNKNOWN  F608            ; Unknown Fxxx instruction
$8A6    $14E2   JP       $4E2            ; Jump to 4E2
$8A8    $54AC   UNKNOWN  $54AC           ; Unknown 5xxx instruction
$8AA    $CEAA   RND      VE, #AA         ; VE = random & AA
$8AC    $FF69   UNKNOWN  FF69            ; Unknown Fxxx instruction
$8AE    $9811   UNKNOWN  $9811           ; Unknown 9xxx instruction
$8B0    $5356   UNKNOWN  $5356           ; Unknown 5xxx instruction
$8B2    $E55B   UNKNOWN  $E55B           ; Unknown Exxx instruction
$8B4    $3B5F   SE       VB, #5F         ; Skip if VB == 95
$8B6    $4D76   SNE      VD, #76         ; Skip if VD != 118
$8B8    $5FF7   UNKNOWN  $5FF7           ; Unknown 5xxx instruction
$8BA    $6792   LD       V7, #92         ; Load 146 into V7
$8BC    $FB1D   UNKNOWN  FB1D            ; Unknown Fxxx instruction
$8BE    $7993   ADD      V9, #93         ; Add 147 to V9
$8C0    $C0DA   RND      V0, #DA         ; V0 = random & DA
$8C2    $E55E   UNKNOWN  $E55E           ; Unknown Exxx instruction
$8C4    $7F6E   ADD      VF, #6E         ; Add 110 to VF
$8C6    $EDD5   UNKNOWN  $EDD5           ; Unknown Exxx instruction
$8C8    $1DEC   JP       $DEC            ; Jump to DEC
$8CA    $6696   LD       V6, #96         ; Load 150 into V6
$8CC    $B48F   JP       V0, $48F        ; Jump to V0 + 48F
$8CE    $3406   SE       V4, #06         ; Skip if V4 == 6
$8D0    $CFC9   RND      VF, #C9         ; VF = random & C9
$8D2    $7688   ADD      V6, #88         ; Add 136 to V6
$8D4    $B2EA   JP       V0, $2EA        ; Jump to V0 + 2EA
$8D6    $DCFD   DRW      VC, VF, #D      ; Draw 13-byte sprite at VC, VF
$8D8    $350A   SE       V5, #0A         ; Skip if V5 == 10
$8DA    $2644   CALL     $644            ; Call subroutine at 644
$8DC    $9581   UNKNOWN  $9581           ; Unknown 9xxx instruction
$8DE    $40F6   SNE      V0, #F6         ; Skip if V0 != 246
$8E0    $3E67   SE       VE, #67         ; Skip if VE == 103
$8E2    $80EF   UNKNOWN  80EF            ; Unknown 8xxx instruction
$8E4    $CA15   RND      VA, #15         ; VA = random & 15
$8E6    $30A6   SE       V0, #A6         ; Skip if V0 == 166
$8E8    $2C10   CALL     $C10            ; Call subroutine at C10
$8EA    $662B   LD       V6, #2B         ; Load 43 into V6
$8EC    $7894   ADD      V8, #94         ; Add 148 to V8
$8EE    $700F   ADD      V0, #0F         ; Add 15 to V0
$8F0    $FE69   UNKNOWN  FE69            ; Unknown Fxxx instruction
$8F2    $2323   CALL     $323            ; Call subroutine at 323
$8F4    $B69A   JP       V0, $69A        ; Jump to V0 + 69A
$8F6    $BE8E   JP       V0, $E8E        ; Jump to V0 + E8E
$8F8    $4027   SNE      V0, #27         ; Skip if V0 != 39
$8FA    $E4E8   UNKNOWN  $E4E8           ; Unknown Exxx instruction
$8FC    $265B   CALL     $65B            ; Call subroutine at 65B
$8FE    $C1C7   RND      V1, #C7         ; V1 = random & C7
$900    $EAEC   UNKNOWN  $EAEC           ; Unknown Exxx instruction
$902    $0E71   SYS      $E71            ; System call to E71
$904    $307E   SE       V0, #7E         ; Skip if V0 == 126
$906    $DA4E   DRW      VA, V4, #E      ; Draw 14-byte sprite at VA, V4
$908    $76DB   ADD      V6, #DB         ; Add 219 to V6
$90A    $D3CD   DRW      V3, VC, #D      ; Draw 13-byte sprite at V3, VC
$90C    $544D   UNKNOWN  $544D           ; Unknown 5xxx instruction
$90E    $6879   LD       V8, #79         ; Load 121 into V8
$910    $A324   LD       I, $324         ; Load 324 into I
$912    $7BBF   ADD      VB, #BF         ; Add 191 to VB
$914    $E064   UNKNOWN  $E064           ; Unknown Exxx instruction
$916    $AD81   LD       I, $D81         ; Load D81 into I
$918    $8420   LD       V4, V2          ; V4 = V2
$91A    $7874   ADD      V8, #74         ; Add 116 to V8
$91C    $49CD   SNE      V9, #CD         ; Skip if V9 != 205
$91E    $C4EB   RND      V4, #EB         ; V4 = random & EB
$920    $8FA4   ADD      VF, VA          ; VF += VA, VF = carry
$922    $0D3E   SYS      $D3E            ; System call to D3E
$924    $6D33   LD       VD, #33         ; Load 51 into VD
$926    $C986   RND      V9, #86         ; V9 = random & 86
$928    $66E1   LD       V6, #E1         ; Load 225 into V6
$92A    $AA3C   LD       I, $A3C         ; Load A3C into I
$92C    $F112   UNKNOWN  F112            ; Unknown Fxxx instruction
$92E    $9D37   UNKNOWN  $9D37           ; Unknown 9xxx instruction
$930    $CFE0   RND      VF, #E0         ; VF = random & E0
$932    $BCA8   JP       V0, $CA8        ; Jump to V0 + CA8
$934    $B191   JP       V0, $191        ; Jump to V0 + 191
$936    $7052   ADD      V0, #52         ; Add 82 to V0
$938    $AA4C   LD       I, $A4C         ; Load A4C into I
$93A    $2AEA   CALL     $AEA            ; Call subroutine at AEA
$93C    $8FE6   SHR      VF              ; VF >>= 1, VF = LSB
$93E    $2B75   CALL     $B75            ; Call subroutine at B75
$940    $DD0E   DRW      VD, V0, #E      ; Draw 14-byte sprite at VD, V0
$942    $F543   UNKNOWN  F543            ; Unknown Fxxx instruction
$944    $AC3A   LD       I, $C3A         ; Load C3A into I
$946    $9C97   UNKNOWN  $9C97           ; Unknown 9xxx instruction
$948    $A83B   LD       I, $83B         ; Load 83B into I
$94A    $3C28   SE       VC, #28         ; Skip if VC == 40
$94C    $6CF2   LD       VC, #F2         ; Load 242 into VC
$94E    $3010   SE       V0, #10         ; Skip if V0 == 16
$950    $D0B8   DRW      V0, VB, #8      ; Draw 8-byte sprite at V0, VB
$952    $5507   UNKNOWN  $5507           ; Unknown 5xxx instruction
$954    $3C2D   SE       VC, #2D         ; Skip if VC == 45
$956    $70C7   ADD      V0, #C7         ; Add 199 to V0
$958    $EDA7   UNKNOWN  $EDA7           ; Unknown Exxx instruction
$95A    $2F51   CALL     $F51            ; Call subroutine at F51
$95C    $4E16   SNE      VE, #16         ; Skip if VE != 22
$95E    $265F   CALL     $65F            ; Call subroutine at 65F
$960    $D4C2   DRW      V4, VC, #2      ; Draw 2-byte sprite at V4, VC
$962    $AA9B   LD       I, $A9B         ; Load A9B into I
$964    $BD01   JP       V0, $D01        ; Jump to V0 + D01
$966    $C078   RND      V0, #78         ; V0 = random & 78
$968    $EB62   UNKNOWN  $EB62           ; Unknown Exxx instruction
$96A    $3683   SE       V6, #83         ; Skip if V6 == 131
$96C    $95D7   UNKNOWN  $95D7           ; Unknown 9xxx instruction
$96E    $184C   JP       $84C            ; Jump to 84C
$970    $8511   OR       V5, V1          ; V5 |= V1
$972    $B1F4   JP       V0, $1F4        ; Jump to V0 + 1F4
$974    $D3FE   DRW      V3, VF, #E      ; Draw 14-byte sprite at V3, VF
$976    $6AB6   LD       VA, #B6         ; Load 182 into VA
$978    $34E2   SE       V4, #E2         ; Skip if V4 == 226
$97A    $6E5C   LD       VE, #5C         ; Load 92 into VE
$97C    $36CC   SE       V6, #CC         ; Skip if V6 == 204
$97E    $2E6F   CALL     $E6F            ; Call subroutine at E6F
$980    $CD1C   RND      VD, #1C         ; VD = random & 1C
$982    $F8DB   UNKNOWN  F8DB            ; Unknown Fxxx instruction
$984    $2FDA   CALL     $FDA            ; Call subroutine at FDA
$986    $D196   DRW      V1, V9, #6      ; Draw 6-byte sprite at V1, V9
$988    $AFDB   LD       I, $FDB         ; Load FDB into I
$98A    $B67E   JP       V0, $67E        ; Jump to V0 + 67E
$98C    $6468   LD       V4, #68         ; Load 104 into V4
$98E    $1DF3   JP       $DF3            ; Jump to DF3
$990    $B620   JP       V0, $620        ; Jump to V0 + 620
$992    $28DC   CALL     $8DC            ; Call subroutine at 8DC
$994    $D66F   DRW      V6, V6, #F      ; Draw 15-byte sprite at V6, V6
$996    $F785   UNKNOWN  F785            ; Unknown Fxxx instruction
$998    $90E4   UNKNOWN  $90E4           ; Unknown 9xxx instruction
$99A    $2DF1   CALL     $DF1            ; Call subroutine at DF1
$99C    $0839   SYS      $839            ; System call to 839
$99E    $565C   UNKNOWN  $565C           ; Unknown 5xxx instruction
$9A0    $6D4D   LD       VD, #4D         ; Load 77 into VD
$9A2    $AEA9   LD       I, $EA9         ; Load EA9 into I
$9A4    $F7A7   UNKNOWN  F7A7            ; Unknown Fxxx instruction
$9A6    $6CD4   LD       VC, #D4         ; Load 212 into VC
$9A8    $7130   ADD      V1, #30         ; Add 48 to V1
$9AA    $FBC4   UNKNOWN  FBC4            ; Unknown Fxxx instruction
$9AC    $D33F   DRW      V3, V3, #F      ; Draw 15-byte sprite at V3, V3
$9AE    $9FB4   UNKNOWN  $9FB4           ; Unknown 9xxx instruction
$9B0    $FFAB   UNKNOWN  FFAB            ; Unknown Fxxx instruction
$9B2    $6944   LD       V9, #44         ; Load 68 into V9
$9B4    $567E   UNKNOWN  $567E           ; Unknown 5xxx instruction
$9B6    $766D   ADD      V6, #6D         ; Add 109 to V6
$9B8    $DFED   DRW      VF, VE, #D      ; Draw 13-byte sprite at VF, VE
$9BA    $9045   UNKNOWN  $9045           ; Unknown 9xxx instruction
$9BC    $A15B   LD       I, $15B         ; Load 15B into I
$9BE    $B3A0   JP       V0, $3A0        ; Jump to V0 + 3A0
$9C0    $6A23   LD       VA, #23         ; Load 35 into VA
$9C2    $0A82   SYS      $A82            ; System call to A82
$9C4    $A3CE   LD       I, $3CE         ; Load 3CE into I
$9C6    $9C98   UNKNOWN  $9C98           ; Unknown 9xxx instruction
$9C8    $AD2F   LD       I, $D2F         ; Load D2F into I
$9CA    $97BC   UNKNOWN  $97BC           ; Unknown 9xxx instruction
$9CC    $0CA0   SYS      $CA0            ; System call to CA0
$9CE    $1E13   JP       $E13            ; Jump to E13
$9D0    $38D4   SE       V8, #D4         ; Skip if V8 == 212
$9D2    $43C8   SNE      V3, #C8         ; Skip if V3 != 200
$9D4    $D437   DRW      V4, V3, #7      ; Draw 7-byte sprite at V4, V3
$9D6    $F446   UNKNOWN  F446            ; Unknown Fxxx instruction
$9D8    $E7FA   UNKNOWN  $E7FA           ; Unknown Exxx instruction
$9DA    $27DA   CALL     $7DA            ; Call subroutine at 7DA
$9DC    $BB26   JP       V0, $B26        ; Jump to V0 + B26
$9DE    $7835   ADD      V8, #35         ; Add 53 to V8
$9E0    $451D   SNE      V5, #1D         ; Skip if V5 != 29
$9E2    $8E61   OR       VE, V6          ; VE |= V6
$9E4    $8AA4   ADD      VA, VA          ; VA += VA, VF = carry
$9E6    $EFF3   UNKNOWN  $EFF3           ; Unknown Exxx instruction
$9E8    $38F8   SE       V8, #F8         ; Skip if V8 == 248
$9EA    $142B   JP       $42B            ; Jump to 42B
$9EC    $F5E2   UNKNOWN  F5E2            ; Unknown Fxxx instruction
$9EE    $74F5   ADD      V4, #F5         ; Add 245 to V4
$9F0    $9CF0   SNE      VC, VF          ; Skip if VC != VF
$9F2    $867D   UNKNOWN  867D            ; Unknown 8xxx instruction
$9F4    $6142   LD       V1, #42         ; Load 66 into V1
$9F6    $4773   SNE      V7, #73         ; Skip if V7 != 115
$9F8    $B71B   JP       V0, $71B        ; Jump to V0 + 71B
$9FA    $1A96   JP       $A96            ; Jump to A96
$9FC    $E279   UNKNOWN  $E279           ; Unknown Exxx instruction
$9FE    $7CEF   ADD      VC, #EF         ; Add 239 to VC
$A00    $97BD   UNKNOWN  $97BD           ; Unknown 9xxx instruction
$A02    $2D90   CALL     $D90            ; Call subroutine at D90
$A04    $0263   SYS      $263            ; System call to 263
$A06    $663D   LD       V6, #3D         ; Load 61 into V6
$A08    $6102   LD       V1, #02         ; Load 2 into V1
$A0A    $DA6F   DRW      VA, V6, #F      ; Draw 15-byte sprite at VA, V6
$A0C    $6FAE   LD       VF, #AE         ; Load 174 into VF
$A0E    $38D7   SE       V8, #D7         ; Skip if V8 == 215
$A10    $54DE   UNKNOWN  $54DE           ; Unknown 5xxx instruction
$A12    $6B8A   LD       VB, #8A         ; Load 138 into VB
$A14    $B5DD   JP       V0, $5DD        ; Jump to V0 + 5DD
$A16    $2912   CALL     $912            ; Call subroutine at 912
$A18    $B81D   JP       V0, $81D        ; Jump to V0 + 81D
$A1A    $7F9A   ADD      VF, #9A         ; Add 154 to VF
$A1C    $6D09   LD       VD, #09         ; Load 9 into VD
$A1E    $C550   RND      V5, #50         ; V5 = random & 50
$A20    $6570   LD       V5, #70         ; Load 112 into V5
$A22    $E2F6   UNKNOWN  $E2F6           ; Unknown Exxx instruction
$A24    $1E69   JP       $E69            ; Jump to E69
$A26    $EC0E   UNKNOWN  $EC0E           ; Unknown Exxx instruction
$A28    $70FB   ADD      V0, #FB         ; Add 251 to V0
$A2A    $701D   ADD      V0, #1D         ; Add 29 to V0
$A2C    $2472   CALL     $472            ; Call subroutine at 472
$A2E    $6CE0   LD       VC, #E0         ; Load 224 into VC
$A30    $4F00   SNE      VF, #00         ; Skip if VF != 0
$A32    $FB07   LD       VB, DT          ; VB = delay timer
$A34    $F8B3   UNKNOWN  F8B3            ; Unknown Fxxx instruction
$A36    $98B5   UNKNOWN  $98B5           ; Unknown 9xxx instruction
$A38    $A52B   LD       I, $52B         ; Load 52B into I
$A3A    $39F8   SE       V9, #F8         ; Skip if V9 == 248
$A3C    $4A14   SNE      VA, #14         ; Skip if VA != 20
$A3E    $65AC   LD       V5, #AC         ; Load 172 into V5
$A40    $9DF7   UNKNOWN  $9DF7           ; Unknown 9xxx instruction
$A42    $07B5   SYS      $7B5            ; System call to 7B5
$A44    $C1F4   RND      V1, #F4         ; V1 = random & F4
$A46    $03F0   SYS      $3F0            ; System call to 3F0
$A48    $4105   SNE      V1, #05         ; Skip if V1 != 5
$A4A    $7AF1   ADD      VA, #F1         ; Add 241 to VA
$A4C    $25E6   CALL     $5E6            ; Call subroutine at 5E6
$A4E    $174D   JP       $74D            ; Jump to 74D
$A50    $86C9   UNKNOWN  86C9            ; Unknown 8xxx instruction
$A52    $D835   DRW      V8, V3, #5      ; Draw 5-byte sprite at V8, V3
$A54    $3EC1   SE       VE, #C1         ; Skip if VE == 193
$A56    $58BC   UNKNOWN  $58BC           ; Unknown 5xxx instruction
$A58    $29E9   CALL     $9E9            ; Call subroutine at 9E9
$A5A    $03A0   SYS      $3A0            ; System call to 3A0
$A5C    $1E78   JP       $E78            ; Jump to E78
$A5E    $40C4   SNE      V0, #C4         ; Skip if V0 != 196
$A60    $C341   RND      V3, #41         ; V3 = random & 41
$A62    $BBA4   JP       V0, $BA4        ; Jump to V0 + BA4
$A64    $0673   SYS      $673            ; System call to 673
$A66    $A6A5   LD       I, $6A5         ; Load 6A5 into I
$A68    $1766   JP       $766            ; Jump to 766
$A6A    $7E41   ADD      VE, #41         ; Add 65 to VE
$A6C    $DEDD   DRW      VE, VD, #D      ; Draw 13-byte sprite at VE, VD
$A6E    $5055   UNKNOWN  $5055           ; Unknown 5xxx instruction
$A70    $542C   UNKNOWN  $542C           ; Unknown 5xxx instruction
$A72    $F9E6   UNKNOWN  F9E6            ; Unknown Fxxx instruction
$A74    $8616   SHR      V6              ; V6 >>= 1, VF = LSB
$A76    $5E37   UNKNOWN  $5E37           ; Unknown 5xxx instruction
$A78    $8F32   AND      VF, V3          ; VF &= V3
$A7A    $9A8D   UNKNOWN  $9A8D           ; Unknown 9xxx instruction
$A7C    $7F2F   ADD      VF, #2F         ; Add 47 to VF
$A7E    $60EA   LD       V0, #EA         ; Load 234 into V0
$A80    $E82A   UNKNOWN  $E82A           ; Unknown Exxx instruction
$A82    $FB33   LD       B, VB           ; Store BCD of VB at I, I+1, I+2
$A84    $7CEC   ADD      VC, #EC         ; Add 236 to VC
$A86    $A85B   LD       I, $85B         ; Load 85B into I
$A88    $AFE2   LD       I, $FE2         ; Load FE2 into I
$A8A    $1F92   JP       $F92            ; Jump to F92
$A8C    $1EF9   JP       $EF9            ; Jump to EF9
$A8E    $DC75   DRW      VC, V7, #5      ; Draw 5-byte sprite at VC, V7
$A90    $2776   CALL     $776            ; Call subroutine at 776
$A92    $2C8D   CALL     $C8D            ; Call subroutine at C8D
$A94    $8DEF   UNKNOWN  8DEF            ; Unknown 8xxx instruction
$A96    $3A1D   SE       VA, #1D         ; Skip if VA == 29
$A98    $E2A7   UNKNOWN  $E2A7           ; Unknown Exxx instruction
$A9A    $2701   CALL     $701            ; Call subroutine at 701
$A9C    $7247   ADD      V2, #47         ; Add 71 to V2
$A9E    $5009   UNKNOWN  $5009           ; Unknown 5xxx instruction
$AA0    $0BED   SYS      $BED            ; System call to BED
$AA2    $0EE4   SYS      $EE4            ; System call to EE4
$AA4    $A3CF   LD       I, $3CF         ; Load 3CF into I
$AA6    $E063   UNKNOWN  $E063           ; Unknown Exxx instruction
$AA8    $F92D   UNKNOWN  F92D            ; Unknown Fxxx instruction
$AAA    $861A   UNKNOWN  861A            ; Unknown 8xxx instruction
$AAC    $EEDE   UNKNOWN  $EEDE           ; Unknown Exxx instruction
$AAE    $B2B6   JP       V0, $2B6        ; Jump to V0 + 2B6
$AB0    $F427   UNKNOWN  F427            ; Unknown Fxxx instruction
$AB2    $3F1F   SE       VF, #1F         ; Skip if VF == 31
$AB4    $AE82   LD       I, $E82         ; Load E82 into I
$AB6    $1487   JP       $487            ; Jump to 487
$AB8    $3821   SE       V8, #21         ; Skip if V8 == 33
$ABA    $1AEC   JP       $AEC            ; Jump to AEC
$ABC    $1922   JP       $922            ; Jump to 922
$ABE    $C28B   RND      V2, #8B         ; V2 = random & 8B
$AC0    $9C40   SNE      VC, V4          ; Skip if VC != V4
$AC2    $97B9   UNKNOWN  $97B9           ; Unknown 9xxx instruction
$AC4    $2769   CALL     $769            ; Call subroutine at 769
$AC6    $C8D8   RND      V8, #D8         ; V8 = random & D8
$AC8    $85CA   UNKNOWN  85CA            ; Unknown 8xxx instruction
$ACA    $3362   SE       V3, #62         ; Skip if V3 == 98
$ACC    $2B20   CALL     $B20            ; Call subroutine at B20
$ACE    $AA76   LD       I, $A76         ; Load A76 into I
$AD0    $4C55   SNE      VC, #55         ; Skip if VC != 85
$AD2    $0AE0   SYS      $AE0            ; System call to AE0
$AD4    $30FB   SE       V0, #FB         ; Skip if V0 == 251
$AD6    $EA8B   UNKNOWN  $EA8B           ; Unknown Exxx instruction
$AD8    $78A9   ADD      V8, #A9         ; Add 169 to V8
$ADA    $0811   SYS      $811            ; System call to 811
$ADC    $7D5B   ADD      VD, #5B         ; Add 91 to VD
$ADE    $7B82   ADD      VB, #82         ; Add 130 to VB
$AE0    $8D1D   UNKNOWN  8D1D            ; Unknown 8xxx instruction
$AE2    $9D1B   UNKNOWN  $9D1B           ; Unknown 9xxx instruction
$AE4    $8C66   SHR      VC              ; VC >>= 1, VF = LSB
$AE6    $5195   UNKNOWN  $5195           ; Unknown 5xxx instruction
$AE8    $821A   UNKNOWN  821A            ; Unknown 8xxx instruction
$AEA    $483F   SNE      V8, #3F         ; Skip if V8 != 63
$AEC    $5496   UNKNOWN  $5496           ; Unknown 5xxx instruction
$AEE    $A5E0   LD       I, $5E0         ; Load 5E0 into I
$AF0    $8935   SUB      V9, V3          ; V9 -= V3, VF = !borrow
$AF2    $3038   SE       V0, #38         ; Skip if V0 == 56
$AF4    $DD8D   DRW      VD, V8, #D      ; Draw 13-byte sprite at VD, V8
$AF6    $DBA9   DRW      VB, VA, #9      ; Draw 9-byte sprite at VB, VA
$AF8    $AD80   LD       I, $D80         ; Load D80 into I
$AFA    $57BD   UNKNOWN  $57BD           ; Unknown 5xxx instruction
$AFC    $0EFC   SYS      $EFC            ; System call to EFC
$AFE    $5C18   UNKNOWN  $5C18           ; Unknown 5xxx instruction
$B00    $6DA7   LD       VD, #A7         ; Load 167 into VD
$B02    $9234   UNKNOWN  $9234           ; Unknown 9xxx instruction
$B04    $3780   SE       V7, #80         ; Skip if V7 == 128
$B06    $5190   SE       V1, V9          ; Skip if V1 == V9
$B08    $098E   SYS      $98E            ; System call to 98E
$B0A    $771A   ADD      V7, #1A         ; Add 26 to V7
$B0C    $BD3A   JP       V0, $D3A        ; Jump to V0 + D3A
$B0E    $6973   LD       V9, #73         ; Load 115 into V9
$B10    $1110   JP       $110            ; Jump to 110
$B12    $6709   LD       V7, #09         ; Load 9 into V7
$B14    $6090   LD       V0, #90         ; Load 144 into V0
$B16    $A516   LD       I, $516         ; Load 516 into I
$B18    $DD78   DRW      VD, V7, #8      ; Draw 8-byte sprite at VD, V7
$B1A    $8CD9   UNKNOWN  8CD9            ; Unknown 8xxx instruction
$B1C    $2BF9   CALL     $BF9            ; Call subroutine at BF9
$B1E    $3D2E   SE       VD, #2E         ; Skip if VD == 46
$B20    $7E69   ADD      VE, #69         ; Add 105 to VE
$B22    $CD9C   RND      VD, #9C         ; VD = random & 9C
$B24    $3E94   SE       VE, #94         ; Skip if VE == 148
$B26    $DB0B   DRW      VB, V0, #B      ; Draw 11-byte sprite at VB, V0
$B28    $FE3B   UNKNOWN  FE3B            ; Unknown Fxxx instruction
$B2A    $9A77   UNKNOWN  $9A77           ; Unknown 9xxx instruction
$B2C    $8AD0   LD       VA, VD          ; VA = VD
$B2E    $83A0   LD       V3, VA          ; V3 = VA
$B30    $C456   RND      V4, #56         ; V4 = random & 56
$B32    $2C09   CALL     $C09            ; Call subroutine at C09
$B34    $6429   LD       V4, #29         ; Load 41 into V4
$B36    $CBF6   RND      VB, #F6         ; VB = random & F6
$B38    $B2DC   JP       V0, $2DC        ; Jump to V0 + 2DC
$B3A    $C0B4   RND      V0, #B4         ; V0 = random & B4
$B3C    $177D   JP       $77D            ; Jump to 77D
$B3E    $8942   AND      V9, V4          ; V9 &= V4
$B40    $328A   SE       V2, #8A         ; Skip if V2 == 138
$B42    $6A75   LD       VA, #75         ; Load 117 into VA
$B44    $54AC   UNKNOWN  $54AC           ; Unknown 5xxx instruction
$B46    $B71F   JP       V0, $71F        ; Jump to V0 + 71F
$B48    $1FCE   JP       $FCE            ; Jump to FCE
$B4A    $7870   ADD      V8, #70         ; Add 112 to V8
$B4C    $F065   LD       V0, [I]         ; Load V0-V0 from I
$B4E    $0423   SYS      $423            ; System call to 423
$B50    $D699   DRW      V6, V9, #9      ; Draw 9-byte sprite at V6, V9
$B52    $A906   LD       I, $906         ; Load 906 into I
$B54    $9F6B   UNKNOWN  $9F6B           ; Unknown 9xxx instruction
$B56    $3837   SE       V8, #37         ; Skip if V8 == 55
$B58    $B8D0   JP       V0, $8D0        ; Jump to V0 + 8D0
$B5A    $C7EC   RND      V7, #EC         ; V7 = random & EC
$B5C    $317C   SE       V1, #7C         ; Skip if V1 == 124
$B5E    $9934   UNKNOWN  $9934           ; Unknown 9xxx instruction
$B60    $2A0B   CALL     $A0B            ; Call subroutine at A0B
$B62    $AE53   LD       I, $E53         ; Load E53 into I
$B64    $F60F   UNKNOWN  F60F            ; Unknown Fxxx instruction
$B66    $1FA5   JP       $FA5            ; Jump to FA5
$B68    $2BA3   CALL     $BA3            ; Call subroutine at BA3
$B6A    $93CB   UNKNOWN  $93CB           ; Unknown 9xxx instruction
$B6C    $37E2   SE       V7, #E2         ; Skip if V7 == 226
$B6E    $D007   DRW      V0, V0, #7      ; Draw 7-byte sprite at V0, V0
$B70    $FE57   UNKNOWN  FE57            ; Unknown Fxxx instruction
$B72    $5488   UNKNOWN  $5488           ; Unknown 5xxx instruction
$B74    $5376   UNKNOWN  $5376           ; Unknown 5xxx instruction
$B76    $71C5   ADD      V1, #C5         ; Add 197 to V1
$B78    $F9C5   UNKNOWN  F9C5            ; Unknown Fxxx instruction
$B7A    $64C2   LD       V4, #C2         ; Load 194 into V4
$B7C    $A8F3   LD       I, $8F3         ; Load 8F3 into I
$B7E    $C24F   RND      V2, #4F         ; V2 = random & 4F
$B80    $618B   LD       V1, #8B         ; Load 139 into V1
$B82    $9E19   UNKNOWN  $9E19           ; Unknown 9xxx instruction
$B84    $1DBA   JP       $DBA            ; Jump to DBA
$B86    $BB13   JP       V0, $B13        ; Jump to V0 + B13
$B88    $4160   SNE      V1, #60         ; Skip if V1 != 96
$B8A    $05E0   SYS      $5E0            ; System call to 5E0
$B8C    $86CF   UNKNOWN  86CF            ; Unknown 8xxx instruction
$B8E    $C5F6   RND      V5, #F6         ; V5 = random & F6
$B90    $3520   SE       V5, #20         ; Skip if V5 == 32
$B92    $B9B5   JP       V0, $9B5        ; Jump to V0 + 9B5
$B94    $044C   SYS      $44C            ; System call to 44C
$B96    $F83B   UNKNOWN  F83B            ; Unknown Fxxx instruction
$B98    $3E3A   SE       VE, #3A         ; Skip if VE == 58
$B9A    $BDDB   JP       V0, $DDB        ; Jump to V0 + DDB
$B9C    $D2D1   DRW      V2, VD, #1      ; Draw 1-byte sprite at V2, VD
$B9E    $ABAF   LD       I, $BAF         ; Load BAF into I
$BA0    $2F77   CALL     $F77            ; Call subroutine at F77
$BA2    $EA9E   SKP      VA              ; Skip if key VA pressed
$BA4    $C559   RND      V5, #59         ; V5 = random & 59
$BA6    $A13A   LD       I, $13A         ; Load 13A into I
$BA8    $863F   UNKNOWN  863F            ; Unknown 8xxx instruction
$BAA    $559A   UNKNOWN  $559A           ; Unknown 5xxx instruction
$BAC    $2649   CALL     $649            ; Call subroutine at 649
$BAE    $775C   ADD      V7, #5C         ; Add 92 to V7
$BB0    $ABB7   LD       I, $BB7         ; Load BB7 into I
$BB2    $5C5B   UNKNOWN  $5C5B           ; Unknown 5xxx instruction
$BB4    $E356   UNKNOWN  $E356           ; Unknown Exxx instruction
$BB6    $AA03   LD       I, $A03         ; Load A03 into I
$BB8    $3F95   SE       VF, #95         ; Skip if VF == 149
$BBA    $A030   LD       I, $030         ; Load 030 into I
$BBC    $7AE7   ADD      VA, #E7         ; Add 231 to VA
$BBE    $E0E1   UNKNOWN  $E0E1           ; Unknown Exxx instruction
$BC0    $8E47   SUBN     VE, V4          ; VE = V4 - VE, VF = !borrow
$BC2    $BAB5   JP       V0, $AB5        ; Jump to V0 + AB5
$BC4    $A128   LD       I, $128         ; Load 128 into I
$BC6    $CBD2   RND      VB, #D2         ; VB = random & D2
$BC8    $9578   UNKNOWN  $9578           ; Unknown 9xxx instruction
$BCA    $0C7B   SYS      $C7B            ; System call to C7B
$BCC    $CB36   RND      VB, #36         ; VB = random & 36
$BCE    $8861   OR       V8, V6          ; V8 |= V6
$BD0    $E92E   UNKNOWN  $E92E           ; Unknown Exxx instruction
$BD2    $7F17   ADD      VF, #17         ; Add 23 to VF
$BD4    $B842   JP       V0, $842        ; Jump to V0 + 842
$BD6    $6969   LD       V9, #69         ; Load 105 into V9
$BD8    $AB16   LD       I, $B16         ; Load B16 into I
$BDA    $D438   DRW      V4, V3, #8      ; Draw 8-byte sprite at V4, V3
$BDC    $FDF6   UNKNOWN  FDF6            ; Unknown Fxxx instruction
$BDE    $2362   CALL     $362            ; Call subroutine at 362
$BE0    $5C5C   UNKNOWN  $5C5C           ; Unknown 5xxx instruction
$BE2    $1971   JP       $971            ; Jump to 971
$BE4    $F599   UNKNOWN  F599            ; Unknown Fxxx instruction
$BE6    $DAA3   DRW      VA, VA, #3      ; Draw 3-byte sprite at VA, VA
$BE8    $E087   UNKNOWN  $E087           ; Unknown Exxx instruction
$BEA    $938F   UNKNOWN  $938F           ; Unknown 9xxx instruction
$BEC    $DBC7   DRW      VB, VC, #7      ; Draw 7-byte sprite at VB, VC
$BEE    $5E09   UNKNOWN  $5E09           ; Unknown 5xxx instruction
$BF0    $730C   ADD      V3, #0C         ; Add 12 to V3
$BF2    $81A6   SHR      V1              ; V1 >>= 1, VF = LSB
$BF4    $C269   RND      V2, #69         ; V2 = random & 69
$BF6    $0068   SYS      $068            ; System call to 068
$BF8    $480B   SNE      V8, #0B         ; Skip if V8 != 11
$BFA    $1FC7   JP       $FC7            ; Jump to FC7
$BFC    $E292   UNKNOWN  $E292           ; Unknown Exxx instruction
$BFE    $D445   DRW      V4, V4, #5      ; Draw 5-byte sprite at V4, V4
$C00    $5482   UNKNOWN  $5482           ; Unknown 5xxx instruction
$C02    $9CF5   UNKNOWN  $9CF5           ; Unknown 9xxx instruction
$C04    $2B5F   CALL     $B5F            ; Call subroutine at B5F
$C06    $EDCA   UNKNOWN  $EDCA           ; Unknown Exxx instruction
$C08    $41C8   SNE      V1, #C8         ; Skip if V1 != 200
$C0A    $2208   CALL     $208            ; Call subroutine at 208
$C0C    $361C   SE       V6, #1C         ; Skip if V6 == 28
$C0E    $6996   LD       V9, #96         ; Load 150 into V9
$C10    $7273   ADD      V2, #73         ; Add 115 to V2
$C12    $3298   SE       V2, #98         ; Skip if V2 == 152
$C14    $974B   UNKNOWN  $974B           ; Unknown 9xxx instruction
$C16    $B119   JP       V0, $119        ; Jump to V0 + 119
$C18    $D1A5   DRW      V1, VA, #5      ; Draw 5-byte sprite at V1, VA
$C1A    $B109   JP       V0, $109        ; Jump to V0 + 109
$C1C    $C070   RND      V0, #70         ; V0 = random & 70
$C1E    $8825   SUB      V8, V2          ; V8 -= V2, VF = !borrow
$C20    $3694   SE       V6, #94         ; Skip if V6 == 148
$C22    $69D0   LD       V9, #D0         ; Load 208 into V9
$C24    $EC43   UNKNOWN  $EC43           ; Unknown Exxx instruction
$C26    $87C5   SUB      V7, VC          ; V7 -= VC, VF = !borrow
$C28    $2C79   CALL     $C79            ; Call subroutine at C79
$C2A    $F61F   UNKNOWN  F61F            ; Unknown Fxxx instruction
$C2C    $395A   SE       V9, #5A         ; Skip if V9 == 90
$C2E    $3DB7   SE       VD, #B7         ; Skip if VD == 183
$C30    $E5F7   UNKNOWN  $E5F7           ; Unknown Exxx instruction
$C32    $BFEB   JP       V0, $FEB        ; Jump to V0 + FEB
$C34    $2D00   CALL     $D00            ; Call subroutine at D00
$C36    $E577   UNKNOWN  $E577           ; Unknown Exxx instruction
$C38    $8029   UNKNOWN  8029            ; Unknown 8xxx instruction
$C3A    $29F8   CALL     $9F8            ; Call subroutine at 9F8
$C3C    $A167   LD       I, $167         ; Load 167 into I
$C3E    $7219   ADD      V2, #19         ; Add 25 to V2
$C40    $24FA   CALL     $4FA            ; Call subroutine at 4FA
$C42    $6EEB   LD       VE, #EB         ; Load 235 into VE
$C44    $354A   SE       V5, #4A         ; Skip if V5 == 74
$C46    $6182   LD       V1, #82         ; Load 130 into V1
$C48    $1FB2   JP       $FB2            ; Jump to FB2
$C4A    $4592   SNE      V5, #92         ; Skip if V5 != 146
$C4C    $E908   UNKNOWN  $E908           ; Unknown Exxx instruction
$C4E    $5E6C   UNKNOWN  $5E6C           ; Unknown 5xxx instruction
$C50    $0028   SYS      $028            ; System call to 028
$C52    $18DD   JP       $8DD            ; Jump to 8DD
$C54    $1E7C   JP       $E7C            ; Jump to E7C
$C56    $86E0   LD       V6, VE          ; V6 = VE
$C58    $00C1   SYS      $0C1            ; System call to 0C1
$C5A    $D478   DRW      V4, V7, #8      ; Draw 8-byte sprite at V4, V7
$C5C    $0A9D   SYS      $A9D            ; System call to A9D
$C5E    $D9A1   DRW      V9, VA, #1      ; Draw 1-byte sprite at V9, VA
$C60    $7EC3   ADD      VE, #C3         ; Add 195 to VE
$C62    $C8CB   RND      V8, #CB         ; V8 = random & CB
$C64    $5395   UNKNOWN  $5395           ; Unknown 5xxx instruction
$C66    $53BF   UNKNOWN  $53BF           ; Unknown 5xxx instruction
$C68    $622A   LD       V2, #2A         ; Load 42 into V2
$C6A    $C016   RND      V0, #16         ; V0 = random & 16
$C6C    $82D0   LD       V2, VD          ; V2 = VD
$C6E    $2CBC   CALL     $CBC            ; Call subroutine at CBC
$C70    $DC45   DRW      VC, V4, #5      ; Draw 5-byte sprite at VC, V4
$C72    $C2A5   RND      V2, #A5         ; V2 = random & A5
$C74    $63F0   LD       V3, #F0         ; Load 240 into V3
$C76    $D8F9   DRW      V8, VF, #9      ; Draw 9-byte sprite at V8, VF
$C78    $207F   CALL     $07F            ; Call subroutine at 07F
$C7A    $C4FF   RND      V4, #FF         ; V4 = random & FF
$C7C    $0968   SYS      $968            ; System call to 968
$C7E    $2F25   CALL     $F25            ; Call subroutine at F25
$C80    $BD28   JP       V0, $D28        ; Jump to V0 + D28
$C82    $064C   SYS      $64C            ; System call to 64C
$C84    $D88C   DRW      V8, V8, #C      ; Draw 12-byte sprite at V8, V8
$C86    $3DB5   SE       VD, #B5         ; Skip if VD == 181
$C88    $1344   JP       $344            ; Jump to 344
$C8A    $CF9C   RND      VF, #9C         ; VF = random & 9C
$C8C    $1EA0   JP       $EA0            ; Jump to EA0
$C8E    $FB8F   UNKNOWN  FB8F            ; Unknown Fxxx instruction
$C90    $0221   SYS      $221            ; System call to 221
$C92    $0619   SYS      $619            ; System call to 619
$C94    $0EE5   SYS      $EE5            ; System call to EE5
$C96    $C3EA   RND      V3, #EA         ; V3 = random & EA
$C98    $BDE3   JP       V0, $DE3        ; Jump to V0 + DE3
$C9A    $EC37   UNKNOWN  $EC37           ; Unknown Exxx instruction
$C9C    $A9D8   LD       I, $9D8         ; Load 9D8 into I
$C9E    $3174   SE       V1, #74         ; Skip if V1 == 116
$CA0    $32FF   SE       V2, #FF         ; Skip if V2 == 255
$CA2    $CD34   RND      VD, #34         ; VD = random & 34
$CA4    $9CDF   UNKNOWN  $9CDF           ; Unknown 9xxx instruction
$CA6    $B048   JP       V0, $048        ; Jump to V0 + 048
$CA8    $E3DB   UNKNOWN  $E3DB           ; Unknown Exxx instruction
$CAA    $E636   UNKNOWN  $E636           ; Unknown Exxx instruction
$CAC    $048E   SYS      $48E            ; System call to 48E
$CAE    $6162   LD       V1, #62         ; Load 98 into V1
$CB0    $B261   JP       V0, $261        ; Jump to V0 + 261
$CB2    $047B   SYS      $47B            ; System call to 47B
$CB4    $5264   UNKNOWN  $5264           ; Unknown 5xxx instruction
$CB6    $61CC   LD       V1, #CC         ; Load 204 into V1
$CB8    $E79C   UNKNOWN  $E79C           ; Unknown Exxx instruction
$CBA    $F55A   UNKNOWN  F55A            ; Unknown Fxxx instruction
$CBC    $A74B   LD       I, $74B         ; Load 74B into I
$CBE    $8D51   OR       VD, V5          ; VD |= V5
$CC0    $728A   ADD      V2, #8A         ; Add 138 to V2
$CC2    $64AC   LD       V4, #AC         ; Load 172 into V4
$CC4    $3C80   SE       VC, #80         ; Skip if VC == 128
$CC6    $A2FF   LD       I, $2FF         ; Load 2FF into I
$CC8    $33B1   SE       V3, #B1         ; Skip if V3 == 177
$CCA    $B35C   JP       V0, $35C        ; Jump to V0 + 35C
$CCC    $8AA1   OR       VA, VA          ; VA |= VA
$CCE    $7E8C   ADD      VE, #8C         ; Add 140 to VE
$CD0    $2716   CALL     $716            ; Call subroutine at 716
$CD2    $C9E1   RND      V9, #E1         ; V9 = random & E1
$CD4    $424A   SNE      V2, #4A         ; Skip if V2 != 74
$CD6    $19C0   JP       $9C0            ; Jump to 9C0
$CD8    $7B0C   ADD      VB, #0C         ; Add 12 to VB
$CDA    $DB98   DRW      VB, V9, #8      ; Draw 8-byte sprite at VB, V9
$CDC    $23AA   CALL     $3AA            ; Call subroutine at 3AA
$CDE    $265B   CALL     $65B            ; Call subroutine at 65B
$CE0    $816A   UNKNOWN  816A            ; Unknown 8xxx instruction
$CE2    $FCB2   UNKNOWN  FCB2            ; Unknown Fxxx instruction
$CE4    $B650   JP       V0, $650        ; Jump to V0 + 650
$CE6    $3383   SE       V3, #83         ; Skip if V3 == 131
$CE8    $2CE8   CALL     $CE8            ; Call subroutine at CE8
$CEA    $E800   UNKNOWN  $E800           ; Unknown Exxx instruction
$CEC    $8BD4   ADD      VB, VD          ; VB += VD, VF = carry
$CEE    $0697   SYS      $697            ; System call to 697
$CF0    $8C54   ADD      VC, V5          ; VC += V5, VF = carry
$CF2    $636E   LD       V3, #6E         ; Load 110 into V3
$CF4    $35AE   SE       V5, #AE         ; Skip if V5 == 174
$CF6    $354A   SE       V5, #4A         ; Skip if V5 == 74
$CF8    $6D03   LD       VD, #03         ; Load 3 into VD
$CFA    $9F53   UNKNOWN  $9F53           ; Unknown 9xxx instruction
$CFC    $C819   RND      V8, #19         ; V8 = random & 19
$CFE    $1C4F   JP       $C4F            ; Jump to C4F
$D00    $86D6   SHR      V6              ; V6 >>= 1, VF = LSB
$D02    $1979   JP       $979            ; Jump to 979
$D04    $05F8   SYS      $5F8            ; System call to 5F8
$D06    $EDAC   UNKNOWN  $EDAC           ; Unknown Exxx instruction
$D08    $FF3A   UNKNOWN  FF3A            ; Unknown Fxxx instruction
$D0A    $6F45   LD       VF, #45         ; Load 69 into VF
$D0C    $4360   SNE      V3, #60         ; Skip if V3 != 96
$D0E    $2A17   CALL     $A17            ; Call subroutine at A17
$D10    $24BB   CALL     $4BB            ; Call subroutine at 4BB
$D12    $D3C1   DRW      V3, VC, #1      ; Draw 1-byte sprite at V3, VC
$D14    $08E3   SYS      $8E3            ; System call to 8E3
$D16    $2C22   CALL     $C22            ; Call subroutine at C22
$D18    $3680   SE       V6, #80         ; Skip if V6 == 128
$D1A    $1111   JP       $111            ; Jump to 111
$D1C    $1FE9   JP       $FE9            ; Jump to FE9
$D1E    $3EF8   SE       VE, #F8         ; Skip if VE == 248
$D20    $263D   CALL     $63D            ; Call subroutine at 63D
$D22    $ABC5   LD       I, $BC5         ; Load BC5 into I
$D24    $B08B   JP       V0, $08B        ; Jump to V0 + 08B
$D26    $A862   LD       I, $862         ; Load 862 into I
$D28    $637B   LD       V3, #7B         ; Load 123 into V3
$D2A    $2073   CALL     $073            ; Call subroutine at 073
$D2C    $05D9   SYS      $5D9            ; System call to 5D9
$D2E    $86E4   ADD      V6, VE          ; V6 += VE, VF = carry
$D30    $B212   JP       V0, $212        ; Jump to V0 + 212
$D32    $405C   SNE      V0, #5C         ; Skip if V0 != 92
$D34    $021E   SYS      $21E            ; System call to 21E
$D36    $0036   SYS      $036            ; System call to 036
$D38    $E468   UNKNOWN  $E468           ; Unknown Exxx instruction
$D3A    $12C3   JP       $2C3            ; Jump to 2C3
$D3C    $8424   ADD      V4, V2          ; V4 += V2, VF = carry
$D3E    $097D   SYS      $97D            ; System call to 97D
$D40    $7B3B   ADD      VB, #3B         ; Add 59 to VB
$D42    $927E   UNKNOWN  $927E           ; Unknown 9xxx instruction
$D44    $2A1E   CALL     $A1E            ; Call subroutine at A1E
$D46    $5888   UNKNOWN  $5888           ; Unknown 5xxx instruction
$D48    $F965   LD       V9, [I]         ; Load V0-V9 from I
$D4A    $592B   UNKNOWN  $592B           ; Unknown 5xxx instruction
$D4C    $956E   UNKNOWN  $956E           ; Unknown 9xxx instruction
$D4E    $21D3   CALL     $1D3            ; Call subroutine at 1D3
$D50    $219F   CALL     $19F            ; Call subroutine at 19F
$D52    $0E73   SYS      $E73            ; System call to E73
$D54    $AEEB   LD       I, $EEB         ; Load EEB into I
$D56    $9470   SNE      V4, V7          ; Skip if V4 != V7
$D58    $1FF9   JP       $FF9            ; Jump to FF9
$D5A    $4241   SNE      V2, #41         ; Skip if V2 != 65
$D5C    $7F4D   ADD      VF, #4D         ; Add 77 to VF
$D5E    $B23D   JP       V0, $23D        ; Jump to V0 + 23D
$D60    $EFA6   UNKNOWN  $EFA6           ; Unknown Exxx instruction
$D62    $0CEC   SYS      $CEC            ; System call to CEC
$D64    $0F69   SYS      $F69            ; System call to F69
$D66    $B04B   JP       V0, $04B        ; Jump to V0 + 04B
$D68    $0E66   SYS      $E66            ; System call to E66
$D6A    $6896   LD       V8, #96         ; Load 150 into V8
$D6C    $C365   RND      V3, #65         ; V3 = random & 65
$D6E    $1F27   JP       $F27            ; Jump to F27
$D70    $7A65   ADD      VA, #65         ; Add 101 to VA
$D72    $90F4   UNKNOWN  $90F4           ; Unknown 9xxx instruction
$D74    $3365   SE       V3, #65         ; Skip if V3 == 101
$D76    $F191   UNKNOWN  F191            ; Unknown Fxxx instruction
$D78    $F78F   UNKNOWN  F78F            ; Unknown Fxxx instruction
$D7A    $77F6   ADD      V7, #F6         ; Add 246 to V7
$D7C    $C627   RND      V6, #27         ; V6 = random & 27
$D7E    $5716   UNKNOWN  $5716           ; Unknown 5xxx instruction
$D80    $631B   LD       V3, #1B         ; Load 27 into V3
$D82    $2A96   CALL     $A96            ; Call subroutine at A96
$D84    $8589   UNKNOWN  8589            ; Unknown 8xxx instruction
$D86    $6DB0   LD       VD, #B0         ; Load 176 into VD
$D88    $D803   DRW      V8, V0, #3      ; Draw 3-byte sprite at V8, V0
$D8A    $0B3C   SYS      $B3C            ; System call to B3C
$D8C    $3BC9   SE       VB, #C9         ; Skip if VB == 201
$D8E    $B270   JP       V0, $270        ; Jump to V0 + 270
$D90    $66F4   LD       V6, #F4         ; Load 244 into V6
$D92    $C714   RND      V7, #14         ; V7 = random & 14
$D94    $49BF   SNE      V9, #BF         ; Skip if V9 != 191
$D96    $F1BA   UNKNOWN  F1BA            ; Unknown Fxxx instruction
$D98    $5EB9   UNKNOWN  $5EB9           ; Unknown 5xxx instruction
$D9A    $0245   SYS      $245            ; System call to 245
$D9C    $EE21   UNKNOWN  $EE21           ; Unknown Exxx instruction
$D9E    $CA26   RND      VA, #26         ; VA = random & 26
$DA0    $5F08   UNKNOWN  $5F08           ; Unknown 5xxx instruction
$DA2    $735A   ADD      V3, #5A         ; Add 90 to V3
$DA4    $E946   UNKNOWN  $E946           ; Unknown Exxx instruction
$DA6    $F454   UNKNOWN  F454            ; Unknown Fxxx instruction
$DA8    $D9A6   DRW      V9, VA, #6      ; Draw 6-byte sprite at V9, VA
$DAA    $8C76   SHR      VC              ; VC >>= 1, VF = LSB
$DAC    $219D   CALL     $19D            ; Call subroutine at 19D
$DAE    $2F63   CALL     $F63            ; Call subroutine at F63
$DB0    $0249   SYS      $249            ; System call to 249
$DB2    $19FC   JP       $9FC            ; Jump to 9FC
$DB4    $619C   LD       V1, #9C         ; Load 156 into V1
$DB6    $4D25   SNE      VD, #25         ; Skip if VD != 37
$DB8    $7475   ADD      V4, #75         ; Add 117 to V4
$DBA    $F835   UNKNOWN  F835            ; Unknown Fxxx instruction
$DBC    $8BA6   SHR      VB              ; VB >>= 1, VF = LSB
$DBE    $64C6   LD       V4, #C6         ; Load 198 into V4
$DC0    $B084   JP       V0, $084        ; Jump to V0 + 084
$DC2    $81AF   UNKNOWN  81AF            ; Unknown 8xxx instruction
$DC4    $14E3   JP       $4E3            ; Jump to 4E3
$DC6    $8939   UNKNOWN  8939            ; Unknown 8xxx instruction
$DC8    $6C7D   LD       VC, #7D         ; Load 125 into VC
$DCA    $D81B   DRW      V8, V1, #B      ; Draw 11-byte sprite at V8, V1
$DCC    $AAC7   LD       I, $AC7         ; Load AC7 into I
$DCE    $17C6   JP       $7C6            ; Jump to 7C6
$DD0    $9F9D   UNKNOWN  $9F9D           ; Unknown 9xxx instruction
$DD2    $1928   JP       $928            ; Jump to 928
$DD4    $FD23   UNKNOWN  FD23            ; Unknown Fxxx instruction
$DD6    $EBDB   UNKNOWN  $EBDB           ; Unknown Exxx instruction
$DD8    $2249   CALL     $249            ; Call subroutine at 249
$DDA    $791A   ADD      V9, #1A         ; Add 26 to V9
$DDC    $6418   LD       V4, #18         ; Load 24 into V4
$DDE    $4DFE   SNE      VD, #FE         ; Skip if VD != 254
$DE0    $24D2   CALL     $4D2            ; Call subroutine at 4D2
$DE2    $CB8A   RND      VB, #8A         ; VB = random & 8A
$DE4    $7716   ADD      V7, #16         ; Add 22 to V7
$DE6    $85B6   SHR      V5              ; V5 >>= 1, VF = LSB
$DE8    $536B   UNKNOWN  $536B           ; Unknown 5xxx instruction
$DEA    $48DF   SNE      V8, #DF         ; Skip if V8 != 223
$DEC    $4D66   SNE      VD, #66         ; Skip if VD != 102
$DEE    $B822   JP       V0, $822        ; Jump to V0 + 822
$DF0    $6DF5   LD       VD, #F5         ; Load 245 into VD
$DF2    $3B15   SE       VB, #15         ; Skip if VB == 21
$DF4    $F544   UNKNOWN  F544            ; Unknown Fxxx instruction
$DF6    $E0D4   UNKNOWN  $E0D4           ; Unknown Exxx instruction
$DF8    $2928   CALL     $928            ; Call subroutine at 928
$DFA    $3F11   SE       VF, #11         ; Skip if VF == 17
$DFC    $38DB   SE       V8, #DB         ; Skip if V8 == 219
$DFE    $3485   SE       V4, #85         ; Skip if V4 == 133
$E00    $B49D   JP       V0, $49D        ; Jump to V0 + 49D
$E02    $6559   LD       V5, #59         ; Load 89 into V5
$E04    $6D53   LD       VD, #53         ; Load 83 into VD
$E06    $DB22   DRW      VB, V2, #2      ; Draw 2-byte sprite at VB, V2
$E08    $BC52   JP       V0, $C52        ; Jump to V0 + C52
$E0A    $16F2   JP       $6F2            ; Jump to 6F2
$E0C    $68E9   LD       V8, #E9         ; Load 233 into V8
$E0E    $76DD   ADD      V6, #DD         ; Add 221 to V6
$E10    $4315   SNE      V3, #15         ; Skip if V3 != 21
$E12    $6AAC   LD       VA, #AC         ; Load 172 into VA
$E14    $FBCD   UNKNOWN  FBCD            ; Unknown Fxxx instruction
$E16    $E309   UNKNOWN  $E309           ; Unknown Exxx instruction
$E18    $1662   JP       $662            ; Jump to 662
$E1A    $1D53   JP       $D53            ; Jump to D53
$E1C    $BAF0   JP       V0, $AF0        ; Jump to V0 + AF0
$E1E    $D0C6   DRW      V0, VC, #6      ; Draw 6-byte sprite at V0, VC
$E20    $B7BB   JP       V0, $7BB        ; Jump to V0 + 7BB
$E22    $604C   LD       V0, #4C         ; Load 76 into V0
$E24    $6A00   LD       VA, #00         ; Load 0 into VA
$E26    $44F4   SNE      V4, #F4         ; Skip if V4 != 244
$E28    $24DD   CALL     $4DD            ; Call subroutine at 4DD
$E2A    $ECCD   UNKNOWN  $ECCD           ; Unknown Exxx instruction
$E2C    $8D81   OR       VD, V8          ; VD |= V8
$E2E    $639B   LD       V3, #9B         ; Load 155 into V3
$E30    $1B4F   JP       $B4F            ; Jump to B4F
$E32    $A6F6   LD       I, $6F6         ; Load 6F6 into I
$E34    $F5CD   UNKNOWN  F5CD            ; Unknown Fxxx instruction
$E36    $DBC6   DRW      VB, VC, #6      ; Draw 6-byte sprite at VB, VC
$E38    $41ED   SNE      V1, #ED         ; Skip if V1 != 237
$E3A    $09E9   SYS      $9E9            ; System call to 9E9
$E3C    $3E47   SE       VE, #47         ; Skip if VE == 71
$E3E    $96D3   UNKNOWN  $96D3           ; Unknown 9xxx instruction
$E40    $6987   LD       V9, #87         ; Load 135 into V9
$E42    $CC25   RND      VC, #25         ; VC = random & 25
$E44    $937D   UNKNOWN  $937D           ; Unknown 9xxx instruction
$E46    $7EC0   ADD      VE, #C0         ; Add 192 to VE
$E48    $FFC0   UNKNOWN  FFC0            ; Unknown Fxxx instruction
$E4A    $6739   LD       V7, #39         ; Load 57 into V7
$E4C    $B7AA   JP       V0, $7AA        ; Jump to V0 + 7AA
$E4E    $01BE   SYS      $1BE            ; System call to 1BE
$E50    $B7C3   JP       V0, $7C3        ; Jump to V0 + 7C3
$E52    $4F81   SNE      VF, #81         ; Skip if VF != 129
$E54    $6090   LD       V0, #90         ; Load 144 into V0
$E56    $C2A3   RND      V2, #A3         ; V2 = random & A3
$E58    $4D88   SNE      VD, #88         ; Skip if VD != 136
$E5A    $4B30   SNE      VB, #30         ; Skip if VB != 48
$E5C    $8129   UNKNOWN  8129            ; Unknown 8xxx instruction
$E5E    $0F7E   SYS      $F7E            ; System call to F7E
$E60    $3546   SE       V5, #46         ; Skip if V5 == 70
$E62    $5CEB   UNKNOWN  $5CEB           ; Unknown 5xxx instruction
$E64    $53CF   UNKNOWN  $53CF           ; Unknown 5xxx instruction
$E66    $D613   DRW      V6, V1, #3      ; Draw 3-byte sprite at V6, V1
$E68    $7186   ADD      V1, #86         ; Add 134 to V1
$E6A    $DFA8   DRW      VF, VA, #8      ; Draw 8-byte sprite at VF, VA
$E6C    $CB9D   RND      VB, #9D         ; VB = random & 9D
$E6E    $29C3   CALL     $9C3            ; Call subroutine at 9C3
$E70    $B568   JP       V0, $568        ; Jump to V0 + 568
$E72    $90F2   UNKNOWN  $90F2           ; Unknown 9xxx instruction
$E74    $9950   SNE      V9, V5          ; Skip if V9 != V5
$E76    $9745   UNKNOWN  $9745           ; Unknown 9xxx instruction
$E78    $1D85   JP       $D85            ; Jump to D85
$E7A    $460F   SNE      V6, #0F         ; Skip if V6 != 15
$E7C    $9B35   UNKNOWN  $9B35           ; Unknown 9xxx instruction
$E7E    $14F8   JP       $4F8            ; Jump to 4F8
$E80    $C075   RND      V0, #75         ; V0 = random & 75
$E82    $1DFD   JP       $DFD            ; Jump to DFD
$E84    $166B   JP       $66B            ; Jump to 66B
$E86    $1591   JP       $591            ; Jump to 591
$E88    $AFDD   LD       I, $FDD         ; Load FDD into I
$E8A    $99FF   UNKNOWN  $99FF           ; Unknown 9xxx instruction
$E8C    $DCAF   DRW      VC, VA, #F      ; Draw 15-byte sprite at VC, VA
$E8E    $04DC   SYS      $4DC            ; System call to 4DC
$E90    $2577   CALL     $577            ; Call subroutine at 577
$E92    $EDD0   UNKNOWN  $EDD0           ; Unknown Exxx instruction
$E94    $3D71   SE       VD, #71         ; Skip if VD == 113
$E96    $E571   UNKNOWN  $E571           ; Unknown Exxx instruction
$E98    $D490   DRW      V4, V9, #0      ; Draw 0-byte sprite at V4, V9
$E9A    $3184   SE       V1, #84         ; Skip if V1 == 132
$E9C    $CE6E   RND      VE, #6E         ; VE = random & 6E
$E9E    $EA25   UNKNOWN  $EA25           ; Unknown Exxx instruction
$EA0    $FD58   UNKNOWN  FD58            ; Unknown Fxxx instruction
$EA2    $5CF8   UNKNOWN  $5CF8           ; Unknown 5xxx instruction
$EA4    $30A3   SE       V0, #A3         ; Skip if V0 == 163
$EA6    $159F   JP       $59F            ; Jump to 59F
$EA8    $E60C   UNKNOWN  $E60C           ; Unknown Exxx instruction
$EAA    $420D   SNE      V2, #0D         ; Skip if V2 != 13
$EAC    $241D   CALL     $41D            ; Call subroutine at 41D
$EAE    $AEAA   LD       I, $EAA         ; Load EAA into I
$EB0    $479F   SNE      V7, #9F         ; Skip if V7 != 159
$EB2    $E09D   UNKNOWN  $E09D           ; Unknown Exxx instruction
$EB4    $E9FB   UNKNOWN  $E9FB           ; Unknown Exxx instruction
$EB6    $0133   SYS      $133            ; System call to 133
$EB8    $E469   UNKNOWN  $E469           ; Unknown Exxx instruction
$EBA    $0049   SYS      $049            ; System call to 049
$EBC    $4B94   SNE      VB, #94         ; Skip if VB != 148
$EBE    $01A5   SYS      $1A5            ; System call to 1A5
$EC0    $099A   SYS      $99A            ; System call to 99A
$EC2    $E986   UNKNOWN  $E986           ; Unknown Exxx instruction
$EC4    $3A10   SE       VA, #10         ; Skip if VA == 16
$EC6    $6062   LD       V0, #62         ; Load 98 into V0
$EC8    $DB81   DRW      VB, V8, #1      ; Draw 1-byte sprite at VB, V8
$ECA    $E719   UNKNOWN  $E719           ; Unknown Exxx instruction
$ECC    $F53F   UNKNOWN  F53F            ; Unknown Fxxx instruction
$ECE    $AE90   LD       I, $E90         ; Load E90 into I
$ED0    $A6A0   LD       I, $6A0         ; Load 6A0 into I
$ED2    $43F4   SNE      V3, #F4         ; Skip if V3 != 244
$ED4    $1A47   JP       $A47            ; Jump to A47
$ED6    $E25C   UNKNOWN  $E25C           ; Unknown Exxx instruction
$ED8    $7350   ADD      V3, #50         ; Add 80 to V3
$EDA    $60C8   LD       V0, #C8         ; Load 200 into V0
$EDC    $EC91   UNKNOWN  $EC91           ; Unknown Exxx instruction
$EDE    $4D28   SNE      VD, #28         ; Skip if VD != 40
$EE0    $962E   UNKNOWN  $962E           ; Unknown 9xxx instruction
$EE2    $CE5D   RND      VE, #5D         ; VE = random & 5D
$EE4    $4230   SNE      V2, #30         ; Skip if V2 != 48
$EE6    $EAD1   UNKNOWN  $EAD1           ; Unknown Exxx instruction
$EE8    $CC7D   RND      VC, #7D         ; VC = random & 7D
$EEA    $9812   UNKNOWN  $9812           ; Unknown 9xxx instruction
$EEC    $40CB   SNE      V0, #CB         ; Skip if V0 != 203
$EEE    $0781   SYS      $781            ; System call to 781
$EF0    $88BE   SHL      V8              ; V8 <<= 1, VF = MSB
$EF2    $C16D   RND      V1, #6D         ; V1 = random & 6D
$EF4    $5DD7   UNKNOWN  $5DD7           ; Unknown 5xxx instruction
$EF6    $6F22   LD       VF, #22         ; Load 34 into VF
$EF8    $9E3B   UNKNOWN  $9E3B           ; Unknown 9xxx instruction
$EFA    $791B   ADD      V9, #1B         ; Add 27 to V9
$EFC    $4E78   SNE      VE, #78         ; Skip if VE != 120
$EFE    $39D3   SE       V9, #D3         ; Skip if V9 == 211
$F00    $992B   UNKNOWN  $992B           ; Unknown 9xxx instruction
$F02    $CCD0   RND      VC, #D0         ; VC = random & D0
$F04    $DE3E   DRW      VE, V3, #E      ; Draw 14-byte sprite at VE, V3
$F06    $BFB5   JP       V0, $FB5        ; Jump to V0 + FB5
$F08    $594E   UNKNOWN  $594E           ; Unknown 5xxx instruction
$F0A    $F583   UNKNOWN  F583            ; Unknown Fxxx instruction
$F0C    $676D   LD       V7, #6D         ; Load 109 into V7
$F0E    $CFC8   RND      VF, #C8         ; VF = random & C8
$F10    $0001   SYS      $001            ; System call to 001
$F12    $2AFA   CALL     $AFA            ; Call subroutine at AFA
$F14    $AB7B   LD       I, $B7B         ; Load B7B into I
$F16    $97E5   UNKNOWN  $97E5           ; Unknown 9xxx instruction
$F18    $4B39   SNE      VB, #39         ; Skip if VB != 57
$F1A    $20FA   CALL     $0FA            ; Call subroutine at 0FA
$F1C    $B34F   JP       V0, $34F        ; Jump to V0 + 34F
$F1E    $6766   LD       V7, #66         ; Load 102 into V7
$F20    $D5EE   DRW      V5, VE, #E      ; Draw 14-byte sprite at V5, VE
$F22    $108C   JP       $08C            ; Jump to 08C
$F24    $D538   DRW      V5, V3, #8      ; Draw 8-byte sprite at V5, V3
$F26    $7A5D   ADD      VA, #5D         ; Add 93 to VA
$F28    $0A9F   SYS      $A9F            ; System call to A9F
$F2A    $9FAE   UNKNOWN  $9FAE           ; Unknown 9xxx instruction
$F2C    $3DF2   SE       VD, #F2         ; Skip if VD == 242
$F2E    $0DBD   SYS      $DBD            ; System call to DBD
$F30    $CC4B   RND      VC, #4B         ; VC = random & 4B
$F32    $A8E1   LD       I, $8E1         ; Load 8E1 into I
$F34    $B07A   JP       V0, $07A        ; Jump to V0 + 07A
$F36    $88DD   UNKNOWN  88DD            ; Unknown 8xxx instruction
$F38    $2960   CALL     $960            ; Call subroutine at 960
$F3A    $FB2D   UNKNOWN  FB2D            ; Unknown Fxxx instruction
$F3C    $FFD4   UNKNOWN  FFD4            ; Unknown Fxxx instruction
$F3E    $7861   ADD      V8, #61         ; Add 97 to V8
$F40    $BD5B   JP       V0, $D5B        ; Jump to V0 + D5B
$F42    $0D79   SYS      $D79            ; System call to D79
$F44    $47C9   SNE      V7, #C9         ; Skip if V7 != 201
$F46    $3048   SE       V0, #48         ; Skip if V0 == 72
$F48    $555A   UNKNOWN  $555A           ; Unknown 5xxx instruction
$F4A    $97AD   UNKNOWN  $97AD           ; Unknown 9xxx instruction
$F4C    $1445   JP       $445            ; Jump to 445
$F4E    $E984   UNKNOWN  $E984           ; Unknown Exxx instruction
$F50    $C8DF   RND      V8, #DF         ; V8 = random & DF
$F52    $77DF   ADD      V7, #DF         ; Add 223 to V7
$F54    $EBD2   UNKNOWN  $EBD2           ; Unknown Exxx instruction
$F56    $1693   JP       $693            ; Jump to 693
$F58    $F03E   UNKNOWN  F03E            ; Unknown Fxxx instruction
$F5A    $C9F3   RND      V9, #F3         ; V9 = random & F3
$F5C    $ABCF   LD       I, $BCF         ; Load BCF into I
$F5E    $FED0   UNKNOWN  FED0            ; Unknown Fxxx instruction
$F60    $62BD   LD       V2, #BD         ; Load 189 into V2
$F62    $73FA   ADD      V3, #FA         ; Add 250 to V3
$F64    $D2D5   DRW      V2, VD, #5      ; Draw 5-byte sprite at V2, VD
$F66    $CC09   RND      VC, #09         ; VC = random & 09
$F68    $6C02   LD       VC, #02         ; Load 2 into VC
$F6A    $836C   UNKNOWN  836C            ; Unknown 8xxx instruction
$F6C    $9E4E   UNKNOWN  $9E4E           ; Unknown 9xxx instruction
$F6E    $ACD0   LD       I, $CD0         ; Load CD0 into I
$F70    $EB91   UNKNOWN  $EB91           ; Unknown Exxx instruction
$F72    $3F42   SE       VF, #42         ; Skip if VF == 66
$F74    $8130   LD       V1, V3          ; V1 = V3
$F76    $5996   UNKNOWN  $5996           ; Unknown 5xxx instruction
$F78    $1482   JP       $482            ; Jump to 482
$F7A    $20B3   CALL     $0B3            ; Call subroutine at 0B3
$F7C    $4C79   SNE      VC, #79         ; Skip if VC != 121
$F7E    $535F   UNKNOWN  $535F           ; Unknown 5xxx instruction
$F80    $AC0B   LD       I, $C0B         ; Load C0B into I
$F82    $6485   LD       V4, #85         ; Load 133 into V4
$F84    $F53E   UNKNOWN  F53E            ; Unknown Fxxx instruction
$F86    $7C0A   ADD      VC, #0A         ; Add 10 to VC
$F88    $040C   SYS      $40C            ; System call to 40C
$F8A    $B18D   JP       V0, $18D        ; Jump to V0 + 18D
$F8C    $A893   LD       I, $893         ; Load 893 into I
$F8E    $3DB4   SE       VD, #B4         ; Skip if VD == 180
$F90    $B0F9   JP       V0, $0F9        ; Jump to V0 + 0F9
$F92    $B789   JP       V0, $789        ; Jump to V0 + 789
$F94    $5EC3   UNKNOWN  $5EC3           ; Unknown 5xxx instruction
$F96    $4977   SNE      V9, #77         ; Skip if V9 != 119
$F98    $3069   SE       V0, #69         ; Skip if V0 == 105
$F9A    $F528   UNKNOWN  F528            ; Unknown Fxxx instruction
$F9C    $3469   SE       V4, #69         ; Skip if V4 == 105
$F9E    $2F21   CALL     $F21            ; Call subroutine at F21
$FA0    $723A   ADD      V2, #3A         ; Add 58 to V2
$FA2    $8A24   ADD      VA, V2          ; VA += V2, VF = carry
$FA4    $B2E3   JP       V0, $2E3        ; Jump to V0 + 2E3
$FA6    $492E   SNE      V9, #2E         ; Skip if V9 != 46
$FA8    $8579   UNKNOWN  8579            ; Unknown 8xxx instruction
$FAA    $A5E9   LD       I, $5E9         ; Load 5E9 into I
$FAC    $2A3A   CALL     $A3A            ; Call subroutine at A3A
$FAE    $CFE2   RND      VF, #E2         ; VF = random & E2
$FB0    $D9BF   DRW      V9, VB, #F      ; Draw 15-byte sprite at V9, VB
$FB2    $B65F   JP       V0, $65F        ; Jump to V0 + 65F
$FB4    $135F   JP       $35F            ; Jump to 35F
$FB6    $D9B1   DRW      V9, VB, #1      ; Draw 1-byte sprite at V9, VB
$FB8    $1F4B   JP       $F4B            ; Jump to F4B
$FBA    $CA11   RND      VA, #11         ; VA = random & 11
$FBC    $101A   JP       $01A            ; Jump to 01A
$FBE    $4D1C   SNE      VD, #1C         ; Skip if VD != 28
$FC0    $1BE4   JP       $BE4            ; Jump to BE4
$FC2    $C6D3   RND      V6, #D3         ; V6 = random & D3
$FC4    $09EE   SYS      $9EE            ; System call to 9EE
$FC6    $9B0D   UNKNOWN  $9B0D           ; Unknown 9xxx instruction
$FC8    $71F9   ADD      V1, #F9         ; Add 249 to V1
$FCA    $D048   DRW      V0, V4, #8      ; Draw 8-byte sprite at V0, V4
$FCC    $4CB4   SNE      VC, #B4         ; Skip if VC != 180
$FCE    $D380   DRW      V3, V8, #0      ; Draw 0-byte sprite at V3, V8
$FD0    $EE61   UNKNOWN  $EE61           ; Unknown Exxx instruction
$FD2    $45F0   SNE      V5, #F0         ; Skip if V5 != 240
$FD4    $3D7E   SE       VD, #7E         ; Skip if VD == 126
$FD6    $2513   CALL     $513            ; Call subroutine at 513
$FD8    $14C2   JP       $4C2            ; Jump to 4C2
$FDA    $8DFD   UNKNOWN  8DFD            ; Unknown 8xxx instruction
$FDC    $03B5   SYS      $3B5            ; System call to 3B5
$FDE    $1196   JP       $196            ; Jump to 196
$FE0    $3548   SE       V5, #48         ; Skip if V5 == 72
$FE2    $39F5   SE       V9, #F5         ; Skip if V9 == 245
$FE4    $9374   UNKNOWN  $9374           ; Unknown 9xxx instruction
$FE6    $E47A   UNKNOWN  $E47A           ; Unknown Exxx instruction
$FE8    $3E8C   SE       VE, #8C         ; Skip if VE == 140
$FEA    $194E   JP       $94E            ; Jump to 94E
$FEC    $BF12   JP       V0, $F12        ; Jump to V0 + F12
$FEE    $08CD   SYS      $8CD            ; System call to 8CD
$FF0    $DA0C   DRW      VA, V0, #C      ; Draw 12-byte sprite at VA, V0
$FF2    $15F7   JP       $5F7            ; Jump to 5F7
$FF4    $9E84   UNKNOWN  $9E84           ; Unknown 9xxx instruction
$FF6    $10C6   JP       $0C6            ; Jump to 0C6
$FF8    $963D   UNKNOWN  $963D           ; Unknown 9xxx instruction
$FFA    $E3D3   UNKNOWN  $E3D3           ; Unknown Exxx instruction
$FFC    $480A   SNE      V8, #0A         ; Skip if V8 != 10
$FFE    $CE86   RND      VE, #86         ; VE = random & 86

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 445 (24.8%)
  JP      : 243 (13.6%)
  LD      : 228 (12.7%)
  ADD     : 135 ( 7.5%)
  CALL    : 124 ( 6.9%)
  SNE     : 123 ( 6.9%)
  SE      : 122 ( 6.8%)
  RND     : 119 ( 6.6%)
  SYS     : 111 ( 6.2%)
  DRW     :  96 ( 5.4%)
  OR      :  12 ( 0.7%)
  SHR     :  10 ( 0.6%)
  AND     :   7 ( 0.4%)
  SUBN    :   7 ( 0.4%)
  SHL     :   4 ( 0.2%)
  SUB     :   4 ( 0.2%)
  XOR     :   1 ( 0.1%)
  SKP     :   1 ( 0.1%)

Memory Operations: 363 (20.3%)
Arithmetic Operations: 166 (9.3%)
