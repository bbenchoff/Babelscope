
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B3496D01_I13856_C12338_67b65bf6f5c2.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 3496
Instance: 13856
Direction: ascending
Final Array: [80, 80, 80, 80, 80, 108, 138, 180]
Operations: R:0 W:5 C:17 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 115
Sort Array References:
  $218: LD I, $F7D ; Load F7D into I
  $232: LD I, $104 ; Load 104 into I
  $236: LD I, $C52 ; Load C52 into I
  $25C: LD I, $FA9 ; Load FA9 into I
  $26C: LD I, $CF7 ; Load CF7 into I
  $336: LD I, $BE6 ; Load BE6 into I
  $370: LD I, $AC4 ; Load AC4 into I
  $39C: LD I, $DB8 ; Load DB8 into I
  $3AC: LD I, $247 ; Load 247 into I
  $3B0: LD I, $8FE ; Load 8FE into I
  $3F0: LD I, $49E ; Load 49E into I
  $3FA: LD I, $BC1 ; Load BC1 into I
  $42E: LD I, $13B ; Load 13B into I
  $446: LD I, $539 ; Load 539 into I
  $44A: LD I, $811 ; Load 811 into I
  $46A: LD I, $39C ; Load 39C into I
  $4A0: LD I, $234 ; Load 234 into I
  $4DA: LD I, $A88 ; Load A88 into I
  $4F4: LD I, $BB4 ; Load BB4 into I
  $50C: LD I, $F29 ; Load F29 into I
  $524: LD I, $928 ; Load 928 into I
  $566: LD I, $6A5 ; Load 6A5 into I
  $588: LD I, $7BC ; Load 7BC into I
  $5AC: LD I, $822 ; Load 822 into I
  $5C0: LD I, $782 ; Load 782 into I
  $5C2: LD I, $58E ; Load 58E into I
  $5EC: LD I, $2B3 ; Load 2B3 into I
  $604: LD I, $4D4 ; Load 4D4 into I
  $610: LD I, $A78 ; Load A78 into I
  $638: LD I, $7E6 ; Load 7E6 into I
  $672: LD I, $1C2 ; Load 1C2 into I
  $67A: LD I, $CAC ; Load CAC into I
  $69E: LD I, $E5B ; Load E5B into I
  $6C6: LD I, $1AE ; Load 1AE into I
  $6C8: LD I, $87B ; Load 87B into I
  $6CC: LD I, $9BF ; Load 9BF into I
  $6D2: LD I, $7DE ; Load 7DE into I
  $726: LD I, $322 ; Load 322 into I
  $72E: LD I, $98B ; Load 98B into I
  $73A: LD I, $37A ; Load 37A into I
  $73C: LD I, $153 ; Load 153 into I
  $74A: LD I, $C53 ; Load C53 into I
  $74C: LD I, $207 ; Load 207 into I
  $752: LD I, $C71 ; Load C71 into I
  $75C: LD I, $EF9 ; Load EF9 into I
  $77E: LD I, $640 ; Load 640 into I
  $788: LD I, $449 ; Load 449 into I
  $7E0: LD I, $149 ; Load 149 into I
  $7EA: LD I, $C7A ; Load C7A into I
  $7FE: LD I, $4FB ; Load 4FB into I
  $808: LD I, $0BC ; Load 0BC into I
  $81A: LD I, $F1D ; Load F1D into I
  $81E: LD I, $096 ; Load 096 into I
  $824: LD I, $428 ; Load 428 into I
  $826: LD I, $F13 ; Load F13 into I
  $868: LD I, $25F ; Load 25F into I
  $876: LD I, $389 ; Load 389 into I
  $908: LD I, $E20 ; Load E20 into I
  $91C: LD I, $EE2 ; Load EE2 into I
  $93C: LD I, $E33 ; Load E33 into I
  $956: LD I, $593 ; Load 593 into I
  $95C: LD I, $EE0 ; Load EE0 into I
  $966: LD I, $54A ; Load 54A into I
  $99A: LD I, $E6F ; Load E6F into I
  $9C4: LD I, $FF6 ; Load FF6 into I
  $A40: LD I, $CC9 ; Load CC9 into I
  $A7C: LD I, $54B ; Load 54B into I
  $AC8: LD I, $30B ; Load 30B into I
  $AD4: LD I, $F69 ; Load F69 into I
  $B12: LD I, $B45 ; Load B45 into I
  $B38: LD I, $988 ; Load 988 into I
  $B96: LD I, $CA6 ; Load CA6 into I
  $BB8: LD I, $A32 ; Load A32 into I
  $BC4: LD I, $8AF ; Load 8AF into I
  $BDC: LD I, $AD5 ; Load AD5 into I
  $C00: LD I, $7FE ; Load 7FE into I
  $C1E: LD I, $CC2 ; Load CC2 into I
  $D04: LD I, $868 ; Load 868 into I
  $D26: LD I, $5A7 ; Load 5A7 into I
  $D3E: LD I, $ECA ; Load ECA into I
  $D50: LD I, $B2B ; Load B2B into I
  $D60: LD I, $189 ; Load 189 into I
  $D92: LD I, $5F2 ; Load 5F2 into I
  $DA2: LD I, $0EF ; Load 0EF into I
  $DAE: LD I, $868 ; Load 868 into I
  $DB2: LD I, $56D ; Load 56D into I
  $DB4: LD I, $07C ; Load 07C into I
  $DB6: LD I, $D63 ; Load D63 into I
  $DFE: LD I, $001 ; Load 001 into I
  $E08: LD I, $BA1 ; Load BA1 into I
  $E38: LD I, $E34 ; Load E34 into I
  $E3A: LD I, $54A ; Load 54A into I
  $E4E: LD I, $FE2 ; Load FE2 into I
  $E56: LD I, $D13 ; Load D13 into I
  $E7C: LD I, $D58 ; Load D58 into I
  $E8A: LD I, $793 ; Load 793 into I
  $E90: LD I, $939 ; Load 939 into I
  $EB6: LD I, $781 ; Load 781 into I
  $EE2: LD I, $19A ; Load 19A into I
  $F1E: LD I, $A37 ; Load A37 into I
  $F40: LD I, $A94 ; Load A94 into I
  $F54: LD I, $F31 ; Load F31 into I
  $F5A: LD I, $FC9 ; Load FC9 into I
  $F8C: LD I, $8C3 ; Load 8C3 into I
  $FA2: LD I, $DEE ; Load DEE into I
  $FA4: LD I, $7D9 ; Load 7D9 into I
  $FAC: LD I, $0A9 ; Load 0A9 into I
  $FB0: LD I, $60F ; Load 60F into I
  $FCE: LD I, $041 ; Load 041 into I
  $FD0: LD I, $CC3 ; Load CC3 into I
  $FD8: LD I, $D9C ; Load D9C into I
  $FE4: LD I, $F17 ; Load F17 into I
  $FEA: LD I, $AC1 ; Load AC1 into I
  $FF6: LD I, $737 ; Load 737 into I
  $FF8: LD I, $3CD ; Load 3CD into I

CONTROL FLOW ANALYSIS:
Jumps: 203
Calls: 124
Branches: 263
Loops: 110
Loop Structures:
  $28C -> $122 (backward jump)
  $322 -> $044 (backward jump)
  $34E -> $1F7 (backward jump)
  $408 -> $3A9 (backward jump)
  $468 -> $24C (backward jump)
  $4F6 -> $009 (backward jump)
  $4FE -> $226 (backward jump)
  $502 -> $4CD (backward jump)
  $554 -> $40B (backward jump)
  $5AE -> $2EB (backward jump)
  $602 -> $233 (backward jump)
  $620 -> $021 (backward jump)
  $634 -> $0BB (backward jump)
  $682 -> $5FC (backward jump)
  $690 -> $641 (backward jump)
  $698 -> $445 (backward jump)
  $6A8 -> $512 (backward jump)
  $6F2 -> $279 (backward jump)
  $6F8 -> $3E5 (backward jump)
  $736 -> $6EB (backward jump)
  $748 -> $049 (backward jump)
  $758 -> $56B (backward jump)
  $764 -> $495 (backward jump)
  $792 -> $60F (backward jump)
  $7A2 -> $3BE (backward jump)
  $7C0 -> $5BA (backward jump)
  $7DE -> $2D2 (backward jump)
  $7F0 -> $51E (backward jump)
  $81C -> $62A (backward jump)
  $82A -> $545 (backward jump)
  $842 -> $734 (backward jump)
  $850 -> $064 (backward jump)
  $882 -> $05C (backward jump)
  $884 -> $23F (backward jump)
  $88A -> $39F (backward jump)
  $892 -> $1D0 (backward jump)
  $906 -> $5CE (backward jump)
  $91A -> $0F6 (backward jump)
  $94E -> $29A (backward jump)
  $952 -> $819 (backward jump)
  $95A -> $436 (backward jump)
  $984 -> $7A9 (backward jump)
  $9CC -> $6DB (backward jump)
  $A36 -> $272 (backward jump)
  $A56 -> $71E (backward jump)
  $A72 -> $487 (backward jump)
  $A80 -> $4FA (backward jump)
  $AA6 -> $0CB (backward jump)
  $AB2 -> $651 (backward jump)
  $ABE -> $204 (backward jump)
  $AEC -> $712 (backward jump)
  $AF0 -> $3FE (backward jump)
  $B0C -> $363 (backward jump)
  $B18 -> $332 (backward jump)
  $B1C -> $AB5 (backward jump)
  $B24 -> $783 (backward jump)
  $B46 -> $998 (backward jump)
  $B68 -> $359 (backward jump)
  $B8E -> $5AA (backward jump)
  $B94 -> $68C (backward jump)
  $BA4 -> $0F6 (backward jump)
  $BC6 -> $245 (backward jump)
  $BCA -> $2E5 (backward jump)
  $BCC -> $22F (backward jump)
  $BD0 -> $6E7 (backward jump)
  $C1A -> $8AA (backward jump)
  $C46 -> $AAA (backward jump)
  $C60 -> $95E (backward jump)
  $C62 -> $3DB (backward jump)
  $C66 -> $67E (backward jump)
  $C84 -> $0F6 (backward jump)
  $C9C -> $114 (backward jump)
  $CD0 -> $4F4 (backward jump)
  $CD2 -> $244 (backward jump)
  $CE0 -> $433 (backward jump)
  $CF0 -> $7C2 (backward jump)
  $CF2 -> $B6C (backward jump)
  $D06 -> $0F7 (backward jump)
  $D2C -> $896 (backward jump)
  $D80 -> $064 (backward jump)
  $D94 -> $2EA (backward jump)
  $D96 -> $4B3 (backward jump)
  $DAA -> $2E6 (backward jump)
  $DBA -> $42C (backward jump)
  $DE4 -> $811 (backward jump)
  $DF4 -> $49A (backward jump)
  $E18 -> $B53 (backward jump)
  $E22 -> $53D (backward jump)
  $E24 -> $6A6 (backward jump)
  $E3C -> $617 (backward jump)
  $E58 -> $0A1 (backward jump)
  $E6A -> $17A (backward jump)
  $E86 -> $6A2 (backward jump)
  $EBC -> $813 (backward jump)
  $ED6 -> $851 (backward jump)
  $EE0 -> $792 (backward jump)
  $F2A -> $AA6 (backward jump)
  $F50 -> $8D2 (backward jump)
  $F5C -> $872 (backward jump)
  $F60 -> $36A (backward jump)
  $F82 -> $847 (backward jump)
  $F88 -> $714 (backward jump)
  $F96 -> $C05 (backward jump)
  $FAA -> $763 (backward jump)
  $FB2 -> $EC5 (backward jump)
  $FC0 -> $839 (backward jump)
  $FC6 -> $392 (backward jump)
  $FE0 -> $3D9 (backward jump)
  $FE2 -> $CC7 (backward jump)
  $FEE -> $435 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $D814   DRW      V8, V1, #4      ; Draw 4-byte sprite at V8, V1
$202    $8062   AND      V0, V6          ; V0 &= V6
$204    $26F2   CALL     $6F2            ; Call subroutine at 6F2
$206    $8D07   SUBN     VD, V0          ; VD = V0 - VD, VF = !borrow
$208    $247B   CALL     $47B            ; Call subroutine at 47B
$20A    $1482   JP       $482            ; Jump to 482
$20C    $D180   DRW      V1, V8, #0      ; Draw 0-byte sprite at V1, V8
$20E    $2BF1   CALL     $BF1            ; Call subroutine at BF1
$210    $D357   DRW      V3, V5, #7      ; Draw 7-byte sprite at V3, V5
$212    $E652   UNKNOWN  $E652           ; Unknown Exxx instruction
$214    $83BD   UNKNOWN  83BD            ; Unknown 8xxx instruction
$216    $987D   UNKNOWN  $987D           ; Unknown 9xxx instruction
$218    $AF7D   LD       I, $F7D         ; Load F7D into I
$21A    $5CD1   UNKNOWN  $5CD1           ; Unknown 5xxx instruction
$21C    $F8A8   UNKNOWN  F8A8            ; Unknown Fxxx instruction
$21E    $8410   LD       V4, V1          ; V4 = V1
$220    $36AA   SE       V6, #AA         ; Skip if V6 == 170
$222    $19BB   JP       $9BB            ; Jump to 9BB
$224    $5975   UNKNOWN  $5975           ; Unknown 5xxx instruction
$226    $FB9C   UNKNOWN  FB9C            ; Unknown Fxxx instruction
$228    $C21E   RND      V2, #1E         ; V2 = random & 1E
$22A    $CBAD   RND      VB, #AD         ; VB = random & AD
$22C    $C409   RND      V4, #09         ; V4 = random & 09
$22E    $9C9D   UNKNOWN  $9C9D           ; Unknown 9xxx instruction
$230    $18FB   JP       $8FB            ; Jump to 8FB
$232    $A104   LD       I, $104         ; Load 104 into I
$234    $C917   RND      V9, #17         ; V9 = random & 17
$236    $AC52   LD       I, $C52         ; Load C52 into I
$238    $17B9   JP       $7B9            ; Jump to 7B9
$23A    $C1DC   RND      V1, #DC         ; V1 = random & DC
$23C    $5FE6   UNKNOWN  $5FE6           ; Unknown 5xxx instruction
$23E    $4E55   SNE      VE, #55         ; Skip if VE != 85
$240    $3F1A   SE       VF, #1A         ; Skip if VF == 26
$242    $0113   SYS      $113            ; System call to 113
$244    $F94B   UNKNOWN  F94B            ; Unknown Fxxx instruction
$246    $277C   CALL     $77C            ; Call subroutine at 77C
$248    $0320   SYS      $320            ; System call to 320
$24A    $57E2   UNKNOWN  $57E2           ; Unknown 5xxx instruction
$24C    $2DF9   CALL     $DF9            ; Call subroutine at DF9
$24E    $E916   UNKNOWN  $E916           ; Unknown Exxx instruction
$250    $1D3E   JP       $D3E            ; Jump to D3E
$252    $9876   UNKNOWN  $9876           ; Unknown 9xxx instruction
$254    $D8F9   DRW      V8, VF, #9      ; Draw 9-byte sprite at V8, VF
$256    $D210   DRW      V2, V1, #0      ; Draw 0-byte sprite at V2, V1
$258    $E026   UNKNOWN  $E026           ; Unknown Exxx instruction
$25A    $0BBF   SYS      $BBF            ; System call to BBF
$25C    $AFA9   LD       I, $FA9         ; Load FA9 into I
$25E    $2841   CALL     $841            ; Call subroutine at 841
$260    $BAC7   JP       V0, $AC7        ; Jump to V0 + AC7
$262    $DAD7   DRW      VA, VD, #7      ; Draw 7-byte sprite at VA, VD
$264    $B9C8   JP       V0, $9C8        ; Jump to V0 + 9C8
$266    $DFB0   DRW      VF, VB, #0      ; Draw 0-byte sprite at VF, VB
$268    $31B7   SE       V1, #B7         ; Skip if V1 == 183
$26A    $D64F   DRW      V6, V4, #F      ; Draw 15-byte sprite at V6, V4
$26C    $ACF7   LD       I, $CF7         ; Load CF7 into I
$26E    $3AE4   SE       VA, #E4         ; Skip if VA == 228
$270    $2292   CALL     $292            ; Call subroutine at 292
$272    $7C48   ADD      VC, #48         ; Add 72 to VC
$274    $8891   OR       V8, V9          ; V8 |= V9
$276    $1499   JP       $499            ; Jump to 499
$278    $7018   ADD      V0, #18         ; Add 24 to V0
$27A    $1871   JP       $871            ; Jump to 871
$27C    $76D0   ADD      V6, #D0         ; Add 208 to V6
$27E    $E582   UNKNOWN  $E582           ; Unknown Exxx instruction
$280    $C518   RND      V5, #18         ; V5 = random & 18
$282    $F0E2   UNKNOWN  F0E2            ; Unknown Fxxx instruction
$284    $9B82   UNKNOWN  $9B82           ; Unknown 9xxx instruction
$286    $CF55   RND      VF, #55         ; VF = random & 55
$288    $3D1F   SE       VD, #1F         ; Skip if VD == 31
$28A    $0C3F   SYS      $C3F            ; System call to C3F
$28C    $B122   JP       V0, $122        ; Jump to V0 + 122
$28E    $B5E9   JP       V0, $5E9        ; Jump to V0 + 5E9
$290    $C551   RND      V5, #51         ; V5 = random & 51
$292    $F0F1   UNKNOWN  F0F1            ; Unknown Fxxx instruction
$294    $BB50   JP       V0, $B50        ; Jump to V0 + B50
$296    $5050   SE       V0, V5          ; Skip if V0 == V5
$298    $5050   SE       V0, V5          ; Skip if V0 == V5
$29A    $5050   SE       V0, V5          ; Skip if V0 == V5
$29C    $5050   SE       V0, V5          ; Skip if V0 == V5
$29E    $5050   SE       V0, V5          ; Skip if V0 == V5
$2A0    $5050   SE       V0, V5          ; Skip if V0 == V5
$2A2    $5050   SE       V0, V5          ; Skip if V0 == V5
$2A4    $5050   SE       V0, V5          ; Skip if V0 == V5
$2A6    $5050   SE       V0, V5          ; Skip if V0 == V5
$2A8    $5050   SE       V0, V5          ; Skip if V0 == V5
$2AA    $5050   SE       V0, V5          ; Skip if V0 == V5
$2AC    $5050   SE       V0, V5          ; Skip if V0 == V5
$2AE    $5050   SE       V0, V5          ; Skip if V0 == V5
$2B0    $5050   SE       V0, V5          ; Skip if V0 == V5
$2B2    $5050   SE       V0, V5          ; Skip if V0 == V5
$2B4    $5050   SE       V0, V5          ; Skip if V0 == V5
$2B6    $5050   SE       V0, V5          ; Skip if V0 == V5
$2B8    $5050   SE       V0, V5          ; Skip if V0 == V5
$2BA    $5050   SE       V0, V5          ; Skip if V0 == V5
$2BC    $5050   SE       V0, V5          ; Skip if V0 == V5
$2BE    $5050   SE       V0, V5          ; Skip if V0 == V5
$2C0    $5050   SE       V0, V5          ; Skip if V0 == V5
$2C2    $5050   SE       V0, V5          ; Skip if V0 == V5
$2C4    $5050   SE       V0, V5          ; Skip if V0 == V5
$2C6    $5050   SE       V0, V5          ; Skip if V0 == V5
$2C8    $5050   SE       V0, V5          ; Skip if V0 == V5
$2CA    $5050   SE       V0, V5          ; Skip if V0 == V5
$2CC    $5050   SE       V0, V5          ; Skip if V0 == V5
$2CE    $5050   SE       V0, V5          ; Skip if V0 == V5
$2D0    $5050   SE       V0, V5          ; Skip if V0 == V5
$2D2    $5050   SE       V0, V5          ; Skip if V0 == V5
$2D4    $5050   SE       V0, V5          ; Skip if V0 == V5
$2D6    $5050   SE       V0, V5          ; Skip if V0 == V5
$2D8    $5050   SE       V0, V5          ; Skip if V0 == V5
$2DA    $5050   SE       V0, V5          ; Skip if V0 == V5
$2DC    $5050   SE       V0, V5          ; Skip if V0 == V5
$2DE    $5050   SE       V0, V5          ; Skip if V0 == V5
$2E0    $5050   SE       V0, V5          ; Skip if V0 == V5
$2E2    $5050   SE       V0, V5          ; Skip if V0 == V5
$2E4    $5050   SE       V0, V5          ; Skip if V0 == V5
$2E6    $5050   SE       V0, V5          ; Skip if V0 == V5
$2E8    $5050   SE       V0, V5          ; Skip if V0 == V5
$2EA    $5050   SE       V0, V5          ; Skip if V0 == V5
$2EC    $5050   SE       V0, V5          ; Skip if V0 == V5
$2EE    $5050   SE       V0, V5          ; Skip if V0 == V5
$2F0    $5050   SE       V0, V5          ; Skip if V0 == V5
$2F2    $5050   SE       V0, V5          ; Skip if V0 == V5
$2F4    $5050   SE       V0, V5          ; Skip if V0 == V5
$2F6    $5050   SE       V0, V5          ; Skip if V0 == V5
$2F8    $5050   SE       V0, V5          ; Skip if V0 == V5
$2FA    $5050   SE       V0, V5          ; Skip if V0 == V5
$2FC    $5050   SE       V0, V5          ; Skip if V0 == V5
$2FE    $5050   SE       V0, V5          ; Skip if V0 == V5
$300    $5050   SE       V0, V5          ; Skip if V0 == V5
$302    $5050   SE       V0, V5          ; Skip if V0 == V5
$304    $506C   UNKNOWN  $506C           ; Unknown 5xxx instruction
$306    $8AB4   ADD      VA, VB          ; VA += VB, VF = carry
$308    $DDDA   DRW      VD, VD, #A      ; Draw 10-byte sprite at VD, VD
$30A    $23AC   CALL     $3AC            ; Call subroutine at 3AC
$30C    $813B   UNKNOWN  813B            ; Unknown 8xxx instruction
$30E    $22EA   CALL     $2EA            ; Call subroutine at 2EA
$310    $85B2   AND      V5, VB          ; V5 &= VB
$312    $967C   UNKNOWN  $967C           ; Unknown 9xxx instruction
$314    $5AFD   UNKNOWN  $5AFD           ; Unknown 5xxx instruction
$316    $573E   UNKNOWN  $573E           ; Unknown 5xxx instruction
$318    $E45F   UNKNOWN  $E45F           ; Unknown Exxx instruction
$31A    $5BBB   UNKNOWN  $5BBB           ; Unknown 5xxx instruction
$31C    $91CD   UNKNOWN  $91CD           ; Unknown 9xxx instruction
$31E    $92C7   UNKNOWN  $92C7           ; Unknown 9xxx instruction
$320    $2571   CALL     $571            ; Call subroutine at 571
$322    $B044   JP       V0, $044        ; Jump to V0 + 044
$324    $92CA   UNKNOWN  $92CA           ; Unknown 9xxx instruction
$326    $4E4D   SNE      VE, #4D         ; Skip if VE != 77
$328    $84A6   SHR      V4              ; V4 >>= 1, VF = LSB
$32A    $BAC6   JP       V0, $AC6        ; Jump to V0 + AC6
$32C    $6D0E   LD       VD, #0E         ; Load 14 into VD
$32E    $4B22   SNE      VB, #22         ; Skip if VB != 34
$330    $244C   CALL     $44C            ; Call subroutine at 44C
$332    $79C3   ADD      V9, #C3         ; Add 195 to V9
$334    $808C   UNKNOWN  808C            ; Unknown 8xxx instruction
$336    $ABE6   LD       I, $BE6         ; Load BE6 into I
$338    $888B   UNKNOWN  888B            ; Unknown 8xxx instruction
$33A    $B7AE   JP       V0, $7AE        ; Jump to V0 + 7AE
$33C    $5856   UNKNOWN  $5856           ; Unknown 5xxx instruction
$33E    $284F   CALL     $84F            ; Call subroutine at 84F
$340    $7048   ADD      V0, #48         ; Add 72 to V0
$342    $D075   DRW      V0, V7, #5      ; Draw 5-byte sprite at V0, V7
$344    $6C66   LD       VC, #66         ; Load 102 into VC
$346    $1A6F   JP       $A6F            ; Jump to A6F
$348    $F37F   UNKNOWN  F37F            ; Unknown Fxxx instruction
$34A    $E286   UNKNOWN  $E286           ; Unknown Exxx instruction
$34C    $2297   CALL     $297            ; Call subroutine at 297
$34E    $B1F7   JP       V0, $1F7        ; Jump to V0 + 1F7
$350    $3043   SE       V0, #43         ; Skip if V0 == 67
$352    $EC77   UNKNOWN  $EC77           ; Unknown Exxx instruction
$354    $230C   CALL     $30C            ; Call subroutine at 30C
$356    $D1E5   DRW      V1, VE, #5      ; Draw 5-byte sprite at V1, VE
$358    $5FEF   UNKNOWN  $5FEF           ; Unknown 5xxx instruction
$35A    $D1A5   DRW      V1, VA, #5      ; Draw 5-byte sprite at V1, VA
$35C    $18DC   JP       $8DC            ; Jump to 8DC
$35E    $5471   UNKNOWN  $5471           ; Unknown 5xxx instruction
$360    $F8E9   UNKNOWN  F8E9            ; Unknown Fxxx instruction
$362    $91B2   UNKNOWN  $91B2           ; Unknown 9xxx instruction
$364    $7B3C   ADD      VB, #3C         ; Add 60 to VB
$366    $B83F   JP       V0, $83F        ; Jump to V0 + 83F
$368    $0FB9   SYS      $FB9            ; System call to FB9
$36A    $0D75   SYS      $D75            ; System call to D75
$36C    $2E35   CALL     $E35            ; Call subroutine at E35
$36E    $01D2   SYS      $1D2            ; System call to 1D2
$370    $AAC4   LD       I, $AC4         ; Load AC4 into I
$372    $7B9E   ADD      VB, #9E         ; Add 158 to VB
$374    $C28D   RND      V2, #8D         ; V2 = random & 8D
$376    $0DB6   SYS      $DB6            ; System call to DB6
$378    $83F4   ADD      V3, VF          ; V3 += VF, VF = carry
$37A    $3FCE   SE       VF, #CE         ; Skip if VF == 206
$37C    $0560   SYS      $560            ; System call to 560
$37E    $9F44   UNKNOWN  $9F44           ; Unknown 9xxx instruction
$380    $343E   SE       V4, #3E         ; Skip if V4 == 62
$382    $2A1D   CALL     $A1D            ; Call subroutine at A1D
$384    $8B4A   UNKNOWN  8B4A            ; Unknown 8xxx instruction
$386    $CF01   RND      VF, #01         ; VF = random & 01
$388    $C14C   RND      V1, #4C         ; V1 = random & 4C
$38A    $6FEA   LD       VF, #EA         ; Load 234 into VF
$38C    $CC6A   RND      VC, #6A         ; VC = random & 6A
$38E    $634A   LD       V3, #4A         ; Load 74 into V3
$390    $C1B6   RND      V1, #B6         ; V1 = random & B6
$392    $158D   JP       $58D            ; Jump to 58D
$394    $F1B4   UNKNOWN  F1B4            ; Unknown Fxxx instruction
$396    $68BA   LD       V8, #BA         ; Load 186 into V8
$398    $DD70   DRW      VD, V7, #0      ; Draw 0-byte sprite at VD, V7
$39A    $CD96   RND      VD, #96         ; VD = random & 96
$39C    $ADB8   LD       I, $DB8         ; Load DB8 into I
$39E    $80C0   LD       V0, VC          ; V0 = VC
$3A0    $86DB   UNKNOWN  86DB            ; Unknown 8xxx instruction
$3A2    $5C12   UNKNOWN  $5C12           ; Unknown 5xxx instruction
$3A4    $D4BA   DRW      V4, VB, #A      ; Draw 10-byte sprite at V4, VB
$3A6    $67BF   LD       V7, #BF         ; Load 191 into V7
$3A8    $6C5A   LD       VC, #5A         ; Load 90 into VC
$3AA    $FF74   UNKNOWN  FF74            ; Unknown Fxxx instruction
$3AC    $A247   LD       I, $247         ; Load 247 into I
$3AE    $5084   UNKNOWN  $5084           ; Unknown 5xxx instruction
$3B0    $A8FE   LD       I, $8FE         ; Load 8FE into I
$3B2    $0B1B   SYS      $B1B            ; System call to B1B
$3B4    $0022   SYS      $022            ; System call to 022
$3B6    $E62D   UNKNOWN  $E62D           ; Unknown Exxx instruction
$3B8    $EB8A   UNKNOWN  $EB8A           ; Unknown Exxx instruction
$3BA    $72C3   ADD      V2, #C3         ; Add 195 to V2
$3BC    $8D3E   SHL      VD              ; VD <<= 1, VF = MSB
$3BE    $4EBD   SNE      VE, #BD         ; Skip if VE != 189
$3C0    $D61C   DRW      V6, V1, #C      ; Draw 12-byte sprite at V6, V1
$3C2    $58C8   UNKNOWN  $58C8           ; Unknown 5xxx instruction
$3C4    $5C64   UNKNOWN  $5C64           ; Unknown 5xxx instruction
$3C6    $8CBD   UNKNOWN  8CBD            ; Unknown 8xxx instruction
$3C8    $3D6B   SE       VD, #6B         ; Skip if VD == 107
$3CA    $DA91   DRW      VA, V9, #1      ; Draw 1-byte sprite at VA, V9
$3CC    $D866   DRW      V8, V6, #6      ; Draw 6-byte sprite at V8, V6
$3CE    $9915   UNKNOWN  $9915           ; Unknown 9xxx instruction
$3D0    $D169   DRW      V1, V6, #9      ; Draw 9-byte sprite at V1, V6
$3D2    $B4BA   JP       V0, $4BA        ; Jump to V0 + 4BA
$3D4    $9A8B   UNKNOWN  $9A8B           ; Unknown 9xxx instruction
$3D6    $B43F   JP       V0, $43F        ; Jump to V0 + 43F
$3D8    $BB48   JP       V0, $B48        ; Jump to V0 + B48
$3DA    $56B8   UNKNOWN  $56B8           ; Unknown 5xxx instruction
$3DC    $3791   SE       V7, #91         ; Skip if V7 == 145
$3DE    $0C19   SYS      $C19            ; System call to C19
$3E0    $0C33   SYS      $C33            ; System call to C33
$3E2    $98A6   UNKNOWN  $98A6           ; Unknown 9xxx instruction
$3E4    $02FD   SYS      $2FD            ; System call to 2FD
$3E6    $8B04   ADD      VB, V0          ; VB += V0, VF = carry
$3E8    $8925   SUB      V9, V2          ; V9 -= V2, VF = !borrow
$3EA    $E4C6   UNKNOWN  $E4C6           ; Unknown Exxx instruction
$3EC    $CE4F   RND      VE, #4F         ; VE = random & 4F
$3EE    $7BCA   ADD      VB, #CA         ; Add 202 to VB
$3F0    $A49E   LD       I, $49E         ; Load 49E into I
$3F2    $8332   AND      V3, V3          ; V3 &= V3
$3F4    $382A   SE       V8, #2A         ; Skip if V8 == 42
$3F6    $950F   UNKNOWN  $950F           ; Unknown 9xxx instruction
$3F8    $255F   CALL     $55F            ; Call subroutine at 55F
$3FA    $ABC1   LD       I, $BC1         ; Load BC1 into I
$3FC    $9470   SNE      V4, V7          ; Skip if V4 != V7
$3FE    $7DA4   ADD      VD, #A4         ; Add 164 to VD
$400    $3360   SE       V3, #60         ; Skip if V3 == 96
$402    $FD5D   UNKNOWN  FD5D            ; Unknown Fxxx instruction
$404    $5D2F   UNKNOWN  $5D2F           ; Unknown 5xxx instruction
$406    $309A   SE       V0, #9A         ; Skip if V0 == 154
$408    $B3A9   JP       V0, $3A9        ; Jump to V0 + 3A9
$40A    $7B67   ADD      VB, #67         ; Add 103 to VB
$40C    $8125   SUB      V1, V2          ; V1 -= V2, VF = !borrow
$40E    $B919   JP       V0, $919        ; Jump to V0 + 919
$410    $F2E1   UNKNOWN  F2E1            ; Unknown Fxxx instruction
$412    $8CC6   SHR      VC              ; VC >>= 1, VF = LSB
$414    $C545   RND      V5, #45         ; V5 = random & 45
$416    $ECC7   UNKNOWN  $ECC7           ; Unknown Exxx instruction
$418    $BFEC   JP       V0, $FEC        ; Jump to V0 + FEC
$41A    $41C4   SNE      V1, #C4         ; Skip if V1 != 196
$41C    $FEDE   UNKNOWN  FEDE            ; Unknown Fxxx instruction
$41E    $4900   SNE      V9, #00         ; Skip if V9 != 0
$420    $C42E   RND      V4, #2E         ; V4 = random & 2E
$422    $4DDF   SNE      VD, #DF         ; Skip if VD != 223
$424    $B448   JP       V0, $448        ; Jump to V0 + 448
$426    $4BD6   SNE      VB, #D6         ; Skip if VB != 214
$428    $D713   DRW      V7, V1, #3      ; Draw 3-byte sprite at V7, V1
$42A    $2DCD   CALL     $DCD            ; Call subroutine at DCD
$42C    $0B46   SYS      $B46            ; System call to B46
$42E    $A13B   LD       I, $13B         ; Load 13B into I
$430    $2B53   CALL     $B53            ; Call subroutine at B53
$432    $0E18   SYS      $E18            ; System call to E18
$434    $44C7   SNE      V4, #C7         ; Skip if V4 != 199
$436    $5351   UNKNOWN  $5351           ; Unknown 5xxx instruction
$438    $0F59   SYS      $F59            ; System call to F59
$43A    $217B   CALL     $17B            ; Call subroutine at 17B
$43C    $F075   UNKNOWN  F075            ; Unknown Fxxx instruction
$43E    $095E   SYS      $95E            ; System call to 95E
$440    $5246   UNKNOWN  $5246           ; Unknown 5xxx instruction
$442    $74A0   ADD      V4, #A0         ; Add 160 to V4
$444    $EB11   UNKNOWN  $EB11           ; Unknown Exxx instruction
$446    $A539   LD       I, $539         ; Load 539 into I
$448    $8D75   SUB      VD, V7          ; VD -= V7, VF = !borrow
$44A    $A811   LD       I, $811         ; Load 811 into I
$44C    $6E7D   LD       VE, #7D         ; Load 125 into VE
$44E    $0C75   SYS      $C75            ; System call to C75
$450    $8531   OR       V5, V3          ; V5 |= V3
$452    $6B73   LD       VB, #73         ; Load 115 into VB
$454    $52C3   UNKNOWN  $52C3           ; Unknown 5xxx instruction
$456    $C81A   RND      V8, #1A         ; V8 = random & 1A
$458    $4CAE   SNE      VC, #AE         ; Skip if VC != 174
$45A    $6D14   LD       VD, #14         ; Load 20 into VD
$45C    $52A1   UNKNOWN  $52A1           ; Unknown 5xxx instruction
$45E    $B9E2   JP       V0, $9E2        ; Jump to V0 + 9E2
$460    $47ED   SNE      V7, #ED         ; Skip if V7 != 237
$462    $1C59   JP       $C59            ; Jump to C59
$464    $3454   SE       V4, #54         ; Skip if V4 == 84
$466    $E341   UNKNOWN  $E341           ; Unknown Exxx instruction
$468    $B24C   JP       V0, $24C        ; Jump to V0 + 24C
$46A    $A39C   LD       I, $39C         ; Load 39C into I
$46C    $77A5   ADD      V7, #A5         ; Add 165 to V7
$46E    $D2AF   DRW      V2, VA, #F      ; Draw 15-byte sprite at V2, VA
$470    $CFAC   RND      VF, #AC         ; VF = random & AC
$472    $9BBB   UNKNOWN  $9BBB           ; Unknown 9xxx instruction
$474    $33B3   SE       V3, #B3         ; Skip if V3 == 179
$476    $3188   SE       V1, #88         ; Skip if V1 == 136
$478    $80DD   UNKNOWN  80DD            ; Unknown 8xxx instruction
$47A    $BDC9   JP       V0, $DC9        ; Jump to V0 + DC9
$47C    $6563   LD       V5, #63         ; Load 99 into V5
$47E    $815C   UNKNOWN  815C            ; Unknown 8xxx instruction
$480    $5628   UNKNOWN  $5628           ; Unknown 5xxx instruction
$482    $DB5A   DRW      VB, V5, #A      ; Draw 10-byte sprite at VB, V5
$484    $9912   UNKNOWN  $9912           ; Unknown 9xxx instruction
$486    $FD76   UNKNOWN  FD76            ; Unknown Fxxx instruction
$488    $5BBE   UNKNOWN  $5BBE           ; Unknown 5xxx instruction
$48A    $6978   LD       V9, #78         ; Load 120 into V9
$48C    $E6BA   UNKNOWN  $E6BA           ; Unknown Exxx instruction
$48E    $FC8E   UNKNOWN  FC8E            ; Unknown Fxxx instruction
$490    $D2C9   DRW      V2, VC, #9      ; Draw 9-byte sprite at V2, VC
$492    $CEF5   RND      VE, #F5         ; VE = random & F5
$494    $8A8F   UNKNOWN  8A8F            ; Unknown 8xxx instruction
$496    $049C   SYS      $49C            ; System call to 49C
$498    $8B09   UNKNOWN  8B09            ; Unknown 8xxx instruction
$49A    $DFEC   DRW      VF, VE, #C      ; Draw 12-byte sprite at VF, VE
$49C    $2E11   CALL     $E11            ; Call subroutine at E11
$49E    $2FBB   CALL     $FBB            ; Call subroutine at FBB
$4A0    $A234   LD       I, $234         ; Load 234 into I
$4A2    $F80D   UNKNOWN  F80D            ; Unknown Fxxx instruction
$4A4    $6302   LD       V3, #02         ; Load 2 into V3
$4A6    $8F63   XOR      VF, V6          ; VF ^= V6
$4A8    $5EAB   UNKNOWN  $5EAB           ; Unknown 5xxx instruction
$4AA    $EDB6   UNKNOWN  $EDB6           ; Unknown Exxx instruction
$4AC    $6466   LD       V4, #66         ; Load 102 into V4
$4AE    $FBE9   UNKNOWN  FBE9            ; Unknown Fxxx instruction
$4B0    $CC9F   RND      VC, #9F         ; VC = random & 9F
$4B2    $2181   CALL     $181            ; Call subroutine at 181
$4B4    $9EA1   UNKNOWN  $9EA1           ; Unknown 9xxx instruction
$4B6    $7DC0   ADD      VD, #C0         ; Add 192 to VD
$4B8    $0FF3   SYS      $FF3            ; System call to FF3
$4BA    $6245   LD       V2, #45         ; Load 69 into V2
$4BC    $DFEF   DRW      VF, VE, #F      ; Draw 15-byte sprite at VF, VE
$4BE    $6B60   LD       VB, #60         ; Load 96 into VB
$4C0    $3E18   SE       VE, #18         ; Skip if VE == 24
$4C2    $9FE6   UNKNOWN  $9FE6           ; Unknown 9xxx instruction
$4C4    $6697   LD       V6, #97         ; Load 151 into V6
$4C6    $4093   SNE      V0, #93         ; Skip if V0 != 147
$4C8    $E2DC   UNKNOWN  $E2DC           ; Unknown Exxx instruction
$4CA    $CBB9   RND      VB, #B9         ; VB = random & B9
$4CC    $54D9   UNKNOWN  $54D9           ; Unknown 5xxx instruction
$4CE    $20E7   CALL     $0E7            ; Call subroutine at 0E7
$4D0    $9DCB   UNKNOWN  $9DCB           ; Unknown 9xxx instruction
$4D2    $0F92   SYS      $F92            ; System call to F92
$4D4    $2A8D   CALL     $A8D            ; Call subroutine at A8D
$4D6    $7C57   ADD      VC, #57         ; Add 87 to VC
$4D8    $3F22   SE       VF, #22         ; Skip if VF == 34
$4DA    $AA88   LD       I, $A88         ; Load A88 into I
$4DC    $4FEE   SNE      VF, #EE         ; Skip if VF != 238
$4DE    $7A18   ADD      VA, #18         ; Add 24 to VA
$4E0    $06D6   SYS      $6D6            ; System call to 6D6
$4E2    $5A13   UNKNOWN  $5A13           ; Unknown 5xxx instruction
$4E4    $7591   ADD      V5, #91         ; Add 145 to V5
$4E6    $B8A2   JP       V0, $8A2        ; Jump to V0 + 8A2
$4E8    $78AF   ADD      V8, #AF         ; Add 175 to V8
$4EA    $FD1D   UNKNOWN  FD1D            ; Unknown Fxxx instruction
$4EC    $64F7   LD       V4, #F7         ; Load 247 into V4
$4EE    $656A   LD       V5, #6A         ; Load 106 into V5
$4F0    $73A8   ADD      V3, #A8         ; Add 168 to V3
$4F2    $68B6   LD       V8, #B6         ; Load 182 into V8
$4F4    $ABB4   LD       I, $BB4         ; Load BB4 into I
$4F6    $1009   JP       $009            ; Jump to 009
$4F8    $1BC4   JP       $BC4            ; Jump to BC4
$4FA    $246C   CALL     $46C            ; Call subroutine at 46C
$4FC    $562B   UNKNOWN  $562B           ; Unknown 5xxx instruction
$4FE    $1226   JP       $226            ; Jump to 226
$500    $8F74   ADD      VF, V7          ; VF += V7, VF = carry
$502    $B4CD   JP       V0, $4CD        ; Jump to V0 + 4CD
$504    $43BB   SNE      V3, #BB         ; Skip if V3 != 187
$506    $F2E3   UNKNOWN  F2E3            ; Unknown Fxxx instruction
$508    $8C53   XOR      VC, V5          ; VC ^= V5
$50A    $35D5   SE       V5, #D5         ; Skip if V5 == 213
$50C    $AF29   LD       I, $F29         ; Load F29 into I
$50E    $7CDA   ADD      VC, #DA         ; Add 218 to VC
$510    $E650   UNKNOWN  $E650           ; Unknown Exxx instruction
$512    $BD81   JP       V0, $D81        ; Jump to V0 + D81
$514    $FB82   UNKNOWN  FB82            ; Unknown Fxxx instruction
$516    $2810   CALL     $810            ; Call subroutine at 810
$518    $82F5   SUB      V2, VF          ; V2 -= VF, VF = !borrow
$51A    $B576   JP       V0, $576        ; Jump to V0 + 576
$51C    $E8F5   UNKNOWN  $E8F5           ; Unknown Exxx instruction
$51E    $F629   LD       F, V6           ; I = sprite address for digit V6
$520    $0D91   SYS      $D91            ; System call to D91
$522    $5ED1   UNKNOWN  $5ED1           ; Unknown 5xxx instruction
$524    $A928   LD       I, $928         ; Load 928 into I
$526    $CB08   RND      VB, #08         ; VB = random & 08
$528    $7B38   ADD      VB, #38         ; Add 56 to VB
$52A    $8335   SUB      V3, V3          ; V3 -= V3, VF = !borrow
$52C    $FB1F   UNKNOWN  FB1F            ; Unknown Fxxx instruction
$52E    $BF1B   JP       V0, $F1B        ; Jump to V0 + F1B
$530    $FC23   UNKNOWN  FC23            ; Unknown Fxxx instruction
$532    $270B   CALL     $70B            ; Call subroutine at 70B
$534    $FDD9   UNKNOWN  FDD9            ; Unknown Fxxx instruction
$536    $4579   SNE      V5, #79         ; Skip if V5 != 121
$538    $09DE   SYS      $9DE            ; System call to 9DE
$53A    $5508   UNKNOWN  $5508           ; Unknown 5xxx instruction
$53C    $8F2C   UNKNOWN  8F2C            ; Unknown 8xxx instruction
$53E    $FA8B   UNKNOWN  FA8B            ; Unknown Fxxx instruction
$540    $F2F1   UNKNOWN  F2F1            ; Unknown Fxxx instruction
$542    $7616   ADD      V6, #16         ; Add 22 to V6
$544    $9B3D   UNKNOWN  $9B3D           ; Unknown 9xxx instruction
$546    $2870   CALL     $870            ; Call subroutine at 870
$548    $7F36   ADD      VF, #36         ; Add 54 to VF
$54A    $4235   SNE      V2, #35         ; Skip if V2 != 53
$54C    $50E6   UNKNOWN  $50E6           ; Unknown 5xxx instruction
$54E    $2565   CALL     $565            ; Call subroutine at 565
$550    $57C2   UNKNOWN  $57C2           ; Unknown 5xxx instruction
$552    $EDCA   UNKNOWN  $EDCA           ; Unknown Exxx instruction
$554    $140B   JP       $40B            ; Jump to 40B
$556    $92C6   UNKNOWN  $92C6           ; Unknown 9xxx instruction
$558    $B680   JP       V0, $680        ; Jump to V0 + 680
$55A    $DF35   DRW      VF, V3, #5      ; Draw 5-byte sprite at VF, V3
$55C    $E436   UNKNOWN  $E436           ; Unknown Exxx instruction
$55E    $8F33   XOR      VF, V3          ; VF ^= V3
$560    $ECB3   UNKNOWN  $ECB3           ; Unknown Exxx instruction
$562    $277E   CALL     $77E            ; Call subroutine at 77E
$564    $21EC   CALL     $1EC            ; Call subroutine at 1EC
$566    $A6A5   LD       I, $6A5         ; Load 6A5 into I
$568    $1701   JP       $701            ; Jump to 701
$56A    $1885   JP       $885            ; Jump to 885
$56C    $94E9   UNKNOWN  $94E9           ; Unknown 9xxx instruction
$56E    $BD56   JP       V0, $D56        ; Jump to V0 + D56
$570    $BD82   JP       V0, $D82        ; Jump to V0 + D82
$572    $2DAA   CALL     $DAA            ; Call subroutine at DAA
$574    $EC82   UNKNOWN  $EC82           ; Unknown Exxx instruction
$576    $CF65   RND      VF, #65         ; VF = random & 65
$578    $9352   UNKNOWN  $9352           ; Unknown 9xxx instruction
$57A    $5455   UNKNOWN  $5455           ; Unknown 5xxx instruction
$57C    $2A44   CALL     $A44            ; Call subroutine at A44
$57E    $5C5F   UNKNOWN  $5C5F           ; Unknown 5xxx instruction
$580    $6431   LD       V4, #31         ; Load 49 into V4
$582    $5345   UNKNOWN  $5345           ; Unknown 5xxx instruction
$584    $0C3C   SYS      $C3C            ; System call to C3C
$586    $9510   SNE      V5, V1          ; Skip if V5 != V1
$588    $A7BC   LD       I, $7BC         ; Load 7BC into I
$58A    $6286   LD       V2, #86         ; Load 134 into V2
$58C    $483A   SNE      V8, #3A         ; Skip if V8 != 58
$58E    $E06A   UNKNOWN  $E06A           ; Unknown Exxx instruction
$590    $9B7C   UNKNOWN  $9B7C           ; Unknown 9xxx instruction
$592    $E36F   UNKNOWN  $E36F           ; Unknown Exxx instruction
$594    $186F   JP       $86F            ; Jump to 86F
$596    $1D89   JP       $D89            ; Jump to D89
$598    $8FD6   SHR      VF              ; VF >>= 1, VF = LSB
$59A    $660C   LD       V6, #0C         ; Load 12 into V6
$59C    $2D90   CALL     $D90            ; Call subroutine at D90
$59E    $F23C   UNKNOWN  F23C            ; Unknown Fxxx instruction
$5A0    $1723   JP       $723            ; Jump to 723
$5A2    $9662   UNKNOWN  $9662           ; Unknown 9xxx instruction
$5A4    $3D06   SE       VD, #06         ; Skip if VD == 6
$5A6    $2911   CALL     $911            ; Call subroutine at 911
$5A8    $74B7   ADD      V4, #B7         ; Add 183 to V4
$5AA    $CAE1   RND      VA, #E1         ; VA = random & E1
$5AC    $A822   LD       I, $822         ; Load 822 into I
$5AE    $B2EB   JP       V0, $2EB        ; Jump to V0 + 2EB
$5B0    $29C6   CALL     $9C6            ; Call subroutine at 9C6
$5B2    $4BED   SNE      VB, #ED         ; Skip if VB != 237
$5B4    $0A12   SYS      $A12            ; System call to A12
$5B6    $6A14   LD       VA, #14         ; Load 20 into VA
$5B8    $679C   LD       V7, #9C         ; Load 156 into V7
$5BA    $444D   SNE      V4, #4D         ; Skip if V4 != 77
$5BC    $63A5   LD       V3, #A5         ; Load 165 into V3
$5BE    $02DB   SYS      $2DB            ; System call to 2DB
$5C0    $A782   LD       I, $782         ; Load 782 into I
$5C2    $A58E   LD       I, $58E         ; Load 58E into I
$5C4    $743E   ADD      V4, #3E         ; Add 62 to V4
$5C6    $5FE2   UNKNOWN  $5FE2           ; Unknown 5xxx instruction
$5C8    $7F51   ADD      VF, #51         ; Add 81 to VF
$5CA    $0A86   SYS      $A86            ; System call to A86
$5CC    $1CB2   JP       $CB2            ; Jump to CB2
$5CE    $E99E   SKP      V9              ; Skip if key V9 pressed
$5D0    $6D86   LD       VD, #86         ; Load 134 into VD
$5D2    $3D44   SE       VD, #44         ; Skip if VD == 68
$5D4    $E90A   UNKNOWN  $E90A           ; Unknown Exxx instruction
$5D6    $6E70   LD       VE, #70         ; Load 112 into VE
$5D8    $3A66   SE       VA, #66         ; Skip if VA == 102
$5DA    $BB92   JP       V0, $B92        ; Jump to V0 + B92
$5DC    $CE73   RND      VE, #73         ; VE = random & 73
$5DE    $711C   ADD      V1, #1C         ; Add 28 to V1
$5E0    $C0F9   RND      V0, #F9         ; V0 = random & F9
$5E2    $BEC9   JP       V0, $EC9        ; Jump to V0 + EC9
$5E4    $1A36   JP       $A36            ; Jump to A36
$5E6    $5498   UNKNOWN  $5498           ; Unknown 5xxx instruction
$5E8    $FAFC   UNKNOWN  FAFC            ; Unknown Fxxx instruction
$5EA    $7D6C   ADD      VD, #6C         ; Add 108 to VD
$5EC    $A2B3   LD       I, $2B3         ; Load 2B3 into I
$5EE    $8C31   OR       VC, V3          ; VC |= V3
$5F0    $5139   UNKNOWN  $5139           ; Unknown 5xxx instruction
$5F2    $3ABF   SE       VA, #BF         ; Skip if VA == 191
$5F4    $475A   SNE      V7, #5A         ; Skip if V7 != 90
$5F6    $BA01   JP       V0, $A01        ; Jump to V0 + A01
$5F8    $B686   JP       V0, $686        ; Jump to V0 + 686
$5FA    $267A   CALL     $67A            ; Call subroutine at 67A
$5FC    $C69D   RND      V6, #9D         ; V6 = random & 9D
$5FE    $5ADD   UNKNOWN  $5ADD           ; Unknown 5xxx instruction
$600    $28FC   CALL     $8FC            ; Call subroutine at 8FC
$602    $1233   JP       $233            ; Jump to 233
$604    $A4D4   LD       I, $4D4         ; Load 4D4 into I
$606    $5B82   UNKNOWN  $5B82           ; Unknown 5xxx instruction
$608    $E25B   UNKNOWN  $E25B           ; Unknown Exxx instruction
$60A    $9BA0   SNE      VB, VA          ; Skip if VB != VA
$60C    $ED6E   UNKNOWN  $ED6E           ; Unknown Exxx instruction
$60E    $5DFF   UNKNOWN  $5DFF           ; Unknown 5xxx instruction
$610    $AA78   LD       I, $A78         ; Load A78 into I
$612    $D6BE   DRW      V6, VB, #E      ; Draw 14-byte sprite at V6, VB
$614    $EBDE   UNKNOWN  $EBDE           ; Unknown Exxx instruction
$616    $CDF0   RND      VD, #F0         ; VD = random & F0
$618    $5582   UNKNOWN  $5582           ; Unknown 5xxx instruction
$61A    $DA74   DRW      VA, V7, #4      ; Draw 4-byte sprite at VA, V7
$61C    $1EED   JP       $EED            ; Jump to EED
$61E    $9DC4   UNKNOWN  $9DC4           ; Unknown 9xxx instruction
$620    $B021   JP       V0, $021        ; Jump to V0 + 021
$622    $5FEC   UNKNOWN  $5FEC           ; Unknown 5xxx instruction
$624    $F661   UNKNOWN  F661            ; Unknown Fxxx instruction
$626    $C9F4   RND      V9, #F4         ; V9 = random & F4
$628    $2884   CALL     $884            ; Call subroutine at 884
$62A    $9AE1   UNKNOWN  $9AE1           ; Unknown 9xxx instruction
$62C    $6EC2   LD       VE, #C2         ; Load 194 into VE
$62E    $21B0   CALL     $1B0            ; Call subroutine at 1B0
$630    $C113   RND      V1, #13         ; V1 = random & 13
$632    $CA0D   RND      VA, #0D         ; VA = random & 0D
$634    $10BB   JP       $0BB            ; Jump to 0BB
$636    $7B53   ADD      VB, #53         ; Add 83 to VB
$638    $A7E6   LD       I, $7E6         ; Load 7E6 into I
$63A    $60AD   LD       V0, #AD         ; Load 173 into V0
$63C    $DDE8   DRW      VD, VE, #8      ; Draw 8-byte sprite at VD, VE
$63E    $34CD   SE       V4, #CD         ; Skip if V4 == 205
$640    $E650   UNKNOWN  $E650           ; Unknown Exxx instruction
$642    $968E   UNKNOWN  $968E           ; Unknown 9xxx instruction
$644    $C31B   RND      V3, #1B         ; V3 = random & 1B
$646    $93E7   UNKNOWN  $93E7           ; Unknown 9xxx instruction
$648    $3CEE   SE       VC, #EE         ; Skip if VC == 238
$64A    $B873   JP       V0, $873        ; Jump to V0 + 873
$64C    $7283   ADD      V2, #83         ; Add 131 to V2
$64E    $1A27   JP       $A27            ; Jump to A27
$650    $F515   LD       DT, V5          ; Delay timer = V5
$652    $6EE6   LD       VE, #E6         ; Load 230 into VE
$654    $B942   JP       V0, $942        ; Jump to V0 + 942
$656    $417D   SNE      V1, #7D         ; Skip if V1 != 125
$658    $EDCB   UNKNOWN  $EDCB           ; Unknown Exxx instruction
$65A    $7CBD   ADD      VC, #BD         ; Add 189 to VC
$65C    $7262   ADD      V2, #62         ; Add 98 to V2
$65E    $6E13   LD       VE, #13         ; Load 19 into VE
$660    $0EEC   SYS      $EEC            ; System call to EEC
$662    $CC64   RND      VC, #64         ; VC = random & 64
$664    $8A02   AND      VA, V0          ; VA &= V0
$666    $0079   SYS      $079            ; System call to 079
$668    $F6D1   UNKNOWN  F6D1            ; Unknown Fxxx instruction
$66A    $3E39   SE       VE, #39         ; Skip if VE == 57
$66C    $F50B   UNKNOWN  F50B            ; Unknown Fxxx instruction
$66E    $E089   UNKNOWN  $E089           ; Unknown Exxx instruction
$670    $63AF   LD       V3, #AF         ; Load 175 into V3
$672    $A1C2   LD       I, $1C2         ; Load 1C2 into I
$674    $27DA   CALL     $7DA            ; Call subroutine at 7DA
$676    $99BB   UNKNOWN  $99BB           ; Unknown 9xxx instruction
$678    $6A9A   LD       VA, #9A         ; Load 154 into VA
$67A    $ACAC   LD       I, $CAC         ; Load CAC into I
$67C    $C1BE   RND      V1, #BE         ; V1 = random & BE
$67E    $F7D6   UNKNOWN  F7D6            ; Unknown Fxxx instruction
$680    $EE73   UNKNOWN  $EE73           ; Unknown Exxx instruction
$682    $B5FC   JP       V0, $5FC        ; Jump to V0 + 5FC
$684    $785E   ADD      V8, #5E         ; Add 94 to V8
$686    $BBE0   JP       V0, $BE0        ; Jump to V0 + BE0
$688    $D3D4   DRW      V3, VD, #4      ; Draw 4-byte sprite at V3, VD
$68A    $C674   RND      V6, #74         ; V6 = random & 74
$68C    $6DCB   LD       VD, #CB         ; Load 203 into VD
$68E    $F572   UNKNOWN  F572            ; Unknown Fxxx instruction
$690    $1641   JP       $641            ; Jump to 641
$692    $E15E   UNKNOWN  $E15E           ; Unknown Exxx instruction
$694    $CFEB   RND      VF, #EB         ; VF = random & EB
$696    $0B9C   SYS      $B9C            ; System call to B9C
$698    $1445   JP       $445            ; Jump to 445
$69A    $0B7B   SYS      $B7B            ; System call to B7B
$69C    $650F   LD       V5, #0F         ; Load 15 into V5
$69E    $AE5B   LD       I, $E5B         ; Load E5B into I
$6A0    $DD0A   DRW      VD, V0, #A      ; Draw 10-byte sprite at VD, V0
$6A2    $EE52   UNKNOWN  $EE52           ; Unknown Exxx instruction
$6A4    $9ED7   UNKNOWN  $9ED7           ; Unknown 9xxx instruction
$6A6    $5A39   UNKNOWN  $5A39           ; Unknown 5xxx instruction
$6A8    $1512   JP       $512            ; Jump to 512
$6AA    $8B5F   UNKNOWN  8B5F            ; Unknown 8xxx instruction
$6AC    $C7DB   RND      V7, #DB         ; V7 = random & DB
$6AE    $85F7   SUBN     V5, VF          ; V5 = VF - V5, VF = !borrow
$6B0    $DADA   DRW      VA, VD, #A      ; Draw 10-byte sprite at VA, VD
$6B2    $3F11   SE       VF, #11         ; Skip if VF == 17
$6B4    $9C1B   UNKNOWN  $9C1B           ; Unknown 9xxx instruction
$6B6    $E9E4   UNKNOWN  $E9E4           ; Unknown Exxx instruction
$6B8    $9037   UNKNOWN  $9037           ; Unknown 9xxx instruction
$6BA    $3A70   SE       VA, #70         ; Skip if VA == 112
$6BC    $EBC6   UNKNOWN  $EBC6           ; Unknown Exxx instruction
$6BE    $87EA   UNKNOWN  87EA            ; Unknown 8xxx instruction
$6C0    $8531   OR       V5, V3          ; V5 |= V3
$6C2    $E396   UNKNOWN  $E396           ; Unknown Exxx instruction
$6C4    $8E94   ADD      VE, V9          ; VE += V9, VF = carry
$6C6    $A1AE   LD       I, $1AE         ; Load 1AE into I
$6C8    $A87B   LD       I, $87B         ; Load 87B into I
$6CA    $C26D   RND      V2, #6D         ; V2 = random & 6D
$6CC    $A9BF   LD       I, $9BF         ; Load 9BF into I
$6CE    $30F6   SE       V0, #F6         ; Skip if V0 == 246
$6D0    $BC33   JP       V0, $C33        ; Jump to V0 + C33
$6D2    $A7DE   LD       I, $7DE         ; Load 7DE into I
$6D4    $0B76   SYS      $B76            ; System call to B76
$6D6    $D91F   DRW      V9, V1, #F      ; Draw 15-byte sprite at V9, V1
$6D8    $8529   UNKNOWN  8529            ; Unknown 8xxx instruction
$6DA    $D09D   DRW      V0, V9, #D      ; Draw 13-byte sprite at V0, V9
$6DC    $6EDC   LD       VE, #DC         ; Load 220 into VE
$6DE    $0AB9   SYS      $AB9            ; System call to AB9
$6E0    $FD00   UNKNOWN  FD00            ; Unknown Fxxx instruction
$6E2    $8779   UNKNOWN  8779            ; Unknown 8xxx instruction
$6E4    $4859   SNE      V8, #59         ; Skip if V8 != 89
$6E6    $8E30   LD       VE, V3          ; VE = V3
$6E8    $CD12   RND      VD, #12         ; VD = random & 12
$6EA    $4F35   SNE      VF, #35         ; Skip if VF != 53
$6EC    $5C99   UNKNOWN  $5C99           ; Unknown 5xxx instruction
$6EE    $6B29   LD       VB, #29         ; Load 41 into VB
$6F0    $1D65   JP       $D65            ; Jump to D65
$6F2    $B279   JP       V0, $279        ; Jump to V0 + 279
$6F4    $568E   UNKNOWN  $568E           ; Unknown 5xxx instruction
$6F6    $9CA5   UNKNOWN  $9CA5           ; Unknown 9xxx instruction
$6F8    $13E5   JP       $3E5            ; Jump to 3E5
$6FA    $BD64   JP       V0, $D64        ; Jump to V0 + D64
$6FC    $F021   UNKNOWN  F021            ; Unknown Fxxx instruction
$6FE    $DCA4   DRW      VC, VA, #4      ; Draw 4-byte sprite at VC, VA
$700    $F29A   UNKNOWN  F29A            ; Unknown Fxxx instruction
$702    $D924   DRW      V9, V2, #4      ; Draw 4-byte sprite at V9, V2
$704    $822C   UNKNOWN  822C            ; Unknown 8xxx instruction
$706    $D783   DRW      V7, V8, #3      ; Draw 3-byte sprite at V7, V8
$708    $32B9   SE       V2, #B9         ; Skip if V2 == 185
$70A    $30E0   SE       V0, #E0         ; Skip if V0 == 224
$70C    $4B71   SNE      VB, #71         ; Skip if VB != 113
$70E    $6634   LD       V6, #34         ; Load 52 into V6
$710    $2C65   CALL     $C65            ; Call subroutine at C65
$712    $915E   UNKNOWN  $915E           ; Unknown 9xxx instruction
$714    $3358   SE       V3, #58         ; Skip if V3 == 88
$716    $5B8E   UNKNOWN  $5B8E           ; Unknown 5xxx instruction
$718    $6EE5   LD       VE, #E5         ; Load 229 into VE
$71A    $9173   UNKNOWN  $9173           ; Unknown 9xxx instruction
$71C    $F522   UNKNOWN  F522            ; Unknown Fxxx instruction
$71E    $83E6   SHR      V3              ; V3 >>= 1, VF = LSB
$720    $1C57   JP       $C57            ; Jump to C57
$722    $6CB8   LD       VC, #B8         ; Load 184 into VC
$724    $015E   SYS      $15E            ; System call to 15E
$726    $A322   LD       I, $322         ; Load 322 into I
$728    $CD83   RND      VD, #83         ; VD = random & 83
$72A    $3B50   SE       VB, #50         ; Skip if VB == 80
$72C    $2FFA   CALL     $FFA            ; Call subroutine at FFA
$72E    $A98B   LD       I, $98B         ; Load 98B into I
$730    $EA8A   UNKNOWN  $EA8A           ; Unknown Exxx instruction
$732    $BD3E   JP       V0, $D3E        ; Jump to V0 + D3E
$734    $216F   CALL     $16F            ; Call subroutine at 16F
$736    $16EB   JP       $6EB            ; Jump to 6EB
$738    $7897   ADD      V8, #97         ; Add 151 to V8
$73A    $A37A   LD       I, $37A         ; Load 37A into I
$73C    $A153   LD       I, $153         ; Load 153 into I
$73E    $65D2   LD       V5, #D2         ; Load 210 into V5
$740    $D797   DRW      V7, V9, #7      ; Draw 7-byte sprite at V7, V9
$742    $6C08   LD       VC, #08         ; Load 8 into VC
$744    $65CC   LD       V5, #CC         ; Load 204 into V5
$746    $72DE   ADD      V2, #DE         ; Add 222 to V2
$748    $B049   JP       V0, $049        ; Jump to V0 + 049
$74A    $AC53   LD       I, $C53         ; Load C53 into I
$74C    $A207   LD       I, $207         ; Load 207 into I
$74E    $18B2   JP       $8B2            ; Jump to 8B2
$750    $D5E3   DRW      V5, VE, #3      ; Draw 3-byte sprite at V5, VE
$752    $AC71   LD       I, $C71         ; Load C71 into I
$754    $65B7   LD       V5, #B7         ; Load 183 into V5
$756    $E827   UNKNOWN  $E827           ; Unknown Exxx instruction
$758    $B56B   JP       V0, $56B        ; Jump to V0 + 56B
$75A    $E4A0   UNKNOWN  $E4A0           ; Unknown Exxx instruction
$75C    $AEF9   LD       I, $EF9         ; Load EF9 into I
$75E    $3ACD   SE       VA, #CD         ; Skip if VA == 205
$760    $615A   LD       V1, #5A         ; Load 90 into V1
$762    $BB95   JP       V0, $B95        ; Jump to V0 + B95
$764    $1495   JP       $495            ; Jump to 495
$766    $818A   UNKNOWN  818A            ; Unknown 8xxx instruction
$768    $6657   LD       V6, #57         ; Load 87 into V6
$76A    $2CD4   CALL     $CD4            ; Call subroutine at CD4
$76C    $B801   JP       V0, $801        ; Jump to V0 + 801
$76E    $D80F   DRW      V8, V0, #F      ; Draw 15-byte sprite at V8, V0
$770    $7D0F   ADD      VD, #0F         ; Add 15 to VD
$772    $F3E9   UNKNOWN  F3E9            ; Unknown Fxxx instruction
$774    $3C12   SE       VC, #12         ; Skip if VC == 18
$776    $C2E8   RND      V2, #E8         ; V2 = random & E8
$778    $BC71   JP       V0, $C71        ; Jump to V0 + C71
$77A    $084E   SYS      $84E            ; System call to 84E
$77C    $75BF   ADD      V5, #BF         ; Add 191 to V5
$77E    $A640   LD       I, $640         ; Load 640 into I
$780    $0294   SYS      $294            ; System call to 294
$782    $5ABA   UNKNOWN  $5ABA           ; Unknown 5xxx instruction
$784    $1B49   JP       $B49            ; Jump to B49
$786    $E27B   UNKNOWN  $E27B           ; Unknown Exxx instruction
$788    $A449   LD       I, $449         ; Load 449 into I
$78A    $41DE   SNE      V1, #DE         ; Skip if V1 != 222
$78C    $E3A9   UNKNOWN  $E3A9           ; Unknown Exxx instruction
$78E    $7AAA   ADD      VA, #AA         ; Add 170 to VA
$790    $6821   LD       V8, #21         ; Load 33 into V8
$792    $B60F   JP       V0, $60F        ; Jump to V0 + 60F
$794    $932A   UNKNOWN  $932A           ; Unknown 9xxx instruction
$796    $FCE6   UNKNOWN  FCE6            ; Unknown Fxxx instruction
$798    $0426   SYS      $426            ; System call to 426
$79A    $6FCD   LD       VF, #CD         ; Load 205 into VF
$79C    $BC59   JP       V0, $C59        ; Jump to V0 + C59
$79E    $9024   UNKNOWN  $9024           ; Unknown 9xxx instruction
$7A0    $5307   UNKNOWN  $5307           ; Unknown 5xxx instruction
$7A2    $B3BE   JP       V0, $3BE        ; Jump to V0 + 3BE
$7A4    $D500   DRW      V5, V0, #0      ; Draw 0-byte sprite at V5, V0
$7A6    $65FB   LD       V5, #FB         ; Load 251 into V5
$7A8    $F209   UNKNOWN  F209            ; Unknown Fxxx instruction
$7AA    $36C5   SE       V6, #C5         ; Skip if V6 == 197
$7AC    $F38F   UNKNOWN  F38F            ; Unknown Fxxx instruction
$7AE    $7F11   ADD      VF, #11         ; Add 17 to VF
$7B0    $6E24   LD       VE, #24         ; Load 36 into VE
$7B2    $BB95   JP       V0, $B95        ; Jump to V0 + B95
$7B4    $DBBE   DRW      VB, VB, #E      ; Draw 14-byte sprite at VB, VB
$7B6    $7B63   ADD      VB, #63         ; Add 99 to VB
$7B8    $DDAC   DRW      VD, VA, #C      ; Draw 12-byte sprite at VD, VA
$7BA    $4A94   SNE      VA, #94         ; Skip if VA != 148
$7BC    $5979   UNKNOWN  $5979           ; Unknown 5xxx instruction
$7BE    $4298   SNE      V2, #98         ; Skip if V2 != 152
$7C0    $15BA   JP       $5BA            ; Jump to 5BA
$7C2    $2535   CALL     $535            ; Call subroutine at 535
$7C4    $E9BB   UNKNOWN  $E9BB           ; Unknown Exxx instruction
$7C6    $8CA8   UNKNOWN  8CA8            ; Unknown 8xxx instruction
$7C8    $9BD1   UNKNOWN  $9BD1           ; Unknown 9xxx instruction
$7CA    $E756   UNKNOWN  $E756           ; Unknown Exxx instruction
$7CC    $7C27   ADD      VC, #27         ; Add 39 to VC
$7CE    $1DBA   JP       $DBA            ; Jump to DBA
$7D0    $0849   SYS      $849            ; System call to 849
$7D2    $5C0D   UNKNOWN  $5C0D           ; Unknown 5xxx instruction
$7D4    $5AA7   UNKNOWN  $5AA7           ; Unknown 5xxx instruction
$7D6    $4294   SNE      V2, #94         ; Skip if V2 != 148
$7D8    $5E02   UNKNOWN  $5E02           ; Unknown 5xxx instruction
$7DA    $E783   UNKNOWN  $E783           ; Unknown Exxx instruction
$7DC    $9F71   UNKNOWN  $9F71           ; Unknown 9xxx instruction
$7DE    $12D2   JP       $2D2            ; Jump to 2D2
$7E0    $A149   LD       I, $149         ; Load 149 into I
$7E2    $61BB   LD       V1, #BB         ; Load 187 into V1
$7E4    $293C   CALL     $93C            ; Call subroutine at 93C
$7E6    $761A   ADD      V6, #1A         ; Add 26 to V6
$7E8    $4C28   SNE      VC, #28         ; Skip if VC != 40
$7EA    $AC7A   LD       I, $C7A         ; Load C7A into I
$7EC    $2904   CALL     $904            ; Call subroutine at 904
$7EE    $26E5   CALL     $6E5            ; Call subroutine at 6E5
$7F0    $B51E   JP       V0, $51E        ; Jump to V0 + 51E
$7F2    $7752   ADD      V7, #52         ; Add 82 to V7
$7F4    $E06E   UNKNOWN  $E06E           ; Unknown Exxx instruction
$7F6    $CD59   RND      VD, #59         ; VD = random & 59
$7F8    $E655   UNKNOWN  $E655           ; Unknown Exxx instruction
$7FA    $8B32   AND      VB, V3          ; VB &= V3
$7FC    $671F   LD       V7, #1F         ; Load 31 into V7
$7FE    $A4FB   LD       I, $4FB         ; Load 4FB into I
$800    $480B   SNE      V8, #0B         ; Skip if V8 != 11
$802    $ED66   UNKNOWN  $ED66           ; Unknown Exxx instruction
$804    $26A4   CALL     $6A4            ; Call subroutine at 6A4
$806    $EE2B   UNKNOWN  $EE2B           ; Unknown Exxx instruction
$808    $A0BC   LD       I, $0BC         ; Load 0BC into I
$80A    $5668   UNKNOWN  $5668           ; Unknown 5xxx instruction
$80C    $BE33   JP       V0, $E33        ; Jump to V0 + E33
$80E    $2CDE   CALL     $CDE            ; Call subroutine at CDE
$810    $9D28   UNKNOWN  $9D28           ; Unknown 9xxx instruction
$812    $7662   ADD      V6, #62         ; Add 98 to V6
$814    $C8C5   RND      V8, #C5         ; V8 = random & C5
$816    $9D72   UNKNOWN  $9D72           ; Unknown 9xxx instruction
$818    $E668   UNKNOWN  $E668           ; Unknown Exxx instruction
$81A    $AF1D   LD       I, $F1D         ; Load F1D into I
$81C    $B62A   JP       V0, $62A        ; Jump to V0 + 62A
$81E    $A096   LD       I, $096         ; Load 096 into I
$820    $6C8F   LD       VC, #8F         ; Load 143 into VC
$822    $91C5   UNKNOWN  $91C5           ; Unknown 9xxx instruction
$824    $A428   LD       I, $428         ; Load 428 into I
$826    $AF13   LD       I, $F13         ; Load F13 into I
$828    $4121   SNE      V1, #21         ; Skip if V1 != 33
$82A    $B545   JP       V0, $545        ; Jump to V0 + 545
$82C    $3ED6   SE       VE, #D6         ; Skip if VE == 214
$82E    $F99A   UNKNOWN  F99A            ; Unknown Fxxx instruction
$830    $F0C9   UNKNOWN  F0C9            ; Unknown Fxxx instruction
$832    $376A   SE       V7, #6A         ; Skip if V7 == 106
$834    $8C0B   UNKNOWN  8C0B            ; Unknown 8xxx instruction
$836    $CE8C   RND      VE, #8C         ; VE = random & 8C
$838    $1923   JP       $923            ; Jump to 923
$83A    $E2C1   UNKNOWN  $E2C1           ; Unknown Exxx instruction
$83C    $78A5   ADD      V8, #A5         ; Add 165 to V8
$83E    $2E88   CALL     $E88            ; Call subroutine at E88
$840    $478E   SNE      V7, #8E         ; Skip if V7 != 142
$842    $B734   JP       V0, $734        ; Jump to V0 + 734
$844    $7867   ADD      V8, #67         ; Add 103 to V8
$846    $80A4   ADD      V0, VA          ; V0 += VA, VF = carry
$848    $D163   DRW      V1, V6, #3      ; Draw 3-byte sprite at V1, V6
$84A    $6317   LD       V3, #17         ; Load 23 into V3
$84C    $1D9D   JP       $D9D            ; Jump to D9D
$84E    $0C27   SYS      $C27            ; System call to C27
$850    $1064   JP       $064            ; Jump to 064
$852    $343B   SE       V4, #3B         ; Skip if V4 == 59
$854    $6F04   LD       VF, #04         ; Load 4 into VF
$856    $F984   UNKNOWN  F984            ; Unknown Fxxx instruction
$858    $2F28   CALL     $F28            ; Call subroutine at F28
$85A    $66D0   LD       V6, #D0         ; Load 208 into V6
$85C    $434C   SNE      V3, #4C         ; Skip if V3 != 76
$85E    $050B   SYS      $50B            ; System call to 50B
$860    $C3E0   RND      V3, #E0         ; V3 = random & E0
$862    $EAB6   UNKNOWN  $EAB6           ; Unknown Exxx instruction
$864    $93C8   UNKNOWN  $93C8           ; Unknown 9xxx instruction
$866    $3C35   SE       VC, #35         ; Skip if VC == 53
$868    $A25F   LD       I, $25F         ; Load 25F into I
$86A    $5D13   UNKNOWN  $5D13           ; Unknown 5xxx instruction
$86C    $6282   LD       V2, #82         ; Load 130 into V2
$86E    $5CCC   UNKNOWN  $5CCC           ; Unknown 5xxx instruction
$870    $2409   CALL     $409            ; Call subroutine at 409
$872    $969F   UNKNOWN  $969F           ; Unknown 9xxx instruction
$874    $38AB   SE       V8, #AB         ; Skip if V8 == 171
$876    $A389   LD       I, $389         ; Load 389 into I
$878    $F997   UNKNOWN  F997            ; Unknown Fxxx instruction
$87A    $DAC5   DRW      VA, VC, #5      ; Draw 5-byte sprite at VA, VC
$87C    $7369   ADD      V3, #69         ; Add 105 to V3
$87E    $7F36   ADD      VF, #36         ; Add 54 to VF
$880    $887D   UNKNOWN  887D            ; Unknown 8xxx instruction
$882    $B05C   JP       V0, $05C        ; Jump to V0 + 05C
$884    $123F   JP       $23F            ; Jump to 23F
$886    $44D6   SNE      V4, #D6         ; Skip if V4 != 214
$888    $20FE   CALL     $0FE            ; Call subroutine at 0FE
$88A    $139F   JP       $39F            ; Jump to 39F
$88C    $4C71   SNE      VC, #71         ; Skip if VC != 113
$88E    $9D61   UNKNOWN  $9D61           ; Unknown 9xxx instruction
$890    $6ED1   LD       VE, #D1         ; Load 209 into VE
$892    $11D0   JP       $1D0            ; Jump to 1D0
$894    $256F   CALL     $56F            ; Call subroutine at 56F
$896    $36A2   SE       V6, #A2         ; Skip if V6 == 162
$898    $1F6B   JP       $F6B            ; Jump to F6B
$89A    $89EB   UNKNOWN  89EB            ; Unknown 8xxx instruction
$89C    $8F70   LD       VF, V7          ; VF = V7
$89E    $8212   AND      V2, V1          ; V2 &= V1
$8A0    $BAB1   JP       V0, $AB1        ; Jump to V0 + AB1
$8A2    $9143   UNKNOWN  $9143           ; Unknown 9xxx instruction
$8A4    $E791   UNKNOWN  $E791           ; Unknown Exxx instruction
$8A6    $94AD   UNKNOWN  $94AD           ; Unknown 9xxx instruction
$8A8    $8A26   SHR      VA              ; VA >>= 1, VF = LSB
$8AA    $BD48   JP       V0, $D48        ; Jump to V0 + D48
$8AC    $BECA   JP       V0, $ECA        ; Jump to V0 + ECA
$8AE    $BC32   JP       V0, $C32        ; Jump to V0 + C32
$8B0    $D037   DRW      V0, V3, #7      ; Draw 7-byte sprite at V0, V3
$8B2    $1D6B   JP       $D6B            ; Jump to D6B
$8B4    $C40A   RND      V4, #0A         ; V4 = random & 0A
$8B6    $1C77   JP       $C77            ; Jump to C77
$8B8    $BA5E   JP       V0, $A5E        ; Jump to V0 + A5E
$8BA    $81D4   ADD      V1, VD          ; V1 += VD, VF = carry
$8BC    $D9E5   DRW      V9, VE, #5      ; Draw 5-byte sprite at V9, VE
$8BE    $56F0   SE       V6, VF          ; Skip if V6 == VF
$8C0    $2453   CALL     $453            ; Call subroutine at 453
$8C2    $9441   UNKNOWN  $9441           ; Unknown 9xxx instruction
$8C4    $D1E4   DRW      V1, VE, #4      ; Draw 4-byte sprite at V1, VE
$8C6    $8FD9   UNKNOWN  8FD9            ; Unknown 8xxx instruction
$8C8    $90E3   UNKNOWN  $90E3           ; Unknown 9xxx instruction
$8CA    $673A   LD       V7, #3A         ; Load 58 into V7
$8CC    $8EE3   XOR      VE, VE          ; VE ^= VE
$8CE    $63D6   LD       V3, #D6         ; Load 214 into V3
$8D0    $06A4   SYS      $6A4            ; System call to 6A4
$8D2    $FCE9   UNKNOWN  FCE9            ; Unknown Fxxx instruction
$8D4    $1AE2   JP       $AE2            ; Jump to AE2
$8D6    $61DA   LD       V1, #DA         ; Load 218 into V1
$8D8    $25DA   CALL     $5DA            ; Call subroutine at 5DA
$8DA    $2FED   CALL     $FED            ; Call subroutine at FED
$8DC    $18F4   JP       $8F4            ; Jump to 8F4
$8DE    $6281   LD       V2, #81         ; Load 129 into V2
$8E0    $8DA4   ADD      VD, VA          ; VD += VA, VF = carry
$8E2    $F90D   UNKNOWN  F90D            ; Unknown Fxxx instruction
$8E4    $595A   UNKNOWN  $595A           ; Unknown 5xxx instruction
$8E6    $6289   LD       V2, #89         ; Load 137 into V2
$8E8    $8D42   AND      VD, V4          ; VD &= V4
$8EA    $995D   UNKNOWN  $995D           ; Unknown 9xxx instruction
$8EC    $48E9   SNE      V8, #E9         ; Skip if V8 != 233
$8EE    $ED47   UNKNOWN  $ED47           ; Unknown Exxx instruction
$8F0    $F8EB   UNKNOWN  F8EB            ; Unknown Fxxx instruction
$8F2    $E49D   UNKNOWN  $E49D           ; Unknown Exxx instruction
$8F4    $E372   UNKNOWN  $E372           ; Unknown Exxx instruction
$8F6    $6B4E   LD       VB, #4E         ; Load 78 into VB
$8F8    $3BC1   SE       VB, #C1         ; Skip if VB == 193
$8FA    $C381   RND      V3, #81         ; V3 = random & 81
$8FC    $2E6B   CALL     $E6B            ; Call subroutine at E6B
$8FE    $E7A4   UNKNOWN  $E7A4           ; Unknown Exxx instruction
$900    $3071   SE       V0, #71         ; Skip if V0 == 113
$902    $584B   UNKNOWN  $584B           ; Unknown 5xxx instruction
$904    $707E   ADD      V0, #7E         ; Add 126 to V0
$906    $15CE   JP       $5CE            ; Jump to 5CE
$908    $AE20   LD       I, $E20         ; Load E20 into I
$90A    $8501   OR       V5, V0          ; V5 |= V0
$90C    $C1DD   RND      V1, #DD         ; V1 = random & DD
$90E    $707F   ADD      V0, #7F         ; Add 127 to V0
$910    $D865   DRW      V8, V6, #5      ; Draw 5-byte sprite at V8, V6
$912    $FA62   UNKNOWN  FA62            ; Unknown Fxxx instruction
$914    $820E   SHL      V2              ; V2 <<= 1, VF = MSB
$916    $CCBE   RND      VC, #BE         ; VC = random & BE
$918    $8579   UNKNOWN  8579            ; Unknown 8xxx instruction
$91A    $10F6   JP       $0F6            ; Jump to 0F6
$91C    $AEE2   LD       I, $EE2         ; Load EE2 into I
$91E    $F995   UNKNOWN  F995            ; Unknown Fxxx instruction
$920    $42B2   SNE      V2, #B2         ; Skip if V2 != 178
$922    $690D   LD       V9, #0D         ; Load 13 into V9
$924    $568E   UNKNOWN  $568E           ; Unknown 5xxx instruction
$926    $8F10   LD       VF, V1          ; VF = V1
$928    $5716   UNKNOWN  $5716           ; Unknown 5xxx instruction
$92A    $F9B5   UNKNOWN  F9B5            ; Unknown Fxxx instruction
$92C    $0521   SYS      $521            ; System call to 521
$92E    $395A   SE       V9, #5A         ; Skip if V9 == 90
$930    $2A24   CALL     $A24            ; Call subroutine at A24
$932    $C558   RND      V5, #58         ; V5 = random & 58
$934    $E97D   UNKNOWN  $E97D           ; Unknown Exxx instruction
$936    $E2E1   UNKNOWN  $E2E1           ; Unknown Exxx instruction
$938    $9D6F   UNKNOWN  $9D6F           ; Unknown 9xxx instruction
$93A    $2260   CALL     $260            ; Call subroutine at 260
$93C    $AE33   LD       I, $E33         ; Load E33 into I
$93E    $C67E   RND      V6, #7E         ; V6 = random & 7E
$940    $40DE   SNE      V0, #DE         ; Skip if V0 != 222
$942    $1F36   JP       $F36            ; Jump to F36
$944    $BCD1   JP       V0, $CD1        ; Jump to V0 + CD1
$946    $29AD   CALL     $9AD            ; Call subroutine at 9AD
$948    $D0C2   DRW      V0, VC, #2      ; Draw 2-byte sprite at V0, VC
$94A    $3AF8   SE       VA, #F8         ; Skip if VA == 248
$94C    $E611   UNKNOWN  $E611           ; Unknown Exxx instruction
$94E    $B29A   JP       V0, $29A        ; Jump to V0 + 29A
$950    $D84E   DRW      V8, V4, #E      ; Draw 14-byte sprite at V8, V4
$952    $B819   JP       V0, $819        ; Jump to V0 + 819
$954    $E948   UNKNOWN  $E948           ; Unknown Exxx instruction
$956    $A593   LD       I, $593         ; Load 593 into I
$958    $2F51   CALL     $F51            ; Call subroutine at F51
$95A    $1436   JP       $436            ; Jump to 436
$95C    $AEE0   LD       I, $EE0         ; Load EE0 into I
$95E    $26C6   CALL     $6C6            ; Call subroutine at 6C6
$960    $DA40   DRW      VA, V4, #0      ; Draw 0-byte sprite at VA, V4
$962    $8E82   AND      VE, V8          ; VE &= V8
$964    $F29E   UNKNOWN  F29E            ; Unknown Fxxx instruction
$966    $A54A   LD       I, $54A         ; Load 54A into I
$968    $BB93   JP       V0, $B93        ; Jump to V0 + B93
$96A    $3431   SE       V4, #31         ; Skip if V4 == 49
$96C    $E7CF   UNKNOWN  $E7CF           ; Unknown Exxx instruction
$96E    $8CF7   SUBN     VC, VF          ; VC = VF - VC, VF = !borrow
$970    $DC47   DRW      VC, V4, #7      ; Draw 7-byte sprite at VC, V4
$972    $6768   LD       V7, #68         ; Load 104 into V7
$974    $FE3F   UNKNOWN  FE3F            ; Unknown Fxxx instruction
$976    $70B0   ADD      V0, #B0         ; Add 176 to V0
$978    $B9AF   JP       V0, $9AF        ; Jump to V0 + 9AF
$97A    $700A   ADD      V0, #0A         ; Add 10 to V0
$97C    $EF0B   UNKNOWN  $EF0B           ; Unknown Exxx instruction
$97E    $F82F   UNKNOWN  F82F            ; Unknown Fxxx instruction
$980    $8E2D   UNKNOWN  8E2D            ; Unknown 8xxx instruction
$982    $8131   OR       V1, V3          ; V1 |= V3
$984    $17A9   JP       $7A9            ; Jump to 7A9
$986    $5FFF   UNKNOWN  $5FFF           ; Unknown 5xxx instruction
$988    $8392   AND      V3, V9          ; V3 &= V9
$98A    $8ECC   UNKNOWN  8ECC            ; Unknown 8xxx instruction
$98C    $22F9   CALL     $2F9            ; Call subroutine at 2F9
$98E    $2A4C   CALL     $A4C            ; Call subroutine at A4C
$990    $518D   UNKNOWN  $518D           ; Unknown 5xxx instruction
$992    $04C2   SYS      $4C2            ; System call to 4C2
$994    $211E   CALL     $11E            ; Call subroutine at 11E
$996    $9C67   UNKNOWN  $9C67           ; Unknown 9xxx instruction
$998    $F2F1   UNKNOWN  F2F1            ; Unknown Fxxx instruction
$99A    $AE6F   LD       I, $E6F         ; Load E6F into I
$99C    $68FD   LD       V8, #FD         ; Load 253 into V8
$99E    $4587   SNE      V5, #87         ; Skip if V5 != 135
$9A0    $2ABA   CALL     $ABA            ; Call subroutine at ABA
$9A2    $77F0   ADD      V7, #F0         ; Add 240 to V7
$9A4    $2E70   CALL     $E70            ; Call subroutine at E70
$9A6    $2BDE   CALL     $BDE            ; Call subroutine at BDE
$9A8    $F311   UNKNOWN  F311            ; Unknown Fxxx instruction
$9AA    $898F   UNKNOWN  898F            ; Unknown 8xxx instruction
$9AC    $C3BA   RND      V3, #BA         ; V3 = random & BA
$9AE    $DF37   DRW      VF, V3, #7      ; Draw 7-byte sprite at VF, V3
$9B0    $3A75   SE       VA, #75         ; Skip if VA == 117
$9B2    $E501   UNKNOWN  $E501           ; Unknown Exxx instruction
$9B4    $F622   UNKNOWN  F622            ; Unknown Fxxx instruction
$9B6    $20E1   CALL     $0E1            ; Call subroutine at 0E1
$9B8    $6ABD   LD       VA, #BD         ; Load 189 into VA
$9BA    $056A   SYS      $56A            ; System call to 56A
$9BC    $1BEF   JP       $BEF            ; Jump to BEF
$9BE    $5E70   SE       VE, V7          ; Skip if VE == V7
$9C0    $2490   CALL     $490            ; Call subroutine at 490
$9C2    $0CB2   SYS      $CB2            ; System call to CB2
$9C4    $AFF6   LD       I, $FF6         ; Load FF6 into I
$9C6    $227A   CALL     $27A            ; Call subroutine at 27A
$9C8    $057F   SYS      $57F            ; System call to 57F
$9CA    $30A2   SE       V0, #A2         ; Skip if V0 == 162
$9CC    $B6DB   JP       V0, $6DB        ; Jump to V0 + 6DB
$9CE    $3D28   SE       VD, #28         ; Skip if VD == 40
$9D0    $33DD   SE       V3, #DD         ; Skip if V3 == 221
$9D2    $4994   SNE      V9, #94         ; Skip if V9 != 148
$9D4    $CBC1   RND      VB, #C1         ; VB = random & C1
$9D6    $EC30   UNKNOWN  $EC30           ; Unknown Exxx instruction
$9D8    $2D8D   CALL     $D8D            ; Call subroutine at D8D
$9DA    $FD47   UNKNOWN  FD47            ; Unknown Fxxx instruction
$9DC    $59FF   UNKNOWN  $59FF           ; Unknown 5xxx instruction
$9DE    $8B22   AND      VB, V2          ; VB &= V2
$9E0    $8015   SUB      V0, V1          ; V0 -= V1, VF = !borrow
$9E2    $CE47   RND      VE, #47         ; VE = random & 47
$9E4    $7888   ADD      V8, #88         ; Add 136 to V8
$9E6    $834E   SHL      V3              ; V3 <<= 1, VF = MSB
$9E8    $9A03   UNKNOWN  $9A03           ; Unknown 9xxx instruction
$9EA    $52CF   UNKNOWN  $52CF           ; Unknown 5xxx instruction
$9EC    $52DC   UNKNOWN  $52DC           ; Unknown 5xxx instruction
$9EE    $8A3F   UNKNOWN  8A3F            ; Unknown 8xxx instruction
$9F0    $4AF6   SNE      VA, #F6         ; Skip if VA != 246
$9F2    $7422   ADD      V4, #22         ; Add 34 to V4
$9F4    $39BE   SE       V9, #BE         ; Skip if V9 == 190
$9F6    $E96D   UNKNOWN  $E96D           ; Unknown Exxx instruction
$9F8    $CDCB   RND      VD, #CB         ; VD = random & CB
$9FA    $0149   SYS      $149            ; System call to 149
$9FC    $9751   UNKNOWN  $9751           ; Unknown 9xxx instruction
$9FE    $2BBA   CALL     $BBA            ; Call subroutine at BBA
$A00    $6D59   LD       VD, #59         ; Load 89 into VD
$A02    $DB82   DRW      VB, V8, #2      ; Draw 2-byte sprite at VB, V8
$A04    $2E1E   CALL     $E1E            ; Call subroutine at E1E
$A06    $C91C   RND      V9, #1C         ; V9 = random & 1C
$A08    $2ADA   CALL     $ADA            ; Call subroutine at ADA
$A0A    $701C   ADD      V0, #1C         ; Add 28 to V0
$A0C    $DB9D   DRW      VB, V9, #D      ; Draw 13-byte sprite at VB, V9
$A0E    $593B   UNKNOWN  $593B           ; Unknown 5xxx instruction
$A10    $E1C4   UNKNOWN  $E1C4           ; Unknown Exxx instruction
$A12    $EF8E   UNKNOWN  $EF8E           ; Unknown Exxx instruction
$A14    $0169   SYS      $169            ; System call to 169
$A16    $DC6B   DRW      VC, V6, #B      ; Draw 11-byte sprite at VC, V6
$A18    $E486   UNKNOWN  $E486           ; Unknown Exxx instruction
$A1A    $7E61   ADD      VE, #61         ; Add 97 to VE
$A1C    $319D   SE       V1, #9D         ; Skip if V1 == 157
$A1E    $6364   LD       V3, #64         ; Load 100 into V3
$A20    $9CCB   UNKNOWN  $9CCB           ; Unknown 9xxx instruction
$A22    $D34F   DRW      V3, V4, #F      ; Draw 15-byte sprite at V3, V4
$A24    $6D78   LD       VD, #78         ; Load 120 into VD
$A26    $8F3C   UNKNOWN  8F3C            ; Unknown 8xxx instruction
$A28    $CD6A   RND      VD, #6A         ; VD = random & 6A
$A2A    $BB51   JP       V0, $B51        ; Jump to V0 + B51
$A2C    $3F1E   SE       VF, #1E         ; Skip if VF == 30
$A2E    $8042   AND      V0, V4          ; V0 &= V4
$A30    $D767   DRW      V7, V6, #7      ; Draw 7-byte sprite at V7, V6
$A32    $D3CA   DRW      V3, VC, #A      ; Draw 10-byte sprite at V3, VC
$A34    $0C98   SYS      $C98            ; System call to C98
$A36    $1272   JP       $272            ; Jump to 272
$A38    $86F3   XOR      V6, VF          ; V6 ^= VF
$A3A    $C00D   RND      V0, #0D         ; V0 = random & 0D
$A3C    $CCC1   RND      VC, #C1         ; VC = random & C1
$A3E    $D74A   DRW      V7, V4, #A      ; Draw 10-byte sprite at V7, V4
$A40    $ACC9   LD       I, $CC9         ; Load CC9 into I
$A42    $7A75   ADD      VA, #75         ; Add 117 to VA
$A44    $9495   UNKNOWN  $9495           ; Unknown 9xxx instruction
$A46    $F09F   UNKNOWN  F09F            ; Unknown Fxxx instruction
$A48    $5FC1   UNKNOWN  $5FC1           ; Unknown 5xxx instruction
$A4A    $C47A   RND      V4, #7A         ; V4 = random & 7A
$A4C    $1F98   JP       $F98            ; Jump to F98
$A4E    $DD30   DRW      VD, V3, #0      ; Draw 0-byte sprite at VD, V3
$A50    $0C82   SYS      $C82            ; System call to C82
$A52    $2CB7   CALL     $CB7            ; Call subroutine at CB7
$A54    $2578   CALL     $578            ; Call subroutine at 578
$A56    $B71E   JP       V0, $71E        ; Jump to V0 + 71E
$A58    $42AA   SNE      V2, #AA         ; Skip if V2 != 170
$A5A    $78D2   ADD      V8, #D2         ; Add 210 to V8
$A5C    $C878   RND      V8, #78         ; V8 = random & 78
$A5E    $4316   SNE      V3, #16         ; Skip if V3 != 22
$A60    $4015   SNE      V0, #15         ; Skip if V0 != 21
$A62    $3E12   SE       VE, #12         ; Skip if VE == 18
$A64    $E69A   UNKNOWN  $E69A           ; Unknown Exxx instruction
$A66    $419D   SNE      V1, #9D         ; Skip if V1 != 157
$A68    $CC94   RND      VC, #94         ; VC = random & 94
$A6A    $7505   ADD      V5, #05         ; Add 5 to V5
$A6C    $83E8   UNKNOWN  83E8            ; Unknown 8xxx instruction
$A6E    $8649   UNKNOWN  8649            ; Unknown 8xxx instruction
$A70    $C74A   RND      V7, #4A         ; V7 = random & 4A
$A72    $B487   JP       V0, $487        ; Jump to V0 + 487
$A74    $9D16   UNKNOWN  $9D16           ; Unknown 9xxx instruction
$A76    $9C9B   UNKNOWN  $9C9B           ; Unknown 9xxx instruction
$A78    $02BB   SYS      $2BB            ; System call to 2BB
$A7A    $BC65   JP       V0, $C65        ; Jump to V0 + C65
$A7C    $A54B   LD       I, $54B         ; Load 54B into I
$A7E    $752C   ADD      V5, #2C         ; Add 44 to V5
$A80    $B4FA   JP       V0, $4FA        ; Jump to V0 + 4FA
$A82    $CD84   RND      VD, #84         ; VD = random & 84
$A84    $910C   UNKNOWN  $910C           ; Unknown 9xxx instruction
$A86    $2E2A   CALL     $E2A            ; Call subroutine at E2A
$A88    $F324   UNKNOWN  F324            ; Unknown Fxxx instruction
$A8A    $4E6E   SNE      VE, #6E         ; Skip if VE != 110
$A8C    $E40A   UNKNOWN  $E40A           ; Unknown Exxx instruction
$A8E    $7339   ADD      V3, #39         ; Add 57 to V3
$A90    $6F4A   LD       VF, #4A         ; Load 74 into VF
$A92    $BB6B   JP       V0, $B6B        ; Jump to V0 + B6B
$A94    $539F   UNKNOWN  $539F           ; Unknown 5xxx instruction
$A96    $C11C   RND      V1, #1C         ; V1 = random & 1C
$A98    $59ED   UNKNOWN  $59ED           ; Unknown 5xxx instruction
$A9A    $E9F2   UNKNOWN  $E9F2           ; Unknown Exxx instruction
$A9C    $7147   ADD      V1, #47         ; Add 71 to V1
$A9E    $88E4   ADD      V8, VE          ; V8 += VE, VF = carry
$AA0    $D7EB   DRW      V7, VE, #B      ; Draw 11-byte sprite at V7, VE
$AA2    $800C   UNKNOWN  800C            ; Unknown 8xxx instruction
$AA4    $4E99   SNE      VE, #99         ; Skip if VE != 153
$AA6    $10CB   JP       $0CB            ; Jump to 0CB
$AA8    $3626   SE       V6, #26         ; Skip if V6 == 38
$AAA    $4165   SNE      V1, #65         ; Skip if V1 != 101
$AAC    $F1D1   UNKNOWN  F1D1            ; Unknown Fxxx instruction
$AAE    $9FF6   UNKNOWN  $9FF6           ; Unknown 9xxx instruction
$AB0    $2F95   CALL     $F95            ; Call subroutine at F95
$AB2    $B651   JP       V0, $651        ; Jump to V0 + 651
$AB4    $56C8   UNKNOWN  $56C8           ; Unknown 5xxx instruction
$AB6    $57FF   UNKNOWN  $57FF           ; Unknown 5xxx instruction
$AB8    $837D   UNKNOWN  837D            ; Unknown 8xxx instruction
$ABA    $6B5A   LD       VB, #5A         ; Load 90 into VB
$ABC    $D17A   DRW      V1, V7, #A      ; Draw 10-byte sprite at V1, V7
$ABE    $B204   JP       V0, $204        ; Jump to V0 + 204
$AC0    $56DF   UNKNOWN  $56DF           ; Unknown 5xxx instruction
$AC2    $7E21   ADD      VE, #21         ; Add 33 to VE
$AC4    $C372   RND      V3, #72         ; V3 = random & 72
$AC6    $614D   LD       V1, #4D         ; Load 77 into V1
$AC8    $A30B   LD       I, $30B         ; Load 30B into I
$ACA    $3F1F   SE       VF, #1F         ; Skip if VF == 31
$ACC    $DAF3   DRW      VA, VF, #3      ; Draw 3-byte sprite at VA, VF
$ACE    $29B2   CALL     $9B2            ; Call subroutine at 9B2
$AD0    $4045   SNE      V0, #45         ; Skip if V0 != 69
$AD2    $FC5D   UNKNOWN  FC5D            ; Unknown Fxxx instruction
$AD4    $AF69   LD       I, $F69         ; Load F69 into I
$AD6    $64EF   LD       V4, #EF         ; Load 239 into V4
$AD8    $325D   SE       V2, #5D         ; Skip if V2 == 93
$ADA    $F18B   UNKNOWN  F18B            ; Unknown Fxxx instruction
$ADC    $5ABE   UNKNOWN  $5ABE           ; Unknown 5xxx instruction
$ADE    $9C74   UNKNOWN  $9C74           ; Unknown 9xxx instruction
$AE0    $0A2E   SYS      $A2E            ; System call to A2E
$AE2    $9025   UNKNOWN  $9025           ; Unknown 9xxx instruction
$AE4    $6B28   LD       VB, #28         ; Load 40 into VB
$AE6    $2428   CALL     $428            ; Call subroutine at 428
$AE8    $654F   LD       V5, #4F         ; Load 79 into V5
$AEA    $63B7   LD       V3, #B7         ; Load 183 into V3
$AEC    $B712   JP       V0, $712        ; Jump to V0 + 712
$AEE    $288C   CALL     $88C            ; Call subroutine at 88C
$AF0    $13FE   JP       $3FE            ; Jump to 3FE
$AF2    $9A86   UNKNOWN  $9A86           ; Unknown 9xxx instruction
$AF4    $FD76   UNKNOWN  FD76            ; Unknown Fxxx instruction
$AF6    $EE59   UNKNOWN  $EE59           ; Unknown Exxx instruction
$AF8    $D92A   DRW      V9, V2, #A      ; Draw 10-byte sprite at V9, V2
$AFA    $4029   SNE      V0, #29         ; Skip if V0 != 41
$AFC    $77B0   ADD      V7, #B0         ; Add 176 to V7
$AFE    $5DB4   UNKNOWN  $5DB4           ; Unknown 5xxx instruction
$B00    $2EE0   CALL     $EE0            ; Call subroutine at EE0
$B02    $ED90   UNKNOWN  $ED90           ; Unknown Exxx instruction
$B04    $FE8B   UNKNOWN  FE8B            ; Unknown Fxxx instruction
$B06    $54FE   UNKNOWN  $54FE           ; Unknown 5xxx instruction
$B08    $6332   LD       V3, #32         ; Load 50 into V3
$B0A    $529C   UNKNOWN  $529C           ; Unknown 5xxx instruction
$B0C    $B363   JP       V0, $363        ; Jump to V0 + 363
$B0E    $53E9   UNKNOWN  $53E9           ; Unknown 5xxx instruction
$B10    $403A   SNE      V0, #3A         ; Skip if V0 != 58
$B12    $AB45   LD       I, $B45         ; Load B45 into I
$B14    $84D2   AND      V4, VD          ; V4 &= VD
$B16    $3BA9   SE       VB, #A9         ; Skip if VB == 169
$B18    $1332   JP       $332            ; Jump to 332
$B1A    $6ACB   LD       VA, #CB         ; Load 203 into VA
$B1C    $BAB5   JP       V0, $AB5        ; Jump to V0 + AB5
$B1E    $C060   RND      V0, #60         ; V0 = random & 60
$B20    $09DC   SYS      $9DC            ; System call to 9DC
$B22    $760C   ADD      V6, #0C         ; Add 12 to V6
$B24    $1783   JP       $783            ; Jump to 783
$B26    $1E10   JP       $E10            ; Jump to E10
$B28    $FCCD   UNKNOWN  FCCD            ; Unknown Fxxx instruction
$B2A    $8022   AND      V0, V2          ; V0 &= V2
$B2C    $DE18   DRW      VE, V1, #8      ; Draw 8-byte sprite at VE, V1
$B2E    $C4AA   RND      V4, #AA         ; V4 = random & AA
$B30    $90FA   UNKNOWN  $90FA           ; Unknown 9xxx instruction
$B32    $5CAB   UNKNOWN  $5CAB           ; Unknown 5xxx instruction
$B34    $8F8C   UNKNOWN  8F8C            ; Unknown 8xxx instruction
$B36    $C9DF   RND      V9, #DF         ; V9 = random & DF
$B38    $A988   LD       I, $988         ; Load 988 into I
$B3A    $66CB   LD       V6, #CB         ; Load 203 into V6
$B3C    $65EE   LD       V5, #EE         ; Load 238 into V5
$B3E    $2C14   CALL     $C14            ; Call subroutine at C14
$B40    $03D2   SYS      $3D2            ; System call to 3D2
$B42    $4D84   SNE      VD, #84         ; Skip if VD != 132
$B44    $1BED   JP       $BED            ; Jump to BED
$B46    $B998   JP       V0, $998        ; Jump to V0 + 998
$B48    $2C22   CALL     $C22            ; Call subroutine at C22
$B4A    $FCC6   UNKNOWN  FCC6            ; Unknown Fxxx instruction
$B4C    $3F51   SE       VF, #51         ; Skip if VF == 81
$B4E    $4A66   SNE      VA, #66         ; Skip if VA != 102
$B50    $5BEB   UNKNOWN  $5BEB           ; Unknown 5xxx instruction
$B52    $CE87   RND      VE, #87         ; VE = random & 87
$B54    $8CFA   UNKNOWN  8CFA            ; Unknown 8xxx instruction
$B56    $C54E   RND      V5, #4E         ; V5 = random & 4E
$B58    $4670   SNE      V6, #70         ; Skip if V6 != 112
$B5A    $CD7B   RND      VD, #7B         ; VD = random & 7B
$B5C    $FB7F   UNKNOWN  FB7F            ; Unknown Fxxx instruction
$B5E    $E15C   UNKNOWN  $E15C           ; Unknown Exxx instruction
$B60    $24DC   CALL     $4DC            ; Call subroutine at 4DC
$B62    $6300   LD       V3, #00         ; Load 0 into V3
$B64    $F315   LD       DT, V3          ; Delay timer = V3
$B66    $5119   UNKNOWN  $5119           ; Unknown 5xxx instruction
$B68    $1359   JP       $359            ; Jump to 359
$B6A    $E25E   UNKNOWN  $E25E           ; Unknown Exxx instruction
$B6C    $5F9F   UNKNOWN  $5F9F           ; Unknown 5xxx instruction
$B6E    $9872   UNKNOWN  $9872           ; Unknown 9xxx instruction
$B70    $7292   ADD      V2, #92         ; Add 146 to V2
$B72    $0230   SYS      $230            ; System call to 230
$B74    $E2F7   UNKNOWN  $E2F7           ; Unknown Exxx instruction
$B76    $5B73   UNKNOWN  $5B73           ; Unknown 5xxx instruction
$B78    $D084   DRW      V0, V8, #4      ; Draw 4-byte sprite at V0, V8
$B7A    $FFDD   UNKNOWN  FFDD            ; Unknown Fxxx instruction
$B7C    $2298   CALL     $298            ; Call subroutine at 298
$B7E    $4223   SNE      V2, #23         ; Skip if V2 != 35
$B80    $4508   SNE      V5, #08         ; Skip if V5 != 8
$B82    $0D61   SYS      $D61            ; System call to D61
$B84    $D8BA   DRW      V8, VB, #A      ; Draw 10-byte sprite at V8, VB
$B86    $908D   UNKNOWN  $908D           ; Unknown 9xxx instruction
$B88    $69FA   LD       V9, #FA         ; Load 250 into V9
$B8A    $9815   UNKNOWN  $9815           ; Unknown 9xxx instruction
$B8C    $3D81   SE       VD, #81         ; Skip if VD == 129
$B8E    $15AA   JP       $5AA            ; Jump to 5AA
$B90    $0630   SYS      $630            ; System call to 630
$B92    $C688   RND      V6, #88         ; V6 = random & 88
$B94    $B68C   JP       V0, $68C        ; Jump to V0 + 68C
$B96    $ACA6   LD       I, $CA6         ; Load CA6 into I
$B98    $C61F   RND      V6, #1F         ; V6 = random & 1F
$B9A    $22BB   CALL     $2BB            ; Call subroutine at 2BB
$B9C    $89E3   XOR      V9, VE          ; V9 ^= VE
$B9E    $0647   SYS      $647            ; System call to 647
$BA0    $9BFE   UNKNOWN  $9BFE           ; Unknown 9xxx instruction
$BA2    $E7F6   UNKNOWN  $E7F6           ; Unknown Exxx instruction
$BA4    $B0F6   JP       V0, $0F6        ; Jump to V0 + 0F6
$BA6    $D29C   DRW      V2, V9, #C      ; Draw 12-byte sprite at V2, V9
$BA8    $FE97   UNKNOWN  FE97            ; Unknown Fxxx instruction
$BAA    $3E49   SE       VE, #49         ; Skip if VE == 73
$BAC    $50A8   UNKNOWN  $50A8           ; Unknown 5xxx instruction
$BAE    $3D56   SE       VD, #56         ; Skip if VD == 86
$BB0    $0E17   SYS      $E17            ; System call to E17
$BB2    $C9CA   RND      V9, #CA         ; V9 = random & CA
$BB4    $5B7B   UNKNOWN  $5B7B           ; Unknown 5xxx instruction
$BB6    $3392   SE       V3, #92         ; Skip if V3 == 146
$BB8    $AA32   LD       I, $A32         ; Load A32 into I
$BBA    $D8BC   DRW      V8, VB, #C      ; Draw 12-byte sprite at V8, VB
$BBC    $DD89   DRW      VD, V8, #9      ; Draw 9-byte sprite at VD, V8
$BBE    $4B85   SNE      VB, #85         ; Skip if VB != 133
$BC0    $8E5B   UNKNOWN  8E5B            ; Unknown 8xxx instruction
$BC2    $C493   RND      V4, #93         ; V4 = random & 93
$BC4    $A8AF   LD       I, $8AF         ; Load 8AF into I
$BC6    $B245   JP       V0, $245        ; Jump to V0 + 245
$BC8    $CC36   RND      VC, #36         ; VC = random & 36
$BCA    $12E5   JP       $2E5            ; Jump to 2E5
$BCC    $122F   JP       $22F            ; Jump to 22F
$BCE    $FB3C   UNKNOWN  FB3C            ; Unknown Fxxx instruction
$BD0    $16E7   JP       $6E7            ; Jump to 6E7
$BD2    $1F69   JP       $F69            ; Jump to F69
$BD4    $3CBA   SE       VC, #BA         ; Skip if VC == 186
$BD6    $2C68   CALL     $C68            ; Call subroutine at C68
$BD8    $5763   UNKNOWN  $5763           ; Unknown 5xxx instruction
$BDA    $E30F   UNKNOWN  $E30F           ; Unknown Exxx instruction
$BDC    $AAD5   LD       I, $AD5         ; Load AD5 into I
$BDE    $4E56   SNE      VE, #56         ; Skip if VE != 86
$BE0    $5CE6   UNKNOWN  $5CE6           ; Unknown 5xxx instruction
$BE2    $D70A   DRW      V7, V0, #A      ; Draw 10-byte sprite at V7, V0
$BE4    $93ED   UNKNOWN  $93ED           ; Unknown 9xxx instruction
$BE6    $3683   SE       V6, #83         ; Skip if V6 == 131
$BE8    $5B9A   UNKNOWN  $5B9A           ; Unknown 5xxx instruction
$BEA    $4814   SNE      V8, #14         ; Skip if V8 != 20
$BEC    $2553   CALL     $553            ; Call subroutine at 553
$BEE    $3F19   SE       VF, #19         ; Skip if VF == 25
$BF0    $94ED   UNKNOWN  $94ED           ; Unknown 9xxx instruction
$BF2    $6135   LD       V1, #35         ; Load 53 into V1
$BF4    $221C   CALL     $21C            ; Call subroutine at 21C
$BF6    $5A9B   UNKNOWN  $5A9B           ; Unknown 5xxx instruction
$BF8    $0A41   SYS      $A41            ; System call to A41
$BFA    $D278   DRW      V2, V7, #8      ; Draw 8-byte sprite at V2, V7
$BFC    $EA4B   UNKNOWN  $EA4B           ; Unknown Exxx instruction
$BFE    $1D1F   JP       $D1F            ; Jump to D1F
$C00    $A7FE   LD       I, $7FE         ; Load 7FE into I
$C02    $9DCC   UNKNOWN  $9DCC           ; Unknown 9xxx instruction
$C04    $7D54   ADD      VD, #54         ; Add 84 to VD
$C06    $6F37   LD       VF, #37         ; Load 55 into VF
$C08    $56A2   UNKNOWN  $56A2           ; Unknown 5xxx instruction
$C0A    $D1DE   DRW      V1, VD, #E      ; Draw 14-byte sprite at V1, VD
$C0C    $82EC   UNKNOWN  82EC            ; Unknown 8xxx instruction
$C0E    $1CCD   JP       $CCD            ; Jump to CCD
$C10    $2140   CALL     $140            ; Call subroutine at 140
$C12    $756D   ADD      V5, #6D         ; Add 109 to V5
$C14    $D8CF   DRW      V8, VC, #F      ; Draw 15-byte sprite at V8, VC
$C16    $583B   UNKNOWN  $583B           ; Unknown 5xxx instruction
$C18    $62BD   LD       V2, #BD         ; Load 189 into V2
$C1A    $18AA   JP       $8AA            ; Jump to 8AA
$C1C    $87F1   OR       V7, VF          ; V7 |= VF
$C1E    $ACC2   LD       I, $CC2         ; Load CC2 into I
$C20    $6575   LD       V5, #75         ; Load 117 into V5
$C22    $C476   RND      V4, #76         ; V4 = random & 76
$C24    $FCE9   UNKNOWN  FCE9            ; Unknown Fxxx instruction
$C26    $6EC0   LD       VE, #C0         ; Load 192 into VE
$C28    $505B   UNKNOWN  $505B           ; Unknown 5xxx instruction
$C2A    $4C12   SNE      VC, #12         ; Skip if VC != 18
$C2C    $9D16   UNKNOWN  $9D16           ; Unknown 9xxx instruction
$C2E    $0EEF   SYS      $EEF            ; System call to EEF
$C30    $39D5   SE       V9, #D5         ; Skip if V9 == 213
$C32    $766C   ADD      V6, #6C         ; Add 108 to V6
$C34    $6CC3   LD       VC, #C3         ; Load 195 into VC
$C36    $CE62   RND      VE, #62         ; VE = random & 62
$C38    $7549   ADD      V5, #49         ; Add 73 to V5
$C3A    $F4FC   UNKNOWN  F4FC            ; Unknown Fxxx instruction
$C3C    $4606   SNE      V6, #06         ; Skip if V6 != 6
$C3E    $34C3   SE       V4, #C3         ; Skip if V4 == 195
$C40    $3907   SE       V9, #07         ; Skip if V9 == 7
$C42    $8212   AND      V2, V1          ; V2 &= V1
$C44    $52F3   UNKNOWN  $52F3           ; Unknown 5xxx instruction
$C46    $1AAA   JP       $AAA            ; Jump to AAA
$C48    $9A82   UNKNOWN  $9A82           ; Unknown 9xxx instruction
$C4A    $46B1   SNE      V6, #B1         ; Skip if V6 != 177
$C4C    $7A66   ADD      VA, #66         ; Add 102 to VA
$C4E    $BEE3   JP       V0, $EE3        ; Jump to V0 + EE3
$C50    $C6E6   RND      V6, #E6         ; V6 = random & E6
$C52    $6DD7   LD       VD, #D7         ; Load 215 into VD
$C54    $FC0A   LD       VC, K           ; Wait for key press, store in VC
$C56    $DBD5   DRW      VB, VD, #5      ; Draw 5-byte sprite at VB, VD
$C58    $804D   UNKNOWN  804D            ; Unknown 8xxx instruction
$C5A    $7CC7   ADD      VC, #C7         ; Add 199 to VC
$C5C    $D5F8   DRW      V5, VF, #8      ; Draw 8-byte sprite at V5, VF
$C5E    $3398   SE       V3, #98         ; Skip if V3 == 152
$C60    $B95E   JP       V0, $95E        ; Jump to V0 + 95E
$C62    $B3DB   JP       V0, $3DB        ; Jump to V0 + 3DB
$C64    $BD7E   JP       V0, $D7E        ; Jump to V0 + D7E
$C66    $167E   JP       $67E            ; Jump to 67E
$C68    $37DF   SE       V7, #DF         ; Skip if V7 == 223
$C6A    $655E   LD       V5, #5E         ; Load 94 into V5
$C6C    $F29E   UNKNOWN  F29E            ; Unknown Fxxx instruction
$C6E    $C6AF   RND      V6, #AF         ; V6 = random & AF
$C70    $6976   LD       V9, #76         ; Load 118 into V9
$C72    $886B   UNKNOWN  886B            ; Unknown 8xxx instruction
$C74    $3001   SE       V0, #01         ; Skip if V0 == 1
$C76    $5291   UNKNOWN  $5291           ; Unknown 5xxx instruction
$C78    $2CFD   CALL     $CFD            ; Call subroutine at CFD
$C7A    $70F1   ADD      V0, #F1         ; Add 241 to V0
$C7C    $7504   ADD      V5, #04         ; Add 4 to V5
$C7E    $3FFE   SE       VF, #FE         ; Skip if VF == 254
$C80    $2B9D   CALL     $B9D            ; Call subroutine at B9D
$C82    $C9EE   RND      V9, #EE         ; V9 = random & EE
$C84    $10F6   JP       $0F6            ; Jump to 0F6
$C86    $5E04   UNKNOWN  $5E04           ; Unknown 5xxx instruction
$C88    $FD5E   UNKNOWN  FD5E            ; Unknown Fxxx instruction
$C8A    $5E29   UNKNOWN  $5E29           ; Unknown 5xxx instruction
$C8C    $DF08   DRW      VF, V0, #8      ; Draw 8-byte sprite at VF, V0
$C8E    $9D8C   UNKNOWN  $9D8C           ; Unknown 9xxx instruction
$C90    $761B   ADD      V6, #1B         ; Add 27 to V6
$C92    $C9D8   RND      V9, #D8         ; V9 = random & D8
$C94    $909C   UNKNOWN  $909C           ; Unknown 9xxx instruction
$C96    $4974   SNE      V9, #74         ; Skip if V9 != 116
$C98    $C336   RND      V3, #36         ; V3 = random & 36
$C9A    $4B5A   SNE      VB, #5A         ; Skip if VB != 90
$C9C    $B114   JP       V0, $114        ; Jump to V0 + 114
$C9E    $83D0   LD       V3, VD          ; V3 = VD
$CA0    $2D12   CALL     $D12            ; Call subroutine at D12
$CA2    $79D2   ADD      V9, #D2         ; Add 210 to V9
$CA4    $078C   SYS      $78C            ; System call to 78C
$CA6    $E8A7   UNKNOWN  $E8A7           ; Unknown Exxx instruction
$CA8    $E432   UNKNOWN  $E432           ; Unknown Exxx instruction
$CAA    $79C0   ADD      V9, #C0         ; Add 192 to V9
$CAC    $4EEB   SNE      VE, #EB         ; Skip if VE != 235
$CAE    $649C   LD       V4, #9C         ; Load 156 into V4
$CB0    $665A   LD       V6, #5A         ; Load 90 into V6
$CB2    $4877   SNE      V8, #77         ; Skip if V8 != 119
$CB4    $E5FE   UNKNOWN  $E5FE           ; Unknown Exxx instruction
$CB6    $DA50   DRW      VA, V5, #0      ; Draw 0-byte sprite at VA, V5
$CB8    $65B5   LD       V5, #B5         ; Load 181 into V5
$CBA    $5EA8   UNKNOWN  $5EA8           ; Unknown 5xxx instruction
$CBC    $24D7   CALL     $4D7            ; Call subroutine at 4D7
$CBE    $7F78   ADD      VF, #78         ; Add 120 to VF
$CC0    $56CA   UNKNOWN  $56CA           ; Unknown 5xxx instruction
$CC2    $E9CD   UNKNOWN  $E9CD           ; Unknown Exxx instruction
$CC4    $E6A9   UNKNOWN  $E6A9           ; Unknown Exxx instruction
$CC6    $F2E7   UNKNOWN  F2E7            ; Unknown Fxxx instruction
$CC8    $73B9   ADD      V3, #B9         ; Add 185 to V3
$CCA    $E28D   UNKNOWN  $E28D           ; Unknown Exxx instruction
$CCC    $E471   UNKNOWN  $E471           ; Unknown Exxx instruction
$CCE    $7848   ADD      V8, #48         ; Add 72 to V8
$CD0    $B4F4   JP       V0, $4F4        ; Jump to V0 + 4F4
$CD2    $1244   JP       $244            ; Jump to 244
$CD4    $677B   LD       V7, #7B         ; Load 123 into V7
$CD6    $F39E   UNKNOWN  F39E            ; Unknown Fxxx instruction
$CD8    $E6B7   UNKNOWN  $E6B7           ; Unknown Exxx instruction
$CDA    $3922   SE       V9, #22         ; Skip if V9 == 34
$CDC    $27B9   CALL     $7B9            ; Call subroutine at 7B9
$CDE    $4882   SNE      V8, #82         ; Skip if V8 != 130
$CE0    $B433   JP       V0, $433        ; Jump to V0 + 433
$CE2    $000F   SYS      $00F            ; System call to 00F
$CE4    $0BD1   SYS      $BD1            ; System call to BD1
$CE6    $7581   ADD      V5, #81         ; Add 129 to V5
$CE8    $7BF8   ADD      VB, #F8         ; Add 248 to VB
$CEA    $92C1   UNKNOWN  $92C1           ; Unknown 9xxx instruction
$CEC    $9B89   UNKNOWN  $9B89           ; Unknown 9xxx instruction
$CEE    $44E2   SNE      V4, #E2         ; Skip if V4 != 226
$CF0    $17C2   JP       $7C2            ; Jump to 7C2
$CF2    $BB6C   JP       V0, $B6C        ; Jump to V0 + B6C
$CF4    $458C   SNE      V5, #8C         ; Skip if V5 != 140
$CF6    $5DA1   UNKNOWN  $5DA1           ; Unknown 5xxx instruction
$CF8    $741D   ADD      V4, #1D         ; Add 29 to V4
$CFA    $C324   RND      V3, #24         ; V3 = random & 24
$CFC    $3A5B   SE       VA, #5B         ; Skip if VA == 91
$CFE    $75B7   ADD      V5, #B7         ; Add 183 to V5
$D00    $6A83   LD       VA, #83         ; Load 131 into VA
$D02    $D948   DRW      V9, V4, #8      ; Draw 8-byte sprite at V9, V4
$D04    $A868   LD       I, $868         ; Load 868 into I
$D06    $B0F7   JP       V0, $0F7        ; Jump to V0 + 0F7
$D08    $9DE5   UNKNOWN  $9DE5           ; Unknown 9xxx instruction
$D0A    $6BEC   LD       VB, #EC         ; Load 236 into VB
$D0C    $7AA1   ADD      VA, #A1         ; Add 161 to VA
$D0E    $5C75   UNKNOWN  $5C75           ; Unknown 5xxx instruction
$D10    $0F49   SYS      $F49            ; System call to F49
$D12    $5119   UNKNOWN  $5119           ; Unknown 5xxx instruction
$D14    $FF64   UNKNOWN  FF64            ; Unknown Fxxx instruction
$D16    $8E4C   UNKNOWN  8E4C            ; Unknown 8xxx instruction
$D18    $C979   RND      V9, #79         ; V9 = random & 79
$D1A    $E913   UNKNOWN  $E913           ; Unknown Exxx instruction
$D1C    $E1A2   UNKNOWN  $E1A2           ; Unknown Exxx instruction
$D1E    $63CA   LD       V3, #CA         ; Load 202 into V3
$D20    $EA60   UNKNOWN  $EA60           ; Unknown Exxx instruction
$D22    $C123   RND      V1, #23         ; V1 = random & 23
$D24    $5686   UNKNOWN  $5686           ; Unknown 5xxx instruction
$D26    $A5A7   LD       I, $5A7         ; Load 5A7 into I
$D28    $85B6   SHR      V5              ; V5 >>= 1, VF = LSB
$D2A    $5C02   UNKNOWN  $5C02           ; Unknown 5xxx instruction
$D2C    $1896   JP       $896            ; Jump to 896
$D2E    $8902   AND      V9, V0          ; V9 &= V0
$D30    $4FE0   SNE      VF, #E0         ; Skip if VF != 224
$D32    $F197   UNKNOWN  F197            ; Unknown Fxxx instruction
$D34    $FBBD   UNKNOWN  FBBD            ; Unknown Fxxx instruction
$D36    $74EF   ADD      V4, #EF         ; Add 239 to V4
$D38    $387C   SE       V8, #7C         ; Skip if V8 == 124
$D3A    $75E2   ADD      V5, #E2         ; Add 226 to V5
$D3C    $2791   CALL     $791            ; Call subroutine at 791
$D3E    $AECA   LD       I, $ECA         ; Load ECA into I
$D40    $EFE6   UNKNOWN  $EFE6           ; Unknown Exxx instruction
$D42    $CA87   RND      VA, #87         ; VA = random & 87
$D44    $4A06   SNE      VA, #06         ; Skip if VA != 6
$D46    $CFC4   RND      VF, #C4         ; VF = random & C4
$D48    $3A8D   SE       VA, #8D         ; Skip if VA == 141
$D4A    $59F0   SE       V9, VF          ; Skip if V9 == VF
$D4C    $DF3C   DRW      VF, V3, #C      ; Draw 12-byte sprite at VF, V3
$D4E    $9620   SNE      V6, V2          ; Skip if V6 != V2
$D50    $AB2B   LD       I, $B2B         ; Load B2B into I
$D52    $F7C0   UNKNOWN  F7C0            ; Unknown Fxxx instruction
$D54    $76AB   ADD      V6, #AB         ; Add 171 to V6
$D56    $8EB2   AND      VE, VB          ; VE &= VB
$D58    $F6BC   UNKNOWN  F6BC            ; Unknown Fxxx instruction
$D5A    $F9DA   UNKNOWN  F9DA            ; Unknown Fxxx instruction
$D5C    $4133   SNE      V1, #33         ; Skip if V1 != 51
$D5E    $BF2F   JP       V0, $F2F        ; Jump to V0 + F2F
$D60    $A189   LD       I, $189         ; Load 189 into I
$D62    $6769   LD       V7, #69         ; Load 105 into V7
$D64    $4A4B   SNE      VA, #4B         ; Skip if VA != 75
$D66    $3AEF   SE       VA, #EF         ; Skip if VA == 239
$D68    $61E2   LD       V1, #E2         ; Load 226 into V1
$D6A    $E130   UNKNOWN  $E130           ; Unknown Exxx instruction
$D6C    $9EEC   UNKNOWN  $9EEC           ; Unknown 9xxx instruction
$D6E    $DD3E   DRW      VD, V3, #E      ; Draw 14-byte sprite at VD, V3
$D70    $7907   ADD      V9, #07         ; Add 7 to V9
$D72    $D99F   DRW      V9, V9, #F      ; Draw 15-byte sprite at V9, V9
$D74    $7807   ADD      V8, #07         ; Add 7 to V8
$D76    $3F7F   SE       VF, #7F         ; Skip if VF == 127
$D78    $5473   UNKNOWN  $5473           ; Unknown 5xxx instruction
$D7A    $5711   UNKNOWN  $5711           ; Unknown 5xxx instruction
$D7C    $39C2   SE       V9, #C2         ; Skip if V9 == 194
$D7E    $2B06   CALL     $B06            ; Call subroutine at B06
$D80    $B064   JP       V0, $064        ; Jump to V0 + 064
$D82    $0664   SYS      $664            ; System call to 664
$D84    $9D74   UNKNOWN  $9D74           ; Unknown 9xxx instruction
$D86    $C35B   RND      V3, #5B         ; V3 = random & 5B
$D88    $DB89   DRW      VB, V8, #9      ; Draw 9-byte sprite at VB, V8
$D8A    $4B97   SNE      VB, #97         ; Skip if VB != 151
$D8C    $CBC9   RND      VB, #C9         ; VB = random & C9
$D8E    $6364   LD       V3, #64         ; Load 100 into V3
$D90    $C4F1   RND      V4, #F1         ; V4 = random & F1
$D92    $A5F2   LD       I, $5F2         ; Load 5F2 into I
$D94    $12EA   JP       $2EA            ; Jump to 2EA
$D96    $B4B3   JP       V0, $4B3        ; Jump to V0 + 4B3
$D98    $77FD   ADD      V7, #FD         ; Add 253 to V7
$D9A    $7DDF   ADD      VD, #DF         ; Add 223 to VD
$D9C    $C721   RND      V7, #21         ; V7 = random & 21
$D9E    $047F   SYS      $47F            ; System call to 47F
$DA0    $F8E0   UNKNOWN  F8E0            ; Unknown Fxxx instruction
$DA2    $A0EF   LD       I, $0EF         ; Load 0EF into I
$DA4    $2E39   CALL     $E39            ; Call subroutine at E39
$DA6    $0A9D   SYS      $A9D            ; System call to A9D
$DA8    $CCA7   RND      VC, #A7         ; VC = random & A7
$DAA    $12E6   JP       $2E6            ; Jump to 2E6
$DAC    $C7F2   RND      V7, #F2         ; V7 = random & F2
$DAE    $A868   LD       I, $868         ; Load 868 into I
$DB0    $83EF   UNKNOWN  83EF            ; Unknown 8xxx instruction
$DB2    $A56D   LD       I, $56D         ; Load 56D into I
$DB4    $A07C   LD       I, $07C         ; Load 07C into I
$DB6    $AD63   LD       I, $D63         ; Load D63 into I
$DB8    $D75B   DRW      V7, V5, #B      ; Draw 11-byte sprite at V7, V5
$DBA    $B42C   JP       V0, $42C        ; Jump to V0 + 42C
$DBC    $34D6   SE       V4, #D6         ; Skip if V4 == 214
$DBE    $332B   SE       V3, #2B         ; Skip if V3 == 43
$DC0    $F03D   UNKNOWN  F03D            ; Unknown Fxxx instruction
$DC2    $4563   SNE      V5, #63         ; Skip if V5 != 99
$DC4    $4864   SNE      V8, #64         ; Skip if V8 != 100
$DC6    $9B78   UNKNOWN  $9B78           ; Unknown 9xxx instruction
$DC8    $97A2   UNKNOWN  $97A2           ; Unknown 9xxx instruction
$DCA    $95E3   UNKNOWN  $95E3           ; Unknown 9xxx instruction
$DCC    $6082   LD       V0, #82         ; Load 130 into V0
$DCE    $D8CE   DRW      V8, VC, #E      ; Draw 14-byte sprite at V8, VC
$DD0    $0BBE   SYS      $BBE            ; System call to BBE
$DD2    $0368   SYS      $368            ; System call to 368
$DD4    $79C5   ADD      V9, #C5         ; Add 197 to V9
$DD6    $F1BA   UNKNOWN  F1BA            ; Unknown Fxxx instruction
$DD8    $9AD5   UNKNOWN  $9AD5           ; Unknown 9xxx instruction
$DDA    $4DC1   SNE      VD, #C1         ; Skip if VD != 193
$DDC    $2F83   CALL     $F83            ; Call subroutine at F83
$DDE    $2E39   CALL     $E39            ; Call subroutine at E39
$DE0    $2503   CALL     $503            ; Call subroutine at 503
$DE2    $6BA8   LD       VB, #A8         ; Load 168 into VB
$DE4    $1811   JP       $811            ; Jump to 811
$DE6    $57FB   UNKNOWN  $57FB           ; Unknown 5xxx instruction
$DE8    $2214   CALL     $214            ; Call subroutine at 214
$DEA    $5453   UNKNOWN  $5453           ; Unknown 5xxx instruction
$DEC    $2529   CALL     $529            ; Call subroutine at 529
$DEE    $C334   RND      V3, #34         ; V3 = random & 34
$DF0    $5DC4   UNKNOWN  $5DC4           ; Unknown 5xxx instruction
$DF2    $2062   CALL     $062            ; Call subroutine at 062
$DF4    $149A   JP       $49A            ; Jump to 49A
$DF6    $EDAB   UNKNOWN  $EDAB           ; Unknown Exxx instruction
$DF8    $7219   ADD      V2, #19         ; Add 25 to V2
$DFA    $CB04   RND      VB, #04         ; VB = random & 04
$DFC    $D1B7   DRW      V1, VB, #7      ; Draw 7-byte sprite at V1, VB
$DFE    $A001   LD       I, $001         ; Load 001 into I
$E00    $C8A1   RND      V8, #A1         ; V8 = random & A1
$E02    $CB6F   RND      VB, #6F         ; VB = random & 6F
$E04    $908E   UNKNOWN  $908E           ; Unknown 9xxx instruction
$E06    $5D11   UNKNOWN  $5D11           ; Unknown 5xxx instruction
$E08    $ABA1   LD       I, $BA1         ; Load BA1 into I
$E0A    $F2C4   UNKNOWN  F2C4            ; Unknown Fxxx instruction
$E0C    $4B6C   SNE      VB, #6C         ; Skip if VB != 108
$E0E    $0492   SYS      $492            ; System call to 492
$E10    $07E6   SYS      $7E6            ; System call to 7E6
$E12    $4ED9   SNE      VE, #D9         ; Skip if VE != 217
$E14    $D4D4   DRW      V4, VD, #4      ; Draw 4-byte sprite at V4, VD
$E16    $4D2A   SNE      VD, #2A         ; Skip if VD != 42
$E18    $1B53   JP       $B53            ; Jump to B53
$E1A    $C4DD   RND      V4, #DD         ; V4 = random & DD
$E1C    $23AF   CALL     $3AF            ; Call subroutine at 3AF
$E1E    $35D6   SE       V5, #D6         ; Skip if V5 == 214
$E20    $DDA3   DRW      VD, VA, #3      ; Draw 3-byte sprite at VD, VA
$E22    $153D   JP       $53D            ; Jump to 53D
$E24    $16A6   JP       $6A6            ; Jump to 6A6
$E26    $53BE   UNKNOWN  $53BE           ; Unknown 5xxx instruction
$E28    $81CB   UNKNOWN  81CB            ; Unknown 8xxx instruction
$E2A    $213A   CALL     $13A            ; Call subroutine at 13A
$E2C    $6B09   LD       VB, #09         ; Load 9 into VB
$E2E    $EBB6   UNKNOWN  $EBB6           ; Unknown Exxx instruction
$E30    $046F   SYS      $46F            ; System call to 46F
$E32    $8034   ADD      V0, V3          ; V0 += V3, VF = carry
$E34    $995F   UNKNOWN  $995F           ; Unknown 9xxx instruction
$E36    $32DE   SE       V2, #DE         ; Skip if V2 == 222
$E38    $AE34   LD       I, $E34         ; Load E34 into I
$E3A    $A54A   LD       I, $54A         ; Load 54A into I
$E3C    $1617   JP       $617            ; Jump to 617
$E3E    $46E1   SNE      V6, #E1         ; Skip if V6 != 225
$E40    $88F3   XOR      V8, VF          ; V8 ^= VF
$E42    $8BD2   AND      VB, VD          ; VB &= VD
$E44    $F963   UNKNOWN  F963            ; Unknown Fxxx instruction
$E46    $3445   SE       V4, #45         ; Skip if V4 == 69
$E48    $90BA   UNKNOWN  $90BA           ; Unknown 9xxx instruction
$E4A    $3A80   SE       VA, #80         ; Skip if VA == 128
$E4C    $DA03   DRW      VA, V0, #3      ; Draw 3-byte sprite at VA, V0
$E4E    $AFE2   LD       I, $FE2         ; Load FE2 into I
$E50    $2BA2   CALL     $BA2            ; Call subroutine at BA2
$E52    $F7B0   UNKNOWN  F7B0            ; Unknown Fxxx instruction
$E54    $54A9   UNKNOWN  $54A9           ; Unknown 5xxx instruction
$E56    $AD13   LD       I, $D13         ; Load D13 into I
$E58    $10A1   JP       $0A1            ; Jump to 0A1
$E5A    $93F2   UNKNOWN  $93F2           ; Unknown 9xxx instruction
$E5C    $E6E7   UNKNOWN  $E6E7           ; Unknown Exxx instruction
$E5E    $387F   SE       V8, #7F         ; Skip if V8 == 127
$E60    $7C43   ADD      VC, #43         ; Add 67 to VC
$E62    $5A1E   UNKNOWN  $5A1E           ; Unknown 5xxx instruction
$E64    $9B4E   UNKNOWN  $9B4E           ; Unknown 9xxx instruction
$E66    $598D   UNKNOWN  $598D           ; Unknown 5xxx instruction
$E68    $78D5   ADD      V8, #D5         ; Add 213 to V8
$E6A    $117A   JP       $17A            ; Jump to 17A
$E6C    $8550   LD       V5, V5          ; V5 = V5
$E6E    $322D   SE       V2, #2D         ; Skip if V2 == 45
$E70    $253E   CALL     $53E            ; Call subroutine at 53E
$E72    $075D   SYS      $75D            ; System call to 75D
$E74    $7A9B   ADD      VA, #9B         ; Add 155 to VA
$E76    $4B88   SNE      VB, #88         ; Skip if VB != 136
$E78    $250A   CALL     $50A            ; Call subroutine at 50A
$E7A    $5B72   UNKNOWN  $5B72           ; Unknown 5xxx instruction
$E7C    $AD58   LD       I, $D58         ; Load D58 into I
$E7E    $5720   SE       V7, V2          ; Skip if V7 == V2
$E80    $F87A   UNKNOWN  F87A            ; Unknown Fxxx instruction
$E82    $E757   UNKNOWN  $E757           ; Unknown Exxx instruction
$E84    $90F1   UNKNOWN  $90F1           ; Unknown 9xxx instruction
$E86    $B6A2   JP       V0, $6A2        ; Jump to V0 + 6A2
$E88    $2C54   CALL     $C54            ; Call subroutine at C54
$E8A    $A793   LD       I, $793         ; Load 793 into I
$E8C    $E203   UNKNOWN  $E203           ; Unknown Exxx instruction
$E8E    $0F90   SYS      $F90            ; System call to F90
$E90    $A939   LD       I, $939         ; Load 939 into I
$E92    $7A7E   ADD      VA, #7E         ; Add 126 to VA
$E94    $69AF   LD       V9, #AF         ; Load 175 into V9
$E96    $CC7E   RND      VC, #7E         ; VC = random & 7E
$E98    $3EA6   SE       VE, #A6         ; Skip if VE == 166
$E9A    $4499   SNE      V4, #99         ; Skip if V4 != 153
$E9C    $80BD   UNKNOWN  80BD            ; Unknown 8xxx instruction
$E9E    $3701   SE       V7, #01         ; Skip if V7 == 1
$EA0    $0448   SYS      $448            ; System call to 448
$EA2    $3C7C   SE       VC, #7C         ; Skip if VC == 124
$EA4    $4D8B   SNE      VD, #8B         ; Skip if VD != 139
$EA6    $D4B7   DRW      V4, VB, #7      ; Draw 7-byte sprite at V4, VB
$EA8    $94EC   UNKNOWN  $94EC           ; Unknown 9xxx instruction
$EAA    $84F0   LD       V4, VF          ; V4 = VF
$EAC    $9D28   UNKNOWN  $9D28           ; Unknown 9xxx instruction
$EAE    $248D   CALL     $48D            ; Call subroutine at 48D
$EB0    $E86C   UNKNOWN  $E86C           ; Unknown Exxx instruction
$EB2    $5DA9   UNKNOWN  $5DA9           ; Unknown 5xxx instruction
$EB4    $F7F2   UNKNOWN  F7F2            ; Unknown Fxxx instruction
$EB6    $A781   LD       I, $781         ; Load 781 into I
$EB8    $3A16   SE       VA, #16         ; Skip if VA == 22
$EBA    $F91A   UNKNOWN  F91A            ; Unknown Fxxx instruction
$EBC    $1813   JP       $813            ; Jump to 813
$EBE    $5C1F   UNKNOWN  $5C1F           ; Unknown 5xxx instruction
$EC0    $5952   UNKNOWN  $5952           ; Unknown 5xxx instruction
$EC2    $90BE   UNKNOWN  $90BE           ; Unknown 9xxx instruction
$EC4    $3CEC   SE       VC, #EC         ; Skip if VC == 236
$EC6    $3381   SE       V3, #81         ; Skip if V3 == 129
$EC8    $C347   RND      V3, #47         ; V3 = random & 47
$ECA    $63E4   LD       V3, #E4         ; Load 228 into V3
$ECC    $8738   UNKNOWN  8738            ; Unknown 8xxx instruction
$ECE    $9F95   UNKNOWN  $9F95           ; Unknown 9xxx instruction
$ED0    $9CEB   UNKNOWN  $9CEB           ; Unknown 9xxx instruction
$ED2    $6A5E   LD       VA, #5E         ; Load 94 into VA
$ED4    $4109   SNE      V1, #09         ; Skip if V1 != 9
$ED6    $B851   JP       V0, $851        ; Jump to V0 + 851
$ED8    $3B96   SE       VB, #96         ; Skip if VB == 150
$EDA    $0FF9   SYS      $FF9            ; System call to FF9
$EDC    $8B45   SUB      VB, V4          ; VB -= V4, VF = !borrow
$EDE    $7996   ADD      V9, #96         ; Add 150 to V9
$EE0    $B792   JP       V0, $792        ; Jump to V0 + 792
$EE2    $A19A   LD       I, $19A         ; Load 19A into I
$EE4    $4552   SNE      V5, #52         ; Skip if V5 != 82
$EE6    $E7F2   UNKNOWN  $E7F2           ; Unknown Exxx instruction
$EE8    $68CE   LD       V8, #CE         ; Load 206 into V8
$EEA    $2A45   CALL     $A45            ; Call subroutine at A45
$EEC    $84F7   SUBN     V4, VF          ; V4 = VF - V4, VF = !borrow
$EEE    $2482   CALL     $482            ; Call subroutine at 482
$EF0    $85D8   UNKNOWN  85D8            ; Unknown 8xxx instruction
$EF2    $619E   LD       V1, #9E         ; Load 158 into V1
$EF4    $03F8   SYS      $3F8            ; System call to 3F8
$EF6    $3EF2   SE       VE, #F2         ; Skip if VE == 242
$EF8    $4C74   SNE      VC, #74         ; Skip if VC != 116
$EFA    $D3D8   DRW      V3, VD, #8      ; Draw 8-byte sprite at V3, VD
$EFC    $257B   CALL     $57B            ; Call subroutine at 57B
$EFE    $8AF1   OR       VA, VF          ; VA |= VF
$F00    $79B2   ADD      V9, #B2         ; Add 178 to V9
$F02    $8ED0   LD       VE, VD          ; VE = VD
$F04    $42E8   SNE      V2, #E8         ; Skip if V2 != 232
$F06    $DC9C   DRW      VC, V9, #C      ; Draw 12-byte sprite at VC, V9
$F08    $591E   UNKNOWN  $591E           ; Unknown 5xxx instruction
$F0A    $FFB3   UNKNOWN  FFB3            ; Unknown Fxxx instruction
$F0C    $3550   SE       V5, #50         ; Skip if V5 == 80
$F0E    $E9F7   UNKNOWN  $E9F7           ; Unknown Exxx instruction
$F10    $2113   CALL     $113            ; Call subroutine at 113
$F12    $F3C7   UNKNOWN  F3C7            ; Unknown Fxxx instruction
$F14    $50D0   SE       V0, VD          ; Skip if V0 == VD
$F16    $DF43   DRW      VF, V4, #3      ; Draw 3-byte sprite at VF, V4
$F18    $5E45   UNKNOWN  $5E45           ; Unknown 5xxx instruction
$F1A    $E996   UNKNOWN  $E996           ; Unknown Exxx instruction
$F1C    $05BC   SYS      $5BC            ; System call to 5BC
$F1E    $AA37   LD       I, $A37         ; Load A37 into I
$F20    $96BB   UNKNOWN  $96BB           ; Unknown 9xxx instruction
$F22    $CCE3   RND      VC, #E3         ; VC = random & E3
$F24    $3E7F   SE       VE, #7F         ; Skip if VE == 127
$F26    $371D   SE       V7, #1D         ; Skip if V7 == 29
$F28    $90C7   UNKNOWN  $90C7           ; Unknown 9xxx instruction
$F2A    $1AA6   JP       $AA6            ; Jump to AA6
$F2C    $5FCF   UNKNOWN  $5FCF           ; Unknown 5xxx instruction
$F2E    $EAA2   UNKNOWN  $EAA2           ; Unknown Exxx instruction
$F30    $F374   UNKNOWN  F374            ; Unknown Fxxx instruction
$F32    $3494   SE       V4, #94         ; Skip if V4 == 148
$F34    $47EA   SNE      V7, #EA         ; Skip if V7 != 234
$F36    $EB4B   UNKNOWN  $EB4B           ; Unknown Exxx instruction
$F38    $0CAB   SYS      $CAB            ; System call to CAB
$F3A    $8B0E   SHL      VB              ; VB <<= 1, VF = MSB
$F3C    $3D65   SE       VD, #65         ; Skip if VD == 101
$F3E    $FD69   UNKNOWN  FD69            ; Unknown Fxxx instruction
$F40    $AA94   LD       I, $A94         ; Load A94 into I
$F42    $E1E2   UNKNOWN  $E1E2           ; Unknown Exxx instruction
$F44    $6EEC   LD       VE, #EC         ; Load 236 into VE
$F46    $4422   SNE      V4, #22         ; Skip if V4 != 34
$F48    $9D0A   UNKNOWN  $9D0A           ; Unknown 9xxx instruction
$F4A    $9170   SNE      V1, V7          ; Skip if V1 != V7
$F4C    $68F1   LD       V8, #F1         ; Load 241 into V8
$F4E    $99E8   UNKNOWN  $99E8           ; Unknown 9xxx instruction
$F50    $18D2   JP       $8D2            ; Jump to 8D2
$F52    $2F16   CALL     $F16            ; Call subroutine at F16
$F54    $AF31   LD       I, $F31         ; Load F31 into I
$F56    $5ACC   UNKNOWN  $5ACC           ; Unknown 5xxx instruction
$F58    $F60B   UNKNOWN  F60B            ; Unknown Fxxx instruction
$F5A    $AFC9   LD       I, $FC9         ; Load FC9 into I
$F5C    $1872   JP       $872            ; Jump to 872
$F5E    $6FB1   LD       VF, #B1         ; Load 177 into VF
$F60    $136A   JP       $36A            ; Jump to 36A
$F62    $E1F3   UNKNOWN  $E1F3           ; Unknown Exxx instruction
$F64    $3E61   SE       VE, #61         ; Skip if VE == 97
$F66    $CC35   RND      VC, #35         ; VC = random & 35
$F68    $98FA   UNKNOWN  $98FA           ; Unknown 9xxx instruction
$F6A    $DBFF   DRW      VB, VF, #F      ; Draw 15-byte sprite at VB, VF
$F6C    $F063   UNKNOWN  F063            ; Unknown Fxxx instruction
$F6E    $870C   UNKNOWN  870C            ; Unknown 8xxx instruction
$F70    $D1AA   DRW      V1, VA, #A      ; Draw 10-byte sprite at V1, VA
$F72    $688D   LD       V8, #8D         ; Load 141 into V8
$F74    $D0ED   DRW      V0, VE, #D      ; Draw 13-byte sprite at V0, VE
$F76    $5EE4   UNKNOWN  $5EE4           ; Unknown 5xxx instruction
$F78    $E0D4   UNKNOWN  $E0D4           ; Unknown Exxx instruction
$F7A    $037A   SYS      $37A            ; System call to 37A
$F7C    $5242   UNKNOWN  $5242           ; Unknown 5xxx instruction
$F7E    $C79E   RND      V7, #9E         ; V7 = random & 9E
$F80    $33EB   SE       V3, #EB         ; Skip if V3 == 235
$F82    $B847   JP       V0, $847        ; Jump to V0 + 847
$F84    $54BE   UNKNOWN  $54BE           ; Unknown 5xxx instruction
$F86    $63B2   LD       V3, #B2         ; Load 178 into V3
$F88    $B714   JP       V0, $714        ; Jump to V0 + 714
$F8A    $0512   SYS      $512            ; System call to 512
$F8C    $A8C3   LD       I, $8C3         ; Load 8C3 into I
$F8E    $03BC   SYS      $3BC            ; System call to 3BC
$F90    $7EF4   ADD      VE, #F4         ; Add 244 to VE
$F92    $2C63   CALL     $C63            ; Call subroutine at C63
$F94    $47FB   SNE      V7, #FB         ; Skip if V7 != 251
$F96    $1C05   JP       $C05            ; Jump to C05
$F98    $F343   UNKNOWN  F343            ; Unknown Fxxx instruction
$F9A    $7CC1   ADD      VC, #C1         ; Add 193 to VC
$F9C    $DB69   DRW      VB, V6, #9      ; Draw 9-byte sprite at VB, V6
$F9E    $EAD1   UNKNOWN  $EAD1           ; Unknown Exxx instruction
$FA0    $39BA   SE       V9, #BA         ; Skip if V9 == 186
$FA2    $ADEE   LD       I, $DEE         ; Load DEE into I
$FA4    $A7D9   LD       I, $7D9         ; Load 7D9 into I
$FA6    $82E3   XOR      V2, VE          ; V2 ^= VE
$FA8    $D8CD   DRW      V8, VC, #D      ; Draw 13-byte sprite at V8, VC
$FAA    $B763   JP       V0, $763        ; Jump to V0 + 763
$FAC    $A0A9   LD       I, $0A9         ; Load 0A9 into I
$FAE    $9613   UNKNOWN  $9613           ; Unknown 9xxx instruction
$FB0    $A60F   LD       I, $60F         ; Load 60F into I
$FB2    $1EC5   JP       $EC5            ; Jump to EC5
$FB4    $8418   UNKNOWN  8418            ; Unknown 8xxx instruction
$FB6    $FA32   UNKNOWN  FA32            ; Unknown Fxxx instruction
$FB8    $011C   SYS      $11C            ; System call to 11C
$FBA    $F293   UNKNOWN  F293            ; Unknown Fxxx instruction
$FBC    $F7F1   UNKNOWN  F7F1            ; Unknown Fxxx instruction
$FBE    $924A   UNKNOWN  $924A           ; Unknown 9xxx instruction
$FC0    $1839   JP       $839            ; Jump to 839
$FC2    $D813   DRW      V8, V1, #3      ; Draw 3-byte sprite at V8, V1
$FC4    $DDCD   DRW      VD, VC, #D      ; Draw 13-byte sprite at VD, VC
$FC6    $1392   JP       $392            ; Jump to 392
$FC8    $9EBE   UNKNOWN  $9EBE           ; Unknown 9xxx instruction
$FCA    $86DD   UNKNOWN  86DD            ; Unknown 8xxx instruction
$FCC    $CC72   RND      VC, #72         ; VC = random & 72
$FCE    $A041   LD       I, $041         ; Load 041 into I
$FD0    $ACC3   LD       I, $CC3         ; Load CC3 into I
$FD2    $575D   UNKNOWN  $575D           ; Unknown 5xxx instruction
$FD4    $C6C9   RND      V6, #C9         ; V6 = random & C9
$FD6    $09CB   SYS      $9CB            ; System call to 9CB
$FD8    $AD9C   LD       I, $D9C         ; Load D9C into I
$FDA    $E03A   UNKNOWN  $E03A           ; Unknown Exxx instruction
$FDC    $E3ED   UNKNOWN  $E3ED           ; Unknown Exxx instruction
$FDE    $2596   CALL     $596            ; Call subroutine at 596
$FE0    $B3D9   JP       V0, $3D9        ; Jump to V0 + 3D9
$FE2    $BCC7   JP       V0, $CC7        ; Jump to V0 + CC7
$FE4    $AF17   LD       I, $F17         ; Load F17 into I
$FE6    $CDFC   RND      VD, #FC         ; VD = random & FC
$FE8    $EFC0   UNKNOWN  $EFC0           ; Unknown Exxx instruction
$FEA    $AAC1   LD       I, $AC1         ; Load AC1 into I
$FEC    $05A7   SYS      $5A7            ; System call to 5A7
$FEE    $B435   JP       V0, $435        ; Jump to V0 + 435
$FF0    $8E99   UNKNOWN  8E99            ; Unknown 8xxx instruction
$FF2    $89EE   SHL      V9              ; V9 <<= 1, VF = MSB
$FF4    $C81D   RND      V8, #1D         ; V8 = random & 1D
$FF6    $A737   LD       I, $737         ; Load 737 into I
$FF8    $A3CD   LD       I, $3CD         ; Load 3CD into I
$FFA    $8F3B   UNKNOWN  8F3B            ; Unknown 8xxx instruction
$FFC    $7734   ADD      V7, #34         ; Add 52 to V7
$FFE    $4ED4   SNE      VE, #D4         ; Skip if VE != 212

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 489 (27.3%)
  LD      : 245 (13.7%)
  JP      : 203 (11.3%)
  SE      : 165 ( 9.2%)
  CALL    : 124 ( 6.9%)
  ADD     : 114 ( 6.4%)
  RND     : 110 ( 6.1%)
  DRW     : 101 ( 5.6%)
  SNE     :  97 ( 5.4%)
  SYS     :  88 ( 4.9%)
  AND     :  17 ( 0.9%)
  OR      :   8 ( 0.4%)
  XOR     :   8 ( 0.4%)
  SUB     :   7 ( 0.4%)
  SHR     :   6 ( 0.3%)
  SHL     :   5 ( 0.3%)
  SUBN    :   4 ( 0.2%)
  SKP     :   1 ( 0.1%)

Memory Operations: 359 (20.0%)
Arithmetic Operations: 158 (8.8%)
