
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B3386D01_I19750_C1001_17ebe820511c.ch8
ROM Size: 3584 bytes
Instructions Found: 1791

DISCOVERY INFORMATION:
Batch: 3386
Instance: 19750
Direction: ascending
Final Array: [0, 0, 8, 17, 40, 82, 138, 196]
Operations: R:0 W:1 C:72 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 116
Sort Array References:
  $210: LD I, $300 ; Load 300 into I
  $25A: LD I, $10C ; Load 10C into I
  $292: LD I, $93A ; Load 93A into I
  $29E: LD I, $A5A ; Load A5A into I
  $2A2: LD I, $DF1 ; Load DF1 into I
  $2B6: LD I, $18B ; Load 18B into I
  $2CA: LD I, $E61 ; Load E61 into I
  $322: LD I, $442 ; Load 442 into I
  $340: LD I, $104 ; Load 104 into I
  $362: LD I, $F64 ; Load F64 into I
  $37A: LD I, $C4D ; Load C4D into I
  $39C: LD I, $DEE ; Load DEE into I
  $3E6: LD I, $CCA ; Load CCA into I
  $3F6: LD I, $96D ; Load 96D into I
  $42A: LD I, $771 ; Load 771 into I
  $450: LD I, $77C ; Load 77C into I
  $47E: LD I, $3AC ; Load 3AC into I
  $4B0: LD I, $4A1 ; Load 4A1 into I
  $4F4: LD I, $D3F ; Load D3F into I
  $506: LD I, $7D4 ; Load 7D4 into I
  $51A: LD I, $D7F ; Load D7F into I
  $570: LD I, $865 ; Load 865 into I
  $57A: LD I, $94D ; Load 94D into I
  $598: LD I, $B50 ; Load B50 into I
  $5A2: LD I, $A29 ; Load A29 into I
  $5BC: LD I, $ED7 ; Load ED7 into I
  $5C8: LD I, $52D ; Load 52D into I
  $62E: LD I, $0F2 ; Load 0F2 into I
  $64E: LD I, $05B ; Load 05B into I
  $686: LD I, $5B2 ; Load 5B2 into I
  $68E: LD I, $503 ; Load 503 into I
  $69E: LD I, $F10 ; Load F10 into I
  $708: LD I, $8AA ; Load 8AA into I
  $71E: LD I, $3B5 ; Load 3B5 into I
  $732: LD I, $3BD ; Load 3BD into I
  $740: LD I, $0C4 ; Load 0C4 into I
  $74C: LD I, $D48 ; Load D48 into I
  $760: LD I, $DD8 ; Load DD8 into I
  $764: LD I, $E6D ; Load E6D into I
  $78A: LD I, $E81 ; Load E81 into I
  $792: LD I, $6C3 ; Load 6C3 into I
  $79E: LD I, $6C4 ; Load 6C4 into I
  $7A2: LD I, $10C ; Load 10C into I
  $7A8: LD I, $25A ; Load 25A into I
  $7F6: LD I, $387 ; Load 387 into I
  $846: LD I, $CA0 ; Load CA0 into I
  $84C: LD I, $E88 ; Load E88 into I
  $866: LD I, $7B9 ; Load 7B9 into I
  $868: ADD I, V6 ; I ADDRESS MANIPULATION
  $8CE: LD I, $1A1 ; Load 1A1 into I
  $8FC: LD I, $591 ; Load 591 into I
  $912: LD I, $A0D ; Load A0D into I
  $936: LD I, $24D ; Load 24D into I
  $94A: LD I, $2CD ; Load 2CD into I
  $964: LD I, $7FC ; Load 7FC into I
  $974: LD I, $B00 ; Load B00 into I
  $998: LD I, $F80 ; Load F80 into I
  $99C: LD I, $304 ; Load 304 into I
  $9A2: LD I, $526 ; Load 526 into I
  $9A6: LD I, $B4F ; Load B4F into I
  $9DE: LD I, $429 ; Load 429 into I
  $9E6: LD I, $EDB ; Load EDB into I
  $9EE: LD I, $02F ; Load 02F into I
  $A14: LD I, $01B ; Load 01B into I
  $A26: LD I, $4B6 ; Load 4B6 into I
  $A7A: LD I, $C8B ; Load C8B into I
  $A96: LD I, $FAD ; Load FAD into I
  $ABE: LD I, $371 ; Load 371 into I
  $AC8: LD I, $EE6 ; Load EE6 into I
  $AD0: LD I, $E61 ; Load E61 into I
  $ADA: LD I, $14D ; Load 14D into I
  $AE2: LD I, $44C ; Load 44C into I
  $B1C: LD I, $4E3 ; Load 4E3 into I
  $B36: LD I, $091 ; Load 091 into I
  $B38: LD I, $2D4 ; Load 2D4 into I
  $B60: LD I, $24D ; Load 24D into I
  $B8E: LD I, $64C ; Load 64C into I
  $BB2: LD I, $9CC ; Load 9CC into I
  $BC8: LD I, $6CC ; Load 6CC into I
  $C02: LD I, $1EB ; Load 1EB into I
  $C26: LD I, $B70 ; Load B70 into I
  $C2C: LD I, $F4E ; Load F4E into I
  $C94: LD I, $F8A ; Load F8A into I
  $CDA: LD I, $EAB ; Load EAB into I
  $D0A: LD I, $41F ; Load 41F into I
  $D28: LD I, $840 ; Load 840 into I
  $D3E: LD I, $32F ; Load 32F into I
  $D62: LD I, $273 ; Load 273 into I
  $D64: LD I, $B1C ; Load B1C into I
  $D82: LD I, $06C ; Load 06C into I
  $DB6: LD I, $FFD ; Load FFD into I
  $DC0: LD I, $20B ; Load 20B into I
  $DC8: LD I, $299 ; Load 299 into I
  $DF8: LD I, $EB1 ; Load EB1 into I
  $E04: LD I, $DDD ; Load DDD into I
  $E20: LD I, $800 ; Load 800 into I
  $E30: LD I, $3AA ; Load 3AA into I
  $E40: LD I, $0BD ; Load 0BD into I
  $E4C: LD I, $5FD ; Load 5FD into I
  $E56: LD I, $435 ; Load 435 into I
  $E5E: LD I, $2A4 ; Load 2A4 into I
  $E84: LD I, $511 ; Load 511 into I
  $E9C: LD I, $DCE ; Load DCE into I
  $EC2: LD I, $6E3 ; Load 6E3 into I
  $ED8: LD I, $ED6 ; Load ED6 into I
  $EEA: LD I, $CAD ; Load CAD into I
  $EF4: LD I, $573 ; Load 573 into I
  $EFC: LD I, $70A ; Load 70A into I
  $F32: LD I, $1CB ; Load 1CB into I
  $F42: LD I, $84A ; Load 84A into I
  $F6C: LD I, $2CB ; Load 2CB into I
  $F7C: LD I, $6DD ; Load 6DD into I
  $F7E: LD I, $C56 ; Load C56 into I
  $F96: LD I, $A53 ; Load A53 into I
  $FA4: LD I, $DBF ; Load DBF into I
  $FEA: LD I, $EAF ; Load EAF into I

CONTROL FLOW ANALYSIS:
Jumps: 231
Calls: 105
Branches: 219
Loops: 117
Loop Structures:
  $21E -> $15C (backward jump)
  $2E4 -> $1CF (backward jump)
  $316 -> $234 (backward jump)
  $338 -> $03E (backward jump)
  $380 -> $2F5 (backward jump)
  $432 -> $09A (backward jump)
  $4AE -> $232 (backward jump)
  $4E4 -> $042 (backward jump)
  $522 -> $026 (backward jump)
  $56A -> $136 (backward jump)
  $5D6 -> $593 (backward jump)
  $5E2 -> $3A7 (backward jump)
  $630 -> $54E (backward jump)
  $632 -> $48B (backward jump)
  $6A6 -> $53B (backward jump)
  $6CE -> $226 (backward jump)
  $6D2 -> $50C (backward jump)
  $6DE -> $46A (backward jump)
  $6F4 -> $181 (backward jump)
  $706 -> $271 (backward jump)
  $716 -> $07F (backward jump)
  $720 -> $0F1 (backward jump)
  $74A -> $1BF (backward jump)
  $7BE -> $22D (backward jump)
  $7E4 -> $27A (backward jump)
  $85A -> $136 (backward jump)
  $878 -> $554 (backward jump)
  $88C -> $6CF (backward jump)
  $894 -> $47E (backward jump)
  $898 -> $3D1 (backward jump)
  $8CA -> $664 (backward jump)
  $906 -> $7DA (backward jump)
  $908 -> $64D (backward jump)
  $922 -> $54A (backward jump)
  $972 -> $6C7 (backward jump)
  $98A -> $6EA (backward jump)
  $98E -> $4DC (backward jump)
  $9A8 -> $12F (backward jump)
  $9AC -> $46C (backward jump)
  $9CC -> $64C (backward jump)
  $9D4 -> $3BF (backward jump)
  $9D6 -> $05C (backward jump)
  $9D8 -> $5BF (backward jump)
  $9E4 -> $5FE (backward jump)
  $9FA -> $28C (backward jump)
  $A1C -> $8C4 (backward jump)
  $A34 -> $298 (backward jump)
  $A58 -> $99F (backward jump)
  $A5A -> $498 (backward jump)
  $A6A -> $3A7 (backward jump)
  $AAC -> $683 (backward jump)
  $AD8 -> $6A2 (backward jump)
  $B0C -> $6D4 (backward jump)
  $B1E -> $3AD (backward jump)
  $B40 -> $75F (backward jump)
  $B44 -> $80B (backward jump)
  $B7A -> $1F4 (backward jump)
  $B8C -> $74E (backward jump)
  $B9E -> $18F (backward jump)
  $BA0 -> $4E6 (backward jump)
  $BB0 -> $22B (backward jump)
  $BE2 -> $A41 (backward jump)
  $C0C -> $31D (backward jump)
  $C0E -> $526 (backward jump)
  $C30 -> $8D7 (backward jump)
  $C4E -> $9EA (backward jump)
  $C56 -> $8F1 (backward jump)
  $C5C -> $25D (backward jump)
  $C78 -> $393 (backward jump)
  $CA4 -> $01B (backward jump)
  $CB6 -> $4F1 (backward jump)
  $CD0 -> $B2A (backward jump)
  $D30 -> $953 (backward jump)
  $D36 -> $BDE (backward jump)
  $D48 -> $3B5 (backward jump)
  $D52 -> $1D0 (backward jump)
  $D54 -> $76A (backward jump)
  $D70 -> $2B6 (backward jump)
  $DAE -> $3FF (backward jump)
  $DB2 -> $7CD (backward jump)
  $DC6 -> $816 (backward jump)
  $DD0 -> $355 (backward jump)
  $DD4 -> $31C (backward jump)
  $DE4 -> $3C9 (backward jump)
  $E22 -> $532 (backward jump)
  $E4A -> $73D (backward jump)
  $E50 -> $6D9 (backward jump)
  $E54 -> $347 (backward jump)
  $E5C -> $4FE (backward jump)
  $E6A -> $A57 (backward jump)
  $E74 -> $C8F (backward jump)
  $E88 -> $0C8 (backward jump)
  $E8E -> $A47 (backward jump)
  $E94 -> $BA1 (backward jump)
  $EA0 -> $C27 (backward jump)
  $EAC -> $78B (backward jump)
  $EAE -> $50A (backward jump)
  $ED4 -> $8DA (backward jump)
  $EEC -> $C08 (backward jump)
  $F08 -> $736 (backward jump)
  $F38 -> $70B (backward jump)
  $F46 -> $022 (backward jump)
  $F5C -> $23E (backward jump)
  $F72 -> $522 (backward jump)
  $F90 -> $34C (backward jump)
  $F94 -> $1C9 (backward jump)
  $F98 -> $20F (backward jump)
  $FAC -> $3B5 (backward jump)
  $FAE -> $2EE (backward jump)
  $FB6 -> $978 (backward jump)
  $FC4 -> $2E1 (backward jump)
  $FC8 -> $9B8 (backward jump)
  $FD4 -> $5AE (backward jump)
  $FDA -> $756 (backward jump)
  $FE4 -> $374 (backward jump)
  $FE6 -> $F38 (backward jump)
  $FF0 -> $D62 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $745E   ADD      V4, #5E         ; Add 94 to V4
$202    $4B23   SNE      VB, #23         ; Skip if VB != 35
$204    $1550   JP       $550            ; Jump to 550
$206    $4A61   SNE      VA, #61         ; Skip if VA != 97
$208    $4654   SNE      V6, #54         ; Skip if V6 != 84
$20A    $EC89   UNKNOWN  $EC89           ; Unknown Exxx instruction
$20C    $85F9   UNKNOWN  85F9            ; Unknown 8xxx instruction
$20E    $2A9B   CALL     $A9B            ; Call subroutine at A9B
$210    $A300   LD       I, $300         ; Load 300 into I
$212    $FE33   LD       B, VE           ; Store BCD of VE at I, I+1, I+2
$214    $BF77   JP       V0, $F77        ; Jump to V0 + F77
$216    $7F9A   ADD      VF, #9A         ; Add 154 to VF
$218    $8669   UNKNOWN  8669            ; Unknown 8xxx instruction
$21A    $7EC6   ADD      VE, #C6         ; Add 198 to VE
$21C    $BBED   JP       V0, $BED        ; Jump to V0 + BED
$21E    $B15C   JP       V0, $15C        ; Jump to V0 + 15C
$220    $B440   JP       V0, $440        ; Jump to V0 + 440
$222    $8331   OR       V3, V3          ; V3 |= V3
$224    $3841   SE       V8, #41         ; Skip if V8 == 65
$226    $8FFA   UNKNOWN  8FFA            ; Unknown 8xxx instruction
$228    $3007   SE       V0, #07         ; Skip if V0 == 7
$22A    $9816   UNKNOWN  $9816           ; Unknown 9xxx instruction
$22C    $7D36   ADD      VD, #36         ; Add 54 to VD
$22E    $1BD4   JP       $BD4            ; Jump to BD4
$230    $7FAD   ADD      VF, #AD         ; Add 173 to VF
$232    $DE65   DRW      VE, V6, #5      ; Draw 5-byte sprite at VE, V6
$234    $7518   ADD      V5, #18         ; Add 24 to V5
$236    $2E6E   CALL     $E6E            ; Call subroutine at E6E
$238    $71D3   ADD      V1, #D3         ; Add 211 to V1
$23A    $8041   OR       V0, V4          ; V0 |= V4
$23C    $6C33   LD       VC, #33         ; Load 51 into VC
$23E    $50A5   UNKNOWN  $50A5           ; Unknown 5xxx instruction
$240    $32B6   SE       V2, #B6         ; Skip if V2 == 182
$242    $B95A   JP       V0, $95A        ; Jump to V0 + 95A
$244    $59B0   SE       V9, VB          ; Skip if V9 == VB
$246    $40E5   SNE      V0, #E5         ; Skip if V0 != 229
$248    $5ADD   UNKNOWN  $5ADD           ; Unknown 5xxx instruction
$24A    $1FA3   JP       $FA3            ; Jump to FA3
$24C    $173F   JP       $73F            ; Jump to 73F
$24E    $3BD9   SE       VB, #D9         ; Skip if VB == 217
$250    $70C4   ADD      V0, #C4         ; Add 196 to V0
$252    $219D   CALL     $19D            ; Call subroutine at 19D
$254    $1C4F   JP       $C4F            ; Jump to C4F
$256    $5984   UNKNOWN  $5984           ; Unknown 5xxx instruction
$258    $DE2C   DRW      VE, V2, #C      ; Draw 12-byte sprite at VE, V2
$25A    $A10C   LD       I, $10C         ; Load 10C into I
$25C    $042B   SYS      $42B            ; System call to 42B
$25E    $B8AD   JP       V0, $8AD        ; Jump to V0 + 8AD
$260    $7B91   ADD      VB, #91         ; Add 145 to VB
$262    $46AB   SNE      V6, #AB         ; Skip if V6 != 171
$264    $7F98   ADD      VF, #98         ; Add 152 to VF
$266    $E763   UNKNOWN  $E763           ; Unknown Exxx instruction
$268    $C3CD   RND      V3, #CD         ; V3 = random & CD
$26A    $990F   UNKNOWN  $990F           ; Unknown 9xxx instruction
$26C    $C334   RND      V3, #34         ; V3 = random & 34
$26E    $6E80   LD       VE, #80         ; Load 128 into VE
$270    $6D20   LD       VD, #20         ; Load 32 into VD
$272    $8036   SHR      V0              ; V0 >>= 1, VF = LSB
$274    $7108   ADD      V1, #08         ; Add 8 to V1
$276    $9AEE   UNKNOWN  $9AEE           ; Unknown 9xxx instruction
$278    $46F2   SNE      V6, #F2         ; Skip if V6 != 242
$27A    $1C46   JP       $C46            ; Jump to C46
$27C    $C6DD   RND      V6, #DD         ; V6 = random & DD
$27E    $C942   RND      V9, #42         ; V9 = random & 42
$280    $F781   UNKNOWN  F781            ; Unknown Fxxx instruction
$282    $EB66   UNKNOWN  $EB66           ; Unknown Exxx instruction
$284    $2191   CALL     $191            ; Call subroutine at 191
$286    $5308   UNKNOWN  $5308           ; Unknown 5xxx instruction
$288    $4EA9   SNE      VE, #A9         ; Skip if VE != 169
$28A    $C544   RND      V5, #44         ; V5 = random & 44
$28C    $CA4E   RND      VA, #4E         ; VA = random & 4E
$28E    $6D7E   LD       VD, #7E         ; Load 126 into VD
$290    $6508   LD       V5, #08         ; Load 8 into V5
$292    $A93A   LD       I, $93A         ; Load 93A into I
$294    $CEBA   RND      VE, #BA         ; VE = random & BA
$296    $58D1   UNKNOWN  $58D1           ; Unknown 5xxx instruction
$298    $9737   UNKNOWN  $9737           ; Unknown 9xxx instruction
$29A    $B4CE   JP       V0, $4CE        ; Jump to V0 + 4CE
$29C    $4C72   SNE      VC, #72         ; Skip if VC != 114
$29E    $AA5A   LD       I, $A5A         ; Load A5A into I
$2A0    $6C04   LD       VC, #04         ; Load 4 into VC
$2A2    $ADF1   LD       I, $DF1         ; Load DF1 into I
$2A4    $57EC   UNKNOWN  $57EC           ; Unknown 5xxx instruction
$2A6    $56D7   UNKNOWN  $56D7           ; Unknown 5xxx instruction
$2A8    $5073   UNKNOWN  $5073           ; Unknown 5xxx instruction
$2AA    $7807   ADD      V8, #07         ; Add 7 to V8
$2AC    $9F01   UNKNOWN  $9F01           ; Unknown 9xxx instruction
$2AE    $CED6   RND      VE, #D6         ; VE = random & D6
$2B0    $0B7F   SYS      $B7F            ; System call to B7F
$2B2    $860D   UNKNOWN  860D            ; Unknown 8xxx instruction
$2B4    $76C4   ADD      V6, #C4         ; Add 196 to V6
$2B6    $A18B   LD       I, $18B         ; Load 18B into I
$2B8    $D066   DRW      V0, V6, #6      ; Draw 6-byte sprite at V0, V6
$2BA    $0EC0   SYS      $EC0            ; System call to EC0
$2BC    $5F3C   UNKNOWN  $5F3C           ; Unknown 5xxx instruction
$2BE    $B9F0   JP       V0, $9F0        ; Jump to V0 + 9F0
$2C0    $311B   SE       V1, #1B         ; Skip if V1 == 27
$2C2    $FAE6   UNKNOWN  FAE6            ; Unknown Fxxx instruction
$2C4    $8B12   AND      VB, V1          ; VB &= V1
$2C6    $566E   UNKNOWN  $566E           ; Unknown 5xxx instruction
$2C8    $194A   JP       $94A            ; Jump to 94A
$2CA    $AE61   LD       I, $E61         ; Load E61 into I
$2CC    $0342   SYS      $342            ; System call to 342
$2CE    $37A9   SE       V7, #A9         ; Skip if V7 == 169
$2D0    $7723   ADD      V7, #23         ; Add 35 to V7
$2D2    $26FD   CALL     $6FD            ; Call subroutine at 6FD
$2D4    $78B6   ADD      V8, #B6         ; Add 182 to V8
$2D6    $7D36   ADD      VD, #36         ; Add 54 to VD
$2D8    $0B4B   SYS      $B4B            ; System call to B4B
$2DA    $EB4B   UNKNOWN  $EB4B           ; Unknown Exxx instruction
$2DC    $D967   DRW      V9, V6, #7      ; Draw 7-byte sprite at V9, V6
$2DE    $D092   DRW      V0, V9, #2      ; Draw 2-byte sprite at V0, V9
$2E0    $4A71   SNE      VA, #71         ; Skip if VA != 113
$2E2    $BE9D   JP       V0, $E9D        ; Jump to V0 + E9D
$2E4    $11CF   JP       $1CF            ; Jump to 1CF
$2E6    $903E   UNKNOWN  $903E           ; Unknown 9xxx instruction
$2E8    $6B39   LD       VB, #39         ; Load 57 into VB
$2EA    $21AA   CALL     $1AA            ; Call subroutine at 1AA
$2EC    $444B   SNE      V4, #4B         ; Skip if V4 != 75
$2EE    $4AA0   SNE      VA, #A0         ; Skip if VA != 160
$2F0    $D6C7   DRW      V6, VC, #7      ; Draw 7-byte sprite at V6, VC
$2F2    $EECE   UNKNOWN  $EECE           ; Unknown Exxx instruction
$2F4    $7FA4   ADD      VF, #A4         ; Add 164 to VF
$2F6    $0E2B   SYS      $E2B            ; System call to E2B
$2F8    $B3E0   JP       V0, $3E0        ; Jump to V0 + 3E0
$2FA    $30F3   SE       V0, #F3         ; Skip if V0 == 243
$2FC    $1360   JP       $360            ; Jump to 360
$2FE    $00BF   SYS      $0BF            ; System call to 0BF
$302    $0811   SYS      $811            ; System call to 811
$304    $2852   CALL     $852            ; Call subroutine at 852
$306    $8AC4   ADD      VA, VC          ; VA += VC, VF = carry
$308    $7622   ADD      V6, #22         ; Add 34 to V6
$30A    $70C6   ADD      V0, #C6         ; Add 198 to V0
$30C    $9FAD   UNKNOWN  $9FAD           ; Unknown 9xxx instruction
$30E    $0897   SYS      $897            ; System call to 897
$310    $8803   XOR      V8, V0          ; V8 ^= V0
$312    $4BFB   SNE      VB, #FB         ; Skip if VB != 251
$314    $BCE9   JP       V0, $CE9        ; Jump to V0 + CE9
$316    $B234   JP       V0, $234        ; Jump to V0 + 234
$318    $DDC4   DRW      VD, VC, #4      ; Draw 4-byte sprite at VD, VC
$31A    $8A17   SUBN     VA, V1          ; VA = V1 - VA, VF = !borrow
$31C    $ED35   UNKNOWN  $ED35           ; Unknown Exxx instruction
$31E    $2C82   CALL     $C82            ; Call subroutine at C82
$320    $175C   JP       $75C            ; Jump to 75C
$322    $A442   LD       I, $442         ; Load 442 into I
$324    $7082   ADD      V0, #82         ; Add 130 to V0
$326    $C10D   RND      V1, #0D         ; V1 = random & 0D
$328    $88F0   LD       V8, VF          ; V8 = VF
$32A    $2AFC   CALL     $AFC            ; Call subroutine at AFC
$32C    $FD69   UNKNOWN  FD69            ; Unknown Fxxx instruction
$32E    $34EB   SE       V4, #EB         ; Skip if V4 == 235
$330    $8192   AND      V1, V9          ; V1 &= V9
$332    $919D   UNKNOWN  $919D           ; Unknown 9xxx instruction
$334    $8BEF   UNKNOWN  8BEF            ; Unknown 8xxx instruction
$336    $1CE7   JP       $CE7            ; Jump to CE7
$338    $103E   JP       $03E            ; Jump to 03E
$33A    $1F08   JP       $F08            ; Jump to F08
$33C    $7645   ADD      V6, #45         ; Add 69 to V6
$33E    $FBE6   UNKNOWN  FBE6            ; Unknown Fxxx instruction
$340    $A104   LD       I, $104         ; Load 104 into I
$342    $C35D   RND      V3, #5D         ; V3 = random & 5D
$344    $3049   SE       V0, #49         ; Skip if V0 == 73
$346    $1550   JP       $550            ; Jump to 550
$348    $DB6B   DRW      VB, V6, #B      ; Draw 11-byte sprite at VB, V6
$34A    $F710   UNKNOWN  F710            ; Unknown Fxxx instruction
$34C    $80FB   UNKNOWN  80FB            ; Unknown 8xxx instruction
$34E    $85DE   SHL      V5              ; V5 <<= 1, VF = MSB
$350    $15C8   JP       $5C8            ; Jump to 5C8
$352    $D5A1   DRW      V5, VA, #1      ; Draw 1-byte sprite at V5, VA
$354    $3203   SE       V2, #03         ; Skip if V2 == 3
$356    $D19E   DRW      V1, V9, #E      ; Draw 14-byte sprite at V1, V9
$358    $4012   SNE      V0, #12         ; Skip if V0 != 18
$35A    $0EBF   SYS      $EBF            ; System call to EBF
$35C    $C6C7   RND      V6, #C7         ; V6 = random & C7
$35E    $9ED9   UNKNOWN  $9ED9           ; Unknown 9xxx instruction
$360    $84FF   UNKNOWN  84FF            ; Unknown 8xxx instruction
$362    $AF64   LD       I, $F64         ; Load F64 into I
$364    $C868   RND      V8, #68         ; V8 = random & 68
$366    $D494   DRW      V4, V9, #4      ; Draw 4-byte sprite at V4, V9
$368    $7791   ADD      V7, #91         ; Add 145 to V7
$36A    $4B5E   SNE      VB, #5E         ; Skip if VB != 94
$36C    $E143   UNKNOWN  $E143           ; Unknown Exxx instruction
$36E    $68F5   LD       V8, #F5         ; Load 245 into V8
$370    $0328   SYS      $328            ; System call to 328
$372    $C3D5   RND      V3, #D5         ; V3 = random & D5
$374    $9C55   UNKNOWN  $9C55           ; Unknown 9xxx instruction
$376    $7208   ADD      V2, #08         ; Add 8 to V2
$378    $21D5   CALL     $1D5            ; Call subroutine at 1D5
$37A    $AC4D   LD       I, $C4D         ; Load C4D into I
$37C    $88AD   UNKNOWN  88AD            ; Unknown 8xxx instruction
$37E    $737B   ADD      V3, #7B         ; Add 123 to V3
$380    $12F5   JP       $2F5            ; Jump to 2F5
$382    $44C4   SNE      V4, #C4         ; Skip if V4 != 196
$384    $7E2D   ADD      VE, #2D         ; Add 45 to VE
$386    $CF35   RND      VF, #35         ; VF = random & 35
$388    $4BF3   SNE      VB, #F3         ; Skip if VB != 243
$38A    $0C3C   SYS      $C3C            ; System call to C3C
$38C    $CE7C   RND      VE, #7C         ; VE = random & 7C
$38E    $45DE   SNE      V5, #DE         ; Skip if V5 != 222
$390    $419F   SNE      V1, #9F         ; Skip if V1 != 159
$392    $6A7B   LD       VA, #7B         ; Load 123 into VA
$394    $08DC   SYS      $8DC            ; System call to 8DC
$396    $D223   DRW      V2, V2, #3      ; Draw 3-byte sprite at V2, V2
$398    $C2BC   RND      V2, #BC         ; V2 = random & BC
$39A    $32EF   SE       V2, #EF         ; Skip if V2 == 239
$39C    $ADEE   LD       I, $DEE         ; Load DEE into I
$39E    $C503   RND      V5, #03         ; V5 = random & 03
$3A0    $2F5C   CALL     $F5C            ; Call subroutine at F5C
$3A2    $B90D   JP       V0, $90D        ; Jump to V0 + 90D
$3A4    $6851   LD       V8, #51         ; Load 81 into V8
$3A6    $752B   ADD      V5, #2B         ; Add 43 to V5
$3A8    $50BF   UNKNOWN  $50BF           ; Unknown 5xxx instruction
$3AA    $1973   JP       $973            ; Jump to 973
$3AC    $37CC   SE       V7, #CC         ; Skip if V7 == 204
$3AE    $185C   JP       $85C            ; Jump to 85C
$3B0    $E367   UNKNOWN  $E367           ; Unknown Exxx instruction
$3B2    $8A29   UNKNOWN  8A29            ; Unknown 8xxx instruction
$3B4    $7B39   ADD      VB, #39         ; Add 57 to VB
$3B6    $594D   UNKNOWN  $594D           ; Unknown 5xxx instruction
$3B8    $1633   JP       $633            ; Jump to 633
$3BA    $1F23   JP       $F23            ; Jump to F23
$3BC    $BA44   JP       V0, $A44        ; Jump to V0 + A44
$3BE    $7E3C   ADD      VE, #3C         ; Add 60 to VE
$3C0    $6C71   LD       VC, #71         ; Load 113 into VC
$3C2    $BDDE   JP       V0, $DDE        ; Jump to V0 + DDE
$3C4    $84A4   ADD      V4, VA          ; V4 += VA, VF = carry
$3C6    $1A1A   JP       $A1A            ; Jump to A1A
$3C8    $1E7F   JP       $E7F            ; Jump to E7F
$3CA    $F844   UNKNOWN  F844            ; Unknown Fxxx instruction
$3CC    $EF2A   UNKNOWN  $EF2A           ; Unknown Exxx instruction
$3CE    $6113   LD       V1, #13         ; Load 19 into V1
$3D0    $749C   ADD      V4, #9C         ; Add 156 to V4
$3D2    $22ED   CALL     $2ED            ; Call subroutine at 2ED
$3D4    $4BB9   SNE      VB, #B9         ; Skip if VB != 185
$3D6    $88D9   UNKNOWN  88D9            ; Unknown 8xxx instruction
$3D8    $D81F   DRW      V8, V1, #F      ; Draw 15-byte sprite at V8, V1
$3DA    $E95F   UNKNOWN  $E95F           ; Unknown Exxx instruction
$3DC    $B7A8   JP       V0, $7A8        ; Jump to V0 + 7A8
$3DE    $48C2   SNE      V8, #C2         ; Skip if V8 != 194
$3E0    $3476   SE       V4, #76         ; Skip if V4 == 118
$3E2    $FFEA   UNKNOWN  FFEA            ; Unknown Fxxx instruction
$3E4    $309B   SE       V0, #9B         ; Skip if V0 == 155
$3E6    $ACCA   LD       I, $CCA         ; Load CCA into I
$3E8    $44A6   SNE      V4, #A6         ; Skip if V4 != 166
$3EA    $DF9C   DRW      VF, V9, #C      ; Draw 12-byte sprite at VF, V9
$3EC    $DB06   DRW      VB, V0, #6      ; Draw 6-byte sprite at VB, V0
$3EE    $9576   UNKNOWN  $9576           ; Unknown 9xxx instruction
$3F0    $57ED   UNKNOWN  $57ED           ; Unknown 5xxx instruction
$3F2    $56B6   UNKNOWN  $56B6           ; Unknown 5xxx instruction
$3F4    $4CFD   SNE      VC, #FD         ; Skip if VC != 253
$3F6    $A96D   LD       I, $96D         ; Load 96D into I
$3F8    $F1F7   UNKNOWN  F1F7            ; Unknown Fxxx instruction
$3FA    $E600   UNKNOWN  $E600           ; Unknown Exxx instruction
$3FC    $2BB1   CALL     $BB1            ; Call subroutine at BB1
$3FE    $93F5   UNKNOWN  $93F5           ; Unknown 9xxx instruction
$400    $0802   SYS      $802            ; System call to 802
$402    $849D   UNKNOWN  849D            ; Unknown 8xxx instruction
$404    $5E25   UNKNOWN  $5E25           ; Unknown 5xxx instruction
$406    $99F9   UNKNOWN  $99F9           ; Unknown 9xxx instruction
$408    $D438   DRW      V4, V3, #8      ; Draw 8-byte sprite at V4, V3
$40A    $5BAC   UNKNOWN  $5BAC           ; Unknown 5xxx instruction
$40C    $875F   UNKNOWN  875F            ; Unknown 8xxx instruction
$40E    $E757   UNKNOWN  $E757           ; Unknown Exxx instruction
$410    $D8B2   DRW      V8, VB, #2      ; Draw 2-byte sprite at V8, VB
$412    $6CC0   LD       VC, #C0         ; Load 192 into VC
$414    $70EB   ADD      V0, #EB         ; Add 235 to V0
$416    $54B3   UNKNOWN  $54B3           ; Unknown 5xxx instruction
$418    $41AD   SNE      V1, #AD         ; Skip if V1 != 173
$41A    $FF08   UNKNOWN  FF08            ; Unknown Fxxx instruction
$41C    $97A7   UNKNOWN  $97A7           ; Unknown 9xxx instruction
$41E    $7E42   ADD      VE, #42         ; Add 66 to VE
$420    $19B7   JP       $9B7            ; Jump to 9B7
$422    $5B80   SE       VB, V8          ; Skip if VB == V8
$424    $F41B   UNKNOWN  F41B            ; Unknown Fxxx instruction
$426    $5A53   UNKNOWN  $5A53           ; Unknown 5xxx instruction
$428    $47DC   SNE      V7, #DC         ; Skip if V7 != 220
$42A    $A771   LD       I, $771         ; Load 771 into I
$42C    $DE5C   DRW      VE, V5, #C      ; Draw 12-byte sprite at VE, V5
$42E    $53F7   UNKNOWN  $53F7           ; Unknown 5xxx instruction
$430    $2C1E   CALL     $C1E            ; Call subroutine at C1E
$432    $109A   JP       $09A            ; Jump to 09A
$434    $18BB   JP       $8BB            ; Jump to 8BB
$436    $E5BE   UNKNOWN  $E5BE           ; Unknown Exxx instruction
$438    $DB40   DRW      VB, V4, #0      ; Draw 0-byte sprite at VB, V4
$43A    $97D3   UNKNOWN  $97D3           ; Unknown 9xxx instruction
$43C    $2521   CALL     $521            ; Call subroutine at 521
$43E    $F768   UNKNOWN  F768            ; Unknown Fxxx instruction
$440    $709C   ADD      V0, #9C         ; Add 156 to V0
$442    $28E2   CALL     $8E2            ; Call subroutine at 8E2
$444    $4EEA   SNE      VE, #EA         ; Skip if VE != 234
$446    $C26C   RND      V2, #6C         ; V2 = random & 6C
$448    $012E   SYS      $12E            ; System call to 12E
$44A    $95DF   UNKNOWN  $95DF           ; Unknown 9xxx instruction
$44C    $64E7   LD       V4, #E7         ; Load 231 into V4
$44E    $51B1   UNKNOWN  $51B1           ; Unknown 5xxx instruction
$450    $A77C   LD       I, $77C         ; Load 77C into I
$452    $C9EF   RND      V9, #EF         ; V9 = random & EF
$454    $7015   ADD      V0, #15         ; Add 21 to V0
$456    $3C20   SE       VC, #20         ; Skip if VC == 32
$458    $5553   UNKNOWN  $5553           ; Unknown 5xxx instruction
$45A    $4EE9   SNE      VE, #E9         ; Skip if VE != 233
$45C    $900A   UNKNOWN  $900A           ; Unknown 9xxx instruction
$45E    $25F9   CALL     $5F9            ; Call subroutine at 5F9
$460    $DEA8   DRW      VE, VA, #8      ; Draw 8-byte sprite at VE, VA
$462    $02AC   SYS      $2AC            ; System call to 2AC
$464    $BEA1   JP       V0, $EA1        ; Jump to V0 + EA1
$466    $73CC   ADD      V3, #CC         ; Add 204 to V3
$468    $D811   DRW      V8, V1, #1      ; Draw 1-byte sprite at V8, V1
$46A    $7250   ADD      V2, #50         ; Add 80 to V2
$46C    $0C4F   SYS      $C4F            ; System call to C4F
$46E    $1938   JP       $938            ; Jump to 938
$470    $763E   ADD      V6, #3E         ; Add 62 to V6
$472    $EF64   UNKNOWN  $EF64           ; Unknown Exxx instruction
$474    $83A4   ADD      V3, VA          ; V3 += VA, VF = carry
$476    $FAFE   UNKNOWN  FAFE            ; Unknown Fxxx instruction
$478    $5CF7   UNKNOWN  $5CF7           ; Unknown 5xxx instruction
$47A    $460E   SNE      V6, #0E         ; Skip if V6 != 14
$47C    $FD49   UNKNOWN  FD49            ; Unknown Fxxx instruction
$47E    $A3AC   LD       I, $3AC         ; Load 3AC into I
$480    $5BDF   UNKNOWN  $5BDF           ; Unknown 5xxx instruction
$482    $1CF0   JP       $CF0            ; Jump to CF0
$484    $F954   UNKNOWN  F954            ; Unknown Fxxx instruction
$486    $86A6   SHR      V6              ; V6 >>= 1, VF = LSB
$488    $F858   UNKNOWN  F858            ; Unknown Fxxx instruction
$48A    $DE5C   DRW      VE, V5, #C      ; Draw 12-byte sprite at VE, V5
$48C    $189D   JP       $89D            ; Jump to 89D
$48E    $F0C3   UNKNOWN  F0C3            ; Unknown Fxxx instruction
$490    $79F6   ADD      V9, #F6         ; Add 246 to V9
$492    $6342   LD       V3, #42         ; Load 66 into V3
$494    $6C33   LD       VC, #33         ; Load 51 into VC
$496    $702A   ADD      V0, #2A         ; Add 42 to V0
$498    $BBF8   JP       V0, $BF8        ; Jump to V0 + BF8
$49A    $450B   SNE      V5, #0B         ; Skip if V5 != 11
$49C    $6AB0   LD       VA, #B0         ; Load 176 into VA
$49E    $3D2F   SE       VD, #2F         ; Skip if VD == 47
$4A0    $C896   RND      V8, #96         ; V8 = random & 96
$4A2    $84A0   LD       V4, VA          ; V4 = VA
$4A4    $BA00   JP       V0, $A00        ; Jump to V0 + A00
$4A6    $0B85   SYS      $B85            ; System call to B85
$4A8    $CFF8   RND      VF, #F8         ; VF = random & F8
$4AA    $2799   CALL     $799            ; Call subroutine at 799
$4AC    $F19C   UNKNOWN  F19C            ; Unknown Fxxx instruction
$4AE    $B232   JP       V0, $232        ; Jump to V0 + 232
$4B0    $A4A1   LD       I, $4A1         ; Load 4A1 into I
$4B2    $C214   RND      V2, #14         ; V2 = random & 14
$4B4    $6695   LD       V6, #95         ; Load 149 into V6
$4B6    $C896   RND      V8, #96         ; V8 = random & 96
$4B8    $CA95   RND      VA, #95         ; VA = random & 95
$4BA    $BB52   JP       V0, $B52        ; Jump to V0 + B52
$4BC    $F52D   UNKNOWN  F52D            ; Unknown Fxxx instruction
$4BE    $E9FF   UNKNOWN  $E9FF           ; Unknown Exxx instruction
$4C0    $CB1C   RND      VB, #1C         ; VB = random & 1C
$4C2    $6B10   LD       VB, #10         ; Load 16 into VB
$4C4    $7BDF   ADD      VB, #DF         ; Add 223 to VB
$4C6    $0AB9   SYS      $AB9            ; System call to AB9
$4C8    $3DEC   SE       VD, #EC         ; Skip if VD == 236
$4CA    $8791   OR       V7, V9          ; V7 |= V9
$4CC    $23A9   CALL     $3A9            ; Call subroutine at 3A9
$4CE    $FC7B   UNKNOWN  FC7B            ; Unknown Fxxx instruction
$4D0    $72F6   ADD      V2, #F6         ; Add 246 to V2
$4D2    $8B2C   UNKNOWN  8B2C            ; Unknown 8xxx instruction
$4D4    $0D13   SYS      $D13            ; System call to D13
$4D6    $824C   UNKNOWN  824C            ; Unknown 8xxx instruction
$4D8    $EC04   UNKNOWN  $EC04           ; Unknown Exxx instruction
$4DA    $68DD   LD       V8, #DD         ; Load 221 into V8
$4DC    $E1CE   UNKNOWN  $E1CE           ; Unknown Exxx instruction
$4DE    $C84B   RND      V8, #4B         ; V8 = random & 4B
$4E0    $9269   UNKNOWN  $9269           ; Unknown 9xxx instruction
$4E2    $6568   LD       V5, #68         ; Load 104 into V5
$4E4    $1042   JP       $042            ; Jump to 042
$4E6    $386B   SE       V8, #6B         ; Skip if V8 == 107
$4E8    $4E33   SNE      VE, #33         ; Skip if VE != 51
$4EA    $5C7E   UNKNOWN  $5C7E           ; Unknown 5xxx instruction
$4EC    $0672   SYS      $672            ; System call to 672
$4EE    $F2EB   UNKNOWN  F2EB            ; Unknown Fxxx instruction
$4F0    $995D   UNKNOWN  $995D           ; Unknown 9xxx instruction
$4F2    $543B   UNKNOWN  $543B           ; Unknown 5xxx instruction
$4F4    $AD3F   LD       I, $D3F         ; Load D3F into I
$4F6    $EF10   UNKNOWN  $EF10           ; Unknown Exxx instruction
$4F8    $7C76   ADD      VC, #76         ; Add 118 to VC
$4FA    $EC39   UNKNOWN  $EC39           ; Unknown Exxx instruction
$4FC    $4526   SNE      V5, #26         ; Skip if V5 != 38
$4FE    $9ECD   UNKNOWN  $9ECD           ; Unknown 9xxx instruction
$500    $C481   RND      V4, #81         ; V4 = random & 81
$502    $404E   SNE      V0, #4E         ; Skip if V0 != 78
$504    $0334   SYS      $334            ; System call to 334
$506    $A7D4   LD       I, $7D4         ; Load 7D4 into I
$508    $34B7   SE       V4, #B7         ; Skip if V4 == 183
$50A    $95D3   UNKNOWN  $95D3           ; Unknown 9xxx instruction
$50C    $5305   UNKNOWN  $5305           ; Unknown 5xxx instruction
$50E    $8780   LD       V7, V8          ; V7 = V8
$510    $4F18   SNE      VF, #18         ; Skip if VF != 24
$512    $C18B   RND      V1, #8B         ; V1 = random & 8B
$514    $8A65   SUB      VA, V6          ; VA -= V6, VF = !borrow
$516    $6E21   LD       VE, #21         ; Load 33 into VE
$518    $B78A   JP       V0, $78A        ; Jump to V0 + 78A
$51A    $AD7F   LD       I, $D7F         ; Load D7F into I
$51C    $E61F   UNKNOWN  $E61F           ; Unknown Exxx instruction
$51E    $3669   SE       V6, #69         ; Skip if V6 == 105
$520    $1B9E   JP       $B9E            ; Jump to B9E
$522    $B026   JP       V0, $026        ; Jump to V0 + 026
$524    $8B6D   UNKNOWN  8B6D            ; Unknown 8xxx instruction
$526    $6F56   LD       VF, #56         ; Load 86 into VF
$528    $EC6D   UNKNOWN  $EC6D           ; Unknown Exxx instruction
$52A    $164D   JP       $64D            ; Jump to 64D
$52C    $B577   JP       V0, $577        ; Jump to V0 + 577
$52E    $E7FE   UNKNOWN  $E7FE           ; Unknown Exxx instruction
$530    $82B6   SHR      V2              ; V2 >>= 1, VF = LSB
$532    $D458   DRW      V4, V5, #8      ; Draw 8-byte sprite at V4, V5
$534    $6926   LD       V9, #26         ; Load 38 into V9
$536    $96BF   UNKNOWN  $96BF           ; Unknown 9xxx instruction
$538    $0465   SYS      $465            ; System call to 465
$53A    $5F3D   UNKNOWN  $5F3D           ; Unknown 5xxx instruction
$53C    $BFE0   JP       V0, $FE0        ; Jump to V0 + FE0
$53E    $0696   SYS      $696            ; System call to 696
$540    $1B61   JP       $B61            ; Jump to B61
$542    $191A   JP       $91A            ; Jump to 91A
$544    $CC63   RND      VC, #63         ; VC = random & 63
$546    $9B03   UNKNOWN  $9B03           ; Unknown 9xxx instruction
$548    $BCD9   JP       V0, $CD9        ; Jump to V0 + CD9
$54A    $74F8   ADD      V4, #F8         ; Add 248 to V4
$54C    $6550   LD       V5, #50         ; Load 80 into V5
$54E    $4B29   SNE      VB, #29         ; Skip if VB != 41
$550    $D0BE   DRW      V0, VB, #E      ; Draw 14-byte sprite at V0, VB
$552    $D15B   DRW      V1, V5, #B      ; Draw 11-byte sprite at V1, V5
$554    $3D49   SE       VD, #49         ; Skip if VD == 73
$556    $CEB8   RND      VE, #B8         ; VE = random & B8
$558    $7B1A   ADD      VB, #1A         ; Add 26 to VB
$55A    $F899   UNKNOWN  F899            ; Unknown Fxxx instruction
$55C    $2B02   CALL     $B02            ; Call subroutine at B02
$55E    $CA95   RND      VA, #95         ; VA = random & 95
$560    $7E32   ADD      VE, #32         ; Add 50 to VE
$562    $8665   SUB      V6, V6          ; V6 -= V6, VF = !borrow
$564    $F3C2   UNKNOWN  F3C2            ; Unknown Fxxx instruction
$566    $EBD7   UNKNOWN  $EBD7           ; Unknown Exxx instruction
$568    $8AD5   SUB      VA, VD          ; VA -= VD, VF = !borrow
$56A    $B136   JP       V0, $136        ; Jump to V0 + 136
$56C    $2CE7   CALL     $CE7            ; Call subroutine at CE7
$56E    $784E   ADD      V8, #4E         ; Add 78 to V8
$570    $A865   LD       I, $865         ; Load 865 into I
$572    $89B6   SHR      V9              ; V9 >>= 1, VF = LSB
$574    $7F20   ADD      VF, #20         ; Add 32 to VF
$576    $1D06   JP       $D06            ; Jump to D06
$578    $21EF   CALL     $1EF            ; Call subroutine at 1EF
$57A    $A94D   LD       I, $94D         ; Load 94D into I
$57C    $F8EE   UNKNOWN  F8EE            ; Unknown Fxxx instruction
$57E    $F5DB   UNKNOWN  F5DB            ; Unknown Fxxx instruction
$580    $467B   SNE      V6, #7B         ; Skip if V6 != 123
$582    $0C23   SYS      $C23            ; System call to C23
$584    $D656   DRW      V6, V5, #6      ; Draw 6-byte sprite at V6, V5
$586    $5224   UNKNOWN  $5224           ; Unknown 5xxx instruction
$588    $513A   UNKNOWN  $513A           ; Unknown 5xxx instruction
$58A    $4A55   SNE      VA, #55         ; Skip if VA != 85
$58C    $F1BA   UNKNOWN  F1BA            ; Unknown Fxxx instruction
$58E    $E140   UNKNOWN  $E140           ; Unknown Exxx instruction
$590    $30DE   SE       V0, #DE         ; Skip if V0 == 222
$592    $DBB7   DRW      VB, VB, #7      ; Draw 7-byte sprite at VB, VB
$594    $DCFC   DRW      VC, VF, #C      ; Draw 12-byte sprite at VC, VF
$596    $CC68   RND      VC, #68         ; VC = random & 68
$598    $AB50   LD       I, $B50         ; Load B50 into I
$59A    $207C   CALL     $07C            ; Call subroutine at 07C
$59C    $0AA2   SYS      $AA2            ; System call to AA2
$59E    $7DCE   ADD      VD, #CE         ; Add 206 to VD
$5A0    $984B   UNKNOWN  $984B           ; Unknown 9xxx instruction
$5A2    $AA29   LD       I, $A29         ; Load A29 into I
$5A4    $41F1   SNE      V1, #F1         ; Skip if V1 != 241
$5A6    $D4DA   DRW      V4, VD, #A      ; Draw 10-byte sprite at V4, VD
$5A8    $CD7B   RND      VD, #7B         ; VD = random & 7B
$5AA    $98EE   UNKNOWN  $98EE           ; Unknown 9xxx instruction
$5AC    $1920   JP       $920            ; Jump to 920
$5AE    $4955   SNE      V9, #55         ; Skip if V9 != 85
$5B0    $F5A8   UNKNOWN  F5A8            ; Unknown Fxxx instruction
$5B2    $59DA   UNKNOWN  $59DA           ; Unknown 5xxx instruction
$5B4    $5ACC   UNKNOWN  $5ACC           ; Unknown 5xxx instruction
$5B6    $1FBA   JP       $FBA            ; Jump to FBA
$5B8    $BE5C   JP       V0, $E5C        ; Jump to V0 + E5C
$5BA    $CDA9   RND      VD, #A9         ; VD = random & A9
$5BC    $AED7   LD       I, $ED7         ; Load ED7 into I
$5BE    $0A4F   SYS      $A4F            ; System call to A4F
$5C0    $B811   JP       V0, $811        ; Jump to V0 + 811
$5C2    $00EC   SYS      $0EC            ; System call to 0EC
$5C4    $E30F   UNKNOWN  $E30F           ; Unknown Exxx instruction
$5C6    $20F9   CALL     $0F9            ; Call subroutine at 0F9
$5C8    $A52D   LD       I, $52D         ; Load 52D into I
$5CA    $8676   SHR      V6              ; V6 >>= 1, VF = LSB
$5CC    $0C1A   SYS      $C1A            ; System call to C1A
$5CE    $9498   UNKNOWN  $9498           ; Unknown 9xxx instruction
$5D0    $4E96   SNE      VE, #96         ; Skip if VE != 150
$5D2    $E7F9   UNKNOWN  $E7F9           ; Unknown Exxx instruction
$5D4    $D930   DRW      V9, V3, #0      ; Draw 0-byte sprite at V9, V3
$5D6    $1593   JP       $593            ; Jump to 593
$5D8    $97BD   UNKNOWN  $97BD           ; Unknown 9xxx instruction
$5DA    $59A2   UNKNOWN  $59A2           ; Unknown 5xxx instruction
$5DC    $9F91   UNKNOWN  $9F91           ; Unknown 9xxx instruction
$5DE    $1FE3   JP       $FE3            ; Jump to FE3
$5E0    $F3F2   UNKNOWN  F3F2            ; Unknown Fxxx instruction
$5E2    $B3A7   JP       V0, $3A7        ; Jump to V0 + 3A7
$5E4    $058D   SYS      $58D            ; System call to 58D
$5E6    $DAFD   DRW      VA, VF, #D      ; Draw 13-byte sprite at VA, VF
$5E8    $D014   DRW      V0, V1, #4      ; Draw 4-byte sprite at V0, V1
$5EA    $0F13   SYS      $F13            ; System call to F13
$5EC    $0E2B   SYS      $E2B            ; System call to E2B
$5EE    $D6BF   DRW      V6, VB, #F      ; Draw 15-byte sprite at V6, VB
$5F0    $27BA   CALL     $7BA            ; Call subroutine at 7BA
$5F2    $9EA2   UNKNOWN  $9EA2           ; Unknown 9xxx instruction
$5F4    $98B3   UNKNOWN  $98B3           ; Unknown 9xxx instruction
$5F6    $658C   LD       V5, #8C         ; Load 140 into V5
$5F8    $BABB   JP       V0, $ABB        ; Jump to V0 + ABB
$5FA    $2C55   CALL     $C55            ; Call subroutine at C55
$5FC    $D7FD   DRW      V7, VF, #D      ; Draw 13-byte sprite at V7, VF
$5FE    $366C   SE       V6, #6C         ; Skip if V6 == 108
$600    $538A   UNKNOWN  $538A           ; Unknown 5xxx instruction
$602    $2C4C   CALL     $C4C            ; Call subroutine at C4C
$604    $F811   UNKNOWN  F811            ; Unknown Fxxx instruction
$606    $CF7C   RND      VF, #7C         ; VF = random & 7C
$608    $2734   CALL     $734            ; Call subroutine at 734
$60A    $7657   ADD      V6, #57         ; Add 87 to V6
$60C    $E48F   UNKNOWN  $E48F           ; Unknown Exxx instruction
$60E    $79C1   ADD      V9, #C1         ; Add 193 to V9
$610    $2317   CALL     $317            ; Call subroutine at 317
$612    $0B0E   SYS      $B0E            ; System call to B0E
$614    $16FC   JP       $6FC            ; Jump to 6FC
$616    $2C78   CALL     $C78            ; Call subroutine at C78
$618    $0592   SYS      $592            ; System call to 592
$61A    $F88A   UNKNOWN  F88A            ; Unknown Fxxx instruction
$61C    $5376   UNKNOWN  $5376           ; Unknown 5xxx instruction
$61E    $E5A6   UNKNOWN  $E5A6           ; Unknown Exxx instruction
$620    $FE61   UNKNOWN  FE61            ; Unknown Fxxx instruction
$622    $EF87   UNKNOWN  $EF87           ; Unknown Exxx instruction
$624    $D3C9   DRW      V3, VC, #9      ; Draw 9-byte sprite at V3, VC
$626    $6B02   LD       VB, #02         ; Load 2 into VB
$628    $7290   ADD      V2, #90         ; Add 144 to V2
$62A    $F415   LD       DT, V4          ; Delay timer = V4
$62C    $34D0   SE       V4, #D0         ; Skip if V4 == 208
$62E    $A0F2   LD       I, $0F2         ; Load 0F2 into I
$630    $B54E   JP       V0, $54E        ; Jump to V0 + 54E
$632    $148B   JP       $48B            ; Jump to 48B
$634    $5005   UNKNOWN  $5005           ; Unknown 5xxx instruction
$636    $CE68   RND      VE, #68         ; VE = random & 68
$638    $84EE   SHL      V4              ; V4 <<= 1, VF = MSB
$63A    $FFF3   UNKNOWN  FFF3            ; Unknown Fxxx instruction
$63C    $BD4A   JP       V0, $D4A        ; Jump to V0 + D4A
$63E    $501D   UNKNOWN  $501D           ; Unknown 5xxx instruction
$640    $8FF7   SUBN     VF, VF          ; VF = VF - VF, VF = !borrow
$642    $9772   UNKNOWN  $9772           ; Unknown 9xxx instruction
$644    $7402   ADD      V4, #02         ; Add 2 to V4
$646    $FCD8   UNKNOWN  FCD8            ; Unknown Fxxx instruction
$648    $6734   LD       V7, #34         ; Load 52 into V7
$64A    $E6D9   UNKNOWN  $E6D9           ; Unknown Exxx instruction
$64C    $20E3   CALL     $0E3            ; Call subroutine at 0E3
$64E    $A05B   LD       I, $05B         ; Load 05B into I
$650    $DF56   DRW      VF, V5, #6      ; Draw 6-byte sprite at VF, V5
$652    $8DA7   SUBN     VD, VA          ; VD = VA - VD, VF = !borrow
$654    $03E9   SYS      $3E9            ; System call to 3E9
$656    $C66D   RND      V6, #6D         ; V6 = random & 6D
$658    $F156   UNKNOWN  F156            ; Unknown Fxxx instruction
$65A    $EBAA   UNKNOWN  $EBAA           ; Unknown Exxx instruction
$65C    $028A   SYS      $28A            ; System call to 28A
$65E    $020C   SYS      $20C            ; System call to 20C
$660    $1EA4   JP       $EA4            ; Jump to EA4
$662    $4CE1   SNE      VC, #E1         ; Skip if VC != 225
$664    $88D6   SHR      V8              ; V8 >>= 1, VF = LSB
$666    $512C   UNKNOWN  $512C           ; Unknown 5xxx instruction
$668    $0C85   SYS      $C85            ; System call to C85
$66A    $1837   JP       $837            ; Jump to 837
$66C    $53D3   UNKNOWN  $53D3           ; Unknown 5xxx instruction
$66E    $DDCE   DRW      VD, VC, #E      ; Draw 14-byte sprite at VD, VC
$670    $7948   ADD      V9, #48         ; Add 72 to V9
$672    $E175   UNKNOWN  $E175           ; Unknown Exxx instruction
$674    $3B95   SE       VB, #95         ; Skip if VB == 149
$676    $4C8B   SNE      VC, #8B         ; Skip if VC != 139
$678    $6EE8   LD       VE, #E8         ; Load 232 into VE
$67A    $B685   JP       V0, $685        ; Jump to V0 + 685
$67C    $DF4F   DRW      VF, V4, #F      ; Draw 15-byte sprite at VF, V4
$67E    $5CCC   UNKNOWN  $5CCC           ; Unknown 5xxx instruction
$680    $BBA8   JP       V0, $BA8        ; Jump to V0 + BA8
$682    $81B6   SHR      V1              ; V1 >>= 1, VF = LSB
$684    $45B6   SNE      V5, #B6         ; Skip if V5 != 182
$686    $A5B2   LD       I, $5B2         ; Load 5B2 into I
$688    $8955   SUB      V9, V5          ; V9 -= V5, VF = !borrow
$68A    $19B9   JP       $9B9            ; Jump to 9B9
$68C    $23EE   CALL     $3EE            ; Call subroutine at 3EE
$68E    $A503   LD       I, $503         ; Load 503 into I
$690    $8C8B   UNKNOWN  8C8B            ; Unknown 8xxx instruction
$692    $BC76   JP       V0, $C76        ; Jump to V0 + C76
$694    $0DE0   SYS      $DE0            ; System call to DE0
$696    $6055   LD       V0, #55         ; Load 85 into V0
$698    $961A   UNKNOWN  $961A           ; Unknown 9xxx instruction
$69A    $8508   UNKNOWN  8508            ; Unknown 8xxx instruction
$69C    $DFF9   DRW      VF, VF, #9      ; Draw 9-byte sprite at VF, VF
$69E    $AF10   LD       I, $F10         ; Load F10 into I
$6A0    $BE2C   JP       V0, $E2C        ; Jump to V0 + E2C
$6A2    $06AF   SYS      $6AF            ; System call to 6AF
$6A4    $80A0   LD       V0, VA          ; V0 = VA
$6A6    $153B   JP       $53B            ; Jump to 53B
$6A8    $6560   LD       V5, #60         ; Load 96 into V5
$6AA    $BCCA   JP       V0, $CCA        ; Jump to V0 + CCA
$6AC    $6EC3   LD       VE, #C3         ; Load 195 into VE
$6AE    $3393   SE       V3, #93         ; Skip if V3 == 147
$6B0    $CF77   RND      VF, #77         ; VF = random & 77
$6B2    $0C01   SYS      $C01            ; System call to C01
$6B4    $5E73   UNKNOWN  $5E73           ; Unknown 5xxx instruction
$6B6    $C00E   RND      V0, #0E         ; V0 = random & 0E
$6B8    $8BBB   UNKNOWN  8BBB            ; Unknown 8xxx instruction
$6BA    $1AF6   JP       $AF6            ; Jump to AF6
$6BC    $CD38   RND      VD, #38         ; VD = random & 38
$6BE    $1E5E   JP       $E5E            ; Jump to E5E
$6C0    $CB3D   RND      VB, #3D         ; VB = random & 3D
$6C2    $234E   CALL     $34E            ; Call subroutine at 34E
$6C4    $FDAF   UNKNOWN  FDAF            ; Unknown Fxxx instruction
$6C6    $DBEF   DRW      VB, VE, #F      ; Draw 15-byte sprite at VB, VE
$6C8    $DF4B   DRW      VF, V4, #B      ; Draw 11-byte sprite at VF, V4
$6CA    $172E   JP       $72E            ; Jump to 72E
$6CC    $5C64   UNKNOWN  $5C64           ; Unknown 5xxx instruction
$6CE    $B226   JP       V0, $226        ; Jump to V0 + 226
$6D0    $20FB   CALL     $0FB            ; Call subroutine at 0FB
$6D2    $150C   JP       $50C            ; Jump to 50C
$6D4    $8E40   LD       VE, V4          ; VE = V4
$6D6    $19AD   JP       $9AD            ; Jump to 9AD
$6D8    $CAD1   RND      VA, #D1         ; VA = random & D1
$6DA    $8193   XOR      V1, V9          ; V1 ^= V9
$6DC    $9A1E   UNKNOWN  $9A1E           ; Unknown 9xxx instruction
$6DE    $146A   JP       $46A            ; Jump to 46A
$6E0    $3F87   SE       VF, #87         ; Skip if VF == 135
$6E2    $8C03   XOR      VC, V0          ; VC ^= V0
$6E4    $FB2E   UNKNOWN  FB2E            ; Unknown Fxxx instruction
$6E6    $61D3   LD       V1, #D3         ; Load 211 into V1
$6E8    $C7B7   RND      V7, #B7         ; V7 = random & B7
$6EA    $C372   RND      V3, #72         ; V3 = random & 72
$6EC    $2FB7   CALL     $FB7            ; Call subroutine at FB7
$6EE    $4528   SNE      V5, #28         ; Skip if V5 != 40
$6F0    $222F   CALL     $22F            ; Call subroutine at 22F
$6F2    $9F02   UNKNOWN  $9F02           ; Unknown 9xxx instruction
$6F4    $1181   JP       $181            ; Jump to 181
$6F6    $E60A   UNKNOWN  $E60A           ; Unknown Exxx instruction
$6F8    $6292   LD       V2, #92         ; Load 146 into V2
$6FA    $5041   UNKNOWN  $5041           ; Unknown 5xxx instruction
$6FC    $6EB1   LD       VE, #B1         ; Load 177 into VE
$6FE    $E473   UNKNOWN  $E473           ; Unknown Exxx instruction
$700    $BAF9   JP       V0, $AF9        ; Jump to V0 + AF9
$702    $3390   SE       V3, #90         ; Skip if V3 == 144
$704    $8F5E   SHL      VF              ; VF <<= 1, VF = MSB
$706    $1271   JP       $271            ; Jump to 271
$708    $A8AA   LD       I, $8AA         ; Load 8AA into I
$70A    $05F4   SYS      $5F4            ; System call to 5F4
$70C    $552A   UNKNOWN  $552A           ; Unknown 5xxx instruction
$70E    $32C2   SE       V2, #C2         ; Skip if V2 == 194
$710    $2A89   CALL     $A89            ; Call subroutine at A89
$712    $F03E   UNKNOWN  F03E            ; Unknown Fxxx instruction
$714    $5051   UNKNOWN  $5051           ; Unknown 5xxx instruction
$716    $107F   JP       $07F            ; Jump to 07F
$718    $7A80   ADD      VA, #80         ; Add 128 to VA
$71A    $DF48   DRW      VF, V4, #8      ; Draw 8-byte sprite at VF, V4
$71C    $37B7   SE       V7, #B7         ; Skip if V7 == 183
$71E    $A3B5   LD       I, $3B5         ; Load 3B5 into I
$720    $10F1   JP       $0F1            ; Jump to 0F1
$722    $0649   SYS      $649            ; System call to 649
$724    $E116   UNKNOWN  $E116           ; Unknown Exxx instruction
$726    $2CE7   CALL     $CE7            ; Call subroutine at CE7
$728    $6328   LD       V3, #28         ; Load 40 into V3
$72A    $8502   AND      V5, V0          ; V5 &= V0
$72C    $424D   SNE      V2, #4D         ; Skip if V2 != 77
$72E    $7A98   ADD      VA, #98         ; Add 152 to VA
$730    $8781   OR       V7, V8          ; V7 |= V8
$732    $A3BD   LD       I, $3BD         ; Load 3BD into I
$734    $F787   UNKNOWN  F787            ; Unknown Fxxx instruction
$736    $BA24   JP       V0, $A24        ; Jump to V0 + A24
$738    $F88A   UNKNOWN  F88A            ; Unknown Fxxx instruction
$73A    $741F   ADD      V4, #1F         ; Add 31 to V4
$73C    $D873   DRW      V8, V7, #3      ; Draw 3-byte sprite at V8, V7
$73E    $64C0   LD       V4, #C0         ; Load 192 into V4
$740    $A0C4   LD       I, $0C4         ; Load 0C4 into I
$742    $4255   SNE      V2, #55         ; Skip if V2 != 85
$744    $7009   ADD      V0, #09         ; Add 9 to V0
$746    $BFE6   JP       V0, $FE6        ; Jump to V0 + FE6
$748    $362F   SE       V6, #2F         ; Skip if V6 == 47
$74A    $B1BF   JP       V0, $1BF        ; Jump to V0 + 1BF
$74C    $AD48   LD       I, $D48         ; Load D48 into I
$74E    $4355   SNE      V3, #55         ; Skip if V3 != 85
$750    $FA28   UNKNOWN  FA28            ; Unknown Fxxx instruction
$752    $8F35   SUB      VF, V3          ; VF -= V3, VF = !borrow
$754    $6BFF   LD       VB, #FF         ; Load 255 into VB
$756    $DC39   DRW      VC, V3, #9      ; Draw 9-byte sprite at VC, V3
$758    $CFC8   RND      VF, #C8         ; VF = random & C8
$75A    $4D83   SNE      VD, #83         ; Skip if VD != 131
$75C    $7069   ADD      V0, #69         ; Add 105 to V0
$75E    $F164   UNKNOWN  F164            ; Unknown Fxxx instruction
$760    $ADD8   LD       I, $DD8         ; Load DD8 into I
$762    $CF74   RND      VF, #74         ; VF = random & 74
$764    $AE6D   LD       I, $E6D         ; Load E6D into I
$766    $DC17   DRW      VC, V1, #7      ; Draw 7-byte sprite at VC, V1
$768    $0137   SYS      $137            ; System call to 137
$76A    $77A1   ADD      V7, #A1         ; Add 161 to V7
$76C    $F378   UNKNOWN  F378            ; Unknown Fxxx instruction
$76E    $3B55   SE       VB, #55         ; Skip if VB == 85
$770    $3A94   SE       VA, #94         ; Skip if VA == 148
$772    $3F14   SE       VF, #14         ; Skip if VF == 20
$774    $D179   DRW      V1, V7, #9      ; Draw 9-byte sprite at V1, V7
$776    $0086   SYS      $086            ; System call to 086
$778    $C133   RND      V1, #33         ; V1 = random & 33
$77A    $3F0A   SE       VF, #0A         ; Skip if VF == 10
$77C    $7DA4   ADD      VD, #A4         ; Add 164 to VD
$77E    $7B70   ADD      VB, #70         ; Add 112 to VB
$780    $CCE9   RND      VC, #E9         ; VC = random & E9
$782    $BBDA   JP       V0, $BDA        ; Jump to V0 + BDA
$784    $8CE9   UNKNOWN  8CE9            ; Unknown 8xxx instruction
$786    $28B1   CALL     $8B1            ; Call subroutine at 8B1
$788    $96B9   UNKNOWN  $96B9           ; Unknown 9xxx instruction
$78A    $AE81   LD       I, $E81         ; Load E81 into I
$78C    $6F16   LD       VF, #16         ; Load 22 into VF
$78E    $4823   SNE      V8, #23         ; Skip if V8 != 35
$790    $09B5   SYS      $9B5            ; System call to 9B5
$792    $A6C3   LD       I, $6C3         ; Load 6C3 into I
$794    $2519   CALL     $519            ; Call subroutine at 519
$796    $52CA   UNKNOWN  $52CA           ; Unknown 5xxx instruction
$798    $CD15   RND      VD, #15         ; VD = random & 15
$79A    $051E   SYS      $51E            ; System call to 51E
$79C    $3657   SE       V6, #57         ; Skip if V6 == 87
$79E    $A6C4   LD       I, $6C4         ; Load 6C4 into I
$7A0    $D8FD   DRW      V8, VF, #D      ; Draw 13-byte sprite at V8, VF
$7A2    $A10C   LD       I, $10C         ; Load 10C into I
$7A4    $0187   SYS      $187            ; System call to 187
$7A6    $C6FF   RND      V6, #FF         ; V6 = random & FF
$7A8    $A25A   LD       I, $25A         ; Load 25A into I
$7AA    $4D83   SNE      VD, #83         ; Skip if VD != 131
$7AC    $7868   ADD      V8, #68         ; Add 104 to V8
$7AE    $548A   UNKNOWN  $548A           ; Unknown 5xxx instruction
$7B0    $7EF6   ADD      VE, #F6         ; Add 246 to VE
$7B2    $FA42   UNKNOWN  FA42            ; Unknown Fxxx instruction
$7B4    $68AD   LD       V8, #AD         ; Load 173 into V8
$7B6    $74B1   ADD      V4, #B1         ; Add 177 to V4
$7B8    $18B2   JP       $8B2            ; Jump to 8B2
$7BA    $BB62   JP       V0, $B62        ; Jump to V0 + B62
$7BC    $CBDD   RND      VB, #DD         ; VB = random & DD
$7BE    $122D   JP       $22D            ; Jump to 22D
$7C0    $6944   LD       V9, #44         ; Load 68 into V9
$7C2    $CA6E   RND      VA, #6E         ; VA = random & 6E
$7C4    $7453   ADD      V4, #53         ; Add 83 to V4
$7C6    $EC7D   UNKNOWN  $EC7D           ; Unknown Exxx instruction
$7C8    $CE8C   RND      VE, #8C         ; VE = random & 8C
$7CA    $F9C4   UNKNOWN  F9C4            ; Unknown Fxxx instruction
$7CC    $3C49   SE       VC, #49         ; Skip if VC == 73
$7CE    $31C5   SE       V1, #C5         ; Skip if V1 == 197
$7D0    $4B91   SNE      VB, #91         ; Skip if VB != 145
$7D2    $0428   SYS      $428            ; System call to 428
$7D4    $4FD9   SNE      VF, #D9         ; Skip if VF != 217
$7D6    $EBB9   UNKNOWN  $EBB9           ; Unknown Exxx instruction
$7D8    $3F2B   SE       VF, #2B         ; Skip if VF == 43
$7DA    $5874   UNKNOWN  $5874           ; Unknown 5xxx instruction
$7DC    $840A   UNKNOWN  840A            ; Unknown 8xxx instruction
$7DE    $8433   XOR      V4, V3          ; V4 ^= V3
$7E0    $D15F   DRW      V1, V5, #F      ; Draw 15-byte sprite at V1, V5
$7E2    $599D   UNKNOWN  $599D           ; Unknown 5xxx instruction
$7E4    $B27A   JP       V0, $27A        ; Jump to V0 + 27A
$7E6    $8AC7   SUBN     VA, VC          ; VA = VC - VA, VF = !borrow
$7E8    $361B   SE       V6, #1B         ; Skip if V6 == 27
$7EA    $E1BD   UNKNOWN  $E1BD           ; Unknown Exxx instruction
$7EC    $C31C   RND      V3, #1C         ; V3 = random & 1C
$7EE    $CB3A   RND      VB, #3A         ; VB = random & 3A
$7F0    $43CD   SNE      V3, #CD         ; Skip if V3 != 205
$7F2    $98DF   UNKNOWN  $98DF           ; Unknown 9xxx instruction
$7F4    $F804   UNKNOWN  F804            ; Unknown Fxxx instruction
$7F6    $A387   LD       I, $387         ; Load 387 into I
$7F8    $7D88   ADD      VD, #88         ; Add 136 to VD
$7FA    $7BFA   ADD      VB, #FA         ; Add 250 to VB
$7FC    $1E2B   JP       $E2B            ; Jump to E2B
$7FE    $B9E0   JP       V0, $9E0        ; Jump to V0 + 9E0
$800    $8E01   OR       VE, V0          ; VE |= V0
$802    $9D7B   UNKNOWN  $9D7B           ; Unknown 9xxx instruction
$804    $1DE8   JP       $DE8            ; Jump to DE8
$806    $F674   UNKNOWN  F674            ; Unknown Fxxx instruction
$808    $24C1   CALL     $4C1            ; Call subroutine at 4C1
$80A    $B92E   JP       V0, $92E        ; Jump to V0 + 92E
$80C    $0404   SYS      $404            ; System call to 404
$80E    $1A36   JP       $A36            ; Jump to A36
$810    $9868   UNKNOWN  $9868           ; Unknown 9xxx instruction
$812    $BEC2   JP       V0, $EC2        ; Jump to V0 + EC2
$814    $5830   SE       V8, V3          ; Skip if V8 == V3
$816    $0867   SYS      $867            ; System call to 867
$818    $06FF   SYS      $6FF            ; System call to 6FF
$81A    $08CC   SYS      $8CC            ; System call to 8CC
$81C    $4421   SNE      V4, #21         ; Skip if V4 != 33
$81E    $3F51   SE       VF, #51         ; Skip if VF == 81
$820    $2AF4   CALL     $AF4            ; Call subroutine at AF4
$822    $6146   LD       V1, #46         ; Load 70 into V1
$824    $0E9E   SYS      $E9E            ; System call to E9E
$826    $54B7   UNKNOWN  $54B7           ; Unknown 5xxx instruction
$828    $32EA   SE       V2, #EA         ; Skip if V2 == 234
$82A    $D771   DRW      V7, V7, #1      ; Draw 1-byte sprite at V7, V7
$82C    $65A2   LD       V5, #A2         ; Load 162 into V5
$82E    $D938   DRW      V9, V3, #8      ; Draw 8-byte sprite at V9, V3
$830    $D829   DRW      V8, V2, #9      ; Draw 9-byte sprite at V8, V2
$832    $4C52   SNE      VC, #52         ; Skip if VC != 82
$834    $60F3   LD       V0, #F3         ; Load 243 into V0
$836    $6F4C   LD       VF, #4C         ; Load 76 into VF
$838    $6884   LD       V8, #84         ; Load 132 into V8
$83A    $EACF   UNKNOWN  $EACF           ; Unknown Exxx instruction
$83C    $593D   UNKNOWN  $593D           ; Unknown 5xxx instruction
$83E    $7758   ADD      V7, #58         ; Add 88 to V7
$840    $DC52   DRW      VC, V5, #2      ; Draw 2-byte sprite at VC, V5
$842    $5778   UNKNOWN  $5778           ; Unknown 5xxx instruction
$844    $49D1   SNE      V9, #D1         ; Skip if V9 != 209
$846    $ACA0   LD       I, $CA0         ; Load CA0 into I
$848    $9E60   SNE      VE, V6          ; Skip if VE != V6
$84A    $42A5   SNE      V2, #A5         ; Skip if V2 != 165
$84C    $AE88   LD       I, $E88         ; Load E88 into I
$84E    $210C   CALL     $10C            ; Call subroutine at 10C
$850    $6A73   LD       VA, #73         ; Load 115 into VA
$852    $1BFC   JP       $BFC            ; Jump to BFC
$854    $DBE3   DRW      VB, VE, #3      ; Draw 3-byte sprite at VB, VE
$856    $28DD   CALL     $8DD            ; Call subroutine at 8DD
$858    $D41B   DRW      V4, V1, #B      ; Draw 11-byte sprite at V4, V1
$85A    $1136   JP       $136            ; Jump to 136
$85C    $465E   SNE      V6, #5E         ; Skip if V6 != 94
$85E    $5A89   UNKNOWN  $5A89           ; Unknown 5xxx instruction
$860    $952A   UNKNOWN  $952A           ; Unknown 9xxx instruction
$862    $CD50   RND      VD, #50         ; VD = random & 50
$864    $4C5D   SNE      VC, #5D         ; Skip if VC != 93
$866    $A7B9   LD       I, $7B9         ; Load 7B9 into I
$868    $F61E   ADD      I, V6           ; I += V6
$86A    $FCC9   UNKNOWN  FCC9            ; Unknown Fxxx instruction
$86C    $4BD2   SNE      VB, #D2         ; Skip if VB != 210
$86E    $5AFD   UNKNOWN  $5AFD           ; Unknown 5xxx instruction
$870    $6462   LD       V4, #62         ; Load 98 into V4
$872    $1BD8   JP       $BD8            ; Jump to BD8
$874    $87A4   ADD      V7, VA          ; V7 += VA, VF = carry
$876    $E2C6   UNKNOWN  $E2C6           ; Unknown Exxx instruction
$878    $B554   JP       V0, $554        ; Jump to V0 + 554
$87A    $9D13   UNKNOWN  $9D13           ; Unknown 9xxx instruction
$87C    $99DA   UNKNOWN  $99DA           ; Unknown 9xxx instruction
$87E    $9CED   UNKNOWN  $9CED           ; Unknown 9xxx instruction
$880    $D65C   DRW      V6, V5, #C      ; Draw 12-byte sprite at V6, V5
$882    $0082   SYS      $082            ; System call to 082
$884    $1909   JP       $909            ; Jump to 909
$886    $2C77   CALL     $C77            ; Call subroutine at C77
$888    $D304   DRW      V3, V0, #4      ; Draw 4-byte sprite at V3, V0
$88A    $2F0C   CALL     $F0C            ; Call subroutine at F0C
$88C    $16CF   JP       $6CF            ; Jump to 6CF
$88E    $1917   JP       $917            ; Jump to 917
$890    $CFCA   RND      VF, #CA         ; VF = random & CA
$892    $30CD   SE       V0, #CD         ; Skip if V0 == 205
$894    $147E   JP       $47E            ; Jump to 47E
$896    $5075   UNKNOWN  $5075           ; Unknown 5xxx instruction
$898    $B3D1   JP       V0, $3D1        ; Jump to V0 + 3D1
$89A    $C9B4   RND      V9, #B4         ; V9 = random & B4
$89C    $28C5   CALL     $8C5            ; Call subroutine at 8C5
$89E    $620D   LD       V2, #0D         ; Load 13 into V2
$8A0    $08A8   SYS      $8A8            ; System call to 8A8
$8A2    $36E1   SE       V6, #E1         ; Skip if V6 == 225
$8A4    $41A6   SNE      V1, #A6         ; Skip if V1 != 166
$8A6    $E82F   UNKNOWN  $E82F           ; Unknown Exxx instruction
$8A8    $9677   UNKNOWN  $9677           ; Unknown 9xxx instruction
$8AA    $E1DB   UNKNOWN  $E1DB           ; Unknown Exxx instruction
$8AC    $D39C   DRW      V3, V9, #C      ; Draw 12-byte sprite at V3, V9
$8AE    $6E7C   LD       VE, #7C         ; Load 124 into VE
$8B0    $988E   UNKNOWN  $988E           ; Unknown 9xxx instruction
$8B2    $8C8C   UNKNOWN  8C8C            ; Unknown 8xxx instruction
$8B4    $CD34   RND      VD, #34         ; VD = random & 34
$8B6    $0DDD   SYS      $DDD            ; System call to DDD
$8B8    $526D   UNKNOWN  $526D           ; Unknown 5xxx instruction
$8BA    $2279   CALL     $279            ; Call subroutine at 279
$8BC    $E9EE   UNKNOWN  $E9EE           ; Unknown Exxx instruction
$8BE    $08FF   SYS      $8FF            ; System call to 8FF
$8C0    $1B99   JP       $B99            ; Jump to B99
$8C2    $C3D7   RND      V3, #D7         ; V3 = random & D7
$8C4    $C658   RND      V6, #58         ; V6 = random & 58
$8C6    $2845   CALL     $845            ; Call subroutine at 845
$8C8    $8A6D   UNKNOWN  8A6D            ; Unknown 8xxx instruction
$8CA    $1664   JP       $664            ; Jump to 664
$8CC    $74C7   ADD      V4, #C7         ; Add 199 to V4
$8CE    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$8D0    $8087   SUBN     V0, V8          ; V0 = V8 - V0, VF = !borrow
$8D2    $D7A7   DRW      V7, VA, #7      ; Draw 7-byte sprite at V7, VA
$8D4    $1FDF   JP       $FDF            ; Jump to FDF
$8D6    $9802   UNKNOWN  $9802           ; Unknown 9xxx instruction
$8D8    $DF84   DRW      VF, V8, #4      ; Draw 4-byte sprite at VF, V8
$8DA    $54D5   UNKNOWN  $54D5           ; Unknown 5xxx instruction
$8DC    $6C00   LD       VC, #00         ; Load 0 into VC
$8DE    $BC29   JP       V0, $C29        ; Jump to V0 + C29
$8E0    $25AD   CALL     $5AD            ; Call subroutine at 5AD
$8E2    $83A8   UNKNOWN  83A8            ; Unknown 8xxx instruction
$8E4    $839F   UNKNOWN  839F            ; Unknown 8xxx instruction
$8E6    $824D   UNKNOWN  824D            ; Unknown 8xxx instruction
$8E8    $F720   UNKNOWN  F720            ; Unknown Fxxx instruction
$8EA    $2218   CALL     $218            ; Call subroutine at 218
$8EC    $D4D3   DRW      V4, VD, #3      ; Draw 3-byte sprite at V4, VD
$8EE    $21E5   CALL     $1E5            ; Call subroutine at 1E5
$8F0    $8384   ADD      V3, V8          ; V3 += V8, VF = carry
$8F2    $E4D0   UNKNOWN  $E4D0           ; Unknown Exxx instruction
$8F4    $60C6   LD       V0, #C6         ; Load 198 into V0
$8F6    $FD52   UNKNOWN  FD52            ; Unknown Fxxx instruction
$8F8    $50DF   UNKNOWN  $50DF           ; Unknown 5xxx instruction
$8FA    $0B90   SYS      $B90            ; System call to B90
$8FC    $A591   LD       I, $591         ; Load 591 into I
$8FE    $6853   LD       V8, #53         ; Load 83 into V8
$900    $2C48   CALL     $C48            ; Call subroutine at C48
$902    $3D4C   SE       VD, #4C         ; Skip if VD == 76
$904    $684D   LD       V8, #4D         ; Load 77 into V8
$906    $B7DA   JP       V0, $7DA        ; Jump to V0 + 7DA
$908    $B64D   JP       V0, $64D        ; Jump to V0 + 64D
$90A    $4B79   SNE      VB, #79         ; Skip if VB != 121
$90C    $9CD5   UNKNOWN  $9CD5           ; Unknown 9xxx instruction
$90E    $D700   DRW      V7, V0, #0      ; Draw 0-byte sprite at V7, V0
$910    $D81E   DRW      V8, V1, #E      ; Draw 14-byte sprite at V8, V1
$912    $AA0D   LD       I, $A0D         ; Load A0D into I
$914    $DE69   DRW      VE, V6, #9      ; Draw 9-byte sprite at VE, V6
$916    $7F36   ADD      VF, #36         ; Add 54 to VF
$918    $63A6   LD       V3, #A6         ; Load 166 into V3
$91A    $1A13   JP       $A13            ; Jump to A13
$91C    $2A1A   CALL     $A1A            ; Call subroutine at A1A
$91E    $57EE   UNKNOWN  $57EE           ; Unknown 5xxx instruction
$920    $05F9   SYS      $5F9            ; System call to 5F9
$922    $B54A   JP       V0, $54A        ; Jump to V0 + 54A
$924    $D75F   DRW      V7, V5, #F      ; Draw 15-byte sprite at V7, V5
$926    $8322   AND      V3, V2          ; V3 &= V2
$928    $47FF   SNE      V7, #FF         ; Skip if V7 != 255
$92A    $99AC   UNKNOWN  $99AC           ; Unknown 9xxx instruction
$92C    $C81E   RND      V8, #1E         ; V8 = random & 1E
$92E    $94B2   UNKNOWN  $94B2           ; Unknown 9xxx instruction
$930    $F412   UNKNOWN  F412            ; Unknown Fxxx instruction
$932    $471D   SNE      V7, #1D         ; Skip if V7 != 29
$934    $49D3   SNE      V9, #D3         ; Skip if V9 != 211
$936    $A24D   LD       I, $24D         ; Load 24D into I
$938    $F3B2   UNKNOWN  F3B2            ; Unknown Fxxx instruction
$93A    $FA2F   UNKNOWN  FA2F            ; Unknown Fxxx instruction
$93C    $C636   RND      V6, #36         ; V6 = random & 36
$93E    $8014   ADD      V0, V1          ; V0 += V1, VF = carry
$940    $1FF3   JP       $FF3            ; Jump to FF3
$942    $53AE   UNKNOWN  $53AE           ; Unknown 5xxx instruction
$944    $0AC3   SYS      $AC3            ; System call to AC3
$946    $0408   SYS      $408            ; System call to 408
$948    $0880   SYS      $880            ; System call to 880
$94A    $A2CD   LD       I, $2CD         ; Load 2CD into I
$94C    $93A0   SNE      V3, VA          ; Skip if V3 != VA
$94E    $42FB   SNE      V2, #FB         ; Skip if V2 != 251
$950    $9484   UNKNOWN  $9484           ; Unknown 9xxx instruction
$952    $768D   ADD      V6, #8D         ; Add 141 to V6
$954    $CBCA   RND      VB, #CA         ; VB = random & CA
$956    $6476   LD       V4, #76         ; Load 118 into V4
$958    $8259   UNKNOWN  8259            ; Unknown 8xxx instruction
$95A    $69B7   LD       V9, #B7         ; Load 183 into V9
$95C    $3C56   SE       VC, #56         ; Skip if VC == 86
$95E    $69F4   LD       V9, #F4         ; Load 244 into V9
$960    $48FC   SNE      V8, #FC         ; Skip if V8 != 252
$962    $4003   SNE      V0, #03         ; Skip if V0 != 3
$964    $A7FC   LD       I, $7FC         ; Load 7FC into I
$966    $8E34   ADD      VE, V3          ; VE += V3, VF = carry
$968    $FA9E   UNKNOWN  FA9E            ; Unknown Fxxx instruction
$96A    $3B45   SE       VB, #45         ; Skip if VB == 69
$96C    $7B17   ADD      VB, #17         ; Add 23 to VB
$96E    $BCEE   JP       V0, $CEE        ; Jump to V0 + CEE
$970    $270F   CALL     $70F            ; Call subroutine at 70F
$972    $16C7   JP       $6C7            ; Jump to 6C7
$974    $AB00   LD       I, $B00         ; Load B00 into I
$976    $3B55   SE       VB, #55         ; Skip if VB == 85
$978    $4FC0   SNE      VF, #C0         ; Skip if VF != 192
$97A    $7766   ADD      V7, #66         ; Add 102 to V7
$97C    $DB17   DRW      VB, V1, #7      ; Draw 7-byte sprite at VB, V1
$97E    $674A   LD       V7, #4A         ; Load 74 into V7
$980    $F027   UNKNOWN  F027            ; Unknown Fxxx instruction
$982    $0FA5   SYS      $FA5            ; System call to FA5
$984    $881B   UNKNOWN  881B            ; Unknown 8xxx instruction
$986    $7452   ADD      V4, #52         ; Add 82 to V4
$988    $9FF8   UNKNOWN  $9FF8           ; Unknown 9xxx instruction
$98A    $B6EA   JP       V0, $6EA        ; Jump to V0 + 6EA
$98C    $35CF   SE       V5, #CF         ; Skip if V5 == 207
$98E    $B4DC   JP       V0, $4DC        ; Jump to V0 + 4DC
$990    $F3D2   UNKNOWN  F3D2            ; Unknown Fxxx instruction
$992    $EEA2   UNKNOWN  $EEA2           ; Unknown Exxx instruction
$994    $EA83   UNKNOWN  $EA83           ; Unknown Exxx instruction
$996    $E2DF   UNKNOWN  $E2DF           ; Unknown Exxx instruction
$998    $AF80   LD       I, $F80         ; Load F80 into I
$99A    $9BDA   UNKNOWN  $9BDA           ; Unknown 9xxx instruction
$99C    $A304   LD       I, $304         ; Load 304 into I
$99E    $3724   SE       V7, #24         ; Skip if V7 == 36
$9A0    $6961   LD       V9, #61         ; Load 97 into V9
$9A2    $A526   LD       I, $526         ; Load 526 into I
$9A4    $56FD   UNKNOWN  $56FD           ; Unknown 5xxx instruction
$9A6    $AB4F   LD       I, $B4F         ; Load B4F into I
$9A8    $112F   JP       $12F            ; Jump to 12F
$9AA    $0F54   SYS      $F54            ; System call to F54
$9AC    $B46C   JP       V0, $46C        ; Jump to V0 + 46C
$9AE    $8F32   AND      VF, V3          ; VF &= V3
$9B0    $51EF   UNKNOWN  $51EF           ; Unknown 5xxx instruction
$9B2    $3B5A   SE       VB, #5A         ; Skip if VB == 90
$9B4    $22FA   CALL     $2FA            ; Call subroutine at 2FA
$9B6    $4E94   SNE      VE, #94         ; Skip if VE != 148
$9B8    $965F   UNKNOWN  $965F           ; Unknown 9xxx instruction
$9BA    $DDF9   DRW      VD, VF, #9      ; Draw 9-byte sprite at VD, VF
$9BC    $4377   SNE      V3, #77         ; Skip if V3 != 119
$9BE    $E9B3   UNKNOWN  $E9B3           ; Unknown Exxx instruction
$9C0    $6078   LD       V0, #78         ; Load 120 into V0
$9C2    $4D40   SNE      VD, #40         ; Skip if VD != 64
$9C4    $22C5   CALL     $2C5            ; Call subroutine at 2C5
$9C6    $9FE8   UNKNOWN  $9FE8           ; Unknown 9xxx instruction
$9C8    $8ECC   UNKNOWN  8ECC            ; Unknown 8xxx instruction
$9CA    $3DB5   SE       VD, #B5         ; Skip if VD == 181
$9CC    $B64C   JP       V0, $64C        ; Jump to V0 + 64C
$9CE    $4ADD   SNE      VA, #DD         ; Skip if VA != 221
$9D0    $F3DD   UNKNOWN  F3DD            ; Unknown Fxxx instruction
$9D2    $98AA   UNKNOWN  $98AA           ; Unknown 9xxx instruction
$9D4    $13BF   JP       $3BF            ; Jump to 3BF
$9D6    $105C   JP       $05C            ; Jump to 05C
$9D8    $15BF   JP       $5BF            ; Jump to 5BF
$9DA    $C06E   RND      V0, #6E         ; V0 = random & 6E
$9DC    $E460   UNKNOWN  $E460           ; Unknown Exxx instruction
$9DE    $A429   LD       I, $429         ; Load 429 into I
$9E0    $C37F   RND      V3, #7F         ; V3 = random & 7F
$9E2    $EF6A   UNKNOWN  $EF6A           ; Unknown Exxx instruction
$9E4    $15FE   JP       $5FE            ; Jump to 5FE
$9E6    $AEDB   LD       I, $EDB         ; Load EDB into I
$9E8    $8AD0   LD       VA, VD          ; VA = VD
$9EA    $2834   CALL     $834            ; Call subroutine at 834
$9EC    $E3CA   UNKNOWN  $E3CA           ; Unknown Exxx instruction
$9EE    $A02F   LD       I, $02F         ; Load 02F into I
$9F0    $0487   SYS      $487            ; System call to 487
$9F2    $3612   SE       V6, #12         ; Skip if V6 == 18
$9F4    $911E   UNKNOWN  $911E           ; Unknown 9xxx instruction
$9F6    $69B5   LD       V9, #B5         ; Load 181 into V9
$9F8    $EF0B   UNKNOWN  $EF0B           ; Unknown Exxx instruction
$9FA    $128C   JP       $28C            ; Jump to 28C
$9FC    $0259   SYS      $259            ; System call to 259
$9FE    $1B05   JP       $B05            ; Jump to B05
$A00    $2FFF   CALL     $FFF            ; Call subroutine at FFF
$A02    $9D02   UNKNOWN  $9D02           ; Unknown 9xxx instruction
$A04    $6146   LD       V1, #46         ; Load 70 into V1
$A06    $EF6F   UNKNOWN  $EF6F           ; Unknown Exxx instruction
$A08    $EC43   UNKNOWN  $EC43           ; Unknown Exxx instruction
$A0A    $845D   UNKNOWN  845D            ; Unknown 8xxx instruction
$A0C    $6527   LD       V5, #27         ; Load 39 into V5
$A0E    $2EC3   CALL     $EC3            ; Call subroutine at EC3
$A10    $8091   OR       V0, V9          ; V0 |= V9
$A12    $72FF   ADD      V2, #FF         ; Add 255 to V2
$A14    $A01B   LD       I, $01B         ; Load 01B into I
$A16    $0115   SYS      $115            ; System call to 115
$A18    $F645   UNKNOWN  F645            ; Unknown Fxxx instruction
$A1A    $BAD7   JP       V0, $AD7        ; Jump to V0 + AD7
$A1C    $18C4   JP       $8C4            ; Jump to 8C4
$A1E    $DD28   DRW      VD, V2, #8      ; Draw 8-byte sprite at VD, V2
$A20    $5DEB   UNKNOWN  $5DEB           ; Unknown 5xxx instruction
$A22    $7285   ADD      V2, #85         ; Add 133 to V2
$A24    $9F5C   UNKNOWN  $9F5C           ; Unknown 9xxx instruction
$A26    $A4B6   LD       I, $4B6         ; Load 4B6 into I
$A28    $667F   LD       V6, #7F         ; Load 127 into V6
$A2A    $6397   LD       V3, #97         ; Load 151 into V3
$A2C    $EDCC   UNKNOWN  $EDCC           ; Unknown Exxx instruction
$A2E    $1ADA   JP       $ADA            ; Jump to ADA
$A30    $1C91   JP       $C91            ; Jump to C91
$A32    $67BF   LD       V7, #BF         ; Load 191 into V7
$A34    $B298   JP       V0, $298        ; Jump to V0 + 298
$A36    $4B31   SNE      VB, #31         ; Skip if VB != 49
$A38    $0571   SYS      $571            ; System call to 571
$A3A    $0BC9   SYS      $BC9            ; System call to BC9
$A3C    $FD82   UNKNOWN  FD82            ; Unknown Fxxx instruction
$A3E    $3BEB   SE       VB, #EB         ; Skip if VB == 235
$A40    $9C51   UNKNOWN  $9C51           ; Unknown 9xxx instruction
$A42    $5EA4   UNKNOWN  $5EA4           ; Unknown 5xxx instruction
$A44    $07BC   SYS      $7BC            ; System call to 7BC
$A46    $F7C6   UNKNOWN  F7C6            ; Unknown Fxxx instruction
$A48    $612E   LD       V1, #2E         ; Load 46 into V1
$A4A    $9D62   UNKNOWN  $9D62           ; Unknown 9xxx instruction
$A4C    $978E   UNKNOWN  $978E           ; Unknown 9xxx instruction
$A4E    $1C42   JP       $C42            ; Jump to C42
$A50    $8AA5   SUB      VA, VA          ; VA -= VA, VF = !borrow
$A52    $3866   SE       V8, #66         ; Skip if V8 == 102
$A54    $4FB4   SNE      VF, #B4         ; Skip if VF != 180
$A56    $E14E   UNKNOWN  $E14E           ; Unknown Exxx instruction
$A58    $199F   JP       $99F            ; Jump to 99F
$A5A    $1498   JP       $498            ; Jump to 498
$A5C    $DA1C   DRW      VA, V1, #C      ; Draw 12-byte sprite at VA, V1
$A5E    $5200   SE       V2, V0          ; Skip if V2 == V0
$A60    $376A   SE       V7, #6A         ; Skip if V7 == 106
$A62    $01C4   SYS      $1C4            ; System call to 1C4
$A64    $0B95   SYS      $B95            ; System call to B95
$A66    $833A   UNKNOWN  833A            ; Unknown 8xxx instruction
$A68    $C2DB   RND      V2, #DB         ; V2 = random & DB
$A6A    $B3A7   JP       V0, $3A7        ; Jump to V0 + 3A7
$A6C    $FBAD   UNKNOWN  FBAD            ; Unknown Fxxx instruction
$A6E    $9A4D   UNKNOWN  $9A4D           ; Unknown 9xxx instruction
$A70    $7255   ADD      V2, #55         ; Add 85 to V2
$A72    $1D32   JP       $D32            ; Jump to D32
$A74    $633F   LD       V3, #3F         ; Load 63 into V3
$A76    $F9A9   UNKNOWN  F9A9            ; Unknown Fxxx instruction
$A78    $CA08   RND      VA, #08         ; VA = random & 08
$A7A    $AC8B   LD       I, $C8B         ; Load C8B into I
$A7C    $FB16   UNKNOWN  FB16            ; Unknown Fxxx instruction
$A7E    $3513   SE       V5, #13         ; Skip if V5 == 19
$A80    $3598   SE       V5, #98         ; Skip if V5 == 152
$A82    $7356   ADD      V3, #56         ; Add 86 to V3
$A84    $DEDB   DRW      VE, VD, #B      ; Draw 11-byte sprite at VE, VD
$A86    $C13A   RND      V1, #3A         ; V1 = random & 3A
$A88    $0BB1   SYS      $BB1            ; System call to BB1
$A8A    $3E4C   SE       VE, #4C         ; Skip if VE == 76
$A8C    $BF5D   JP       V0, $F5D        ; Jump to V0 + F5D
$A8E    $7372   ADD      V3, #72         ; Add 114 to V3
$A90    $F7AB   UNKNOWN  F7AB            ; Unknown Fxxx instruction
$A92    $27A6   CALL     $7A6            ; Call subroutine at 7A6
$A94    $0FB9   SYS      $FB9            ; System call to FB9
$A96    $AFAD   LD       I, $FAD         ; Load FAD into I
$A98    $8D95   SUB      VD, V9          ; VD -= V9, VF = !borrow
$A9A    $5361   UNKNOWN  $5361           ; Unknown 5xxx instruction
$A9C    $2356   CALL     $356            ; Call subroutine at 356
$A9E    $4A98   SNE      VA, #98         ; Skip if VA != 152
$AA0    $343E   SE       V4, #3E         ; Skip if V4 == 62
$AA2    $8D0D   UNKNOWN  8D0D            ; Unknown 8xxx instruction
$AA4    $E0AA   UNKNOWN  $E0AA           ; Unknown Exxx instruction
$AA6    $CC21   RND      VC, #21         ; VC = random & 21
$AA8    $6FC3   LD       VF, #C3         ; Load 195 into VF
$AAA    $E9ED   UNKNOWN  $E9ED           ; Unknown Exxx instruction
$AAC    $1683   JP       $683            ; Jump to 683
$AAE    $5F9C   UNKNOWN  $5F9C           ; Unknown 5xxx instruction
$AB0    $F92F   UNKNOWN  F92F            ; Unknown Fxxx instruction
$AB2    $8BFA   UNKNOWN  8BFA            ; Unknown 8xxx instruction
$AB4    $4E62   SNE      VE, #62         ; Skip if VE != 98
$AB6    $0BFD   SYS      $BFD            ; System call to BFD
$AB8    $30A4   SE       V0, #A4         ; Skip if V0 == 164
$ABA    $6D6D   LD       VD, #6D         ; Load 109 into VD
$ABC    $6D25   LD       VD, #25         ; Load 37 into VD
$ABE    $A371   LD       I, $371         ; Load 371 into I
$AC0    $4E45   SNE      VE, #45         ; Skip if VE != 69
$AC2    $6E24   LD       VE, #24         ; Load 36 into VE
$AC4    $F25B   UNKNOWN  F25B            ; Unknown Fxxx instruction
$AC6    $BFB0   JP       V0, $FB0        ; Jump to V0 + FB0
$AC8    $AEE6   LD       I, $EE6         ; Load EE6 into I
$ACA    $E94A   UNKNOWN  $E94A           ; Unknown Exxx instruction
$ACC    $47D1   SNE      V7, #D1         ; Skip if V7 != 209
$ACE    $FBA5   UNKNOWN  FBA5            ; Unknown Fxxx instruction
$AD0    $AE61   LD       I, $E61         ; Load E61 into I
$AD2    $9AB2   UNKNOWN  $9AB2           ; Unknown 9xxx instruction
$AD4    $C698   RND      V6, #98         ; V6 = random & 98
$AD6    $C37B   RND      V3, #7B         ; V3 = random & 7B
$AD8    $16A2   JP       $6A2            ; Jump to 6A2
$ADA    $A14D   LD       I, $14D         ; Load 14D into I
$ADC    $23A4   CALL     $3A4            ; Call subroutine at 3A4
$ADE    $8C5D   UNKNOWN  8C5D            ; Unknown 8xxx instruction
$AE0    $8E82   AND      VE, V8          ; VE &= V8
$AE2    $A44C   LD       I, $44C         ; Load 44C into I
$AE4    $E2D3   UNKNOWN  $E2D3           ; Unknown Exxx instruction
$AE6    $FAFA   UNKNOWN  FAFA            ; Unknown Fxxx instruction
$AE8    $6107   LD       V1, #07         ; Load 7 into V1
$AEA    $C64F   RND      V6, #4F         ; V6 = random & 4F
$AEC    $5BD9   UNKNOWN  $5BD9           ; Unknown 5xxx instruction
$AEE    $7CDB   ADD      VC, #DB         ; Add 219 to VC
$AF0    $CB6A   RND      VB, #6A         ; VB = random & 6A
$AF2    $C7C7   RND      V7, #C7         ; V7 = random & C7
$AF4    $254C   CALL     $54C            ; Call subroutine at 54C
$AF6    $27CD   CALL     $7CD            ; Call subroutine at 7CD
$AF8    $799A   ADD      V9, #9A         ; Add 154 to V9
$AFA    $5B64   UNKNOWN  $5B64           ; Unknown 5xxx instruction
$AFC    $DEDA   DRW      VE, VD, #A      ; Draw 10-byte sprite at VE, VD
$AFE    $2B94   CALL     $B94            ; Call subroutine at B94
$B00    $CA56   RND      VA, #56         ; VA = random & 56
$B02    $FBD8   UNKNOWN  FBD8            ; Unknown Fxxx instruction
$B04    $38C9   SE       V8, #C9         ; Skip if V8 == 201
$B06    $51C5   UNKNOWN  $51C5           ; Unknown 5xxx instruction
$B08    $536C   UNKNOWN  $536C           ; Unknown 5xxx instruction
$B0A    $9BB1   UNKNOWN  $9BB1           ; Unknown 9xxx instruction
$B0C    $16D4   JP       $6D4            ; Jump to 6D4
$B0E    $7D6E   ADD      VD, #6E         ; Add 110 to VD
$B10    $2BEA   CALL     $BEA            ; Call subroutine at BEA
$B12    $747C   ADD      V4, #7C         ; Add 124 to V4
$B14    $4A99   SNE      VA, #99         ; Skip if VA != 153
$B16    $74B5   ADD      V4, #B5         ; Add 181 to V4
$B18    $0257   SYS      $257            ; System call to 257
$B1A    $F55F   UNKNOWN  F55F            ; Unknown Fxxx instruction
$B1C    $A4E3   LD       I, $4E3         ; Load 4E3 into I
$B1E    $13AD   JP       $3AD            ; Jump to 3AD
$B20    $957E   UNKNOWN  $957E           ; Unknown 9xxx instruction
$B22    $5999   UNKNOWN  $5999           ; Unknown 5xxx instruction
$B24    $5F83   UNKNOWN  $5F83           ; Unknown 5xxx instruction
$B26    $3BC8   SE       VB, #C8         ; Skip if VB == 200
$B28    $9AB3   UNKNOWN  $9AB3           ; Unknown 9xxx instruction
$B2A    $7AC3   ADD      VA, #C3         ; Add 195 to VA
$B2C    $386D   SE       V8, #6D         ; Skip if V8 == 109
$B2E    $D5F1   DRW      V5, VF, #1      ; Draw 1-byte sprite at V5, VF
$B30    $714A   ADD      V1, #4A         ; Add 74 to V1
$B32    $2D97   CALL     $D97            ; Call subroutine at D97
$B34    $7740   ADD      V7, #40         ; Add 64 to V7
$B36    $A091   LD       I, $091         ; Load 091 into I
$B38    $A2D4   LD       I, $2D4         ; Load 2D4 into I
$B3A    $86A8   UNKNOWN  86A8            ; Unknown 8xxx instruction
$B3C    $1D84   JP       $D84            ; Jump to D84
$B3E    $2AFF   CALL     $AFF            ; Call subroutine at AFF
$B40    $175F   JP       $75F            ; Jump to 75F
$B42    $C1C3   RND      V1, #C3         ; V1 = random & C3
$B44    $180B   JP       $80B            ; Jump to 80B
$B46    $CF74   RND      VF, #74         ; VF = random & 74
$B48    $4F0D   SNE      VF, #0D         ; Skip if VF != 13
$B4A    $EF89   UNKNOWN  $EF89           ; Unknown Exxx instruction
$B4C    $E4F2   UNKNOWN  $E4F2           ; Unknown Exxx instruction
$B4E    $1D63   JP       $D63            ; Jump to D63
$B50    $4101   SNE      V1, #01         ; Skip if V1 != 1
$B52    $692A   LD       V9, #2A         ; Load 42 into V9
$B54    $D051   DRW      V0, V5, #1      ; Draw 1-byte sprite at V0, V5
$B56    $366A   SE       V6, #6A         ; Skip if V6 == 106
$B58    $F5E8   UNKNOWN  F5E8            ; Unknown Fxxx instruction
$B5A    $EAE2   UNKNOWN  $EAE2           ; Unknown Exxx instruction
$B5C    $DD99   DRW      VD, V9, #9      ; Draw 9-byte sprite at VD, V9
$B5E    $3870   SE       V8, #70         ; Skip if V8 == 112
$B60    $A24D   LD       I, $24D         ; Load 24D into I
$B62    $4E86   SNE      VE, #86         ; Skip if VE != 134
$B64    $E020   UNKNOWN  $E020           ; Unknown Exxx instruction
$B66    $D7D2   DRW      V7, VD, #2      ; Draw 2-byte sprite at V7, VD
$B68    $9C65   UNKNOWN  $9C65           ; Unknown 9xxx instruction
$B6A    $C122   RND      V1, #22         ; V1 = random & 22
$B6C    $0F24   SYS      $F24            ; System call to F24
$B6E    $36BC   SE       V6, #BC         ; Skip if V6 == 188
$B70    $2BCB   CALL     $BCB            ; Call subroutine at BCB
$B72    $88F1   OR       V8, VF          ; V8 |= VF
$B74    $E70D   UNKNOWN  $E70D           ; Unknown Exxx instruction
$B76    $6A69   LD       VA, #69         ; Load 105 into VA
$B78    $3651   SE       V6, #51         ; Skip if V6 == 81
$B7A    $B1F4   JP       V0, $1F4        ; Jump to V0 + 1F4
$B7C    $7527   ADD      V5, #27         ; Add 39 to V5
$B7E    $5B46   UNKNOWN  $5B46           ; Unknown 5xxx instruction
$B80    $7461   ADD      V4, #61         ; Add 97 to V4
$B82    $81F6   SHR      V1              ; V1 >>= 1, VF = LSB
$B84    $55BB   UNKNOWN  $55BB           ; Unknown 5xxx instruction
$B86    $8DA5   SUB      VD, VA          ; VD -= VA, VF = !borrow
$B88    $5B18   UNKNOWN  $5B18           ; Unknown 5xxx instruction
$B8A    $7CBC   ADD      VC, #BC         ; Add 188 to VC
$B8C    $B74E   JP       V0, $74E        ; Jump to V0 + 74E
$B8E    $A64C   LD       I, $64C         ; Load 64C into I
$B90    $BDE8   JP       V0, $DE8        ; Jump to V0 + DE8
$B92    $9E76   UNKNOWN  $9E76           ; Unknown 9xxx instruction
$B94    $6920   LD       V9, #20         ; Load 32 into V9
$B96    $5210   SE       V2, V1          ; Skip if V2 == V1
$B98    $8C2E   SHL      VC              ; VC <<= 1, VF = MSB
$B9A    $1FD6   JP       $FD6            ; Jump to FD6
$B9C    $6B47   LD       VB, #47         ; Load 71 into VB
$B9E    $B18F   JP       V0, $18F        ; Jump to V0 + 18F
$BA0    $14E6   JP       $4E6            ; Jump to 4E6
$BA2    $972E   UNKNOWN  $972E           ; Unknown 9xxx instruction
$BA4    $D0C2   DRW      V0, VC, #2      ; Draw 2-byte sprite at V0, VC
$BA6    $34E9   SE       V4, #E9         ; Skip if V4 == 233
$BA8    $E649   UNKNOWN  $E649           ; Unknown Exxx instruction
$BAA    $93F6   UNKNOWN  $93F6           ; Unknown 9xxx instruction
$BAC    $8AF0   LD       VA, VF          ; VA = VF
$BAE    $E247   UNKNOWN  $E247           ; Unknown Exxx instruction
$BB0    $122B   JP       $22B            ; Jump to 22B
$BB2    $A9CC   LD       I, $9CC         ; Load 9CC into I
$BB4    $847D   UNKNOWN  847D            ; Unknown 8xxx instruction
$BB6    $E00E   UNKNOWN  $E00E           ; Unknown Exxx instruction
$BB8    $3BF0   SE       VB, #F0         ; Skip if VB == 240
$BBA    $D278   DRW      V2, V7, #8      ; Draw 8-byte sprite at V2, V7
$BBC    $F8CE   UNKNOWN  F8CE            ; Unknown Fxxx instruction
$BBE    $4C8C   SNE      VC, #8C         ; Skip if VC != 140
$BC0    $5C8B   UNKNOWN  $5C8B           ; Unknown 5xxx instruction
$BC2    $BFD9   JP       V0, $FD9        ; Jump to V0 + FD9
$BC4    $2457   CALL     $457            ; Call subroutine at 457
$BC6    $E89D   UNKNOWN  $E89D           ; Unknown Exxx instruction
$BC8    $A6CC   LD       I, $6CC         ; Load 6CC into I
$BCA    $C8B1   RND      V8, #B1         ; V8 = random & B1
$BCC    $F52C   UNKNOWN  F52C            ; Unknown Fxxx instruction
$BCE    $6B92   LD       VB, #92         ; Load 146 into VB
$BD0    $FED1   UNKNOWN  FED1            ; Unknown Fxxx instruction
$BD2    $4329   SNE      V3, #29         ; Skip if V3 != 41
$BD4    $3733   SE       V7, #33         ; Skip if V7 == 51
$BD6    $383A   SE       V8, #3A         ; Skip if V8 == 58
$BD8    $32C8   SE       V2, #C8         ; Skip if V2 == 200
$BDA    $0674   SYS      $674            ; System call to 674
$BDC    $F603   UNKNOWN  F603            ; Unknown Fxxx instruction
$BDE    $5913   UNKNOWN  $5913           ; Unknown 5xxx instruction
$BE0    $7D43   ADD      VD, #43         ; Add 67 to VD
$BE2    $BA41   JP       V0, $A41        ; Jump to V0 + A41
$BE4    $E912   UNKNOWN  $E912           ; Unknown Exxx instruction
$BE6    $20D9   CALL     $0D9            ; Call subroutine at 0D9
$BE8    $2511   CALL     $511            ; Call subroutine at 511
$BEA    $9CF1   UNKNOWN  $9CF1           ; Unknown 9xxx instruction
$BEC    $DC66   DRW      VC, V6, #6      ; Draw 6-byte sprite at VC, V6
$BEE    $432E   SNE      V3, #2E         ; Skip if V3 != 46
$BF0    $0201   SYS      $201            ; System call to 201
$BF2    $D63F   DRW      V6, V3, #F      ; Draw 15-byte sprite at V6, V3
$BF4    $5B15   UNKNOWN  $5B15           ; Unknown 5xxx instruction
$BF6    $D334   DRW      V3, V3, #4      ; Draw 4-byte sprite at V3, V3
$BF8    $0080   SYS      $080            ; System call to 080
$BFA    $F40A   LD       V4, K           ; Wait for key press, store in V4
$BFC    $019B   SYS      $19B            ; System call to 19B
$BFE    $689D   LD       V8, #9D         ; Load 157 into V8
$C00    $075D   SYS      $75D            ; System call to 75D
$C02    $A1EB   LD       I, $1EB         ; Load 1EB into I
$C04    $1F81   JP       $F81            ; Jump to F81
$C06    $3447   SE       V4, #47         ; Skip if V4 == 71
$C08    $CDB7   RND      VD, #B7         ; VD = random & B7
$C0A    $DC84   DRW      VC, V8, #4      ; Draw 4-byte sprite at VC, V8
$C0C    $131D   JP       $31D            ; Jump to 31D
$C0E    $B526   JP       V0, $526        ; Jump to V0 + 526
$C10    $EA0E   UNKNOWN  $EA0E           ; Unknown Exxx instruction
$C12    $C7A5   RND      V7, #A5         ; V7 = random & A5
$C14    $90FF   UNKNOWN  $90FF           ; Unknown 9xxx instruction
$C16    $C844   RND      V8, #44         ; V8 = random & 44
$C18    $FA57   UNKNOWN  FA57            ; Unknown Fxxx instruction
$C1A    $1DAE   JP       $DAE            ; Jump to DAE
$C1C    $446C   SNE      V4, #6C         ; Skip if V4 != 108
$C1E    $017B   SYS      $17B            ; System call to 17B
$C20    $F07C   UNKNOWN  F07C            ; Unknown Fxxx instruction
$C22    $278B   CALL     $78B            ; Call subroutine at 78B
$C24    $3B5B   SE       VB, #5B         ; Skip if VB == 91
$C26    $AB70   LD       I, $B70         ; Load B70 into I
$C28    $F33D   UNKNOWN  F33D            ; Unknown Fxxx instruction
$C2A    $453D   SNE      V5, #3D         ; Skip if V5 != 61
$C2C    $AF4E   LD       I, $F4E         ; Load F4E into I
$C2E    $8387   SUBN     V3, V8          ; V3 = V8 - V3, VF = !borrow
$C30    $18D7   JP       $8D7            ; Jump to 8D7
$C32    $760A   ADD      V6, #0A         ; Add 10 to V6
$C34    $371E   SE       V7, #1E         ; Skip if V7 == 30
$C36    $01B8   SYS      $1B8            ; System call to 1B8
$C38    $3596   SE       V5, #96         ; Skip if V5 == 150
$C3A    $914D   UNKNOWN  $914D           ; Unknown 9xxx instruction
$C3C    $05B3   SYS      $5B3            ; System call to 5B3
$C3E    $FE8F   UNKNOWN  FE8F            ; Unknown Fxxx instruction
$C40    $2609   CALL     $609            ; Call subroutine at 609
$C42    $E481   UNKNOWN  $E481           ; Unknown Exxx instruction
$C44    $7D7C   ADD      VD, #7C         ; Add 124 to VD
$C46    $4065   SNE      V0, #65         ; Skip if V0 != 101
$C48    $22B9   CALL     $2B9            ; Call subroutine at 2B9
$C4A    $54B7   UNKNOWN  $54B7           ; Unknown 5xxx instruction
$C4C    $9530   SNE      V5, V3          ; Skip if V5 != V3
$C4E    $B9EA   JP       V0, $9EA        ; Jump to V0 + 9EA
$C50    $D4C6   DRW      V4, VC, #6      ; Draw 6-byte sprite at V4, VC
$C52    $7D1C   ADD      VD, #1C         ; Add 28 to VD
$C54    $E837   UNKNOWN  $E837           ; Unknown Exxx instruction
$C56    $18F1   JP       $8F1            ; Jump to 8F1
$C58    $D2F6   DRW      V2, VF, #6      ; Draw 6-byte sprite at V2, VF
$C5A    $893E   SHL      V9              ; V9 <<= 1, VF = MSB
$C5C    $B25D   JP       V0, $25D        ; Jump to V0 + 25D
$C5E    $1DF9   JP       $DF9            ; Jump to DF9
$C60    $8914   ADD      V9, V1          ; V9 += V1, VF = carry
$C62    $D7BB   DRW      V7, VB, #B      ; Draw 11-byte sprite at V7, VB
$C64    $C3D6   RND      V3, #D6         ; V3 = random & D6
$C66    $BCB0   JP       V0, $CB0        ; Jump to V0 + CB0
$C68    $CF42   RND      VF, #42         ; VF = random & 42
$C6A    $FE4E   UNKNOWN  FE4E            ; Unknown Fxxx instruction
$C6C    $E997   UNKNOWN  $E997           ; Unknown Exxx instruction
$C6E    $985C   UNKNOWN  $985C           ; Unknown 9xxx instruction
$C70    $5C6E   UNKNOWN  $5C6E           ; Unknown 5xxx instruction
$C72    $0A95   SYS      $A95            ; System call to A95
$C74    $848C   UNKNOWN  848C            ; Unknown 8xxx instruction
$C76    $8113   XOR      V1, V1          ; V1 ^= V1
$C78    $1393   JP       $393            ; Jump to 393
$C7A    $4344   SNE      V3, #44         ; Skip if V3 != 68
$C7C    $D3F2   DRW      V3, VF, #2      ; Draw 2-byte sprite at V3, VF
$C7E    $F944   UNKNOWN  F944            ; Unknown Fxxx instruction
$C80    $FFD0   UNKNOWN  FFD0            ; Unknown Fxxx instruction
$C82    $7677   ADD      V6, #77         ; Add 119 to V6
$C84    $F1DD   UNKNOWN  F1DD            ; Unknown Fxxx instruction
$C86    $E444   UNKNOWN  $E444           ; Unknown Exxx instruction
$C88    $4E7D   SNE      VE, #7D         ; Skip if VE != 125
$C8A    $8E57   SUBN     VE, V5          ; VE = V5 - VE, VF = !borrow
$C8C    $F3C9   UNKNOWN  F3C9            ; Unknown Fxxx instruction
$C8E    $9FE1   UNKNOWN  $9FE1           ; Unknown 9xxx instruction
$C90    $F16B   UNKNOWN  F16B            ; Unknown Fxxx instruction
$C92    $5C18   UNKNOWN  $5C18           ; Unknown 5xxx instruction
$C94    $AF8A   LD       I, $F8A         ; Load F8A into I
$C96    $5349   UNKNOWN  $5349           ; Unknown 5xxx instruction
$C98    $9FFC   UNKNOWN  $9FFC           ; Unknown 9xxx instruction
$C9A    $EE82   UNKNOWN  $EE82           ; Unknown Exxx instruction
$C9C    $8B33   XOR      VB, V3          ; VB ^= V3
$C9E    $6DB2   LD       VD, #B2         ; Load 178 into VD
$CA0    $8381   OR       V3, V8          ; V3 |= V8
$CA2    $C412   RND      V4, #12         ; V4 = random & 12
$CA4    $B01B   JP       V0, $01B        ; Jump to V0 + 01B
$CA6    $9235   UNKNOWN  $9235           ; Unknown 9xxx instruction
$CA8    $587B   UNKNOWN  $587B           ; Unknown 5xxx instruction
$CAA    $92FA   UNKNOWN  $92FA           ; Unknown 9xxx instruction
$CAC    $F000   UNKNOWN  F000            ; Unknown Fxxx instruction
$CAE    $EAAD   UNKNOWN  $EAAD           ; Unknown Exxx instruction
$CB0    $67F7   LD       V7, #F7         ; Load 247 into V7
$CB2    $37FA   SE       V7, #FA         ; Skip if V7 == 250
$CB4    $CA2E   RND      VA, #2E         ; VA = random & 2E
$CB6    $B4F1   JP       V0, $4F1        ; Jump to V0 + 4F1
$CB8    $03F9   SYS      $3F9            ; System call to 3F9
$CBA    $28D9   CALL     $8D9            ; Call subroutine at 8D9
$CBC    $6B14   LD       VB, #14         ; Load 20 into VB
$CBE    $44F5   SNE      V4, #F5         ; Skip if V4 != 245
$CC0    $E516   UNKNOWN  $E516           ; Unknown Exxx instruction
$CC2    $C17B   RND      V1, #7B         ; V1 = random & 7B
$CC4    $EDFB   UNKNOWN  $EDFB           ; Unknown Exxx instruction
$CC6    $EE54   UNKNOWN  $EE54           ; Unknown Exxx instruction
$CC8    $D07B   DRW      V0, V7, #B      ; Draw 11-byte sprite at V0, V7
$CCA    $7391   ADD      V3, #91         ; Add 145 to V3
$CCC    $4F36   SNE      VF, #36         ; Skip if VF != 54
$CCE    $E337   UNKNOWN  $E337           ; Unknown Exxx instruction
$CD0    $BB2A   JP       V0, $B2A        ; Jump to V0 + B2A
$CD2    $8D31   OR       VD, V3          ; VD |= V3
$CD4    $6C42   LD       VC, #42         ; Load 66 into VC
$CD6    $54F9   UNKNOWN  $54F9           ; Unknown 5xxx instruction
$CD8    $5B9F   UNKNOWN  $5B9F           ; Unknown 5xxx instruction
$CDA    $AEAB   LD       I, $EAB         ; Load EAB into I
$CDC    $0916   SYS      $916            ; System call to 916
$CDE    $C242   RND      V2, #42         ; V2 = random & 42
$CE0    $2049   CALL     $049            ; Call subroutine at 049
$CE2    $F08E   UNKNOWN  F08E            ; Unknown Fxxx instruction
$CE4    $8A12   AND      VA, V1          ; VA &= V1
$CE6    $42AF   SNE      V2, #AF         ; Skip if V2 != 175
$CE8    $9F53   UNKNOWN  $9F53           ; Unknown 9xxx instruction
$CEA    $2308   CALL     $308            ; Call subroutine at 308
$CEC    $E2C7   UNKNOWN  $E2C7           ; Unknown Exxx instruction
$CEE    $60C2   LD       V0, #C2         ; Load 194 into V0
$CF0    $5EFE   UNKNOWN  $5EFE           ; Unknown 5xxx instruction
$CF2    $773B   ADD      V7, #3B         ; Add 59 to V7
$CF4    $DD05   DRW      VD, V0, #5      ; Draw 5-byte sprite at VD, V0
$CF6    $C238   RND      V2, #38         ; V2 = random & 38
$CF8    $690F   LD       V9, #0F         ; Load 15 into V9
$CFA    $0BEC   SYS      $BEC            ; System call to BEC
$CFC    $29F9   CALL     $9F9            ; Call subroutine at 9F9
$CFE    $C421   RND      V4, #21         ; V4 = random & 21
$D00    $DE9D   DRW      VE, V9, #D      ; Draw 13-byte sprite at VE, V9
$D02    $F269   UNKNOWN  F269            ; Unknown Fxxx instruction
$D04    $D626   DRW      V6, V2, #6      ; Draw 6-byte sprite at V6, V2
$D06    $F59E   UNKNOWN  F59E            ; Unknown Fxxx instruction
$D08    $4175   SNE      V1, #75         ; Skip if V1 != 117
$D0A    $A41F   LD       I, $41F         ; Load 41F into I
$D0C    $7573   ADD      V5, #73         ; Add 115 to V5
$D0E    $368A   SE       V6, #8A         ; Skip if V6 == 138
$D10    $6806   LD       V8, #06         ; Load 6 into V8
$D12    $7269   ADD      V2, #69         ; Add 105 to V2
$D14    $FF26   UNKNOWN  FF26            ; Unknown Fxxx instruction
$D16    $5EDE   UNKNOWN  $5EDE           ; Unknown 5xxx instruction
$D18    $5F40   SE       VF, V4          ; Skip if VF == V4
$D1A    $CB54   RND      VB, #54         ; VB = random & 54
$D1C    $67E6   LD       V7, #E6         ; Load 230 into V7
$D1E    $69CA   LD       V9, #CA         ; Load 202 into V9
$D20    $EDB0   UNKNOWN  $EDB0           ; Unknown Exxx instruction
$D22    $42E1   SNE      V2, #E1         ; Skip if V2 != 225
$D24    $D120   DRW      V1, V2, #0      ; Draw 0-byte sprite at V1, V2
$D26    $7B59   ADD      VB, #59         ; Add 89 to VB
$D28    $A840   LD       I, $840         ; Load 840 into I
$D2A    $FCCD   UNKNOWN  FCCD            ; Unknown Fxxx instruction
$D2C    $DC83   DRW      VC, V8, #3      ; Draw 3-byte sprite at VC, V8
$D2E    $8B77   SUBN     VB, V7          ; VB = V7 - VB, VF = !borrow
$D30    $1953   JP       $953            ; Jump to 953
$D32    $E45E   UNKNOWN  $E45E           ; Unknown Exxx instruction
$D34    $D2FD   DRW      V2, VF, #D      ; Draw 13-byte sprite at V2, VF
$D36    $1BDE   JP       $BDE            ; Jump to BDE
$D38    $DF09   DRW      VF, V0, #9      ; Draw 9-byte sprite at VF, V0
$D3A    $F31A   UNKNOWN  F31A            ; Unknown Fxxx instruction
$D3C    $69A3   LD       V9, #A3         ; Load 163 into V9
$D3E    $A32F   LD       I, $32F         ; Load 32F into I
$D40    $0042   SYS      $042            ; System call to 042
$D42    $2612   CALL     $612            ; Call subroutine at 612
$D44    $6D22   LD       VD, #22         ; Load 34 into VD
$D46    $F178   UNKNOWN  F178            ; Unknown Fxxx instruction
$D48    $13B5   JP       $3B5            ; Jump to 3B5
$D4A    $DD30   DRW      VD, V3, #0      ; Draw 0-byte sprite at VD, V3
$D4C    $0505   SYS      $505            ; System call to 505
$D4E    $566B   UNKNOWN  $566B           ; Unknown 5xxx instruction
$D50    $DBB8   DRW      VB, VB, #8      ; Draw 8-byte sprite at VB, VB
$D52    $B1D0   JP       V0, $1D0        ; Jump to V0 + 1D0
$D54    $176A   JP       $76A            ; Jump to 76A
$D56    $E229   UNKNOWN  $E229           ; Unknown Exxx instruction
$D58    $F3BB   UNKNOWN  F3BB            ; Unknown Fxxx instruction
$D5A    $FCC5   UNKNOWN  FCC5            ; Unknown Fxxx instruction
$D5C    $2CBC   CALL     $CBC            ; Call subroutine at CBC
$D5E    $62A1   LD       V2, #A1         ; Load 161 into V2
$D60    $4082   SNE      V0, #82         ; Skip if V0 != 130
$D62    $A273   LD       I, $273         ; Load 273 into I
$D64    $AB1C   LD       I, $B1C         ; Load B1C into I
$D66    $9CD1   UNKNOWN  $9CD1           ; Unknown 9xxx instruction
$D68    $9DB5   UNKNOWN  $9DB5           ; Unknown 9xxx instruction
$D6A    $1D7F   JP       $D7F            ; Jump to D7F
$D6C    $EA1F   UNKNOWN  $EA1F           ; Unknown Exxx instruction
$D6E    $E0CF   UNKNOWN  $E0CF           ; Unknown Exxx instruction
$D70    $B2B6   JP       V0, $2B6        ; Jump to V0 + 2B6
$D72    $897B   UNKNOWN  897B            ; Unknown 8xxx instruction
$D74    $3D7C   SE       VD, #7C         ; Skip if VD == 124
$D76    $2070   CALL     $070            ; Call subroutine at 070
$D78    $F63D   UNKNOWN  F63D            ; Unknown Fxxx instruction
$D7A    $86B2   AND      V6, VB          ; V6 &= VB
$D7C    $F27F   UNKNOWN  F27F            ; Unknown Fxxx instruction
$D7E    $E105   UNKNOWN  $E105           ; Unknown Exxx instruction
$D80    $76D5   ADD      V6, #D5         ; Add 213 to V6
$D82    $A06C   LD       I, $06C         ; Load 06C into I
$D84    $C542   RND      V5, #42         ; V5 = random & 42
$D86    $CD84   RND      VD, #84         ; VD = random & 84
$D88    $C251   RND      V2, #51         ; V2 = random & 51
$D8A    $F57F   UNKNOWN  F57F            ; Unknown Fxxx instruction
$D8C    $BF25   JP       V0, $F25        ; Jump to V0 + F25
$D8E    $4F8C   SNE      VF, #8C         ; Skip if VF != 140
$D90    $8CA1   OR       VC, VA          ; VC |= VA
$D92    $CE6B   RND      VE, #6B         ; VE = random & 6B
$D94    $472A   SNE      V7, #2A         ; Skip if V7 != 42
$D96    $64CB   LD       V4, #CB         ; Load 203 into V4
$D98    $6ED4   LD       VE, #D4         ; Load 212 into VE
$D9A    $5D41   UNKNOWN  $5D41           ; Unknown 5xxx instruction
$D9C    $54B4   UNKNOWN  $54B4           ; Unknown 5xxx instruction
$D9E    $C807   RND      V8, #07         ; V8 = random & 07
$DA0    $CAAF   RND      VA, #AF         ; VA = random & AF
$DA2    $00E3   SYS      $0E3            ; System call to 0E3
$DA4    $6F85   LD       VF, #85         ; Load 133 into VF
$DA6    $005B   SYS      $05B            ; System call to 05B
$DA8    $DF7C   DRW      VF, V7, #C      ; Draw 12-byte sprite at VF, V7
$DAA    $3049   SE       V0, #49         ; Skip if V0 == 73
$DAC    $94FB   UNKNOWN  $94FB           ; Unknown 9xxx instruction
$DAE    $B3FF   JP       V0, $3FF        ; Jump to V0 + 3FF
$DB0    $97E7   UNKNOWN  $97E7           ; Unknown 9xxx instruction
$DB2    $B7CD   JP       V0, $7CD        ; Jump to V0 + 7CD
$DB4    $2841   CALL     $841            ; Call subroutine at 841
$DB6    $AFFD   LD       I, $FFD         ; Load FFD into I
$DB8    $4815   SNE      V8, #15         ; Skip if V8 != 21
$DBA    $D2F1   DRW      V2, VF, #1      ; Draw 1-byte sprite at V2, VF
$DBC    $4417   SNE      V4, #17         ; Skip if V4 != 23
$DBE    $5F12   UNKNOWN  $5F12           ; Unknown 5xxx instruction
$DC0    $A20B   LD       I, $20B         ; Load 20B into I
$DC2    $FF05   UNKNOWN  FF05            ; Unknown Fxxx instruction
$DC4    $237F   CALL     $37F            ; Call subroutine at 37F
$DC6    $1816   JP       $816            ; Jump to 816
$DC8    $A299   LD       I, $299         ; Load 299 into I
$DCA    $7359   ADD      V3, #59         ; Add 89 to V3
$DCC    $7716   ADD      V7, #16         ; Add 22 to V7
$DCE    $ED8C   UNKNOWN  $ED8C           ; Unknown Exxx instruction
$DD0    $1355   JP       $355            ; Jump to 355
$DD2    $9A54   UNKNOWN  $9A54           ; Unknown 9xxx instruction
$DD4    $131C   JP       $31C            ; Jump to 31C
$DD6    $52A8   UNKNOWN  $52A8           ; Unknown 5xxx instruction
$DD8    $C4C2   RND      V4, #C2         ; V4 = random & C2
$DDA    $61E3   LD       V1, #E3         ; Load 227 into V1
$DDC    $F368   UNKNOWN  F368            ; Unknown Fxxx instruction
$DDE    $6D44   LD       VD, #44         ; Load 68 into VD
$DE0    $4ABC   SNE      VA, #BC         ; Skip if VA != 188
$DE2    $39BA   SE       V9, #BA         ; Skip if V9 == 186
$DE4    $13C9   JP       $3C9            ; Jump to 3C9
$DE6    $E847   UNKNOWN  $E847           ; Unknown Exxx instruction
$DE8    $C89E   RND      V8, #9E         ; V8 = random & 9E
$DEA    $2190   CALL     $190            ; Call subroutine at 190
$DEC    $F3B1   UNKNOWN  F3B1            ; Unknown Fxxx instruction
$DEE    $6BBA   LD       VB, #BA         ; Load 186 into VB
$DF0    $7342   ADD      V3, #42         ; Add 66 to V3
$DF2    $8223   XOR      V2, V2          ; V2 ^= V2
$DF4    $7E7D   ADD      VE, #7D         ; Add 125 to VE
$DF6    $5E69   UNKNOWN  $5E69           ; Unknown 5xxx instruction
$DF8    $AEB1   LD       I, $EB1         ; Load EB1 into I
$DFA    $90A1   UNKNOWN  $90A1           ; Unknown 9xxx instruction
$DFC    $82AE   SHL      V2              ; V2 <<= 1, VF = MSB
$DFE    $BF69   JP       V0, $F69        ; Jump to V0 + F69
$E00    $F981   UNKNOWN  F981            ; Unknown Fxxx instruction
$E02    $3F29   SE       VF, #29         ; Skip if VF == 41
$E04    $ADDD   LD       I, $DDD         ; Load DDD into I
$E06    $93AE   UNKNOWN  $93AE           ; Unknown 9xxx instruction
$E08    $EE97   UNKNOWN  $EE97           ; Unknown Exxx instruction
$E0A    $44A7   SNE      V4, #A7         ; Skip if V4 != 167
$E0C    $902D   UNKNOWN  $902D           ; Unknown 9xxx instruction
$E0E    $00C8   SYS      $0C8            ; System call to 0C8
$E10    $29CB   CALL     $9CB            ; Call subroutine at 9CB
$E12    $E109   UNKNOWN  $E109           ; Unknown Exxx instruction
$E14    $2937   CALL     $937            ; Call subroutine at 937
$E16    $E615   UNKNOWN  $E615           ; Unknown Exxx instruction
$E18    $DE24   DRW      VE, V2, #4      ; Draw 4-byte sprite at VE, V2
$E1A    $2B76   CALL     $B76            ; Call subroutine at B76
$E1C    $EEEF   UNKNOWN  $EEEF           ; Unknown Exxx instruction
$E1E    $7D51   ADD      VD, #51         ; Add 81 to VD
$E20    $A800   LD       I, $800         ; Load 800 into I
$E22    $B532   JP       V0, $532        ; Jump to V0 + 532
$E24    $2847   CALL     $847            ; Call subroutine at 847
$E26    $F94B   UNKNOWN  F94B            ; Unknown Fxxx instruction
$E28    $8AC7   SUBN     VA, VC          ; VA = VC - VA, VF = !borrow
$E2A    $2630   CALL     $630            ; Call subroutine at 630
$E2C    $7C6C   ADD      VC, #6C         ; Add 108 to VC
$E2E    $0FC5   SYS      $FC5            ; System call to FC5
$E30    $A3AA   LD       I, $3AA         ; Load 3AA into I
$E32    $393E   SE       V9, #3E         ; Skip if V9 == 62
$E34    $DB8A   DRW      VB, V8, #A      ; Draw 10-byte sprite at VB, V8
$E36    $E2CE   UNKNOWN  $E2CE           ; Unknown Exxx instruction
$E38    $35BC   SE       V5, #BC         ; Skip if V5 == 188
$E3A    $786D   ADD      V8, #6D         ; Add 109 to V8
$E3C    $5C0A   UNKNOWN  $5C0A           ; Unknown 5xxx instruction
$E3E    $E867   UNKNOWN  $E867           ; Unknown Exxx instruction
$E40    $A0BD   LD       I, $0BD         ; Load 0BD into I
$E42    $894B   UNKNOWN  894B            ; Unknown 8xxx instruction
$E44    $98B2   UNKNOWN  $98B2           ; Unknown 9xxx instruction
$E46    $534B   UNKNOWN  $534B           ; Unknown 5xxx instruction
$E48    $8AE1   OR       VA, VE          ; VA |= VE
$E4A    $B73D   JP       V0, $73D        ; Jump to V0 + 73D
$E4C    $A5FD   LD       I, $5FD         ; Load 5FD into I
$E4E    $6D87   LD       VD, #87         ; Load 135 into VD
$E50    $16D9   JP       $6D9            ; Jump to 6D9
$E52    $DB03   DRW      VB, V0, #3      ; Draw 3-byte sprite at VB, V0
$E54    $1347   JP       $347            ; Jump to 347
$E56    $A435   LD       I, $435         ; Load 435 into I
$E58    $C0FE   RND      V0, #FE         ; V0 = random & FE
$E5A    $3006   SE       V0, #06         ; Skip if V0 == 6
$E5C    $14FE   JP       $4FE            ; Jump to 4FE
$E5E    $A2A4   LD       I, $2A4         ; Load 2A4 into I
$E60    $50BF   UNKNOWN  $50BF           ; Unknown 5xxx instruction
$E62    $82F1   OR       V2, VF          ; V2 |= VF
$E64    $286C   CALL     $86C            ; Call subroutine at 86C
$E66    $6C2C   LD       VC, #2C         ; Load 44 into VC
$E68    $62BC   LD       V2, #BC         ; Load 188 into V2
$E6A    $BA57   JP       V0, $A57        ; Jump to V0 + A57
$E6C    $60BB   LD       V0, #BB         ; Load 187 into V0
$E6E    $3764   SE       V7, #64         ; Skip if V7 == 100
$E70    $E97C   UNKNOWN  $E97C           ; Unknown Exxx instruction
$E72    $9617   UNKNOWN  $9617           ; Unknown 9xxx instruction
$E74    $1C8F   JP       $C8F            ; Jump to C8F
$E76    $581C   UNKNOWN  $581C           ; Unknown 5xxx instruction
$E78    $3D34   SE       VD, #34         ; Skip if VD == 52
$E7A    $0DF2   SYS      $DF2            ; System call to DF2
$E7C    $58AC   UNKNOWN  $58AC           ; Unknown 5xxx instruction
$E7E    $0CD7   SYS      $CD7            ; System call to CD7
$E80    $23BC   CALL     $3BC            ; Call subroutine at 3BC
$E82    $9AA3   UNKNOWN  $9AA3           ; Unknown 9xxx instruction
$E84    $A511   LD       I, $511         ; Load 511 into I
$E86    $8EDB   UNKNOWN  8EDB            ; Unknown 8xxx instruction
$E88    $B0C8   JP       V0, $0C8        ; Jump to V0 + 0C8
$E8A    $26B5   CALL     $6B5            ; Call subroutine at 6B5
$E8C    $F7A9   UNKNOWN  F7A9            ; Unknown Fxxx instruction
$E8E    $1A47   JP       $A47            ; Jump to A47
$E90    $D8CF   DRW      V8, VC, #F      ; Draw 15-byte sprite at V8, VC
$E92    $839C   UNKNOWN  839C            ; Unknown 8xxx instruction
$E94    $1BA1   JP       $BA1            ; Jump to BA1
$E96    $5AEC   UNKNOWN  $5AEC           ; Unknown 5xxx instruction
$E98    $304E   SE       V0, #4E         ; Skip if V0 == 78
$E9A    $FABB   UNKNOWN  FABB            ; Unknown Fxxx instruction
$E9C    $ADCE   LD       I, $DCE         ; Load DCE into I
$E9E    $E3C1   UNKNOWN  $E3C1           ; Unknown Exxx instruction
$EA0    $1C27   JP       $C27            ; Jump to C27
$EA2    $0A36   SYS      $A36            ; System call to A36
$EA4    $D52C   DRW      V5, V2, #C      ; Draw 12-byte sprite at V5, V2
$EA6    $8007   SUBN     V0, V0          ; V0 = V0 - V0, VF = !borrow
$EA8    $319E   SE       V1, #9E         ; Skip if V1 == 158
$EAA    $FB1C   UNKNOWN  FB1C            ; Unknown Fxxx instruction
$EAC    $B78B   JP       V0, $78B        ; Jump to V0 + 78B
$EAE    $150A   JP       $50A            ; Jump to 50A
$EB0    $9F98   UNKNOWN  $9F98           ; Unknown 9xxx instruction
$EB2    $BED3   JP       V0, $ED3        ; Jump to V0 + ED3
$EB4    $7930   ADD      V9, #30         ; Add 48 to V9
$EB6    $462A   SNE      V6, #2A         ; Skip if V6 != 42
$EB8    $D84D   DRW      V8, V4, #D      ; Draw 13-byte sprite at V8, V4
$EBA    $0839   SYS      $839            ; System call to 839
$EBC    $2F5D   CALL     $F5D            ; Call subroutine at F5D
$EBE    $3EC4   SE       VE, #C4         ; Skip if VE == 196
$EC0    $084B   SYS      $84B            ; System call to 84B
$EC2    $A6E3   LD       I, $6E3         ; Load 6E3 into I
$EC4    $CECB   RND      VE, #CB         ; VE = random & CB
$EC6    $81AF   UNKNOWN  81AF            ; Unknown 8xxx instruction
$EC8    $CAA4   RND      VA, #A4         ; VA = random & A4
$ECA    $FAF6   UNKNOWN  FAF6            ; Unknown Fxxx instruction
$ECC    $995F   UNKNOWN  $995F           ; Unknown 9xxx instruction
$ECE    $4ED4   SNE      VE, #D4         ; Skip if VE != 212
$ED0    $DDB2   DRW      VD, VB, #2      ; Draw 2-byte sprite at VD, VB
$ED2    $8123   XOR      V1, V2          ; V1 ^= V2
$ED4    $18DA   JP       $8DA            ; Jump to 8DA
$ED6    $F0A8   UNKNOWN  F0A8            ; Unknown Fxxx instruction
$ED8    $AED6   LD       I, $ED6         ; Load ED6 into I
$EDA    $47CE   SNE      V7, #CE         ; Skip if V7 != 206
$EDC    $52D7   UNKNOWN  $52D7           ; Unknown 5xxx instruction
$EDE    $7BEF   ADD      VB, #EF         ; Add 239 to VB
$EE0    $DBFB   DRW      VB, VF, #B      ; Draw 11-byte sprite at VB, VF
$EE2    $F609   UNKNOWN  F609            ; Unknown Fxxx instruction
$EE4    $5252   UNKNOWN  $5252           ; Unknown 5xxx instruction
$EE6    $6609   LD       V6, #09         ; Load 9 into V6
$EE8    $FEF2   UNKNOWN  FEF2            ; Unknown Fxxx instruction
$EEA    $ACAD   LD       I, $CAD         ; Load CAD into I
$EEC    $1C08   JP       $C08            ; Jump to C08
$EEE    $FF0F   UNKNOWN  FF0F            ; Unknown Fxxx instruction
$EF0    $75E2   ADD      V5, #E2         ; Add 226 to V5
$EF2    $F7FA   UNKNOWN  F7FA            ; Unknown Fxxx instruction
$EF4    $A573   LD       I, $573         ; Load 573 into I
$EF6    $8D68   UNKNOWN  8D68            ; Unknown 8xxx instruction
$EF8    $9EED   UNKNOWN  $9EED           ; Unknown 9xxx instruction
$EFA    $09A0   SYS      $9A0            ; System call to 9A0
$EFC    $A70A   LD       I, $70A         ; Load 70A into I
$EFE    $8678   UNKNOWN  8678            ; Unknown 8xxx instruction
$F00    $0049   SYS      $049            ; System call to 049
$F02    $D2DD   DRW      V2, VD, #D      ; Draw 13-byte sprite at V2, VD
$F04    $E7B4   UNKNOWN  $E7B4           ; Unknown Exxx instruction
$F06    $C42A   RND      V4, #2A         ; V4 = random & 2A
$F08    $1736   JP       $736            ; Jump to 736
$F0A    $090A   SYS      $90A            ; System call to 90A
$F0C    $35E6   SE       V5, #E6         ; Skip if V5 == 230
$F0E    $DD7F   DRW      VD, V7, #F      ; Draw 15-byte sprite at VD, V7
$F10    $D6D0   DRW      V6, VD, #0      ; Draw 0-byte sprite at V6, VD
$F12    $9E2F   UNKNOWN  $9E2F           ; Unknown 9xxx instruction
$F14    $E6BE   UNKNOWN  $E6BE           ; Unknown Exxx instruction
$F16    $5ED0   SE       VE, VD          ; Skip if VE == VD
$F18    $5C69   UNKNOWN  $5C69           ; Unknown 5xxx instruction
$F1A    $9B97   UNKNOWN  $9B97           ; Unknown 9xxx instruction
$F1C    $69CA   LD       V9, #CA         ; Load 202 into V9
$F1E    $EE78   UNKNOWN  $EE78           ; Unknown Exxx instruction
$F20    $4AFF   SNE      VA, #FF         ; Skip if VA != 255
$F22    $98D2   UNKNOWN  $98D2           ; Unknown 9xxx instruction
$F24    $0DC9   SYS      $DC9            ; System call to DC9
$F26    $08BA   SYS      $8BA            ; System call to 8BA
$F28    $30A9   SE       V0, #A9         ; Skip if V0 == 169
$F2A    $29E8   CALL     $9E8            ; Call subroutine at 9E8
$F2C    $F80D   UNKNOWN  F80D            ; Unknown Fxxx instruction
$F2E    $FFC5   UNKNOWN  FFC5            ; Unknown Fxxx instruction
$F30    $C4D7   RND      V4, #D7         ; V4 = random & D7
$F32    $A1CB   LD       I, $1CB         ; Load 1CB into I
$F34    $D424   DRW      V4, V2, #4      ; Draw 4-byte sprite at V4, V2
$F36    $0D21   SYS      $D21            ; System call to D21
$F38    $170B   JP       $70B            ; Jump to 70B
$F3A    $5F3B   UNKNOWN  $5F3B           ; Unknown 5xxx instruction
$F3C    $2530   CALL     $530            ; Call subroutine at 530
$F3E    $71E1   ADD      V1, #E1         ; Add 225 to V1
$F40    $6126   LD       V1, #26         ; Load 38 into V1
$F42    $A84A   LD       I, $84A         ; Load 84A into I
$F44    $7A63   ADD      VA, #63         ; Add 99 to VA
$F46    $1022   JP       $022            ; Jump to 022
$F48    $F021   UNKNOWN  F021            ; Unknown Fxxx instruction
$F4A    $36EA   SE       V6, #EA         ; Skip if V6 == 234
$F4C    $7626   ADD      V6, #26         ; Add 38 to V6
$F4E    $C8D0   RND      V8, #D0         ; V8 = random & D0
$F50    $61BC   LD       V1, #BC         ; Load 188 into V1
$F52    $713E   ADD      V1, #3E         ; Add 62 to V1
$F54    $D737   DRW      V7, V3, #7      ; Draw 7-byte sprite at V7, V3
$F56    $44DF   SNE      V4, #DF         ; Skip if V4 != 223
$F58    $F528   UNKNOWN  F528            ; Unknown Fxxx instruction
$F5A    $3929   SE       V9, #29         ; Skip if V9 == 41
$F5C    $B23E   JP       V0, $23E        ; Jump to V0 + 23E
$F5E    $3A1A   SE       VA, #1A         ; Skip if VA == 26
$F60    $87EC   UNKNOWN  87EC            ; Unknown 8xxx instruction
$F62    $9E10   SNE      VE, V1          ; Skip if VE != V1
$F64    $34BC   SE       V4, #BC         ; Skip if V4 == 188
$F66    $24B3   CALL     $4B3            ; Call subroutine at 4B3
$F68    $7972   ADD      V9, #72         ; Add 114 to V9
$F6A    $2C65   CALL     $C65            ; Call subroutine at C65
$F6C    $A2CB   LD       I, $2CB         ; Load 2CB into I
$F6E    $F53C   UNKNOWN  F53C            ; Unknown Fxxx instruction
$F70    $F988   UNKNOWN  F988            ; Unknown Fxxx instruction
$F72    $B522   JP       V0, $522        ; Jump to V0 + 522
$F74    $376C   SE       V7, #6C         ; Skip if V7 == 108
$F76    $6C20   LD       VC, #20         ; Load 32 into VC
$F78    $348E   SE       V4, #8E         ; Skip if V4 == 142
$F7A    $28D3   CALL     $8D3            ; Call subroutine at 8D3
$F7C    $A6DD   LD       I, $6DD         ; Load 6DD into I
$F7E    $AC56   LD       I, $C56         ; Load C56 into I
$F80    $EB3B   UNKNOWN  $EB3B           ; Unknown Exxx instruction
$F82    $44E5   SNE      V4, #E5         ; Skip if V4 != 229
$F84    $7C9C   ADD      VC, #9C         ; Add 156 to VC
$F86    $D111   DRW      V1, V1, #1      ; Draw 1-byte sprite at V1, V1
$F88    $2578   CALL     $578            ; Call subroutine at 578
$F8A    $C062   RND      V0, #62         ; V0 = random & 62
$F8C    $6C90   LD       VC, #90         ; Load 144 into VC
$F8E    $35C0   SE       V5, #C0         ; Skip if V5 == 192
$F90    $B34C   JP       V0, $34C        ; Jump to V0 + 34C
$F92    $641C   LD       V4, #1C         ; Load 28 into V4
$F94    $11C9   JP       $1C9            ; Jump to 1C9
$F96    $AA53   LD       I, $A53         ; Load A53 into I
$F98    $B20F   JP       V0, $20F        ; Jump to V0 + 20F
$F9A    $E76D   UNKNOWN  $E76D           ; Unknown Exxx instruction
$F9C    $C689   RND      V6, #89         ; V6 = random & 89
$F9E    $C7A8   RND      V7, #A8         ; V7 = random & A8
$FA0    $F5AB   UNKNOWN  F5AB            ; Unknown Fxxx instruction
$FA2    $6741   LD       V7, #41         ; Load 65 into V7
$FA4    $ADBF   LD       I, $DBF         ; Load DBF into I
$FA6    $7245   ADD      V2, #45         ; Add 69 to V2
$FA8    $C0B5   RND      V0, #B5         ; V0 = random & B5
$FAA    $9671   UNKNOWN  $9671           ; Unknown 9xxx instruction
$FAC    $B3B5   JP       V0, $3B5        ; Jump to V0 + 3B5
$FAE    $B2EE   JP       V0, $2EE        ; Jump to V0 + 2EE
$FB0    $557E   UNKNOWN  $557E           ; Unknown 5xxx instruction
$FB2    $9485   UNKNOWN  $9485           ; Unknown 9xxx instruction
$FB4    $CF7E   RND      VF, #7E         ; VF = random & 7E
$FB6    $1978   JP       $978            ; Jump to 978
$FB8    $0DA3   SYS      $DA3            ; System call to DA3
$FBA    $74A4   ADD      V4, #A4         ; Add 164 to V4
$FBC    $514D   UNKNOWN  $514D           ; Unknown 5xxx instruction
$FBE    $9272   UNKNOWN  $9272           ; Unknown 9xxx instruction
$FC0    $F4AA   UNKNOWN  F4AA            ; Unknown Fxxx instruction
$FC2    $8B8D   UNKNOWN  8B8D            ; Unknown 8xxx instruction
$FC4    $12E1   JP       $2E1            ; Jump to 2E1
$FC6    $7105   ADD      V1, #05         ; Add 5 to V1
$FC8    $B9B8   JP       V0, $9B8        ; Jump to V0 + 9B8
$FCA    $F440   UNKNOWN  F440            ; Unknown Fxxx instruction
$FCC    $2F42   CALL     $F42            ; Call subroutine at F42
$FCE    $C26B   RND      V2, #6B         ; V2 = random & 6B
$FD0    $F21A   UNKNOWN  F21A            ; Unknown Fxxx instruction
$FD2    $2A4E   CALL     $A4E            ; Call subroutine at A4E
$FD4    $15AE   JP       $5AE            ; Jump to 5AE
$FD6    $740A   ADD      V4, #0A         ; Add 10 to V4
$FD8    $8032   AND      V0, V3          ; V0 &= V3
$FDA    $B756   JP       V0, $756        ; Jump to V0 + 756
$FDC    $FCF1   UNKNOWN  FCF1            ; Unknown Fxxx instruction
$FDE    $0406   SYS      $406            ; System call to 406
$FE0    $C6F6   RND      V6, #F6         ; V6 = random & F6
$FE2    $3932   SE       V9, #32         ; Skip if V9 == 50
$FE4    $1374   JP       $374            ; Jump to 374
$FE6    $BF38   JP       V0, $F38        ; Jump to V0 + F38
$FE8    $E260   UNKNOWN  $E260           ; Unknown Exxx instruction
$FEA    $AEAF   LD       I, $EAF         ; Load EAF into I
$FEC    $27CB   CALL     $7CB            ; Call subroutine at 7CB
$FEE    $7D5E   ADD      VD, #5E         ; Add 94 to VD
$FF0    $1D62   JP       $D62            ; Jump to D62
$FF2    $7DDB   ADD      VD, #DB         ; Add 219 to VD
$FF4    $586A   UNKNOWN  $586A           ; Unknown 5xxx instruction
$FF6    $C9E6   RND      V9, #E6         ; V9 = random & E6
$FF8    $2F40   CALL     $F40            ; Call subroutine at F40
$FFA    $FD94   UNKNOWN  FD94            ; Unknown Fxxx instruction
$FFC    $923A   UNKNOWN  $923A           ; Unknown 9xxx instruction
$FFE    $0536   SYS      $536            ; System call to 536

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 475 (26.5%)
  LD      : 235 (13.1%)
  JP      : 231 (12.9%)
  ADD     : 131 ( 7.3%)
  RND     : 114 ( 6.4%)
  SNE     : 111 ( 6.2%)
  DRW     : 110 ( 6.1%)
  SYS     : 110 ( 6.1%)
  SE      : 108 ( 6.0%)
  CALL    : 105 ( 5.9%)
  OR      :  12 ( 0.7%)
  SUBN    :  10 ( 0.6%)
  AND     :   9 ( 0.5%)
  SHR     :   8 ( 0.4%)
  XOR     :   8 ( 0.4%)
  SUB     :   8 ( 0.4%)
  SHL     :   6 ( 0.3%)

Memory Operations: 366 (20.4%)
Arithmetic Operations: 178 (9.9%)
