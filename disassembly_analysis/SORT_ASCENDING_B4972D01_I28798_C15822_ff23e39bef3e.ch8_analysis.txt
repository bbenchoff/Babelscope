
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B4972D01_I28798_C15822_ff23e39bef3e.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 4972
Instance: 28798
Direction: ascending
Final Array: [1, 1, 1, 1, 1, 1, 1, 8]
Operations: R:0 W:7 C:1079 S:610

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 119
Sort Array References:
  $208: LD I, $407 ; Load 407 into I
  $20C: LD I, $8B7 ; Load 8B7 into I
  $210: LD I, $ECC ; Load ECC into I
  $350: LD I, $B0F ; Load B0F into I
  $39C: LD I, $30B ; Load 30B into I
  $3AE: LD I, $F4C ; Load F4C into I
  $3F4: LD I, $078 ; Load 078 into I
  $3F6: LD I, $AAA ; Load AAA into I
  $402: LD I, $E26 ; Load E26 into I
  $40A: LD I, $AB9 ; Load AB9 into I
  $41E: LD I, $292 ; Load 292 into I
  $42E: LD I, $28C ; Load 28C into I
  $466: LD I, $CAD ; Load CAD into I
  $4A0: LD I, $7D8 ; Load 7D8 into I
  $4B4: LD I, $CDC ; Load CDC into I
  $4C8: LD I, $72E ; Load 72E into I
  $4D0: LD I, $AF6 ; Load AF6 into I
  $4D4: LD I, $8C1 ; Load 8C1 into I
  $4E0: LD I, $9B7 ; Load 9B7 into I
  $4E6: LD I, $5E5 ; Load 5E5 into I
  $4E8: LD I, $4B6 ; Load 4B6 into I
  $508: LD I, $A99 ; Load A99 into I
  $524: LD I, $441 ; Load 441 into I
  $52A: LD I, $2D6 ; Load 2D6 into I
  $54A: LD I, $42A ; Load 42A into I
  $58A: LD I, $4B6 ; Load 4B6 into I
  $592: LD I, $4E9 ; Load 4E9 into I
  $5A8: LD I, $17E ; Load 17E into I
  $5C6: LD I, $48E ; Load 48E into I
  $5FC: LD I, $F7E ; Load F7E into I
  $602: LD I, $9E7 ; Load 9E7 into I
  $606: LD I, $009 ; Load 009 into I
  $614: LD I, $26A ; Load 26A into I
  $650: LD I, $89F ; Load 89F into I
  $666: LD I, $F61 ; Load F61 into I
  $66E: LD I, $4BF ; Load 4BF into I
  $680: LD I, $9DA ; Load 9DA into I
  $68E: LD I, $566 ; Load 566 into I
  $690: LD I, $984 ; Load 984 into I
  $694: LD I, $833 ; Load 833 into I
  $6C2: LD I, $FCE ; Load FCE into I
  $6CE: LD I, $669 ; Load 669 into I
  $700: LD I, $5C4 ; Load 5C4 into I
  $73A: LD I, $837 ; Load 837 into I
  $75C: LD I, $BA1 ; Load BA1 into I
  $78C: LD I, $616 ; Load 616 into I
  $794: LD I, $0CA ; Load 0CA into I
  $796: LD I, $572 ; Load 572 into I
  $7A6: LD I, $99B ; Load 99B into I
  $7AE: LD I, $C3C ; Load C3C into I
  $7CC: LD I, $D71 ; Load D71 into I
  $7F4: LD I, $DD9 ; Load DD9 into I
  $7FA: LD I, $6AE ; Load 6AE into I
  $86E: LD I, $B78 ; Load B78 into I
  $87A: LD I, $95D ; Load 95D into I
  $884: LD I, $69C ; Load 69C into I
  $892: LD I, $E9F ; Load E9F into I
  $8B8: LD I, $557 ; Load 557 into I
  $8F2: LD I, $20D ; Load 20D into I
  $8FA: LD I, $6F3 ; Load 6F3 into I
  $908: LD I, $FF9 ; Load FF9 into I
  $92C: LD I, $E05 ; Load E05 into I
  $966: LD I, $F46 ; Load F46 into I
  $99E: LD I, $C89 ; Load C89 into I
  $9D0: LD I, $368 ; Load 368 into I
  $9D8: LD I, $FBE ; Load FBE into I
  $A04: LD I, $083 ; Load 083 into I
  $A18: LD I, $3FE ; Load 3FE into I
  $A3E: LD I, $7F0 ; Load 7F0 into I
  $A4A: LD I, $088 ; Load 088 into I
  $A5A: LD I, $19C ; Load 19C into I
  $AA6: LD I, $782 ; Load 782 into I
  $ACE: LD I, $656 ; Load 656 into I
  $AF2: LD I, $F43 ; Load F43 into I
  $B4C: LD I, $22F ; Load 22F into I
  $B62: LD I, $325 ; Load 325 into I
  $B64: LD I, $129 ; Load 129 into I
  $B6E: LD I, $163 ; Load 163 into I
  $B9C: LD I, $252 ; Load 252 into I
  $B9E: LD I, $8E2 ; Load 8E2 into I
  $BAC: LD I, $3F5 ; Load 3F5 into I
  $BCE: LD I, $46F ; Load 46F into I
  $BD4: LD I, $C70 ; Load C70 into I
  $C02: LD I, $6B5 ; Load 6B5 into I
  $C16: LD I, $5C2 ; Load 5C2 into I
  $C3E: LD I, $781 ; Load 781 into I
  $C44: LD I, $A75 ; Load A75 into I
  $C84: LD I, $B93 ; Load B93 into I
  $C8A: LD I, $49F ; Load 49F into I
  $C9E: LD I, $7E4 ; Load 7E4 into I
  $CF4: LD I, $583 ; Load 583 into I
  $CF6: LD I, $041 ; Load 041 into I
  $CFA: LD I, $241 ; Load 241 into I
  $D06: LD I, $883 ; Load 883 into I
  $D34: LD I, $C56 ; Load C56 into I
  $D3E: LD I, $575 ; Load 575 into I
  $D60: LD I, $66A ; Load 66A into I
  $D6E: LD I, $853 ; Load 853 into I
  $D82: LD I, $B59 ; Load B59 into I
  $D9C: LD I, $187 ; Load 187 into I
  $DC4: LD I, $A81 ; Load A81 into I
  $DC6: LD I, $967 ; Load 967 into I
  $DE0: LD [I], V9 ; Store V0-V9 at I
  $E2C: LD I, $EC8 ; Load EC8 into I
  $E30: LD I, $174 ; Load 174 into I
  $E5C: LD I, $2E0 ; Load 2E0 into I
  $E8A: LD I, $20B ; Load 20B into I
  $EA4: LD I, $3C3 ; Load 3C3 into I
  $EF2: LD I, $AB8 ; Load AB8 into I
  $EFA: LD I, $88A ; Load 88A into I
  $F2A: LD I, $161 ; Load 161 into I
  $F30: LD I, $141 ; Load 141 into I
  $F36: LD I, $53D ; Load 53D into I
  $F42: LD I, $02D ; Load 02D into I
  $F76: LD I, $71C ; Load 71C into I
  $F7E: LD I, $058 ; Load 058 into I
  $F8E: LD I, $547 ; Load 547 into I
  $F98: LD I, $408 ; Load 408 into I
  $FA2: LD I, $782 ; Load 782 into I

CONTROL FLOW ANALYSIS:
Jumps: 222
Calls: 101
Branches: 233
Loops: 125
Loop Structures:
  $23E -> $0CA (backward jump)
  $348 -> $22F (backward jump)
  $356 -> $2D5 (backward jump)
  $358 -> $235 (backward jump)
  $424 -> $2D5 (backward jump)
  $462 -> $1AF (backward jump)
  $464 -> $117 (backward jump)
  $478 -> $259 (backward jump)
  $51E -> $186 (backward jump)
  $538 -> $0DD (backward jump)
  $58E -> $187 (backward jump)
  $590 -> $0EE (backward jump)
  $5AE -> $261 (backward jump)
  $63E -> $545 (backward jump)
  $66A -> $549 (backward jump)
  $674 -> $486 (backward jump)
  $6B6 -> $0BE (backward jump)
  $6B8 -> $330 (backward jump)
  $732 -> $095 (backward jump)
  $744 -> $5B9 (backward jump)
  $77C -> $276 (backward jump)
  $7B8 -> $21A (backward jump)
  $7BC -> $685 (backward jump)
  $822 -> $582 (backward jump)
  $844 -> $027 (backward jump)
  $84E -> $369 (backward jump)
  $874 -> $2DD (backward jump)
  $896 -> $3CF (backward jump)
  $8C0 -> $470 (backward jump)
  $8C2 -> $6AA (backward jump)
  $8DC -> $3AD (backward jump)
  $902 -> $411 (backward jump)
  $91E -> $25E (backward jump)
  $926 -> $0FF (backward jump)
  $92A -> $539 (backward jump)
  $93A -> $929 (backward jump)
  $946 -> $2CD (backward jump)
  $958 -> $2A4 (backward jump)
  $96E -> $37D (backward jump)
  $97C -> $375 (backward jump)
  $990 -> $8DC (backward jump)
  $9A2 -> $780 (backward jump)
  $9AE -> $110 (backward jump)
  $9D6 -> $920 (backward jump)
  $9E0 -> $111 (backward jump)
  $9E6 -> $39E (backward jump)
  $9EA -> $758 (backward jump)
  $9FE -> $6EA (backward jump)
  $A08 -> $84F (backward jump)
  $A16 -> $17D (backward jump)
  $A30 -> $1A0 (backward jump)
  $A40 -> $0E1 (backward jump)
  $A48 -> $309 (backward jump)
  $A60 -> $955 (backward jump)
  $A64 -> $6E8 (backward jump)
  $A6E -> $01F (backward jump)
  $A7C -> $460 (backward jump)
  $A8A -> $1E4 (backward jump)
  $A92 -> $66C (backward jump)
  $A94 -> $67F (backward jump)
  $ACC -> $53B (backward jump)
  $AEC -> $0EA (backward jump)
  $B0E -> $5DE (backward jump)
  $B34 -> $7ED (backward jump)
  $B50 -> $A38 (backward jump)
  $B52 -> $94C (backward jump)
  $B5E -> $035 (backward jump)
  $B7E -> $0D5 (backward jump)
  $BB4 -> $655 (backward jump)
  $BE6 -> $7FE (backward jump)
  $BF0 -> $68C (backward jump)
  $BF6 -> $27C (backward jump)
  $C0C -> $BD3 (backward jump)
  $C32 -> $4E7 (backward jump)
  $C3C -> $6E2 (backward jump)
  $C40 -> $005 (backward jump)
  $C68 -> $A1C (backward jump)
  $C7C -> $A6A (backward jump)
  $C82 -> $5F1 (backward jump)
  $C8E -> $2F7 (backward jump)
  $C96 -> $88D (backward jump)
  $CA8 -> $890 (backward jump)
  $CBC -> $474 (backward jump)
  $D18 -> $6FE (backward jump)
  $D28 -> $21E (backward jump)
  $D2C -> $600 (backward jump)
  $D48 -> $262 (backward jump)
  $D7C -> $0A7 (backward jump)
  $D9A -> $4A0 (backward jump)
  $DAC -> $B29 (backward jump)
  $DC8 -> $4B1 (backward jump)
  $DCA -> $0E9 (backward jump)
  $DCE -> $214 (backward jump)
  $DD4 -> $9EF (backward jump)
  $DDC -> $1B5 (backward jump)
  $DE8 -> $82A (backward jump)
  $DF0 -> $667 (backward jump)
  $DF2 -> $487 (backward jump)
  $DFA -> $1DF (backward jump)
  $E10 -> $CE6 (backward jump)
  $E3A -> $DE6 (backward jump)
  $E7A -> $06E (backward jump)
  $E7C -> $9F4 (backward jump)
  $E84 -> $67E (backward jump)
  $E88 -> $0F9 (backward jump)
  $EBA -> $717 (backward jump)
  $EBE -> $CAC (backward jump)
  $EC2 -> $296 (backward jump)
  $ECC -> $61C (backward jump)
  $EDA -> $079 (backward jump)
  $EE2 -> $6A1 (backward jump)
  $EF8 -> $581 (backward jump)
  $F1C -> $827 (backward jump)
  $F48 -> $D62 (backward jump)
  $F54 -> $EBD (backward jump)
  $F6A -> $211 (backward jump)
  $F86 -> $581 (backward jump)
  $F8A -> $C25 (backward jump)
  $F8C -> $578 (backward jump)
  $F94 -> $315 (backward jump)
  $FB8 -> $2ED (backward jump)
  $FDE -> $218 (backward jump)
  $FE6 -> $844 (backward jump)
  $FEE -> $E40 (backward jump)
  $FF0 -> $5AA (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $7CB0   ADD      VC, #B0         ; Add 176 to VC
$202    $4B35   SNE      VB, #35         ; Skip if VB != 53
$204    $9FB1   UNKNOWN  $9FB1           ; Unknown 9xxx instruction
$206    $2196   CALL     $196            ; Call subroutine at 196
$208    $A407   LD       I, $407         ; Load 407 into I
$20A    $08FE   SYS      $8FE            ; System call to 8FE
$20C    $A8B7   LD       I, $8B7         ; Load 8B7 into I
$20E    $186A   JP       $86A            ; Jump to 86A
$210    $AECC   LD       I, $ECC         ; Load ECC into I
$212    $590E   UNKNOWN  $590E           ; Unknown 5xxx instruction
$214    $779A   ADD      V7, #9A         ; Add 154 to V7
$216    $0835   SYS      $835            ; System call to 835
$218    $F40C   UNKNOWN  F40C            ; Unknown Fxxx instruction
$21A    $3357   SE       V3, #57         ; Skip if V3 == 87
$21C    $24D1   CALL     $4D1            ; Call subroutine at 4D1
$21E    $785A   ADD      V8, #5A         ; Add 90 to V8
$220    $1760   JP       $760            ; Jump to 760
$222    $7A59   ADD      VA, #59         ; Add 89 to VA
$224    $0711   SYS      $711            ; System call to 711
$226    $54C4   UNKNOWN  $54C4           ; Unknown 5xxx instruction
$228    $49D4   SNE      V9, #D4         ; Skip if V9 != 212
$22A    $0047   SYS      $047            ; System call to 047
$22C    $D4D6   DRW      V4, VD, #6      ; Draw 6-byte sprite at V4, VD
$22E    $4017   SNE      V0, #17         ; Skip if V0 != 23
$230    $E181   UNKNOWN  $E181           ; Unknown Exxx instruction
$232    $3F75   SE       VF, #75         ; Skip if VF == 117
$234    $67D8   LD       V7, #D8         ; Load 216 into V7
$236    $445E   SNE      V4, #5E         ; Skip if V4 != 94
$238    $3099   SE       V0, #99         ; Skip if V0 == 153
$23A    $81F8   UNKNOWN  81F8            ; Unknown 8xxx instruction
$23C    $4FFF   SNE      VF, #FF         ; Skip if VF != 255
$23E    $B0CA   JP       V0, $0CA        ; Jump to V0 + 0CA
$240    $9B09   UNKNOWN  $9B09           ; Unknown 9xxx instruction
$242    $0101   SYS      $101            ; System call to 101
$244    $0101   SYS      $101            ; System call to 101
$246    $0101   SYS      $101            ; System call to 101
$248    $0101   SYS      $101            ; System call to 101
$24A    $0101   SYS      $101            ; System call to 101
$24C    $0101   SYS      $101            ; System call to 101
$24E    $0101   SYS      $101            ; System call to 101
$250    $0101   SYS      $101            ; System call to 101
$252    $0101   SYS      $101            ; System call to 101
$254    $0101   SYS      $101            ; System call to 101
$256    $0101   SYS      $101            ; System call to 101
$258    $0101   SYS      $101            ; System call to 101
$25A    $0101   SYS      $101            ; System call to 101
$25C    $0101   SYS      $101            ; System call to 101
$25E    $0101   SYS      $101            ; System call to 101
$260    $0101   SYS      $101            ; System call to 101
$262    $0101   SYS      $101            ; System call to 101
$264    $0101   SYS      $101            ; System call to 101
$266    $0101   SYS      $101            ; System call to 101
$268    $0101   SYS      $101            ; System call to 101
$26A    $0101   SYS      $101            ; System call to 101
$26C    $0101   SYS      $101            ; System call to 101
$26E    $0101   SYS      $101            ; System call to 101
$270    $0101   SYS      $101            ; System call to 101
$272    $0101   SYS      $101            ; System call to 101
$274    $0101   SYS      $101            ; System call to 101
$276    $0101   SYS      $101            ; System call to 101
$278    $0101   SYS      $101            ; System call to 101
$27A    $0101   SYS      $101            ; System call to 101
$27C    $0101   SYS      $101            ; System call to 101
$27E    $0101   SYS      $101            ; System call to 101
$280    $0101   SYS      $101            ; System call to 101
$282    $0101   SYS      $101            ; System call to 101
$284    $0101   SYS      $101            ; System call to 101
$286    $0101   SYS      $101            ; System call to 101
$288    $0101   SYS      $101            ; System call to 101
$28A    $0101   SYS      $101            ; System call to 101
$28C    $0101   SYS      $101            ; System call to 101
$28E    $0101   SYS      $101            ; System call to 101
$290    $0101   SYS      $101            ; System call to 101
$292    $0101   SYS      $101            ; System call to 101
$294    $0101   SYS      $101            ; System call to 101
$296    $0101   SYS      $101            ; System call to 101
$298    $0101   SYS      $101            ; System call to 101
$29A    $0101   SYS      $101            ; System call to 101
$29C    $0101   SYS      $101            ; System call to 101
$29E    $0101   SYS      $101            ; System call to 101
$2A0    $0101   SYS      $101            ; System call to 101
$2A2    $0101   SYS      $101            ; System call to 101
$2A4    $0101   SYS      $101            ; System call to 101
$2A6    $0101   SYS      $101            ; System call to 101
$2A8    $0101   SYS      $101            ; System call to 101
$2AA    $0101   SYS      $101            ; System call to 101
$2AC    $0101   SYS      $101            ; System call to 101
$2AE    $0101   SYS      $101            ; System call to 101
$2B0    $0101   SYS      $101            ; System call to 101
$2B2    $0101   SYS      $101            ; System call to 101
$2B4    $0101   SYS      $101            ; System call to 101
$2B6    $0101   SYS      $101            ; System call to 101
$2B8    $0101   SYS      $101            ; System call to 101
$2BA    $0101   SYS      $101            ; System call to 101
$2BC    $0101   SYS      $101            ; System call to 101
$2BE    $0101   SYS      $101            ; System call to 101
$2C0    $0101   SYS      $101            ; System call to 101
$2C2    $0101   SYS      $101            ; System call to 101
$2C4    $0101   SYS      $101            ; System call to 101
$2C6    $0101   SYS      $101            ; System call to 101
$2C8    $0101   SYS      $101            ; System call to 101
$2CA    $0101   SYS      $101            ; System call to 101
$2CC    $0101   SYS      $101            ; System call to 101
$2CE    $0101   SYS      $101            ; System call to 101
$2D0    $0101   SYS      $101            ; System call to 101
$2D2    $0101   SYS      $101            ; System call to 101
$2D4    $0101   SYS      $101            ; System call to 101
$2D6    $0101   SYS      $101            ; System call to 101
$2D8    $0101   SYS      $101            ; System call to 101
$2DA    $0101   SYS      $101            ; System call to 101
$2DC    $0101   SYS      $101            ; System call to 101
$2DE    $0101   SYS      $101            ; System call to 101
$2E0    $0101   SYS      $101            ; System call to 101
$2E2    $0101   SYS      $101            ; System call to 101
$2E4    $0101   SYS      $101            ; System call to 101
$2E6    $0101   SYS      $101            ; System call to 101
$2E8    $0101   SYS      $101            ; System call to 101
$2EA    $0101   SYS      $101            ; System call to 101
$2EC    $0101   SYS      $101            ; System call to 101
$2EE    $0101   SYS      $101            ; System call to 101
$2F0    $0101   SYS      $101            ; System call to 101
$2F2    $0101   SYS      $101            ; System call to 101
$2F4    $0101   SYS      $101            ; System call to 101
$2F6    $0101   SYS      $101            ; System call to 101
$2F8    $0101   SYS      $101            ; System call to 101
$2FA    $0101   SYS      $101            ; System call to 101
$2FC    $0101   SYS      $101            ; System call to 101
$2FE    $0101   SYS      $101            ; System call to 101
$300    $0101   SYS      $101            ; System call to 101
$302    $0101   SYS      $101            ; System call to 101
$304    $0101   SYS      $101            ; System call to 101
$306    $0108   SYS      $108            ; System call to 108
$308    $46D6   SNE      V6, #D6         ; Skip if V6 != 214
$30A    $9A5B   UNKNOWN  $9A5B           ; Unknown 9xxx instruction
$30C    $2783   CALL     $783            ; Call subroutine at 783
$30E    $E246   UNKNOWN  $E246           ; Unknown Exxx instruction
$310    $6C2D   LD       VC, #2D         ; Load 45 into VC
$312    $9600   SNE      V6, V0          ; Skip if V6 != V0
$314    $0E3D   SYS      $E3D            ; System call to E3D
$316    $D189   DRW      V1, V8, #9      ; Draw 9-byte sprite at V1, V8
$318    $25E4   CALL     $5E4            ; Call subroutine at 5E4
$31A    $EA6D   UNKNOWN  $EA6D           ; Unknown Exxx instruction
$31C    $8C01   OR       VC, V0          ; VC |= V0
$31E    $B671   JP       V0, $671        ; Jump to V0 + 671
$320    $0069   SYS      $069            ; System call to 069
$322    $736B   ADD      V3, #6B         ; Add 107 to V3
$324    $0370   SYS      $370            ; System call to 370
$326    $52EB   UNKNOWN  $52EB           ; Unknown 5xxx instruction
$328    $757D   ADD      V5, #7D         ; Add 125 to V5
$32A    $BF17   JP       V0, $F17        ; Jump to V0 + F17
$32C    $FBB6   UNKNOWN  FBB6            ; Unknown Fxxx instruction
$32E    $6E31   LD       VE, #31         ; Load 49 into VE
$330    $7945   ADD      V9, #45         ; Add 69 to V9
$332    $5861   UNKNOWN  $5861           ; Unknown 5xxx instruction
$334    $C97F   RND      V9, #7F         ; V9 = random & 7F
$336    $E9CF   UNKNOWN  $E9CF           ; Unknown Exxx instruction
$338    $3880   SE       V8, #80         ; Skip if V8 == 128
$33A    $B69C   JP       V0, $69C        ; Jump to V0 + 69C
$33C    $BB24   JP       V0, $B24        ; Jump to V0 + B24
$33E    $E704   UNKNOWN  $E704           ; Unknown Exxx instruction
$340    $1E6D   JP       $E6D            ; Jump to E6D
$342    $EF18   UNKNOWN  $EF18           ; Unknown Exxx instruction
$344    $DA56   DRW      VA, V5, #6      ; Draw 6-byte sprite at VA, V5
$346    $FF9F   UNKNOWN  FF9F            ; Unknown Fxxx instruction
$348    $122F   JP       $22F            ; Jump to 22F
$34A    $869B   UNKNOWN  869B            ; Unknown 8xxx instruction
$34C    $6665   LD       V6, #65         ; Load 101 into V6
$34E    $5630   SE       V6, V3          ; Skip if V6 == V3
$350    $AB0F   LD       I, $B0F         ; Load B0F into I
$352    $0D0B   SYS      $D0B            ; System call to D0B
$354    $4F4B   SNE      VF, #4B         ; Skip if VF != 75
$356    $12D5   JP       $2D5            ; Jump to 2D5
$358    $1235   JP       $235            ; Jump to 235
$35A    $8F24   ADD      VF, V2          ; VF += V2, VF = carry
$35C    $2DDC   CALL     $DDC            ; Call subroutine at DDC
$35E    $61D7   LD       V1, #D7         ; Load 215 into V1
$360    $D9AA   DRW      V9, VA, #A      ; Draw 10-byte sprite at V9, VA
$362    $5867   UNKNOWN  $5867           ; Unknown 5xxx instruction
$364    $F55E   UNKNOWN  F55E            ; Unknown Fxxx instruction
$366    $C68F   RND      V6, #8F         ; V6 = random & 8F
$368    $7B7F   ADD      VB, #7F         ; Add 127 to VB
$36A    $DAE2   DRW      VA, VE, #2      ; Draw 2-byte sprite at VA, VE
$36C    $DD39   DRW      VD, V3, #9      ; Draw 9-byte sprite at VD, V3
$36E    $B641   JP       V0, $641        ; Jump to V0 + 641
$370    $CC81   RND      VC, #81         ; VC = random & 81
$372    $5A97   UNKNOWN  $5A97           ; Unknown 5xxx instruction
$374    $4C27   SNE      VC, #27         ; Skip if VC != 39
$376    $E6D1   UNKNOWN  $E6D1           ; Unknown Exxx instruction
$378    $09E7   SYS      $9E7            ; System call to 9E7
$37A    $7EBB   ADD      VE, #BB         ; Add 187 to VE
$37C    $C256   RND      V2, #56         ; V2 = random & 56
$37E    $51A7   UNKNOWN  $51A7           ; Unknown 5xxx instruction
$380    $F59E   UNKNOWN  F59E            ; Unknown Fxxx instruction
$382    $D9A1   DRW      V9, VA, #1      ; Draw 1-byte sprite at V9, VA
$384    $4B60   SNE      VB, #60         ; Skip if VB != 96
$386    $4743   SNE      V7, #43         ; Skip if V7 != 67
$388    $1E5E   JP       $E5E            ; Jump to E5E
$38A    $0D58   SYS      $D58            ; System call to D58
$38C    $64FD   LD       V4, #FD         ; Load 253 into V4
$38E    $DA0C   DRW      VA, V0, #C      ; Draw 12-byte sprite at VA, V0
$390    $6669   LD       V6, #69         ; Load 105 into V6
$392    $E835   UNKNOWN  $E835           ; Unknown Exxx instruction
$394    $E666   UNKNOWN  $E666           ; Unknown Exxx instruction
$396    $9821   UNKNOWN  $9821           ; Unknown 9xxx instruction
$398    $5758   UNKNOWN  $5758           ; Unknown 5xxx instruction
$39A    $6B1C   LD       VB, #1C         ; Load 28 into VB
$39C    $A30B   LD       I, $30B         ; Load 30B into I
$39E    $803A   UNKNOWN  803A            ; Unknown 8xxx instruction
$3A0    $1AC8   JP       $AC8            ; Jump to AC8
$3A2    $EC52   UNKNOWN  $EC52           ; Unknown Exxx instruction
$3A4    $7A2C   ADD      VA, #2C         ; Add 44 to VA
$3A6    $73D9   ADD      V3, #D9         ; Add 217 to V3
$3A8    $32C2   SE       V2, #C2         ; Skip if V2 == 194
$3AA    $1BBD   JP       $BBD            ; Jump to BBD
$3AC    $39C1   SE       V9, #C1         ; Skip if V9 == 193
$3AE    $AF4C   LD       I, $F4C         ; Load F4C into I
$3B0    $74E7   ADD      V4, #E7         ; Add 231 to V4
$3B2    $7E26   ADD      VE, #26         ; Add 38 to VE
$3B4    $030D   SYS      $30D            ; System call to 30D
$3B6    $FF7D   UNKNOWN  FF7D            ; Unknown Fxxx instruction
$3B8    $F304   UNKNOWN  F304            ; Unknown Fxxx instruction
$3BA    $30BD   SE       V0, #BD         ; Skip if V0 == 189
$3BC    $D2B4   DRW      V2, VB, #4      ; Draw 4-byte sprite at V2, VB
$3BE    $B822   JP       V0, $822        ; Jump to V0 + 822
$3C0    $24BB   CALL     $4BB            ; Call subroutine at 4BB
$3C2    $77CC   ADD      V7, #CC         ; Add 204 to V7
$3C4    $DB7D   DRW      VB, V7, #D      ; Draw 13-byte sprite at VB, V7
$3C6    $62AB   LD       V2, #AB         ; Load 171 into V2
$3C8    $19C8   JP       $9C8            ; Jump to 9C8
$3CA    $0522   SYS      $522            ; System call to 522
$3CC    $241F   CALL     $41F            ; Call subroutine at 41F
$3CE    $5EA1   UNKNOWN  $5EA1           ; Unknown 5xxx instruction
$3D0    $6DC7   LD       VD, #C7         ; Load 199 into VD
$3D2    $C14A   RND      V1, #4A         ; V1 = random & 4A
$3D4    $9E45   UNKNOWN  $9E45           ; Unknown 9xxx instruction
$3D6    $D925   DRW      V9, V2, #5      ; Draw 5-byte sprite at V9, V2
$3D8    $D914   DRW      V9, V1, #4      ; Draw 4-byte sprite at V9, V1
$3DA    $640B   LD       V4, #0B         ; Load 11 into V4
$3DC    $91E9   UNKNOWN  $91E9           ; Unknown 9xxx instruction
$3DE    $7C0E   ADD      VC, #0E         ; Add 14 to VC
$3E0    $1F2A   JP       $F2A            ; Jump to F2A
$3E2    $F837   UNKNOWN  F837            ; Unknown Fxxx instruction
$3E4    $DC5C   DRW      VC, V5, #C      ; Draw 12-byte sprite at VC, V5
$3E6    $6F4A   LD       VF, #4A         ; Load 74 into VF
$3E8    $88C4   ADD      V8, VC          ; V8 += VC, VF = carry
$3EA    $FD24   UNKNOWN  FD24            ; Unknown Fxxx instruction
$3EC    $9760   SNE      V7, V6          ; Skip if V7 != V6
$3EE    $15D1   JP       $5D1            ; Jump to 5D1
$3F0    $3AC0   SE       VA, #C0         ; Skip if VA == 192
$3F2    $94F0   SNE      V4, VF          ; Skip if V4 != VF
$3F4    $A078   LD       I, $078         ; Load 078 into I
$3F6    $AAAA   LD       I, $AAA         ; Load AAA into I
$3F8    $C60D   RND      V6, #0D         ; V6 = random & 0D
$3FA    $E446   UNKNOWN  $E446           ; Unknown Exxx instruction
$3FC    $F63F   UNKNOWN  F63F            ; Unknown Fxxx instruction
$3FE    $8F41   OR       VF, V4          ; VF |= V4
$400    $FD01   UNKNOWN  FD01            ; Unknown Fxxx instruction
$402    $AE26   LD       I, $E26         ; Load E26 into I
$404    $89F0   LD       V9, VF          ; V9 = VF
$406    $BB7D   JP       V0, $B7D        ; Jump to V0 + B7D
$408    $7975   ADD      V9, #75         ; Add 117 to V9
$40A    $AAB9   LD       I, $AB9         ; Load AB9 into I
$40C    $BFF0   JP       V0, $FF0        ; Jump to V0 + FF0
$40E    $E69D   UNKNOWN  $E69D           ; Unknown Exxx instruction
$410    $D646   DRW      V6, V4, #6      ; Draw 6-byte sprite at V6, V4
$412    $3D00   SE       VD, #00         ; Skip if VD == 0
$414    $D239   DRW      V2, V3, #9      ; Draw 9-byte sprite at V2, V3
$416    $D42B   DRW      V4, V2, #B      ; Draw 11-byte sprite at V4, V2
$418    $52AA   UNKNOWN  $52AA           ; Unknown 5xxx instruction
$41A    $630E   LD       V3, #0E         ; Load 14 into V3
$41C    $3AE1   SE       VA, #E1         ; Skip if VA == 225
$41E    $A292   LD       I, $292         ; Load 292 into I
$420    $236D   CALL     $36D            ; Call subroutine at 36D
$422    $1EC4   JP       $EC4            ; Jump to EC4
$424    $B2D5   JP       V0, $2D5        ; Jump to V0 + 2D5
$426    $2443   CALL     $443            ; Call subroutine at 443
$428    $51CE   UNKNOWN  $51CE           ; Unknown 5xxx instruction
$42A    $43D2   SNE      V3, #D2         ; Skip if V3 != 210
$42C    $B48A   JP       V0, $48A        ; Jump to V0 + 48A
$42E    $A28C   LD       I, $28C         ; Load 28C into I
$430    $DA53   DRW      VA, V5, #3      ; Draw 3-byte sprite at VA, V5
$432    $0F30   SYS      $F30            ; System call to F30
$434    $BB27   JP       V0, $B27        ; Jump to V0 + B27
$436    $5FA6   UNKNOWN  $5FA6           ; Unknown 5xxx instruction
$438    $6A6F   LD       VA, #6F         ; Load 111 into VA
$43A    $66B5   LD       V6, #B5         ; Load 181 into V6
$43C    $4DA3   SNE      VD, #A3         ; Skip if VD != 163
$43E    $BEB7   JP       V0, $EB7        ; Jump to V0 + EB7
$440    $CA19   RND      VA, #19         ; VA = random & 19
$442    $7894   ADD      V8, #94         ; Add 148 to V8
$444    $8D4E   SHL      VD              ; VD <<= 1, VF = MSB
$446    $7D27   ADD      VD, #27         ; Add 39 to VD
$448    $6C0E   LD       VC, #0E         ; Load 14 into VC
$44A    $3FC3   SE       VF, #C3         ; Skip if VF == 195
$44C    $290B   CALL     $90B            ; Call subroutine at 90B
$44E    $87B4   ADD      V7, VB          ; V7 += VB, VF = carry
$450    $D9D3   DRW      V9, VD, #3      ; Draw 3-byte sprite at V9, VD
$452    $24F7   CALL     $4F7            ; Call subroutine at 4F7
$454    $5608   UNKNOWN  $5608           ; Unknown 5xxx instruction
$456    $7C53   ADD      VC, #53         ; Add 83 to VC
$458    $B556   JP       V0, $556        ; Jump to V0 + 556
$45A    $21C9   CALL     $1C9            ; Call subroutine at 1C9
$45C    $2F61   CALL     $F61            ; Call subroutine at F61
$45E    $ECD8   UNKNOWN  $ECD8           ; Unknown Exxx instruction
$460    $94DD   UNKNOWN  $94DD           ; Unknown 9xxx instruction
$462    $11AF   JP       $1AF            ; Jump to 1AF
$464    $1117   JP       $117            ; Jump to 117
$466    $ACAD   LD       I, $CAD         ; Load CAD into I
$468    $B56B   JP       V0, $56B        ; Jump to V0 + 56B
$46A    $180A   JP       $80A            ; Jump to 80A
$46C    $6FB5   LD       VF, #B5         ; Load 181 into VF
$46E    $CF24   RND      VF, #24         ; VF = random & 24
$470    $EAEF   UNKNOWN  $EAEF           ; Unknown Exxx instruction
$472    $548F   UNKNOWN  $548F           ; Unknown 5xxx instruction
$474    $B757   JP       V0, $757        ; Jump to V0 + 757
$476    $B891   JP       V0, $891        ; Jump to V0 + 891
$478    $1259   JP       $259            ; Jump to 259
$47A    $CD6D   RND      VD, #6D         ; VD = random & 6D
$47C    $EB36   UNKNOWN  $EB36           ; Unknown Exxx instruction
$47E    $BC3B   JP       V0, $C3B        ; Jump to V0 + C3B
$480    $1869   JP       $869            ; Jump to 869
$482    $0ED3   SYS      $ED3            ; System call to ED3
$484    $261B   CALL     $61B            ; Call subroutine at 61B
$486    $D008   DRW      V0, V0, #8      ; Draw 8-byte sprite at V0, V0
$488    $1E4E   JP       $E4E            ; Jump to E4E
$48A    $FCD1   UNKNOWN  FCD1            ; Unknown Fxxx instruction
$48C    $0693   SYS      $693            ; System call to 693
$48E    $0024   SYS      $024            ; System call to 024
$490    $C6A5   RND      V6, #A5         ; V6 = random & A5
$492    $0295   SYS      $295            ; System call to 295
$494    $061A   SYS      $61A            ; System call to 61A
$496    $B9DA   JP       V0, $9DA        ; Jump to V0 + 9DA
$498    $51CE   UNKNOWN  $51CE           ; Unknown 5xxx instruction
$49A    $BBAC   JP       V0, $BAC        ; Jump to V0 + BAC
$49C    $FB3C   UNKNOWN  FB3C            ; Unknown Fxxx instruction
$49E    $5E9C   UNKNOWN  $5E9C           ; Unknown 5xxx instruction
$4A0    $A7D8   LD       I, $7D8         ; Load 7D8 into I
$4A2    $0F8A   SYS      $F8A            ; System call to F8A
$4A4    $6320   LD       V3, #20         ; Load 32 into V3
$4A6    $7878   ADD      V8, #78         ; Add 120 to V8
$4A8    $1C1A   JP       $C1A            ; Jump to C1A
$4AA    $1A4C   JP       $A4C            ; Jump to A4C
$4AC    $88B3   XOR      V8, VB          ; V8 ^= VB
$4AE    $27B3   CALL     $7B3            ; Call subroutine at 7B3
$4B0    $C898   RND      V8, #98         ; V8 = random & 98
$4B2    $7495   ADD      V4, #95         ; Add 149 to V4
$4B4    $ACDC   LD       I, $CDC         ; Load CDC into I
$4B6    $2293   CALL     $293            ; Call subroutine at 293
$4B8    $EB97   UNKNOWN  $EB97           ; Unknown Exxx instruction
$4BA    $F0F2   UNKNOWN  F0F2            ; Unknown Fxxx instruction
$4BC    $6BF4   LD       VB, #F4         ; Load 244 into VB
$4BE    $BAA7   JP       V0, $AA7        ; Jump to V0 + AA7
$4C0    $574B   UNKNOWN  $574B           ; Unknown 5xxx instruction
$4C2    $D1E4   DRW      V1, VE, #4      ; Draw 4-byte sprite at V1, VE
$4C4    $F970   UNKNOWN  F970            ; Unknown Fxxx instruction
$4C6    $4324   SNE      V3, #24         ; Skip if V3 != 36
$4C8    $A72E   LD       I, $72E         ; Load 72E into I
$4CA    $F6A2   UNKNOWN  F6A2            ; Unknown Fxxx instruction
$4CC    $1A5D   JP       $A5D            ; Jump to A5D
$4CE    $3A26   SE       VA, #26         ; Skip if VA == 38
$4D0    $AAF6   LD       I, $AF6         ; Load AF6 into I
$4D2    $6627   LD       V6, #27         ; Load 39 into V6
$4D4    $A8C1   LD       I, $8C1         ; Load 8C1 into I
$4D6    $77B4   ADD      V7, #B4         ; Add 180 to V7
$4D8    $49C7   SNE      V9, #C7         ; Skip if V9 != 199
$4DA    $37ED   SE       V7, #ED         ; Skip if V7 == 237
$4DC    $B833   JP       V0, $833        ; Jump to V0 + 833
$4DE    $BEDF   JP       V0, $EDF        ; Jump to V0 + EDF
$4E0    $A9B7   LD       I, $9B7         ; Load 9B7 into I
$4E2    $3E22   SE       VE, #22         ; Skip if VE == 34
$4E4    $8D3E   SHL      VD              ; VD <<= 1, VF = MSB
$4E6    $A5E5   LD       I, $5E5         ; Load 5E5 into I
$4E8    $A4B6   LD       I, $4B6         ; Load 4B6 into I
$4EA    $017F   SYS      $17F            ; System call to 17F
$4EC    $D34C   DRW      V3, V4, #C      ; Draw 12-byte sprite at V3, V4
$4EE    $E60E   UNKNOWN  $E60E           ; Unknown Exxx instruction
$4F0    $9BC9   UNKNOWN  $9BC9           ; Unknown 9xxx instruction
$4F2    $61A1   LD       V1, #A1         ; Load 161 into V1
$4F4    $FEB2   UNKNOWN  FEB2            ; Unknown Fxxx instruction
$4F6    $E42F   UNKNOWN  $E42F           ; Unknown Exxx instruction
$4F8    $987F   UNKNOWN  $987F           ; Unknown 9xxx instruction
$4FA    $6BCC   LD       VB, #CC         ; Load 204 into VB
$4FC    $E35D   UNKNOWN  $E35D           ; Unknown Exxx instruction
$4FE    $B625   JP       V0, $625        ; Jump to V0 + 625
$500    $0FB2   SYS      $FB2            ; System call to FB2
$502    $437F   SNE      V3, #7F         ; Skip if V3 != 127
$504    $5F6F   UNKNOWN  $5F6F           ; Unknown 5xxx instruction
$506    $6872   LD       V8, #72         ; Load 114 into V8
$508    $AA99   LD       I, $A99         ; Load A99 into I
$50A    $20B3   CALL     $0B3            ; Call subroutine at 0B3
$50C    $D08E   DRW      V0, V8, #E      ; Draw 14-byte sprite at V0, V8
$50E    $21B3   CALL     $1B3            ; Call subroutine at 1B3
$510    $B8BA   JP       V0, $8BA        ; Jump to V0 + 8BA
$512    $18CF   JP       $8CF            ; Jump to 8CF
$514    $7F60   ADD      VF, #60         ; Add 96 to VF
$516    $408D   SNE      V0, #8D         ; Skip if V0 != 141
$518    $C132   RND      V1, #32         ; V1 = random & 32
$51A    $60A9   LD       V0, #A9         ; Load 169 into V0
$51C    $258D   CALL     $58D            ; Call subroutine at 58D
$51E    $B186   JP       V0, $186        ; Jump to V0 + 186
$520    $9738   UNKNOWN  $9738           ; Unknown 9xxx instruction
$522    $8482   AND      V4, V8          ; V4 &= V8
$524    $A441   LD       I, $441         ; Load 441 into I
$526    $38A1   SE       V8, #A1         ; Skip if V8 == 161
$528    $49A2   SNE      V9, #A2         ; Skip if V9 != 162
$52A    $A2D6   LD       I, $2D6         ; Load 2D6 into I
$52C    $068B   SYS      $68B            ; System call to 68B
$52E    $0C4E   SYS      $C4E            ; System call to C4E
$530    $168D   JP       $68D            ; Jump to 68D
$532    $E6CC   UNKNOWN  $E6CC           ; Unknown Exxx instruction
$534    $5051   UNKNOWN  $5051           ; Unknown 5xxx instruction
$536    $2CDA   CALL     $CDA            ; Call subroutine at CDA
$538    $B0DD   JP       V0, $0DD        ; Jump to V0 + 0DD
$53A    $1F7E   JP       $F7E            ; Jump to F7E
$53C    $4BC4   SNE      VB, #C4         ; Skip if VB != 196
$53E    $F053   UNKNOWN  F053            ; Unknown Fxxx instruction
$540    $CF27   RND      VF, #27         ; VF = random & 27
$542    $6D0A   LD       VD, #0A         ; Load 10 into VD
$544    $32FE   SE       V2, #FE         ; Skip if V2 == 254
$546    $CFE9   RND      VF, #E9         ; VF = random & E9
$548    $9080   SNE      V0, V8          ; Skip if V0 != V8
$54A    $A42A   LD       I, $42A         ; Load 42A into I
$54C    $53C6   UNKNOWN  $53C6           ; Unknown 5xxx instruction
$54E    $CBA6   RND      VB, #A6         ; VB = random & A6
$550    $C794   RND      V7, #94         ; V7 = random & 94
$552    $C190   RND      V1, #90         ; V1 = random & 90
$554    $CCDF   RND      VC, #DF         ; VC = random & DF
$556    $54D1   UNKNOWN  $54D1           ; Unknown 5xxx instruction
$558    $2D55   CALL     $D55            ; Call subroutine at D55
$55A    $7BCB   ADD      VB, #CB         ; Add 203 to VB
$55C    $7205   ADD      V2, #05         ; Add 5 to V2
$55E    $86BC   UNKNOWN  86BC            ; Unknown 8xxx instruction
$560    $788C   ADD      V8, #8C         ; Add 140 to V8
$562    $5E53   UNKNOWN  $5E53           ; Unknown 5xxx instruction
$564    $5AB4   UNKNOWN  $5AB4           ; Unknown 5xxx instruction
$566    $51EF   UNKNOWN  $51EF           ; Unknown 5xxx instruction
$568    $F536   UNKNOWN  F536            ; Unknown Fxxx instruction
$56A    $F7E1   UNKNOWN  F7E1            ; Unknown Fxxx instruction
$56C    $8767   SUBN     V7, V6          ; V7 = V6 - V7, VF = !borrow
$56E    $E04D   UNKNOWN  $E04D           ; Unknown Exxx instruction
$570    $E10D   UNKNOWN  $E10D           ; Unknown Exxx instruction
$572    $9339   UNKNOWN  $9339           ; Unknown 9xxx instruction
$574    $64B2   LD       V4, #B2         ; Load 178 into V4
$576    $DCF6   DRW      VC, VF, #6      ; Draw 6-byte sprite at VC, VF
$578    $5156   UNKNOWN  $5156           ; Unknown 5xxx instruction
$57A    $86B5   SUB      V6, VB          ; V6 -= VB, VF = !borrow
$57C    $0C2D   SYS      $C2D            ; System call to C2D
$57E    $97BD   UNKNOWN  $97BD           ; Unknown 9xxx instruction
$580    $EB9E   SKP      VB              ; Skip if key VB pressed
$582    $60EB   LD       V0, #EB         ; Load 235 into V0
$584    $5DB8   UNKNOWN  $5DB8           ; Unknown 5xxx instruction
$586    $6F57   LD       VF, #57         ; Load 87 into VF
$588    $1B51   JP       $B51            ; Jump to B51
$58A    $A4B6   LD       I, $4B6         ; Load 4B6 into I
$58C    $67A2   LD       V7, #A2         ; Load 162 into V7
$58E    $1187   JP       $187            ; Jump to 187
$590    $10EE   JP       $0EE            ; Jump to 0EE
$592    $A4E9   LD       I, $4E9         ; Load 4E9 into I
$594    $475B   SNE      V7, #5B         ; Skip if V7 != 91
$596    $06EF   SYS      $6EF            ; System call to 6EF
$598    $F477   UNKNOWN  F477            ; Unknown Fxxx instruction
$59A    $09ED   SYS      $9ED            ; System call to 9ED
$59C    $7422   ADD      V4, #22         ; Add 34 to V4
$59E    $8E1C   UNKNOWN  8E1C            ; Unknown 8xxx instruction
$5A0    $26F8   CALL     $6F8            ; Call subroutine at 6F8
$5A2    $4136   SNE      V1, #36         ; Skip if V1 != 54
$5A4    $D2D7   DRW      V2, VD, #7      ; Draw 7-byte sprite at V2, VD
$5A6    $54D8   UNKNOWN  $54D8           ; Unknown 5xxx instruction
$5A8    $A17E   LD       I, $17E         ; Load 17E into I
$5AA    $B639   JP       V0, $639        ; Jump to V0 + 639
$5AC    $8E5B   UNKNOWN  8E5B            ; Unknown 8xxx instruction
$5AE    $B261   JP       V0, $261        ; Jump to V0 + 261
$5B0    $916B   UNKNOWN  $916B           ; Unknown 9xxx instruction
$5B2    $F03F   UNKNOWN  F03F            ; Unknown Fxxx instruction
$5B4    $952B   UNKNOWN  $952B           ; Unknown 9xxx instruction
$5B6    $F195   UNKNOWN  F195            ; Unknown Fxxx instruction
$5B8    $CACD   RND      VA, #CD         ; VA = random & CD
$5BA    $F672   UNKNOWN  F672            ; Unknown Fxxx instruction
$5BC    $8605   SUB      V6, V0          ; V6 -= V0, VF = !borrow
$5BE    $1E27   JP       $E27            ; Jump to E27
$5C0    $34E9   SE       V4, #E9         ; Skip if V4 == 233
$5C2    $6F43   LD       VF, #43         ; Load 67 into VF
$5C4    $90D0   SNE      V0, VD          ; Skip if V0 != VD
$5C6    $A48E   LD       I, $48E         ; Load 48E into I
$5C8    $4307   SNE      V3, #07         ; Skip if V3 != 7
$5CA    $ED8E   UNKNOWN  $ED8E           ; Unknown Exxx instruction
$5CC    $E7BF   UNKNOWN  $E7BF           ; Unknown Exxx instruction
$5CE    $8448   UNKNOWN  8448            ; Unknown 8xxx instruction
$5D0    $DB9C   DRW      VB, V9, #C      ; Draw 12-byte sprite at VB, V9
$5D2    $2B56   CALL     $B56            ; Call subroutine at B56
$5D4    $FECB   UNKNOWN  FECB            ; Unknown Fxxx instruction
$5D6    $5BFA   UNKNOWN  $5BFA           ; Unknown 5xxx instruction
$5D8    $2A07   CALL     $A07            ; Call subroutine at A07
$5DA    $4947   SNE      V9, #47         ; Skip if V9 != 71
$5DC    $C569   RND      V5, #69         ; V5 = random & 69
$5DE    $1CBE   JP       $CBE            ; Jump to CBE
$5E0    $682D   LD       V8, #2D         ; Load 45 into V8
$5E2    $9270   SNE      V2, V7          ; Skip if V2 != V7
$5E4    $213D   CALL     $13D            ; Call subroutine at 13D
$5E6    $2C31   CALL     $C31            ; Call subroutine at C31
$5E8    $3C91   SE       VC, #91         ; Skip if VC == 145
$5EA    $8ECE   SHL      VE              ; VE <<= 1, VF = MSB
$5EC    $B727   JP       V0, $727        ; Jump to V0 + 727
$5EE    $F852   UNKNOWN  F852            ; Unknown Fxxx instruction
$5F0    $0FA1   SYS      $FA1            ; System call to FA1
$5F2    $5307   UNKNOWN  $5307           ; Unknown 5xxx instruction
$5F4    $87A0   LD       V7, VA          ; V7 = VA
$5F6    $E0A5   UNKNOWN  $E0A5           ; Unknown Exxx instruction
$5F8    $170B   JP       $70B            ; Jump to 70B
$5FA    $005A   SYS      $05A            ; System call to 05A
$5FC    $AF7E   LD       I, $F7E         ; Load F7E into I
$5FE    $D33B   DRW      V3, V3, #B      ; Draw 11-byte sprite at V3, V3
$600    $2586   CALL     $586            ; Call subroutine at 586
$602    $A9E7   LD       I, $9E7         ; Load 9E7 into I
$604    $3492   SE       V4, #92         ; Skip if V4 == 146
$606    $A009   LD       I, $009         ; Load 009 into I
$608    $B979   JP       V0, $979        ; Jump to V0 + 979
$60A    $E533   UNKNOWN  $E533           ; Unknown Exxx instruction
$60C    $79DA   ADD      V9, #DA         ; Add 218 to V9
$60E    $B643   JP       V0, $643        ; Jump to V0 + 643
$610    $9DF1   UNKNOWN  $9DF1           ; Unknown 9xxx instruction
$612    $C2D3   RND      V2, #D3         ; V2 = random & D3
$614    $A26A   LD       I, $26A         ; Load 26A into I
$616    $1F67   JP       $F67            ; Jump to F67
$618    $7981   ADD      V9, #81         ; Add 129 to V9
$61A    $510B   UNKNOWN  $510B           ; Unknown 5xxx instruction
$61C    $C539   RND      V5, #39         ; V5 = random & 39
$61E    $561C   UNKNOWN  $561C           ; Unknown 5xxx instruction
$620    $CBB0   RND      VB, #B0         ; VB = random & B0
$622    $F3A6   UNKNOWN  F3A6            ; Unknown Fxxx instruction
$624    $D3A5   DRW      V3, VA, #5      ; Draw 5-byte sprite at V3, VA
$626    $C632   RND      V6, #32         ; V6 = random & 32
$628    $820F   UNKNOWN  820F            ; Unknown 8xxx instruction
$62A    $02DD   SYS      $2DD            ; System call to 2DD
$62C    $66B6   LD       V6, #B6         ; Load 182 into V6
$62E    $1AF2   JP       $AF2            ; Jump to AF2
$630    $5611   UNKNOWN  $5611           ; Unknown 5xxx instruction
$632    $5C5C   UNKNOWN  $5C5C           ; Unknown 5xxx instruction
$634    $C55D   RND      V5, #5D         ; V5 = random & 5D
$636    $DFBD   DRW      VF, VB, #D      ; Draw 13-byte sprite at VF, VB
$638    $C7C9   RND      V7, #C9         ; V7 = random & C9
$63A    $B79E   JP       V0, $79E        ; Jump to V0 + 79E
$63C    $EE57   UNKNOWN  $EE57           ; Unknown Exxx instruction
$63E    $B545   JP       V0, $545        ; Jump to V0 + 545
$640    $0F5A   SYS      $F5A            ; System call to F5A
$642    $7584   ADD      V5, #84         ; Add 132 to V5
$644    $3BFD   SE       VB, #FD         ; Skip if VB == 253
$646    $FB3F   UNKNOWN  FB3F            ; Unknown Fxxx instruction
$648    $96BF   UNKNOWN  $96BF           ; Unknown 9xxx instruction
$64A    $4ECB   SNE      VE, #CB         ; Skip if VE != 203
$64C    $1EB1   JP       $EB1            ; Jump to EB1
$64E    $0BA7   SYS      $BA7            ; System call to BA7
$650    $A89F   LD       I, $89F         ; Load 89F into I
$652    $4171   SNE      V1, #71         ; Skip if V1 != 113
$654    $D172   DRW      V1, V7, #2      ; Draw 2-byte sprite at V1, V7
$656    $BB8B   JP       V0, $B8B        ; Jump to V0 + B8B
$658    $261A   CALL     $61A            ; Call subroutine at 61A
$65A    $C509   RND      V5, #09         ; V5 = random & 09
$65C    $CCB4   RND      VC, #B4         ; VC = random & B4
$65E    $0F32   SYS      $F32            ; System call to F32
$660    $2FCC   CALL     $FCC            ; Call subroutine at FCC
$662    $5094   UNKNOWN  $5094           ; Unknown 5xxx instruction
$664    $0963   SYS      $963            ; System call to 963
$666    $AF61   LD       I, $F61         ; Load F61 into I
$668    $89F7   SUBN     V9, VF          ; V9 = VF - V9, VF = !borrow
$66A    $1549   JP       $549            ; Jump to 549
$66C    $B788   JP       V0, $788        ; Jump to V0 + 788
$66E    $A4BF   LD       I, $4BF         ; Load 4BF into I
$670    $5139   UNKNOWN  $5139           ; Unknown 5xxx instruction
$672    $90BC   UNKNOWN  $90BC           ; Unknown 9xxx instruction
$674    $1486   JP       $486            ; Jump to 486
$676    $78E7   ADD      V8, #E7         ; Add 231 to V8
$678    $C01B   RND      V0, #1B         ; V0 = random & 1B
$67A    $0C80   SYS      $C80            ; System call to C80
$67C    $7EB1   ADD      VE, #B1         ; Add 177 to VE
$67E    $5344   UNKNOWN  $5344           ; Unknown 5xxx instruction
$680    $A9DA   LD       I, $9DA         ; Load 9DA into I
$682    $0214   SYS      $214            ; System call to 214
$684    $8B06   SHR      VB              ; VB >>= 1, VF = LSB
$686    $F0E4   UNKNOWN  F0E4            ; Unknown Fxxx instruction
$688    $DA72   DRW      VA, V7, #2      ; Draw 2-byte sprite at VA, V7
$68A    $47B5   SNE      V7, #B5         ; Skip if V7 != 181
$68C    $B9B8   JP       V0, $9B8        ; Jump to V0 + 9B8
$68E    $A566   LD       I, $566         ; Load 566 into I
$690    $A984   LD       I, $984         ; Load 984 into I
$692    $3F88   SE       VF, #88         ; Skip if VF == 136
$694    $A833   LD       I, $833         ; Load 833 into I
$696    $23D8   CALL     $3D8            ; Call subroutine at 3D8
$698    $9C32   UNKNOWN  $9C32           ; Unknown 9xxx instruction
$69A    $4832   SNE      V8, #32         ; Skip if V8 != 50
$69C    $3112   SE       V1, #12         ; Skip if V1 == 18
$69E    $178B   JP       $78B            ; Jump to 78B
$6A0    $7F47   ADD      VF, #47         ; Add 71 to VF
$6A2    $6928   LD       V9, #28         ; Load 40 into V9
$6A4    $DE38   DRW      VE, V3, #8      ; Draw 8-byte sprite at VE, V3
$6A6    $7C4B   ADD      VC, #4B         ; Add 75 to VC
$6A8    $412C   SNE      V1, #2C         ; Skip if V1 != 44
$6AA    $034E   SYS      $34E            ; System call to 34E
$6AC    $C71E   RND      V7, #1E         ; V7 = random & 1E
$6AE    $FB44   UNKNOWN  FB44            ; Unknown Fxxx instruction
$6B0    $416A   SNE      V1, #6A         ; Skip if V1 != 106
$6B2    $471C   SNE      V7, #1C         ; Skip if V7 != 28
$6B4    $EFC0   UNKNOWN  $EFC0           ; Unknown Exxx instruction
$6B6    $10BE   JP       $0BE            ; Jump to 0BE
$6B8    $B330   JP       V0, $330        ; Jump to V0 + 330
$6BA    $B8DE   JP       V0, $8DE        ; Jump to V0 + 8DE
$6BC    $CEB4   RND      VE, #B4         ; VE = random & B4
$6BE    $2F74   CALL     $F74            ; Call subroutine at F74
$6C0    $D065   DRW      V0, V6, #5      ; Draw 5-byte sprite at V0, V6
$6C2    $AFCE   LD       I, $FCE         ; Load FCE into I
$6C4    $9ECC   UNKNOWN  $9ECC           ; Unknown 9xxx instruction
$6C6    $5C17   UNKNOWN  $5C17           ; Unknown 5xxx instruction
$6C8    $F248   UNKNOWN  F248            ; Unknown Fxxx instruction
$6CA    $F401   UNKNOWN  F401            ; Unknown Fxxx instruction
$6CC    $41A2   SNE      V1, #A2         ; Skip if V1 != 162
$6CE    $A669   LD       I, $669         ; Load 669 into I
$6D0    $C413   RND      V4, #13         ; V4 = random & 13
$6D2    $81BC   UNKNOWN  81BC            ; Unknown 8xxx instruction
$6D4    $F4B7   UNKNOWN  F4B7            ; Unknown Fxxx instruction
$6D6    $2557   CALL     $557            ; Call subroutine at 557
$6D8    $29FE   CALL     $9FE            ; Call subroutine at 9FE
$6DA    $44D5   SNE      V4, #D5         ; Skip if V4 != 213
$6DC    $973A   UNKNOWN  $973A           ; Unknown 9xxx instruction
$6DE    $E4A7   UNKNOWN  $E4A7           ; Unknown Exxx instruction
$6E0    $0C83   SYS      $C83            ; System call to C83
$6E2    $B9C0   JP       V0, $9C0        ; Jump to V0 + 9C0
$6E4    $D3C3   DRW      V3, VC, #3      ; Draw 3-byte sprite at V3, VC
$6E6    $4037   SNE      V0, #37         ; Skip if V0 != 55
$6E8    $529E   UNKNOWN  $529E           ; Unknown 5xxx instruction
$6EA    $D364   DRW      V3, V6, #4      ; Draw 4-byte sprite at V3, V6
$6EC    $9567   UNKNOWN  $9567           ; Unknown 9xxx instruction
$6EE    $2765   CALL     $765            ; Call subroutine at 765
$6F0    $3F7E   SE       VF, #7E         ; Skip if VF == 126
$6F2    $0BA4   SYS      $BA4            ; System call to BA4
$6F4    $88BD   UNKNOWN  88BD            ; Unknown 8xxx instruction
$6F6    $69FB   LD       V9, #FB         ; Load 251 into V9
$6F8    $423E   SNE      V2, #3E         ; Skip if V2 != 62
$6FA    $851D   UNKNOWN  851D            ; Unknown 8xxx instruction
$6FC    $FF3F   UNKNOWN  FF3F            ; Unknown Fxxx instruction
$6FE    $5E07   UNKNOWN  $5E07           ; Unknown 5xxx instruction
$700    $A5C4   LD       I, $5C4         ; Load 5C4 into I
$702    $2532   CALL     $532            ; Call subroutine at 532
$704    $7A8E   ADD      VA, #8E         ; Add 142 to VA
$706    $08D2   SYS      $8D2            ; System call to 8D2
$708    $949A   UNKNOWN  $949A           ; Unknown 9xxx instruction
$70A    $6797   LD       V7, #97         ; Load 151 into V7
$70C    $2846   CALL     $846            ; Call subroutine at 846
$70E    $4243   SNE      V2, #43         ; Skip if V2 != 67
$710    $4EE7   SNE      VE, #E7         ; Skip if VE != 231
$712    $94E1   UNKNOWN  $94E1           ; Unknown 9xxx instruction
$714    $E2BB   UNKNOWN  $E2BB           ; Unknown Exxx instruction
$716    $27EF   CALL     $7EF            ; Call subroutine at 7EF
$718    $9684   UNKNOWN  $9684           ; Unknown 9xxx instruction
$71A    $3EE3   SE       VE, #E3         ; Skip if VE == 227
$71C    $D2FB   DRW      V2, VF, #B      ; Draw 11-byte sprite at V2, VF
$71E    $5370   SE       V3, V7          ; Skip if V3 == V7
$720    $E753   UNKNOWN  $E753           ; Unknown Exxx instruction
$722    $5864   UNKNOWN  $5864           ; Unknown 5xxx instruction
$724    $24E6   CALL     $4E6            ; Call subroutine at 4E6
$726    $8C05   SUB      VC, V0          ; VC -= V0, VF = !borrow
$728    $990D   UNKNOWN  $990D           ; Unknown 9xxx instruction
$72A    $1D3A   JP       $D3A            ; Jump to D3A
$72C    $2517   CALL     $517            ; Call subroutine at 517
$72E    $9D02   UNKNOWN  $9D02           ; Unknown 9xxx instruction
$730    $F605   UNKNOWN  F605            ; Unknown Fxxx instruction
$732    $B095   JP       V0, $095        ; Jump to V0 + 095
$734    $62FC   LD       V2, #FC         ; Load 252 into V2
$736    $5A07   UNKNOWN  $5A07           ; Unknown 5xxx instruction
$738    $3200   SE       V2, #00         ; Skip if V2 == 0
$73A    $A837   LD       I, $837         ; Load 837 into I
$73C    $32C4   SE       V2, #C4         ; Skip if V2 == 196
$73E    $2E85   CALL     $E85            ; Call subroutine at E85
$740    $8388   UNKNOWN  8388            ; Unknown 8xxx instruction
$742    $4788   SNE      V7, #88         ; Skip if V7 != 136
$744    $B5B9   JP       V0, $5B9        ; Jump to V0 + 5B9
$746    $9344   UNKNOWN  $9344           ; Unknown 9xxx instruction
$748    $5869   UNKNOWN  $5869           ; Unknown 5xxx instruction
$74A    $094D   SYS      $94D            ; System call to 94D
$74C    $0D89   SYS      $D89            ; System call to D89
$74E    $98AF   UNKNOWN  $98AF           ; Unknown 9xxx instruction
$750    $CA19   RND      VA, #19         ; VA = random & 19
$752    $92AE   UNKNOWN  $92AE           ; Unknown 9xxx instruction
$754    $6739   LD       V7, #39         ; Load 57 into V7
$756    $C7CC   RND      V7, #CC         ; V7 = random & CC
$758    $3220   SE       V2, #20         ; Skip if V2 == 32
$75A    $FA91   UNKNOWN  FA91            ; Unknown Fxxx instruction
$75C    $ABA1   LD       I, $BA1         ; Load BA1 into I
$75E    $8DB3   XOR      VD, VB          ; VD ^= VB
$760    $E316   UNKNOWN  $E316           ; Unknown Exxx instruction
$762    $3290   SE       V2, #90         ; Skip if V2 == 144
$764    $609D   LD       V0, #9D         ; Load 157 into V0
$766    $C567   RND      V5, #67         ; V5 = random & 67
$768    $1B5E   JP       $B5E            ; Jump to B5E
$76A    $F5F8   UNKNOWN  F5F8            ; Unknown Fxxx instruction
$76C    $9C3A   UNKNOWN  $9C3A           ; Unknown 9xxx instruction
$76E    $D319   DRW      V3, V1, #9      ; Draw 9-byte sprite at V3, V1
$770    $8A2D   UNKNOWN  8A2D            ; Unknown 8xxx instruction
$772    $710A   ADD      V1, #0A         ; Add 10 to V1
$774    $FF8E   UNKNOWN  FF8E            ; Unknown Fxxx instruction
$776    $90A8   UNKNOWN  $90A8           ; Unknown 9xxx instruction
$778    $62C0   LD       V2, #C0         ; Load 192 into V2
$77A    $21EA   CALL     $1EA            ; Call subroutine at 1EA
$77C    $1276   JP       $276            ; Jump to 276
$77E    $B8AF   JP       V0, $8AF        ; Jump to V0 + 8AF
$780    $6D19   LD       VD, #19         ; Load 25 into VD
$782    $0FA6   SYS      $FA6            ; System call to FA6
$784    $332E   SE       V3, #2E         ; Skip if V3 == 46
$786    $C16A   RND      V1, #6A         ; V1 = random & 6A
$788    $D99A   DRW      V9, V9, #A      ; Draw 10-byte sprite at V9, V9
$78A    $5AA0   SE       VA, VA          ; Skip if VA == VA
$78C    $A616   LD       I, $616         ; Load 616 into I
$78E    $33B3   SE       V3, #B3         ; Skip if V3 == 179
$790    $F933   LD       B, V9           ; Store BCD of V9 at I, I+1, I+2
$792    $D558   DRW      V5, V5, #8      ; Draw 8-byte sprite at V5, V5
$794    $A0CA   LD       I, $0CA         ; Load 0CA into I
$796    $A572   LD       I, $572         ; Load 572 into I
$798    $DBF0   DRW      VB, VF, #0      ; Draw 0-byte sprite at VB, VF
$79A    $C524   RND      V5, #24         ; V5 = random & 24
$79C    $4B6E   SNE      VB, #6E         ; Skip if VB != 110
$79E    $75CB   ADD      V5, #CB         ; Add 203 to V5
$7A0    $91C3   UNKNOWN  $91C3           ; Unknown 9xxx instruction
$7A2    $718F   ADD      V1, #8F         ; Add 143 to V1
$7A4    $9329   UNKNOWN  $9329           ; Unknown 9xxx instruction
$7A6    $A99B   LD       I, $99B         ; Load 99B into I
$7A8    $BDCB   JP       V0, $DCB        ; Jump to V0 + DCB
$7AA    $8BA3   XOR      VB, VA          ; VB ^= VA
$7AC    $C7F9   RND      V7, #F9         ; V7 = random & F9
$7AE    $AC3C   LD       I, $C3C         ; Load C3C into I
$7B0    $7CB8   ADD      VC, #B8         ; Add 184 to VC
$7B2    $F46A   UNKNOWN  F46A            ; Unknown Fxxx instruction
$7B4    $956D   UNKNOWN  $956D           ; Unknown 9xxx instruction
$7B6    $E285   UNKNOWN  $E285           ; Unknown Exxx instruction
$7B8    $B21A   JP       V0, $21A        ; Jump to V0 + 21A
$7BA    $F51F   UNKNOWN  F51F            ; Unknown Fxxx instruction
$7BC    $1685   JP       $685            ; Jump to 685
$7BE    $349A   SE       V4, #9A         ; Skip if V4 == 154
$7C0    $7D60   ADD      VD, #60         ; Add 96 to VD
$7C2    $F000   UNKNOWN  F000            ; Unknown Fxxx instruction
$7C4    $1B36   JP       $B36            ; Jump to B36
$7C6    $F12D   UNKNOWN  F12D            ; Unknown Fxxx instruction
$7C8    $29AB   CALL     $9AB            ; Call subroutine at 9AB
$7CA    $F911   UNKNOWN  F911            ; Unknown Fxxx instruction
$7CC    $AD71   LD       I, $D71         ; Load D71 into I
$7CE    $09DF   SYS      $9DF            ; System call to 9DF
$7D0    $3E05   SE       VE, #05         ; Skip if VE == 5
$7D2    $F349   UNKNOWN  F349            ; Unknown Fxxx instruction
$7D4    $649F   LD       V4, #9F         ; Load 159 into V4
$7D6    $1952   JP       $952            ; Jump to 952
$7D8    $4987   SNE      V9, #87         ; Skip if V9 != 135
$7DA    $3EAE   SE       VE, #AE         ; Skip if VE == 174
$7DC    $609E   LD       V0, #9E         ; Load 158 into V0
$7DE    $68C5   LD       V8, #C5         ; Load 197 into V8
$7E0    $913C   UNKNOWN  $913C           ; Unknown 9xxx instruction
$7E2    $0EEA   SYS      $EEA            ; System call to EEA
$7E4    $F6C5   UNKNOWN  F6C5            ; Unknown Fxxx instruction
$7E6    $5938   UNKNOWN  $5938           ; Unknown 5xxx instruction
$7E8    $4DB5   SNE      VD, #B5         ; Skip if VD != 181
$7EA    $E1DE   UNKNOWN  $E1DE           ; Unknown Exxx instruction
$7EC    $4813   SNE      V8, #13         ; Skip if V8 != 19
$7EE    $ECE7   UNKNOWN  $ECE7           ; Unknown Exxx instruction
$7F0    $4BBE   SNE      VB, #BE         ; Skip if VB != 190
$7F2    $5E3A   UNKNOWN  $5E3A           ; Unknown 5xxx instruction
$7F4    $ADD9   LD       I, $DD9         ; Load DD9 into I
$7F6    $DC64   DRW      VC, V6, #4      ; Draw 4-byte sprite at VC, V6
$7F8    $4F2F   SNE      VF, #2F         ; Skip if VF != 47
$7FA    $A6AE   LD       I, $6AE         ; Load 6AE into I
$7FC    $6674   LD       V6, #74         ; Load 116 into V6
$7FE    $74F3   ADD      V4, #F3         ; Add 243 to V4
$800    $2471   CALL     $471            ; Call subroutine at 471
$802    $9CE1   UNKNOWN  $9CE1           ; Unknown 9xxx instruction
$804    $7575   ADD      V5, #75         ; Add 117 to V5
$806    $F3A2   UNKNOWN  F3A2            ; Unknown Fxxx instruction
$808    $3B8A   SE       VB, #8A         ; Skip if VB == 138
$80A    $43EF   SNE      V3, #EF         ; Skip if V3 != 239
$80C    $6690   LD       V6, #90         ; Load 144 into V6
$80E    $01ED   SYS      $1ED            ; System call to 1ED
$810    $627D   LD       V2, #7D         ; Load 125 into V2
$812    $92B5   UNKNOWN  $92B5           ; Unknown 9xxx instruction
$814    $90FE   UNKNOWN  $90FE           ; Unknown 9xxx instruction
$816    $C108   RND      V1, #08         ; V1 = random & 08
$818    $BC9A   JP       V0, $C9A        ; Jump to V0 + C9A
$81A    $27E7   CALL     $7E7            ; Call subroutine at 7E7
$81C    $446E   SNE      V4, #6E         ; Skip if V4 != 110
$81E    $96FF   UNKNOWN  $96FF           ; Unknown 9xxx instruction
$820    $3901   SE       V9, #01         ; Skip if V9 == 1
$822    $B582   JP       V0, $582        ; Jump to V0 + 582
$824    $8409   UNKNOWN  8409            ; Unknown 8xxx instruction
$826    $3560   SE       V5, #60         ; Skip if V5 == 96
$828    $8E3E   SHL      VE              ; VE <<= 1, VF = MSB
$82A    $960A   UNKNOWN  $960A           ; Unknown 9xxx instruction
$82C    $6256   LD       V2, #56         ; Load 86 into V2
$82E    $E2F3   UNKNOWN  $E2F3           ; Unknown Exxx instruction
$830    $254A   CALL     $54A            ; Call subroutine at 54A
$832    $189D   JP       $89D            ; Jump to 89D
$834    $3622   SE       V6, #22         ; Skip if V6 == 34
$836    $DF92   DRW      VF, V9, #2      ; Draw 2-byte sprite at VF, V9
$838    $0F64   SYS      $F64            ; System call to F64
$83A    $34B6   SE       V4, #B6         ; Skip if V4 == 182
$83C    $9254   UNKNOWN  $9254           ; Unknown 9xxx instruction
$83E    $F3E2   UNKNOWN  F3E2            ; Unknown Fxxx instruction
$840    $2529   CALL     $529            ; Call subroutine at 529
$842    $D527   DRW      V5, V2, #7      ; Draw 7-byte sprite at V5, V2
$844    $1027   JP       $027            ; Jump to 027
$846    $9EDC   UNKNOWN  $9EDC           ; Unknown 9xxx instruction
$848    $2998   CALL     $998            ; Call subroutine at 998
$84A    $F4F9   UNKNOWN  F4F9            ; Unknown Fxxx instruction
$84C    $7871   ADD      V8, #71         ; Add 113 to V8
$84E    $1369   JP       $369            ; Jump to 369
$850    $3AA1   SE       VA, #A1         ; Skip if VA == 161
$852    $F510   UNKNOWN  F510            ; Unknown Fxxx instruction
$854    $9126   UNKNOWN  $9126           ; Unknown 9xxx instruction
$856    $D604   DRW      V6, V0, #4      ; Draw 4-byte sprite at V6, V0
$858    $1A0D   JP       $A0D            ; Jump to A0D
$85A    $8DE2   AND      VD, VE          ; VD &= VE
$85C    $4F56   SNE      VF, #56         ; Skip if VF != 86
$85E    $9EED   UNKNOWN  $9EED           ; Unknown 9xxx instruction
$860    $475E   SNE      V7, #5E         ; Skip if V7 != 94
$862    $2141   CALL     $141            ; Call subroutine at 141
$864    $BB93   JP       V0, $B93        ; Jump to V0 + B93
$866    $C77F   RND      V7, #7F         ; V7 = random & 7F
$868    $E632   UNKNOWN  $E632           ; Unknown Exxx instruction
$86A    $2E2E   CALL     $E2E            ; Call subroutine at E2E
$86C    $33F6   SE       V3, #F6         ; Skip if V3 == 246
$86E    $AB78   LD       I, $B78         ; Load B78 into I
$870    $F7B1   UNKNOWN  F7B1            ; Unknown Fxxx instruction
$872    $9127   UNKNOWN  $9127           ; Unknown 9xxx instruction
$874    $12DD   JP       $2DD            ; Jump to 2DD
$876    $FD90   UNKNOWN  FD90            ; Unknown Fxxx instruction
$878    $0288   SYS      $288            ; System call to 288
$87A    $A95D   LD       I, $95D         ; Load 95D into I
$87C    $2868   CALL     $868            ; Call subroutine at 868
$87E    $9978   UNKNOWN  $9978           ; Unknown 9xxx instruction
$880    $7216   ADD      V2, #16         ; Add 22 to V2
$882    $0760   SYS      $760            ; System call to 760
$884    $A69C   LD       I, $69C         ; Load 69C into I
$886    $72B6   ADD      V2, #B6         ; Add 182 to V2
$888    $7611   ADD      V6, #11         ; Add 17 to V6
$88A    $D4AA   DRW      V4, VA, #A      ; Draw 10-byte sprite at V4, VA
$88C    $93D3   UNKNOWN  $93D3           ; Unknown 9xxx instruction
$88E    $8703   XOR      V7, V0          ; V7 ^= V0
$890    $DE80   DRW      VE, V8, #0      ; Draw 0-byte sprite at VE, V8
$892    $AE9F   LD       I, $E9F         ; Load E9F into I
$894    $DD35   DRW      VD, V3, #5      ; Draw 5-byte sprite at VD, V3
$896    $13CF   JP       $3CF            ; Jump to 3CF
$898    $FED2   UNKNOWN  FED2            ; Unknown Fxxx instruction
$89A    $70AC   ADD      V0, #AC         ; Add 172 to V0
$89C    $8048   UNKNOWN  8048            ; Unknown 8xxx instruction
$89E    $F4E9   UNKNOWN  F4E9            ; Unknown Fxxx instruction
$8A0    $D325   DRW      V3, V2, #5      ; Draw 5-byte sprite at V3, V2
$8A2    $BC02   JP       V0, $C02        ; Jump to V0 + C02
$8A4    $2983   CALL     $983            ; Call subroutine at 983
$8A6    $261D   CALL     $61D            ; Call subroutine at 61D
$8A8    $973F   UNKNOWN  $973F           ; Unknown 9xxx instruction
$8AA    $F154   UNKNOWN  F154            ; Unknown Fxxx instruction
$8AC    $BC3A   JP       V0, $C3A        ; Jump to V0 + C3A
$8AE    $70DC   ADD      V0, #DC         ; Add 220 to V0
$8B0    $50A4   UNKNOWN  $50A4           ; Unknown 5xxx instruction
$8B2    $EAC3   UNKNOWN  $EAC3           ; Unknown Exxx instruction
$8B4    $411F   SNE      V1, #1F         ; Skip if V1 != 31
$8B6    $450C   SNE      V5, #0C         ; Skip if V5 != 12
$8B8    $A557   LD       I, $557         ; Load 557 into I
$8BA    $3513   SE       V5, #13         ; Skip if V5 == 19
$8BC    $BA94   JP       V0, $A94        ; Jump to V0 + A94
$8BE    $8F45   SUB      VF, V4          ; VF -= V4, VF = !borrow
$8C0    $1470   JP       $470            ; Jump to 470
$8C2    $B6AA   JP       V0, $6AA        ; Jump to V0 + 6AA
$8C4    $4FC5   SNE      VF, #C5         ; Skip if VF != 197
$8C6    $0F56   SYS      $F56            ; System call to F56
$8C8    $D206   DRW      V2, V0, #6      ; Draw 6-byte sprite at V2, V0
$8CA    $CDD9   RND      VD, #D9         ; VD = random & D9
$8CC    $6DC8   LD       VD, #C8         ; Load 200 into VD
$8CE    $F415   LD       DT, V4          ; Delay timer = V4
$8D0    $2EC1   CALL     $EC1            ; Call subroutine at EC1
$8D2    $E9F1   UNKNOWN  $E9F1           ; Unknown Exxx instruction
$8D4    $E0C3   UNKNOWN  $E0C3           ; Unknown Exxx instruction
$8D6    $3705   SE       V7, #05         ; Skip if V7 == 5
$8D8    $D22E   DRW      V2, V2, #E      ; Draw 14-byte sprite at V2, V2
$8DA    $BCC3   JP       V0, $CC3        ; Jump to V0 + CC3
$8DC    $13AD   JP       $3AD            ; Jump to 3AD
$8DE    $9D11   UNKNOWN  $9D11           ; Unknown 9xxx instruction
$8E0    $6836   LD       V8, #36         ; Load 54 into V8
$8E2    $5704   UNKNOWN  $5704           ; Unknown 5xxx instruction
$8E4    $99D2   UNKNOWN  $99D2           ; Unknown 9xxx instruction
$8E6    $99AE   UNKNOWN  $99AE           ; Unknown 9xxx instruction
$8E8    $7268   ADD      V2, #68         ; Add 104 to V2
$8EA    $3F0E   SE       VF, #0E         ; Skip if VF == 14
$8EC    $F017   UNKNOWN  F017            ; Unknown Fxxx instruction
$8EE    $2075   CALL     $075            ; Call subroutine at 075
$8F0    $F408   UNKNOWN  F408            ; Unknown Fxxx instruction
$8F2    $A20D   LD       I, $20D         ; Load 20D into I
$8F4    $38AD   SE       V8, #AD         ; Skip if V8 == 173
$8F6    $4468   SNE      V4, #68         ; Skip if V4 != 104
$8F8    $333E   SE       V3, #3E         ; Skip if V3 == 62
$8FA    $A6F3   LD       I, $6F3         ; Load 6F3 into I
$8FC    $EA82   UNKNOWN  $EA82           ; Unknown Exxx instruction
$8FE    $01E9   SYS      $1E9            ; System call to 1E9
$900    $505F   UNKNOWN  $505F           ; Unknown 5xxx instruction
$902    $1411   JP       $411            ; Jump to 411
$904    $D5E9   DRW      V5, VE, #9      ; Draw 9-byte sprite at V5, VE
$906    $C88D   RND      V8, #8D         ; V8 = random & 8D
$908    $AFF9   LD       I, $FF9         ; Load FF9 into I
$90A    $08F9   SYS      $8F9            ; System call to 8F9
$90C    $7AF5   ADD      VA, #F5         ; Add 245 to VA
$90E    $FA88   UNKNOWN  FA88            ; Unknown Fxxx instruction
$910    $58AE   UNKNOWN  $58AE           ; Unknown 5xxx instruction
$912    $D419   DRW      V4, V1, #9      ; Draw 9-byte sprite at V4, V1
$914    $0C94   SYS      $C94            ; System call to C94
$916    $C236   RND      V2, #36         ; V2 = random & 36
$918    $BA34   JP       V0, $A34        ; Jump to V0 + A34
$91A    $C69D   RND      V6, #9D         ; V6 = random & 9D
$91C    $DC23   DRW      VC, V2, #3      ; Draw 3-byte sprite at VC, V2
$91E    $B25E   JP       V0, $25E        ; Jump to V0 + 25E
$920    $E3E2   UNKNOWN  $E3E2           ; Unknown Exxx instruction
$922    $4A2E   SNE      VA, #2E         ; Skip if VA != 46
$924    $312B   SE       V1, #2B         ; Skip if V1 == 43
$926    $10FF   JP       $0FF            ; Jump to 0FF
$928    $391A   SE       V9, #1A         ; Skip if V9 == 26
$92A    $1539   JP       $539            ; Jump to 539
$92C    $AE05   LD       I, $E05         ; Load E05 into I
$92E    $D2E4   DRW      V2, VE, #4      ; Draw 4-byte sprite at V2, VE
$930    $927B   UNKNOWN  $927B           ; Unknown 9xxx instruction
$932    $BADF   JP       V0, $ADF        ; Jump to V0 + ADF
$934    $73B6   ADD      V3, #B6         ; Add 182 to V3
$936    $94FE   UNKNOWN  $94FE           ; Unknown 9xxx instruction
$938    $E56F   UNKNOWN  $E56F           ; Unknown Exxx instruction
$93A    $1929   JP       $929            ; Jump to 929
$93C    $5FA4   UNKNOWN  $5FA4           ; Unknown 5xxx instruction
$93E    $02CD   SYS      $2CD            ; System call to 2CD
$940    $3E28   SE       VE, #28         ; Skip if VE == 40
$942    $F92F   UNKNOWN  F92F            ; Unknown Fxxx instruction
$944    $5BF5   UNKNOWN  $5BF5           ; Unknown 5xxx instruction
$946    $B2CD   JP       V0, $2CD        ; Jump to V0 + 2CD
$948    $55CC   UNKNOWN  $55CC           ; Unknown 5xxx instruction
$94A    $5C3E   UNKNOWN  $5C3E           ; Unknown 5xxx instruction
$94C    $4FB4   SNE      VF, #B4         ; Skip if VF != 180
$94E    $1D5B   JP       $D5B            ; Jump to D5B
$950    $EE94   UNKNOWN  $EE94           ; Unknown Exxx instruction
$952    $8B78   UNKNOWN  8B78            ; Unknown 8xxx instruction
$954    $031D   SYS      $31D            ; System call to 31D
$956    $3E72   SE       VE, #72         ; Skip if VE == 114
$958    $B2A4   JP       V0, $2A4        ; Jump to V0 + 2A4
$95A    $1E59   JP       $E59            ; Jump to E59
$95C    $6DFB   LD       VD, #FB         ; Load 251 into VD
$95E    $9D7C   UNKNOWN  $9D7C           ; Unknown 9xxx instruction
$960    $0835   SYS      $835            ; System call to 835
$962    $DB49   DRW      VB, V4, #9      ; Draw 9-byte sprite at VB, V4
$964    $F34D   UNKNOWN  F34D            ; Unknown Fxxx instruction
$966    $AF46   LD       I, $F46         ; Load F46 into I
$968    $3D95   SE       VD, #95         ; Skip if VD == 149
$96A    $2029   CALL     $029            ; Call subroutine at 029
$96C    $D97B   DRW      V9, V7, #B      ; Draw 11-byte sprite at V9, V7
$96E    $137D   JP       $37D            ; Jump to 37D
$970    $D3BB   DRW      V3, VB, #B      ; Draw 11-byte sprite at V3, VB
$972    $3628   SE       V6, #28         ; Skip if V6 == 40
$974    $E3DA   UNKNOWN  $E3DA           ; Unknown Exxx instruction
$976    $343C   SE       V4, #3C         ; Skip if V4 == 60
$978    $C575   RND      V5, #75         ; V5 = random & 75
$97A    $F21F   UNKNOWN  F21F            ; Unknown Fxxx instruction
$97C    $1375   JP       $375            ; Jump to 375
$97E    $FC7B   UNKNOWN  FC7B            ; Unknown Fxxx instruction
$980    $DFD7   DRW      VF, VD, #7      ; Draw 7-byte sprite at VF, VD
$982    $8201   OR       V2, V0          ; V2 |= V0
$984    $0BCE   SYS      $BCE            ; System call to BCE
$986    $E984   UNKNOWN  $E984           ; Unknown Exxx instruction
$988    $9C33   UNKNOWN  $9C33           ; Unknown 9xxx instruction
$98A    $E145   UNKNOWN  $E145           ; Unknown Exxx instruction
$98C    $7239   ADD      V2, #39         ; Add 57 to V2
$98E    $F724   UNKNOWN  F724            ; Unknown Fxxx instruction
$990    $B8DC   JP       V0, $8DC        ; Jump to V0 + 8DC
$992    $4919   SNE      V9, #19         ; Skip if V9 != 25
$994    $802B   UNKNOWN  802B            ; Unknown 8xxx instruction
$996    $226C   CALL     $26C            ; Call subroutine at 26C
$998    $06A4   SYS      $6A4            ; System call to 6A4
$99A    $4F45   SNE      VF, #45         ; Skip if VF != 69
$99C    $9841   UNKNOWN  $9841           ; Unknown 9xxx instruction
$99E    $AC89   LD       I, $C89         ; Load C89 into I
$9A0    $F0F6   UNKNOWN  F0F6            ; Unknown Fxxx instruction
$9A2    $1780   JP       $780            ; Jump to 780
$9A4    $550A   UNKNOWN  $550A           ; Unknown 5xxx instruction
$9A6    $8A7E   SHL      VA              ; VA <<= 1, VF = MSB
$9A8    $FA32   UNKNOWN  FA32            ; Unknown Fxxx instruction
$9AA    $8B05   SUB      VB, V0          ; VB -= V0, VF = !borrow
$9AC    $250B   CALL     $50B            ; Call subroutine at 50B
$9AE    $1110   JP       $110            ; Jump to 110
$9B0    $C776   RND      V7, #76         ; V7 = random & 76
$9B2    $1A26   JP       $A26            ; Jump to A26
$9B4    $C05F   RND      V0, #5F         ; V0 = random & 5F
$9B6    $22BE   CALL     $2BE            ; Call subroutine at 2BE
$9B8    $E2B9   UNKNOWN  $E2B9           ; Unknown Exxx instruction
$9BA    $2030   CALL     $030            ; Call subroutine at 030
$9BC    $47C6   SNE      V7, #C6         ; Skip if V7 != 198
$9BE    $5383   UNKNOWN  $5383           ; Unknown 5xxx instruction
$9C0    $DE7F   DRW      VE, V7, #F      ; Draw 15-byte sprite at VE, V7
$9C2    $8BA8   UNKNOWN  8BA8            ; Unknown 8xxx instruction
$9C4    $3DB1   SE       VD, #B1         ; Skip if VD == 177
$9C6    $8AD8   UNKNOWN  8AD8            ; Unknown 8xxx instruction
$9C8    $7048   ADD      V0, #48         ; Add 72 to V0
$9CA    $717C   ADD      V1, #7C         ; Add 124 to V1
$9CC    $9E54   UNKNOWN  $9E54           ; Unknown 9xxx instruction
$9CE    $8410   LD       V4, V1          ; V4 = V1
$9D0    $A368   LD       I, $368         ; Load 368 into I
$9D2    $F026   UNKNOWN  F026            ; Unknown Fxxx instruction
$9D4    $4968   SNE      V9, #68         ; Skip if V9 != 104
$9D6    $1920   JP       $920            ; Jump to 920
$9D8    $AFBE   LD       I, $FBE         ; Load FBE into I
$9DA    $E1F6   UNKNOWN  $E1F6           ; Unknown Exxx instruction
$9DC    $0CFD   SYS      $CFD            ; System call to CFD
$9DE    $D8A3   DRW      V8, VA, #3      ; Draw 3-byte sprite at V8, VA
$9E0    $B111   JP       V0, $111        ; Jump to V0 + 111
$9E2    $98B8   UNKNOWN  $98B8           ; Unknown 9xxx instruction
$9E4    $7840   ADD      V8, #40         ; Add 64 to V8
$9E6    $139E   JP       $39E            ; Jump to 39E
$9E8    $DD64   DRW      VD, V6, #4      ; Draw 4-byte sprite at VD, V6
$9EA    $1758   JP       $758            ; Jump to 758
$9EC    $D213   DRW      V2, V1, #3      ; Draw 3-byte sprite at V2, V1
$9EE    $976B   UNKNOWN  $976B           ; Unknown 9xxx instruction
$9F0    $2597   CALL     $597            ; Call subroutine at 597
$9F2    $8614   ADD      V6, V1          ; V6 += V1, VF = carry
$9F4    $94E8   UNKNOWN  $94E8           ; Unknown 9xxx instruction
$9F6    $911F   UNKNOWN  $911F           ; Unknown 9xxx instruction
$9F8    $EAF1   UNKNOWN  $EAF1           ; Unknown Exxx instruction
$9FA    $9515   UNKNOWN  $9515           ; Unknown 9xxx instruction
$9FC    $8063   XOR      V0, V6          ; V0 ^= V6
$9FE    $B6EA   JP       V0, $6EA        ; Jump to V0 + 6EA
$A00    $C8A7   RND      V8, #A7         ; V8 = random & A7
$A02    $FBB9   UNKNOWN  FBB9            ; Unknown Fxxx instruction
$A04    $A083   LD       I, $083         ; Load 083 into I
$A06    $C80A   RND      V8, #0A         ; V8 = random & 0A
$A08    $B84F   JP       V0, $84F        ; Jump to V0 + 84F
$A0A    $E1B9   UNKNOWN  $E1B9           ; Unknown Exxx instruction
$A0C    $1ADD   JP       $ADD            ; Jump to ADD
$A0E    $6906   LD       V9, #06         ; Load 6 into V9
$A10    $565D   UNKNOWN  $565D           ; Unknown 5xxx instruction
$A12    $3CBE   SE       VC, #BE         ; Skip if VC == 190
$A14    $D5F5   DRW      V5, VF, #5      ; Draw 5-byte sprite at V5, VF
$A16    $B17D   JP       V0, $17D        ; Jump to V0 + 17D
$A18    $A3FE   LD       I, $3FE         ; Load 3FE into I
$A1A    $47CE   SNE      V7, #CE         ; Skip if V7 != 206
$A1C    $83B6   SHR      V3              ; V3 >>= 1, VF = LSB
$A1E    $4F38   SNE      VF, #38         ; Skip if VF != 56
$A20    $268C   CALL     $68C            ; Call subroutine at 68C
$A22    $7F39   ADD      VF, #39         ; Add 57 to VF
$A24    $77A4   ADD      V7, #A4         ; Add 164 to V7
$A26    $6890   LD       V8, #90         ; Load 144 into V8
$A28    $595C   UNKNOWN  $595C           ; Unknown 5xxx instruction
$A2A    $25A2   CALL     $5A2            ; Call subroutine at 5A2
$A2C    $CECA   RND      VE, #CA         ; VE = random & CA
$A2E    $432E   SNE      V3, #2E         ; Skip if V3 != 46
$A30    $B1A0   JP       V0, $1A0        ; Jump to V0 + 1A0
$A32    $81DE   SHL      V1              ; V1 <<= 1, VF = MSB
$A34    $2ACF   CALL     $ACF            ; Call subroutine at ACF
$A36    $938B   UNKNOWN  $938B           ; Unknown 9xxx instruction
$A38    $9D7E   UNKNOWN  $9D7E           ; Unknown 9xxx instruction
$A3A    $5228   UNKNOWN  $5228           ; Unknown 5xxx instruction
$A3C    $0F99   SYS      $F99            ; System call to F99
$A3E    $A7F0   LD       I, $7F0         ; Load 7F0 into I
$A40    $10E1   JP       $0E1            ; Jump to 0E1
$A42    $7F50   ADD      VF, #50         ; Add 80 to VF
$A44    $2879   CALL     $879            ; Call subroutine at 879
$A46    $08E3   SYS      $8E3            ; System call to 8E3
$A48    $1309   JP       $309            ; Jump to 309
$A4A    $A088   LD       I, $088         ; Load 088 into I
$A4C    $8507   SUBN     V5, V0          ; V5 = V0 - V5, VF = !borrow
$A4E    $5F0E   UNKNOWN  $5F0E           ; Unknown 5xxx instruction
$A50    $9FD3   UNKNOWN  $9FD3           ; Unknown 9xxx instruction
$A52    $9FCD   UNKNOWN  $9FCD           ; Unknown 9xxx instruction
$A54    $3CB7   SE       VC, #B7         ; Skip if VC == 183
$A56    $45B9   SNE      V5, #B9         ; Skip if V5 != 185
$A58    $3983   SE       V9, #83         ; Skip if V9 == 131
$A5A    $A19C   LD       I, $19C         ; Load 19C into I
$A5C    $C09E   RND      V0, #9E         ; V0 = random & 9E
$A5E    $26BD   CALL     $6BD            ; Call subroutine at 6BD
$A60    $B955   JP       V0, $955        ; Jump to V0 + 955
$A62    $1AE2   JP       $AE2            ; Jump to AE2
$A64    $16E8   JP       $6E8            ; Jump to 6E8
$A66    $C80C   RND      V8, #0C         ; V8 = random & 0C
$A68    $8629   UNKNOWN  8629            ; Unknown 8xxx instruction
$A6A    $26CC   CALL     $6CC            ; Call subroutine at 6CC
$A6C    $BF71   JP       V0, $F71        ; Jump to V0 + F71
$A6E    $101F   JP       $01F            ; Jump to 01F
$A70    $F24E   UNKNOWN  F24E            ; Unknown Fxxx instruction
$A72    $4877   SNE      V8, #77         ; Skip if V8 != 119
$A74    $73EA   ADD      V3, #EA         ; Add 234 to V3
$A76    $F716   UNKNOWN  F716            ; Unknown Fxxx instruction
$A78    $30A1   SE       V0, #A1         ; Skip if V0 == 161
$A7A    $4F49   SNE      VF, #49         ; Skip if VF != 73
$A7C    $1460   JP       $460            ; Jump to 460
$A7E    $4548   SNE      V5, #48         ; Skip if V5 != 72
$A80    $4305   SNE      V3, #05         ; Skip if V3 != 5
$A82    $CA13   RND      VA, #13         ; VA = random & 13
$A84    $FB1F   UNKNOWN  FB1F            ; Unknown Fxxx instruction
$A86    $48CC   SNE      V8, #CC         ; Skip if V8 != 204
$A88    $8ECD   UNKNOWN  8ECD            ; Unknown 8xxx instruction
$A8A    $B1E4   JP       V0, $1E4        ; Jump to V0 + 1E4
$A8C    $8140   LD       V1, V4          ; V1 = V4
$A8E    $863A   UNKNOWN  863A            ; Unknown 8xxx instruction
$A90    $EFE1   UNKNOWN  $EFE1           ; Unknown Exxx instruction
$A92    $B66C   JP       V0, $66C        ; Jump to V0 + 66C
$A94    $B67F   JP       V0, $67F        ; Jump to V0 + 67F
$A96    $ED39   UNKNOWN  $ED39           ; Unknown Exxx instruction
$A98    $9645   UNKNOWN  $9645           ; Unknown 9xxx instruction
$A9A    $3E8C   SE       VE, #8C         ; Skip if VE == 140
$A9C    $C50A   RND      V5, #0A         ; V5 = random & 0A
$A9E    $7694   ADD      V6, #94         ; Add 148 to V6
$AA0    $BC41   JP       V0, $C41        ; Jump to V0 + C41
$AA2    $00AD   SYS      $0AD            ; System call to 0AD
$AA4    $D80E   DRW      V8, V0, #E      ; Draw 14-byte sprite at V8, V0
$AA6    $A782   LD       I, $782         ; Load 782 into I
$AA8    $C3F5   RND      V3, #F5         ; V3 = random & F5
$AAA    $DEA5   DRW      VE, VA, #5      ; Draw 5-byte sprite at VE, VA
$AAC    $BC88   JP       V0, $C88        ; Jump to V0 + C88
$AAE    $931A   UNKNOWN  $931A           ; Unknown 9xxx instruction
$AB0    $EFDB   UNKNOWN  $EFDB           ; Unknown Exxx instruction
$AB2    $1E39   JP       $E39            ; Jump to E39
$AB4    $3274   SE       V2, #74         ; Skip if V2 == 116
$AB6    $97BD   UNKNOWN  $97BD           ; Unknown 9xxx instruction
$AB8    $8B95   SUB      VB, V9          ; VB -= V9, VF = !borrow
$ABA    $670C   LD       V7, #0C         ; Load 12 into V7
$ABC    $E766   UNKNOWN  $E766           ; Unknown Exxx instruction
$ABE    $8D7E   SHL      VD              ; VD <<= 1, VF = MSB
$AC0    $DD7E   DRW      VD, V7, #E      ; Draw 14-byte sprite at VD, V7
$AC2    $FF9F   UNKNOWN  FF9F            ; Unknown Fxxx instruction
$AC4    $5973   UNKNOWN  $5973           ; Unknown 5xxx instruction
$AC6    $3F0E   SE       VF, #0E         ; Skip if VF == 14
$AC8    $EF35   UNKNOWN  $EF35           ; Unknown Exxx instruction
$ACA    $4A32   SNE      VA, #32         ; Skip if VA != 50
$ACC    $B53B   JP       V0, $53B        ; Jump to V0 + 53B
$ACE    $A656   LD       I, $656         ; Load 656 into I
$AD0    $7DFE   ADD      VD, #FE         ; Add 254 to VD
$AD2    $9C88   UNKNOWN  $9C88           ; Unknown 9xxx instruction
$AD4    $4D99   SNE      VD, #99         ; Skip if VD != 153
$AD6    $8F5D   UNKNOWN  8F5D            ; Unknown 8xxx instruction
$AD8    $F8E1   UNKNOWN  F8E1            ; Unknown Fxxx instruction
$ADA    $5705   UNKNOWN  $5705           ; Unknown 5xxx instruction
$ADC    $903C   UNKNOWN  $903C           ; Unknown 9xxx instruction
$ADE    $F6AD   UNKNOWN  F6AD            ; Unknown Fxxx instruction
$AE0    $2735   CALL     $735            ; Call subroutine at 735
$AE2    $FF11   UNKNOWN  FF11            ; Unknown Fxxx instruction
$AE4    $33BE   SE       V3, #BE         ; Skip if V3 == 190
$AE6    $3D18   SE       VD, #18         ; Skip if VD == 24
$AE8    $E255   UNKNOWN  $E255           ; Unknown Exxx instruction
$AEA    $5E17   UNKNOWN  $5E17           ; Unknown 5xxx instruction
$AEC    $10EA   JP       $0EA            ; Jump to 0EA
$AEE    $0ECD   SYS      $ECD            ; System call to ECD
$AF0    $7E69   ADD      VE, #69         ; Add 105 to VE
$AF2    $AF43   LD       I, $F43         ; Load F43 into I
$AF4    $48BB   SNE      V8, #BB         ; Skip if V8 != 187
$AF6    $91AE   UNKNOWN  $91AE           ; Unknown 9xxx instruction
$AF8    $6444   LD       V4, #44         ; Load 68 into V4
$AFA    $F6E7   UNKNOWN  F6E7            ; Unknown Fxxx instruction
$AFC    $4DF3   SNE      VD, #F3         ; Skip if VD != 243
$AFE    $E2C8   UNKNOWN  $E2C8           ; Unknown Exxx instruction
$B00    $74B2   ADD      V4, #B2         ; Add 178 to V4
$B02    $8054   ADD      V0, V5          ; V0 += V5, VF = carry
$B04    $5E5D   UNKNOWN  $5E5D           ; Unknown 5xxx instruction
$B06    $D501   DRW      V5, V0, #1      ; Draw 1-byte sprite at V5, V0
$B08    $065A   SYS      $65A            ; System call to 65A
$B0A    $FED0   UNKNOWN  FED0            ; Unknown Fxxx instruction
$B0C    $79A6   ADD      V9, #A6         ; Add 166 to V9
$B0E    $B5DE   JP       V0, $5DE        ; Jump to V0 + 5DE
$B10    $0BDC   SYS      $BDC            ; System call to BDC
$B12    $42DE   SNE      V2, #DE         ; Skip if V2 != 222
$B14    $8822   AND      V8, V2          ; V8 &= V2
$B16    $534F   UNKNOWN  $534F           ; Unknown 5xxx instruction
$B18    $0637   SYS      $637            ; System call to 637
$B1A    $0826   SYS      $826            ; System call to 826
$B1C    $4582   SNE      V5, #82         ; Skip if V5 != 130
$B1E    $DD09   DRW      VD, V0, #9      ; Draw 9-byte sprite at VD, V0
$B20    $519B   UNKNOWN  $519B           ; Unknown 5xxx instruction
$B22    $7B0C   ADD      VB, #0C         ; Add 12 to VB
$B24    $EBF6   UNKNOWN  $EBF6           ; Unknown Exxx instruction
$B26    $76CD   ADD      V6, #CD         ; Add 205 to V6
$B28    $0855   SYS      $855            ; System call to 855
$B2A    $5D85   UNKNOWN  $5D85           ; Unknown 5xxx instruction
$B2C    $6100   LD       V1, #00         ; Load 0 into V1
$B2E    $BF85   JP       V0, $F85        ; Jump to V0 + F85
$B30    $0DCE   SYS      $DCE            ; System call to DCE
$B32    $0216   SYS      $216            ; System call to 216
$B34    $B7ED   JP       V0, $7ED        ; Jump to V0 + 7ED
$B36    $489F   SNE      V8, #9F         ; Skip if V8 != 159
$B38    $7673   ADD      V6, #73         ; Add 115 to V6
$B3A    $0A2E   SYS      $A2E            ; System call to A2E
$B3C    $D7DB   DRW      V7, VD, #B      ; Draw 11-byte sprite at V7, VD
$B3E    $FAC4   UNKNOWN  FAC4            ; Unknown Fxxx instruction
$B40    $39F8   SE       V9, #F8         ; Skip if V9 == 248
$B42    $092A   SYS      $92A            ; System call to 92A
$B44    $8964   ADD      V9, V6          ; V9 += V6, VF = carry
$B46    $3A3E   SE       VA, #3E         ; Skip if VA == 62
$B48    $FE2A   UNKNOWN  FE2A            ; Unknown Fxxx instruction
$B4A    $D5E8   DRW      V5, VE, #8      ; Draw 8-byte sprite at V5, VE
$B4C    $A22F   LD       I, $22F         ; Load 22F into I
$B4E    $7BF9   ADD      VB, #F9         ; Add 249 to VB
$B50    $BA38   JP       V0, $A38        ; Jump to V0 + A38
$B52    $194C   JP       $94C            ; Jump to 94C
$B54    $32A1   SE       V2, #A1         ; Skip if V2 == 161
$B56    $6612   LD       V6, #12         ; Load 18 into V6
$B58    $811B   UNKNOWN  811B            ; Unknown 8xxx instruction
$B5A    $9FF7   UNKNOWN  $9FF7           ; Unknown 9xxx instruction
$B5C    $361B   SE       V6, #1B         ; Skip if V6 == 27
$B5E    $1035   JP       $035            ; Jump to 035
$B60    $888E   SHL      V8              ; V8 <<= 1, VF = MSB
$B62    $A325   LD       I, $325         ; Load 325 into I
$B64    $A129   LD       I, $129         ; Load 129 into I
$B66    $DBE8   DRW      VB, VE, #8      ; Draw 8-byte sprite at VB, VE
$B68    $CEDC   RND      VE, #DC         ; VE = random & DC
$B6A    $681A   LD       V8, #1A         ; Load 26 into V8
$B6C    $86AE   SHL      V6              ; V6 <<= 1, VF = MSB
$B6E    $A163   LD       I, $163         ; Load 163 into I
$B70    $ECC4   UNKNOWN  $ECC4           ; Unknown Exxx instruction
$B72    $1ED9   JP       $ED9            ; Jump to ED9
$B74    $F77A   UNKNOWN  F77A            ; Unknown Fxxx instruction
$B76    $895A   UNKNOWN  895A            ; Unknown 8xxx instruction
$B78    $0D11   SYS      $D11            ; System call to D11
$B7A    $9A5C   UNKNOWN  $9A5C           ; Unknown 9xxx instruction
$B7C    $2F6C   CALL     $F6C            ; Call subroutine at F6C
$B7E    $10D5   JP       $0D5            ; Jump to 0D5
$B80    $F83C   UNKNOWN  F83C            ; Unknown Fxxx instruction
$B82    $5385   UNKNOWN  $5385           ; Unknown 5xxx instruction
$B84    $8A0B   UNKNOWN  8A0B            ; Unknown 8xxx instruction
$B86    $2D59   CALL     $D59            ; Call subroutine at D59
$B88    $FDC6   UNKNOWN  FDC6            ; Unknown Fxxx instruction
$B8A    $7AB6   ADD      VA, #B6         ; Add 182 to VA
$B8C    $C135   RND      V1, #35         ; V1 = random & 35
$B8E    $96A5   UNKNOWN  $96A5           ; Unknown 9xxx instruction
$B90    $0D20   SYS      $D20            ; System call to D20
$B92    $4C7B   SNE      VC, #7B         ; Skip if VC != 123
$B94    $5CDC   UNKNOWN  $5CDC           ; Unknown 5xxx instruction
$B96    $043B   SYS      $43B            ; System call to 43B
$B98    $2E66   CALL     $E66            ; Call subroutine at E66
$B9A    $00A2   SYS      $0A2            ; System call to 0A2
$B9C    $A252   LD       I, $252         ; Load 252 into I
$B9E    $A8E2   LD       I, $8E2         ; Load 8E2 into I
$BA0    $F6A9   UNKNOWN  F6A9            ; Unknown Fxxx instruction
$BA2    $7A6A   ADD      VA, #6A         ; Add 106 to VA
$BA4    $5B04   UNKNOWN  $5B04           ; Unknown 5xxx instruction
$BA6    $9F50   SNE      VF, V5          ; Skip if VF != V5
$BA8    $466C   SNE      V6, #6C         ; Skip if V6 != 108
$BAA    $8EA2   AND      VE, VA          ; VE &= VA
$BAC    $A3F5   LD       I, $3F5         ; Load 3F5 into I
$BAE    $3D47   SE       VD, #47         ; Skip if VD == 71
$BB0    $D466   DRW      V4, V6, #6      ; Draw 6-byte sprite at V4, V6
$BB2    $DB9D   DRW      VB, V9, #D      ; Draw 13-byte sprite at VB, V9
$BB4    $1655   JP       $655            ; Jump to 655
$BB6    $81AF   UNKNOWN  81AF            ; Unknown 8xxx instruction
$BB8    $2280   CALL     $280            ; Call subroutine at 280
$BBA    $C1C5   RND      V1, #C5         ; V1 = random & C5
$BBC    $8633   XOR      V6, V3          ; V6 ^= V3
$BBE    $4CF5   SNE      VC, #F5         ; Skip if VC != 245
$BC0    $6DBE   LD       VD, #BE         ; Load 190 into VD
$BC2    $CA20   RND      VA, #20         ; VA = random & 20
$BC4    $07D8   SYS      $7D8            ; System call to 7D8
$BC6    $601F   LD       V0, #1F         ; Load 31 into V0
$BC8    $404A   SNE      V0, #4A         ; Skip if V0 != 74
$BCA    $F9CE   UNKNOWN  F9CE            ; Unknown Fxxx instruction
$BCC    $E0EC   UNKNOWN  $E0EC           ; Unknown Exxx instruction
$BCE    $A46F   LD       I, $46F         ; Load 46F into I
$BD0    $1DB7   JP       $DB7            ; Jump to DB7
$BD2    $C4E3   RND      V4, #E3         ; V4 = random & E3
$BD4    $AC70   LD       I, $C70         ; Load C70 into I
$BD6    $C21E   RND      V2, #1E         ; V2 = random & 1E
$BD8    $5B74   UNKNOWN  $5B74           ; Unknown 5xxx instruction
$BDA    $2A4F   CALL     $A4F            ; Call subroutine at A4F
$BDC    $017E   SYS      $17E            ; System call to 17E
$BDE    $26AD   CALL     $6AD            ; Call subroutine at 6AD
$BE0    $99F0   SNE      V9, VF          ; Skip if V9 != VF
$BE2    $6159   LD       V1, #59         ; Load 89 into V1
$BE4    $7A5B   ADD      VA, #5B         ; Add 91 to VA
$BE6    $17FE   JP       $7FE            ; Jump to 7FE
$BE8    $3BF3   SE       VB, #F3         ; Skip if VB == 243
$BEA    $F16C   UNKNOWN  F16C            ; Unknown Fxxx instruction
$BEC    $CCC9   RND      VC, #C9         ; VC = random & C9
$BEE    $36E4   SE       V6, #E4         ; Skip if V6 == 228
$BF0    $B68C   JP       V0, $68C        ; Jump to V0 + 68C
$BF2    $910D   UNKNOWN  $910D           ; Unknown 9xxx instruction
$BF4    $2E0A   CALL     $E0A            ; Call subroutine at E0A
$BF6    $B27C   JP       V0, $27C        ; Jump to V0 + 27C
$BF8    $3B3A   SE       VB, #3A         ; Skip if VB == 58
$BFA    $FE68   UNKNOWN  FE68            ; Unknown Fxxx instruction
$BFC    $0E99   SYS      $E99            ; System call to E99
$BFE    $667F   LD       V6, #7F         ; Load 127 into V6
$C00    $887C   UNKNOWN  887C            ; Unknown 8xxx instruction
$C02    $A6B5   LD       I, $6B5         ; Load 6B5 into I
$C04    $1C7C   JP       $C7C            ; Jump to C7C
$C06    $E8AE   UNKNOWN  $E8AE           ; Unknown Exxx instruction
$C08    $8E6F   UNKNOWN  8E6F            ; Unknown 8xxx instruction
$C0A    $FCA0   UNKNOWN  FCA0            ; Unknown Fxxx instruction
$C0C    $BBD3   JP       V0, $BD3        ; Jump to V0 + BD3
$C0E    $69A6   LD       V9, #A6         ; Load 166 into V9
$C10    $72D1   ADD      V2, #D1         ; Add 209 to V2
$C12    $5813   UNKNOWN  $5813           ; Unknown 5xxx instruction
$C14    $08C5   SYS      $8C5            ; System call to 8C5
$C16    $A5C2   LD       I, $5C2         ; Load 5C2 into I
$C18    $FA8F   UNKNOWN  FA8F            ; Unknown Fxxx instruction
$C1A    $F7D2   UNKNOWN  F7D2            ; Unknown Fxxx instruction
$C1C    $912D   UNKNOWN  $912D           ; Unknown 9xxx instruction
$C1E    $C8CD   RND      V8, #CD         ; V8 = random & CD
$C20    $94A6   UNKNOWN  $94A6           ; Unknown 9xxx instruction
$C22    $0E13   SYS      $E13            ; System call to E13
$C24    $7F11   ADD      VF, #11         ; Add 17 to VF
$C26    $88B5   SUB      V8, VB          ; V8 -= VB, VF = !borrow
$C28    $E9C7   UNKNOWN  $E9C7           ; Unknown Exxx instruction
$C2A    $0BAB   SYS      $BAB            ; System call to BAB
$C2C    $CA9A   RND      VA, #9A         ; VA = random & 9A
$C2E    $C493   RND      V4, #93         ; V4 = random & 93
$C30    $5CEA   UNKNOWN  $5CEA           ; Unknown 5xxx instruction
$C32    $B4E7   JP       V0, $4E7        ; Jump to V0 + 4E7
$C34    $29B6   CALL     $9B6            ; Call subroutine at 9B6
$C36    $F2D7   UNKNOWN  F2D7            ; Unknown Fxxx instruction
$C38    $68FA   LD       V8, #FA         ; Load 250 into V8
$C3A    $4AED   SNE      VA, #ED         ; Skip if VA != 237
$C3C    $B6E2   JP       V0, $6E2        ; Jump to V0 + 6E2
$C3E    $A781   LD       I, $781         ; Load 781 into I
$C40    $B005   JP       V0, $005        ; Jump to V0 + 005
$C42    $4E9A   SNE      VE, #9A         ; Skip if VE != 154
$C44    $AA75   LD       I, $A75         ; Load A75 into I
$C46    $DD35   DRW      VD, V3, #5      ; Draw 5-byte sprite at VD, V3
$C48    $8121   OR       V1, V2          ; V1 |= V2
$C4A    $0C3B   SYS      $C3B            ; System call to C3B
$C4C    $850B   UNKNOWN  850B            ; Unknown 8xxx instruction
$C4E    $C85B   RND      V8, #5B         ; V8 = random & 5B
$C50    $7315   ADD      V3, #15         ; Add 21 to V3
$C52    $2345   CALL     $345            ; Call subroutine at 345
$C54    $06FA   SYS      $6FA            ; System call to 6FA
$C56    $EE85   UNKNOWN  $EE85           ; Unknown Exxx instruction
$C58    $8EFD   UNKNOWN  8EFD            ; Unknown 8xxx instruction
$C5A    $31D8   SE       V1, #D8         ; Skip if V1 == 216
$C5C    $861B   UNKNOWN  861B            ; Unknown 8xxx instruction
$C5E    $8D59   UNKNOWN  8D59            ; Unknown 8xxx instruction
$C60    $4604   SNE      V6, #04         ; Skip if V6 != 4
$C62    $F7A7   UNKNOWN  F7A7            ; Unknown Fxxx instruction
$C64    $89EB   UNKNOWN  89EB            ; Unknown 8xxx instruction
$C66    $7957   ADD      V9, #57         ; Add 87 to V9
$C68    $BA1C   JP       V0, $A1C        ; Jump to V0 + A1C
$C6A    $C777   RND      V7, #77         ; V7 = random & 77
$C6C    $97A8   UNKNOWN  $97A8           ; Unknown 9xxx instruction
$C6E    $9B7A   UNKNOWN  $9B7A           ; Unknown 9xxx instruction
$C70    $8ABC   UNKNOWN  8ABC            ; Unknown 8xxx instruction
$C72    $1F48   JP       $F48            ; Jump to F48
$C74    $91B8   UNKNOWN  $91B8           ; Unknown 9xxx instruction
$C76    $98B0   SNE      V8, VB          ; Skip if V8 != VB
$C78    $5A2B   UNKNOWN  $5A2B           ; Unknown 5xxx instruction
$C7A    $601D   LD       V0, #1D         ; Load 29 into V0
$C7C    $1A6A   JP       $A6A            ; Jump to A6A
$C7E    $8138   UNKNOWN  8138            ; Unknown 8xxx instruction
$C80    $EBE5   UNKNOWN  $EBE5           ; Unknown Exxx instruction
$C82    $B5F1   JP       V0, $5F1        ; Jump to V0 + 5F1
$C84    $AB93   LD       I, $B93         ; Load B93 into I
$C86    $96C1   UNKNOWN  $96C1           ; Unknown 9xxx instruction
$C88    $8E13   XOR      VE, V1          ; VE ^= V1
$C8A    $A49F   LD       I, $49F         ; Load 49F into I
$C8C    $D704   DRW      V7, V0, #4      ; Draw 4-byte sprite at V7, V0
$C8E    $12F7   JP       $2F7            ; Jump to 2F7
$C90    $4742   SNE      V7, #42         ; Skip if V7 != 66
$C92    $DAD0   DRW      VA, VD, #0      ; Draw 0-byte sprite at VA, VD
$C94    $7749   ADD      V7, #49         ; Add 73 to V7
$C96    $B88D   JP       V0, $88D        ; Jump to V0 + 88D
$C98    $42DB   SNE      V2, #DB         ; Skip if V2 != 219
$C9A    $6AD2   LD       VA, #D2         ; Load 210 into VA
$C9C    $99ED   UNKNOWN  $99ED           ; Unknown 9xxx instruction
$C9E    $A7E4   LD       I, $7E4         ; Load 7E4 into I
$CA0    $E160   UNKNOWN  $E160           ; Unknown Exxx instruction
$CA2    $5F5A   UNKNOWN  $5F5A           ; Unknown 5xxx instruction
$CA4    $5519   UNKNOWN  $5519           ; Unknown 5xxx instruction
$CA6    $DC88   DRW      VC, V8, #8      ; Draw 8-byte sprite at VC, V8
$CA8    $1890   JP       $890            ; Jump to 890
$CAA    $3133   SE       V1, #33         ; Skip if V1 == 51
$CAC    $31A8   SE       V1, #A8         ; Skip if V1 == 168
$CAE    $5D3C   UNKNOWN  $5D3C           ; Unknown 5xxx instruction
$CB0    $72FC   ADD      V2, #FC         ; Add 252 to V2
$CB2    $478A   SNE      V7, #8A         ; Skip if V7 != 138
$CB4    $8F41   OR       VF, V4          ; VF |= V4
$CB6    $426C   SNE      V2, #6C         ; Skip if V2 != 108
$CB8    $38DA   SE       V8, #DA         ; Skip if V8 == 218
$CBA    $FCE5   UNKNOWN  FCE5            ; Unknown Fxxx instruction
$CBC    $B474   JP       V0, $474        ; Jump to V0 + 474
$CBE    $51B6   UNKNOWN  $51B6           ; Unknown 5xxx instruction
$CC0    $CE82   RND      VE, #82         ; VE = random & 82
$CC2    $386B   SE       V8, #6B         ; Skip if V8 == 107
$CC4    $5C38   UNKNOWN  $5C38           ; Unknown 5xxx instruction
$CC6    $683E   LD       V8, #3E         ; Load 62 into V8
$CC8    $378F   SE       V7, #8F         ; Skip if V7 == 143
$CCA    $0643   SYS      $643            ; System call to 643
$CCC    $5679   UNKNOWN  $5679           ; Unknown 5xxx instruction
$CCE    $44CA   SNE      V4, #CA         ; Skip if V4 != 202
$CD0    $D496   DRW      V4, V9, #6      ; Draw 6-byte sprite at V4, V9
$CD2    $226D   CALL     $26D            ; Call subroutine at 26D
$CD4    $3403   SE       V4, #03         ; Skip if V4 == 3
$CD6    $E629   UNKNOWN  $E629           ; Unknown Exxx instruction
$CD8    $7A8B   ADD      VA, #8B         ; Add 139 to VA
$CDA    $868A   UNKNOWN  868A            ; Unknown 8xxx instruction
$CDC    $D73A   DRW      V7, V3, #A      ; Draw 10-byte sprite at V7, V3
$CDE    $63FD   LD       V3, #FD         ; Load 253 into V3
$CE0    $EB5E   UNKNOWN  $EB5E           ; Unknown Exxx instruction
$CE2    $4A4A   SNE      VA, #4A         ; Skip if VA != 74
$CE4    $C76E   RND      V7, #6E         ; V7 = random & 6E
$CE6    $F0A3   UNKNOWN  F0A3            ; Unknown Fxxx instruction
$CE8    $4234   SNE      V2, #34         ; Skip if V2 != 52
$CEA    $DD71   DRW      VD, V7, #1      ; Draw 1-byte sprite at VD, V7
$CEC    $4D1E   SNE      VD, #1E         ; Skip if VD != 30
$CEE    $84C3   XOR      V4, VC          ; V4 ^= VC
$CF0    $5722   UNKNOWN  $5722           ; Unknown 5xxx instruction
$CF2    $9CA1   UNKNOWN  $9CA1           ; Unknown 9xxx instruction
$CF4    $A583   LD       I, $583         ; Load 583 into I
$CF6    $A041   LD       I, $041         ; Load 041 into I
$CF8    $FE1C   UNKNOWN  FE1C            ; Unknown Fxxx instruction
$CFA    $A241   LD       I, $241         ; Load 241 into I
$CFC    $D767   DRW      V7, V6, #7      ; Draw 7-byte sprite at V7, V6
$CFE    $8D43   XOR      VD, V4          ; VD ^= V4
$D00    $BD67   JP       V0, $D67        ; Jump to V0 + D67
$D02    $BD41   JP       V0, $D41        ; Jump to V0 + D41
$D04    $8168   UNKNOWN  8168            ; Unknown 8xxx instruction
$D06    $A883   LD       I, $883         ; Load 883 into I
$D08    $4B53   SNE      VB, #53         ; Skip if VB != 83
$D0A    $3D07   SE       VD, #07         ; Skip if VD == 7
$D0C    $310E   SE       V1, #0E         ; Skip if V1 == 14
$D0E    $2CE5   CALL     $CE5            ; Call subroutine at CE5
$D10    $FEA6   UNKNOWN  FEA6            ; Unknown Fxxx instruction
$D12    $ED17   UNKNOWN  $ED17           ; Unknown Exxx instruction
$D14    $6C2E   LD       VC, #2E         ; Load 46 into VC
$D16    $D2FA   DRW      V2, VF, #A      ; Draw 10-byte sprite at V2, VF
$D18    $B6FE   JP       V0, $6FE        ; Jump to V0 + 6FE
$D1A    $5C2A   UNKNOWN  $5C2A           ; Unknown 5xxx instruction
$D1C    $586B   UNKNOWN  $586B           ; Unknown 5xxx instruction
$D1E    $94FC   UNKNOWN  $94FC           ; Unknown 9xxx instruction
$D20    $08F6   SYS      $8F6            ; System call to 8F6
$D22    $417E   SNE      V1, #7E         ; Skip if V1 != 126
$D24    $D647   DRW      V6, V4, #7      ; Draw 7-byte sprite at V6, V4
$D26    $4E8F   SNE      VE, #8F         ; Skip if VE != 143
$D28    $B21E   JP       V0, $21E        ; Jump to V0 + 21E
$D2A    $60C6   LD       V0, #C6         ; Load 198 into V0
$D2C    $B600   JP       V0, $600        ; Jump to V0 + 600
$D2E    $02F4   SYS      $2F4            ; System call to 2F4
$D30    $0424   SYS      $424            ; System call to 424
$D32    $65F8   LD       V5, #F8         ; Load 248 into V5
$D34    $AC56   LD       I, $C56         ; Load C56 into I
$D36    $D015   DRW      V0, V1, #5      ; Draw 5-byte sprite at V0, V1
$D38    $FE05   UNKNOWN  FE05            ; Unknown Fxxx instruction
$D3A    $2CAA   CALL     $CAA            ; Call subroutine at CAA
$D3C    $C710   RND      V7, #10         ; V7 = random & 10
$D3E    $A575   LD       I, $575         ; Load 575 into I
$D40    $5A52   UNKNOWN  $5A52           ; Unknown 5xxx instruction
$D42    $972F   UNKNOWN  $972F           ; Unknown 9xxx instruction
$D44    $ED6F   UNKNOWN  $ED6F           ; Unknown Exxx instruction
$D46    $2337   CALL     $337            ; Call subroutine at 337
$D48    $B262   JP       V0, $262        ; Jump to V0 + 262
$D4A    $2601   CALL     $601            ; Call subroutine at 601
$D4C    $7482   ADD      V4, #82         ; Add 130 to V4
$D4E    $70FD   ADD      V0, #FD         ; Add 253 to V0
$D50    $D9C6   DRW      V9, VC, #6      ; Draw 6-byte sprite at V9, VC
$D52    $082A   SYS      $82A            ; System call to 82A
$D54    $51BD   UNKNOWN  $51BD           ; Unknown 5xxx instruction
$D56    $2099   CALL     $099            ; Call subroutine at 099
$D58    $346A   SE       V4, #6A         ; Skip if V4 == 106
$D5A    $9C5C   UNKNOWN  $9C5C           ; Unknown 9xxx instruction
$D5C    $574E   UNKNOWN  $574E           ; Unknown 5xxx instruction
$D5E    $7629   ADD      V6, #29         ; Add 41 to V6
$D60    $A66A   LD       I, $66A         ; Load 66A into I
$D62    $8BF1   OR       VB, VF          ; VB |= VF
$D64    $F777   UNKNOWN  F777            ; Unknown Fxxx instruction
$D66    $409B   SNE      V0, #9B         ; Skip if V0 != 155
$D68    $3210   SE       V2, #10         ; Skip if V2 == 16
$D6A    $75F4   ADD      V5, #F4         ; Add 244 to V5
$D6C    $0AA6   SYS      $AA6            ; System call to AA6
$D6E    $A853   LD       I, $853         ; Load 853 into I
$D70    $6E86   LD       VE, #86         ; Load 134 into VE
$D72    $FA5C   UNKNOWN  FA5C            ; Unknown Fxxx instruction
$D74    $D908   DRW      V9, V0, #8      ; Draw 8-byte sprite at V9, V0
$D76    $1E82   JP       $E82            ; Jump to E82
$D78    $9023   UNKNOWN  $9023           ; Unknown 9xxx instruction
$D7A    $D78D   DRW      V7, V8, #D      ; Draw 13-byte sprite at V7, V8
$D7C    $B0A7   JP       V0, $0A7        ; Jump to V0 + 0A7
$D7E    $3504   SE       V5, #04         ; Skip if V5 == 4
$D80    $5014   UNKNOWN  $5014           ; Unknown 5xxx instruction
$D82    $AB59   LD       I, $B59         ; Load B59 into I
$D84    $72A8   ADD      V2, #A8         ; Add 168 to V2
$D86    $5FF4   UNKNOWN  $5FF4           ; Unknown 5xxx instruction
$D88    $4B48   SNE      VB, #48         ; Skip if VB != 72
$D8A    $5CC1   UNKNOWN  $5CC1           ; Unknown 5xxx instruction
$D8C    $8656   SHR      V6              ; V6 >>= 1, VF = LSB
$D8E    $C906   RND      V9, #06         ; V9 = random & 06
$D90    $C836   RND      V8, #36         ; V8 = random & 36
$D92    $9180   SNE      V1, V8          ; Skip if V1 != V8
$D94    $36A5   SE       V6, #A5         ; Skip if V6 == 165
$D96    $45F4   SNE      V5, #F4         ; Skip if V5 != 244
$D98    $5D46   UNKNOWN  $5D46           ; Unknown 5xxx instruction
$D9A    $B4A0   JP       V0, $4A0        ; Jump to V0 + 4A0
$D9C    $A187   LD       I, $187         ; Load 187 into I
$D9E    $811F   UNKNOWN  811F            ; Unknown 8xxx instruction
$DA0    $5B22   UNKNOWN  $5B22           ; Unknown 5xxx instruction
$DA2    $F41C   UNKNOWN  F41C            ; Unknown Fxxx instruction
$DA4    $F5A2   UNKNOWN  F5A2            ; Unknown Fxxx instruction
$DA6    $D54A   DRW      V5, V4, #A      ; Draw 10-byte sprite at V5, V4
$DA8    $0784   SYS      $784            ; System call to 784
$DAA    $C9E4   RND      V9, #E4         ; V9 = random & E4
$DAC    $BB29   JP       V0, $B29        ; Jump to V0 + B29
$DAE    $415F   SNE      V1, #5F         ; Skip if V1 != 95
$DB0    $34AE   SE       V4, #AE         ; Skip if V4 == 174
$DB2    $E4A5   UNKNOWN  $E4A5           ; Unknown Exxx instruction
$DB4    $6006   LD       V0, #06         ; Load 6 into V0
$DB6    $3C0F   SE       VC, #0F         ; Skip if VC == 15
$DB8    $6E5F   LD       VE, #5F         ; Load 95 into VE
$DBA    $1E4C   JP       $E4C            ; Jump to E4C
$DBC    $E217   UNKNOWN  $E217           ; Unknown Exxx instruction
$DBE    $1F2C   JP       $F2C            ; Jump to F2C
$DC0    $968F   UNKNOWN  $968F           ; Unknown 9xxx instruction
$DC2    $4B6A   SNE      VB, #6A         ; Skip if VB != 106
$DC4    $AA81   LD       I, $A81         ; Load A81 into I
$DC6    $A967   LD       I, $967         ; Load 967 into I
$DC8    $14B1   JP       $4B1            ; Jump to 4B1
$DCA    $B0E9   JP       V0, $0E9        ; Jump to V0 + 0E9
$DCC    $CD70   RND      VD, #70         ; VD = random & 70
$DCE    $1214   JP       $214            ; Jump to 214
$DD0    $C516   RND      V5, #16         ; V5 = random & 16
$DD2    $CB5E   RND      VB, #5E         ; VB = random & 5E
$DD4    $B9EF   JP       V0, $9EF        ; Jump to V0 + 9EF
$DD6    $DB81   DRW      VB, V8, #1      ; Draw 1-byte sprite at VB, V8
$DD8    $32C0   SE       V2, #C0         ; Skip if V2 == 192
$DDA    $FA37   UNKNOWN  FA37            ; Unknown Fxxx instruction
$DDC    $B1B5   JP       V0, $1B5        ; Jump to V0 + 1B5
$DDE    $F8BC   UNKNOWN  F8BC            ; Unknown Fxxx instruction
$DE0    $F955   LD       [I], V9         ; Store V0-V9 at I
$DE2    $F6E6   UNKNOWN  F6E6            ; Unknown Fxxx instruction
$DE4    $2649   CALL     $649            ; Call subroutine at 649
$DE6    $43CD   SNE      V3, #CD         ; Skip if V3 != 205
$DE8    $182A   JP       $82A            ; Jump to 82A
$DEA    $00C5   SYS      $0C5            ; System call to 0C5
$DEC    $E8CE   UNKNOWN  $E8CE           ; Unknown Exxx instruction
$DEE    $2B3D   CALL     $B3D            ; Call subroutine at B3D
$DF0    $1667   JP       $667            ; Jump to 667
$DF2    $1487   JP       $487            ; Jump to 487
$DF4    $6D9F   LD       VD, #9F         ; Load 159 into VD
$DF6    $1E72   JP       $E72            ; Jump to E72
$DF8    $DE89   DRW      VE, V8, #9      ; Draw 9-byte sprite at VE, V8
$DFA    $11DF   JP       $1DF            ; Jump to 1DF
$DFC    $9B94   UNKNOWN  $9B94           ; Unknown 9xxx instruction
$DFE    $E93B   UNKNOWN  $E93B           ; Unknown Exxx instruction
$E00    $6999   LD       V9, #99         ; Load 153 into V9
$E02    $033C   SYS      $33C            ; System call to 33C
$E04    $4AEA   SNE      VA, #EA         ; Skip if VA != 234
$E06    $22A0   CALL     $2A0            ; Call subroutine at 2A0
$E08    $E94F   UNKNOWN  $E94F           ; Unknown Exxx instruction
$E0A    $3497   SE       V4, #97         ; Skip if V4 == 151
$E0C    $8EC7   SUBN     VE, VC          ; VE = VC - VE, VF = !borrow
$E0E    $EEC7   UNKNOWN  $EEC7           ; Unknown Exxx instruction
$E10    $1CE6   JP       $CE6            ; Jump to CE6
$E12    $C3BF   RND      V3, #BF         ; V3 = random & BF
$E14    $1E7C   JP       $E7C            ; Jump to E7C
$E16    $7050   ADD      V0, #50         ; Add 80 to V0
$E18    $86AB   UNKNOWN  86AB            ; Unknown 8xxx instruction
$E1A    $95EC   UNKNOWN  $95EC           ; Unknown 9xxx instruction
$E1C    $8022   AND      V0, V2          ; V0 &= V2
$E1E    $2F0A   CALL     $F0A            ; Call subroutine at F0A
$E20    $C350   RND      V3, #50         ; V3 = random & 50
$E22    $ECD0   UNKNOWN  $ECD0           ; Unknown Exxx instruction
$E24    $F5EE   UNKNOWN  F5EE            ; Unknown Fxxx instruction
$E26    $5D82   UNKNOWN  $5D82           ; Unknown 5xxx instruction
$E28    $7DA3   ADD      VD, #A3         ; Add 163 to VD
$E2A    $C65B   RND      V6, #5B         ; V6 = random & 5B
$E2C    $AEC8   LD       I, $EC8         ; Load EC8 into I
$E2E    $7657   ADD      V6, #57         ; Add 87 to V6
$E30    $A174   LD       I, $174         ; Load 174 into I
$E32    $D034   DRW      V0, V3, #4      ; Draw 4-byte sprite at V0, V3
$E34    $F73D   UNKNOWN  F73D            ; Unknown Fxxx instruction
$E36    $314A   SE       V1, #4A         ; Skip if V1 == 74
$E38    $753D   ADD      V5, #3D         ; Add 61 to V5
$E3A    $1DE6   JP       $DE6            ; Jump to DE6
$E3C    $8899   UNKNOWN  8899            ; Unknown 8xxx instruction
$E3E    $955A   UNKNOWN  $955A           ; Unknown 9xxx instruction
$E40    $82ED   UNKNOWN  82ED            ; Unknown 8xxx instruction
$E42    $88BF   UNKNOWN  88BF            ; Unknown 8xxx instruction
$E44    $C107   RND      V1, #07         ; V1 = random & 07
$E46    $7541   ADD      V5, #41         ; Add 65 to V5
$E48    $0EB9   SYS      $EB9            ; System call to EB9
$E4A    $DCEF   DRW      VC, VE, #F      ; Draw 15-byte sprite at VC, VE
$E4C    $FDF7   UNKNOWN  FDF7            ; Unknown Fxxx instruction
$E4E    $76D6   ADD      V6, #D6         ; Add 214 to V6
$E50    $0734   SYS      $734            ; System call to 734
$E52    $7B22   ADD      VB, #22         ; Add 34 to VB
$E54    $2CFD   CALL     $CFD            ; Call subroutine at CFD
$E56    $98F4   UNKNOWN  $98F4           ; Unknown 9xxx instruction
$E58    $C228   RND      V2, #28         ; V2 = random & 28
$E5A    $D148   DRW      V1, V4, #8      ; Draw 8-byte sprite at V1, V4
$E5C    $A2E0   LD       I, $2E0         ; Load 2E0 into I
$E5E    $5DCA   UNKNOWN  $5DCA           ; Unknown 5xxx instruction
$E60    $77F1   ADD      V7, #F1         ; Add 241 to V7
$E62    $66E8   LD       V6, #E8         ; Load 232 into V6
$E64    $257F   CALL     $57F            ; Call subroutine at 57F
$E66    $313A   SE       V1, #3A         ; Skip if V1 == 58
$E68    $6C42   LD       VC, #42         ; Load 66 into VC
$E6A    $FAA5   UNKNOWN  FAA5            ; Unknown Fxxx instruction
$E6C    $4146   SNE      V1, #46         ; Skip if V1 != 70
$E6E    $CFE5   RND      VF, #E5         ; VF = random & E5
$E70    $2EA9   CALL     $EA9            ; Call subroutine at EA9
$E72    $4886   SNE      V8, #86         ; Skip if V8 != 134
$E74    $3303   SE       V3, #03         ; Skip if V3 == 3
$E76    $C269   RND      V2, #69         ; V2 = random & 69
$E78    $D354   DRW      V3, V5, #4      ; Draw 4-byte sprite at V3, V5
$E7A    $106E   JP       $06E            ; Jump to 06E
$E7C    $19F4   JP       $9F4            ; Jump to 9F4
$E7E    $8640   LD       V6, V4          ; V6 = V4
$E80    $27CF   CALL     $7CF            ; Call subroutine at 7CF
$E82    $E00C   UNKNOWN  $E00C           ; Unknown Exxx instruction
$E84    $167E   JP       $67E            ; Jump to 67E
$E86    $8CA0   LD       VC, VA          ; VC = VA
$E88    $10F9   JP       $0F9            ; Jump to 0F9
$E8A    $A20B   LD       I, $20B         ; Load 20B into I
$E8C    $766A   ADD      V6, #6A         ; Add 106 to V6
$E8E    $4E0B   SNE      VE, #0B         ; Skip if VE != 11
$E90    $0209   SYS      $209            ; System call to 209
$E92    $59B5   UNKNOWN  $59B5           ; Unknown 5xxx instruction
$E94    $7311   ADD      V3, #11         ; Add 17 to V3
$E96    $CB89   RND      VB, #89         ; VB = random & 89
$E98    $E633   UNKNOWN  $E633           ; Unknown Exxx instruction
$E9A    $28EB   CALL     $8EB            ; Call subroutine at 8EB
$E9C    $90E9   UNKNOWN  $90E9           ; Unknown 9xxx instruction
$E9E    $DF8B   DRW      VF, V8, #B      ; Draw 11-byte sprite at VF, V8
$EA0    $24B7   CALL     $4B7            ; Call subroutine at 4B7
$EA2    $6396   LD       V3, #96         ; Load 150 into V3
$EA4    $A3C3   LD       I, $3C3         ; Load 3C3 into I
$EA6    $0576   SYS      $576            ; System call to 576
$EA8    $0872   SYS      $872            ; System call to 872
$EAA    $87AA   UNKNOWN  87AA            ; Unknown 8xxx instruction
$EAC    $72DF   ADD      V2, #DF         ; Add 223 to V2
$EAE    $35A8   SE       V5, #A8         ; Skip if V5 == 168
$EB0    $7FDE   ADD      VF, #DE         ; Add 222 to VF
$EB2    $EC04   UNKNOWN  $EC04           ; Unknown Exxx instruction
$EB4    $FE00   UNKNOWN  FE00            ; Unknown Fxxx instruction
$EB6    $8A40   LD       VA, V4          ; VA = V4
$EB8    $D3A4   DRW      V3, VA, #4      ; Draw 4-byte sprite at V3, VA
$EBA    $B717   JP       V0, $717        ; Jump to V0 + 717
$EBC    $8938   UNKNOWN  8938            ; Unknown 8xxx instruction
$EBE    $1CAC   JP       $CAC            ; Jump to CAC
$EC0    $8EFD   UNKNOWN  8EFD            ; Unknown 8xxx instruction
$EC2    $B296   JP       V0, $296        ; Jump to V0 + 296
$EC4    $E2B9   UNKNOWN  $E2B9           ; Unknown Exxx instruction
$EC6    $9571   UNKNOWN  $9571           ; Unknown 9xxx instruction
$EC8    $3372   SE       V3, #72         ; Skip if V3 == 114
$ECA    $3E09   SE       VE, #09         ; Skip if VE == 9
$ECC    $B61C   JP       V0, $61C        ; Jump to V0 + 61C
$ECE    $E8F5   UNKNOWN  $E8F5           ; Unknown Exxx instruction
$ED0    $C2FF   RND      V2, #FF         ; V2 = random & FF
$ED2    $0B32   SYS      $B32            ; System call to B32
$ED4    $2F7B   CALL     $F7B            ; Call subroutine at F7B
$ED6    $F89D   UNKNOWN  F89D            ; Unknown Fxxx instruction
$ED8    $FDB2   UNKNOWN  FDB2            ; Unknown Fxxx instruction
$EDA    $B079   JP       V0, $079        ; Jump to V0 + 079
$EDC    $9C36   UNKNOWN  $9C36           ; Unknown 9xxx instruction
$EDE    $3490   SE       V4, #90         ; Skip if V4 == 144
$EE0    $7892   ADD      V8, #92         ; Add 146 to V8
$EE2    $B6A1   JP       V0, $6A1        ; Jump to V0 + 6A1
$EE4    $F922   UNKNOWN  F922            ; Unknown Fxxx instruction
$EE6    $55B4   UNKNOWN  $55B4           ; Unknown 5xxx instruction
$EE8    $9EB4   UNKNOWN  $9EB4           ; Unknown 9xxx instruction
$EEA    $EB9B   UNKNOWN  $EB9B           ; Unknown Exxx instruction
$EEC    $0609   SYS      $609            ; System call to 609
$EEE    $4244   SNE      V2, #44         ; Skip if V2 != 68
$EF0    $C61B   RND      V6, #1B         ; V6 = random & 1B
$EF2    $AAB8   LD       I, $AB8         ; Load AB8 into I
$EF4    $F7EF   UNKNOWN  F7EF            ; Unknown Fxxx instruction
$EF6    $382E   SE       V8, #2E         ; Skip if V8 == 46
$EF8    $1581   JP       $581            ; Jump to 581
$EFA    $A88A   LD       I, $88A         ; Load 88A into I
$EFC    $8B18   UNKNOWN  8B18            ; Unknown 8xxx instruction
$EFE    $3D38   SE       VD, #38         ; Skip if VD == 56
$F00    $285D   CALL     $85D            ; Call subroutine at 85D
$F02    $4787   SNE      V7, #87         ; Skip if V7 != 135
$F04    $55FA   UNKNOWN  $55FA           ; Unknown 5xxx instruction
$F06    $F0D7   UNKNOWN  F0D7            ; Unknown Fxxx instruction
$F08    $8F27   SUBN     VF, V2          ; VF = V2 - VF, VF = !borrow
$F0A    $3C79   SE       VC, #79         ; Skip if VC == 121
$F0C    $FA94   UNKNOWN  FA94            ; Unknown Fxxx instruction
$F0E    $78E4   ADD      V8, #E4         ; Add 228 to V8
$F10    $50BB   UNKNOWN  $50BB           ; Unknown 5xxx instruction
$F12    $407F   SNE      V0, #7F         ; Skip if V0 != 127
$F14    $2946   CALL     $946            ; Call subroutine at 946
$F16    $C4D3   RND      V4, #D3         ; V4 = random & D3
$F18    $F2C9   UNKNOWN  F2C9            ; Unknown Fxxx instruction
$F1A    $D71E   DRW      V7, V1, #E      ; Draw 14-byte sprite at V7, V1
$F1C    $B827   JP       V0, $827        ; Jump to V0 + 827
$F1E    $00C8   SYS      $0C8            ; System call to 0C8
$F20    $D45E   DRW      V4, V5, #E      ; Draw 14-byte sprite at V4, V5
$F22    $8150   LD       V1, V5          ; V1 = V5
$F24    $2498   CALL     $498            ; Call subroutine at 498
$F26    $C0AC   RND      V0, #AC         ; V0 = random & AC
$F28    $2F6C   CALL     $F6C            ; Call subroutine at F6C
$F2A    $A161   LD       I, $161         ; Load 161 into I
$F2C    $C524   RND      V5, #24         ; V5 = random & 24
$F2E    $CBB1   RND      VB, #B1         ; VB = random & B1
$F30    $A141   LD       I, $141         ; Load 141 into I
$F32    $4E53   SNE      VE, #53         ; Skip if VE != 83
$F34    $092E   SYS      $92E            ; System call to 92E
$F36    $A53D   LD       I, $53D         ; Load 53D into I
$F38    $87E9   UNKNOWN  87E9            ; Unknown 8xxx instruction
$F3A    $3110   SE       V1, #10         ; Skip if V1 == 16
$F3C    $69E9   LD       V9, #E9         ; Load 233 into V9
$F3E    $769D   ADD      V6, #9D         ; Add 157 to V6
$F40    $3322   SE       V3, #22         ; Skip if V3 == 34
$F42    $A02D   LD       I, $02D         ; Load 02D into I
$F44    $EF19   UNKNOWN  $EF19           ; Unknown Exxx instruction
$F46    $4A1B   SNE      VA, #1B         ; Skip if VA != 27
$F48    $BD62   JP       V0, $D62        ; Jump to V0 + D62
$F4A    $7AF8   ADD      VA, #F8         ; Add 248 to VA
$F4C    $0768   SYS      $768            ; System call to 768
$F4E    $EE31   UNKNOWN  $EE31           ; Unknown Exxx instruction
$F50    $3821   SE       V8, #21         ; Skip if V8 == 33
$F52    $40EE   SNE      V0, #EE         ; Skip if V0 != 238
$F54    $1EBD   JP       $EBD            ; Jump to EBD
$F56    $89A8   UNKNOWN  89A8            ; Unknown 8xxx instruction
$F58    $FA72   UNKNOWN  FA72            ; Unknown Fxxx instruction
$F5A    $0057   SYS      $057            ; System call to 057
$F5C    $002D   SYS      $02D            ; System call to 02D
$F5E    $9FA8   UNKNOWN  $9FA8           ; Unknown 9xxx instruction
$F60    $D2DF   DRW      V2, VD, #F      ; Draw 15-byte sprite at V2, VD
$F62    $8CBA   UNKNOWN  8CBA            ; Unknown 8xxx instruction
$F64    $0A5E   SYS      $A5E            ; System call to A5E
$F66    $4252   SNE      V2, #52         ; Skip if V2 != 82
$F68    $7B0C   ADD      VB, #0C         ; Add 12 to VB
$F6A    $B211   JP       V0, $211        ; Jump to V0 + 211
$F6C    $5BD5   UNKNOWN  $5BD5           ; Unknown 5xxx instruction
$F6E    $EBEE   UNKNOWN  $EBEE           ; Unknown Exxx instruction
$F70    $33D6   SE       V3, #D6         ; Skip if V3 == 214
$F72    $309E   SE       V0, #9E         ; Skip if V0 == 158
$F74    $565A   UNKNOWN  $565A           ; Unknown 5xxx instruction
$F76    $A71C   LD       I, $71C         ; Load 71C into I
$F78    $7F2C   ADD      VF, #2C         ; Add 44 to VF
$F7A    $E212   UNKNOWN  $E212           ; Unknown Exxx instruction
$F7C    $312A   SE       V1, #2A         ; Skip if V1 == 42
$F7E    $A058   LD       I, $058         ; Load 058 into I
$F80    $4C6B   SNE      VC, #6B         ; Skip if VC != 107
$F82    $FEAA   UNKNOWN  FEAA            ; Unknown Fxxx instruction
$F84    $0651   SYS      $651            ; System call to 651
$F86    $1581   JP       $581            ; Jump to 581
$F88    $09D5   SYS      $9D5            ; System call to 9D5
$F8A    $BC25   JP       V0, $C25        ; Jump to V0 + C25
$F8C    $B578   JP       V0, $578        ; Jump to V0 + 578
$F8E    $A547   LD       I, $547         ; Load 547 into I
$F90    $CF0A   RND      VF, #0A         ; VF = random & 0A
$F92    $5F59   UNKNOWN  $5F59           ; Unknown 5xxx instruction
$F94    $B315   JP       V0, $315        ; Jump to V0 + 315
$F96    $50BC   UNKNOWN  $50BC           ; Unknown 5xxx instruction
$F98    $A408   LD       I, $408         ; Load 408 into I
$F9A    $7401   ADD      V4, #01         ; Add 1 to V4
$F9C    $2ABF   CALL     $ABF            ; Call subroutine at ABF
$F9E    $8B5F   UNKNOWN  8B5F            ; Unknown 8xxx instruction
$FA0    $EEBE   UNKNOWN  $EEBE           ; Unknown Exxx instruction
$FA2    $A782   LD       I, $782         ; Load 782 into I
$FA4    $4DFB   SNE      VD, #FB         ; Skip if VD != 251
$FA6    $87FF   UNKNOWN  87FF            ; Unknown 8xxx instruction
$FA8    $D38B   DRW      V3, V8, #B      ; Draw 11-byte sprite at V3, V8
$FAA    $6298   LD       V2, #98         ; Load 152 into V2
$FAC    $C86C   RND      V8, #6C         ; V8 = random & 6C
$FAE    $309D   SE       V0, #9D         ; Skip if V0 == 157
$FB0    $C954   RND      V9, #54         ; V9 = random & 54
$FB2    $636B   LD       V3, #6B         ; Load 107 into V3
$FB4    $9FF8   UNKNOWN  $9FF8           ; Unknown 9xxx instruction
$FB6    $0AA3   SYS      $AA3            ; System call to AA3
$FB8    $B2ED   JP       V0, $2ED        ; Jump to V0 + 2ED
$FBA    $EDEC   UNKNOWN  $EDEC           ; Unknown Exxx instruction
$FBC    $55F2   UNKNOWN  $55F2           ; Unknown 5xxx instruction
$FBE    $0A24   SYS      $A24            ; System call to A24
$FC0    $838C   UNKNOWN  838C            ; Unknown 8xxx instruction
$FC2    $372F   SE       V7, #2F         ; Skip if V7 == 47
$FC4    $F2ED   UNKNOWN  F2ED            ; Unknown Fxxx instruction
$FC6    $5740   SE       V7, V4          ; Skip if V7 == V4
$FC8    $2E03   CALL     $E03            ; Call subroutine at E03
$FCA    $3E5D   SE       VE, #5D         ; Skip if VE == 93
$FCC    $DB3A   DRW      VB, V3, #A      ; Draw 10-byte sprite at VB, V3
$FCE    $F773   UNKNOWN  F773            ; Unknown Fxxx instruction
$FD0    $3783   SE       V7, #83         ; Skip if V7 == 131
$FD2    $7929   ADD      V9, #29         ; Add 41 to V9
$FD4    $86E3   XOR      V6, VE          ; V6 ^= VE
$FD6    $C729   RND      V7, #29         ; V7 = random & 29
$FD8    $6969   LD       V9, #69         ; Load 105 into V9
$FDA    $FDA9   UNKNOWN  FDA9            ; Unknown Fxxx instruction
$FDC    $780E   ADD      V8, #0E         ; Add 14 to V8
$FDE    $1218   JP       $218            ; Jump to 218
$FE0    $232E   CALL     $32E            ; Call subroutine at 32E
$FE2    $3BD5   SE       VB, #D5         ; Skip if VB == 213
$FE4    $7351   ADD      V3, #51         ; Add 81 to V3
$FE6    $1844   JP       $844            ; Jump to 844
$FE8    $CD07   RND      VD, #07         ; VD = random & 07
$FEA    $78AB   ADD      V8, #AB         ; Add 171 to V8
$FEC    $4881   SNE      V8, #81         ; Skip if V8 != 129
$FEE    $1E40   JP       $E40            ; Jump to E40
$FF0    $15AA   JP       $5AA            ; Jump to 5AA
$FF2    $2768   CALL     $768            ; Call subroutine at 768
$FF4    $7A40   ADD      VA, #40         ; Add 64 to VA
$FF6    $E656   UNKNOWN  $E656           ; Unknown Exxx instruction
$FF8    $C1B3   RND      V1, #B3         ; V1 = random & B3
$FFA    $F143   UNKNOWN  F143            ; Unknown Fxxx instruction
$FFC    $FE41   UNKNOWN  FE41            ; Unknown Fxxx instruction
$FFE    $FF5C   UNKNOWN  FF5C            ; Unknown Fxxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 463 (25.8%)
  JP      : 222 (12.4%)
  LD      : 211 (11.8%)
  SYS     : 208 (11.6%)
  SNE     : 120 ( 6.7%)
  ADD     : 113 ( 6.3%)
  SE      : 112 ( 6.2%)
  CALL    : 101 ( 5.6%)
  DRW     : 100 ( 5.6%)
  RND     :  96 ( 5.4%)
  XOR     :  10 ( 0.6%)
  SHL     :   9 ( 0.5%)
  SUB     :   7 ( 0.4%)
  OR      :   6 ( 0.3%)
  AND     :   5 ( 0.3%)
  SUBN    :   5 ( 0.3%)
  SHR     :   3 ( 0.2%)
  SKP     :   1 ( 0.1%)

Memory Operations: 324 (18.1%)
Arithmetic Operations: 146 (8.1%)
