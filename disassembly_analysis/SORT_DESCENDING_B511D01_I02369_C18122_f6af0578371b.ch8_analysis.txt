
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B511D01_I02369_C18122_f6af0578371b.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 511
Instance: 2369
Direction: descending
Final Array: [160, 160, 160, 160, 160, 160, 94, 65]
Operations: R:0 W:6 C:205 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 202
Sort Array References:
  $214: LD I, $C72 ; Load C72 into I
  $236: LD I, $159 ; Load 159 into I
  $23A: LD I, $0A0 ; Load 0A0 into I
  $23C: LD I, $0A0 ; Load 0A0 into I
  $23E: LD I, $0A0 ; Load 0A0 into I
  $240: LD I, $0A0 ; Load 0A0 into I
  $242: LD I, $0A0 ; Load 0A0 into I
  $244: LD I, $0A0 ; Load 0A0 into I
  $246: LD I, $0A0 ; Load 0A0 into I
  $248: LD I, $0A0 ; Load 0A0 into I
  $24A: LD I, $0A0 ; Load 0A0 into I
  $24C: LD I, $0A0 ; Load 0A0 into I
  $24E: LD I, $0A0 ; Load 0A0 into I
  $250: LD I, $0A0 ; Load 0A0 into I
  $252: LD I, $0A0 ; Load 0A0 into I
  $254: LD I, $0A0 ; Load 0A0 into I
  $256: LD I, $0A0 ; Load 0A0 into I
  $258: LD I, $0A0 ; Load 0A0 into I
  $25A: LD I, $0A0 ; Load 0A0 into I
  $25C: LD I, $0A0 ; Load 0A0 into I
  $25E: LD I, $0A0 ; Load 0A0 into I
  $260: LD I, $0A0 ; Load 0A0 into I
  $262: LD I, $0A0 ; Load 0A0 into I
  $264: LD I, $0A0 ; Load 0A0 into I
  $266: LD I, $0A0 ; Load 0A0 into I
  $268: LD I, $0A0 ; Load 0A0 into I
  $26A: LD I, $0A0 ; Load 0A0 into I
  $26C: LD I, $0A0 ; Load 0A0 into I
  $26E: LD I, $0A0 ; Load 0A0 into I
  $270: LD I, $0A0 ; Load 0A0 into I
  $272: LD I, $0A0 ; Load 0A0 into I
  $274: LD I, $0A0 ; Load 0A0 into I
  $276: LD I, $0A0 ; Load 0A0 into I
  $278: LD I, $0A0 ; Load 0A0 into I
  $27A: LD I, $0A0 ; Load 0A0 into I
  $27C: LD I, $0A0 ; Load 0A0 into I
  $27E: LD I, $0A0 ; Load 0A0 into I
  $280: LD I, $0A0 ; Load 0A0 into I
  $282: LD I, $0A0 ; Load 0A0 into I
  $284: LD I, $0A0 ; Load 0A0 into I
  $286: LD I, $0A0 ; Load 0A0 into I
  $288: LD I, $0A0 ; Load 0A0 into I
  $28A: LD I, $0A0 ; Load 0A0 into I
  $28C: LD I, $0A0 ; Load 0A0 into I
  $28E: LD I, $0A0 ; Load 0A0 into I
  $290: LD I, $0A0 ; Load 0A0 into I
  $292: LD I, $0A0 ; Load 0A0 into I
  $294: LD I, $0A0 ; Load 0A0 into I
  $296: LD I, $0A0 ; Load 0A0 into I
  $298: LD I, $0A0 ; Load 0A0 into I
  $29A: LD I, $0A0 ; Load 0A0 into I
  $29C: LD I, $0A0 ; Load 0A0 into I
  $29E: LD I, $0A0 ; Load 0A0 into I
  $2A0: LD I, $0A0 ; Load 0A0 into I
  $2A2: LD I, $0A0 ; Load 0A0 into I
  $2A4: LD I, $0A0 ; Load 0A0 into I
  $2A6: LD I, $0A0 ; Load 0A0 into I
  $2A8: LD I, $0A0 ; Load 0A0 into I
  $2AA: LD I, $0A0 ; Load 0A0 into I
  $2AC: LD I, $0A0 ; Load 0A0 into I
  $2AE: LD I, $0A0 ; Load 0A0 into I
  $2B0: LD I, $0A0 ; Load 0A0 into I
  $2B2: LD I, $0A0 ; Load 0A0 into I
  $2B4: LD I, $0A0 ; Load 0A0 into I
  $2B6: LD I, $0A0 ; Load 0A0 into I
  $2B8: LD I, $0A0 ; Load 0A0 into I
  $2BA: LD I, $0A0 ; Load 0A0 into I
  $2BC: LD I, $0A0 ; Load 0A0 into I
  $2BE: LD I, $0A0 ; Load 0A0 into I
  $2C0: LD I, $0A0 ; Load 0A0 into I
  $2C2: LD I, $0A0 ; Load 0A0 into I
  $2C4: LD I, $0A0 ; Load 0A0 into I
  $2C6: LD I, $0A0 ; Load 0A0 into I
  $2C8: LD I, $0A0 ; Load 0A0 into I
  $2CA: LD I, $0A0 ; Load 0A0 into I
  $2CC: LD I, $0A0 ; Load 0A0 into I
  $2CE: LD I, $0A0 ; Load 0A0 into I
  $2D0: LD I, $0A0 ; Load 0A0 into I
  $2D2: LD I, $0A0 ; Load 0A0 into I
  $2D4: LD I, $0A0 ; Load 0A0 into I
  $2D6: LD I, $0A0 ; Load 0A0 into I
  $2D8: LD I, $0A0 ; Load 0A0 into I
  $2DA: LD I, $0A0 ; Load 0A0 into I
  $2DC: LD I, $0A0 ; Load 0A0 into I
  $2DE: LD I, $0A0 ; Load 0A0 into I
  $2E0: LD I, $0A0 ; Load 0A0 into I
  $2E2: LD I, $0A0 ; Load 0A0 into I
  $2E4: LD I, $0A0 ; Load 0A0 into I
  $2E6: LD I, $0A0 ; Load 0A0 into I
  $2E8: LD I, $0A0 ; Load 0A0 into I
  $2EA: LD I, $0A0 ; Load 0A0 into I
  $2EC: LD I, $0A0 ; Load 0A0 into I
  $2EE: LD I, $0A0 ; Load 0A0 into I
  $2F0: LD I, $0A0 ; Load 0A0 into I
  $2F2: LD I, $0A0 ; Load 0A0 into I
  $2F4: LD I, $0A0 ; Load 0A0 into I
  $2F6: LD I, $0A0 ; Load 0A0 into I
  $2F8: LD I, $0A0 ; Load 0A0 into I
  $2FA: LD I, $0A0 ; Load 0A0 into I
  $2FC: LD I, $0A0 ; Load 0A0 into I
  $2FE: LD I, $0A0 ; Load 0A0 into I
  $300: LD I, $0A0 ; Load 0A0 into I
  $302: LD I, $0A0 ; Load 0A0 into I
  $304: LD I, $0A0 ; Load 0A0 into I
  $366: LD I, $651 ; Load 651 into I
  $37E: LD I, $622 ; Load 622 into I
  $3C2: LD I, $221 ; Load 221 into I
  $3FC: LD I, $CBC ; Load CBC into I
  $42A: LD I, $B35 ; Load B35 into I
  $478: LD I, $7D9 ; Load 7D9 into I
  $4AA: LD I, $236 ; Load 236 into I
  $4B8: LD I, $7A3 ; Load 7A3 into I
  $4E6: LD I, $4F1 ; Load 4F1 into I
  $502: LD I, $7B3 ; Load 7B3 into I
  $510: LD I, $6BD ; Load 6BD into I
  $514: LD I, $49F ; Load 49F into I
  $51A: LD I, $3C3 ; Load 3C3 into I
  $538: LD I, $3B1 ; Load 3B1 into I
  $548: LD I, $16B ; Load 16B into I
  $54C: LD I, $B36 ; Load B36 into I
  $580: LD I, $CE9 ; Load CE9 into I
  $58E: LD I, $A52 ; Load A52 into I
  $590: LD I, $05E ; Load 05E into I
  $5A6: LD I, $D93 ; Load D93 into I
  $5AE: LD I, $ABE ; Load ABE into I
  $600: LD I, $5FC ; Load 5FC into I
  $620: LD I, $619 ; Load 619 into I
  $628: LD I, $487 ; Load 487 into I
  $640: LD I, $C0D ; Load C0D into I
  $6C4: LD I, $BAE ; Load BAE into I
  $6E6: LD I, $285 ; Load 285 into I
  $73E: LD I, $3E9 ; Load 3E9 into I
  $754: LD I, $5F8 ; Load 5F8 into I
  $78E: LD I, $FA5 ; Load FA5 into I
  $7BA: LD I, $777 ; Load 777 into I
  $7D6: LD I, $443 ; Load 443 into I
  $7D8: LD I, $486 ; Load 486 into I
  $7DC: LD I, $847 ; Load 847 into I
  $82C: LD I, $365 ; Load 365 into I
  $832: LD I, $217 ; Load 217 into I
  $840: LD I, $2F1 ; Load 2F1 into I
  $85C: LD I, $301 ; Load 301 into I
  $862: LD I, $9FC ; Load 9FC into I
  $880: LD I, $8CB ; Load 8CB into I
  $8C6: LD I, $C14 ; Load C14 into I
  $8D0: LD I, $70B ; Load 70B into I
  $8E4: LD I, $8E9 ; Load 8E9 into I
  $900: LD I, $791 ; Load 791 into I
  $91A: LD I, $DC9 ; Load DC9 into I
  $934: LD I, $4F8 ; Load 4F8 into I
  $94A: LD I, $799 ; Load 799 into I
  $982: LD I, $C3D ; Load C3D into I
  $992: LD I, $64D ; Load 64D into I
  $9CA: LD I, $E2E ; Load E2E into I
  $9F8: LD I, $D2C ; Load D2C into I
  $A02: LD I, $7C9 ; Load 7C9 into I
  $A0C: LD I, $B77 ; Load B77 into I
  $A16: LD I, $339 ; Load 339 into I
  $A2C: LD I, $094 ; Load 094 into I
  $A42: LD I, $C2F ; Load C2F into I
  $A4A: LD I, $92C ; Load 92C into I
  $A52: LD I, $EEE ; Load EEE into I
  $A88: LD I, $99D ; Load 99D into I
  $A8A: LD I, $EA7 ; Load EA7 into I
  $ABA: LD I, $80E ; Load 80E into I
  $AD6: LD I, $7BA ; Load 7BA into I
  $B38: LD I, $29A ; Load 29A into I
  $B6E: LD I, $67D ; Load 67D into I
  $B94: LD I, $D89 ; Load D89 into I
  $B98: LD I, $476 ; Load 476 into I
  $BCC: LD I, $77B ; Load 77B into I
  $C16: LD I, $39C ; Load 39C into I
  $C1A: LD I, $5F2 ; Load 5F2 into I
  $C1E: LD I, $2CC ; Load 2CC into I
  $C24: LD I, $F72 ; Load F72 into I
  $C2C: LD I, $ABF ; Load ABF into I
  $C36: LD I, $019 ; Load 019 into I
  $C6A: LD [I], V0 ; Store V0-V0 at I
  $C8C: LD I, $E1C ; Load E1C into I
  $CA8: LD I, $5AA ; Load 5AA into I
  $CB6: LD I, $5F8 ; Load 5F8 into I
  $D46: LD I, $116 ; Load 116 into I
  $D60: LD I, $4A8 ; Load 4A8 into I
  $D6A: LD I, $C88 ; Load C88 into I
  $DD4: LD I, $A37 ; Load A37 into I
  $DDA: LD I, $FB3 ; Load FB3 into I
  $E04: LD I, $2ED ; Load 2ED into I
  $E0C: LD I, $C7E ; Load C7E into I
  $E70: LD I, $B52 ; Load B52 into I
  $E78: LD I, $448 ; Load 448 into I
  $E86: LD I, $1A6 ; Load 1A6 into I
  $EAA: LD I, $389 ; Load 389 into I
  $EDE: LD I, $985 ; Load 985 into I
  $EF0: LD I, $49E ; Load 49E into I
  $F0E: LD I, $FB1 ; Load FB1 into I
  $F18: LD I, $BB3 ; Load BB3 into I
  $F42: LD I, $851 ; Load 851 into I
  $F54: LD I, $F7C ; Load F7C into I
  $FAE: LD I, $C96 ; Load C96 into I
  $FB0: LD I, $DDD ; Load DDD into I
  $FB2: LD I, $C91 ; Load C91 into I
  $FE6: LD I, $BAC ; Load BAC into I

CONTROL FLOW ANALYSIS:
Jumps: 235
Calls: 108
Branches: 216
Loops: 133
Loop Structures:
  $220 -> $01E (backward jump)
  $3A4 -> $1C4 (backward jump)
  $400 -> $368 (backward jump)
  $416 -> $1B9 (backward jump)
  $418 -> $036 (backward jump)
  $4AE -> $13B (backward jump)
  $4F2 -> $4EB (backward jump)
  $55A -> $2D8 (backward jump)
  $560 -> $37C (backward jump)
  $57A -> $1D3 (backward jump)
  $596 -> $19E (backward jump)
  $5A4 -> $0A7 (backward jump)
  $5CC -> $4A6 (backward jump)
  $5D8 -> $187 (backward jump)
  $5FE -> $317 (backward jump)
  $644 -> $1DD (backward jump)
  $65C -> $638 (backward jump)
  $69E -> $585 (backward jump)
  $6A6 -> $106 (backward jump)
  $6CC -> $0B1 (backward jump)
  $6DA -> $3B1 (backward jump)
  $6FE -> $6CD (backward jump)
  $738 -> $364 (backward jump)
  $776 -> $42F (backward jump)
  $788 -> $4AC (backward jump)
  $7AA -> $45A (backward jump)
  $7E0 -> $2CA (backward jump)
  $7E2 -> $4A5 (backward jump)
  $7FA -> $3C0 (backward jump)
  $800 -> $4BD (backward jump)
  $826 -> $0C4 (backward jump)
  $828 -> $4EB (backward jump)
  $84A -> $7D3 (backward jump)
  $860 -> $79C (backward jump)
  $888 -> $0FB (backward jump)
  $8A0 -> $0B0 (backward jump)
  $8CA -> $133 (backward jump)
  $8F0 -> $8E4 (backward jump)
  $912 -> $15D (backward jump)
  $920 -> $115 (backward jump)
  $952 -> $56F (backward jump)
  $960 -> $4C1 (backward jump)
  $96A -> $958 (backward jump)
  $98C -> $804 (backward jump)
  $990 -> $5B1 (backward jump)
  $9A8 -> $629 (backward jump)
  $9D0 -> $446 (backward jump)
  $9D6 -> $14F (backward jump)
  $9F2 -> $7FC (backward jump)
  $A3E -> $568 (backward jump)
  $A48 -> $611 (backward jump)
  $A6C -> $248 (backward jump)
  $A86 -> $5A8 (backward jump)
  $A92 -> $A11 (backward jump)
  $A98 -> $49C (backward jump)
  $AB6 -> $2CE (backward jump)
  $ABC -> $405 (backward jump)
  $AC2 -> $134 (backward jump)
  $AC8 -> $4A5 (backward jump)
  $AD4 -> $994 (backward jump)
  $AEA -> $06A (backward jump)
  $AF8 -> $7A8 (backward jump)
  $AFC -> $4D9 (backward jump)
  $B06 -> $634 (backward jump)
  $B0C -> $0CB (backward jump)
  $B2C -> $184 (backward jump)
  $B30 -> $165 (backward jump)
  $B36 -> $6D7 (backward jump)
  $B3A -> $9B5 (backward jump)
  $B50 -> $57E (backward jump)
  $B60 -> $451 (backward jump)
  $B90 -> $4B9 (backward jump)
  $BA2 -> $52F (backward jump)
  $BB8 -> $48B (backward jump)
  $BD2 -> $858 (backward jump)
  $BD8 -> $294 (backward jump)
  $BDA -> $9B2 (backward jump)
  $BDC -> $86B (backward jump)
  $BF4 -> $A39 (backward jump)
  $C10 -> $677 (backward jump)
  $C12 -> $44C (backward jump)
  $C3C -> $811 (backward jump)
  $C40 -> $4A5 (backward jump)
  $C42 -> $C31 (backward jump)
  $C48 -> $017 (backward jump)
  $C74 -> $458 (backward jump)
  $C78 -> $5B8 (backward jump)
  $C7A -> $BA8 (backward jump)
  $C80 -> $32D (backward jump)
  $C92 -> $696 (backward jump)
  $C9A -> $496 (backward jump)
  $C9C -> $4E6 (backward jump)
  $CCE -> $CB4 (backward jump)
  $CD8 -> $471 (backward jump)
  $CF0 -> $41E (backward jump)
  $D06 -> $635 (backward jump)
  $D0A -> $5F0 (backward jump)
  $D4C -> $968 (backward jump)
  $D7E -> $741 (backward jump)
  $D92 -> $3C0 (backward jump)
  $DA2 -> $4CF (backward jump)
  $DB4 -> $C3F (backward jump)
  $DBE -> $A66 (backward jump)
  $DC4 -> $71E (backward jump)
  $DE2 -> $9BD (backward jump)
  $DFC -> $178 (backward jump)
  $DFE -> $4B6 (backward jump)
  $E38 -> $76D (backward jump)
  $E4C -> $B98 (backward jump)
  $E52 -> $509 (backward jump)
  $E5A -> $665 (backward jump)
  $E5C -> $6F8 (backward jump)
  $E66 -> $001 (backward jump)
  $E6C -> $BE3 (backward jump)
  $E6E -> $ADD (backward jump)
  $E76 -> $8C8 (backward jump)
  $E7C -> $3B3 (backward jump)
  $E90 -> $095 (backward jump)
  $E92 -> $57D (backward jump)
  $E9E -> $B93 (backward jump)
  $EDC -> $BA8 (backward jump)
  $EE8 -> $034 (backward jump)
  $EFE -> $642 (backward jump)
  $F04 -> $023 (backward jump)
  $F0A -> $F02 (backward jump)
  $F2E -> $E94 (backward jump)
  $F48 -> $EEB (backward jump)
  $F5E -> $72B (backward jump)
  $F62 -> $381 (backward jump)
  $F66 -> $B09 (backward jump)
  $F80 -> $0FF (backward jump)
  $FB4 -> $904 (backward jump)
  $FDC -> $F59 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $BBA6   JP       V0, $BA6        ; Jump to V0 + BA6
$202    $F70F   UNKNOWN  F70F            ; Unknown Fxxx instruction
$204    $2947   CALL     $947            ; Call subroutine at 947
$206    $37FD   SE       V7, #FD         ; Skip if V7 == 253
$208    $8BC8   UNKNOWN  8BC8            ; Unknown 8xxx instruction
$20A    $6660   LD       V6, #60         ; Load 96 into V6
$20C    $B9D2   JP       V0, $9D2        ; Jump to V0 + 9D2
$20E    $B8F0   JP       V0, $8F0        ; Jump to V0 + 8F0
$210    $D7D2   DRW      V7, VD, #2      ; Draw 2-byte sprite at V7, VD
$212    $6EEE   LD       VE, #EE         ; Load 238 into VE
$214    $AC72   LD       I, $C72         ; Load C72 into I
$216    $72AB   ADD      V2, #AB         ; Add 171 to V2
$218    $1F20   JP       $F20            ; Jump to F20
$21A    $639F   LD       V3, #9F         ; Load 159 into V3
$21C    $BDCF   JP       V0, $DCF        ; Jump to V0 + DCF
$21E    $7084   ADD      V0, #84         ; Add 132 to V0
$220    $B01E   JP       V0, $01E        ; Jump to V0 + 01E
$222    $5BDE   UNKNOWN  $5BDE           ; Unknown 5xxx instruction
$224    $2AE4   CALL     $AE4            ; Call subroutine at AE4
$226    $0A6D   SYS      $A6D            ; System call to A6D
$228    $C35A   RND      V3, #5A         ; V3 = random & 5A
$22A    $0B67   SYS      $B67            ; System call to B67
$22C    $0121   SYS      $121            ; System call to 121
$22E    $5F49   UNKNOWN  $5F49           ; Unknown 5xxx instruction
$230    $3D9C   SE       VD, #9C         ; Skip if VD == 156
$232    $18C0   JP       $8C0            ; Jump to 8C0
$234    $7125   ADD      V1, #25         ; Add 37 to V1
$236    $A159   LD       I, $159         ; Load 159 into I
$238    $743E   ADD      V4, #3E         ; Add 62 to V4
$23A    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$23C    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$23E    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$240    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$242    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$244    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$246    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$248    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$24A    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$24C    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$24E    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$250    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$252    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$254    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$256    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$258    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$25A    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$25C    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$25E    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$260    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$262    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$264    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$266    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$268    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$26A    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$26C    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$26E    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$270    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$272    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$274    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$276    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$278    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$27A    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$27C    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$27E    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$280    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$282    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$284    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$286    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$288    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$28A    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$28C    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$28E    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$290    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$292    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$294    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$296    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$298    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$29A    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$29C    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$29E    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2A0    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2A2    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2A4    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2A6    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2A8    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2AA    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2AC    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2AE    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2B0    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2B2    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2B4    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2B6    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2B8    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2BA    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2BC    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2BE    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2C0    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2C2    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2C4    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2C6    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2C8    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2CA    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2CC    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2CE    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2D0    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2D2    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2D4    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2D6    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2D8    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2DA    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2DC    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2DE    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2E0    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2E2    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2E4    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2E6    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2E8    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2EA    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2EC    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2EE    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2F0    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2F2    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2F4    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2F6    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2F8    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2FA    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2FC    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$2FE    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$300    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$302    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$304    $A0A0   LD       I, $0A0         ; Load 0A0 into I
$306    $5E41   UNKNOWN  $5E41           ; Unknown 5xxx instruction
$308    $1F1A   JP       $F1A            ; Jump to F1A
$30A    $985D   UNKNOWN  $985D           ; Unknown 9xxx instruction
$30C    $B9A9   JP       V0, $9A9        ; Jump to V0 + 9A9
$30E    $70C2   ADD      V0, #C2         ; Add 194 to V0
$310    $E8DB   UNKNOWN  $E8DB           ; Unknown Exxx instruction
$312    $708C   ADD      V0, #8C         ; Add 140 to V0
$314    $063D   SYS      $63D            ; System call to 63D
$316    $7FA5   ADD      VF, #A5         ; Add 165 to VF
$318    $F731   UNKNOWN  F731            ; Unknown Fxxx instruction
$31A    $E0B9   UNKNOWN  $E0B9           ; Unknown Exxx instruction
$31C    $9538   UNKNOWN  $9538           ; Unknown 9xxx instruction
$31E    $18F0   JP       $8F0            ; Jump to 8F0
$320    $9937   UNKNOWN  $9937           ; Unknown 9xxx instruction
$322    $0019   SYS      $019            ; System call to 019
$324    $E2D4   UNKNOWN  $E2D4           ; Unknown Exxx instruction
$326    $2574   CALL     $574            ; Call subroutine at 574
$328    $CDB4   RND      VD, #B4         ; VD = random & B4
$32A    $B898   JP       V0, $898        ; Jump to V0 + 898
$32C    $9611   UNKNOWN  $9611           ; Unknown 9xxx instruction
$32E    $072D   SYS      $72D            ; System call to 72D
$330    $68B4   LD       V8, #B4         ; Load 180 into V8
$332    $71B7   ADD      V1, #B7         ; Add 183 to V1
$334    $CFFD   RND      VF, #FD         ; VF = random & FD
$336    $F94E   UNKNOWN  F94E            ; Unknown Fxxx instruction
$338    $3459   SE       V4, #59         ; Skip if V4 == 89
$33A    $9D6A   UNKNOWN  $9D6A           ; Unknown 9xxx instruction
$33C    $F212   UNKNOWN  F212            ; Unknown Fxxx instruction
$33E    $F0FA   UNKNOWN  F0FA            ; Unknown Fxxx instruction
$340    $6264   LD       V2, #64         ; Load 100 into V2
$342    $C086   RND      V0, #86         ; V0 = random & 86
$344    $E968   UNKNOWN  $E968           ; Unknown Exxx instruction
$346    $75C7   ADD      V5, #C7         ; Add 199 to V5
$348    $B4C4   JP       V0, $4C4        ; Jump to V0 + 4C4
$34A    $2786   CALL     $786            ; Call subroutine at 786
$34C    $00B7   SYS      $0B7            ; System call to 0B7
$34E    $E267   UNKNOWN  $E267           ; Unknown Exxx instruction
$350    $5FC6   UNKNOWN  $5FC6           ; Unknown 5xxx instruction
$352    $F195   UNKNOWN  F195            ; Unknown Fxxx instruction
$354    $2404   CALL     $404            ; Call subroutine at 404
$356    $792C   ADD      V9, #2C         ; Add 44 to V9
$358    $4305   SNE      V3, #05         ; Skip if V3 != 5
$35A    $C170   RND      V1, #70         ; V1 = random & 70
$35C    $5042   UNKNOWN  $5042           ; Unknown 5xxx instruction
$35E    $64EC   LD       V4, #EC         ; Load 236 into V4
$360    $18C7   JP       $8C7            ; Jump to 8C7
$362    $61C3   LD       V1, #C3         ; Load 195 into V1
$364    $5C88   UNKNOWN  $5C88           ; Unknown 5xxx instruction
$366    $A651   LD       I, $651         ; Load 651 into I
$368    $266F   CALL     $66F            ; Call subroutine at 66F
$36A    $DE6F   DRW      VE, V6, #F      ; Draw 15-byte sprite at VE, V6
$36C    $E592   UNKNOWN  $E592           ; Unknown Exxx instruction
$36E    $6DE7   LD       VD, #E7         ; Load 231 into VD
$370    $CC1C   RND      VC, #1C         ; VC = random & 1C
$372    $727E   ADD      V2, #7E         ; Add 126 to V2
$374    $C76D   RND      V7, #6D         ; V7 = random & 6D
$376    $3BC7   SE       VB, #C7         ; Skip if VB == 199
$378    $512B   UNKNOWN  $512B           ; Unknown 5xxx instruction
$37A    $4F90   SNE      VF, #90         ; Skip if VF != 144
$37C    $02C0   SYS      $2C0            ; System call to 2C0
$37E    $A622   LD       I, $622         ; Load 622 into I
$380    $4D1C   SNE      VD, #1C         ; Skip if VD != 28
$382    $C97B   RND      V9, #7B         ; V9 = random & 7B
$384    $8798   UNKNOWN  8798            ; Unknown 8xxx instruction
$386    $031A   SYS      $31A            ; System call to 31A
$388    $5F3C   UNKNOWN  $5F3C           ; Unknown 5xxx instruction
$38A    $98F2   UNKNOWN  $98F2           ; Unknown 9xxx instruction
$38C    $44C2   SNE      V4, #C2         ; Skip if V4 != 194
$38E    $25A4   CALL     $5A4            ; Call subroutine at 5A4
$390    $C169   RND      V1, #69         ; V1 = random & 69
$392    $192C   JP       $92C            ; Jump to 92C
$394    $6B53   LD       VB, #53         ; Load 83 into VB
$396    $9D7E   UNKNOWN  $9D7E           ; Unknown 9xxx instruction
$398    $F604   UNKNOWN  F604            ; Unknown Fxxx instruction
$39A    $CFB2   RND      VF, #B2         ; VF = random & B2
$39C    $DC1E   DRW      VC, V1, #E      ; Draw 14-byte sprite at VC, V1
$39E    $173D   JP       $73D            ; Jump to 73D
$3A0    $E1AA   UNKNOWN  $E1AA           ; Unknown Exxx instruction
$3A2    $B45C   JP       V0, $45C        ; Jump to V0 + 45C
$3A4    $B1C4   JP       V0, $1C4        ; Jump to V0 + 1C4
$3A6    $842D   UNKNOWN  842D            ; Unknown 8xxx instruction
$3A8    $7FBC   ADD      VF, #BC         ; Add 188 to VF
$3AA    $2D63   CALL     $D63            ; Call subroutine at D63
$3AC    $4656   SNE      V6, #56         ; Skip if V6 != 86
$3AE    $6790   LD       V7, #90         ; Load 144 into V7
$3B0    $CB96   RND      VB, #96         ; VB = random & 96
$3B2    $1F36   JP       $F36            ; Jump to F36
$3B4    $8C02   AND      VC, V0          ; VC &= V0
$3B6    $E586   UNKNOWN  $E586           ; Unknown Exxx instruction
$3B8    $788E   ADD      V8, #8E         ; Add 142 to V8
$3BA    $0636   SYS      $636            ; System call to 636
$3BC    $6A24   LD       VA, #24         ; Load 36 into VA
$3BE    $81DB   UNKNOWN  81DB            ; Unknown 8xxx instruction
$3C0    $533D   UNKNOWN  $533D           ; Unknown 5xxx instruction
$3C2    $A221   LD       I, $221         ; Load 221 into I
$3C4    $D22B   DRW      V2, V2, #B      ; Draw 11-byte sprite at V2, V2
$3C6    $F0A5   UNKNOWN  F0A5            ; Unknown Fxxx instruction
$3C8    $F2FB   UNKNOWN  F2FB            ; Unknown Fxxx instruction
$3CA    $BA40   JP       V0, $A40        ; Jump to V0 + A40
$3CC    $410F   SNE      V1, #0F         ; Skip if V1 != 15
$3CE    $B806   JP       V0, $806        ; Jump to V0 + 806
$3D0    $99E1   UNKNOWN  $99E1           ; Unknown 9xxx instruction
$3D2    $7E70   ADD      VE, #70         ; Add 112 to VE
$3D4    $4B75   SNE      VB, #75         ; Skip if VB != 117
$3D6    $0D9C   SYS      $D9C            ; System call to D9C
$3D8    $40EA   SNE      V0, #EA         ; Skip if V0 != 234
$3DA    $3832   SE       V8, #32         ; Skip if V8 == 50
$3DC    $2345   CALL     $345            ; Call subroutine at 345
$3DE    $8A08   UNKNOWN  8A08            ; Unknown 8xxx instruction
$3E0    $FF91   UNKNOWN  FF91            ; Unknown Fxxx instruction
$3E2    $1989   JP       $989            ; Jump to 989
$3E4    $BDA7   JP       V0, $DA7        ; Jump to V0 + DA7
$3E6    $0320   SYS      $320            ; System call to 320
$3E8    $6916   LD       V9, #16         ; Load 22 into V9
$3EA    $8CC8   UNKNOWN  8CC8            ; Unknown 8xxx instruction
$3EC    $CA06   RND      VA, #06         ; VA = random & 06
$3EE    $B70C   JP       V0, $70C        ; Jump to V0 + 70C
$3F0    $CF95   RND      VF, #95         ; VF = random & 95
$3F2    $2E4B   CALL     $E4B            ; Call subroutine at E4B
$3F4    $DDA0   DRW      VD, VA, #0      ; Draw 0-byte sprite at VD, VA
$3F6    $3926   SE       V9, #26         ; Skip if V9 == 38
$3F8    $54AD   UNKNOWN  $54AD           ; Unknown 5xxx instruction
$3FA    $4702   SNE      V7, #02         ; Skip if V7 != 2
$3FC    $ACBC   LD       I, $CBC         ; Load CBC into I
$3FE    $0A72   SYS      $A72            ; System call to A72
$400    $B368   JP       V0, $368        ; Jump to V0 + 368
$402    $6D2D   LD       VD, #2D         ; Load 45 into VD
$404    $895D   UNKNOWN  895D            ; Unknown 8xxx instruction
$406    $013C   SYS      $13C            ; System call to 13C
$408    $B6DD   JP       V0, $6DD        ; Jump to V0 + 6DD
$40A    $1551   JP       $551            ; Jump to 551
$40C    $7823   ADD      V8, #23         ; Add 35 to V8
$40E    $0615   SYS      $615            ; System call to 615
$410    $8D87   SUBN     VD, V8          ; VD = V8 - VD, VF = !borrow
$412    $5C58   UNKNOWN  $5C58           ; Unknown 5xxx instruction
$414    $C0CF   RND      V0, #CF         ; V0 = random & CF
$416    $B1B9   JP       V0, $1B9        ; Jump to V0 + 1B9
$418    $B036   JP       V0, $036        ; Jump to V0 + 036
$41A    $4CB6   SNE      VC, #B6         ; Skip if VC != 182
$41C    $07FA   SYS      $7FA            ; System call to 7FA
$41E    $7446   ADD      V4, #46         ; Add 70 to V4
$420    $57E9   UNKNOWN  $57E9           ; Unknown 5xxx instruction
$422    $7469   ADD      V4, #69         ; Add 105 to V4
$424    $837E   SHL      V3              ; V3 <<= 1, VF = MSB
$426    $DA6D   DRW      VA, V6, #D      ; Draw 13-byte sprite at VA, V6
$428    $8B3A   UNKNOWN  8B3A            ; Unknown 8xxx instruction
$42A    $AB35   LD       I, $B35         ; Load B35 into I
$42C    $9480   SNE      V4, V8          ; Skip if V4 != V8
$42E    $58D8   UNKNOWN  $58D8           ; Unknown 5xxx instruction
$430    $6042   LD       V0, #42         ; Load 66 into V0
$432    $8152   AND      V1, V5          ; V1 &= V5
$434    $B4FC   JP       V0, $4FC        ; Jump to V0 + 4FC
$436    $7780   ADD      V7, #80         ; Add 128 to V7
$438    $E6CB   UNKNOWN  $E6CB           ; Unknown Exxx instruction
$43A    $D05D   DRW      V0, V5, #D      ; Draw 13-byte sprite at V0, V5
$43C    $C863   RND      V8, #63         ; V8 = random & 63
$43E    $6AE5   LD       VA, #E5         ; Load 229 into VA
$440    $2887   CALL     $887            ; Call subroutine at 887
$442    $14E3   JP       $4E3            ; Jump to 4E3
$444    $1C23   JP       $C23            ; Jump to C23
$446    $7555   ADD      V5, #55         ; Add 85 to V5
$448    $1C28   JP       $C28            ; Jump to C28
$44A    $2ABF   CALL     $ABF            ; Call subroutine at ABF
$44C    $C4F6   RND      V4, #F6         ; V4 = random & F6
$44E    $054F   SYS      $54F            ; System call to 54F
$450    $1B28   JP       $B28            ; Jump to B28
$452    $9A6E   UNKNOWN  $9A6E           ; Unknown 9xxx instruction
$454    $342C   SE       V4, #2C         ; Skip if V4 == 44
$456    $01D0   SYS      $1D0            ; System call to 1D0
$458    $267A   CALL     $67A            ; Call subroutine at 67A
$45A    $2F2D   CALL     $F2D            ; Call subroutine at F2D
$45C    $32E0   SE       V2, #E0         ; Skip if V2 == 224
$45E    $E6B9   UNKNOWN  $E6B9           ; Unknown Exxx instruction
$460    $5612   UNKNOWN  $5612           ; Unknown 5xxx instruction
$462    $71A4   ADD      V1, #A4         ; Add 164 to V1
$464    $68A9   LD       V8, #A9         ; Load 169 into V8
$466    $87DF   UNKNOWN  87DF            ; Unknown 8xxx instruction
$468    $FED5   UNKNOWN  FED5            ; Unknown Fxxx instruction
$46A    $ED94   UNKNOWN  $ED94           ; Unknown Exxx instruction
$46C    $22A2   CALL     $2A2            ; Call subroutine at 2A2
$46E    $0789   SYS      $789            ; System call to 789
$470    $452D   SNE      V5, #2D         ; Skip if V5 != 45
$472    $08B3   SYS      $8B3            ; System call to 8B3
$474    $4C47   SNE      VC, #47         ; Skip if VC != 71
$476    $4142   SNE      V1, #42         ; Skip if V1 != 66
$478    $A7D9   LD       I, $7D9         ; Load 7D9 into I
$47A    $1A77   JP       $A77            ; Jump to A77
$47C    $07D9   SYS      $7D9            ; System call to 7D9
$47E    $DA04   DRW      VA, V0, #4      ; Draw 4-byte sprite at VA, V0
$480    $50DE   UNKNOWN  $50DE           ; Unknown 5xxx instruction
$482    $7C75   ADD      VC, #75         ; Add 117 to VC
$484    $B580   JP       V0, $580        ; Jump to V0 + 580
$486    $B4D7   JP       V0, $4D7        ; Jump to V0 + 4D7
$488    $7938   ADD      V9, #38         ; Add 56 to V9
$48A    $2CF0   CALL     $CF0            ; Call subroutine at CF0
$48C    $358B   SE       V5, #8B         ; Skip if V5 == 139
$48E    $EF59   UNKNOWN  $EF59           ; Unknown Exxx instruction
$490    $9301   UNKNOWN  $9301           ; Unknown 9xxx instruction
$492    $0F39   SYS      $F39            ; System call to F39
$494    $BB76   JP       V0, $B76        ; Jump to V0 + B76
$496    $2781   CALL     $781            ; Call subroutine at 781
$498    $6E7F   LD       VE, #7F         ; Load 127 into VE
$49A    $9592   UNKNOWN  $9592           ; Unknown 9xxx instruction
$49C    $07D7   SYS      $7D7            ; System call to 7D7
$49E    $CE1A   RND      VE, #1A         ; VE = random & 1A
$4A0    $3F61   SE       VF, #61         ; Skip if VF == 97
$4A2    $204E   CALL     $04E            ; Call subroutine at 04E
$4A4    $EBE2   UNKNOWN  $EBE2           ; Unknown Exxx instruction
$4A6    $1582   JP       $582            ; Jump to 582
$4A8    $FB71   UNKNOWN  FB71            ; Unknown Fxxx instruction
$4AA    $A236   LD       I, $236         ; Load 236 into I
$4AC    $23D3   CALL     $3D3            ; Call subroutine at 3D3
$4AE    $B13B   JP       V0, $13B        ; Jump to V0 + 13B
$4B0    $8D1D   UNKNOWN  8D1D            ; Unknown 8xxx instruction
$4B2    $EAEF   UNKNOWN  $EAEF           ; Unknown Exxx instruction
$4B4    $9562   UNKNOWN  $9562           ; Unknown 9xxx instruction
$4B6    $DB26   DRW      VB, V2, #6      ; Draw 6-byte sprite at VB, V2
$4B8    $A7A3   LD       I, $7A3         ; Load 7A3 into I
$4BA    $EBC8   UNKNOWN  $EBC8           ; Unknown Exxx instruction
$4BC    $2FB6   CALL     $FB6            ; Call subroutine at FB6
$4BE    $0AA0   SYS      $AA0            ; System call to AA0
$4C0    $936B   UNKNOWN  $936B           ; Unknown 9xxx instruction
$4C2    $7E7E   ADD      VE, #7E         ; Add 126 to VE
$4C4    $EC9C   UNKNOWN  $EC9C           ; Unknown Exxx instruction
$4C6    $B816   JP       V0, $816        ; Jump to V0 + 816
$4C8    $8764   ADD      V7, V6          ; V7 += V6, VF = carry
$4CA    $FB22   UNKNOWN  FB22            ; Unknown Fxxx instruction
$4CC    $F616   UNKNOWN  F616            ; Unknown Fxxx instruction
$4CE    $3DD1   SE       VD, #D1         ; Skip if VD == 209
$4D0    $8E14   ADD      VE, V1          ; VE += V1, VF = carry
$4D2    $C37B   RND      V3, #7B         ; V3 = random & 7B
$4D4    $1971   JP       $971            ; Jump to 971
$4D6    $6D2C   LD       VD, #2C         ; Load 44 into VD
$4D8    $863F   UNKNOWN  863F            ; Unknown 8xxx instruction
$4DA    $4DBA   SNE      VD, #BA         ; Skip if VD != 186
$4DC    $0F72   SYS      $F72            ; System call to F72
$4DE    $4D11   SNE      VD, #11         ; Skip if VD != 17
$4E0    $91AC   UNKNOWN  $91AC           ; Unknown 9xxx instruction
$4E2    $E5AE   UNKNOWN  $E5AE           ; Unknown Exxx instruction
$4E4    $B9D6   JP       V0, $9D6        ; Jump to V0 + 9D6
$4E6    $A4F1   LD       I, $4F1         ; Load 4F1 into I
$4E8    $D1E8   DRW      V1, VE, #8      ; Draw 8-byte sprite at V1, VE
$4EA    $0181   SYS      $181            ; System call to 181
$4EC    $2C8E   CALL     $C8E            ; Call subroutine at C8E
$4EE    $4AC7   SNE      VA, #C7         ; Skip if VA != 199
$4F0    $821A   UNKNOWN  821A            ; Unknown 8xxx instruction
$4F2    $14EB   JP       $4EB            ; Jump to 4EB
$4F4    $93B5   UNKNOWN  $93B5           ; Unknown 9xxx instruction
$4F6    $D6CC   DRW      V6, VC, #C      ; Draw 12-byte sprite at V6, VC
$4F8    $631F   LD       V3, #1F         ; Load 31 into V3
$4FA    $FE06   UNKNOWN  FE06            ; Unknown Fxxx instruction
$4FC    $EBC0   UNKNOWN  $EBC0           ; Unknown Exxx instruction
$4FE    $67B5   LD       V7, #B5         ; Load 181 into V7
$500    $09F2   SYS      $9F2            ; System call to 9F2
$502    $A7B3   LD       I, $7B3         ; Load 7B3 into I
$504    $FB43   UNKNOWN  FB43            ; Unknown Fxxx instruction
$506    $C585   RND      V5, #85         ; V5 = random & 85
$508    $1A9A   JP       $A9A            ; Jump to A9A
$50A    $9531   UNKNOWN  $9531           ; Unknown 9xxx instruction
$50C    $B622   JP       V0, $622        ; Jump to V0 + 622
$50E    $69D9   LD       V9, #D9         ; Load 217 into V9
$510    $A6BD   LD       I, $6BD         ; Load 6BD into I
$512    $2C1E   CALL     $C1E            ; Call subroutine at C1E
$514    $A49F   LD       I, $49F         ; Load 49F into I
$516    $6A2A   LD       VA, #2A         ; Load 42 into VA
$518    $2F3A   CALL     $F3A            ; Call subroutine at F3A
$51A    $A3C3   LD       I, $3C3         ; Load 3C3 into I
$51C    $D433   DRW      V4, V3, #3      ; Draw 3-byte sprite at V4, V3
$51E    $FF3C   UNKNOWN  FF3C            ; Unknown Fxxx instruction
$520    $26A2   CALL     $6A2            ; Call subroutine at 6A2
$522    $0932   SYS      $932            ; System call to 932
$524    $B961   JP       V0, $961        ; Jump to V0 + 961
$526    $5869   UNKNOWN  $5869           ; Unknown 5xxx instruction
$528    $03EC   SYS      $3EC            ; System call to 3EC
$52A    $1E5F   JP       $E5F            ; Jump to E5F
$52C    $ED3D   UNKNOWN  $ED3D           ; Unknown Exxx instruction
$52E    $ED43   UNKNOWN  $ED43           ; Unknown Exxx instruction
$530    $7029   ADD      V0, #29         ; Add 41 to V0
$532    $BD46   JP       V0, $D46        ; Jump to V0 + D46
$534    $7B59   ADD      VB, #59         ; Add 89 to VB
$536    $EB74   UNKNOWN  $EB74           ; Unknown Exxx instruction
$538    $A3B1   LD       I, $3B1         ; Load 3B1 into I
$53A    $7799   ADD      V7, #99         ; Add 153 to V7
$53C    $5865   UNKNOWN  $5865           ; Unknown 5xxx instruction
$53E    $BBEC   JP       V0, $BEC        ; Jump to V0 + BEC
$540    $9BCB   UNKNOWN  $9BCB           ; Unknown 9xxx instruction
$542    $9E1B   UNKNOWN  $9E1B           ; Unknown 9xxx instruction
$544    $6ED2   LD       VE, #D2         ; Load 210 into VE
$546    $6AA2   LD       VA, #A2         ; Load 162 into VA
$548    $A16B   LD       I, $16B         ; Load 16B into I
$54A    $0389   SYS      $389            ; System call to 389
$54C    $AB36   LD       I, $B36         ; Load B36 into I
$54E    $0E85   SYS      $E85            ; System call to E85
$550    $C117   RND      V1, #17         ; V1 = random & 17
$552    $EEF4   UNKNOWN  $EEF4           ; Unknown Exxx instruction
$554    $1B84   JP       $B84            ; Jump to B84
$556    $6839   LD       V8, #39         ; Load 57 into V8
$558    $CF70   RND      VF, #70         ; VF = random & 70
$55A    $B2D8   JP       V0, $2D8        ; Jump to V0 + 2D8
$55C    $0751   SYS      $751            ; System call to 751
$55E    $5F1C   UNKNOWN  $5F1C           ; Unknown 5xxx instruction
$560    $B37C   JP       V0, $37C        ; Jump to V0 + 37C
$562    $F90C   UNKNOWN  F90C            ; Unknown Fxxx instruction
$564    $34FF   SE       V4, #FF         ; Skip if V4 == 255
$566    $493F   SNE      V9, #3F         ; Skip if V9 != 63
$568    $1E0E   JP       $E0E            ; Jump to E0E
$56A    $4086   SNE      V0, #86         ; Skip if V0 != 134
$56C    $2A18   CALL     $A18            ; Call subroutine at A18
$56E    $7F5B   ADD      VF, #5B         ; Add 91 to VF
$570    $DF17   DRW      VF, V1, #7      ; Draw 7-byte sprite at VF, V1
$572    $EBE2   UNKNOWN  $EBE2           ; Unknown Exxx instruction
$574    $FD30   UNKNOWN  FD30            ; Unknown Fxxx instruction
$576    $B5C5   JP       V0, $5C5        ; Jump to V0 + 5C5
$578    $F082   UNKNOWN  F082            ; Unknown Fxxx instruction
$57A    $11D3   JP       $1D3            ; Jump to 1D3
$57C    $0122   SYS      $122            ; System call to 122
$57E    $7EB1   ADD      VE, #B1         ; Add 177 to VE
$580    $ACE9   LD       I, $CE9         ; Load CE9 into I
$582    $7ED7   ADD      VE, #D7         ; Add 215 to VE
$584    $923C   UNKNOWN  $923C           ; Unknown 9xxx instruction
$586    $90D4   UNKNOWN  $90D4           ; Unknown 9xxx instruction
$588    $D4CF   DRW      V4, VC, #F      ; Draw 15-byte sprite at V4, VC
$58A    $E97E   UNKNOWN  $E97E           ; Unknown Exxx instruction
$58C    $D5C3   DRW      V5, VC, #3      ; Draw 3-byte sprite at V5, VC
$58E    $AA52   LD       I, $A52         ; Load A52 into I
$590    $A05E   LD       I, $05E         ; Load 05E into I
$592    $0651   SYS      $651            ; System call to 651
$594    $B953   JP       V0, $953        ; Jump to V0 + 953
$596    $B19E   JP       V0, $19E        ; Jump to V0 + 19E
$598    $0BB0   SYS      $BB0            ; System call to BB0
$59A    $D8EB   DRW      V8, VE, #B      ; Draw 11-byte sprite at V8, VE
$59C    $0690   SYS      $690            ; System call to 690
$59E    $742E   ADD      V4, #2E         ; Add 46 to V4
$5A0    $4522   SNE      V5, #22         ; Skip if V5 != 34
$5A2    $2930   CALL     $930            ; Call subroutine at 930
$5A4    $B0A7   JP       V0, $0A7        ; Jump to V0 + 0A7
$5A6    $AD93   LD       I, $D93         ; Load D93 into I
$5A8    $F5D3   UNKNOWN  F5D3            ; Unknown Fxxx instruction
$5AA    $4027   SNE      V0, #27         ; Skip if V0 != 39
$5AC    $166F   JP       $66F            ; Jump to 66F
$5AE    $AABE   LD       I, $ABE         ; Load ABE into I
$5B0    $6806   LD       V8, #06         ; Load 6 into V8
$5B2    $81CE   SHL      V1              ; V1 <<= 1, VF = MSB
$5B4    $D129   DRW      V1, V2, #9      ; Draw 9-byte sprite at V1, V2
$5B6    $2622   CALL     $622            ; Call subroutine at 622
$5B8    $4603   SNE      V6, #03         ; Skip if V6 != 3
$5BA    $FE4D   UNKNOWN  FE4D            ; Unknown Fxxx instruction
$5BC    $43F2   SNE      V3, #F2         ; Skip if V3 != 242
$5BE    $97E6   UNKNOWN  $97E6           ; Unknown 9xxx instruction
$5C0    $3EBB   SE       VE, #BB         ; Skip if VE == 187
$5C2    $C61A   RND      V6, #1A         ; V6 = random & 1A
$5C4    $73D3   ADD      V3, #D3         ; Add 211 to V3
$5C6    $402C   SNE      V0, #2C         ; Skip if V0 != 44
$5C8    $CADF   RND      VA, #DF         ; VA = random & DF
$5CA    $FED9   UNKNOWN  FED9            ; Unknown Fxxx instruction
$5CC    $14A6   JP       $4A6            ; Jump to 4A6
$5CE    $E5E0   UNKNOWN  $E5E0           ; Unknown Exxx instruction
$5D0    $6F7F   LD       VF, #7F         ; Load 127 into VF
$5D2    $4156   SNE      V1, #56         ; Skip if V1 != 86
$5D4    $0D70   SYS      $D70            ; System call to D70
$5D6    $DE15   DRW      VE, V1, #5      ; Draw 5-byte sprite at VE, V1
$5D8    $B187   JP       V0, $187        ; Jump to V0 + 187
$5DA    $DDB5   DRW      VD, VB, #5      ; Draw 5-byte sprite at VD, VB
$5DC    $FC0E   UNKNOWN  FC0E            ; Unknown Fxxx instruction
$5DE    $4F10   SNE      VF, #10         ; Skip if VF != 16
$5E0    $D0B2   DRW      V0, VB, #2      ; Draw 2-byte sprite at V0, VB
$5E2    $34A3   SE       V4, #A3         ; Skip if V4 == 163
$5E4    $8B05   SUB      VB, V0          ; VB -= V0, VF = !borrow
$5E6    $0545   SYS      $545            ; System call to 545
$5E8    $8E58   UNKNOWN  8E58            ; Unknown 8xxx instruction
$5EA    $B974   JP       V0, $974        ; Jump to V0 + 974
$5EC    $F664   UNKNOWN  F664            ; Unknown Fxxx instruction
$5EE    $762C   ADD      V6, #2C         ; Add 44 to V6
$5F0    $BDB5   JP       V0, $DB5        ; Jump to V0 + DB5
$5F2    $091C   SYS      $91C            ; System call to 91C
$5F4    $3420   SE       V4, #20         ; Skip if V4 == 32
$5F6    $3C80   SE       VC, #80         ; Skip if VC == 128
$5F8    $65F2   LD       V5, #F2         ; Load 242 into V5
$5FA    $EB5F   UNKNOWN  $EB5F           ; Unknown Exxx instruction
$5FC    $99E1   UNKNOWN  $99E1           ; Unknown 9xxx instruction
$5FE    $B317   JP       V0, $317        ; Jump to V0 + 317
$600    $A5FC   LD       I, $5FC         ; Load 5FC into I
$602    $3D5B   SE       VD, #5B         ; Skip if VD == 91
$604    $922D   UNKNOWN  $922D           ; Unknown 9xxx instruction
$606    $5001   UNKNOWN  $5001           ; Unknown 5xxx instruction
$608    $4319   SNE      V3, #19         ; Skip if V3 != 25
$60A    $D1C9   DRW      V1, VC, #9      ; Draw 9-byte sprite at V1, VC
$60C    $7510   ADD      V5, #10         ; Add 16 to V5
$60E    $74F9   ADD      V4, #F9         ; Add 249 to V4
$610    $D04C   DRW      V0, V4, #C      ; Draw 12-byte sprite at V0, V4
$612    $E11B   UNKNOWN  $E11B           ; Unknown Exxx instruction
$614    $75D4   ADD      V5, #D4         ; Add 212 to V5
$616    $F863   UNKNOWN  F863            ; Unknown Fxxx instruction
$618    $23BD   CALL     $3BD            ; Call subroutine at 3BD
$61A    $6923   LD       V9, #23         ; Load 35 into V9
$61C    $6B99   LD       VB, #99         ; Load 153 into VB
$61E    $8386   SHR      V3              ; V3 >>= 1, VF = LSB
$620    $A619   LD       I, $619         ; Load 619 into I
$622    $522B   UNKNOWN  $522B           ; Unknown 5xxx instruction
$624    $8E87   SUBN     VE, V8          ; VE = V8 - VE, VF = !borrow
$626    $ED94   UNKNOWN  $ED94           ; Unknown Exxx instruction
$628    $A487   LD       I, $487         ; Load 487 into I
$62A    $41D3   SNE      V1, #D3         ; Skip if V1 != 211
$62C    $9126   UNKNOWN  $9126           ; Unknown 9xxx instruction
$62E    $7D6E   ADD      VD, #6E         ; Add 110 to VD
$630    $1853   JP       $853            ; Jump to 853
$632    $E5B1   UNKNOWN  $E5B1           ; Unknown Exxx instruction
$634    $0460   SYS      $460            ; System call to 460
$636    $6355   LD       V3, #55         ; Load 85 into V3
$638    $E1BC   UNKNOWN  $E1BC           ; Unknown Exxx instruction
$63A    $237A   CALL     $37A            ; Call subroutine at 37A
$63C    $0243   SYS      $243            ; System call to 243
$63E    $7B67   ADD      VB, #67         ; Add 103 to VB
$640    $AC0D   LD       I, $C0D         ; Load C0D into I
$642    $4646   SNE      V6, #46         ; Skip if V6 != 70
$644    $11DD   JP       $1DD            ; Jump to 1DD
$646    $FF45   UNKNOWN  FF45            ; Unknown Fxxx instruction
$648    $442B   SNE      V4, #2B         ; Skip if V4 != 43
$64A    $333A   SE       V3, #3A         ; Skip if V3 == 58
$64C    $FBBC   UNKNOWN  FBBC            ; Unknown Fxxx instruction
$64E    $2D19   CALL     $D19            ; Call subroutine at D19
$650    $0619   SYS      $619            ; System call to 619
$652    $D33E   DRW      V3, V3, #E      ; Draw 14-byte sprite at V3, V3
$654    $4AF0   SNE      VA, #F0         ; Skip if VA != 240
$656    $DE0A   DRW      VE, V0, #A      ; Draw 10-byte sprite at VE, V0
$658    $573F   UNKNOWN  $573F           ; Unknown 5xxx instruction
$65A    $3CF6   SE       VC, #F6         ; Skip if VC == 246
$65C    $1638   JP       $638            ; Jump to 638
$65E    $00CC   SYS      $0CC            ; System call to 0CC
$660    $E486   UNKNOWN  $E486           ; Unknown Exxx instruction
$662    $C17C   RND      V1, #7C         ; V1 = random & 7C
$664    $8D63   XOR      VD, V6          ; VD ^= V6
$666    $BAC4   JP       V0, $AC4        ; Jump to V0 + AC4
$668    $96AD   UNKNOWN  $96AD           ; Unknown 9xxx instruction
$66A    $434A   SNE      V3, #4A         ; Skip if V3 != 74
$66C    $2594   CALL     $594            ; Call subroutine at 594
$66E    $78B7   ADD      V8, #B7         ; Add 183 to V8
$670    $3C96   SE       VC, #96         ; Skip if VC == 150
$672    $BD16   JP       V0, $D16        ; Jump to V0 + D16
$674    $F32D   UNKNOWN  F32D            ; Unknown Fxxx instruction
$676    $5845   UNKNOWN  $5845           ; Unknown 5xxx instruction
$678    $1C9B   JP       $C9B            ; Jump to C9B
$67A    $6EE5   LD       VE, #E5         ; Load 229 into VE
$67C    $9568   UNKNOWN  $9568           ; Unknown 9xxx instruction
$67E    $CD24   RND      VD, #24         ; VD = random & 24
$680    $831D   UNKNOWN  831D            ; Unknown 8xxx instruction
$682    $2475   CALL     $475            ; Call subroutine at 475
$684    $DE7B   DRW      VE, V7, #B      ; Draw 11-byte sprite at VE, V7
$686    $7324   ADD      V3, #24         ; Add 36 to V3
$688    $6B61   LD       VB, #61         ; Load 97 into VB
$68A    $5836   UNKNOWN  $5836           ; Unknown 5xxx instruction
$68C    $E1A1   SKNP     V1              ; Skip if key V1 not pressed
$68E    $1ACC   JP       $ACC            ; Jump to ACC
$690    $2CC4   CALL     $CC4            ; Call subroutine at CC4
$692    $2754   CALL     $754            ; Call subroutine at 754
$694    $C735   RND      V7, #35         ; V7 = random & 35
$696    $0CD9   SYS      $CD9            ; System call to CD9
$698    $B92C   JP       V0, $92C        ; Jump to V0 + 92C
$69A    $C2B0   RND      V2, #B0         ; V2 = random & B0
$69C    $7539   ADD      V5, #39         ; Add 57 to V5
$69E    $1585   JP       $585            ; Jump to 585
$6A0    $F905   UNKNOWN  F905            ; Unknown Fxxx instruction
$6A2    $5C97   UNKNOWN  $5C97           ; Unknown 5xxx instruction
$6A4    $EF70   UNKNOWN  $EF70           ; Unknown Exxx instruction
$6A6    $1106   JP       $106            ; Jump to 106
$6A8    $BB41   JP       V0, $B41        ; Jump to V0 + B41
$6AA    $5256   UNKNOWN  $5256           ; Unknown 5xxx instruction
$6AC    $E5F9   UNKNOWN  $E5F9           ; Unknown Exxx instruction
$6AE    $4D67   SNE      VD, #67         ; Skip if VD != 103
$6B0    $4A58   SNE      VA, #58         ; Skip if VA != 88
$6B2    $0629   SYS      $629            ; System call to 629
$6B4    $F567   UNKNOWN  F567            ; Unknown Fxxx instruction
$6B6    $45FE   SNE      V5, #FE         ; Skip if V5 != 254
$6B8    $5AE9   UNKNOWN  $5AE9           ; Unknown 5xxx instruction
$6BA    $9C36   UNKNOWN  $9C36           ; Unknown 9xxx instruction
$6BC    $480B   SNE      V8, #0B         ; Skip if V8 != 11
$6BE    $842D   UNKNOWN  842D            ; Unknown 8xxx instruction
$6C0    $B8D3   JP       V0, $8D3        ; Jump to V0 + 8D3
$6C2    $1B62   JP       $B62            ; Jump to B62
$6C4    $ABAE   LD       I, $BAE         ; Load BAE into I
$6C6    $56C8   UNKNOWN  $56C8           ; Unknown 5xxx instruction
$6C8    $CBA6   RND      VB, #A6         ; VB = random & A6
$6CA    $56F3   UNKNOWN  $56F3           ; Unknown 5xxx instruction
$6CC    $10B1   JP       $0B1            ; Jump to 0B1
$6CE    $D141   DRW      V1, V4, #1      ; Draw 1-byte sprite at V1, V4
$6D0    $BFE8   JP       V0, $FE8        ; Jump to V0 + FE8
$6D2    $CF6A   RND      VF, #6A         ; VF = random & 6A
$6D4    $8159   UNKNOWN  8159            ; Unknown 8xxx instruction
$6D6    $6FE3   LD       VF, #E3         ; Load 227 into VF
$6D8    $0DDC   SYS      $DDC            ; System call to DDC
$6DA    $B3B1   JP       V0, $3B1        ; Jump to V0 + 3B1
$6DC    $C210   RND      V2, #10         ; V2 = random & 10
$6DE    $2531   CALL     $531            ; Call subroutine at 531
$6E0    $49C6   SNE      V9, #C6         ; Skip if V9 != 198
$6E2    $80B9   UNKNOWN  80B9            ; Unknown 8xxx instruction
$6E4    $2297   CALL     $297            ; Call subroutine at 297
$6E6    $A285   LD       I, $285         ; Load 285 into I
$6E8    $B80A   JP       V0, $80A        ; Jump to V0 + 80A
$6EA    $6568   LD       V5, #68         ; Load 104 into V5
$6EC    $D539   DRW      V5, V3, #9      ; Draw 9-byte sprite at V5, V3
$6EE    $E554   UNKNOWN  $E554           ; Unknown Exxx instruction
$6F0    $5649   UNKNOWN  $5649           ; Unknown 5xxx instruction
$6F2    $C1F4   RND      V1, #F4         ; V1 = random & F4
$6F4    $57CA   UNKNOWN  $57CA           ; Unknown 5xxx instruction
$6F6    $B781   JP       V0, $781        ; Jump to V0 + 781
$6F8    $8188   UNKNOWN  8188            ; Unknown 8xxx instruction
$6FA    $07B9   SYS      $7B9            ; System call to 7B9
$6FC    $3732   SE       V7, #32         ; Skip if V7 == 50
$6FE    $16CD   JP       $6CD            ; Jump to 6CD
$700    $5277   UNKNOWN  $5277           ; Unknown 5xxx instruction
$702    $B9FC   JP       V0, $9FC        ; Jump to V0 + 9FC
$704    $C9C4   RND      V9, #C4         ; V9 = random & C4
$706    $6F2D   LD       VF, #2D         ; Load 45 into VF
$708    $0C68   SYS      $C68            ; System call to C68
$70A    $68EE   LD       V8, #EE         ; Load 238 into V8
$70C    $9041   UNKNOWN  $9041           ; Unknown 9xxx instruction
$70E    $DE61   DRW      VE, V6, #1      ; Draw 1-byte sprite at VE, V6
$710    $9DEB   UNKNOWN  $9DEB           ; Unknown 9xxx instruction
$712    $787F   ADD      V8, #7F         ; Add 127 to V8
$714    $1FCA   JP       $FCA            ; Jump to FCA
$716    $4EC0   SNE      VE, #C0         ; Skip if VE != 192
$718    $492A   SNE      V9, #2A         ; Skip if V9 != 42
$71A    $944A   UNKNOWN  $944A           ; Unknown 9xxx instruction
$71C    $EAC0   UNKNOWN  $EAC0           ; Unknown Exxx instruction
$71E    $EDE1   UNKNOWN  $EDE1           ; Unknown Exxx instruction
$720    $19D4   JP       $9D4            ; Jump to 9D4
$722    $551E   UNKNOWN  $551E           ; Unknown 5xxx instruction
$724    $08E6   SYS      $8E6            ; System call to 8E6
$726    $912C   UNKNOWN  $912C           ; Unknown 9xxx instruction
$728    $E8F4   UNKNOWN  $E8F4           ; Unknown Exxx instruction
$72A    $6278   LD       V2, #78         ; Load 120 into V2
$72C    $7C07   ADD      VC, #07         ; Add 7 to VC
$72E    $C5E1   RND      V5, #E1         ; V5 = random & E1
$730    $5851   UNKNOWN  $5851           ; Unknown 5xxx instruction
$732    $DE98   DRW      VE, V9, #8      ; Draw 8-byte sprite at VE, V9
$734    $E06A   UNKNOWN  $E06A           ; Unknown Exxx instruction
$736    $B823   JP       V0, $823        ; Jump to V0 + 823
$738    $1364   JP       $364            ; Jump to 364
$73A    $C192   RND      V1, #92         ; V1 = random & 92
$73C    $C7A4   RND      V7, #A4         ; V7 = random & A4
$73E    $A3E9   LD       I, $3E9         ; Load 3E9 into I
$740    $1D81   JP       $D81            ; Jump to D81
$742    $F45A   UNKNOWN  F45A            ; Unknown Fxxx instruction
$744    $FB70   UNKNOWN  FB70            ; Unknown Fxxx instruction
$746    $D5E9   DRW      V5, VE, #9      ; Draw 9-byte sprite at V5, VE
$748    $5A1C   UNKNOWN  $5A1C           ; Unknown 5xxx instruction
$74A    $548A   UNKNOWN  $548A           ; Unknown 5xxx instruction
$74C    $83AF   UNKNOWN  83AF            ; Unknown 8xxx instruction
$74E    $6EBB   LD       VE, #BB         ; Load 187 into VE
$750    $4FF3   SNE      VF, #F3         ; Skip if VF != 243
$752    $C1D6   RND      V1, #D6         ; V1 = random & D6
$754    $A5F8   LD       I, $5F8         ; Load 5F8 into I
$756    $E707   UNKNOWN  $E707           ; Unknown Exxx instruction
$758    $51E9   UNKNOWN  $51E9           ; Unknown 5xxx instruction
$75A    $93C2   UNKNOWN  $93C2           ; Unknown 9xxx instruction
$75C    $EABD   UNKNOWN  $EABD           ; Unknown Exxx instruction
$75E    $4972   SNE      V9, #72         ; Skip if V9 != 114
$760    $4D11   SNE      VD, #11         ; Skip if VD != 17
$762    $7B60   ADD      VB, #60         ; Add 96 to VB
$764    $D159   DRW      V1, V5, #9      ; Draw 9-byte sprite at V1, V5
$766    $4500   SNE      V5, #00         ; Skip if V5 != 0
$768    $6FBB   LD       VF, #BB         ; Load 187 into VF
$76A    $43E0   SNE      V3, #E0         ; Skip if V3 != 224
$76C    $DB50   DRW      VB, V5, #0      ; Draw 0-byte sprite at VB, V5
$76E    $06AA   SYS      $6AA            ; System call to 6AA
$770    $D0DE   DRW      V0, VD, #E      ; Draw 14-byte sprite at V0, VD
$772    $4D28   SNE      VD, #28         ; Skip if VD != 40
$774    $F140   UNKNOWN  F140            ; Unknown Fxxx instruction
$776    $B42F   JP       V0, $42F        ; Jump to V0 + 42F
$778    $3CFD   SE       VC, #FD         ; Skip if VC == 253
$77A    $3AA2   SE       VA, #A2         ; Skip if VA == 162
$77C    $DFA7   DRW      VF, VA, #7      ; Draw 7-byte sprite at VF, VA
$77E    $49DF   SNE      V9, #DF         ; Skip if V9 != 223
$780    $FCEC   UNKNOWN  FCEC            ; Unknown Fxxx instruction
$782    $DA44   DRW      VA, V4, #4      ; Draw 4-byte sprite at VA, V4
$784    $5F1A   UNKNOWN  $5F1A           ; Unknown 5xxx instruction
$786    $73AE   ADD      V3, #AE         ; Add 174 to V3
$788    $B4AC   JP       V0, $4AC        ; Jump to V0 + 4AC
$78A    $F718   LD       ST, V7          ; Sound timer = V7
$78C    $03F1   SYS      $3F1            ; System call to 3F1
$78E    $AFA5   LD       I, $FA5         ; Load FA5 into I
$790    $3E27   SE       VE, #27         ; Skip if VE == 39
$792    $C088   RND      V0, #88         ; V0 = random & 88
$794    $BE41   JP       V0, $E41        ; Jump to V0 + E41
$796    $F63E   UNKNOWN  F63E            ; Unknown Fxxx instruction
$798    $F68C   UNKNOWN  F68C            ; Unknown Fxxx instruction
$79A    $08B8   SYS      $8B8            ; System call to 8B8
$79C    $4B0D   SNE      VB, #0D         ; Skip if VB != 13
$79E    $4E44   SNE      VE, #44         ; Skip if VE != 68
$7A0    $6B00   LD       VB, #00         ; Load 0 into VB
$7A2    $D628   DRW      V6, V2, #8      ; Draw 8-byte sprite at V6, V2
$7A4    $FE06   UNKNOWN  FE06            ; Unknown Fxxx instruction
$7A6    $92CE   UNKNOWN  $92CE           ; Unknown 9xxx instruction
$7A8    $2458   CALL     $458            ; Call subroutine at 458
$7AA    $B45A   JP       V0, $45A        ; Jump to V0 + 45A
$7AC    $66A8   LD       V6, #A8         ; Load 168 into V6
$7AE    $6A59   LD       VA, #59         ; Load 89 into VA
$7B0    $7012   ADD      V0, #12         ; Add 18 to V0
$7B2    $E8E7   UNKNOWN  $E8E7           ; Unknown Exxx instruction
$7B4    $80E5   SUB      V0, VE          ; V0 -= VE, VF = !borrow
$7B6    $044F   SYS      $44F            ; System call to 44F
$7B8    $2A92   CALL     $A92            ; Call subroutine at A92
$7BA    $A777   LD       I, $777         ; Load 777 into I
$7BC    $841A   UNKNOWN  841A            ; Unknown 8xxx instruction
$7BE    $7F04   ADD      VF, #04         ; Add 4 to VF
$7C0    $05E5   SYS      $5E5            ; System call to 5E5
$7C2    $59D1   UNKNOWN  $59D1           ; Unknown 5xxx instruction
$7C4    $8751   OR       V7, V5          ; V7 |= V5
$7C6    $19F4   JP       $9F4            ; Jump to 9F4
$7C8    $8525   SUB      V5, V2          ; V5 -= V2, VF = !borrow
$7CA    $EB56   UNKNOWN  $EB56           ; Unknown Exxx instruction
$7CC    $25F4   CALL     $5F4            ; Call subroutine at 5F4
$7CE    $9A24   UNKNOWN  $9A24           ; Unknown 9xxx instruction
$7D0    $5CAC   UNKNOWN  $5CAC           ; Unknown 5xxx instruction
$7D2    $F9CE   UNKNOWN  F9CE            ; Unknown Fxxx instruction
$7D4    $CC8F   RND      VC, #8F         ; VC = random & 8F
$7D6    $A443   LD       I, $443         ; Load 443 into I
$7D8    $A486   LD       I, $486         ; Load 486 into I
$7DA    $29CF   CALL     $9CF            ; Call subroutine at 9CF
$7DC    $A847   LD       I, $847         ; Load 847 into I
$7DE    $3FE8   SE       VF, #E8         ; Skip if VF == 232
$7E0    $12CA   JP       $2CA            ; Jump to 2CA
$7E2    $14A5   JP       $4A5            ; Jump to 4A5
$7E4    $2C76   CALL     $C76            ; Call subroutine at C76
$7E6    $70DC   ADD      V0, #DC         ; Add 220 to V0
$7E8    $E47E   UNKNOWN  $E47E           ; Unknown Exxx instruction
$7EA    $65FB   LD       V5, #FB         ; Load 251 into V5
$7EC    $0B19   SYS      $B19            ; System call to B19
$7EE    $ED2E   UNKNOWN  $ED2E           ; Unknown Exxx instruction
$7F0    $EA07   UNKNOWN  $EA07           ; Unknown Exxx instruction
$7F2    $0E10   SYS      $E10            ; System call to E10
$7F4    $3AC8   SE       VA, #C8         ; Skip if VA == 200
$7F6    $1E50   JP       $E50            ; Jump to E50
$7F8    $3891   SE       V8, #91         ; Skip if V8 == 145
$7FA    $B3C0   JP       V0, $3C0        ; Jump to V0 + 3C0
$7FC    $8ECA   UNKNOWN  8ECA            ; Unknown 8xxx instruction
$7FE    $8942   AND      V9, V4          ; V9 &= V4
$800    $B4BD   JP       V0, $4BD        ; Jump to V0 + 4BD
$802    $4578   SNE      V5, #78         ; Skip if V5 != 120
$804    $F823   UNKNOWN  F823            ; Unknown Fxxx instruction
$806    $5E81   UNKNOWN  $5E81           ; Unknown 5xxx instruction
$808    $6752   LD       V7, #52         ; Load 82 into V7
$80A    $4AAF   SNE      VA, #AF         ; Skip if VA != 175
$80C    $ECC7   UNKNOWN  $ECC7           ; Unknown Exxx instruction
$80E    $9861   UNKNOWN  $9861           ; Unknown 9xxx instruction
$810    $2F9B   CALL     $F9B            ; Call subroutine at F9B
$812    $65CF   LD       V5, #CF         ; Load 207 into V5
$814    $769E   ADD      V6, #9E         ; Add 158 to V6
$816    $B914   JP       V0, $914        ; Jump to V0 + 914
$818    $01C5   SYS      $1C5            ; System call to 1C5
$81A    $677A   LD       V7, #7A         ; Load 122 into V7
$81C    $0C17   SYS      $C17            ; System call to C17
$81E    $4319   SNE      V3, #19         ; Skip if V3 != 25
$820    $0FBE   SYS      $FBE            ; System call to FBE
$822    $75ED   ADD      V5, #ED         ; Add 237 to V5
$824    $E5F9   UNKNOWN  $E5F9           ; Unknown Exxx instruction
$826    $10C4   JP       $0C4            ; Jump to 0C4
$828    $14EB   JP       $4EB            ; Jump to 4EB
$82A    $9075   UNKNOWN  $9075           ; Unknown 9xxx instruction
$82C    $A365   LD       I, $365         ; Load 365 into I
$82E    $7DE8   ADD      VD, #E8         ; Add 232 to VD
$830    $F03A   UNKNOWN  F03A            ; Unknown Fxxx instruction
$832    $A217   LD       I, $217         ; Load 217 into I
$834    $563A   UNKNOWN  $563A           ; Unknown 5xxx instruction
$836    $7082   ADD      V0, #82         ; Add 130 to V0
$838    $9316   UNKNOWN  $9316           ; Unknown 9xxx instruction
$83A    $6971   LD       V9, #71         ; Load 113 into V9
$83C    $5DB8   UNKNOWN  $5DB8           ; Unknown 5xxx instruction
$83E    $9060   SNE      V0, V6          ; Skip if V0 != V6
$840    $A2F1   LD       I, $2F1         ; Load 2F1 into I
$842    $1F62   JP       $F62            ; Jump to F62
$844    $397D   SE       V9, #7D         ; Skip if V9 == 125
$846    $97E1   UNKNOWN  $97E1           ; Unknown 9xxx instruction
$848    $5CFE   UNKNOWN  $5CFE           ; Unknown 5xxx instruction
$84A    $B7D3   JP       V0, $7D3        ; Jump to V0 + 7D3
$84C    $70F1   ADD      V0, #F1         ; Add 241 to V0
$84E    $4BC2   SNE      VB, #C2         ; Skip if VB != 194
$850    $262F   CALL     $62F            ; Call subroutine at 62F
$852    $D068   DRW      V0, V6, #8      ; Draw 8-byte sprite at V0, V6
$854    $F8C6   UNKNOWN  F8C6            ; Unknown Fxxx instruction
$856    $D913   DRW      V9, V1, #3      ; Draw 3-byte sprite at V9, V1
$858    $3782   SE       V7, #82         ; Skip if V7 == 130
$85A    $4AE0   SNE      VA, #E0         ; Skip if VA != 224
$85C    $A301   LD       I, $301         ; Load 301 into I
$85E    $D591   DRW      V5, V9, #1      ; Draw 1-byte sprite at V5, V9
$860    $179C   JP       $79C            ; Jump to 79C
$862    $A9FC   LD       I, $9FC         ; Load 9FC into I
$864    $BD32   JP       V0, $D32        ; Jump to V0 + D32
$866    $6201   LD       V2, #01         ; Load 1 into V2
$868    $726C   ADD      V2, #6C         ; Add 108 to V2
$86A    $1BE9   JP       $BE9            ; Jump to BE9
$86C    $9E01   UNKNOWN  $9E01           ; Unknown 9xxx instruction
$86E    $911C   UNKNOWN  $911C           ; Unknown 9xxx instruction
$870    $73CE   ADD      V3, #CE         ; Add 206 to V3
$872    $92CC   UNKNOWN  $92CC           ; Unknown 9xxx instruction
$874    $DF25   DRW      VF, V2, #5      ; Draw 5-byte sprite at VF, V2
$876    $4006   SNE      V0, #06         ; Skip if V0 != 6
$878    $6A4F   LD       VA, #4F         ; Load 79 into VA
$87A    $033F   SYS      $33F            ; System call to 33F
$87C    $F4A8   UNKNOWN  F4A8            ; Unknown Fxxx instruction
$87E    $5715   UNKNOWN  $5715           ; Unknown 5xxx instruction
$880    $A8CB   LD       I, $8CB         ; Load 8CB into I
$882    $FCAD   UNKNOWN  FCAD            ; Unknown Fxxx instruction
$884    $4935   SNE      V9, #35         ; Skip if V9 != 53
$886    $82E2   AND      V2, VE          ; V2 &= VE
$888    $10FB   JP       $0FB            ; Jump to 0FB
$88A    $CE73   RND      VE, #73         ; VE = random & 73
$88C    $6F38   LD       VF, #38         ; Load 56 into VF
$88E    $4C7B   SNE      VC, #7B         ; Skip if VC != 123
$890    $516A   UNKNOWN  $516A           ; Unknown 5xxx instruction
$892    $E422   UNKNOWN  $E422           ; Unknown Exxx instruction
$894    $3513   SE       V5, #13         ; Skip if V5 == 19
$896    $8D9A   UNKNOWN  8D9A            ; Unknown 8xxx instruction
$898    $CDC9   RND      VD, #C9         ; VD = random & C9
$89A    $59A8   UNKNOWN  $59A8           ; Unknown 5xxx instruction
$89C    $CF2F   RND      VF, #2F         ; VF = random & 2F
$89E    $8DE9   UNKNOWN  8DE9            ; Unknown 8xxx instruction
$8A0    $10B0   JP       $0B0            ; Jump to 0B0
$8A2    $E8E1   UNKNOWN  $E8E1           ; Unknown Exxx instruction
$8A4    $271C   CALL     $71C            ; Call subroutine at 71C
$8A6    $DF23   DRW      VF, V2, #3      ; Draw 3-byte sprite at VF, V2
$8A8    $0098   SYS      $098            ; System call to 098
$8AA    $3555   SE       V5, #55         ; Skip if V5 == 85
$8AC    $2014   CALL     $014            ; Call subroutine at 014
$8AE    $848E   SHL      V4              ; V4 <<= 1, VF = MSB
$8B0    $8913   XOR      V9, V1          ; V9 ^= V1
$8B2    $3DE8   SE       VD, #E8         ; Skip if VD == 232
$8B4    $2C7A   CALL     $C7A            ; Call subroutine at C7A
$8B6    $5F46   UNKNOWN  $5F46           ; Unknown 5xxx instruction
$8B8    $8642   AND      V6, V4          ; V6 &= V4
$8BA    $DF4E   DRW      VF, V4, #E      ; Draw 14-byte sprite at VF, V4
$8BC    $942D   UNKNOWN  $942D           ; Unknown 9xxx instruction
$8BE    $9FD2   UNKNOWN  $9FD2           ; Unknown 9xxx instruction
$8C0    $3CE3   SE       VC, #E3         ; Skip if VC == 227
$8C2    $30FD   SE       V0, #FD         ; Skip if V0 == 253
$8C4    $6190   LD       V1, #90         ; Load 144 into V1
$8C6    $AC14   LD       I, $C14         ; Load C14 into I
$8C8    $5A30   SE       VA, V3          ; Skip if VA == V3
$8CA    $1133   JP       $133            ; Jump to 133
$8CC    $2011   CALL     $011            ; Call subroutine at 011
$8CE    $FFD0   UNKNOWN  FFD0            ; Unknown Fxxx instruction
$8D0    $A70B   LD       I, $70B         ; Load 70B into I
$8D2    $0D0B   SYS      $D0B            ; System call to D0B
$8D4    $F6A6   UNKNOWN  F6A6            ; Unknown Fxxx instruction
$8D6    $4289   SNE      V2, #89         ; Skip if V2 != 137
$8D8    $D2B2   DRW      V2, VB, #2      ; Draw 2-byte sprite at V2, VB
$8DA    $0FD1   SYS      $FD1            ; System call to FD1
$8DC    $05B8   SYS      $5B8            ; System call to 5B8
$8DE    $54CF   UNKNOWN  $54CF           ; Unknown 5xxx instruction
$8E0    $F3B7   UNKNOWN  F3B7            ; Unknown Fxxx instruction
$8E2    $0D9B   SYS      $D9B            ; System call to D9B
$8E4    $A8E9   LD       I, $8E9         ; Load 8E9 into I
$8E6    $0CBC   SYS      $CBC            ; System call to CBC
$8E8    $0AE2   SYS      $AE2            ; System call to AE2
$8EA    $9DC0   SNE      VD, VC          ; Skip if VD != VC
$8EC    $637E   LD       V3, #7E         ; Load 126 into V3
$8EE    $E638   UNKNOWN  $E638           ; Unknown Exxx instruction
$8F0    $18E4   JP       $8E4            ; Jump to 8E4
$8F2    $C35A   RND      V3, #5A         ; V3 = random & 5A
$8F4    $BA9F   JP       V0, $A9F        ; Jump to V0 + A9F
$8F6    $FDA0   UNKNOWN  FDA0            ; Unknown Fxxx instruction
$8F8    $BE97   JP       V0, $E97        ; Jump to V0 + E97
$8FA    $3318   SE       V3, #18         ; Skip if V3 == 24
$8FC    $25F5   CALL     $5F5            ; Call subroutine at 5F5
$8FE    $64EB   LD       V4, #EB         ; Load 235 into V4
$900    $A791   LD       I, $791         ; Load 791 into I
$902    $39A6   SE       V9, #A6         ; Skip if V9 == 166
$904    $267B   CALL     $67B            ; Call subroutine at 67B
$906    $4C25   SNE      VC, #25         ; Skip if VC != 37
$908    $CC8A   RND      VC, #8A         ; VC = random & 8A
$90A    $8F29   UNKNOWN  8F29            ; Unknown 8xxx instruction
$90C    $C4C2   RND      V4, #C2         ; V4 = random & C2
$90E    $8E83   XOR      VE, V8          ; VE ^= V8
$910    $C825   RND      V8, #25         ; V8 = random & 25
$912    $115D   JP       $15D            ; Jump to 15D
$914    $DFBD   DRW      VF, VB, #D      ; Draw 13-byte sprite at VF, VB
$916    $6E21   LD       VE, #21         ; Load 33 into VE
$918    $F14B   UNKNOWN  F14B            ; Unknown Fxxx instruction
$91A    $ADC9   LD       I, $DC9         ; Load DC9 into I
$91C    $E133   UNKNOWN  $E133           ; Unknown Exxx instruction
$91E    $6E51   LD       VE, #51         ; Load 81 into VE
$920    $B115   JP       V0, $115        ; Jump to V0 + 115
$922    $529C   UNKNOWN  $529C           ; Unknown 5xxx instruction
$924    $8CA1   OR       VC, VA          ; VC |= VA
$926    $C058   RND      V0, #58         ; V0 = random & 58
$928    $9F06   UNKNOWN  $9F06           ; Unknown 9xxx instruction
$92A    $6F34   LD       VF, #34         ; Load 52 into VF
$92C    $D13B   DRW      V1, V3, #B      ; Draw 11-byte sprite at V1, V3
$92E    $32B1   SE       V2, #B1         ; Skip if V2 == 177
$930    $969A   UNKNOWN  $969A           ; Unknown 9xxx instruction
$932    $5A96   UNKNOWN  $5A96           ; Unknown 5xxx instruction
$934    $A4F8   LD       I, $4F8         ; Load 4F8 into I
$936    $499E   SNE      V9, #9E         ; Skip if V9 != 158
$938    $3069   SE       V0, #69         ; Skip if V0 == 105
$93A    $777B   ADD      V7, #7B         ; Add 123 to V7
$93C    $0C8E   SYS      $C8E            ; System call to C8E
$93E    $6846   LD       V8, #46         ; Load 70 into V8
$940    $7EAB   ADD      VE, #AB         ; Add 171 to VE
$942    $23A9   CALL     $3A9            ; Call subroutine at 3A9
$944    $6782   LD       V7, #82         ; Load 130 into V7
$946    $1FC3   JP       $FC3            ; Jump to FC3
$948    $1AA5   JP       $AA5            ; Jump to AA5
$94A    $A799   LD       I, $799         ; Load 799 into I
$94C    $FCDB   UNKNOWN  FCDB            ; Unknown Fxxx instruction
$94E    $EEF5   UNKNOWN  $EEF5           ; Unknown Exxx instruction
$950    $613C   LD       V1, #3C         ; Load 60 into V1
$952    $156F   JP       $56F            ; Jump to 56F
$954    $9159   UNKNOWN  $9159           ; Unknown 9xxx instruction
$956    $8063   XOR      V0, V6          ; V0 ^= V6
$958    $C545   RND      V5, #45         ; V5 = random & 45
$95A    $001F   SYS      $01F            ; System call to 01F
$95C    $785D   ADD      V8, #5D         ; Add 93 to V8
$95E    $ECD9   UNKNOWN  $ECD9           ; Unknown Exxx instruction
$960    $14C1   JP       $4C1            ; Jump to 4C1
$962    $917B   UNKNOWN  $917B           ; Unknown 9xxx instruction
$964    $D386   DRW      V3, V8, #6      ; Draw 6-byte sprite at V3, V8
$966    $4D1E   SNE      VD, #1E         ; Skip if VD != 30
$968    $D9DA   DRW      V9, VD, #A      ; Draw 10-byte sprite at V9, VD
$96A    $B958   JP       V0, $958        ; Jump to V0 + 958
$96C    $360C   SE       V6, #0C         ; Skip if V6 == 12
$96E    $7F1A   ADD      VF, #1A         ; Add 26 to VF
$970    $9663   UNKNOWN  $9663           ; Unknown 9xxx instruction
$972    $79C9   ADD      V9, #C9         ; Add 201 to V9
$974    $9A56   UNKNOWN  $9A56           ; Unknown 9xxx instruction
$976    $38ED   SE       V8, #ED         ; Skip if V8 == 237
$978    $C521   RND      V5, #21         ; V5 = random & 21
$97A    $571A   UNKNOWN  $571A           ; Unknown 5xxx instruction
$97C    $FF72   UNKNOWN  FF72            ; Unknown Fxxx instruction
$97E    $4910   SNE      V9, #10         ; Skip if V9 != 16
$980    $3351   SE       V3, #51         ; Skip if V3 == 81
$982    $AC3D   LD       I, $C3D         ; Load C3D into I
$984    $EA48   UNKNOWN  $EA48           ; Unknown Exxx instruction
$986    $90CC   UNKNOWN  $90CC           ; Unknown 9xxx instruction
$988    $ED6F   UNKNOWN  $ED6F           ; Unknown Exxx instruction
$98A    $9D81   UNKNOWN  $9D81           ; Unknown 9xxx instruction
$98C    $1804   JP       $804            ; Jump to 804
$98E    $3434   SE       V4, #34         ; Skip if V4 == 52
$990    $B5B1   JP       V0, $5B1        ; Jump to V0 + 5B1
$992    $A64D   LD       I, $64D         ; Load 64D into I
$994    $1DEE   JP       $DEE            ; Jump to DEE
$996    $BFDD   JP       V0, $FDD        ; Jump to V0 + FDD
$998    $88A1   OR       V8, VA          ; V8 |= VA
$99A    $6FD8   LD       VF, #D8         ; Load 216 into VF
$99C    $4F3C   SNE      VF, #3C         ; Skip if VF != 60
$99E    $D135   DRW      V1, V3, #5      ; Draw 5-byte sprite at V1, V3
$9A0    $EDF7   UNKNOWN  $EDF7           ; Unknown Exxx instruction
$9A2    $025E   SYS      $25E            ; System call to 25E
$9A4    $7B22   ADD      VB, #22         ; Add 34 to VB
$9A6    $1EB0   JP       $EB0            ; Jump to EB0
$9A8    $B629   JP       V0, $629        ; Jump to V0 + 629
$9AA    $62BC   LD       V2, #BC         ; Load 188 into V2
$9AC    $DB5B   DRW      VB, V5, #B      ; Draw 11-byte sprite at VB, V5
$9AE    $3D11   SE       VD, #11         ; Skip if VD == 17
$9B0    $5361   UNKNOWN  $5361           ; Unknown 5xxx instruction
$9B2    $0243   SYS      $243            ; System call to 243
$9B4    $0E10   SYS      $E10            ; System call to E10
$9B6    $4CD3   SNE      VC, #D3         ; Skip if VC != 211
$9B8    $D39B   DRW      V3, V9, #B      ; Draw 11-byte sprite at V3, V9
$9BA    $2FCC   CALL     $FCC            ; Call subroutine at FCC
$9BC    $66B4   LD       V6, #B4         ; Load 180 into V6
$9BE    $8926   SHR      V9              ; V9 >>= 1, VF = LSB
$9C0    $7FDD   ADD      VF, #DD         ; Add 221 to VF
$9C2    $7B96   ADD      VB, #96         ; Add 150 to VB
$9C4    $F91D   UNKNOWN  F91D            ; Unknown Fxxx instruction
$9C6    $8D2D   UNKNOWN  8D2D            ; Unknown 8xxx instruction
$9C8    $E030   UNKNOWN  $E030           ; Unknown Exxx instruction
$9CA    $AE2E   LD       I, $E2E         ; Load E2E into I
$9CC    $1E2C   JP       $E2C            ; Jump to E2C
$9CE    $F0D3   UNKNOWN  F0D3            ; Unknown Fxxx instruction
$9D0    $B446   JP       V0, $446        ; Jump to V0 + 446
$9D2    $751D   ADD      V5, #1D         ; Add 29 to V5
$9D4    $7AEF   ADD      VA, #EF         ; Add 239 to VA
$9D6    $B14F   JP       V0, $14F        ; Jump to V0 + 14F
$9D8    $84C1   OR       V4, VC          ; V4 |= VC
$9DA    $9A0C   UNKNOWN  $9A0C           ; Unknown 9xxx instruction
$9DC    $32FB   SE       V2, #FB         ; Skip if V2 == 251
$9DE    $8FAF   UNKNOWN  8FAF            ; Unknown 8xxx instruction
$9E0    $0742   SYS      $742            ; System call to 742
$9E2    $D3A1   DRW      V3, VA, #1      ; Draw 1-byte sprite at V3, VA
$9E4    $808D   UNKNOWN  808D            ; Unknown 8xxx instruction
$9E6    $5540   SE       V5, V4          ; Skip if V5 == V4
$9E8    $9A9E   UNKNOWN  $9A9E           ; Unknown 9xxx instruction
$9EA    $9CDF   UNKNOWN  $9CDF           ; Unknown 9xxx instruction
$9EC    $37F4   SE       V7, #F4         ; Skip if V7 == 244
$9EE    $6E0D   LD       VE, #0D         ; Load 13 into VE
$9F0    $2697   CALL     $697            ; Call subroutine at 697
$9F2    $17FC   JP       $7FC            ; Jump to 7FC
$9F4    $79F5   ADD      V9, #F5         ; Add 245 to V9
$9F6    $8E0E   SHL      VE              ; VE <<= 1, VF = MSB
$9F8    $AD2C   LD       I, $D2C         ; Load D2C into I
$9FA    $BA3D   JP       V0, $A3D        ; Jump to V0 + A3D
$9FC    $4360   SNE      V3, #60         ; Skip if V3 != 96
$9FE    $DA1A   DRW      VA, V1, #A      ; Draw 10-byte sprite at VA, V1
$A00    $2856   CALL     $856            ; Call subroutine at 856
$A02    $A7C9   LD       I, $7C9         ; Load 7C9 into I
$A04    $E30F   UNKNOWN  $E30F           ; Unknown Exxx instruction
$A06    $F7F1   UNKNOWN  F7F1            ; Unknown Fxxx instruction
$A08    $414A   SNE      V1, #4A         ; Skip if V1 != 74
$A0A    $FF76   UNKNOWN  FF76            ; Unknown Fxxx instruction
$A0C    $AB77   LD       I, $B77         ; Load B77 into I
$A0E    $3A67   SE       VA, #67         ; Skip if VA == 103
$A10    $21DF   CALL     $1DF            ; Call subroutine at 1DF
$A12    $D9CA   DRW      V9, VC, #A      ; Draw 10-byte sprite at V9, VC
$A14    $1D4C   JP       $D4C            ; Jump to D4C
$A16    $A339   LD       I, $339         ; Load 339 into I
$A18    $BA88   JP       V0, $A88        ; Jump to V0 + A88
$A1A    $E690   UNKNOWN  $E690           ; Unknown Exxx instruction
$A1C    $3C47   SE       VC, #47         ; Skip if VC == 71
$A1E    $2C6F   CALL     $C6F            ; Call subroutine at C6F
$A20    $616E   LD       V1, #6E         ; Load 110 into V1
$A22    $7612   ADD      V6, #12         ; Add 18 to V6
$A24    $8C87   SUBN     VC, V8          ; VC = V8 - VC, VF = !borrow
$A26    $88CE   SHL      V8              ; V8 <<= 1, VF = MSB
$A28    $08A5   SYS      $8A5            ; System call to 8A5
$A2A    $355D   SE       V5, #5D         ; Skip if V5 == 93
$A2C    $A094   LD       I, $094         ; Load 094 into I
$A2E    $4CD5   SNE      VC, #D5         ; Skip if VC != 213
$A30    $5F3F   UNKNOWN  $5F3F           ; Unknown 5xxx instruction
$A32    $2F3A   CALL     $F3A            ; Call subroutine at F3A
$A34    $9AF3   UNKNOWN  $9AF3           ; Unknown 9xxx instruction
$A36    $6A22   LD       VA, #22         ; Load 34 into VA
$A38    $9E57   UNKNOWN  $9E57           ; Unknown 9xxx instruction
$A3A    $F145   UNKNOWN  F145            ; Unknown Fxxx instruction
$A3C    $9B20   SNE      VB, V2          ; Skip if VB != V2
$A3E    $B568   JP       V0, $568        ; Jump to V0 + 568
$A40    $02F8   SYS      $2F8            ; System call to 2F8
$A42    $AC2F   LD       I, $C2F         ; Load C2F into I
$A44    $1FB0   JP       $FB0            ; Jump to FB0
$A46    $05EF   SYS      $5EF            ; System call to 5EF
$A48    $B611   JP       V0, $611        ; Jump to V0 + 611
$A4A    $A92C   LD       I, $92C         ; Load 92C into I
$A4C    $BAD2   JP       V0, $AD2        ; Jump to V0 + AD2
$A4E    $D307   DRW      V3, V0, #7      ; Draw 7-byte sprite at V3, V0
$A50    $9B82   UNKNOWN  $9B82           ; Unknown 9xxx instruction
$A52    $AEEE   LD       I, $EEE         ; Load EEE into I
$A54    $BBFB   JP       V0, $BFB        ; Jump to V0 + BFB
$A56    $F2BA   UNKNOWN  F2BA            ; Unknown Fxxx instruction
$A58    $F3D8   UNKNOWN  F3D8            ; Unknown Fxxx instruction
$A5A    $8C8E   SHL      VC              ; VC <<= 1, VF = MSB
$A5C    $8822   AND      V8, V2          ; V8 &= V2
$A5E    $CD51   RND      VD, #51         ; VD = random & 51
$A60    $323B   SE       V2, #3B         ; Skip if V2 == 59
$A62    $7BB0   ADD      VB, #B0         ; Add 176 to VB
$A64    $8CC2   AND      VC, VC          ; VC &= VC
$A66    $2636   CALL     $636            ; Call subroutine at 636
$A68    $6140   LD       V1, #40         ; Load 64 into V1
$A6A    $E2BA   UNKNOWN  $E2BA           ; Unknown Exxx instruction
$A6C    $B248   JP       V0, $248        ; Jump to V0 + 248
$A6E    $CB4F   RND      VB, #4F         ; VB = random & 4F
$A70    $3BD6   SE       VB, #D6         ; Skip if VB == 214
$A72    $50D4   UNKNOWN  $50D4           ; Unknown 5xxx instruction
$A74    $D76A   DRW      V7, V6, #A      ; Draw 10-byte sprite at V7, V6
$A76    $397B   SE       V9, #7B         ; Skip if V9 == 123
$A78    $D0C7   DRW      V0, VC, #7      ; Draw 7-byte sprite at V0, VC
$A7A    $6138   LD       V1, #38         ; Load 56 into V1
$A7C    $501C   UNKNOWN  $501C           ; Unknown 5xxx instruction
$A7E    $E90A   UNKNOWN  $E90A           ; Unknown Exxx instruction
$A80    $BEF3   JP       V0, $EF3        ; Jump to V0 + EF3
$A82    $50F4   UNKNOWN  $50F4           ; Unknown 5xxx instruction
$A84    $C712   RND      V7, #12         ; V7 = random & 12
$A86    $B5A8   JP       V0, $5A8        ; Jump to V0 + 5A8
$A88    $A99D   LD       I, $99D         ; Load 99D into I
$A8A    $AEA7   LD       I, $EA7         ; Load EA7 into I
$A8C    $9613   UNKNOWN  $9613           ; Unknown 9xxx instruction
$A8E    $2750   CALL     $750            ; Call subroutine at 750
$A90    $2660   CALL     $660            ; Call subroutine at 660
$A92    $BA11   JP       V0, $A11        ; Jump to V0 + A11
$A94    $8BCD   UNKNOWN  8BCD            ; Unknown 8xxx instruction
$A96    $7F08   ADD      VF, #08         ; Add 8 to VF
$A98    $149C   JP       $49C            ; Jump to 49C
$A9A    $BE17   JP       V0, $E17        ; Jump to V0 + E17
$A9C    $52F9   UNKNOWN  $52F9           ; Unknown 5xxx instruction
$A9E    $4ABD   SNE      VA, #BD         ; Skip if VA != 189
$AA0    $0609   SYS      $609            ; System call to 609
$AA2    $DD13   DRW      VD, V1, #3      ; Draw 3-byte sprite at VD, V1
$AA4    $06C1   SYS      $6C1            ; System call to 6C1
$AA6    $1F18   JP       $F18            ; Jump to F18
$AA8    $D32A   DRW      V3, V2, #A      ; Draw 10-byte sprite at V3, V2
$AAA    $D8A4   DRW      V8, VA, #4      ; Draw 4-byte sprite at V8, VA
$AAC    $D329   DRW      V3, V2, #9      ; Draw 9-byte sprite at V3, V2
$AAE    $8A9B   UNKNOWN  8A9B            ; Unknown 8xxx instruction
$AB0    $0AE4   SYS      $AE4            ; System call to AE4
$AB2    $49F0   SNE      V9, #F0         ; Skip if V9 != 240
$AB4    $CBD0   RND      VB, #D0         ; VB = random & D0
$AB6    $12CE   JP       $2CE            ; Jump to 2CE
$AB8    $636E   LD       V3, #6E         ; Load 110 into V3
$ABA    $A80E   LD       I, $80E         ; Load 80E into I
$ABC    $B405   JP       V0, $405        ; Jump to V0 + 405
$ABE    $035F   SYS      $35F            ; System call to 35F
$AC0    $687C   LD       V8, #7C         ; Load 124 into V8
$AC2    $B134   JP       V0, $134        ; Jump to V0 + 134
$AC4    $7FDF   ADD      VF, #DF         ; Add 223 to VF
$AC6    $C4A0   RND      V4, #A0         ; V4 = random & A0
$AC8    $B4A5   JP       V0, $4A5        ; Jump to V0 + 4A5
$ACA    $5ADA   UNKNOWN  $5ADA           ; Unknown 5xxx instruction
$ACC    $23CA   CALL     $3CA            ; Call subroutine at 3CA
$ACE    $0CA7   SYS      $CA7            ; System call to CA7
$AD0    $F98A   UNKNOWN  F98A            ; Unknown Fxxx instruction
$AD2    $FC25   UNKNOWN  FC25            ; Unknown Fxxx instruction
$AD4    $B994   JP       V0, $994        ; Jump to V0 + 994
$AD6    $A7BA   LD       I, $7BA         ; Load 7BA into I
$AD8    $20E1   CALL     $0E1            ; Call subroutine at 0E1
$ADA    $2D42   CALL     $D42            ; Call subroutine at D42
$ADC    $E397   UNKNOWN  $E397           ; Unknown Exxx instruction
$ADE    $EE39   UNKNOWN  $EE39           ; Unknown Exxx instruction
$AE0    $C132   RND      V1, #32         ; V1 = random & 32
$AE2    $2359   CALL     $359            ; Call subroutine at 359
$AE4    $37CC   SE       V7, #CC         ; Skip if V7 == 204
$AE6    $F426   UNKNOWN  F426            ; Unknown Fxxx instruction
$AE8    $0261   SYS      $261            ; System call to 261
$AEA    $B06A   JP       V0, $06A        ; Jump to V0 + 06A
$AEC    $9BA5   UNKNOWN  $9BA5           ; Unknown 9xxx instruction
$AEE    $0342   SYS      $342            ; System call to 342
$AF0    $5BA8   UNKNOWN  $5BA8           ; Unknown 5xxx instruction
$AF2    $9690   SNE      V6, V9          ; Skip if V6 != V9
$AF4    $F777   UNKNOWN  F777            ; Unknown Fxxx instruction
$AF6    $630D   LD       V3, #0D         ; Load 13 into V3
$AF8    $B7A8   JP       V0, $7A8        ; Jump to V0 + 7A8
$AFA    $C2F2   RND      V2, #F2         ; V2 = random & F2
$AFC    $B4D9   JP       V0, $4D9        ; Jump to V0 + 4D9
$AFE    $EC08   UNKNOWN  $EC08           ; Unknown Exxx instruction
$B00    $E0EE   UNKNOWN  $E0EE           ; Unknown Exxx instruction
$B02    $003C   SYS      $03C            ; System call to 03C
$B04    $D20C   DRW      V2, V0, #C      ; Draw 12-byte sprite at V2, V0
$B06    $1634   JP       $634            ; Jump to 634
$B08    $8BF6   SHR      VB              ; VB >>= 1, VF = LSB
$B0A    $259C   CALL     $59C            ; Call subroutine at 59C
$B0C    $10CB   JP       $0CB            ; Jump to 0CB
$B0E    $64CA   LD       V4, #CA         ; Load 202 into V4
$B10    $0274   SYS      $274            ; System call to 274
$B12    $8898   UNKNOWN  8898            ; Unknown 8xxx instruction
$B14    $20A6   CALL     $0A6            ; Call subroutine at 0A6
$B16    $798C   ADD      V9, #8C         ; Add 140 to V9
$B18    $64C8   LD       V4, #C8         ; Load 200 into V4
$B1A    $FC85   UNKNOWN  FC85            ; Unknown Fxxx instruction
$B1C    $2C01   CALL     $C01            ; Call subroutine at C01
$B1E    $316F   SE       V1, #6F         ; Skip if V1 == 111
$B20    $3C3F   SE       VC, #3F         ; Skip if VC == 63
$B22    $E9CE   UNKNOWN  $E9CE           ; Unknown Exxx instruction
$B24    $DD9F   DRW      VD, V9, #F      ; Draw 15-byte sprite at VD, V9
$B26    $9475   UNKNOWN  $9475           ; Unknown 9xxx instruction
$B28    $7542   ADD      V5, #42         ; Add 66 to V5
$B2A    $3076   SE       V0, #76         ; Skip if V0 == 118
$B2C    $B184   JP       V0, $184        ; Jump to V0 + 184
$B2E    $6AF6   LD       VA, #F6         ; Load 246 into VA
$B30    $1165   JP       $165            ; Jump to 165
$B32    $BBD2   JP       V0, $BD2        ; Jump to V0 + BD2
$B34    $0FDC   SYS      $FDC            ; System call to FDC
$B36    $16D7   JP       $6D7            ; Jump to 6D7
$B38    $A29A   LD       I, $29A         ; Load 29A into I
$B3A    $19B5   JP       $9B5            ; Jump to 9B5
$B3C    $6A8A   LD       VA, #8A         ; Load 138 into VA
$B3E    $EAB7   UNKNOWN  $EAB7           ; Unknown Exxx instruction
$B40    $4340   SNE      V3, #40         ; Skip if V3 != 64
$B42    $8B62   AND      VB, V6          ; VB &= V6
$B44    $EC70   UNKNOWN  $EC70           ; Unknown Exxx instruction
$B46    $F73E   UNKNOWN  F73E            ; Unknown Fxxx instruction
$B48    $41FF   SNE      V1, #FF         ; Skip if V1 != 255
$B4A    $CB99   RND      VB, #99         ; VB = random & 99
$B4C    $9D8F   UNKNOWN  $9D8F           ; Unknown 9xxx instruction
$B4E    $D0AB   DRW      V0, VA, #B      ; Draw 11-byte sprite at V0, VA
$B50    $157E   JP       $57E            ; Jump to 57E
$B52    $82D6   SHR      V2              ; V2 >>= 1, VF = LSB
$B54    $C0A9   RND      V0, #A9         ; V0 = random & A9
$B56    $36D1   SE       V6, #D1         ; Skip if V6 == 209
$B58    $CAD1   RND      VA, #D1         ; VA = random & D1
$B5A    $D711   DRW      V7, V1, #1      ; Draw 1-byte sprite at V7, V1
$B5C    $DE6D   DRW      VE, V6, #D      ; Draw 13-byte sprite at VE, V6
$B5E    $34FF   SE       V4, #FF         ; Skip if V4 == 255
$B60    $B451   JP       V0, $451        ; Jump to V0 + 451
$B62    $1CD0   JP       $CD0            ; Jump to CD0
$B64    $8FF8   UNKNOWN  8FF8            ; Unknown 8xxx instruction
$B66    $6C76   LD       VC, #76         ; Load 118 into VC
$B68    $2C51   CALL     $C51            ; Call subroutine at C51
$B6A    $FD91   UNKNOWN  FD91            ; Unknown Fxxx instruction
$B6C    $E5CB   UNKNOWN  $E5CB           ; Unknown Exxx instruction
$B6E    $A67D   LD       I, $67D         ; Load 67D into I
$B70    $4EB2   SNE      VE, #B2         ; Skip if VE != 178
$B72    $E617   UNKNOWN  $E617           ; Unknown Exxx instruction
$B74    $EC95   UNKNOWN  $EC95           ; Unknown Exxx instruction
$B76    $1EB7   JP       $EB7            ; Jump to EB7
$B78    $CED6   RND      VE, #D6         ; VE = random & D6
$B7A    $989F   UNKNOWN  $989F           ; Unknown 9xxx instruction
$B7C    $DF9D   DRW      VF, V9, #D      ; Draw 13-byte sprite at VF, V9
$B7E    $9B57   UNKNOWN  $9B57           ; Unknown 9xxx instruction
$B80    $8D57   SUBN     VD, V5          ; VD = V5 - VD, VF = !borrow
$B82    $7051   ADD      V0, #51         ; Add 81 to V0
$B84    $D29E   DRW      V2, V9, #E      ; Draw 14-byte sprite at V2, V9
$B86    $4C55   SNE      VC, #55         ; Skip if VC != 85
$B88    $2299   CALL     $299            ; Call subroutine at 299
$B8A    $84E3   XOR      V4, VE          ; V4 ^= VE
$B8C    $937E   UNKNOWN  $937E           ; Unknown 9xxx instruction
$B8E    $DBE4   DRW      VB, VE, #4      ; Draw 4-byte sprite at VB, VE
$B90    $14B9   JP       $4B9            ; Jump to 4B9
$B92    $4DFD   SNE      VD, #FD         ; Skip if VD != 253
$B94    $AD89   LD       I, $D89         ; Load D89 into I
$B96    $3237   SE       V2, #37         ; Skip if V2 == 55
$B98    $A476   LD       I, $476         ; Load 476 into I
$B9A    $4B78   SNE      VB, #78         ; Skip if VB != 120
$B9C    $7AC1   ADD      VA, #C1         ; Add 193 to VA
$B9E    $E92B   UNKNOWN  $E92B           ; Unknown Exxx instruction
$BA0    $9342   UNKNOWN  $9342           ; Unknown 9xxx instruction
$BA2    $152F   JP       $52F            ; Jump to 52F
$BA4    $DA0E   DRW      VA, V0, #E      ; Draw 14-byte sprite at VA, V0
$BA6    $5BEB   UNKNOWN  $5BEB           ; Unknown 5xxx instruction
$BA8    $BCB4   JP       V0, $CB4        ; Jump to V0 + CB4
$BAA    $8B4D   UNKNOWN  8B4D            ; Unknown 8xxx instruction
$BAC    $BC28   JP       V0, $C28        ; Jump to V0 + C28
$BAE    $3181   SE       V1, #81         ; Skip if V1 == 129
$BB0    $C49C   RND      V4, #9C         ; V4 = random & 9C
$BB2    $689A   LD       V8, #9A         ; Load 154 into V8
$BB4    $45C4   SNE      V5, #C4         ; Skip if V5 != 196
$BB6    $EEB6   UNKNOWN  $EEB6           ; Unknown Exxx instruction
$BB8    $148B   JP       $48B            ; Jump to 48B
$BBA    $2C23   CALL     $C23            ; Call subroutine at C23
$BBC    $473A   SNE      V7, #3A         ; Skip if V7 != 58
$BBE    $FDFA   UNKNOWN  FDFA            ; Unknown Fxxx instruction
$BC0    $28C3   CALL     $8C3            ; Call subroutine at 8C3
$BC2    $E35C   UNKNOWN  $E35C           ; Unknown Exxx instruction
$BC4    $C3C8   RND      V3, #C8         ; V3 = random & C8
$BC6    $9E33   UNKNOWN  $9E33           ; Unknown 9xxx instruction
$BC8    $653E   LD       V5, #3E         ; Load 62 into V5
$BCA    $34B9   SE       V4, #B9         ; Skip if V4 == 185
$BCC    $A77B   LD       I, $77B         ; Load 77B into I
$BCE    $6807   LD       V8, #07         ; Load 7 into V8
$BD0    $4ED8   SNE      VE, #D8         ; Skip if VE != 216
$BD2    $B858   JP       V0, $858        ; Jump to V0 + 858
$BD4    $DA9E   DRW      VA, V9, #E      ; Draw 14-byte sprite at VA, V9
$BD6    $3F73   SE       VF, #73         ; Skip if VF == 115
$BD8    $1294   JP       $294            ; Jump to 294
$BDA    $19B2   JP       $9B2            ; Jump to 9B2
$BDC    $186B   JP       $86B            ; Jump to 86B
$BDE    $0C57   SYS      $C57            ; System call to C57
$BE0    $728B   ADD      V2, #8B         ; Add 139 to V2
$BE2    $02E0   SYS      $2E0            ; System call to 2E0
$BE4    $8310   LD       V3, V1          ; V3 = V1
$BE6    $1F10   JP       $F10            ; Jump to F10
$BE8    $0C12   SYS      $C12            ; System call to C12
$BEA    $D32E   DRW      V3, V2, #E      ; Draw 14-byte sprite at V3, V2
$BEC    $8FB3   XOR      VF, VB          ; VF ^= VB
$BEE    $815C   UNKNOWN  815C            ; Unknown 8xxx instruction
$BF0    $2866   CALL     $866            ; Call subroutine at 866
$BF2    $E488   UNKNOWN  $E488           ; Unknown Exxx instruction
$BF4    $1A39   JP       $A39            ; Jump to A39
$BF6    $F8BA   UNKNOWN  F8BA            ; Unknown Fxxx instruction
$BF8    $9F69   UNKNOWN  $9F69           ; Unknown 9xxx instruction
$BFA    $7694   ADD      V6, #94         ; Add 148 to V6
$BFC    $3A69   SE       VA, #69         ; Skip if VA == 105
$BFE    $673B   LD       V7, #3B         ; Load 59 into V7
$C00    $0556   SYS      $556            ; System call to 556
$C02    $6513   LD       V5, #13         ; Load 19 into V5
$C04    $3AA2   SE       VA, #A2         ; Skip if VA == 162
$C06    $3B68   SE       VB, #68         ; Skip if VB == 104
$C08    $DCF4   DRW      VC, VF, #4      ; Draw 4-byte sprite at VC, VF
$C0A    $77A0   ADD      V7, #A0         ; Add 160 to V7
$C0C    $89E9   UNKNOWN  89E9            ; Unknown 8xxx instruction
$C0E    $FAE7   UNKNOWN  FAE7            ; Unknown Fxxx instruction
$C10    $B677   JP       V0, $677        ; Jump to V0 + 677
$C12    $B44C   JP       V0, $44C        ; Jump to V0 + 44C
$C14    $3377   SE       V3, #77         ; Skip if V3 == 119
$C16    $A39C   LD       I, $39C         ; Load 39C into I
$C18    $E63E   UNKNOWN  $E63E           ; Unknown Exxx instruction
$C1A    $A5F2   LD       I, $5F2         ; Load 5F2 into I
$C1C    $9EE2   UNKNOWN  $9EE2           ; Unknown 9xxx instruction
$C1E    $A2CC   LD       I, $2CC         ; Load 2CC into I
$C20    $D9FA   DRW      V9, VF, #A      ; Draw 10-byte sprite at V9, VF
$C22    $2321   CALL     $321            ; Call subroutine at 321
$C24    $AF72   LD       I, $F72         ; Load F72 into I
$C26    $0F03   SYS      $F03            ; System call to F03
$C28    $6AF0   LD       VA, #F0         ; Load 240 into VA
$C2A    $0E9D   SYS      $E9D            ; System call to E9D
$C2C    $AABF   LD       I, $ABF         ; Load ABF into I
$C2E    $4F31   SNE      VF, #31         ; Skip if VF != 49
$C30    $9BB4   UNKNOWN  $9BB4           ; Unknown 9xxx instruction
$C32    $6BF5   LD       VB, #F5         ; Load 245 into VB
$C34    $7351   ADD      V3, #51         ; Add 81 to V3
$C36    $A019   LD       I, $019         ; Load 019 into I
$C38    $2EA6   CALL     $EA6            ; Call subroutine at EA6
$C3A    $6379   LD       V3, #79         ; Load 121 into V3
$C3C    $B811   JP       V0, $811        ; Jump to V0 + 811
$C3E    $377D   SE       V7, #7D         ; Skip if V7 == 125
$C40    $14A5   JP       $4A5            ; Jump to 4A5
$C42    $BC31   JP       V0, $C31        ; Jump to V0 + C31
$C44    $9B4C   UNKNOWN  $9B4C           ; Unknown 9xxx instruction
$C46    $0D68   SYS      $D68            ; System call to D68
$C48    $B017   JP       V0, $017        ; Jump to V0 + 017
$C4A    $89BC   UNKNOWN  89BC            ; Unknown 8xxx instruction
$C4C    $CCF8   RND      VC, #F8         ; VC = random & F8
$C4E    $49B3   SNE      V9, #B3         ; Skip if V9 != 179
$C50    $4F13   SNE      VF, #13         ; Skip if VF != 19
$C52    $E726   UNKNOWN  $E726           ; Unknown Exxx instruction
$C54    $F314   UNKNOWN  F314            ; Unknown Fxxx instruction
$C56    $078F   SYS      $78F            ; System call to 78F
$C58    $C143   RND      V1, #43         ; V1 = random & 43
$C5A    $D661   DRW      V6, V6, #1      ; Draw 1-byte sprite at V6, V6
$C5C    $D79B   DRW      V7, V9, #B      ; Draw 11-byte sprite at V7, V9
$C5E    $253F   CALL     $53F            ; Call subroutine at 53F
$C60    $04C4   SYS      $4C4            ; System call to 4C4
$C62    $2BC0   CALL     $BC0            ; Call subroutine at BC0
$C64    $E9C6   UNKNOWN  $E9C6           ; Unknown Exxx instruction
$C66    $E3A3   UNKNOWN  $E3A3           ; Unknown Exxx instruction
$C68    $3874   SE       V8, #74         ; Skip if V8 == 116
$C6A    $F055   LD       [I], V0         ; Store V0-V0 at I
$C6C    $F290   UNKNOWN  F290            ; Unknown Fxxx instruction
$C6E    $789B   ADD      V8, #9B         ; Add 155 to V8
$C70    $79D9   ADD      V9, #D9         ; Add 217 to V9
$C72    $0610   SYS      $610            ; System call to 610
$C74    $B458   JP       V0, $458        ; Jump to V0 + 458
$C76    $28DC   CALL     $8DC            ; Call subroutine at 8DC
$C78    $B5B8   JP       V0, $5B8        ; Jump to V0 + 5B8
$C7A    $1BA8   JP       $BA8            ; Jump to BA8
$C7C    $3D71   SE       VD, #71         ; Skip if VD == 113
$C7E    $84EF   UNKNOWN  84EF            ; Unknown 8xxx instruction
$C80    $B32D   JP       V0, $32D        ; Jump to V0 + 32D
$C82    $C81D   RND      V8, #1D         ; V8 = random & 1D
$C84    $94EF   UNKNOWN  $94EF           ; Unknown 9xxx instruction
$C86    $4C56   SNE      VC, #56         ; Skip if VC != 86
$C88    $D415   DRW      V4, V1, #5      ; Draw 5-byte sprite at V4, V1
$C8A    $8E39   UNKNOWN  8E39            ; Unknown 8xxx instruction
$C8C    $AE1C   LD       I, $E1C         ; Load E1C into I
$C8E    $F3BD   UNKNOWN  F3BD            ; Unknown Fxxx instruction
$C90    $D94D   DRW      V9, V4, #D      ; Draw 13-byte sprite at V9, V4
$C92    $B696   JP       V0, $696        ; Jump to V0 + 696
$C94    $82C2   AND      V2, VC          ; V2 &= VC
$C96    $2FE8   CALL     $FE8            ; Call subroutine at FE8
$C98    $DC05   DRW      VC, V0, #5      ; Draw 5-byte sprite at VC, V0
$C9A    $1496   JP       $496            ; Jump to 496
$C9C    $14E6   JP       $4E6            ; Jump to 4E6
$C9E    $7F76   ADD      VF, #76         ; Add 118 to VF
$CA0    $669F   LD       V6, #9F         ; Load 159 into V6
$CA2    $260A   CALL     $60A            ; Call subroutine at 60A
$CA4    $2EE9   CALL     $EE9            ; Call subroutine at EE9
$CA6    $BE82   JP       V0, $E82        ; Jump to V0 + E82
$CA8    $A5AA   LD       I, $5AA         ; Load 5AA into I
$CAA    $04B7   SYS      $4B7            ; System call to 4B7
$CAC    $D5F1   DRW      V5, VF, #1      ; Draw 1-byte sprite at V5, VF
$CAE    $396D   SE       V9, #6D         ; Skip if V9 == 109
$CB0    $77FF   ADD      V7, #FF         ; Add 255 to V7
$CB2    $7398   ADD      V3, #98         ; Add 152 to V3
$CB4    $FEDD   UNKNOWN  FEDD            ; Unknown Fxxx instruction
$CB6    $A5F8   LD       I, $5F8         ; Load 5F8 into I
$CB8    $CB48   RND      VB, #48         ; VB = random & 48
$CBA    $61DF   LD       V1, #DF         ; Load 223 into V1
$CBC    $207A   CALL     $07A            ; Call subroutine at 07A
$CBE    $5F7B   UNKNOWN  $5F7B           ; Unknown 5xxx instruction
$CC0    $2D23   CALL     $D23            ; Call subroutine at D23
$CC2    $1E43   JP       $E43            ; Jump to E43
$CC4    $7F23   ADD      VF, #23         ; Add 35 to VF
$CC6    $5A53   UNKNOWN  $5A53           ; Unknown 5xxx instruction
$CC8    $792C   ADD      V9, #2C         ; Add 44 to V9
$CCA    $5FB7   UNKNOWN  $5FB7           ; Unknown 5xxx instruction
$CCC    $C05C   RND      V0, #5C         ; V0 = random & 5C
$CCE    $BCB4   JP       V0, $CB4        ; Jump to V0 + CB4
$CD0    $004E   SYS      $04E            ; System call to 04E
$CD2    $4EFB   SNE      VE, #FB         ; Skip if VE != 251
$CD4    $709E   ADD      V0, #9E         ; Add 158 to V0
$CD6    $C968   RND      V9, #68         ; V9 = random & 68
$CD8    $1471   JP       $471            ; Jump to 471
$CDA    $CB67   RND      VB, #67         ; VB = random & 67
$CDC    $3D4F   SE       VD, #4F         ; Skip if VD == 79
$CDE    $2D47   CALL     $D47            ; Call subroutine at D47
$CE0    $F09A   UNKNOWN  F09A            ; Unknown Fxxx instruction
$CE2    $0B39   SYS      $B39            ; System call to B39
$CE4    $72DC   ADD      V2, #DC         ; Add 220 to V2
$CE6    $ED02   UNKNOWN  $ED02           ; Unknown Exxx instruction
$CE8    $95E4   UNKNOWN  $95E4           ; Unknown 9xxx instruction
$CEA    $51E6   UNKNOWN  $51E6           ; Unknown 5xxx instruction
$CEC    $E173   UNKNOWN  $E173           ; Unknown Exxx instruction
$CEE    $64DD   LD       V4, #DD         ; Load 221 into V4
$CF0    $141E   JP       $41E            ; Jump to 41E
$CF2    $0EDF   SYS      $EDF            ; System call to EDF
$CF4    $457D   SNE      V5, #7D         ; Skip if V5 != 125
$CF6    $3498   SE       V4, #98         ; Skip if V4 == 152
$CF8    $0587   SYS      $587            ; System call to 587
$CFA    $F5B8   UNKNOWN  F5B8            ; Unknown Fxxx instruction
$CFC    $87DB   UNKNOWN  87DB            ; Unknown 8xxx instruction
$CFE    $7552   ADD      V5, #52         ; Add 82 to V5
$D00    $8621   OR       V6, V2          ; V6 |= V2
$D02    $5198   UNKNOWN  $5198           ; Unknown 5xxx instruction
$D04    $9F49   UNKNOWN  $9F49           ; Unknown 9xxx instruction
$D06    $1635   JP       $635            ; Jump to 635
$D08    $4578   SNE      V5, #78         ; Skip if V5 != 120
$D0A    $15F0   JP       $5F0            ; Jump to 5F0
$D0C    $6824   LD       V8, #24         ; Load 36 into V8
$D0E    $0EC3   SYS      $EC3            ; System call to EC3
$D10    $C634   RND      V6, #34         ; V6 = random & 34
$D12    $58EC   UNKNOWN  $58EC           ; Unknown 5xxx instruction
$D14    $6C8C   LD       VC, #8C         ; Load 140 into VC
$D16    $9978   UNKNOWN  $9978           ; Unknown 9xxx instruction
$D18    $5203   UNKNOWN  $5203           ; Unknown 5xxx instruction
$D1A    $8367   SUBN     V3, V6          ; V3 = V6 - V3, VF = !borrow
$D1C    $2E1D   CALL     $E1D            ; Call subroutine at E1D
$D1E    $2FF1   CALL     $FF1            ; Call subroutine at FF1
$D20    $776B   ADD      V7, #6B         ; Add 107 to V7
$D22    $4358   SNE      V3, #58         ; Skip if V3 != 88
$D24    $40F0   SNE      V0, #F0         ; Skip if V0 != 240
$D26    $936A   UNKNOWN  $936A           ; Unknown 9xxx instruction
$D28    $FF25   UNKNOWN  FF25            ; Unknown Fxxx instruction
$D2A    $1E99   JP       $E99            ; Jump to E99
$D2C    $4EAB   SNE      VE, #AB         ; Skip if VE != 171
$D2E    $09D2   SYS      $9D2            ; System call to 9D2
$D30    $646E   LD       V4, #6E         ; Load 110 into V4
$D32    $66FE   LD       V6, #FE         ; Load 254 into V6
$D34    $D500   DRW      V5, V0, #0      ; Draw 0-byte sprite at V5, V0
$D36    $C808   RND      V8, #08         ; V8 = random & 08
$D38    $6B2E   LD       VB, #2E         ; Load 46 into VB
$D3A    $9A57   UNKNOWN  $9A57           ; Unknown 9xxx instruction
$D3C    $FDB2   UNKNOWN  FDB2            ; Unknown Fxxx instruction
$D3E    $EA0C   UNKNOWN  $EA0C           ; Unknown Exxx instruction
$D40    $D1B4   DRW      V1, VB, #4      ; Draw 4-byte sprite at V1, VB
$D42    $DA25   DRW      VA, V2, #5      ; Draw 5-byte sprite at VA, V2
$D44    $3004   SE       V0, #04         ; Skip if V0 == 4
$D46    $A116   LD       I, $116         ; Load 116 into I
$D48    $1E39   JP       $E39            ; Jump to E39
$D4A    $F19C   UNKNOWN  F19C            ; Unknown Fxxx instruction
$D4C    $B968   JP       V0, $968        ; Jump to V0 + 968
$D4E    $FE62   UNKNOWN  FE62            ; Unknown Fxxx instruction
$D50    $F239   UNKNOWN  F239            ; Unknown Fxxx instruction
$D52    $20C0   CALL     $0C0            ; Call subroutine at 0C0
$D54    $5390   SE       V3, V9          ; Skip if V3 == V9
$D56    $EBCA   UNKNOWN  $EBCA           ; Unknown Exxx instruction
$D58    $C0F1   RND      V0, #F1         ; V0 = random & F1
$D5A    $51DD   UNKNOWN  $51DD           ; Unknown 5xxx instruction
$D5C    $E654   UNKNOWN  $E654           ; Unknown Exxx instruction
$D5E    $4345   SNE      V3, #45         ; Skip if V3 != 69
$D60    $A4A8   LD       I, $4A8         ; Load 4A8 into I
$D62    $801B   UNKNOWN  801B            ; Unknown 8xxx instruction
$D64    $095C   SYS      $95C            ; System call to 95C
$D66    $532D   UNKNOWN  $532D           ; Unknown 5xxx instruction
$D68    $EA1E   UNKNOWN  $EA1E           ; Unknown Exxx instruction
$D6A    $AC88   LD       I, $C88         ; Load C88 into I
$D6C    $70EC   ADD      V0, #EC         ; Add 236 to V0
$D6E    $4C1D   SNE      VC, #1D         ; Skip if VC != 29
$D70    $DFA8   DRW      VF, VA, #8      ; Draw 8-byte sprite at VF, VA
$D72    $D7BA   DRW      V7, VB, #A      ; Draw 10-byte sprite at V7, VB
$D74    $7BEC   ADD      VB, #EC         ; Add 236 to VB
$D76    $773B   ADD      V7, #3B         ; Add 59 to V7
$D78    $0EEA   SYS      $EEA            ; System call to EEA
$D7A    $F592   UNKNOWN  F592            ; Unknown Fxxx instruction
$D7C    $8D2D   UNKNOWN  8D2D            ; Unknown 8xxx instruction
$D7E    $1741   JP       $741            ; Jump to 741
$D80    $5B7C   UNKNOWN  $5B7C           ; Unknown 5xxx instruction
$D82    $2406   CALL     $406            ; Call subroutine at 406
$D84    $2BD1   CALL     $BD1            ; Call subroutine at BD1
$D86    $6A8B   LD       VA, #8B         ; Load 139 into VA
$D88    $E0D6   UNKNOWN  $E0D6           ; Unknown Exxx instruction
$D8A    $5E35   UNKNOWN  $5E35           ; Unknown 5xxx instruction
$D8C    $D902   DRW      V9, V0, #2      ; Draw 2-byte sprite at V9, V0
$D8E    $D07F   DRW      V0, V7, #F      ; Draw 15-byte sprite at V0, V7
$D90    $D300   DRW      V3, V0, #0      ; Draw 0-byte sprite at V3, V0
$D92    $13C0   JP       $3C0            ; Jump to 3C0
$D94    $2D47   CALL     $D47            ; Call subroutine at D47
$D96    $6D0F   LD       VD, #0F         ; Load 15 into VD
$D98    $75C5   ADD      V5, #C5         ; Add 197 to V5
$D9A    $4874   SNE      V8, #74         ; Skip if V8 != 116
$D9C    $5DD0   SE       VD, VD          ; Skip if VD == VD
$D9E    $3AB6   SE       VA, #B6         ; Skip if VA == 182
$DA0    $505C   UNKNOWN  $505C           ; Unknown 5xxx instruction
$DA2    $B4CF   JP       V0, $4CF        ; Jump to V0 + 4CF
$DA4    $3BE5   SE       VB, #E5         ; Skip if VB == 229
$DA6    $8A9F   UNKNOWN  8A9F            ; Unknown 8xxx instruction
$DA8    $6735   LD       V7, #35         ; Load 53 into V7
$DAA    $32A6   SE       V2, #A6         ; Skip if V2 == 166
$DAC    $245E   CALL     $45E            ; Call subroutine at 45E
$DAE    $2DB9   CALL     $DB9            ; Call subroutine at DB9
$DB0    $08C7   SYS      $8C7            ; System call to 8C7
$DB2    $C6E6   RND      V6, #E6         ; V6 = random & E6
$DB4    $1C3F   JP       $C3F            ; Jump to C3F
$DB6    $95D8   UNKNOWN  $95D8           ; Unknown 9xxx instruction
$DB8    $95F8   UNKNOWN  $95F8           ; Unknown 9xxx instruction
$DBA    $FD87   UNKNOWN  FD87            ; Unknown Fxxx instruction
$DBC    $6445   LD       V4, #45         ; Load 69 into V4
$DBE    $BA66   JP       V0, $A66        ; Jump to V0 + A66
$DC0    $8F4B   UNKNOWN  8F4B            ; Unknown 8xxx instruction
$DC2    $94CC   UNKNOWN  $94CC           ; Unknown 9xxx instruction
$DC4    $B71E   JP       V0, $71E        ; Jump to V0 + 71E
$DC6    $C6A6   RND      V6, #A6         ; V6 = random & A6
$DC8    $D18F   DRW      V1, V8, #F      ; Draw 15-byte sprite at V1, V8
$DCA    $95CC   UNKNOWN  $95CC           ; Unknown 9xxx instruction
$DCC    $38C9   SE       V8, #C9         ; Skip if V8 == 201
$DCE    $841F   UNKNOWN  841F            ; Unknown 8xxx instruction
$DD0    $DB22   DRW      VB, V2, #2      ; Draw 2-byte sprite at VB, V2
$DD2    $2B95   CALL     $B95            ; Call subroutine at B95
$DD4    $AA37   LD       I, $A37         ; Load A37 into I
$DD6    $84A8   UNKNOWN  84A8            ; Unknown 8xxx instruction
$DD8    $2F4B   CALL     $F4B            ; Call subroutine at F4B
$DDA    $AFB3   LD       I, $FB3         ; Load FB3 into I
$DDC    $C3C5   RND      V3, #C5         ; V3 = random & C5
$DDE    $6691   LD       V6, #91         ; Load 145 into V6
$DE0    $4AFA   SNE      VA, #FA         ; Skip if VA != 250
$DE2    $B9BD   JP       V0, $9BD        ; Jump to V0 + 9BD
$DE4    $FEE0   UNKNOWN  FEE0            ; Unknown Fxxx instruction
$DE6    $026E   SYS      $26E            ; System call to 26E
$DE8    $D29A   DRW      V2, V9, #A      ; Draw 10-byte sprite at V2, V9
$DEA    $61A8   LD       V1, #A8         ; Load 168 into V1
$DEC    $E827   UNKNOWN  $E827           ; Unknown Exxx instruction
$DEE    $38FA   SE       V8, #FA         ; Skip if V8 == 250
$DF0    $FE92   UNKNOWN  FE92            ; Unknown Fxxx instruction
$DF2    $8107   SUBN     V1, V0          ; V1 = V0 - V1, VF = !borrow
$DF4    $F8DB   UNKNOWN  F8DB            ; Unknown Fxxx instruction
$DF6    $0D1C   SYS      $D1C            ; System call to D1C
$DF8    $3296   SE       V2, #96         ; Skip if V2 == 150
$DFA    $FE89   UNKNOWN  FE89            ; Unknown Fxxx instruction
$DFC    $1178   JP       $178            ; Jump to 178
$DFE    $14B6   JP       $4B6            ; Jump to 4B6
$E00    $F7E9   UNKNOWN  F7E9            ; Unknown Fxxx instruction
$E02    $4EC9   SNE      VE, #C9         ; Skip if VE != 201
$E04    $A2ED   LD       I, $2ED         ; Load 2ED into I
$E06    $06CF   SYS      $6CF            ; System call to 6CF
$E08    $97B9   UNKNOWN  $97B9           ; Unknown 9xxx instruction
$E0A    $7E0C   ADD      VE, #0C         ; Add 12 to VE
$E0C    $AC7E   LD       I, $C7E         ; Load C7E into I
$E0E    $5CFE   UNKNOWN  $5CFE           ; Unknown 5xxx instruction
$E10    $3D55   SE       VD, #55         ; Skip if VD == 85
$E12    $D7E6   DRW      V7, VE, #6      ; Draw 6-byte sprite at V7, VE
$E14    $C4E3   RND      V4, #E3         ; V4 = random & E3
$E16    $20F7   CALL     $0F7            ; Call subroutine at 0F7
$E18    $F042   UNKNOWN  F042            ; Unknown Fxxx instruction
$E1A    $2F95   CALL     $F95            ; Call subroutine at F95
$E1C    $611E   LD       V1, #1E         ; Load 30 into V1
$E1E    $2FBA   CALL     $FBA            ; Call subroutine at FBA
$E20    $DA68   DRW      VA, V6, #8      ; Draw 8-byte sprite at VA, V6
$E22    $F454   UNKNOWN  F454            ; Unknown Fxxx instruction
$E24    $63DA   LD       V3, #DA         ; Load 218 into V3
$E26    $3868   SE       V8, #68         ; Skip if V8 == 104
$E28    $8890   LD       V8, V9          ; V8 = V9
$E2A    $502E   UNKNOWN  $502E           ; Unknown 5xxx instruction
$E2C    $534E   UNKNOWN  $534E           ; Unknown 5xxx instruction
$E2E    $28EC   CALL     $8EC            ; Call subroutine at 8EC
$E30    $22C5   CALL     $2C5            ; Call subroutine at 2C5
$E32    $7459   ADD      V4, #59         ; Add 89 to V4
$E34    $FFA4   UNKNOWN  FFA4            ; Unknown Fxxx instruction
$E36    $539B   UNKNOWN  $539B           ; Unknown 5xxx instruction
$E38    $176D   JP       $76D            ; Jump to 76D
$E3A    $417A   SNE      V1, #7A         ; Skip if V1 != 122
$E3C    $321D   SE       V2, #1D         ; Skip if V2 == 29
$E3E    $0E72   SYS      $E72            ; System call to E72
$E40    $6938   LD       V9, #38         ; Load 56 into V9
$E42    $2AB1   CALL     $AB1            ; Call subroutine at AB1
$E44    $CE0B   RND      VE, #0B         ; VE = random & 0B
$E46    $F4F5   UNKNOWN  F4F5            ; Unknown Fxxx instruction
$E48    $9289   UNKNOWN  $9289           ; Unknown 9xxx instruction
$E4A    $C659   RND      V6, #59         ; V6 = random & 59
$E4C    $BB98   JP       V0, $B98        ; Jump to V0 + B98
$E4E    $CCCC   RND      VC, #CC         ; VC = random & CC
$E50    $D926   DRW      V9, V2, #6      ; Draw 6-byte sprite at V9, V2
$E52    $1509   JP       $509            ; Jump to 509
$E54    $9AD0   SNE      VA, VD          ; Skip if VA != VD
$E56    $8C10   LD       VC, V1          ; VC = V1
$E58    $0173   SYS      $173            ; System call to 173
$E5A    $1665   JP       $665            ; Jump to 665
$E5C    $16F8   JP       $6F8            ; Jump to 6F8
$E5E    $6BA5   LD       VB, #A5         ; Load 165 into VB
$E60    $8FED   UNKNOWN  8FED            ; Unknown 8xxx instruction
$E62    $FB9B   UNKNOWN  FB9B            ; Unknown Fxxx instruction
$E64    $8037   SUBN     V0, V3          ; V0 = V3 - V0, VF = !borrow
$E66    $B001   JP       V0, $001        ; Jump to V0 + 001
$E68    $991A   UNKNOWN  $991A           ; Unknown 9xxx instruction
$E6A    $8741   OR       V7, V4          ; V7 |= V4
$E6C    $BBE3   JP       V0, $BE3        ; Jump to V0 + BE3
$E6E    $1ADD   JP       $ADD            ; Jump to ADD
$E70    $AB52   LD       I, $B52         ; Load B52 into I
$E72    $36C7   SE       V6, #C7         ; Skip if V6 == 199
$E74    $D9F9   DRW      V9, VF, #9      ; Draw 9-byte sprite at V9, VF
$E76    $18C8   JP       $8C8            ; Jump to 8C8
$E78    $A448   LD       I, $448         ; Load 448 into I
$E7A    $015C   SYS      $15C            ; System call to 15C
$E7C    $B3B3   JP       V0, $3B3        ; Jump to V0 + 3B3
$E7E    $3E58   SE       VE, #58         ; Skip if VE == 88
$E80    $53D9   UNKNOWN  $53D9           ; Unknown 5xxx instruction
$E82    $9B02   UNKNOWN  $9B02           ; Unknown 9xxx instruction
$E84    $3156   SE       V1, #56         ; Skip if V1 == 86
$E86    $A1A6   LD       I, $1A6         ; Load 1A6 into I
$E88    $ED40   UNKNOWN  $ED40           ; Unknown Exxx instruction
$E8A    $D77C   DRW      V7, V7, #C      ; Draw 12-byte sprite at V7, V7
$E8C    $D877   DRW      V8, V7, #7      ; Draw 7-byte sprite at V8, V7
$E8E    $E2A5   UNKNOWN  $E2A5           ; Unknown Exxx instruction
$E90    $B095   JP       V0, $095        ; Jump to V0 + 095
$E92    $B57D   JP       V0, $57D        ; Jump to V0 + 57D
$E94    $4FB7   SNE      VF, #B7         ; Skip if VF != 183
$E96    $9348   UNKNOWN  $9348           ; Unknown 9xxx instruction
$E98    $336D   SE       V3, #6D         ; Skip if V3 == 109
$E9A    $9DCF   UNKNOWN  $9DCF           ; Unknown 9xxx instruction
$E9C    $C5D5   RND      V5, #D5         ; V5 = random & D5
$E9E    $1B93   JP       $B93            ; Jump to B93
$EA0    $9DE3   UNKNOWN  $9DE3           ; Unknown 9xxx instruction
$EA2    $D9A6   DRW      V9, VA, #6      ; Draw 6-byte sprite at V9, VA
$EA4    $4EF2   SNE      VE, #F2         ; Skip if VE != 242
$EA6    $BEF5   JP       V0, $EF5        ; Jump to V0 + EF5
$EA8    $7AB6   ADD      VA, #B6         ; Add 182 to VA
$EAA    $A389   LD       I, $389         ; Load 389 into I
$EAC    $CF8C   RND      VF, #8C         ; VF = random & 8C
$EAE    $53CE   UNKNOWN  $53CE           ; Unknown 5xxx instruction
$EB0    $87EC   UNKNOWN  87EC            ; Unknown 8xxx instruction
$EB2    $8CD0   LD       VC, VD          ; VC = VD
$EB4    $5FEA   UNKNOWN  $5FEA           ; Unknown 5xxx instruction
$EB6    $6F1A   LD       VF, #1A         ; Load 26 into VF
$EB8    $3E00   SE       VE, #00         ; Skip if VE == 0
$EBA    $CE94   RND      VE, #94         ; VE = random & 94
$EBC    $FA6C   UNKNOWN  FA6C            ; Unknown Fxxx instruction
$EBE    $9782   UNKNOWN  $9782           ; Unknown 9xxx instruction
$EC0    $4158   SNE      V1, #58         ; Skip if V1 != 88
$EC2    $EEEF   UNKNOWN  $EEEF           ; Unknown Exxx instruction
$EC4    $400F   SNE      V0, #0F         ; Skip if V0 != 15
$EC6    $EB2D   UNKNOWN  $EB2D           ; Unknown Exxx instruction
$EC8    $D220   DRW      V2, V2, #0      ; Draw 0-byte sprite at V2, V2
$ECA    $280A   CALL     $80A            ; Call subroutine at 80A
$ECC    $C4B5   RND      V4, #B5         ; V4 = random & B5
$ECE    $6549   LD       V5, #49         ; Load 73 into V5
$ED0    $7898   ADD      V8, #98         ; Add 152 to V8
$ED2    $D560   DRW      V5, V6, #0      ; Draw 0-byte sprite at V5, V6
$ED4    $397D   SE       V9, #7D         ; Skip if V9 == 125
$ED6    $E6B3   UNKNOWN  $E6B3           ; Unknown Exxx instruction
$ED8    $7623   ADD      V6, #23         ; Add 35 to V6
$EDA    $4E1E   SNE      VE, #1E         ; Skip if VE != 30
$EDC    $BBA8   JP       V0, $BA8        ; Jump to V0 + BA8
$EDE    $A985   LD       I, $985         ; Load 985 into I
$EE0    $F8E4   UNKNOWN  F8E4            ; Unknown Fxxx instruction
$EE2    $FFB8   UNKNOWN  FFB8            ; Unknown Fxxx instruction
$EE4    $E110   UNKNOWN  $E110           ; Unknown Exxx instruction
$EE6    $E1D2   UNKNOWN  $E1D2           ; Unknown Exxx instruction
$EE8    $B034   JP       V0, $034        ; Jump to V0 + 034
$EEA    $5D8D   UNKNOWN  $5D8D           ; Unknown 5xxx instruction
$EEC    $9D93   UNKNOWN  $9D93           ; Unknown 9xxx instruction
$EEE    $DADF   DRW      VA, VD, #F      ; Draw 15-byte sprite at VA, VD
$EF0    $A49E   LD       I, $49E         ; Load 49E into I
$EF2    $3962   SE       V9, #62         ; Skip if V9 == 98
$EF4    $8A3F   UNKNOWN  8A3F            ; Unknown 8xxx instruction
$EF6    $36AF   SE       V6, #AF         ; Skip if V6 == 175
$EF8    $0DFD   SYS      $DFD            ; System call to DFD
$EFA    $ED7B   UNKNOWN  $ED7B           ; Unknown Exxx instruction
$EFC    $7B4C   ADD      VB, #4C         ; Add 76 to VB
$EFE    $1642   JP       $642            ; Jump to 642
$F00    $8D42   AND      VD, V4          ; VD &= V4
$F02    $DA43   DRW      VA, V4, #3      ; Draw 3-byte sprite at VA, V4
$F04    $B023   JP       V0, $023        ; Jump to V0 + 023
$F06    $9A75   UNKNOWN  $9A75           ; Unknown 9xxx instruction
$F08    $271B   CALL     $71B            ; Call subroutine at 71B
$F0A    $BF02   JP       V0, $F02        ; Jump to V0 + F02
$F0C    $D74A   DRW      V7, V4, #A      ; Draw 10-byte sprite at V7, V4
$F0E    $AFB1   LD       I, $FB1         ; Load FB1 into I
$F10    $28AE   CALL     $8AE            ; Call subroutine at 8AE
$F12    $E21D   UNKNOWN  $E21D           ; Unknown Exxx instruction
$F14    $4FEA   SNE      VF, #EA         ; Skip if VF != 234
$F16    $461F   SNE      V6, #1F         ; Skip if V6 != 31
$F18    $ABB3   LD       I, $BB3         ; Load BB3 into I
$F1A    $56DA   UNKNOWN  $56DA           ; Unknown 5xxx instruction
$F1C    $C69A   RND      V6, #9A         ; V6 = random & 9A
$F1E    $208D   CALL     $08D            ; Call subroutine at 08D
$F20    $5939   UNKNOWN  $5939           ; Unknown 5xxx instruction
$F22    $CD45   RND      VD, #45         ; VD = random & 45
$F24    $EC03   UNKNOWN  $EC03           ; Unknown Exxx instruction
$F26    $65B7   LD       V5, #B7         ; Load 183 into V5
$F28    $F006   UNKNOWN  F006            ; Unknown Fxxx instruction
$F2A    $C902   RND      V9, #02         ; V9 = random & 02
$F2C    $2966   CALL     $966            ; Call subroutine at 966
$F2E    $BE94   JP       V0, $E94        ; Jump to V0 + E94
$F30    $7641   ADD      V6, #41         ; Add 65 to V6
$F32    $26BD   CALL     $6BD            ; Call subroutine at 6BD
$F34    $96E6   UNKNOWN  $96E6           ; Unknown 9xxx instruction
$F36    $4E53   SNE      VE, #53         ; Skip if VE != 83
$F38    $9473   UNKNOWN  $9473           ; Unknown 9xxx instruction
$F3A    $E62A   UNKNOWN  $E62A           ; Unknown Exxx instruction
$F3C    $7659   ADD      V6, #59         ; Add 89 to V6
$F3E    $F9DC   UNKNOWN  F9DC            ; Unknown Fxxx instruction
$F40    $E5E2   UNKNOWN  $E5E2           ; Unknown Exxx instruction
$F42    $A851   LD       I, $851         ; Load 851 into I
$F44    $65B1   LD       V5, #B1         ; Load 177 into V5
$F46    $2C28   CALL     $C28            ; Call subroutine at C28
$F48    $BEEB   JP       V0, $EEB        ; Jump to V0 + EEB
$F4A    $D0FE   DRW      V0, VF, #E      ; Draw 14-byte sprite at V0, VF
$F4C    $E762   UNKNOWN  $E762           ; Unknown Exxx instruction
$F4E    $7672   ADD      V6, #72         ; Add 114 to V6
$F50    $3756   SE       V7, #56         ; Skip if V7 == 86
$F52    $91A5   UNKNOWN  $91A5           ; Unknown 9xxx instruction
$F54    $AF7C   LD       I, $F7C         ; Load F7C into I
$F56    $7251   ADD      V2, #51         ; Add 81 to V2
$F58    $7DFE   ADD      VD, #FE         ; Add 254 to VD
$F5A    $3B04   SE       VB, #04         ; Skip if VB == 4
$F5C    $CE08   RND      VE, #08         ; VE = random & 08
$F5E    $172B   JP       $72B            ; Jump to 72B
$F60    $3F5D   SE       VF, #5D         ; Skip if VF == 93
$F62    $B381   JP       V0, $381        ; Jump to V0 + 381
$F64    $0261   SYS      $261            ; System call to 261
$F66    $1B09   JP       $B09            ; Jump to B09
$F68    $54EA   UNKNOWN  $54EA           ; Unknown 5xxx instruction
$F6A    $578D   UNKNOWN  $578D           ; Unknown 5xxx instruction
$F6C    $D2C9   DRW      V2, VC, #9      ; Draw 9-byte sprite at V2, VC
$F6E    $48E0   SNE      V8, #E0         ; Skip if V8 != 224
$F70    $0F54   SYS      $F54            ; System call to F54
$F72    $4197   SNE      V1, #97         ; Skip if V1 != 151
$F74    $F218   LD       ST, V2          ; Sound timer = V2
$F76    $89AD   UNKNOWN  89AD            ; Unknown 8xxx instruction
$F78    $2102   CALL     $102            ; Call subroutine at 102
$F7A    $4C13   SNE      VC, #13         ; Skip if VC != 19
$F7C    $6C97   LD       VC, #97         ; Load 151 into VC
$F7E    $5099   UNKNOWN  $5099           ; Unknown 5xxx instruction
$F80    $B0FF   JP       V0, $0FF        ; Jump to V0 + 0FF
$F82    $9BAC   UNKNOWN  $9BAC           ; Unknown 9xxx instruction
$F84    $1FAD   JP       $FAD            ; Jump to FAD
$F86    $647E   LD       V4, #7E         ; Load 126 into V4
$F88    $454F   SNE      V5, #4F         ; Skip if V5 != 79
$F8A    $C442   RND      V4, #42         ; V4 = random & 42
$F8C    $D9FC   DRW      V9, VF, #C      ; Draw 12-byte sprite at V9, VF
$F8E    $4EF2   SNE      VE, #F2         ; Skip if VE != 242
$F90    $4DA6   SNE      VD, #A6         ; Skip if VD != 166
$F92    $30ED   SE       V0, #ED         ; Skip if V0 == 237
$F94    $7FB3   ADD      VF, #B3         ; Add 179 to VF
$F96    $5287   UNKNOWN  $5287           ; Unknown 5xxx instruction
$F98    $6BC5   LD       VB, #C5         ; Load 197 into VB
$F9A    $90FF   UNKNOWN  $90FF           ; Unknown 9xxx instruction
$F9C    $DDBA   DRW      VD, VB, #A      ; Draw 10-byte sprite at VD, VB
$F9E    $C81B   RND      V8, #1B         ; V8 = random & 1B
$FA0    $3E8D   SE       VE, #8D         ; Skip if VE == 141
$FA2    $FE50   UNKNOWN  FE50            ; Unknown Fxxx instruction
$FA4    $F820   UNKNOWN  F820            ; Unknown Fxxx instruction
$FA6    $3464   SE       V4, #64         ; Skip if V4 == 100
$FA8    $C168   RND      V1, #68         ; V1 = random & 68
$FAA    $E30D   UNKNOWN  $E30D           ; Unknown Exxx instruction
$FAC    $4729   SNE      V7, #29         ; Skip if V7 != 41
$FAE    $AC96   LD       I, $C96         ; Load C96 into I
$FB0    $ADDD   LD       I, $DDD         ; Load DDD into I
$FB2    $AC91   LD       I, $C91         ; Load C91 into I
$FB4    $1904   JP       $904            ; Jump to 904
$FB6    $3640   SE       V6, #40         ; Skip if V6 == 64
$FB8    $263F   CALL     $63F            ; Call subroutine at 63F
$FBA    $8B34   ADD      VB, V3          ; VB += V3, VF = carry
$FBC    $0EA6   SYS      $EA6            ; System call to EA6
$FBE    $DDF6   DRW      VD, VF, #6      ; Draw 6-byte sprite at VD, VF
$FC0    $6CFF   LD       VC, #FF         ; Load 255 into VC
$FC2    $F82B   UNKNOWN  F82B            ; Unknown Fxxx instruction
$FC4    $751A   ADD      V5, #1A         ; Add 26 to V5
$FC6    $6D4C   LD       VD, #4C         ; Load 76 into VD
$FC8    $FD1A   UNKNOWN  FD1A            ; Unknown Fxxx instruction
$FCA    $9B08   UNKNOWN  $9B08           ; Unknown 9xxx instruction
$FCC    $DC03   DRW      VC, V0, #3      ; Draw 3-byte sprite at VC, V0
$FCE    $5267   UNKNOWN  $5267           ; Unknown 5xxx instruction
$FD0    $64AE   LD       V4, #AE         ; Load 174 into V4
$FD2    $D573   DRW      V5, V7, #3      ; Draw 3-byte sprite at V5, V7
$FD4    $E2D1   UNKNOWN  $E2D1           ; Unknown Exxx instruction
$FD6    $5076   UNKNOWN  $5076           ; Unknown 5xxx instruction
$FD8    $DA6B   DRW      VA, V6, #B      ; Draw 11-byte sprite at VA, V6
$FDA    $42F3   SNE      V2, #F3         ; Skip if V2 != 243
$FDC    $1F59   JP       $F59            ; Jump to F59
$FDE    $5DBC   UNKNOWN  $5DBC           ; Unknown 5xxx instruction
$FE0    $78B9   ADD      V8, #B9         ; Add 185 to V8
$FE2    $C916   RND      V9, #16         ; V9 = random & 16
$FE4    $269A   CALL     $69A            ; Call subroutine at 69A
$FE6    $ABAC   LD       I, $BAC         ; Load BAC into I
$FE8    $8606   SHR      V6              ; V6 >>= 1, VF = LSB
$FEA    $7A0B   ADD      VA, #0B         ; Add 11 to VA
$FEC    $6C3B   LD       VC, #3B         ; Load 59 into VC
$FEE    $F38E   UNKNOWN  F38E            ; Unknown Fxxx instruction
$FF0    $C85D   RND      V8, #5D         ; V8 = random & 5D
$FF2    $C846   RND      V8, #46         ; V8 = random & 46
$FF4    $649F   LD       V4, #9F         ; Load 159 into V4
$FF6    $3A84   SE       VA, #84         ; Skip if VA == 132
$FF8    $C484   RND      V4, #84         ; V4 = random & 84
$FFA    $79E3   ADD      V9, #E3         ; Add 227 to V9
$FFC    $64F3   LD       V4, #F3         ; Load 243 into V4
$FFE    $6FFB   LD       VF, #FB         ; Load 251 into VF

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 436 (24.3%)
  LD      : 324 (18.1%)
  JP      : 235 (13.1%)
  SYS     : 116 ( 6.5%)
  SNE     : 114 ( 6.4%)
  ADD     : 111 ( 6.2%)
  DRW     : 110 ( 6.1%)
  CALL    : 108 ( 6.0%)
  SE      : 101 ( 5.6%)
  RND     :  93 ( 5.2%)
  AND     :  10 ( 0.6%)
  SUBN    :   7 ( 0.4%)
  SHL     :   6 ( 0.3%)
  XOR     :   6 ( 0.3%)
  OR      :   6 ( 0.3%)
  SHR     :   5 ( 0.3%)
  SUB     :   3 ( 0.2%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 435 (24.3%)
Arithmetic Operations: 143 (8.0%)
