
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B897D01_I02624_C1001_8aeadafdcc8b.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 897
Instance: 2624
Direction: descending
Final Array: [163, 50, 50, 50, 50, 50, 50, 50]
Operations: R:0 W:7 C:32 S:3

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 117
Sort Array References:
  $218: LD I, $301 ; Load 301 into I
  $270: LD I, $1EC ; Load 1EC into I
  $27C: LD I, $5D0 ; Load 5D0 into I
  $282: LD I, $3C1 ; Load 3C1 into I
  $2A8: LD I, $328 ; Load 328 into I
  $2AA: LD I, $91C ; Load 91C into I
  $2FC: LD I, $9BF ; Load 9BF into I
  $300: LD I, $332 ; Load 332 into I
  $32E: LD I, $E07 ; Load E07 into I
  $338: LD I, $0A1 ; Load 0A1 into I
  $384: LD I, $054 ; Load 054 into I
  $410: LD I, $DC6 ; Load DC6 into I
  $43C: LD I, $985 ; Load 985 into I
  $46C: LD I, $DA5 ; Load DA5 into I
  $476: LD I, $C5C ; Load C5C into I
  $480: LD I, $58C ; Load 58C into I
  $48E: LD I, $EA7 ; Load EA7 into I
  $49A: LD I, $139 ; Load 139 into I
  $4B4: LD I, $13F ; Load 13F into I
  $4D0: LD I, $343 ; Load 343 into I
  $4E6: LD I, $594 ; Load 594 into I
  $4F0: LD I, $2B5 ; Load 2B5 into I
  $4F2: LD I, $1A9 ; Load 1A9 into I
  $534: LD I, $63C ; Load 63C into I
  $57A: LD I, $3A0 ; Load 3A0 into I
  $57C: LD I, $81C ; Load 81C into I
  $59A: LD I, $3E3 ; Load 3E3 into I
  $5BA: LD I, $D3E ; Load D3E into I
  $5D2: LD I, $C9F ; Load C9F into I
  $600: LD I, $17B ; Load 17B into I
  $628: LD I, $0DF ; Load 0DF into I
  $682: LD I, $A3C ; Load A3C into I
  $6B4: LD I, $C96 ; Load C96 into I
  $6D6: LD I, $29A ; Load 29A into I
  $6FA: LD I, $28D ; Load 28D into I
  $704: LD I, $988 ; Load 988 into I
  $718: LD I, $FF8 ; Load FF8 into I
  $71C: LD I, $54B ; Load 54B into I
  $724: LD I, $F8C ; Load F8C into I
  $75E: LD I, $BB7 ; Load BB7 into I
  $788: LD I, $354 ; Load 354 into I
  $78C: LD I, $BAE ; Load BAE into I
  $7AA: LD I, $73F ; Load 73F into I
  $7BC: LD I, $FD3 ; Load FD3 into I
  $7C2: LD I, $477 ; Load 477 into I
  $7D8: LD I, $5FB ; Load 5FB into I
  $7F0: LD I, $286 ; Load 286 into I
  $848: LD I, $18C ; Load 18C into I
  $84E: LD I, $FF7 ; Load FF7 into I
  $856: LD I, $FA0 ; Load FA0 into I
  $864: LD I, $91C ; Load 91C into I
  $87A: LD I, $2DB ; Load 2DB into I
  $880: LD I, $28F ; Load 28F into I
  $882: LD I, $5AB ; Load 5AB into I
  $8E8: LD I, $6D0 ; Load 6D0 into I
  $90C: LD I, $12D ; Load 12D into I
  $928: LD I, $D19 ; Load D19 into I
  $93C: LD I, $9F2 ; Load 9F2 into I
  $966: LD I, $B83 ; Load B83 into I
  $992: LD I, $842 ; Load 842 into I
  $9A8: LD I, $412 ; Load 412 into I
  $9BE: LD I, $5DA ; Load 5DA into I
  $9DC: LD I, $87C ; Load 87C into I
  $9FE: LD I, $ECB ; Load ECB into I
  $A0E: LD I, $47A ; Load 47A into I
  $A70: LD I, $289 ; Load 289 into I
  $ACA: LD I, $EFD ; Load EFD into I
  $ADE: LD I, $CFD ; Load CFD into I
  $AF6: LD I, $534 ; Load 534 into I
  $B20: LD I, $C51 ; Load C51 into I
  $B28: LD I, $2D2 ; Load 2D2 into I
  $B38: LD I, $13A ; Load 13A into I
  $B48: LD I, $45C ; Load 45C into I
  $B5E: LD I, $9CE ; Load 9CE into I
  $B68: LD I, $19F ; Load 19F into I
  $BB6: LD I, $7BF ; Load 7BF into I
  $BBE: LD I, $6E8 ; Load 6E8 into I
  $BD8: LD I, $E7E ; Load E7E into I
  $BF8: LD I, $DD6 ; Load DD6 into I
  $C24: LD I, $F5D ; Load F5D into I
  $C2E: LD I, $8EA ; Load 8EA into I
  $C60: LD I, $593 ; Load 593 into I
  $C6C: LD I, $C3E ; Load C3E into I
  $CA0: LD I, $2F5 ; Load 2F5 into I
  $CAC: LD I, $959 ; Load 959 into I
  $D06: LD I, $DDF ; Load DDF into I
  $D40: LD I, $EF0 ; Load EF0 into I
  $D62: LD I, $7B1 ; Load 7B1 into I
  $D88: LD I, $194 ; Load 194 into I
  $DAC: LD I, $511 ; Load 511 into I
  $DBE: LD I, $CE6 ; Load CE6 into I
  $DC6: LD I, $4A7 ; Load 4A7 into I
  $DD4: LD I, $F85 ; Load F85 into I
  $DF6: LD I, $6AA ; Load 6AA into I
  $DF8: LD I, $3E0 ; Load 3E0 into I
  $E3A: LD I, $E39 ; Load E39 into I
  $E5A: LD I, $5EF ; Load 5EF into I
  $E68: LD I, $87D ; Load 87D into I
  $EAC: LD I, $13C ; Load 13C into I
  $EBC: LD I, $2D6 ; Load 2D6 into I
  $ED0: LD I, $C88 ; Load C88 into I
  $EE2: LD I, $586 ; Load 586 into I
  $EEC: LD I, $FCE ; Load FCE into I
  $EFA: LD I, $DE6 ; Load DE6 into I
  $EFC: LD I, $61D ; Load 61D into I
  $F1E: LD I, $359 ; Load 359 into I
  $F44: LD I, $732 ; Load 732 into I
  $F4E: LD I, $288 ; Load 288 into I
  $F54: LD I, $851 ; Load 851 into I
  $F58: LD I, $EC8 ; Load EC8 into I
  $F60: LD I, $ADE ; Load ADE into I
  $F6A: LD I, $C58 ; Load C58 into I
  $FC6: LD I, $900 ; Load 900 into I
  $FCA: LD I, $D5D ; Load D5D into I
  $FCE: LD I, $7CB ; Load 7CB into I
  $FD6: LD I, $8C6 ; Load 8C6 into I
  $FFA: LD I, $214 ; Load 214 into I

CONTROL FLOW ANALYSIS:
Jumps: 229
Calls: 112
Branches: 245
Loops: 124
Loop Structures:
  $248 -> $1B6 (backward jump)
  $258 -> $214 (backward jump)
  $34E -> $105 (backward jump)
  $3B8 -> $298 (backward jump)
  $3DE -> $392 (backward jump)
  $3E6 -> $39F (backward jump)
  $444 -> $1B4 (backward jump)
  $458 -> $2AF (backward jump)
  $494 -> $356 (backward jump)
  $4AA -> $0AA (backward jump)
  $504 -> $43C (backward jump)
  $602 -> $467 (backward jump)
  $604 -> $21C (backward jump)
  $63C -> $4CD (backward jump)
  $640 -> $172 (backward jump)
  $64E -> $21E (backward jump)
  $678 -> $07A (backward jump)
  $67A -> $3C3 (backward jump)
  $67C -> $290 (backward jump)
  $69E -> $2B8 (backward jump)
  $6BA -> $637 (backward jump)
  $70A -> $26A (backward jump)
  $78A -> $67D (backward jump)
  $79A -> $164 (backward jump)
  $7E2 -> $353 (backward jump)
  $7EC -> $368 (backward jump)
  $7F2 -> $46B (backward jump)
  $83E -> $704 (backward jump)
  $89A -> $0A6 (backward jump)
  $8AC -> $884 (backward jump)
  $8C8 -> $3FE (backward jump)
  $8E4 -> $0E2 (backward jump)
  $8FA -> $1AD (backward jump)
  $8FE -> $711 (backward jump)
  $91A -> $036 (backward jump)
  $922 -> $40B (backward jump)
  $92C -> $213 (backward jump)
  $96C -> $055 (backward jump)
  $974 -> $54F (backward jump)
  $9CA -> $5C3 (backward jump)
  $A00 -> $830 (backward jump)
  $A12 -> $3FC (backward jump)
  $A34 -> $4BF (backward jump)
  $A38 -> $0C7 (backward jump)
  $A44 -> $21A (backward jump)
  $A5C -> $311 (backward jump)
  $A64 -> $7FB (backward jump)
  $A72 -> $94C (backward jump)
  $A82 -> $950 (backward jump)
  $A84 -> $4A1 (backward jump)
  $AAE -> $2F8 (backward jump)
  $AB0 -> $032 (backward jump)
  $ABE -> $093 (backward jump)
  $AC4 -> $369 (backward jump)
  $AC6 -> $5E3 (backward jump)
  $AD6 -> $22E (backward jump)
  $AF0 -> $49A (backward jump)
  $B02 -> $405 (backward jump)
  $B04 -> $897 (backward jump)
  $B16 -> $899 (backward jump)
  $B1C -> $249 (backward jump)
  $B22 -> $1AB (backward jump)
  $B50 -> $324 (backward jump)
  $B58 -> $599 (backward jump)
  $B8C -> $A6E (backward jump)
  $BA6 -> $274 (backward jump)
  $BCA -> $43A (backward jump)
  $BCE -> $3C7 (backward jump)
  $BD2 -> $0BC (backward jump)
  $BD6 -> $94E (backward jump)
  $BE0 -> $5DE (backward jump)
  $C04 -> $BD5 (backward jump)
  $C08 -> $3FC (backward jump)
  $C0A -> $747 (backward jump)
  $C0C -> $461 (backward jump)
  $C16 -> $424 (backward jump)
  $C4A -> $39C (backward jump)
  $C4C -> $74A (backward jump)
  $C56 -> $C2C (backward jump)
  $C6A -> $7EF (backward jump)
  $C88 -> $169 (backward jump)
  $C8C -> $531 (backward jump)
  $C8E -> $964 (backward jump)
  $C9A -> $624 (backward jump)
  $CBA -> $60D (backward jump)
  $CD2 -> $3DC (backward jump)
  $CDE -> $9D4 (backward jump)
  $CFA -> $812 (backward jump)
  $D4A -> $C0E (backward jump)
  $D58 -> $D35 (backward jump)
  $D60 -> $03D (backward jump)
  $D74 -> $10B (backward jump)
  $D80 -> $8A0 (backward jump)
  $D9A -> $096 (backward jump)
  $DDA -> $59C (backward jump)
  $DE6 -> $1B5 (backward jump)
  $DFA -> $640 (backward jump)
  $E06 -> $687 (backward jump)
  $E12 -> $208 (backward jump)
  $E48 -> $02E (backward jump)
  $E78 -> $BF2 (backward jump)
  $E8A -> $456 (backward jump)
  $EB4 -> $67B (backward jump)
  $EC4 -> $18C (backward jump)
  $EE0 -> $172 (backward jump)
  $EEA -> $4D7 (backward jump)
  $EF0 -> $413 (backward jump)
  $F00 -> $69F (backward jump)
  $F18 -> $057 (backward jump)
  $F24 -> $7DF (backward jump)
  $F40 -> $552 (backward jump)
  $F46 -> $C79 (backward jump)
  $F4A -> $C78 (backward jump)
  $F52 -> $B7B (backward jump)
  $F74 -> $298 (backward jump)
  $F7A -> $3A9 (backward jump)
  $F7C -> $122 (backward jump)
  $F88 -> $AF2 (backward jump)
  $F92 -> $656 (backward jump)
  $F9A -> $82B (backward jump)
  $FAC -> $352 (backward jump)
  $FDA -> $228 (backward jump)
  $FE6 -> $71B (backward jump)
  $FE8 -> $F7E (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $32EF   SE       V2, #EF         ; Skip if V2 == 239
$202    $E053   UNKNOWN  $E053           ; Unknown Exxx instruction
$204    $45F0   SNE      V5, #F0         ; Skip if V5 != 240
$206    $5579   UNKNOWN  $5579           ; Unknown 5xxx instruction
$208    $0446   SYS      $446            ; System call to 446
$20A    $7724   ADD      V7, #24         ; Add 36 to V7
$20C    $3D59   SE       VD, #59         ; Skip if VD == 89
$20E    $01EA   SYS      $1EA            ; System call to 1EA
$210    $DB8E   DRW      VB, V8, #E      ; Draw 14-byte sprite at VB, V8
$212    $EEB0   UNKNOWN  $EEB0           ; Unknown Exxx instruction
$214    $C972   RND      V9, #72         ; V9 = random & 72
$216    $C500   RND      V5, #00         ; V5 = random & 00
$218    $A301   LD       I, $301         ; Load 301 into I
$21A    $5555   UNKNOWN  $5555           ; Unknown 5xxx instruction
$21C    $8750   LD       V7, V5          ; V7 = V5
$21E    $CD02   RND      VD, #02         ; VD = random & 02
$220    $576C   UNKNOWN  $576C           ; Unknown 5xxx instruction
$222    $2A82   CALL     $A82            ; Call subroutine at A82
$224    $9A85   UNKNOWN  $9A85           ; Unknown 9xxx instruction
$226    $E092   UNKNOWN  $E092           ; Unknown Exxx instruction
$228    $0166   SYS      $166            ; System call to 166
$22A    $7264   ADD      V2, #64         ; Add 100 to V2
$22C    $4C84   SNE      VC, #84         ; Skip if VC != 132
$22E    $32B2   SE       V2, #B2         ; Skip if V2 == 178
$230    $786E   ADD      V8, #6E         ; Add 110 to V8
$232    $D33E   DRW      V3, V3, #E      ; Draw 14-byte sprite at V3, V3
$234    $4434   SNE      V4, #34         ; Skip if V4 != 52
$236    $FFA8   UNKNOWN  FFA8            ; Unknown Fxxx instruction
$238    $63CD   LD       V3, #CD         ; Load 205 into V3
$23A    $6002   LD       V0, #02         ; Load 2 into V0
$23C    $02E2   SYS      $2E2            ; System call to 2E2
$23E    $878B   UNKNOWN  878B            ; Unknown 8xxx instruction
$240    $82DA   UNKNOWN  82DA            ; Unknown 8xxx instruction
$242    $CEB3   RND      VE, #B3         ; VE = random & B3
$244    $C072   RND      V0, #72         ; V0 = random & 72
$246    $B389   JP       V0, $389        ; Jump to V0 + 389
$248    $B1B6   JP       V0, $1B6        ; Jump to V0 + 1B6
$24A    $59DC   UNKNOWN  $59DC           ; Unknown 5xxx instruction
$24C    $578E   UNKNOWN  $578E           ; Unknown 5xxx instruction
$24E    $CAAE   RND      VA, #AE         ; VA = random & AE
$250    $8CF6   SHR      VC              ; VC >>= 1, VF = LSB
$252    $786E   ADD      V8, #6E         ; Add 110 to V8
$254    $9B15   UNKNOWN  $9B15           ; Unknown 9xxx instruction
$256    $C571   RND      V5, #71         ; V5 = random & 71
$258    $B214   JP       V0, $214        ; Jump to V0 + 214
$25A    $D1C1   DRW      V1, VC, #1      ; Draw 1-byte sprite at V1, VC
$25C    $E953   UNKNOWN  $E953           ; Unknown Exxx instruction
$25E    $9154   UNKNOWN  $9154           ; Unknown 9xxx instruction
$260    $13F2   JP       $3F2            ; Jump to 3F2
$262    $BCC1   JP       V0, $CC1        ; Jump to V0 + CC1
$264    $B2D4   JP       V0, $2D4        ; Jump to V0 + 2D4
$266    $8495   SUB      V4, V9          ; V4 -= V9, VF = !borrow
$268    $32BC   SE       V2, #BC         ; Skip if V2 == 188
$26A    $DF0C   DRW      VF, V0, #C      ; Draw 12-byte sprite at VF, V0
$26C    $3E49   SE       VE, #49         ; Skip if VE == 73
$26E    $8A2D   UNKNOWN  8A2D            ; Unknown 8xxx instruction
$270    $A1EC   LD       I, $1EC         ; Load 1EC into I
$272    $7B5B   ADD      VB, #5B         ; Add 91 to VB
$274    $F527   UNKNOWN  F527            ; Unknown Fxxx instruction
$276    $C561   RND      V5, #61         ; V5 = random & 61
$278    $E370   UNKNOWN  $E370           ; Unknown Exxx instruction
$27A    $6CA3   LD       VC, #A3         ; Load 163 into VC
$27C    $A5D0   LD       I, $5D0         ; Load 5D0 into I
$27E    $329B   SE       V2, #9B         ; Skip if V2 == 155
$280    $4EB4   SNE      VE, #B4         ; Skip if VE != 180
$282    $A3C1   LD       I, $3C1         ; Load 3C1 into I
$284    $2ACD   CALL     $ACD            ; Call subroutine at ACD
$286    $7B2E   ADD      VB, #2E         ; Add 46 to VB
$288    $C4F2   RND      V4, #F2         ; V4 = random & F2
$28A    $0581   SYS      $581            ; System call to 581
$28C    $52E0   SE       V2, VE          ; Skip if V2 == VE
$28E    $F066   UNKNOWN  F066            ; Unknown Fxxx instruction
$290    $FD20   UNKNOWN  FD20            ; Unknown Fxxx instruction
$292    $D67C   DRW      V6, V7, #C      ; Draw 12-byte sprite at V6, V7
$294    $B5F6   JP       V0, $5F6        ; Jump to V0 + 5F6
$296    $70F1   ADD      V0, #F1         ; Add 241 to V0
$298    $463A   SNE      V6, #3A         ; Skip if V6 != 58
$29A    $8625   SUB      V6, V2          ; V6 -= V2, VF = !borrow
$29C    $FF7E   UNKNOWN  FF7E            ; Unknown Fxxx instruction
$29E    $DD8F   DRW      VD, V8, #F      ; Draw 15-byte sprite at VD, V8
$2A0    $3A31   SE       VA, #31         ; Skip if VA == 49
$2A2    $133D   JP       $33D            ; Jump to 33D
$2A4    $BB59   JP       V0, $B59        ; Jump to V0 + B59
$2A6    $4031   SNE      V0, #31         ; Skip if V0 != 49
$2A8    $A328   LD       I, $328         ; Load 328 into I
$2AA    $A91C   LD       I, $91C         ; Load 91C into I
$2AC    $2D21   CALL     $D21            ; Call subroutine at D21
$2AE    $CEAD   RND      VE, #AD         ; VE = random & AD
$2B0    $CAF0   RND      VA, #F0         ; VA = random & F0
$2B2    $616D   LD       V1, #6D         ; Load 109 into V1
$2B4    $D355   DRW      V3, V5, #5      ; Draw 5-byte sprite at V3, V5
$2B6    $1968   JP       $968            ; Jump to 968
$2B8    $8A8A   UNKNOWN  8A8A            ; Unknown 8xxx instruction
$2BA    $50B4   UNKNOWN  $50B4           ; Unknown 5xxx instruction
$2BC    $48BA   SNE      V8, #BA         ; Skip if V8 != 186
$2BE    $BB99   JP       V0, $B99        ; Jump to V0 + B99
$2C0    $D710   DRW      V7, V1, #0      ; Draw 0-byte sprite at V7, V1
$2C2    $09E9   SYS      $9E9            ; System call to 9E9
$2C4    $18F1   JP       $8F1            ; Jump to 8F1
$2C6    $30CE   SE       V0, #CE         ; Skip if V0 == 206
$2C8    $CE5E   RND      VE, #5E         ; VE = random & 5E
$2CA    $4A35   SNE      VA, #35         ; Skip if VA != 53
$2CC    $30B5   SE       V0, #B5         ; Skip if V0 == 181
$2CE    $5B0B   UNKNOWN  $5B0B           ; Unknown 5xxx instruction
$2D0    $091F   SYS      $91F            ; System call to 91F
$2D2    $4176   SNE      V1, #76         ; Skip if V1 != 118
$2D4    $F130   UNKNOWN  F130            ; Unknown Fxxx instruction
$2D6    $2959   CALL     $959            ; Call subroutine at 959
$2D8    $68C0   LD       V8, #C0         ; Load 192 into V8
$2DA    $961B   UNKNOWN  $961B           ; Unknown 9xxx instruction
$2DC    $FA74   UNKNOWN  FA74            ; Unknown Fxxx instruction
$2DE    $C440   RND      V4, #40         ; V4 = random & 40
$2E0    $15DA   JP       $5DA            ; Jump to 5DA
$2E2    $22E9   CALL     $2E9            ; Call subroutine at 2E9
$2E4    $6F0A   LD       VF, #0A         ; Load 10 into VF
$2E6    $6E02   LD       VE, #02         ; Load 2 into VE
$2E8    $538B   UNKNOWN  $538B           ; Unknown 5xxx instruction
$2EA    $800E   SHL      V0              ; V0 <<= 1, VF = MSB
$2EC    $7110   ADD      V1, #10         ; Add 16 to V1
$2EE    $EAD5   UNKNOWN  $EAD5           ; Unknown Exxx instruction
$2F0    $CAA6   RND      VA, #A6         ; VA = random & A6
$2F2    $F057   UNKNOWN  F057            ; Unknown Fxxx instruction
$2F4    $84F6   SHR      V4              ; V4 >>= 1, VF = LSB
$2F6    $2206   CALL     $206            ; Call subroutine at 206
$2F8    $D8D7   DRW      V8, VD, #7      ; Draw 7-byte sprite at V8, VD
$2FA    $7EDC   ADD      VE, #DC         ; Add 220 to VE
$2FC    $A9BF   LD       I, $9BF         ; Load 9BF into I
$2FE    $DDF6   DRW      VD, VF, #6      ; Draw 6-byte sprite at VD, VF
$300    $A332   LD       I, $332         ; Load 332 into I
$302    $3232   SE       V2, #32         ; Skip if V2 == 50
$304    $3232   SE       V2, #32         ; Skip if V2 == 50
$306    $3232   SE       V2, #32         ; Skip if V2 == 50
$308    $32FF   SE       V2, #FF         ; Skip if V2 == 255
$30A    $9462   UNKNOWN  $9462           ; Unknown 9xxx instruction
$30C    $9A61   UNKNOWN  $9A61           ; Unknown 9xxx instruction
$30E    $351B   SE       V5, #1B         ; Skip if V5 == 27
$310    $D540   DRW      V5, V4, #0      ; Draw 0-byte sprite at V5, V4
$312    $B34A   JP       V0, $34A        ; Jump to V0 + 34A
$314    $0996   SYS      $996            ; System call to 996
$316    $23B2   CALL     $3B2            ; Call subroutine at 3B2
$318    $06DE   SYS      $6DE            ; System call to 6DE
$31A    $71C0   ADD      V1, #C0         ; Add 192 to V1
$31C    $7CA8   ADD      VC, #A8         ; Add 168 to VC
$31E    $9646   UNKNOWN  $9646           ; Unknown 9xxx instruction
$320    $7C58   ADD      VC, #58         ; Add 88 to VC
$322    $72D7   ADD      V2, #D7         ; Add 215 to V2
$324    $3F77   SE       VF, #77         ; Skip if VF == 119
$326    $8F09   UNKNOWN  8F09            ; Unknown 8xxx instruction
$328    $506B   UNKNOWN  $506B           ; Unknown 5xxx instruction
$32A    $E2D6   UNKNOWN  $E2D6           ; Unknown Exxx instruction
$32C    $9F87   UNKNOWN  $9F87           ; Unknown 9xxx instruction
$32E    $AE07   LD       I, $E07         ; Load E07 into I
$330    $8C89   UNKNOWN  8C89            ; Unknown 8xxx instruction
$332    $CE4B   RND      VE, #4B         ; VE = random & 4B
$334    $1D98   JP       $D98            ; Jump to D98
$336    $0DBF   SYS      $DBF            ; System call to DBF
$338    $A0A1   LD       I, $0A1         ; Load 0A1 into I
$33A    $86BD   UNKNOWN  86BD            ; Unknown 8xxx instruction
$33C    $B39F   JP       V0, $39F        ; Jump to V0 + 39F
$33E    $4616   SNE      V6, #16         ; Skip if V6 != 22
$340    $30BD   SE       V0, #BD         ; Skip if V0 == 189
$342    $BBB3   JP       V0, $BB3        ; Jump to V0 + BB3
$344    $ECFE   UNKNOWN  $ECFE           ; Unknown Exxx instruction
$346    $0417   SYS      $417            ; System call to 417
$348    $B429   JP       V0, $429        ; Jump to V0 + 429
$34A    $3913   SE       V9, #13         ; Skip if V9 == 19
$34C    $D1D1   DRW      V1, VD, #1      ; Draw 1-byte sprite at V1, VD
$34E    $1105   JP       $105            ; Jump to 105
$350    $C101   RND      V1, #01         ; V1 = random & 01
$352    $2C0F   CALL     $C0F            ; Call subroutine at C0F
$354    $E1D6   UNKNOWN  $E1D6           ; Unknown Exxx instruction
$356    $3028   SE       V0, #28         ; Skip if V0 == 40
$358    $E25F   UNKNOWN  $E25F           ; Unknown Exxx instruction
$35A    $6F0F   LD       VF, #0F         ; Load 15 into VF
$35C    $25F3   CALL     $5F3            ; Call subroutine at 5F3
$35E    $E72D   UNKNOWN  $E72D           ; Unknown Exxx instruction
$360    $6D96   LD       VD, #96         ; Load 150 into VD
$362    $4FCE   SNE      VF, #CE         ; Skip if VF != 206
$364    $3F1A   SE       VF, #1A         ; Skip if VF == 26
$366    $E586   UNKNOWN  $E586           ; Unknown Exxx instruction
$368    $2C5F   CALL     $C5F            ; Call subroutine at C5F
$36A    $4B82   SNE      VB, #82         ; Skip if VB != 130
$36C    $508A   UNKNOWN  $508A           ; Unknown 5xxx instruction
$36E    $6067   LD       V0, #67         ; Load 103 into V0
$370    $E5F4   UNKNOWN  $E5F4           ; Unknown Exxx instruction
$372    $B72B   JP       V0, $72B        ; Jump to V0 + 72B
$374    $78CE   ADD      V8, #CE         ; Add 206 to V8
$376    $2A2A   CALL     $A2A            ; Call subroutine at A2A
$378    $3A62   SE       VA, #62         ; Skip if VA == 98
$37A    $8712   AND      V7, V1          ; V7 &= V1
$37C    $34C1   SE       V4, #C1         ; Skip if V4 == 193
$37E    $E1C5   UNKNOWN  $E1C5           ; Unknown Exxx instruction
$380    $5BE5   UNKNOWN  $5BE5           ; Unknown 5xxx instruction
$382    $9FE6   UNKNOWN  $9FE6           ; Unknown 9xxx instruction
$384    $A054   LD       I, $054         ; Load 054 into I
$386    $D30E   DRW      V3, V0, #E      ; Draw 14-byte sprite at V3, V0
$388    $1427   JP       $427            ; Jump to 427
$38A    $5F45   UNKNOWN  $5F45           ; Unknown 5xxx instruction
$38C    $C2B5   RND      V2, #B5         ; V2 = random & B5
$38E    $EA84   UNKNOWN  $EA84           ; Unknown Exxx instruction
$390    $0171   SYS      $171            ; System call to 171
$392    $BF5F   JP       V0, $F5F        ; Jump to V0 + F5F
$394    $571F   UNKNOWN  $571F           ; Unknown 5xxx instruction
$396    $299B   CALL     $99B            ; Call subroutine at 99B
$398    $B5A1   JP       V0, $5A1        ; Jump to V0 + 5A1
$39A    $202B   CALL     $02B            ; Call subroutine at 02B
$39C    $B41A   JP       V0, $41A        ; Jump to V0 + 41A
$39E    $D6EB   DRW      V6, VE, #B      ; Draw 11-byte sprite at V6, VE
$3A0    $820E   SHL      V2              ; V2 <<= 1, VF = MSB
$3A2    $815E   SHL      V1              ; V1 <<= 1, VF = MSB
$3A4    $6183   LD       V1, #83         ; Load 131 into V1
$3A6    $9B57   UNKNOWN  $9B57           ; Unknown 9xxx instruction
$3A8    $83C4   ADD      V3, VC          ; V3 += VC, VF = carry
$3AA    $03A2   SYS      $3A2            ; System call to 3A2
$3AC    $8E8F   UNKNOWN  8E8F            ; Unknown 8xxx instruction
$3AE    $FD7C   UNKNOWN  FD7C            ; Unknown Fxxx instruction
$3B0    $F6CF   UNKNOWN  F6CF            ; Unknown Fxxx instruction
$3B2    $6ACE   LD       VA, #CE         ; Load 206 into VA
$3B4    $FC0B   UNKNOWN  FC0B            ; Unknown Fxxx instruction
$3B6    $725C   ADD      V2, #5C         ; Add 92 to V2
$3B8    $B298   JP       V0, $298        ; Jump to V0 + 298
$3BA    $60B5   LD       V0, #B5         ; Load 181 into V0
$3BC    $47E7   SNE      V7, #E7         ; Skip if V7 != 231
$3BE    $6441   LD       V4, #41         ; Load 65 into V4
$3C0    $975E   UNKNOWN  $975E           ; Unknown 9xxx instruction
$3C2    $41C7   SNE      V1, #C7         ; Skip if V1 != 199
$3C4    $B559   JP       V0, $559        ; Jump to V0 + 559
$3C6    $1543   JP       $543            ; Jump to 543
$3C8    $912C   UNKNOWN  $912C           ; Unknown 9xxx instruction
$3CA    $13F8   JP       $3F8            ; Jump to 3F8
$3CC    $8625   SUB      V6, V2          ; V6 -= V2, VF = !borrow
$3CE    $0977   SYS      $977            ; System call to 977
$3D0    $FAF4   UNKNOWN  FAF4            ; Unknown Fxxx instruction
$3D2    $D34E   DRW      V3, V4, #E      ; Draw 14-byte sprite at V3, V4
$3D4    $0F24   SYS      $F24            ; System call to F24
$3D6    $FF9D   UNKNOWN  FF9D            ; Unknown Fxxx instruction
$3D8    $7714   ADD      V7, #14         ; Add 20 to V7
$3DA    $4CCD   SNE      VC, #CD         ; Skip if VC != 205
$3DC    $BB0B   JP       V0, $B0B        ; Jump to V0 + B0B
$3DE    $B392   JP       V0, $392        ; Jump to V0 + 392
$3E0    $5C45   UNKNOWN  $5C45           ; Unknown 5xxx instruction
$3E2    $E582   UNKNOWN  $E582           ; Unknown Exxx instruction
$3E4    $5973   UNKNOWN  $5973           ; Unknown 5xxx instruction
$3E6    $B39F   JP       V0, $39F        ; Jump to V0 + 39F
$3E8    $379C   SE       V7, #9C         ; Skip if V7 == 156
$3EA    $5360   SE       V3, V6          ; Skip if V3 == V6
$3EC    $675C   LD       V7, #5C         ; Load 92 into V7
$3EE    $B429   JP       V0, $429        ; Jump to V0 + 429
$3F0    $01B1   SYS      $1B1            ; System call to 1B1
$3F2    $772D   ADD      V7, #2D         ; Add 45 to V7
$3F4    $BF23   JP       V0, $F23        ; Jump to V0 + F23
$3F6    $1561   JP       $561            ; Jump to 561
$3F8    $F834   UNKNOWN  F834            ; Unknown Fxxx instruction
$3FA    $00D1   SYS      $0D1            ; System call to 0D1
$3FC    $C0A7   RND      V0, #A7         ; V0 = random & A7
$3FE    $CBBA   RND      VB, #BA         ; VB = random & BA
$400    $1E21   JP       $E21            ; Jump to E21
$402    $DFE0   DRW      VF, VE, #0      ; Draw 0-byte sprite at VF, VE
$404    $2801   CALL     $801            ; Call subroutine at 801
$406    $FB4D   UNKNOWN  FB4D            ; Unknown Fxxx instruction
$408    $2F40   CALL     $F40            ; Call subroutine at F40
$40A    $5C94   UNKNOWN  $5C94           ; Unknown 5xxx instruction
$40C    $B879   JP       V0, $879        ; Jump to V0 + 879
$40E    $53E9   UNKNOWN  $53E9           ; Unknown 5xxx instruction
$410    $ADC6   LD       I, $DC6         ; Load DC6 into I
$412    $8F50   LD       VF, V5          ; VF = V5
$414    $D73B   DRW      V7, V3, #B      ; Draw 11-byte sprite at V7, V3
$416    $3E73   SE       VE, #73         ; Skip if VE == 115
$418    $0F08   SYS      $F08            ; System call to F08
$41A    $90A4   UNKNOWN  $90A4           ; Unknown 9xxx instruction
$41C    $F580   UNKNOWN  F580            ; Unknown Fxxx instruction
$41E    $CD91   RND      VD, #91         ; VD = random & 91
$420    $B52D   JP       V0, $52D        ; Jump to V0 + 52D
$422    $756E   ADD      V5, #6E         ; Add 110 to V5
$424    $2343   CALL     $343            ; Call subroutine at 343
$426    $41D4   SNE      V1, #D4         ; Skip if V1 != 212
$428    $D13C   DRW      V1, V3, #C      ; Draw 12-byte sprite at V1, V3
$42A    $69D9   LD       V9, #D9         ; Load 217 into V9
$42C    $C979   RND      V9, #79         ; V9 = random & 79
$42E    $8C55   SUB      VC, V5          ; VC -= V5, VF = !borrow
$430    $FD2F   UNKNOWN  FD2F            ; Unknown Fxxx instruction
$432    $6011   LD       V0, #11         ; Load 17 into V0
$434    $F280   UNKNOWN  F280            ; Unknown Fxxx instruction
$436    $72CD   ADD      V2, #CD         ; Add 205 to V2
$438    $646D   LD       V4, #6D         ; Load 109 into V4
$43A    $37D7   SE       V7, #D7         ; Skip if V7 == 215
$43C    $A985   LD       I, $985         ; Load 985 into I
$43E    $8D33   XOR      VD, V3          ; VD ^= V3
$440    $22B6   CALL     $2B6            ; Call subroutine at 2B6
$442    $FE4B   UNKNOWN  FE4B            ; Unknown Fxxx instruction
$444    $11B4   JP       $1B4            ; Jump to 1B4
$446    $7C7A   ADD      VC, #7A         ; Add 122 to VC
$448    $535A   UNKNOWN  $535A           ; Unknown 5xxx instruction
$44A    $919D   UNKNOWN  $919D           ; Unknown 9xxx instruction
$44C    $9EE6   UNKNOWN  $9EE6           ; Unknown 9xxx instruction
$44E    $94FF   UNKNOWN  $94FF           ; Unknown 9xxx instruction
$450    $86C2   AND      V6, VC          ; V6 &= VC
$452    $44C1   SNE      V4, #C1         ; Skip if V4 != 193
$454    $3AD2   SE       VA, #D2         ; Skip if VA == 210
$456    $0003   SYS      $003            ; System call to 003
$458    $B2AF   JP       V0, $2AF        ; Jump to V0 + 2AF
$45A    $3F77   SE       VF, #77         ; Skip if VF == 119
$45C    $3B94   SE       VB, #94         ; Skip if VB == 148
$45E    $264F   CALL     $64F            ; Call subroutine at 64F
$460    $34CC   SE       V4, #CC         ; Skip if V4 == 204
$462    $49DD   SNE      V9, #DD         ; Skip if V9 != 221
$464    $99CC   UNKNOWN  $99CC           ; Unknown 9xxx instruction
$466    $32A4   SE       V2, #A4         ; Skip if V2 == 164
$468    $8838   UNKNOWN  8838            ; Unknown 8xxx instruction
$46A    $0294   SYS      $294            ; System call to 294
$46C    $ADA5   LD       I, $DA5         ; Load DA5 into I
$46E    $6C9F   LD       VC, #9F         ; Load 159 into VC
$470    $5B0D   UNKNOWN  $5B0D           ; Unknown 5xxx instruction
$472    $B825   JP       V0, $825        ; Jump to V0 + 825
$474    $0DE1   SYS      $DE1            ; System call to DE1
$476    $AC5C   LD       I, $C5C         ; Load C5C into I
$478    $C367   RND      V3, #67         ; V3 = random & 67
$47A    $8A4B   UNKNOWN  8A4B            ; Unknown 8xxx instruction
$47C    $72DE   ADD      V2, #DE         ; Add 222 to V2
$47E    $0BF2   SYS      $BF2            ; System call to BF2
$480    $A58C   LD       I, $58C         ; Load 58C into I
$482    $0BD7   SYS      $BD7            ; System call to BD7
$484    $FC87   UNKNOWN  FC87            ; Unknown Fxxx instruction
$486    $2ED9   CALL     $ED9            ; Call subroutine at ED9
$488    $9125   UNKNOWN  $9125           ; Unknown 9xxx instruction
$48A    $CA17   RND      VA, #17         ; VA = random & 17
$48C    $5AD3   UNKNOWN  $5AD3           ; Unknown 5xxx instruction
$48E    $AEA7   LD       I, $EA7         ; Load EA7 into I
$490    $952A   UNKNOWN  $952A           ; Unknown 9xxx instruction
$492    $E8AA   UNKNOWN  $E8AA           ; Unknown Exxx instruction
$494    $B356   JP       V0, $356        ; Jump to V0 + 356
$496    $22DC   CALL     $2DC            ; Call subroutine at 2DC
$498    $D85C   DRW      V8, V5, #C      ; Draw 12-byte sprite at V8, V5
$49A    $A139   LD       I, $139         ; Load 139 into I
$49C    $2C98   CALL     $C98            ; Call subroutine at C98
$49E    $9DC7   UNKNOWN  $9DC7           ; Unknown 9xxx instruction
$4A0    $4B4C   SNE      VB, #4C         ; Skip if VB != 76
$4A2    $EB45   UNKNOWN  $EB45           ; Unknown Exxx instruction
$4A4    $C0E0   RND      V0, #E0         ; V0 = random & E0
$4A6    $EE82   UNKNOWN  $EE82           ; Unknown Exxx instruction
$4A8    $9ABA   UNKNOWN  $9ABA           ; Unknown 9xxx instruction
$4AA    $B0AA   JP       V0, $0AA        ; Jump to V0 + 0AA
$4AC    $C949   RND      V9, #49         ; V9 = random & 49
$4AE    $98EB   UNKNOWN  $98EB           ; Unknown 9xxx instruction
$4B0    $5656   UNKNOWN  $5656           ; Unknown 5xxx instruction
$4B2    $9523   UNKNOWN  $9523           ; Unknown 9xxx instruction
$4B4    $A13F   LD       I, $13F         ; Load 13F into I
$4B6    $6662   LD       V6, #62         ; Load 98 into V6
$4B8    $B75A   JP       V0, $75A        ; Jump to V0 + 75A
$4BA    $F164   UNKNOWN  F164            ; Unknown Fxxx instruction
$4BC    $7728   ADD      V7, #28         ; Add 40 to V7
$4BE    $7455   ADD      V4, #55         ; Add 85 to V4
$4C0    $7EBD   ADD      VE, #BD         ; Add 189 to VE
$4C2    $95D9   UNKNOWN  $95D9           ; Unknown 9xxx instruction
$4C4    $C895   RND      V8, #95         ; V8 = random & 95
$4C6    $721C   ADD      V2, #1C         ; Add 28 to V2
$4C8    $217E   CALL     $17E            ; Call subroutine at 17E
$4CA    $4B07   SNE      VB, #07         ; Skip if VB != 7
$4CC    $1E70   JP       $E70            ; Jump to E70
$4CE    $915C   UNKNOWN  $915C           ; Unknown 9xxx instruction
$4D0    $A343   LD       I, $343         ; Load 343 into I
$4D2    $CE58   RND      VE, #58         ; VE = random & 58
$4D4    $ED67   UNKNOWN  $ED67           ; Unknown Exxx instruction
$4D6    $2441   CALL     $441            ; Call subroutine at 441
$4D8    $E1EA   UNKNOWN  $E1EA           ; Unknown Exxx instruction
$4DA    $7F68   ADD      VF, #68         ; Add 104 to VF
$4DC    $6C4A   LD       VC, #4A         ; Load 74 into VC
$4DE    $2023   CALL     $023            ; Call subroutine at 023
$4E0    $88A1   OR       V8, VA          ; V8 |= VA
$4E2    $5929   UNKNOWN  $5929           ; Unknown 5xxx instruction
$4E4    $D994   DRW      V9, V9, #4      ; Draw 4-byte sprite at V9, V9
$4E6    $A594   LD       I, $594         ; Load 594 into I
$4E8    $E9BB   UNKNOWN  $E9BB           ; Unknown Exxx instruction
$4EA    $0C9C   SYS      $C9C            ; System call to C9C
$4EC    $DA5E   DRW      VA, V5, #E      ; Draw 14-byte sprite at VA, V5
$4EE    $F40E   UNKNOWN  F40E            ; Unknown Fxxx instruction
$4F0    $A2B5   LD       I, $2B5         ; Load 2B5 into I
$4F2    $A1A9   LD       I, $1A9         ; Load 1A9 into I
$4F4    $4E2F   SNE      VE, #2F         ; Skip if VE != 47
$4F6    $8163   XOR      V1, V6          ; V1 ^= V6
$4F8    $6ECF   LD       VE, #CF         ; Load 207 into VE
$4FA    $42D3   SNE      V2, #D3         ; Skip if V2 != 211
$4FC    $976E   UNKNOWN  $976E           ; Unknown 9xxx instruction
$4FE    $7757   ADD      V7, #57         ; Add 87 to V7
$500    $18BE   JP       $8BE            ; Jump to 8BE
$502    $EB7B   UNKNOWN  $EB7B           ; Unknown Exxx instruction
$504    $143C   JP       $43C            ; Jump to 43C
$506    $C769   RND      V7, #69         ; V7 = random & 69
$508    $09E6   SYS      $9E6            ; System call to 9E6
$50A    $F588   UNKNOWN  F588            ; Unknown Fxxx instruction
$50C    $2C80   CALL     $C80            ; Call subroutine at C80
$50E    $995E   UNKNOWN  $995E           ; Unknown 9xxx instruction
$510    $F9BD   UNKNOWN  F9BD            ; Unknown Fxxx instruction
$512    $CFD2   RND      VF, #D2         ; VF = random & D2
$514    $887B   UNKNOWN  887B            ; Unknown 8xxx instruction
$516    $88E6   SHR      V8              ; V8 >>= 1, VF = LSB
$518    $5E55   UNKNOWN  $5E55           ; Unknown 5xxx instruction
$51A    $0A36   SYS      $A36            ; System call to A36
$51C    $DA7B   DRW      VA, V7, #B      ; Draw 11-byte sprite at VA, V7
$51E    $C058   RND      V0, #58         ; V0 = random & 58
$520    $065D   SYS      $65D            ; System call to 65D
$522    $517E   UNKNOWN  $517E           ; Unknown 5xxx instruction
$524    $661E   LD       V6, #1E         ; Load 30 into V6
$526    $9F9F   UNKNOWN  $9F9F           ; Unknown 9xxx instruction
$528    $47A7   SNE      V7, #A7         ; Skip if V7 != 167
$52A    $5C24   UNKNOWN  $5C24           ; Unknown 5xxx instruction
$52C    $6B3E   LD       VB, #3E         ; Load 62 into VB
$52E    $D349   DRW      V3, V4, #9      ; Draw 9-byte sprite at V3, V4
$530    $5E6E   UNKNOWN  $5E6E           ; Unknown 5xxx instruction
$532    $F0A9   UNKNOWN  F0A9            ; Unknown Fxxx instruction
$534    $A63C   LD       I, $63C         ; Load 63C into I
$536    $BA4B   JP       V0, $A4B        ; Jump to V0 + A4B
$538    $713C   ADD      V1, #3C         ; Add 60 to V1
$53A    $530C   UNKNOWN  $530C           ; Unknown 5xxx instruction
$53C    $CE74   RND      VE, #74         ; VE = random & 74
$53E    $3A18   SE       VA, #18         ; Skip if VA == 24
$540    $2EC9   CALL     $EC9            ; Call subroutine at EC9
$542    $0590   SYS      $590            ; System call to 590
$544    $4BF1   SNE      VB, #F1         ; Skip if VB != 241
$546    $793C   ADD      V9, #3C         ; Add 60 to V9
$548    $6186   LD       V1, #86         ; Load 134 into V1
$54A    $9CB6   UNKNOWN  $9CB6           ; Unknown 9xxx instruction
$54C    $432F   SNE      V3, #2F         ; Skip if V3 != 47
$54E    $46D2   SNE      V6, #D2         ; Skip if V6 != 210
$550    $4218   SNE      V2, #18         ; Skip if V2 != 24
$552    $BD77   JP       V0, $D77        ; Jump to V0 + D77
$554    $2BC3   CALL     $BC3            ; Call subroutine at BC3
$556    $4B72   SNE      VB, #72         ; Skip if VB != 114
$558    $6D46   LD       VD, #46         ; Load 70 into VD
$55A    $0EB9   SYS      $EB9            ; System call to EB9
$55C    $EDE9   UNKNOWN  $EDE9           ; Unknown Exxx instruction
$55E    $6672   LD       V6, #72         ; Load 114 into V6
$560    $8502   AND      V5, V0          ; V5 &= V0
$562    $C1B2   RND      V1, #B2         ; V1 = random & B2
$564    $1817   JP       $817            ; Jump to 817
$566    $4342   SNE      V3, #42         ; Skip if V3 != 66
$568    $19FF   JP       $9FF            ; Jump to 9FF
$56A    $CC2F   RND      VC, #2F         ; VC = random & 2F
$56C    $D305   DRW      V3, V0, #5      ; Draw 5-byte sprite at V3, V0
$56E    $0DB5   SYS      $DB5            ; System call to DB5
$570    $769A   ADD      V6, #9A         ; Add 154 to V6
$572    $22FB   CALL     $2FB            ; Call subroutine at 2FB
$574    $8AB6   SHR      VA              ; VA >>= 1, VF = LSB
$576    $0775   SYS      $775            ; System call to 775
$578    $04F9   SYS      $4F9            ; System call to 4F9
$57A    $A3A0   LD       I, $3A0         ; Load 3A0 into I
$57C    $A81C   LD       I, $81C         ; Load 81C into I
$57E    $DD58   DRW      VD, V5, #8      ; Draw 8-byte sprite at VD, V5
$580    $58AD   UNKNOWN  $58AD           ; Unknown 5xxx instruction
$582    $7D54   ADD      VD, #54         ; Add 84 to VD
$584    $0E96   SYS      $E96            ; System call to E96
$586    $EE23   UNKNOWN  $EE23           ; Unknown Exxx instruction
$588    $7C11   ADD      VC, #11         ; Add 17 to VC
$58A    $8688   UNKNOWN  8688            ; Unknown 8xxx instruction
$58C    $7A45   ADD      VA, #45         ; Add 69 to VA
$58E    $1C35   JP       $C35            ; Jump to C35
$590    $0B74   SYS      $B74            ; System call to B74
$592    $4CF2   SNE      VC, #F2         ; Skip if VC != 242
$594    $EC74   UNKNOWN  $EC74           ; Unknown Exxx instruction
$596    $EE85   UNKNOWN  $EE85           ; Unknown Exxx instruction
$598    $4A86   SNE      VA, #86         ; Skip if VA != 134
$59A    $A3E3   LD       I, $3E3         ; Load 3E3 into I
$59C    $1686   JP       $686            ; Jump to 686
$59E    $E9F1   UNKNOWN  $E9F1           ; Unknown Exxx instruction
$5A0    $2149   CALL     $149            ; Call subroutine at 149
$5A2    $2C0D   CALL     $C0D            ; Call subroutine at C0D
$5A4    $823C   UNKNOWN  823C            ; Unknown 8xxx instruction
$5A6    $1C6E   JP       $C6E            ; Jump to C6E
$5A8    $991B   UNKNOWN  $991B           ; Unknown 9xxx instruction
$5AA    $D02F   DRW      V0, V2, #F      ; Draw 15-byte sprite at V0, V2
$5AC    $2CC1   CALL     $CC1            ; Call subroutine at CC1
$5AE    $DAC4   DRW      VA, VC, #4      ; Draw 4-byte sprite at VA, VC
$5B0    $616A   LD       V1, #6A         ; Load 106 into V1
$5B2    $5860   SE       V8, V6          ; Skip if V8 == V6
$5B4    $5425   UNKNOWN  $5425           ; Unknown 5xxx instruction
$5B6    $7EF3   ADD      VE, #F3         ; Add 243 to VE
$5B8    $2D95   CALL     $D95            ; Call subroutine at D95
$5BA    $AD3E   LD       I, $D3E         ; Load D3E into I
$5BC    $F733   LD       B, V7           ; Store BCD of V7 at I, I+1, I+2
$5BE    $622F   LD       V2, #2F         ; Load 47 into V2
$5C0    $8170   LD       V1, V7          ; V1 = V7
$5C2    $7331   ADD      V3, #31         ; Add 49 to V3
$5C4    $82BC   UNKNOWN  82BC            ; Unknown 8xxx instruction
$5C6    $C4C7   RND      V4, #C7         ; V4 = random & C7
$5C8    $5D06   UNKNOWN  $5D06           ; Unknown 5xxx instruction
$5CA    $0F8E   SYS      $F8E            ; System call to F8E
$5CC    $6A19   LD       VA, #19         ; Load 25 into VA
$5CE    $438C   SNE      V3, #8C         ; Skip if V3 != 140
$5D0    $3CC1   SE       VC, #C1         ; Skip if VC == 193
$5D2    $AC9F   LD       I, $C9F         ; Load C9F into I
$5D4    $0D07   SYS      $D07            ; System call to D07
$5D6    $6B8D   LD       VB, #8D         ; Load 141 into VB
$5D8    $BDC9   JP       V0, $DC9        ; Jump to V0 + DC9
$5DA    $19F1   JP       $9F1            ; Jump to 9F1
$5DC    $64F9   LD       V4, #F9         ; Load 249 into V4
$5DE    $9090   SNE      V0, V9          ; Skip if V0 != V9
$5E0    $7124   ADD      V1, #24         ; Add 36 to V1
$5E2    $4A60   SNE      VA, #60         ; Skip if VA != 96
$5E4    $D154   DRW      V1, V5, #4      ; Draw 4-byte sprite at V1, V5
$5E6    $F73C   UNKNOWN  F73C            ; Unknown Fxxx instruction
$5E8    $E0FB   UNKNOWN  $E0FB           ; Unknown Exxx instruction
$5EA    $FD54   UNKNOWN  FD54            ; Unknown Fxxx instruction
$5EC    $C20F   RND      V2, #0F         ; V2 = random & 0F
$5EE    $529C   UNKNOWN  $529C           ; Unknown 5xxx instruction
$5F0    $372C   SE       V7, #2C         ; Skip if V7 == 44
$5F2    $9CB6   UNKNOWN  $9CB6           ; Unknown 9xxx instruction
$5F4    $8564   ADD      V5, V6          ; V5 += V6, VF = carry
$5F6    $9567   UNKNOWN  $9567           ; Unknown 9xxx instruction
$5F8    $4529   SNE      V5, #29         ; Skip if V5 != 41
$5FA    $9D11   UNKNOWN  $9D11           ; Unknown 9xxx instruction
$5FC    $F39C   UNKNOWN  F39C            ; Unknown Fxxx instruction
$5FE    $1642   JP       $642            ; Jump to 642
$600    $A17B   LD       I, $17B         ; Load 17B into I
$602    $1467   JP       $467            ; Jump to 467
$604    $121C   JP       $21C            ; Jump to 21C
$606    $FE78   UNKNOWN  FE78            ; Unknown Fxxx instruction
$608    $5C12   UNKNOWN  $5C12           ; Unknown 5xxx instruction
$60A    $BA81   JP       V0, $A81        ; Jump to V0 + A81
$60C    $BF4C   JP       V0, $F4C        ; Jump to V0 + F4C
$60E    $84BB   UNKNOWN  84BB            ; Unknown 8xxx instruction
$610    $1C72   JP       $C72            ; Jump to C72
$612    $3E01   SE       VE, #01         ; Skip if VE == 1
$614    $05FB   SYS      $5FB            ; System call to 5FB
$616    $7CD7   ADD      VC, #D7         ; Add 215 to VC
$618    $EF13   UNKNOWN  $EF13           ; Unknown Exxx instruction
$61A    $B972   JP       V0, $972        ; Jump to V0 + 972
$61C    $EE10   UNKNOWN  $EE10           ; Unknown Exxx instruction
$61E    $80DB   UNKNOWN  80DB            ; Unknown 8xxx instruction
$620    $42F1   SNE      V2, #F1         ; Skip if V2 != 241
$622    $D4D4   DRW      V4, VD, #4      ; Draw 4-byte sprite at V4, VD
$624    $BC51   JP       V0, $C51        ; Jump to V0 + C51
$626    $BC60   JP       V0, $C60        ; Jump to V0 + C60
$628    $A0DF   LD       I, $0DF         ; Load 0DF into I
$62A    $8595   SUB      V5, V9          ; V5 -= V9, VF = !borrow
$62C    $44F9   SNE      V4, #F9         ; Skip if V4 != 249
$62E    $9C59   UNKNOWN  $9C59           ; Unknown 9xxx instruction
$630    $05CC   SYS      $5CC            ; System call to 5CC
$632    $4276   SNE      V2, #76         ; Skip if V2 != 118
$634    $7D64   ADD      VD, #64         ; Add 100 to VD
$636    $62D9   LD       V2, #D9         ; Load 217 into V2
$638    $5BDF   UNKNOWN  $5BDF           ; Unknown 5xxx instruction
$63A    $2E48   CALL     $E48            ; Call subroutine at E48
$63C    $B4CD   JP       V0, $4CD        ; Jump to V0 + 4CD
$63E    $937D   UNKNOWN  $937D           ; Unknown 9xxx instruction
$640    $1172   JP       $172            ; Jump to 172
$642    $BA52   JP       V0, $A52        ; Jump to V0 + A52
$644    $2B58   CALL     $B58            ; Call subroutine at B58
$646    $7D11   ADD      VD, #11         ; Add 17 to VD
$648    $EBA9   UNKNOWN  $EBA9           ; Unknown Exxx instruction
$64A    $41D9   SNE      V1, #D9         ; Skip if V1 != 217
$64C    $F836   UNKNOWN  F836            ; Unknown Fxxx instruction
$64E    $121E   JP       $21E            ; Jump to 21E
$650    $1BF6   JP       $BF6            ; Jump to BF6
$652    $8D8C   UNKNOWN  8D8C            ; Unknown 8xxx instruction
$654    $D7B8   DRW      V7, VB, #8      ; Draw 8-byte sprite at V7, VB
$656    $1F21   JP       $F21            ; Jump to F21
$658    $F02B   UNKNOWN  F02B            ; Unknown Fxxx instruction
$65A    $C1C3   RND      V1, #C3         ; V1 = random & C3
$65C    $E66F   UNKNOWN  $E66F           ; Unknown Exxx instruction
$65E    $BD11   JP       V0, $D11        ; Jump to V0 + D11
$660    $4FB7   SNE      VF, #B7         ; Skip if VF != 183
$662    $BBCF   JP       V0, $BCF        ; Jump to V0 + BCF
$664    $79D2   ADD      V9, #D2         ; Add 210 to V9
$666    $C622   RND      V6, #22         ; V6 = random & 22
$668    $80C7   SUBN     V0, VC          ; V0 = VC - V0, VF = !borrow
$66A    $47EA   SNE      V7, #EA         ; Skip if V7 != 234
$66C    $BB51   JP       V0, $B51        ; Jump to V0 + B51
$66E    $71CA   ADD      V1, #CA         ; Add 202 to V1
$670    $1941   JP       $941            ; Jump to 941
$672    $01BF   SYS      $1BF            ; System call to 1BF
$674    $5720   SE       V7, V2          ; Skip if V7 == V2
$676    $BD51   JP       V0, $D51        ; Jump to V0 + D51
$678    $B07A   JP       V0, $07A        ; Jump to V0 + 07A
$67A    $13C3   JP       $3C3            ; Jump to 3C3
$67C    $B290   JP       V0, $290        ; Jump to V0 + 290
$67E    $1790   JP       $790            ; Jump to 790
$680    $50DF   UNKNOWN  $50DF           ; Unknown 5xxx instruction
$682    $AA3C   LD       I, $A3C         ; Load A3C into I
$684    $60CD   LD       V0, #CD         ; Load 205 into V0
$686    $3F84   SE       VF, #84         ; Skip if VF == 132
$688    $1E73   JP       $E73            ; Jump to E73
$68A    $687B   LD       V8, #7B         ; Load 123 into V8
$68C    $70B5   ADD      V0, #B5         ; Add 181 to V0
$68E    $0205   SYS      $205            ; System call to 205
$690    $4ED0   SNE      VE, #D0         ; Skip if VE != 208
$692    $4C0A   SNE      VC, #0A         ; Skip if VC != 10
$694    $29D0   CALL     $9D0            ; Call subroutine at 9D0
$696    $2976   CALL     $976            ; Call subroutine at 976
$698    $4972   SNE      V9, #72         ; Skip if V9 != 114
$69A    $91A0   SNE      V1, VA          ; Skip if V1 != VA
$69C    $7554   ADD      V5, #54         ; Add 84 to V5
$69E    $B2B8   JP       V0, $2B8        ; Jump to V0 + 2B8
$6A0    $9B2C   UNKNOWN  $9B2C           ; Unknown 9xxx instruction
$6A2    $5263   UNKNOWN  $5263           ; Unknown 5xxx instruction
$6A4    $FB30   UNKNOWN  FB30            ; Unknown Fxxx instruction
$6A6    $1C0B   JP       $C0B            ; Jump to C0B
$6A8    $321C   SE       V2, #1C         ; Skip if V2 == 28
$6AA    $63CA   LD       V3, #CA         ; Load 202 into V3
$6AC    $4794   SNE      V7, #94         ; Skip if V7 != 148
$6AE    $24BB   CALL     $4BB            ; Call subroutine at 4BB
$6B0    $3F59   SE       VF, #59         ; Skip if VF == 89
$6B2    $6C2A   LD       VC, #2A         ; Load 42 into VC
$6B4    $AC96   LD       I, $C96         ; Load C96 into I
$6B6    $3230   SE       V2, #30         ; Skip if V2 == 48
$6B8    $F3DE   UNKNOWN  F3DE            ; Unknown Fxxx instruction
$6BA    $B637   JP       V0, $637        ; Jump to V0 + 637
$6BC    $F6E4   UNKNOWN  F6E4            ; Unknown Fxxx instruction
$6BE    $5435   UNKNOWN  $5435           ; Unknown 5xxx instruction
$6C0    $20D6   CALL     $0D6            ; Call subroutine at 0D6
$6C2    $5D26   UNKNOWN  $5D26           ; Unknown 5xxx instruction
$6C4    $9F90   SNE      VF, V9          ; Skip if VF != V9
$6C6    $F5F7   UNKNOWN  F5F7            ; Unknown Fxxx instruction
$6C8    $273A   CALL     $73A            ; Call subroutine at 73A
$6CA    $BB0F   JP       V0, $B0F        ; Jump to V0 + B0F
$6CC    $4534   SNE      V5, #34         ; Skip if V5 != 52
$6CE    $0E3E   SYS      $E3E            ; System call to E3E
$6D0    $CE2E   RND      VE, #2E         ; VE = random & 2E
$6D2    $898C   UNKNOWN  898C            ; Unknown 8xxx instruction
$6D4    $8FB1   OR       VF, VB          ; VF |= VB
$6D6    $A29A   LD       I, $29A         ; Load 29A into I
$6D8    $46AB   SNE      V6, #AB         ; Skip if V6 != 171
$6DA    $BA7C   JP       V0, $A7C        ; Jump to V0 + A7C
$6DC    $D63E   DRW      V6, V3, #E      ; Draw 14-byte sprite at V6, V3
$6DE    $5AD8   UNKNOWN  $5AD8           ; Unknown 5xxx instruction
$6E0    $0E6C   SYS      $E6C            ; System call to E6C
$6E2    $98B1   UNKNOWN  $98B1           ; Unknown 9xxx instruction
$6E4    $9DA4   UNKNOWN  $9DA4           ; Unknown 9xxx instruction
$6E6    $03F9   SYS      $3F9            ; System call to 3F9
$6E8    $850B   UNKNOWN  850B            ; Unknown 8xxx instruction
$6EA    $1E2F   JP       $E2F            ; Jump to E2F
$6EC    $75C4   ADD      V5, #C4         ; Add 196 to V5
$6EE    $98E4   UNKNOWN  $98E4           ; Unknown 9xxx instruction
$6F0    $E446   UNKNOWN  $E446           ; Unknown Exxx instruction
$6F2    $DB0A   DRW      VB, V0, #A      ; Draw 10-byte sprite at VB, V0
$6F4    $0358   SYS      $358            ; System call to 358
$6F6    $52A6   UNKNOWN  $52A6           ; Unknown 5xxx instruction
$6F8    $0D34   SYS      $D34            ; System call to D34
$6FA    $A28D   LD       I, $28D         ; Load 28D into I
$6FC    $F420   UNKNOWN  F420            ; Unknown Fxxx instruction
$6FE    $4D45   SNE      VD, #45         ; Skip if VD != 69
$700    $916E   UNKNOWN  $916E           ; Unknown 9xxx instruction
$702    $9C20   SNE      VC, V2          ; Skip if VC != V2
$704    $A988   LD       I, $988         ; Load 988 into I
$706    $6F17   LD       VF, #17         ; Load 23 into VF
$708    $C27C   RND      V2, #7C         ; V2 = random & 7C
$70A    $B26A   JP       V0, $26A        ; Jump to V0 + 26A
$70C    $452D   SNE      V5, #2D         ; Skip if V5 != 45
$70E    $6A33   LD       VA, #33         ; Load 51 into VA
$710    $8ED4   ADD      VE, VD          ; VE += VD, VF = carry
$712    $8820   LD       V8, V2          ; V8 = V2
$714    $6B9E   LD       VB, #9E         ; Load 158 into VB
$716    $66FC   LD       V6, #FC         ; Load 252 into V6
$718    $AFF8   LD       I, $FF8         ; Load FF8 into I
$71A    $1964   JP       $964            ; Jump to 964
$71C    $A54B   LD       I, $54B         ; Load 54B into I
$71E    $42A4   SNE      V2, #A4         ; Skip if V2 != 164
$720    $3C4C   SE       VC, #4C         ; Skip if VC == 76
$722    $F7BF   UNKNOWN  F7BF            ; Unknown Fxxx instruction
$724    $AF8C   LD       I, $F8C         ; Load F8C into I
$726    $70DB   ADD      V0, #DB         ; Add 219 to V0
$728    $D635   DRW      V6, V3, #5      ; Draw 5-byte sprite at V6, V3
$72A    $3040   SE       V0, #40         ; Skip if V0 == 64
$72C    $0F87   SYS      $F87            ; System call to F87
$72E    $2295   CALL     $295            ; Call subroutine at 295
$730    $6E8E   LD       VE, #8E         ; Load 142 into VE
$732    $757A   ADD      V5, #7A         ; Add 122 to V5
$734    $06CB   SYS      $6CB            ; System call to 6CB
$736    $55B3   UNKNOWN  $55B3           ; Unknown 5xxx instruction
$738    $526D   UNKNOWN  $526D           ; Unknown 5xxx instruction
$73A    $B9C8   JP       V0, $9C8        ; Jump to V0 + 9C8
$73C    $D045   DRW      V0, V4, #5      ; Draw 5-byte sprite at V0, V4
$73E    $BB1A   JP       V0, $B1A        ; Jump to V0 + B1A
$740    $6EF1   LD       VE, #F1         ; Load 241 into VE
$742    $5EA5   UNKNOWN  $5EA5           ; Unknown 5xxx instruction
$744    $0ABE   SYS      $ABE            ; System call to ABE
$746    $7894   ADD      V8, #94         ; Add 148 to V8
$748    $DE65   DRW      VE, V6, #5      ; Draw 5-byte sprite at VE, V6
$74A    $7746   ADD      V7, #46         ; Add 70 to V7
$74C    $81AF   UNKNOWN  81AF            ; Unknown 8xxx instruction
$74E    $6420   LD       V4, #20         ; Load 32 into V4
$750    $2FE8   CALL     $FE8            ; Call subroutine at FE8
$752    $00A8   SYS      $0A8            ; System call to 0A8
$754    $E225   UNKNOWN  $E225           ; Unknown Exxx instruction
$756    $4AF2   SNE      VA, #F2         ; Skip if VA != 242
$758    $80F7   SUBN     V0, VF          ; V0 = VF - V0, VF = !borrow
$75A    $0A61   SYS      $A61            ; System call to A61
$75C    $4B9B   SNE      VB, #9B         ; Skip if VB != 155
$75E    $ABB7   LD       I, $BB7         ; Load BB7 into I
$760    $778C   ADD      V7, #8C         ; Add 140 to V7
$762    $431A   SNE      V3, #1A         ; Skip if V3 != 26
$764    $9361   UNKNOWN  $9361           ; Unknown 9xxx instruction
$766    $0FDA   SYS      $FDA            ; System call to FDA
$768    $B89C   JP       V0, $89C        ; Jump to V0 + 89C
$76A    $57FB   UNKNOWN  $57FB           ; Unknown 5xxx instruction
$76C    $521D   UNKNOWN  $521D           ; Unknown 5xxx instruction
$76E    $EDE1   UNKNOWN  $EDE1           ; Unknown Exxx instruction
$770    $0911   SYS      $911            ; System call to 911
$772    $DEFD   DRW      VE, VF, #D      ; Draw 13-byte sprite at VE, VF
$774    $475F   SNE      V7, #5F         ; Skip if V7 != 95
$776    $9EB9   UNKNOWN  $9EB9           ; Unknown 9xxx instruction
$778    $47B8   SNE      V7, #B8         ; Skip if V7 != 184
$77A    $D466   DRW      V4, V6, #6      ; Draw 6-byte sprite at V4, V6
$77C    $5A74   UNKNOWN  $5A74           ; Unknown 5xxx instruction
$77E    $1E2F   JP       $E2F            ; Jump to E2F
$780    $44B9   SNE      V4, #B9         ; Skip if V4 != 185
$782    $1F96   JP       $F96            ; Jump to F96
$784    $8B2F   UNKNOWN  8B2F            ; Unknown 8xxx instruction
$786    $706C   ADD      V0, #6C         ; Add 108 to V0
$788    $A354   LD       I, $354         ; Load 354 into I
$78A    $B67D   JP       V0, $67D        ; Jump to V0 + 67D
$78C    $ABAE   LD       I, $BAE         ; Load BAE into I
$78E    $C7C5   RND      V7, #C5         ; V7 = random & C5
$790    $0E36   SYS      $E36            ; System call to E36
$792    $FC12   UNKNOWN  FC12            ; Unknown Fxxx instruction
$794    $2E48   CALL     $E48            ; Call subroutine at E48
$796    $01FF   SYS      $1FF            ; System call to 1FF
$798    $E992   UNKNOWN  $E992           ; Unknown Exxx instruction
$79A    $B164   JP       V0, $164        ; Jump to V0 + 164
$79C    $48C4   SNE      V8, #C4         ; Skip if V8 != 196
$79E    $8F62   AND      VF, V6          ; VF &= V6
$7A0    $87A3   XOR      V7, VA          ; V7 ^= VA
$7A2    $C4FC   RND      V4, #FC         ; V4 = random & FC
$7A4    $8CA7   SUBN     VC, VA          ; VC = VA - VC, VF = !borrow
$7A6    $DF21   DRW      VF, V2, #1      ; Draw 1-byte sprite at VF, V2
$7A8    $F102   UNKNOWN  F102            ; Unknown Fxxx instruction
$7AA    $A73F   LD       I, $73F         ; Load 73F into I
$7AC    $9825   UNKNOWN  $9825           ; Unknown 9xxx instruction
$7AE    $DF7F   DRW      VF, V7, #F      ; Draw 15-byte sprite at VF, V7
$7B0    $6489   LD       V4, #89         ; Load 137 into V4
$7B2    $4213   SNE      V2, #13         ; Skip if V2 != 19
$7B4    $C56B   RND      V5, #6B         ; V5 = random & 6B
$7B6    $6100   LD       V1, #00         ; Load 0 into V1
$7B8    $FE45   UNKNOWN  FE45            ; Unknown Fxxx instruction
$7BA    $F869   UNKNOWN  F869            ; Unknown Fxxx instruction
$7BC    $AFD3   LD       I, $FD3         ; Load FD3 into I
$7BE    $89AB   UNKNOWN  89AB            ; Unknown 8xxx instruction
$7C0    $83C7   SUBN     V3, VC          ; V3 = VC - V3, VF = !borrow
$7C2    $A477   LD       I, $477         ; Load 477 into I
$7C4    $4773   SNE      V7, #73         ; Skip if V7 != 115
$7C6    $D2F0   DRW      V2, VF, #0      ; Draw 0-byte sprite at V2, VF
$7C8    $4EF2   SNE      VE, #F2         ; Skip if VE != 242
$7CA    $7E7D   ADD      VE, #7D         ; Add 125 to VE
$7CC    $98C2   UNKNOWN  $98C2           ; Unknown 9xxx instruction
$7CE    $794F   ADD      V9, #4F         ; Add 79 to V9
$7D0    $8D6D   UNKNOWN  8D6D            ; Unknown 8xxx instruction
$7D2    $D76D   DRW      V7, V6, #D      ; Draw 13-byte sprite at V7, V6
$7D4    $D97B   DRW      V9, V7, #B      ; Draw 11-byte sprite at V9, V7
$7D6    $1E86   JP       $E86            ; Jump to E86
$7D8    $A5FB   LD       I, $5FB         ; Load 5FB into I
$7DA    $FCB1   UNKNOWN  FCB1            ; Unknown Fxxx instruction
$7DC    $E3A8   UNKNOWN  $E3A8           ; Unknown Exxx instruction
$7DE    $DFFB   DRW      VF, VF, #B      ; Draw 11-byte sprite at VF, VF
$7E0    $54F6   UNKNOWN  $54F6           ; Unknown 5xxx instruction
$7E2    $B353   JP       V0, $353        ; Jump to V0 + 353
$7E4    $E342   UNKNOWN  $E342           ; Unknown Exxx instruction
$7E6    $376F   SE       V7, #6F         ; Skip if V7 == 111
$7E8    $F184   UNKNOWN  F184            ; Unknown Fxxx instruction
$7EA    $6005   LD       V0, #05         ; Load 5 into V0
$7EC    $1368   JP       $368            ; Jump to 368
$7EE    $FBD2   UNKNOWN  FBD2            ; Unknown Fxxx instruction
$7F0    $A286   LD       I, $286         ; Load 286 into I
$7F2    $B46B   JP       V0, $46B        ; Jump to V0 + 46B
$7F4    $750D   ADD      V5, #0D         ; Add 13 to V5
$7F6    $419B   SNE      V1, #9B         ; Skip if V1 != 155
$7F8    $ECB9   UNKNOWN  $ECB9           ; Unknown Exxx instruction
$7FA    $382D   SE       V8, #2D         ; Skip if V8 == 45
$7FC    $6802   LD       V8, #02         ; Load 2 into V8
$7FE    $6EA3   LD       VE, #A3         ; Load 163 into VE
$800    $EA40   UNKNOWN  $EA40           ; Unknown Exxx instruction
$802    $85ED   UNKNOWN  85ED            ; Unknown 8xxx instruction
$804    $3315   SE       V3, #15         ; Skip if V3 == 21
$806    $4FD7   SNE      VF, #D7         ; Skip if VF != 215
$808    $B93A   JP       V0, $93A        ; Jump to V0 + 93A
$80A    $052D   SYS      $52D            ; System call to 52D
$80C    $DCAF   DRW      VC, VA, #F      ; Draw 15-byte sprite at VC, VA
$80E    $F5F4   UNKNOWN  F5F4            ; Unknown Fxxx instruction
$810    $2C5B   CALL     $C5B            ; Call subroutine at C5B
$812    $D433   DRW      V4, V3, #3      ; Draw 3-byte sprite at V4, V3
$814    $1E99   JP       $E99            ; Jump to E99
$816    $8B69   UNKNOWN  8B69            ; Unknown 8xxx instruction
$818    $6DE3   LD       VD, #E3         ; Load 227 into VD
$81A    $C93F   RND      V9, #3F         ; V9 = random & 3F
$81C    $26AF   CALL     $6AF            ; Call subroutine at 6AF
$81E    $1B57   JP       $B57            ; Jump to B57
$820    $F2EB   UNKNOWN  F2EB            ; Unknown Fxxx instruction
$822    $22D1   CALL     $2D1            ; Call subroutine at 2D1
$824    $0510   SYS      $510            ; System call to 510
$826    $54B8   UNKNOWN  $54B8           ; Unknown 5xxx instruction
$828    $22AC   CALL     $2AC            ; Call subroutine at 2AC
$82A    $C277   RND      V2, #77         ; V2 = random & 77
$82C    $0B2F   SYS      $B2F            ; System call to B2F
$82E    $98EE   UNKNOWN  $98EE           ; Unknown 9xxx instruction
$830    $1D3B   JP       $D3B            ; Jump to D3B
$832    $C2E2   RND      V2, #E2         ; V2 = random & E2
$834    $99EC   UNKNOWN  $99EC           ; Unknown 9xxx instruction
$836    $54CE   UNKNOWN  $54CE           ; Unknown 5xxx instruction
$838    $4935   SNE      V9, #35         ; Skip if V9 != 53
$83A    $45A3   SNE      V5, #A3         ; Skip if V5 != 163
$83C    $321B   SE       V2, #1B         ; Skip if V2 == 27
$83E    $1704   JP       $704            ; Jump to 704
$840    $8A7F   UNKNOWN  8A7F            ; Unknown 8xxx instruction
$842    $194E   JP       $94E            ; Jump to 94E
$844    $3D90   SE       VD, #90         ; Skip if VD == 144
$846    $3C9E   SE       VC, #9E         ; Skip if VC == 158
$848    $A18C   LD       I, $18C         ; Load 18C into I
$84A    $678F   LD       V7, #8F         ; Load 143 into V7
$84C    $6E96   LD       VE, #96         ; Load 150 into VE
$84E    $AFF7   LD       I, $FF7         ; Load FF7 into I
$850    $529E   UNKNOWN  $529E           ; Unknown 5xxx instruction
$852    $D99C   DRW      V9, V9, #C      ; Draw 12-byte sprite at V9, V9
$854    $728E   ADD      V2, #8E         ; Add 142 to V2
$856    $AFA0   LD       I, $FA0         ; Load FA0 into I
$858    $C1ED   RND      V1, #ED         ; V1 = random & ED
$85A    $3C7B   SE       VC, #7B         ; Skip if VC == 123
$85C    $CF57   RND      VF, #57         ; VF = random & 57
$85E    $2EF4   CALL     $EF4            ; Call subroutine at EF4
$860    $7E83   ADD      VE, #83         ; Add 131 to VE
$862    $DB4D   DRW      VB, V4, #D      ; Draw 13-byte sprite at VB, V4
$864    $A91C   LD       I, $91C         ; Load 91C into I
$866    $2C8E   CALL     $C8E            ; Call subroutine at C8E
$868    $967D   UNKNOWN  $967D           ; Unknown 9xxx instruction
$86A    $D172   DRW      V1, V7, #2      ; Draw 2-byte sprite at V1, V7
$86C    $FACD   UNKNOWN  FACD            ; Unknown Fxxx instruction
$86E    $E0D1   UNKNOWN  $E0D1           ; Unknown Exxx instruction
$870    $22FC   CALL     $2FC            ; Call subroutine at 2FC
$872    $7B8E   ADD      VB, #8E         ; Add 142 to VB
$874    $4C61   SNE      VC, #61         ; Skip if VC != 97
$876    $31B1   SE       V1, #B1         ; Skip if V1 == 177
$878    $3C0E   SE       VC, #0E         ; Skip if VC == 14
$87A    $A2DB   LD       I, $2DB         ; Load 2DB into I
$87C    $DACB   DRW      VA, VC, #B      ; Draw 11-byte sprite at VA, VC
$87E    $E2CB   UNKNOWN  $E2CB           ; Unknown Exxx instruction
$880    $A28F   LD       I, $28F         ; Load 28F into I
$882    $A5AB   LD       I, $5AB         ; Load 5AB into I
$884    $9F37   UNKNOWN  $9F37           ; Unknown 9xxx instruction
$886    $486F   SNE      V8, #6F         ; Skip if V8 != 111
$888    $1CDF   JP       $CDF            ; Jump to CDF
$88A    $6017   LD       V0, #17         ; Load 23 into V0
$88C    $2735   CALL     $735            ; Call subroutine at 735
$88E    $C664   RND      V6, #64         ; V6 = random & 64
$890    $EE39   UNKNOWN  $EE39           ; Unknown Exxx instruction
$892    $299F   CALL     $99F            ; Call subroutine at 99F
$894    $2A33   CALL     $A33            ; Call subroutine at A33
$896    $7629   ADD      V6, #29         ; Add 41 to V6
$898    $F469   UNKNOWN  F469            ; Unknown Fxxx instruction
$89A    $B0A6   JP       V0, $0A6        ; Jump to V0 + 0A6
$89C    $D530   DRW      V5, V3, #0      ; Draw 0-byte sprite at V5, V3
$89E    $25AC   CALL     $5AC            ; Call subroutine at 5AC
$8A0    $BE1E   JP       V0, $E1E        ; Jump to V0 + E1E
$8A2    $F43C   UNKNOWN  F43C            ; Unknown Fxxx instruction
$8A4    $6247   LD       V2, #47         ; Load 71 into V2
$8A6    $2E6A   CALL     $E6A            ; Call subroutine at E6A
$8A8    $7060   ADD      V0, #60         ; Add 96 to V0
$8AA    $D622   DRW      V6, V2, #2      ; Draw 2-byte sprite at V6, V2
$8AC    $B884   JP       V0, $884        ; Jump to V0 + 884
$8AE    $407C   SNE      V0, #7C         ; Skip if V0 != 124
$8B0    $7D23   ADD      VD, #23         ; Add 35 to VD
$8B2    $D3F0   DRW      V3, VF, #0      ; Draw 0-byte sprite at V3, VF
$8B4    $3BD2   SE       VB, #D2         ; Skip if VB == 210
$8B6    $07DA   SYS      $7DA            ; System call to 7DA
$8B8    $6ECA   LD       VE, #CA         ; Load 202 into VE
$8BA    $0BB3   SYS      $BB3            ; System call to BB3
$8BC    $52D5   UNKNOWN  $52D5           ; Unknown 5xxx instruction
$8BE    $4CDF   SNE      VC, #DF         ; Skip if VC != 223
$8C0    $4D4D   SNE      VD, #4D         ; Skip if VD != 77
$8C2    $8E83   XOR      VE, V8          ; VE ^= V8
$8C4    $B8CC   JP       V0, $8CC        ; Jump to V0 + 8CC
$8C6    $336C   SE       V3, #6C         ; Skip if V3 == 108
$8C8    $B3FE   JP       V0, $3FE        ; Jump to V0 + 3FE
$8CA    $0EFC   SYS      $EFC            ; System call to EFC
$8CC    $697E   LD       V9, #7E         ; Load 126 into V9
$8CE    $D4A2   DRW      V4, VA, #2      ; Draw 2-byte sprite at V4, VA
$8D0    $5A2D   UNKNOWN  $5A2D           ; Unknown 5xxx instruction
$8D2    $C0D5   RND      V0, #D5         ; V0 = random & D5
$8D4    $3FDE   SE       VF, #DE         ; Skip if VF == 222
$8D6    $BFDD   JP       V0, $FDD        ; Jump to V0 + FDD
$8D8    $CD51   RND      VD, #51         ; VD = random & 51
$8DA    $61C4   LD       V1, #C4         ; Load 196 into V1
$8DC    $33D8   SE       V3, #D8         ; Skip if V3 == 216
$8DE    $8A8E   SHL      VA              ; VA <<= 1, VF = MSB
$8E0    $6F35   LD       VF, #35         ; Load 53 into VF
$8E2    $1CA7   JP       $CA7            ; Jump to CA7
$8E4    $B0E2   JP       V0, $0E2        ; Jump to V0 + 0E2
$8E6    $7B97   ADD      VB, #97         ; Add 151 to VB
$8E8    $A6D0   LD       I, $6D0         ; Load 6D0 into I
$8EA    $9DF9   UNKNOWN  $9DF9           ; Unknown 9xxx instruction
$8EC    $EF94   UNKNOWN  $EF94           ; Unknown Exxx instruction
$8EE    $5C79   UNKNOWN  $5C79           ; Unknown 5xxx instruction
$8F0    $6A52   LD       VA, #52         ; Load 82 into VA
$8F2    $39BA   SE       V9, #BA         ; Skip if V9 == 186
$8F4    $4911   SNE      V9, #11         ; Skip if V9 != 17
$8F6    $88EC   UNKNOWN  88EC            ; Unknown 8xxx instruction
$8F8    $633C   LD       V3, #3C         ; Load 60 into V3
$8FA    $B1AD   JP       V0, $1AD        ; Jump to V0 + 1AD
$8FC    $76A8   ADD      V6, #A8         ; Add 168 to V6
$8FE    $B711   JP       V0, $711        ; Jump to V0 + 711
$900    $93F0   SNE      V3, VF          ; Skip if V3 != VF
$902    $7F89   ADD      VF, #89         ; Add 137 to VF
$904    $2AD5   CALL     $AD5            ; Call subroutine at AD5
$906    $D89A   DRW      V8, V9, #A      ; Draw 10-byte sprite at V8, V9
$908    $613D   LD       V1, #3D         ; Load 61 into V1
$90A    $3F09   SE       VF, #09         ; Skip if VF == 9
$90C    $A12D   LD       I, $12D         ; Load 12D into I
$90E    $3C59   SE       VC, #59         ; Skip if VC == 89
$910    $757E   ADD      V5, #7E         ; Add 126 to V5
$912    $04AE   SYS      $4AE            ; System call to 4AE
$914    $6636   LD       V6, #36         ; Load 54 into V6
$916    $0D89   SYS      $D89            ; System call to D89
$918    $EA22   UNKNOWN  $EA22           ; Unknown Exxx instruction
$91A    $B036   JP       V0, $036        ; Jump to V0 + 036
$91C    $8D73   XOR      VD, V7          ; VD ^= V7
$91E    $0F8E   SYS      $F8E            ; System call to F8E
$920    $0C98   SYS      $C98            ; System call to C98
$922    $140B   JP       $40B            ; Jump to 40B
$924    $880A   UNKNOWN  880A            ; Unknown 8xxx instruction
$926    $0784   SYS      $784            ; System call to 784
$928    $AD19   LD       I, $D19         ; Load D19 into I
$92A    $01BC   SYS      $1BC            ; System call to 1BC
$92C    $1213   JP       $213            ; Jump to 213
$92E    $2174   CALL     $174            ; Call subroutine at 174
$930    $4D19   SNE      VD, #19         ; Skip if VD != 25
$932    $21F0   CALL     $1F0            ; Call subroutine at 1F0
$934    $5CC5   UNKNOWN  $5CC5           ; Unknown 5xxx instruction
$936    $8BC0   LD       VB, VC          ; VB = VC
$938    $70D7   ADD      V0, #D7         ; Add 215 to V0
$93A    $F06F   UNKNOWN  F06F            ; Unknown Fxxx instruction
$93C    $A9F2   LD       I, $9F2         ; Load 9F2 into I
$93E    $8CA1   OR       VC, VA          ; VC |= VA
$940    $5C14   UNKNOWN  $5C14           ; Unknown 5xxx instruction
$942    $DE96   DRW      VE, V9, #6      ; Draw 6-byte sprite at VE, V9
$944    $6B9B   LD       VB, #9B         ; Load 155 into VB
$946    $BF2E   JP       V0, $F2E        ; Jump to V0 + F2E
$948    $3ECF   SE       VE, #CF         ; Skip if VE == 207
$94A    $41B2   SNE      V1, #B2         ; Skip if V1 != 178
$94C    $5ED2   UNKNOWN  $5ED2           ; Unknown 5xxx instruction
$94E    $9C99   UNKNOWN  $9C99           ; Unknown 9xxx instruction
$950    $DEC5   DRW      VE, VC, #5      ; Draw 5-byte sprite at VE, VC
$952    $37CC   SE       V7, #CC         ; Skip if V7 == 204
$954    $7E4F   ADD      VE, #4F         ; Add 79 to VE
$956    $ED5B   UNKNOWN  $ED5B           ; Unknown Exxx instruction
$958    $2F26   CALL     $F26            ; Call subroutine at F26
$95A    $E002   UNKNOWN  $E002           ; Unknown Exxx instruction
$95C    $6539   LD       V5, #39         ; Load 57 into V5
$95E    $478E   SNE      V7, #8E         ; Skip if V7 != 142
$960    $ECDA   UNKNOWN  $ECDA           ; Unknown Exxx instruction
$962    $D9F2   DRW      V9, VF, #2      ; Draw 2-byte sprite at V9, VF
$964    $FF8A   UNKNOWN  FF8A            ; Unknown Fxxx instruction
$966    $AB83   LD       I, $B83         ; Load B83 into I
$968    $91E6   UNKNOWN  $91E6           ; Unknown 9xxx instruction
$96A    $D21C   DRW      V2, V1, #C      ; Draw 12-byte sprite at V2, V1
$96C    $1055   JP       $055            ; Jump to 055
$96E    $7057   ADD      V0, #57         ; Add 87 to V0
$970    $5401   UNKNOWN  $5401           ; Unknown 5xxx instruction
$972    $D54F   DRW      V5, V4, #F      ; Draw 15-byte sprite at V5, V4
$974    $B54F   JP       V0, $54F        ; Jump to V0 + 54F
$976    $BB7E   JP       V0, $B7E        ; Jump to V0 + B7E
$978    $CE92   RND      VE, #92         ; VE = random & 92
$97A    $9765   UNKNOWN  $9765           ; Unknown 9xxx instruction
$97C    $81EE   SHL      V1              ; V1 <<= 1, VF = MSB
$97E    $EB5F   UNKNOWN  $EB5F           ; Unknown Exxx instruction
$980    $5C25   UNKNOWN  $5C25           ; Unknown 5xxx instruction
$982    $6552   LD       V5, #52         ; Load 82 into V5
$984    $D0D4   DRW      V0, VD, #4      ; Draw 4-byte sprite at V0, VD
$986    $32C1   SE       V2, #C1         ; Skip if V2 == 193
$988    $58C3   UNKNOWN  $58C3           ; Unknown 5xxx instruction
$98A    $D58C   DRW      V5, V8, #C      ; Draw 12-byte sprite at V5, V8
$98C    $823B   UNKNOWN  823B            ; Unknown 8xxx instruction
$98E    $ED91   UNKNOWN  $ED91           ; Unknown Exxx instruction
$990    $0642   SYS      $642            ; System call to 642
$992    $A842   LD       I, $842         ; Load 842 into I
$994    $F8D8   UNKNOWN  F8D8            ; Unknown Fxxx instruction
$996    $8BF4   ADD      VB, VF          ; VB += VF, VF = carry
$998    $461D   SNE      V6, #1D         ; Skip if V6 != 29
$99A    $DBD2   DRW      VB, VD, #2      ; Draw 2-byte sprite at VB, VD
$99C    $CE44   RND      VE, #44         ; VE = random & 44
$99E    $72A0   ADD      V2, #A0         ; Add 160 to V2
$9A0    $D492   DRW      V4, V9, #2      ; Draw 2-byte sprite at V4, V9
$9A2    $43BB   SNE      V3, #BB         ; Skip if V3 != 187
$9A4    $9586   UNKNOWN  $9586           ; Unknown 9xxx instruction
$9A6    $37AB   SE       V7, #AB         ; Skip if V7 == 171
$9A8    $A412   LD       I, $412         ; Load 412 into I
$9AA    $4224   SNE      V2, #24         ; Skip if V2 != 36
$9AC    $7AC6   ADD      VA, #C6         ; Add 198 to VA
$9AE    $7123   ADD      V1, #23         ; Add 35 to V1
$9B0    $0AAC   SYS      $AAC            ; System call to AAC
$9B2    $882D   UNKNOWN  882D            ; Unknown 8xxx instruction
$9B4    $02F6   SYS      $2F6            ; System call to 2F6
$9B6    $27EA   CALL     $7EA            ; Call subroutine at 7EA
$9B8    $373D   SE       V7, #3D         ; Skip if V7 == 61
$9BA    $6815   LD       V8, #15         ; Load 21 into V8
$9BC    $4AF4   SNE      VA, #F4         ; Skip if VA != 244
$9BE    $A5DA   LD       I, $5DA         ; Load 5DA into I
$9C0    $2733   CALL     $733            ; Call subroutine at 733
$9C2    $5A1C   UNKNOWN  $5A1C           ; Unknown 5xxx instruction
$9C4    $8874   ADD      V8, V7          ; V8 += V7, VF = carry
$9C6    $7492   ADD      V4, #92         ; Add 146 to V4
$9C8    $5589   UNKNOWN  $5589           ; Unknown 5xxx instruction
$9CA    $15C3   JP       $5C3            ; Jump to 5C3
$9CC    $7838   ADD      V8, #38         ; Add 56 to V8
$9CE    $2AF8   CALL     $AF8            ; Call subroutine at AF8
$9D0    $732E   ADD      V3, #2E         ; Add 46 to V3
$9D2    $913B   UNKNOWN  $913B           ; Unknown 9xxx instruction
$9D4    $6AFB   LD       VA, #FB         ; Load 251 into VA
$9D6    $EE2A   UNKNOWN  $EE2A           ; Unknown Exxx instruction
$9D8    $EFEC   UNKNOWN  $EFEC           ; Unknown Exxx instruction
$9DA    $04B0   SYS      $4B0            ; System call to 4B0
$9DC    $A87C   LD       I, $87C         ; Load 87C into I
$9DE    $52BB   UNKNOWN  $52BB           ; Unknown 5xxx instruction
$9E0    $76F9   ADD      V6, #F9         ; Add 249 to V6
$9E2    $6748   LD       V7, #48         ; Load 72 into V7
$9E4    $0742   SYS      $742            ; System call to 742
$9E6    $C07E   RND      V0, #7E         ; V0 = random & 7E
$9E8    $38B6   SE       V8, #B6         ; Skip if V8 == 182
$9EA    $687E   LD       V8, #7E         ; Load 126 into V8
$9EC    $E1BB   UNKNOWN  $E1BB           ; Unknown Exxx instruction
$9EE    $9C5D   UNKNOWN  $9C5D           ; Unknown 9xxx instruction
$9F0    $BD87   JP       V0, $D87        ; Jump to V0 + D87
$9F2    $4459   SNE      V4, #59         ; Skip if V4 != 89
$9F4    $7D96   ADD      VD, #96         ; Add 150 to VD
$9F6    $EFFA   UNKNOWN  $EFFA           ; Unknown Exxx instruction
$9F8    $F4B1   UNKNOWN  F4B1            ; Unknown Fxxx instruction
$9FA    $610C   LD       V1, #0C         ; Load 12 into V1
$9FC    $4244   SNE      V2, #44         ; Skip if V2 != 68
$9FE    $AECB   LD       I, $ECB         ; Load ECB into I
$A00    $B830   JP       V0, $830        ; Jump to V0 + 830
$A02    $2CBF   CALL     $CBF            ; Call subroutine at CBF
$A04    $E7AA   UNKNOWN  $E7AA           ; Unknown Exxx instruction
$A06    $3CA4   SE       VC, #A4         ; Skip if VC == 164
$A08    $3E66   SE       VE, #66         ; Skip if VE == 102
$A0A    $810C   UNKNOWN  810C            ; Unknown 8xxx instruction
$A0C    $1F6B   JP       $F6B            ; Jump to F6B
$A0E    $A47A   LD       I, $47A         ; Load 47A into I
$A10    $7492   ADD      V4, #92         ; Add 146 to V4
$A12    $13FC   JP       $3FC            ; Jump to 3FC
$A14    $E07C   UNKNOWN  $E07C           ; Unknown Exxx instruction
$A16    $72EB   ADD      V2, #EB         ; Add 235 to V2
$A18    $3794   SE       V7, #94         ; Skip if V7 == 148
$A1A    $6F4F   LD       VF, #4F         ; Load 79 into VF
$A1C    $8F12   AND      VF, V1          ; VF &= V1
$A1E    $4956   SNE      V9, #56         ; Skip if V9 != 86
$A20    $729F   ADD      V2, #9F         ; Add 159 to V2
$A22    $6281   LD       V2, #81         ; Load 129 into V2
$A24    $DC9D   DRW      VC, V9, #D      ; Draw 13-byte sprite at VC, V9
$A26    $D585   DRW      V5, V8, #5      ; Draw 5-byte sprite at V5, V8
$A28    $E984   UNKNOWN  $E984           ; Unknown Exxx instruction
$A2A    $3E1E   SE       VE, #1E         ; Skip if VE == 30
$A2C    $46AF   SNE      V6, #AF         ; Skip if V6 != 175
$A2E    $6375   LD       V3, #75         ; Load 117 into V3
$A30    $91DA   UNKNOWN  $91DA           ; Unknown 9xxx instruction
$A32    $8C61   OR       VC, V6          ; VC |= V6
$A34    $14BF   JP       $4BF            ; Jump to 4BF
$A36    $2F91   CALL     $F91            ; Call subroutine at F91
$A38    $B0C7   JP       V0, $0C7        ; Jump to V0 + 0C7
$A3A    $7D22   ADD      VD, #22         ; Add 34 to VD
$A3C    $F621   UNKNOWN  F621            ; Unknown Fxxx instruction
$A3E    $9A92   UNKNOWN  $9A92           ; Unknown 9xxx instruction
$A40    $92B2   UNKNOWN  $92B2           ; Unknown 9xxx instruction
$A42    $2C18   CALL     $C18            ; Call subroutine at C18
$A44    $B21A   JP       V0, $21A        ; Jump to V0 + 21A
$A46    $F9EF   UNKNOWN  F9EF            ; Unknown Fxxx instruction
$A48    $BEFF   JP       V0, $EFF        ; Jump to V0 + EFF
$A4A    $943E   UNKNOWN  $943E           ; Unknown 9xxx instruction
$A4C    $58DF   UNKNOWN  $58DF           ; Unknown 5xxx instruction
$A4E    $C75A   RND      V7, #5A         ; V7 = random & 5A
$A50    $30B9   SE       V0, #B9         ; Skip if V0 == 185
$A52    $EA89   UNKNOWN  $EA89           ; Unknown Exxx instruction
$A54    $8455   SUB      V4, V5          ; V4 -= V5, VF = !borrow
$A56    $1B9D   JP       $B9D            ; Jump to B9D
$A58    $8E6F   UNKNOWN  8E6F            ; Unknown 8xxx instruction
$A5A    $5E56   UNKNOWN  $5E56           ; Unknown 5xxx instruction
$A5C    $B311   JP       V0, $311        ; Jump to V0 + 311
$A5E    $41B0   SNE      V1, #B0         ; Skip if V1 != 176
$A60    $E508   UNKNOWN  $E508           ; Unknown Exxx instruction
$A62    $1EF9   JP       $EF9            ; Jump to EF9
$A64    $B7FB   JP       V0, $7FB        ; Jump to V0 + 7FB
$A66    $D06D   DRW      V0, V6, #D      ; Draw 13-byte sprite at V0, V6
$A68    $F99E   UNKNOWN  F99E            ; Unknown Fxxx instruction
$A6A    $F531   UNKNOWN  F531            ; Unknown Fxxx instruction
$A6C    $9D7B   UNKNOWN  $9D7B           ; Unknown 9xxx instruction
$A6E    $6706   LD       V7, #06         ; Load 6 into V7
$A70    $A289   LD       I, $289         ; Load 289 into I
$A72    $194C   JP       $94C            ; Jump to 94C
$A74    $FE80   UNKNOWN  FE80            ; Unknown Fxxx instruction
$A76    $8A84   ADD      VA, V8          ; VA += V8, VF = carry
$A78    $1E66   JP       $E66            ; Jump to E66
$A7A    $BB1D   JP       V0, $B1D        ; Jump to V0 + B1D
$A7C    $9CE1   UNKNOWN  $9CE1           ; Unknown 9xxx instruction
$A7E    $38BC   SE       V8, #BC         ; Skip if V8 == 188
$A80    $074B   SYS      $74B            ; System call to 74B
$A82    $1950   JP       $950            ; Jump to 950
$A84    $B4A1   JP       V0, $4A1        ; Jump to V0 + 4A1
$A86    $3A9A   SE       VA, #9A         ; Skip if VA == 154
$A88    $DE35   DRW      VE, V3, #5      ; Draw 5-byte sprite at VE, V3
$A8A    $9D9E   UNKNOWN  $9D9E           ; Unknown 9xxx instruction
$A8C    $6B83   LD       VB, #83         ; Load 131 into VB
$A8E    $44DE   SNE      V4, #DE         ; Skip if V4 != 222
$A90    $0DA0   SYS      $DA0            ; System call to DA0
$A92    $FA56   UNKNOWN  FA56            ; Unknown Fxxx instruction
$A94    $9FC8   UNKNOWN  $9FC8           ; Unknown 9xxx instruction
$A96    $28CE   CALL     $8CE            ; Call subroutine at 8CE
$A98    $973E   UNKNOWN  $973E           ; Unknown 9xxx instruction
$A9A    $CACB   RND      VA, #CB         ; VA = random & CB
$A9C    $8140   LD       V1, V4          ; V1 = V4
$A9E    $F933   LD       B, V9           ; Store BCD of V9 at I, I+1, I+2
$AA0    $BDDF   JP       V0, $DDF        ; Jump to V0 + DDF
$AA2    $595D   UNKNOWN  $595D           ; Unknown 5xxx instruction
$AA4    $0230   SYS      $230            ; System call to 230
$AA6    $9A8C   UNKNOWN  $9A8C           ; Unknown 9xxx instruction
$AA8    $0D57   SYS      $D57            ; System call to D57
$AAA    $D917   DRW      V9, V1, #7      ; Draw 7-byte sprite at V9, V1
$AAC    $82F7   SUBN     V2, VF          ; V2 = VF - V2, VF = !borrow
$AAE    $12F8   JP       $2F8            ; Jump to 2F8
$AB0    $1032   JP       $032            ; Jump to 032
$AB2    $F7D9   UNKNOWN  F7D9            ; Unknown Fxxx instruction
$AB4    $D31C   DRW      V3, V1, #C      ; Draw 12-byte sprite at V3, V1
$AB6    $0076   SYS      $076            ; System call to 076
$AB8    $9095   UNKNOWN  $9095           ; Unknown 9xxx instruction
$ABA    $87FC   UNKNOWN  87FC            ; Unknown 8xxx instruction
$ABC    $8F2F   UNKNOWN  8F2F            ; Unknown 8xxx instruction
$ABE    $B093   JP       V0, $093        ; Jump to V0 + 093
$AC0    $BB27   JP       V0, $B27        ; Jump to V0 + B27
$AC2    $D74C   DRW      V7, V4, #C      ; Draw 12-byte sprite at V7, V4
$AC4    $1369   JP       $369            ; Jump to 369
$AC6    $B5E3   JP       V0, $5E3        ; Jump to V0 + 5E3
$AC8    $F277   UNKNOWN  F277            ; Unknown Fxxx instruction
$ACA    $AEFD   LD       I, $EFD         ; Load EFD into I
$ACC    $5776   UNKNOWN  $5776           ; Unknown 5xxx instruction
$ACE    $74D9   ADD      V4, #D9         ; Add 217 to V4
$AD0    $FA6C   UNKNOWN  FA6C            ; Unknown Fxxx instruction
$AD2    $DAF5   DRW      VA, VF, #5      ; Draw 5-byte sprite at VA, VF
$AD4    $3873   SE       V8, #73         ; Skip if V8 == 115
$AD6    $B22E   JP       V0, $22E        ; Jump to V0 + 22E
$AD8    $27FC   CALL     $7FC            ; Call subroutine at 7FC
$ADA    $8C55   SUB      VC, V5          ; VC -= V5, VF = !borrow
$ADC    $2487   CALL     $487            ; Call subroutine at 487
$ADE    $ACFD   LD       I, $CFD         ; Load CFD into I
$AE0    $CEAD   RND      VE, #AD         ; VE = random & AD
$AE2    $9852   UNKNOWN  $9852           ; Unknown 9xxx instruction
$AE4    $0B35   SYS      $B35            ; System call to B35
$AE6    $50E6   UNKNOWN  $50E6           ; Unknown 5xxx instruction
$AE8    $7658   ADD      V6, #58         ; Add 88 to V6
$AEA    $8341   OR       V3, V4          ; V3 |= V4
$AEC    $7D1D   ADD      VD, #1D         ; Add 29 to VD
$AEE    $259B   CALL     $59B            ; Call subroutine at 59B
$AF0    $149A   JP       $49A            ; Jump to 49A
$AF2    $4AA4   SNE      VA, #A4         ; Skip if VA != 164
$AF4    $E0F1   UNKNOWN  $E0F1           ; Unknown Exxx instruction
$AF6    $A534   LD       I, $534         ; Load 534 into I
$AF8    $F73E   UNKNOWN  F73E            ; Unknown Fxxx instruction
$AFA    $DCE2   DRW      VC, VE, #2      ; Draw 2-byte sprite at VC, VE
$AFC    $F74F   UNKNOWN  F74F            ; Unknown Fxxx instruction
$AFE    $528C   UNKNOWN  $528C           ; Unknown 5xxx instruction
$B00    $0B67   SYS      $B67            ; System call to B67
$B02    $1405   JP       $405            ; Jump to 405
$B04    $1897   JP       $897            ; Jump to 897
$B06    $5CC9   UNKNOWN  $5CC9           ; Unknown 5xxx instruction
$B08    $BBF4   JP       V0, $BF4        ; Jump to V0 + BF4
$B0A    $31BF   SE       V1, #BF         ; Skip if V1 == 191
$B0C    $33E7   SE       V3, #E7         ; Skip if V3 == 231
$B0E    $E70B   UNKNOWN  $E70B           ; Unknown Exxx instruction
$B10    $3029   SE       V0, #29         ; Skip if V0 == 41
$B12    $3D57   SE       VD, #57         ; Skip if VD == 87
$B14    $EFB6   UNKNOWN  $EFB6           ; Unknown Exxx instruction
$B16    $B899   JP       V0, $899        ; Jump to V0 + 899
$B18    $E1D7   UNKNOWN  $E1D7           ; Unknown Exxx instruction
$B1A    $2BF8   CALL     $BF8            ; Call subroutine at BF8
$B1C    $1249   JP       $249            ; Jump to 249
$B1E    $7BDB   ADD      VB, #DB         ; Add 219 to VB
$B20    $AC51   LD       I, $C51         ; Load C51 into I
$B22    $11AB   JP       $1AB            ; Jump to 1AB
$B24    $97C0   SNE      V7, VC          ; Skip if V7 != VC
$B26    $1F5D   JP       $F5D            ; Jump to F5D
$B28    $A2D2   LD       I, $2D2         ; Load 2D2 into I
$B2A    $CD4A   RND      VD, #4A         ; VD = random & 4A
$B2C    $510D   UNKNOWN  $510D           ; Unknown 5xxx instruction
$B2E    $E081   UNKNOWN  $E081           ; Unknown Exxx instruction
$B30    $E068   UNKNOWN  $E068           ; Unknown Exxx instruction
$B32    $F686   UNKNOWN  F686            ; Unknown Fxxx instruction
$B34    $9D00   SNE      VD, V0          ; Skip if VD != V0
$B36    $36FA   SE       V6, #FA         ; Skip if V6 == 250
$B38    $A13A   LD       I, $13A         ; Load 13A into I
$B3A    $4580   SNE      V5, #80         ; Skip if V5 != 128
$B3C    $D932   DRW      V9, V3, #2      ; Draw 2-byte sprite at V9, V3
$B3E    $6345   LD       V3, #45         ; Load 69 into V3
$B40    $D2A3   DRW      V2, VA, #3      ; Draw 3-byte sprite at V2, VA
$B42    $8935   SUB      V9, V3          ; V9 -= V3, VF = !borrow
$B44    $C2F9   RND      V2, #F9         ; V2 = random & F9
$B46    $33A9   SE       V3, #A9         ; Skip if V3 == 169
$B48    $A45C   LD       I, $45C         ; Load 45C into I
$B4A    $096C   SYS      $96C            ; System call to 96C
$B4C    $54BA   UNKNOWN  $54BA           ; Unknown 5xxx instruction
$B4E    $2BA5   CALL     $BA5            ; Call subroutine at BA5
$B50    $B324   JP       V0, $324        ; Jump to V0 + 324
$B52    $4ECE   SNE      VE, #CE         ; Skip if VE != 206
$B54    $217A   CALL     $17A            ; Call subroutine at 17A
$B56    $0A1E   SYS      $A1E            ; System call to A1E
$B58    $1599   JP       $599            ; Jump to 599
$B5A    $6171   LD       V1, #71         ; Load 113 into V1
$B5C    $7655   ADD      V6, #55         ; Add 85 to V6
$B5E    $A9CE   LD       I, $9CE         ; Load 9CE into I
$B60    $FACA   UNKNOWN  FACA            ; Unknown Fxxx instruction
$B62    $DF94   DRW      VF, V9, #4      ; Draw 4-byte sprite at VF, V9
$B64    $5FFA   UNKNOWN  $5FFA           ; Unknown 5xxx instruction
$B66    $2D42   CALL     $D42            ; Call subroutine at D42
$B68    $A19F   LD       I, $19F         ; Load 19F into I
$B6A    $3372   SE       V3, #72         ; Skip if V3 == 114
$B6C    $7FAF   ADD      VF, #AF         ; Add 175 to VF
$B6E    $7417   ADD      V4, #17         ; Add 23 to V4
$B70    $62C6   LD       V2, #C6         ; Load 198 into V2
$B72    $949D   UNKNOWN  $949D           ; Unknown 9xxx instruction
$B74    $0A4E   SYS      $A4E            ; System call to A4E
$B76    $6DB2   LD       VD, #B2         ; Load 178 into VD
$B78    $06AA   SYS      $6AA            ; System call to 6AA
$B7A    $1CD2   JP       $CD2            ; Jump to CD2
$B7C    $9425   UNKNOWN  $9425           ; Unknown 9xxx instruction
$B7E    $E70C   UNKNOWN  $E70C           ; Unknown Exxx instruction
$B80    $E711   UNKNOWN  $E711           ; Unknown Exxx instruction
$B82    $649F   LD       V4, #9F         ; Load 159 into V4
$B84    $8F9C   UNKNOWN  8F9C            ; Unknown 8xxx instruction
$B86    $4639   SNE      V6, #39         ; Skip if V6 != 57
$B88    $FDFA   UNKNOWN  FDFA            ; Unknown Fxxx instruction
$B8A    $D62F   DRW      V6, V2, #F      ; Draw 15-byte sprite at V6, V2
$B8C    $BA6E   JP       V0, $A6E        ; Jump to V0 + A6E
$B8E    $3766   SE       V7, #66         ; Skip if V7 == 102
$B90    $DEDE   DRW      VE, VD, #E      ; Draw 14-byte sprite at VE, VD
$B92    $2FDD   CALL     $FDD            ; Call subroutine at FDD
$B94    $9BC8   UNKNOWN  $9BC8           ; Unknown 9xxx instruction
$B96    $2545   CALL     $545            ; Call subroutine at 545
$B98    $F32C   UNKNOWN  F32C            ; Unknown Fxxx instruction
$B9A    $927B   UNKNOWN  $927B           ; Unknown 9xxx instruction
$B9C    $6D1C   LD       VD, #1C         ; Load 28 into VD
$B9E    $4C17   SNE      VC, #17         ; Skip if VC != 23
$BA0    $F17D   UNKNOWN  F17D            ; Unknown Fxxx instruction
$BA2    $BCC6   JP       V0, $CC6        ; Jump to V0 + CC6
$BA4    $EF5B   UNKNOWN  $EF5B           ; Unknown Exxx instruction
$BA6    $B274   JP       V0, $274        ; Jump to V0 + 274
$BA8    $DCEA   DRW      VC, VE, #A      ; Draw 10-byte sprite at VC, VE
$BAA    $FD0F   UNKNOWN  FD0F            ; Unknown Fxxx instruction
$BAC    $2C06   CALL     $C06            ; Call subroutine at C06
$BAE    $C61E   RND      V6, #1E         ; V6 = random & 1E
$BB0    $C841   RND      V8, #41         ; V8 = random & 41
$BB2    $C5F4   RND      V5, #F4         ; V5 = random & F4
$BB4    $6270   LD       V2, #70         ; Load 112 into V2
$BB6    $A7BF   LD       I, $7BF         ; Load 7BF into I
$BB8    $DD25   DRW      VD, V2, #5      ; Draw 5-byte sprite at VD, V2
$BBA    $3E44   SE       VE, #44         ; Skip if VE == 68
$BBC    $2A11   CALL     $A11            ; Call subroutine at A11
$BBE    $A6E8   LD       I, $6E8         ; Load 6E8 into I
$BC0    $5CB8   UNKNOWN  $5CB8           ; Unknown 5xxx instruction
$BC2    $BEB2   JP       V0, $EB2        ; Jump to V0 + EB2
$BC4    $9A2E   UNKNOWN  $9A2E           ; Unknown 9xxx instruction
$BC6    $EA70   UNKNOWN  $EA70           ; Unknown Exxx instruction
$BC8    $43BE   SNE      V3, #BE         ; Skip if V3 != 190
$BCA    $B43A   JP       V0, $43A        ; Jump to V0 + 43A
$BCC    $CA4D   RND      VA, #4D         ; VA = random & 4D
$BCE    $B3C7   JP       V0, $3C7        ; Jump to V0 + 3C7
$BD0    $F2CB   UNKNOWN  F2CB            ; Unknown Fxxx instruction
$BD2    $B0BC   JP       V0, $0BC        ; Jump to V0 + 0BC
$BD4    $40EF   SNE      V0, #EF         ; Skip if V0 != 239
$BD6    $194E   JP       $94E            ; Jump to 94E
$BD8    $AE7E   LD       I, $E7E         ; Load E7E into I
$BDA    $5CB4   UNKNOWN  $5CB4           ; Unknown 5xxx instruction
$BDC    $0B2B   SYS      $B2B            ; System call to B2B
$BDE    $F6C6   UNKNOWN  F6C6            ; Unknown Fxxx instruction
$BE0    $B5DE   JP       V0, $5DE        ; Jump to V0 + 5DE
$BE2    $D2ED   DRW      V2, VE, #D      ; Draw 13-byte sprite at V2, VE
$BE4    $99B8   UNKNOWN  $99B8           ; Unknown 9xxx instruction
$BE6    $5C84   UNKNOWN  $5C84           ; Unknown 5xxx instruction
$BE8    $D2DC   DRW      V2, VD, #C      ; Draw 12-byte sprite at V2, VD
$BEA    $F9FA   UNKNOWN  F9FA            ; Unknown Fxxx instruction
$BEC    $DC02   DRW      VC, V0, #2      ; Draw 2-byte sprite at VC, V0
$BEE    $D94C   DRW      V9, V4, #C      ; Draw 12-byte sprite at V9, V4
$BF0    $D5DA   DRW      V5, VD, #A      ; Draw 10-byte sprite at V5, VD
$BF2    $846B   UNKNOWN  846B            ; Unknown 8xxx instruction
$BF4    $8C6E   SHL      VC              ; VC <<= 1, VF = MSB
$BF6    $BE9C   JP       V0, $E9C        ; Jump to V0 + E9C
$BF8    $ADD6   LD       I, $DD6         ; Load DD6 into I
$BFA    $2228   CALL     $228            ; Call subroutine at 228
$BFC    $D766   DRW      V7, V6, #6      ; Draw 6-byte sprite at V7, V6
$BFE    $033E   SYS      $33E            ; System call to 33E
$C00    $2036   CALL     $036            ; Call subroutine at 036
$C02    $9F9A   UNKNOWN  $9F9A           ; Unknown 9xxx instruction
$C04    $BBD5   JP       V0, $BD5        ; Jump to V0 + BD5
$C06    $01DA   SYS      $1DA            ; System call to 1DA
$C08    $B3FC   JP       V0, $3FC        ; Jump to V0 + 3FC
$C0A    $B747   JP       V0, $747        ; Jump to V0 + 747
$C0C    $1461   JP       $461            ; Jump to 461
$C0E    $8637   SUBN     V6, V3          ; V6 = V3 - V6, VF = !borrow
$C10    $92ED   UNKNOWN  $92ED           ; Unknown 9xxx instruction
$C12    $D2F5   DRW      V2, VF, #5      ; Draw 5-byte sprite at V2, VF
$C14    $7792   ADD      V7, #92         ; Add 146 to V7
$C16    $B424   JP       V0, $424        ; Jump to V0 + 424
$C18    $FA92   UNKNOWN  FA92            ; Unknown Fxxx instruction
$C1A    $9857   UNKNOWN  $9857           ; Unknown 9xxx instruction
$C1C    $90BA   UNKNOWN  $90BA           ; Unknown 9xxx instruction
$C1E    $6626   LD       V6, #26         ; Load 38 into V6
$C20    $41BA   SNE      V1, #BA         ; Skip if V1 != 186
$C22    $2BC2   CALL     $BC2            ; Call subroutine at BC2
$C24    $AF5D   LD       I, $F5D         ; Load F5D into I
$C26    $558B   UNKNOWN  $558B           ; Unknown 5xxx instruction
$C28    $D88A   DRW      V8, V8, #A      ; Draw 10-byte sprite at V8, V8
$C2A    $74D1   ADD      V4, #D1         ; Add 209 to V4
$C2C    $BD39   JP       V0, $D39        ; Jump to V0 + D39
$C2E    $A8EA   LD       I, $8EA         ; Load 8EA into I
$C30    $F05E   UNKNOWN  F05E            ; Unknown Fxxx instruction
$C32    $E0CF   UNKNOWN  $E0CF           ; Unknown Exxx instruction
$C34    $8223   XOR      V2, V2          ; V2 ^= V2
$C36    $DC76   DRW      VC, V7, #6      ; Draw 6-byte sprite at VC, V7
$C38    $92B6   UNKNOWN  $92B6           ; Unknown 9xxx instruction
$C3A    $2AED   CALL     $AED            ; Call subroutine at AED
$C3C    $D738   DRW      V7, V3, #8      ; Draw 8-byte sprite at V7, V3
$C3E    $9D8A   UNKNOWN  $9D8A           ; Unknown 9xxx instruction
$C40    $5F4B   UNKNOWN  $5F4B           ; Unknown 5xxx instruction
$C42    $2CE9   CALL     $CE9            ; Call subroutine at CE9
$C44    $0989   SYS      $989            ; System call to 989
$C46    $D15A   DRW      V1, V5, #A      ; Draw 10-byte sprite at V1, V5
$C48    $7867   ADD      V8, #67         ; Add 103 to V8
$C4A    $B39C   JP       V0, $39C        ; Jump to V0 + 39C
$C4C    $174A   JP       $74A            ; Jump to 74A
$C4E    $C83F   RND      V8, #3F         ; V8 = random & 3F
$C50    $E1C6   UNKNOWN  $E1C6           ; Unknown Exxx instruction
$C52    $E272   UNKNOWN  $E272           ; Unknown Exxx instruction
$C54    $DCA3   DRW      VC, VA, #3      ; Draw 3-byte sprite at VC, VA
$C56    $BC2C   JP       V0, $C2C        ; Jump to V0 + C2C
$C58    $0DE0   SYS      $DE0            ; System call to DE0
$C5A    $C0B7   RND      V0, #B7         ; V0 = random & B7
$C5C    $6306   LD       V3, #06         ; Load 6 into V3
$C5E    $9480   SNE      V4, V8          ; Skip if V4 != V8
$C60    $A593   LD       I, $593         ; Load 593 into I
$C62    $9190   SNE      V1, V9          ; Skip if V1 != V9
$C64    $6F63   LD       VF, #63         ; Load 99 into VF
$C66    $E108   UNKNOWN  $E108           ; Unknown Exxx instruction
$C68    $DAB4   DRW      VA, VB, #4      ; Draw 4-byte sprite at VA, VB
$C6A    $B7EF   JP       V0, $7EF        ; Jump to V0 + 7EF
$C6C    $AC3E   LD       I, $C3E         ; Load C3E into I
$C6E    $4856   SNE      V8, #56         ; Skip if V8 != 86
$C70    $6B45   LD       VB, #45         ; Load 69 into VB
$C72    $272B   CALL     $72B            ; Call subroutine at 72B
$C74    $04E5   SYS      $4E5            ; System call to 4E5
$C76    $C9D1   RND      V9, #D1         ; V9 = random & D1
$C78    $76A1   ADD      V6, #A1         ; Add 161 to V6
$C7A    $F8F8   UNKNOWN  F8F8            ; Unknown Fxxx instruction
$C7C    $9CBC   UNKNOWN  $9CBC           ; Unknown 9xxx instruction
$C7E    $C71E   RND      V7, #1E         ; V7 = random & 1E
$C80    $2606   CALL     $606            ; Call subroutine at 606
$C82    $671C   LD       V7, #1C         ; Load 28 into V7
$C84    $8417   SUBN     V4, V1          ; V4 = V1 - V4, VF = !borrow
$C86    $72FD   ADD      V2, #FD         ; Add 253 to V2
$C88    $B169   JP       V0, $169        ; Jump to V0 + 169
$C8A    $610A   LD       V1, #0A         ; Load 10 into V1
$C8C    $B531   JP       V0, $531        ; Jump to V0 + 531
$C8E    $B964   JP       V0, $964        ; Jump to V0 + 964
$C90    $27BA   CALL     $7BA            ; Call subroutine at 7BA
$C92    $E02B   UNKNOWN  $E02B           ; Unknown Exxx instruction
$C94    $50AC   UNKNOWN  $50AC           ; Unknown 5xxx instruction
$C96    $3A66   SE       VA, #66         ; Skip if VA == 102
$C98    $99C7   UNKNOWN  $99C7           ; Unknown 9xxx instruction
$C9A    $B624   JP       V0, $624        ; Jump to V0 + 624
$C9C    $CAD4   RND      VA, #D4         ; VA = random & D4
$C9E    $5659   UNKNOWN  $5659           ; Unknown 5xxx instruction
$CA0    $A2F5   LD       I, $2F5         ; Load 2F5 into I
$CA2    $98BB   UNKNOWN  $98BB           ; Unknown 9xxx instruction
$CA4    $C94B   RND      V9, #4B         ; V9 = random & 4B
$CA6    $50FA   UNKNOWN  $50FA           ; Unknown 5xxx instruction
$CA8    $9A41   UNKNOWN  $9A41           ; Unknown 9xxx instruction
$CAA    $CEEB   RND      VE, #EB         ; VE = random & EB
$CAC    $A959   LD       I, $959         ; Load 959 into I
$CAE    $9581   UNKNOWN  $9581           ; Unknown 9xxx instruction
$CB0    $0CC6   SYS      $CC6            ; System call to CC6
$CB2    $36D4   SE       V6, #D4         ; Skip if V6 == 212
$CB4    $9365   UNKNOWN  $9365           ; Unknown 9xxx instruction
$CB6    $0002   SYS      $002            ; System call to 002
$CB8    $46A2   SNE      V6, #A2         ; Skip if V6 != 162
$CBA    $B60D   JP       V0, $60D        ; Jump to V0 + 60D
$CBC    $EAD9   UNKNOWN  $EAD9           ; Unknown Exxx instruction
$CBE    $84D7   SUBN     V4, VD          ; V4 = VD - V4, VF = !borrow
$CC0    $EEF9   UNKNOWN  $EEF9           ; Unknown Exxx instruction
$CC2    $4A62   SNE      VA, #62         ; Skip if VA != 98
$CC4    $D46E   DRW      V4, V6, #E      ; Draw 14-byte sprite at V4, V6
$CC6    $499E   SNE      V9, #9E         ; Skip if V9 != 158
$CC8    $7C26   ADD      VC, #26         ; Add 38 to VC
$CCA    $7B77   ADD      VB, #77         ; Add 119 to VB
$CCC    $58FC   UNKNOWN  $58FC           ; Unknown 5xxx instruction
$CCE    $0C30   SYS      $C30            ; System call to C30
$CD0    $E73B   UNKNOWN  $E73B           ; Unknown Exxx instruction
$CD2    $13DC   JP       $3DC            ; Jump to 3DC
$CD4    $DC5D   DRW      VC, V5, #D      ; Draw 13-byte sprite at VC, V5
$CD6    $CE45   RND      VE, #45         ; VE = random & 45
$CD8    $3CD5   SE       VC, #D5         ; Skip if VC == 213
$CDA    $CF45   RND      VF, #45         ; VF = random & 45
$CDC    $20A8   CALL     $0A8            ; Call subroutine at 0A8
$CDE    $19D4   JP       $9D4            ; Jump to 9D4
$CE0    $C204   RND      V2, #04         ; V2 = random & 04
$CE2    $7DC9   ADD      VD, #C9         ; Add 201 to VD
$CE4    $1F69   JP       $F69            ; Jump to F69
$CE6    $676F   LD       V7, #6F         ; Load 111 into V7
$CE8    $2A8C   CALL     $A8C            ; Call subroutine at A8C
$CEA    $6273   LD       V2, #73         ; Load 115 into V2
$CEC    $89C9   UNKNOWN  89C9            ; Unknown 8xxx instruction
$CEE    $E622   UNKNOWN  $E622           ; Unknown Exxx instruction
$CF0    $3ACC   SE       VA, #CC         ; Skip if VA == 204
$CF2    $34F7   SE       V4, #F7         ; Skip if V4 == 247
$CF4    $92C2   UNKNOWN  $92C2           ; Unknown 9xxx instruction
$CF6    $C792   RND      V7, #92         ; V7 = random & 92
$CF8    $E3B3   UNKNOWN  $E3B3           ; Unknown Exxx instruction
$CFA    $1812   JP       $812            ; Jump to 812
$CFC    $06E6   SYS      $6E6            ; System call to 6E6
$CFE    $6EFF   LD       VE, #FF         ; Load 255 into VE
$D00    $4283   SNE      V2, #83         ; Skip if V2 != 131
$D02    $72FF   ADD      V2, #FF         ; Add 255 to V2
$D04    $7D42   ADD      VD, #42         ; Add 66 to VD
$D06    $ADDF   LD       I, $DDF         ; Load DDF into I
$D08    $7BAE   ADD      VB, #AE         ; Add 174 to VB
$D0A    $2DE9   CALL     $DE9            ; Call subroutine at DE9
$D0C    $6C18   LD       VC, #18         ; Load 24 into VC
$D0E    $0747   SYS      $747            ; System call to 747
$D10    $5105   UNKNOWN  $5105           ; Unknown 5xxx instruction
$D12    $0E19   SYS      $E19            ; System call to E19
$D14    $03BA   SYS      $3BA            ; System call to 3BA
$D16    $D076   DRW      V0, V7, #6      ; Draw 6-byte sprite at V0, V7
$D18    $7B4B   ADD      VB, #4B         ; Add 75 to VB
$D1A    $D449   DRW      V4, V4, #9      ; Draw 9-byte sprite at V4, V4
$D1C    $EEB7   UNKNOWN  $EEB7           ; Unknown Exxx instruction
$D1E    $8311   OR       V3, V1          ; V3 |= V1
$D20    $4C9E   SNE      VC, #9E         ; Skip if VC != 158
$D22    $46A3   SNE      V6, #A3         ; Skip if V6 != 163
$D24    $9C2B   UNKNOWN  $9C2B           ; Unknown 9xxx instruction
$D26    $7867   ADD      V8, #67         ; Add 103 to V8
$D28    $EF8C   UNKNOWN  $EF8C           ; Unknown Exxx instruction
$D2A    $9C06   UNKNOWN  $9C06           ; Unknown 9xxx instruction
$D2C    $3B04   SE       VB, #04         ; Skip if VB == 4
$D2E    $9937   UNKNOWN  $9937           ; Unknown 9xxx instruction
$D30    $7E4F   ADD      VE, #4F         ; Add 79 to VE
$D32    $F41A   UNKNOWN  F41A            ; Unknown Fxxx instruction
$D34    $2D60   CALL     $D60            ; Call subroutine at D60
$D36    $62CD   LD       V2, #CD         ; Load 205 into V2
$D38    $90D0   SNE      V0, VD          ; Skip if V0 != VD
$D3A    $27BF   CALL     $7BF            ; Call subroutine at 7BF
$D3C    $5E84   UNKNOWN  $5E84           ; Unknown 5xxx instruction
$D3E    $4804   SNE      V8, #04         ; Skip if V8 != 4
$D40    $AEF0   LD       I, $EF0         ; Load EF0 into I
$D42    $1FE6   JP       $FE6            ; Jump to FE6
$D44    $EFBA   UNKNOWN  $EFBA           ; Unknown Exxx instruction
$D46    $0E76   SYS      $E76            ; System call to E76
$D48    $6F0E   LD       VF, #0E         ; Load 14 into VF
$D4A    $BC0E   JP       V0, $C0E        ; Jump to V0 + C0E
$D4C    $902A   UNKNOWN  $902A           ; Unknown 9xxx instruction
$D4E    $DFB6   DRW      VF, VB, #6      ; Draw 6-byte sprite at VF, VB
$D50    $7468   ADD      V4, #68         ; Add 104 to V4
$D52    $23A7   CALL     $3A7            ; Call subroutine at 3A7
$D54    $DBC5   DRW      VB, VC, #5      ; Draw 5-byte sprite at VB, VC
$D56    $CFAB   RND      VF, #AB         ; VF = random & AB
$D58    $1D35   JP       $D35            ; Jump to D35
$D5A    $256D   CALL     $56D            ; Call subroutine at 56D
$D5C    $E8CF   UNKNOWN  $E8CF           ; Unknown Exxx instruction
$D5E    $6857   LD       V8, #57         ; Load 87 into V8
$D60    $B03D   JP       V0, $03D        ; Jump to V0 + 03D
$D62    $A7B1   LD       I, $7B1         ; Load 7B1 into I
$D64    $5957   UNKNOWN  $5957           ; Unknown 5xxx instruction
$D66    $DA3E   DRW      VA, V3, #E      ; Draw 14-byte sprite at VA, V3
$D68    $7905   ADD      V9, #05         ; Add 5 to V9
$D6A    $FCD8   UNKNOWN  FCD8            ; Unknown Fxxx instruction
$D6C    $6A2F   LD       VA, #2F         ; Load 47 into VA
$D6E    $F56E   UNKNOWN  F56E            ; Unknown Fxxx instruction
$D70    $009A   SYS      $09A            ; System call to 09A
$D72    $90E5   UNKNOWN  $90E5           ; Unknown 9xxx instruction
$D74    $110B   JP       $10B            ; Jump to 10B
$D76    $1D7C   JP       $D7C            ; Jump to D7C
$D78    $7A31   ADD      VA, #31         ; Add 49 to VA
$D7A    $C74C   RND      V7, #4C         ; V7 = random & 4C
$D7C    $9E97   UNKNOWN  $9E97           ; Unknown 9xxx instruction
$D7E    $3957   SE       V9, #57         ; Skip if V9 == 87
$D80    $B8A0   JP       V0, $8A0        ; Jump to V0 + 8A0
$D82    $6954   LD       V9, #54         ; Load 84 into V9
$D84    $90AC   UNKNOWN  $90AC           ; Unknown 9xxx instruction
$D86    $D81A   DRW      V8, V1, #A      ; Draw 10-byte sprite at V8, V1
$D88    $A194   LD       I, $194         ; Load 194 into I
$D8A    $F192   UNKNOWN  F192            ; Unknown Fxxx instruction
$D8C    $7C0B   ADD      VC, #0B         ; Add 11 to VC
$D8E    $F7F9   UNKNOWN  F7F9            ; Unknown Fxxx instruction
$D90    $C5A7   RND      V5, #A7         ; V5 = random & A7
$D92    $7AC6   ADD      VA, #C6         ; Add 198 to VA
$D94    $8F2B   UNKNOWN  8F2B            ; Unknown 8xxx instruction
$D96    $91F2   UNKNOWN  $91F2           ; Unknown 9xxx instruction
$D98    $2CD4   CALL     $CD4            ; Call subroutine at CD4
$D9A    $1096   JP       $096            ; Jump to 096
$D9C    $65CA   LD       V5, #CA         ; Load 202 into V5
$D9E    $EDD6   UNKNOWN  $EDD6           ; Unknown Exxx instruction
$DA0    $DFD6   DRW      VF, VD, #6      ; Draw 6-byte sprite at VF, VD
$DA2    $FF9B   UNKNOWN  FF9B            ; Unknown Fxxx instruction
$DA4    $8D46   SHR      VD              ; VD >>= 1, VF = LSB
$DA6    $E0FA   UNKNOWN  $E0FA           ; Unknown Exxx instruction
$DA8    $62A7   LD       V2, #A7         ; Load 167 into V2
$DAA    $5B9F   UNKNOWN  $5B9F           ; Unknown 5xxx instruction
$DAC    $A511   LD       I, $511         ; Load 511 into I
$DAE    $F120   UNKNOWN  F120            ; Unknown Fxxx instruction
$DB0    $88DD   UNKNOWN  88DD            ; Unknown 8xxx instruction
$DB2    $5CD3   UNKNOWN  $5CD3           ; Unknown 5xxx instruction
$DB4    $F9A1   UNKNOWN  F9A1            ; Unknown Fxxx instruction
$DB6    $2356   CALL     $356            ; Call subroutine at 356
$DB8    $0CEB   SYS      $CEB            ; System call to CEB
$DBA    $2A0D   CALL     $A0D            ; Call subroutine at A0D
$DBC    $5B1E   UNKNOWN  $5B1E           ; Unknown 5xxx instruction
$DBE    $ACE6   LD       I, $CE6         ; Load CE6 into I
$DC0    $5774   UNKNOWN  $5774           ; Unknown 5xxx instruction
$DC2    $9CE9   UNKNOWN  $9CE9           ; Unknown 9xxx instruction
$DC4    $7778   ADD      V7, #78         ; Add 120 to V7
$DC6    $A4A7   LD       I, $4A7         ; Load 4A7 into I
$DC8    $F1F4   UNKNOWN  F1F4            ; Unknown Fxxx instruction
$DCA    $0425   SYS      $425            ; System call to 425
$DCC    $5F53   UNKNOWN  $5F53           ; Unknown 5xxx instruction
$DCE    $06C2   SYS      $6C2            ; System call to 6C2
$DD0    $C7E8   RND      V7, #E8         ; V7 = random & E8
$DD2    $01DB   SYS      $1DB            ; System call to 1DB
$DD4    $AF85   LD       I, $F85         ; Load F85 into I
$DD6    $89CD   UNKNOWN  89CD            ; Unknown 8xxx instruction
$DD8    $7D6A   ADD      VD, #6A         ; Add 106 to VD
$DDA    $B59C   JP       V0, $59C        ; Jump to V0 + 59C
$DDC    $99E4   UNKNOWN  $99E4           ; Unknown 9xxx instruction
$DDE    $6B82   LD       VB, #82         ; Load 130 into VB
$DE0    $1EDA   JP       $EDA            ; Jump to EDA
$DE2    $9D36   UNKNOWN  $9D36           ; Unknown 9xxx instruction
$DE4    $4BCF   SNE      VB, #CF         ; Skip if VB != 207
$DE6    $11B5   JP       $1B5            ; Jump to 1B5
$DE8    $DA6C   DRW      VA, V6, #C      ; Draw 12-byte sprite at VA, V6
$DEA    $4FB5   SNE      VF, #B5         ; Skip if VF != 181
$DEC    $074C   SYS      $74C            ; System call to 74C
$DEE    $F266   UNKNOWN  F266            ; Unknown Fxxx instruction
$DF0    $348F   SE       V4, #8F         ; Skip if V4 == 143
$DF2    $C6B4   RND      V6, #B4         ; V6 = random & B4
$DF4    $744A   ADD      V4, #4A         ; Add 74 to V4
$DF6    $A6AA   LD       I, $6AA         ; Load 6AA into I
$DF8    $A3E0   LD       I, $3E0         ; Load 3E0 into I
$DFA    $B640   JP       V0, $640        ; Jump to V0 + 640
$DFC    $E5FC   UNKNOWN  $E5FC           ; Unknown Exxx instruction
$DFE    $71CF   ADD      V1, #CF         ; Add 207 to V1
$E00    $6E09   LD       VE, #09         ; Load 9 into VE
$E02    $2354   CALL     $354            ; Call subroutine at 354
$E04    $07E0   SYS      $7E0            ; System call to 7E0
$E06    $1687   JP       $687            ; Jump to 687
$E08    $2BD2   CALL     $BD2            ; Call subroutine at BD2
$E0A    $673C   LD       V7, #3C         ; Load 60 into V7
$E0C    $3C0A   SE       VC, #0A         ; Skip if VC == 10
$E0E    $EAD5   UNKNOWN  $EAD5           ; Unknown Exxx instruction
$E10    $6239   LD       V2, #39         ; Load 57 into V2
$E12    $B208   JP       V0, $208        ; Jump to V0 + 208
$E14    $45AC   SNE      V5, #AC         ; Skip if V5 != 172
$E16    $0116   SYS      $116            ; System call to 116
$E18    $4673   SNE      V6, #73         ; Skip if V6 != 115
$E1A    $EF85   UNKNOWN  $EF85           ; Unknown Exxx instruction
$E1C    $EA18   UNKNOWN  $EA18           ; Unknown Exxx instruction
$E1E    $3DA0   SE       VD, #A0         ; Skip if VD == 160
$E20    $86D4   ADD      V6, VD          ; V6 += VD, VF = carry
$E22    $CBA3   RND      VB, #A3         ; VB = random & A3
$E24    $3076   SE       V0, #76         ; Skip if V0 == 118
$E26    $E94D   UNKNOWN  $E94D           ; Unknown Exxx instruction
$E28    $F144   UNKNOWN  F144            ; Unknown Fxxx instruction
$E2A    $C4F5   RND      V4, #F5         ; V4 = random & F5
$E2C    $3CC7   SE       VC, #C7         ; Skip if VC == 199
$E2E    $EE23   UNKNOWN  $EE23           ; Unknown Exxx instruction
$E30    $F1C0   UNKNOWN  F1C0            ; Unknown Fxxx instruction
$E32    $0B6F   SYS      $B6F            ; System call to B6F
$E34    $4E20   SNE      VE, #20         ; Skip if VE != 32
$E36    $E3F4   UNKNOWN  $E3F4           ; Unknown Exxx instruction
$E38    $03F7   SYS      $3F7            ; System call to 3F7
$E3A    $AE39   LD       I, $E39         ; Load E39 into I
$E3C    $C487   RND      V4, #87         ; V4 = random & 87
$E3E    $0657   SYS      $657            ; System call to 657
$E40    $67BF   LD       V7, #BF         ; Load 191 into V7
$E42    $E344   UNKNOWN  $E344           ; Unknown Exxx instruction
$E44    $4741   SNE      V7, #41         ; Skip if V7 != 65
$E46    $C5EB   RND      V5, #EB         ; V5 = random & EB
$E48    $102E   JP       $02E            ; Jump to 02E
$E4A    $0BB9   SYS      $BB9            ; System call to BB9
$E4C    $F8EC   UNKNOWN  F8EC            ; Unknown Fxxx instruction
$E4E    $8C1C   UNKNOWN  8C1C            ; Unknown 8xxx instruction
$E50    $81E8   UNKNOWN  81E8            ; Unknown 8xxx instruction
$E52    $2A77   CALL     $A77            ; Call subroutine at A77
$E54    $40C7   SNE      V0, #C7         ; Skip if V0 != 199
$E56    $EE89   UNKNOWN  $EE89           ; Unknown Exxx instruction
$E58    $8BD0   LD       VB, VD          ; VB = VD
$E5A    $A5EF   LD       I, $5EF         ; Load 5EF into I
$E5C    $24F9   CALL     $4F9            ; Call subroutine at 4F9
$E5E    $E7B1   UNKNOWN  $E7B1           ; Unknown Exxx instruction
$E60    $4938   SNE      V9, #38         ; Skip if V9 != 56
$E62    $9BC8   UNKNOWN  $9BC8           ; Unknown 9xxx instruction
$E64    $4EBF   SNE      VE, #BF         ; Skip if VE != 191
$E66    $3E77   SE       VE, #77         ; Skip if VE == 119
$E68    $A87D   LD       I, $87D         ; Load 87D into I
$E6A    $4B70   SNE      VB, #70         ; Skip if VB != 112
$E6C    $EA82   UNKNOWN  $EA82           ; Unknown Exxx instruction
$E6E    $94C5   UNKNOWN  $94C5           ; Unknown 9xxx instruction
$E70    $2578   CALL     $578            ; Call subroutine at 578
$E72    $0B4D   SYS      $B4D            ; System call to B4D
$E74    $455B   SNE      V5, #5B         ; Skip if V5 != 91
$E76    $7B01   ADD      VB, #01         ; Add 1 to VB
$E78    $BBF2   JP       V0, $BF2        ; Jump to V0 + BF2
$E7A    $5DB3   UNKNOWN  $5DB3           ; Unknown 5xxx instruction
$E7C    $3758   SE       V7, #58         ; Skip if V7 == 88
$E7E    $499E   SNE      V9, #9E         ; Skip if V9 != 158
$E80    $6646   LD       V6, #46         ; Load 70 into V6
$E82    $6C66   LD       VC, #66         ; Load 102 into VC
$E84    $C1EF   RND      V1, #EF         ; V1 = random & EF
$E86    $E99C   UNKNOWN  $E99C           ; Unknown Exxx instruction
$E88    $420A   SNE      V2, #0A         ; Skip if V2 != 10
$E8A    $B456   JP       V0, $456        ; Jump to V0 + 456
$E8C    $4587   SNE      V5, #87         ; Skip if V5 != 135
$E8E    $F892   UNKNOWN  F892            ; Unknown Fxxx instruction
$E90    $9258   UNKNOWN  $9258           ; Unknown 9xxx instruction
$E92    $2252   CALL     $252            ; Call subroutine at 252
$E94    $86D4   ADD      V6, VD          ; V6 += VD, VF = carry
$E96    $8429   UNKNOWN  8429            ; Unknown 8xxx instruction
$E98    $30D7   SE       V0, #D7         ; Skip if V0 == 215
$E9A    $6A17   LD       VA, #17         ; Load 23 into VA
$E9C    $D508   DRW      V5, V0, #8      ; Draw 8-byte sprite at V5, V0
$E9E    $2E62   CALL     $E62            ; Call subroutine at E62
$EA0    $D753   DRW      V7, V5, #3      ; Draw 3-byte sprite at V7, V5
$EA2    $5936   UNKNOWN  $5936           ; Unknown 5xxx instruction
$EA4    $F28F   UNKNOWN  F28F            ; Unknown Fxxx instruction
$EA6    $2301   CALL     $301            ; Call subroutine at 301
$EA8    $968D   UNKNOWN  $968D           ; Unknown 9xxx instruction
$EAA    $BEE0   JP       V0, $EE0        ; Jump to V0 + EE0
$EAC    $A13C   LD       I, $13C         ; Load 13C into I
$EAE    $764D   ADD      V6, #4D         ; Add 77 to V6
$EB0    $DF48   DRW      VF, V4, #8      ; Draw 8-byte sprite at VF, V4
$EB2    $712B   ADD      V1, #2B         ; Add 43 to V1
$EB4    $B67B   JP       V0, $67B        ; Jump to V0 + 67B
$EB6    $0803   SYS      $803            ; System call to 803
$EB8    $D752   DRW      V7, V5, #2      ; Draw 2-byte sprite at V7, V5
$EBA    $3A24   SE       VA, #24         ; Skip if VA == 36
$EBC    $A2D6   LD       I, $2D6         ; Load 2D6 into I
$EBE    $8136   SHR      V1              ; V1 >>= 1, VF = LSB
$EC0    $53B5   UNKNOWN  $53B5           ; Unknown 5xxx instruction
$EC2    $ED60   UNKNOWN  $ED60           ; Unknown Exxx instruction
$EC4    $118C   JP       $18C            ; Jump to 18C
$EC6    $3C41   SE       VC, #41         ; Skip if VC == 65
$EC8    $0288   SYS      $288            ; System call to 288
$ECA    $D019   DRW      V0, V1, #9      ; Draw 9-byte sprite at V0, V1
$ECC    $5403   UNKNOWN  $5403           ; Unknown 5xxx instruction
$ECE    $67CA   LD       V7, #CA         ; Load 202 into V7
$ED0    $AC88   LD       I, $C88         ; Load C88 into I
$ED2    $C771   RND      V7, #71         ; V7 = random & 71
$ED4    $24FA   CALL     $4FA            ; Call subroutine at 4FA
$ED6    $49F6   SNE      V9, #F6         ; Skip if V9 != 246
$ED8    $C311   RND      V3, #11         ; V3 = random & 11
$EDA    $3671   SE       V6, #71         ; Skip if V6 == 113
$EDC    $FD20   UNKNOWN  FD20            ; Unknown Fxxx instruction
$EDE    $0912   SYS      $912            ; System call to 912
$EE0    $1172   JP       $172            ; Jump to 172
$EE2    $A586   LD       I, $586         ; Load 586 into I
$EE4    $E8F7   UNKNOWN  $E8F7           ; Unknown Exxx instruction
$EE6    $3396   SE       V3, #96         ; Skip if V3 == 150
$EE8    $7D08   ADD      VD, #08         ; Add 8 to VD
$EEA    $B4D7   JP       V0, $4D7        ; Jump to V0 + 4D7
$EEC    $AFCE   LD       I, $FCE         ; Load FCE into I
$EEE    $0F9B   SYS      $F9B            ; System call to F9B
$EF0    $1413   JP       $413            ; Jump to 413
$EF2    $4AC0   SNE      VA, #C0         ; Skip if VA != 192
$EF4    $8621   OR       V6, V2          ; V6 |= V2
$EF6    $6B91   LD       VB, #91         ; Load 145 into VB
$EF8    $888B   UNKNOWN  888B            ; Unknown 8xxx instruction
$EFA    $ADE6   LD       I, $DE6         ; Load DE6 into I
$EFC    $A61D   LD       I, $61D         ; Load 61D into I
$EFE    $3B80   SE       VB, #80         ; Skip if VB == 128
$F00    $169F   JP       $69F            ; Jump to 69F
$F02    $8BB1   OR       VB, VB          ; VB |= VB
$F04    $90A8   UNKNOWN  $90A8           ; Unknown 9xxx instruction
$F06    $36D3   SE       V6, #D3         ; Skip if V6 == 211
$F08    $7F7F   ADD      VF, #7F         ; Add 127 to VF
$F0A    $4FEB   SNE      VF, #EB         ; Skip if VF != 235
$F0C    $0282   SYS      $282            ; System call to 282
$F0E    $E2CA   UNKNOWN  $E2CA           ; Unknown Exxx instruction
$F10    $586B   UNKNOWN  $586B           ; Unknown 5xxx instruction
$F12    $2AC4   CALL     $AC4            ; Call subroutine at AC4
$F14    $CB43   RND      VB, #43         ; VB = random & 43
$F16    $E142   UNKNOWN  $E142           ; Unknown Exxx instruction
$F18    $1057   JP       $057            ; Jump to 057
$F1A    $2EAB   CALL     $EAB            ; Call subroutine at EAB
$F1C    $326D   SE       V2, #6D         ; Skip if V2 == 109
$F1E    $A359   LD       I, $359         ; Load 359 into I
$F20    $6EE3   LD       VE, #E3         ; Load 227 into VE
$F22    $6B64   LD       VB, #64         ; Load 100 into VB
$F24    $B7DF   JP       V0, $7DF        ; Jump to V0 + 7DF
$F26    $7126   ADD      V1, #26         ; Add 38 to V1
$F28    $26E0   CALL     $6E0            ; Call subroutine at 6E0
$F2A    $645A   LD       V4, #5A         ; Load 90 into V4
$F2C    $D7DD   DRW      V7, VD, #D      ; Draw 13-byte sprite at V7, VD
$F2E    $0526   SYS      $526            ; System call to 526
$F30    $4C35   SNE      VC, #35         ; Skip if VC != 53
$F32    $3F4F   SE       VF, #4F         ; Skip if VF == 79
$F34    $0598   SYS      $598            ; System call to 598
$F36    $98FE   UNKNOWN  $98FE           ; Unknown 9xxx instruction
$F38    $8FC0   LD       VF, VC          ; VF = VC
$F3A    $43C7   SNE      V3, #C7         ; Skip if V3 != 199
$F3C    $3F4E   SE       VF, #4E         ; Skip if VF == 78
$F3E    $240E   CALL     $40E            ; Call subroutine at 40E
$F40    $1552   JP       $552            ; Jump to 552
$F42    $33AE   SE       V3, #AE         ; Skip if V3 == 174
$F44    $A732   LD       I, $732         ; Load 732 into I
$F46    $1C79   JP       $C79            ; Jump to C79
$F48    $D7BD   DRW      V7, VB, #D      ; Draw 13-byte sprite at V7, VB
$F4A    $1C78   JP       $C78            ; Jump to C78
$F4C    $2A2A   CALL     $A2A            ; Call subroutine at A2A
$F4E    $A288   LD       I, $288         ; Load 288 into I
$F50    $0DB6   SYS      $DB6            ; System call to DB6
$F52    $BB7B   JP       V0, $B7B        ; Jump to V0 + B7B
$F54    $A851   LD       I, $851         ; Load 851 into I
$F56    $CC09   RND      VC, #09         ; VC = random & 09
$F58    $AEC8   LD       I, $EC8         ; Load EC8 into I
$F5A    $6B47   LD       VB, #47         ; Load 71 into VB
$F5C    $907A   UNKNOWN  $907A           ; Unknown 9xxx instruction
$F5E    $CE62   RND      VE, #62         ; VE = random & 62
$F60    $AADE   LD       I, $ADE         ; Load ADE into I
$F62    $F636   UNKNOWN  F636            ; Unknown Fxxx instruction
$F64    $F99F   UNKNOWN  F99F            ; Unknown Fxxx instruction
$F66    $9B58   UNKNOWN  $9B58           ; Unknown 9xxx instruction
$F68    $88CD   UNKNOWN  88CD            ; Unknown 8xxx instruction
$F6A    $AC58   LD       I, $C58         ; Load C58 into I
$F6C    $9FF5   UNKNOWN  $9FF5           ; Unknown 9xxx instruction
$F6E    $25AF   CALL     $5AF            ; Call subroutine at 5AF
$F70    $3CEB   SE       VC, #EB         ; Skip if VC == 235
$F72    $E7F6   UNKNOWN  $E7F6           ; Unknown Exxx instruction
$F74    $B298   JP       V0, $298        ; Jump to V0 + 298
$F76    $027F   SYS      $27F            ; System call to 27F
$F78    $440F   SNE      V4, #0F         ; Skip if V4 != 15
$F7A    $13A9   JP       $3A9            ; Jump to 3A9
$F7C    $1122   JP       $122            ; Jump to 122
$F7E    $0133   SYS      $133            ; System call to 133
$F80    $5F5D   UNKNOWN  $5F5D           ; Unknown 5xxx instruction
$F82    $2650   CALL     $650            ; Call subroutine at 650
$F84    $719D   ADD      V1, #9D         ; Add 157 to V1
$F86    $F98A   UNKNOWN  F98A            ; Unknown Fxxx instruction
$F88    $1AF2   JP       $AF2            ; Jump to AF2
$F8A    $E912   UNKNOWN  $E912           ; Unknown Exxx instruction
$F8C    $9436   UNKNOWN  $9436           ; Unknown 9xxx instruction
$F8E    $7F50   ADD      VF, #50         ; Add 80 to VF
$F90    $4057   SNE      V0, #57         ; Skip if V0 != 87
$F92    $B656   JP       V0, $656        ; Jump to V0 + 656
$F94    $FDE5   UNKNOWN  FDE5            ; Unknown Fxxx instruction
$F96    $D7EC   DRW      V7, VE, #C      ; Draw 12-byte sprite at V7, VE
$F98    $EA61   UNKNOWN  $EA61           ; Unknown Exxx instruction
$F9A    $182B   JP       $82B            ; Jump to 82B
$F9C    $2540   CALL     $540            ; Call subroutine at 540
$F9E    $811F   UNKNOWN  811F            ; Unknown 8xxx instruction
$FA0    $D2DF   DRW      V2, VD, #F      ; Draw 15-byte sprite at V2, VD
$FA2    $9CB0   SNE      VC, VB          ; Skip if VC != VB
$FA4    $55DF   UNKNOWN  $55DF           ; Unknown 5xxx instruction
$FA6    $FBBC   UNKNOWN  FBBC            ; Unknown Fxxx instruction
$FA8    $C186   RND      V1, #86         ; V1 = random & 86
$FAA    $4531   SNE      V5, #31         ; Skip if V5 != 49
$FAC    $B352   JP       V0, $352        ; Jump to V0 + 352
$FAE    $EAF1   UNKNOWN  $EAF1           ; Unknown Exxx instruction
$FB0    $E429   UNKNOWN  $E429           ; Unknown Exxx instruction
$FB2    $FFB6   UNKNOWN  FFB6            ; Unknown Fxxx instruction
$FB4    $E38C   UNKNOWN  $E38C           ; Unknown Exxx instruction
$FB6    $FC29   LD       F, VC           ; I = sprite address for digit VC
$FB8    $3946   SE       V9, #46         ; Skip if V9 == 70
$FBA    $9543   UNKNOWN  $9543           ; Unknown 9xxx instruction
$FBC    $3A29   SE       VA, #29         ; Skip if VA == 41
$FBE    $3D20   SE       VD, #20         ; Skip if VD == 32
$FC0    $62C4   LD       V2, #C4         ; Load 196 into V2
$FC2    $9CBC   UNKNOWN  $9CBC           ; Unknown 9xxx instruction
$FC4    $DEF6   DRW      VE, VF, #6      ; Draw 6-byte sprite at VE, VF
$FC6    $A900   LD       I, $900         ; Load 900 into I
$FC8    $65D3   LD       V5, #D3         ; Load 211 into V5
$FCA    $AD5D   LD       I, $D5D         ; Load D5D into I
$FCC    $8019   UNKNOWN  8019            ; Unknown 8xxx instruction
$FCE    $A7CB   LD       I, $7CB         ; Load 7CB into I
$FD0    $3058   SE       V0, #58         ; Skip if V0 == 88
$FD2    $3C4A   SE       VC, #4A         ; Skip if VC == 74
$FD4    $9E71   UNKNOWN  $9E71           ; Unknown 9xxx instruction
$FD6    $A8C6   LD       I, $8C6         ; Load 8C6 into I
$FD8    $7015   ADD      V0, #15         ; Add 21 to V0
$FDA    $B228   JP       V0, $228        ; Jump to V0 + 228
$FDC    $38AC   SE       V8, #AC         ; Skip if V8 == 172
$FDE    $703E   ADD      V0, #3E         ; Add 62 to V0
$FE0    $720C   ADD      V2, #0C         ; Add 12 to V2
$FE2    $E683   UNKNOWN  $E683           ; Unknown Exxx instruction
$FE4    $8A81   OR       VA, V8          ; VA |= V8
$FE6    $171B   JP       $71B            ; Jump to 71B
$FE8    $BF7E   JP       V0, $F7E        ; Jump to V0 + F7E
$FEA    $D507   DRW      V5, V0, #7      ; Draw 7-byte sprite at V5, V0
$FEC    $5838   UNKNOWN  $5838           ; Unknown 5xxx instruction
$FEE    $0EE3   SYS      $EE3            ; System call to EE3
$FF0    $DC31   DRW      VC, V3, #1      ; Draw 1-byte sprite at VC, V3
$FF2    $2657   CALL     $657            ; Call subroutine at 657
$FF4    $716D   ADD      V1, #6D         ; Add 109 to V1
$FF6    $FD24   UNKNOWN  FD24            ; Unknown Fxxx instruction
$FF8    $F44D   UNKNOWN  F44D            ; Unknown Fxxx instruction
$FFA    $A214   LD       I, $214         ; Load 214 into I
$FFC    $5E54   UNKNOWN  $5E54           ; Unknown 5xxx instruction
$FFE    $5EB1   UNKNOWN  $5EB1           ; Unknown 5xxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 464 (25.9%)
  LD      : 243 (13.6%)
  JP      : 229 (12.8%)
  SNE     : 131 ( 7.3%)
  ADD     : 128 ( 7.1%)
  SYS     : 120 ( 6.7%)
  SE      : 114 ( 6.4%)
  DRW     : 114 ( 6.4%)
  CALL    : 112 ( 6.2%)
  RND     :  89 ( 5.0%)
  OR      :   9 ( 0.5%)
  SUB     :   8 ( 0.4%)
  SUBN    :   8 ( 0.4%)
  SHR     :   6 ( 0.3%)
  SHL     :   6 ( 0.3%)
  XOR     :   6 ( 0.3%)
  AND     :   5 ( 0.3%)

Memory Operations: 371 (20.7%)
Arithmetic Operations: 164 (9.2%)
