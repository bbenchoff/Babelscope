
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B134D01_I06221_C6444_84154ca1f168.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 134
Instance: 6221
Direction: descending
Final Array: [237, 237, 237, 237, 237, 237, 237, 79]
Operations: R:0 W:7 C:148 S:4

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 118
Sort Array References:
  $200: LD I, $7BD ; Load 7BD into I
  $212: LD I, $070 ; Load 070 into I
  $22A: LD I, $9BE ; Load 9BE into I
  $248: LD I, $474 ; Load 474 into I
  $26C: LD I, $128 ; Load 128 into I
  $280: LD I, $92B ; Load 92B into I
  $2BA: LD I, $3C0 ; Load 3C0 into I
  $2C6: LD I, $1D3 ; Load 1D3 into I
  $32C: LD I, $39F ; Load 39F into I
  $344: LD I, $622 ; Load 622 into I
  $368: LD I, $7E2 ; Load 7E2 into I
  $37E: LD I, $55C ; Load 55C into I
  $380: LD I, $AE2 ; Load AE2 into I
  $3BA: LD I, $068 ; Load 068 into I
  $44C: LD I, $5A3 ; Load 5A3 into I
  $456: LD I, $D31 ; Load D31 into I
  $480: LD I, $268 ; Load 268 into I
  $4AC: LD I, $C03 ; Load C03 into I
  $4BA: LD I, $A21 ; Load A21 into I
  $4E6: LD I, $1F8 ; Load 1F8 into I
  $4F8: LD I, $D26 ; Load D26 into I
  $50C: LD I, $98C ; Load 98C into I
  $52C: LD I, $5C7 ; Load 5C7 into I
  $55A: LD I, $62A ; Load 62A into I
  $5A6: LD I, $283 ; Load 283 into I
  $5B2: LD I, $C5A ; Load C5A into I
  $5DC: LD I, $B32 ; Load B32 into I
  $5F8: LD I, $78F ; Load 78F into I
  $610: LD I, $DC2 ; Load DC2 into I
  $61E: LD I, $7EA ; Load 7EA into I
  $630: LD I, $5A0 ; Load 5A0 into I
  $648: LD I, $FB9 ; Load FB9 into I
  $68C: LD I, $937 ; Load 937 into I
  $69A: LD I, $2F2 ; Load 2F2 into I
  $6B6: LD I, $E5A ; Load E5A into I
  $6EE: LD I, $960 ; Load 960 into I
  $70C: LD I, $2A7 ; Load 2A7 into I
  $73C: LD I, $4C2 ; Load 4C2 into I
  $756: LD I, $F87 ; Load F87 into I
  $772: LD I, $5B5 ; Load 5B5 into I
  $792: LD I, $9B9 ; Load 9B9 into I
  $794: LD I, $150 ; Load 150 into I
  $838: LD I, $4B0 ; Load 4B0 into I
  $83E: LD I, $7A7 ; Load 7A7 into I
  $85C: LD I, $A4E ; Load A4E into I
  $86E: LD I, $43F ; Load 43F into I
  $870: LD I, $5E9 ; Load 5E9 into I
  $884: LD I, $788 ; Load 788 into I
  $8BC: LD I, $3DA ; Load 3DA into I
  $8D0: LD I, $076 ; Load 076 into I
  $8D4: LD I, $79E ; Load 79E into I
  $8DE: LD I, $AB9 ; Load AB9 into I
  $8EA: LD I, $B5C ; Load B5C into I
  $8FC: LD I, $3E5 ; Load 3E5 into I
  $90E: LD I, $E46 ; Load E46 into I
  $912: LD I, $455 ; Load 455 into I
  $914: LD I, $F01 ; Load F01 into I
  $94A: LD I, $795 ; Load 795 into I
  $95E: LD I, $084 ; Load 084 into I
  $96E: LD I, $BE3 ; Load BE3 into I
  $97E: LD I, $A72 ; Load A72 into I
  $9A2: LD I, $97B ; Load 97B into I
  $9A6: LD I, $8B7 ; Load 8B7 into I
  $9B6: LD I, $C09 ; Load C09 into I
  $9DC: LD [I], V6 ; Store V0-V6 at I
  $A0A: LD I, $FBC ; Load FBC into I
  $A1E: ADD I, V5 ; I ADDRESS MANIPULATION
  $A36: LD I, $4F6 ; Load 4F6 into I
  $A40: LD I, $784 ; Load 784 into I
  $A52: LD I, $0E2 ; Load 0E2 into I
  $A58: LD I, $589 ; Load 589 into I
  $A74: LD I, $E70 ; Load E70 into I
  $A88: LD I, $F03 ; Load F03 into I
  $AAE: LD I, $1E7 ; Load 1E7 into I
  $AD6: LD I, $B2B ; Load B2B into I
  $B02: LD I, $8C3 ; Load 8C3 into I
  $B0A: LD I, $9B3 ; Load 9B3 into I
  $B52: LD I, $FF7 ; Load FF7 into I
  $B5E: LD I, $9BA ; Load 9BA into I
  $B94: LD I, $FD1 ; Load FD1 into I
  $BB8: LD I, $0E2 ; Load 0E2 into I
  $BC8: LD I, $709 ; Load 709 into I
  $BFE: LD I, $B73 ; Load B73 into I
  $C06: LD I, $892 ; Load 892 into I
  $C14: ADD I, V1 ; I ADDRESS MANIPULATION
  $C26: LD I, $A48 ; Load A48 into I
  $C40: LD I, $C25 ; Load C25 into I
  $C88: LD I, $C8C ; Load C8C into I
  $CBC: LD I, $00B ; Load 00B into I
  $CCA: LD I, $CEC ; Load CEC into I
  $CD2: LD I, $0B3 ; Load 0B3 into I
  $CF6: LD I, $C9C ; Load C9C into I
  $D00: LD I, $7E7 ; Load 7E7 into I
  $D0C: LD I, $8A0 ; Load 8A0 into I
  $D30: LD I, $421 ; Load 421 into I
  $D38: LD I, $C2A ; Load C2A into I
  $D3C: LD I, $94E ; Load 94E into I
  $D3E: LD I, $240 ; Load 240 into I
  $D52: LD I, $C03 ; Load C03 into I
  $D54: LD I, $9AF ; Load 9AF into I
  $DE8: LD [I], V0 ; Store V0-V0 at I
  $E08: LD I, $9B8 ; Load 9B8 into I
  $E2C: LD I, $D9C ; Load D9C into I
  $E32: LD I, $BCD ; Load BCD into I
  $E3A: LD I, $983 ; Load 983 into I
  $E56: LD I, $7FE ; Load 7FE into I
  $E64: LD I, $814 ; Load 814 into I
  $ED4: LD I, $038 ; Load 038 into I
  $ED8: LD I, $7F2 ; Load 7F2 into I
  $F04: LD I, $E3C ; Load E3C into I
  $F08: LD I, $AE8 ; Load AE8 into I
  $F1C: LD I, $3E7 ; Load 3E7 into I
  $F1E: LD I, $807 ; Load 807 into I
  $F6E: LD I, $A06 ; Load A06 into I
  $F7C: LD I, $C59 ; Load C59 into I
  $F84: LD I, $2E9 ; Load 2E9 into I
  $FB8: LD I, $81F ; Load 81F into I
  $FBA: LD I, $3BB ; Load 3BB into I

CONTROL FLOW ANALYSIS:
Jumps: 212
Calls: 114
Branches: 238
Loops: 118
Loop Structures:
  $260 -> $1DC (backward jump)
  $3C6 -> $123 (backward jump)
  $402 -> $3ED (backward jump)
  $40E -> $22A (backward jump)
  $414 -> $237 (backward jump)
  $446 -> $014 (backward jump)
  $4D8 -> $046 (backward jump)
  $526 -> $022 (backward jump)
  $53C -> $070 (backward jump)
  $544 -> $06A (backward jump)
  $55E -> $510 (backward jump)
  $57A -> $48A (backward jump)
  $5A8 -> $0F9 (backward jump)
  $5BA -> $50D (backward jump)
  $5DA -> $295 (backward jump)
  $5FC -> $1CD (backward jump)
  $658 -> $597 (backward jump)
  $664 -> $3AA (backward jump)
  $670 -> $179 (backward jump)
  $674 -> $0D0 (backward jump)
  $67C -> $330 (backward jump)
  $6EC -> $0FE (backward jump)
  $6FE -> $69F (backward jump)
  $70E -> $2E6 (backward jump)
  $762 -> $4B8 (backward jump)
  $77E -> $516 (backward jump)
  $790 -> $517 (backward jump)
  $7CE -> $63D (backward jump)
  $80C -> $7E1 (backward jump)
  $850 -> $0FE (backward jump)
  $878 -> $07B (backward jump)
  $88C -> $161 (backward jump)
  $8B0 -> $53A (backward jump)
  $8CE -> $74A (backward jump)
  $8F2 -> $764 (backward jump)
  $8F4 -> $69C (backward jump)
  $90C -> $2DC (backward jump)
  $91A -> $7DE (backward jump)
  $92E -> $4C8 (backward jump)
  $964 -> $6E8 (backward jump)
  $97C -> $150 (backward jump)
  $988 -> $6D0 (backward jump)
  $99E -> $081 (backward jump)
  $9BC -> $46F (backward jump)
  $9C4 -> $452 (backward jump)
  $9D6 -> $357 (backward jump)
  $9F6 -> $570 (backward jump)
  $A0E -> $1A0 (backward jump)
  $A48 -> $46B (backward jump)
  $A72 -> $7EC (backward jump)
  $A86 -> $724 (backward jump)
  $AC8 -> $70E (backward jump)
  $ADC -> $91B (backward jump)
  $AF4 -> $26A (backward jump)
  $B0E -> $3F2 (backward jump)
  $B10 -> $78B (backward jump)
  $B2C -> $494 (backward jump)
  $B3C -> $091 (backward jump)
  $B4A -> $5E1 (backward jump)
  $B82 -> $345 (backward jump)
  $B9E -> $1C6 (backward jump)
  $BC2 -> $7F8 (backward jump)
  $BD0 -> $B4E (backward jump)
  $C18 -> $0AB (backward jump)
  $C22 -> $86A (backward jump)
  $C32 -> $9E7 (backward jump)
  $C4A -> $582 (backward jump)
  $C54 -> $94A (backward jump)
  $CCC -> $2DB (backward jump)
  $CD6 -> $17C (backward jump)
  $CD8 -> $28F (backward jump)
  $CE0 -> $1B1 (backward jump)
  $CE2 -> $BCC (backward jump)
  $D16 -> $8A8 (backward jump)
  $D2A -> $8BB (backward jump)
  $D2C -> $905 (backward jump)
  $D2E -> $64A (backward jump)
  $D3A -> $ADF (backward jump)
  $D42 -> $24A (backward jump)
  $D50 -> $5F8 (backward jump)
  $D62 -> $3A3 (backward jump)
  $D64 -> $788 (backward jump)
  $D66 -> $AFA (backward jump)
  $D7A -> $60C (backward jump)
  $D96 -> $346 (backward jump)
  $DC6 -> $6AB (backward jump)
  $DCA -> $912 (backward jump)
  $DCC -> $C91 (backward jump)
  $DD2 -> $23C (backward jump)
  $DEE -> $183 (backward jump)
  $DF4 -> $239 (backward jump)
  $DFA -> $58D (backward jump)
  $E10 -> $408 (backward jump)
  $E16 -> $306 (backward jump)
  $E20 -> $698 (backward jump)
  $E34 -> $5D3 (backward jump)
  $E44 -> $A6A (backward jump)
  $E50 -> $079 (backward jump)
  $E54 -> $676 (backward jump)
  $EA4 -> $031 (backward jump)
  $EAA -> $572 (backward jump)
  $EB6 -> $E97 (backward jump)
  $EC2 -> $466 (backward jump)
  $EC4 -> $823 (backward jump)
  $EE6 -> $7A1 (backward jump)
  $EF8 -> $BC3 (backward jump)
  $F38 -> $A98 (backward jump)
  $F4E -> $AC9 (backward jump)
  $F5A -> $F24 (backward jump)
  $F6C -> $537 (backward jump)
  $F80 -> $6F1 (backward jump)
  $F96 -> $8B2 (backward jump)
  $FA8 -> $4EB (backward jump)
  $FAC -> $AE1 (backward jump)
  $FB2 -> $E86 (backward jump)
  $FDA -> $A50 (backward jump)
  $FE0 -> $120 (backward jump)
  $FF6 -> $CED (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $A7BD   LD       I, $7BD         ; Load 7BD into I
$202    $91D6   UNKNOWN  $91D6           ; Unknown 9xxx instruction
$204    $8564   ADD      V5, V6          ; V5 += V6, VF = carry
$206    $FB7F   UNKNOWN  FB7F            ; Unknown Fxxx instruction
$208    $77F7   ADD      V7, #F7         ; Add 247 to V7
$20A    $2231   CALL     $231            ; Call subroutine at 231
$20C    $E5A2   UNKNOWN  $E5A2           ; Unknown Exxx instruction
$20E    $71A2   ADD      V1, #A2         ; Add 162 to V1
$210    $0B73   SYS      $B73            ; System call to B73
$212    $A070   LD       I, $070         ; Load 070 into I
$214    $9445   UNKNOWN  $9445           ; Unknown 9xxx instruction
$216    $9DB8   UNKNOWN  $9DB8           ; Unknown 9xxx instruction
$218    $4EE1   SNE      VE, #E1         ; Skip if VE != 225
$21A    $6648   LD       V6, #48         ; Load 72 into V6
$21C    $1EC9   JP       $EC9            ; Jump to EC9
$21E    $07BA   SYS      $7BA            ; System call to 7BA
$220    $0398   SYS      $398            ; System call to 398
$222    $3845   SE       V8, #45         ; Skip if V8 == 69
$224    $0B08   SYS      $B08            ; System call to B08
$226    $F133   LD       B, V1           ; Store BCD of V1 at I, I+1, I+2
$228    $2150   CALL     $150            ; Call subroutine at 150
$22A    $A9BE   LD       I, $9BE         ; Load 9BE into I
$22C    $C562   RND      V5, #62         ; V5 = random & 62
$22E    $6D07   LD       VD, #07         ; Load 7 into VD
$230    $F8B4   UNKNOWN  F8B4            ; Unknown Fxxx instruction
$232    $603F   LD       V0, #3F         ; Load 63 into V0
$234    $89AE   SHL      V9              ; V9 <<= 1, VF = MSB
$236    $8CC7   SUBN     VC, VC          ; VC = VC - VC, VF = !borrow
$238    $F0C5   UNKNOWN  F0C5            ; Unknown Fxxx instruction
$23A    $0606   SYS      $606            ; System call to 606
$23C    $9739   UNKNOWN  $9739           ; Unknown 9xxx instruction
$23E    $4805   SNE      V8, #05         ; Skip if V8 != 5
$240    $5290   SE       V2, V9          ; Skip if V2 == V9
$242    $BF1D   JP       V0, $F1D        ; Jump to V0 + F1D
$244    $27B5   CALL     $7B5            ; Call subroutine at 7B5
$246    $9055   UNKNOWN  $9055           ; Unknown 9xxx instruction
$248    $A474   LD       I, $474         ; Load 474 into I
$24A    $0DDB   SYS      $DDB            ; System call to DDB
$24C    $B97A   JP       V0, $97A        ; Jump to V0 + 97A
$24E    $3ABE   SE       VA, #BE         ; Skip if VA == 190
$250    $9856   UNKNOWN  $9856           ; Unknown 9xxx instruction
$252    $DDA9   DRW      VD, VA, #9      ; Draw 9-byte sprite at VD, VA
$254    $33E9   SE       V3, #E9         ; Skip if V3 == 233
$256    $0326   SYS      $326            ; System call to 326
$258    $4396   SNE      V3, #96         ; Skip if V3 != 150
$25A    $3F2C   SE       VF, #2C         ; Skip if VF == 44
$25C    $F762   UNKNOWN  F762            ; Unknown Fxxx instruction
$25E    $6CF4   LD       VC, #F4         ; Load 244 into VC
$260    $11DC   JP       $1DC            ; Jump to 1DC
$262    $8DE5   SUB      VD, VE          ; VD -= VE, VF = !borrow
$264    $755F   ADD      V5, #5F         ; Add 95 to V5
$266    $9AB2   UNKNOWN  $9AB2           ; Unknown 9xxx instruction
$268    $917C   UNKNOWN  $917C           ; Unknown 9xxx instruction
$26A    $E454   UNKNOWN  $E454           ; Unknown Exxx instruction
$26C    $A128   LD       I, $128         ; Load 128 into I
$26E    $CE19   RND      VE, #19         ; VE = random & 19
$270    $65EB   LD       V5, #EB         ; Load 235 into V5
$272    $0812   SYS      $812            ; System call to 812
$274    $D609   DRW      V6, V0, #9      ; Draw 9-byte sprite at V6, V0
$276    $29AC   CALL     $9AC            ; Call subroutine at 9AC
$278    $27C5   CALL     $7C5            ; Call subroutine at 7C5
$27A    $1867   JP       $867            ; Jump to 867
$27C    $4A16   SNE      VA, #16         ; Skip if VA != 22
$27E    $8351   OR       V3, V5          ; V3 |= V5
$280    $A92B   LD       I, $92B         ; Load 92B into I
$282    $CD62   RND      VD, #62         ; VD = random & 62
$284    $8BC0   LD       VB, VC          ; VB = VC
$286    $BDBB   JP       V0, $DBB        ; Jump to V0 + DBB
$288    $8EF5   SUB      VE, VF          ; VE -= VF, VF = !borrow
$28A    $85E1   OR       V5, VE          ; V5 |= VE
$28C    $9D9E   UNKNOWN  $9D9E           ; Unknown 9xxx instruction
$28E    $5D50   SE       VD, V5          ; Skip if VD == V5
$290    $4CF6   SNE      VC, #F6         ; Skip if VC != 246
$292    $2DC3   CALL     $DC3            ; Call subroutine at DC3
$294    $B9A4   JP       V0, $9A4        ; Jump to V0 + 9A4
$296    $D465   DRW      V4, V6, #5      ; Draw 5-byte sprite at V4, V6
$298    $D9BD   DRW      V9, VB, #D      ; Draw 13-byte sprite at V9, VB
$29A    $1FAB   JP       $FAB            ; Jump to FAB
$29C    $4FCE   SNE      VF, #CE         ; Skip if VF != 206
$29E    $C2C4   RND      V2, #C4         ; V2 = random & C4
$2A0    $67C1   LD       V7, #C1         ; Load 193 into V7
$2A2    $367F   SE       V6, #7F         ; Skip if V6 == 127
$2A4    $21A0   CALL     $1A0            ; Call subroutine at 1A0
$2A6    $54DE   UNKNOWN  $54DE           ; Unknown 5xxx instruction
$2A8    $7593   ADD      V5, #93         ; Add 147 to V5
$2AA    $7327   ADD      V3, #27         ; Add 39 to V3
$2AC    $02EB   SYS      $2EB            ; System call to 2EB
$2AE    $5502   UNKNOWN  $5502           ; Unknown 5xxx instruction
$2B0    $6B84   LD       VB, #84         ; Load 132 into VB
$2B2    $7097   ADD      V0, #97         ; Add 151 to V0
$2B4    $504C   UNKNOWN  $504C           ; Unknown 5xxx instruction
$2B6    $6D41   LD       VD, #41         ; Load 65 into VD
$2B8    $9210   SNE      V2, V1          ; Skip if V2 != V1
$2BA    $A3C0   LD       I, $3C0         ; Load 3C0 into I
$2BC    $2BE5   CALL     $BE5            ; Call subroutine at BE5
$2BE    $1E87   JP       $E87            ; Jump to E87
$2C0    $F6CE   UNKNOWN  F6CE            ; Unknown Fxxx instruction
$2C2    $9203   UNKNOWN  $9203           ; Unknown 9xxx instruction
$2C4    $2856   CALL     $856            ; Call subroutine at 856
$2C6    $A1D3   LD       I, $1D3         ; Load 1D3 into I
$2C8    $F70C   UNKNOWN  F70C            ; Unknown Fxxx instruction
$2CA    $3522   SE       V5, #22         ; Skip if V5 == 34
$2CC    $48AF   SNE      V8, #AF         ; Skip if V8 != 175
$2CE    $50F4   UNKNOWN  $50F4           ; Unknown 5xxx instruction
$2D0    $B574   JP       V0, $574        ; Jump to V0 + 574
$2D2    $F347   UNKNOWN  F347            ; Unknown Fxxx instruction
$2D4    $1508   JP       $508            ; Jump to 508
$2D6    $DAED   DRW      VA, VE, #D      ; Draw 13-byte sprite at VA, VE
$2D8    $EDED   UNKNOWN  $EDED           ; Unknown Exxx instruction
$2DA    $EDED   UNKNOWN  $EDED           ; Unknown Exxx instruction
$2DC    $EDED   UNKNOWN  $EDED           ; Unknown Exxx instruction
$2DE    $EDED   UNKNOWN  $EDED           ; Unknown Exxx instruction
$2E0    $EDED   UNKNOWN  $EDED           ; Unknown Exxx instruction
$2E2    $EDED   UNKNOWN  $EDED           ; Unknown Exxx instruction
$2E4    $EDED   UNKNOWN  $EDED           ; Unknown Exxx instruction
$2E6    $EDED   UNKNOWN  $EDED           ; Unknown Exxx instruction
$2E8    $EDED   UNKNOWN  $EDED           ; Unknown Exxx instruction
$2EA    $EDED   UNKNOWN  $EDED           ; Unknown Exxx instruction
$2EC    $EDED   UNKNOWN  $EDED           ; Unknown Exxx instruction
$2EE    $EDED   UNKNOWN  $EDED           ; Unknown Exxx instruction
$2F0    $EDED   UNKNOWN  $EDED           ; Unknown Exxx instruction
$2F2    $EDED   UNKNOWN  $EDED           ; Unknown Exxx instruction
$2F4    $EDED   UNKNOWN  $EDED           ; Unknown Exxx instruction
$2F6    $EDED   UNKNOWN  $EDED           ; Unknown Exxx instruction
$2F8    $EDED   UNKNOWN  $EDED           ; Unknown Exxx instruction
$2FA    $EDED   UNKNOWN  $EDED           ; Unknown Exxx instruction
$2FC    $EDED   UNKNOWN  $EDED           ; Unknown Exxx instruction
$2FE    $EDED   UNKNOWN  $EDED           ; Unknown Exxx instruction
$300    $EDED   UNKNOWN  $EDED           ; Unknown Exxx instruction
$302    $EDED   UNKNOWN  $EDED           ; Unknown Exxx instruction
$304    $EDED   UNKNOWN  $EDED           ; Unknown Exxx instruction
$306    $ED4F   UNKNOWN  $ED4F           ; Unknown Exxx instruction
$308    $5C02   UNKNOWN  $5C02           ; Unknown 5xxx instruction
$30A    $912C   UNKNOWN  $912C           ; Unknown 9xxx instruction
$30C    $E8D0   UNKNOWN  $E8D0           ; Unknown Exxx instruction
$30E    $B3CA   JP       V0, $3CA        ; Jump to V0 + 3CA
$310    $98D0   SNE      V8, VD          ; Skip if V8 != VD
$312    $C5DF   RND      V5, #DF         ; V5 = random & DF
$314    $CE98   RND      VE, #98         ; VE = random & 98
$316    $51F3   UNKNOWN  $51F3           ; Unknown 5xxx instruction
$318    $7AD8   ADD      VA, #D8         ; Add 216 to VA
$31A    $F8E3   UNKNOWN  F8E3            ; Unknown Fxxx instruction
$31C    $E5E9   UNKNOWN  $E5E9           ; Unknown Exxx instruction
$31E    $70A9   ADD      V0, #A9         ; Add 169 to V0
$320    $D37D   DRW      V3, V7, #D      ; Draw 13-byte sprite at V3, V7
$322    $E37D   UNKNOWN  $E37D           ; Unknown Exxx instruction
$324    $BEF1   JP       V0, $EF1        ; Jump to V0 + EF1
$326    $26D1   CALL     $6D1            ; Call subroutine at 6D1
$328    $F6F2   UNKNOWN  F6F2            ; Unknown Fxxx instruction
$32A    $FD16   UNKNOWN  FD16            ; Unknown Fxxx instruction
$32C    $A39F   LD       I, $39F         ; Load 39F into I
$32E    $2049   CALL     $049            ; Call subroutine at 049
$330    $2C56   CALL     $C56            ; Call subroutine at C56
$332    $1D2A   JP       $D2A            ; Jump to D2A
$334    $EBBF   UNKNOWN  $EBBF           ; Unknown Exxx instruction
$336    $8C18   UNKNOWN  8C18            ; Unknown 8xxx instruction
$338    $004F   SYS      $04F            ; System call to 04F
$33A    $22D8   CALL     $2D8            ; Call subroutine at 2D8
$33C    $D5E9   DRW      V5, VE, #9      ; Draw 9-byte sprite at V5, VE
$33E    $B959   JP       V0, $959        ; Jump to V0 + 959
$340    $1BEE   JP       $BEE            ; Jump to BEE
$342    $89BB   UNKNOWN  89BB            ; Unknown 8xxx instruction
$344    $A622   LD       I, $622         ; Load 622 into I
$346    $0AF8   SYS      $AF8            ; System call to AF8
$348    $EC3E   UNKNOWN  $EC3E           ; Unknown Exxx instruction
$34A    $8ADC   UNKNOWN  8ADC            ; Unknown 8xxx instruction
$34C    $99BE   UNKNOWN  $99BE           ; Unknown 9xxx instruction
$34E    $D8B1   DRW      V8, VB, #1      ; Draw 1-byte sprite at V8, VB
$350    $D6E9   DRW      V6, VE, #9      ; Draw 9-byte sprite at V6, VE
$352    $0D9D   SYS      $D9D            ; System call to D9D
$354    $4D61   SNE      VD, #61         ; Skip if VD != 97
$356    $15DA   JP       $5DA            ; Jump to 5DA
$358    $C11B   RND      V1, #1B         ; V1 = random & 1B
$35A    $DB13   DRW      VB, V1, #3      ; Draw 3-byte sprite at VB, V1
$35C    $377A   SE       V7, #7A         ; Skip if V7 == 122
$35E    $BCB4   JP       V0, $CB4        ; Jump to V0 + CB4
$360    $6BB9   LD       VB, #B9         ; Load 185 into VB
$362    $230A   CALL     $30A            ; Call subroutine at 30A
$364    $9ED7   UNKNOWN  $9ED7           ; Unknown 9xxx instruction
$366    $374F   SE       V7, #4F         ; Skip if V7 == 79
$368    $A7E2   LD       I, $7E2         ; Load 7E2 into I
$36A    $EA05   UNKNOWN  $EA05           ; Unknown Exxx instruction
$36C    $C4FF   RND      V4, #FF         ; V4 = random & FF
$36E    $2008   CALL     $008            ; Call subroutine at 008
$370    $6B18   LD       VB, #18         ; Load 24 into VB
$372    $832C   UNKNOWN  832C            ; Unknown 8xxx instruction
$374    $08CA   SYS      $8CA            ; System call to 8CA
$376    $4CF0   SNE      VC, #F0         ; Skip if VC != 240
$378    $8D35   SUB      VD, V3          ; VD -= V3, VF = !borrow
$37A    $D018   DRW      V0, V1, #8      ; Draw 8-byte sprite at V0, V1
$37C    $4FB6   SNE      VF, #B6         ; Skip if VF != 182
$37E    $A55C   LD       I, $55C         ; Load 55C into I
$380    $AAE2   LD       I, $AE2         ; Load AE2 into I
$382    $7CB8   ADD      VC, #B8         ; Add 184 to VC
$384    $C4FC   RND      V4, #FC         ; V4 = random & FC
$386    $F93E   UNKNOWN  F93E            ; Unknown Fxxx instruction
$388    $531C   UNKNOWN  $531C           ; Unknown 5xxx instruction
$38A    $8310   LD       V3, V1          ; V3 = V1
$38C    $9A4D   UNKNOWN  $9A4D           ; Unknown 9xxx instruction
$38E    $3B94   SE       VB, #94         ; Skip if VB == 148
$390    $9DD3   UNKNOWN  $9DD3           ; Unknown 9xxx instruction
$392    $44C4   SNE      V4, #C4         ; Skip if V4 != 196
$394    $098F   SYS      $98F            ; System call to 98F
$396    $0A17   SYS      $A17            ; System call to A17
$398    $D4E6   DRW      V4, VE, #6      ; Draw 6-byte sprite at V4, VE
$39A    $75ED   ADD      V5, #ED         ; Add 237 to V5
$39C    $8E34   ADD      VE, V3          ; VE += V3, VF = carry
$39E    $3704   SE       V7, #04         ; Skip if V7 == 4
$3A0    $8FB3   XOR      VF, VB          ; VF ^= VB
$3A2    $77BA   ADD      V7, #BA         ; Add 186 to V7
$3A4    $482A   SNE      V8, #2A         ; Skip if V8 != 42
$3A6    $B836   JP       V0, $836        ; Jump to V0 + 836
$3A8    $23C3   CALL     $3C3            ; Call subroutine at 3C3
$3AA    $B43F   JP       V0, $43F        ; Jump to V0 + 43F
$3AC    $26F3   CALL     $6F3            ; Call subroutine at 6F3
$3AE    $163C   JP       $63C            ; Jump to 63C
$3B0    $CF22   RND      VF, #22         ; VF = random & 22
$3B2    $9A60   SNE      VA, V6          ; Skip if VA != V6
$3B4    $618B   LD       V1, #8B         ; Load 139 into V1
$3B6    $0F84   SYS      $F84            ; System call to F84
$3B8    $3FF4   SE       VF, #F4         ; Skip if VF == 244
$3BA    $A068   LD       I, $068         ; Load 068 into I
$3BC    $2D28   CALL     $D28            ; Call subroutine at D28
$3BE    $444C   SNE      V4, #4C         ; Skip if V4 != 76
$3C0    $E27F   UNKNOWN  $E27F           ; Unknown Exxx instruction
$3C2    $9549   UNKNOWN  $9549           ; Unknown 9xxx instruction
$3C4    $0013   SYS      $013            ; System call to 013
$3C6    $1123   JP       $123            ; Jump to 123
$3C8    $4D0E   SNE      VD, #0E         ; Skip if VD != 14
$3CA    $FD1C   UNKNOWN  FD1C            ; Unknown Fxxx instruction
$3CC    $3FBB   SE       VF, #BB         ; Skip if VF == 187
$3CE    $2581   CALL     $581            ; Call subroutine at 581
$3D0    $CEC4   RND      VE, #C4         ; VE = random & C4
$3D2    $7605   ADD      V6, #05         ; Add 5 to V6
$3D4    $CCEB   RND      VC, #EB         ; VC = random & EB
$3D6    $3146   SE       V1, #46         ; Skip if V1 == 70
$3D8    $1FED   JP       $FED            ; Jump to FED
$3DA    $D230   DRW      V2, V3, #0      ; Draw 0-byte sprite at V2, V3
$3DC    $9464   UNKNOWN  $9464           ; Unknown 9xxx instruction
$3DE    $5667   UNKNOWN  $5667           ; Unknown 5xxx instruction
$3E0    $FB41   UNKNOWN  FB41            ; Unknown Fxxx instruction
$3E2    $1821   JP       $821            ; Jump to 821
$3E4    $514D   UNKNOWN  $514D           ; Unknown 5xxx instruction
$3E6    $8108   UNKNOWN  8108            ; Unknown 8xxx instruction
$3E8    $1D82   JP       $D82            ; Jump to D82
$3EA    $065B   SYS      $65B            ; System call to 65B
$3EC    $FFD9   UNKNOWN  FFD9            ; Unknown Fxxx instruction
$3EE    $9000   SNE      V0, V0          ; Skip if V0 != V0
$3F0    $F196   UNKNOWN  F196            ; Unknown Fxxx instruction
$3F2    $364F   SE       V6, #4F         ; Skip if V6 == 79
$3F4    $542B   UNKNOWN  $542B           ; Unknown 5xxx instruction
$3F6    $5A0A   UNKNOWN  $5A0A           ; Unknown 5xxx instruction
$3F8    $9EDA   UNKNOWN  $9EDA           ; Unknown 9xxx instruction
$3FA    $B841   JP       V0, $841        ; Jump to V0 + 841
$3FC    $1832   JP       $832            ; Jump to 832
$3FE    $94CA   UNKNOWN  $94CA           ; Unknown 9xxx instruction
$400    $6138   LD       V1, #38         ; Load 56 into V1
$402    $13ED   JP       $3ED            ; Jump to 3ED
$404    $41E0   SNE      V1, #E0         ; Skip if V1 != 224
$406    $841A   UNKNOWN  841A            ; Unknown 8xxx instruction
$408    $0FD8   SYS      $FD8            ; System call to FD8
$40A    $C78F   RND      V7, #8F         ; V7 = random & 8F
$40C    $FBDA   UNKNOWN  FBDA            ; Unknown Fxxx instruction
$40E    $B22A   JP       V0, $22A        ; Jump to V0 + 22A
$410    $CD85   RND      VD, #85         ; VD = random & 85
$412    $DBC3   DRW      VB, VC, #3      ; Draw 3-byte sprite at VB, VC
$414    $1237   JP       $237            ; Jump to 237
$416    $25CE   CALL     $5CE            ; Call subroutine at 5CE
$418    $146E   JP       $46E            ; Jump to 46E
$41A    $5C04   UNKNOWN  $5C04           ; Unknown 5xxx instruction
$41C    $6567   LD       V5, #67         ; Load 103 into V5
$41E    $3218   SE       V2, #18         ; Skip if V2 == 24
$420    $2FF0   CALL     $FF0            ; Call subroutine at FF0
$422    $F3A0   UNKNOWN  F3A0            ; Unknown Fxxx instruction
$424    $8C24   ADD      VC, V2          ; VC += V2, VF = carry
$426    $517D   UNKNOWN  $517D           ; Unknown 5xxx instruction
$428    $4DD6   SNE      VD, #D6         ; Skip if VD != 214
$42A    $3144   SE       V1, #44         ; Skip if V1 == 68
$42C    $8FC8   UNKNOWN  8FC8            ; Unknown 8xxx instruction
$42E    $16B2   JP       $6B2            ; Jump to 6B2
$430    $00E6   SYS      $0E6            ; System call to 0E6
$432    $DF7D   DRW      VF, V7, #D      ; Draw 13-byte sprite at VF, V7
$434    $3F55   SE       VF, #55         ; Skip if VF == 85
$436    $2A96   CALL     $A96            ; Call subroutine at A96
$438    $31AA   SE       V1, #AA         ; Skip if V1 == 170
$43A    $C4D6   RND      V4, #D6         ; V4 = random & D6
$43C    $8301   OR       V3, V0          ; V3 |= V0
$43E    $C06F   RND      V0, #6F         ; V0 = random & 6F
$440    $346A   SE       V4, #6A         ; Skip if V4 == 106
$442    $DF31   DRW      VF, V3, #1      ; Draw 1-byte sprite at VF, V3
$444    $FF05   UNKNOWN  FF05            ; Unknown Fxxx instruction
$446    $1014   JP       $014            ; Jump to 014
$448    $90ED   UNKNOWN  $90ED           ; Unknown 9xxx instruction
$44A    $6E75   LD       VE, #75         ; Load 117 into VE
$44C    $A5A3   LD       I, $5A3         ; Load 5A3 into I
$44E    $98BF   UNKNOWN  $98BF           ; Unknown 9xxx instruction
$450    $BB33   JP       V0, $B33        ; Jump to V0 + B33
$452    $5285   UNKNOWN  $5285           ; Unknown 5xxx instruction
$454    $DC07   DRW      VC, V0, #7      ; Draw 7-byte sprite at VC, V0
$456    $AD31   LD       I, $D31         ; Load D31 into I
$458    $EED3   UNKNOWN  $EED3           ; Unknown Exxx instruction
$45A    $9A22   UNKNOWN  $9A22           ; Unknown 9xxx instruction
$45C    $8E1B   UNKNOWN  8E1B            ; Unknown 8xxx instruction
$45E    $D86C   DRW      V8, V6, #C      ; Draw 12-byte sprite at V8, V6
$460    $1706   JP       $706            ; Jump to 706
$462    $08BF   SYS      $8BF            ; System call to 8BF
$464    $BBFF   JP       V0, $BFF        ; Jump to V0 + BFF
$466    $2AD1   CALL     $AD1            ; Call subroutine at AD1
$468    $D564   DRW      V5, V6, #4      ; Draw 4-byte sprite at V5, V6
$46A    $0847   SYS      $847            ; System call to 847
$46C    $2CFB   CALL     $CFB            ; Call subroutine at CFB
$46E    $6725   LD       V7, #25         ; Load 37 into V7
$470    $E1AF   UNKNOWN  $E1AF           ; Unknown Exxx instruction
$472    $2446   CALL     $446            ; Call subroutine at 446
$474    $6FFE   LD       VF, #FE         ; Load 254 into VF
$476    $1D8A   JP       $D8A            ; Jump to D8A
$478    $0151   SYS      $151            ; System call to 151
$47A    $C0FD   RND      V0, #FD         ; V0 = random & FD
$47C    $208A   CALL     $08A            ; Call subroutine at 08A
$47E    $B5E8   JP       V0, $5E8        ; Jump to V0 + 5E8
$480    $A268   LD       I, $268         ; Load 268 into I
$482    $02D3   SYS      $2D3            ; System call to 2D3
$484    $FB61   UNKNOWN  FB61            ; Unknown Fxxx instruction
$486    $9CF7   UNKNOWN  $9CF7           ; Unknown 9xxx instruction
$488    $2E45   CALL     $E45            ; Call subroutine at E45
$48A    $755C   ADD      V5, #5C         ; Add 92 to V5
$48C    $EC04   UNKNOWN  $EC04           ; Unknown Exxx instruction
$48E    $5497   UNKNOWN  $5497           ; Unknown 5xxx instruction
$490    $E9ED   UNKNOWN  $E9ED           ; Unknown Exxx instruction
$492    $641F   LD       V4, #1F         ; Load 31 into V4
$494    $30FA   SE       V0, #FA         ; Skip if V0 == 250
$496    $4968   SNE      V9, #68         ; Skip if V9 != 104
$498    $EAEE   UNKNOWN  $EAEE           ; Unknown Exxx instruction
$49A    $C5AF   RND      V5, #AF         ; V5 = random & AF
$49C    $9B7A   UNKNOWN  $9B7A           ; Unknown 9xxx instruction
$49E    $6CB3   LD       VC, #B3         ; Load 179 into VC
$4A0    $387B   SE       V8, #7B         ; Skip if V8 == 123
$4A2    $52F1   UNKNOWN  $52F1           ; Unknown 5xxx instruction
$4A4    $C654   RND      V6, #54         ; V6 = random & 54
$4A6    $6FF7   LD       VF, #F7         ; Load 247 into VF
$4A8    $EB64   UNKNOWN  $EB64           ; Unknown Exxx instruction
$4AA    $F678   UNKNOWN  F678            ; Unknown Fxxx instruction
$4AC    $AC03   LD       I, $C03         ; Load C03 into I
$4AE    $4B8B   SNE      VB, #8B         ; Skip if VB != 139
$4B0    $6978   LD       V9, #78         ; Load 120 into V9
$4B2    $533F   UNKNOWN  $533F           ; Unknown 5xxx instruction
$4B4    $5666   UNKNOWN  $5666           ; Unknown 5xxx instruction
$4B6    $07B0   SYS      $7B0            ; System call to 7B0
$4B8    $3C79   SE       VC, #79         ; Skip if VC == 121
$4BA    $AA21   LD       I, $A21         ; Load A21 into I
$4BC    $24A7   CALL     $4A7            ; Call subroutine at 4A7
$4BE    $DEC5   DRW      VE, VC, #5      ; Draw 5-byte sprite at VE, VC
$4C0    $856A   UNKNOWN  856A            ; Unknown 8xxx instruction
$4C2    $C941   RND      V9, #41         ; V9 = random & 41
$4C4    $3F14   SE       VF, #14         ; Skip if VF == 20
$4C6    $8A49   UNKNOWN  8A49            ; Unknown 8xxx instruction
$4C8    $F3B9   UNKNOWN  F3B9            ; Unknown Fxxx instruction
$4CA    $56E0   SE       V6, VE          ; Skip if V6 == VE
$4CC    $8CD7   SUBN     VC, VD          ; VC = VD - VC, VF = !borrow
$4CE    $4BC8   SNE      VB, #C8         ; Skip if VB != 200
$4D0    $3790   SE       V7, #90         ; Skip if V7 == 144
$4D2    $DE73   DRW      VE, V7, #3      ; Draw 3-byte sprite at VE, V7
$4D4    $61FC   LD       V1, #FC         ; Load 252 into V1
$4D6    $4C2D   SNE      VC, #2D         ; Skip if VC != 45
$4D8    $1046   JP       $046            ; Jump to 046
$4DA    $3B03   SE       VB, #03         ; Skip if VB == 3
$4DC    $CB1E   RND      VB, #1E         ; VB = random & 1E
$4DE    $30B5   SE       V0, #B5         ; Skip if V0 == 181
$4E0    $C9CE   RND      V9, #CE         ; V9 = random & CE
$4E2    $73B1   ADD      V3, #B1         ; Add 177 to V3
$4E4    $F676   UNKNOWN  F676            ; Unknown Fxxx instruction
$4E6    $A1F8   LD       I, $1F8         ; Load 1F8 into I
$4E8    $DAA5   DRW      VA, VA, #5      ; Draw 5-byte sprite at VA, VA
$4EA    $082B   SYS      $82B            ; System call to 82B
$4EC    $C9D3   RND      V9, #D3         ; V9 = random & D3
$4EE    $681F   LD       V8, #1F         ; Load 31 into V8
$4F0    $DC3A   DRW      VC, V3, #A      ; Draw 10-byte sprite at VC, V3
$4F2    $5C3B   UNKNOWN  $5C3B           ; Unknown 5xxx instruction
$4F4    $533C   UNKNOWN  $533C           ; Unknown 5xxx instruction
$4F6    $048A   SYS      $48A            ; System call to 48A
$4F8    $AD26   LD       I, $D26         ; Load D26 into I
$4FA    $801D   UNKNOWN  801D            ; Unknown 8xxx instruction
$4FC    $9FAB   UNKNOWN  $9FAB           ; Unknown 9xxx instruction
$4FE    $5188   UNKNOWN  $5188           ; Unknown 5xxx instruction
$500    $728F   ADD      V2, #8F         ; Add 143 to V2
$502    $E424   UNKNOWN  $E424           ; Unknown Exxx instruction
$504    $6DCD   LD       VD, #CD         ; Load 205 into VD
$506    $E3D0   UNKNOWN  $E3D0           ; Unknown Exxx instruction
$508    $FBAB   UNKNOWN  FBAB            ; Unknown Fxxx instruction
$50A    $9AEA   UNKNOWN  $9AEA           ; Unknown 9xxx instruction
$50C    $A98C   LD       I, $98C         ; Load 98C into I
$50E    $F67A   UNKNOWN  F67A            ; Unknown Fxxx instruction
$510    $0381   SYS      $381            ; System call to 381
$512    $2E65   CALL     $E65            ; Call subroutine at E65
$514    $F21B   UNKNOWN  F21B            ; Unknown Fxxx instruction
$516    $F112   UNKNOWN  F112            ; Unknown Fxxx instruction
$518    $F266   UNKNOWN  F266            ; Unknown Fxxx instruction
$51A    $3405   SE       V4, #05         ; Skip if V4 == 5
$51C    $C669   RND      V6, #69         ; V6 = random & 69
$51E    $7F39   ADD      VF, #39         ; Add 57 to VF
$520    $4B98   SNE      VB, #98         ; Skip if VB != 152
$522    $2B16   CALL     $B16            ; Call subroutine at B16
$524    $4986   SNE      V9, #86         ; Skip if V9 != 134
$526    $1022   JP       $022            ; Jump to 022
$528    $6911   LD       V9, #11         ; Load 17 into V9
$52A    $634B   LD       V3, #4B         ; Load 75 into V3
$52C    $A5C7   LD       I, $5C7         ; Load 5C7 into I
$52E    $4C3D   SNE      VC, #3D         ; Skip if VC != 61
$530    $8819   UNKNOWN  8819            ; Unknown 8xxx instruction
$532    $D88A   DRW      V8, V8, #A      ; Draw 10-byte sprite at V8, V8
$534    $47B8   SNE      V7, #B8         ; Skip if V7 != 184
$536    $4E1C   SNE      VE, #1C         ; Skip if VE != 28
$538    $0C5C   SYS      $C5C            ; System call to C5C
$53A    $2A04   CALL     $A04            ; Call subroutine at A04
$53C    $B070   JP       V0, $070        ; Jump to V0 + 070
$53E    $DF74   DRW      VF, V7, #4      ; Draw 4-byte sprite at VF, V7
$540    $6BE0   LD       VB, #E0         ; Load 224 into VB
$542    $73FD   ADD      V3, #FD         ; Add 253 to V3
$544    $B06A   JP       V0, $06A        ; Jump to V0 + 06A
$546    $941F   UNKNOWN  $941F           ; Unknown 9xxx instruction
$548    $D6A0   DRW      V6, VA, #0      ; Draw 0-byte sprite at V6, VA
$54A    $6D20   LD       VD, #20         ; Load 32 into VD
$54C    $E113   UNKNOWN  $E113           ; Unknown Exxx instruction
$54E    $BF92   JP       V0, $F92        ; Jump to V0 + F92
$550    $93A0   SNE      V3, VA          ; Skip if V3 != VA
$552    $4111   SNE      V1, #11         ; Skip if V1 != 17
$554    $0164   SYS      $164            ; System call to 164
$556    $168A   JP       $68A            ; Jump to 68A
$558    $B878   JP       V0, $878        ; Jump to V0 + 878
$55A    $A62A   LD       I, $62A         ; Load 62A into I
$55C    $F029   LD       F, V0           ; I = sprite address for digit V0
$55E    $B510   JP       V0, $510        ; Jump to V0 + 510
$560    $3FCD   SE       VF, #CD         ; Skip if VF == 205
$562    $65B2   LD       V5, #B2         ; Load 178 into V5
$564    $0C62   SYS      $C62            ; System call to C62
$566    $70A5   ADD      V0, #A5         ; Add 165 to V0
$568    $ECBE   UNKNOWN  $ECBE           ; Unknown Exxx instruction
$56A    $D92E   DRW      V9, V2, #E      ; Draw 14-byte sprite at V9, V2
$56C    $539E   UNKNOWN  $539E           ; Unknown 5xxx instruction
$56E    $2E30   CALL     $E30            ; Call subroutine at E30
$570    $E8EF   UNKNOWN  $E8EF           ; Unknown Exxx instruction
$572    $37FA   SE       V7, #FA         ; Skip if V7 == 250
$574    $0385   SYS      $385            ; System call to 385
$576    $DB59   DRW      VB, V5, #9      ; Draw 9-byte sprite at VB, V5
$578    $913D   UNKNOWN  $913D           ; Unknown 9xxx instruction
$57A    $B48A   JP       V0, $48A        ; Jump to V0 + 48A
$57C    $BF38   JP       V0, $F38        ; Jump to V0 + F38
$57E    $E0ED   UNKNOWN  $E0ED           ; Unknown Exxx instruction
$580    $3E13   SE       VE, #13         ; Skip if VE == 19
$582    $944C   UNKNOWN  $944C           ; Unknown 9xxx instruction
$584    $7489   ADD      V4, #89         ; Add 137 to V4
$586    $FC96   UNKNOWN  FC96            ; Unknown Fxxx instruction
$588    $D2D1   DRW      V2, VD, #1      ; Draw 1-byte sprite at V2, VD
$58A    $97BB   UNKNOWN  $97BB           ; Unknown 9xxx instruction
$58C    $689D   LD       V8, #9D         ; Load 157 into V8
$58E    $E799   UNKNOWN  $E799           ; Unknown Exxx instruction
$590    $333D   SE       V3, #3D         ; Skip if V3 == 61
$592    $59C0   SE       V9, VC          ; Skip if V9 == VC
$594    $4F04   SNE      VF, #04         ; Skip if VF != 4
$596    $388E   SE       V8, #8E         ; Skip if V8 == 142
$598    $C5D6   RND      V5, #D6         ; V5 = random & D6
$59A    $D852   DRW      V8, V5, #2      ; Draw 2-byte sprite at V8, V5
$59C    $7972   ADD      V9, #72         ; Add 114 to V9
$59E    $244F   CALL     $44F            ; Call subroutine at 44F
$5A0    $CBBA   RND      VB, #BA         ; VB = random & BA
$5A2    $6C87   LD       VC, #87         ; Load 135 into VC
$5A4    $7415   ADD      V4, #15         ; Add 21 to V4
$5A6    $A283   LD       I, $283         ; Load 283 into I
$5A8    $10F9   JP       $0F9            ; Jump to 0F9
$5AA    $29C4   CALL     $9C4            ; Call subroutine at 9C4
$5AC    $DEEC   DRW      VE, VE, #C      ; Draw 12-byte sprite at VE, VE
$5AE    $F7E6   UNKNOWN  F7E6            ; Unknown Fxxx instruction
$5B0    $6587   LD       V5, #87         ; Load 135 into V5
$5B2    $AC5A   LD       I, $C5A         ; Load C5A into I
$5B4    $EAF9   UNKNOWN  $EAF9           ; Unknown Exxx instruction
$5B6    $9076   UNKNOWN  $9076           ; Unknown 9xxx instruction
$5B8    $21FA   CALL     $1FA            ; Call subroutine at 1FA
$5BA    $150D   JP       $50D            ; Jump to 50D
$5BC    $9AD9   UNKNOWN  $9AD9           ; Unknown 9xxx instruction
$5BE    $3BDC   SE       VB, #DC         ; Skip if VB == 220
$5C0    $2ADA   CALL     $ADA            ; Call subroutine at ADA
$5C2    $B718   JP       V0, $718        ; Jump to V0 + 718
$5C4    $F4A2   UNKNOWN  F4A2            ; Unknown Fxxx instruction
$5C6    $7104   ADD      V1, #04         ; Add 4 to V1
$5C8    $F95F   UNKNOWN  F95F            ; Unknown Fxxx instruction
$5CA    $4C65   SNE      VC, #65         ; Skip if VC != 101
$5CC    $4289   SNE      V2, #89         ; Skip if V2 != 137
$5CE    $7DD1   ADD      VD, #D1         ; Add 209 to VD
$5D0    $F48F   UNKNOWN  F48F            ; Unknown Fxxx instruction
$5D2    $FE6D   UNKNOWN  FE6D            ; Unknown Fxxx instruction
$5D4    $22A8   CALL     $2A8            ; Call subroutine at 2A8
$5D6    $BDD0   JP       V0, $DD0        ; Jump to V0 + DD0
$5D8    $79CC   ADD      V9, #CC         ; Add 204 to V9
$5DA    $1295   JP       $295            ; Jump to 295
$5DC    $AB32   LD       I, $B32         ; Load B32 into I
$5DE    $C3C5   RND      V3, #C5         ; V3 = random & C5
$5E0    $9993   UNKNOWN  $9993           ; Unknown 9xxx instruction
$5E2    $66E3   LD       V6, #E3         ; Load 227 into V6
$5E4    $1EB0   JP       $EB0            ; Jump to EB0
$5E6    $1A6D   JP       $A6D            ; Jump to A6D
$5E8    $F8C1   UNKNOWN  F8C1            ; Unknown Fxxx instruction
$5EA    $82DF   UNKNOWN  82DF            ; Unknown 8xxx instruction
$5EC    $7CA4   ADD      VC, #A4         ; Add 164 to VC
$5EE    $4CBD   SNE      VC, #BD         ; Skip if VC != 189
$5F0    $86C1   OR       V6, VC          ; V6 |= VC
$5F2    $78A8   ADD      V8, #A8         ; Add 168 to V8
$5F4    $E9E8   UNKNOWN  $E9E8           ; Unknown Exxx instruction
$5F6    $EEF0   UNKNOWN  $EEF0           ; Unknown Exxx instruction
$5F8    $A78F   LD       I, $78F         ; Load 78F into I
$5FA    $1B9A   JP       $B9A            ; Jump to B9A
$5FC    $11CD   JP       $1CD            ; Jump to 1CD
$5FE    $7DC3   ADD      VD, #C3         ; Add 195 to VD
$600    $FB78   UNKNOWN  FB78            ; Unknown Fxxx instruction
$602    $82EE   SHL      V2              ; V2 <<= 1, VF = MSB
$604    $EB0D   UNKNOWN  $EB0D           ; Unknown Exxx instruction
$606    $677A   LD       V7, #7A         ; Load 122 into V7
$608    $E801   UNKNOWN  $E801           ; Unknown Exxx instruction
$60A    $3A34   SE       VA, #34         ; Skip if VA == 52
$60C    $BABF   JP       V0, $ABF        ; Jump to V0 + ABF
$60E    $F8C9   UNKNOWN  F8C9            ; Unknown Fxxx instruction
$610    $ADC2   LD       I, $DC2         ; Load DC2 into I
$612    $0B1C   SYS      $B1C            ; System call to B1C
$614    $CE6A   RND      VE, #6A         ; VE = random & 6A
$616    $0E58   SYS      $E58            ; System call to E58
$618    $04B9   SYS      $4B9            ; System call to 4B9
$61A    $EA4E   UNKNOWN  $EA4E           ; Unknown Exxx instruction
$61C    $941C   UNKNOWN  $941C           ; Unknown 9xxx instruction
$61E    $A7EA   LD       I, $7EA         ; Load 7EA into I
$620    $92B3   UNKNOWN  $92B3           ; Unknown 9xxx instruction
$622    $EC1F   UNKNOWN  $EC1F           ; Unknown Exxx instruction
$624    $F144   UNKNOWN  F144            ; Unknown Fxxx instruction
$626    $53EE   UNKNOWN  $53EE           ; Unknown 5xxx instruction
$628    $4F44   SNE      VF, #44         ; Skip if VF != 68
$62A    $4774   SNE      V7, #74         ; Skip if V7 != 116
$62C    $2BC0   CALL     $BC0            ; Call subroutine at BC0
$62E    $E267   UNKNOWN  $E267           ; Unknown Exxx instruction
$630    $A5A0   LD       I, $5A0         ; Load 5A0 into I
$632    $5FD1   UNKNOWN  $5FD1           ; Unknown 5xxx instruction
$634    $80A4   ADD      V0, VA          ; V0 += VA, VF = carry
$636    $642B   LD       V4, #2B         ; Load 43 into V4
$638    $30CE   SE       V0, #CE         ; Skip if V0 == 206
$63A    $2335   CALL     $335            ; Call subroutine at 335
$63C    $C795   RND      V7, #95         ; V7 = random & 95
$63E    $2FEF   CALL     $FEF            ; Call subroutine at FEF
$640    $D488   DRW      V4, V8, #8      ; Draw 8-byte sprite at V4, V8
$642    $EECD   UNKNOWN  $EECD           ; Unknown Exxx instruction
$644    $BDDF   JP       V0, $DDF        ; Jump to V0 + DDF
$646    $BC50   JP       V0, $C50        ; Jump to V0 + C50
$648    $AFB9   LD       I, $FB9         ; Load FB9 into I
$64A    $6C67   LD       VC, #67         ; Load 103 into VC
$64C    $4772   SNE      V7, #72         ; Skip if V7 != 114
$64E    $9F3F   UNKNOWN  $9F3F           ; Unknown 9xxx instruction
$650    $35B5   SE       V5, #B5         ; Skip if V5 == 181
$652    $6A25   LD       VA, #25         ; Load 37 into VA
$654    $2EDA   CALL     $EDA            ; Call subroutine at EDA
$656    $2B72   CALL     $B72            ; Call subroutine at B72
$658    $1597   JP       $597            ; Jump to 597
$65A    $25AC   CALL     $5AC            ; Call subroutine at 5AC
$65C    $8436   SHR      V4              ; V4 >>= 1, VF = LSB
$65E    $5F3A   UNKNOWN  $5F3A           ; Unknown 5xxx instruction
$660    $BF4D   JP       V0, $F4D        ; Jump to V0 + F4D
$662    $EDEC   UNKNOWN  $EDEC           ; Unknown Exxx instruction
$664    $B3AA   JP       V0, $3AA        ; Jump to V0 + 3AA
$666    $8161   OR       V1, V6          ; V1 |= V6
$668    $EFEC   UNKNOWN  $EFEC           ; Unknown Exxx instruction
$66A    $433B   SNE      V3, #3B         ; Skip if V3 != 59
$66C    $3393   SE       V3, #93         ; Skip if V3 == 147
$66E    $1BD5   JP       $BD5            ; Jump to BD5
$670    $B179   JP       V0, $179        ; Jump to V0 + 179
$672    $7264   ADD      V2, #64         ; Add 100 to V2
$674    $10D0   JP       $0D0            ; Jump to 0D0
$676    $4C6C   SNE      VC, #6C         ; Skip if VC != 108
$678    $BE0F   JP       V0, $E0F        ; Jump to V0 + E0F
$67A    $65EB   LD       V5, #EB         ; Load 235 into V5
$67C    $1330   JP       $330            ; Jump to 330
$67E    $46F4   SNE      V6, #F4         ; Skip if V6 != 244
$680    $7F81   ADD      VF, #81         ; Add 129 to VF
$682    $7D76   ADD      VD, #76         ; Add 118 to VD
$684    $DC71   DRW      VC, V7, #1      ; Draw 1-byte sprite at VC, V7
$686    $F431   UNKNOWN  F431            ; Unknown Fxxx instruction
$688    $0D80   SYS      $D80            ; System call to D80
$68A    $761E   ADD      V6, #1E         ; Add 30 to V6
$68C    $A937   LD       I, $937         ; Load 937 into I
$68E    $553D   UNKNOWN  $553D           ; Unknown 5xxx instruction
$690    $447B   SNE      V4, #7B         ; Skip if V4 != 123
$692    $508E   UNKNOWN  $508E           ; Unknown 5xxx instruction
$694    $B90B   JP       V0, $90B        ; Jump to V0 + 90B
$696    $EC3C   UNKNOWN  $EC3C           ; Unknown Exxx instruction
$698    $180C   JP       $80C            ; Jump to 80C
$69A    $A2F2   LD       I, $2F2         ; Load 2F2 into I
$69C    $8803   XOR      V8, V0          ; V8 ^= V0
$69E    $C736   RND      V7, #36         ; V7 = random & 36
$6A0    $60B0   LD       V0, #B0         ; Load 176 into V0
$6A2    $FB98   UNKNOWN  FB98            ; Unknown Fxxx instruction
$6A4    $4555   SNE      V5, #55         ; Skip if V5 != 85
$6A6    $2D65   CALL     $D65            ; Call subroutine at D65
$6A8    $D154   DRW      V1, V5, #4      ; Draw 4-byte sprite at V1, V5
$6AA    $07F9   SYS      $7F9            ; System call to 7F9
$6AC    $5559   UNKNOWN  $5559           ; Unknown 5xxx instruction
$6AE    $7C7B   ADD      VC, #7B         ; Add 123 to VC
$6B0    $C82E   RND      V8, #2E         ; V8 = random & 2E
$6B2    $F1C9   UNKNOWN  F1C9            ; Unknown Fxxx instruction
$6B4    $8259   UNKNOWN  8259            ; Unknown 8xxx instruction
$6B6    $AE5A   LD       I, $E5A         ; Load E5A into I
$6B8    $88A9   UNKNOWN  88A9            ; Unknown 8xxx instruction
$6BA    $0127   SYS      $127            ; System call to 127
$6BC    $612C   LD       V1, #2C         ; Load 44 into V1
$6BE    $D3E4   DRW      V3, VE, #4      ; Draw 4-byte sprite at V3, VE
$6C0    $090B   SYS      $90B            ; System call to 90B
$6C2    $9830   SNE      V8, V3          ; Skip if V8 != V3
$6C4    $2A7C   CALL     $A7C            ; Call subroutine at A7C
$6C6    $DCFD   DRW      VC, VF, #D      ; Draw 13-byte sprite at VC, VF
$6C8    $D6AA   DRW      V6, VA, #A      ; Draw 10-byte sprite at V6, VA
$6CA    $8090   LD       V0, V9          ; V0 = V9
$6CC    $3F18   SE       VF, #18         ; Skip if VF == 24
$6CE    $7772   ADD      V7, #72         ; Add 114 to V7
$6D0    $7B68   ADD      VB, #68         ; Add 104 to VB
$6D2    $9A08   UNKNOWN  $9A08           ; Unknown 9xxx instruction
$6D4    $2795   CALL     $795            ; Call subroutine at 795
$6D6    $9A58   UNKNOWN  $9A58           ; Unknown 9xxx instruction
$6D8    $8978   UNKNOWN  8978            ; Unknown 8xxx instruction
$6DA    $9355   UNKNOWN  $9355           ; Unknown 9xxx instruction
$6DC    $6239   LD       V2, #39         ; Load 57 into V2
$6DE    $D48A   DRW      V4, V8, #A      ; Draw 10-byte sprite at V4, V8
$6E0    $601A   LD       V0, #1A         ; Load 26 into V0
$6E2    $41D3   SNE      V1, #D3         ; Skip if V1 != 211
$6E4    $D699   DRW      V6, V9, #9      ; Draw 9-byte sprite at V6, V9
$6E6    $1B5D   JP       $B5D            ; Jump to B5D
$6E8    $4F96   SNE      VF, #96         ; Skip if VF != 150
$6EA    $795F   ADD      V9, #5F         ; Add 95 to V9
$6EC    $B0FE   JP       V0, $0FE        ; Jump to V0 + 0FE
$6EE    $A960   LD       I, $960         ; Load 960 into I
$6F0    $1CB3   JP       $CB3            ; Jump to CB3
$6F2    $69E4   LD       V9, #E4         ; Load 228 into V9
$6F4    $E973   UNKNOWN  $E973           ; Unknown Exxx instruction
$6F6    $72FB   ADD      V2, #FB         ; Add 251 to V2
$6F8    $EE3D   UNKNOWN  $EE3D           ; Unknown Exxx instruction
$6FA    $F436   UNKNOWN  F436            ; Unknown Fxxx instruction
$6FC    $EF1F   UNKNOWN  $EF1F           ; Unknown Exxx instruction
$6FE    $169F   JP       $69F            ; Jump to 69F
$700    $6A10   LD       VA, #10         ; Load 16 into VA
$702    $7FE6   ADD      VF, #E6         ; Add 230 to VF
$704    $09DA   SYS      $9DA            ; System call to 9DA
$706    $6A17   LD       VA, #17         ; Load 23 into VA
$708    $C7AD   RND      V7, #AD         ; V7 = random & AD
$70A    $38CA   SE       V8, #CA         ; Skip if V8 == 202
$70C    $A2A7   LD       I, $2A7         ; Load 2A7 into I
$70E    $B2E6   JP       V0, $2E6        ; Jump to V0 + 2E6
$710    $BD25   JP       V0, $D25        ; Jump to V0 + D25
$712    $3BD6   SE       VB, #D6         ; Skip if VB == 214
$714    $2D9D   CALL     $D9D            ; Call subroutine at D9D
$716    $FA4D   UNKNOWN  FA4D            ; Unknown Fxxx instruction
$718    $6536   LD       V5, #36         ; Load 54 into V5
$71A    $C54A   RND      V5, #4A         ; V5 = random & 4A
$71C    $4EAD   SNE      VE, #AD         ; Skip if VE != 173
$71E    $43C5   SNE      V3, #C5         ; Skip if V3 != 197
$720    $9BE1   UNKNOWN  $9BE1           ; Unknown 9xxx instruction
$722    $901F   UNKNOWN  $901F           ; Unknown 9xxx instruction
$724    $627C   LD       V2, #7C         ; Load 124 into V2
$726    $2D72   CALL     $D72            ; Call subroutine at D72
$728    $CF08   RND      VF, #08         ; VF = random & 08
$72A    $62F4   LD       V2, #F4         ; Load 244 into V2
$72C    $49FA   SNE      V9, #FA         ; Skip if V9 != 250
$72E    $CFE1   RND      VF, #E1         ; VF = random & E1
$730    $C2FE   RND      V2, #FE         ; V2 = random & FE
$732    $6104   LD       V1, #04         ; Load 4 into V1
$734    $850F   UNKNOWN  850F            ; Unknown 8xxx instruction
$736    $C059   RND      V0, #59         ; V0 = random & 59
$738    $D612   DRW      V6, V1, #2      ; Draw 2-byte sprite at V6, V1
$73A    $76F4   ADD      V6, #F4         ; Add 244 to V6
$73C    $A4C2   LD       I, $4C2         ; Load 4C2 into I
$73E    $F337   UNKNOWN  F337            ; Unknown Fxxx instruction
$740    $D5CB   DRW      V5, VC, #B      ; Draw 11-byte sprite at V5, VC
$742    $5479   UNKNOWN  $5479           ; Unknown 5xxx instruction
$744    $CF4C   RND      VF, #4C         ; VF = random & 4C
$746    $DB16   DRW      VB, V1, #6      ; Draw 6-byte sprite at VB, V1
$748    $F143   UNKNOWN  F143            ; Unknown Fxxx instruction
$74A    $9F33   UNKNOWN  $9F33           ; Unknown 9xxx instruction
$74C    $FA96   UNKNOWN  FA96            ; Unknown Fxxx instruction
$74E    $1C1B   JP       $C1B            ; Jump to C1B
$750    $EDDE   UNKNOWN  $EDDE           ; Unknown Exxx instruction
$752    $3233   SE       V2, #33         ; Skip if V2 == 51
$754    $5B9B   UNKNOWN  $5B9B           ; Unknown 5xxx instruction
$756    $AF87   LD       I, $F87         ; Load F87 into I
$758    $1AB9   JP       $AB9            ; Jump to AB9
$75A    $71A6   ADD      V1, #A6         ; Add 166 to V1
$75C    $EA92   UNKNOWN  $EA92           ; Unknown Exxx instruction
$75E    $1C5D   JP       $C5D            ; Jump to C5D
$760    $06CB   SYS      $6CB            ; System call to 6CB
$762    $B4B8   JP       V0, $4B8        ; Jump to V0 + 4B8
$764    $1DE8   JP       $DE8            ; Jump to DE8
$766    $C3AC   RND      V3, #AC         ; V3 = random & AC
$768    $3E69   SE       VE, #69         ; Skip if VE == 105
$76A    $1DFE   JP       $DFE            ; Jump to DFE
$76C    $30BE   SE       V0, #BE         ; Skip if V0 == 190
$76E    $7EFC   ADD      VE, #FC         ; Add 252 to VE
$770    $0AB1   SYS      $AB1            ; System call to AB1
$772    $A5B5   LD       I, $5B5         ; Load 5B5 into I
$774    $9DA0   SNE      VD, VA          ; Skip if VD != VA
$776    $D163   DRW      V1, V6, #3      ; Draw 3-byte sprite at V1, V6
$778    $9F68   UNKNOWN  $9F68           ; Unknown 9xxx instruction
$77A    $7055   ADD      V0, #55         ; Add 85 to V0
$77C    $E91D   UNKNOWN  $E91D           ; Unknown Exxx instruction
$77E    $1516   JP       $516            ; Jump to 516
$780    $BF34   JP       V0, $F34        ; Jump to V0 + F34
$782    $6D29   LD       VD, #29         ; Load 41 into VD
$784    $C4F2   RND      V4, #F2         ; V4 = random & F2
$786    $D560   DRW      V5, V6, #0      ; Draw 0-byte sprite at V5, V6
$788    $E5C6   UNKNOWN  $E5C6           ; Unknown Exxx instruction
$78A    $D4A5   DRW      V4, VA, #5      ; Draw 5-byte sprite at V4, VA
$78C    $C298   RND      V2, #98         ; V2 = random & 98
$78E    $0E37   SYS      $E37            ; System call to E37
$790    $B517   JP       V0, $517        ; Jump to V0 + 517
$792    $A9B9   LD       I, $9B9         ; Load 9B9 into I
$794    $A150   LD       I, $150         ; Load 150 into I
$796    $C67C   RND      V6, #7C         ; V6 = random & 7C
$798    $93CF   UNKNOWN  $93CF           ; Unknown 9xxx instruction
$79A    $9570   SNE      V5, V7          ; Skip if V5 != V7
$79C    $0D83   SYS      $D83            ; System call to D83
$79E    $6EE5   LD       VE, #E5         ; Load 229 into VE
$7A0    $CC46   RND      VC, #46         ; VC = random & 46
$7A2    $4270   SNE      V2, #70         ; Skip if V2 != 112
$7A4    $6BBA   LD       VB, #BA         ; Load 186 into VB
$7A6    $72CA   ADD      V2, #CA         ; Add 202 to V2
$7A8    $799A   ADD      V9, #9A         ; Add 154 to V9
$7AA    $543C   UNKNOWN  $543C           ; Unknown 5xxx instruction
$7AC    $4655   SNE      V6, #55         ; Skip if V6 != 85
$7AE    $27E9   CALL     $7E9            ; Call subroutine at 7E9
$7B0    $010E   SYS      $10E            ; System call to 10E
$7B2    $407E   SNE      V0, #7E         ; Skip if V0 != 126
$7B4    $5ABE   UNKNOWN  $5ABE           ; Unknown 5xxx instruction
$7B6    $E24D   UNKNOWN  $E24D           ; Unknown Exxx instruction
$7B8    $B86E   JP       V0, $86E        ; Jump to V0 + 86E
$7BA    $BAFF   JP       V0, $AFF        ; Jump to V0 + AFF
$7BC    $78C0   ADD      V8, #C0         ; Add 192 to V8
$7BE    $BA94   JP       V0, $A94        ; Jump to V0 + A94
$7C0    $D681   DRW      V6, V8, #1      ; Draw 1-byte sprite at V6, V8
$7C2    $2DF2   CALL     $DF2            ; Call subroutine at DF2
$7C4    $E45E   UNKNOWN  $E45E           ; Unknown Exxx instruction
$7C6    $C6BB   RND      V6, #BB         ; V6 = random & BB
$7C8    $097A   SYS      $97A            ; System call to 97A
$7CA    $2B09   CALL     $B09            ; Call subroutine at B09
$7CC    $6BEC   LD       VB, #EC         ; Load 236 into VB
$7CE    $163D   JP       $63D            ; Jump to 63D
$7D0    $6EBD   LD       VE, #BD         ; Load 189 into VE
$7D2    $591D   UNKNOWN  $591D           ; Unknown 5xxx instruction
$7D4    $4A7E   SNE      VA, #7E         ; Skip if VA != 126
$7D6    $CADB   RND      VA, #DB         ; VA = random & DB
$7D8    $44F1   SNE      V4, #F1         ; Skip if V4 != 241
$7DA    $C1EF   RND      V1, #EF         ; V1 = random & EF
$7DC    $1A96   JP       $A96            ; Jump to A96
$7DE    $84E7   SUBN     V4, VE          ; V4 = VE - V4, VF = !borrow
$7E0    $2310   CALL     $310            ; Call subroutine at 310
$7E2    $F293   UNKNOWN  F293            ; Unknown Fxxx instruction
$7E4    $4985   SNE      V9, #85         ; Skip if V9 != 133
$7E6    $D074   DRW      V0, V7, #4      ; Draw 4-byte sprite at V0, V7
$7E8    $EF70   UNKNOWN  $EF70           ; Unknown Exxx instruction
$7EA    $F4DF   UNKNOWN  F4DF            ; Unknown Fxxx instruction
$7EC    $4882   SNE      V8, #82         ; Skip if V8 != 130
$7EE    $EC12   UNKNOWN  $EC12           ; Unknown Exxx instruction
$7F0    $0AC2   SYS      $AC2            ; System call to AC2
$7F2    $86BD   UNKNOWN  86BD            ; Unknown 8xxx instruction
$7F4    $83B8   UNKNOWN  83B8            ; Unknown 8xxx instruction
$7F6    $FC61   UNKNOWN  FC61            ; Unknown Fxxx instruction
$7F8    $EBA0   UNKNOWN  $EBA0           ; Unknown Exxx instruction
$7FA    $87BB   UNKNOWN  87BB            ; Unknown 8xxx instruction
$7FC    $C1EC   RND      V1, #EC         ; V1 = random & EC
$7FE    $BD98   JP       V0, $D98        ; Jump to V0 + D98
$800    $2654   CALL     $654            ; Call subroutine at 654
$802    $1C8E   JP       $C8E            ; Jump to C8E
$804    $5FE7   UNKNOWN  $5FE7           ; Unknown 5xxx instruction
$806    $7E72   ADD      VE, #72         ; Add 114 to VE
$808    $79F0   ADD      V9, #F0         ; Add 240 to V9
$80A    $F47B   UNKNOWN  F47B            ; Unknown Fxxx instruction
$80C    $17E1   JP       $7E1            ; Jump to 7E1
$80E    $51CD   UNKNOWN  $51CD           ; Unknown 5xxx instruction
$810    $8197   SUBN     V1, V9          ; V1 = V9 - V1, VF = !borrow
$812    $59E6   UNKNOWN  $59E6           ; Unknown 5xxx instruction
$814    $0008   SYS      $008            ; System call to 008
$816    $0829   SYS      $829            ; System call to 829
$818    $0CC2   SYS      $CC2            ; System call to CC2
$81A    $07F6   SYS      $7F6            ; System call to 7F6
$81C    $9A7A   UNKNOWN  $9A7A           ; Unknown 9xxx instruction
$81E    $3B65   SE       VB, #65         ; Skip if VB == 101
$820    $FDD1   UNKNOWN  FDD1            ; Unknown Fxxx instruction
$822    $32C4   SE       V2, #C4         ; Skip if V2 == 196
$824    $2E9C   CALL     $E9C            ; Call subroutine at E9C
$826    $BB0A   JP       V0, $B0A        ; Jump to V0 + B0A
$828    $D165   DRW      V1, V6, #5      ; Draw 5-byte sprite at V1, V6
$82A    $BEA7   JP       V0, $EA7        ; Jump to V0 + EA7
$82C    $FDCA   UNKNOWN  FDCA            ; Unknown Fxxx instruction
$82E    $E1D4   UNKNOWN  $E1D4           ; Unknown Exxx instruction
$830    $EEDB   UNKNOWN  $EEDB           ; Unknown Exxx instruction
$832    $C7B1   RND      V7, #B1         ; V7 = random & B1
$834    $E03E   UNKNOWN  $E03E           ; Unknown Exxx instruction
$836    $E03B   UNKNOWN  $E03B           ; Unknown Exxx instruction
$838    $A4B0   LD       I, $4B0         ; Load 4B0 into I
$83A    $334D   SE       V3, #4D         ; Skip if V3 == 77
$83C    $8A72   AND      VA, V7          ; VA &= V7
$83E    $A7A7   LD       I, $7A7         ; Load 7A7 into I
$840    $3E12   SE       VE, #12         ; Skip if VE == 18
$842    $3985   SE       V9, #85         ; Skip if V9 == 133
$844    $0A86   SYS      $A86            ; System call to A86
$846    $086A   SYS      $86A            ; System call to 86A
$848    $2FC1   CALL     $FC1            ; Call subroutine at FC1
$84A    $0D81   SYS      $D81            ; System call to D81
$84C    $805E   SHL      V0              ; V0 <<= 1, VF = MSB
$84E    $3851   SE       V8, #51         ; Skip if V8 == 81
$850    $10FE   JP       $0FE            ; Jump to 0FE
$852    $0776   SYS      $776            ; System call to 776
$854    $21E0   CALL     $1E0            ; Call subroutine at 1E0
$856    $DF83   DRW      VF, V8, #3      ; Draw 3-byte sprite at VF, V8
$858    $9058   UNKNOWN  $9058           ; Unknown 9xxx instruction
$85A    $0429   SYS      $429            ; System call to 429
$85C    $AA4E   LD       I, $A4E         ; Load A4E into I
$85E    $91D8   UNKNOWN  $91D8           ; Unknown 9xxx instruction
$860    $912C   UNKNOWN  $912C           ; Unknown 9xxx instruction
$862    $07B7   SYS      $7B7            ; System call to 7B7
$864    $D135   DRW      V1, V3, #5      ; Draw 5-byte sprite at V1, V3
$866    $FF84   UNKNOWN  FF84            ; Unknown Fxxx instruction
$868    $0C9D   SYS      $C9D            ; System call to C9D
$86A    $0152   SYS      $152            ; System call to 152
$86C    $575A   UNKNOWN  $575A           ; Unknown 5xxx instruction
$86E    $A43F   LD       I, $43F         ; Load 43F into I
$870    $A5E9   LD       I, $5E9         ; Load 5E9 into I
$872    $DA64   DRW      VA, V6, #4      ; Draw 4-byte sprite at VA, V6
$874    $7F4E   ADD      VF, #4E         ; Add 78 to VF
$876    $4B7C   SNE      VB, #7C         ; Skip if VB != 124
$878    $B07B   JP       V0, $07B        ; Jump to V0 + 07B
$87A    $1A6E   JP       $A6E            ; Jump to A6E
$87C    $5AF9   UNKNOWN  $5AF9           ; Unknown 5xxx instruction
$87E    $BE47   JP       V0, $E47        ; Jump to V0 + E47
$880    $2D99   CALL     $D99            ; Call subroutine at D99
$882    $B980   JP       V0, $980        ; Jump to V0 + 980
$884    $A788   LD       I, $788         ; Load 788 into I
$886    $C235   RND      V2, #35         ; V2 = random & 35
$888    $1F20   JP       $F20            ; Jump to F20
$88A    $296C   CALL     $96C            ; Call subroutine at 96C
$88C    $B161   JP       V0, $161        ; Jump to V0 + 161
$88E    $F8E1   UNKNOWN  F8E1            ; Unknown Fxxx instruction
$890    $9578   UNKNOWN  $9578           ; Unknown 9xxx instruction
$892    $F22A   UNKNOWN  F22A            ; Unknown Fxxx instruction
$894    $BE6F   JP       V0, $E6F        ; Jump to V0 + E6F
$896    $4F5B   SNE      VF, #5B         ; Skip if VF != 91
$898    $0C4F   SYS      $C4F            ; System call to C4F
$89A    $6820   LD       V8, #20         ; Load 32 into V8
$89C    $D99F   DRW      V9, V9, #F      ; Draw 15-byte sprite at V9, V9
$89E    $5C79   UNKNOWN  $5C79           ; Unknown 5xxx instruction
$8A0    $1BC0   JP       $BC0            ; Jump to BC0
$8A2    $F25B   UNKNOWN  F25B            ; Unknown Fxxx instruction
$8A4    $C9BC   RND      V9, #BC         ; V9 = random & BC
$8A6    $3B71   SE       VB, #71         ; Skip if VB == 113
$8A8    $7C9E   ADD      VC, #9E         ; Add 158 to VC
$8AA    $2A81   CALL     $A81            ; Call subroutine at A81
$8AC    $33C5   SE       V3, #C5         ; Skip if V3 == 197
$8AE    $E230   UNKNOWN  $E230           ; Unknown Exxx instruction
$8B0    $153A   JP       $53A            ; Jump to 53A
$8B2    $5AB0   SE       VA, VB          ; Skip if VA == VB
$8B4    $DAFC   DRW      VA, VF, #C      ; Draw 12-byte sprite at VA, VF
$8B6    $1C6E   JP       $C6E            ; Jump to C6E
$8B8    $CE73   RND      VE, #73         ; VE = random & 73
$8BA    $5C89   UNKNOWN  $5C89           ; Unknown 5xxx instruction
$8BC    $A3DA   LD       I, $3DA         ; Load 3DA into I
$8BE    $DDBE   DRW      VD, VB, #E      ; Draw 14-byte sprite at VD, VB
$8C0    $072E   SYS      $72E            ; System call to 72E
$8C2    $587D   UNKNOWN  $587D           ; Unknown 5xxx instruction
$8C4    $04B1   SYS      $4B1            ; System call to 4B1
$8C6    $3EC8   SE       VE, #C8         ; Skip if VE == 200
$8C8    $460B   SNE      V6, #0B         ; Skip if V6 != 11
$8CA    $45F2   SNE      V5, #F2         ; Skip if V5 != 242
$8CC    $BC0F   JP       V0, $C0F        ; Jump to V0 + C0F
$8CE    $B74A   JP       V0, $74A        ; Jump to V0 + 74A
$8D0    $A076   LD       I, $076         ; Load 076 into I
$8D2    $292A   CALL     $92A            ; Call subroutine at 92A
$8D4    $A79E   LD       I, $79E         ; Load 79E into I
$8D6    $D898   DRW      V8, V9, #8      ; Draw 8-byte sprite at V8, V9
$8D8    $EBBF   UNKNOWN  $EBBF           ; Unknown Exxx instruction
$8DA    $6A40   LD       VA, #40         ; Load 64 into VA
$8DC    $FD1C   UNKNOWN  FD1C            ; Unknown Fxxx instruction
$8DE    $AAB9   LD       I, $AB9         ; Load AB9 into I
$8E0    $41B0   SNE      V1, #B0         ; Skip if V1 != 176
$8E2    $FB24   UNKNOWN  FB24            ; Unknown Fxxx instruction
$8E4    $4B79   SNE      VB, #79         ; Skip if VB != 121
$8E6    $01C7   SYS      $1C7            ; System call to 1C7
$8E8    $E7B7   UNKNOWN  $E7B7           ; Unknown Exxx instruction
$8EA    $AB5C   LD       I, $B5C         ; Load B5C into I
$8EC    $2F3D   CALL     $F3D            ; Call subroutine at F3D
$8EE    $CF92   RND      VF, #92         ; VF = random & 92
$8F0    $56ED   UNKNOWN  $56ED           ; Unknown 5xxx instruction
$8F2    $1764   JP       $764            ; Jump to 764
$8F4    $169C   JP       $69C            ; Jump to 69C
$8F6    $2D7A   CALL     $D7A            ; Call subroutine at D7A
$8F8    $2656   CALL     $656            ; Call subroutine at 656
$8FA    $FA21   UNKNOWN  FA21            ; Unknown Fxxx instruction
$8FC    $A3E5   LD       I, $3E5         ; Load 3E5 into I
$8FE    $7D89   ADD      VD, #89         ; Add 137 to VD
$900    $64C0   LD       V4, #C0         ; Load 192 into V4
$902    $2DD6   CALL     $DD6            ; Call subroutine at DD6
$904    $8040   LD       V0, V4          ; V0 = V4
$906    $4E4F   SNE      VE, #4F         ; Skip if VE != 79
$908    $1F26   JP       $F26            ; Jump to F26
$90A    $E6B2   UNKNOWN  $E6B2           ; Unknown Exxx instruction
$90C    $12DC   JP       $2DC            ; Jump to 2DC
$90E    $AE46   LD       I, $E46         ; Load E46 into I
$910    $0999   SYS      $999            ; System call to 999
$912    $A455   LD       I, $455         ; Load 455 into I
$914    $AF01   LD       I, $F01         ; Load F01 into I
$916    $97C8   UNKNOWN  $97C8           ; Unknown 9xxx instruction
$918    $93C5   UNKNOWN  $93C5           ; Unknown 9xxx instruction
$91A    $B7DE   JP       V0, $7DE        ; Jump to V0 + 7DE
$91C    $F6DF   UNKNOWN  F6DF            ; Unknown Fxxx instruction
$91E    $5499   UNKNOWN  $5499           ; Unknown 5xxx instruction
$920    $969C   UNKNOWN  $969C           ; Unknown 9xxx instruction
$922    $FBBE   UNKNOWN  FBBE            ; Unknown Fxxx instruction
$924    $5134   UNKNOWN  $5134           ; Unknown 5xxx instruction
$926    $8462   AND      V4, V6          ; V4 &= V6
$928    $33FE   SE       V3, #FE         ; Skip if V3 == 254
$92A    $0223   SYS      $223            ; System call to 223
$92C    $FF4F   UNKNOWN  FF4F            ; Unknown Fxxx instruction
$92E    $B4C8   JP       V0, $4C8        ; Jump to V0 + 4C8
$930    $C7A1   RND      V7, #A1         ; V7 = random & A1
$932    $244C   CALL     $44C            ; Call subroutine at 44C
$934    $F202   UNKNOWN  F202            ; Unknown Fxxx instruction
$936    $8F67   SUBN     VF, V6          ; VF = V6 - VF, VF = !borrow
$938    $D088   DRW      V0, V8, #8      ; Draw 8-byte sprite at V0, V8
$93A    $833D   UNKNOWN  833D            ; Unknown 8xxx instruction
$93C    $0904   SYS      $904            ; System call to 904
$93E    $480E   SNE      V8, #0E         ; Skip if V8 != 14
$940    $088A   SYS      $88A            ; System call to 88A
$942    $7CCE   ADD      VC, #CE         ; Add 206 to VC
$944    $D0ED   DRW      V0, VE, #D      ; Draw 13-byte sprite at V0, VE
$946    $BF06   JP       V0, $F06        ; Jump to V0 + F06
$948    $483B   SNE      V8, #3B         ; Skip if V8 != 59
$94A    $A795   LD       I, $795         ; Load 795 into I
$94C    $9E3E   UNKNOWN  $9E3E           ; Unknown 9xxx instruction
$94E    $38D7   SE       V8, #D7         ; Skip if V8 == 215
$950    $DFC4   DRW      VF, VC, #4      ; Draw 4-byte sprite at VF, VC
$952    $4060   SNE      V0, #60         ; Skip if V0 != 96
$954    $853C   UNKNOWN  853C            ; Unknown 8xxx instruction
$956    $D405   DRW      V4, V0, #5      ; Draw 5-byte sprite at V4, V0
$958    $7758   ADD      V7, #58         ; Add 88 to V7
$95A    $30DE   SE       V0, #DE         ; Skip if V0 == 222
$95C    $8A45   SUB      VA, V4          ; VA -= V4, VF = !borrow
$95E    $A084   LD       I, $084         ; Load 084 into I
$960    $5D54   UNKNOWN  $5D54           ; Unknown 5xxx instruction
$962    $6793   LD       V7, #93         ; Load 147 into V7
$964    $16E8   JP       $6E8            ; Jump to 6E8
$966    $C8CF   RND      V8, #CF         ; V8 = random & CF
$968    $74C1   ADD      V4, #C1         ; Add 193 to V4
$96A    $FBDC   UNKNOWN  FBDC            ; Unknown Fxxx instruction
$96C    $8A94   ADD      VA, V9          ; VA += V9, VF = carry
$96E    $ABE3   LD       I, $BE3         ; Load BE3 into I
$970    $56E7   UNKNOWN  $56E7           ; Unknown 5xxx instruction
$972    $09BE   SYS      $9BE            ; System call to 9BE
$974    $BB31   JP       V0, $B31        ; Jump to V0 + B31
$976    $91A5   UNKNOWN  $91A5           ; Unknown 9xxx instruction
$978    $F3EA   UNKNOWN  F3EA            ; Unknown Fxxx instruction
$97A    $8B1D   UNKNOWN  8B1D            ; Unknown 8xxx instruction
$97C    $1150   JP       $150            ; Jump to 150
$97E    $AA72   LD       I, $A72         ; Load A72 into I
$980    $F67A   UNKNOWN  F67A            ; Unknown Fxxx instruction
$982    $297D   CALL     $97D            ; Call subroutine at 97D
$984    $7F29   ADD      VF, #29         ; Add 41 to VF
$986    $FCE3   UNKNOWN  FCE3            ; Unknown Fxxx instruction
$988    $B6D0   JP       V0, $6D0        ; Jump to V0 + 6D0
$98A    $4C5E   SNE      VC, #5E         ; Skip if VC != 94
$98C    $E3C1   UNKNOWN  $E3C1           ; Unknown Exxx instruction
$98E    $598E   UNKNOWN  $598E           ; Unknown 5xxx instruction
$990    $4239   SNE      V2, #39         ; Skip if V2 != 57
$992    $3859   SE       V8, #59         ; Skip if V8 == 89
$994    $42BA   SNE      V2, #BA         ; Skip if V2 != 186
$996    $FD01   UNKNOWN  FD01            ; Unknown Fxxx instruction
$998    $E15D   UNKNOWN  $E15D           ; Unknown Exxx instruction
$99A    $8BCC   UNKNOWN  8BCC            ; Unknown 8xxx instruction
$99C    $99D5   UNKNOWN  $99D5           ; Unknown 9xxx instruction
$99E    $1081   JP       $081            ; Jump to 081
$9A0    $04A6   SYS      $4A6            ; System call to 4A6
$9A2    $A97B   LD       I, $97B         ; Load 97B into I
$9A4    $ED0F   UNKNOWN  $ED0F           ; Unknown Exxx instruction
$9A6    $A8B7   LD       I, $8B7         ; Load 8B7 into I
$9A8    $307D   SE       V0, #7D         ; Skip if V0 == 125
$9AA    $D8B1   DRW      V8, VB, #1      ; Draw 1-byte sprite at V8, VB
$9AC    $CF34   RND      VF, #34         ; VF = random & 34
$9AE    $758A   ADD      V5, #8A         ; Add 138 to V5
$9B0    $D7FB   DRW      V7, VF, #B      ; Draw 11-byte sprite at V7, VF
$9B2    $0A15   SYS      $A15            ; System call to A15
$9B4    $DF34   DRW      VF, V3, #4      ; Draw 4-byte sprite at VF, V3
$9B6    $AC09   LD       I, $C09         ; Load C09 into I
$9B8    $BCAB   JP       V0, $CAB        ; Jump to V0 + CAB
$9BA    $0E30   SYS      $E30            ; System call to E30
$9BC    $B46F   JP       V0, $46F        ; Jump to V0 + 46F
$9BE    $59B2   UNKNOWN  $59B2           ; Unknown 5xxx instruction
$9C0    $2375   CALL     $375            ; Call subroutine at 375
$9C2    $77AF   ADD      V7, #AF         ; Add 175 to V7
$9C4    $B452   JP       V0, $452        ; Jump to V0 + 452
$9C6    $0F32   SYS      $F32            ; System call to F32
$9C8    $4FE0   SNE      VF, #E0         ; Skip if VF != 224
$9CA    $FF35   UNKNOWN  FF35            ; Unknown Fxxx instruction
$9CC    $9662   UNKNOWN  $9662           ; Unknown 9xxx instruction
$9CE    $332B   SE       V3, #2B         ; Skip if V3 == 43
$9D0    $61B8   LD       V1, #B8         ; Load 184 into V1
$9D2    $0223   SYS      $223            ; System call to 223
$9D4    $EF5F   UNKNOWN  $EF5F           ; Unknown Exxx instruction
$9D6    $1357   JP       $357            ; Jump to 357
$9D8    $BE2E   JP       V0, $E2E        ; Jump to V0 + E2E
$9DA    $5F68   UNKNOWN  $5F68           ; Unknown 5xxx instruction
$9DC    $F655   LD       [I], V6         ; Store V0-V6 at I
$9DE    $7CD9   ADD      VC, #D9         ; Add 217 to VC
$9E0    $FEFB   UNKNOWN  FEFB            ; Unknown Fxxx instruction
$9E2    $010D   SYS      $10D            ; System call to 10D
$9E4    $5AD0   SE       VA, VD          ; Skip if VA == VD
$9E6    $8290   LD       V2, V9          ; V2 = V9
$9E8    $ED45   UNKNOWN  $ED45           ; Unknown Exxx instruction
$9EA    $2180   CALL     $180            ; Call subroutine at 180
$9EC    $416B   SNE      V1, #6B         ; Skip if V1 != 107
$9EE    $3912   SE       V9, #12         ; Skip if V9 == 18
$9F0    $8F34   ADD      VF, V3          ; VF += V3, VF = carry
$9F2    $BFCE   JP       V0, $FCE        ; Jump to V0 + FCE
$9F4    $8590   LD       V5, V9          ; V5 = V9
$9F6    $B570   JP       V0, $570        ; Jump to V0 + 570
$9F8    $6A2B   LD       VA, #2B         ; Load 43 into VA
$9FA    $3BCF   SE       VB, #CF         ; Skip if VB == 207
$9FC    $D691   DRW      V6, V9, #1      ; Draw 1-byte sprite at V6, V9
$9FE    $2DE9   CALL     $DE9            ; Call subroutine at DE9
$A00    $2C1C   CALL     $C1C            ; Call subroutine at C1C
$A02    $90B2   UNKNOWN  $90B2           ; Unknown 9xxx instruction
$A04    $E898   UNKNOWN  $E898           ; Unknown Exxx instruction
$A06    $5F7D   UNKNOWN  $5F7D           ; Unknown 5xxx instruction
$A08    $9925   UNKNOWN  $9925           ; Unknown 9xxx instruction
$A0A    $AFBC   LD       I, $FBC         ; Load FBC into I
$A0C    $9CBB   UNKNOWN  $9CBB           ; Unknown 9xxx instruction
$A0E    $11A0   JP       $1A0            ; Jump to 1A0
$A10    $C541   RND      V5, #41         ; V5 = random & 41
$A12    $FF6F   UNKNOWN  FF6F            ; Unknown Fxxx instruction
$A14    $2D0B   CALL     $D0B            ; Call subroutine at D0B
$A16    $EB17   UNKNOWN  $EB17           ; Unknown Exxx instruction
$A18    $800E   SHL      V0              ; V0 <<= 1, VF = MSB
$A1A    $3B84   SE       VB, #84         ; Skip if VB == 132
$A1C    $D432   DRW      V4, V3, #2      ; Draw 2-byte sprite at V4, V3
$A1E    $F51E   ADD      I, V5           ; I += V5
$A20    $8D59   UNKNOWN  8D59            ; Unknown 8xxx instruction
$A22    $0826   SYS      $826            ; System call to 826
$A24    $D4C7   DRW      V4, VC, #7      ; Draw 7-byte sprite at V4, VC
$A26    $24DC   CALL     $4DC            ; Call subroutine at 4DC
$A28    $6DEE   LD       VD, #EE         ; Load 238 into VD
$A2A    $776E   ADD      V7, #6E         ; Add 110 to V7
$A2C    $2943   CALL     $943            ; Call subroutine at 943
$A2E    $0405   SYS      $405            ; System call to 405
$A30    $8E6C   UNKNOWN  8E6C            ; Unknown 8xxx instruction
$A32    $CA7F   RND      VA, #7F         ; VA = random & 7F
$A34    $CB12   RND      VB, #12         ; VB = random & 12
$A36    $A4F6   LD       I, $4F6         ; Load 4F6 into I
$A38    $EA7D   UNKNOWN  $EA7D           ; Unknown Exxx instruction
$A3A    $3095   SE       V0, #95         ; Skip if V0 == 149
$A3C    $5793   UNKNOWN  $5793           ; Unknown 5xxx instruction
$A3E    $CA6A   RND      VA, #6A         ; VA = random & 6A
$A40    $A784   LD       I, $784         ; Load 784 into I
$A42    $C275   RND      V2, #75         ; V2 = random & 75
$A44    $0627   SYS      $627            ; System call to 627
$A46    $2D13   CALL     $D13            ; Call subroutine at D13
$A48    $B46B   JP       V0, $46B        ; Jump to V0 + 46B
$A4A    $576C   UNKNOWN  $576C           ; Unknown 5xxx instruction
$A4C    $8B5E   SHL      VB              ; VB <<= 1, VF = MSB
$A4E    $9036   UNKNOWN  $9036           ; Unknown 9xxx instruction
$A50    $D5C6   DRW      V5, VC, #6      ; Draw 6-byte sprite at V5, VC
$A52    $A0E2   LD       I, $0E2         ; Load 0E2 into I
$A54    $252B   CALL     $52B            ; Call subroutine at 52B
$A56    $EB64   UNKNOWN  $EB64           ; Unknown Exxx instruction
$A58    $A589   LD       I, $589         ; Load 589 into I
$A5A    $6BCA   LD       VB, #CA         ; Load 202 into VB
$A5C    $024E   SYS      $24E            ; System call to 24E
$A5E    $F7BC   UNKNOWN  F7BC            ; Unknown Fxxx instruction
$A60    $F519   UNKNOWN  F519            ; Unknown Fxxx instruction
$A62    $5D14   UNKNOWN  $5D14           ; Unknown 5xxx instruction
$A64    $7011   ADD      V0, #11         ; Add 17 to V0
$A66    $713E   ADD      V1, #3E         ; Add 62 to V1
$A68    $696F   LD       V9, #6F         ; Load 111 into V9
$A6A    $3796   SE       V7, #96         ; Skip if V7 == 150
$A6C    $74D9   ADD      V4, #D9         ; Add 217 to V4
$A6E    $7DFE   ADD      VD, #FE         ; Add 254 to VD
$A70    $3652   SE       V6, #52         ; Skip if V6 == 82
$A72    $17EC   JP       $7EC            ; Jump to 7EC
$A74    $AE70   LD       I, $E70         ; Load E70 into I
$A76    $F860   UNKNOWN  F860            ; Unknown Fxxx instruction
$A78    $E80B   UNKNOWN  $E80B           ; Unknown Exxx instruction
$A7A    $0F76   SYS      $F76            ; System call to F76
$A7C    $4464   SNE      V4, #64         ; Skip if V4 != 100
$A7E    $E9AD   UNKNOWN  $E9AD           ; Unknown Exxx instruction
$A80    $F007   LD       V0, DT          ; V0 = delay timer
$A82    $FB3D   UNKNOWN  FB3D            ; Unknown Fxxx instruction
$A84    $2858   CALL     $858            ; Call subroutine at 858
$A86    $1724   JP       $724            ; Jump to 724
$A88    $AF03   LD       I, $F03         ; Load F03 into I
$A8A    $F52C   UNKNOWN  F52C            ; Unknown Fxxx instruction
$A8C    $535E   UNKNOWN  $535E           ; Unknown 5xxx instruction
$A8E    $1CD5   JP       $CD5            ; Jump to CD5
$A90    $75EB   ADD      V5, #EB         ; Add 235 to V5
$A92    $910A   UNKNOWN  $910A           ; Unknown 9xxx instruction
$A94    $D650   DRW      V6, V5, #0      ; Draw 0-byte sprite at V6, V5
$A96    $5389   UNKNOWN  $5389           ; Unknown 5xxx instruction
$A98    $C025   RND      V0, #25         ; V0 = random & 25
$A9A    $CF69   RND      VF, #69         ; VF = random & 69
$A9C    $0E45   SYS      $E45            ; System call to E45
$A9E    $98AB   UNKNOWN  $98AB           ; Unknown 9xxx instruction
$AA0    $66B4   LD       V6, #B4         ; Load 180 into V6
$AA2    $E852   UNKNOWN  $E852           ; Unknown Exxx instruction
$AA4    $34CD   SE       V4, #CD         ; Skip if V4 == 205
$AA6    $5AD0   SE       VA, VD          ; Skip if VA == VD
$AA8    $D6D2   DRW      V6, VD, #2      ; Draw 2-byte sprite at V6, VD
$AAA    $63DF   LD       V3, #DF         ; Load 223 into V3
$AAC    $8136   SHR      V1              ; V1 >>= 1, VF = LSB
$AAE    $A1E7   LD       I, $1E7         ; Load 1E7 into I
$AB0    $7633   ADD      V6, #33         ; Add 51 to V6
$AB2    $9025   UNKNOWN  $9025           ; Unknown 9xxx instruction
$AB4    $7A2E   ADD      VA, #2E         ; Add 46 to VA
$AB6    $04A9   SYS      $4A9            ; System call to 4A9
$AB8    $DB5C   DRW      VB, V5, #C      ; Draw 12-byte sprite at VB, V5
$ABA    $560C   UNKNOWN  $560C           ; Unknown 5xxx instruction
$ABC    $D92F   DRW      V9, V2, #F      ; Draw 15-byte sprite at V9, V2
$ABE    $DD6D   DRW      VD, V6, #D      ; Draw 13-byte sprite at VD, V6
$AC0    $43FE   SNE      V3, #FE         ; Skip if V3 != 254
$AC2    $00C2   SYS      $0C2            ; System call to 0C2
$AC4    $3141   SE       V1, #41         ; Skip if V1 == 65
$AC6    $E735   UNKNOWN  $E735           ; Unknown Exxx instruction
$AC8    $170E   JP       $70E            ; Jump to 70E
$ACA    $556E   UNKNOWN  $556E           ; Unknown 5xxx instruction
$ACC    $6B63   LD       VB, #63         ; Load 99 into VB
$ACE    $8D0E   SHL      VD              ; VD <<= 1, VF = MSB
$AD0    $958F   UNKNOWN  $958F           ; Unknown 9xxx instruction
$AD2    $492A   SNE      V9, #2A         ; Skip if V9 != 42
$AD4    $CCA7   RND      VC, #A7         ; VC = random & A7
$AD6    $AB2B   LD       I, $B2B         ; Load B2B into I
$AD8    $8B58   UNKNOWN  8B58            ; Unknown 8xxx instruction
$ADA    $EF42   UNKNOWN  $EF42           ; Unknown Exxx instruction
$ADC    $B91B   JP       V0, $91B        ; Jump to V0 + 91B
$ADE    $8A63   XOR      VA, V6          ; VA ^= V6
$AE0    $5ABE   UNKNOWN  $5ABE           ; Unknown 5xxx instruction
$AE2    $7469   ADD      V4, #69         ; Add 105 to V4
$AE4    $0D4D   SYS      $D4D            ; System call to D4D
$AE6    $F501   UNKNOWN  F501            ; Unknown Fxxx instruction
$AE8    $D4EC   DRW      V4, VE, #C      ; Draw 12-byte sprite at V4, VE
$AEA    $E34C   UNKNOWN  $E34C           ; Unknown Exxx instruction
$AEC    $D9F6   DRW      V9, VF, #6      ; Draw 6-byte sprite at V9, VF
$AEE    $3969   SE       V9, #69         ; Skip if V9 == 105
$AF0    $44CF   SNE      V4, #CF         ; Skip if V4 != 207
$AF2    $2452   CALL     $452            ; Call subroutine at 452
$AF4    $B26A   JP       V0, $26A        ; Jump to V0 + 26A
$AF6    $BF4C   JP       V0, $F4C        ; Jump to V0 + F4C
$AF8    $FC01   UNKNOWN  FC01            ; Unknown Fxxx instruction
$AFA    $CF15   RND      VF, #15         ; VF = random & 15
$AFC    $4346   SNE      V3, #46         ; Skip if V3 != 70
$AFE    $2B33   CALL     $B33            ; Call subroutine at B33
$B00    $D258   DRW      V2, V5, #8      ; Draw 8-byte sprite at V2, V5
$B02    $A8C3   LD       I, $8C3         ; Load 8C3 into I
$B04    $48FC   SNE      V8, #FC         ; Skip if V8 != 252
$B06    $4D2B   SNE      VD, #2B         ; Skip if VD != 43
$B08    $7B6B   ADD      VB, #6B         ; Add 107 to VB
$B0A    $A9B3   LD       I, $9B3         ; Load 9B3 into I
$B0C    $DF40   DRW      VF, V4, #0      ; Draw 0-byte sprite at VF, V4
$B0E    $B3F2   JP       V0, $3F2        ; Jump to V0 + 3F2
$B10    $178B   JP       $78B            ; Jump to 78B
$B12    $F1E1   UNKNOWN  F1E1            ; Unknown Fxxx instruction
$B14    $464F   SNE      V6, #4F         ; Skip if V6 != 79
$B16    $71FA   ADD      V1, #FA         ; Add 250 to V1
$B18    $595E   UNKNOWN  $595E           ; Unknown 5xxx instruction
$B1A    $F15D   UNKNOWN  F15D            ; Unknown Fxxx instruction
$B1C    $263F   CALL     $63F            ; Call subroutine at 63F
$B1E    $69C0   LD       V9, #C0         ; Load 192 into V9
$B20    $59AE   UNKNOWN  $59AE           ; Unknown 5xxx instruction
$B22    $27FA   CALL     $7FA            ; Call subroutine at 7FA
$B24    $6634   LD       V6, #34         ; Load 52 into V6
$B26    $EAAC   UNKNOWN  $EAAC           ; Unknown Exxx instruction
$B28    $E736   UNKNOWN  $E736           ; Unknown Exxx instruction
$B2A    $E6B8   UNKNOWN  $E6B8           ; Unknown Exxx instruction
$B2C    $B494   JP       V0, $494        ; Jump to V0 + 494
$B2E    $398E   SE       V9, #8E         ; Skip if V9 == 142
$B30    $372D   SE       V7, #2D         ; Skip if V7 == 45
$B32    $6A09   LD       VA, #09         ; Load 9 into VA
$B34    $C189   RND      V1, #89         ; V1 = random & 89
$B36    $8440   LD       V4, V4          ; V4 = V4
$B38    $3F7C   SE       VF, #7C         ; Skip if VF == 124
$B3A    $C87E   RND      V8, #7E         ; V8 = random & 7E
$B3C    $1091   JP       $091            ; Jump to 091
$B3E    $69C4   LD       V9, #C4         ; Load 196 into V9
$B40    $74FD   ADD      V4, #FD         ; Add 253 to V4
$B42    $DBA8   DRW      VB, VA, #8      ; Draw 8-byte sprite at VB, VA
$B44    $9523   UNKNOWN  $9523           ; Unknown 9xxx instruction
$B46    $0234   SYS      $234            ; System call to 234
$B48    $02F7   SYS      $2F7            ; System call to 2F7
$B4A    $15E1   JP       $5E1            ; Jump to 5E1
$B4C    $4256   SNE      V2, #56         ; Skip if V2 != 86
$B4E    $C02D   RND      V0, #2D         ; V0 = random & 2D
$B50    $E979   UNKNOWN  $E979           ; Unknown Exxx instruction
$B52    $AFF7   LD       I, $FF7         ; Load FF7 into I
$B54    $28E2   CALL     $8E2            ; Call subroutine at 8E2
$B56    $43A1   SNE      V3, #A1         ; Skip if V3 != 161
$B58    $1FFF   JP       $FFF            ; Jump to FFF
$B5A    $71DF   ADD      V1, #DF         ; Add 223 to V1
$B5C    $0710   SYS      $710            ; System call to 710
$B5E    $A9BA   LD       I, $9BA         ; Load 9BA into I
$B60    $57F1   UNKNOWN  $57F1           ; Unknown 5xxx instruction
$B62    $5939   UNKNOWN  $5939           ; Unknown 5xxx instruction
$B64    $ED2A   UNKNOWN  $ED2A           ; Unknown Exxx instruction
$B66    $EC89   UNKNOWN  $EC89           ; Unknown Exxx instruction
$B68    $F216   UNKNOWN  F216            ; Unknown Fxxx instruction
$B6A    $E809   UNKNOWN  $E809           ; Unknown Exxx instruction
$B6C    $57B2   UNKNOWN  $57B2           ; Unknown 5xxx instruction
$B6E    $F144   UNKNOWN  F144            ; Unknown Fxxx instruction
$B70    $6A20   LD       VA, #20         ; Load 32 into VA
$B72    $0F65   SYS      $F65            ; System call to F65
$B74    $D3CA   DRW      V3, VC, #A      ; Draw 10-byte sprite at V3, VC
$B76    $EB0A   UNKNOWN  $EB0A           ; Unknown Exxx instruction
$B78    $DEAC   DRW      VE, VA, #C      ; Draw 12-byte sprite at VE, VA
$B7A    $5290   SE       V2, V9          ; Skip if V2 == V9
$B7C    $265C   CALL     $65C            ; Call subroutine at 65C
$B7E    $33EE   SE       V3, #EE         ; Skip if V3 == 238
$B80    $0DB2   SYS      $DB2            ; System call to DB2
$B82    $B345   JP       V0, $345        ; Jump to V0 + 345
$B84    $DA11   DRW      VA, V1, #1      ; Draw 1-byte sprite at VA, V1
$B86    $BFCA   JP       V0, $FCA        ; Jump to V0 + FCA
$B88    $76C2   ADD      V6, #C2         ; Add 194 to V6
$B8A    $E646   UNKNOWN  $E646           ; Unknown Exxx instruction
$B8C    $5958   UNKNOWN  $5958           ; Unknown 5xxx instruction
$B8E    $8EEF   UNKNOWN  8EEF            ; Unknown 8xxx instruction
$B90    $94F1   UNKNOWN  $94F1           ; Unknown 9xxx instruction
$B92    $64E9   LD       V4, #E9         ; Load 233 into V4
$B94    $AFD1   LD       I, $FD1         ; Load FD1 into I
$B96    $E324   UNKNOWN  $E324           ; Unknown Exxx instruction
$B98    $C1B0   RND      V1, #B0         ; V1 = random & B0
$B9A    $0955   SYS      $955            ; System call to 955
$B9C    $89F7   SUBN     V9, VF          ; V9 = VF - V9, VF = !borrow
$B9E    $11C6   JP       $1C6            ; Jump to 1C6
$BA0    $65AD   LD       V5, #AD         ; Load 173 into V5
$BA2    $DFC7   DRW      VF, VC, #7      ; Draw 7-byte sprite at VF, VC
$BA4    $8F10   LD       VF, V1          ; VF = V1
$BA6    $4E6A   SNE      VE, #6A         ; Skip if VE != 106
$BA8    $8A58   UNKNOWN  8A58            ; Unknown 8xxx instruction
$BAA    $20C6   CALL     $0C6            ; Call subroutine at 0C6
$BAC    $F0A8   UNKNOWN  F0A8            ; Unknown Fxxx instruction
$BAE    $5D92   UNKNOWN  $5D92           ; Unknown 5xxx instruction
$BB0    $9EC3   UNKNOWN  $9EC3           ; Unknown 9xxx instruction
$BB2    $D0E5   DRW      V0, VE, #5      ; Draw 5-byte sprite at V0, VE
$BB4    $C6D0   RND      V6, #D0         ; V6 = random & D0
$BB6    $6A97   LD       VA, #97         ; Load 151 into VA
$BB8    $A0E2   LD       I, $0E2         ; Load 0E2 into I
$BBA    $3462   SE       V4, #62         ; Skip if V4 == 98
$BBC    $F143   UNKNOWN  F143            ; Unknown Fxxx instruction
$BBE    $02F5   SYS      $2F5            ; System call to 2F5
$BC0    $4395   SNE      V3, #95         ; Skip if V3 != 149
$BC2    $B7F8   JP       V0, $7F8        ; Jump to V0 + 7F8
$BC4    $0622   SYS      $622            ; System call to 622
$BC6    $4B02   SNE      VB, #02         ; Skip if VB != 2
$BC8    $A709   LD       I, $709         ; Load 709 into I
$BCA    $8584   ADD      V5, V8          ; V5 += V8, VF = carry
$BCC    $E3E0   UNKNOWN  $E3E0           ; Unknown Exxx instruction
$BCE    $336B   SE       V3, #6B         ; Skip if V3 == 107
$BD0    $1B4E   JP       $B4E            ; Jump to B4E
$BD2    $F9EA   UNKNOWN  F9EA            ; Unknown Fxxx instruction
$BD4    $3271   SE       V2, #71         ; Skip if V2 == 113
$BD6    $27BD   CALL     $7BD            ; Call subroutine at 7BD
$BD8    $FDFC   UNKNOWN  FDFC            ; Unknown Fxxx instruction
$BDA    $42D2   SNE      V2, #D2         ; Skip if V2 != 210
$BDC    $4C46   SNE      VC, #46         ; Skip if VC != 70
$BDE    $F903   UNKNOWN  F903            ; Unknown Fxxx instruction
$BE0    $FAC6   UNKNOWN  FAC6            ; Unknown Fxxx instruction
$BE2    $7175   ADD      V1, #75         ; Add 117 to V1
$BE4    $EC8B   UNKNOWN  $EC8B           ; Unknown Exxx instruction
$BE6    $DB26   DRW      VB, V2, #6      ; Draw 6-byte sprite at VB, V2
$BE8    $DA7F   DRW      VA, V7, #F      ; Draw 15-byte sprite at VA, V7
$BEA    $5F94   UNKNOWN  $5F94           ; Unknown 5xxx instruction
$BEC    $E435   UNKNOWN  $E435           ; Unknown Exxx instruction
$BEE    $824A   UNKNOWN  824A            ; Unknown 8xxx instruction
$BF0    $3878   SE       V8, #78         ; Skip if V8 == 120
$BF2    $69A7   LD       V9, #A7         ; Load 167 into V9
$BF4    $65E6   LD       V5, #E6         ; Load 230 into V5
$BF6    $6BD9   LD       VB, #D9         ; Load 217 into VB
$BF8    $DBA5   DRW      VB, VA, #5      ; Draw 5-byte sprite at VB, VA
$BFA    $74F8   ADD      V4, #F8         ; Add 248 to V4
$BFC    $06EA   SYS      $6EA            ; System call to 6EA
$BFE    $AB73   LD       I, $B73         ; Load B73 into I
$C00    $4D4F   SNE      VD, #4F         ; Skip if VD != 79
$C02    $1F21   JP       $F21            ; Jump to F21
$C04    $3560   SE       V5, #60         ; Skip if V5 == 96
$C06    $A892   LD       I, $892         ; Load 892 into I
$C08    $6A69   LD       VA, #69         ; Load 105 into VA
$C0A    $7227   ADD      V2, #27         ; Add 39 to V2
$C0C    $8B31   OR       VB, V3          ; VB |= V3
$C0E    $01F1   SYS      $1F1            ; System call to 1F1
$C10    $7B80   ADD      VB, #80         ; Add 128 to VB
$C12    $E9E0   UNKNOWN  $E9E0           ; Unknown Exxx instruction
$C14    $F11E   ADD      I, V1           ; I += V1
$C16    $E267   UNKNOWN  $E267           ; Unknown Exxx instruction
$C18    $B0AB   JP       V0, $0AB        ; Jump to V0 + 0AB
$C1A    $1EC6   JP       $EC6            ; Jump to EC6
$C1C    $2D56   CALL     $D56            ; Call subroutine at D56
$C1E    $4092   SNE      V0, #92         ; Skip if V0 != 146
$C20    $C052   RND      V0, #52         ; V0 = random & 52
$C22    $186A   JP       $86A            ; Jump to 86A
$C24    $55D0   SE       V5, VD          ; Skip if V5 == VD
$C26    $AA48   LD       I, $A48         ; Load A48 into I
$C28    $EF0E   UNKNOWN  $EF0E           ; Unknown Exxx instruction
$C2A    $226B   CALL     $26B            ; Call subroutine at 26B
$C2C    $E3E3   UNKNOWN  $E3E3           ; Unknown Exxx instruction
$C2E    $29A7   CALL     $9A7            ; Call subroutine at 9A7
$C30    $F98F   UNKNOWN  F98F            ; Unknown Fxxx instruction
$C32    $19E7   JP       $9E7            ; Jump to 9E7
$C34    $C300   RND      V3, #00         ; V3 = random & 00
$C36    $2BE9   CALL     $BE9            ; Call subroutine at BE9
$C38    $266B   CALL     $66B            ; Call subroutine at 66B
$C3A    $32CA   SE       V2, #CA         ; Skip if V2 == 202
$C3C    $44D5   SNE      V4, #D5         ; Skip if V4 != 213
$C3E    $D725   DRW      V7, V2, #5      ; Draw 5-byte sprite at V7, V2
$C40    $AC25   LD       I, $C25         ; Load C25 into I
$C42    $C1F0   RND      V1, #F0         ; V1 = random & F0
$C44    $6712   LD       V7, #12         ; Load 18 into V7
$C46    $8EC4   ADD      VE, VC          ; VE += VC, VF = carry
$C48    $42AF   SNE      V2, #AF         ; Skip if V2 != 175
$C4A    $B582   JP       V0, $582        ; Jump to V0 + 582
$C4C    $4A3D   SNE      VA, #3D         ; Skip if VA != 61
$C4E    $E576   UNKNOWN  $E576           ; Unknown Exxx instruction
$C50    $CC95   RND      VC, #95         ; VC = random & 95
$C52    $55E9   UNKNOWN  $55E9           ; Unknown 5xxx instruction
$C54    $B94A   JP       V0, $94A        ; Jump to V0 + 94A
$C56    $BC6E   JP       V0, $C6E        ; Jump to V0 + C6E
$C58    $2032   CALL     $032            ; Call subroutine at 032
$C5A    $6D43   LD       VD, #43         ; Load 67 into VD
$C5C    $EDA9   UNKNOWN  $EDA9           ; Unknown Exxx instruction
$C5E    $564B   UNKNOWN  $564B           ; Unknown 5xxx instruction
$C60    $9E76   UNKNOWN  $9E76           ; Unknown 9xxx instruction
$C62    $FA47   UNKNOWN  FA47            ; Unknown Fxxx instruction
$C64    $4337   SNE      V3, #37         ; Skip if V3 != 55
$C66    $36E9   SE       V6, #E9         ; Skip if V6 == 233
$C68    $CD6D   RND      VD, #6D         ; VD = random & 6D
$C6A    $391F   SE       V9, #1F         ; Skip if V9 == 31
$C6C    $8C19   UNKNOWN  8C19            ; Unknown 8xxx instruction
$C6E    $1F53   JP       $F53            ; Jump to F53
$C70    $D808   DRW      V8, V0, #8      ; Draw 8-byte sprite at V8, V0
$C72    $2A67   CALL     $A67            ; Call subroutine at A67
$C74    $4FCD   SNE      VF, #CD         ; Skip if VF != 205
$C76    $323D   SE       V2, #3D         ; Skip if V2 == 61
$C78    $5C88   UNKNOWN  $5C88           ; Unknown 5xxx instruction
$C7A    $5D81   UNKNOWN  $5D81           ; Unknown 5xxx instruction
$C7C    $98D0   SNE      V8, VD          ; Skip if V8 != VD
$C7E    $EC5D   UNKNOWN  $EC5D           ; Unknown Exxx instruction
$C80    $872A   UNKNOWN  872A            ; Unknown 8xxx instruction
$C82    $730F   ADD      V3, #0F         ; Add 15 to V3
$C84    $00F2   SYS      $0F2            ; System call to 0F2
$C86    $F43D   UNKNOWN  F43D            ; Unknown Fxxx instruction
$C88    $AC8C   LD       I, $C8C         ; Load C8C into I
$C8A    $2B6D   CALL     $B6D            ; Call subroutine at B6D
$C8C    $F34C   UNKNOWN  F34C            ; Unknown Fxxx instruction
$C8E    $E1CD   UNKNOWN  $E1CD           ; Unknown Exxx instruction
$C90    $94C2   UNKNOWN  $94C2           ; Unknown 9xxx instruction
$C92    $D799   DRW      V7, V9, #9      ; Draw 9-byte sprite at V7, V9
$C94    $D3D2   DRW      V3, VD, #2      ; Draw 2-byte sprite at V3, VD
$C96    $DFE0   DRW      VF, VE, #0      ; Draw 0-byte sprite at VF, VE
$C98    $D8B2   DRW      V8, VB, #2      ; Draw 2-byte sprite at V8, VB
$C9A    $24A9   CALL     $4A9            ; Call subroutine at 4A9
$C9C    $6577   LD       V5, #77         ; Load 119 into V5
$C9E    $EA3F   UNKNOWN  $EA3F           ; Unknown Exxx instruction
$CA0    $0B92   SYS      $B92            ; System call to B92
$CA2    $56F5   UNKNOWN  $56F5           ; Unknown 5xxx instruction
$CA4    $CD1D   RND      VD, #1D         ; VD = random & 1D
$CA6    $4200   SNE      V2, #00         ; Skip if V2 != 0
$CA8    $1F31   JP       $F31            ; Jump to F31
$CAA    $4F13   SNE      VF, #13         ; Skip if VF != 19
$CAC    $5AE4   UNKNOWN  $5AE4           ; Unknown 5xxx instruction
$CAE    $9CFE   UNKNOWN  $9CFE           ; Unknown 9xxx instruction
$CB0    $946F   UNKNOWN  $946F           ; Unknown 9xxx instruction
$CB2    $BCE6   JP       V0, $CE6        ; Jump to V0 + CE6
$CB4    $614A   LD       V1, #4A         ; Load 74 into V1
$CB6    $8876   SHR      V8              ; V8 >>= 1, VF = LSB
$CB8    $53CE   UNKNOWN  $53CE           ; Unknown 5xxx instruction
$CBA    $D359   DRW      V3, V5, #9      ; Draw 9-byte sprite at V3, V5
$CBC    $A00B   LD       I, $00B         ; Load 00B into I
$CBE    $6F05   LD       VF, #05         ; Load 5 into VF
$CC0    $3CF6   SE       VC, #F6         ; Skip if VC == 246
$CC2    $2D22   CALL     $D22            ; Call subroutine at D22
$CC4    $FA94   UNKNOWN  FA94            ; Unknown Fxxx instruction
$CC6    $E0B9   UNKNOWN  $E0B9           ; Unknown Exxx instruction
$CC8    $4811   SNE      V8, #11         ; Skip if V8 != 17
$CCA    $ACEC   LD       I, $CEC         ; Load CEC into I
$CCC    $B2DB   JP       V0, $2DB        ; Jump to V0 + 2DB
$CCE    $7DCF   ADD      VD, #CF         ; Add 207 to VD
$CD0    $8B92   AND      VB, V9          ; VB &= V9
$CD2    $A0B3   LD       I, $0B3         ; Load 0B3 into I
$CD4    $FD95   UNKNOWN  FD95            ; Unknown Fxxx instruction
$CD6    $117C   JP       $17C            ; Jump to 17C
$CD8    $B28F   JP       V0, $28F        ; Jump to V0 + 28F
$CDA    $96DE   UNKNOWN  $96DE           ; Unknown 9xxx instruction
$CDC    $5CC1   UNKNOWN  $5CC1           ; Unknown 5xxx instruction
$CDE    $0797   SYS      $797            ; System call to 797
$CE0    $B1B1   JP       V0, $1B1        ; Jump to V0 + 1B1
$CE2    $1BCC   JP       $BCC            ; Jump to BCC
$CE4    $07EE   SYS      $7EE            ; System call to 7EE
$CE6    $07F0   SYS      $7F0            ; System call to 7F0
$CE8    $429D   SNE      V2, #9D         ; Skip if V2 != 157
$CEA    $E2A9   UNKNOWN  $E2A9           ; Unknown Exxx instruction
$CEC    $7643   ADD      V6, #43         ; Add 67 to V6
$CEE    $4D13   SNE      VD, #13         ; Skip if VD != 19
$CF0    $58A4   UNKNOWN  $58A4           ; Unknown 5xxx instruction
$CF2    $E32C   UNKNOWN  $E32C           ; Unknown Exxx instruction
$CF4    $D121   DRW      V1, V2, #1      ; Draw 1-byte sprite at V1, V2
$CF6    $AC9C   LD       I, $C9C         ; Load C9C into I
$CF8    $9F89   UNKNOWN  $9F89           ; Unknown 9xxx instruction
$CFA    $0B31   SYS      $B31            ; System call to B31
$CFC    $F390   UNKNOWN  F390            ; Unknown Fxxx instruction
$CFE    $F14D   UNKNOWN  F14D            ; Unknown Fxxx instruction
$D00    $A7E7   LD       I, $7E7         ; Load 7E7 into I
$D02    $82C9   UNKNOWN  82C9            ; Unknown 8xxx instruction
$D04    $65FC   LD       V5, #FC         ; Load 252 into V5
$D06    $9AAB   UNKNOWN  $9AAB           ; Unknown 9xxx instruction
$D08    $218B   CALL     $18B            ; Call subroutine at 18B
$D0A    $7BD8   ADD      VB, #D8         ; Add 216 to VB
$D0C    $A8A0   LD       I, $8A0         ; Load 8A0 into I
$D0E    $1DC2   JP       $DC2            ; Jump to DC2
$D10    $4057   SNE      V0, #57         ; Skip if V0 != 87
$D12    $52DD   UNKNOWN  $52DD           ; Unknown 5xxx instruction
$D14    $0B99   SYS      $B99            ; System call to B99
$D16    $B8A8   JP       V0, $8A8        ; Jump to V0 + 8A8
$D18    $6D1E   LD       VD, #1E         ; Load 30 into VD
$D1A    $5FCC   UNKNOWN  $5FCC           ; Unknown 5xxx instruction
$D1C    $01B4   SYS      $1B4            ; System call to 1B4
$D1E    $80B2   AND      V0, VB          ; V0 &= VB
$D20    $451D   SNE      V5, #1D         ; Skip if V5 != 29
$D22    $7D57   ADD      VD, #57         ; Add 87 to VD
$D24    $6DC1   LD       VD, #C1         ; Load 193 into VD
$D26    $6885   LD       V8, #85         ; Load 133 into V8
$D28    $067C   SYS      $67C            ; System call to 67C
$D2A    $B8BB   JP       V0, $8BB        ; Jump to V0 + 8BB
$D2C    $1905   JP       $905            ; Jump to 905
$D2E    $B64A   JP       V0, $64A        ; Jump to V0 + 64A
$D30    $A421   LD       I, $421         ; Load 421 into I
$D32    $CC75   RND      VC, #75         ; VC = random & 75
$D34    $827C   UNKNOWN  827C            ; Unknown 8xxx instruction
$D36    $FD77   UNKNOWN  FD77            ; Unknown Fxxx instruction
$D38    $AC2A   LD       I, $C2A         ; Load C2A into I
$D3A    $1ADF   JP       $ADF            ; Jump to ADF
$D3C    $A94E   LD       I, $94E         ; Load 94E into I
$D3E    $A240   LD       I, $240         ; Load 240 into I
$D40    $55F0   SE       V5, VF          ; Skip if V5 == VF
$D42    $B24A   JP       V0, $24A        ; Jump to V0 + 24A
$D44    $995C   UNKNOWN  $995C           ; Unknown 9xxx instruction
$D46    $29D5   CALL     $9D5            ; Call subroutine at 9D5
$D48    $483E   SNE      V8, #3E         ; Skip if V8 != 62
$D4A    $5FB6   UNKNOWN  $5FB6           ; Unknown 5xxx instruction
$D4C    $EA12   UNKNOWN  $EA12           ; Unknown Exxx instruction
$D4E    $2183   CALL     $183            ; Call subroutine at 183
$D50    $B5F8   JP       V0, $5F8        ; Jump to V0 + 5F8
$D52    $AC03   LD       I, $C03         ; Load C03 into I
$D54    $A9AF   LD       I, $9AF         ; Load 9AF into I
$D56    $3617   SE       V6, #17         ; Skip if V6 == 23
$D58    $35C8   SE       V5, #C8         ; Skip if V5 == 200
$D5A    $706A   ADD      V0, #6A         ; Add 106 to V0
$D5C    $39BE   SE       V9, #BE         ; Skip if V9 == 190
$D5E    $9978   UNKNOWN  $9978           ; Unknown 9xxx instruction
$D60    $BFC4   JP       V0, $FC4        ; Jump to V0 + FC4
$D62    $B3A3   JP       V0, $3A3        ; Jump to V0 + 3A3
$D64    $1788   JP       $788            ; Jump to 788
$D66    $BAFA   JP       V0, $AFA        ; Jump to V0 + AFA
$D68    $E62B   UNKNOWN  $E62B           ; Unknown Exxx instruction
$D6A    $657D   LD       V5, #7D         ; Load 125 into V5
$D6C    $9C55   UNKNOWN  $9C55           ; Unknown 9xxx instruction
$D6E    $CB1B   RND      VB, #1B         ; VB = random & 1B
$D70    $58FA   UNKNOWN  $58FA           ; Unknown 5xxx instruction
$D72    $9E27   UNKNOWN  $9E27           ; Unknown 9xxx instruction
$D74    $602F   LD       V0, #2F         ; Load 47 into V0
$D76    $F431   UNKNOWN  F431            ; Unknown Fxxx instruction
$D78    $59EE   UNKNOWN  $59EE           ; Unknown 5xxx instruction
$D7A    $160C   JP       $60C            ; Jump to 60C
$D7C    $4B65   SNE      VB, #65         ; Skip if VB != 101
$D7E    $03E7   SYS      $3E7            ; System call to 3E7
$D80    $81A3   XOR      V1, VA          ; V1 ^= VA
$D82    $3D62   SE       VD, #62         ; Skip if VD == 98
$D84    $4926   SNE      V9, #26         ; Skip if V9 != 38
$D86    $F0B3   UNKNOWN  F0B3            ; Unknown Fxxx instruction
$D88    $7817   ADD      V8, #17         ; Add 23 to V8
$D8A    $E16B   UNKNOWN  $E16B           ; Unknown Exxx instruction
$D8C    $506B   UNKNOWN  $506B           ; Unknown 5xxx instruction
$D8E    $5868   UNKNOWN  $5868           ; Unknown 5xxx instruction
$D90    $7F52   ADD      VF, #52         ; Add 82 to VF
$D92    $E4FC   UNKNOWN  $E4FC           ; Unknown Exxx instruction
$D94    $21E6   CALL     $1E6            ; Call subroutine at 1E6
$D96    $1346   JP       $346            ; Jump to 346
$D98    $F57D   UNKNOWN  F57D            ; Unknown Fxxx instruction
$D9A    $03FB   SYS      $3FB            ; System call to 3FB
$D9C    $22FB   CALL     $2FB            ; Call subroutine at 2FB
$D9E    $7148   ADD      V1, #48         ; Add 72 to V1
$DA0    $36F3   SE       V6, #F3         ; Skip if V6 == 243
$DA2    $F328   UNKNOWN  F328            ; Unknown Fxxx instruction
$DA4    $E2DF   UNKNOWN  $E2DF           ; Unknown Exxx instruction
$DA6    $521C   UNKNOWN  $521C           ; Unknown 5xxx instruction
$DA8    $5138   UNKNOWN  $5138           ; Unknown 5xxx instruction
$DAA    $55CB   UNKNOWN  $55CB           ; Unknown 5xxx instruction
$DAC    $D123   DRW      V1, V2, #3      ; Draw 3-byte sprite at V1, V2
$DAE    $32E6   SE       V2, #E6         ; Skip if V2 == 230
$DB0    $FCC9   UNKNOWN  FCC9            ; Unknown Fxxx instruction
$DB2    $E0FD   UNKNOWN  $E0FD           ; Unknown Exxx instruction
$DB4    $5279   UNKNOWN  $5279           ; Unknown 5xxx instruction
$DB6    $E01C   UNKNOWN  $E01C           ; Unknown Exxx instruction
$DB8    $5E80   SE       VE, V8          ; Skip if VE == V8
$DBA    $94D9   UNKNOWN  $94D9           ; Unknown 9xxx instruction
$DBC    $21F2   CALL     $1F2            ; Call subroutine at 1F2
$DBE    $4021   SNE      V0, #21         ; Skip if V0 != 33
$DC0    $8C34   ADD      VC, V3          ; VC += V3, VF = carry
$DC2    $1F76   JP       $F76            ; Jump to F76
$DC4    $CA69   RND      VA, #69         ; VA = random & 69
$DC6    $16AB   JP       $6AB            ; Jump to 6AB
$DC8    $D4EB   DRW      V4, VE, #B      ; Draw 11-byte sprite at V4, VE
$DCA    $1912   JP       $912            ; Jump to 912
$DCC    $BC91   JP       V0, $C91        ; Jump to V0 + C91
$DCE    $7B9E   ADD      VB, #9E         ; Add 158 to VB
$DD0    $4BA8   SNE      VB, #A8         ; Skip if VB != 168
$DD2    $B23C   JP       V0, $23C        ; Jump to V0 + 23C
$DD4    $F0DE   UNKNOWN  F0DE            ; Unknown Fxxx instruction
$DD6    $7E5A   ADD      VE, #5A         ; Add 90 to VE
$DD8    $9BE5   UNKNOWN  $9BE5           ; Unknown 9xxx instruction
$DDA    $36E0   SE       V6, #E0         ; Skip if V6 == 224
$DDC    $24F3   CALL     $4F3            ; Call subroutine at 4F3
$DDE    $4274   SNE      V2, #74         ; Skip if V2 != 116
$DE0    $63FA   LD       V3, #FA         ; Load 250 into V3
$DE2    $E024   UNKNOWN  $E024           ; Unknown Exxx instruction
$DE4    $9A7F   UNKNOWN  $9A7F           ; Unknown 9xxx instruction
$DE6    $6EE0   LD       VE, #E0         ; Load 224 into VE
$DE8    $F055   LD       [I], V0         ; Store V0-V0 at I
$DEA    $EB48   UNKNOWN  $EB48           ; Unknown Exxx instruction
$DEC    $86A7   SUBN     V6, VA          ; V6 = VA - V6, VF = !borrow
$DEE    $1183   JP       $183            ; Jump to 183
$DF0    $456A   SNE      V5, #6A         ; Skip if V5 != 106
$DF2    $72AB   ADD      V2, #AB         ; Add 171 to V2
$DF4    $B239   JP       V0, $239        ; Jump to V0 + 239
$DF6    $CBD0   RND      VB, #D0         ; VB = random & D0
$DF8    $F098   UNKNOWN  F098            ; Unknown Fxxx instruction
$DFA    $158D   JP       $58D            ; Jump to 58D
$DFC    $50F6   UNKNOWN  $50F6           ; Unknown 5xxx instruction
$DFE    $3751   SE       V7, #51         ; Skip if V7 == 81
$E00    $23B4   CALL     $3B4            ; Call subroutine at 3B4
$E02    $2C34   CALL     $C34            ; Call subroutine at C34
$E04    $3128   SE       V1, #28         ; Skip if V1 == 40
$E06    $077D   SYS      $77D            ; System call to 77D
$E08    $A9B8   LD       I, $9B8         ; Load 9B8 into I
$E0A    $686F   LD       V8, #6F         ; Load 111 into V8
$E0C    $40C1   SNE      V0, #C1         ; Skip if V0 != 193
$E0E    $0E81   SYS      $E81            ; System call to E81
$E10    $1408   JP       $408            ; Jump to 408
$E12    $0D9F   SYS      $D9F            ; System call to D9F
$E14    $2177   CALL     $177            ; Call subroutine at 177
$E16    $1306   JP       $306            ; Jump to 306
$E18    $D5A5   DRW      V5, VA, #5      ; Draw 5-byte sprite at V5, VA
$E1A    $268D   CALL     $68D            ; Call subroutine at 68D
$E1C    $F2E6   UNKNOWN  F2E6            ; Unknown Fxxx instruction
$E1E    $7CB1   ADD      VC, #B1         ; Add 177 to VC
$E20    $B698   JP       V0, $698        ; Jump to V0 + 698
$E22    $9471   UNKNOWN  $9471           ; Unknown 9xxx instruction
$E24    $5DE3   UNKNOWN  $5DE3           ; Unknown 5xxx instruction
$E26    $54EA   UNKNOWN  $54EA           ; Unknown 5xxx instruction
$E28    $83E7   SUBN     V3, VE          ; V3 = VE - V3, VF = !borrow
$E2A    $7737   ADD      V7, #37         ; Add 55 to V7
$E2C    $AD9C   LD       I, $D9C         ; Load D9C into I
$E2E    $57AC   UNKNOWN  $57AC           ; Unknown 5xxx instruction
$E30    $3CFD   SE       VC, #FD         ; Skip if VC == 253
$E32    $ABCD   LD       I, $BCD         ; Load BCD into I
$E34    $15D3   JP       $5D3            ; Jump to 5D3
$E36    $6CE5   LD       VC, #E5         ; Load 229 into VC
$E38    $F9CD   UNKNOWN  F9CD            ; Unknown Fxxx instruction
$E3A    $A983   LD       I, $983         ; Load 983 into I
$E3C    $6FAC   LD       VF, #AC         ; Load 172 into VF
$E3E    $D0BC   DRW      V0, VB, #C      ; Draw 12-byte sprite at V0, VB
$E40    $D0BF   DRW      V0, VB, #F      ; Draw 15-byte sprite at V0, VB
$E42    $316B   SE       V1, #6B         ; Skip if V1 == 107
$E44    $1A6A   JP       $A6A            ; Jump to A6A
$E46    $7652   ADD      V6, #52         ; Add 82 to V6
$E48    $D0F1   DRW      V0, VF, #1      ; Draw 1-byte sprite at V0, VF
$E4A    $E6F2   UNKNOWN  $E6F2           ; Unknown Exxx instruction
$E4C    $5460   SE       V4, V6          ; Skip if V4 == V6
$E4E    $5BA6   UNKNOWN  $5BA6           ; Unknown 5xxx instruction
$E50    $1079   JP       $079            ; Jump to 079
$E52    $D259   DRW      V2, V5, #9      ; Draw 9-byte sprite at V2, V5
$E54    $B676   JP       V0, $676        ; Jump to V0 + 676
$E56    $A7FE   LD       I, $7FE         ; Load 7FE into I
$E58    $0CE7   SYS      $CE7            ; System call to CE7
$E5A    $8FA7   SUBN     VF, VA          ; VF = VA - VF, VF = !borrow
$E5C    $2BEE   CALL     $BEE            ; Call subroutine at BEE
$E5E    $889C   UNKNOWN  889C            ; Unknown 8xxx instruction
$E60    $E9E9   UNKNOWN  $E9E9           ; Unknown Exxx instruction
$E62    $21FB   CALL     $1FB            ; Call subroutine at 1FB
$E64    $A814   LD       I, $814         ; Load 814 into I
$E66    $F53F   UNKNOWN  F53F            ; Unknown Fxxx instruction
$E68    $F186   UNKNOWN  F186            ; Unknown Fxxx instruction
$E6A    $F0F8   UNKNOWN  F0F8            ; Unknown Fxxx instruction
$E6C    $CD48   RND      VD, #48         ; VD = random & 48
$E6E    $C3D2   RND      V3, #D2         ; V3 = random & D2
$E70    $FE89   UNKNOWN  FE89            ; Unknown Fxxx instruction
$E72    $5DA5   UNKNOWN  $5DA5           ; Unknown 5xxx instruction
$E74    $2B23   CALL     $B23            ; Call subroutine at B23
$E76    $975A   UNKNOWN  $975A           ; Unknown 9xxx instruction
$E78    $FC33   LD       B, VC           ; Store BCD of VC at I, I+1, I+2
$E7A    $8FC0   LD       VF, VC          ; VF = VC
$E7C    $6894   LD       V8, #94         ; Load 148 into V8
$E7E    $0864   SYS      $864            ; System call to 864
$E80    $725E   ADD      V2, #5E         ; Add 94 to V2
$E82    $834E   SHL      V3              ; V3 <<= 1, VF = MSB
$E84    $3FEA   SE       VF, #EA         ; Skip if VF == 234
$E86    $978C   UNKNOWN  $978C           ; Unknown 9xxx instruction
$E88    $369E   SE       V6, #9E         ; Skip if V6 == 158
$E8A    $83AD   UNKNOWN  83AD            ; Unknown 8xxx instruction
$E8C    $5743   UNKNOWN  $5743           ; Unknown 5xxx instruction
$E8E    $CBF9   RND      VB, #F9         ; VB = random & F9
$E90    $0758   SYS      $758            ; System call to 758
$E92    $6517   LD       V5, #17         ; Load 23 into V5
$E94    $E13C   UNKNOWN  $E13C           ; Unknown Exxx instruction
$E96    $EA32   UNKNOWN  $EA32           ; Unknown Exxx instruction
$E98    $4411   SNE      V4, #11         ; Skip if V4 != 17
$E9A    $E770   UNKNOWN  $E770           ; Unknown Exxx instruction
$E9C    $7D07   ADD      VD, #07         ; Add 7 to VD
$E9E    $F5B1   UNKNOWN  F5B1            ; Unknown Fxxx instruction
$EA0    $3C7E   SE       VC, #7E         ; Skip if VC == 126
$EA2    $5B18   UNKNOWN  $5B18           ; Unknown 5xxx instruction
$EA4    $B031   JP       V0, $031        ; Jump to V0 + 031
$EA6    $7E52   ADD      VE, #52         ; Add 82 to VE
$EA8    $34E4   SE       V4, #E4         ; Skip if V4 == 228
$EAA    $B572   JP       V0, $572        ; Jump to V0 + 572
$EAC    $C5B0   RND      V5, #B0         ; V5 = random & B0
$EAE    $9028   UNKNOWN  $9028           ; Unknown 9xxx instruction
$EB0    $C589   RND      V5, #89         ; V5 = random & 89
$EB2    $CB82   RND      VB, #82         ; VB = random & 82
$EB4    $532C   UNKNOWN  $532C           ; Unknown 5xxx instruction
$EB6    $1E97   JP       $E97            ; Jump to E97
$EB8    $866D   UNKNOWN  866D            ; Unknown 8xxx instruction
$EBA    $6005   LD       V0, #05         ; Load 5 into V0
$EBC    $5EE5   UNKNOWN  $5EE5           ; Unknown 5xxx instruction
$EBE    $FB43   UNKNOWN  FB43            ; Unknown Fxxx instruction
$EC0    $C15F   RND      V1, #5F         ; V1 = random & 5F
$EC2    $B466   JP       V0, $466        ; Jump to V0 + 466
$EC4    $B823   JP       V0, $823        ; Jump to V0 + 823
$EC6    $5A63   UNKNOWN  $5A63           ; Unknown 5xxx instruction
$EC8    $C515   RND      V5, #15         ; V5 = random & 15
$ECA    $5A99   UNKNOWN  $5A99           ; Unknown 5xxx instruction
$ECC    $36C7   SE       V6, #C7         ; Skip if V6 == 199
$ECE    $3B19   SE       VB, #19         ; Skip if VB == 25
$ED0    $4AB0   SNE      VA, #B0         ; Skip if VA != 176
$ED2    $ED1D   UNKNOWN  $ED1D           ; Unknown Exxx instruction
$ED4    $A038   LD       I, $038         ; Load 038 into I
$ED6    $402F   SNE      V0, #2F         ; Skip if V0 != 47
$ED8    $A7F2   LD       I, $7F2         ; Load 7F2 into I
$EDA    $8CD3   XOR      VC, VD          ; VC ^= VD
$EDC    $FB34   UNKNOWN  FB34            ; Unknown Fxxx instruction
$EDE    $3DC3   SE       VD, #C3         ; Skip if VD == 195
$EE0    $59A5   UNKNOWN  $59A5           ; Unknown 5xxx instruction
$EE2    $9C07   UNKNOWN  $9C07           ; Unknown 9xxx instruction
$EE4    $5549   UNKNOWN  $5549           ; Unknown 5xxx instruction
$EE6    $B7A1   JP       V0, $7A1        ; Jump to V0 + 7A1
$EE8    $D5F5   DRW      V5, VF, #5      ; Draw 5-byte sprite at V5, VF
$EEA    $3E5C   SE       VE, #5C         ; Skip if VE == 92
$EEC    $0A36   SYS      $A36            ; System call to A36
$EEE    $7EB6   ADD      VE, #B6         ; Add 182 to VE
$EF0    $8AFC   UNKNOWN  8AFC            ; Unknown 8xxx instruction
$EF2    $0FFE   SYS      $FFE            ; System call to FFE
$EF4    $D107   DRW      V1, V0, #7      ; Draw 7-byte sprite at V1, V0
$EF6    $D803   DRW      V8, V0, #3      ; Draw 3-byte sprite at V8, V0
$EF8    $BBC3   JP       V0, $BC3        ; Jump to V0 + BC3
$EFA    $ED8B   UNKNOWN  $ED8B           ; Unknown Exxx instruction
$EFC    $93AD   UNKNOWN  $93AD           ; Unknown 9xxx instruction
$EFE    $FC2C   UNKNOWN  FC2C            ; Unknown Fxxx instruction
$F00    $E698   UNKNOWN  $E698           ; Unknown Exxx instruction
$F02    $F6A9   UNKNOWN  F6A9            ; Unknown Fxxx instruction
$F04    $AE3C   LD       I, $E3C         ; Load E3C into I
$F06    $E457   UNKNOWN  $E457           ; Unknown Exxx instruction
$F08    $AAE8   LD       I, $AE8         ; Load AE8 into I
$F0A    $F01A   UNKNOWN  F01A            ; Unknown Fxxx instruction
$F0C    $302D   SE       V0, #2D         ; Skip if V0 == 45
$F0E    $82AA   UNKNOWN  82AA            ; Unknown 8xxx instruction
$F10    $D3F0   DRW      V3, VF, #0      ; Draw 0-byte sprite at V3, VF
$F12    $4A0F   SNE      VA, #0F         ; Skip if VA != 15
$F14    $5D44   UNKNOWN  $5D44           ; Unknown 5xxx instruction
$F16    $2F93   CALL     $F93            ; Call subroutine at F93
$F18    $FEE2   UNKNOWN  FEE2            ; Unknown Fxxx instruction
$F1A    $D8AF   DRW      V8, VA, #F      ; Draw 15-byte sprite at V8, VA
$F1C    $A3E7   LD       I, $3E7         ; Load 3E7 into I
$F1E    $A807   LD       I, $807         ; Load 807 into I
$F20    $0A2B   SYS      $A2B            ; System call to A2B
$F22    $ED4C   UNKNOWN  $ED4C           ; Unknown Exxx instruction
$F24    $3612   SE       V6, #12         ; Skip if V6 == 18
$F26    $0BCA   SYS      $BCA            ; System call to BCA
$F28    $EBE2   UNKNOWN  $EBE2           ; Unknown Exxx instruction
$F2A    $0E4D   SYS      $E4D            ; System call to E4D
$F2C    $DB8C   DRW      VB, V8, #C      ; Draw 12-byte sprite at VB, V8
$F2E    $086A   SYS      $86A            ; System call to 86A
$F30    $88B7   SUBN     V8, VB          ; V8 = VB - V8, VF = !borrow
$F32    $CC36   RND      VC, #36         ; VC = random & 36
$F34    $EBE0   UNKNOWN  $EBE0           ; Unknown Exxx instruction
$F36    $5206   UNKNOWN  $5206           ; Unknown 5xxx instruction
$F38    $BA98   JP       V0, $A98        ; Jump to V0 + A98
$F3A    $2008   CALL     $008            ; Call subroutine at 008
$F3C    $D7D0   DRW      V7, VD, #0      ; Draw 0-byte sprite at V7, VD
$F3E    $FAFC   UNKNOWN  FAFC            ; Unknown Fxxx instruction
$F40    $95ED   UNKNOWN  $95ED           ; Unknown 9xxx instruction
$F42    $0DA2   SYS      $DA2            ; System call to DA2
$F44    $D7D2   DRW      V7, VD, #2      ; Draw 2-byte sprite at V7, VD
$F46    $99BC   UNKNOWN  $99BC           ; Unknown 9xxx instruction
$F48    $8595   SUB      V5, V9          ; V5 -= V9, VF = !borrow
$F4A    $2634   CALL     $634            ; Call subroutine at 634
$F4C    $9832   UNKNOWN  $9832           ; Unknown 9xxx instruction
$F4E    $BAC9   JP       V0, $AC9        ; Jump to V0 + AC9
$F50    $F4F1   UNKNOWN  F4F1            ; Unknown Fxxx instruction
$F52    $4216   SNE      V2, #16         ; Skip if V2 != 22
$F54    $74A7   ADD      V4, #A7         ; Add 167 to V4
$F56    $0E9C   SYS      $E9C            ; System call to E9C
$F58    $01CA   SYS      $1CA            ; System call to 1CA
$F5A    $1F24   JP       $F24            ; Jump to F24
$F5C    $6C49   LD       VC, #49         ; Load 73 into VC
$F5E    $E6CF   UNKNOWN  $E6CF           ; Unknown Exxx instruction
$F60    $E543   UNKNOWN  $E543           ; Unknown Exxx instruction
$F62    $FDEB   UNKNOWN  FDEB            ; Unknown Fxxx instruction
$F64    $2755   CALL     $755            ; Call subroutine at 755
$F66    $9F7B   UNKNOWN  $9F7B           ; Unknown 9xxx instruction
$F68    $4629   SNE      V6, #29         ; Skip if V6 != 41
$F6A    $EF36   UNKNOWN  $EF36           ; Unknown Exxx instruction
$F6C    $B537   JP       V0, $537        ; Jump to V0 + 537
$F6E    $AA06   LD       I, $A06         ; Load A06 into I
$F70    $CFA0   RND      VF, #A0         ; VF = random & A0
$F72    $0A82   SYS      $A82            ; System call to A82
$F74    $6EC1   LD       VE, #C1         ; Load 193 into VE
$F76    $910B   UNKNOWN  $910B           ; Unknown 9xxx instruction
$F78    $942B   UNKNOWN  $942B           ; Unknown 9xxx instruction
$F7A    $87C8   UNKNOWN  87C8            ; Unknown 8xxx instruction
$F7C    $AC59   LD       I, $C59         ; Load C59 into I
$F7E    $720F   ADD      V2, #0F         ; Add 15 to V2
$F80    $B6F1   JP       V0, $6F1        ; Jump to V0 + 6F1
$F82    $C833   RND      V8, #33         ; V8 = random & 33
$F84    $A2E9   LD       I, $2E9         ; Load 2E9 into I
$F86    $5BA0   SE       VB, VA          ; Skip if VB == VA
$F88    $2882   CALL     $882            ; Call subroutine at 882
$F8A    $4A18   SNE      VA, #18         ; Skip if VA != 24
$F8C    $66F4   LD       V6, #F4         ; Load 244 into V6
$F8E    $55AE   UNKNOWN  $55AE           ; Unknown 5xxx instruction
$F90    $5A06   UNKNOWN  $5A06           ; Unknown 5xxx instruction
$F92    $7D68   ADD      VD, #68         ; Add 104 to VD
$F94    $D436   DRW      V4, V3, #6      ; Draw 6-byte sprite at V4, V3
$F96    $18B2   JP       $8B2            ; Jump to 8B2
$F98    $5BCF   UNKNOWN  $5BCF           ; Unknown 5xxx instruction
$F9A    $BFD4   JP       V0, $FD4        ; Jump to V0 + FD4
$F9C    $41F4   SNE      V1, #F4         ; Skip if V1 != 244
$F9E    $3BD0   SE       VB, #D0         ; Skip if VB == 208
$FA0    $9242   UNKNOWN  $9242           ; Unknown 9xxx instruction
$FA2    $5453   UNKNOWN  $5453           ; Unknown 5xxx instruction
$FA4    $74AC   ADD      V4, #AC         ; Add 172 to V4
$FA6    $D501   DRW      V5, V0, #1      ; Draw 1-byte sprite at V5, V0
$FA8    $B4EB   JP       V0, $4EB        ; Jump to V0 + 4EB
$FAA    $3B8F   SE       VB, #8F         ; Skip if VB == 143
$FAC    $1AE1   JP       $AE1            ; Jump to AE1
$FAE    $DBCC   DRW      VB, VC, #C      ; Draw 12-byte sprite at VB, VC
$FB0    $FBF1   UNKNOWN  FBF1            ; Unknown Fxxx instruction
$FB2    $1E86   JP       $E86            ; Jump to E86
$FB4    $DE5A   DRW      VE, V5, #A      ; Draw 10-byte sprite at VE, V5
$FB6    $64E0   LD       V4, #E0         ; Load 224 into V4
$FB8    $A81F   LD       I, $81F         ; Load 81F into I
$FBA    $A3BB   LD       I, $3BB         ; Load 3BB into I
$FBC    $5526   UNKNOWN  $5526           ; Unknown 5xxx instruction
$FBE    $0D15   SYS      $D15            ; System call to D15
$FC0    $C1E7   RND      V1, #E7         ; V1 = random & E7
$FC2    $C7A7   RND      V7, #A7         ; V7 = random & A7
$FC4    $321D   SE       V2, #1D         ; Skip if V2 == 29
$FC6    $7CEC   ADD      VC, #EC         ; Add 236 to VC
$FC8    $9FC6   UNKNOWN  $9FC6           ; Unknown 9xxx instruction
$FCA    $0479   SYS      $479            ; System call to 479
$FCC    $2C51   CALL     $C51            ; Call subroutine at C51
$FCE    $C9EE   RND      V9, #EE         ; V9 = random & EE
$FD0    $8B4B   UNKNOWN  8B4B            ; Unknown 8xxx instruction
$FD2    $E956   UNKNOWN  $E956           ; Unknown Exxx instruction
$FD4    $98A4   UNKNOWN  $98A4           ; Unknown 9xxx instruction
$FD6    $6F9C   LD       VF, #9C         ; Load 156 into VF
$FD8    $86AF   UNKNOWN  86AF            ; Unknown 8xxx instruction
$FDA    $BA50   JP       V0, $A50        ; Jump to V0 + A50
$FDC    $E3BC   UNKNOWN  $E3BC           ; Unknown Exxx instruction
$FDE    $6B0E   LD       VB, #0E         ; Load 14 into VB
$FE0    $B120   JP       V0, $120        ; Jump to V0 + 120
$FE2    $54BB   UNKNOWN  $54BB           ; Unknown 5xxx instruction
$FE4    $972E   UNKNOWN  $972E           ; Unknown 9xxx instruction
$FE6    $0CED   SYS      $CED            ; System call to CED
$FE8    $0782   SYS      $782            ; System call to 782
$FEA    $6A7F   LD       VA, #7F         ; Load 127 into VA
$FEC    $EE4D   UNKNOWN  $EE4D           ; Unknown Exxx instruction
$FEE    $FD97   UNKNOWN  FD97            ; Unknown Fxxx instruction
$FF0    $D509   DRW      V5, V0, #9      ; Draw 9-byte sprite at V5, V0
$FF2    $E732   UNKNOWN  $E732           ; Unknown Exxx instruction
$FF4    $53B0   SE       V3, VB          ; Skip if V3 == VB
$FF6    $1CED   JP       $CED            ; Jump to CED
$FF8    $6A99   LD       VA, #99         ; Load 153 into VA
$FFA    $EC86   UNKNOWN  $EC86           ; Unknown Exxx instruction
$FFC    $5CAB   UNKNOWN  $5CAB           ; Unknown 5xxx instruction
$FFE    $E1B0   UNKNOWN  $E1B0           ; Unknown Exxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 517 (28.9%)
  LD      : 233 (13.0%)
  JP      : 212 (11.8%)
  SYS     : 124 ( 6.9%)
  SNE     : 119 ( 6.6%)
  SE      : 119 ( 6.6%)
  CALL    : 114 ( 6.4%)
  DRW     : 112 ( 6.2%)
  ADD     : 109 ( 6.1%)
  RND     :  93 ( 5.2%)
  SUBN    :  10 ( 0.6%)
  SHL     :   7 ( 0.4%)
  OR      :   6 ( 0.3%)
  SUB     :   5 ( 0.3%)
  XOR     :   5 ( 0.3%)
  AND     :   4 ( 0.2%)
  SHR     :   3 ( 0.2%)

Memory Operations: 342 (19.1%)
Arithmetic Operations: 139 (7.8%)
