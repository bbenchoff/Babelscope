
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B8252D01_I07588_C3551_c17334131328.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 8252
Instance: 7588
Direction: ascending
Final Array: [0, 6, 6, 6, 6, 6, 6, 6]
Operations: R:0 W:4 C:225 S:3

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 105
Sort Array References:
  $21E: LD I, $645 ; Load 645 into I
  $2A4: LD I, $EEF ; Load EEF into I
  $2D0: LD I, $A05 ; Load A05 into I
  $382: LD I, $5C7 ; Load 5C7 into I
  $3AC: LD I, $EC2 ; Load EC2 into I
  $3AE: LD I, $05A ; Load 05A into I
  $3B8: LD I, $D6B ; Load D6B into I
  $410: LD I, $D0F ; Load D0F into I
  $436: LD I, $810 ; Load 810 into I
  $44C: LD I, $536 ; Load 536 into I
  $46A: ADD I, V8 ; I ADDRESS MANIPULATION
  $49E: LD I, $42F ; Load 42F into I
  $4C4: LD I, $5E2 ; Load 5E2 into I
  $4D4: LD I, $F55 ; Load F55 into I
  $51C: LD I, $11B ; Load 11B into I
  $51E: LD I, $EB0 ; Load EB0 into I
  $564: LD I, $606 ; Load 606 into I
  $590: LD I, $795 ; Load 795 into I
  $59A: LD I, $BBD ; Load BBD into I
  $5EC: LD I, $006 ; Load 006 into I
  $604: LD I, $B68 ; Load B68 into I
  $608: LD I, $929 ; Load 929 into I
  $60A: LD I, $760 ; Load 760 into I
  $682: LD I, $C84 ; Load C84 into I
  $6A4: LD I, $DCB ; Load DCB into I
  $6B4: LD I, $151 ; Load 151 into I
  $6B8: LD I, $F36 ; Load F36 into I
  $6CA: LD I, $13A ; Load 13A into I
  $6DE: LD I, $4C2 ; Load 4C2 into I
  $6E0: LD I, $7BC ; Load 7BC into I
  $6E6: LD I, $BAE ; Load BAE into I
  $728: LD I, $C8B ; Load C8B into I
  $736: LD I, $1A2 ; Load 1A2 into I
  $742: LD I, $C6C ; Load C6C into I
  $758: ADD I, V0 ; I ADDRESS MANIPULATION
  $77C: ADD I, V6 ; I ADDRESS MANIPULATION
  $79C: LD I, $F85 ; Load F85 into I
  $7BC: LD I, $B23 ; Load B23 into I
  $7CE: LD I, $80A ; Load 80A into I
  $7E8: LD I, $076 ; Load 076 into I
  $848: LD I, $8AB ; Load 8AB into I
  $852: LD I, $6FF ; Load 6FF into I
  $874: LD I, $0B2 ; Load 0B2 into I
  $88E: LD I, $6EA ; Load 6EA into I
  $93C: LD I, $CC2 ; Load CC2 into I
  $950: LD I, $103 ; Load 103 into I
  $95E: LD I, $731 ; Load 731 into I
  $966: LD I, $F5F ; Load F5F into I
  $974: LD I, $75E ; Load 75E into I
  $97A: LD I, $1EA ; Load 1EA into I
  $9A0: LD I, $2AB ; Load 2AB into I
  $9C2: LD I, $CEC ; Load CEC into I
  $9C6: LD I, $E60 ; Load E60 into I
  $A18: LD I, $82C ; Load 82C into I
  $A1E: LD I, $80B ; Load 80B into I
  $A2A: LD I, $071 ; Load 071 into I
  $A2C: LD I, $3F3 ; Load 3F3 into I
  $A46: LD I, $7F2 ; Load 7F2 into I
  $A68: LD I, $2F4 ; Load 2F4 into I
  $A70: LD I, $5E4 ; Load 5E4 into I
  $A80: LD I, $1BC ; Load 1BC into I
  $AB2: LD I, $02D ; Load 02D into I
  $ABE: LD I, $A2F ; Load A2F into I
  $AE2: LD I, $8DF ; Load 8DF into I
  $AE4: LD I, $9E4 ; Load 9E4 into I
  $B0A: LD I, $F5E ; Load F5E into I
  $B2C: LD I, $03F ; Load 03F into I
  $B50: LD I, $A84 ; Load A84 into I
  $BCA: LD [I], V2 ; Store V0-V2 at I
  $BEE: LD I, $941 ; Load 941 into I
  $C02: LD I, $C45 ; Load C45 into I
  $C0A: LD I, $85A ; Load 85A into I
  $C30: LD I, $880 ; Load 880 into I
  $C38: LD I, $9B7 ; Load 9B7 into I
  $C3A: LD I, $FCF ; Load FCF into I
  $C70: LD I, $4CA ; Load 4CA into I
  $C9C: LD I, $653 ; Load 653 into I
  $CA6: LD I, $2F9 ; Load 2F9 into I
  $CB4: LD I, $5D0 ; Load 5D0 into I
  $CB8: LD I, $E42 ; Load E42 into I
  $D04: LD I, $13E ; Load 13E into I
  $D10: LD I, $DA6 ; Load DA6 into I
  $D1E: LD I, $C7E ; Load C7E into I
  $D20: LD I, $8A6 ; Load 8A6 into I
  $D48: LD I, $99E ; Load 99E into I
  $D66: LD I, $621 ; Load 621 into I
  $D6C: ADD I, V3 ; I ADDRESS MANIPULATION
  $D70: LD I, $C7A ; Load C7A into I
  $DEA: LD I, $2F9 ; Load 2F9 into I
  $E30: LD I, $378 ; Load 378 into I
  $E32: LD I, $67C ; Load 67C into I
  $E38: LD I, $3A4 ; Load 3A4 into I
  $E46: LD I, $7F7 ; Load 7F7 into I
  $E56: LD I, $7B1 ; Load 7B1 into I
  $E86: LD I, $260 ; Load 260 into I
  $E90: LD I, $63A ; Load 63A into I
  $E98: LD I, $E60 ; Load E60 into I
  $E9C: LD I, $B5B ; Load B5B into I
  $F1C: LD I, $29F ; Load 29F into I
  $F2C: LD I, $7BB ; Load 7BB into I
  $F60: LD I, $D57 ; Load D57 into I
  $F7C: LD I, $DDB ; Load DDB into I
  $FC2: LD I, $41C ; Load 41C into I
  $FD4: LD I, $E65 ; Load E65 into I
  $FDC: LD I, $D9F ; Load D9F into I

CONTROL FLOW ANALYSIS:
Jumps: 188
Calls: 109
Branches: 233
Loops: 108
Loop Structures:
  $2B2 -> $258 (backward jump)
  $3E0 -> $1D2 (backward jump)
  $476 -> $0AC (backward jump)
  $478 -> $0E5 (backward jump)
  $484 -> $010 (backward jump)
  $500 -> $2E2 (backward jump)
  $548 -> $12A (backward jump)
  $5AA -> $25B (backward jump)
  $5AE -> $47C (backward jump)
  $5D0 -> $2D8 (backward jump)
  $5E2 -> $06D (backward jump)
  $63E -> $518 (backward jump)
  $64C -> $0A9 (backward jump)
  $652 -> $3A6 (backward jump)
  $664 -> $13C (backward jump)
  $6AE -> $132 (backward jump)
  $6BE -> $576 (backward jump)
  $6EA -> $338 (backward jump)
  $6F6 -> $2BB (backward jump)
  $700 -> $4B1 (backward jump)
  $706 -> $00B (backward jump)
  $710 -> $1FF (backward jump)
  $712 -> $343 (backward jump)
  $722 -> $522 (backward jump)
  $726 -> $22A (backward jump)
  $738 -> $566 (backward jump)
  $754 -> $2AF (backward jump)
  $772 -> $214 (backward jump)
  $7A6 -> $4FC (backward jump)
  $7AE -> $48B (backward jump)
  $7F8 -> $7BF (backward jump)
  $816 -> $2C5 (backward jump)
  $822 -> $242 (backward jump)
  $834 -> $6A9 (backward jump)
  $868 -> $27C (backward jump)
  $872 -> $051 (backward jump)
  $8B0 -> $79E (backward jump)
  $8B6 -> $6A3 (backward jump)
  $8C6 -> $0A1 (backward jump)
  $8CE -> $054 (backward jump)
  $8D0 -> $126 (backward jump)
  $8DE -> $0E1 (backward jump)
  $934 -> $3DB (backward jump)
  $93E -> $162 (backward jump)
  $9B2 -> $1C8 (backward jump)
  $9CA -> $91C (backward jump)
  $9D2 -> $6D9 (backward jump)
  $9F8 -> $69D (backward jump)
  $A00 -> $564 (backward jump)
  $A04 -> $3F4 (backward jump)
  $A34 -> $48F (backward jump)
  $A88 -> $75D (backward jump)
  $AB6 -> $1B1 (backward jump)
  $ABC -> $4FB (backward jump)
  $AD0 -> $644 (backward jump)
  $B1E -> $1A2 (backward jump)
  $B8C -> $B0F (backward jump)
  $BF6 -> $9DC (backward jump)
  $BFA -> $1EC (backward jump)
  $C0C -> $639 (backward jump)
  $C0E -> $20E (backward jump)
  $C64 -> $C3D (backward jump)
  $C74 -> $83E (backward jump)
  $CA2 -> $A33 (backward jump)
  $CD0 -> $A42 (backward jump)
  $CD8 -> $26E (backward jump)
  $CDA -> $393 (backward jump)
  $D00 -> $7BC (backward jump)
  $D0E -> $125 (backward jump)
  $D14 -> $A33 (backward jump)
  $D24 -> $71E (backward jump)
  $D30 -> $293 (backward jump)
  $D3C -> $15B (backward jump)
  $D46 -> $CD3 (backward jump)
  $D54 -> $855 (backward jump)
  $D6A -> $60A (backward jump)
  $D7E -> $D60 (backward jump)
  $D80 -> $C77 (backward jump)
  $D82 -> $04F (backward jump)
  $D9C -> $72F (backward jump)
  $DBA -> $368 (backward jump)
  $DC2 -> $A6C (backward jump)
  $DCA -> $275 (backward jump)
  $DDE -> $AF6 (backward jump)
  $DEC -> $8DD (backward jump)
  $E06 -> $69A (backward jump)
  $E1E -> $561 (backward jump)
  $E3A -> $B86 (backward jump)
  $E50 -> $41F (backward jump)
  $E60 -> $6C0 (backward jump)
  $E6E -> $468 (backward jump)
  $E8A -> $2E7 (backward jump)
  $EAC -> $46D (backward jump)
  $EBE -> $228 (backward jump)
  $EC2 -> $44F (backward jump)
  $ED6 -> $560 (backward jump)
  $EEA -> $DC2 (backward jump)
  $EFE -> $D1E (backward jump)
  $F00 -> $447 (backward jump)
  $F1A -> $55D (backward jump)
  $F22 -> $8A6 (backward jump)
  $F32 -> $354 (backward jump)
  $F36 -> $65E (backward jump)
  $F3C -> $C11 (backward jump)
  $F3E -> $C96 (backward jump)
  $F64 -> $1BB (backward jump)
  $F74 -> $865 (backward jump)
  $F90 -> $F62 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $F0D0   UNKNOWN  F0D0            ; Unknown Fxxx instruction
$202    $4448   SNE      V4, #48         ; Skip if V4 != 72
$204    $4614   SNE      V6, #14         ; Skip if V6 != 20
$206    $5A6C   UNKNOWN  $5A6C           ; Unknown 5xxx instruction
$208    $0FB6   SYS      $FB6            ; System call to FB6
$20A    $B804   JP       V0, $804        ; Jump to V0 + 804
$20C    $8557   SUBN     V5, V5          ; V5 = V5 - V5, VF = !borrow
$20E    $9843   UNKNOWN  $9843           ; Unknown 9xxx instruction
$210    $5008   UNKNOWN  $5008           ; Unknown 5xxx instruction
$212    $02FA   SYS      $2FA            ; System call to 2FA
$214    $769D   ADD      V6, #9D         ; Add 157 to V6
$216    $5B8D   UNKNOWN  $5B8D           ; Unknown 5xxx instruction
$218    $28CE   CALL     $8CE            ; Call subroutine at 8CE
$21A    $4770   SNE      V7, #70         ; Skip if V7 != 112
$21C    $EAFB   UNKNOWN  $EAFB           ; Unknown Exxx instruction
$21E    $A645   LD       I, $645         ; Load 645 into I
$220    $2859   CALL     $859            ; Call subroutine at 859
$222    $F83D   UNKNOWN  F83D            ; Unknown Fxxx instruction
$224    $938F   UNKNOWN  $938F           ; Unknown 9xxx instruction
$226    $552A   UNKNOWN  $552A           ; Unknown 5xxx instruction
$228    $80D0   LD       V0, VD          ; V0 = VD
$22A    $2F9B   CALL     $F9B            ; Call subroutine at F9B
$22C    $F4B0   UNKNOWN  F4B0            ; Unknown Fxxx instruction
$22E    $0440   SYS      $440            ; System call to 440
$230    $798C   ADD      V9, #8C         ; Add 140 to V9
$232    $3BC8   SE       VB, #C8         ; Skip if VB == 200
$234    $BF75   JP       V0, $F75        ; Jump to V0 + F75
$236    $6002   LD       V0, #02         ; Load 2 into V0
$238    $89D7   SUBN     V9, VD          ; V9 = VD - V9, VF = !borrow
$23A    $D1AE   DRW      V1, VA, #E      ; Draw 14-byte sprite at V1, VA
$23C    $4798   SNE      V7, #98         ; Skip if V7 != 152
$23E    $1442   JP       $442            ; Jump to 442
$240    $F930   UNKNOWN  F930            ; Unknown Fxxx instruction
$242    $DEAD   DRW      VE, VA, #D      ; Draw 13-byte sprite at VE, VA
$244    $4268   SNE      V2, #68         ; Skip if V2 != 104
$246    $7890   ADD      V8, #90         ; Add 144 to V8
$248    $9C4E   UNKNOWN  $9C4E           ; Unknown 9xxx instruction
$24A    $5D4F   UNKNOWN  $5D4F           ; Unknown 5xxx instruction
$24C    $93A9   UNKNOWN  $93A9           ; Unknown 9xxx instruction
$24E    $57B7   UNKNOWN  $57B7           ; Unknown 5xxx instruction
$250    $BB2B   JP       V0, $B2B        ; Jump to V0 + B2B
$252    $806B   UNKNOWN  806B            ; Unknown 8xxx instruction
$254    $81A1   OR       V1, VA          ; V1 |= VA
$256    $2DF6   CALL     $DF6            ; Call subroutine at DF6
$258    $0CDF   SYS      $CDF            ; System call to CDF
$25A    $70B6   ADD      V0, #B6         ; Add 182 to V0
$25C    $8B32   AND      VB, V3          ; VB &= V3
$25E    $83BE   SHL      V3              ; V3 <<= 1, VF = MSB
$260    $2D59   CALL     $D59            ; Call subroutine at D59
$262    $26ED   CALL     $6ED            ; Call subroutine at 6ED
$264    $E448   UNKNOWN  $E448           ; Unknown Exxx instruction
$266    $9B6C   UNKNOWN  $9B6C           ; Unknown 9xxx instruction
$268    $7664   ADD      V6, #64         ; Add 100 to V6
$26A    $0006   SYS      $006            ; System call to 006
$26C    $0606   SYS      $606            ; System call to 606
$26E    $0606   SYS      $606            ; System call to 606
$270    $0606   SYS      $606            ; System call to 606
$272    $06F7   SYS      $6F7            ; System call to 6F7
$274    $4703   SNE      V7, #03         ; Skip if V7 != 3
$276    $59F7   UNKNOWN  $59F7           ; Unknown 5xxx instruction
$278    $621D   LD       V2, #1D         ; Load 29 into V2
$27A    $0006   SYS      $006            ; System call to 006
$27C    $0606   SYS      $606            ; System call to 606
$27E    $0606   SYS      $606            ; System call to 606
$280    $06E7   SYS      $6E7            ; System call to 6E7
$282    $C068   RND      V0, #68         ; V0 = random & 68
$284    $74E7   ADD      V4, #E7         ; Add 231 to V4
$286    $0BDC   SYS      $BDC            ; System call to BDC
$288    $0006   SYS      $006            ; System call to 006
$28A    $0606   SYS      $606            ; System call to 606
$28C    $0606   SYS      $606            ; System call to 606
$28E    $0606   SYS      $606            ; System call to 606
$290    $064C   SYS      $64C            ; System call to 64C
$292    $F6C3   UNKNOWN  F6C3            ; Unknown Fxxx instruction
$294    $1CE6   JP       $CE6            ; Jump to CE6
$296    $9F8D   UNKNOWN  $9F8D           ; Unknown 9xxx instruction
$298    $0006   SYS      $006            ; System call to 006
$29A    $0606   SYS      $606            ; System call to 606
$29C    $0606   SYS      $606            ; System call to 606
$29E    $0663   SYS      $663            ; System call to 663
$2A0    $E519   UNKNOWN  $E519           ; Unknown Exxx instruction
$2A2    $1F87   JP       $F87            ; Jump to F87
$2A4    $AEEF   LD       I, $EEF         ; Load EEF into I
$2A6    $0006   SYS      $006            ; System call to 006
$2A8    $0606   SYS      $606            ; System call to 606
$2AA    $0606   SYS      $606            ; System call to 606
$2AC    $0606   SYS      $606            ; System call to 606
$2AE    $06D9   SYS      $6D9            ; System call to 6D9
$2B0    $90BA   UNKNOWN  $90BA           ; Unknown 9xxx instruction
$2B2    $1258   JP       $258            ; Jump to 258
$2B4    $43F4   SNE      V3, #F4         ; Skip if V3 != 244
$2B6    $0006   SYS      $006            ; System call to 006
$2B8    $0606   SYS      $606            ; System call to 606
$2BA    $0606   SYS      $606            ; System call to 606
$2BC    $065F   SYS      $65F            ; System call to 65F
$2BE    $31B6   SE       V1, #B6         ; Skip if V1 == 182
$2C0    $D9E3   DRW      V9, VE, #3      ; Draw 3-byte sprite at V9, VE
$2C2    $D567   DRW      V5, V6, #7      ; Draw 7-byte sprite at V5, V6
$2C4    $0006   SYS      $006            ; System call to 006
$2C6    $0606   SYS      $606            ; System call to 606
$2C8    $0606   SYS      $606            ; System call to 606
$2CA    $0606   SYS      $606            ; System call to 606
$2CC    $06AA   SYS      $6AA            ; System call to 6AA
$2CE    $D837   DRW      V8, V3, #7      ; Draw 7-byte sprite at V8, V3
$2D0    $AA05   LD       I, $A05         ; Load A05 into I
$2D2    $EB6B   UNKNOWN  $EB6B           ; Unknown Exxx instruction
$2D4    $0006   SYS      $006            ; System call to 006
$2D6    $0606   SYS      $606            ; System call to 606
$2D8    $0606   SYS      $606            ; System call to 606
$2DA    $0606   SYS      $606            ; System call to 606
$2DC    $0681   SYS      $681            ; System call to 681
$2DE    $2290   CALL     $290            ; Call subroutine at 290
$2E0    $992D   UNKNOWN  $992D           ; Unknown 9xxx instruction
$2E2    $0006   SYS      $006            ; System call to 006
$2E4    $0606   SYS      $606            ; System call to 606
$2E6    $0606   SYS      $606            ; System call to 606
$2E8    $0606   SYS      $606            ; System call to 606
$2EA    $0651   SYS      $651            ; System call to 651
$2EC    $14DC   JP       $4DC            ; Jump to 4DC
$2EE    $EBD2   UNKNOWN  $EBD2           ; Unknown Exxx instruction
$2F0    $4003   SNE      V0, #03         ; Skip if V0 != 3
$2F2    $0006   SYS      $006            ; System call to 006
$2F4    $0606   SYS      $606            ; System call to 606
$2F6    $0606   SYS      $606            ; System call to 606
$2F8    $0606   SYS      $606            ; System call to 606
$2FA    $0662   SYS      $662            ; System call to 662
$2FC    $7FA5   ADD      VF, #A5         ; Add 165 to VF
$2FE    $3516   SE       V5, #16         ; Skip if V5 == 22
$300    $0006   SYS      $006            ; System call to 006
$302    $0606   SYS      $606            ; System call to 606
$304    $0606   SYS      $606            ; System call to 606
$306    $0606   SYS      $606            ; System call to 606
$308    $0611   SYS      $611            ; System call to 611
$30A    $085A   SYS      $85A            ; System call to 85A
$30C    $76BA   ADD      V6, #BA         ; Add 186 to V6
$30E    $16A0   JP       $6A0            ; Jump to 6A0
$310    $0006   SYS      $006            ; System call to 006
$312    $0606   SYS      $606            ; System call to 606
$314    $0606   SYS      $606            ; System call to 606
$316    $0606   SYS      $606            ; System call to 606
$318    $064D   SYS      $64D            ; System call to 64D
$31A    $3481   SE       V4, #81         ; Skip if V4 == 129
$31C    $E5A4   UNKNOWN  $E5A4           ; Unknown Exxx instruction
$31E    $8D95   SUB      VD, V9          ; VD -= V9, VF = !borrow
$320    $0006   SYS      $006            ; System call to 006
$322    $0606   SYS      $606            ; System call to 606
$324    $0606   SYS      $606            ; System call to 606
$326    $067F   SYS      $67F            ; System call to 67F
$328    $FA24   UNKNOWN  FA24            ; Unknown Fxxx instruction
$32A    $0303   SYS      $303            ; System call to 303
$32C    $5A61   UNKNOWN  $5A61           ; Unknown 5xxx instruction
$32E    $0006   SYS      $006            ; System call to 006
$330    $0606   SYS      $606            ; System call to 606
$332    $0606   SYS      $606            ; System call to 606
$334    $0606   SYS      $606            ; System call to 606
$336    $06CA   SYS      $6CA            ; System call to 6CA
$338    $1AFF   JP       $AFF            ; Jump to AFF
$33A    $256F   CALL     $56F            ; Call subroutine at 56F
$33C    $1982   JP       $982            ; Jump to 982
$33E    $0006   SYS      $006            ; System call to 006
$340    $0606   SYS      $606            ; System call to 606
$342    $0606   SYS      $606            ; System call to 606
$344    $06DD   SYS      $6DD            ; System call to 6DD
$346    $8AB5   SUB      VA, VB          ; VA -= VB, VF = !borrow
$348    $2CE1   CALL     $CE1            ; Call subroutine at CE1
$34A    $0B65   SYS      $B65            ; System call to B65
$34C    $0006   SYS      $006            ; System call to 006
$34E    $0606   SYS      $606            ; System call to 606
$350    $0606   SYS      $606            ; System call to 606
$352    $0606   SYS      $606            ; System call to 606
$354    $0671   SYS      $671            ; System call to 671
$356    $44A9   SNE      V4, #A9         ; Skip if V4 != 169
$358    $EAD1   UNKNOWN  $EAD1           ; Unknown Exxx instruction
$35A    $4E4A   SNE      VE, #4A         ; Skip if VE != 74
$35C    $0006   SYS      $006            ; System call to 006
$35E    $0606   SYS      $606            ; System call to 606
$360    $0606   SYS      $606            ; System call to 606
$362    $06E8   SYS      $6E8            ; System call to 6E8
$364    $7B53   ADD      VB, #53         ; Add 83 to VB
$366    $C70E   RND      V7, #0E         ; V7 = random & 0E
$368    $CE85   RND      VE, #85         ; VE = random & 85
$36A    $0B48   SYS      $B48            ; System call to B48
$36C    $8DA0   LD       VD, VA          ; VD = VA
$36E    $C334   RND      V3, #34         ; V3 = random & 34
$370    $FEEA   UNKNOWN  FEEA            ; Unknown Fxxx instruction
$372    $0D27   SYS      $D27            ; System call to D27
$374    $3077   SE       V0, #77         ; Skip if V0 == 119
$376    $8F89   UNKNOWN  8F89            ; Unknown 8xxx instruction
$378    $C367   RND      V3, #67         ; V3 = random & 67
$37A    $6E99   LD       VE, #99         ; Load 153 into VE
$37C    $6979   LD       V9, #79         ; Load 121 into V9
$37E    $6774   LD       V7, #74         ; Load 116 into V7
$380    $BEE8   JP       V0, $EE8        ; Jump to V0 + EE8
$382    $A5C7   LD       I, $5C7         ; Load 5C7 into I
$384    $7DF7   ADD      VD, #F7         ; Add 247 to VD
$386    $8091   OR       V0, V9          ; V0 |= V9
$388    $E63D   UNKNOWN  $E63D           ; Unknown Exxx instruction
$38A    $3360   SE       V3, #60         ; Skip if V3 == 96
$38C    $8477   SUBN     V4, V7          ; V4 = V7 - V4, VF = !borrow
$38E    $15A4   JP       $5A4            ; Jump to 5A4
$390    $D16A   DRW      V1, V6, #A      ; Draw 10-byte sprite at V1, V6
$392    $036F   SYS      $36F            ; System call to 36F
$394    $4DC7   SNE      VD, #C7         ; Skip if VD != 199
$396    $7FDA   ADD      VF, #DA         ; Add 218 to VF
$398    $20E1   CALL     $0E1            ; Call subroutine at 0E1
$39A    $4BC3   SNE      VB, #C3         ; Skip if VB != 195
$39C    $EBDE   UNKNOWN  $EBDE           ; Unknown Exxx instruction
$39E    $7B15   ADD      VB, #15         ; Add 21 to VB
$3A0    $5883   UNKNOWN  $5883           ; Unknown 5xxx instruction
$3A2    $62C5   LD       V2, #C5         ; Load 197 into V2
$3A4    $2A04   CALL     $A04            ; Call subroutine at A04
$3A6    $E7A0   UNKNOWN  $E7A0           ; Unknown Exxx instruction
$3A8    $8AB9   UNKNOWN  8AB9            ; Unknown 8xxx instruction
$3AA    $9D6E   UNKNOWN  $9D6E           ; Unknown 9xxx instruction
$3AC    $AEC2   LD       I, $EC2         ; Load EC2 into I
$3AE    $A05A   LD       I, $05A         ; Load 05A into I
$3B0    $8F0B   UNKNOWN  8F0B            ; Unknown 8xxx instruction
$3B2    $6EA8   LD       VE, #A8         ; Load 168 into VE
$3B4    $3F9C   SE       VF, #9C         ; Skip if VF == 156
$3B6    $CDC0   RND      VD, #C0         ; VD = random & C0
$3B8    $AD6B   LD       I, $D6B         ; Load D6B into I
$3BA    $D73F   DRW      V7, V3, #F      ; Draw 15-byte sprite at V7, V3
$3BC    $E28A   UNKNOWN  $E28A           ; Unknown Exxx instruction
$3BE    $BB87   JP       V0, $B87        ; Jump to V0 + B87
$3C0    $BF5D   JP       V0, $F5D        ; Jump to V0 + F5D
$3C2    $75FA   ADD      V5, #FA         ; Add 250 to V5
$3C4    $810D   UNKNOWN  810D            ; Unknown 8xxx instruction
$3C6    $853B   UNKNOWN  853B            ; Unknown 8xxx instruction
$3C8    $E8C0   UNKNOWN  $E8C0           ; Unknown Exxx instruction
$3CA    $B763   JP       V0, $763        ; Jump to V0 + 763
$3CC    $85D0   LD       V5, VD          ; V5 = VD
$3CE    $DC5A   DRW      VC, V5, #A      ; Draw 10-byte sprite at VC, V5
$3D0    $9B8D   UNKNOWN  $9B8D           ; Unknown 9xxx instruction
$3D2    $CA9F   RND      VA, #9F         ; VA = random & 9F
$3D4    $450D   SNE      V5, #0D         ; Skip if V5 != 13
$3D6    $D52D   DRW      V5, V2, #D      ; Draw 13-byte sprite at V5, V2
$3D8    $7C1E   ADD      VC, #1E         ; Add 30 to VC
$3DA    $3727   SE       V7, #27         ; Skip if V7 == 39
$3DC    $C610   RND      V6, #10         ; V6 = random & 10
$3DE    $6B49   LD       VB, #49         ; Load 73 into VB
$3E0    $11D2   JP       $1D2            ; Jump to 1D2
$3E2    $4574   SNE      V5, #74         ; Skip if V5 != 116
$3E4    $3C88   SE       VC, #88         ; Skip if VC == 136
$3E6    $6E05   LD       VE, #05         ; Load 5 into VE
$3E8    $667A   LD       V6, #7A         ; Load 122 into V6
$3EA    $644D   LD       V4, #4D         ; Load 77 into V4
$3EC    $24F7   CALL     $4F7            ; Call subroutine at 4F7
$3EE    $53DE   UNKNOWN  $53DE           ; Unknown 5xxx instruction
$3F0    $8549   UNKNOWN  8549            ; Unknown 8xxx instruction
$3F2    $07E4   SYS      $7E4            ; System call to 7E4
$3F4    $3EDB   SE       VE, #DB         ; Skip if VE == 219
$3F6    $0993   SYS      $993            ; System call to 993
$3F8    $63FD   LD       V3, #FD         ; Load 253 into V3
$3FA    $20A6   CALL     $0A6            ; Call subroutine at 0A6
$3FC    $9FD0   SNE      VF, VD          ; Skip if VF != VD
$3FE    $3743   SE       V7, #43         ; Skip if V7 == 67
$400    $9160   SNE      V1, V6          ; Skip if V1 != V6
$402    $691E   LD       V9, #1E         ; Load 30 into V9
$404    $9CBA   UNKNOWN  $9CBA           ; Unknown 9xxx instruction
$406    $C2E7   RND      V2, #E7         ; V2 = random & E7
$408    $FFCF   UNKNOWN  FFCF            ; Unknown Fxxx instruction
$40A    $47B7   SNE      V7, #B7         ; Skip if V7 != 183
$40C    $78E9   ADD      V8, #E9         ; Add 233 to V8
$40E    $C564   RND      V5, #64         ; V5 = random & 64
$410    $AD0F   LD       I, $D0F         ; Load D0F into I
$412    $811F   UNKNOWN  811F            ; Unknown 8xxx instruction
$414    $B647   JP       V0, $647        ; Jump to V0 + 647
$416    $8FB7   SUBN     VF, VB          ; VF = VB - VF, VF = !borrow
$418    $6186   LD       V1, #86         ; Load 134 into V1
$41A    $C5AB   RND      V5, #AB         ; V5 = random & AB
$41C    $E851   UNKNOWN  $E851           ; Unknown Exxx instruction
$41E    $66DC   LD       V6, #DC         ; Load 220 into V6
$420    $CABC   RND      VA, #BC         ; VA = random & BC
$422    $2B7A   CALL     $B7A            ; Call subroutine at B7A
$424    $EBE7   UNKNOWN  $EBE7           ; Unknown Exxx instruction
$426    $8E99   UNKNOWN  8E99            ; Unknown 8xxx instruction
$428    $3AE2   SE       VA, #E2         ; Skip if VA == 226
$42A    $8088   UNKNOWN  8088            ; Unknown 8xxx instruction
$42C    $76E3   ADD      V6, #E3         ; Add 227 to V6
$42E    $0645   SYS      $645            ; System call to 645
$430    $F21A   UNKNOWN  F21A            ; Unknown Fxxx instruction
$432    $00B3   SYS      $0B3            ; System call to 0B3
$434    $C33C   RND      V3, #3C         ; V3 = random & 3C
$436    $A810   LD       I, $810         ; Load 810 into I
$438    $FC8E   UNKNOWN  FC8E            ; Unknown Fxxx instruction
$43A    $7661   ADD      V6, #61         ; Add 97 to V6
$43C    $37A6   SE       V7, #A6         ; Skip if V7 == 166
$43E    $CF26   RND      VF, #26         ; VF = random & 26
$440    $489F   SNE      V8, #9F         ; Skip if V8 != 159
$442    $5325   UNKNOWN  $5325           ; Unknown 5xxx instruction
$444    $7D94   ADD      VD, #94         ; Add 148 to VD
$446    $601C   LD       V0, #1C         ; Load 28 into V0
$448    $645E   LD       V4, #5E         ; Load 94 into V4
$44A    $6122   LD       V1, #22         ; Load 34 into V1
$44C    $A536   LD       I, $536         ; Load 536 into I
$44E    $E929   UNKNOWN  $E929           ; Unknown Exxx instruction
$450    $83B0   LD       V3, VB          ; V3 = VB
$452    $9CA9   UNKNOWN  $9CA9           ; Unknown 9xxx instruction
$454    $48FD   SNE      V8, #FD         ; Skip if V8 != 253
$456    $3798   SE       V7, #98         ; Skip if V7 == 152
$458    $9784   UNKNOWN  $9784           ; Unknown 9xxx instruction
$45A    $3943   SE       V9, #43         ; Skip if V9 == 67
$45C    $9C45   UNKNOWN  $9C45           ; Unknown 9xxx instruction
$45E    $D792   DRW      V7, V9, #2      ; Draw 2-byte sprite at V7, V9
$460    $E4BC   UNKNOWN  $E4BC           ; Unknown Exxx instruction
$462    $DB58   DRW      VB, V5, #8      ; Draw 8-byte sprite at VB, V5
$464    $733E   ADD      V3, #3E         ; Add 62 to V3
$466    $005D   SYS      $05D            ; System call to 05D
$468    $624C   LD       V2, #4C         ; Load 76 into V2
$46A    $F81E   ADD      I, V8           ; I += V8
$46C    $52E6   UNKNOWN  $52E6           ; Unknown 5xxx instruction
$46E    $0D75   SYS      $D75            ; System call to D75
$470    $8312   AND      V3, V1          ; V3 &= V1
$472    $39B5   SE       V9, #B5         ; Skip if V9 == 181
$474    $8417   SUBN     V4, V1          ; V4 = V1 - V4, VF = !borrow
$476    $B0AC   JP       V0, $0AC        ; Jump to V0 + 0AC
$478    $B0E5   JP       V0, $0E5        ; Jump to V0 + 0E5
$47A    $BF62   JP       V0, $F62        ; Jump to V0 + F62
$47C    $82CD   UNKNOWN  82CD            ; Unknown 8xxx instruction
$47E    $B4C7   JP       V0, $4C7        ; Jump to V0 + 4C7
$480    $6312   LD       V3, #12         ; Load 18 into V3
$482    $19F7   JP       $9F7            ; Jump to 9F7
$484    $B010   JP       V0, $010        ; Jump to V0 + 010
$486    $4689   SNE      V6, #89         ; Skip if V6 != 137
$488    $DE34   DRW      VE, V3, #4      ; Draw 4-byte sprite at VE, V3
$48A    $5EB2   UNKNOWN  $5EB2           ; Unknown 5xxx instruction
$48C    $3A5A   SE       VA, #5A         ; Skip if VA == 90
$48E    $4487   SNE      V4, #87         ; Skip if V4 != 135
$490    $1A5C   JP       $A5C            ; Jump to A5C
$492    $65FE   LD       V5, #FE         ; Load 254 into V5
$494    $36E2   SE       V6, #E2         ; Skip if V6 == 226
$496    $30DF   SE       V0, #DF         ; Skip if V0 == 223
$498    $C618   RND      V6, #18         ; V6 = random & 18
$49A    $6035   LD       V0, #35         ; Load 53 into V0
$49C    $C703   RND      V7, #03         ; V7 = random & 03
$49E    $A42F   LD       I, $42F         ; Load 42F into I
$4A0    $3FDB   SE       VF, #DB         ; Skip if VF == 219
$4A2    $962A   UNKNOWN  $962A           ; Unknown 9xxx instruction
$4A4    $37B3   SE       V7, #B3         ; Skip if V7 == 179
$4A6    $5E09   UNKNOWN  $5E09           ; Unknown 5xxx instruction
$4A8    $8071   OR       V0, V7          ; V0 |= V7
$4AA    $E3D3   UNKNOWN  $E3D3           ; Unknown Exxx instruction
$4AC    $F4EC   UNKNOWN  F4EC            ; Unknown Fxxx instruction
$4AE    $7D52   ADD      VD, #52         ; Add 82 to VD
$4B0    $3391   SE       V3, #91         ; Skip if V3 == 145
$4B2    $3633   SE       V6, #33         ; Skip if V6 == 51
$4B4    $CF24   RND      VF, #24         ; VF = random & 24
$4B6    $5643   UNKNOWN  $5643           ; Unknown 5xxx instruction
$4B8    $36FD   SE       V6, #FD         ; Skip if V6 == 253
$4BA    $F863   UNKNOWN  F863            ; Unknown Fxxx instruction
$4BC    $43C2   SNE      V3, #C2         ; Skip if V3 != 194
$4BE    $221B   CALL     $21B            ; Call subroutine at 21B
$4C0    $C052   RND      V0, #52         ; V0 = random & 52
$4C2    $3F98   SE       VF, #98         ; Skip if VF == 152
$4C4    $A5E2   LD       I, $5E2         ; Load 5E2 into I
$4C6    $94ED   UNKNOWN  $94ED           ; Unknown 9xxx instruction
$4C8    $E7FA   UNKNOWN  $E7FA           ; Unknown Exxx instruction
$4CA    $9CA0   SNE      VC, VA          ; Skip if VC != VA
$4CC    $45C6   SNE      V5, #C6         ; Skip if V5 != 198
$4CE    $3088   SE       V0, #88         ; Skip if V0 == 136
$4D0    $B53C   JP       V0, $53C        ; Jump to V0 + 53C
$4D2    $8C36   SHR      VC              ; VC >>= 1, VF = LSB
$4D4    $AF55   LD       I, $F55         ; Load F55 into I
$4D6    $806B   UNKNOWN  806B            ; Unknown 8xxx instruction
$4D8    $72CF   ADD      V2, #CF         ; Add 207 to V2
$4DA    $8C45   SUB      VC, V4          ; VC -= V4, VF = !borrow
$4DC    $8871   OR       V8, V7          ; V8 |= V7
$4DE    $3018   SE       V0, #18         ; Skip if V0 == 24
$4E0    $C87F   RND      V8, #7F         ; V8 = random & 7F
$4E2    $E277   UNKNOWN  $E277           ; Unknown Exxx instruction
$4E4    $98C8   UNKNOWN  $98C8           ; Unknown 9xxx instruction
$4E6    $6E1B   LD       VE, #1B         ; Load 27 into VE
$4E8    $8835   SUB      V8, V3          ; V8 -= V3, VF = !borrow
$4EA    $B983   JP       V0, $983        ; Jump to V0 + 983
$4EC    $B6DF   JP       V0, $6DF        ; Jump to V0 + 6DF
$4EE    $700E   ADD      V0, #0E         ; Add 14 to V0
$4F0    $1B22   JP       $B22            ; Jump to B22
$4F2    $E0C2   UNKNOWN  $E0C2           ; Unknown Exxx instruction
$4F4    $5DCF   UNKNOWN  $5DCF           ; Unknown 5xxx instruction
$4F6    $8131   OR       V1, V3          ; V1 |= V3
$4F8    $40BA   SNE      V0, #BA         ; Skip if V0 != 186
$4FA    $5E14   UNKNOWN  $5E14           ; Unknown 5xxx instruction
$4FC    $B855   JP       V0, $855        ; Jump to V0 + 855
$4FE    $0863   SYS      $863            ; System call to 863
$500    $B2E2   JP       V0, $2E2        ; Jump to V0 + 2E2
$502    $F8A3   UNKNOWN  F8A3            ; Unknown Fxxx instruction
$504    $3954   SE       V9, #54         ; Skip if V9 == 84
$506    $1C62   JP       $C62            ; Jump to C62
$508    $2556   CALL     $556            ; Call subroutine at 556
$50A    $6552   LD       V5, #52         ; Load 82 into V5
$50C    $6A66   LD       VA, #66         ; Load 102 into VA
$50E    $CCD1   RND      VC, #D1         ; VC = random & D1
$510    $4467   SNE      V4, #67         ; Skip if V4 != 103
$512    $4ECA   SNE      VE, #CA         ; Skip if VE != 202
$514    $D49A   DRW      V4, V9, #A      ; Draw 10-byte sprite at V4, V9
$516    $3AA6   SE       VA, #A6         ; Skip if VA == 166
$518    $B622   JP       V0, $622        ; Jump to V0 + 622
$51A    $54B4   UNKNOWN  $54B4           ; Unknown 5xxx instruction
$51C    $A11B   LD       I, $11B         ; Load 11B into I
$51E    $AEB0   LD       I, $EB0         ; Load EB0 into I
$520    $4E3D   SNE      VE, #3D         ; Skip if VE != 61
$522    $410F   SNE      V1, #0F         ; Skip if V1 != 15
$524    $73D9   ADD      V3, #D9         ; Add 217 to V3
$526    $2E23   CALL     $E23            ; Call subroutine at E23
$528    $4672   SNE      V6, #72         ; Skip if V6 != 114
$52A    $67ED   LD       V7, #ED         ; Load 237 into V7
$52C    $DCC7   DRW      VC, VC, #7      ; Draw 7-byte sprite at VC, VC
$52E    $8416   SHR      V4              ; V4 >>= 1, VF = LSB
$530    $4680   SNE      V6, #80         ; Skip if V6 != 128
$532    $2F90   CALL     $F90            ; Call subroutine at F90
$534    $CCA2   RND      VC, #A2         ; VC = random & A2
$536    $8E66   SHR      VE              ; VE >>= 1, VF = LSB
$538    $3B70   SE       VB, #70         ; Skip if VB == 112
$53A    $6014   LD       V0, #14         ; Load 20 into V0
$53C    $F7DF   UNKNOWN  F7DF            ; Unknown Fxxx instruction
$53E    $19E4   JP       $9E4            ; Jump to 9E4
$540    $0D82   SYS      $D82            ; System call to D82
$542    $4B3D   SNE      VB, #3D         ; Skip if VB != 61
$544    $9A8C   UNKNOWN  $9A8C           ; Unknown 9xxx instruction
$546    $F974   UNKNOWN  F974            ; Unknown Fxxx instruction
$548    $B12A   JP       V0, $12A        ; Jump to V0 + 12A
$54A    $E604   UNKNOWN  $E604           ; Unknown Exxx instruction
$54C    $DF81   DRW      VF, V8, #1      ; Draw 1-byte sprite at VF, V8
$54E    $D5E8   DRW      V5, VE, #8      ; Draw 8-byte sprite at V5, VE
$550    $02C1   SYS      $2C1            ; System call to 2C1
$552    $ECB5   UNKNOWN  $ECB5           ; Unknown Exxx instruction
$554    $283E   CALL     $83E            ; Call subroutine at 83E
$556    $EA36   UNKNOWN  $EA36           ; Unknown Exxx instruction
$558    $8FCC   UNKNOWN  8FCC            ; Unknown 8xxx instruction
$55A    $D8B8   DRW      V8, VB, #8      ; Draw 8-byte sprite at V8, VB
$55C    $69BC   LD       V9, #BC         ; Load 188 into V9
$55E    $4042   SNE      V0, #42         ; Skip if V0 != 66
$560    $15E7   JP       $5E7            ; Jump to 5E7
$562    $5BB6   UNKNOWN  $5BB6           ; Unknown 5xxx instruction
$564    $A606   LD       I, $606         ; Load 606 into I
$566    $3037   SE       V0, #37         ; Skip if V0 == 55
$568    $BB47   JP       V0, $B47        ; Jump to V0 + B47
$56A    $42CF   SNE      V2, #CF         ; Skip if V2 != 207
$56C    $ECC5   UNKNOWN  $ECC5           ; Unknown Exxx instruction
$56E    $F0DB   UNKNOWN  F0DB            ; Unknown Fxxx instruction
$570    $1EC5   JP       $EC5            ; Jump to EC5
$572    $B608   JP       V0, $608        ; Jump to V0 + 608
$574    $CA37   RND      VA, #37         ; VA = random & 37
$576    $9579   UNKNOWN  $9579           ; Unknown 9xxx instruction
$578    $397C   SE       V9, #7C         ; Skip if V9 == 124
$57A    $CFF6   RND      VF, #F6         ; VF = random & F6
$57C    $6624   LD       V6, #24         ; Load 36 into V6
$57E    $F6D0   UNKNOWN  F6D0            ; Unknown Fxxx instruction
$580    $8798   UNKNOWN  8798            ; Unknown 8xxx instruction
$582    $8EB2   AND      VE, VB          ; VE &= VB
$584    $5B79   UNKNOWN  $5B79           ; Unknown 5xxx instruction
$586    $2CEF   CALL     $CEF            ; Call subroutine at CEF
$588    $C363   RND      V3, #63         ; V3 = random & 63
$58A    $4D27   SNE      VD, #27         ; Skip if VD != 39
$58C    $C77D   RND      V7, #7D         ; V7 = random & 7D
$58E    $E7B8   UNKNOWN  $E7B8           ; Unknown Exxx instruction
$590    $A795   LD       I, $795         ; Load 795 into I
$592    $1CFE   JP       $CFE            ; Jump to CFE
$594    $ECA2   UNKNOWN  $ECA2           ; Unknown Exxx instruction
$596    $C54A   RND      V5, #4A         ; V5 = random & 4A
$598    $E695   UNKNOWN  $E695           ; Unknown Exxx instruction
$59A    $ABBD   LD       I, $BBD         ; Load BBD into I
$59C    $2A04   CALL     $A04            ; Call subroutine at A04
$59E    $4ED0   SNE      VE, #D0         ; Skip if VE != 208
$5A0    $9A30   SNE      VA, V3          ; Skip if VA != V3
$5A2    $2438   CALL     $438            ; Call subroutine at 438
$5A4    $3164   SE       V1, #64         ; Skip if V1 == 100
$5A6    $42D6   SNE      V2, #D6         ; Skip if V2 != 214
$5A8    $C7E6   RND      V7, #E6         ; V7 = random & E6
$5AA    $B25B   JP       V0, $25B        ; Jump to V0 + 25B
$5AC    $0F0E   SYS      $F0E            ; System call to F0E
$5AE    $147C   JP       $47C            ; Jump to 47C
$5B0    $8C1B   UNKNOWN  8C1B            ; Unknown 8xxx instruction
$5B2    $2A75   CALL     $A75            ; Call subroutine at A75
$5B4    $ED30   UNKNOWN  $ED30           ; Unknown Exxx instruction
$5B6    $D175   DRW      V1, V7, #5      ; Draw 5-byte sprite at V1, V7
$5B8    $4179   SNE      V1, #79         ; Skip if V1 != 121
$5BA    $9546   UNKNOWN  $9546           ; Unknown 9xxx instruction
$5BC    $D57D   DRW      V5, V7, #D      ; Draw 13-byte sprite at V5, V7
$5BE    $00AE   SYS      $0AE            ; System call to 0AE
$5C0    $E7D5   UNKNOWN  $E7D5           ; Unknown Exxx instruction
$5C2    $8A45   SUB      VA, V4          ; VA -= V4, VF = !borrow
$5C4    $EC78   UNKNOWN  $EC78           ; Unknown Exxx instruction
$5C6    $385B   SE       V8, #5B         ; Skip if V8 == 91
$5C8    $6A13   LD       VA, #13         ; Load 19 into VA
$5CA    $6C47   LD       VC, #47         ; Load 71 into VC
$5CC    $8862   AND      V8, V6          ; V8 &= V6
$5CE    $EF79   UNKNOWN  $EF79           ; Unknown Exxx instruction
$5D0    $B2D8   JP       V0, $2D8        ; Jump to V0 + 2D8
$5D2    $0412   SYS      $412            ; System call to 412
$5D4    $75D9   ADD      V5, #D9         ; Add 217 to V5
$5D6    $93F4   UNKNOWN  $93F4           ; Unknown 9xxx instruction
$5D8    $0307   SYS      $307            ; System call to 307
$5DA    $20F9   CALL     $0F9            ; Call subroutine at 0F9
$5DC    $F937   UNKNOWN  F937            ; Unknown Fxxx instruction
$5DE    $244F   CALL     $44F            ; Call subroutine at 44F
$5E0    $478D   SNE      V7, #8D         ; Skip if V7 != 141
$5E2    $106D   JP       $06D            ; Jump to 06D
$5E4    $276D   CALL     $76D            ; Call subroutine at 76D
$5E6    $2D17   CALL     $D17            ; Call subroutine at D17
$5E8    $50BD   UNKNOWN  $50BD           ; Unknown 5xxx instruction
$5EA    $F099   UNKNOWN  F099            ; Unknown Fxxx instruction
$5EC    $A006   LD       I, $006         ; Load 006 into I
$5EE    $7D2E   ADD      VD, #2E         ; Add 46 to VD
$5F0    $9269   UNKNOWN  $9269           ; Unknown 9xxx instruction
$5F2    $6132   LD       V1, #32         ; Load 50 into V1
$5F4    $9C8B   UNKNOWN  $9C8B           ; Unknown 9xxx instruction
$5F6    $D304   DRW      V3, V0, #4      ; Draw 4-byte sprite at V3, V0
$5F8    $99E9   UNKNOWN  $99E9           ; Unknown 9xxx instruction
$5FA    $9EC0   SNE      VE, VC          ; Skip if VE != VC
$5FC    $8A75   SUB      VA, V7          ; VA -= V7, VF = !borrow
$5FE    $C565   RND      V5, #65         ; V5 = random & 65
$600    $33E9   SE       V3, #E9         ; Skip if V3 == 233
$602    $1D50   JP       $D50            ; Jump to D50
$604    $AB68   LD       I, $B68         ; Load B68 into I
$606    $DD18   DRW      VD, V1, #8      ; Draw 8-byte sprite at VD, V1
$608    $A929   LD       I, $929         ; Load 929 into I
$60A    $A760   LD       I, $760         ; Load 760 into I
$60C    $E6FD   UNKNOWN  $E6FD           ; Unknown Exxx instruction
$60E    $0CB7   SYS      $CB7            ; System call to CB7
$610    $254B   CALL     $54B            ; Call subroutine at 54B
$612    $C573   RND      V5, #73         ; V5 = random & 73
$614    $44E3   SNE      V4, #E3         ; Skip if V4 != 227
$616    $0C19   SYS      $C19            ; System call to C19
$618    $F1C4   UNKNOWN  F1C4            ; Unknown Fxxx instruction
$61A    $FA42   UNKNOWN  FA42            ; Unknown Fxxx instruction
$61C    $E577   UNKNOWN  $E577           ; Unknown Exxx instruction
$61E    $2C96   CALL     $C96            ; Call subroutine at C96
$620    $215A   CALL     $15A            ; Call subroutine at 15A
$622    $0DF9   SYS      $DF9            ; System call to DF9
$624    $E3C1   UNKNOWN  $E3C1           ; Unknown Exxx instruction
$626    $50B5   UNKNOWN  $50B5           ; Unknown 5xxx instruction
$628    $C166   RND      V1, #66         ; V1 = random & 66
$62A    $BD3D   JP       V0, $D3D        ; Jump to V0 + D3D
$62C    $BA47   JP       V0, $A47        ; Jump to V0 + A47
$62E    $B6C5   JP       V0, $6C5        ; Jump to V0 + 6C5
$630    $6753   LD       V7, #53         ; Load 83 into V7
$632    $9D77   UNKNOWN  $9D77           ; Unknown 9xxx instruction
$634    $24BD   CALL     $4BD            ; Call subroutine at 4BD
$636    $292F   CALL     $92F            ; Call subroutine at 92F
$638    $E5F2   UNKNOWN  $E5F2           ; Unknown Exxx instruction
$63A    $EB6D   UNKNOWN  $EB6D           ; Unknown Exxx instruction
$63C    $E1CA   UNKNOWN  $E1CA           ; Unknown Exxx instruction
$63E    $B518   JP       V0, $518        ; Jump to V0 + 518
$640    $8C22   AND      VC, V2          ; VC &= V2
$642    $47BF   SNE      V7, #BF         ; Skip if V7 != 191
$644    $0550   SYS      $550            ; System call to 550
$646    $B9A8   JP       V0, $9A8        ; Jump to V0 + 9A8
$648    $4A2F   SNE      VA, #2F         ; Skip if VA != 47
$64A    $92A3   UNKNOWN  $92A3           ; Unknown 9xxx instruction
$64C    $B0A9   JP       V0, $0A9        ; Jump to V0 + 0A9
$64E    $0E47   SYS      $E47            ; System call to E47
$650    $802F   UNKNOWN  802F            ; Unknown 8xxx instruction
$652    $B3A6   JP       V0, $3A6        ; Jump to V0 + 3A6
$654    $3CB4   SE       VC, #B4         ; Skip if VC == 180
$656    $0B25   SYS      $B25            ; System call to B25
$658    $7EF4   ADD      VE, #F4         ; Add 244 to VE
$65A    $8301   OR       V3, V0          ; V3 |= V0
$65C    $19B6   JP       $9B6            ; Jump to 9B6
$65E    $FCD7   UNKNOWN  FCD7            ; Unknown Fxxx instruction
$660    $46F5   SNE      V6, #F5         ; Skip if V6 != 245
$662    $59B5   UNKNOWN  $59B5           ; Unknown 5xxx instruction
$664    $113C   JP       $13C            ; Jump to 13C
$666    $7292   ADD      V2, #92         ; Add 146 to V2
$668    $1E56   JP       $E56            ; Jump to E56
$66A    $6ABB   LD       VA, #BB         ; Load 187 into VA
$66C    $DF96   DRW      VF, V9, #6      ; Draw 6-byte sprite at VF, V9
$66E    $8623   XOR      V6, V2          ; V6 ^= V2
$670    $0FB9   SYS      $FB9            ; System call to FB9
$672    $5CCA   UNKNOWN  $5CCA           ; Unknown 5xxx instruction
$674    $9F01   UNKNOWN  $9F01           ; Unknown 9xxx instruction
$676    $1CFD   JP       $CFD            ; Jump to CFD
$678    $8FD5   SUB      VF, VD          ; VF -= VD, VF = !borrow
$67A    $CF04   RND      VF, #04         ; VF = random & 04
$67C    $F6BE   UNKNOWN  F6BE            ; Unknown Fxxx instruction
$67E    $2D55   CALL     $D55            ; Call subroutine at D55
$680    $9945   UNKNOWN  $9945           ; Unknown 9xxx instruction
$682    $AC84   LD       I, $C84         ; Load C84 into I
$684    $C438   RND      V4, #38         ; V4 = random & 38
$686    $C5BD   RND      V5, #BD         ; V5 = random & BD
$688    $20E2   CALL     $0E2            ; Call subroutine at 0E2
$68A    $E93B   UNKNOWN  $E93B           ; Unknown Exxx instruction
$68C    $F79D   UNKNOWN  F79D            ; Unknown Fxxx instruction
$68E    $084D   SYS      $84D            ; System call to 84D
$690    $BFE0   JP       V0, $FE0        ; Jump to V0 + FE0
$692    $4FCD   SNE      VF, #CD         ; Skip if VF != 205
$694    $CAF9   RND      VA, #F9         ; VA = random & F9
$696    $4236   SNE      V2, #36         ; Skip if V2 != 54
$698    $2AA8   CALL     $AA8            ; Call subroutine at AA8
$69A    $74D5   ADD      V4, #D5         ; Add 213 to V4
$69C    $1B5B   JP       $B5B            ; Jump to B5B
$69E    $5B6A   UNKNOWN  $5B6A           ; Unknown 5xxx instruction
$6A0    $62CE   LD       V2, #CE         ; Load 206 into V2
$6A2    $987D   UNKNOWN  $987D           ; Unknown 9xxx instruction
$6A4    $ADCB   LD       I, $DCB         ; Load DCB into I
$6A6    $E84D   UNKNOWN  $E84D           ; Unknown Exxx instruction
$6A8    $C643   RND      V6, #43         ; V6 = random & 43
$6AA    $7D2D   ADD      VD, #2D         ; Add 45 to VD
$6AC    $E641   UNKNOWN  $E641           ; Unknown Exxx instruction
$6AE    $1132   JP       $132            ; Jump to 132
$6B0    $CBD8   RND      VB, #D8         ; VB = random & D8
$6B2    $6C3C   LD       VC, #3C         ; Load 60 into VC
$6B4    $A151   LD       I, $151         ; Load 151 into I
$6B6    $F154   UNKNOWN  F154            ; Unknown Fxxx instruction
$6B8    $AF36   LD       I, $F36         ; Load F36 into I
$6BA    $8DAA   UNKNOWN  8DAA            ; Unknown 8xxx instruction
$6BC    $252A   CALL     $52A            ; Call subroutine at 52A
$6BE    $1576   JP       $576            ; Jump to 576
$6C0    $F001   UNKNOWN  F001            ; Unknown Fxxx instruction
$6C2    $EA50   UNKNOWN  $EA50           ; Unknown Exxx instruction
$6C4    $CACD   RND      VA, #CD         ; VA = random & CD
$6C6    $E59D   UNKNOWN  $E59D           ; Unknown Exxx instruction
$6C8    $61CA   LD       V1, #CA         ; Load 202 into V1
$6CA    $A13A   LD       I, $13A         ; Load 13A into I
$6CC    $85E2   AND      V5, VE          ; V5 &= VE
$6CE    $2EAA   CALL     $EAA            ; Call subroutine at EAA
$6D0    $F240   UNKNOWN  F240            ; Unknown Fxxx instruction
$6D2    $66E2   LD       V6, #E2         ; Load 226 into V6
$6D4    $C577   RND      V5, #77         ; V5 = random & 77
$6D6    $5FCA   UNKNOWN  $5FCA           ; Unknown 5xxx instruction
$6D8    $9E7D   UNKNOWN  $9E7D           ; Unknown 9xxx instruction
$6DA    $073B   SYS      $73B            ; System call to 73B
$6DC    $4B0E   SNE      VB, #0E         ; Skip if VB != 14
$6DE    $A4C2   LD       I, $4C2         ; Load 4C2 into I
$6E0    $A7BC   LD       I, $7BC         ; Load 7BC into I
$6E2    $878C   UNKNOWN  878C            ; Unknown 8xxx instruction
$6E4    $48DC   SNE      V8, #DC         ; Skip if V8 != 220
$6E6    $ABAE   LD       I, $BAE         ; Load BAE into I
$6E8    $85FB   UNKNOWN  85FB            ; Unknown 8xxx instruction
$6EA    $B338   JP       V0, $338        ; Jump to V0 + 338
$6EC    $9D0D   UNKNOWN  $9D0D           ; Unknown 9xxx instruction
$6EE    $066A   SYS      $66A            ; System call to 66A
$6F0    $DBE7   DRW      VB, VE, #7      ; Draw 7-byte sprite at VB, VE
$6F2    $D189   DRW      V1, V8, #9      ; Draw 9-byte sprite at V1, V8
$6F4    $9097   UNKNOWN  $9097           ; Unknown 9xxx instruction
$6F6    $12BB   JP       $2BB            ; Jump to 2BB
$6F8    $8C49   UNKNOWN  8C49            ; Unknown 8xxx instruction
$6FA    $7C40   ADD      VC, #40         ; Add 64 to VC
$6FC    $9FBF   UNKNOWN  $9FBF           ; Unknown 9xxx instruction
$6FE    $86A7   SUBN     V6, VA          ; V6 = VA - V6, VF = !borrow
$700    $14B1   JP       $4B1            ; Jump to 4B1
$702    $003F   SYS      $03F            ; System call to 03F
$704    $80F4   ADD      V0, VF          ; V0 += VF, VF = carry
$706    $B00B   JP       V0, $00B        ; Jump to V0 + 00B
$708    $C39E   RND      V3, #9E         ; V3 = random & 9E
$70A    $BFF2   JP       V0, $FF2        ; Jump to V0 + FF2
$70C    $2174   CALL     $174            ; Call subroutine at 174
$70E    $8F4A   UNKNOWN  8F4A            ; Unknown 8xxx instruction
$710    $B1FF   JP       V0, $1FF        ; Jump to V0 + 1FF
$712    $1343   JP       $343            ; Jump to 343
$714    $C576   RND      V5, #76         ; V5 = random & 76
$716    $6DB1   LD       VD, #B1         ; Load 177 into VD
$718    $CF3C   RND      VF, #3C         ; VF = random & 3C
$71A    $2890   CALL     $890            ; Call subroutine at 890
$71C    $F4BE   UNKNOWN  F4BE            ; Unknown Fxxx instruction
$71E    $D84E   DRW      V8, V4, #E      ; Draw 14-byte sprite at V8, V4
$720    $D372   DRW      V3, V7, #2      ; Draw 2-byte sprite at V3, V7
$722    $B522   JP       V0, $522        ; Jump to V0 + 522
$724    $4275   SNE      V2, #75         ; Skip if V2 != 117
$726    $B22A   JP       V0, $22A        ; Jump to V0 + 22A
$728    $AC8B   LD       I, $C8B         ; Load C8B into I
$72A    $0FB9   SYS      $FB9            ; System call to FB9
$72C    $E443   UNKNOWN  $E443           ; Unknown Exxx instruction
$72E    $7C23   ADD      VC, #23         ; Add 35 to VC
$730    $41AD   SNE      V1, #AD         ; Skip if V1 != 173
$732    $783E   ADD      V8, #3E         ; Add 62 to V8
$734    $2A39   CALL     $A39            ; Call subroutine at A39
$736    $A1A2   LD       I, $1A2         ; Load 1A2 into I
$738    $1566   JP       $566            ; Jump to 566
$73A    $1E1C   JP       $E1C            ; Jump to E1C
$73C    $8DA0   LD       VD, VA          ; VD = VA
$73E    $4C28   SNE      VC, #28         ; Skip if VC != 40
$740    $7F7F   ADD      VF, #7F         ; Add 127 to VF
$742    $AC6C   LD       I, $C6C         ; Load C6C into I
$744    $62D3   LD       V2, #D3         ; Load 211 into V2
$746    $6A8A   LD       VA, #8A         ; Load 138 into VA
$748    $CFF8   RND      VF, #F8         ; VF = random & F8
$74A    $9EDF   UNKNOWN  $9EDF           ; Unknown 9xxx instruction
$74C    $75E4   ADD      V5, #E4         ; Add 228 to V5
$74E    $D8E9   DRW      V8, VE, #9      ; Draw 9-byte sprite at V8, VE
$750    $50B1   UNKNOWN  $50B1           ; Unknown 5xxx instruction
$752    $4C87   SNE      VC, #87         ; Skip if VC != 135
$754    $B2AF   JP       V0, $2AF        ; Jump to V0 + 2AF
$756    $3856   SE       V8, #56         ; Skip if V8 == 86
$758    $F01E   ADD      I, V0           ; I += V0
$75A    $73A1   ADD      V3, #A1         ; Add 161 to V3
$75C    $E44B   UNKNOWN  $E44B           ; Unknown Exxx instruction
$75E    $BF39   JP       V0, $F39        ; Jump to V0 + F39
$760    $FDD9   UNKNOWN  FDD9            ; Unknown Fxxx instruction
$762    $221F   CALL     $21F            ; Call subroutine at 21F
$764    $2E2C   CALL     $E2C            ; Call subroutine at E2C
$766    $606C   LD       V0, #6C         ; Load 108 into V0
$768    $4B61   SNE      VB, #61         ; Skip if VB != 97
$76A    $17FF   JP       $7FF            ; Jump to 7FF
$76C    $96E5   UNKNOWN  $96E5           ; Unknown 9xxx instruction
$76E    $82F3   XOR      V2, VF          ; V2 ^= VF
$770    $C063   RND      V0, #63         ; V0 = random & 63
$772    $1214   JP       $214            ; Jump to 214
$774    $CD5F   RND      VD, #5F         ; VD = random & 5F
$776    $1951   JP       $951            ; Jump to 951
$778    $C991   RND      V9, #91         ; V9 = random & 91
$77A    $7B74   ADD      VB, #74         ; Add 116 to VB
$77C    $F61E   ADD      I, V6           ; I += V6
$77E    $382D   SE       V8, #2D         ; Skip if V8 == 45
$780    $8B94   ADD      VB, V9          ; VB += V9, VF = carry
$782    $811E   SHL      V1              ; V1 <<= 1, VF = MSB
$784    $25CA   CALL     $5CA            ; Call subroutine at 5CA
$786    $D464   DRW      V4, V6, #4      ; Draw 4-byte sprite at V4, V6
$788    $FFCD   UNKNOWN  FFCD            ; Unknown Fxxx instruction
$78A    $E461   UNKNOWN  $E461           ; Unknown Exxx instruction
$78C    $DA80   DRW      VA, V8, #0      ; Draw 0-byte sprite at VA, V8
$78E    $04FA   SYS      $4FA            ; System call to 4FA
$790    $EA4D   UNKNOWN  $EA4D           ; Unknown Exxx instruction
$792    $9209   UNKNOWN  $9209           ; Unknown 9xxx instruction
$794    $D11F   DRW      V1, V1, #F      ; Draw 15-byte sprite at V1, V1
$796    $E77B   UNKNOWN  $E77B           ; Unknown Exxx instruction
$798    $8756   SHR      V7              ; V7 >>= 1, VF = LSB
$79A    $0A43   SYS      $A43            ; System call to A43
$79C    $AF85   LD       I, $F85         ; Load F85 into I
$79E    $3C72   SE       VC, #72         ; Skip if VC == 114
$7A0    $5C98   UNKNOWN  $5C98           ; Unknown 5xxx instruction
$7A2    $68E6   LD       V8, #E6         ; Load 230 into V8
$7A4    $DEAA   DRW      VE, VA, #A      ; Draw 10-byte sprite at VE, VA
$7A6    $14FC   JP       $4FC            ; Jump to 4FC
$7A8    $5E57   UNKNOWN  $5E57           ; Unknown 5xxx instruction
$7AA    $EBB7   UNKNOWN  $EBB7           ; Unknown Exxx instruction
$7AC    $637D   LD       V3, #7D         ; Load 125 into V3
$7AE    $B48B   JP       V0, $48B        ; Jump to V0 + 48B
$7B0    $1CAD   JP       $CAD            ; Jump to CAD
$7B2    $09EA   SYS      $9EA            ; System call to 9EA
$7B4    $22F5   CALL     $2F5            ; Call subroutine at 2F5
$7B6    $596B   UNKNOWN  $596B           ; Unknown 5xxx instruction
$7B8    $BCAE   JP       V0, $CAE        ; Jump to V0 + CAE
$7BA    $70D3   ADD      V0, #D3         ; Add 211 to V0
$7BC    $AB23   LD       I, $B23         ; Load B23 into I
$7BE    $F11C   UNKNOWN  F11C            ; Unknown Fxxx instruction
$7C0    $D278   DRW      V2, V7, #8      ; Draw 8-byte sprite at V2, V7
$7C2    $38AE   SE       V8, #AE         ; Skip if V8 == 174
$7C4    $E82A   UNKNOWN  $E82A           ; Unknown Exxx instruction
$7C6    $7077   ADD      V0, #77         ; Add 119 to V0
$7C8    $E245   UNKNOWN  $E245           ; Unknown Exxx instruction
$7CA    $1C62   JP       $C62            ; Jump to C62
$7CC    $E3D0   UNKNOWN  $E3D0           ; Unknown Exxx instruction
$7CE    $A80A   LD       I, $80A         ; Load 80A into I
$7D0    $FC3E   UNKNOWN  FC3E            ; Unknown Fxxx instruction
$7D2    $F722   UNKNOWN  F722            ; Unknown Fxxx instruction
$7D4    $9DE7   UNKNOWN  $9DE7           ; Unknown 9xxx instruction
$7D6    $F668   UNKNOWN  F668            ; Unknown Fxxx instruction
$7D8    $73E7   ADD      V3, #E7         ; Add 231 to V3
$7DA    $C6A9   RND      V6, #A9         ; V6 = random & A9
$7DC    $3CAE   SE       VC, #AE         ; Skip if VC == 174
$7DE    $2554   CALL     $554            ; Call subroutine at 554
$7E0    $47D5   SNE      V7, #D5         ; Skip if V7 != 213
$7E2    $7514   ADD      V5, #14         ; Add 20 to V5
$7E4    $667A   LD       V6, #7A         ; Load 122 into V6
$7E6    $2944   CALL     $944            ; Call subroutine at 944
$7E8    $A076   LD       I, $076         ; Load 076 into I
$7EA    $D0B5   DRW      V0, VB, #5      ; Draw 5-byte sprite at V0, VB
$7EC    $B8A5   JP       V0, $8A5        ; Jump to V0 + 8A5
$7EE    $682C   LD       V8, #2C         ; Load 44 into V8
$7F0    $033F   SYS      $33F            ; System call to 33F
$7F2    $7C3A   ADD      VC, #3A         ; Add 58 to VC
$7F4    $72D5   ADD      V2, #D5         ; Add 213 to V2
$7F6    $F8D6   UNKNOWN  F8D6            ; Unknown Fxxx instruction
$7F8    $B7BF   JP       V0, $7BF        ; Jump to V0 + 7BF
$7FA    $7432   ADD      V4, #32         ; Add 50 to V4
$7FC    $796D   ADD      V9, #6D         ; Add 109 to V9
$7FE    $3470   SE       V4, #70         ; Skip if V4 == 112
$800    $06F7   SYS      $6F7            ; System call to 6F7
$802    $4C70   SNE      VC, #70         ; Skip if VC != 112
$804    $1857   JP       $857            ; Jump to 857
$806    $4C0A   SNE      VC, #0A         ; Skip if VC != 10
$808    $23FB   CALL     $3FB            ; Call subroutine at 3FB
$80A    $33A2   SE       V3, #A2         ; Skip if V3 == 162
$80C    $6104   LD       V1, #04         ; Load 4 into V1
$80E    $871D   UNKNOWN  871D            ; Unknown 8xxx instruction
$810    $369F   SE       V6, #9F         ; Skip if V6 == 159
$812    $0E23   SYS      $E23            ; System call to E23
$814    $FE6E   UNKNOWN  FE6E            ; Unknown Fxxx instruction
$816    $B2C5   JP       V0, $2C5        ; Jump to V0 + 2C5
$818    $D6AA   DRW      V6, VA, #A      ; Draw 10-byte sprite at V6, VA
$81A    $FD97   UNKNOWN  FD97            ; Unknown Fxxx instruction
$81C    $C899   RND      V8, #99         ; V8 = random & 99
$81E    $79CC   ADD      V9, #CC         ; Add 204 to V9
$820    $45EB   SNE      V5, #EB         ; Skip if V5 != 235
$822    $B242   JP       V0, $242        ; Jump to V0 + 242
$824    $FAB7   UNKNOWN  FAB7            ; Unknown Fxxx instruction
$826    $1E28   JP       $E28            ; Jump to E28
$828    $8F91   OR       VF, V9          ; VF |= V9
$82A    $5C0E   UNKNOWN  $5C0E           ; Unknown 5xxx instruction
$82C    $451A   SNE      V5, #1A         ; Skip if V5 != 26
$82E    $EA81   UNKNOWN  $EA81           ; Unknown Exxx instruction
$830    $09C5   SYS      $9C5            ; System call to 9C5
$832    $E12F   UNKNOWN  $E12F           ; Unknown Exxx instruction
$834    $16A9   JP       $6A9            ; Jump to 6A9
$836    $FC1D   UNKNOWN  FC1D            ; Unknown Fxxx instruction
$838    $F23C   UNKNOWN  F23C            ; Unknown Fxxx instruction
$83A    $262D   CALL     $62D            ; Call subroutine at 62D
$83C    $736A   ADD      V3, #6A         ; Add 106 to V3
$83E    $2A46   CALL     $A46            ; Call subroutine at A46
$840    $0236   SYS      $236            ; System call to 236
$842    $7A42   ADD      VA, #42         ; Add 66 to VA
$844    $973C   UNKNOWN  $973C           ; Unknown 9xxx instruction
$846    $2098   CALL     $098            ; Call subroutine at 098
$848    $A8AB   LD       I, $8AB         ; Load 8AB into I
$84A    $8446   SHR      V4              ; V4 >>= 1, VF = LSB
$84C    $2E12   CALL     $E12            ; Call subroutine at E12
$84E    $DE2C   DRW      VE, V2, #C      ; Draw 12-byte sprite at VE, V2
$850    $3907   SE       V9, #07         ; Skip if V9 == 7
$852    $A6FF   LD       I, $6FF         ; Load 6FF into I
$854    $8F3E   SHL      VF              ; VF <<= 1, VF = MSB
$856    $7777   ADD      V7, #77         ; Add 119 to V7
$858    $835E   SHL      V3              ; V3 <<= 1, VF = MSB
$85A    $9F6F   UNKNOWN  $9F6F           ; Unknown 9xxx instruction
$85C    $EF84   UNKNOWN  $EF84           ; Unknown Exxx instruction
$85E    $4639   SNE      V6, #39         ; Skip if V6 != 57
$860    $43DA   SNE      V3, #DA         ; Skip if V3 != 218
$862    $E4AE   UNKNOWN  $E4AE           ; Unknown Exxx instruction
$864    $63EA   LD       V3, #EA         ; Load 234 into V3
$866    $643F   LD       V4, #3F         ; Load 63 into V4
$868    $B27C   JP       V0, $27C        ; Jump to V0 + 27C
$86A    $826C   UNKNOWN  826C            ; Unknown 8xxx instruction
$86C    $E117   UNKNOWN  $E117           ; Unknown Exxx instruction
$86E    $195C   JP       $95C            ; Jump to 95C
$870    $BA1C   JP       V0, $A1C        ; Jump to V0 + A1C
$872    $B051   JP       V0, $051        ; Jump to V0 + 051
$874    $A0B2   LD       I, $0B2         ; Load 0B2 into I
$876    $9F55   UNKNOWN  $9F55           ; Unknown 9xxx instruction
$878    $CD76   RND      VD, #76         ; VD = random & 76
$87A    $5780   SE       V7, V8          ; Skip if V7 == V8
$87C    $4A25   SNE      VA, #25         ; Skip if VA != 37
$87E    $E496   UNKNOWN  $E496           ; Unknown Exxx instruction
$880    $CDC4   RND      VD, #C4         ; VD = random & C4
$882    $2F18   CALL     $F18            ; Call subroutine at F18
$884    $E17D   UNKNOWN  $E17D           ; Unknown Exxx instruction
$886    $909B   UNKNOWN  $909B           ; Unknown 9xxx instruction
$888    $EE43   UNKNOWN  $EE43           ; Unknown Exxx instruction
$88A    $0D41   SYS      $D41            ; System call to D41
$88C    $4D92   SNE      VD, #92         ; Skip if VD != 146
$88E    $A6EA   LD       I, $6EA         ; Load 6EA into I
$890    $6C4D   LD       VC, #4D         ; Load 77 into VC
$892    $F304   UNKNOWN  F304            ; Unknown Fxxx instruction
$894    $68D7   LD       V8, #D7         ; Load 215 into V8
$896    $FE21   UNKNOWN  FE21            ; Unknown Fxxx instruction
$898    $0634   SYS      $634            ; System call to 634
$89A    $007D   SYS      $07D            ; System call to 07D
$89C    $F0B7   UNKNOWN  F0B7            ; Unknown Fxxx instruction
$89E    $0D79   SYS      $D79            ; System call to D79
$8A0    $3BE9   SE       VB, #E9         ; Skip if VB == 233
$8A2    $8C05   SUB      VC, V0          ; VC -= V0, VF = !borrow
$8A4    $2A80   CALL     $A80            ; Call subroutine at A80
$8A6    $68E8   LD       V8, #E8         ; Load 232 into V8
$8A8    $E871   UNKNOWN  $E871           ; Unknown Exxx instruction
$8AA    $406B   SNE      V0, #6B         ; Skip if V0 != 107
$8AC    $6A22   LD       VA, #22         ; Load 34 into VA
$8AE    $E5F6   UNKNOWN  $E5F6           ; Unknown Exxx instruction
$8B0    $179E   JP       $79E            ; Jump to 79E
$8B2    $1CE4   JP       $CE4            ; Jump to CE4
$8B4    $7B6F   ADD      VB, #6F         ; Add 111 to VB
$8B6    $B6A3   JP       V0, $6A3        ; Jump to V0 + 6A3
$8B8    $9D02   UNKNOWN  $9D02           ; Unknown 9xxx instruction
$8BA    $36C7   SE       V6, #C7         ; Skip if V6 == 199
$8BC    $1D54   JP       $D54            ; Jump to D54
$8BE    $FEE6   UNKNOWN  FEE6            ; Unknown Fxxx instruction
$8C0    $983B   UNKNOWN  $983B           ; Unknown 9xxx instruction
$8C2    $FC1A   UNKNOWN  FC1A            ; Unknown Fxxx instruction
$8C4    $332A   SE       V3, #2A         ; Skip if V3 == 42
$8C6    $10A1   JP       $0A1            ; Jump to 0A1
$8C8    $3A0C   SE       VA, #0C         ; Skip if VA == 12
$8CA    $339A   SE       V3, #9A         ; Skip if V3 == 154
$8CC    $4747   SNE      V7, #47         ; Skip if V7 != 71
$8CE    $1054   JP       $054            ; Jump to 054
$8D0    $1126   JP       $126            ; Jump to 126
$8D2    $BC1A   JP       V0, $C1A        ; Jump to V0 + C1A
$8D4    $F895   UNKNOWN  F895            ; Unknown Fxxx instruction
$8D6    $FB8F   UNKNOWN  FB8F            ; Unknown Fxxx instruction
$8D8    $36CB   SE       V6, #CB         ; Skip if V6 == 203
$8DA    $BA78   JP       V0, $A78        ; Jump to V0 + A78
$8DC    $6823   LD       V8, #23         ; Load 35 into V8
$8DE    $10E1   JP       $0E1            ; Jump to 0E1
$8E0    $DCFE   DRW      VC, VF, #E      ; Draw 14-byte sprite at VC, VF
$8E2    $F0D3   UNKNOWN  F0D3            ; Unknown Fxxx instruction
$8E4    $1D8C   JP       $D8C            ; Jump to D8C
$8E6    $1BB0   JP       $BB0            ; Jump to BB0
$8E8    $EF50   UNKNOWN  $EF50           ; Unknown Exxx instruction
$8EA    $4017   SNE      V0, #17         ; Skip if V0 != 23
$8EC    $F72D   UNKNOWN  F72D            ; Unknown Fxxx instruction
$8EE    $74EA   ADD      V4, #EA         ; Add 234 to V4
$8F0    $358A   SE       V5, #8A         ; Skip if V5 == 138
$8F2    $2EAE   CALL     $EAE            ; Call subroutine at EAE
$8F4    $E609   UNKNOWN  $E609           ; Unknown Exxx instruction
$8F6    $76AB   ADD      V6, #AB         ; Add 171 to V6
$8F8    $FBB4   UNKNOWN  FBB4            ; Unknown Fxxx instruction
$8FA    $EB50   UNKNOWN  $EB50           ; Unknown Exxx instruction
$8FC    $73CF   ADD      V3, #CF         ; Add 207 to V3
$8FE    $E24C   UNKNOWN  $E24C           ; Unknown Exxx instruction
$900    $DAE7   DRW      VA, VE, #7      ; Draw 7-byte sprite at VA, VE
$902    $2FA5   CALL     $FA5            ; Call subroutine at FA5
$904    $5322   UNKNOWN  $5322           ; Unknown 5xxx instruction
$906    $7122   ADD      V1, #22         ; Add 34 to V1
$908    $5468   UNKNOWN  $5468           ; Unknown 5xxx instruction
$90A    $7136   ADD      V1, #36         ; Add 54 to V1
$90C    $1DF2   JP       $DF2            ; Jump to DF2
$90E    $03B5   SYS      $3B5            ; System call to 3B5
$910    $6284   LD       V2, #84         ; Load 132 into V2
$912    $61DA   LD       V1, #DA         ; Load 218 into V1
$914    $6130   LD       V1, #30         ; Load 48 into V1
$916    $D97F   DRW      V9, V7, #F      ; Draw 15-byte sprite at V9, V7
$918    $E01A   UNKNOWN  $E01A           ; Unknown Exxx instruction
$91A    $005C   SYS      $05C            ; System call to 05C
$91C    $8D21   OR       VD, V2          ; VD |= V2
$91E    $EA09   UNKNOWN  $EA09           ; Unknown Exxx instruction
$920    $4330   SNE      V3, #30         ; Skip if V3 != 48
$922    $9C59   UNKNOWN  $9C59           ; Unknown 9xxx instruction
$924    $CFA4   RND      VF, #A4         ; VF = random & A4
$926    $067A   SYS      $67A            ; System call to 67A
$928    $C6F7   RND      V6, #F7         ; V6 = random & F7
$92A    $6054   LD       V0, #54         ; Load 84 into V0
$92C    $EC05   UNKNOWN  $EC05           ; Unknown Exxx instruction
$92E    $CBD7   RND      VB, #D7         ; VB = random & D7
$930    $C90E   RND      V9, #0E         ; V9 = random & 0E
$932    $D541   DRW      V5, V4, #1      ; Draw 1-byte sprite at V5, V4
$934    $B3DB   JP       V0, $3DB        ; Jump to V0 + 3DB
$936    $9D8D   UNKNOWN  $9D8D           ; Unknown 9xxx instruction
$938    $1BBC   JP       $BBC            ; Jump to BBC
$93A    $4436   SNE      V4, #36         ; Skip if V4 != 54
$93C    $ACC2   LD       I, $CC2         ; Load CC2 into I
$93E    $B162   JP       V0, $162        ; Jump to V0 + 162
$940    $773B   ADD      V7, #3B         ; Add 59 to V7
$942    $E71C   UNKNOWN  $E71C           ; Unknown Exxx instruction
$944    $5C9A   UNKNOWN  $5C9A           ; Unknown 5xxx instruction
$946    $663C   LD       V6, #3C         ; Load 60 into V6
$948    $C9D3   RND      V9, #D3         ; V9 = random & D3
$94A    $9D43   UNKNOWN  $9D43           ; Unknown 9xxx instruction
$94C    $C399   RND      V3, #99         ; V3 = random & 99
$94E    $692F   LD       V9, #2F         ; Load 47 into V9
$950    $A103   LD       I, $103         ; Load 103 into I
$952    $C065   RND      V0, #65         ; V0 = random & 65
$954    $BC8D   JP       V0, $C8D        ; Jump to V0 + C8D
$956    $6908   LD       V9, #08         ; Load 8 into V9
$958    $2141   CALL     $141            ; Call subroutine at 141
$95A    $21B6   CALL     $1B6            ; Call subroutine at 1B6
$95C    $72E7   ADD      V2, #E7         ; Add 231 to V2
$95E    $A731   LD       I, $731         ; Load 731 into I
$960    $85E2   AND      V5, VE          ; V5 &= VE
$962    $9501   UNKNOWN  $9501           ; Unknown 9xxx instruction
$964    $D42A   DRW      V4, V2, #A      ; Draw 10-byte sprite at V4, V2
$966    $AF5F   LD       I, $F5F         ; Load F5F into I
$968    $8455   SUB      V4, V5          ; V4 -= V5, VF = !borrow
$96A    $3A35   SE       VA, #35         ; Skip if VA == 53
$96C    $397E   SE       V9, #7E         ; Skip if V9 == 126
$96E    $8CB6   SHR      VC              ; VC >>= 1, VF = LSB
$970    $225B   CALL     $25B            ; Call subroutine at 25B
$972    $73C8   ADD      V3, #C8         ; Add 200 to V3
$974    $A75E   LD       I, $75E         ; Load 75E into I
$976    $30CE   SE       V0, #CE         ; Skip if V0 == 206
$978    $257E   CALL     $57E            ; Call subroutine at 57E
$97A    $A1EA   LD       I, $1EA         ; Load 1EA into I
$97C    $FC56   UNKNOWN  FC56            ; Unknown Fxxx instruction
$97E    $DA19   DRW      VA, V1, #9      ; Draw 9-byte sprite at VA, V1
$980    $4ACB   SNE      VA, #CB         ; Skip if VA != 203
$982    $7D61   ADD      VD, #61         ; Add 97 to VD
$984    $1B8A   JP       $B8A            ; Jump to B8A
$986    $8657   SUBN     V6, V5          ; V6 = V5 - V6, VF = !borrow
$988    $0570   SYS      $570            ; System call to 570
$98A    $29A0   CALL     $9A0            ; Call subroutine at 9A0
$98C    $8383   XOR      V3, V8          ; V3 ^= V8
$98E    $1D1C   JP       $D1C            ; Jump to D1C
$990    $440E   SNE      V4, #0E         ; Skip if V4 != 14
$992    $D0BA   DRW      V0, VB, #A      ; Draw 10-byte sprite at V0, VB
$994    $92E4   UNKNOWN  $92E4           ; Unknown 9xxx instruction
$996    $CCBE   RND      VC, #BE         ; VC = random & BE
$998    $74D5   ADD      V4, #D5         ; Add 213 to V4
$99A    $32D7   SE       V2, #D7         ; Skip if V2 == 215
$99C    $46AA   SNE      V6, #AA         ; Skip if V6 != 170
$99E    $5060   SE       V0, V6          ; Skip if V0 == V6
$9A0    $A2AB   LD       I, $2AB         ; Load 2AB into I
$9A2    $C1FA   RND      V1, #FA         ; V1 = random & FA
$9A4    $73FF   ADD      V3, #FF         ; Add 255 to V3
$9A6    $7FDE   ADD      VF, #DE         ; Add 222 to VF
$9A8    $8D20   LD       VD, V2          ; VD = V2
$9AA    $46FE   SNE      V6, #FE         ; Skip if V6 != 254
$9AC    $EE03   UNKNOWN  $EE03           ; Unknown Exxx instruction
$9AE    $272F   CALL     $72F            ; Call subroutine at 72F
$9B0    $D444   DRW      V4, V4, #4      ; Draw 4-byte sprite at V4, V4
$9B2    $B1C8   JP       V0, $1C8        ; Jump to V0 + 1C8
$9B4    $6CBD   LD       VC, #BD         ; Load 189 into VC
$9B6    $39A3   SE       V9, #A3         ; Skip if V9 == 163
$9B8    $6815   LD       V8, #15         ; Load 21 into V8
$9BA    $020B   SYS      $20B            ; System call to 20B
$9BC    $6556   LD       V5, #56         ; Load 86 into V5
$9BE    $825B   UNKNOWN  825B            ; Unknown 8xxx instruction
$9C0    $CD87   RND      VD, #87         ; VD = random & 87
$9C2    $ACEC   LD       I, $CEC         ; Load CEC into I
$9C4    $311A   SE       V1, #1A         ; Skip if V1 == 26
$9C6    $AE60   LD       I, $E60         ; Load E60 into I
$9C8    $4D58   SNE      VD, #58         ; Skip if VD != 88
$9CA    $B91C   JP       V0, $91C        ; Jump to V0 + 91C
$9CC    $4E34   SNE      VE, #34         ; Skip if VE != 52
$9CE    $2A42   CALL     $A42            ; Call subroutine at A42
$9D0    $F728   UNKNOWN  F728            ; Unknown Fxxx instruction
$9D2    $16D9   JP       $6D9            ; Jump to 6D9
$9D4    $D59A   DRW      V5, V9, #A      ; Draw 10-byte sprite at V5, V9
$9D6    $9F9B   UNKNOWN  $9F9B           ; Unknown 9xxx instruction
$9D8    $7263   ADD      V2, #63         ; Add 99 to V2
$9DA    $3F86   SE       VF, #86         ; Skip if VF == 134
$9DC    $5E28   UNKNOWN  $5E28           ; Unknown 5xxx instruction
$9DE    $78D4   ADD      V8, #D4         ; Add 212 to V8
$9E0    $D6A4   DRW      V6, VA, #4      ; Draw 4-byte sprite at V6, VA
$9E2    $5BDD   UNKNOWN  $5BDD           ; Unknown 5xxx instruction
$9E4    $C296   RND      V2, #96         ; V2 = random & 96
$9E6    $0781   SYS      $781            ; System call to 781
$9E8    $8AFB   UNKNOWN  8AFB            ; Unknown 8xxx instruction
$9EA    $00BB   SYS      $0BB            ; System call to 0BB
$9EC    $311D   SE       V1, #1D         ; Skip if V1 == 29
$9EE    $0D46   SYS      $D46            ; System call to D46
$9F0    $8BBE   SHL      VB              ; VB <<= 1, VF = MSB
$9F2    $00AB   SYS      $0AB            ; System call to 0AB
$9F4    $2D25   CALL     $D25            ; Call subroutine at D25
$9F6    $955B   UNKNOWN  $955B           ; Unknown 9xxx instruction
$9F8    $B69D   JP       V0, $69D        ; Jump to V0 + 69D
$9FA    $260C   CALL     $60C            ; Call subroutine at 60C
$9FC    $E9EB   UNKNOWN  $E9EB           ; Unknown Exxx instruction
$9FE    $D2A0   DRW      V2, VA, #0      ; Draw 0-byte sprite at V2, VA
$A00    $1564   JP       $564            ; Jump to 564
$A02    $06E5   SYS      $6E5            ; System call to 6E5
$A04    $13F4   JP       $3F4            ; Jump to 3F4
$A06    $863D   UNKNOWN  863D            ; Unknown 8xxx instruction
$A08    $9A93   UNKNOWN  $9A93           ; Unknown 9xxx instruction
$A0A    $22EF   CALL     $2EF            ; Call subroutine at 2EF
$A0C    $7B07   ADD      VB, #07         ; Add 7 to VB
$A0E    $7EC9   ADD      VE, #C9         ; Add 201 to VE
$A10    $D6AC   DRW      V6, VA, #C      ; Draw 12-byte sprite at V6, VA
$A12    $BB83   JP       V0, $B83        ; Jump to V0 + B83
$A14    $015A   SYS      $15A            ; System call to 15A
$A16    $D027   DRW      V0, V2, #7      ; Draw 7-byte sprite at V0, V2
$A18    $A82C   LD       I, $82C         ; Load 82C into I
$A1A    $485F   SNE      V8, #5F         ; Skip if V8 != 95
$A1C    $01FF   SYS      $1FF            ; System call to 1FF
$A1E    $A80B   LD       I, $80B         ; Load 80B into I
$A20    $252D   CALL     $52D            ; Call subroutine at 52D
$A22    $079D   SYS      $79D            ; System call to 79D
$A24    $371D   SE       V7, #1D         ; Skip if V7 == 29
$A26    $57A6   UNKNOWN  $57A6           ; Unknown 5xxx instruction
$A28    $9165   UNKNOWN  $9165           ; Unknown 9xxx instruction
$A2A    $A071   LD       I, $071         ; Load 071 into I
$A2C    $A3F3   LD       I, $3F3         ; Load 3F3 into I
$A2E    $CAB0   RND      VA, #B0         ; VA = random & B0
$A30    $5815   UNKNOWN  $5815           ; Unknown 5xxx instruction
$A32    $26EE   CALL     $6EE            ; Call subroutine at 6EE
$A34    $B48F   JP       V0, $48F        ; Jump to V0 + 48F
$A36    $23AB   CALL     $3AB            ; Call subroutine at 3AB
$A38    $1C87   JP       $C87            ; Jump to C87
$A3A    $8C3F   UNKNOWN  8C3F            ; Unknown 8xxx instruction
$A3C    $22D7   CALL     $2D7            ; Call subroutine at 2D7
$A3E    $C743   RND      V7, #43         ; V7 = random & 43
$A40    $F9FF   UNKNOWN  F9FF            ; Unknown Fxxx instruction
$A42    $D50B   DRW      V5, V0, #B      ; Draw 11-byte sprite at V5, V0
$A44    $C321   RND      V3, #21         ; V3 = random & 21
$A46    $A7F2   LD       I, $7F2         ; Load 7F2 into I
$A48    $65A4   LD       V5, #A4         ; Load 164 into V5
$A4A    $8488   UNKNOWN  8488            ; Unknown 8xxx instruction
$A4C    $381B   SE       V8, #1B         ; Skip if V8 == 27
$A4E    $3F2D   SE       VF, #2D         ; Skip if VF == 45
$A50    $D5BB   DRW      V5, VB, #B      ; Draw 11-byte sprite at V5, VB
$A52    $3C4B   SE       VC, #4B         ; Skip if VC == 75
$A54    $C3C6   RND      V3, #C6         ; V3 = random & C6
$A56    $E61B   UNKNOWN  $E61B           ; Unknown Exxx instruction
$A58    $936E   UNKNOWN  $936E           ; Unknown 9xxx instruction
$A5A    $F6B9   UNKNOWN  F6B9            ; Unknown Fxxx instruction
$A5C    $06D9   SYS      $6D9            ; System call to 6D9
$A5E    $7017   ADD      V0, #17         ; Add 23 to V0
$A60    $FA9E   UNKNOWN  FA9E            ; Unknown Fxxx instruction
$A62    $8E61   OR       VE, V6          ; VE |= V6
$A64    $E3D0   UNKNOWN  $E3D0           ; Unknown Exxx instruction
$A66    $77BD   ADD      V7, #BD         ; Add 189 to V7
$A68    $A2F4   LD       I, $2F4         ; Load 2F4 into I
$A6A    $EF1C   UNKNOWN  $EF1C           ; Unknown Exxx instruction
$A6C    $6EA9   LD       VE, #A9         ; Load 169 into VE
$A6E    $33DB   SE       V3, #DB         ; Skip if V3 == 219
$A70    $A5E4   LD       I, $5E4         ; Load 5E4 into I
$A72    $3669   SE       V6, #69         ; Skip if V6 == 105
$A74    $6B43   LD       VB, #43         ; Load 67 into VB
$A76    $DB85   DRW      VB, V8, #5      ; Draw 5-byte sprite at VB, V8
$A78    $36AD   SE       V6, #AD         ; Skip if V6 == 173
$A7A    $ED46   UNKNOWN  $ED46           ; Unknown Exxx instruction
$A7C    $555B   UNKNOWN  $555B           ; Unknown 5xxx instruction
$A7E    $4D62   SNE      VD, #62         ; Skip if VD != 98
$A80    $A1BC   LD       I, $1BC         ; Load 1BC into I
$A82    $559A   UNKNOWN  $559A           ; Unknown 5xxx instruction
$A84    $1B94   JP       $B94            ; Jump to B94
$A86    $22AD   CALL     $2AD            ; Call subroutine at 2AD
$A88    $B75D   JP       V0, $75D        ; Jump to V0 + 75D
$A8A    $41EA   SNE      V1, #EA         ; Skip if V1 != 234
$A8C    $383A   SE       V8, #3A         ; Skip if V8 == 58
$A8E    $EEC5   UNKNOWN  $EEC5           ; Unknown Exxx instruction
$A90    $DA75   DRW      VA, V7, #5      ; Draw 5-byte sprite at VA, V7
$A92    $5D9B   UNKNOWN  $5D9B           ; Unknown 5xxx instruction
$A94    $E80C   UNKNOWN  $E80C           ; Unknown Exxx instruction
$A96    $0699   SYS      $699            ; System call to 699
$A98    $5646   UNKNOWN  $5646           ; Unknown 5xxx instruction
$A9A    $5F43   UNKNOWN  $5F43           ; Unknown 5xxx instruction
$A9C    $7A59   ADD      VA, #59         ; Add 89 to VA
$A9E    $49A3   SNE      V9, #A3         ; Skip if V9 != 163
$AA0    $6E98   LD       VE, #98         ; Load 152 into VE
$AA2    $9B10   SNE      VB, V1          ; Skip if VB != V1
$AA4    $9F09   UNKNOWN  $9F09           ; Unknown 9xxx instruction
$AA6    $6B99   LD       VB, #99         ; Load 153 into VB
$AA8    $581D   UNKNOWN  $581D           ; Unknown 5xxx instruction
$AAA    $243F   CALL     $43F            ; Call subroutine at 43F
$AAC    $F62F   UNKNOWN  F62F            ; Unknown Fxxx instruction
$AAE    $48B0   SNE      V8, #B0         ; Skip if V8 != 176
$AB0    $0AE8   SYS      $AE8            ; System call to AE8
$AB2    $A02D   LD       I, $02D         ; Load 02D into I
$AB4    $6FCC   LD       VF, #CC         ; Load 204 into VF
$AB6    $B1B1   JP       V0, $1B1        ; Jump to V0 + 1B1
$AB8    $2578   CALL     $578            ; Call subroutine at 578
$ABA    $335F   SE       V3, #5F         ; Skip if V3 == 95
$ABC    $B4FB   JP       V0, $4FB        ; Jump to V0 + 4FB
$ABE    $AA2F   LD       I, $A2F         ; Load A2F into I
$AC0    $E5D9   UNKNOWN  $E5D9           ; Unknown Exxx instruction
$AC2    $27E0   CALL     $7E0            ; Call subroutine at 7E0
$AC4    $6A37   LD       VA, #37         ; Load 55 into VA
$AC6    $27B6   CALL     $7B6            ; Call subroutine at 7B6
$AC8    $F6CC   UNKNOWN  F6CC            ; Unknown Fxxx instruction
$ACA    $4001   SNE      V0, #01         ; Skip if V0 != 1
$ACC    $DF6D   DRW      VF, V6, #D      ; Draw 13-byte sprite at VF, V6
$ACE    $4C44   SNE      VC, #44         ; Skip if VC != 68
$AD0    $1644   JP       $644            ; Jump to 644
$AD2    $69A4   LD       V9, #A4         ; Load 164 into V9
$AD4    $E562   UNKNOWN  $E562           ; Unknown Exxx instruction
$AD6    $E16A   UNKNOWN  $E16A           ; Unknown Exxx instruction
$AD8    $00AB   SYS      $0AB            ; System call to 0AB
$ADA    $48EB   SNE      V8, #EB         ; Skip if V8 != 235
$ADC    $0051   SYS      $051            ; System call to 051
$ADE    $C41A   RND      V4, #1A         ; V4 = random & 1A
$AE0    $C927   RND      V9, #27         ; V9 = random & 27
$AE2    $A8DF   LD       I, $8DF         ; Load 8DF into I
$AE4    $A9E4   LD       I, $9E4         ; Load 9E4 into I
$AE6    $C279   RND      V2, #79         ; V2 = random & 79
$AE8    $4BF3   SNE      VB, #F3         ; Skip if VB != 243
$AEA    $451F   SNE      V5, #1F         ; Skip if V5 != 31
$AEC    $9411   UNKNOWN  $9411           ; Unknown 9xxx instruction
$AEE    $FE01   UNKNOWN  FE01            ; Unknown Fxxx instruction
$AF0    $EDAE   UNKNOWN  $EDAE           ; Unknown Exxx instruction
$AF2    $9557   UNKNOWN  $9557           ; Unknown 9xxx instruction
$AF4    $0006   SYS      $006            ; System call to 006
$AF6    $0640   SYS      $640            ; System call to 640
$AF8    $65E3   LD       V5, #E3         ; Load 227 into V5
$AFA    $4ADE   SNE      VA, #DE         ; Skip if VA != 222
$AFC    $947C   UNKNOWN  $947C           ; Unknown 9xxx instruction
$AFE    $3BE5   SE       VB, #E5         ; Skip if VB == 229
$B00    $7D02   ADD      VD, #02         ; Add 2 to VD
$B02    $8532   AND      V5, V3          ; V5 &= V3
$B04    $D9C9   DRW      V9, VC, #9      ; Draw 9-byte sprite at V9, VC
$B06    $8E2C   UNKNOWN  8E2C            ; Unknown 8xxx instruction
$B08    $854E   SHL      V5              ; V5 <<= 1, VF = MSB
$B0A    $AF5E   LD       I, $F5E         ; Load F5E into I
$B0C    $2D48   CALL     $D48            ; Call subroutine at D48
$B0E    $FF9A   UNKNOWN  FF9A            ; Unknown Fxxx instruction
$B10    $9D21   UNKNOWN  $9D21           ; Unknown 9xxx instruction
$B12    $98E9   UNKNOWN  $98E9           ; Unknown 9xxx instruction
$B14    $5BCB   UNKNOWN  $5BCB           ; Unknown 5xxx instruction
$B16    $D601   DRW      V6, V0, #1      ; Draw 1-byte sprite at V6, V0
$B18    $DD77   DRW      VD, V7, #7      ; Draw 7-byte sprite at VD, V7
$B1A    $4C92   SNE      VC, #92         ; Skip if VC != 146
$B1C    $C76E   RND      V7, #6E         ; V7 = random & 6E
$B1E    $B1A2   JP       V0, $1A2        ; Jump to V0 + 1A2
$B20    $1F32   JP       $F32            ; Jump to F32
$B22    $0452   SYS      $452            ; System call to 452
$B24    $23C6   CALL     $3C6            ; Call subroutine at 3C6
$B26    $994F   UNKNOWN  $994F           ; Unknown 9xxx instruction
$B28    $3CD4   SE       VC, #D4         ; Skip if VC == 212
$B2A    $2127   CALL     $127            ; Call subroutine at 127
$B2C    $A03F   LD       I, $03F         ; Load 03F into I
$B2E    $D676   DRW      V6, V7, #6      ; Draw 6-byte sprite at V6, V7
$B30    $8208   UNKNOWN  8208            ; Unknown 8xxx instruction
$B32    $49CE   SNE      V9, #CE         ; Skip if V9 != 206
$B34    $70AA   ADD      V0, #AA         ; Add 170 to V0
$B36    $589D   UNKNOWN  $589D           ; Unknown 5xxx instruction
$B38    $3390   SE       V3, #90         ; Skip if V3 == 144
$B3A    $345C   SE       V4, #5C         ; Skip if V4 == 92
$B3C    $3537   SE       V5, #37         ; Skip if V5 == 55
$B3E    $0E14   SYS      $E14            ; System call to E14
$B40    $487F   SNE      V8, #7F         ; Skip if V8 != 127
$B42    $8FAA   UNKNOWN  8FAA            ; Unknown 8xxx instruction
$B44    $524C   UNKNOWN  $524C           ; Unknown 5xxx instruction
$B46    $5904   UNKNOWN  $5904           ; Unknown 5xxx instruction
$B48    $2F6A   CALL     $F6A            ; Call subroutine at F6A
$B4A    $8693   XOR      V6, V9          ; V6 ^= V9
$B4C    $81DE   SHL      V1              ; V1 <<= 1, VF = MSB
$B4E    $C7AB   RND      V7, #AB         ; V7 = random & AB
$B50    $AA84   LD       I, $A84         ; Load A84 into I
$B52    $F51A   UNKNOWN  F51A            ; Unknown Fxxx instruction
$B54    $96E3   UNKNOWN  $96E3           ; Unknown 9xxx instruction
$B56    $6B33   LD       VB, #33         ; Load 51 into VB
$B58    $976C   UNKNOWN  $976C           ; Unknown 9xxx instruction
$B5A    $2E70   CALL     $E70            ; Call subroutine at E70
$B5C    $8489   UNKNOWN  8489            ; Unknown 8xxx instruction
$B5E    $94E5   UNKNOWN  $94E5           ; Unknown 9xxx instruction
$B60    $DE09   DRW      VE, V0, #9      ; Draw 9-byte sprite at VE, V0
$B62    $830A   UNKNOWN  830A            ; Unknown 8xxx instruction
$B64    $228D   CALL     $28D            ; Call subroutine at 28D
$B66    $F1F1   UNKNOWN  F1F1            ; Unknown Fxxx instruction
$B68    $CAB9   RND      VA, #B9         ; VA = random & B9
$B6A    $84DB   UNKNOWN  84DB            ; Unknown 8xxx instruction
$B6C    $5214   UNKNOWN  $5214           ; Unknown 5xxx instruction
$B6E    $DDA0   DRW      VD, VA, #0      ; Draw 0-byte sprite at VD, VA
$B70    $F583   UNKNOWN  F583            ; Unknown Fxxx instruction
$B72    $6EC0   LD       VE, #C0         ; Load 192 into VE
$B74    $504D   UNKNOWN  $504D           ; Unknown 5xxx instruction
$B76    $DE06   DRW      VE, V0, #6      ; Draw 6-byte sprite at VE, V0
$B78    $7E48   ADD      VE, #48         ; Add 72 to VE
$B7A    $9326   UNKNOWN  $9326           ; Unknown 9xxx instruction
$B7C    $0C41   SYS      $C41            ; System call to C41
$B7E    $3A64   SE       VA, #64         ; Skip if VA == 100
$B80    $477E   SNE      V7, #7E         ; Skip if V7 != 126
$B82    $D8A4   DRW      V8, VA, #4      ; Draw 4-byte sprite at V8, VA
$B84    $78DB   ADD      V8, #DB         ; Add 219 to V8
$B86    $70E8   ADD      V0, #E8         ; Add 232 to V0
$B88    $DBA8   DRW      VB, VA, #8      ; Draw 8-byte sprite at VB, VA
$B8A    $F6FC   UNKNOWN  F6FC            ; Unknown Fxxx instruction
$B8C    $1B0F   JP       $B0F            ; Jump to B0F
$B8E    $F2A1   UNKNOWN  F2A1            ; Unknown Fxxx instruction
$B90    $893C   UNKNOWN  893C            ; Unknown 8xxx instruction
$B92    $DBD6   DRW      VB, VD, #6      ; Draw 6-byte sprite at VB, VD
$B94    $2DF0   CALL     $DF0            ; Call subroutine at DF0
$B96    $FAE5   UNKNOWN  FAE5            ; Unknown Fxxx instruction
$B98    $2995   CALL     $995            ; Call subroutine at 995
$B9A    $9D36   UNKNOWN  $9D36           ; Unknown 9xxx instruction
$B9C    $82E8   UNKNOWN  82E8            ; Unknown 8xxx instruction
$B9E    $D8A5   DRW      V8, VA, #5      ; Draw 5-byte sprite at V8, VA
$BA0    $86AE   SHL      V6              ; V6 <<= 1, VF = MSB
$BA2    $48D2   SNE      V8, #D2         ; Skip if V8 != 210
$BA4    $E61A   UNKNOWN  $E61A           ; Unknown Exxx instruction
$BA6    $8A7B   UNKNOWN  8A7B            ; Unknown 8xxx instruction
$BA8    $C28E   RND      V2, #8E         ; V2 = random & 8E
$BAA    $0094   SYS      $094            ; System call to 094
$BAC    $C616   RND      V6, #16         ; V6 = random & 16
$BAE    $9588   UNKNOWN  $9588           ; Unknown 9xxx instruction
$BB0    $0A84   SYS      $A84            ; System call to A84
$BB2    $946C   UNKNOWN  $946C           ; Unknown 9xxx instruction
$BB4    $F366   UNKNOWN  F366            ; Unknown Fxxx instruction
$BB6    $0C0D   SYS      $C0D            ; System call to C0D
$BB8    $6209   LD       V2, #09         ; Load 9 into V2
$BBA    $476F   SNE      V7, #6F         ; Skip if V7 != 111
$BBC    $F8B0   UNKNOWN  F8B0            ; Unknown Fxxx instruction
$BBE    $62E5   LD       V2, #E5         ; Load 229 into V2
$BC0    $4340   SNE      V3, #40         ; Skip if V3 != 64
$BC2    $46AA   SNE      V6, #AA         ; Skip if V6 != 170
$BC4    $D3D9   DRW      V3, VD, #9      ; Draw 9-byte sprite at V3, VD
$BC6    $FAB0   UNKNOWN  FAB0            ; Unknown Fxxx instruction
$BC8    $CACA   RND      VA, #CA         ; VA = random & CA
$BCA    $F255   LD       [I], V2         ; Store V0-V2 at I
$BCC    $571D   UNKNOWN  $571D           ; Unknown 5xxx instruction
$BCE    $353E   SE       V5, #3E         ; Skip if V5 == 62
$BD0    $6FF1   LD       VF, #F1         ; Load 241 into VF
$BD2    $09E4   SYS      $9E4            ; System call to 9E4
$BD4    $4547   SNE      V5, #47         ; Skip if V5 != 71
$BD6    $8470   LD       V4, V7          ; V4 = V7
$BD8    $507E   UNKNOWN  $507E           ; Unknown 5xxx instruction
$BDA    $FE26   UNKNOWN  FE26            ; Unknown Fxxx instruction
$BDC    $09DD   SYS      $9DD            ; System call to 9DD
$BDE    $2B4E   CALL     $B4E            ; Call subroutine at B4E
$BE0    $E869   UNKNOWN  $E869           ; Unknown Exxx instruction
$BE2    $384A   SE       V8, #4A         ; Skip if V8 == 74
$BE4    $FAE5   UNKNOWN  FAE5            ; Unknown Fxxx instruction
$BE6    $7CBD   ADD      VC, #BD         ; Add 189 to VC
$BE8    $3AC0   SE       VA, #C0         ; Skip if VA == 192
$BEA    $4D79   SNE      VD, #79         ; Skip if VD != 121
$BEC    $C8EE   RND      V8, #EE         ; V8 = random & EE
$BEE    $A941   LD       I, $941         ; Load 941 into I
$BF0    $7D29   ADD      VD, #29         ; Add 41 to VD
$BF2    $5494   UNKNOWN  $5494           ; Unknown 5xxx instruction
$BF4    $F4F0   UNKNOWN  F4F0            ; Unknown Fxxx instruction
$BF6    $19DC   JP       $9DC            ; Jump to 9DC
$BF8    $CC1A   RND      VC, #1A         ; VC = random & 1A
$BFA    $11EC   JP       $1EC            ; Jump to 1EC
$BFC    $8072   AND      V0, V7          ; V0 &= V7
$BFE    $E9F6   UNKNOWN  $E9F6           ; Unknown Exxx instruction
$C00    $2874   CALL     $874            ; Call subroutine at 874
$C02    $AC45   LD       I, $C45         ; Load C45 into I
$C04    $0CA8   SYS      $CA8            ; System call to CA8
$C06    $9BC2   UNKNOWN  $9BC2           ; Unknown 9xxx instruction
$C08    $8B84   ADD      VB, V8          ; VB += V8, VF = carry
$C0A    $A85A   LD       I, $85A         ; Load 85A into I
$C0C    $1639   JP       $639            ; Jump to 639
$C0E    $B20E   JP       V0, $20E        ; Jump to V0 + 20E
$C10    $DF95   DRW      VF, V9, #5      ; Draw 5-byte sprite at VF, V9
$C12    $95EB   UNKNOWN  $95EB           ; Unknown 9xxx instruction
$C14    $0AA8   SYS      $AA8            ; System call to AA8
$C16    $92E6   UNKNOWN  $92E6           ; Unknown 9xxx instruction
$C18    $CFC3   RND      VF, #C3         ; VF = random & C3
$C1A    $F6B9   UNKNOWN  F6B9            ; Unknown Fxxx instruction
$C1C    $FB17   UNKNOWN  FB17            ; Unknown Fxxx instruction
$C1E    $29C2   CALL     $9C2            ; Call subroutine at 9C2
$C20    $80A9   UNKNOWN  80A9            ; Unknown 8xxx instruction
$C22    $F5CD   UNKNOWN  F5CD            ; Unknown Fxxx instruction
$C24    $44D1   SNE      V4, #D1         ; Skip if V4 != 209
$C26    $0A7A   SYS      $A7A            ; System call to A7A
$C28    $C904   RND      V9, #04         ; V9 = random & 04
$C2A    $0FE4   SYS      $FE4            ; System call to FE4
$C2C    $06CC   SYS      $6CC            ; System call to 6CC
$C2E    $3889   SE       V8, #89         ; Skip if V8 == 137
$C30    $A880   LD       I, $880         ; Load 880 into I
$C32    $3FC4   SE       VF, #C4         ; Skip if VF == 196
$C34    $42B2   SNE      V2, #B2         ; Skip if V2 != 178
$C36    $7B1B   ADD      VB, #1B         ; Add 27 to VB
$C38    $A9B7   LD       I, $9B7         ; Load 9B7 into I
$C3A    $AFCF   LD       I, $FCF         ; Load FCF into I
$C3C    $822D   UNKNOWN  822D            ; Unknown 8xxx instruction
$C3E    $9839   UNKNOWN  $9839           ; Unknown 9xxx instruction
$C40    $8CC8   UNKNOWN  8CC8            ; Unknown 8xxx instruction
$C42    $5BF8   UNKNOWN  $5BF8           ; Unknown 5xxx instruction
$C44    $2E47   CALL     $E47            ; Call subroutine at E47
$C46    $0B79   SYS      $B79            ; System call to B79
$C48    $BC5D   JP       V0, $C5D        ; Jump to V0 + C5D
$C4A    $DA5F   DRW      VA, V5, #F      ; Draw 15-byte sprite at VA, V5
$C4C    $C92D   RND      V9, #2D         ; V9 = random & 2D
$C4E    $FDA7   UNKNOWN  FDA7            ; Unknown Fxxx instruction
$C50    $2D24   CALL     $D24            ; Call subroutine at D24
$C52    $C46E   RND      V4, #6E         ; V4 = random & 6E
$C54    $F1D7   UNKNOWN  F1D7            ; Unknown Fxxx instruction
$C56    $511D   UNKNOWN  $511D           ; Unknown 5xxx instruction
$C58    $34B0   SE       V4, #B0         ; Skip if V4 == 176
$C5A    $3EDF   SE       VE, #DF         ; Skip if VE == 223
$C5C    $0C14   SYS      $C14            ; System call to C14
$C5E    $FA29   LD       F, VA           ; I = sprite address for digit VA
$C60    $4A98   SNE      VA, #98         ; Skip if VA != 152
$C62    $5993   UNKNOWN  $5993           ; Unknown 5xxx instruction
$C64    $1C3D   JP       $C3D            ; Jump to C3D
$C66    $5881   UNKNOWN  $5881           ; Unknown 5xxx instruction
$C68    $F73E   UNKNOWN  F73E            ; Unknown Fxxx instruction
$C6A    $808E   SHL      V0              ; V0 <<= 1, VF = MSB
$C6C    $48CF   SNE      V8, #CF         ; Skip if V8 != 207
$C6E    $2001   CALL     $001            ; Call subroutine at 001
$C70    $A4CA   LD       I, $4CA         ; Load 4CA into I
$C72    $86F4   ADD      V6, VF          ; V6 += VF, VF = carry
$C74    $183E   JP       $83E            ; Jump to 83E
$C76    $9364   UNKNOWN  $9364           ; Unknown 9xxx instruction
$C78    $2268   CALL     $268            ; Call subroutine at 268
$C7A    $D4E9   DRW      V4, VE, #9      ; Draw 9-byte sprite at V4, VE
$C7C    $324E   SE       V2, #4E         ; Skip if V2 == 78
$C7E    $6C99   LD       VC, #99         ; Load 153 into VC
$C80    $DA0C   DRW      VA, V0, #C      ; Draw 12-byte sprite at VA, V0
$C82    $6C17   LD       VC, #17         ; Load 23 into VC
$C84    $9D67   UNKNOWN  $9D67           ; Unknown 9xxx instruction
$C86    $6822   LD       V8, #22         ; Load 34 into V8
$C88    $7C1C   ADD      VC, #1C         ; Add 28 to VC
$C8A    $0531   SYS      $531            ; System call to 531
$C8C    $8FDB   UNKNOWN  8FDB            ; Unknown 8xxx instruction
$C8E    $363C   SE       V6, #3C         ; Skip if V6 == 60
$C90    $FFC7   UNKNOWN  FFC7            ; Unknown Fxxx instruction
$C92    $7A8E   ADD      VA, #8E         ; Add 142 to VA
$C94    $D21B   DRW      V2, V1, #B      ; Draw 11-byte sprite at V2, V1
$C96    $E16D   UNKNOWN  $E16D           ; Unknown Exxx instruction
$C98    $0C93   SYS      $C93            ; System call to C93
$C9A    $C105   RND      V1, #05         ; V1 = random & 05
$C9C    $A653   LD       I, $653         ; Load 653 into I
$C9E    $E7DA   UNKNOWN  $E7DA           ; Unknown Exxx instruction
$CA0    $0575   SYS      $575            ; System call to 575
$CA2    $BA33   JP       V0, $A33        ; Jump to V0 + A33
$CA4    $8C06   SHR      VC              ; VC >>= 1, VF = LSB
$CA6    $A2F9   LD       I, $2F9         ; Load 2F9 into I
$CA8    $23AB   CALL     $3AB            ; Call subroutine at 3AB
$CAA    $BEB5   JP       V0, $EB5        ; Jump to V0 + EB5
$CAC    $9D04   UNKNOWN  $9D04           ; Unknown 9xxx instruction
$CAE    $FE8B   UNKNOWN  FE8B            ; Unknown Fxxx instruction
$CB0    $9882   UNKNOWN  $9882           ; Unknown 9xxx instruction
$CB2    $FF81   UNKNOWN  FF81            ; Unknown Fxxx instruction
$CB4    $A5D0   LD       I, $5D0         ; Load 5D0 into I
$CB6    $F22C   UNKNOWN  F22C            ; Unknown Fxxx instruction
$CB8    $AE42   LD       I, $E42         ; Load E42 into I
$CBA    $DE84   DRW      VE, V8, #4      ; Draw 4-byte sprite at VE, V8
$CBC    $C84D   RND      V8, #4D         ; V8 = random & 4D
$CBE    $9627   UNKNOWN  $9627           ; Unknown 9xxx instruction
$CC0    $EA33   UNKNOWN  $EA33           ; Unknown Exxx instruction
$CC2    $5FE6   UNKNOWN  $5FE6           ; Unknown 5xxx instruction
$CC4    $EE0A   UNKNOWN  $EE0A           ; Unknown Exxx instruction
$CC6    $D5DB   DRW      V5, VD, #B      ; Draw 11-byte sprite at V5, VD
$CC8    $9D97   UNKNOWN  $9D97           ; Unknown 9xxx instruction
$CCA    $822A   UNKNOWN  822A            ; Unknown 8xxx instruction
$CCC    $57BD   UNKNOWN  $57BD           ; Unknown 5xxx instruction
$CCE    $53F6   UNKNOWN  $53F6           ; Unknown 5xxx instruction
$CD0    $BA42   JP       V0, $A42        ; Jump to V0 + A42
$CD2    $224F   CALL     $24F            ; Call subroutine at 24F
$CD4    $EF51   UNKNOWN  $EF51           ; Unknown Exxx instruction
$CD6    $FF00   UNKNOWN  FF00            ; Unknown Fxxx instruction
$CD8    $126E   JP       $26E            ; Jump to 26E
$CDA    $B393   JP       V0, $393        ; Jump to V0 + 393
$CDC    $7FB7   ADD      VF, #B7         ; Add 183 to VF
$CDE    $3CD1   SE       VC, #D1         ; Skip if VC == 209
$CE0    $0C57   SYS      $C57            ; System call to C57
$CE2    $5FA2   UNKNOWN  $5FA2           ; Unknown 5xxx instruction
$CE4    $5A16   UNKNOWN  $5A16           ; Unknown 5xxx instruction
$CE6    $8E9A   UNKNOWN  8E9A            ; Unknown 8xxx instruction
$CE8    $7C4D   ADD      VC, #4D         ; Add 77 to VC
$CEA    $0F96   SYS      $F96            ; System call to F96
$CEC    $40CA   SNE      V0, #CA         ; Skip if V0 != 202
$CEE    $D2A3   DRW      V2, VA, #3      ; Draw 3-byte sprite at V2, VA
$CF0    $229A   CALL     $29A            ; Call subroutine at 29A
$CF2    $FD41   UNKNOWN  FD41            ; Unknown Fxxx instruction
$CF4    $055A   SYS      $55A            ; System call to 55A
$CF6    $445C   SNE      V4, #5C         ; Skip if V4 != 92
$CF8    $048F   SYS      $48F            ; System call to 48F
$CFA    $9F78   UNKNOWN  $9F78           ; Unknown 9xxx instruction
$CFC    $CBED   RND      VB, #ED         ; VB = random & ED
$CFE    $3FB4   SE       VF, #B4         ; Skip if VF == 180
$D00    $17BC   JP       $7BC            ; Jump to 7BC
$D02    $E8A6   UNKNOWN  $E8A6           ; Unknown Exxx instruction
$D04    $A13E   LD       I, $13E         ; Load 13E into I
$D06    $D10A   DRW      V1, V0, #A      ; Draw 10-byte sprite at V1, V0
$D08    $C2DB   RND      V2, #DB         ; V2 = random & DB
$D0A    $BE48   JP       V0, $E48        ; Jump to V0 + E48
$D0C    $81E1   OR       V1, VE          ; V1 |= VE
$D0E    $1125   JP       $125            ; Jump to 125
$D10    $ADA6   LD       I, $DA6         ; Load DA6 into I
$D12    $0EAF   SYS      $EAF            ; System call to EAF
$D14    $1A33   JP       $A33            ; Jump to A33
$D16    $6CCA   LD       VC, #CA         ; Load 202 into VC
$D18    $658B   LD       V5, #8B         ; Load 139 into V5
$D1A    $0AA5   SYS      $AA5            ; System call to AA5
$D1C    $9D13   UNKNOWN  $9D13           ; Unknown 9xxx instruction
$D1E    $AC7E   LD       I, $C7E         ; Load C7E into I
$D20    $A8A6   LD       I, $8A6         ; Load 8A6 into I
$D22    $9D96   UNKNOWN  $9D96           ; Unknown 9xxx instruction
$D24    $B71E   JP       V0, $71E        ; Jump to V0 + 71E
$D26    $7356   ADD      V3, #56         ; Add 86 to V3
$D28    $0693   SYS      $693            ; System call to 693
$D2A    $0403   SYS      $403            ; System call to 403
$D2C    $4393   SNE      V3, #93         ; Skip if V3 != 147
$D2E    $001A   SYS      $01A            ; System call to 01A
$D30    $1293   JP       $293            ; Jump to 293
$D32    $8F5B   UNKNOWN  8F5B            ; Unknown 8xxx instruction
$D34    $6957   LD       V9, #57         ; Load 87 into V9
$D36    $61F3   LD       V1, #F3         ; Load 243 into V1
$D38    $DB59   DRW      VB, V5, #9      ; Draw 9-byte sprite at VB, V5
$D3A    $D593   DRW      V5, V9, #3      ; Draw 3-byte sprite at V5, V9
$D3C    $B15B   JP       V0, $15B        ; Jump to V0 + 15B
$D3E    $5018   UNKNOWN  $5018           ; Unknown 5xxx instruction
$D40    $43D2   SNE      V3, #D2         ; Skip if V3 != 210
$D42    $C93D   RND      V9, #3D         ; V9 = random & 3D
$D44    $0720   SYS      $720            ; System call to 720
$D46    $BCD3   JP       V0, $CD3        ; Jump to V0 + CD3
$D48    $A99E   LD       I, $99E         ; Load 99E into I
$D4A    $0251   SYS      $251            ; System call to 251
$D4C    $4304   SNE      V3, #04         ; Skip if V3 != 4
$D4E    $56D1   UNKNOWN  $56D1           ; Unknown 5xxx instruction
$D50    $9232   UNKNOWN  $9232           ; Unknown 9xxx instruction
$D52    $DDBB   DRW      VD, VB, #B      ; Draw 11-byte sprite at VD, VB
$D54    $B855   JP       V0, $855        ; Jump to V0 + 855
$D56    $C1DB   RND      V1, #DB         ; V1 = random & DB
$D58    $C785   RND      V7, #85         ; V7 = random & 85
$D5A    $DD43   DRW      VD, V4, #3      ; Draw 3-byte sprite at VD, V4
$D5C    $6C30   LD       VC, #30         ; Load 48 into VC
$D5E    $5F7C   UNKNOWN  $5F7C           ; Unknown 5xxx instruction
$D60    $5ABE   UNKNOWN  $5ABE           ; Unknown 5xxx instruction
$D62    $6E0F   LD       VE, #0F         ; Load 15 into VE
$D64    $8140   LD       V1, V4          ; V1 = V4
$D66    $A621   LD       I, $621         ; Load 621 into I
$D68    $23EA   CALL     $3EA            ; Call subroutine at 3EA
$D6A    $B60A   JP       V0, $60A        ; Jump to V0 + 60A
$D6C    $F31E   ADD      I, V3           ; I += V3
$D6E    $804E   SHL      V0              ; V0 <<= 1, VF = MSB
$D70    $AC7A   LD       I, $C7A         ; Load C7A into I
$D72    $6489   LD       V4, #89         ; Load 137 into V4
$D74    $5FC6   UNKNOWN  $5FC6           ; Unknown 5xxx instruction
$D76    $20A2   CALL     $0A2            ; Call subroutine at 0A2
$D78    $FD35   UNKNOWN  FD35            ; Unknown Fxxx instruction
$D7A    $EC7C   UNKNOWN  $EC7C           ; Unknown Exxx instruction
$D7C    $90A9   UNKNOWN  $90A9           ; Unknown 9xxx instruction
$D7E    $BD60   JP       V0, $D60        ; Jump to V0 + D60
$D80    $BC77   JP       V0, $C77        ; Jump to V0 + C77
$D82    $B04F   JP       V0, $04F        ; Jump to V0 + 04F
$D84    $3AF9   SE       VA, #F9         ; Skip if VA == 249
$D86    $9558   UNKNOWN  $9558           ; Unknown 9xxx instruction
$D88    $0C70   SYS      $C70            ; System call to C70
$D8A    $2CBA   CALL     $CBA            ; Call subroutine at CBA
$D8C    $93DD   UNKNOWN  $93DD           ; Unknown 9xxx instruction
$D8E    $E152   UNKNOWN  $E152           ; Unknown Exxx instruction
$D90    $F6B9   UNKNOWN  F6B9            ; Unknown Fxxx instruction
$D92    $8D20   LD       VD, V2          ; VD = V2
$D94    $0E23   SYS      $E23            ; System call to E23
$D96    $BDBE   JP       V0, $DBE        ; Jump to V0 + DBE
$D98    $C6E3   RND      V6, #E3         ; V6 = random & E3
$D9A    $DC96   DRW      VC, V9, #6      ; Draw 6-byte sprite at VC, V9
$D9C    $B72F   JP       V0, $72F        ; Jump to V0 + 72F
$D9E    $1F32   JP       $F32            ; Jump to F32
$DA0    $6BB8   LD       VB, #B8         ; Load 184 into VB
$DA2    $FE5F   UNKNOWN  FE5F            ; Unknown Fxxx instruction
$DA4    $3701   SE       V7, #01         ; Skip if V7 == 1
$DA6    $F84A   UNKNOWN  F84A            ; Unknown Fxxx instruction
$DA8    $0F7C   SYS      $F7C            ; System call to F7C
$DAA    $BDC1   JP       V0, $DC1        ; Jump to V0 + DC1
$DAC    $EADC   UNKNOWN  $EADC           ; Unknown Exxx instruction
$DAE    $F924   UNKNOWN  F924            ; Unknown Fxxx instruction
$DB0    $6F34   LD       VF, #34         ; Load 52 into VF
$DB2    $0D89   SYS      $D89            ; System call to D89
$DB4    $0168   SYS      $168            ; System call to 168
$DB6    $7E78   ADD      VE, #78         ; Add 120 to VE
$DB8    $99BB   UNKNOWN  $99BB           ; Unknown 9xxx instruction
$DBA    $B368   JP       V0, $368        ; Jump to V0 + 368
$DBC    $207A   CALL     $07A            ; Call subroutine at 07A
$DBE    $0650   SYS      $650            ; System call to 650
$DC0    $5F17   UNKNOWN  $5F17           ; Unknown 5xxx instruction
$DC2    $1A6C   JP       $A6C            ; Jump to A6C
$DC4    $85F9   UNKNOWN  85F9            ; Unknown 8xxx instruction
$DC6    $4B30   SNE      VB, #30         ; Skip if VB != 48
$DC8    $7A06   ADD      VA, #06         ; Add 6 to VA
$DCA    $1275   JP       $275            ; Jump to 275
$DCC    $E1C0   UNKNOWN  $E1C0           ; Unknown Exxx instruction
$DCE    $86BD   UNKNOWN  86BD            ; Unknown 8xxx instruction
$DD0    $F452   UNKNOWN  F452            ; Unknown Fxxx instruction
$DD2    $3EBC   SE       VE, #BC         ; Skip if VE == 188
$DD4    $D869   DRW      V8, V6, #9      ; Draw 9-byte sprite at V8, V6
$DD6    $FD43   UNKNOWN  FD43            ; Unknown Fxxx instruction
$DD8    $F090   UNKNOWN  F090            ; Unknown Fxxx instruction
$DDA    $D887   DRW      V8, V8, #7      ; Draw 7-byte sprite at V8, V8
$DDC    $BF19   JP       V0, $F19        ; Jump to V0 + F19
$DDE    $1AF6   JP       $AF6            ; Jump to AF6
$DE0    $4154   SNE      V1, #54         ; Skip if V1 != 84
$DE2    $3B3E   SE       VB, #3E         ; Skip if VB == 62
$DE4    $DD2B   DRW      VD, V2, #B      ; Draw 11-byte sprite at VD, V2
$DE6    $7F2E   ADD      VF, #2E         ; Add 46 to VF
$DE8    $38BA   SE       V8, #BA         ; Skip if V8 == 186
$DEA    $A2F9   LD       I, $2F9         ; Load 2F9 into I
$DEC    $B8DD   JP       V0, $8DD        ; Jump to V0 + 8DD
$DEE    $47D0   SNE      V7, #D0         ; Skip if V7 != 208
$DF0    $ED7C   UNKNOWN  $ED7C           ; Unknown Exxx instruction
$DF2    $1DF4   JP       $DF4            ; Jump to DF4
$DF4    $7FE6   ADD      VF, #E6         ; Add 230 to VF
$DF6    $9FD7   UNKNOWN  $9FD7           ; Unknown 9xxx instruction
$DF8    $8216   SHR      V2              ; V2 >>= 1, VF = LSB
$DFA    $0EAF   SYS      $EAF            ; System call to EAF
$DFC    $8C22   AND      VC, V2          ; VC &= V2
$DFE    $920C   UNKNOWN  $920C           ; Unknown 9xxx instruction
$E00    $F7AC   UNKNOWN  F7AC            ; Unknown Fxxx instruction
$E02    $8DDD   UNKNOWN  8DDD            ; Unknown 8xxx instruction
$E04    $E2A8   UNKNOWN  $E2A8           ; Unknown Exxx instruction
$E06    $169A   JP       $69A            ; Jump to 69A
$E08    $533B   UNKNOWN  $533B           ; Unknown 5xxx instruction
$E0A    $E3DA   UNKNOWN  $E3DA           ; Unknown Exxx instruction
$E0C    $CC98   RND      VC, #98         ; VC = random & 98
$E0E    $C2A0   RND      V2, #A0         ; V2 = random & A0
$E10    $6A90   LD       VA, #90         ; Load 144 into VA
$E12    $86A1   OR       V6, VA          ; V6 |= VA
$E14    $0E63   SYS      $E63            ; System call to E63
$E16    $9FF2   UNKNOWN  $9FF2           ; Unknown 9xxx instruction
$E18    $2498   CALL     $498            ; Call subroutine at 498
$E1A    $7EE9   ADD      VE, #E9         ; Add 233 to VE
$E1C    $5838   UNKNOWN  $5838           ; Unknown 5xxx instruction
$E1E    $B561   JP       V0, $561        ; Jump to V0 + 561
$E20    $949F   UNKNOWN  $949F           ; Unknown 9xxx instruction
$E22    $9F6B   UNKNOWN  $9F6B           ; Unknown 9xxx instruction
$E24    $D31F   DRW      V3, V1, #F      ; Draw 15-byte sprite at V3, V1
$E26    $E62E   UNKNOWN  $E62E           ; Unknown Exxx instruction
$E28    $3404   SE       V4, #04         ; Skip if V4 == 4
$E2A    $EF98   UNKNOWN  $EF98           ; Unknown Exxx instruction
$E2C    $61E4   LD       V1, #E4         ; Load 228 into V1
$E2E    $D6DC   DRW      V6, VD, #C      ; Draw 12-byte sprite at V6, VD
$E30    $A378   LD       I, $378         ; Load 378 into I
$E32    $A67C   LD       I, $67C         ; Load 67C into I
$E34    $0DA3   SYS      $DA3            ; System call to DA3
$E36    $DDF7   DRW      VD, VF, #7      ; Draw 7-byte sprite at VD, VF
$E38    $A3A4   LD       I, $3A4         ; Load 3A4 into I
$E3A    $1B86   JP       $B86            ; Jump to B86
$E3C    $C464   RND      V4, #64         ; V4 = random & 64
$E3E    $0F2C   SYS      $F2C            ; System call to F2C
$E40    $E13B   UNKNOWN  $E13B           ; Unknown Exxx instruction
$E42    $8F09   UNKNOWN  8F09            ; Unknown 8xxx instruction
$E44    $834D   UNKNOWN  834D            ; Unknown 8xxx instruction
$E46    $A7F7   LD       I, $7F7         ; Load 7F7 into I
$E48    $E42E   UNKNOWN  $E42E           ; Unknown Exxx instruction
$E4A    $6AB1   LD       VA, #B1         ; Load 177 into VA
$E4C    $8978   UNKNOWN  8978            ; Unknown 8xxx instruction
$E4E    $8E4E   SHL      VE              ; VE <<= 1, VF = MSB
$E50    $B41F   JP       V0, $41F        ; Jump to V0 + 41F
$E52    $5290   SE       V2, V9          ; Skip if V2 == V9
$E54    $3676   SE       V6, #76         ; Skip if V6 == 118
$E56    $A7B1   LD       I, $7B1         ; Load 7B1 into I
$E58    $99EA   UNKNOWN  $99EA           ; Unknown 9xxx instruction
$E5A    $F959   UNKNOWN  F959            ; Unknown Fxxx instruction
$E5C    $FF84   UNKNOWN  FF84            ; Unknown Fxxx instruction
$E5E    $2BDB   CALL     $BDB            ; Call subroutine at BDB
$E60    $16C0   JP       $6C0            ; Jump to 6C0
$E62    $0DA3   SYS      $DA3            ; System call to DA3
$E64    $211F   CALL     $11F            ; Call subroutine at 11F
$E66    $E99A   UNKNOWN  $E99A           ; Unknown Exxx instruction
$E68    $D4A7   DRW      V4, VA, #7      ; Draw 7-byte sprite at V4, VA
$E6A    $E02F   UNKNOWN  $E02F           ; Unknown Exxx instruction
$E6C    $E5BF   UNKNOWN  $E5BF           ; Unknown Exxx instruction
$E6E    $B468   JP       V0, $468        ; Jump to V0 + 468
$E70    $97D8   UNKNOWN  $97D8           ; Unknown 9xxx instruction
$E72    $BFA1   JP       V0, $FA1        ; Jump to V0 + FA1
$E74    $E6DB   UNKNOWN  $E6DB           ; Unknown Exxx instruction
$E76    $0AFD   SYS      $AFD            ; System call to AFD
$E78    $40D8   SNE      V0, #D8         ; Skip if V0 != 216
$E7A    $D082   DRW      V0, V8, #2      ; Draw 2-byte sprite at V0, V8
$E7C    $86D6   SHR      V6              ; V6 >>= 1, VF = LSB
$E7E    $C741   RND      V7, #41         ; V7 = random & 41
$E80    $3CE4   SE       VC, #E4         ; Skip if VC == 228
$E82    $5122   UNKNOWN  $5122           ; Unknown 5xxx instruction
$E84    $3C20   SE       VC, #20         ; Skip if VC == 32
$E86    $A260   LD       I, $260         ; Load 260 into I
$E88    $3F36   SE       VF, #36         ; Skip if VF == 54
$E8A    $12E7   JP       $2E7            ; Jump to 2E7
$E8C    $D2FB   DRW      V2, VF, #B      ; Draw 11-byte sprite at V2, VF
$E8E    $55B9   UNKNOWN  $55B9           ; Unknown 5xxx instruction
$E90    $A63A   LD       I, $63A         ; Load 63A into I
$E92    $7961   ADD      V9, #61         ; Add 97 to V9
$E94    $34E9   SE       V4, #E9         ; Skip if V4 == 233
$E96    $61A2   LD       V1, #A2         ; Load 162 into V1
$E98    $AE60   LD       I, $E60         ; Load E60 into I
$E9A    $3131   SE       V1, #31         ; Skip if V1 == 49
$E9C    $AB5B   LD       I, $B5B         ; Load B5B into I
$E9E    $0930   SYS      $930            ; System call to 930
$EA0    $03C4   SYS      $3C4            ; System call to 3C4
$EA2    $0027   SYS      $027            ; System call to 027
$EA4    $64D2   LD       V4, #D2         ; Load 210 into V4
$EA6    $9F21   UNKNOWN  $9F21           ; Unknown 9xxx instruction
$EA8    $63F9   LD       V3, #F9         ; Load 249 into V3
$EAA    $76E4   ADD      V6, #E4         ; Add 228 to V6
$EAC    $146D   JP       $46D            ; Jump to 46D
$EAE    $5572   UNKNOWN  $5572           ; Unknown 5xxx instruction
$EB0    $ED0E   UNKNOWN  $ED0E           ; Unknown Exxx instruction
$EB2    $DCE2   DRW      VC, VE, #2      ; Draw 2-byte sprite at VC, VE
$EB4    $0670   SYS      $670            ; System call to 670
$EB6    $2160   CALL     $160            ; Call subroutine at 160
$EB8    $ED12   UNKNOWN  $ED12           ; Unknown Exxx instruction
$EBA    $CA73   RND      VA, #73         ; VA = random & 73
$EBC    $9D5B   UNKNOWN  $9D5B           ; Unknown 9xxx instruction
$EBE    $1228   JP       $228            ; Jump to 228
$EC0    $0390   SYS      $390            ; System call to 390
$EC2    $144F   JP       $44F            ; Jump to 44F
$EC4    $7928   ADD      V9, #28         ; Add 40 to V9
$EC6    $2226   CALL     $226            ; Call subroutine at 226
$EC8    $C53C   RND      V5, #3C         ; V5 = random & 3C
$ECA    $CA43   RND      VA, #43         ; VA = random & 43
$ECC    $94D5   UNKNOWN  $94D5           ; Unknown 9xxx instruction
$ECE    $CC3D   RND      VC, #3D         ; VC = random & 3D
$ED0    $45F4   SNE      V5, #F4         ; Skip if V5 != 244
$ED2    $3E7D   SE       VE, #7D         ; Skip if VE == 125
$ED4    $FF78   UNKNOWN  FF78            ; Unknown Fxxx instruction
$ED6    $1560   JP       $560            ; Jump to 560
$ED8    $4909   SNE      V9, #09         ; Skip if V9 != 9
$EDA    $33BA   SE       V3, #BA         ; Skip if V3 == 186
$EDC    $5488   UNKNOWN  $5488           ; Unknown 5xxx instruction
$EDE    $F446   UNKNOWN  F446            ; Unknown Fxxx instruction
$EE0    $F216   UNKNOWN  F216            ; Unknown Fxxx instruction
$EE2    $065E   SYS      $65E            ; System call to 65E
$EE4    $94C6   UNKNOWN  $94C6           ; Unknown 9xxx instruction
$EE6    $CAF4   RND      VA, #F4         ; VA = random & F4
$EE8    $5B89   UNKNOWN  $5B89           ; Unknown 5xxx instruction
$EEA    $1DC2   JP       $DC2            ; Jump to DC2
$EEC    $2BBA   CALL     $BBA            ; Call subroutine at BBA
$EEE    $80AB   UNKNOWN  80AB            ; Unknown 8xxx instruction
$EF0    $03FE   SYS      $3FE            ; System call to 3FE
$EF2    $9995   UNKNOWN  $9995           ; Unknown 9xxx instruction
$EF4    $EAC8   UNKNOWN  $EAC8           ; Unknown Exxx instruction
$EF6    $66D2   LD       V6, #D2         ; Load 210 into V6
$EF8    $05E4   SYS      $5E4            ; System call to 5E4
$EFA    $FB27   UNKNOWN  FB27            ; Unknown Fxxx instruction
$EFC    $86CD   UNKNOWN  86CD            ; Unknown 8xxx instruction
$EFE    $BD1E   JP       V0, $D1E        ; Jump to V0 + D1E
$F00    $B447   JP       V0, $447        ; Jump to V0 + 447
$F02    $84EE   SHL      V4              ; V4 <<= 1, VF = MSB
$F04    $6E49   LD       VE, #49         ; Load 73 into VE
$F06    $F919   UNKNOWN  F919            ; Unknown Fxxx instruction
$F08    $7AA5   ADD      VA, #A5         ; Add 165 to VA
$F0A    $479E   SNE      V7, #9E         ; Skip if V7 != 158
$F0C    $7A2B   ADD      VA, #2B         ; Add 43 to VA
$F0E    $8A72   AND      VA, V7          ; VA &= V7
$F10    $09E5   SYS      $9E5            ; System call to 9E5
$F12    $70FD   ADD      V0, #FD         ; Add 253 to V0
$F14    $83CF   UNKNOWN  83CF            ; Unknown 8xxx instruction
$F16    $065A   SYS      $65A            ; System call to 65A
$F18    $6D5A   LD       VD, #5A         ; Load 90 into VD
$F1A    $B55D   JP       V0, $55D        ; Jump to V0 + 55D
$F1C    $A29F   LD       I, $29F         ; Load 29F into I
$F1E    $73B1   ADD      V3, #B1         ; Add 177 to V3
$F20    $F674   UNKNOWN  F674            ; Unknown Fxxx instruction
$F22    $18A6   JP       $8A6            ; Jump to 8A6
$F24    $0249   SYS      $249            ; System call to 249
$F26    $5C1A   UNKNOWN  $5C1A           ; Unknown 5xxx instruction
$F28    $0083   SYS      $083            ; System call to 083
$F2A    $6C91   LD       VC, #91         ; Load 145 into VC
$F2C    $A7BB   LD       I, $7BB         ; Load 7BB into I
$F2E    $912C   UNKNOWN  $912C           ; Unknown 9xxx instruction
$F30    $8906   SHR      V9              ; V9 >>= 1, VF = LSB
$F32    $B354   JP       V0, $354        ; Jump to V0 + 354
$F34    $9CD7   UNKNOWN  $9CD7           ; Unknown 9xxx instruction
$F36    $B65E   JP       V0, $65E        ; Jump to V0 + 65E
$F38    $4A17   SNE      VA, #17         ; Skip if VA != 23
$F3A    $FBE5   UNKNOWN  FBE5            ; Unknown Fxxx instruction
$F3C    $1C11   JP       $C11            ; Jump to C11
$F3E    $BC96   JP       V0, $C96        ; Jump to V0 + C96
$F40    $064C   SYS      $64C            ; System call to 64C
$F42    $2828   CALL     $828            ; Call subroutine at 828
$F44    $0001   SYS      $001            ; System call to 001
$F46    $C1AF   RND      V1, #AF         ; V1 = random & AF
$F48    $7412   ADD      V4, #12         ; Add 18 to V4
$F4A    $41D7   SNE      V1, #D7         ; Skip if V1 != 215
$F4C    $58DF   UNKNOWN  $58DF           ; Unknown 5xxx instruction
$F4E    $C2A3   RND      V2, #A3         ; V2 = random & A3
$F50    $4D60   SNE      VD, #60         ; Skip if VD != 96
$F52    $22EA   CALL     $2EA            ; Call subroutine at 2EA
$F54    $2DCE   CALL     $DCE            ; Call subroutine at DCE
$F56    $C82F   RND      V8, #2F         ; V8 = random & 2F
$F58    $ECC2   UNKNOWN  $ECC2           ; Unknown Exxx instruction
$F5A    $EC48   UNKNOWN  $EC48           ; Unknown Exxx instruction
$F5C    $FC21   UNKNOWN  FC21            ; Unknown Fxxx instruction
$F5E    $7F63   ADD      VF, #63         ; Add 99 to VF
$F60    $AD57   LD       I, $D57         ; Load D57 into I
$F62    $52C0   SE       V2, VC          ; Skip if V2 == VC
$F64    $B1BB   JP       V0, $1BB        ; Jump to V0 + 1BB
$F66    $CFD1   RND      VF, #D1         ; VF = random & D1
$F68    $3AF6   SE       VA, #F6         ; Skip if VA == 246
$F6A    $9739   UNKNOWN  $9739           ; Unknown 9xxx instruction
$F6C    $4855   SNE      V8, #55         ; Skip if V8 != 85
$F6E    $3AB8   SE       VA, #B8         ; Skip if VA == 184
$F70    $F47C   UNKNOWN  F47C            ; Unknown Fxxx instruction
$F72    $24B3   CALL     $4B3            ; Call subroutine at 4B3
$F74    $B865   JP       V0, $865        ; Jump to V0 + 865
$F76    $2819   CALL     $819            ; Call subroutine at 819
$F78    $93B3   UNKNOWN  $93B3           ; Unknown 9xxx instruction
$F7A    $2472   CALL     $472            ; Call subroutine at 472
$F7C    $ADDB   LD       I, $DDB         ; Load DDB into I
$F7E    $F352   UNKNOWN  F352            ; Unknown Fxxx instruction
$F80    $8C37   SUBN     VC, V3          ; VC = V3 - VC, VF = !borrow
$F82    $3ADE   SE       VA, #DE         ; Skip if VA == 222
$F84    $3370   SE       V3, #70         ; Skip if V3 == 112
$F86    $7E0D   ADD      VE, #0D         ; Add 13 to VE
$F88    $7CC6   ADD      VC, #C6         ; Add 198 to VC
$F8A    $D36B   DRW      V3, V6, #B      ; Draw 11-byte sprite at V3, V6
$F8C    $45E3   SNE      V5, #E3         ; Skip if V5 != 227
$F8E    $6ECC   LD       VE, #CC         ; Load 204 into VE
$F90    $1F62   JP       $F62            ; Jump to F62
$F92    $4EBE   SNE      VE, #BE         ; Skip if VE != 190
$F94    $D184   DRW      V1, V8, #4      ; Draw 4-byte sprite at V1, V8
$F96    $E5E8   UNKNOWN  $E5E8           ; Unknown Exxx instruction
$F98    $6F36   LD       VF, #36         ; Load 54 into VF
$F9A    $FBE2   UNKNOWN  FBE2            ; Unknown Fxxx instruction
$F9C    $D0FA   DRW      V0, VF, #A      ; Draw 10-byte sprite at V0, VF
$F9E    $4F0B   SNE      VF, #0B         ; Skip if VF != 11
$FA0    $6AE2   LD       VA, #E2         ; Load 226 into VA
$FA2    $5DFD   UNKNOWN  $5DFD           ; Unknown 5xxx instruction
$FA4    $62D5   LD       V2, #D5         ; Load 213 into V2
$FA6    $D18C   DRW      V1, V8, #C      ; Draw 12-byte sprite at V1, V8
$FA8    $C3F8   RND      V3, #F8         ; V3 = random & F8
$FAA    $0E0D   SYS      $E0D            ; System call to E0D
$FAC    $D93F   DRW      V9, V3, #F      ; Draw 15-byte sprite at V9, V3
$FAE    $6BD4   LD       VB, #D4         ; Load 212 into VB
$FB0    $89CC   UNKNOWN  89CC            ; Unknown 8xxx instruction
$FB2    $5F6B   UNKNOWN  $5F6B           ; Unknown 5xxx instruction
$FB4    $22D8   CALL     $2D8            ; Call subroutine at 2D8
$FB6    $8A55   SUB      VA, V5          ; VA -= V5, VF = !borrow
$FB8    $38CC   SE       V8, #CC         ; Skip if V8 == 204
$FBA    $E8A7   UNKNOWN  $E8A7           ; Unknown Exxx instruction
$FBC    $CD1F   RND      VD, #1F         ; VD = random & 1F
$FBE    $E443   UNKNOWN  $E443           ; Unknown Exxx instruction
$FC0    $350E   SE       V5, #0E         ; Skip if V5 == 14
$FC2    $A41C   LD       I, $41C         ; Load 41C into I
$FC4    $80EB   UNKNOWN  80EB            ; Unknown 8xxx instruction
$FC6    $40B9   SNE      V0, #B9         ; Skip if V0 != 185
$FC8    $FB11   UNKNOWN  FB11            ; Unknown Fxxx instruction
$FCA    $4B39   SNE      VB, #39         ; Skip if VB != 57
$FCC    $D23F   DRW      V2, V3, #F      ; Draw 15-byte sprite at V2, V3
$FCE    $9E94   UNKNOWN  $9E94           ; Unknown 9xxx instruction
$FD0    $0D2E   SYS      $D2E            ; System call to D2E
$FD2    $3485   SE       V4, #85         ; Skip if V4 == 133
$FD4    $AE65   LD       I, $E65         ; Load E65 into I
$FD6    $7E10   ADD      VE, #10         ; Add 16 to VE
$FD8    $CE6A   RND      VE, #6A         ; VE = random & 6A
$FDA    $604E   LD       V0, #4E         ; Load 78 into V0
$FDC    $AD9F   LD       I, $D9F         ; Load D9F into I
$FDE    $E65E   UNKNOWN  $E65E           ; Unknown Exxx instruction
$FE0    $62E9   LD       V2, #E9         ; Load 233 into V2
$FE2    $0248   SYS      $248            ; System call to 248
$FE4    $845D   UNKNOWN  845D            ; Unknown 8xxx instruction
$FE6    $7902   ADD      V9, #02         ; Add 2 to V9
$FE8    $7C52   ADD      VC, #52         ; Add 82 to VC
$FEA    $61B3   LD       V1, #B3         ; Load 179 into V1
$FEC    $0C1A   SYS      $C1A            ; System call to C1A
$FEE    $85BE   SHL      V5              ; V5 <<= 1, VF = MSB
$FF0    $D886   DRW      V8, V8, #6      ; Draw 6-byte sprite at V8, V8
$FF2    $C1DF   RND      V1, #DF         ; V1 = random & DF
$FF4    $F0EE   UNKNOWN  F0EE            ; Unknown Fxxx instruction
$FF6    $01D6   SYS      $1D6            ; System call to 1D6
$FF8    $419C   SNE      V1, #9C         ; Skip if V1 != 156
$FFA    $0281   SYS      $281            ; System call to 281
$FFC    $81BE   SHL      V1              ; V1 <<= 1, VF = MSB
$FFE    $95FE   UNKNOWN  $95FE           ; Unknown 9xxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 459 (25.6%)
  LD      : 219 (12.2%)
  SYS     : 208 (11.6%)
  JP      : 188 (10.5%)
  SNE     : 122 ( 6.8%)
  SE      : 111 ( 6.2%)
  CALL    : 109 ( 6.1%)
  ADD     : 108 ( 6.0%)
  RND     : 104 ( 5.8%)
  DRW     :  96 ( 5.4%)
  SHL     :  14 ( 0.8%)
  OR      :  11 ( 0.6%)
  AND     :  11 ( 0.6%)
  SUB     :  10 ( 0.6%)
  SHR     :  10 ( 0.6%)
  SUBN    :   8 ( 0.4%)
  XOR     :   4 ( 0.2%)

Memory Operations: 327 (18.2%)
Arithmetic Operations: 152 (8.5%)
