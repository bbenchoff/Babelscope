
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B626D01_I05188_C19036_1ab852370fe8.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 626
Instance: 5188
Direction: ascending
Final Array: [161, 161, 161, 161, 161, 161, 161, 204]
Operations: R:0 W:7 C:0 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 226
Sort Array References:
  $20E: LD I, $A7A ; Load A7A into I
  $21C: LD I, $308 ; Load 308 into I
  $220: LD I, $1A1 ; Load 1A1 into I
  $222: LD I, $1A1 ; Load 1A1 into I
  $224: LD I, $1A1 ; Load 1A1 into I
  $226: LD I, $1A1 ; Load 1A1 into I
  $228: LD I, $1A1 ; Load 1A1 into I
  $22A: LD I, $1A1 ; Load 1A1 into I
  $22C: LD I, $1A1 ; Load 1A1 into I
  $22E: LD I, $1A1 ; Load 1A1 into I
  $230: LD I, $1A1 ; Load 1A1 into I
  $232: LD I, $1A1 ; Load 1A1 into I
  $234: LD I, $1A1 ; Load 1A1 into I
  $236: LD I, $1A1 ; Load 1A1 into I
  $238: LD I, $1A1 ; Load 1A1 into I
  $23A: LD I, $1A1 ; Load 1A1 into I
  $23C: LD I, $1A1 ; Load 1A1 into I
  $23E: LD I, $1A1 ; Load 1A1 into I
  $240: LD I, $1A1 ; Load 1A1 into I
  $242: LD I, $1A1 ; Load 1A1 into I
  $244: LD I, $1A1 ; Load 1A1 into I
  $246: LD I, $1A1 ; Load 1A1 into I
  $248: LD I, $1A1 ; Load 1A1 into I
  $24A: LD I, $1A1 ; Load 1A1 into I
  $24C: LD I, $1A1 ; Load 1A1 into I
  $24E: LD I, $1A1 ; Load 1A1 into I
  $250: LD I, $1A1 ; Load 1A1 into I
  $252: LD I, $1A1 ; Load 1A1 into I
  $254: LD I, $1A1 ; Load 1A1 into I
  $256: LD I, $1A1 ; Load 1A1 into I
  $258: LD I, $1A1 ; Load 1A1 into I
  $25A: LD I, $1A1 ; Load 1A1 into I
  $25C: LD I, $1A1 ; Load 1A1 into I
  $25E: LD I, $1A1 ; Load 1A1 into I
  $260: LD I, $1A1 ; Load 1A1 into I
  $262: LD I, $1A1 ; Load 1A1 into I
  $264: LD I, $1A1 ; Load 1A1 into I
  $266: LD I, $1A1 ; Load 1A1 into I
  $268: LD I, $1A1 ; Load 1A1 into I
  $26A: LD I, $1A1 ; Load 1A1 into I
  $26C: LD I, $1A1 ; Load 1A1 into I
  $26E: LD I, $1A1 ; Load 1A1 into I
  $270: LD I, $1A1 ; Load 1A1 into I
  $272: LD I, $1A1 ; Load 1A1 into I
  $274: LD I, $1A1 ; Load 1A1 into I
  $276: LD I, $1A1 ; Load 1A1 into I
  $278: LD I, $1A1 ; Load 1A1 into I
  $27A: LD I, $1A1 ; Load 1A1 into I
  $27C: LD I, $1A1 ; Load 1A1 into I
  $27E: LD I, $1A1 ; Load 1A1 into I
  $280: LD I, $1A1 ; Load 1A1 into I
  $282: LD I, $1A1 ; Load 1A1 into I
  $284: LD I, $1A1 ; Load 1A1 into I
  $286: LD I, $1A1 ; Load 1A1 into I
  $288: LD I, $1A1 ; Load 1A1 into I
  $28A: LD I, $1A1 ; Load 1A1 into I
  $28C: LD I, $1A1 ; Load 1A1 into I
  $28E: LD I, $1A1 ; Load 1A1 into I
  $290: LD I, $1A1 ; Load 1A1 into I
  $292: LD I, $1A1 ; Load 1A1 into I
  $294: LD I, $1A1 ; Load 1A1 into I
  $296: LD I, $1A1 ; Load 1A1 into I
  $298: LD I, $1A1 ; Load 1A1 into I
  $29A: LD I, $1A1 ; Load 1A1 into I
  $29C: LD I, $1A1 ; Load 1A1 into I
  $29E: LD I, $1A1 ; Load 1A1 into I
  $2A0: LD I, $1A1 ; Load 1A1 into I
  $2A2: LD I, $1A1 ; Load 1A1 into I
  $2A4: LD I, $1A1 ; Load 1A1 into I
  $2A6: LD I, $1A1 ; Load 1A1 into I
  $2A8: LD I, $1A1 ; Load 1A1 into I
  $2AA: LD I, $1A1 ; Load 1A1 into I
  $2AC: LD I, $1A1 ; Load 1A1 into I
  $2AE: LD I, $1A1 ; Load 1A1 into I
  $2B0: LD I, $1A1 ; Load 1A1 into I
  $2B2: LD I, $1A1 ; Load 1A1 into I
  $2B4: LD I, $1A1 ; Load 1A1 into I
  $2B6: LD I, $1A1 ; Load 1A1 into I
  $2B8: LD I, $1A1 ; Load 1A1 into I
  $2BA: LD I, $1A1 ; Load 1A1 into I
  $2BC: LD I, $1A1 ; Load 1A1 into I
  $2BE: LD I, $1A1 ; Load 1A1 into I
  $2C0: LD I, $1A1 ; Load 1A1 into I
  $2C2: LD I, $1A1 ; Load 1A1 into I
  $2C4: LD I, $1A1 ; Load 1A1 into I
  $2C6: LD I, $1A1 ; Load 1A1 into I
  $2C8: LD I, $1A1 ; Load 1A1 into I
  $2CA: LD I, $1A1 ; Load 1A1 into I
  $2CC: LD I, $1A1 ; Load 1A1 into I
  $2CE: LD I, $1A1 ; Load 1A1 into I
  $2D0: LD I, $1A1 ; Load 1A1 into I
  $2D2: LD I, $1A1 ; Load 1A1 into I
  $2D4: LD I, $1A1 ; Load 1A1 into I
  $2D6: LD I, $1A1 ; Load 1A1 into I
  $2D8: LD I, $1A1 ; Load 1A1 into I
  $2DA: LD I, $1A1 ; Load 1A1 into I
  $2DC: LD I, $1A1 ; Load 1A1 into I
  $2DE: LD I, $1A1 ; Load 1A1 into I
  $2E0: LD I, $1A1 ; Load 1A1 into I
  $2E2: LD I, $1A1 ; Load 1A1 into I
  $2E4: LD I, $1A1 ; Load 1A1 into I
  $2E6: LD I, $1A1 ; Load 1A1 into I
  $2E8: LD I, $1A1 ; Load 1A1 into I
  $2EA: LD I, $1A1 ; Load 1A1 into I
  $2EC: LD I, $1A1 ; Load 1A1 into I
  $2EE: LD I, $1A1 ; Load 1A1 into I
  $2F0: LD I, $1A1 ; Load 1A1 into I
  $2F2: LD I, $1A1 ; Load 1A1 into I
  $2F4: LD I, $1A1 ; Load 1A1 into I
  $2F6: LD I, $1A1 ; Load 1A1 into I
  $2F8: LD I, $1A1 ; Load 1A1 into I
  $2FA: LD I, $1A1 ; Load 1A1 into I
  $2FC: LD I, $1A1 ; Load 1A1 into I
  $2FE: LD I, $1A1 ; Load 1A1 into I
  $300: LD I, $1A1 ; Load 1A1 into I
  $302: LD I, $1A1 ; Load 1A1 into I
  $304: LD I, $1A1 ; Load 1A1 into I
  $306: LD I, $1CC ; Load 1CC into I
  $32E: LD I, $F0E ; Load F0E into I
  $35E: LD I, $1FF ; Load 1FF into I
  $382: LD I, $BD3 ; Load BD3 into I
  $386: LD I, $1E2 ; Load 1E2 into I
  $3BC: LD I, $B85 ; Load B85 into I
  $3DE: LD I, $EBC ; Load EBC into I
  $3EE: LD I, $A8F ; Load A8F into I
  $406: LD I, $7DF ; Load 7DF into I
  $416: LD I, $6C0 ; Load 6C0 into I
  $432: LD I, $009 ; Load 009 into I
  $45A: LD I, $664 ; Load 664 into I
  $466: ADD I, VF ; I ADDRESS MANIPULATION
  $46A: LD I, $3ED ; Load 3ED into I
  $48A: LD I, $C5E ; Load C5E into I
  $4A8: LD I, $B68 ; Load B68 into I
  $4B8: LD I, $A35 ; Load A35 into I
  $4BA: LD I, $4DD ; Load 4DD into I
  $4BC: LD I, $BF9 ; Load BF9 into I
  $4E6: LD I, $2BB ; Load 2BB into I
  $4FE: LD I, $3BA ; Load 3BA into I
  $506: LD I, $F22 ; Load F22 into I
  $514: LD I, $9CF ; Load 9CF into I
  $544: LD I, $694 ; Load 694 into I
  $546: LD I, $7EC ; Load 7EC into I
  $55E: LD I, $47B ; Load 47B into I
  $568: LD I, $F9F ; Load F9F into I
  $574: LD I, $4A3 ; Load 4A3 into I
  $5A6: LD I, $FCF ; Load FCF into I
  $5A8: LD I, $713 ; Load 713 into I
  $5BA: LD I, $162 ; Load 162 into I
  $5BE: LD I, $1E2 ; Load 1E2 into I
  $5C8: LD I, $1AA ; Load 1AA into I
  $5CA: LD I, $F08 ; Load F08 into I
  $5D2: LD I, $21D ; Load 21D into I
  $5E0: LD I, $4E9 ; Load 4E9 into I
  $60E: LD I, $B96 ; Load B96 into I
  $62A: LD I, $587 ; Load 587 into I
  $648: LD I, $FBE ; Load FBE into I
  $66C: LD [I], V0 ; Store V0-V0 at I
  $6C4: LD I, $4EF ; Load 4EF into I
  $6D4: LD I, $B2E ; Load B2E into I
  $6EC: LD I, $4C1 ; Load 4C1 into I
  $6F8: LD I, $E15 ; Load E15 into I
  $73A: LD I, $358 ; Load 358 into I
  $744: LD I, $287 ; Load 287 into I
  $76A: LD I, $679 ; Load 679 into I
  $790: LD I, $0F5 ; Load 0F5 into I
  $79C: LD I, $5A3 ; Load 5A3 into I
  $79E: LD I, $BFF ; Load BFF into I
  $7A4: LD I, $5A8 ; Load 5A8 into I
  $7B8: LD I, $8FD ; Load 8FD into I
  $7D4: LD I, $D50 ; Load D50 into I
  $7FA: LD I, $701 ; Load 701 into I
  $840: LD I, $8B8 ; Load 8B8 into I
  $858: LD I, $10E ; Load 10E into I
  $870: LD I, $593 ; Load 593 into I
  $880: LD I, $07A ; Load 07A into I
  $8AA: LD I, $09B ; Load 09B into I
  $90E: LD I, $3D0 ; Load 3D0 into I
  $94C: LD I, $393 ; Load 393 into I
  $980: LD I, $F1F ; Load F1F into I
  $9E4: LD I, $66E ; Load 66E into I
  $A24: LD I, $DAA ; Load DAA into I
  $A26: LD I, $26A ; Load 26A into I
  $A30: LD I, $3B2 ; Load 3B2 into I
  $A40: LD I, $460 ; Load 460 into I
  $A58: LD I, $0F2 ; Load 0F2 into I
  $A5E: LD I, $73E ; Load 73E into I
  $A72: LD I, $26E ; Load 26E into I
  $A96: LD I, $85E ; Load 85E into I
  $AD6: LD I, $DC7 ; Load DC7 into I
  $B14: LD I, $82E ; Load 82E into I
  $B26: LD I, $C40 ; Load C40 into I
  $B5A: LD I, $C08 ; Load C08 into I
  $B74: LD I, $C8C ; Load C8C into I
  $BB6: LD I, $AF8 ; Load AF8 into I
  $BEC: LD I, $B05 ; Load B05 into I
  $C1A: LD I, $222 ; Load 222 into I
  $C26: LD [I], V4 ; Store V0-V4 at I
  $C54: LD I, $F48 ; Load F48 into I
  $C56: LD I, $F53 ; Load F53 into I
  $C58: LD I, $57B ; Load 57B into I
  $C7A: LD I, $A38 ; Load A38 into I
  $C82: ADD I, V2 ; I ADDRESS MANIPULATION
  $CA6: LD I, $830 ; Load 830 into I
  $CC2: LD I, $356 ; Load 356 into I
  $CE4: LD I, $378 ; Load 378 into I
  $D08: LD I, $42F ; Load 42F into I
  $D28: LD I, $667 ; Load 667 into I
  $D5E: LD I, $222 ; Load 222 into I
  $D74: LD I, $CC9 ; Load CC9 into I
  $D76: LD I, $3FB ; Load 3FB into I
  $DA8: LD I, $183 ; Load 183 into I
  $DB6: LD I, $74F ; Load 74F into I
  $DD4: LD I, $1CF ; Load 1CF into I
  $DD8: LD I, $269 ; Load 269 into I
  $DEC: LD I, $B65 ; Load B65 into I
  $E34: LD I, $FFD ; Load FFD into I
  $E3A: LD I, $06B ; Load 06B into I
  $E4E: LD I, $140 ; Load 140 into I
  $EB4: LD I, $FD6 ; Load FD6 into I
  $ED4: LD I, $6F4 ; Load 6F4 into I
  $EFE: LD I, $DDB ; Load DDB into I
  $F10: LD I, $AA5 ; Load AA5 into I
  $F92: LD I, $2A0 ; Load 2A0 into I
  $F98: LD I, $D80 ; Load D80 into I
  $FCE: LD I, $4E3 ; Load 4E3 into I
  $FE0: LD I, $4B6 ; Load 4B6 into I

CONTROL FLOW ANALYSIS:
Jumps: 205
Calls: 87
Branches: 223
Loops: 134
Loop Structures:
  $210 -> $145 (backward jump)
  $212 -> $03B (backward jump)
  $30C -> $2BB (backward jump)
  $34E -> $023 (backward jump)
  $3A0 -> $1A9 (backward jump)
  $3CC -> $1C3 (backward jump)
  $3FE -> $37D (backward jump)
  $438 -> $394 (backward jump)
  $43A -> $10C (backward jump)
  $43E -> $240 (backward jump)
  $448 -> $1FD (backward jump)
  $492 -> $0A1 (backward jump)
  $520 -> $0C6 (backward jump)
  $530 -> $4DF (backward jump)
  $552 -> $381 (backward jump)
  $554 -> $1C0 (backward jump)
  $594 -> $22C (backward jump)
  $596 -> $436 (backward jump)
  $5CC -> $4AF (backward jump)
  $5D8 -> $080 (backward jump)
  $5EA -> $4EE (backward jump)
  $5FC -> $5C0 (backward jump)
  $61A -> $369 (backward jump)
  $644 -> $59A (backward jump)
  $67A -> $05B (backward jump)
  $69A -> $26D (backward jump)
  $6CA -> $5BB (backward jump)
  $6E4 -> $3B7 (backward jump)
  $706 -> $6DF (backward jump)
  $70A -> $26D (backward jump)
  $72E -> $725 (backward jump)
  $77E -> $601 (backward jump)
  $78C -> $5AD (backward jump)
  $7AE -> $4B6 (backward jump)
  $7C2 -> $200 (backward jump)
  $7CA -> $677 (backward jump)
  $7CC -> $513 (backward jump)
  $806 -> $155 (backward jump)
  $81C -> $3ED (backward jump)
  $842 -> $53F (backward jump)
  $856 -> $278 (backward jump)
  $85C -> $31B (backward jump)
  $862 -> $2A5 (backward jump)
  $86C -> $647 (backward jump)
  $872 -> $055 (backward jump)
  $876 -> $7CD (backward jump)
  $8BA -> $45F (backward jump)
  $8C4 -> $172 (backward jump)
  $8CC -> $21B (backward jump)
  $8DA -> $73F (backward jump)
  $910 -> $7BE (backward jump)
  $916 -> $671 (backward jump)
  $93A -> $399 (backward jump)
  $940 -> $33F (backward jump)
  $950 -> $911 (backward jump)
  $98A -> $31F (backward jump)
  $99C -> $692 (backward jump)
  $9A0 -> $71B (backward jump)
  $9B0 -> $837 (backward jump)
  $9C6 -> $0EA (backward jump)
  $9D8 -> $8AE (backward jump)
  $A08 -> $9BC (backward jump)
  $A0C -> $57A (backward jump)
  $A10 -> $3D8 (backward jump)
  $A1C -> $546 (backward jump)
  $A4A -> $1A0 (backward jump)
  $A92 -> $301 (backward jump)
  $A9E -> $156 (backward jump)
  $AC2 -> $696 (backward jump)
  $ACA -> $3F8 (backward jump)
  $AF0 -> $039 (backward jump)
  $B0E -> $5A8 (backward jump)
  $B40 -> $742 (backward jump)
  $B62 -> $756 (backward jump)
  $B6A -> $65E (backward jump)
  $B90 -> $869 (backward jump)
  $BAA -> $6F6 (backward jump)
  $BB2 -> $4A4 (backward jump)
  $BDE -> $877 (backward jump)
  $BE0 -> $672 (backward jump)
  $BEA -> $018 (backward jump)
  $BF2 -> $52F (backward jump)
  $C1C -> $AFA (backward jump)
  $C1E -> $679 (backward jump)
  $C74 -> $882 (backward jump)
  $C7C -> $712 (backward jump)
  $C84 -> $433 (backward jump)
  $C8A -> $440 (backward jump)
  $CB8 -> $A75 (backward jump)
  $CC4 -> $BDC (backward jump)
  $CD0 -> $674 (backward jump)
  $CFC -> $3E1 (backward jump)
  $D02 -> $165 (backward jump)
  $D1E -> $116 (backward jump)
  $D26 -> $BA4 (backward jump)
  $D3C -> $36C (backward jump)
  $D3E -> $429 (backward jump)
  $D48 -> $A28 (backward jump)
  $D5C -> $15D (backward jump)
  $D60 -> $3D5 (backward jump)
  $D6C -> $D53 (backward jump)
  $D72 -> $89D (backward jump)
  $D8E -> $0B3 (backward jump)
  $DDC -> $791 (backward jump)
  $DF0 -> $23E (backward jump)
  $E40 -> $BD4 (backward jump)
  $E42 -> $3BA (backward jump)
  $E5E -> $4D3 (backward jump)
  $E88 -> $147 (backward jump)
  $E90 -> $8AE (backward jump)
  $EAA -> $211 (backward jump)
  $EC0 -> $CE2 (backward jump)
  $EC2 -> $2A9 (backward jump)
  $ED8 -> $84D (backward jump)
  $EDC -> $198 (backward jump)
  $EE8 -> $137 (backward jump)
  $EFC -> $644 (backward jump)
  $F02 -> $6FF (backward jump)
  $F04 -> $2F8 (backward jump)
  $F0A -> $8DF (backward jump)
  $F12 -> $7A6 (backward jump)
  $F16 -> $B3E (backward jump)
  $F38 -> $02D (backward jump)
  $F3A -> $9F5 (backward jump)
  $F4E -> $9E2 (backward jump)
  $F54 -> $4C6 (backward jump)
  $F68 -> $A14 (backward jump)
  $F6C -> $629 (backward jump)
  $F70 -> $334 (backward jump)
  $F8E -> $590 (backward jump)
  $F90 -> $075 (backward jump)
  $FA0 -> $654 (backward jump)
  $FDC -> $851 (backward jump)
  $FF8 -> $839 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $03C7   SYS      $3C7            ; System call to 3C7
$202    $F753   UNKNOWN  F753            ; Unknown Fxxx instruction
$204    $5E31   UNKNOWN  $5E31           ; Unknown 5xxx instruction
$206    $6403   LD       V4, #03         ; Load 3 into V4
$208    $CC68   RND      VC, #68         ; VC = random & 68
$20A    $FD49   UNKNOWN  FD49            ; Unknown Fxxx instruction
$20C    $CEB1   RND      VE, #B1         ; VE = random & B1
$20E    $AA7A   LD       I, $A7A         ; Load A7A into I
$210    $B145   JP       V0, $145        ; Jump to V0 + 145
$212    $B03B   JP       V0, $03B        ; Jump to V0 + 03B
$214    $E43B   UNKNOWN  $E43B           ; Unknown Exxx instruction
$216    $B9C0   JP       V0, $9C0        ; Jump to V0 + 9C0
$218    $2F5C   CALL     $F5C            ; Call subroutine at F5C
$21A    $D90D   DRW      V9, V0, #D      ; Draw 13-byte sprite at V9, V0
$21C    $A308   LD       I, $308         ; Load 308 into I
$21E    $0DCB   SYS      $DCB            ; System call to DCB
$220    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$222    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$224    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$226    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$228    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$22A    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$22C    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$22E    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$230    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$232    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$234    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$236    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$238    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$23A    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$23C    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$23E    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$240    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$242    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$244    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$246    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$248    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$24A    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$24C    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$24E    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$250    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$252    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$254    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$256    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$258    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$25A    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$25C    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$25E    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$260    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$262    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$264    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$266    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$268    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$26A    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$26C    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$26E    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$270    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$272    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$274    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$276    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$278    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$27A    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$27C    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$27E    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$280    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$282    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$284    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$286    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$288    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$28A    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$28C    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$28E    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$290    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$292    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$294    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$296    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$298    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$29A    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$29C    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$29E    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2A0    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2A2    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2A4    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2A6    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2A8    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2AA    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2AC    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2AE    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2B0    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2B2    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2B4    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2B6    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2B8    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2BA    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2BC    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2BE    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2C0    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2C2    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2C4    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2C6    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2C8    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2CA    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2CC    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2CE    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2D0    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2D2    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2D4    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2D6    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2D8    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2DA    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2DC    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2DE    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2E0    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2E2    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2E4    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2E6    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2E8    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2EA    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2EC    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2EE    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2F0    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2F2    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2F4    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2F6    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2F8    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2FA    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2FC    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$2FE    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$300    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$302    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$304    $A1A1   LD       I, $1A1         ; Load 1A1 into I
$306    $A1CC   LD       I, $1CC         ; Load 1CC into I
$308    $4BA6   SNE      VB, #A6         ; Skip if VB != 166
$30A    $96A6   UNKNOWN  $96A6           ; Unknown 9xxx instruction
$30C    $B2BB   JP       V0, $2BB        ; Jump to V0 + 2BB
$30E    $72B2   ADD      V2, #B2         ; Add 178 to V2
$310    $1656   JP       $656            ; Jump to 656
$312    $D06F   DRW      V0, V6, #F      ; Draw 15-byte sprite at V0, V6
$314    $5352   UNKNOWN  $5352           ; Unknown 5xxx instruction
$316    $8E02   AND      VE, V0          ; VE &= V0
$318    $D1EE   DRW      V1, VE, #E      ; Draw 14-byte sprite at V1, VE
$31A    $9F91   UNKNOWN  $9F91           ; Unknown 9xxx instruction
$31C    $54A8   UNKNOWN  $54A8           ; Unknown 5xxx instruction
$31E    $9EE7   UNKNOWN  $9EE7           ; Unknown 9xxx instruction
$320    $0653   SYS      $653            ; System call to 653
$322    $CEFC   RND      VE, #FC         ; VE = random & FC
$324    $0C9A   SYS      $C9A            ; System call to C9A
$326    $5462   UNKNOWN  $5462           ; Unknown 5xxx instruction
$328    $670F   LD       V7, #0F         ; Load 15 into V7
$32A    $21BF   CALL     $1BF            ; Call subroutine at 1BF
$32C    $477A   SNE      V7, #7A         ; Skip if V7 != 122
$32E    $AF0E   LD       I, $F0E         ; Load F0E into I
$330    $513B   UNKNOWN  $513B           ; Unknown 5xxx instruction
$332    $F5A1   UNKNOWN  F5A1            ; Unknown Fxxx instruction
$334    $1606   JP       $606            ; Jump to 606
$336    $1DDE   JP       $DDE            ; Jump to DDE
$338    $62AD   LD       V2, #AD         ; Load 173 into V2
$33A    $BE30   JP       V0, $E30        ; Jump to V0 + E30
$33C    $0025   SYS      $025            ; System call to 025
$33E    $1FD3   JP       $FD3            ; Jump to FD3
$340    $DEEA   DRW      VE, VE, #A      ; Draw 10-byte sprite at VE, VE
$342    $381F   SE       V8, #1F         ; Skip if V8 == 31
$344    $D3C7   DRW      V3, VC, #7      ; Draw 7-byte sprite at V3, VC
$346    $7EE2   ADD      VE, #E2         ; Add 226 to VE
$348    $8261   OR       V2, V6          ; V2 |= V6
$34A    $B470   JP       V0, $470        ; Jump to V0 + 470
$34C    $05DA   SYS      $5DA            ; System call to 5DA
$34E    $B023   JP       V0, $023        ; Jump to V0 + 023
$350    $7C70   ADD      VC, #70         ; Add 112 to VC
$352    $94B9   UNKNOWN  $94B9           ; Unknown 9xxx instruction
$354    $78B8   ADD      V8, #B8         ; Add 184 to V8
$356    $24E0   CALL     $4E0            ; Call subroutine at 4E0
$358    $811C   UNKNOWN  811C            ; Unknown 8xxx instruction
$35A    $554C   UNKNOWN  $554C           ; Unknown 5xxx instruction
$35C    $3683   SE       V6, #83         ; Skip if V6 == 131
$35E    $A1FF   LD       I, $1FF         ; Load 1FF into I
$360    $FE52   UNKNOWN  FE52            ; Unknown Fxxx instruction
$362    $3ED9   SE       VE, #D9         ; Skip if VE == 217
$364    $5B52   UNKNOWN  $5B52           ; Unknown 5xxx instruction
$366    $DE99   DRW      VE, V9, #9      ; Draw 9-byte sprite at VE, V9
$368    $3470   SE       V4, #70         ; Skip if V4 == 112
$36A    $CF2B   RND      VF, #2B         ; VF = random & 2B
$36C    $95D1   UNKNOWN  $95D1           ; Unknown 9xxx instruction
$36E    $6AFE   LD       VA, #FE         ; Load 254 into VA
$370    $5E43   UNKNOWN  $5E43           ; Unknown 5xxx instruction
$372    $66DF   LD       V6, #DF         ; Load 223 into V6
$374    $7A4A   ADD      VA, #4A         ; Add 74 to VA
$376    $158A   JP       $58A            ; Jump to 58A
$378    $FF85   UNKNOWN  FF85            ; Unknown Fxxx instruction
$37A    $B471   JP       V0, $471        ; Jump to V0 + 471
$37C    $0A31   SYS      $A31            ; System call to A31
$37E    $8EA9   UNKNOWN  8EA9            ; Unknown 8xxx instruction
$380    $4EAD   SNE      VE, #AD         ; Skip if VE != 173
$382    $ABD3   LD       I, $BD3         ; Load BD3 into I
$384    $5C8C   UNKNOWN  $5C8C           ; Unknown 5xxx instruction
$386    $A1E2   LD       I, $1E2         ; Load 1E2 into I
$388    $9E2B   UNKNOWN  $9E2B           ; Unknown 9xxx instruction
$38A    $0AD3   SYS      $AD3            ; System call to AD3
$38C    $3519   SE       V5, #19         ; Skip if V5 == 25
$38E    $FC87   UNKNOWN  FC87            ; Unknown Fxxx instruction
$390    $8400   LD       V4, V0          ; V4 = V0
$392    $FEF8   UNKNOWN  FEF8            ; Unknown Fxxx instruction
$394    $84EF   UNKNOWN  84EF            ; Unknown 8xxx instruction
$396    $E9D1   UNKNOWN  $E9D1           ; Unknown Exxx instruction
$398    $CED8   RND      VE, #D8         ; VE = random & D8
$39A    $F603   UNKNOWN  F603            ; Unknown Fxxx instruction
$39C    $73FB   ADD      V3, #FB         ; Add 251 to V3
$39E    $3FD4   SE       VF, #D4         ; Skip if VF == 212
$3A0    $B1A9   JP       V0, $1A9        ; Jump to V0 + 1A9
$3A2    $30A5   SE       V0, #A5         ; Skip if V0 == 165
$3A4    $05C5   SYS      $5C5            ; System call to 5C5
$3A6    $04C2   SYS      $4C2            ; System call to 4C2
$3A8    $59CE   UNKNOWN  $59CE           ; Unknown 5xxx instruction
$3AA    $9102   UNKNOWN  $9102           ; Unknown 9xxx instruction
$3AC    $4773   SNE      V7, #73         ; Skip if V7 != 115
$3AE    $8E9B   UNKNOWN  8E9B            ; Unknown 8xxx instruction
$3B0    $79D6   ADD      V9, #D6         ; Add 214 to V9
$3B2    $5880   SE       V8, V8          ; Skip if V8 == V8
$3B4    $5514   UNKNOWN  $5514           ; Unknown 5xxx instruction
$3B6    $0521   SYS      $521            ; System call to 521
$3B8    $FB3E   UNKNOWN  FB3E            ; Unknown Fxxx instruction
$3BA    $00C1   SYS      $0C1            ; System call to 0C1
$3BC    $AB85   LD       I, $B85         ; Load B85 into I
$3BE    $4120   SNE      V1, #20         ; Skip if V1 != 32
$3C0    $29A8   CALL     $9A8            ; Call subroutine at 9A8
$3C2    $D64D   DRW      V6, V4, #D      ; Draw 13-byte sprite at V6, V4
$3C4    $71A7   ADD      V1, #A7         ; Add 167 to V1
$3C6    $6A38   LD       VA, #38         ; Load 56 into VA
$3C8    $2DF2   CALL     $DF2            ; Call subroutine at DF2
$3CA    $D934   DRW      V9, V3, #4      ; Draw 4-byte sprite at V9, V3
$3CC    $11C3   JP       $1C3            ; Jump to 1C3
$3CE    $3BBE   SE       VB, #BE         ; Skip if VB == 190
$3D0    $721F   ADD      V2, #1F         ; Add 31 to V2
$3D2    $C2DA   RND      V2, #DA         ; V2 = random & DA
$3D4    $8F73   XOR      VF, V7          ; VF ^= V7
$3D6    $6417   LD       V4, #17         ; Load 23 into V4
$3D8    $BC61   JP       V0, $C61        ; Jump to V0 + C61
$3DA    $B875   JP       V0, $875        ; Jump to V0 + 875
$3DC    $8465   SUB      V4, V6          ; V4 -= V6, VF = !borrow
$3DE    $AEBC   LD       I, $EBC         ; Load EBC into I
$3E0    $7BF7   ADD      VB, #F7         ; Add 247 to VB
$3E2    $BF69   JP       V0, $F69        ; Jump to V0 + F69
$3E4    $49C0   SNE      V9, #C0         ; Skip if V9 != 192
$3E6    $C222   RND      V2, #22         ; V2 = random & 22
$3E8    $BB51   JP       V0, $B51        ; Jump to V0 + B51
$3EA    $F2D5   UNKNOWN  F2D5            ; Unknown Fxxx instruction
$3EC    $7C2F   ADD      VC, #2F         ; Add 47 to VC
$3EE    $AA8F   LD       I, $A8F         ; Load A8F into I
$3F0    $31E1   SE       V1, #E1         ; Skip if V1 == 225
$3F2    $9C94   UNKNOWN  $9C94           ; Unknown 9xxx instruction
$3F4    $E17F   UNKNOWN  $E17F           ; Unknown Exxx instruction
$3F6    $FF95   UNKNOWN  FF95            ; Unknown Fxxx instruction
$3F8    $27EB   CALL     $7EB            ; Call subroutine at 7EB
$3FA    $6BE3   LD       VB, #E3         ; Load 227 into VB
$3FC    $1C60   JP       $C60            ; Jump to C60
$3FE    $B37D   JP       V0, $37D        ; Jump to V0 + 37D
$400    $55C1   UNKNOWN  $55C1           ; Unknown 5xxx instruction
$402    $FB72   UNKNOWN  FB72            ; Unknown Fxxx instruction
$404    $0548   SYS      $548            ; System call to 548
$406    $A7DF   LD       I, $7DF         ; Load 7DF into I
$408    $9765   UNKNOWN  $9765           ; Unknown 9xxx instruction
$40A    $9FBD   UNKNOWN  $9FBD           ; Unknown 9xxx instruction
$40C    $C845   RND      V8, #45         ; V8 = random & 45
$40E    $CF87   RND      VF, #87         ; VF = random & 87
$410    $6968   LD       V9, #68         ; Load 104 into V9
$412    $F757   UNKNOWN  F757            ; Unknown Fxxx instruction
$414    $0E59   SYS      $E59            ; System call to E59
$416    $A6C0   LD       I, $6C0         ; Load 6C0 into I
$418    $D892   DRW      V8, V9, #2      ; Draw 2-byte sprite at V8, V9
$41A    $3EF2   SE       VE, #F2         ; Skip if VE == 242
$41C    $55E9   UNKNOWN  $55E9           ; Unknown 5xxx instruction
$41E    $EB88   UNKNOWN  $EB88           ; Unknown Exxx instruction
$420    $FD43   UNKNOWN  FD43            ; Unknown Fxxx instruction
$422    $D2D0   DRW      V2, VD, #0      ; Draw 0-byte sprite at V2, VD
$424    $7A0E   ADD      VA, #0E         ; Add 14 to VA
$426    $D4F8   DRW      V4, VF, #8      ; Draw 8-byte sprite at V4, VF
$428    $7B60   ADD      VB, #60         ; Add 96 to VB
$42A    $86A7   SUBN     V6, VA          ; V6 = VA - V6, VF = !borrow
$42C    $8BC7   SUBN     VB, VC          ; VB = VC - VB, VF = !borrow
$42E    $D9DB   DRW      V9, VD, #B      ; Draw 11-byte sprite at V9, VD
$430    $4BB4   SNE      VB, #B4         ; Skip if VB != 180
$432    $A009   LD       I, $009         ; Load 009 into I
$434    $F025   UNKNOWN  F025            ; Unknown Fxxx instruction
$436    $7441   ADD      V4, #41         ; Add 65 to V4
$438    $1394   JP       $394            ; Jump to 394
$43A    $110C   JP       $10C            ; Jump to 10C
$43C    $FD1A   UNKNOWN  FD1A            ; Unknown Fxxx instruction
$43E    $1240   JP       $240            ; Jump to 240
$440    $CCB7   RND      VC, #B7         ; VC = random & B7
$442    $EE64   UNKNOWN  $EE64           ; Unknown Exxx instruction
$444    $5D35   UNKNOWN  $5D35           ; Unknown 5xxx instruction
$446    $2B08   CALL     $B08            ; Call subroutine at B08
$448    $11FD   JP       $1FD            ; Jump to 1FD
$44A    $0DCA   SYS      $DCA            ; System call to DCA
$44C    $9C4A   UNKNOWN  $9C4A           ; Unknown 9xxx instruction
$44E    $BFBD   JP       V0, $FBD        ; Jump to V0 + FBD
$450    $F82F   UNKNOWN  F82F            ; Unknown Fxxx instruction
$452    $ECCF   UNKNOWN  $ECCF           ; Unknown Exxx instruction
$454    $D084   DRW      V0, V8, #4      ; Draw 4-byte sprite at V0, V8
$456    $1627   JP       $627            ; Jump to 627
$458    $DC82   DRW      VC, V8, #2      ; Draw 2-byte sprite at VC, V8
$45A    $A664   LD       I, $664         ; Load 664 into I
$45C    $4424   SNE      V4, #24         ; Skip if V4 != 36
$45E    $E0D8   UNKNOWN  $E0D8           ; Unknown Exxx instruction
$460    $92F3   UNKNOWN  $92F3           ; Unknown 9xxx instruction
$462    $BDB4   JP       V0, $DB4        ; Jump to V0 + DB4
$464    $5989   UNKNOWN  $5989           ; Unknown 5xxx instruction
$466    $FF1E   ADD      I, VF           ; I += VF
$468    $9DA3   UNKNOWN  $9DA3           ; Unknown 9xxx instruction
$46A    $A3ED   LD       I, $3ED         ; Load 3ED into I
$46C    $D19B   DRW      V1, V9, #B      ; Draw 11-byte sprite at V1, V9
$46E    $4ACF   SNE      VA, #CF         ; Skip if VA != 207
$470    $F209   UNKNOWN  F209            ; Unknown Fxxx instruction
$472    $0D68   SYS      $D68            ; System call to D68
$474    $F2B5   UNKNOWN  F2B5            ; Unknown Fxxx instruction
$476    $597D   UNKNOWN  $597D           ; Unknown 5xxx instruction
$478    $937D   UNKNOWN  $937D           ; Unknown 9xxx instruction
$47A    $9136   UNKNOWN  $9136           ; Unknown 9xxx instruction
$47C    $D773   DRW      V7, V7, #3      ; Draw 3-byte sprite at V7, V7
$47E    $C2EF   RND      V2, #EF         ; V2 = random & EF
$480    $F94A   UNKNOWN  F94A            ; Unknown Fxxx instruction
$482    $63DA   LD       V3, #DA         ; Load 218 into V3
$484    $2960   CALL     $960            ; Call subroutine at 960
$486    $6943   LD       V9, #43         ; Load 67 into V9
$488    $66A6   LD       V6, #A6         ; Load 166 into V6
$48A    $AC5E   LD       I, $C5E         ; Load C5E into I
$48C    $26B1   CALL     $6B1            ; Call subroutine at 6B1
$48E    $0453   SYS      $453            ; System call to 453
$490    $C89E   RND      V8, #9E         ; V8 = random & 9E
$492    $B0A1   JP       V0, $0A1        ; Jump to V0 + 0A1
$494    $5D2A   UNKNOWN  $5D2A           ; Unknown 5xxx instruction
$496    $651F   LD       V5, #1F         ; Load 31 into V5
$498    $D339   DRW      V3, V3, #9      ; Draw 9-byte sprite at V3, V3
$49A    $0CAE   SYS      $CAE            ; System call to CAE
$49C    $923D   UNKNOWN  $923D           ; Unknown 9xxx instruction
$49E    $FE9C   UNKNOWN  FE9C            ; Unknown Fxxx instruction
$4A0    $52D4   UNKNOWN  $52D4           ; Unknown 5xxx instruction
$4A2    $6A46   LD       VA, #46         ; Load 70 into VA
$4A4    $4A5D   SNE      VA, #5D         ; Skip if VA != 93
$4A6    $71BA   ADD      V1, #BA         ; Add 186 to V1
$4A8    $AB68   LD       I, $B68         ; Load B68 into I
$4AA    $4E54   SNE      VE, #54         ; Skip if VE != 84
$4AC    $547E   UNKNOWN  $547E           ; Unknown 5xxx instruction
$4AE    $6352   LD       V3, #52         ; Load 82 into V3
$4B0    $ECA7   UNKNOWN  $ECA7           ; Unknown Exxx instruction
$4B2    $C552   RND      V5, #52         ; V5 = random & 52
$4B4    $2417   CALL     $417            ; Call subroutine at 417
$4B6    $164A   JP       $64A            ; Jump to 64A
$4B8    $AA35   LD       I, $A35         ; Load A35 into I
$4BA    $A4DD   LD       I, $4DD         ; Load 4DD into I
$4BC    $ABF9   LD       I, $BF9         ; Load BF9 into I
$4BE    $0114   SYS      $114            ; System call to 114
$4C0    $7C13   ADD      VC, #13         ; Add 19 to VC
$4C2    $79C2   ADD      V9, #C2         ; Add 194 to V9
$4C4    $F387   UNKNOWN  F387            ; Unknown Fxxx instruction
$4C6    $0E94   SYS      $E94            ; System call to E94
$4C8    $8BE1   OR       VB, VE          ; VB |= VE
$4CA    $421E   SNE      V2, #1E         ; Skip if V2 != 30
$4CC    $ECC2   UNKNOWN  $ECC2           ; Unknown Exxx instruction
$4CE    $D0AD   DRW      V0, VA, #D      ; Draw 13-byte sprite at V0, VA
$4D0    $7C95   ADD      VC, #95         ; Add 149 to VC
$4D2    $FF9D   UNKNOWN  FF9D            ; Unknown Fxxx instruction
$4D4    $E615   UNKNOWN  $E615           ; Unknown Exxx instruction
$4D6    $E147   UNKNOWN  $E147           ; Unknown Exxx instruction
$4D8    $7EB7   ADD      VE, #B7         ; Add 183 to VE
$4DA    $6FCF   LD       VF, #CF         ; Load 207 into VF
$4DC    $B5BB   JP       V0, $5BB        ; Jump to V0 + 5BB
$4DE    $B583   JP       V0, $583        ; Jump to V0 + 583
$4E0    $C251   RND      V2, #51         ; V2 = random & 51
$4E2    $068B   SYS      $68B            ; System call to 68B
$4E4    $8CAC   UNKNOWN  8CAC            ; Unknown 8xxx instruction
$4E6    $A2BB   LD       I, $2BB         ; Load 2BB into I
$4E8    $0FFF   SYS      $FFF            ; System call to FFF
$4EA    $6783   LD       V7, #83         ; Load 131 into V7
$4EC    $6D17   LD       VD, #17         ; Load 23 into VD
$4EE    $865C   UNKNOWN  865C            ; Unknown 8xxx instruction
$4F0    $2691   CALL     $691            ; Call subroutine at 691
$4F2    $DE45   DRW      VE, V4, #5      ; Draw 5-byte sprite at VE, V4
$4F4    $6D7B   LD       VD, #7B         ; Load 123 into VD
$4F6    $3539   SE       V5, #39         ; Skip if V5 == 57
$4F8    $8713   XOR      V7, V1          ; V7 ^= V1
$4FA    $5892   UNKNOWN  $5892           ; Unknown 5xxx instruction
$4FC    $76CF   ADD      V6, #CF         ; Add 207 to V6
$4FE    $A3BA   LD       I, $3BA         ; Load 3BA into I
$500    $398C   SE       V9, #8C         ; Skip if V9 == 140
$502    $5E7D   UNKNOWN  $5E7D           ; Unknown 5xxx instruction
$504    $9A5C   UNKNOWN  $9A5C           ; Unknown 9xxx instruction
$506    $AF22   LD       I, $F22         ; Load F22 into I
$508    $99DA   UNKNOWN  $99DA           ; Unknown 9xxx instruction
$50A    $CBCE   RND      VB, #CE         ; VB = random & CE
$50C    $6294   LD       V2, #94         ; Load 148 into V2
$50E    $8978   UNKNOWN  8978            ; Unknown 8xxx instruction
$510    $3F1E   SE       VF, #1E         ; Skip if VF == 30
$512    $2947   CALL     $947            ; Call subroutine at 947
$514    $A9CF   LD       I, $9CF         ; Load 9CF into I
$516    $1E92   JP       $E92            ; Jump to E92
$518    $5DAD   UNKNOWN  $5DAD           ; Unknown 5xxx instruction
$51A    $92F8   UNKNOWN  $92F8           ; Unknown 9xxx instruction
$51C    $678D   LD       V7, #8D         ; Load 141 into V7
$51E    $2696   CALL     $696            ; Call subroutine at 696
$520    $10C6   JP       $0C6            ; Jump to 0C6
$522    $FD1D   UNKNOWN  FD1D            ; Unknown Fxxx instruction
$524    $7DCD   ADD      VD, #CD         ; Add 205 to VD
$526    $74D8   ADD      V4, #D8         ; Add 216 to V4
$528    $009F   SYS      $09F            ; System call to 09F
$52A    $4C4F   SNE      VC, #4F         ; Skip if VC != 79
$52C    $17AA   JP       $7AA            ; Jump to 7AA
$52E    $1E67   JP       $E67            ; Jump to E67
$530    $B4DF   JP       V0, $4DF        ; Jump to V0 + 4DF
$532    $C76B   RND      V7, #6B         ; V7 = random & 6B
$534    $3A9A   SE       VA, #9A         ; Skip if VA == 154
$536    $E4B0   UNKNOWN  $E4B0           ; Unknown Exxx instruction
$538    $DD31   DRW      VD, V3, #1      ; Draw 1-byte sprite at VD, V3
$53A    $ECC9   UNKNOWN  $ECC9           ; Unknown Exxx instruction
$53C    $32A2   SE       V2, #A2         ; Skip if V2 == 162
$53E    $0DFF   SYS      $DFF            ; System call to DFF
$540    $7560   ADD      V5, #60         ; Add 96 to V5
$542    $5B3A   UNKNOWN  $5B3A           ; Unknown 5xxx instruction
$544    $A694   LD       I, $694         ; Load 694 into I
$546    $A7EC   LD       I, $7EC         ; Load 7EC into I
$548    $E65C   UNKNOWN  $E65C           ; Unknown Exxx instruction
$54A    $CDBC   RND      VD, #BC         ; VD = random & BC
$54C    $3B4C   SE       VB, #4C         ; Skip if VB == 76
$54E    $2443   CALL     $443            ; Call subroutine at 443
$550    $959E   UNKNOWN  $959E           ; Unknown 9xxx instruction
$552    $B381   JP       V0, $381        ; Jump to V0 + 381
$554    $B1C0   JP       V0, $1C0        ; Jump to V0 + 1C0
$556    $FC46   UNKNOWN  FC46            ; Unknown Fxxx instruction
$558    $4A34   SNE      VA, #34         ; Skip if VA != 52
$55A    $6DC5   LD       VD, #C5         ; Load 197 into VD
$55C    $70C7   ADD      V0, #C7         ; Add 199 to V0
$55E    $A47B   LD       I, $47B         ; Load 47B into I
$560    $37DE   SE       V7, #DE         ; Skip if V7 == 222
$562    $581F   UNKNOWN  $581F           ; Unknown 5xxx instruction
$564    $C3E9   RND      V3, #E9         ; V3 = random & E9
$566    $4BBE   SNE      VB, #BE         ; Skip if VB != 190
$568    $AF9F   LD       I, $F9F         ; Load F9F into I
$56A    $87CE   SHL      V7              ; V7 <<= 1, VF = MSB
$56C    $5AF7   UNKNOWN  $5AF7           ; Unknown 5xxx instruction
$56E    $039D   SYS      $39D            ; System call to 39D
$570    $B5D4   JP       V0, $5D4        ; Jump to V0 + 5D4
$572    $9D19   UNKNOWN  $9D19           ; Unknown 9xxx instruction
$574    $A4A3   LD       I, $4A3         ; Load 4A3 into I
$576    $1CFF   JP       $CFF            ; Jump to CFF
$578    $4026   SNE      V0, #26         ; Skip if V0 != 38
$57A    $5CEF   UNKNOWN  $5CEF           ; Unknown 5xxx instruction
$57C    $E534   UNKNOWN  $E534           ; Unknown Exxx instruction
$57E    $C89D   RND      V8, #9D         ; V8 = random & 9D
$580    $4554   SNE      V5, #54         ; Skip if V5 != 84
$582    $2A84   CALL     $A84            ; Call subroutine at A84
$584    $E327   UNKNOWN  $E327           ; Unknown Exxx instruction
$586    $4A49   SNE      VA, #49         ; Skip if VA != 73
$588    $18DA   JP       $8DA            ; Jump to 8DA
$58A    $9E17   UNKNOWN  $9E17           ; Unknown 9xxx instruction
$58C    $DEAB   DRW      VE, VA, #B      ; Draw 11-byte sprite at VE, VA
$58E    $CF7E   RND      VF, #7E         ; VF = random & 7E
$590    $7E8F   ADD      VE, #8F         ; Add 143 to VE
$592    $4345   SNE      V3, #45         ; Skip if V3 != 69
$594    $B22C   JP       V0, $22C        ; Jump to V0 + 22C
$596    $1436   JP       $436            ; Jump to 436
$598    $19C4   JP       $9C4            ; Jump to 9C4
$59A    $C220   RND      V2, #20         ; V2 = random & 20
$59C    $8440   LD       V4, V4          ; V4 = V4
$59E    $7F4D   ADD      VF, #4D         ; Add 77 to VF
$5A0    $E7A8   UNKNOWN  $E7A8           ; Unknown Exxx instruction
$5A2    $D701   DRW      V7, V0, #1      ; Draw 1-byte sprite at V7, V0
$5A4    $D0DA   DRW      V0, VD, #A      ; Draw 10-byte sprite at V0, VD
$5A6    $AFCF   LD       I, $FCF         ; Load FCF into I
$5A8    $A713   LD       I, $713         ; Load 713 into I
$5AA    $4845   SNE      V8, #45         ; Skip if V8 != 69
$5AC    $87EB   UNKNOWN  87EB            ; Unknown 8xxx instruction
$5AE    $E4CF   UNKNOWN  $E4CF           ; Unknown Exxx instruction
$5B0    $DEC0   DRW      VE, VC, #0      ; Draw 0-byte sprite at VE, VC
$5B2    $D5EE   DRW      V5, VE, #E      ; Draw 14-byte sprite at V5, VE
$5B4    $443E   SNE      V4, #3E         ; Skip if V4 != 62
$5B6    $4A5E   SNE      VA, #5E         ; Skip if VA != 94
$5B8    $BD02   JP       V0, $D02        ; Jump to V0 + D02
$5BA    $A162   LD       I, $162         ; Load 162 into I
$5BC    $3EB6   SE       VE, #B6         ; Skip if VE == 182
$5BE    $A1E2   LD       I, $1E2         ; Load 1E2 into I
$5C0    $4CC9   SNE      VC, #C9         ; Skip if VC != 201
$5C2    $2A98   CALL     $A98            ; Call subroutine at A98
$5C4    $3659   SE       V6, #59         ; Skip if V6 == 89
$5C6    $8EEA   UNKNOWN  8EEA            ; Unknown 8xxx instruction
$5C8    $A1AA   LD       I, $1AA         ; Load 1AA into I
$5CA    $AF08   LD       I, $F08         ; Load F08 into I
$5CC    $B4AF   JP       V0, $4AF        ; Jump to V0 + 4AF
$5CE    $E680   UNKNOWN  $E680           ; Unknown Exxx instruction
$5D0    $B65A   JP       V0, $65A        ; Jump to V0 + 65A
$5D2    $A21D   LD       I, $21D         ; Load 21D into I
$5D4    $40F8   SNE      V0, #F8         ; Skip if V0 != 248
$5D6    $0999   SYS      $999            ; System call to 999
$5D8    $B080   JP       V0, $080        ; Jump to V0 + 080
$5DA    $686E   LD       V8, #6E         ; Load 110 into V8
$5DC    $8CF2   AND      VC, VF          ; VC &= VF
$5DE    $EB32   UNKNOWN  $EB32           ; Unknown Exxx instruction
$5E0    $A4E9   LD       I, $4E9         ; Load 4E9 into I
$5E2    $7333   ADD      V3, #33         ; Add 51 to V3
$5E4    $741B   ADD      V4, #1B         ; Add 27 to V4
$5E6    $FA2C   UNKNOWN  FA2C            ; Unknown Fxxx instruction
$5E8    $02C3   SYS      $2C3            ; System call to 2C3
$5EA    $14EE   JP       $4EE            ; Jump to 4EE
$5EC    $744A   ADD      V4, #4A         ; Add 74 to V4
$5EE    $FED6   UNKNOWN  FED6            ; Unknown Fxxx instruction
$5F0    $BAE0   JP       V0, $AE0        ; Jump to V0 + AE0
$5F2    $CE8A   RND      VE, #8A         ; VE = random & 8A
$5F4    $0195   SYS      $195            ; System call to 195
$5F6    $89D5   SUB      V9, VD          ; V9 -= VD, VF = !borrow
$5F8    $43F7   SNE      V3, #F7         ; Skip if V3 != 247
$5FA    $6C9B   LD       VC, #9B         ; Load 155 into VC
$5FC    $15C0   JP       $5C0            ; Jump to 5C0
$5FE    $B91C   JP       V0, $91C        ; Jump to V0 + 91C
$600    $9442   UNKNOWN  $9442           ; Unknown 9xxx instruction
$602    $713D   ADD      V1, #3D         ; Add 61 to V1
$604    $B645   JP       V0, $645        ; Jump to V0 + 645
$606    $7D53   ADD      VD, #53         ; Add 83 to VD
$608    $F948   UNKNOWN  F948            ; Unknown Fxxx instruction
$60A    $ED2E   UNKNOWN  $ED2E           ; Unknown Exxx instruction
$60C    $3ABF   SE       VA, #BF         ; Skip if VA == 191
$60E    $AB96   LD       I, $B96         ; Load B96 into I
$610    $3BED   SE       VB, #ED         ; Skip if VB == 237
$612    $8F38   UNKNOWN  8F38            ; Unknown 8xxx instruction
$614    $01D8   SYS      $1D8            ; System call to 1D8
$616    $E2C9   UNKNOWN  $E2C9           ; Unknown Exxx instruction
$618    $FD47   UNKNOWN  FD47            ; Unknown Fxxx instruction
$61A    $B369   JP       V0, $369        ; Jump to V0 + 369
$61C    $3EA4   SE       VE, #A4         ; Skip if VE == 164
$61E    $91B5   UNKNOWN  $91B5           ; Unknown 9xxx instruction
$620    $416D   SNE      V1, #6D         ; Skip if V1 != 109
$622    $8A8E   SHL      VA              ; VA <<= 1, VF = MSB
$624    $2300   CALL     $300            ; Call subroutine at 300
$626    $CE7A   RND      VE, #7A         ; VE = random & 7A
$628    $F42B   UNKNOWN  F42B            ; Unknown Fxxx instruction
$62A    $A587   LD       I, $587         ; Load 587 into I
$62C    $3F78   SE       VF, #78         ; Skip if VF == 120
$62E    $E32C   UNKNOWN  $E32C           ; Unknown Exxx instruction
$630    $9753   UNKNOWN  $9753           ; Unknown 9xxx instruction
$632    $99D5   UNKNOWN  $99D5           ; Unknown 9xxx instruction
$634    $DF84   DRW      VF, V8, #4      ; Draw 4-byte sprite at VF, V8
$636    $5F49   UNKNOWN  $5F49           ; Unknown 5xxx instruction
$638    $C386   RND      V3, #86         ; V3 = random & 86
$63A    $1DAD   JP       $DAD            ; Jump to DAD
$63C    $4F0B   SNE      VF, #0B         ; Skip if VF != 11
$63E    $DA17   DRW      VA, V1, #7      ; Draw 7-byte sprite at VA, V1
$640    $0F90   SYS      $F90            ; System call to F90
$642    $CB31   RND      VB, #31         ; VB = random & 31
$644    $B59A   JP       V0, $59A        ; Jump to V0 + 59A
$646    $F019   UNKNOWN  F019            ; Unknown Fxxx instruction
$648    $AFBE   LD       I, $FBE         ; Load FBE into I
$64A    $D297   DRW      V2, V9, #7      ; Draw 7-byte sprite at V2, V9
$64C    $D13F   DRW      V1, V3, #F      ; Draw 15-byte sprite at V1, V3
$64E    $856D   UNKNOWN  856D            ; Unknown 8xxx instruction
$650    $3A55   SE       VA, #55         ; Skip if VA == 85
$652    $872F   UNKNOWN  872F            ; Unknown 8xxx instruction
$654    $4030   SNE      V0, #30         ; Skip if V0 != 48
$656    $F8E3   UNKNOWN  F8E3            ; Unknown Fxxx instruction
$658    $21AA   CALL     $1AA            ; Call subroutine at 1AA
$65A    $633A   LD       V3, #3A         ; Load 58 into V3
$65C    $83F5   SUB      V3, VF          ; V3 -= VF, VF = !borrow
$65E    $D6AE   DRW      V6, VA, #E      ; Draw 14-byte sprite at V6, VA
$660    $29BB   CALL     $9BB            ; Call subroutine at 9BB
$662    $D6A6   DRW      V6, VA, #6      ; Draw 6-byte sprite at V6, VA
$664    $3072   SE       V0, #72         ; Skip if V0 == 114
$666    $9A4E   UNKNOWN  $9A4E           ; Unknown 9xxx instruction
$668    $C45E   RND      V4, #5E         ; V4 = random & 5E
$66A    $60A1   LD       V0, #A1         ; Load 161 into V0
$66C    $F055   LD       [I], V0         ; Store V0-V0 at I
$66E    $CB85   RND      VB, #85         ; VB = random & 85
$670    $3232   SE       V2, #32         ; Skip if V2 == 50
$672    $9B72   UNKNOWN  $9B72           ; Unknown 9xxx instruction
$674    $8338   UNKNOWN  8338            ; Unknown 8xxx instruction
$676    $C51F   RND      V5, #1F         ; V5 = random & 1F
$678    $602C   LD       V0, #2C         ; Load 44 into V0
$67A    $105B   JP       $05B            ; Jump to 05B
$67C    $E48D   UNKNOWN  $E48D           ; Unknown Exxx instruction
$67E    $777B   ADD      V7, #7B         ; Add 123 to V7
$680    $310F   SE       V1, #0F         ; Skip if V1 == 15
$682    $2F3B   CALL     $F3B            ; Call subroutine at F3B
$684    $2FB4   CALL     $FB4            ; Call subroutine at FB4
$686    $5C2F   UNKNOWN  $5C2F           ; Unknown 5xxx instruction
$688    $F0F1   UNKNOWN  F0F1            ; Unknown Fxxx instruction
$68A    $EC8E   UNKNOWN  $EC8E           ; Unknown Exxx instruction
$68C    $4F24   SNE      VF, #24         ; Skip if VF != 36
$68E    $0C9E   SYS      $C9E            ; System call to C9E
$690    $36D6   SE       V6, #D6         ; Skip if V6 == 214
$692    $EFD9   UNKNOWN  $EFD9           ; Unknown Exxx instruction
$694    $F9A9   UNKNOWN  F9A9            ; Unknown Fxxx instruction
$696    $E92B   UNKNOWN  $E92B           ; Unknown Exxx instruction
$698    $ED32   UNKNOWN  $ED32           ; Unknown Exxx instruction
$69A    $B26D   JP       V0, $26D        ; Jump to V0 + 26D
$69C    $28AB   CALL     $8AB            ; Call subroutine at 8AB
$69E    $CDED   RND      VD, #ED         ; VD = random & ED
$6A0    $0D29   SYS      $D29            ; System call to D29
$6A2    $F882   UNKNOWN  F882            ; Unknown Fxxx instruction
$6A4    $7464   ADD      V4, #64         ; Add 100 to V4
$6A6    $013B   SYS      $13B            ; System call to 13B
$6A8    $90EA   UNKNOWN  $90EA           ; Unknown 9xxx instruction
$6AA    $79C6   ADD      V9, #C6         ; Add 198 to V9
$6AC    $8884   ADD      V8, V8          ; V8 += V8, VF = carry
$6AE    $592A   UNKNOWN  $592A           ; Unknown 5xxx instruction
$6B0    $3E72   SE       VE, #72         ; Skip if VE == 114
$6B2    $F134   UNKNOWN  F134            ; Unknown Fxxx instruction
$6B4    $EB68   UNKNOWN  $EB68           ; Unknown Exxx instruction
$6B6    $061B   SYS      $61B            ; System call to 61B
$6B8    $374D   SE       V7, #4D         ; Skip if V7 == 77
$6BA    $626D   LD       V2, #6D         ; Load 109 into V2
$6BC    $70ED   ADD      V0, #ED         ; Add 237 to V0
$6BE    $5256   UNKNOWN  $5256           ; Unknown 5xxx instruction
$6C0    $5CA7   UNKNOWN  $5CA7           ; Unknown 5xxx instruction
$6C2    $872A   UNKNOWN  872A            ; Unknown 8xxx instruction
$6C4    $A4EF   LD       I, $4EF         ; Load 4EF into I
$6C6    $CCAF   RND      VC, #AF         ; VC = random & AF
$6C8    $85E4   ADD      V5, VE          ; V5 += VE, VF = carry
$6CA    $B5BB   JP       V0, $5BB        ; Jump to V0 + 5BB
$6CC    $D4D1   DRW      V4, VD, #1      ; Draw 1-byte sprite at V4, VD
$6CE    $D594   DRW      V5, V9, #4      ; Draw 4-byte sprite at V5, V9
$6D0    $D1A5   DRW      V1, VA, #5      ; Draw 5-byte sprite at V1, VA
$6D2    $0AB6   SYS      $AB6            ; System call to AB6
$6D4    $AB2E   LD       I, $B2E         ; Load B2E into I
$6D6    $45C5   SNE      V5, #C5         ; Skip if V5 != 197
$6D8    $0878   SYS      $878            ; System call to 878
$6DA    $CDB0   RND      VD, #B0         ; VD = random & B0
$6DC    $CB7F   RND      VB, #7F         ; VB = random & 7F
$6DE    $D000   DRW      V0, V0, #0      ; Draw 0-byte sprite at V0, V0
$6E0    $E620   UNKNOWN  $E620           ; Unknown Exxx instruction
$6E2    $FDC6   UNKNOWN  FDC6            ; Unknown Fxxx instruction
$6E4    $13B7   JP       $3B7            ; Jump to 3B7
$6E6    $2E15   CALL     $E15            ; Call subroutine at E15
$6E8    $0CE8   SYS      $CE8            ; System call to CE8
$6EA    $DCC6   DRW      VC, VC, #6      ; Draw 6-byte sprite at VC, VC
$6EC    $A4C1   LD       I, $4C1         ; Load 4C1 into I
$6EE    $7098   ADD      V0, #98         ; Add 152 to V0
$6F0    $6C4D   LD       VC, #4D         ; Load 77 into VC
$6F2    $DA58   DRW      VA, V5, #8      ; Draw 8-byte sprite at VA, V5
$6F4    $D2BB   DRW      V2, VB, #B      ; Draw 11-byte sprite at V2, VB
$6F6    $7B4A   ADD      VB, #4A         ; Add 74 to VB
$6F8    $AE15   LD       I, $E15         ; Load E15 into I
$6FA    $0F67   SYS      $F67            ; System call to F67
$6FC    $7B56   ADD      VB, #56         ; Add 86 to VB
$6FE    $33B5   SE       V3, #B5         ; Skip if V3 == 181
$700    $5906   UNKNOWN  $5906           ; Unknown 5xxx instruction
$702    $C68A   RND      V6, #8A         ; V6 = random & 8A
$704    $987F   UNKNOWN  $987F           ; Unknown 9xxx instruction
$706    $B6DF   JP       V0, $6DF        ; Jump to V0 + 6DF
$708    $8189   UNKNOWN  8189            ; Unknown 8xxx instruction
$70A    $B26D   JP       V0, $26D        ; Jump to V0 + 26D
$70C    $60CD   LD       V0, #CD         ; Load 205 into V0
$70E    $25A4   CALL     $5A4            ; Call subroutine at 5A4
$710    $3531   SE       V5, #31         ; Skip if V5 == 49
$712    $D92C   DRW      V9, V2, #C      ; Draw 12-byte sprite at V9, V2
$714    $704B   ADD      V0, #4B         ; Add 75 to V0
$716    $0080   SYS      $080            ; System call to 080
$718    $7A46   ADD      VA, #46         ; Add 70 to VA
$71A    $70FA   ADD      V0, #FA         ; Add 250 to V0
$71C    $07DA   SYS      $7DA            ; System call to 7DA
$71E    $E5DF   UNKNOWN  $E5DF           ; Unknown Exxx instruction
$720    $F18A   UNKNOWN  F18A            ; Unknown Fxxx instruction
$722    $C013   RND      V0, #13         ; V0 = random & 13
$724    $E1B1   UNKNOWN  $E1B1           ; Unknown Exxx instruction
$726    $3613   SE       V6, #13         ; Skip if V6 == 19
$728    $3A7B   SE       VA, #7B         ; Skip if VA == 123
$72A    $C883   RND      V8, #83         ; V8 = random & 83
$72C    $F474   UNKNOWN  F474            ; Unknown Fxxx instruction
$72E    $1725   JP       $725            ; Jump to 725
$730    $5A89   UNKNOWN  $5A89           ; Unknown 5xxx instruction
$732    $D495   DRW      V4, V9, #5      ; Draw 5-byte sprite at V4, V9
$734    $E344   UNKNOWN  $E344           ; Unknown Exxx instruction
$736    $659F   LD       V5, #9F         ; Load 159 into V5
$738    $2B55   CALL     $B55            ; Call subroutine at B55
$73A    $A358   LD       I, $358         ; Load 358 into I
$73C    $6BA4   LD       VB, #A4         ; Load 164 into VB
$73E    $0396   SYS      $396            ; System call to 396
$740    $1994   JP       $994            ; Jump to 994
$742    $E770   UNKNOWN  $E770           ; Unknown Exxx instruction
$744    $A287   LD       I, $287         ; Load 287 into I
$746    $73A3   ADD      V3, #A3         ; Add 163 to V3
$748    $86D0   LD       V6, VD          ; V6 = VD
$74A    $6D2C   LD       VD, #2C         ; Load 44 into VD
$74C    $9B26   UNKNOWN  $9B26           ; Unknown 9xxx instruction
$74E    $7F70   ADD      VF, #70         ; Add 112 to VF
$750    $C8A9   RND      V8, #A9         ; V8 = random & A9
$752    $9570   SNE      V5, V7          ; Skip if V5 != V7
$754    $E47E   UNKNOWN  $E47E           ; Unknown Exxx instruction
$756    $6FF5   LD       VF, #F5         ; Load 245 into VF
$758    $7EBC   ADD      VE, #BC         ; Add 188 to VE
$75A    $BA63   JP       V0, $A63        ; Jump to V0 + A63
$75C    $E03B   UNKNOWN  $E03B           ; Unknown Exxx instruction
$75E    $32B5   SE       V2, #B5         ; Skip if V2 == 181
$760    $3E39   SE       VE, #39         ; Skip if VE == 57
$762    $608A   LD       V0, #8A         ; Load 138 into V0
$764    $BE4A   JP       V0, $E4A        ; Jump to V0 + E4A
$766    $D50C   DRW      V5, V0, #C      ; Draw 12-byte sprite at V5, V0
$768    $F756   UNKNOWN  F756            ; Unknown Fxxx instruction
$76A    $A679   LD       I, $679         ; Load 679 into I
$76C    $74CA   ADD      V4, #CA         ; Add 202 to V4
$76E    $33BC   SE       V3, #BC         ; Skip if V3 == 188
$770    $E143   UNKNOWN  $E143           ; Unknown Exxx instruction
$772    $25B7   CALL     $5B7            ; Call subroutine at 5B7
$774    $286A   CALL     $86A            ; Call subroutine at 86A
$776    $36BD   SE       V6, #BD         ; Skip if V6 == 189
$778    $36AD   SE       V6, #AD         ; Skip if V6 == 173
$77A    $02F1   SYS      $2F1            ; System call to 2F1
$77C    $5D68   UNKNOWN  $5D68           ; Unknown 5xxx instruction
$77E    $1601   JP       $601            ; Jump to 601
$780    $DD6B   DRW      VD, V6, #B      ; Draw 11-byte sprite at VD, V6
$782    $392A   SE       V9, #2A         ; Skip if V9 == 42
$784    $8B74   ADD      VB, V7          ; VB += V7, VF = carry
$786    $00D8   SYS      $0D8            ; System call to 0D8
$788    $D588   DRW      V5, V8, #8      ; Draw 8-byte sprite at V5, V8
$78A    $21FE   CALL     $1FE            ; Call subroutine at 1FE
$78C    $15AD   JP       $5AD            ; Jump to 5AD
$78E    $0AED   SYS      $AED            ; System call to AED
$790    $A0F5   LD       I, $0F5         ; Load 0F5 into I
$792    $0BA7   SYS      $BA7            ; System call to BA7
$794    $4873   SNE      V8, #73         ; Skip if V8 != 115
$796    $6EFB   LD       VE, #FB         ; Load 251 into VE
$798    $43D7   SNE      V3, #D7         ; Skip if V3 != 215
$79A    $BF67   JP       V0, $F67        ; Jump to V0 + F67
$79C    $A5A3   LD       I, $5A3         ; Load 5A3 into I
$79E    $ABFF   LD       I, $BFF         ; Load BFF into I
$7A0    $2639   CALL     $639            ; Call subroutine at 639
$7A2    $42CB   SNE      V2, #CB         ; Skip if V2 != 203
$7A4    $A5A8   LD       I, $5A8         ; Load 5A8 into I
$7A6    $6316   LD       V3, #16         ; Load 22 into V3
$7A8    $C738   RND      V7, #38         ; V7 = random & 38
$7AA    $EC17   UNKNOWN  $EC17           ; Unknown Exxx instruction
$7AC    $3DCC   SE       VD, #CC         ; Skip if VD == 204
$7AE    $14B6   JP       $4B6            ; Jump to 4B6
$7B0    $38A9   SE       V8, #A9         ; Skip if V8 == 169
$7B2    $9CA4   UNKNOWN  $9CA4           ; Unknown 9xxx instruction
$7B4    $4D7F   SNE      VD, #7F         ; Skip if VD != 127
$7B6    $F17C   UNKNOWN  F17C            ; Unknown Fxxx instruction
$7B8    $A8FD   LD       I, $8FD         ; Load 8FD into I
$7BA    $7CDA   ADD      VC, #DA         ; Add 218 to VC
$7BC    $BBBD   JP       V0, $BBD        ; Jump to V0 + BBD
$7BE    $F733   LD       B, V7           ; Store BCD of V7 at I, I+1, I+2
$7C0    $2E06   CALL     $E06            ; Call subroutine at E06
$7C2    $1200   JP       $200            ; Jump to 200
$7C4    $5F41   UNKNOWN  $5F41           ; Unknown 5xxx instruction
$7C6    $446E   SNE      V4, #6E         ; Skip if V4 != 110
$7C8    $C5ED   RND      V5, #ED         ; V5 = random & ED
$7CA    $B677   JP       V0, $677        ; Jump to V0 + 677
$7CC    $1513   JP       $513            ; Jump to 513
$7CE    $9968   UNKNOWN  $9968           ; Unknown 9xxx instruction
$7D0    $2841   CALL     $841            ; Call subroutine at 841
$7D2    $236B   CALL     $36B            ; Call subroutine at 36B
$7D4    $AD50   LD       I, $D50         ; Load D50 into I
$7D6    $352F   SE       V5, #2F         ; Skip if V5 == 47
$7D8    $CC55   RND      VC, #55         ; VC = random & 55
$7DA    $0259   SYS      $259            ; System call to 259
$7DC    $2EF3   CALL     $EF3            ; Call subroutine at EF3
$7DE    $7DB8   ADD      VD, #B8         ; Add 184 to VD
$7E0    $21C2   CALL     $1C2            ; Call subroutine at 1C2
$7E2    $8C6E   SHL      VC              ; VC <<= 1, VF = MSB
$7E4    $43FC   SNE      V3, #FC         ; Skip if V3 != 252
$7E6    $5DA6   UNKNOWN  $5DA6           ; Unknown 5xxx instruction
$7E8    $C4C1   RND      V4, #C1         ; V4 = random & C1
$7EA    $429B   SNE      V2, #9B         ; Skip if V2 != 155
$7EC    $2BFE   CALL     $BFE            ; Call subroutine at BFE
$7EE    $8456   SHR      V4              ; V4 >>= 1, VF = LSB
$7F0    $BA04   JP       V0, $A04        ; Jump to V0 + A04
$7F2    $2C5C   CALL     $C5C            ; Call subroutine at C5C
$7F4    $FFD4   UNKNOWN  FFD4            ; Unknown Fxxx instruction
$7F6    $C999   RND      V9, #99         ; V9 = random & 99
$7F8    $795E   ADD      V9, #5E         ; Add 94 to V9
$7FA    $A701   LD       I, $701         ; Load 701 into I
$7FC    $31D4   SE       V1, #D4         ; Skip if V1 == 212
$7FE    $E695   UNKNOWN  $E695           ; Unknown Exxx instruction
$800    $02E8   SYS      $2E8            ; System call to 2E8
$802    $F597   UNKNOWN  F597            ; Unknown Fxxx instruction
$804    $79B4   ADD      V9, #B4         ; Add 180 to V9
$806    $B155   JP       V0, $155        ; Jump to V0 + 155
$808    $C77B   RND      V7, #7B         ; V7 = random & 7B
$80A    $4C41   SNE      VC, #41         ; Skip if VC != 65
$80C    $4FBF   SNE      VF, #BF         ; Skip if VF != 191
$80E    $5FEF   UNKNOWN  $5FEF           ; Unknown 5xxx instruction
$810    $58B4   UNKNOWN  $58B4           ; Unknown 5xxx instruction
$812    $D8C9   DRW      V8, VC, #9      ; Draw 9-byte sprite at V8, VC
$814    $2322   CALL     $322            ; Call subroutine at 322
$816    $67DC   LD       V7, #DC         ; Load 220 into V7
$818    $1CC5   JP       $CC5            ; Jump to CC5
$81A    $C1BD   RND      V1, #BD         ; V1 = random & BD
$81C    $13ED   JP       $3ED            ; Jump to 3ED
$81E    $E0FD   UNKNOWN  $E0FD           ; Unknown Exxx instruction
$820    $F4C3   UNKNOWN  F4C3            ; Unknown Fxxx instruction
$822    $E74A   UNKNOWN  $E74A           ; Unknown Exxx instruction
$824    $D1F0   DRW      V1, VF, #0      ; Draw 0-byte sprite at V1, VF
$826    $2C50   CALL     $C50            ; Call subroutine at C50
$828    $322E   SE       V2, #2E         ; Skip if V2 == 46
$82A    $2984   CALL     $984            ; Call subroutine at 984
$82C    $C567   RND      V5, #67         ; V5 = random & 67
$82E    $7086   ADD      V0, #86         ; Add 134 to V0
$830    $792C   ADD      V9, #2C         ; Add 44 to V9
$832    $72DD   ADD      V2, #DD         ; Add 221 to V2
$834    $E282   UNKNOWN  $E282           ; Unknown Exxx instruction
$836    $E1DF   UNKNOWN  $E1DF           ; Unknown Exxx instruction
$838    $DAF2   DRW      VA, VF, #2      ; Draw 2-byte sprite at VA, VF
$83A    $2B9A   CALL     $B9A            ; Call subroutine at B9A
$83C    $512A   UNKNOWN  $512A           ; Unknown 5xxx instruction
$83E    $09AC   SYS      $9AC            ; System call to 9AC
$840    $A8B8   LD       I, $8B8         ; Load 8B8 into I
$842    $153F   JP       $53F            ; Jump to 53F
$844    $5216   UNKNOWN  $5216           ; Unknown 5xxx instruction
$846    $E559   UNKNOWN  $E559           ; Unknown Exxx instruction
$848    $4D50   SNE      VD, #50         ; Skip if VD != 80
$84A    $39C5   SE       V9, #C5         ; Skip if V9 == 197
$84C    $566D   UNKNOWN  $566D           ; Unknown 5xxx instruction
$84E    $D048   DRW      V0, V4, #8      ; Draw 8-byte sprite at V0, V4
$850    $DCAB   DRW      VC, VA, #B      ; Draw 11-byte sprite at VC, VA
$852    $63F1   LD       V3, #F1         ; Load 241 into V3
$854    $DFE1   DRW      VF, VE, #1      ; Draw 1-byte sprite at VF, VE
$856    $1278   JP       $278            ; Jump to 278
$858    $A10E   LD       I, $10E         ; Load 10E into I
$85A    $F02D   UNKNOWN  F02D            ; Unknown Fxxx instruction
$85C    $B31B   JP       V0, $31B        ; Jump to V0 + 31B
$85E    $1CA1   JP       $CA1            ; Jump to CA1
$860    $4609   SNE      V6, #09         ; Skip if V6 != 9
$862    $12A5   JP       $2A5            ; Jump to 2A5
$864    $3EF6   SE       VE, #F6         ; Skip if VE == 246
$866    $2B4B   CALL     $B4B            ; Call subroutine at B4B
$868    $535C   UNKNOWN  $535C           ; Unknown 5xxx instruction
$86A    $90D3   UNKNOWN  $90D3           ; Unknown 9xxx instruction
$86C    $1647   JP       $647            ; Jump to 647
$86E    $DF6D   DRW      VF, V6, #D      ; Draw 13-byte sprite at VF, V6
$870    $A593   LD       I, $593         ; Load 593 into I
$872    $1055   JP       $055            ; Jump to 055
$874    $C9AB   RND      V9, #AB         ; V9 = random & AB
$876    $B7CD   JP       V0, $7CD        ; Jump to V0 + 7CD
$878    $4BCA   SNE      VB, #CA         ; Skip if VB != 202
$87A    $8EAE   SHL      VE              ; VE <<= 1, VF = MSB
$87C    $9286   UNKNOWN  $9286           ; Unknown 9xxx instruction
$87E    $BAAC   JP       V0, $AAC        ; Jump to V0 + AAC
$880    $A07A   LD       I, $07A         ; Load 07A into I
$882    $7A54   ADD      VA, #54         ; Add 84 to VA
$884    $0CE7   SYS      $CE7            ; System call to CE7
$886    $007F   SYS      $07F            ; System call to 07F
$888    $E181   UNKNOWN  $E181           ; Unknown Exxx instruction
$88A    $551C   UNKNOWN  $551C           ; Unknown 5xxx instruction
$88C    $F025   UNKNOWN  F025            ; Unknown Fxxx instruction
$88E    $4272   SNE      V2, #72         ; Skip if V2 != 114
$890    $CF61   RND      VF, #61         ; VF = random & 61
$892    $C50C   RND      V5, #0C         ; V5 = random & 0C
$894    $0ABE   SYS      $ABE            ; System call to ABE
$896    $1F49   JP       $F49            ; Jump to F49
$898    $97CC   UNKNOWN  $97CC           ; Unknown 9xxx instruction
$89A    $7BF5   ADD      VB, #F5         ; Add 245 to VB
$89C    $0283   SYS      $283            ; System call to 283
$89E    $6103   LD       V1, #03         ; Load 3 into V1
$8A0    $F834   UNKNOWN  F834            ; Unknown Fxxx instruction
$8A2    $280A   CALL     $80A            ; Call subroutine at 80A
$8A4    $C349   RND      V3, #49         ; V3 = random & 49
$8A6    $CFEF   RND      VF, #EF         ; VF = random & EF
$8A8    $F73B   UNKNOWN  F73B            ; Unknown Fxxx instruction
$8AA    $A09B   LD       I, $09B         ; Load 09B into I
$8AC    $C791   RND      V7, #91         ; V7 = random & 91
$8AE    $1FE9   JP       $FE9            ; Jump to FE9
$8B0    $E604   UNKNOWN  $E604           ; Unknown Exxx instruction
$8B2    $EADE   UNKNOWN  $EADE           ; Unknown Exxx instruction
$8B4    $3255   SE       V2, #55         ; Skip if V2 == 85
$8B6    $461A   SNE      V6, #1A         ; Skip if V6 != 26
$8B8    $3FC1   SE       VF, #C1         ; Skip if VF == 193
$8BA    $B45F   JP       V0, $45F        ; Jump to V0 + 45F
$8BC    $91E3   UNKNOWN  $91E3           ; Unknown 9xxx instruction
$8BE    $2FCB   CALL     $FCB            ; Call subroutine at FCB
$8C0    $35BF   SE       V5, #BF         ; Skip if V5 == 191
$8C2    $FA70   UNKNOWN  FA70            ; Unknown Fxxx instruction
$8C4    $B172   JP       V0, $172        ; Jump to V0 + 172
$8C6    $D65F   DRW      V6, V5, #F      ; Draw 15-byte sprite at V6, V5
$8C8    $0562   SYS      $562            ; System call to 562
$8CA    $990C   UNKNOWN  $990C           ; Unknown 9xxx instruction
$8CC    $121B   JP       $21B            ; Jump to 21B
$8CE    $C32D   RND      V3, #2D         ; V3 = random & 2D
$8D0    $33CF   SE       V3, #CF         ; Skip if V3 == 207
$8D2    $073B   SYS      $73B            ; System call to 73B
$8D4    $369B   SE       V6, #9B         ; Skip if V6 == 155
$8D6    $D522   DRW      V5, V2, #2      ; Draw 2-byte sprite at V5, V2
$8D8    $D116   DRW      V1, V1, #6      ; Draw 6-byte sprite at V1, V1
$8DA    $173F   JP       $73F            ; Jump to 73F
$8DC    $9254   UNKNOWN  $9254           ; Unknown 9xxx instruction
$8DE    $D2CB   DRW      V2, VC, #B      ; Draw 11-byte sprite at V2, VC
$8E0    $5D38   UNKNOWN  $5D38           ; Unknown 5xxx instruction
$8E2    $DF7F   DRW      VF, V7, #F      ; Draw 15-byte sprite at VF, V7
$8E4    $3C8C   SE       VC, #8C         ; Skip if VC == 140
$8E6    $E682   UNKNOWN  $E682           ; Unknown Exxx instruction
$8E8    $7ADA   ADD      VA, #DA         ; Add 218 to VA
$8EA    $402D   SNE      V0, #2D         ; Skip if V0 != 45
$8EC    $68A0   LD       V8, #A0         ; Load 160 into V8
$8EE    $DA45   DRW      VA, V4, #5      ; Draw 5-byte sprite at VA, V4
$8F0    $BD15   JP       V0, $D15        ; Jump to V0 + D15
$8F2    $6A96   LD       VA, #96         ; Load 150 into VA
$8F4    $3177   SE       V1, #77         ; Skip if V1 == 119
$8F6    $D3AA   DRW      V3, VA, #A      ; Draw 10-byte sprite at V3, VA
$8F8    $7596   ADD      V5, #96         ; Add 150 to V5
$8FA    $5E8F   UNKNOWN  $5E8F           ; Unknown 5xxx instruction
$8FC    $47E8   SNE      V7, #E8         ; Skip if V7 != 232
$8FE    $5EAC   UNKNOWN  $5EAC           ; Unknown 5xxx instruction
$900    $356C   SE       V5, #6C         ; Skip if V5 == 108
$902    $0121   SYS      $121            ; System call to 121
$904    $0AC0   SYS      $AC0            ; System call to AC0
$906    $4E74   SNE      VE, #74         ; Skip if VE != 116
$908    $D6D1   DRW      V6, VD, #1      ; Draw 1-byte sprite at V6, VD
$90A    $0185   SYS      $185            ; System call to 185
$90C    $3297   SE       V2, #97         ; Skip if V2 == 151
$90E    $A3D0   LD       I, $3D0         ; Load 3D0 into I
$910    $B7BE   JP       V0, $7BE        ; Jump to V0 + 7BE
$912    $CE72   RND      VE, #72         ; VE = random & 72
$914    $E7F3   UNKNOWN  $E7F3           ; Unknown Exxx instruction
$916    $1671   JP       $671            ; Jump to 671
$918    $3862   SE       V8, #62         ; Skip if V8 == 98
$91A    $037F   SYS      $37F            ; System call to 37F
$91C    $3E65   SE       VE, #65         ; Skip if VE == 101
$91E    $0BE9   SYS      $BE9            ; System call to BE9
$920    $FEA5   UNKNOWN  FEA5            ; Unknown Fxxx instruction
$922    $FE97   UNKNOWN  FE97            ; Unknown Fxxx instruction
$924    $FA5C   UNKNOWN  FA5C            ; Unknown Fxxx instruction
$926    $7CB5   ADD      VC, #B5         ; Add 181 to VC
$928    $3796   SE       V7, #96         ; Skip if V7 == 150
$92A    $8615   SUB      V6, V1          ; V6 -= V1, VF = !borrow
$92C    $5880   SE       V8, V8          ; Skip if V8 == V8
$92E    $70C7   ADD      V0, #C7         ; Add 199 to V0
$930    $F97A   UNKNOWN  F97A            ; Unknown Fxxx instruction
$932    $859D   UNKNOWN  859D            ; Unknown 8xxx instruction
$934    $0C38   SYS      $C38            ; System call to C38
$936    $962A   UNKNOWN  $962A           ; Unknown 9xxx instruction
$938    $7415   ADD      V4, #15         ; Add 21 to V4
$93A    $1399   JP       $399            ; Jump to 399
$93C    $07E4   SYS      $7E4            ; System call to 7E4
$93E    $558D   UNKNOWN  $558D           ; Unknown 5xxx instruction
$940    $B33F   JP       V0, $33F        ; Jump to V0 + 33F
$942    $D31B   DRW      V3, V1, #B      ; Draw 11-byte sprite at V3, V1
$944    $570C   UNKNOWN  $570C           ; Unknown 5xxx instruction
$946    $72AF   ADD      V2, #AF         ; Add 175 to V2
$948    $F49E   UNKNOWN  F49E            ; Unknown Fxxx instruction
$94A    $49B7   SNE      V9, #B7         ; Skip if V9 != 183
$94C    $A393   LD       I, $393         ; Load 393 into I
$94E    $42D2   SNE      V2, #D2         ; Skip if V2 != 210
$950    $1911   JP       $911            ; Jump to 911
$952    $FE8C   UNKNOWN  FE8C            ; Unknown Fxxx instruction
$954    $4525   SNE      V5, #25         ; Skip if V5 != 37
$956    $4E6C   SNE      VE, #6C         ; Skip if VE != 108
$958    $09DB   SYS      $9DB            ; System call to 9DB
$95A    $C790   RND      V7, #90         ; V7 = random & 90
$95C    $9B8E   UNKNOWN  $9B8E           ; Unknown 9xxx instruction
$95E    $DBC2   DRW      VB, VC, #2      ; Draw 2-byte sprite at VB, VC
$960    $4371   SNE      V3, #71         ; Skip if V3 != 113
$962    $9BEB   UNKNOWN  $9BEB           ; Unknown 9xxx instruction
$964    $5EF0   SE       VE, VF          ; Skip if VE == VF
$966    $7827   ADD      V8, #27         ; Add 39 to V8
$968    $EAC1   UNKNOWN  $EAC1           ; Unknown Exxx instruction
$96A    $89D1   OR       V9, VD          ; V9 |= VD
$96C    $83B6   SHR      V3              ; V3 >>= 1, VF = LSB
$96E    $24BA   CALL     $4BA            ; Call subroutine at 4BA
$970    $2121   CALL     $121            ; Call subroutine at 121
$972    $F479   UNKNOWN  F479            ; Unknown Fxxx instruction
$974    $8A45   SUB      VA, V4          ; VA -= V4, VF = !borrow
$976    $C3CE   RND      V3, #CE         ; V3 = random & CE
$978    $D320   DRW      V3, V2, #0      ; Draw 0-byte sprite at V3, V2
$97A    $9A4B   UNKNOWN  $9A4B           ; Unknown 9xxx instruction
$97C    $417D   SNE      V1, #7D         ; Skip if V1 != 125
$97E    $E349   UNKNOWN  $E349           ; Unknown Exxx instruction
$980    $AF1F   LD       I, $F1F         ; Load F1F into I
$982    $9CAC   UNKNOWN  $9CAC           ; Unknown 9xxx instruction
$984    $2954   CALL     $954            ; Call subroutine at 954
$986    $E79E   SKP      V7              ; Skip if key V7 pressed
$988    $61C7   LD       V1, #C7         ; Load 199 into V1
$98A    $B31F   JP       V0, $31F        ; Jump to V0 + 31F
$98C    $CAB5   RND      VA, #B5         ; VA = random & B5
$98E    $7E87   ADD      VE, #87         ; Add 135 to VE
$990    $E8F0   UNKNOWN  $E8F0           ; Unknown Exxx instruction
$992    $1F64   JP       $F64            ; Jump to F64
$994    $595A   UNKNOWN  $595A           ; Unknown 5xxx instruction
$996    $38DB   SE       V8, #DB         ; Skip if V8 == 219
$998    $D0EA   DRW      V0, VE, #A      ; Draw 10-byte sprite at V0, VE
$99A    $758C   ADD      V5, #8C         ; Add 140 to V5
$99C    $1692   JP       $692            ; Jump to 692
$99E    $9F70   SNE      VF, V7          ; Skip if VF != V7
$9A0    $B71B   JP       V0, $71B        ; Jump to V0 + 71B
$9A2    $4D04   SNE      VD, #04         ; Skip if VD != 4
$9A4    $61CE   LD       V1, #CE         ; Load 206 into V1
$9A6    $5072   UNKNOWN  $5072           ; Unknown 5xxx instruction
$9A8    $D3E9   DRW      V3, VE, #9      ; Draw 9-byte sprite at V3, VE
$9AA    $C55B   RND      V5, #5B         ; V5 = random & 5B
$9AC    $51EA   UNKNOWN  $51EA           ; Unknown 5xxx instruction
$9AE    $5D0F   UNKNOWN  $5D0F           ; Unknown 5xxx instruction
$9B0    $B837   JP       V0, $837        ; Jump to V0 + 837
$9B2    $36F0   SE       V6, #F0         ; Skip if V6 == 240
$9B4    $870E   SHL      V7              ; V7 <<= 1, VF = MSB
$9B6    $DCC2   DRW      VC, VC, #2      ; Draw 2-byte sprite at VC, VC
$9B8    $8389   UNKNOWN  8389            ; Unknown 8xxx instruction
$9BA    $55D2   UNKNOWN  $55D2           ; Unknown 5xxx instruction
$9BC    $E89B   UNKNOWN  $E89B           ; Unknown Exxx instruction
$9BE    $FB5C   UNKNOWN  FB5C            ; Unknown Fxxx instruction
$9C0    $EF48   UNKNOWN  $EF48           ; Unknown Exxx instruction
$9C2    $DA06   DRW      VA, V0, #6      ; Draw 6-byte sprite at VA, V0
$9C4    $7F9F   ADD      VF, #9F         ; Add 159 to VF
$9C6    $10EA   JP       $0EA            ; Jump to 0EA
$9C8    $5177   UNKNOWN  $5177           ; Unknown 5xxx instruction
$9CA    $3940   SE       V9, #40         ; Skip if V9 == 64
$9CC    $4A20   SNE      VA, #20         ; Skip if VA != 32
$9CE    $D22E   DRW      V2, V2, #E      ; Draw 14-byte sprite at V2, V2
$9D0    $FA4F   UNKNOWN  FA4F            ; Unknown Fxxx instruction
$9D2    $6922   LD       V9, #22         ; Load 34 into V9
$9D4    $9BFC   UNKNOWN  $9BFC           ; Unknown 9xxx instruction
$9D6    $8FEF   UNKNOWN  8FEF            ; Unknown 8xxx instruction
$9D8    $B8AE   JP       V0, $8AE        ; Jump to V0 + 8AE
$9DA    $BC08   JP       V0, $C08        ; Jump to V0 + C08
$9DC    $D84A   DRW      V8, V4, #A      ; Draw 10-byte sprite at V8, V4
$9DE    $74F0   ADD      V4, #F0         ; Add 240 to V4
$9E0    $1C11   JP       $C11            ; Jump to C11
$9E2    $CC0A   RND      VC, #0A         ; VC = random & 0A
$9E4    $A66E   LD       I, $66E         ; Load 66E into I
$9E6    $339C   SE       V3, #9C         ; Skip if V3 == 156
$9E8    $2176   CALL     $176            ; Call subroutine at 176
$9EA    $30DD   SE       V0, #DD         ; Skip if V0 == 221
$9EC    $32DC   SE       V2, #DC         ; Skip if V2 == 220
$9EE    $2925   CALL     $925            ; Call subroutine at 925
$9F0    $9D04   UNKNOWN  $9D04           ; Unknown 9xxx instruction
$9F2    $57D0   SE       V7, VD          ; Skip if V7 == VD
$9F4    $EB85   UNKNOWN  $EB85           ; Unknown Exxx instruction
$9F6    $3E5F   SE       VE, #5F         ; Skip if VE == 95
$9F8    $E33D   UNKNOWN  $E33D           ; Unknown Exxx instruction
$9FA    $C334   RND      V3, #34         ; V3 = random & 34
$9FC    $80BE   SHL      V0              ; V0 <<= 1, VF = MSB
$9FE    $4DD0   SNE      VD, #D0         ; Skip if VD != 208
$A00    $F4BD   UNKNOWN  F4BD            ; Unknown Fxxx instruction
$A02    $6CE8   LD       VC, #E8         ; Load 232 into VC
$A04    $D835   DRW      V8, V3, #5      ; Draw 5-byte sprite at V8, V3
$A06    $5454   UNKNOWN  $5454           ; Unknown 5xxx instruction
$A08    $19BC   JP       $9BC            ; Jump to 9BC
$A0A    $497F   SNE      V9, #7F         ; Skip if V9 != 127
$A0C    $157A   JP       $57A            ; Jump to 57A
$A0E    $8F00   LD       VF, V0          ; VF = V0
$A10    $13D8   JP       $3D8            ; Jump to 3D8
$A12    $2F08   CALL     $F08            ; Call subroutine at F08
$A14    $99B7   UNKNOWN  $99B7           ; Unknown 9xxx instruction
$A16    $3747   SE       V7, #47         ; Skip if V7 == 71
$A18    $0BE4   SYS      $BE4            ; System call to BE4
$A1A    $E15C   UNKNOWN  $E15C           ; Unknown Exxx instruction
$A1C    $1546   JP       $546            ; Jump to 546
$A1E    $C2CD   RND      V2, #CD         ; V2 = random & CD
$A20    $4C34   SNE      VC, #34         ; Skip if VC != 52
$A22    $0044   SYS      $044            ; System call to 044
$A24    $ADAA   LD       I, $DAA         ; Load DAA into I
$A26    $A26A   LD       I, $26A         ; Load 26A into I
$A28    $5EAA   UNKNOWN  $5EAA           ; Unknown 5xxx instruction
$A2A    $8853   XOR      V8, V5          ; V8 ^= V5
$A2C    $503D   UNKNOWN  $503D           ; Unknown 5xxx instruction
$A2E    $F80E   UNKNOWN  F80E            ; Unknown Fxxx instruction
$A30    $A3B2   LD       I, $3B2         ; Load 3B2 into I
$A32    $8CD6   SHR      VC              ; VC >>= 1, VF = LSB
$A34    $8073   XOR      V0, V7          ; V0 ^= V7
$A36    $CB24   RND      VB, #24         ; VB = random & 24
$A38    $F899   UNKNOWN  F899            ; Unknown Fxxx instruction
$A3A    $2700   CALL     $700            ; Call subroutine at 700
$A3C    $475B   SNE      V7, #5B         ; Skip if V7 != 91
$A3E    $7838   ADD      V8, #38         ; Add 56 to V8
$A40    $A460   LD       I, $460         ; Load 460 into I
$A42    $1DB7   JP       $DB7            ; Jump to DB7
$A44    $7446   ADD      V4, #46         ; Add 70 to V4
$A46    $E417   UNKNOWN  $E417           ; Unknown Exxx instruction
$A48    $53B1   UNKNOWN  $53B1           ; Unknown 5xxx instruction
$A4A    $11A0   JP       $1A0            ; Jump to 1A0
$A4C    $1EFD   JP       $EFD            ; Jump to EFD
$A4E    $0092   SYS      $092            ; System call to 092
$A50    $6B6F   LD       VB, #6F         ; Load 111 into VB
$A52    $9E66   UNKNOWN  $9E66           ; Unknown 9xxx instruction
$A54    $4939   SNE      V9, #39         ; Skip if V9 != 57
$A56    $BFCA   JP       V0, $FCA        ; Jump to V0 + FCA
$A58    $A0F2   LD       I, $0F2         ; Load 0F2 into I
$A5A    $CCAE   RND      VC, #AE         ; VC = random & AE
$A5C    $8DB7   SUBN     VD, VB          ; VD = VB - VD, VF = !borrow
$A5E    $A73E   LD       I, $73E         ; Load 73E into I
$A60    $F537   UNKNOWN  F537            ; Unknown Fxxx instruction
$A62    $2AED   CALL     $AED            ; Call subroutine at AED
$A64    $4C63   SNE      VC, #63         ; Skip if VC != 99
$A66    $257F   CALL     $57F            ; Call subroutine at 57F
$A68    $C3FE   RND      V3, #FE         ; V3 = random & FE
$A6A    $C0B6   RND      V0, #B6         ; V0 = random & B6
$A6C    $8C31   OR       VC, V3          ; VC |= V3
$A6E    $DCEF   DRW      VC, VE, #F      ; Draw 15-byte sprite at VC, VE
$A70    $30D6   SE       V0, #D6         ; Skip if V0 == 214
$A72    $A26E   LD       I, $26E         ; Load 26E into I
$A74    $1AEC   JP       $AEC            ; Jump to AEC
$A76    $1E54   JP       $E54            ; Jump to E54
$A78    $83CB   UNKNOWN  83CB            ; Unknown 8xxx instruction
$A7A    $E5B8   UNKNOWN  $E5B8           ; Unknown Exxx instruction
$A7C    $9791   UNKNOWN  $9791           ; Unknown 9xxx instruction
$A7E    $C030   RND      V0, #30         ; V0 = random & 30
$A80    $80F4   ADD      V0, VF          ; V0 += VF, VF = carry
$A82    $304C   SE       V0, #4C         ; Skip if V0 == 76
$A84    $53EB   UNKNOWN  $53EB           ; Unknown 5xxx instruction
$A86    $0C0A   SYS      $C0A            ; System call to C0A
$A88    $1E41   JP       $E41            ; Jump to E41
$A8A    $E1DD   UNKNOWN  $E1DD           ; Unknown Exxx instruction
$A8C    $DD45   DRW      VD, V4, #5      ; Draw 5-byte sprite at VD, V4
$A8E    $56B1   UNKNOWN  $56B1           ; Unknown 5xxx instruction
$A90    $3413   SE       V4, #13         ; Skip if V4 == 19
$A92    $1301   JP       $301            ; Jump to 301
$A94    $1B30   JP       $B30            ; Jump to B30
$A96    $A85E   LD       I, $85E         ; Load 85E into I
$A98    $CE1B   RND      VE, #1B         ; VE = random & 1B
$A9A    $5BEE   UNKNOWN  $5BEE           ; Unknown 5xxx instruction
$A9C    $88B6   SHR      V8              ; V8 >>= 1, VF = LSB
$A9E    $1156   JP       $156            ; Jump to 156
$AA0    $301F   SE       V0, #1F         ; Skip if V0 == 31
$AA2    $2D2A   CALL     $D2A            ; Call subroutine at D2A
$AA4    $F424   UNKNOWN  F424            ; Unknown Fxxx instruction
$AA6    $F596   UNKNOWN  F596            ; Unknown Fxxx instruction
$AA8    $8CDF   UNKNOWN  8CDF            ; Unknown 8xxx instruction
$AAA    $D0DD   DRW      V0, VD, #D      ; Draw 13-byte sprite at V0, VD
$AAC    $225E   CALL     $25E            ; Call subroutine at 25E
$AAE    $D843   DRW      V8, V4, #3      ; Draw 3-byte sprite at V8, V4
$AB0    $C608   RND      V6, #08         ; V6 = random & 08
$AB2    $8DD5   SUB      VD, VD          ; VD -= VD, VF = !borrow
$AB4    $EABC   UNKNOWN  $EABC           ; Unknown Exxx instruction
$AB6    $50B7   UNKNOWN  $50B7           ; Unknown 5xxx instruction
$AB8    $1BEB   JP       $BEB            ; Jump to BEB
$ABA    $43DD   SNE      V3, #DD         ; Skip if V3 != 221
$ABC    $7ECF   ADD      VE, #CF         ; Add 207 to VE
$ABE    $EB86   UNKNOWN  $EB86           ; Unknown Exxx instruction
$AC0    $D201   DRW      V2, V0, #1      ; Draw 1-byte sprite at V2, V0
$AC2    $B696   JP       V0, $696        ; Jump to V0 + 696
$AC4    $30C3   SE       V0, #C3         ; Skip if V0 == 195
$AC6    $DAE5   DRW      VA, VE, #5      ; Draw 5-byte sprite at VA, VE
$AC8    $C0F1   RND      V0, #F1         ; V0 = random & F1
$ACA    $B3F8   JP       V0, $3F8        ; Jump to V0 + 3F8
$ACC    $8FC5   SUB      VF, VC          ; VF -= VC, VF = !borrow
$ACE    $646E   LD       V4, #6E         ; Load 110 into V4
$AD0    $9C0A   UNKNOWN  $9C0A           ; Unknown 9xxx instruction
$AD2    $DF9B   DRW      VF, V9, #B      ; Draw 11-byte sprite at VF, V9
$AD4    $E88F   UNKNOWN  $E88F           ; Unknown Exxx instruction
$AD6    $ADC7   LD       I, $DC7         ; Load DC7 into I
$AD8    $EFBE   UNKNOWN  $EFBE           ; Unknown Exxx instruction
$ADA    $E0E9   UNKNOWN  $E0E9           ; Unknown Exxx instruction
$ADC    $5C29   UNKNOWN  $5C29           ; Unknown 5xxx instruction
$ADE    $9F97   UNKNOWN  $9F97           ; Unknown 9xxx instruction
$AE0    $9097   UNKNOWN  $9097           ; Unknown 9xxx instruction
$AE2    $0AF7   SYS      $AF7            ; System call to AF7
$AE4    $84C5   SUB      V4, VC          ; V4 -= VC, VF = !borrow
$AE6    $7140   ADD      V1, #40         ; Add 64 to V1
$AE8    $EBC1   UNKNOWN  $EBC1           ; Unknown Exxx instruction
$AEA    $F535   UNKNOWN  F535            ; Unknown Fxxx instruction
$AEC    $52D4   UNKNOWN  $52D4           ; Unknown 5xxx instruction
$AEE    $E055   UNKNOWN  $E055           ; Unknown Exxx instruction
$AF0    $1039   JP       $039            ; Jump to 039
$AF2    $F102   UNKNOWN  F102            ; Unknown Fxxx instruction
$AF4    $F160   UNKNOWN  F160            ; Unknown Fxxx instruction
$AF6    $E216   UNKNOWN  $E216           ; Unknown Exxx instruction
$AF8    $DE2A   DRW      VE, V2, #A      ; Draw 10-byte sprite at VE, V2
$AFA    $E672   UNKNOWN  $E672           ; Unknown Exxx instruction
$AFC    $DDC7   DRW      VD, VC, #7      ; Draw 7-byte sprite at VD, VC
$AFE    $C82B   RND      V8, #2B         ; V8 = random & 2B
$B00    $82E4   ADD      V2, VE          ; V2 += VE, VF = carry
$B02    $DC5D   DRW      VC, V5, #D      ; Draw 13-byte sprite at VC, V5
$B04    $45CA   SNE      V5, #CA         ; Skip if V5 != 202
$B06    $2001   CALL     $001            ; Call subroutine at 001
$B08    $9CFB   UNKNOWN  $9CFB           ; Unknown 9xxx instruction
$B0A    $8B95   SUB      VB, V9          ; VB -= V9, VF = !borrow
$B0C    $E9AF   UNKNOWN  $E9AF           ; Unknown Exxx instruction
$B0E    $15A8   JP       $5A8            ; Jump to 5A8
$B10    $54C4   UNKNOWN  $54C4           ; Unknown 5xxx instruction
$B12    $0BC0   SYS      $BC0            ; System call to BC0
$B14    $A82E   LD       I, $82E         ; Load 82E into I
$B16    $3C0B   SE       VC, #0B         ; Skip if VC == 11
$B18    $3480   SE       V4, #80         ; Skip if V4 == 128
$B1A    $374F   SE       V7, #4F         ; Skip if V7 == 79
$B1C    $9DE6   UNKNOWN  $9DE6           ; Unknown 9xxx instruction
$B1E    $1E18   JP       $E18            ; Jump to E18
$B20    $5554   UNKNOWN  $5554           ; Unknown 5xxx instruction
$B22    $6A3A   LD       VA, #3A         ; Load 58 into VA
$B24    $2AE4   CALL     $AE4            ; Call subroutine at AE4
$B26    $AC40   LD       I, $C40         ; Load C40 into I
$B28    $4A39   SNE      VA, #39         ; Skip if VA != 57
$B2A    $0528   SYS      $528            ; System call to 528
$B2C    $F050   UNKNOWN  F050            ; Unknown Fxxx instruction
$B2E    $BFEA   JP       V0, $FEA        ; Jump to V0 + FEA
$B30    $3905   SE       V9, #05         ; Skip if V9 == 5
$B32    $F1C7   UNKNOWN  F1C7            ; Unknown Fxxx instruction
$B34    $5FFB   UNKNOWN  $5FFB           ; Unknown 5xxx instruction
$B36    $4E86   SNE      VE, #86         ; Skip if VE != 134
$B38    $3B25   SE       VB, #25         ; Skip if VB == 37
$B3A    $2F95   CALL     $F95            ; Call subroutine at F95
$B3C    $916F   UNKNOWN  $916F           ; Unknown 9xxx instruction
$B3E    $8FA4   ADD      VF, VA          ; VF += VA, VF = carry
$B40    $1742   JP       $742            ; Jump to 742
$B42    $BFD2   JP       V0, $FD2        ; Jump to V0 + FD2
$B44    $EB04   UNKNOWN  $EB04           ; Unknown Exxx instruction
$B46    $4E2C   SNE      VE, #2C         ; Skip if VE != 44
$B48    $9893   UNKNOWN  $9893           ; Unknown 9xxx instruction
$B4A    $8335   SUB      V3, V3          ; V3 -= V3, VF = !borrow
$B4C    $C88A   RND      V8, #8A         ; V8 = random & 8A
$B4E    $1C49   JP       $C49            ; Jump to C49
$B50    $C65D   RND      V6, #5D         ; V6 = random & 5D
$B52    $1C6C   JP       $C6C            ; Jump to C6C
$B54    $DD32   DRW      VD, V3, #2      ; Draw 2-byte sprite at VD, V3
$B56    $6CA5   LD       VC, #A5         ; Load 165 into VC
$B58    $E65E   UNKNOWN  $E65E           ; Unknown Exxx instruction
$B5A    $AC08   LD       I, $C08         ; Load C08 into I
$B5C    $81F5   SUB      V1, VF          ; V1 -= VF, VF = !borrow
$B5E    $48F0   SNE      V8, #F0         ; Skip if V8 != 240
$B60    $81A0   LD       V1, VA          ; V1 = VA
$B62    $B756   JP       V0, $756        ; Jump to V0 + 756
$B64    $D640   DRW      V6, V4, #0      ; Draw 0-byte sprite at V6, V4
$B66    $9A86   UNKNOWN  $9A86           ; Unknown 9xxx instruction
$B68    $F9D8   UNKNOWN  F9D8            ; Unknown Fxxx instruction
$B6A    $B65E   JP       V0, $65E        ; Jump to V0 + 65E
$B6C    $DE42   DRW      VE, V4, #2      ; Draw 2-byte sprite at VE, V4
$B6E    $9415   UNKNOWN  $9415           ; Unknown 9xxx instruction
$B70    $3F5E   SE       VF, #5E         ; Skip if VF == 94
$B72    $2BF8   CALL     $BF8            ; Call subroutine at BF8
$B74    $AC8C   LD       I, $C8C         ; Load C8C into I
$B76    $4931   SNE      V9, #31         ; Skip if V9 != 49
$B78    $311B   SE       V1, #1B         ; Skip if V1 == 27
$B7A    $981A   UNKNOWN  $981A           ; Unknown 9xxx instruction
$B7C    $6443   LD       V4, #43         ; Load 67 into V4
$B7E    $3846   SE       V8, #46         ; Skip if V8 == 70
$B80    $0B51   SYS      $B51            ; System call to B51
$B82    $45FB   SNE      V5, #FB         ; Skip if V5 != 251
$B84    $D930   DRW      V9, V3, #0      ; Draw 0-byte sprite at V9, V3
$B86    $F898   UNKNOWN  F898            ; Unknown Fxxx instruction
$B88    $F066   UNKNOWN  F066            ; Unknown Fxxx instruction
$B8A    $075B   SYS      $75B            ; System call to 75B
$B8C    $481E   SNE      V8, #1E         ; Skip if V8 != 30
$B8E    $FA53   UNKNOWN  FA53            ; Unknown Fxxx instruction
$B90    $1869   JP       $869            ; Jump to 869
$B92    $4699   SNE      V6, #99         ; Skip if V6 != 153
$B94    $6A01   LD       VA, #01         ; Load 1 into VA
$B96    $2A17   CALL     $A17            ; Call subroutine at A17
$B98    $C365   RND      V3, #65         ; V3 = random & 65
$B9A    $5B7B   UNKNOWN  $5B7B           ; Unknown 5xxx instruction
$B9C    $D310   DRW      V3, V1, #0      ; Draw 0-byte sprite at V3, V1
$B9E    $1BB8   JP       $BB8            ; Jump to BB8
$BA0    $22EB   CALL     $2EB            ; Call subroutine at 2EB
$BA2    $ED10   UNKNOWN  $ED10           ; Unknown Exxx instruction
$BA4    $593B   UNKNOWN  $593B           ; Unknown 5xxx instruction
$BA6    $6D4B   LD       VD, #4B         ; Load 75 into VD
$BA8    $DEFE   DRW      VE, VF, #E      ; Draw 14-byte sprite at VE, VF
$BAA    $B6F6   JP       V0, $6F6        ; Jump to V0 + 6F6
$BAC    $5FAC   UNKNOWN  $5FAC           ; Unknown 5xxx instruction
$BAE    $E32B   UNKNOWN  $E32B           ; Unknown Exxx instruction
$BB0    $2929   CALL     $929            ; Call subroutine at 929
$BB2    $B4A4   JP       V0, $4A4        ; Jump to V0 + 4A4
$BB4    $5845   UNKNOWN  $5845           ; Unknown 5xxx instruction
$BB6    $AAF8   LD       I, $AF8         ; Load AF8 into I
$BB8    $E5B1   UNKNOWN  $E5B1           ; Unknown Exxx instruction
$BBA    $E726   UNKNOWN  $E726           ; Unknown Exxx instruction
$BBC    $0B29   SYS      $B29            ; System call to B29
$BBE    $6A3C   LD       VA, #3C         ; Load 60 into VA
$BC0    $BC4F   JP       V0, $C4F        ; Jump to V0 + C4F
$BC2    $DA00   DRW      VA, V0, #0      ; Draw 0-byte sprite at VA, V0
$BC4    $0CD5   SYS      $CD5            ; System call to CD5
$BC6    $9726   UNKNOWN  $9726           ; Unknown 9xxx instruction
$BC8    $02D9   SYS      $2D9            ; System call to 2D9
$BCA    $D980   DRW      V9, V8, #0      ; Draw 0-byte sprite at V9, V8
$BCC    $6754   LD       V7, #54         ; Load 84 into V7
$BCE    $3AF2   SE       VA, #F2         ; Skip if VA == 242
$BD0    $9B06   UNKNOWN  $9B06           ; Unknown 9xxx instruction
$BD2    $8FB7   SUBN     VF, VB          ; VF = VB - VF, VF = !borrow
$BD4    $2C5C   CALL     $C5C            ; Call subroutine at C5C
$BD6    $84FD   UNKNOWN  84FD            ; Unknown 8xxx instruction
$BD8    $0FDA   SYS      $FDA            ; System call to FDA
$BDA    $CE4B   RND      VE, #4B         ; VE = random & 4B
$BDC    $0534   SYS      $534            ; System call to 534
$BDE    $1877   JP       $877            ; Jump to 877
$BE0    $1672   JP       $672            ; Jump to 672
$BE2    $4BA0   SNE      VB, #A0         ; Skip if VB != 160
$BE4    $C73E   RND      V7, #3E         ; V7 = random & 3E
$BE6    $8216   SHR      V2              ; V2 >>= 1, VF = LSB
$BE8    $BC38   JP       V0, $C38        ; Jump to V0 + C38
$BEA    $B018   JP       V0, $018        ; Jump to V0 + 018
$BEC    $AB05   LD       I, $B05         ; Load B05 into I
$BEE    $7E29   ADD      VE, #29         ; Add 41 to VE
$BF0    $64BB   LD       V4, #BB         ; Load 187 into V4
$BF2    $B52F   JP       V0, $52F        ; Jump to V0 + 52F
$BF4    $1D85   JP       $D85            ; Jump to D85
$BF6    $3009   SE       V0, #09         ; Skip if V0 == 9
$BF8    $E9B7   UNKNOWN  $E9B7           ; Unknown Exxx instruction
$BFA    $74B2   ADD      V4, #B2         ; Add 178 to V4
$BFC    $FBD1   UNKNOWN  FBD1            ; Unknown Fxxx instruction
$BFE    $2AAD   CALL     $AAD            ; Call subroutine at AAD
$C00    $CF3A   RND      VF, #3A         ; VF = random & 3A
$C02    $9D6A   UNKNOWN  $9D6A           ; Unknown 9xxx instruction
$C04    $505D   UNKNOWN  $505D           ; Unknown 5xxx instruction
$C06    $EDC6   UNKNOWN  $EDC6           ; Unknown Exxx instruction
$C08    $84AC   UNKNOWN  84AC            ; Unknown 8xxx instruction
$C0A    $777B   ADD      V7, #7B         ; Add 123 to V7
$C0C    $F595   UNKNOWN  F595            ; Unknown Fxxx instruction
$C0E    $68CF   LD       V8, #CF         ; Load 207 into V8
$C10    $F289   UNKNOWN  F289            ; Unknown Fxxx instruction
$C12    $1F1F   JP       $F1F            ; Jump to F1F
$C14    $ECBE   UNKNOWN  $ECBE           ; Unknown Exxx instruction
$C16    $C7F3   RND      V7, #F3         ; V7 = random & F3
$C18    $459F   SNE      V5, #9F         ; Skip if V5 != 159
$C1A    $A222   LD       I, $222         ; Load 222 into I
$C1C    $BAFA   JP       V0, $AFA        ; Jump to V0 + AFA
$C1E    $1679   JP       $679            ; Jump to 679
$C20    $41A4   SNE      V1, #A4         ; Skip if V1 != 164
$C22    $7C88   ADD      VC, #88         ; Add 136 to VC
$C24    $9880   SNE      V8, V8          ; Skip if V8 != V8
$C26    $F455   LD       [I], V4         ; Store V0-V4 at I
$C28    $C770   RND      V7, #70         ; V7 = random & 70
$C2A    $F625   UNKNOWN  F625            ; Unknown Fxxx instruction
$C2C    $2CBE   CALL     $CBE            ; Call subroutine at CBE
$C2E    $D1F5   DRW      V1, VF, #5      ; Draw 5-byte sprite at V1, VF
$C30    $2A38   CALL     $A38            ; Call subroutine at A38
$C32    $7BFF   ADD      VB, #FF         ; Add 255 to VB
$C34    $8F92   AND      VF, V9          ; VF &= V9
$C36    $77AB   ADD      V7, #AB         ; Add 171 to V7
$C38    $51A5   UNKNOWN  $51A5           ; Unknown 5xxx instruction
$C3A    $F249   UNKNOWN  F249            ; Unknown Fxxx instruction
$C3C    $8349   UNKNOWN  8349            ; Unknown 8xxx instruction
$C3E    $44BA   SNE      V4, #BA         ; Skip if V4 != 186
$C40    $0CED   SYS      $CED            ; System call to CED
$C42    $E009   UNKNOWN  $E009           ; Unknown Exxx instruction
$C44    $95AE   UNKNOWN  $95AE           ; Unknown 9xxx instruction
$C46    $7D1A   ADD      VD, #1A         ; Add 26 to VD
$C48    $3264   SE       V2, #64         ; Skip if V2 == 100
$C4A    $F09B   UNKNOWN  F09B            ; Unknown Fxxx instruction
$C4C    $824B   UNKNOWN  824B            ; Unknown 8xxx instruction
$C4E    $6945   LD       V9, #45         ; Load 69 into V9
$C50    $6283   LD       V2, #83         ; Load 131 into V2
$C52    $48E7   SNE      V8, #E7         ; Skip if V8 != 231
$C54    $AF48   LD       I, $F48         ; Load F48 into I
$C56    $AF53   LD       I, $F53         ; Load F53 into I
$C58    $A57B   LD       I, $57B         ; Load 57B into I
$C5A    $6C52   LD       VC, #52         ; Load 82 into VC
$C5C    $7E90   ADD      VE, #90         ; Add 144 to VE
$C5E    $313E   SE       V1, #3E         ; Skip if V1 == 62
$C60    $9E26   UNKNOWN  $9E26           ; Unknown 9xxx instruction
$C62    $FA85   UNKNOWN  FA85            ; Unknown Fxxx instruction
$C64    $5FEF   UNKNOWN  $5FEF           ; Unknown 5xxx instruction
$C66    $2EBA   CALL     $EBA            ; Call subroutine at EBA
$C68    $6575   LD       V5, #75         ; Load 117 into V5
$C6A    $FB84   UNKNOWN  FB84            ; Unknown Fxxx instruction
$C6C    $636F   LD       V3, #6F         ; Load 111 into V3
$C6E    $2932   CALL     $932            ; Call subroutine at 932
$C70    $645A   LD       V4, #5A         ; Load 90 into V4
$C72    $4CD9   SNE      VC, #D9         ; Skip if VC != 217
$C74    $B882   JP       V0, $882        ; Jump to V0 + 882
$C76    $4AFB   SNE      VA, #FB         ; Skip if VA != 251
$C78    $52F5   UNKNOWN  $52F5           ; Unknown 5xxx instruction
$C7A    $AA38   LD       I, $A38         ; Load A38 into I
$C7C    $1712   JP       $712            ; Jump to 712
$C7E    $7FE3   ADD      VF, #E3         ; Add 227 to VF
$C80    $F086   UNKNOWN  F086            ; Unknown Fxxx instruction
$C82    $F21E   ADD      I, V2           ; I += V2
$C84    $B433   JP       V0, $433        ; Jump to V0 + 433
$C86    $2AEB   CALL     $AEB            ; Call subroutine at AEB
$C88    $9B05   UNKNOWN  $9B05           ; Unknown 9xxx instruction
$C8A    $1440   JP       $440            ; Jump to 440
$C8C    $C789   RND      V7, #89         ; V7 = random & 89
$C8E    $3730   SE       V7, #30         ; Skip if V7 == 48
$C90    $CD69   RND      VD, #69         ; VD = random & 69
$C92    $796E   ADD      V9, #6E         ; Add 110 to V9
$C94    $4701   SNE      V7, #01         ; Skip if V7 != 1
$C96    $239A   CALL     $39A            ; Call subroutine at 39A
$C98    $71EE   ADD      V1, #EE         ; Add 238 to V1
$C9A    $39A7   SE       V9, #A7         ; Skip if V9 == 167
$C9C    $6055   LD       V0, #55         ; Load 85 into V0
$C9E    $9C05   UNKNOWN  $9C05           ; Unknown 9xxx instruction
$CA0    $093C   SYS      $93C            ; System call to 93C
$CA2    $0711   SYS      $711            ; System call to 711
$CA4    $5A51   UNKNOWN  $5A51           ; Unknown 5xxx instruction
$CA6    $A830   LD       I, $830         ; Load 830 into I
$CA8    $32D9   SE       V2, #D9         ; Skip if V2 == 217
$CAA    $E320   UNKNOWN  $E320           ; Unknown Exxx instruction
$CAC    $81DC   UNKNOWN  81DC            ; Unknown 8xxx instruction
$CAE    $C92E   RND      V9, #2E         ; V9 = random & 2E
$CB0    $3997   SE       V9, #97         ; Skip if V9 == 151
$CB2    $412B   SNE      V1, #2B         ; Skip if V1 != 43
$CB4    $978A   UNKNOWN  $978A           ; Unknown 9xxx instruction
$CB6    $608D   LD       V0, #8D         ; Load 141 into V0
$CB8    $BA75   JP       V0, $A75        ; Jump to V0 + A75
$CBA    $2D0B   CALL     $D0B            ; Call subroutine at D0B
$CBC    $F3F5   UNKNOWN  F3F5            ; Unknown Fxxx instruction
$CBE    $EB01   UNKNOWN  $EB01           ; Unknown Exxx instruction
$CC0    $FB26   UNKNOWN  FB26            ; Unknown Fxxx instruction
$CC2    $A356   LD       I, $356         ; Load 356 into I
$CC4    $BBDC   JP       V0, $BDC        ; Jump to V0 + BDC
$CC6    $7C00   ADD      VC, #00         ; Add 0 to VC
$CC8    $E763   UNKNOWN  $E763           ; Unknown Exxx instruction
$CCA    $F344   UNKNOWN  F344            ; Unknown Fxxx instruction
$CCC    $0C6E   SYS      $C6E            ; System call to C6E
$CCE    $EADF   UNKNOWN  $EADF           ; Unknown Exxx instruction
$CD0    $1674   JP       $674            ; Jump to 674
$CD2    $FAD5   UNKNOWN  FAD5            ; Unknown Fxxx instruction
$CD4    $6E60   LD       VE, #60         ; Load 96 into VE
$CD6    $373F   SE       V7, #3F         ; Skip if V7 == 63
$CD8    $C839   RND      V8, #39         ; V8 = random & 39
$CDA    $237C   CALL     $37C            ; Call subroutine at 37C
$CDC    $55BC   UNKNOWN  $55BC           ; Unknown 5xxx instruction
$CDE    $53BF   UNKNOWN  $53BF           ; Unknown 5xxx instruction
$CE0    $8572   AND      V5, V7          ; V5 &= V7
$CE2    $8D88   UNKNOWN  8D88            ; Unknown 8xxx instruction
$CE4    $A378   LD       I, $378         ; Load 378 into I
$CE6    $D628   DRW      V6, V2, #8      ; Draw 8-byte sprite at V6, V2
$CE8    $D2FF   DRW      V2, VF, #F      ; Draw 15-byte sprite at V2, VF
$CEA    $D0F1   DRW      V0, VF, #1      ; Draw 1-byte sprite at V0, VF
$CEC    $1F37   JP       $F37            ; Jump to F37
$CEE    $923D   UNKNOWN  $923D           ; Unknown 9xxx instruction
$CF0    $545A   UNKNOWN  $545A           ; Unknown 5xxx instruction
$CF2    $D159   DRW      V1, V5, #9      ; Draw 9-byte sprite at V1, V5
$CF4    $0D03   SYS      $D03            ; System call to D03
$CF6    $D852   DRW      V8, V5, #2      ; Draw 2-byte sprite at V8, V5
$CF8    $04FC   SYS      $4FC            ; System call to 4FC
$CFA    $E99D   UNKNOWN  $E99D           ; Unknown Exxx instruction
$CFC    $13E1   JP       $3E1            ; Jump to 3E1
$CFE    $D958   DRW      V9, V5, #8      ; Draw 8-byte sprite at V9, V5
$D00    $FF97   UNKNOWN  FF97            ; Unknown Fxxx instruction
$D02    $1165   JP       $165            ; Jump to 165
$D04    $4DC0   SNE      VD, #C0         ; Skip if VD != 192
$D06    $FB6D   UNKNOWN  FB6D            ; Unknown Fxxx instruction
$D08    $A42F   LD       I, $42F         ; Load 42F into I
$D0A    $4F7C   SNE      VF, #7C         ; Skip if VF != 124
$D0C    $9E1B   UNKNOWN  $9E1B           ; Unknown 9xxx instruction
$D0E    $5674   UNKNOWN  $5674           ; Unknown 5xxx instruction
$D10    $77E5   ADD      V7, #E5         ; Add 229 to V7
$D12    $E9AD   UNKNOWN  $E9AD           ; Unknown Exxx instruction
$D14    $E1D3   UNKNOWN  $E1D3           ; Unknown Exxx instruction
$D16    $4917   SNE      V9, #17         ; Skip if V9 != 23
$D18    $EED2   UNKNOWN  $EED2           ; Unknown Exxx instruction
$D1A    $43C1   SNE      V3, #C1         ; Skip if V3 != 193
$D1C    $7840   ADD      V8, #40         ; Add 64 to V8
$D1E    $1116   JP       $116            ; Jump to 116
$D20    $0C36   SYS      $C36            ; System call to C36
$D22    $EC52   UNKNOWN  $EC52           ; Unknown Exxx instruction
$D24    $CBAA   RND      VB, #AA         ; VB = random & AA
$D26    $1BA4   JP       $BA4            ; Jump to BA4
$D28    $A667   LD       I, $667         ; Load 667 into I
$D2A    $EB2D   UNKNOWN  $EB2D           ; Unknown Exxx instruction
$D2C    $E59B   UNKNOWN  $E59B           ; Unknown Exxx instruction
$D2E    $7BBB   ADD      VB, #BB         ; Add 187 to VB
$D30    $CEEC   RND      VE, #EC         ; VE = random & EC
$D32    $7AFC   ADD      VA, #FC         ; Add 252 to VA
$D34    $E9BB   UNKNOWN  $E9BB           ; Unknown Exxx instruction
$D36    $74D7   ADD      V4, #D7         ; Add 215 to V4
$D38    $C5D4   RND      V5, #D4         ; V5 = random & D4
$D3A    $7C07   ADD      VC, #07         ; Add 7 to VC
$D3C    $B36C   JP       V0, $36C        ; Jump to V0 + 36C
$D3E    $1429   JP       $429            ; Jump to 429
$D40    $E9FF   UNKNOWN  $E9FF           ; Unknown Exxx instruction
$D42    $9EA3   UNKNOWN  $9EA3           ; Unknown 9xxx instruction
$D44    $8503   XOR      V5, V0          ; V5 ^= V0
$D46    $5961   UNKNOWN  $5961           ; Unknown 5xxx instruction
$D48    $BA28   JP       V0, $A28        ; Jump to V0 + A28
$D4A    $70E3   ADD      V0, #E3         ; Add 227 to V0
$D4C    $9B1E   UNKNOWN  $9B1E           ; Unknown 9xxx instruction
$D4E    $0948   SYS      $948            ; System call to 948
$D50    $77AF   ADD      V7, #AF         ; Add 175 to V7
$D52    $E7CF   UNKNOWN  $E7CF           ; Unknown Exxx instruction
$D54    $E812   UNKNOWN  $E812           ; Unknown Exxx instruction
$D56    $F8F2   UNKNOWN  F8F2            ; Unknown Fxxx instruction
$D58    $DDCF   DRW      VD, VC, #F      ; Draw 15-byte sprite at VD, VC
$D5A    $8E22   AND      VE, V2          ; VE &= V2
$D5C    $115D   JP       $15D            ; Jump to 15D
$D5E    $A222   LD       I, $222         ; Load 222 into I
$D60    $13D5   JP       $3D5            ; Jump to 3D5
$D62    $8A52   AND      VA, V5          ; VA &= V5
$D64    $1F15   JP       $F15            ; Jump to F15
$D66    $758C   ADD      V5, #8C         ; Add 140 to V5
$D68    $8277   SUBN     V2, V7          ; V2 = V7 - V2, VF = !borrow
$D6A    $D7A7   DRW      V7, VA, #7      ; Draw 7-byte sprite at V7, VA
$D6C    $1D53   JP       $D53            ; Jump to D53
$D6E    $F266   UNKNOWN  F266            ; Unknown Fxxx instruction
$D70    $6986   LD       V9, #86         ; Load 134 into V9
$D72    $189D   JP       $89D            ; Jump to 89D
$D74    $ACC9   LD       I, $CC9         ; Load CC9 into I
$D76    $A3FB   LD       I, $3FB         ; Load 3FB into I
$D78    $7323   ADD      V3, #23         ; Add 35 to V3
$D7A    $DD2D   DRW      VD, V2, #D      ; Draw 13-byte sprite at VD, V2
$D7C    $52DD   UNKNOWN  $52DD           ; Unknown 5xxx instruction
$D7E    $55A2   UNKNOWN  $55A2           ; Unknown 5xxx instruction
$D80    $587E   UNKNOWN  $587E           ; Unknown 5xxx instruction
$D82    $D08B   DRW      V0, V8, #B      ; Draw 11-byte sprite at V0, V8
$D84    $9890   SNE      V8, V9          ; Skip if V8 != V9
$D86    $87FA   UNKNOWN  87FA            ; Unknown 8xxx instruction
$D88    $6CE0   LD       VC, #E0         ; Load 224 into VC
$D8A    $48CC   SNE      V8, #CC         ; Skip if V8 != 204
$D8C    $65FF   LD       V5, #FF         ; Load 255 into V5
$D8E    $B0B3   JP       V0, $0B3        ; Jump to V0 + 0B3
$D90    $00DB   SYS      $0DB            ; System call to 0DB
$D92    $70C9   ADD      V0, #C9         ; Add 201 to V0
$D94    $BFDC   JP       V0, $FDC        ; Jump to V0 + FDC
$D96    $E911   UNKNOWN  $E911           ; Unknown Exxx instruction
$D98    $0B0F   SYS      $B0F            ; System call to B0F
$D9A    $2CCD   CALL     $CCD            ; Call subroutine at CCD
$D9C    $41FF   SNE      V1, #FF         ; Skip if V1 != 255
$D9E    $5900   SE       V9, V0          ; Skip if V9 == V0
$DA0    $3F61   SE       VF, #61         ; Skip if VF == 97
$DA2    $9245   UNKNOWN  $9245           ; Unknown 9xxx instruction
$DA4    $E578   UNKNOWN  $E578           ; Unknown Exxx instruction
$DA6    $03FC   SYS      $3FC            ; System call to 3FC
$DA8    $A183   LD       I, $183         ; Load 183 into I
$DAA    $6580   LD       V5, #80         ; Load 128 into V5
$DAC    $2225   CALL     $225            ; Call subroutine at 225
$DAE    $607E   LD       V0, #7E         ; Load 126 into V0
$DB0    $D610   DRW      V6, V1, #0      ; Draw 0-byte sprite at V6, V1
$DB2    $D127   DRW      V1, V2, #7      ; Draw 7-byte sprite at V1, V2
$DB4    $2002   CALL     $002            ; Call subroutine at 002
$DB6    $A74F   LD       I, $74F         ; Load 74F into I
$DB8    $6C61   LD       VC, #61         ; Load 97 into VC
$DBA    $C271   RND      V2, #71         ; V2 = random & 71
$DBC    $F7A6   UNKNOWN  F7A6            ; Unknown Fxxx instruction
$DBE    $D112   DRW      V1, V1, #2      ; Draw 2-byte sprite at V1, V1
$DC0    $7799   ADD      V7, #99         ; Add 153 to V7
$DC2    $42E9   SNE      V2, #E9         ; Skip if V2 != 233
$DC4    $8173   XOR      V1, V7          ; V1 ^= V7
$DC6    $419B   SNE      V1, #9B         ; Skip if V1 != 155
$DC8    $CDFF   RND      VD, #FF         ; VD = random & FF
$DCA    $8AA7   SUBN     VA, VA          ; VA = VA - VA, VF = !borrow
$DCC    $BE21   JP       V0, $E21        ; Jump to V0 + E21
$DCE    $6722   LD       V7, #22         ; Load 34 into V7
$DD0    $344A   SE       V4, #4A         ; Skip if V4 == 74
$DD2    $2102   CALL     $102            ; Call subroutine at 102
$DD4    $A1CF   LD       I, $1CF         ; Load 1CF into I
$DD6    $54C2   UNKNOWN  $54C2           ; Unknown 5xxx instruction
$DD8    $A269   LD       I, $269         ; Load 269 into I
$DDA    $F657   UNKNOWN  F657            ; Unknown Fxxx instruction
$DDC    $B791   JP       V0, $791        ; Jump to V0 + 791
$DDE    $92FB   UNKNOWN  $92FB           ; Unknown 9xxx instruction
$DE0    $950A   UNKNOWN  $950A           ; Unknown 9xxx instruction
$DE2    $00AB   SYS      $0AB            ; System call to 0AB
$DE4    $029F   SYS      $29F            ; System call to 29F
$DE6    $5D12   UNKNOWN  $5D12           ; Unknown 5xxx instruction
$DE8    $9D12   UNKNOWN  $9D12           ; Unknown 9xxx instruction
$DEA    $5A76   UNKNOWN  $5A76           ; Unknown 5xxx instruction
$DEC    $AB65   LD       I, $B65         ; Load B65 into I
$DEE    $96D5   UNKNOWN  $96D5           ; Unknown 9xxx instruction
$DF0    $B23E   JP       V0, $23E        ; Jump to V0 + 23E
$DF2    $05E4   SYS      $5E4            ; System call to 5E4
$DF4    $D510   DRW      V5, V1, #0      ; Draw 0-byte sprite at V5, V1
$DF6    $4EC8   SNE      VE, #C8         ; Skip if VE != 200
$DF8    $F220   UNKNOWN  F220            ; Unknown Fxxx instruction
$DFA    $69CB   LD       V9, #CB         ; Load 203 into V9
$DFC    $3037   SE       V0, #37         ; Skip if V0 == 55
$DFE    $3E68   SE       VE, #68         ; Skip if VE == 104
$E00    $1EE0   JP       $EE0            ; Jump to EE0
$E02    $D804   DRW      V8, V0, #4      ; Draw 4-byte sprite at V8, V0
$E04    $22BC   CALL     $2BC            ; Call subroutine at 2BC
$E06    $52B1   UNKNOWN  $52B1           ; Unknown 5xxx instruction
$E08    $9670   SNE      V6, V7          ; Skip if V6 != V7
$E0A    $7C95   ADD      VC, #95         ; Add 149 to VC
$E0C    $E586   UNKNOWN  $E586           ; Unknown Exxx instruction
$E0E    $5170   SE       V1, V7          ; Skip if V1 == V7
$E10    $034C   SYS      $34C            ; System call to 34C
$E12    $D23B   DRW      V2, V3, #B      ; Draw 11-byte sprite at V2, V3
$E14    $7C17   ADD      VC, #17         ; Add 23 to VC
$E16    $9364   UNKNOWN  $9364           ; Unknown 9xxx instruction
$E18    $87D3   XOR      V7, VD          ; V7 ^= VD
$E1A    $F6D5   UNKNOWN  F6D5            ; Unknown Fxxx instruction
$E1C    $4400   SNE      V4, #00         ; Skip if V4 != 0
$E1E    $7E24   ADD      VE, #24         ; Add 36 to VE
$E20    $9BFB   UNKNOWN  $9BFB           ; Unknown 9xxx instruction
$E22    $F742   UNKNOWN  F742            ; Unknown Fxxx instruction
$E24    $0810   SYS      $810            ; System call to 810
$E26    $4144   SNE      V1, #44         ; Skip if V1 != 68
$E28    $C849   RND      V8, #49         ; V8 = random & 49
$E2A    $2BB4   CALL     $BB4            ; Call subroutine at BB4
$E2C    $2D6D   CALL     $D6D            ; Call subroutine at D6D
$E2E    $FEAA   UNKNOWN  FEAA            ; Unknown Fxxx instruction
$E30    $6BB4   LD       VB, #B4         ; Load 180 into VB
$E32    $03F0   SYS      $3F0            ; System call to 3F0
$E34    $AFFD   LD       I, $FFD         ; Load FFD into I
$E36    $8E23   XOR      VE, V2          ; VE ^= V2
$E38    $FEB4   UNKNOWN  FEB4            ; Unknown Fxxx instruction
$E3A    $A06B   LD       I, $06B         ; Load 06B into I
$E3C    $4DBF   SNE      VD, #BF         ; Skip if VD != 191
$E3E    $581B   UNKNOWN  $581B           ; Unknown 5xxx instruction
$E40    $1BD4   JP       $BD4            ; Jump to BD4
$E42    $13BA   JP       $3BA            ; Jump to 3BA
$E44    $ED17   UNKNOWN  $ED17           ; Unknown Exxx instruction
$E46    $D172   DRW      V1, V7, #2      ; Draw 2-byte sprite at V1, V7
$E48    $2EA8   CALL     $EA8            ; Call subroutine at EA8
$E4A    $C968   RND      V9, #68         ; V9 = random & 68
$E4C    $886D   UNKNOWN  886D            ; Unknown 8xxx instruction
$E4E    $A140   LD       I, $140         ; Load 140 into I
$E50    $D94A   DRW      V9, V4, #A      ; Draw 10-byte sprite at V9, V4
$E52    $0C90   SYS      $C90            ; System call to C90
$E54    $549E   UNKNOWN  $549E           ; Unknown 5xxx instruction
$E56    $9E81   UNKNOWN  $9E81           ; Unknown 9xxx instruction
$E58    $76D5   ADD      V6, #D5         ; Add 213 to V6
$E5A    $8304   ADD      V3, V0          ; V3 += V0, VF = carry
$E5C    $FFF4   UNKNOWN  FFF4            ; Unknown Fxxx instruction
$E5E    $B4D3   JP       V0, $4D3        ; Jump to V0 + 4D3
$E60    $D39E   DRW      V3, V9, #E      ; Draw 14-byte sprite at V3, V9
$E62    $7F2A   ADD      VF, #2A         ; Add 42 to VF
$E64    $CF1D   RND      VF, #1D         ; VF = random & 1D
$E66    $C0F4   RND      V0, #F4         ; V0 = random & F4
$E68    $739B   ADD      V3, #9B         ; Add 155 to V3
$E6A    $E95A   UNKNOWN  $E95A           ; Unknown Exxx instruction
$E6C    $E73C   UNKNOWN  $E73C           ; Unknown Exxx instruction
$E6E    $D2CF   DRW      V2, VC, #F      ; Draw 15-byte sprite at V2, VC
$E70    $D6D3   DRW      V6, VD, #3      ; Draw 3-byte sprite at V6, VD
$E72    $4866   SNE      V8, #66         ; Skip if V8 != 102
$E74    $064C   SYS      $64C            ; System call to 64C
$E76    $846E   SHL      V4              ; V4 <<= 1, VF = MSB
$E78    $033C   SYS      $33C            ; System call to 33C
$E7A    $E6CF   UNKNOWN  $E6CF           ; Unknown Exxx instruction
$E7C    $DFB0   DRW      VF, VB, #0      ; Draw 0-byte sprite at VF, VB
$E7E    $4CB9   SNE      VC, #B9         ; Skip if VC != 185
$E80    $649B   LD       V4, #9B         ; Load 155 into V4
$E82    $9924   UNKNOWN  $9924           ; Unknown 9xxx instruction
$E84    $7230   ADD      V2, #30         ; Add 48 to V2
$E86    $CA1B   RND      VA, #1B         ; VA = random & 1B
$E88    $1147   JP       $147            ; Jump to 147
$E8A    $CFD3   RND      VF, #D3         ; VF = random & D3
$E8C    $E095   UNKNOWN  $E095           ; Unknown Exxx instruction
$E8E    $3F31   SE       VF, #31         ; Skip if VF == 49
$E90    $18AE   JP       $8AE            ; Jump to 8AE
$E92    $860D   UNKNOWN  860D            ; Unknown 8xxx instruction
$E94    $6FD4   LD       VF, #D4         ; Load 212 into VF
$E96    $959D   UNKNOWN  $959D           ; Unknown 9xxx instruction
$E98    $8C81   OR       VC, V8          ; VC |= V8
$E9A    $5F30   SE       VF, V3          ; Skip if VF == V3
$E9C    $05CA   SYS      $5CA            ; System call to 5CA
$E9E    $D519   DRW      V5, V1, #9      ; Draw 9-byte sprite at V5, V1
$EA0    $F180   UNKNOWN  F180            ; Unknown Fxxx instruction
$EA2    $9945   UNKNOWN  $9945           ; Unknown 9xxx instruction
$EA4    $D9C9   DRW      V9, VC, #9      ; Draw 9-byte sprite at V9, VC
$EA6    $DFAF   DRW      VF, VA, #F      ; Draw 15-byte sprite at VF, VA
$EA8    $92A2   UNKNOWN  $92A2           ; Unknown 9xxx instruction
$EAA    $B211   JP       V0, $211        ; Jump to V0 + 211
$EAC    $31E6   SE       V1, #E6         ; Skip if V1 == 230
$EAE    $031A   SYS      $31A            ; System call to 31A
$EB0    $C163   RND      V1, #63         ; V1 = random & 63
$EB2    $40D1   SNE      V0, #D1         ; Skip if V0 != 209
$EB4    $AFD6   LD       I, $FD6         ; Load FD6 into I
$EB6    $5EE6   UNKNOWN  $5EE6           ; Unknown 5xxx instruction
$EB8    $7946   ADD      V9, #46         ; Add 70 to V9
$EBA    $8B8C   UNKNOWN  8B8C            ; Unknown 8xxx instruction
$EBC    $923D   UNKNOWN  $923D           ; Unknown 9xxx instruction
$EBE    $E524   UNKNOWN  $E524           ; Unknown Exxx instruction
$EC0    $BCE2   JP       V0, $CE2        ; Jump to V0 + CE2
$EC2    $12A9   JP       $2A9            ; Jump to 2A9
$EC4    $C444   RND      V4, #44         ; V4 = random & 44
$EC6    $9AF6   UNKNOWN  $9AF6           ; Unknown 9xxx instruction
$EC8    $4971   SNE      V9, #71         ; Skip if V9 != 113
$ECA    $E1C3   UNKNOWN  $E1C3           ; Unknown Exxx instruction
$ECC    $3C23   SE       VC, #23         ; Skip if VC == 35
$ECE    $7BD4   ADD      VB, #D4         ; Add 212 to VB
$ED0    $36F0   SE       V6, #F0         ; Skip if V6 == 240
$ED2    $9AED   UNKNOWN  $9AED           ; Unknown 9xxx instruction
$ED4    $A6F4   LD       I, $6F4         ; Load 6F4 into I
$ED6    $3577   SE       V5, #77         ; Skip if V5 == 119
$ED8    $B84D   JP       V0, $84D        ; Jump to V0 + 84D
$EDA    $96BE   UNKNOWN  $96BE           ; Unknown 9xxx instruction
$EDC    $1198   JP       $198            ; Jump to 198
$EDE    $C7EA   RND      V7, #EA         ; V7 = random & EA
$EE0    $922C   UNKNOWN  $922C           ; Unknown 9xxx instruction
$EE2    $DE5D   DRW      VE, V5, #D      ; Draw 13-byte sprite at VE, V5
$EE4    $FADF   UNKNOWN  FADF            ; Unknown Fxxx instruction
$EE6    $F94C   UNKNOWN  F94C            ; Unknown Fxxx instruction
$EE8    $B137   JP       V0, $137        ; Jump to V0 + 137
$EEA    $7D2B   ADD      VD, #2B         ; Add 43 to VD
$EEC    $64BB   LD       V4, #BB         ; Load 187 into V4
$EEE    $8564   ADD      V5, V6          ; V5 += V6, VF = carry
$EF0    $D856   DRW      V8, V5, #6      ; Draw 6-byte sprite at V8, V5
$EF2    $6FCC   LD       VF, #CC         ; Load 204 into VF
$EF4    $733E   ADD      V3, #3E         ; Add 62 to V3
$EF6    $CEEE   RND      VE, #EE         ; VE = random & EE
$EF8    $5DDB   UNKNOWN  $5DDB           ; Unknown 5xxx instruction
$EFA    $DECA   DRW      VE, VC, #A      ; Draw 10-byte sprite at VE, VC
$EFC    $B644   JP       V0, $644        ; Jump to V0 + 644
$EFE    $ADDB   LD       I, $DDB         ; Load DDB into I
$F00    $7EF6   ADD      VE, #F6         ; Add 246 to VE
$F02    $B6FF   JP       V0, $6FF        ; Jump to V0 + 6FF
$F04    $12F8   JP       $2F8            ; Jump to 2F8
$F06    $9BCC   UNKNOWN  $9BCC           ; Unknown 9xxx instruction
$F08    $D4DB   DRW      V4, VD, #B      ; Draw 11-byte sprite at V4, VD
$F0A    $18DF   JP       $8DF            ; Jump to 8DF
$F0C    $8F72   AND      VF, V7          ; VF &= V7
$F0E    $90A3   UNKNOWN  $90A3           ; Unknown 9xxx instruction
$F10    $AAA5   LD       I, $AA5         ; Load AA5 into I
$F12    $B7A6   JP       V0, $7A6        ; Jump to V0 + 7A6
$F14    $5F21   UNKNOWN  $5F21           ; Unknown 5xxx instruction
$F16    $BB3E   JP       V0, $B3E        ; Jump to V0 + B3E
$F18    $501D   UNKNOWN  $501D           ; Unknown 5xxx instruction
$F1A    $8CD1   OR       VC, VD          ; VC |= VD
$F1C    $5FBA   UNKNOWN  $5FBA           ; Unknown 5xxx instruction
$F1E    $48C4   SNE      V8, #C4         ; Skip if V8 != 196
$F20    $4478   SNE      V4, #78         ; Skip if V4 != 120
$F22    $65FB   LD       V5, #FB         ; Load 251 into V5
$F24    $24E7   CALL     $4E7            ; Call subroutine at 4E7
$F26    $080F   SYS      $80F            ; System call to 80F
$F28    $4663   SNE      V6, #63         ; Skip if V6 != 99
$F2A    $2EC9   CALL     $EC9            ; Call subroutine at EC9
$F2C    $54F5   UNKNOWN  $54F5           ; Unknown 5xxx instruction
$F2E    $C60A   RND      V6, #0A         ; V6 = random & 0A
$F30    $EF39   UNKNOWN  $EF39           ; Unknown Exxx instruction
$F32    $525A   UNKNOWN  $525A           ; Unknown 5xxx instruction
$F34    $ED7D   UNKNOWN  $ED7D           ; Unknown Exxx instruction
$F36    $8D76   SHR      VD              ; VD >>= 1, VF = LSB
$F38    $102D   JP       $02D            ; Jump to 02D
$F3A    $19F5   JP       $9F5            ; Jump to 9F5
$F3C    $DCE3   DRW      VC, VE, #3      ; Draw 3-byte sprite at VC, VE
$F3E    $6DFA   LD       VD, #FA         ; Load 250 into VD
$F40    $E79F   UNKNOWN  $E79F           ; Unknown Exxx instruction
$F42    $E36F   UNKNOWN  $E36F           ; Unknown Exxx instruction
$F44    $F80F   UNKNOWN  F80F            ; Unknown Fxxx instruction
$F46    $3F95   SE       VF, #95         ; Skip if VF == 149
$F48    $452D   SNE      V5, #2D         ; Skip if V5 != 45
$F4A    $5990   SE       V9, V9          ; Skip if V9 == V9
$F4C    $FE53   UNKNOWN  FE53            ; Unknown Fxxx instruction
$F4E    $19E2   JP       $9E2            ; Jump to 9E2
$F50    $9C51   UNKNOWN  $9C51           ; Unknown 9xxx instruction
$F52    $EF13   UNKNOWN  $EF13           ; Unknown Exxx instruction
$F54    $B4C6   JP       V0, $4C6        ; Jump to V0 + 4C6
$F56    $0E1A   SYS      $E1A            ; System call to E1A
$F58    $345A   SE       V4, #5A         ; Skip if V4 == 90
$F5A    $01CE   SYS      $1CE            ; System call to 1CE
$F5C    $34D0   SE       V4, #D0         ; Skip if V4 == 208
$F5E    $0F5E   SYS      $F5E            ; System call to F5E
$F60    $9517   UNKNOWN  $9517           ; Unknown 9xxx instruction
$F62    $0122   SYS      $122            ; System call to 122
$F64    $244C   CALL     $44C            ; Call subroutine at 44C
$F66    $90EB   UNKNOWN  $90EB           ; Unknown 9xxx instruction
$F68    $1A14   JP       $A14            ; Jump to A14
$F6A    $9D10   SNE      VD, V1          ; Skip if VD != V1
$F6C    $B629   JP       V0, $629        ; Jump to V0 + 629
$F6E    $EE9A   UNKNOWN  $EE9A           ; Unknown Exxx instruction
$F70    $B334   JP       V0, $334        ; Jump to V0 + 334
$F72    $23E0   CALL     $3E0            ; Call subroutine at 3E0
$F74    $83D4   ADD      V3, VD          ; V3 += VD, VF = carry
$F76    $FCBA   UNKNOWN  FCBA            ; Unknown Fxxx instruction
$F78    $C41C   RND      V4, #1C         ; V4 = random & 1C
$F7A    $E8E8   UNKNOWN  $E8E8           ; Unknown Exxx instruction
$F7C    $5B35   UNKNOWN  $5B35           ; Unknown 5xxx instruction
$F7E    $225F   CALL     $25F            ; Call subroutine at 25F
$F80    $5F6B   UNKNOWN  $5F6B           ; Unknown 5xxx instruction
$F82    $637D   LD       V3, #7D         ; Load 125 into V3
$F84    $96B2   UNKNOWN  $96B2           ; Unknown 9xxx instruction
$F86    $7F1D   ADD      VF, #1D         ; Add 29 to VF
$F88    $CC9B   RND      VC, #9B         ; VC = random & 9B
$F8A    $FAFC   UNKNOWN  FAFC            ; Unknown Fxxx instruction
$F8C    $792C   ADD      V9, #2C         ; Add 44 to V9
$F8E    $B590   JP       V0, $590        ; Jump to V0 + 590
$F90    $1075   JP       $075            ; Jump to 075
$F92    $A2A0   LD       I, $2A0         ; Load 2A0 into I
$F94    $8532   AND      V5, V3          ; V5 &= V3
$F96    $98EF   UNKNOWN  $98EF           ; Unknown 9xxx instruction
$F98    $AD80   LD       I, $D80         ; Load D80 into I
$F9A    $9711   UNKNOWN  $9711           ; Unknown 9xxx instruction
$F9C    $2377   CALL     $377            ; Call subroutine at 377
$F9E    $6B59   LD       VB, #59         ; Load 89 into VB
$FA0    $B654   JP       V0, $654        ; Jump to V0 + 654
$FA2    $E963   UNKNOWN  $E963           ; Unknown Exxx instruction
$FA4    $88B7   SUBN     V8, VB          ; V8 = VB - V8, VF = !borrow
$FA6    $F93A   UNKNOWN  F93A            ; Unknown Fxxx instruction
$FA8    $6FFD   LD       VF, #FD         ; Load 253 into VF
$FAA    $E483   UNKNOWN  $E483           ; Unknown Exxx instruction
$FAC    $4A3F   SNE      VA, #3F         ; Skip if VA != 63
$FAE    $93E9   UNKNOWN  $93E9           ; Unknown 9xxx instruction
$FB0    $C35A   RND      V3, #5A         ; V3 = random & 5A
$FB2    $42D1   SNE      V2, #D1         ; Skip if V2 != 209
$FB4    $746C   ADD      V4, #6C         ; Add 108 to V4
$FB6    $0EC6   SYS      $EC6            ; System call to EC6
$FB8    $D918   DRW      V9, V1, #8      ; Draw 8-byte sprite at V9, V1
$FBA    $F42C   UNKNOWN  F42C            ; Unknown Fxxx instruction
$FBC    $31A0   SE       V1, #A0         ; Skip if V1 == 160
$FBE    $F2C8   UNKNOWN  F2C8            ; Unknown Fxxx instruction
$FC0    $952F   UNKNOWN  $952F           ; Unknown 9xxx instruction
$FC2    $0775   SYS      $775            ; System call to 775
$FC4    $95C8   UNKNOWN  $95C8           ; Unknown 9xxx instruction
$FC6    $E250   UNKNOWN  $E250           ; Unknown Exxx instruction
$FC8    $540D   UNKNOWN  $540D           ; Unknown 5xxx instruction
$FCA    $94BD   UNKNOWN  $94BD           ; Unknown 9xxx instruction
$FCC    $77B7   ADD      V7, #B7         ; Add 183 to V7
$FCE    $A4E3   LD       I, $4E3         ; Load 4E3 into I
$FD0    $949C   UNKNOWN  $949C           ; Unknown 9xxx instruction
$FD2    $2CB6   CALL     $CB6            ; Call subroutine at CB6
$FD4    $6C3B   LD       VC, #3B         ; Load 59 into VC
$FD6    $D3A0   DRW      V3, VA, #0      ; Draw 0-byte sprite at V3, VA
$FD8    $C91F   RND      V9, #1F         ; V9 = random & 1F
$FDA    $35F1   SE       V5, #F1         ; Skip if V5 == 241
$FDC    $B851   JP       V0, $851        ; Jump to V0 + 851
$FDE    $73AB   ADD      V3, #AB         ; Add 171 to V3
$FE0    $A4B6   LD       I, $4B6         ; Load 4B6 into I
$FE2    $7B42   ADD      VB, #42         ; Add 66 to VB
$FE4    $42DD   SNE      V2, #DD         ; Skip if V2 != 221
$FE6    $D9B1   DRW      V9, VB, #1      ; Draw 1-byte sprite at V9, VB
$FE8    $98E5   UNKNOWN  $98E5           ; Unknown 9xxx instruction
$FEA    $D78D   DRW      V7, V8, #D      ; Draw 13-byte sprite at V7, V8
$FEC    $21DF   CALL     $1DF            ; Call subroutine at 1DF
$FEE    $755A   ADD      V5, #5A         ; Add 90 to V5
$FF0    $9F6C   UNKNOWN  $9F6C           ; Unknown 9xxx instruction
$FF2    $D25A   DRW      V2, V5, #A      ; Draw 10-byte sprite at V2, V5
$FF4    $CA02   RND      VA, #02         ; VA = random & 02
$FF6    $3FE3   SE       VF, #E3         ; Skip if VF == 227
$FF8    $1839   JP       $839            ; Jump to 839
$FFA    $3A08   SE       VA, #08         ; Skip if VA == 8
$FFC    $0FB8   SYS      $FB8            ; System call to FB8
$FFE    $F5F5   UNKNOWN  F5F5            ; Unknown Fxxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 457 (25.5%)
  LD      : 315 (17.6%)
  JP      : 205 (11.4%)
  ADD     : 123 ( 6.9%)
  DRW     : 122 ( 6.8%)
  SE      : 113 ( 6.3%)
  SNE     : 109 ( 6.1%)
  SYS     : 106 ( 5.9%)
  RND     : 101 ( 5.6%)
  CALL    :  87 ( 4.9%)
  SUB     :  11 ( 0.6%)
  AND     :   8 ( 0.4%)
  XOR     :   8 ( 0.4%)
  SUBN    :   7 ( 0.4%)
  SHL     :   7 ( 0.4%)
  OR      :   6 ( 0.3%)
  SHR     :   6 ( 0.3%)
  SKP     :   1 ( 0.1%)

Memory Operations: 438 (24.4%)
Arithmetic Operations: 163 (9.1%)
