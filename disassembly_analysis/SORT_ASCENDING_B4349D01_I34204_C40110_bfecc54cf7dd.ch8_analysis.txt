
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B4349D01_I34204_C40110_bfecc54cf7dd.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 4349
Instance: 34204
Direction: ascending
Final Array: [10, 10, 10, 10, 10, 10, 108, 143]
Operations: R:0 W:6 C:359 S:69

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 116
Sort Array References:
  $30C: LD I, $39F ; Load 39F into I
  $320: LD I, $757 ; Load 757 into I
  $330: LD I, $E84 ; Load E84 into I
  $33C: LD I, $3DE ; Load 3DE into I
  $344: LD I, $B6D ; Load B6D into I
  $366: LD I, $B5E ; Load B5E into I
  $384: LD I, $CDC ; Load CDC into I
  $388: LD I, $051 ; Load 051 into I
  $39E: LD I, $75D ; Load 75D into I
  $3C2: LD I, $FC3 ; Load FC3 into I
  $3C8: LD I, $86E ; Load 86E into I
  $3D0: LD I, $1B2 ; Load 1B2 into I
  $40A: LD I, $67B ; Load 67B into I
  $41C: LD I, $C35 ; Load C35 into I
  $426: LD I, $1BE ; Load 1BE into I
  $48C: LD I, $B7F ; Load B7F into I
  $4CE: LD I, $E84 ; Load E84 into I
  $508: LD I, $CCE ; Load CCE into I
  $50C: LD I, $F96 ; Load F96 into I
  $51A: LD I, $A91 ; Load A91 into I
  $534: LD I, $018 ; Load 018 into I
  $57A: LD I, $FD9 ; Load FD9 into I
  $59A: LD I, $F62 ; Load F62 into I
  $5AC: LD I, $59B ; Load 59B into I
  $616: LD I, $273 ; Load 273 into I
  $632: LD I, $476 ; Load 476 into I
  $64E: LD I, $1CE ; Load 1CE into I
  $666: LD I, $26B ; Load 26B into I
  $67A: LD I, $B4B ; Load B4B into I
  $6A2: LD I, $9BC ; Load 9BC into I
  $6B4: LD I, $2F7 ; Load 2F7 into I
  $6B6: LD I, $AC1 ; Load AC1 into I
  $708: LD I, $18E ; Load 18E into I
  $72E: LD I, $AE7 ; Load AE7 into I
  $75A: LD I, $A41 ; Load A41 into I
  $7D2: LD I, $49A ; Load 49A into I
  $812: LD I, $2B2 ; Load 2B2 into I
  $816: LD I, $9BF ; Load 9BF into I
  $822: LD I, $E78 ; Load E78 into I
  $824: LD I, $3FA ; Load 3FA into I
  $826: LD I, $372 ; Load 372 into I
  $84C: LD I, $708 ; Load 708 into I
  $85A: LD I, $621 ; Load 621 into I
  $85E: LD I, $97F ; Load 97F into I
  $894: LD I, $44A ; Load 44A into I
  $896: LD I, $FB4 ; Load FB4 into I
  $8AE: LD I, $846 ; Load 846 into I
  $8CE: LD I, $609 ; Load 609 into I
  $8F8: LD I, $28E ; Load 28E into I
  $90C: LD I, $D91 ; Load D91 into I
  $95C: LD I, $079 ; Load 079 into I
  $96A: LD I, $C13 ; Load C13 into I
  $96E: LD I, $66E ; Load 66E into I
  $974: LD I, $8AA ; Load 8AA into I
  $978: LD I, $6E2 ; Load 6E2 into I
  $996: LD I, $853 ; Load 853 into I
  $9EC: LD I, $6F4 ; Load 6F4 into I
  $A04: LD I, $4C1 ; Load 4C1 into I
  $A12: LD I, $610 ; Load 610 into I
  $A1E: LD I, $7F8 ; Load 7F8 into I
  $A42: LD I, $048 ; Load 048 into I
  $A4E: LD I, $491 ; Load 491 into I
  $A52: LD I, $F20 ; Load F20 into I
  $A8C: LD I, $AB1 ; Load AB1 into I
  $AAA: LD I, $254 ; Load 254 into I
  $AC4: LD I, $4FA ; Load 4FA into I
  $AE4: LD I, $EAB ; Load EAB into I
  $AF0: LD I, $AC4 ; Load AC4 into I
  $AF8: LD I, $263 ; Load 263 into I
  $AFE: LD I, $9A1 ; Load 9A1 into I
  $B2C: LD I, $E55 ; Load E55 into I
  $B64: LD I, $19A ; Load 19A into I
  $BA6: LD I, $E46 ; Load E46 into I
  $BA8: LD I, $8DA ; Load 8DA into I
  $BAA: LD I, $61C ; Load 61C into I
  $BBE: LD I, $FC6 ; Load FC6 into I
  $BE0: LD I, $D35 ; Load D35 into I
  $BEE: LD I, $F1E ; Load F1E into I
  $C06: LD I, $641 ; Load 641 into I
  $C10: LD [I], V0 ; Store V0-V0 at I
  $C1A: LD I, $B7A ; Load B7A into I
  $C28: LD I, $5AF ; Load 5AF into I
  $C30: LD I, $82F ; Load 82F into I
  $C38: LD I, $1B7 ; Load 1B7 into I
  $C3E: LD I, $B68 ; Load B68 into I
  $C58: LD I, $7DC ; Load 7DC into I
  $C70: LD I, $B90 ; Load B90 into I
  $C86: LD I, $25B ; Load 25B into I
  $C9C: LD I, $371 ; Load 371 into I
  $CB6: LD I, $C43 ; Load C43 into I
  $CE4: LD I, $8FD ; Load 8FD into I
  $CF2: LD I, $9B4 ; Load 9B4 into I
  $D04: LD I, $E7F ; Load E7F into I
  $D50: LD I, $CAA ; Load CAA into I
  $D5A: LD I, $7B1 ; Load 7B1 into I
  $D70: LD I, $25B ; Load 25B into I
  $D74: LD I, $017 ; Load 017 into I
  $D76: LD [I], VF ; Store V0-VF at I
  $D92: LD I, $705 ; Load 705 into I
  $DC8: LD I, $5CA ; Load 5CA into I
  $DE2: LD I, $866 ; Load 866 into I
  $DE4: LD I, $42C ; Load 42C into I
  $E06: LD I, $1AC ; Load 1AC into I
  $E46: LD I, $DF5 ; Load DF5 into I
  $E5A: LD I, $163 ; Load 163 into I
  $E8A: LD I, $55B ; Load 55B into I
  $E9C: LD I, $5F5 ; Load 5F5 into I
  $EF4: LD I, $C66 ; Load C66 into I
  $F0C: LD I, $A45 ; Load A45 into I
  $F1C: LD I, $589 ; Load 589 into I
  $F26: LD I, $567 ; Load 567 into I
  $F62: LD I, $748 ; Load 748 into I
  $F6A: LD I, $58D ; Load 58D into I
  $F8A: LD I, $196 ; Load 196 into I
  $FA4: LD I, $4D0 ; Load 4D0 into I
  $FBA: LD I, $D86 ; Load D86 into I

CONTROL FLOW ANALYSIS:
Jumps: 215
Calls: 94
Branches: 200
Loops: 123
Loop Structures:
  $324 -> $1DA (backward jump)
  $3DE -> $07F (backward jump)
  $450 -> $37B (backward jump)
  $480 -> $2D7 (backward jump)
  $4B6 -> $243 (backward jump)
  $512 -> $053 (backward jump)
  $52E -> $381 (backward jump)
  $53A -> $45E (backward jump)
  $572 -> $0D3 (backward jump)
  $5A6 -> $0B5 (backward jump)
  $5CE -> $365 (backward jump)
  $622 -> $1BF (backward jump)
  $626 -> $018 (backward jump)
  $63C -> $087 (backward jump)
  $642 -> $2E5 (backward jump)
  $696 -> $161 (backward jump)
  $69C -> $48F (backward jump)
  $712 -> $0EB (backward jump)
  $72C -> $459 (backward jump)
  $752 -> $1DA (backward jump)
  $7B0 -> $158 (backward jump)
  $7C6 -> $420 (backward jump)
  $7CE -> $10D (backward jump)
  $7E4 -> $3D3 (backward jump)
  $7E6 -> $2B0 (backward jump)
  $7F2 -> $10C (backward jump)
  $81C -> $6C2 (backward jump)
  $828 -> $6A8 (backward jump)
  $850 -> $7DE (backward jump)
  $864 -> $06F (backward jump)
  $876 -> $2CA (backward jump)
  $89E -> $1F7 (backward jump)
  $8C0 -> $5DB (backward jump)
  $8C4 -> $110 (backward jump)
  $8CC -> $25F (backward jump)
  $8FE -> $563 (backward jump)
  $90A -> $23B (backward jump)
  $91C -> $05D (backward jump)
  $91E -> $5E2 (backward jump)
  $92C -> $38B (backward jump)
  $92E -> $795 (backward jump)
  $942 -> $0C2 (backward jump)
  $96C -> $32E (backward jump)
  $972 -> $862 (backward jump)
  $988 -> $438 (backward jump)
  $992 -> $0D7 (backward jump)
  $9A2 -> $140 (backward jump)
  $9B0 -> $8E6 (backward jump)
  $9B2 -> $097 (backward jump)
  $9B4 -> $189 (backward jump)
  $9EA -> $639 (backward jump)
  $A00 -> $6C9 (backward jump)
  $A16 -> $8AB (backward jump)
  $A1C -> $7D2 (backward jump)
  $A3E -> $374 (backward jump)
  $A4C -> $968 (backward jump)
  $A72 -> $091 (backward jump)
  $A8A -> $19A (backward jump)
  $A8E -> $0DC (backward jump)
  $AA4 -> $2CF (backward jump)
  $AB0 -> $8F2 (backward jump)
  $AC2 -> $052 (backward jump)
  $AD6 -> $7D1 (backward jump)
  $B0E -> $A25 (backward jump)
  $B16 -> $941 (backward jump)
  $B26 -> $696 (backward jump)
  $B3E -> $2B4 (backward jump)
  $B82 -> $96C (backward jump)
  $B88 -> $5EC (backward jump)
  $B8C -> $9EE (backward jump)
  $BB4 -> $689 (backward jump)
  $BB6 -> $40E (backward jump)
  $BD4 -> $9FC (backward jump)
  $C2E -> $3C5 (backward jump)
  $CAA -> $518 (backward jump)
  $CB4 -> $0BC (backward jump)
  $CBE -> $088 (backward jump)
  $CD2 -> $45B (backward jump)
  $CD8 -> $67A (backward jump)
  $CFA -> $331 (backward jump)
  $D36 -> $B50 (backward jump)
  $D46 -> $999 (backward jump)
  $D6A -> $D20 (backward jump)
  $D78 -> $AB9 (backward jump)
  $D7C -> $B66 (backward jump)
  $D80 -> $374 (backward jump)
  $D8E -> $D5C (backward jump)
  $DAC -> $315 (backward jump)
  $DCA -> $A7E (backward jump)
  $DD2 -> $529 (backward jump)
  $DEA -> $198 (backward jump)
  $DFE -> $56F (backward jump)
  $E20 -> $C80 (backward jump)
  $E22 -> $17D (backward jump)
  $E30 -> $0FF (backward jump)
  $E3A -> $762 (backward jump)
  $E4C -> $539 (backward jump)
  $E50 -> $CAD (backward jump)
  $E56 -> $2D7 (backward jump)
  $E5C -> $6B7 (backward jump)
  $E6A -> $821 (backward jump)
  $E6E -> $C17 (backward jump)
  $E76 -> $824 (backward jump)
  $E92 -> $8CD (backward jump)
  $E9A -> $C23 (backward jump)
  $EC8 -> $342 (backward jump)
  $EE0 -> $DA8 (backward jump)
  $EE6 -> $4FC (backward jump)
  $EE8 -> $B94 (backward jump)
  $EEC -> $973 (backward jump)
  $EFA -> $658 (backward jump)
  $F28 -> $4D8 (backward jump)
  $F56 -> $715 (backward jump)
  $F58 -> $F17 (backward jump)
  $F70 -> $21E (backward jump)
  $FA6 -> $E35 (backward jump)
  $FAA -> $6B4 (backward jump)
  $FAC -> $348 (backward jump)
  $FB2 -> $C88 (backward jump)
  $FB8 -> $6A7 (backward jump)
  $FC2 -> $B46 (backward jump)
  $FF4 -> $5BB (backward jump)
  $FF8 -> $80B (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $0A0A   SYS      $A0A            ; System call to A0A
$202    $0A0A   SYS      $A0A            ; System call to A0A
$204    $0A0A   SYS      $A0A            ; System call to A0A
$206    $0A0A   SYS      $A0A            ; System call to A0A
$208    $0A0A   SYS      $A0A            ; System call to A0A
$20A    $0A0A   SYS      $A0A            ; System call to A0A
$20C    $0A0A   SYS      $A0A            ; System call to A0A
$20E    $0A0A   SYS      $A0A            ; System call to A0A
$210    $0A0A   SYS      $A0A            ; System call to A0A
$212    $0A0A   SYS      $A0A            ; System call to A0A
$214    $0A0A   SYS      $A0A            ; System call to A0A
$216    $0A0A   SYS      $A0A            ; System call to A0A
$218    $0A0A   SYS      $A0A            ; System call to A0A
$21A    $0A0A   SYS      $A0A            ; System call to A0A
$21C    $0A0A   SYS      $A0A            ; System call to A0A
$21E    $0A0A   SYS      $A0A            ; System call to A0A
$220    $0A0A   SYS      $A0A            ; System call to A0A
$222    $0A0A   SYS      $A0A            ; System call to A0A
$224    $0A0A   SYS      $A0A            ; System call to A0A
$226    $0A0A   SYS      $A0A            ; System call to A0A
$228    $0A0A   SYS      $A0A            ; System call to A0A
$22A    $0A0A   SYS      $A0A            ; System call to A0A
$22C    $0A0A   SYS      $A0A            ; System call to A0A
$22E    $0A0A   SYS      $A0A            ; System call to A0A
$230    $0A0A   SYS      $A0A            ; System call to A0A
$232    $0A0A   SYS      $A0A            ; System call to A0A
$234    $0A0A   SYS      $A0A            ; System call to A0A
$236    $0A0A   SYS      $A0A            ; System call to A0A
$238    $0A0A   SYS      $A0A            ; System call to A0A
$23A    $0A0A   SYS      $A0A            ; System call to A0A
$23C    $0A0A   SYS      $A0A            ; System call to A0A
$23E    $0A0A   SYS      $A0A            ; System call to A0A
$240    $0A0A   SYS      $A0A            ; System call to A0A
$242    $0A0A   SYS      $A0A            ; System call to A0A
$244    $0A0A   SYS      $A0A            ; System call to A0A
$246    $0A0A   SYS      $A0A            ; System call to A0A
$248    $0A0A   SYS      $A0A            ; System call to A0A
$24A    $0A0A   SYS      $A0A            ; System call to A0A
$24C    $0A0A   SYS      $A0A            ; System call to A0A
$24E    $0A0A   SYS      $A0A            ; System call to A0A
$250    $0A0A   SYS      $A0A            ; System call to A0A
$252    $0A0A   SYS      $A0A            ; System call to A0A
$254    $0A0A   SYS      $A0A            ; System call to A0A
$256    $0A0A   SYS      $A0A            ; System call to A0A
$258    $0A0A   SYS      $A0A            ; System call to A0A
$25A    $0A0A   SYS      $A0A            ; System call to A0A
$25C    $0A0A   SYS      $A0A            ; System call to A0A
$25E    $0A0A   SYS      $A0A            ; System call to A0A
$260    $0A0A   SYS      $A0A            ; System call to A0A
$262    $0A0A   SYS      $A0A            ; System call to A0A
$264    $0A0A   SYS      $A0A            ; System call to A0A
$266    $0A0A   SYS      $A0A            ; System call to A0A
$268    $0A0A   SYS      $A0A            ; System call to A0A
$26A    $0A0A   SYS      $A0A            ; System call to A0A
$26C    $0A0A   SYS      $A0A            ; System call to A0A
$26E    $0A0A   SYS      $A0A            ; System call to A0A
$270    $0A0A   SYS      $A0A            ; System call to A0A
$272    $0A0A   SYS      $A0A            ; System call to A0A
$274    $0A0A   SYS      $A0A            ; System call to A0A
$276    $0A0A   SYS      $A0A            ; System call to A0A
$278    $0A0A   SYS      $A0A            ; System call to A0A
$27A    $0A0A   SYS      $A0A            ; System call to A0A
$27C    $0A0A   SYS      $A0A            ; System call to A0A
$27E    $0A0A   SYS      $A0A            ; System call to A0A
$280    $0A0A   SYS      $A0A            ; System call to A0A
$282    $0A0A   SYS      $A0A            ; System call to A0A
$284    $0A0A   SYS      $A0A            ; System call to A0A
$286    $0A0A   SYS      $A0A            ; System call to A0A
$288    $0A0A   SYS      $A0A            ; System call to A0A
$28A    $0A0A   SYS      $A0A            ; System call to A0A
$28C    $0A0A   SYS      $A0A            ; System call to A0A
$28E    $0A0A   SYS      $A0A            ; System call to A0A
$290    $0A0A   SYS      $A0A            ; System call to A0A
$292    $0A0A   SYS      $A0A            ; System call to A0A
$294    $0A0A   SYS      $A0A            ; System call to A0A
$296    $0A0A   SYS      $A0A            ; System call to A0A
$298    $0A0A   SYS      $A0A            ; System call to A0A
$29A    $0A0A   SYS      $A0A            ; System call to A0A
$29C    $0A0A   SYS      $A0A            ; System call to A0A
$29E    $0A0A   SYS      $A0A            ; System call to A0A
$2A0    $0A0A   SYS      $A0A            ; System call to A0A
$2A2    $0A0A   SYS      $A0A            ; System call to A0A
$2A4    $0A0A   SYS      $A0A            ; System call to A0A
$2A6    $0A0A   SYS      $A0A            ; System call to A0A
$2A8    $0A0A   SYS      $A0A            ; System call to A0A
$2AA    $0A0A   SYS      $A0A            ; System call to A0A
$2AC    $0A0A   SYS      $A0A            ; System call to A0A
$2AE    $0A0A   SYS      $A0A            ; System call to A0A
$2B0    $0A0A   SYS      $A0A            ; System call to A0A
$2B2    $0A0A   SYS      $A0A            ; System call to A0A
$2B4    $0A0A   SYS      $A0A            ; System call to A0A
$2B6    $0A0A   SYS      $A0A            ; System call to A0A
$2B8    $0A0A   SYS      $A0A            ; System call to A0A
$2BA    $0A0A   SYS      $A0A            ; System call to A0A
$2BC    $0A0A   SYS      $A0A            ; System call to A0A
$2BE    $0A0A   SYS      $A0A            ; System call to A0A
$2C0    $0A0A   SYS      $A0A            ; System call to A0A
$2C2    $0A0A   SYS      $A0A            ; System call to A0A
$2C4    $0A0A   SYS      $A0A            ; System call to A0A
$2C6    $0A0A   SYS      $A0A            ; System call to A0A
$2C8    $0A0A   SYS      $A0A            ; System call to A0A
$2CA    $0A0A   SYS      $A0A            ; System call to A0A
$2CC    $0A0A   SYS      $A0A            ; System call to A0A
$2CE    $0A0A   SYS      $A0A            ; System call to A0A
$2D0    $0A0A   SYS      $A0A            ; System call to A0A
$2D2    $0A0A   SYS      $A0A            ; System call to A0A
$2D4    $0A0A   SYS      $A0A            ; System call to A0A
$2D6    $0A0A   SYS      $A0A            ; System call to A0A
$2D8    $0A0A   SYS      $A0A            ; System call to A0A
$2DA    $0A0A   SYS      $A0A            ; System call to A0A
$2DC    $0A0A   SYS      $A0A            ; System call to A0A
$2DE    $0A0A   SYS      $A0A            ; System call to A0A
$2E0    $0A0A   SYS      $A0A            ; System call to A0A
$2E2    $0A0A   SYS      $A0A            ; System call to A0A
$2E4    $0A0A   SYS      $A0A            ; System call to A0A
$2E6    $0A0A   SYS      $A0A            ; System call to A0A
$2E8    $0A0A   SYS      $A0A            ; System call to A0A
$2EA    $0A0A   SYS      $A0A            ; System call to A0A
$2EC    $0A0A   SYS      $A0A            ; System call to A0A
$2EE    $0A0A   SYS      $A0A            ; System call to A0A
$2F0    $0A0A   SYS      $A0A            ; System call to A0A
$2F2    $0A0A   SYS      $A0A            ; System call to A0A
$2F4    $0A0A   SYS      $A0A            ; System call to A0A
$2F6    $0A0A   SYS      $A0A            ; System call to A0A
$2F8    $0A0A   SYS      $A0A            ; System call to A0A
$2FA    $0A0A   SYS      $A0A            ; System call to A0A
$2FC    $0A0A   SYS      $A0A            ; System call to A0A
$2FE    $0A0A   SYS      $A0A            ; System call to A0A
$300    $0A0A   SYS      $A0A            ; System call to A0A
$302    $0A0A   SYS      $A0A            ; System call to A0A
$304    $0A0A   SYS      $A0A            ; System call to A0A
$306    $6C8F   LD       VC, #8F         ; Load 143 into VC
$308    $0313   SYS      $313            ; System call to 313
$30A    $ECDA   UNKNOWN  $ECDA           ; Unknown Exxx instruction
$30C    $A39F   LD       I, $39F         ; Load 39F into I
$30E    $F394   UNKNOWN  F394            ; Unknown Fxxx instruction
$310    $99C4   UNKNOWN  $99C4           ; Unknown 9xxx instruction
$312    $9DD0   SNE      VD, VD          ; Skip if VD != VD
$314    $F4D3   UNKNOWN  F4D3            ; Unknown Fxxx instruction
$316    $40EF   SNE      V0, #EF         ; Skip if V0 != 239
$318    $7A0E   ADD      VA, #0E         ; Add 14 to VA
$31A    $17B2   JP       $7B2            ; Jump to 7B2
$31C    $3F29   SE       VF, #29         ; Skip if VF == 41
$31E    $2E67   CALL     $E67            ; Call subroutine at E67
$320    $A757   LD       I, $757         ; Load 757 into I
$322    $D3C9   DRW      V3, VC, #9      ; Draw 9-byte sprite at V3, VC
$324    $11DA   JP       $1DA            ; Jump to 1DA
$326    $5F19   UNKNOWN  $5F19           ; Unknown 5xxx instruction
$328    $FA03   UNKNOWN  FA03            ; Unknown Fxxx instruction
$32A    $F593   UNKNOWN  F593            ; Unknown Fxxx instruction
$32C    $EDA6   UNKNOWN  $EDA6           ; Unknown Exxx instruction
$32E    $72C8   ADD      V2, #C8         ; Add 200 to V2
$330    $AE84   LD       I, $E84         ; Load E84 into I
$332    $69DB   LD       V9, #DB         ; Load 219 into V9
$334    $417F   SNE      V1, #7F         ; Skip if V1 != 127
$336    $C567   RND      V5, #67         ; V5 = random & 67
$338    $0E8E   SYS      $E8E            ; System call to E8E
$33A    $89DE   SHL      V9              ; V9 <<= 1, VF = MSB
$33C    $A3DE   LD       I, $3DE         ; Load 3DE into I
$33E    $521D   UNKNOWN  $521D           ; Unknown 5xxx instruction
$340    $3030   SE       V0, #30         ; Skip if V0 == 48
$342    $4281   SNE      V2, #81         ; Skip if V2 != 129
$344    $AB6D   LD       I, $B6D         ; Load B6D into I
$346    $9E5A   UNKNOWN  $9E5A           ; Unknown 9xxx instruction
$348    $970E   UNKNOWN  $970E           ; Unknown 9xxx instruction
$34A    $689E   LD       V8, #9E         ; Load 158 into V8
$34C    $304F   SE       V0, #4F         ; Skip if V0 == 79
$34E    $8F16   SHR      VF              ; VF >>= 1, VF = LSB
$350    $4AB7   SNE      VA, #B7         ; Skip if VA != 183
$352    $903D   UNKNOWN  $903D           ; Unknown 9xxx instruction
$354    $1718   JP       $718            ; Jump to 718
$356    $6CCC   LD       VC, #CC         ; Load 204 into VC
$358    $5A7E   UNKNOWN  $5A7E           ; Unknown 5xxx instruction
$35A    $DA02   DRW      VA, V0, #2      ; Draw 2-byte sprite at VA, V0
$35C    $0BFD   SYS      $BFD            ; System call to BFD
$35E    $6600   LD       V6, #00         ; Load 0 into V6
$360    $DAEA   DRW      VA, VE, #A      ; Draw 10-byte sprite at VA, VE
$362    $BBB4   JP       V0, $BB4        ; Jump to V0 + BB4
$364    $D47B   DRW      V4, V7, #B      ; Draw 11-byte sprite at V4, V7
$366    $AB5E   LD       I, $B5E         ; Load B5E into I
$368    $0543   SYS      $543            ; System call to 543
$36A    $DE0A   DRW      VE, V0, #A      ; Draw 10-byte sprite at VE, V0
$36C    $3753   SE       V7, #53         ; Skip if V7 == 83
$36E    $0109   SYS      $109            ; System call to 109
$370    $06D7   SYS      $6D7            ; System call to 6D7
$372    $13A2   JP       $3A2            ; Jump to 3A2
$374    $FF67   UNKNOWN  FF67            ; Unknown Fxxx instruction
$376    $FA6D   UNKNOWN  FA6D            ; Unknown Fxxx instruction
$378    $EB3B   UNKNOWN  $EB3B           ; Unknown Exxx instruction
$37A    $012F   SYS      $12F            ; System call to 12F
$37C    $E090   UNKNOWN  $E090           ; Unknown Exxx instruction
$37E    $DD26   DRW      VD, V2, #6      ; Draw 6-byte sprite at VD, V2
$380    $91FC   UNKNOWN  $91FC           ; Unknown 9xxx instruction
$382    $D87B   DRW      V8, V7, #B      ; Draw 11-byte sprite at V8, V7
$384    $ACDC   LD       I, $CDC         ; Load CDC into I
$386    $32C0   SE       V2, #C0         ; Skip if V2 == 192
$388    $A051   LD       I, $051         ; Load 051 into I
$38A    $7CE3   ADD      VC, #E3         ; Add 227 to VC
$38C    $814C   UNKNOWN  814C            ; Unknown 8xxx instruction
$38E    $177A   JP       $77A            ; Jump to 77A
$390    $2719   CALL     $719            ; Call subroutine at 719
$392    $DA4F   DRW      VA, V4, #F      ; Draw 15-byte sprite at VA, V4
$394    $712C   ADD      V1, #2C         ; Add 44 to V1
$396    $6625   LD       V6, #25         ; Load 37 into V6
$398    $B86C   JP       V0, $86C        ; Jump to V0 + 86C
$39A    $260D   CALL     $60D            ; Call subroutine at 60D
$39C    $BDCD   JP       V0, $DCD        ; Jump to V0 + DCD
$39E    $A75D   LD       I, $75D         ; Load 75D into I
$3A0    $1FEC   JP       $FEC            ; Jump to FEC
$3A2    $F407   LD       V4, DT          ; V4 = delay timer
$3A4    $C2E3   RND      V2, #E3         ; V2 = random & E3
$3A6    $3F2D   SE       VF, #2D         ; Skip if VF == 45
$3A8    $D4A0   DRW      V4, VA, #0      ; Draw 0-byte sprite at V4, VA
$3AA    $EDAF   UNKNOWN  $EDAF           ; Unknown Exxx instruction
$3AC    $DD21   DRW      VD, V2, #1      ; Draw 1-byte sprite at VD, V2
$3AE    $37A6   SE       V7, #A6         ; Skip if V7 == 166
$3B0    $FD43   UNKNOWN  FD43            ; Unknown Fxxx instruction
$3B2    $D546   DRW      V5, V4, #6      ; Draw 6-byte sprite at V5, V4
$3B4    $E9DD   UNKNOWN  $E9DD           ; Unknown Exxx instruction
$3B6    $8FA5   SUB      VF, VA          ; VF -= VA, VF = !borrow
$3B8    $44AA   SNE      V4, #AA         ; Skip if V4 != 170
$3BA    $5784   UNKNOWN  $5784           ; Unknown 5xxx instruction
$3BC    $D7F9   DRW      V7, VF, #9      ; Draw 9-byte sprite at V7, VF
$3BE    $575E   UNKNOWN  $575E           ; Unknown 5xxx instruction
$3C0    $908D   UNKNOWN  $908D           ; Unknown 9xxx instruction
$3C2    $AFC3   LD       I, $FC3         ; Load FC3 into I
$3C4    $B823   JP       V0, $823        ; Jump to V0 + 823
$3C6    $D712   DRW      V7, V1, #2      ; Draw 2-byte sprite at V7, V1
$3C8    $A86E   LD       I, $86E         ; Load 86E into I
$3CA    $8B3C   UNKNOWN  8B3C            ; Unknown 8xxx instruction
$3CC    $FDA8   UNKNOWN  FDA8            ; Unknown Fxxx instruction
$3CE    $33C4   SE       V3, #C4         ; Skip if V3 == 196
$3D0    $A1B2   LD       I, $1B2         ; Load 1B2 into I
$3D2    $7876   ADD      V8, #76         ; Add 118 to V8
$3D4    $7AC0   ADD      VA, #C0         ; Add 192 to VA
$3D6    $952D   UNKNOWN  $952D           ; Unknown 9xxx instruction
$3D8    $511E   UNKNOWN  $511E           ; Unknown 5xxx instruction
$3DA    $C33D   RND      V3, #3D         ; V3 = random & 3D
$3DC    $B404   JP       V0, $404        ; Jump to V0 + 404
$3DE    $B07F   JP       V0, $07F        ; Jump to V0 + 07F
$3E0    $B726   JP       V0, $726        ; Jump to V0 + 726
$3E2    $D747   DRW      V7, V4, #7      ; Draw 7-byte sprite at V7, V4
$3E4    $4103   SNE      V1, #03         ; Skip if V1 != 3
$3E6    $CB05   RND      VB, #05         ; VB = random & 05
$3E8    $7895   ADD      V8, #95         ; Add 149 to V8
$3EA    $6CDF   LD       VC, #DF         ; Load 223 into VC
$3EC    $2016   CALL     $016            ; Call subroutine at 016
$3EE    $F76D   UNKNOWN  F76D            ; Unknown Fxxx instruction
$3F0    $845B   UNKNOWN  845B            ; Unknown 8xxx instruction
$3F2    $401B   SNE      V0, #1B         ; Skip if V0 != 27
$3F4    $E011   UNKNOWN  $E011           ; Unknown Exxx instruction
$3F6    $9151   UNKNOWN  $9151           ; Unknown 9xxx instruction
$3F8    $1E5B   JP       $E5B            ; Jump to E5B
$3FA    $E37F   UNKNOWN  $E37F           ; Unknown Exxx instruction
$3FC    $5C8A   UNKNOWN  $5C8A           ; Unknown 5xxx instruction
$3FE    $0E41   SYS      $E41            ; System call to E41
$400    $720F   ADD      V2, #0F         ; Add 15 to V2
$402    $178E   JP       $78E            ; Jump to 78E
$404    $6A74   LD       VA, #74         ; Load 116 into VA
$406    $685D   LD       V8, #5D         ; Load 93 into V8
$408    $BEB0   JP       V0, $EB0        ; Jump to V0 + EB0
$40A    $A67B   LD       I, $67B         ; Load 67B into I
$40C    $87CF   UNKNOWN  87CF            ; Unknown 8xxx instruction
$40E    $9AB4   UNKNOWN  $9AB4           ; Unknown 9xxx instruction
$410    $582B   UNKNOWN  $582B           ; Unknown 5xxx instruction
$412    $088A   SYS      $88A            ; System call to 88A
$414    $7455   ADD      V4, #55         ; Add 85 to V4
$416    $47FB   SNE      V7, #FB         ; Skip if V7 != 251
$418    $53E9   UNKNOWN  $53E9           ; Unknown 5xxx instruction
$41A    $8D04   ADD      VD, V0          ; VD += V0, VF = carry
$41C    $AC35   LD       I, $C35         ; Load C35 into I
$41E    $98BF   UNKNOWN  $98BF           ; Unknown 9xxx instruction
$420    $6F20   LD       VF, #20         ; Load 32 into VF
$422    $C3D0   RND      V3, #D0         ; V3 = random & D0
$424    $EA23   UNKNOWN  $EA23           ; Unknown Exxx instruction
$426    $A1BE   LD       I, $1BE         ; Load 1BE into I
$428    $1946   JP       $946            ; Jump to 946
$42A    $1677   JP       $677            ; Jump to 677
$42C    $8A7B   UNKNOWN  8A7B            ; Unknown 8xxx instruction
$42E    $15E7   JP       $5E7            ; Jump to 5E7
$430    $071E   SYS      $71E            ; System call to 71E
$432    $602C   LD       V0, #2C         ; Load 44 into V0
$434    $1874   JP       $874            ; Jump to 874
$436    $3C65   SE       VC, #65         ; Skip if VC == 101
$438    $1FE9   JP       $FE9            ; Jump to FE9
$43A    $E23E   UNKNOWN  $E23E           ; Unknown Exxx instruction
$43C    $2A5E   CALL     $A5E            ; Call subroutine at A5E
$43E    $63BB   LD       V3, #BB         ; Load 187 into V3
$440    $8E8A   UNKNOWN  8E8A            ; Unknown 8xxx instruction
$442    $3032   SE       V0, #32         ; Skip if V0 == 50
$444    $3018   SE       V0, #18         ; Skip if V0 == 24
$446    $FCE6   UNKNOWN  FCE6            ; Unknown Fxxx instruction
$448    $9985   UNKNOWN  $9985           ; Unknown 9xxx instruction
$44A    $9D74   UNKNOWN  $9D74           ; Unknown 9xxx instruction
$44C    $522E   UNKNOWN  $522E           ; Unknown 5xxx instruction
$44E    $82E6   SHR      V2              ; V2 >>= 1, VF = LSB
$450    $137B   JP       $37B            ; Jump to 37B
$452    $5918   UNKNOWN  $5918           ; Unknown 5xxx instruction
$454    $BA24   JP       V0, $A24        ; Jump to V0 + A24
$456    $6459   LD       V4, #59         ; Load 89 into V4
$458    $7C84   ADD      VC, #84         ; Add 132 to VC
$45A    $B675   JP       V0, $675        ; Jump to V0 + 675
$45C    $8057   SUBN     V0, V5          ; V0 = V5 - V0, VF = !borrow
$45E    $6789   LD       V7, #89         ; Load 137 into V7
$460    $8F34   ADD      VF, V3          ; VF += V3, VF = carry
$462    $D0ED   DRW      V0, VE, #D      ; Draw 13-byte sprite at V0, VE
$464    $8230   LD       V2, V3          ; V2 = V3
$466    $0D13   SYS      $D13            ; System call to D13
$468    $20B7   CALL     $0B7            ; Call subroutine at 0B7
$46A    $5810   SE       V8, V1          ; Skip if V8 == V1
$46C    $F8AF   UNKNOWN  F8AF            ; Unknown Fxxx instruction
$46E    $4EA9   SNE      VE, #A9         ; Skip if VE != 169
$470    $9B15   UNKNOWN  $9B15           ; Unknown 9xxx instruction
$472    $C0F4   RND      V0, #F4         ; V0 = random & F4
$474    $C28F   RND      V2, #8F         ; V2 = random & 8F
$476    $6784   LD       V7, #84         ; Load 132 into V7
$478    $7370   ADD      V3, #70         ; Add 112 to V3
$47A    $767A   ADD      V6, #7A         ; Add 122 to V6
$47C    $0479   SYS      $479            ; System call to 479
$47E    $796D   ADD      V9, #6D         ; Add 109 to V9
$480    $12D7   JP       $2D7            ; Jump to 2D7
$482    $7B51   ADD      VB, #51         ; Add 81 to VB
$484    $E0C9   UNKNOWN  $E0C9           ; Unknown Exxx instruction
$486    $C622   RND      V6, #22         ; V6 = random & 22
$488    $F177   UNKNOWN  F177            ; Unknown Fxxx instruction
$48A    $1E46   JP       $E46            ; Jump to E46
$48C    $AB7F   LD       I, $B7F         ; Load B7F into I
$48E    $8647   SUBN     V6, V4          ; V6 = V4 - V6, VF = !borrow
$490    $87AD   UNKNOWN  87AD            ; Unknown 8xxx instruction
$492    $C684   RND      V6, #84         ; V6 = random & 84
$494    $5E9A   UNKNOWN  $5E9A           ; Unknown 5xxx instruction
$496    $5424   UNKNOWN  $5424           ; Unknown 5xxx instruction
$498    $CC8E   RND      VC, #8E         ; VC = random & 8E
$49A    $5C83   UNKNOWN  $5C83           ; Unknown 5xxx instruction
$49C    $EF72   UNKNOWN  $EF72           ; Unknown Exxx instruction
$49E    $C220   RND      V2, #20         ; V2 = random & 20
$4A0    $D8AC   DRW      V8, VA, #C      ; Draw 12-byte sprite at V8, VA
$4A2    $986D   UNKNOWN  $986D           ; Unknown 9xxx instruction
$4A4    $28E5   CALL     $8E5            ; Call subroutine at 8E5
$4A6    $0A1D   SYS      $A1D            ; System call to A1D
$4A8    $3540   SE       V5, #40         ; Skip if V5 == 64
$4AA    $3638   SE       V6, #38         ; Skip if V6 == 56
$4AC    $0E46   SYS      $E46            ; System call to E46
$4AE    $6686   LD       V6, #86         ; Load 134 into V6
$4B0    $8AB0   LD       VA, VB          ; VA = VB
$4B2    $5A5B   UNKNOWN  $5A5B           ; Unknown 5xxx instruction
$4B4    $2FA8   CALL     $FA8            ; Call subroutine at FA8
$4B6    $1243   JP       $243            ; Jump to 243
$4B8    $97F8   UNKNOWN  $97F8           ; Unknown 9xxx instruction
$4BA    $D12E   DRW      V1, V2, #E      ; Draw 14-byte sprite at V1, V2
$4BC    $08EC   SYS      $8EC            ; System call to 8EC
$4BE    $E414   UNKNOWN  $E414           ; Unknown Exxx instruction
$4C0    $E186   UNKNOWN  $E186           ; Unknown Exxx instruction
$4C2    $6775   LD       V7, #75         ; Load 117 into V7
$4C4    $CAA2   RND      VA, #A2         ; VA = random & A2
$4C6    $639E   LD       V3, #9E         ; Load 158 into V3
$4C8    $ED60   UNKNOWN  $ED60           ; Unknown Exxx instruction
$4CA    $5A7D   UNKNOWN  $5A7D           ; Unknown 5xxx instruction
$4CC    $EE9F   UNKNOWN  $EE9F           ; Unknown Exxx instruction
$4CE    $AE84   LD       I, $E84         ; Load E84 into I
$4D0    $5E71   UNKNOWN  $5E71           ; Unknown 5xxx instruction
$4D2    $E435   UNKNOWN  $E435           ; Unknown Exxx instruction
$4D4    $4BA7   SNE      VB, #A7         ; Skip if VB != 167
$4D6    $E94B   UNKNOWN  $E94B           ; Unknown Exxx instruction
$4D8    $450C   SNE      V5, #0C         ; Skip if V5 != 12
$4DA    $7D76   ADD      VD, #76         ; Add 118 to VD
$4DC    $47F5   SNE      V7, #F5         ; Skip if V7 != 245
$4DE    $C811   RND      V8, #11         ; V8 = random & 11
$4E0    $C6EA   RND      V6, #EA         ; V6 = random & EA
$4E2    $2337   CALL     $337            ; Call subroutine at 337
$4E4    $7A82   ADD      VA, #82         ; Add 130 to VA
$4E6    $6FC4   LD       VF, #C4         ; Load 196 into VF
$4E8    $7154   ADD      V1, #54         ; Add 84 to V1
$4EA    $8D50   LD       VD, V5          ; VD = V5
$4EC    $69A0   LD       V9, #A0         ; Load 160 into V9
$4EE    $1894   JP       $894            ; Jump to 894
$4F0    $49F8   SNE      V9, #F8         ; Skip if V9 != 248
$4F2    $9C96   UNKNOWN  $9C96           ; Unknown 9xxx instruction
$4F4    $533E   UNKNOWN  $533E           ; Unknown 5xxx instruction
$4F6    $5DC5   UNKNOWN  $5DC5           ; Unknown 5xxx instruction
$4F8    $28F5   CALL     $8F5            ; Call subroutine at 8F5
$4FA    $7442   ADD      V4, #42         ; Add 66 to V4
$4FC    $2E9F   CALL     $E9F            ; Call subroutine at E9F
$4FE    $5FF8   UNKNOWN  $5FF8           ; Unknown 5xxx instruction
$500    $9082   UNKNOWN  $9082           ; Unknown 9xxx instruction
$502    $B9BE   JP       V0, $9BE        ; Jump to V0 + 9BE
$504    $DE6F   DRW      VE, V6, #F      ; Draw 15-byte sprite at VE, V6
$506    $4571   SNE      V5, #71         ; Skip if V5 != 113
$508    $ACCE   LD       I, $CCE         ; Load CCE into I
$50A    $249D   CALL     $49D            ; Call subroutine at 49D
$50C    $AF96   LD       I, $F96         ; Load F96 into I
$50E    $8D30   LD       VD, V3          ; VD = V3
$510    $757C   ADD      V5, #7C         ; Add 124 to V5
$512    $B053   JP       V0, $053        ; Jump to V0 + 053
$514    $E521   UNKNOWN  $E521           ; Unknown Exxx instruction
$516    $04E6   SYS      $4E6            ; System call to 4E6
$518    $624F   LD       V2, #4F         ; Load 79 into V2
$51A    $AA91   LD       I, $A91         ; Load A91 into I
$51C    $3FA5   SE       VF, #A5         ; Skip if VF == 165
$51E    $5146   UNKNOWN  $5146           ; Unknown 5xxx instruction
$520    $8359   UNKNOWN  8359            ; Unknown 8xxx instruction
$522    $68A7   LD       V8, #A7         ; Load 167 into V8
$524    $8C6F   UNKNOWN  8C6F            ; Unknown 8xxx instruction
$526    $E1D2   UNKNOWN  $E1D2           ; Unknown Exxx instruction
$528    $1BCA   JP       $BCA            ; Jump to BCA
$52A    $7D2E   ADD      VD, #2E         ; Add 46 to VD
$52C    $8443   XOR      V4, V4          ; V4 ^= V4
$52E    $1381   JP       $381            ; Jump to 381
$530    $6F1F   LD       VF, #1F         ; Load 31 into VF
$532    $8110   LD       V1, V1          ; V1 = V1
$534    $A018   LD       I, $018         ; Load 018 into I
$536    $0752   SYS      $752            ; System call to 752
$538    $E66D   UNKNOWN  $E66D           ; Unknown Exxx instruction
$53A    $B45E   JP       V0, $45E        ; Jump to V0 + 45E
$53C    $DA80   DRW      VA, V8, #0      ; Draw 0-byte sprite at VA, V8
$53E    $CCD0   RND      VC, #D0         ; VC = random & D0
$540    $0A81   SYS      $A81            ; System call to A81
$542    $6B62   LD       VB, #62         ; Load 98 into VB
$544    $C8DF   RND      V8, #DF         ; V8 = random & DF
$546    $7F90   ADD      VF, #90         ; Add 144 to VF
$548    $5245   UNKNOWN  $5245           ; Unknown 5xxx instruction
$54A    $43EE   SNE      V3, #EE         ; Skip if V3 != 238
$54C    $04F7   SYS      $4F7            ; System call to 4F7
$54E    $BBFD   JP       V0, $BFD        ; Jump to V0 + BFD
$550    $FDB8   UNKNOWN  FDB8            ; Unknown Fxxx instruction
$552    $1D7C   JP       $D7C            ; Jump to D7C
$554    $0AE7   SYS      $AE7            ; System call to AE7
$556    $F63E   UNKNOWN  F63E            ; Unknown Fxxx instruction
$558    $BA79   JP       V0, $A79        ; Jump to V0 + A79
$55A    $5D73   UNKNOWN  $5D73           ; Unknown 5xxx instruction
$55C    $67EA   LD       V7, #EA         ; Load 234 into V7
$55E    $0583   SYS      $583            ; System call to 583
$560    $F5DE   UNKNOWN  F5DE            ; Unknown Fxxx instruction
$562    $0520   SYS      $520            ; System call to 520
$564    $CE5C   RND      VE, #5C         ; VE = random & 5C
$566    $70C1   ADD      V0, #C1         ; Add 193 to V0
$568    $3DE3   SE       VD, #E3         ; Skip if VD == 227
$56A    $3016   SE       V0, #16         ; Skip if V0 == 22
$56C    $05BE   SYS      $5BE            ; System call to 5BE
$56E    $CACE   RND      VA, #CE         ; VA = random & CE
$570    $3B01   SE       VB, #01         ; Skip if VB == 1
$572    $10D3   JP       $0D3            ; Jump to 0D3
$574    $1AD9   JP       $AD9            ; Jump to AD9
$576    $DB83   DRW      VB, V8, #3      ; Draw 3-byte sprite at VB, V8
$578    $5C86   UNKNOWN  $5C86           ; Unknown 5xxx instruction
$57A    $AFD9   LD       I, $FD9         ; Load FD9 into I
$57C    $26CB   CALL     $6CB            ; Call subroutine at 6CB
$57E    $C431   RND      V4, #31         ; V4 = random & 31
$580    $FEC6   UNKNOWN  FEC6            ; Unknown Fxxx instruction
$582    $D2AB   DRW      V2, VA, #B      ; Draw 11-byte sprite at V2, VA
$584    $875B   UNKNOWN  875B            ; Unknown 8xxx instruction
$586    $8329   UNKNOWN  8329            ; Unknown 8xxx instruction
$588    $D76E   DRW      V7, V6, #E      ; Draw 14-byte sprite at V7, V6
$58A    $B5A1   JP       V0, $5A1        ; Jump to V0 + 5A1
$58C    $81B2   AND      V1, VB          ; V1 &= VB
$58E    $51CD   UNKNOWN  $51CD           ; Unknown 5xxx instruction
$590    $6816   LD       V8, #16         ; Load 22 into V8
$592    $F929   LD       F, V9           ; I = sprite address for digit V9
$594    $8CE9   UNKNOWN  8CE9            ; Unknown 8xxx instruction
$596    $58C1   UNKNOWN  $58C1           ; Unknown 5xxx instruction
$598    $73A2   ADD      V3, #A2         ; Add 162 to V3
$59A    $AF62   LD       I, $F62         ; Load F62 into I
$59C    $9B2A   UNKNOWN  $9B2A           ; Unknown 9xxx instruction
$59E    $8A3E   SHL      VA              ; VA <<= 1, VF = MSB
$5A0    $5A8E   UNKNOWN  $5A8E           ; Unknown 5xxx instruction
$5A2    $FA49   UNKNOWN  FA49            ; Unknown Fxxx instruction
$5A4    $15B5   JP       $5B5            ; Jump to 5B5
$5A6    $B0B5   JP       V0, $0B5        ; Jump to V0 + 0B5
$5A8    $D73E   DRW      V7, V3, #E      ; Draw 14-byte sprite at V7, V3
$5AA    $E116   UNKNOWN  $E116           ; Unknown Exxx instruction
$5AC    $A59B   LD       I, $59B         ; Load 59B into I
$5AE    $3732   SE       V7, #32         ; Skip if V7 == 50
$5B0    $F12C   UNKNOWN  F12C            ; Unknown Fxxx instruction
$5B2    $3A76   SE       VA, #76         ; Skip if VA == 118
$5B4    $357C   SE       V5, #7C         ; Skip if V5 == 124
$5B6    $6A18   LD       VA, #18         ; Load 24 into VA
$5B8    $1A48   JP       $A48            ; Jump to A48
$5BA    $EDD6   UNKNOWN  $EDD6           ; Unknown Exxx instruction
$5BC    $06DA   SYS      $6DA            ; System call to 6DA
$5BE    $DD6D   DRW      VD, V6, #D      ; Draw 13-byte sprite at VD, V6
$5C0    $9E1E   UNKNOWN  $9E1E           ; Unknown 9xxx instruction
$5C2    $9AD5   UNKNOWN  $9AD5           ; Unknown 9xxx instruction
$5C4    $8367   SUBN     V3, V6          ; V3 = V6 - V3, VF = !borrow
$5C6    $BE63   JP       V0, $E63        ; Jump to V0 + E63
$5C8    $1C90   JP       $C90            ; Jump to C90
$5CA    $4B46   SNE      VB, #46         ; Skip if VB != 70
$5CC    $C368   RND      V3, #68         ; V3 = random & 68
$5CE    $1365   JP       $365            ; Jump to 365
$5D0    $0C71   SYS      $C71            ; System call to C71
$5D2    $EF9F   UNKNOWN  $EF9F           ; Unknown Exxx instruction
$5D4    $5686   UNKNOWN  $5686           ; Unknown 5xxx instruction
$5D6    $7238   ADD      V2, #38         ; Add 56 to V2
$5D8    $DD5E   DRW      VD, V5, #E      ; Draw 14-byte sprite at VD, V5
$5DA    $3CAE   SE       VC, #AE         ; Skip if VC == 174
$5DC    $BF74   JP       V0, $F74        ; Jump to V0 + F74
$5DE    $902B   UNKNOWN  $902B           ; Unknown 9xxx instruction
$5E0    $BC8B   JP       V0, $C8B        ; Jump to V0 + C8B
$5E2    $2D3D   CALL     $D3D            ; Call subroutine at D3D
$5E4    $B7C4   JP       V0, $7C4        ; Jump to V0 + 7C4
$5E6    $78C4   ADD      V8, #C4         ; Add 196 to V8
$5E8    $BE3D   JP       V0, $E3D        ; Jump to V0 + E3D
$5EA    $2824   CALL     $824            ; Call subroutine at 824
$5EC    $6333   LD       V3, #33         ; Load 51 into V3
$5EE    $213C   CALL     $13C            ; Call subroutine at 13C
$5F0    $3CDD   SE       VC, #DD         ; Skip if VC == 221
$5F2    $9EDD   UNKNOWN  $9EDD           ; Unknown 9xxx instruction
$5F4    $847A   UNKNOWN  847A            ; Unknown 8xxx instruction
$5F6    $E6B1   UNKNOWN  $E6B1           ; Unknown Exxx instruction
$5F8    $61AC   LD       V1, #AC         ; Load 172 into V1
$5FA    $FDF7   UNKNOWN  FDF7            ; Unknown Fxxx instruction
$5FC    $36A4   SE       V6, #A4         ; Skip if V6 == 164
$5FE    $7866   ADD      V8, #66         ; Add 102 to V8
$600    $79A1   ADD      V9, #A1         ; Add 161 to V9
$602    $EF4A   UNKNOWN  $EF4A           ; Unknown Exxx instruction
$604    $197F   JP       $97F            ; Jump to 97F
$606    $8292   AND      V2, V9          ; V2 &= V9
$608    $4A72   SNE      VA, #72         ; Skip if VA != 114
$60A    $6A73   LD       VA, #73         ; Load 115 into VA
$60C    $FEA1   UNKNOWN  FEA1            ; Unknown Fxxx instruction
$60E    $E13F   UNKNOWN  $E13F           ; Unknown Exxx instruction
$610    $96C8   UNKNOWN  $96C8           ; Unknown 9xxx instruction
$612    $03A2   SYS      $3A2            ; System call to 3A2
$614    $594F   UNKNOWN  $594F           ; Unknown 5xxx instruction
$616    $A273   LD       I, $273         ; Load 273 into I
$618    $943C   UNKNOWN  $943C           ; Unknown 9xxx instruction
$61A    $5DE9   UNKNOWN  $5DE9           ; Unknown 5xxx instruction
$61C    $991A   UNKNOWN  $991A           ; Unknown 9xxx instruction
$61E    $0782   SYS      $782            ; System call to 782
$620    $CC04   RND      VC, #04         ; VC = random & 04
$622    $B1BF   JP       V0, $1BF        ; Jump to V0 + 1BF
$624    $9143   UNKNOWN  $9143           ; Unknown 9xxx instruction
$626    $1018   JP       $018            ; Jump to 018
$628    $5DD8   UNKNOWN  $5DD8           ; Unknown 5xxx instruction
$62A    $38F0   SE       V8, #F0         ; Skip if V8 == 240
$62C    $EA1F   UNKNOWN  $EA1F           ; Unknown Exxx instruction
$62E    $54F7   UNKNOWN  $54F7           ; Unknown 5xxx instruction
$630    $80CA   UNKNOWN  80CA            ; Unknown 8xxx instruction
$632    $A476   LD       I, $476         ; Load 476 into I
$634    $2A3F   CALL     $A3F            ; Call subroutine at A3F
$636    $2078   CALL     $078            ; Call subroutine at 078
$638    $F74D   UNKNOWN  F74D            ; Unknown Fxxx instruction
$63A    $069F   SYS      $69F            ; System call to 69F
$63C    $B087   JP       V0, $087        ; Jump to V0 + 087
$63E    $EC42   UNKNOWN  $EC42           ; Unknown Exxx instruction
$640    $362D   SE       V6, #2D         ; Skip if V6 == 45
$642    $12E5   JP       $2E5            ; Jump to 2E5
$644    $9369   UNKNOWN  $9369           ; Unknown 9xxx instruction
$646    $49F7   SNE      V9, #F7         ; Skip if V9 != 247
$648    $7B7C   ADD      VB, #7C         ; Add 124 to VB
$64A    $6299   LD       V2, #99         ; Load 153 into V2
$64C    $9552   UNKNOWN  $9552           ; Unknown 9xxx instruction
$64E    $A1CE   LD       I, $1CE         ; Load 1CE into I
$650    $07FF   SYS      $7FF            ; System call to 7FF
$652    $F6C2   UNKNOWN  F6C2            ; Unknown Fxxx instruction
$654    $2F35   CALL     $F35            ; Call subroutine at F35
$656    $CDE6   RND      VD, #E6         ; VD = random & E6
$658    $E552   UNKNOWN  $E552           ; Unknown Exxx instruction
$65A    $F55D   UNKNOWN  F55D            ; Unknown Fxxx instruction
$65C    $FA41   UNKNOWN  FA41            ; Unknown Fxxx instruction
$65E    $4F47   SNE      VF, #47         ; Skip if VF != 71
$660    $2504   CALL     $504            ; Call subroutine at 504
$662    $440F   SNE      V4, #0F         ; Skip if V4 != 15
$664    $0D2A   SYS      $D2A            ; System call to D2A
$666    $A26B   LD       I, $26B         ; Load 26B into I
$668    $6970   LD       V9, #70         ; Load 112 into V9
$66A    $60D8   LD       V0, #D8         ; Load 216 into V0
$66C    $716E   ADD      V1, #6E         ; Add 110 to V1
$66E    $035F   SYS      $35F            ; System call to 35F
$670    $5F73   UNKNOWN  $5F73           ; Unknown 5xxx instruction
$672    $DAAF   DRW      VA, VA, #F      ; Draw 15-byte sprite at VA, VA
$674    $8C86   SHR      VC              ; VC >>= 1, VF = LSB
$676    $4CB2   SNE      VC, #B2         ; Skip if VC != 178
$678    $CFC4   RND      VF, #C4         ; VF = random & C4
$67A    $AB4B   LD       I, $B4B         ; Load B4B into I
$67C    $D064   DRW      V0, V6, #4      ; Draw 4-byte sprite at V0, V6
$67E    $55CA   UNKNOWN  $55CA           ; Unknown 5xxx instruction
$680    $E3BF   UNKNOWN  $E3BF           ; Unknown Exxx instruction
$682    $1868   JP       $868            ; Jump to 868
$684    $2793   CALL     $793            ; Call subroutine at 793
$686    $0547   SYS      $547            ; System call to 547
$688    $74B4   ADD      V4, #B4         ; Add 180 to V4
$68A    $BE1B   JP       V0, $E1B        ; Jump to V0 + E1B
$68C    $F600   UNKNOWN  F600            ; Unknown Fxxx instruction
$68E    $7B63   ADD      VB, #63         ; Add 99 to VB
$690    $3A56   SE       VA, #56         ; Skip if VA == 86
$692    $195C   JP       $95C            ; Jump to 95C
$694    $6A1A   LD       VA, #1A         ; Load 26 into VA
$696    $B161   JP       V0, $161        ; Jump to V0 + 161
$698    $7C4A   ADD      VC, #4A         ; Add 74 to VC
$69A    $32A4   SE       V2, #A4         ; Skip if V2 == 164
$69C    $148F   JP       $48F            ; Jump to 48F
$69E    $E9E7   UNKNOWN  $E9E7           ; Unknown Exxx instruction
$6A0    $5598   UNKNOWN  $5598           ; Unknown 5xxx instruction
$6A2    $A9BC   LD       I, $9BC         ; Load 9BC into I
$6A4    $6A27   LD       VA, #27         ; Load 39 into VA
$6A6    $C593   RND      V5, #93         ; V5 = random & 93
$6A8    $97C5   UNKNOWN  $97C5           ; Unknown 9xxx instruction
$6AA    $6925   LD       V9, #25         ; Load 37 into V9
$6AC    $2900   CALL     $900            ; Call subroutine at 900
$6AE    $2641   CALL     $641            ; Call subroutine at 641
$6B0    $78B6   ADD      V8, #B6         ; Add 182 to V8
$6B2    $8796   SHR      V7              ; V7 >>= 1, VF = LSB
$6B4    $A2F7   LD       I, $2F7         ; Load 2F7 into I
$6B6    $AAC1   LD       I, $AC1         ; Load AC1 into I
$6B8    $EE1E   UNKNOWN  $EE1E           ; Unknown Exxx instruction
$6BA    $9928   UNKNOWN  $9928           ; Unknown 9xxx instruction
$6BC    $9090   SNE      V0, V9          ; Skip if V0 != V9
$6BE    $0E3B   SYS      $E3B            ; System call to E3B
$6C0    $8059   UNKNOWN  8059            ; Unknown 8xxx instruction
$6C2    $72CF   ADD      V2, #CF         ; Add 207 to V2
$6C4    $BF5E   JP       V0, $F5E        ; Jump to V0 + F5E
$6C6    $FCF1   UNKNOWN  FCF1            ; Unknown Fxxx instruction
$6C8    $59F6   UNKNOWN  $59F6           ; Unknown 5xxx instruction
$6CA    $4635   SNE      V6, #35         ; Skip if V6 != 53
$6CC    $3913   SE       V9, #13         ; Skip if V9 == 19
$6CE    $9D73   UNKNOWN  $9D73           ; Unknown 9xxx instruction
$6D0    $64E4   LD       V4, #E4         ; Load 228 into V4
$6D2    $8A92   AND      VA, V9          ; VA &= V9
$6D4    $721E   ADD      V2, #1E         ; Add 30 to V2
$6D6    $EE31   UNKNOWN  $EE31           ; Unknown Exxx instruction
$6D8    $1EB1   JP       $EB1            ; Jump to EB1
$6DA    $3369   SE       V3, #69         ; Skip if V3 == 105
$6DC    $D31B   DRW      V3, V1, #B      ; Draw 11-byte sprite at V3, V1
$6DE    $273B   CALL     $73B            ; Call subroutine at 73B
$6E0    $1B40   JP       $B40            ; Jump to B40
$6E2    $BE0F   JP       V0, $E0F        ; Jump to V0 + E0F
$6E4    $8581   OR       V5, V8          ; V5 |= V8
$6E6    $2F16   CALL     $F16            ; Call subroutine at F16
$6E8    $640E   LD       V4, #0E         ; Load 14 into V4
$6EA    $9A94   UNKNOWN  $9A94           ; Unknown 9xxx instruction
$6EC    $1C79   JP       $C79            ; Jump to C79
$6EE    $38B0   SE       V8, #B0         ; Skip if V8 == 176
$6F0    $1887   JP       $887            ; Jump to 887
$6F2    $0F97   SYS      $F97            ; System call to F97
$6F4    $CD40   RND      VD, #40         ; VD = random & 40
$6F6    $4924   SNE      V9, #24         ; Skip if V9 != 36
$6F8    $CAC4   RND      VA, #C4         ; VA = random & C4
$6FA    $5F1D   UNKNOWN  $5F1D           ; Unknown 5xxx instruction
$6FC    $1C9B   JP       $C9B            ; Jump to C9B
$6FE    $C654   RND      V6, #54         ; V6 = random & 54
$700    $CC3C   RND      VC, #3C         ; VC = random & 3C
$702    $5B0E   UNKNOWN  $5B0E           ; Unknown 5xxx instruction
$704    $88DD   UNKNOWN  88DD            ; Unknown 8xxx instruction
$706    $E908   UNKNOWN  $E908           ; Unknown Exxx instruction
$708    $A18E   LD       I, $18E         ; Load 18E into I
$70A    $5CC9   UNKNOWN  $5CC9           ; Unknown 5xxx instruction
$70C    $E2EE   UNKNOWN  $E2EE           ; Unknown Exxx instruction
$70E    $FA6F   UNKNOWN  FA6F            ; Unknown Fxxx instruction
$710    $4A8D   SNE      VA, #8D         ; Skip if VA != 141
$712    $10EB   JP       $0EB            ; Jump to 0EB
$714    $3B1C   SE       VB, #1C         ; Skip if VB == 28
$716    $8E4F   UNKNOWN  8E4F            ; Unknown 8xxx instruction
$718    $C103   RND      V1, #03         ; V1 = random & 03
$71A    $3ECB   SE       VE, #CB         ; Skip if VE == 203
$71C    $265E   CALL     $65E            ; Call subroutine at 65E
$71E    $DB7D   DRW      VB, V7, #D      ; Draw 13-byte sprite at VB, V7
$720    $177D   JP       $77D            ; Jump to 77D
$722    $1981   JP       $981            ; Jump to 981
$724    $C5DF   RND      V5, #DF         ; V5 = random & DF
$726    $0A2C   SYS      $A2C            ; System call to A2C
$728    $F67D   UNKNOWN  F67D            ; Unknown Fxxx instruction
$72A    $5955   UNKNOWN  $5955           ; Unknown 5xxx instruction
$72C    $B459   JP       V0, $459        ; Jump to V0 + 459
$72E    $AAE7   LD       I, $AE7         ; Load AE7 into I
$730    $E396   UNKNOWN  $E396           ; Unknown Exxx instruction
$732    $85D1   OR       V5, VD          ; V5 |= VD
$734    $EE33   UNKNOWN  $EE33           ; Unknown Exxx instruction
$736    $9F1C   UNKNOWN  $9F1C           ; Unknown 9xxx instruction
$738    $D7F2   DRW      V7, VF, #2      ; Draw 2-byte sprite at V7, VF
$73A    $CBDC   RND      VB, #DC         ; VB = random & DC
$73C    $8CD0   LD       VC, VD          ; VC = VD
$73E    $3251   SE       V2, #51         ; Skip if V2 == 81
$740    $367C   SE       V6, #7C         ; Skip if V6 == 124
$742    $D7E7   DRW      V7, VE, #7      ; Draw 7-byte sprite at V7, VE
$744    $CACD   RND      VA, #CD         ; VA = random & CD
$746    $EC0D   UNKNOWN  $EC0D           ; Unknown Exxx instruction
$748    $55F5   UNKNOWN  $55F5           ; Unknown 5xxx instruction
$74A    $99AB   UNKNOWN  $99AB           ; Unknown 9xxx instruction
$74C    $2448   CALL     $448            ; Call subroutine at 448
$74E    $97F4   UNKNOWN  $97F4           ; Unknown 9xxx instruction
$750    $EA8E   UNKNOWN  $EA8E           ; Unknown Exxx instruction
$752    $B1DA   JP       V0, $1DA        ; Jump to V0 + 1DA
$754    $7C8D   ADD      VC, #8D         ; Add 141 to VC
$756    $7288   ADD      V2, #88         ; Add 136 to V2
$758    $6CD4   LD       VC, #D4         ; Load 212 into VC
$75A    $AA41   LD       I, $A41         ; Load A41 into I
$75C    $F1FE   UNKNOWN  F1FE            ; Unknown Fxxx instruction
$75E    $587B   UNKNOWN  $587B           ; Unknown 5xxx instruction
$760    $F6EB   UNKNOWN  F6EB            ; Unknown Fxxx instruction
$762    $CAD5   RND      VA, #D5         ; VA = random & D5
$764    $C8AA   RND      V8, #AA         ; V8 = random & AA
$766    $CD45   RND      VD, #45         ; VD = random & 45
$768    $7233   ADD      V2, #33         ; Add 51 to V2
$76A    $E831   UNKNOWN  $E831           ; Unknown Exxx instruction
$76C    $CD42   RND      VD, #42         ; VD = random & 42
$76E    $DB61   DRW      VB, V6, #1      ; Draw 1-byte sprite at VB, V6
$770    $E1F7   UNKNOWN  $E1F7           ; Unknown Exxx instruction
$772    $6C80   LD       VC, #80         ; Load 128 into VC
$774    $92C9   UNKNOWN  $92C9           ; Unknown 9xxx instruction
$776    $022C   SYS      $22C            ; System call to 22C
$778    $5E58   UNKNOWN  $5E58           ; Unknown 5xxx instruction
$77A    $D386   DRW      V3, V8, #6      ; Draw 6-byte sprite at V3, V8
$77C    $7733   ADD      V7, #33         ; Add 51 to V7
$77E    $BE5B   JP       V0, $E5B        ; Jump to V0 + E5B
$780    $F85D   UNKNOWN  F85D            ; Unknown Fxxx instruction
$782    $712A   ADD      V1, #2A         ; Add 42 to V1
$784    $1BFD   JP       $BFD            ; Jump to BFD
$786    $E904   UNKNOWN  $E904           ; Unknown Exxx instruction
$788    $FCA5   UNKNOWN  FCA5            ; Unknown Fxxx instruction
$78A    $E6CA   UNKNOWN  $E6CA           ; Unknown Exxx instruction
$78C    $8096   SHR      V0              ; V0 >>= 1, VF = LSB
$78E    $FE38   UNKNOWN  FE38            ; Unknown Fxxx instruction
$790    $36AE   SE       V6, #AE         ; Skip if V6 == 174
$792    $37CE   SE       V7, #CE         ; Skip if V7 == 206
$794    $5668   UNKNOWN  $5668           ; Unknown 5xxx instruction
$796    $3FB1   SE       VF, #B1         ; Skip if VF == 177
$798    $0862   SYS      $862            ; System call to 862
$79A    $4CB7   SNE      VC, #B7         ; Skip if VC != 183
$79C    $0315   SYS      $315            ; System call to 315
$79E    $7310   ADD      V3, #10         ; Add 16 to V3
$7A0    $4A5B   SNE      VA, #5B         ; Skip if VA != 91
$7A2    $B815   JP       V0, $815        ; Jump to V0 + 815
$7A4    $FA9B   UNKNOWN  FA9B            ; Unknown Fxxx instruction
$7A6    $4AF8   SNE      VA, #F8         ; Skip if VA != 248
$7A8    $EF03   UNKNOWN  $EF03           ; Unknown Exxx instruction
$7AA    $3B72   SE       VB, #72         ; Skip if VB == 114
$7AC    $FD84   UNKNOWN  FD84            ; Unknown Fxxx instruction
$7AE    $4739   SNE      V7, #39         ; Skip if V7 != 57
$7B0    $1158   JP       $158            ; Jump to 158
$7B2    $73B5   ADD      V3, #B5         ; Add 181 to V3
$7B4    $276E   CALL     $76E            ; Call subroutine at 76E
$7B6    $BEC9   JP       V0, $EC9        ; Jump to V0 + EC9
$7B8    $B962   JP       V0, $962        ; Jump to V0 + 962
$7BA    $3585   SE       V5, #85         ; Skip if V5 == 133
$7BC    $C133   RND      V1, #33         ; V1 = random & 33
$7BE    $5E42   UNKNOWN  $5E42           ; Unknown 5xxx instruction
$7C0    $D0E3   DRW      V0, VE, #3      ; Draw 3-byte sprite at V0, VE
$7C2    $CCC4   RND      VC, #C4         ; VC = random & C4
$7C4    $4CCF   SNE      VC, #CF         ; Skip if VC != 207
$7C6    $1420   JP       $420            ; Jump to 420
$7C8    $8DFC   UNKNOWN  8DFC            ; Unknown 8xxx instruction
$7CA    $80AA   UNKNOWN  80AA            ; Unknown 8xxx instruction
$7CC    $5B22   UNKNOWN  $5B22           ; Unknown 5xxx instruction
$7CE    $B10D   JP       V0, $10D        ; Jump to V0 + 10D
$7D0    $8979   UNKNOWN  8979            ; Unknown 8xxx instruction
$7D2    $A49A   LD       I, $49A         ; Load 49A into I
$7D4    $7E4B   ADD      VE, #4B         ; Add 75 to VE
$7D6    $6BFA   LD       VB, #FA         ; Load 250 into VB
$7D8    $F241   UNKNOWN  F241            ; Unknown Fxxx instruction
$7DA    $4BC2   SNE      VB, #C2         ; Skip if VB != 194
$7DC    $7A40   ADD      VA, #40         ; Add 64 to VA
$7DE    $32FB   SE       V2, #FB         ; Skip if V2 == 251
$7E0    $C43D   RND      V4, #3D         ; V4 = random & 3D
$7E2    $051A   SYS      $51A            ; System call to 51A
$7E4    $13D3   JP       $3D3            ; Jump to 3D3
$7E6    $B2B0   JP       V0, $2B0        ; Jump to V0 + 2B0
$7E8    $017E   SYS      $17E            ; System call to 17E
$7EA    $2DDE   CALL     $DDE            ; Call subroutine at DDE
$7EC    $7C20   ADD      VC, #20         ; Add 32 to VC
$7EE    $4D0C   SNE      VD, #0C         ; Skip if VD != 12
$7F0    $624C   LD       V2, #4C         ; Load 76 into V2
$7F2    $B10C   JP       V0, $10C        ; Jump to V0 + 10C
$7F4    $2110   CALL     $110            ; Call subroutine at 110
$7F6    $370F   SE       V7, #0F         ; Skip if V7 == 15
$7F8    $0285   SYS      $285            ; System call to 285
$7FA    $DB0B   DRW      VB, V0, #B      ; Draw 11-byte sprite at VB, V0
$7FC    $0224   SYS      $224            ; System call to 224
$7FE    $86F6   SHR      V6              ; V6 >>= 1, VF = LSB
$800    $36A6   SE       V6, #A6         ; Skip if V6 == 166
$802    $DA8A   DRW      VA, V8, #A      ; Draw 10-byte sprite at VA, V8
$804    $6020   LD       V0, #20         ; Load 32 into V0
$806    $E225   UNKNOWN  $E225           ; Unknown Exxx instruction
$808    $F2B4   UNKNOWN  F2B4            ; Unknown Fxxx instruction
$80A    $79CA   ADD      V9, #CA         ; Add 202 to V9
$80C    $BFEF   JP       V0, $FEF        ; Jump to V0 + FEF
$80E    $4766   SNE      V7, #66         ; Skip if V7 != 102
$810    $1FF6   JP       $FF6            ; Jump to FF6
$812    $A2B2   LD       I, $2B2         ; Load 2B2 into I
$814    $C1C1   RND      V1, #C1         ; V1 = random & C1
$816    $A9BF   LD       I, $9BF         ; Load 9BF into I
$818    $0341   SYS      $341            ; System call to 341
$81A    $937C   UNKNOWN  $937C           ; Unknown 9xxx instruction
$81C    $B6C2   JP       V0, $6C2        ; Jump to V0 + 6C2
$81E    $5A0A   UNKNOWN  $5A0A           ; Unknown 5xxx instruction
$820    $229E   CALL     $29E            ; Call subroutine at 29E
$822    $AE78   LD       I, $E78         ; Load E78 into I
$824    $A3FA   LD       I, $3FA         ; Load 3FA into I
$826    $A372   LD       I, $372         ; Load 372 into I
$828    $B6A8   JP       V0, $6A8        ; Jump to V0 + 6A8
$82A    $01DB   SYS      $1DB            ; System call to 1DB
$82C    $E4AF   UNKNOWN  $E4AF           ; Unknown Exxx instruction
$82E    $F7D6   UNKNOWN  F7D6            ; Unknown Fxxx instruction
$830    $F32D   UNKNOWN  F32D            ; Unknown Fxxx instruction
$832    $9405   UNKNOWN  $9405           ; Unknown 9xxx instruction
$834    $5063   UNKNOWN  $5063           ; Unknown 5xxx instruction
$836    $0F9E   SYS      $F9E            ; System call to F9E
$838    $9B69   UNKNOWN  $9B69           ; Unknown 9xxx instruction
$83A    $7A9F   ADD      VA, #9F         ; Add 159 to VA
$83C    $5A8A   UNKNOWN  $5A8A           ; Unknown 5xxx instruction
$83E    $331E   SE       V3, #1E         ; Skip if V3 == 30
$840    $E521   UNKNOWN  $E521           ; Unknown Exxx instruction
$842    $49B0   SNE      V9, #B0         ; Skip if V9 != 176
$844    $19B7   JP       $9B7            ; Jump to 9B7
$846    $CD24   RND      VD, #24         ; VD = random & 24
$848    $73F4   ADD      V3, #F4         ; Add 244 to V3
$84A    $8E78   UNKNOWN  8E78            ; Unknown 8xxx instruction
$84C    $A708   LD       I, $708         ; Load 708 into I
$84E    $E7B3   UNKNOWN  $E7B3           ; Unknown Exxx instruction
$850    $17DE   JP       $7DE            ; Jump to 7DE
$852    $626A   LD       V2, #6A         ; Load 106 into V2
$854    $5B5E   UNKNOWN  $5B5E           ; Unknown 5xxx instruction
$856    $D07F   DRW      V0, V7, #F      ; Draw 15-byte sprite at V0, V7
$858    $2B12   CALL     $B12            ; Call subroutine at B12
$85A    $A621   LD       I, $621         ; Load 621 into I
$85C    $22AC   CALL     $2AC            ; Call subroutine at 2AC
$85E    $A97F   LD       I, $97F         ; Load 97F into I
$860    $7712   ADD      V7, #12         ; Add 18 to V7
$862    $37E2   SE       V7, #E2         ; Skip if V7 == 226
$864    $B06F   JP       V0, $06F        ; Jump to V0 + 06F
$866    $331E   SE       V3, #1E         ; Skip if V3 == 30
$868    $2D4E   CALL     $D4E            ; Call subroutine at D4E
$86A    $74BA   ADD      V4, #BA         ; Add 186 to V4
$86C    $2212   CALL     $212            ; Call subroutine at 212
$86E    $2B1F   CALL     $B1F            ; Call subroutine at B1F
$870    $3979   SE       V9, #79         ; Skip if V9 == 121
$872    $478D   SNE      V7, #8D         ; Skip if V7 != 141
$874    $7157   ADD      V1, #57         ; Add 87 to V1
$876    $B2CA   JP       V0, $2CA        ; Jump to V0 + 2CA
$878    $01D2   SYS      $1D2            ; System call to 1D2
$87A    $C6E6   RND      V6, #E6         ; V6 = random & E6
$87C    $6005   LD       V0, #05         ; Load 5 into V0
$87E    $5081   UNKNOWN  $5081           ; Unknown 5xxx instruction
$880    $6321   LD       V3, #21         ; Load 33 into V3
$882    $3648   SE       V6, #48         ; Skip if V6 == 72
$884    $740A   ADD      V4, #0A         ; Add 10 to V4
$886    $7005   ADD      V0, #05         ; Add 5 to V0
$888    $BD3A   JP       V0, $D3A        ; Jump to V0 + D3A
$88A    $073B   SYS      $73B            ; System call to 73B
$88C    $C865   RND      V8, #65         ; V8 = random & 65
$88E    $45E3   SNE      V5, #E3         ; Skip if V5 != 227
$890    $FACB   UNKNOWN  FACB            ; Unknown Fxxx instruction
$892    $C918   RND      V9, #18         ; V9 = random & 18
$894    $A44A   LD       I, $44A         ; Load 44A into I
$896    $AFB4   LD       I, $FB4         ; Load FB4 into I
$898    $0A63   SYS      $A63            ; System call to A63
$89A    $6C75   LD       VC, #75         ; Load 117 into VC
$89C    $85E4   ADD      V5, VE          ; V5 += VE, VF = carry
$89E    $B1F7   JP       V0, $1F7        ; Jump to V0 + 1F7
$8A0    $7067   ADD      V0, #67         ; Add 103 to V0
$8A2    $BE0F   JP       V0, $E0F        ; Jump to V0 + E0F
$8A4    $58E8   UNKNOWN  $58E8           ; Unknown 5xxx instruction
$8A6    $2C5B   CALL     $C5B            ; Call subroutine at C5B
$8A8    $8B69   UNKNOWN  8B69            ; Unknown 8xxx instruction
$8AA    $F2D1   UNKNOWN  F2D1            ; Unknown Fxxx instruction
$8AC    $27E3   CALL     $7E3            ; Call subroutine at 7E3
$8AE    $A846   LD       I, $846         ; Load 846 into I
$8B0    $F382   UNKNOWN  F382            ; Unknown Fxxx instruction
$8B2    $4840   SNE      V8, #40         ; Skip if V8 != 64
$8B4    $72F7   ADD      V2, #F7         ; Add 247 to V2
$8B6    $CC36   RND      VC, #36         ; VC = random & 36
$8B8    $ECE9   UNKNOWN  $ECE9           ; Unknown Exxx instruction
$8BA    $8104   ADD      V1, V0          ; V1 += V0, VF = carry
$8BC    $0EFF   SYS      $EFF            ; System call to EFF
$8BE    $FE1D   UNKNOWN  FE1D            ; Unknown Fxxx instruction
$8C0    $B5DB   JP       V0, $5DB        ; Jump to V0 + 5DB
$8C2    $3643   SE       V6, #43         ; Skip if V6 == 67
$8C4    $1110   JP       $110            ; Jump to 110
$8C6    $3190   SE       V1, #90         ; Skip if V1 == 144
$8C8    $6BAC   LD       VB, #AC         ; Load 172 into VB
$8CA    $BCB3   JP       V0, $CB3        ; Jump to V0 + CB3
$8CC    $125F   JP       $25F            ; Jump to 25F
$8CE    $A609   LD       I, $609         ; Load 609 into I
$8D0    $E74A   UNKNOWN  $E74A           ; Unknown Exxx instruction
$8D2    $1F27   JP       $F27            ; Jump to F27
$8D4    $BE80   JP       V0, $E80        ; Jump to V0 + E80
$8D6    $77AD   ADD      V7, #AD         ; Add 173 to V7
$8D8    $CA1E   RND      VA, #1E         ; VA = random & 1E
$8DA    $82AA   UNKNOWN  82AA            ; Unknown 8xxx instruction
$8DC    $BC70   JP       V0, $C70        ; Jump to V0 + C70
$8DE    $E4CF   UNKNOWN  $E4CF           ; Unknown Exxx instruction
$8E0    $002B   SYS      $02B            ; System call to 02B
$8E2    $47E5   SNE      V7, #E5         ; Skip if V7 != 229
$8E4    $9270   SNE      V2, V7          ; Skip if V2 != V7
$8E6    $BCE6   JP       V0, $CE6        ; Jump to V0 + CE6
$8E8    $1A13   JP       $A13            ; Jump to A13
$8EA    $895C   UNKNOWN  895C            ; Unknown 8xxx instruction
$8EC    $44D8   SNE      V4, #D8         ; Skip if V4 != 216
$8EE    $653A   LD       V5, #3A         ; Load 58 into V5
$8F0    $5778   UNKNOWN  $5778           ; Unknown 5xxx instruction
$8F2    $DFED   DRW      VF, VE, #D      ; Draw 13-byte sprite at VF, VE
$8F4    $EF5C   UNKNOWN  $EF5C           ; Unknown Exxx instruction
$8F6    $538F   UNKNOWN  $538F           ; Unknown 5xxx instruction
$8F8    $A28E   LD       I, $28E         ; Load 28E into I
$8FA    $0FE8   SYS      $FE8            ; System call to FE8
$8FC    $06EA   SYS      $6EA            ; System call to 6EA
$8FE    $1563   JP       $563            ; Jump to 563
$900    $5068   UNKNOWN  $5068           ; Unknown 5xxx instruction
$902    $745C   ADD      V4, #5C         ; Add 92 to V4
$904    $3478   SE       V4, #78         ; Skip if V4 == 120
$906    $9F9C   UNKNOWN  $9F9C           ; Unknown 9xxx instruction
$908    $8EE8   UNKNOWN  8EE8            ; Unknown 8xxx instruction
$90A    $B23B   JP       V0, $23B        ; Jump to V0 + 23B
$90C    $AD91   LD       I, $D91         ; Load D91 into I
$90E    $DB17   DRW      VB, V1, #7      ; Draw 7-byte sprite at VB, V1
$910    $36E2   SE       V6, #E2         ; Skip if V6 == 226
$912    $98CA   UNKNOWN  $98CA           ; Unknown 9xxx instruction
$914    $7D4C   ADD      VD, #4C         ; Add 76 to VD
$916    $E31A   UNKNOWN  $E31A           ; Unknown Exxx instruction
$918    $307B   SE       V0, #7B         ; Skip if V0 == 123
$91A    $7548   ADD      V5, #48         ; Add 72 to V5
$91C    $105D   JP       $05D            ; Jump to 05D
$91E    $B5E2   JP       V0, $5E2        ; Jump to V0 + 5E2
$920    $0380   SYS      $380            ; System call to 380
$922    $3EC0   SE       VE, #C0         ; Skip if VE == 192
$924    $4AEB   SNE      VA, #EB         ; Skip if VA != 235
$926    $62DA   LD       V2, #DA         ; Load 218 into V2
$928    $E6F0   UNKNOWN  $E6F0           ; Unknown Exxx instruction
$92A    $2B76   CALL     $B76            ; Call subroutine at B76
$92C    $138B   JP       $38B            ; Jump to 38B
$92E    $B795   JP       V0, $795        ; Jump to V0 + 795
$930    $5C9E   UNKNOWN  $5C9E           ; Unknown 5xxx instruction
$932    $21B0   CALL     $1B0            ; Call subroutine at 1B0
$934    $DE19   DRW      VE, V1, #9      ; Draw 9-byte sprite at VE, V1
$936    $06E0   SYS      $6E0            ; System call to 6E0
$938    $4E27   SNE      VE, #27         ; Skip if VE != 39
$93A    $9B7A   UNKNOWN  $9B7A           ; Unknown 9xxx instruction
$93C    $FB8B   UNKNOWN  FB8B            ; Unknown Fxxx instruction
$93E    $609B   LD       V0, #9B         ; Load 155 into V0
$940    $26C4   CALL     $6C4            ; Call subroutine at 6C4
$942    $10C2   JP       $0C2            ; Jump to 0C2
$944    $1DDA   JP       $DDA            ; Jump to DDA
$946    $7218   ADD      V2, #18         ; Add 24 to V2
$948    $9CC0   SNE      VC, VC          ; Skip if VC != VC
$94A    $8B7E   SHL      VB              ; VB <<= 1, VF = MSB
$94C    $DACC   DRW      VA, VC, #C      ; Draw 12-byte sprite at VA, VC
$94E    $5EEB   UNKNOWN  $5EEB           ; Unknown 5xxx instruction
$950    $E137   UNKNOWN  $E137           ; Unknown Exxx instruction
$952    $33D5   SE       V3, #D5         ; Skip if V3 == 213
$954    $8AB0   LD       VA, VB          ; VA = VB
$956    $04DA   SYS      $4DA            ; System call to 4DA
$958    $7ABC   ADD      VA, #BC         ; Add 188 to VA
$95A    $5ADD   UNKNOWN  $5ADD           ; Unknown 5xxx instruction
$95C    $A079   LD       I, $079         ; Load 079 into I
$95E    $36F7   SE       V6, #F7         ; Skip if V6 == 247
$960    $40B4   SNE      V0, #B4         ; Skip if V0 != 180
$962    $5F9E   UNKNOWN  $5F9E           ; Unknown 5xxx instruction
$964    $ED93   UNKNOWN  $ED93           ; Unknown Exxx instruction
$966    $BCBB   JP       V0, $CBB        ; Jump to V0 + CBB
$968    $5A07   UNKNOWN  $5A07           ; Unknown 5xxx instruction
$96A    $AC13   LD       I, $C13         ; Load C13 into I
$96C    $132E   JP       $32E            ; Jump to 32E
$96E    $A66E   LD       I, $66E         ; Load 66E into I
$970    $D10C   DRW      V1, V0, #C      ; Draw 12-byte sprite at V1, V0
$972    $1862   JP       $862            ; Jump to 862
$974    $A8AA   LD       I, $8AA         ; Load 8AA into I
$976    $0D5B   SYS      $D5B            ; System call to D5B
$978    $A6E2   LD       I, $6E2         ; Load 6E2 into I
$97A    $9062   UNKNOWN  $9062           ; Unknown 9xxx instruction
$97C    $C7EA   RND      V7, #EA         ; V7 = random & EA
$97E    $0916   SYS      $916            ; System call to 916
$980    $590A   UNKNOWN  $590A           ; Unknown 5xxx instruction
$982    $F869   UNKNOWN  F869            ; Unknown Fxxx instruction
$984    $22B7   CALL     $2B7            ; Call subroutine at 2B7
$986    $D065   DRW      V0, V6, #5      ; Draw 5-byte sprite at V0, V6
$988    $1438   JP       $438            ; Jump to 438
$98A    $EDBC   UNKNOWN  $EDBC           ; Unknown Exxx instruction
$98C    $5A42   UNKNOWN  $5A42           ; Unknown 5xxx instruction
$98E    $50B6   UNKNOWN  $50B6           ; Unknown 5xxx instruction
$990    $EDCF   UNKNOWN  $EDCF           ; Unknown Exxx instruction
$992    $10D7   JP       $0D7            ; Jump to 0D7
$994    $E21F   UNKNOWN  $E21F           ; Unknown Exxx instruction
$996    $A853   LD       I, $853         ; Load 853 into I
$998    $89C9   UNKNOWN  89C9            ; Unknown 8xxx instruction
$99A    $2660   CALL     $660            ; Call subroutine at 660
$99C    $BFD5   JP       V0, $FD5        ; Jump to V0 + FD5
$99E    $BC3A   JP       V0, $C3A        ; Jump to V0 + C3A
$9A0    $C97B   RND      V9, #7B         ; V9 = random & 7B
$9A2    $B140   JP       V0, $140        ; Jump to V0 + 140
$9A4    $325E   SE       V2, #5E         ; Skip if V2 == 94
$9A6    $581E   UNKNOWN  $581E           ; Unknown 5xxx instruction
$9A8    $4032   SNE      V0, #32         ; Skip if V0 != 50
$9AA    $C51E   RND      V5, #1E         ; V5 = random & 1E
$9AC    $F03B   UNKNOWN  F03B            ; Unknown Fxxx instruction
$9AE    $32AA   SE       V2, #AA         ; Skip if V2 == 170
$9B0    $B8E6   JP       V0, $8E6        ; Jump to V0 + 8E6
$9B2    $1097   JP       $097            ; Jump to 097
$9B4    $1189   JP       $189            ; Jump to 189
$9B6    $6A33   LD       VA, #33         ; Load 51 into VA
$9B8    $8AC9   UNKNOWN  8AC9            ; Unknown 8xxx instruction
$9BA    $BA51   JP       V0, $A51        ; Jump to V0 + A51
$9BC    $C848   RND      V8, #48         ; V8 = random & 48
$9BE    $8223   XOR      V2, V2          ; V2 ^= V2
$9C0    $6115   LD       V1, #15         ; Load 21 into V1
$9C2    $F7AF   UNKNOWN  F7AF            ; Unknown Fxxx instruction
$9C4    $2071   CALL     $071            ; Call subroutine at 071
$9C6    $D59A   DRW      V5, V9, #A      ; Draw 10-byte sprite at V5, V9
$9C8    $0E38   SYS      $E38            ; System call to E38
$9CA    $55AF   UNKNOWN  $55AF           ; Unknown 5xxx instruction
$9CC    $EE87   UNKNOWN  $EE87           ; Unknown Exxx instruction
$9CE    $DB3F   DRW      VB, V3, #F      ; Draw 15-byte sprite at VB, V3
$9D0    $740F   ADD      V4, #0F         ; Add 15 to V4
$9D2    $23CE   CALL     $3CE            ; Call subroutine at 3CE
$9D4    $FE85   UNKNOWN  FE85            ; Unknown Fxxx instruction
$9D6    $7430   ADD      V4, #30         ; Add 48 to V4
$9D8    $1BF9   JP       $BF9            ; Jump to BF9
$9DA    $73DD   ADD      V3, #DD         ; Add 221 to V3
$9DC    $FFC0   UNKNOWN  FFC0            ; Unknown Fxxx instruction
$9DE    $3112   SE       V1, #12         ; Skip if V1 == 18
$9E0    $E7C1   UNKNOWN  $E7C1           ; Unknown Exxx instruction
$9E2    $F47D   UNKNOWN  F47D            ; Unknown Fxxx instruction
$9E4    $1AA4   JP       $AA4            ; Jump to AA4
$9E6    $D125   DRW      V1, V2, #5      ; Draw 5-byte sprite at V1, V2
$9E8    $DFE0   DRW      VF, VE, #0      ; Draw 0-byte sprite at VF, VE
$9EA    $1639   JP       $639            ; Jump to 639
$9EC    $A6F4   LD       I, $6F4         ; Load 6F4 into I
$9EE    $65B4   LD       V5, #B4         ; Load 180 into V5
$9F0    $474B   SNE      V7, #4B         ; Skip if V7 != 75
$9F2    $53BC   UNKNOWN  $53BC           ; Unknown 5xxx instruction
$9F4    $D22B   DRW      V2, V2, #B      ; Draw 11-byte sprite at V2, V2
$9F6    $4142   SNE      V1, #42         ; Skip if V1 != 66
$9F8    $561B   UNKNOWN  $561B           ; Unknown 5xxx instruction
$9FA    $36F8   SE       V6, #F8         ; Skip if V6 == 248
$9FC    $CD2D   RND      VD, #2D         ; VD = random & 2D
$9FE    $0A64   SYS      $A64            ; System call to A64
$A00    $B6C9   JP       V0, $6C9        ; Jump to V0 + 6C9
$A02    $C360   RND      V3, #60         ; V3 = random & 60
$A04    $A4C1   LD       I, $4C1         ; Load 4C1 into I
$A06    $E3FC   UNKNOWN  $E3FC           ; Unknown Exxx instruction
$A08    $C3A2   RND      V3, #A2         ; V3 = random & A2
$A0A    $2A48   CALL     $A48            ; Call subroutine at A48
$A0C    $99E2   UNKNOWN  $99E2           ; Unknown 9xxx instruction
$A0E    $D495   DRW      V4, V9, #5      ; Draw 5-byte sprite at V4, V9
$A10    $78C4   ADD      V8, #C4         ; Add 196 to V8
$A12    $A610   LD       I, $610         ; Load 610 into I
$A14    $65D5   LD       V5, #D5         ; Load 213 into V5
$A16    $18AB   JP       $8AB            ; Jump to 8AB
$A18    $42DA   SNE      V2, #DA         ; Skip if V2 != 218
$A1A    $D55B   DRW      V5, V5, #B      ; Draw 11-byte sprite at V5, V5
$A1C    $17D2   JP       $7D2            ; Jump to 7D2
$A1E    $A7F8   LD       I, $7F8         ; Load 7F8 into I
$A20    $FE23   UNKNOWN  FE23            ; Unknown Fxxx instruction
$A22    $D529   DRW      V5, V2, #9      ; Draw 9-byte sprite at V5, V2
$A24    $64B2   LD       V4, #B2         ; Load 178 into V4
$A26    $C2CC   RND      V2, #CC         ; V2 = random & CC
$A28    $DC8B   DRW      VC, V8, #B      ; Draw 11-byte sprite at VC, V8
$A2A    $5E5D   UNKNOWN  $5E5D           ; Unknown 5xxx instruction
$A2C    $BC47   JP       V0, $C47        ; Jump to V0 + C47
$A2E    $DF93   DRW      VF, V9, #3      ; Draw 3-byte sprite at VF, V9
$A30    $9C5B   UNKNOWN  $9C5B           ; Unknown 9xxx instruction
$A32    $4263   SNE      V2, #63         ; Skip if V2 != 99
$A34    $355B   SE       V5, #5B         ; Skip if V5 == 91
$A36    $E535   UNKNOWN  $E535           ; Unknown Exxx instruction
$A38    $6099   LD       V0, #99         ; Load 153 into V0
$A3A    $2A5A   CALL     $A5A            ; Call subroutine at A5A
$A3C    $74BA   ADD      V4, #BA         ; Add 186 to V4
$A3E    $B374   JP       V0, $374        ; Jump to V0 + 374
$A40    $77C0   ADD      V7, #C0         ; Add 192 to V7
$A42    $A048   LD       I, $048         ; Load 048 into I
$A44    $CAB7   RND      VA, #B7         ; VA = random & B7
$A46    $6D6E   LD       VD, #6E         ; Load 110 into VD
$A48    $C310   RND      V3, #10         ; V3 = random & 10
$A4A    $4544   SNE      V5, #44         ; Skip if V5 != 68
$A4C    $B968   JP       V0, $968        ; Jump to V0 + 968
$A4E    $A491   LD       I, $491         ; Load 491 into I
$A50    $362F   SE       V6, #2F         ; Skip if V6 == 47
$A52    $AF20   LD       I, $F20         ; Load F20 into I
$A54    $43A7   SNE      V3, #A7         ; Skip if V3 != 167
$A56    $74A0   ADD      V4, #A0         ; Add 160 to V4
$A58    $FEA6   UNKNOWN  FEA6            ; Unknown Fxxx instruction
$A5A    $0C50   SYS      $C50            ; System call to C50
$A5C    $3BAC   SE       VB, #AC         ; Skip if VB == 172
$A5E    $0707   SYS      $707            ; System call to 707
$A60    $69D5   LD       V9, #D5         ; Load 213 into V9
$A62    $1C7A   JP       $C7A            ; Jump to C7A
$A64    $30E2   SE       V0, #E2         ; Skip if V0 == 226
$A66    $CDC8   RND      VD, #C8         ; VD = random & C8
$A68    $F140   UNKNOWN  F140            ; Unknown Fxxx instruction
$A6A    $2318   CALL     $318            ; Call subroutine at 318
$A6C    $2A17   CALL     $A17            ; Call subroutine at A17
$A6E    $7709   ADD      V7, #09         ; Add 9 to V7
$A70    $96A7   UNKNOWN  $96A7           ; Unknown 9xxx instruction
$A72    $1091   JP       $091            ; Jump to 091
$A74    $0F9D   SYS      $F9D            ; System call to F9D
$A76    $C658   RND      V6, #58         ; V6 = random & 58
$A78    $D9C6   DRW      V9, VC, #6      ; Draw 6-byte sprite at V9, VC
$A7A    $EA05   UNKNOWN  $EA05           ; Unknown Exxx instruction
$A7C    $BF23   JP       V0, $F23        ; Jump to V0 + F23
$A7E    $BFA0   JP       V0, $FA0        ; Jump to V0 + FA0
$A80    $2C8E   CALL     $C8E            ; Call subroutine at C8E
$A82    $CCD6   RND      VC, #D6         ; VC = random & D6
$A84    $CC2F   RND      VC, #2F         ; VC = random & 2F
$A86    $3558   SE       V5, #58         ; Skip if V5 == 88
$A88    $FFC2   UNKNOWN  FFC2            ; Unknown Fxxx instruction
$A8A    $B19A   JP       V0, $19A        ; Jump to V0 + 19A
$A8C    $AAB1   LD       I, $AB1         ; Load AB1 into I
$A8E    $10DC   JP       $0DC            ; Jump to 0DC
$A90    $2C02   CALL     $C02            ; Call subroutine at C02
$A92    $F69F   UNKNOWN  F69F            ; Unknown Fxxx instruction
$A94    $2A9B   CALL     $A9B            ; Call subroutine at A9B
$A96    $DA13   DRW      VA, V1, #3      ; Draw 3-byte sprite at VA, V1
$A98    $7B5C   ADD      VB, #5C         ; Add 92 to VB
$A9A    $0AE4   SYS      $AE4            ; System call to AE4
$A9C    $D785   DRW      V7, V8, #5      ; Draw 5-byte sprite at V7, V8
$A9E    $D7F6   DRW      V7, VF, #6      ; Draw 6-byte sprite at V7, VF
$AA0    $BD8A   JP       V0, $D8A        ; Jump to V0 + D8A
$AA2    $FD9C   UNKNOWN  FD9C            ; Unknown Fxxx instruction
$AA4    $B2CF   JP       V0, $2CF        ; Jump to V0 + 2CF
$AA6    $967B   UNKNOWN  $967B           ; Unknown 9xxx instruction
$AA8    $D697   DRW      V6, V9, #7      ; Draw 7-byte sprite at V6, V9
$AAA    $A254   LD       I, $254         ; Load 254 into I
$AAC    $C928   RND      V9, #28         ; V9 = random & 28
$AAE    $52B7   UNKNOWN  $52B7           ; Unknown 5xxx instruction
$AB0    $B8F2   JP       V0, $8F2        ; Jump to V0 + 8F2
$AB2    $5FC8   UNKNOWN  $5FC8           ; Unknown 5xxx instruction
$AB4    $E4CB   UNKNOWN  $E4CB           ; Unknown Exxx instruction
$AB6    $E31F   UNKNOWN  $E31F           ; Unknown Exxx instruction
$AB8    $DAB9   DRW      VA, VB, #9      ; Draw 9-byte sprite at VA, VB
$ABA    $762A   ADD      V6, #2A         ; Add 42 to V6
$ABC    $89CE   SHL      V9              ; V9 <<= 1, VF = MSB
$ABE    $39EB   SE       V9, #EB         ; Skip if V9 == 235
$AC0    $D1B4   DRW      V1, VB, #4      ; Draw 4-byte sprite at V1, VB
$AC2    $B052   JP       V0, $052        ; Jump to V0 + 052
$AC4    $A4FA   LD       I, $4FA         ; Load 4FA into I
$AC6    $8748   UNKNOWN  8748            ; Unknown 8xxx instruction
$AC8    $29ED   CALL     $9ED            ; Call subroutine at 9ED
$ACA    $4A2F   SNE      VA, #2F         ; Skip if VA != 47
$ACC    $C07F   RND      V0, #7F         ; V0 = random & 7F
$ACE    $407D   SNE      V0, #7D         ; Skip if V0 != 125
$AD0    $C5DE   RND      V5, #DE         ; V5 = random & DE
$AD2    $3AB3   SE       VA, #B3         ; Skip if VA == 179
$AD4    $6062   LD       V0, #62         ; Load 98 into V0
$AD6    $B7D1   JP       V0, $7D1        ; Jump to V0 + 7D1
$AD8    $815A   UNKNOWN  815A            ; Unknown 8xxx instruction
$ADA    $434D   SNE      V3, #4D         ; Skip if V3 != 77
$ADC    $E30A   UNKNOWN  $E30A           ; Unknown Exxx instruction
$ADE    $D56E   DRW      V5, V6, #E      ; Draw 14-byte sprite at V5, V6
$AE0    $6B15   LD       VB, #15         ; Load 21 into VB
$AE2    $962E   UNKNOWN  $962E           ; Unknown 9xxx instruction
$AE4    $AEAB   LD       I, $EAB         ; Load EAB into I
$AE6    $0C34   SYS      $C34            ; System call to C34
$AE8    $09C2   SYS      $9C2            ; System call to 9C2
$AEA    $9C58   UNKNOWN  $9C58           ; Unknown 9xxx instruction
$AEC    $0181   SYS      $181            ; System call to 181
$AEE    $6ECB   LD       VE, #CB         ; Load 203 into VE
$AF0    $AAC4   LD       I, $AC4         ; Load AC4 into I
$AF2    $E6EC   UNKNOWN  $E6EC           ; Unknown Exxx instruction
$AF4    $BBA7   JP       V0, $BA7        ; Jump to V0 + BA7
$AF6    $327A   SE       V2, #7A         ; Skip if V2 == 122
$AF8    $A263   LD       I, $263         ; Load 263 into I
$AFA    $5BA3   UNKNOWN  $5BA3           ; Unknown 5xxx instruction
$AFC    $87F3   XOR      V7, VF          ; V7 ^= VF
$AFE    $A9A1   LD       I, $9A1         ; Load 9A1 into I
$B00    $EC05   UNKNOWN  $EC05           ; Unknown Exxx instruction
$B02    $3EA9   SE       VE, #A9         ; Skip if VE == 169
$B04    $CE7A   RND      VE, #7A         ; VE = random & 7A
$B06    $7C2C   ADD      VC, #2C         ; Add 44 to VC
$B08    $BC64   JP       V0, $C64        ; Jump to V0 + C64
$B0A    $49D3   SNE      V9, #D3         ; Skip if V9 != 211
$B0C    $53BC   UNKNOWN  $53BC           ; Unknown 5xxx instruction
$B0E    $BA25   JP       V0, $A25        ; Jump to V0 + A25
$B10    $C416   RND      V4, #16         ; V4 = random & 16
$B12    $F3DD   UNKNOWN  F3DD            ; Unknown Fxxx instruction
$B14    $CC3B   RND      VC, #3B         ; VC = random & 3B
$B16    $B941   JP       V0, $941        ; Jump to V0 + 941
$B18    $802D   UNKNOWN  802D            ; Unknown 8xxx instruction
$B1A    $C947   RND      V9, #47         ; V9 = random & 47
$B1C    $FBBF   UNKNOWN  FBBF            ; Unknown Fxxx instruction
$B1E    $6B34   LD       VB, #34         ; Load 52 into VB
$B20    $7B8A   ADD      VB, #8A         ; Add 138 to VB
$B22    $26D4   CALL     $6D4            ; Call subroutine at 6D4
$B24    $6271   LD       V2, #71         ; Load 113 into V2
$B26    $B696   JP       V0, $696        ; Jump to V0 + 696
$B28    $58D3   UNKNOWN  $58D3           ; Unknown 5xxx instruction
$B2A    $9BFC   UNKNOWN  $9BFC           ; Unknown 9xxx instruction
$B2C    $AE55   LD       I, $E55         ; Load E55 into I
$B2E    $7A96   ADD      VA, #96         ; Add 150 to VA
$B30    $887F   UNKNOWN  887F            ; Unknown 8xxx instruction
$B32    $CAA7   RND      VA, #A7         ; VA = random & A7
$B34    $CF58   RND      VF, #58         ; VF = random & 58
$B36    $9E64   UNKNOWN  $9E64           ; Unknown 9xxx instruction
$B38    $7F1A   ADD      VF, #1A         ; Add 26 to VF
$B3A    $2658   CALL     $658            ; Call subroutine at 658
$B3C    $943C   UNKNOWN  $943C           ; Unknown 9xxx instruction
$B3E    $12B4   JP       $2B4            ; Jump to 2B4
$B40    $1B95   JP       $B95            ; Jump to B95
$B42    $0894   SYS      $894            ; System call to 894
$B44    $2D1D   CALL     $D1D            ; Call subroutine at D1D
$B46    $77EF   ADD      V7, #EF         ; Add 239 to V7
$B48    $8454   ADD      V4, V5          ; V4 += V5, VF = carry
$B4A    $36E5   SE       V6, #E5         ; Skip if V6 == 229
$B4C    $46AB   SNE      V6, #AB         ; Skip if V6 != 171
$B4E    $ECF4   UNKNOWN  $ECF4           ; Unknown Exxx instruction
$B50    $D3B0   DRW      V3, VB, #0      ; Draw 0-byte sprite at V3, VB
$B52    $C0D2   RND      V0, #D2         ; V0 = random & D2
$B54    $8786   SHR      V7              ; V7 >>= 1, VF = LSB
$B56    $9F57   UNKNOWN  $9F57           ; Unknown 9xxx instruction
$B58    $EB4C   UNKNOWN  $EB4C           ; Unknown Exxx instruction
$B5A    $6EFA   LD       VE, #FA         ; Load 250 into VE
$B5C    $783F   ADD      V8, #3F         ; Add 63 to V8
$B5E    $5A99   UNKNOWN  $5A99           ; Unknown 5xxx instruction
$B60    $985D   UNKNOWN  $985D           ; Unknown 9xxx instruction
$B62    $F6B1   UNKNOWN  F6B1            ; Unknown Fxxx instruction
$B64    $A19A   LD       I, $19A         ; Load 19A into I
$B66    $E55F   UNKNOWN  $E55F           ; Unknown Exxx instruction
$B68    $FAEA   UNKNOWN  FAEA            ; Unknown Fxxx instruction
$B6A    $7525   ADD      V5, #25         ; Add 37 to V5
$B6C    $5A1D   UNKNOWN  $5A1D           ; Unknown 5xxx instruction
$B6E    $0481   SYS      $481            ; System call to 481
$B70    $9645   UNKNOWN  $9645           ; Unknown 9xxx instruction
$B72    $6AA5   LD       VA, #A5         ; Load 165 into VA
$B74    $1ED1   JP       $ED1            ; Jump to ED1
$B76    $FC44   UNKNOWN  FC44            ; Unknown Fxxx instruction
$B78    $DFB6   DRW      VF, VB, #6      ; Draw 6-byte sprite at VF, VB
$B7A    $5F1C   UNKNOWN  $5F1C           ; Unknown 5xxx instruction
$B7C    $7895   ADD      V8, #95         ; Add 149 to V8
$B7E    $C1CD   RND      V1, #CD         ; V1 = random & CD
$B80    $054F   SYS      $54F            ; System call to 54F
$B82    $B96C   JP       V0, $96C        ; Jump to V0 + 96C
$B84    $C831   RND      V8, #31         ; V8 = random & 31
$B86    $5BF7   UNKNOWN  $5BF7           ; Unknown 5xxx instruction
$B88    $15EC   JP       $5EC            ; Jump to 5EC
$B8A    $8FA4   ADD      VF, VA          ; VF += VA, VF = carry
$B8C    $19EE   JP       $9EE            ; Jump to 9EE
$B8E    $7339   ADD      V3, #39         ; Add 57 to V3
$B90    $8CD2   AND      VC, VD          ; VC &= VD
$B92    $DE4A   DRW      VE, V4, #A      ; Draw 10-byte sprite at VE, V4
$B94    $C7A1   RND      V7, #A1         ; V7 = random & A1
$B96    $E353   UNKNOWN  $E353           ; Unknown Exxx instruction
$B98    $FDCE   UNKNOWN  FDCE            ; Unknown Fxxx instruction
$B9A    $DF74   DRW      VF, V7, #4      ; Draw 4-byte sprite at VF, V7
$B9C    $58E8   UNKNOWN  $58E8           ; Unknown 5xxx instruction
$B9E    $E99B   UNKNOWN  $E99B           ; Unknown Exxx instruction
$BA0    $D87C   DRW      V8, V7, #C      ; Draw 12-byte sprite at V8, V7
$BA2    $3567   SE       V5, #67         ; Skip if V5 == 103
$BA4    $80C8   UNKNOWN  80C8            ; Unknown 8xxx instruction
$BA6    $AE46   LD       I, $E46         ; Load E46 into I
$BA8    $A8DA   LD       I, $8DA         ; Load 8DA into I
$BAA    $A61C   LD       I, $61C         ; Load 61C into I
$BAC    $08DF   SYS      $8DF            ; System call to 8DF
$BAE    $2C1E   CALL     $C1E            ; Call subroutine at C1E
$BB0    $40C6   SNE      V0, #C6         ; Skip if V0 != 198
$BB2    $EF08   UNKNOWN  $EF08           ; Unknown Exxx instruction
$BB4    $B689   JP       V0, $689        ; Jump to V0 + 689
$BB6    $B40E   JP       V0, $40E        ; Jump to V0 + 40E
$BB8    $CAB9   RND      VA, #B9         ; VA = random & B9
$BBA    $6B40   LD       VB, #40         ; Load 64 into VB
$BBC    $45B4   SNE      V5, #B4         ; Skip if V5 != 180
$BBE    $AFC6   LD       I, $FC6         ; Load FC6 into I
$BC0    $8F3F   UNKNOWN  8F3F            ; Unknown 8xxx instruction
$BC2    $8375   SUB      V3, V7          ; V3 -= V7, VF = !borrow
$BC4    $9DE4   UNKNOWN  $9DE4           ; Unknown 9xxx instruction
$BC6    $751D   ADD      V5, #1D         ; Add 29 to V5
$BC8    $6411   LD       V4, #11         ; Load 17 into V4
$BCA    $01D3   SYS      $1D3            ; System call to 1D3
$BCC    $DC2C   DRW      VC, V2, #C      ; Draw 12-byte sprite at VC, V2
$BCE    $F27C   UNKNOWN  F27C            ; Unknown Fxxx instruction
$BD0    $F84B   UNKNOWN  F84B            ; Unknown Fxxx instruction
$BD2    $8E09   UNKNOWN  8E09            ; Unknown 8xxx instruction
$BD4    $B9FC   JP       V0, $9FC        ; Jump to V0 + 9FC
$BD6    $9EDD   UNKNOWN  $9EDD           ; Unknown 9xxx instruction
$BD8    $397E   SE       V9, #7E         ; Skip if V9 == 126
$BDA    $20E5   CALL     $0E5            ; Call subroutine at 0E5
$BDC    $D362   DRW      V3, V6, #2      ; Draw 2-byte sprite at V3, V6
$BDE    $D61A   DRW      V6, V1, #A      ; Draw 10-byte sprite at V6, V1
$BE0    $AD35   LD       I, $D35         ; Load D35 into I
$BE2    $48A3   SNE      V8, #A3         ; Skip if V8 != 163
$BE4    $6E71   LD       VE, #71         ; Load 113 into VE
$BE6    $CE71   RND      VE, #71         ; VE = random & 71
$BE8    $D1C0   DRW      V1, VC, #0      ; Draw 0-byte sprite at V1, VC
$BEA    $F09B   UNKNOWN  F09B            ; Unknown Fxxx instruction
$BEC    $9681   UNKNOWN  $9681           ; Unknown 9xxx instruction
$BEE    $AF1E   LD       I, $F1E         ; Load F1E into I
$BF0    $0985   SYS      $985            ; System call to 985
$BF2    $9950   SNE      V9, V5          ; Skip if V9 != V5
$BF4    $6ABD   LD       VA, #BD         ; Load 189 into VA
$BF6    $D1E4   DRW      V1, VE, #4      ; Draw 4-byte sprite at V1, VE
$BF8    $065C   SYS      $65C            ; System call to 65C
$BFA    $CC7A   RND      VC, #7A         ; VC = random & 7A
$BFC    $1DB7   JP       $DB7            ; Jump to DB7
$BFE    $9229   UNKNOWN  $9229           ; Unknown 9xxx instruction
$C00    $29F2   CALL     $9F2            ; Call subroutine at 9F2
$C02    $6244   LD       V2, #44         ; Load 68 into V2
$C04    $CF8A   RND      VF, #8A         ; VF = random & 8A
$C06    $A641   LD       I, $641         ; Load 641 into I
$C08    $4528   SNE      V5, #28         ; Skip if V5 != 40
$C0A    $897A   UNKNOWN  897A            ; Unknown 8xxx instruction
$C0C    $9C58   UNKNOWN  $9C58           ; Unknown 9xxx instruction
$C0E    $3AA2   SE       VA, #A2         ; Skip if VA == 162
$C10    $F055   LD       [I], V0         ; Store V0-V0 at I
$C12    $FF24   UNKNOWN  FF24            ; Unknown Fxxx instruction
$C14    $2A99   CALL     $A99            ; Call subroutine at A99
$C16    $3735   SE       V7, #35         ; Skip if V7 == 53
$C18    $1E2C   JP       $E2C            ; Jump to E2C
$C1A    $AB7A   LD       I, $B7A         ; Load B7A into I
$C1C    $4078   SNE      V0, #78         ; Skip if V0 != 120
$C1E    $5547   UNKNOWN  $5547           ; Unknown 5xxx instruction
$C20    $C26E   RND      V2, #6E         ; V2 = random & 6E
$C22    $DB4C   DRW      VB, V4, #C      ; Draw 12-byte sprite at VB, V4
$C24    $97DB   UNKNOWN  $97DB           ; Unknown 9xxx instruction
$C26    $63BA   LD       V3, #BA         ; Load 186 into V3
$C28    $A5AF   LD       I, $5AF         ; Load 5AF into I
$C2A    $3E2E   SE       VE, #2E         ; Skip if VE == 46
$C2C    $72BD   ADD      V2, #BD         ; Add 189 to V2
$C2E    $13C5   JP       $3C5            ; Jump to 3C5
$C30    $A82F   LD       I, $82F         ; Load 82F into I
$C32    $EE69   UNKNOWN  $EE69           ; Unknown Exxx instruction
$C34    $399E   SE       V9, #9E         ; Skip if V9 == 158
$C36    $D88F   DRW      V8, V8, #F      ; Draw 15-byte sprite at V8, V8
$C38    $A1B7   LD       I, $1B7         ; Load 1B7 into I
$C3A    $6008   LD       V0, #08         ; Load 8 into V0
$C3C    $6498   LD       V4, #98         ; Load 152 into V4
$C3E    $AB68   LD       I, $B68         ; Load B68 into I
$C40    $93B4   UNKNOWN  $93B4           ; Unknown 9xxx instruction
$C42    $C179   RND      V1, #79         ; V1 = random & 79
$C44    $43B1   SNE      V3, #B1         ; Skip if V3 != 177
$C46    $C337   RND      V3, #37         ; V3 = random & 37
$C48    $C74E   RND      V7, #4E         ; V7 = random & 4E
$C4A    $58AF   UNKNOWN  $58AF           ; Unknown 5xxx instruction
$C4C    $2692   CALL     $692            ; Call subroutine at 692
$C4E    $25D6   CALL     $5D6            ; Call subroutine at 5D6
$C50    $9CDC   UNKNOWN  $9CDC           ; Unknown 9xxx instruction
$C52    $D339   DRW      V3, V3, #9      ; Draw 9-byte sprite at V3, V3
$C54    $C425   RND      V4, #25         ; V4 = random & 25
$C56    $7B70   ADD      VB, #70         ; Add 112 to VB
$C58    $A7DC   LD       I, $7DC         ; Load 7DC into I
$C5A    $BE88   JP       V0, $E88        ; Jump to V0 + E88
$C5C    $4879   SNE      V8, #79         ; Skip if V8 != 121
$C5E    $80CB   UNKNOWN  80CB            ; Unknown 8xxx instruction
$C60    $3D46   SE       VD, #46         ; Skip if VD == 70
$C62    $DD4A   DRW      VD, V4, #A      ; Draw 10-byte sprite at VD, V4
$C64    $1D16   JP       $D16            ; Jump to D16
$C66    $FC2E   UNKNOWN  FC2E            ; Unknown Fxxx instruction
$C68    $07A5   SYS      $7A5            ; System call to 7A5
$C6A    $6EAC   LD       VE, #AC         ; Load 172 into VE
$C6C    $DFE6   DRW      VF, VE, #6      ; Draw 6-byte sprite at VF, VE
$C6E    $49BD   SNE      V9, #BD         ; Skip if V9 != 189
$C70    $AB90   LD       I, $B90         ; Load B90 into I
$C72    $35CD   SE       V5, #CD         ; Skip if V5 == 205
$C74    $4B5E   SNE      VB, #5E         ; Skip if VB != 94
$C76    $3B52   SE       VB, #52         ; Skip if VB == 82
$C78    $96C6   UNKNOWN  $96C6           ; Unknown 9xxx instruction
$C7A    $D9C7   DRW      V9, VC, #7      ; Draw 7-byte sprite at V9, VC
$C7C    $45D0   SNE      V5, #D0         ; Skip if V5 != 208
$C7E    $DEA7   DRW      VE, VA, #7      ; Draw 7-byte sprite at VE, VA
$C80    $DDE7   DRW      VD, VE, #7      ; Draw 7-byte sprite at VD, VE
$C82    $C032   RND      V0, #32         ; V0 = random & 32
$C84    $BE5A   JP       V0, $E5A        ; Jump to V0 + E5A
$C86    $A25B   LD       I, $25B         ; Load 25B into I
$C88    $3549   SE       V5, #49         ; Skip if V5 == 73
$C8A    $9D08   UNKNOWN  $9D08           ; Unknown 9xxx instruction
$C8C    $0F8D   SYS      $F8D            ; System call to F8D
$C8E    $86C0   LD       V6, VC          ; V6 = VC
$C90    $C2A1   RND      V2, #A1         ; V2 = random & A1
$C92    $8DE6   SHR      VD              ; VD >>= 1, VF = LSB
$C94    $5B60   SE       VB, V6          ; Skip if VB == V6
$C96    $78C0   ADD      V8, #C0         ; Add 192 to V8
$C98    $2286   CALL     $286            ; Call subroutine at 286
$C9A    $E943   UNKNOWN  $E943           ; Unknown Exxx instruction
$C9C    $A371   LD       I, $371         ; Load 371 into I
$C9E    $05E7   SYS      $5E7            ; System call to 5E7
$CA0    $EFEE   UNKNOWN  $EFEE           ; Unknown Exxx instruction
$CA2    $7E88   ADD      VE, #88         ; Add 136 to VE
$CA4    $87F4   ADD      V7, VF          ; V7 += VF, VF = carry
$CA6    $3E48   SE       VE, #48         ; Skip if VE == 72
$CA8    $25A2   CALL     $5A2            ; Call subroutine at 5A2
$CAA    $B518   JP       V0, $518        ; Jump to V0 + 518
$CAC    $7A8C   ADD      VA, #8C         ; Add 140 to VA
$CAE    $BCDE   JP       V0, $CDE        ; Jump to V0 + CDE
$CB0    $CAAC   RND      VA, #AC         ; VA = random & AC
$CB2    $C3DB   RND      V3, #DB         ; V3 = random & DB
$CB4    $10BC   JP       $0BC            ; Jump to 0BC
$CB6    $AC43   LD       I, $C43         ; Load C43 into I
$CB8    $D86C   DRW      V8, V6, #C      ; Draw 12-byte sprite at V8, V6
$CBA    $316A   SE       V1, #6A         ; Skip if V1 == 106
$CBC    $0280   SYS      $280            ; System call to 280
$CBE    $B088   JP       V0, $088        ; Jump to V0 + 088
$CC0    $E3FB   UNKNOWN  $E3FB           ; Unknown Exxx instruction
$CC2    $2A33   CALL     $A33            ; Call subroutine at A33
$CC4    $67A7   LD       V7, #A7         ; Load 167 into V7
$CC6    $296F   CALL     $96F            ; Call subroutine at 96F
$CC8    $3F23   SE       VF, #23         ; Skip if VF == 35
$CCA    $6873   LD       V8, #73         ; Load 115 into V8
$CCC    $DBE2   DRW      VB, VE, #2      ; Draw 2-byte sprite at VB, VE
$CCE    $228A   CALL     $28A            ; Call subroutine at 28A
$CD0    $91EB   UNKNOWN  $91EB           ; Unknown 9xxx instruction
$CD2    $B45B   JP       V0, $45B        ; Jump to V0 + 45B
$CD4    $1DCE   JP       $DCE            ; Jump to DCE
$CD6    $9C03   UNKNOWN  $9C03           ; Unknown 9xxx instruction
$CD8    $B67A   JP       V0, $67A        ; Jump to V0 + 67A
$CDA    $EDCE   UNKNOWN  $EDCE           ; Unknown Exxx instruction
$CDC    $8AE8   UNKNOWN  8AE8            ; Unknown 8xxx instruction
$CDE    $52BF   UNKNOWN  $52BF           ; Unknown 5xxx instruction
$CE0    $0BCC   SYS      $BCC            ; System call to BCC
$CE2    $827D   UNKNOWN  827D            ; Unknown 8xxx instruction
$CE4    $A8FD   LD       I, $8FD         ; Load 8FD into I
$CE6    $621E   LD       V2, #1E         ; Load 30 into V2
$CE8    $EAD6   UNKNOWN  $EAD6           ; Unknown Exxx instruction
$CEA    $5F1F   UNKNOWN  $5F1F           ; Unknown 5xxx instruction
$CEC    $98CD   UNKNOWN  $98CD           ; Unknown 9xxx instruction
$CEE    $87AD   UNKNOWN  87AD            ; Unknown 8xxx instruction
$CF0    $9436   UNKNOWN  $9436           ; Unknown 9xxx instruction
$CF2    $A9B4   LD       I, $9B4         ; Load 9B4 into I
$CF4    $9912   UNKNOWN  $9912           ; Unknown 9xxx instruction
$CF6    $DEB1   DRW      VE, VB, #1      ; Draw 1-byte sprite at VE, VB
$CF8    $61A5   LD       V1, #A5         ; Load 165 into V1
$CFA    $1331   JP       $331            ; Jump to 331
$CFC    $5CDF   UNKNOWN  $5CDF           ; Unknown 5xxx instruction
$CFE    $384C   SE       V8, #4C         ; Skip if V8 == 76
$D00    $6758   LD       V7, #58         ; Load 88 into V7
$D02    $8378   UNKNOWN  8378            ; Unknown 8xxx instruction
$D04    $AE7F   LD       I, $E7F         ; Load E7F into I
$D06    $894F   UNKNOWN  894F            ; Unknown 8xxx instruction
$D08    $92F3   UNKNOWN  $92F3           ; Unknown 9xxx instruction
$D0A    $4C0B   SNE      VC, #0B         ; Skip if VC != 11
$D0C    $620D   LD       V2, #0D         ; Load 13 into V2
$D0E    $F0FA   UNKNOWN  F0FA            ; Unknown Fxxx instruction
$D10    $7A1E   ADD      VA, #1E         ; Add 30 to VA
$D12    $FD69   UNKNOWN  FD69            ; Unknown Fxxx instruction
$D14    $C88E   RND      V8, #8E         ; V8 = random & 8E
$D16    $83F1   OR       V3, VF          ; V3 |= VF
$D18    $C30A   RND      V3, #0A         ; V3 = random & 0A
$D1A    $E45A   UNKNOWN  $E45A           ; Unknown Exxx instruction
$D1C    $E1C6   UNKNOWN  $E1C6           ; Unknown Exxx instruction
$D1E    $3F67   SE       VF, #67         ; Skip if VF == 103
$D20    $2F5E   CALL     $F5E            ; Call subroutine at F5E
$D22    $C252   RND      V2, #52         ; V2 = random & 52
$D24    $5EA4   UNKNOWN  $5EA4           ; Unknown 5xxx instruction
$D26    $C341   RND      V3, #41         ; V3 = random & 41
$D28    $29B4   CALL     $9B4            ; Call subroutine at 9B4
$D2A    $0736   SYS      $736            ; System call to 736
$D2C    $6447   LD       V4, #47         ; Load 71 into V4
$D2E    $647D   LD       V4, #7D         ; Load 125 into V4
$D30    $8A52   AND      VA, V5          ; VA &= V5
$D32    $E1D2   UNKNOWN  $E1D2           ; Unknown Exxx instruction
$D34    $9D93   UNKNOWN  $9D93           ; Unknown 9xxx instruction
$D36    $BB50   JP       V0, $B50        ; Jump to V0 + B50
$D38    $6C1B   LD       VC, #1B         ; Load 27 into VC
$D3A    $9EF1   UNKNOWN  $9EF1           ; Unknown 9xxx instruction
$D3C    $83E5   SUB      V3, VE          ; V3 -= VE, VF = !borrow
$D3E    $216C   CALL     $16C            ; Call subroutine at 16C
$D40    $8BB6   SHR      VB              ; VB >>= 1, VF = LSB
$D42    $F79B   UNKNOWN  F79B            ; Unknown Fxxx instruction
$D44    $8E98   UNKNOWN  8E98            ; Unknown 8xxx instruction
$D46    $1999   JP       $999            ; Jump to 999
$D48    $7219   ADD      V2, #19         ; Add 25 to V2
$D4A    $BD81   JP       V0, $D81        ; Jump to V0 + D81
$D4C    $F1DD   UNKNOWN  F1DD            ; Unknown Fxxx instruction
$D4E    $45FF   SNE      V5, #FF         ; Skip if V5 != 255
$D50    $ACAA   LD       I, $CAA         ; Load CAA into I
$D52    $5898   UNKNOWN  $5898           ; Unknown 5xxx instruction
$D54    $CECF   RND      VE, #CF         ; VE = random & CF
$D56    $685F   LD       V8, #5F         ; Load 95 into V8
$D58    $6A7D   LD       VA, #7D         ; Load 125 into VA
$D5A    $A7B1   LD       I, $7B1         ; Load 7B1 into I
$D5C    $E0D9   UNKNOWN  $E0D9           ; Unknown Exxx instruction
$D5E    $1E9E   JP       $E9E            ; Jump to E9E
$D60    $819F   UNKNOWN  819F            ; Unknown 8xxx instruction
$D62    $E028   UNKNOWN  $E028           ; Unknown Exxx instruction
$D64    $2DA0   CALL     $DA0            ; Call subroutine at DA0
$D66    $3960   SE       V9, #60         ; Skip if V9 == 96
$D68    $020D   SYS      $20D            ; System call to 20D
$D6A    $1D20   JP       $D20            ; Jump to D20
$D6C    $F97F   UNKNOWN  F97F            ; Unknown Fxxx instruction
$D6E    $6262   LD       V2, #62         ; Load 98 into V2
$D70    $A25B   LD       I, $25B         ; Load 25B into I
$D72    $7B18   ADD      VB, #18         ; Add 24 to VB
$D74    $A017   LD       I, $017         ; Load 017 into I
$D76    $FF55   LD       [I], VF         ; Store V0-VF at I
$D78    $BAB9   JP       V0, $AB9        ; Jump to V0 + AB9
$D7A    $DE79   DRW      VE, V7, #9      ; Draw 9-byte sprite at VE, V7
$D7C    $1B66   JP       $B66            ; Jump to B66
$D7E    $E0BD   UNKNOWN  $E0BD           ; Unknown Exxx instruction
$D80    $B374   JP       V0, $374        ; Jump to V0 + 374
$D82    $0A2B   SYS      $A2B            ; System call to A2B
$D84    $F85A   UNKNOWN  F85A            ; Unknown Fxxx instruction
$D86    $007E   SYS      $07E            ; System call to 07E
$D88    $3BF9   SE       VB, #F9         ; Skip if VB == 249
$D8A    $8B05   SUB      VB, V0          ; VB -= V0, VF = !borrow
$D8C    $038F   SYS      $38F            ; System call to 38F
$D8E    $BD5C   JP       V0, $D5C        ; Jump to V0 + D5C
$D90    $6AD3   LD       VA, #D3         ; Load 211 into VA
$D92    $A705   LD       I, $705         ; Load 705 into I
$D94    $92AD   UNKNOWN  $92AD           ; Unknown 9xxx instruction
$D96    $244F   CALL     $44F            ; Call subroutine at 44F
$D98    $D8FE   DRW      V8, VF, #E      ; Draw 14-byte sprite at V8, VF
$D9A    $3500   SE       V5, #00         ; Skip if V5 == 0
$D9C    $EC50   UNKNOWN  $EC50           ; Unknown Exxx instruction
$D9E    $D9E9   DRW      V9, VE, #9      ; Draw 9-byte sprite at V9, VE
$DA0    $5C86   UNKNOWN  $5C86           ; Unknown 5xxx instruction
$DA2    $3892   SE       V8, #92         ; Skip if V8 == 146
$DA4    $506D   UNKNOWN  $506D           ; Unknown 5xxx instruction
$DA6    $CBFB   RND      VB, #FB         ; VB = random & FB
$DA8    $69EB   LD       V9, #EB         ; Load 235 into V9
$DAA    $0A23   SYS      $A23            ; System call to A23
$DAC    $1315   JP       $315            ; Jump to 315
$DAE    $0E60   SYS      $E60            ; System call to E60
$DB0    $6D83   LD       VD, #83         ; Load 131 into VD
$DB2    $2652   CALL     $652            ; Call subroutine at 652
$DB4    $2D6A   CALL     $D6A            ; Call subroutine at D6A
$DB6    $759A   ADD      V5, #9A         ; Add 154 to V5
$DB8    $8F6C   UNKNOWN  8F6C            ; Unknown 8xxx instruction
$DBA    $DB15   DRW      VB, V1, #5      ; Draw 5-byte sprite at VB, V1
$DBC    $76A6   ADD      V6, #A6         ; Add 166 to V6
$DBE    $E246   UNKNOWN  $E246           ; Unknown Exxx instruction
$DC0    $2456   CALL     $456            ; Call subroutine at 456
$DC2    $7541   ADD      V5, #41         ; Add 65 to V5
$DC4    $095B   SYS      $95B            ; System call to 95B
$DC6    $F6A7   UNKNOWN  F6A7            ; Unknown Fxxx instruction
$DC8    $A5CA   LD       I, $5CA         ; Load 5CA into I
$DCA    $BA7E   JP       V0, $A7E        ; Jump to V0 + A7E
$DCC    $9510   SNE      V5, V1          ; Skip if V5 != V1
$DCE    $48DC   SNE      V8, #DC         ; Skip if V8 != 220
$DD0    $FB67   UNKNOWN  FB67            ; Unknown Fxxx instruction
$DD2    $1529   JP       $529            ; Jump to 529
$DD4    $598D   UNKNOWN  $598D           ; Unknown 5xxx instruction
$DD6    $02C9   SYS      $2C9            ; System call to 2C9
$DD8    $8349   UNKNOWN  8349            ; Unknown 8xxx instruction
$DDA    $EE7C   UNKNOWN  $EE7C           ; Unknown Exxx instruction
$DDC    $4122   SNE      V1, #22         ; Skip if V1 != 34
$DDE    $888F   UNKNOWN  888F            ; Unknown 8xxx instruction
$DE0    $5265   UNKNOWN  $5265           ; Unknown 5xxx instruction
$DE2    $A866   LD       I, $866         ; Load 866 into I
$DE4    $A42C   LD       I, $42C         ; Load 42C into I
$DE6    $5087   UNKNOWN  $5087           ; Unknown 5xxx instruction
$DE8    $408E   SNE      V0, #8E         ; Skip if V0 != 142
$DEA    $B198   JP       V0, $198        ; Jump to V0 + 198
$DEC    $26CF   CALL     $6CF            ; Call subroutine at 6CF
$DEE    $D679   DRW      V6, V7, #9      ; Draw 9-byte sprite at V6, V7
$DF0    $511C   UNKNOWN  $511C           ; Unknown 5xxx instruction
$DF2    $79C0   ADD      V9, #C0         ; Add 192 to V9
$DF4    $26A8   CALL     $6A8            ; Call subroutine at 6A8
$DF6    $FB62   UNKNOWN  FB62            ; Unknown Fxxx instruction
$DF8    $76DD   ADD      V6, #DD         ; Add 221 to V6
$DFA    $3F7E   SE       VF, #7E         ; Skip if VF == 126
$DFC    $21A4   CALL     $1A4            ; Call subroutine at 1A4
$DFE    $B56F   JP       V0, $56F        ; Jump to V0 + 56F
$E00    $F520   UNKNOWN  F520            ; Unknown Fxxx instruction
$E02    $2F2D   CALL     $F2D            ; Call subroutine at F2D
$E04    $E1E5   UNKNOWN  $E1E5           ; Unknown Exxx instruction
$E06    $A1AC   LD       I, $1AC         ; Load 1AC into I
$E08    $4DE1   SNE      VD, #E1         ; Skip if VD != 225
$E0A    $C371   RND      V3, #71         ; V3 = random & 71
$E0C    $6965   LD       V9, #65         ; Load 101 into V9
$E0E    $8373   XOR      V3, V7          ; V3 ^= V7
$E10    $2194   CALL     $194            ; Call subroutine at 194
$E12    $DDF6   DRW      VD, VF, #6      ; Draw 6-byte sprite at VD, VF
$E14    $331C   SE       V3, #1C         ; Skip if V3 == 28
$E16    $C4CE   RND      V4, #CE         ; V4 = random & CE
$E18    $49E6   SNE      V9, #E6         ; Skip if V9 != 230
$E1A    $DFCD   DRW      VF, VC, #D      ; Draw 13-byte sprite at VF, VC
$E1C    $0AD3   SYS      $AD3            ; System call to AD3
$E1E    $DE05   DRW      VE, V0, #5      ; Draw 5-byte sprite at VE, V0
$E20    $BC80   JP       V0, $C80        ; Jump to V0 + C80
$E22    $117D   JP       $17D            ; Jump to 17D
$E24    $D890   DRW      V8, V9, #0      ; Draw 0-byte sprite at V8, V9
$E26    $9623   UNKNOWN  $9623           ; Unknown 9xxx instruction
$E28    $2C04   CALL     $C04            ; Call subroutine at C04
$E2A    $2625   CALL     $625            ; Call subroutine at 625
$E2C    $8F1B   UNKNOWN  8F1B            ; Unknown 8xxx instruction
$E2E    $8F52   AND      VF, V5          ; VF &= V5
$E30    $B0FF   JP       V0, $0FF        ; Jump to V0 + 0FF
$E32    $039B   SYS      $39B            ; System call to 39B
$E34    $872A   UNKNOWN  872A            ; Unknown 8xxx instruction
$E36    $3657   SE       V6, #57         ; Skip if V6 == 87
$E38    $8FB7   SUBN     VF, VB          ; VF = VB - VF, VF = !borrow
$E3A    $1762   JP       $762            ; Jump to 762
$E3C    $523E   UNKNOWN  $523E           ; Unknown 5xxx instruction
$E3E    $303D   SE       V0, #3D         ; Skip if V0 == 61
$E40    $5D1A   UNKNOWN  $5D1A           ; Unknown 5xxx instruction
$E42    $7793   ADD      V7, #93         ; Add 147 to V7
$E44    $EFE1   UNKNOWN  $EFE1           ; Unknown Exxx instruction
$E46    $ADF5   LD       I, $DF5         ; Load DF5 into I
$E48    $2BB7   CALL     $BB7            ; Call subroutine at BB7
$E4A    $DCE5   DRW      VC, VE, #5      ; Draw 5-byte sprite at VC, VE
$E4C    $1539   JP       $539            ; Jump to 539
$E4E    $4730   SNE      V7, #30         ; Skip if V7 != 48
$E50    $1CAD   JP       $CAD            ; Jump to CAD
$E52    $71A8   ADD      V1, #A8         ; Add 168 to V1
$E54    $E23B   UNKNOWN  $E23B           ; Unknown Exxx instruction
$E56    $12D7   JP       $2D7            ; Jump to 2D7
$E58    $416A   SNE      V1, #6A         ; Skip if V1 != 106
$E5A    $A163   LD       I, $163         ; Load 163 into I
$E5C    $B6B7   JP       V0, $6B7        ; Jump to V0 + 6B7
$E5E    $5091   UNKNOWN  $5091           ; Unknown 5xxx instruction
$E60    $EF13   UNKNOWN  $EF13           ; Unknown Exxx instruction
$E62    $9E24   UNKNOWN  $9E24           ; Unknown 9xxx instruction
$E64    $606B   LD       V0, #6B         ; Load 107 into V0
$E66    $F8CB   UNKNOWN  F8CB            ; Unknown Fxxx instruction
$E68    $8DCD   UNKNOWN  8DCD            ; Unknown 8xxx instruction
$E6A    $1821   JP       $821            ; Jump to 821
$E6C    $0665   SYS      $665            ; System call to 665
$E6E    $BC17   JP       V0, $C17        ; Jump to V0 + C17
$E70    $682E   LD       V8, #2E         ; Load 46 into V8
$E72    $F7DF   UNKNOWN  F7DF            ; Unknown Fxxx instruction
$E74    $CD77   RND      VD, #77         ; VD = random & 77
$E76    $B824   JP       V0, $824        ; Jump to V0 + 824
$E78    $653A   LD       V5, #3A         ; Load 58 into V5
$E7A    $6F42   LD       VF, #42         ; Load 66 into VF
$E7C    $FA5C   UNKNOWN  FA5C            ; Unknown Fxxx instruction
$E7E    $63E0   LD       V3, #E0         ; Load 224 into V3
$E80    $D74B   DRW      V7, V4, #B      ; Draw 11-byte sprite at V7, V4
$E82    $7869   ADD      V8, #69         ; Add 105 to V8
$E84    $2E73   CALL     $E73            ; Call subroutine at E73
$E86    $D520   DRW      V5, V2, #0      ; Draw 0-byte sprite at V5, V2
$E88    $542A   UNKNOWN  $542A           ; Unknown 5xxx instruction
$E8A    $A55B   LD       I, $55B         ; Load 55B into I
$E8C    $6823   LD       V8, #23         ; Load 35 into V8
$E8E    $6F57   LD       VF, #57         ; Load 87 into VF
$E90    $72DD   ADD      V2, #DD         ; Add 221 to V2
$E92    $B8CD   JP       V0, $8CD        ; Jump to V0 + 8CD
$E94    $DDAA   DRW      VD, VA, #A      ; Draw 10-byte sprite at VD, VA
$E96    $41AC   SNE      V1, #AC         ; Skip if V1 != 172
$E98    $9D8F   UNKNOWN  $9D8F           ; Unknown 9xxx instruction
$E9A    $BC23   JP       V0, $C23        ; Jump to V0 + C23
$E9C    $A5F5   LD       I, $5F5         ; Load 5F5 into I
$E9E    $EDD8   UNKNOWN  $EDD8           ; Unknown Exxx instruction
$EA0    $F212   UNKNOWN  F212            ; Unknown Fxxx instruction
$EA2    $350B   SE       V5, #0B         ; Skip if V5 == 11
$EA4    $639C   LD       V3, #9C         ; Load 156 into V3
$EA6    $FAA5   UNKNOWN  FAA5            ; Unknown Fxxx instruction
$EA8    $4060   SNE      V0, #60         ; Skip if V0 != 96
$EAA    $743C   ADD      V4, #3C         ; Add 60 to V4
$EAC    $E677   UNKNOWN  $E677           ; Unknown Exxx instruction
$EAE    $6650   LD       V6, #50         ; Load 80 into V6
$EB0    $0398   SYS      $398            ; System call to 398
$EB2    $4FDE   SNE      VF, #DE         ; Skip if VF != 222
$EB4    $55C1   UNKNOWN  $55C1           ; Unknown 5xxx instruction
$EB6    $7B0D   ADD      VB, #0D         ; Add 13 to VB
$EB8    $CADB   RND      VA, #DB         ; VA = random & DB
$EBA    $E693   UNKNOWN  $E693           ; Unknown Exxx instruction
$EBC    $CCE0   RND      VC, #E0         ; VC = random & E0
$EBE    $C8B9   RND      V8, #B9         ; V8 = random & B9
$EC0    $0E03   SYS      $E03            ; System call to E03
$EC2    $4C99   SNE      VC, #99         ; Skip if VC != 153
$EC4    $C3D2   RND      V3, #D2         ; V3 = random & D2
$EC6    $5DB8   UNKNOWN  $5DB8           ; Unknown 5xxx instruction
$EC8    $B342   JP       V0, $342        ; Jump to V0 + 342
$ECA    $6242   LD       V2, #42         ; Load 66 into V2
$ECC    $4456   SNE      V4, #56         ; Skip if V4 != 86
$ECE    $9EC5   UNKNOWN  $9EC5           ; Unknown 9xxx instruction
$ED0    $3FF5   SE       VF, #F5         ; Skip if VF == 245
$ED2    $9CBD   UNKNOWN  $9CBD           ; Unknown 9xxx instruction
$ED4    $6CDD   LD       VC, #DD         ; Load 221 into VC
$ED6    $C3B5   RND      V3, #B5         ; V3 = random & B5
$ED8    $4A8E   SNE      VA, #8E         ; Skip if VA != 142
$EDA    $9D30   SNE      VD, V3          ; Skip if VD != V3
$EDC    $62B4   LD       V2, #B4         ; Load 180 into V2
$EDE    $9D17   UNKNOWN  $9D17           ; Unknown 9xxx instruction
$EE0    $BDA8   JP       V0, $DA8        ; Jump to V0 + DA8
$EE2    $4CAC   SNE      VC, #AC         ; Skip if VC != 172
$EE4    $83DA   UNKNOWN  83DA            ; Unknown 8xxx instruction
$EE6    $B4FC   JP       V0, $4FC        ; Jump to V0 + 4FC
$EE8    $1B94   JP       $B94            ; Jump to B94
$EEA    $EEEA   UNKNOWN  $EEEA           ; Unknown Exxx instruction
$EEC    $B973   JP       V0, $973        ; Jump to V0 + 973
$EEE    $7238   ADD      V2, #38         ; Add 56 to V2
$EF0    $EC8F   UNKNOWN  $EC8F           ; Unknown Exxx instruction
$EF2    $31CD   SE       V1, #CD         ; Skip if V1 == 205
$EF4    $AC66   LD       I, $C66         ; Load C66 into I
$EF6    $2B5F   CALL     $B5F            ; Call subroutine at B5F
$EF8    $0009   SYS      $009            ; System call to 009
$EFA    $1658   JP       $658            ; Jump to 658
$EFC    $556A   UNKNOWN  $556A           ; Unknown 5xxx instruction
$EFE    $D86D   DRW      V8, V6, #D      ; Draw 13-byte sprite at V8, V6
$F00    $4C1C   SNE      VC, #1C         ; Skip if VC != 28
$F02    $8597   SUBN     V5, V9          ; V5 = V9 - V5, VF = !borrow
$F04    $2958   CALL     $958            ; Call subroutine at 958
$F06    $C3BB   RND      V3, #BB         ; V3 = random & BB
$F08    $7525   ADD      V5, #25         ; Add 37 to V5
$F0A    $4F4E   SNE      VF, #4E         ; Skip if VF != 78
$F0C    $AA45   LD       I, $A45         ; Load A45 into I
$F0E    $7AB6   ADD      VA, #B6         ; Add 182 to VA
$F10    $F5A4   UNKNOWN  F5A4            ; Unknown Fxxx instruction
$F12    $80D6   SHR      V0              ; V0 >>= 1, VF = LSB
$F14    $6E36   LD       VE, #36         ; Load 54 into VE
$F16    $D6FA   DRW      V6, VF, #A      ; Draw 10-byte sprite at V6, VF
$F18    $04D6   SYS      $4D6            ; System call to 4D6
$F1A    $F7B5   UNKNOWN  F7B5            ; Unknown Fxxx instruction
$F1C    $A589   LD       I, $589         ; Load 589 into I
$F1E    $47ED   SNE      V7, #ED         ; Skip if V7 != 237
$F20    $C35A   RND      V3, #5A         ; V3 = random & 5A
$F22    $CFA5   RND      VF, #A5         ; VF = random & A5
$F24    $F468   UNKNOWN  F468            ; Unknown Fxxx instruction
$F26    $A567   LD       I, $567         ; Load 567 into I
$F28    $14D8   JP       $4D8            ; Jump to 4D8
$F2A    $0B8B   SYS      $B8B            ; System call to B8B
$F2C    $0132   SYS      $132            ; System call to 132
$F2E    $055C   SYS      $55C            ; System call to 55C
$F30    $CF81   RND      VF, #81         ; VF = random & 81
$F32    $2708   CALL     $708            ; Call subroutine at 708
$F34    $4929   SNE      V9, #29         ; Skip if V9 != 41
$F36    $E2D7   UNKNOWN  $E2D7           ; Unknown Exxx instruction
$F38    $453C   SNE      V5, #3C         ; Skip if V5 != 60
$F3A    $950C   UNKNOWN  $950C           ; Unknown 9xxx instruction
$F3C    $5605   UNKNOWN  $5605           ; Unknown 5xxx instruction
$F3E    $96A2   UNKNOWN  $96A2           ; Unknown 9xxx instruction
$F40    $54DF   UNKNOWN  $54DF           ; Unknown 5xxx instruction
$F42    $DD2C   DRW      VD, V2, #C      ; Draw 12-byte sprite at VD, V2
$F44    $4C23   SNE      VC, #23         ; Skip if VC != 35
$F46    $50A5   UNKNOWN  $50A5           ; Unknown 5xxx instruction
$F48    $CEA4   RND      VE, #A4         ; VE = random & A4
$F4A    $0CC5   SYS      $CC5            ; System call to CC5
$F4C    $57B8   UNKNOWN  $57B8           ; Unknown 5xxx instruction
$F4E    $2BFC   CALL     $BFC            ; Call subroutine at BFC
$F50    $F6B5   UNKNOWN  F6B5            ; Unknown Fxxx instruction
$F52    $E77D   UNKNOWN  $E77D           ; Unknown Exxx instruction
$F54    $4F04   SNE      VF, #04         ; Skip if VF != 4
$F56    $1715   JP       $715            ; Jump to 715
$F58    $BF17   JP       V0, $F17        ; Jump to V0 + F17
$F5A    $9910   SNE      V9, V1          ; Skip if V9 != V1
$F5C    $335B   SE       V3, #5B         ; Skip if V3 == 91
$F5E    $3E89   SE       VE, #89         ; Skip if VE == 137
$F60    $6F62   LD       VF, #62         ; Load 98 into VF
$F62    $A748   LD       I, $748         ; Load 748 into I
$F64    $CCEE   RND      VC, #EE         ; VC = random & EE
$F66    $9CCF   UNKNOWN  $9CCF           ; Unknown 9xxx instruction
$F68    $575F   UNKNOWN  $575F           ; Unknown 5xxx instruction
$F6A    $A58D   LD       I, $58D         ; Load 58D into I
$F6C    $329F   SE       V2, #9F         ; Skip if V2 == 159
$F6E    $955B   UNKNOWN  $955B           ; Unknown 9xxx instruction
$F70    $121E   JP       $21E            ; Jump to 21E
$F72    $DA14   DRW      VA, V1, #4      ; Draw 4-byte sprite at VA, V1
$F74    $DA32   DRW      VA, V3, #2      ; Draw 2-byte sprite at VA, V3
$F76    $F732   UNKNOWN  F732            ; Unknown Fxxx instruction
$F78    $9C92   UNKNOWN  $9C92           ; Unknown 9xxx instruction
$F7A    $580B   UNKNOWN  $580B           ; Unknown 5xxx instruction
$F7C    $32E8   SE       V2, #E8         ; Skip if V2 == 232
$F7E    $ED99   UNKNOWN  $ED99           ; Unknown Exxx instruction
$F80    $58FF   UNKNOWN  $58FF           ; Unknown 5xxx instruction
$F82    $2D94   CALL     $D94            ; Call subroutine at D94
$F84    $F414   UNKNOWN  F414            ; Unknown Fxxx instruction
$F86    $9C4D   UNKNOWN  $9C4D           ; Unknown 9xxx instruction
$F88    $8CAD   UNKNOWN  8CAD            ; Unknown 8xxx instruction
$F8A    $A196   LD       I, $196         ; Load 196 into I
$F8C    $09F2   SYS      $9F2            ; System call to 9F2
$F8E    $2E35   CALL     $E35            ; Call subroutine at E35
$F90    $D4B9   DRW      V4, VB, #9      ; Draw 9-byte sprite at V4, VB
$F92    $D319   DRW      V3, V1, #9      ; Draw 9-byte sprite at V3, V1
$F94    $F258   UNKNOWN  F258            ; Unknown Fxxx instruction
$F96    $F0CF   UNKNOWN  F0CF            ; Unknown Fxxx instruction
$F98    $3606   SE       V6, #06         ; Skip if V6 == 6
$F9A    $86D3   XOR      V6, VD          ; V6 ^= VD
$F9C    $613D   LD       V1, #3D         ; Load 61 into V1
$F9E    $2F07   CALL     $F07            ; Call subroutine at F07
$FA0    $4C43   SNE      VC, #43         ; Skip if VC != 67
$FA2    $0375   SYS      $375            ; System call to 375
$FA4    $A4D0   LD       I, $4D0         ; Load 4D0 into I
$FA6    $BE35   JP       V0, $E35        ; Jump to V0 + E35
$FA8    $5093   UNKNOWN  $5093           ; Unknown 5xxx instruction
$FAA    $B6B4   JP       V0, $6B4        ; Jump to V0 + 6B4
$FAC    $B348   JP       V0, $348        ; Jump to V0 + 348
$FAE    $8C56   SHR      VC              ; VC >>= 1, VF = LSB
$FB0    $8A60   LD       VA, V6          ; VA = V6
$FB2    $1C88   JP       $C88            ; Jump to C88
$FB4    $53DB   UNKNOWN  $53DB           ; Unknown 5xxx instruction
$FB6    $7844   ADD      V8, #44         ; Add 68 to V8
$FB8    $B6A7   JP       V0, $6A7        ; Jump to V0 + 6A7
$FBA    $AD86   LD       I, $D86         ; Load D86 into I
$FBC    $5ADA   UNKNOWN  $5ADA           ; Unknown 5xxx instruction
$FBE    $8369   UNKNOWN  8369            ; Unknown 8xxx instruction
$FC0    $8450   LD       V4, V5          ; V4 = V5
$FC2    $1B46   JP       $B46            ; Jump to B46
$FC4    $F540   UNKNOWN  F540            ; Unknown Fxxx instruction
$FC6    $57C5   UNKNOWN  $57C5           ; Unknown 5xxx instruction
$FC8    $01E4   SYS      $1E4            ; System call to 1E4
$FCA    $5C18   UNKNOWN  $5C18           ; Unknown 5xxx instruction
$FCC    $37AA   SE       V7, #AA         ; Skip if V7 == 170
$FCE    $6A37   LD       VA, #37         ; Load 55 into VA
$FD0    $62D9   LD       V2, #D9         ; Load 217 into V2
$FD2    $FDCC   UNKNOWN  FDCC            ; Unknown Fxxx instruction
$FD4    $5EEB   UNKNOWN  $5EEB           ; Unknown 5xxx instruction
$FD6    $2AEB   CALL     $AEB            ; Call subroutine at AEB
$FD8    $D4A8   DRW      V4, VA, #8      ; Draw 8-byte sprite at V4, VA
$FDA    $EEB3   UNKNOWN  $EEB3           ; Unknown Exxx instruction
$FDC    $046D   SYS      $46D            ; System call to 46D
$FDE    $9E11   UNKNOWN  $9E11           ; Unknown 9xxx instruction
$FE0    $0B47   SYS      $B47            ; System call to B47
$FE2    $04F3   SYS      $4F3            ; System call to 4F3
$FE4    $0971   SYS      $971            ; System call to 971
$FE6    $835F   UNKNOWN  835F            ; Unknown 8xxx instruction
$FE8    $E58B   UNKNOWN  $E58B           ; Unknown Exxx instruction
$FEA    $8853   XOR      V8, V5          ; V8 ^= V5
$FEC    $C055   RND      V0, #55         ; V0 = random & 55
$FEE    $336D   SE       V3, #6D         ; Skip if V3 == 109
$FF0    $2EFA   CALL     $EFA            ; Call subroutine at EFA
$FF2    $269A   CALL     $69A            ; Call subroutine at 69A
$FF4    $15BB   JP       $5BB            ; Jump to 5BB
$FF6    $86C7   SUBN     V6, VC          ; V6 = VC - V6, VF = !borrow
$FF8    $180B   JP       $80B            ; Jump to 80B
$FFA    $3CDC   SE       VC, #DC         ; Skip if VC == 220
$FFC    $001A   SYS      $01A            ; System call to 01A
$FFE    $7945   ADD      V9, #45         ; Add 69 to V9

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 448 (25.0%)
  SYS     : 237 (13.2%)
  LD      : 236 (13.2%)
  JP      : 215 (12.0%)
  ADD     : 112 ( 6.2%)
  RND     : 107 ( 6.0%)
  SE      : 105 ( 5.9%)
  DRW     : 103 ( 5.7%)
  SNE     :  95 ( 5.3%)
  CALL    :  94 ( 5.2%)
  SHR     :  11 ( 0.6%)
  SUBN    :   6 ( 0.3%)
  XOR     :   6 ( 0.3%)
  AND     :   6 ( 0.3%)
  SHL     :   4 ( 0.2%)
  SUB     :   4 ( 0.2%)
  OR      :   3 ( 0.2%)

Memory Operations: 348 (19.4%)
Arithmetic Operations: 137 (7.6%)
