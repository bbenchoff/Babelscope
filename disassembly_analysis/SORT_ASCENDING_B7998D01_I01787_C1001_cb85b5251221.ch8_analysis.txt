
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B7998D01_I01787_C1001_cb85b5251221.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 7998
Instance: 1787
Direction: ascending
Final Array: [0, 2, 4, 27, 53, 98, 178, 218]
Operations: R:0 W:1 C:77 S:7

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 130
Sort Array References:
  $23A: LD I, $D42 ; Load D42 into I
  $286: LD I, $F05 ; Load F05 into I
  $28C: LD I, $C55 ; Load C55 into I
  $28E: LD I, $8EA ; Load 8EA into I
  $2A4: LD I, $01D ; Load 01D into I
  $2D8: LD I, $5D6 ; Load 5D6 into I
  $2E4: LD I, $DFB ; Load DFB into I
  $326: LD I, $9AA ; Load 9AA into I
  $38E: LD I, $74A ; Load 74A into I
  $39A: LD I, $64D ; Load 64D into I
  $3A0: LD I, $9D2 ; Load 9D2 into I
  $3EC: LD I, $C63 ; Load C63 into I
  $3F0: LD I, $716 ; Load 716 into I
  $406: LD I, $F4E ; Load F4E into I
  $442: LD I, $C9B ; Load C9B into I
  $462: LD I, $0B6 ; Load 0B6 into I
  $466: LD I, $E77 ; Load E77 into I
  $480: LD I, $662 ; Load 662 into I
  $48E: LD I, $006 ; Load 006 into I
  $4AE: LD I, $14A ; Load 14A into I
  $4B0: LD I, $6DF ; Load 6DF into I
  $500: LD I, $A3C ; Load A3C into I
  $50E: LD I, $C77 ; Load C77 into I
  $52E: LD I, $F20 ; Load F20 into I
  $53A: LD I, $1D4 ; Load 1D4 into I
  $554: LD I, $303 ; Load 303 into I
  $55E: LD I, $D7D ; Load D7D into I
  $568: LD I, $7D9 ; Load 7D9 into I
  $592: LD I, $9F5 ; Load 9F5 into I
  $5E8: LD I, $3EE ; Load 3EE into I
  $5EA: LD I, $952 ; Load 952 into I
  $61C: LD I, $267 ; Load 267 into I
  $622: LD I, $52F ; Load 52F into I
  $62A: LD I, $0DC ; Load 0DC into I
  $642: LD I, $D9B ; Load D9B into I
  $660: LD I, $E32 ; Load E32 into I
  $66E: LD I, $D63 ; Load D63 into I
  $68A: LD I, $9D1 ; Load 9D1 into I
  $6BC: LD I, $5CB ; Load 5CB into I
  $6BE: LD I, $957 ; Load 957 into I
  $6D8: LD I, $3F7 ; Load 3F7 into I
  $6DE: LD I, $A1D ; Load A1D into I
  $6EA: LD I, $E11 ; Load E11 into I
  $6FE: LD I, $D86 ; Load D86 into I
  $716: LD I, $09E ; Load 09E into I
  $72A: LD I, $0D2 ; Load 0D2 into I
  $72E: LD I, $F0D ; Load F0D into I
  $732: LD I, $D13 ; Load D13 into I
  $74A: LD I, $B3E ; Load B3E into I
  $756: LD I, $BBF ; Load BBF into I
  $758: LD I, $F89 ; Load F89 into I
  $796: LD I, $7B2 ; Load 7B2 into I
  $7A6: LD I, $15C ; Load 15C into I
  $7F4: LD I, $314 ; Load 314 into I
  $810: LD I, $893 ; Load 893 into I
  $832: LD I, $17F ; Load 17F into I
  $86A: LD I, $156 ; Load 156 into I
  $870: LD I, $3DB ; Load 3DB into I
  $872: LD I, $B5B ; Load B5B into I
  $880: LD I, $551 ; Load 551 into I
  $8B2: LD I, $21C ; Load 21C into I
  $8BC: LD I, $88A ; Load 88A into I
  $8D0: LD I, $DE1 ; Load DE1 into I
  $8D2: LD I, $D24 ; Load D24 into I
  $8F4: LD I, $F40 ; Load F40 into I
  $92C: LD I, $B84 ; Load B84 into I
  $92E: LD I, $0A1 ; Load 0A1 into I
  $944: LD I, $3CC ; Load 3CC into I
  $946: LD I, $FCB ; Load FCB into I
  $970: LD I, $101 ; Load 101 into I
  $972: LD I, $0F8 ; Load 0F8 into I
  $976: LD I, $BA7 ; Load BA7 into I
  $9D0: LD I, $838 ; Load 838 into I
  $9DA: LD I, $C06 ; Load C06 into I
  $A30: LD I, $A2A ; Load A2A into I
  $A46: LD I, $67E ; Load 67E into I
  $A4E: LD I, $0C5 ; Load 0C5 into I
  $A6A: LD I, $7CE ; Load 7CE into I
  $A7C: LD I, $749 ; Load 749 into I
  $A98: LD I, $6D3 ; Load 6D3 into I
  $A9A: LD I, $560 ; Load 560 into I
  $AB8: LD I, $840 ; Load 840 into I
  $ABC: LD I, $74B ; Load 74B into I
  $B08: LD I, $2ED ; Load 2ED into I
  $B26: LD I, $93C ; Load 93C into I
  $B34: LD I, $540 ; Load 540 into I
  $B54: LD I, $9DB ; Load 9DB into I
  $B6A: LD I, $353 ; Load 353 into I
  $B84: LD I, $280 ; Load 280 into I
  $BC4: LD I, $859 ; Load 859 into I
  $BD4: LD I, $C54 ; Load C54 into I
  $BFA: LD I, $D95 ; Load D95 into I
  $C30: LD I, $2BF ; Load 2BF into I
  $C5E: LD I, $7DD ; Load 7DD into I
  $C60: LD I, $41D ; Load 41D into I
  $C82: LD I, $0F5 ; Load 0F5 into I
  $C88: LD I, $7FD ; Load 7FD into I
  $CA8: LD I, $FFA ; Load FFA into I
  $CC8: LD I, $1BD ; Load 1BD into I
  $CE8: LD I, $094 ; Load 094 into I
  $CF2: LD I, $4E2 ; Load 4E2 into I
  $CFC: LD I, $92D ; Load 92D into I
  $D08: LD I, $121 ; Load 121 into I
  $D1A: LD I, $2A1 ; Load 2A1 into I
  $D1E: LD I, $201 ; Load 201 into I
  $D20: LD I, $324 ; Load 324 into I
  $D40: LD I, $273 ; Load 273 into I
  $D48: LD I, $2A2 ; Load 2A2 into I
  $D4C: LD I, $D63 ; Load D63 into I
  $D50: LD I, $4BE ; Load 4BE into I
  $D8A: LD I, $93A ; Load 93A into I
  $D9A: LD I, $E71 ; Load E71 into I
  $DBC: LD VC, [I] ; Load V0-VC from I
  $DC0: LD I, $B93 ; Load B93 into I
  $DE6: LD I, $ED8 ; Load ED8 into I
  $E30: LD I, $79E ; Load 79E into I
  $E32: LD I, $45C ; Load 45C into I
  $E60: LD I, $22E ; Load 22E into I
  $E66: LD I, $76C ; Load 76C into I
  $E8C: LD I, $65F ; Load 65F into I
  $EA8: LD I, $56F ; Load 56F into I
  $EC4: LD I, $862 ; Load 862 into I
  $EE4: LD I, $1A5 ; Load 1A5 into I
  $F02: LD I, $AAE ; Load AAE into I
  $F1E: LD I, $774 ; Load 774 into I
  $F3E: LD I, $871 ; Load 871 into I
  $F6E: LD I, $991 ; Load 991 into I
  $F8E: LD I, $F2B ; Load F2B into I
  $F9C: LD I, $D7C ; Load D7C into I
  $FAC: LD I, $EC7 ; Load EC7 into I

CONTROL FLOW ANALYSIS:
Jumps: 209
Calls: 104
Branches: 237
Loops: 119
Loop Structures:
  $23E -> $173 (backward jump)
  $306 -> $2DA (backward jump)
  $33C -> $337 (backward jump)
  $378 -> $0C4 (backward jump)
  $39E -> $283 (backward jump)
  $3E4 -> $07B (backward jump)
  $3EE -> $06D (backward jump)
  $424 -> $2AE (backward jump)
  $428 -> $409 (backward jump)
  $482 -> $078 (backward jump)
  $49C -> $31C (backward jump)
  $4B2 -> $422 (backward jump)
  $4B6 -> $19E (backward jump)
  $4BC -> $34E (backward jump)
  $4EA -> $0A0 (backward jump)
  $506 -> $0B3 (backward jump)
  $52C -> $50D (backward jump)
  $532 -> $1EE (backward jump)
  $580 -> $149 (backward jump)
  $58A -> $035 (backward jump)
  $5F0 -> $382 (backward jump)
  $5F6 -> $444 (backward jump)
  $63C -> $1A9 (backward jump)
  $668 -> $2DA (backward jump)
  $67A -> $3C9 (backward jump)
  $67E -> $28A (backward jump)
  $6F8 -> $01C (backward jump)
  $708 -> $083 (backward jump)
  $71E -> $6CE (backward jump)
  $740 -> $42A (backward jump)
  $750 -> $0FD (backward jump)
  $752 -> $57D (backward jump)
  $76E -> $57E (backward jump)
  $774 -> $304 (backward jump)
  $7AA -> $43D (backward jump)
  $7D0 -> $558 (backward jump)
  $7EE -> $209 (backward jump)
  $7F2 -> $4D3 (backward jump)
  $806 -> $28C (backward jump)
  $814 -> $1CF (backward jump)
  $828 -> $16F (backward jump)
  $82A -> $751 (backward jump)
  $840 -> $312 (backward jump)
  $88C -> $638 (backward jump)
  $8AC -> $864 (backward jump)
  $8E8 -> $5DB (backward jump)
  $918 -> $75C (backward jump)
  $92A -> $00D (backward jump)
  $932 -> $7CC (backward jump)
  $A32 -> $388 (backward jump)
  $A3C -> $8D6 (backward jump)
  $A4A -> $931 (backward jump)
  $A52 -> $398 (backward jump)
  $A5E -> $128 (backward jump)
  $A64 -> $283 (backward jump)
  $A72 -> $4CF (backward jump)
  $A82 -> $4BD (backward jump)
  $A9C -> $508 (backward jump)
  $AC8 -> $9BB (backward jump)
  $AE4 -> $0C6 (backward jump)
  $AE6 -> $712 (backward jump)
  $B02 -> $2CA (backward jump)
  $B06 -> $77D (backward jump)
  $B12 -> $765 (backward jump)
  $B38 -> $1A9 (backward jump)
  $B90 -> $04B (backward jump)
  $BA0 -> $AC2 (backward jump)
  $BAA -> $5C3 (backward jump)
  $BE4 -> $811 (backward jump)
  $C1A -> $B89 (backward jump)
  $C22 -> $8A7 (backward jump)
  $C28 -> $17C (backward jump)
  $C36 -> $5D2 (backward jump)
  $C3E -> $BD4 (backward jump)
  $C62 -> $611 (backward jump)
  $C78 -> $280 (backward jump)
  $CB4 -> $1D9 (backward jump)
  $CD6 -> $740 (backward jump)
  $CE0 -> $317 (backward jump)
  $D02 -> $BB9 (backward jump)
  $D0E -> $444 (backward jump)
  $D26 -> $15F (backward jump)
  $D84 -> $857 (backward jump)
  $D8E -> $C00 (backward jump)
  $D94 -> $CAE (backward jump)
  $DA4 -> $D7F (backward jump)
  $DD8 -> $13F (backward jump)
  $DDA -> $367 (backward jump)
  $DDE -> $69D (backward jump)
  $DE0 -> $67B (backward jump)
  $DE2 -> $7EB (backward jump)
  $E00 -> $C18 (backward jump)
  $E02 -> $14B (backward jump)
  $E04 -> $92E (backward jump)
  $E10 -> $9F4 (backward jump)
  $E1E -> $A98 (backward jump)
  $E44 -> $41A (backward jump)
  $E56 -> $A6E (backward jump)
  $E68 -> $85E (backward jump)
  $E76 -> $B4A (backward jump)
  $E82 -> $035 (backward jump)
  $E8A -> $191 (backward jump)
  $E96 -> $15A (backward jump)
  $EB0 -> $466 (backward jump)
  $EB6 -> $9E6 (backward jump)
  $EE6 -> $CBC (backward jump)
  $EF4 -> $C6B (backward jump)
  $EF8 -> $B23 (backward jump)
  $F24 -> $AB1 (backward jump)
  $F34 -> $B66 (backward jump)
  $F4C -> $3E9 (backward jump)
  $F5A -> $C72 (backward jump)
  $F7C -> $75C (backward jump)
  $F9A -> $259 (backward jump)
  $FA6 -> $4DC (backward jump)
  $FBA -> $1E3 (backward jump)
  $FBC -> $E91 (backward jump)
  $FCE -> $429 (backward jump)
  $FEC -> $175 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $011F   SYS      $11F            ; System call to 11F
$202    $8439   UNKNOWN  8439            ; Unknown 8xxx instruction
$204    $37FF   SE       V7, #FF         ; Skip if V7 == 255
$206    $64FB   LD       V4, #FB         ; Load 251 into V4
$208    $1270   JP       $270            ; Jump to 270
$20A    $25EE   CALL     $5EE            ; Call subroutine at 5EE
$20C    $F92C   UNKNOWN  F92C            ; Unknown Fxxx instruction
$20E    $E26E   UNKNOWN  $E26E           ; Unknown Exxx instruction
$210    $9CF8   UNKNOWN  $9CF8           ; Unknown 9xxx instruction
$212    $6F4E   LD       VF, #4E         ; Load 78 into VF
$214    $0621   SYS      $621            ; System call to 621
$216    $2140   CALL     $140            ; Call subroutine at 140
$218    $5F7A   UNKNOWN  $5F7A           ; Unknown 5xxx instruction
$21A    $D583   DRW      V5, V8, #3      ; Draw 3-byte sprite at V5, V8
$21C    $E961   UNKNOWN  $E961           ; Unknown Exxx instruction
$21E    $F66F   UNKNOWN  F66F            ; Unknown Fxxx instruction
$220    $EE18   UNKNOWN  $EE18           ; Unknown Exxx instruction
$222    $B4A7   JP       V0, $4A7        ; Jump to V0 + 4A7
$224    $2E6A   CALL     $E6A            ; Call subroutine at E6A
$226    $30C3   SE       V0, #C3         ; Skip if V0 == 195
$228    $CD46   RND      VD, #46         ; VD = random & 46
$22A    $322D   SE       V2, #2D         ; Skip if V2 == 45
$22C    $2D2E   CALL     $D2E            ; Call subroutine at D2E
$22E    $888D   UNKNOWN  888D            ; Unknown 8xxx instruction
$230    $E201   UNKNOWN  $E201           ; Unknown Exxx instruction
$232    $91F6   UNKNOWN  $91F6           ; Unknown 9xxx instruction
$234    $548E   UNKNOWN  $548E           ; Unknown 5xxx instruction
$236    $557B   UNKNOWN  $557B           ; Unknown 5xxx instruction
$238    $6593   LD       V5, #93         ; Load 147 into V5
$23A    $AD42   LD       I, $D42         ; Load D42 into I
$23C    $9ED9   UNKNOWN  $9ED9           ; Unknown 9xxx instruction
$23E    $B173   JP       V0, $173        ; Jump to V0 + 173
$240    $81C5   SUB      V1, VC          ; V1 -= VC, VF = !borrow
$242    $69F1   LD       V9, #F1         ; Load 241 into V9
$244    $2EC2   CALL     $EC2            ; Call subroutine at EC2
$246    $E3F2   UNKNOWN  $E3F2           ; Unknown Exxx instruction
$248    $69DC   LD       V9, #DC         ; Load 220 into V9
$24A    $66B8   LD       V6, #B8         ; Load 184 into V6
$24C    $C7BC   RND      V7, #BC         ; V7 = random & BC
$24E    $0D37   SYS      $D37            ; System call to D37
$250    $570C   UNKNOWN  $570C           ; Unknown 5xxx instruction
$252    $6AB8   LD       VA, #B8         ; Load 184 into VA
$254    $C946   RND      V9, #46         ; V9 = random & 46
$256    $99E0   SNE      V9, VE          ; Skip if V9 != VE
$258    $1604   JP       $604            ; Jump to 604
$25A    $864E   SHL      V6              ; V6 <<= 1, VF = MSB
$25C    $31F1   SE       V1, #F1         ; Skip if V1 == 241
$25E    $D887   DRW      V8, V8, #7      ; Draw 7-byte sprite at V8, V8
$260    $26F9   CALL     $6F9            ; Call subroutine at 6F9
$262    $5CFB   UNKNOWN  $5CFB           ; Unknown 5xxx instruction
$264    $9199   UNKNOWN  $9199           ; Unknown 9xxx instruction
$266    $2F55   CALL     $F55            ; Call subroutine at F55
$268    $C6A8   RND      V6, #A8         ; V6 = random & A8
$26A    $3A28   SE       VA, #28         ; Skip if VA == 40
$26C    $07D6   SYS      $7D6            ; System call to 7D6
$26E    $DD1E   DRW      VD, V1, #E      ; Draw 14-byte sprite at VD, V1
$270    $0EF9   SYS      $EF9            ; System call to EF9
$272    $6122   LD       V1, #22         ; Load 34 into V1
$274    $DD79   DRW      VD, V7, #9      ; Draw 9-byte sprite at VD, V7
$276    $CC57   RND      VC, #57         ; VC = random & 57
$278    $1496   JP       $496            ; Jump to 496
$27A    $D12F   DRW      V1, V2, #F      ; Draw 15-byte sprite at V1, V2
$27C    $B284   JP       V0, $284        ; Jump to V0 + 284
$27E    $E18C   UNKNOWN  $E18C           ; Unknown Exxx instruction
$280    $98BC   UNKNOWN  $98BC           ; Unknown 9xxx instruction
$282    $0733   SYS      $733            ; System call to 733
$284    $7CC2   ADD      VC, #C2         ; Add 194 to VC
$286    $AF05   LD       I, $F05         ; Load F05 into I
$288    $FB01   UNKNOWN  FB01            ; Unknown Fxxx instruction
$28A    $CC4E   RND      VC, #4E         ; VC = random & 4E
$28C    $AC55   LD       I, $C55         ; Load C55 into I
$28E    $A8EA   LD       I, $8EA         ; Load 8EA into I
$290    $6BCB   LD       VB, #CB         ; Load 203 into VB
$292    $2AF0   CALL     $AF0            ; Call subroutine at AF0
$294    $943B   UNKNOWN  $943B           ; Unknown 9xxx instruction
$296    $C5E4   RND      V5, #E4         ; V5 = random & E4
$298    $42AD   SNE      V2, #AD         ; Skip if V2 != 173
$29A    $3B0D   SE       VB, #0D         ; Skip if VB == 13
$29C    $6F85   LD       VF, #85         ; Load 133 into VF
$29E    $9502   UNKNOWN  $9502           ; Unknown 9xxx instruction
$2A0    $7249   ADD      V2, #49         ; Add 73 to V2
$2A2    $1E92   JP       $E92            ; Jump to E92
$2A4    $A01D   LD       I, $01D         ; Load 01D into I
$2A6    $0939   SYS      $939            ; System call to 939
$2A8    $CA4D   RND      VA, #4D         ; VA = random & 4D
$2AA    $9491   UNKNOWN  $9491           ; Unknown 9xxx instruction
$2AC    $19A3   JP       $9A3            ; Jump to 9A3
$2AE    $03FC   SYS      $3FC            ; System call to 3FC
$2B0    $1A0E   JP       $A0E            ; Jump to A0E
$2B2    $9EA5   UNKNOWN  $9EA5           ; Unknown 9xxx instruction
$2B4    $EF37   UNKNOWN  $EF37           ; Unknown Exxx instruction
$2B6    $CE77   RND      VE, #77         ; VE = random & 77
$2B8    $72FA   ADD      V2, #FA         ; Add 250 to V2
$2BA    $8CEE   SHL      VC              ; VC <<= 1, VF = MSB
$2BC    $8666   SHR      V6              ; V6 >>= 1, VF = LSB
$2BE    $C0D1   RND      V0, #D1         ; V0 = random & D1
$2C0    $CB51   RND      VB, #51         ; VB = random & 51
$2C2    $1990   JP       $990            ; Jump to 990
$2C4    $DEC5   DRW      VE, VC, #5      ; Draw 5-byte sprite at VE, VC
$2C6    $5807   UNKNOWN  $5807           ; Unknown 5xxx instruction
$2C8    $CCE5   RND      VC, #E5         ; VC = random & E5
$2CA    $6946   LD       V9, #46         ; Load 70 into V9
$2CC    $0D45   SYS      $D45            ; System call to D45
$2CE    $C00E   RND      V0, #0E         ; V0 = random & 0E
$2D0    $FD5E   UNKNOWN  FD5E            ; Unknown Fxxx instruction
$2D2    $921B   UNKNOWN  $921B           ; Unknown 9xxx instruction
$2D4    $6BC9   LD       VB, #C9         ; Load 201 into VB
$2D6    $FEDB   UNKNOWN  FEDB            ; Unknown Fxxx instruction
$2D8    $A5D6   LD       I, $5D6         ; Load 5D6 into I
$2DA    $E8E9   UNKNOWN  $E8E9           ; Unknown Exxx instruction
$2DC    $947C   UNKNOWN  $947C           ; Unknown 9xxx instruction
$2DE    $0003   SYS      $003            ; System call to 003
$2E0    $07B1   SYS      $7B1            ; System call to 7B1
$2E2    $B777   JP       V0, $777        ; Jump to V0 + 777
$2E4    $ADFB   LD       I, $DFB         ; Load DFB into I
$2E6    $D3BC   DRW      V3, VB, #C      ; Draw 12-byte sprite at V3, VB
$2E8    $8FC1   OR       VF, VC          ; VF |= VC
$2EA    $F177   UNKNOWN  F177            ; Unknown Fxxx instruction
$2EC    $B4D3   JP       V0, $4D3        ; Jump to V0 + 4D3
$2EE    $0655   SYS      $655            ; System call to 655
$2F0    $2A9B   CALL     $A9B            ; Call subroutine at A9B
$2F2    $5320   SE       V3, V2          ; Skip if V3 == V2
$2F4    $76E4   ADD      V6, #E4         ; Add 228 to V6
$2F6    $9E95   UNKNOWN  $9E95           ; Unknown 9xxx instruction
$2F8    $7822   ADD      V8, #22         ; Add 34 to V8
$2FA    $873C   UNKNOWN  873C            ; Unknown 8xxx instruction
$2FC    $21F7   CALL     $1F7            ; Call subroutine at 1F7
$2FE    $E408   UNKNOWN  $E408           ; Unknown Exxx instruction
$300    $0002   SYS      $002            ; System call to 002
$302    $041B   SYS      $41B            ; System call to 41B
$304    $3562   SE       V5, #62         ; Skip if V5 == 98
$306    $B2DA   JP       V0, $2DA        ; Jump to V0 + 2DA
$308    $9232   UNKNOWN  $9232           ; Unknown 9xxx instruction
$30A    $81CB   UNKNOWN  81CB            ; Unknown 8xxx instruction
$30C    $7C9C   ADD      VC, #9C         ; Add 156 to VC
$30E    $2C6A   CALL     $C6A            ; Call subroutine at C6A
$310    $EC14   UNKNOWN  $EC14           ; Unknown Exxx instruction
$312    $7A64   ADD      VA, #64         ; Add 100 to VA
$314    $B96E   JP       V0, $96E        ; Jump to V0 + 96E
$316    $17A1   JP       $7A1            ; Jump to 7A1
$318    $7DF1   ADD      VD, #F1         ; Add 241 to VD
$31A    $931A   UNKNOWN  $931A           ; Unknown 9xxx instruction
$31C    $8C71   OR       VC, V7          ; VC |= V7
$31E    $FE33   LD       B, VE           ; Store BCD of VE at I, I+1, I+2
$320    $3634   SE       V6, #34         ; Skip if V6 == 52
$322    $48E8   SNE      V8, #E8         ; Skip if V8 != 232
$324    $BF76   JP       V0, $F76        ; Jump to V0 + F76
$326    $A9AA   LD       I, $9AA         ; Load 9AA into I
$328    $1A31   JP       $A31            ; Jump to A31
$32A    $EAD5   UNKNOWN  $EAD5           ; Unknown Exxx instruction
$32C    $D10F   DRW      V1, V0, #F      ; Draw 15-byte sprite at V1, V0
$32E    $5457   UNKNOWN  $5457           ; Unknown 5xxx instruction
$330    $EC0C   UNKNOWN  $EC0C           ; Unknown Exxx instruction
$332    $32B7   SE       V2, #B7         ; Skip if V2 == 183
$334    $F9A3   UNKNOWN  F9A3            ; Unknown Fxxx instruction
$336    $F1D6   UNKNOWN  F1D6            ; Unknown Fxxx instruction
$338    $342B   SE       V4, #2B         ; Skip if V4 == 43
$33A    $863F   UNKNOWN  863F            ; Unknown 8xxx instruction
$33C    $B337   JP       V0, $337        ; Jump to V0 + 337
$33E    $C0BC   RND      V0, #BC         ; V0 = random & BC
$340    $CE44   RND      VE, #44         ; VE = random & 44
$342    $3D5F   SE       VD, #5F         ; Skip if VD == 95
$344    $C7A2   RND      V7, #A2         ; V7 = random & A2
$346    $C355   RND      V3, #55         ; V3 = random & 55
$348    $CBC3   RND      VB, #C3         ; VB = random & C3
$34A    $6677   LD       V6, #77         ; Load 119 into V6
$34C    $4499   SNE      V4, #99         ; Skip if V4 != 153
$34E    $918A   UNKNOWN  $918A           ; Unknown 9xxx instruction
$350    $9FDC   UNKNOWN  $9FDC           ; Unknown 9xxx instruction
$352    $3891   SE       V8, #91         ; Skip if V8 == 145
$354    $98C5   UNKNOWN  $98C5           ; Unknown 9xxx instruction
$356    $6B71   LD       VB, #71         ; Load 113 into VB
$358    $EBCD   UNKNOWN  $EBCD           ; Unknown Exxx instruction
$35A    $8A01   OR       VA, V0          ; VA |= V0
$35C    $9F0A   UNKNOWN  $9F0A           ; Unknown 9xxx instruction
$35E    $9D33   UNKNOWN  $9D33           ; Unknown 9xxx instruction
$360    $7A2A   ADD      VA, #2A         ; Add 42 to VA
$362    $1442   JP       $442            ; Jump to 442
$364    $C8D5   RND      V8, #D5         ; V8 = random & D5
$366    $0B9A   SYS      $B9A            ; System call to B9A
$368    $144E   JP       $44E            ; Jump to 44E
$36A    $6173   LD       V1, #73         ; Load 115 into V1
$36C    $5D66   UNKNOWN  $5D66           ; Unknown 5xxx instruction
$36E    $32F6   SE       V2, #F6         ; Skip if V2 == 246
$370    $4B88   SNE      VB, #88         ; Skip if VB != 136
$372    $2762   CALL     $762            ; Call subroutine at 762
$374    $3C20   SE       VC, #20         ; Skip if VC == 32
$376    $2F63   CALL     $F63            ; Call subroutine at F63
$378    $10C4   JP       $0C4            ; Jump to 0C4
$37A    $9691   UNKNOWN  $9691           ; Unknown 9xxx instruction
$37C    $65AD   LD       V5, #AD         ; Load 173 into V5
$37E    $38EE   SE       V8, #EE         ; Skip if V8 == 238
$380    $F4B6   UNKNOWN  F4B6            ; Unknown Fxxx instruction
$382    $9DEC   UNKNOWN  $9DEC           ; Unknown 9xxx instruction
$384    $8C23   XOR      VC, V2          ; VC ^= V2
$386    $0BA7   SYS      $BA7            ; System call to BA7
$388    $F715   LD       DT, V7          ; Delay timer = V7
$38A    $7D7B   ADD      VD, #7B         ; Add 123 to VD
$38C    $9927   UNKNOWN  $9927           ; Unknown 9xxx instruction
$38E    $A74A   LD       I, $74A         ; Load 74A into I
$390    $C3D7   RND      V3, #D7         ; V3 = random & D7
$392    $2F83   CALL     $F83            ; Call subroutine at F83
$394    $4263   SNE      V2, #63         ; Skip if V2 != 99
$396    $FA53   UNKNOWN  FA53            ; Unknown Fxxx instruction
$398    $537A   UNKNOWN  $537A           ; Unknown 5xxx instruction
$39A    $A64D   LD       I, $64D         ; Load 64D into I
$39C    $16D7   JP       $6D7            ; Jump to 6D7
$39E    $1283   JP       $283            ; Jump to 283
$3A0    $A9D2   LD       I, $9D2         ; Load 9D2 into I
$3A2    $86BB   UNKNOWN  86BB            ; Unknown 8xxx instruction
$3A4    $C349   RND      V3, #49         ; V3 = random & 49
$3A6    $9FCF   UNKNOWN  $9FCF           ; Unknown 9xxx instruction
$3A8    $0611   SYS      $611            ; System call to 611
$3AA    $5368   UNKNOWN  $5368           ; Unknown 5xxx instruction
$3AC    $8D8A   UNKNOWN  8D8A            ; Unknown 8xxx instruction
$3AE    $41E3   SNE      V1, #E3         ; Skip if V1 != 227
$3B0    $2E1D   CALL     $E1D            ; Call subroutine at E1D
$3B2    $D459   DRW      V4, V5, #9      ; Draw 9-byte sprite at V4, V5
$3B4    $0553   SYS      $553            ; System call to 553
$3B6    $3EFA   SE       VE, #FA         ; Skip if VE == 250
$3B8    $4A32   SNE      VA, #32         ; Skip if VA != 50
$3BA    $1E77   JP       $E77            ; Jump to E77
$3BC    $3353   SE       V3, #53         ; Skip if V3 == 83
$3BE    $F8B0   UNKNOWN  F8B0            ; Unknown Fxxx instruction
$3C0    $771F   ADD      V7, #1F         ; Add 31 to V7
$3C2    $B7BD   JP       V0, $7BD        ; Jump to V0 + 7BD
$3C4    $B6AC   JP       V0, $6AC        ; Jump to V0 + 6AC
$3C6    $F72C   UNKNOWN  F72C            ; Unknown Fxxx instruction
$3C8    $D12A   DRW      V1, V2, #A      ; Draw 10-byte sprite at V1, V2
$3CA    $9CDD   UNKNOWN  $9CDD           ; Unknown 9xxx instruction
$3CC    $E4D9   UNKNOWN  $E4D9           ; Unknown Exxx instruction
$3CE    $E55F   UNKNOWN  $E55F           ; Unknown Exxx instruction
$3D0    $7F0A   ADD      VF, #0A         ; Add 10 to VF
$3D2    $5616   UNKNOWN  $5616           ; Unknown 5xxx instruction
$3D4    $1A95   JP       $A95            ; Jump to A95
$3D6    $5C1A   UNKNOWN  $5C1A           ; Unknown 5xxx instruction
$3D8    $89AE   SHL      V9              ; V9 <<= 1, VF = MSB
$3DA    $15F1   JP       $5F1            ; Jump to 5F1
$3DC    $5C60   SE       VC, V6          ; Skip if VC == V6
$3DE    $002F   SYS      $02F            ; System call to 02F
$3E0    $5F0E   UNKNOWN  $5F0E           ; Unknown 5xxx instruction
$3E2    $F743   UNKNOWN  F743            ; Unknown Fxxx instruction
$3E4    $B07B   JP       V0, $07B        ; Jump to V0 + 07B
$3E6    $7381   ADD      V3, #81         ; Add 129 to V3
$3E8    $775F   ADD      V7, #5F         ; Add 95 to V7
$3EA    $C2DA   RND      V2, #DA         ; V2 = random & DA
$3EC    $AC63   LD       I, $C63         ; Load C63 into I
$3EE    $106D   JP       $06D            ; Jump to 06D
$3F0    $A716   LD       I, $716         ; Load 716 into I
$3F2    $4655   SNE      V6, #55         ; Skip if V6 != 85
$3F4    $9003   UNKNOWN  $9003           ; Unknown 9xxx instruction
$3F6    $6A55   LD       VA, #55         ; Load 85 into VA
$3F8    $CE6D   RND      VE, #6D         ; VE = random & 6D
$3FA    $691C   LD       V9, #1C         ; Load 28 into V9
$3FC    $87E5   SUB      V7, VE          ; V7 -= VE, VF = !borrow
$3FE    $716F   ADD      V1, #6F         ; Add 111 to V1
$400    $FEA8   UNKNOWN  FEA8            ; Unknown Fxxx instruction
$402    $2DD7   CALL     $DD7            ; Call subroutine at DD7
$404    $4E40   SNE      VE, #40         ; Skip if VE != 64
$406    $AF4E   LD       I, $F4E         ; Load F4E into I
$408    $2A0C   CALL     $A0C            ; Call subroutine at A0C
$40A    $4E00   SNE      VE, #00         ; Skip if VE != 0
$40C    $76C0   ADD      V6, #C0         ; Add 192 to V6
$40E    $F66A   UNKNOWN  F66A            ; Unknown Fxxx instruction
$410    $CA2F   RND      VA, #2F         ; VA = random & 2F
$412    $CF86   RND      VF, #86         ; VF = random & 86
$414    $4C5E   SNE      VC, #5E         ; Skip if VC != 94
$416    $C3EE   RND      V3, #EE         ; V3 = random & EE
$418    $9299   UNKNOWN  $9299           ; Unknown 9xxx instruction
$41A    $20D2   CALL     $0D2            ; Call subroutine at 0D2
$41C    $3FA8   SE       VF, #A8         ; Skip if VF == 168
$41E    $353D   SE       V5, #3D         ; Skip if V5 == 61
$420    $E865   UNKNOWN  $E865           ; Unknown Exxx instruction
$422    $3AFC   SE       VA, #FC         ; Skip if VA == 252
$424    $12AE   JP       $2AE            ; Jump to 2AE
$426    $E66D   UNKNOWN  $E66D           ; Unknown Exxx instruction
$428    $1409   JP       $409            ; Jump to 409
$42A    $17D3   JP       $7D3            ; Jump to 7D3
$42C    $61CB   LD       V1, #CB         ; Load 203 into V1
$42E    $EB70   UNKNOWN  $EB70           ; Unknown Exxx instruction
$430    $D930   DRW      V9, V3, #0      ; Draw 0-byte sprite at V9, V3
$432    $E85D   UNKNOWN  $E85D           ; Unknown Exxx instruction
$434    $173F   JP       $73F            ; Jump to 73F
$436    $7CFA   ADD      VC, #FA         ; Add 250 to VC
$438    $D9F2   DRW      V9, VF, #2      ; Draw 2-byte sprite at V9, VF
$43A    $D4C3   DRW      V4, VC, #3      ; Draw 3-byte sprite at V4, VC
$43C    $FACB   UNKNOWN  FACB            ; Unknown Fxxx instruction
$43E    $39F6   SE       V9, #F6         ; Skip if V9 == 246
$440    $BA4C   JP       V0, $A4C        ; Jump to V0 + A4C
$442    $AC9B   LD       I, $C9B         ; Load C9B into I
$444    $DF5B   DRW      VF, V5, #B      ; Draw 11-byte sprite at VF, V5
$446    $29DF   CALL     $9DF            ; Call subroutine at 9DF
$448    $8E0D   UNKNOWN  8E0D            ; Unknown 8xxx instruction
$44A    $7BE3   ADD      VB, #E3         ; Add 227 to VB
$44C    $5F5D   UNKNOWN  $5F5D           ; Unknown 5xxx instruction
$44E    $7EA7   ADD      VE, #A7         ; Add 167 to VE
$450    $F1BD   UNKNOWN  F1BD            ; Unknown Fxxx instruction
$452    $3166   SE       V1, #66         ; Skip if V1 == 102
$454    $C228   RND      V2, #28         ; V2 = random & 28
$456    $32DF   SE       V2, #DF         ; Skip if V2 == 223
$458    $CFE1   RND      VF, #E1         ; VF = random & E1
$45A    $8859   UNKNOWN  8859            ; Unknown 8xxx instruction
$45C    $8B73   XOR      VB, V7          ; VB ^= V7
$45E    $F03B   UNKNOWN  F03B            ; Unknown Fxxx instruction
$460    $8B92   AND      VB, V9          ; VB &= V9
$462    $A0B6   LD       I, $0B6         ; Load 0B6 into I
$464    $841A   UNKNOWN  841A            ; Unknown 8xxx instruction
$466    $AE77   LD       I, $E77         ; Load E77 into I
$468    $6D94   LD       VD, #94         ; Load 148 into VD
$46A    $5AD6   UNKNOWN  $5AD6           ; Unknown 5xxx instruction
$46C    $6136   LD       V1, #36         ; Load 54 into V1
$46E    $4781   SNE      V7, #81         ; Skip if V7 != 129
$470    $5358   UNKNOWN  $5358           ; Unknown 5xxx instruction
$472    $171D   JP       $71D            ; Jump to 71D
$474    $2212   CALL     $212            ; Call subroutine at 212
$476    $9DF2   UNKNOWN  $9DF2           ; Unknown 9xxx instruction
$478    $8E79   UNKNOWN  8E79            ; Unknown 8xxx instruction
$47A    $E11A   UNKNOWN  $E11A           ; Unknown Exxx instruction
$47C    $5272   UNKNOWN  $5272           ; Unknown 5xxx instruction
$47E    $0C25   SYS      $C25            ; System call to C25
$480    $A662   LD       I, $662         ; Load 662 into I
$482    $B078   JP       V0, $078        ; Jump to V0 + 078
$484    $F3AB   UNKNOWN  F3AB            ; Unknown Fxxx instruction
$486    $461C   SNE      V6, #1C         ; Skip if V6 != 28
$488    $D325   DRW      V3, V2, #5      ; Draw 5-byte sprite at V3, V2
$48A    $65E9   LD       V5, #E9         ; Load 233 into V5
$48C    $7BE6   ADD      VB, #E6         ; Add 230 to VB
$48E    $A006   LD       I, $006         ; Load 006 into I
$490    $6412   LD       V4, #12         ; Load 18 into V4
$492    $6043   LD       V0, #43         ; Load 67 into V0
$494    $90E5   UNKNOWN  $90E5           ; Unknown 9xxx instruction
$496    $F246   UNKNOWN  F246            ; Unknown Fxxx instruction
$498    $F692   UNKNOWN  F692            ; Unknown Fxxx instruction
$49A    $68BE   LD       V8, #BE         ; Load 190 into V8
$49C    $131C   JP       $31C            ; Jump to 31C
$49E    $D9AB   DRW      V9, VA, #B      ; Draw 11-byte sprite at V9, VA
$4A0    $24A7   CALL     $4A7            ; Call subroutine at 4A7
$4A2    $5DB5   UNKNOWN  $5DB5           ; Unknown 5xxx instruction
$4A4    $F185   UNKNOWN  F185            ; Unknown Fxxx instruction
$4A6    $FA5F   UNKNOWN  FA5F            ; Unknown Fxxx instruction
$4A8    $DBA9   DRW      VB, VA, #9      ; Draw 9-byte sprite at VB, VA
$4AA    $1F23   JP       $F23            ; Jump to F23
$4AC    $5CC9   UNKNOWN  $5CC9           ; Unknown 5xxx instruction
$4AE    $A14A   LD       I, $14A         ; Load 14A into I
$4B0    $A6DF   LD       I, $6DF         ; Load 6DF into I
$4B2    $B422   JP       V0, $422        ; Jump to V0 + 422
$4B4    $E6E2   UNKNOWN  $E6E2           ; Unknown Exxx instruction
$4B6    $119E   JP       $19E            ; Jump to 19E
$4B8    $0B19   SYS      $B19            ; System call to B19
$4BA    $0B43   SYS      $B43            ; System call to B43
$4BC    $B34E   JP       V0, $34E        ; Jump to V0 + 34E
$4BE    $BE46   JP       V0, $E46        ; Jump to V0 + E46
$4C0    $6A52   LD       VA, #52         ; Load 82 into VA
$4C2    $74E3   ADD      V4, #E3         ; Add 227 to V4
$4C4    $DE25   DRW      VE, V2, #5      ; Draw 5-byte sprite at VE, V2
$4C6    $DEDE   DRW      VE, VD, #E      ; Draw 14-byte sprite at VE, VD
$4C8    $7967   ADD      V9, #67         ; Add 103 to V9
$4CA    $BCA9   JP       V0, $CA9        ; Jump to V0 + CA9
$4CC    $73B6   ADD      V3, #B6         ; Add 182 to V3
$4CE    $2791   CALL     $791            ; Call subroutine at 791
$4D0    $37BB   SE       V7, #BB         ; Skip if V7 == 187
$4D2    $CA83   RND      VA, #83         ; VA = random & 83
$4D4    $8BFB   UNKNOWN  8BFB            ; Unknown 8xxx instruction
$4D6    $81BA   UNKNOWN  81BA            ; Unknown 8xxx instruction
$4D8    $3C1F   SE       VC, #1F         ; Skip if VC == 31
$4DA    $BEBA   JP       V0, $EBA        ; Jump to V0 + EBA
$4DC    $73A8   ADD      V3, #A8         ; Add 168 to V3
$4DE    $447D   SNE      V4, #7D         ; Skip if V4 != 125
$4E0    $6D82   LD       VD, #82         ; Load 130 into VD
$4E2    $D920   DRW      V9, V2, #0      ; Draw 0-byte sprite at V9, V2
$4E4    $EED8   UNKNOWN  $EED8           ; Unknown Exxx instruction
$4E6    $59C7   UNKNOWN  $59C7           ; Unknown 5xxx instruction
$4E8    $38E9   SE       V8, #E9         ; Skip if V8 == 233
$4EA    $B0A0   JP       V0, $0A0        ; Jump to V0 + 0A0
$4EC    $E3E8   UNKNOWN  $E3E8           ; Unknown Exxx instruction
$4EE    $392C   SE       V9, #2C         ; Skip if V9 == 44
$4F0    $BE15   JP       V0, $E15        ; Jump to V0 + E15
$4F2    $8C8D   UNKNOWN  8C8D            ; Unknown 8xxx instruction
$4F4    $053F   SYS      $53F            ; System call to 53F
$4F6    $170F   JP       $70F            ; Jump to 70F
$4F8    $1542   JP       $542            ; Jump to 542
$4FA    $4CE7   SNE      VC, #E7         ; Skip if VC != 231
$4FC    $0A79   SYS      $A79            ; System call to A79
$4FE    $0B0D   SYS      $B0D            ; System call to B0D
$500    $AA3C   LD       I, $A3C         ; Load A3C into I
$502    $7367   ADD      V3, #67         ; Add 103 to V3
$504    $3A36   SE       VA, #36         ; Skip if VA == 54
$506    $10B3   JP       $0B3            ; Jump to 0B3
$508    $6229   LD       V2, #29         ; Load 41 into V2
$50A    $0710   SYS      $710            ; System call to 710
$50C    $F046   UNKNOWN  F046            ; Unknown Fxxx instruction
$50E    $AC77   LD       I, $C77         ; Load C77 into I
$510    $6A45   LD       VA, #45         ; Load 69 into VA
$512    $EE72   UNKNOWN  $EE72           ; Unknown Exxx instruction
$514    $3B51   SE       VB, #51         ; Skip if VB == 81
$516    $42F0   SNE      V2, #F0         ; Skip if V2 != 240
$518    $28B1   CALL     $8B1            ; Call subroutine at 8B1
$51A    $7A2D   ADD      VA, #2D         ; Add 45 to VA
$51C    $3909   SE       V9, #09         ; Skip if V9 == 9
$51E    $421F   SNE      V2, #1F         ; Skip if V2 != 31
$520    $24BA   CALL     $4BA            ; Call subroutine at 4BA
$522    $5D8D   UNKNOWN  $5D8D           ; Unknown 5xxx instruction
$524    $C98C   RND      V9, #8C         ; V9 = random & 8C
$526    $37CA   SE       V7, #CA         ; Skip if V7 == 202
$528    $F010   UNKNOWN  F010            ; Unknown Fxxx instruction
$52A    $9CBB   UNKNOWN  $9CBB           ; Unknown 9xxx instruction
$52C    $150D   JP       $50D            ; Jump to 50D
$52E    $AF20   LD       I, $F20         ; Load F20 into I
$530    $882F   UNKNOWN  882F            ; Unknown 8xxx instruction
$532    $B1EE   JP       V0, $1EE        ; Jump to V0 + 1EE
$534    $F9D1   UNKNOWN  F9D1            ; Unknown Fxxx instruction
$536    $289B   CALL     $89B            ; Call subroutine at 89B
$538    $8CEC   UNKNOWN  8CEC            ; Unknown 8xxx instruction
$53A    $A1D4   LD       I, $1D4         ; Load 1D4 into I
$53C    $09AA   SYS      $9AA            ; System call to 9AA
$53E    $D626   DRW      V6, V2, #6      ; Draw 6-byte sprite at V6, V2
$540    $B5F2   JP       V0, $5F2        ; Jump to V0 + 5F2
$542    $EF16   UNKNOWN  $EF16           ; Unknown Exxx instruction
$544    $49CA   SNE      V9, #CA         ; Skip if V9 != 202
$546    $17C4   JP       $7C4            ; Jump to 7C4
$548    $CC67   RND      VC, #67         ; VC = random & 67
$54A    $3FCE   SE       VF, #CE         ; Skip if VF == 206
$54C    $DFAC   DRW      VF, VA, #C      ; Draw 12-byte sprite at VF, VA
$54E    $D3DB   DRW      V3, VD, #B      ; Draw 11-byte sprite at V3, VD
$550    $B5B7   JP       V0, $5B7        ; Jump to V0 + 5B7
$552    $E9DB   UNKNOWN  $E9DB           ; Unknown Exxx instruction
$554    $A303   LD       I, $303         ; Load 303 into I
$556    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$558    $2945   CALL     $945            ; Call subroutine at 945
$55A    $BDCA   JP       V0, $DCA        ; Jump to V0 + DCA
$55C    $81D4   ADD      V1, VD          ; V1 += VD, VF = carry
$55E    $AD7D   LD       I, $D7D         ; Load D7D into I
$560    $42E9   SNE      V2, #E9         ; Skip if V2 != 233
$562    $9D94   UNKNOWN  $9D94           ; Unknown 9xxx instruction
$564    $B809   JP       V0, $809        ; Jump to V0 + 809
$566    $CD83   RND      VD, #83         ; VD = random & 83
$568    $A7D9   LD       I, $7D9         ; Load 7D9 into I
$56A    $DD7F   DRW      VD, V7, #F      ; Draw 15-byte sprite at VD, V7
$56C    $7A32   ADD      VA, #32         ; Add 50 to VA
$56E    $6A9D   LD       VA, #9D         ; Load 157 into VA
$570    $3282   SE       V2, #82         ; Skip if V2 == 130
$572    $452E   SNE      V5, #2E         ; Skip if V5 != 46
$574    $6A19   LD       VA, #19         ; Load 25 into VA
$576    $5A71   UNKNOWN  $5A71           ; Unknown 5xxx instruction
$578    $4735   SNE      V7, #35         ; Skip if V7 != 53
$57A    $7056   ADD      V0, #56         ; Add 86 to V0
$57C    $0C38   SYS      $C38            ; System call to C38
$57E    $878E   SHL      V7              ; V7 <<= 1, VF = MSB
$580    $B149   JP       V0, $149        ; Jump to V0 + 149
$582    $33C3   SE       V3, #C3         ; Skip if V3 == 195
$584    $4EBA   SNE      VE, #BA         ; Skip if VE != 186
$586    $3830   SE       V8, #30         ; Skip if V8 == 48
$588    $8D9D   UNKNOWN  8D9D            ; Unknown 8xxx instruction
$58A    $1035   JP       $035            ; Jump to 035
$58C    $4CF0   SNE      VC, #F0         ; Skip if VC != 240
$58E    $3A21   SE       VA, #21         ; Skip if VA == 33
$590    $5A6A   UNKNOWN  $5A6A           ; Unknown 5xxx instruction
$592    $A9F5   LD       I, $9F5         ; Load 9F5 into I
$594    $ED0C   UNKNOWN  $ED0C           ; Unknown Exxx instruction
$596    $D293   DRW      V2, V9, #3      ; Draw 3-byte sprite at V2, V9
$598    $0781   SYS      $781            ; System call to 781
$59A    $9E21   UNKNOWN  $9E21           ; Unknown 9xxx instruction
$59C    $4396   SNE      V3, #96         ; Skip if V3 != 150
$59E    $8D00   LD       VD, V0          ; VD = V0
$5A0    $64F4   LD       V4, #F4         ; Load 244 into V4
$5A2    $D90A   DRW      V9, V0, #A      ; Draw 10-byte sprite at V9, V0
$5A4    $52DA   UNKNOWN  $52DA           ; Unknown 5xxx instruction
$5A6    $F0AB   UNKNOWN  F0AB            ; Unknown Fxxx instruction
$5A8    $FF8D   UNKNOWN  FF8D            ; Unknown Fxxx instruction
$5AA    $F117   UNKNOWN  F117            ; Unknown Fxxx instruction
$5AC    $DF72   DRW      VF, V7, #2      ; Draw 2-byte sprite at VF, V7
$5AE    $5006   UNKNOWN  $5006           ; Unknown 5xxx instruction
$5B0    $FCEA   UNKNOWN  FCEA            ; Unknown Fxxx instruction
$5B2    $CE98   RND      VE, #98         ; VE = random & 98
$5B4    $C209   RND      V2, #09         ; V2 = random & 09
$5B6    $3004   SE       V0, #04         ; Skip if V0 == 4
$5B8    $247F   CALL     $47F            ; Call subroutine at 47F
$5BA    $9F4B   UNKNOWN  $9F4B           ; Unknown 9xxx instruction
$5BC    $F275   UNKNOWN  F275            ; Unknown Fxxx instruction
$5BE    $4704   SNE      V7, #04         ; Skip if V7 != 4
$5C0    $F3B6   UNKNOWN  F3B6            ; Unknown Fxxx instruction
$5C2    $2F5D   CALL     $F5D            ; Call subroutine at F5D
$5C4    $0EBC   SYS      $EBC            ; System call to EBC
$5C6    $384C   SE       V8, #4C         ; Skip if V8 == 76
$5C8    $C069   RND      V0, #69         ; V0 = random & 69
$5CA    $B5DD   JP       V0, $5DD        ; Jump to V0 + 5DD
$5CC    $74BA   ADD      V4, #BA         ; Add 186 to V4
$5CE    $EAC8   UNKNOWN  $EAC8           ; Unknown Exxx instruction
$5D0    $262E   CALL     $62E            ; Call subroutine at 62E
$5D2    $5549   UNKNOWN  $5549           ; Unknown 5xxx instruction
$5D4    $C1A6   RND      V1, #A6         ; V1 = random & A6
$5D6    $55A2   UNKNOWN  $55A2           ; Unknown 5xxx instruction
$5D8    $68F7   LD       V8, #F7         ; Load 247 into V8
$5DA    $D75D   DRW      V7, V5, #D      ; Draw 13-byte sprite at V7, V5
$5DC    $6634   LD       V6, #34         ; Load 52 into V6
$5DE    $73C8   ADD      V3, #C8         ; Add 200 to V3
$5E0    $30E6   SE       V0, #E6         ; Skip if V0 == 230
$5E2    $97C6   UNKNOWN  $97C6           ; Unknown 9xxx instruction
$5E4    $CF2A   RND      VF, #2A         ; VF = random & 2A
$5E6    $2AF7   CALL     $AF7            ; Call subroutine at AF7
$5E8    $A3EE   LD       I, $3EE         ; Load 3EE into I
$5EA    $A952   LD       I, $952         ; Load 952 into I
$5EC    $2A59   CALL     $A59            ; Call subroutine at A59
$5EE    $2A63   CALL     $A63            ; Call subroutine at A63
$5F0    $1382   JP       $382            ; Jump to 382
$5F2    $001E   SYS      $01E            ; System call to 01E
$5F4    $3C22   SE       VC, #22         ; Skip if VC == 34
$5F6    $1444   JP       $444            ; Jump to 444
$5F8    $268F   CALL     $68F            ; Call subroutine at 68F
$5FA    $EA01   UNKNOWN  $EA01           ; Unknown Exxx instruction
$5FC    $8031   OR       V0, V3          ; V0 |= V3
$5FE    $FDDE   UNKNOWN  FDDE            ; Unknown Fxxx instruction
$600    $8043   XOR      V0, V4          ; V0 ^= V4
$602    $19B7   JP       $9B7            ; Jump to 9B7
$604    $CBC5   RND      VB, #C5         ; VB = random & C5
$606    $F566   UNKNOWN  F566            ; Unknown Fxxx instruction
$608    $04AB   SYS      $4AB            ; System call to 4AB
$60A    $FDB1   UNKNOWN  FDB1            ; Unknown Fxxx instruction
$60C    $7D53   ADD      VD, #53         ; Add 83 to VD
$60E    $63EA   LD       V3, #EA         ; Load 234 into V3
$610    $1F62   JP       $F62            ; Jump to F62
$612    $27DF   CALL     $7DF            ; Call subroutine at 7DF
$614    $780C   ADD      V8, #0C         ; Add 12 to V8
$616    $29E0   CALL     $9E0            ; Call subroutine at 9E0
$618    $F945   UNKNOWN  F945            ; Unknown Fxxx instruction
$61A    $1D60   JP       $D60            ; Jump to D60
$61C    $A267   LD       I, $267         ; Load 267 into I
$61E    $C4DA   RND      V4, #DA         ; V4 = random & DA
$620    $7647   ADD      V6, #47         ; Add 71 to V6
$622    $A52F   LD       I, $52F         ; Load 52F into I
$624    $62AF   LD       V2, #AF         ; Load 175 into V2
$626    $2E45   CALL     $E45            ; Call subroutine at E45
$628    $C825   RND      V8, #25         ; V8 = random & 25
$62A    $A0DC   LD       I, $0DC         ; Load 0DC into I
$62C    $8CE5   SUB      VC, VE          ; VC -= VE, VF = !borrow
$62E    $D8AB   DRW      V8, VA, #B      ; Draw 11-byte sprite at V8, VA
$630    $84F4   ADD      V4, VF          ; V4 += VF, VF = carry
$632    $BF5C   JP       V0, $F5C        ; Jump to V0 + F5C
$634    $5655   UNKNOWN  $5655           ; Unknown 5xxx instruction
$636    $5364   UNKNOWN  $5364           ; Unknown 5xxx instruction
$638    $7F2A   ADD      VF, #2A         ; Add 42 to VF
$63A    $55E6   UNKNOWN  $55E6           ; Unknown 5xxx instruction
$63C    $B1A9   JP       V0, $1A9        ; Jump to V0 + 1A9
$63E    $6952   LD       V9, #52         ; Load 82 into V9
$640    $7CA4   ADD      VC, #A4         ; Add 164 to VC
$642    $AD9B   LD       I, $D9B         ; Load D9B into I
$644    $275C   CALL     $75C            ; Call subroutine at 75C
$646    $24CB   CALL     $4CB            ; Call subroutine at 4CB
$648    $7ABC   ADD      VA, #BC         ; Add 188 to VA
$64A    $62EC   LD       V2, #EC         ; Load 236 into V2
$64C    $4070   SNE      V0, #70         ; Skip if V0 != 112
$64E    $BA0E   JP       V0, $A0E        ; Jump to V0 + A0E
$650    $0D3E   SYS      $D3E            ; System call to D3E
$652    $FF48   UNKNOWN  FF48            ; Unknown Fxxx instruction
$654    $58CE   UNKNOWN  $58CE           ; Unknown 5xxx instruction
$656    $D4AF   DRW      V4, VA, #F      ; Draw 15-byte sprite at V4, VA
$658    $921C   UNKNOWN  $921C           ; Unknown 9xxx instruction
$65A    $E3FC   UNKNOWN  $E3FC           ; Unknown Exxx instruction
$65C    $8F64   ADD      VF, V6          ; VF += V6, VF = carry
$65E    $4CBC   SNE      VC, #BC         ; Skip if VC != 188
$660    $AE32   LD       I, $E32         ; Load E32 into I
$662    $21A1   CALL     $1A1            ; Call subroutine at 1A1
$664    $B813   JP       V0, $813        ; Jump to V0 + 813
$666    $89A9   UNKNOWN  89A9            ; Unknown 8xxx instruction
$668    $12DA   JP       $2DA            ; Jump to 2DA
$66A    $6A7B   LD       VA, #7B         ; Load 123 into VA
$66C    $7F44   ADD      VF, #44         ; Add 68 to VF
$66E    $AD63   LD       I, $D63         ; Load D63 into I
$670    $981D   UNKNOWN  $981D           ; Unknown 9xxx instruction
$672    $554E   UNKNOWN  $554E           ; Unknown 5xxx instruction
$674    $F7C1   UNKNOWN  F7C1            ; Unknown Fxxx instruction
$676    $7191   ADD      V1, #91         ; Add 145 to V1
$678    $FA95   UNKNOWN  FA95            ; Unknown Fxxx instruction
$67A    $B3C9   JP       V0, $3C9        ; Jump to V0 + 3C9
$67C    $86B1   OR       V6, VB          ; V6 |= VB
$67E    $B28A   JP       V0, $28A        ; Jump to V0 + 28A
$680    $4289   SNE      V2, #89         ; Skip if V2 != 137
$682    $48D6   SNE      V8, #D6         ; Skip if V8 != 214
$684    $02E2   SYS      $2E2            ; System call to 2E2
$686    $982E   UNKNOWN  $982E           ; Unknown 9xxx instruction
$688    $5923   UNKNOWN  $5923           ; Unknown 5xxx instruction
$68A    $A9D1   LD       I, $9D1         ; Load 9D1 into I
$68C    $CAC3   RND      VA, #C3         ; VA = random & C3
$68E    $284E   CALL     $84E            ; Call subroutine at 84E
$690    $EFE7   UNKNOWN  $EFE7           ; Unknown Exxx instruction
$692    $0A97   SYS      $A97            ; System call to A97
$694    $6E21   LD       VE, #21         ; Load 33 into VE
$696    $6B14   LD       VB, #14         ; Load 20 into VB
$698    $1AB2   JP       $AB2            ; Jump to AB2
$69A    $291F   CALL     $91F            ; Call subroutine at 91F
$69C    $9953   UNKNOWN  $9953           ; Unknown 9xxx instruction
$69E    $CFB1   RND      VF, #B1         ; VF = random & B1
$6A0    $447F   SNE      V4, #7F         ; Skip if V4 != 127
$6A2    $55DC   UNKNOWN  $55DC           ; Unknown 5xxx instruction
$6A4    $5752   UNKNOWN  $5752           ; Unknown 5xxx instruction
$6A6    $435A   SNE      V3, #5A         ; Skip if V3 != 90
$6A8    $60D3   LD       V0, #D3         ; Load 211 into V0
$6AA    $36B0   SE       V6, #B0         ; Skip if V6 == 176
$6AC    $0A85   SYS      $A85            ; System call to A85
$6AE    $997A   UNKNOWN  $997A           ; Unknown 9xxx instruction
$6B0    $F99F   UNKNOWN  F99F            ; Unknown Fxxx instruction
$6B2    $DCE0   DRW      VC, VE, #0      ; Draw 0-byte sprite at VC, VE
$6B4    $DA40   DRW      VA, V4, #0      ; Draw 0-byte sprite at VA, V4
$6B6    $6160   LD       V1, #60         ; Load 96 into V1
$6B8    $D1AC   DRW      V1, VA, #C      ; Draw 12-byte sprite at V1, VA
$6BA    $D9BA   DRW      V9, VB, #A      ; Draw 10-byte sprite at V9, VB
$6BC    $A5CB   LD       I, $5CB         ; Load 5CB into I
$6BE    $A957   LD       I, $957         ; Load 957 into I
$6C0    $49D9   SNE      V9, #D9         ; Skip if V9 != 217
$6C2    $1C16   JP       $C16            ; Jump to C16
$6C4    $273F   CALL     $73F            ; Call subroutine at 73F
$6C6    $C8EF   RND      V8, #EF         ; V8 = random & EF
$6C8    $37B4   SE       V7, #B4         ; Skip if V7 == 180
$6CA    $CDD1   RND      VD, #D1         ; VD = random & D1
$6CC    $FDAE   UNKNOWN  FDAE            ; Unknown Fxxx instruction
$6CE    $8DF4   ADD      VD, VF          ; VD += VF, VF = carry
$6D0    $4369   SNE      V3, #69         ; Skip if V3 != 105
$6D2    $7C70   ADD      VC, #70         ; Add 112 to VC
$6D4    $1C6A   JP       $C6A            ; Jump to C6A
$6D6    $28D9   CALL     $8D9            ; Call subroutine at 8D9
$6D8    $A3F7   LD       I, $3F7         ; Load 3F7 into I
$6DA    $65E0   LD       V5, #E0         ; Load 224 into V5
$6DC    $E715   UNKNOWN  $E715           ; Unknown Exxx instruction
$6DE    $AA1D   LD       I, $A1D         ; Load A1D into I
$6E0    $D25C   DRW      V2, V5, #C      ; Draw 12-byte sprite at V2, V5
$6E2    $BC47   JP       V0, $C47        ; Jump to V0 + C47
$6E4    $FBB0   UNKNOWN  FBB0            ; Unknown Fxxx instruction
$6E6    $EFCF   UNKNOWN  $EFCF           ; Unknown Exxx instruction
$6E8    $74D8   ADD      V4, #D8         ; Add 216 to V4
$6EA    $AE11   LD       I, $E11         ; Load E11 into I
$6EC    $5F61   UNKNOWN  $5F61           ; Unknown 5xxx instruction
$6EE    $0B90   SYS      $B90            ; System call to B90
$6F0    $3859   SE       V8, #59         ; Skip if V8 == 89
$6F2    $9322   UNKNOWN  $9322           ; Unknown 9xxx instruction
$6F4    $CCF2   RND      VC, #F2         ; VC = random & F2
$6F6    $EDDD   UNKNOWN  $EDDD           ; Unknown Exxx instruction
$6F8    $101C   JP       $01C            ; Jump to 01C
$6FA    $E1B1   UNKNOWN  $E1B1           ; Unknown Exxx instruction
$6FC    $C3CE   RND      V3, #CE         ; V3 = random & CE
$6FE    $AD86   LD       I, $D86         ; Load D86 into I
$700    $D461   DRW      V4, V6, #1      ; Draw 1-byte sprite at V4, V6
$702    $9364   UNKNOWN  $9364           ; Unknown 9xxx instruction
$704    $0DDB   SYS      $DDB            ; System call to DDB
$706    $EB74   UNKNOWN  $EB74           ; Unknown Exxx instruction
$708    $1083   JP       $083            ; Jump to 083
$70A    $DC69   DRW      VC, V6, #9      ; Draw 9-byte sprite at VC, V6
$70C    $FACA   UNKNOWN  FACA            ; Unknown Fxxx instruction
$70E    $07A6   SYS      $7A6            ; System call to 7A6
$710    $D164   DRW      V1, V6, #4      ; Draw 4-byte sprite at V1, V6
$712    $8F74   ADD      VF, V7          ; VF += V7, VF = carry
$714    $6745   LD       V7, #45         ; Load 69 into V7
$716    $A09E   LD       I, $09E         ; Load 09E into I
$718    $8A49   UNKNOWN  8A49            ; Unknown 8xxx instruction
$71A    $9A29   UNKNOWN  $9A29           ; Unknown 9xxx instruction
$71C    $7A28   ADD      VA, #28         ; Add 40 to VA
$71E    $B6CE   JP       V0, $6CE        ; Jump to V0 + 6CE
$720    $06C4   SYS      $6C4            ; System call to 6C4
$722    $896C   UNKNOWN  896C            ; Unknown 8xxx instruction
$724    $DBC4   DRW      VB, VC, #4      ; Draw 4-byte sprite at VB, VC
$726    $36BF   SE       V6, #BF         ; Skip if V6 == 191
$728    $DB1D   DRW      VB, V1, #D      ; Draw 13-byte sprite at VB, V1
$72A    $A0D2   LD       I, $0D2         ; Load 0D2 into I
$72C    $D82E   DRW      V8, V2, #E      ; Draw 14-byte sprite at V8, V2
$72E    $AF0D   LD       I, $F0D         ; Load F0D into I
$730    $C034   RND      V0, #34         ; V0 = random & 34
$732    $AD13   LD       I, $D13         ; Load D13 into I
$734    $C410   RND      V4, #10         ; V4 = random & 10
$736    $0BB9   SYS      $BB9            ; System call to BB9
$738    $BF67   JP       V0, $F67        ; Jump to V0 + F67
$73A    $BAF8   JP       V0, $AF8        ; Jump to V0 + AF8
$73C    $1915   JP       $915            ; Jump to 915
$73E    $9757   UNKNOWN  $9757           ; Unknown 9xxx instruction
$740    $B42A   JP       V0, $42A        ; Jump to V0 + 42A
$742    $31DB   SE       V1, #DB         ; Skip if V1 == 219
$744    $BD26   JP       V0, $D26        ; Jump to V0 + D26
$746    $FE35   UNKNOWN  FE35            ; Unknown Fxxx instruction
$748    $7A09   ADD      VA, #09         ; Add 9 to VA
$74A    $AB3E   LD       I, $B3E         ; Load B3E into I
$74C    $4307   SNE      V3, #07         ; Skip if V3 != 7
$74E    $6E2B   LD       VE, #2B         ; Load 43 into VE
$750    $B0FD   JP       V0, $0FD        ; Jump to V0 + 0FD
$752    $157D   JP       $57D            ; Jump to 57D
$754    $2518   CALL     $518            ; Call subroutine at 518
$756    $ABBF   LD       I, $BBF         ; Load BBF into I
$758    $AF89   LD       I, $F89         ; Load F89 into I
$75A    $8CF4   ADD      VC, VF          ; VC += VF, VF = carry
$75C    $F8D2   UNKNOWN  F8D2            ; Unknown Fxxx instruction
$75E    $BECE   JP       V0, $ECE        ; Jump to V0 + ECE
$760    $5335   UNKNOWN  $5335           ; Unknown 5xxx instruction
$762    $8687   SUBN     V6, V8          ; V6 = V8 - V6, VF = !borrow
$764    $6047   LD       V0, #47         ; Load 71 into V0
$766    $29DF   CALL     $9DF            ; Call subroutine at 9DF
$768    $3D3E   SE       VD, #3E         ; Skip if VD == 62
$76A    $036D   SYS      $36D            ; System call to 36D
$76C    $9C79   UNKNOWN  $9C79           ; Unknown 9xxx instruction
$76E    $B57E   JP       V0, $57E        ; Jump to V0 + 57E
$770    $54A4   UNKNOWN  $54A4           ; Unknown 5xxx instruction
$772    $D592   DRW      V5, V9, #2      ; Draw 2-byte sprite at V5, V9
$774    $1304   JP       $304            ; Jump to 304
$776    $CDD6   RND      VD, #D6         ; VD = random & D6
$778    $8D1E   SHL      VD              ; VD <<= 1, VF = MSB
$77A    $CB2E   RND      VB, #2E         ; VB = random & 2E
$77C    $D6AC   DRW      V6, VA, #C      ; Draw 12-byte sprite at V6, VA
$77E    $4A46   SNE      VA, #46         ; Skip if VA != 70
$780    $3BDF   SE       VB, #DF         ; Skip if VB == 223
$782    $C7D5   RND      V7, #D5         ; V7 = random & D5
$784    $0958   SYS      $958            ; System call to 958
$786    $927C   UNKNOWN  $927C           ; Unknown 9xxx instruction
$788    $D4AA   DRW      V4, VA, #A      ; Draw 10-byte sprite at V4, VA
$78A    $202C   CALL     $02C            ; Call subroutine at 02C
$78C    $DF6F   DRW      VF, V6, #F      ; Draw 15-byte sprite at VF, V6
$78E    $1ACC   JP       $ACC            ; Jump to ACC
$790    $BB9E   JP       V0, $B9E        ; Jump to V0 + B9E
$792    $0E2C   SYS      $E2C            ; System call to E2C
$794    $C4F1   RND      V4, #F1         ; V4 = random & F1
$796    $A7B2   LD       I, $7B2         ; Load 7B2 into I
$798    $1C6C   JP       $C6C            ; Jump to C6C
$79A    $CCEC   RND      VC, #EC         ; VC = random & EC
$79C    $70C0   ADD      V0, #C0         ; Add 192 to V0
$79E    $EC3F   UNKNOWN  $EC3F           ; Unknown Exxx instruction
$7A0    $754D   ADD      V5, #4D         ; Add 77 to V5
$7A2    $BA25   JP       V0, $A25        ; Jump to V0 + A25
$7A4    $CFDF   RND      VF, #DF         ; VF = random & DF
$7A6    $A15C   LD       I, $15C         ; Load 15C into I
$7A8    $52C6   UNKNOWN  $52C6           ; Unknown 5xxx instruction
$7AA    $B43D   JP       V0, $43D        ; Jump to V0 + 43D
$7AC    $0CC6   SYS      $CC6            ; System call to CC6
$7AE    $EEB1   UNKNOWN  $EEB1           ; Unknown Exxx instruction
$7B0    $E560   UNKNOWN  $E560           ; Unknown Exxx instruction
$7B2    $7950   ADD      V9, #50         ; Add 80 to V9
$7B4    $0846   SYS      $846            ; System call to 846
$7B6    $CB62   RND      VB, #62         ; VB = random & 62
$7B8    $97E2   UNKNOWN  $97E2           ; Unknown 9xxx instruction
$7BA    $F335   UNKNOWN  F335            ; Unknown Fxxx instruction
$7BC    $71F3   ADD      V1, #F3         ; Add 243 to V1
$7BE    $7CE4   ADD      VC, #E4         ; Add 228 to VC
$7C0    $C5D0   RND      V5, #D0         ; V5 = random & D0
$7C2    $CBB1   RND      VB, #B1         ; VB = random & B1
$7C4    $3C1B   SE       VC, #1B         ; Skip if VC == 27
$7C6    $0E77   SYS      $E77            ; System call to E77
$7C8    $DD00   DRW      VD, V0, #0      ; Draw 0-byte sprite at VD, V0
$7CA    $4BAF   SNE      VB, #AF         ; Skip if VB != 175
$7CC    $0A69   SYS      $A69            ; System call to A69
$7CE    $4D19   SNE      VD, #19         ; Skip if VD != 25
$7D0    $1558   JP       $558            ; Jump to 558
$7D2    $41A4   SNE      V1, #A4         ; Skip if V1 != 164
$7D4    $BF80   JP       V0, $F80        ; Jump to V0 + F80
$7D6    $587A   UNKNOWN  $587A           ; Unknown 5xxx instruction
$7D8    $5A32   UNKNOWN  $5A32           ; Unknown 5xxx instruction
$7DA    $4236   SNE      V2, #36         ; Skip if V2 != 54
$7DC    $1C58   JP       $C58            ; Jump to C58
$7DE    $78CE   ADD      V8, #CE         ; Add 206 to V8
$7E0    $3ACE   SE       VA, #CE         ; Skip if VA == 206
$7E2    $1A39   JP       $A39            ; Jump to A39
$7E4    $9AEC   UNKNOWN  $9AEC           ; Unknown 9xxx instruction
$7E6    $992F   UNKNOWN  $992F           ; Unknown 9xxx instruction
$7E8    $043F   SYS      $43F            ; System call to 43F
$7EA    $3A67   SE       VA, #67         ; Skip if VA == 103
$7EC    $2613   CALL     $613            ; Call subroutine at 613
$7EE    $1209   JP       $209            ; Jump to 209
$7F0    $6DFC   LD       VD, #FC         ; Load 252 into VD
$7F2    $14D3   JP       $4D3            ; Jump to 4D3
$7F4    $A314   LD       I, $314         ; Load 314 into I
$7F6    $77A7   ADD      V7, #A7         ; Add 167 to V7
$7F8    $9BEA   UNKNOWN  $9BEA           ; Unknown 9xxx instruction
$7FA    $31CA   SE       V1, #CA         ; Skip if V1 == 202
$7FC    $996F   UNKNOWN  $996F           ; Unknown 9xxx instruction
$7FE    $35F3   SE       V5, #F3         ; Skip if V5 == 243
$800    $630C   LD       V3, #0C         ; Load 12 into V3
$802    $046E   SYS      $46E            ; System call to 46E
$804    $45A1   SNE      V5, #A1         ; Skip if V5 != 161
$806    $128C   JP       $28C            ; Jump to 28C
$808    $0FFC   SYS      $FFC            ; System call to FFC
$80A    $04FE   SYS      $4FE            ; System call to 4FE
$80C    $38BE   SE       V8, #BE         ; Skip if V8 == 190
$80E    $CF05   RND      VF, #05         ; VF = random & 05
$810    $A893   LD       I, $893         ; Load 893 into I
$812    $F8A3   UNKNOWN  F8A3            ; Unknown Fxxx instruction
$814    $11CF   JP       $1CF            ; Jump to 1CF
$816    $63AD   LD       V3, #AD         ; Load 173 into V3
$818    $081C   SYS      $81C            ; System call to 81C
$81A    $DD85   DRW      VD, V8, #5      ; Draw 5-byte sprite at VD, V8
$81C    $B95F   JP       V0, $95F        ; Jump to V0 + 95F
$81E    $839B   UNKNOWN  839B            ; Unknown 8xxx instruction
$820    $44EF   SNE      V4, #EF         ; Skip if V4 != 239
$822    $1855   JP       $855            ; Jump to 855
$824    $8854   ADD      V8, V5          ; V8 += V5, VF = carry
$826    $45A7   SNE      V5, #A7         ; Skip if V5 != 167
$828    $B16F   JP       V0, $16F        ; Jump to V0 + 16F
$82A    $B751   JP       V0, $751        ; Jump to V0 + 751
$82C    $DC36   DRW      VC, V3, #6      ; Draw 6-byte sprite at VC, V3
$82E    $8588   UNKNOWN  8588            ; Unknown 8xxx instruction
$830    $49E1   SNE      V9, #E1         ; Skip if V9 != 225
$832    $A17F   LD       I, $17F         ; Load 17F into I
$834    $82C1   OR       V2, VC          ; V2 |= VC
$836    $97A3   UNKNOWN  $97A3           ; Unknown 9xxx instruction
$838    $00CC   SYS      $0CC            ; System call to 0CC
$83A    $CD0D   RND      VD, #0D         ; VD = random & 0D
$83C    $9BB7   UNKNOWN  $9BB7           ; Unknown 9xxx instruction
$83E    $9529   UNKNOWN  $9529           ; Unknown 9xxx instruction
$840    $1312   JP       $312            ; Jump to 312
$842    $FAA5   UNKNOWN  FAA5            ; Unknown Fxxx instruction
$844    $99FB   UNKNOWN  $99FB           ; Unknown 9xxx instruction
$846    $3113   SE       V1, #13         ; Skip if V1 == 19
$848    $0EE3   SYS      $EE3            ; System call to EE3
$84A    $7068   ADD      V0, #68         ; Add 104 to V0
$84C    $2F58   CALL     $F58            ; Call subroutine at F58
$84E    $46AF   SNE      V6, #AF         ; Skip if V6 != 175
$850    $42EE   SNE      V2, #EE         ; Skip if V2 != 238
$852    $E900   UNKNOWN  $E900           ; Unknown Exxx instruction
$854    $6672   LD       V6, #72         ; Load 114 into V6
$856    $D290   DRW      V2, V9, #0      ; Draw 0-byte sprite at V2, V9
$858    $39C1   SE       V9, #C1         ; Skip if V9 == 193
$85A    $D6A4   DRW      V6, VA, #4      ; Draw 4-byte sprite at V6, VA
$85C    $275D   CALL     $75D            ; Call subroutine at 75D
$85E    $78B5   ADD      V8, #B5         ; Add 181 to V8
$860    $C53C   RND      V5, #3C         ; V5 = random & 3C
$862    $D98D   DRW      V9, V8, #D      ; Draw 13-byte sprite at V9, V8
$864    $34E9   SE       V4, #E9         ; Skip if V4 == 233
$866    $E4AA   UNKNOWN  $E4AA           ; Unknown Exxx instruction
$868    $4286   SNE      V2, #86         ; Skip if V2 != 134
$86A    $A156   LD       I, $156         ; Load 156 into I
$86C    $251A   CALL     $51A            ; Call subroutine at 51A
$86E    $09C2   SYS      $9C2            ; System call to 9C2
$870    $A3DB   LD       I, $3DB         ; Load 3DB into I
$872    $AB5B   LD       I, $B5B         ; Load B5B into I
$874    $94CB   UNKNOWN  $94CB           ; Unknown 9xxx instruction
$876    $3047   SE       V0, #47         ; Skip if V0 == 71
$878    $6CE1   LD       VC, #E1         ; Load 225 into VC
$87A    $53A3   UNKNOWN  $53A3           ; Unknown 5xxx instruction
$87C    $3B55   SE       VB, #55         ; Skip if VB == 85
$87E    $DEFF   DRW      VE, VF, #F      ; Draw 15-byte sprite at VE, VF
$880    $A551   LD       I, $551         ; Load 551 into I
$882    $46F1   SNE      V6, #F1         ; Skip if V6 != 241
$884    $44C3   SNE      V4, #C3         ; Skip if V4 != 195
$886    $4CFE   SNE      VC, #FE         ; Skip if VC != 254
$888    $E9C5   UNKNOWN  $E9C5           ; Unknown Exxx instruction
$88A    $8A30   LD       VA, V3          ; VA = V3
$88C    $B638   JP       V0, $638        ; Jump to V0 + 638
$88E    $DABB   DRW      VA, VB, #B      ; Draw 11-byte sprite at VA, VB
$890    $51C9   UNKNOWN  $51C9           ; Unknown 5xxx instruction
$892    $2527   CALL     $527            ; Call subroutine at 527
$894    $2ADB   CALL     $ADB            ; Call subroutine at ADB
$896    $FE9F   UNKNOWN  FE9F            ; Unknown Fxxx instruction
$898    $0172   SYS      $172            ; System call to 172
$89A    $0A30   SYS      $A30            ; System call to A30
$89C    $4FBF   SNE      VF, #BF         ; Skip if VF != 191
$89E    $C1E5   RND      V1, #E5         ; V1 = random & E5
$8A0    $F6FD   UNKNOWN  F6FD            ; Unknown Fxxx instruction
$8A2    $F4B7   UNKNOWN  F4B7            ; Unknown Fxxx instruction
$8A4    $3B48   SE       VB, #48         ; Skip if VB == 72
$8A6    $FC9F   UNKNOWN  FC9F            ; Unknown Fxxx instruction
$8A8    $BC68   JP       V0, $C68        ; Jump to V0 + C68
$8AA    $2B7D   CALL     $B7D            ; Call subroutine at B7D
$8AC    $B864   JP       V0, $864        ; Jump to V0 + 864
$8AE    $288A   CALL     $88A            ; Call subroutine at 88A
$8B0    $D5C3   DRW      V5, VC, #3      ; Draw 3-byte sprite at V5, VC
$8B2    $A21C   LD       I, $21C         ; Load 21C into I
$8B4    $C44A   RND      V4, #4A         ; V4 = random & 4A
$8B6    $6CF2   LD       VC, #F2         ; Load 242 into VC
$8B8    $5644   UNKNOWN  $5644           ; Unknown 5xxx instruction
$8BA    $6FC5   LD       VF, #C5         ; Load 197 into VF
$8BC    $A88A   LD       I, $88A         ; Load 88A into I
$8BE    $05A5   SYS      $5A5            ; System call to 5A5
$8C0    $9C33   UNKNOWN  $9C33           ; Unknown 9xxx instruction
$8C2    $73BD   ADD      V3, #BD         ; Add 189 to V3
$8C4    $5507   UNKNOWN  $5507           ; Unknown 5xxx instruction
$8C6    $4490   SNE      V4, #90         ; Skip if V4 != 144
$8C8    $E7BB   UNKNOWN  $E7BB           ; Unknown Exxx instruction
$8CA    $822A   UNKNOWN  822A            ; Unknown 8xxx instruction
$8CC    $4DA3   SNE      VD, #A3         ; Skip if VD != 163
$8CE    $2E73   CALL     $E73            ; Call subroutine at E73
$8D0    $ADE1   LD       I, $DE1         ; Load DE1 into I
$8D2    $AD24   LD       I, $D24         ; Load D24 into I
$8D4    $F39B   UNKNOWN  F39B            ; Unknown Fxxx instruction
$8D6    $6114   LD       V1, #14         ; Load 20 into V1
$8D8    $CF64   RND      VF, #64         ; VF = random & 64
$8DA    $F09B   UNKNOWN  F09B            ; Unknown Fxxx instruction
$8DC    $3043   SE       V0, #43         ; Skip if V0 == 67
$8DE    $D21B   DRW      V2, V1, #B      ; Draw 11-byte sprite at V2, V1
$8E0    $F370   UNKNOWN  F370            ; Unknown Fxxx instruction
$8E2    $DCC3   DRW      VC, VC, #3      ; Draw 3-byte sprite at VC, VC
$8E4    $98BA   UNKNOWN  $98BA           ; Unknown 9xxx instruction
$8E6    $F7D6   UNKNOWN  F7D6            ; Unknown Fxxx instruction
$8E8    $15DB   JP       $5DB            ; Jump to 5DB
$8EA    $BE0B   JP       V0, $E0B        ; Jump to V0 + E0B
$8EC    $E7E7   UNKNOWN  $E7E7           ; Unknown Exxx instruction
$8EE    $69B2   LD       V9, #B2         ; Load 178 into V9
$8F0    $4418   SNE      V4, #18         ; Skip if V4 != 24
$8F2    $49BF   SNE      V9, #BF         ; Skip if V9 != 191
$8F4    $AF40   LD       I, $F40         ; Load F40 into I
$8F6    $3819   SE       V8, #19         ; Skip if V8 == 25
$8F8    $5EE6   UNKNOWN  $5EE6           ; Unknown 5xxx instruction
$8FA    $643B   LD       V4, #3B         ; Load 59 into V4
$8FC    $45CA   SNE      V5, #CA         ; Skip if V5 != 202
$8FE    $1A9E   JP       $A9E            ; Jump to A9E
$900    $83C8   UNKNOWN  83C8            ; Unknown 8xxx instruction
$902    $FB5E   UNKNOWN  FB5E            ; Unknown Fxxx instruction
$904    $4153   SNE      V1, #53         ; Skip if V1 != 83
$906    $FCBB   UNKNOWN  FCBB            ; Unknown Fxxx instruction
$908    $CB74   RND      VB, #74         ; VB = random & 74
$90A    $0026   SYS      $026            ; System call to 026
$90C    $3D90   SE       VD, #90         ; Skip if VD == 144
$90E    $4CF3   SNE      VC, #F3         ; Skip if VC != 243
$910    $74F0   ADD      V4, #F0         ; Add 240 to V4
$912    $094B   SYS      $94B            ; System call to 94B
$914    $2787   CALL     $787            ; Call subroutine at 787
$916    $5C36   UNKNOWN  $5C36           ; Unknown 5xxx instruction
$918    $B75C   JP       V0, $75C        ; Jump to V0 + 75C
$91A    $03AB   SYS      $3AB            ; System call to 3AB
$91C    $9076   UNKNOWN  $9076           ; Unknown 9xxx instruction
$91E    $494B   SNE      V9, #4B         ; Skip if V9 != 75
$920    $1A5A   JP       $A5A            ; Jump to A5A
$922    $DFED   DRW      VF, VE, #D      ; Draw 13-byte sprite at VF, VE
$924    $60A7   LD       V0, #A7         ; Load 167 into V0
$926    $DB5D   DRW      VB, V5, #D      ; Draw 13-byte sprite at VB, V5
$928    $84C4   ADD      V4, VC          ; V4 += VC, VF = carry
$92A    $B00D   JP       V0, $00D        ; Jump to V0 + 00D
$92C    $AB84   LD       I, $B84         ; Load B84 into I
$92E    $A0A1   LD       I, $0A1         ; Load 0A1 into I
$930    $1AE4   JP       $AE4            ; Jump to AE4
$932    $17CC   JP       $7CC            ; Jump to 7CC
$934    $7F49   ADD      VF, #49         ; Add 73 to VF
$936    $8BAA   UNKNOWN  8BAA            ; Unknown 8xxx instruction
$938    $CAD7   RND      VA, #D7         ; VA = random & D7
$93A    $1A68   JP       $A68            ; Jump to A68
$93C    $4624   SNE      V6, #24         ; Skip if V6 != 36
$93E    $BAFC   JP       V0, $AFC        ; Jump to V0 + AFC
$940    $1FCF   JP       $FCF            ; Jump to FCF
$942    $F85A   UNKNOWN  F85A            ; Unknown Fxxx instruction
$944    $A3CC   LD       I, $3CC         ; Load 3CC into I
$946    $AFCB   LD       I, $FCB         ; Load FCB into I
$948    $FCB9   UNKNOWN  FCB9            ; Unknown Fxxx instruction
$94A    $FD25   UNKNOWN  FD25            ; Unknown Fxxx instruction
$94C    $6127   LD       V1, #27         ; Load 39 into V1
$94E    $6D73   LD       VD, #73         ; Load 115 into VD
$950    $0C5E   SYS      $C5E            ; System call to C5E
$952    $9527   UNKNOWN  $9527           ; Unknown 9xxx instruction
$954    $468B   SNE      V6, #8B         ; Skip if V6 != 139
$956    $0EDC   SYS      $EDC            ; System call to EDC
$958    $E8B6   UNKNOWN  $E8B6           ; Unknown Exxx instruction
$95A    $6FAE   LD       VF, #AE         ; Load 174 into VF
$95C    $6FDC   LD       VF, #DC         ; Load 220 into VF
$95E    $4DDE   SNE      VD, #DE         ; Skip if VD != 222
$960    $75DF   ADD      V5, #DF         ; Add 223 to V5
$962    $C931   RND      V9, #31         ; V9 = random & 31
$964    $505A   UNKNOWN  $505A           ; Unknown 5xxx instruction
$966    $0BAD   SYS      $BAD            ; System call to BAD
$968    $4E43   SNE      VE, #43         ; Skip if VE != 67
$96A    $220B   CALL     $20B            ; Call subroutine at 20B
$96C    $98E7   UNKNOWN  $98E7           ; Unknown 9xxx instruction
$96E    $8D7D   UNKNOWN  8D7D            ; Unknown 8xxx instruction
$970    $A101   LD       I, $101         ; Load 101 into I
$972    $A0F8   LD       I, $0F8         ; Load 0F8 into I
$974    $3E00   SE       VE, #00         ; Skip if VE == 0
$976    $ABA7   LD       I, $BA7         ; Load BA7 into I
$978    $42C2   SNE      V2, #C2         ; Skip if V2 != 194
$97A    $049D   SYS      $49D            ; System call to 49D
$97C    $2B75   CALL     $B75            ; Call subroutine at B75
$97E    $427D   SNE      V2, #7D         ; Skip if V2 != 125
$980    $4B97   SNE      VB, #97         ; Skip if VB != 151
$982    $F817   UNKNOWN  F817            ; Unknown Fxxx instruction
$984    $29DF   CALL     $9DF            ; Call subroutine at 9DF
$986    $46DC   SNE      V6, #DC         ; Skip if V6 != 220
$988    $86D2   AND      V6, VD          ; V6 &= VD
$98A    $6862   LD       V8, #62         ; Load 98 into V8
$98C    $0679   SYS      $679            ; System call to 679
$98E    $83C3   XOR      V3, VC          ; V3 ^= VC
$990    $4E13   SNE      VE, #13         ; Skip if VE != 19
$992    $443A   SNE      V4, #3A         ; Skip if V4 != 58
$994    $D9EC   DRW      V9, VE, #C      ; Draw 12-byte sprite at V9, VE
$996    $28A5   CALL     $8A5            ; Call subroutine at 8A5
$998    $B9A6   JP       V0, $9A6        ; Jump to V0 + 9A6
$99A    $6C4B   LD       VC, #4B         ; Load 75 into VC
$99C    $6C34   LD       VC, #34         ; Load 52 into VC
$99E    $4F8F   SNE      VF, #8F         ; Skip if VF != 143
$9A0    $2393   CALL     $393            ; Call subroutine at 393
$9A2    $DA75   DRW      VA, V7, #5      ; Draw 5-byte sprite at VA, V7
$9A4    $1FC5   JP       $FC5            ; Jump to FC5
$9A6    $F777   UNKNOWN  F777            ; Unknown Fxxx instruction
$9A8    $D6C7   DRW      V6, VC, #7      ; Draw 7-byte sprite at V6, VC
$9AA    $379E   SE       V7, #9E         ; Skip if V7 == 158
$9AC    $E94B   UNKNOWN  $E94B           ; Unknown Exxx instruction
$9AE    $0204   SYS      $204            ; System call to 204
$9B0    $D432   DRW      V4, V3, #2      ; Draw 2-byte sprite at V4, V3
$9B2    $DDEB   DRW      VD, VE, #B      ; Draw 11-byte sprite at VD, VE
$9B4    $64D4   LD       V4, #D4         ; Load 212 into V4
$9B6    $9E6B   UNKNOWN  $9E6B           ; Unknown 9xxx instruction
$9B8    $00D8   SYS      $0D8            ; System call to 0D8
$9BA    $9CAE   UNKNOWN  $9CAE           ; Unknown 9xxx instruction
$9BC    $5787   UNKNOWN  $5787           ; Unknown 5xxx instruction
$9BE    $59E9   UNKNOWN  $59E9           ; Unknown 5xxx instruction
$9C0    $C6ED   RND      V6, #ED         ; V6 = random & ED
$9C2    $5294   UNKNOWN  $5294           ; Unknown 5xxx instruction
$9C4    $CD7B   RND      VD, #7B         ; VD = random & 7B
$9C6    $5DE5   UNKNOWN  $5DE5           ; Unknown 5xxx instruction
$9C8    $DCFB   DRW      VC, VF, #B      ; Draw 11-byte sprite at VC, VF
$9CA    $93EF   UNKNOWN  $93EF           ; Unknown 9xxx instruction
$9CC    $99A5   UNKNOWN  $99A5           ; Unknown 9xxx instruction
$9CE    $6B0A   LD       VB, #0A         ; Load 10 into VB
$9D0    $A838   LD       I, $838         ; Load 838 into I
$9D2    $8B40   LD       VB, V4          ; VB = V4
$9D4    $6FB8   LD       VF, #B8         ; Load 184 into VF
$9D6    $F1AA   UNKNOWN  F1AA            ; Unknown Fxxx instruction
$9D8    $5BF9   UNKNOWN  $5BF9           ; Unknown 5xxx instruction
$9DA    $AC06   LD       I, $C06         ; Load C06 into I
$9DC    $389C   SE       V8, #9C         ; Skip if V8 == 156
$9DE    $01C0   SYS      $1C0            ; System call to 1C0
$9E0    $2087   CALL     $087            ; Call subroutine at 087
$9E2    $E9D0   UNKNOWN  $E9D0           ; Unknown Exxx instruction
$9E4    $6404   LD       V4, #04         ; Load 4 into V4
$9E6    $F9A5   UNKNOWN  F9A5            ; Unknown Fxxx instruction
$9E8    $FDB1   UNKNOWN  FDB1            ; Unknown Fxxx instruction
$9EA    $0962   SYS      $962            ; System call to 962
$9EC    $1B50   JP       $B50            ; Jump to B50
$9EE    $E514   UNKNOWN  $E514           ; Unknown Exxx instruction
$9F0    $3124   SE       V1, #24         ; Skip if V1 == 36
$9F2    $92BD   UNKNOWN  $92BD           ; Unknown 9xxx instruction
$9F4    $51BF   UNKNOWN  $51BF           ; Unknown 5xxx instruction
$9F6    $E7B7   UNKNOWN  $E7B7           ; Unknown Exxx instruction
$9F8    $4261   SNE      V2, #61         ; Skip if V2 != 97
$9FA    $70CB   ADD      V0, #CB         ; Add 203 to V0
$9FC    $E051   UNKNOWN  $E051           ; Unknown Exxx instruction
$9FE    $0D53   SYS      $D53            ; System call to D53
$A00    $92D7   UNKNOWN  $92D7           ; Unknown 9xxx instruction
$A02    $7714   ADD      V7, #14         ; Add 20 to V7
$A04    $3151   SE       V1, #51         ; Skip if V1 == 81
$A06    $7759   ADD      V7, #59         ; Add 89 to V7
$A08    $C889   RND      V8, #89         ; V8 = random & 89
$A0A    $38D1   SE       V8, #D1         ; Skip if V8 == 209
$A0C    $7494   ADD      V4, #94         ; Add 148 to V4
$A0E    $3769   SE       V7, #69         ; Skip if V7 == 105
$A10    $C7A4   RND      V7, #A4         ; V7 = random & A4
$A12    $2985   CALL     $985            ; Call subroutine at 985
$A14    $EF37   UNKNOWN  $EF37           ; Unknown Exxx instruction
$A16    $76B4   ADD      V6, #B4         ; Add 180 to V6
$A18    $D903   DRW      V9, V0, #3      ; Draw 3-byte sprite at V9, V0
$A1A    $EA5F   UNKNOWN  $EA5F           ; Unknown Exxx instruction
$A1C    $6998   LD       V9, #98         ; Load 152 into V9
$A1E    $825F   UNKNOWN  825F            ; Unknown 8xxx instruction
$A20    $0F20   SYS      $F20            ; System call to F20
$A22    $F914   UNKNOWN  F914            ; Unknown Fxxx instruction
$A24    $D596   DRW      V5, V9, #6      ; Draw 6-byte sprite at V5, V9
$A26    $BAB8   JP       V0, $AB8        ; Jump to V0 + AB8
$A28    $1E8E   JP       $E8E            ; Jump to E8E
$A2A    $CF2D   RND      VF, #2D         ; VF = random & 2D
$A2C    $D093   DRW      V0, V9, #3      ; Draw 3-byte sprite at V0, V9
$A2E    $F49D   UNKNOWN  F49D            ; Unknown Fxxx instruction
$A30    $AA2A   LD       I, $A2A         ; Load A2A into I
$A32    $B388   JP       V0, $388        ; Jump to V0 + 388
$A34    $374D   SE       V7, #4D         ; Skip if V7 == 77
$A36    $73E4   ADD      V3, #E4         ; Add 228 to V3
$A38    $9BA0   SNE      VB, VA          ; Skip if VB != VA
$A3A    $5DB1   UNKNOWN  $5DB1           ; Unknown 5xxx instruction
$A3C    $18D6   JP       $8D6            ; Jump to 8D6
$A3E    $4807   SNE      V8, #07         ; Skip if V8 != 7
$A40    $81B2   AND      V1, VB          ; V1 &= VB
$A42    $9492   UNKNOWN  $9492           ; Unknown 9xxx instruction
$A44    $2D84   CALL     $D84            ; Call subroutine at D84
$A46    $A67E   LD       I, $67E         ; Load 67E into I
$A48    $099A   SYS      $99A            ; System call to 99A
$A4A    $1931   JP       $931            ; Jump to 931
$A4C    $01E8   SYS      $1E8            ; System call to 1E8
$A4E    $A0C5   LD       I, $0C5         ; Load 0C5 into I
$A50    $7832   ADD      V8, #32         ; Add 50 to V8
$A52    $1398   JP       $398            ; Jump to 398
$A54    $DBB3   DRW      VB, VB, #3      ; Draw 3-byte sprite at VB, VB
$A56    $D5BD   DRW      V5, VB, #D      ; Draw 13-byte sprite at V5, VB
$A58    $E3C0   UNKNOWN  $E3C0           ; Unknown Exxx instruction
$A5A    $1FF8   JP       $FF8            ; Jump to FF8
$A5C    $BAAC   JP       V0, $AAC        ; Jump to V0 + AAC
$A5E    $B128   JP       V0, $128        ; Jump to V0 + 128
$A60    $4B22   SNE      VB, #22         ; Skip if VB != 34
$A62    $FBED   UNKNOWN  FBED            ; Unknown Fxxx instruction
$A64    $1283   JP       $283            ; Jump to 283
$A66    $384D   SE       V8, #4D         ; Skip if V8 == 77
$A68    $71F0   ADD      V1, #F0         ; Add 240 to V1
$A6A    $A7CE   LD       I, $7CE         ; Load 7CE into I
$A6C    $F800   UNKNOWN  F800            ; Unknown Fxxx instruction
$A6E    $3BA1   SE       VB, #A1         ; Skip if VB == 161
$A70    $D527   DRW      V5, V2, #7      ; Draw 7-byte sprite at V5, V2
$A72    $14CF   JP       $4CF            ; Jump to 4CF
$A74    $77D6   ADD      V7, #D6         ; Add 214 to V7
$A76    $817C   UNKNOWN  817C            ; Unknown 8xxx instruction
$A78    $E74B   UNKNOWN  $E74B           ; Unknown Exxx instruction
$A7A    $CDB1   RND      VD, #B1         ; VD = random & B1
$A7C    $A749   LD       I, $749         ; Load 749 into I
$A7E    $C5FB   RND      V5, #FB         ; V5 = random & FB
$A80    $2F7F   CALL     $F7F            ; Call subroutine at F7F
$A82    $B4BD   JP       V0, $4BD        ; Jump to V0 + 4BD
$A84    $C151   RND      V1, #51         ; V1 = random & 51
$A86    $5466   UNKNOWN  $5466           ; Unknown 5xxx instruction
$A88    $8977   SUBN     V9, V7          ; V9 = V7 - V9, VF = !borrow
$A8A    $F735   UNKNOWN  F735            ; Unknown Fxxx instruction
$A8C    $BC9F   JP       V0, $C9F        ; Jump to V0 + C9F
$A8E    $4585   SNE      V5, #85         ; Skip if V5 != 133
$A90    $F9F4   UNKNOWN  F9F4            ; Unknown Fxxx instruction
$A92    $289D   CALL     $89D            ; Call subroutine at 89D
$A94    $81F1   OR       V1, VF          ; V1 |= VF
$A96    $6CE0   LD       VC, #E0         ; Load 224 into VC
$A98    $A6D3   LD       I, $6D3         ; Load 6D3 into I
$A9A    $A560   LD       I, $560         ; Load 560 into I
$A9C    $B508   JP       V0, $508        ; Jump to V0 + 508
$A9E    $943E   UNKNOWN  $943E           ; Unknown 9xxx instruction
$AA0    $F78F   UNKNOWN  F78F            ; Unknown Fxxx instruction
$AA2    $D472   DRW      V4, V7, #2      ; Draw 2-byte sprite at V4, V7
$AA4    $EF67   UNKNOWN  $EF67           ; Unknown Exxx instruction
$AA6    $280D   CALL     $80D            ; Call subroutine at 80D
$AA8    $4A77   SNE      VA, #77         ; Skip if VA != 119
$AAA    $2DF9   CALL     $DF9            ; Call subroutine at DF9
$AAC    $1FA0   JP       $FA0            ; Jump to FA0
$AAE    $6CBF   LD       VC, #BF         ; Load 191 into VC
$AB0    $6D76   LD       VD, #76         ; Load 118 into VD
$AB2    $E82D   UNKNOWN  $E82D           ; Unknown Exxx instruction
$AB4    $DEAA   DRW      VE, VA, #A      ; Draw 10-byte sprite at VE, VA
$AB6    $EBBD   UNKNOWN  $EBBD           ; Unknown Exxx instruction
$AB8    $A840   LD       I, $840         ; Load 840 into I
$ABA    $8351   OR       V3, V5          ; V3 |= V5
$ABC    $A74B   LD       I, $74B         ; Load 74B into I
$ABE    $D854   DRW      V8, V5, #4      ; Draw 4-byte sprite at V8, V5
$AC0    $07A1   SYS      $7A1            ; System call to 7A1
$AC2    $4FDC   SNE      VF, #DC         ; Skip if VF != 220
$AC4    $47E1   SNE      V7, #E1         ; Skip if V7 != 225
$AC6    $563B   UNKNOWN  $563B           ; Unknown 5xxx instruction
$AC8    $19BB   JP       $9BB            ; Jump to 9BB
$ACA    $C3D8   RND      V3, #D8         ; V3 = random & D8
$ACC    $0DE3   SYS      $DE3            ; System call to DE3
$ACE    $608F   LD       V0, #8F         ; Load 143 into V0
$AD0    $31CA   SE       V1, #CA         ; Skip if V1 == 202
$AD2    $0736   SYS      $736            ; System call to 736
$AD4    $79E9   ADD      V9, #E9         ; Add 233 to V9
$AD6    $9639   UNKNOWN  $9639           ; Unknown 9xxx instruction
$AD8    $550D   UNKNOWN  $550D           ; Unknown 5xxx instruction
$ADA    $E1A0   UNKNOWN  $E1A0           ; Unknown Exxx instruction
$ADC    $CF34   RND      VF, #34         ; VF = random & 34
$ADE    $640C   LD       V4, #0C         ; Load 12 into V4
$AE0    $37FD   SE       V7, #FD         ; Skip if V7 == 253
$AE2    $3737   SE       V7, #37         ; Skip if V7 == 55
$AE4    $B0C6   JP       V0, $0C6        ; Jump to V0 + 0C6
$AE6    $B712   JP       V0, $712        ; Jump to V0 + 712
$AE8    $03C9   SYS      $3C9            ; System call to 3C9
$AEA    $E747   UNKNOWN  $E747           ; Unknown Exxx instruction
$AEC    $8204   ADD      V2, V0          ; V2 += V0, VF = carry
$AEE    $5C02   UNKNOWN  $5C02           ; Unknown 5xxx instruction
$AF0    $37E1   SE       V7, #E1         ; Skip if V7 == 225
$AF2    $D3A2   DRW      V3, VA, #2      ; Draw 2-byte sprite at V3, VA
$AF4    $9B8F   UNKNOWN  $9B8F           ; Unknown 9xxx instruction
$AF6    $1CF9   JP       $CF9            ; Jump to CF9
$AF8    $F488   UNKNOWN  F488            ; Unknown Fxxx instruction
$AFA    $DE9F   DRW      VE, V9, #F      ; Draw 15-byte sprite at VE, V9
$AFC    $48F8   SNE      V8, #F8         ; Skip if V8 != 248
$AFE    $892A   UNKNOWN  892A            ; Unknown 8xxx instruction
$B00    $F3F0   UNKNOWN  F3F0            ; Unknown Fxxx instruction
$B02    $B2CA   JP       V0, $2CA        ; Jump to V0 + 2CA
$B04    $5481   UNKNOWN  $5481           ; Unknown 5xxx instruction
$B06    $177D   JP       $77D            ; Jump to 77D
$B08    $A2ED   LD       I, $2ED         ; Load 2ED into I
$B0A    $7933   ADD      V9, #33         ; Add 51 to V9
$B0C    $9056   UNKNOWN  $9056           ; Unknown 9xxx instruction
$B0E    $F667   UNKNOWN  F667            ; Unknown Fxxx instruction
$B10    $30AF   SE       V0, #AF         ; Skip if V0 == 175
$B12    $B765   JP       V0, $765        ; Jump to V0 + 765
$B14    $D121   DRW      V1, V2, #1      ; Draw 1-byte sprite at V1, V2
$B16    $5042   UNKNOWN  $5042           ; Unknown 5xxx instruction
$B18    $92CF   UNKNOWN  $92CF           ; Unknown 9xxx instruction
$B1A    $0E4C   SYS      $E4C            ; System call to E4C
$B1C    $CE66   RND      VE, #66         ; VE = random & 66
$B1E    $EF33   UNKNOWN  $EF33           ; Unknown Exxx instruction
$B20    $E676   UNKNOWN  $E676           ; Unknown Exxx instruction
$B22    $CFE8   RND      VF, #E8         ; VF = random & E8
$B24    $CD4D   RND      VD, #4D         ; VD = random & 4D
$B26    $A93C   LD       I, $93C         ; Load 93C into I
$B28    $8943   XOR      V9, V4          ; V9 ^= V4
$B2A    $C5FB   RND      V5, #FB         ; V5 = random & FB
$B2C    $FA6A   UNKNOWN  FA6A            ; Unknown Fxxx instruction
$B2E    $73FB   ADD      V3, #FB         ; Add 251 to V3
$B30    $5D8A   UNKNOWN  $5D8A           ; Unknown 5xxx instruction
$B32    $C267   RND      V2, #67         ; V2 = random & 67
$B34    $A540   LD       I, $540         ; Load 540 into I
$B36    $FF92   UNKNOWN  FF92            ; Unknown Fxxx instruction
$B38    $B1A9   JP       V0, $1A9        ; Jump to V0 + 1A9
$B3A    $FFA4   UNKNOWN  FFA4            ; Unknown Fxxx instruction
$B3C    $2E39   CALL     $E39            ; Call subroutine at E39
$B3E    $578D   UNKNOWN  $578D           ; Unknown 5xxx instruction
$B40    $232C   CALL     $32C            ; Call subroutine at 32C
$B42    $64DB   LD       V4, #DB         ; Load 219 into V4
$B44    $E189   UNKNOWN  $E189           ; Unknown Exxx instruction
$B46    $EE57   UNKNOWN  $EE57           ; Unknown Exxx instruction
$B48    $318F   SE       V1, #8F         ; Skip if V1 == 143
$B4A    $FA2B   UNKNOWN  FA2B            ; Unknown Fxxx instruction
$B4C    $51C4   UNKNOWN  $51C4           ; Unknown 5xxx instruction
$B4E    $87A1   OR       V7, VA          ; V7 |= VA
$B50    $5E4F   UNKNOWN  $5E4F           ; Unknown 5xxx instruction
$B52    $7DB8   ADD      VD, #B8         ; Add 184 to VD
$B54    $A9DB   LD       I, $9DB         ; Load 9DB into I
$B56    $FA42   UNKNOWN  FA42            ; Unknown Fxxx instruction
$B58    $2096   CALL     $096            ; Call subroutine at 096
$B5A    $C1A9   RND      V1, #A9         ; V1 = random & A9
$B5C    $C0B0   RND      V0, #B0         ; V0 = random & B0
$B5E    $ED41   UNKNOWN  $ED41           ; Unknown Exxx instruction
$B60    $EDF3   UNKNOWN  $EDF3           ; Unknown Exxx instruction
$B62    $808C   UNKNOWN  808C            ; Unknown 8xxx instruction
$B64    $857A   UNKNOWN  857A            ; Unknown 8xxx instruction
$B66    $0A84   SYS      $A84            ; System call to A84
$B68    $E02D   UNKNOWN  $E02D           ; Unknown Exxx instruction
$B6A    $A353   LD       I, $353         ; Load 353 into I
$B6C    $FC66   UNKNOWN  FC66            ; Unknown Fxxx instruction
$B6E    $8AE9   UNKNOWN  8AE9            ; Unknown 8xxx instruction
$B70    $99C3   UNKNOWN  $99C3           ; Unknown 9xxx instruction
$B72    $EC51   UNKNOWN  $EC51           ; Unknown Exxx instruction
$B74    $C292   RND      V2, #92         ; V2 = random & 92
$B76    $F251   UNKNOWN  F251            ; Unknown Fxxx instruction
$B78    $2259   CALL     $259            ; Call subroutine at 259
$B7A    $4021   SNE      V0, #21         ; Skip if V0 != 33
$B7C    $3512   SE       V5, #12         ; Skip if V5 == 18
$B7E    $4861   SNE      V8, #61         ; Skip if V8 != 97
$B80    $23B7   CALL     $3B7            ; Call subroutine at 3B7
$B82    $4FF6   SNE      VF, #F6         ; Skip if VF != 246
$B84    $A280   LD       I, $280         ; Load 280 into I
$B86    $5148   UNKNOWN  $5148           ; Unknown 5xxx instruction
$B88    $0CC3   SYS      $CC3            ; System call to CC3
$B8A    $77BB   ADD      V7, #BB         ; Add 187 to V7
$B8C    $9D15   UNKNOWN  $9D15           ; Unknown 9xxx instruction
$B8E    $3BF7   SE       VB, #F7         ; Skip if VB == 247
$B90    $B04B   JP       V0, $04B        ; Jump to V0 + 04B
$B92    $ED2F   UNKNOWN  $ED2F           ; Unknown Exxx instruction
$B94    $CB5A   RND      VB, #5A         ; VB = random & 5A
$B96    $C9D4   RND      V9, #D4         ; V9 = random & D4
$B98    $F39F   UNKNOWN  F39F            ; Unknown Fxxx instruction
$B9A    $7FE5   ADD      VF, #E5         ; Add 229 to VF
$B9C    $F4B5   UNKNOWN  F4B5            ; Unknown Fxxx instruction
$B9E    $4D36   SNE      VD, #36         ; Skip if VD != 54
$BA0    $1AC2   JP       $AC2            ; Jump to AC2
$BA2    $CE94   RND      VE, #94         ; VE = random & 94
$BA4    $CB13   RND      VB, #13         ; VB = random & 13
$BA6    $E792   UNKNOWN  $E792           ; Unknown Exxx instruction
$BA8    $F698   UNKNOWN  F698            ; Unknown Fxxx instruction
$BAA    $15C3   JP       $5C3            ; Jump to 5C3
$BAC    $0697   SYS      $697            ; System call to 697
$BAE    $6E48   LD       VE, #48         ; Load 72 into VE
$BB0    $95B6   UNKNOWN  $95B6           ; Unknown 9xxx instruction
$BB2    $0AB9   SYS      $AB9            ; System call to AB9
$BB4    $D293   DRW      V2, V9, #3      ; Draw 3-byte sprite at V2, V9
$BB6    $BF88   JP       V0, $F88        ; Jump to V0 + F88
$BB8    $558A   UNKNOWN  $558A           ; Unknown 5xxx instruction
$BBA    $375A   SE       V7, #5A         ; Skip if V7 == 90
$BBC    $75E8   ADD      V5, #E8         ; Add 232 to V5
$BBE    $7358   ADD      V3, #58         ; Add 88 to V3
$BC0    $6795   LD       V7, #95         ; Load 149 into V7
$BC2    $8C78   UNKNOWN  8C78            ; Unknown 8xxx instruction
$BC4    $A859   LD       I, $859         ; Load 859 into I
$BC6    $FDD0   UNKNOWN  FDD0            ; Unknown Fxxx instruction
$BC8    $59FA   UNKNOWN  $59FA           ; Unknown 5xxx instruction
$BCA    $91D4   UNKNOWN  $91D4           ; Unknown 9xxx instruction
$BCC    $3A7B   SE       VA, #7B         ; Skip if VA == 123
$BCE    $7A92   ADD      VA, #92         ; Add 146 to VA
$BD0    $4999   SNE      V9, #99         ; Skip if V9 != 153
$BD2    $5153   UNKNOWN  $5153           ; Unknown 5xxx instruction
$BD4    $AC54   LD       I, $C54         ; Load C54 into I
$BD6    $0758   SYS      $758            ; System call to 758
$BD8    $6758   LD       V7, #58         ; Load 88 into V7
$BDA    $C5B9   RND      V5, #B9         ; V5 = random & B9
$BDC    $C307   RND      V3, #07         ; V3 = random & 07
$BDE    $D4A3   DRW      V4, VA, #3      ; Draw 3-byte sprite at V4, VA
$BE0    $4BD4   SNE      VB, #D4         ; Skip if VB != 212
$BE2    $DC50   DRW      VC, V5, #0      ; Draw 0-byte sprite at VC, V5
$BE4    $B811   JP       V0, $811        ; Jump to V0 + 811
$BE6    $29FA   CALL     $9FA            ; Call subroutine at 9FA
$BE8    $4AD4   SNE      VA, #D4         ; Skip if VA != 212
$BEA    $21FD   CALL     $1FD            ; Call subroutine at 1FD
$BEC    $8179   UNKNOWN  8179            ; Unknown 8xxx instruction
$BEE    $7D03   ADD      VD, #03         ; Add 3 to VD
$BF0    $4BD3   SNE      VB, #D3         ; Skip if VB != 211
$BF2    $689C   LD       V8, #9C         ; Load 156 into V8
$BF4    $92E4   UNKNOWN  $92E4           ; Unknown 9xxx instruction
$BF6    $8E96   SHR      VE              ; VE >>= 1, VF = LSB
$BF8    $CA6F   RND      VA, #6F         ; VA = random & 6F
$BFA    $AD95   LD       I, $D95         ; Load D95 into I
$BFC    $005C   SYS      $05C            ; System call to 05C
$BFE    $45F8   SNE      V5, #F8         ; Skip if V5 != 248
$C00    $31F8   SE       V1, #F8         ; Skip if V1 == 248
$C02    $86F4   ADD      V6, VF          ; V6 += VF, VF = carry
$C04    $439F   SNE      V3, #9F         ; Skip if V3 != 159
$C06    $7B86   ADD      VB, #86         ; Add 134 to VB
$C08    $003B   SYS      $03B            ; System call to 03B
$C0A    $7B62   ADD      VB, #62         ; Add 98 to VB
$C0C    $D522   DRW      V5, V2, #2      ; Draw 2-byte sprite at V5, V2
$C0E    $86DA   UNKNOWN  86DA            ; Unknown 8xxx instruction
$C10    $E0A7   UNKNOWN  $E0A7           ; Unknown Exxx instruction
$C12    $955E   UNKNOWN  $955E           ; Unknown 9xxx instruction
$C14    $755E   ADD      V5, #5E         ; Add 94 to V5
$C16    $2AA5   CALL     $AA5            ; Call subroutine at AA5
$C18    $01B9   SYS      $1B9            ; System call to 1B9
$C1A    $1B89   JP       $B89            ; Jump to B89
$C1C    $4022   SNE      V0, #22         ; Skip if V0 != 34
$C1E    $8C3E   SHL      VC              ; VC <<= 1, VF = MSB
$C20    $F184   UNKNOWN  F184            ; Unknown Fxxx instruction
$C22    $B8A7   JP       V0, $8A7        ; Jump to V0 + 8A7
$C24    $5AFD   UNKNOWN  $5AFD           ; Unknown 5xxx instruction
$C26    $E8DB   UNKNOWN  $E8DB           ; Unknown Exxx instruction
$C28    $B17C   JP       V0, $17C        ; Jump to V0 + 17C
$C2A    $CF14   RND      VF, #14         ; VF = random & 14
$C2C    $9F69   UNKNOWN  $9F69           ; Unknown 9xxx instruction
$C2E    $CD61   RND      VD, #61         ; VD = random & 61
$C30    $A2BF   LD       I, $2BF         ; Load 2BF into I
$C32    $863D   UNKNOWN  863D            ; Unknown 8xxx instruction
$C34    $C55B   RND      V5, #5B         ; V5 = random & 5B
$C36    $15D2   JP       $5D2            ; Jump to 5D2
$C38    $75C9   ADD      V5, #C9         ; Add 201 to V5
$C3A    $699D   LD       V9, #9D         ; Load 157 into V9
$C3C    $2F75   CALL     $F75            ; Call subroutine at F75
$C3E    $1BD4   JP       $BD4            ; Jump to BD4
$C40    $981B   UNKNOWN  $981B           ; Unknown 9xxx instruction
$C42    $6086   LD       V0, #86         ; Load 134 into V0
$C44    $000C   SYS      $00C            ; System call to 00C
$C46    $0D8C   SYS      $D8C            ; System call to D8C
$C48    $5DB3   UNKNOWN  $5DB3           ; Unknown 5xxx instruction
$C4A    $E8A2   UNKNOWN  $E8A2           ; Unknown Exxx instruction
$C4C    $CB33   RND      VB, #33         ; VB = random & 33
$C4E    $9C60   SNE      VC, V6          ; Skip if VC != V6
$C50    $0329   SYS      $329            ; System call to 329
$C52    $6D9B   LD       VD, #9B         ; Load 155 into VD
$C54    $CE96   RND      VE, #96         ; VE = random & 96
$C56    $EEA2   UNKNOWN  $EEA2           ; Unknown Exxx instruction
$C58    $C1E8   RND      V1, #E8         ; V1 = random & E8
$C5A    $F8C6   UNKNOWN  F8C6            ; Unknown Fxxx instruction
$C5C    $979B   UNKNOWN  $979B           ; Unknown 9xxx instruction
$C5E    $A7DD   LD       I, $7DD         ; Load 7DD into I
$C60    $A41D   LD       I, $41D         ; Load 41D into I
$C62    $1611   JP       $611            ; Jump to 611
$C64    $C188   RND      V1, #88         ; V1 = random & 88
$C66    $5031   UNKNOWN  $5031           ; Unknown 5xxx instruction
$C68    $E976   UNKNOWN  $E976           ; Unknown Exxx instruction
$C6A    $FB50   UNKNOWN  FB50            ; Unknown Fxxx instruction
$C6C    $8EB1   OR       VE, VB          ; VE |= VB
$C6E    $781C   ADD      V8, #1C         ; Add 28 to V8
$C70    $4FD2   SNE      VF, #D2         ; Skip if VF != 210
$C72    $DBD9   DRW      VB, VD, #9      ; Draw 9-byte sprite at VB, VD
$C74    $F462   UNKNOWN  F462            ; Unknown Fxxx instruction
$C76    $4A8E   SNE      VA, #8E         ; Skip if VA != 142
$C78    $1280   JP       $280            ; Jump to 280
$C7A    $9B5B   UNKNOWN  $9B5B           ; Unknown 9xxx instruction
$C7C    $E4D9   UNKNOWN  $E4D9           ; Unknown Exxx instruction
$C7E    $6228   LD       V2, #28         ; Load 40 into V2
$C80    $855D   UNKNOWN  855D            ; Unknown 8xxx instruction
$C82    $A0F5   LD       I, $0F5         ; Load 0F5 into I
$C84    $98CB   UNKNOWN  $98CB           ; Unknown 9xxx instruction
$C86    $D32A   DRW      V3, V2, #A      ; Draw 10-byte sprite at V3, V2
$C88    $A7FD   LD       I, $7FD         ; Load 7FD into I
$C8A    $976C   UNKNOWN  $976C           ; Unknown 9xxx instruction
$C8C    $9110   SNE      V1, V1          ; Skip if V1 != V1
$C8E    $7AD4   ADD      VA, #D4         ; Add 212 to VA
$C90    $007A   SYS      $07A            ; System call to 07A
$C92    $8781   OR       V7, V8          ; V7 |= V8
$C94    $2040   CALL     $040            ; Call subroutine at 040
$C96    $C219   RND      V2, #19         ; V2 = random & 19
$C98    $DE64   DRW      VE, V6, #4      ; Draw 4-byte sprite at VE, V6
$C9A    $6FBC   LD       VF, #BC         ; Load 188 into VF
$C9C    $7C1D   ADD      VC, #1D         ; Add 29 to VC
$C9E    $C9EB   RND      V9, #EB         ; V9 = random & EB
$CA0    $EDF3   UNKNOWN  $EDF3           ; Unknown Exxx instruction
$CA2    $74D1   ADD      V4, #D1         ; Add 209 to V4
$CA4    $9A15   UNKNOWN  $9A15           ; Unknown 9xxx instruction
$CA6    $7716   ADD      V7, #16         ; Add 22 to V7
$CA8    $AFFA   LD       I, $FFA         ; Load FFA into I
$CAA    $885C   UNKNOWN  885C            ; Unknown 8xxx instruction
$CAC    $0245   SYS      $245            ; System call to 245
$CAE    $44CA   SNE      V4, #CA         ; Skip if V4 != 202
$CB0    $377E   SE       V7, #7E         ; Skip if V7 == 126
$CB2    $EDF2   UNKNOWN  $EDF2           ; Unknown Exxx instruction
$CB4    $11D9   JP       $1D9            ; Jump to 1D9
$CB6    $972C   UNKNOWN  $972C           ; Unknown 9xxx instruction
$CB8    $6E0E   LD       VE, #0E         ; Load 14 into VE
$CBA    $F739   UNKNOWN  F739            ; Unknown Fxxx instruction
$CBC    $CC2D   RND      VC, #2D         ; VC = random & 2D
$CBE    $9930   SNE      V9, V3          ; Skip if V9 != V3
$CC0    $008C   SYS      $08C            ; System call to 08C
$CC2    $46BB   SNE      V6, #BB         ; Skip if V6 != 187
$CC4    $3675   SE       V6, #75         ; Skip if V6 == 117
$CC6    $3EEA   SE       VE, #EA         ; Skip if VE == 234
$CC8    $A1BD   LD       I, $1BD         ; Load 1BD into I
$CCA    $DA7C   DRW      VA, V7, #C      ; Draw 12-byte sprite at VA, V7
$CCC    $347A   SE       V4, #7A         ; Skip if V4 == 122
$CCE    $CA77   RND      VA, #77         ; VA = random & 77
$CD0    $E7D0   UNKNOWN  $E7D0           ; Unknown Exxx instruction
$CD2    $8ECC   UNKNOWN  8ECC            ; Unknown 8xxx instruction
$CD4    $4531   SNE      V5, #31         ; Skip if V5 != 49
$CD6    $1740   JP       $740            ; Jump to 740
$CD8    $0AB2   SYS      $AB2            ; System call to AB2
$CDA    $FF6C   UNKNOWN  FF6C            ; Unknown Fxxx instruction
$CDC    $E868   UNKNOWN  $E868           ; Unknown Exxx instruction
$CDE    $F40A   LD       V4, K           ; Wait for key press, store in V4
$CE0    $B317   JP       V0, $317        ; Jump to V0 + 317
$CE2    $037E   SYS      $37E            ; System call to 37E
$CE4    $DFDB   DRW      VF, VD, #B      ; Draw 11-byte sprite at VF, VD
$CE6    $7F53   ADD      VF, #53         ; Add 83 to VF
$CE8    $A094   LD       I, $094         ; Load 094 into I
$CEA    $4178   SNE      V1, #78         ; Skip if V1 != 120
$CEC    $9933   UNKNOWN  $9933           ; Unknown 9xxx instruction
$CEE    $4667   SNE      V6, #67         ; Skip if V6 != 103
$CF0    $C6CC   RND      V6, #CC         ; V6 = random & CC
$CF2    $A4E2   LD       I, $4E2         ; Load 4E2 into I
$CF4    $24D1   CALL     $4D1            ; Call subroutine at 4D1
$CF6    $2219   CALL     $219            ; Call subroutine at 219
$CF8    $9B96   UNKNOWN  $9B96           ; Unknown 9xxx instruction
$CFA    $F748   UNKNOWN  F748            ; Unknown Fxxx instruction
$CFC    $A92D   LD       I, $92D         ; Load 92D into I
$CFE    $EA40   UNKNOWN  $EA40           ; Unknown Exxx instruction
$D00    $EC71   UNKNOWN  $EC71           ; Unknown Exxx instruction
$D02    $1BB9   JP       $BB9            ; Jump to BB9
$D04    $2A96   CALL     $A96            ; Call subroutine at A96
$D06    $7770   ADD      V7, #70         ; Add 112 to V7
$D08    $A121   LD       I, $121         ; Load 121 into I
$D0A    $BF97   JP       V0, $F97        ; Jump to V0 + F97
$D0C    $D013   DRW      V0, V1, #3      ; Draw 3-byte sprite at V0, V1
$D0E    $B444   JP       V0, $444        ; Jump to V0 + 444
$D10    $2DBD   CALL     $DBD            ; Call subroutine at DBD
$D12    $57FC   UNKNOWN  $57FC           ; Unknown 5xxx instruction
$D14    $EF98   UNKNOWN  $EF98           ; Unknown Exxx instruction
$D16    $259F   CALL     $59F            ; Call subroutine at 59F
$D18    $4254   SNE      V2, #54         ; Skip if V2 != 84
$D1A    $A2A1   LD       I, $2A1         ; Load 2A1 into I
$D1C    $257F   CALL     $57F            ; Call subroutine at 57F
$D1E    $A201   LD       I, $201         ; Load 201 into I
$D20    $A324   LD       I, $324         ; Load 324 into I
$D22    $CB52   RND      VB, #52         ; VB = random & 52
$D24    $729E   ADD      V2, #9E         ; Add 158 to V2
$D26    $B15F   JP       V0, $15F        ; Jump to V0 + 15F
$D28    $CDE8   RND      VD, #E8         ; VD = random & E8
$D2A    $3726   SE       V7, #26         ; Skip if V7 == 38
$D2C    $92B1   UNKNOWN  $92B1           ; Unknown 9xxx instruction
$D2E    $7A83   ADD      VA, #83         ; Add 131 to VA
$D30    $6833   LD       V8, #33         ; Load 51 into V8
$D32    $79FC   ADD      V9, #FC         ; Add 252 to V9
$D34    $3EA8   SE       VE, #A8         ; Skip if VE == 168
$D36    $E03D   UNKNOWN  $E03D           ; Unknown Exxx instruction
$D38    $24D5   CALL     $4D5            ; Call subroutine at 4D5
$D3A    $D8C0   DRW      V8, VC, #0      ; Draw 0-byte sprite at V8, VC
$D3C    $2D30   CALL     $D30            ; Call subroutine at D30
$D3E    $80B5   SUB      V0, VB          ; V0 -= VB, VF = !borrow
$D40    $A273   LD       I, $273         ; Load 273 into I
$D42    $E3D8   UNKNOWN  $E3D8           ; Unknown Exxx instruction
$D44    $6F4B   LD       VF, #4B         ; Load 75 into VF
$D46    $63D9   LD       V3, #D9         ; Load 217 into V3
$D48    $A2A2   LD       I, $2A2         ; Load 2A2 into I
$D4A    $202D   CALL     $02D            ; Call subroutine at 02D
$D4C    $AD63   LD       I, $D63         ; Load D63 into I
$D4E    $441A   SNE      V4, #1A         ; Skip if V4 != 26
$D50    $A4BE   LD       I, $4BE         ; Load 4BE into I
$D52    $9A5C   UNKNOWN  $9A5C           ; Unknown 9xxx instruction
$D54    $0E33   SYS      $E33            ; System call to E33
$D56    $C592   RND      V5, #92         ; V5 = random & 92
$D58    $8F10   LD       VF, V1          ; VF = V1
$D5A    $66EF   LD       V6, #EF         ; Load 239 into V6
$D5C    $3CAA   SE       VC, #AA         ; Skip if VC == 170
$D5E    $4E99   SNE      VE, #99         ; Skip if VE != 153
$D60    $4413   SNE      V4, #13         ; Skip if V4 != 19
$D62    $9F5C   UNKNOWN  $9F5C           ; Unknown 9xxx instruction
$D64    $FBC4   UNKNOWN  FBC4            ; Unknown Fxxx instruction
$D66    $4DC4   SNE      VD, #C4         ; Skip if VD != 196
$D68    $2D20   CALL     $D20            ; Call subroutine at D20
$D6A    $2499   CALL     $499            ; Call subroutine at 499
$D6C    $96D0   SNE      V6, VD          ; Skip if V6 != VD
$D6E    $966D   UNKNOWN  $966D           ; Unknown 9xxx instruction
$D70    $828A   UNKNOWN  828A            ; Unknown 8xxx instruction
$D72    $9D2B   UNKNOWN  $9D2B           ; Unknown 9xxx instruction
$D74    $0314   SYS      $314            ; System call to 314
$D76    $6AFA   LD       VA, #FA         ; Load 250 into VA
$D78    $8FD8   UNKNOWN  8FD8            ; Unknown 8xxx instruction
$D7A    $DD20   DRW      VD, V2, #0      ; Draw 0-byte sprite at VD, V2
$D7C    $F6E0   UNKNOWN  F6E0            ; Unknown Fxxx instruction
$D7E    $BDC4   JP       V0, $DC4        ; Jump to V0 + DC4
$D80    $4FAB   SNE      VF, #AB         ; Skip if VF != 171
$D82    $3C88   SE       VC, #88         ; Skip if VC == 136
$D84    $1857   JP       $857            ; Jump to 857
$D86    $72C2   ADD      V2, #C2         ; Add 194 to V2
$D88    $98BA   UNKNOWN  $98BA           ; Unknown 9xxx instruction
$D8A    $A93A   LD       I, $93A         ; Load 93A into I
$D8C    $8269   UNKNOWN  8269            ; Unknown 8xxx instruction
$D8E    $BC00   JP       V0, $C00        ; Jump to V0 + C00
$D90    $CE03   RND      VE, #03         ; VE = random & 03
$D92    $602F   LD       V0, #2F         ; Load 47 into V0
$D94    $1CAE   JP       $CAE            ; Jump to CAE
$D96    $C754   RND      V7, #54         ; V7 = random & 54
$D98    $4F6F   SNE      VF, #6F         ; Skip if VF != 111
$D9A    $AE71   LD       I, $E71         ; Load E71 into I
$D9C    $ED83   UNKNOWN  $ED83           ; Unknown Exxx instruction
$D9E    $9FC0   SNE      VF, VC          ; Skip if VF != VC
$DA0    $4D78   SNE      VD, #78         ; Skip if VD != 120
$DA2    $587C   UNKNOWN  $587C           ; Unknown 5xxx instruction
$DA4    $BD7F   JP       V0, $D7F        ; Jump to V0 + D7F
$DA6    $8F0E   SHL      VF              ; VF <<= 1, VF = MSB
$DA8    $C54A   RND      V5, #4A         ; V5 = random & 4A
$DAA    $2472   CALL     $472            ; Call subroutine at 472
$DAC    $CF93   RND      VF, #93         ; VF = random & 93
$DAE    $F561   UNKNOWN  F561            ; Unknown Fxxx instruction
$DB0    $265B   CALL     $65B            ; Call subroutine at 65B
$DB2    $BE9D   JP       V0, $E9D        ; Jump to V0 + E9D
$DB4    $4B56   SNE      VB, #56         ; Skip if VB != 86
$DB6    $57B8   UNKNOWN  $57B8           ; Unknown 5xxx instruction
$DB8    $65D3   LD       V5, #D3         ; Load 211 into V5
$DBA    $CE4B   RND      VE, #4B         ; VE = random & 4B
$DBC    $FC65   LD       VC, [I]         ; Load V0-VC from I
$DBE    $3353   SE       V3, #53         ; Skip if V3 == 83
$DC0    $AB93   LD       I, $B93         ; Load B93 into I
$DC2    $BE14   JP       V0, $E14        ; Jump to V0 + E14
$DC4    $3490   SE       V4, #90         ; Skip if V4 == 144
$DC6    $F245   UNKNOWN  F245            ; Unknown Fxxx instruction
$DC8    $95D4   UNKNOWN  $95D4           ; Unknown 9xxx instruction
$DCA    $F1D0   UNKNOWN  F1D0            ; Unknown Fxxx instruction
$DCC    $5B69   UNKNOWN  $5B69           ; Unknown 5xxx instruction
$DCE    $4341   SNE      V3, #41         ; Skip if V3 != 65
$DD0    $EDDC   UNKNOWN  $EDDC           ; Unknown Exxx instruction
$DD2    $01AD   SYS      $1AD            ; System call to 1AD
$DD4    $2F8B   CALL     $F8B            ; Call subroutine at F8B
$DD6    $D472   DRW      V4, V7, #2      ; Draw 2-byte sprite at V4, V7
$DD8    $B13F   JP       V0, $13F        ; Jump to V0 + 13F
$DDA    $1367   JP       $367            ; Jump to 367
$DDC    $94DB   UNKNOWN  $94DB           ; Unknown 9xxx instruction
$DDE    $B69D   JP       V0, $69D        ; Jump to V0 + 69D
$DE0    $167B   JP       $67B            ; Jump to 67B
$DE2    $17EB   JP       $7EB            ; Jump to 7EB
$DE4    $FC3D   UNKNOWN  FC3D            ; Unknown Fxxx instruction
$DE6    $AED8   LD       I, $ED8         ; Load ED8 into I
$DE8    $41D4   SNE      V1, #D4         ; Skip if V1 != 212
$DEA    $005C   SYS      $05C            ; System call to 05C
$DEC    $33F8   SE       V3, #F8         ; Skip if V3 == 248
$DEE    $661E   LD       V6, #1E         ; Load 30 into V6
$DF0    $9027   UNKNOWN  $9027           ; Unknown 9xxx instruction
$DF2    $FB5F   UNKNOWN  FB5F            ; Unknown Fxxx instruction
$DF4    $921C   UNKNOWN  $921C           ; Unknown 9xxx instruction
$DF6    $EAE0   UNKNOWN  $EAE0           ; Unknown Exxx instruction
$DF8    $4B52   SNE      VB, #52         ; Skip if VB != 82
$DFA    $D901   DRW      V9, V0, #1      ; Draw 1-byte sprite at V9, V0
$DFC    $44E8   SNE      V4, #E8         ; Skip if V4 != 232
$DFE    $2AB1   CALL     $AB1            ; Call subroutine at AB1
$E00    $1C18   JP       $C18            ; Jump to C18
$E02    $114B   JP       $14B            ; Jump to 14B
$E04    $B92E   JP       V0, $92E        ; Jump to V0 + 92E
$E06    $EA7B   UNKNOWN  $EA7B           ; Unknown Exxx instruction
$E08    $F26C   UNKNOWN  F26C            ; Unknown Fxxx instruction
$E0A    $C054   RND      V0, #54         ; V0 = random & 54
$E0C    $F992   UNKNOWN  F992            ; Unknown Fxxx instruction
$E0E    $E22D   UNKNOWN  $E22D           ; Unknown Exxx instruction
$E10    $B9F4   JP       V0, $9F4        ; Jump to V0 + 9F4
$E12    $E20A   UNKNOWN  $E20A           ; Unknown Exxx instruction
$E14    $FF3A   UNKNOWN  FF3A            ; Unknown Fxxx instruction
$E16    $D673   DRW      V6, V7, #3      ; Draw 3-byte sprite at V6, V7
$E18    $C57A   RND      V5, #7A         ; V5 = random & 7A
$E1A    $75C3   ADD      V5, #C3         ; Add 195 to V5
$E1C    $DA0C   DRW      VA, V0, #C      ; Draw 12-byte sprite at VA, V0
$E1E    $BA98   JP       V0, $A98        ; Jump to V0 + A98
$E20    $89C0   LD       V9, VC          ; V9 = VC
$E22    $251E   CALL     $51E            ; Call subroutine at 51E
$E24    $E11E   UNKNOWN  $E11E           ; Unknown Exxx instruction
$E26    $D3B9   DRW      V3, VB, #9      ; Draw 9-byte sprite at V3, VB
$E28    $0BF9   SYS      $BF9            ; System call to BF9
$E2A    $7E15   ADD      VE, #15         ; Add 21 to VE
$E2C    $8157   SUBN     V1, V5          ; V1 = V5 - V1, VF = !borrow
$E2E    $38EE   SE       V8, #EE         ; Skip if V8 == 238
$E30    $A79E   LD       I, $79E         ; Load 79E into I
$E32    $A45C   LD       I, $45C         ; Load 45C into I
$E34    $D59F   DRW      V5, V9, #F      ; Draw 15-byte sprite at V5, V9
$E36    $EF80   UNKNOWN  $EF80           ; Unknown Exxx instruction
$E38    $3745   SE       V7, #45         ; Skip if V7 == 69
$E3A    $2F4D   CALL     $F4D            ; Call subroutine at F4D
$E3C    $5709   UNKNOWN  $5709           ; Unknown 5xxx instruction
$E3E    $0D44   SYS      $D44            ; System call to D44
$E40    $7927   ADD      V9, #27         ; Add 39 to V9
$E42    $E308   UNKNOWN  $E308           ; Unknown Exxx instruction
$E44    $B41A   JP       V0, $41A        ; Jump to V0 + 41A
$E46    $8F1A   UNKNOWN  8F1A            ; Unknown 8xxx instruction
$E48    $39FC   SE       V9, #FC         ; Skip if V9 == 252
$E4A    $519D   UNKNOWN  $519D           ; Unknown 5xxx instruction
$E4C    $202B   CALL     $02B            ; Call subroutine at 02B
$E4E    $9212   UNKNOWN  $9212           ; Unknown 9xxx instruction
$E50    $2FFB   CALL     $FFB            ; Call subroutine at FFB
$E52    $1FCF   JP       $FCF            ; Jump to FCF
$E54    $E2DF   UNKNOWN  $E2DF           ; Unknown Exxx instruction
$E56    $1A6E   JP       $A6E            ; Jump to A6E
$E58    $700F   ADD      V0, #0F         ; Add 15 to V0
$E5A    $901D   UNKNOWN  $901D           ; Unknown 9xxx instruction
$E5C    $1FE5   JP       $FE5            ; Jump to FE5
$E5E    $3D43   SE       VD, #43         ; Skip if VD == 67
$E60    $A22E   LD       I, $22E         ; Load 22E into I
$E62    $9498   UNKNOWN  $9498           ; Unknown 9xxx instruction
$E64    $0E07   SYS      $E07            ; System call to E07
$E66    $A76C   LD       I, $76C         ; Load 76C into I
$E68    $185E   JP       $85E            ; Jump to 85E
$E6A    $0FDA   SYS      $FDA            ; System call to FDA
$E6C    $8D09   UNKNOWN  8D09            ; Unknown 8xxx instruction
$E6E    $617A   LD       V1, #7A         ; Load 122 into V1
$E70    $6AE1   LD       VA, #E1         ; Load 225 into VA
$E72    $30C3   SE       V0, #C3         ; Skip if V0 == 195
$E74    $8109   UNKNOWN  8109            ; Unknown 8xxx instruction
$E76    $1B4A   JP       $B4A            ; Jump to B4A
$E78    $FD68   UNKNOWN  FD68            ; Unknown Fxxx instruction
$E7A    $4B39   SNE      VB, #39         ; Skip if VB != 57
$E7C    $0D3B   SYS      $D3B            ; System call to D3B
$E7E    $94F5   UNKNOWN  $94F5           ; Unknown 9xxx instruction
$E80    $D2A3   DRW      V2, VA, #3      ; Draw 3-byte sprite at V2, VA
$E82    $1035   JP       $035            ; Jump to 035
$E84    $7BBE   ADD      VB, #BE         ; Add 190 to VB
$E86    $F1C2   UNKNOWN  F1C2            ; Unknown Fxxx instruction
$E88    $F718   LD       ST, V7          ; Sound timer = V7
$E8A    $1191   JP       $191            ; Jump to 191
$E8C    $A65F   LD       I, $65F         ; Load 65F into I
$E8E    $5BF4   UNKNOWN  $5BF4           ; Unknown 5xxx instruction
$E90    $7B0E   ADD      VB, #0E         ; Add 14 to VB
$E92    $801C   UNKNOWN  801C            ; Unknown 8xxx instruction
$E94    $6412   LD       V4, #12         ; Load 18 into V4
$E96    $B15A   JP       V0, $15A        ; Jump to V0 + 15A
$E98    $EE70   UNKNOWN  $EE70           ; Unknown Exxx instruction
$E9A    $414E   SNE      V1, #4E         ; Skip if V1 != 78
$E9C    $E6B0   UNKNOWN  $E6B0           ; Unknown Exxx instruction
$E9E    $E645   UNKNOWN  $E645           ; Unknown Exxx instruction
$EA0    $42D6   SNE      V2, #D6         ; Skip if V2 != 214
$EA2    $F491   UNKNOWN  F491            ; Unknown Fxxx instruction
$EA4    $7F18   ADD      VF, #18         ; Add 24 to VF
$EA6    $F4EB   UNKNOWN  F4EB            ; Unknown Fxxx instruction
$EA8    $A56F   LD       I, $56F         ; Load 56F into I
$EAA    $D181   DRW      V1, V8, #1      ; Draw 1-byte sprite at V1, V8
$EAC    $FF49   UNKNOWN  FF49            ; Unknown Fxxx instruction
$EAE    $2B41   CALL     $B41            ; Call subroutine at B41
$EB0    $1466   JP       $466            ; Jump to 466
$EB2    $43BB   SNE      V3, #BB         ; Skip if V3 != 187
$EB4    $F41F   UNKNOWN  F41F            ; Unknown Fxxx instruction
$EB6    $19E6   JP       $9E6            ; Jump to 9E6
$EB8    $0E09   SYS      $E09            ; System call to E09
$EBA    $5C95   UNKNOWN  $5C95           ; Unknown 5xxx instruction
$EBC    $7E35   ADD      VE, #35         ; Add 53 to VE
$EBE    $51EC   UNKNOWN  $51EC           ; Unknown 5xxx instruction
$EC0    $804B   UNKNOWN  804B            ; Unknown 8xxx instruction
$EC2    $CCB8   RND      VC, #B8         ; VC = random & B8
$EC4    $A862   LD       I, $862         ; Load 862 into I
$EC6    $C569   RND      V5, #69         ; V5 = random & 69
$EC8    $5352   UNKNOWN  $5352           ; Unknown 5xxx instruction
$ECA    $C094   RND      V0, #94         ; V0 = random & 94
$ECC    $8091   OR       V0, V9          ; V0 |= V9
$ECE    $06AD   SYS      $6AD            ; System call to 6AD
$ED0    $7790   ADD      V7, #90         ; Add 144 to V7
$ED2    $EE50   UNKNOWN  $EE50           ; Unknown Exxx instruction
$ED4    $2432   CALL     $432            ; Call subroutine at 432
$ED6    $69D9   LD       V9, #D9         ; Load 217 into V9
$ED8    $708F   ADD      V0, #8F         ; Add 143 to V0
$EDA    $88D5   SUB      V8, VD          ; V8 -= VD, VF = !borrow
$EDC    $C15C   RND      V1, #5C         ; V1 = random & 5C
$EDE    $9AB7   UNKNOWN  $9AB7           ; Unknown 9xxx instruction
$EE0    $8BD3   XOR      VB, VD          ; VB ^= VD
$EE2    $017D   SYS      $17D            ; System call to 17D
$EE4    $A1A5   LD       I, $1A5         ; Load 1A5 into I
$EE6    $BCBC   JP       V0, $CBC        ; Jump to V0 + CBC
$EE8    $0788   SYS      $788            ; System call to 788
$EEA    $9EE8   UNKNOWN  $9EE8           ; Unknown 9xxx instruction
$EEC    $5D65   UNKNOWN  $5D65           ; Unknown 5xxx instruction
$EEE    $2F6F   CALL     $F6F            ; Call subroutine at F6F
$EF0    $6DAE   LD       VD, #AE         ; Load 174 into VD
$EF2    $7D3C   ADD      VD, #3C         ; Add 60 to VD
$EF4    $BC6B   JP       V0, $C6B        ; Jump to V0 + C6B
$EF6    $0CE6   SYS      $CE6            ; System call to CE6
$EF8    $BB23   JP       V0, $B23        ; Jump to V0 + B23
$EFA    $20D3   CALL     $0D3            ; Call subroutine at 0D3
$EFC    $BF59   JP       V0, $F59        ; Jump to V0 + F59
$EFE    $4DE4   SNE      VD, #E4         ; Skip if VD != 228
$F00    $E35B   UNKNOWN  $E35B           ; Unknown Exxx instruction
$F02    $AAAE   LD       I, $AAE         ; Load AAE into I
$F04    $D89C   DRW      V8, V9, #C      ; Draw 12-byte sprite at V8, V9
$F06    $C540   RND      V5, #40         ; V5 = random & 40
$F08    $6949   LD       V9, #49         ; Load 73 into V9
$F0A    $2B1C   CALL     $B1C            ; Call subroutine at B1C
$F0C    $CA19   RND      VA, #19         ; VA = random & 19
$F0E    $05FE   SYS      $5FE            ; System call to 5FE
$F10    $DF3F   DRW      VF, V3, #F      ; Draw 15-byte sprite at VF, V3
$F12    $974F   UNKNOWN  $974F           ; Unknown 9xxx instruction
$F14    $8670   LD       V6, V7          ; V6 = V7
$F16    $4182   SNE      V1, #82         ; Skip if V1 != 130
$F18    $3AFC   SE       VA, #FC         ; Skip if VA == 252
$F1A    $F806   UNKNOWN  F806            ; Unknown Fxxx instruction
$F1C    $57DB   UNKNOWN  $57DB           ; Unknown 5xxx instruction
$F1E    $A774   LD       I, $774         ; Load 774 into I
$F20    $D3AD   DRW      V3, VA, #D      ; Draw 13-byte sprite at V3, VA
$F22    $2976   CALL     $976            ; Call subroutine at 976
$F24    $BAB1   JP       V0, $AB1        ; Jump to V0 + AB1
$F26    $CCC4   RND      VC, #C4         ; VC = random & C4
$F28    $8E9A   UNKNOWN  8E9A            ; Unknown 8xxx instruction
$F2A    $9868   UNKNOWN  $9868           ; Unknown 9xxx instruction
$F2C    $83EB   UNKNOWN  83EB            ; Unknown 8xxx instruction
$F2E    $DA4C   DRW      VA, V4, #C      ; Draw 12-byte sprite at VA, V4
$F30    $5FCD   UNKNOWN  $5FCD           ; Unknown 5xxx instruction
$F32    $7DAE   ADD      VD, #AE         ; Add 174 to VD
$F34    $1B66   JP       $B66            ; Jump to B66
$F36    $4C37   SNE      VC, #37         ; Skip if VC != 55
$F38    $5B69   UNKNOWN  $5B69           ; Unknown 5xxx instruction
$F3A    $69AA   LD       V9, #AA         ; Load 170 into V9
$F3C    $6C1D   LD       VC, #1D         ; Load 29 into VC
$F3E    $A871   LD       I, $871         ; Load 871 into I
$F40    $6496   LD       V4, #96         ; Load 150 into V4
$F42    $87D5   SUB      V7, VD          ; V7 -= VD, VF = !borrow
$F44    $DB5F   DRW      VB, V5, #F      ; Draw 15-byte sprite at VB, V5
$F46    $54A3   UNKNOWN  $54A3           ; Unknown 5xxx instruction
$F48    $DEB4   DRW      VE, VB, #4      ; Draw 4-byte sprite at VE, VB
$F4A    $03FC   SYS      $3FC            ; System call to 3FC
$F4C    $B3E9   JP       V0, $3E9        ; Jump to V0 + 3E9
$F4E    $F6C0   UNKNOWN  F6C0            ; Unknown Fxxx instruction
$F50    $3985   SE       V9, #85         ; Skip if V9 == 133
$F52    $3652   SE       V6, #52         ; Skip if V6 == 82
$F54    $8A81   OR       VA, V8          ; VA |= V8
$F56    $06C0   SYS      $6C0            ; System call to 6C0
$F58    $C9EF   RND      V9, #EF         ; V9 = random & EF
$F5A    $BC72   JP       V0, $C72        ; Jump to V0 + C72
$F5C    $7C4B   ADD      VC, #4B         ; Add 75 to VC
$F5E    $0D64   SYS      $D64            ; System call to D64
$F60    $4369   SNE      V3, #69         ; Skip if V3 != 105
$F62    $EC20   UNKNOWN  $EC20           ; Unknown Exxx instruction
$F64    $4F2B   SNE      VF, #2B         ; Skip if VF != 43
$F66    $D6E6   DRW      V6, VE, #6      ; Draw 6-byte sprite at V6, VE
$F68    $6747   LD       V7, #47         ; Load 71 into V7
$F6A    $6FE9   LD       VF, #E9         ; Load 233 into VF
$F6C    $41D0   SNE      V1, #D0         ; Skip if V1 != 208
$F6E    $A991   LD       I, $991         ; Load 991 into I
$F70    $C34E   RND      V3, #4E         ; V3 = random & 4E
$F72    $430E   SNE      V3, #0E         ; Skip if V3 != 14
$F74    $C882   RND      V8, #82         ; V8 = random & 82
$F76    $DAB7   DRW      VA, VB, #7      ; Draw 7-byte sprite at VA, VB
$F78    $6D35   LD       VD, #35         ; Load 53 into VD
$F7A    $9DB4   UNKNOWN  $9DB4           ; Unknown 9xxx instruction
$F7C    $B75C   JP       V0, $75C        ; Jump to V0 + 75C
$F7E    $7897   ADD      V8, #97         ; Add 151 to V8
$F80    $FBBA   UNKNOWN  FBBA            ; Unknown Fxxx instruction
$F82    $FC06   UNKNOWN  FC06            ; Unknown Fxxx instruction
$F84    $DA56   DRW      VA, V5, #6      ; Draw 6-byte sprite at VA, V5
$F86    $E3C7   UNKNOWN  $E3C7           ; Unknown Exxx instruction
$F88    $3E93   SE       VE, #93         ; Skip if VE == 147
$F8A    $6FDE   LD       VF, #DE         ; Load 222 into VF
$F8C    $C55E   RND      V5, #5E         ; V5 = random & 5E
$F8E    $AF2B   LD       I, $F2B         ; Load F2B into I
$F90    $6BC4   LD       VB, #C4         ; Load 196 into VB
$F92    $C233   RND      V2, #33         ; V2 = random & 33
$F94    $9D7A   UNKNOWN  $9D7A           ; Unknown 9xxx instruction
$F96    $99D8   UNKNOWN  $99D8           ; Unknown 9xxx instruction
$F98    $5A1E   UNKNOWN  $5A1E           ; Unknown 5xxx instruction
$F9A    $B259   JP       V0, $259        ; Jump to V0 + 259
$F9C    $AD7C   LD       I, $D7C         ; Load D7C into I
$F9E    $D468   DRW      V4, V6, #8      ; Draw 8-byte sprite at V4, V6
$FA0    $8605   SUB      V6, V0          ; V6 -= V0, VF = !borrow
$FA2    $4136   SNE      V1, #36         ; Skip if V1 != 54
$FA4    $6852   LD       V8, #52         ; Load 82 into V8
$FA6    $B4DC   JP       V0, $4DC        ; Jump to V0 + 4DC
$FA8    $7089   ADD      V0, #89         ; Add 137 to V0
$FAA    $81B5   SUB      V1, VB          ; V1 -= VB, VF = !borrow
$FAC    $AEC7   LD       I, $EC7         ; Load EC7 into I
$FAE    $24D6   CALL     $4D6            ; Call subroutine at 4D6
$FB0    $592B   UNKNOWN  $592B           ; Unknown 5xxx instruction
$FB2    $E197   UNKNOWN  $E197           ; Unknown Exxx instruction
$FB4    $34C7   SE       V4, #C7         ; Skip if V4 == 199
$FB6    $089F   SYS      $89F            ; System call to 89F
$FB8    $CDB8   RND      VD, #B8         ; VD = random & B8
$FBA    $11E3   JP       $1E3            ; Jump to 1E3
$FBC    $BE91   JP       V0, $E91        ; Jump to V0 + E91
$FBE    $8210   LD       V2, V1          ; V2 = V1
$FC0    $EC24   UNKNOWN  $EC24           ; Unknown Exxx instruction
$FC2    $7D3C   ADD      VD, #3C         ; Add 60 to VD
$FC4    $C6B4   RND      V6, #B4         ; V6 = random & B4
$FC6    $7A53   ADD      VA, #53         ; Add 83 to VA
$FC8    $88E8   UNKNOWN  88E8            ; Unknown 8xxx instruction
$FCA    $3D86   SE       VD, #86         ; Skip if VD == 134
$FCC    $035B   SYS      $35B            ; System call to 35B
$FCE    $1429   JP       $429            ; Jump to 429
$FD0    $F39C   UNKNOWN  F39C            ; Unknown Fxxx instruction
$FD2    $062A   SYS      $62A            ; System call to 62A
$FD4    $D06A   DRW      V0, V6, #A      ; Draw 10-byte sprite at V0, V6
$FD6    $57FE   UNKNOWN  $57FE           ; Unknown 5xxx instruction
$FD8    $CC6A   RND      VC, #6A         ; VC = random & 6A
$FDA    $8CB8   UNKNOWN  8CB8            ; Unknown 8xxx instruction
$FDC    $C210   RND      V2, #10         ; V2 = random & 10
$FDE    $855F   UNKNOWN  855F            ; Unknown 8xxx instruction
$FE0    $6290   LD       V2, #90         ; Load 144 into V2
$FE2    $C4D5   RND      V4, #D5         ; V4 = random & D5
$FE4    $7BC4   ADD      VB, #C4         ; Add 196 to VB
$FE6    $7C4B   ADD      VC, #4B         ; Add 75 to VC
$FE8    $7B52   ADD      VB, #52         ; Add 82 to VB
$FEA    $7902   ADD      V9, #02         ; Add 2 to V9
$FEC    $1175   JP       $175            ; Jump to 175
$FEE    $DC89   DRW      VC, V8, #9      ; Draw 9-byte sprite at VC, V8
$FF0    $562E   UNKNOWN  $562E           ; Unknown 5xxx instruction
$FF2    $421C   SNE      V2, #1C         ; Skip if V2 != 28
$FF4    $3668   SE       V6, #68         ; Skip if V6 == 104
$FF6    $5DE3   UNKNOWN  $5DE3           ; Unknown 5xxx instruction
$FF8    $3941   SE       V9, #41         ; Skip if V9 == 65
$FFA    $53DD   UNKNOWN  $53DD           ; Unknown 5xxx instruction
$FFC    $E534   UNKNOWN  $E534           ; Unknown Exxx instruction
$FFE    $953F   UNKNOWN  $953F           ; Unknown 9xxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 473 (26.4%)
  LD      : 251 (14.0%)
  JP      : 209 (11.7%)
  RND     : 130 ( 7.3%)
  SNE     : 128 ( 7.1%)
  ADD     : 121 ( 6.8%)
  SYS     : 117 ( 6.5%)
  SE      : 109 ( 6.1%)
  DRW     : 108 ( 6.0%)
  CALL    : 104 ( 5.8%)
  OR      :  13 ( 0.7%)
  SUB     :   8 ( 0.4%)
  SHL     :   7 ( 0.4%)
  XOR     :   6 ( 0.3%)
  AND     :   3 ( 0.2%)
  SUBN    :   3 ( 0.2%)
  SHR     :   2 ( 0.1%)

Memory Operations: 372 (20.8%)
Arithmetic Operations: 154 (8.6%)
