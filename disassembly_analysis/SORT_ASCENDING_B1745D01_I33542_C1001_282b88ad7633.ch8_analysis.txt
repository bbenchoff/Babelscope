
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B1745D01_I33542_C1001_282b88ad7633.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 1745
Instance: 33542
Direction: ascending
Final Array: [2, 3, 5, 45, 113, 207, 223, 224]
Operations: R:0 W:1 C:43 S:6

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 134
Sort Array References:
  $22C: LD I, $F58 ; Load F58 into I
  $238: LD I, $1E0 ; Load 1E0 into I
  $25A: LD I, $3D4 ; Load 3D4 into I
  $280: LD I, $8F9 ; Load 8F9 into I
  $288: LD I, $747 ; Load 747 into I
  $29E: LD I, $CDA ; Load CDA into I
  $2A4: LD I, $832 ; Load 832 into I
  $2C4: LD I, $3F7 ; Load 3F7 into I
  $2C6: LD I, $D66 ; Load D66 into I
  $2CC: LD I, $7D1 ; Load 7D1 into I
  $2D2: LD I, $03E ; Load 03E into I
  $2D6: LD I, $373 ; Load 373 into I
  $2E0: LD I, $5D4 ; Load 5D4 into I
  $2F0: LD I, $CD6 ; Load CD6 into I
  $346: LD I, $905 ; Load 905 into I
  $398: LD I, $59D ; Load 59D into I
  $3A0: LD I, $D6F ; Load D6F into I
  $3B8: LD I, $C2E ; Load C2E into I
  $3BE: LD I, $159 ; Load 159 into I
  $3EE: LD I, $1C2 ; Load 1C2 into I
  $41C: LD I, $183 ; Load 183 into I
  $428: LD I, $044 ; Load 044 into I
  $43C: LD I, $D7E ; Load D7E into I
  $444: LD I, $A49 ; Load A49 into I
  $448: LD I, $300 ; Load 300 into I
  $470: LD I, $7A8 ; Load 7A8 into I
  $47C: LD I, $EF1 ; Load EF1 into I
  $494: LD I, $840 ; Load 840 into I
  $498: LD I, $ED2 ; Load ED2 into I
  $4C6: LD I, $821 ; Load 821 into I
  $510: LD I, $B28 ; Load B28 into I
  $51C: LD I, $CB0 ; Load CB0 into I
  $526: LD I, $F91 ; Load F91 into I
  $572: LD I, $B57 ; Load B57 into I
  $5D6: LD I, $DCB ; Load DCB into I
  $5F4: LD I, $4BD ; Load 4BD into I
  $60A: LD I, $E72 ; Load E72 into I
  $60C: LD I, $DE0 ; Load DE0 into I
  $61C: LD I, $7DF ; Load 7DF into I
  $662: LD I, $7E6 ; Load 7E6 into I
  $686: LD I, $016 ; Load 016 into I
  $6B0: LD I, $D37 ; Load D37 into I
  $6B6: LD I, $B87 ; Load B87 into I
  $6B8: LD I, $C64 ; Load C64 into I
  $6C8: LD I, $93F ; Load 93F into I
  $6F4: LD I, $F07 ; Load F07 into I
  $71A: LD I, $384 ; Load 384 into I
  $72C: LD I, $C5C ; Load C5C into I
  $790: LD I, $558 ; Load 558 into I
  $794: LD I, $2F3 ; Load 2F3 into I
  $7B2: LD I, $5F2 ; Load 5F2 into I
  $7C2: LD I, $4B6 ; Load 4B6 into I
  $7EE: LD I, $8D6 ; Load 8D6 into I
  $814: LD I, $EDD ; Load EDD into I
  $836: LD I, $1D3 ; Load 1D3 into I
  $866: LD I, $CAF ; Load CAF into I
  $872: LD I, $590 ; Load 590 into I
  $87A: LD I, $396 ; Load 396 into I
  $8A0: LD I, $9AC ; Load 9AC into I
  $8AC: LD I, $688 ; Load 688 into I
  $8BC: LD I, $11C ; Load 11C into I
  $8DC: LD I, $73C ; Load 73C into I
  $8DE: LD I, $838 ; Load 838 into I
  $8E6: LD I, $B86 ; Load B86 into I
  $910: LD I, $C21 ; Load C21 into I
  $916: LD I, $167 ; Load 167 into I
  $92E: LD I, $429 ; Load 429 into I
  $938: LD I, $3E6 ; Load 3E6 into I
  $95C: LD I, $BFA ; Load BFA into I
  $974: LD I, $2FA ; Load 2FA into I
  $98A: LD I, $369 ; Load 369 into I
  $992: LD I, $830 ; Load 830 into I
  $994: LD I, $9C3 ; Load 9C3 into I
  $99E: LD I, $9F2 ; Load 9F2 into I
  $9AE: LD I, $017 ; Load 017 into I
  $9D6: LD I, $474 ; Load 474 into I
  $9F6: LD I, $114 ; Load 114 into I
  $A0E: LD I, $6BD ; Load 6BD into I
  $A12: LD I, $8BE ; Load 8BE into I
  $A4C: LD I, $8B9 ; Load 8B9 into I
  $A62: LD I, $6C2 ; Load 6C2 into I
  $A70: LD I, $8AC ; Load 8AC into I
  $A7A: LD I, $720 ; Load 720 into I
  $AAC: LD I, $FB8 ; Load FB8 into I
  $AC6: LD I, $07A ; Load 07A into I
  $ACA: LD I, $387 ; Load 387 into I
  $AD0: LD I, $DB6 ; Load DB6 into I
  $AF0: LD I, $C5F ; Load C5F into I
  $AFC: LD I, $D8B ; Load D8B into I
  $B38: LD I, $7E1 ; Load 7E1 into I
  $B66: LD I, $D74 ; Load D74 into I
  $B6A: LD I, $415 ; Load 415 into I
  $B86: LD I, $697 ; Load 697 into I
  $B90: LD I, $46A ; Load 46A into I
  $B9C: LD I, $591 ; Load 591 into I
  $BFE: LD I, $7EF ; Load 7EF into I
  $C18: LD I, $C54 ; Load C54 into I
  $C5E: LD I, $13F ; Load 13F into I
  $C60: LD I, $268 ; Load 268 into I
  $C92: LD I, $2AB ; Load 2AB into I
  $CAE: LD I, $644 ; Load 644 into I
  $CC6: LD I, $657 ; Load 657 into I
  $CE2: LD I, $F03 ; Load F03 into I
  $CF0: LD I, $BD9 ; Load BD9 into I
  $CF6: LD I, $68D ; Load 68D into I
  $D06: LD I, $4A9 ; Load 4A9 into I
  $D0E: LD I, $CB5 ; Load CB5 into I
  $D2E: LD I, $49D ; Load 49D into I
  $D54: LD I, $B03 ; Load B03 into I
  $DA0: LD I, $12E ; Load 12E into I
  $DD0: LD I, $370 ; Load 370 into I
  $E0A: LD I, $23B ; Load 23B into I
  $E0E: LD I, $344 ; Load 344 into I
  $E12: LD I, $48C ; Load 48C into I
  $E2C: LD I, $E87 ; Load E87 into I
  $E50: LD I, $58C ; Load 58C into I
  $E72: LD I, $046 ; Load 046 into I
  $EA6: LD I, $0F5 ; Load 0F5 into I
  $EA8: LD [I], VC ; Store V0-VC at I
  $ECC: LD I, $EE4 ; Load EE4 into I
  $EDC: LD I, $06B ; Load 06B into I
  $EDE: LD I, $23D ; Load 23D into I
  $EF8: LD I, $11D ; Load 11D into I
  $EFC: ADD I, VB ; I ADDRESS MANIPULATION
  $EFE: LD I, $168 ; Load 168 into I
  $F08: LD I, $FEA ; Load FEA into I
  $F3E: LD I, $754 ; Load 754 into I
  $F58: LD I, $AFA ; Load AFA into I
  $F96: LD I, $113 ; Load 113 into I
  $FAC: LD I, $952 ; Load 952 into I
  $FC4: LD I, $7E0 ; Load 7E0 into I
  $FD8: LD I, $E34 ; Load E34 into I
  $FEA: LD I, $8E6 ; Load 8E6 into I
  $FF6: LD I, $441 ; Load 441 into I

CONTROL FLOW ANALYSIS:
Jumps: 221
Calls: 119
Branches: 222
Loops: 120
Loop Structures:
  $28E -> $018 (backward jump)
  $296 -> $0A6 (backward jump)
  $33A -> $31C (backward jump)
  $3C0 -> $207 (backward jump)
  $3FE -> $253 (backward jump)
  $488 -> $185 (backward jump)
  $4AC -> $2D5 (backward jump)
  $578 -> $3E4 (backward jump)
  $582 -> $40A (backward jump)
  $588 -> $4B3 (backward jump)
  $642 -> $0E9 (backward jump)
  $68C -> $047 (backward jump)
  $6CC -> $330 (backward jump)
  $6D4 -> $247 (backward jump)
  $720 -> $2D6 (backward jump)
  $728 -> $422 (backward jump)
  $74E -> $022 (backward jump)
  $758 -> $158 (backward jump)
  $79C -> $464 (backward jump)
  $7A2 -> $052 (backward jump)
  $7BA -> $5D0 (backward jump)
  $7E8 -> $7A1 (backward jump)
  $7F8 -> $2BD (backward jump)
  $7FA -> $714 (backward jump)
  $80A -> $2B5 (backward jump)
  $882 -> $632 (backward jump)
  $88C -> $316 (backward jump)
  $890 -> $304 (backward jump)
  $8AE -> $16A (backward jump)
  $8B4 -> $075 (backward jump)
  $8FC -> $770 (backward jump)
  $900 -> $060 (backward jump)
  $914 -> $8B9 (backward jump)
  $960 -> $704 (backward jump)
  $99A -> $8E4 (backward jump)
  $9D4 -> $04F (backward jump)
  $9E0 -> $7BF (backward jump)
  $9F0 -> $0E0 (backward jump)
  $9FE -> $05F (backward jump)
  $A3A -> $086 (backward jump)
  $A48 -> $565 (backward jump)
  $A4E -> $1DB (backward jump)
  $A50 -> $750 (backward jump)
  $A60 -> $0E7 (backward jump)
  $A80 -> $6A9 (backward jump)
  $A98 -> $8EE (backward jump)
  $AA8 -> $08A (backward jump)
  $AB4 -> $951 (backward jump)
  $AD8 -> $11E (backward jump)
  $B08 -> $0D1 (backward jump)
  $B32 -> $6B9 (backward jump)
  $B36 -> $A4A (backward jump)
  $B6C -> $06C (backward jump)
  $B74 -> $1A1 (backward jump)
  $B8E -> $92D (backward jump)
  $BA4 -> $7D0 (backward jump)
  $BC2 -> $281 (backward jump)
  $BCA -> $AF0 (backward jump)
  $BCC -> $B4B (backward jump)
  $BD2 -> $6C4 (backward jump)
  $BDA -> $4BC (backward jump)
  $BE4 -> $40E (backward jump)
  $C04 -> $6B3 (backward jump)
  $C1C -> $A02 (backward jump)
  $C1E -> $A6B (backward jump)
  $C72 -> $7EC (backward jump)
  $C9C -> $253 (backward jump)
  $CD6 -> $BE3 (backward jump)
  $CEC -> $A2A (backward jump)
  $CFE -> $230 (backward jump)
  $D00 -> $7A9 (backward jump)
  $D10 -> $70F (backward jump)
  $D12 -> $11C (backward jump)
  $D14 -> $BD1 (backward jump)
  $D1C -> $CD3 (backward jump)
  $D28 -> $09E (backward jump)
  $D38 -> $2C5 (backward jump)
  $D3E -> $07B (backward jump)
  $D42 -> $BDA (backward jump)
  $D48 -> $359 (backward jump)
  $D52 -> $26A (backward jump)
  $D90 -> $9BC (backward jump)
  $D92 -> $687 (backward jump)
  $D98 -> $36B (backward jump)
  $D9A -> $C6C (backward jump)
  $DA4 -> $8F5 (backward jump)
  $DB2 -> $0F0 (backward jump)
  $DCC -> $6BE (backward jump)
  $DEE -> $136 (backward jump)
  $DF0 -> $5DD (backward jump)
  $E14 -> $6C3 (backward jump)
  $E1A -> $531 (backward jump)
  $E22 -> $461 (backward jump)
  $E36 -> $C81 (backward jump)
  $E3C -> $984 (backward jump)
  $E42 -> $E07 (backward jump)
  $E4E -> $039 (backward jump)
  $EAE -> $B9B (backward jump)
  $EB8 -> $359 (backward jump)
  $EBE -> $3AD (backward jump)
  $EEA -> $9DC (backward jump)
  $EEE -> $E9D (backward jump)
  $EF0 -> $5F5 (backward jump)
  $F10 -> $4C1 (backward jump)
  $F18 -> $884 (backward jump)
  $F26 -> $5C0 (backward jump)
  $F2C -> $653 (backward jump)
  $F2E -> $1C9 (backward jump)
  $F4C -> $B75 (backward jump)
  $F4E -> $519 (backward jump)
  $F66 -> $C82 (backward jump)
  $F6A -> $EFB (backward jump)
  $F6C -> $4EB (backward jump)
  $F7C -> $22F (backward jump)
  $F82 -> $617 (backward jump)
  $F88 -> $420 (backward jump)
  $FB2 -> $31B (backward jump)
  $FE4 -> $028 (backward jump)
  $FEC -> $BA4 (backward jump)
  $FFE -> $9D5 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $6DA1   LD       VD, #A1         ; Load 161 into VD
$202    $01A4   SYS      $1A4            ; System call to 1A4
$204    $65FB   LD       V5, #FB         ; Load 251 into V5
$206    $7A23   ADD      VA, #23         ; Add 35 to VA
$208    $F20C   UNKNOWN  F20C            ; Unknown Fxxx instruction
$20A    $67C5   LD       V7, #C5         ; Load 197 into V7
$20C    $9706   UNKNOWN  $9706           ; Unknown 9xxx instruction
$20E    $4880   SNE      V8, #80         ; Skip if V8 != 128
$210    $E7D2   UNKNOWN  $E7D2           ; Unknown Exxx instruction
$212    $C4F1   RND      V4, #F1         ; V4 = random & F1
$214    $02B3   SYS      $2B3            ; System call to 2B3
$216    $FC6A   UNKNOWN  FC6A            ; Unknown Fxxx instruction
$218    $D267   DRW      V2, V6, #7      ; Draw 7-byte sprite at V2, V6
$21A    $C0E0   RND      V0, #E0         ; V0 = random & E0
$21C    $E0C1   UNKNOWN  $E0C1           ; Unknown Exxx instruction
$21E    $4707   SNE      V7, #07         ; Skip if V7 != 7
$220    $654E   LD       V5, #4E         ; Load 78 into V5
$222    $8EBB   UNKNOWN  8EBB            ; Unknown 8xxx instruction
$224    $379F   SE       V7, #9F         ; Skip if V7 == 159
$226    $404F   SNE      V0, #4F         ; Skip if V0 != 79
$228    $6B4C   LD       VB, #4C         ; Load 76 into VB
$22A    $D6F3   DRW      V6, VF, #3      ; Draw 3-byte sprite at V6, VF
$22C    $AF58   LD       I, $F58         ; Load F58 into I
$22E    $B9B6   JP       V0, $9B6        ; Jump to V0 + 9B6
$230    $E5AF   UNKNOWN  $E5AF           ; Unknown Exxx instruction
$232    $7C30   ADD      VC, #30         ; Add 48 to VC
$234    $6BF7   LD       VB, #F7         ; Load 247 into VB
$236    $D715   DRW      V7, V1, #5      ; Draw 5-byte sprite at V7, V1
$238    $A1E0   LD       I, $1E0         ; Load 1E0 into I
$23A    $60B0   LD       V0, #B0         ; Load 176 into V0
$23C    $6BDA   LD       VB, #DA         ; Load 218 into VB
$23E    $5846   UNKNOWN  $5846           ; Unknown 5xxx instruction
$240    $8505   SUB      V5, V0          ; V5 -= V0, VF = !borrow
$242    $47CF   SNE      V7, #CF         ; Skip if V7 != 207
$244    $E75F   UNKNOWN  $E75F           ; Unknown Exxx instruction
$246    $D97C   DRW      V9, V7, #C      ; Draw 12-byte sprite at V9, V7
$248    $1E87   JP       $E87            ; Jump to E87
$24A    $61F5   LD       V1, #F5         ; Load 245 into V1
$24C    $F3B1   UNKNOWN  F3B1            ; Unknown Fxxx instruction
$24E    $C51E   RND      V5, #1E         ; V5 = random & 1E
$250    $3C20   SE       VC, #20         ; Skip if VC == 32
$252    $88BE   SHL      V8              ; V8 <<= 1, VF = MSB
$254    $D14C   DRW      V1, V4, #C      ; Draw 12-byte sprite at V1, V4
$256    $50E0   SE       V0, VE          ; Skip if V0 == VE
$258    $6FC9   LD       VF, #C9         ; Load 201 into VF
$25A    $A3D4   LD       I, $3D4         ; Load 3D4 into I
$25C    $F70F   UNKNOWN  F70F            ; Unknown Fxxx instruction
$25E    $7266   ADD      V2, #66         ; Add 102 to V2
$260    $EF91   UNKNOWN  $EF91           ; Unknown Exxx instruction
$262    $2B80   CALL     $B80            ; Call subroutine at B80
$264    $3DF1   SE       VD, #F1         ; Skip if VD == 241
$266    $68D1   LD       V8, #D1         ; Load 209 into V8
$268    $C0DD   RND      V0, #DD         ; V0 = random & DD
$26A    $C102   RND      V1, #02         ; V1 = random & 02
$26C    $523E   UNKNOWN  $523E           ; Unknown 5xxx instruction
$26E    $0197   SYS      $197            ; System call to 197
$270    $DB65   DRW      VB, V6, #5      ; Draw 5-byte sprite at VB, V6
$272    $27C2   CALL     $7C2            ; Call subroutine at 7C2
$274    $039B   SYS      $39B            ; System call to 39B
$276    $E427   UNKNOWN  $E427           ; Unknown Exxx instruction
$278    $C091   RND      V0, #91         ; V0 = random & 91
$27A    $906D   UNKNOWN  $906D           ; Unknown 9xxx instruction
$27C    $BD29   JP       V0, $D29        ; Jump to V0 + D29
$27E    $814A   UNKNOWN  814A            ; Unknown 8xxx instruction
$280    $A8F9   LD       I, $8F9         ; Load 8F9 into I
$282    $1E71   JP       $E71            ; Jump to E71
$284    $6375   LD       V3, #75         ; Load 117 into V3
$286    $C361   RND      V3, #61         ; V3 = random & 61
$288    $A747   LD       I, $747         ; Load 747 into I
$28A    $BDD0   JP       V0, $DD0        ; Jump to V0 + DD0
$28C    $EEFF   UNKNOWN  $EEFF           ; Unknown Exxx instruction
$28E    $B018   JP       V0, $018        ; Jump to V0 + 018
$290    $5E94   UNKNOWN  $5E94           ; Unknown 5xxx instruction
$292    $0780   SYS      $780            ; System call to 780
$294    $DA6E   DRW      VA, V6, #E      ; Draw 14-byte sprite at VA, V6
$296    $10A6   JP       $0A6            ; Jump to 0A6
$298    $8C11   OR       VC, V1          ; VC |= V1
$29A    $9261   UNKNOWN  $9261           ; Unknown 9xxx instruction
$29C    $EFB0   UNKNOWN  $EFB0           ; Unknown Exxx instruction
$29E    $ACDA   LD       I, $CDA         ; Load CDA into I
$2A0    $C5C6   RND      V5, #C6         ; V5 = random & C6
$2A2    $6E05   LD       VE, #05         ; Load 5 into VE
$2A4    $A832   LD       I, $832         ; Load 832 into I
$2A6    $2443   CALL     $443            ; Call subroutine at 443
$2A8    $FABA   UNKNOWN  FABA            ; Unknown Fxxx instruction
$2AA    $9DC9   UNKNOWN  $9DC9           ; Unknown 9xxx instruction
$2AC    $D2EB   DRW      V2, VE, #B      ; Draw 11-byte sprite at V2, VE
$2AE    $21DB   CALL     $1DB            ; Call subroutine at 1DB
$2B0    $6660   LD       V6, #60         ; Load 96 into V6
$2B2    $F5CD   UNKNOWN  F5CD            ; Unknown Fxxx instruction
$2B4    $4404   SNE      V4, #04         ; Skip if V4 != 4
$2B6    $B4C2   JP       V0, $4C2        ; Jump to V0 + 4C2
$2B8    $5C95   UNKNOWN  $5C95           ; Unknown 5xxx instruction
$2BA    $DD15   DRW      VD, V1, #5      ; Draw 5-byte sprite at VD, V1
$2BC    $29F3   CALL     $9F3            ; Call subroutine at 9F3
$2BE    $E90D   UNKNOWN  $E90D           ; Unknown Exxx instruction
$2C0    $3067   SE       V0, #67         ; Skip if V0 == 103
$2C2    $1A89   JP       $A89            ; Jump to A89
$2C4    $A3F7   LD       I, $3F7         ; Load 3F7 into I
$2C6    $AD66   LD       I, $D66         ; Load D66 into I
$2C8    $3711   SE       V7, #11         ; Skip if V7 == 17
$2CA    $5C11   UNKNOWN  $5C11           ; Unknown 5xxx instruction
$2CC    $A7D1   LD       I, $7D1         ; Load 7D1 into I
$2CE    $DEB9   DRW      VE, VB, #9      ; Draw 9-byte sprite at VE, VB
$2D0    $0D16   SYS      $D16            ; System call to D16
$2D2    $A03E   LD       I, $03E         ; Load 03E into I
$2D4    $8EBC   UNKNOWN  8EBC            ; Unknown 8xxx instruction
$2D6    $A373   LD       I, $373         ; Load 373 into I
$2D8    $2B8D   CALL     $B8D            ; Call subroutine at B8D
$2DA    $9B5E   UNKNOWN  $9B5E           ; Unknown 9xxx instruction
$2DC    $07A0   SYS      $7A0            ; System call to 7A0
$2DE    $1D52   JP       $D52            ; Jump to D52
$2E0    $A5D4   LD       I, $5D4         ; Load 5D4 into I
$2E2    $D727   DRW      V7, V2, #7      ; Draw 7-byte sprite at V7, V2
$2E4    $22B7   CALL     $2B7            ; Call subroutine at 2B7
$2E6    $D915   DRW      V9, V1, #5      ; Draw 5-byte sprite at V9, V1
$2E8    $170E   JP       $70E            ; Jump to 70E
$2EA    $E250   UNKNOWN  $E250           ; Unknown Exxx instruction
$2EC    $C74B   RND      V7, #4B         ; V7 = random & 4B
$2EE    $4D48   SNE      VD, #48         ; Skip if VD != 72
$2F0    $ACD6   LD       I, $CD6         ; Load CD6 into I
$2F2    $448A   SNE      V4, #8A         ; Skip if V4 != 138
$2F4    $71C3   ADD      V1, #C3         ; Add 195 to V1
$2F6    $2406   CALL     $406            ; Call subroutine at 406
$2F8    $D3D1   DRW      V3, VD, #1      ; Draw 1-byte sprite at V3, VD
$2FA    $6E90   LD       VE, #90         ; Load 144 into VE
$2FC    $E07D   UNKNOWN  $E07D           ; Unknown Exxx instruction
$2FE    $30CD   SE       V0, #CD         ; Skip if V0 == 205
$300    $0203   SYS      $203            ; System call to 203
$302    $052D   SYS      $52D            ; System call to 52D
$304    $71CF   ADD      V1, #CF         ; Add 207 to V1
$306    $DFE0   DRW      VF, VE, #0      ; Draw 0-byte sprite at VF, VE
$308    $B47A   JP       V0, $47A        ; Jump to V0 + 47A
$30A    $7646   ADD      V6, #46         ; Add 70 to V6
$30C    $4A15   SNE      VA, #15         ; Skip if VA != 21
$30E    $88DD   UNKNOWN  88DD            ; Unknown 8xxx instruction
$310    $1B27   JP       $B27            ; Jump to B27
$312    $8CCA   UNKNOWN  8CCA            ; Unknown 8xxx instruction
$314    $D342   DRW      V3, V4, #2      ; Draw 2-byte sprite at V3, V4
$316    $0603   SYS      $603            ; System call to 603
$318    $506A   UNKNOWN  $506A           ; Unknown 5xxx instruction
$31A    $55D2   UNKNOWN  $55D2           ; Unknown 5xxx instruction
$31C    $79D7   ADD      V9, #D7         ; Add 215 to V9
$31E    $4B3F   SNE      VB, #3F         ; Skip if VB != 63
$320    $9800   SNE      V8, V0          ; Skip if V8 != V0
$322    $9A52   UNKNOWN  $9A52           ; Unknown 9xxx instruction
$324    $BB3B   JP       V0, $B3B        ; Jump to V0 + B3B
$326    $F143   UNKNOWN  F143            ; Unknown Fxxx instruction
$328    $26E3   CALL     $6E3            ; Call subroutine at 6E3
$32A    $4710   SNE      V7, #10         ; Skip if V7 != 16
$32C    $2ED1   CALL     $ED1            ; Call subroutine at ED1
$32E    $CABC   RND      VA, #BC         ; VA = random & BC
$330    $0456   SYS      $456            ; System call to 456
$332    $4904   SNE      V9, #04         ; Skip if V9 != 4
$334    $EB24   UNKNOWN  $EB24           ; Unknown Exxx instruction
$336    $EE43   UNKNOWN  $EE43           ; Unknown Exxx instruction
$338    $E696   UNKNOWN  $E696           ; Unknown Exxx instruction
$33A    $B31C   JP       V0, $31C        ; Jump to V0 + 31C
$33C    $BD6B   JP       V0, $D6B        ; Jump to V0 + D6B
$33E    $4376   SNE      V3, #76         ; Skip if V3 != 118
$340    $D5AE   DRW      V5, VA, #E      ; Draw 14-byte sprite at V5, VA
$342    $E5CE   UNKNOWN  $E5CE           ; Unknown Exxx instruction
$344    $70B2   ADD      V0, #B2         ; Add 178 to V0
$346    $A905   LD       I, $905         ; Load 905 into I
$348    $5AF2   UNKNOWN  $5AF2           ; Unknown 5xxx instruction
$34A    $1F18   JP       $F18            ; Jump to F18
$34C    $C701   RND      V7, #01         ; V7 = random & 01
$34E    $EC94   UNKNOWN  $EC94           ; Unknown Exxx instruction
$350    $FD39   UNKNOWN  FD39            ; Unknown Fxxx instruction
$352    $C526   RND      V5, #26         ; V5 = random & 26
$354    $4CE0   SNE      VC, #E0         ; Skip if VC != 224
$356    $7924   ADD      V9, #24         ; Add 36 to V9
$358    $875B   UNKNOWN  875B            ; Unknown 8xxx instruction
$35A    $3210   SE       V2, #10         ; Skip if V2 == 16
$35C    $45D2   SNE      V5, #D2         ; Skip if V5 != 210
$35E    $8436   SHR      V4              ; V4 >>= 1, VF = LSB
$360    $8AA4   ADD      VA, VA          ; VA += VA, VF = carry
$362    $F1A4   UNKNOWN  F1A4            ; Unknown Fxxx instruction
$364    $5174   UNKNOWN  $5174           ; Unknown 5xxx instruction
$366    $C7DE   RND      V7, #DE         ; V7 = random & DE
$368    $1F8D   JP       $F8D            ; Jump to F8D
$36A    $B5BD   JP       V0, $5BD        ; Jump to V0 + 5BD
$36C    $C575   RND      V5, #75         ; V5 = random & 75
$36E    $1DC2   JP       $DC2            ; Jump to DC2
$370    $0319   SYS      $319            ; System call to 319
$372    $B9F3   JP       V0, $9F3        ; Jump to V0 + 9F3
$374    $EBFE   UNKNOWN  $EBFE           ; Unknown Exxx instruction
$376    $D03F   DRW      V0, V3, #F      ; Draw 15-byte sprite at V0, V3
$378    $62C4   LD       V2, #C4         ; Load 196 into V2
$37A    $5F83   UNKNOWN  $5F83           ; Unknown 5xxx instruction
$37C    $2584   CALL     $584            ; Call subroutine at 584
$37E    $61D1   LD       V1, #D1         ; Load 209 into V1
$380    $2672   CALL     $672            ; Call subroutine at 672
$382    $E494   UNKNOWN  $E494           ; Unknown Exxx instruction
$384    $F9A4   UNKNOWN  F9A4            ; Unknown Fxxx instruction
$386    $F871   UNKNOWN  F871            ; Unknown Fxxx instruction
$388    $1FFB   JP       $FFB            ; Jump to FFB
$38A    $453B   SNE      V5, #3B         ; Skip if V5 != 59
$38C    $488F   SNE      V8, #8F         ; Skip if V8 != 143
$38E    $0CE8   SYS      $CE8            ; System call to CE8
$390    $888F   UNKNOWN  888F            ; Unknown 8xxx instruction
$392    $5253   UNKNOWN  $5253           ; Unknown 5xxx instruction
$394    $96DA   UNKNOWN  $96DA           ; Unknown 9xxx instruction
$396    $7909   ADD      V9, #09         ; Add 9 to V9
$398    $A59D   LD       I, $59D         ; Load 59D into I
$39A    $71A3   ADD      V1, #A3         ; Add 163 to V1
$39C    $E728   UNKNOWN  $E728           ; Unknown Exxx instruction
$39E    $7E1D   ADD      VE, #1D         ; Add 29 to VE
$3A0    $AD6F   LD       I, $D6F         ; Load D6F into I
$3A2    $FAD4   UNKNOWN  FAD4            ; Unknown Fxxx instruction
$3A4    $FB4E   UNKNOWN  FB4E            ; Unknown Fxxx instruction
$3A6    $2970   CALL     $970            ; Call subroutine at 970
$3A8    $17BB   JP       $7BB            ; Jump to 7BB
$3AA    $9876   UNKNOWN  $9876           ; Unknown 9xxx instruction
$3AC    $C14B   RND      V1, #4B         ; V1 = random & 4B
$3AE    $F487   UNKNOWN  F487            ; Unknown Fxxx instruction
$3B0    $0581   SYS      $581            ; System call to 581
$3B2    $2DE2   CALL     $DE2            ; Call subroutine at DE2
$3B4    $3C63   SE       VC, #63         ; Skip if VC == 99
$3B6    $2058   CALL     $058            ; Call subroutine at 058
$3B8    $AC2E   LD       I, $C2E         ; Load C2E into I
$3BA    $94EA   UNKNOWN  $94EA           ; Unknown 9xxx instruction
$3BC    $37E1   SE       V7, #E1         ; Skip if V7 == 225
$3BE    $A159   LD       I, $159         ; Load 159 into I
$3C0    $B207   JP       V0, $207        ; Jump to V0 + 207
$3C2    $5177   UNKNOWN  $5177           ; Unknown 5xxx instruction
$3C4    $5733   UNKNOWN  $5733           ; Unknown 5xxx instruction
$3C6    $C718   RND      V7, #18         ; V7 = random & 18
$3C8    $62F6   LD       V2, #F6         ; Load 246 into V2
$3CA    $DD6D   DRW      VD, V6, #D      ; Draw 13-byte sprite at VD, V6
$3CC    $979F   UNKNOWN  $979F           ; Unknown 9xxx instruction
$3CE    $052B   SYS      $52B            ; System call to 52B
$3D0    $7B8B   ADD      VB, #8B         ; Add 139 to VB
$3D2    $6FF4   LD       VF, #F4         ; Load 244 into VF
$3D4    $0113   SYS      $113            ; System call to 113
$3D6    $5D42   UNKNOWN  $5D42           ; Unknown 5xxx instruction
$3D8    $69CE   LD       V9, #CE         ; Load 206 into V9
$3DA    $D28C   DRW      V2, V8, #C      ; Draw 12-byte sprite at V2, V8
$3DC    $273F   CALL     $73F            ; Call subroutine at 73F
$3DE    $CF31   RND      VF, #31         ; VF = random & 31
$3E0    $0A0B   SYS      $A0B            ; System call to A0B
$3E2    $2B0B   CALL     $B0B            ; Call subroutine at B0B
$3E4    $008C   SYS      $08C            ; System call to 08C
$3E6    $0993   SYS      $993            ; System call to 993
$3E8    $61A5   LD       V1, #A5         ; Load 165 into V1
$3EA    $5DF1   UNKNOWN  $5DF1           ; Unknown 5xxx instruction
$3EC    $94A2   UNKNOWN  $94A2           ; Unknown 9xxx instruction
$3EE    $A1C2   LD       I, $1C2         ; Load 1C2 into I
$3F0    $622E   LD       V2, #2E         ; Load 46 into V2
$3F2    $149C   JP       $49C            ; Jump to 49C
$3F4    $D79B   DRW      V7, V9, #B      ; Draw 11-byte sprite at V7, V9
$3F6    $691C   LD       V9, #1C         ; Load 28 into V9
$3F8    $BCAF   JP       V0, $CAF        ; Jump to V0 + CAF
$3FA    $E481   UNKNOWN  $E481           ; Unknown Exxx instruction
$3FC    $2987   CALL     $987            ; Call subroutine at 987
$3FE    $1253   JP       $253            ; Jump to 253
$400    $84A5   SUB      V4, VA          ; V4 -= VA, VF = !borrow
$402    $0E8A   SYS      $E8A            ; System call to E8A
$404    $DA20   DRW      VA, V2, #0      ; Draw 0-byte sprite at VA, V2
$406    $4C98   SNE      VC, #98         ; Skip if VC != 152
$408    $1503   JP       $503            ; Jump to 503
$40A    $BE7A   JP       V0, $E7A        ; Jump to V0 + E7A
$40C    $7893   ADD      V8, #93         ; Add 147 to V8
$40E    $3889   SE       V8, #89         ; Skip if V8 == 137
$410    $06F7   SYS      $6F7            ; System call to 6F7
$412    $C0D5   RND      V0, #D5         ; V0 = random & D5
$414    $DB95   DRW      VB, V9, #5      ; Draw 5-byte sprite at VB, V9
$416    $DBFA   DRW      VB, VF, #A      ; Draw 10-byte sprite at VB, VF
$418    $00F9   SYS      $0F9            ; System call to 0F9
$41A    $2FCD   CALL     $FCD            ; Call subroutine at FCD
$41C    $A183   LD       I, $183         ; Load 183 into I
$41E    $0C5C   SYS      $C5C            ; System call to C5C
$420    $7A70   ADD      VA, #70         ; Add 112 to VA
$422    $0AD6   SYS      $AD6            ; System call to AD6
$424    $3C4E   SE       VC, #4E         ; Skip if VC == 78
$426    $00C3   SYS      $0C3            ; System call to 0C3
$428    $A044   LD       I, $044         ; Load 044 into I
$42A    $C3EF   RND      V3, #EF         ; V3 = random & EF
$42C    $D6E2   DRW      V6, VE, #2      ; Draw 2-byte sprite at V6, VE
$42E    $BF57   JP       V0, $F57        ; Jump to V0 + F57
$430    $9461   UNKNOWN  $9461           ; Unknown 9xxx instruction
$432    $04F6   SYS      $4F6            ; System call to 4F6
$434    $1D02   JP       $D02            ; Jump to D02
$436    $26AD   CALL     $6AD            ; Call subroutine at 6AD
$438    $08B1   SYS      $8B1            ; System call to 8B1
$43A    $EE4B   UNKNOWN  $EE4B           ; Unknown Exxx instruction
$43C    $AD7E   LD       I, $D7E         ; Load D7E into I
$43E    $1B23   JP       $B23            ; Jump to B23
$440    $3B92   SE       VB, #92         ; Skip if VB == 146
$442    $F322   UNKNOWN  F322            ; Unknown Fxxx instruction
$444    $AA49   LD       I, $A49         ; Load A49 into I
$446    $9FDA   UNKNOWN  $9FDA           ; Unknown 9xxx instruction
$448    $A300   LD       I, $300         ; Load 300 into I
$44A    $C07A   RND      V0, #7A         ; V0 = random & 7A
$44C    $8A3C   UNKNOWN  8A3C            ; Unknown 8xxx instruction
$44E    $61A5   LD       V1, #A5         ; Load 165 into V1
$450    $CBAE   RND      VB, #AE         ; VB = random & AE
$452    $4659   SNE      V6, #59         ; Skip if V6 != 89
$454    $91A1   UNKNOWN  $91A1           ; Unknown 9xxx instruction
$456    $BE79   JP       V0, $E79        ; Jump to V0 + E79
$458    $21C3   CALL     $1C3            ; Call subroutine at 1C3
$45A    $BC1F   JP       V0, $C1F        ; Jump to V0 + C1F
$45C    $D21D   DRW      V2, V1, #D      ; Draw 13-byte sprite at V2, V1
$45E    $2A8D   CALL     $A8D            ; Call subroutine at A8D
$460    $5B85   UNKNOWN  $5B85           ; Unknown 5xxx instruction
$462    $6413   LD       V4, #13         ; Load 19 into V4
$464    $F926   UNKNOWN  F926            ; Unknown Fxxx instruction
$466    $806A   UNKNOWN  806A            ; Unknown 8xxx instruction
$468    $BD9A   JP       V0, $D9A        ; Jump to V0 + D9A
$46A    $DC13   DRW      VC, V1, #3      ; Draw 3-byte sprite at VC, V1
$46C    $6B06   LD       VB, #06         ; Load 6 into VB
$46E    $D480   DRW      V4, V8, #0      ; Draw 0-byte sprite at V4, V8
$470    $A7A8   LD       I, $7A8         ; Load 7A8 into I
$472    $8327   SUBN     V3, V2          ; V3 = V2 - V3, VF = !borrow
$474    $0091   SYS      $091            ; System call to 091
$476    $D1BB   DRW      V1, VB, #B      ; Draw 11-byte sprite at V1, VB
$478    $72C3   ADD      V2, #C3         ; Add 195 to V2
$47A    $D384   DRW      V3, V8, #4      ; Draw 4-byte sprite at V3, V8
$47C    $AEF1   LD       I, $EF1         ; Load EF1 into I
$47E    $FE4C   UNKNOWN  FE4C            ; Unknown Fxxx instruction
$480    $6FCE   LD       VF, #CE         ; Load 206 into VF
$482    $1E7E   JP       $E7E            ; Jump to E7E
$484    $1C82   JP       $C82            ; Jump to C82
$486    $9D42   UNKNOWN  $9D42           ; Unknown 9xxx instruction
$488    $B185   JP       V0, $185        ; Jump to V0 + 185
$48A    $9146   UNKNOWN  $9146           ; Unknown 9xxx instruction
$48C    $D1A8   DRW      V1, VA, #8      ; Draw 8-byte sprite at V1, VA
$48E    $F433   LD       B, V4           ; Store BCD of V4 at I, I+1, I+2
$490    $8615   SUB      V6, V1          ; V6 -= V1, VF = !borrow
$492    $074E   SYS      $74E            ; System call to 74E
$494    $A840   LD       I, $840         ; Load 840 into I
$496    $8987   SUBN     V9, V8          ; V9 = V8 - V9, VF = !borrow
$498    $AED2   LD       I, $ED2         ; Load ED2 into I
$49A    $8C11   OR       VC, V1          ; VC |= V1
$49C    $269D   CALL     $69D            ; Call subroutine at 69D
$49E    $5A31   UNKNOWN  $5A31           ; Unknown 5xxx instruction
$4A0    $EDF4   UNKNOWN  $EDF4           ; Unknown Exxx instruction
$4A2    $0E09   SYS      $E09            ; System call to E09
$4A4    $97DA   UNKNOWN  $97DA           ; Unknown 9xxx instruction
$4A6    $841C   UNKNOWN  841C            ; Unknown 8xxx instruction
$4A8    $734F   ADD      V3, #4F         ; Add 79 to V3
$4AA    $004D   SYS      $04D            ; System call to 04D
$4AC    $12D5   JP       $2D5            ; Jump to 2D5
$4AE    $739C   ADD      V3, #9C         ; Add 156 to V3
$4B0    $6A29   LD       VA, #29         ; Load 41 into VA
$4B2    $59E4   UNKNOWN  $59E4           ; Unknown 5xxx instruction
$4B4    $17AC   JP       $7AC            ; Jump to 7AC
$4B6    $3576   SE       V5, #76         ; Skip if V5 == 118
$4B8    $4332   SNE      V3, #32         ; Skip if V3 != 50
$4BA    $9A8A   UNKNOWN  $9A8A           ; Unknown 9xxx instruction
$4BC    $249E   CALL     $49E            ; Call subroutine at 49E
$4BE    $C0EA   RND      V0, #EA         ; V0 = random & EA
$4C0    $BB95   JP       V0, $B95        ; Jump to V0 + B95
$4C2    $DDE9   DRW      VD, VE, #9      ; Draw 9-byte sprite at VD, VE
$4C4    $19F6   JP       $9F6            ; Jump to 9F6
$4C6    $A821   LD       I, $821         ; Load 821 into I
$4C8    $203A   CALL     $03A            ; Call subroutine at 03A
$4CA    $5E6F   UNKNOWN  $5E6F           ; Unknown 5xxx instruction
$4CC    $1FEB   JP       $FEB            ; Jump to FEB
$4CE    $9773   UNKNOWN  $9773           ; Unknown 9xxx instruction
$4D0    $B54D   JP       V0, $54D        ; Jump to V0 + 54D
$4D2    $FCA0   UNKNOWN  FCA0            ; Unknown Fxxx instruction
$4D4    $C8BE   RND      V8, #BE         ; V8 = random & BE
$4D6    $F23C   UNKNOWN  F23C            ; Unknown Fxxx instruction
$4D8    $BC25   JP       V0, $C25        ; Jump to V0 + C25
$4DA    $3FD9   SE       VF, #D9         ; Skip if VF == 217
$4DC    $1F1E   JP       $F1E            ; Jump to F1E
$4DE    $2B31   CALL     $B31            ; Call subroutine at B31
$4E0    $26A6   CALL     $6A6            ; Call subroutine at 6A6
$4E2    $2EBD   CALL     $EBD            ; Call subroutine at EBD
$4E4    $E477   UNKNOWN  $E477           ; Unknown Exxx instruction
$4E6    $5162   UNKNOWN  $5162           ; Unknown 5xxx instruction
$4E8    $D46B   DRW      V4, V6, #B      ; Draw 11-byte sprite at V4, V6
$4EA    $F5B5   UNKNOWN  F5B5            ; Unknown Fxxx instruction
$4EC    $4C56   SNE      VC, #56         ; Skip if VC != 86
$4EE    $6945   LD       V9, #45         ; Load 69 into V9
$4F0    $0890   SYS      $890            ; System call to 890
$4F2    $E3B5   UNKNOWN  $E3B5           ; Unknown Exxx instruction
$4F4    $8C3E   SHL      VC              ; VC <<= 1, VF = MSB
$4F6    $B7AF   JP       V0, $7AF        ; Jump to V0 + 7AF
$4F8    $9E2B   UNKNOWN  $9E2B           ; Unknown 9xxx instruction
$4FA    $182E   JP       $82E            ; Jump to 82E
$4FC    $4FA7   SNE      VF, #A7         ; Skip if VF != 167
$4FE    $FC8A   UNKNOWN  FC8A            ; Unknown Fxxx instruction
$500    $5B34   UNKNOWN  $5B34           ; Unknown 5xxx instruction
$502    $F856   UNKNOWN  F856            ; Unknown Fxxx instruction
$504    $C9EF   RND      V9, #EF         ; V9 = random & EF
$506    $56EA   UNKNOWN  $56EA           ; Unknown 5xxx instruction
$508    $DBBE   DRW      VB, VB, #E      ; Draw 14-byte sprite at VB, VB
$50A    $2F6F   CALL     $F6F            ; Call subroutine at F6F
$50C    $31F9   SE       V1, #F9         ; Skip if V1 == 249
$50E    $8106   SHR      V1              ; V1 >>= 1, VF = LSB
$510    $AB28   LD       I, $B28         ; Load B28 into I
$512    $5174   UNKNOWN  $5174           ; Unknown 5xxx instruction
$514    $C0B3   RND      V0, #B3         ; V0 = random & B3
$516    $860B   UNKNOWN  860B            ; Unknown 8xxx instruction
$518    $7E19   ADD      VE, #19         ; Add 25 to VE
$51A    $D34A   DRW      V3, V4, #A      ; Draw 10-byte sprite at V3, V4
$51C    $ACB0   LD       I, $CB0         ; Load CB0 into I
$51E    $BB24   JP       V0, $B24        ; Jump to V0 + B24
$520    $9150   SNE      V1, V5          ; Skip if V1 != V5
$522    $E2ED   UNKNOWN  $E2ED           ; Unknown Exxx instruction
$524    $6888   LD       V8, #88         ; Load 136 into V8
$526    $AF91   LD       I, $F91         ; Load F91 into I
$528    $D613   DRW      V6, V1, #3      ; Draw 3-byte sprite at V6, V1
$52A    $8166   SHR      V1              ; V1 >>= 1, VF = LSB
$52C    $2050   CALL     $050            ; Call subroutine at 050
$52E    $28E4   CALL     $8E4            ; Call subroutine at 8E4
$530    $478A   SNE      V7, #8A         ; Skip if V7 != 138
$532    $C162   RND      V1, #62         ; V1 = random & 62
$534    $F236   UNKNOWN  F236            ; Unknown Fxxx instruction
$536    $D8D4   DRW      V8, VD, #4      ; Draw 4-byte sprite at V8, VD
$538    $6865   LD       V8, #65         ; Load 101 into V8
$53A    $59EB   UNKNOWN  $59EB           ; Unknown 5xxx instruction
$53C    $5EA8   UNKNOWN  $5EA8           ; Unknown 5xxx instruction
$53E    $2A72   CALL     $A72            ; Call subroutine at A72
$540    $4EC1   SNE      VE, #C1         ; Skip if VE != 193
$542    $835F   UNKNOWN  835F            ; Unknown 8xxx instruction
$544    $5856   UNKNOWN  $5856           ; Unknown 5xxx instruction
$546    $7FFD   ADD      VF, #FD         ; Add 253 to VF
$548    $ED08   UNKNOWN  $ED08           ; Unknown Exxx instruction
$54A    $903A   UNKNOWN  $903A           ; Unknown 9xxx instruction
$54C    $8A06   SHR      VA              ; VA >>= 1, VF = LSB
$54E    $0DE3   SYS      $DE3            ; System call to DE3
$550    $FCDD   UNKNOWN  FCDD            ; Unknown Fxxx instruction
$552    $6323   LD       V3, #23         ; Load 35 into V3
$554    $24FF   CALL     $4FF            ; Call subroutine at 4FF
$556    $28A9   CALL     $8A9            ; Call subroutine at 8A9
$558    $7480   ADD      V4, #80         ; Add 128 to V4
$55A    $E0E7   UNKNOWN  $E0E7           ; Unknown Exxx instruction
$55C    $C3BB   RND      V3, #BB         ; V3 = random & BB
$55E    $DC8D   DRW      VC, V8, #D      ; Draw 13-byte sprite at VC, V8
$560    $0CED   SYS      $CED            ; System call to CED
$562    $BFDE   JP       V0, $FDE        ; Jump to V0 + FDE
$564    $5342   UNKNOWN  $5342           ; Unknown 5xxx instruction
$566    $9EDF   UNKNOWN  $9EDF           ; Unknown 9xxx instruction
$568    $1C35   JP       $C35            ; Jump to C35
$56A    $370E   SE       V7, #0E         ; Skip if V7 == 14
$56C    $30DB   SE       V0, #DB         ; Skip if V0 == 219
$56E    $5459   UNKNOWN  $5459           ; Unknown 5xxx instruction
$570    $2B71   CALL     $B71            ; Call subroutine at B71
$572    $AB57   LD       I, $B57         ; Load B57 into I
$574    $8ECB   UNKNOWN  8ECB            ; Unknown 8xxx instruction
$576    $6CE9   LD       VC, #E9         ; Load 233 into VC
$578    $13E4   JP       $3E4            ; Jump to 3E4
$57A    $766A   ADD      V6, #6A         ; Add 106 to V6
$57C    $4B26   SNE      VB, #26         ; Skip if VB != 38
$57E    $CC93   RND      VC, #93         ; VC = random & 93
$580    $2816   CALL     $816            ; Call subroutine at 816
$582    $140A   JP       $40A            ; Jump to 40A
$584    $3E75   SE       VE, #75         ; Skip if VE == 117
$586    $793E   ADD      V9, #3E         ; Add 62 to V9
$588    $14B3   JP       $4B3            ; Jump to 4B3
$58A    $6540   LD       V5, #40         ; Load 64 into V5
$58C    $9806   UNKNOWN  $9806           ; Unknown 9xxx instruction
$58E    $31DA   SE       V1, #DA         ; Skip if V1 == 218
$590    $CAFD   RND      VA, #FD         ; VA = random & FD
$592    $C646   RND      V6, #46         ; V6 = random & 46
$594    $8B07   SUBN     VB, V0          ; VB = V0 - VB, VF = !borrow
$596    $D5C4   DRW      V5, VC, #4      ; Draw 4-byte sprite at V5, VC
$598    $F319   UNKNOWN  F319            ; Unknown Fxxx instruction
$59A    $9B50   SNE      VB, V5          ; Skip if VB != V5
$59C    $5D36   UNKNOWN  $5D36           ; Unknown 5xxx instruction
$59E    $B8C5   JP       V0, $8C5        ; Jump to V0 + 8C5
$5A0    $9B55   UNKNOWN  $9B55           ; Unknown 9xxx instruction
$5A2    $C710   RND      V7, #10         ; V7 = random & 10
$5A4    $EAF6   UNKNOWN  $EAF6           ; Unknown Exxx instruction
$5A6    $E615   UNKNOWN  $E615           ; Unknown Exxx instruction
$5A8    $E0F3   UNKNOWN  $E0F3           ; Unknown Exxx instruction
$5AA    $88D0   LD       V8, VD          ; V8 = VD
$5AC    $8D70   LD       VD, V7          ; VD = V7
$5AE    $4B84   SNE      VB, #84         ; Skip if VB != 132
$5B0    $1C97   JP       $C97            ; Jump to C97
$5B2    $164B   JP       $64B            ; Jump to 64B
$5B4    $833E   SHL      V3              ; V3 <<= 1, VF = MSB
$5B6    $83AC   UNKNOWN  83AC            ; Unknown 8xxx instruction
$5B8    $CF07   RND      VF, #07         ; VF = random & 07
$5BA    $E98D   UNKNOWN  $E98D           ; Unknown Exxx instruction
$5BC    $F166   UNKNOWN  F166            ; Unknown Fxxx instruction
$5BE    $6FA4   LD       VF, #A4         ; Load 164 into VF
$5C0    $E40C   UNKNOWN  $E40C           ; Unknown Exxx instruction
$5C2    $C7C3   RND      V7, #C3         ; V7 = random & C3
$5C4    $2CEC   CALL     $CEC            ; Call subroutine at CEC
$5C6    $D555   DRW      V5, V5, #5      ; Draw 5-byte sprite at V5, V5
$5C8    $E917   UNKNOWN  $E917           ; Unknown Exxx instruction
$5CA    $5E58   UNKNOWN  $5E58           ; Unknown 5xxx instruction
$5CC    $7F1D   ADD      VF, #1D         ; Add 29 to VF
$5CE    $B89C   JP       V0, $89C        ; Jump to V0 + 89C
$5D0    $0D13   SYS      $D13            ; System call to D13
$5D2    $3C8D   SE       VC, #8D         ; Skip if VC == 141
$5D4    $DBA5   DRW      VB, VA, #5      ; Draw 5-byte sprite at VB, VA
$5D6    $ADCB   LD       I, $DCB         ; Load DCB into I
$5D8    $C179   RND      V1, #79         ; V1 = random & 79
$5DA    $6A60   LD       VA, #60         ; Load 96 into VA
$5DC    $7C39   ADD      VC, #39         ; Add 57 to VC
$5DE    $59A0   SE       V9, VA          ; Skip if V9 == VA
$5E0    $7307   ADD      V3, #07         ; Add 7 to V3
$5E2    $1E10   JP       $E10            ; Jump to E10
$5E4    $D186   DRW      V1, V8, #6      ; Draw 6-byte sprite at V1, V8
$5E6    $458A   SNE      V5, #8A         ; Skip if V5 != 138
$5E8    $C0F1   RND      V0, #F1         ; V0 = random & F1
$5EA    $6AD6   LD       VA, #D6         ; Load 214 into VA
$5EC    $5A1C   UNKNOWN  $5A1C           ; Unknown 5xxx instruction
$5EE    $4F2D   SNE      VF, #2D         ; Skip if VF != 45
$5F0    $728C   ADD      V2, #8C         ; Add 140 to V2
$5F2    $6BA4   LD       VB, #A4         ; Load 164 into VB
$5F4    $A4BD   LD       I, $4BD         ; Load 4BD into I
$5F6    $EB41   UNKNOWN  $EB41           ; Unknown Exxx instruction
$5F8    $9210   SNE      V2, V1          ; Skip if V2 != V1
$5FA    $B8F0   JP       V0, $8F0        ; Jump to V0 + 8F0
$5FC    $9F8B   UNKNOWN  $9F8B           ; Unknown 9xxx instruction
$5FE    $9B72   UNKNOWN  $9B72           ; Unknown 9xxx instruction
$600    $DFE9   DRW      VF, VE, #9      ; Draw 9-byte sprite at VF, VE
$602    $BD28   JP       V0, $D28        ; Jump to V0 + D28
$604    $7554   ADD      V5, #54         ; Add 84 to V5
$606    $F7D0   UNKNOWN  F7D0            ; Unknown Fxxx instruction
$608    $810B   UNKNOWN  810B            ; Unknown 8xxx instruction
$60A    $AE72   LD       I, $E72         ; Load E72 into I
$60C    $ADE0   LD       I, $DE0         ; Load DE0 into I
$60E    $D79B   DRW      V7, V9, #B      ; Draw 11-byte sprite at V7, V9
$610    $C08D   RND      V0, #8D         ; V0 = random & 8D
$612    $DA5B   DRW      VA, V5, #B      ; Draw 11-byte sprite at VA, V5
$614    $CFB3   RND      VF, #B3         ; VF = random & B3
$616    $F828   UNKNOWN  F828            ; Unknown Fxxx instruction
$618    $7474   ADD      V4, #74         ; Add 116 to V4
$61A    $64FE   LD       V4, #FE         ; Load 254 into V4
$61C    $A7DF   LD       I, $7DF         ; Load 7DF into I
$61E    $B76B   JP       V0, $76B        ; Jump to V0 + 76B
$620    $C06B   RND      V0, #6B         ; V0 = random & 6B
$622    $C4AA   RND      V4, #AA         ; V4 = random & AA
$624    $2703   CALL     $703            ; Call subroutine at 703
$626    $6C5D   LD       VC, #5D         ; Load 93 into VC
$628    $3514   SE       V5, #14         ; Skip if V5 == 20
$62A    $0E40   SYS      $E40            ; System call to E40
$62C    $F26C   UNKNOWN  F26C            ; Unknown Fxxx instruction
$62E    $5889   UNKNOWN  $5889           ; Unknown 5xxx instruction
$630    $81A5   SUB      V1, VA          ; V1 -= VA, VF = !borrow
$632    $528D   UNKNOWN  $528D           ; Unknown 5xxx instruction
$634    $2ABD   CALL     $ABD            ; Call subroutine at ABD
$636    $3EE3   SE       VE, #E3         ; Skip if VE == 227
$638    $8C16   SHR      VC              ; VC >>= 1, VF = LSB
$63A    $F787   UNKNOWN  F787            ; Unknown Fxxx instruction
$63C    $9887   UNKNOWN  $9887           ; Unknown 9xxx instruction
$63E    $875E   SHL      V7              ; V7 <<= 1, VF = MSB
$640    $43E2   SNE      V3, #E2         ; Skip if V3 != 226
$642    $B0E9   JP       V0, $0E9        ; Jump to V0 + 0E9
$644    $0C07   SYS      $C07            ; System call to C07
$646    $1C84   JP       $C84            ; Jump to C84
$648    $9EBF   UNKNOWN  $9EBF           ; Unknown 9xxx instruction
$64A    $F6D7   UNKNOWN  F6D7            ; Unknown Fxxx instruction
$64C    $B9B7   JP       V0, $9B7        ; Jump to V0 + 9B7
$64E    $CB20   RND      VB, #20         ; VB = random & 20
$650    $52B0   SE       V2, VB          ; Skip if V2 == VB
$652    $23A8   CALL     $3A8            ; Call subroutine at 3A8
$654    $8604   ADD      V6, V0          ; V6 += V0, VF = carry
$656    $B806   JP       V0, $806        ; Jump to V0 + 806
$658    $02E8   SYS      $2E8            ; System call to 2E8
$65A    $E91C   UNKNOWN  $E91C           ; Unknown Exxx instruction
$65C    $4625   SNE      V6, #25         ; Skip if V6 != 37
$65E    $5DFD   UNKNOWN  $5DFD           ; Unknown 5xxx instruction
$660    $304E   SE       V0, #4E         ; Skip if V0 == 78
$662    $A7E6   LD       I, $7E6         ; Load 7E6 into I
$664    $73C8   ADD      V3, #C8         ; Add 200 to V3
$666    $3EB0   SE       VE, #B0         ; Skip if VE == 176
$668    $ED30   UNKNOWN  $ED30           ; Unknown Exxx instruction
$66A    $DA8A   DRW      VA, V8, #A      ; Draw 10-byte sprite at VA, V8
$66C    $705C   ADD      V0, #5C         ; Add 92 to V0
$66E    $65D2   LD       V5, #D2         ; Load 210 into V5
$670    $6A88   LD       VA, #88         ; Load 136 into VA
$672    $8261   OR       V2, V6          ; V2 |= V6
$674    $BE00   JP       V0, $E00        ; Jump to V0 + E00
$676    $BCE7   JP       V0, $CE7        ; Jump to V0 + CE7
$678    $0D7A   SYS      $D7A            ; System call to D7A
$67A    $EE43   UNKNOWN  $EE43           ; Unknown Exxx instruction
$67C    $1718   JP       $718            ; Jump to 718
$67E    $6134   LD       V1, #34         ; Load 52 into V1
$680    $ED02   UNKNOWN  $ED02           ; Unknown Exxx instruction
$682    $0AC9   SYS      $AC9            ; System call to AC9
$684    $498A   SNE      V9, #8A         ; Skip if V9 != 138
$686    $A016   LD       I, $016         ; Load 016 into I
$688    $0515   SYS      $515            ; System call to 515
$68A    $869D   UNKNOWN  869D            ; Unknown 8xxx instruction
$68C    $1047   JP       $047            ; Jump to 047
$68E    $D210   DRW      V2, V1, #0      ; Draw 0-byte sprite at V2, V1
$690    $091F   SYS      $91F            ; System call to 91F
$692    $3807   SE       V8, #07         ; Skip if V8 == 7
$694    $8FEC   UNKNOWN  8FEC            ; Unknown 8xxx instruction
$696    $C7A9   RND      V7, #A9         ; V7 = random & A9
$698    $D781   DRW      V7, V8, #1      ; Draw 1-byte sprite at V7, V8
$69A    $5A5F   UNKNOWN  $5A5F           ; Unknown 5xxx instruction
$69C    $21C2   CALL     $1C2            ; Call subroutine at 1C2
$69E    $E012   UNKNOWN  $E012           ; Unknown Exxx instruction
$6A0    $8A03   XOR      VA, V0          ; VA ^= V0
$6A2    $5913   UNKNOWN  $5913           ; Unknown 5xxx instruction
$6A4    $6F24   LD       VF, #24         ; Load 36 into VF
$6A6    $47C0   SNE      V7, #C0         ; Skip if V7 != 192
$6A8    $5AA1   UNKNOWN  $5AA1           ; Unknown 5xxx instruction
$6AA    $FF7A   UNKNOWN  FF7A            ; Unknown Fxxx instruction
$6AC    $5C7C   UNKNOWN  $5C7C           ; Unknown 5xxx instruction
$6AE    $5026   UNKNOWN  $5026           ; Unknown 5xxx instruction
$6B0    $AD37   LD       I, $D37         ; Load D37 into I
$6B2    $3360   SE       V3, #60         ; Skip if V3 == 96
$6B4    $66A6   LD       V6, #A6         ; Load 166 into V6
$6B6    $AB87   LD       I, $B87         ; Load B87 into I
$6B8    $AC64   LD       I, $C64         ; Load C64 into I
$6BA    $3266   SE       V2, #66         ; Skip if V2 == 102
$6BC    $2C77   CALL     $C77            ; Call subroutine at C77
$6BE    $6939   LD       V9, #39         ; Load 57 into V9
$6C0    $9DD7   UNKNOWN  $9DD7           ; Unknown 9xxx instruction
$6C2    $F6AE   UNKNOWN  F6AE            ; Unknown Fxxx instruction
$6C4    $31D7   SE       V1, #D7         ; Skip if V1 == 215
$6C6    $298E   CALL     $98E            ; Call subroutine at 98E
$6C8    $A93F   LD       I, $93F         ; Load 93F into I
$6CA    $EE23   UNKNOWN  $EE23           ; Unknown Exxx instruction
$6CC    $1330   JP       $330            ; Jump to 330
$6CE    $9B64   UNKNOWN  $9B64           ; Unknown 9xxx instruction
$6D0    $C3ED   RND      V3, #ED         ; V3 = random & ED
$6D2    $E3B8   UNKNOWN  $E3B8           ; Unknown Exxx instruction
$6D4    $B247   JP       V0, $247        ; Jump to V0 + 247
$6D6    $6729   LD       V7, #29         ; Load 41 into V7
$6D8    $EE0A   UNKNOWN  $EE0A           ; Unknown Exxx instruction
$6DA    $93F3   UNKNOWN  $93F3           ; Unknown 9xxx instruction
$6DC    $09A0   SYS      $9A0            ; System call to 9A0
$6DE    $4B52   SNE      VB, #52         ; Skip if VB != 82
$6E0    $F3E1   UNKNOWN  F3E1            ; Unknown Fxxx instruction
$6E2    $0A9D   SYS      $A9D            ; System call to A9D
$6E4    $B74D   JP       V0, $74D        ; Jump to V0 + 74D
$6E6    $CF2A   RND      VF, #2A         ; VF = random & 2A
$6E8    $F1A4   UNKNOWN  F1A4            ; Unknown Fxxx instruction
$6EA    $2DDF   CALL     $DDF            ; Call subroutine at DDF
$6EC    $BC4D   JP       V0, $C4D        ; Jump to V0 + C4D
$6EE    $554E   UNKNOWN  $554E           ; Unknown 5xxx instruction
$6F0    $2096   CALL     $096            ; Call subroutine at 096
$6F2    $48BC   SNE      V8, #BC         ; Skip if V8 != 188
$6F4    $AF07   LD       I, $F07         ; Load F07 into I
$6F6    $B838   JP       V0, $838        ; Jump to V0 + 838
$6F8    $882E   SHL      V8              ; V8 <<= 1, VF = MSB
$6FA    $353C   SE       V5, #3C         ; Skip if V5 == 60
$6FC    $217D   CALL     $17D            ; Call subroutine at 17D
$6FE    $5780   SE       V7, V8          ; Skip if V7 == V8
$700    $7209   ADD      V2, #09         ; Add 9 to V2
$702    $667E   LD       V6, #7E         ; Load 126 into V6
$704    $DBE9   DRW      VB, VE, #9      ; Draw 9-byte sprite at VB, VE
$706    $BFA1   JP       V0, $FA1        ; Jump to V0 + FA1
$708    $73D5   ADD      V3, #D5         ; Add 213 to V3
$70A    $1C5F   JP       $C5F            ; Jump to C5F
$70C    $7396   ADD      V3, #96         ; Add 150 to V3
$70E    $73FB   ADD      V3, #FB         ; Add 251 to V3
$710    $3DB7   SE       VD, #B7         ; Skip if VD == 183
$712    $8D94   ADD      VD, V9          ; VD += V9, VF = carry
$714    $599C   UNKNOWN  $599C           ; Unknown 5xxx instruction
$716    $1C3E   JP       $C3E            ; Jump to C3E
$718    $86F6   SHR      V6              ; V6 >>= 1, VF = LSB
$71A    $A384   LD       I, $384         ; Load 384 into I
$71C    $652F   LD       V5, #2F         ; Load 47 into V5
$71E    $2E74   CALL     $E74            ; Call subroutine at E74
$720    $12D6   JP       $2D6            ; Jump to 2D6
$722    $4118   SNE      V1, #18         ; Skip if V1 != 24
$724    $46EE   SNE      V6, #EE         ; Skip if V6 != 238
$726    $755F   ADD      V5, #5F         ; Add 95 to V5
$728    $B422   JP       V0, $422        ; Jump to V0 + 422
$72A    $24BF   CALL     $4BF            ; Call subroutine at 4BF
$72C    $AC5C   LD       I, $C5C         ; Load C5C into I
$72E    $73E6   ADD      V3, #E6         ; Add 230 to V3
$730    $388C   SE       V8, #8C         ; Skip if V8 == 140
$732    $E5AB   UNKNOWN  $E5AB           ; Unknown Exxx instruction
$734    $34BC   SE       V4, #BC         ; Skip if V4 == 188
$736    $461A   SNE      V6, #1A         ; Skip if V6 != 26
$738    $0594   SYS      $594            ; System call to 594
$73A    $C14C   RND      V1, #4C         ; V1 = random & 4C
$73C    $8313   XOR      V3, V1          ; V3 ^= V1
$73E    $EC32   UNKNOWN  $EC32           ; Unknown Exxx instruction
$740    $3701   SE       V7, #01         ; Skip if V7 == 1
$742    $0218   SYS      $218            ; System call to 218
$744    $E6D0   UNKNOWN  $E6D0           ; Unknown Exxx instruction
$746    $C6C7   RND      V6, #C7         ; V6 = random & C7
$748    $0277   SYS      $277            ; System call to 277
$74A    $5828   UNKNOWN  $5828           ; Unknown 5xxx instruction
$74C    $62F6   LD       V2, #F6         ; Load 246 into V2
$74E    $B022   JP       V0, $022        ; Jump to V0 + 022
$750    $31B7   SE       V1, #B7         ; Skip if V1 == 183
$752    $E39A   UNKNOWN  $E39A           ; Unknown Exxx instruction
$754    $EDE4   UNKNOWN  $EDE4           ; Unknown Exxx instruction
$756    $37AD   SE       V7, #AD         ; Skip if V7 == 173
$758    $1158   JP       $158            ; Jump to 158
$75A    $4242   SNE      V2, #42         ; Skip if V2 != 66
$75C    $E02C   UNKNOWN  $E02C           ; Unknown Exxx instruction
$75E    $F04F   UNKNOWN  F04F            ; Unknown Fxxx instruction
$760    $EDEF   UNKNOWN  $EDEF           ; Unknown Exxx instruction
$762    $338F   SE       V3, #8F         ; Skip if V3 == 143
$764    $B79D   JP       V0, $79D        ; Jump to V0 + 79D
$766    $EBFF   UNKNOWN  $EBFF           ; Unknown Exxx instruction
$768    $D9ED   DRW      V9, VE, #D      ; Draw 13-byte sprite at V9, VE
$76A    $0B65   SYS      $B65            ; System call to B65
$76C    $7439   ADD      V4, #39         ; Add 57 to V4
$76E    $961B   UNKNOWN  $961B           ; Unknown 9xxx instruction
$770    $039B   SYS      $39B            ; System call to 39B
$772    $DCFE   DRW      VC, VF, #E      ; Draw 14-byte sprite at VC, VF
$774    $2810   CALL     $810            ; Call subroutine at 810
$776    $FE2D   UNKNOWN  FE2D            ; Unknown Fxxx instruction
$778    $3FF6   SE       VF, #F6         ; Skip if VF == 246
$77A    $F5C6   UNKNOWN  F5C6            ; Unknown Fxxx instruction
$77C    $6A58   LD       VA, #58         ; Load 88 into VA
$77E    $CBDC   RND      VB, #DC         ; VB = random & DC
$780    $C44C   RND      V4, #4C         ; V4 = random & 4C
$782    $5E01   UNKNOWN  $5E01           ; Unknown 5xxx instruction
$784    $18B4   JP       $8B4            ; Jump to 8B4
$786    $C8C5   RND      V8, #C5         ; V8 = random & C5
$788    $C060   RND      V0, #60         ; V0 = random & 60
$78A    $F2CB   UNKNOWN  F2CB            ; Unknown Fxxx instruction
$78C    $4A48   SNE      VA, #48         ; Skip if VA != 72
$78E    $58A2   UNKNOWN  $58A2           ; Unknown 5xxx instruction
$790    $A558   LD       I, $558         ; Load 558 into I
$792    $E921   UNKNOWN  $E921           ; Unknown Exxx instruction
$794    $A2F3   LD       I, $2F3         ; Load 2F3 into I
$796    $C2E8   RND      V2, #E8         ; V2 = random & E8
$798    $ED07   UNKNOWN  $ED07           ; Unknown Exxx instruction
$79A    $E524   UNKNOWN  $E524           ; Unknown Exxx instruction
$79C    $B464   JP       V0, $464        ; Jump to V0 + 464
$79E    $2D29   CALL     $D29            ; Call subroutine at D29
$7A0    $0B88   SYS      $B88            ; System call to B88
$7A2    $1052   JP       $052            ; Jump to 052
$7A4    $C3D4   RND      V3, #D4         ; V3 = random & D4
$7A6    $7B47   ADD      VB, #47         ; Add 71 to VB
$7A8    $5618   UNKNOWN  $5618           ; Unknown 5xxx instruction
$7AA    $D217   DRW      V2, V1, #7      ; Draw 7-byte sprite at V2, V1
$7AC    $DC13   DRW      VC, V1, #3      ; Draw 3-byte sprite at VC, V1
$7AE    $8D69   UNKNOWN  8D69            ; Unknown 8xxx instruction
$7B0    $558B   UNKNOWN  $558B           ; Unknown 5xxx instruction
$7B2    $A5F2   LD       I, $5F2         ; Load 5F2 into I
$7B4    $5F51   UNKNOWN  $5F51           ; Unknown 5xxx instruction
$7B6    $189D   JP       $89D            ; Jump to 89D
$7B8    $2828   CALL     $828            ; Call subroutine at 828
$7BA    $15D0   JP       $5D0            ; Jump to 5D0
$7BC    $3FCA   SE       VF, #CA         ; Skip if VF == 202
$7BE    $2D94   CALL     $D94            ; Call subroutine at D94
$7C0    $3373   SE       V3, #73         ; Skip if V3 == 115
$7C2    $A4B6   LD       I, $4B6         ; Load 4B6 into I
$7C4    $51FF   UNKNOWN  $51FF           ; Unknown 5xxx instruction
$7C6    $C699   RND      V6, #99         ; V6 = random & 99
$7C8    $0F79   SYS      $F79            ; System call to F79
$7CA    $77E9   ADD      V7, #E9         ; Add 233 to V7
$7CC    $8776   SHR      V7              ; V7 >>= 1, VF = LSB
$7CE    $3A01   SE       VA, #01         ; Skip if VA == 1
$7D0    $EC3C   UNKNOWN  $EC3C           ; Unknown Exxx instruction
$7D2    $FC4D   UNKNOWN  FC4D            ; Unknown Fxxx instruction
$7D4    $6278   LD       V2, #78         ; Load 120 into V2
$7D6    $9235   UNKNOWN  $9235           ; Unknown 9xxx instruction
$7D8    $538A   UNKNOWN  $538A           ; Unknown 5xxx instruction
$7DA    $C626   RND      V6, #26         ; V6 = random & 26
$7DC    $02E1   SYS      $2E1            ; System call to 2E1
$7DE    $0277   SYS      $277            ; System call to 277
$7E0    $2ED4   CALL     $ED4            ; Call subroutine at ED4
$7E2    $F030   UNKNOWN  F030            ; Unknown Fxxx instruction
$7E4    $94AA   UNKNOWN  $94AA           ; Unknown 9xxx instruction
$7E6    $C9AD   RND      V9, #AD         ; V9 = random & AD
$7E8    $B7A1   JP       V0, $7A1        ; Jump to V0 + 7A1
$7EA    $CA1C   RND      VA, #1C         ; VA = random & 1C
$7EC    $0E36   SYS      $E36            ; System call to E36
$7EE    $A8D6   LD       I, $8D6         ; Load 8D6 into I
$7F0    $53B5   UNKNOWN  $53B5           ; Unknown 5xxx instruction
$7F2    $2E07   CALL     $E07            ; Call subroutine at E07
$7F4    $2DAF   CALL     $DAF            ; Call subroutine at DAF
$7F6    $42BA   SNE      V2, #BA         ; Skip if V2 != 186
$7F8    $B2BD   JP       V0, $2BD        ; Jump to V0 + 2BD
$7FA    $B714   JP       V0, $714        ; Jump to V0 + 714
$7FC    $1B7E   JP       $B7E            ; Jump to B7E
$7FE    $7495   ADD      V4, #95         ; Add 149 to V4
$800    $9156   UNKNOWN  $9156           ; Unknown 9xxx instruction
$802    $C96F   RND      V9, #6F         ; V9 = random & 6F
$804    $680C   LD       V8, #0C         ; Load 12 into V8
$806    $4207   SNE      V2, #07         ; Skip if V2 != 7
$808    $96E3   UNKNOWN  $96E3           ; Unknown 9xxx instruction
$80A    $12B5   JP       $2B5            ; Jump to 2B5
$80C    $2083   CALL     $083            ; Call subroutine at 083
$80E    $C60D   RND      V6, #0D         ; V6 = random & 0D
$810    $BAF1   JP       V0, $AF1        ; Jump to V0 + AF1
$812    $317E   SE       V1, #7E         ; Skip if V1 == 126
$814    $AEDD   LD       I, $EDD         ; Load EDD into I
$816    $42A2   SNE      V2, #A2         ; Skip if V2 != 162
$818    $E325   UNKNOWN  $E325           ; Unknown Exxx instruction
$81A    $6E9A   LD       VE, #9A         ; Load 154 into VE
$81C    $74E1   ADD      V4, #E1         ; Add 225 to V4
$81E    $D55F   DRW      V5, V5, #F      ; Draw 15-byte sprite at V5, V5
$820    $F2FE   UNKNOWN  F2FE            ; Unknown Fxxx instruction
$822    $F0B2   UNKNOWN  F0B2            ; Unknown Fxxx instruction
$824    $4DFB   SNE      VD, #FB         ; Skip if VD != 251
$826    $1E40   JP       $E40            ; Jump to E40
$828    $5B77   UNKNOWN  $5B77           ; Unknown 5xxx instruction
$82A    $CAB7   RND      VA, #B7         ; VA = random & B7
$82C    $BCD8   JP       V0, $CD8        ; Jump to V0 + CD8
$82E    $8B82   AND      VB, V8          ; VB &= V8
$830    $EDD4   UNKNOWN  $EDD4           ; Unknown Exxx instruction
$832    $3B79   SE       VB, #79         ; Skip if VB == 121
$834    $08EF   SYS      $8EF            ; System call to 8EF
$836    $A1D3   LD       I, $1D3         ; Load 1D3 into I
$838    $8288   UNKNOWN  8288            ; Unknown 8xxx instruction
$83A    $D575   DRW      V5, V7, #5      ; Draw 5-byte sprite at V5, V7
$83C    $815B   UNKNOWN  815B            ; Unknown 8xxx instruction
$83E    $7293   ADD      V2, #93         ; Add 147 to V2
$840    $C63A   RND      V6, #3A         ; V6 = random & 3A
$842    $850C   UNKNOWN  850C            ; Unknown 8xxx instruction
$844    $6475   LD       V4, #75         ; Load 117 into V4
$846    $F785   UNKNOWN  F785            ; Unknown Fxxx instruction
$848    $E82C   UNKNOWN  $E82C           ; Unknown Exxx instruction
$84A    $0C6B   SYS      $C6B            ; System call to C6B
$84C    $8AE9   UNKNOWN  8AE9            ; Unknown 8xxx instruction
$84E    $9181   UNKNOWN  $9181           ; Unknown 9xxx instruction
$850    $9B96   UNKNOWN  $9B96           ; Unknown 9xxx instruction
$852    $BEA3   JP       V0, $EA3        ; Jump to V0 + EA3
$854    $0A29   SYS      $A29            ; System call to A29
$856    $E08B   UNKNOWN  $E08B           ; Unknown Exxx instruction
$858    $808A   UNKNOWN  808A            ; Unknown 8xxx instruction
$85A    $5474   UNKNOWN  $5474           ; Unknown 5xxx instruction
$85C    $0831   SYS      $831            ; System call to 831
$85E    $5736   UNKNOWN  $5736           ; Unknown 5xxx instruction
$860    $F8A6   UNKNOWN  F8A6            ; Unknown Fxxx instruction
$862    $DFFC   DRW      VF, VF, #C      ; Draw 12-byte sprite at VF, VF
$864    $FEF0   UNKNOWN  FEF0            ; Unknown Fxxx instruction
$866    $ACAF   LD       I, $CAF         ; Load CAF into I
$868    $08D8   SYS      $8D8            ; System call to 8D8
$86A    $E601   UNKNOWN  $E601           ; Unknown Exxx instruction
$86C    $32A8   SE       V2, #A8         ; Skip if V2 == 168
$86E    $316C   SE       V1, #6C         ; Skip if V1 == 108
$870    $1CA2   JP       $CA2            ; Jump to CA2
$872    $A590   LD       I, $590         ; Load 590 into I
$874    $BEEA   JP       V0, $EEA        ; Jump to V0 + EEA
$876    $5668   UNKNOWN  $5668           ; Unknown 5xxx instruction
$878    $447E   SNE      V4, #7E         ; Skip if V4 != 126
$87A    $A396   LD       I, $396         ; Load 396 into I
$87C    $017F   SYS      $17F            ; System call to 17F
$87E    $9880   SNE      V8, V8          ; Skip if V8 != V8
$880    $0322   SYS      $322            ; System call to 322
$882    $B632   JP       V0, $632        ; Jump to V0 + 632
$884    $BCFB   JP       V0, $CFB        ; Jump to V0 + CFB
$886    $C35C   RND      V3, #5C         ; V3 = random & 5C
$888    $7CB2   ADD      VC, #B2         ; Add 178 to VC
$88A    $7766   ADD      V7, #66         ; Add 102 to V7
$88C    $1316   JP       $316            ; Jump to 316
$88E    $3E2C   SE       VE, #2C         ; Skip if VE == 44
$890    $B304   JP       V0, $304        ; Jump to V0 + 304
$892    $6030   LD       V0, #30         ; Load 48 into V0
$894    $34E2   SE       V4, #E2         ; Skip if V4 == 226
$896    $220A   CALL     $20A            ; Call subroutine at 20A
$898    $34B1   SE       V4, #B1         ; Skip if V4 == 177
$89A    $491D   SNE      V9, #1D         ; Skip if V9 != 29
$89C    $F232   UNKNOWN  F232            ; Unknown Fxxx instruction
$89E    $D470   DRW      V4, V7, #0      ; Draw 0-byte sprite at V4, V7
$8A0    $A9AC   LD       I, $9AC         ; Load 9AC into I
$8A2    $1C6F   JP       $C6F            ; Jump to C6F
$8A4    $DF01   DRW      VF, V0, #1      ; Draw 1-byte sprite at VF, V0
$8A6    $5A7F   UNKNOWN  $5A7F           ; Unknown 5xxx instruction
$8A8    $C106   RND      V1, #06         ; V1 = random & 06
$8AA    $9183   UNKNOWN  $9183           ; Unknown 9xxx instruction
$8AC    $A688   LD       I, $688         ; Load 688 into I
$8AE    $116A   JP       $16A            ; Jump to 16A
$8B0    $2E30   CALL     $E30            ; Call subroutine at E30
$8B2    $EF73   UNKNOWN  $EF73           ; Unknown Exxx instruction
$8B4    $B075   JP       V0, $075        ; Jump to V0 + 075
$8B6    $0EFA   SYS      $EFA            ; System call to EFA
$8B8    $55BF   UNKNOWN  $55BF           ; Unknown 5xxx instruction
$8BA    $2D75   CALL     $D75            ; Call subroutine at D75
$8BC    $A11C   LD       I, $11C         ; Load 11C into I
$8BE    $7905   ADD      V9, #05         ; Add 5 to V9
$8C0    $3654   SE       V6, #54         ; Skip if V6 == 84
$8C2    $CDD1   RND      VD, #D1         ; VD = random & D1
$8C4    $5AE3   UNKNOWN  $5AE3           ; Unknown 5xxx instruction
$8C6    $CDE7   RND      VD, #E7         ; VD = random & E7
$8C8    $2203   CALL     $203            ; Call subroutine at 203
$8CA    $4366   SNE      V3, #66         ; Skip if V3 != 102
$8CC    $FF98   UNKNOWN  FF98            ; Unknown Fxxx instruction
$8CE    $D3A6   DRW      V3, VA, #6      ; Draw 6-byte sprite at V3, VA
$8D0    $227E   CALL     $27E            ; Call subroutine at 27E
$8D2    $9C0B   UNKNOWN  $9C0B           ; Unknown 9xxx instruction
$8D4    $3F88   SE       VF, #88         ; Skip if VF == 136
$8D6    $0B4C   SYS      $B4C            ; System call to B4C
$8D8    $EAE9   UNKNOWN  $EAE9           ; Unknown Exxx instruction
$8DA    $27A1   CALL     $7A1            ; Call subroutine at 7A1
$8DC    $A73C   LD       I, $73C         ; Load 73C into I
$8DE    $A838   LD       I, $838         ; Load 838 into I
$8E0    $203E   CALL     $03E            ; Call subroutine at 03E
$8E2    $78A8   ADD      V8, #A8         ; Add 168 to V8
$8E4    $8D37   SUBN     VD, V3          ; VD = V3 - VD, VF = !borrow
$8E6    $AB86   LD       I, $B86         ; Load B86 into I
$8E8    $6A4E   LD       VA, #4E         ; Load 78 into VA
$8EA    $ED04   UNKNOWN  $ED04           ; Unknown Exxx instruction
$8EC    $5A13   UNKNOWN  $5A13           ; Unknown 5xxx instruction
$8EE    $729E   ADD      V2, #9E         ; Add 158 to V2
$8F0    $19AF   JP       $9AF            ; Jump to 9AF
$8F2    $26DF   CALL     $6DF            ; Call subroutine at 6DF
$8F4    $9CA4   UNKNOWN  $9CA4           ; Unknown 9xxx instruction
$8F6    $29DD   CALL     $9DD            ; Call subroutine at 9DD
$8F8    $7C7A   ADD      VC, #7A         ; Add 122 to VC
$8FA    $645E   LD       V4, #5E         ; Load 94 into V4
$8FC    $B770   JP       V0, $770        ; Jump to V0 + 770
$8FE    $E11C   UNKNOWN  $E11C           ; Unknown Exxx instruction
$900    $B060   JP       V0, $060        ; Jump to V0 + 060
$902    $F78D   UNKNOWN  F78D            ; Unknown Fxxx instruction
$904    $3E9A   SE       VE, #9A         ; Skip if VE == 154
$906    $D1DF   DRW      V1, VD, #F      ; Draw 15-byte sprite at V1, VD
$908    $6C64   LD       VC, #64         ; Load 100 into VC
$90A    $6042   LD       V0, #42         ; Load 66 into V0
$90C    $2530   CALL     $530            ; Call subroutine at 530
$90E    $2D06   CALL     $D06            ; Call subroutine at D06
$910    $AC21   LD       I, $C21         ; Load C21 into I
$912    $6A93   LD       VA, #93         ; Load 147 into VA
$914    $18B9   JP       $8B9            ; Jump to 8B9
$916    $A167   LD       I, $167         ; Load 167 into I
$918    $5972   UNKNOWN  $5972           ; Unknown 5xxx instruction
$91A    $9641   UNKNOWN  $9641           ; Unknown 9xxx instruction
$91C    $D4D1   DRW      V4, VD, #1      ; Draw 1-byte sprite at V4, VD
$91E    $6D14   LD       VD, #14         ; Load 20 into VD
$920    $F77A   UNKNOWN  F77A            ; Unknown Fxxx instruction
$922    $5B8E   UNKNOWN  $5B8E           ; Unknown 5xxx instruction
$924    $0B75   SYS      $B75            ; System call to B75
$926    $404B   SNE      V0, #4B         ; Skip if V0 != 75
$928    $3269   SE       V2, #69         ; Skip if V2 == 105
$92A    $0114   SYS      $114            ; System call to 114
$92C    $7E3E   ADD      VE, #3E         ; Add 62 to VE
$92E    $A429   LD       I, $429         ; Load 429 into I
$930    $4913   SNE      V9, #13         ; Skip if V9 != 19
$932    $D1D5   DRW      V1, VD, #5      ; Draw 5-byte sprite at V1, VD
$934    $8ECC   UNKNOWN  8ECC            ; Unknown 8xxx instruction
$936    $9F60   SNE      VF, V6          ; Skip if VF != V6
$938    $A3E6   LD       I, $3E6         ; Load 3E6 into I
$93A    $9BE9   UNKNOWN  $9BE9           ; Unknown 9xxx instruction
$93C    $D595   DRW      V5, V9, #5      ; Draw 5-byte sprite at V5, V9
$93E    $EDC2   UNKNOWN  $EDC2           ; Unknown Exxx instruction
$940    $0274   SYS      $274            ; System call to 274
$942    $86A1   OR       V6, VA          ; V6 |= VA
$944    $5E0B   UNKNOWN  $5E0B           ; Unknown 5xxx instruction
$946    $EC50   UNKNOWN  $EC50           ; Unknown Exxx instruction
$948    $0509   SYS      $509            ; System call to 509
$94A    $1E40   JP       $E40            ; Jump to E40
$94C    $4CF3   SNE      VC, #F3         ; Skip if VC != 243
$94E    $75FB   ADD      V5, #FB         ; Add 251 to V5
$950    $509E   UNKNOWN  $509E           ; Unknown 5xxx instruction
$952    $2906   CALL     $906            ; Call subroutine at 906
$954    $5826   UNKNOWN  $5826           ; Unknown 5xxx instruction
$956    $8944   ADD      V9, V4          ; V9 += V4, VF = carry
$958    $20B8   CALL     $0B8            ; Call subroutine at 0B8
$95A    $3AF3   SE       VA, #F3         ; Skip if VA == 243
$95C    $ABFA   LD       I, $BFA         ; Load BFA into I
$95E    $50C9   UNKNOWN  $50C9           ; Unknown 5xxx instruction
$960    $1704   JP       $704            ; Jump to 704
$962    $7BA5   ADD      VB, #A5         ; Add 165 to VB
$964    $CA47   RND      VA, #47         ; VA = random & 47
$966    $5831   UNKNOWN  $5831           ; Unknown 5xxx instruction
$968    $C2EA   RND      V2, #EA         ; V2 = random & EA
$96A    $E809   UNKNOWN  $E809           ; Unknown Exxx instruction
$96C    $92A7   UNKNOWN  $92A7           ; Unknown 9xxx instruction
$96E    $CD50   RND      VD, #50         ; VD = random & 50
$970    $BF15   JP       V0, $F15        ; Jump to V0 + F15
$972    $9761   UNKNOWN  $9761           ; Unknown 9xxx instruction
$974    $A2FA   LD       I, $2FA         ; Load 2FA into I
$976    $5614   UNKNOWN  $5614           ; Unknown 5xxx instruction
$978    $36CC   SE       V6, #CC         ; Skip if V6 == 204
$97A    $431D   SNE      V3, #1D         ; Skip if V3 != 29
$97C    $3FA8   SE       VF, #A8         ; Skip if VF == 168
$97E    $BD3F   JP       V0, $D3F        ; Jump to V0 + D3F
$980    $2AE4   CALL     $AE4            ; Call subroutine at AE4
$982    $7C5B   ADD      VC, #5B         ; Add 91 to VC
$984    $9586   UNKNOWN  $9586           ; Unknown 9xxx instruction
$986    $1E96   JP       $E96            ; Jump to E96
$988    $8439   UNKNOWN  8439            ; Unknown 8xxx instruction
$98A    $A369   LD       I, $369         ; Load 369 into I
$98C    $8036   SHR      V0              ; V0 >>= 1, VF = LSB
$98E    $290C   CALL     $90C            ; Call subroutine at 90C
$990    $2E99   CALL     $E99            ; Call subroutine at E99
$992    $A830   LD       I, $830         ; Load 830 into I
$994    $A9C3   LD       I, $9C3         ; Load 9C3 into I
$996    $4BC7   SNE      VB, #C7         ; Skip if VB != 199
$998    $DC59   DRW      VC, V5, #9      ; Draw 9-byte sprite at VC, V5
$99A    $B8E4   JP       V0, $8E4        ; Jump to V0 + 8E4
$99C    $939A   UNKNOWN  $939A           ; Unknown 9xxx instruction
$99E    $A9F2   LD       I, $9F2         ; Load 9F2 into I
$9A0    $BD7F   JP       V0, $D7F        ; Jump to V0 + D7F
$9A2    $2E4D   CALL     $E4D            ; Call subroutine at E4D
$9A4    $307E   SE       V0, #7E         ; Skip if V0 == 126
$9A6    $D08E   DRW      V0, V8, #E      ; Draw 14-byte sprite at V0, V8
$9A8    $0FCA   SYS      $FCA            ; System call to FCA
$9AA    $CF16   RND      VF, #16         ; VF = random & 16
$9AC    $E775   UNKNOWN  $E775           ; Unknown Exxx instruction
$9AE    $A017   LD       I, $017         ; Load 017 into I
$9B0    $FE04   UNKNOWN  FE04            ; Unknown Fxxx instruction
$9B2    $22C5   CALL     $2C5            ; Call subroutine at 2C5
$9B4    $E34A   UNKNOWN  $E34A           ; Unknown Exxx instruction
$9B6    $74B7   ADD      V4, #B7         ; Add 183 to V4
$9B8    $E530   UNKNOWN  $E530           ; Unknown Exxx instruction
$9BA    $9173   UNKNOWN  $9173           ; Unknown 9xxx instruction
$9BC    $C7EB   RND      V7, #EB         ; V7 = random & EB
$9BE    $E347   UNKNOWN  $E347           ; Unknown Exxx instruction
$9C0    $D997   DRW      V9, V9, #7      ; Draw 7-byte sprite at V9, V9
$9C2    $ECB0   UNKNOWN  $ECB0           ; Unknown Exxx instruction
$9C4    $0805   SYS      $805            ; System call to 805
$9C6    $6D40   LD       VD, #40         ; Load 64 into VD
$9C8    $E779   UNKNOWN  $E779           ; Unknown Exxx instruction
$9CA    $7635   ADD      V6, #35         ; Add 53 to V6
$9CC    $C268   RND      V2, #68         ; V2 = random & 68
$9CE    $5EA9   UNKNOWN  $5EA9           ; Unknown 5xxx instruction
$9D0    $82EA   UNKNOWN  82EA            ; Unknown 8xxx instruction
$9D2    $5569   UNKNOWN  $5569           ; Unknown 5xxx instruction
$9D4    $104F   JP       $04F            ; Jump to 04F
$9D6    $A474   LD       I, $474         ; Load 474 into I
$9D8    $73C6   ADD      V3, #C6         ; Add 198 to V3
$9DA    $8505   SUB      V5, V0          ; V5 -= V0, VF = !borrow
$9DC    $E073   UNKNOWN  $E073           ; Unknown Exxx instruction
$9DE    $03E6   SYS      $3E6            ; System call to 3E6
$9E0    $B7BF   JP       V0, $7BF        ; Jump to V0 + 7BF
$9E2    $BCE7   JP       V0, $CE7        ; Jump to V0 + CE7
$9E4    $3436   SE       V4, #36         ; Skip if V4 == 54
$9E6    $9A5F   UNKNOWN  $9A5F           ; Unknown 9xxx instruction
$9E8    $8822   AND      V8, V2          ; V8 &= V2
$9EA    $BAC7   JP       V0, $AC7        ; Jump to V0 + AC7
$9EC    $FC16   UNKNOWN  FC16            ; Unknown Fxxx instruction
$9EE    $BE9C   JP       V0, $E9C        ; Jump to V0 + E9C
$9F0    $B0E0   JP       V0, $0E0        ; Jump to V0 + 0E0
$9F2    $E6BC   UNKNOWN  $E6BC           ; Unknown Exxx instruction
$9F4    $9584   UNKNOWN  $9584           ; Unknown 9xxx instruction
$9F6    $A114   LD       I, $114         ; Load 114 into I
$9F8    $52CF   UNKNOWN  $52CF           ; Unknown 5xxx instruction
$9FA    $4575   SNE      V5, #75         ; Skip if V5 != 117
$9FC    $FD45   UNKNOWN  FD45            ; Unknown Fxxx instruction
$9FE    $B05F   JP       V0, $05F        ; Jump to V0 + 05F
$A00    $EA55   UNKNOWN  $EA55           ; Unknown Exxx instruction
$A02    $EC1C   UNKNOWN  $EC1C           ; Unknown Exxx instruction
$A04    $E9F2   UNKNOWN  $E9F2           ; Unknown Exxx instruction
$A06    $98C6   UNKNOWN  $98C6           ; Unknown 9xxx instruction
$A08    $548C   UNKNOWN  $548C           ; Unknown 5xxx instruction
$A0A    $F942   UNKNOWN  F942            ; Unknown Fxxx instruction
$A0C    $4660   SNE      V6, #60         ; Skip if V6 != 96
$A0E    $A6BD   LD       I, $6BD         ; Load 6BD into I
$A10    $9466   UNKNOWN  $9466           ; Unknown 9xxx instruction
$A12    $A8BE   LD       I, $8BE         ; Load 8BE into I
$A14    $1AB3   JP       $AB3            ; Jump to AB3
$A16    $E947   UNKNOWN  $E947           ; Unknown Exxx instruction
$A18    $6303   LD       V3, #03         ; Load 3 into V3
$A1A    $392F   SE       V9, #2F         ; Skip if V9 == 47
$A1C    $6DB6   LD       VD, #B6         ; Load 182 into VD
$A1E    $ED9E   SKP      VD              ; Skip if key VD pressed
$A20    $DFBD   DRW      VF, VB, #D      ; Draw 13-byte sprite at VF, VB
$A22    $BD19   JP       V0, $D19        ; Jump to V0 + D19
$A24    $C964   RND      V9, #64         ; V9 = random & 64
$A26    $1A39   JP       $A39            ; Jump to A39
$A28    $DBA2   DRW      VB, VA, #2      ; Draw 2-byte sprite at VB, VA
$A2A    $2DF7   CALL     $DF7            ; Call subroutine at DF7
$A2C    $7CFC   ADD      VC, #FC         ; Add 252 to VC
$A2E    $9437   UNKNOWN  $9437           ; Unknown 9xxx instruction
$A30    $99A3   UNKNOWN  $99A3           ; Unknown 9xxx instruction
$A32    $EC27   UNKNOWN  $EC27           ; Unknown Exxx instruction
$A34    $D2B1   DRW      V2, VB, #1      ; Draw 1-byte sprite at V2, VB
$A36    $7944   ADD      V9, #44         ; Add 68 to V9
$A38    $FD1B   UNKNOWN  FD1B            ; Unknown Fxxx instruction
$A3A    $1086   JP       $086            ; Jump to 086
$A3C    $FB16   UNKNOWN  FB16            ; Unknown Fxxx instruction
$A3E    $E2C7   UNKNOWN  $E2C7           ; Unknown Exxx instruction
$A40    $E129   UNKNOWN  $E129           ; Unknown Exxx instruction
$A42    $FB06   UNKNOWN  FB06            ; Unknown Fxxx instruction
$A44    $0D04   SYS      $D04            ; System call to D04
$A46    $83EE   SHL      V3              ; V3 <<= 1, VF = MSB
$A48    $1565   JP       $565            ; Jump to 565
$A4A    $443D   SNE      V4, #3D         ; Skip if V4 != 61
$A4C    $A8B9   LD       I, $8B9         ; Load 8B9 into I
$A4E    $11DB   JP       $1DB            ; Jump to 1DB
$A50    $B750   JP       V0, $750        ; Jump to V0 + 750
$A52    $617F   LD       V1, #7F         ; Load 127 into V1
$A54    $9462   UNKNOWN  $9462           ; Unknown 9xxx instruction
$A56    $3D05   SE       VD, #05         ; Skip if VD == 5
$A58    $61B9   LD       V1, #B9         ; Load 185 into V1
$A5A    $5A43   UNKNOWN  $5A43           ; Unknown 5xxx instruction
$A5C    $9234   UNKNOWN  $9234           ; Unknown 9xxx instruction
$A5E    $D6AE   DRW      V6, VA, #E      ; Draw 14-byte sprite at V6, VA
$A60    $10E7   JP       $0E7            ; Jump to 0E7
$A62    $A6C2   LD       I, $6C2         ; Load 6C2 into I
$A64    $315C   SE       V1, #5C         ; Skip if V1 == 92
$A66    $34BE   SE       V4, #BE         ; Skip if V4 == 190
$A68    $2D91   CALL     $D91            ; Call subroutine at D91
$A6A    $BC9B   JP       V0, $C9B        ; Jump to V0 + C9B
$A6C    $786D   ADD      V8, #6D         ; Add 109 to V8
$A6E    $9DC5   UNKNOWN  $9DC5           ; Unknown 9xxx instruction
$A70    $A8AC   LD       I, $8AC         ; Load 8AC into I
$A72    $5025   UNKNOWN  $5025           ; Unknown 5xxx instruction
$A74    $C446   RND      V4, #46         ; V4 = random & 46
$A76    $C1F0   RND      V1, #F0         ; V1 = random & F0
$A78    $001B   SYS      $01B            ; System call to 01B
$A7A    $A720   LD       I, $720         ; Load 720 into I
$A7C    $CEF6   RND      VE, #F6         ; VE = random & F6
$A7E    $FD7D   UNKNOWN  FD7D            ; Unknown Fxxx instruction
$A80    $16A9   JP       $6A9            ; Jump to 6A9
$A82    $C1CF   RND      V1, #CF         ; V1 = random & CF
$A84    $EC1E   UNKNOWN  $EC1E           ; Unknown Exxx instruction
$A86    $25BF   CALL     $5BF            ; Call subroutine at 5BF
$A88    $D6F8   DRW      V6, VF, #8      ; Draw 8-byte sprite at V6, VF
$A8A    $1E25   JP       $E25            ; Jump to E25
$A8C    $7186   ADD      V1, #86         ; Add 134 to V1
$A8E    $5203   UNKNOWN  $5203           ; Unknown 5xxx instruction
$A90    $DC9C   DRW      VC, V9, #C      ; Draw 12-byte sprite at VC, V9
$A92    $7668   ADD      V6, #68         ; Add 104 to V6
$A94    $EBBC   UNKNOWN  $EBBC           ; Unknown Exxx instruction
$A96    $7DAF   ADD      VD, #AF         ; Add 175 to VD
$A98    $B8EE   JP       V0, $8EE        ; Jump to V0 + 8EE
$A9A    $95A0   SNE      V5, VA          ; Skip if V5 != VA
$A9C    $22C6   CALL     $2C6            ; Call subroutine at 2C6
$A9E    $F2D4   UNKNOWN  F2D4            ; Unknown Fxxx instruction
$AA0    $D8BD   DRW      V8, VB, #D      ; Draw 13-byte sprite at V8, VB
$AA2    $458F   SNE      V5, #8F         ; Skip if V5 != 143
$AA4    $4E5D   SNE      VE, #5D         ; Skip if VE != 93
$AA6    $FE9A   UNKNOWN  FE9A            ; Unknown Fxxx instruction
$AA8    $B08A   JP       V0, $08A        ; Jump to V0 + 08A
$AAA    $2F90   CALL     $F90            ; Call subroutine at F90
$AAC    $AFB8   LD       I, $FB8         ; Load FB8 into I
$AAE    $D085   DRW      V0, V8, #5      ; Draw 5-byte sprite at V0, V8
$AB0    $23D4   CALL     $3D4            ; Call subroutine at 3D4
$AB2    $FC4C   UNKNOWN  FC4C            ; Unknown Fxxx instruction
$AB4    $B951   JP       V0, $951        ; Jump to V0 + 951
$AB6    $9660   SNE      V6, V6          ; Skip if V6 != V6
$AB8    $92C6   UNKNOWN  $92C6           ; Unknown 9xxx instruction
$ABA    $65BB   LD       V5, #BB         ; Load 187 into V5
$ABC    $7710   ADD      V7, #10         ; Add 16 to V7
$ABE    $E744   UNKNOWN  $E744           ; Unknown Exxx instruction
$AC0    $83A5   SUB      V3, VA          ; V3 -= VA, VF = !borrow
$AC2    $FFD0   UNKNOWN  FFD0            ; Unknown Fxxx instruction
$AC4    $4DCA   SNE      VD, #CA         ; Skip if VD != 202
$AC6    $A07A   LD       I, $07A         ; Load 07A into I
$AC8    $DD7D   DRW      VD, V7, #D      ; Draw 13-byte sprite at VD, V7
$ACA    $A387   LD       I, $387         ; Load 387 into I
$ACC    $0A04   SYS      $A04            ; System call to A04
$ACE    $67E7   LD       V7, #E7         ; Load 231 into V7
$AD0    $ADB6   LD       I, $DB6         ; Load DB6 into I
$AD2    $5F4C   UNKNOWN  $5F4C           ; Unknown 5xxx instruction
$AD4    $D4F1   DRW      V4, VF, #1      ; Draw 1-byte sprite at V4, VF
$AD6    $2098   CALL     $098            ; Call subroutine at 098
$AD8    $111E   JP       $11E            ; Jump to 11E
$ADA    $8932   AND      V9, V3          ; V9 &= V3
$ADC    $FC93   UNKNOWN  FC93            ; Unknown Fxxx instruction
$ADE    $4174   SNE      V1, #74         ; Skip if V1 != 116
$AE0    $6EC5   LD       VE, #C5         ; Load 197 into VE
$AE2    $4534   SNE      V5, #34         ; Skip if V5 != 52
$AE4    $7D45   ADD      VD, #45         ; Add 69 to VD
$AE6    $F8CD   UNKNOWN  F8CD            ; Unknown Fxxx instruction
$AE8    $F908   UNKNOWN  F908            ; Unknown Fxxx instruction
$AEA    $23C4   CALL     $3C4            ; Call subroutine at 3C4
$AEC    $6EF0   LD       VE, #F0         ; Load 240 into VE
$AEE    $E050   UNKNOWN  $E050           ; Unknown Exxx instruction
$AF0    $AC5F   LD       I, $C5F         ; Load C5F into I
$AF2    $2173   CALL     $173            ; Call subroutine at 173
$AF4    $271C   CALL     $71C            ; Call subroutine at 71C
$AF6    $4E9E   SNE      VE, #9E         ; Skip if VE != 158
$AF8    $31E0   SE       V1, #E0         ; Skip if V1 == 224
$AFA    $D4CF   DRW      V4, VC, #F      ; Draw 15-byte sprite at V4, VC
$AFC    $AD8B   LD       I, $D8B         ; Load D8B into I
$AFE    $1C5E   JP       $C5E            ; Jump to C5E
$B00    $8132   AND      V1, V3          ; V1 &= V3
$B02    $52AE   UNKNOWN  $52AE           ; Unknown 5xxx instruction
$B04    $360E   SE       V6, #0E         ; Skip if V6 == 14
$B06    $1D27   JP       $D27            ; Jump to D27
$B08    $10D1   JP       $0D1            ; Jump to 0D1
$B0A    $C8CC   RND      V8, #CC         ; V8 = random & CC
$B0C    $42FC   SNE      V2, #FC         ; Skip if V2 != 252
$B0E    $3E76   SE       VE, #76         ; Skip if VE == 118
$B10    $C5D8   RND      V5, #D8         ; V5 = random & D8
$B12    $F8FF   UNKNOWN  F8FF            ; Unknown Fxxx instruction
$B14    $45FF   SNE      V5, #FF         ; Skip if V5 != 255
$B16    $086E   SYS      $86E            ; System call to 86E
$B18    $64FE   LD       V4, #FE         ; Load 254 into V4
$B1A    $528D   UNKNOWN  $528D           ; Unknown 5xxx instruction
$B1C    $90A0   SNE      V0, VA          ; Skip if V0 != VA
$B1E    $95EC   UNKNOWN  $95EC           ; Unknown 9xxx instruction
$B20    $BED0   JP       V0, $ED0        ; Jump to V0 + ED0
$B22    $8AD7   SUBN     VA, VD          ; VA = VD - VA, VF = !borrow
$B24    $3BC8   SE       VB, #C8         ; Skip if VB == 200
$B26    $8512   AND      V5, V1          ; V5 &= V1
$B28    $78FB   ADD      V8, #FB         ; Add 251 to V8
$B2A    $0238   SYS      $238            ; System call to 238
$B2C    $7B95   ADD      VB, #95         ; Add 149 to VB
$B2E    $4B6D   SNE      VB, #6D         ; Skip if VB != 109
$B30    $3D11   SE       VD, #11         ; Skip if VD == 17
$B32    $B6B9   JP       V0, $6B9        ; Jump to V0 + 6B9
$B34    $0FB3   SYS      $FB3            ; System call to FB3
$B36    $BA4A   JP       V0, $A4A        ; Jump to V0 + A4A
$B38    $A7E1   LD       I, $7E1         ; Load 7E1 into I
$B3A    $C11C   RND      V1, #1C         ; V1 = random & 1C
$B3C    $0178   SYS      $178            ; System call to 178
$B3E    $C26F   RND      V2, #6F         ; V2 = random & 6F
$B40    $FEE1   UNKNOWN  FEE1            ; Unknown Fxxx instruction
$B42    $81C9   UNKNOWN  81C9            ; Unknown 8xxx instruction
$B44    $DC4A   DRW      VC, V4, #A      ; Draw 10-byte sprite at VC, V4
$B46    $4F9F   SNE      VF, #9F         ; Skip if VF != 159
$B48    $930E   UNKNOWN  $930E           ; Unknown 9xxx instruction
$B4A    $7773   ADD      V7, #73         ; Add 115 to V7
$B4C    $F2D4   UNKNOWN  F2D4            ; Unknown Fxxx instruction
$B4E    $7969   ADD      V9, #69         ; Add 105 to V9
$B50    $58DF   UNKNOWN  $58DF           ; Unknown 5xxx instruction
$B52    $838E   SHL      V3              ; V3 <<= 1, VF = MSB
$B54    $61B9   LD       V1, #B9         ; Load 185 into V1
$B56    $F15C   UNKNOWN  F15C            ; Unknown Fxxx instruction
$B58    $4397   SNE      V3, #97         ; Skip if V3 != 151
$B5A    $6861   LD       V8, #61         ; Load 97 into V8
$B5C    $C9B7   RND      V9, #B7         ; V9 = random & B7
$B5E    $2A02   CALL     $A02            ; Call subroutine at A02
$B60    $53B6   UNKNOWN  $53B6           ; Unknown 5xxx instruction
$B62    $D98D   DRW      V9, V8, #D      ; Draw 13-byte sprite at V9, V8
$B64    $558D   UNKNOWN  $558D           ; Unknown 5xxx instruction
$B66    $AD74   LD       I, $D74         ; Load D74 into I
$B68    $8D74   ADD      VD, V7          ; VD += V7, VF = carry
$B6A    $A415   LD       I, $415         ; Load 415 into I
$B6C    $106C   JP       $06C            ; Jump to 06C
$B6E    $0417   SYS      $417            ; System call to 417
$B70    $EF67   UNKNOWN  $EF67           ; Unknown Exxx instruction
$B72    $7BE3   ADD      VB, #E3         ; Add 227 to VB
$B74    $11A1   JP       $1A1            ; Jump to 1A1
$B76    $8E5D   UNKNOWN  8E5D            ; Unknown 8xxx instruction
$B78    $9EF5   UNKNOWN  $9EF5           ; Unknown 9xxx instruction
$B7A    $0156   SYS      $156            ; System call to 156
$B7C    $D109   DRW      V1, V0, #9      ; Draw 9-byte sprite at V1, V0
$B7E    $C8A2   RND      V8, #A2         ; V8 = random & A2
$B80    $EC05   UNKNOWN  $EC05           ; Unknown Exxx instruction
$B82    $D387   DRW      V3, V8, #7      ; Draw 7-byte sprite at V3, V8
$B84    $8E03   XOR      VE, V0          ; VE ^= V0
$B86    $A697   LD       I, $697         ; Load 697 into I
$B88    $0B1A   SYS      $B1A            ; System call to B1A
$B8A    $7D9E   ADD      VD, #9E         ; Add 158 to VD
$B8C    $0221   SYS      $221            ; System call to 221
$B8E    $192D   JP       $92D            ; Jump to 92D
$B90    $A46A   LD       I, $46A         ; Load 46A into I
$B92    $4EEC   SNE      VE, #EC         ; Skip if VE != 236
$B94    $4D93   SNE      VD, #93         ; Skip if VD != 147
$B96    $71B1   ADD      V1, #B1         ; Add 177 to V1
$B98    $0ED7   SYS      $ED7            ; System call to ED7
$B9A    $46B9   SNE      V6, #B9         ; Skip if V6 != 185
$B9C    $A591   LD       I, $591         ; Load 591 into I
$B9E    $5A8E   UNKNOWN  $5A8E           ; Unknown 5xxx instruction
$BA0    $2C84   CALL     $C84            ; Call subroutine at C84
$BA2    $0C1A   SYS      $C1A            ; System call to C1A
$BA4    $17D0   JP       $7D0            ; Jump to 7D0
$BA6    $918E   UNKNOWN  $918E           ; Unknown 9xxx instruction
$BA8    $E1C8   UNKNOWN  $E1C8           ; Unknown Exxx instruction
$BAA    $016F   SYS      $16F            ; System call to 16F
$BAC    $C728   RND      V7, #28         ; V7 = random & 28
$BAE    $D41C   DRW      V4, V1, #C      ; Draw 12-byte sprite at V4, V1
$BB0    $ECAA   UNKNOWN  $ECAA           ; Unknown Exxx instruction
$BB2    $6023   LD       V0, #23         ; Load 35 into V0
$BB4    $3711   SE       V7, #11         ; Skip if V7 == 17
$BB6    $2791   CALL     $791            ; Call subroutine at 791
$BB8    $3F26   SE       VF, #26         ; Skip if VF == 38
$BBA    $E044   UNKNOWN  $E044           ; Unknown Exxx instruction
$BBC    $80FF   UNKNOWN  80FF            ; Unknown 8xxx instruction
$BBE    $E28C   UNKNOWN  $E28C           ; Unknown Exxx instruction
$BC0    $4CF7   SNE      VC, #F7         ; Skip if VC != 247
$BC2    $B281   JP       V0, $281        ; Jump to V0 + 281
$BC4    $2E05   CALL     $E05            ; Call subroutine at E05
$BC6    $2E5F   CALL     $E5F            ; Call subroutine at E5F
$BC8    $E9CA   UNKNOWN  $E9CA           ; Unknown Exxx instruction
$BCA    $BAF0   JP       V0, $AF0        ; Jump to V0 + AF0
$BCC    $BB4B   JP       V0, $B4B        ; Jump to V0 + B4B
$BCE    $7ED7   ADD      VE, #D7         ; Add 215 to VE
$BD0    $562D   UNKNOWN  $562D           ; Unknown 5xxx instruction
$BD2    $B6C4   JP       V0, $6C4        ; Jump to V0 + 6C4
$BD4    $37B5   SE       V7, #B5         ; Skip if V7 == 181
$BD6    $E3DC   UNKNOWN  $E3DC           ; Unknown Exxx instruction
$BD8    $672E   LD       V7, #2E         ; Load 46 into V7
$BDA    $B4BC   JP       V0, $4BC        ; Jump to V0 + 4BC
$BDC    $3EAB   SE       VE, #AB         ; Skip if VE == 171
$BDE    $E913   UNKNOWN  $E913           ; Unknown Exxx instruction
$BE0    $53AE   UNKNOWN  $53AE           ; Unknown 5xxx instruction
$BE2    $8053   XOR      V0, V5          ; V0 ^= V5
$BE4    $140E   JP       $40E            ; Jump to 40E
$BE6    $9BB2   UNKNOWN  $9BB2           ; Unknown 9xxx instruction
$BE8    $9DF4   UNKNOWN  $9DF4           ; Unknown 9xxx instruction
$BEA    $8829   UNKNOWN  8829            ; Unknown 8xxx instruction
$BEC    $C790   RND      V7, #90         ; V7 = random & 90
$BEE    $731E   ADD      V3, #1E         ; Add 30 to V3
$BF0    $0993   SYS      $993            ; System call to 993
$BF2    $6AA8   LD       VA, #A8         ; Load 168 into VA
$BF4    $9FA5   UNKNOWN  $9FA5           ; Unknown 9xxx instruction
$BF6    $8161   OR       V1, V6          ; V1 |= V6
$BF8    $3938   SE       V9, #38         ; Skip if V9 == 56
$BFA    $399B   SE       V9, #9B         ; Skip if V9 == 155
$BFC    $2595   CALL     $595            ; Call subroutine at 595
$BFE    $A7EF   LD       I, $7EF         ; Load 7EF into I
$C00    $2F97   CALL     $F97            ; Call subroutine at F97
$C02    $3FDF   SE       VF, #DF         ; Skip if VF == 223
$C04    $16B3   JP       $6B3            ; Jump to 6B3
$C06    $984A   UNKNOWN  $984A           ; Unknown 9xxx instruction
$C08    $0698   SYS      $698            ; System call to 698
$C0A    $DF35   DRW      VF, V3, #5      ; Draw 5-byte sprite at VF, V3
$C0C    $FCA4   UNKNOWN  FCA4            ; Unknown Fxxx instruction
$C0E    $DE70   DRW      VE, V7, #0      ; Draw 0-byte sprite at VE, V7
$C10    $5026   UNKNOWN  $5026           ; Unknown 5xxx instruction
$C12    $4CEF   SNE      VC, #EF         ; Skip if VC != 239
$C14    $64ED   LD       V4, #ED         ; Load 237 into V4
$C16    $47B1   SNE      V7, #B1         ; Skip if V7 != 177
$C18    $AC54   LD       I, $C54         ; Load C54 into I
$C1A    $4330   SNE      V3, #30         ; Skip if V3 != 48
$C1C    $BA02   JP       V0, $A02        ; Jump to V0 + A02
$C1E    $BA6B   JP       V0, $A6B        ; Jump to V0 + A6B
$C20    $4CE5   SNE      VC, #E5         ; Skip if VC != 229
$C22    $0ED2   SYS      $ED2            ; System call to ED2
$C24    $7807   ADD      V8, #07         ; Add 7 to V8
$C26    $F8DF   UNKNOWN  F8DF            ; Unknown Fxxx instruction
$C28    $FED5   UNKNOWN  FED5            ; Unknown Fxxx instruction
$C2A    $3D3E   SE       VD, #3E         ; Skip if VD == 62
$C2C    $6851   LD       V8, #51         ; Load 81 into V8
$C2E    $C2CF   RND      V2, #CF         ; V2 = random & CF
$C30    $4628   SNE      V6, #28         ; Skip if V6 != 40
$C32    $C12E   RND      V1, #2E         ; V1 = random & 2E
$C34    $4BED   SNE      VB, #ED         ; Skip if VB != 237
$C36    $83F1   OR       V3, VF          ; V3 |= VF
$C38    $64C4   LD       V4, #C4         ; Load 196 into V4
$C3A    $EA66   UNKNOWN  $EA66           ; Unknown Exxx instruction
$C3C    $2732   CALL     $732            ; Call subroutine at 732
$C3E    $D4A6   DRW      V4, VA, #6      ; Draw 6-byte sprite at V4, VA
$C40    $E169   UNKNOWN  $E169           ; Unknown Exxx instruction
$C42    $88D1   OR       V8, VD          ; V8 |= VD
$C44    $8360   LD       V3, V6          ; V3 = V6
$C46    $77F0   ADD      V7, #F0         ; Add 240 to V7
$C48    $E5D1   UNKNOWN  $E5D1           ; Unknown Exxx instruction
$C4A    $902D   UNKNOWN  $902D           ; Unknown 9xxx instruction
$C4C    $0296   SYS      $296            ; System call to 296
$C4E    $9615   UNKNOWN  $9615           ; Unknown 9xxx instruction
$C50    $757D   ADD      V5, #7D         ; Add 125 to V5
$C52    $0A20   SYS      $A20            ; System call to A20
$C54    $3A9B   SE       VA, #9B         ; Skip if VA == 155
$C56    $C59D   RND      V5, #9D         ; V5 = random & 9D
$C58    $F263   UNKNOWN  F263            ; Unknown Fxxx instruction
$C5A    $41BF   SNE      V1, #BF         ; Skip if V1 != 191
$C5C    $C7DF   RND      V7, #DF         ; V7 = random & DF
$C5E    $A13F   LD       I, $13F         ; Load 13F into I
$C60    $A268   LD       I, $268         ; Load 268 into I
$C62    $0538   SYS      $538            ; System call to 538
$C64    $FC18   LD       ST, VC          ; Sound timer = VC
$C66    $6D06   LD       VD, #06         ; Load 6 into VD
$C68    $3801   SE       V8, #01         ; Skip if V8 == 1
$C6A    $6C3F   LD       VC, #3F         ; Load 63 into VC
$C6C    $0CB4   SYS      $CB4            ; System call to CB4
$C6E    $7AA8   ADD      VA, #A8         ; Add 168 to VA
$C70    $DD45   DRW      VD, V4, #5      ; Draw 5-byte sprite at VD, V4
$C72    $B7EC   JP       V0, $7EC        ; Jump to V0 + 7EC
$C74    $27D2   CALL     $7D2            ; Call subroutine at 7D2
$C76    $5A27   UNKNOWN  $5A27           ; Unknown 5xxx instruction
$C78    $E3A5   UNKNOWN  $E3A5           ; Unknown Exxx instruction
$C7A    $3E55   SE       VE, #55         ; Skip if VE == 85
$C7C    $68B6   LD       V8, #B6         ; Load 182 into V8
$C7E    $E4AD   UNKNOWN  $E4AD           ; Unknown Exxx instruction
$C80    $95C9   UNKNOWN  $95C9           ; Unknown 9xxx instruction
$C82    $50C4   UNKNOWN  $50C4           ; Unknown 5xxx instruction
$C84    $C6C2   RND      V6, #C2         ; V6 = random & C2
$C86    $2156   CALL     $156            ; Call subroutine at 156
$C88    $F363   UNKNOWN  F363            ; Unknown Fxxx instruction
$C8A    $31F9   SE       V1, #F9         ; Skip if V1 == 249
$C8C    $F3DF   UNKNOWN  F3DF            ; Unknown Fxxx instruction
$C8E    $6E82   LD       VE, #82         ; Load 130 into VE
$C90    $910A   UNKNOWN  $910A           ; Unknown 9xxx instruction
$C92    $A2AB   LD       I, $2AB         ; Load 2AB into I
$C94    $6CDF   LD       VC, #DF         ; Load 223 into VC
$C96    $875D   UNKNOWN  875D            ; Unknown 8xxx instruction
$C98    $9FF7   UNKNOWN  $9FF7           ; Unknown 9xxx instruction
$C9A    $225D   CALL     $25D            ; Call subroutine at 25D
$C9C    $1253   JP       $253            ; Jump to 253
$C9E    $6B4F   LD       VB, #4F         ; Load 79 into VB
$CA0    $E3D9   UNKNOWN  $E3D9           ; Unknown Exxx instruction
$CA2    $9230   SNE      V2, V3          ; Skip if V2 != V3
$CA4    $6DE0   LD       VD, #E0         ; Load 224 into VD
$CA6    $E168   UNKNOWN  $E168           ; Unknown Exxx instruction
$CA8    $D272   DRW      V2, V7, #2      ; Draw 2-byte sprite at V2, V7
$CAA    $29EB   CALL     $9EB            ; Call subroutine at 9EB
$CAC    $9DB0   SNE      VD, VB          ; Skip if VD != VB
$CAE    $A644   LD       I, $644         ; Load 644 into I
$CB0    $8E23   XOR      VE, V2          ; VE ^= V2
$CB2    $55BA   UNKNOWN  $55BA           ; Unknown 5xxx instruction
$CB4    $1EBD   JP       $EBD            ; Jump to EBD
$CB6    $780D   ADD      V8, #0D         ; Add 13 to V8
$CB8    $4FD5   SNE      VF, #D5         ; Skip if VF != 213
$CBA    $0389   SYS      $389            ; System call to 389
$CBC    $6BF3   LD       VB, #F3         ; Load 243 into VB
$CBE    $4483   SNE      V4, #83         ; Skip if V4 != 131
$CC0    $3DC3   SE       VD, #C3         ; Skip if VD == 195
$CC2    $D04E   DRW      V0, V4, #E      ; Draw 14-byte sprite at V0, V4
$CC4    $C2D4   RND      V2, #D4         ; V2 = random & D4
$CC6    $A657   LD       I, $657         ; Load 657 into I
$CC8    $5B86   UNKNOWN  $5B86           ; Unknown 5xxx instruction
$CCA    $947F   UNKNOWN  $947F           ; Unknown 9xxx instruction
$CCC    $2111   CALL     $111            ; Call subroutine at 111
$CCE    $C95D   RND      V9, #5D         ; V9 = random & 5D
$CD0    $3F19   SE       VF, #19         ; Skip if VF == 25
$CD2    $CC80   RND      VC, #80         ; VC = random & 80
$CD4    $C598   RND      V5, #98         ; V5 = random & 98
$CD6    $BBE3   JP       V0, $BE3        ; Jump to V0 + BE3
$CD8    $E2A0   UNKNOWN  $E2A0           ; Unknown Exxx instruction
$CDA    $8098   UNKNOWN  8098            ; Unknown 8xxx instruction
$CDC    $0BA6   SYS      $BA6            ; System call to BA6
$CDE    $66E4   LD       V6, #E4         ; Load 228 into V6
$CE0    $C145   RND      V1, #45         ; V1 = random & 45
$CE2    $AF03   LD       I, $F03         ; Load F03 into I
$CE4    $FC47   UNKNOWN  FC47            ; Unknown Fxxx instruction
$CE6    $8491   OR       V4, V9          ; V4 |= V9
$CE8    $C336   RND      V3, #36         ; V3 = random & 36
$CEA    $C248   RND      V2, #48         ; V2 = random & 48
$CEC    $1A2A   JP       $A2A            ; Jump to A2A
$CEE    $ECDD   UNKNOWN  $ECDD           ; Unknown Exxx instruction
$CF0    $ABD9   LD       I, $BD9         ; Load BD9 into I
$CF2    $EBDC   UNKNOWN  $EBDC           ; Unknown Exxx instruction
$CF4    $46D7   SNE      V6, #D7         ; Skip if V6 != 215
$CF6    $A68D   LD       I, $68D         ; Load 68D into I
$CF8    $7958   ADD      V9, #58         ; Add 88 to V9
$CFA    $723B   ADD      V2, #3B         ; Add 59 to V2
$CFC    $EA6F   UNKNOWN  $EA6F           ; Unknown Exxx instruction
$CFE    $1230   JP       $230            ; Jump to 230
$D00    $17A9   JP       $7A9            ; Jump to 7A9
$D02    $4DC4   SNE      VD, #C4         ; Skip if VD != 196
$D04    $F50A   LD       V5, K           ; Wait for key press, store in V5
$D06    $A4A9   LD       I, $4A9         ; Load 4A9 into I
$D08    $66A6   LD       V6, #A6         ; Load 166 into V6
$D0A    $9262   UNKNOWN  $9262           ; Unknown 9xxx instruction
$D0C    $FCB3   UNKNOWN  FCB3            ; Unknown Fxxx instruction
$D0E    $ACB5   LD       I, $CB5         ; Load CB5 into I
$D10    $170F   JP       $70F            ; Jump to 70F
$D12    $B11C   JP       V0, $11C        ; Jump to V0 + 11C
$D14    $1BD1   JP       $BD1            ; Jump to BD1
$D16    $54F1   UNKNOWN  $54F1           ; Unknown 5xxx instruction
$D18    $03DC   SYS      $3DC            ; System call to 3DC
$D1A    $6653   LD       V6, #53         ; Load 83 into V6
$D1C    $BCD3   JP       V0, $CD3        ; Jump to V0 + CD3
$D1E    $9618   UNKNOWN  $9618           ; Unknown 9xxx instruction
$D20    $02C0   SYS      $2C0            ; System call to 2C0
$D22    $9865   UNKNOWN  $9865           ; Unknown 9xxx instruction
$D24    $E2C9   UNKNOWN  $E2C9           ; Unknown Exxx instruction
$D26    $F53F   UNKNOWN  F53F            ; Unknown Fxxx instruction
$D28    $B09E   JP       V0, $09E        ; Jump to V0 + 09E
$D2A    $43D5   SNE      V3, #D5         ; Skip if V3 != 213
$D2C    $E637   UNKNOWN  $E637           ; Unknown Exxx instruction
$D2E    $A49D   LD       I, $49D         ; Load 49D into I
$D30    $321D   SE       V2, #1D         ; Skip if V2 == 29
$D32    $6100   LD       V1, #00         ; Load 0 into V1
$D34    $0012   SYS      $012            ; System call to 012
$D36    $D62D   DRW      V6, V2, #D      ; Draw 13-byte sprite at V6, V2
$D38    $12C5   JP       $2C5            ; Jump to 2C5
$D3A    $5D26   UNKNOWN  $5D26           ; Unknown 5xxx instruction
$D3C    $8E82   AND      VE, V8          ; VE &= V8
$D3E    $B07B   JP       V0, $07B        ; Jump to V0 + 07B
$D40    $3EEA   SE       VE, #EA         ; Skip if VE == 234
$D42    $BBDA   JP       V0, $BDA        ; Jump to V0 + BDA
$D44    $0C96   SYS      $C96            ; System call to C96
$D46    $F701   UNKNOWN  F701            ; Unknown Fxxx instruction
$D48    $1359   JP       $359            ; Jump to 359
$D4A    $7FC5   ADD      VF, #C5         ; Add 197 to VF
$D4C    $FF51   UNKNOWN  FF51            ; Unknown Fxxx instruction
$D4E    $8FCC   UNKNOWN  8FCC            ; Unknown 8xxx instruction
$D50    $0347   SYS      $347            ; System call to 347
$D52    $B26A   JP       V0, $26A        ; Jump to V0 + 26A
$D54    $AB03   LD       I, $B03         ; Load B03 into I
$D56    $1FBB   JP       $FBB            ; Jump to FBB
$D58    $C3C1   RND      V3, #C1         ; V3 = random & C1
$D5A    $2F91   CALL     $F91            ; Call subroutine at F91
$D5C    $92B6   UNKNOWN  $92B6           ; Unknown 9xxx instruction
$D5E    $D77E   DRW      V7, V7, #E      ; Draw 14-byte sprite at V7, V7
$D60    $8043   XOR      V0, V4          ; V0 ^= V4
$D62    $7B5D   ADD      VB, #5D         ; Add 93 to VB
$D64    $0BFC   SYS      $BFC            ; System call to BFC
$D66    $F68A   UNKNOWN  F68A            ; Unknown Fxxx instruction
$D68    $C4DE   RND      V4, #DE         ; V4 = random & DE
$D6A    $73D0   ADD      V3, #D0         ; Add 208 to V3
$D6C    $80A6   SHR      V0              ; V0 >>= 1, VF = LSB
$D6E    $F229   LD       F, V2           ; I = sprite address for digit V2
$D70    $95C9   UNKNOWN  $95C9           ; Unknown 9xxx instruction
$D72    $7F50   ADD      VF, #50         ; Add 80 to VF
$D74    $8357   SUBN     V3, V5          ; V3 = V5 - V3, VF = !borrow
$D76    $384D   SE       V8, #4D         ; Skip if V8 == 77
$D78    $40AC   SNE      V0, #AC         ; Skip if V0 != 172
$D7A    $CBDF   RND      VB, #DF         ; VB = random & DF
$D7C    $E760   UNKNOWN  $E760           ; Unknown Exxx instruction
$D7E    $D95D   DRW      V9, V5, #D      ; Draw 13-byte sprite at V9, V5
$D80    $D7D4   DRW      V7, VD, #4      ; Draw 4-byte sprite at V7, VD
$D82    $E8D4   UNKNOWN  $E8D4           ; Unknown Exxx instruction
$D84    $012C   SYS      $12C            ; System call to 12C
$D86    $06B8   SYS      $6B8            ; System call to 6B8
$D88    $4487   SNE      V4, #87         ; Skip if V4 != 135
$D8A    $C2BF   RND      V2, #BF         ; V2 = random & BF
$D8C    $E405   UNKNOWN  $E405           ; Unknown Exxx instruction
$D8E    $0A5D   SYS      $A5D            ; System call to A5D
$D90    $B9BC   JP       V0, $9BC        ; Jump to V0 + 9BC
$D92    $B687   JP       V0, $687        ; Jump to V0 + 687
$D94    $50BF   UNKNOWN  $50BF           ; Unknown 5xxx instruction
$D96    $301D   SE       V0, #1D         ; Skip if V0 == 29
$D98    $136B   JP       $36B            ; Jump to 36B
$D9A    $1C6C   JP       $C6C            ; Jump to C6C
$D9C    $21B5   CALL     $1B5            ; Call subroutine at 1B5
$D9E    $2A27   CALL     $A27            ; Call subroutine at A27
$DA0    $A12E   LD       I, $12E         ; Load 12E into I
$DA2    $DAA7   DRW      VA, VA, #7      ; Draw 7-byte sprite at VA, VA
$DA4    $18F5   JP       $8F5            ; Jump to 8F5
$DA6    $F10B   UNKNOWN  F10B            ; Unknown Fxxx instruction
$DA8    $DD49   DRW      VD, V4, #9      ; Draw 9-byte sprite at VD, V4
$DAA    $3CDC   SE       VC, #DC         ; Skip if VC == 220
$DAC    $08D8   SYS      $8D8            ; System call to 8D8
$DAE    $CB78   RND      VB, #78         ; VB = random & 78
$DB0    $BFD8   JP       V0, $FD8        ; Jump to V0 + FD8
$DB2    $10F0   JP       $0F0            ; Jump to 0F0
$DB4    $710C   ADD      V1, #0C         ; Add 12 to V1
$DB6    $CA2A   RND      VA, #2A         ; VA = random & 2A
$DB8    $0599   SYS      $599            ; System call to 599
$DBA    $40E1   SNE      V0, #E1         ; Skip if V0 != 225
$DBC    $3575   SE       V5, #75         ; Skip if V5 == 117
$DBE    $7FCE   ADD      VF, #CE         ; Add 206 to VF
$DC0    $F032   UNKNOWN  F032            ; Unknown Fxxx instruction
$DC2    $6083   LD       V0, #83         ; Load 131 into V0
$DC4    $8591   OR       V5, V9          ; V5 |= V9
$DC6    $81C8   UNKNOWN  81C8            ; Unknown 8xxx instruction
$DC8    $D43B   DRW      V4, V3, #B      ; Draw 11-byte sprite at V4, V3
$DCA    $69CD   LD       V9, #CD         ; Load 205 into V9
$DCC    $16BE   JP       $6BE            ; Jump to 6BE
$DCE    $E1F3   UNKNOWN  $E1F3           ; Unknown Exxx instruction
$DD0    $A370   LD       I, $370         ; Load 370 into I
$DD2    $C091   RND      V0, #91         ; V0 = random & 91
$DD4    $8384   ADD      V3, V8          ; V3 += V8, VF = carry
$DD6    $78B6   ADD      V8, #B6         ; Add 182 to V8
$DD8    $D2F9   DRW      V2, VF, #9      ; Draw 9-byte sprite at V2, VF
$DDA    $468B   SNE      V6, #8B         ; Skip if V6 != 139
$DDC    $2BB1   CALL     $BB1            ; Call subroutine at BB1
$DDE    $1EC6   JP       $EC6            ; Jump to EC6
$DE0    $E8D4   UNKNOWN  $E8D4           ; Unknown Exxx instruction
$DE2    $5A5B   UNKNOWN  $5A5B           ; Unknown 5xxx instruction
$DE4    $49F5   SNE      V9, #F5         ; Skip if V9 != 245
$DE6    $6720   LD       V7, #20         ; Load 32 into V7
$DE8    $0B1E   SYS      $B1E            ; System call to B1E
$DEA    $E472   UNKNOWN  $E472           ; Unknown Exxx instruction
$DEC    $934F   UNKNOWN  $934F           ; Unknown 9xxx instruction
$DEE    $B136   JP       V0, $136        ; Jump to V0 + 136
$DF0    $B5DD   JP       V0, $5DD        ; Jump to V0 + 5DD
$DF2    $0BDB   SYS      $BDB            ; System call to BDB
$DF4    $9634   UNKNOWN  $9634           ; Unknown 9xxx instruction
$DF6    $6FEB   LD       VF, #EB         ; Load 235 into VF
$DF8    $29F2   CALL     $9F2            ; Call subroutine at 9F2
$DFA    $914A   UNKNOWN  $914A           ; Unknown 9xxx instruction
$DFC    $FCBE   UNKNOWN  FCBE            ; Unknown Fxxx instruction
$DFE    $64D7   LD       V4, #D7         ; Load 215 into V4
$E00    $3F65   SE       VF, #65         ; Skip if VF == 101
$E02    $89B4   ADD      V9, VB          ; V9 += VB, VF = carry
$E04    $CCA2   RND      VC, #A2         ; VC = random & A2
$E06    $2C96   CALL     $C96            ; Call subroutine at C96
$E08    $9473   UNKNOWN  $9473           ; Unknown 9xxx instruction
$E0A    $A23B   LD       I, $23B         ; Load 23B into I
$E0C    $505A   UNKNOWN  $505A           ; Unknown 5xxx instruction
$E0E    $A344   LD       I, $344         ; Load 344 into I
$E10    $9039   UNKNOWN  $9039           ; Unknown 9xxx instruction
$E12    $A48C   LD       I, $48C         ; Load 48C into I
$E14    $B6C3   JP       V0, $6C3        ; Jump to V0 + 6C3
$E16    $75E1   ADD      V5, #E1         ; Add 225 to V5
$E18    $0F73   SYS      $F73            ; System call to F73
$E1A    $B531   JP       V0, $531        ; Jump to V0 + 531
$E1C    $471D   SNE      V7, #1D         ; Skip if V7 != 29
$E1E    $8213   XOR      V2, V1          ; V2 ^= V1
$E20    $9890   SNE      V8, V9          ; Skip if V8 != V9
$E22    $B461   JP       V0, $461        ; Jump to V0 + 461
$E24    $7153   ADD      V1, #53         ; Add 83 to V1
$E26    $0D30   SYS      $D30            ; System call to D30
$E28    $0273   SYS      $273            ; System call to 273
$E2A    $908F   UNKNOWN  $908F           ; Unknown 9xxx instruction
$E2C    $AE87   LD       I, $E87         ; Load E87 into I
$E2E    $5560   SE       V5, V6          ; Skip if V5 == V6
$E30    $369A   SE       V6, #9A         ; Skip if V6 == 154
$E32    $CBB3   RND      VB, #B3         ; VB = random & B3
$E34    $D8DC   DRW      V8, VD, #C      ; Draw 12-byte sprite at V8, VD
$E36    $BC81   JP       V0, $C81        ; Jump to V0 + C81
$E38    $436C   SNE      V3, #6C         ; Skip if V3 != 108
$E3A    $2819   CALL     $819            ; Call subroutine at 819
$E3C    $1984   JP       $984            ; Jump to 984
$E3E    $8E09   UNKNOWN  8E09            ; Unknown 8xxx instruction
$E40    $45AB   SNE      V5, #AB         ; Skip if V5 != 171
$E42    $BE07   JP       V0, $E07        ; Jump to V0 + E07
$E44    $D258   DRW      V2, V5, #8      ; Draw 8-byte sprite at V2, V5
$E46    $4AB4   SNE      VA, #B4         ; Skip if VA != 180
$E48    $E22B   UNKNOWN  $E22B           ; Unknown Exxx instruction
$E4A    $2DC2   CALL     $DC2            ; Call subroutine at DC2
$E4C    $C22C   RND      V2, #2C         ; V2 = random & 2C
$E4E    $B039   JP       V0, $039        ; Jump to V0 + 039
$E50    $A58C   LD       I, $58C         ; Load 58C into I
$E52    $0533   SYS      $533            ; System call to 533
$E54    $2920   CALL     $920            ; Call subroutine at 920
$E56    $74B3   ADD      V4, #B3         ; Add 179 to V4
$E58    $8586   SHR      V5              ; V5 >>= 1, VF = LSB
$E5A    $EBB8   UNKNOWN  $EBB8           ; Unknown Exxx instruction
$E5C    $3C8B   SE       VC, #8B         ; Skip if VC == 139
$E5E    $5B74   UNKNOWN  $5B74           ; Unknown 5xxx instruction
$E60    $1FAD   JP       $FAD            ; Jump to FAD
$E62    $D550   DRW      V5, V5, #0      ; Draw 0-byte sprite at V5, V5
$E64    $4F7A   SNE      VF, #7A         ; Skip if VF != 122
$E66    $8AC5   SUB      VA, VC          ; VA -= VC, VF = !borrow
$E68    $9DE6   UNKNOWN  $9DE6           ; Unknown 9xxx instruction
$E6A    $4400   SNE      V4, #00         ; Skip if V4 != 0
$E6C    $58EE   UNKNOWN  $58EE           ; Unknown 5xxx instruction
$E6E    $9A3A   UNKNOWN  $9A3A           ; Unknown 9xxx instruction
$E70    $4B12   SNE      VB, #12         ; Skip if VB != 18
$E72    $A046   LD       I, $046         ; Load 046 into I
$E74    $2E58   CALL     $E58            ; Call subroutine at E58
$E76    $8728   UNKNOWN  8728            ; Unknown 8xxx instruction
$E78    $92B1   UNKNOWN  $92B1           ; Unknown 9xxx instruction
$E7A    $EA2A   UNKNOWN  $EA2A           ; Unknown Exxx instruction
$E7C    $70B6   ADD      V0, #B6         ; Add 182 to V0
$E7E    $BF99   JP       V0, $F99        ; Jump to V0 + F99
$E80    $3463   SE       V4, #63         ; Skip if V4 == 99
$E82    $039E   SYS      $39E            ; System call to 39E
$E84    $C7A9   RND      V7, #A9         ; V7 = random & A9
$E86    $F112   UNKNOWN  F112            ; Unknown Fxxx instruction
$E88    $3273   SE       V2, #73         ; Skip if V2 == 115
$E8A    $C310   RND      V3, #10         ; V3 = random & 10
$E8C    $BF18   JP       V0, $F18        ; Jump to V0 + F18
$E8E    $F936   UNKNOWN  F936            ; Unknown Fxxx instruction
$E90    $25CE   CALL     $5CE            ; Call subroutine at 5CE
$E92    $DC4E   DRW      VC, V4, #E      ; Draw 14-byte sprite at VC, V4
$E94    $809F   UNKNOWN  809F            ; Unknown 8xxx instruction
$E96    $E6D3   UNKNOWN  $E6D3           ; Unknown Exxx instruction
$E98    $D3DE   DRW      V3, VD, #E      ; Draw 14-byte sprite at V3, VD
$E9A    $0A3C   SYS      $A3C            ; System call to A3C
$E9C    $E559   UNKNOWN  $E559           ; Unknown Exxx instruction
$E9E    $2DB6   CALL     $DB6            ; Call subroutine at DB6
$EA0    $F4B6   UNKNOWN  F4B6            ; Unknown Fxxx instruction
$EA2    $C06E   RND      V0, #6E         ; V0 = random & 6E
$EA4    $9028   UNKNOWN  $9028           ; Unknown 9xxx instruction
$EA6    $A0F5   LD       I, $0F5         ; Load 0F5 into I
$EA8    $FC55   LD       [I], VC         ; Store V0-VC at I
$EAA    $872E   SHL      V7              ; V7 <<= 1, VF = MSB
$EAC    $3569   SE       V5, #69         ; Skip if V5 == 105
$EAE    $BB9B   JP       V0, $B9B        ; Jump to V0 + B9B
$EB0    $8064   ADD      V0, V6          ; V0 += V6, VF = carry
$EB2    $992D   UNKNOWN  $992D           ; Unknown 9xxx instruction
$EB4    $88E6   SHR      V8              ; V8 >>= 1, VF = LSB
$EB6    $F23F   UNKNOWN  F23F            ; Unknown Fxxx instruction
$EB8    $1359   JP       $359            ; Jump to 359
$EBA    $F361   UNKNOWN  F361            ; Unknown Fxxx instruction
$EBC    $9F92   UNKNOWN  $9F92           ; Unknown 9xxx instruction
$EBE    $B3AD   JP       V0, $3AD        ; Jump to V0 + 3AD
$EC0    $7449   ADD      V4, #49         ; Add 73 to V4
$EC2    $7A53   ADD      VA, #53         ; Add 83 to VA
$EC4    $2C33   CALL     $C33            ; Call subroutine at C33
$EC6    $C6F6   RND      V6, #F6         ; V6 = random & F6
$EC8    $BFBF   JP       V0, $FBF        ; Jump to V0 + FBF
$ECA    $8C27   SUBN     VC, V2          ; VC = V2 - VC, VF = !borrow
$ECC    $AEE4   LD       I, $EE4         ; Load EE4 into I
$ECE    $727D   ADD      V2, #7D         ; Add 125 to V2
$ED0    $9354   UNKNOWN  $9354           ; Unknown 9xxx instruction
$ED2    $FC4D   UNKNOWN  FC4D            ; Unknown Fxxx instruction
$ED4    $E8DB   UNKNOWN  $E8DB           ; Unknown Exxx instruction
$ED6    $E501   UNKNOWN  $E501           ; Unknown Exxx instruction
$ED8    $9683   UNKNOWN  $9683           ; Unknown 9xxx instruction
$EDA    $9A9D   UNKNOWN  $9A9D           ; Unknown 9xxx instruction
$EDC    $A06B   LD       I, $06B         ; Load 06B into I
$EDE    $A23D   LD       I, $23D         ; Load 23D into I
$EE0    $6229   LD       V2, #29         ; Load 41 into V2
$EE2    $C411   RND      V4, #11         ; V4 = random & 11
$EE4    $5F2D   UNKNOWN  $5F2D           ; Unknown 5xxx instruction
$EE6    $0162   SYS      $162            ; System call to 162
$EE8    $93DF   UNKNOWN  $93DF           ; Unknown 9xxx instruction
$EEA    $B9DC   JP       V0, $9DC        ; Jump to V0 + 9DC
$EEC    $F99B   UNKNOWN  F99B            ; Unknown Fxxx instruction
$EEE    $1E9D   JP       $E9D            ; Jump to E9D
$EF0    $B5F5   JP       V0, $5F5        ; Jump to V0 + 5F5
$EF2    $FE9C   UNKNOWN  FE9C            ; Unknown Fxxx instruction
$EF4    $49E6   SNE      V9, #E6         ; Skip if V9 != 230
$EF6    $8536   SHR      V5              ; V5 >>= 1, VF = LSB
$EF8    $A11D   LD       I, $11D         ; Load 11D into I
$EFA    $95F7   UNKNOWN  $95F7           ; Unknown 9xxx instruction
$EFC    $FB1E   ADD      I, VB           ; I += VB
$EFE    $A168   LD       I, $168         ; Load 168 into I
$F00    $DAC9   DRW      VA, VC, #9      ; Draw 9-byte sprite at VA, VC
$F02    $2BE4   CALL     $BE4            ; Call subroutine at BE4
$F04    $22C0   CALL     $2C0            ; Call subroutine at 2C0
$F06    $2A8A   CALL     $A8A            ; Call subroutine at A8A
$F08    $AFEA   LD       I, $FEA         ; Load FEA into I
$F0A    $5588   UNKNOWN  $5588           ; Unknown 5xxx instruction
$F0C    $FA6B   UNKNOWN  FA6B            ; Unknown Fxxx instruction
$F0E    $F5F4   UNKNOWN  F5F4            ; Unknown Fxxx instruction
$F10    $B4C1   JP       V0, $4C1        ; Jump to V0 + 4C1
$F12    $5428   UNKNOWN  $5428           ; Unknown 5xxx instruction
$F14    $CE98   RND      VE, #98         ; VE = random & 98
$F16    $2F1E   CALL     $F1E            ; Call subroutine at F1E
$F18    $B884   JP       V0, $884        ; Jump to V0 + 884
$F1A    $CC33   RND      VC, #33         ; VC = random & 33
$F1C    $8908   UNKNOWN  8908            ; Unknown 8xxx instruction
$F1E    $D11C   DRW      V1, V1, #C      ; Draw 12-byte sprite at V1, V1
$F20    $C323   RND      V3, #23         ; V3 = random & 23
$F22    $57C0   SE       V7, VC          ; Skip if V7 == VC
$F24    $534A   UNKNOWN  $534A           ; Unknown 5xxx instruction
$F26    $B5C0   JP       V0, $5C0        ; Jump to V0 + 5C0
$F28    $5D63   UNKNOWN  $5D63           ; Unknown 5xxx instruction
$F2A    $02FB   SYS      $2FB            ; System call to 2FB
$F2C    $B653   JP       V0, $653        ; Jump to V0 + 653
$F2E    $B1C9   JP       V0, $1C9        ; Jump to V0 + 1C9
$F30    $4DEC   SNE      VD, #EC         ; Skip if VD != 236
$F32    $6740   LD       V7, #40         ; Load 64 into V7
$F34    $D370   DRW      V3, V7, #0      ; Draw 0-byte sprite at V3, V7
$F36    $5C36   UNKNOWN  $5C36           ; Unknown 5xxx instruction
$F38    $7D70   ADD      VD, #70         ; Add 112 to VD
$F3A    $EA12   UNKNOWN  $EA12           ; Unknown Exxx instruction
$F3C    $935C   UNKNOWN  $935C           ; Unknown 9xxx instruction
$F3E    $A754   LD       I, $754         ; Load 754 into I
$F40    $CEF9   RND      VE, #F9         ; VE = random & F9
$F42    $DADA   DRW      VA, VD, #A      ; Draw 10-byte sprite at VA, VD
$F44    $C858   RND      V8, #58         ; V8 = random & 58
$F46    $5626   UNKNOWN  $5626           ; Unknown 5xxx instruction
$F48    $52CF   UNKNOWN  $52CF           ; Unknown 5xxx instruction
$F4A    $39B8   SE       V9, #B8         ; Skip if V9 == 184
$F4C    $BB75   JP       V0, $B75        ; Jump to V0 + B75
$F4E    $1519   JP       $519            ; Jump to 519
$F50    $200F   CALL     $00F            ; Call subroutine at 00F
$F52    $E57B   UNKNOWN  $E57B           ; Unknown Exxx instruction
$F54    $D427   DRW      V4, V2, #7      ; Draw 7-byte sprite at V4, V2
$F56    $C3EA   RND      V3, #EA         ; V3 = random & EA
$F58    $AAFA   LD       I, $AFA         ; Load AFA into I
$F5A    $251E   CALL     $51E            ; Call subroutine at 51E
$F5C    $4003   SNE      V0, #03         ; Skip if V0 != 3
$F5E    $22F7   CALL     $2F7            ; Call subroutine at 2F7
$F60    $F445   UNKNOWN  F445            ; Unknown Fxxx instruction
$F62    $6EA7   LD       VE, #A7         ; Load 167 into VE
$F64    $6BD1   LD       VB, #D1         ; Load 209 into VB
$F66    $1C82   JP       $C82            ; Jump to C82
$F68    $42A2   SNE      V2, #A2         ; Skip if V2 != 162
$F6A    $1EFB   JP       $EFB            ; Jump to EFB
$F6C    $14EB   JP       $4EB            ; Jump to 4EB
$F6E    $7BBC   ADD      VB, #BC         ; Add 188 to VB
$F70    $3332   SE       V3, #32         ; Skip if V3 == 50
$F72    $4195   SNE      V1, #95         ; Skip if V1 != 149
$F74    $F258   UNKNOWN  F258            ; Unknown Fxxx instruction
$F76    $5ADD   UNKNOWN  $5ADD           ; Unknown 5xxx instruction
$F78    $5630   SE       V6, V3          ; Skip if V6 == V3
$F7A    $DF2C   DRW      VF, V2, #C      ; Draw 12-byte sprite at VF, V2
$F7C    $122F   JP       $22F            ; Jump to 22F
$F7E    $FD56   UNKNOWN  FD56            ; Unknown Fxxx instruction
$F80    $69FC   LD       V9, #FC         ; Load 252 into V9
$F82    $1617   JP       $617            ; Jump to 617
$F84    $F344   UNKNOWN  F344            ; Unknown Fxxx instruction
$F86    $FAF5   UNKNOWN  FAF5            ; Unknown Fxxx instruction
$F88    $1420   JP       $420            ; Jump to 420
$F8A    $368C   SE       V6, #8C         ; Skip if V6 == 140
$F8C    $3DCF   SE       VD, #CF         ; Skip if VD == 207
$F8E    $28D4   CALL     $8D4            ; Call subroutine at 8D4
$F90    $DFEE   DRW      VF, VE, #E      ; Draw 14-byte sprite at VF, VE
$F92    $6749   LD       V7, #49         ; Load 73 into V7
$F94    $2270   CALL     $270            ; Call subroutine at 270
$F96    $A113   LD       I, $113         ; Load 113 into I
$F98    $4C60   SNE      VC, #60         ; Skip if VC != 96
$F9A    $8176   SHR      V1              ; V1 >>= 1, VF = LSB
$F9C    $DA67   DRW      VA, V6, #7      ; Draw 7-byte sprite at VA, V6
$F9E    $F887   UNKNOWN  F887            ; Unknown Fxxx instruction
$FA0    $DFFB   DRW      VF, VF, #B      ; Draw 11-byte sprite at VF, VF
$FA2    $766B   ADD      V6, #6B         ; Add 107 to V6
$FA4    $69C2   LD       V9, #C2         ; Load 194 into V9
$FA6    $841E   SHL      V4              ; V4 <<= 1, VF = MSB
$FA8    $7C6A   ADD      VC, #6A         ; Add 106 to VC
$FAA    $EC41   UNKNOWN  $EC41           ; Unknown Exxx instruction
$FAC    $A952   LD       I, $952         ; Load 952 into I
$FAE    $5E75   UNKNOWN  $5E75           ; Unknown 5xxx instruction
$FB0    $70C5   ADD      V0, #C5         ; Add 197 to V0
$FB2    $B31B   JP       V0, $31B        ; Jump to V0 + 31B
$FB4    $77EA   ADD      V7, #EA         ; Add 234 to V7
$FB6    $05B5   SYS      $5B5            ; System call to 5B5
$FB8    $37A0   SE       V7, #A0         ; Skip if V7 == 160
$FBA    $648E   LD       V4, #8E         ; Load 142 into V4
$FBC    $8451   OR       V4, V5          ; V4 |= V5
$FBE    $DEDE   DRW      VE, VD, #E      ; Draw 14-byte sprite at VE, VD
$FC0    $F28D   UNKNOWN  F28D            ; Unknown Fxxx instruction
$FC2    $3084   SE       V0, #84         ; Skip if V0 == 132
$FC4    $A7E0   LD       I, $7E0         ; Load 7E0 into I
$FC6    $9E77   UNKNOWN  $9E77           ; Unknown 9xxx instruction
$FC8    $440D   SNE      V4, #0D         ; Skip if V4 != 13
$FCA    $D578   DRW      V5, V7, #8      ; Draw 8-byte sprite at V5, V7
$FCC    $DE24   DRW      VE, V2, #4      ; Draw 4-byte sprite at VE, V2
$FCE    $5C69   UNKNOWN  $5C69           ; Unknown 5xxx instruction
$FD0    $D937   DRW      V9, V3, #7      ; Draw 7-byte sprite at V9, V3
$FD2    $F0E7   UNKNOWN  F0E7            ; Unknown Fxxx instruction
$FD4    $812F   UNKNOWN  812F            ; Unknown 8xxx instruction
$FD6    $D0D6   DRW      V0, VD, #6      ; Draw 6-byte sprite at V0, VD
$FD8    $AE34   LD       I, $E34         ; Load E34 into I
$FDA    $CADB   RND      VA, #DB         ; VA = random & DB
$FDC    $D1E8   DRW      V1, VE, #8      ; Draw 8-byte sprite at V1, VE
$FDE    $4895   SNE      V8, #95         ; Skip if V8 != 149
$FE0    $6A66   LD       VA, #66         ; Load 102 into VA
$FE2    $F6D8   UNKNOWN  F6D8            ; Unknown Fxxx instruction
$FE4    $1028   JP       $028            ; Jump to 028
$FE6    $84F8   UNKNOWN  84F8            ; Unknown 8xxx instruction
$FE8    $3B53   SE       VB, #53         ; Skip if VB == 83
$FEA    $A8E6   LD       I, $8E6         ; Load 8E6 into I
$FEC    $1BA4   JP       $BA4            ; Jump to BA4
$FEE    $EE13   UNKNOWN  $EE13           ; Unknown Exxx instruction
$FF0    $3485   SE       V4, #85         ; Skip if V4 == 133
$FF2    $974B   UNKNOWN  $974B           ; Unknown 9xxx instruction
$FF4    $35C3   SE       V5, #C3         ; Skip if V5 == 195
$FF6    $A441   LD       I, $441         ; Load 441 into I
$FF8    $3BA6   SE       VB, #A6         ; Skip if VB == 166
$FFA    $7911   ADD      V9, #11         ; Add 17 to V9
$FFC    $363C   SE       V6, #3C         ; Skip if V6 == 60
$FFE    $B9D5   JP       V0, $9D5        ; Jump to V0 + 9D5

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 469 (26.2%)
  LD      : 246 (13.7%)
  JP      : 221 (12.3%)
  CALL    : 119 ( 6.6%)
  RND     : 116 ( 6.5%)
  SYS     : 115 ( 6.4%)
  DRW     : 115 ( 6.4%)
  SNE     : 112 ( 6.2%)
  ADD     : 110 ( 6.1%)
  SE      : 109 ( 6.1%)
  SHR     :  13 ( 0.7%)
  OR      :  10 ( 0.6%)
  SHL     :   9 ( 0.5%)
  SUB     :   7 ( 0.4%)
  SUBN    :   7 ( 0.4%)
  XOR     :   7 ( 0.4%)
  AND     :   6 ( 0.3%)
  SKP     :   1 ( 0.1%)

Memory Operations: 356 (19.9%)
Arithmetic Operations: 147 (8.2%)
