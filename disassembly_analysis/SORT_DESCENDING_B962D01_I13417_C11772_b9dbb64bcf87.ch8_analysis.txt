
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B962D01_I13417_C11772_b9dbb64bcf87.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 962
Instance: 13417
Direction: descending
Final Array: [117, 117, 117, 117, 117, 117, 98, 9]
Operations: R:0 W:6 C:220 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 109
Sort Array References:
  $20A: LD [I], V0 ; Store V0-V0 at I
  $218: LD I, $B67 ; Load B67 into I
  $244: LD I, $816 ; Load 816 into I
  $268: LD I, $B1F ; Load B1F into I
  $26C: LD I, $44F ; Load 44F into I
  $286: LD I, $939 ; Load 939 into I
  $28E: LD I, $3F8 ; Load 3F8 into I
  $29C: LD I, $8B4 ; Load 8B4 into I
  $316: LD I, $1B4 ; Load 1B4 into I
  $318: LD [I], VD ; Store V0-VD at I
  $322: LD I, $F18 ; Load F18 into I
  $326: LD I, $9FE ; Load 9FE into I
  $33C: LD I, $BA4 ; Load BA4 into I
  $348: LD I, $D62 ; Load D62 into I
  $34C: LD I, $F34 ; Load F34 into I
  $360: LD I, $E1A ; Load E1A into I
  $3AE: LD I, $003 ; Load 003 into I
  $3EC: LD I, $26D ; Load 26D into I
  $3EE: LD I, $1BA ; Load 1BA into I
  $3F6: LD I, $99D ; Load 99D into I
  $404: LD I, $4A1 ; Load 4A1 into I
  $408: LD I, $3F3 ; Load 3F3 into I
  $414: LD I, $1BE ; Load 1BE into I
  $42A: LD I, $AAA ; Load AAA into I
  $434: LD I, $46B ; Load 46B into I
  $44A: LD I, $82D ; Load 82D into I
  $44E: LD I, $492 ; Load 492 into I
  $454: LD I, $B39 ; Load B39 into I
  $46C: LD I, $620 ; Load 620 into I
  $4B0: LD I, $D3E ; Load D3E into I
  $4CE: LD I, $8EB ; Load 8EB into I
  $542: LD I, $FFC ; Load FFC into I
  $54C: LD I, $130 ; Load 130 into I
  $56A: LD I, $A70 ; Load A70 into I
  $57E: LD I, $A48 ; Load A48 into I
  $5A0: LD I, $561 ; Load 561 into I
  $5AC: LD I, $163 ; Load 163 into I
  $5BA: LD I, $A0A ; Load A0A into I
  $648: LD I, $F7B ; Load F7B into I
  $65E: LD I, $853 ; Load 853 into I
  $66C: LD I, $9A2 ; Load 9A2 into I
  $67C: LD I, $4D3 ; Load 4D3 into I
  $694: LD I, $5D3 ; Load 5D3 into I
  $6CC: ADD I, VD ; I ADDRESS MANIPULATION
  $6D8: LD I, $CB0 ; Load CB0 into I
  $70E: LD I, $040 ; Load 040 into I
  $72A: LD I, $AD9 ; Load AD9 into I
  $730: LD I, $845 ; Load 845 into I
  $762: LD I, $604 ; Load 604 into I
  $776: LD I, $945 ; Load 945 into I
  $78E: LD I, $6FF ; Load 6FF into I
  $7C4: LD I, $C66 ; Load C66 into I
  $7FA: LD I, $0EF ; Load 0EF into I
  $7FE: LD I, $20C ; Load 20C into I
  $802: LD I, $961 ; Load 961 into I
  $806: LD I, $FEB ; Load FEB into I
  $862: LD I, $B0E ; Load B0E into I
  $868: LD I, $CE0 ; Load CE0 into I
  $86C: LD I, $3CC ; Load 3CC into I
  $880: LD I, $6D2 ; Load 6D2 into I
  $89C: LD I, $85A ; Load 85A into I
  $8A8: LD I, $FCA ; Load FCA into I
  $8BE: LD I, $12F ; Load 12F into I
  $8D6: LD I, $FEE ; Load FEE into I
  $902: LD I, $4A9 ; Load 4A9 into I
  $91A: LD I, $63F ; Load 63F into I
  $928: LD I, $FA2 ; Load FA2 into I
  $978: LD I, $2FB ; Load 2FB into I
  $99C: LD I, $699 ; Load 699 into I
  $9CE: LD I, $114 ; Load 114 into I
  $A3E: LD I, $F68 ; Load F68 into I
  $A5A: LD I, $F12 ; Load F12 into I
  $A60: LD V6, [I] ; Load V0-V6 from I
  $A6A: LD I, $A50 ; Load A50 into I
  $A80: LD I, $06C ; Load 06C into I
  $A92: LD I, $47A ; Load 47A into I
  $AB8: LD I, $922 ; Load 922 into I
  $ADA: LD I, $B58 ; Load B58 into I
  $B4A: LD I, $79E ; Load 79E into I
  $B4C: LD I, $422 ; Load 422 into I
  $B92: LD I, $7D2 ; Load 7D2 into I
  $B98: LD I, $9E2 ; Load 9E2 into I
  $BAC: LD I, $533 ; Load 533 into I
  $BF2: LD I, $D03 ; Load D03 into I
  $C04: LD I, $6ED ; Load 6ED into I
  $C0C: LD I, $1EE ; Load 1EE into I
  $C78: LD I, $C39 ; Load C39 into I
  $CB4: LD I, $997 ; Load 997 into I
  $CCC: LD I, $92B ; Load 92B into I
  $D16: LD I, $625 ; Load 625 into I
  $D34: LD I, $372 ; Load 372 into I
  $D7A: LD I, $A90 ; Load A90 into I
  $D80: LD I, $407 ; Load 407 into I
  $DC4: LD I, $989 ; Load 989 into I
  $DD0: LD I, $B03 ; Load B03 into I
  $DE2: LD I, $0CF ; Load 0CF into I
  $DFA: LD I, $522 ; Load 522 into I
  $E60: LD I, $2C3 ; Load 2C3 into I
  $E6C: LD I, $2E5 ; Load 2E5 into I
  $EA0: LD I, $7BC ; Load 7BC into I
  $EAE: LD I, $B34 ; Load B34 into I
  $EB6: ADD I, V5 ; I ADDRESS MANIPULATION
  $EC0: LD I, $07A ; Load 07A into I
  $F0A: LD I, $EE3 ; Load EE3 into I
  $F18: LD I, $6E1 ; Load 6E1 into I
  $F22: LD I, $809 ; Load 809 into I
  $F90: LD I, $EBA ; Load EBA into I
  $F98: LD I, $301 ; Load 301 into I
  $FE0: LD I, $984 ; Load 984 into I

CONTROL FLOW ANALYSIS:
Jumps: 234
Calls: 115
Branches: 217
Loops: 136
Loop Structures:
  $358 -> $009 (backward jump)
  $35E -> $042 (backward jump)
  $3A6 -> $372 (backward jump)
  $3FA -> $268 (backward jump)
  $400 -> $3F9 (backward jump)
  $48A -> $2F1 (backward jump)
  $49A -> $0CF (backward jump)
  $49E -> $057 (backward jump)
  $4A8 -> $44C (backward jump)
  $4EA -> $306 (backward jump)
  $514 -> $48D (backward jump)
  $532 -> $494 (backward jump)
  $538 -> $3D2 (backward jump)
  $576 -> $322 (backward jump)
  $5AE -> $2A0 (backward jump)
  $5CE -> $18A (backward jump)
  $5DE -> $0F8 (backward jump)
  $5E6 -> $428 (backward jump)
  $602 -> $0C3 (backward jump)
  $60C -> $221 (backward jump)
  $618 -> $230 (backward jump)
  $626 -> $24B (backward jump)
  $6B4 -> $0E3 (backward jump)
  $6CE -> $0EC (backward jump)
  $6EE -> $4D4 (backward jump)
  $6F6 -> $3E2 (backward jump)
  $714 -> $268 (backward jump)
  $71A -> $077 (backward jump)
  $7C2 -> $5AE (backward jump)
  $7C8 -> $559 (backward jump)
  $81E -> $01E (backward jump)
  $830 -> $1D9 (backward jump)
  $834 -> $4EC (backward jump)
  $854 -> $3E6 (backward jump)
  $87A -> $83E (backward jump)
  $87E -> $16F (backward jump)
  $896 -> $7EA (backward jump)
  $8CA -> $624 (backward jump)
  $8D8 -> $3DD (backward jump)
  $8F0 -> $0F0 (backward jump)
  $93C -> $34E (backward jump)
  $940 -> $17F (backward jump)
  $958 -> $7A9 (backward jump)
  $95C -> $5CD (backward jump)
  $9F8 -> $4F1 (backward jump)
  $9FA -> $5F2 (backward jump)
  $A08 -> $199 (backward jump)
  $A0C -> $6CD (backward jump)
  $A32 -> $3FB (backward jump)
  $A36 -> $959 (backward jump)
  $A5C -> $929 (backward jump)
  $A76 -> $5F9 (backward jump)
  $A7E -> $849 (backward jump)
  $A86 -> $083 (backward jump)
  $A88 -> $8FE (backward jump)
  $A90 -> $258 (backward jump)
  $AA8 -> $816 (backward jump)
  $AB6 -> $064 (backward jump)
  $AC4 -> $2FC (backward jump)
  $AE4 -> $36F (backward jump)
  $AFC -> $26D (backward jump)
  $B08 -> $6F0 (backward jump)
  $B14 -> $176 (backward jump)
  $B28 -> $6D8 (backward jump)
  $B74 -> $242 (backward jump)
  $B94 -> $3AC (backward jump)
  $BA6 -> $625 (backward jump)
  $BEA -> $A13 (backward jump)
  $BFC -> $092 (backward jump)
  $C18 -> $715 (backward jump)
  $C2C -> $2B4 (backward jump)
  $C36 -> $10E (backward jump)
  $C48 -> $22E (backward jump)
  $C4E -> $31E (backward jump)
  $C58 -> $ABA (backward jump)
  $C6C -> $1EA (backward jump)
  $C98 -> $8EA (backward jump)
  $C9E -> $948 (backward jump)
  $CB0 -> $5B3 (backward jump)
  $CC2 -> $8C3 (backward jump)
  $CC4 -> $A82 (backward jump)
  $CC6 -> $737 (backward jump)
  $CC8 -> $160 (backward jump)
  $CD6 -> $3E0 (backward jump)
  $CD8 -> $2D8 (backward jump)
  $CDE -> $5BC (backward jump)
  $D08 -> $7E7 (backward jump)
  $D12 -> $6E5 (backward jump)
  $D1E -> $C36 (backward jump)
  $D20 -> $63A (backward jump)
  $D3A -> $ADF (backward jump)
  $D3E -> $015 (backward jump)
  $D64 -> $200 (backward jump)
  $D78 -> $21C (backward jump)
  $D92 -> $0FC (backward jump)
  $D94 -> $32A (backward jump)
  $D9E -> $472 (backward jump)
  $DB4 -> $92A (backward jump)
  $DC2 -> $012 (backward jump)
  $DDE -> $B24 (backward jump)
  $DEA -> $D93 (backward jump)
  $E0C -> $35F (backward jump)
  $E12 -> $A3D (backward jump)
  $E18 -> $E0B (backward jump)
  $E30 -> $1ED (backward jump)
  $E32 -> $CFD (backward jump)
  $E38 -> $642 (backward jump)
  $E40 -> $859 (backward jump)
  $E44 -> $D94 (backward jump)
  $E48 -> $457 (backward jump)
  $E5A -> $B33 (backward jump)
  $E68 -> $C69 (backward jump)
  $EA8 -> $DC2 (backward jump)
  $EAA -> $8E7 (backward jump)
  $EAC -> $33E (backward jump)
  $EC8 -> $C53 (backward jump)
  $ED6 -> $907 (backward jump)
  $EE0 -> $76C (backward jump)
  $EE8 -> $607 (backward jump)
  $EEC -> $E7A (backward jump)
  $F26 -> $1D2 (backward jump)
  $F2A -> $426 (backward jump)
  $F2C -> $D4F (backward jump)
  $F3A -> $CB7 (backward jump)
  $F46 -> $689 (backward jump)
  $F5C -> $0D2 (backward jump)
  $F6C -> $024 (backward jump)
  $F6E -> $60B (backward jump)
  $F82 -> $7DB (backward jump)
  $F96 -> $D9E (backward jump)
  $F9C -> $114 (backward jump)
  $FC8 -> $581 (backward jump)
  $FD6 -> $4C7 (backward jump)
  $FD8 -> $130 (backward jump)
  $FF4 -> $A03 (backward jump)
  $FF8 -> $8DE (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $9239   UNKNOWN  $9239           ; Unknown 9xxx instruction
$202    $FA85   UNKNOWN  FA85            ; Unknown Fxxx instruction
$204    $7055   ADD      V0, #55         ; Add 85 to V0
$206    $CD6A   RND      VD, #6A         ; VD = random & 6A
$208    $2411   CALL     $411            ; Call subroutine at 411
$20A    $F055   LD       [I], V0         ; Store V0-V0 at I
$20C    $907C   UNKNOWN  $907C           ; Unknown 9xxx instruction
$20E    $0624   SYS      $624            ; System call to 624
$210    $6A2B   LD       VA, #2B         ; Load 43 into VA
$212    $B4AB   JP       V0, $4AB        ; Jump to V0 + 4AB
$214    $D09D   DRW      V0, V9, #D      ; Draw 13-byte sprite at V0, V9
$216    $9C7C   UNKNOWN  $9C7C           ; Unknown 9xxx instruction
$218    $AB67   LD       I, $B67         ; Load B67 into I
$21A    $EA59   UNKNOWN  $EA59           ; Unknown Exxx instruction
$21C    $D8FB   DRW      V8, VF, #B      ; Draw 11-byte sprite at V8, VF
$21E    $2BD3   CALL     $BD3            ; Call subroutine at BD3
$220    $2B06   CALL     $B06            ; Call subroutine at B06
$222    $8C74   ADD      VC, V7          ; VC += V7, VF = carry
$224    $8931   OR       V9, V3          ; V9 |= V3
$226    $B44F   JP       V0, $44F        ; Jump to V0 + 44F
$228    $8C83   XOR      VC, V8          ; VC ^= V8
$22A    $B2B3   JP       V0, $2B3        ; Jump to V0 + 2B3
$22C    $1A69   JP       $A69            ; Jump to A69
$22E    $08BD   SYS      $8BD            ; System call to 8BD
$230    $4E3D   SNE      VE, #3D         ; Skip if VE != 61
$232    $757D   ADD      V5, #7D         ; Add 125 to V5
$234    $C268   RND      V2, #68         ; V2 = random & 68
$236    $C945   RND      V9, #45         ; V9 = random & 45
$238    $D656   DRW      V6, V5, #6      ; Draw 6-byte sprite at V6, V5
$23A    $E753   UNKNOWN  $E753           ; Unknown Exxx instruction
$23C    $3CB1   SE       VC, #B1         ; Skip if VC == 177
$23E    $1484   JP       $484            ; Jump to 484
$240    $EA85   UNKNOWN  $EA85           ; Unknown Exxx instruction
$242    $3C28   SE       VC, #28         ; Skip if VC == 40
$244    $A816   LD       I, $816         ; Load 816 into I
$246    $BFB0   JP       V0, $FB0        ; Jump to V0 + FB0
$248    $F0DB   UNKNOWN  F0DB            ; Unknown Fxxx instruction
$24A    $DE5A   DRW      VE, V5, #A      ; Draw 10-byte sprite at VE, V5
$24C    $9BC7   UNKNOWN  $9BC7           ; Unknown 9xxx instruction
$24E    $F8E5   UNKNOWN  F8E5            ; Unknown Fxxx instruction
$250    $8CDE   SHL      VC              ; VC <<= 1, VF = MSB
$252    $FA80   UNKNOWN  FA80            ; Unknown Fxxx instruction
$254    $8DED   UNKNOWN  8DED            ; Unknown 8xxx instruction
$256    $206C   CALL     $06C            ; Call subroutine at 06C
$258    $7C6E   ADD      VC, #6E         ; Add 110 to VC
$25A    $5FD6   UNKNOWN  $5FD6           ; Unknown 5xxx instruction
$25C    $49C5   SNE      V9, #C5         ; Skip if V9 != 197
$25E    $B783   JP       V0, $783        ; Jump to V0 + 783
$260    $D5FB   DRW      V5, VF, #B      ; Draw 11-byte sprite at V5, VF
$262    $871B   UNKNOWN  871B            ; Unknown 8xxx instruction
$264    $2225   CALL     $225            ; Call subroutine at 225
$266    $DC6D   DRW      VC, V6, #D      ; Draw 13-byte sprite at VC, V6
$268    $AB1F   LD       I, $B1F         ; Load B1F into I
$26A    $3C90   SE       VC, #90         ; Skip if VC == 144
$26C    $A44F   LD       I, $44F         ; Load 44F into I
$26E    $C285   RND      V2, #85         ; V2 = random & 85
$270    $BBEA   JP       V0, $BEA        ; Jump to V0 + BEA
$272    $6E2F   LD       VE, #2F         ; Load 47 into VE
$274    $5108   UNKNOWN  $5108           ; Unknown 5xxx instruction
$276    $1522   JP       $522            ; Jump to 522
$278    $59A2   UNKNOWN  $59A2           ; Unknown 5xxx instruction
$27A    $C1B5   RND      V1, #B5         ; V1 = random & B5
$27C    $D53A   DRW      V5, V3, #A      ; Draw 10-byte sprite at V5, V3
$27E    $CD5B   RND      VD, #5B         ; VD = random & 5B
$280    $7326   ADD      V3, #26         ; Add 38 to V3
$282    $8710   LD       V7, V1          ; V7 = V1
$284    $4E05   SNE      VE, #05         ; Skip if VE != 5
$286    $A939   LD       I, $939         ; Load 939 into I
$288    $E4E3   UNKNOWN  $E4E3           ; Unknown Exxx instruction
$28A    $1E1C   JP       $E1C            ; Jump to E1C
$28C    $C754   RND      V7, #54         ; V7 = random & 54
$28E    $A3F8   LD       I, $3F8         ; Load 3F8 into I
$290    $4A65   SNE      VA, #65         ; Skip if VA != 101
$292    $CB8A   RND      VB, #8A         ; VB = random & 8A
$294    $646E   LD       V4, #6E         ; Load 110 into V4
$296    $959D   UNKNOWN  $959D           ; Unknown 9xxx instruction
$298    $3F3D   SE       VF, #3D         ; Skip if VF == 61
$29A    $284F   CALL     $84F            ; Call subroutine at 84F
$29C    $A8B4   LD       I, $8B4         ; Load 8B4 into I
$29E    $EE38   UNKNOWN  $EE38           ; Unknown Exxx instruction
$2A0    $339C   SE       V3, #9C         ; Skip if V3 == 156
$2A2    $53AC   UNKNOWN  $53AC           ; Unknown 5xxx instruction
$2A4    $1B5D   JP       $B5D            ; Jump to B5D
$2A6    $2368   CALL     $368            ; Call subroutine at 368
$2A8    $8FF9   UNKNOWN  8FF9            ; Unknown 8xxx instruction
$2AA    $6856   LD       V8, #56         ; Load 86 into V8
$2AC    $87FB   UNKNOWN  87FB            ; Unknown 8xxx instruction
$2AE    $8A2F   UNKNOWN  8A2F            ; Unknown 8xxx instruction
$2B0    $0C44   SYS      $C44            ; System call to C44
$2B2    $E397   UNKNOWN  $E397           ; Unknown Exxx instruction
$2B4    $C6E9   RND      V6, #E9         ; V6 = random & E9
$2B6    $0F39   SYS      $F39            ; System call to F39
$2B8    $E346   UNKNOWN  $E346           ; Unknown Exxx instruction
$2BA    $334F   SE       V3, #4F         ; Skip if V3 == 79
$2BC    $8048   UNKNOWN  8048            ; Unknown 8xxx instruction
$2BE    $39B6   SE       V9, #B6         ; Skip if V9 == 182
$2C0    $F721   UNKNOWN  F721            ; Unknown Fxxx instruction
$2C2    $7575   ADD      V5, #75         ; Add 117 to V5
$2C4    $7575   ADD      V5, #75         ; Add 117 to V5
$2C6    $7575   ADD      V5, #75         ; Add 117 to V5
$2C8    $7575   ADD      V5, #75         ; Add 117 to V5
$2CA    $7575   ADD      V5, #75         ; Add 117 to V5
$2CC    $7575   ADD      V5, #75         ; Add 117 to V5
$2CE    $7575   ADD      V5, #75         ; Add 117 to V5
$2D0    $7575   ADD      V5, #75         ; Add 117 to V5
$2D2    $7575   ADD      V5, #75         ; Add 117 to V5
$2D4    $7575   ADD      V5, #75         ; Add 117 to V5
$2D6    $7575   ADD      V5, #75         ; Add 117 to V5
$2D8    $7575   ADD      V5, #75         ; Add 117 to V5
$2DA    $7575   ADD      V5, #75         ; Add 117 to V5
$2DC    $7575   ADD      V5, #75         ; Add 117 to V5
$2DE    $7575   ADD      V5, #75         ; Add 117 to V5
$2E0    $7575   ADD      V5, #75         ; Add 117 to V5
$2E2    $7575   ADD      V5, #75         ; Add 117 to V5
$2E4    $7575   ADD      V5, #75         ; Add 117 to V5
$2E6    $7575   ADD      V5, #75         ; Add 117 to V5
$2E8    $7575   ADD      V5, #75         ; Add 117 to V5
$2EA    $7575   ADD      V5, #75         ; Add 117 to V5
$2EC    $7575   ADD      V5, #75         ; Add 117 to V5
$2EE    $7575   ADD      V5, #75         ; Add 117 to V5
$2F0    $7575   ADD      V5, #75         ; Add 117 to V5
$2F2    $7575   ADD      V5, #75         ; Add 117 to V5
$2F4    $7575   ADD      V5, #75         ; Add 117 to V5
$2F6    $7575   ADD      V5, #75         ; Add 117 to V5
$2F8    $7575   ADD      V5, #75         ; Add 117 to V5
$2FA    $7575   ADD      V5, #75         ; Add 117 to V5
$2FC    $7575   ADD      V5, #75         ; Add 117 to V5
$2FE    $7575   ADD      V5, #75         ; Add 117 to V5
$300    $7575   ADD      V5, #75         ; Add 117 to V5
$302    $7575   ADD      V5, #75         ; Add 117 to V5
$304    $7575   ADD      V5, #75         ; Add 117 to V5
$306    $6209   LD       V2, #09         ; Load 9 into V2
$308    $0CA3   SYS      $CA3            ; System call to CA3
$30A    $E77B   UNKNOWN  $E77B           ; Unknown Exxx instruction
$30C    $3F22   SE       VF, #22         ; Skip if VF == 34
$30E    $2329   CALL     $329            ; Call subroutine at 329
$310    $757E   ADD      V5, #7E         ; Add 126 to V5
$312    $5AB4   UNKNOWN  $5AB4           ; Unknown 5xxx instruction
$314    $6430   LD       V4, #30         ; Load 48 into V4
$316    $A1B4   LD       I, $1B4         ; Load 1B4 into I
$318    $FD55   LD       [I], VD         ; Store V0-VD at I
$31A    $2CB5   CALL     $CB5            ; Call subroutine at CB5
$31C    $DD8D   DRW      VD, V8, #D      ; Draw 13-byte sprite at VD, V8
$31E    $5205   UNKNOWN  $5205           ; Unknown 5xxx instruction
$320    $C38D   RND      V3, #8D         ; V3 = random & 8D
$322    $AF18   LD       I, $F18         ; Load F18 into I
$324    $DA52   DRW      VA, V5, #2      ; Draw 2-byte sprite at VA, V5
$326    $A9FE   LD       I, $9FE         ; Load 9FE into I
$328    $4A37   SNE      VA, #37         ; Skip if VA != 55
$32A    $09EE   SYS      $9EE            ; System call to 9EE
$32C    $5543   UNKNOWN  $5543           ; Unknown 5xxx instruction
$32E    $F64A   UNKNOWN  F64A            ; Unknown Fxxx instruction
$330    $522F   UNKNOWN  $522F           ; Unknown 5xxx instruction
$332    $D72F   DRW      V7, V2, #F      ; Draw 15-byte sprite at V7, V2
$334    $38CA   SE       V8, #CA         ; Skip if V8 == 202
$336    $C79E   RND      V7, #9E         ; V7 = random & 9E
$338    $BF62   JP       V0, $F62        ; Jump to V0 + F62
$33A    $C4DE   RND      V4, #DE         ; V4 = random & DE
$33C    $ABA4   LD       I, $BA4         ; Load BA4 into I
$33E    $90D3   UNKNOWN  $90D3           ; Unknown 9xxx instruction
$340    $7B43   ADD      VB, #43         ; Add 67 to VB
$342    $3561   SE       V5, #61         ; Skip if V5 == 97
$344    $5F62   UNKNOWN  $5F62           ; Unknown 5xxx instruction
$346    $641C   LD       V4, #1C         ; Load 28 into V4
$348    $AD62   LD       I, $D62         ; Load D62 into I
$34A    $9A5F   UNKNOWN  $9A5F           ; Unknown 9xxx instruction
$34C    $AF34   LD       I, $F34         ; Load F34 into I
$34E    $4DE4   SNE      VD, #E4         ; Skip if VD != 228
$350    $5D79   UNKNOWN  $5D79           ; Unknown 5xxx instruction
$352    $F8A6   UNKNOWN  F8A6            ; Unknown Fxxx instruction
$354    $2C2C   CALL     $C2C            ; Call subroutine at C2C
$356    $92A2   UNKNOWN  $92A2           ; Unknown 9xxx instruction
$358    $1009   JP       $009            ; Jump to 009
$35A    $68DF   LD       V8, #DF         ; Load 223 into V8
$35C    $CC99   RND      VC, #99         ; VC = random & 99
$35E    $B042   JP       V0, $042        ; Jump to V0 + 042
$360    $AE1A   LD       I, $E1A         ; Load E1A into I
$362    $BAD9   JP       V0, $AD9        ; Jump to V0 + AD9
$364    $8259   UNKNOWN  8259            ; Unknown 8xxx instruction
$366    $0F18   SYS      $F18            ; System call to F18
$368    $8B69   UNKNOWN  8B69            ; Unknown 8xxx instruction
$36A    $26DC   CALL     $6DC            ; Call subroutine at 6DC
$36C    $DEB0   DRW      VE, VB, #0      ; Draw 0-byte sprite at VE, VB
$36E    $B9C6   JP       V0, $9C6        ; Jump to V0 + 9C6
$370    $2DC7   CALL     $DC7            ; Call subroutine at DC7
$372    $460D   SNE      V6, #0D         ; Skip if V6 != 13
$374    $FAC0   UNKNOWN  FAC0            ; Unknown Fxxx instruction
$376    $0D0C   SYS      $D0C            ; System call to D0C
$378    $63ED   LD       V3, #ED         ; Load 237 into V3
$37A    $0AC3   SYS      $AC3            ; System call to AC3
$37C    $B7C6   JP       V0, $7C6        ; Jump to V0 + 7C6
$37E    $2373   CALL     $373            ; Call subroutine at 373
$380    $F5C5   UNKNOWN  F5C5            ; Unknown Fxxx instruction
$382    $9F42   UNKNOWN  $9F42           ; Unknown 9xxx instruction
$384    $C0FD   RND      V0, #FD         ; V0 = random & FD
$386    $6458   LD       V4, #58         ; Load 88 into V4
$388    $9059   UNKNOWN  $9059           ; Unknown 9xxx instruction
$38A    $CCFA   RND      VC, #FA         ; VC = random & FA
$38C    $FEBC   UNKNOWN  FEBC            ; Unknown Fxxx instruction
$38E    $1E98   JP       $E98            ; Jump to E98
$390    $86BC   UNKNOWN  86BC            ; Unknown 8xxx instruction
$392    $880D   UNKNOWN  880D            ; Unknown 8xxx instruction
$394    $99CE   UNKNOWN  $99CE           ; Unknown 9xxx instruction
$396    $6930   LD       V9, #30         ; Load 48 into V9
$398    $5A42   UNKNOWN  $5A42           ; Unknown 5xxx instruction
$39A    $D7BE   DRW      V7, VB, #E      ; Draw 14-byte sprite at V7, VB
$39C    $E74A   UNKNOWN  $E74A           ; Unknown Exxx instruction
$39E    $FDD7   UNKNOWN  FDD7            ; Unknown Fxxx instruction
$3A0    $53C8   UNKNOWN  $53C8           ; Unknown 5xxx instruction
$3A2    $80EB   UNKNOWN  80EB            ; Unknown 8xxx instruction
$3A4    $1CC6   JP       $CC6            ; Jump to CC6
$3A6    $1372   JP       $372            ; Jump to 372
$3A8    $BD98   JP       V0, $D98        ; Jump to V0 + D98
$3AA    $1507   JP       $507            ; Jump to 507
$3AC    $9DCA   UNKNOWN  $9DCA           ; Unknown 9xxx instruction
$3AE    $A003   LD       I, $003         ; Load 003 into I
$3B0    $7E47   ADD      VE, #47         ; Add 71 to VE
$3B2    $EF9C   UNKNOWN  $EF9C           ; Unknown Exxx instruction
$3B4    $936A   UNKNOWN  $936A           ; Unknown 9xxx instruction
$3B6    $C78D   RND      V7, #8D         ; V7 = random & 8D
$3B8    $7820   ADD      V8, #20         ; Add 32 to V8
$3BA    $B7AE   JP       V0, $7AE        ; Jump to V0 + 7AE
$3BC    $0EF6   SYS      $EF6            ; System call to EF6
$3BE    $E3C3   UNKNOWN  $E3C3           ; Unknown Exxx instruction
$3C0    $C04E   RND      V0, #4E         ; V0 = random & 4E
$3C2    $7C8F   ADD      VC, #8F         ; Add 143 to VC
$3C4    $5FBE   UNKNOWN  $5FBE           ; Unknown 5xxx instruction
$3C6    $CA7D   RND      VA, #7D         ; VA = random & 7D
$3C8    $37A1   SE       V7, #A1         ; Skip if V7 == 161
$3CA    $E111   UNKNOWN  $E111           ; Unknown Exxx instruction
$3CC    $E76C   UNKNOWN  $E76C           ; Unknown Exxx instruction
$3CE    $4C2E   SNE      VC, #2E         ; Skip if VC != 46
$3D0    $FB24   UNKNOWN  FB24            ; Unknown Fxxx instruction
$3D2    $C05C   RND      V0, #5C         ; V0 = random & 5C
$3D4    $BF1F   JP       V0, $F1F        ; Jump to V0 + F1F
$3D6    $F7DB   UNKNOWN  F7DB            ; Unknown Fxxx instruction
$3D8    $CDED   RND      VD, #ED         ; VD = random & ED
$3DA    $0AC9   SYS      $AC9            ; System call to AC9
$3DC    $934E   UNKNOWN  $934E           ; Unknown 9xxx instruction
$3DE    $9A0B   UNKNOWN  $9A0B           ; Unknown 9xxx instruction
$3E0    $B8DF   JP       V0, $8DF        ; Jump to V0 + 8DF
$3E2    $4192   SNE      V1, #92         ; Skip if V1 != 146
$3E4    $9A76   UNKNOWN  $9A76           ; Unknown 9xxx instruction
$3E6    $C5E5   RND      V5, #E5         ; V5 = random & E5
$3E8    $CD6F   RND      VD, #6F         ; VD = random & 6F
$3EA    $1A11   JP       $A11            ; Jump to A11
$3EC    $A26D   LD       I, $26D         ; Load 26D into I
$3EE    $A1BA   LD       I, $1BA         ; Load 1BA into I
$3F0    $4108   SNE      V1, #08         ; Skip if V1 != 8
$3F2    $D4EE   DRW      V4, VE, #E      ; Draw 14-byte sprite at V4, VE
$3F4    $BC85   JP       V0, $C85        ; Jump to V0 + C85
$3F6    $A99D   LD       I, $99D         ; Load 99D into I
$3F8    $8B19   UNKNOWN  8B19            ; Unknown 8xxx instruction
$3FA    $1268   JP       $268            ; Jump to 268
$3FC    $BC64   JP       V0, $C64        ; Jump to V0 + C64
$3FE    $73B0   ADD      V3, #B0         ; Add 176 to V3
$400    $13F9   JP       $3F9            ; Jump to 3F9
$402    $0DD3   SYS      $DD3            ; System call to DD3
$404    $A4A1   LD       I, $4A1         ; Load 4A1 into I
$406    $391A   SE       V9, #1A         ; Skip if V9 == 26
$408    $A3F3   LD       I, $3F3         ; Load 3F3 into I
$40A    $7473   ADD      V4, #73         ; Add 115 to V4
$40C    $52B7   UNKNOWN  $52B7           ; Unknown 5xxx instruction
$40E    $6DE2   LD       VD, #E2         ; Load 226 into VD
$410    $817E   SHL      V1              ; V1 <<= 1, VF = MSB
$412    $FF0A   LD       VF, K           ; Wait for key press, store in VF
$414    $A1BE   LD       I, $1BE         ; Load 1BE into I
$416    $FE4E   UNKNOWN  FE4E            ; Unknown Fxxx instruction
$418    $6504   LD       V5, #04         ; Load 4 into V5
$41A    $EAAF   UNKNOWN  $EAAF           ; Unknown Exxx instruction
$41C    $6F5E   LD       VF, #5E         ; Load 94 into VF
$41E    $DD07   DRW      VD, V0, #7      ; Draw 7-byte sprite at VD, V0
$420    $5E2B   UNKNOWN  $5E2B           ; Unknown 5xxx instruction
$422    $2C16   CALL     $C16            ; Call subroutine at C16
$424    $D314   DRW      V3, V1, #4      ; Draw 4-byte sprite at V3, V1
$426    $DFE4   DRW      VF, VE, #4      ; Draw 4-byte sprite at VF, VE
$428    $739E   ADD      V3, #9E         ; Add 158 to V3
$42A    $AAAA   LD       I, $AAA         ; Load AAA into I
$42C    $25B7   CALL     $5B7            ; Call subroutine at 5B7
$42E    $3C9A   SE       VC, #9A         ; Skip if VC == 154
$430    $33A9   SE       V3, #A9         ; Skip if V3 == 169
$432    $7755   ADD      V7, #55         ; Add 85 to V7
$434    $A46B   LD       I, $46B         ; Load 46B into I
$436    $716A   ADD      V1, #6A         ; Add 106 to V1
$438    $7087   ADD      V0, #87         ; Add 135 to V0
$43A    $617E   LD       V1, #7E         ; Load 126 into V1
$43C    $0790   SYS      $790            ; System call to 790
$43E    $0821   SYS      $821            ; System call to 821
$440    $905C   UNKNOWN  $905C           ; Unknown 9xxx instruction
$442    $DB3C   DRW      VB, V3, #C      ; Draw 12-byte sprite at VB, V3
$444    $5CB7   UNKNOWN  $5CB7           ; Unknown 5xxx instruction
$446    $D9BB   DRW      V9, VB, #B      ; Draw 11-byte sprite at V9, VB
$448    $1DE4   JP       $DE4            ; Jump to DE4
$44A    $A82D   LD       I, $82D         ; Load 82D into I
$44C    $8603   XOR      V6, V0          ; V6 ^= V0
$44E    $A492   LD       I, $492         ; Load 492 into I
$450    $30D3   SE       V0, #D3         ; Skip if V0 == 211
$452    $1A92   JP       $A92            ; Jump to A92
$454    $AB39   LD       I, $B39         ; Load B39 into I
$456    $7883   ADD      V8, #83         ; Add 131 to V8
$458    $54E6   UNKNOWN  $54E6           ; Unknown 5xxx instruction
$45A    $E056   UNKNOWN  $E056           ; Unknown Exxx instruction
$45C    $EABA   UNKNOWN  $EABA           ; Unknown Exxx instruction
$45E    $EA1E   UNKNOWN  $EA1E           ; Unknown Exxx instruction
$460    $5A23   UNKNOWN  $5A23           ; Unknown 5xxx instruction
$462    $CB30   RND      VB, #30         ; VB = random & 30
$464    $6792   LD       V7, #92         ; Load 146 into V7
$466    $6459   LD       V4, #59         ; Load 89 into V4
$468    $40AA   SNE      V0, #AA         ; Skip if V0 != 170
$46A    $F545   UNKNOWN  F545            ; Unknown Fxxx instruction
$46C    $A620   LD       I, $620         ; Load 620 into I
$46E    $8FBD   UNKNOWN  8FBD            ; Unknown 8xxx instruction
$470    $0C19   SYS      $C19            ; System call to C19
$472    $8A50   LD       VA, V5          ; VA = V5
$474    $FA86   UNKNOWN  FA86            ; Unknown Fxxx instruction
$476    $621C   LD       V2, #1C         ; Load 28 into V2
$478    $82F0   LD       V2, VF          ; V2 = VF
$47A    $283F   CALL     $83F            ; Call subroutine at 83F
$47C    $0821   SYS      $821            ; System call to 821
$47E    $881E   SHL      V8              ; V8 <<= 1, VF = MSB
$480    $C49F   RND      V4, #9F         ; V4 = random & 9F
$482    $2972   CALL     $972            ; Call subroutine at 972
$484    $D898   DRW      V8, V9, #8      ; Draw 8-byte sprite at V8, V9
$486    $C8F5   RND      V8, #F5         ; V8 = random & F5
$488    $9396   UNKNOWN  $9396           ; Unknown 9xxx instruction
$48A    $12F1   JP       $2F1            ; Jump to 2F1
$48C    $96CF   UNKNOWN  $96CF           ; Unknown 9xxx instruction
$48E    $C469   RND      V4, #69         ; V4 = random & 69
$490    $1732   JP       $732            ; Jump to 732
$492    $14A3   JP       $4A3            ; Jump to 4A3
$494    $484C   SNE      V8, #4C         ; Skip if V8 != 76
$496    $46CF   SNE      V6, #CF         ; Skip if V6 != 207
$498    $4A7B   SNE      VA, #7B         ; Skip if VA != 123
$49A    $B0CF   JP       V0, $0CF        ; Jump to V0 + 0CF
$49C    $F320   UNKNOWN  F320            ; Unknown Fxxx instruction
$49E    $B057   JP       V0, $057        ; Jump to V0 + 057
$4A0    $B81C   JP       V0, $81C        ; Jump to V0 + 81C
$4A2    $09BB   SYS      $9BB            ; System call to 9BB
$4A4    $E2E9   UNKNOWN  $E2E9           ; Unknown Exxx instruction
$4A6    $64D8   LD       V4, #D8         ; Load 216 into V4
$4A8    $144C   JP       $44C            ; Jump to 44C
$4AA    $98DD   UNKNOWN  $98DD           ; Unknown 9xxx instruction
$4AC    $0057   SYS      $057            ; System call to 057
$4AE    $5062   UNKNOWN  $5062           ; Unknown 5xxx instruction
$4B0    $AD3E   LD       I, $D3E         ; Load D3E into I
$4B2    $2A8E   CALL     $A8E            ; Call subroutine at A8E
$4B4    $B512   JP       V0, $512        ; Jump to V0 + 512
$4B6    $8D43   XOR      VD, V4          ; VD ^= V4
$4B8    $4EC1   SNE      VE, #C1         ; Skip if VE != 193
$4BA    $C4A8   RND      V4, #A8         ; V4 = random & A8
$4BC    $B6DC   JP       V0, $6DC        ; Jump to V0 + 6DC
$4BE    $304F   SE       V0, #4F         ; Skip if V0 == 79
$4C0    $ECA0   UNKNOWN  $ECA0           ; Unknown Exxx instruction
$4C2    $4C55   SNE      VC, #55         ; Skip if VC != 85
$4C4    $DB36   DRW      VB, V3, #6      ; Draw 6-byte sprite at VB, V3
$4C6    $9413   UNKNOWN  $9413           ; Unknown 9xxx instruction
$4C8    $31A3   SE       V1, #A3         ; Skip if V1 == 163
$4CA    $5441   UNKNOWN  $5441           ; Unknown 5xxx instruction
$4CC    $294A   CALL     $94A            ; Call subroutine at 94A
$4CE    $A8EB   LD       I, $8EB         ; Load 8EB into I
$4D0    $5A90   SE       VA, V9          ; Skip if VA == V9
$4D2    $F36F   UNKNOWN  F36F            ; Unknown Fxxx instruction
$4D4    $9892   UNKNOWN  $9892           ; Unknown 9xxx instruction
$4D6    $4558   SNE      V5, #58         ; Skip if V5 != 88
$4D8    $B75A   JP       V0, $75A        ; Jump to V0 + 75A
$4DA    $361B   SE       V6, #1B         ; Skip if V6 == 27
$4DC    $C3C2   RND      V3, #C2         ; V3 = random & C2
$4DE    $58E3   UNKNOWN  $58E3           ; Unknown 5xxx instruction
$4E0    $71A7   ADD      V1, #A7         ; Add 167 to V1
$4E2    $2328   CALL     $328            ; Call subroutine at 328
$4E4    $5715   UNKNOWN  $5715           ; Unknown 5xxx instruction
$4E6    $B5E3   JP       V0, $5E3        ; Jump to V0 + 5E3
$4E8    $8F93   XOR      VF, V9          ; VF ^= V9
$4EA    $1306   JP       $306            ; Jump to 306
$4EC    $D8AE   DRW      V8, VA, #E      ; Draw 14-byte sprite at V8, VA
$4EE    $28BD   CALL     $8BD            ; Call subroutine at 8BD
$4F0    $954E   UNKNOWN  $954E           ; Unknown 9xxx instruction
$4F2    $2A2A   CALL     $A2A            ; Call subroutine at A2A
$4F4    $CB9E   RND      VB, #9E         ; VB = random & 9E
$4F6    $CBB7   RND      VB, #B7         ; VB = random & B7
$4F8    $235B   CALL     $35B            ; Call subroutine at 35B
$4FA    $0DD2   SYS      $DD2            ; System call to DD2
$4FC    $0221   SYS      $221            ; System call to 221
$4FE    $020E   SYS      $20E            ; System call to 20E
$500    $4C57   SNE      VC, #57         ; Skip if VC != 87
$502    $2BCF   CALL     $BCF            ; Call subroutine at BCF
$504    $5138   UNKNOWN  $5138           ; Unknown 5xxx instruction
$506    $8A57   SUBN     VA, V5          ; VA = V5 - VA, VF = !borrow
$508    $1CA1   JP       $CA1            ; Jump to CA1
$50A    $6F2B   LD       VF, #2B         ; Load 43 into VF
$50C    $25B3   CALL     $5B3            ; Call subroutine at 5B3
$50E    $E004   UNKNOWN  $E004           ; Unknown Exxx instruction
$510    $C2B4   RND      V2, #B4         ; V2 = random & B4
$512    $667F   LD       V6, #7F         ; Load 127 into V6
$514    $B48D   JP       V0, $48D        ; Jump to V0 + 48D
$516    $E57F   UNKNOWN  $E57F           ; Unknown Exxx instruction
$518    $D306   DRW      V3, V0, #6      ; Draw 6-byte sprite at V3, V0
$51A    $EE56   UNKNOWN  $EE56           ; Unknown Exxx instruction
$51C    $ECAF   UNKNOWN  $ECAF           ; Unknown Exxx instruction
$51E    $54BD   UNKNOWN  $54BD           ; Unknown 5xxx instruction
$520    $3D60   SE       VD, #60         ; Skip if VD == 96
$522    $BE44   JP       V0, $E44        ; Jump to V0 + E44
$524    $9A37   UNKNOWN  $9A37           ; Unknown 9xxx instruction
$526    $0663   SYS      $663            ; System call to 663
$528    $0F8D   SYS      $F8D            ; System call to F8D
$52A    $73C0   ADD      V3, #C0         ; Add 192 to V3
$52C    $4EDF   SNE      VE, #DF         ; Skip if VE != 223
$52E    $C540   RND      V5, #40         ; V5 = random & 40
$530    $4A24   SNE      VA, #24         ; Skip if VA != 36
$532    $B494   JP       V0, $494        ; Jump to V0 + 494
$534    $4709   SNE      V7, #09         ; Skip if V7 != 9
$536    $0557   SYS      $557            ; System call to 557
$538    $B3D2   JP       V0, $3D2        ; Jump to V0 + 3D2
$53A    $7ABE   ADD      VA, #BE         ; Add 190 to VA
$53C    $2FE4   CALL     $FE4            ; Call subroutine at FE4
$53E    $2E19   CALL     $E19            ; Call subroutine at E19
$540    $15A1   JP       $5A1            ; Jump to 5A1
$542    $AFFC   LD       I, $FFC         ; Load FFC into I
$544    $552B   UNKNOWN  $552B           ; Unknown 5xxx instruction
$546    $558C   UNKNOWN  $558C           ; Unknown 5xxx instruction
$548    $259C   CALL     $59C            ; Call subroutine at 59C
$54A    $3CDD   SE       VC, #DD         ; Skip if VC == 221
$54C    $A130   LD       I, $130         ; Load 130 into I
$54E    $6F3F   LD       VF, #3F         ; Load 63 into VF
$550    $DCC4   DRW      VC, VC, #4      ; Draw 4-byte sprite at VC, VC
$552    $48F2   SNE      V8, #F2         ; Skip if V8 != 242
$554    $7838   ADD      V8, #38         ; Add 56 to V8
$556    $EA8A   UNKNOWN  $EA8A           ; Unknown Exxx instruction
$558    $473C   SNE      V7, #3C         ; Skip if V7 != 60
$55A    $018B   SYS      $18B            ; System call to 18B
$55C    $2653   CALL     $653            ; Call subroutine at 653
$55E    $F229   LD       F, V2           ; I = sprite address for digit V2
$560    $BA4F   JP       V0, $A4F        ; Jump to V0 + A4F
$562    $19EB   JP       $9EB            ; Jump to 9EB
$564    $27AD   CALL     $7AD            ; Call subroutine at 7AD
$566    $5EFA   UNKNOWN  $5EFA           ; Unknown 5xxx instruction
$568    $7D40   ADD      VD, #40         ; Add 64 to VD
$56A    $AA70   LD       I, $A70         ; Load A70 into I
$56C    $D339   DRW      V3, V3, #9      ; Draw 9-byte sprite at V3, V3
$56E    $84D0   LD       V4, VD          ; V4 = VD
$570    $464E   SNE      V6, #4E         ; Skip if V6 != 78
$572    $0739   SYS      $739            ; System call to 739
$574    $EB7A   UNKNOWN  $EB7A           ; Unknown Exxx instruction
$576    $B322   JP       V0, $322        ; Jump to V0 + 322
$578    $5E10   SE       VE, V1          ; Skip if VE == V1
$57A    $40CF   SNE      V0, #CF         ; Skip if V0 != 207
$57C    $1F67   JP       $F67            ; Jump to F67
$57E    $AA48   LD       I, $A48         ; Load A48 into I
$580    $08E1   SYS      $8E1            ; System call to 8E1
$582    $6DEF   LD       VD, #EF         ; Load 239 into VD
$584    $5FB6   UNKNOWN  $5FB6           ; Unknown 5xxx instruction
$586    $FFA6   UNKNOWN  FFA6            ; Unknown Fxxx instruction
$588    $036A   SYS      $36A            ; System call to 36A
$58A    $1E61   JP       $E61            ; Jump to E61
$58C    $E537   UNKNOWN  $E537           ; Unknown Exxx instruction
$58E    $4D8F   SNE      VD, #8F         ; Skip if VD != 143
$590    $8793   XOR      V7, V9          ; V7 ^= V9
$592    $007B   SYS      $07B            ; System call to 07B
$594    $0DEC   SYS      $DEC            ; System call to DEC
$596    $DC2B   DRW      VC, V2, #B      ; Draw 11-byte sprite at VC, V2
$598    $30CE   SE       V0, #CE         ; Skip if V0 == 206
$59A    $B803   JP       V0, $803        ; Jump to V0 + 803
$59C    $FE00   UNKNOWN  FE00            ; Unknown Fxxx instruction
$59E    $B6C4   JP       V0, $6C4        ; Jump to V0 + 6C4
$5A0    $A561   LD       I, $561         ; Load 561 into I
$5A2    $B687   JP       V0, $687        ; Jump to V0 + 687
$5A4    $BAD8   JP       V0, $AD8        ; Jump to V0 + AD8
$5A6    $9DA4   UNKNOWN  $9DA4           ; Unknown 9xxx instruction
$5A8    $44AC   SNE      V4, #AC         ; Skip if V4 != 172
$5AA    $57B5   UNKNOWN  $57B5           ; Unknown 5xxx instruction
$5AC    $A163   LD       I, $163         ; Load 163 into I
$5AE    $12A0   JP       $2A0            ; Jump to 2A0
$5B0    $056C   SYS      $56C            ; System call to 56C
$5B2    $6E2A   LD       VE, #2A         ; Load 42 into VE
$5B4    $2651   CALL     $651            ; Call subroutine at 651
$5B6    $3928   SE       V9, #28         ; Skip if V9 == 40
$5B8    $6033   LD       V0, #33         ; Load 51 into V0
$5BA    $AA0A   LD       I, $A0A         ; Load A0A into I
$5BC    $50B6   UNKNOWN  $50B6           ; Unknown 5xxx instruction
$5BE    $41BC   SNE      V1, #BC         ; Skip if V1 != 188
$5C0    $86FE   SHL      V6              ; V6 <<= 1, VF = MSB
$5C2    $9FC0   SNE      VF, VC          ; Skip if VF != VC
$5C4    $56ED   UNKNOWN  $56ED           ; Unknown 5xxx instruction
$5C6    $DC16   DRW      VC, V1, #6      ; Draw 6-byte sprite at VC, V1
$5C8    $204E   CALL     $04E            ; Call subroutine at 04E
$5CA    $8F87   SUBN     VF, V8          ; VF = V8 - VF, VF = !borrow
$5CC    $F426   UNKNOWN  F426            ; Unknown Fxxx instruction
$5CE    $B18A   JP       V0, $18A        ; Jump to V0 + 18A
$5D0    $F75D   UNKNOWN  F75D            ; Unknown Fxxx instruction
$5D2    $4E48   SNE      VE, #48         ; Skip if VE != 72
$5D4    $BDF8   JP       V0, $DF8        ; Jump to V0 + DF8
$5D6    $4EE6   SNE      VE, #E6         ; Skip if VE != 230
$5D8    $ECD2   UNKNOWN  $ECD2           ; Unknown Exxx instruction
$5DA    $28DF   CALL     $8DF            ; Call subroutine at 8DF
$5DC    $6C60   LD       VC, #60         ; Load 96 into VC
$5DE    $B0F8   JP       V0, $0F8        ; Jump to V0 + 0F8
$5E0    $BB42   JP       V0, $B42        ; Jump to V0 + B42
$5E2    $6217   LD       V2, #17         ; Load 23 into V2
$5E4    $E948   UNKNOWN  $E948           ; Unknown Exxx instruction
$5E6    $B428   JP       V0, $428        ; Jump to V0 + 428
$5E8    $765E   ADD      V6, #5E         ; Add 94 to V6
$5EA    $CE96   RND      VE, #96         ; VE = random & 96
$5EC    $EBA7   UNKNOWN  $EBA7           ; Unknown Exxx instruction
$5EE    $6BBB   LD       VB, #BB         ; Load 187 into VB
$5F0    $F006   UNKNOWN  F006            ; Unknown Fxxx instruction
$5F2    $53AB   UNKNOWN  $53AB           ; Unknown 5xxx instruction
$5F4    $3A5C   SE       VA, #5C         ; Skip if VA == 92
$5F6    $247B   CALL     $47B            ; Call subroutine at 47B
$5F8    $75B6   ADD      V5, #B6         ; Add 182 to V5
$5FA    $3D09   SE       VD, #09         ; Skip if VD == 9
$5FC    $EC4F   UNKNOWN  $EC4F           ; Unknown Exxx instruction
$5FE    $6789   LD       V7, #89         ; Load 137 into V7
$600    $1A37   JP       $A37            ; Jump to A37
$602    $10C3   JP       $0C3            ; Jump to 0C3
$604    $4232   SNE      V2, #32         ; Skip if V2 != 50
$606    $F07D   UNKNOWN  F07D            ; Unknown Fxxx instruction
$608    $4DB3   SNE      VD, #B3         ; Skip if VD != 179
$60A    $1DD2   JP       $DD2            ; Jump to DD2
$60C    $B221   JP       V0, $221        ; Jump to V0 + 221
$60E    $7BDD   ADD      VB, #DD         ; Add 221 to VB
$610    $7F42   ADD      VF, #42         ; Add 66 to VF
$612    $9436   UNKNOWN  $9436           ; Unknown 9xxx instruction
$614    $FF69   UNKNOWN  FF69            ; Unknown Fxxx instruction
$616    $F7FB   UNKNOWN  F7FB            ; Unknown Fxxx instruction
$618    $B230   JP       V0, $230        ; Jump to V0 + 230
$61A    $2175   CALL     $175            ; Call subroutine at 175
$61C    $FE1C   UNKNOWN  FE1C            ; Unknown Fxxx instruction
$61E    $8D9F   UNKNOWN  8D9F            ; Unknown 8xxx instruction
$620    $17A3   JP       $7A3            ; Jump to 7A3
$622    $16B4   JP       $6B4            ; Jump to 6B4
$624    $3612   SE       V6, #12         ; Skip if V6 == 18
$626    $B24B   JP       V0, $24B        ; Jump to V0 + 24B
$628    $7649   ADD      V6, #49         ; Add 73 to V6
$62A    $E3AA   UNKNOWN  $E3AA           ; Unknown Exxx instruction
$62C    $218C   CALL     $18C            ; Call subroutine at 18C
$62E    $6D2D   LD       VD, #2D         ; Load 45 into VD
$630    $6E5E   LD       VE, #5E         ; Load 94 into VE
$632    $93DE   UNKNOWN  $93DE           ; Unknown 9xxx instruction
$634    $EA96   UNKNOWN  $EA96           ; Unknown Exxx instruction
$636    $95CF   UNKNOWN  $95CF           ; Unknown 9xxx instruction
$638    $F45F   UNKNOWN  F45F            ; Unknown Fxxx instruction
$63A    $80BD   UNKNOWN  80BD            ; Unknown 8xxx instruction
$63C    $5C8E   UNKNOWN  $5C8E           ; Unknown 5xxx instruction
$63E    $4DFA   SNE      VD, #FA         ; Skip if VD != 250
$640    $E96F   UNKNOWN  $E96F           ; Unknown Exxx instruction
$642    $FEAE   UNKNOWN  FEAE            ; Unknown Fxxx instruction
$644    $562F   UNKNOWN  $562F           ; Unknown 5xxx instruction
$646    $DF5D   DRW      VF, V5, #D      ; Draw 13-byte sprite at VF, V5
$648    $AF7B   LD       I, $F7B         ; Load F7B into I
$64A    $23A9   CALL     $3A9            ; Call subroutine at 3A9
$64C    $875A   UNKNOWN  875A            ; Unknown 8xxx instruction
$64E    $318F   SE       V1, #8F         ; Skip if V1 == 143
$650    $EE4F   UNKNOWN  $EE4F           ; Unknown Exxx instruction
$652    $CAE3   RND      VA, #E3         ; VA = random & E3
$654    $65CD   LD       V5, #CD         ; Load 205 into V5
$656    $77C1   ADD      V7, #C1         ; Add 193 to V7
$658    $43F6   SNE      V3, #F6         ; Skip if V3 != 246
$65A    $3991   SE       V9, #91         ; Skip if V9 == 145
$65C    $4FF6   SNE      VF, #F6         ; Skip if VF != 246
$65E    $A853   LD       I, $853         ; Load 853 into I
$660    $BF5D   JP       V0, $F5D        ; Jump to V0 + F5D
$662    $6F08   LD       VF, #08         ; Load 8 into VF
$664    $25F6   CALL     $5F6            ; Call subroutine at 5F6
$666    $617B   LD       V1, #7B         ; Load 123 into V1
$668    $C84A   RND      V8, #4A         ; V8 = random & 4A
$66A    $685D   LD       V8, #5D         ; Load 93 into V8
$66C    $A9A2   LD       I, $9A2         ; Load 9A2 into I
$66E    $8C6C   UNKNOWN  8C6C            ; Unknown 8xxx instruction
$670    $E459   UNKNOWN  $E459           ; Unknown Exxx instruction
$672    $7F47   ADD      VF, #47         ; Add 71 to VF
$674    $4AAC   SNE      VA, #AC         ; Skip if VA != 172
$676    $97B4   UNKNOWN  $97B4           ; Unknown 9xxx instruction
$678    $8E05   SUB      VE, V0          ; VE -= V0, VF = !borrow
$67A    $3717   SE       V7, #17         ; Skip if V7 == 23
$67C    $A4D3   LD       I, $4D3         ; Load 4D3 into I
$67E    $B97E   JP       V0, $97E        ; Jump to V0 + 97E
$680    $4CB3   SNE      VC, #B3         ; Skip if VC != 179
$682    $83CA   UNKNOWN  83CA            ; Unknown 8xxx instruction
$684    $0141   SYS      $141            ; System call to 141
$686    $DBC2   DRW      VB, VC, #2      ; Draw 2-byte sprite at VB, VC
$688    $0C18   SYS      $C18            ; System call to C18
$68A    $1ACC   JP       $ACC            ; Jump to ACC
$68C    $F01D   UNKNOWN  F01D            ; Unknown Fxxx instruction
$68E    $5DC4   UNKNOWN  $5DC4           ; Unknown 5xxx instruction
$690    $750F   ADD      V5, #0F         ; Add 15 to V5
$692    $D8A6   DRW      V8, VA, #6      ; Draw 6-byte sprite at V8, VA
$694    $A5D3   LD       I, $5D3         ; Load 5D3 into I
$696    $CC64   RND      VC, #64         ; VC = random & 64
$698    $FC0B   UNKNOWN  FC0B            ; Unknown Fxxx instruction
$69A    $FC3A   UNKNOWN  FC3A            ; Unknown Fxxx instruction
$69C    $534B   UNKNOWN  $534B           ; Unknown 5xxx instruction
$69E    $83E3   XOR      V3, VE          ; V3 ^= VE
$6A0    $7BFA   ADD      VB, #FA         ; Add 250 to VB
$6A2    $1F63   JP       $F63            ; Jump to F63
$6A4    $96C4   UNKNOWN  $96C4           ; Unknown 9xxx instruction
$6A6    $BCDB   JP       V0, $CDB        ; Jump to V0 + CDB
$6A8    $86C0   LD       V6, VC          ; V6 = VC
$6AA    $8D10   LD       VD, V1          ; VD = V1
$6AC    $5EAA   UNKNOWN  $5EAA           ; Unknown 5xxx instruction
$6AE    $F9F2   UNKNOWN  F9F2            ; Unknown Fxxx instruction
$6B0    $8350   LD       V3, V5          ; V3 = V5
$6B2    $E75E   UNKNOWN  $E75E           ; Unknown Exxx instruction
$6B4    $B0E3   JP       V0, $0E3        ; Jump to V0 + 0E3
$6B6    $19B2   JP       $9B2            ; Jump to 9B2
$6B8    $C91B   RND      V9, #1B         ; V9 = random & 1B
$6BA    $F74B   UNKNOWN  F74B            ; Unknown Fxxx instruction
$6BC    $7333   ADD      V3, #33         ; Add 51 to V3
$6BE    $C090   RND      V0, #90         ; V0 = random & 90
$6C0    $1B71   JP       $B71            ; Jump to B71
$6C2    $5BE4   UNKNOWN  $5BE4           ; Unknown 5xxx instruction
$6C4    $2EF0   CALL     $EF0            ; Call subroutine at EF0
$6C6    $1DD9   JP       $DD9            ; Jump to DD9
$6C8    $6127   LD       V1, #27         ; Load 39 into V1
$6CA    $D7AF   DRW      V7, VA, #F      ; Draw 15-byte sprite at V7, VA
$6CC    $FD1E   ADD      I, VD           ; I += VD
$6CE    $B0EC   JP       V0, $0EC        ; Jump to V0 + 0EC
$6D0    $85EB   UNKNOWN  85EB            ; Unknown 8xxx instruction
$6D2    $C98E   RND      V9, #8E         ; V9 = random & 8E
$6D4    $4D41   SNE      VD, #41         ; Skip if VD != 65
$6D6    $BAA5   JP       V0, $AA5        ; Jump to V0 + AA5
$6D8    $ACB0   LD       I, $CB0         ; Load CB0 into I
$6DA    $E230   UNKNOWN  $E230           ; Unknown Exxx instruction
$6DC    $1BA3   JP       $BA3            ; Jump to BA3
$6DE    $F2DC   UNKNOWN  F2DC            ; Unknown Fxxx instruction
$6E0    $29B9   CALL     $9B9            ; Call subroutine at 9B9
$6E2    $0825   SYS      $825            ; System call to 825
$6E4    $70FD   ADD      V0, #FD         ; Add 253 to V0
$6E6    $9E79   UNKNOWN  $9E79           ; Unknown 9xxx instruction
$6E8    $1ECD   JP       $ECD            ; Jump to ECD
$6EA    $0348   SYS      $348            ; System call to 348
$6EC    $C9A8   RND      V9, #A8         ; V9 = random & A8
$6EE    $B4D4   JP       V0, $4D4        ; Jump to V0 + 4D4
$6F0    $D977   DRW      V9, V7, #7      ; Draw 7-byte sprite at V9, V7
$6F2    $F0C8   UNKNOWN  F0C8            ; Unknown Fxxx instruction
$6F4    $7435   ADD      V4, #35         ; Add 53 to V4
$6F6    $13E2   JP       $3E2            ; Jump to 3E2
$6F8    $C1E2   RND      V1, #E2         ; V1 = random & E2
$6FA    $2C19   CALL     $C19            ; Call subroutine at C19
$6FC    $1D0F   JP       $D0F            ; Jump to D0F
$6FE    $C4DB   RND      V4, #DB         ; V4 = random & DB
$700    $01F5   SYS      $1F5            ; System call to 1F5
$702    $F44A   UNKNOWN  F44A            ; Unknown Fxxx instruction
$704    $556B   UNKNOWN  $556B           ; Unknown 5xxx instruction
$706    $D9E6   DRW      V9, VE, #6      ; Draw 6-byte sprite at V9, VE
$708    $C53D   RND      V5, #3D         ; V5 = random & 3D
$70A    $5BF6   UNKNOWN  $5BF6           ; Unknown 5xxx instruction
$70C    $9AB1   UNKNOWN  $9AB1           ; Unknown 9xxx instruction
$70E    $A040   LD       I, $040         ; Load 040 into I
$710    $9773   UNKNOWN  $9773           ; Unknown 9xxx instruction
$712    $D637   DRW      V6, V3, #7      ; Draw 7-byte sprite at V6, V3
$714    $B268   JP       V0, $268        ; Jump to V0 + 268
$716    $FC68   UNKNOWN  FC68            ; Unknown Fxxx instruction
$718    $9281   UNKNOWN  $9281           ; Unknown 9xxx instruction
$71A    $1077   JP       $077            ; Jump to 077
$71C    $EE6B   UNKNOWN  $EE6B           ; Unknown Exxx instruction
$71E    $029B   SYS      $29B            ; System call to 29B
$720    $3B30   SE       VB, #30         ; Skip if VB == 48
$722    $5F96   UNKNOWN  $5F96           ; Unknown 5xxx instruction
$724    $6262   LD       V2, #62         ; Load 98 into V2
$726    $4485   SNE      V4, #85         ; Skip if V4 != 133
$728    $930C   UNKNOWN  $930C           ; Unknown 9xxx instruction
$72A    $AAD9   LD       I, $AD9         ; Load AD9 into I
$72C    $0C6A   SYS      $C6A            ; System call to C6A
$72E    $501B   UNKNOWN  $501B           ; Unknown 5xxx instruction
$730    $A845   LD       I, $845         ; Load 845 into I
$732    $72BC   ADD      V2, #BC         ; Add 188 to V2
$734    $DE0C   DRW      VE, V0, #C      ; Draw 12-byte sprite at VE, V0
$736    $FFDB   UNKNOWN  FFDB            ; Unknown Fxxx instruction
$738    $26DD   CALL     $6DD            ; Call subroutine at 6DD
$73A    $3540   SE       V5, #40         ; Skip if V5 == 64
$73C    $FC16   UNKNOWN  FC16            ; Unknown Fxxx instruction
$73E    $C2D7   RND      V2, #D7         ; V2 = random & D7
$740    $5F6C   UNKNOWN  $5F6C           ; Unknown 5xxx instruction
$742    $BA87   JP       V0, $A87        ; Jump to V0 + A87
$744    $DA13   DRW      VA, V1, #3      ; Draw 3-byte sprite at VA, V1
$746    $5A5F   UNKNOWN  $5A5F           ; Unknown 5xxx instruction
$748    $43C8   SNE      V3, #C8         ; Skip if V3 != 200
$74A    $5A7A   UNKNOWN  $5A7A           ; Unknown 5xxx instruction
$74C    $7A63   ADD      VA, #63         ; Add 99 to VA
$74E    $6332   LD       V3, #32         ; Load 50 into V3
$750    $24FD   CALL     $4FD            ; Call subroutine at 4FD
$752    $21D8   CALL     $1D8            ; Call subroutine at 1D8
$754    $5916   UNKNOWN  $5916           ; Unknown 5xxx instruction
$756    $7A2E   ADD      VA, #2E         ; Add 46 to VA
$758    $4508   SNE      V5, #08         ; Skip if V5 != 8
$75A    $1AC7   JP       $AC7            ; Jump to AC7
$75C    $FB49   UNKNOWN  FB49            ; Unknown Fxxx instruction
$75E    $C99F   RND      V9, #9F         ; V9 = random & 9F
$760    $E269   UNKNOWN  $E269           ; Unknown Exxx instruction
$762    $A604   LD       I, $604         ; Load 604 into I
$764    $0E00   SYS      $E00            ; System call to E00
$766    $D8C7   DRW      V8, VC, #7      ; Draw 7-byte sprite at V8, VC
$768    $1900   JP       $900            ; Jump to 900
$76A    $7963   ADD      V9, #63         ; Add 99 to V9
$76C    $0AD1   SYS      $AD1            ; System call to AD1
$76E    $D83A   DRW      V8, V3, #A      ; Draw 10-byte sprite at V8, V3
$770    $9940   SNE      V9, V4          ; Skip if V9 != V4
$772    $F04D   UNKNOWN  F04D            ; Unknown Fxxx instruction
$774    $04B8   SYS      $4B8            ; System call to 4B8
$776    $A945   LD       I, $945         ; Load 945 into I
$778    $66CB   LD       V6, #CB         ; Load 203 into V6
$77A    $E441   UNKNOWN  $E441           ; Unknown Exxx instruction
$77C    $C564   RND      V5, #64         ; V5 = random & 64
$77E    $6B45   LD       VB, #45         ; Load 69 into VB
$780    $3A36   SE       VA, #36         ; Skip if VA == 54
$782    $E045   UNKNOWN  $E045           ; Unknown Exxx instruction
$784    $EDD3   UNKNOWN  $EDD3           ; Unknown Exxx instruction
$786    $DB0C   DRW      VB, V0, #C      ; Draw 12-byte sprite at VB, V0
$788    $E425   UNKNOWN  $E425           ; Unknown Exxx instruction
$78A    $5E9C   UNKNOWN  $5E9C           ; Unknown 5xxx instruction
$78C    $3C50   SE       VC, #50         ; Skip if VC == 80
$78E    $A6FF   LD       I, $6FF         ; Load 6FF into I
$790    $1F6E   JP       $F6E            ; Jump to F6E
$792    $407F   SNE      V0, #7F         ; Skip if V0 != 127
$794    $6528   LD       V5, #28         ; Load 40 into V5
$796    $CE71   RND      VE, #71         ; VE = random & 71
$798    $5D01   UNKNOWN  $5D01           ; Unknown 5xxx instruction
$79A    $00F7   SYS      $0F7            ; System call to 0F7
$79C    $63D1   LD       V3, #D1         ; Load 209 into V3
$79E    $3AFF   SE       VA, #FF         ; Skip if VA == 255
$7A0    $2759   CALL     $759            ; Call subroutine at 759
$7A2    $DCF1   DRW      VC, VF, #1      ; Draw 1-byte sprite at VC, VF
$7A4    $3104   SE       V1, #04         ; Skip if V1 == 4
$7A6    $9452   UNKNOWN  $9452           ; Unknown 9xxx instruction
$7A8    $0351   SYS      $351            ; System call to 351
$7AA    $84D8   UNKNOWN  84D8            ; Unknown 8xxx instruction
$7AC    $3536   SE       V5, #36         ; Skip if V5 == 54
$7AE    $BF5D   JP       V0, $F5D        ; Jump to V0 + F5D
$7B0    $CB29   RND      VB, #29         ; VB = random & 29
$7B2    $947C   UNKNOWN  $947C           ; Unknown 9xxx instruction
$7B4    $FE9F   UNKNOWN  FE9F            ; Unknown Fxxx instruction
$7B6    $862C   UNKNOWN  862C            ; Unknown 8xxx instruction
$7B8    $BFFD   JP       V0, $FFD        ; Jump to V0 + FFD
$7BA    $9570   SNE      V5, V7          ; Skip if V5 != V7
$7BC    $964E   UNKNOWN  $964E           ; Unknown 9xxx instruction
$7BE    $74D2   ADD      V4, #D2         ; Add 210 to V4
$7C0    $5880   SE       V8, V8          ; Skip if V8 == V8
$7C2    $15AE   JP       $5AE            ; Jump to 5AE
$7C4    $AC66   LD       I, $C66         ; Load C66 into I
$7C6    $69A1   LD       V9, #A1         ; Load 161 into V9
$7C8    $1559   JP       $559            ; Jump to 559
$7CA    $E362   UNKNOWN  $E362           ; Unknown Exxx instruction
$7CC    $2FF3   CALL     $FF3            ; Call subroutine at FF3
$7CE    $C53B   RND      V5, #3B         ; V5 = random & 3B
$7D0    $4CCC   SNE      VC, #CC         ; Skip if VC != 204
$7D2    $F317   UNKNOWN  F317            ; Unknown Fxxx instruction
$7D4    $DDBE   DRW      VD, VB, #E      ; Draw 14-byte sprite at VD, VB
$7D6    $6C51   LD       VC, #51         ; Load 81 into VC
$7D8    $7971   ADD      V9, #71         ; Add 113 to V9
$7DA    $CCAD   RND      VC, #AD         ; VC = random & AD
$7DC    $BC6A   JP       V0, $C6A        ; Jump to V0 + C6A
$7DE    $3A69   SE       VA, #69         ; Skip if VA == 105
$7E0    $2253   CALL     $253            ; Call subroutine at 253
$7E2    $7B07   ADD      VB, #07         ; Add 7 to VB
$7E4    $BFA0   JP       V0, $FA0        ; Jump to V0 + FA0
$7E6    $70A2   ADD      V0, #A2         ; Add 162 to V0
$7E8    $854B   UNKNOWN  854B            ; Unknown 8xxx instruction
$7EA    $8A0D   UNKNOWN  8A0D            ; Unknown 8xxx instruction
$7EC    $ED54   UNKNOWN  $ED54           ; Unknown Exxx instruction
$7EE    $77E9   ADD      V7, #E9         ; Add 233 to V7
$7F0    $BB1D   JP       V0, $B1D        ; Jump to V0 + B1D
$7F2    $D2F9   DRW      V2, VF, #9      ; Draw 9-byte sprite at V2, VF
$7F4    $BEF7   JP       V0, $EF7        ; Jump to V0 + EF7
$7F6    $28E5   CALL     $8E5            ; Call subroutine at 8E5
$7F8    $77F5   ADD      V7, #F5         ; Add 245 to V7
$7FA    $A0EF   LD       I, $0EF         ; Load 0EF into I
$7FC    $53EE   UNKNOWN  $53EE           ; Unknown 5xxx instruction
$7FE    $A20C   LD       I, $20C         ; Load 20C into I
$800    $09E5   SYS      $9E5            ; System call to 9E5
$802    $A961   LD       I, $961         ; Load 961 into I
$804    $EF4D   UNKNOWN  $EF4D           ; Unknown Exxx instruction
$806    $AFEB   LD       I, $FEB         ; Load FEB into I
$808    $DE37   DRW      VE, V3, #7      ; Draw 7-byte sprite at VE, V3
$80A    $E647   UNKNOWN  $E647           ; Unknown Exxx instruction
$80C    $8568   UNKNOWN  8568            ; Unknown 8xxx instruction
$80E    $87DC   UNKNOWN  87DC            ; Unknown 8xxx instruction
$810    $8BD7   SUBN     VB, VD          ; VB = VD - VB, VF = !borrow
$812    $5861   UNKNOWN  $5861           ; Unknown 5xxx instruction
$814    $271D   CALL     $71D            ; Call subroutine at 71D
$816    $614C   LD       V1, #4C         ; Load 76 into V1
$818    $0D90   SYS      $D90            ; System call to D90
$81A    $FF4B   UNKNOWN  FF4B            ; Unknown Fxxx instruction
$81C    $2E1D   CALL     $E1D            ; Call subroutine at E1D
$81E    $B01E   JP       V0, $01E        ; Jump to V0 + 01E
$820    $8357   SUBN     V3, V5          ; V3 = V5 - V3, VF = !borrow
$822    $BBA3   JP       V0, $BA3        ; Jump to V0 + BA3
$824    $F4D7   UNKNOWN  F4D7            ; Unknown Fxxx instruction
$826    $2571   CALL     $571            ; Call subroutine at 571
$828    $6C88   LD       VC, #88         ; Load 136 into VC
$82A    $84EA   UNKNOWN  84EA            ; Unknown 8xxx instruction
$82C    $0FB3   SYS      $FB3            ; System call to FB3
$82E    $E4DA   UNKNOWN  $E4DA           ; Unknown Exxx instruction
$830    $11D9   JP       $1D9            ; Jump to 1D9
$832    $2BA6   CALL     $BA6            ; Call subroutine at BA6
$834    $B4EC   JP       V0, $4EC        ; Jump to V0 + 4EC
$836    $8679   UNKNOWN  8679            ; Unknown 8xxx instruction
$838    $1CFA   JP       $CFA            ; Jump to CFA
$83A    $6D83   LD       VD, #83         ; Load 131 into VD
$83C    $612B   LD       V1, #2B         ; Load 43 into V1
$83E    $C4D1   RND      V4, #D1         ; V4 = random & D1
$840    $C91B   RND      V9, #1B         ; V9 = random & 1B
$842    $4973   SNE      V9, #73         ; Skip if V9 != 115
$844    $D086   DRW      V0, V8, #6      ; Draw 6-byte sprite at V0, V8
$846    $C628   RND      V6, #28         ; V6 = random & 28
$848    $6FB3   LD       VF, #B3         ; Load 179 into VF
$84A    $FDF0   UNKNOWN  FDF0            ; Unknown Fxxx instruction
$84C    $C0F9   RND      V0, #F9         ; V0 = random & F9
$84E    $F5C3   UNKNOWN  F5C3            ; Unknown Fxxx instruction
$850    $289F   CALL     $89F            ; Call subroutine at 89F
$852    $E876   UNKNOWN  $E876           ; Unknown Exxx instruction
$854    $13E6   JP       $3E6            ; Jump to 3E6
$856    $044F   SYS      $44F            ; System call to 44F
$858    $C952   RND      V9, #52         ; V9 = random & 52
$85A    $0E65   SYS      $E65            ; System call to E65
$85C    $6D02   LD       VD, #02         ; Load 2 into VD
$85E    $37AA   SE       V7, #AA         ; Skip if V7 == 170
$860    $BB88   JP       V0, $B88        ; Jump to V0 + B88
$862    $AB0E   LD       I, $B0E         ; Load B0E into I
$864    $DE9F   DRW      VE, V9, #F      ; Draw 15-byte sprite at VE, V9
$866    $32AD   SE       V2, #AD         ; Skip if V2 == 173
$868    $ACE0   LD       I, $CE0         ; Load CE0 into I
$86A    $8C27   SUBN     VC, V2          ; VC = V2 - VC, VF = !borrow
$86C    $A3CC   LD       I, $3CC         ; Load 3CC into I
$86E    $FE33   LD       B, VE           ; Store BCD of VE at I, I+1, I+2
$870    $822F   UNKNOWN  822F            ; Unknown 8xxx instruction
$872    $409D   SNE      V0, #9D         ; Skip if V0 != 157
$874    $088B   SYS      $88B            ; System call to 88B
$876    $43E6   SNE      V3, #E6         ; Skip if V3 != 230
$878    $D74B   DRW      V7, V4, #B      ; Draw 11-byte sprite at V7, V4
$87A    $183E   JP       $83E            ; Jump to 83E
$87C    $41D2   SNE      V1, #D2         ; Skip if V1 != 210
$87E    $B16F   JP       V0, $16F        ; Jump to V0 + 16F
$880    $A6D2   LD       I, $6D2         ; Load 6D2 into I
$882    $77BA   ADD      V7, #BA         ; Add 186 to V7
$884    $4293   SNE      V2, #93         ; Skip if V2 != 147
$886    $74F4   ADD      V4, #F4         ; Add 244 to V4
$888    $7674   ADD      V6, #74         ; Add 116 to V6
$88A    $526E   UNKNOWN  $526E           ; Unknown 5xxx instruction
$88C    $07C6   SYS      $7C6            ; System call to 7C6
$88E    $316D   SE       V1, #6D         ; Skip if V1 == 109
$890    $2332   CALL     $332            ; Call subroutine at 332
$892    $EB48   UNKNOWN  $EB48           ; Unknown Exxx instruction
$894    $BA25   JP       V0, $A25        ; Jump to V0 + A25
$896    $B7EA   JP       V0, $7EA        ; Jump to V0 + 7EA
$898    $DD8E   DRW      VD, V8, #E      ; Draw 14-byte sprite at VD, V8
$89A    $4EF2   SNE      VE, #F2         ; Skip if VE != 242
$89C    $A85A   LD       I, $85A         ; Load 85A into I
$89E    $C560   RND      V5, #60         ; V5 = random & 60
$8A0    $CCB1   RND      VC, #B1         ; VC = random & B1
$8A2    $7826   ADD      V8, #26         ; Add 38 to V8
$8A4    $4E98   SNE      VE, #98         ; Skip if VE != 152
$8A6    $3DF3   SE       VD, #F3         ; Skip if VD == 243
$8A8    $AFCA   LD       I, $FCA         ; Load FCA into I
$8AA    $0C70   SYS      $C70            ; System call to C70
$8AC    $0C8E   SYS      $C8E            ; System call to C8E
$8AE    $23E7   CALL     $3E7            ; Call subroutine at 3E7
$8B0    $4EFD   SNE      VE, #FD         ; Skip if VE != 253
$8B2    $33B7   SE       V3, #B7         ; Skip if V3 == 183
$8B4    $434C   SNE      V3, #4C         ; Skip if V3 != 76
$8B6    $8978   UNKNOWN  8978            ; Unknown 8xxx instruction
$8B8    $4C9A   SNE      VC, #9A         ; Skip if VC != 154
$8BA    $F8FE   UNKNOWN  F8FE            ; Unknown Fxxx instruction
$8BC    $C99D   RND      V9, #9D         ; V9 = random & 9D
$8BE    $A12F   LD       I, $12F         ; Load 12F into I
$8C0    $0196   SYS      $196            ; System call to 196
$8C2    $5770   SE       V7, V7          ; Skip if V7 == V7
$8C4    $5399   UNKNOWN  $5399           ; Unknown 5xxx instruction
$8C6    $0566   SYS      $566            ; System call to 566
$8C8    $F83F   UNKNOWN  F83F            ; Unknown Fxxx instruction
$8CA    $1624   JP       $624            ; Jump to 624
$8CC    $844D   UNKNOWN  844D            ; Unknown 8xxx instruction
$8CE    $C735   RND      V7, #35         ; V7 = random & 35
$8D0    $9680   SNE      V6, V8          ; Skip if V6 != V8
$8D2    $FB89   UNKNOWN  FB89            ; Unknown Fxxx instruction
$8D4    $3A63   SE       VA, #63         ; Skip if VA == 99
$8D6    $AFEE   LD       I, $FEE         ; Load FEE into I
$8D8    $13DD   JP       $3DD            ; Jump to 3DD
$8DA    $CD1F   RND      VD, #1F         ; VD = random & 1F
$8DC    $3ECB   SE       VE, #CB         ; Skip if VE == 203
$8DE    $3594   SE       V5, #94         ; Skip if V5 == 148
$8E0    $259F   CALL     $59F            ; Call subroutine at 59F
$8E2    $F8B7   UNKNOWN  F8B7            ; Unknown Fxxx instruction
$8E4    $D66F   DRW      V6, V6, #F      ; Draw 15-byte sprite at V6, V6
$8E6    $645F   LD       V4, #5F         ; Load 95 into V4
$8E8    $452A   SNE      V5, #2A         ; Skip if V5 != 42
$8EA    $9C02   UNKNOWN  $9C02           ; Unknown 9xxx instruction
$8EC    $36BD   SE       V6, #BD         ; Skip if V6 == 189
$8EE    $DA81   DRW      VA, V8, #1      ; Draw 1-byte sprite at VA, V8
$8F0    $10F0   JP       $0F0            ; Jump to 0F0
$8F2    $4A9B   SNE      VA, #9B         ; Skip if VA != 155
$8F4    $BDE7   JP       V0, $DE7        ; Jump to V0 + DE7
$8F6    $7CC1   ADD      VC, #C1         ; Add 193 to VC
$8F8    $94D8   UNKNOWN  $94D8           ; Unknown 9xxx instruction
$8FA    $D86C   DRW      V8, V6, #C      ; Draw 12-byte sprite at V8, V6
$8FC    $07B0   SYS      $7B0            ; System call to 7B0
$8FE    $7CFF   ADD      VC, #FF         ; Add 255 to VC
$900    $C8E4   RND      V8, #E4         ; V8 = random & E4
$902    $A4A9   LD       I, $4A9         ; Load 4A9 into I
$904    $0362   SYS      $362            ; System call to 362
$906    $CE74   RND      VE, #74         ; VE = random & 74
$908    $C078   RND      V0, #78         ; V0 = random & 78
$90A    $6931   LD       V9, #31         ; Load 49 into V9
$90C    $759D   ADD      V5, #9D         ; Add 157 to V5
$90E    $53AD   UNKNOWN  $53AD           ; Unknown 5xxx instruction
$910    $7E26   ADD      VE, #26         ; Add 38 to VE
$912    $62C6   LD       V2, #C6         ; Load 198 into V2
$914    $DB56   DRW      VB, V5, #6      ; Draw 6-byte sprite at VB, V5
$916    $D0F9   DRW      V0, VF, #9      ; Draw 9-byte sprite at V0, VF
$918    $439A   SNE      V3, #9A         ; Skip if V3 != 154
$91A    $A63F   LD       I, $63F         ; Load 63F into I
$91C    $C647   RND      V6, #47         ; V6 = random & 47
$91E    $3E0B   SE       VE, #0B         ; Skip if VE == 11
$920    $EFC9   UNKNOWN  $EFC9           ; Unknown Exxx instruction
$922    $F257   UNKNOWN  F257            ; Unknown Fxxx instruction
$924    $26CB   CALL     $6CB            ; Call subroutine at 6CB
$926    $C42B   RND      V4, #2B         ; V4 = random & 2B
$928    $AFA2   LD       I, $FA2         ; Load FA2 into I
$92A    $22B0   CALL     $2B0            ; Call subroutine at 2B0
$92C    $6844   LD       V8, #44         ; Load 68 into V8
$92E    $798D   ADD      V9, #8D         ; Add 141 to V9
$930    $5F9E   UNKNOWN  $5F9E           ; Unknown 5xxx instruction
$932    $6A3A   LD       VA, #3A         ; Load 58 into VA
$934    $3EA8   SE       VE, #A8         ; Skip if VE == 168
$936    $663A   LD       V6, #3A         ; Load 58 into V6
$938    $2485   CALL     $485            ; Call subroutine at 485
$93A    $EA53   UNKNOWN  $EA53           ; Unknown Exxx instruction
$93C    $134E   JP       $34E            ; Jump to 34E
$93E    $DA13   DRW      VA, V1, #3      ; Draw 3-byte sprite at VA, V1
$940    $B17F   JP       V0, $17F        ; Jump to V0 + 17F
$942    $246F   CALL     $46F            ; Call subroutine at 46F
$944    $5501   UNKNOWN  $5501           ; Unknown 5xxx instruction
$946    $212B   CALL     $12B            ; Call subroutine at 12B
$948    $99E4   UNKNOWN  $99E4           ; Unknown 9xxx instruction
$94A    $C808   RND      V8, #08         ; V8 = random & 08
$94C    $F5C1   UNKNOWN  F5C1            ; Unknown Fxxx instruction
$94E    $9565   UNKNOWN  $9565           ; Unknown 9xxx instruction
$950    $86CB   UNKNOWN  86CB            ; Unknown 8xxx instruction
$952    $7F7F   ADD      VF, #7F         ; Add 127 to VF
$954    $F57A   UNKNOWN  F57A            ; Unknown Fxxx instruction
$956    $0353   SYS      $353            ; System call to 353
$958    $17A9   JP       $7A9            ; Jump to 7A9
$95A    $6166   LD       V1, #66         ; Load 102 into V1
$95C    $B5CD   JP       V0, $5CD        ; Jump to V0 + 5CD
$95E    $C9DB   RND      V9, #DB         ; V9 = random & DB
$960    $278C   CALL     $78C            ; Call subroutine at 78C
$962    $3C28   SE       VC, #28         ; Skip if VC == 40
$964    $9A48   UNKNOWN  $9A48           ; Unknown 9xxx instruction
$966    $4F3A   SNE      VF, #3A         ; Skip if VF != 58
$968    $F9D0   UNKNOWN  F9D0            ; Unknown Fxxx instruction
$96A    $D2FE   DRW      V2, VF, #E      ; Draw 14-byte sprite at V2, VF
$96C    $D607   DRW      V6, V0, #7      ; Draw 7-byte sprite at V6, V0
$96E    $5A98   UNKNOWN  $5A98           ; Unknown 5xxx instruction
$970    $F924   UNKNOWN  F924            ; Unknown Fxxx instruction
$972    $0778   SYS      $778            ; System call to 778
$974    $221E   CALL     $21E            ; Call subroutine at 21E
$976    $377A   SE       V7, #7A         ; Skip if V7 == 122
$978    $A2FB   LD       I, $2FB         ; Load 2FB into I
$97A    $9646   UNKNOWN  $9646           ; Unknown 9xxx instruction
$97C    $C1FC   RND      V1, #FC         ; V1 = random & FC
$97E    $9E6E   UNKNOWN  $9E6E           ; Unknown 9xxx instruction
$980    $6742   LD       V7, #42         ; Load 66 into V7
$982    $6678   LD       V6, #78         ; Load 120 into V6
$984    $E125   UNKNOWN  $E125           ; Unknown Exxx instruction
$986    $DB93   DRW      VB, V9, #3      ; Draw 3-byte sprite at VB, V9
$988    $5BD6   UNKNOWN  $5BD6           ; Unknown 5xxx instruction
$98A    $91B7   UNKNOWN  $91B7           ; Unknown 9xxx instruction
$98C    $4D73   SNE      VD, #73         ; Skip if VD != 115
$98E    $0AD3   SYS      $AD3            ; System call to AD3
$990    $F3FB   UNKNOWN  F3FB            ; Unknown Fxxx instruction
$992    $DA9E   DRW      VA, V9, #E      ; Draw 14-byte sprite at VA, V9
$994    $9656   UNKNOWN  $9656           ; Unknown 9xxx instruction
$996    $CDD3   RND      VD, #D3         ; VD = random & D3
$998    $FC38   UNKNOWN  FC38            ; Unknown Fxxx instruction
$99A    $8208   UNKNOWN  8208            ; Unknown 8xxx instruction
$99C    $A699   LD       I, $699         ; Load 699 into I
$99E    $6C90   LD       VC, #90         ; Load 144 into VC
$9A0    $705E   ADD      V0, #5E         ; Add 94 to V0
$9A2    $FC4E   UNKNOWN  FC4E            ; Unknown Fxxx instruction
$9A4    $E8A7   UNKNOWN  $E8A7           ; Unknown Exxx instruction
$9A6    $9EAD   UNKNOWN  $9EAD           ; Unknown 9xxx instruction
$9A8    $90DD   UNKNOWN  $90DD           ; Unknown 9xxx instruction
$9AA    $98F8   UNKNOWN  $98F8           ; Unknown 9xxx instruction
$9AC    $0311   SYS      $311            ; System call to 311
$9AE    $7469   ADD      V4, #69         ; Add 105 to V4
$9B0    $E117   UNKNOWN  $E117           ; Unknown Exxx instruction
$9B2    $640B   LD       V4, #0B         ; Load 11 into V4
$9B4    $C909   RND      V9, #09         ; V9 = random & 09
$9B6    $ECBB   UNKNOWN  $ECBB           ; Unknown Exxx instruction
$9B8    $EB88   UNKNOWN  $EB88           ; Unknown Exxx instruction
$9BA    $BFCC   JP       V0, $FCC        ; Jump to V0 + FCC
$9BC    $9A5B   UNKNOWN  $9A5B           ; Unknown 9xxx instruction
$9BE    $6A77   LD       VA, #77         ; Load 119 into VA
$9C0    $01A1   SYS      $1A1            ; System call to 1A1
$9C2    $041F   SYS      $41F            ; System call to 41F
$9C4    $E03E   UNKNOWN  $E03E           ; Unknown Exxx instruction
$9C6    $D317   DRW      V3, V1, #7      ; Draw 7-byte sprite at V3, V1
$9C8    $E189   UNKNOWN  $E189           ; Unknown Exxx instruction
$9CA    $76A0   ADD      V6, #A0         ; Add 160 to V6
$9CC    $46E8   SNE      V6, #E8         ; Skip if V6 != 232
$9CE    $A114   LD       I, $114         ; Load 114 into I
$9D0    $C238   RND      V2, #38         ; V2 = random & 38
$9D2    $9E03   UNKNOWN  $9E03           ; Unknown 9xxx instruction
$9D4    $DBC3   DRW      VB, VC, #3      ; Draw 3-byte sprite at VB, VC
$9D6    $F081   UNKNOWN  F081            ; Unknown Fxxx instruction
$9D8    $2281   CALL     $281            ; Call subroutine at 281
$9DA    $E876   UNKNOWN  $E876           ; Unknown Exxx instruction
$9DC    $513E   UNKNOWN  $513E           ; Unknown 5xxx instruction
$9DE    $3397   SE       V3, #97         ; Skip if V3 == 151
$9E0    $F14B   UNKNOWN  F14B            ; Unknown Fxxx instruction
$9E2    $1F34   JP       $F34            ; Jump to F34
$9E4    $F7DF   UNKNOWN  F7DF            ; Unknown Fxxx instruction
$9E6    $5CD7   UNKNOWN  $5CD7           ; Unknown 5xxx instruction
$9E8    $57E0   SE       V7, VE          ; Skip if V7 == VE
$9EA    $59E3   UNKNOWN  $59E3           ; Unknown 5xxx instruction
$9EC    $5A97   UNKNOWN  $5A97           ; Unknown 5xxx instruction
$9EE    $E073   UNKNOWN  $E073           ; Unknown Exxx instruction
$9F0    $E754   UNKNOWN  $E754           ; Unknown Exxx instruction
$9F2    $99B4   UNKNOWN  $99B4           ; Unknown 9xxx instruction
$9F4    $5A24   UNKNOWN  $5A24           ; Unknown 5xxx instruction
$9F6    $263C   CALL     $63C            ; Call subroutine at 63C
$9F8    $14F1   JP       $4F1            ; Jump to 4F1
$9FA    $15F2   JP       $5F2            ; Jump to 5F2
$9FC    $5297   UNKNOWN  $5297           ; Unknown 5xxx instruction
$9FE    $939C   UNKNOWN  $939C           ; Unknown 9xxx instruction
$A00    $8895   SUB      V8, V9          ; V8 -= V9, VF = !borrow
$A02    $3001   SE       V0, #01         ; Skip if V0 == 1
$A04    $C9CC   RND      V9, #CC         ; V9 = random & CC
$A06    $2554   CALL     $554            ; Call subroutine at 554
$A08    $1199   JP       $199            ; Jump to 199
$A0A    $3214   SE       V2, #14         ; Skip if V2 == 20
$A0C    $B6CD   JP       V0, $6CD        ; Jump to V0 + 6CD
$A0E    $46A0   SNE      V6, #A0         ; Skip if V6 != 160
$A10    $97C5   UNKNOWN  $97C5           ; Unknown 9xxx instruction
$A12    $FBCE   UNKNOWN  FBCE            ; Unknown Fxxx instruction
$A14    $228B   CALL     $28B            ; Call subroutine at 28B
$A16    $0D54   SYS      $D54            ; System call to D54
$A18    $D1D7   DRW      V1, VD, #7      ; Draw 7-byte sprite at V1, VD
$A1A    $E836   UNKNOWN  $E836           ; Unknown Exxx instruction
$A1C    $8D9E   SHL      VD              ; VD <<= 1, VF = MSB
$A1E    $2992   CALL     $992            ; Call subroutine at 992
$A20    $7348   ADD      V3, #48         ; Add 72 to V3
$A22    $EC54   UNKNOWN  $EC54           ; Unknown Exxx instruction
$A24    $5C84   UNKNOWN  $5C84           ; Unknown 5xxx instruction
$A26    $C31C   RND      V3, #1C         ; V3 = random & 1C
$A28    $CDF6   RND      VD, #F6         ; VD = random & F6
$A2A    $DD66   DRW      VD, V6, #6      ; Draw 6-byte sprite at VD, V6
$A2C    $442D   SNE      V4, #2D         ; Skip if V4 != 45
$A2E    $46DF   SNE      V6, #DF         ; Skip if V6 != 223
$A30    $6D08   LD       VD, #08         ; Load 8 into VD
$A32    $B3FB   JP       V0, $3FB        ; Jump to V0 + 3FB
$A34    $00BA   SYS      $0BA            ; System call to 0BA
$A36    $1959   JP       $959            ; Jump to 959
$A38    $EB69   UNKNOWN  $EB69           ; Unknown Exxx instruction
$A3A    $C606   RND      V6, #06         ; V6 = random & 06
$A3C    $3D47   SE       VD, #47         ; Skip if VD == 71
$A3E    $AF68   LD       I, $F68         ; Load F68 into I
$A40    $373B   SE       V7, #3B         ; Skip if V7 == 59
$A42    $D19C   DRW      V1, V9, #C      ; Draw 12-byte sprite at V1, V9
$A44    $609A   LD       V0, #9A         ; Load 154 into V0
$A46    $912A   UNKNOWN  $912A           ; Unknown 9xxx instruction
$A48    $4072   SNE      V0, #72         ; Skip if V0 != 114
$A4A    $D5A1   DRW      V5, VA, #1      ; Draw 1-byte sprite at V5, VA
$A4C    $6B86   LD       VB, #86         ; Load 134 into VB
$A4E    $9F72   UNKNOWN  $9F72           ; Unknown 9xxx instruction
$A50    $CC18   RND      VC, #18         ; VC = random & 18
$A52    $DB8E   DRW      VB, V8, #E      ; Draw 14-byte sprite at VB, V8
$A54    $9E31   UNKNOWN  $9E31           ; Unknown 9xxx instruction
$A56    $47C2   SNE      V7, #C2         ; Skip if V7 != 194
$A58    $4D85   SNE      VD, #85         ; Skip if VD != 133
$A5A    $AF12   LD       I, $F12         ; Load F12 into I
$A5C    $1929   JP       $929            ; Jump to 929
$A5E    $8F17   SUBN     VF, V1          ; VF = V1 - VF, VF = !borrow
$A60    $F665   LD       V6, [I]         ; Load V0-V6 from I
$A62    $0427   SYS      $427            ; System call to 427
$A64    $8E3A   UNKNOWN  8E3A            ; Unknown 8xxx instruction
$A66    $9FE6   UNKNOWN  $9FE6           ; Unknown 9xxx instruction
$A68    $DD3F   DRW      VD, V3, #F      ; Draw 15-byte sprite at VD, V3
$A6A    $AA50   LD       I, $A50         ; Load A50 into I
$A6C    $D56A   DRW      V5, V6, #A      ; Draw 10-byte sprite at V5, V6
$A6E    $4101   SNE      V1, #01         ; Skip if V1 != 1
$A70    $9836   UNKNOWN  $9836           ; Unknown 9xxx instruction
$A72    $4261   SNE      V2, #61         ; Skip if V2 != 97
$A74    $2561   CALL     $561            ; Call subroutine at 561
$A76    $15F9   JP       $5F9            ; Jump to 5F9
$A78    $3D8C   SE       VD, #8C         ; Skip if VD == 140
$A7A    $5C16   UNKNOWN  $5C16           ; Unknown 5xxx instruction
$A7C    $6181   LD       V1, #81         ; Load 129 into V1
$A7E    $1849   JP       $849            ; Jump to 849
$A80    $A06C   LD       I, $06C         ; Load 06C into I
$A82    $BDA8   JP       V0, $DA8        ; Jump to V0 + DA8
$A84    $FE53   UNKNOWN  FE53            ; Unknown Fxxx instruction
$A86    $B083   JP       V0, $083        ; Jump to V0 + 083
$A88    $B8FE   JP       V0, $8FE        ; Jump to V0 + 8FE
$A8A    $CEF9   RND      VE, #F9         ; VE = random & F9
$A8C    $5F7A   UNKNOWN  $5F7A           ; Unknown 5xxx instruction
$A8E    $FB35   UNKNOWN  FB35            ; Unknown Fxxx instruction
$A90    $B258   JP       V0, $258        ; Jump to V0 + 258
$A92    $A47A   LD       I, $47A         ; Load 47A into I
$A94    $775E   ADD      V7, #5E         ; Add 94 to V7
$A96    $81B8   UNKNOWN  81B8            ; Unknown 8xxx instruction
$A98    $BD5B   JP       V0, $D5B        ; Jump to V0 + D5B
$A9A    $7DD0   ADD      VD, #D0         ; Add 208 to VD
$A9C    $0FFF   SYS      $FFF            ; System call to FFF
$A9E    $38BE   SE       V8, #BE         ; Skip if V8 == 190
$AA0    $1F8E   JP       $F8E            ; Jump to F8E
$AA2    $D068   DRW      V0, V6, #8      ; Draw 8-byte sprite at V0, V6
$AA4    $334B   SE       V3, #4B         ; Skip if V3 == 75
$AA6    $641C   LD       V4, #1C         ; Load 28 into V4
$AA8    $B816   JP       V0, $816        ; Jump to V0 + 816
$AAA    $48AD   SNE      V8, #AD         ; Skip if V8 != 173
$AAC    $6DB2   LD       VD, #B2         ; Load 178 into VD
$AAE    $6A22   LD       VA, #22         ; Load 34 into VA
$AB0    $45D0   SNE      V5, #D0         ; Skip if V5 != 208
$AB2    $7012   ADD      V0, #12         ; Add 18 to V0
$AB4    $4DE3   SNE      VD, #E3         ; Skip if VD != 227
$AB6    $B064   JP       V0, $064        ; Jump to V0 + 064
$AB8    $A922   LD       I, $922         ; Load 922 into I
$ABA    $6F52   LD       VF, #52         ; Load 82 into VF
$ABC    $EDCF   UNKNOWN  $EDCF           ; Unknown Exxx instruction
$ABE    $7A30   ADD      VA, #30         ; Add 48 to VA
$AC0    $53DA   UNKNOWN  $53DA           ; Unknown 5xxx instruction
$AC2    $903E   UNKNOWN  $903E           ; Unknown 9xxx instruction
$AC4    $B2FC   JP       V0, $2FC        ; Jump to V0 + 2FC
$AC6    $3053   SE       V0, #53         ; Skip if V0 == 83
$AC8    $3944   SE       V9, #44         ; Skip if V9 == 68
$ACA    $8C20   LD       VC, V2          ; VC = V2
$ACC    $CB75   RND      VB, #75         ; VB = random & 75
$ACE    $705B   ADD      V0, #5B         ; Add 91 to V0
$AD0    $D48D   DRW      V4, V8, #D      ; Draw 13-byte sprite at V4, V8
$AD2    $E334   UNKNOWN  $E334           ; Unknown Exxx instruction
$AD4    $0798   SYS      $798            ; System call to 798
$AD6    $9209   UNKNOWN  $9209           ; Unknown 9xxx instruction
$AD8    $9AD4   UNKNOWN  $9AD4           ; Unknown 9xxx instruction
$ADA    $AB58   LD       I, $B58         ; Load B58 into I
$ADC    $3DD2   SE       VD, #D2         ; Skip if VD == 210
$ADE    $0AFD   SYS      $AFD            ; System call to AFD
$AE0    $042C   SYS      $42C            ; System call to 42C
$AE2    $68D6   LD       V8, #D6         ; Load 214 into V8
$AE4    $B36F   JP       V0, $36F        ; Jump to V0 + 36F
$AE6    $D8E1   DRW      V8, VE, #1      ; Draw 1-byte sprite at V8, VE
$AE8    $8798   UNKNOWN  8798            ; Unknown 8xxx instruction
$AEA    $4844   SNE      V8, #44         ; Skip if V8 != 68
$AEC    $357F   SE       V5, #7F         ; Skip if V5 == 127
$AEE    $C0E7   RND      V0, #E7         ; V0 = random & E7
$AF0    $613A   LD       V1, #3A         ; Load 58 into V1
$AF2    $345C   SE       V4, #5C         ; Skip if V4 == 92
$AF4    $8E93   XOR      VE, V9          ; VE ^= V9
$AF6    $590D   UNKNOWN  $590D           ; Unknown 5xxx instruction
$AF8    $F1B7   UNKNOWN  F1B7            ; Unknown Fxxx instruction
$AFA    $80E7   SUBN     V0, VE          ; V0 = VE - V0, VF = !borrow
$AFC    $B26D   JP       V0, $26D        ; Jump to V0 + 26D
$AFE    $50B1   UNKNOWN  $50B1           ; Unknown 5xxx instruction
$B00    $5E3B   UNKNOWN  $5E3B           ; Unknown 5xxx instruction
$B02    $E273   UNKNOWN  $E273           ; Unknown Exxx instruction
$B04    $0645   SYS      $645            ; System call to 645
$B06    $920F   UNKNOWN  $920F           ; Unknown 9xxx instruction
$B08    $16F0   JP       $6F0            ; Jump to 6F0
$B0A    $032B   SYS      $32B            ; System call to 32B
$B0C    $5EEB   UNKNOWN  $5EEB           ; Unknown 5xxx instruction
$B0E    $EC80   UNKNOWN  $EC80           ; Unknown Exxx instruction
$B10    $9E5E   UNKNOWN  $9E5E           ; Unknown 9xxx instruction
$B12    $420A   SNE      V2, #0A         ; Skip if V2 != 10
$B14    $1176   JP       $176            ; Jump to 176
$B16    $5B2B   UNKNOWN  $5B2B           ; Unknown 5xxx instruction
$B18    $32F1   SE       V2, #F1         ; Skip if V2 == 241
$B1A    $F79E   UNKNOWN  F79E            ; Unknown Fxxx instruction
$B1C    $372F   SE       V7, #2F         ; Skip if V7 == 47
$B1E    $762D   ADD      V6, #2D         ; Add 45 to V6
$B20    $C6F4   RND      V6, #F4         ; V6 = random & F4
$B22    $C05F   RND      V0, #5F         ; V0 = random & 5F
$B24    $2736   CALL     $736            ; Call subroutine at 736
$B26    $9665   UNKNOWN  $9665           ; Unknown 9xxx instruction
$B28    $16D8   JP       $6D8            ; Jump to 6D8
$B2A    $4971   SNE      V9, #71         ; Skip if V9 != 113
$B2C    $2F39   CALL     $F39            ; Call subroutine at F39
$B2E    $DBC6   DRW      VB, VC, #6      ; Draw 6-byte sprite at VB, VC
$B30    $6AF3   LD       VA, #F3         ; Load 243 into VA
$B32    $3BF6   SE       VB, #F6         ; Skip if VB == 246
$B34    $5A56   UNKNOWN  $5A56           ; Unknown 5xxx instruction
$B36    $7DB1   ADD      VD, #B1         ; Add 177 to VD
$B38    $6F9C   LD       VF, #9C         ; Load 156 into VF
$B3A    $3853   SE       V8, #53         ; Skip if V8 == 83
$B3C    $9A5D   UNKNOWN  $9A5D           ; Unknown 9xxx instruction
$B3E    $D18D   DRW      V1, V8, #D      ; Draw 13-byte sprite at V1, V8
$B40    $1EA5   JP       $EA5            ; Jump to EA5
$B42    $D682   DRW      V6, V8, #2      ; Draw 2-byte sprite at V6, V8
$B44    $C924   RND      V9, #24         ; V9 = random & 24
$B46    $9D7B   UNKNOWN  $9D7B           ; Unknown 9xxx instruction
$B48    $992A   UNKNOWN  $992A           ; Unknown 9xxx instruction
$B4A    $A79E   LD       I, $79E         ; Load 79E into I
$B4C    $A422   LD       I, $422         ; Load 422 into I
$B4E    $7176   ADD      V1, #76         ; Add 118 to V1
$B50    $7E06   ADD      VE, #06         ; Add 6 to VE
$B52    $C1C4   RND      V1, #C4         ; V1 = random & C4
$B54    $BD14   JP       V0, $D14        ; Jump to V0 + D14
$B56    $DAF9   DRW      VA, VF, #9      ; Draw 9-byte sprite at VA, VF
$B58    $2251   CALL     $251            ; Call subroutine at 251
$B5A    $982E   UNKNOWN  $982E           ; Unknown 9xxx instruction
$B5C    $088A   SYS      $88A            ; System call to 88A
$B5E    $D2EA   DRW      V2, VE, #A      ; Draw 10-byte sprite at V2, VE
$B60    $5947   UNKNOWN  $5947           ; Unknown 5xxx instruction
$B62    $0152   SYS      $152            ; System call to 152
$B64    $CBA2   RND      VB, #A2         ; VB = random & A2
$B66    $0955   SYS      $955            ; System call to 955
$B68    $93BE   UNKNOWN  $93BE           ; Unknown 9xxx instruction
$B6A    $E126   UNKNOWN  $E126           ; Unknown Exxx instruction
$B6C    $900E   UNKNOWN  $900E           ; Unknown 9xxx instruction
$B6E    $4F3D   SNE      VF, #3D         ; Skip if VF != 61
$B70    $E1FB   UNKNOWN  $E1FB           ; Unknown Exxx instruction
$B72    $56A6   UNKNOWN  $56A6           ; Unknown 5xxx instruction
$B74    $B242   JP       V0, $242        ; Jump to V0 + 242
$B76    $C24A   RND      V2, #4A         ; V2 = random & 4A
$B78    $7DBB   ADD      VD, #BB         ; Add 187 to VD
$B7A    $4FB6   SNE      VF, #B6         ; Skip if VF != 182
$B7C    $5D66   UNKNOWN  $5D66           ; Unknown 5xxx instruction
$B7E    $C574   RND      V5, #74         ; V5 = random & 74
$B80    $3E2A   SE       VE, #2A         ; Skip if VE == 42
$B82    $83C0   LD       V3, VC          ; V3 = VC
$B84    $05AA   SYS      $5AA            ; System call to 5AA
$B86    $2B2B   CALL     $B2B            ; Call subroutine at B2B
$B88    $03C4   SYS      $3C4            ; System call to 3C4
$B8A    $D025   DRW      V0, V2, #5      ; Draw 5-byte sprite at V0, V2
$B8C    $F104   UNKNOWN  F104            ; Unknown Fxxx instruction
$B8E    $3503   SE       V5, #03         ; Skip if V5 == 3
$B90    $7022   ADD      V0, #22         ; Add 34 to V0
$B92    $A7D2   LD       I, $7D2         ; Load 7D2 into I
$B94    $13AC   JP       $3AC            ; Jump to 3AC
$B96    $DAC6   DRW      VA, VC, #6      ; Draw 6-byte sprite at VA, VC
$B98    $A9E2   LD       I, $9E2         ; Load 9E2 into I
$B9A    $7A09   ADD      VA, #09         ; Add 9 to VA
$B9C    $48B6   SNE      V8, #B6         ; Skip if V8 != 182
$B9E    $4F3F   SNE      VF, #3F         ; Skip if VF != 63
$BA0    $2E9C   CALL     $E9C            ; Call subroutine at E9C
$BA2    $C2BC   RND      V2, #BC         ; V2 = random & BC
$BA4    $061F   SYS      $61F            ; System call to 61F
$BA6    $B625   JP       V0, $625        ; Jump to V0 + 625
$BA8    $ED3E   UNKNOWN  $ED3E           ; Unknown Exxx instruction
$BAA    $62A4   LD       V2, #A4         ; Load 164 into V2
$BAC    $A533   LD       I, $533         ; Load 533 into I
$BAE    $065A   SYS      $65A            ; System call to 65A
$BB0    $0AE2   SYS      $AE2            ; System call to AE2
$BB2    $2F5D   CALL     $F5D            ; Call subroutine at F5D
$BB4    $6CF8   LD       VC, #F8         ; Load 248 into VC
$BB6    $6ED7   LD       VE, #D7         ; Load 215 into VE
$BB8    $C1F8   RND      V1, #F8         ; V1 = random & F8
$BBA    $86DA   UNKNOWN  86DA            ; Unknown 8xxx instruction
$BBC    $21F0   CALL     $1F0            ; Call subroutine at 1F0
$BBE    $5155   UNKNOWN  $5155           ; Unknown 5xxx instruction
$BC0    $4B93   SNE      VB, #93         ; Skip if VB != 147
$BC2    $3426   SE       V4, #26         ; Skip if V4 == 38
$BC4    $7BEA   ADD      VB, #EA         ; Add 234 to VB
$BC6    $CA86   RND      VA, #86         ; VA = random & 86
$BC8    $8511   OR       V5, V1          ; V5 |= V1
$BCA    $96EF   UNKNOWN  $96EF           ; Unknown 9xxx instruction
$BCC    $98DB   UNKNOWN  $98DB           ; Unknown 9xxx instruction
$BCE    $1D6F   JP       $D6F            ; Jump to D6F
$BD0    $D2AE   DRW      V2, VA, #E      ; Draw 14-byte sprite at V2, VA
$BD2    $1ED1   JP       $ED1            ; Jump to ED1
$BD4    $EB23   UNKNOWN  $EB23           ; Unknown Exxx instruction
$BD6    $2C3D   CALL     $C3D            ; Call subroutine at C3D
$BD8    $54BC   UNKNOWN  $54BC           ; Unknown 5xxx instruction
$BDA    $BF1B   JP       V0, $F1B        ; Jump to V0 + F1B
$BDC    $631A   LD       V3, #1A         ; Load 26 into V3
$BDE    $3660   SE       V6, #60         ; Skip if V6 == 96
$BE0    $FB70   UNKNOWN  FB70            ; Unknown Fxxx instruction
$BE2    $21C3   CALL     $1C3            ; Call subroutine at 1C3
$BE4    $D328   DRW      V3, V2, #8      ; Draw 8-byte sprite at V3, V2
$BE6    $7235   ADD      V2, #35         ; Add 53 to V2
$BE8    $E7A0   UNKNOWN  $E7A0           ; Unknown Exxx instruction
$BEA    $1A13   JP       $A13            ; Jump to A13
$BEC    $50C6   UNKNOWN  $50C6           ; Unknown 5xxx instruction
$BEE    $E341   UNKNOWN  $E341           ; Unknown Exxx instruction
$BF0    $8303   XOR      V3, V0          ; V3 ^= V0
$BF2    $AD03   LD       I, $D03         ; Load D03 into I
$BF4    $801C   UNKNOWN  801C            ; Unknown 8xxx instruction
$BF6    $CBE8   RND      VB, #E8         ; VB = random & E8
$BF8    $DACF   DRW      VA, VC, #F      ; Draw 15-byte sprite at VA, VC
$BFA    $2CD1   CALL     $CD1            ; Call subroutine at CD1
$BFC    $1092   JP       $092            ; Jump to 092
$BFE    $F879   UNKNOWN  F879            ; Unknown Fxxx instruction
$C00    $6BF0   LD       VB, #F0         ; Load 240 into VB
$C02    $DB0F   DRW      VB, V0, #F      ; Draw 15-byte sprite at VB, V0
$C04    $A6ED   LD       I, $6ED         ; Load 6ED into I
$C06    $4450   SNE      V4, #50         ; Skip if V4 != 80
$C08    $75F4   ADD      V5, #F4         ; Add 244 to V5
$C0A    $975F   UNKNOWN  $975F           ; Unknown 9xxx instruction
$C0C    $A1EE   LD       I, $1EE         ; Load 1EE into I
$C0E    $3F42   SE       VF, #42         ; Skip if VF == 66
$C10    $54BB   UNKNOWN  $54BB           ; Unknown 5xxx instruction
$C12    $7CE6   ADD      VC, #E6         ; Add 230 to VC
$C14    $7149   ADD      V1, #49         ; Add 73 to V1
$C16    $362D   SE       V6, #2D         ; Skip if V6 == 45
$C18    $1715   JP       $715            ; Jump to 715
$C1A    $37D4   SE       V7, #D4         ; Skip if V7 == 212
$C1C    $3DED   SE       VD, #ED         ; Skip if VD == 237
$C1E    $015C   SYS      $15C            ; System call to 15C
$C20    $832E   SHL      V3              ; V3 <<= 1, VF = MSB
$C22    $6B80   LD       VB, #80         ; Load 128 into VB
$C24    $C71D   RND      V7, #1D         ; V7 = random & 1D
$C26    $8463   XOR      V4, V6          ; V4 ^= V6
$C28    $FC8C   UNKNOWN  FC8C            ; Unknown Fxxx instruction
$C2A    $4B06   SNE      VB, #06         ; Skip if VB != 6
$C2C    $B2B4   JP       V0, $2B4        ; Jump to V0 + 2B4
$C2E    $F692   UNKNOWN  F692            ; Unknown Fxxx instruction
$C30    $4609   SNE      V6, #09         ; Skip if V6 != 9
$C32    $FB9D   UNKNOWN  FB9D            ; Unknown Fxxx instruction
$C34    $CC5D   RND      VC, #5D         ; VC = random & 5D
$C36    $110E   JP       $10E            ; Jump to 10E
$C38    $63BF   LD       V3, #BF         ; Load 191 into V3
$C3A    $63E9   LD       V3, #E9         ; Load 233 into V3
$C3C    $DE6E   DRW      VE, V6, #E      ; Draw 14-byte sprite at VE, V6
$C3E    $99B6   UNKNOWN  $99B6           ; Unknown 9xxx instruction
$C40    $5C53   UNKNOWN  $5C53           ; Unknown 5xxx instruction
$C42    $E257   UNKNOWN  $E257           ; Unknown Exxx instruction
$C44    $D07B   DRW      V0, V7, #B      ; Draw 11-byte sprite at V0, V7
$C46    $DAFD   DRW      VA, VF, #D      ; Draw 13-byte sprite at VA, VF
$C48    $122E   JP       $22E            ; Jump to 22E
$C4A    $9CA2   UNKNOWN  $9CA2           ; Unknown 9xxx instruction
$C4C    $5F92   UNKNOWN  $5F92           ; Unknown 5xxx instruction
$C4E    $B31E   JP       V0, $31E        ; Jump to V0 + 31E
$C50    $8A79   UNKNOWN  8A79            ; Unknown 8xxx instruction
$C52    $BD9B   JP       V0, $D9B        ; Jump to V0 + D9B
$C54    $5385   UNKNOWN  $5385           ; Unknown 5xxx instruction
$C56    $C147   RND      V1, #47         ; V1 = random & 47
$C58    $BABA   JP       V0, $ABA        ; Jump to V0 + ABA
$C5A    $4273   SNE      V2, #73         ; Skip if V2 != 115
$C5C    $C495   RND      V4, #95         ; V4 = random & 95
$C5E    $1EBA   JP       $EBA            ; Jump to EBA
$C60    $5CAC   UNKNOWN  $5CAC           ; Unknown 5xxx instruction
$C62    $0901   SYS      $901            ; System call to 901
$C64    $D919   DRW      V9, V1, #9      ; Draw 9-byte sprite at V9, V1
$C66    $2023   CALL     $023            ; Call subroutine at 023
$C68    $FB8A   UNKNOWN  FB8A            ; Unknown Fxxx instruction
$C6A    $95BB   UNKNOWN  $95BB           ; Unknown 9xxx instruction
$C6C    $11EA   JP       $1EA            ; Jump to 1EA
$C6E    $0122   SYS      $122            ; System call to 122
$C70    $6A73   LD       VA, #73         ; Load 115 into VA
$C72    $1E25   JP       $E25            ; Jump to E25
$C74    $85EB   UNKNOWN  85EB            ; Unknown 8xxx instruction
$C76    $CD9F   RND      VD, #9F         ; VD = random & 9F
$C78    $AC39   LD       I, $C39         ; Load C39 into I
$C7A    $2E5A   CALL     $E5A            ; Call subroutine at E5A
$C7C    $4C39   SNE      VC, #39         ; Skip if VC != 57
$C7E    $E590   UNKNOWN  $E590           ; Unknown Exxx instruction
$C80    $7E3A   ADD      VE, #3A         ; Add 58 to VE
$C82    $5861   UNKNOWN  $5861           ; Unknown 5xxx instruction
$C84    $2564   CALL     $564            ; Call subroutine at 564
$C86    $C20C   RND      V2, #0C         ; V2 = random & 0C
$C88    $D6B1   DRW      V6, VB, #1      ; Draw 1-byte sprite at V6, VB
$C8A    $5AB4   UNKNOWN  $5AB4           ; Unknown 5xxx instruction
$C8C    $0876   SYS      $876            ; System call to 876
$C8E    $65C3   LD       V5, #C3         ; Load 195 into V5
$C90    $F041   UNKNOWN  F041            ; Unknown Fxxx instruction
$C92    $584A   UNKNOWN  $584A           ; Unknown 5xxx instruction
$C94    $D30F   DRW      V3, V0, #F      ; Draw 15-byte sprite at V3, V0
$C96    $1D9D   JP       $D9D            ; Jump to D9D
$C98    $B8EA   JP       V0, $8EA        ; Jump to V0 + 8EA
$C9A    $86D7   SUBN     V6, VD          ; V6 = VD - V6, VF = !borrow
$C9C    $EB14   UNKNOWN  $EB14           ; Unknown Exxx instruction
$C9E    $B948   JP       V0, $948        ; Jump to V0 + 948
$CA0    $5945   UNKNOWN  $5945           ; Unknown 5xxx instruction
$CA2    $2CDC   CALL     $CDC            ; Call subroutine at CDC
$CA4    $6AAB   LD       VA, #AB         ; Load 171 into VA
$CA6    $0628   SYS      $628            ; System call to 628
$CA8    $8415   SUB      V4, V1          ; V4 -= V1, VF = !borrow
$CAA    $D8E2   DRW      V8, VE, #2      ; Draw 2-byte sprite at V8, VE
$CAC    $5B54   UNKNOWN  $5B54           ; Unknown 5xxx instruction
$CAE    $3A63   SE       VA, #63         ; Skip if VA == 99
$CB0    $B5B3   JP       V0, $5B3        ; Jump to V0 + 5B3
$CB2    $8B0D   UNKNOWN  8B0D            ; Unknown 8xxx instruction
$CB4    $A997   LD       I, $997         ; Load 997 into I
$CB6    $C503   RND      V5, #03         ; V5 = random & 03
$CB8    $2AA8   CALL     $AA8            ; Call subroutine at AA8
$CBA    $0549   SYS      $549            ; System call to 549
$CBC    $C42E   RND      V4, #2E         ; V4 = random & 2E
$CBE    $61D4   LD       V1, #D4         ; Load 212 into V1
$CC0    $2E12   CALL     $E12            ; Call subroutine at E12
$CC2    $B8C3   JP       V0, $8C3        ; Jump to V0 + 8C3
$CC4    $BA82   JP       V0, $A82        ; Jump to V0 + A82
$CC6    $B737   JP       V0, $737        ; Jump to V0 + 737
$CC8    $1160   JP       $160            ; Jump to 160
$CCA    $360D   SE       V6, #0D         ; Skip if V6 == 13
$CCC    $A92B   LD       I, $92B         ; Load 92B into I
$CCE    $FA12   UNKNOWN  FA12            ; Unknown Fxxx instruction
$CD0    $48B0   SNE      V8, #B0         ; Skip if V8 != 176
$CD2    $5ABD   UNKNOWN  $5ABD           ; Unknown 5xxx instruction
$CD4    $CACF   RND      VA, #CF         ; VA = random & CF
$CD6    $B3E0   JP       V0, $3E0        ; Jump to V0 + 3E0
$CD8    $B2D8   JP       V0, $2D8        ; Jump to V0 + 2D8
$CDA    $6C9F   LD       VC, #9F         ; Load 159 into VC
$CDC    $F35E   UNKNOWN  F35E            ; Unknown Fxxx instruction
$CDE    $15BC   JP       $5BC            ; Jump to 5BC
$CE0    $082A   SYS      $82A            ; System call to 82A
$CE2    $D92F   DRW      V9, V2, #F      ; Draw 15-byte sprite at V9, V2
$CE4    $7242   ADD      V2, #42         ; Add 66 to V2
$CE6    $49A4   SNE      V9, #A4         ; Skip if V9 != 164
$CE8    $F167   UNKNOWN  F167            ; Unknown Fxxx instruction
$CEA    $3300   SE       V3, #00         ; Skip if V3 == 0
$CEC    $C5AD   RND      V5, #AD         ; V5 = random & AD
$CEE    $6278   LD       V2, #78         ; Load 120 into V2
$CF0    $E487   UNKNOWN  $E487           ; Unknown Exxx instruction
$CF2    $29B6   CALL     $9B6            ; Call subroutine at 9B6
$CF4    $517C   UNKNOWN  $517C           ; Unknown 5xxx instruction
$CF6    $1D4E   JP       $D4E            ; Jump to D4E
$CF8    $345A   SE       V4, #5A         ; Skip if V4 == 90
$CFA    $C4F0   RND      V4, #F0         ; V4 = random & F0
$CFC    $392F   SE       V9, #2F         ; Skip if V9 == 47
$CFE    $0DB3   SYS      $DB3            ; System call to DB3
$D00    $0707   SYS      $707            ; System call to 707
$D02    $1F9C   JP       $F9C            ; Jump to F9C
$D04    $226C   CALL     $26C            ; Call subroutine at 26C
$D06    $93E0   SNE      V3, VE          ; Skip if V3 != VE
$D08    $17E7   JP       $7E7            ; Jump to 7E7
$D0A    $0CC7   SYS      $CC7            ; System call to CC7
$D0C    $0085   SYS      $085            ; System call to 085
$D0E    $FE5F   UNKNOWN  FE5F            ; Unknown Fxxx instruction
$D10    $7C07   ADD      VC, #07         ; Add 7 to VC
$D12    $B6E5   JP       V0, $6E5        ; Jump to V0 + 6E5
$D14    $2EB5   CALL     $EB5            ; Call subroutine at EB5
$D16    $A625   LD       I, $625         ; Load 625 into I
$D18    $4C78   SNE      VC, #78         ; Skip if VC != 120
$D1A    $49AD   SNE      V9, #AD         ; Skip if V9 != 173
$D1C    $5559   UNKNOWN  $5559           ; Unknown 5xxx instruction
$D1E    $BC36   JP       V0, $C36        ; Jump to V0 + C36
$D20    $163A   JP       $63A            ; Jump to 63A
$D22    $2D70   CALL     $D70            ; Call subroutine at D70
$D24    $CE12   RND      VE, #12         ; VE = random & 12
$D26    $C90D   RND      V9, #0D         ; V9 = random & 0D
$D28    $7173   ADD      V1, #73         ; Add 115 to V1
$D2A    $8719   UNKNOWN  8719            ; Unknown 8xxx instruction
$D2C    $D54C   DRW      V5, V4, #C      ; Draw 12-byte sprite at V5, V4
$D2E    $9B2B   UNKNOWN  $9B2B           ; Unknown 9xxx instruction
$D30    $1FED   JP       $FED            ; Jump to FED
$D32    $F062   UNKNOWN  F062            ; Unknown Fxxx instruction
$D34    $A372   LD       I, $372         ; Load 372 into I
$D36    $7278   ADD      V2, #78         ; Add 120 to V2
$D38    $09A2   SYS      $9A2            ; System call to 9A2
$D3A    $BADF   JP       V0, $ADF        ; Jump to V0 + ADF
$D3C    $D0E6   DRW      V0, VE, #6      ; Draw 6-byte sprite at V0, VE
$D3E    $B015   JP       V0, $015        ; Jump to V0 + 015
$D40    $7BC5   ADD      VB, #C5         ; Add 197 to VB
$D42    $DE1B   DRW      VE, V1, #B      ; Draw 11-byte sprite at VE, V1
$D44    $C601   RND      V6, #01         ; V6 = random & 01
$D46    $26BA   CALL     $6BA            ; Call subroutine at 6BA
$D48    $899C   UNKNOWN  899C            ; Unknown 8xxx instruction
$D4A    $CFC0   RND      VF, #C0         ; VF = random & C0
$D4C    $FB31   UNKNOWN  FB31            ; Unknown Fxxx instruction
$D4E    $7FD4   ADD      VF, #D4         ; Add 212 to VF
$D50    $CB96   RND      VB, #96         ; VB = random & 96
$D52    $0E6C   SYS      $E6C            ; System call to E6C
$D54    $8EB8   UNKNOWN  8EB8            ; Unknown 8xxx instruction
$D56    $5C99   UNKNOWN  $5C99           ; Unknown 5xxx instruction
$D58    $347C   SE       V4, #7C         ; Skip if V4 == 124
$D5A    $57E6   UNKNOWN  $57E6           ; Unknown 5xxx instruction
$D5C    $92BC   UNKNOWN  $92BC           ; Unknown 9xxx instruction
$D5E    $D499   DRW      V4, V9, #9      ; Draw 9-byte sprite at V4, V9
$D60    $BDF5   JP       V0, $DF5        ; Jump to V0 + DF5
$D62    $FB9B   UNKNOWN  FB9B            ; Unknown Fxxx instruction
$D64    $1200   JP       $200            ; Jump to 200
$D66    $CD23   RND      VD, #23         ; VD = random & 23
$D68    $E2DE   UNKNOWN  $E2DE           ; Unknown Exxx instruction
$D6A    $9D45   UNKNOWN  $9D45           ; Unknown 9xxx instruction
$D6C    $2534   CALL     $534            ; Call subroutine at 534
$D6E    $812B   UNKNOWN  812B            ; Unknown 8xxx instruction
$D70    $4D11   SNE      VD, #11         ; Skip if VD != 17
$D72    $9DF9   UNKNOWN  $9DF9           ; Unknown 9xxx instruction
$D74    $73C1   ADD      V3, #C1         ; Add 193 to V3
$D76    $38BD   SE       V8, #BD         ; Skip if V8 == 189
$D78    $121C   JP       $21C            ; Jump to 21C
$D7A    $AA90   LD       I, $A90         ; Load A90 into I
$D7C    $DF29   DRW      VF, V2, #9      ; Draw 9-byte sprite at VF, V2
$D7E    $24BA   CALL     $4BA            ; Call subroutine at 4BA
$D80    $A407   LD       I, $407         ; Load 407 into I
$D82    $9A7C   UNKNOWN  $9A7C           ; Unknown 9xxx instruction
$D84    $55B7   UNKNOWN  $55B7           ; Unknown 5xxx instruction
$D86    $2515   CALL     $515            ; Call subroutine at 515
$D88    $DAC0   DRW      VA, VC, #0      ; Draw 0-byte sprite at VA, VC
$D8A    $8397   SUBN     V3, V9          ; V3 = V9 - V3, VF = !borrow
$D8C    $E128   UNKNOWN  $E128           ; Unknown Exxx instruction
$D8E    $EA69   UNKNOWN  $EA69           ; Unknown Exxx instruction
$D90    $7AC7   ADD      VA, #C7         ; Add 199 to VA
$D92    $B0FC   JP       V0, $0FC        ; Jump to V0 + 0FC
$D94    $B32A   JP       V0, $32A        ; Jump to V0 + 32A
$D96    $22D7   CALL     $2D7            ; Call subroutine at 2D7
$D98    $3A7E   SE       VA, #7E         ; Skip if VA == 126
$D9A    $4B13   SNE      VB, #13         ; Skip if VB != 19
$D9C    $9137   UNKNOWN  $9137           ; Unknown 9xxx instruction
$D9E    $1472   JP       $472            ; Jump to 472
$DA0    $2D31   CALL     $D31            ; Call subroutine at D31
$DA2    $3164   SE       V1, #64         ; Skip if V1 == 100
$DA4    $87D6   SHR      V7              ; V7 >>= 1, VF = LSB
$DA6    $DFE5   DRW      VF, VE, #5      ; Draw 5-byte sprite at VF, VE
$DA8    $9DAC   UNKNOWN  $9DAC           ; Unknown 9xxx instruction
$DAA    $881A   UNKNOWN  881A            ; Unknown 8xxx instruction
$DAC    $9570   SNE      V5, V7          ; Skip if V5 != V7
$DAE    $66EF   LD       V6, #EF         ; Load 239 into V6
$DB0    $5819   UNKNOWN  $5819           ; Unknown 5xxx instruction
$DB2    $4538   SNE      V5, #38         ; Skip if V5 != 56
$DB4    $B92A   JP       V0, $92A        ; Jump to V0 + 92A
$DB6    $DD31   DRW      VD, V3, #1      ; Draw 1-byte sprite at VD, V3
$DB8    $9A32   UNKNOWN  $9A32           ; Unknown 9xxx instruction
$DBA    $0F95   SYS      $F95            ; System call to F95
$DBC    $5CC4   UNKNOWN  $5CC4           ; Unknown 5xxx instruction
$DBE    $DAFC   DRW      VA, VF, #C      ; Draw 12-byte sprite at VA, VF
$DC0    $E459   UNKNOWN  $E459           ; Unknown Exxx instruction
$DC2    $1012   JP       $012            ; Jump to 012
$DC4    $A989   LD       I, $989         ; Load 989 into I
$DC6    $009C   SYS      $09C            ; System call to 09C
$DC8    $E9DE   UNKNOWN  $E9DE           ; Unknown Exxx instruction
$DCA    $79BD   ADD      V9, #BD         ; Add 189 to V9
$DCC    $3282   SE       V2, #82         ; Skip if V2 == 130
$DCE    $FAF0   UNKNOWN  FAF0            ; Unknown Fxxx instruction
$DD0    $AB03   LD       I, $B03         ; Load B03 into I
$DD2    $38BD   SE       V8, #BD         ; Skip if V8 == 189
$DD4    $4DD9   SNE      VD, #D9         ; Skip if VD != 217
$DD6    $9E98   UNKNOWN  $9E98           ; Unknown 9xxx instruction
$DD8    $5E96   UNKNOWN  $5E96           ; Unknown 5xxx instruction
$DDA    $5A43   UNKNOWN  $5A43           ; Unknown 5xxx instruction
$DDC    $09ED   SYS      $9ED            ; System call to 9ED
$DDE    $BB24   JP       V0, $B24        ; Jump to V0 + B24
$DE0    $9EDC   UNKNOWN  $9EDC           ; Unknown 9xxx instruction
$DE2    $A0CF   LD       I, $0CF         ; Load 0CF into I
$DE4    $5274   UNKNOWN  $5274           ; Unknown 5xxx instruction
$DE6    $0EA0   SYS      $EA0            ; System call to EA0
$DE8    $3944   SE       V9, #44         ; Skip if V9 == 68
$DEA    $1D93   JP       $D93            ; Jump to D93
$DEC    $4B70   SNE      VB, #70         ; Skip if VB != 112
$DEE    $EFB4   UNKNOWN  $EFB4           ; Unknown Exxx instruction
$DF0    $5795   UNKNOWN  $5795           ; Unknown 5xxx instruction
$DF2    $DA44   DRW      VA, V4, #4      ; Draw 4-byte sprite at VA, V4
$DF4    $7B53   ADD      VB, #53         ; Add 83 to VB
$DF6    $9FA6   UNKNOWN  $9FA6           ; Unknown 9xxx instruction
$DF8    $E52F   UNKNOWN  $E52F           ; Unknown Exxx instruction
$DFA    $A522   LD       I, $522         ; Load 522 into I
$DFC    $0D02   SYS      $D02            ; System call to D02
$DFE    $D3AA   DRW      V3, VA, #A      ; Draw 10-byte sprite at V3, VA
$E00    $7862   ADD      V8, #62         ; Add 98 to V8
$E02    $6B5A   LD       VB, #5A         ; Load 90 into VB
$E04    $0095   SYS      $095            ; System call to 095
$E06    $E600   UNKNOWN  $E600           ; Unknown Exxx instruction
$E08    $70FA   ADD      V0, #FA         ; Add 250 to V0
$E0A    $C044   RND      V0, #44         ; V0 = random & 44
$E0C    $135F   JP       $35F            ; Jump to 35F
$E0E    $3D0D   SE       VD, #0D         ; Skip if VD == 13
$E10    $9D84   UNKNOWN  $9D84           ; Unknown 9xxx instruction
$E12    $1A3D   JP       $A3D            ; Jump to A3D
$E14    $4EBF   SNE      VE, #BF         ; Skip if VE != 191
$E16    $9B26   UNKNOWN  $9B26           ; Unknown 9xxx instruction
$E18    $BE0B   JP       V0, $E0B        ; Jump to V0 + E0B
$E1A    $28D0   CALL     $8D0            ; Call subroutine at 8D0
$E1C    $F7C3   UNKNOWN  F7C3            ; Unknown Fxxx instruction
$E1E    $C447   RND      V4, #47         ; V4 = random & 47
$E20    $0F04   SYS      $F04            ; System call to F04
$E22    $D60F   DRW      V6, V0, #F      ; Draw 15-byte sprite at V6, V0
$E24    $9A59   UNKNOWN  $9A59           ; Unknown 9xxx instruction
$E26    $FB8E   UNKNOWN  FB8E            ; Unknown Fxxx instruction
$E28    $F1E8   UNKNOWN  F1E8            ; Unknown Fxxx instruction
$E2A    $E0A7   UNKNOWN  $E0A7           ; Unknown Exxx instruction
$E2C    $778D   ADD      V7, #8D         ; Add 141 to V7
$E2E    $FE24   UNKNOWN  FE24            ; Unknown Fxxx instruction
$E30    $11ED   JP       $1ED            ; Jump to 1ED
$E32    $BCFD   JP       V0, $CFD        ; Jump to V0 + CFD
$E34    $37B4   SE       V7, #B4         ; Skip if V7 == 180
$E36    $7937   ADD      V9, #37         ; Add 55 to V9
$E38    $B642   JP       V0, $642        ; Jump to V0 + 642
$E3A    $2E01   CALL     $E01            ; Call subroutine at E01
$E3C    $6427   LD       V4, #27         ; Load 39 into V4
$E3E    $9F33   UNKNOWN  $9F33           ; Unknown 9xxx instruction
$E40    $1859   JP       $859            ; Jump to 859
$E42    $E19A   UNKNOWN  $E19A           ; Unknown Exxx instruction
$E44    $1D94   JP       $D94            ; Jump to D94
$E46    $1F6A   JP       $F6A            ; Jump to F6A
$E48    $1457   JP       $457            ; Jump to 457
$E4A    $C008   RND      V0, #08         ; V0 = random & 08
$E4C    $8A0B   UNKNOWN  8A0B            ; Unknown 8xxx instruction
$E4E    $F2C0   UNKNOWN  F2C0            ; Unknown Fxxx instruction
$E50    $99CB   UNKNOWN  $99CB           ; Unknown 9xxx instruction
$E52    $6C7A   LD       VC, #7A         ; Load 122 into VC
$E54    $226A   CALL     $26A            ; Call subroutine at 26A
$E56    $290D   CALL     $90D            ; Call subroutine at 90D
$E58    $FA7C   UNKNOWN  FA7C            ; Unknown Fxxx instruction
$E5A    $1B33   JP       $B33            ; Jump to B33
$E5C    $E33E   UNKNOWN  $E33E           ; Unknown Exxx instruction
$E5E    $CF9D   RND      VF, #9D         ; VF = random & 9D
$E60    $A2C3   LD       I, $2C3         ; Load 2C3 into I
$E62    $2601   CALL     $601            ; Call subroutine at 601
$E64    $3AF3   SE       VA, #F3         ; Skip if VA == 243
$E66    $D6EE   DRW      V6, VE, #E      ; Draw 14-byte sprite at V6, VE
$E68    $BC69   JP       V0, $C69        ; Jump to V0 + C69
$E6A    $1F86   JP       $F86            ; Jump to F86
$E6C    $A2E5   LD       I, $2E5         ; Load 2E5 into I
$E6E    $E874   UNKNOWN  $E874           ; Unknown Exxx instruction
$E70    $FDAD   UNKNOWN  FDAD            ; Unknown Fxxx instruction
$E72    $4DC8   SNE      VD, #C8         ; Skip if VD != 200
$E74    $F4A4   UNKNOWN  F4A4            ; Unknown Fxxx instruction
$E76    $7D51   ADD      VD, #51         ; Add 81 to VD
$E78    $4424   SNE      V4, #24         ; Skip if V4 != 36
$E7A    $FC39   UNKNOWN  FC39            ; Unknown Fxxx instruction
$E7C    $7ADA   ADD      VA, #DA         ; Add 218 to VA
$E7E    $61E5   LD       V1, #E5         ; Load 229 into V1
$E80    $6A58   LD       VA, #58         ; Load 88 into VA
$E82    $EC47   UNKNOWN  $EC47           ; Unknown Exxx instruction
$E84    $E3EA   UNKNOWN  $E3EA           ; Unknown Exxx instruction
$E86    $C2B2   RND      V2, #B2         ; V2 = random & B2
$E88    $3B94   SE       VB, #94         ; Skip if VB == 148
$E8A    $2896   CALL     $896            ; Call subroutine at 896
$E8C    $E633   UNKNOWN  $E633           ; Unknown Exxx instruction
$E8E    $E965   UNKNOWN  $E965           ; Unknown Exxx instruction
$E90    $0FC4   SYS      $FC4            ; System call to FC4
$E92    $E472   UNKNOWN  $E472           ; Unknown Exxx instruction
$E94    $0BE8   SYS      $BE8            ; System call to BE8
$E96    $EA74   UNKNOWN  $EA74           ; Unknown Exxx instruction
$E98    $45FA   SNE      V5, #FA         ; Skip if V5 != 250
$E9A    $CFE8   RND      VF, #E8         ; VF = random & E8
$E9C    $0552   SYS      $552            ; System call to 552
$E9E    $E808   UNKNOWN  $E808           ; Unknown Exxx instruction
$EA0    $A7BC   LD       I, $7BC         ; Load 7BC into I
$EA2    $F894   UNKNOWN  F894            ; Unknown Fxxx instruction
$EA4    $2B99   CALL     $B99            ; Call subroutine at B99
$EA6    $2ABE   CALL     $ABE            ; Call subroutine at ABE
$EA8    $1DC2   JP       $DC2            ; Jump to DC2
$EAA    $18E7   JP       $8E7            ; Jump to 8E7
$EAC    $B33E   JP       V0, $33E        ; Jump to V0 + 33E
$EAE    $AB34   LD       I, $B34         ; Load B34 into I
$EB0    $782D   ADD      V8, #2D         ; Add 45 to V8
$EB2    $8B44   ADD      VB, V4          ; VB += V4, VF = carry
$EB4    $F370   UNKNOWN  F370            ; Unknown Fxxx instruction
$EB6    $F51E   ADD      I, V5           ; I += V5
$EB8    $C194   RND      V1, #94         ; V1 = random & 94
$EBA    $F649   UNKNOWN  F649            ; Unknown Fxxx instruction
$EBC    $88EF   UNKNOWN  88EF            ; Unknown 8xxx instruction
$EBE    $5B0E   UNKNOWN  $5B0E           ; Unknown 5xxx instruction
$EC0    $A07A   LD       I, $07A         ; Load 07A into I
$EC2    $619A   LD       V1, #9A         ; Load 154 into V1
$EC4    $FAC9   UNKNOWN  FAC9            ; Unknown Fxxx instruction
$EC6    $268E   CALL     $68E            ; Call subroutine at 68E
$EC8    $BC53   JP       V0, $C53        ; Jump to V0 + C53
$ECA    $FDA8   UNKNOWN  FDA8            ; Unknown Fxxx instruction
$ECC    $7583   ADD      V5, #83         ; Add 131 to V5
$ECE    $F2D2   UNKNOWN  F2D2            ; Unknown Fxxx instruction
$ED0    $298F   CALL     $98F            ; Call subroutine at 98F
$ED2    $61A4   LD       V1, #A4         ; Load 164 into V1
$ED4    $5272   UNKNOWN  $5272           ; Unknown 5xxx instruction
$ED6    $B907   JP       V0, $907        ; Jump to V0 + 907
$ED8    $6C7B   LD       VC, #7B         ; Load 123 into VC
$EDA    $EDD7   UNKNOWN  $EDD7           ; Unknown Exxx instruction
$EDC    $810E   SHL      V1              ; V1 <<= 1, VF = MSB
$EDE    $795F   ADD      V9, #5F         ; Add 95 to V9
$EE0    $176C   JP       $76C            ; Jump to 76C
$EE2    $9053   UNKNOWN  $9053           ; Unknown 9xxx instruction
$EE4    $04A6   SYS      $4A6            ; System call to 4A6
$EE6    $27FD   CALL     $7FD            ; Call subroutine at 7FD
$EE8    $1607   JP       $607            ; Jump to 607
$EEA    $5441   UNKNOWN  $5441           ; Unknown 5xxx instruction
$EEC    $BE7A   JP       V0, $E7A        ; Jump to V0 + E7A
$EEE    $CCDA   RND      VC, #DA         ; VC = random & DA
$EF0    $9D58   UNKNOWN  $9D58           ; Unknown 9xxx instruction
$EF2    $DB1B   DRW      VB, V1, #B      ; Draw 11-byte sprite at VB, V1
$EF4    $C52B   RND      V5, #2B         ; V5 = random & 2B
$EF6    $4BA2   SNE      VB, #A2         ; Skip if VB != 162
$EF8    $D1CF   DRW      V1, VC, #F      ; Draw 15-byte sprite at V1, VC
$EFA    $C1BC   RND      V1, #BC         ; V1 = random & BC
$EFC    $2E42   CALL     $E42            ; Call subroutine at E42
$EFE    $CB1D   RND      VB, #1D         ; VB = random & 1D
$F00    $409C   SNE      V0, #9C         ; Skip if V0 != 156
$F02    $3C20   SE       VC, #20         ; Skip if VC == 32
$F04    $C1E6   RND      V1, #E6         ; V1 = random & E6
$F06    $2FEB   CALL     $FEB            ; Call subroutine at FEB
$F08    $2ADB   CALL     $ADB            ; Call subroutine at ADB
$F0A    $AEE3   LD       I, $EE3         ; Load EE3 into I
$F0C    $5BD9   UNKNOWN  $5BD9           ; Unknown 5xxx instruction
$F0E    $78D9   ADD      V8, #D9         ; Add 217 to V8
$F10    $9664   UNKNOWN  $9664           ; Unknown 9xxx instruction
$F12    $0BCB   SYS      $BCB            ; System call to BCB
$F14    $759D   ADD      V5, #9D         ; Add 157 to V5
$F16    $95C2   UNKNOWN  $95C2           ; Unknown 9xxx instruction
$F18    $A6E1   LD       I, $6E1         ; Load 6E1 into I
$F1A    $4BB8   SNE      VB, #B8         ; Skip if VB != 184
$F1C    $3EE8   SE       VE, #E8         ; Skip if VE == 232
$F1E    $642D   LD       V4, #2D         ; Load 45 into V4
$F20    $4413   SNE      V4, #13         ; Skip if V4 != 19
$F22    $A809   LD       I, $809         ; Load 809 into I
$F24    $83FC   UNKNOWN  83FC            ; Unknown 8xxx instruction
$F26    $11D2   JP       $1D2            ; Jump to 1D2
$F28    $2999   CALL     $999            ; Call subroutine at 999
$F2A    $B426   JP       V0, $426        ; Jump to V0 + 426
$F2C    $1D4F   JP       $D4F            ; Jump to D4F
$F2E    $7A3E   ADD      VA, #3E         ; Add 62 to VA
$F30    $E106   UNKNOWN  $E106           ; Unknown Exxx instruction
$F32    $DAE3   DRW      VA, VE, #3      ; Draw 3-byte sprite at VA, VE
$F34    $F93D   UNKNOWN  F93D            ; Unknown Fxxx instruction
$F36    $9AA7   UNKNOWN  $9AA7           ; Unknown 9xxx instruction
$F38    $E026   UNKNOWN  $E026           ; Unknown Exxx instruction
$F3A    $1CB7   JP       $CB7            ; Jump to CB7
$F3C    $82AA   UNKNOWN  82AA            ; Unknown 8xxx instruction
$F3E    $F30D   UNKNOWN  F30D            ; Unknown Fxxx instruction
$F40    $4A93   SNE      VA, #93         ; Skip if VA != 147
$F42    $3F6D   SE       VF, #6D         ; Skip if VF == 109
$F44    $429E   SNE      V2, #9E         ; Skip if V2 != 158
$F46    $1689   JP       $689            ; Jump to 689
$F48    $F16F   UNKNOWN  F16F            ; Unknown Fxxx instruction
$F4A    $07BC   SYS      $7BC            ; System call to 7BC
$F4C    $E109   UNKNOWN  $E109           ; Unknown Exxx instruction
$F4E    $99BE   UNKNOWN  $99BE           ; Unknown 9xxx instruction
$F50    $2E13   CALL     $E13            ; Call subroutine at E13
$F52    $453F   SNE      V5, #3F         ; Skip if V5 != 63
$F54    $97EE   UNKNOWN  $97EE           ; Unknown 9xxx instruction
$F56    $23B1   CALL     $3B1            ; Call subroutine at 3B1
$F58    $9CBB   UNKNOWN  $9CBB           ; Unknown 9xxx instruction
$F5A    $04FA   SYS      $4FA            ; System call to 4FA
$F5C    $10D2   JP       $0D2            ; Jump to 0D2
$F5E    $0369   SYS      $369            ; System call to 369
$F60    $84A5   SUB      V4, VA          ; V4 -= VA, VF = !borrow
$F62    $8DA9   UNKNOWN  8DA9            ; Unknown 8xxx instruction
$F64    $3E95   SE       VE, #95         ; Skip if VE == 149
$F66    $8FD0   LD       VF, VD          ; VF = VD
$F68    $3463   SE       V4, #63         ; Skip if V4 == 99
$F6A    $C96E   RND      V9, #6E         ; V9 = random & 6E
$F6C    $1024   JP       $024            ; Jump to 024
$F6E    $B60B   JP       V0, $60B        ; Jump to V0 + 60B
$F70    $7FB6   ADD      VF, #B6         ; Add 182 to VF
$F72    $4ED3   SNE      VE, #D3         ; Skip if VE != 211
$F74    $FFF8   UNKNOWN  FFF8            ; Unknown Fxxx instruction
$F76    $7011   ADD      V0, #11         ; Add 17 to V0
$F78    $2C83   CALL     $C83            ; Call subroutine at C83
$F7A    $D053   DRW      V0, V5, #3      ; Draw 3-byte sprite at V0, V5
$F7C    $DED2   DRW      VE, VD, #2      ; Draw 2-byte sprite at VE, VD
$F7E    $8D9C   UNKNOWN  8D9C            ; Unknown 8xxx instruction
$F80    $619C   LD       V1, #9C         ; Load 156 into V1
$F82    $B7DB   JP       V0, $7DB        ; Jump to V0 + 7DB
$F84    $6148   LD       V1, #48         ; Load 72 into V1
$F86    $E984   UNKNOWN  $E984           ; Unknown Exxx instruction
$F88    $FA34   UNKNOWN  FA34            ; Unknown Fxxx instruction
$F8A    $D906   DRW      V9, V0, #6      ; Draw 6-byte sprite at V9, V0
$F8C    $5E30   SE       VE, V3          ; Skip if VE == V3
$F8E    $8DAC   UNKNOWN  8DAC            ; Unknown 8xxx instruction
$F90    $AEBA   LD       I, $EBA         ; Load EBA into I
$F92    $8A76   SHR      VA              ; VA >>= 1, VF = LSB
$F94    $CFF2   RND      VF, #F2         ; VF = random & F2
$F96    $BD9E   JP       V0, $D9E        ; Jump to V0 + D9E
$F98    $A301   LD       I, $301         ; Load 301 into I
$F9A    $0F4C   SYS      $F4C            ; System call to F4C
$F9C    $1114   JP       $114            ; Jump to 114
$F9E    $88E5   SUB      V8, VE          ; V8 -= VE, VF = !borrow
$FA0    $CAE1   RND      VA, #E1         ; VA = random & E1
$FA2    $83AC   UNKNOWN  83AC            ; Unknown 8xxx instruction
$FA4    $9E08   UNKNOWN  $9E08           ; Unknown 9xxx instruction
$FA6    $63D5   LD       V3, #D5         ; Load 213 into V3
$FA8    $611F   LD       V1, #1F         ; Load 31 into V1
$FAA    $DF47   DRW      VF, V4, #7      ; Draw 7-byte sprite at VF, V4
$FAC    $64EE   LD       V4, #EE         ; Load 238 into V4
$FAE    $F2E1   UNKNOWN  F2E1            ; Unknown Fxxx instruction
$FB0    $0094   SYS      $094            ; System call to 094
$FB2    $4036   SNE      V0, #36         ; Skip if V0 != 54
$FB4    $78C4   ADD      V8, #C4         ; Add 196 to V8
$FB6    $3F3E   SE       VF, #3E         ; Skip if VF == 62
$FB8    $C335   RND      V3, #35         ; V3 = random & 35
$FBA    $CCAD   RND      VC, #AD         ; VC = random & AD
$FBC    $5608   UNKNOWN  $5608           ; Unknown 5xxx instruction
$FBE    $4720   SNE      V7, #20         ; Skip if V7 != 32
$FC0    $8714   ADD      V7, V1          ; V7 += V1, VF = carry
$FC2    $5B75   UNKNOWN  $5B75           ; Unknown 5xxx instruction
$FC4    $9405   UNKNOWN  $9405           ; Unknown 9xxx instruction
$FC6    $DB2A   DRW      VB, V2, #A      ; Draw 10-byte sprite at VB, V2
$FC8    $B581   JP       V0, $581        ; Jump to V0 + 581
$FCA    $EE0F   UNKNOWN  $EE0F           ; Unknown Exxx instruction
$FCC    $6119   LD       V1, #19         ; Load 25 into V1
$FCE    $FE5D   UNKNOWN  FE5D            ; Unknown Fxxx instruction
$FD0    $0116   SYS      $116            ; System call to 116
$FD2    $56F4   UNKNOWN  $56F4           ; Unknown 5xxx instruction
$FD4    $CF45   RND      VF, #45         ; VF = random & 45
$FD6    $B4C7   JP       V0, $4C7        ; Jump to V0 + 4C7
$FD8    $B130   JP       V0, $130        ; Jump to V0 + 130
$FDA    $D175   DRW      V1, V7, #5      ; Draw 5-byte sprite at V1, V7
$FDC    $9330   SNE      V3, V3          ; Skip if V3 != V3
$FDE    $EF9C   UNKNOWN  $EF9C           ; Unknown Exxx instruction
$FE0    $A984   LD       I, $984         ; Load 984 into I
$FE2    $D600   DRW      V6, V0, #0      ; Draw 0-byte sprite at V6, V0
$FE4    $900E   UNKNOWN  $900E           ; Unknown 9xxx instruction
$FE6    $2300   CALL     $300            ; Call subroutine at 300
$FE8    $0DBC   SYS      $DBC            ; System call to DBC
$FEA    $4CA2   SNE      VC, #A2         ; Skip if VC != 162
$FEC    $6F26   LD       VF, #26         ; Load 38 into VF
$FEE    $4F7F   SNE      VF, #7F         ; Skip if VF != 127
$FF0    $8D18   UNKNOWN  8D18            ; Unknown 8xxx instruction
$FF2    $8BF0   LD       VB, VF          ; VB = VF
$FF4    $BA03   JP       V0, $A03        ; Jump to V0 + A03
$FF6    $DE8F   DRW      VE, V8, #F      ; Draw 15-byte sprite at VE, V8
$FF8    $18DE   JP       $8DE            ; Jump to 8DE
$FFA    $29EB   CALL     $9EB            ; Call subroutine at 9EB
$FFC    $C73A   RND      V7, #3A         ; V7 = random & 3A
$FFE    $81A1   OR       V1, VA          ; V1 |= VA

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 478 (26.7%)
  JP      : 234 (13.1%)
  LD      : 226 (12.6%)
  ADD     : 139 ( 7.8%)
  RND     : 126 ( 7.0%)
  CALL    : 115 ( 6.4%)
  SNE     : 115 ( 6.4%)
  SYS     : 111 ( 6.2%)
  DRW     : 111 ( 6.2%)
  SE      : 102 ( 5.7%)
  XOR     :   9 ( 0.5%)
  SUBN    :   9 ( 0.5%)
  SHL     :   7 ( 0.4%)
  SUB     :   5 ( 0.3%)
  OR      :   3 ( 0.2%)
  SHR     :   2 ( 0.1%)

Memory Operations: 365 (20.4%)
Arithmetic Operations: 165 (9.2%)
