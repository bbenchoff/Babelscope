
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B6137D01_I22538_C31380_da4fdcc91d74.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 6137
Instance: 22538
Direction: descending
Final Array: [251, 251, 251, 251, 251, 251, 188, 109]
Operations: R:0 W:6 C:2544 S:38

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 109
Sort Array References:
  $30C: LD I, $CFB ; Load CFB into I
  $314: LD I, $CD4 ; Load CD4 into I
  $372: LD I, $C9D ; Load C9D into I
  $3BA: LD I, $C05 ; Load C05 into I
  $3C4: LD I, $B1F ; Load B1F into I
  $3C8: LD I, $E65 ; Load E65 into I
  $3EE: LD I, $6AA ; Load 6AA into I
  $402: LD I, $FC2 ; Load FC2 into I
  $40C: LD I, $A4E ; Load A4E into I
  $450: LD I, $006 ; Load 006 into I
  $462: LD I, $3B7 ; Load 3B7 into I
  $4A0: LD I, $2E7 ; Load 2E7 into I
  $4A8: LD I, $A1A ; Load A1A into I
  $4B0: LD I, $08D ; Load 08D into I
  $4F6: LD I, $716 ; Load 716 into I
  $50E: LD I, $E72 ; Load E72 into I
  $516: LD I, $CA5 ; Load CA5 into I
  $526: LD I, $737 ; Load 737 into I
  $52E: LD I, $08E ; Load 08E into I
  $554: LD I, $0AE ; Load 0AE into I
  $58A: LD I, $73C ; Load 73C into I
  $5AA: LD I, $344 ; Load 344 into I
  $5D0: LD I, $A52 ; Load A52 into I
  $632: LD I, $DA8 ; Load DA8 into I
  $664: LD I, $F16 ; Load F16 into I
  $674: LD I, $D16 ; Load D16 into I
  $6E6: LD I, $0AB ; Load 0AB into I
  $6EA: LD I, $5A0 ; Load 5A0 into I
  $6F0: LD I, $FCB ; Load FCB into I
  $728: LD I, $E60 ; Load E60 into I
  $73A: LD I, $984 ; Load 984 into I
  $758: LD [I], V0 ; Store V0-V0 at I
  $7AC: LD I, $EE8 ; Load EE8 into I
  $7BC: LD I, $2BA ; Load 2BA into I
  $7CE: LD I, $50B ; Load 50B into I
  $7DE: LD I, $361 ; Load 361 into I
  $82A: LD I, $776 ; Load 776 into I
  $82E: LD I, $0CD ; Load 0CD into I
  $834: LD I, $6EA ; Load 6EA into I
  $84E: LD I, $189 ; Load 189 into I
  $85C: LD I, $038 ; Load 038 into I
  $88C: LD I, $760 ; Load 760 into I
  $8B2: LD I, $E55 ; Load E55 into I
  $8C0: LD I, $5A0 ; Load 5A0 into I
  $8FC: LD I, $316 ; Load 316 into I
  $91E: LD I, $F20 ; Load F20 into I
  $93A: LD I, $00F ; Load 00F into I
  $946: LD I, $673 ; Load 673 into I
  $950: LD I, $08D ; Load 08D into I
  $98C: LD I, $414 ; Load 414 into I
  $990: LD I, $132 ; Load 132 into I
  $992: LD I, $09E ; Load 09E into I
  $998: LD I, $CEA ; Load CEA into I
  $9A6: LD I, $0C7 ; Load 0C7 into I
  $A02: LD I, $DDE ; Load DDE into I
  $A0A: LD I, $01D ; Load 01D into I
  $A1E: LD I, $751 ; Load 751 into I
  $A34: LD I, $565 ; Load 565 into I
  $A7E: LD I, $A17 ; Load A17 into I
  $A92: LD I, $21B ; Load 21B into I
  $A9E: LD I, $3EE ; Load 3EE into I
  $AA6: LD I, $EA5 ; Load EA5 into I
  $AB2: LD I, $895 ; Load 895 into I
  $AE6: LD I, $F00 ; Load F00 into I
  $B22: LD I, $B95 ; Load B95 into I
  $B32: LD I, $EF0 ; Load EF0 into I
  $B46: LD I, $1EA ; Load 1EA into I
  $B5C: LD I, $716 ; Load 716 into I
  $B6E: LD I, $52C ; Load 52C into I
  $B70: LD I, $DF3 ; Load DF3 into I
  $B84: LD I, $DEC ; Load DEC into I
  $B86: ADD I, VA ; I ADDRESS MANIPULATION
  $B8C: LD I, $BD4 ; Load BD4 into I
  $B90: LD I, $8E6 ; Load 8E6 into I
  $BB0: LD I, $973 ; Load 973 into I
  $BEA: LD I, $9DB ; Load 9DB into I
  $C56: LD I, $1A8 ; Load 1A8 into I
  $C64: LD I, $24C ; Load 24C into I
  $C66: LD I, $916 ; Load 916 into I
  $C72: LD I, $B1C ; Load B1C into I
  $C84: LD I, $0FD ; Load 0FD into I
  $CC0: LD I, $5BA ; Load 5BA into I
  $CFE: LD I, $5F6 ; Load 5F6 into I
  $D08: LD I, $2CD ; Load 2CD into I
  $D1A: LD I, $A5D ; Load A5D into I
  $D3E: LD I, $877 ; Load 877 into I
  $D5A: LD I, $B8B ; Load B8B into I
  $D78: LD I, $62E ; Load 62E into I
  $D80: LD I, $D20 ; Load D20 into I
  $D84: LD I, $45E ; Load 45E into I
  $D92: LD I, $675 ; Load 675 into I
  $D94: LD I, $E42 ; Load E42 into I
  $D9C: LD I, $D20 ; Load D20 into I
  $DEE: LD I, $049 ; Load 049 into I
  $E06: LD I, $37E ; Load 37E into I
  $E1E: LD I, $755 ; Load 755 into I
  $E30: LD I, $62E ; Load 62E into I
  $E5E: LD I, $E17 ; Load E17 into I
  $E62: LD I, $307 ; Load 307 into I
  $EBC: LD I, $EED ; Load EED into I
  $EE0: LD I, $B7C ; Load B7C into I
  $EE8: LD I, $473 ; Load 473 into I
  $F26: LD I, $102 ; Load 102 into I
  $F3A: LD I, $C14 ; Load C14 into I
  $F68: LD I, $7C7 ; Load 7C7 into I
  $F90: LD I, $B8F ; Load B8F into I
  $FAC: LD I, $2F7 ; Load 2F7 into I
  $FD4: LD I, $E92 ; Load E92 into I
  $FE4: LD I, $F06 ; Load F06 into I

CONTROL FLOW ANALYSIS:
Jumps: 194
Calls: 96
Branches: 210
Loops: 110
Loop Structures:
  $44C -> $32C (backward jump)
  $478 -> $3DB (backward jump)
  $512 -> $103 (backward jump)
  $538 -> $0B0 (backward jump)
  $53E -> $26B (backward jump)
  $548 -> $0C2 (backward jump)
  $55C -> $480 (backward jump)
  $560 -> $4E5 (backward jump)
  $592 -> $400 (backward jump)
  $5A8 -> $35B (backward jump)
  $656 -> $617 (backward jump)
  $69A -> $4AF (backward jump)
  $6C8 -> $5B3 (backward jump)
  $6E2 -> $337 (backward jump)
  $6F8 -> $2AD (backward jump)
  $716 -> $109 (backward jump)
  $746 -> $6D6 (backward jump)
  $74A -> $302 (backward jump)
  $74C -> $1C8 (backward jump)
  $7A8 -> $003 (backward jump)
  $7D0 -> $03A (backward jump)
  $7EE -> $156 (backward jump)
  $814 -> $684 (backward jump)
  $846 -> $586 (backward jump)
  $856 -> $2DC (backward jump)
  $886 -> $678 (backward jump)
  $890 -> $305 (backward jump)
  $8CC -> $7BD (backward jump)
  $8D6 -> $3A3 (backward jump)
  $8E4 -> $0F6 (backward jump)
  $8E8 -> $3A3 (backward jump)
  $92A -> $48A (backward jump)
  $92E -> $127 (backward jump)
  $98A -> $951 (backward jump)
  $9A2 -> $4C5 (backward jump)
  $9CA -> $4B3 (backward jump)
  $9E4 -> $8DA (backward jump)
  $A22 -> $988 (backward jump)
  $A2C -> $4BB (backward jump)
  $A38 -> $990 (backward jump)
  $A42 -> $95E (backward jump)
  $ABE -> $932 (backward jump)
  $AE8 -> $188 (backward jump)
  $AF4 -> $82F (backward jump)
  $B14 -> $891 (backward jump)
  $B18 -> $9F1 (backward jump)
  $B3C -> $80E (backward jump)
  $B44 -> $2F9 (backward jump)
  $B4C -> $955 (backward jump)
  $B76 -> $982 (backward jump)
  $B98 -> $485 (backward jump)
  $BC0 -> $605 (backward jump)
  $BCE -> $5B8 (backward jump)
  $BE6 -> $A0F (backward jump)
  $BF2 -> $817 (backward jump)
  $BFE -> $8B0 (backward jump)
  $C04 -> $AC2 (backward jump)
  $C16 -> $846 (backward jump)
  $C44 -> $941 (backward jump)
  $C46 -> $80A (backward jump)
  $C4C -> $B24 (backward jump)
  $C7C -> $AF3 (backward jump)
  $CC4 -> $017 (backward jump)
  $CDE -> $70B (backward jump)
  $CF8 -> $7F8 (backward jump)
  $D22 -> $486 (backward jump)
  $D36 -> $258 (backward jump)
  $D54 -> $9D3 (backward jump)
  $D60 -> $85F (backward jump)
  $D68 -> $844 (backward jump)
  $D6A -> $682 (backward jump)
  $D6E -> $763 (backward jump)
  $DAA -> $A99 (backward jump)
  $DBE -> $88C (backward jump)
  $DDE -> $13C (backward jump)
  $E08 -> $492 (backward jump)
  $E14 -> $A04 (backward jump)
  $E28 -> $5B8 (backward jump)
  $E48 -> $C31 (backward jump)
  $E54 -> $0E5 (backward jump)
  $E5C -> $888 (backward jump)
  $E6E -> $041 (backward jump)
  $E76 -> $16B (backward jump)
  $EB0 -> $332 (backward jump)
  $EB6 -> $6E7 (backward jump)
  $EB8 -> $7F9 (backward jump)
  $EBE -> $A07 (backward jump)
  $ED2 -> $768 (backward jump)
  $EDE -> $056 (backward jump)
  $EEE -> $386 (backward jump)
  $EF6 -> $4D5 (backward jump)
  $F14 -> $0B5 (backward jump)
  $F1C -> $EA5 (backward jump)
  $F28 -> $27C (backward jump)
  $F34 -> $93F (backward jump)
  $F38 -> $9C5 (backward jump)
  $F46 -> $0EA (backward jump)
  $F5C -> $49D (backward jump)
  $F60 -> $E6E (backward jump)
  $F62 -> $DCC (backward jump)
  $F86 -> $230 (backward jump)
  $F8C -> $F4D (backward jump)
  $FA0 -> $E8A (backward jump)
  $FB8 -> $3AD (backward jump)
  $FBE -> $5ED (backward jump)
  $FCC -> $8C9 (backward jump)
  $FD2 -> $B48 (backward jump)
  $FDA -> $22C (backward jump)
  $FE0 -> $E12 (backward jump)
  $FE8 -> $D3F (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$202    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$204    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$206    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$208    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$20A    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$20C    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$20E    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$210    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$212    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$214    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$216    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$218    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$21A    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$21C    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$21E    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$220    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$222    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$224    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$226    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$228    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$22A    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$22C    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$22E    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$230    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$232    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$234    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$236    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$238    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$23A    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$23C    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$23E    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$240    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$242    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$244    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$246    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$248    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$24A    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$24C    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$24E    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$250    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$252    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$254    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$256    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$258    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$25A    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$25C    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$25E    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$260    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$262    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$264    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$266    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$268    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$26A    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$26C    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$26E    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$270    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$272    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$274    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$276    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$278    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$27A    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$27C    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$27E    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$280    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$282    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$284    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$286    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$288    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$28A    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$28C    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$28E    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$290    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$292    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$294    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$296    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$298    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$29A    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$29C    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$29E    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2A0    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2A2    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2A4    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2A6    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2A8    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2AA    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2AC    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2AE    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2B0    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2B2    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2B4    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2B6    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2B8    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2BA    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2BC    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2BE    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2C0    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2C2    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2C4    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2C6    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2C8    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2CA    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2CC    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2CE    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2D0    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2D2    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2D4    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2D6    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2D8    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2DA    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2DC    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2DE    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2E0    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2E2    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2E4    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2E6    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2E8    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2EA    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2EC    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2EE    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2F0    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2F2    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2F4    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2F6    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2F8    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2FA    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2FC    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$2FE    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$300    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$302    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$304    $FBFB   UNKNOWN  FBFB            ; Unknown Fxxx instruction
$306    $BC6D   JP       V0, $C6D        ; Jump to V0 + C6D
$308    $F57F   UNKNOWN  F57F            ; Unknown Fxxx instruction
$30A    $E84A   UNKNOWN  $E84A           ; Unknown Exxx instruction
$30C    $ACFB   LD       I, $CFB         ; Load CFB into I
$30E    $6531   LD       V5, #31         ; Load 49 into V5
$310    $376B   SE       V7, #6B         ; Skip if V7 == 107
$312    $3853   SE       V8, #53         ; Skip if V8 == 83
$314    $ACD4   LD       I, $CD4         ; Load CD4 into I
$316    $58BB   UNKNOWN  $58BB           ; Unknown 5xxx instruction
$318    $9AA1   UNKNOWN  $9AA1           ; Unknown 9xxx instruction
$31A    $2912   CALL     $912            ; Call subroutine at 912
$31C    $1F8B   JP       $F8B            ; Jump to F8B
$31E    $E4D7   UNKNOWN  $E4D7           ; Unknown Exxx instruction
$320    $8094   ADD      V0, V9          ; V0 += V9, VF = carry
$322    $94AD   UNKNOWN  $94AD           ; Unknown 9xxx instruction
$324    $31A3   SE       V1, #A3         ; Skip if V1 == 163
$326    $E85E   UNKNOWN  $E85E           ; Unknown Exxx instruction
$328    $87BD   UNKNOWN  87BD            ; Unknown 8xxx instruction
$32A    $7C72   ADD      VC, #72         ; Add 114 to VC
$32C    $7A6F   ADD      VA, #6F         ; Add 111 to VA
$32E    $96BD   UNKNOWN  $96BD           ; Unknown 9xxx instruction
$330    $267B   CALL     $67B            ; Call subroutine at 67B
$332    $D0CB   DRW      V0, VC, #B      ; Draw 11-byte sprite at V0, VC
$334    $2549   CALL     $549            ; Call subroutine at 549
$336    $0A99   SYS      $A99            ; System call to A99
$338    $FA05   UNKNOWN  FA05            ; Unknown Fxxx instruction
$33A    $55BC   UNKNOWN  $55BC           ; Unknown 5xxx instruction
$33C    $8C14   ADD      VC, V1          ; VC += V1, VF = carry
$33E    $C27A   RND      V2, #7A         ; V2 = random & 7A
$340    $F0A6   UNKNOWN  F0A6            ; Unknown Fxxx instruction
$342    $D288   DRW      V2, V8, #8      ; Draw 8-byte sprite at V2, V8
$344    $353A   SE       V5, #3A         ; Skip if V5 == 58
$346    $D002   DRW      V0, V0, #2      ; Draw 2-byte sprite at V0, V0
$348    $952A   UNKNOWN  $952A           ; Unknown 9xxx instruction
$34A    $0B0F   SYS      $B0F            ; System call to B0F
$34C    $65EC   LD       V5, #EC         ; Load 236 into V5
$34E    $01CC   SYS      $1CC            ; System call to 1CC
$350    $2B85   CALL     $B85            ; Call subroutine at B85
$352    $D1CE   DRW      V1, VC, #E      ; Draw 14-byte sprite at V1, VC
$354    $C66F   RND      V6, #6F         ; V6 = random & 6F
$356    $2CA4   CALL     $CA4            ; Call subroutine at CA4
$358    $2D7A   CALL     $D7A            ; Call subroutine at D7A
$35A    $21FD   CALL     $1FD            ; Call subroutine at 1FD
$35C    $3F4E   SE       VF, #4E         ; Skip if VF == 78
$35E    $7FC0   ADD      VF, #C0         ; Add 192 to VF
$360    $1917   JP       $917            ; Jump to 917
$362    $66C8   LD       V6, #C8         ; Load 200 into V6
$364    $18E0   JP       $8E0            ; Jump to 8E0
$366    $B3E7   JP       V0, $3E7        ; Jump to V0 + 3E7
$368    $D8F3   DRW      V8, VF, #3      ; Draw 3-byte sprite at V8, VF
$36A    $08E3   SYS      $8E3            ; System call to 8E3
$36C    $2D87   CALL     $D87            ; Call subroutine at D87
$36E    $8AC6   SHR      VA              ; VA >>= 1, VF = LSB
$370    $72B8   ADD      V2, #B8         ; Add 184 to V2
$372    $AC9D   LD       I, $C9D         ; Load C9D into I
$374    $5A6A   UNKNOWN  $5A6A           ; Unknown 5xxx instruction
$376    $146C   JP       $46C            ; Jump to 46C
$378    $6CB9   LD       VC, #B9         ; Load 185 into VC
$37A    $0061   SYS      $061            ; System call to 061
$37C    $EB35   UNKNOWN  $EB35           ; Unknown Exxx instruction
$37E    $433B   SNE      V3, #3B         ; Skip if V3 != 59
$380    $5B88   UNKNOWN  $5B88           ; Unknown 5xxx instruction
$382    $E75C   UNKNOWN  $E75C           ; Unknown Exxx instruction
$384    $988A   UNKNOWN  $988A           ; Unknown 9xxx instruction
$386    $0058   SYS      $058            ; System call to 058
$388    $FCB4   UNKNOWN  FCB4            ; Unknown Fxxx instruction
$38A    $6D50   LD       VD, #50         ; Load 80 into VD
$38C    $CF0E   RND      VF, #0E         ; VF = random & 0E
$38E    $0766   SYS      $766            ; System call to 766
$390    $5270   SE       V2, V7          ; Skip if V2 == V7
$392    $72CC   ADD      V2, #CC         ; Add 204 to V2
$394    $1B7B   JP       $B7B            ; Jump to B7B
$396    $0A35   SYS      $A35            ; System call to A35
$398    $CD87   RND      VD, #87         ; VD = random & 87
$39A    $6E22   LD       VE, #22         ; Load 34 into VE
$39C    $3117   SE       V1, #17         ; Skip if V1 == 23
$39E    $6B69   LD       VB, #69         ; Load 105 into VB
$3A0    $6800   LD       V8, #00         ; Load 0 into V8
$3A2    $449C   SNE      V4, #9C         ; Skip if V4 != 156
$3A4    $DA8E   DRW      VA, V8, #E      ; Draw 14-byte sprite at VA, V8
$3A6    $F4F1   UNKNOWN  F4F1            ; Unknown Fxxx instruction
$3A8    $331B   SE       V3, #1B         ; Skip if V3 == 27
$3AA    $6710   LD       V7, #10         ; Load 16 into V7
$3AC    $18BB   JP       $8BB            ; Jump to 8BB
$3AE    $F6BD   UNKNOWN  F6BD            ; Unknown Fxxx instruction
$3B0    $B3E7   JP       V0, $3E7        ; Jump to V0 + 3E7
$3B2    $2DF0   CALL     $DF0            ; Call subroutine at DF0
$3B4    $B570   JP       V0, $570        ; Jump to V0 + 570
$3B6    $5160   SE       V1, V6          ; Skip if V1 == V6
$3B8    $BCE9   JP       V0, $CE9        ; Jump to V0 + CE9
$3BA    $AC05   LD       I, $C05         ; Load C05 into I
$3BC    $919F   UNKNOWN  $919F           ; Unknown 9xxx instruction
$3BE    $F6EF   UNKNOWN  F6EF            ; Unknown Fxxx instruction
$3C0    $7FF6   ADD      VF, #F6         ; Add 246 to VF
$3C2    $39F1   SE       V9, #F1         ; Skip if V9 == 241
$3C4    $AB1F   LD       I, $B1F         ; Load B1F into I
$3C6    $3FC5   SE       VF, #C5         ; Skip if VF == 197
$3C8    $AE65   LD       I, $E65         ; Load E65 into I
$3CA    $BCB0   JP       V0, $CB0        ; Jump to V0 + CB0
$3CC    $4739   SNE      V7, #39         ; Skip if V7 != 57
$3CE    $0F53   SYS      $F53            ; System call to F53
$3D0    $4874   SNE      V8, #74         ; Skip if V8 != 116
$3D2    $881F   UNKNOWN  881F            ; Unknown 8xxx instruction
$3D4    $4236   SNE      V2, #36         ; Skip if V2 != 54
$3D6    $FD7B   UNKNOWN  FD7B            ; Unknown Fxxx instruction
$3D8    $D739   DRW      V7, V3, #9      ; Draw 9-byte sprite at V7, V3
$3DA    $9EFA   UNKNOWN  $9EFA           ; Unknown 9xxx instruction
$3DC    $904D   UNKNOWN  $904D           ; Unknown 9xxx instruction
$3DE    $1C1A   JP       $C1A            ; Jump to C1A
$3E0    $30A3   SE       V0, #A3         ; Skip if V0 == 163
$3E2    $4294   SNE      V2, #94         ; Skip if V2 != 148
$3E4    $B49E   JP       V0, $49E        ; Jump to V0 + 49E
$3E6    $2857   CALL     $857            ; Call subroutine at 857
$3E8    $4A82   SNE      VA, #82         ; Skip if VA != 130
$3EA    $FB31   UNKNOWN  FB31            ; Unknown Fxxx instruction
$3EC    $2B34   CALL     $B34            ; Call subroutine at B34
$3EE    $A6AA   LD       I, $6AA         ; Load 6AA into I
$3F0    $3C27   SE       VC, #27         ; Skip if VC == 39
$3F2    $DC07   DRW      VC, V0, #7      ; Draw 7-byte sprite at VC, V0
$3F4    $9889   UNKNOWN  $9889           ; Unknown 9xxx instruction
$3F6    $FEBF   UNKNOWN  FEBF            ; Unknown Fxxx instruction
$3F8    $732B   ADD      V3, #2B         ; Add 43 to V3
$3FA    $ECAA   UNKNOWN  $ECAA           ; Unknown Exxx instruction
$3FC    $F786   UNKNOWN  F786            ; Unknown Fxxx instruction
$3FE    $178D   JP       $78D            ; Jump to 78D
$400    $EF6E   UNKNOWN  $EF6E           ; Unknown Exxx instruction
$402    $AFC2   LD       I, $FC2         ; Load FC2 into I
$404    $85D3   XOR      V5, VD          ; V5 ^= VD
$406    $C2D4   RND      V2, #D4         ; V2 = random & D4
$408    $0E07   SYS      $E07            ; System call to E07
$40A    $B43D   JP       V0, $43D        ; Jump to V0 + 43D
$40C    $AA4E   LD       I, $A4E         ; Load A4E into I
$40E    $9F76   UNKNOWN  $9F76           ; Unknown 9xxx instruction
$410    $21C3   CALL     $1C3            ; Call subroutine at 1C3
$412    $925F   UNKNOWN  $925F           ; Unknown 9xxx instruction
$414    $8117   SUBN     V1, V1          ; V1 = V1 - V1, VF = !borrow
$416    $7D92   ADD      VD, #92         ; Add 146 to VD
$418    $3EDF   SE       VE, #DF         ; Skip if VE == 223
$41A    $38B7   SE       V8, #B7         ; Skip if V8 == 183
$41C    $D278   DRW      V2, V7, #8      ; Draw 8-byte sprite at V2, V7
$41E    $1B5D   JP       $B5D            ; Jump to B5D
$420    $7F21   ADD      VF, #21         ; Add 33 to VF
$422    $635D   LD       V3, #5D         ; Load 93 into V3
$424    $BF88   JP       V0, $F88        ; Jump to V0 + F88
$426    $3D88   SE       VD, #88         ; Skip if VD == 136
$428    $9577   UNKNOWN  $9577           ; Unknown 9xxx instruction
$42A    $4756   SNE      V7, #56         ; Skip if V7 != 86
$42C    $2F76   CALL     $F76            ; Call subroutine at F76
$42E    $3632   SE       V6, #32         ; Skip if V6 == 50
$430    $1AE6   JP       $AE6            ; Jump to AE6
$432    $1CEE   JP       $CEE            ; Jump to CEE
$434    $3A3F   SE       VA, #3F         ; Skip if VA == 63
$436    $E1A4   UNKNOWN  $E1A4           ; Unknown Exxx instruction
$438    $04C3   SYS      $4C3            ; System call to 4C3
$43A    $4350   SNE      V3, #50         ; Skip if V3 != 80
$43C    $7042   ADD      V0, #42         ; Add 66 to V0
$43E    $C03E   RND      V0, #3E         ; V0 = random & 3E
$440    $22AD   CALL     $2AD            ; Call subroutine at 2AD
$442    $026C   SYS      $26C            ; System call to 26C
$444    $E3CF   UNKNOWN  $E3CF           ; Unknown Exxx instruction
$446    $90AD   UNKNOWN  $90AD           ; Unknown 9xxx instruction
$448    $407C   SNE      V0, #7C         ; Skip if V0 != 124
$44A    $01C6   SYS      $1C6            ; System call to 1C6
$44C    $132C   JP       $32C            ; Jump to 32C
$44E    $8DE6   SHR      VD              ; VD >>= 1, VF = LSB
$450    $A006   LD       I, $006         ; Load 006 into I
$452    $3E5B   SE       VE, #5B         ; Skip if VE == 91
$454    $3FBA   SE       VF, #BA         ; Skip if VF == 186
$456    $E8A1   SKNP     V8              ; Skip if key V8 not pressed
$458    $5F45   UNKNOWN  $5F45           ; Unknown 5xxx instruction
$45A    $FFB4   UNKNOWN  FFB4            ; Unknown Fxxx instruction
$45C    $5675   UNKNOWN  $5675           ; Unknown 5xxx instruction
$45E    $EFA0   UNKNOWN  $EFA0           ; Unknown Exxx instruction
$460    $8C10   LD       VC, V1          ; VC = V1
$462    $A3B7   LD       I, $3B7         ; Load 3B7 into I
$464    $BAFD   JP       V0, $AFD        ; Jump to V0 + AFD
$466    $DE7B   DRW      VE, V7, #B      ; Draw 11-byte sprite at VE, V7
$468    $7990   ADD      V9, #90         ; Add 144 to V9
$46A    $9ADA   UNKNOWN  $9ADA           ; Unknown 9xxx instruction
$46C    $70CD   ADD      V0, #CD         ; Add 205 to V0
$46E    $799C   ADD      V9, #9C         ; Add 156 to V9
$470    $6C4A   LD       VC, #4A         ; Load 74 into VC
$472    $CCB0   RND      VC, #B0         ; VC = random & B0
$474    $6BD1   LD       VB, #D1         ; Load 209 into VB
$476    $64C2   LD       V4, #C2         ; Load 194 into V4
$478    $13DB   JP       $3DB            ; Jump to 3DB
$47A    $BDD8   JP       V0, $DD8        ; Jump to V0 + DD8
$47C    $7AFF   ADD      VA, #FF         ; Add 255 to VA
$47E    $9949   UNKNOWN  $9949           ; Unknown 9xxx instruction
$480    $322F   SE       V2, #2F         ; Skip if V2 == 47
$482    $0BBF   SYS      $BBF            ; System call to BBF
$484    $435F   SNE      V3, #5F         ; Skip if V3 != 95
$486    $CE50   RND      VE, #50         ; VE = random & 50
$488    $2EEB   CALL     $EEB            ; Call subroutine at EEB
$48A    $96F0   SNE      V6, VF          ; Skip if V6 != VF
$48C    $DECC   DRW      VE, VC, #C      ; Draw 12-byte sprite at VE, VC
$48E    $3369   SE       V3, #69         ; Skip if V3 == 105
$490    $64B6   LD       V4, #B6         ; Load 182 into V4
$492    $DE2F   DRW      VE, V2, #F      ; Draw 15-byte sprite at VE, V2
$494    $50A6   UNKNOWN  $50A6           ; Unknown 5xxx instruction
$496    $15A4   JP       $5A4            ; Jump to 5A4
$498    $6943   LD       V9, #43         ; Load 67 into V9
$49A    $0A6D   SYS      $A6D            ; System call to A6D
$49C    $3CD8   SE       VC, #D8         ; Skip if VC == 216
$49E    $0E9F   SYS      $E9F            ; System call to E9F
$4A0    $A2E7   LD       I, $2E7         ; Load 2E7 into I
$4A2    $C47D   RND      V4, #7D         ; V4 = random & 7D
$4A4    $5F5E   UNKNOWN  $5F5E           ; Unknown 5xxx instruction
$4A6    $E6C8   UNKNOWN  $E6C8           ; Unknown Exxx instruction
$4A8    $AA1A   LD       I, $A1A         ; Load A1A into I
$4AA    $8DDA   UNKNOWN  8DDA            ; Unknown 8xxx instruction
$4AC    $52A4   UNKNOWN  $52A4           ; Unknown 5xxx instruction
$4AE    $3426   SE       V4, #26         ; Skip if V4 == 38
$4B0    $A08D   LD       I, $08D         ; Load 08D into I
$4B2    $7F01   ADD      VF, #01         ; Add 1 to VF
$4B4    $7B96   ADD      VB, #96         ; Add 150 to VB
$4B6    $2086   CALL     $086            ; Call subroutine at 086
$4B8    $8EB0   LD       VE, VB          ; VE = VB
$4BA    $C70E   RND      V7, #0E         ; V7 = random & 0E
$4BC    $BD8C   JP       V0, $D8C        ; Jump to V0 + D8C
$4BE    $6F31   LD       VF, #31         ; Load 49 into VF
$4C0    $EB2B   UNKNOWN  $EB2B           ; Unknown Exxx instruction
$4C2    $4474   SNE      V4, #74         ; Skip if V4 != 116
$4C4    $56F3   UNKNOWN  $56F3           ; Unknown 5xxx instruction
$4C6    $3DC4   SE       VD, #C4         ; Skip if VD == 196
$4C8    $F185   UNKNOWN  F185            ; Unknown Fxxx instruction
$4CA    $6DDB   LD       VD, #DB         ; Load 219 into VD
$4CC    $6D39   LD       VD, #39         ; Load 57 into VD
$4CE    $E55A   UNKNOWN  $E55A           ; Unknown Exxx instruction
$4D0    $DE24   DRW      VE, V2, #4      ; Draw 4-byte sprite at VE, V2
$4D2    $7414   ADD      V4, #14         ; Add 20 to V4
$4D4    $1CC7   JP       $CC7            ; Jump to CC7
$4D6    $152B   JP       $52B            ; Jump to 52B
$4D8    $6E45   LD       VE, #45         ; Load 69 into VE
$4DA    $202F   CALL     $02F            ; Call subroutine at 02F
$4DC    $330E   SE       V3, #0E         ; Skip if V3 == 14
$4DE    $5DE9   UNKNOWN  $5DE9           ; Unknown 5xxx instruction
$4E0    $6C3A   LD       VC, #3A         ; Load 58 into VC
$4E2    $8695   SUB      V6, V9          ; V6 -= V9, VF = !borrow
$4E4    $F9E2   UNKNOWN  F9E2            ; Unknown Fxxx instruction
$4E6    $869B   UNKNOWN  869B            ; Unknown 8xxx instruction
$4E8    $6948   LD       V9, #48         ; Load 72 into V9
$4EA    $55F3   UNKNOWN  $55F3           ; Unknown 5xxx instruction
$4EC    $EFA2   UNKNOWN  $EFA2           ; Unknown Exxx instruction
$4EE    $0934   SYS      $934            ; System call to 934
$4F0    $6277   LD       V2, #77         ; Load 119 into V2
$4F2    $059A   SYS      $59A            ; System call to 59A
$4F4    $6587   LD       V5, #87         ; Load 135 into V5
$4F6    $A716   LD       I, $716         ; Load 716 into I
$4F8    $4EBB   SNE      VE, #BB         ; Skip if VE != 187
$4FA    $0AA4   SYS      $AA4            ; System call to AA4
$4FC    $18F3   JP       $8F3            ; Jump to 8F3
$4FE    $E41A   UNKNOWN  $E41A           ; Unknown Exxx instruction
$500    $DEA3   DRW      VE, VA, #3      ; Draw 3-byte sprite at VE, VA
$502    $0C41   SYS      $C41            ; System call to C41
$504    $95B6   UNKNOWN  $95B6           ; Unknown 9xxx instruction
$506    $74EE   ADD      V4, #EE         ; Add 238 to V4
$508    $BA41   JP       V0, $A41        ; Jump to V0 + A41
$50A    $425A   SNE      V2, #5A         ; Skip if V2 != 90
$50C    $8F08   UNKNOWN  8F08            ; Unknown 8xxx instruction
$50E    $AE72   LD       I, $E72         ; Load E72 into I
$510    $FD79   UNKNOWN  FD79            ; Unknown Fxxx instruction
$512    $B103   JP       V0, $103        ; Jump to V0 + 103
$514    $C1F5   RND      V1, #F5         ; V1 = random & F5
$516    $ACA5   LD       I, $CA5         ; Load CA5 into I
$518    $9DD8   UNKNOWN  $9DD8           ; Unknown 9xxx instruction
$51A    $3932   SE       V9, #32         ; Skip if V9 == 50
$51C    $3577   SE       V5, #77         ; Skip if V5 == 119
$51E    $E525   UNKNOWN  $E525           ; Unknown Exxx instruction
$520    $681C   LD       V8, #1C         ; Load 28 into V8
$522    $3EC3   SE       VE, #C3         ; Skip if VE == 195
$524    $E40E   UNKNOWN  $E40E           ; Unknown Exxx instruction
$526    $A737   LD       I, $737         ; Load 737 into I
$528    $BA9E   JP       V0, $A9E        ; Jump to V0 + A9E
$52A    $718A   ADD      V1, #8A         ; Add 138 to V1
$52C    $D148   DRW      V1, V4, #8      ; Draw 8-byte sprite at V1, V4
$52E    $A08E   LD       I, $08E         ; Load 08E into I
$530    $CDAD   RND      VD, #AD         ; VD = random & AD
$532    $98FD   UNKNOWN  $98FD           ; Unknown 9xxx instruction
$534    $E832   UNKNOWN  $E832           ; Unknown Exxx instruction
$536    $6CA8   LD       VC, #A8         ; Load 168 into VC
$538    $B0B0   JP       V0, $0B0        ; Jump to V0 + 0B0
$53A    $E99A   UNKNOWN  $E99A           ; Unknown Exxx instruction
$53C    $39A1   SE       V9, #A1         ; Skip if V9 == 161
$53E    $B26B   JP       V0, $26B        ; Jump to V0 + 26B
$540    $97D5   UNKNOWN  $97D5           ; Unknown 9xxx instruction
$542    $F24C   UNKNOWN  F24C            ; Unknown Fxxx instruction
$544    $9808   UNKNOWN  $9808           ; Unknown 9xxx instruction
$546    $6135   LD       V1, #35         ; Load 53 into V1
$548    $10C2   JP       $0C2            ; Jump to 0C2
$54A    $2529   CALL     $529            ; Call subroutine at 529
$54C    $DC63   DRW      VC, V6, #3      ; Draw 3-byte sprite at VC, V6
$54E    $84AD   UNKNOWN  84AD            ; Unknown 8xxx instruction
$550    $DE8E   DRW      VE, V8, #E      ; Draw 14-byte sprite at VE, V8
$552    $5247   UNKNOWN  $5247           ; Unknown 5xxx instruction
$554    $A0AE   LD       I, $0AE         ; Load 0AE into I
$556    $383C   SE       V8, #3C         ; Skip if V8 == 60
$558    $2A9E   CALL     $A9E            ; Call subroutine at A9E
$55A    $8382   AND      V3, V8          ; V3 &= V8
$55C    $B480   JP       V0, $480        ; Jump to V0 + 480
$55E    $62F5   LD       V2, #F5         ; Load 245 into V2
$560    $B4E5   JP       V0, $4E5        ; Jump to V0 + 4E5
$562    $E6C2   UNKNOWN  $E6C2           ; Unknown Exxx instruction
$564    $4926   SNE      V9, #26         ; Skip if V9 != 38
$566    $84A7   SUBN     V4, VA          ; V4 = VA - V4, VF = !borrow
$568    $5DD1   UNKNOWN  $5DD1           ; Unknown 5xxx instruction
$56A    $E6DA   UNKNOWN  $E6DA           ; Unknown Exxx instruction
$56C    $7494   ADD      V4, #94         ; Add 148 to V4
$56E    $9EDC   UNKNOWN  $9EDC           ; Unknown 9xxx instruction
$570    $7626   ADD      V6, #26         ; Add 38 to V6
$572    $749B   ADD      V4, #9B         ; Add 155 to V4
$574    $8038   UNKNOWN  8038            ; Unknown 8xxx instruction
$576    $DF8D   DRW      VF, V8, #D      ; Draw 13-byte sprite at VF, V8
$578    $C009   RND      V0, #09         ; V0 = random & 09
$57A    $8CA6   SHR      VC              ; VC >>= 1, VF = LSB
$57C    $60DB   LD       V0, #DB         ; Load 219 into V0
$57E    $66D9   LD       V6, #D9         ; Load 217 into V6
$580    $4909   SNE      V9, #09         ; Skip if V9 != 9
$582    $7F87   ADD      VF, #87         ; Add 135 to VF
$584    $B5CC   JP       V0, $5CC        ; Jump to V0 + 5CC
$586    $07CA   SYS      $7CA            ; System call to 7CA
$588    $7AB0   ADD      VA, #B0         ; Add 176 to VA
$58A    $A73C   LD       I, $73C         ; Load 73C into I
$58C    $70E9   ADD      V0, #E9         ; Add 233 to V0
$58E    $CF58   RND      VF, #58         ; VF = random & 58
$590    $E56D   UNKNOWN  $E56D           ; Unknown Exxx instruction
$592    $1400   JP       $400            ; Jump to 400
$594    $60B0   LD       V0, #B0         ; Load 176 into V0
$596    $3F63   SE       VF, #63         ; Skip if VF == 99
$598    $0D87   SYS      $D87            ; System call to D87
$59A    $57CC   UNKNOWN  $57CC           ; Unknown 5xxx instruction
$59C    $D1CF   DRW      V1, VC, #F      ; Draw 15-byte sprite at V1, VC
$59E    $4B09   SNE      VB, #09         ; Skip if VB != 9
$5A0    $95FE   UNKNOWN  $95FE           ; Unknown 9xxx instruction
$5A2    $71E8   ADD      V1, #E8         ; Add 232 to V1
$5A4    $C8B0   RND      V8, #B0         ; V8 = random & B0
$5A6    $C31F   RND      V3, #1F         ; V3 = random & 1F
$5A8    $B35B   JP       V0, $35B        ; Jump to V0 + 35B
$5AA    $A344   LD       I, $344         ; Load 344 into I
$5AC    $0AC0   SYS      $AC0            ; System call to AC0
$5AE    $ED40   UNKNOWN  $ED40           ; Unknown Exxx instruction
$5B0    $2091   CALL     $091            ; Call subroutine at 091
$5B2    $C14B   RND      V1, #4B         ; V1 = random & 4B
$5B4    $01A2   SYS      $1A2            ; System call to 1A2
$5B6    $CA60   RND      VA, #60         ; VA = random & 60
$5B8    $C72F   RND      V7, #2F         ; V7 = random & 2F
$5BA    $E571   UNKNOWN  $E571           ; Unknown Exxx instruction
$5BC    $75EA   ADD      V5, #EA         ; Add 234 to V5
$5BE    $E78C   UNKNOWN  $E78C           ; Unknown Exxx instruction
$5C0    $FD46   UNKNOWN  FD46            ; Unknown Fxxx instruction
$5C2    $BD14   JP       V0, $D14        ; Jump to V0 + D14
$5C4    $8504   ADD      V5, V0          ; V5 += V0, VF = carry
$5C6    $E2DC   UNKNOWN  $E2DC           ; Unknown Exxx instruction
$5C8    $5DC0   SE       VD, VC          ; Skip if VD == VC
$5CA    $F18D   UNKNOWN  F18D            ; Unknown Fxxx instruction
$5CC    $2F14   CALL     $F14            ; Call subroutine at F14
$5CE    $DBFC   DRW      VB, VF, #C      ; Draw 12-byte sprite at VB, VF
$5D0    $AA52   LD       I, $A52         ; Load A52 into I
$5D2    $DD25   DRW      VD, V2, #5      ; Draw 5-byte sprite at VD, V2
$5D4    $5B2C   UNKNOWN  $5B2C           ; Unknown 5xxx instruction
$5D6    $1761   JP       $761            ; Jump to 761
$5D8    $8457   SUBN     V4, V5          ; V4 = V5 - V4, VF = !borrow
$5DA    $165C   JP       $65C            ; Jump to 65C
$5DC    $D5FE   DRW      V5, VF, #E      ; Draw 14-byte sprite at V5, VF
$5DE    $B981   JP       V0, $981        ; Jump to V0 + 981
$5E0    $E64C   UNKNOWN  $E64C           ; Unknown Exxx instruction
$5E2    $6A11   LD       VA, #11         ; Load 17 into VA
$5E4    $D3E3   DRW      V3, VE, #3      ; Draw 3-byte sprite at V3, VE
$5E6    $81E4   ADD      V1, VE          ; V1 += VE, VF = carry
$5E8    $DF76   DRW      VF, V7, #6      ; Draw 6-byte sprite at VF, V7
$5EA    $5CB7   UNKNOWN  $5CB7           ; Unknown 5xxx instruction
$5EC    $E670   UNKNOWN  $E670           ; Unknown Exxx instruction
$5EE    $C4B4   RND      V4, #B4         ; V4 = random & B4
$5F0    $4E5E   SNE      VE, #5E         ; Skip if VE != 94
$5F2    $24AC   CALL     $4AC            ; Call subroutine at 4AC
$5F4    $2E09   CALL     $E09            ; Call subroutine at E09
$5F6    $F03E   UNKNOWN  F03E            ; Unknown Fxxx instruction
$5F8    $F2EF   UNKNOWN  F2EF            ; Unknown Fxxx instruction
$5FA    $DFC0   DRW      VF, VC, #0      ; Draw 0-byte sprite at VF, VC
$5FC    $D888   DRW      V8, V8, #8      ; Draw 8-byte sprite at V8, V8
$5FE    $1C17   JP       $C17            ; Jump to C17
$600    $7CB7   ADD      VC, #B7         ; Add 183 to VC
$602    $19BB   JP       $9BB            ; Jump to 9BB
$604    $0C7D   SYS      $C7D            ; System call to C7D
$606    $B86D   JP       V0, $86D        ; Jump to V0 + 86D
$608    $3879   SE       V8, #79         ; Skip if V8 == 121
$60A    $2CE0   CALL     $CE0            ; Call subroutine at CE0
$60C    $877F   UNKNOWN  877F            ; Unknown 8xxx instruction
$60E    $BC85   JP       V0, $C85        ; Jump to V0 + C85
$610    $9AAB   UNKNOWN  $9AAB           ; Unknown 9xxx instruction
$612    $BBC6   JP       V0, $BC6        ; Jump to V0 + BC6
$614    $D2D1   DRW      V2, VD, #1      ; Draw 1-byte sprite at V2, VD
$616    $8871   OR       V8, V7          ; V8 |= V7
$618    $6517   LD       V5, #17         ; Load 23 into V5
$61A    $79BD   ADD      V9, #BD         ; Add 189 to V9
$61C    $1FF1   JP       $FF1            ; Jump to FF1
$61E    $2621   CALL     $621            ; Call subroutine at 621
$620    $5EBA   UNKNOWN  $5EBA           ; Unknown 5xxx instruction
$622    $6852   LD       V8, #52         ; Load 82 into V8
$624    $05A3   SYS      $5A3            ; System call to 5A3
$626    $8C7A   UNKNOWN  8C7A            ; Unknown 8xxx instruction
$628    $C3A1   RND      V3, #A1         ; V3 = random & A1
$62A    $6213   LD       V2, #13         ; Load 19 into V2
$62C    $72A6   ADD      V2, #A6         ; Add 166 to V2
$62E    $D868   DRW      V8, V6, #8      ; Draw 8-byte sprite at V8, V6
$630    $5B2A   UNKNOWN  $5B2A           ; Unknown 5xxx instruction
$632    $ADA8   LD       I, $DA8         ; Load DA8 into I
$634    $4271   SNE      V2, #71         ; Skip if V2 != 113
$636    $8015   SUB      V0, V1          ; V0 -= V1, VF = !borrow
$638    $E919   UNKNOWN  $E919           ; Unknown Exxx instruction
$63A    $54B4   UNKNOWN  $54B4           ; Unknown 5xxx instruction
$63C    $30F3   SE       V0, #F3         ; Skip if V0 == 243
$63E    $F106   UNKNOWN  F106            ; Unknown Fxxx instruction
$640    $3F54   SE       VF, #54         ; Skip if VF == 84
$642    $DB56   DRW      VB, V5, #6      ; Draw 6-byte sprite at VB, V5
$644    $1DC8   JP       $DC8            ; Jump to DC8
$646    $0573   SYS      $573            ; System call to 573
$648    $797A   ADD      V9, #7A         ; Add 122 to V9
$64A    $E7B3   UNKNOWN  $E7B3           ; Unknown Exxx instruction
$64C    $21E9   CALL     $1E9            ; Call subroutine at 1E9
$64E    $3252   SE       V2, #52         ; Skip if V2 == 82
$650    $538A   UNKNOWN  $538A           ; Unknown 5xxx instruction
$652    $E276   UNKNOWN  $E276           ; Unknown Exxx instruction
$654    $EB32   UNKNOWN  $EB32           ; Unknown Exxx instruction
$656    $B617   JP       V0, $617        ; Jump to V0 + 617
$658    $7506   ADD      V5, #06         ; Add 6 to V5
$65A    $4A99   SNE      VA, #99         ; Skip if VA != 153
$65C    $D7D5   DRW      V7, VD, #5      ; Draw 5-byte sprite at V7, VD
$65E    $B9C0   JP       V0, $9C0        ; Jump to V0 + 9C0
$660    $5981   UNKNOWN  $5981           ; Unknown 5xxx instruction
$662    $FB34   UNKNOWN  FB34            ; Unknown Fxxx instruction
$664    $AF16   LD       I, $F16         ; Load F16 into I
$666    $1F8F   JP       $F8F            ; Jump to F8F
$668    $BF1B   JP       V0, $F1B        ; Jump to V0 + F1B
$66A    $17B5   JP       $7B5            ; Jump to 7B5
$66C    $59BF   UNKNOWN  $59BF           ; Unknown 5xxx instruction
$66E    $8F18   UNKNOWN  8F18            ; Unknown 8xxx instruction
$670    $02AF   SYS      $2AF            ; System call to 2AF
$672    $C52E   RND      V5, #2E         ; V5 = random & 2E
$674    $AD16   LD       I, $D16         ; Load D16 into I
$676    $56D9   UNKNOWN  $56D9           ; Unknown 5xxx instruction
$678    $DF2E   DRW      VF, V2, #E      ; Draw 14-byte sprite at VF, V2
$67A    $177F   JP       $77F            ; Jump to 77F
$67C    $F459   UNKNOWN  F459            ; Unknown Fxxx instruction
$67E    $8D16   SHR      VD              ; VD >>= 1, VF = LSB
$680    $48E7   SNE      V8, #E7         ; Skip if V8 != 231
$682    $5C0C   UNKNOWN  $5C0C           ; Unknown 5xxx instruction
$684    $3B62   SE       VB, #62         ; Skip if VB == 98
$686    $3525   SE       V5, #25         ; Skip if V5 == 37
$688    $D57B   DRW      V5, V7, #B      ; Draw 11-byte sprite at V5, V7
$68A    $C333   RND      V3, #33         ; V3 = random & 33
$68C    $942F   UNKNOWN  $942F           ; Unknown 9xxx instruction
$68E    $9D0D   UNKNOWN  $9D0D           ; Unknown 9xxx instruction
$690    $4647   SNE      V6, #47         ; Skip if V6 != 71
$692    $F4DA   UNKNOWN  F4DA            ; Unknown Fxxx instruction
$694    $28D8   CALL     $8D8            ; Call subroutine at 8D8
$696    $BAC2   JP       V0, $AC2        ; Jump to V0 + AC2
$698    $B7BD   JP       V0, $7BD        ; Jump to V0 + 7BD
$69A    $B4AF   JP       V0, $4AF        ; Jump to V0 + 4AF
$69C    $47A3   SNE      V7, #A3         ; Skip if V7 != 163
$69E    $2079   CALL     $079            ; Call subroutine at 079
$6A0    $3EA2   SE       VE, #A2         ; Skip if VE == 162
$6A2    $8B9D   UNKNOWN  8B9D            ; Unknown 8xxx instruction
$6A4    $2605   CALL     $605            ; Call subroutine at 605
$6A6    $3180   SE       V1, #80         ; Skip if V1 == 128
$6A8    $8B62   AND      VB, V6          ; VB &= V6
$6AA    $7CA3   ADD      VC, #A3         ; Add 163 to VC
$6AC    $3B31   SE       VB, #31         ; Skip if VB == 49
$6AE    $9B68   UNKNOWN  $9B68           ; Unknown 9xxx instruction
$6B0    $EAF3   UNKNOWN  $EAF3           ; Unknown Exxx instruction
$6B2    $8C1A   UNKNOWN  8C1A            ; Unknown 8xxx instruction
$6B4    $47E6   SNE      V7, #E6         ; Skip if V7 != 230
$6B6    $94D3   UNKNOWN  $94D3           ; Unknown 9xxx instruction
$6B8    $CD39   RND      VD, #39         ; VD = random & 39
$6BA    $FB81   UNKNOWN  FB81            ; Unknown Fxxx instruction
$6BC    $79C4   ADD      V9, #C4         ; Add 196 to V9
$6BE    $7462   ADD      V4, #62         ; Add 98 to V4
$6C0    $E9EC   UNKNOWN  $E9EC           ; Unknown Exxx instruction
$6C2    $837B   UNKNOWN  837B            ; Unknown 8xxx instruction
$6C4    $456C   SNE      V5, #6C         ; Skip if V5 != 108
$6C6    $C363   RND      V3, #63         ; V3 = random & 63
$6C8    $B5B3   JP       V0, $5B3        ; Jump to V0 + 5B3
$6CA    $18A9   JP       $8A9            ; Jump to 8A9
$6CC    $2548   CALL     $548            ; Call subroutine at 548
$6CE    $524C   UNKNOWN  $524C           ; Unknown 5xxx instruction
$6D0    $6102   LD       V1, #02         ; Load 2 into V1
$6D2    $0408   SYS      $408            ; System call to 408
$6D4    $F613   UNKNOWN  F613            ; Unknown Fxxx instruction
$6D6    $8E2C   UNKNOWN  8E2C            ; Unknown 8xxx instruction
$6D8    $D5FB   DRW      V5, VF, #B      ; Draw 11-byte sprite at V5, VF
$6DA    $EFE0   UNKNOWN  $EFE0           ; Unknown Exxx instruction
$6DC    $D3C2   DRW      V3, VC, #2      ; Draw 2-byte sprite at V3, VC
$6DE    $05D1   SYS      $5D1            ; System call to 5D1
$6E0    $4136   SNE      V1, #36         ; Skip if V1 != 54
$6E2    $B337   JP       V0, $337        ; Jump to V0 + 337
$6E4    $CE02   RND      VE, #02         ; VE = random & 02
$6E6    $A0AB   LD       I, $0AB         ; Load 0AB into I
$6E8    $9A4C   UNKNOWN  $9A4C           ; Unknown 9xxx instruction
$6EA    $A5A0   LD       I, $5A0         ; Load 5A0 into I
$6EC    $BC35   JP       V0, $C35        ; Jump to V0 + C35
$6EE    $577B   UNKNOWN  $577B           ; Unknown 5xxx instruction
$6F0    $AFCB   LD       I, $FCB         ; Load FCB into I
$6F2    $0BD2   SYS      $BD2            ; System call to BD2
$6F4    $024A   SYS      $24A            ; System call to 24A
$6F6    $0F7F   SYS      $F7F            ; System call to F7F
$6F8    $12AD   JP       $2AD            ; Jump to 2AD
$6FA    $E701   UNKNOWN  $E701           ; Unknown Exxx instruction
$6FC    $E68D   UNKNOWN  $E68D           ; Unknown Exxx instruction
$6FE    $587E   UNKNOWN  $587E           ; Unknown 5xxx instruction
$700    $2D16   CALL     $D16            ; Call subroutine at D16
$702    $6B8C   LD       VB, #8C         ; Load 140 into VB
$704    $7CA5   ADD      VC, #A5         ; Add 165 to VC
$706    $EB23   UNKNOWN  $EB23           ; Unknown Exxx instruction
$708    $FDDB   UNKNOWN  FDDB            ; Unknown Fxxx instruction
$70A    $F224   UNKNOWN  F224            ; Unknown Fxxx instruction
$70C    $53A9   UNKNOWN  $53A9           ; Unknown 5xxx instruction
$70E    $685A   LD       V8, #5A         ; Load 90 into V8
$710    $3308   SE       V3, #08         ; Skip if V3 == 8
$712    $CC13   RND      VC, #13         ; VC = random & 13
$714    $8262   AND      V2, V6          ; V2 &= V6
$716    $B109   JP       V0, $109        ; Jump to V0 + 109
$718    $6849   LD       V8, #49         ; Load 73 into V8
$71A    $788E   ADD      V8, #8E         ; Add 142 to V8
$71C    $861F   UNKNOWN  861F            ; Unknown 8xxx instruction
$71E    $4F4C   SNE      VF, #4C         ; Skip if VF != 76
$720    $B7E3   JP       V0, $7E3        ; Jump to V0 + 7E3
$722    $4897   SNE      V8, #97         ; Skip if V8 != 151
$724    $956C   UNKNOWN  $956C           ; Unknown 9xxx instruction
$726    $DB5F   DRW      VB, V5, #F      ; Draw 15-byte sprite at VB, V5
$728    $AE60   LD       I, $E60         ; Load E60 into I
$72A    $FE4C   UNKNOWN  FE4C            ; Unknown Fxxx instruction
$72C    $0221   SYS      $221            ; System call to 221
$72E    $F332   UNKNOWN  F332            ; Unknown Fxxx instruction
$730    $F277   UNKNOWN  F277            ; Unknown Fxxx instruction
$732    $01DA   SYS      $1DA            ; System call to 1DA
$734    $7515   ADD      V5, #15         ; Add 21 to V5
$736    $5B63   UNKNOWN  $5B63           ; Unknown 5xxx instruction
$738    $E3E3   UNKNOWN  $E3E3           ; Unknown Exxx instruction
$73A    $A984   LD       I, $984         ; Load 984 into I
$73C    $6FBB   LD       VF, #BB         ; Load 187 into VF
$73E    $26DD   CALL     $6DD            ; Call subroutine at 6DD
$740    $3E6F   SE       VE, #6F         ; Skip if VE == 111
$742    $2578   CALL     $578            ; Call subroutine at 578
$744    $0C80   SYS      $C80            ; System call to C80
$746    $16D6   JP       $6D6            ; Jump to 6D6
$748    $FCEE   UNKNOWN  FCEE            ; Unknown Fxxx instruction
$74A    $1302   JP       $302            ; Jump to 302
$74C    $B1C8   JP       V0, $1C8        ; Jump to V0 + 1C8
$74E    $2BCF   CALL     $BCF            ; Call subroutine at BCF
$750    $CD10   RND      VD, #10         ; VD = random & 10
$752    $79E7   ADD      V9, #E7         ; Add 231 to V9
$754    $6165   LD       V1, #65         ; Load 101 into V1
$756    $8075   SUB      V0, V7          ; V0 -= V7, VF = !borrow
$758    $F055   LD       [I], V0         ; Store V0-V0 at I
$75A    $954E   UNKNOWN  $954E           ; Unknown 9xxx instruction
$75C    $F953   UNKNOWN  F953            ; Unknown Fxxx instruction
$75E    $C79D   RND      V7, #9D         ; V7 = random & 9D
$760    $570B   UNKNOWN  $570B           ; Unknown 5xxx instruction
$762    $6F69   LD       VF, #69         ; Load 105 into VF
$764    $C7E4   RND      V7, #E4         ; V7 = random & E4
$766    $FD75   UNKNOWN  FD75            ; Unknown Fxxx instruction
$768    $C15F   RND      V1, #5F         ; V1 = random & 5F
$76A    $550D   UNKNOWN  $550D           ; Unknown 5xxx instruction
$76C    $DB1A   DRW      VB, V1, #A      ; Draw 10-byte sprite at VB, V1
$76E    $E032   UNKNOWN  $E032           ; Unknown Exxx instruction
$770    $D5F7   DRW      V5, VF, #7      ; Draw 7-byte sprite at V5, VF
$772    $2BFE   CALL     $BFE            ; Call subroutine at BFE
$774    $F78A   UNKNOWN  F78A            ; Unknown Fxxx instruction
$776    $4AC8   SNE      VA, #C8         ; Skip if VA != 200
$778    $5348   UNKNOWN  $5348           ; Unknown 5xxx instruction
$77A    $9060   SNE      V0, V6          ; Skip if V0 != V6
$77C    $C5E4   RND      V5, #E4         ; V5 = random & E4
$77E    $E142   UNKNOWN  $E142           ; Unknown Exxx instruction
$780    $E06A   UNKNOWN  $E06A           ; Unknown Exxx instruction
$782    $ED1B   UNKNOWN  $ED1B           ; Unknown Exxx instruction
$784    $0787   SYS      $787            ; System call to 787
$786    $D03D   DRW      V0, V3, #D      ; Draw 13-byte sprite at V0, V3
$788    $4D2F   SNE      VD, #2F         ; Skip if VD != 47
$78A    $35E4   SE       V5, #E4         ; Skip if V5 == 228
$78C    $32B4   SE       V2, #B4         ; Skip if V2 == 180
$78E    $9F25   UNKNOWN  $9F25           ; Unknown 9xxx instruction
$790    $77A5   ADD      V7, #A5         ; Add 165 to V7
$792    $7FC8   ADD      VF, #C8         ; Add 200 to VF
$794    $5ADB   UNKNOWN  $5ADB           ; Unknown 5xxx instruction
$796    $038D   SYS      $38D            ; System call to 38D
$798    $F54F   UNKNOWN  F54F            ; Unknown Fxxx instruction
$79A    $8402   AND      V4, V0          ; V4 &= V0
$79C    $98DF   UNKNOWN  $98DF           ; Unknown 9xxx instruction
$79E    $C8C8   RND      V8, #C8         ; V8 = random & C8
$7A0    $38F0   SE       V8, #F0         ; Skip if V8 == 240
$7A2    $91CF   UNKNOWN  $91CF           ; Unknown 9xxx instruction
$7A4    $4AFA   SNE      VA, #FA         ; Skip if VA != 250
$7A6    $7D8F   ADD      VD, #8F         ; Add 143 to VD
$7A8    $B003   JP       V0, $003        ; Jump to V0 + 003
$7AA    $7C6D   ADD      VC, #6D         ; Add 109 to VC
$7AC    $AEE8   LD       I, $EE8         ; Load EE8 into I
$7AE    $9A20   SNE      VA, V2          ; Skip if VA != V2
$7B0    $4BF7   SNE      VB, #F7         ; Skip if VB != 247
$7B2    $C942   RND      V9, #42         ; V9 = random & 42
$7B4    $450F   SNE      V5, #0F         ; Skip if V5 != 15
$7B6    $4732   SNE      V7, #32         ; Skip if V7 != 50
$7B8    $E1F5   UNKNOWN  $E1F5           ; Unknown Exxx instruction
$7BA    $4417   SNE      V4, #17         ; Skip if V4 != 23
$7BC    $A2BA   LD       I, $2BA         ; Load 2BA into I
$7BE    $1A85   JP       $A85            ; Jump to A85
$7C0    $72E5   ADD      V2, #E5         ; Add 229 to V2
$7C2    $4346   SNE      V3, #46         ; Skip if V3 != 70
$7C4    $254B   CALL     $54B            ; Call subroutine at 54B
$7C6    $E714   UNKNOWN  $E714           ; Unknown Exxx instruction
$7C8    $F63D   UNKNOWN  F63D            ; Unknown Fxxx instruction
$7CA    $FB1B   UNKNOWN  FB1B            ; Unknown Fxxx instruction
$7CC    $0AC1   SYS      $AC1            ; System call to AC1
$7CE    $A50B   LD       I, $50B         ; Load 50B into I
$7D0    $103A   JP       $03A            ; Jump to 03A
$7D2    $E74D   UNKNOWN  $E74D           ; Unknown Exxx instruction
$7D4    $EB0B   UNKNOWN  $EB0B           ; Unknown Exxx instruction
$7D6    $BA5D   JP       V0, $A5D        ; Jump to V0 + A5D
$7D8    $7FAE   ADD      VF, #AE         ; Add 174 to VF
$7DA    $5F1A   UNKNOWN  $5F1A           ; Unknown 5xxx instruction
$7DC    $0CD3   SYS      $CD3            ; System call to CD3
$7DE    $A361   LD       I, $361         ; Load 361 into I
$7E0    $FFA7   UNKNOWN  FFA7            ; Unknown Fxxx instruction
$7E2    $F58E   UNKNOWN  F58E            ; Unknown Fxxx instruction
$7E4    $6401   LD       V4, #01         ; Load 1 into V4
$7E6    $2B19   CALL     $B19            ; Call subroutine at B19
$7E8    $9E48   UNKNOWN  $9E48           ; Unknown 9xxx instruction
$7EA    $D325   DRW      V3, V2, #5      ; Draw 5-byte sprite at V3, V2
$7EC    $1EC7   JP       $EC7            ; Jump to EC7
$7EE    $1156   JP       $156            ; Jump to 156
$7F0    $8AF1   OR       VA, VF          ; VA |= VF
$7F2    $6929   LD       V9, #29         ; Load 41 into V9
$7F4    $9DE0   SNE      VD, VE          ; Skip if VD != VE
$7F6    $8CE1   OR       VC, VE          ; VC |= VE
$7F8    $42EF   SNE      V2, #EF         ; Skip if V2 != 239
$7FA    $D613   DRW      V6, V1, #3      ; Draw 3-byte sprite at V6, V1
$7FC    $2BA8   CALL     $BA8            ; Call subroutine at BA8
$7FE    $7018   ADD      V0, #18         ; Add 24 to V0
$800    $0193   SYS      $193            ; System call to 193
$802    $742A   ADD      V4, #2A         ; Add 42 to V4
$804    $BD3F   JP       V0, $D3F        ; Jump to V0 + D3F
$806    $4FB7   SNE      VF, #B7         ; Skip if VF != 183
$808    $831D   UNKNOWN  831D            ; Unknown 8xxx instruction
$80A    $D5F5   DRW      V5, VF, #5      ; Draw 5-byte sprite at V5, VF
$80C    $9D5D   UNKNOWN  $9D5D           ; Unknown 9xxx instruction
$80E    $5749   UNKNOWN  $5749           ; Unknown 5xxx instruction
$810    $E6E3   UNKNOWN  $E6E3           ; Unknown Exxx instruction
$812    $89E3   XOR      V9, VE          ; V9 ^= VE
$814    $B684   JP       V0, $684        ; Jump to V0 + 684
$816    $47E1   SNE      V7, #E1         ; Skip if V7 != 225
$818    $6172   LD       V1, #72         ; Load 114 into V1
$81A    $4119   SNE      V1, #19         ; Skip if V1 != 25
$81C    $E0CA   UNKNOWN  $E0CA           ; Unknown Exxx instruction
$81E    $70A9   ADD      V0, #A9         ; Add 169 to V0
$820    $8AAD   UNKNOWN  8AAD            ; Unknown 8xxx instruction
$822    $77EC   ADD      V7, #EC         ; Add 236 to V7
$824    $E1B9   UNKNOWN  $E1B9           ; Unknown Exxx instruction
$826    $2D57   CALL     $D57            ; Call subroutine at D57
$828    $F8BE   UNKNOWN  F8BE            ; Unknown Fxxx instruction
$82A    $A776   LD       I, $776         ; Load 776 into I
$82C    $59A5   UNKNOWN  $59A5           ; Unknown 5xxx instruction
$82E    $A0CD   LD       I, $0CD         ; Load 0CD into I
$830    $5452   UNKNOWN  $5452           ; Unknown 5xxx instruction
$832    $07AD   SYS      $7AD            ; System call to 7AD
$834    $A6EA   LD       I, $6EA         ; Load 6EA into I
$836    $BD67   JP       V0, $D67        ; Jump to V0 + D67
$838    $0C79   SYS      $C79            ; System call to C79
$83A    $9F30   SNE      VF, V3          ; Skip if VF != V3
$83C    $4F93   SNE      VF, #93         ; Skip if VF != 147
$83E    $4552   SNE      V5, #52         ; Skip if V5 != 82
$840    $E7DC   UNKNOWN  $E7DC           ; Unknown Exxx instruction
$842    $7EDA   ADD      VE, #DA         ; Add 218 to VE
$844    $FBA3   UNKNOWN  FBA3            ; Unknown Fxxx instruction
$846    $1586   JP       $586            ; Jump to 586
$848    $E4E3   UNKNOWN  $E4E3           ; Unknown Exxx instruction
$84A    $CE31   RND      VE, #31         ; VE = random & 31
$84C    $D573   DRW      V5, V7, #3      ; Draw 3-byte sprite at V5, V7
$84E    $A189   LD       I, $189         ; Load 189 into I
$850    $8773   XOR      V7, V7          ; V7 ^= V7
$852    $BB24   JP       V0, $B24        ; Jump to V0 + B24
$854    $E17D   UNKNOWN  $E17D           ; Unknown Exxx instruction
$856    $B2DC   JP       V0, $2DC        ; Jump to V0 + 2DC
$858    $490C   SNE      V9, #0C         ; Skip if V9 != 12
$85A    $6CB3   LD       VC, #B3         ; Load 179 into VC
$85C    $A038   LD       I, $038         ; Load 038 into I
$85E    $76AC   ADD      V6, #AC         ; Add 172 to V6
$860    $8AF6   SHR      VA              ; VA >>= 1, VF = LSB
$862    $D3F7   DRW      V3, VF, #7      ; Draw 7-byte sprite at V3, VF
$864    $757F   ADD      V5, #7F         ; Add 127 to V5
$866    $6387   LD       V3, #87         ; Load 135 into V3
$868    $7FC4   ADD      VF, #C4         ; Add 196 to VF
$86A    $7140   ADD      V1, #40         ; Add 64 to V1
$86C    $4D53   SNE      VD, #53         ; Skip if VD != 83
$86E    $CD7D   RND      VD, #7D         ; VD = random & 7D
$870    $CB8B   RND      VB, #8B         ; VB = random & 8B
$872    $601A   LD       V0, #1A         ; Load 26 into V0
$874    $EE8A   UNKNOWN  $EE8A           ; Unknown Exxx instruction
$876    $D2C0   DRW      V2, VC, #0      ; Draw 0-byte sprite at V2, VC
$878    $4C84   SNE      VC, #84         ; Skip if VC != 132
$87A    $0CE8   SYS      $CE8            ; System call to CE8
$87C    $4CD6   SNE      VC, #D6         ; Skip if VC != 214
$87E    $403C   SNE      V0, #3C         ; Skip if V0 != 60
$880    $E4B8   UNKNOWN  $E4B8           ; Unknown Exxx instruction
$882    $DCB5   DRW      VC, VB, #5      ; Draw 5-byte sprite at VC, VB
$884    $02D4   SYS      $2D4            ; System call to 2D4
$886    $1678   JP       $678            ; Jump to 678
$888    $7FDC   ADD      VF, #DC         ; Add 220 to VF
$88A    $22EE   CALL     $2EE            ; Call subroutine at 2EE
$88C    $A760   LD       I, $760         ; Load 760 into I
$88E    $C320   RND      V3, #20         ; V3 = random & 20
$890    $1305   JP       $305            ; Jump to 305
$892    $0A9E   SYS      $A9E            ; System call to A9E
$894    $CE06   RND      VE, #06         ; VE = random & 06
$896    $C064   RND      V0, #64         ; V0 = random & 64
$898    $6DEA   LD       VD, #EA         ; Load 234 into VD
$89A    $576A   UNKNOWN  $576A           ; Unknown 5xxx instruction
$89C    $8434   ADD      V4, V3          ; V4 += V3, VF = carry
$89E    $C0E4   RND      V0, #E4         ; V0 = random & E4
$8A0    $4A99   SNE      VA, #99         ; Skip if VA != 153
$8A2    $9A1C   UNKNOWN  $9A1C           ; Unknown 9xxx instruction
$8A4    $62C9   LD       V2, #C9         ; Load 201 into V2
$8A6    $BDC5   JP       V0, $DC5        ; Jump to V0 + DC5
$8A8    $CEF8   RND      VE, #F8         ; VE = random & F8
$8AA    $C5B1   RND      V5, #B1         ; V5 = random & B1
$8AC    $7E04   ADD      VE, #04         ; Add 4 to VE
$8AE    $1C37   JP       $C37            ; Jump to C37
$8B0    $C496   RND      V4, #96         ; V4 = random & 96
$8B2    $AE55   LD       I, $E55         ; Load E55 into I
$8B4    $0AB3   SYS      $AB3            ; System call to AB3
$8B6    $DF45   DRW      VF, V4, #5      ; Draw 5-byte sprite at VF, V4
$8B8    $68BC   LD       V8, #BC         ; Load 188 into V8
$8BA    $5844   UNKNOWN  $5844           ; Unknown 5xxx instruction
$8BC    $FAFF   UNKNOWN  FAFF            ; Unknown Fxxx instruction
$8BE    $7ABD   ADD      VA, #BD         ; Add 189 to VA
$8C0    $A5A0   LD       I, $5A0         ; Load 5A0 into I
$8C2    $CBA6   RND      VB, #A6         ; VB = random & A6
$8C4    $D5D6   DRW      V5, VD, #6      ; Draw 6-byte sprite at V5, VD
$8C6    $926D   UNKNOWN  $926D           ; Unknown 9xxx instruction
$8C8    $6471   LD       V4, #71         ; Load 113 into V4
$8CA    $1DB1   JP       $DB1            ; Jump to DB1
$8CC    $B7BD   JP       V0, $7BD        ; Jump to V0 + 7BD
$8CE    $6DEA   LD       VD, #EA         ; Load 234 into VD
$8D0    $8632   AND      V6, V3          ; V6 &= V3
$8D2    $3967   SE       V9, #67         ; Skip if V9 == 103
$8D4    $5FB5   UNKNOWN  $5FB5           ; Unknown 5xxx instruction
$8D6    $B3A3   JP       V0, $3A3        ; Jump to V0 + 3A3
$8D8    $75B0   ADD      V5, #B0         ; Add 176 to V5
$8DA    $44BD   SNE      V4, #BD         ; Skip if V4 != 189
$8DC    $593C   UNKNOWN  $593C           ; Unknown 5xxx instruction
$8DE    $F33E   UNKNOWN  F33E            ; Unknown Fxxx instruction
$8E0    $6593   LD       V5, #93         ; Load 147 into V5
$8E2    $BC66   JP       V0, $C66        ; Jump to V0 + C66
$8E4    $10F6   JP       $0F6            ; Jump to 0F6
$8E6    $2B2C   CALL     $B2C            ; Call subroutine at B2C
$8E8    $13A3   JP       $3A3            ; Jump to 3A3
$8EA    $72D0   ADD      V2, #D0         ; Add 208 to V2
$8EC    $6917   LD       V9, #17         ; Load 23 into V9
$8EE    $03AE   SYS      $3AE            ; System call to 3AE
$8F0    $8372   AND      V3, V7          ; V3 &= V7
$8F2    $28AB   CALL     $8AB            ; Call subroutine at 8AB
$8F4    $E141   UNKNOWN  $E141           ; Unknown Exxx instruction
$8F6    $CB87   RND      VB, #87         ; VB = random & 87
$8F8    $6917   LD       V9, #17         ; Load 23 into V9
$8FA    $CF5F   RND      VF, #5F         ; VF = random & 5F
$8FC    $A316   LD       I, $316         ; Load 316 into I
$8FE    $CFFE   RND      VF, #FE         ; VF = random & FE
$900    $7138   ADD      V1, #38         ; Add 56 to V1
$902    $F9F7   UNKNOWN  F9F7            ; Unknown Fxxx instruction
$904    $CCAC   RND      VC, #AC         ; VC = random & AC
$906    $97CF   UNKNOWN  $97CF           ; Unknown 9xxx instruction
$908    $3299   SE       V2, #99         ; Skip if V2 == 153
$90A    $734C   ADD      V3, #4C         ; Add 76 to V3
$90C    $58BC   UNKNOWN  $58BC           ; Unknown 5xxx instruction
$90E    $D84A   DRW      V8, V4, #A      ; Draw 10-byte sprite at V8, V4
$910    $71E1   ADD      V1, #E1         ; Add 225 to V1
$912    $6097   LD       V0, #97         ; Load 151 into V0
$914    $F1C8   UNKNOWN  F1C8            ; Unknown Fxxx instruction
$916    $FC1F   UNKNOWN  FC1F            ; Unknown Fxxx instruction
$918    $753D   ADD      V5, #3D         ; Add 61 to V5
$91A    $C30B   RND      V3, #0B         ; V3 = random & 0B
$91C    $6497   LD       V4, #97         ; Load 151 into V4
$91E    $AF20   LD       I, $F20         ; Load F20 into I
$920    $C388   RND      V3, #88         ; V3 = random & 88
$922    $9165   UNKNOWN  $9165           ; Unknown 9xxx instruction
$924    $5720   SE       V7, V2          ; Skip if V7 == V2
$926    $5149   UNKNOWN  $5149           ; Unknown 5xxx instruction
$928    $FFA5   UNKNOWN  FFA5            ; Unknown Fxxx instruction
$92A    $B48A   JP       V0, $48A        ; Jump to V0 + 48A
$92C    $093A   SYS      $93A            ; System call to 93A
$92E    $B127   JP       V0, $127        ; Jump to V0 + 127
$930    $4D93   SNE      VD, #93         ; Skip if VD != 147
$932    $2274   CALL     $274            ; Call subroutine at 274
$934    $DDAD   DRW      VD, VA, #D      ; Draw 13-byte sprite at VD, VA
$936    $7C59   ADD      VC, #59         ; Add 89 to VC
$938    $060C   SYS      $60C            ; System call to 60C
$93A    $A00F   LD       I, $00F         ; Load 00F into I
$93C    $D7B3   DRW      V7, VB, #3      ; Draw 3-byte sprite at V7, VB
$93E    $D30E   DRW      V3, V0, #E      ; Draw 14-byte sprite at V3, V0
$940    $594E   UNKNOWN  $594E           ; Unknown 5xxx instruction
$942    $CA4C   RND      VA, #4C         ; VA = random & 4C
$944    $C04F   RND      V0, #4F         ; V0 = random & 4F
$946    $A673   LD       I, $673         ; Load 673 into I
$948    $56F4   UNKNOWN  $56F4           ; Unknown 5xxx instruction
$94A    $8553   XOR      V5, V5          ; V5 ^= V5
$94C    $ED24   UNKNOWN  $ED24           ; Unknown Exxx instruction
$94E    $0CE2   SYS      $CE2            ; System call to CE2
$950    $A08D   LD       I, $08D         ; Load 08D into I
$952    $7DF1   ADD      VD, #F1         ; Add 241 to VD
$954    $4F7B   SNE      VF, #7B         ; Skip if VF != 123
$956    $1C48   JP       $C48            ; Jump to C48
$958    $F988   UNKNOWN  F988            ; Unknown Fxxx instruction
$95A    $591A   UNKNOWN  $591A           ; Unknown 5xxx instruction
$95C    $FDCD   UNKNOWN  FDCD            ; Unknown Fxxx instruction
$95E    $9D05   UNKNOWN  $9D05           ; Unknown 9xxx instruction
$960    $6820   LD       V8, #20         ; Load 32 into V8
$962    $6F8C   LD       VF, #8C         ; Load 140 into VF
$964    $9D84   UNKNOWN  $9D84           ; Unknown 9xxx instruction
$966    $9C65   UNKNOWN  $9C65           ; Unknown 9xxx instruction
$968    $9FF5   UNKNOWN  $9FF5           ; Unknown 9xxx instruction
$96A    $6E6E   LD       VE, #6E         ; Load 110 into VE
$96C    $BB85   JP       V0, $B85        ; Jump to V0 + B85
$96E    $DB17   DRW      VB, V1, #7      ; Draw 7-byte sprite at VB, V1
$970    $82BE   SHL      V2              ; V2 <<= 1, VF = MSB
$972    $9A7B   UNKNOWN  $9A7B           ; Unknown 9xxx instruction
$974    $0BFD   SYS      $BFD            ; System call to BFD
$976    $2866   CALL     $866            ; Call subroutine at 866
$978    $4A89   SNE      VA, #89         ; Skip if VA != 137
$97A    $5F5F   UNKNOWN  $5F5F           ; Unknown 5xxx instruction
$97C    $E48B   UNKNOWN  $E48B           ; Unknown Exxx instruction
$97E    $C8CF   RND      V8, #CF         ; V8 = random & CF
$980    $DF5C   DRW      VF, V5, #C      ; Draw 12-byte sprite at VF, V5
$982    $0859   SYS      $859            ; System call to 859
$984    $DF29   DRW      VF, V2, #9      ; Draw 9-byte sprite at VF, V2
$986    $55E5   UNKNOWN  $55E5           ; Unknown 5xxx instruction
$988    $72A1   ADD      V2, #A1         ; Add 161 to V2
$98A    $1951   JP       $951            ; Jump to 951
$98C    $A414   LD       I, $414         ; Load 414 into I
$98E    $225D   CALL     $25D            ; Call subroutine at 25D
$990    $A132   LD       I, $132         ; Load 132 into I
$992    $A09E   LD       I, $09E         ; Load 09E into I
$994    $7C94   ADD      VC, #94         ; Add 148 to VC
$996    $85FF   UNKNOWN  85FF            ; Unknown 8xxx instruction
$998    $ACEA   LD       I, $CEA         ; Load CEA into I
$99A    $56E2   UNKNOWN  $56E2           ; Unknown 5xxx instruction
$99C    $8C88   UNKNOWN  8C88            ; Unknown 8xxx instruction
$99E    $8BF6   SHR      VB              ; VB >>= 1, VF = LSB
$9A0    $4252   SNE      V2, #52         ; Skip if V2 != 82
$9A2    $14C5   JP       $4C5            ; Jump to 4C5
$9A4    $78A7   ADD      V8, #A7         ; Add 167 to V8
$9A6    $A0C7   LD       I, $0C7         ; Load 0C7 into I
$9A8    $3D2C   SE       VD, #2C         ; Skip if VD == 44
$9AA    $E0A8   UNKNOWN  $E0A8           ; Unknown Exxx instruction
$9AC    $08B9   SYS      $8B9            ; System call to 8B9
$9AE    $ED22   UNKNOWN  $ED22           ; Unknown Exxx instruction
$9B0    $F11C   UNKNOWN  F11C            ; Unknown Fxxx instruction
$9B2    $E532   UNKNOWN  $E532           ; Unknown Exxx instruction
$9B4    $5EB3   UNKNOWN  $5EB3           ; Unknown 5xxx instruction
$9B6    $FACE   UNKNOWN  FACE            ; Unknown Fxxx instruction
$9B8    $EAEC   UNKNOWN  $EAEC           ; Unknown Exxx instruction
$9BA    $6114   LD       V1, #14         ; Load 20 into V1
$9BC    $8CD0   LD       VC, VD          ; VC = VD
$9BE    $2639   CALL     $639            ; Call subroutine at 639
$9C0    $C35B   RND      V3, #5B         ; V3 = random & 5B
$9C2    $0739   SYS      $739            ; System call to 739
$9C4    $8B08   UNKNOWN  8B08            ; Unknown 8xxx instruction
$9C6    $E737   UNKNOWN  $E737           ; Unknown Exxx instruction
$9C8    $864C   UNKNOWN  864C            ; Unknown 8xxx instruction
$9CA    $14B3   JP       $4B3            ; Jump to 4B3
$9CC    $EE15   UNKNOWN  $EE15           ; Unknown Exxx instruction
$9CE    $8D7E   SHL      VD              ; VD <<= 1, VF = MSB
$9D0    $998F   UNKNOWN  $998F           ; Unknown 9xxx instruction
$9D2    $5F6F   UNKNOWN  $5F6F           ; Unknown 5xxx instruction
$9D4    $F7D4   UNKNOWN  F7D4            ; Unknown Fxxx instruction
$9D6    $FB2E   UNKNOWN  FB2E            ; Unknown Fxxx instruction
$9D8    $F67B   UNKNOWN  F67B            ; Unknown Fxxx instruction
$9DA    $9857   UNKNOWN  $9857           ; Unknown 9xxx instruction
$9DC    $2083   CALL     $083            ; Call subroutine at 083
$9DE    $1CB3   JP       $CB3            ; Jump to CB3
$9E0    $C49C   RND      V4, #9C         ; V4 = random & 9C
$9E2    $785D   ADD      V8, #5D         ; Add 93 to V8
$9E4    $18DA   JP       $8DA            ; Jump to 8DA
$9E6    $949F   UNKNOWN  $949F           ; Unknown 9xxx instruction
$9E8    $96E7   UNKNOWN  $96E7           ; Unknown 9xxx instruction
$9EA    $6155   LD       V1, #55         ; Load 85 into V1
$9EC    $052A   SYS      $52A            ; System call to 52A
$9EE    $39C1   SE       V9, #C1         ; Skip if V9 == 193
$9F0    $C62E   RND      V6, #2E         ; V6 = random & 2E
$9F2    $1D99   JP       $D99            ; Jump to D99
$9F4    $3A46   SE       VA, #46         ; Skip if VA == 70
$9F6    $5028   UNKNOWN  $5028           ; Unknown 5xxx instruction
$9F8    $38D1   SE       V8, #D1         ; Skip if V8 == 209
$9FA    $958E   UNKNOWN  $958E           ; Unknown 9xxx instruction
$9FC    $75D0   ADD      V5, #D0         ; Add 208 to V5
$9FE    $742A   ADD      V4, #2A         ; Add 42 to V4
$A00    $74B6   ADD      V4, #B6         ; Add 182 to V4
$A02    $ADDE   LD       I, $DDE         ; Load DDE into I
$A04    $F6B4   UNKNOWN  F6B4            ; Unknown Fxxx instruction
$A06    $814A   UNKNOWN  814A            ; Unknown 8xxx instruction
$A08    $9967   UNKNOWN  $9967           ; Unknown 9xxx instruction
$A0A    $A01D   LD       I, $01D         ; Load 01D into I
$A0C    $25CC   CALL     $5CC            ; Call subroutine at 5CC
$A0E    $2989   CALL     $989            ; Call subroutine at 989
$A10    $5624   UNKNOWN  $5624           ; Unknown 5xxx instruction
$A12    $5211   UNKNOWN  $5211           ; Unknown 5xxx instruction
$A14    $42A4   SNE      V2, #A4         ; Skip if V2 != 164
$A16    $031D   SYS      $31D            ; System call to 31D
$A18    $731D   ADD      V3, #1D         ; Add 29 to V3
$A1A    $C61F   RND      V6, #1F         ; V6 = random & 1F
$A1C    $8C4A   UNKNOWN  8C4A            ; Unknown 8xxx instruction
$A1E    $A751   LD       I, $751         ; Load 751 into I
$A20    $F2DD   UNKNOWN  F2DD            ; Unknown Fxxx instruction
$A22    $1988   JP       $988            ; Jump to 988
$A24    $9B7A   UNKNOWN  $9B7A           ; Unknown 9xxx instruction
$A26    $4130   SNE      V1, #30         ; Skip if V1 != 48
$A28    $F58D   UNKNOWN  F58D            ; Unknown Fxxx instruction
$A2A    $1EF0   JP       $EF0            ; Jump to EF0
$A2C    $14BB   JP       $4BB            ; Jump to 4BB
$A2E    $7AD0   ADD      VA, #D0         ; Add 208 to VA
$A30    $FA6D   UNKNOWN  FA6D            ; Unknown Fxxx instruction
$A32    $713A   ADD      V1, #3A         ; Add 58 to V1
$A34    $A565   LD       I, $565         ; Load 565 into I
$A36    $3DF4   SE       VD, #F4         ; Skip if VD == 244
$A38    $1990   JP       $990            ; Jump to 990
$A3A    $CF81   RND      VF, #81         ; VF = random & 81
$A3C    $63A5   LD       V3, #A5         ; Load 165 into V3
$A3E    $6CA7   LD       VC, #A7         ; Load 167 into VC
$A40    $8560   LD       V5, V6          ; V5 = V6
$A42    $B95E   JP       V0, $95E        ; Jump to V0 + 95E
$A44    $C7DB   RND      V7, #DB         ; V7 = random & DB
$A46    $523D   UNKNOWN  $523D           ; Unknown 5xxx instruction
$A48    $576F   UNKNOWN  $576F           ; Unknown 5xxx instruction
$A4A    $071B   SYS      $71B            ; System call to 71B
$A4C    $461D   SNE      V6, #1D         ; Skip if V6 != 29
$A4E    $8BC3   XOR      VB, VC          ; VB ^= VC
$A50    $6117   LD       V1, #17         ; Load 23 into V1
$A52    $6835   LD       V8, #35         ; Load 53 into V8
$A54    $4A8F   SNE      VA, #8F         ; Skip if VA != 143
$A56    $2678   CALL     $678            ; Call subroutine at 678
$A58    $3E64   SE       VE, #64         ; Skip if VE == 100
$A5A    $F3DF   UNKNOWN  F3DF            ; Unknown Fxxx instruction
$A5C    $4E0F   SNE      VE, #0F         ; Skip if VE != 15
$A5E    $5DE5   UNKNOWN  $5DE5           ; Unknown 5xxx instruction
$A60    $07B3   SYS      $7B3            ; System call to 7B3
$A62    $2D57   CALL     $D57            ; Call subroutine at D57
$A64    $78CC   ADD      V8, #CC         ; Add 204 to V8
$A66    $EA7B   UNKNOWN  $EA7B           ; Unknown Exxx instruction
$A68    $5452   UNKNOWN  $5452           ; Unknown 5xxx instruction
$A6A    $3917   SE       V9, #17         ; Skip if V9 == 23
$A6C    $FAD6   UNKNOWN  FAD6            ; Unknown Fxxx instruction
$A6E    $3BB9   SE       VB, #B9         ; Skip if VB == 185
$A70    $1C4D   JP       $C4D            ; Jump to C4D
$A72    $31D6   SE       V1, #D6         ; Skip if V1 == 214
$A74    $1E72   JP       $E72            ; Jump to E72
$A76    $3A2B   SE       VA, #2B         ; Skip if VA == 43
$A78    $EEF0   UNKNOWN  $EEF0           ; Unknown Exxx instruction
$A7A    $1D2A   JP       $D2A            ; Jump to D2A
$A7C    $6A88   LD       VA, #88         ; Load 136 into VA
$A7E    $AA17   LD       I, $A17         ; Load A17 into I
$A80    $58CE   UNKNOWN  $58CE           ; Unknown 5xxx instruction
$A82    $86DE   SHL      V6              ; V6 <<= 1, VF = MSB
$A84    $4219   SNE      V2, #19         ; Skip if V2 != 25
$A86    $5341   UNKNOWN  $5341           ; Unknown 5xxx instruction
$A88    $67DE   LD       V7, #DE         ; Load 222 into V7
$A8A    $94AD   UNKNOWN  $94AD           ; Unknown 9xxx instruction
$A8C    $23C6   CALL     $3C6            ; Call subroutine at 3C6
$A8E    $5441   UNKNOWN  $5441           ; Unknown 5xxx instruction
$A90    $D7E7   DRW      V7, VE, #7      ; Draw 7-byte sprite at V7, VE
$A92    $A21B   LD       I, $21B         ; Load 21B into I
$A94    $FBB9   UNKNOWN  FBB9            ; Unknown Fxxx instruction
$A96    $693C   LD       V9, #3C         ; Load 60 into V9
$A98    $4ABB   SNE      VA, #BB         ; Skip if VA != 187
$A9A    $E622   UNKNOWN  $E622           ; Unknown Exxx instruction
$A9C    $BDF2   JP       V0, $DF2        ; Jump to V0 + DF2
$A9E    $A3EE   LD       I, $3EE         ; Load 3EE into I
$AA0    $3715   SE       V7, #15         ; Skip if V7 == 21
$AA2    $3A55   SE       VA, #55         ; Skip if VA == 85
$AA4    $9D2E   UNKNOWN  $9D2E           ; Unknown 9xxx instruction
$AA6    $AEA5   LD       I, $EA5         ; Load EA5 into I
$AA8    $DA05   DRW      VA, V0, #5      ; Draw 5-byte sprite at VA, V0
$AAA    $F267   UNKNOWN  F267            ; Unknown Fxxx instruction
$AAC    $4D28   SNE      VD, #28         ; Skip if VD != 40
$AAE    $080D   SYS      $80D            ; System call to 80D
$AB0    $6311   LD       V3, #11         ; Load 17 into V3
$AB2    $A895   LD       I, $895         ; Load 895 into I
$AB4    $6016   LD       V0, #16         ; Load 22 into V0
$AB6    $2EF7   CALL     $EF7            ; Call subroutine at EF7
$AB8    $FB60   UNKNOWN  FB60            ; Unknown Fxxx instruction
$ABA    $98DD   UNKNOWN  $98DD           ; Unknown 9xxx instruction
$ABC    $1EDB   JP       $EDB            ; Jump to EDB
$ABE    $B932   JP       V0, $932        ; Jump to V0 + 932
$AC0    $05F6   SYS      $5F6            ; System call to 5F6
$AC2    $4C1C   SNE      VC, #1C         ; Skip if VC != 28
$AC4    $E3DC   UNKNOWN  $E3DC           ; Unknown Exxx instruction
$AC6    $9599   UNKNOWN  $9599           ; Unknown 9xxx instruction
$AC8    $3A22   SE       VA, #22         ; Skip if VA == 34
$ACA    $30EF   SE       V0, #EF         ; Skip if V0 == 239
$ACC    $C71C   RND      V7, #1C         ; V7 = random & 1C
$ACE    $7FF3   ADD      VF, #F3         ; Add 243 to VF
$AD0    $4DEF   SNE      VD, #EF         ; Skip if VD != 239
$AD2    $6F0D   LD       VF, #0D         ; Load 13 into VF
$AD4    $6CDF   LD       VC, #DF         ; Load 223 into VC
$AD6    $338C   SE       V3, #8C         ; Skip if V3 == 140
$AD8    $4EF0   SNE      VE, #F0         ; Skip if VE != 240
$ADA    $7BA4   ADD      VB, #A4         ; Add 164 to VB
$ADC    $6F18   LD       VF, #18         ; Load 24 into VF
$ADE    $0E12   SYS      $E12            ; System call to E12
$AE0    $51A2   UNKNOWN  $51A2           ; Unknown 5xxx instruction
$AE2    $C379   RND      V3, #79         ; V3 = random & 79
$AE4    $3D0F   SE       VD, #0F         ; Skip if VD == 15
$AE6    $AF00   LD       I, $F00         ; Load F00 into I
$AE8    $B188   JP       V0, $188        ; Jump to V0 + 188
$AEA    $5BC9   UNKNOWN  $5BC9           ; Unknown 5xxx instruction
$AEC    $557A   UNKNOWN  $557A           ; Unknown 5xxx instruction
$AEE    $9449   UNKNOWN  $9449           ; Unknown 9xxx instruction
$AF0    $92CB   UNKNOWN  $92CB           ; Unknown 9xxx instruction
$AF2    $E8A5   UNKNOWN  $E8A5           ; Unknown Exxx instruction
$AF4    $B82F   JP       V0, $82F        ; Jump to V0 + 82F
$AF6    $040C   SYS      $40C            ; System call to 40C
$AF8    $CDD8   RND      VD, #D8         ; VD = random & D8
$AFA    $0B3D   SYS      $B3D            ; System call to B3D
$AFC    $DE50   DRW      VE, V5, #0      ; Draw 0-byte sprite at VE, V5
$AFE    $025B   SYS      $25B            ; System call to 25B
$B00    $8C8A   UNKNOWN  8C8A            ; Unknown 8xxx instruction
$B02    $3B48   SE       VB, #48         ; Skip if VB == 72
$B04    $C58E   RND      V5, #8E         ; V5 = random & 8E
$B06    $7041   ADD      V0, #41         ; Add 65 to V0
$B08    $C52A   RND      V5, #2A         ; V5 = random & 2A
$B0A    $FCAD   UNKNOWN  FCAD            ; Unknown Fxxx instruction
$B0C    $D78B   DRW      V7, V8, #B      ; Draw 11-byte sprite at V7, V8
$B0E    $0E30   SYS      $E30            ; System call to E30
$B10    $90E6   UNKNOWN  $90E6           ; Unknown 9xxx instruction
$B12    $FF27   UNKNOWN  FF27            ; Unknown Fxxx instruction
$B14    $B891   JP       V0, $891        ; Jump to V0 + 891
$B16    $E5A3   UNKNOWN  $E5A3           ; Unknown Exxx instruction
$B18    $B9F1   JP       V0, $9F1        ; Jump to V0 + 9F1
$B1A    $0EB5   SYS      $EB5            ; System call to EB5
$B1C    $2703   CALL     $703            ; Call subroutine at 703
$B1E    $4600   SNE      V6, #00         ; Skip if V6 != 0
$B20    $C76C   RND      V7, #6C         ; V7 = random & 6C
$B22    $AB95   LD       I, $B95         ; Load B95 into I
$B24    $D8C1   DRW      V8, VC, #1      ; Draw 1-byte sprite at V8, VC
$B26    $2115   CALL     $115            ; Call subroutine at 115
$B28    $3ED0   SE       VE, #D0         ; Skip if VE == 208
$B2A    $F410   UNKNOWN  F410            ; Unknown Fxxx instruction
$B2C    $3E2A   SE       VE, #2A         ; Skip if VE == 42
$B2E    $BCBF   JP       V0, $CBF        ; Jump to V0 + CBF
$B30    $70F4   ADD      V0, #F4         ; Add 244 to V0
$B32    $AEF0   LD       I, $EF0         ; Load EF0 into I
$B34    $3D88   SE       VD, #88         ; Skip if VD == 136
$B36    $D9FA   DRW      V9, VF, #A      ; Draw 10-byte sprite at V9, VF
$B38    $5DB9   UNKNOWN  $5DB9           ; Unknown 5xxx instruction
$B3A    $DF31   DRW      VF, V3, #1      ; Draw 1-byte sprite at VF, V3
$B3C    $180E   JP       $80E            ; Jump to 80E
$B3E    $637D   LD       V3, #7D         ; Load 125 into V3
$B40    $82B2   AND      V2, VB          ; V2 &= VB
$B42    $0FB4   SYS      $FB4            ; System call to FB4
$B44    $12F9   JP       $2F9            ; Jump to 2F9
$B46    $A1EA   LD       I, $1EA         ; Load 1EA into I
$B48    $621B   LD       V2, #1B         ; Load 27 into V2
$B4A    $2E2A   CALL     $E2A            ; Call subroutine at E2A
$B4C    $1955   JP       $955            ; Jump to 955
$B4E    $D310   DRW      V3, V1, #0      ; Draw 0-byte sprite at V3, V1
$B50    $FE53   UNKNOWN  FE53            ; Unknown Fxxx instruction
$B52    $9647   UNKNOWN  $9647           ; Unknown 9xxx instruction
$B54    $5719   UNKNOWN  $5719           ; Unknown 5xxx instruction
$B56    $99F8   UNKNOWN  $99F8           ; Unknown 9xxx instruction
$B58    $9638   UNKNOWN  $9638           ; Unknown 9xxx instruction
$B5A    $2960   CALL     $960            ; Call subroutine at 960
$B5C    $A716   LD       I, $716         ; Load 716 into I
$B5E    $982C   UNKNOWN  $982C           ; Unknown 9xxx instruction
$B60    $C034   RND      V0, #34         ; V0 = random & 34
$B62    $42D9   SNE      V2, #D9         ; Skip if V2 != 217
$B64    $8F21   OR       VF, V2          ; VF |= V2
$B66    $6AD0   LD       VA, #D0         ; Load 208 into VA
$B68    $7194   ADD      V1, #94         ; Add 148 to V1
$B6A    $60F7   LD       V0, #F7         ; Load 247 into V0
$B6C    $7C18   ADD      VC, #18         ; Add 24 to VC
$B6E    $A52C   LD       I, $52C         ; Load 52C into I
$B70    $ADF3   LD       I, $DF3         ; Load DF3 into I
$B72    $D708   DRW      V7, V0, #8      ; Draw 8-byte sprite at V7, V0
$B74    $4EC5   SNE      VE, #C5         ; Skip if VE != 197
$B76    $B982   JP       V0, $982        ; Jump to V0 + 982
$B78    $2C57   CALL     $C57            ; Call subroutine at C57
$B7A    $06DD   SYS      $6DD            ; System call to 6DD
$B7C    $0D63   SYS      $D63            ; System call to D63
$B7E    $9360   SNE      V3, V6          ; Skip if V3 != V6
$B80    $0504   SYS      $504            ; System call to 504
$B82    $3253   SE       V2, #53         ; Skip if V2 == 83
$B84    $ADEC   LD       I, $DEC         ; Load DEC into I
$B86    $FA1E   ADD      I, VA           ; I += VA
$B88    $0E02   SYS      $E02            ; System call to E02
$B8A    $7548   ADD      V5, #48         ; Add 72 to V5
$B8C    $ABD4   LD       I, $BD4         ; Load BD4 into I
$B8E    $6BDB   LD       VB, #DB         ; Load 219 into VB
$B90    $A8E6   LD       I, $8E6         ; Load 8E6 into I
$B92    $6EC6   LD       VE, #C6         ; Load 198 into VE
$B94    $6C0C   LD       VC, #0C         ; Load 12 into VC
$B96    $7137   ADD      V1, #37         ; Add 55 to V1
$B98    $1485   JP       $485            ; Jump to 485
$B9A    $1EDD   JP       $EDD            ; Jump to EDD
$B9C    $34E0   SE       V4, #E0         ; Skip if V4 == 224
$B9E    $331D   SE       V3, #1D         ; Skip if V3 == 29
$BA0    $EF5C   UNKNOWN  $EF5C           ; Unknown Exxx instruction
$BA2    $F833   LD       B, V8           ; Store BCD of V8 at I, I+1, I+2
$BA4    $46A2   SNE      V6, #A2         ; Skip if V6 != 162
$BA6    $29B7   CALL     $9B7            ; Call subroutine at 9B7
$BA8    $04F5   SYS      $4F5            ; System call to 4F5
$BAA    $328C   SE       V2, #8C         ; Skip if V2 == 140
$BAC    $C6BA   RND      V6, #BA         ; V6 = random & BA
$BAE    $7B22   ADD      VB, #22         ; Add 34 to VB
$BB0    $A973   LD       I, $973         ; Load 973 into I
$BB2    $E4FC   UNKNOWN  $E4FC           ; Unknown Exxx instruction
$BB4    $81AE   SHL      V1              ; V1 <<= 1, VF = MSB
$BB6    $8C20   LD       VC, V2          ; VC = V2
$BB8    $C502   RND      V5, #02         ; V5 = random & 02
$BBA    $3CF3   SE       VC, #F3         ; Skip if VC == 243
$BBC    $F5B4   UNKNOWN  F5B4            ; Unknown Fxxx instruction
$BBE    $7595   ADD      V5, #95         ; Add 149 to V5
$BC0    $B605   JP       V0, $605        ; Jump to V0 + 605
$BC2    $9A93   UNKNOWN  $9A93           ; Unknown 9xxx instruction
$BC4    $9BB0   SNE      VB, VB          ; Skip if VB != VB
$BC6    $1BEE   JP       $BEE            ; Jump to BEE
$BC8    $9939   UNKNOWN  $9939           ; Unknown 9xxx instruction
$BCA    $D900   DRW      V9, V0, #0      ; Draw 0-byte sprite at V9, V0
$BCC    $96B2   UNKNOWN  $96B2           ; Unknown 9xxx instruction
$BCE    $15B8   JP       $5B8            ; Jump to 5B8
$BD0    $C5CB   RND      V5, #CB         ; V5 = random & CB
$BD2    $60F9   LD       V0, #F9         ; Load 249 into V0
$BD4    $6124   LD       V1, #24         ; Load 36 into V1
$BD6    $F672   UNKNOWN  F672            ; Unknown Fxxx instruction
$BD8    $C3A6   RND      V3, #A6         ; V3 = random & A6
$BDA    $F5A0   UNKNOWN  F5A0            ; Unknown Fxxx instruction
$BDC    $01B6   SYS      $1B6            ; System call to 1B6
$BDE    $08F4   SYS      $8F4            ; System call to 8F4
$BE0    $7133   ADD      V1, #33         ; Add 51 to V1
$BE2    $49C3   SNE      V9, #C3         ; Skip if V9 != 195
$BE4    $81C9   UNKNOWN  81C9            ; Unknown 8xxx instruction
$BE6    $BA0F   JP       V0, $A0F        ; Jump to V0 + A0F
$BE8    $D2F9   DRW      V2, VF, #9      ; Draw 9-byte sprite at V2, VF
$BEA    $A9DB   LD       I, $9DB         ; Load 9DB into I
$BEC    $0185   SYS      $185            ; System call to 185
$BEE    $80C7   SUBN     V0, VC          ; V0 = VC - V0, VF = !borrow
$BF0    $81C9   UNKNOWN  81C9            ; Unknown 8xxx instruction
$BF2    $1817   JP       $817            ; Jump to 817
$BF4    $FF28   UNKNOWN  FF28            ; Unknown Fxxx instruction
$BF6    $701E   ADD      V0, #1E         ; Add 30 to V0
$BF8    $6A24   LD       VA, #24         ; Load 36 into VA
$BFA    $4283   SNE      V2, #83         ; Skip if V2 != 131
$BFC    $7DAE   ADD      VD, #AE         ; Add 174 to VD
$BFE    $18B0   JP       $8B0            ; Jump to 8B0
$C00    $5400   SE       V4, V0          ; Skip if V4 == V0
$C02    $63A8   LD       V3, #A8         ; Load 168 into V3
$C04    $BAC2   JP       V0, $AC2        ; Jump to V0 + AC2
$C06    $9A89   UNKNOWN  $9A89           ; Unknown 9xxx instruction
$C08    $3826   SE       V8, #26         ; Skip if V8 == 38
$C0A    $1EE7   JP       $EE7            ; Jump to EE7
$C0C    $F1DC   UNKNOWN  F1DC            ; Unknown Fxxx instruction
$C0E    $063B   SYS      $63B            ; System call to 63B
$C10    $3E1F   SE       VE, #1F         ; Skip if VE == 31
$C12    $D108   DRW      V1, V0, #8      ; Draw 8-byte sprite at V1, V0
$C14    $7E65   ADD      VE, #65         ; Add 101 to VE
$C16    $B846   JP       V0, $846        ; Jump to V0 + 846
$C18    $E5C9   UNKNOWN  $E5C9           ; Unknown Exxx instruction
$C1A    $016E   SYS      $16E            ; System call to 16E
$C1C    $53D2   UNKNOWN  $53D2           ; Unknown 5xxx instruction
$C1E    $6C74   LD       VC, #74         ; Load 116 into VC
$C20    $DA0C   DRW      VA, V0, #C      ; Draw 12-byte sprite at VA, V0
$C22    $8267   SUBN     V2, V6          ; V2 = V6 - V2, VF = !borrow
$C24    $0279   SYS      $279            ; System call to 279
$C26    $82C4   ADD      V2, VC          ; V2 += VC, VF = carry
$C28    $74CD   ADD      V4, #CD         ; Add 205 to V4
$C2A    $F9E2   UNKNOWN  F9E2            ; Unknown Fxxx instruction
$C2C    $2EC0   CALL     $EC0            ; Call subroutine at EC0
$C2E    $7001   ADD      V0, #01         ; Add 1 to V0
$C30    $318E   SE       V1, #8E         ; Skip if V1 == 142
$C32    $EC5A   UNKNOWN  $EC5A           ; Unknown Exxx instruction
$C34    $C578   RND      V5, #78         ; V5 = random & 78
$C36    $61B5   LD       V1, #B5         ; Load 181 into V1
$C38    $7CA6   ADD      VC, #A6         ; Add 166 to VC
$C3A    $D3DE   DRW      V3, VD, #E      ; Draw 14-byte sprite at V3, VD
$C3C    $3F81   SE       VF, #81         ; Skip if VF == 129
$C3E    $4803   SNE      V8, #03         ; Skip if V8 != 3
$C40    $2199   CALL     $199            ; Call subroutine at 199
$C42    $71B6   ADD      V1, #B6         ; Add 182 to V1
$C44    $B941   JP       V0, $941        ; Jump to V0 + 941
$C46    $180A   JP       $80A            ; Jump to 80A
$C48    $7F6A   ADD      VF, #6A         ; Add 106 to VF
$C4A    $F242   UNKNOWN  F242            ; Unknown Fxxx instruction
$C4C    $1B24   JP       $B24            ; Jump to B24
$C4E    $8157   SUBN     V1, V5          ; V1 = V5 - V1, VF = !borrow
$C50    $BDDC   JP       V0, $DDC        ; Jump to V0 + DDC
$C52    $5407   UNKNOWN  $5407           ; Unknown 5xxx instruction
$C54    $92B4   UNKNOWN  $92B4           ; Unknown 9xxx instruction
$C56    $A1A8   LD       I, $1A8         ; Load 1A8 into I
$C58    $E328   UNKNOWN  $E328           ; Unknown Exxx instruction
$C5A    $C089   RND      V0, #89         ; V0 = random & 89
$C5C    $2D05   CALL     $D05            ; Call subroutine at D05
$C5E    $086E   SYS      $86E            ; System call to 86E
$C60    $C19D   RND      V1, #9D         ; V1 = random & 9D
$C62    $1F04   JP       $F04            ; Jump to F04
$C64    $A24C   LD       I, $24C         ; Load 24C into I
$C66    $A916   LD       I, $916         ; Load 916 into I
$C68    $BCAF   JP       V0, $CAF        ; Jump to V0 + CAF
$C6A    $6E66   LD       VE, #66         ; Load 102 into VE
$C6C    $7BB5   ADD      VB, #B5         ; Add 181 to VB
$C6E    $D098   DRW      V0, V9, #8      ; Draw 8-byte sprite at V0, V9
$C70    $6065   LD       V0, #65         ; Load 101 into V0
$C72    $AB1C   LD       I, $B1C         ; Load B1C into I
$C74    $3BE4   SE       VB, #E4         ; Skip if VB == 228
$C76    $2991   CALL     $991            ; Call subroutine at 991
$C78    $5649   UNKNOWN  $5649           ; Unknown 5xxx instruction
$C7A    $EFD8   UNKNOWN  $EFD8           ; Unknown Exxx instruction
$C7C    $BAF3   JP       V0, $AF3        ; Jump to V0 + AF3
$C7E    $D9E1   DRW      V9, VE, #1      ; Draw 1-byte sprite at V9, VE
$C80    $2402   CALL     $402            ; Call subroutine at 402
$C82    $E554   UNKNOWN  $E554           ; Unknown Exxx instruction
$C84    $A0FD   LD       I, $0FD         ; Load 0FD into I
$C86    $7C5B   ADD      VC, #5B         ; Add 91 to VC
$C88    $E272   UNKNOWN  $E272           ; Unknown Exxx instruction
$C8A    $4E73   SNE      VE, #73         ; Skip if VE != 115
$C8C    $4949   SNE      V9, #49         ; Skip if V9 != 73
$C8E    $E655   UNKNOWN  $E655           ; Unknown Exxx instruction
$C90    $E3FA   UNKNOWN  $E3FA           ; Unknown Exxx instruction
$C92    $E38C   UNKNOWN  $E38C           ; Unknown Exxx instruction
$C94    $C16C   RND      V1, #6C         ; V1 = random & 6C
$C96    $C1EC   RND      V1, #EC         ; V1 = random & EC
$C98    $60C8   LD       V0, #C8         ; Load 200 into V0
$C9A    $81CA   UNKNOWN  81CA            ; Unknown 8xxx instruction
$C9C    $4CC5   SNE      VC, #C5         ; Skip if VC != 197
$C9E    $7E14   ADD      VE, #14         ; Add 20 to VE
$CA0    $84D5   SUB      V4, VD          ; V4 -= VD, VF = !borrow
$CA2    $DD41   DRW      VD, V4, #1      ; Draw 1-byte sprite at VD, V4
$CA4    $5DF9   UNKNOWN  $5DF9           ; Unknown 5xxx instruction
$CA6    $28C9   CALL     $8C9            ; Call subroutine at 8C9
$CA8    $1D33   JP       $D33            ; Jump to D33
$CAA    $D812   DRW      V8, V1, #2      ; Draw 2-byte sprite at V8, V1
$CAC    $030B   SYS      $30B            ; System call to 30B
$CAE    $4A82   SNE      VA, #82         ; Skip if VA != 130
$CB0    $9F05   UNKNOWN  $9F05           ; Unknown 9xxx instruction
$CB2    $4697   SNE      V6, #97         ; Skip if V6 != 151
$CB4    $EBAC   UNKNOWN  $EBAC           ; Unknown Exxx instruction
$CB6    $6851   LD       V8, #51         ; Load 81 into V8
$CB8    $EBCE   UNKNOWN  $EBCE           ; Unknown Exxx instruction
$CBA    $5145   UNKNOWN  $5145           ; Unknown 5xxx instruction
$CBC    $5369   UNKNOWN  $5369           ; Unknown 5xxx instruction
$CBE    $1F6A   JP       $F6A            ; Jump to F6A
$CC0    $A5BA   LD       I, $5BA         ; Load 5BA into I
$CC2    $6454   LD       V4, #54         ; Load 84 into V4
$CC4    $B017   JP       V0, $017        ; Jump to V0 + 017
$CC6    $2F63   CALL     $F63            ; Call subroutine at F63
$CC8    $58AA   UNKNOWN  $58AA           ; Unknown 5xxx instruction
$CCA    $7E59   ADD      VE, #59         ; Add 89 to VE
$CCC    $52A3   UNKNOWN  $52A3           ; Unknown 5xxx instruction
$CCE    $2AFA   CALL     $AFA            ; Call subroutine at AFA
$CD0    $71B1   ADD      V1, #B1         ; Add 177 to V1
$CD2    $F21D   UNKNOWN  F21D            ; Unknown Fxxx instruction
$CD4    $24D3   CALL     $4D3            ; Call subroutine at 4D3
$CD6    $65B0   LD       V5, #B0         ; Load 176 into V5
$CD8    $EBC9   UNKNOWN  $EBC9           ; Unknown Exxx instruction
$CDA    $637A   LD       V3, #7A         ; Load 122 into V3
$CDC    $810B   UNKNOWN  810B            ; Unknown 8xxx instruction
$CDE    $B70B   JP       V0, $70B        ; Jump to V0 + 70B
$CE0    $3A88   SE       VA, #88         ; Skip if VA == 136
$CE2    $56B5   UNKNOWN  $56B5           ; Unknown 5xxx instruction
$CE4    $CBA5   RND      VB, #A5         ; VB = random & A5
$CE6    $608E   LD       V0, #8E         ; Load 142 into V0
$CE8    $FC08   UNKNOWN  FC08            ; Unknown Fxxx instruction
$CEA    $8E3E   SHL      VE              ; VE <<= 1, VF = MSB
$CEC    $79EB   ADD      V9, #EB         ; Add 235 to V9
$CEE    $D930   DRW      V9, V3, #0      ; Draw 0-byte sprite at V9, V3
$CF0    $D316   DRW      V3, V1, #6      ; Draw 6-byte sprite at V3, V1
$CF2    $6741   LD       V7, #41         ; Load 65 into V7
$CF4    $6FC0   LD       VF, #C0         ; Load 192 into VF
$CF6    $30E0   SE       V0, #E0         ; Skip if V0 == 224
$CF8    $17F8   JP       $7F8            ; Jump to 7F8
$CFA    $7455   ADD      V4, #55         ; Add 85 to V4
$CFC    $9C42   UNKNOWN  $9C42           ; Unknown 9xxx instruction
$CFE    $A5F6   LD       I, $5F6         ; Load 5F6 into I
$D00    $7A7A   ADD      VA, #7A         ; Add 122 to VA
$D02    $9939   UNKNOWN  $9939           ; Unknown 9xxx instruction
$D04    $DD4F   DRW      VD, V4, #F      ; Draw 15-byte sprite at VD, V4
$D06    $C90F   RND      V9, #0F         ; V9 = random & 0F
$D08    $A2CD   LD       I, $2CD         ; Load 2CD into I
$D0A    $609D   LD       V0, #9D         ; Load 157 into V0
$D0C    $75C4   ADD      V5, #C4         ; Add 196 to V5
$D0E    $3F8E   SE       VF, #8E         ; Skip if VF == 142
$D10    $9778   UNKNOWN  $9778           ; Unknown 9xxx instruction
$D12    $DECB   DRW      VE, VC, #B      ; Draw 11-byte sprite at VE, VC
$D14    $D37C   DRW      V3, V7, #C      ; Draw 12-byte sprite at V3, V7
$D16    $C7E1   RND      V7, #E1         ; V7 = random & E1
$D18    $78ED   ADD      V8, #ED         ; Add 237 to V8
$D1A    $AA5D   LD       I, $A5D         ; Load A5D into I
$D1C    $2BF2   CALL     $BF2            ; Call subroutine at BF2
$D1E    $F695   UNKNOWN  F695            ; Unknown Fxxx instruction
$D20    $1EF4   JP       $EF4            ; Jump to EF4
$D22    $1486   JP       $486            ; Jump to 486
$D24    $E8EE   UNKNOWN  $E8EE           ; Unknown Exxx instruction
$D26    $E5BD   UNKNOWN  $E5BD           ; Unknown Exxx instruction
$D28    $7AC3   ADD      VA, #C3         ; Add 195 to VA
$D2A    $DD6A   DRW      VD, V6, #A      ; Draw 10-byte sprite at VD, V6
$D2C    $8CC0   LD       VC, VC          ; VC = VC
$D2E    $9E30   SNE      VE, V3          ; Skip if VE != V3
$D30    $E686   UNKNOWN  $E686           ; Unknown Exxx instruction
$D32    $7264   ADD      V2, #64         ; Add 100 to V2
$D34    $7DF9   ADD      VD, #F9         ; Add 249 to VD
$D36    $1258   JP       $258            ; Jump to 258
$D38    $7B1F   ADD      VB, #1F         ; Add 31 to VB
$D3A    $4B0C   SNE      VB, #0C         ; Skip if VB != 12
$D3C    $9CFE   UNKNOWN  $9CFE           ; Unknown 9xxx instruction
$D3E    $A877   LD       I, $877         ; Load 877 into I
$D40    $4B95   SNE      VB, #95         ; Skip if VB != 149
$D42    $D7A0   DRW      V7, VA, #0      ; Draw 0-byte sprite at V7, VA
$D44    $3AEB   SE       VA, #EB         ; Skip if VA == 235
$D46    $2344   CALL     $344            ; Call subroutine at 344
$D48    $98B1   UNKNOWN  $98B1           ; Unknown 9xxx instruction
$D4A    $C91A   RND      V9, #1A         ; V9 = random & 1A
$D4C    $6F07   LD       VF, #07         ; Load 7 into VF
$D4E    $3E16   SE       VE, #16         ; Skip if VE == 22
$D50    $C3CB   RND      V3, #CB         ; V3 = random & CB
$D52    $5C5C   UNKNOWN  $5C5C           ; Unknown 5xxx instruction
$D54    $B9D3   JP       V0, $9D3        ; Jump to V0 + 9D3
$D56    $744C   ADD      V4, #4C         ; Add 76 to V4
$D58    $D66C   DRW      V6, V6, #C      ; Draw 12-byte sprite at V6, V6
$D5A    $AB8B   LD       I, $B8B         ; Load B8B into I
$D5C    $2BEB   CALL     $BEB            ; Call subroutine at BEB
$D5E    $DA07   DRW      VA, V0, #7      ; Draw 7-byte sprite at VA, V0
$D60    $185F   JP       $85F            ; Jump to 85F
$D62    $F2E5   UNKNOWN  F2E5            ; Unknown Fxxx instruction
$D64    $9C99   UNKNOWN  $9C99           ; Unknown 9xxx instruction
$D66    $F75D   UNKNOWN  F75D            ; Unknown Fxxx instruction
$D68    $1844   JP       $844            ; Jump to 844
$D6A    $1682   JP       $682            ; Jump to 682
$D6C    $0AEF   SYS      $AEF            ; System call to AEF
$D6E    $B763   JP       V0, $763        ; Jump to V0 + 763
$D70    $735B   ADD      V3, #5B         ; Add 91 to V3
$D72    $E2CC   UNKNOWN  $E2CC           ; Unknown Exxx instruction
$D74    $2F47   CALL     $F47            ; Call subroutine at F47
$D76    $0466   SYS      $466            ; System call to 466
$D78    $A62E   LD       I, $62E         ; Load 62E into I
$D7A    $EF71   UNKNOWN  $EF71           ; Unknown Exxx instruction
$D7C    $DCE7   DRW      VC, VE, #7      ; Draw 7-byte sprite at VC, VE
$D7E    $79D6   ADD      V9, #D6         ; Add 214 to V9
$D80    $AD20   LD       I, $D20         ; Load D20 into I
$D82    $516C   UNKNOWN  $516C           ; Unknown 5xxx instruction
$D84    $A45E   LD       I, $45E         ; Load 45E into I
$D86    $6285   LD       V2, #85         ; Load 133 into V2
$D88    $03AF   SYS      $3AF            ; System call to 3AF
$D8A    $7877   ADD      V8, #77         ; Add 119 to V8
$D8C    $7266   ADD      V2, #66         ; Add 102 to V2
$D8E    $E79F   UNKNOWN  $E79F           ; Unknown Exxx instruction
$D90    $2A47   CALL     $A47            ; Call subroutine at A47
$D92    $A675   LD       I, $675         ; Load 675 into I
$D94    $AE42   LD       I, $E42         ; Load E42 into I
$D96    $D1C2   DRW      V1, VC, #2      ; Draw 2-byte sprite at V1, VC
$D98    $E2FA   UNKNOWN  $E2FA           ; Unknown Exxx instruction
$D9A    $CECF   RND      VE, #CF         ; VE = random & CF
$D9C    $AD20   LD       I, $D20         ; Load D20 into I
$D9E    $E5B7   UNKNOWN  $E5B7           ; Unknown Exxx instruction
$DA0    $DCB8   DRW      VC, VB, #8      ; Draw 8-byte sprite at VC, VB
$DA2    $7769   ADD      V7, #69         ; Add 105 to V7
$DA4    $23C7   CALL     $3C7            ; Call subroutine at 3C7
$DA6    $947E   UNKNOWN  $947E           ; Unknown 9xxx instruction
$DA8    $EA23   UNKNOWN  $EA23           ; Unknown Exxx instruction
$DAA    $1A99   JP       $A99            ; Jump to A99
$DAC    $FEAE   UNKNOWN  FEAE            ; Unknown Fxxx instruction
$DAE    $DDEF   DRW      VD, VE, #F      ; Draw 15-byte sprite at VD, VE
$DB0    $7CFD   ADD      VC, #FD         ; Add 253 to VC
$DB2    $017C   SYS      $17C            ; System call to 17C
$DB4    $9304   UNKNOWN  $9304           ; Unknown 9xxx instruction
$DB6    $97AF   UNKNOWN  $97AF           ; Unknown 9xxx instruction
$DB8    $57C6   UNKNOWN  $57C6           ; Unknown 5xxx instruction
$DBA    $0696   SYS      $696            ; System call to 696
$DBC    $0315   SYS      $315            ; System call to 315
$DBE    $188C   JP       $88C            ; Jump to 88C
$DC0    $59E4   UNKNOWN  $59E4           ; Unknown 5xxx instruction
$DC2    $271C   CALL     $71C            ; Call subroutine at 71C
$DC4    $EEC7   UNKNOWN  $EEC7           ; Unknown Exxx instruction
$DC6    $4B7E   SNE      VB, #7E         ; Skip if VB != 126
$DC8    $35A1   SE       V5, #A1         ; Skip if V5 == 161
$DCA    $3E32   SE       VE, #32         ; Skip if VE == 50
$DCC    $926E   UNKNOWN  $926E           ; Unknown 9xxx instruction
$DCE    $F6A9   UNKNOWN  F6A9            ; Unknown Fxxx instruction
$DD0    $F997   UNKNOWN  F997            ; Unknown Fxxx instruction
$DD2    $D08F   DRW      V0, V8, #F      ; Draw 15-byte sprite at V0, V8
$DD4    $4DF6   SNE      VD, #F6         ; Skip if VD != 246
$DD6    $767B   ADD      V6, #7B         ; Add 123 to V6
$DD8    $3A5B   SE       VA, #5B         ; Skip if VA == 91
$DDA    $0F84   SYS      $F84            ; System call to F84
$DDC    $D274   DRW      V2, V7, #4      ; Draw 4-byte sprite at V2, V7
$DDE    $113C   JP       $13C            ; Jump to 13C
$DE0    $C278   RND      V2, #78         ; V2 = random & 78
$DE2    $D999   DRW      V9, V9, #9      ; Draw 9-byte sprite at V9, V9
$DE4    $1EFE   JP       $EFE            ; Jump to EFE
$DE6    $73B6   ADD      V3, #B6         ; Add 182 to V3
$DE8    $E5B6   UNKNOWN  $E5B6           ; Unknown Exxx instruction
$DEA    $84C7   SUBN     V4, VC          ; V4 = VC - V4, VF = !borrow
$DEC    $64C1   LD       V4, #C1         ; Load 193 into V4
$DEE    $A049   LD       I, $049         ; Load 049 into I
$DF0    $3910   SE       V9, #10         ; Skip if V9 == 16
$DF2    $F029   LD       F, V0           ; I = sprite address for digit V0
$DF4    $08F7   SYS      $8F7            ; System call to 8F7
$DF6    $FBA3   UNKNOWN  FBA3            ; Unknown Fxxx instruction
$DF8    $EA9E   SKP      VA              ; Skip if key VA pressed
$DFA    $1ED1   JP       $ED1            ; Jump to ED1
$DFC    $D27A   DRW      V2, V7, #A      ; Draw 10-byte sprite at V2, V7
$DFE    $8A69   UNKNOWN  8A69            ; Unknown 8xxx instruction
$E00    $5956   UNKNOWN  $5956           ; Unknown 5xxx instruction
$E02    $FDE7   UNKNOWN  FDE7            ; Unknown Fxxx instruction
$E04    $E166   UNKNOWN  $E166           ; Unknown Exxx instruction
$E06    $A37E   LD       I, $37E         ; Load 37E into I
$E08    $B492   JP       V0, $492        ; Jump to V0 + 492
$E0A    $ED28   UNKNOWN  $ED28           ; Unknown Exxx instruction
$E0C    $C7B6   RND      V7, #B6         ; V7 = random & B6
$E0E    $300C   SE       V0, #0C         ; Skip if V0 == 12
$E10    $07D9   SYS      $7D9            ; System call to 7D9
$E12    $D63B   DRW      V6, V3, #B      ; Draw 11-byte sprite at V6, V3
$E14    $1A04   JP       $A04            ; Jump to A04
$E16    $49C5   SNE      V9, #C5         ; Skip if V9 != 197
$E18    $7DDC   ADD      VD, #DC         ; Add 220 to VD
$E1A    $4ED6   SNE      VE, #D6         ; Skip if VE != 214
$E1C    $E7DF   UNKNOWN  $E7DF           ; Unknown Exxx instruction
$E1E    $A755   LD       I, $755         ; Load 755 into I
$E20    $C416   RND      V4, #16         ; V4 = random & 16
$E22    $70E9   ADD      V0, #E9         ; Add 233 to V0
$E24    $2ABA   CALL     $ABA            ; Call subroutine at ABA
$E26    $38E7   SE       V8, #E7         ; Skip if V8 == 231
$E28    $B5B8   JP       V0, $5B8        ; Jump to V0 + 5B8
$E2A    $D5FF   DRW      V5, VF, #F      ; Draw 15-byte sprite at V5, VF
$E2C    $33FD   SE       V3, #FD         ; Skip if V3 == 253
$E2E    $E80C   UNKNOWN  $E80C           ; Unknown Exxx instruction
$E30    $A62E   LD       I, $62E         ; Load 62E into I
$E32    $846D   UNKNOWN  846D            ; Unknown 8xxx instruction
$E34    $00E9   SYS      $0E9            ; System call to 0E9
$E36    $5DD8   UNKNOWN  $5DD8           ; Unknown 5xxx instruction
$E38    $2541   CALL     $541            ; Call subroutine at 541
$E3A    $2A1D   CALL     $A1D            ; Call subroutine at A1D
$E3C    $752D   ADD      V5, #2D         ; Add 45 to V5
$E3E    $6AFE   LD       VA, #FE         ; Load 254 into VA
$E40    $C302   RND      V3, #02         ; V3 = random & 02
$E42    $FBDF   UNKNOWN  FBDF            ; Unknown Fxxx instruction
$E44    $836B   UNKNOWN  836B            ; Unknown 8xxx instruction
$E46    $DF9D   DRW      VF, V9, #D      ; Draw 13-byte sprite at VF, V9
$E48    $1C31   JP       $C31            ; Jump to C31
$E4A    $087B   SYS      $87B            ; System call to 87B
$E4C    $2FA0   CALL     $FA0            ; Call subroutine at FA0
$E4E    $7C5D   ADD      VC, #5D         ; Add 93 to VC
$E50    $9A91   UNKNOWN  $9A91           ; Unknown 9xxx instruction
$E52    $C1C1   RND      V1, #C1         ; V1 = random & C1
$E54    $10E5   JP       $0E5            ; Jump to 0E5
$E56    $82D4   ADD      V2, VD          ; V2 += VD, VF = carry
$E58    $0879   SYS      $879            ; System call to 879
$E5A    $05A1   SYS      $5A1            ; System call to 5A1
$E5C    $B888   JP       V0, $888        ; Jump to V0 + 888
$E5E    $AE17   LD       I, $E17         ; Load E17 into I
$E60    $5135   UNKNOWN  $5135           ; Unknown 5xxx instruction
$E62    $A307   LD       I, $307         ; Load 307 into I
$E64    $0719   SYS      $719            ; System call to 719
$E66    $622C   LD       V2, #2C         ; Load 44 into V2
$E68    $710E   ADD      V1, #0E         ; Add 14 to V1
$E6A    $0F11   SYS      $F11            ; System call to F11
$E6C    $695B   LD       V9, #5B         ; Load 91 into V9
$E6E    $1041   JP       $041            ; Jump to 041
$E70    $3F94   SE       VF, #94         ; Skip if VF == 148
$E72    $CCF9   RND      VC, #F9         ; VC = random & F9
$E74    $1F54   JP       $F54            ; Jump to F54
$E76    $116B   JP       $16B            ; Jump to 16B
$E78    $0BD5   SYS      $BD5            ; System call to BD5
$E7A    $C00D   RND      V0, #0D         ; V0 = random & 0D
$E7C    $5FA2   UNKNOWN  $5FA2           ; Unknown 5xxx instruction
$E7E    $2838   CALL     $838            ; Call subroutine at 838
$E80    $3BA7   SE       VB, #A7         ; Skip if VB == 167
$E82    $E925   UNKNOWN  $E925           ; Unknown Exxx instruction
$E84    $9F11   UNKNOWN  $9F11           ; Unknown 9xxx instruction
$E86    $01E9   SYS      $1E9            ; System call to 1E9
$E88    $0387   SYS      $387            ; System call to 387
$E8A    $F5C9   UNKNOWN  F5C9            ; Unknown Fxxx instruction
$E8C    $77D6   ADD      V7, #D6         ; Add 214 to V7
$E8E    $0E24   SYS      $E24            ; System call to E24
$E90    $322F   SE       V2, #2F         ; Skip if V2 == 47
$E92    $5685   UNKNOWN  $5685           ; Unknown 5xxx instruction
$E94    $41DB   SNE      V1, #DB         ; Skip if V1 != 219
$E96    $4D5A   SNE      VD, #5A         ; Skip if VD != 90
$E98    $E071   UNKNOWN  $E071           ; Unknown Exxx instruction
$E9A    $9E09   UNKNOWN  $9E09           ; Unknown 9xxx instruction
$E9C    $4DA0   SNE      VD, #A0         ; Skip if VD != 160
$E9E    $4525   SNE      V5, #25         ; Skip if V5 != 37
$EA0    $69D3   LD       V9, #D3         ; Load 211 into V9
$EA2    $CEDE   RND      VE, #DE         ; VE = random & DE
$EA4    $28BD   CALL     $8BD            ; Call subroutine at 8BD
$EA6    $55FE   UNKNOWN  $55FE           ; Unknown 5xxx instruction
$EA8    $255B   CALL     $55B            ; Call subroutine at 55B
$EAA    $CA95   RND      VA, #95         ; VA = random & 95
$EAC    $68A4   LD       V8, #A4         ; Load 164 into V8
$EAE    $D8EF   DRW      V8, VE, #F      ; Draw 15-byte sprite at V8, VE
$EB0    $B332   JP       V0, $332        ; Jump to V0 + 332
$EB2    $C46E   RND      V4, #6E         ; V4 = random & 6E
$EB4    $5C03   UNKNOWN  $5C03           ; Unknown 5xxx instruction
$EB6    $16E7   JP       $6E7            ; Jump to 6E7
$EB8    $17F9   JP       $7F9            ; Jump to 7F9
$EBA    $6BB3   LD       VB, #B3         ; Load 179 into VB
$EBC    $AEED   LD       I, $EED         ; Load EED into I
$EBE    $BA07   JP       V0, $A07        ; Jump to V0 + A07
$EC0    $9FC9   UNKNOWN  $9FC9           ; Unknown 9xxx instruction
$EC2    $FA48   UNKNOWN  FA48            ; Unknown Fxxx instruction
$EC4    $CB7B   RND      VB, #7B         ; VB = random & 7B
$EC6    $68EF   LD       V8, #EF         ; Load 239 into V8
$EC8    $724B   ADD      V2, #4B         ; Add 75 to V2
$ECA    $EF75   UNKNOWN  $EF75           ; Unknown Exxx instruction
$ECC    $2B61   CALL     $B61            ; Call subroutine at B61
$ECE    $C4F3   RND      V4, #F3         ; V4 = random & F3
$ED0    $277A   CALL     $77A            ; Call subroutine at 77A
$ED2    $B768   JP       V0, $768        ; Jump to V0 + 768
$ED4    $51CB   UNKNOWN  $51CB           ; Unknown 5xxx instruction
$ED6    $D400   DRW      V4, V0, #0      ; Draw 0-byte sprite at V4, V0
$ED8    $5E9B   UNKNOWN  $5E9B           ; Unknown 5xxx instruction
$EDA    $2DBB   CALL     $DBB            ; Call subroutine at DBB
$EDC    $FCB7   UNKNOWN  FCB7            ; Unknown Fxxx instruction
$EDE    $B056   JP       V0, $056        ; Jump to V0 + 056
$EE0    $AB7C   LD       I, $B7C         ; Load B7C into I
$EE2    $4965   SNE      V9, #65         ; Skip if V9 != 101
$EE4    $9A48   UNKNOWN  $9A48           ; Unknown 9xxx instruction
$EE6    $E84C   UNKNOWN  $E84C           ; Unknown Exxx instruction
$EE8    $A473   LD       I, $473         ; Load 473 into I
$EEA    $8E92   AND      VE, V9          ; VE &= V9
$EEC    $D4E6   DRW      V4, VE, #6      ; Draw 6-byte sprite at V4, VE
$EEE    $1386   JP       $386            ; Jump to 386
$EF0    $E0E4   UNKNOWN  $E0E4           ; Unknown Exxx instruction
$EF2    $00F0   SYS      $0F0            ; System call to 0F0
$EF4    $4109   SNE      V1, #09         ; Skip if V1 != 9
$EF6    $14D5   JP       $4D5            ; Jump to 4D5
$EF8    $92D8   UNKNOWN  $92D8           ; Unknown 9xxx instruction
$EFA    $23FD   CALL     $3FD            ; Call subroutine at 3FD
$EFC    $5566   UNKNOWN  $5566           ; Unknown 5xxx instruction
$EFE    $80C8   UNKNOWN  80C8            ; Unknown 8xxx instruction
$F00    $771C   ADD      V7, #1C         ; Add 28 to V7
$F02    $2CFD   CALL     $CFD            ; Call subroutine at CFD
$F04    $92ED   UNKNOWN  $92ED           ; Unknown 9xxx instruction
$F06    $3498   SE       V4, #98         ; Skip if V4 == 152
$F08    $613F   LD       V1, #3F         ; Load 63 into V1
$F0A    $2556   CALL     $556            ; Call subroutine at 556
$F0C    $8954   ADD      V9, V5          ; V9 += V5, VF = carry
$F0E    $80B6   SHR      V0              ; V0 >>= 1, VF = LSB
$F10    $D766   DRW      V7, V6, #6      ; Draw 6-byte sprite at V7, V6
$F12    $6DD2   LD       VD, #D2         ; Load 210 into VD
$F14    $B0B5   JP       V0, $0B5        ; Jump to V0 + 0B5
$F16    $4894   SNE      V8, #94         ; Skip if V8 != 148
$F18    $D1CF   DRW      V1, VC, #F      ; Draw 15-byte sprite at V1, VC
$F1A    $62CB   LD       V2, #CB         ; Load 203 into V2
$F1C    $BEA5   JP       V0, $EA5        ; Jump to V0 + EA5
$F1E    $D91B   DRW      V9, V1, #B      ; Draw 11-byte sprite at V9, V1
$F20    $DA1E   DRW      VA, V1, #E      ; Draw 14-byte sprite at VA, V1
$F22    $265B   CALL     $65B            ; Call subroutine at 65B
$F24    $398F   SE       V9, #8F         ; Skip if V9 == 143
$F26    $A102   LD       I, $102         ; Load 102 into I
$F28    $B27C   JP       V0, $27C        ; Jump to V0 + 27C
$F2A    $5F7B   UNKNOWN  $5F7B           ; Unknown 5xxx instruction
$F2C    $F347   UNKNOWN  F347            ; Unknown Fxxx instruction
$F2E    $C4C0   RND      V4, #C0         ; V4 = random & C0
$F30    $02F5   SYS      $2F5            ; System call to 2F5
$F32    $22B6   CALL     $2B6            ; Call subroutine at 2B6
$F34    $193F   JP       $93F            ; Jump to 93F
$F36    $0895   SYS      $895            ; System call to 895
$F38    $19C5   JP       $9C5            ; Jump to 9C5
$F3A    $AC14   LD       I, $C14         ; Load C14 into I
$F3C    $298D   CALL     $98D            ; Call subroutine at 98D
$F3E    $E2E6   UNKNOWN  $E2E6           ; Unknown Exxx instruction
$F40    $CF62   RND      VF, #62         ; VF = random & 62
$F42    $7B48   ADD      VB, #48         ; Add 72 to VB
$F44    $8073   XOR      V0, V7          ; V0 ^= V7
$F46    $10EA   JP       $0EA            ; Jump to 0EA
$F48    $F648   UNKNOWN  F648            ; Unknown Fxxx instruction
$F4A    $5E29   UNKNOWN  $5E29           ; Unknown 5xxx instruction
$F4C    $2D8A   CALL     $D8A            ; Call subroutine at D8A
$F4E    $D253   DRW      V2, V5, #3      ; Draw 3-byte sprite at V2, V5
$F50    $933B   UNKNOWN  $933B           ; Unknown 9xxx instruction
$F52    $5BBB   UNKNOWN  $5BBB           ; Unknown 5xxx instruction
$F54    $9560   SNE      V5, V6          ; Skip if V5 != V6
$F56    $4D05   SNE      VD, #05         ; Skip if VD != 5
$F58    $2305   CALL     $305            ; Call subroutine at 305
$F5A    $4828   SNE      V8, #28         ; Skip if V8 != 40
$F5C    $B49D   JP       V0, $49D        ; Jump to V0 + 49D
$F5E    $8B02   AND      VB, V0          ; VB &= V0
$F60    $BE6E   JP       V0, $E6E        ; Jump to V0 + E6E
$F62    $BDCC   JP       V0, $DCC        ; Jump to V0 + DCC
$F64    $28E8   CALL     $8E8            ; Call subroutine at 8E8
$F66    $EEE3   UNKNOWN  $EEE3           ; Unknown Exxx instruction
$F68    $A7C7   LD       I, $7C7         ; Load 7C7 into I
$F6A    $D6E8   DRW      V6, VE, #8      ; Draw 8-byte sprite at V6, VE
$F6C    $6109   LD       V1, #09         ; Load 9 into V1
$F6E    $FAC0   UNKNOWN  FAC0            ; Unknown Fxxx instruction
$F70    $E088   UNKNOWN  $E088           ; Unknown Exxx instruction
$F72    $24F0   CALL     $4F0            ; Call subroutine at 4F0
$F74    $ED04   UNKNOWN  $ED04           ; Unknown Exxx instruction
$F76    $3BE9   SE       VB, #E9         ; Skip if VB == 233
$F78    $66FC   LD       V6, #FC         ; Load 252 into V6
$F7A    $8330   LD       V3, V3          ; V3 = V3
$F7C    $F71D   UNKNOWN  F71D            ; Unknown Fxxx instruction
$F7E    $C177   RND      V1, #77         ; V1 = random & 77
$F80    $6556   LD       V5, #56         ; Load 86 into V5
$F82    $D473   DRW      V4, V7, #3      ; Draw 3-byte sprite at V4, V7
$F84    $72CC   ADD      V2, #CC         ; Add 204 to V2
$F86    $1230   JP       $230            ; Jump to 230
$F88    $D154   DRW      V1, V5, #4      ; Draw 4-byte sprite at V1, V5
$F8A    $F959   UNKNOWN  F959            ; Unknown Fxxx instruction
$F8C    $BF4D   JP       V0, $F4D        ; Jump to V0 + F4D
$F8E    $F88B   UNKNOWN  F88B            ; Unknown Fxxx instruction
$F90    $AB8F   LD       I, $B8F         ; Load B8F into I
$F92    $9C96   UNKNOWN  $9C96           ; Unknown 9xxx instruction
$F94    $5D24   UNKNOWN  $5D24           ; Unknown 5xxx instruction
$F96    $4889   SNE      V8, #89         ; Skip if V8 != 137
$F98    $F715   LD       DT, V7          ; Delay timer = V7
$F9A    $544D   UNKNOWN  $544D           ; Unknown 5xxx instruction
$F9C    $48F2   SNE      V8, #F2         ; Skip if V8 != 242
$F9E    $C4D4   RND      V4, #D4         ; V4 = random & D4
$FA0    $BE8A   JP       V0, $E8A        ; Jump to V0 + E8A
$FA2    $C7F3   RND      V7, #F3         ; V7 = random & F3
$FA4    $F74A   UNKNOWN  F74A            ; Unknown Fxxx instruction
$FA6    $FB27   UNKNOWN  FB27            ; Unknown Fxxx instruction
$FA8    $04C5   SYS      $4C5            ; System call to 4C5
$FAA    $D3BE   DRW      V3, VB, #E      ; Draw 14-byte sprite at V3, VB
$FAC    $A2F7   LD       I, $2F7         ; Load 2F7 into I
$FAE    $98DA   UNKNOWN  $98DA           ; Unknown 9xxx instruction
$FB0    $6356   LD       V3, #56         ; Load 86 into V3
$FB2    $E889   UNKNOWN  $E889           ; Unknown Exxx instruction
$FB4    $381A   SE       V8, #1A         ; Skip if V8 == 26
$FB6    $341F   SE       V4, #1F         ; Skip if V4 == 31
$FB8    $13AD   JP       $3AD            ; Jump to 3AD
$FBA    $0527   SYS      $527            ; System call to 527
$FBC    $91C6   UNKNOWN  $91C6           ; Unknown 9xxx instruction
$FBE    $B5ED   JP       V0, $5ED        ; Jump to V0 + 5ED
$FC0    $2750   CALL     $750            ; Call subroutine at 750
$FC2    $D939   DRW      V9, V3, #9      ; Draw 9-byte sprite at V9, V3
$FC4    $48E1   SNE      V8, #E1         ; Skip if V8 != 225
$FC6    $8D04   ADD      VD, V0          ; VD += V0, VF = carry
$FC8    $C3F9   RND      V3, #F9         ; V3 = random & F9
$FCA    $9374   UNKNOWN  $9374           ; Unknown 9xxx instruction
$FCC    $B8C9   JP       V0, $8C9        ; Jump to V0 + 8C9
$FCE    $5623   UNKNOWN  $5623           ; Unknown 5xxx instruction
$FD0    $FDA3   UNKNOWN  FDA3            ; Unknown Fxxx instruction
$FD2    $1B48   JP       $B48            ; Jump to B48
$FD4    $AE92   LD       I, $E92         ; Load E92 into I
$FD6    $E61C   UNKNOWN  $E61C           ; Unknown Exxx instruction
$FD8    $56FA   UNKNOWN  $56FA           ; Unknown 5xxx instruction
$FDA    $B22C   JP       V0, $22C        ; Jump to V0 + 22C
$FDC    $69CF   LD       V9, #CF         ; Load 207 into V9
$FDE    $F98A   UNKNOWN  F98A            ; Unknown Fxxx instruction
$FE0    $1E12   JP       $E12            ; Jump to E12
$FE2    $8BC7   SUBN     VB, VC          ; VB = VC - VB, VF = !borrow
$FE4    $AF06   LD       I, $F06         ; Load F06 into I
$FE6    $33CB   SE       V3, #CB         ; Skip if V3 == 203
$FE8    $BD3F   JP       V0, $D3F        ; Jump to V0 + D3F
$FEA    $7617   ADD      V6, #17         ; Add 23 to V6
$FEC    $DC36   DRW      VC, V3, #6      ; Draw 6-byte sprite at VC, V3
$FEE    $3C34   SE       VC, #34         ; Skip if VC == 52
$FF0    $E5D0   UNKNOWN  $E5D0           ; Unknown Exxx instruction
$FF2    $33DD   SE       V3, #DD         ; Skip if V3 == 221
$FF4    $508D   UNKNOWN  $508D           ; Unknown 5xxx instruction
$FF6    $3AEE   SE       VA, #EE         ; Skip if VA == 238
$FF8    $FD54   UNKNOWN  FD54            ; Unknown Fxxx instruction
$FFA    $D83A   DRW      V8, V3, #A      ; Draw 10-byte sprite at V8, V3
$FFC    $6B11   LD       VB, #11         ; Load 17 into VB
$FFE    $8AA0   LD       VA, VA          ; VA = VA

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 562 (31.4%)
  LD      : 236 (13.2%)
  JP      : 194 (10.8%)
  ADD     : 139 ( 7.8%)
  DRW     : 107 ( 6.0%)
  SE      : 105 ( 5.9%)
  SYS     : 105 ( 5.9%)
  SNE     : 103 ( 5.7%)
  RND     : 100 ( 5.6%)
  CALL    :  96 ( 5.4%)
  AND     :   9 ( 0.5%)
  SUBN    :   8 ( 0.4%)
  SHR     :   7 ( 0.4%)
  XOR     :   6 ( 0.3%)
  SHL     :   5 ( 0.3%)
  SUB     :   4 ( 0.2%)
  OR      :   4 ( 0.2%)
  SKNP    :   1 ( 0.1%)
  SKP     :   1 ( 0.1%)

Memory Operations: 375 (20.9%)
Arithmetic Operations: 170 (9.5%)
