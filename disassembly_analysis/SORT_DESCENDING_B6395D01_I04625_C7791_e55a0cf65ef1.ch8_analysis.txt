
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B6395D01_I04625_C7791_e55a0cf65ef1.ch8
ROM Size: 3584 bytes
Instructions Found: 1790

DISCOVERY INFORMATION:
Batch: 6395
Instance: 4625
Direction: descending
Final Array: [254, 254, 194, 68, 65, 52, 0, 0]
Operations: R:0 W:1 C:602 S:41

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 112
Sort Array References:
  $214: LD I, $896 ; Load 896 into I
  $216: LD I, $C24 ; Load C24 into I
  $25A: LD I, $144 ; Load 144 into I
  $26C: LD I, $31F ; Load 31F into I
  $274: LD I, $71D ; Load 71D into I
  $296: LD I, $5FE ; Load 5FE into I
  $298: LD I, $F70 ; Load F70 into I
  $29A: LD I, $3B4 ; Load 3B4 into I
  $342: LD I, $033 ; Load 033 into I
  $348: LD I, $268 ; Load 268 into I
  $352: LD I, $A4F ; Load A4F into I
  $392: LD I, $C8A ; Load C8A into I
  $3AA: LD I, $946 ; Load 946 into I
  $414: LD I, $97A ; Load 97A into I
  $41C: LD I, $C26 ; Load C26 into I
  $434: LD I, $0B8 ; Load 0B8 into I
  $43E: LD I, $6A0 ; Load 6A0 into I
  $464: LD I, $E2C ; Load E2C into I
  $466: LD I, $734 ; Load 734 into I
  $49C: LD I, $FEB ; Load FEB into I
  $4B4: LD I, $649 ; Load 649 into I
  $4EE: LD I, $C84 ; Load C84 into I
  $500: LD I, $8DD ; Load 8DD into I
  $502: LD I, $0F9 ; Load 0F9 into I
  $522: LD I, $396 ; Load 396 into I
  $532: LD I, $D00 ; Load D00 into I
  $542: LD I, $FA9 ; Load FA9 into I
  $58E: LD I, $528 ; Load 528 into I
  $5D0: LD I, $8B7 ; Load 8B7 into I
  $5D6: LD I, $374 ; Load 374 into I
  $5DE: LD I, $E35 ; Load E35 into I
  $610: LD I, $6AC ; Load 6AC into I
  $62C: LD I, $5C8 ; Load 5C8 into I
  $656: LD I, $432 ; Load 432 into I
  $69A: LD I, $691 ; Load 691 into I
  $6AC: LD I, $86C ; Load 86C into I
  $6BE: LD I, $9B2 ; Load 9B2 into I
  $6E4: LD I, $10E ; Load 10E into I
  $6EC: LD I, $7C0 ; Load 7C0 into I
  $6FA: LD I, $51A ; Load 51A into I
  $700: LD I, $99A ; Load 99A into I
  $714: LD I, $2BF ; Load 2BF into I
  $738: LD [I], V8 ; Store V0-V8 at I
  $73A: LD I, $6F1 ; Load 6F1 into I
  $74C: LD I, $E8D ; Load E8D into I
  $750: LD I, $79D ; Load 79D into I
  $770: LD I, $767 ; Load 767 into I
  $792: LD I, $61D ; Load 61D into I
  $7B4: LD I, $2FD ; Load 2FD into I
  $7E8: LD I, $DC6 ; Load DC6 into I
  $7F2: LD I, $21B ; Load 21B into I
  $7FE: LD I, $B16 ; Load B16 into I
  $826: LD I, $73D ; Load 73D into I
  $84E: LD I, $D2D ; Load D2D into I
  $850: LD I, $8F6 ; Load 8F6 into I
  $86A: LD I, $872 ; Load 872 into I
  $876: LD I, $A10 ; Load A10 into I
  $8A4: LD I, $C5B ; Load C5B into I
  $8AA: LD I, $47B ; Load 47B into I
  $8E6: LD I, $F0B ; Load F0B into I
  $906: LD I, $3C8 ; Load 3C8 into I
  $92C: LD I, $A57 ; Load A57 into I
  $92E: LD I, $8A6 ; Load 8A6 into I
  $952: LD I, $163 ; Load 163 into I
  $97C: LD I, $5B2 ; Load 5B2 into I
  $98A: LD I, $AB6 ; Load AB6 into I
  $99A: LD I, $C74 ; Load C74 into I
  $9A6: LD I, $227 ; Load 227 into I
  $9C8: LD I, $F1D ; Load F1D into I
  $9D2: LD I, $2FB ; Load 2FB into I
  $A0C: LD I, $A61 ; Load A61 into I
  $A12: LD I, $5E8 ; Load 5E8 into I
  $A30: LD I, $ECE ; Load ECE into I
  $A9E: LD I, $1A6 ; Load 1A6 into I
  $AA2: LD I, $B92 ; Load B92 into I
  $AB2: LD I, $A22 ; Load A22 into I
  $AEE: LD I, $796 ; Load 796 into I
  $B30: LD I, $060 ; Load 060 into I
  $B68: LD I, $B01 ; Load B01 into I
  $B84: LD I, $37A ; Load 37A into I
  $B86: LD I, $146 ; Load 146 into I
  $B88: LD I, $0AE ; Load 0AE into I
  $B90: LD I, $B4A ; Load B4A into I
  $BE4: LD I, $B9E ; Load B9E into I
  $BF2: LD I, $F91 ; Load F91 into I
  $C02: LD I, $AD1 ; Load AD1 into I
  $C14: LD I, $D32 ; Load D32 into I
  $C30: LD I, $B17 ; Load B17 into I
  $C3E: LD I, $C5E ; Load C5E into I
  $C8A: LD I, $C16 ; Load C16 into I
  $C98: LD I, $E94 ; Load E94 into I
  $C9E: LD I, $E62 ; Load E62 into I
  $CAC: LD I, $24A ; Load 24A into I
  $CF0: LD I, $496 ; Load 496 into I
  $D00: LD I, $210 ; Load 210 into I
  $D20: LD I, $C85 ; Load C85 into I
  $D2C: LD I, $0A9 ; Load 0A9 into I
  $D34: LD I, $BB1 ; Load BB1 into I
  $D70: LD I, $212 ; Load 212 into I
  $D9A: LD I, $2C3 ; Load 2C3 into I
  $DA0: LD I, $CD6 ; Load CD6 into I
  $DD8: LD V0, [I] ; Load V0-V0 from I
  $DEC: LD I, $F16 ; Load F16 into I
  $E2A: LD I, $E93 ; Load E93 into I
  $E6E: LD I, $062 ; Load 062 into I
  $E98: LD I, $1F9 ; Load 1F9 into I
  $EB8: LD I, $A5D ; Load A5D into I
  $ED2: LD I, $F3D ; Load F3D into I
  $F40: LD I, $306 ; Load 306 into I
  $F60: LD I, $546 ; Load 546 into I
  $F84: LD I, $0CE ; Load 0CE into I
  $FEC: LD I, $035 ; Load 035 into I

CONTROL FLOW ANALYSIS:
Jumps: 216
Calls: 111
Branches: 238
Loops: 122
Loop Structures:
  $230 -> $224 (backward jump)
  $2D2 -> $00A (backward jump)
  $346 -> $282 (backward jump)
  $354 -> $185 (backward jump)
  $3A6 -> $2A7 (backward jump)
  $3E0 -> $054 (backward jump)
  $3E6 -> $21F (backward jump)
  $4A4 -> $248 (backward jump)
  $510 -> $39B (backward jump)
  $538 -> $01A (backward jump)
  $572 -> $53E (backward jump)
  $5AE -> $1EA (backward jump)
  $600 -> $12B (backward jump)
  $6DE -> $1E1 (backward jump)
  $6F6 -> $1E3 (backward jump)
  $72E -> $69E (backward jump)
  $75C -> $297 (backward jump)
  $77A -> $33F (backward jump)
  $77C -> $2F2 (backward jump)
  $77E -> $58C (backward jump)
  $7D8 -> $575 (backward jump)
  $830 -> $773 (backward jump)
  $832 -> $055 (backward jump)
  $836 -> $174 (backward jump)
  $842 -> $20E (backward jump)
  $85C -> $529 (backward jump)
  $86E -> $639 (backward jump)
  $8A0 -> $5D1 (backward jump)
  $8EE -> $583 (backward jump)
  $8F0 -> $3D4 (backward jump)
  $8F4 -> $1C7 (backward jump)
  $914 -> $375 (backward jump)
  $928 -> $382 (backward jump)
  $93A -> $515 (backward jump)
  $948 -> $007 (backward jump)
  $97A -> $4D5 (backward jump)
  $982 -> $609 (backward jump)
  $984 -> $098 (backward jump)
  $996 -> $862 (backward jump)
  $9BA -> $691 (backward jump)
  $9C2 -> $992 (backward jump)
  $9DE -> $168 (backward jump)
  $9EC -> $60F (backward jump)
  $9FA -> $6D2 (backward jump)
  $9FE -> $9FE (backward jump)
  $A34 -> $588 (backward jump)
  $A4E -> $535 (backward jump)
  $A90 -> $8F4 (backward jump)
  $AAA -> $039 (backward jump)
  $AC8 -> $239 (backward jump)
  $AD8 -> $196 (backward jump)
  $AEC -> $0E3 (backward jump)
  $AF8 -> $667 (backward jump)
  $B00 -> $2EB (backward jump)
  $B10 -> $13F (backward jump)
  $B5A -> $662 (backward jump)
  $B64 -> $94B (backward jump)
  $B80 -> $5E1 (backward jump)
  $B8C -> $852 (backward jump)
  $BA4 -> $81B (backward jump)
  $BB2 -> $A1B (backward jump)
  $BD8 -> $515 (backward jump)
  $BF4 -> $661 (backward jump)
  $BF8 -> $12E (backward jump)
  $C38 -> $4A2 (backward jump)
  $C4A -> $47D (backward jump)
  $C54 -> $A7D (backward jump)
  $C6E -> $045 (backward jump)
  $C74 -> $085 (backward jump)
  $C7E -> $4DF (backward jump)
  $C8C -> $0EF (backward jump)
  $CA2 -> $753 (backward jump)
  $CC4 -> $8E4 (backward jump)
  $CF6 -> $0FF (backward jump)
  $D04 -> $476 (backward jump)
  $D14 -> $86F (backward jump)
  $D16 -> $1DA (backward jump)
  $D22 -> $998 (backward jump)
  $D3E -> $06E (backward jump)
  $D40 -> $644 (backward jump)
  $D4A -> $C55 (backward jump)
  $D56 -> $350 (backward jump)
  $D58 -> $2A7 (backward jump)
  $D66 -> $84F (backward jump)
  $D6E -> $C86 (backward jump)
  $DB4 -> $B53 (backward jump)
  $DD4 -> $3A2 (backward jump)
  $DE8 -> $064 (backward jump)
  $DFC -> $54F (backward jump)
  $E0A -> $5D6 (backward jump)
  $E2C -> $1E7 (backward jump)
  $E3E -> $A81 (backward jump)
  $E44 -> $B0E (backward jump)
  $E48 -> $CDA (backward jump)
  $E50 -> $4A0 (backward jump)
  $E58 -> $045 (backward jump)
  $E68 -> $301 (backward jump)
  $E78 -> $A23 (backward jump)
  $E88 -> $251 (backward jump)
  $E9C -> $775 (backward jump)
  $EAC -> $E0A (backward jump)
  $EB6 -> $979 (backward jump)
  $EC0 -> $7DC (backward jump)
  $ED0 -> $B9A (backward jump)
  $EE8 -> $CEE (backward jump)
  $EF8 -> $97A (backward jump)
  $F02 -> $D74 (backward jump)
  $F0A -> $6EB (backward jump)
  $F0C -> $884 (backward jump)
  $F38 -> $B79 (backward jump)
  $F42 -> $ADD (backward jump)
  $F44 -> $8A6 (backward jump)
  $F4A -> $DF0 (backward jump)
  $F5E -> $E3F (backward jump)
  $F6E -> $4A6 (backward jump)
  $F72 -> $E58 (backward jump)
  $F78 -> $8A7 (backward jump)
  $F98 -> $D75 (backward jump)
  $FA4 -> $81A (backward jump)
  $FCA -> $98F (backward jump)
  $FE8 -> $DF1 (backward jump)
  $FEA -> $E4E (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $CC33   RND      VC, #33         ; VC = random & 33
$202    $74F5   ADD      V4, #F5         ; Add 245 to V4
$204    $1870   JP       $870            ; Jump to 870
$206    $9DA9   UNKNOWN  $9DA9           ; Unknown 9xxx instruction
$208    $059C   SYS      $59C            ; System call to 59C
$20A    $09A3   SYS      $9A3            ; System call to 9A3
$20C    $845F   UNKNOWN  845F            ; Unknown 8xxx instruction
$20E    $614B   LD       V1, #4B         ; Load 75 into V1
$210    $DBED   DRW      VB, VE, #D      ; Draw 13-byte sprite at VB, VE
$212    $213E   CALL     $13E            ; Call subroutine at 13E
$214    $A896   LD       I, $896         ; Load 896 into I
$216    $AC24   LD       I, $C24         ; Load C24 into I
$218    $3547   SE       V5, #47         ; Skip if V5 == 71
$21A    $15B3   JP       $5B3            ; Jump to 5B3
$21C    $17D6   JP       $7D6            ; Jump to 7D6
$21E    $4C07   SNE      VC, #07         ; Skip if VC != 7
$220    $0D4D   SYS      $D4D            ; System call to D4D
$222    $DB0D   DRW      VB, V0, #D      ; Draw 13-byte sprite at VB, V0
$224    $24CA   CALL     $4CA            ; Call subroutine at 4CA
$226    $04EC   SYS      $4EC            ; System call to 4EC
$228    $BEB4   JP       V0, $EB4        ; Jump to V0 + EB4
$22A    $B50A   JP       V0, $50A        ; Jump to V0 + 50A
$22C    $F054   UNKNOWN  F054            ; Unknown Fxxx instruction
$22E    $D860   DRW      V8, V6, #0      ; Draw 0-byte sprite at V8, V6
$230    $B224   JP       V0, $224        ; Jump to V0 + 224
$232    $F251   UNKNOWN  F251            ; Unknown Fxxx instruction
$234    $5863   UNKNOWN  $5863           ; Unknown 5xxx instruction
$236    $C1E5   RND      V1, #E5         ; V1 = random & E5
$238    $79DA   ADD      V9, #DA         ; Add 218 to V9
$23A    $0799   SYS      $799            ; System call to 799
$23C    $8F1A   UNKNOWN  8F1A            ; Unknown 8xxx instruction
$23E    $04A0   SYS      $4A0            ; System call to 4A0
$240    $48D5   SNE      V8, #D5         ; Skip if V8 != 213
$242    $7EE8   ADD      VE, #E8         ; Add 232 to VE
$244    $9562   UNKNOWN  $9562           ; Unknown 9xxx instruction
$246    $FD27   UNKNOWN  FD27            ; Unknown Fxxx instruction
$248    $7105   ADD      V1, #05         ; Add 5 to V1
$24A    $9EDE   UNKNOWN  $9EDE           ; Unknown 9xxx instruction
$24C    $6F20   LD       VF, #20         ; Load 32 into VF
$24E    $0804   SYS      $804            ; System call to 804
$250    $9281   UNKNOWN  $9281           ; Unknown 9xxx instruction
$252    $3BD4   SE       VB, #D4         ; Skip if VB == 212
$254    $320C   SE       V2, #0C         ; Skip if V2 == 12
$256    $0E20   SYS      $E20            ; System call to E20
$258    $D11F   DRW      V1, V1, #F      ; Draw 15-byte sprite at V1, V1
$25A    $A144   LD       I, $144         ; Load 144 into I
$25C    $BDDB   JP       V0, $DDB        ; Jump to V0 + DDB
$25E    $6580   LD       V5, #80         ; Load 128 into V5
$260    $19E0   JP       $9E0            ; Jump to 9E0
$262    $CE7E   RND      VE, #7E         ; VE = random & 7E
$264    $B6C5   JP       V0, $6C5        ; Jump to V0 + 6C5
$266    $2A80   CALL     $A80            ; Call subroutine at A80
$268    $7AF6   ADD      VA, #F6         ; Add 246 to VA
$26A    $2D94   CALL     $D94            ; Call subroutine at D94
$26C    $A31F   LD       I, $31F         ; Load 31F into I
$26E    $84AA   UNKNOWN  84AA            ; Unknown 8xxx instruction
$270    $D91C   DRW      V9, V1, #C      ; Draw 12-byte sprite at V9, V1
$272    $DCD8   DRW      VC, VD, #8      ; Draw 8-byte sprite at VC, VD
$274    $A71D   LD       I, $71D         ; Load 71D into I
$276    $C5AA   RND      V5, #AA         ; V5 = random & AA
$278    $665F   LD       V6, #5F         ; Load 95 into V6
$27A    $C925   RND      V9, #25         ; V9 = random & 25
$27C    $C737   RND      V7, #37         ; V7 = random & 37
$27E    $E16F   UNKNOWN  $E16F           ; Unknown Exxx instruction
$280    $2C92   CALL     $C92            ; Call subroutine at C92
$282    $C7DF   RND      V7, #DF         ; V7 = random & DF
$284    $C6DA   RND      V6, #DA         ; V6 = random & DA
$286    $F28C   UNKNOWN  F28C            ; Unknown Fxxx instruction
$288    $2135   CALL     $135            ; Call subroutine at 135
$28A    $E914   UNKNOWN  $E914           ; Unknown Exxx instruction
$28C    $9287   UNKNOWN  $9287           ; Unknown 9xxx instruction
$28E    $B722   JP       V0, $722        ; Jump to V0 + 722
$290    $1A0E   JP       $A0E            ; Jump to A0E
$292    $30B2   SE       V0, #B2         ; Skip if V0 == 178
$294    $5B03   UNKNOWN  $5B03           ; Unknown 5xxx instruction
$296    $A5FE   LD       I, $5FE         ; Load 5FE into I
$298    $AF70   LD       I, $F70         ; Load F70 into I
$29A    $A3B4   LD       I, $3B4         ; Load 3B4 into I
$29C    $E6B8   UNKNOWN  $E6B8           ; Unknown Exxx instruction
$29E    $D4D3   DRW      V4, VD, #3      ; Draw 3-byte sprite at V4, VD
$2A0    $830C   UNKNOWN  830C            ; Unknown 8xxx instruction
$2A2    $EE28   UNKNOWN  $EE28           ; Unknown Exxx instruction
$2A4    $889E   SHL      V8              ; V8 <<= 1, VF = MSB
$2A6    $DB8A   DRW      VB, V8, #A      ; Draw 10-byte sprite at VB, V8
$2A8    $C352   RND      V3, #52         ; V3 = random & 52
$2AA    $48A6   SNE      V8, #A6         ; Skip if V8 != 166
$2AC    $E6FF   UNKNOWN  $E6FF           ; Unknown Exxx instruction
$2AE    $E1D6   UNKNOWN  $E1D6           ; Unknown Exxx instruction
$2B0    $8AFE   SHL      VA              ; VA <<= 1, VF = MSB
$2B2    $6AFB   LD       VA, #FB         ; Load 251 into VA
$2B4    $09D4   SYS      $9D4            ; System call to 9D4
$2B6    $FD54   UNKNOWN  FD54            ; Unknown Fxxx instruction
$2B8    $7303   ADD      V3, #03         ; Add 3 to V3
$2BA    $1615   JP       $615            ; Jump to 615
$2BC    $227D   CALL     $27D            ; Call subroutine at 27D
$2BE    $5935   UNKNOWN  $5935           ; Unknown 5xxx instruction
$2C0    $B8ED   JP       V0, $8ED        ; Jump to V0 + 8ED
$2C2    $66B3   LD       V6, #B3         ; Load 179 into V6
$2C4    $7CB8   ADD      VC, #B8         ; Add 184 to VC
$2C6    $5E8D   UNKNOWN  $5E8D           ; Unknown 5xxx instruction
$2C8    $3B07   SE       VB, #07         ; Skip if VB == 7
$2CA    $70B5   ADD      V0, #B5         ; Add 181 to V0
$2CC    $9C31   UNKNOWN  $9C31           ; Unknown 9xxx instruction
$2CE    $2776   CALL     $776            ; Call subroutine at 776
$2D0    $21CC   CALL     $1CC            ; Call subroutine at 1CC
$2D2    $B00A   JP       V0, $00A        ; Jump to V0 + 00A
$2D4    $EFC9   UNKNOWN  $EFC9           ; Unknown Exxx instruction
$2D6    $09A7   SYS      $9A7            ; System call to 9A7
$2D8    $63F0   LD       V3, #F0         ; Load 240 into V3
$2DA    $81E6   SHR      V1              ; V1 >>= 1, VF = LSB
$2DC    $5059   UNKNOWN  $5059           ; Unknown 5xxx instruction
$2DE    $CD95   RND      VD, #95         ; VD = random & 95
$2E0    $6B57   LD       VB, #57         ; Load 87 into VB
$2E2    $BDFA   JP       V0, $DFA        ; Jump to V0 + DFA
$2E4    $6210   LD       V2, #10         ; Load 16 into V2
$2E6    $2E01   CALL     $E01            ; Call subroutine at E01
$2E8    $F63A   UNKNOWN  F63A            ; Unknown Fxxx instruction
$2EA    $6880   LD       V8, #80         ; Load 128 into V8
$2EC    $41D9   SNE      V1, #D9         ; Skip if V1 != 217
$2EE    $D2CC   DRW      V2, VC, #C      ; Draw 12-byte sprite at V2, VC
$2F0    $9C7A   UNKNOWN  $9C7A           ; Unknown 9xxx instruction
$2F2    $5D40   SE       VD, V4          ; Skip if VD == V4
$2F4    $2001   CALL     $001            ; Call subroutine at 001
$2F6    $6BF3   LD       VB, #F3         ; Load 243 into VB
$2F8    $E946   UNKNOWN  $E946           ; Unknown Exxx instruction
$2FA    $85DD   UNKNOWN  85DD            ; Unknown 8xxx instruction
$2FC    $8782   AND      V7, V8          ; V7 &= V8
$2FE    $B498   JP       V0, $498        ; Jump to V0 + 498
$300    $FEFE   UNKNOWN  FEFE            ; Unknown Fxxx instruction
$302    $C244   RND      V2, #44         ; V2 = random & 44
$304    $4134   SNE      V1, #34         ; Skip if V1 != 52
$308    $0011   SYS      $011            ; System call to 011
$30A    $78D5   ADD      V8, #D5         ; Add 213 to V8
$30C    $6D58   LD       VD, #58         ; Load 88 into VD
$30E    $1CC3   JP       $CC3            ; Jump to CC3
$310    $784F   ADD      V8, #4F         ; Add 79 to V8
$312    $75D7   ADD      V5, #D7         ; Add 215 to V5
$314    $92CC   UNKNOWN  $92CC           ; Unknown 9xxx instruction
$316    $C6B8   RND      V6, #B8         ; V6 = random & B8
$318    $8AB2   AND      VA, VB          ; VA &= VB
$31A    $98E8   UNKNOWN  $98E8           ; Unknown 9xxx instruction
$31C    $4E3F   SNE      VE, #3F         ; Skip if VE != 63
$31E    $7A71   ADD      VA, #71         ; Add 113 to VA
$320    $19BF   JP       $9BF            ; Jump to 9BF
$322    $2143   CALL     $143            ; Call subroutine at 143
$324    $5FC0   SE       VF, VC          ; Skip if VF == VC
$326    $7919   ADD      V9, #19         ; Add 25 to V9
$328    $C983   RND      V9, #83         ; V9 = random & 83
$32A    $6CDC   LD       VC, #DC         ; Load 220 into VC
$32C    $E731   UNKNOWN  $E731           ; Unknown Exxx instruction
$32E    $22B3   CALL     $2B3            ; Call subroutine at 2B3
$330    $6FEB   LD       VF, #EB         ; Load 235 into VF
$332    $0AD3   SYS      $AD3            ; System call to AD3
$334    $51D9   UNKNOWN  $51D9           ; Unknown 5xxx instruction
$336    $C3F4   RND      V3, #F4         ; V3 = random & F4
$338    $F94C   UNKNOWN  F94C            ; Unknown Fxxx instruction
$33A    $B563   JP       V0, $563        ; Jump to V0 + 563
$33C    $6B64   LD       VB, #64         ; Load 100 into VB
$33E    $5C27   UNKNOWN  $5C27           ; Unknown 5xxx instruction
$340    $FBDA   UNKNOWN  FBDA            ; Unknown Fxxx instruction
$342    $A033   LD       I, $033         ; Load 033 into I
$344    $4E13   SNE      VE, #13         ; Skip if VE != 19
$346    $B282   JP       V0, $282        ; Jump to V0 + 282
$348    $A268   LD       I, $268         ; Load 268 into I
$34A    $3A45   SE       VA, #45         ; Skip if VA == 69
$34C    $E15D   UNKNOWN  $E15D           ; Unknown Exxx instruction
$34E    $8E1E   SHL      VE              ; VE <<= 1, VF = MSB
$350    $2360   CALL     $360            ; Call subroutine at 360
$352    $AA4F   LD       I, $A4F         ; Load A4F into I
$354    $1185   JP       $185            ; Jump to 185
$356    $7287   ADD      V2, #87         ; Add 135 to V2
$358    $D9E5   DRW      V9, VE, #5      ; Draw 5-byte sprite at V9, VE
$35A    $83F6   SHR      V3              ; V3 >>= 1, VF = LSB
$35C    $BF29   JP       V0, $F29        ; Jump to V0 + F29
$35E    $F2F1   UNKNOWN  F2F1            ; Unknown Fxxx instruction
$360    $5712   UNKNOWN  $5712           ; Unknown 5xxx instruction
$362    $CF9B   RND      VF, #9B         ; VF = random & 9B
$364    $5E87   UNKNOWN  $5E87           ; Unknown 5xxx instruction
$366    $0FB1   SYS      $FB1            ; System call to FB1
$368    $4B35   SNE      VB, #35         ; Skip if VB != 53
$36A    $8E07   SUBN     VE, V0          ; VE = V0 - VE, VF = !borrow
$36C    $BED1   JP       V0, $ED1        ; Jump to V0 + ED1
$36E    $075D   SYS      $75D            ; System call to 75D
$370    $BDC6   JP       V0, $DC6        ; Jump to V0 + DC6
$372    $59E4   UNKNOWN  $59E4           ; Unknown 5xxx instruction
$374    $C583   RND      V5, #83         ; V5 = random & 83
$376    $FC2B   UNKNOWN  FC2B            ; Unknown Fxxx instruction
$378    $28CB   CALL     $8CB            ; Call subroutine at 8CB
$37A    $7550   ADD      V5, #50         ; Add 80 to V5
$37C    $8A67   SUBN     VA, V6          ; VA = V6 - VA, VF = !borrow
$37E    $F2FA   UNKNOWN  F2FA            ; Unknown Fxxx instruction
$380    $6509   LD       V5, #09         ; Load 9 into V5
$382    $611E   LD       V1, #1E         ; Load 30 into V1
$384    $CFA4   RND      VF, #A4         ; VF = random & A4
$386    $5853   UNKNOWN  $5853           ; Unknown 5xxx instruction
$388    $9EA7   UNKNOWN  $9EA7           ; Unknown 9xxx instruction
$38A    $8D35   SUB      VD, V3          ; VD -= V3, VF = !borrow
$38C    $16D1   JP       $6D1            ; Jump to 6D1
$38E    $F15C   UNKNOWN  F15C            ; Unknown Fxxx instruction
$390    $178B   JP       $78B            ; Jump to 78B
$392    $AC8A   LD       I, $C8A         ; Load C8A into I
$394    $0127   SYS      $127            ; System call to 127
$396    $9ED1   UNKNOWN  $9ED1           ; Unknown 9xxx instruction
$398    $4758   SNE      V7, #58         ; Skip if V7 != 88
$39A    $72DC   ADD      V2, #DC         ; Add 220 to V2
$39C    $CDB0   RND      VD, #B0         ; VD = random & B0
$39E    $EE2A   UNKNOWN  $EE2A           ; Unknown Exxx instruction
$3A0    $8FC7   SUBN     VF, VC          ; VF = VC - VF, VF = !borrow
$3A2    $DB69   DRW      VB, V6, #9      ; Draw 9-byte sprite at VB, V6
$3A4    $19A2   JP       $9A2            ; Jump to 9A2
$3A6    $B2A7   JP       V0, $2A7        ; Jump to V0 + 2A7
$3A8    $5297   UNKNOWN  $5297           ; Unknown 5xxx instruction
$3AA    $A946   LD       I, $946         ; Load 946 into I
$3AC    $EBAC   UNKNOWN  $EBAC           ; Unknown Exxx instruction
$3AE    $DCF8   DRW      VC, VF, #8      ; Draw 8-byte sprite at VC, VF
$3B0    $5435   UNKNOWN  $5435           ; Unknown 5xxx instruction
$3B2    $8BC8   UNKNOWN  8BC8            ; Unknown 8xxx instruction
$3B4    $23C4   CALL     $3C4            ; Call subroutine at 3C4
$3B6    $77E5   ADD      V7, #E5         ; Add 229 to V7
$3B8    $835B   UNKNOWN  835B            ; Unknown 8xxx instruction
$3BA    $2BBB   CALL     $BBB            ; Call subroutine at BBB
$3BC    $5771   UNKNOWN  $5771           ; Unknown 5xxx instruction
$3BE    $540D   UNKNOWN  $540D           ; Unknown 5xxx instruction
$3C0    $BE1C   JP       V0, $E1C        ; Jump to V0 + E1C
$3C2    $5600   SE       V6, V0          ; Skip if V6 == V0
$3C4    $2B00   CALL     $B00            ; Call subroutine at B00
$3C6    $6F58   LD       VF, #58         ; Load 88 into VF
$3C8    $D91A   DRW      V9, V1, #A      ; Draw 10-byte sprite at V9, V1
$3CA    $C7D3   RND      V7, #D3         ; V7 = random & D3
$3CC    $E946   UNKNOWN  $E946           ; Unknown Exxx instruction
$3CE    $B55D   JP       V0, $55D        ; Jump to V0 + 55D
$3D0    $3D67   SE       VD, #67         ; Skip if VD == 103
$3D2    $9ABF   UNKNOWN  $9ABF           ; Unknown 9xxx instruction
$3D4    $9292   UNKNOWN  $9292           ; Unknown 9xxx instruction
$3D6    $F467   UNKNOWN  F467            ; Unknown Fxxx instruction
$3D8    $64CB   LD       V4, #CB         ; Load 203 into V4
$3DA    $30A1   SE       V0, #A1         ; Skip if V0 == 161
$3DC    $9A6A   UNKNOWN  $9A6A           ; Unknown 9xxx instruction
$3DE    $7F8C   ADD      VF, #8C         ; Add 140 to VF
$3E0    $B054   JP       V0, $054        ; Jump to V0 + 054
$3E2    $D8C2   DRW      V8, VC, #2      ; Draw 2-byte sprite at V8, VC
$3E4    $1472   JP       $472            ; Jump to 472
$3E6    $121F   JP       $21F            ; Jump to 21F
$3E8    $4BBF   SNE      VB, #BF         ; Skip if VB != 191
$3EA    $6EF5   LD       VE, #F5         ; Load 245 into VE
$3EC    $17EB   JP       $7EB            ; Jump to 7EB
$3EE    $B4B1   JP       V0, $4B1        ; Jump to V0 + 4B1
$3F0    $BC2D   JP       V0, $C2D        ; Jump to V0 + C2D
$3F2    $6AB4   LD       VA, #B4         ; Load 180 into VA
$3F4    $146C   JP       $46C            ; Jump to 46C
$3F6    $9A73   UNKNOWN  $9A73           ; Unknown 9xxx instruction
$3F8    $14DA   JP       $4DA            ; Jump to 4DA
$3FA    $6DE3   LD       VD, #E3         ; Load 227 into VD
$3FC    $46DF   SNE      V6, #DF         ; Skip if V6 != 223
$3FE    $9BF7   UNKNOWN  $9BF7           ; Unknown 9xxx instruction
$400    $6CD7   LD       VC, #D7         ; Load 215 into VC
$402    $F743   UNKNOWN  F743            ; Unknown Fxxx instruction
$404    $7DD3   ADD      VD, #D3         ; Add 211 to VD
$406    $DFE0   DRW      VF, VE, #0      ; Draw 0-byte sprite at VF, VE
$408    $E0B8   UNKNOWN  $E0B8           ; Unknown Exxx instruction
$40A    $74ED   ADD      V4, #ED         ; Add 237 to V4
$40C    $4A30   SNE      VA, #30         ; Skip if VA != 48
$40E    $C08B   RND      V0, #8B         ; V0 = random & 8B
$410    $6070   LD       V0, #70         ; Load 112 into V0
$412    $53C9   UNKNOWN  $53C9           ; Unknown 5xxx instruction
$414    $A97A   LD       I, $97A         ; Load 97A into I
$416    $C1CC   RND      V1, #CC         ; V1 = random & CC
$418    $0A63   SYS      $A63            ; System call to A63
$41A    $6A0F   LD       VA, #0F         ; Load 15 into VA
$41C    $AC26   LD       I, $C26         ; Load C26 into I
$41E    $E84B   UNKNOWN  $E84B           ; Unknown Exxx instruction
$420    $8E0B   UNKNOWN  8E0B            ; Unknown 8xxx instruction
$422    $DA3D   DRW      VA, V3, #D      ; Draw 13-byte sprite at VA, V3
$424    $9891   UNKNOWN  $9891           ; Unknown 9xxx instruction
$426    $909B   UNKNOWN  $909B           ; Unknown 9xxx instruction
$428    $C186   RND      V1, #86         ; V1 = random & 86
$42A    $70B9   ADD      V0, #B9         ; Add 185 to V0
$42C    $7695   ADD      V6, #95         ; Add 149 to V6
$42E    $35FF   SE       V5, #FF         ; Skip if V5 == 255
$430    $9D77   UNKNOWN  $9D77           ; Unknown 9xxx instruction
$432    $3D1F   SE       VD, #1F         ; Skip if VD == 31
$434    $A0B8   LD       I, $0B8         ; Load 0B8 into I
$436    $692D   LD       V9, #2D         ; Load 45 into V9
$438    $BB82   JP       V0, $B82        ; Jump to V0 + B82
$43A    $732D   ADD      V3, #2D         ; Add 45 to V3
$43C    $F708   UNKNOWN  F708            ; Unknown Fxxx instruction
$43E    $A6A0   LD       I, $6A0         ; Load 6A0 into I
$440    $BE1C   JP       V0, $E1C        ; Jump to V0 + E1C
$442    $F75F   UNKNOWN  F75F            ; Unknown Fxxx instruction
$444    $46E0   SNE      V6, #E0         ; Skip if V6 != 224
$446    $EED6   UNKNOWN  $EED6           ; Unknown Exxx instruction
$448    $E455   UNKNOWN  $E455           ; Unknown Exxx instruction
$44A    $3FA3   SE       VF, #A3         ; Skip if VF == 163
$44C    $CDA5   RND      VD, #A5         ; VD = random & A5
$44E    $6F8A   LD       VF, #8A         ; Load 138 into VF
$450    $33EA   SE       V3, #EA         ; Skip if V3 == 234
$452    $3562   SE       V5, #62         ; Skip if V5 == 98
$454    $BC14   JP       V0, $C14        ; Jump to V0 + C14
$456    $3A54   SE       VA, #54         ; Skip if VA == 84
$458    $4942   SNE      V9, #42         ; Skip if V9 != 66
$45A    $6C93   LD       VC, #93         ; Load 147 into VC
$45C    $DFDA   DRW      VF, VD, #A      ; Draw 10-byte sprite at VF, VD
$45E    $2B92   CALL     $B92            ; Call subroutine at B92
$460    $7008   ADD      V0, #08         ; Add 8 to V0
$462    $00B8   SYS      $0B8            ; System call to 0B8
$464    $AE2C   LD       I, $E2C         ; Load E2C into I
$466    $A734   LD       I, $734         ; Load 734 into I
$468    $F527   UNKNOWN  F527            ; Unknown Fxxx instruction
$46A    $5132   UNKNOWN  $5132           ; Unknown 5xxx instruction
$46C    $6DFC   LD       VD, #FC         ; Load 252 into VD
$46E    $7A78   ADD      VA, #78         ; Add 120 to VA
$470    $BCA6   JP       V0, $CA6        ; Jump to V0 + CA6
$472    $BB49   JP       V0, $B49        ; Jump to V0 + B49
$474    $31DF   SE       V1, #DF         ; Skip if V1 == 223
$476    $C5D4   RND      V5, #D4         ; V5 = random & D4
$478    $5968   UNKNOWN  $5968           ; Unknown 5xxx instruction
$47A    $91C6   UNKNOWN  $91C6           ; Unknown 9xxx instruction
$47C    $9028   UNKNOWN  $9028           ; Unknown 9xxx instruction
$47E    $36E4   SE       V6, #E4         ; Skip if V6 == 228
$480    $FC28   UNKNOWN  FC28            ; Unknown Fxxx instruction
$482    $9530   SNE      V5, V3          ; Skip if V5 != V3
$484    $0E7A   SYS      $E7A            ; System call to E7A
$486    $30D3   SE       V0, #D3         ; Skip if V0 == 211
$488    $2797   CALL     $797            ; Call subroutine at 797
$48A    $D4C3   DRW      V4, VC, #3      ; Draw 3-byte sprite at V4, VC
$48C    $9F31   UNKNOWN  $9F31           ; Unknown 9xxx instruction
$48E    $CBE8   RND      VB, #E8         ; VB = random & E8
$490    $D2DD   DRW      V2, VD, #D      ; Draw 13-byte sprite at V2, VD
$492    $3318   SE       V3, #18         ; Skip if V3 == 24
$494    $7183   ADD      V1, #83         ; Add 131 to V1
$496    $3B2A   SE       VB, #2A         ; Skip if VB == 42
$498    $6E9E   LD       VE, #9E         ; Load 158 into VE
$49A    $946A   UNKNOWN  $946A           ; Unknown 9xxx instruction
$49C    $AFEB   LD       I, $FEB         ; Load FEB into I
$49E    $7F8C   ADD      VF, #8C         ; Add 140 to VF
$4A0    $80A8   UNKNOWN  80A8            ; Unknown 8xxx instruction
$4A2    $8488   UNKNOWN  8488            ; Unknown 8xxx instruction
$4A4    $1248   JP       $248            ; Jump to 248
$4A6    $2D62   CALL     $D62            ; Call subroutine at D62
$4A8    $9E34   UNKNOWN  $9E34           ; Unknown 9xxx instruction
$4AA    $842F   UNKNOWN  842F            ; Unknown 8xxx instruction
$4AC    $348A   SE       V4, #8A         ; Skip if V4 == 138
$4AE    $FE7C   UNKNOWN  FE7C            ; Unknown Fxxx instruction
$4B0    $487C   SNE      V8, #7C         ; Skip if V8 != 124
$4B2    $6BBB   LD       VB, #BB         ; Load 187 into VB
$4B4    $A649   LD       I, $649         ; Load 649 into I
$4B6    $D867   DRW      V8, V6, #7      ; Draw 7-byte sprite at V8, V6
$4B8    $626A   LD       V2, #6A         ; Load 106 into V2
$4BA    $068F   SYS      $68F            ; System call to 68F
$4BC    $29D3   CALL     $9D3            ; Call subroutine at 9D3
$4BE    $555B   UNKNOWN  $555B           ; Unknown 5xxx instruction
$4C0    $8240   LD       V2, V4          ; V2 = V4
$4C2    $1DBE   JP       $DBE            ; Jump to DBE
$4C4    $168F   JP       $68F            ; Jump to 68F
$4C6    $1507   JP       $507            ; Jump to 507
$4C8    $F687   UNKNOWN  F687            ; Unknown Fxxx instruction
$4CA    $C797   RND      V7, #97         ; V7 = random & 97
$4CC    $FE0D   UNKNOWN  FE0D            ; Unknown Fxxx instruction
$4CE    $974A   UNKNOWN  $974A           ; Unknown 9xxx instruction
$4D0    $70BB   ADD      V0, #BB         ; Add 187 to V0
$4D2    $9A89   UNKNOWN  $9A89           ; Unknown 9xxx instruction
$4D4    $3E9D   SE       VE, #9D         ; Skip if VE == 157
$4D6    $79DA   ADD      V9, #DA         ; Add 218 to V9
$4D8    $4AC7   SNE      VA, #C7         ; Skip if VA != 199
$4DA    $9060   SNE      V0, V6          ; Skip if V0 != V6
$4DC    $33C0   SE       V3, #C0         ; Skip if V3 == 192
$4DE    $D143   DRW      V1, V4, #3      ; Draw 3-byte sprite at V1, V4
$4E0    $7656   ADD      V6, #56         ; Add 86 to V6
$4E2    $5C86   UNKNOWN  $5C86           ; Unknown 5xxx instruction
$4E4    $61C8   LD       V1, #C8         ; Load 200 into V1
$4E6    $FF8D   UNKNOWN  FF8D            ; Unknown Fxxx instruction
$4E8    $7DEF   ADD      VD, #EF         ; Add 239 to VD
$4EA    $FFB5   UNKNOWN  FFB5            ; Unknown Fxxx instruction
$4EC    $39DF   SE       V9, #DF         ; Skip if V9 == 223
$4EE    $AC84   LD       I, $C84         ; Load C84 into I
$4F0    $53F6   UNKNOWN  $53F6           ; Unknown 5xxx instruction
$4F2    $BB12   JP       V0, $B12        ; Jump to V0 + B12
$4F4    $0B95   SYS      $B95            ; System call to B95
$4F6    $07CD   SYS      $7CD            ; System call to 7CD
$4F8    $F6A8   UNKNOWN  F6A8            ; Unknown Fxxx instruction
$4FA    $03D2   SYS      $3D2            ; System call to 3D2
$4FC    $4308   SNE      V3, #08         ; Skip if V3 != 8
$4FE    $E373   UNKNOWN  $E373           ; Unknown Exxx instruction
$500    $A8DD   LD       I, $8DD         ; Load 8DD into I
$502    $A0F9   LD       I, $0F9         ; Load 0F9 into I
$504    $DCB0   DRW      VC, VB, #0      ; Draw 0-byte sprite at VC, VB
$506    $DE8B   DRW      VE, V8, #B      ; Draw 11-byte sprite at VE, V8
$508    $0A49   SYS      $A49            ; System call to A49
$50A    $75E3   ADD      V5, #E3         ; Add 227 to V5
$50C    $2674   CALL     $674            ; Call subroutine at 674
$50E    $5555   UNKNOWN  $5555           ; Unknown 5xxx instruction
$510    $139B   JP       $39B            ; Jump to 39B
$512    $E80E   UNKNOWN  $E80E           ; Unknown Exxx instruction
$514    $1753   JP       $753            ; Jump to 753
$516    $2546   CALL     $546            ; Call subroutine at 546
$518    $C24B   RND      V2, #4B         ; V2 = random & 4B
$51A    $68F5   LD       V8, #F5         ; Load 245 into V8
$51C    $EFDC   UNKNOWN  $EFDC           ; Unknown Exxx instruction
$51E    $E6D0   UNKNOWN  $E6D0           ; Unknown Exxx instruction
$520    $6625   LD       V6, #25         ; Load 37 into V6
$522    $A396   LD       I, $396         ; Load 396 into I
$524    $4499   SNE      V4, #99         ; Skip if V4 != 153
$526    $824C   UNKNOWN  824C            ; Unknown 8xxx instruction
$528    $BE51   JP       V0, $E51        ; Jump to V0 + E51
$52A    $C7FB   RND      V7, #FB         ; V7 = random & FB
$52C    $D718   DRW      V7, V1, #8      ; Draw 8-byte sprite at V7, V1
$52E    $61C9   LD       V1, #C9         ; Load 201 into V1
$530    $413F   SNE      V1, #3F         ; Skip if V1 != 63
$532    $AD00   LD       I, $D00         ; Load D00 into I
$534    $1DF5   JP       $DF5            ; Jump to DF5
$536    $B5D9   JP       V0, $5D9        ; Jump to V0 + 5D9
$538    $B01A   JP       V0, $01A        ; Jump to V0 + 01A
$53A    $4C23   SNE      VC, #23         ; Skip if VC != 35
$53C    $8EE6   SHR      VE              ; VE >>= 1, VF = LSB
$53E    $00AD   SYS      $0AD            ; System call to 0AD
$540    $83F8   UNKNOWN  83F8            ; Unknown 8xxx instruction
$542    $AFA9   LD       I, $FA9         ; Load FA9 into I
$544    $4891   SNE      V8, #91         ; Skip if V8 != 145
$546    $E83A   UNKNOWN  $E83A           ; Unknown Exxx instruction
$548    $1DA6   JP       $DA6            ; Jump to DA6
$54A    $9CAF   UNKNOWN  $9CAF           ; Unknown 9xxx instruction
$54C    $5A2A   UNKNOWN  $5A2A           ; Unknown 5xxx instruction
$54E    $92F2   UNKNOWN  $92F2           ; Unknown 9xxx instruction
$550    $01F3   SYS      $1F3            ; System call to 1F3
$552    $7E0A   ADD      VE, #0A         ; Add 10 to VE
$554    $4374   SNE      V3, #74         ; Skip if V3 != 116
$556    $D166   DRW      V1, V6, #6      ; Draw 6-byte sprite at V1, V6
$558    $B7A5   JP       V0, $7A5        ; Jump to V0 + 7A5
$55A    $BC9F   JP       V0, $C9F        ; Jump to V0 + C9F
$55C    $3129   SE       V1, #29         ; Skip if V1 == 41
$55E    $73D7   ADD      V3, #D7         ; Add 215 to V3
$560    $4B28   SNE      VB, #28         ; Skip if VB != 40
$562    $521B   UNKNOWN  $521B           ; Unknown 5xxx instruction
$564    $017B   SYS      $17B            ; System call to 17B
$566    $0B91   SYS      $B91            ; System call to B91
$568    $50AD   UNKNOWN  $50AD           ; Unknown 5xxx instruction
$56A    $5FD1   UNKNOWN  $5FD1           ; Unknown 5xxx instruction
$56C    $DE50   DRW      VE, V5, #0      ; Draw 0-byte sprite at VE, V5
$56E    $1848   JP       $848            ; Jump to 848
$570    $091E   SYS      $91E            ; System call to 91E
$572    $153E   JP       $53E            ; Jump to 53E
$574    $FE0C   UNKNOWN  FE0C            ; Unknown Fxxx instruction
$576    $FC08   UNKNOWN  FC08            ; Unknown Fxxx instruction
$578    $3317   SE       V3, #17         ; Skip if V3 == 23
$57A    $DEE7   DRW      VE, VE, #7      ; Draw 7-byte sprite at VE, VE
$57C    $D749   DRW      V7, V4, #9      ; Draw 9-byte sprite at V7, V4
$57E    $EDD8   UNKNOWN  $EDD8           ; Unknown Exxx instruction
$580    $286F   CALL     $86F            ; Call subroutine at 86F
$582    $7E3A   ADD      VE, #3A         ; Add 58 to VE
$584    $3978   SE       V9, #78         ; Skip if V9 == 120
$586    $1BCC   JP       $BCC            ; Jump to BCC
$588    $E020   UNKNOWN  $E020           ; Unknown Exxx instruction
$58A    $0C7B   SYS      $C7B            ; System call to C7B
$58C    $74CF   ADD      V4, #CF         ; Add 207 to V4
$58E    $A528   LD       I, $528         ; Load 528 into I
$590    $0C01   SYS      $C01            ; System call to C01
$592    $4CF1   SNE      VC, #F1         ; Skip if VC != 241
$594    $0C9E   SYS      $C9E            ; System call to C9E
$596    $009F   SYS      $09F            ; System call to 09F
$598    $1F50   JP       $F50            ; Jump to F50
$59A    $18EF   JP       $8EF            ; Jump to 8EF
$59C    $E201   UNKNOWN  $E201           ; Unknown Exxx instruction
$59E    $9BE3   UNKNOWN  $9BE3           ; Unknown 9xxx instruction
$5A0    $F614   UNKNOWN  F614            ; Unknown Fxxx instruction
$5A2    $9D2C   UNKNOWN  $9D2C           ; Unknown 9xxx instruction
$5A4    $E144   UNKNOWN  $E144           ; Unknown Exxx instruction
$5A6    $3BB4   SE       VB, #B4         ; Skip if VB == 180
$5A8    $71F7   ADD      V1, #F7         ; Add 247 to V1
$5AA    $9DCB   UNKNOWN  $9DCB           ; Unknown 9xxx instruction
$5AC    $731A   ADD      V3, #1A         ; Add 26 to V3
$5AE    $B1EA   JP       V0, $1EA        ; Jump to V0 + 1EA
$5B0    $9C21   UNKNOWN  $9C21           ; Unknown 9xxx instruction
$5B2    $9E02   UNKNOWN  $9E02           ; Unknown 9xxx instruction
$5B4    $1DA4   JP       $DA4            ; Jump to DA4
$5B6    $3FF3   SE       VF, #F3         ; Skip if VF == 243
$5B8    $6172   LD       V1, #72         ; Load 114 into V1
$5BA    $0D69   SYS      $D69            ; System call to D69
$5BE    $004D   SYS      $04D            ; System call to 04D
$5C0    $054E   SYS      $54E            ; System call to 54E
$5C2    $DC1C   DRW      VC, V1, #C      ; Draw 12-byte sprite at VC, V1
$5C4    $0BFF   SYS      $BFF            ; System call to BFF
$5C6    $4FE7   SNE      VF, #E7         ; Skip if VF != 231
$5C8    $F36A   UNKNOWN  F36A            ; Unknown Fxxx instruction
$5CA    $EF3C   UNKNOWN  $EF3C           ; Unknown Exxx instruction
$5CC    $1909   JP       $909            ; Jump to 909
$5CE    $691B   LD       V9, #1B         ; Load 27 into V9
$5D0    $A8B7   LD       I, $8B7         ; Load 8B7 into I
$5D2    $F808   UNKNOWN  F808            ; Unknown Fxxx instruction
$5D4    $667D   LD       V6, #7D         ; Load 125 into V6
$5D6    $A374   LD       I, $374         ; Load 374 into I
$5D8    $8884   ADD      V8, V8          ; V8 += V8, VF = carry
$5DA    $E1E6   UNKNOWN  $E1E6           ; Unknown Exxx instruction
$5DC    $7901   ADD      V9, #01         ; Add 1 to V9
$5DE    $AE35   LD       I, $E35         ; Load E35 into I
$5E0    $5919   UNKNOWN  $5919           ; Unknown 5xxx instruction
$5E2    $7CEC   ADD      VC, #EC         ; Add 236 to VC
$5E4    $F6C9   UNKNOWN  F6C9            ; Unknown Fxxx instruction
$5E6    $464B   SNE      V6, #4B         ; Skip if V6 != 75
$5E8    $7369   ADD      V3, #69         ; Add 105 to V3
$5EA    $C9A5   RND      V9, #A5         ; V9 = random & A5
$5EC    $0C7D   SYS      $C7D            ; System call to C7D
$5EE    $8450   LD       V4, V5          ; V4 = V5
$5F0    $28EF   CALL     $8EF            ; Call subroutine at 8EF
$5F2    $7526   ADD      V5, #26         ; Add 38 to V5
$5F4    $D9B2   DRW      V9, VB, #2      ; Draw 2-byte sprite at V9, VB
$5F6    $2AEB   CALL     $AEB            ; Call subroutine at AEB
$5F8    $4851   SNE      V8, #51         ; Skip if V8 != 81
$5FA    $458D   SNE      V5, #8D         ; Skip if V5 != 141
$5FC    $1A41   JP       $A41            ; Jump to A41
$5FE    $F8A0   UNKNOWN  F8A0            ; Unknown Fxxx instruction
$600    $B12B   JP       V0, $12B        ; Jump to V0 + 12B
$602    $9A52   UNKNOWN  $9A52           ; Unknown 9xxx instruction
$604    $1CB4   JP       $CB4            ; Jump to CB4
$606    $2FE3   CALL     $FE3            ; Call subroutine at FE3
$608    $844E   SHL      V4              ; V4 <<= 1, VF = MSB
$60A    $BEDA   JP       V0, $EDA        ; Jump to V0 + EDA
$60C    $BB45   JP       V0, $B45        ; Jump to V0 + B45
$60E    $898C   UNKNOWN  898C            ; Unknown 8xxx instruction
$610    $A6AC   LD       I, $6AC         ; Load 6AC into I
$612    $60BB   LD       V0, #BB         ; Load 187 into V0
$614    $4F9E   SNE      VF, #9E         ; Skip if VF != 158
$616    $5EA0   SE       VE, VA          ; Skip if VE == VA
$618    $77A2   ADD      V7, #A2         ; Add 162 to V7
$61A    $4D91   SNE      VD, #91         ; Skip if VD != 145
$61C    $BEFF   JP       V0, $EFF        ; Jump to V0 + EFF
$61E    $DB1F   DRW      VB, V1, #F      ; Draw 15-byte sprite at VB, V1
$620    $16CB   JP       $6CB            ; Jump to 6CB
$622    $21AA   CALL     $1AA            ; Call subroutine at 1AA
$624    $3CBC   SE       VC, #BC         ; Skip if VC == 188
$626    $DDA4   DRW      VD, VA, #4      ; Draw 4-byte sprite at VD, VA
$628    $F483   UNKNOWN  F483            ; Unknown Fxxx instruction
$62A    $92BC   UNKNOWN  $92BC           ; Unknown 9xxx instruction
$62C    $A5C8   LD       I, $5C8         ; Load 5C8 into I
$62E    $6B3C   LD       VB, #3C         ; Load 60 into VB
$630    $5B06   UNKNOWN  $5B06           ; Unknown 5xxx instruction
$632    $3711   SE       V7, #11         ; Skip if V7 == 17
$634    $7BDF   ADD      VB, #DF         ; Add 223 to VB
$636    $3D50   SE       VD, #50         ; Skip if VD == 80
$638    $8380   LD       V3, V8          ; V3 = V8
$63A    $5FAC   UNKNOWN  $5FAC           ; Unknown 5xxx instruction
$63C    $21FB   CALL     $1FB            ; Call subroutine at 1FB
$63E    $3582   SE       V5, #82         ; Skip if V5 == 130
$640    $4520   SNE      V5, #20         ; Skip if V5 != 32
$642    $D6E5   DRW      V6, VE, #5      ; Draw 5-byte sprite at V6, VE
$644    $F03D   UNKNOWN  F03D            ; Unknown Fxxx instruction
$646    $72CC   ADD      V2, #CC         ; Add 204 to V2
$648    $FDA4   UNKNOWN  FDA4            ; Unknown Fxxx instruction
$64A    $FDD4   UNKNOWN  FDD4            ; Unknown Fxxx instruction
$64C    $9C87   UNKNOWN  $9C87           ; Unknown 9xxx instruction
$64E    $E244   UNKNOWN  $E244           ; Unknown Exxx instruction
$650    $F4F1   UNKNOWN  F4F1            ; Unknown Fxxx instruction
$652    $C878   RND      V8, #78         ; V8 = random & 78
$654    $0BB6   SYS      $BB6            ; System call to BB6
$656    $A432   LD       I, $432         ; Load 432 into I
$658    $4F6D   SNE      VF, #6D         ; Skip if VF != 109
$65A    $C7EE   RND      V7, #EE         ; V7 = random & EE
$65C    $6842   LD       V8, #42         ; Load 66 into V8
$65E    $FFF3   UNKNOWN  FFF3            ; Unknown Fxxx instruction
$660    $BF3C   JP       V0, $F3C        ; Jump to V0 + F3C
$662    $9C34   UNKNOWN  $9C34           ; Unknown 9xxx instruction
$664    $2139   CALL     $139            ; Call subroutine at 139
$666    $EF67   UNKNOWN  $EF67           ; Unknown Exxx instruction
$668    $FB86   UNKNOWN  FB86            ; Unknown Fxxx instruction
$66A    $9124   UNKNOWN  $9124           ; Unknown 9xxx instruction
$66C    $B6F9   JP       V0, $6F9        ; Jump to V0 + 6F9
$66E    $6DAE   LD       VD, #AE         ; Load 174 into VD
$670    $F5EF   UNKNOWN  F5EF            ; Unknown Fxxx instruction
$672    $44B3   SNE      V4, #B3         ; Skip if V4 != 179
$674    $09A2   SYS      $9A2            ; System call to 9A2
$676    $6F3F   LD       VF, #3F         ; Load 63 into VF
$678    $481C   SNE      V8, #1C         ; Skip if V8 != 28
$67A    $445B   SNE      V4, #5B         ; Skip if V4 != 91
$67C    $968F   UNKNOWN  $968F           ; Unknown 9xxx instruction
$67E    $9478   UNKNOWN  $9478           ; Unknown 9xxx instruction
$680    $3A8B   SE       VA, #8B         ; Skip if VA == 139
$682    $0119   SYS      $119            ; System call to 119
$684    $3813   SE       V8, #13         ; Skip if V8 == 19
$686    $63CB   LD       V3, #CB         ; Load 203 into V3
$688    $97B3   UNKNOWN  $97B3           ; Unknown 9xxx instruction
$68A    $E83B   UNKNOWN  $E83B           ; Unknown Exxx instruction
$68C    $6964   LD       V9, #64         ; Load 100 into V9
$68E    $5D14   UNKNOWN  $5D14           ; Unknown 5xxx instruction
$690    $E2AA   UNKNOWN  $E2AA           ; Unknown Exxx instruction
$692    $6B3D   LD       VB, #3D         ; Load 61 into VB
$694    $8D15   SUB      VD, V1          ; VD -= V1, VF = !borrow
$696    $73CF   ADD      V3, #CF         ; Add 207 to V3
$698    $8406   SHR      V4              ; V4 >>= 1, VF = LSB
$69A    $A691   LD       I, $691         ; Load 691 into I
$69C    $5CB4   UNKNOWN  $5CB4           ; Unknown 5xxx instruction
$69E    $4FEE   SNE      VF, #EE         ; Skip if VF != 238
$6A0    $EE13   UNKNOWN  $EE13           ; Unknown Exxx instruction
$6A2    $7962   ADD      V9, #62         ; Add 98 to V9
$6A4    $2A31   CALL     $A31            ; Call subroutine at A31
$6A6    $D7C2   DRW      V7, VC, #2      ; Draw 2-byte sprite at V7, VC
$6A8    $2945   CALL     $945            ; Call subroutine at 945
$6AA    $99FF   UNKNOWN  $99FF           ; Unknown 9xxx instruction
$6AC    $A86C   LD       I, $86C         ; Load 86C into I
$6AE    $3755   SE       V7, #55         ; Skip if V7 == 85
$6B0    $7BCA   ADD      VB, #CA         ; Add 202 to VB
$6B2    $077D   SYS      $77D            ; System call to 77D
$6B4    $5F48   UNKNOWN  $5F48           ; Unknown 5xxx instruction
$6B6    $41DF   SNE      V1, #DF         ; Skip if V1 != 223
$6B8    $BBF1   JP       V0, $BF1        ; Jump to V0 + BF1
$6BA    $E510   UNKNOWN  $E510           ; Unknown Exxx instruction
$6BC    $6893   LD       V8, #93         ; Load 147 into V8
$6BE    $A9B2   LD       I, $9B2         ; Load 9B2 into I
$6C0    $4138   SNE      V1, #38         ; Skip if V1 != 56
$6C2    $64F3   LD       V4, #F3         ; Load 243 into V4
$6C4    $0962   SYS      $962            ; System call to 962
$6C6    $099B   SYS      $99B            ; System call to 99B
$6C8    $7D0C   ADD      VD, #0C         ; Add 12 to VD
$6CA    $1C1E   JP       $C1E            ; Jump to C1E
$6CC    $2A03   CALL     $A03            ; Call subroutine at A03
$6CE    $F317   UNKNOWN  F317            ; Unknown Fxxx instruction
$6D0    $7E41   ADD      VE, #41         ; Add 65 to VE
$6D2    $C8DF   RND      V8, #DF         ; V8 = random & DF
$6D4    $6E23   LD       VE, #23         ; Load 35 into VE
$6D6    $E527   UNKNOWN  $E527           ; Unknown Exxx instruction
$6D8    $F5EA   UNKNOWN  F5EA            ; Unknown Fxxx instruction
$6DA    $9995   UNKNOWN  $9995           ; Unknown 9xxx instruction
$6DC    $7AE7   ADD      VA, #E7         ; Add 231 to VA
$6DE    $B1E1   JP       V0, $1E1        ; Jump to V0 + 1E1
$6E0    $6BD8   LD       VB, #D8         ; Load 216 into VB
$6E2    $9800   SNE      V8, V0          ; Skip if V8 != V0
$6E4    $A10E   LD       I, $10E         ; Load 10E into I
$6E6    $8501   OR       V5, V0          ; V5 |= V0
$6E8    $51A1   UNKNOWN  $51A1           ; Unknown 5xxx instruction
$6EA    $DFA1   DRW      VF, VA, #1      ; Draw 1-byte sprite at VF, VA
$6EC    $A7C0   LD       I, $7C0         ; Load 7C0 into I
$6EE    $4697   SNE      V6, #97         ; Skip if V6 != 151
$6F0    $177E   JP       $77E            ; Jump to 77E
$6F2    $6A3E   LD       VA, #3E         ; Load 62 into VA
$6F4    $33B9   SE       V3, #B9         ; Skip if V3 == 185
$6F6    $11E3   JP       $1E3            ; Jump to 1E3
$6F8    $9302   UNKNOWN  $9302           ; Unknown 9xxx instruction
$6FA    $A51A   LD       I, $51A         ; Load 51A into I
$6FC    $8C96   SHR      VC              ; VC >>= 1, VF = LSB
$6FE    $7104   ADD      V1, #04         ; Add 4 to V1
$700    $A99A   LD       I, $99A         ; Load 99A into I
$702    $1DBE   JP       $DBE            ; Jump to DBE
$704    $6FB5   LD       VF, #B5         ; Load 181 into VF
$706    $F64E   UNKNOWN  F64E            ; Unknown Fxxx instruction
$708    $849A   UNKNOWN  849A            ; Unknown 8xxx instruction
$70A    $C756   RND      V7, #56         ; V7 = random & 56
$70C    $5974   UNKNOWN  $5974           ; Unknown 5xxx instruction
$70E    $FEA2   UNKNOWN  FEA2            ; Unknown Fxxx instruction
$710    $7082   ADD      V0, #82         ; Add 130 to V0
$712    $6C74   LD       VC, #74         ; Load 116 into VC
$714    $A2BF   LD       I, $2BF         ; Load 2BF into I
$716    $50FF   UNKNOWN  $50FF           ; Unknown 5xxx instruction
$718    $CA8B   RND      VA, #8B         ; VA = random & 8B
$71A    $D7EC   DRW      V7, VE, #C      ; Draw 12-byte sprite at V7, VE
$71C    $0596   SYS      $596            ; System call to 596
$71E    $3158   SE       V1, #58         ; Skip if V1 == 88
$720    $7D0E   ADD      VD, #0E         ; Add 14 to VD
$722    $2464   CALL     $464            ; Call subroutine at 464
$724    $FE95   UNKNOWN  FE95            ; Unknown Fxxx instruction
$726    $DB2C   DRW      VB, V2, #C      ; Draw 12-byte sprite at VB, V2
$728    $05D7   SYS      $5D7            ; System call to 5D7
$72A    $DC1C   DRW      VC, V1, #C      ; Draw 12-byte sprite at VC, V1
$72C    $5A63   UNKNOWN  $5A63           ; Unknown 5xxx instruction
$72E    $169E   JP       $69E            ; Jump to 69E
$730    $3029   SE       V0, #29         ; Skip if V0 == 41
$732    $3B59   SE       VB, #59         ; Skip if VB == 89
$734    $C5FF   RND      V5, #FF         ; V5 = random & FF
$736    $F921   UNKNOWN  F921            ; Unknown Fxxx instruction
$738    $F855   LD       [I], V8         ; Store V0-V8 at I
$73A    $A6F1   LD       I, $6F1         ; Load 6F1 into I
$73C    $D6D5   DRW      V6, VD, #5      ; Draw 5-byte sprite at V6, VD
$73E    $5FF7   UNKNOWN  $5FF7           ; Unknown 5xxx instruction
$740    $F5EC   UNKNOWN  F5EC            ; Unknown Fxxx instruction
$742    $F788   UNKNOWN  F788            ; Unknown Fxxx instruction
$744    $029B   SYS      $29B            ; System call to 29B
$746    $7A33   ADD      VA, #33         ; Add 51 to VA
$748    $6B79   LD       VB, #79         ; Load 121 into VB
$74A    $4C3D   SNE      VC, #3D         ; Skip if VC != 61
$74C    $AE8D   LD       I, $E8D         ; Load E8D into I
$74E    $F741   UNKNOWN  F741            ; Unknown Fxxx instruction
$750    $A79D   LD       I, $79D         ; Load 79D into I
$752    $940F   UNKNOWN  $940F           ; Unknown 9xxx instruction
$754    $E535   UNKNOWN  $E535           ; Unknown Exxx instruction
$756    $FA44   UNKNOWN  FA44            ; Unknown Fxxx instruction
$758    $CE80   RND      VE, #80         ; VE = random & 80
$75A    $FD96   UNKNOWN  FD96            ; Unknown Fxxx instruction
$75C    $B297   JP       V0, $297        ; Jump to V0 + 297
$75E    $66F8   LD       V6, #F8         ; Load 248 into V6
$760    $491C   SNE      V9, #1C         ; Skip if V9 != 28
$762    $8CB4   ADD      VC, VB          ; VC += VB, VF = carry
$764    $91BF   UNKNOWN  $91BF           ; Unknown 9xxx instruction
$766    $72B8   ADD      V2, #B8         ; Add 184 to V2
$768    $0224   SYS      $224            ; System call to 224
$76A    $0F3D   SYS      $F3D            ; System call to F3D
$76C    $E9C9   UNKNOWN  $E9C9           ; Unknown Exxx instruction
$76E    $8F9A   UNKNOWN  8F9A            ; Unknown 8xxx instruction
$770    $A767   LD       I, $767         ; Load 767 into I
$772    $C637   RND      V6, #37         ; V6 = random & 37
$774    $76A4   ADD      V6, #A4         ; Add 164 to V6
$776    $40F5   SNE      V0, #F5         ; Skip if V0 != 245
$778    $F9A5   UNKNOWN  F9A5            ; Unknown Fxxx instruction
$77A    $B33F   JP       V0, $33F        ; Jump to V0 + 33F
$77C    $12F2   JP       $2F2            ; Jump to 2F2
$77E    $B58C   JP       V0, $58C        ; Jump to V0 + 58C
$780    $C63B   RND      V6, #3B         ; V6 = random & 3B
$782    $B9DB   JP       V0, $9DB        ; Jump to V0 + 9DB
$784    $E971   UNKNOWN  $E971           ; Unknown Exxx instruction
$786    $8A2E   SHL      VA              ; VA <<= 1, VF = MSB
$788    $3532   SE       V5, #32         ; Skip if V5 == 50
$78A    $BFCA   JP       V0, $FCA        ; Jump to V0 + FCA
$78C    $DA8D   DRW      VA, V8, #D      ; Draw 13-byte sprite at VA, V8
$78E    $42A7   SNE      V2, #A7         ; Skip if V2 != 167
$790    $E993   UNKNOWN  $E993           ; Unknown Exxx instruction
$792    $A61D   LD       I, $61D         ; Load 61D into I
$794    $2080   CALL     $080            ; Call subroutine at 080
$796    $3D77   SE       VD, #77         ; Skip if VD == 119
$798    $2021   CALL     $021            ; Call subroutine at 021
$79A    $43E5   SNE      V3, #E5         ; Skip if V3 != 229
$79C    $1AA7   JP       $AA7            ; Jump to AA7
$79E    $5AB4   UNKNOWN  $5AB4           ; Unknown 5xxx instruction
$7A0    $F4DC   UNKNOWN  F4DC            ; Unknown Fxxx instruction
$7A2    $5C37   UNKNOWN  $5C37           ; Unknown 5xxx instruction
$7A4    $D392   DRW      V3, V9, #2      ; Draw 2-byte sprite at V3, V9
$7A6    $F5C2   UNKNOWN  F5C2            ; Unknown Fxxx instruction
$7A8    $E7B2   UNKNOWN  $E7B2           ; Unknown Exxx instruction
$7AA    $D7C6   DRW      V7, VC, #6      ; Draw 6-byte sprite at V7, VC
$7AC    $D744   DRW      V7, V4, #4      ; Draw 4-byte sprite at V7, V4
$7AE    $4686   SNE      V6, #86         ; Skip if V6 != 134
$7B0    $3359   SE       V3, #59         ; Skip if V3 == 89
$7B2    $2441   CALL     $441            ; Call subroutine at 441
$7B4    $A2FD   LD       I, $2FD         ; Load 2FD into I
$7B6    $771F   ADD      V7, #1F         ; Add 31 to V7
$7B8    $4852   SNE      V8, #52         ; Skip if V8 != 82
$7BA    $4154   SNE      V1, #54         ; Skip if V1 != 84
$7BC    $9263   UNKNOWN  $9263           ; Unknown 9xxx instruction
$7BE    $4D8A   SNE      VD, #8A         ; Skip if VD != 138
$7C0    $7547   ADD      V5, #47         ; Add 71 to V5
$7C2    $187C   JP       $87C            ; Jump to 87C
$7C4    $2ACD   CALL     $ACD            ; Call subroutine at ACD
$7C6    $5D04   UNKNOWN  $5D04           ; Unknown 5xxx instruction
$7C8    $00A5   SYS      $0A5            ; System call to 0A5
$7CA    $8ED6   SHR      VE              ; VE >>= 1, VF = LSB
$7CC    $7254   ADD      V2, #54         ; Add 84 to V2
$7CE    $6BD0   LD       VB, #D0         ; Load 208 into VB
$7D0    $8B18   UNKNOWN  8B18            ; Unknown 8xxx instruction
$7D2    $7192   ADD      V1, #92         ; Add 146 to V1
$7D4    $F033   LD       B, V0           ; Store BCD of V0 at I, I+1, I+2
$7D6    $BDDB   JP       V0, $DDB        ; Jump to V0 + DDB
$7D8    $B575   JP       V0, $575        ; Jump to V0 + 575
$7DA    $40AD   SNE      V0, #AD         ; Skip if V0 != 173
$7DC    $3383   SE       V3, #83         ; Skip if V3 == 131
$7DE    $03B6   SYS      $3B6            ; System call to 3B6
$7E0    $C7B4   RND      V7, #B4         ; V7 = random & B4
$7E2    $86E0   LD       V6, VE          ; V6 = VE
$7E4    $EF7F   UNKNOWN  $EF7F           ; Unknown Exxx instruction
$7E6    $2DA7   CALL     $DA7            ; Call subroutine at DA7
$7E8    $ADC6   LD       I, $DC6         ; Load DC6 into I
$7EA    $F39E   UNKNOWN  F39E            ; Unknown Fxxx instruction
$7EC    $F783   UNKNOWN  F783            ; Unknown Fxxx instruction
$7EE    $C706   RND      V7, #06         ; V7 = random & 06
$7F0    $1D48   JP       $D48            ; Jump to D48
$7F2    $A21B   LD       I, $21B         ; Load 21B into I
$7F4    $BC72   JP       V0, $C72        ; Jump to V0 + C72
$7F6    $6E97   LD       VE, #97         ; Load 151 into VE
$7F8    $480F   SNE      V8, #0F         ; Skip if V8 != 15
$7FA    $EE24   UNKNOWN  $EE24           ; Unknown Exxx instruction
$7FC    $0167   SYS      $167            ; System call to 167
$7FE    $AB16   LD       I, $B16         ; Load B16 into I
$800    $C32D   RND      V3, #2D         ; V3 = random & 2D
$802    $289F   CALL     $89F            ; Call subroutine at 89F
$804    $D911   DRW      V9, V1, #1      ; Draw 1-byte sprite at V9, V1
$806    $F5E0   UNKNOWN  F5E0            ; Unknown Fxxx instruction
$808    $FDE9   UNKNOWN  FDE9            ; Unknown Fxxx instruction
$80A    $72B2   ADD      V2, #B2         ; Add 178 to V2
$80C    $7695   ADD      V6, #95         ; Add 149 to V6
$80E    $0EEB   SYS      $EEB            ; System call to EEB
$810    $BA34   JP       V0, $A34        ; Jump to V0 + A34
$812    $0131   SYS      $131            ; System call to 131
$814    $95A4   UNKNOWN  $95A4           ; Unknown 9xxx instruction
$816    $DF71   DRW      VF, V7, #1      ; Draw 1-byte sprite at VF, V7
$818    $F0D5   UNKNOWN  F0D5            ; Unknown Fxxx instruction
$81A    $41E5   SNE      V1, #E5         ; Skip if V1 != 229
$81C    $775E   ADD      V7, #5E         ; Add 94 to V7
$81E    $8668   UNKNOWN  8668            ; Unknown 8xxx instruction
$820    $BABA   JP       V0, $ABA        ; Jump to V0 + ABA
$822    $568E   UNKNOWN  $568E           ; Unknown 5xxx instruction
$824    $4AAE   SNE      VA, #AE         ; Skip if VA != 174
$826    $A73D   LD       I, $73D         ; Load 73D into I
$828    $5E43   UNKNOWN  $5E43           ; Unknown 5xxx instruction
$82A    $C9C9   RND      V9, #C9         ; V9 = random & C9
$82C    $D6F8   DRW      V6, VF, #8      ; Draw 8-byte sprite at V6, VF
$82E    $E9A3   UNKNOWN  $E9A3           ; Unknown Exxx instruction
$830    $B773   JP       V0, $773        ; Jump to V0 + 773
$832    $1055   JP       $055            ; Jump to 055
$834    $DEB3   DRW      VE, VB, #3      ; Draw 3-byte sprite at VE, VB
$836    $B174   JP       V0, $174        ; Jump to V0 + 174
$838    $8FD1   OR       VF, VD          ; VF |= VD
$83A    $F9F2   UNKNOWN  F9F2            ; Unknown Fxxx instruction
$83C    $3B77   SE       VB, #77         ; Skip if VB == 119
$83E    $7030   ADD      V0, #30         ; Add 48 to V0
$840    $4B38   SNE      VB, #38         ; Skip if VB != 56
$842    $B20E   JP       V0, $20E        ; Jump to V0 + 20E
$844    $BC51   JP       V0, $C51        ; Jump to V0 + C51
$846    $9557   UNKNOWN  $9557           ; Unknown 9xxx instruction
$848    $4D07   SNE      VD, #07         ; Skip if VD != 7
$84A    $3DE7   SE       VD, #E7         ; Skip if VD == 231
$84C    $0538   SYS      $538            ; System call to 538
$84E    $AD2D   LD       I, $D2D         ; Load D2D into I
$850    $A8F6   LD       I, $8F6         ; Load 8F6 into I
$852    $3023   SE       V0, #23         ; Skip if V0 == 35
$854    $5622   UNKNOWN  $5622           ; Unknown 5xxx instruction
$856    $D13F   DRW      V1, V3, #F      ; Draw 15-byte sprite at V1, V3
$858    $54B2   UNKNOWN  $54B2           ; Unknown 5xxx instruction
$85A    $DCBA   DRW      VC, VB, #A      ; Draw 10-byte sprite at VC, VB
$85C    $1529   JP       $529            ; Jump to 529
$85E    $518A   UNKNOWN  $518A           ; Unknown 5xxx instruction
$860    $DEB9   DRW      VE, VB, #9      ; Draw 9-byte sprite at VE, VB
$862    $D7F7   DRW      V7, VF, #7      ; Draw 7-byte sprite at V7, VF
$864    $FD04   UNKNOWN  FD04            ; Unknown Fxxx instruction
$866    $8491   OR       V4, V9          ; V4 |= V9
$868    $F8D7   UNKNOWN  F8D7            ; Unknown Fxxx instruction
$86A    $A872   LD       I, $872         ; Load 872 into I
$86C    $059F   SYS      $59F            ; System call to 59F
$86E    $1639   JP       $639            ; Jump to 639
$870    $59D3   UNKNOWN  $59D3           ; Unknown 5xxx instruction
$872    $4569   SNE      V5, #69         ; Skip if V5 != 105
$874    $6E40   LD       VE, #40         ; Load 64 into VE
$876    $AA10   LD       I, $A10         ; Load A10 into I
$878    $E3E9   UNKNOWN  $E3E9           ; Unknown Exxx instruction
$87A    $C084   RND      V0, #84         ; V0 = random & 84
$87C    $0DF4   SYS      $DF4            ; System call to DF4
$87E    $0E24   SYS      $E24            ; System call to E24
$880    $EAFB   UNKNOWN  $EAFB           ; Unknown Exxx instruction
$882    $3B02   SE       VB, #02         ; Skip if VB == 2
$884    $71F1   ADD      V1, #F1         ; Add 241 to V1
$886    $3CC7   SE       VC, #C7         ; Skip if VC == 199
$888    $D944   DRW      V9, V4, #4      ; Draw 4-byte sprite at V9, V4
$88A    $1C77   JP       $C77            ; Jump to C77
$88C    $6DF3   LD       VD, #F3         ; Load 243 into VD
$88E    $0224   SYS      $224            ; System call to 224
$890    $B9C2   JP       V0, $9C2        ; Jump to V0 + 9C2
$892    $2FF5   CALL     $FF5            ; Call subroutine at FF5
$894    $E0D7   UNKNOWN  $E0D7           ; Unknown Exxx instruction
$896    $880E   SHL      V8              ; V8 <<= 1, VF = MSB
$898    $FEEE   UNKNOWN  FEEE            ; Unknown Fxxx instruction
$89A    $7CE9   ADD      VC, #E9         ; Add 233 to VC
$89C    $60D1   LD       V0, #D1         ; Load 209 into V0
$89E    $2FE4   CALL     $FE4            ; Call subroutine at FE4
$8A0    $B5D1   JP       V0, $5D1        ; Jump to V0 + 5D1
$8A2    $5668   UNKNOWN  $5668           ; Unknown 5xxx instruction
$8A4    $AC5B   LD       I, $C5B         ; Load C5B into I
$8A6    $4E70   SNE      VE, #70         ; Skip if VE != 112
$8A8    $E0D9   UNKNOWN  $E0D9           ; Unknown Exxx instruction
$8AA    $A47B   LD       I, $47B         ; Load 47B into I
$8AC    $7307   ADD      V3, #07         ; Add 7 to V3
$8AE    $E0E1   UNKNOWN  $E0E1           ; Unknown Exxx instruction
$8B0    $BF69   JP       V0, $F69        ; Jump to V0 + F69
$8B2    $67DE   LD       V7, #DE         ; Load 222 into V7
$8B4    $6B69   LD       VB, #69         ; Load 105 into VB
$8B6    $6824   LD       V8, #24         ; Load 36 into V8
$8B8    $579C   UNKNOWN  $579C           ; Unknown 5xxx instruction
$8BA    $79DF   ADD      V9, #DF         ; Add 223 to V9
$8BC    $DA51   DRW      VA, V5, #1      ; Draw 1-byte sprite at VA, V5
$8BE    $645A   LD       V4, #5A         ; Load 90 into V4
$8C0    $CB39   RND      VB, #39         ; VB = random & 39
$8C2    $70CD   ADD      V0, #CD         ; Add 205 to V0
$8C4    $030E   SYS      $30E            ; System call to 30E
$8C6    $F8A4   UNKNOWN  F8A4            ; Unknown Fxxx instruction
$8C8    $BEE1   JP       V0, $EE1        ; Jump to V0 + EE1
$8CA    $34D7   SE       V4, #D7         ; Skip if V4 == 215
$8CC    $4DB3   SNE      VD, #B3         ; Skip if VD != 179
$8CE    $4BC6   SNE      VB, #C6         ; Skip if VB != 198
$8D0    $81C9   UNKNOWN  81C9            ; Unknown 8xxx instruction
$8D2    $4092   SNE      V0, #92         ; Skip if V0 != 146
$8D4    $4CC5   SNE      VC, #C5         ; Skip if VC != 197
$8D6    $39B1   SE       V9, #B1         ; Skip if V9 == 177
$8D8    $2E1D   CALL     $E1D            ; Call subroutine at E1D
$8DA    $8624   ADD      V6, V2          ; V6 += V2, VF = carry
$8DC    $4175   SNE      V1, #75         ; Skip if V1 != 117
$8DE    $0D47   SYS      $D47            ; System call to D47
$8E0    $FC9C   UNKNOWN  FC9C            ; Unknown Fxxx instruction
$8E2    $7A63   ADD      VA, #63         ; Add 99 to VA
$8E4    $8B51   OR       VB, V5          ; VB |= V5
$8E6    $AF0B   LD       I, $F0B         ; Load F0B into I
$8E8    $4329   SNE      V3, #29         ; Skip if V3 != 41
$8EA    $CACA   RND      VA, #CA         ; VA = random & CA
$8EC    $7CE7   ADD      VC, #E7         ; Add 231 to VC
$8EE    $1583   JP       $583            ; Jump to 583
$8F0    $B3D4   JP       V0, $3D4        ; Jump to V0 + 3D4
$8F2    $E392   UNKNOWN  $E392           ; Unknown Exxx instruction
$8F4    $11C7   JP       $1C7            ; Jump to 1C7
$8F6    $0B61   SYS      $B61            ; System call to B61
$8F8    $26E2   CALL     $6E2            ; Call subroutine at 6E2
$8FA    $368E   SE       V6, #8E         ; Skip if V6 == 142
$8FC    $FC3E   UNKNOWN  FC3E            ; Unknown Fxxx instruction
$8FE    $F6D3   UNKNOWN  F6D3            ; Unknown Fxxx instruction
$900    $425F   SNE      V2, #5F         ; Skip if V2 != 95
$902    $845C   UNKNOWN  845C            ; Unknown 8xxx instruction
$904    $CA2E   RND      VA, #2E         ; VA = random & 2E
$906    $A3C8   LD       I, $3C8         ; Load 3C8 into I
$908    $828D   UNKNOWN  828D            ; Unknown 8xxx instruction
$90A    $38B1   SE       V8, #B1         ; Skip if V8 == 177
$90C    $3D99   SE       VD, #99         ; Skip if VD == 153
$90E    $E012   UNKNOWN  $E012           ; Unknown Exxx instruction
$910    $8DDA   UNKNOWN  8DDA            ; Unknown 8xxx instruction
$912    $C5E0   RND      V5, #E0         ; V5 = random & E0
$914    $B375   JP       V0, $375        ; Jump to V0 + 375
$916    $8895   SUB      V8, V9          ; V8 -= V9, VF = !borrow
$918    $C68C   RND      V6, #8C         ; V6 = random & 8C
$91A    $6946   LD       V9, #46         ; Load 70 into V9
$91C    $38F3   SE       V8, #F3         ; Skip if V8 == 243
$91E    $1EE2   JP       $EE2            ; Jump to EE2
$920    $7FFE   ADD      VF, #FE         ; Add 254 to VF
$922    $201D   CALL     $01D            ; Call subroutine at 01D
$924    $5A86   UNKNOWN  $5A86           ; Unknown 5xxx instruction
$926    $7212   ADD      V2, #12         ; Add 18 to V2
$928    $B382   JP       V0, $382        ; Jump to V0 + 382
$92A    $5E57   UNKNOWN  $5E57           ; Unknown 5xxx instruction
$92C    $AA57   LD       I, $A57         ; Load A57 into I
$92E    $A8A6   LD       I, $8A6         ; Load 8A6 into I
$930    $972A   UNKNOWN  $972A           ; Unknown 9xxx instruction
$932    $1989   JP       $989            ; Jump to 989
$934    $7049   ADD      V0, #49         ; Add 73 to V0
$936    $EF03   UNKNOWN  $EF03           ; Unknown Exxx instruction
$938    $9611   UNKNOWN  $9611           ; Unknown 9xxx instruction
$93A    $B515   JP       V0, $515        ; Jump to V0 + 515
$93C    $7B44   ADD      VB, #44         ; Add 68 to VB
$93E    $2116   CALL     $116            ; Call subroutine at 116
$940    $E4ED   UNKNOWN  $E4ED           ; Unknown Exxx instruction
$942    $C11D   RND      V1, #1D         ; V1 = random & 1D
$944    $3C4C   SE       VC, #4C         ; Skip if VC == 76
$946    $6557   LD       V5, #57         ; Load 87 into V5
$948    $B007   JP       V0, $007        ; Jump to V0 + 007
$94A    $501F   UNKNOWN  $501F           ; Unknown 5xxx instruction
$94C    $73C5   ADD      V3, #C5         ; Add 197 to V3
$94E    $F54C   UNKNOWN  F54C            ; Unknown Fxxx instruction
$950    $FDBD   UNKNOWN  FDBD            ; Unknown Fxxx instruction
$952    $A163   LD       I, $163         ; Load 163 into I
$954    $F820   UNKNOWN  F820            ; Unknown Fxxx instruction
$956    $0140   SYS      $140            ; System call to 140
$958    $9F3A   UNKNOWN  $9F3A           ; Unknown 9xxx instruction
$95A    $7EED   ADD      VE, #ED         ; Add 237 to VE
$95C    $3BEA   SE       VB, #EA         ; Skip if VB == 234
$95E    $0C2A   SYS      $C2A            ; System call to C2A
$960    $7EC2   ADD      VE, #C2         ; Add 194 to VE
$962    $F7A0   UNKNOWN  F7A0            ; Unknown Fxxx instruction
$964    $699D   LD       V9, #9D         ; Load 157 into V9
$966    $D013   DRW      V0, V1, #3      ; Draw 3-byte sprite at V0, V1
$968    $1E10   JP       $E10            ; Jump to E10
$96A    $6483   LD       V4, #83         ; Load 131 into V4
$96C    $72F3   ADD      V2, #F3         ; Add 243 to V2
$96E    $DF2A   DRW      VF, V2, #A      ; Draw 10-byte sprite at VF, V2
$970    $9C54   UNKNOWN  $9C54           ; Unknown 9xxx instruction
$972    $700D   ADD      V0, #0D         ; Add 13 to V0
$974    $81CD   UNKNOWN  81CD            ; Unknown 8xxx instruction
$976    $8611   OR       V6, V1          ; V6 |= V1
$978    $905F   UNKNOWN  $905F           ; Unknown 9xxx instruction
$97A    $B4D5   JP       V0, $4D5        ; Jump to V0 + 4D5
$97C    $A5B2   LD       I, $5B2         ; Load 5B2 into I
$97E    $80BA   UNKNOWN  80BA            ; Unknown 8xxx instruction
$980    $6624   LD       V6, #24         ; Load 36 into V6
$982    $1609   JP       $609            ; Jump to 609
$984    $1098   JP       $098            ; Jump to 098
$986    $DF65   DRW      VF, V6, #5      ; Draw 5-byte sprite at VF, V6
$988    $6161   LD       V1, #61         ; Load 97 into V1
$98A    $AAB6   LD       I, $AB6         ; Load AB6 into I
$98C    $4183   SNE      V1, #83         ; Skip if V1 != 131
$98E    $3186   SE       V1, #86         ; Skip if V1 == 134
$990    $459C   SNE      V5, #9C         ; Skip if V5 != 156
$992    $7570   ADD      V5, #70         ; Add 112 to V5
$994    $2354   CALL     $354            ; Call subroutine at 354
$996    $B862   JP       V0, $862        ; Jump to V0 + 862
$998    $4E80   SNE      VE, #80         ; Skip if VE != 128
$99A    $AC74   LD       I, $C74         ; Load C74 into I
$99C    $47F0   SNE      V7, #F0         ; Skip if V7 != 240
$99E    $EFE0   UNKNOWN  $EFE0           ; Unknown Exxx instruction
$9A0    $9D75   UNKNOWN  $9D75           ; Unknown 9xxx instruction
$9A2    $E39F   UNKNOWN  $E39F           ; Unknown Exxx instruction
$9A4    $3FEF   SE       VF, #EF         ; Skip if VF == 239
$9A6    $A227   LD       I, $227         ; Load 227 into I
$9A8    $8265   SUB      V2, V6          ; V2 -= V6, VF = !borrow
$9AA    $658F   LD       V5, #8F         ; Load 143 into V5
$9AC    $5B8A   UNKNOWN  $5B8A           ; Unknown 5xxx instruction
$9AE    $810F   UNKNOWN  810F            ; Unknown 8xxx instruction
$9B0    $507D   UNKNOWN  $507D           ; Unknown 5xxx instruction
$9B2    $6CC6   LD       VC, #C6         ; Load 198 into VC
$9B4    $6D41   LD       VD, #41         ; Load 65 into VD
$9B6    $03AA   SYS      $3AA            ; System call to 3AA
$9B8    $6ACF   LD       VA, #CF         ; Load 207 into VA
$9BA    $B691   JP       V0, $691        ; Jump to V0 + 691
$9BC    $85C4   ADD      V5, VC          ; V5 += VC, VF = carry
$9BE    $D0FD   DRW      V0, VF, #D      ; Draw 13-byte sprite at V0, VF
$9C0    $7277   ADD      V2, #77         ; Add 119 to V2
$9C2    $B992   JP       V0, $992        ; Jump to V0 + 992
$9C4    $9D90   SNE      VD, V9          ; Skip if VD != V9
$9C6    $9773   UNKNOWN  $9773           ; Unknown 9xxx instruction
$9C8    $AF1D   LD       I, $F1D         ; Load F1D into I
$9CA    $F317   UNKNOWN  F317            ; Unknown Fxxx instruction
$9CC    $E00E   UNKNOWN  $E00E           ; Unknown Exxx instruction
$9CE    $83CB   UNKNOWN  83CB            ; Unknown 8xxx instruction
$9D0    $EBE7   UNKNOWN  $EBE7           ; Unknown Exxx instruction
$9D2    $A2FB   LD       I, $2FB         ; Load 2FB into I
$9D4    $35BF   SE       V5, #BF         ; Skip if V5 == 191
$9D6    $F535   UNKNOWN  F535            ; Unknown Fxxx instruction
$9D8    $2D63   CALL     $D63            ; Call subroutine at D63
$9DA    $53B4   UNKNOWN  $53B4           ; Unknown 5xxx instruction
$9DC    $0EB3   SYS      $EB3            ; System call to EB3
$9DE    $B168   JP       V0, $168        ; Jump to V0 + 168
$9E0    $F18C   UNKNOWN  F18C            ; Unknown Fxxx instruction
$9E2    $2B73   CALL     $B73            ; Call subroutine at B73
$9E4    $61BB   LD       V1, #BB         ; Load 187 into V1
$9E6    $2CF8   CALL     $CF8            ; Call subroutine at CF8
$9E8    $3134   SE       V1, #34         ; Skip if V1 == 52
$9EA    $81F8   UNKNOWN  81F8            ; Unknown 8xxx instruction
$9EC    $160F   JP       $60F            ; Jump to 60F
$9EE    $F4DA   UNKNOWN  F4DA            ; Unknown Fxxx instruction
$9F0    $DF95   DRW      VF, V9, #5      ; Draw 5-byte sprite at VF, V9
$9F2    $7F92   ADD      VF, #92         ; Add 146 to VF
$9F4    $0146   SYS      $146            ; System call to 146
$9F6    $E935   UNKNOWN  $E935           ; Unknown Exxx instruction
$9F8    $92B5   UNKNOWN  $92B5           ; Unknown 9xxx instruction
$9FA    $16D2   JP       $6D2            ; Jump to 6D2
$9FC    $4416   SNE      V4, #16         ; Skip if V4 != 22
$9FE    $B9FE   JP       V0, $9FE        ; Jump to V0 + 9FE
$A00    $72E4   ADD      V2, #E4         ; Add 228 to V2
$A02    $EE32   UNKNOWN  $EE32           ; Unknown Exxx instruction
$A04    $8B0A   UNKNOWN  8B0A            ; Unknown 8xxx instruction
$A06    $BBAA   JP       V0, $BAA        ; Jump to V0 + BAA
$A08    $D488   DRW      V4, V8, #8      ; Draw 8-byte sprite at V4, V8
$A0A    $F96F   UNKNOWN  F96F            ; Unknown Fxxx instruction
$A0C    $AA61   LD       I, $A61         ; Load A61 into I
$A0E    $3AF6   SE       VA, #F6         ; Skip if VA == 246
$A10    $334D   SE       V3, #4D         ; Skip if V3 == 77
$A12    $A5E8   LD       I, $5E8         ; Load 5E8 into I
$A14    $9217   UNKNOWN  $9217           ; Unknown 9xxx instruction
$A16    $FBE0   UNKNOWN  FBE0            ; Unknown Fxxx instruction
$A18    $4C09   SNE      VC, #09         ; Skip if VC != 9
$A1A    $276E   CALL     $76E            ; Call subroutine at 76E
$A1C    $E614   UNKNOWN  $E614           ; Unknown Exxx instruction
$A1E    $9BE7   UNKNOWN  $9BE7           ; Unknown 9xxx instruction
$A20    $234A   CALL     $34A            ; Call subroutine at 34A
$A22    $9335   UNKNOWN  $9335           ; Unknown 9xxx instruction
$A24    $6FD9   LD       VF, #D9         ; Load 217 into VF
$A26    $4945   SNE      V9, #45         ; Skip if V9 != 69
$A28    $27D7   CALL     $7D7            ; Call subroutine at 7D7
$A2A    $8C06   SHR      VC              ; VC >>= 1, VF = LSB
$A2C    $884F   UNKNOWN  884F            ; Unknown 8xxx instruction
$A2E    $8115   SUB      V1, V1          ; V1 -= V1, VF = !borrow
$A30    $AECE   LD       I, $ECE         ; Load ECE into I
$A32    $3A4B   SE       VA, #4B         ; Skip if VA == 75
$A34    $1588   JP       $588            ; Jump to 588
$A36    $42F3   SNE      V2, #F3         ; Skip if V2 != 243
$A38    $8A37   SUBN     VA, V3          ; VA = V3 - VA, VF = !borrow
$A3A    $D333   DRW      V3, V3, #3      ; Draw 3-byte sprite at V3, V3
$A3C    $5276   UNKNOWN  $5276           ; Unknown 5xxx instruction
$A3E    $2CF7   CALL     $CF7            ; Call subroutine at CF7
$A40    $C7BD   RND      V7, #BD         ; V7 = random & BD
$A42    $0B4D   SYS      $B4D            ; System call to B4D
$A44    $93A3   UNKNOWN  $93A3           ; Unknown 9xxx instruction
$A46    $1B61   JP       $B61            ; Jump to B61
$A48    $4946   SNE      V9, #46         ; Skip if V9 != 70
$A4A    $F16C   UNKNOWN  F16C            ; Unknown Fxxx instruction
$A4C    $D61C   DRW      V6, V1, #C      ; Draw 12-byte sprite at V6, V1
$A4E    $1535   JP       $535            ; Jump to 535
$A50    $D4D3   DRW      V4, VD, #3      ; Draw 3-byte sprite at V4, VD
$A52    $CEC7   RND      VE, #C7         ; VE = random & C7
$A54    $F04F   UNKNOWN  F04F            ; Unknown Fxxx instruction
$A56    $34D5   SE       V4, #D5         ; Skip if V4 == 213
$A58    $70CD   ADD      V0, #CD         ; Add 205 to V0
$A5A    $6283   LD       V2, #83         ; Load 131 into V2
$A5C    $758C   ADD      V5, #8C         ; Add 140 to V5
$A5E    $E1DF   UNKNOWN  $E1DF           ; Unknown Exxx instruction
$A60    $7638   ADD      V6, #38         ; Add 56 to V6
$A62    $CC7E   RND      VC, #7E         ; VC = random & 7E
$A64    $52A0   SE       V2, VA          ; Skip if V2 == VA
$A66    $5C84   UNKNOWN  $5C84           ; Unknown 5xxx instruction
$A68    $859A   UNKNOWN  859A            ; Unknown 8xxx instruction
$A6A    $3EBD   SE       VE, #BD         ; Skip if VE == 189
$A6C    $9D43   UNKNOWN  $9D43           ; Unknown 9xxx instruction
$A6E    $5703   UNKNOWN  $5703           ; Unknown 5xxx instruction
$A70    $EB3B   UNKNOWN  $EB3B           ; Unknown Exxx instruction
$A72    $5376   UNKNOWN  $5376           ; Unknown 5xxx instruction
$A74    $F093   UNKNOWN  F093            ; Unknown Fxxx instruction
$A76    $0568   SYS      $568            ; System call to 568
$A78    $8AF1   OR       VA, VF          ; VA |= VF
$A7A    $CF28   RND      VF, #28         ; VF = random & 28
$A7C    $FCD3   UNKNOWN  FCD3            ; Unknown Fxxx instruction
$A7E    $30EB   SE       V0, #EB         ; Skip if V0 == 235
$A80    $6F57   LD       VF, #57         ; Load 87 into VF
$A82    $D288   DRW      V2, V8, #8      ; Draw 8-byte sprite at V2, V8
$A84    $915A   UNKNOWN  $915A           ; Unknown 9xxx instruction
$A86    $FE49   UNKNOWN  FE49            ; Unknown Fxxx instruction
$A88    $5549   UNKNOWN  $5549           ; Unknown 5xxx instruction
$A8A    $5F12   UNKNOWN  $5F12           ; Unknown 5xxx instruction
$A8C    $869D   UNKNOWN  869D            ; Unknown 8xxx instruction
$A8E    $4CC1   SNE      VC, #C1         ; Skip if VC != 193
$A90    $18F4   JP       $8F4            ; Jump to 8F4
$A92    $3741   SE       V7, #41         ; Skip if V7 == 65
$A94    $E5AE   UNKNOWN  $E5AE           ; Unknown Exxx instruction
$A96    $7846   ADD      V8, #46         ; Add 70 to V8
$A98    $798E   ADD      V9, #8E         ; Add 142 to V9
$A9A    $E599   UNKNOWN  $E599           ; Unknown Exxx instruction
$A9C    $8CF5   SUB      VC, VF          ; VC -= VF, VF = !borrow
$A9E    $A1A6   LD       I, $1A6         ; Load 1A6 into I
$AA0    $FB33   LD       B, VB           ; Store BCD of VB at I, I+1, I+2
$AA2    $AB92   LD       I, $B92         ; Load B92 into I
$AA4    $D88F   DRW      V8, V8, #F      ; Draw 15-byte sprite at V8, V8
$AA6    $98D4   UNKNOWN  $98D4           ; Unknown 9xxx instruction
$AA8    $9A03   UNKNOWN  $9A03           ; Unknown 9xxx instruction
$AAA    $1039   JP       $039            ; Jump to 039
$AAC    $0FD6   SYS      $FD6            ; System call to FD6
$AAE    $09A9   SYS      $9A9            ; System call to 9A9
$AB0    $3FDA   SE       VF, #DA         ; Skip if VF == 218
$AB2    $AA22   LD       I, $A22         ; Load A22 into I
$AB4    $FD5B   UNKNOWN  FD5B            ; Unknown Fxxx instruction
$AB6    $66B6   LD       V6, #B6         ; Load 182 into V6
$AB8    $7534   ADD      V5, #34         ; Add 52 to V5
$ABA    $07F4   SYS      $7F4            ; System call to 7F4
$ABC    $E658   UNKNOWN  $E658           ; Unknown Exxx instruction
$ABE    $2867   CALL     $867            ; Call subroutine at 867
$AC0    $3BE9   SE       VB, #E9         ; Skip if VB == 233
$AC2    $209F   CALL     $09F            ; Call subroutine at 09F
$AC4    $8E69   UNKNOWN  8E69            ; Unknown 8xxx instruction
$AC6    $4D59   SNE      VD, #59         ; Skip if VD != 89
$AC8    $B239   JP       V0, $239        ; Jump to V0 + 239
$ACA    $1CD5   JP       $CD5            ; Jump to CD5
$ACC    $9415   UNKNOWN  $9415           ; Unknown 9xxx instruction
$ACE    $5E8F   UNKNOWN  $5E8F           ; Unknown 5xxx instruction
$AD0    $C45E   RND      V4, #5E         ; V4 = random & 5E
$AD2    $79D8   ADD      V9, #D8         ; Add 216 to V9
$AD4    $0105   SYS      $105            ; System call to 105
$AD6    $0856   SYS      $856            ; System call to 856
$AD8    $1196   JP       $196            ; Jump to 196
$ADA    $203A   CALL     $03A            ; Call subroutine at 03A
$ADC    $4A25   SNE      VA, #25         ; Skip if VA != 37
$ADE    $2D74   CALL     $D74            ; Call subroutine at D74
$AE0    $765A   ADD      V6, #5A         ; Add 90 to V6
$AE2    $5997   UNKNOWN  $5997           ; Unknown 5xxx instruction
$AE4    $80F4   ADD      V0, VF          ; V0 += VF, VF = carry
$AE6    $FA91   UNKNOWN  FA91            ; Unknown Fxxx instruction
$AE8    $9627   UNKNOWN  $9627           ; Unknown 9xxx instruction
$AEA    $5F6E   UNKNOWN  $5F6E           ; Unknown 5xxx instruction
$AEC    $B0E3   JP       V0, $0E3        ; Jump to V0 + 0E3
$AEE    $A796   LD       I, $796         ; Load 796 into I
$AF0    $C97F   RND      V9, #7F         ; V9 = random & 7F
$AF2    $51A4   UNKNOWN  $51A4           ; Unknown 5xxx instruction
$AF4    $E3FD   UNKNOWN  $E3FD           ; Unknown Exxx instruction
$AF6    $C712   RND      V7, #12         ; V7 = random & 12
$AF8    $B667   JP       V0, $667        ; Jump to V0 + 667
$AFA    $37EE   SE       V7, #EE         ; Skip if V7 == 238
$AFC    $2219   CALL     $219            ; Call subroutine at 219
$AFE    $829D   UNKNOWN  829D            ; Unknown 8xxx instruction
$B00    $B2EB   JP       V0, $2EB        ; Jump to V0 + 2EB
$B02    $68DC   LD       V8, #DC         ; Load 220 into V8
$B04    $BE43   JP       V0, $E43        ; Jump to V0 + E43
$B06    $97A2   UNKNOWN  $97A2           ; Unknown 9xxx instruction
$B08    $7B91   ADD      VB, #91         ; Add 145 to VB
$B0A    $EEF6   UNKNOWN  $EEF6           ; Unknown Exxx instruction
$B0C    $572B   UNKNOWN  $572B           ; Unknown 5xxx instruction
$B0E    $6D86   LD       VD, #86         ; Load 134 into VD
$B10    $113F   JP       $13F            ; Jump to 13F
$B12    $228C   CALL     $28C            ; Call subroutine at 28C
$B14    $2A8C   CALL     $A8C            ; Call subroutine at A8C
$B16    $69C3   LD       V9, #C3         ; Load 195 into V9
$B18    $C620   RND      V6, #20         ; V6 = random & 20
$B1A    $8541   OR       V5, V4          ; V5 |= V4
$B1C    $CC4E   RND      VC, #4E         ; VC = random & 4E
$B1E    $ED82   UNKNOWN  $ED82           ; Unknown Exxx instruction
$B20    $68B4   LD       V8, #B4         ; Load 180 into V8
$B22    $884E   SHL      V8              ; V8 <<= 1, VF = MSB
$B24    $946E   UNKNOWN  $946E           ; Unknown 9xxx instruction
$B26    $9014   UNKNOWN  $9014           ; Unknown 9xxx instruction
$B28    $ED7C   UNKNOWN  $ED7C           ; Unknown Exxx instruction
$B2A    $EF49   UNKNOWN  $EF49           ; Unknown Exxx instruction
$B2C    $31CB   SE       V1, #CB         ; Skip if V1 == 203
$B2E    $F597   UNKNOWN  F597            ; Unknown Fxxx instruction
$B30    $A060   LD       I, $060         ; Load 060 into I
$B32    $5262   UNKNOWN  $5262           ; Unknown 5xxx instruction
$B34    $5E1E   UNKNOWN  $5E1E           ; Unknown 5xxx instruction
$B36    $46B7   SNE      V6, #B7         ; Skip if V6 != 183
$B38    $6112   LD       V1, #12         ; Load 18 into V1
$B3A    $5AE3   UNKNOWN  $5AE3           ; Unknown 5xxx instruction
$B3C    $5A50   SE       VA, V5          ; Skip if VA == V5
$B3E    $D5BB   DRW      V5, VB, #B      ; Draw 11-byte sprite at V5, VB
$B40    $67A6   LD       V7, #A6         ; Load 166 into V7
$B42    $46C3   SNE      V6, #C3         ; Skip if V6 != 195
$B44    $4134   SNE      V1, #34         ; Skip if V1 != 52
$B46    $F64C   UNKNOWN  F64C            ; Unknown Fxxx instruction
$B48    $7207   ADD      V2, #07         ; Add 7 to V2
$B4A    $81D0   LD       V1, VD          ; V1 = VD
$B4C    $1E9B   JP       $E9B            ; Jump to E9B
$B4E    $D680   DRW      V6, V8, #0      ; Draw 0-byte sprite at V6, V8
$B50    $4007   SNE      V0, #07         ; Skip if V0 != 7
$B52    $2514   CALL     $514            ; Call subroutine at 514
$B54    $D8C1   DRW      V8, VC, #1      ; Draw 1-byte sprite at V8, VC
$B56    $4550   SNE      V5, #50         ; Skip if V5 != 80
$B58    $6008   LD       V0, #08         ; Load 8 into V0
$B5A    $B662   JP       V0, $662        ; Jump to V0 + 662
$B5C    $C049   RND      V0, #49         ; V0 = random & 49
$B5E    $BC8C   JP       V0, $C8C        ; Jump to V0 + C8C
$B60    $F457   UNKNOWN  F457            ; Unknown Fxxx instruction
$B62    $6406   LD       V4, #06         ; Load 6 into V4
$B64    $B94B   JP       V0, $94B        ; Jump to V0 + 94B
$B66    $2237   CALL     $237            ; Call subroutine at 237
$B68    $AB01   LD       I, $B01         ; Load B01 into I
$B6A    $E5B7   UNKNOWN  $E5B7           ; Unknown Exxx instruction
$B6C    $FF15   LD       DT, VF          ; Delay timer = VF
$B6E    $3D32   SE       VD, #32         ; Skip if VD == 50
$B70    $BEEB   JP       V0, $EEB        ; Jump to V0 + EEB
$B72    $F916   UNKNOWN  F916            ; Unknown Fxxx instruction
$B74    $C92F   RND      V9, #2F         ; V9 = random & 2F
$B76    $2216   CALL     $216            ; Call subroutine at 216
$B78    $C200   RND      V2, #00         ; V2 = random & 00
$B7A    $D344   DRW      V3, V4, #4      ; Draw 4-byte sprite at V3, V4
$B7C    $EF07   UNKNOWN  $EF07           ; Unknown Exxx instruction
$B7E    $6EDC   LD       VE, #DC         ; Load 220 into VE
$B80    $15E1   JP       $5E1            ; Jump to 5E1
$B82    $7035   ADD      V0, #35         ; Add 53 to V0
$B84    $A37A   LD       I, $37A         ; Load 37A into I
$B86    $A146   LD       I, $146         ; Load 146 into I
$B88    $A0AE   LD       I, $0AE         ; Load 0AE into I
$B8A    $C380   RND      V3, #80         ; V3 = random & 80
$B8C    $B852   JP       V0, $852        ; Jump to V0 + 852
$B8E    $91E5   UNKNOWN  $91E5           ; Unknown 9xxx instruction
$B90    $AB4A   LD       I, $B4A         ; Load B4A into I
$B92    $F760   UNKNOWN  F760            ; Unknown Fxxx instruction
$B94    $FF12   UNKNOWN  FF12            ; Unknown Fxxx instruction
$B96    $4CB8   SNE      VC, #B8         ; Skip if VC != 184
$B98    $67AD   LD       V7, #AD         ; Load 173 into V7
$B9A    $3A8B   SE       VA, #8B         ; Skip if VA == 139
$B9C    $05B8   SYS      $5B8            ; System call to 5B8
$B9E    $C508   RND      V5, #08         ; V5 = random & 08
$BA0    $F343   UNKNOWN  F343            ; Unknown Fxxx instruction
$BA2    $0B74   SYS      $B74            ; System call to B74
$BA4    $B81B   JP       V0, $81B        ; Jump to V0 + 81B
$BA6    $2697   CALL     $697            ; Call subroutine at 697
$BA8    $96E9   UNKNOWN  $96E9           ; Unknown 9xxx instruction
$BAA    $D441   DRW      V4, V4, #1      ; Draw 1-byte sprite at V4, V4
$BAC    $0C1C   SYS      $C1C            ; System call to C1C
$BAE    $DE2C   DRW      VE, V2, #C      ; Draw 12-byte sprite at VE, V2
$BB0    $3744   SE       V7, #44         ; Skip if V7 == 68
$BB2    $BA1B   JP       V0, $A1B        ; Jump to V0 + A1B
$BB4    $9471   UNKNOWN  $9471           ; Unknown 9xxx instruction
$BB6    $455A   SNE      V5, #5A         ; Skip if V5 != 90
$BB8    $F9B7   UNKNOWN  F9B7            ; Unknown Fxxx instruction
$BBA    $58D9   UNKNOWN  $58D9           ; Unknown 5xxx instruction
$BBC    $CC5A   RND      VC, #5A         ; VC = random & 5A
$BBE    $64A3   LD       V4, #A3         ; Load 163 into V4
$BC0    $FBC0   UNKNOWN  FBC0            ; Unknown Fxxx instruction
$BC2    $4031   SNE      V0, #31         ; Skip if V0 != 49
$BC4    $7AF5   ADD      VA, #F5         ; Add 245 to VA
$BC6    $3A83   SE       VA, #83         ; Skip if VA == 131
$BC8    $3923   SE       V9, #23         ; Skip if V9 == 35
$BCA    $5211   UNKNOWN  $5211           ; Unknown 5xxx instruction
$BCC    $5298   UNKNOWN  $5298           ; Unknown 5xxx instruction
$BCE    $D6D0   DRW      V6, VD, #0      ; Draw 0-byte sprite at V6, VD
$BD0    $61FE   LD       V1, #FE         ; Load 254 into V1
$BD2    $8E5D   UNKNOWN  8E5D            ; Unknown 8xxx instruction
$BD4    $57D3   UNKNOWN  $57D3           ; Unknown 5xxx instruction
$BD6    $0DC6   SYS      $DC6            ; System call to DC6
$BD8    $1515   JP       $515            ; Jump to 515
$BDA    $5446   UNKNOWN  $5446           ; Unknown 5xxx instruction
$BDC    $E5BE   UNKNOWN  $E5BE           ; Unknown Exxx instruction
$BDE    $426C   SNE      V2, #6C         ; Skip if V2 != 108
$BE0    $222E   CALL     $22E            ; Call subroutine at 22E
$BE2    $68FF   LD       V8, #FF         ; Load 255 into V8
$BE4    $AB9E   LD       I, $B9E         ; Load B9E into I
$BE6    $6FD6   LD       VF, #D6         ; Load 214 into VF
$BE8    $7529   ADD      V5, #29         ; Add 41 to V5
$BEA    $488B   SNE      V8, #8B         ; Skip if V8 != 139
$BEC    $DB68   DRW      VB, V6, #8      ; Draw 8-byte sprite at VB, V6
$BEE    $75C3   ADD      V5, #C3         ; Add 195 to V5
$BF0    $2F76   CALL     $F76            ; Call subroutine at F76
$BF2    $AF91   LD       I, $F91         ; Load F91 into I
$BF4    $B661   JP       V0, $661        ; Jump to V0 + 661
$BF6    $8165   SUB      V1, V6          ; V1 -= V6, VF = !borrow
$BF8    $B12E   JP       V0, $12E        ; Jump to V0 + 12E
$BFA    $DD90   DRW      VD, V9, #0      ; Draw 0-byte sprite at VD, V9
$BFC    $8F12   AND      VF, V1          ; VF &= V1
$BFE    $9D19   UNKNOWN  $9D19           ; Unknown 9xxx instruction
$C00    $50AC   UNKNOWN  $50AC           ; Unknown 5xxx instruction
$C02    $AAD1   LD       I, $AD1         ; Load AD1 into I
$C04    $CBDC   RND      VB, #DC         ; VB = random & DC
$C06    $EA0C   UNKNOWN  $EA0C           ; Unknown Exxx instruction
$C08    $03F7   SYS      $3F7            ; System call to 3F7
$C0A    $F72A   UNKNOWN  F72A            ; Unknown Fxxx instruction
$C0C    $2AEE   CALL     $AEE            ; Call subroutine at AEE
$C0E    $8B7C   UNKNOWN  8B7C            ; Unknown 8xxx instruction
$C10    $FEA2   UNKNOWN  FEA2            ; Unknown Fxxx instruction
$C12    $9764   UNKNOWN  $9764           ; Unknown 9xxx instruction
$C14    $AD32   LD       I, $D32         ; Load D32 into I
$C16    $FB85   UNKNOWN  FB85            ; Unknown Fxxx instruction
$C18    $72B3   ADD      V2, #B3         ; Add 179 to V2
$C1A    $6B74   LD       VB, #74         ; Load 116 into VB
$C1C    $0516   SYS      $516            ; System call to 516
$C1E    $7803   ADD      V8, #03         ; Add 3 to V8
$C20    $0689   SYS      $689            ; System call to 689
$C22    $2A70   CALL     $A70            ; Call subroutine at A70
$C24    $E0AA   UNKNOWN  $E0AA           ; Unknown Exxx instruction
$C26    $EA29   UNKNOWN  $EA29           ; Unknown Exxx instruction
$C28    $CD29   RND      VD, #29         ; VD = random & 29
$C2A    $838D   UNKNOWN  838D            ; Unknown 8xxx instruction
$C2C    $C7F5   RND      V7, #F5         ; V7 = random & F5
$C2E    $CDCB   RND      VD, #CB         ; VD = random & CB
$C30    $AB17   LD       I, $B17         ; Load B17 into I
$C32    $F2C5   UNKNOWN  F2C5            ; Unknown Fxxx instruction
$C34    $0829   SYS      $829            ; System call to 829
$C36    $8BC8   UNKNOWN  8BC8            ; Unknown 8xxx instruction
$C38    $B4A2   JP       V0, $4A2        ; Jump to V0 + 4A2
$C3A    $8A00   LD       VA, V0          ; VA = V0
$C3C    $4E4D   SNE      VE, #4D         ; Skip if VE != 77
$C3E    $AC5E   LD       I, $C5E         ; Load C5E into I
$C40    $6FDC   LD       VF, #DC         ; Load 220 into VF
$C42    $E2A6   UNKNOWN  $E2A6           ; Unknown Exxx instruction
$C44    $3623   SE       V6, #23         ; Skip if V6 == 35
$C46    $5944   UNKNOWN  $5944           ; Unknown 5xxx instruction
$C48    $727F   ADD      V2, #7F         ; Add 127 to V2
$C4A    $B47D   JP       V0, $47D        ; Jump to V0 + 47D
$C4C    $C9F4   RND      V9, #F4         ; V9 = random & F4
$C4E    $E28D   UNKNOWN  $E28D           ; Unknown Exxx instruction
$C50    $5A7C   UNKNOWN  $5A7C           ; Unknown 5xxx instruction
$C52    $CB96   RND      VB, #96         ; VB = random & 96
$C54    $BA7D   JP       V0, $A7D        ; Jump to V0 + A7D
$C56    $C5CE   RND      V5, #CE         ; V5 = random & CE
$C58    $7D62   ADD      VD, #62         ; Add 98 to VD
$C5A    $553F   UNKNOWN  $553F           ; Unknown 5xxx instruction
$C5C    $7CE7   ADD      VC, #E7         ; Add 231 to VC
$C5E    $9541   UNKNOWN  $9541           ; Unknown 9xxx instruction
$C60    $9F19   UNKNOWN  $9F19           ; Unknown 9xxx instruction
$C62    $710F   ADD      V1, #0F         ; Add 15 to V1
$C64    $5D6E   UNKNOWN  $5D6E           ; Unknown 5xxx instruction
$C66    $DE2F   DRW      VE, V2, #F      ; Draw 15-byte sprite at VE, V2
$C68    $9873   UNKNOWN  $9873           ; Unknown 9xxx instruction
$C6A    $DD1A   DRW      VD, V1, #A      ; Draw 10-byte sprite at VD, V1
$C6C    $4052   SNE      V0, #52         ; Skip if V0 != 82
$C6E    $1045   JP       $045            ; Jump to 045
$C70    $2CBD   CALL     $CBD            ; Call subroutine at CBD
$C72    $E013   UNKNOWN  $E013           ; Unknown Exxx instruction
$C74    $1085   JP       $085            ; Jump to 085
$C76    $2918   CALL     $918            ; Call subroutine at 918
$C78    $2996   CALL     $996            ; Call subroutine at 996
$C7A    $5BCB   UNKNOWN  $5BCB           ; Unknown 5xxx instruction
$C7C    $2C52   CALL     $C52            ; Call subroutine at C52
$C7E    $B4DF   JP       V0, $4DF        ; Jump to V0 + 4DF
$C80    $4832   SNE      V8, #32         ; Skip if V8 != 50
$C82    $DEEE   DRW      VE, VE, #E      ; Draw 14-byte sprite at VE, VE
$C84    $C940   RND      V9, #40         ; V9 = random & 40
$C86    $E1F3   UNKNOWN  $E1F3           ; Unknown Exxx instruction
$C88    $DA5F   DRW      VA, V5, #F      ; Draw 15-byte sprite at VA, V5
$C8A    $AC16   LD       I, $C16         ; Load C16 into I
$C8C    $B0EF   JP       V0, $0EF        ; Jump to V0 + 0EF
$C8E    $03C3   SYS      $3C3            ; System call to 3C3
$C90    $FC50   UNKNOWN  FC50            ; Unknown Fxxx instruction
$C92    $916B   UNKNOWN  $916B           ; Unknown 9xxx instruction
$C94    $FCEC   UNKNOWN  FCEC            ; Unknown Fxxx instruction
$C96    $3FC8   SE       VF, #C8         ; Skip if VF == 200
$C98    $AE94   LD       I, $E94         ; Load E94 into I
$C9A    $C871   RND      V8, #71         ; V8 = random & 71
$C9C    $35B1   SE       V5, #B1         ; Skip if V5 == 177
$C9E    $AE62   LD       I, $E62         ; Load E62 into I
$CA0    $907D   UNKNOWN  $907D           ; Unknown 9xxx instruction
$CA2    $1753   JP       $753            ; Jump to 753
$CA4    $70AC   ADD      V0, #AC         ; Add 172 to V0
$CA6    $3669   SE       V6, #69         ; Skip if V6 == 105
$CA8    $6E77   LD       VE, #77         ; Load 119 into VE
$CAA    $4AC0   SNE      VA, #C0         ; Skip if VA != 192
$CAC    $A24A   LD       I, $24A         ; Load 24A into I
$CAE    $806D   UNKNOWN  806D            ; Unknown 8xxx instruction
$CB0    $9D4F   UNKNOWN  $9D4F           ; Unknown 9xxx instruction
$CB2    $8C28   UNKNOWN  8C28            ; Unknown 8xxx instruction
$CB4    $E9E9   UNKNOWN  $E9E9           ; Unknown Exxx instruction
$CB6    $F102   UNKNOWN  F102            ; Unknown Fxxx instruction
$CB8    $7D49   ADD      VD, #49         ; Add 73 to VD
$CBA    $6344   LD       V3, #44         ; Load 68 into V3
$CBC    $5283   UNKNOWN  $5283           ; Unknown 5xxx instruction
$CBE    $DBD6   DRW      VB, VD, #6      ; Draw 6-byte sprite at VB, VD
$CC0    $D3F8   DRW      V3, VF, #8      ; Draw 8-byte sprite at V3, VF
$CC2    $605E   LD       V0, #5E         ; Load 94 into V0
$CC4    $18E4   JP       $8E4            ; Jump to 8E4
$CC6    $409A   SNE      V0, #9A         ; Skip if V0 != 154
$CC8    $E286   UNKNOWN  $E286           ; Unknown Exxx instruction
$CCA    $C265   RND      V2, #65         ; V2 = random & 65
$CCC    $8D23   XOR      VD, V2          ; VD ^= V2
$CCE    $8B86   SHR      VB              ; VB >>= 1, VF = LSB
$CD0    $FDD0   UNKNOWN  FDD0            ; Unknown Fxxx instruction
$CD2    $098E   SYS      $98E            ; System call to 98E
$CD4    $3C07   SE       VC, #07         ; Skip if VC == 7
$CD6    $D948   DRW      V9, V4, #8      ; Draw 8-byte sprite at V9, V4
$CD8    $8AC5   SUB      VA, VC          ; VA -= VC, VF = !borrow
$CDA    $515A   UNKNOWN  $515A           ; Unknown 5xxx instruction
$CDC    $97FF   UNKNOWN  $97FF           ; Unknown 9xxx instruction
$CDE    $38CE   SE       V8, #CE         ; Skip if V8 == 206
$CE0    $072D   SYS      $72D            ; System call to 72D
$CE2    $BDBF   JP       V0, $DBF        ; Jump to V0 + DBF
$CE4    $D147   DRW      V1, V4, #7      ; Draw 7-byte sprite at V1, V4
$CE6    $5B4C   UNKNOWN  $5B4C           ; Unknown 5xxx instruction
$CE8    $314F   SE       V1, #4F         ; Skip if V1 == 79
$CEA    $4ACA   SNE      VA, #CA         ; Skip if VA != 202
$CEC    $9820   SNE      V8, V2          ; Skip if V8 != V2
$CEE    $82BC   UNKNOWN  82BC            ; Unknown 8xxx instruction
$CF0    $A496   LD       I, $496         ; Load 496 into I
$CF2    $2D14   CALL     $D14            ; Call subroutine at D14
$CF4    $FD13   UNKNOWN  FD13            ; Unknown Fxxx instruction
$CF6    $10FF   JP       $0FF            ; Jump to 0FF
$CF8    $36FD   SE       V6, #FD         ; Skip if V6 == 253
$CFA    $C21E   RND      V2, #1E         ; V2 = random & 1E
$CFC    $22C9   CALL     $2C9            ; Call subroutine at 2C9
$CFE    $4A57   SNE      VA, #57         ; Skip if VA != 87
$D00    $A210   LD       I, $210         ; Load 210 into I
$D02    $9E9F   UNKNOWN  $9E9F           ; Unknown 9xxx instruction
$D04    $1476   JP       $476            ; Jump to 476
$D06    $4B07   SNE      VB, #07         ; Skip if VB != 7
$D08    $C126   RND      V1, #26         ; V1 = random & 26
$D0A    $946B   UNKNOWN  $946B           ; Unknown 9xxx instruction
$D0C    $3A6C   SE       VA, #6C         ; Skip if VA == 108
$D0E    $8F1A   UNKNOWN  8F1A            ; Unknown 8xxx instruction
$D10    $BF94   JP       V0, $F94        ; Jump to V0 + F94
$D12    $8D01   OR       VD, V0          ; VD |= V0
$D14    $186F   JP       $86F            ; Jump to 86F
$D16    $11DA   JP       $1DA            ; Jump to 1DA
$D18    $2766   CALL     $766            ; Call subroutine at 766
$D1A    $30C1   SE       V0, #C1         ; Skip if V0 == 193
$D1C    $9AA5   UNKNOWN  $9AA5           ; Unknown 9xxx instruction
$D1E    $C2F1   RND      V2, #F1         ; V2 = random & F1
$D20    $AC85   LD       I, $C85         ; Load C85 into I
$D22    $B998   JP       V0, $998        ; Jump to V0 + 998
$D24    $4EF5   SNE      VE, #F5         ; Skip if VE != 245
$D26    $D66E   DRW      V6, V6, #E      ; Draw 14-byte sprite at V6, V6
$D28    $71C5   ADD      V1, #C5         ; Add 197 to V1
$D2A    $3A9F   SE       VA, #9F         ; Skip if VA == 159
$D2C    $A0A9   LD       I, $0A9         ; Load 0A9 into I
$D2E    $6F2D   LD       VF, #2D         ; Load 45 into VF
$D30    $2DCA   CALL     $DCA            ; Call subroutine at DCA
$D32    $40A9   SNE      V0, #A9         ; Skip if V0 != 169
$D34    $ABB1   LD       I, $BB1         ; Load BB1 into I
$D36    $398F   SE       V9, #8F         ; Skip if V9 == 143
$D38    $52BB   UNKNOWN  $52BB           ; Unknown 5xxx instruction
$D3A    $D6FF   DRW      V6, VF, #F      ; Draw 15-byte sprite at V6, VF
$D3C    $E91D   UNKNOWN  $E91D           ; Unknown Exxx instruction
$D3E    $106E   JP       $06E            ; Jump to 06E
$D40    $B644   JP       V0, $644        ; Jump to V0 + 644
$D42    $27DA   CALL     $7DA            ; Call subroutine at 7DA
$D44    $2BD0   CALL     $BD0            ; Call subroutine at BD0
$D46    $33C4   SE       V3, #C4         ; Skip if V3 == 196
$D48    $C09A   RND      V0, #9A         ; V0 = random & 9A
$D4A    $1C55   JP       $C55            ; Jump to C55
$D4C    $F3F1   UNKNOWN  F3F1            ; Unknown Fxxx instruction
$D4E    $99E8   UNKNOWN  $99E8           ; Unknown 9xxx instruction
$D50    $5E70   SE       VE, V7          ; Skip if VE == V7
$D52    $42BD   SNE      V2, #BD         ; Skip if V2 != 189
$D54    $3500   SE       V5, #00         ; Skip if V5 == 0
$D56    $1350   JP       $350            ; Jump to 350
$D58    $12A7   JP       $2A7            ; Jump to 2A7
$D5A    $37FE   SE       V7, #FE         ; Skip if V7 == 254
$D5C    $8263   XOR      V2, V6          ; V2 ^= V6
$D5E    $395F   SE       V9, #5F         ; Skip if V9 == 95
$D60    $6085   LD       V0, #85         ; Load 133 into V0
$D62    $40E8   SNE      V0, #E8         ; Skip if V0 != 232
$D64    $C0A7   RND      V0, #A7         ; V0 = random & A7
$D66    $B84F   JP       V0, $84F        ; Jump to V0 + 84F
$D68    $3FD9   SE       VF, #D9         ; Skip if VF == 217
$D6A    $D1F4   DRW      V1, VF, #4      ; Draw 4-byte sprite at V1, VF
$D6C    $0074   SYS      $074            ; System call to 074
$D6E    $1C86   JP       $C86            ; Jump to C86
$D70    $A212   LD       I, $212         ; Load 212 into I
$D72    $EC98   UNKNOWN  $EC98           ; Unknown Exxx instruction
$D74    $2683   CALL     $683            ; Call subroutine at 683
$D76    $3939   SE       V9, #39         ; Skip if V9 == 57
$D78    $E066   UNKNOWN  $E066           ; Unknown Exxx instruction
$D7A    $2309   CALL     $309            ; Call subroutine at 309
$D7C    $61AF   LD       V1, #AF         ; Load 175 into V1
$D7E    $DF70   DRW      VF, V7, #0      ; Draw 0-byte sprite at VF, V7
$D80    $F558   UNKNOWN  F558            ; Unknown Fxxx instruction
$D82    $BE9C   JP       V0, $E9C        ; Jump to V0 + E9C
$D84    $D45B   DRW      V4, V5, #B      ; Draw 11-byte sprite at V4, V5
$D86    $C4D2   RND      V4, #D2         ; V4 = random & D2
$D88    $8088   UNKNOWN  8088            ; Unknown 8xxx instruction
$D8A    $30C9   SE       V0, #C9         ; Skip if V0 == 201
$D8C    $3936   SE       V9, #36         ; Skip if V9 == 54
$D8E    $74AA   ADD      V4, #AA         ; Add 170 to V4
$D90    $E001   UNKNOWN  $E001           ; Unknown Exxx instruction
$D92    $5A3B   UNKNOWN  $5A3B           ; Unknown 5xxx instruction
$D94    $BFB5   JP       V0, $FB5        ; Jump to V0 + FB5
$D96    $6A8C   LD       VA, #8C         ; Load 140 into VA
$D98    $4A44   SNE      VA, #44         ; Skip if VA != 68
$D9A    $A2C3   LD       I, $2C3         ; Load 2C3 into I
$D9C    $DBA0   DRW      VB, VA, #0      ; Draw 0-byte sprite at VB, VA
$D9E    $C83A   RND      V8, #3A         ; V8 = random & 3A
$DA0    $ACD6   LD       I, $CD6         ; Load CD6 into I
$DA2    $3184   SE       V1, #84         ; Skip if V1 == 132
$DA4    $085D   SYS      $85D            ; System call to 85D
$DA6    $9BA5   UNKNOWN  $9BA5           ; Unknown 9xxx instruction
$DA8    $2EF8   CALL     $EF8            ; Call subroutine at EF8
$DAA    $D1A3   DRW      V1, VA, #3      ; Draw 3-byte sprite at V1, VA
$DAC    $2670   CALL     $670            ; Call subroutine at 670
$DAE    $044D   SYS      $44D            ; System call to 44D
$DB0    $291D   CALL     $91D            ; Call subroutine at 91D
$DB2    $59E7   UNKNOWN  $59E7           ; Unknown 5xxx instruction
$DB4    $1B53   JP       $B53            ; Jump to B53
$DB6    $2BAE   CALL     $BAE            ; Call subroutine at BAE
$DB8    $E4CF   UNKNOWN  $E4CF           ; Unknown Exxx instruction
$DBA    $D5BE   DRW      V5, VB, #E      ; Draw 14-byte sprite at V5, VB
$DBC    $FA8F   UNKNOWN  FA8F            ; Unknown Fxxx instruction
$DBE    $4A91   SNE      VA, #91         ; Skip if VA != 145
$DC0    $51CF   UNKNOWN  $51CF           ; Unknown 5xxx instruction
$DC2    $2CDA   CALL     $CDA            ; Call subroutine at CDA
$DC4    $0077   SYS      $077            ; System call to 077
$DC6    $C729   RND      V7, #29         ; V7 = random & 29
$DC8    $61F7   LD       V1, #F7         ; Load 247 into V1
$DCA    $CF3B   RND      VF, #3B         ; VF = random & 3B
$DCC    $E89D   UNKNOWN  $E89D           ; Unknown Exxx instruction
$DCE    $2ECA   CALL     $ECA            ; Call subroutine at ECA
$DD0    $9D0C   UNKNOWN  $9D0C           ; Unknown 9xxx instruction
$DD2    $7F2D   ADD      VF, #2D         ; Add 45 to VF
$DD4    $13A2   JP       $3A2            ; Jump to 3A2
$DD6    $9141   UNKNOWN  $9141           ; Unknown 9xxx instruction
$DD8    $F065   LD       V0, [I]         ; Load V0-V0 from I
$DDA    $957E   UNKNOWN  $957E           ; Unknown 9xxx instruction
$DDC    $2A4A   CALL     $A4A            ; Call subroutine at A4A
$DDE    $EE46   UNKNOWN  $EE46           ; Unknown Exxx instruction
$DE0    $2EBF   CALL     $EBF            ; Call subroutine at EBF
$DE2    $32FA   SE       V2, #FA         ; Skip if V2 == 250
$DE4    $3173   SE       V1, #73         ; Skip if V1 == 115
$DE6    $3B2E   SE       VB, #2E         ; Skip if VB == 46
$DE8    $B064   JP       V0, $064        ; Jump to V0 + 064
$DEA    $4597   SNE      V5, #97         ; Skip if V5 != 151
$DEC    $AF16   LD       I, $F16         ; Load F16 into I
$DEE    $7A04   ADD      VA, #04         ; Add 4 to VA
$DF0    $D443   DRW      V4, V4, #3      ; Draw 3-byte sprite at V4, V4
$DF2    $9834   UNKNOWN  $9834           ; Unknown 9xxx instruction
$DF4    $D83D   DRW      V8, V3, #D      ; Draw 13-byte sprite at V8, V3
$DF6    $F627   UNKNOWN  F627            ; Unknown Fxxx instruction
$DF8    $04DC   SYS      $4DC            ; System call to 4DC
$DFA    $D249   DRW      V2, V4, #9      ; Draw 9-byte sprite at V2, V4
$DFC    $B54F   JP       V0, $54F        ; Jump to V0 + 54F
$DFE    $ECB6   UNKNOWN  $ECB6           ; Unknown Exxx instruction
$E00    $CA1B   RND      VA, #1B         ; VA = random & 1B
$E02    $49AA   SNE      V9, #AA         ; Skip if V9 != 170
$E04    $DD87   DRW      VD, V8, #7      ; Draw 7-byte sprite at VD, V8
$E06    $29A5   CALL     $9A5            ; Call subroutine at 9A5
$E08    $C3A7   RND      V3, #A7         ; V3 = random & A7
$E0A    $15D6   JP       $5D6            ; Jump to 5D6
$E0C    $6558   LD       V5, #58         ; Load 88 into V5
$E0E    $83FC   UNKNOWN  83FC            ; Unknown 8xxx instruction
$E10    $7C20   ADD      VC, #20         ; Add 32 to VC
$E12    $9BCE   UNKNOWN  $9BCE           ; Unknown 9xxx instruction
$E14    $4DE6   SNE      VD, #E6         ; Skip if VD != 230
$E16    $9724   UNKNOWN  $9724           ; Unknown 9xxx instruction
$E18    $7929   ADD      V9, #29         ; Add 41 to V9
$E1A    $DCDF   DRW      VC, VD, #F      ; Draw 15-byte sprite at VC, VD
$E1C    $FDEB   UNKNOWN  FDEB            ; Unknown Fxxx instruction
$E1E    $8372   AND      V3, V7          ; V3 &= V7
$E20    $EC83   UNKNOWN  $EC83           ; Unknown Exxx instruction
$E22    $097E   SYS      $97E            ; System call to 97E
$E24    $59BF   UNKNOWN  $59BF           ; Unknown 5xxx instruction
$E26    $E77D   UNKNOWN  $E77D           ; Unknown Exxx instruction
$E28    $D0F7   DRW      V0, VF, #7      ; Draw 7-byte sprite at V0, VF
$E2A    $AE93   LD       I, $E93         ; Load E93 into I
$E2C    $11E7   JP       $1E7            ; Jump to 1E7
$E2E    $C631   RND      V6, #31         ; V6 = random & 31
$E30    $E692   UNKNOWN  $E692           ; Unknown Exxx instruction
$E32    $07BF   SYS      $7BF            ; System call to 7BF
$E34    $2FB0   CALL     $FB0            ; Call subroutine at FB0
$E36    $72A2   ADD      V2, #A2         ; Add 162 to V2
$E38    $9C89   UNKNOWN  $9C89           ; Unknown 9xxx instruction
$E3A    $C23E   RND      V2, #3E         ; V2 = random & 3E
$E3C    $F86B   UNKNOWN  F86B            ; Unknown Fxxx instruction
$E3E    $BA81   JP       V0, $A81        ; Jump to V0 + A81
$E40    $6F95   LD       VF, #95         ; Load 149 into VF
$E42    $422B   SNE      V2, #2B         ; Skip if V2 != 43
$E44    $1B0E   JP       $B0E            ; Jump to B0E
$E46    $9158   UNKNOWN  $9158           ; Unknown 9xxx instruction
$E48    $1CDA   JP       $CDA            ; Jump to CDA
$E4A    $2463   CALL     $463            ; Call subroutine at 463
$E4C    $3550   SE       V5, #50         ; Skip if V5 == 80
$E4E    $3F51   SE       VF, #51         ; Skip if VF == 81
$E50    $B4A0   JP       V0, $4A0        ; Jump to V0 + 4A0
$E52    $E26F   UNKNOWN  $E26F           ; Unknown Exxx instruction
$E54    $DA61   DRW      VA, V6, #1      ; Draw 1-byte sprite at VA, V6
$E56    $0F14   SYS      $F14            ; System call to F14
$E58    $1045   JP       $045            ; Jump to 045
$E5A    $78D0   ADD      V8, #D0         ; Add 208 to V8
$E5C    $47EB   SNE      V7, #EB         ; Skip if V7 != 235
$E5E    $F9F1   UNKNOWN  F9F1            ; Unknown Fxxx instruction
$E60    $817B   UNKNOWN  817B            ; Unknown 8xxx instruction
$E62    $39CD   SE       V9, #CD         ; Skip if V9 == 205
$E64    $3BBC   SE       VB, #BC         ; Skip if VB == 188
$E66    $6E2A   LD       VE, #2A         ; Load 42 into VE
$E68    $B301   JP       V0, $301        ; Jump to V0 + 301
$E6A    $DE51   DRW      VE, V5, #1      ; Draw 1-byte sprite at VE, V5
$E6C    $5262   UNKNOWN  $5262           ; Unknown 5xxx instruction
$E6E    $A062   LD       I, $062         ; Load 062 into I
$E70    $E400   UNKNOWN  $E400           ; Unknown Exxx instruction
$E72    $805B   UNKNOWN  805B            ; Unknown 8xxx instruction
$E74    $0241   SYS      $241            ; System call to 241
$E76    $06B8   SYS      $6B8            ; System call to 6B8
$E78    $BA23   JP       V0, $A23        ; Jump to V0 + A23
$E7A    $7D1C   ADD      VD, #1C         ; Add 28 to VD
$E7C    $7456   ADD      V4, #56         ; Add 86 to V4
$E7E    $C623   RND      V6, #23         ; V6 = random & 23
$E80    $FF67   UNKNOWN  FF67            ; Unknown Fxxx instruction
$E82    $C74C   RND      V7, #4C         ; V7 = random & 4C
$E84    $7DAA   ADD      VD, #AA         ; Add 170 to VD
$E86    $FF4D   UNKNOWN  FF4D            ; Unknown Fxxx instruction
$E88    $B251   JP       V0, $251        ; Jump to V0 + 251
$E8A    $8C9B   UNKNOWN  8C9B            ; Unknown 8xxx instruction
$E8C    $3E89   SE       VE, #89         ; Skip if VE == 137
$E8E    $D686   DRW      V6, V8, #6      ; Draw 6-byte sprite at V6, V8
$E90    $860F   UNKNOWN  860F            ; Unknown 8xxx instruction
$E92    $57E4   UNKNOWN  $57E4           ; Unknown 5xxx instruction
$E94    $459A   SNE      V5, #9A         ; Skip if V5 != 154
$E96    $07A5   SYS      $7A5            ; System call to 7A5
$E98    $A1F9   LD       I, $1F9         ; Load 1F9 into I
$E9A    $0317   SYS      $317            ; System call to 317
$E9C    $B775   JP       V0, $775        ; Jump to V0 + 775
$E9E    $0EAC   SYS      $EAC            ; System call to EAC
$EA0    $7F70   ADD      VF, #70         ; Add 112 to VF
$EA2    $714A   ADD      V1, #4A         ; Add 74 to V1
$EA4    $86F1   OR       V6, VF          ; V6 |= VF
$EA6    $7C60   ADD      VC, #60         ; Add 96 to VC
$EA8    $91DF   UNKNOWN  $91DF           ; Unknown 9xxx instruction
$EAA    $9134   UNKNOWN  $9134           ; Unknown 9xxx instruction
$EAC    $BE0A   JP       V0, $E0A        ; Jump to V0 + E0A
$EAE    $F00B   UNKNOWN  F00B            ; Unknown Fxxx instruction
$EB0    $9B9D   UNKNOWN  $9B9D           ; Unknown 9xxx instruction
$EB2    $CD54   RND      VD, #54         ; VD = random & 54
$EB4    $0C46   SYS      $C46            ; System call to C46
$EB6    $1979   JP       $979            ; Jump to 979
$EB8    $AA5D   LD       I, $A5D         ; Load A5D into I
$EBA    $D86A   DRW      V8, V6, #A      ; Draw 10-byte sprite at V8, V6
$EBC    $7933   ADD      V9, #33         ; Add 51 to V9
$EBE    $E67B   UNKNOWN  $E67B           ; Unknown Exxx instruction
$EC0    $B7DC   JP       V0, $7DC        ; Jump to V0 + 7DC
$EC2    $962C   UNKNOWN  $962C           ; Unknown 9xxx instruction
$EC4    $6FC6   LD       VF, #C6         ; Load 198 into VF
$EC6    $D19A   DRW      V1, V9, #A      ; Draw 10-byte sprite at V1, V9
$EC8    $3F06   SE       VF, #06         ; Skip if VF == 6
$ECA    $39FD   SE       V9, #FD         ; Skip if V9 == 253
$ECC    $0E26   SYS      $E26            ; System call to E26
$ECE    $834F   UNKNOWN  834F            ; Unknown 8xxx instruction
$ED0    $1B9A   JP       $B9A            ; Jump to B9A
$ED2    $AF3D   LD       I, $F3D         ; Load F3D into I
$ED4    $983D   UNKNOWN  $983D           ; Unknown 9xxx instruction
$ED6    $0A7B   SYS      $A7B            ; System call to A7B
$ED8    $0272   SYS      $272            ; System call to 272
$EDA    $2F7C   CALL     $F7C            ; Call subroutine at F7C
$EDC    $8045   SUB      V0, V4          ; V0 -= V4, VF = !borrow
$EDE    $ED48   UNKNOWN  $ED48           ; Unknown Exxx instruction
$EE0    $65A9   LD       V5, #A9         ; Load 169 into V5
$EE2    $D415   DRW      V4, V1, #5      ; Draw 5-byte sprite at V4, V1
$EE4    $6F50   LD       VF, #50         ; Load 80 into VF
$EE6    $46C5   SNE      V6, #C5         ; Skip if V6 != 197
$EE8    $BCEE   JP       V0, $CEE        ; Jump to V0 + CEE
$EEA    $2A28   CALL     $A28            ; Call subroutine at A28
$EEC    $240C   CALL     $40C            ; Call subroutine at 40C
$EEE    $27F1   CALL     $7F1            ; Call subroutine at 7F1
$EF0    $EED3   UNKNOWN  $EED3           ; Unknown Exxx instruction
$EF2    $F91D   UNKNOWN  F91D            ; Unknown Fxxx instruction
$EF4    $53C4   UNKNOWN  $53C4           ; Unknown 5xxx instruction
$EF6    $469A   SNE      V6, #9A         ; Skip if V6 != 154
$EF8    $197A   JP       $97A            ; Jump to 97A
$EFA    $D68E   DRW      V6, V8, #E      ; Draw 14-byte sprite at V6, V8
$EFC    $01AD   SYS      $1AD            ; System call to 1AD
$EFE    $F83B   UNKNOWN  F83B            ; Unknown Fxxx instruction
$F00    $3945   SE       V9, #45         ; Skip if V9 == 69
$F02    $BD74   JP       V0, $D74        ; Jump to V0 + D74
$F04    $78B2   ADD      V8, #B2         ; Add 178 to V8
$F06    $9D4F   UNKNOWN  $9D4F           ; Unknown 9xxx instruction
$F08    $2BBE   CALL     $BBE            ; Call subroutine at BBE
$F0A    $B6EB   JP       V0, $6EB        ; Jump to V0 + 6EB
$F0C    $B884   JP       V0, $884        ; Jump to V0 + 884
$F0E    $26E6   CALL     $6E6            ; Call subroutine at 6E6
$F10    $9A2B   UNKNOWN  $9A2B           ; Unknown 9xxx instruction
$F12    $212E   CALL     $12E            ; Call subroutine at 12E
$F14    $F75C   UNKNOWN  F75C            ; Unknown Fxxx instruction
$F16    $76FA   ADD      V6, #FA         ; Add 250 to V6
$F18    $7B7F   ADD      VB, #7F         ; Add 127 to VB
$F1A    $9D7C   UNKNOWN  $9D7C           ; Unknown 9xxx instruction
$F1C    $CFB7   RND      VF, #B7         ; VF = random & B7
$F1E    $1F21   JP       $F21            ; Jump to F21
$F20    $73B2   ADD      V3, #B2         ; Add 178 to V3
$F22    $C204   RND      V2, #04         ; V2 = random & 04
$F24    $9BDE   UNKNOWN  $9BDE           ; Unknown 9xxx instruction
$F26    $36C8   SE       V6, #C8         ; Skip if V6 == 200
$F28    $F541   UNKNOWN  F541            ; Unknown Fxxx instruction
$F2A    $D6D1   DRW      V6, VD, #1      ; Draw 1-byte sprite at V6, VD
$F2C    $94E6   UNKNOWN  $94E6           ; Unknown 9xxx instruction
$F2E    $F067   UNKNOWN  F067            ; Unknown Fxxx instruction
$F30    $F44B   UNKNOWN  F44B            ; Unknown Fxxx instruction
$F32    $EE3B   UNKNOWN  $EE3B           ; Unknown Exxx instruction
$F34    $9C2D   UNKNOWN  $9C2D           ; Unknown 9xxx instruction
$F36    $EE20   UNKNOWN  $EE20           ; Unknown Exxx instruction
$F38    $1B79   JP       $B79            ; Jump to B79
$F3A    $07AF   SYS      $7AF            ; System call to 7AF
$F3C    $9EAE   UNKNOWN  $9EAE           ; Unknown 9xxx instruction
$F3E    $FFE6   UNKNOWN  FFE6            ; Unknown Fxxx instruction
$F40    $A306   LD       I, $306         ; Load 306 into I
$F42    $BADD   JP       V0, $ADD        ; Jump to V0 + ADD
$F44    $B8A6   JP       V0, $8A6        ; Jump to V0 + 8A6
$F46    $DCB1   DRW      VC, VB, #1      ; Draw 1-byte sprite at VC, VB
$F48    $2484   CALL     $484            ; Call subroutine at 484
$F4A    $1DF0   JP       $DF0            ; Jump to DF0
$F4C    $06F0   SYS      $6F0            ; System call to 6F0
$F4E    $DF72   DRW      VF, V7, #2      ; Draw 2-byte sprite at VF, V7
$F50    $E73E   UNKNOWN  $E73E           ; Unknown Exxx instruction
$F52    $900D   UNKNOWN  $900D           ; Unknown 9xxx instruction
$F54    $09B4   SYS      $9B4            ; System call to 9B4
$F56    $0539   SYS      $539            ; System call to 539
$F58    $25C2   CALL     $5C2            ; Call subroutine at 5C2
$F5A    $5AB2   UNKNOWN  $5AB2           ; Unknown 5xxx instruction
$F5C    $34F8   SE       V4, #F8         ; Skip if V4 == 248
$F5E    $1E3F   JP       $E3F            ; Jump to E3F
$F60    $A546   LD       I, $546         ; Load 546 into I
$F62    $0EFD   SYS      $EFD            ; System call to EFD
$F64    $2FB2   CALL     $FB2            ; Call subroutine at FB2
$F66    $D491   DRW      V4, V9, #1      ; Draw 1-byte sprite at V4, V9
$F68    $C567   RND      V5, #67         ; V5 = random & 67
$F6A    $6C75   LD       VC, #75         ; Load 117 into VC
$F6C    $8CC3   XOR      VC, VC          ; VC ^= VC
$F6E    $B4A6   JP       V0, $4A6        ; Jump to V0 + 4A6
$F70    $3776   SE       V7, #76         ; Skip if V7 == 118
$F72    $BE58   JP       V0, $E58        ; Jump to V0 + E58
$F74    $07EF   SYS      $7EF            ; System call to 7EF
$F76    $985E   UNKNOWN  $985E           ; Unknown 9xxx instruction
$F78    $B8A7   JP       V0, $8A7        ; Jump to V0 + 8A7
$F7A    $9CF9   UNKNOWN  $9CF9           ; Unknown 9xxx instruction
$F7C    $94CF   UNKNOWN  $94CF           ; Unknown 9xxx instruction
$F7E    $C12B   RND      V1, #2B         ; V1 = random & 2B
$F80    $96FC   UNKNOWN  $96FC           ; Unknown 9xxx instruction
$F82    $EDD0   UNKNOWN  $EDD0           ; Unknown Exxx instruction
$F84    $A0CE   LD       I, $0CE         ; Load 0CE into I
$F86    $2A52   CALL     $A52            ; Call subroutine at A52
$F88    $2F33   CALL     $F33            ; Call subroutine at F33
$F8A    $4152   SNE      V1, #52         ; Skip if V1 != 82
$F8C    $5B38   UNKNOWN  $5B38           ; Unknown 5xxx instruction
$F8E    $22BB   CALL     $2BB            ; Call subroutine at 2BB
$F90    $D04F   DRW      V0, V4, #F      ; Draw 15-byte sprite at V0, V4
$F92    $8155   SUB      V1, V5          ; V1 -= V5, VF = !borrow
$F94    $2E5A   CALL     $E5A            ; Call subroutine at E5A
$F96    $9DD7   UNKNOWN  $9DD7           ; Unknown 9xxx instruction
$F98    $BD75   JP       V0, $D75        ; Jump to V0 + D75
$F9A    $F0B1   UNKNOWN  F0B1            ; Unknown Fxxx instruction
$F9C    $DDFF   DRW      VD, VF, #F      ; Draw 15-byte sprite at VD, VF
$F9E    $962F   UNKNOWN  $962F           ; Unknown 9xxx instruction
$FA0    $3F92   SE       VF, #92         ; Skip if VF == 146
$FA2    $915B   UNKNOWN  $915B           ; Unknown 9xxx instruction
$FA4    $B81A   JP       V0, $81A        ; Jump to V0 + 81A
$FA6    $829E   SHL      V2              ; V2 <<= 1, VF = MSB
$FA8    $4A3F   SNE      VA, #3F         ; Skip if VA != 63
$FAA    $EA0A   UNKNOWN  $EA0A           ; Unknown Exxx instruction
$FAC    $7E2F   ADD      VE, #2F         ; Add 47 to VE
$FAE    $D374   DRW      V3, V7, #4      ; Draw 4-byte sprite at V3, V7
$FB0    $7270   ADD      V2, #70         ; Add 112 to V2
$FB2    $73D4   ADD      V3, #D4         ; Add 212 to V3
$FB4    $C2BA   RND      V2, #BA         ; V2 = random & BA
$FB6    $78DE   ADD      V8, #DE         ; Add 222 to V8
$FB8    $F5C8   UNKNOWN  F5C8            ; Unknown Fxxx instruction
$FBA    $0894   SYS      $894            ; System call to 894
$FBC    $0AE1   SYS      $AE1            ; System call to AE1
$FBE    $479E   SNE      V7, #9E         ; Skip if V7 != 158
$FC0    $5D24   UNKNOWN  $5D24           ; Unknown 5xxx instruction
$FC2    $711B   ADD      V1, #1B         ; Add 27 to V1
$FC4    $E53B   UNKNOWN  $E53B           ; Unknown Exxx instruction
$FC6    $25A2   CALL     $5A2            ; Call subroutine at 5A2
$FC8    $6785   LD       V7, #85         ; Load 133 into V7
$FCA    $198F   JP       $98F            ; Jump to 98F
$FCC    $97E1   UNKNOWN  $97E1           ; Unknown 9xxx instruction
$FCE    $E11D   UNKNOWN  $E11D           ; Unknown Exxx instruction
$FD0    $8FC2   AND      VF, VC          ; VF &= VC
$FD2    $50D6   UNKNOWN  $50D6           ; Unknown 5xxx instruction
$FD4    $41E1   SNE      V1, #E1         ; Skip if V1 != 225
$FD6    $D6B8   DRW      V6, VB, #8      ; Draw 8-byte sprite at V6, VB
$FD8    $7FE8   ADD      VF, #E8         ; Add 232 to VF
$FDA    $8FBA   UNKNOWN  8FBA            ; Unknown 8xxx instruction
$FDC    $2FF0   CALL     $FF0            ; Call subroutine at FF0
$FDE    $82C3   XOR      V2, VC          ; V2 ^= VC
$FE0    $4CED   SNE      VC, #ED         ; Skip if VC != 237
$FE2    $E164   UNKNOWN  $E164           ; Unknown Exxx instruction
$FE4    $04BD   SYS      $4BD            ; System call to 4BD
$FE6    $4212   SNE      V2, #12         ; Skip if V2 != 18
$FE8    $1DF1   JP       $DF1            ; Jump to DF1
$FEA    $BE4E   JP       V0, $E4E        ; Jump to V0 + E4E
$FEC    $A035   LD       I, $035         ; Load 035 into I
$FEE    $2B7A   CALL     $B7A            ; Call subroutine at B7A
$FF0    $621E   LD       V2, #1E         ; Load 30 into V2
$FF2    $6E90   LD       VE, #90         ; Load 144 into VE
$FF4    $3BC5   SE       VB, #C5         ; Skip if VB == 197
$FF6    $0563   SYS      $563            ; System call to 563
$FF8    $201C   CALL     $01C            ; Call subroutine at 01C
$FFA    $02D3   SYS      $2D3            ; System call to 2D3
$FFC    $54B3   UNKNOWN  $54B3           ; Unknown 5xxx instruction
$FFE    $F78D   UNKNOWN  F78D            ; Unknown Fxxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 487 (27.2%)
  LD      : 235 (13.1%)
  JP      : 216 (12.1%)
  ADD     : 137 ( 7.7%)
  SE      : 120 ( 6.7%)
  SNE     : 118 ( 6.6%)
  SYS     : 113 ( 6.3%)
  CALL    : 111 ( 6.2%)
  DRW     : 110 ( 6.1%)
  RND     :  95 ( 5.3%)
  SUB     :  10 ( 0.6%)
  OR      :   9 ( 0.5%)
  SHL     :   8 ( 0.4%)
  SHR     :   8 ( 0.4%)
  AND     :   5 ( 0.3%)
  SUBN    :   4 ( 0.2%)
  XOR     :   4 ( 0.2%)

Memory Operations: 372 (20.8%)
Arithmetic Operations: 169 (9.4%)
