
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B1569D01_I23531_C40106_b1090acd8d24.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 1569
Instance: 23531
Direction: ascending
Final Array: [32, 32, 32, 32, 32, 32, 120, 182]
Operations: R:0 W:6 C:909 S:2

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 113
Sort Array References:
  $206: LD I, $F67 ; Load F67 into I
  $210: LD I, $658 ; Load 658 into I
  $320: LD I, $194 ; Load 194 into I
  $362: LD I, $973 ; Load 973 into I
  $36C: LD I, $5A7 ; Load 5A7 into I
  $390: LD I, $F2F ; Load F2F into I
  $3FC: LD I, $C49 ; Load C49 into I
  $40A: LD I, $69E ; Load 69E into I
  $416: LD I, $2C0 ; Load 2C0 into I
  $44E: LD I, $229 ; Load 229 into I
  $478: LD I, $F43 ; Load F43 into I
  $48C: LD I, $1A8 ; Load 1A8 into I
  $4A8: LD I, $DF4 ; Load DF4 into I
  $4B0: LD I, $EB6 ; Load EB6 into I
  $4C0: LD I, $FD1 ; Load FD1 into I
  $50A: LD I, $747 ; Load 747 into I
  $522: LD I, $BFD ; Load BFD into I
  $532: LD I, $38A ; Load 38A into I
  $536: LD I, $733 ; Load 733 into I
  $53E: LD I, $A2E ; Load A2E into I
  $544: LD I, $DA0 ; Load DA0 into I
  $548: LD I, $15E ; Load 15E into I
  $574: LD I, $371 ; Load 371 into I
  $578: LD I, $54E ; Load 54E into I
  $5B2: LD I, $40D ; Load 40D into I
  $5D2: LD I, $109 ; Load 109 into I
  $5E6: LD I, $6AF ; Load 6AF into I
  $5EC: LD I, $185 ; Load 185 into I
  $608: LD I, $C83 ; Load C83 into I
  $60A: LD I, $52C ; Load 52C into I
  $614: LD I, $606 ; Load 606 into I
  $62C: LD I, $E92 ; Load E92 into I
  $6C2: LD I, $769 ; Load 769 into I
  $6E6: LD I, $866 ; Load 866 into I
  $70E: LD I, $BAC ; Load BAC into I
  $722: LD I, $70A ; Load 70A into I
  $732: LD I, $1B6 ; Load 1B6 into I
  $73A: LD I, $DD7 ; Load DD7 into I
  $76C: LD I, $5A9 ; Load 5A9 into I
  $782: LD I, $A80 ; Load A80 into I
  $798: LD I, $509 ; Load 509 into I
  $7B2: LD I, $01F ; Load 01F into I
  $7D6: LD I, $F5F ; Load F5F into I
  $7EE: LD I, $1C0 ; Load 1C0 into I
  $834: LD I, $A1F ; Load A1F into I
  $85E: LD I, $7F8 ; Load 7F8 into I
  $864: LD I, $B38 ; Load B38 into I
  $872: LD I, $CCF ; Load CCF into I
  $87E: LD I, $309 ; Load 309 into I
  $888: LD I, $56B ; Load 56B into I
  $894: LD I, $4B3 ; Load 4B3 into I
  $8CC: LD I, $A6F ; Load A6F into I
  $8EC: LD I, $844 ; Load 844 into I
  $900: LD I, $C5C ; Load C5C into I
  $906: LD I, $E2A ; Load E2A into I
  $916: LD I, $8D4 ; Load 8D4 into I
  $91E: LD I, $07B ; Load 07B into I
  $93C: LD I, $B08 ; Load B08 into I
  $94A: LD I, $86A ; Load 86A into I
  $95E: LD I, $4BF ; Load 4BF into I
  $962: LD I, $14B ; Load 14B into I
  $96C: LD I, $7E2 ; Load 7E2 into I
  $976: LD I, $162 ; Load 162 into I
  $988: LD I, $B6E ; Load B6E into I
  $99C: LD I, $2C9 ; Load 2C9 into I
  $9E0: LD I, $3FC ; Load 3FC into I
  $9EE: LD I, $312 ; Load 312 into I
  $A48: LD I, $638 ; Load 638 into I
  $A76: LD I, $CCF ; Load CCF into I
  $AD0: LD I, $8A4 ; Load 8A4 into I
  $AF6: LD I, $5D2 ; Load 5D2 into I
  $AFC: LD I, $BED ; Load BED into I
  $B02: LD I, $0A2 ; Load 0A2 into I
  $B64: LD I, $A78 ; Load A78 into I
  $B66: LD I, $464 ; Load 464 into I
  $B6A: LD I, $85F ; Load 85F into I
  $B8A: LD I, $E62 ; Load E62 into I
  $BAC: LD I, $B16 ; Load B16 into I
  $BBC: LD I, $217 ; Load 217 into I
  $BD0: LD I, $78E ; Load 78E into I
  $BD4: LD I, $841 ; Load 841 into I
  $BFA: LD I, $41E ; Load 41E into I
  $C0C: LD I, $329 ; Load 329 into I
  $C20: LD I, $FEE ; Load FEE into I
  $C50: LD I, $F3D ; Load F3D into I
  $C64: LD I, $EF9 ; Load EF9 into I
  $C92: LD I, $04D ; Load 04D into I
  $CAE: LD I, $B3C ; Load B3C into I
  $CCE: LD I, $BE1 ; Load BE1 into I
  $D68: LD I, $E4B ; Load E4B into I
  $D9A: LD I, $B0E ; Load B0E into I
  $DB2: LD I, $820 ; Load 820 into I
  $DBC: LD I, $EDE ; Load EDE into I
  $DDA: LD I, $1AF ; Load 1AF into I
  $DF0: LD I, $4DA ; Load 4DA into I
  $DF4: LD I, $C8F ; Load C8F into I
  $DF6: LD I, $295 ; Load 295 into I
  $E26: LD I, $DF7 ; Load DF7 into I
  $E34: LD I, $967 ; Load 967 into I
  $E3C: LD I, $F21 ; Load F21 into I
  $E56: LD I, $402 ; Load 402 into I
  $E5C: LD I, $ABD ; Load ABD into I
  $E8A: LD I, $2D3 ; Load 2D3 into I
  $EA2: LD I, $52B ; Load 52B into I
  $EC0: LD I, $4F5 ; Load 4F5 into I
  $EF0: LD I, $DC2 ; Load DC2 into I
  $F14: LD I, $443 ; Load 443 into I
  $F3E: LD I, $27B ; Load 27B into I
  $F42: LD I, $7C1 ; Load 7C1 into I
  $F48: LD I, $E55 ; Load E55 into I
  $F4A: LD I, $B0F ; Load B0F into I
  $F78: LD I, $50D ; Load 50D into I
  $FF2: LD I, $A42 ; Load A42 into I

CONTROL FLOW ANALYSIS:
Jumps: 209
Calls: 194
Branches: 232
Loops: 129
Loop Structures:
  $204 -> $0D0 (backward jump)
  $30A -> $12A (backward jump)
  $374 -> $176 (backward jump)
  $37E -> $1A8 (backward jump)
  $424 -> $32F (backward jump)
  $49E -> $0D9 (backward jump)
  $502 -> $21E (backward jump)
  $52A -> $2C3 (backward jump)
  $542 -> $4C7 (backward jump)
  $5AC -> $0A1 (backward jump)
  $644 -> $3D3 (backward jump)
  $64A -> $3FF (backward jump)
  $6DE -> $6A3 (backward jump)
  $6E0 -> $682 (backward jump)
  $6F4 -> $503 (backward jump)
  $702 -> $0FE (backward jump)
  $71E -> $37D (backward jump)
  $72E -> $1F4 (backward jump)
  $764 -> $01E (backward jump)
  $780 -> $615 (backward jump)
  $784 -> $69F (backward jump)
  $7A4 -> $772 (backward jump)
  $7D4 -> $06B (backward jump)
  $810 -> $631 (backward jump)
  $822 -> $41E (backward jump)
  $824 -> $207 (backward jump)
  $828 -> $2C8 (backward jump)
  $82A -> $1E2 (backward jump)
  $844 -> $032 (backward jump)
  $852 -> $428 (backward jump)
  $858 -> $7AB (backward jump)
  $860 -> $704 (backward jump)
  $86A -> $4C2 (backward jump)
  $8D6 -> $7B7 (backward jump)
  $904 -> $5B0 (backward jump)
  $92A -> $299 (backward jump)
  $934 -> $74C (backward jump)
  $93A -> $095 (backward jump)
  $960 -> $0E9 (backward jump)
  $972 -> $4FA (backward jump)
  $97C -> $01C (backward jump)
  $984 -> $613 (backward jump)
  $98C -> $860 (backward jump)
  $9D2 -> $305 (backward jump)
  $9DE -> $62C (backward jump)
  $9EC -> $624 (backward jump)
  $A30 -> $2C9 (backward jump)
  $A94 -> $485 (backward jump)
  $A9A -> $36C (backward jump)
  $AA0 -> $7E2 (backward jump)
  $AAA -> $540 (backward jump)
  $AAC -> $844 (backward jump)
  $AB8 -> $46D (backward jump)
  $AC2 -> $321 (backward jump)
  $ACA -> $6FF (backward jump)
  $AE4 -> $4D8 (backward jump)
  $AFA -> $05D (backward jump)
  $B0E -> $73A (backward jump)
  $B1E -> $1A4 (backward jump)
  $B24 -> $75C (backward jump)
  $B3A -> $0C5 (backward jump)
  $B46 -> $B0E (backward jump)
  $B6C -> $39F (backward jump)
  $B8C -> $7F9 (backward jump)
  $BBA -> $626 (backward jump)
  $BD6 -> $0E0 (backward jump)
  $BEC -> $12E (backward jump)
  $BF4 -> $A6A (backward jump)
  $C00 -> $0CE (backward jump)
  $C38 -> $B04 (backward jump)
  $C56 -> $599 (backward jump)
  $C88 -> $353 (backward jump)
  $C8C -> $74F (backward jump)
  $CA6 -> $5EA (backward jump)
  $CB0 -> $094 (backward jump)
  $CB2 -> $B9C (backward jump)
  $CC0 -> $4D7 (backward jump)
  $CD8 -> $728 (backward jump)
  $CE2 -> $71A (backward jump)
  $CEA -> $238 (backward jump)
  $CEE -> $A2A (backward jump)
  $CF0 -> $5E1 (backward jump)
  $CF8 -> $9C1 (backward jump)
  $D0A -> $22D (backward jump)
  $D0E -> $84E (backward jump)
  $D16 -> $96E (backward jump)
  $D1E -> $C1B (backward jump)
  $D28 -> $A04 (backward jump)
  $D6E -> $586 (backward jump)
  $D86 -> $492 (backward jump)
  $D88 -> $3BF (backward jump)
  $D90 -> $B5B (backward jump)
  $D98 -> $45B (backward jump)
  $DA2 -> $17C (backward jump)
  $DB4 -> $BB4 (backward jump)
  $DB6 -> $0E7 (backward jump)
  $DC0 -> $CE0 (backward jump)
  $E04 -> $A1F (backward jump)
  $E06 -> $26A (backward jump)
  $E0E -> $559 (backward jump)
  $E10 -> $23A (backward jump)
  $E12 -> $9A2 (backward jump)
  $E28 -> $17C (backward jump)
  $E2A -> $1B9 (backward jump)
  $E3E -> $3BD (backward jump)
  $E50 -> $02E (backward jump)
  $E54 -> $AFA (backward jump)
  $E58 -> $510 (backward jump)
  $E9E -> $C7E (backward jump)
  $EA6 -> $1F0 (backward jump)
  $EC2 -> $1AB (backward jump)
  $ECA -> $DC6 (backward jump)
  $ED2 -> $34B (backward jump)
  $EE0 -> $7F4 (backward jump)
  $EE8 -> $987 (backward jump)
  $F02 -> $20E (backward jump)
  $F1E -> $72A (backward jump)
  $F2E -> $B16 (backward jump)
  $F56 -> $347 (backward jump)
  $F58 -> $D79 (backward jump)
  $F6C -> $9AE (backward jump)
  $F90 -> $934 (backward jump)
  $FAA -> $5EF (backward jump)
  $FB2 -> $EC3 (backward jump)
  $FB8 -> $65A (backward jump)
  $FD0 -> $A3A (backward jump)
  $FD8 -> $21E (backward jump)
  $FDC -> $340 (backward jump)
  $FFA -> $146 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $BB8A   JP       V0, $B8A        ; Jump to V0 + B8A
$202    $8179   UNKNOWN  8179            ; Unknown 8xxx instruction
$204    $10D0   JP       $0D0            ; Jump to 0D0
$206    $AF67   LD       I, $F67         ; Load F67 into I
$208    $8577   SUBN     V5, V7          ; V5 = V7 - V5, VF = !borrow
$20A    $9760   SNE      V7, V6          ; Skip if V7 != V6
$20C    $D7A7   DRW      V7, VA, #7      ; Draw 7-byte sprite at V7, VA
$20E    $1413   JP       $413            ; Jump to 413
$210    $A658   LD       I, $658         ; Load 658 into I
$212    $FEC6   UNKNOWN  FEC6            ; Unknown Fxxx instruction
$214    $7D1E   ADD      VD, #1E         ; Add 30 to VD
$216    $FA30   UNKNOWN  FA30            ; Unknown Fxxx instruction
$218    $6ECC   LD       VE, #CC         ; Load 204 into VE
$21A    $3BC6   SE       VB, #C6         ; Skip if VB == 198
$21C    $8C39   UNKNOWN  8C39            ; Unknown 8xxx instruction
$21E    $55D7   UNKNOWN  $55D7           ; Unknown 5xxx instruction
$220    $8C5D   UNKNOWN  8C5D            ; Unknown 8xxx instruction
$222    $41CD   SNE      V1, #CD         ; Skip if V1 != 205
$224    $DD20   DRW      VD, V2, #0      ; Draw 0-byte sprite at VD, V2
$226    $2020   CALL     $020            ; Call subroutine at 020
$228    $2020   CALL     $020            ; Call subroutine at 020
$22A    $2020   CALL     $020            ; Call subroutine at 020
$22C    $2020   CALL     $020            ; Call subroutine at 020
$22E    $2020   CALL     $020            ; Call subroutine at 020
$230    $2020   CALL     $020            ; Call subroutine at 020
$232    $2020   CALL     $020            ; Call subroutine at 020
$234    $2020   CALL     $020            ; Call subroutine at 020
$236    $2020   CALL     $020            ; Call subroutine at 020
$238    $2020   CALL     $020            ; Call subroutine at 020
$23A    $2020   CALL     $020            ; Call subroutine at 020
$23C    $2020   CALL     $020            ; Call subroutine at 020
$23E    $2020   CALL     $020            ; Call subroutine at 020
$240    $2020   CALL     $020            ; Call subroutine at 020
$242    $2020   CALL     $020            ; Call subroutine at 020
$244    $2020   CALL     $020            ; Call subroutine at 020
$246    $2020   CALL     $020            ; Call subroutine at 020
$248    $2020   CALL     $020            ; Call subroutine at 020
$24A    $2020   CALL     $020            ; Call subroutine at 020
$24C    $2020   CALL     $020            ; Call subroutine at 020
$24E    $2020   CALL     $020            ; Call subroutine at 020
$250    $2020   CALL     $020            ; Call subroutine at 020
$252    $2020   CALL     $020            ; Call subroutine at 020
$254    $2020   CALL     $020            ; Call subroutine at 020
$256    $2020   CALL     $020            ; Call subroutine at 020
$258    $2020   CALL     $020            ; Call subroutine at 020
$25A    $2020   CALL     $020            ; Call subroutine at 020
$25C    $2020   CALL     $020            ; Call subroutine at 020
$25E    $2020   CALL     $020            ; Call subroutine at 020
$260    $2020   CALL     $020            ; Call subroutine at 020
$262    $2020   CALL     $020            ; Call subroutine at 020
$264    $2020   CALL     $020            ; Call subroutine at 020
$266    $2020   CALL     $020            ; Call subroutine at 020
$268    $2020   CALL     $020            ; Call subroutine at 020
$26A    $2020   CALL     $020            ; Call subroutine at 020
$26C    $2020   CALL     $020            ; Call subroutine at 020
$26E    $2020   CALL     $020            ; Call subroutine at 020
$270    $2020   CALL     $020            ; Call subroutine at 020
$272    $2020   CALL     $020            ; Call subroutine at 020
$274    $2020   CALL     $020            ; Call subroutine at 020
$276    $2020   CALL     $020            ; Call subroutine at 020
$278    $2020   CALL     $020            ; Call subroutine at 020
$27A    $2020   CALL     $020            ; Call subroutine at 020
$27C    $2020   CALL     $020            ; Call subroutine at 020
$27E    $2020   CALL     $020            ; Call subroutine at 020
$280    $2020   CALL     $020            ; Call subroutine at 020
$282    $2020   CALL     $020            ; Call subroutine at 020
$284    $2020   CALL     $020            ; Call subroutine at 020
$286    $2020   CALL     $020            ; Call subroutine at 020
$288    $2020   CALL     $020            ; Call subroutine at 020
$28A    $2020   CALL     $020            ; Call subroutine at 020
$28C    $2020   CALL     $020            ; Call subroutine at 020
$28E    $2020   CALL     $020            ; Call subroutine at 020
$290    $2020   CALL     $020            ; Call subroutine at 020
$292    $2020   CALL     $020            ; Call subroutine at 020
$294    $2020   CALL     $020            ; Call subroutine at 020
$296    $2020   CALL     $020            ; Call subroutine at 020
$298    $2020   CALL     $020            ; Call subroutine at 020
$29A    $2020   CALL     $020            ; Call subroutine at 020
$29C    $2020   CALL     $020            ; Call subroutine at 020
$29E    $2020   CALL     $020            ; Call subroutine at 020
$2A0    $2020   CALL     $020            ; Call subroutine at 020
$2A2    $2020   CALL     $020            ; Call subroutine at 020
$2A4    $2020   CALL     $020            ; Call subroutine at 020
$2A6    $2020   CALL     $020            ; Call subroutine at 020
$2A8    $2020   CALL     $020            ; Call subroutine at 020
$2AA    $2020   CALL     $020            ; Call subroutine at 020
$2AC    $2020   CALL     $020            ; Call subroutine at 020
$2AE    $2020   CALL     $020            ; Call subroutine at 020
$2B0    $2020   CALL     $020            ; Call subroutine at 020
$2B2    $2020   CALL     $020            ; Call subroutine at 020
$2B4    $2020   CALL     $020            ; Call subroutine at 020
$2B6    $2020   CALL     $020            ; Call subroutine at 020
$2B8    $2020   CALL     $020            ; Call subroutine at 020
$2BA    $2020   CALL     $020            ; Call subroutine at 020
$2BC    $2020   CALL     $020            ; Call subroutine at 020
$2BE    $2020   CALL     $020            ; Call subroutine at 020
$2C0    $2020   CALL     $020            ; Call subroutine at 020
$2C2    $2020   CALL     $020            ; Call subroutine at 020
$2C4    $2020   CALL     $020            ; Call subroutine at 020
$2C6    $2020   CALL     $020            ; Call subroutine at 020
$2C8    $2020   CALL     $020            ; Call subroutine at 020
$2CA    $2020   CALL     $020            ; Call subroutine at 020
$2CC    $2020   CALL     $020            ; Call subroutine at 020
$2CE    $2020   CALL     $020            ; Call subroutine at 020
$2D0    $2020   CALL     $020            ; Call subroutine at 020
$2D2    $2020   CALL     $020            ; Call subroutine at 020
$2D4    $2020   CALL     $020            ; Call subroutine at 020
$2D6    $2020   CALL     $020            ; Call subroutine at 020
$2D8    $2020   CALL     $020            ; Call subroutine at 020
$2DA    $2020   CALL     $020            ; Call subroutine at 020
$2DC    $2020   CALL     $020            ; Call subroutine at 020
$2DE    $2020   CALL     $020            ; Call subroutine at 020
$2E0    $2020   CALL     $020            ; Call subroutine at 020
$2E2    $2020   CALL     $020            ; Call subroutine at 020
$2E4    $2020   CALL     $020            ; Call subroutine at 020
$2E6    $2020   CALL     $020            ; Call subroutine at 020
$2E8    $2020   CALL     $020            ; Call subroutine at 020
$2EA    $2020   CALL     $020            ; Call subroutine at 020
$2EC    $2020   CALL     $020            ; Call subroutine at 020
$2EE    $2020   CALL     $020            ; Call subroutine at 020
$2F0    $2020   CALL     $020            ; Call subroutine at 020
$2F2    $2020   CALL     $020            ; Call subroutine at 020
$2F4    $2020   CALL     $020            ; Call subroutine at 020
$2F6    $2020   CALL     $020            ; Call subroutine at 020
$2F8    $2020   CALL     $020            ; Call subroutine at 020
$2FA    $2020   CALL     $020            ; Call subroutine at 020
$2FC    $2020   CALL     $020            ; Call subroutine at 020
$2FE    $2020   CALL     $020            ; Call subroutine at 020
$300    $2020   CALL     $020            ; Call subroutine at 020
$302    $2020   CALL     $020            ; Call subroutine at 020
$304    $2020   CALL     $020            ; Call subroutine at 020
$306    $78B6   ADD      V8, #B6         ; Add 182 to V8
$308    $79C4   ADD      V9, #C4         ; Add 196 to V9
$30A    $112A   JP       $12A            ; Jump to 12A
$30C    $6FAA   LD       VF, #AA         ; Load 170 into VF
$30E    $3A7A   SE       VA, #7A         ; Skip if VA == 122
$310    $877F   UNKNOWN  877F            ; Unknown 8xxx instruction
$312    $922C   UNKNOWN  $922C           ; Unknown 9xxx instruction
$314    $50F8   UNKNOWN  $50F8           ; Unknown 5xxx instruction
$316    $9746   UNKNOWN  $9746           ; Unknown 9xxx instruction
$318    $ECDF   UNKNOWN  $ECDF           ; Unknown Exxx instruction
$31A    $98D5   UNKNOWN  $98D5           ; Unknown 9xxx instruction
$31C    $39F0   SE       V9, #F0         ; Skip if V9 == 240
$31E    $1951   JP       $951            ; Jump to 951
$320    $A194   LD       I, $194         ; Load 194 into I
$322    $1A1D   JP       $A1D            ; Jump to A1D
$324    $C672   RND      V6, #72         ; V6 = random & 72
$326    $FC5A   UNKNOWN  FC5A            ; Unknown Fxxx instruction
$328    $28AC   CALL     $8AC            ; Call subroutine at 8AC
$32A    $4959   SNE      V9, #59         ; Skip if V9 != 89
$32C    $67F0   LD       V7, #F0         ; Load 240 into V7
$32E    $3F8B   SE       VF, #8B         ; Skip if VF == 139
$330    $7617   ADD      V6, #17         ; Add 23 to V6
$332    $F7D0   UNKNOWN  F7D0            ; Unknown Fxxx instruction
$334    $41C0   SNE      V1, #C0         ; Skip if V1 != 192
$336    $5EF5   UNKNOWN  $5EF5           ; Unknown 5xxx instruction
$338    $3C20   SE       VC, #20         ; Skip if VC == 32
$33A    $DEA7   DRW      VE, VA, #7      ; Draw 7-byte sprite at VE, VA
$33C    $85B5   SUB      V5, VB          ; V5 -= VB, VF = !borrow
$33E    $6563   LD       V5, #63         ; Load 99 into V5
$340    $8BDC   UNKNOWN  8BDC            ; Unknown 8xxx instruction
$342    $6A2C   LD       VA, #2C         ; Load 44 into VA
$344    $316E   SE       V1, #6E         ; Skip if V1 == 110
$346    $C2FB   RND      V2, #FB         ; V2 = random & FB
$348    $0C0A   SYS      $C0A            ; System call to C0A
$34A    $B810   JP       V0, $810        ; Jump to V0 + 810
$34C    $44D1   SNE      V4, #D1         ; Skip if V4 != 209
$34E    $50A0   SE       V0, VA          ; Skip if V0 == VA
$350    $4BB7   SNE      VB, #B7         ; Skip if VB != 183
$352    $2D7D   CALL     $D7D            ; Call subroutine at D7D
$354    $2EE8   CALL     $EE8            ; Call subroutine at EE8
$356    $1BED   JP       $BED            ; Jump to BED
$358    $FCE2   UNKNOWN  FCE2            ; Unknown Fxxx instruction
$35A    $7C66   ADD      VC, #66         ; Add 102 to VC
$35C    $9834   UNKNOWN  $9834           ; Unknown 9xxx instruction
$35E    $167F   JP       $67F            ; Jump to 67F
$360    $9894   UNKNOWN  $9894           ; Unknown 9xxx instruction
$362    $A973   LD       I, $973         ; Load 973 into I
$364    $7C28   ADD      VC, #28         ; Add 40 to VC
$366    $F30B   UNKNOWN  F30B            ; Unknown Fxxx instruction
$368    $5CD6   UNKNOWN  $5CD6           ; Unknown 5xxx instruction
$36A    $48D6   SNE      V8, #D6         ; Skip if V8 != 214
$36C    $A5A7   LD       I, $5A7         ; Load 5A7 into I
$36E    $D48D   DRW      V4, V8, #D      ; Draw 13-byte sprite at V4, V8
$370    $2445   CALL     $445            ; Call subroutine at 445
$372    $6EF0   LD       VE, #F0         ; Load 240 into VE
$374    $1176   JP       $176            ; Jump to 176
$376    $F81A   UNKNOWN  F81A            ; Unknown Fxxx instruction
$378    $0353   SYS      $353            ; System call to 353
$37A    $2A8F   CALL     $A8F            ; Call subroutine at A8F
$37C    $40D5   SNE      V0, #D5         ; Skip if V0 != 213
$37E    $B1A8   JP       V0, $1A8        ; Jump to V0 + 1A8
$380    $B395   JP       V0, $395        ; Jump to V0 + 395
$382    $5883   UNKNOWN  $5883           ; Unknown 5xxx instruction
$384    $5A13   UNKNOWN  $5A13           ; Unknown 5xxx instruction
$386    $7238   ADD      V2, #38         ; Add 56 to V2
$388    $0B3B   SYS      $B3B            ; System call to B3B
$38A    $FCF2   UNKNOWN  FCF2            ; Unknown Fxxx instruction
$38C    $C545   RND      V5, #45         ; V5 = random & 45
$38E    $256C   CALL     $56C            ; Call subroutine at 56C
$390    $AF2F   LD       I, $F2F         ; Load F2F into I
$392    $3156   SE       V1, #56         ; Skip if V1 == 86
$394    $9554   UNKNOWN  $9554           ; Unknown 9xxx instruction
$396    $54B1   UNKNOWN  $54B1           ; Unknown 5xxx instruction
$398    $F5AC   UNKNOWN  F5AC            ; Unknown Fxxx instruction
$39A    $608C   LD       V0, #8C         ; Load 140 into V0
$39C    $E871   UNKNOWN  $E871           ; Unknown Exxx instruction
$39E    $7E5F   ADD      VE, #5F         ; Add 95 to VE
$3A0    $C20F   RND      V2, #0F         ; V2 = random & 0F
$3A2    $87E3   XOR      V7, VE          ; V7 ^= VE
$3A4    $7FF4   ADD      VF, #F4         ; Add 244 to VF
$3A6    $5884   UNKNOWN  $5884           ; Unknown 5xxx instruction
$3A8    $0F6C   SYS      $F6C            ; System call to F6C
$3AA    $C2D0   RND      V2, #D0         ; V2 = random & D0
$3AC    $DD40   DRW      VD, V4, #0      ; Draw 0-byte sprite at VD, V4
$3AE    $966E   UNKNOWN  $966E           ; Unknown 9xxx instruction
$3B0    $366B   SE       V6, #6B         ; Skip if V6 == 107
$3B2    $178F   JP       $78F            ; Jump to 78F
$3B4    $F2CB   UNKNOWN  F2CB            ; Unknown Fxxx instruction
$3B6    $1CEB   JP       $CEB            ; Jump to CEB
$3B8    $30FF   SE       V0, #FF         ; Skip if V0 == 255
$3BA    $9CFB   UNKNOWN  $9CFB           ; Unknown 9xxx instruction
$3BC    $35ED   SE       V5, #ED         ; Skip if V5 == 237
$3BE    $CEB6   RND      VE, #B6         ; VE = random & B6
$3C0    $3C1E   SE       VC, #1E         ; Skip if VC == 30
$3C2    $4927   SNE      V9, #27         ; Skip if V9 != 39
$3C4    $F37E   UNKNOWN  F37E            ; Unknown Fxxx instruction
$3C6    $0F1B   SYS      $F1B            ; System call to F1B
$3C8    $D5C6   DRW      V5, VC, #6      ; Draw 6-byte sprite at V5, VC
$3CA    $9ECB   UNKNOWN  $9ECB           ; Unknown 9xxx instruction
$3CC    $E5CA   UNKNOWN  $E5CA           ; Unknown Exxx instruction
$3CE    $C79C   RND      V7, #9C         ; V7 = random & 9C
$3D0    $E735   UNKNOWN  $E735           ; Unknown Exxx instruction
$3D2    $2D74   CALL     $D74            ; Call subroutine at D74
$3D4    $97AD   UNKNOWN  $97AD           ; Unknown 9xxx instruction
$3D6    $E88D   UNKNOWN  $E88D           ; Unknown Exxx instruction
$3D8    $81F4   ADD      V1, VF          ; V1 += VF, VF = carry
$3DA    $23F2   CALL     $3F2            ; Call subroutine at 3F2
$3DC    $035B   SYS      $35B            ; System call to 35B
$3DE    $E65C   UNKNOWN  $E65C           ; Unknown Exxx instruction
$3E0    $0A05   SYS      $A05            ; System call to A05
$3E2    $DA3F   DRW      VA, V3, #F      ; Draw 15-byte sprite at VA, V3
$3E4    $2667   CALL     $667            ; Call subroutine at 667
$3E6    $E1E4   UNKNOWN  $E1E4           ; Unknown Exxx instruction
$3E8    $0DD2   SYS      $DD2            ; System call to DD2
$3EA    $59C0   SE       V9, VC          ; Skip if V9 == VC
$3EC    $4291   SNE      V2, #91         ; Skip if V2 != 145
$3EE    $DA7F   DRW      VA, V7, #F      ; Draw 15-byte sprite at VA, V7
$3F0    $484F   SNE      V8, #4F         ; Skip if V8 != 79
$3F2    $5492   UNKNOWN  $5492           ; Unknown 5xxx instruction
$3F4    $99B6   UNKNOWN  $99B6           ; Unknown 9xxx instruction
$3F6    $2B68   CALL     $B68            ; Call subroutine at B68
$3F8    $5768   UNKNOWN  $5768           ; Unknown 5xxx instruction
$3FA    $E7D0   UNKNOWN  $E7D0           ; Unknown Exxx instruction
$3FC    $AC49   LD       I, $C49         ; Load C49 into I
$3FE    $5E4A   UNKNOWN  $5E4A           ; Unknown 5xxx instruction
$400    $0AF9   SYS      $AF9            ; System call to AF9
$402    $5B35   UNKNOWN  $5B35           ; Unknown 5xxx instruction
$404    $24DB   CALL     $4DB            ; Call subroutine at 4DB
$406    $DDD8   DRW      VD, VD, #8      ; Draw 8-byte sprite at VD, VD
$408    $0F0D   SYS      $F0D            ; System call to F0D
$40A    $A69E   LD       I, $69E         ; Load 69E into I
$40C    $C722   RND      V7, #22         ; V7 = random & 22
$40E    $9C4C   UNKNOWN  $9C4C           ; Unknown 9xxx instruction
$410    $E9A5   UNKNOWN  $E9A5           ; Unknown Exxx instruction
$412    $09F9   SYS      $9F9            ; System call to 9F9
$414    $3C72   SE       VC, #72         ; Skip if VC == 114
$416    $A2C0   LD       I, $2C0         ; Load 2C0 into I
$418    $5C88   UNKNOWN  $5C88           ; Unknown 5xxx instruction
$41A    $6D43   LD       VD, #43         ; Load 67 into VD
$41C    $F831   UNKNOWN  F831            ; Unknown Fxxx instruction
$41E    $B559   JP       V0, $559        ; Jump to V0 + 559
$420    $638C   LD       V3, #8C         ; Load 140 into V3
$422    $F6AD   UNKNOWN  F6AD            ; Unknown Fxxx instruction
$424    $132F   JP       $32F            ; Jump to 32F
$426    $7035   ADD      V0, #35         ; Add 53 to V0
$428    $56E0   SE       V6, VE          ; Skip if V6 == VE
$42A    $43B9   SNE      V3, #B9         ; Skip if V3 != 185
$42C    $5B1D   UNKNOWN  $5B1D           ; Unknown 5xxx instruction
$42E    $F8BC   UNKNOWN  F8BC            ; Unknown Fxxx instruction
$430    $0F7D   SYS      $F7D            ; System call to F7D
$432    $0F1C   SYS      $F1C            ; System call to F1C
$434    $BBC8   JP       V0, $BC8        ; Jump to V0 + BC8
$436    $2B2F   CALL     $B2F            ; Call subroutine at B2F
$438    $4E74   SNE      VE, #74         ; Skip if VE != 116
$43A    $80E6   SHR      V0              ; V0 >>= 1, VF = LSB
$43C    $6BDA   LD       VB, #DA         ; Load 218 into VB
$43E    $1DB4   JP       $DB4            ; Jump to DB4
$440    $D7F4   DRW      V7, VF, #4      ; Draw 4-byte sprite at V7, VF
$442    $00EC   SYS      $0EC            ; System call to 0EC
$444    $1C98   JP       $C98            ; Jump to C98
$446    $C140   RND      V1, #40         ; V1 = random & 40
$448    $BA60   JP       V0, $A60        ; Jump to V0 + A60
$44A    $48D0   SNE      V8, #D0         ; Skip if V8 != 208
$44C    $D37B   DRW      V3, V7, #B      ; Draw 11-byte sprite at V3, V7
$44E    $A229   LD       I, $229         ; Load 229 into I
$450    $59E0   SE       V9, VE          ; Skip if V9 == VE
$452    $8DA9   UNKNOWN  8DA9            ; Unknown 8xxx instruction
$454    $6634   LD       V6, #34         ; Load 52 into V6
$456    $E6F7   UNKNOWN  $E6F7           ; Unknown Exxx instruction
$458    $0B68   SYS      $B68            ; System call to B68
$45A    $540F   UNKNOWN  $540F           ; Unknown 5xxx instruction
$45C    $36FD   SE       V6, #FD         ; Skip if V6 == 253
$45E    $695E   LD       V9, #5E         ; Load 94 into V9
$460    $1843   JP       $843            ; Jump to 843
$462    $92D1   UNKNOWN  $92D1           ; Unknown 9xxx instruction
$464    $88C2   AND      V8, VC          ; V8 &= VC
$466    $8B64   ADD      VB, V6          ; VB += V6, VF = carry
$468    $3614   SE       V6, #14         ; Skip if V6 == 20
$46A    $8BD3   XOR      VB, VD          ; VB ^= VD
$46C    $49AB   SNE      V9, #AB         ; Skip if V9 != 171
$46E    $0253   SYS      $253            ; System call to 253
$470    $87C7   SUBN     V7, VC          ; V7 = VC - V7, VF = !borrow
$472    $FBBA   UNKNOWN  FBBA            ; Unknown Fxxx instruction
$474    $56B7   UNKNOWN  $56B7           ; Unknown 5xxx instruction
$476    $79B9   ADD      V9, #B9         ; Add 185 to V9
$478    $AF43   LD       I, $F43         ; Load F43 into I
$47A    $606E   LD       V0, #6E         ; Load 110 into V0
$47C    $4637   SNE      V6, #37         ; Skip if V6 != 55
$47E    $1EDE   JP       $EDE            ; Jump to EDE
$480    $BDAD   JP       V0, $DAD        ; Jump to V0 + DAD
$482    $5F45   UNKNOWN  $5F45           ; Unknown 5xxx instruction
$484    $B727   JP       V0, $727        ; Jump to V0 + 727
$486    $20B5   CALL     $0B5            ; Call subroutine at 0B5
$488    $8622   AND      V6, V2          ; V6 &= V2
$48A    $8C71   OR       VC, V7          ; VC |= V7
$48C    $A1A8   LD       I, $1A8         ; Load 1A8 into I
$48E    $5D1D   UNKNOWN  $5D1D           ; Unknown 5xxx instruction
$490    $74CD   ADD      V4, #CD         ; Add 205 to V4
$492    $B5D2   JP       V0, $5D2        ; Jump to V0 + 5D2
$494    $E296   UNKNOWN  $E296           ; Unknown Exxx instruction
$496    $8852   AND      V8, V5          ; V8 &= V5
$498    $0E84   SYS      $E84            ; System call to E84
$49A    $196E   JP       $96E            ; Jump to 96E
$49C    $345E   SE       V4, #5E         ; Skip if V4 == 94
$49E    $10D9   JP       $0D9            ; Jump to 0D9
$4A0    $88FD   UNKNOWN  88FD            ; Unknown 8xxx instruction
$4A2    $38CC   SE       V8, #CC         ; Skip if V8 == 204
$4A4    $8CFA   UNKNOWN  8CFA            ; Unknown 8xxx instruction
$4A6    $8F55   SUB      VF, V5          ; VF -= V5, VF = !borrow
$4A8    $ADF4   LD       I, $DF4         ; Load DF4 into I
$4AA    $D88A   DRW      V8, V8, #A      ; Draw 10-byte sprite at V8, V8
$4AC    $3CD5   SE       VC, #D5         ; Skip if VC == 213
$4AE    $D4C2   DRW      V4, VC, #2      ; Draw 2-byte sprite at V4, VC
$4B0    $AEB6   LD       I, $EB6         ; Load EB6 into I
$4B2    $DB5E   DRW      VB, V5, #E      ; Draw 14-byte sprite at VB, V5
$4B4    $D522   DRW      V5, V2, #2      ; Draw 2-byte sprite at V5, V2
$4B6    $EDAE   UNKNOWN  $EDAE           ; Unknown Exxx instruction
$4B8    $3639   SE       V6, #39         ; Skip if V6 == 57
$4BA    $8547   SUBN     V5, V4          ; V5 = V4 - V5, VF = !borrow
$4BC    $F8F9   UNKNOWN  F8F9            ; Unknown Fxxx instruction
$4BE    $04FD   SYS      $4FD            ; System call to 4FD
$4C0    $AFD1   LD       I, $FD1         ; Load FD1 into I
$4C2    $5EF7   UNKNOWN  $5EF7           ; Unknown 5xxx instruction
$4C4    $8E2A   UNKNOWN  8E2A            ; Unknown 8xxx instruction
$4C6    $D091   DRW      V0, V9, #1      ; Draw 1-byte sprite at V0, V9
$4C8    $DDAE   DRW      VD, VA, #E      ; Draw 14-byte sprite at VD, VA
$4CA    $49D7   SNE      V9, #D7         ; Skip if V9 != 215
$4CC    $DD0E   DRW      VD, V0, #E      ; Draw 14-byte sprite at VD, V0
$4CE    $6EC8   LD       VE, #C8         ; Load 200 into VE
$4D0    $B8F1   JP       V0, $8F1        ; Jump to V0 + 8F1
$4D2    $C48E   RND      V4, #8E         ; V4 = random & 8E
$4D4    $1EE3   JP       $EE3            ; Jump to EE3
$4D6    $0A64   SYS      $A64            ; System call to A64
$4D8    $2088   CALL     $088            ; Call subroutine at 088
$4DA    $B58E   JP       V0, $58E        ; Jump to V0 + 58E
$4DC    $4FFD   SNE      VF, #FD         ; Skip if VF != 253
$4DE    $FF40   UNKNOWN  FF40            ; Unknown Fxxx instruction
$4E0    $0CEB   SYS      $CEB            ; System call to CEB
$4E2    $B938   JP       V0, $938        ; Jump to V0 + 938
$4E4    $F35D   UNKNOWN  F35D            ; Unknown Fxxx instruction
$4E6    $D7AA   DRW      V7, VA, #A      ; Draw 10-byte sprite at V7, VA
$4E8    $7A69   ADD      VA, #69         ; Add 105 to VA
$4EA    $BBD6   JP       V0, $BD6        ; Jump to V0 + BD6
$4EC    $B871   JP       V0, $871        ; Jump to V0 + 871
$4EE    $E11D   UNKNOWN  $E11D           ; Unknown Exxx instruction
$4F0    $6C4F   LD       VC, #4F         ; Load 79 into VC
$4F2    $738E   ADD      V3, #8E         ; Add 142 to V3
$4F4    $76B1   ADD      V6, #B1         ; Add 177 to V6
$4F6    $4126   SNE      V1, #26         ; Skip if V1 != 38
$4F8    $94AF   UNKNOWN  $94AF           ; Unknown 9xxx instruction
$4FA    $D87E   DRW      V8, V7, #E      ; Draw 14-byte sprite at V8, V7
$4FC    $00B8   SYS      $0B8            ; System call to 0B8
$4FE    $F65E   UNKNOWN  F65E            ; Unknown Fxxx instruction
$500    $D5D5   DRW      V5, VD, #5      ; Draw 5-byte sprite at V5, VD
$502    $B21E   JP       V0, $21E        ; Jump to V0 + 21E
$504    $5920   SE       V9, V2          ; Skip if V9 == V2
$506    $F978   UNKNOWN  F978            ; Unknown Fxxx instruction
$508    $998A   UNKNOWN  $998A           ; Unknown 9xxx instruction
$50A    $A747   LD       I, $747         ; Load 747 into I
$50C    $75DA   ADD      V5, #DA         ; Add 218 to V5
$50E    $8D73   XOR      VD, V7          ; VD ^= V7
$510    $5A3D   UNKNOWN  $5A3D           ; Unknown 5xxx instruction
$512    $D93F   DRW      V9, V3, #F      ; Draw 15-byte sprite at V9, V3
$514    $5428   UNKNOWN  $5428           ; Unknown 5xxx instruction
$516    $890E   SHL      V9              ; V9 <<= 1, VF = MSB
$518    $5F82   UNKNOWN  $5F82           ; Unknown 5xxx instruction
$51A    $9031   UNKNOWN  $9031           ; Unknown 9xxx instruction
$51C    $5B74   UNKNOWN  $5B74           ; Unknown 5xxx instruction
$51E    $5605   UNKNOWN  $5605           ; Unknown 5xxx instruction
$520    $7B30   ADD      VB, #30         ; Add 48 to VB
$522    $ABFD   LD       I, $BFD         ; Load BFD into I
$524    $21E9   CALL     $1E9            ; Call subroutine at 1E9
$526    $6A5C   LD       VA, #5C         ; Load 92 into VA
$528    $E9F0   UNKNOWN  $E9F0           ; Unknown Exxx instruction
$52A    $12C3   JP       $2C3            ; Jump to 2C3
$52C    $4711   SNE      V7, #11         ; Skip if V7 != 17
$52E    $7555   ADD      V5, #55         ; Add 85 to V5
$530    $EEE3   UNKNOWN  $EEE3           ; Unknown Exxx instruction
$532    $A38A   LD       I, $38A         ; Load 38A into I
$534    $FA82   UNKNOWN  FA82            ; Unknown Fxxx instruction
$536    $A733   LD       I, $733         ; Load 733 into I
$538    $817C   UNKNOWN  817C            ; Unknown 8xxx instruction
$53A    $30C8   SE       V0, #C8         ; Skip if V0 == 200
$53C    $4FD4   SNE      VF, #D4         ; Skip if VF != 212
$53E    $AA2E   LD       I, $A2E         ; Load A2E into I
$540    $4579   SNE      V5, #79         ; Skip if V5 != 121
$542    $14C7   JP       $4C7            ; Jump to 4C7
$544    $ADA0   LD       I, $DA0         ; Load DA0 into I
$546    $72A3   ADD      V2, #A3         ; Add 163 to V2
$548    $A15E   LD       I, $15E         ; Load 15E into I
$54A    $D9A7   DRW      V9, VA, #7      ; Draw 7-byte sprite at V9, VA
$54C    $9C20   SNE      VC, V2          ; Skip if VC != V2
$54E    $1B06   JP       $B06            ; Jump to B06
$550    $83BE   SHL      V3              ; V3 <<= 1, VF = MSB
$552    $4921   SNE      V9, #21         ; Skip if V9 != 33
$554    $755F   ADD      V5, #5F         ; Add 95 to V5
$556    $6529   LD       V5, #29         ; Load 41 into V5
$558    $84E5   SUB      V4, VE          ; V4 -= VE, VF = !borrow
$55A    $906C   UNKNOWN  $906C           ; Unknown 9xxx instruction
$55C    $E082   UNKNOWN  $E082           ; Unknown Exxx instruction
$55E    $9DED   UNKNOWN  $9DED           ; Unknown 9xxx instruction
$560    $0CA9   SYS      $CA9            ; System call to CA9
$562    $D7F8   DRW      V7, VF, #8      ; Draw 8-byte sprite at V7, VF
$564    $9A1E   UNKNOWN  $9A1E           ; Unknown 9xxx instruction
$566    $E666   UNKNOWN  $E666           ; Unknown Exxx instruction
$568    $FDD6   UNKNOWN  FDD6            ; Unknown Fxxx instruction
$56A    $0C93   SYS      $C93            ; System call to C93
$56C    $781C   ADD      V8, #1C         ; Add 28 to V8
$56E    $7231   ADD      V2, #31         ; Add 49 to V2
$570    $C2C4   RND      V2, #C4         ; V2 = random & C4
$572    $3601   SE       V6, #01         ; Skip if V6 == 1
$574    $A371   LD       I, $371         ; Load 371 into I
$576    $F12C   UNKNOWN  F12C            ; Unknown Fxxx instruction
$578    $A54E   LD       I, $54E         ; Load 54E into I
$57A    $D124   DRW      V1, V2, #4      ; Draw 4-byte sprite at V1, V2
$57C    $7CDF   ADD      VC, #DF         ; Add 223 to VC
$57E    $E39B   UNKNOWN  $E39B           ; Unknown Exxx instruction
$580    $7F6C   ADD      VF, #6C         ; Add 108 to VF
$582    $5C2A   UNKNOWN  $5C2A           ; Unknown 5xxx instruction
$584    $56C9   UNKNOWN  $56C9           ; Unknown 5xxx instruction
$586    $684D   LD       V8, #4D         ; Load 77 into V8
$588    $0954   SYS      $954            ; System call to 954
$58A    $BC1B   JP       V0, $C1B        ; Jump to V0 + C1B
$58C    $55E8   UNKNOWN  $55E8           ; Unknown 5xxx instruction
$58E    $D20A   DRW      V2, V0, #A      ; Draw 10-byte sprite at V2, V0
$590    $C904   RND      V9, #04         ; V9 = random & 04
$592    $9105   UNKNOWN  $9105           ; Unknown 9xxx instruction
$594    $5FA3   UNKNOWN  $5FA3           ; Unknown 5xxx instruction
$596    $4B2F   SNE      VB, #2F         ; Skip if VB != 47
$598    $8341   OR       V3, V4          ; V3 |= V4
$59A    $1FF3   JP       $FF3            ; Jump to FF3
$59C    $C6F8   RND      V6, #F8         ; V6 = random & F8
$59E    $C371   RND      V3, #71         ; V3 = random & 71
$5A0    $DEFB   DRW      VE, VF, #B      ; Draw 11-byte sprite at VE, VF
$5A2    $1606   JP       $606            ; Jump to 606
$5A4    $92EC   UNKNOWN  $92EC           ; Unknown 9xxx instruction
$5A6    $3DA8   SE       VD, #A8         ; Skip if VD == 168
$5A8    $8EF5   SUB      VE, VF          ; VE -= VF, VF = !borrow
$5AA    $9559   UNKNOWN  $9559           ; Unknown 9xxx instruction
$5AC    $B0A1   JP       V0, $0A1        ; Jump to V0 + 0A1
$5AE    $76A3   ADD      V6, #A3         ; Add 163 to V6
$5B0    $D5D7   DRW      V5, VD, #7      ; Draw 7-byte sprite at V5, VD
$5B2    $A40D   LD       I, $40D         ; Load 40D into I
$5B4    $63A2   LD       V3, #A2         ; Load 162 into V3
$5B6    $CF95   RND      VF, #95         ; VF = random & 95
$5B8    $0CC6   SYS      $CC6            ; System call to CC6
$5BA    $B895   JP       V0, $895        ; Jump to V0 + 895
$5BC    $2193   CALL     $193            ; Call subroutine at 193
$5BE    $832D   UNKNOWN  832D            ; Unknown 8xxx instruction
$5C0    $F3FF   UNKNOWN  F3FF            ; Unknown Fxxx instruction
$5C2    $E11F   UNKNOWN  $E11F           ; Unknown Exxx instruction
$5C4    $F15F   UNKNOWN  F15F            ; Unknown Fxxx instruction
$5C6    $1D6F   JP       $D6F            ; Jump to D6F
$5C8    $C904   RND      V9, #04         ; V9 = random & 04
$5CA    $802E   SHL      V0              ; V0 <<= 1, VF = MSB
$5CC    $5B95   UNKNOWN  $5B95           ; Unknown 5xxx instruction
$5CE    $DF9C   DRW      VF, V9, #C      ; Draw 12-byte sprite at VF, V9
$5D0    $9013   UNKNOWN  $9013           ; Unknown 9xxx instruction
$5D2    $A109   LD       I, $109         ; Load 109 into I
$5D4    $EB39   UNKNOWN  $EB39           ; Unknown Exxx instruction
$5D6    $868A   UNKNOWN  868A            ; Unknown 8xxx instruction
$5D8    $5C80   SE       VC, V8          ; Skip if VC == V8
$5DA    $0F3C   SYS      $F3C            ; System call to F3C
$5DC    $89CC   UNKNOWN  89CC            ; Unknown 8xxx instruction
$5DE    $80EB   UNKNOWN  80EB            ; Unknown 8xxx instruction
$5E0    $C256   RND      V2, #56         ; V2 = random & 56
$5E2    $7281   ADD      V2, #81         ; Add 129 to V2
$5E4    $CFE6   RND      VF, #E6         ; VF = random & E6
$5E6    $A6AF   LD       I, $6AF         ; Load 6AF into I
$5E8    $C308   RND      V3, #08         ; V3 = random & 08
$5EA    $669C   LD       V6, #9C         ; Load 156 into V6
$5EC    $A185   LD       I, $185         ; Load 185 into I
$5EE    $218C   CALL     $18C            ; Call subroutine at 18C
$5F0    $5E30   SE       VE, V3          ; Skip if VE == V3
$5F2    $39EF   SE       V9, #EF         ; Skip if V9 == 239
$5F4    $DC6B   DRW      VC, V6, #B      ; Draw 11-byte sprite at VC, V6
$5F6    $C587   RND      V5, #87         ; V5 = random & 87
$5F8    $68EA   LD       V8, #EA         ; Load 234 into V8
$5FA    $2EE6   CALL     $EE6            ; Call subroutine at EE6
$5FC    $57ED   UNKNOWN  $57ED           ; Unknown 5xxx instruction
$5FE    $6569   LD       V5, #69         ; Load 105 into V5
$600    $FB48   UNKNOWN  FB48            ; Unknown Fxxx instruction
$602    $34FC   SE       V4, #FC         ; Skip if V4 == 252
$604    $1857   JP       $857            ; Jump to 857
$606    $7526   ADD      V5, #26         ; Add 38 to V5
$608    $AC83   LD       I, $C83         ; Load C83 into I
$60A    $A52C   LD       I, $52C         ; Load 52C into I
$60C    $EA29   UNKNOWN  $EA29           ; Unknown Exxx instruction
$60E    $0020   SYS      $020            ; System call to 020
$610    $B973   JP       V0, $973        ; Jump to V0 + 973
$612    $60A7   LD       V0, #A7         ; Load 167 into V0
$614    $A606   LD       I, $606         ; Load 606 into I
$616    $74FA   ADD      V4, #FA         ; Add 250 to V4
$618    $7293   ADD      V2, #93         ; Add 147 to V2
$61A    $6F34   LD       VF, #34         ; Load 52 into VF
$61C    $BDCD   JP       V0, $DCD        ; Jump to V0 + DCD
$61E    $B999   JP       V0, $999        ; Jump to V0 + 999
$620    $80A8   UNKNOWN  80A8            ; Unknown 8xxx instruction
$622    $5C4B   UNKNOWN  $5C4B           ; Unknown 5xxx instruction
$624    $2308   CALL     $308            ; Call subroutine at 308
$626    $C1C5   RND      V1, #C5         ; V1 = random & C5
$628    $5B84   UNKNOWN  $5B84           ; Unknown 5xxx instruction
$62A    $EF11   UNKNOWN  $EF11           ; Unknown Exxx instruction
$62C    $AE92   LD       I, $E92         ; Load E92 into I
$62E    $BC88   JP       V0, $C88        ; Jump to V0 + C88
$630    $4B01   SNE      VB, #01         ; Skip if VB != 1
$632    $369B   SE       V6, #9B         ; Skip if V6 == 155
$634    $CA0A   RND      VA, #0A         ; VA = random & 0A
$636    $3D2A   SE       VD, #2A         ; Skip if VD == 42
$638    $9A23   UNKNOWN  $9A23           ; Unknown 9xxx instruction
$63A    $EBC6   UNKNOWN  $EBC6           ; Unknown Exxx instruction
$63C    $9AB5   UNKNOWN  $9AB5           ; Unknown 9xxx instruction
$63E    $3AED   SE       VA, #ED         ; Skip if VA == 237
$640    $3B6E   SE       VB, #6E         ; Skip if VB == 110
$642    $467D   SNE      V6, #7D         ; Skip if V6 != 125
$644    $13D3   JP       $3D3            ; Jump to 3D3
$646    $89A2   AND      V9, VA          ; V9 &= VA
$648    $6838   LD       V8, #38         ; Load 56 into V8
$64A    $13FF   JP       $3FF            ; Jump to 3FF
$64C    $0F97   SYS      $F97            ; System call to F97
$64E    $3066   SE       V0, #66         ; Skip if V0 == 102
$650    $8475   SUB      V4, V7          ; V4 -= V7, VF = !borrow
$652    $3BDD   SE       VB, #DD         ; Skip if VB == 221
$654    $09E9   SYS      $9E9            ; System call to 9E9
$656    $BDCE   JP       V0, $DCE        ; Jump to V0 + DCE
$658    $0180   SYS      $180            ; System call to 180
$65A    $0036   SYS      $036            ; System call to 036
$65C    $3E34   SE       VE, #34         ; Skip if VE == 52
$65E    $56D8   UNKNOWN  $56D8           ; Unknown 5xxx instruction
$660    $3C03   SE       VC, #03         ; Skip if VC == 3
$662    $7FB8   ADD      VF, #B8         ; Add 184 to VF
$664    $3EC6   SE       VE, #C6         ; Skip if VE == 198
$666    $6F78   LD       VF, #78         ; Load 120 into VF
$668    $CCB2   RND      VC, #B2         ; VC = random & B2
$66A    $3DC3   SE       VD, #C3         ; Skip if VD == 195
$66C    $F85B   UNKNOWN  F85B            ; Unknown Fxxx instruction
$66E    $6DC8   LD       VD, #C8         ; Load 200 into VD
$670    $576F   UNKNOWN  $576F           ; Unknown 5xxx instruction
$672    $9C44   UNKNOWN  $9C44           ; Unknown 9xxx instruction
$674    $5820   SE       V8, V2          ; Skip if V8 == V2
$676    $F647   UNKNOWN  F647            ; Unknown Fxxx instruction
$678    $FA64   UNKNOWN  FA64            ; Unknown Fxxx instruction
$67A    $E6B4   UNKNOWN  $E6B4           ; Unknown Exxx instruction
$67C    $7AD0   ADD      VA, #D0         ; Add 208 to VA
$67E    $5705   UNKNOWN  $5705           ; Unknown 5xxx instruction
$680    $024D   SYS      $24D            ; System call to 24D
$682    $E3E5   UNKNOWN  $E3E5           ; Unknown Exxx instruction
$684    $76C5   ADD      V6, #C5         ; Add 197 to V6
$686    $55D7   UNKNOWN  $55D7           ; Unknown 5xxx instruction
$688    $892E   SHL      V9              ; V9 <<= 1, VF = MSB
$68A    $8466   SHR      V4              ; V4 >>= 1, VF = LSB
$68C    $7EB5   ADD      VE, #B5         ; Add 181 to VE
$68E    $70DA   ADD      V0, #DA         ; Add 218 to V0
$690    $D0D2   DRW      V0, VD, #2      ; Draw 2-byte sprite at V0, VD
$692    $2B5F   CALL     $B5F            ; Call subroutine at B5F
$694    $90C5   UNKNOWN  $90C5           ; Unknown 9xxx instruction
$696    $F550   UNKNOWN  F550            ; Unknown Fxxx instruction
$698    $9287   UNKNOWN  $9287           ; Unknown 9xxx instruction
$69A    $CEF6   RND      VE, #F6         ; VE = random & F6
$69C    $82DF   UNKNOWN  82DF            ; Unknown 8xxx instruction
$69E    $9C68   UNKNOWN  $9C68           ; Unknown 9xxx instruction
$6A0    $FA32   UNKNOWN  FA32            ; Unknown Fxxx instruction
$6A2    $888C   UNKNOWN  888C            ; Unknown 8xxx instruction
$6A4    $BEDC   JP       V0, $EDC        ; Jump to V0 + EDC
$6A6    $03CF   SYS      $3CF            ; System call to 3CF
$6A8    $50E5   UNKNOWN  $50E5           ; Unknown 5xxx instruction
$6AA    $9857   UNKNOWN  $9857           ; Unknown 9xxx instruction
$6AC    $4073   SNE      V0, #73         ; Skip if V0 != 115
$6AE    $C3FC   RND      V3, #FC         ; V3 = random & FC
$6B0    $742E   ADD      V4, #2E         ; Add 46 to V4
$6B2    $D655   DRW      V6, V5, #5      ; Draw 5-byte sprite at V6, V5
$6B4    $332B   SE       V3, #2B         ; Skip if V3 == 43
$6B6    $8B68   UNKNOWN  8B68            ; Unknown 8xxx instruction
$6B8    $29CC   CALL     $9CC            ; Call subroutine at 9CC
$6BA    $DF44   DRW      VF, V4, #4      ; Draw 4-byte sprite at VF, V4
$6BC    $365B   SE       V6, #5B         ; Skip if V6 == 91
$6BE    $6FAA   LD       VF, #AA         ; Load 170 into VF
$6C0    $8A31   OR       VA, V3          ; VA |= V3
$6C2    $A769   LD       I, $769         ; Load 769 into I
$6C4    $9A83   UNKNOWN  $9A83           ; Unknown 9xxx instruction
$6C6    $EC37   UNKNOWN  $EC37           ; Unknown Exxx instruction
$6C8    $F11A   UNKNOWN  F11A            ; Unknown Fxxx instruction
$6CA    $90F6   UNKNOWN  $90F6           ; Unknown 9xxx instruction
$6CC    $E8E8   UNKNOWN  $E8E8           ; Unknown Exxx instruction
$6CE    $94E2   UNKNOWN  $94E2           ; Unknown 9xxx instruction
$6D0    $54F6   UNKNOWN  $54F6           ; Unknown 5xxx instruction
$6D2    $88AD   UNKNOWN  88AD            ; Unknown 8xxx instruction
$6D4    $6D1E   LD       VD, #1E         ; Load 30 into VD
$6D6    $0422   SYS      $422            ; System call to 422
$6D8    $6F5F   LD       VF, #5F         ; Load 95 into VF
$6DA    $56EE   UNKNOWN  $56EE           ; Unknown 5xxx instruction
$6DC    $07A3   SYS      $7A3            ; System call to 7A3
$6DE    $16A3   JP       $6A3            ; Jump to 6A3
$6E0    $B682   JP       V0, $682        ; Jump to V0 + 682
$6E2    $4367   SNE      V3, #67         ; Skip if V3 != 103
$6E4    $CD2A   RND      VD, #2A         ; VD = random & 2A
$6E6    $A866   LD       I, $866         ; Load 866 into I
$6E8    $7307   ADD      V3, #07         ; Add 7 to V3
$6EA    $941B   UNKNOWN  $941B           ; Unknown 9xxx instruction
$6EC    $9336   UNKNOWN  $9336           ; Unknown 9xxx instruction
$6EE    $9883   UNKNOWN  $9883           ; Unknown 9xxx instruction
$6F0    $F2ED   UNKNOWN  F2ED            ; Unknown Fxxx instruction
$6F2    $BC91   JP       V0, $C91        ; Jump to V0 + C91
$6F4    $1503   JP       $503            ; Jump to 503
$6F6    $C817   RND      V8, #17         ; V8 = random & 17
$6F8    $0F9B   SYS      $F9B            ; System call to F9B
$6FA    $1AE6   JP       $AE6            ; Jump to AE6
$6FC    $B80B   JP       V0, $80B        ; Jump to V0 + 80B
$6FE    $0F01   SYS      $F01            ; System call to F01
$700    $6312   LD       V3, #12         ; Load 18 into V3
$702    $B0FE   JP       V0, $0FE        ; Jump to V0 + 0FE
$704    $F8B3   UNKNOWN  F8B3            ; Unknown Fxxx instruction
$706    $9FBE   UNKNOWN  $9FBE           ; Unknown 9xxx instruction
$708    $D7DD   DRW      V7, VD, #D      ; Draw 13-byte sprite at V7, VD
$70A    $57C9   UNKNOWN  $57C9           ; Unknown 5xxx instruction
$70C    $4A55   SNE      VA, #55         ; Skip if VA != 85
$70E    $ABAC   LD       I, $BAC         ; Load BAC into I
$710    $79D9   ADD      V9, #D9         ; Add 217 to V9
$712    $2958   CALL     $958            ; Call subroutine at 958
$714    $8E3A   UNKNOWN  8E3A            ; Unknown 8xxx instruction
$716    $CE99   RND      VE, #99         ; VE = random & 99
$718    $0BC8   SYS      $BC8            ; System call to BC8
$71A    $BC78   JP       V0, $C78        ; Jump to V0 + C78
$71C    $4859   SNE      V8, #59         ; Skip if V8 != 89
$71E    $B37D   JP       V0, $37D        ; Jump to V0 + 37D
$720    $C528   RND      V5, #28         ; V5 = random & 28
$722    $A70A   LD       I, $70A         ; Load 70A into I
$724    $9FB0   SNE      VF, VB          ; Skip if VF != VB
$726    $C18E   RND      V1, #8E         ; V1 = random & 8E
$728    $2EFC   CALL     $EFC            ; Call subroutine at EFC
$72A    $2A19   CALL     $A19            ; Call subroutine at A19
$72C    $0E32   SYS      $E32            ; System call to E32
$72E    $B1F4   JP       V0, $1F4        ; Jump to V0 + 1F4
$730    $6BBB   LD       VB, #BB         ; Load 187 into VB
$732    $A1B6   LD       I, $1B6         ; Load 1B6 into I
$734    $0A45   SYS      $A45            ; System call to A45
$736    $4952   SNE      V9, #52         ; Skip if V9 != 82
$738    $E05E   UNKNOWN  $E05E           ; Unknown Exxx instruction
$73A    $ADD7   LD       I, $DD7         ; Load DD7 into I
$73C    $7EB7   ADD      VE, #B7         ; Add 183 to VE
$73E    $97D0   SNE      V7, VD          ; Skip if V7 != VD
$740    $7677   ADD      V6, #77         ; Add 119 to V6
$742    $2F6F   CALL     $F6F            ; Call subroutine at F6F
$744    $9A33   UNKNOWN  $9A33           ; Unknown 9xxx instruction
$746    $015B   SYS      $15B            ; System call to 15B
$748    $1A5D   JP       $A5D            ; Jump to A5D
$74A    $EE23   UNKNOWN  $EE23           ; Unknown Exxx instruction
$74C    $64ED   LD       V4, #ED         ; Load 237 into V4
$74E    $3CA7   SE       VC, #A7         ; Skip if VC == 167
$750    $591E   UNKNOWN  $591E           ; Unknown 5xxx instruction
$752    $FFD7   UNKNOWN  FFD7            ; Unknown Fxxx instruction
$754    $2DD6   CALL     $DD6            ; Call subroutine at DD6
$756    $BE2A   JP       V0, $E2A        ; Jump to V0 + E2A
$758    $3183   SE       V1, #83         ; Skip if V1 == 131
$75A    $DF65   DRW      VF, V6, #5      ; Draw 5-byte sprite at VF, V6
$75C    $3595   SE       V5, #95         ; Skip if V5 == 149
$75E    $BE68   JP       V0, $E68        ; Jump to V0 + E68
$760    $0D4E   SYS      $D4E            ; System call to D4E
$762    $3C48   SE       VC, #48         ; Skip if VC == 72
$764    $B01E   JP       V0, $01E        ; Jump to V0 + 01E
$766    $D086   DRW      V0, V8, #6      ; Draw 6-byte sprite at V0, V8
$768    $0FEB   SYS      $FEB            ; System call to FEB
$76A    $2A58   CALL     $A58            ; Call subroutine at A58
$76C    $A5A9   LD       I, $5A9         ; Load 5A9 into I
$76E    $39B1   SE       V9, #B1         ; Skip if V9 == 177
$770    $C841   RND      V8, #41         ; V8 = random & 41
$772    $0F01   SYS      $F01            ; System call to F01
$774    $9757   UNKNOWN  $9757           ; Unknown 9xxx instruction
$776    $0092   SYS      $092            ; System call to 092
$778    $45D3   SNE      V5, #D3         ; Skip if V5 != 211
$77A    $C287   RND      V2, #87         ; V2 = random & 87
$77C    $D010   DRW      V0, V1, #0      ; Draw 0-byte sprite at V0, V1
$77E    $401E   SNE      V0, #1E         ; Skip if V0 != 30
$780    $1615   JP       $615            ; Jump to 615
$782    $AA80   LD       I, $A80         ; Load A80 into I
$784    $169F   JP       $69F            ; Jump to 69F
$786    $36A6   SE       V6, #A6         ; Skip if V6 == 166
$788    $5A13   UNKNOWN  $5A13           ; Unknown 5xxx instruction
$78A    $F187   UNKNOWN  F187            ; Unknown Fxxx instruction
$78C    $199A   JP       $99A            ; Jump to 99A
$78E    $35CD   SE       V5, #CD         ; Skip if V5 == 205
$790    $3E1A   SE       VE, #1A         ; Skip if VE == 26
$792    $F46B   UNKNOWN  F46B            ; Unknown Fxxx instruction
$794    $4B61   SNE      VB, #61         ; Skip if VB != 97
$796    $9365   UNKNOWN  $9365           ; Unknown 9xxx instruction
$798    $A509   LD       I, $509         ; Load 509 into I
$79A    $4441   SNE      V4, #41         ; Skip if V4 != 65
$79C    $FDB6   UNKNOWN  FDB6            ; Unknown Fxxx instruction
$79E    $E3BC   UNKNOWN  $E3BC           ; Unknown Exxx instruction
$7A0    $FA73   UNKNOWN  FA73            ; Unknown Fxxx instruction
$7A2    $205C   CALL     $05C            ; Call subroutine at 05C
$7A4    $1772   JP       $772            ; Jump to 772
$7A6    $387E   SE       V8, #7E         ; Skip if V8 == 126
$7A8    $8809   UNKNOWN  8809            ; Unknown 8xxx instruction
$7AA    $E6A0   UNKNOWN  $E6A0           ; Unknown Exxx instruction
$7AC    $463A   SNE      V6, #3A         ; Skip if V6 != 58
$7AE    $E5BF   UNKNOWN  $E5BF           ; Unknown Exxx instruction
$7B0    $5FA2   UNKNOWN  $5FA2           ; Unknown 5xxx instruction
$7B2    $A01F   LD       I, $01F         ; Load 01F into I
$7B4    $FF42   UNKNOWN  FF42            ; Unknown Fxxx instruction
$7B6    $737D   ADD      V3, #7D         ; Add 125 to V3
$7B8    $710D   ADD      V1, #0D         ; Add 13 to V1
$7BA    $8888   UNKNOWN  8888            ; Unknown 8xxx instruction
$7BC    $3F71   SE       VF, #71         ; Skip if VF == 113
$7BE    $3EDC   SE       VE, #DC         ; Skip if VE == 220
$7C0    $2F56   CALL     $F56            ; Call subroutine at F56
$7C2    $7DC3   ADD      VD, #C3         ; Add 195 to VD
$7C4    $9322   UNKNOWN  $9322           ; Unknown 9xxx instruction
$7C6    $3BA7   SE       VB, #A7         ; Skip if VB == 167
$7C8    $CF37   RND      VF, #37         ; VF = random & 37
$7CA    $B987   JP       V0, $987        ; Jump to V0 + 987
$7CC    $C570   RND      V5, #70         ; V5 = random & 70
$7CE    $3C6D   SE       VC, #6D         ; Skip if VC == 109
$7D0    $66AC   LD       V6, #AC         ; Load 172 into V6
$7D2    $E867   UNKNOWN  $E867           ; Unknown Exxx instruction
$7D4    $106B   JP       $06B            ; Jump to 06B
$7D6    $AF5F   LD       I, $F5F         ; Load F5F into I
$7D8    $C483   RND      V4, #83         ; V4 = random & 83
$7DA    $4E07   SNE      VE, #07         ; Skip if VE != 7
$7DC    $9831   UNKNOWN  $9831           ; Unknown 9xxx instruction
$7DE    $04B9   SYS      $4B9            ; System call to 4B9
$7E0    $0E5C   SYS      $E5C            ; System call to E5C
$7E2    $D551   DRW      V5, V5, #1      ; Draw 1-byte sprite at V5, V5
$7E4    $8B55   SUB      VB, V5          ; VB -= V5, VF = !borrow
$7E6    $2347   CALL     $347            ; Call subroutine at 347
$7E8    $B94C   JP       V0, $94C        ; Jump to V0 + 94C
$7EA    $E6FE   UNKNOWN  $E6FE           ; Unknown Exxx instruction
$7EC    $E23C   UNKNOWN  $E23C           ; Unknown Exxx instruction
$7EE    $A1C0   LD       I, $1C0         ; Load 1C0 into I
$7F0    $75BD   ADD      V5, #BD         ; Add 189 to V5
$7F2    $0BD1   SYS      $BD1            ; System call to BD1
$7F4    $4265   SNE      V2, #65         ; Skip if V2 != 101
$7F6    $FC1A   UNKNOWN  FC1A            ; Unknown Fxxx instruction
$7F8    $F86C   UNKNOWN  F86C            ; Unknown Fxxx instruction
$7FA    $1D4E   JP       $D4E            ; Jump to D4E
$7FC    $D690   DRW      V6, V9, #0      ; Draw 0-byte sprite at V6, V9
$7FE    $DE29   DRW      VE, V2, #9      ; Draw 9-byte sprite at VE, V2
$800    $5CBF   UNKNOWN  $5CBF           ; Unknown 5xxx instruction
$802    $EC89   UNKNOWN  $EC89           ; Unknown Exxx instruction
$804    $6999   LD       V9, #99         ; Load 153 into V9
$806    $60D1   LD       V0, #D1         ; Load 209 into V0
$808    $2B5C   CALL     $B5C            ; Call subroutine at B5C
$80A    $03E4   SYS      $3E4            ; System call to 3E4
$80C    $E5D2   UNKNOWN  $E5D2           ; Unknown Exxx instruction
$80E    $8AA8   UNKNOWN  8AA8            ; Unknown 8xxx instruction
$810    $1631   JP       $631            ; Jump to 631
$812    $4A0C   SNE      VA, #0C         ; Skip if VA != 12
$814    $D420   DRW      V4, V2, #0      ; Draw 0-byte sprite at V4, V2
$816    $18FA   JP       $8FA            ; Jump to 8FA
$818    $0A98   SYS      $A98            ; System call to A98
$81A    $C0DB   RND      V0, #DB         ; V0 = random & DB
$81C    $8DCF   UNKNOWN  8DCF            ; Unknown 8xxx instruction
$81E    $2C34   CALL     $C34            ; Call subroutine at C34
$820    $FFB7   UNKNOWN  FFB7            ; Unknown Fxxx instruction
$822    $141E   JP       $41E            ; Jump to 41E
$824    $B207   JP       V0, $207        ; Jump to V0 + 207
$826    $1FE4   JP       $FE4            ; Jump to FE4
$828    $B2C8   JP       V0, $2C8        ; Jump to V0 + 2C8
$82A    $B1E2   JP       V0, $1E2        ; Jump to V0 + 1E2
$82C    $36FF   SE       V6, #FF         ; Skip if V6 == 255
$82E    $BF96   JP       V0, $F96        ; Jump to V0 + F96
$830    $2911   CALL     $911            ; Call subroutine at 911
$832    $9A0F   UNKNOWN  $9A0F           ; Unknown 9xxx instruction
$834    $AA1F   LD       I, $A1F         ; Load A1F into I
$836    $9AE9   UNKNOWN  $9AE9           ; Unknown 9xxx instruction
$838    $58AE   UNKNOWN  $58AE           ; Unknown 5xxx instruction
$83A    $7237   ADD      V2, #37         ; Add 55 to V2
$83C    $FDB3   UNKNOWN  FDB3            ; Unknown Fxxx instruction
$83E    $70D3   ADD      V0, #D3         ; Add 211 to V0
$840    $C47A   RND      V4, #7A         ; V4 = random & 7A
$842    $D077   DRW      V0, V7, #7      ; Draw 7-byte sprite at V0, V7
$844    $B032   JP       V0, $032        ; Jump to V0 + 032
$846    $307E   SE       V0, #7E         ; Skip if V0 == 126
$848    $4965   SNE      V9, #65         ; Skip if V9 != 101
$84A    $EA42   UNKNOWN  $EA42           ; Unknown Exxx instruction
$84C    $6BCC   LD       VB, #CC         ; Load 204 into VB
$84E    $E598   UNKNOWN  $E598           ; Unknown Exxx instruction
$850    $04E6   SYS      $4E6            ; System call to 4E6
$852    $B428   JP       V0, $428        ; Jump to V0 + 428
$854    $338C   SE       V3, #8C         ; Skip if V3 == 140
$856    $27C4   CALL     $7C4            ; Call subroutine at 7C4
$858    $17AB   JP       $7AB            ; Jump to 7AB
$85A    $97C3   UNKNOWN  $97C3           ; Unknown 9xxx instruction
$85C    $8E62   AND      VE, V6          ; VE &= V6
$85E    $A7F8   LD       I, $7F8         ; Load 7F8 into I
$860    $B704   JP       V0, $704        ; Jump to V0 + 704
$862    $84FE   SHL      V4              ; V4 <<= 1, VF = MSB
$864    $AB38   LD       I, $B38         ; Load B38 into I
$866    $8B7E   SHL      VB              ; VB <<= 1, VF = MSB
$868    $48C2   SNE      V8, #C2         ; Skip if V8 != 194
$86A    $14C2   JP       $4C2            ; Jump to 4C2
$86C    $79E5   ADD      V9, #E5         ; Add 229 to V9
$86E    $83E8   UNKNOWN  83E8            ; Unknown 8xxx instruction
$870    $FB84   UNKNOWN  FB84            ; Unknown Fxxx instruction
$872    $ACCF   LD       I, $CCF         ; Load CCF into I
$874    $6728   LD       V7, #28         ; Load 40 into V7
$876    $DE97   DRW      VE, V9, #7      ; Draw 7-byte sprite at VE, V9
$878    $27EB   CALL     $7EB            ; Call subroutine at 7EB
$87A    $48BE   SNE      V8, #BE         ; Skip if V8 != 190
$87C    $EE2B   UNKNOWN  $EE2B           ; Unknown Exxx instruction
$87E    $A309   LD       I, $309         ; Load 309 into I
$880    $03B2   SYS      $3B2            ; System call to 3B2
$882    $6A20   LD       VA, #20         ; Load 32 into VA
$884    $3859   SE       V8, #59         ; Skip if V8 == 89
$886    $F1AC   UNKNOWN  F1AC            ; Unknown Fxxx instruction
$888    $A56B   LD       I, $56B         ; Load 56B into I
$88A    $C950   RND      V9, #50         ; V9 = random & 50
$88C    $F4D5   UNKNOWN  F4D5            ; Unknown Fxxx instruction
$88E    $9A4E   UNKNOWN  $9A4E           ; Unknown 9xxx instruction
$890    $E826   UNKNOWN  $E826           ; Unknown Exxx instruction
$892    $45D5   SNE      V5, #D5         ; Skip if V5 != 213
$894    $A4B3   LD       I, $4B3         ; Load 4B3 into I
$896    $7576   ADD      V5, #76         ; Add 118 to V5
$898    $3D78   SE       VD, #78         ; Skip if VD == 120
$89A    $E158   UNKNOWN  $E158           ; Unknown Exxx instruction
$89C    $5BD5   UNKNOWN  $5BD5           ; Unknown 5xxx instruction
$89E    $2CF2   CALL     $CF2            ; Call subroutine at CF2
$8A0    $6A8F   LD       VA, #8F         ; Load 143 into VA
$8A2    $4D13   SNE      VD, #13         ; Skip if VD != 19
$8A4    $F380   UNKNOWN  F380            ; Unknown Fxxx instruction
$8A6    $323D   SE       V2, #3D         ; Skip if V2 == 61
$8A8    $CC1D   RND      VC, #1D         ; VC = random & 1D
$8AA    $5BD4   UNKNOWN  $5BD4           ; Unknown 5xxx instruction
$8AC    $4FFC   SNE      VF, #FC         ; Skip if VF != 252
$8AE    $529D   UNKNOWN  $529D           ; Unknown 5xxx instruction
$8B0    $94A0   SNE      V4, VA          ; Skip if V4 != VA
$8B2    $BCC4   JP       V0, $CC4        ; Jump to V0 + CC4
$8B4    $0857   SYS      $857            ; System call to 857
$8B6    $5E0A   UNKNOWN  $5E0A           ; Unknown 5xxx instruction
$8B8    $8831   OR       V8, V3          ; V8 |= V3
$8BA    $D966   DRW      V9, V6, #6      ; Draw 6-byte sprite at V9, V6
$8BC    $79B4   ADD      V9, #B4         ; Add 180 to V9
$8BE    $767F   ADD      V6, #7F         ; Add 127 to V6
$8C0    $F70A   LD       V7, K           ; Wait for key press, store in V7
$8C2    $CB83   RND      VB, #83         ; VB = random & 83
$8C4    $3347   SE       V3, #47         ; Skip if V3 == 71
$8C6    $0344   SYS      $344            ; System call to 344
$8C8    $0819   SYS      $819            ; System call to 819
$8CA    $8250   LD       V2, V5          ; V2 = V5
$8CC    $AA6F   LD       I, $A6F         ; Load A6F into I
$8CE    $268A   CALL     $68A            ; Call subroutine at 68A
$8D0    $59D7   UNKNOWN  $59D7           ; Unknown 5xxx instruction
$8D2    $6B7D   LD       VB, #7D         ; Load 125 into VB
$8D4    $8F69   UNKNOWN  8F69            ; Unknown 8xxx instruction
$8D6    $B7B7   JP       V0, $7B7        ; Jump to V0 + 7B7
$8D8    $4437   SNE      V4, #37         ; Skip if V4 != 55
$8DA    $FF2E   UNKNOWN  FF2E            ; Unknown Fxxx instruction
$8DC    $5E6C   UNKNOWN  $5E6C           ; Unknown 5xxx instruction
$8DE    $6841   LD       V8, #41         ; Load 65 into V8
$8E0    $347D   SE       V4, #7D         ; Skip if V4 == 125
$8E2    $3EEF   SE       VE, #EF         ; Skip if VE == 239
$8E4    $9080   SNE      V0, V8          ; Skip if V0 != V8
$8E6    $9BDC   UNKNOWN  $9BDC           ; Unknown 9xxx instruction
$8E8    $475F   SNE      V7, #5F         ; Skip if V7 != 95
$8EA    $FDCE   UNKNOWN  FDCE            ; Unknown Fxxx instruction
$8EC    $A844   LD       I, $844         ; Load 844 into I
$8EE    $E2CE   UNKNOWN  $E2CE           ; Unknown Exxx instruction
$8F0    $F56A   UNKNOWN  F56A            ; Unknown Fxxx instruction
$8F2    $E926   UNKNOWN  $E926           ; Unknown Exxx instruction
$8F4    $BB9D   JP       V0, $B9D        ; Jump to V0 + B9D
$8F6    $ECF0   UNKNOWN  $ECF0           ; Unknown Exxx instruction
$8F8    $5590   SE       V5, V9          ; Skip if V5 == V9
$8FA    $08FD   SYS      $8FD            ; System call to 8FD
$8FC    $7BF7   ADD      VB, #F7         ; Add 247 to VB
$8FE    $8751   OR       V7, V5          ; V7 |= V5
$900    $AC5C   LD       I, $C5C         ; Load C5C into I
$902    $D525   DRW      V5, V2, #5      ; Draw 5-byte sprite at V5, V2
$904    $B5B0   JP       V0, $5B0        ; Jump to V0 + 5B0
$906    $AE2A   LD       I, $E2A         ; Load E2A into I
$908    $F15E   UNKNOWN  F15E            ; Unknown Fxxx instruction
$90A    $3C1B   SE       VC, #1B         ; Skip if VC == 27
$90C    $8FD1   OR       VF, VD          ; VF |= VD
$90E    $E30B   UNKNOWN  $E30B           ; Unknown Exxx instruction
$910    $E257   UNKNOWN  $E257           ; Unknown Exxx instruction
$912    $1D2C   JP       $D2C            ; Jump to D2C
$914    $3800   SE       V8, #00         ; Skip if V8 == 0
$916    $A8D4   LD       I, $8D4         ; Load 8D4 into I
$918    $9A66   UNKNOWN  $9A66           ; Unknown 9xxx instruction
$91A    $3202   SE       V2, #02         ; Skip if V2 == 2
$91C    $3435   SE       V4, #35         ; Skip if V4 == 53
$91E    $A07B   LD       I, $07B         ; Load 07B into I
$920    $8B86   SHR      VB              ; VB >>= 1, VF = LSB
$922    $9F15   UNKNOWN  $9F15           ; Unknown 9xxx instruction
$924    $C8FD   RND      V8, #FD         ; V8 = random & FD
$926    $4F92   SNE      VF, #92         ; Skip if VF != 146
$928    $8008   UNKNOWN  8008            ; Unknown 8xxx instruction
$92A    $B299   JP       V0, $299        ; Jump to V0 + 299
$92C    $EC57   UNKNOWN  $EC57           ; Unknown Exxx instruction
$92E    $28DF   CALL     $8DF            ; Call subroutine at 8DF
$930    $07E1   SYS      $7E1            ; System call to 7E1
$932    $0882   SYS      $882            ; System call to 882
$934    $174C   JP       $74C            ; Jump to 74C
$936    $5859   UNKNOWN  $5859           ; Unknown 5xxx instruction
$938    $FAEB   UNKNOWN  FAEB            ; Unknown Fxxx instruction
$93A    $1095   JP       $095            ; Jump to 095
$93C    $AB08   LD       I, $B08         ; Load B08 into I
$93E    $BC97   JP       V0, $C97        ; Jump to V0 + C97
$940    $CE35   RND      VE, #35         ; VE = random & 35
$942    $2817   CALL     $817            ; Call subroutine at 817
$944    $D01D   DRW      V0, V1, #D      ; Draw 13-byte sprite at V0, V1
$946    $8A8E   SHL      VA              ; VA <<= 1, VF = MSB
$948    $C02B   RND      V0, #2B         ; V0 = random & 2B
$94A    $A86A   LD       I, $86A         ; Load 86A into I
$94C    $D540   DRW      V5, V4, #0      ; Draw 0-byte sprite at V5, V4
$94E    $54BD   UNKNOWN  $54BD           ; Unknown 5xxx instruction
$950    $6EC5   LD       VE, #C5         ; Load 197 into VE
$952    $C46F   RND      V4, #6F         ; V4 = random & 6F
$954    $0EBF   SYS      $EBF            ; System call to EBF
$956    $2742   CALL     $742            ; Call subroutine at 742
$958    $3ED5   SE       VE, #D5         ; Skip if VE == 213
$95A    $FC95   UNKNOWN  FC95            ; Unknown Fxxx instruction
$95C    $7B15   ADD      VB, #15         ; Add 21 to VB
$95E    $A4BF   LD       I, $4BF         ; Load 4BF into I
$960    $10E9   JP       $0E9            ; Jump to 0E9
$962    $A14B   LD       I, $14B         ; Load 14B into I
$964    $21F5   CALL     $1F5            ; Call subroutine at 1F5
$966    $298A   CALL     $98A            ; Call subroutine at 98A
$968    $23F5   CALL     $3F5            ; Call subroutine at 3F5
$96A    $8AC0   LD       VA, VC          ; VA = VC
$96C    $A7E2   LD       I, $7E2         ; Load 7E2 into I
$96E    $E521   UNKNOWN  $E521           ; Unknown Exxx instruction
$970    $F975   UNKNOWN  F975            ; Unknown Fxxx instruction
$972    $14FA   JP       $4FA            ; Jump to 4FA
$974    $0644   SYS      $644            ; System call to 644
$976    $A162   LD       I, $162         ; Load 162 into I
$978    $4C14   SNE      VC, #14         ; Skip if VC != 20
$97A    $0BC7   SYS      $BC7            ; System call to BC7
$97C    $B01C   JP       V0, $01C        ; Jump to V0 + 01C
$97E    $861D   UNKNOWN  861D            ; Unknown 8xxx instruction
$980    $C543   RND      V5, #43         ; V5 = random & 43
$982    $8C0B   UNKNOWN  8C0B            ; Unknown 8xxx instruction
$984    $1613   JP       $613            ; Jump to 613
$986    $F5E4   UNKNOWN  F5E4            ; Unknown Fxxx instruction
$988    $AB6E   LD       I, $B6E         ; Load B6E into I
$98A    $639D   LD       V3, #9D         ; Load 157 into V3
$98C    $B860   JP       V0, $860        ; Jump to V0 + 860
$98E    $8348   UNKNOWN  8348            ; Unknown 8xxx instruction
$990    $65FF   LD       V5, #FF         ; Load 255 into V5
$992    $CA16   RND      VA, #16         ; VA = random & 16
$994    $446F   SNE      V4, #6F         ; Skip if V4 != 111
$996    $D8B1   DRW      V8, VB, #1      ; Draw 1-byte sprite at V8, VB
$998    $CA05   RND      VA, #05         ; VA = random & 05
$99A    $CC86   RND      VC, #86         ; VC = random & 86
$99C    $A2C9   LD       I, $2C9         ; Load 2C9 into I
$99E    $C579   RND      V5, #79         ; V5 = random & 79
$9A0    $5EF6   UNKNOWN  $5EF6           ; Unknown 5xxx instruction
$9A2    $78CE   ADD      V8, #CE         ; Add 206 to V8
$9A4    $B9D9   JP       V0, $9D9        ; Jump to V0 + 9D9
$9A6    $D9E0   DRW      V9, VE, #0      ; Draw 0-byte sprite at V9, VE
$9A8    $4F12   SNE      VF, #12         ; Skip if VF != 18
$9AA    $6D63   LD       VD, #63         ; Load 99 into VD
$9AC    $DF11   DRW      VF, V1, #1      ; Draw 1-byte sprite at VF, V1
$9AE    $D3BF   DRW      V3, VB, #F      ; Draw 15-byte sprite at V3, VB
$9B0    $9253   UNKNOWN  $9253           ; Unknown 9xxx instruction
$9B2    $60C9   LD       V0, #C9         ; Load 201 into V0
$9B4    $BEE9   JP       V0, $EE9        ; Jump to V0 + EE9
$9B6    $9528   UNKNOWN  $9528           ; Unknown 9xxx instruction
$9B8    $4474   SNE      V4, #74         ; Skip if V4 != 116
$9BA    $73B8   ADD      V3, #B8         ; Add 184 to V3
$9BC    $2F79   CALL     $F79            ; Call subroutine at F79
$9BE    $57D8   UNKNOWN  $57D8           ; Unknown 5xxx instruction
$9C0    $234B   CALL     $34B            ; Call subroutine at 34B
$9C2    $BEC0   JP       V0, $EC0        ; Jump to V0 + EC0
$9C4    $DE66   DRW      VE, V6, #6      ; Draw 6-byte sprite at VE, V6
$9C6    $70BD   ADD      V0, #BD         ; Add 189 to V0
$9C8    $E155   UNKNOWN  $E155           ; Unknown Exxx instruction
$9CA    $54DA   UNKNOWN  $54DA           ; Unknown 5xxx instruction
$9CC    $D059   DRW      V0, V5, #9      ; Draw 9-byte sprite at V0, V5
$9CE    $781A   ADD      V8, #1A         ; Add 26 to V8
$9D0    $8680   LD       V6, V8          ; V6 = V8
$9D2    $1305   JP       $305            ; Jump to 305
$9D4    $BCEA   JP       V0, $CEA        ; Jump to V0 + CEA
$9D6    $2264   CALL     $264            ; Call subroutine at 264
$9D8    $E11C   UNKNOWN  $E11C           ; Unknown Exxx instruction
$9DA    $CC16   RND      VC, #16         ; VC = random & 16
$9DC    $8A8F   UNKNOWN  8A8F            ; Unknown 8xxx instruction
$9DE    $B62C   JP       V0, $62C        ; Jump to V0 + 62C
$9E0    $A3FC   LD       I, $3FC         ; Load 3FC into I
$9E2    $1EFD   JP       $EFD            ; Jump to EFD
$9E4    $94A7   UNKNOWN  $94A7           ; Unknown 9xxx instruction
$9E6    $29B7   CALL     $9B7            ; Call subroutine at 9B7
$9E8    $8A16   SHR      VA              ; VA >>= 1, VF = LSB
$9EA    $832A   UNKNOWN  832A            ; Unknown 8xxx instruction
$9EC    $B624   JP       V0, $624        ; Jump to V0 + 624
$9EE    $A312   LD       I, $312         ; Load 312 into I
$9F0    $9A3D   UNKNOWN  $9A3D           ; Unknown 9xxx instruction
$9F2    $8533   XOR      V5, V3          ; V5 ^= V3
$9F4    $DD1C   DRW      VD, V1, #C      ; Draw 12-byte sprite at VD, V1
$9F6    $1CEF   JP       $CEF            ; Jump to CEF
$9F8    $EB06   UNKNOWN  $EB06           ; Unknown Exxx instruction
$9FA    $D495   DRW      V4, V9, #5      ; Draw 5-byte sprite at V4, V9
$9FC    $6096   LD       V0, #96         ; Load 150 into V0
$9FE    $2C43   CALL     $C43            ; Call subroutine at C43
$A00    $95FF   UNKNOWN  $95FF           ; Unknown 9xxx instruction
$A02    $0551   SYS      $551            ; System call to 551
$A04    $9D61   UNKNOWN  $9D61           ; Unknown 9xxx instruction
$A06    $4444   SNE      V4, #44         ; Skip if V4 != 68
$A08    $4CB8   SNE      VC, #B8         ; Skip if VC != 184
$A0A    $E072   UNKNOWN  $E072           ; Unknown Exxx instruction
$A0C    $097E   SYS      $97E            ; System call to 97E
$A0E    $535C   UNKNOWN  $535C           ; Unknown 5xxx instruction
$A10    $7572   ADD      V5, #72         ; Add 114 to V5
$A12    $0AD5   SYS      $AD5            ; System call to AD5
$A14    $9963   UNKNOWN  $9963           ; Unknown 9xxx instruction
$A16    $2E1B   CALL     $E1B            ; Call subroutine at E1B
$A18    $23FE   CALL     $3FE            ; Call subroutine at 3FE
$A1A    $9557   UNKNOWN  $9557           ; Unknown 9xxx instruction
$A1C    $7CA3   ADD      VC, #A3         ; Add 163 to VC
$A1E    $0F53   SYS      $F53            ; System call to F53
$A20    $C755   RND      V7, #55         ; V7 = random & 55
$A22    $9CEB   UNKNOWN  $9CEB           ; Unknown 9xxx instruction
$A24    $9E22   UNKNOWN  $9E22           ; Unknown 9xxx instruction
$A26    $8F31   OR       VF, V3          ; VF |= V3
$A28    $1DF8   JP       $DF8            ; Jump to DF8
$A2A    $FEB3   UNKNOWN  FEB3            ; Unknown Fxxx instruction
$A2C    $25F4   CALL     $5F4            ; Call subroutine at 5F4
$A2E    $2202   CALL     $202            ; Call subroutine at 202
$A30    $B2C9   JP       V0, $2C9        ; Jump to V0 + 2C9
$A32    $6284   LD       V2, #84         ; Load 132 into V2
$A34    $7B3E   ADD      VB, #3E         ; Add 62 to VB
$A36    $234A   CALL     $34A            ; Call subroutine at 34A
$A38    $47C2   SNE      V7, #C2         ; Skip if V7 != 194
$A3A    $CE8E   RND      VE, #8E         ; VE = random & 8E
$A3C    $0B44   SYS      $B44            ; System call to B44
$A3E    $9344   UNKNOWN  $9344           ; Unknown 9xxx instruction
$A40    $7063   ADD      V0, #63         ; Add 99 to V0
$A42    $1FCB   JP       $FCB            ; Jump to FCB
$A44    $E0BC   UNKNOWN  $E0BC           ; Unknown Exxx instruction
$A46    $9DFB   UNKNOWN  $9DFB           ; Unknown 9xxx instruction
$A48    $A638   LD       I, $638         ; Load 638 into I
$A4A    $BE24   JP       V0, $E24        ; Jump to V0 + E24
$A4C    $E856   UNKNOWN  $E856           ; Unknown Exxx instruction
$A4E    $01D7   SYS      $1D7            ; System call to 1D7
$A50    $3437   SE       V4, #37         ; Skip if V4 == 55
$A52    $BF82   JP       V0, $F82        ; Jump to V0 + F82
$A54    $7BDE   ADD      VB, #DE         ; Add 222 to VB
$A56    $DF1C   DRW      VF, V1, #C      ; Draw 12-byte sprite at VF, V1
$A58    $918C   UNKNOWN  $918C           ; Unknown 9xxx instruction
$A5A    $60C4   LD       V0, #C4         ; Load 196 into V0
$A5C    $4387   SNE      V3, #87         ; Skip if V3 != 135
$A5E    $BFD6   JP       V0, $FD6        ; Jump to V0 + FD6
$A60    $8347   SUBN     V3, V4          ; V3 = V4 - V3, VF = !borrow
$A62    $682F   LD       V8, #2F         ; Load 47 into V8
$A64    $08CD   SYS      $8CD            ; System call to 8CD
$A66    $6F2B   LD       VF, #2B         ; Load 43 into VF
$A68    $7165   ADD      V1, #65         ; Add 101 to V1
$A6A    $8EF4   ADD      VE, VF          ; VE += VF, VF = carry
$A6C    $3B0B   SE       VB, #0B         ; Skip if VB == 11
$A6E    $C692   RND      V6, #92         ; V6 = random & 92
$A70    $E9D9   UNKNOWN  $E9D9           ; Unknown Exxx instruction
$A72    $5668   UNKNOWN  $5668           ; Unknown 5xxx instruction
$A74    $2FDC   CALL     $FDC            ; Call subroutine at FDC
$A76    $ACCF   LD       I, $CCF         ; Load CCF into I
$A78    $714A   ADD      V1, #4A         ; Add 74 to V1
$A7A    $5701   UNKNOWN  $5701           ; Unknown 5xxx instruction
$A7C    $98BF   UNKNOWN  $98BF           ; Unknown 9xxx instruction
$A7E    $619C   LD       V1, #9C         ; Load 156 into V1
$A80    $34C8   SE       V4, #C8         ; Skip if V4 == 200
$A82    $0F07   SYS      $F07            ; System call to F07
$A84    $8848   UNKNOWN  8848            ; Unknown 8xxx instruction
$A86    $D55A   DRW      V5, V5, #A      ; Draw 10-byte sprite at V5, V5
$A88    $8114   ADD      V1, V1          ; V1 += V1, VF = carry
$A8A    $EACD   UNKNOWN  $EACD           ; Unknown Exxx instruction
$A8C    $CFF0   RND      VF, #F0         ; VF = random & F0
$A8E    $75A4   ADD      V5, #A4         ; Add 164 to V5
$A90    $F7F2   UNKNOWN  F7F2            ; Unknown Fxxx instruction
$A92    $D40E   DRW      V4, V0, #E      ; Draw 14-byte sprite at V4, V0
$A94    $1485   JP       $485            ; Jump to 485
$A96    $7C7A   ADD      VC, #7A         ; Add 122 to VC
$A98    $D88D   DRW      V8, V8, #D      ; Draw 13-byte sprite at V8, V8
$A9A    $B36C   JP       V0, $36C        ; Jump to V0 + 36C
$A9C    $CA16   RND      VA, #16         ; VA = random & 16
$A9E    $BBB8   JP       V0, $BB8        ; Jump to V0 + BB8
$AA0    $B7E2   JP       V0, $7E2        ; Jump to V0 + 7E2
$AA2    $9975   UNKNOWN  $9975           ; Unknown 9xxx instruction
$AA4    $37A3   SE       V7, #A3         ; Skip if V7 == 163
$AA6    $3B8C   SE       VB, #8C         ; Skip if VB == 140
$AA8    $2E54   CALL     $E54            ; Call subroutine at E54
$AAA    $1540   JP       $540            ; Jump to 540
$AAC    $1844   JP       $844            ; Jump to 844
$AAE    $3A33   SE       VA, #33         ; Skip if VA == 51
$AB0    $7463   ADD      V4, #63         ; Add 99 to V4
$AB2    $D273   DRW      V2, V7, #3      ; Draw 3-byte sprite at V2, V7
$AB4    $BAFC   JP       V0, $AFC        ; Jump to V0 + AFC
$AB6    $0ED8   SYS      $ED8            ; System call to ED8
$AB8    $146D   JP       $46D            ; Jump to 46D
$ABA    $5592   UNKNOWN  $5592           ; Unknown 5xxx instruction
$ABC    $5EA2   UNKNOWN  $5EA2           ; Unknown 5xxx instruction
$ABE    $2544   CALL     $544            ; Call subroutine at 544
$AC0    $3AA8   SE       VA, #A8         ; Skip if VA == 168
$AC2    $1321   JP       $321            ; Jump to 321
$AC4    $515C   UNKNOWN  $515C           ; Unknown 5xxx instruction
$AC6    $9018   UNKNOWN  $9018           ; Unknown 9xxx instruction
$AC8    $E112   UNKNOWN  $E112           ; Unknown Exxx instruction
$ACA    $16FF   JP       $6FF            ; Jump to 6FF
$ACC    $7759   ADD      V7, #59         ; Add 89 to V7
$ACE    $313B   SE       V1, #3B         ; Skip if V1 == 59
$AD0    $A8A4   LD       I, $8A4         ; Load 8A4 into I
$AD2    $0F5D   SYS      $F5D            ; System call to F5D
$AD4    $2365   CALL     $365            ; Call subroutine at 365
$AD6    $0874   SYS      $874            ; System call to 874
$AD8    $90B0   SNE      V0, VB          ; Skip if V0 != VB
$ADA    $0038   SYS      $038            ; System call to 038
$ADC    $695E   LD       V9, #5E         ; Load 94 into V9
$ADE    $7611   ADD      V6, #11         ; Add 17 to V6
$AE0    $D6EC   DRW      V6, VE, #C      ; Draw 12-byte sprite at V6, VE
$AE2    $7A14   ADD      VA, #14         ; Add 20 to VA
$AE4    $B4D8   JP       V0, $4D8        ; Jump to V0 + 4D8
$AE6    $45DD   SNE      V5, #DD         ; Skip if V5 != 221
$AE8    $9960   SNE      V9, V6          ; Skip if V9 != V6
$AEA    $2C32   CALL     $C32            ; Call subroutine at C32
$AEC    $05E9   SYS      $5E9            ; System call to 5E9
$AEE    $58B4   UNKNOWN  $58B4           ; Unknown 5xxx instruction
$AF0    $670D   LD       V7, #0D         ; Load 13 into V7
$AF2    $3BB1   SE       VB, #B1         ; Skip if VB == 177
$AF4    $E1E3   UNKNOWN  $E1E3           ; Unknown Exxx instruction
$AF6    $A5D2   LD       I, $5D2         ; Load 5D2 into I
$AF8    $DB8E   DRW      VB, V8, #E      ; Draw 14-byte sprite at VB, V8
$AFA    $105D   JP       $05D            ; Jump to 05D
$AFC    $ABED   LD       I, $BED         ; Load BED into I
$AFE    $7A5D   ADD      VA, #5D         ; Add 93 to VA
$B00    $8321   OR       V3, V2          ; V3 |= V2
$B02    $A0A2   LD       I, $0A2         ; Load 0A2 into I
$B04    $54BC   UNKNOWN  $54BC           ; Unknown 5xxx instruction
$B06    $0C9C   SYS      $C9C            ; System call to C9C
$B08    $F673   UNKNOWN  F673            ; Unknown Fxxx instruction
$B0A    $6557   LD       V5, #57         ; Load 87 into V5
$B0C    $6EBC   LD       VE, #BC         ; Load 188 into VE
$B0E    $173A   JP       $73A            ; Jump to 73A
$B10    $F104   UNKNOWN  F104            ; Unknown Fxxx instruction
$B12    $820B   UNKNOWN  820B            ; Unknown 8xxx instruction
$B14    $EF2A   UNKNOWN  $EF2A           ; Unknown Exxx instruction
$B16    $7128   ADD      V1, #28         ; Add 40 to V1
$B18    $0920   SYS      $920            ; System call to 920
$B1A    $8EE6   SHR      VE              ; VE >>= 1, VF = LSB
$B1C    $6FDB   LD       VF, #DB         ; Load 219 into VF
$B1E    $11A4   JP       $1A4            ; Jump to 1A4
$B20    $08E9   SYS      $8E9            ; System call to 8E9
$B22    $63DD   LD       V3, #DD         ; Load 221 into V3
$B24    $175C   JP       $75C            ; Jump to 75C
$B26    $7618   ADD      V6, #18         ; Add 24 to V6
$B28    $60AF   LD       V0, #AF         ; Load 175 into V0
$B2A    $4DC1   SNE      VD, #C1         ; Skip if VD != 193
$B2C    $5CC8   UNKNOWN  $5CC8           ; Unknown 5xxx instruction
$B2E    $C7BD   RND      V7, #BD         ; V7 = random & BD
$B30    $9ADA   UNKNOWN  $9ADA           ; Unknown 9xxx instruction
$B32    $3161   SE       V1, #61         ; Skip if V1 == 97
$B34    $BE08   JP       V0, $E08        ; Jump to V0 + E08
$B36    $3916   SE       V9, #16         ; Skip if V9 == 22
$B38    $C499   RND      V4, #99         ; V4 = random & 99
$B3A    $10C5   JP       $0C5            ; Jump to 0C5
$B3C    $E9C5   UNKNOWN  $E9C5           ; Unknown Exxx instruction
$B3E    $83B1   OR       V3, VB          ; V3 |= VB
$B40    $D377   DRW      V3, V7, #7      ; Draw 7-byte sprite at V3, V7
$B42    $C71A   RND      V7, #1A         ; V7 = random & 1A
$B44    $316D   SE       V1, #6D         ; Skip if V1 == 109
$B46    $1B0E   JP       $B0E            ; Jump to B0E
$B48    $38CA   SE       V8, #CA         ; Skip if V8 == 202
$B4A    $81F9   UNKNOWN  81F9            ; Unknown 8xxx instruction
$B4C    $E8B1   UNKNOWN  $E8B1           ; Unknown Exxx instruction
$B4E    $CA95   RND      VA, #95         ; VA = random & 95
$B50    $36F4   SE       V6, #F4         ; Skip if V6 == 244
$B52    $97AD   UNKNOWN  $97AD           ; Unknown 9xxx instruction
$B54    $F131   UNKNOWN  F131            ; Unknown Fxxx instruction
$B56    $2117   CALL     $117            ; Call subroutine at 117
$B58    $042C   SYS      $42C            ; System call to 42C
$B5A    $8144   ADD      V1, V4          ; V1 += V4, VF = carry
$B5C    $42B7   SNE      V2, #B7         ; Skip if V2 != 183
$B5E    $52C9   UNKNOWN  $52C9           ; Unknown 5xxx instruction
$B60    $73FE   ADD      V3, #FE         ; Add 254 to V3
$B62    $4FF4   SNE      VF, #F4         ; Skip if VF != 244
$B64    $AA78   LD       I, $A78         ; Load A78 into I
$B66    $A464   LD       I, $464         ; Load 464 into I
$B68    $607F   LD       V0, #7F         ; Load 127 into V0
$B6A    $A85F   LD       I, $85F         ; Load 85F into I
$B6C    $139F   JP       $39F            ; Jump to 39F
$B6E    $85F0   LD       V5, VF          ; V5 = VF
$B70    $913B   UNKNOWN  $913B           ; Unknown 9xxx instruction
$B72    $DA3F   DRW      VA, V3, #F      ; Draw 15-byte sprite at VA, V3
$B74    $D18A   DRW      V1, V8, #A      ; Draw 10-byte sprite at V1, V8
$B76    $7238   ADD      V2, #38         ; Add 56 to V2
$B78    $653E   LD       V5, #3E         ; Load 62 into V5
$B7A    $58FE   UNKNOWN  $58FE           ; Unknown 5xxx instruction
$B7C    $E7D4   UNKNOWN  $E7D4           ; Unknown Exxx instruction
$B7E    $4371   SNE      V3, #71         ; Skip if V3 != 113
$B80    $CECF   RND      VE, #CF         ; VE = random & CF
$B82    $CE0B   RND      VE, #0B         ; VE = random & 0B
$B84    $6749   LD       V7, #49         ; Load 73 into V7
$B86    $6232   LD       V2, #32         ; Load 50 into V2
$B88    $8541   OR       V5, V4          ; V5 |= V4
$B8A    $AE62   LD       I, $E62         ; Load E62 into I
$B8C    $17F9   JP       $7F9            ; Jump to 7F9
$B8E    $0F22   SYS      $F22            ; System call to F22
$B90    $C08F   RND      V0, #8F         ; V0 = random & 8F
$B92    $BEA2   JP       V0, $EA2        ; Jump to V0 + EA2
$B94    $7EB1   ADD      VE, #B1         ; Add 177 to VE
$B96    $FBD7   UNKNOWN  FBD7            ; Unknown Fxxx instruction
$B98    $3636   SE       V6, #36         ; Skip if V6 == 54
$B9A    $6676   LD       V6, #76         ; Load 118 into V6
$B9C    $BEEA   JP       V0, $EEA        ; Jump to V0 + EEA
$B9E    $E52F   UNKNOWN  $E52F           ; Unknown Exxx instruction
$BA0    $778C   ADD      V7, #8C         ; Add 140 to V7
$BA2    $5466   UNKNOWN  $5466           ; Unknown 5xxx instruction
$BA4    $67BF   LD       V7, #BF         ; Load 191 into V7
$BA6    $BD3B   JP       V0, $D3B        ; Jump to V0 + D3B
$BA8    $2741   CALL     $741            ; Call subroutine at 741
$BAA    $D3F6   DRW      V3, VF, #6      ; Draw 6-byte sprite at V3, VF
$BAC    $AB16   LD       I, $B16         ; Load B16 into I
$BAE    $DE5A   DRW      VE, V5, #A      ; Draw 10-byte sprite at VE, V5
$BB0    $99CC   UNKNOWN  $99CC           ; Unknown 9xxx instruction
$BB2    $04B8   SYS      $4B8            ; System call to 4B8
$BB4    $0CD2   SYS      $CD2            ; System call to CD2
$BB6    $7CE8   ADD      VC, #E8         ; Add 232 to VC
$BB8    $EA17   UNKNOWN  $EA17           ; Unknown Exxx instruction
$BBA    $B626   JP       V0, $626        ; Jump to V0 + 626
$BBC    $A217   LD       I, $217         ; Load 217 into I
$BBE    $4E24   SNE      VE, #24         ; Skip if VE != 36
$BC0    $C164   RND      V1, #64         ; V1 = random & 64
$BC2    $5EEC   UNKNOWN  $5EEC           ; Unknown 5xxx instruction
$BC4    $6B47   LD       VB, #47         ; Load 71 into VB
$BC6    $F47B   UNKNOWN  F47B            ; Unknown Fxxx instruction
$BC8    $CCB6   RND      VC, #B6         ; VC = random & B6
$BCA    $C033   RND      V0, #33         ; V0 = random & 33
$BCC    $F866   UNKNOWN  F866            ; Unknown Fxxx instruction
$BCE    $D07C   DRW      V0, V7, #C      ; Draw 12-byte sprite at V0, V7
$BD0    $A78E   LD       I, $78E         ; Load 78E into I
$BD2    $D93B   DRW      V9, V3, #B      ; Draw 11-byte sprite at V9, V3
$BD4    $A841   LD       I, $841         ; Load 841 into I
$BD6    $10E0   JP       $0E0            ; Jump to 0E0
$BD8    $F3E1   UNKNOWN  F3E1            ; Unknown Fxxx instruction
$BDA    $4F8D   SNE      VF, #8D         ; Skip if VF != 141
$BDC    $877B   UNKNOWN  877B            ; Unknown 8xxx instruction
$BDE    $2F71   CALL     $F71            ; Call subroutine at F71
$BE0    $9481   UNKNOWN  $9481           ; Unknown 9xxx instruction
$BE2    $8211   OR       V2, V1          ; V2 |= V1
$BE4    $2591   CALL     $591            ; Call subroutine at 591
$BE6    $DF1C   DRW      VF, V1, #C      ; Draw 12-byte sprite at VF, V1
$BE8    $0675   SYS      $675            ; System call to 675
$BEA    $8D84   ADD      VD, V8          ; VD += V8, VF = carry
$BEC    $112E   JP       $12E            ; Jump to 12E
$BEE    $56BE   UNKNOWN  $56BE           ; Unknown 5xxx instruction
$BF0    $4A2C   SNE      VA, #2C         ; Skip if VA != 44
$BF2    $8518   UNKNOWN  8518            ; Unknown 8xxx instruction
$BF4    $1A6A   JP       $A6A            ; Jump to A6A
$BF6    $0821   SYS      $821            ; System call to 821
$BF8    $6B53   LD       VB, #53         ; Load 83 into VB
$BFA    $A41E   LD       I, $41E         ; Load 41E into I
$BFC    $7718   ADD      V7, #18         ; Add 24 to V7
$BFE    $8931   OR       V9, V3          ; V9 |= V3
$C00    $B0CE   JP       V0, $0CE        ; Jump to V0 + 0CE
$C02    $002D   SYS      $02D            ; System call to 02D
$C04    $C893   RND      V8, #93         ; V8 = random & 93
$C06    $4590   SNE      V5, #90         ; Skip if V5 != 144
$C08    $C417   RND      V4, #17         ; V4 = random & 17
$C0A    $886C   UNKNOWN  886C            ; Unknown 8xxx instruction
$C0C    $A329   LD       I, $329         ; Load 329 into I
$C0E    $C054   RND      V0, #54         ; V0 = random & 54
$C10    $2EE2   CALL     $EE2            ; Call subroutine at EE2
$C12    $854A   UNKNOWN  854A            ; Unknown 8xxx instruction
$C14    $78E5   ADD      V8, #E5         ; Add 229 to V8
$C16    $9F3A   UNKNOWN  $9F3A           ; Unknown 9xxx instruction
$C18    $6305   LD       V3, #05         ; Load 5 into V3
$C1A    $7DCD   ADD      VD, #CD         ; Add 205 to VD
$C1C    $5830   SE       V8, V3          ; Skip if V8 == V3
$C1E    $9B56   UNKNOWN  $9B56           ; Unknown 9xxx instruction
$C20    $AFEE   LD       I, $FEE         ; Load FEE into I
$C22    $EB18   UNKNOWN  $EB18           ; Unknown Exxx instruction
$C24    $EB62   UNKNOWN  $EB62           ; Unknown Exxx instruction
$C26    $8E76   SHR      VE              ; VE >>= 1, VF = LSB
$C28    $7349   ADD      V3, #49         ; Add 73 to V3
$C2A    $8CF9   UNKNOWN  8CF9            ; Unknown 8xxx instruction
$C2C    $7DF4   ADD      VD, #F4         ; Add 244 to VD
$C2E    $9C4F   UNKNOWN  $9C4F           ; Unknown 9xxx instruction
$C30    $DB68   DRW      VB, V6, #8      ; Draw 8-byte sprite at VB, V6
$C32    $5A8F   UNKNOWN  $5A8F           ; Unknown 5xxx instruction
$C34    $C2E5   RND      V2, #E5         ; V2 = random & E5
$C36    $4DBC   SNE      VD, #BC         ; Skip if VD != 188
$C38    $1B04   JP       $B04            ; Jump to B04
$C3A    $0241   SYS      $241            ; System call to 241
$C3C    $EAB8   UNKNOWN  $EAB8           ; Unknown Exxx instruction
$C3E    $E298   UNKNOWN  $E298           ; Unknown Exxx instruction
$C40    $85E7   SUBN     V5, VE          ; V5 = VE - V5, VF = !borrow
$C42    $4538   SNE      V5, #38         ; Skip if V5 != 56
$C44    $F7E8   UNKNOWN  F7E8            ; Unknown Fxxx instruction
$C46    $FF5F   UNKNOWN  FF5F            ; Unknown Fxxx instruction
$C48    $3309   SE       V3, #09         ; Skip if V3 == 9
$C4A    $78AB   ADD      V8, #AB         ; Add 171 to V8
$C4C    $9184   UNKNOWN  $9184           ; Unknown 9xxx instruction
$C4E    $D926   DRW      V9, V2, #6      ; Draw 6-byte sprite at V9, V2
$C50    $AF3D   LD       I, $F3D         ; Load F3D into I
$C52    $39F9   SE       V9, #F9         ; Skip if V9 == 249
$C54    $8960   LD       V9, V6          ; V9 = V6
$C56    $B599   JP       V0, $599        ; Jump to V0 + 599
$C58    $5962   UNKNOWN  $5962           ; Unknown 5xxx instruction
$C5A    $BFDB   JP       V0, $FDB        ; Jump to V0 + FDB
$C5C    $6AFD   LD       VA, #FD         ; Load 253 into VA
$C5E    $4DCE   SNE      VD, #CE         ; Skip if VD != 206
$C60    $D98E   DRW      V9, V8, #E      ; Draw 14-byte sprite at V9, V8
$C62    $7D72   ADD      VD, #72         ; Add 114 to VD
$C64    $AEF9   LD       I, $EF9         ; Load EF9 into I
$C66    $5BA9   UNKNOWN  $5BA9           ; Unknown 5xxx instruction
$C68    $30F3   SE       V0, #F3         ; Skip if V0 == 243
$C6A    $D976   DRW      V9, V7, #6      ; Draw 6-byte sprite at V9, V7
$C6C    $3BE5   SE       VB, #E5         ; Skip if VB == 229
$C6E    $327E   SE       V2, #7E         ; Skip if V2 == 126
$C70    $C88A   RND      V8, #8A         ; V8 = random & 8A
$C72    $8931   OR       V9, V3          ; V9 |= V3
$C74    $0627   SYS      $627            ; System call to 627
$C76    $3FA1   SE       VF, #A1         ; Skip if VF == 161
$C78    $DDE0   DRW      VD, VE, #0      ; Draw 0-byte sprite at VD, VE
$C7A    $86A9   UNKNOWN  86A9            ; Unknown 8xxx instruction
$C7C    $3EC1   SE       VE, #C1         ; Skip if VE == 193
$C7E    $F217   UNKNOWN  F217            ; Unknown Fxxx instruction
$C80    $D7D6   DRW      V7, VD, #6      ; Draw 6-byte sprite at V7, VD
$C82    $FE46   UNKNOWN  FE46            ; Unknown Fxxx instruction
$C84    $81A7   SUBN     V1, VA          ; V1 = VA - V1, VF = !borrow
$C86    $6254   LD       V2, #54         ; Load 84 into V2
$C88    $1353   JP       $353            ; Jump to 353
$C8A    $676F   LD       V7, #6F         ; Load 111 into V7
$C8C    $B74F   JP       V0, $74F        ; Jump to V0 + 74F
$C8E    $6F4A   LD       VF, #4A         ; Load 74 into VF
$C90    $D38D   DRW      V3, V8, #D      ; Draw 13-byte sprite at V3, V8
$C92    $A04D   LD       I, $04D         ; Load 04D into I
$C94    $C463   RND      V4, #63         ; V4 = random & 63
$C96    $E20E   UNKNOWN  $E20E           ; Unknown Exxx instruction
$C98    $6F04   LD       VF, #04         ; Load 4 into VF
$C9A    $E094   UNKNOWN  $E094           ; Unknown Exxx instruction
$C9C    $8384   ADD      V3, V8          ; V3 += V8, VF = carry
$C9E    $74ED   ADD      V4, #ED         ; Add 237 to V4
$CA0    $C857   RND      V8, #57         ; V8 = random & 57
$CA2    $216B   CALL     $16B            ; Call subroutine at 16B
$CA4    $C43A   RND      V4, #3A         ; V4 = random & 3A
$CA6    $15EA   JP       $5EA            ; Jump to 5EA
$CA8    $DB1C   DRW      VB, V1, #C      ; Draw 12-byte sprite at VB, V1
$CAA    $8550   LD       V5, V5          ; V5 = V5
$CAC    $C1D1   RND      V1, #D1         ; V1 = random & D1
$CAE    $AB3C   LD       I, $B3C         ; Load B3C into I
$CB0    $B094   JP       V0, $094        ; Jump to V0 + 094
$CB2    $BB9C   JP       V0, $B9C        ; Jump to V0 + B9C
$CB4    $FC0A   LD       VC, K           ; Wait for key press, store in VC
$CB6    $202A   CALL     $02A            ; Call subroutine at 02A
$CB8    $DBEC   DRW      VB, VE, #C      ; Draw 12-byte sprite at VB, VE
$CBA    $8385   SUB      V3, V8          ; V3 -= V8, VF = !borrow
$CBC    $F541   UNKNOWN  F541            ; Unknown Fxxx instruction
$CBE    $6A9F   LD       VA, #9F         ; Load 159 into VA
$CC0    $B4D7   JP       V0, $4D7        ; Jump to V0 + 4D7
$CC2    $53D4   UNKNOWN  $53D4           ; Unknown 5xxx instruction
$CC4    $8B8C   UNKNOWN  8B8C            ; Unknown 8xxx instruction
$CC6    $988D   UNKNOWN  $988D           ; Unknown 9xxx instruction
$CC8    $63CE   LD       V3, #CE         ; Load 206 into V3
$CCA    $5BE1   UNKNOWN  $5BE1           ; Unknown 5xxx instruction
$CCC    $FECD   UNKNOWN  FECD            ; Unknown Fxxx instruction
$CCE    $ABE1   LD       I, $BE1         ; Load BE1 into I
$CD0    $92B1   UNKNOWN  $92B1           ; Unknown 9xxx instruction
$CD2    $C604   RND      V6, #04         ; V6 = random & 04
$CD4    $582C   UNKNOWN  $582C           ; Unknown 5xxx instruction
$CD6    $0BE9   SYS      $BE9            ; System call to BE9
$CD8    $B728   JP       V0, $728        ; Jump to V0 + 728
$CDA    $59D3   UNKNOWN  $59D3           ; Unknown 5xxx instruction
$CDC    $66C6   LD       V6, #C6         ; Load 198 into V6
$CDE    $D93F   DRW      V9, V3, #F      ; Draw 15-byte sprite at V9, V3
$CE0    $9AFE   UNKNOWN  $9AFE           ; Unknown 9xxx instruction
$CE2    $B71A   JP       V0, $71A        ; Jump to V0 + 71A
$CE4    $61C2   LD       V1, #C2         ; Load 194 into V1
$CE6    $C1AE   RND      V1, #AE         ; V1 = random & AE
$CE8    $6964   LD       V9, #64         ; Load 100 into V9
$CEA    $1238   JP       $238            ; Jump to 238
$CEC    $8459   UNKNOWN  8459            ; Unknown 8xxx instruction
$CEE    $1A2A   JP       $A2A            ; Jump to A2A
$CF0    $B5E1   JP       V0, $5E1        ; Jump to V0 + 5E1
$CF2    $595E   UNKNOWN  $595E           ; Unknown 5xxx instruction
$CF4    $546B   UNKNOWN  $546B           ; Unknown 5xxx instruction
$CF6    $CFC4   RND      VF, #C4         ; VF = random & C4
$CF8    $B9C1   JP       V0, $9C1        ; Jump to V0 + 9C1
$CFA    $987E   UNKNOWN  $987E           ; Unknown 9xxx instruction
$CFC    $C542   RND      V5, #42         ; V5 = random & 42
$CFE    $5FF5   UNKNOWN  $5FF5           ; Unknown 5xxx instruction
$D00    $CEC9   RND      VE, #C9         ; VE = random & C9
$D02    $E0BC   UNKNOWN  $E0BC           ; Unknown Exxx instruction
$D04    $ED8C   UNKNOWN  $ED8C           ; Unknown Exxx instruction
$D06    $6B90   LD       VB, #90         ; Load 144 into VB
$D08    $5479   UNKNOWN  $5479           ; Unknown 5xxx instruction
$D0A    $122D   JP       $22D            ; Jump to 22D
$D0C    $3665   SE       V6, #65         ; Skip if V6 == 101
$D0E    $B84E   JP       V0, $84E        ; Jump to V0 + 84E
$D10    $D15A   DRW      V1, V5, #A      ; Draw 10-byte sprite at V1, V5
$D12    $D23F   DRW      V2, V3, #F      ; Draw 15-byte sprite at V2, V3
$D14    $E52D   UNKNOWN  $E52D           ; Unknown Exxx instruction
$D16    $B96E   JP       V0, $96E        ; Jump to V0 + 96E
$D18    $268A   CALL     $68A            ; Call subroutine at 68A
$D1A    $E56D   UNKNOWN  $E56D           ; Unknown Exxx instruction
$D1C    $E9AD   UNKNOWN  $E9AD           ; Unknown Exxx instruction
$D1E    $1C1B   JP       $C1B            ; Jump to C1B
$D20    $D159   DRW      V1, V5, #9      ; Draw 9-byte sprite at V1, V5
$D22    $3259   SE       V2, #59         ; Skip if V2 == 89
$D24    $83B5   SUB      V3, VB          ; V3 -= VB, VF = !borrow
$D26    $6C8C   LD       VC, #8C         ; Load 140 into VC
$D28    $BA04   JP       V0, $A04        ; Jump to V0 + A04
$D2A    $5AF5   UNKNOWN  $5AF5           ; Unknown 5xxx instruction
$D2C    $0A31   SYS      $A31            ; System call to A31
$D2E    $8B08   UNKNOWN  8B08            ; Unknown 8xxx instruction
$D30    $BFDD   JP       V0, $FDD        ; Jump to V0 + FDD
$D32    $28E4   CALL     $8E4            ; Call subroutine at 8E4
$D34    $45B9   SNE      V5, #B9         ; Skip if V5 != 185
$D36    $99C8   UNKNOWN  $99C8           ; Unknown 9xxx instruction
$D38    $65E0   LD       V5, #E0         ; Load 224 into V5
$D3A    $F435   UNKNOWN  F435            ; Unknown Fxxx instruction
$D3C    $43C6   SNE      V3, #C6         ; Skip if V3 != 198
$D3E    $3CB4   SE       VC, #B4         ; Skip if VC == 180
$D40    $3F9D   SE       VF, #9D         ; Skip if VF == 157
$D42    $2B06   CALL     $B06            ; Call subroutine at B06
$D44    $8B4A   UNKNOWN  8B4A            ; Unknown 8xxx instruction
$D46    $92AA   UNKNOWN  $92AA           ; Unknown 9xxx instruction
$D48    $597D   UNKNOWN  $597D           ; Unknown 5xxx instruction
$D4A    $E916   UNKNOWN  $E916           ; Unknown Exxx instruction
$D4C    $9200   SNE      V2, V0          ; Skip if V2 != V0
$D4E    $3925   SE       V9, #25         ; Skip if V9 == 37
$D50    $DB31   DRW      VB, V3, #1      ; Draw 1-byte sprite at VB, V3
$D52    $0403   SYS      $403            ; System call to 403
$D54    $D311   DRW      V3, V1, #1      ; Draw 1-byte sprite at V3, V1
$D56    $0A47   SYS      $A47            ; System call to A47
$D58    $6F00   LD       VF, #00         ; Load 0 into VF
$D5A    $F1F5   UNKNOWN  F1F5            ; Unknown Fxxx instruction
$D5C    $88C5   SUB      V8, VC          ; V8 -= VC, VF = !borrow
$D5E    $DDF0   DRW      VD, VF, #0      ; Draw 0-byte sprite at VD, VF
$D60    $4A3F   SNE      VA, #3F         ; Skip if VA != 63
$D62    $C633   RND      V6, #33         ; V6 = random & 33
$D64    $8558   UNKNOWN  8558            ; Unknown 8xxx instruction
$D66    $4376   SNE      V3, #76         ; Skip if V3 != 118
$D68    $AE4B   LD       I, $E4B         ; Load E4B into I
$D6A    $F2DE   UNKNOWN  F2DE            ; Unknown Fxxx instruction
$D6C    $9C0B   UNKNOWN  $9C0B           ; Unknown 9xxx instruction
$D6E    $B586   JP       V0, $586        ; Jump to V0 + 586
$D70    $9952   UNKNOWN  $9952           ; Unknown 9xxx instruction
$D72    $5B0F   UNKNOWN  $5B0F           ; Unknown 5xxx instruction
$D74    $8E3E   SHL      VE              ; VE <<= 1, VF = MSB
$D76    $D353   DRW      V3, V5, #3      ; Draw 3-byte sprite at V3, V5
$D78    $D5B9   DRW      V5, VB, #9      ; Draw 9-byte sprite at V5, VB
$D7A    $7023   ADD      V0, #23         ; Add 35 to V0
$D7C    $DF3E   DRW      VF, V3, #E      ; Draw 14-byte sprite at VF, V3
$D7E    $D95B   DRW      V9, V5, #B      ; Draw 11-byte sprite at V9, V5
$D80    $4DF7   SNE      VD, #F7         ; Skip if VD != 247
$D82    $63F4   LD       V3, #F4         ; Load 244 into V3
$D84    $8B60   LD       VB, V6          ; VB = V6
$D86    $B492   JP       V0, $492        ; Jump to V0 + 492
$D88    $B3BF   JP       V0, $3BF        ; Jump to V0 + 3BF
$D8A    $D76A   DRW      V7, V6, #A      ; Draw 10-byte sprite at V7, V6
$D8C    $F9EE   UNKNOWN  F9EE            ; Unknown Fxxx instruction
$D8E    $C685   RND      V6, #85         ; V6 = random & 85
$D90    $1B5B   JP       $B5B            ; Jump to B5B
$D92    $E728   UNKNOWN  $E728           ; Unknown Exxx instruction
$D94    $0255   SYS      $255            ; System call to 255
$D96    $DBEF   DRW      VB, VE, #F      ; Draw 15-byte sprite at VB, VE
$D98    $B45B   JP       V0, $45B        ; Jump to V0 + 45B
$D9A    $AB0E   LD       I, $B0E         ; Load B0E into I
$D9C    $3B2A   SE       VB, #2A         ; Skip if VB == 42
$D9E    $EF23   UNKNOWN  $EF23           ; Unknown Exxx instruction
$DA0    $6C93   LD       VC, #93         ; Load 147 into VC
$DA2    $117C   JP       $17C            ; Jump to 17C
$DA4    $D6F6   DRW      V6, VF, #6      ; Draw 6-byte sprite at V6, VF
$DA6    $D721   DRW      V7, V2, #1      ; Draw 1-byte sprite at V7, V2
$DA8    $863E   SHL      V6              ; V6 <<= 1, VF = MSB
$DAA    $8146   SHR      V1              ; V1 >>= 1, VF = LSB
$DAC    $2F96   CALL     $F96            ; Call subroutine at F96
$DAE    $D898   DRW      V8, V9, #8      ; Draw 8-byte sprite at V8, V9
$DB0    $6B49   LD       VB, #49         ; Load 73 into VB
$DB2    $A820   LD       I, $820         ; Load 820 into I
$DB4    $BBB4   JP       V0, $BB4        ; Jump to V0 + BB4
$DB6    $10E7   JP       $0E7            ; Jump to 0E7
$DB8    $56C2   UNKNOWN  $56C2           ; Unknown 5xxx instruction
$DBA    $90D6   UNKNOWN  $90D6           ; Unknown 9xxx instruction
$DBC    $AEDE   LD       I, $EDE         ; Load EDE into I
$DBE    $F2BA   UNKNOWN  F2BA            ; Unknown Fxxx instruction
$DC0    $1CE0   JP       $CE0            ; Jump to CE0
$DC2    $F819   UNKNOWN  F819            ; Unknown Fxxx instruction
$DC4    $90A7   UNKNOWN  $90A7           ; Unknown 9xxx instruction
$DC6    $7B96   ADD      VB, #96         ; Add 150 to VB
$DC8    $D10B   DRW      V1, V0, #B      ; Draw 11-byte sprite at V1, V0
$DCA    $52A0   SE       V2, VA          ; Skip if V2 == VA
$DCC    $9308   UNKNOWN  $9308           ; Unknown 9xxx instruction
$DCE    $48F2   SNE      V8, #F2         ; Skip if V8 != 242
$DD0    $3236   SE       V2, #36         ; Skip if V2 == 54
$DD2    $E5E9   UNKNOWN  $E5E9           ; Unknown Exxx instruction
$DD4    $4D88   SNE      VD, #88         ; Skip if VD != 136
$DD6    $5560   SE       V5, V6          ; Skip if V5 == V6
$DD8    $DA1F   DRW      VA, V1, #F      ; Draw 15-byte sprite at VA, V1
$DDA    $A1AF   LD       I, $1AF         ; Load 1AF into I
$DDC    $7417   ADD      V4, #17         ; Add 23 to V4
$DDE    $C578   RND      V5, #78         ; V5 = random & 78
$DE0    $896D   UNKNOWN  896D            ; Unknown 8xxx instruction
$DE2    $3890   SE       V8, #90         ; Skip if V8 == 144
$DE4    $FCFD   UNKNOWN  FCFD            ; Unknown Fxxx instruction
$DE6    $2388   CALL     $388            ; Call subroutine at 388
$DE8    $9AAA   UNKNOWN  $9AAA           ; Unknown 9xxx instruction
$DEA    $7817   ADD      V8, #17         ; Add 23 to V8
$DEC    $2B24   CALL     $B24            ; Call subroutine at B24
$DEE    $D91E   DRW      V9, V1, #E      ; Draw 14-byte sprite at V9, V1
$DF0    $A4DA   LD       I, $4DA         ; Load 4DA into I
$DF2    $C668   RND      V6, #68         ; V6 = random & 68
$DF4    $AC8F   LD       I, $C8F         ; Load C8F into I
$DF6    $A295   LD       I, $295         ; Load 295 into I
$DF8    $F199   UNKNOWN  F199            ; Unknown Fxxx instruction
$DFA    $3383   SE       V3, #83         ; Skip if V3 == 131
$DFC    $D21F   DRW      V2, V1, #F      ; Draw 15-byte sprite at V2, V1
$DFE    $57BC   UNKNOWN  $57BC           ; Unknown 5xxx instruction
$E00    $37B6   SE       V7, #B6         ; Skip if V7 == 182
$E02    $28E2   CALL     $8E2            ; Call subroutine at 8E2
$E04    $BA1F   JP       V0, $A1F        ; Jump to V0 + A1F
$E06    $B26A   JP       V0, $26A        ; Jump to V0 + 26A
$E08    $F8CB   UNKNOWN  F8CB            ; Unknown Fxxx instruction
$E0A    $7C1E   ADD      VC, #1E         ; Add 30 to VC
$E0C    $6FE9   LD       VF, #E9         ; Load 233 into VF
$E0E    $1559   JP       $559            ; Jump to 559
$E10    $B23A   JP       V0, $23A        ; Jump to V0 + 23A
$E12    $19A2   JP       $9A2            ; Jump to 9A2
$E14    $DB2D   DRW      VB, V2, #D      ; Draw 13-byte sprite at VB, V2
$E16    $6E75   LD       VE, #75         ; Load 117 into VE
$E18    $20C6   CALL     $0C6            ; Call subroutine at 0C6
$E1A    $267A   CALL     $67A            ; Call subroutine at 67A
$E1C    $F1DC   UNKNOWN  F1DC            ; Unknown Fxxx instruction
$E1E    $925A   UNKNOWN  $925A           ; Unknown 9xxx instruction
$E20    $851E   SHL      V5              ; V5 <<= 1, VF = MSB
$E22    $83BC   UNKNOWN  83BC            ; Unknown 8xxx instruction
$E24    $E281   UNKNOWN  $E281           ; Unknown Exxx instruction
$E26    $ADF7   LD       I, $DF7         ; Load DF7 into I
$E28    $B17C   JP       V0, $17C        ; Jump to V0 + 17C
$E2A    $11B9   JP       $1B9            ; Jump to 1B9
$E2C    $8C24   ADD      VC, V2          ; VC += V2, VF = carry
$E2E    $C022   RND      V0, #22         ; V0 = random & 22
$E30    $F44E   UNKNOWN  F44E            ; Unknown Fxxx instruction
$E32    $386E   SE       V8, #6E         ; Skip if V8 == 110
$E34    $A967   LD       I, $967         ; Load 967 into I
$E36    $9B62   UNKNOWN  $9B62           ; Unknown 9xxx instruction
$E38    $5A78   UNKNOWN  $5A78           ; Unknown 5xxx instruction
$E3A    $97B0   SNE      V7, VB          ; Skip if V7 != VB
$E3C    $AF21   LD       I, $F21         ; Load F21 into I
$E3E    $13BD   JP       $3BD            ; Jump to 3BD
$E40    $31CA   SE       V1, #CA         ; Skip if V1 == 202
$E42    $9070   SNE      V0, V7          ; Skip if V0 != V7
$E44    $FFFC   UNKNOWN  FFFC            ; Unknown Fxxx instruction
$E46    $31A5   SE       V1, #A5         ; Skip if V1 == 165
$E48    $4353   SNE      V3, #53         ; Skip if V3 != 83
$E4A    $6171   LD       V1, #71         ; Load 113 into V1
$E4C    $CF40   RND      VF, #40         ; VF = random & 40
$E4E    $3286   SE       V2, #86         ; Skip if V2 == 134
$E50    $102E   JP       $02E            ; Jump to 02E
$E52    $83C1   OR       V3, VC          ; V3 |= VC
$E54    $1AFA   JP       $AFA            ; Jump to AFA
$E56    $A402   LD       I, $402         ; Load 402 into I
$E58    $1510   JP       $510            ; Jump to 510
$E5A    $0B44   SYS      $B44            ; System call to B44
$E5C    $AABD   LD       I, $ABD         ; Load ABD into I
$E5E    $C500   RND      V5, #00         ; V5 = random & 00
$E60    $D89E   DRW      V8, V9, #E      ; Draw 14-byte sprite at V8, V9
$E62    $2901   CALL     $901            ; Call subroutine at 901
$E64    $7E55   ADD      VE, #55         ; Add 85 to VE
$E66    $CA98   RND      VA, #98         ; VA = random & 98
$E68    $E482   UNKNOWN  $E482           ; Unknown Exxx instruction
$E6A    $7F41   ADD      VF, #41         ; Add 65 to VF
$E6C    $0D33   SYS      $D33            ; System call to D33
$E6E    $5D25   UNKNOWN  $5D25           ; Unknown 5xxx instruction
$E70    $8D76   SHR      VD              ; VD >>= 1, VF = LSB
$E72    $1EE6   JP       $EE6            ; Jump to EE6
$E74    $74E5   ADD      V4, #E5         ; Add 229 to V4
$E76    $5EE2   UNKNOWN  $5EE2           ; Unknown 5xxx instruction
$E78    $4312   SNE      V3, #12         ; Skip if V3 != 18
$E7A    $4AC3   SNE      VA, #C3         ; Skip if VA != 195
$E7C    $0A3F   SYS      $A3F            ; System call to A3F
$E7E    $78B6   ADD      V8, #B6         ; Add 182 to V8
$E80    $DCE3   DRW      VC, VE, #3      ; Draw 3-byte sprite at VC, VE
$E82    $1F5B   JP       $F5B            ; Jump to F5B
$E84    $497F   SNE      V9, #7F         ; Skip if V9 != 127
$E86    $DE77   DRW      VE, V7, #7      ; Draw 7-byte sprite at VE, V7
$E88    $3DB7   SE       VD, #B7         ; Skip if VD == 183
$E8A    $A2D3   LD       I, $2D3         ; Load 2D3 into I
$E8C    $7A50   ADD      VA, #50         ; Add 80 to VA
$E8E    $9D41   UNKNOWN  $9D41           ; Unknown 9xxx instruction
$E90    $F4CC   UNKNOWN  F4CC            ; Unknown Fxxx instruction
$E92    $D247   DRW      V2, V4, #7      ; Draw 7-byte sprite at V2, V4
$E94    $8C3D   UNKNOWN  8C3D            ; Unknown 8xxx instruction
$E96    $3761   SE       V7, #61         ; Skip if V7 == 97
$E98    $9AEF   UNKNOWN  $9AEF           ; Unknown 9xxx instruction
$E9A    $50BB   UNKNOWN  $50BB           ; Unknown 5xxx instruction
$E9C    $EB73   UNKNOWN  $EB73           ; Unknown Exxx instruction
$E9E    $1C7E   JP       $C7E            ; Jump to C7E
$EA0    $5F0C   UNKNOWN  $5F0C           ; Unknown 5xxx instruction
$EA2    $A52B   LD       I, $52B         ; Load 52B into I
$EA4    $0C8C   SYS      $C8C            ; System call to C8C
$EA6    $B1F0   JP       V0, $1F0        ; Jump to V0 + 1F0
$EA8    $77D9   ADD      V7, #D9         ; Add 217 to V7
$EAA    $008B   SYS      $08B            ; System call to 08B
$EAC    $C28C   RND      V2, #8C         ; V2 = random & 8C
$EAE    $76C2   ADD      V6, #C2         ; Add 194 to V6
$EB0    $31D9   SE       V1, #D9         ; Skip if V1 == 217
$EB2    $8EA8   UNKNOWN  8EA8            ; Unknown 8xxx instruction
$EB4    $D47D   DRW      V4, V7, #D      ; Draw 13-byte sprite at V4, V7
$EB6    $3C79   SE       VC, #79         ; Skip if VC == 121
$EB8    $4CC3   SNE      VC, #C3         ; Skip if VC != 195
$EBA    $63D7   LD       V3, #D7         ; Load 215 into V3
$EBC    $42A9   SNE      V2, #A9         ; Skip if V2 != 169
$EBE    $62D8   LD       V2, #D8         ; Load 216 into V2
$EC0    $A4F5   LD       I, $4F5         ; Load 4F5 into I
$EC2    $B1AB   JP       V0, $1AB        ; Jump to V0 + 1AB
$EC4    $54F0   SE       V4, VF          ; Skip if V4 == VF
$EC6    $EBB2   UNKNOWN  $EBB2           ; Unknown Exxx instruction
$EC8    $3982   SE       V9, #82         ; Skip if V9 == 130
$ECA    $1DC6   JP       $DC6            ; Jump to DC6
$ECC    $9002   UNKNOWN  $9002           ; Unknown 9xxx instruction
$ECE    $C0B1   RND      V0, #B1         ; V0 = random & B1
$ED0    $2CBF   CALL     $CBF            ; Call subroutine at CBF
$ED2    $B34B   JP       V0, $34B        ; Jump to V0 + 34B
$ED4    $3F36   SE       VF, #36         ; Skip if VF == 54
$ED6    $6093   LD       V0, #93         ; Load 147 into V0
$ED8    $F852   UNKNOWN  F852            ; Unknown Fxxx instruction
$EDA    $6974   LD       V9, #74         ; Load 116 into V9
$EDC    $E8C5   UNKNOWN  $E8C5           ; Unknown Exxx instruction
$EDE    $3D43   SE       VD, #43         ; Skip if VD == 67
$EE0    $17F4   JP       $7F4            ; Jump to 7F4
$EE2    $F086   UNKNOWN  F086            ; Unknown Fxxx instruction
$EE4    $6942   LD       V9, #42         ; Load 66 into V9
$EE6    $32AF   SE       V2, #AF         ; Skip if V2 == 175
$EE8    $B987   JP       V0, $987        ; Jump to V0 + 987
$EEA    $401D   SNE      V0, #1D         ; Skip if V0 != 29
$EEC    $D043   DRW      V0, V4, #3      ; Draw 3-byte sprite at V0, V4
$EEE    $5F48   UNKNOWN  $5F48           ; Unknown 5xxx instruction
$EF0    $ADC2   LD       I, $DC2         ; Load DC2 into I
$EF2    $32C3   SE       V2, #C3         ; Skip if V2 == 195
$EF4    $041C   SYS      $41C            ; System call to 41C
$EF6    $F0B4   UNKNOWN  F0B4            ; Unknown Fxxx instruction
$EF8    $C182   RND      V1, #82         ; V1 = random & 82
$EFA    $E80E   UNKNOWN  $E80E           ; Unknown Exxx instruction
$EFC    $366A   SE       V6, #6A         ; Skip if V6 == 106
$EFE    $67BD   LD       V7, #BD         ; Load 189 into V7
$F00    $7ED3   ADD      VE, #D3         ; Add 211 to VE
$F02    $B20E   JP       V0, $20E        ; Jump to V0 + 20E
$F04    $3C76   SE       VC, #76         ; Skip if VC == 118
$F06    $FEF9   UNKNOWN  FEF9            ; Unknown Fxxx instruction
$F08    $6CCE   LD       VC, #CE         ; Load 206 into VC
$F0A    $D6D4   DRW      V6, VD, #4      ; Draw 4-byte sprite at V6, VD
$F0C    $F3A1   UNKNOWN  F3A1            ; Unknown Fxxx instruction
$F0E    $EF75   UNKNOWN  $EF75           ; Unknown Exxx instruction
$F10    $FE4D   UNKNOWN  FE4D            ; Unknown Fxxx instruction
$F12    $7513   ADD      V5, #13         ; Add 19 to V5
$F14    $A443   LD       I, $443         ; Load 443 into I
$F16    $ED2B   UNKNOWN  $ED2B           ; Unknown Exxx instruction
$F18    $E82E   UNKNOWN  $E82E           ; Unknown Exxx instruction
$F1A    $7356   ADD      V3, #56         ; Add 86 to V3
$F1C    $D0DB   DRW      V0, VD, #B      ; Draw 11-byte sprite at V0, VD
$F1E    $172A   JP       $72A            ; Jump to 72A
$F20    $8DB1   OR       VD, VB          ; VD |= VB
$F22    $3EEE   SE       VE, #EE         ; Skip if VE == 238
$F24    $7713   ADD      V7, #13         ; Add 19 to V7
$F26    $DDB8   DRW      VD, VB, #8      ; Draw 8-byte sprite at VD, VB
$F28    $66C1   LD       V6, #C1         ; Load 193 into V6
$F2A    $7DEE   ADD      VD, #EE         ; Add 238 to VD
$F2C    $47F6   SNE      V7, #F6         ; Skip if V7 != 246
$F2E    $1B16   JP       $B16            ; Jump to B16
$F30    $539C   UNKNOWN  $539C           ; Unknown 5xxx instruction
$F32    $FC93   UNKNOWN  FC93            ; Unknown Fxxx instruction
$F34    $7887   ADD      V8, #87         ; Add 135 to V8
$F36    $C96D   RND      V9, #6D         ; V9 = random & 6D
$F38    $D457   DRW      V4, V5, #7      ; Draw 7-byte sprite at V4, V5
$F3A    $0D47   SYS      $D47            ; System call to D47
$F3C    $D67D   DRW      V6, V7, #D      ; Draw 13-byte sprite at V6, V7
$F3E    $A27B   LD       I, $27B         ; Load 27B into I
$F40    $386B   SE       V8, #6B         ; Skip if V8 == 107
$F42    $A7C1   LD       I, $7C1         ; Load 7C1 into I
$F44    $69B0   LD       V9, #B0         ; Load 176 into V9
$F46    $DA3F   DRW      VA, V3, #F      ; Draw 15-byte sprite at VA, V3
$F48    $AE55   LD       I, $E55         ; Load E55 into I
$F4A    $AB0F   LD       I, $B0F         ; Load B0F into I
$F4C    $6B96   LD       VB, #96         ; Load 150 into VB
$F4E    $4513   SNE      V5, #13         ; Skip if V5 != 19
$F50    $0F6D   SYS      $F6D            ; System call to F6D
$F52    $DB83   DRW      VB, V8, #3      ; Draw 3-byte sprite at VB, V8
$F54    $2C91   CALL     $C91            ; Call subroutine at C91
$F56    $B347   JP       V0, $347        ; Jump to V0 + 347
$F58    $1D79   JP       $D79            ; Jump to D79
$F5A    $0ECB   SYS      $ECB            ; System call to ECB
$F5C    $80AF   UNKNOWN  80AF            ; Unknown 8xxx instruction
$F5E    $E481   UNKNOWN  $E481           ; Unknown Exxx instruction
$F60    $2909   CALL     $909            ; Call subroutine at 909
$F62    $C916   RND      V9, #16         ; V9 = random & 16
$F64    $BF9A   JP       V0, $F9A        ; Jump to V0 + F9A
$F66    $ECF8   UNKNOWN  $ECF8           ; Unknown Exxx instruction
$F68    $2F69   CALL     $F69            ; Call subroutine at F69
$F6A    $C92B   RND      V9, #2B         ; V9 = random & 2B
$F6C    $19AE   JP       $9AE            ; Jump to 9AE
$F6E    $4728   SNE      V7, #28         ; Skip if V7 != 40
$F70    $831E   SHL      V3              ; V3 <<= 1, VF = MSB
$F72    $95B9   UNKNOWN  $95B9           ; Unknown 9xxx instruction
$F74    $4425   SNE      V4, #25         ; Skip if V4 != 37
$F76    $F617   UNKNOWN  F617            ; Unknown Fxxx instruction
$F78    $A50D   LD       I, $50D         ; Load 50D into I
$F7A    $40E7   SNE      V0, #E7         ; Skip if V0 != 231
$F7C    $068B   SYS      $68B            ; System call to 68B
$F7E    $CC84   RND      VC, #84         ; VC = random & 84
$F80    $81D8   UNKNOWN  81D8            ; Unknown 8xxx instruction
$F82    $916D   UNKNOWN  $916D           ; Unknown 9xxx instruction
$F84    $07C7   SYS      $7C7            ; System call to 7C7
$F86    $7176   ADD      V1, #76         ; Add 118 to V1
$F88    $76E7   ADD      V6, #E7         ; Add 231 to V6
$F8A    $EDCF   UNKNOWN  $EDCF           ; Unknown Exxx instruction
$F8C    $7F06   ADD      VF, #06         ; Add 6 to VF
$F8E    $37DB   SE       V7, #DB         ; Skip if V7 == 219
$F90    $1934   JP       $934            ; Jump to 934
$F92    $7EEE   ADD      VE, #EE         ; Add 238 to VE
$F94    $DBC6   DRW      VB, VC, #6      ; Draw 6-byte sprite at VB, VC
$F96    $33B0   SE       V3, #B0         ; Skip if V3 == 176
$F98    $066A   SYS      $66A            ; System call to 66A
$F9A    $0BE7   SYS      $BE7            ; System call to BE7
$F9C    $2A31   CALL     $A31            ; Call subroutine at A31
$F9E    $34E9   SE       V4, #E9         ; Skip if V4 == 233
$FA0    $EA82   UNKNOWN  $EA82           ; Unknown Exxx instruction
$FA2    $8DEF   UNKNOWN  8DEF            ; Unknown 8xxx instruction
$FA4    $DC82   DRW      VC, V8, #2      ; Draw 2-byte sprite at VC, V8
$FA6    $097B   SYS      $97B            ; System call to 97B
$FA8    $9942   UNKNOWN  $9942           ; Unknown 9xxx instruction
$FAA    $B5EF   JP       V0, $5EF        ; Jump to V0 + 5EF
$FAC    $481B   SNE      V8, #1B         ; Skip if V8 != 27
$FAE    $98E1   UNKNOWN  $98E1           ; Unknown 9xxx instruction
$FB0    $67EB   LD       V7, #EB         ; Load 235 into V7
$FB2    $BEC3   JP       V0, $EC3        ; Jump to V0 + EC3
$FB4    $59EB   UNKNOWN  $59EB           ; Unknown 5xxx instruction
$FB6    $2CAD   CALL     $CAD            ; Call subroutine at CAD
$FB8    $165A   JP       $65A            ; Jump to 65A
$FBA    $CB3F   RND      VB, #3F         ; VB = random & 3F
$FBC    $CAA4   RND      VA, #A4         ; VA = random & A4
$FBE    $8685   SUB      V6, V8          ; V6 -= V8, VF = !borrow
$FC0    $63BF   LD       V3, #BF         ; Load 191 into V3
$FC2    $37B5   SE       V7, #B5         ; Skip if V7 == 181
$FC4    $0A3D   SYS      $A3D            ; System call to A3D
$FC6    $0BA3   SYS      $BA3            ; System call to BA3
$FC8    $C9FE   RND      V9, #FE         ; V9 = random & FE
$FCA    $3750   SE       V7, #50         ; Skip if V7 == 80
$FCC    $72C4   ADD      V2, #C4         ; Add 196 to V2
$FCE    $770C   ADD      V7, #0C         ; Add 12 to V7
$FD0    $1A3A   JP       $A3A            ; Jump to A3A
$FD2    $0013   SYS      $013            ; System call to 013
$FD4    $04D6   SYS      $4D6            ; System call to 4D6
$FD6    $2A9D   CALL     $A9D            ; Call subroutine at A9D
$FD8    $B21E   JP       V0, $21E        ; Jump to V0 + 21E
$FDA    $C1AE   RND      V1, #AE         ; V1 = random & AE
$FDC    $B340   JP       V0, $340        ; Jump to V0 + 340
$FDE    $392F   SE       V9, #2F         ; Skip if V9 == 47
$FE0    $E78D   UNKNOWN  $E78D           ; Unknown Exxx instruction
$FE2    $998B   UNKNOWN  $998B           ; Unknown 9xxx instruction
$FE4    $EC66   UNKNOWN  $EC66           ; Unknown Exxx instruction
$FE6    $6AAB   LD       VA, #AB         ; Load 171 into VA
$FE8    $4A12   SNE      VA, #12         ; Skip if VA != 18
$FEA    $4740   SNE      V7, #40         ; Skip if V7 != 64
$FEC    $794A   ADD      V9, #4A         ; Add 74 to V9
$FEE    $8E65   SUB      VE, V6          ; VE -= V6, VF = !borrow
$FF0    $C126   RND      V1, #26         ; V1 = random & 26
$FF2    $AA42   LD       I, $A42         ; Load A42 into I
$FF4    $ED86   UNKNOWN  $ED86           ; Unknown Exxx instruction
$FF6    $4715   SNE      V7, #15         ; Skip if V7 != 21
$FF8    $5D63   UNKNOWN  $5D63           ; Unknown 5xxx instruction
$FFA    $1146   JP       $146            ; Jump to 146
$FFC    $97B5   UNKNOWN  $97B5           ; Unknown 9xxx instruction
$FFE    $474A   SNE      V7, #4A         ; Skip if V7 != 74

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 433 (24.2%)
  LD      : 224 (12.5%)
  JP      : 209 (11.7%)
  CALL    : 194 (10.8%)
  SE      : 130 ( 7.3%)
  ADD     : 117 ( 6.5%)
  DRW     : 115 ( 6.4%)
  SYS     : 109 ( 6.1%)
  SNE     : 102 ( 5.7%)
  RND     :  99 ( 5.5%)
  OR      :  15 ( 0.8%)
  SUB     :  11 ( 0.6%)
  SHL     :  11 ( 0.6%)
  SHR     :   8 ( 0.4%)
  SUBN    :   6 ( 0.3%)
  AND     :   5 ( 0.3%)
  XOR     :   4 ( 0.2%)

Memory Operations: 341 (19.0%)
Arithmetic Operations: 158 (8.8%)
