
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B4407D01_I36608_C1001_bd630d60a58f.ch8
ROM Size: 3584 bytes
Instructions Found: 1791

DISCOVERY INFORMATION:
Batch: 4407
Instance: 36608
Direction: ascending
Final Array: [0, 0, 0, 56, 63, 94, 145, 145]
Operations: R:0 W:1 C:96 S:1

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 107
Sort Array References:
  $22E: LD I, $B5E ; Load B5E into I
  $236: LD I, $F65 ; Load F65 into I
  $27A: LD I, $DFF ; Load DFF into I
  $294: LD I, $21A ; Load 21A into I
  $2EE: LD I, $095 ; Load 095 into I
  $32E: LD I, $FA7 ; Load FA7 into I
  $332: LD I, $931 ; Load 931 into I
  $388: LD I, $C6C ; Load C6C into I
  $40C: LD I, $ABA ; Load ABA into I
  $410: LD I, $8EF ; Load 8EF into I
  $42C: LD I, $73E ; Load 73E into I
  $442: LD I, $8A2 ; Load 8A2 into I
  $48C: LD I, $228 ; Load 228 into I
  $492: LD I, $B23 ; Load B23 into I
  $4BC: LD I, $E69 ; Load E69 into I
  $4D0: LD I, $3CF ; Load 3CF into I
  $4E6: LD I, $A0E ; Load A0E into I
  $4F8: LD I, $5FE ; Load 5FE into I
  $524: LD I, $302 ; Load 302 into I
  $536: LD I, $440 ; Load 440 into I
  $542: LD I, $796 ; Load 796 into I
  $55A: LD I, $BE8 ; Load BE8 into I
  $568: LD I, $101 ; Load 101 into I
  $57E: LD I, $0A6 ; Load 0A6 into I
  $592: LD I, $F7E ; Load F7E into I
  $5C2: LD I, $E2C ; Load E2C into I
  $5E8: LD I, $25B ; Load 25B into I
  $600: LD I, $304 ; Load 304 into I
  $612: LD I, $E52 ; Load E52 into I
  $632: LD I, $1DB ; Load 1DB into I
  $658: LD I, $D20 ; Load D20 into I
  $65E: LD I, $786 ; Load 786 into I
  $662: LD I, $6C6 ; Load 6C6 into I
  $66C: LD I, $D7B ; Load D7B into I
  $6AA: LD I, $01F ; Load 01F into I
  $6FE: LD I, $63C ; Load 63C into I
  $724: LD I, $EE5 ; Load EE5 into I
  $772: LD I, $95A ; Load 95A into I
  $7F6: LD I, $A69 ; Load A69 into I
  $800: LD I, $647 ; Load 647 into I
  $802: LD I, $726 ; Load 726 into I
  $810: LD I, $9A7 ; Load 9A7 into I
  $814: LD I, $2D1 ; Load 2D1 into I
  $82A: ADD I, VF ; I ADDRESS MANIPULATION
  $84A: LD I, $0C9 ; Load 0C9 into I
  $856: LD I, $2D7 ; Load 2D7 into I
  $8D6: LD I, $A9C ; Load A9C into I
  $900: LD I, $094 ; Load 094 into I
  $906: LD I, $33F ; Load 33F into I
  $912: LD I, $E32 ; Load E32 into I
  $944: LD I, $9E0 ; Load 9E0 into I
  $96C: LD I, $0C9 ; Load 0C9 into I
  $982: LD I, $D3F ; Load D3F into I
  $996: LD I, $9D0 ; Load 9D0 into I
  $9B4: LD I, $128 ; Load 128 into I
  $9BA: LD I, $71A ; Load 71A into I
  $9EA: LD I, $964 ; Load 964 into I
  $9F4: LD I, $531 ; Load 531 into I
  $9FE: LD I, $C69 ; Load C69 into I
  $A74: LD I, $8C2 ; Load 8C2 into I
  $A76: LD I, $F04 ; Load F04 into I
  $A9C: LD I, $CDA ; Load CDA into I
  $ACC: LD I, $DE0 ; Load DE0 into I
  $B04: LD I, $2FD ; Load 2FD into I
  $B2A: LD I, $A8A ; Load A8A into I
  $B54: LD I, $004 ; Load 004 into I
  $B5E: LD I, $53D ; Load 53D into I
  $B62: LD I, $7E9 ; Load 7E9 into I
  $B92: LD I, $745 ; Load 745 into I
  $BA6: LD I, $A5D ; Load A5D into I
  $C00: LD I, $F07 ; Load F07 into I
  $C02: LD I, $00B ; Load 00B into I
  $C48: LD I, $569 ; Load 569 into I
  $C4A: LD I, $6DA ; Load 6DA into I
  $C60: LD I, $CA0 ; Load CA0 into I
  $C78: LD I, $523 ; Load 523 into I
  $C8A: LD I, $F1F ; Load F1F into I
  $C90: LD I, $7E7 ; Load 7E7 into I
  $C9C: LD I, $AF2 ; Load AF2 into I
  $CB4: LD I, $77D ; Load 77D into I
  $CD6: LD I, $633 ; Load 633 into I
  $CDA: LD I, $C7C ; Load C7C into I
  $CDC: LD I, $100 ; Load 100 into I
  $CFA: LD I, $167 ; Load 167 into I
  $D2A: LD I, $FA1 ; Load FA1 into I
  $D4E: LD I, $461 ; Load 461 into I
  $D64: LD I, $6E1 ; Load 6E1 into I
  $D6C: LD I, $ED8 ; Load ED8 into I
  $D98: LD I, $E3A ; Load E3A into I
  $DA2: LD I, $CDD ; Load CDD into I
  $DC8: LD I, $E9D ; Load E9D into I
  $DD6: LD I, $B26 ; Load B26 into I
  $E24: LD I, $EF4 ; Load EF4 into I
  $E48: LD I, $A68 ; Load A68 into I
  $E64: LD I, $048 ; Load 048 into I
  $EA8: LD I, $26B ; Load 26B into I
  $EE0: LD I, $1EE ; Load 1EE into I
  $EEC: LD I, $88A ; Load 88A into I
  $EF4: LD I, $BB9 ; Load BB9 into I
  $F28: LD I, $4F3 ; Load 4F3 into I
  $F4E: LD I, $59E ; Load 59E into I
  $F6A: LD I, $6BF ; Load 6BF into I
  $F70: LD I, $5DA ; Load 5DA into I
  $F76: LD I, $02E ; Load 02E into I
  $F88: LD I, $320 ; Load 320 into I
  $F9E: LD I, $D3C ; Load D3C into I
  $FF4: LD I, $BED ; Load BED into I

CONTROL FLOW ANALYSIS:
Jumps: 210
Calls: 128
Branches: 268
Loops: 124
Loop Structures:
  $2D2 -> $16A (backward jump)
  $2FE -> $204 (backward jump)
  $38C -> $09C (backward jump)
  $39C -> $007 (backward jump)
  $3B2 -> $33E (backward jump)
  $3E4 -> $2E6 (backward jump)
  $430 -> $305 (backward jump)
  $4B0 -> $154 (backward jump)
  $55C -> $23D (backward jump)
  $560 -> $36B (backward jump)
  $5B4 -> $149 (backward jump)
  $5D8 -> $06D (backward jump)
  $5EE -> $49D (backward jump)
  $5F8 -> $0CB (backward jump)
  $60A -> $3C8 (backward jump)
  $61A -> $14F (backward jump)
  $62E -> $251 (backward jump)
  $678 -> $1CD (backward jump)
  $67E -> $4BC (backward jump)
  $69A -> $018 (backward jump)
  $6B2 -> $5AA (backward jump)
  $6D0 -> $269 (backward jump)
  $6E4 -> $6D1 (backward jump)
  $6E8 -> $617 (backward jump)
  $6F6 -> $5A0 (backward jump)
  $738 -> $058 (backward jump)
  $7AC -> $5C9 (backward jump)
  $7D8 -> $734 (backward jump)
  $7DE -> $137 (backward jump)
  $7EE -> $70E (backward jump)
  $812 -> $456 (backward jump)
  $83A -> $312 (backward jump)
  $840 -> $4F7 (backward jump)
  $842 -> $1FC (backward jump)
  $8A8 -> $14A (backward jump)
  $8B4 -> $5F6 (backward jump)
  $8D8 -> $082 (backward jump)
  $8E0 -> $347 (backward jump)
  $8E2 -> $0DD (backward jump)
  $8F0 -> $6AA (backward jump)
  $922 -> $5B1 (backward jump)
  $926 -> $4A3 (backward jump)
  $952 -> $4ED (backward jump)
  $998 -> $223 (backward jump)
  $9DC -> $7E2 (backward jump)
  $9DE -> $0DA (backward jump)
  $A00 -> $2B3 (backward jump)
  $A0C -> $0FD (backward jump)
  $A10 -> $7EC (backward jump)
  $A52 -> $452 (backward jump)
  $A60 -> $536 (backward jump)
  $A72 -> $447 (backward jump)
  $A84 -> $186 (backward jump)
  $AE2 -> $548 (backward jump)
  $B42 -> $6AB (backward jump)
  $B84 -> $0A5 (backward jump)
  $B86 -> $A2E (backward jump)
  $BB2 -> $36F (backward jump)
  $BBA -> $453 (backward jump)
  $BBE -> $B38 (backward jump)
  $BD4 -> $3CF (backward jump)
  $C0C -> $495 (backward jump)
  $C16 -> $3A9 (backward jump)
  $C1C -> $9ED (backward jump)
  $C50 -> $1CB (backward jump)
  $C5E -> $AD7 (backward jump)
  $C86 -> $319 (backward jump)
  $C88 -> $AEC (backward jump)
  $C8E -> $0A3 (backward jump)
  $C98 -> $9D6 (backward jump)
  $CAA -> $2C0 (backward jump)
  $CAE -> $313 (backward jump)
  $CB6 -> $05E (backward jump)
  $CEC -> $498 (backward jump)
  $CF6 -> $B5C (backward jump)
  $D18 -> $1B0 (backward jump)
  $D1C -> $966 (backward jump)
  $D3A -> $4E8 (backward jump)
  $D3E -> $9C4 (backward jump)
  $D40 -> $50D (backward jump)
  $D46 -> $AD9 (backward jump)
  $D48 -> $5A6 (backward jump)
  $D54 -> $56F (backward jump)
  $D5C -> $50F (backward jump)
  $D66 -> $227 (backward jump)
  $D72 -> $875 (backward jump)
  $D74 -> $B46 (backward jump)
  $DA4 -> $6DA (backward jump)
  $DB2 -> $B03 (backward jump)
  $DB8 -> $774 (backward jump)
  $DBE -> $137 (backward jump)
  $DCA -> $550 (backward jump)
  $DD8 -> $1EE (backward jump)
  $DE4 -> $49E (backward jump)
  $E00 -> $39F (backward jump)
  $E04 -> $D15 (backward jump)
  $E14 -> $D2D (backward jump)
  $E3E -> $1EC (backward jump)
  $E6C -> $4BC (backward jump)
  $E78 -> $D13 (backward jump)
  $E8A -> $6A7 (backward jump)
  $EBC -> $0CC (backward jump)
  $EC0 -> $8C3 (backward jump)
  $EC2 -> $374 (backward jump)
  $F14 -> $019 (backward jump)
  $F16 -> $9AD (backward jump)
  $F1A -> $D01 (backward jump)
  $F1E -> $4E7 (backward jump)
  $F26 -> $CF7 (backward jump)
  $F32 -> $9B0 (backward jump)
  $F3C -> $AB3 (backward jump)
  $F48 -> $2B8 (backward jump)
  $F54 -> $CC6 (backward jump)
  $F56 -> $852 (backward jump)
  $F72 -> $2A8 (backward jump)
  $F98 -> $C70 (backward jump)
  $FA2 -> $9E3 (backward jump)
  $FB4 -> $7A6 (backward jump)
  $FB6 -> $7CB (backward jump)
  $FBC -> $DBB (backward jump)
  $FC8 -> $1D3 (backward jump)
  $FE4 -> $316 (backward jump)
  $FEC -> $C1C (backward jump)
  $FF2 -> $104 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $7244   ADD      V2, #44         ; Add 68 to V2
$202    $289D   CALL     $89D            ; Call subroutine at 89D
$204    $D1A5   DRW      V1, VA, #5      ; Draw 5-byte sprite at V1, VA
$206    $8768   UNKNOWN  8768            ; Unknown 8xxx instruction
$208    $DC84   DRW      VC, V8, #4      ; Draw 4-byte sprite at VC, V8
$20A    $7CBD   ADD      VC, #BD         ; Add 189 to VC
$20C    $5F90   SE       VF, V9          ; Skip if VF == V9
$20E    $99D9   UNKNOWN  $99D9           ; Unknown 9xxx instruction
$210    $0F99   SYS      $F99            ; System call to F99
$212    $8A6B   UNKNOWN  8A6B            ; Unknown 8xxx instruction
$214    $C7C1   RND      V7, #C1         ; V7 = random & C1
$216    $9658   UNKNOWN  $9658           ; Unknown 9xxx instruction
$218    $D7E9   DRW      V7, VE, #9      ; Draw 9-byte sprite at V7, VE
$21A    $4030   SNE      V0, #30         ; Skip if V0 != 48
$21C    $5AD4   UNKNOWN  $5AD4           ; Unknown 5xxx instruction
$21E    $56A1   UNKNOWN  $56A1           ; Unknown 5xxx instruction
$220    $6BF3   LD       VB, #F3         ; Load 243 into VB
$222    $6E68   LD       VE, #68         ; Load 104 into VE
$224    $0AE5   SYS      $AE5            ; System call to AE5
$226    $FF4C   UNKNOWN  FF4C            ; Unknown Fxxx instruction
$228    $689E   LD       V8, #9E         ; Load 158 into V8
$22A    $6CC9   LD       VC, #C9         ; Load 201 into VC
$22C    $1B55   JP       $B55            ; Jump to B55
$22E    $AB5E   LD       I, $B5E         ; Load B5E into I
$230    $C22D   RND      V2, #2D         ; V2 = random & 2D
$232    $4C73   SNE      VC, #73         ; Skip if VC != 115
$234    $0468   SYS      $468            ; System call to 468
$236    $AF65   LD       I, $F65         ; Load F65 into I
$238    $2A67   CALL     $A67            ; Call subroutine at A67
$23A    $668C   LD       V6, #8C         ; Load 140 into V6
$23C    $B8AB   JP       V0, $8AB        ; Jump to V0 + 8AB
$23E    $0FF4   SYS      $FF4            ; System call to FF4
$240    $B955   JP       V0, $955        ; Jump to V0 + 955
$242    $6977   LD       V9, #77         ; Load 119 into V9
$244    $DA70   DRW      VA, V7, #0      ; Draw 0-byte sprite at VA, V7
$246    $E365   UNKNOWN  $E365           ; Unknown Exxx instruction
$248    $9ACA   UNKNOWN  $9ACA           ; Unknown 9xxx instruction
$24A    $2EC0   CALL     $EC0            ; Call subroutine at EC0
$24C    $6D20   LD       VD, #20         ; Load 32 into VD
$24E    $94FC   UNKNOWN  $94FC           ; Unknown 9xxx instruction
$250    $F7B3   UNKNOWN  F7B3            ; Unknown Fxxx instruction
$252    $311B   SE       V1, #1B         ; Skip if V1 == 27
$254    $2AFC   CALL     $AFC            ; Call subroutine at AFC
$256    $5AC9   UNKNOWN  $5AC9           ; Unknown 5xxx instruction
$258    $C91B   RND      V9, #1B         ; V9 = random & 1B
$25A    $FD98   UNKNOWN  FD98            ; Unknown Fxxx instruction
$25C    $705D   ADD      V0, #5D         ; Add 93 to V0
$25E    $0591   SYS      $591            ; System call to 591
$260    $F40F   UNKNOWN  F40F            ; Unknown Fxxx instruction
$262    $DF70   DRW      VF, V7, #0      ; Draw 0-byte sprite at VF, V7
$264    $EEE7   UNKNOWN  $EEE7           ; Unknown Exxx instruction
$266    $C028   RND      V0, #28         ; V0 = random & 28
$268    $C916   RND      V9, #16         ; V9 = random & 16
$26A    $73EA   ADD      V3, #EA         ; Add 234 to V3
$26C    $2C6C   CALL     $C6C            ; Call subroutine at C6C
$26E    $5E62   UNKNOWN  $5E62           ; Unknown 5xxx instruction
$270    $412F   SNE      V1, #2F         ; Skip if V1 != 47
$272    $8CE9   UNKNOWN  8CE9            ; Unknown 8xxx instruction
$274    $6A28   LD       VA, #28         ; Load 40 into VA
$276    $064B   SYS      $64B            ; System call to 64B
$278    $CC5E   RND      VC, #5E         ; VC = random & 5E
$27A    $ADFF   LD       I, $DFF         ; Load DFF into I
$27C    $9693   UNKNOWN  $9693           ; Unknown 9xxx instruction
$27E    $9F3F   UNKNOWN  $9F3F           ; Unknown 9xxx instruction
$280    $4941   SNE      V9, #41         ; Skip if V9 != 65
$282    $24A2   CALL     $4A2            ; Call subroutine at 4A2
$284    $87C2   AND      V7, VC          ; V7 &= VC
$286    $75F7   ADD      V5, #F7         ; Add 247 to V5
$288    $4D08   SNE      VD, #08         ; Skip if VD != 8
$28A    $0235   SYS      $235            ; System call to 235
$28C    $6174   LD       V1, #74         ; Load 116 into V1
$28E    $F134   UNKNOWN  F134            ; Unknown Fxxx instruction
$290    $7B62   ADD      VB, #62         ; Add 98 to VB
$292    $FFB9   UNKNOWN  FFB9            ; Unknown Fxxx instruction
$294    $A21A   LD       I, $21A         ; Load 21A into I
$296    $E9E7   UNKNOWN  $E9E7           ; Unknown Exxx instruction
$298    $284B   CALL     $84B            ; Call subroutine at 84B
$29A    $5747   UNKNOWN  $5747           ; Unknown 5xxx instruction
$29C    $164B   JP       $64B            ; Jump to 64B
$29E    $B7E0   JP       V0, $7E0        ; Jump to V0 + 7E0
$2A0    $2246   CALL     $246            ; Call subroutine at 246
$2A2    $C0FD   RND      V0, #FD         ; V0 = random & FD
$2A4    $D69B   DRW      V6, V9, #B      ; Draw 11-byte sprite at V6, V9
$2A6    $4D27   SNE      VD, #27         ; Skip if VD != 39
$2A8    $02B1   SYS      $2B1            ; System call to 2B1
$2AA    $B5F1   JP       V0, $5F1        ; Jump to V0 + 5F1
$2AC    $44C8   SNE      V4, #C8         ; Skip if V4 != 200
$2AE    $8B0D   UNKNOWN  8B0D            ; Unknown 8xxx instruction
$2B0    $6657   LD       V6, #57         ; Load 87 into V6
$2B2    $D8AD   DRW      V8, VA, #D      ; Draw 13-byte sprite at V8, VA
$2B4    $D867   DRW      V8, V6, #7      ; Draw 7-byte sprite at V8, V6
$2B6    $86DE   SHL      V6              ; V6 <<= 1, VF = MSB
$2B8    $1EBD   JP       $EBD            ; Jump to EBD
$2BA    $D6F3   DRW      V6, VF, #3      ; Draw 3-byte sprite at V6, VF
$2BC    $2F21   CALL     $F21            ; Call subroutine at F21
$2BE    $7D8E   ADD      VD, #8E         ; Add 142 to VD
$2C0    $7112   ADD      V1, #12         ; Add 18 to V1
$2C2    $700E   ADD      V0, #0E         ; Add 14 to V0
$2C4    $7A09   ADD      VA, #09         ; Add 9 to VA
$2C6    $81DD   UNKNOWN  81DD            ; Unknown 8xxx instruction
$2C8    $C164   RND      V1, #64         ; V1 = random & 64
$2CA    $CFE3   RND      VF, #E3         ; VF = random & E3
$2CC    $983D   UNKNOWN  $983D           ; Unknown 9xxx instruction
$2CE    $2692   CALL     $692            ; Call subroutine at 692
$2D0    $894A   UNKNOWN  894A            ; Unknown 8xxx instruction
$2D2    $116A   JP       $16A            ; Jump to 16A
$2D4    $45EE   SNE      V5, #EE         ; Skip if V5 != 238
$2D6    $CABD   RND      VA, #BD         ; VA = random & BD
$2D8    $8097   SUBN     V0, V9          ; V0 = V9 - V0, VF = !borrow
$2DA    $8073   XOR      V0, V7          ; V0 ^= V7
$2DC    $D22E   DRW      V2, V2, #E      ; Draw 14-byte sprite at V2, V2
$2DE    $1D68   JP       $D68            ; Jump to D68
$2E0    $CFDF   RND      VF, #DF         ; VF = random & DF
$2E2    $239E   CALL     $39E            ; Call subroutine at 39E
$2E4    $5F6F   UNKNOWN  $5F6F           ; Unknown 5xxx instruction
$2E6    $652A   LD       V5, #2A         ; Load 42 into V5
$2E8    $706F   ADD      V0, #6F         ; Add 111 to V0
$2EA    $0176   SYS      $176            ; System call to 176
$2EC    $0B33   SYS      $B33            ; System call to B33
$2EE    $A095   LD       I, $095         ; Load 095 into I
$2F0    $15B9   JP       $5B9            ; Jump to 5B9
$2F2    $9852   UNKNOWN  $9852           ; Unknown 9xxx instruction
$2F4    $4484   SNE      V4, #84         ; Skip if V4 != 132
$2F6    $6EB3   LD       VE, #B3         ; Load 179 into VE
$2F8    $198D   JP       $98D            ; Jump to 98D
$2FA    $9EBC   UNKNOWN  $9EBC           ; Unknown 9xxx instruction
$2FC    $6615   LD       V6, #15         ; Load 21 into V6
$2FE    $1204   JP       $204            ; Jump to 204
$302    $0038   SYS      $038            ; System call to 038
$304    $3F5E   SE       VF, #5E         ; Skip if VF == 94
$306    $9191   UNKNOWN  $9191           ; Unknown 9xxx instruction
$308    $4D86   SNE      VD, #86         ; Skip if VD != 134
$30A    $489F   SNE      V8, #9F         ; Skip if V8 != 159
$30C    $0B6B   SYS      $B6B            ; System call to B6B
$30E    $4A08   SNE      VA, #08         ; Skip if VA != 8
$310    $073F   SYS      $73F            ; System call to 73F
$312    $D62A   DRW      V6, V2, #A      ; Draw 10-byte sprite at V6, V2
$314    $1F89   JP       $F89            ; Jump to F89
$316    $22FD   CALL     $2FD            ; Call subroutine at 2FD
$318    $33E1   SE       V3, #E1         ; Skip if V3 == 225
$31A    $8230   LD       V2, V3          ; V2 = V3
$31C    $2BE4   CALL     $BE4            ; Call subroutine at BE4
$31E    $E56F   UNKNOWN  $E56F           ; Unknown Exxx instruction
$320    $0783   SYS      $783            ; System call to 783
$322    $49ED   SNE      V9, #ED         ; Skip if V9 != 237
$324    $814C   UNKNOWN  814C            ; Unknown 8xxx instruction
$326    $9CAD   UNKNOWN  $9CAD           ; Unknown 9xxx instruction
$328    $3643   SE       V6, #43         ; Skip if V6 == 67
$32A    $1E19   JP       $E19            ; Jump to E19
$32C    $97AF   UNKNOWN  $97AF           ; Unknown 9xxx instruction
$32E    $AFA7   LD       I, $FA7         ; Load FA7 into I
$330    $35E8   SE       V5, #E8         ; Skip if V5 == 232
$332    $A931   LD       I, $931         ; Load 931 into I
$334    $4F32   SNE      VF, #32         ; Skip if VF != 50
$336    $37E2   SE       V7, #E2         ; Skip if V7 == 226
$338    $2A89   CALL     $A89            ; Call subroutine at A89
$33A    $5A98   UNKNOWN  $5A98           ; Unknown 5xxx instruction
$33C    $2954   CALL     $954            ; Call subroutine at 954
$33E    $9558   UNKNOWN  $9558           ; Unknown 9xxx instruction
$340    $D822   DRW      V8, V2, #2      ; Draw 2-byte sprite at V8, V2
$342    $2793   CALL     $793            ; Call subroutine at 793
$344    $5BD6   UNKNOWN  $5BD6           ; Unknown 5xxx instruction
$346    $DD24   DRW      VD, V2, #4      ; Draw 4-byte sprite at VD, V2
$348    $44C8   SNE      V4, #C8         ; Skip if V4 != 200
$34A    $5EC9   UNKNOWN  $5EC9           ; Unknown 5xxx instruction
$34C    $643C   LD       V4, #3C         ; Load 60 into V4
$34E    $EE0C   UNKNOWN  $EE0C           ; Unknown Exxx instruction
$350    $8369   UNKNOWN  8369            ; Unknown 8xxx instruction
$352    $C381   RND      V3, #81         ; V3 = random & 81
$354    $63CA   LD       V3, #CA         ; Load 202 into V3
$356    $3AF9   SE       VA, #F9         ; Skip if VA == 249
$358    $D875   DRW      V8, V7, #5      ; Draw 5-byte sprite at V8, V7
$35A    $5E0B   UNKNOWN  $5E0B           ; Unknown 5xxx instruction
$35C    $C709   RND      V7, #09         ; V7 = random & 09
$35E    $552F   UNKNOWN  $552F           ; Unknown 5xxx instruction
$360    $760F   ADD      V6, #0F         ; Add 15 to V6
$362    $3D05   SE       VD, #05         ; Skip if VD == 5
$364    $9114   UNKNOWN  $9114           ; Unknown 9xxx instruction
$366    $409A   SNE      V0, #9A         ; Skip if V0 != 154
$368    $F318   LD       ST, V3          ; Sound timer = V3
$36A    $40FD   SNE      V0, #FD         ; Skip if V0 != 253
$36C    $5A85   UNKNOWN  $5A85           ; Unknown 5xxx instruction
$36E    $5ED7   UNKNOWN  $5ED7           ; Unknown 5xxx instruction
$370    $DAB9   DRW      VA, VB, #9      ; Draw 9-byte sprite at VA, VB
$372    $0D6F   SYS      $D6F            ; System call to D6F
$374    $5FC6   UNKNOWN  $5FC6           ; Unknown 5xxx instruction
$376    $6A52   LD       VA, #52         ; Load 82 into VA
$378    $FD85   UNKNOWN  FD85            ; Unknown Fxxx instruction
$37A    $1DA5   JP       $DA5            ; Jump to DA5
$37C    $D387   DRW      V3, V8, #7      ; Draw 7-byte sprite at V3, V8
$37E    $BF80   JP       V0, $F80        ; Jump to V0 + F80
$380    $2648   CALL     $648            ; Call subroutine at 648
$382    $5A28   UNKNOWN  $5A28           ; Unknown 5xxx instruction
$384    $C414   RND      V4, #14         ; V4 = random & 14
$386    $86AE   SHL      V6              ; V6 <<= 1, VF = MSB
$388    $AC6C   LD       I, $C6C         ; Load C6C into I
$38A    $59AB   UNKNOWN  $59AB           ; Unknown 5xxx instruction
$38C    $B09C   JP       V0, $09C        ; Jump to V0 + 09C
$38E    $85BA   UNKNOWN  85BA            ; Unknown 8xxx instruction
$390    $48A2   SNE      V8, #A2         ; Skip if V8 != 162
$392    $3ED9   SE       VE, #D9         ; Skip if VE == 217
$394    $9989   UNKNOWN  $9989           ; Unknown 9xxx instruction
$396    $0F7D   SYS      $F7D            ; System call to F7D
$398    $E6C1   UNKNOWN  $E6C1           ; Unknown Exxx instruction
$39A    $8685   SUB      V6, V8          ; V6 -= V8, VF = !borrow
$39C    $1007   JP       $007            ; Jump to 007
$39E    $31B4   SE       V1, #B4         ; Skip if V1 == 180
$3A0    $4855   SNE      V8, #55         ; Skip if V8 != 85
$3A2    $2C27   CALL     $C27            ; Call subroutine at C27
$3A4    $F26D   UNKNOWN  F26D            ; Unknown Fxxx instruction
$3A6    $95BB   UNKNOWN  $95BB           ; Unknown 9xxx instruction
$3A8    $827A   UNKNOWN  827A            ; Unknown 8xxx instruction
$3AA    $14B3   JP       $4B3            ; Jump to 4B3
$3AC    $0244   SYS      $244            ; System call to 244
$3AE    $F60B   UNKNOWN  F60B            ; Unknown Fxxx instruction
$3B0    $3AAD   SE       VA, #AD         ; Skip if VA == 173
$3B2    $B33E   JP       V0, $33E        ; Jump to V0 + 33E
$3B4    $2150   CALL     $150            ; Call subroutine at 150
$3B6    $253D   CALL     $53D            ; Call subroutine at 53D
$3B8    $75E4   ADD      V5, #E4         ; Add 228 to V5
$3BA    $457A   SNE      V5, #7A         ; Skip if V5 != 122
$3BC    $33A5   SE       V3, #A5         ; Skip if V3 == 165
$3BE    $4B2B   SNE      VB, #2B         ; Skip if VB != 43
$3C0    $D017   DRW      V0, V1, #7      ; Draw 7-byte sprite at V0, V1
$3C2    $F959   UNKNOWN  F959            ; Unknown Fxxx instruction
$3C4    $4101   SNE      V1, #01         ; Skip if V1 != 1
$3C6    $69B5   LD       V9, #B5         ; Load 181 into V9
$3C8    $7B08   ADD      VB, #08         ; Add 8 to VB
$3CA    $5C4D   UNKNOWN  $5C4D           ; Unknown 5xxx instruction
$3CC    $79AF   ADD      V9, #AF         ; Add 175 to V9
$3CE    $0AA9   SYS      $AA9            ; System call to AA9
$3D0    $0806   SYS      $806            ; System call to 806
$3D2    $3F67   SE       VF, #67         ; Skip if VF == 103
$3D4    $E3AB   UNKNOWN  $E3AB           ; Unknown Exxx instruction
$3D6    $334E   SE       V3, #4E         ; Skip if V3 == 78
$3D8    $198D   JP       $98D            ; Jump to 98D
$3DA    $BD79   JP       V0, $D79        ; Jump to V0 + D79
$3DC    $7B92   ADD      VB, #92         ; Add 146 to VB
$3DE    $F228   UNKNOWN  F228            ; Unknown Fxxx instruction
$3E0    $BB66   JP       V0, $B66        ; Jump to V0 + B66
$3E2    $8AB0   LD       VA, VB          ; VA = VB
$3E4    $B2E6   JP       V0, $2E6        ; Jump to V0 + 2E6
$3E6    $E833   UNKNOWN  $E833           ; Unknown Exxx instruction
$3E8    $CFD9   RND      VF, #D9         ; VF = random & D9
$3EA    $DEE2   DRW      VE, VE, #2      ; Draw 2-byte sprite at VE, VE
$3EC    $2C78   CALL     $C78            ; Call subroutine at C78
$3EE    $F6F9   UNKNOWN  F6F9            ; Unknown Fxxx instruction
$3F0    $CB0D   RND      VB, #0D         ; VB = random & 0D
$3F2    $3552   SE       V5, #52         ; Skip if V5 == 82
$3F4    $C2E4   RND      V2, #E4         ; V2 = random & E4
$3F6    $D1A0   DRW      V1, VA, #0      ; Draw 0-byte sprite at V1, VA
$3F8    $424D   SNE      V2, #4D         ; Skip if V2 != 77
$3FA    $1C6C   JP       $C6C            ; Jump to C6C
$3FC    $0D09   SYS      $D09            ; System call to D09
$3FE    $46F3   SNE      V6, #F3         ; Skip if V6 != 243
$400    $D61E   DRW      V6, V1, #E      ; Draw 14-byte sprite at V6, V1
$402    $1D9E   JP       $D9E            ; Jump to D9E
$404    $9714   UNKNOWN  $9714           ; Unknown 9xxx instruction
$406    $ED12   UNKNOWN  $ED12           ; Unknown Exxx instruction
$408    $3731   SE       V7, #31         ; Skip if V7 == 49
$40A    $8B30   LD       VB, V3          ; VB = V3
$40C    $AABA   LD       I, $ABA         ; Load ABA into I
$40E    $3526   SE       V5, #26         ; Skip if V5 == 38
$410    $A8EF   LD       I, $8EF         ; Load 8EF into I
$412    $DDCD   DRW      VD, VC, #D      ; Draw 13-byte sprite at VD, VC
$414    $93E6   UNKNOWN  $93E6           ; Unknown 9xxx instruction
$416    $4FF8   SNE      VF, #F8         ; Skip if VF != 248
$418    $BF4D   JP       V0, $F4D        ; Jump to V0 + F4D
$41A    $C7C0   RND      V7, #C0         ; V7 = random & C0
$41C    $65F6   LD       V5, #F6         ; Load 246 into V5
$41E    $FB18   LD       ST, VB          ; Sound timer = VB
$420    $E64D   UNKNOWN  $E64D           ; Unknown Exxx instruction
$422    $84D7   SUBN     V4, VD          ; V4 = VD - V4, VF = !borrow
$424    $E500   UNKNOWN  $E500           ; Unknown Exxx instruction
$426    $6BDA   LD       VB, #DA         ; Load 218 into VB
$428    $52D2   UNKNOWN  $52D2           ; Unknown 5xxx instruction
$42A    $14A6   JP       $4A6            ; Jump to 4A6
$42C    $A73E   LD       I, $73E         ; Load 73E into I
$42E    $F6CA   UNKNOWN  F6CA            ; Unknown Fxxx instruction
$430    $1305   JP       $305            ; Jump to 305
$432    $3194   SE       V1, #94         ; Skip if V1 == 148
$434    $5F62   UNKNOWN  $5F62           ; Unknown 5xxx instruction
$436    $EBDE   UNKNOWN  $EBDE           ; Unknown Exxx instruction
$438    $E30E   UNKNOWN  $E30E           ; Unknown Exxx instruction
$43A    $8DBB   UNKNOWN  8DBB            ; Unknown 8xxx instruction
$43C    $D641   DRW      V6, V4, #1      ; Draw 1-byte sprite at V6, V4
$43E    $0F69   SYS      $F69            ; System call to F69
$440    $C8DB   RND      V8, #DB         ; V8 = random & DB
$442    $A8A2   LD       I, $8A2         ; Load 8A2 into I
$444    $28B8   CALL     $8B8            ; Call subroutine at 8B8
$446    $6AE5   LD       VA, #E5         ; Load 229 into VA
$448    $8334   ADD      V3, V3          ; V3 += V3, VF = carry
$44A    $3F3B   SE       VF, #3B         ; Skip if VF == 59
$44C    $5872   UNKNOWN  $5872           ; Unknown 5xxx instruction
$44E    $C54A   RND      V5, #4A         ; V5 = random & 4A
$450    $8670   LD       V6, V7          ; V6 = V7
$452    $4CC6   SNE      VC, #C6         ; Skip if VC != 198
$454    $253D   CALL     $53D            ; Call subroutine at 53D
$456    $2080   CALL     $080            ; Call subroutine at 080
$458    $53E4   UNKNOWN  $53E4           ; Unknown 5xxx instruction
$45A    $4E47   SNE      VE, #47         ; Skip if VE != 71
$45C    $FBA2   UNKNOWN  FBA2            ; Unknown Fxxx instruction
$45E    $F636   UNKNOWN  F636            ; Unknown Fxxx instruction
$460    $D109   DRW      V1, V0, #9      ; Draw 9-byte sprite at V1, V0
$462    $949D   UNKNOWN  $949D           ; Unknown 9xxx instruction
$464    $7DBD   ADD      VD, #BD         ; Add 189 to VD
$466    $EDA9   UNKNOWN  $EDA9           ; Unknown Exxx instruction
$468    $1B6A   JP       $B6A            ; Jump to B6A
$46A    $CB64   RND      VB, #64         ; VB = random & 64
$46C    $BC51   JP       V0, $C51        ; Jump to V0 + C51
$46E    $4E2E   SNE      VE, #2E         ; Skip if VE != 46
$470    $88CF   UNKNOWN  88CF            ; Unknown 8xxx instruction
$472    $47BB   SNE      V7, #BB         ; Skip if V7 != 187
$474    $E5BC   UNKNOWN  $E5BC           ; Unknown Exxx instruction
$476    $1E5D   JP       $E5D            ; Jump to E5D
$478    $F84F   UNKNOWN  F84F            ; Unknown Fxxx instruction
$47A    $DD76   DRW      VD, V7, #6      ; Draw 6-byte sprite at VD, V7
$47C    $FE26   UNKNOWN  FE26            ; Unknown Fxxx instruction
$47E    $B5C5   JP       V0, $5C5        ; Jump to V0 + 5C5
$480    $E0B9   UNKNOWN  $E0B9           ; Unknown Exxx instruction
$482    $3BF7   SE       VB, #F7         ; Skip if VB == 247
$484    $3A93   SE       VA, #93         ; Skip if VA == 147
$486    $85FF   UNKNOWN  85FF            ; Unknown 8xxx instruction
$488    $9160   SNE      V1, V6          ; Skip if V1 != V6
$48A    $4C39   SNE      VC, #39         ; Skip if VC != 57
$48C    $A228   LD       I, $228         ; Load 228 into I
$48E    $1A61   JP       $A61            ; Jump to A61
$490    $ED9D   UNKNOWN  $ED9D           ; Unknown Exxx instruction
$492    $AB23   LD       I, $B23         ; Load B23 into I
$494    $EE38   UNKNOWN  $EE38           ; Unknown Exxx instruction
$496    $36AC   SE       V6, #AC         ; Skip if V6 == 172
$498    $8933   XOR      V9, V3          ; V9 ^= V3
$49A    $EF79   UNKNOWN  $EF79           ; Unknown Exxx instruction
$49C    $E677   UNKNOWN  $E677           ; Unknown Exxx instruction
$49E    $0F59   SYS      $F59            ; System call to F59
$4A0    $E9C3   UNKNOWN  $E9C3           ; Unknown Exxx instruction
$4A2    $30F3   SE       V0, #F3         ; Skip if V0 == 243
$4A4    $8AC0   LD       VA, VC          ; VA = VC
$4A6    $3C6D   SE       VC, #6D         ; Skip if VC == 109
$4A8    $5462   UNKNOWN  $5462           ; Unknown 5xxx instruction
$4AA    $DDC9   DRW      VD, VC, #9      ; Draw 9-byte sprite at VD, VC
$4AC    $3D28   SE       VD, #28         ; Skip if VD == 40
$4AE    $D891   DRW      V8, V9, #1      ; Draw 1-byte sprite at V8, V9
$4B0    $B154   JP       V0, $154        ; Jump to V0 + 154
$4B2    $384B   SE       V8, #4B         ; Skip if V8 == 75
$4B4    $01CE   SYS      $1CE            ; System call to 1CE
$4B6    $0B03   SYS      $B03            ; System call to B03
$4B8    $038D   SYS      $38D            ; System call to 38D
$4BA    $6362   LD       V3, #62         ; Load 98 into V3
$4BC    $AE69   LD       I, $E69         ; Load E69 into I
$4BE    $4AB3   SNE      VA, #B3         ; Skip if VA != 179
$4C0    $4FBA   SNE      VF, #BA         ; Skip if VF != 186
$4C2    $FE1D   UNKNOWN  FE1D            ; Unknown Fxxx instruction
$4C4    $2911   CALL     $911            ; Call subroutine at 911
$4C6    $8DCA   UNKNOWN  8DCA            ; Unknown 8xxx instruction
$4C8    $6518   LD       V5, #18         ; Load 24 into V5
$4CA    $27D3   CALL     $7D3            ; Call subroutine at 7D3
$4CC    $1E26   JP       $E26            ; Jump to E26
$4CE    $1FD1   JP       $FD1            ; Jump to FD1
$4D0    $A3CF   LD       I, $3CF         ; Load 3CF into I
$4D2    $F52C   UNKNOWN  F52C            ; Unknown Fxxx instruction
$4D4    $33A0   SE       V3, #A0         ; Skip if V3 == 160
$4D6    $99F4   UNKNOWN  $99F4           ; Unknown 9xxx instruction
$4D8    $784C   ADD      V8, #4C         ; Add 76 to V8
$4DA    $BCEC   JP       V0, $CEC        ; Jump to V0 + CEC
$4DC    $CDFF   RND      VD, #FF         ; VD = random & FF
$4DE    $BB42   JP       V0, $B42        ; Jump to V0 + B42
$4E0    $41A1   SNE      V1, #A1         ; Skip if V1 != 161
$4E2    $7905   ADD      V9, #05         ; Add 5 to V9
$4E4    $F06F   UNKNOWN  F06F            ; Unknown Fxxx instruction
$4E6    $AA0E   LD       I, $A0E         ; Load A0E into I
$4E8    $3C7E   SE       VC, #7E         ; Skip if VC == 126
$4EA    $51BB   UNKNOWN  $51BB           ; Unknown 5xxx instruction
$4EC    $EE20   UNKNOWN  $EE20           ; Unknown Exxx instruction
$4EE    $87E4   ADD      V7, VE          ; V7 += VE, VF = carry
$4F0    $1A98   JP       $A98            ; Jump to A98
$4F2    $38FF   SE       V8, #FF         ; Skip if V8 == 255
$4F4    $0E76   SYS      $E76            ; System call to E76
$4F6    $7A1A   ADD      VA, #1A         ; Add 26 to VA
$4F8    $A5FE   LD       I, $5FE         ; Load 5FE into I
$4FA    $29B0   CALL     $9B0            ; Call subroutine at 9B0
$4FC    $5DAF   UNKNOWN  $5DAF           ; Unknown 5xxx instruction
$4FE    $72E7   ADD      V2, #E7         ; Add 231 to V2
$500    $F0A7   UNKNOWN  F0A7            ; Unknown Fxxx instruction
$502    $CD21   RND      VD, #21         ; VD = random & 21
$504    $4177   SNE      V1, #77         ; Skip if V1 != 119
$506    $74AB   ADD      V4, #AB         ; Add 171 to V4
$508    $184E   JP       $84E            ; Jump to 84E
$50A    $C0E5   RND      V0, #E5         ; V0 = random & E5
$50C    $4829   SNE      V8, #29         ; Skip if V8 != 41
$50E    $826A   UNKNOWN  826A            ; Unknown 8xxx instruction
$510    $CB2B   RND      VB, #2B         ; VB = random & 2B
$512    $3BF1   SE       VB, #F1         ; Skip if VB == 241
$514    $3448   SE       V4, #48         ; Skip if V4 == 72
$516    $65CE   LD       V5, #CE         ; Load 206 into V5
$518    $0B28   SYS      $B28            ; System call to B28
$51A    $6DEC   LD       VD, #EC         ; Load 236 into VD
$51C    $79A1   ADD      V9, #A1         ; Add 161 to V9
$51E    $3242   SE       V2, #42         ; Skip if V2 == 66
$520    $9ACF   UNKNOWN  $9ACF           ; Unknown 9xxx instruction
$522    $73FE   ADD      V3, #FE         ; Add 254 to V3
$524    $A302   LD       I, $302         ; Load 302 into I
$526    $8CFD   UNKNOWN  8CFD            ; Unknown 8xxx instruction
$528    $FA97   UNKNOWN  FA97            ; Unknown Fxxx instruction
$52A    $9406   UNKNOWN  $9406           ; Unknown 9xxx instruction
$52C    $9660   SNE      V6, V6          ; Skip if V6 != V6
$52E    $CD0E   RND      VD, #0E         ; VD = random & 0E
$530    $9045   UNKNOWN  $9045           ; Unknown 9xxx instruction
$532    $C9AE   RND      V9, #AE         ; V9 = random & AE
$534    $FCD1   UNKNOWN  FCD1            ; Unknown Fxxx instruction
$536    $A440   LD       I, $440         ; Load 440 into I
$538    $3F3F   SE       VF, #3F         ; Skip if VF == 63
$53A    $604A   LD       V0, #4A         ; Load 74 into V0
$53C    $8D3F   UNKNOWN  8D3F            ; Unknown 8xxx instruction
$53E    $2FFC   CALL     $FFC            ; Call subroutine at FFC
$540    $62DB   LD       V2, #DB         ; Load 219 into V2
$542    $A796   LD       I, $796         ; Load 796 into I
$544    $4B84   SNE      VB, #84         ; Skip if VB != 132
$546    $E602   UNKNOWN  $E602           ; Unknown Exxx instruction
$548    $4AE5   SNE      VA, #E5         ; Skip if VA != 229
$54A    $3AEF   SE       VA, #EF         ; Skip if VA == 239
$54C    $EAD4   UNKNOWN  $EAD4           ; Unknown Exxx instruction
$54E    $CDA5   RND      VD, #A5         ; VD = random & A5
$550    $071A   SYS      $71A            ; System call to 71A
$552    $7C98   ADD      VC, #98         ; Add 152 to VC
$554    $4514   SNE      V5, #14         ; Skip if V5 != 20
$556    $E875   UNKNOWN  $E875           ; Unknown Exxx instruction
$558    $D9FF   DRW      V9, VF, #F      ; Draw 15-byte sprite at V9, VF
$55A    $ABE8   LD       I, $BE8         ; Load BE8 into I
$55C    $123D   JP       $23D            ; Jump to 23D
$55E    $3FE8   SE       VF, #E8         ; Skip if VF == 232
$560    $136B   JP       $36B            ; Jump to 36B
$562    $FB3F   UNKNOWN  FB3F            ; Unknown Fxxx instruction
$564    $5574   UNKNOWN  $5574           ; Unknown 5xxx instruction
$566    $419C   SNE      V1, #9C         ; Skip if V1 != 156
$568    $A101   LD       I, $101         ; Load 101 into I
$56A    $7D52   ADD      VD, #52         ; Add 82 to VD
$56C    $86AB   UNKNOWN  86AB            ; Unknown 8xxx instruction
$56E    $0E6A   SYS      $E6A            ; System call to E6A
$570    $6ECB   LD       VE, #CB         ; Load 203 into VE
$572    $45A2   SNE      V5, #A2         ; Skip if V5 != 162
$574    $C1D6   RND      V1, #D6         ; V1 = random & D6
$576    $4980   SNE      V9, #80         ; Skip if V9 != 128
$578    $DC8E   DRW      VC, V8, #E      ; Draw 14-byte sprite at VC, V8
$57A    $5EBA   UNKNOWN  $5EBA           ; Unknown 5xxx instruction
$57C    $EDD3   UNKNOWN  $EDD3           ; Unknown Exxx instruction
$57E    $A0A6   LD       I, $0A6         ; Load 0A6 into I
$580    $9472   UNKNOWN  $9472           ; Unknown 9xxx instruction
$582    $1787   JP       $787            ; Jump to 787
$584    $BF7D   JP       V0, $F7D        ; Jump to V0 + F7D
$586    $5A75   UNKNOWN  $5A75           ; Unknown 5xxx instruction
$588    $6F7A   LD       VF, #7A         ; Load 122 into VF
$58A    $7C71   ADD      VC, #71         ; Add 113 to VC
$58C    $6EC4   LD       VE, #C4         ; Load 196 into VE
$58E    $6B6B   LD       VB, #6B         ; Load 107 into VB
$590    $C4D4   RND      V4, #D4         ; V4 = random & D4
$592    $AF7E   LD       I, $F7E         ; Load F7E into I
$594    $82E5   SUB      V2, VE          ; V2 -= VE, VF = !borrow
$596    $E16E   UNKNOWN  $E16E           ; Unknown Exxx instruction
$598    $7BBC   ADD      VB, #BC         ; Add 188 to VB
$59A    $FB7F   UNKNOWN  FB7F            ; Unknown Fxxx instruction
$59C    $9B93   UNKNOWN  $9B93           ; Unknown 9xxx instruction
$59E    $765F   ADD      V6, #5F         ; Add 95 to V6
$5A0    $4C8F   SNE      VC, #8F         ; Skip if VC != 143
$5A2    $C382   RND      V3, #82         ; V3 = random & 82
$5A4    $220D   CALL     $20D            ; Call subroutine at 20D
$5A6    $7F1A   ADD      VF, #1A         ; Add 26 to VF
$5A8    $B5DE   JP       V0, $5DE        ; Jump to V0 + 5DE
$5AA    $258F   CALL     $58F            ; Call subroutine at 58F
$5AC    $00C4   SYS      $0C4            ; System call to 0C4
$5AE    $35BC   SE       V5, #BC         ; Skip if V5 == 188
$5B0    $2B31   CALL     $B31            ; Call subroutine at B31
$5B2    $6A2F   LD       VA, #2F         ; Load 47 into VA
$5B4    $B149   JP       V0, $149        ; Jump to V0 + 149
$5B6    $0778   SYS      $778            ; System call to 778
$5B8    $2BD9   CALL     $BD9            ; Call subroutine at BD9
$5BA    $3BCC   SE       VB, #CC         ; Skip if VB == 204
$5BC    $76D8   ADD      V6, #D8         ; Add 216 to V6
$5BE    $5B47   UNKNOWN  $5B47           ; Unknown 5xxx instruction
$5C0    $7F7A   ADD      VF, #7A         ; Add 122 to VF
$5C2    $AE2C   LD       I, $E2C         ; Load E2C into I
$5C4    $63AA   LD       V3, #AA         ; Load 170 into V3
$5C6    $4639   SNE      V6, #39         ; Skip if V6 != 57
$5C8    $F853   UNKNOWN  F853            ; Unknown Fxxx instruction
$5CA    $38F9   SE       V8, #F9         ; Skip if V8 == 249
$5CC    $3241   SE       V2, #41         ; Skip if V2 == 65
$5CE    $3EF9   SE       VE, #F9         ; Skip if VE == 249
$5D0    $7CC5   ADD      VC, #C5         ; Add 197 to VC
$5D2    $68DC   LD       V8, #DC         ; Load 220 into V8
$5D4    $DEAF   DRW      VE, VA, #F      ; Draw 15-byte sprite at VE, VA
$5D6    $9516   UNKNOWN  $9516           ; Unknown 9xxx instruction
$5D8    $B06D   JP       V0, $06D        ; Jump to V0 + 06D
$5DA    $410F   SNE      V1, #0F         ; Skip if V1 != 15
$5DC    $30E4   SE       V0, #E4         ; Skip if V0 == 228
$5DE    $E31E   UNKNOWN  $E31E           ; Unknown Exxx instruction
$5E0    $F8AE   UNKNOWN  F8AE            ; Unknown Fxxx instruction
$5E2    $7C3E   ADD      VC, #3E         ; Add 62 to VC
$5E4    $96B4   UNKNOWN  $96B4           ; Unknown 9xxx instruction
$5E6    $1749   JP       $749            ; Jump to 749
$5E8    $A25B   LD       I, $25B         ; Load 25B into I
$5EA    $84AE   SHL      V4              ; V4 <<= 1, VF = MSB
$5EC    $5489   UNKNOWN  $5489           ; Unknown 5xxx instruction
$5EE    $149D   JP       $49D            ; Jump to 49D
$5F0    $4813   SNE      V8, #13         ; Skip if V8 != 19
$5F2    $2DF4   CALL     $DF4            ; Call subroutine at DF4
$5F4    $38E2   SE       V8, #E2         ; Skip if V8 == 226
$5F6    $9FBF   UNKNOWN  $9FBF           ; Unknown 9xxx instruction
$5F8    $10CB   JP       $0CB            ; Jump to 0CB
$5FA    $3F90   SE       VF, #90         ; Skip if VF == 144
$5FC    $7B2C   ADD      VB, #2C         ; Add 44 to VB
$5FE    $3CF3   SE       VC, #F3         ; Skip if VC == 243
$600    $A304   LD       I, $304         ; Load 304 into I
$602    $4422   SNE      V4, #22         ; Skip if V4 != 34
$604    $40C1   SNE      V0, #C1         ; Skip if V0 != 193
$606    $87F0   LD       V7, VF          ; V7 = VF
$608    $2D35   CALL     $D35            ; Call subroutine at D35
$60A    $B3C8   JP       V0, $3C8        ; Jump to V0 + 3C8
$60C    $0BEA   SYS      $BEA            ; System call to BEA
$60E    $496F   SNE      V9, #6F         ; Skip if V9 != 111
$610    $F9B5   UNKNOWN  F9B5            ; Unknown Fxxx instruction
$612    $AE52   LD       I, $E52         ; Load E52 into I
$614    $66E1   LD       V6, #E1         ; Load 225 into V6
$616    $BC9B   JP       V0, $C9B        ; Jump to V0 + C9B
$618    $2074   CALL     $074            ; Call subroutine at 074
$61A    $114F   JP       $14F            ; Jump to 14F
$61C    $B815   JP       V0, $815        ; Jump to V0 + 815
$61E    $9F57   UNKNOWN  $9F57           ; Unknown 9xxx instruction
$620    $DD9B   DRW      VD, V9, #B      ; Draw 11-byte sprite at VD, V9
$622    $9556   UNKNOWN  $9556           ; Unknown 9xxx instruction
$624    $7A6B   ADD      VA, #6B         ; Add 107 to VA
$626    $5524   UNKNOWN  $5524           ; Unknown 5xxx instruction
$628    $9331   UNKNOWN  $9331           ; Unknown 9xxx instruction
$62A    $6972   LD       V9, #72         ; Load 114 into V9
$62C    $4557   SNE      V5, #57         ; Skip if V5 != 87
$62E    $B251   JP       V0, $251        ; Jump to V0 + 251
$630    $8E56   SHR      VE              ; VE >>= 1, VF = LSB
$632    $A1DB   LD       I, $1DB         ; Load 1DB into I
$634    $33DC   SE       V3, #DC         ; Skip if V3 == 220
$636    $F049   UNKNOWN  F049            ; Unknown Fxxx instruction
$638    $261B   CALL     $61B            ; Call subroutine at 61B
$63A    $BCDD   JP       V0, $CDD        ; Jump to V0 + CDD
$63C    $66E7   LD       V6, #E7         ; Load 231 into V6
$63E    $0258   SYS      $258            ; System call to 258
$640    $F92F   UNKNOWN  F92F            ; Unknown Fxxx instruction
$642    $5F7F   UNKNOWN  $5F7F           ; Unknown 5xxx instruction
$644    $B744   JP       V0, $744        ; Jump to V0 + 744
$646    $4ED8   SNE      VE, #D8         ; Skip if VE != 216
$648    $CCA9   RND      VC, #A9         ; VC = random & A9
$64A    $C238   RND      V2, #38         ; V2 = random & 38
$64C    $4643   SNE      V6, #43         ; Skip if V6 != 67
$64E    $8856   SHR      V8              ; V8 >>= 1, VF = LSB
$650    $978B   UNKNOWN  $978B           ; Unknown 9xxx instruction
$652    $637E   LD       V3, #7E         ; Load 126 into V3
$654    $79F6   ADD      V9, #F6         ; Add 246 to V9
$656    $731C   ADD      V3, #1C         ; Add 28 to V3
$658    $AD20   LD       I, $D20         ; Load D20 into I
$65A    $96B0   SNE      V6, VB          ; Skip if V6 != VB
$65C    $1E0A   JP       $E0A            ; Jump to E0A
$65E    $A786   LD       I, $786         ; Load 786 into I
$660    $F23E   UNKNOWN  F23E            ; Unknown Fxxx instruction
$662    $A6C6   LD       I, $6C6         ; Load 6C6 into I
$664    $FBBF   UNKNOWN  FBBF            ; Unknown Fxxx instruction
$666    $F28C   UNKNOWN  F28C            ; Unknown Fxxx instruction
$668    $D021   DRW      V0, V2, #1      ; Draw 1-byte sprite at V0, V2
$66A    $830C   UNKNOWN  830C            ; Unknown 8xxx instruction
$66C    $AD7B   LD       I, $D7B         ; Load D7B into I
$66E    $0E73   SYS      $E73            ; System call to E73
$670    $3630   SE       V6, #30         ; Skip if V6 == 48
$672    $0752   SYS      $752            ; System call to 752
$674    $239A   CALL     $39A            ; Call subroutine at 39A
$676    $66E4   LD       V6, #E4         ; Load 228 into V6
$678    $11CD   JP       $1CD            ; Jump to 1CD
$67A    $50CA   UNKNOWN  $50CA           ; Unknown 5xxx instruction
$67C    $1C8F   JP       $C8F            ; Jump to C8F
$67E    $B4BC   JP       V0, $4BC        ; Jump to V0 + 4BC
$680    $C8B1   RND      V8, #B1         ; V8 = random & B1
$682    $2479   CALL     $479            ; Call subroutine at 479
$684    $5F53   UNKNOWN  $5F53           ; Unknown 5xxx instruction
$686    $D746   DRW      V7, V4, #6      ; Draw 6-byte sprite at V7, V4
$688    $47C4   SNE      V7, #C4         ; Skip if V7 != 196
$68A    $D6B8   DRW      V6, VB, #8      ; Draw 8-byte sprite at V6, VB
$68C    $356B   SE       V5, #6B         ; Skip if V5 == 107
$68E    $8883   XOR      V8, V8          ; V8 ^= V8
$690    $06AB   SYS      $6AB            ; System call to 6AB
$692    $303D   SE       V0, #3D         ; Skip if V0 == 61
$694    $4F5B   SNE      VF, #5B         ; Skip if VF != 91
$696    $6949   LD       V9, #49         ; Load 73 into V9
$698    $466E   SNE      V6, #6E         ; Skip if V6 != 110
$69A    $B018   JP       V0, $018        ; Jump to V0 + 018
$69C    $6B78   LD       VB, #78         ; Load 120 into VB
$69E    $5C1C   UNKNOWN  $5C1C           ; Unknown 5xxx instruction
$6A0    $56F5   UNKNOWN  $56F5           ; Unknown 5xxx instruction
$6A2    $F9EC   UNKNOWN  F9EC            ; Unknown Fxxx instruction
$6A4    $6668   LD       V6, #68         ; Load 104 into V6
$6A6    $46A8   SNE      V6, #A8         ; Skip if V6 != 168
$6A8    $D196   DRW      V1, V9, #6      ; Draw 6-byte sprite at V1, V9
$6AA    $A01F   LD       I, $01F         ; Load 01F into I
$6AC    $56E5   UNKNOWN  $56E5           ; Unknown 5xxx instruction
$6AE    $33CE   SE       V3, #CE         ; Skip if V3 == 206
$6B0    $FA2F   UNKNOWN  FA2F            ; Unknown Fxxx instruction
$6B2    $B5AA   JP       V0, $5AA        ; Jump to V0 + 5AA
$6B4    $C06B   RND      V0, #6B         ; V0 = random & 6B
$6B6    $9663   UNKNOWN  $9663           ; Unknown 9xxx instruction
$6B8    $DB8B   DRW      VB, V8, #B      ; Draw 11-byte sprite at VB, V8
$6BA    $8F1C   UNKNOWN  8F1C            ; Unknown 8xxx instruction
$6BC    $C4C9   RND      V4, #C9         ; V4 = random & C9
$6BE    $2FF1   CALL     $FF1            ; Call subroutine at FF1
$6C0    $E62B   UNKNOWN  $E62B           ; Unknown Exxx instruction
$6C2    $BA33   JP       V0, $A33        ; Jump to V0 + A33
$6C4    $28E9   CALL     $8E9            ; Call subroutine at 8E9
$6C6    $E7AC   UNKNOWN  $E7AC           ; Unknown Exxx instruction
$6C8    $05F0   SYS      $5F0            ; System call to 5F0
$6CA    $5D60   SE       VD, V6          ; Skip if VD == V6
$6CC    $8EC0   LD       VE, VC          ; VE = VC
$6CE    $E66E   UNKNOWN  $E66E           ; Unknown Exxx instruction
$6D0    $1269   JP       $269            ; Jump to 269
$6D2    $B78A   JP       V0, $78A        ; Jump to V0 + 78A
$6D4    $C439   RND      V4, #39         ; V4 = random & 39
$6D6    $87FE   SHL      V7              ; V7 <<= 1, VF = MSB
$6D8    $735B   ADD      V3, #5B         ; Add 91 to V3
$6DA    $B927   JP       V0, $927        ; Jump to V0 + 927
$6DC    $B886   JP       V0, $886        ; Jump to V0 + 886
$6DE    $BD5B   JP       V0, $D5B        ; Jump to V0 + D5B
$6E0    $CC31   RND      VC, #31         ; VC = random & 31
$6E2    $5F7B   UNKNOWN  $5F7B           ; Unknown 5xxx instruction
$6E4    $B6D1   JP       V0, $6D1        ; Jump to V0 + 6D1
$6E6    $BB7E   JP       V0, $B7E        ; Jump to V0 + B7E
$6E8    $B617   JP       V0, $617        ; Jump to V0 + 617
$6EA    $66B8   LD       V6, #B8         ; Load 184 into V6
$6EC    $91C0   SNE      V1, VC          ; Skip if V1 != VC
$6EE    $E4C3   UNKNOWN  $E4C3           ; Unknown Exxx instruction
$6F0    $5EA4   UNKNOWN  $5EA4           ; Unknown 5xxx instruction
$6F2    $36A7   SE       V6, #A7         ; Skip if V6 == 167
$6F4    $68DF   LD       V8, #DF         ; Load 223 into V8
$6F6    $B5A0   JP       V0, $5A0        ; Jump to V0 + 5A0
$6F8    $5E6F   UNKNOWN  $5E6F           ; Unknown 5xxx instruction
$6FA    $636B   LD       V3, #6B         ; Load 107 into V3
$6FC    $27CF   CALL     $7CF            ; Call subroutine at 7CF
$6FE    $A63C   LD       I, $63C         ; Load 63C into I
$700    $45DA   SNE      V5, #DA         ; Skip if V5 != 218
$702    $FF9C   UNKNOWN  FF9C            ; Unknown Fxxx instruction
$704    $5D8B   UNKNOWN  $5D8B           ; Unknown 5xxx instruction
$706    $7B35   ADD      VB, #35         ; Add 53 to VB
$708    $6C55   LD       VC, #55         ; Load 85 into VC
$70A    $9A6C   UNKNOWN  $9A6C           ; Unknown 9xxx instruction
$70C    $5E05   UNKNOWN  $5E05           ; Unknown 5xxx instruction
$70E    $DFD6   DRW      VF, VD, #6      ; Draw 6-byte sprite at VF, VD
$710    $2724   CALL     $724            ; Call subroutine at 724
$712    $910C   UNKNOWN  $910C           ; Unknown 9xxx instruction
$714    $33DB   SE       V3, #DB         ; Skip if V3 == 219
$716    $814F   UNKNOWN  814F            ; Unknown 8xxx instruction
$718    $C754   RND      V7, #54         ; V7 = random & 54
$71A    $E8B8   UNKNOWN  $E8B8           ; Unknown Exxx instruction
$71C    $9DE5   UNKNOWN  $9DE5           ; Unknown 9xxx instruction
$71E    $4A02   SNE      VA, #02         ; Skip if VA != 2
$720    $0E64   SYS      $E64            ; System call to E64
$722    $6F8B   LD       VF, #8B         ; Load 139 into VF
$724    $AEE5   LD       I, $EE5         ; Load EE5 into I
$726    $F08D   UNKNOWN  F08D            ; Unknown Fxxx instruction
$728    $DD94   DRW      VD, V9, #4      ; Draw 4-byte sprite at VD, V9
$72A    $3894   SE       V8, #94         ; Skip if V8 == 148
$72C    $6734   LD       V7, #34         ; Load 52 into V7
$72E    $1BBB   JP       $BBB            ; Jump to BBB
$730    $03DE   SYS      $3DE            ; System call to 3DE
$732    $9137   UNKNOWN  $9137           ; Unknown 9xxx instruction
$734    $9FAE   UNKNOWN  $9FAE           ; Unknown 9xxx instruction
$736    $5002   UNKNOWN  $5002           ; Unknown 5xxx instruction
$738    $B058   JP       V0, $058        ; Jump to V0 + 058
$73A    $363B   SE       V6, #3B         ; Skip if V6 == 59
$73C    $FE91   UNKNOWN  FE91            ; Unknown Fxxx instruction
$73E    $5005   UNKNOWN  $5005           ; Unknown 5xxx instruction
$740    $5172   UNKNOWN  $5172           ; Unknown 5xxx instruction
$742    $E339   UNKNOWN  $E339           ; Unknown Exxx instruction
$744    $19D3   JP       $9D3            ; Jump to 9D3
$746    $4843   SNE      V8, #43         ; Skip if V8 != 67
$748    $DE40   DRW      VE, V4, #0      ; Draw 0-byte sprite at VE, V4
$74A    $BF0C   JP       V0, $F0C        ; Jump to V0 + F0C
$74C    $5467   UNKNOWN  $5467           ; Unknown 5xxx instruction
$74E    $08CA   SYS      $8CA            ; System call to 8CA
$750    $6DE0   LD       VD, #E0         ; Load 224 into VD
$752    $4083   SNE      V0, #83         ; Skip if V0 != 131
$754    $C9C0   RND      V9, #C0         ; V9 = random & C0
$756    $9DEF   UNKNOWN  $9DEF           ; Unknown 9xxx instruction
$758    $DF84   DRW      VF, V8, #4      ; Draw 4-byte sprite at VF, V8
$75A    $C81A   RND      V8, #1A         ; V8 = random & 1A
$75C    $34A0   SE       V4, #A0         ; Skip if V4 == 160
$75E    $C4CE   RND      V4, #CE         ; V4 = random & CE
$760    $0E7E   SYS      $E7E            ; System call to E7E
$762    $7833   ADD      V8, #33         ; Add 51 to V8
$764    $2085   CALL     $085            ; Call subroutine at 085
$766    $0A30   SYS      $A30            ; System call to A30
$768    $891F   UNKNOWN  891F            ; Unknown 8xxx instruction
$76A    $5A13   UNKNOWN  $5A13           ; Unknown 5xxx instruction
$76C    $CFDF   RND      VF, #DF         ; VF = random & DF
$76E    $01AB   SYS      $1AB            ; System call to 1AB
$770    $66C8   LD       V6, #C8         ; Load 200 into V6
$772    $A95A   LD       I, $95A         ; Load 95A into I
$774    $7AD6   ADD      VA, #D6         ; Add 214 to VA
$776    $4E6C   SNE      VE, #6C         ; Skip if VE != 108
$778    $66A0   LD       V6, #A0         ; Load 160 into V6
$77A    $F2D6   UNKNOWN  F2D6            ; Unknown Fxxx instruction
$77C    $7294   ADD      V2, #94         ; Add 148 to V2
$77E    $9565   UNKNOWN  $9565           ; Unknown 9xxx instruction
$780    $7874   ADD      V8, #74         ; Add 116 to V8
$782    $59B8   UNKNOWN  $59B8           ; Unknown 5xxx instruction
$784    $2162   CALL     $162            ; Call subroutine at 162
$786    $F871   UNKNOWN  F871            ; Unknown Fxxx instruction
$788    $7D81   ADD      VD, #81         ; Add 129 to VD
$78A    $BF8C   JP       V0, $F8C        ; Jump to V0 + F8C
$78C    $1DA1   JP       $DA1            ; Jump to DA1
$78E    $191A   JP       $91A            ; Jump to 91A
$790    $C406   RND      V4, #06         ; V4 = random & 06
$792    $4A72   SNE      VA, #72         ; Skip if VA != 114
$794    $2C13   CALL     $C13            ; Call subroutine at C13
$796    $66C8   LD       V6, #C8         ; Load 200 into V6
$798    $53AE   UNKNOWN  $53AE           ; Unknown 5xxx instruction
$79A    $BC37   JP       V0, $C37        ; Jump to V0 + C37
$79C    $FEFA   UNKNOWN  FEFA            ; Unknown Fxxx instruction
$79E    $5F50   SE       VF, V5          ; Skip if VF == V5
$7A0    $436B   SNE      V3, #6B         ; Skip if V3 != 107
$7A2    $43C3   SNE      V3, #C3         ; Skip if V3 != 195
$7A4    $259D   CALL     $59D            ; Call subroutine at 59D
$7A6    $3635   SE       V6, #35         ; Skip if V6 == 53
$7A8    $C2B7   RND      V2, #B7         ; V2 = random & B7
$7AA    $3398   SE       V3, #98         ; Skip if V3 == 152
$7AC    $B5C9   JP       V0, $5C9        ; Jump to V0 + 5C9
$7AE    $CB29   RND      VB, #29         ; VB = random & 29
$7B0    $702D   ADD      V0, #2D         ; Add 45 to V0
$7B2    $266E   CALL     $66E            ; Call subroutine at 66E
$7B4    $9D75   UNKNOWN  $9D75           ; Unknown 9xxx instruction
$7B6    $6892   LD       V8, #92         ; Load 146 into V8
$7B8    $E08D   UNKNOWN  $E08D           ; Unknown Exxx instruction
$7BA    $3ECC   SE       VE, #CC         ; Skip if VE == 204
$7BC    $1D03   JP       $D03            ; Jump to D03
$7BE    $7771   ADD      V7, #71         ; Add 113 to V7
$7C0    $22DD   CALL     $2DD            ; Call subroutine at 2DD
$7C2    $9FEC   UNKNOWN  $9FEC           ; Unknown 9xxx instruction
$7C4    $5522   UNKNOWN  $5522           ; Unknown 5xxx instruction
$7C6    $6D6E   LD       VD, #6E         ; Load 110 into VD
$7C8    $5D90   SE       VD, V9          ; Skip if VD == V9
$7CA    $453B   SNE      V5, #3B         ; Skip if V5 != 59
$7CC    $8BDD   UNKNOWN  8BDD            ; Unknown 8xxx instruction
$7CE    $EBDC   UNKNOWN  $EBDC           ; Unknown Exxx instruction
$7D0    $0A4F   SYS      $A4F            ; System call to A4F
$7D2    $69B9   LD       V9, #B9         ; Load 185 into V9
$7D4    $9EDE   UNKNOWN  $9EDE           ; Unknown 9xxx instruction
$7D6    $74A2   ADD      V4, #A2         ; Add 162 to V4
$7D8    $B734   JP       V0, $734        ; Jump to V0 + 734
$7DA    $9F71   UNKNOWN  $9F71           ; Unknown 9xxx instruction
$7DC    $9176   UNKNOWN  $9176           ; Unknown 9xxx instruction
$7DE    $1137   JP       $137            ; Jump to 137
$7E0    $D543   DRW      V5, V4, #3      ; Draw 3-byte sprite at V5, V4
$7E2    $E248   UNKNOWN  $E248           ; Unknown Exxx instruction
$7E4    $4593   SNE      V5, #93         ; Skip if V5 != 147
$7E6    $0A6D   SYS      $A6D            ; System call to A6D
$7E8    $6728   LD       V7, #28         ; Load 40 into V7
$7EA    $3852   SE       V8, #52         ; Skip if V8 == 82
$7EC    $BBFA   JP       V0, $BFA        ; Jump to V0 + BFA
$7EE    $170E   JP       $70E            ; Jump to 70E
$7F0    $812B   UNKNOWN  812B            ; Unknown 8xxx instruction
$7F2    $5539   UNKNOWN  $5539           ; Unknown 5xxx instruction
$7F4    $FA13   UNKNOWN  FA13            ; Unknown Fxxx instruction
$7F6    $AA69   LD       I, $A69         ; Load A69 into I
$7F8    $DA8D   DRW      VA, V8, #D      ; Draw 13-byte sprite at VA, V8
$7FA    $622C   LD       V2, #2C         ; Load 44 into V2
$7FC    $03D6   SYS      $3D6            ; System call to 3D6
$7FE    $7CA5   ADD      VC, #A5         ; Add 165 to VC
$800    $A647   LD       I, $647         ; Load 647 into I
$802    $A726   LD       I, $726         ; Load 726 into I
$804    $29E8   CALL     $9E8            ; Call subroutine at 9E8
$806    $FD58   UNKNOWN  FD58            ; Unknown Fxxx instruction
$808    $35D7   SE       V5, #D7         ; Skip if V5 == 215
$80A    $DF9A   DRW      VF, V9, #A      ; Draw 10-byte sprite at VF, V9
$80C    $D7B1   DRW      V7, VB, #1      ; Draw 1-byte sprite at V7, VB
$80E    $2476   CALL     $476            ; Call subroutine at 476
$810    $A9A7   LD       I, $9A7         ; Load 9A7 into I
$812    $B456   JP       V0, $456        ; Jump to V0 + 456
$814    $A2D1   LD       I, $2D1         ; Load 2D1 into I
$816    $E30D   UNKNOWN  $E30D           ; Unknown Exxx instruction
$818    $8842   AND      V8, V4          ; V8 &= V4
$81A    $D872   DRW      V8, V7, #2      ; Draw 2-byte sprite at V8, V7
$81C    $CC7F   RND      VC, #7F         ; VC = random & 7F
$81E    $57F0   SE       V7, VF          ; Skip if V7 == VF
$820    $62C6   LD       V2, #C6         ; Load 198 into V2
$822    $18C3   JP       $8C3            ; Jump to 8C3
$824    $4924   SNE      V9, #24         ; Skip if V9 != 36
$826    $D8C1   DRW      V8, VC, #1      ; Draw 1-byte sprite at V8, VC
$828    $F20D   UNKNOWN  F20D            ; Unknown Fxxx instruction
$82A    $FF1E   ADD      I, VF           ; I += VF
$82C    $4CDF   SNE      VC, #DF         ; Skip if VC != 223
$82E    $01A9   SYS      $1A9            ; System call to 1A9
$830    $20A3   CALL     $0A3            ; Call subroutine at 0A3
$832    $BF00   JP       V0, $F00        ; Jump to V0 + F00
$834    $9514   UNKNOWN  $9514           ; Unknown 9xxx instruction
$836    $73D2   ADD      V3, #D2         ; Add 210 to V3
$838    $F859   UNKNOWN  F859            ; Unknown Fxxx instruction
$83A    $B312   JP       V0, $312        ; Jump to V0 + 312
$83C    $605D   LD       V0, #5D         ; Load 93 into V0
$83E    $2734   CALL     $734            ; Call subroutine at 734
$840    $14F7   JP       $4F7            ; Jump to 4F7
$842    $11FC   JP       $1FC            ; Jump to 1FC
$844    $DAEC   DRW      VA, VE, #C      ; Draw 12-byte sprite at VA, VE
$846    $22BC   CALL     $2BC            ; Call subroutine at 2BC
$848    $88DF   UNKNOWN  88DF            ; Unknown 8xxx instruction
$84A    $A0C9   LD       I, $0C9         ; Load 0C9 into I
$84C    $34EE   SE       V4, #EE         ; Skip if V4 == 238
$84E    $D642   DRW      V6, V4, #2      ; Draw 2-byte sprite at V6, V4
$850    $8180   LD       V1, V8          ; V1 = V8
$852    $4996   SNE      V9, #96         ; Skip if V9 != 150
$854    $1C82   JP       $C82            ; Jump to C82
$856    $A2D7   LD       I, $2D7         ; Load 2D7 into I
$858    $3530   SE       V5, #30         ; Skip if V5 == 48
$85A    $86F4   ADD      V6, VF          ; V6 += VF, VF = carry
$85C    $B998   JP       V0, $998        ; Jump to V0 + 998
$85E    $51EC   UNKNOWN  $51EC           ; Unknown 5xxx instruction
$860    $1F2B   JP       $F2B            ; Jump to F2B
$862    $25BE   CALL     $5BE            ; Call subroutine at 5BE
$864    $3DA2   SE       VD, #A2         ; Skip if VD == 162
$866    $FC8A   UNKNOWN  FC8A            ; Unknown Fxxx instruction
$868    $9E69   UNKNOWN  $9E69           ; Unknown 9xxx instruction
$86A    $7EFC   ADD      VE, #FC         ; Add 252 to VE
$86C    $9B60   SNE      VB, V6          ; Skip if VB != V6
$86E    $E7E2   UNKNOWN  $E7E2           ; Unknown Exxx instruction
$870    $84D0   LD       V4, VD          ; V4 = VD
$872    $85F3   XOR      V5, VF          ; V5 ^= VF
$874    $F772   UNKNOWN  F772            ; Unknown Fxxx instruction
$876    $DA11   DRW      VA, V1, #1      ; Draw 1-byte sprite at VA, V1
$878    $DCFD   DRW      VC, VF, #D      ; Draw 13-byte sprite at VC, VF
$87A    $4608   SNE      V6, #08         ; Skip if V6 != 8
$87C    $97BE   UNKNOWN  $97BE           ; Unknown 9xxx instruction
$87E    $221D   CALL     $21D            ; Call subroutine at 21D
$880    $8DF9   UNKNOWN  8DF9            ; Unknown 8xxx instruction
$882    $8C69   UNKNOWN  8C69            ; Unknown 8xxx instruction
$884    $2AC6   CALL     $AC6            ; Call subroutine at AC6
$886    $9E4E   UNKNOWN  $9E4E           ; Unknown 9xxx instruction
$888    $C848   RND      V8, #48         ; V8 = random & 48
$88A    $4BDB   SNE      VB, #DB         ; Skip if VB != 219
$88C    $BC9D   JP       V0, $C9D        ; Jump to V0 + C9D
$88E    $D5FC   DRW      V5, VF, #C      ; Draw 12-byte sprite at V5, VF
$890    $6AA3   LD       VA, #A3         ; Load 163 into VA
$892    $6021   LD       V0, #21         ; Load 33 into V0
$894    $7CB7   ADD      VC, #B7         ; Add 183 to VC
$896    $C181   RND      V1, #81         ; V1 = random & 81
$898    $E150   UNKNOWN  $E150           ; Unknown Exxx instruction
$89A    $232D   CALL     $32D            ; Call subroutine at 32D
$89C    $E987   UNKNOWN  $E987           ; Unknown Exxx instruction
$89E    $270E   CALL     $70E            ; Call subroutine at 70E
$8A0    $42CD   SNE      V2, #CD         ; Skip if V2 != 205
$8A2    $6D0C   LD       VD, #0C         ; Load 12 into VD
$8A4    $1FF9   JP       $FF9            ; Jump to FF9
$8A6    $194B   JP       $94B            ; Jump to 94B
$8A8    $B14A   JP       V0, $14A        ; Jump to V0 + 14A
$8AA    $612E   LD       V1, #2E         ; Load 46 into V1
$8AC    $8E44   ADD      VE, V4          ; VE += V4, VF = carry
$8AE    $D34B   DRW      V3, V4, #B      ; Draw 11-byte sprite at V3, V4
$8B0    $8CF1   OR       VC, VF          ; VC |= VF
$8B2    $C08D   RND      V0, #8D         ; V0 = random & 8D
$8B4    $15F6   JP       $5F6            ; Jump to 5F6
$8B6    $8CAA   UNKNOWN  8CAA            ; Unknown 8xxx instruction
$8B8    $01F3   SYS      $1F3            ; System call to 1F3
$8BA    $D733   DRW      V7, V3, #3      ; Draw 3-byte sprite at V7, V3
$8BC    $E790   UNKNOWN  $E790           ; Unknown Exxx instruction
$8BE    $6833   LD       V8, #33         ; Load 51 into V8
$8C0    $86E4   ADD      V6, VE          ; V6 += VE, VF = carry
$8C2    $98AB   UNKNOWN  $98AB           ; Unknown 9xxx instruction
$8C4    $CAD9   RND      VA, #D9         ; VA = random & D9
$8C6    $2D1C   CALL     $D1C            ; Call subroutine at D1C
$8C8    $C77F   RND      V7, #7F         ; V7 = random & 7F
$8CA    $50C7   UNKNOWN  $50C7           ; Unknown 5xxx instruction
$8CC    $753E   ADD      V5, #3E         ; Add 62 to V5
$8CE    $55E9   UNKNOWN  $55E9           ; Unknown 5xxx instruction
$8D0    $69D5   LD       V9, #D5         ; Load 213 into V9
$8D2    $F44D   UNKNOWN  F44D            ; Unknown Fxxx instruction
$8D4    $DC19   DRW      VC, V1, #9      ; Draw 9-byte sprite at VC, V1
$8D6    $AA9C   LD       I, $A9C         ; Load A9C into I
$8D8    $B082   JP       V0, $082        ; Jump to V0 + 082
$8DA    $B937   JP       V0, $937        ; Jump to V0 + 937
$8DC    $8E82   AND      VE, V8          ; VE &= V8
$8DE    $981E   UNKNOWN  $981E           ; Unknown 9xxx instruction
$8E0    $1347   JP       $347            ; Jump to 347
$8E2    $10DD   JP       $0DD            ; Jump to 0DD
$8E4    $2004   CALL     $004            ; Call subroutine at 004
$8E6    $8E01   OR       VE, V0          ; VE |= V0
$8E8    $9B7E   UNKNOWN  $9B7E           ; Unknown 9xxx instruction
$8EA    $F803   UNKNOWN  F803            ; Unknown Fxxx instruction
$8EC    $95EE   UNKNOWN  $95EE           ; Unknown 9xxx instruction
$8EE    $BCBE   JP       V0, $CBE        ; Jump to V0 + CBE
$8F0    $B6AA   JP       V0, $6AA        ; Jump to V0 + 6AA
$8F2    $933A   UNKNOWN  $933A           ; Unknown 9xxx instruction
$8F4    $7B2C   ADD      VB, #2C         ; Add 44 to VB
$8F6    $3017   SE       V0, #17         ; Skip if V0 == 23
$8F8    $70D5   ADD      V0, #D5         ; Add 213 to V0
$8FA    $D0F5   DRW      V0, VF, #5      ; Draw 5-byte sprite at V0, VF
$8FC    $D646   DRW      V6, V4, #6      ; Draw 6-byte sprite at V6, V4
$8FE    $8432   AND      V4, V3          ; V4 &= V3
$900    $A094   LD       I, $094         ; Load 094 into I
$902    $045C   SYS      $45C            ; System call to 45C
$904    $267E   CALL     $67E            ; Call subroutine at 67E
$906    $A33F   LD       I, $33F         ; Load 33F into I
$908    $54FC   UNKNOWN  $54FC           ; Unknown 5xxx instruction
$90A    $1B7B   JP       $B7B            ; Jump to B7B
$90C    $25E3   CALL     $5E3            ; Call subroutine at 5E3
$90E    $2728   CALL     $728            ; Call subroutine at 728
$910    $5C82   UNKNOWN  $5C82           ; Unknown 5xxx instruction
$912    $AE32   LD       I, $E32         ; Load E32 into I
$914    $5B9D   UNKNOWN  $5B9D           ; Unknown 5xxx instruction
$916    $2850   CALL     $850            ; Call subroutine at 850
$918    $E6EC   UNKNOWN  $E6EC           ; Unknown Exxx instruction
$91A    $D879   DRW      V8, V7, #9      ; Draw 9-byte sprite at V8, V7
$91C    $E59E   SKP      V5              ; Skip if key V5 pressed
$91E    $CA1F   RND      VA, #1F         ; VA = random & 1F
$920    $C24B   RND      V2, #4B         ; V2 = random & 4B
$922    $15B1   JP       $5B1            ; Jump to 5B1
$924    $9A30   SNE      VA, V3          ; Skip if VA != V3
$926    $14A3   JP       $4A3            ; Jump to 4A3
$928    $8B25   SUB      VB, V2          ; VB -= V2, VF = !borrow
$92A    $F33B   UNKNOWN  F33B            ; Unknown Fxxx instruction
$92C    $8A6D   UNKNOWN  8A6D            ; Unknown 8xxx instruction
$92E    $7090   ADD      V0, #90         ; Add 144 to V0
$930    $C328   RND      V3, #28         ; V3 = random & 28
$932    $EC71   UNKNOWN  $EC71           ; Unknown Exxx instruction
$934    $2AE7   CALL     $AE7            ; Call subroutine at AE7
$936    $E804   UNKNOWN  $E804           ; Unknown Exxx instruction
$938    $6675   LD       V6, #75         ; Load 117 into V6
$93A    $73E8   ADD      V3, #E8         ; Add 232 to V3
$93C    $C375   RND      V3, #75         ; V3 = random & 75
$93E    $3329   SE       V3, #29         ; Skip if V3 == 41
$940    $7332   ADD      V3, #32         ; Add 50 to V3
$942    $C38E   RND      V3, #8E         ; V3 = random & 8E
$944    $A9E0   LD       I, $9E0         ; Load 9E0 into I
$946    $7636   ADD      V6, #36         ; Add 54 to V6
$948    $67CE   LD       V7, #CE         ; Load 206 into V7
$94A    $34FB   SE       V4, #FB         ; Skip if V4 == 251
$94C    $4522   SNE      V5, #22         ; Skip if V5 != 34
$94E    $0348   SYS      $348            ; System call to 348
$950    $7349   ADD      V3, #49         ; Add 73 to V3
$952    $B4ED   JP       V0, $4ED        ; Jump to V0 + 4ED
$954    $FF2D   UNKNOWN  FF2D            ; Unknown Fxxx instruction
$956    $2A41   CALL     $A41            ; Call subroutine at A41
$958    $5D82   UNKNOWN  $5D82           ; Unknown 5xxx instruction
$95A    $5470   SE       V4, V7          ; Skip if V4 == V7
$95C    $E832   UNKNOWN  $E832           ; Unknown Exxx instruction
$95E    $4C77   SNE      VC, #77         ; Skip if VC != 119
$960    $64D6   LD       V4, #D6         ; Load 214 into V4
$962    $239A   CALL     $39A            ; Call subroutine at 39A
$964    $E651   UNKNOWN  $E651           ; Unknown Exxx instruction
$966    $314F   SE       V1, #4F         ; Skip if V1 == 79
$968    $6696   LD       V6, #96         ; Load 150 into V6
$96A    $D9C5   DRW      V9, VC, #5      ; Draw 5-byte sprite at V9, VC
$96C    $A0C9   LD       I, $0C9         ; Load 0C9 into I
$96E    $3275   SE       V2, #75         ; Skip if V2 == 117
$970    $CAA3   RND      VA, #A3         ; VA = random & A3
$972    $47D3   SNE      V7, #D3         ; Skip if V7 != 211
$974    $DDD2   DRW      VD, VD, #2      ; Draw 2-byte sprite at VD, VD
$976    $7053   ADD      V0, #53         ; Add 83 to V0
$978    $6459   LD       V4, #59         ; Load 89 into V4
$97A    $33E2   SE       V3, #E2         ; Skip if V3 == 226
$97C    $799E   ADD      V9, #9E         ; Add 158 to V9
$97E    $25A2   CALL     $5A2            ; Call subroutine at 5A2
$980    $0DAE   SYS      $DAE            ; System call to DAE
$982    $AD3F   LD       I, $D3F         ; Load D3F into I
$984    $0596   SYS      $596            ; System call to 596
$986    $1E5D   JP       $E5D            ; Jump to E5D
$988    $0CD6   SYS      $CD6            ; System call to CD6
$98A    $3697   SE       V6, #97         ; Skip if V6 == 151
$98C    $CD37   RND      VD, #37         ; VD = random & 37
$98E    $F62B   UNKNOWN  F62B            ; Unknown Fxxx instruction
$990    $064A   SYS      $64A            ; System call to 64A
$992    $8793   XOR      V7, V9          ; V7 ^= V9
$994    $5EB3   UNKNOWN  $5EB3           ; Unknown 5xxx instruction
$996    $A9D0   LD       I, $9D0         ; Load 9D0 into I
$998    $1223   JP       $223            ; Jump to 223
$99A    $E28B   UNKNOWN  $E28B           ; Unknown Exxx instruction
$99C    $4EF0   SNE      VE, #F0         ; Skip if VE != 240
$99E    $4248   SNE      V2, #48         ; Skip if V2 != 72
$9A0    $40AE   SNE      V0, #AE         ; Skip if V0 != 174
$9A2    $9108   UNKNOWN  $9108           ; Unknown 9xxx instruction
$9A4    $42E8   SNE      V2, #E8         ; Skip if V2 != 232
$9A6    $335E   SE       V3, #5E         ; Skip if V3 == 94
$9A8    $E7F8   UNKNOWN  $E7F8           ; Unknown Exxx instruction
$9AA    $E1D5   UNKNOWN  $E1D5           ; Unknown Exxx instruction
$9AC    $E18A   UNKNOWN  $E18A           ; Unknown Exxx instruction
$9AE    $001B   SYS      $01B            ; System call to 01B
$9B0    $9EE3   UNKNOWN  $9EE3           ; Unknown 9xxx instruction
$9B2    $097F   SYS      $97F            ; System call to 97F
$9B4    $A128   LD       I, $128         ; Load 128 into I
$9B6    $78B6   ADD      V8, #B6         ; Add 182 to V8
$9B8    $8F0D   UNKNOWN  8F0D            ; Unknown 8xxx instruction
$9BA    $A71A   LD       I, $71A         ; Load 71A into I
$9BC    $2FD5   CALL     $FD5            ; Call subroutine at FD5
$9BE    $D51D   DRW      V5, V1, #D      ; Draw 13-byte sprite at V5, V1
$9C0    $DE60   DRW      VE, V6, #0      ; Draw 0-byte sprite at VE, V6
$9C2    $22C6   CALL     $2C6            ; Call subroutine at 2C6
$9C4    $2270   CALL     $270            ; Call subroutine at 270
$9C6    $4ABE   SNE      VA, #BE         ; Skip if VA != 190
$9C8    $E44C   UNKNOWN  $E44C           ; Unknown Exxx instruction
$9CA    $D374   DRW      V3, V7, #4      ; Draw 4-byte sprite at V3, V7
$9CC    $438A   SNE      V3, #8A         ; Skip if V3 != 138
$9CE    $5B74   UNKNOWN  $5B74           ; Unknown 5xxx instruction
$9D0    $7B89   ADD      VB, #89         ; Add 137 to VB
$9D2    $4834   SNE      V8, #34         ; Skip if V8 != 52
$9D4    $D125   DRW      V1, V2, #5      ; Draw 5-byte sprite at V1, V2
$9D6    $7B3A   ADD      VB, #3A         ; Add 58 to VB
$9D8    $2078   CALL     $078            ; Call subroutine at 078
$9DA    $EB54   UNKNOWN  $EB54           ; Unknown Exxx instruction
$9DC    $B7E2   JP       V0, $7E2        ; Jump to V0 + 7E2
$9DE    $B0DA   JP       V0, $0DA        ; Jump to V0 + 0DA
$9E0    $7F85   ADD      VF, #85         ; Add 133 to VF
$9E2    $D4FB   DRW      V4, VF, #B      ; Draw 11-byte sprite at V4, VF
$9E4    $263B   CALL     $63B            ; Call subroutine at 63B
$9E6    $4E15   SNE      VE, #15         ; Skip if VE != 21
$9E8    $67E5   LD       V7, #E5         ; Load 229 into V7
$9EA    $A964   LD       I, $964         ; Load 964 into I
$9EC    $8C25   SUB      VC, V2          ; VC -= V2, VF = !borrow
$9EE    $BA81   JP       V0, $A81        ; Jump to V0 + A81
$9F0    $3B6B   SE       VB, #6B         ; Skip if VB == 107
$9F2    $CE39   RND      VE, #39         ; VE = random & 39
$9F4    $A531   LD       I, $531         ; Load 531 into I
$9F6    $4207   SNE      V2, #07         ; Skip if V2 != 7
$9F8    $D5D0   DRW      V5, VD, #0      ; Draw 0-byte sprite at V5, VD
$9FA    $434A   SNE      V3, #4A         ; Skip if V3 != 74
$9FC    $3F57   SE       VF, #57         ; Skip if VF == 87
$9FE    $AC69   LD       I, $C69         ; Load C69 into I
$A00    $B2B3   JP       V0, $2B3        ; Jump to V0 + 2B3
$A02    $D865   DRW      V8, V6, #5      ; Draw 5-byte sprite at V8, V6
$A04    $5007   UNKNOWN  $5007           ; Unknown 5xxx instruction
$A06    $3E68   SE       VE, #68         ; Skip if VE == 104
$A08    $D8DA   DRW      V8, VD, #A      ; Draw 10-byte sprite at V8, VD
$A0A    $9C87   UNKNOWN  $9C87           ; Unknown 9xxx instruction
$A0C    $10FD   JP       $0FD            ; Jump to 0FD
$A0E    $6F9D   LD       VF, #9D         ; Load 157 into VF
$A10    $17EC   JP       $7EC            ; Jump to 7EC
$A12    $8CF9   UNKNOWN  8CF9            ; Unknown 8xxx instruction
$A14    $2C5C   CALL     $C5C            ; Call subroutine at C5C
$A16    $E027   UNKNOWN  $E027           ; Unknown Exxx instruction
$A18    $8280   LD       V2, V8          ; V2 = V8
$A1A    $5893   UNKNOWN  $5893           ; Unknown 5xxx instruction
$A1C    $EA30   UNKNOWN  $EA30           ; Unknown Exxx instruction
$A1E    $66A9   LD       V6, #A9         ; Load 169 into V6
$A20    $C011   RND      V0, #11         ; V0 = random & 11
$A22    $C246   RND      V2, #46         ; V2 = random & 46
$A24    $50F5   UNKNOWN  $50F5           ; Unknown 5xxx instruction
$A26    $2429   CALL     $429            ; Call subroutine at 429
$A28    $F4E1   UNKNOWN  F4E1            ; Unknown Fxxx instruction
$A2A    $31B9   SE       V1, #B9         ; Skip if V1 == 185
$A2C    $8E85   SUB      VE, V8          ; VE -= V8, VF = !borrow
$A2E    $DCCC   DRW      VC, VC, #C      ; Draw 12-byte sprite at VC, VC
$A30    $C2E0   RND      V2, #E0         ; V2 = random & E0
$A32    $379B   SE       V7, #9B         ; Skip if V7 == 155
$A34    $8A5B   UNKNOWN  8A5B            ; Unknown 8xxx instruction
$A36    $23F2   CALL     $3F2            ; Call subroutine at 3F2
$A38    $2FD3   CALL     $FD3            ; Call subroutine at FD3
$A3A    $81D9   UNKNOWN  81D9            ; Unknown 8xxx instruction
$A3C    $EA8C   UNKNOWN  $EA8C           ; Unknown Exxx instruction
$A3E    $3B43   SE       VB, #43         ; Skip if VB == 67
$A40    $FE2F   UNKNOWN  FE2F            ; Unknown Fxxx instruction
$A42    $7762   ADD      V7, #62         ; Add 98 to V7
$A44    $03B8   SYS      $3B8            ; System call to 3B8
$A46    $3EDA   SE       VE, #DA         ; Skip if VE == 218
$A48    $ED53   UNKNOWN  $ED53           ; Unknown Exxx instruction
$A4A    $CA00   RND      VA, #00         ; VA = random & 00
$A4C    $634D   LD       V3, #4D         ; Load 77 into V3
$A4E    $C5D4   RND      V5, #D4         ; V5 = random & D4
$A50    $E754   UNKNOWN  $E754           ; Unknown Exxx instruction
$A52    $B452   JP       V0, $452        ; Jump to V0 + 452
$A54    $2C7D   CALL     $C7D            ; Call subroutine at C7D
$A56    $8989   UNKNOWN  8989            ; Unknown 8xxx instruction
$A58    $52BA   UNKNOWN  $52BA           ; Unknown 5xxx instruction
$A5A    $F6D3   UNKNOWN  F6D3            ; Unknown Fxxx instruction
$A5C    $03C2   SYS      $3C2            ; System call to 3C2
$A5E    $C114   RND      V1, #14         ; V1 = random & 14
$A60    $1536   JP       $536            ; Jump to 536
$A62    $6EC1   LD       VE, #C1         ; Load 193 into VE
$A64    $230C   CALL     $30C            ; Call subroutine at 30C
$A66    $9157   UNKNOWN  $9157           ; Unknown 9xxx instruction
$A68    $5EB1   UNKNOWN  $5EB1           ; Unknown 5xxx instruction
$A6A    $5C7C   UNKNOWN  $5C7C           ; Unknown 5xxx instruction
$A6C    $CD97   RND      VD, #97         ; VD = random & 97
$A6E    $54B2   UNKNOWN  $54B2           ; Unknown 5xxx instruction
$A70    $4073   SNE      V0, #73         ; Skip if V0 != 115
$A72    $B447   JP       V0, $447        ; Jump to V0 + 447
$A74    $A8C2   LD       I, $8C2         ; Load 8C2 into I
$A76    $AF04   LD       I, $F04         ; Load F04 into I
$A78    $EB44   UNKNOWN  $EB44           ; Unknown Exxx instruction
$A7A    $495F   SNE      V9, #5F         ; Skip if V9 != 95
$A7C    $6900   LD       V9, #00         ; Load 0 into V9
$A7E    $4C42   SNE      VC, #42         ; Skip if VC != 66
$A80    $FD1A   UNKNOWN  FD1A            ; Unknown Fxxx instruction
$A82    $907E   UNKNOWN  $907E           ; Unknown 9xxx instruction
$A84    $1186   JP       $186            ; Jump to 186
$A86    $9659   UNKNOWN  $9659           ; Unknown 9xxx instruction
$A88    $6C35   LD       VC, #35         ; Load 53 into VC
$A8A    $0767   SYS      $767            ; System call to 767
$A8C    $DBCD   DRW      VB, VC, #D      ; Draw 13-byte sprite at VB, VC
$A8E    $304F   SE       V0, #4F         ; Skip if V0 == 79
$A90    $03BE   SYS      $3BE            ; System call to 3BE
$A92    $C44C   RND      V4, #4C         ; V4 = random & 4C
$A94    $63EA   LD       V3, #EA         ; Load 234 into V3
$A96    $9973   UNKNOWN  $9973           ; Unknown 9xxx instruction
$A98    $BE1A   JP       V0, $E1A        ; Jump to V0 + E1A
$A9A    $4098   SNE      V0, #98         ; Skip if V0 != 152
$A9C    $ACDA   LD       I, $CDA         ; Load CDA into I
$A9E    $C9ED   RND      V9, #ED         ; V9 = random & ED
$AA0    $820E   SHL      V2              ; V2 <<= 1, VF = MSB
$AA2    $5804   UNKNOWN  $5804           ; Unknown 5xxx instruction
$AA4    $E6AE   UNKNOWN  $E6AE           ; Unknown Exxx instruction
$AA6    $8E87   SUBN     VE, V8          ; VE = V8 - VE, VF = !borrow
$AA8    $E0B4   UNKNOWN  $E0B4           ; Unknown Exxx instruction
$AAA    $5E79   UNKNOWN  $5E79           ; Unknown 5xxx instruction
$AAC    $5117   UNKNOWN  $5117           ; Unknown 5xxx instruction
$AAE    $3EE9   SE       VE, #E9         ; Skip if VE == 233
$AB0    $4EC1   SNE      VE, #C1         ; Skip if VE != 193
$AB2    $288D   CALL     $88D            ; Call subroutine at 88D
$AB4    $2D03   CALL     $D03            ; Call subroutine at D03
$AB6    $1C19   JP       $C19            ; Jump to C19
$AB8    $D843   DRW      V8, V4, #3      ; Draw 3-byte sprite at V8, V4
$ABA    $6079   LD       V0, #79         ; Load 121 into V0
$ABC    $01D7   SYS      $1D7            ; System call to 1D7
$ABE    $0A2E   SYS      $A2E            ; System call to A2E
$AC0    $083E   SYS      $83E            ; System call to 83E
$AC2    $0534   SYS      $534            ; System call to 534
$AC4    $8284   ADD      V2, V8          ; V2 += V8, VF = carry
$AC6    $710D   ADD      V1, #0D         ; Add 13 to V1
$AC8    $612C   LD       V1, #2C         ; Load 44 into V1
$ACA    $2826   CALL     $826            ; Call subroutine at 826
$ACC    $ADE0   LD       I, $DE0         ; Load DE0 into I
$ACE    $2EDB   CALL     $EDB            ; Call subroutine at EDB
$AD0    $6AC9   LD       VA, #C9         ; Load 201 into VA
$AD2    $C2DF   RND      V2, #DF         ; V2 = random & DF
$AD4    $4840   SNE      V8, #40         ; Skip if V8 != 64
$AD6    $78C8   ADD      V8, #C8         ; Add 200 to V8
$AD8    $E40C   UNKNOWN  $E40C           ; Unknown Exxx instruction
$ADA    $6E2A   LD       VE, #2A         ; Load 42 into VE
$ADC    $47B1   SNE      V7, #B1         ; Skip if V7 != 177
$ADE    $C0C3   RND      V0, #C3         ; V0 = random & C3
$AE0    $3997   SE       V9, #97         ; Skip if V9 == 151
$AE2    $B548   JP       V0, $548        ; Jump to V0 + 548
$AE4    $F8E7   UNKNOWN  F8E7            ; Unknown Fxxx instruction
$AE6    $8063   XOR      V0, V6          ; V0 ^= V6
$AE8    $D566   DRW      V5, V6, #6      ; Draw 6-byte sprite at V5, V6
$AEA    $8985   SUB      V9, V8          ; V9 -= V8, VF = !borrow
$AEC    $CECB   RND      VE, #CB         ; VE = random & CB
$AEE    $E972   UNKNOWN  $E972           ; Unknown Exxx instruction
$AF0    $6D58   LD       VD, #58         ; Load 88 into VD
$AF2    $9457   UNKNOWN  $9457           ; Unknown 9xxx instruction
$AF4    $36CE   SE       V6, #CE         ; Skip if V6 == 206
$AF6    $9DEB   UNKNOWN  $9DEB           ; Unknown 9xxx instruction
$AF8    $04B9   SYS      $4B9            ; System call to 4B9
$AFA    $0DC5   SYS      $DC5            ; System call to DC5
$AFC    $2C92   CALL     $C92            ; Call subroutine at C92
$AFE    $F043   UNKNOWN  F043            ; Unknown Fxxx instruction
$B00    $3DE5   SE       VD, #E5         ; Skip if VD == 229
$B02    $4789   SNE      V7, #89         ; Skip if V7 != 137
$B04    $A2FD   LD       I, $2FD         ; Load 2FD into I
$B06    $D005   DRW      V0, V0, #5      ; Draw 5-byte sprite at V0, V0
$B08    $5130   SE       V1, V3          ; Skip if V1 == V3
$B0A    $438F   SNE      V3, #8F         ; Skip if V3 != 143
$B0C    $FCC7   UNKNOWN  FCC7            ; Unknown Fxxx instruction
$B0E    $E79E   SKP      V7              ; Skip if key V7 pressed
$B10    $8B31   OR       VB, V3          ; VB |= V3
$B12    $D775   DRW      V7, V7, #5      ; Draw 5-byte sprite at V7, V7
$B14    $1FBC   JP       $FBC            ; Jump to FBC
$B16    $C706   RND      V7, #06         ; V7 = random & 06
$B18    $59FE   UNKNOWN  $59FE           ; Unknown 5xxx instruction
$B1A    $CA9E   RND      VA, #9E         ; VA = random & 9E
$B1C    $D5E1   DRW      V5, VE, #1      ; Draw 1-byte sprite at V5, VE
$B1E    $F2DE   UNKNOWN  F2DE            ; Unknown Fxxx instruction
$B20    $57D9   UNKNOWN  $57D9           ; Unknown 5xxx instruction
$B22    $72CA   ADD      V2, #CA         ; Add 202 to V2
$B24    $2EBA   CALL     $EBA            ; Call subroutine at EBA
$B26    $7107   ADD      V1, #07         ; Add 7 to V1
$B28    $34E8   SE       V4, #E8         ; Skip if V4 == 232
$B2A    $AA8A   LD       I, $A8A         ; Load A8A into I
$B2C    $1B83   JP       $B83            ; Jump to B83
$B2E    $6543   LD       V5, #43         ; Load 67 into V5
$B30    $CDFF   RND      VD, #FF         ; VD = random & FF
$B32    $C7F8   RND      V7, #F8         ; V7 = random & F8
$B34    $6EC9   LD       VE, #C9         ; Load 201 into VE
$B36    $E930   UNKNOWN  $E930           ; Unknown Exxx instruction
$B38    $6338   LD       V3, #38         ; Load 56 into V3
$B3A    $4F87   SNE      VF, #87         ; Skip if VF != 135
$B3C    $862C   UNKNOWN  862C            ; Unknown 8xxx instruction
$B3E    $029C   SYS      $29C            ; System call to 29C
$B40    $06A0   SYS      $6A0            ; System call to 6A0
$B42    $16AB   JP       $6AB            ; Jump to 6AB
$B44    $BCE4   JP       V0, $CE4        ; Jump to V0 + CE4
$B46    $0D0E   SYS      $D0E            ; System call to D0E
$B48    $65EE   LD       V5, #EE         ; Load 238 into V5
$B4A    $38A5   SE       V8, #A5         ; Skip if V8 == 165
$B4C    $6956   LD       V9, #56         ; Load 86 into V9
$B4E    $8BB5   SUB      VB, VB          ; VB -= VB, VF = !borrow
$B50    $248D   CALL     $48D            ; Call subroutine at 48D
$B52    $FF14   UNKNOWN  FF14            ; Unknown Fxxx instruction
$B54    $A004   LD       I, $004         ; Load 004 into I
$B56    $42CB   SNE      V2, #CB         ; Skip if V2 != 203
$B58    $3FEF   SE       VF, #EF         ; Skip if VF == 239
$B5A    $37B3   SE       V7, #B3         ; Skip if V7 == 179
$B5C    $0444   SYS      $444            ; System call to 444
$B5E    $A53D   LD       I, $53D         ; Load 53D into I
$B60    $FF34   UNKNOWN  FF34            ; Unknown Fxxx instruction
$B62    $A7E9   LD       I, $7E9         ; Load 7E9 into I
$B64    $C6DF   RND      V6, #DF         ; V6 = random & DF
$B66    $836E   SHL      V3              ; V3 <<= 1, VF = MSB
$B68    $9346   UNKNOWN  $9346           ; Unknown 9xxx instruction
$B6A    $1DA0   JP       $DA0            ; Jump to DA0
$B6C    $6E8F   LD       VE, #8F         ; Load 143 into VE
$B6E    $46EE   SNE      V6, #EE         ; Skip if V6 != 238
$B70    $BEAF   JP       V0, $EAF        ; Jump to V0 + EAF
$B72    $89E1   OR       V9, VE          ; V9 |= VE
$B74    $7265   ADD      V2, #65         ; Add 101 to V2
$B76    $7CB3   ADD      VC, #B3         ; Add 179 to VC
$B78    $4717   SNE      V7, #17         ; Skip if V7 != 23
$B7A    $1C84   JP       $C84            ; Jump to C84
$B7C    $DC35   DRW      VC, V3, #5      ; Draw 5-byte sprite at VC, V3
$B7E    $F2BE   UNKNOWN  F2BE            ; Unknown Fxxx instruction
$B80    $0229   SYS      $229            ; System call to 229
$B82    $F75A   UNKNOWN  F75A            ; Unknown Fxxx instruction
$B84    $10A5   JP       $0A5            ; Jump to 0A5
$B86    $BA2E   JP       V0, $A2E        ; Jump to V0 + A2E
$B88    $4E46   SNE      VE, #46         ; Skip if VE != 70
$B8A    $24A7   CALL     $4A7            ; Call subroutine at 4A7
$B8C    $99E4   UNKNOWN  $99E4           ; Unknown 9xxx instruction
$B8E    $965D   UNKNOWN  $965D           ; Unknown 9xxx instruction
$B90    $7D8D   ADD      VD, #8D         ; Add 141 to VD
$B92    $A745   LD       I, $745         ; Load 745 into I
$B94    $D72D   DRW      V7, V2, #D      ; Draw 13-byte sprite at V7, V2
$B96    $376F   SE       V7, #6F         ; Skip if V7 == 111
$B98    $5F2A   UNKNOWN  $5F2A           ; Unknown 5xxx instruction
$B9A    $E18B   UNKNOWN  $E18B           ; Unknown Exxx instruction
$B9C    $9ACA   UNKNOWN  $9ACA           ; Unknown 9xxx instruction
$B9E    $4C03   SNE      VC, #03         ; Skip if VC != 3
$BA0    $76A7   ADD      V6, #A7         ; Add 167 to V6
$BA2    $4F64   SNE      VF, #64         ; Skip if VF != 100
$BA4    $986E   UNKNOWN  $986E           ; Unknown 9xxx instruction
$BA6    $AA5D   LD       I, $A5D         ; Load A5D into I
$BA8    $52CD   UNKNOWN  $52CD           ; Unknown 5xxx instruction
$BAA    $0CB4   SYS      $CB4            ; System call to CB4
$BAC    $EAEA   UNKNOWN  $EAEA           ; Unknown Exxx instruction
$BAE    $29AA   CALL     $9AA            ; Call subroutine at 9AA
$BB0    $9354   UNKNOWN  $9354           ; Unknown 9xxx instruction
$BB2    $136F   JP       $36F            ; Jump to 36F
$BB4    $1C29   JP       $C29            ; Jump to C29
$BB6    $2E16   CALL     $E16            ; Call subroutine at E16
$BB8    $20A5   CALL     $0A5            ; Call subroutine at 0A5
$BBA    $1453   JP       $453            ; Jump to 453
$BBC    $1DF0   JP       $DF0            ; Jump to DF0
$BBE    $1B38   JP       $B38            ; Jump to B38
$BC0    $81AB   UNKNOWN  81AB            ; Unknown 8xxx instruction
$BC2    $956A   UNKNOWN  $956A           ; Unknown 9xxx instruction
$BC4    $9BA6   UNKNOWN  $9BA6           ; Unknown 9xxx instruction
$BC6    $5FA9   UNKNOWN  $5FA9           ; Unknown 5xxx instruction
$BC8    $7F5C   ADD      VF, #5C         ; Add 92 to VF
$BCA    $6657   LD       V6, #57         ; Load 87 into V6
$BCC    $0798   SYS      $798            ; System call to 798
$BCE    $C542   RND      V5, #42         ; V5 = random & 42
$BD0    $5E07   UNKNOWN  $5E07           ; Unknown 5xxx instruction
$BD2    $9A8A   UNKNOWN  $9A8A           ; Unknown 9xxx instruction
$BD4    $B3CF   JP       V0, $3CF        ; Jump to V0 + 3CF
$BD6    $4E99   SNE      VE, #99         ; Skip if VE != 153
$BD8    $827B   UNKNOWN  827B            ; Unknown 8xxx instruction
$BDA    $C515   RND      V5, #15         ; V5 = random & 15
$BDC    $6933   LD       V9, #33         ; Load 51 into V9
$BDE    $C7CB   RND      V7, #CB         ; V7 = random & CB
$BE0    $7239   ADD      V2, #39         ; Add 57 to V2
$BE2    $02E2   SYS      $2E2            ; System call to 2E2
$BE4    $5B71   UNKNOWN  $5B71           ; Unknown 5xxx instruction
$BE6    $C9FE   RND      V9, #FE         ; V9 = random & FE
$BE8    $8727   SUBN     V7, V2          ; V7 = V2 - V7, VF = !borrow
$BEA    $76FA   ADD      V6, #FA         ; Add 250 to V6
$BEC    $2173   CALL     $173            ; Call subroutine at 173
$BEE    $E7D5   UNKNOWN  $E7D5           ; Unknown Exxx instruction
$BF0    $E53B   UNKNOWN  $E53B           ; Unknown Exxx instruction
$BF2    $BD15   JP       V0, $D15        ; Jump to V0 + D15
$BF4    $4E1D   SNE      VE, #1D         ; Skip if VE != 29
$BF6    $622E   LD       V2, #2E         ; Load 46 into V2
$BF8    $43B2   SNE      V3, #B2         ; Skip if V3 != 178
$BFA    $BC4B   JP       V0, $C4B        ; Jump to V0 + C4B
$BFC    $CB84   RND      VB, #84         ; VB = random & 84
$BFE    $217C   CALL     $17C            ; Call subroutine at 17C
$C00    $AF07   LD       I, $F07         ; Load F07 into I
$C02    $A00B   LD       I, $00B         ; Load 00B into I
$C04    $E004   UNKNOWN  $E004           ; Unknown Exxx instruction
$C06    $03A8   SYS      $3A8            ; System call to 3A8
$C08    $7429   ADD      V4, #29         ; Add 41 to V4
$C0A    $7D8B   ADD      VD, #8B         ; Add 139 to VD
$C0C    $B495   JP       V0, $495        ; Jump to V0 + 495
$C0E    $4F8E   SNE      VF, #8E         ; Skip if VF != 142
$C10    $6A1F   LD       VA, #1F         ; Load 31 into VA
$C12    $57DB   UNKNOWN  $57DB           ; Unknown 5xxx instruction
$C14    $EC5D   UNKNOWN  $EC5D           ; Unknown Exxx instruction
$C16    $13A9   JP       $3A9            ; Jump to 3A9
$C18    $486A   SNE      V8, #6A         ; Skip if V8 != 106
$C1A    $68CD   LD       V8, #CD         ; Load 205 into V8
$C1C    $B9ED   JP       V0, $9ED        ; Jump to V0 + 9ED
$C1E    $FAC5   UNKNOWN  FAC5            ; Unknown Fxxx instruction
$C20    $7103   ADD      V1, #03         ; Add 3 to V1
$C22    $E230   UNKNOWN  $E230           ; Unknown Exxx instruction
$C24    $0565   SYS      $565            ; System call to 565
$C26    $9834   UNKNOWN  $9834           ; Unknown 9xxx instruction
$C28    $6BEA   LD       VB, #EA         ; Load 234 into VB
$C2A    $EC56   UNKNOWN  $EC56           ; Unknown Exxx instruction
$C2C    $2E76   CALL     $E76            ; Call subroutine at E76
$C2E    $ED0F   UNKNOWN  $ED0F           ; Unknown Exxx instruction
$C30    $4237   SNE      V2, #37         ; Skip if V2 != 55
$C32    $E507   UNKNOWN  $E507           ; Unknown Exxx instruction
$C34    $8FD9   UNKNOWN  8FD9            ; Unknown 8xxx instruction
$C36    $DEF7   DRW      VE, VF, #7      ; Draw 7-byte sprite at VE, VF
$C38    $445A   SNE      V4, #5A         ; Skip if V4 != 90
$C3A    $816E   SHL      V1              ; V1 <<= 1, VF = MSB
$C3C    $8E58   UNKNOWN  8E58            ; Unknown 8xxx instruction
$C3E    $C40B   RND      V4, #0B         ; V4 = random & 0B
$C40    $9973   UNKNOWN  $9973           ; Unknown 9xxx instruction
$C42    $4E1B   SNE      VE, #1B         ; Skip if VE != 27
$C44    $6484   LD       V4, #84         ; Load 132 into V4
$C46    $5626   UNKNOWN  $5626           ; Unknown 5xxx instruction
$C48    $A569   LD       I, $569         ; Load 569 into I
$C4A    $A6DA   LD       I, $6DA         ; Load 6DA into I
$C4C    $4E4B   SNE      VE, #4B         ; Skip if VE != 75
$C4E    $C97E   RND      V9, #7E         ; V9 = random & 7E
$C50    $B1CB   JP       V0, $1CB        ; Jump to V0 + 1CB
$C52    $93D5   UNKNOWN  $93D5           ; Unknown 9xxx instruction
$C54    $7678   ADD      V6, #78         ; Add 120 to V6
$C56    $C5EB   RND      V5, #EB         ; V5 = random & EB
$C58    $041D   SYS      $41D            ; System call to 41D
$C5A    $54F6   UNKNOWN  $54F6           ; Unknown 5xxx instruction
$C5C    $3244   SE       V2, #44         ; Skip if V2 == 68
$C5E    $1AD7   JP       $AD7            ; Jump to AD7
$C60    $ACA0   LD       I, $CA0         ; Load CA0 into I
$C62    $F19A   UNKNOWN  F19A            ; Unknown Fxxx instruction
$C64    $2BCC   CALL     $BCC            ; Call subroutine at BCC
$C66    $2750   CALL     $750            ; Call subroutine at 750
$C68    $773D   ADD      V7, #3D         ; Add 61 to V7
$C6A    $D0C6   DRW      V0, VC, #6      ; Draw 6-byte sprite at V0, VC
$C6C    $FD19   UNKNOWN  FD19            ; Unknown Fxxx instruction
$C6E    $4533   SNE      V5, #33         ; Skip if V5 != 51
$C70    $C50B   RND      V5, #0B         ; V5 = random & 0B
$C72    $E8E9   UNKNOWN  $E8E9           ; Unknown Exxx instruction
$C74    $80EA   UNKNOWN  80EA            ; Unknown 8xxx instruction
$C76    $FAE9   UNKNOWN  FAE9            ; Unknown Fxxx instruction
$C78    $A523   LD       I, $523         ; Load 523 into I
$C7A    $FF36   UNKNOWN  FF36            ; Unknown Fxxx instruction
$C7C    $C394   RND      V3, #94         ; V3 = random & 94
$C7E    $47EE   SNE      V7, #EE         ; Skip if V7 != 238
$C80    $F03A   UNKNOWN  F03A            ; Unknown Fxxx instruction
$C82    $7019   ADD      V0, #19         ; Add 25 to V0
$C84    $01EE   SYS      $1EE            ; System call to 1EE
$C86    $1319   JP       $319            ; Jump to 319
$C88    $1AEC   JP       $AEC            ; Jump to AEC
$C8A    $AF1F   LD       I, $F1F         ; Load F1F into I
$C8C    $0A87   SYS      $A87            ; System call to A87
$C8E    $B0A3   JP       V0, $0A3        ; Jump to V0 + 0A3
$C90    $A7E7   LD       I, $7E7         ; Load 7E7 into I
$C92    $9D2A   UNKNOWN  $9D2A           ; Unknown 9xxx instruction
$C94    $2267   CALL     $267            ; Call subroutine at 267
$C96    $4E35   SNE      VE, #35         ; Skip if VE != 53
$C98    $B9D6   JP       V0, $9D6        ; Jump to V0 + 9D6
$C9A    $E6F5   UNKNOWN  $E6F5           ; Unknown Exxx instruction
$C9C    $AAF2   LD       I, $AF2         ; Load AF2 into I
$C9E    $8A82   AND      VA, V8          ; VA &= V8
$CA0    $0943   SYS      $943            ; System call to 943
$CA2    $D273   DRW      V2, V7, #3      ; Draw 3-byte sprite at V2, V7
$CA4    $D7E1   DRW      V7, VE, #1      ; Draw 1-byte sprite at V7, VE
$CA6    $01D1   SYS      $1D1            ; System call to 1D1
$CA8    $0F2C   SYS      $F2C            ; System call to F2C
$CAA    $B2C0   JP       V0, $2C0        ; Jump to V0 + 2C0
$CAC    $84E6   SHR      V4              ; V4 >>= 1, VF = LSB
$CAE    $1313   JP       $313            ; Jump to 313
$CB0    $4AEF   SNE      VA, #EF         ; Skip if VA != 239
$CB2    $C154   RND      V1, #54         ; V1 = random & 54
$CB4    $A77D   LD       I, $77D         ; Load 77D into I
$CB6    $105E   JP       $05E            ; Jump to 05E
$CB8    $DBB5   DRW      VB, VB, #5      ; Draw 5-byte sprite at VB, VB
$CBA    $DD04   DRW      VD, V0, #4      ; Draw 4-byte sprite at VD, V0
$CBC    $C759   RND      V7, #59         ; V7 = random & 59
$CBE    $E9F3   UNKNOWN  $E9F3           ; Unknown Exxx instruction
$CC0    $D7E7   DRW      V7, VE, #7      ; Draw 7-byte sprite at V7, VE
$CC2    $C3B2   RND      V3, #B2         ; V3 = random & B2
$CC4    $CC16   RND      VC, #16         ; VC = random & 16
$CC6    $3E38   SE       VE, #38         ; Skip if VE == 56
$CC8    $2B30   CALL     $B30            ; Call subroutine at B30
$CCA    $2A0B   CALL     $A0B            ; Call subroutine at A0B
$CCC    $CC75   RND      VC, #75         ; VC = random & 75
$CCE    $0E54   SYS      $E54            ; System call to E54
$CD0    $F5EF   UNKNOWN  F5EF            ; Unknown Fxxx instruction
$CD2    $EDBE   UNKNOWN  $EDBE           ; Unknown Exxx instruction
$CD4    $663E   LD       V6, #3E         ; Load 62 into V6
$CD6    $A633   LD       I, $633         ; Load 633 into I
$CD8    $58B4   UNKNOWN  $58B4           ; Unknown 5xxx instruction
$CDA    $AC7C   LD       I, $C7C         ; Load C7C into I
$CDC    $A100   LD       I, $100         ; Load 100 into I
$CDE    $90D8   UNKNOWN  $90D8           ; Unknown 9xxx instruction
$CE0    $4C57   SNE      VC, #57         ; Skip if VC != 87
$CE2    $6C2A   LD       VC, #2A         ; Load 42 into VC
$CE4    $87F5   SUB      V7, VF          ; V7 -= VF, VF = !borrow
$CE6    $2322   CALL     $322            ; Call subroutine at 322
$CE8    $9EB8   UNKNOWN  $9EB8           ; Unknown 9xxx instruction
$CEA    $5161   UNKNOWN  $5161           ; Unknown 5xxx instruction
$CEC    $1498   JP       $498            ; Jump to 498
$CEE    $702C   ADD      V0, #2C         ; Add 44 to V0
$CF0    $07FA   SYS      $7FA            ; System call to 7FA
$CF2    $EF9D   UNKNOWN  $EF9D           ; Unknown Exxx instruction
$CF4    $6BC3   LD       VB, #C3         ; Load 195 into VB
$CF6    $BB5C   JP       V0, $B5C        ; Jump to V0 + B5C
$CF8    $F93C   UNKNOWN  F93C            ; Unknown Fxxx instruction
$CFA    $A167   LD       I, $167         ; Load 167 into I
$CFC    $57BF   UNKNOWN  $57BF           ; Unknown 5xxx instruction
$CFE    $2CD0   CALL     $CD0            ; Call subroutine at CD0
$D00    $EF16   UNKNOWN  $EF16           ; Unknown Exxx instruction
$D02    $80D0   LD       V0, VD          ; V0 = VD
$D04    $4411   SNE      V4, #11         ; Skip if V4 != 17
$D06    $6DBA   LD       VD, #BA         ; Load 186 into VD
$D08    $70DE   ADD      V0, #DE         ; Add 222 to V0
$D0A    $200F   CALL     $00F            ; Call subroutine at 00F
$D0C    $57D6   UNKNOWN  $57D6           ; Unknown 5xxx instruction
$D0E    $FDF9   UNKNOWN  FDF9            ; Unknown Fxxx instruction
$D10    $5ED5   UNKNOWN  $5ED5           ; Unknown 5xxx instruction
$D12    $EDB6   UNKNOWN  $EDB6           ; Unknown Exxx instruction
$D14    $8479   UNKNOWN  8479            ; Unknown 8xxx instruction
$D16    $8003   XOR      V0, V0          ; V0 ^= V0
$D18    $B1B0   JP       V0, $1B0        ; Jump to V0 + 1B0
$D1A    $820E   SHL      V2              ; V2 <<= 1, VF = MSB
$D1C    $B966   JP       V0, $966        ; Jump to V0 + 966
$D1E    $0AEE   SYS      $AEE            ; System call to AEE
$D20    $E7D4   UNKNOWN  $E7D4           ; Unknown Exxx instruction
$D22    $D131   DRW      V1, V3, #1      ; Draw 1-byte sprite at V1, V3
$D24    $C229   RND      V2, #29         ; V2 = random & 29
$D26    $E6BC   UNKNOWN  $E6BC           ; Unknown Exxx instruction
$D28    $04FD   SYS      $4FD            ; System call to 4FD
$D2A    $AFA1   LD       I, $FA1         ; Load FA1 into I
$D2C    $869A   UNKNOWN  869A            ; Unknown 8xxx instruction
$D2E    $D7C7   DRW      V7, VC, #7      ; Draw 7-byte sprite at V7, VC
$D30    $929B   UNKNOWN  $929B           ; Unknown 9xxx instruction
$D32    $4BBB   SNE      VB, #BB         ; Skip if VB != 187
$D34    $4106   SNE      V1, #06         ; Skip if V1 != 6
$D36    $F511   UNKNOWN  F511            ; Unknown Fxxx instruction
$D38    $0FBF   SYS      $FBF            ; System call to FBF
$D3A    $B4E8   JP       V0, $4E8        ; Jump to V0 + 4E8
$D3C    $9A00   SNE      VA, V0          ; Skip if VA != V0
$D3E    $B9C4   JP       V0, $9C4        ; Jump to V0 + 9C4
$D40    $B50D   JP       V0, $50D        ; Jump to V0 + 50D
$D42    $63F3   LD       V3, #F3         ; Load 243 into V3
$D44    $1ED4   JP       $ED4            ; Jump to ED4
$D46    $1AD9   JP       $AD9            ; Jump to AD9
$D48    $B5A6   JP       V0, $5A6        ; Jump to V0 + 5A6
$D4A    $6CE5   LD       VC, #E5         ; Load 229 into VC
$D4C    $1F8D   JP       $F8D            ; Jump to F8D
$D4E    $A461   LD       I, $461         ; Load 461 into I
$D50    $3507   SE       V5, #07         ; Skip if V5 == 7
$D52    $6A7C   LD       VA, #7C         ; Load 124 into VA
$D54    $B56F   JP       V0, $56F        ; Jump to V0 + 56F
$D56    $8762   AND      V7, V6          ; V7 &= V6
$D58    $50ED   UNKNOWN  $50ED           ; Unknown 5xxx instruction
$D5A    $D9EE   DRW      V9, VE, #E      ; Draw 14-byte sprite at V9, VE
$D5C    $B50F   JP       V0, $50F        ; Jump to V0 + 50F
$D5E    $D0E9   DRW      V0, VE, #9      ; Draw 9-byte sprite at V0, VE
$D60    $074A   SYS      $74A            ; System call to 74A
$D62    $49B6   SNE      V9, #B6         ; Skip if V9 != 182
$D64    $A6E1   LD       I, $6E1         ; Load 6E1 into I
$D66    $B227   JP       V0, $227        ; Jump to V0 + 227
$D68    $2D50   CALL     $D50            ; Call subroutine at D50
$D6A    $F688   UNKNOWN  F688            ; Unknown Fxxx instruction
$D6C    $AED8   LD       I, $ED8         ; Load ED8 into I
$D6E    $9944   UNKNOWN  $9944           ; Unknown 9xxx instruction
$D70    $7B0D   ADD      VB, #0D         ; Add 13 to VB
$D72    $1875   JP       $875            ; Jump to 875
$D74    $1B46   JP       $B46            ; Jump to B46
$D76    $7035   ADD      V0, #35         ; Add 53 to V0
$D78    $8842   AND      V8, V4          ; V8 &= V4
$D7A    $34CE   SE       V4, #CE         ; Skip if V4 == 206
$D7C    $F154   UNKNOWN  F154            ; Unknown Fxxx instruction
$D7E    $00DB   SYS      $0DB            ; System call to 0DB
$D80    $F85C   UNKNOWN  F85C            ; Unknown Fxxx instruction
$D82    $979A   UNKNOWN  $979A           ; Unknown 9xxx instruction
$D84    $8EA2   AND      VE, VA          ; VE &= VA
$D86    $2345   CALL     $345            ; Call subroutine at 345
$D88    $9B28   UNKNOWN  $9B28           ; Unknown 9xxx instruction
$D8A    $D150   DRW      V1, V5, #0      ; Draw 0-byte sprite at V1, V5
$D8C    $3DF5   SE       VD, #F5         ; Skip if VD == 245
$D8E    $79BC   ADD      V9, #BC         ; Add 188 to V9
$D90    $E725   UNKNOWN  $E725           ; Unknown Exxx instruction
$D92    $F6C2   UNKNOWN  F6C2            ; Unknown Fxxx instruction
$D94    $2A0D   CALL     $A0D            ; Call subroutine at A0D
$D96    $DDAD   DRW      VD, VA, #D      ; Draw 13-byte sprite at VD, VA
$D98    $AE3A   LD       I, $E3A         ; Load E3A into I
$D9A    $248B   CALL     $48B            ; Call subroutine at 48B
$D9C    $E504   UNKNOWN  $E504           ; Unknown Exxx instruction
$D9E    $67F4   LD       V7, #F4         ; Load 244 into V7
$DA0    $3A50   SE       VA, #50         ; Skip if VA == 80
$DA2    $ACDD   LD       I, $CDD         ; Load CDD into I
$DA4    $16DA   JP       $6DA            ; Jump to 6DA
$DA6    $34E4   SE       V4, #E4         ; Skip if V4 == 228
$DA8    $4C29   SNE      VC, #29         ; Skip if VC != 41
$DAA    $5004   UNKNOWN  $5004           ; Unknown 5xxx instruction
$DAC    $56C1   UNKNOWN  $56C1           ; Unknown 5xxx instruction
$DAE    $458B   SNE      V5, #8B         ; Skip if V5 != 139
$DB0    $0E89   SYS      $E89            ; System call to E89
$DB2    $BB03   JP       V0, $B03        ; Jump to V0 + B03
$DB4    $9DA6   UNKNOWN  $9DA6           ; Unknown 9xxx instruction
$DB6    $0C6B   SYS      $C6B            ; System call to C6B
$DB8    $B774   JP       V0, $774        ; Jump to V0 + 774
$DBA    $798F   ADD      V9, #8F         ; Add 143 to V9
$DBC    $533E   UNKNOWN  $533E           ; Unknown 5xxx instruction
$DBE    $1137   JP       $137            ; Jump to 137
$DC0    $9247   UNKNOWN  $9247           ; Unknown 9xxx instruction
$DC2    $34CD   SE       V4, #CD         ; Skip if V4 == 205
$DC4    $F728   UNKNOWN  F728            ; Unknown Fxxx instruction
$DC6    $920E   UNKNOWN  $920E           ; Unknown 9xxx instruction
$DC8    $AE9D   LD       I, $E9D         ; Load E9D into I
$DCA    $1550   JP       $550            ; Jump to 550
$DCC    $D38B   DRW      V3, V8, #B      ; Draw 11-byte sprite at V3, V8
$DCE    $FC6E   UNKNOWN  FC6E            ; Unknown Fxxx instruction
$DD0    $7B80   ADD      VB, #80         ; Add 128 to VB
$DD2    $EB47   UNKNOWN  $EB47           ; Unknown Exxx instruction
$DD4    $EBCF   UNKNOWN  $EBCF           ; Unknown Exxx instruction
$DD6    $AB26   LD       I, $B26         ; Load B26 into I
$DD8    $B1EE   JP       V0, $1EE        ; Jump to V0 + 1EE
$DDA    $6180   LD       V1, #80         ; Load 128 into V1
$DDC    $70A4   ADD      V0, #A4         ; Add 164 to V0
$DDE    $668A   LD       V6, #8A         ; Load 138 into V6
$DE0    $DED1   DRW      VE, VD, #1      ; Draw 1-byte sprite at VE, VD
$DE2    $666B   LD       V6, #6B         ; Load 107 into V6
$DE4    $149E   JP       $49E            ; Jump to 49E
$DE6    $691A   LD       V9, #1A         ; Load 26 into V9
$DE8    $3132   SE       V1, #32         ; Skip if V1 == 50
$DEA    $CFC8   RND      VF, #C8         ; VF = random & C8
$DEC    $0BE5   SYS      $BE5            ; System call to BE5
$DEE    $82B0   LD       V2, VB          ; V2 = VB
$DF0    $83AF   UNKNOWN  83AF            ; Unknown 8xxx instruction
$DF2    $EF74   UNKNOWN  $EF74           ; Unknown Exxx instruction
$DF4    $CCAC   RND      VC, #AC         ; VC = random & AC
$DF6    $21CE   CALL     $1CE            ; Call subroutine at 1CE
$DF8    $9C02   UNKNOWN  $9C02           ; Unknown 9xxx instruction
$DFA    $89EE   SHL      V9              ; V9 <<= 1, VF = MSB
$DFC    $F2AE   UNKNOWN  F2AE            ; Unknown Fxxx instruction
$DFE    $2540   CALL     $540            ; Call subroutine at 540
$E00    $B39F   JP       V0, $39F        ; Jump to V0 + 39F
$E02    $2F0E   CALL     $F0E            ; Call subroutine at F0E
$E04    $1D15   JP       $D15            ; Jump to D15
$E06    $9D4D   UNKNOWN  $9D4D           ; Unknown 9xxx instruction
$E08    $FC77   UNKNOWN  FC77            ; Unknown Fxxx instruction
$E0A    $407C   SNE      V0, #7C         ; Skip if V0 != 124
$E0C    $430C   SNE      V3, #0C         ; Skip if V3 != 12
$E0E    $6240   LD       V2, #40         ; Load 64 into V2
$E10    $CE4F   RND      VE, #4F         ; VE = random & 4F
$E12    $42AD   SNE      V2, #AD         ; Skip if V2 != 173
$E14    $BD2D   JP       V0, $D2D        ; Jump to V0 + D2D
$E16    $EC03   UNKNOWN  $EC03           ; Unknown Exxx instruction
$E18    $87B8   UNKNOWN  87B8            ; Unknown 8xxx instruction
$E1A    $7ABF   ADD      VA, #BF         ; Add 191 to VA
$E1C    $2761   CALL     $761            ; Call subroutine at 761
$E1E    $7F14   ADD      VF, #14         ; Add 20 to VF
$E20    $CCED   RND      VC, #ED         ; VC = random & ED
$E22    $4E4B   SNE      VE, #4B         ; Skip if VE != 75
$E24    $AEF4   LD       I, $EF4         ; Load EF4 into I
$E26    $6680   LD       V6, #80         ; Load 128 into V6
$E28    $2FB3   CALL     $FB3            ; Call subroutine at FB3
$E2A    $500D   UNKNOWN  $500D           ; Unknown 5xxx instruction
$E2C    $97D0   SNE      V7, VD          ; Skip if V7 != VD
$E2E    $2147   CALL     $147            ; Call subroutine at 147
$E30    $93D8   UNKNOWN  $93D8           ; Unknown 9xxx instruction
$E32    $54FB   UNKNOWN  $54FB           ; Unknown 5xxx instruction
$E34    $66A1   LD       V6, #A1         ; Load 161 into V6
$E36    $9A1A   UNKNOWN  $9A1A           ; Unknown 9xxx instruction
$E38    $28E8   CALL     $8E8            ; Call subroutine at 8E8
$E3A    $086E   SYS      $86E            ; System call to 86E
$E3C    $5281   UNKNOWN  $5281           ; Unknown 5xxx instruction
$E3E    $B1EC   JP       V0, $1EC        ; Jump to V0 + 1EC
$E40    $ED95   UNKNOWN  $ED95           ; Unknown Exxx instruction
$E42    $4D2A   SNE      VD, #2A         ; Skip if VD != 42
$E44    $2AD3   CALL     $AD3            ; Call subroutine at AD3
$E46    $231E   CALL     $31E            ; Call subroutine at 31E
$E48    $AA68   LD       I, $A68         ; Load A68 into I
$E4A    $D313   DRW      V3, V1, #3      ; Draw 3-byte sprite at V3, V1
$E4C    $7404   ADD      V4, #04         ; Add 4 to V4
$E4E    $3D68   SE       VD, #68         ; Skip if VD == 104
$E50    $9B9C   UNKNOWN  $9B9C           ; Unknown 9xxx instruction
$E52    $653E   LD       V5, #3E         ; Load 62 into V5
$E54    $E57E   UNKNOWN  $E57E           ; Unknown Exxx instruction
$E56    $090B   SYS      $90B            ; System call to 90B
$E58    $3B0C   SE       VB, #0C         ; Skip if VB == 12
$E5A    $87EC   UNKNOWN  87EC            ; Unknown 8xxx instruction
$E5C    $E995   UNKNOWN  $E995           ; Unknown Exxx instruction
$E5E    $D904   DRW      V9, V0, #4      ; Draw 4-byte sprite at V9, V0
$E60    $1F10   JP       $F10            ; Jump to F10
$E62    $8871   OR       V8, V7          ; V8 |= V7
$E64    $A048   LD       I, $048         ; Load 048 into I
$E66    $427D   SNE      V2, #7D         ; Skip if V2 != 125
$E68    $886E   SHL      V8              ; V8 <<= 1, VF = MSB
$E6A    $6272   LD       V2, #72         ; Load 114 into V2
$E6C    $14BC   JP       $4BC            ; Jump to 4BC
$E6E    $3C18   SE       VC, #18         ; Skip if VC == 24
$E70    $EB98   UNKNOWN  $EB98           ; Unknown Exxx instruction
$E72    $FEB7   UNKNOWN  FEB7            ; Unknown Fxxx instruction
$E74    $CF13   RND      VF, #13         ; VF = random & 13
$E76    $4505   SNE      V5, #05         ; Skip if V5 != 5
$E78    $BD13   JP       V0, $D13        ; Jump to V0 + D13
$E7A    $C427   RND      V4, #27         ; V4 = random & 27
$E7C    $4A0F   SNE      VA, #0F         ; Skip if VA != 15
$E7E    $7CFE   ADD      VC, #FE         ; Add 254 to VC
$E80    $5258   UNKNOWN  $5258           ; Unknown 5xxx instruction
$E82    $8598   UNKNOWN  8598            ; Unknown 8xxx instruction
$E84    $F561   UNKNOWN  F561            ; Unknown Fxxx instruction
$E86    $9BAE   UNKNOWN  $9BAE           ; Unknown 9xxx instruction
$E88    $EFE5   UNKNOWN  $EFE5           ; Unknown Exxx instruction
$E8A    $B6A7   JP       V0, $6A7        ; Jump to V0 + 6A7
$E8C    $4AAB   SNE      VA, #AB         ; Skip if VA != 171
$E8E    $0217   SYS      $217            ; System call to 217
$E90    $94F2   UNKNOWN  $94F2           ; Unknown 9xxx instruction
$E92    $3D4C   SE       VD, #4C         ; Skip if VD == 76
$E94    $879F   UNKNOWN  879F            ; Unknown 8xxx instruction
$E96    $9889   UNKNOWN  $9889           ; Unknown 9xxx instruction
$E98    $C8C4   RND      V8, #C4         ; V8 = random & C4
$E9A    $7462   ADD      V4, #62         ; Add 98 to V4
$E9C    $2D65   CALL     $D65            ; Call subroutine at D65
$E9E    $9B73   UNKNOWN  $9B73           ; Unknown 9xxx instruction
$EA0    $27F0   CALL     $7F0            ; Call subroutine at 7F0
$EA2    $95EE   UNKNOWN  $95EE           ; Unknown 9xxx instruction
$EA4    $6B5C   LD       VB, #5C         ; Load 92 into VB
$EA6    $8D53   XOR      VD, V5          ; VD ^= V5
$EA8    $A26B   LD       I, $26B         ; Load 26B into I
$EAA    $F2B5   UNKNOWN  F2B5            ; Unknown Fxxx instruction
$EAC    $0384   SYS      $384            ; System call to 384
$EAE    $6EA7   LD       VE, #A7         ; Load 167 into VE
$EB0    $2CEC   CALL     $CEC            ; Call subroutine at CEC
$EB2    $9949   UNKNOWN  $9949           ; Unknown 9xxx instruction
$EB4    $7C8B   ADD      VC, #8B         ; Add 139 to VC
$EB6    $8DA1   OR       VD, VA          ; VD |= VA
$EB8    $6FDF   LD       VF, #DF         ; Load 223 into VF
$EBA    $89F6   SHR      V9              ; V9 >>= 1, VF = LSB
$EBC    $B0CC   JP       V0, $0CC        ; Jump to V0 + 0CC
$EBE    $366C   SE       V6, #6C         ; Skip if V6 == 108
$EC0    $18C3   JP       $8C3            ; Jump to 8C3
$EC2    $1374   JP       $374            ; Jump to 374
$EC4    $C976   RND      V9, #76         ; V9 = random & 76
$EC6    $51B0   SE       V1, VB          ; Skip if V1 == VB
$EC8    $6922   LD       V9, #22         ; Load 34 into V9
$ECA    $4CD0   SNE      VC, #D0         ; Skip if VC != 208
$ECC    $F0C5   UNKNOWN  F0C5            ; Unknown Fxxx instruction
$ECE    $D6FA   DRW      V6, VF, #A      ; Draw 10-byte sprite at V6, VF
$ED0    $8D0F   UNKNOWN  8D0F            ; Unknown 8xxx instruction
$ED2    $55CF   UNKNOWN  $55CF           ; Unknown 5xxx instruction
$ED4    $C7A7   RND      V7, #A7         ; V7 = random & A7
$ED6    $8EDB   UNKNOWN  8EDB            ; Unknown 8xxx instruction
$ED8    $DB27   DRW      VB, V2, #7      ; Draw 7-byte sprite at VB, V2
$EDA    $5306   UNKNOWN  $5306           ; Unknown 5xxx instruction
$EDC    $92B0   SNE      V2, VB          ; Skip if V2 != VB
$EDE    $F8A3   UNKNOWN  F8A3            ; Unknown Fxxx instruction
$EE0    $A1EE   LD       I, $1EE         ; Load 1EE into I
$EE2    $EA62   UNKNOWN  $EA62           ; Unknown Exxx instruction
$EE4    $9C76   UNKNOWN  $9C76           ; Unknown 9xxx instruction
$EE6    $8A93   XOR      VA, V9          ; VA ^= V9
$EE8    $C356   RND      V3, #56         ; V3 = random & 56
$EEA    $E1AC   UNKNOWN  $E1AC           ; Unknown Exxx instruction
$EEC    $A88A   LD       I, $88A         ; Load 88A into I
$EEE    $539E   UNKNOWN  $539E           ; Unknown 5xxx instruction
$EF0    $9351   UNKNOWN  $9351           ; Unknown 9xxx instruction
$EF2    $7A2E   ADD      VA, #2E         ; Add 46 to VA
$EF4    $ABB9   LD       I, $BB9         ; Load BB9 into I
$EF6    $8B8C   UNKNOWN  8B8C            ; Unknown 8xxx instruction
$EF8    $9483   UNKNOWN  $9483           ; Unknown 9xxx instruction
$EFA    $2D55   CALL     $D55            ; Call subroutine at D55
$EFC    $5FE6   UNKNOWN  $5FE6           ; Unknown 5xxx instruction
$EFE    $4196   SNE      V1, #96         ; Skip if V1 != 150
$F00    $50FE   UNKNOWN  $50FE           ; Unknown 5xxx instruction
$F02    $6507   LD       V5, #07         ; Load 7 into V5
$F04    $FFBB   UNKNOWN  FFBB            ; Unknown Fxxx instruction
$F06    $44A6   SNE      V4, #A6         ; Skip if V4 != 166
$F08    $9119   UNKNOWN  $9119           ; Unknown 9xxx instruction
$F0A    $5F6A   UNKNOWN  $5F6A           ; Unknown 5xxx instruction
$F0C    $FCFA   UNKNOWN  FCFA            ; Unknown Fxxx instruction
$F0E    $DBC9   DRW      VB, VC, #9      ; Draw 9-byte sprite at VB, VC
$F10    $F896   UNKNOWN  F896            ; Unknown Fxxx instruction
$F12    $4514   SNE      V5, #14         ; Skip if V5 != 20
$F14    $1019   JP       $019            ; Jump to 019
$F16    $B9AD   JP       V0, $9AD        ; Jump to V0 + 9AD
$F18    $8956   SHR      V9              ; V9 >>= 1, VF = LSB
$F1A    $1D01   JP       $D01            ; Jump to D01
$F1C    $01F0   SYS      $1F0            ; System call to 1F0
$F1E    $B4E7   JP       V0, $4E7        ; Jump to V0 + 4E7
$F20    $2223   CALL     $223            ; Call subroutine at 223
$F22    $ECB7   UNKNOWN  $ECB7           ; Unknown Exxx instruction
$F24    $EDC5   UNKNOWN  $EDC5           ; Unknown Exxx instruction
$F26    $1CF7   JP       $CF7            ; Jump to CF7
$F28    $A4F3   LD       I, $4F3         ; Load 4F3 into I
$F2A    $DA06   DRW      VA, V0, #6      ; Draw 6-byte sprite at VA, V0
$F2C    $CD3A   RND      VD, #3A         ; VD = random & 3A
$F2E    $5B94   UNKNOWN  $5B94           ; Unknown 5xxx instruction
$F30    $9546   UNKNOWN  $9546           ; Unknown 9xxx instruction
$F32    $19B0   JP       $9B0            ; Jump to 9B0
$F34    $6C80   LD       VC, #80         ; Load 128 into VC
$F36    $2953   CALL     $953            ; Call subroutine at 953
$F38    $2246   CALL     $246            ; Call subroutine at 246
$F3A    $026F   SYS      $26F            ; System call to 26F
$F3C    $BAB3   JP       V0, $AB3        ; Jump to V0 + AB3
$F3E    $5703   UNKNOWN  $5703           ; Unknown 5xxx instruction
$F40    $2A0A   CALL     $A0A            ; Call subroutine at A0A
$F42    $7257   ADD      V2, #57         ; Add 87 to V2
$F44    $86E6   SHR      V6              ; V6 >>= 1, VF = LSB
$F46    $34CF   SE       V4, #CF         ; Skip if V4 == 207
$F48    $12B8   JP       $2B8            ; Jump to 2B8
$F4A    $E5FE   UNKNOWN  $E5FE           ; Unknown Exxx instruction
$F4C    $6627   LD       V6, #27         ; Load 39 into V6
$F4E    $A59E   LD       I, $59E         ; Load 59E into I
$F50    $C5ED   RND      V5, #ED         ; V5 = random & ED
$F52    $3479   SE       V4, #79         ; Skip if V4 == 121
$F54    $BCC6   JP       V0, $CC6        ; Jump to V0 + CC6
$F56    $B852   JP       V0, $852        ; Jump to V0 + 852
$F58    $7B97   ADD      VB, #97         ; Add 151 to VB
$F5A    $9DC0   SNE      VD, VC          ; Skip if VD != VC
$F5C    $E6B9   UNKNOWN  $E6B9           ; Unknown Exxx instruction
$F5E    $6BE3   LD       VB, #E3         ; Load 227 into VB
$F60    $4A4B   SNE      VA, #4B         ; Skip if VA != 75
$F62    $2BB2   CALL     $BB2            ; Call subroutine at BB2
$F64    $61AC   LD       V1, #AC         ; Load 172 into V1
$F66    $6CCF   LD       VC, #CF         ; Load 207 into VC
$F68    $8514   ADD      V5, V1          ; V5 += V1, VF = carry
$F6A    $A6BF   LD       I, $6BF         ; Load 6BF into I
$F6C    $DFA3   DRW      VF, VA, #3      ; Draw 3-byte sprite at VF, VA
$F6E    $C8F4   RND      V8, #F4         ; V8 = random & F4
$F70    $A5DA   LD       I, $5DA         ; Load 5DA into I
$F72    $12A8   JP       $2A8            ; Jump to 2A8
$F74    $2558   CALL     $558            ; Call subroutine at 558
$F76    $A02E   LD       I, $02E         ; Load 02E into I
$F78    $8B19   UNKNOWN  8B19            ; Unknown 8xxx instruction
$F7A    $C651   RND      V6, #51         ; V6 = random & 51
$F7C    $927C   UNKNOWN  $927C           ; Unknown 9xxx instruction
$F7E    $E083   UNKNOWN  $E083           ; Unknown Exxx instruction
$F80    $30CB   SE       V0, #CB         ; Skip if V0 == 203
$F82    $EF5C   UNKNOWN  $EF5C           ; Unknown Exxx instruction
$F84    $21CB   CALL     $1CB            ; Call subroutine at 1CB
$F86    $4481   SNE      V4, #81         ; Skip if V4 != 129
$F88    $A320   LD       I, $320         ; Load 320 into I
$F8A    $6312   LD       V3, #12         ; Load 18 into V3
$F8C    $5006   UNKNOWN  $5006           ; Unknown 5xxx instruction
$F8E    $5C37   UNKNOWN  $5C37           ; Unknown 5xxx instruction
$F90    $F3B0   UNKNOWN  F3B0            ; Unknown Fxxx instruction
$F92    $0D62   SYS      $D62            ; System call to D62
$F94    $9393   UNKNOWN  $9393           ; Unknown 9xxx instruction
$F96    $0A51   SYS      $A51            ; System call to A51
$F98    $1C70   JP       $C70            ; Jump to C70
$F9A    $4095   SNE      V0, #95         ; Skip if V0 != 149
$F9C    $9F92   UNKNOWN  $9F92           ; Unknown 9xxx instruction
$F9E    $AD3C   LD       I, $D3C         ; Load D3C into I
$FA0    $0D64   SYS      $D64            ; System call to D64
$FA2    $19E3   JP       $9E3            ; Jump to 9E3
$FA4    $E79E   SKP      V7              ; Skip if key V7 pressed
$FA6    $3B41   SE       VB, #41         ; Skip if VB == 65
$FA8    $266F   CALL     $66F            ; Call subroutine at 66F
$FAA    $613C   LD       V1, #3C         ; Load 60 into V1
$FAC    $642E   LD       V4, #2E         ; Load 46 into V4
$FAE    $5334   UNKNOWN  $5334           ; Unknown 5xxx instruction
$FB0    $6A19   LD       VA, #19         ; Load 25 into VA
$FB2    $FCEA   UNKNOWN  FCEA            ; Unknown Fxxx instruction
$FB4    $17A6   JP       $7A6            ; Jump to 7A6
$FB6    $17CB   JP       $7CB            ; Jump to 7CB
$FB8    $41E1   SNE      V1, #E1         ; Skip if V1 != 225
$FBA    $3360   SE       V3, #60         ; Skip if V3 == 96
$FBC    $BDBB   JP       V0, $DBB        ; Jump to V0 + DBB
$FBE    $6FF9   LD       VF, #F9         ; Load 249 into VF
$FC0    $82A8   UNKNOWN  82A8            ; Unknown 8xxx instruction
$FC2    $9806   UNKNOWN  $9806           ; Unknown 9xxx instruction
$FC4    $DA1A   DRW      VA, V1, #A      ; Draw 10-byte sprite at VA, V1
$FC6    $C3B5   RND      V3, #B5         ; V3 = random & B5
$FC8    $11D3   JP       $1D3            ; Jump to 1D3
$FCA    $C63D   RND      V6, #3D         ; V6 = random & 3D
$FCC    $D00F   DRW      V0, V0, #F      ; Draw 15-byte sprite at V0, V0
$FCE    $4757   SNE      V7, #57         ; Skip if V7 != 87
$FD0    $24A9   CALL     $4A9            ; Call subroutine at 4A9
$FD2    $E6FB   UNKNOWN  $E6FB           ; Unknown Exxx instruction
$FD4    $0B9E   SYS      $B9E            ; System call to B9E
$FD6    $8508   UNKNOWN  8508            ; Unknown 8xxx instruction
$FD8    $4DF9   SNE      VD, #F9         ; Skip if VD != 249
$FDA    $39EB   SE       V9, #EB         ; Skip if V9 == 235
$FDC    $0A55   SYS      $A55            ; System call to A55
$FDE    $FE3D   UNKNOWN  FE3D            ; Unknown Fxxx instruction
$FE0    $06E5   SYS      $6E5            ; System call to 6E5
$FE2    $E738   UNKNOWN  $E738           ; Unknown Exxx instruction
$FE4    $1316   JP       $316            ; Jump to 316
$FE6    $694E   LD       V9, #4E         ; Load 78 into V9
$FE8    $E710   UNKNOWN  $E710           ; Unknown Exxx instruction
$FEA    $D898   DRW      V8, V9, #8      ; Draw 8-byte sprite at V8, V9
$FEC    $BC1C   JP       V0, $C1C        ; Jump to V0 + C1C
$FEE    $3A55   SE       VA, #55         ; Skip if VA == 85
$FF0    $619A   LD       V1, #9A         ; Load 154 into V1
$FF2    $B104   JP       V0, $104        ; Jump to V0 + 104
$FF4    $ABED   LD       I, $BED         ; Load BED into I
$FF6    $2D54   CALL     $D54            ; Call subroutine at D54
$FF8    $65F2   LD       V5, #F2         ; Load 242 into V5
$FFA    $FA23   UNKNOWN  FA23            ; Unknown Fxxx instruction
$FFC    $580D   UNKNOWN  $580D           ; Unknown 5xxx instruction
$FFE    $FE8C   UNKNOWN  FE8C            ; Unknown Fxxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 462 (25.8%)
  LD      : 250 (14.0%)
  JP      : 210 (11.7%)
  SNE     : 149 ( 8.3%)
  CALL    : 128 ( 7.1%)
  SE      : 116 ( 6.5%)
  ADD     : 109 ( 6.1%)
  RND     : 109 ( 6.1%)
  SYS     : 104 ( 5.8%)
  DRW     : 100 ( 5.6%)
  SHL     :  10 ( 0.6%)
  XOR     :   9 ( 0.5%)
  AND     :   8 ( 0.4%)
  SUB     :   8 ( 0.4%)
  SHR     :   6 ( 0.3%)
  OR      :   6 ( 0.3%)
  SUBN    :   4 ( 0.2%)
  SKP     :   3 ( 0.2%)

Memory Operations: 359 (20.0%)
Arithmetic Operations: 144 (8.0%)
