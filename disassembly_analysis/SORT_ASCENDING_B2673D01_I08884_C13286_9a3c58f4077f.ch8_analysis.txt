
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B2673D01_I08884_C13286_9a3c58f4077f.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 2673
Instance: 8884
Direction: ascending
Final Array: [55, 66, 77, 88, 99, 110, 121, 132]
Operations: R:0 W:8 C:738 S:1

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 121
Sort Array References:
  $20A: LD I, $5B0 ; Load 5B0 into I
  $222: LD I, $DB8 ; Load DB8 into I
  $250: LD I, $7B2 ; Load 7B2 into I
  $268: LD I, $FBA ; Load FBA into I
  $27E: LD I, $1AC ; Load 1AC into I
  $296: LD I, $9B4 ; Load 9B4 into I
  $2C4: LD I, $3AE ; Load 3AE into I
  $2DC: LD I, $BB6 ; Load BB6 into I
  $30A: LD I, $5B0 ; Load 5B0 into I
  $338: LD I, $16D ; Load 16D into I
  $34E: LD I, $4C0 ; Load 4C0 into I
  $358: LD I, $CDA ; Load CDA into I
  $35A: LD I, $E7B ; Load E7B into I
  $370: LD I, $2A4 ; Load 2A4 into I
  $372: LD I, $03E ; Load 03E into I
  $374: LD I, $471 ; Load 471 into I
  $380: LD I, $F60 ; Load F60 into I
  $382: LD I, $0A3 ; Load 0A3 into I
  $38A: LD I, $FFB ; Load FFB into I
  $3B6: LD I, $4DF ; Load 4DF into I
  $3DE: LD I, $463 ; Load 463 into I
  $3E8: LD I, $1A0 ; Load 1A0 into I
  $48C: LD I, $5F1 ; Load 5F1 into I
  $48E: LD I, $2B3 ; Load 2B3 into I
  $4B6: LD I, $868 ; Load 868 into I
  $4C6: LD I, $941 ; Load 941 into I
  $4E4: LD I, $CF6 ; Load CF6 into I
  $4EE: LD I, $3F9 ; Load 3F9 into I
  $4FE: LD I, $F3A ; Load F3A into I
  $512: LD I, $B9E ; Load B9E into I
  $51A: LD I, $7FA ; Load 7FA into I
  $530: LD I, $36A ; Load 36A into I
  $548: LD I, $C1A ; Load C1A into I
  $54E: LD I, $852 ; Load 852 into I
  $552: LD I, $C8F ; Load C8F into I
  $55A: LD I, $2A7 ; Load 2A7 into I
  $578: LD I, $BA6 ; Load BA6 into I
  $58A: LD I, $663 ; Load 663 into I
  $5B0: LD I, $D95 ; Load D95 into I
  $5BC: LD I, $978 ; Load 978 into I
  $5C8: LD I, $A39 ; Load A39 into I
  $5DE: LD I, $8DC ; Load 8DC into I
  $636: LD I, $638 ; Load 638 into I
  $662: LD I, $E30 ; Load E30 into I
  $6AA: LD I, $54A ; Load 54A into I
  $6E4: LD I, $1B0 ; Load 1B0 into I
  $75E: LD I, $612 ; Load 612 into I
  $760: LD I, $435 ; Load 435 into I
  $762: LD I, $755 ; Load 755 into I
  $7FE: LD I, $A07 ; Load A07 into I
  $80E: LD I, $A26 ; Load A26 into I
  $810: LD I, $EB2 ; Load EB2 into I
  $832: LD I, $472 ; Load 472 into I
  $83E: LD I, $975 ; Load 975 into I
  $844: LD I, $D09 ; Load D09 into I
  $882: LD V4, [I] ; Load V0-V4 from I
  $88E: LD I, $16B ; Load 16B into I
  $8B8: LD I, $44C ; Load 44C into I
  $8D6: LD I, $CDA ; Load CDA into I
  $8E6: LD I, $DDA ; Load DDA into I
  $8F0: LD I, $7FF ; Load 7FF into I
  $904: LD I, $CB7 ; Load CB7 into I
  $91C: LD I, $5B6 ; Load 5B6 into I
  $98A: LD I, $62F ; Load 62F into I
  $9B2: LD I, $96C ; Load 96C into I
  $9F0: LD I, $989 ; Load 989 into I
  $A20: LD I, $5B4 ; Load 5B4 into I
  $A26: LD I, $356 ; Load 356 into I
  $A34: LD I, $DC1 ; Load DC1 into I
  $A3A: LD I, $001 ; Load 001 into I
  $A40: LD I, $D65 ; Load D65 into I
  $A5C: LD I, $258 ; Load 258 into I
  $A66: LD I, $954 ; Load 954 into I
  $AB2: LD I, $468 ; Load 468 into I
  $ACA: LD I, $BA8 ; Load BA8 into I
  $AD0: LD I, $7AD ; Load 7AD into I
  $B06: LD I, $EB8 ; Load EB8 into I
  $B24: LD I, $0DE ; Load 0DE into I
  $B28: LD I, $785 ; Load 785 into I
  $B38: LD I, $CD5 ; Load CD5 into I
  $B50: LD I, $10D ; Load 10D into I
  $B6C: LD I, $1B2 ; Load 1B2 into I
  $BB2: LD I, $59C ; Load 59C into I
  $BE4: LD I, $A29 ; Load A29 into I
  $BFC: LD I, $BDE ; Load BDE into I
  $C40: LD I, $C6B ; Load C6B into I
  $C70: LD I, $275 ; Load 275 into I
  $C7E: LD I, $868 ; Load 868 into I
  $C9C: LD I, $9DC ; Load 9DC into I
  $CA6: LD I, $4FE ; Load 4FE into I
  $CD4: LD I, $61E ; Load 61E into I
  $CE4: LD I, $450 ; Load 450 into I
  $CF0: LD I, $32E ; Load 32E into I
  $D00: LD I, $E27 ; Load E27 into I
  $D0C: LD I, $BA3 ; Load BA3 into I
  $D64: LD I, $537 ; Load 537 into I
  $D92: LD I, $503 ; Load 503 into I
  $DB0: LD I, $6B6 ; Load 6B6 into I
  $DC0: LD I, $8DD ; Load 8DD into I
  $DD4: LD I, $127 ; Load 127 into I
  $DF8: LD I, $396 ; Load 396 into I
  $E12: LD I, $B8B ; Load B8B into I
  $E2E: LD I, $48B ; Load 48B into I
  $E30: LD I, $C9E ; Load C9E into I
  $E54: LD I, $0E1 ; Load 0E1 into I
  $E72: LD I, $CA1 ; Load CA1 into I
  $E76: LD I, $DFF ; Load DFF into I
  $E7A: LD I, $F9C ; Load F9C into I
  $E82: LD I, $55C ; Load 55C into I
  $EB8: LD I, $8FF ; Load 8FF into I
  $EE8: LD I, $8BC ; Load 8BC into I
  $EEC: LD I, $5C1 ; Load 5C1 into I
  $EF4: LD I, $A9E ; Load A9E into I
  $F3E: LD I, $5FE ; Load 5FE into I
  $F52: LD I, $442 ; Load 442 into I
  $F80: LD I, $27A ; Load 27A into I
  $FAE: LD I, $F41 ; Load F41 into I
  $FC8: LD I, $53E ; Load 53E into I
  $FCC: LD I, $EEA ; Load EEA into I
  $FE2: LD I, $228 ; Load 228 into I
  $FFE: LD I, $C2F ; Load C2F into I

CONTROL FLOW ANALYSIS:
Jumps: 220
Calls: 108
Branches: 258
Loops: 122
Loop Structures:
  $2AE -> $1BC (backward jump)
  $2CE -> $11C (backward jump)
  $38C -> $0FA (backward jump)
  $392 -> $312 (backward jump)
  $49C -> $3FB (backward jump)
  $4AE -> $2F2 (backward jump)
  $506 -> $323 (backward jump)
  $50C -> $43E (backward jump)
  $528 -> $30D (backward jump)
  $57C -> $464 (backward jump)
  $5A2 -> $247 (backward jump)
  $5C6 -> $1B8 (backward jump)
  $5F2 -> $260 (backward jump)
  $69E -> $47D (backward jump)
  $6C8 -> $19F (backward jump)
  $6D2 -> $27B (backward jump)
  $6F4 -> $254 (backward jump)
  $702 -> $0C5 (backward jump)
  $716 -> $237 (backward jump)
  $734 -> $613 (backward jump)
  $74C -> $408 (backward jump)
  $782 -> $5A7 (backward jump)
  $798 -> $5C4 (backward jump)
  $80C -> $519 (backward jump)
  $816 -> $3F4 (backward jump)
  $822 -> $166 (backward jump)
  $83C -> $0D2 (backward jump)
  $84C -> $04A (backward jump)
  $8F6 -> $070 (backward jump)
  $8FA -> $7B3 (backward jump)
  $916 -> $14D (backward jump)
  $924 -> $8BC (backward jump)
  $928 -> $1A0 (backward jump)
  $934 -> $90F (backward jump)
  $95E -> $5A9 (backward jump)
  $972 -> $730 (backward jump)
  $97C -> $70D (backward jump)
  $984 -> $429 (backward jump)
  $99C -> $12C (backward jump)
  $9A6 -> $735 (backward jump)
  $9D6 -> $492 (backward jump)
  $9E8 -> $4EF (backward jump)
  $A10 -> $701 (backward jump)
  $A2E -> $7A4 (backward jump)
  $A56 -> $009 (backward jump)
  $A68 -> $61C (backward jump)
  $A72 -> $5AA (backward jump)
  $A78 -> $96F (backward jump)
  $A80 -> $952 (backward jump)
  $AB6 -> $9ED (backward jump)
  $AC4 -> $28A (backward jump)
  $AC8 -> $4C6 (backward jump)
  $ADC -> $AB2 (backward jump)
  $AE0 -> $A25 (backward jump)
  $AEA -> $922 (backward jump)
  $B04 -> $32E (backward jump)
  $B2C -> $741 (backward jump)
  $B36 -> $1DB (backward jump)
  $B4A -> $A9B (backward jump)
  $B82 -> $4CD (backward jump)
  $B94 -> $4CF (backward jump)
  $B96 -> $167 (backward jump)
  $BA6 -> $22C (backward jump)
  $BCC -> $A4F (backward jump)
  $BE0 -> $BA1 (backward jump)
  $BF0 -> $3E2 (backward jump)
  $BF2 -> $11E (backward jump)
  $C00 -> $522 (backward jump)
  $C20 -> $5B6 (backward jump)
  $C3C -> $841 (backward jump)
  $C48 -> $367 (backward jump)
  $C58 -> $99F (backward jump)
  $C72 -> $515 (backward jump)
  $C9A -> $15C (backward jump)
  $C9E -> $66B (backward jump)
  $CA2 -> $6D8 (backward jump)
  $CAC -> $2DE (backward jump)
  $CB2 -> $BEF (backward jump)
  $CB4 -> $8F4 (backward jump)
  $CDA -> $999 (backward jump)
  $CF2 -> $1ED (backward jump)
  $D06 -> $806 (backward jump)
  $D20 -> $5FD (backward jump)
  $D26 -> $4C7 (backward jump)
  $D6C -> $2B6 (backward jump)
  $D7A -> $7BD (backward jump)
  $D8C -> $C04 (backward jump)
  $DAC -> $2D2 (backward jump)
  $DBE -> $214 (backward jump)
  $DCC -> $594 (backward jump)
  $DCE -> $6E7 (backward jump)
  $DDC -> $80F (backward jump)
  $DE2 -> $270 (backward jump)
  $DF4 -> $AE7 (backward jump)
  $DFA -> $AF0 (backward jump)
  $E02 -> $D7F (backward jump)
  $E04 -> $D91 (backward jump)
  $E1E -> $80D (backward jump)
  $E46 -> $438 (backward jump)
  $E4E -> $899 (backward jump)
  $E60 -> $4CF (backward jump)
  $E6C -> $CAC (backward jump)
  $E78 -> $541 (backward jump)
  $E84 -> $96E (backward jump)
  $E8A -> $D29 (backward jump)
  $EA0 -> $1C7 (backward jump)
  $EA2 -> $D9B (backward jump)
  $EDC -> $8BD (backward jump)
  $EF2 -> $76D (backward jump)
  $EFC -> $440 (backward jump)
  $F02 -> $934 (backward jump)
  $F0A -> $A4F (backward jump)
  $F0C -> $D0D (backward jump)
  $F16 -> $1E3 (backward jump)
  $F32 -> $CD9 (backward jump)
  $F40 -> $0FD (backward jump)
  $F58 -> $8DF (backward jump)
  $F68 -> $4AC (backward jump)
  $FAA -> $882 (backward jump)
  $FBC -> $661 (backward jump)
  $FC4 -> $8A9 (backward jump)
  $FD6 -> $520 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $3742   SE       V7, #42         ; Skip if V7 == 66
$202    $4D58   SNE      VD, #58         ; Skip if VD != 88
$204    $636E   LD       V3, #6E         ; Load 110 into V3
$206    $7984   ADD      V9, #84         ; Add 132 to V9
$208    $8F9A   UNKNOWN  8F9A            ; Unknown 8xxx instruction
$20A    $A5B0   LD       I, $5B0         ; Load 5B0 into I
$20C    $BBC6   JP       V0, $BC6        ; Jump to V0 + BC6
$20E    $D1DC   DRW      V1, VD, #C      ; Draw 12-byte sprite at V1, VD
$210    $E7F2   UNKNOWN  $E7F2           ; Unknown Exxx instruction
$212    $FD08   UNKNOWN  FD08            ; Unknown Fxxx instruction
$214    $131E   JP       $31E            ; Jump to 31E
$216    $2934   CALL     $934            ; Call subroutine at 934
$218    $3F4A   SE       VF, #4A         ; Skip if VF == 74
$21A    $5560   SE       V5, V6          ; Skip if V5 == V6
$21C    $6B76   LD       VB, #76         ; Load 118 into VB
$21E    $818C   UNKNOWN  818C            ; Unknown 8xxx instruction
$220    $97A2   UNKNOWN  $97A2           ; Unknown 9xxx instruction
$222    $ADB8   LD       I, $DB8         ; Load DB8 into I
$224    $C3CE   RND      V3, #CE         ; V3 = random & CE
$226    $D9E4   DRW      V9, VE, #4      ; Draw 4-byte sprite at V9, VE
$228    $EFFA   UNKNOWN  $EFFA           ; Unknown Exxx instruction
$22A    $0510   SYS      $510            ; System call to 510
$22C    $1B26   JP       $B26            ; Jump to B26
$22E    $313C   SE       V1, #3C         ; Skip if V1 == 60
$230    $4752   SNE      V7, #52         ; Skip if V7 != 82
$232    $5D68   UNKNOWN  $5D68           ; Unknown 5xxx instruction
$234    $737E   ADD      V3, #7E         ; Add 126 to V3
$236    $8994   ADD      V9, V9          ; V9 += V9, VF = carry
$238    $9FAA   UNKNOWN  $9FAA           ; Unknown 9xxx instruction
$23A    $B5C0   JP       V0, $5C0        ; Jump to V0 + 5C0
$23C    $CBD6   RND      VB, #D6         ; VB = random & D6
$23E    $E1EC   UNKNOWN  $E1EC           ; Unknown Exxx instruction
$240    $F702   UNKNOWN  F702            ; Unknown Fxxx instruction
$242    $0D18   SYS      $D18            ; System call to D18
$244    $232E   CALL     $32E            ; Call subroutine at 32E
$246    $3944   SE       V9, #44         ; Skip if V9 == 68
$248    $4F5A   SNE      VF, #5A         ; Skip if VF != 90
$24A    $6570   LD       V5, #70         ; Load 112 into V5
$24C    $7B86   ADD      VB, #86         ; Add 134 to VB
$24E    $919C   UNKNOWN  $919C           ; Unknown 9xxx instruction
$250    $A7B2   LD       I, $7B2         ; Load 7B2 into I
$252    $BDC8   JP       V0, $DC8        ; Jump to V0 + DC8
$254    $D3DE   DRW      V3, VD, #E      ; Draw 14-byte sprite at V3, VD
$256    $E9F4   UNKNOWN  $E9F4           ; Unknown Exxx instruction
$258    $FF0A   LD       VF, K           ; Wait for key press, store in VF
$25A    $1520   JP       $520            ; Jump to 520
$25C    $2B36   CALL     $B36            ; Call subroutine at B36
$25E    $414C   SNE      V1, #4C         ; Skip if V1 != 76
$260    $5762   UNKNOWN  $5762           ; Unknown 5xxx instruction
$262    $6D78   LD       VD, #78         ; Load 120 into VD
$264    $838E   SHL      V3              ; V3 <<= 1, VF = MSB
$266    $99A4   UNKNOWN  $99A4           ; Unknown 9xxx instruction
$268    $AFBA   LD       I, $FBA         ; Load FBA into I
$26A    $C5D0   RND      V5, #D0         ; V5 = random & D0
$26C    $DBE6   DRW      VB, VE, #6      ; Draw 6-byte sprite at VB, VE
$26E    $F1FC   UNKNOWN  F1FC            ; Unknown Fxxx instruction
$270    $0712   SYS      $712            ; System call to 712
$272    $1D28   JP       $D28            ; Jump to D28
$274    $333E   SE       V3, #3E         ; Skip if V3 == 62
$276    $4954   SNE      V9, #54         ; Skip if V9 != 84
$278    $5F6A   UNKNOWN  $5F6A           ; Unknown 5xxx instruction
$27A    $7580   ADD      V5, #80         ; Add 128 to V5
$27C    $8B96   SHR      VB              ; VB >>= 1, VF = LSB
$27E    $A1AC   LD       I, $1AC         ; Load 1AC into I
$280    $B7C2   JP       V0, $7C2        ; Jump to V0 + 7C2
$282    $CDD8   RND      VD, #D8         ; VD = random & D8
$284    $E3EE   UNKNOWN  $E3EE           ; Unknown Exxx instruction
$286    $F904   UNKNOWN  F904            ; Unknown Fxxx instruction
$288    $0F1A   SYS      $F1A            ; System call to F1A
$28A    $2530   CALL     $530            ; Call subroutine at 530
$28C    $3B46   SE       VB, #46         ; Skip if VB == 70
$28E    $515C   UNKNOWN  $515C           ; Unknown 5xxx instruction
$290    $6772   LD       V7, #72         ; Load 114 into V7
$292    $7D88   ADD      VD, #88         ; Add 136 to VD
$294    $939E   UNKNOWN  $939E           ; Unknown 9xxx instruction
$296    $A9B4   LD       I, $9B4         ; Load 9B4 into I
$298    $BFCA   JP       V0, $FCA        ; Jump to V0 + FCA
$29A    $D5E0   DRW      V5, VE, #0      ; Draw 0-byte sprite at V5, VE
$29C    $EBF6   UNKNOWN  $EBF6           ; Unknown Exxx instruction
$29E    $010C   SYS      $10C            ; System call to 10C
$2A0    $1722   JP       $722            ; Jump to 722
$2A2    $2D38   CALL     $D38            ; Call subroutine at D38
$2A4    $434E   SNE      V3, #4E         ; Skip if V3 != 78
$2A6    $5964   UNKNOWN  $5964           ; Unknown 5xxx instruction
$2A8    $6F7A   LD       VF, #7A         ; Load 122 into VF
$2AA    $8590   LD       V5, V9          ; V5 = V9
$2AC    $9BA6   UNKNOWN  $9BA6           ; Unknown 9xxx instruction
$2AE    $B1BC   JP       V0, $1BC        ; Jump to V0 + 1BC
$2B0    $C7D2   RND      V7, #D2         ; V7 = random & D2
$2B2    $DDE8   DRW      VD, VE, #8      ; Draw 8-byte sprite at VD, VE
$2B4    $F3FE   UNKNOWN  F3FE            ; Unknown Fxxx instruction
$2B6    $0914   SYS      $914            ; System call to 914
$2B8    $1F2A   JP       $F2A            ; Jump to F2A
$2BA    $3540   SE       V5, #40         ; Skip if V5 == 64
$2BC    $4B56   SNE      VB, #56         ; Skip if VB != 86
$2BE    $616C   LD       V1, #6C         ; Load 108 into V1
$2C0    $7782   ADD      V7, #82         ; Add 130 to V7
$2C2    $8D98   UNKNOWN  8D98            ; Unknown 8xxx instruction
$2C4    $A3AE   LD       I, $3AE         ; Load 3AE into I
$2C6    $B9C4   JP       V0, $9C4        ; Jump to V0 + 9C4
$2C8    $CFDA   RND      VF, #DA         ; VF = random & DA
$2CA    $E5F0   UNKNOWN  $E5F0           ; Unknown Exxx instruction
$2CC    $FB06   UNKNOWN  FB06            ; Unknown Fxxx instruction
$2CE    $111C   JP       $11C            ; Jump to 11C
$2D0    $2732   CALL     $732            ; Call subroutine at 732
$2D2    $3D48   SE       VD, #48         ; Skip if VD == 72
$2D4    $535E   UNKNOWN  $535E           ; Unknown 5xxx instruction
$2D6    $6974   LD       V9, #74         ; Load 116 into V9
$2D8    $7F8A   ADD      VF, #8A         ; Add 138 to VF
$2DA    $95A0   SNE      V5, VA          ; Skip if V5 != VA
$2DC    $ABB6   LD       I, $BB6         ; Load BB6 into I
$2DE    $C1CC   RND      V1, #CC         ; V1 = random & CC
$2E0    $D7E2   DRW      V7, VE, #2      ; Draw 2-byte sprite at V7, VE
$2E2    $EDF8   UNKNOWN  $EDF8           ; Unknown Exxx instruction
$2E4    $030E   SYS      $30E            ; System call to 30E
$2E6    $1924   JP       $924            ; Jump to 924
$2E8    $2F3A   CALL     $F3A            ; Call subroutine at F3A
$2EA    $4550   SNE      V5, #50         ; Skip if V5 != 80
$2EC    $5B66   UNKNOWN  $5B66           ; Unknown 5xxx instruction
$2EE    $717C   ADD      V1, #7C         ; Add 124 to V1
$2F0    $8792   AND      V7, V9          ; V7 &= V9
$2F2    $9DA8   UNKNOWN  $9DA8           ; Unknown 9xxx instruction
$2F4    $B3BE   JP       V0, $3BE        ; Jump to V0 + 3BE
$2F6    $C9D4   RND      V9, #D4         ; V9 = random & D4
$2F8    $DFEA   DRW      VF, VE, #A      ; Draw 10-byte sprite at VF, VE
$2FA    $F500   UNKNOWN  F500            ; Unknown Fxxx instruction
$2FC    $0B16   SYS      $B16            ; System call to B16
$2FE    $212C   CALL     $12C            ; Call subroutine at 12C
$300    $3742   SE       V7, #42         ; Skip if V7 == 66
$302    $4D58   SNE      VD, #58         ; Skip if VD != 88
$304    $636E   LD       V3, #6E         ; Load 110 into V3
$306    $7984   ADD      V9, #84         ; Add 132 to V9
$308    $8F9A   UNKNOWN  8F9A            ; Unknown 8xxx instruction
$30A    $A5B0   LD       I, $5B0         ; Load 5B0 into I
$30C    $BBC6   JP       V0, $BC6        ; Jump to V0 + BC6
$30E    $D1DC   DRW      V1, VD, #C      ; Draw 12-byte sprite at V1, VD
$310    $E7F2   UNKNOWN  $E7F2           ; Unknown Exxx instruction
$312    $FD08   UNKNOWN  FD08            ; Unknown Fxxx instruction
$314    $131E   JP       $31E            ; Jump to 31E
$316    $2934   CALL     $934            ; Call subroutine at 934
$318    $3F4A   SE       VF, #4A         ; Skip if VF == 74
$31A    $5560   SE       V5, V6          ; Skip if V5 == V6
$31C    $218C   CALL     $18C            ; Call subroutine at 18C
$31E    $E0C1   UNKNOWN  $E0C1           ; Unknown Exxx instruction
$320    $EFD0   UNKNOWN  $EFD0           ; Unknown Exxx instruction
$322    $ED88   UNKNOWN  $ED88           ; Unknown Exxx instruction
$324    $8BB0   LD       VB, VB          ; VB = VB
$326    $4273   SNE      V2, #73         ; Skip if V2 != 115
$328    $E7DC   UNKNOWN  $E7DC           ; Unknown Exxx instruction
$32A    $1B90   JP       $B90            ; Jump to B90
$32C    $2F40   CALL     $F40            ; Call subroutine at F40
$32E    $08E1   SYS      $8E1            ; System call to 8E1
$330    $780B   ADD      V8, #0B         ; Add 11 to V8
$332    $F33C   UNKNOWN  F33C            ; Unknown Fxxx instruction
$334    $27D1   CALL     $7D1            ; Call subroutine at 7D1
$336    $5C08   UNKNOWN  $5C08           ; Unknown 5xxx instruction
$338    $A16D   LD       I, $16D         ; Load 16D into I
$33A    $2B51   CALL     $B51            ; Call subroutine at B51
$33C    $C4F3   RND      V4, #F3         ; V4 = random & F3
$33E    $D234   DRW      V2, V3, #4      ; Draw 4-byte sprite at V2, V3
$340    $706F   ADD      V0, #6F         ; Add 111 to V0
$342    $305A   SE       V0, #5A         ; Skip if V0 == 90
$344    $CA27   RND      VA, #27         ; VA = random & 27
$346    $8CDD   UNKNOWN  8CDD            ; Unknown 8xxx instruction
$348    $CF72   RND      VF, #72         ; VF = random & 72
$34A    $975B   UNKNOWN  $975B           ; Unknown 9xxx instruction
$34C    $BFB8   JP       V0, $FB8        ; Jump to V0 + FB8
$34E    $A4C0   LD       I, $4C0         ; Load 4C0 into I
$350    $8E34   ADD      VE, V3          ; VE += V3, VF = carry
$352    $5A67   UNKNOWN  $5A67           ; Unknown 5xxx instruction
$354    $6862   LD       V8, #62         ; Load 98 into V8
$356    $3785   SE       V7, #85         ; Skip if V7 == 133
$358    $ACDA   LD       I, $CDA         ; Load CDA into I
$35A    $AE7B   LD       I, $E7B         ; Load E7B into I
$35C    $4BD9   SNE      VB, #D9         ; Skip if VB != 217
$35E    $C42D   RND      V4, #2D         ; V4 = random & 2D
$360    $39F1   SE       V9, #F1         ; Skip if V9 == 241
$362    $BB9A   JP       V0, $B9A        ; Jump to V0 + B9A
$364    $7447   ADD      V4, #47         ; Add 71 to V4
$366    $6B3D   LD       VB, #3D         ; Load 61 into VB
$368    $8F94   ADD      VF, V9          ; VF += V9, VF = carry
$36A    $5FE8   UNKNOWN  $5FE8           ; Unknown 5xxx instruction
$36C    $63CB   LD       V3, #CB         ; Load 203 into V3
$36E    $8EA0   LD       VE, VA          ; VE = VA
$370    $A2A4   LD       I, $2A4         ; Load 2A4 into I
$372    $A03E   LD       I, $03E         ; Load 03E into I
$374    $A471   LD       I, $471         ; Load 471 into I
$376    $2746   CALL     $746            ; Call subroutine at 746
$378    $0D65   SYS      $D65            ; System call to D65
$37A    $589E   UNKNOWN  $589E           ; Unknown 5xxx instruction
$37C    $26F2   CALL     $6F2            ; Call subroutine at 6F2
$37E    $435E   SNE      V3, #5E         ; Skip if V3 != 94
$380    $AF60   LD       I, $F60         ; Load F60 into I
$382    $A0A3   LD       I, $0A3         ; Load 0A3 into I
$384    $F005   UNKNOWN  F005            ; Unknown Fxxx instruction
$386    $C331   RND      V3, #31         ; V3 = random & 31
$388    $2C9B   CALL     $C9B            ; Call subroutine at C9B
$38A    $AFFB   LD       I, $FFB         ; Load FFB into I
$38C    $B0FA   JP       V0, $0FA        ; Jump to V0 + 0FA
$38E    $71BF   ADD      V1, #BF         ; Add 191 to V1
$390    $D3DB   DRW      V3, VD, #B      ; Draw 11-byte sprite at V3, VD
$392    $1312   JP       $312            ; Jump to 312
$394    $83DC   UNKNOWN  83DC            ; Unknown 8xxx instruction
$396    $62A6   LD       V2, #A6         ; Load 166 into V2
$398    $08F6   SYS      $8F6            ; System call to 8F6
$39A    $0DE8   SYS      $DE8            ; System call to DE8
$39C    $311E   SE       V1, #1E         ; Skip if V1 == 30
$39E    $CC51   RND      VC, #51         ; VC = random & 51
$3A0    $92E2   UNKNOWN  $92E2           ; Unknown 9xxx instruction
$3A2    $CE0B   RND      VE, #0B         ; VE = random & 0B
$3A4    $7120   ADD      V1, #20         ; Add 32 to V1
$3A6    $5B19   UNKNOWN  $5B19           ; Unknown 5xxx instruction
$3A8    $F535   UNKNOWN  F535            ; Unknown Fxxx instruction
$3AA    $7DED   ADD      VD, #ED         ; Add 237 to VD
$3AC    $9A8C   UNKNOWN  $9A8C           ; Unknown 9xxx instruction
$3AE    $5B64   UNKNOWN  $5B64           ; Unknown 5xxx instruction
$3B0    $00E0   CLS                      ; Clear display
$3B2    $8674   ADD      V6, V7          ; V6 += V7, VF = carry
$3B4    $6F4E   LD       VF, #4E         ; Load 78 into VF
$3B6    $A4DF   LD       I, $4DF         ; Load 4DF into I
$3B8    $6122   LD       V1, #22         ; Load 34 into V1
$3BA    $EAA3   UNKNOWN  $EAA3           ; Unknown Exxx instruction
$3BC    $E306   UNKNOWN  $E306           ; Unknown Exxx instruction
$3BE    $F3FD   UNKNOWN  F3FD            ; Unknown Fxxx instruction
$3C0    $61E1   LD       V1, #E1         ; Load 225 into V1
$3C2    $8054   ADD      V0, V5          ; V0 += V5, VF = carry
$3C4    $0D14   SYS      $D14            ; System call to D14
$3C6    $776B   ADD      V7, #6B         ; Add 107 to V7
$3C8    $6742   LD       V7, #42         ; Load 66 into V7
$3CA    $245C   CALL     $45C            ; Call subroutine at 45C
$3CC    $18E3   JP       $8E3            ; Jump to 8E3
$3CE    $DECD   DRW      VE, VC, #D      ; Draw 13-byte sprite at VE, VC
$3D0    $BE83   JP       V0, $E83        ; Jump to V0 + E83
$3D2    $999A   UNKNOWN  $999A           ; Unknown 9xxx instruction
$3D4    $13DF   JP       $3DF            ; Jump to 3DF
$3D6    $98E8   UNKNOWN  $98E8           ; Unknown 9xxx instruction
$3D8    $27E9   CALL     $7E9            ; Call subroutine at 7E9
$3DA    $BF99   JP       V0, $F99        ; Jump to V0 + F99
$3DC    $976B   UNKNOWN  $976B           ; Unknown 9xxx instruction
$3DE    $A463   LD       I, $463         ; Load 463 into I
$3E0    $86A8   UNKNOWN  86A8            ; Unknown 8xxx instruction
$3E2    $30D7   SE       V0, #D7         ; Skip if V0 == 215
$3E4    $F1FF   UNKNOWN  F1FF            ; Unknown Fxxx instruction
$3E6    $6F9A   LD       VF, #9A         ; Load 154 into VF
$3E8    $A1A0   LD       I, $1A0         ; Load 1A0 into I
$3EA    $92DC   UNKNOWN  $92DC           ; Unknown 9xxx instruction
$3EC    $18C9   JP       $8C9            ; Jump to 8C9
$3EE    $C0C8   RND      V0, #C8         ; V0 = random & C8
$3F0    $38CC   SE       V8, #CC         ; Skip if V8 == 204
$3F2    $3CE1   SE       VC, #E1         ; Skip if VC == 225
$3F4    $F6D1   UNKNOWN  F6D1            ; Unknown Fxxx instruction
$3F6    $8C16   SHR      VC              ; VC >>= 1, VF = LSB
$3F8    $06C9   SYS      $6C9            ; System call to 6C9
$3FA    $3E67   SE       VE, #67         ; Skip if VE == 103
$3FC    $7B46   ADD      VB, #46         ; Add 70 to VB
$3FE    $5C67   UNKNOWN  $5C67           ; Unknown 5xxx instruction
$400    $16CF   JP       $6CF            ; Jump to 6CF
$402    $7900   ADD      V9, #00         ; Add 0 to V9
$404    $3483   SE       V4, #83         ; Skip if V4 == 131
$406    $D1A8   DRW      V1, VA, #8      ; Draw 8-byte sprite at V1, VA
$408    $27F4   CALL     $7F4            ; Call subroutine at 7F4
$40A    $3C1C   SE       VC, #1C         ; Skip if VC == 28
$40C    $1872   JP       $872            ; Jump to 872
$40E    $8722   AND      V7, V2          ; V7 &= V2
$410    $F62D   UNKNOWN  F62D            ; Unknown Fxxx instruction
$412    $0B43   SYS      $B43            ; System call to B43
$414    $9D71   UNKNOWN  $9D71           ; Unknown 9xxx instruction
$416    $4362   SNE      V3, #62         ; Skip if V3 != 98
$418    $7FD5   ADD      VF, #D5         ; Add 213 to VF
$41A    $F812   UNKNOWN  F812            ; Unknown Fxxx instruction
$41C    $38B6   SE       V8, #B6         ; Skip if V8 == 182
$41E    $17EE   JP       $7EE            ; Jump to 7EE
$420    $7875   ADD      V8, #75         ; Add 117 to V8
$422    $EF5B   UNKNOWN  $EF5B           ; Unknown Exxx instruction
$424    $4B18   SNE      VB, #18         ; Skip if VB != 24
$426    $F437   UNKNOWN  F437            ; Unknown Fxxx instruction
$428    $F2F9   UNKNOWN  F2F9            ; Unknown Fxxx instruction
$42A    $7C37   ADD      VC, #37         ; Add 55 to VC
$42C    $96EB   UNKNOWN  $96EB           ; Unknown 9xxx instruction
$42E    $CC8C   RND      VC, #8C         ; VC = random & 8C
$430    $7755   ADD      V7, #55         ; Add 85 to V7
$432    $8C37   SUBN     VC, V3          ; VC = V3 - VC, VF = !borrow
$434    $967C   UNKNOWN  $967C           ; Unknown 9xxx instruction
$436    $C145   RND      V1, #45         ; V1 = random & 45
$438    $15E1   JP       $5E1            ; Jump to 5E1
$43A    $6982   LD       V9, #82         ; Load 130 into V9
$43C    $30DA   SE       V0, #DA         ; Skip if V0 == 218
$43E    $17A9   JP       $7A9            ; Jump to 7A9
$440    $BC61   JP       V0, $C61        ; Jump to V0 + C61
$442    $7907   ADD      V9, #07         ; Add 7 to V9
$444    $0DF0   SYS      $DF0            ; System call to DF0
$446    $F88E   UNKNOWN  F88E            ; Unknown Fxxx instruction
$448    $1947   JP       $947            ; Jump to 947
$44A    $C018   RND      V0, #18         ; V0 = random & 18
$44C    $52D8   UNKNOWN  $52D8           ; Unknown 5xxx instruction
$44E    $1630   JP       $630            ; Jump to 630
$450    $6A80   LD       VA, #80         ; Load 128 into VA
$452    $C6D0   RND      V6, #D0         ; V6 = random & D0
$454    $C896   RND      V8, #96         ; V8 = random & 96
$456    $D2B4   DRW      V2, VB, #4      ; Draw 4-byte sprite at V2, VB
$458    $CDB4   RND      VD, #B4         ; VD = random & B4
$45A    $F1C9   UNKNOWN  F1C9            ; Unknown Fxxx instruction
$45C    $4B7B   SNE      VB, #7B         ; Skip if VB != 123
$45E    $5FF5   UNKNOWN  $5FF5           ; Unknown 5xxx instruction
$460    $EBD5   UNKNOWN  $EBD5           ; Unknown Exxx instruction
$462    $3A0C   SE       VA, #0C         ; Skip if VA == 12
$464    $E583   UNKNOWN  $E583           ; Unknown Exxx instruction
$466    $ED91   UNKNOWN  $ED91           ; Unknown Exxx instruction
$468    $182D   JP       $82D            ; Jump to 82D
$46A    $2D4B   CALL     $D4B            ; Call subroutine at D4B
$46C    $15F1   JP       $5F1            ; Jump to 5F1
$46E    $7E03   ADD      VE, #03         ; Add 3 to VE
$470    $837F   UNKNOWN  837F            ; Unknown 8xxx instruction
$472    $224E   CALL     $24E            ; Call subroutine at 24E
$474    $FFCA   UNKNOWN  FFCA            ; Unknown Fxxx instruction
$476    $7353   ADD      V3, #53         ; Add 83 to V3
$478    $44C5   SNE      V4, #C5         ; Skip if V4 != 197
$47A    $913B   UNKNOWN  $913B           ; Unknown 9xxx instruction
$47C    $1FC4   JP       $FC4            ; Jump to FC4
$47E    $2453   CALL     $453            ; Call subroutine at 453
$480    $23F5   CALL     $3F5            ; Call subroutine at 3F5
$482    $7062   ADD      V0, #62         ; Add 98 to V0
$484    $342C   SE       V4, #2C         ; Skip if V4 == 44
$486    $0B7C   SYS      $B7C            ; System call to B7C
$488    $86A2   AND      V6, VA          ; V6 &= VA
$48A    $BF7A   JP       V0, $F7A        ; Jump to V0 + F7A
$48C    $A5F1   LD       I, $5F1         ; Load 5F1 into I
$48E    $A2B3   LD       I, $2B3         ; Load 2B3 into I
$490    $89E0   LD       V9, VE          ; V9 = VE
$492    $3864   SE       V8, #64         ; Skip if V8 == 100
$494    $0E6D   SYS      $E6D            ; System call to E6D
$496    $76DB   ADD      V6, #DB         ; Add 219 to V6
$498    $F2E3   UNKNOWN  F2E3            ; Unknown Fxxx instruction
$49A    $7699   ADD      V6, #99         ; Add 153 to V6
$49C    $B3FB   JP       V0, $3FB        ; Jump to V0 + 3FB
$49E    $76E3   ADD      V6, #E3         ; Add 227 to V6
$4A0    $8A76   SHR      VA              ; VA >>= 1, VF = LSB
$4A2    $F81D   UNKNOWN  F81D            ; Unknown Fxxx instruction
$4A4    $29E4   CALL     $9E4            ; Call subroutine at 9E4
$4A6    $D68F   DRW      V6, V8, #F      ; Draw 15-byte sprite at V6, V8
$4A8    $5331   UNKNOWN  $5331           ; Unknown 5xxx instruction
$4AA    $1990   JP       $990            ; Jump to 990
$4AC    $B598   JP       V0, $598        ; Jump to V0 + 598
$4AE    $B2F2   JP       V0, $2F2        ; Jump to V0 + 2F2
$4B0    $5755   UNKNOWN  $5755           ; Unknown 5xxx instruction
$4B2    $CC23   RND      VC, #23         ; VC = random & 23
$4B4    $88A7   SUBN     V8, VA          ; V8 = VA - V8, VF = !borrow
$4B6    $A868   LD       I, $868         ; Load 868 into I
$4B8    $57F4   UNKNOWN  $57F4           ; Unknown 5xxx instruction
$4BA    $590E   UNKNOWN  $590E           ; Unknown 5xxx instruction
$4BC    $C3E1   RND      V3, #E1         ; V3 = random & E1
$4BE    $90C2   UNKNOWN  $90C2           ; Unknown 9xxx instruction
$4C0    $DCFE   DRW      VC, VF, #E      ; Draw 14-byte sprite at VC, VF
$4C2    $B71D   JP       V0, $71D        ; Jump to V0 + 71D
$4C4    $34FE   SE       V4, #FE         ; Skip if V4 == 254
$4C6    $A941   LD       I, $941         ; Load 941 into I
$4C8    $664B   LD       V6, #4B         ; Load 75 into V6
$4CA    $3975   SE       V9, #75         ; Skip if V9 == 117
$4CC    $05D8   SYS      $5D8            ; System call to 5D8
$4CE    $5303   UNKNOWN  $5303           ; Unknown 5xxx instruction
$4D0    $351A   SE       V5, #1A         ; Skip if V5 == 26
$4D2    $1C4D   JP       $C4D            ; Jump to C4D
$4D4    $0F08   SYS      $F08            ; System call to F08
$4D6    $F2C2   UNKNOWN  F2C2            ; Unknown Fxxx instruction
$4D8    $F66F   UNKNOWN  F66F            ; Unknown Fxxx instruction
$4DA    $0B5F   SYS      $B5F            ; System call to B5F
$4DC    $E49D   UNKNOWN  $E49D           ; Unknown Exxx instruction
$4DE    $4B4A   SNE      VB, #4A         ; Skip if VB != 74
$4E0    $9AFB   UNKNOWN  $9AFB           ; Unknown 9xxx instruction
$4E2    $C7FF   RND      V7, #FF         ; V7 = random & FF
$4E4    $ACF6   LD       I, $CF6         ; Load CF6 into I
$4E6    $1D7D   JP       $D7D            ; Jump to D7D
$4E8    $0638   SYS      $638            ; System call to 638
$4EA    $50C0   SE       V0, VC          ; Skip if V0 == VC
$4EC    $4C4E   SNE      VC, #4E         ; Skip if VC != 78
$4EE    $A3F9   LD       I, $3F9         ; Load 3F9 into I
$4F0    $8FDF   UNKNOWN  8FDF            ; Unknown 8xxx instruction
$4F2    $6F68   LD       VF, #68         ; Load 104 into VF
$4F4    $F50C   UNKNOWN  F50C            ; Unknown Fxxx instruction
$4F6    $FDB5   UNKNOWN  FDB5            ; Unknown Fxxx instruction
$4F8    $D801   DRW      V8, V0, #1      ; Draw 1-byte sprite at V8, V0
$4FA    $3DD3   SE       VD, #D3         ; Skip if VD == 211
$4FC    $613C   LD       V1, #3C         ; Load 60 into V1
$4FE    $AF3A   LD       I, $F3A         ; Load F3A into I
$500    $77C6   ADD      V7, #C6         ; Add 198 to V7
$502    $D256   DRW      V2, V5, #6      ; Draw 6-byte sprite at V2, V5
$504    $01E8   SYS      $1E8            ; System call to 1E8
$506    $1323   JP       $323            ; Jump to 323
$508    $DCDD   DRW      VC, VD, #D      ; Draw 13-byte sprite at VC, VD
$50A    $462D   SNE      V6, #2D         ; Skip if V6 != 45
$50C    $B43E   JP       V0, $43E        ; Jump to V0 + 43E
$50E    $95FF   UNKNOWN  $95FF           ; Unknown 9xxx instruction
$510    $FAA7   UNKNOWN  FAA7            ; Unknown Fxxx instruction
$512    $AB9E   LD       I, $B9E         ; Load B9E into I
$514    $97A3   UNKNOWN  $97A3           ; Unknown 9xxx instruction
$516    $C97B   RND      V9, #7B         ; V9 = random & 7B
$518    $8760   LD       V7, V6          ; V7 = V6
$51A    $A7FA   LD       I, $7FA         ; Load 7FA into I
$51C    $E100   UNKNOWN  $E100           ; Unknown Exxx instruction
$51E    $6D2B   LD       VD, #2B         ; Load 43 into VD
$520    $7D90   ADD      VD, #90         ; Add 144 to VD
$522    $4537   SNE      V5, #37         ; Skip if V5 != 55
$524    $035D   SYS      $35D            ; System call to 35D
$526    $6241   LD       V2, #41         ; Load 65 into V2
$528    $B30D   JP       V0, $30D        ; Jump to V0 + 30D
$52A    $B787   JP       V0, $787        ; Jump to V0 + 787
$52C    $4153   SNE      V1, #53         ; Skip if V1 != 83
$52E    $9826   UNKNOWN  $9826           ; Unknown 9xxx instruction
$530    $A36A   LD       I, $36A         ; Load 36A into I
$532    $910C   UNKNOWN  $910C           ; Unknown 9xxx instruction
$534    $D943   DRW      V9, V4, #3      ; Draw 3-byte sprite at V9, V4
$536    $4835   SNE      V8, #35         ; Skip if V8 != 53
$538    $051B   SYS      $51B            ; System call to 51B
$53A    $73F1   ADD      V3, #F1         ; Add 241 to V3
$53C    $C851   RND      V8, #51         ; V8 = random & 51
$53E    $6F90   LD       VF, #90         ; Load 144 into VF
$540    $F7C2   UNKNOWN  F7C2            ; Unknown Fxxx instruction
$542    $2BCC   CALL     $BCC            ; Call subroutine at BCC
$544    $3258   SE       V2, #58         ; Skip if V2 == 88
$546    $20B6   CALL     $0B6            ; Call subroutine at 0B6
$548    $AC1A   LD       I, $C1A         ; Load C1A into I
$54A    $9CFA   UNKNOWN  $9CFA           ; Unknown 9xxx instruction
$54C    $CB12   RND      VB, #12         ; VB = random & 12
$54E    $A852   LD       I, $852         ; Load 852 into I
$550    $1E3A   JP       $E3A            ; Jump to E3A
$552    $AC8F   LD       I, $C8F         ; Load C8F into I
$554    $2AC8   CALL     $AC8            ; Call subroutine at AC8
$556    $479C   SNE      V7, #9C         ; Skip if V7 != 156
$558    $E2F9   UNKNOWN  $E2F9           ; Unknown Exxx instruction
$55A    $A2A7   LD       I, $2A7         ; Load 2A7 into I
$55C    $7AFA   ADD      VA, #FA         ; Add 250 to VA
$55E    $5E08   UNKNOWN  $5E08           ; Unknown 5xxx instruction
$560    $8DE2   AND      VD, VE          ; VD &= VE
$562    $FF16   UNKNOWN  FF16            ; Unknown Fxxx instruction
$564    $6474   LD       V4, #74         ; Load 116 into V4
$566    $C152   RND      V1, #52         ; V1 = random & 52
$568    $2C86   CALL     $C86            ; Call subroutine at C86
$56A    $B674   JP       V0, $674        ; Jump to V0 + 674
$56C    $5AE0   SE       VA, VE          ; Skip if VA == VE
$56E    $C487   RND      V4, #87         ; V4 = random & 87
$570    $9D82   UNKNOWN  $9D82           ; Unknown 9xxx instruction
$572    $839F   UNKNOWN  839F            ; Unknown 8xxx instruction
$574    $298A   CALL     $98A            ; Call subroutine at 98A
$576    $3382   SE       V3, #82         ; Skip if V3 == 130
$578    $ABA6   LD       I, $BA6         ; Load BA6 into I
$57A    $7933   ADD      V9, #33         ; Add 51 to V9
$57C    $1464   JP       $464            ; Jump to 464
$57E    $7CE9   ADD      VC, #E9         ; Add 233 to VC
$580    $C13D   RND      V1, #3D         ; V1 = random & 3D
$582    $591F   UNKNOWN  $591F           ; Unknown 5xxx instruction
$584    $D03F   DRW      V0, V3, #F      ; Draw 15-byte sprite at V0, V3
$586    $4CAA   SNE      VC, #AA         ; Skip if VC != 170
$588    $85A3   XOR      V5, VA          ; V5 ^= VA
$58A    $A663   LD       I, $663         ; Load 663 into I
$58C    $D9AD   DRW      V9, VA, #D      ; Draw 13-byte sprite at V9, VA
$58E    $4EAF   SNE      VE, #AF         ; Skip if VE != 175
$590    $F695   UNKNOWN  F695            ; Unknown Fxxx instruction
$592    $863B   UNKNOWN  863B            ; Unknown 8xxx instruction
$594    $0B9D   SYS      $B9D            ; System call to B9D
$596    $FA44   UNKNOWN  FA44            ; Unknown Fxxx instruction
$598    $5F12   UNKNOWN  $5F12           ; Unknown 5xxx instruction
$59A    $DFDE   DRW      VF, VD, #E      ; Draw 14-byte sprite at VF, VD
$59C    $20E5   CALL     $0E5            ; Call subroutine at 0E5
$59E    $4E78   SNE      VE, #78         ; Skip if VE != 120
$5A0    $EC46   UNKNOWN  $EC46           ; Unknown Exxx instruction
$5A2    $1247   JP       $247            ; Jump to 247
$5A4    $F9AB   UNKNOWN  F9AB            ; Unknown Fxxx instruction
$5A6    $413E   SNE      V1, #3E         ; Skip if V1 != 62
$5A8    $4CC3   SNE      VC, #C3         ; Skip if VC != 195
$5AA    $067A   SYS      $67A            ; System call to 67A
$5AC    $FD2F   UNKNOWN  FD2F            ; Unknown Fxxx instruction
$5AE    $8294   ADD      V2, V9          ; V2 += V9, VF = carry
$5B0    $AD95   LD       I, $D95         ; Load D95 into I
$5B2    $9694   UNKNOWN  $9694           ; Unknown 9xxx instruction
$5B4    $9DB8   UNKNOWN  $9DB8           ; Unknown 9xxx instruction
$5B6    $87E6   SHR      V7              ; V7 >>= 1, VF = LSB
$5B8    $5C07   UNKNOWN  $5C07           ; Unknown 5xxx instruction
$5BA    $08C0   SYS      $8C0            ; System call to 8C0
$5BC    $A978   LD       I, $978         ; Load 978 into I
$5BE    $F9DD   UNKNOWN  F9DD            ; Unknown Fxxx instruction
$5C0    $EBC9   UNKNOWN  $EBC9           ; Unknown Exxx instruction
$5C2    $B5FF   JP       V0, $5FF        ; Jump to V0 + 5FF
$5C4    $9709   UNKNOWN  $9709           ; Unknown 9xxx instruction
$5C6    $11B8   JP       $1B8            ; Jump to 1B8
$5C8    $AA39   LD       I, $A39         ; Load A39 into I
$5CA    $F4F5   UNKNOWN  F4F5            ; Unknown Fxxx instruction
$5CC    $8C02   AND      VC, V0          ; VC &= V0
$5CE    $6085   LD       V0, #85         ; Load 133 into V0
$5D0    $230B   CALL     $30B            ; Call subroutine at 30B
$5D2    $56B1   UNKNOWN  $56B1           ; Unknown 5xxx instruction
$5D4    $3D91   SE       VD, #91         ; Skip if VD == 145
$5D6    $E9B4   UNKNOWN  $E9B4           ; Unknown Exxx instruction
$5D8    $3310   SE       V3, #10         ; Skip if V3 == 16
$5DA    $55AD   UNKNOWN  $55AD           ; Unknown 5xxx instruction
$5DC    $013E   SYS      $13E            ; System call to 13E
$5DE    $A8DC   LD       I, $8DC         ; Load 8DC into I
$5E0    $0369   SYS      $369            ; System call to 369
$5E2    $5BDD   UNKNOWN  $5BDD           ; Unknown 5xxx instruction
$5E4    $5E02   UNKNOWN  $5E02           ; Unknown 5xxx instruction
$5E6    $9FD9   UNKNOWN  $9FD9           ; Unknown 9xxx instruction
$5E8    $E8EE   UNKNOWN  $E8EE           ; Unknown Exxx instruction
$5EA    $04BF   SYS      $4BF            ; System call to 4BF
$5EC    $9559   UNKNOWN  $9559           ; Unknown 9xxx instruction
$5EE    $19DF   JP       $9DF            ; Jump to 9DF
$5F0    $1A86   JP       $A86            ; Jump to A86
$5F2    $B260   JP       V0, $260        ; Jump to V0 + 260
$5F4    $E38A   UNKNOWN  $E38A           ; Unknown Exxx instruction
$5F6    $83BE   SHL      V3              ; V3 <<= 1, VF = MSB
$5F8    $4BD8   SNE      VB, #D8         ; Skip if VB != 216
$5FA    $73FE   ADD      V3, #FE         ; Add 254 to V3
$5FC    $E245   UNKNOWN  $E245           ; Unknown Exxx instruction
$5FE    $7FE0   ADD      VF, #E0         ; Add 224 to VF
$600    $D41C   DRW      V4, V1, #C      ; Draw 12-byte sprite at V4, V1
$602    $36CE   SE       V6, #CE         ; Skip if V6 == 206
$604    $43E0   SNE      V3, #E0         ; Skip if V3 != 224
$606    $7399   ADD      V3, #99         ; Add 153 to V3
$608    $4834   SNE      V8, #34         ; Skip if V8 != 52
$60A    $3216   SE       V2, #16         ; Skip if V2 == 22
$60C    $8269   UNKNOWN  8269            ; Unknown 8xxx instruction
$60E    $7186   ADD      V1, #86         ; Add 134 to V1
$610    $43BE   SNE      V3, #BE         ; Skip if V3 != 190
$612    $35CC   SE       V5, #CC         ; Skip if V5 == 204
$614    $92F8   UNKNOWN  $92F8           ; Unknown 9xxx instruction
$616    $3BF4   SE       VB, #F4         ; Skip if VB == 244
$618    $4524   SNE      V5, #24         ; Skip if V5 != 36
$61A    $59C6   UNKNOWN  $59C6           ; Unknown 5xxx instruction
$61C    $16D0   JP       $6D0            ; Jump to 6D0
$61E    $52D0   SE       V2, VD          ; Skip if V2 == VD
$620    $85B5   SUB      V5, VB          ; V5 -= VB, VF = !borrow
$622    $446F   SNE      V4, #6F         ; Skip if V4 != 111
$624    $2464   CALL     $464            ; Call subroutine at 464
$626    $714C   ADD      V1, #4C         ; Add 76 to V1
$628    $48F6   SNE      V8, #F6         ; Skip if V8 != 246
$62A    $35EA   SE       V5, #EA         ; Skip if V5 == 234
$62C    $6FD1   LD       VF, #D1         ; Load 209 into VF
$62E    $4953   SNE      V9, #53         ; Skip if V9 != 83
$630    $DEAB   DRW      VE, VA, #B      ; Draw 11-byte sprite at VE, VA
$632    $78CC   ADD      V8, #CC         ; Add 204 to V8
$634    $F634   UNKNOWN  F634            ; Unknown Fxxx instruction
$636    $A638   LD       I, $638         ; Load 638 into I
$638    $81B4   ADD      V1, VB          ; V1 += VB, VF = carry
$63A    $896D   UNKNOWN  896D            ; Unknown 8xxx instruction
$63C    $E6EC   UNKNOWN  $E6EC           ; Unknown Exxx instruction
$63E    $26B8   CALL     $6B8            ; Call subroutine at 6B8
$640    $35B9   SE       V5, #B9         ; Skip if V5 == 185
$642    $DBE9   DRW      VB, VE, #9      ; Draw 9-byte sprite at VB, VE
$644    $8D5C   UNKNOWN  8D5C            ; Unknown 8xxx instruction
$646    $45CB   SNE      V5, #CB         ; Skip if V5 != 203
$648    $49BE   SNE      V9, #BE         ; Skip if V9 != 190
$64A    $DAB1   DRW      VA, VB, #1      ; Draw 1-byte sprite at VA, VB
$64C    $BB0C   JP       V0, $B0C        ; Jump to V0 + B0C
$64E    $E1D9   UNKNOWN  $E1D9           ; Unknown Exxx instruction
$650    $6D83   LD       VD, #83         ; Load 131 into VD
$652    $371C   SE       V7, #1C         ; Skip if V7 == 28
$654    $7B65   ADD      VB, #65         ; Add 101 to VB
$656    $6AD7   LD       VA, #D7         ; Load 215 into VA
$658    $8326   SHR      V3              ; V3 >>= 1, VF = LSB
$65A    $0880   SYS      $880            ; System call to 880
$65C    $70A8   ADD      V0, #A8         ; Add 168 to V0
$65E    $FC31   UNKNOWN  FC31            ; Unknown Fxxx instruction
$660    $C170   RND      V1, #70         ; V1 = random & 70
$662    $AE30   LD       I, $E30         ; Load E30 into I
$664    $6D73   LD       VD, #73         ; Load 115 into VD
$666    $59B2   UNKNOWN  $59B2           ; Unknown 5xxx instruction
$668    $FDBF   UNKNOWN  FDBF            ; Unknown Fxxx instruction
$66A    $81A7   SUBN     V1, VA          ; V1 = VA - V1, VF = !borrow
$66C    $5FA2   UNKNOWN  $5FA2           ; Unknown 5xxx instruction
$66E    $B8BB   JP       V0, $8BB        ; Jump to V0 + 8BB
$670    $ED39   UNKNOWN  $ED39           ; Unknown Exxx instruction
$672    $C1C5   RND      V1, #C5         ; V1 = random & C5
$674    $2396   CALL     $396            ; Call subroutine at 396
$676    $423A   SNE      V2, #3A         ; Skip if V2 != 58
$678    $3E98   SE       VE, #98         ; Skip if VE == 152
$67A    $B998   JP       V0, $998        ; Jump to V0 + 998
$67C    $6D1D   LD       VD, #1D         ; Load 29 into VD
$67E    $E525   UNKNOWN  $E525           ; Unknown Exxx instruction
$680    $4127   SNE      V1, #27         ; Skip if V1 != 39
$682    $6113   LD       V1, #13         ; Load 19 into V1
$684    $1D9B   JP       $D9B            ; Jump to D9B
$686    $1BCC   JP       $BCC            ; Jump to BCC
$688    $F9F0   UNKNOWN  F9F0            ; Unknown Fxxx instruction
$68A    $8C49   UNKNOWN  8C49            ; Unknown 8xxx instruction
$68C    $E149   UNKNOWN  $E149           ; Unknown Exxx instruction
$68E    $0169   SYS      $169            ; System call to 169
$690    $DE24   DRW      VE, V2, #4      ; Draw 4-byte sprite at VE, V2
$692    $9363   UNKNOWN  $9363           ; Unknown 9xxx instruction
$694    $7DD6   ADD      VD, #D6         ; Add 214 to VD
$696    $91ED   UNKNOWN  $91ED           ; Unknown 9xxx instruction
$698    $DF1A   DRW      VF, V1, #A      ; Draw 10-byte sprite at VF, V1
$69A    $353E   SE       V5, #3E         ; Skip if V5 == 62
$69C    $3DAA   SE       VD, #AA         ; Skip if VD == 170
$69E    $B47D   JP       V0, $47D        ; Jump to V0 + 47D
$6A0    $31D9   SE       V1, #D9         ; Skip if V1 == 217
$6A2    $9978   UNKNOWN  $9978           ; Unknown 9xxx instruction
$6A4    $903B   UNKNOWN  $903B           ; Unknown 9xxx instruction
$6A6    $2DE8   CALL     $DE8            ; Call subroutine at DE8
$6A8    $B84D   JP       V0, $84D        ; Jump to V0 + 84D
$6AA    $A54A   LD       I, $54A         ; Load 54A into I
$6AC    $7810   ADD      V8, #10         ; Add 16 to V8
$6AE    $575F   UNKNOWN  $575F           ; Unknown 5xxx instruction
$6B0    $3228   SE       V2, #28         ; Skip if V2 == 40
$6B2    $CECE   RND      VE, #CE         ; VE = random & CE
$6B4    $9965   UNKNOWN  $9965           ; Unknown 9xxx instruction
$6B6    $1DD1   JP       $DD1            ; Jump to DD1
$6B8    $CE2B   RND      VE, #2B         ; VE = random & 2B
$6BA    $B90E   JP       V0, $90E        ; Jump to V0 + 90E
$6BC    $B983   JP       V0, $983        ; Jump to V0 + 983
$6BE    $24DF   CALL     $4DF            ; Call subroutine at 4DF
$6C0    $48DB   SNE      V8, #DB         ; Skip if V8 != 219
$6C2    $D67B   DRW      V6, V7, #B      ; Draw 11-byte sprite at V6, V7
$6C4    $EA85   UNKNOWN  $EA85           ; Unknown Exxx instruction
$6C6    $6C3B   LD       VC, #3B         ; Load 59 into VC
$6C8    $119F   JP       $19F            ; Jump to 19F
$6CA    $67C7   LD       V7, #C7         ; Load 199 into V7
$6CC    $DA75   DRW      VA, V7, #5      ; Draw 5-byte sprite at VA, V7
$6CE    $896C   UNKNOWN  896C            ; Unknown 8xxx instruction
$6D0    $FD27   UNKNOWN  FD27            ; Unknown Fxxx instruction
$6D2    $127B   JP       $27B            ; Jump to 27B
$6D4    $4FD5   SNE      VF, #D5         ; Skip if VF != 213
$6D6    $DDD9   DRW      VD, VD, #9      ; Draw 9-byte sprite at VD, VD
$6D8    $1DFD   JP       $DFD            ; Jump to DFD
$6DA    $FCBE   UNKNOWN  FCBE            ; Unknown Fxxx instruction
$6DC    $56D7   UNKNOWN  $56D7           ; Unknown 5xxx instruction
$6DE    $DA25   DRW      VA, V2, #5      ; Draw 5-byte sprite at VA, V2
$6E0    $5333   UNKNOWN  $5333           ; Unknown 5xxx instruction
$6E2    $F6BF   UNKNOWN  F6BF            ; Unknown Fxxx instruction
$6E4    $A1B0   LD       I, $1B0         ; Load 1B0 into I
$6E6    $72B9   ADD      V2, #B9         ; Add 185 to V2
$6E8    $5F74   UNKNOWN  $5F74           ; Unknown 5xxx instruction
$6EA    $4B9E   SNE      VB, #9E         ; Skip if VB != 158
$6EC    $9EB2   UNKNOWN  $9EB2           ; Unknown 9xxx instruction
$6EE    $5EAF   UNKNOWN  $5EAF           ; Unknown 5xxx instruction
$6F0    $BA67   JP       V0, $A67        ; Jump to V0 + A67
$6F2    $C6E4   RND      V6, #E4         ; V6 = random & E4
$6F4    $B254   JP       V0, $254        ; Jump to V0 + 254
$6F6    $E635   UNKNOWN  $E635           ; Unknown Exxx instruction
$6F8    $3A90   SE       VA, #90         ; Skip if VA == 144
$6FA    $F67D   UNKNOWN  F67D            ; Unknown Fxxx instruction
$6FC    $C1D6   RND      V1, #D6         ; V1 = random & D6
$6FE    $3968   SE       V9, #68         ; Skip if V9 == 104
$700    $B979   JP       V0, $979        ; Jump to V0 + 979
$702    $B0C5   JP       V0, $0C5        ; Jump to V0 + 0C5
$704    $5793   UNKNOWN  $5793           ; Unknown 5xxx instruction
$706    $3D86   SE       VD, #86         ; Skip if VD == 134
$708    $D0A6   DRW      V0, VA, #6      ; Draw 6-byte sprite at V0, VA
$70A    $0102   SYS      $102            ; System call to 102
$70C    $F203   UNKNOWN  F203            ; Unknown Fxxx instruction
$70E    $221F   CALL     $21F            ; Call subroutine at 21F
$710    $605B   LD       V0, #5B         ; Load 91 into V0
$712    $37B6   SE       V7, #B6         ; Skip if V7 == 182
$714    $73F1   ADD      V3, #F1         ; Add 241 to V3
$716    $B237   JP       V0, $237        ; Jump to V0 + 237
$718    $8106   SHR      V1              ; V1 >>= 1, VF = LSB
$71A    $F9FF   UNKNOWN  F9FF            ; Unknown Fxxx instruction
$71C    $7D4A   ADD      VD, #4A         ; Add 74 to VD
$71E    $4FE9   SNE      VF, #E9         ; Skip if VF != 233
$720    $2C98   CALL     $C98            ; Call subroutine at C98
$722    $61CF   LD       V1, #CF         ; Load 207 into V1
$724    $D175   DRW      V1, V7, #5      ; Draw 5-byte sprite at V1, V7
$726    $713A   ADD      V1, #3A         ; Add 58 to V1
$728    $4EB7   SNE      VE, #B7         ; Skip if VE != 183
$72A    $EA28   UNKNOWN  $EA28           ; Unknown Exxx instruction
$72C    $7731   ADD      V7, #31         ; Add 49 to V7
$72E    $7591   ADD      V5, #91         ; Add 145 to V5
$730    $7BF7   ADD      VB, #F7         ; Add 247 to VB
$732    $1C1D   JP       $C1D            ; Jump to C1D
$734    $B613   JP       V0, $613        ; Jump to V0 + 613
$736    $3BE7   SE       VB, #E7         ; Skip if VB == 231
$738    $F933   LD       B, V9           ; Store BCD of V9 at I, I+1, I+2
$73A    $375D   SE       V7, #5D         ; Skip if V7 == 93
$73C    $C4CB   RND      V4, #CB         ; V4 = random & CB
$73E    $77C8   ADD      V7, #C8         ; Add 200 to V7
$740    $4341   SNE      V3, #41         ; Skip if V3 != 65
$742    $E1BC   UNKNOWN  $E1BC           ; Unknown Exxx instruction
$744    $95CA   UNKNOWN  $95CA           ; Unknown 9xxx instruction
$746    $9A24   UNKNOWN  $9A24           ; Unknown 9xxx instruction
$748    $E588   UNKNOWN  $E588           ; Unknown Exxx instruction
$74A    $00DD   SYS      $0DD            ; System call to 0DD
$74C    $1408   JP       $408            ; Jump to 408
$74E    $30A2   SE       V0, #A2         ; Skip if V0 == 162
$750    $727B   ADD      V2, #7B         ; Add 123 to V2
$752    $E8C9   UNKNOWN  $E8C9           ; Unknown Exxx instruction
$754    $79A6   ADD      V9, #A6         ; Add 166 to V9
$756    $6E3A   LD       VE, #3A         ; Load 58 into VE
$758    $1C5E   JP       $C5E            ; Jump to C5E
$75A    $C007   RND      V0, #07         ; V0 = random & 07
$75C    $98CD   UNKNOWN  $98CD           ; Unknown 9xxx instruction
$75E    $A612   LD       I, $612         ; Load 612 into I
$760    $A435   LD       I, $435         ; Load 435 into I
$762    $A755   LD       I, $755         ; Load 755 into I
$764    $F6BE   UNKNOWN  F6BE            ; Unknown Fxxx instruction
$766    $74E9   ADD      V4, #E9         ; Add 233 to V4
$768    $FDB0   UNKNOWN  FDB0            ; Unknown Fxxx instruction
$76A    $3725   SE       V7, #25         ; Skip if V7 == 37
$76C    $0B3C   SYS      $B3C            ; System call to B3C
$76E    $2F24   CALL     $F24            ; Call subroutine at F24
$770    $E61C   UNKNOWN  $E61C           ; Unknown Exxx instruction
$772    $F3CC   UNKNOWN  F3CC            ; Unknown Fxxx instruction
$774    $5CF1   UNKNOWN  $5CF1           ; Unknown 5xxx instruction
$776    $40B9   SNE      V0, #B9         ; Skip if V0 != 185
$778    $665A   LD       V6, #5A         ; Load 90 into V6
$77A    $D77A   DRW      V7, V7, #A      ; Draw 10-byte sprite at V7, V7
$77C    $DCB5   DRW      VC, VB, #5      ; Draw 5-byte sprite at VC, VB
$77E    $3DE0   SE       VD, #E0         ; Skip if VD == 224
$780    $40FA   SNE      V0, #FA         ; Skip if V0 != 250
$782    $15A7   JP       $5A7            ; Jump to 5A7
$784    $8DC2   AND      VD, VC          ; VD &= VC
$786    $23E0   CALL     $3E0            ; Call subroutine at 3E0
$788    $6EC8   LD       VE, #C8         ; Load 200 into VE
$78A    $7E25   ADD      VE, #25         ; Add 37 to VE
$78C    $32BE   SE       V2, #BE         ; Skip if V2 == 190
$78E    $8756   SHR      V7              ; V7 >>= 1, VF = LSB
$790    $D0CB   DRW      V0, VC, #B      ; Draw 11-byte sprite at V0, VC
$792    $1DF8   JP       $DF8            ; Jump to DF8
$794    $DE5A   DRW      VE, V5, #A      ; Draw 10-byte sprite at VE, V5
$796    $5F78   UNKNOWN  $5F78           ; Unknown 5xxx instruction
$798    $B5C4   JP       V0, $5C4        ; Jump to V0 + 5C4
$79A    $C537   RND      V5, #37         ; V5 = random & 37
$79C    $D870   DRW      V8, V7, #0      ; Draw 0-byte sprite at V8, V7
$79E    $37B1   SE       V7, #B1         ; Skip if V7 == 177
$7A0    $7096   ADD      V0, #96         ; Add 150 to V0
$7A2    $CAAA   RND      VA, #AA         ; VA = random & AA
$7A4    $3AA6   SE       VA, #A6         ; Skip if VA == 166
$7A6    $7AB4   ADD      VA, #B4         ; Add 180 to VA
$7A8    $3242   SE       V2, #42         ; Skip if V2 == 66
$7AA    $5974   UNKNOWN  $5974           ; Unknown 5xxx instruction
$7AC    $C418   RND      V4, #18         ; V4 = random & 18
$7AE    $4B25   SNE      VB, #25         ; Skip if VB != 37
$7B0    $55D2   UNKNOWN  $55D2           ; Unknown 5xxx instruction
$7B2    $E86E   UNKNOWN  $E86E           ; Unknown Exxx instruction
$7B4    $38A9   SE       V8, #A9         ; Skip if V8 == 169
$7B6    $321C   SE       V2, #1C         ; Skip if V2 == 28
$7B8    $5F29   UNKNOWN  $5F29           ; Unknown 5xxx instruction
$7BA    $21C9   CALL     $1C9            ; Call subroutine at 1C9
$7BC    $957C   UNKNOWN  $957C           ; Unknown 9xxx instruction
$7BE    $7D7D   ADD      VD, #7D         ; Add 125 to VD
$7C0    $E7D2   UNKNOWN  $E7D2           ; Unknown Exxx instruction
$7C2    $EA77   UNKNOWN  $EA77           ; Unknown Exxx instruction
$7C4    $364B   SE       V6, #4B         ; Skip if V6 == 75
$7C6    $7E89   ADD      VE, #89         ; Add 137 to VE
$7C8    $605B   LD       V0, #5B         ; Load 91 into V0
$7CA    $4B99   SNE      VB, #99         ; Skip if VB != 153
$7CC    $3488   SE       V4, #88         ; Skip if V4 == 136
$7CE    $1ACE   JP       $ACE            ; Jump to ACE
$7D0    $0316   SYS      $316            ; System call to 316
$7D2    $25D5   CALL     $5D5            ; Call subroutine at 5D5
$7D4    $67DE   LD       V7, #DE         ; Load 222 into V7
$7D6    $4F3C   SNE      VF, #3C         ; Skip if VF != 60
$7D8    $6DDD   LD       VD, #DD         ; Load 221 into VD
$7DA    $F8C2   UNKNOWN  F8C2            ; Unknown Fxxx instruction
$7DC    $D2F2   DRW      V2, VF, #2      ; Draw 2-byte sprite at V2, VF
$7DE    $35D7   SE       V5, #D7         ; Skip if V5 == 215
$7E0    $05A2   SYS      $5A2            ; System call to 5A2
$7E2    $2F34   CALL     $F34            ; Call subroutine at F34
$7E4    $C065   RND      V0, #65         ; V0 = random & 65
$7E6    $EE8D   UNKNOWN  $EE8D           ; Unknown Exxx instruction
$7E8    $91C8   UNKNOWN  $91C8           ; Unknown 9xxx instruction
$7EA    $7CAE   ADD      VC, #AE         ; Add 174 to VC
$7EC    $2E0F   CALL     $E0F            ; Call subroutine at E0F
$7EE    $F198   UNKNOWN  F198            ; Unknown Fxxx instruction
$7F0    $4AE5   SNE      VA, #E5         ; Skip if VA != 229
$7F2    $EB75   UNKNOWN  $EB75           ; Unknown Exxx instruction
$7F4    $F4A5   UNKNOWN  F4A5            ; Unknown Fxxx instruction
$7F6    $D23F   DRW      V2, V3, #F      ; Draw 15-byte sprite at V2, V3
$7F8    $975A   UNKNOWN  $975A           ; Unknown 9xxx instruction
$7FA    $1B26   JP       $B26            ; Jump to B26
$7FC    $59DE   UNKNOWN  $59DE           ; Unknown 5xxx instruction
$7FE    $AA07   LD       I, $A07         ; Load A07 into I
$800    $F434   UNKNOWN  F434            ; Unknown Fxxx instruction
$802    $1CBA   JP       $CBA            ; Jump to CBA
$804    $D39C   DRW      V3, V9, #C      ; Draw 12-byte sprite at V3, V9
$806    $46A2   SNE      V6, #A2         ; Skip if V6 != 162
$808    $952D   UNKNOWN  $952D           ; Unknown 9xxx instruction
$80A    $1CAD   JP       $CAD            ; Jump to CAD
$80C    $B519   JP       V0, $519        ; Jump to V0 + 519
$80E    $AA26   LD       I, $A26         ; Load A26 into I
$810    $AEB2   LD       I, $EB2         ; Load EB2 into I
$812    $C09F   RND      V0, #9F         ; V0 = random & 9F
$814    $3E5B   SE       VE, #5B         ; Skip if VE == 91
$816    $13F4   JP       $3F4            ; Jump to 3F4
$818    $D771   DRW      V7, V7, #1      ; Draw 1-byte sprite at V7, V7
$81A    $C2E8   RND      V2, #E8         ; V2 = random & E8
$81C    $3E7D   SE       VE, #7D         ; Skip if VE == 125
$81E    $6BA5   LD       VB, #A5         ; Load 165 into VB
$820    $F4E7   UNKNOWN  F4E7            ; Unknown Fxxx instruction
$822    $B166   JP       V0, $166        ; Jump to V0 + 166
$824    $E3E7   UNKNOWN  $E3E7           ; Unknown Exxx instruction
$826    $E5B9   UNKNOWN  $E5B9           ; Unknown Exxx instruction
$828    $5C3C   UNKNOWN  $5C3C           ; Unknown 5xxx instruction
$82A    $6D9C   LD       VD, #9C         ; Load 156 into VD
$82C    $E161   UNKNOWN  $E161           ; Unknown Exxx instruction
$82E    $920B   UNKNOWN  $920B           ; Unknown 9xxx instruction
$830    $D9D3   DRW      V9, VD, #3      ; Draw 3-byte sprite at V9, VD
$832    $A472   LD       I, $472         ; Load 472 into I
$834    $EAD2   UNKNOWN  $EAD2           ; Unknown Exxx instruction
$836    $5B93   UNKNOWN  $5B93           ; Unknown 5xxx instruction
$838    $4024   SNE      V0, #24         ; Skip if V0 != 36
$83A    $041E   SYS      $41E            ; System call to 41E
$83C    $B0D2   JP       V0, $0D2        ; Jump to V0 + 0D2
$83E    $A975   LD       I, $975         ; Load 975 into I
$840    $5624   UNKNOWN  $5624           ; Unknown 5xxx instruction
$842    $682E   LD       V8, #2E         ; Load 46 into V8
$844    $AD09   LD       I, $D09         ; Load D09 into I
$846    $5A92   UNKNOWN  $5A92           ; Unknown 5xxx instruction
$848    $684A   LD       V8, #4A         ; Load 74 into V8
$84A    $8934   ADD      V9, V3          ; V9 += V3, VF = carry
$84C    $104A   JP       $04A            ; Jump to 04A
$84E    $4874   SNE      V8, #74         ; Skip if V8 != 116
$850    $D9A1   DRW      V9, VA, #1      ; Draw 1-byte sprite at V9, VA
$852    $BC60   JP       V0, $C60        ; Jump to V0 + C60
$854    $7FA2   ADD      VF, #A2         ; Add 162 to VF
$856    $99BE   UNKNOWN  $99BE           ; Unknown 9xxx instruction
$858    $899C   UNKNOWN  899C            ; Unknown 8xxx instruction
$85A    $C943   RND      V9, #43         ; V9 = random & 43
$85C    $459A   SNE      V5, #9A         ; Skip if V5 != 154
$85E    $46F8   SNE      V6, #F8         ; Skip if V6 != 248
$860    $7D23   ADD      VD, #23         ; Add 35 to VD
$862    $39DB   SE       V9, #DB         ; Skip if V9 == 219
$864    $87AC   UNKNOWN  87AC            ; Unknown 8xxx instruction
$866    $DCFB   DRW      VC, VF, #B      ; Draw 11-byte sprite at VC, VF
$868    $54B8   UNKNOWN  $54B8           ; Unknown 5xxx instruction
$86A    $6567   LD       V5, #67         ; Load 103 into V5
$86C    $BF9C   JP       V0, $F9C        ; Jump to V0 + F9C
$86E    $0340   SYS      $340            ; System call to 340
$870    $66E9   LD       V6, #E9         ; Load 233 into V6
$872    $8C03   XOR      VC, V0          ; VC ^= V0
$874    $F5EF   UNKNOWN  F5EF            ; Unknown Fxxx instruction
$876    $E920   UNKNOWN  $E920           ; Unknown Exxx instruction
$878    $995C   UNKNOWN  $995C           ; Unknown 9xxx instruction
$87A    $FFAC   UNKNOWN  FFAC            ; Unknown Fxxx instruction
$87C    $6657   LD       V6, #57         ; Load 87 into V6
$87E    $7282   ADD      V2, #82         ; Add 130 to V2
$880    $1D5C   JP       $D5C            ; Jump to D5C
$882    $F465   LD       V4, [I]         ; Load V0-V4 from I
$884    $FBBB   UNKNOWN  FBBB            ; Unknown Fxxx instruction
$886    $E1B8   UNKNOWN  $E1B8           ; Unknown Exxx instruction
$888    $2C79   CALL     $C79            ; Call subroutine at C79
$88A    $4DA9   SNE      VD, #A9         ; Skip if VD != 169
$88C    $9DB1   UNKNOWN  $9DB1           ; Unknown 9xxx instruction
$88E    $A16B   LD       I, $16B         ; Load 16B into I
$890    $FEFB   UNKNOWN  FEFB            ; Unknown Fxxx instruction
$892    $3277   SE       V2, #77         ; Skip if V2 == 119
$894    $C2E8   RND      V2, #E8         ; V2 = random & E8
$896    $8DC7   SUBN     VD, VC          ; VD = VC - VD, VF = !borrow
$898    $7A3D   ADD      VA, #3D         ; Add 61 to VA
$89A    $75A5   ADD      V5, #A5         ; Add 165 to V5
$89C    $BCFF   JP       V0, $CFF        ; Jump to V0 + CFF
$89E    $E4E1   UNKNOWN  $E4E1           ; Unknown Exxx instruction
$8A0    $191C   JP       $91C            ; Jump to 91C
$8A2    $8063   XOR      V0, V6          ; V0 ^= V6
$8A4    $E292   UNKNOWN  $E292           ; Unknown Exxx instruction
$8A6    $8AB0   LD       VA, VB          ; VA = VB
$8A8    $63D8   LD       V3, #D8         ; Load 216 into V3
$8AA    $4EB6   SNE      VE, #B6         ; Skip if VE != 182
$8AC    $54B6   UNKNOWN  $54B6           ; Unknown 5xxx instruction
$8AE    $CE75   RND      VE, #75         ; VE = random & 75
$8B0    $6B67   LD       VB, #67         ; Load 103 into VB
$8B2    $5087   UNKNOWN  $5087           ; Unknown 5xxx instruction
$8B4    $C99A   RND      V9, #9A         ; V9 = random & 9A
$8B6    $0B0B   SYS      $B0B            ; System call to B0B
$8B8    $A44C   LD       I, $44C         ; Load 44C into I
$8BA    $3212   SE       V2, #12         ; Skip if V2 == 18
$8BC    $D53D   DRW      V5, V3, #D      ; Draw 13-byte sprite at V5, V3
$8BE    $E308   UNKNOWN  $E308           ; Unknown Exxx instruction
$8C0    $7A60   ADD      VA, #60         ; Add 96 to VA
$8C2    $6492   LD       V4, #92         ; Load 146 into V4
$8C4    $45CA   SNE      V5, #CA         ; Skip if V5 != 202
$8C6    $7224   ADD      V2, #24         ; Add 36 to V2
$8C8    $F05E   UNKNOWN  F05E            ; Unknown Fxxx instruction
$8CA    $6AB5   LD       VA, #B5         ; Load 181 into VA
$8CC    $FC9F   UNKNOWN  FC9F            ; Unknown Fxxx instruction
$8CE    $3443   SE       V4, #43         ; Skip if V4 == 67
$8D0    $7A50   ADD      VA, #50         ; Add 80 to VA
$8D2    $C645   RND      V6, #45         ; V6 = random & 45
$8D4    $CB30   RND      VB, #30         ; VB = random & 30
$8D6    $ACDA   LD       I, $CDA         ; Load CDA into I
$8D8    $8C3F   UNKNOWN  8C3F            ; Unknown 8xxx instruction
$8DA    $502A   UNKNOWN  $502A           ; Unknown 5xxx instruction
$8DC    $F964   UNKNOWN  F964            ; Unknown Fxxx instruction
$8DE    $5F3E   UNKNOWN  $5F3E           ; Unknown 5xxx instruction
$8E0    $8978   UNKNOWN  8978            ; Unknown 8xxx instruction
$8E2    $FEC7   UNKNOWN  FEC7            ; Unknown Fxxx instruction
$8E4    $4A49   SNE      VA, #49         ; Skip if VA != 73
$8E6    $ADDA   LD       I, $DDA         ; Load DDA into I
$8E8    $72F0   ADD      V2, #F0         ; Add 240 to V2
$8EA    $5579   UNKNOWN  $5579           ; Unknown 5xxx instruction
$8EC    $0534   SYS      $534            ; System call to 534
$8EE    $6E0F   LD       VE, #0F         ; Load 15 into VE
$8F0    $A7FF   LD       I, $7FF         ; Load 7FF into I
$8F2    $C434   RND      V4, #34         ; V4 = random & 34
$8F4    $08D5   SYS      $8D5            ; System call to 8D5
$8F6    $B070   JP       V0, $070        ; Jump to V0 + 070
$8F8    $C992   RND      V9, #92         ; V9 = random & 92
$8FA    $17B3   JP       $7B3            ; Jump to 7B3
$8FC    $8272   AND      V2, V7          ; V2 &= V7
$8FE    $6107   LD       V1, #07         ; Load 7 into V1
$900    $D583   DRW      V5, V8, #3      ; Draw 3-byte sprite at V5, V8
$902    $DEF4   DRW      VE, VF, #4      ; Draw 4-byte sprite at VE, VF
$904    $ACB7   LD       I, $CB7         ; Load CB7 into I
$906    $0F39   SYS      $F39            ; System call to F39
$908    $24E7   CALL     $4E7            ; Call subroutine at 4E7
$90A    $DA4A   DRW      VA, V4, #A      ; Draw 10-byte sprite at VA, V4
$90C    $C47B   RND      V4, #7B         ; V4 = random & 7B
$90E    $3B29   SE       VB, #29         ; Skip if VB == 41
$910    $3DBE   SE       VD, #BE         ; Skip if VD == 190
$912    $49FF   SNE      V9, #FF         ; Skip if V9 != 255
$914    $EE6F   UNKNOWN  $EE6F           ; Unknown Exxx instruction
$916    $114D   JP       $14D            ; Jump to 14D
$918    $60EE   LD       V0, #EE         ; Load 238 into V0
$91A    $B95A   JP       V0, $95A        ; Jump to V0 + 95A
$91C    $A5B6   LD       I, $5B6         ; Load 5B6 into I
$91E    $9270   SNE      V2, V7          ; Skip if V2 != V7
$920    $C8FA   RND      V8, #FA         ; V8 = random & FA
$922    $0D85   SYS      $D85            ; System call to D85
$924    $B8BC   JP       V0, $8BC        ; Jump to V0 + 8BC
$926    $566F   UNKNOWN  $566F           ; Unknown 5xxx instruction
$928    $11A0   JP       $1A0            ; Jump to 1A0
$92A    $0AD3   SYS      $AD3            ; System call to AD3
$92C    $371F   SE       V7, #1F         ; Skip if V7 == 31
$92E    $DD6B   DRW      VD, V6, #B      ; Draw 11-byte sprite at VD, V6
$930    $92BE   UNKNOWN  $92BE           ; Unknown 9xxx instruction
$932    $7A64   ADD      VA, #64         ; Add 100 to VA
$934    $B90F   JP       V0, $90F        ; Jump to V0 + 90F
$936    $CAA1   RND      VA, #A1         ; VA = random & A1
$938    $4527   SNE      V5, #27         ; Skip if V5 != 39
$93A    $5452   UNKNOWN  $5452           ; Unknown 5xxx instruction
$93C    $2E94   CALL     $E94            ; Call subroutine at E94
$93E    $DF97   DRW      VF, V9, #7      ; Draw 7-byte sprite at VF, V9
$940    $5198   UNKNOWN  $5198           ; Unknown 5xxx instruction
$942    $9AB0   SNE      VA, VB          ; Skip if VA != VB
$944    $4F72   SNE      VF, #72         ; Skip if VF != 114
$946    $D973   DRW      V9, V7, #3      ; Draw 3-byte sprite at V9, V7
$948    $1E2C   JP       $E2C            ; Jump to E2C
$94A    $6C08   LD       VC, #08         ; Load 8 into VC
$94C    $C61A   RND      V6, #1A         ; V6 = random & 1A
$94E    $F33A   UNKNOWN  F33A            ; Unknown Fxxx instruction
$950    $C4B2   RND      V4, #B2         ; V4 = random & B2
$952    $6FC8   LD       VF, #C8         ; Load 200 into VF
$954    $F1B1   UNKNOWN  F1B1            ; Unknown Fxxx instruction
$956    $277B   CALL     $77B            ; Call subroutine at 77B
$958    $8335   SUB      V3, V3          ; V3 -= V3, VF = !borrow
$95A    $2DD9   CALL     $DD9            ; Call subroutine at DD9
$95C    $0F61   SYS      $F61            ; System call to F61
$95E    $15A9   JP       $5A9            ; Jump to 5A9
$960    $F4D0   UNKNOWN  F4D0            ; Unknown Fxxx instruction
$962    $1A3E   JP       $A3E            ; Jump to A3E
$964    $5A4B   UNKNOWN  $5A4B           ; Unknown 5xxx instruction
$966    $1E99   JP       $E99            ; Jump to E99
$968    $2E6A   CALL     $E6A            ; Call subroutine at E6A
$96A    $7604   ADD      V6, #04         ; Add 4 to V6
$96C    $E12F   UNKNOWN  $E12F           ; Unknown Exxx instruction
$96E    $C7F9   RND      V7, #F9         ; V7 = random & F9
$970    $D036   DRW      V0, V3, #6      ; Draw 6-byte sprite at V0, V3
$972    $1730   JP       $730            ; Jump to 730
$974    $0F98   SYS      $F98            ; System call to F98
$976    $8D59   UNKNOWN  8D59            ; Unknown 8xxx instruction
$978    $98F3   UNKNOWN  $98F3           ; Unknown 9xxx instruction
$97A    $3F5C   SE       VF, #5C         ; Skip if VF == 92
$97C    $B70D   JP       V0, $70D        ; Jump to V0 + 70D
$97E    $FAB7   UNKNOWN  FAB7            ; Unknown Fxxx instruction
$980    $D2A4   DRW      V2, VA, #4      ; Draw 4-byte sprite at V2, VA
$982    $775B   ADD      V7, #5B         ; Add 91 to V7
$984    $B429   JP       V0, $429        ; Jump to V0 + 429
$986    $F15F   UNKNOWN  F15F            ; Unknown Fxxx instruction
$988    $714A   ADD      V1, #4A         ; Add 74 to V1
$98A    $A62F   LD       I, $62F         ; Load 62F into I
$98C    $6E1B   LD       VE, #1B         ; Load 27 into VE
$98E    $38A3   SE       V8, #A3         ; Skip if V8 == 163
$990    $348B   SE       V4, #8B         ; Skip if V4 == 139
$992    $4489   SNE      V4, #89         ; Skip if V4 != 137
$994    $BDDF   JP       V0, $DDF        ; Jump to V0 + DDF
$996    $EA82   UNKNOWN  $EA82           ; Unknown Exxx instruction
$998    $0442   SYS      $442            ; System call to 442
$99A    $3BA0   SE       VB, #A0         ; Skip if VB == 160
$99C    $112C   JP       $12C            ; Jump to 12C
$99E    $FC73   UNKNOWN  FC73            ; Unknown Fxxx instruction
$9A0    $65C3   LD       V5, #C3         ; Load 195 into V5
$9A2    $50BD   UNKNOWN  $50BD           ; Unknown 5xxx instruction
$9A4    $773D   ADD      V7, #3D         ; Add 61 to V7
$9A6    $1735   JP       $735            ; Jump to 735
$9A8    $2173   CALL     $173            ; Call subroutine at 173
$9AA    $F029   LD       F, V0           ; I = sprite address for digit V0
$9AC    $20DE   CALL     $0DE            ; Call subroutine at 0DE
$9AE    $95D0   SNE      V5, VD          ; Skip if V5 != VD
$9B0    $F6D6   UNKNOWN  F6D6            ; Unknown Fxxx instruction
$9B2    $A96C   LD       I, $96C         ; Load 96C into I
$9B4    $435F   SNE      V3, #5F         ; Skip if V3 != 95
$9B6    $BABE   JP       V0, $ABE        ; Jump to V0 + ABE
$9B8    $3E03   SE       VE, #03         ; Skip if VE == 3
$9BA    $D3EF   DRW      V3, VE, #F      ; Draw 15-byte sprite at V3, VE
$9BC    $5A47   UNKNOWN  $5A47           ; Unknown 5xxx instruction
$9BE    $460D   SNE      V6, #0D         ; Skip if V6 != 13
$9C0    $2F05   CALL     $F05            ; Call subroutine at F05
$9C2    $7BFA   ADD      VB, #FA         ; Add 250 to VB
$9C4    $8E73   XOR      VE, V7          ; VE ^= V7
$9C6    $D5BA   DRW      V5, VB, #A      ; Draw 10-byte sprite at V5, VB
$9C8    $0B5B   SYS      $B5B            ; System call to B5B
$9CA    $9F6B   UNKNOWN  $9F6B           ; Unknown 9xxx instruction
$9CC    $4034   SNE      V0, #34         ; Skip if V0 != 52
$9CE    $DEE5   DRW      VE, VE, #5      ; Draw 5-byte sprite at VE, VE
$9D0    $5661   UNKNOWN  $5661           ; Unknown 5xxx instruction
$9D2    $D8A8   DRW      V8, VA, #8      ; Draw 8-byte sprite at V8, VA
$9D4    $4AE5   SNE      VA, #E5         ; Skip if VA != 229
$9D6    $1492   JP       $492            ; Jump to 492
$9D8    $2E70   CALL     $E70            ; Call subroutine at E70
$9DA    $E4F4   UNKNOWN  $E4F4           ; Unknown Exxx instruction
$9DC    $C1BB   RND      V1, #BB         ; V1 = random & BB
$9DE    $475A   SNE      V7, #5A         ; Skip if V7 != 90
$9E0    $C86B   RND      V8, #6B         ; V8 = random & 6B
$9E2    $2C7C   CALL     $C7C            ; Call subroutine at C7C
$9E4    $68E3   LD       V8, #E3         ; Load 227 into V8
$9E6    $940F   UNKNOWN  $940F           ; Unknown 9xxx instruction
$9E8    $B4EF   JP       V0, $4EF        ; Jump to V0 + 4EF
$9EA    $538F   UNKNOWN  $538F           ; Unknown 5xxx instruction
$9EC    $5434   UNKNOWN  $5434           ; Unknown 5xxx instruction
$9EE    $624A   LD       V2, #4A         ; Load 74 into V2
$9F0    $A989   LD       I, $989         ; Load 989 into I
$9F2    $2950   CALL     $950            ; Call subroutine at 950
$9F4    $66CE   LD       V6, #CE         ; Load 206 into V6
$9F6    $8C90   LD       VC, V9          ; VC = V9
$9F8    $44AF   SNE      V4, #AF         ; Skip if V4 != 175
$9FA    $09E8   SYS      $9E8            ; System call to 9E8
$9FC    $97C9   UNKNOWN  $97C9           ; Unknown 9xxx instruction
$9FE    $088D   SYS      $88D            ; System call to 88D
$A00    $4857   SNE      V8, #57         ; Skip if V8 != 87
$A02    $C4D4   RND      V4, #D4         ; V4 = random & D4
$A04    $EDA0   UNKNOWN  $EDA0           ; Unknown Exxx instruction
$A06    $3E5B   SE       VE, #5B         ; Skip if VE == 91
$A08    $56B1   UNKNOWN  $56B1           ; Unknown 5xxx instruction
$A0A    $074A   SYS      $74A            ; System call to 74A
$A0C    $D70A   DRW      V7, V0, #A      ; Draw 10-byte sprite at V7, V0
$A0E    $77AF   ADD      V7, #AF         ; Add 175 to V7
$A10    $B701   JP       V0, $701        ; Jump to V0 + 701
$A12    $D115   DRW      V1, V1, #5      ; Draw 5-byte sprite at V1, V1
$A14    $D8CA   DRW      V8, VC, #A      ; Draw 10-byte sprite at V8, VC
$A16    $E504   UNKNOWN  $E504           ; Unknown Exxx instruction
$A18    $BF48   JP       V0, $F48        ; Jump to V0 + F48
$A1A    $8729   UNKNOWN  8729            ; Unknown 8xxx instruction
$A1C    $4F87   SNE      VF, #87         ; Skip if VF != 135
$A1E    $E883   UNKNOWN  $E883           ; Unknown Exxx instruction
$A20    $A5B4   LD       I, $5B4         ; Load 5B4 into I
$A22    $F6F3   UNKNOWN  F6F3            ; Unknown Fxxx instruction
$A24    $0E21   SYS      $E21            ; System call to E21
$A26    $A356   LD       I, $356         ; Load 356 into I
$A28    $277C   CALL     $77C            ; Call subroutine at 77C
$A2A    $C063   RND      V0, #63         ; V0 = random & 63
$A2C    $E3DB   UNKNOWN  $E3DB           ; Unknown Exxx instruction
$A2E    $B7A4   JP       V0, $7A4        ; Jump to V0 + 7A4
$A30    $46D4   SNE      V6, #D4         ; Skip if V6 != 212
$A32    $27A4   CALL     $7A4            ; Call subroutine at 7A4
$A34    $ADC1   LD       I, $DC1         ; Load DC1 into I
$A36    $3C4B   SE       VC, #4B         ; Skip if VC == 75
$A38    $D360   DRW      V3, V6, #0      ; Draw 0-byte sprite at V3, V6
$A3A    $A001   LD       I, $001         ; Load 001 into I
$A3C    $66C1   LD       V6, #C1         ; Load 193 into V6
$A3E    $CD41   RND      VD, #41         ; VD = random & 41
$A40    $AD65   LD       I, $D65         ; Load D65 into I
$A42    $7412   ADD      V4, #12         ; Add 18 to V4
$A44    $E524   UNKNOWN  $E524           ; Unknown Exxx instruction
$A46    $8FD2   AND      VF, VD          ; VF &= VD
$A48    $CBBA   RND      VB, #BA         ; VB = random & BA
$A4A    $2078   CALL     $078            ; Call subroutine at 078
$A4C    $06AB   SYS      $6AB            ; System call to 6AB
$A4E    $DDFB   DRW      VD, VF, #B      ; Draw 11-byte sprite at VD, VF
$A50    $6424   LD       V4, #24         ; Load 36 into V4
$A52    $1EA4   JP       $EA4            ; Jump to EA4
$A54    $9926   UNKNOWN  $9926           ; Unknown 9xxx instruction
$A56    $1009   JP       $009            ; Jump to 009
$A58    $3535   SE       V5, #35         ; Skip if V5 == 53
$A5A    $1E78   JP       $E78            ; Jump to E78
$A5C    $A258   LD       I, $258         ; Load 258 into I
$A5E    $672D   LD       V7, #2D         ; Load 45 into V7
$A60    $0C27   SYS      $C27            ; System call to C27
$A62    $7F9E   ADD      VF, #9E         ; Add 158 to VF
$A64    $8EAE   SHL      VE              ; VE <<= 1, VF = MSB
$A66    $A954   LD       I, $954         ; Load 954 into I
$A68    $161C   JP       $61C            ; Jump to 61C
$A6A    $CCB4   RND      VC, #B4         ; VC = random & B4
$A6C    $6671   LD       V6, #71         ; Load 113 into V6
$A6E    $7A42   ADD      VA, #42         ; Add 66 to VA
$A70    $489D   SNE      V8, #9D         ; Skip if V8 != 157
$A72    $15AA   JP       $5AA            ; Jump to 5AA
$A74    $C0E0   RND      V0, #E0         ; V0 = random & E0
$A76    $FE47   UNKNOWN  FE47            ; Unknown Fxxx instruction
$A78    $196F   JP       $96F            ; Jump to 96F
$A7A    $6965   LD       V9, #65         ; Load 101 into V9
$A7C    $0BBA   SYS      $BBA            ; System call to BBA
$A7E    $6A4B   LD       VA, #4B         ; Load 75 into VA
$A80    $B952   JP       V0, $952        ; Jump to V0 + 952
$A82    $D197   DRW      V1, V9, #7      ; Draw 7-byte sprite at V1, V9
$A84    $66E8   LD       V6, #E8         ; Load 232 into V6
$A86    $64B7   LD       V4, #B7         ; Load 183 into V4
$A88    $24B0   CALL     $4B0            ; Call subroutine at 4B0
$A8A    $47EA   SNE      V7, #EA         ; Skip if V7 != 234
$A8C    $20A2   CALL     $0A2            ; Call subroutine at 0A2
$A8E    $33D9   SE       V3, #D9         ; Skip if V3 == 217
$A90    $DB4A   DRW      VB, V4, #A      ; Draw 10-byte sprite at VB, V4
$A92    $F918   LD       ST, V9          ; Sound timer = V9
$A94    $616D   LD       V1, #6D         ; Load 109 into V1
$A96    $C961   RND      V9, #61         ; V9 = random & 61
$A98    $6705   LD       V7, #05         ; Load 5 into V7
$A9A    $E289   UNKNOWN  $E289           ; Unknown Exxx instruction
$A9C    $47FA   SNE      V7, #FA         ; Skip if V7 != 250
$A9E    $CD2D   RND      VD, #2D         ; VD = random & 2D
$AA0    $84E9   UNKNOWN  84E9            ; Unknown 8xxx instruction
$AA2    $4D4F   SNE      VD, #4F         ; Skip if VD != 79
$AA4    $2221   CALL     $221            ; Call subroutine at 221
$AA6    $7C26   ADD      VC, #26         ; Add 38 to VC
$AA8    $5C6E   UNKNOWN  $5C6E           ; Unknown 5xxx instruction
$AAA    $260C   CALL     $60C            ; Call subroutine at 60C
$AAC    $5DEE   UNKNOWN  $5DEE           ; Unknown 5xxx instruction
$AAE    $5296   UNKNOWN  $5296           ; Unknown 5xxx instruction
$AB0    $FF15   LD       DT, VF          ; Delay timer = VF
$AB2    $A468   LD       I, $468         ; Load 468 into I
$AB4    $7D8B   ADD      VD, #8B         ; Add 139 to VD
$AB6    $B9ED   JP       V0, $9ED        ; Jump to V0 + 9ED
$AB8    $30B9   SE       V0, #B9         ; Skip if V0 == 185
$ABA    $32E0   SE       V2, #E0         ; Skip if V2 == 224
$ABC    $4127   SNE      V1, #27         ; Skip if V1 != 39
$ABE    $09BC   SYS      $9BC            ; System call to 9BC
$AC0    $4419   SNE      V4, #19         ; Skip if V4 != 25
$AC2    $31A1   SE       V1, #A1         ; Skip if V1 == 161
$AC4    $128A   JP       $28A            ; Jump to 28A
$AC6    $BB05   JP       V0, $B05        ; Jump to V0 + B05
$AC8    $B4C6   JP       V0, $4C6        ; Jump to V0 + 4C6
$ACA    $ABA8   LD       I, $BA8         ; Load BA8 into I
$ACC    $0EC5   SYS      $EC5            ; System call to EC5
$ACE    $5945   UNKNOWN  $5945           ; Unknown 5xxx instruction
$AD0    $A7AD   LD       I, $7AD         ; Load 7AD into I
$AD2    $27C2   CALL     $7C2            ; Call subroutine at 7C2
$AD4    $209B   CALL     $09B            ; Call subroutine at 09B
$AD6    $6A9E   LD       VA, #9E         ; Load 158 into VA
$AD8    $65DA   LD       V5, #DA         ; Load 218 into V5
$ADA    $E7D7   UNKNOWN  $E7D7           ; Unknown Exxx instruction
$ADC    $1AB2   JP       $AB2            ; Jump to AB2
$ADE    $9923   UNKNOWN  $9923           ; Unknown 9xxx instruction
$AE0    $BA25   JP       V0, $A25        ; Jump to V0 + A25
$AE2    $7B43   ADD      VB, #43         ; Add 67 to VB
$AE4    $C4BE   RND      V4, #BE         ; V4 = random & BE
$AE6    $CB6D   RND      VB, #6D         ; VB = random & 6D
$AE8    $C1B2   RND      V1, #B2         ; V1 = random & B2
$AEA    $B922   JP       V0, $922        ; Jump to V0 + 922
$AEC    $C63C   RND      V6, #3C         ; V6 = random & 3C
$AEE    $479C   SNE      V7, #9C         ; Skip if V7 != 156
$AF0    $CEAD   RND      VE, #AD         ; VE = random & AD
$AF2    $4E49   SNE      VE, #49         ; Skip if VE != 73
$AF4    $8DD8   UNKNOWN  8DD8            ; Unknown 8xxx instruction
$AF6    $E76E   UNKNOWN  $E76E           ; Unknown Exxx instruction
$AF8    $0A02   SYS      $A02            ; System call to A02
$AFA    $2FCA   CALL     $FCA            ; Call subroutine at FCA
$AFC    $272E   CALL     $72E            ; Call subroutine at 72E
$AFE    $FAFE   UNKNOWN  FAFE            ; Unknown Fxxx instruction
$B00    $3604   SE       V6, #04         ; Skip if V6 == 4
$B02    $86C9   UNKNOWN  86C9            ; Unknown 8xxx instruction
$B04    $132E   JP       $32E            ; Jump to 32E
$B06    $AEB8   LD       I, $EB8         ; Load EB8 into I
$B08    $0B52   SYS      $B52            ; System call to B52
$B0A    $009A   SYS      $09A            ; System call to 09A
$B0C    $0686   SYS      $686            ; System call to 686
$B0E    $C233   RND      V2, #33         ; V2 = random & 33
$B10    $F2C5   UNKNOWN  F2C5            ; Unknown Fxxx instruction
$B12    $3AFF   SE       VA, #FF         ; Skip if VA == 255
$B14    $F775   UNKNOWN  F775            ; Unknown Fxxx instruction
$B16    $30AB   SE       V0, #AB         ; Skip if V0 == 171
$B18    $47EA   SNE      V7, #EA         ; Skip if V7 != 234
$B1A    $7731   ADD      V7, #31         ; Add 49 to V7
$B1C    $0AEC   SYS      $AEC            ; System call to AEC
$B1E    $E955   UNKNOWN  $E955           ; Unknown Exxx instruction
$B20    $C4A5   RND      V4, #A5         ; V4 = random & A5
$B22    $5A2D   UNKNOWN  $5A2D           ; Unknown 5xxx instruction
$B24    $A0DE   LD       I, $0DE         ; Load 0DE into I
$B26    $3E6C   SE       VE, #6C         ; Skip if VE == 108
$B28    $A785   LD       I, $785         ; Load 785 into I
$B2A    $8808   UNKNOWN  8808            ; Unknown 8xxx instruction
$B2C    $B741   JP       V0, $741        ; Jump to V0 + 741
$B2E    $5231   UNKNOWN  $5231           ; Unknown 5xxx instruction
$B30    $0755   SYS      $755            ; System call to 755
$B32    $8037   SUBN     V0, V3          ; V0 = V3 - V0, VF = !borrow
$B34    $F64F   UNKNOWN  F64F            ; Unknown Fxxx instruction
$B36    $11DB   JP       $1DB            ; Jump to 1DB
$B38    $ACD5   LD       I, $CD5         ; Load CD5 into I
$B3A    $6FA8   LD       VF, #A8         ; Load 168 into VF
$B3C    $331D   SE       V3, #1D         ; Skip if V3 == 29
$B3E    $C23C   RND      V2, #3C         ; V2 = random & 3C
$B40    $F235   UNKNOWN  F235            ; Unknown Fxxx instruction
$B42    $D145   DRW      V1, V4, #5      ; Draw 5-byte sprite at V1, V4
$B44    $92A5   UNKNOWN  $92A5           ; Unknown 9xxx instruction
$B46    $B000   JP       V0, $000        ; Jump to V0 + 000
$B48    $9754   UNKNOWN  $9754           ; Unknown 9xxx instruction
$B4A    $BA9B   JP       V0, $A9B        ; Jump to V0 + A9B
$B4C    $DE84   DRW      VE, V8, #4      ; Draw 4-byte sprite at VE, V8
$B4E    $DA17   DRW      VA, V1, #7      ; Draw 7-byte sprite at VA, V1
$B50    $A10D   LD       I, $10D         ; Load 10D into I
$B52    $F1AA   UNKNOWN  F1AA            ; Unknown Fxxx instruction
$B54    $1FE8   JP       $FE8            ; Jump to FE8
$B56    $EB50   UNKNOWN  $EB50           ; Unknown Exxx instruction
$B58    $2DC5   CALL     $DC5            ; Call subroutine at DC5
$B5A    $3C43   SE       VC, #43         ; Skip if VC == 67
$B5C    $BED4   JP       V0, $ED4        ; Jump to V0 + ED4
$B5E    $DDD1   DRW      VD, VD, #1      ; Draw 1-byte sprite at VD, VD
$B60    $E353   UNKNOWN  $E353           ; Unknown Exxx instruction
$B62    $E255   UNKNOWN  $E255           ; Unknown Exxx instruction
$B64    $010A   SYS      $10A            ; System call to 10A
$B66    $2DDF   CALL     $DDF            ; Call subroutine at DDF
$B68    $476D   SNE      V7, #6D         ; Skip if V7 != 109
$B6A    $46AD   SNE      V6, #AD         ; Skip if V6 != 173
$B6C    $A1B2   LD       I, $1B2         ; Load 1B2 into I
$B6E    $FFE6   UNKNOWN  FFE6            ; Unknown Fxxx instruction
$B70    $8CFF   UNKNOWN  8CFF            ; Unknown 8xxx instruction
$B72    $1D46   JP       $D46            ; Jump to D46
$B74    $D32B   DRW      V3, V2, #B      ; Draw 11-byte sprite at V3, V2
$B76    $BE3A   JP       V0, $E3A        ; Jump to V0 + E3A
$B78    $2E54   CALL     $E54            ; Call subroutine at E54
$B7A    $7919   ADD      V9, #19         ; Add 25 to V9
$B7C    $DB44   DRW      VB, V4, #4      ; Draw 4-byte sprite at VB, V4
$B7E    $2067   CALL     $067            ; Call subroutine at 067
$B80    $C0EE   RND      V0, #EE         ; V0 = random & EE
$B82    $B4CD   JP       V0, $4CD        ; Jump to V0 + 4CD
$B84    $47D4   SNE      V7, #D4         ; Skip if V7 != 212
$B86    $2C18   CALL     $C18            ; Call subroutine at C18
$B88    $89A9   UNKNOWN  89A9            ; Unknown 8xxx instruction
$B8A    $672E   LD       V7, #2E         ; Load 46 into V7
$B8C    $4D0A   SNE      VD, #0A         ; Skip if VD != 10
$B8E    $0C62   SYS      $C62            ; System call to C62
$B90    $8A36   SHR      VA              ; VA >>= 1, VF = LSB
$B92    $40A3   SNE      V0, #A3         ; Skip if V0 != 163
$B94    $B4CF   JP       V0, $4CF        ; Jump to V0 + 4CF
$B96    $B167   JP       V0, $167        ; Jump to V0 + 167
$B98    $70D9   ADD      V0, #D9         ; Add 217 to V0
$B9A    $D7E8   DRW      V7, VE, #8      ; Draw 8-byte sprite at V7, VE
$B9C    $9D52   UNKNOWN  $9D52           ; Unknown 9xxx instruction
$B9E    $EB07   UNKNOWN  $EB07           ; Unknown Exxx instruction
$BA0    $568D   UNKNOWN  $568D           ; Unknown 5xxx instruction
$BA2    $308C   SE       V0, #8C         ; Skip if V0 == 140
$BA4    $CEDD   RND      VE, #DD         ; VE = random & DD
$BA6    $122C   JP       $22C            ; Jump to 22C
$BA8    $E926   UNKNOWN  $E926           ; Unknown Exxx instruction
$BAA    $E5A5   UNKNOWN  $E5A5           ; Unknown Exxx instruction
$BAC    $C97E   RND      V9, #7E         ; V9 = random & 7E
$BAE    $8477   SUBN     V4, V7          ; V4 = V7 - V4, VF = !borrow
$BB0    $CDE8   RND      VD, #E8         ; VD = random & E8
$BB2    $A59C   LD       I, $59C         ; Load 59C into I
$BB4    $6062   LD       V0, #62         ; Load 98 into V0
$BB6    $4FA1   SNE      VF, #A1         ; Skip if VF != 161
$BB8    $958F   UNKNOWN  $958F           ; Unknown 9xxx instruction
$BBA    $5709   UNKNOWN  $5709           ; Unknown 5xxx instruction
$BBC    $D435   DRW      V4, V3, #5      ; Draw 5-byte sprite at V4, V3
$BBE    $62A6   LD       V2, #A6         ; Load 166 into V2
$BC0    $0791   SYS      $791            ; System call to 791
$BC2    $245C   CALL     $45C            ; Call subroutine at 45C
$BC4    $EC08   UNKNOWN  $EC08           ; Unknown Exxx instruction
$BC6    $F5C0   UNKNOWN  F5C0            ; Unknown Fxxx instruction
$BC8    $C494   RND      V4, #94         ; V4 = random & 94
$BCA    $8FF6   SHR      VF              ; VF >>= 1, VF = LSB
$BCC    $BA4F   JP       V0, $A4F        ; Jump to V0 + A4F
$BCE    $8E0A   UNKNOWN  8E0A            ; Unknown 8xxx instruction
$BD0    $DF82   DRW      VF, V8, #2      ; Draw 2-byte sprite at VF, V8
$BD2    $BF2E   JP       V0, $F2E        ; Jump to V0 + F2E
$BD4    $ECE9   UNKNOWN  $ECE9           ; Unknown Exxx instruction
$BD6    $F34E   UNKNOWN  F34E            ; Unknown Fxxx instruction
$BD8    $5514   UNKNOWN  $5514           ; Unknown 5xxx instruction
$BDA    $3497   SE       V4, #97         ; Skip if V4 == 151
$BDC    $1FC2   JP       $FC2            ; Jump to FC2
$BDE    $0743   SYS      $743            ; System call to 743
$BE0    $1BA1   JP       $BA1            ; Jump to BA1
$BE2    $F79B   UNKNOWN  F79B            ; Unknown Fxxx instruction
$BE4    $AA29   LD       I, $A29         ; Load A29 into I
$BE6    $DBE2   DRW      VB, VE, #2      ; Draw 2-byte sprite at VB, VE
$BE8    $9808   UNKNOWN  $9808           ; Unknown 9xxx instruction
$BEA    $6740   LD       V7, #40         ; Load 64 into V7
$BEC    $EF46   UNKNOWN  $EF46           ; Unknown Exxx instruction
$BEE    $DAAB   DRW      VA, VA, #B      ; Draw 11-byte sprite at VA, VA
$BF0    $13E2   JP       $3E2            ; Jump to 3E2
$BF2    $B11E   JP       V0, $11E        ; Jump to V0 + 11E
$BF4    $26BC   CALL     $6BC            ; Call subroutine at 6BC
$BF6    $4951   SNE      V9, #51         ; Skip if V9 != 81
$BF8    $9885   UNKNOWN  $9885           ; Unknown 9xxx instruction
$BFA    $6191   LD       V1, #91         ; Load 145 into V1
$BFC    $ABDE   LD       I, $BDE         ; Load BDE into I
$BFE    $0A69   SYS      $A69            ; System call to A69
$C00    $B522   JP       V0, $522        ; Jump to V0 + 522
$C02    $4414   SNE      V4, #14         ; Skip if V4 != 20
$C04    $D4BE   DRW      V4, VB, #E      ; Draw 14-byte sprite at V4, VB
$C06    $1DDD   JP       $DDD            ; Jump to DDD
$C08    $92E8   UNKNOWN  $92E8           ; Unknown 9xxx instruction
$C0A    $CC6A   RND      VC, #6A         ; VC = random & 6A
$C0C    $F143   UNKNOWN  F143            ; Unknown Fxxx instruction
$C0E    $7256   ADD      V2, #56         ; Add 86 to V2
$C10    $D33F   DRW      V3, V3, #F      ; Draw 15-byte sprite at V3, V3
$C12    $E18D   UNKNOWN  $E18D           ; Unknown Exxx instruction
$C14    $CF03   RND      VF, #03         ; VF = random & 03
$C16    $2568   CALL     $568            ; Call subroutine at 568
$C18    $EBD3   UNKNOWN  $EBD3           ; Unknown Exxx instruction
$C1A    $2342   CALL     $342            ; Call subroutine at 342
$C1C    $F568   UNKNOWN  F568            ; Unknown Fxxx instruction
$C1E    $896A   UNKNOWN  896A            ; Unknown 8xxx instruction
$C20    $B5B6   JP       V0, $5B6        ; Jump to V0 + 5B6
$C22    $7A75   ADD      VA, #75         ; Add 117 to VA
$C24    $C94E   RND      V9, #4E         ; V9 = random & 4E
$C26    $6FE9   LD       VF, #E9         ; Load 233 into VF
$C28    $4039   SNE      V0, #39         ; Skip if V0 != 57
$C2A    $9FE2   UNKNOWN  $9FE2           ; Unknown 9xxx instruction
$C2C    $E468   UNKNOWN  $E468           ; Unknown Exxx instruction
$C2E    $7FE2   ADD      VF, #E2         ; Add 226 to VF
$C30    $2F7B   CALL     $F7B            ; Call subroutine at F7B
$C32    $E5B1   UNKNOWN  $E5B1           ; Unknown Exxx instruction
$C34    $9349   UNKNOWN  $9349           ; Unknown 9xxx instruction
$C36    $07B8   SYS      $7B8            ; System call to 7B8
$C38    $2007   CALL     $007            ; Call subroutine at 007
$C3A    $F057   UNKNOWN  F057            ; Unknown Fxxx instruction
$C3C    $1841   JP       $841            ; Jump to 841
$C3E    $9FC3   UNKNOWN  $9FC3           ; Unknown 9xxx instruction
$C40    $AC6B   LD       I, $C6B         ; Load C6B into I
$C42    $512A   UNKNOWN  $512A           ; Unknown 5xxx instruction
$C44    $DA67   DRW      VA, V6, #7      ; Draw 7-byte sprite at VA, V6
$C46    $4325   SNE      V3, #25         ; Skip if V3 != 37
$C48    $1367   JP       $367            ; Jump to 367
$C4A    $7136   ADD      V1, #36         ; Add 54 to V1
$C4C    $1DD9   JP       $DD9            ; Jump to DD9
$C4E    $8FEB   UNKNOWN  8FEB            ; Unknown 8xxx instruction
$C50    $3B56   SE       VB, #56         ; Skip if VB == 86
$C52    $0803   SYS      $803            ; System call to 803
$C54    $6958   LD       V9, #58         ; Load 88 into V9
$C56    $90F6   UNKNOWN  $90F6           ; Unknown 9xxx instruction
$C58    $199F   JP       $99F            ; Jump to 99F
$C5A    $C1BC   RND      V1, #BC         ; V1 = random & BC
$C5C    $02D6   SYS      $2D6            ; System call to 2D6
$C5E    $505B   UNKNOWN  $505B           ; Unknown 5xxx instruction
$C60    $DACD   DRW      VA, VC, #D      ; Draw 13-byte sprite at VA, VC
$C62    $839A   UNKNOWN  839A            ; Unknown 8xxx instruction
$C64    $6727   LD       V7, #27         ; Load 39 into V7
$C66    $FBFE   UNKNOWN  FBFE            ; Unknown Fxxx instruction
$C68    $4218   SNE      V2, #18         ; Skip if V2 != 24
$C6A    $2D08   CALL     $D08            ; Call subroutine at D08
$C6C    $8147   SUBN     V1, V4          ; V1 = V4 - V1, VF = !borrow
$C6E    $5558   UNKNOWN  $5558           ; Unknown 5xxx instruction
$C70    $A275   LD       I, $275         ; Load 275 into I
$C72    $B515   JP       V0, $515        ; Jump to V0 + 515
$C74    $9EDA   UNKNOWN  $9EDA           ; Unknown 9xxx instruction
$C76    $394B   SE       V9, #4B         ; Skip if V9 == 75
$C78    $8AC0   LD       VA, VC          ; VA = VC
$C7A    $501A   UNKNOWN  $501A           ; Unknown 5xxx instruction
$C7C    $E8F6   UNKNOWN  $E8F6           ; Unknown Exxx instruction
$C7E    $A868   LD       I, $868         ; Load 868 into I
$C80    $D70D   DRW      V7, V0, #D      ; Draw 13-byte sprite at V7, V0
$C82    $6AF9   LD       VA, #F9         ; Load 249 into VA
$C84    $FBA5   UNKNOWN  FBA5            ; Unknown Fxxx instruction
$C86    $781A   ADD      V8, #1A         ; Add 26 to V8
$C88    $FA1B   UNKNOWN  FA1B            ; Unknown Fxxx instruction
$C8A    $813C   UNKNOWN  813C            ; Unknown 8xxx instruction
$C8C    $8D8B   UNKNOWN  8D8B            ; Unknown 8xxx instruction
$C8E    $2B3D   CALL     $B3D            ; Call subroutine at B3D
$C90    $4AEA   SNE      VA, #EA         ; Skip if VA != 234
$C92    $9094   UNKNOWN  $9094           ; Unknown 9xxx instruction
$C94    $23D2   CALL     $3D2            ; Call subroutine at 3D2
$C96    $D173   DRW      V1, V7, #3      ; Draw 3-byte sprite at V1, V7
$C98    $9D2D   UNKNOWN  $9D2D           ; Unknown 9xxx instruction
$C9A    $115C   JP       $15C            ; Jump to 15C
$C9C    $A9DC   LD       I, $9DC         ; Load 9DC into I
$C9E    $166B   JP       $66B            ; Jump to 66B
$CA0    $470F   SNE      V7, #0F         ; Skip if V7 != 15
$CA2    $16D8   JP       $6D8            ; Jump to 6D8
$CA4    $7414   ADD      V4, #14         ; Add 20 to V4
$CA6    $A4FE   LD       I, $4FE         ; Load 4FE into I
$CA8    $9EAF   UNKNOWN  $9EAF           ; Unknown 9xxx instruction
$CAA    $2429   CALL     $429            ; Call subroutine at 429
$CAC    $12DE   JP       $2DE            ; Jump to 2DE
$CAE    $8703   XOR      V7, V0          ; V7 ^= V0
$CB0    $4962   SNE      V9, #62         ; Skip if V9 != 98
$CB2    $1BEF   JP       $BEF            ; Jump to BEF
$CB4    $18F4   JP       $8F4            ; Jump to 8F4
$CB6    $472B   SNE      V7, #2B         ; Skip if V7 != 43
$CB8    $BD2E   JP       V0, $D2E        ; Jump to V0 + D2E
$CBA    $6520   LD       V5, #20         ; Load 32 into V5
$CBC    $CFAC   RND      VF, #AC         ; VF = random & AC
$CBE    $4981   SNE      V9, #81         ; Skip if V9 != 129
$CC0    $E674   UNKNOWN  $E674           ; Unknown Exxx instruction
$CC2    $FCF7   UNKNOWN  FCF7            ; Unknown Fxxx instruction
$CC4    $20C1   CALL     $0C1            ; Call subroutine at 0C1
$CC6    $8F88   UNKNOWN  8F88            ; Unknown 8xxx instruction
$CC8    $24E9   CALL     $4E9            ; Call subroutine at 4E9
$CCA    $F6C0   UNKNOWN  F6C0            ; Unknown Fxxx instruction
$CCC    $EB0B   UNKNOWN  $EB0B           ; Unknown Exxx instruction
$CCE    $3C4C   SE       VC, #4C         ; Skip if VC == 76
$CD0    $4926   SNE      V9, #26         ; Skip if V9 != 38
$CD2    $712C   ADD      V1, #2C         ; Add 44 to V1
$CD4    $A61E   LD       I, $61E         ; Load 61E into I
$CD6    $3CC6   SE       VC, #C6         ; Skip if VC == 198
$CD8    $77D6   ADD      V7, #D6         ; Add 214 to V7
$CDA    $1999   JP       $999            ; Jump to 999
$CDC    $41C5   SNE      V1, #C5         ; Skip if V1 != 197
$CDE    $E5C0   UNKNOWN  $E5C0           ; Unknown Exxx instruction
$CE0    $E2B3   UNKNOWN  $E2B3           ; Unknown Exxx instruction
$CE2    $4040   SNE      V0, #40         ; Skip if V0 != 64
$CE4    $A450   LD       I, $450         ; Load 450 into I
$CE6    $56C9   UNKNOWN  $56C9           ; Unknown 5xxx instruction
$CE8    $8E2E   SHL      VE              ; VE <<= 1, VF = MSB
$CEA    $8591   OR       V5, V9          ; V5 |= V9
$CEC    $78B6   ADD      V8, #B6         ; Add 182 to V8
$CEE    $C5B3   RND      V5, #B3         ; V5 = random & B3
$CF0    $A32E   LD       I, $32E         ; Load 32E into I
$CF2    $B1ED   JP       V0, $1ED        ; Jump to V0 + 1ED
$CF4    $F95B   UNKNOWN  F95B            ; Unknown Fxxx instruction
$CF6    $07CE   SYS      $7CE            ; System call to 7CE
$CF8    $D4FA   DRW      V4, VF, #A      ; Draw 10-byte sprite at V4, VF
$CFA    $FAA2   UNKNOWN  FAA2            ; Unknown Fxxx instruction
$CFC    $8517   SUBN     V5, V1          ; V5 = V1 - V5, VF = !borrow
$CFE    $57E2   UNKNOWN  $57E2           ; Unknown 5xxx instruction
$D00    $AE27   LD       I, $E27         ; Load E27 into I
$D02    $9686   UNKNOWN  $9686           ; Unknown 9xxx instruction
$D04    $E7B3   UNKNOWN  $E7B3           ; Unknown Exxx instruction
$D06    $1806   JP       $806            ; Jump to 806
$D08    $9C41   UNKNOWN  $9C41           ; Unknown 9xxx instruction
$D0A    $0C18   SYS      $C18            ; System call to C18
$D0C    $ABA3   LD       I, $BA3         ; Load BA3 into I
$D0E    $399F   SE       V9, #9F         ; Skip if V9 == 159
$D10    $47DC   SNE      V7, #DC         ; Skip if V7 != 220
$D12    $DAAD   DRW      VA, VA, #D      ; Draw 13-byte sprite at VA, VA
$D14    $9C0A   UNKNOWN  $9C0A           ; Unknown 9xxx instruction
$D16    $6137   LD       V1, #37         ; Load 55 into V1
$D18    $E30C   UNKNOWN  $E30C           ; Unknown Exxx instruction
$D1A    $3F43   SE       VF, #43         ; Skip if VF == 67
$D1C    $E571   UNKNOWN  $E571           ; Unknown Exxx instruction
$D1E    $CBA4   RND      VB, #A4         ; VB = random & A4
$D20    $B5FD   JP       V0, $5FD        ; Jump to V0 + 5FD
$D22    $DBE1   DRW      VB, VE, #1      ; Draw 1-byte sprite at VB, VE
$D24    $05B1   SYS      $5B1            ; System call to 5B1
$D26    $14C7   JP       $4C7            ; Jump to 4C7
$D28    $F058   UNKNOWN  F058            ; Unknown Fxxx instruction
$D2A    $6A6B   LD       VA, #6B         ; Load 107 into VA
$D2C    $64BD   LD       V4, #BD         ; Load 189 into V4
$D2E    $D3A5   DRW      V3, VA, #5      ; Draw 5-byte sprite at V3, VA
$D30    $D162   DRW      V1, V6, #2      ; Draw 2-byte sprite at V1, V6
$D32    $CC22   RND      VC, #22         ; VC = random & 22
$D34    $94AF   UNKNOWN  $94AF           ; Unknown 9xxx instruction
$D36    $98B6   UNKNOWN  $98B6           ; Unknown 9xxx instruction
$D38    $EAFC   UNKNOWN  $EAFC           ; Unknown Exxx instruction
$D3A    $F77D   UNKNOWN  F77D            ; Unknown Fxxx instruction
$D3C    $1DD3   JP       $DD3            ; Jump to DD3
$D3E    $5789   UNKNOWN  $5789           ; Unknown 5xxx instruction
$D40    $2D30   CALL     $D30            ; Call subroutine at D30
$D42    $2302   CALL     $302            ; Call subroutine at 302
$D44    $279C   CALL     $79C            ; Call subroutine at 79C
$D46    $915E   UNKNOWN  $915E           ; Unknown 9xxx instruction
$D48    $0169   SYS      $169            ; System call to 169
$D4A    $24DF   CALL     $4DF            ; Call subroutine at 4DF
$D4C    $8C0F   UNKNOWN  8C0F            ; Unknown 8xxx instruction
$D4E    $901A   UNKNOWN  $901A           ; Unknown 9xxx instruction
$D50    $672D   LD       V7, #2D         ; Load 45 into V7
$D52    $26BD   CALL     $6BD            ; Call subroutine at 6BD
$D54    $1F41   JP       $F41            ; Jump to F41
$D56    $003A   SYS      $03A            ; System call to 03A
$D58    $6B47   LD       VB, #47         ; Load 71 into VB
$D5A    $6133   LD       V1, #33         ; Load 51 into V1
$D5C    $084B   SYS      $84B            ; System call to 84B
$D5E    $39F9   SE       V9, #F9         ; Skip if V9 == 249
$D60    $FCBF   UNKNOWN  FCBF            ; Unknown Fxxx instruction
$D62    $67D8   LD       V7, #D8         ; Load 216 into V7
$D64    $A537   LD       I, $537         ; Load 537 into I
$D66    $70FC   ADD      V0, #FC         ; Add 252 to V0
$D68    $93DF   UNKNOWN  $93DF           ; Unknown 9xxx instruction
$D6A    $FF35   UNKNOWN  FF35            ; Unknown Fxxx instruction
$D6C    $12B6   JP       $2B6            ; Jump to 2B6
$D6E    $2A6D   CALL     $A6D            ; Call subroutine at A6D
$D70    $76A9   ADD      V6, #A9         ; Add 169 to V6
$D72    $8815   SUB      V8, V1          ; V8 -= V1, VF = !borrow
$D74    $3714   SE       V7, #14         ; Skip if V7 == 20
$D76    $4C99   SNE      VC, #99         ; Skip if VC != 153
$D78    $83C4   ADD      V3, VC          ; V3 += VC, VF = carry
$D7A    $B7BD   JP       V0, $7BD        ; Jump to V0 + 7BD
$D7C    $51A8   UNKNOWN  $51A8           ; Unknown 5xxx instruction
$D7E    $D3F7   DRW      V3, VF, #7      ; Draw 7-byte sprite at V3, VF
$D80    $6C4A   LD       VC, #4A         ; Load 74 into VC
$D82    $D37D   DRW      V3, V7, #D      ; Draw 13-byte sprite at V3, V7
$D84    $ECD9   UNKNOWN  $ECD9           ; Unknown Exxx instruction
$D86    $93DC   UNKNOWN  $93DC           ; Unknown 9xxx instruction
$D88    $DBAE   DRW      VB, VA, #E      ; Draw 14-byte sprite at VB, VA
$D8A    $2CAD   CALL     $CAD            ; Call subroutine at CAD
$D8C    $1C04   JP       $C04            ; Jump to C04
$D8E    $98FE   UNKNOWN  $98FE           ; Unknown 9xxx instruction
$D90    $6F0B   LD       VF, #0B         ; Load 11 into VF
$D92    $A503   LD       I, $503         ; Load 503 into I
$D94    $8E42   AND      VE, V4          ; VE &= V4
$D96    $2996   CALL     $996            ; Call subroutine at 996
$D98    $5A37   UNKNOWN  $5A37           ; Unknown 5xxx instruction
$D9A    $7DCB   ADD      VD, #CB         ; Add 203 to VD
$D9C    $ECBE   UNKNOWN  $ECBE           ; Unknown Exxx instruction
$D9E    $1EB6   JP       $EB6            ; Jump to EB6
$DA0    $0CDA   SYS      $CDA            ; System call to CDA
$DA2    $49FE   SNE      V9, #FE         ; Skip if V9 != 254
$DA4    $432A   SNE      V3, #2A         ; Skip if V3 != 42
$DA6    $FF30   UNKNOWN  FF30            ; Unknown Fxxx instruction
$DA8    $D33A   DRW      V3, V3, #A      ; Draw 10-byte sprite at V3, V3
$DAA    $EC30   UNKNOWN  $EC30           ; Unknown Exxx instruction
$DAC    $B2D2   JP       V0, $2D2        ; Jump to V0 + 2D2
$DAE    $0876   SYS      $876            ; System call to 876
$DB0    $A6B6   LD       I, $6B6         ; Load 6B6 into I
$DB2    $6130   LD       V1, #30         ; Load 48 into V1
$DB4    $C5DE   RND      V5, #DE         ; V5 = random & DE
$DB6    $4DAB   SNE      VD, #AB         ; Skip if VD != 171
$DB8    $4CE3   SNE      VC, #E3         ; Skip if VC != 227
$DBA    $DEAF   DRW      VE, VA, #F      ; Draw 15-byte sprite at VE, VA
$DBC    $CEDD   RND      VE, #DD         ; VE = random & DD
$DBE    $1214   JP       $214            ; Jump to 214
$DC0    $A8DD   LD       I, $8DD         ; Load 8DD into I
$DC2    $78C6   ADD      V8, #C6         ; Add 198 to V8
$DC4    $D712   DRW      V7, V1, #2      ; Draw 2-byte sprite at V7, V1
$DC6    $E173   UNKNOWN  $E173           ; Unknown Exxx instruction
$DC8    $C142   RND      V1, #42         ; V1 = random & 42
$DCA    $5925   UNKNOWN  $5925           ; Unknown 5xxx instruction
$DCC    $1594   JP       $594            ; Jump to 594
$DCE    $16E7   JP       $6E7            ; Jump to 6E7
$DD0    $0B59   SYS      $B59            ; System call to B59
$DD2    $974A   UNKNOWN  $974A           ; Unknown 9xxx instruction
$DD4    $A127   LD       I, $127         ; Load 127 into I
$DD6    $8323   XOR      V3, V2          ; V3 ^= V2
$DD8    $E6E9   UNKNOWN  $E6E9           ; Unknown Exxx instruction
$DDA    $8977   SUBN     V9, V7          ; V9 = V7 - V9, VF = !borrow
$DDC    $180F   JP       $80F            ; Jump to 80F
$DDE    $CCF4   RND      VC, #F4         ; VC = random & F4
$DE0    $068C   SYS      $68C            ; System call to 68C
$DE2    $1270   JP       $270            ; Jump to 270
$DE4    $F37E   UNKNOWN  F37E            ; Unknown Fxxx instruction
$DE6    $4AD7   SNE      VA, #D7         ; Skip if VA != 215
$DE8    $284E   CALL     $84E            ; Call subroutine at 84E
$DEA    $4334   SNE      V3, #34         ; Skip if V3 != 52
$DEC    $E3A8   UNKNOWN  $E3A8           ; Unknown Exxx instruction
$DEE    $4108   SNE      V1, #08         ; Skip if V1 != 8
$DF0    $3D8D   SE       VD, #8D         ; Skip if VD == 141
$DF2    $C790   RND      V7, #90         ; V7 = random & 90
$DF4    $BAE7   JP       V0, $AE7        ; Jump to V0 + AE7
$DF6    $2E46   CALL     $E46            ; Call subroutine at E46
$DF8    $A396   LD       I, $396         ; Load 396 into I
$DFA    $1AF0   JP       $AF0            ; Jump to AF0
$DFC    $9161   UNKNOWN  $9161           ; Unknown 9xxx instruction
$DFE    $3D6C   SE       VD, #6C         ; Skip if VD == 108
$E00    $1ECC   JP       $ECC            ; Jump to ECC
$E02    $BD7F   JP       V0, $D7F        ; Jump to V0 + D7F
$E04    $1D91   JP       $D91            ; Jump to D91
$E06    $79E8   ADD      V9, #E8         ; Add 232 to V9
$E08    $2358   CALL     $358            ; Call subroutine at 358
$E0A    $FC61   UNKNOWN  FC61            ; Unknown Fxxx instruction
$E0C    $C904   RND      V9, #04         ; V9 = random & 04
$E0E    $0B7B   SYS      $B7B            ; System call to B7B
$E10    $7280   ADD      V2, #80         ; Add 128 to V2
$E12    $AB8B   LD       I, $B8B         ; Load B8B into I
$E14    $5218   UNKNOWN  $5218           ; Unknown 5xxx instruction
$E16    $FC3A   UNKNOWN  FC3A            ; Unknown Fxxx instruction
$E18    $206B   CALL     $06B            ; Call subroutine at 06B
$E1A    $47DC   SNE      V7, #DC         ; Skip if V7 != 220
$E1C    $FF16   UNKNOWN  FF16            ; Unknown Fxxx instruction
$E1E    $180D   JP       $80D            ; Jump to 80D
$E20    $E586   UNKNOWN  $E586           ; Unknown Exxx instruction
$E22    $3D1F   SE       VD, #1F         ; Skip if VD == 31
$E24    $3459   SE       V4, #59         ; Skip if V4 == 89
$E26    $96B4   UNKNOWN  $96B4           ; Unknown 9xxx instruction
$E28    $2DAA   CALL     $DAA            ; Call subroutine at DAA
$E2A    $79AE   ADD      V9, #AE         ; Add 174 to V9
$E2C    $DA1F   DRW      VA, V1, #F      ; Draw 15-byte sprite at VA, V1
$E2E    $A48B   LD       I, $48B         ; Load 48B into I
$E30    $AC9E   LD       I, $C9E         ; Load C9E into I
$E32    $8842   AND      V8, V4          ; V8 &= V4
$E34    $FE46   UNKNOWN  FE46            ; Unknown Fxxx instruction
$E36    $01A8   SYS      $1A8            ; System call to 1A8
$E38    $D9D4   DRW      V9, VD, #4      ; Draw 4-byte sprite at V9, VD
$E3A    $36D5   SE       V6, #D5         ; Skip if V6 == 213
$E3C    $2AC0   CALL     $AC0            ; Call subroutine at AC0
$E3E    $EB9F   UNKNOWN  $EB9F           ; Unknown Exxx instruction
$E40    $384A   SE       V8, #4A         ; Skip if V8 == 74
$E42    $61E1   LD       V1, #E1         ; Load 225 into V1
$E44    $2E81   CALL     $E81            ; Call subroutine at E81
$E46    $B438   JP       V0, $438        ; Jump to V0 + 438
$E48    $C9C4   RND      V9, #C4         ; V9 = random & C4
$E4A    $C05F   RND      V0, #5F         ; V0 = random & 5F
$E4C    $6985   LD       V9, #85         ; Load 133 into V9
$E4E    $B899   JP       V0, $899        ; Jump to V0 + 899
$E50    $81B4   ADD      V1, VB          ; V1 += VB, VF = carry
$E52    $C05A   RND      V0, #5A         ; V0 = random & 5A
$E54    $A0E1   LD       I, $0E1         ; Load 0E1 into I
$E56    $924F   UNKNOWN  $924F           ; Unknown 9xxx instruction
$E58    $6CCA   LD       VC, #CA         ; Load 202 into VC
$E5A    $C8C6   RND      V8, #C6         ; V8 = random & C6
$E5C    $4C81   SNE      VC, #81         ; Skip if VC != 129
$E5E    $849E   SHL      V4              ; V4 <<= 1, VF = MSB
$E60    $14CF   JP       $4CF            ; Jump to 4CF
$E62    $D1BE   DRW      V1, VB, #E      ; Draw 14-byte sprite at V1, VB
$E64    $2D1C   CALL     $D1C            ; Call subroutine at D1C
$E66    $CED4   RND      VE, #D4         ; VE = random & D4
$E68    $F4A5   UNKNOWN  F4A5            ; Unknown Fxxx instruction
$E6A    $8B05   SUB      VB, V0          ; VB -= V0, VF = !borrow
$E6C    $1CAC   JP       $CAC            ; Jump to CAC
$E6E    $D335   DRW      V3, V3, #5      ; Draw 5-byte sprite at V3, V3
$E70    $3AEF   SE       VA, #EF         ; Skip if VA == 239
$E72    $ACA1   LD       I, $CA1         ; Load CA1 into I
$E74    $E555   UNKNOWN  $E555           ; Unknown Exxx instruction
$E76    $ADFF   LD       I, $DFF         ; Load DFF into I
$E78    $1541   JP       $541            ; Jump to 541
$E7A    $AF9C   LD       I, $F9C         ; Load F9C into I
$E7C    $3902   SE       V9, #02         ; Skip if V9 == 2
$E7E    $36D1   SE       V6, #D1         ; Skip if V6 == 209
$E80    $3939   SE       V9, #39         ; Skip if V9 == 57
$E82    $A55C   LD       I, $55C         ; Load 55C into I
$E84    $196E   JP       $96E            ; Jump to 96E
$E86    $5867   UNKNOWN  $5867           ; Unknown 5xxx instruction
$E88    $1EEF   JP       $EEF            ; Jump to EEF
$E8A    $BD29   JP       V0, $D29        ; Jump to V0 + D29
$E8C    $03C9   SYS      $3C9            ; System call to 3C9
$E8E    $C897   RND      V8, #97         ; V8 = random & 97
$E90    $7FA4   ADD      VF, #A4         ; Add 164 to VF
$E92    $FADE   UNKNOWN  FADE            ; Unknown Fxxx instruction
$E94    $49C9   SNE      V9, #C9         ; Skip if V9 != 201
$E96    $283F   CALL     $83F            ; Call subroutine at 83F
$E98    $477A   SNE      V7, #7A         ; Skip if V7 != 122
$E9A    $FC97   UNKNOWN  FC97            ; Unknown Fxxx instruction
$E9C    $58B4   UNKNOWN  $58B4           ; Unknown 5xxx instruction
$E9E    $048B   SYS      $48B            ; System call to 48B
$EA0    $B1C7   JP       V0, $1C7        ; Jump to V0 + 1C7
$EA2    $1D9B   JP       $D9B            ; Jump to D9B
$EA4    $D0AF   DRW      V0, VA, #F      ; Draw 15-byte sprite at V0, VA
$EA6    $65F2   LD       V5, #F2         ; Load 242 into V5
$EA8    $F032   UNKNOWN  F032            ; Unknown Fxxx instruction
$EAA    $0535   SYS      $535            ; System call to 535
$EAC    $6BF1   LD       VB, #F1         ; Load 241 into VB
$EAE    $55D3   UNKNOWN  $55D3           ; Unknown 5xxx instruction
$EB0    $3631   SE       V6, #31         ; Skip if V6 == 49
$EB2    $03EE   SYS      $3EE            ; System call to 3EE
$EB4    $F311   UNKNOWN  F311            ; Unknown Fxxx instruction
$EB6    $7266   ADD      V2, #66         ; Add 102 to V2
$EB8    $A8FF   LD       I, $8FF         ; Load 8FF into I
$EBA    $0FE7   SYS      $FE7            ; System call to FE7
$EBC    $66EF   LD       V6, #EF         ; Load 239 into V6
$EBE    $BF77   JP       V0, $F77        ; Jump to V0 + F77
$EC0    $54BC   UNKNOWN  $54BC           ; Unknown 5xxx instruction
$EC2    $7CA7   ADD      VC, #A7         ; Add 167 to VC
$EC4    $3572   SE       V5, #72         ; Skip if V5 == 114
$EC6    $85CA   UNKNOWN  85CA            ; Unknown 8xxx instruction
$EC8    $8292   AND      V2, V9          ; V2 &= V9
$ECA    $27BC   CALL     $7BC            ; Call subroutine at 7BC
$ECC    $E098   UNKNOWN  $E098           ; Unknown Exxx instruction
$ECE    $5C26   UNKNOWN  $5C26           ; Unknown 5xxx instruction
$ED0    $E935   UNKNOWN  $E935           ; Unknown Exxx instruction
$ED2    $6DC1   LD       VD, #C1         ; Load 193 into VD
$ED4    $5548   UNKNOWN  $5548           ; Unknown 5xxx instruction
$ED6    $0FCE   SYS      $FCE            ; System call to FCE
$ED8    $3E1F   SE       VE, #1F         ; Skip if VE == 31
$EDA    $8A07   SUBN     VA, V0          ; VA = V0 - VA, VF = !borrow
$EDC    $B8BD   JP       V0, $8BD        ; Jump to V0 + 8BD
$EDE    $F29E   UNKNOWN  F29E            ; Unknown Fxxx instruction
$EE0    $472F   SNE      V7, #2F         ; Skip if V7 != 47
$EE2    $F1CE   UNKNOWN  F1CE            ; Unknown Fxxx instruction
$EE4    $09A2   SYS      $9A2            ; System call to 9A2
$EE6    $7498   ADD      V4, #98         ; Add 152 to V4
$EE8    $A8BC   LD       I, $8BC         ; Load 8BC into I
$EEA    $C093   RND      V0, #93         ; V0 = random & 93
$EEC    $A5C1   LD       I, $5C1         ; Load 5C1 into I
$EEE    $950F   UNKNOWN  $950F           ; Unknown 9xxx instruction
$EF0    $3AD4   SE       VA, #D4         ; Skip if VA == 212
$EF2    $B76D   JP       V0, $76D        ; Jump to V0 + 76D
$EF4    $AA9E   LD       I, $A9E         ; Load A9E into I
$EF6    $88FD   UNKNOWN  88FD            ; Unknown 8xxx instruction
$EF8    $FFB4   UNKNOWN  FFB4            ; Unknown Fxxx instruction
$EFA    $C18B   RND      V1, #8B         ; V1 = random & 8B
$EFC    $1440   JP       $440            ; Jump to 440
$EFE    $CAB8   RND      VA, #B8         ; VA = random & B8
$F00    $5CBF   UNKNOWN  $5CBF           ; Unknown 5xxx instruction
$F02    $1934   JP       $934            ; Jump to 934
$F04    $2F4D   CALL     $F4D            ; Call subroutine at F4D
$F06    $24F8   CALL     $4F8            ; Call subroutine at 4F8
$F08    $7A56   ADD      VA, #56         ; Add 86 to VA
$F0A    $1A4F   JP       $A4F            ; Jump to A4F
$F0C    $1D0D   JP       $D0D            ; Jump to D0D
$F0E    $4352   SNE      V3, #52         ; Skip if V3 != 82
$F10    $6C4B   LD       VC, #4B         ; Load 75 into VC
$F12    $20FD   CALL     $0FD            ; Call subroutine at 0FD
$F14    $3610   SE       V6, #10         ; Skip if V6 == 16
$F16    $B1E3   JP       V0, $1E3        ; Jump to V0 + 1E3
$F18    $FA27   UNKNOWN  FA27            ; Unknown Fxxx instruction
$F1A    $6E2C   LD       VE, #2C         ; Load 44 into VE
$F1C    $3E30   SE       VE, #30         ; Skip if VE == 48
$F1E    $F3A7   UNKNOWN  F3A7            ; Unknown Fxxx instruction
$F20    $D602   DRW      V6, V0, #2      ; Draw 2-byte sprite at V6, V0
$F22    $9D4F   UNKNOWN  $9D4F           ; Unknown 9xxx instruction
$F24    $93D6   UNKNOWN  $93D6           ; Unknown 9xxx instruction
$F26    $DF27   DRW      VF, V2, #7      ; Draw 7-byte sprite at VF, V2
$F28    $3FF5   SE       VF, #F5         ; Skip if VF == 245
$F2A    $C0BE   RND      V0, #BE         ; V0 = random & BE
$F2C    $6815   LD       V8, #15         ; Load 21 into V8
$F2E    $CC97   RND      VC, #97         ; VC = random & 97
$F30    $83D8   UNKNOWN  83D8            ; Unknown 8xxx instruction
$F32    $BCD9   JP       V0, $CD9        ; Jump to V0 + CD9
$F34    $F07F   UNKNOWN  F07F            ; Unknown Fxxx instruction
$F36    $9797   UNKNOWN  $9797           ; Unknown 9xxx instruction
$F38    $77D9   ADD      V7, #D9         ; Add 217 to V7
$F3A    $5033   UNKNOWN  $5033           ; Unknown 5xxx instruction
$F3C    $1F9D   JP       $F9D            ; Jump to F9D
$F3E    $A5FE   LD       I, $5FE         ; Load 5FE into I
$F40    $B0FD   JP       V0, $0FD        ; Jump to V0 + 0FD
$F42    $CC86   RND      VC, #86         ; VC = random & 86
$F44    $4845   SNE      V8, #45         ; Skip if V8 != 69
$F46    $927E   UNKNOWN  $927E           ; Unknown 9xxx instruction
$F48    $6970   LD       V9, #70         ; Load 112 into V9
$F4A    $420D   SNE      V2, #0D         ; Skip if V2 != 13
$F4C    $4C22   SNE      VC, #22         ; Skip if VC != 34
$F4E    $0942   SYS      $942            ; System call to 942
$F50    $88E8   UNKNOWN  88E8            ; Unknown 8xxx instruction
$F52    $A442   LD       I, $442         ; Load 442 into I
$F54    $4E64   SNE      VE, #64         ; Skip if VE != 100
$F56    $3535   SE       V5, #35         ; Skip if V5 == 53
$F58    $B8DF   JP       V0, $8DF        ; Jump to V0 + 8DF
$F5A    $ED84   UNKNOWN  $ED84           ; Unknown Exxx instruction
$F5C    $9D8A   UNKNOWN  $9D8A           ; Unknown 9xxx instruction
$F5E    $3A63   SE       VA, #63         ; Skip if VA == 99
$F60    $7CC8   ADD      VC, #C8         ; Add 200 to VC
$F62    $484C   SNE      V8, #4C         ; Skip if V8 != 76
$F64    $F7B1   UNKNOWN  F7B1            ; Unknown Fxxx instruction
$F66    $4A47   SNE      VA, #47         ; Skip if VA != 71
$F68    $B4AC   JP       V0, $4AC        ; Jump to V0 + 4AC
$F6A    $E811   UNKNOWN  $E811           ; Unknown Exxx instruction
$F6C    $2918   CALL     $918            ; Call subroutine at 918
$F6E    $4AB2   SNE      VA, #B2         ; Skip if VA != 178
$F70    $6C13   LD       VC, #13         ; Load 19 into VC
$F72    $FCC8   UNKNOWN  FCC8            ; Unknown Fxxx instruction
$F74    $FFAD   UNKNOWN  FFAD            ; Unknown Fxxx instruction
$F76    $25D5   CALL     $5D5            ; Call subroutine at 5D5
$F78    $CD56   RND      VD, #56         ; VD = random & 56
$F7A    $6E1D   LD       VE, #1D         ; Load 29 into VE
$F7C    $0E6F   SYS      $E6F            ; System call to E6F
$F7E    $7D25   ADD      VD, #25         ; Add 37 to VD
$F80    $A27A   LD       I, $27A         ; Load 27A into I
$F82    $902F   UNKNOWN  $902F           ; Unknown 9xxx instruction
$F84    $87A9   UNKNOWN  87A9            ; Unknown 8xxx instruction
$F86    $CCD0   RND      VC, #D0         ; VC = random & D0
$F88    $F05C   UNKNOWN  F05C            ; Unknown Fxxx instruction
$F8A    $C128   RND      V1, #28         ; V1 = random & 28
$F8C    $DBCE   DRW      VB, VC, #E      ; Draw 14-byte sprite at VB, VC
$F8E    $6083   LD       V0, #83         ; Load 131 into V0
$F90    $9F11   UNKNOWN  $9F11           ; Unknown 9xxx instruction
$F92    $4DC5   SNE      VD, #C5         ; Skip if VD != 197
$F94    $E27F   UNKNOWN  $E27F           ; Unknown Exxx instruction
$F96    $54F9   UNKNOWN  $54F9           ; Unknown 5xxx instruction
$F98    $F90B   UNKNOWN  F90B            ; Unknown Fxxx instruction
$F9A    $73B0   ADD      V3, #B0         ; Add 176 to V3
$F9C    $420A   SNE      V2, #0A         ; Skip if V2 != 10
$F9E    $827B   UNKNOWN  827B            ; Unknown 8xxx instruction
$FA0    $514C   UNKNOWN  $514C           ; Unknown 5xxx instruction
$FA2    $7B8D   ADD      VB, #8D         ; Add 141 to VB
$FA4    $CF87   RND      VF, #87         ; VF = random & 87
$FA6    $7796   ADD      V7, #96         ; Add 150 to V7
$FA8    $403E   SNE      V0, #3E         ; Skip if V0 != 62
$FAA    $B882   JP       V0, $882        ; Jump to V0 + 882
$FAC    $8A5A   UNKNOWN  8A5A            ; Unknown 8xxx instruction
$FAE    $AF41   LD       I, $F41         ; Load F41 into I
$FB0    $F3CD   UNKNOWN  F3CD            ; Unknown Fxxx instruction
$FB2    $EA3D   UNKNOWN  $EA3D           ; Unknown Exxx instruction
$FB4    $C775   RND      V7, #75         ; V7 = random & 75
$FB6    $F8AA   UNKNOWN  F8AA            ; Unknown Fxxx instruction
$FB8    $D89C   DRW      V8, V9, #C      ; Draw 12-byte sprite at V8, V9
$FBA    $92F8   UNKNOWN  $92F8           ; Unknown 9xxx instruction
$FBC    $1661   JP       $661            ; Jump to 661
$FBE    $3115   SE       V1, #15         ; Skip if V1 == 21
$FC0    $CFDD   RND      VF, #DD         ; VF = random & DD
$FC2    $9F37   UNKNOWN  $9F37           ; Unknown 9xxx instruction
$FC4    $18A9   JP       $8A9            ; Jump to 8A9
$FC6    $CCC8   RND      VC, #C8         ; VC = random & C8
$FC8    $A53E   LD       I, $53E         ; Load 53E into I
$FCA    $5C6E   UNKNOWN  $5C6E           ; Unknown 5xxx instruction
$FCC    $AEEA   LD       I, $EEA         ; Load EEA into I
$FCE    $5F14   UNKNOWN  $5F14           ; Unknown 5xxx instruction
$FD0    $3F33   SE       VF, #33         ; Skip if VF == 51
$FD2    $D5E3   DRW      V5, VE, #3      ; Draw 3-byte sprite at V5, VE
$FD4    $51E1   UNKNOWN  $51E1           ; Unknown 5xxx instruction
$FD6    $1520   JP       $520            ; Jump to 520
$FD8    $50FA   UNKNOWN  $50FA           ; Unknown 5xxx instruction
$FDA    $E3C1   UNKNOWN  $E3C1           ; Unknown Exxx instruction
$FDC    $26F5   CALL     $6F5            ; Call subroutine at 6F5
$FDE    $75D7   ADD      V5, #D7         ; Add 215 to V5
$FE0    $02DA   SYS      $2DA            ; System call to 2DA
$FE2    $A228   LD       I, $228         ; Load 228 into I
$FE4    $9534   UNKNOWN  $9534           ; Unknown 9xxx instruction
$FE6    $739A   ADD      V3, #9A         ; Add 154 to V3
$FE8    $808B   UNKNOWN  808B            ; Unknown 8xxx instruction
$FEA    $D830   DRW      V8, V3, #0      ; Draw 0-byte sprite at V8, V3
$FEC    $CD67   RND      VD, #67         ; VD = random & 67
$FEE    $3CDD   SE       VC, #DD         ; Skip if VC == 221
$FF0    $C2A6   RND      V2, #A6         ; V2 = random & A6
$FF2    $F4C2   UNKNOWN  F4C2            ; Unknown Fxxx instruction
$FF4    $8BD3   XOR      VB, VD          ; VB ^= VD
$FF6    $E731   UNKNOWN  $E731           ; Unknown Exxx instruction
$FF8    $E3E0   UNKNOWN  $E3E0           ; Unknown Exxx instruction
$FFA    $0F0A   SYS      $F0A            ; System call to F0A
$FFC    $6EDC   LD       VE, #DC         ; Load 220 into VE
$FFE    $AC2F   LD       I, $C2F         ; Load C2F into I

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 465 (25.9%)
  LD      : 247 (13.8%)
  JP      : 221 (12.3%)
  SNE     : 131 ( 7.3%)
  SE      : 127 ( 7.1%)
  ADD     : 126 ( 7.0%)
  RND     : 117 ( 6.5%)
  CALL    : 108 ( 6.0%)
  DRW     : 106 ( 5.9%)
  SYS     :  96 ( 5.4%)
  AND     :  11 ( 0.6%)
  SUBN    :  10 ( 0.6%)
  SHR     :   9 ( 0.5%)
  XOR     :   7 ( 0.4%)
  SHL     :   5 ( 0.3%)
  SUB     :   4 ( 0.2%)
  CLS     :   1 ( 0.1%)
  OR      :   1 ( 0.1%)

Memory Operations: 373 (20.8%)
Arithmetic Operations: 159 (8.9%)
