
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B4468D01_I03600_C27239_97b59612c88a.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 4468
Instance: 3600
Direction: descending
Final Array: [231, 201, 135, 115, 88, 52, 23, 10]
Operations: R:8 W:0 C:114 S:5213

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 120
Sort Array References:
  $200: LD I, $CF1 ; Load CF1 into I
  $252: LD I, $736 ; Load 736 into I
  $29A: LD I, $590 ; Load 590 into I
  $2B4: LD I, $A29 ; Load A29 into I
  $2D6: LD I, $1FC ; Load 1FC into I
  $2DC: LD I, $55E ; Load 55E into I
  $2F2: LD I, $B05 ; Load B05 into I
  $310: LD I, $F0C ; Load F0C into I
  $31A: LD I, $B60 ; Load B60 into I
  $31C: LD I, $48A ; Load 48A into I
  $326: LD I, $0B5 ; Load 0B5 into I
  $330: LD I, $6FB ; Load 6FB into I
  $336: LD I, $730 ; Load 730 into I
  $354: LD I, $31F ; Load 31F into I
  $3A6: LD I, $072 ; Load 072 into I
  $3D2: LD I, $5AB ; Load 5AB into I
  $3E6: LD I, $63E ; Load 63E into I
  $3EA: LD I, $D5B ; Load D5B into I
  $3FC: LD I, $F36 ; Load F36 into I
  $40E: LD I, $C2A ; Load C2A into I
  $418: LD I, $AA2 ; Load AA2 into I
  $47E: LD I, $BD9 ; Load BD9 into I
  $4D0: LD I, $D03 ; Load D03 into I
  $4DC: LD I, $F18 ; Load F18 into I
  $51C: LD I, $6BE ; Load 6BE into I
  $56C: LD I, $3E4 ; Load 3E4 into I
  $584: LD I, $FE6 ; Load FE6 into I
  $596: LD I, $4BC ; Load 4BC into I
  $5A0: LD I, $4A3 ; Load 4A3 into I
  $5A2: LD I, $69F ; Load 69F into I
  $5F0: LD I, $E81 ; Load E81 into I
  $5FE: LD I, $A38 ; Load A38 into I
  $604: LD I, $FC3 ; Load FC3 into I
  $616: LD I, $44E ; Load 44E into I
  $626: LD I, $7C6 ; Load 7C6 into I
  $634: LD I, $674 ; Load 674 into I
  $66C: LD I, $F05 ; Load F05 into I
  $66E: LD I, $6EB ; Load 6EB into I
  $6D4: LD I, $22E ; Load 22E into I
  $712: LD I, $7DA ; Load 7DA into I
  $728: LD I, $F0C ; Load F0C into I
  $76C: LD I, $188 ; Load 188 into I
  $77A: LD I, $7A9 ; Load 7A9 into I
  $788: LD I, $5CA ; Load 5CA into I
  $79A: LD I, $0F7 ; Load 0F7 into I
  $79E: LD I, $0C6 ; Load 0C6 into I
  $7BC: LD I, $EDE ; Load EDE into I
  $7D4: LD I, $8FF ; Load 8FF into I
  $804: LD I, $3AC ; Load 3AC into I
  $836: LD I, $3D0 ; Load 3D0 into I
  $86E: LD I, $9AA ; Load 9AA into I
  $878: LD VE, [I] ; Load V0-VE from I
  $886: LD I, $152 ; Load 152 into I
  $8AE: LD VB, [I] ; Load V0-VB from I
  $8D4: LD I, $DDA ; Load DDA into I
  $8DC: LD I, $A3A ; Load A3A into I
  $8E2: LD I, $687 ; Load 687 into I
  $8F8: LD I, $8E7 ; Load 8E7 into I
  $908: LD I, $894 ; Load 894 into I
  $970: LD I, $69F ; Load 69F into I
  $988: LD I, $01E ; Load 01E into I
  $9CE: LD I, $188 ; Load 188 into I
  $9D0: LD I, $4D4 ; Load 4D4 into I
  $A36: LD I, $317 ; Load 317 into I
  $A5E: LD I, $AE2 ; Load AE2 into I
  $A60: LD I, $F47 ; Load F47 into I
  $A66: LD I, $8C1 ; Load 8C1 into I
  $A72: LD I, $B18 ; Load B18 into I
  $A7A: LD I, $8BB ; Load 8BB into I
  $A80: LD I, $44C ; Load 44C into I
  $A8A: LD I, $1C2 ; Load 1C2 into I
  $AB2: LD I, $7CF ; Load 7CF into I
  $AC0: LD I, $062 ; Load 062 into I
  $AC6: LD I, $728 ; Load 728 into I
  $AD6: LD I, $ACB ; Load ACB into I
  $ADA: LD I, $E8D ; Load E8D into I
  $AE8: LD I, $EEE ; Load EEE into I
  $B5C: LD I, $ECE ; Load ECE into I
  $B7E: LD I, $7E3 ; Load 7E3 into I
  $B84: LD I, $974 ; Load 974 into I
  $BA0: LD I, $78F ; Load 78F into I
  $BA4: LD I, $88D ; Load 88D into I
  $BA8: LD I, $8AE ; Load 8AE into I
  $BAA: LD I, $1B5 ; Load 1B5 into I
  $BE4: LD I, $444 ; Load 444 into I
  $C00: LD I, $AF1 ; Load AF1 into I
  $C60: LD I, $909 ; Load 909 into I
  $CB2: LD I, $B73 ; Load B73 into I
  $CC0: LD I, $85A ; Load 85A into I
  $CF8: LD I, $C1C ; Load C1C into I
  $D52: LD I, $25F ; Load 25F into I
  $D6A: LD I, $9B7 ; Load 9B7 into I
  $D72: LD I, $FC6 ; Load FC6 into I
  $D9A: LD I, $8F5 ; Load 8F5 into I
  $DAE: LD I, $4FE ; Load 4FE into I
  $DBC: LD I, $E6A ; Load E6A into I
  $DE4: LD I, $3DF ; Load 3DF into I
  $DFA: LD I, $DAF ; Load DAF into I
  $E0C: LD I, $119 ; Load 119 into I
  $E26: LD I, $40C ; Load 40C into I
  $E36: LD I, $DD4 ; Load DD4 into I
  $E6A: LD I, $3BE ; Load 3BE into I
  $E7C: LD I, $8B7 ; Load 8B7 into I
  $EAE: LD I, $776 ; Load 776 into I
  $EC4: LD I, $7E0 ; Load 7E0 into I
  $F0E: LD I, $9EC ; Load 9EC into I
  $F24: LD I, $F56 ; Load F56 into I
  $F30: LD I, $F8B ; Load F8B into I
  $F38: LD I, $047 ; Load 047 into I
  $F56: LD I, $762 ; Load 762 into I
  $F58: LD I, $F8D ; Load F8D into I
  $F76: LD I, $3BA ; Load 3BA into I
  $F80: LD I, $1F7 ; Load 1F7 into I
  $F82: LD I, $4CE ; Load 4CE into I
  $F96: LD I, $823 ; Load 823 into I
  $FA0: LD I, $BA9 ; Load BA9 into I
  $FA4: LD I, $096 ; Load 096 into I
  $FAE: LD I, $8AF ; Load 8AF into I
  $FBE: LD I, $50F ; Load 50F into I
  $FD4: LD I, $A44 ; Load A44 into I

CONTROL FLOW ANALYSIS:
Jumps: 250
Calls: 116
Branches: 235
Loops: 139
Loop Structures:
  $2DA -> $159 (backward jump)
  $3E0 -> $397 (backward jump)
  $3F6 -> $29A (backward jump)
  $420 -> $37B (backward jump)
  $508 -> $187 (backward jump)
  $51E -> $44B (backward jump)
  $55C -> $1BC (backward jump)
  $57A -> $208 (backward jump)
  $592 -> $229 (backward jump)
  $59E -> $43C (backward jump)
  $5B8 -> $161 (backward jump)
  $608 -> $3BE (backward jump)
  $64E -> $39D (backward jump)
  $65A -> $63B (backward jump)
  $680 -> $39C (backward jump)
  $688 -> $3DD (backward jump)
  $69E -> $0C1 (backward jump)
  $6E4 -> $24B (backward jump)
  $72E -> $4B7 (backward jump)
  $742 -> $6FA (backward jump)
  $756 -> $5CE (backward jump)
  $758 -> $2BA (backward jump)
  $778 -> $293 (backward jump)
  $784 -> $19F (backward jump)
  $786 -> $1F5 (backward jump)
  $7AE -> $4C1 (backward jump)
  $80A -> $780 (backward jump)
  $824 -> $63A (backward jump)
  $848 -> $36A (backward jump)
  $872 -> $228 (backward jump)
  $88A -> $846 (backward jump)
  $896 -> $44C (backward jump)
  $8B6 -> $8AE (backward jump)
  $90A -> $7B3 (backward jump)
  $90C -> $55C (backward jump)
  $92E -> $1F4 (backward jump)
  $93C -> $208 (backward jump)
  $956 -> $24F (backward jump)
  $962 -> $6AF (backward jump)
  $992 -> $1BB (backward jump)
  $998 -> $407 (backward jump)
  $99E -> $91D (backward jump)
  $9BA -> $265 (backward jump)
  $9C8 -> $72A (backward jump)
  $9FE -> $4E9 (backward jump)
  $A0C -> $54A (backward jump)
  $A32 -> $A15 (backward jump)
  $A3C -> $2B1 (backward jump)
  $A4C -> $087 (backward jump)
  $A70 -> $4EA (backward jump)
  $A7E -> $8B3 (backward jump)
  $A9A -> $777 (backward jump)
  $A9C -> $8F4 (backward jump)
  $AAA -> $2AA (backward jump)
  $AB0 -> $837 (backward jump)
  $AC2 -> $051 (backward jump)
  $AE2 -> $409 (backward jump)
  $AE4 -> $0FB (backward jump)
  $AEA -> $A84 (backward jump)
  $AEC -> $99D (backward jump)
  $AFE -> $A24 (backward jump)
  $B02 -> $1FB (backward jump)
  $B1A -> $148 (backward jump)
  $B34 -> $0D6 (backward jump)
  $B38 -> $570 (backward jump)
  $B44 -> $9B4 (backward jump)
  $B46 -> $589 (backward jump)
  $B48 -> $30F (backward jump)
  $B82 -> $750 (backward jump)
  $B94 -> $3CA (backward jump)
  $B9C -> $B07 (backward jump)
  $B9E -> $34F (backward jump)
  $BB8 -> $1CC (backward jump)
  $BC4 -> $748 (backward jump)
  $BD0 -> $332 (backward jump)
  $BE6 -> $B5B (backward jump)
  $C0A -> $5FA (backward jump)
  $C10 -> $244 (backward jump)
  $C12 -> $02A (backward jump)
  $C16 -> $5D3 (backward jump)
  $C30 -> $97E (backward jump)
  $C3E -> $4CC (backward jump)
  $C7A -> $6C0 (backward jump)
  $CB4 -> $7ED (backward jump)
  $CBA -> $807 (backward jump)
  $CBC -> $500 (backward jump)
  $CD0 -> $C59 (backward jump)
  $CDA -> $84C (backward jump)
  $CF4 -> $3CB (backward jump)
  $D0E -> $B2B (backward jump)
  $D38 -> $1C7 (backward jump)
  $D56 -> $8F9 (backward jump)
  $D6C -> $C3F (backward jump)
  $D92 -> $213 (backward jump)
  $DA8 -> $7FA (backward jump)
  $DB0 -> $6A7 (backward jump)
  $DC0 -> $C1F (backward jump)
  $DCA -> $C7D (backward jump)
  $DD6 -> $AA6 (backward jump)
  $DDE -> $715 (backward jump)
  $DF4 -> $54C (backward jump)
  $DFE -> $176 (backward jump)
  $E0A -> $D50 (backward jump)
  $E12 -> $DB8 (backward jump)
  $E22 -> $3D2 (backward jump)
  $E28 -> $90F (backward jump)
  $E2A -> $A6C (backward jump)
  $E42 -> $A08 (backward jump)
  $E50 -> $E41 (backward jump)
  $E5A -> $51F (backward jump)
  $E6E -> $915 (backward jump)
  $E7A -> $B90 (backward jump)
  $E98 -> $B92 (backward jump)
  $EA2 -> $7D4 (backward jump)
  $EA6 -> $950 (backward jump)
  $EBC -> $55D (backward jump)
  $EBE -> $405 (backward jump)
  $ED2 -> $7E9 (backward jump)
  $ED8 -> $691 (backward jump)
  $EE0 -> $5D8 (backward jump)
  $EE8 -> $19A (backward jump)
  $EF0 -> $465 (backward jump)
  $EFA -> $7DB (backward jump)
  $F10 -> $8A5 (backward jump)
  $F1E -> $80F (backward jump)
  $F26 -> $014 (backward jump)
  $F2A -> $C12 (backward jump)
  $F2E -> $42D (backward jump)
  $F3E -> $0D5 (backward jump)
  $F66 -> $158 (backward jump)
  $F6E -> $6F7 (backward jump)
  $F72 -> $4E3 (backward jump)
  $F90 -> $BD2 (backward jump)
  $F92 -> $3FE (backward jump)
  $FA6 -> $E05 (backward jump)
  $FA8 -> $081 (backward jump)
  $FDE -> $0E2 (backward jump)
  $FE8 -> $4F5 (backward jump)
  $FFE -> $4BE (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $ACF1   LD       I, $CF1         ; Load CF1 into I
$202    $1E10   JP       $E10            ; Jump to E10
$204    $0D53   SYS      $D53            ; System call to D53
$206    $E911   UNKNOWN  $E911           ; Unknown Exxx instruction
$208    $9ADA   UNKNOWN  $9ADA           ; Unknown 9xxx instruction
$20A    $D1B4   DRW      V1, VB, #4      ; Draw 4-byte sprite at V1, VB
$20C    $56AD   UNKNOWN  $56AD           ; Unknown 5xxx instruction
$20E    $1A6A   JP       $A6A            ; Jump to A6A
$210    $47F9   SNE      V7, #F9         ; Skip if V7 != 249
$212    $9A15   UNKNOWN  $9A15           ; Unknown 9xxx instruction
$214    $176D   JP       $76D            ; Jump to 76D
$216    $48EF   SNE      V8, #EF         ; Skip if V8 != 239
$218    $6D12   LD       VD, #12         ; Load 18 into VD
$21A    $03BD   SYS      $3BD            ; System call to 3BD
$21C    $4A83   SNE      VA, #83         ; Skip if VA != 131
$21E    $E988   UNKNOWN  $E988           ; Unknown Exxx instruction
$220    $C9BB   RND      V9, #BB         ; V9 = random & BB
$222    $6247   LD       V2, #47         ; Load 71 into V2
$224    $8E9D   UNKNOWN  8E9D            ; Unknown 8xxx instruction
$226    $5887   UNKNOWN  $5887           ; Unknown 5xxx instruction
$228    $7B38   ADD      VB, #38         ; Add 56 to VB
$22A    $2BC0   CALL     $BC0            ; Call subroutine at BC0
$22C    $DB7C   DRW      VB, V7, #C      ; Draw 12-byte sprite at VB, V7
$22E    $7079   ADD      V0, #79         ; Add 121 to V0
$230    $0EF9   SYS      $EF9            ; System call to EF9
$232    $B265   JP       V0, $265        ; Jump to V0 + 265
$234    $8362   AND      V3, V6          ; V3 &= V6
$236    $2CF7   CALL     $CF7            ; Call subroutine at CF7
$238    $C4DA   RND      V4, #DA         ; V4 = random & DA
$23A    $E1C2   UNKNOWN  $E1C2           ; Unknown Exxx instruction
$23C    $E18C   UNKNOWN  $E18C           ; Unknown Exxx instruction
$23E    $1450   JP       $450            ; Jump to 450
$240    $7A92   ADD      VA, #92         ; Add 146 to VA
$242    $8FB9   UNKNOWN  8FB9            ; Unknown 8xxx instruction
$244    $F37A   UNKNOWN  F37A            ; Unknown Fxxx instruction
$246    $1E34   JP       $E34            ; Jump to E34
$248    $24B9   CALL     $4B9            ; Call subroutine at 4B9
$24A    $97B4   UNKNOWN  $97B4           ; Unknown 9xxx instruction
$24C    $1AA3   JP       $AA3            ; Jump to AA3
$24E    $60EE   LD       V0, #EE         ; Load 238 into V0
$250    $4134   SNE      V1, #34         ; Skip if V1 != 52
$252    $A736   LD       I, $736         ; Load 736 into I
$254    $5396   UNKNOWN  $5396           ; Unknown 5xxx instruction
$256    $6013   LD       V0, #13         ; Load 19 into V0
$258    $E1F2   UNKNOWN  $E1F2           ; Unknown Exxx instruction
$25A    $B547   JP       V0, $547        ; Jump to V0 + 547
$25C    $0C2E   SYS      $C2E            ; System call to C2E
$25E    $3681   SE       V6, #81         ; Skip if V6 == 129
$260    $D30B   DRW      V3, V0, #B      ; Draw 11-byte sprite at V3, V0
$262    $4FF8   SNE      VF, #F8         ; Skip if VF != 248
$264    $7393   ADD      V3, #93         ; Add 147 to V3
$266    $F30C   UNKNOWN  F30C            ; Unknown Fxxx instruction
$268    $548E   UNKNOWN  $548E           ; Unknown 5xxx instruction
$26A    $12A4   JP       $2A4            ; Jump to 2A4
$26C    $63F9   LD       V3, #F9         ; Load 249 into V3
$26E    $C594   RND      V5, #94         ; V5 = random & 94
$270    $B6D2   JP       V0, $6D2        ; Jump to V0 + 6D2
$272    $CC1D   RND      VC, #1D         ; VC = random & 1D
$274    $0C35   SYS      $C35            ; System call to C35
$276    $59A8   UNKNOWN  $59A8           ; Unknown 5xxx instruction
$278    $C24D   RND      V2, #4D         ; V2 = random & 4D
$27A    $286E   CALL     $86E            ; Call subroutine at 86E
$27C    $D7C9   DRW      V7, VC, #9      ; Draw 9-byte sprite at V7, VC
$27E    $B29D   JP       V0, $29D        ; Jump to V0 + 29D
$280    $4BA1   SNE      VB, #A1         ; Skip if VB != 161
$282    $D184   DRW      V1, V8, #4      ; Draw 4-byte sprite at V1, V8
$284    $606F   LD       V0, #6F         ; Load 111 into V0
$286    $292D   CALL     $92D            ; Call subroutine at 92D
$288    $3265   SE       V2, #65         ; Skip if V2 == 101
$28A    $5B5F   UNKNOWN  $5B5F           ; Unknown 5xxx instruction
$28C    $B4AB   JP       V0, $4AB        ; Jump to V0 + 4AB
$28E    $3090   SE       V0, #90         ; Skip if V0 == 144
$290    $D0C5   DRW      V0, VC, #5      ; Draw 5-byte sprite at V0, VC
$292    $302F   SE       V0, #2F         ; Skip if V0 == 47
$294    $F640   UNKNOWN  F640            ; Unknown Fxxx instruction
$296    $6312   LD       V3, #12         ; Load 18 into V3
$298    $7A2E   ADD      VA, #2E         ; Add 46 to VA
$29A    $A590   LD       I, $590         ; Load 590 into I
$29C    $8825   SUB      V8, V2          ; V8 -= V2, VF = !borrow
$29E    $DB42   DRW      VB, V4, #2      ; Draw 2-byte sprite at VB, V4
$2A0    $90CE   UNKNOWN  $90CE           ; Unknown 9xxx instruction
$2A2    $8AD5   SUB      VA, VD          ; VA -= VD, VF = !borrow
$2A4    $F0AA   UNKNOWN  F0AA            ; Unknown Fxxx instruction
$2A6    $6146   LD       V1, #46         ; Load 70 into V1
$2A8    $2E86   CALL     $E86            ; Call subroutine at E86
$2AA    $1A3B   JP       $A3B            ; Jump to A3B
$2AC    $F49E   UNKNOWN  F49E            ; Unknown Fxxx instruction
$2AE    $864E   SHL      V6              ; V6 <<= 1, VF = MSB
$2B0    $5819   UNKNOWN  $5819           ; Unknown 5xxx instruction
$2B2    $3FAA   SE       VF, #AA         ; Skip if VF == 170
$2B4    $AA29   LD       I, $A29         ; Load A29 into I
$2B6    $3869   SE       V8, #69         ; Skip if V8 == 105
$2B8    $8EF7   SUBN     VE, VF          ; VE = VF - VE, VF = !borrow
$2BA    $1CDB   JP       $CDB            ; Jump to CDB
$2BC    $6E25   LD       VE, #25         ; Load 37 into VE
$2BE    $D4C5   DRW      V4, VC, #5      ; Draw 5-byte sprite at V4, VC
$2C0    $ED77   UNKNOWN  $ED77           ; Unknown Exxx instruction
$2C2    $8F37   SUBN     VF, V3          ; VF = V3 - VF, VF = !borrow
$2C4    $E88E   UNKNOWN  $E88E           ; Unknown Exxx instruction
$2C6    $73B5   ADD      V3, #B5         ; Add 181 to V3
$2C8    $0F1D   SYS      $F1D            ; System call to F1D
$2CA    $3096   SE       V0, #96         ; Skip if V0 == 150
$2CC    $76DC   ADD      V6, #DC         ; Add 220 to V6
$2CE    $37C1   SE       V7, #C1         ; Skip if V7 == 193
$2D0    $F13A   UNKNOWN  F13A            ; Unknown Fxxx instruction
$2D2    $D420   DRW      V4, V2, #0      ; Draw 0-byte sprite at V4, V2
$2D4    $9018   UNKNOWN  $9018           ; Unknown 9xxx instruction
$2D6    $A1FC   LD       I, $1FC         ; Load 1FC into I
$2D8    $73DE   ADD      V3, #DE         ; Add 222 to V3
$2DA    $B159   JP       V0, $159        ; Jump to V0 + 159
$2DC    $A55E   LD       I, $55E         ; Load 55E into I
$2DE    $D67B   DRW      V6, V7, #B      ; Draw 11-byte sprite at V6, V7
$2E0    $46F7   SNE      V6, #F7         ; Skip if V6 != 247
$2E2    $EA90   UNKNOWN  $EA90           ; Unknown Exxx instruction
$2E4    $83E4   ADD      V3, VE          ; V3 += VE, VF = carry
$2E6    $FBF1   UNKNOWN  FBF1            ; Unknown Fxxx instruction
$2E8    $925B   UNKNOWN  $925B           ; Unknown 9xxx instruction
$2EA    $2F12   CALL     $F12            ; Call subroutine at F12
$2EC    $FCB3   UNKNOWN  FCB3            ; Unknown Fxxx instruction
$2EE    $09F4   SYS      $9F4            ; System call to 9F4
$2F0    $40E8   SNE      V0, #E8         ; Skip if V0 != 232
$2F2    $AB05   LD       I, $B05         ; Load B05 into I
$2F4    $7786   ADD      V7, #86         ; Add 134 to V7
$2F6    $79D6   ADD      V9, #D6         ; Add 214 to V9
$2F8    $2B1C   CALL     $B1C            ; Call subroutine at B1C
$2FA    $BE36   JP       V0, $E36        ; Jump to V0 + E36
$2FC    $D751   DRW      V7, V5, #1      ; Draw 1-byte sprite at V7, V5
$2FE    $23FC   CALL     $3FC            ; Call subroutine at 3FC
$300    $E7C9   UNKNOWN  $E7C9           ; Unknown Exxx instruction
$302    $8773   XOR      V7, V7          ; V7 ^= V7
$304    $5834   UNKNOWN  $5834           ; Unknown 5xxx instruction
$306    $170A   JP       $70A            ; Jump to 70A
$308    $D838   DRW      V8, V3, #8      ; Draw 8-byte sprite at V8, V3
$30A    $B8F1   JP       V0, $8F1        ; Jump to V0 + 8F1
$30C    $0DC2   SYS      $DC2            ; System call to DC2
$30E    $CDF2   RND      VD, #F2         ; VD = random & F2
$310    $AF0C   LD       I, $F0C         ; Load F0C into I
$312    $2951   CALL     $951            ; Call subroutine at 951
$314    $B861   JP       V0, $861        ; Jump to V0 + 861
$316    $EC40   UNKNOWN  $EC40           ; Unknown Exxx instruction
$318    $7726   ADD      V7, #26         ; Add 38 to V7
$31A    $AB60   LD       I, $B60         ; Load B60 into I
$31C    $A48A   LD       I, $48A         ; Load 48A into I
$31E    $7A82   ADD      VA, #82         ; Add 130 to VA
$320    $C57C   RND      V5, #7C         ; V5 = random & 7C
$322    $D28A   DRW      V2, V8, #A      ; Draw 10-byte sprite at V2, V8
$324    $0C56   SYS      $C56            ; System call to C56
$326    $A0B5   LD       I, $0B5         ; Load 0B5 into I
$328    $1E36   JP       $E36            ; Jump to E36
$32A    $CFB4   RND      VF, #B4         ; VF = random & B4
$32C    $7209   ADD      V2, #09         ; Add 9 to V2
$32E    $519B   UNKNOWN  $519B           ; Unknown 5xxx instruction
$330    $A6FB   LD       I, $6FB         ; Load 6FB into I
$332    $891C   UNKNOWN  891C            ; Unknown 8xxx instruction
$334    $1E4E   JP       $E4E            ; Jump to E4E
$336    $A730   LD       I, $730         ; Load 730 into I
$338    $70BC   ADD      V0, #BC         ; Add 188 to V0
$33A    $573C   UNKNOWN  $573C           ; Unknown 5xxx instruction
$33C    $4960   SNE      V9, #60         ; Skip if V9 != 96
$33E    $CC76   RND      VC, #76         ; VC = random & 76
$340    $DBBB   DRW      VB, VB, #B      ; Draw 11-byte sprite at VB, VB
$342    $877C   UNKNOWN  877C            ; Unknown 8xxx instruction
$344    $84EB   UNKNOWN  84EB            ; Unknown 8xxx instruction
$346    $05DF   SYS      $5DF            ; System call to 5DF
$348    $CF92   RND      VF, #92         ; VF = random & 92
$34A    $02E1   SYS      $2E1            ; System call to 2E1
$34C    $43EC   SNE      V3, #EC         ; Skip if V3 != 236
$34E    $E9F0   UNKNOWN  $E9F0           ; Unknown Exxx instruction
$350    $BB2C   JP       V0, $B2C        ; Jump to V0 + B2C
$352    $060A   SYS      $60A            ; System call to 60A
$354    $A31F   LD       I, $31F         ; Load 31F into I
$356    $C5D9   RND      V5, #D9         ; V5 = random & D9
$358    $3CE9   SE       VC, #E9         ; Skip if VC == 233
$35A    $957B   UNKNOWN  $957B           ; Unknown 9xxx instruction
$35C    $1520   JP       $520            ; Jump to 520
$35E    $0886   SYS      $886            ; System call to 886
$360    $C690   RND      V6, #90         ; V6 = random & 90
$362    $65B4   LD       V5, #B4         ; Load 180 into V5
$364    $C0F8   RND      V0, #F8         ; V0 = random & F8
$366    $9E21   UNKNOWN  $9E21           ; Unknown 9xxx instruction
$368    $DAB8   DRW      VA, VB, #8      ; Draw 8-byte sprite at VA, VB
$36A    $5F5B   UNKNOWN  $5F5B           ; Unknown 5xxx instruction
$36C    $31E1   SE       V1, #E1         ; Skip if V1 == 225
$36E    $7A7D   ADD      VA, #7D         ; Add 125 to VA
$370    $0DD0   SYS      $DD0            ; System call to DD0
$372    $C5D6   RND      V5, #D6         ; V5 = random & D6
$374    $88EE   SHL      V8              ; V8 <<= 1, VF = MSB
$376    $6237   LD       V2, #37         ; Load 55 into V2
$378    $6987   LD       V9, #87         ; Load 135 into V9
$37A    $29B4   CALL     $9B4            ; Call subroutine at 9B4
$37C    $98E7   UNKNOWN  $98E7           ; Unknown 9xxx instruction
$37E    $9B85   UNKNOWN  $9B85           ; Unknown 9xxx instruction
$380    $2C7C   CALL     $C7C            ; Call subroutine at C7C
$382    $28A4   CALL     $8A4            ; Call subroutine at 8A4
$384    $6FD1   LD       VF, #D1         ; Load 209 into VF
$386    $F138   UNKNOWN  F138            ; Unknown Fxxx instruction
$388    $8AB1   OR       VA, VB          ; VA |= VB
$38A    $0783   SYS      $783            ; System call to 783
$38C    $0240   SYS      $240            ; System call to 240
$38E    $EA21   UNKNOWN  $EA21           ; Unknown Exxx instruction
$390    $4742   SNE      V7, #42         ; Skip if V7 != 66
$392    $6D6F   LD       VD, #6F         ; Load 111 into VD
$394    $CE6F   RND      VE, #6F         ; VE = random & 6F
$396    $E84F   UNKNOWN  $E84F           ; Unknown Exxx instruction
$398    $0FD0   SYS      $FD0            ; System call to FD0
$39A    $2886   CALL     $886            ; Call subroutine at 886
$39C    $3C5F   SE       VC, #5F         ; Skip if VC == 95
$39E    $BBB9   JP       V0, $BB9        ; Jump to V0 + BB9
$3A0    $2E7A   CALL     $E7A            ; Call subroutine at E7A
$3A2    $1C06   JP       $C06            ; Jump to C06
$3A4    $7C0C   ADD      VC, #0C         ; Add 12 to VC
$3A6    $A072   LD       I, $072         ; Load 072 into I
$3A8    $0CCA   SYS      $CCA            ; System call to CCA
$3AA    $1CB8   JP       $CB8            ; Jump to CB8
$3AC    $857F   UNKNOWN  857F            ; Unknown 8xxx instruction
$3AE    $9203   UNKNOWN  $9203           ; Unknown 9xxx instruction
$3B0    $FA3E   UNKNOWN  FA3E            ; Unknown Fxxx instruction
$3B2    $71D8   ADD      V1, #D8         ; Add 216 to V1
$3B4    $B918   JP       V0, $918        ; Jump to V0 + 918
$3B6    $5F47   UNKNOWN  $5F47           ; Unknown 5xxx instruction
$3B8    $CC76   RND      VC, #76         ; VC = random & 76
$3BA    $96B8   UNKNOWN  $96B8           ; Unknown 9xxx instruction
$3BC    $8E23   XOR      VE, V2          ; VE ^= V2
$3BE    $01B1   SYS      $1B1            ; System call to 1B1
$3C0    $18CC   JP       $8CC            ; Jump to 8CC
$3C2    $3CBD   SE       VC, #BD         ; Skip if VC == 189
$3C4    $5DCE   UNKNOWN  $5DCE           ; Unknown 5xxx instruction
$3C6    $162E   JP       $62E            ; Jump to 62E
$3C8    $E367   UNKNOWN  $E367           ; Unknown Exxx instruction
$3CA    $5D9D   UNKNOWN  $5D9D           ; Unknown 5xxx instruction
$3CC    $F425   UNKNOWN  F425            ; Unknown Fxxx instruction
$3CE    $D7B1   DRW      V7, VB, #1      ; Draw 1-byte sprite at V7, VB
$3D0    $C497   RND      V4, #97         ; V4 = random & 97
$3D2    $A5AB   LD       I, $5AB         ; Load 5AB into I
$3D4    $8FC3   XOR      VF, VC          ; VF ^= VC
$3D6    $6164   LD       V1, #64         ; Load 100 into V1
$3D8    $DD89   DRW      VD, V8, #9      ; Draw 9-byte sprite at VD, V8
$3DA    $D58B   DRW      V5, V8, #B      ; Draw 11-byte sprite at V5, V8
$3DC    $BE22   JP       V0, $E22        ; Jump to V0 + E22
$3DE    $E731   UNKNOWN  $E731           ; Unknown Exxx instruction
$3E0    $1397   JP       $397            ; Jump to 397
$3E2    $ED41   UNKNOWN  $ED41           ; Unknown Exxx instruction
$3E4    $C227   RND      V2, #27         ; V2 = random & 27
$3E6    $A63E   LD       I, $63E         ; Load 63E into I
$3E8    $2E57   CALL     $E57            ; Call subroutine at E57
$3EA    $AD5B   LD       I, $D5B         ; Load D5B into I
$3EC    $4E18   SNE      VE, #18         ; Skip if VE != 24
$3EE    $9C04   UNKNOWN  $9C04           ; Unknown 9xxx instruction
$3F0    $F69F   UNKNOWN  F69F            ; Unknown Fxxx instruction
$3F2    $5B99   UNKNOWN  $5B99           ; Unknown 5xxx instruction
$3F4    $DC9A   DRW      VC, V9, #A      ; Draw 10-byte sprite at VC, V9
$3F6    $B29A   JP       V0, $29A        ; Jump to V0 + 29A
$3F8    $2BE8   CALL     $BE8            ; Call subroutine at BE8
$3FA    $8EDE   SHL      VE              ; VE <<= 1, VF = MSB
$3FC    $AF36   LD       I, $F36         ; Load F36 into I
$3FE    $5303   UNKNOWN  $5303           ; Unknown 5xxx instruction
$400    $DE36   DRW      VE, V3, #6      ; Draw 6-byte sprite at VE, V3
$402    $6625   LD       V6, #25         ; Load 37 into V6
$404    $B7CA   JP       V0, $7CA        ; Jump to V0 + 7CA
$406    $CE5A   RND      VE, #5A         ; VE = random & 5A
$408    $052E   SYS      $52E            ; System call to 52E
$40A    $F164   UNKNOWN  F164            ; Unknown Fxxx instruction
$40C    $2791   CALL     $791            ; Call subroutine at 791
$40E    $AC2A   LD       I, $C2A         ; Load C2A into I
$410    $3A3B   SE       VA, #3B         ; Skip if VA == 59
$412    $81CC   UNKNOWN  81CC            ; Unknown 8xxx instruction
$414    $C5D8   RND      V5, #D8         ; V5 = random & D8
$416    $160F   JP       $60F            ; Jump to 60F
$418    $AAA2   LD       I, $AA2         ; Load AA2 into I
$41A    $2501   CALL     $501            ; Call subroutine at 501
$41C    $0C89   SYS      $C89            ; System call to C89
$41E    $4C76   SNE      VC, #76         ; Skip if VC != 118
$420    $B37B   JP       V0, $37B        ; Jump to V0 + 37B
$422    $9345   UNKNOWN  $9345           ; Unknown 9xxx instruction
$424    $CC08   RND      VC, #08         ; VC = random & 08
$426    $FD8A   UNKNOWN  FD8A            ; Unknown Fxxx instruction
$428    $260E   CALL     $60E            ; Call subroutine at 60E
$42A    $6B32   LD       VB, #32         ; Load 50 into VB
$42C    $8BF5   SUB      VB, VF          ; VB -= VF, VF = !borrow
$42E    $C095   RND      V0, #95         ; V0 = random & 95
$430    $CEAD   RND      VE, #AD         ; VE = random & AD
$432    $C805   RND      V8, #05         ; V8 = random & 05
$434    $5C8E   UNKNOWN  $5C8E           ; Unknown 5xxx instruction
$436    $29A0   CALL     $9A0            ; Call subroutine at 9A0
$438    $9486   UNKNOWN  $9486           ; Unknown 9xxx instruction
$43A    $CB91   RND      VB, #91         ; VB = random & 91
$43C    $28C1   CALL     $8C1            ; Call subroutine at 8C1
$43E    $425B   SNE      V2, #5B         ; Skip if V2 != 91
$440    $9CA3   UNKNOWN  $9CA3           ; Unknown 9xxx instruction
$442    $22F0   CALL     $2F0            ; Call subroutine at 2F0
$444    $3933   SE       V9, #33         ; Skip if V9 == 51
$446    $5592   UNKNOWN  $5592           ; Unknown 5xxx instruction
$448    $7CAD   ADD      VC, #AD         ; Add 173 to VC
$44A    $0BB6   SYS      $BB6            ; System call to BB6
$44C    $1E07   JP       $E07            ; Jump to E07
$44E    $E54D   UNKNOWN  $E54D           ; Unknown Exxx instruction
$450    $6355   LD       V3, #55         ; Load 85 into V3
$452    $221C   CALL     $21C            ; Call subroutine at 21C
$454    $D885   DRW      V8, V8, #5      ; Draw 5-byte sprite at V8, V8
$456    $4E92   SNE      VE, #92         ; Skip if VE != 146
$458    $1DFA   JP       $DFA            ; Jump to DFA
$45A    $39A4   SE       V9, #A4         ; Skip if V9 == 164
$45C    $0534   SYS      $534            ; System call to 534
$45E    $6BD1   LD       VB, #D1         ; Load 209 into VB
$460    $FBE8   UNKNOWN  FBE8            ; Unknown Fxxx instruction
$462    $8C76   SHR      VC              ; VC >>= 1, VF = LSB
$464    $639A   LD       V3, #9A         ; Load 154 into V3
$466    $D2BC   DRW      V2, VB, #C      ; Draw 12-byte sprite at V2, VB
$468    $2672   CALL     $672            ; Call subroutine at 672
$46A    $4012   SNE      V0, #12         ; Skip if V0 != 18
$46C    $8E74   ADD      VE, V7          ; VE += V7, VF = carry
$46E    $3242   SE       V2, #42         ; Skip if V2 == 66
$470    $BE89   JP       V0, $E89        ; Jump to V0 + E89
$472    $CB7D   RND      VB, #7D         ; VB = random & 7D
$474    $58BB   UNKNOWN  $58BB           ; Unknown 5xxx instruction
$476    $CCE8   RND      VC, #E8         ; VC = random & E8
$478    $8362   AND      V3, V6          ; V3 &= V6
$47A    $C4AF   RND      V4, #AF         ; V4 = random & AF
$47C    $3305   SE       V3, #05         ; Skip if V3 == 5
$47E    $ABD9   LD       I, $BD9         ; Load BD9 into I
$480    $CBB5   RND      VB, #B5         ; VB = random & B5
$482    $D9DB   DRW      V9, VD, #B      ; Draw 11-byte sprite at V9, VD
$484    $65A4   LD       V5, #A4         ; Load 164 into V5
$486    $94CC   UNKNOWN  $94CC           ; Unknown 9xxx instruction
$488    $2093   CALL     $093            ; Call subroutine at 093
$48A    $B5EF   JP       V0, $5EF        ; Jump to V0 + 5EF
$48C    $2B39   CALL     $B39            ; Call subroutine at B39
$48E    $06D6   SYS      $6D6            ; System call to 6D6
$490    $D782   DRW      V7, V8, #2      ; Draw 2-byte sprite at V7, V8
$492    $D159   DRW      V1, V5, #9      ; Draw 9-byte sprite at V1, V5
$494    $618A   LD       V1, #8A         ; Load 138 into V1
$496    $6E19   LD       VE, #19         ; Load 25 into VE
$498    $52A6   UNKNOWN  $52A6           ; Unknown 5xxx instruction
$49A    $622C   LD       V2, #2C         ; Load 44 into V2
$49C    $DA61   DRW      VA, V6, #1      ; Draw 1-byte sprite at VA, V6
$49E    $3714   SE       V7, #14         ; Skip if V7 == 20
$4A0    $5499   UNKNOWN  $5499           ; Unknown 5xxx instruction
$4A2    $7E13   ADD      VE, #13         ; Add 19 to VE
$4A4    $75BC   ADD      V5, #BC         ; Add 188 to V5
$4A6    $EE1C   UNKNOWN  $EE1C           ; Unknown Exxx instruction
$4A8    $CCAB   RND      VC, #AB         ; VC = random & AB
$4AA    $C6E4   RND      V6, #E4         ; V6 = random & E4
$4AC    $C75C   RND      V7, #5C         ; V7 = random & 5C
$4AE    $B6AD   JP       V0, $6AD        ; Jump to V0 + 6AD
$4B0    $4BD4   SNE      VB, #D4         ; Skip if VB != 212
$4B2    $06D0   SYS      $6D0            ; System call to 6D0
$4B4    $6E77   LD       VE, #77         ; Load 119 into VE
$4B6    $4E71   SNE      VE, #71         ; Skip if VE != 113
$4B8    $D29A   DRW      V2, V9, #A      ; Draw 10-byte sprite at V2, V9
$4BA    $56C1   UNKNOWN  $56C1           ; Unknown 5xxx instruction
$4BC    $E1F3   UNKNOWN  $E1F3           ; Unknown Exxx instruction
$4BE    $EF5A   UNKNOWN  $EF5A           ; Unknown Exxx instruction
$4C0    $BAD6   JP       V0, $AD6        ; Jump to V0 + AD6
$4C2    $CDA4   RND      VD, #A4         ; VD = random & A4
$4C4    $26C0   CALL     $6C0            ; Call subroutine at 6C0
$4C6    $F26D   UNKNOWN  F26D            ; Unknown Fxxx instruction
$4C8    $0530   SYS      $530            ; System call to 530
$4CA    $2C0B   CALL     $C0B            ; Call subroutine at C0B
$4CC    $1CB2   JP       $CB2            ; Jump to CB2
$4CE    $82BF   UNKNOWN  82BF            ; Unknown 8xxx instruction
$4D0    $AD03   LD       I, $D03         ; Load D03 into I
$4D2    $1653   JP       $653            ; Jump to 653
$4D4    $63D0   LD       V3, #D0         ; Load 208 into V3
$4D6    $91FF   UNKNOWN  $91FF           ; Unknown 9xxx instruction
$4D8    $82BA   UNKNOWN  82BA            ; Unknown 8xxx instruction
$4DA    $BAAD   JP       V0, $AAD        ; Jump to V0 + AAD
$4DC    $AF18   LD       I, $F18         ; Load F18 into I
$4DE    $E58E   UNKNOWN  $E58E           ; Unknown Exxx instruction
$4E0    $2FA0   CALL     $FA0            ; Call subroutine at FA0
$4E2    $5262   UNKNOWN  $5262           ; Unknown 5xxx instruction
$4E4    $FA8E   UNKNOWN  FA8E            ; Unknown Fxxx instruction
$4E6    $6F77   LD       VF, #77         ; Load 119 into VF
$4E8    $FE8A   UNKNOWN  FE8A            ; Unknown Fxxx instruction
$4EA    $34D9   SE       V4, #D9         ; Skip if V4 == 217
$4EC    $E175   UNKNOWN  $E175           ; Unknown Exxx instruction
$4EE    $C120   RND      V1, #20         ; V1 = random & 20
$4F0    $790C   ADD      V9, #0C         ; Add 12 to V9
$4F2    $80DE   SHL      V0              ; V0 <<= 1, VF = MSB
$4F4    $21ED   CALL     $1ED            ; Call subroutine at 1ED
$4F6    $D226   DRW      V2, V2, #6      ; Draw 6-byte sprite at V2, V2
$4F8    $2F57   CALL     $F57            ; Call subroutine at F57
$4FA    $472E   SNE      V7, #2E         ; Skip if V7 != 46
$4FC    $B8B0   JP       V0, $8B0        ; Jump to V0 + 8B0
$4FE    $093E   SYS      $93E            ; System call to 93E
$500    $2CA2   CALL     $CA2            ; Call subroutine at CA2
$502    $FB72   UNKNOWN  FB72            ; Unknown Fxxx instruction
$504    $CAAC   RND      VA, #AC         ; VA = random & AC
$506    $813B   UNKNOWN  813B            ; Unknown 8xxx instruction
$508    $1187   JP       $187            ; Jump to 187
$50A    $C4AE   RND      V4, #AE         ; V4 = random & AE
$50C    $1BF6   JP       $BF6            ; Jump to BF6
$50E    $9B3D   UNKNOWN  $9B3D           ; Unknown 9xxx instruction
$510    $EBF2   UNKNOWN  $EBF2           ; Unknown Exxx instruction
$512    $D4A1   DRW      V4, VA, #1      ; Draw 1-byte sprite at V4, VA
$514    $0DD7   SYS      $DD7            ; System call to DD7
$516    $15B5   JP       $5B5            ; Jump to 5B5
$518    $EBC3   UNKNOWN  $EBC3           ; Unknown Exxx instruction
$51A    $BF31   JP       V0, $F31        ; Jump to V0 + F31
$51C    $A6BE   LD       I, $6BE         ; Load 6BE into I
$51E    $144B   JP       $44B            ; Jump to 44B
$520    $C746   RND      V7, #46         ; V7 = random & 46
$522    $9CC0   SNE      VC, VC          ; Skip if VC != VC
$524    $F987   UNKNOWN  F987            ; Unknown Fxxx instruction
$526    $F6AA   UNKNOWN  F6AA            ; Unknown Fxxx instruction
$528    $C6FB   RND      V6, #FB         ; V6 = random & FB
$52A    $FEDE   UNKNOWN  FEDE            ; Unknown Fxxx instruction
$52C    $7416   ADD      V4, #16         ; Add 22 to V4
$52E    $C022   RND      V0, #22         ; V0 = random & 22
$530    $18C3   JP       $8C3            ; Jump to 8C3
$532    $1930   JP       $930            ; Jump to 930
$534    $3582   SE       V5, #82         ; Skip if V5 == 130
$536    $495B   SNE      V9, #5B         ; Skip if V9 != 91
$538    $7572   ADD      V5, #72         ; Add 114 to V5
$53A    $3454   SE       V4, #54         ; Skip if V4 == 84
$53C    $F89B   UNKNOWN  F89B            ; Unknown Fxxx instruction
$53E    $9BF0   SNE      VB, VF          ; Skip if VB != VF
$540    $98B7   UNKNOWN  $98B7           ; Unknown 9xxx instruction
$542    $D99D   DRW      V9, V9, #D      ; Draw 13-byte sprite at V9, V9
$544    $5FCA   UNKNOWN  $5FCA           ; Unknown 5xxx instruction
$546    $7501   ADD      V5, #01         ; Add 1 to V5
$548    $C6EA   RND      V6, #EA         ; V6 = random & EA
$54A    $F4DC   UNKNOWN  F4DC            ; Unknown Fxxx instruction
$54C    $69DB   LD       V9, #DB         ; Load 219 into V9
$54E    $60CD   LD       V0, #CD         ; Load 205 into V0
$550    $D10C   DRW      V1, V0, #C      ; Draw 12-byte sprite at V1, V0
$552    $1E32   JP       $E32            ; Jump to E32
$554    $289D   CALL     $89D            ; Call subroutine at 89D
$556    $2B62   CALL     $B62            ; Call subroutine at B62
$558    $9472   UNKNOWN  $9472           ; Unknown 9xxx instruction
$55A    $B8B8   JP       V0, $8B8        ; Jump to V0 + 8B8
$55C    $B1BC   JP       V0, $1BC        ; Jump to V0 + 1BC
$55E    $6906   LD       V9, #06         ; Load 6 into V9
$560    $F93B   UNKNOWN  F93B            ; Unknown Fxxx instruction
$562    $E461   UNKNOWN  $E461           ; Unknown Exxx instruction
$564    $54CF   UNKNOWN  $54CF           ; Unknown 5xxx instruction
$566    $01E1   SYS      $1E1            ; System call to 1E1
$568    $F356   UNKNOWN  F356            ; Unknown Fxxx instruction
$56A    $5FEA   UNKNOWN  $5FEA           ; Unknown 5xxx instruction
$56C    $A3E4   LD       I, $3E4         ; Load 3E4 into I
$56E    $843F   UNKNOWN  843F            ; Unknown 8xxx instruction
$570    $8A6A   UNKNOWN  8A6A            ; Unknown 8xxx instruction
$572    $9E1B   UNKNOWN  $9E1B           ; Unknown 9xxx instruction
$574    $BBD5   JP       V0, $BD5        ; Jump to V0 + BD5
$576    $0A7D   SYS      $A7D            ; System call to A7D
$578    $25DE   CALL     $5DE            ; Call subroutine at 5DE
$57A    $B208   JP       V0, $208        ; Jump to V0 + 208
$57C    $E1D0   UNKNOWN  $E1D0           ; Unknown Exxx instruction
$57E    $3F00   SE       VF, #00         ; Skip if VF == 0
$580    $324E   SE       V2, #4E         ; Skip if V2 == 78
$582    $6771   LD       V7, #71         ; Load 113 into V7
$584    $AFE6   LD       I, $FE6         ; Load FE6 into I
$586    $D1E3   DRW      V1, VE, #3      ; Draw 3-byte sprite at V1, VE
$588    $62E3   LD       V2, #E3         ; Load 227 into V2
$58A    $28F7   CALL     $8F7            ; Call subroutine at 8F7
$58C    $83FC   UNKNOWN  83FC            ; Unknown 8xxx instruction
$58E    $1912   JP       $912            ; Jump to 912
$590    $F226   UNKNOWN  F226            ; Unknown Fxxx instruction
$592    $1229   JP       $229            ; Jump to 229
$594    $9D40   SNE      VD, V4          ; Skip if VD != V4
$596    $A4BC   LD       I, $4BC         ; Load 4BC into I
$598    $6ED6   LD       VE, #D6         ; Load 214 into VE
$59A    $F5B0   UNKNOWN  F5B0            ; Unknown Fxxx instruction
$59C    $0CEF   SYS      $CEF            ; System call to CEF
$59E    $143C   JP       $43C            ; Jump to 43C
$5A0    $A4A3   LD       I, $4A3         ; Load 4A3 into I
$5A2    $A69F   LD       I, $69F         ; Load 69F into I
$5A4    $227A   CALL     $27A            ; Call subroutine at 27A
$5A6    $788E   ADD      V8, #8E         ; Add 142 to V8
$5A8    $85E5   SUB      V5, VE          ; V5 -= VE, VF = !borrow
$5AA    $333D   SE       V3, #3D         ; Skip if V3 == 61
$5AC    $FA08   UNKNOWN  FA08            ; Unknown Fxxx instruction
$5AE    $2783   CALL     $783            ; Call subroutine at 783
$5B0    $FD97   UNKNOWN  FD97            ; Unknown Fxxx instruction
$5B2    $B6F3   JP       V0, $6F3        ; Jump to V0 + 6F3
$5B4    $D7DD   DRW      V7, VD, #D      ; Draw 13-byte sprite at V7, VD
$5B6    $437C   SNE      V3, #7C         ; Skip if V3 != 124
$5B8    $B161   JP       V0, $161        ; Jump to V0 + 161
$5BA    $9552   UNKNOWN  $9552           ; Unknown 9xxx instruction
$5BC    $DF1C   DRW      VF, V1, #C      ; Draw 12-byte sprite at VF, V1
$5BE    $6D5F   LD       VD, #5F         ; Load 95 into VD
$5C0    $51A4   UNKNOWN  $51A4           ; Unknown 5xxx instruction
$5C2    $FE9E   UNKNOWN  FE9E            ; Unknown Fxxx instruction
$5C4    $802C   UNKNOWN  802C            ; Unknown 8xxx instruction
$5C6    $FBF4   UNKNOWN  FBF4            ; Unknown Fxxx instruction
$5C8    $FFBE   UNKNOWN  FFBE            ; Unknown Fxxx instruction
$5CA    $374D   SE       V7, #4D         ; Skip if V7 == 77
$5CC    $93E3   UNKNOWN  $93E3           ; Unknown 9xxx instruction
$5CE    $FF11   UNKNOWN  FF11            ; Unknown Fxxx instruction
$5D0    $CAD0   RND      VA, #D0         ; VA = random & D0
$5D2    $1791   JP       $791            ; Jump to 791
$5D4    $012C   SYS      $12C            ; System call to 12C
$5D6    $85DD   UNKNOWN  85DD            ; Unknown 8xxx instruction
$5D8    $BC74   JP       V0, $C74        ; Jump to V0 + C74
$5DA    $26A4   CALL     $6A4            ; Call subroutine at 6A4
$5DC    $641A   LD       V4, #1A         ; Load 26 into V4
$5DE    $FDD7   UNKNOWN  FDD7            ; Unknown Fxxx instruction
$5E0    $EF9D   UNKNOWN  $EF9D           ; Unknown Exxx instruction
$5E2    $E45A   UNKNOWN  $E45A           ; Unknown Exxx instruction
$5E4    $2F9C   CALL     $F9C            ; Call subroutine at F9C
$5E6    $9D99   UNKNOWN  $9D99           ; Unknown 9xxx instruction
$5E8    $5228   UNKNOWN  $5228           ; Unknown 5xxx instruction
$5EA    $EE0B   UNKNOWN  $EE0B           ; Unknown Exxx instruction
$5EC    $E979   UNKNOWN  $E979           ; Unknown Exxx instruction
$5EE    $5B1E   UNKNOWN  $5B1E           ; Unknown 5xxx instruction
$5F0    $AE81   LD       I, $E81         ; Load E81 into I
$5F2    $8B41   OR       VB, V4          ; VB |= V4
$5F4    $19DB   JP       $9DB            ; Jump to 9DB
$5F6    $833A   UNKNOWN  833A            ; Unknown 8xxx instruction
$5F8    $60D7   LD       V0, #D7         ; Load 215 into V0
$5FA    $DA5F   DRW      VA, V5, #F      ; Draw 15-byte sprite at VA, V5
$5FC    $8041   OR       V0, V4          ; V0 |= V4
$5FE    $AA38   LD       I, $A38         ; Load A38 into I
$600    $6EB4   LD       VE, #B4         ; Load 180 into VE
$602    $2143   CALL     $143            ; Call subroutine at 143
$604    $AFC3   LD       I, $FC3         ; Load FC3 into I
$606    $242E   CALL     $42E            ; Call subroutine at 42E
$608    $B3BE   JP       V0, $3BE        ; Jump to V0 + 3BE
$60A    $FD80   UNKNOWN  FD80            ; Unknown Fxxx instruction
$60C    $CB0F   RND      VB, #0F         ; VB = random & 0F
$60E    $9421   UNKNOWN  $9421           ; Unknown 9xxx instruction
$610    $8996   SHR      V9              ; V9 >>= 1, VF = LSB
$612    $88B6   SHR      V8              ; V8 >>= 1, VF = LSB
$614    $2F10   CALL     $F10            ; Call subroutine at F10
$616    $A44E   LD       I, $44E         ; Load 44E into I
$618    $333C   SE       V3, #3C         ; Skip if V3 == 60
$61A    $653D   LD       V5, #3D         ; Load 61 into V5
$61C    $921F   UNKNOWN  $921F           ; Unknown 9xxx instruction
$61E    $1868   JP       $868            ; Jump to 868
$620    $4D69   SNE      VD, #69         ; Skip if VD != 105
$622    $B821   JP       V0, $821        ; Jump to V0 + 821
$624    $8ED7   SUBN     VE, VD          ; VE = VD - VE, VF = !borrow
$626    $A7C6   LD       I, $7C6         ; Load 7C6 into I
$628    $D791   DRW      V7, V9, #1      ; Draw 1-byte sprite at V7, V9
$62A    $D1CB   DRW      V1, VC, #B      ; Draw 11-byte sprite at V1, VC
$62C    $CEA3   RND      VE, #A3         ; VE = random & A3
$62E    $05DD   SYS      $5DD            ; System call to 5DD
$630    $4987   SNE      V9, #87         ; Skip if V9 != 135
$632    $40B0   SNE      V0, #B0         ; Skip if V0 != 176
$634    $A674   LD       I, $674         ; Load 674 into I
$636    $D94B   DRW      V9, V4, #B      ; Draw 11-byte sprite at V9, V4
$638    $0034   SYS      $034            ; System call to 034
$63A    $46F1   SNE      V6, #F1         ; Skip if V6 != 241
$63C    $7BEE   ADD      VB, #EE         ; Add 238 to VB
$63E    $395B   SE       V9, #5B         ; Skip if V9 == 91
$640    $455D   SNE      V5, #5D         ; Skip if V5 != 93
$642    $1FD4   JP       $FD4            ; Jump to FD4
$644    $F338   UNKNOWN  F338            ; Unknown Fxxx instruction
$646    $1EBA   JP       $EBA            ; Jump to EBA
$648    $24ED   CALL     $4ED            ; Call subroutine at 4ED
$64A    $D682   DRW      V6, V8, #2      ; Draw 2-byte sprite at V6, V8
$64C    $6F18   LD       VF, #18         ; Load 24 into VF
$64E    $B39D   JP       V0, $39D        ; Jump to V0 + 39D
$650    $D833   DRW      V8, V3, #3      ; Draw 3-byte sprite at V8, V3
$652    $7B56   ADD      VB, #56         ; Add 86 to VB
$654    $85A3   XOR      V5, VA          ; V5 ^= VA
$656    $BC9A   JP       V0, $C9A        ; Jump to V0 + C9A
$658    $5AE5   UNKNOWN  $5AE5           ; Unknown 5xxx instruction
$65A    $163B   JP       $63B            ; Jump to 63B
$65C    $ED9F   UNKNOWN  $ED9F           ; Unknown Exxx instruction
$65E    $E39F   UNKNOWN  $E39F           ; Unknown Exxx instruction
$660    $25AA   CALL     $5AA            ; Call subroutine at 5AA
$662    $990D   UNKNOWN  $990D           ; Unknown 9xxx instruction
$664    $5CBE   UNKNOWN  $5CBE           ; Unknown 5xxx instruction
$666    $6924   LD       V9, #24         ; Load 36 into V9
$668    $4CF0   SNE      VC, #F0         ; Skip if VC != 240
$66A    $263F   CALL     $63F            ; Call subroutine at 63F
$66C    $AF05   LD       I, $F05         ; Load F05 into I
$66E    $A6EB   LD       I, $6EB         ; Load 6EB into I
$670    $F6AC   UNKNOWN  F6AC            ; Unknown Fxxx instruction
$672    $3BEF   SE       VB, #EF         ; Skip if VB == 239
$674    $363D   SE       V6, #3D         ; Skip if V6 == 61
$676    $C348   RND      V3, #48         ; V3 = random & 48
$678    $96E3   UNKNOWN  $96E3           ; Unknown 9xxx instruction
$67A    $7726   ADD      V7, #26         ; Add 38 to V7
$67C    $B6D2   JP       V0, $6D2        ; Jump to V0 + 6D2
$67E    $76CE   ADD      V6, #CE         ; Add 206 to V6
$680    $139C   JP       $39C            ; Jump to 39C
$682    $531D   UNKNOWN  $531D           ; Unknown 5xxx instruction
$684    $9847   UNKNOWN  $9847           ; Unknown 9xxx instruction
$686    $EA7F   UNKNOWN  $EA7F           ; Unknown Exxx instruction
$688    $B3DD   JP       V0, $3DD        ; Jump to V0 + 3DD
$68A    $1BEF   JP       $BEF            ; Jump to BEF
$68C    $17D7   JP       $7D7            ; Jump to 7D7
$68E    $D544   DRW      V5, V4, #4      ; Draw 4-byte sprite at V5, V4
$690    $4975   SNE      V9, #75         ; Skip if V9 != 117
$692    $8318   UNKNOWN  8318            ; Unknown 8xxx instruction
$694    $2AE5   CALL     $AE5            ; Call subroutine at AE5
$696    $EB77   UNKNOWN  $EB77           ; Unknown Exxx instruction
$698    $970A   UNKNOWN  $970A           ; Unknown 9xxx instruction
$69A    $C94C   RND      V9, #4C         ; V9 = random & 4C
$69C    $7834   ADD      V8, #34         ; Add 52 to V8
$69E    $B0C1   JP       V0, $0C1        ; Jump to V0 + 0C1
$6A0    $F8BF   UNKNOWN  F8BF            ; Unknown Fxxx instruction
$6A2    $EAFC   UNKNOWN  $EAFC           ; Unknown Exxx instruction
$6A4    $8732   AND      V7, V3          ; V7 &= V3
$6A6    $C76B   RND      V7, #6B         ; V7 = random & 6B
$6A8    $2A0C   CALL     $A0C            ; Call subroutine at A0C
$6AA    $44B5   SNE      V4, #B5         ; Skip if V4 != 181
$6AC    $DA8F   DRW      VA, V8, #F      ; Draw 15-byte sprite at VA, V8
$6AE    $0D57   SYS      $D57            ; System call to D57
$6B0    $7DE4   ADD      VD, #E4         ; Add 228 to VD
$6B2    $5359   UNKNOWN  $5359           ; Unknown 5xxx instruction
$6B4    $003B   SYS      $03B            ; System call to 03B
$6B6    $8CDA   UNKNOWN  8CDA            ; Unknown 8xxx instruction
$6B8    $5F47   UNKNOWN  $5F47           ; Unknown 5xxx instruction
$6BA    $E9A6   UNKNOWN  $E9A6           ; Unknown Exxx instruction
$6BC    $94E2   UNKNOWN  $94E2           ; Unknown 9xxx instruction
$6BE    $C60A   RND      V6, #0A         ; V6 = random & 0A
$6C0    $75F7   ADD      V5, #F7         ; Add 247 to V5
$6C2    $0E93   SYS      $E93            ; System call to E93
$6C4    $C316   RND      V3, #16         ; V3 = random & 16
$6C6    $9453   UNKNOWN  $9453           ; Unknown 9xxx instruction
$6C8    $516B   UNKNOWN  $516B           ; Unknown 5xxx instruction
$6CA    $3B02   SE       VB, #02         ; Skip if VB == 2
$6CC    $330A   SE       V3, #0A         ; Skip if V3 == 10
$6CE    $7984   ADD      V9, #84         ; Add 132 to V9
$6D0    $4853   SNE      V8, #53         ; Skip if V8 != 83
$6D2    $097A   SYS      $97A            ; System call to 97A
$6D4    $A22E   LD       I, $22E         ; Load 22E into I
$6D6    $BC83   JP       V0, $C83        ; Jump to V0 + C83
$6D8    $8D93   XOR      VD, V9          ; VD ^= V9
$6DA    $7A04   ADD      VA, #04         ; Add 4 to VA
$6DC    $7FEE   ADD      VF, #EE         ; Add 238 to VF
$6DE    $C1CA   RND      V1, #CA         ; V1 = random & CA
$6E0    $0F88   SYS      $F88            ; System call to F88
$6E2    $8439   UNKNOWN  8439            ; Unknown 8xxx instruction
$6E4    $B24B   JP       V0, $24B        ; Jump to V0 + 24B
$6E6    $0AD4   SYS      $AD4            ; System call to AD4
$6E8    $5E1F   UNKNOWN  $5E1F           ; Unknown 5xxx instruction
$6EA    $6DF8   LD       VD, #F8         ; Load 248 into VD
$6EC    $FF35   UNKNOWN  FF35            ; Unknown Fxxx instruction
$6EE    $26A3   CALL     $6A3            ; Call subroutine at 6A3
$6F0    $55AF   UNKNOWN  $55AF           ; Unknown 5xxx instruction
$6F2    $C0A3   RND      V0, #A3         ; V0 = random & A3
$6F4    $2904   CALL     $904            ; Call subroutine at 904
$6F6    $80B0   LD       V0, VB          ; V0 = VB
$6F8    $BFAE   JP       V0, $FAE        ; Jump to V0 + FAE
$6FA    $5037   UNKNOWN  $5037           ; Unknown 5xxx instruction
$6FC    $FE40   UNKNOWN  FE40            ; Unknown Fxxx instruction
$6FE    $DCFF   DRW      VC, VF, #F      ; Draw 15-byte sprite at VC, VF
$700    $4E55   SNE      VE, #55         ; Skip if VE != 85
$702    $2052   CALL     $052            ; Call subroutine at 052
$704    $CACA   RND      VA, #CA         ; VA = random & CA
$706    $5AC1   UNKNOWN  $5AC1           ; Unknown 5xxx instruction
$708    $8F1F   UNKNOWN  8F1F            ; Unknown 8xxx instruction
$70A    $BA04   JP       V0, $A04        ; Jump to V0 + A04
$70C    $DB2C   DRW      VB, V2, #C      ; Draw 12-byte sprite at VB, V2
$70E    $19E6   JP       $9E6            ; Jump to 9E6
$710    $0B08   SYS      $B08            ; System call to B08
$712    $A7DA   LD       I, $7DA         ; Load 7DA into I
$714    $E1F7   UNKNOWN  $E1F7           ; Unknown Exxx instruction
$716    $E6E0   UNKNOWN  $E6E0           ; Unknown Exxx instruction
$718    $C303   RND      V3, #03         ; V3 = random & 03
$71A    $F059   UNKNOWN  F059            ; Unknown Fxxx instruction
$71C    $FF59   UNKNOWN  FF59            ; Unknown Fxxx instruction
$71E    $7593   ADD      V5, #93         ; Add 147 to V5
$720    $3DFD   SE       VD, #FD         ; Skip if VD == 253
$722    $54A6   UNKNOWN  $54A6           ; Unknown 5xxx instruction
$724    $F25E   UNKNOWN  F25E            ; Unknown Fxxx instruction
$726    $2B00   CALL     $B00            ; Call subroutine at B00
$728    $AF0C   LD       I, $F0C         ; Load F0C into I
$72A    $FB6F   UNKNOWN  FB6F            ; Unknown Fxxx instruction
$72C    $2966   CALL     $966            ; Call subroutine at 966
$72E    $14B7   JP       $4B7            ; Jump to 4B7
$730    $83C4   ADD      V3, VC          ; V3 += VC, VF = carry
$732    $F1BB   UNKNOWN  F1BB            ; Unknown Fxxx instruction
$734    $7DFE   ADD      VD, #FE         ; Add 254 to VD
$736    $F5BD   UNKNOWN  F5BD            ; Unknown Fxxx instruction
$738    $7ADE   ADD      VA, #DE         ; Add 222 to VA
$73A    $BB03   JP       V0, $B03        ; Jump to V0 + B03
$73C    $96B1   UNKNOWN  $96B1           ; Unknown 9xxx instruction
$73E    $EAC9   UNKNOWN  $EAC9           ; Unknown Exxx instruction
$740    $7085   ADD      V0, #85         ; Add 133 to V0
$742    $16FA   JP       $6FA            ; Jump to 6FA
$744    $4D96   SNE      VD, #96         ; Skip if VD != 150
$746    $0F4E   SYS      $F4E            ; System call to F4E
$748    $28DC   CALL     $8DC            ; Call subroutine at 8DC
$74A    $41D9   SNE      V1, #D9         ; Skip if V1 != 217
$74C    $C762   RND      V7, #62         ; V7 = random & 62
$74E    $BE48   JP       V0, $E48        ; Jump to V0 + E48
$750    $84D9   UNKNOWN  84D9            ; Unknown 8xxx instruction
$752    $5B41   UNKNOWN  $5B41           ; Unknown 5xxx instruction
$754    $72BB   ADD      V2, #BB         ; Add 187 to V2
$756    $15CE   JP       $5CE            ; Jump to 5CE
$758    $B2BA   JP       V0, $2BA        ; Jump to V0 + 2BA
$75A    $22ED   CALL     $2ED            ; Call subroutine at 2ED
$75C    $C6B7   RND      V6, #B7         ; V6 = random & B7
$75E    $7A3B   ADD      VA, #3B         ; Add 59 to VA
$760    $8D41   OR       VD, V4          ; VD |= V4
$762    $645C   LD       V4, #5C         ; Load 92 into V4
$764    $99BB   UNKNOWN  $99BB           ; Unknown 9xxx instruction
$766    $4672   SNE      V6, #72         ; Skip if V6 != 114
$768    $91B5   UNKNOWN  $91B5           ; Unknown 9xxx instruction
$76A    $1EF4   JP       $EF4            ; Jump to EF4
$76C    $A188   LD       I, $188         ; Load 188 into I
$76E    $C13C   RND      V1, #3C         ; V1 = random & 3C
$770    $7237   ADD      V2, #37         ; Add 55 to V2
$772    $75A3   ADD      V5, #A3         ; Add 163 to V5
$774    $54AF   UNKNOWN  $54AF           ; Unknown 5xxx instruction
$776    $8465   SUB      V4, V6          ; V4 -= V6, VF = !borrow
$778    $1293   JP       $293            ; Jump to 293
$77A    $A7A9   LD       I, $7A9         ; Load 7A9 into I
$77C    $9D82   UNKNOWN  $9D82           ; Unknown 9xxx instruction
$77E    $62C9   LD       V2, #C9         ; Load 201 into V2
$780    $8239   UNKNOWN  8239            ; Unknown 8xxx instruction
$782    $3DB5   SE       VD, #B5         ; Skip if VD == 181
$784    $119F   JP       $19F            ; Jump to 19F
$786    $11F5   JP       $1F5            ; Jump to 1F5
$788    $A5CA   LD       I, $5CA         ; Load 5CA into I
$78A    $C4B3   RND      V4, #B3         ; V4 = random & B3
$78C    $531A   UNKNOWN  $531A           ; Unknown 5xxx instruction
$78E    $DA0A   DRW      VA, V0, #A      ; Draw 10-byte sprite at VA, V0
$790    $B808   JP       V0, $808        ; Jump to V0 + 808
$792    $84F7   SUBN     V4, VF          ; V4 = VF - V4, VF = !borrow
$794    $93DC   UNKNOWN  $93DC           ; Unknown 9xxx instruction
$796    $0487   SYS      $487            ; System call to 487
$798    $5568   UNKNOWN  $5568           ; Unknown 5xxx instruction
$79A    $A0F7   LD       I, $0F7         ; Load 0F7 into I
$79C    $4568   SNE      V5, #68         ; Skip if V5 != 104
$79E    $A0C6   LD       I, $0C6         ; Load 0C6 into I
$7A0    $08DE   SYS      $8DE            ; System call to 8DE
$7A2    $324B   SE       V2, #4B         ; Skip if V2 == 75
$7A4    $6521   LD       V5, #21         ; Load 33 into V5
$7A6    $2598   CALL     $598            ; Call subroutine at 598
$7A8    $DF85   DRW      VF, V8, #5      ; Draw 5-byte sprite at VF, V8
$7AA    $8A8C   UNKNOWN  8A8C            ; Unknown 8xxx instruction
$7AC    $194E   JP       $94E            ; Jump to 94E
$7AE    $B4C1   JP       V0, $4C1        ; Jump to V0 + 4C1
$7B0    $5D07   UNKNOWN  $5D07           ; Unknown 5xxx instruction
$7B2    $96A4   UNKNOWN  $96A4           ; Unknown 9xxx instruction
$7B4    $ED6F   UNKNOWN  $ED6F           ; Unknown Exxx instruction
$7B6    $CE65   RND      VE, #65         ; VE = random & 65
$7B8    $D9DB   DRW      V9, VD, #B      ; Draw 11-byte sprite at V9, VD
$7BA    $0A13   SYS      $A13            ; System call to A13
$7BC    $AEDE   LD       I, $EDE         ; Load EDE into I
$7BE    $825E   SHL      V2              ; V2 <<= 1, VF = MSB
$7C0    $452D   SNE      V5, #2D         ; Skip if V5 != 45
$7C2    $8064   ADD      V0, V6          ; V0 += V6, VF = carry
$7C4    $C997   RND      V9, #97         ; V9 = random & 97
$7C6    $78A1   ADD      V8, #A1         ; Add 161 to V8
$7C8    $8AA5   SUB      VA, VA          ; VA -= VA, VF = !borrow
$7CA    $CB57   RND      VB, #57         ; VB = random & 57
$7CC    $CDEF   RND      VD, #EF         ; VD = random & EF
$7CE    $F2B0   UNKNOWN  F2B0            ; Unknown Fxxx instruction
$7D0    $881C   UNKNOWN  881C            ; Unknown 8xxx instruction
$7D2    $1B69   JP       $B69            ; Jump to B69
$7D4    $A8FF   LD       I, $8FF         ; Load 8FF into I
$7D6    $54D7   UNKNOWN  $54D7           ; Unknown 5xxx instruction
$7D8    $614E   LD       V1, #4E         ; Load 78 into V1
$7DA    $3518   SE       V5, #18         ; Skip if V5 == 24
$7DC    $2FB5   CALL     $FB5            ; Call subroutine at FB5
$7DE    $8CF1   OR       VC, VF          ; VC |= VF
$7E0    $018E   SYS      $18E            ; System call to 18E
$7E2    $FD94   UNKNOWN  FD94            ; Unknown Fxxx instruction
$7E4    $27C9   CALL     $7C9            ; Call subroutine at 7C9
$7E6    $E6FF   UNKNOWN  $E6FF           ; Unknown Exxx instruction
$7E8    $559D   UNKNOWN  $559D           ; Unknown 5xxx instruction
$7EA    $9BA0   SNE      VB, VA          ; Skip if VB != VA
$7EC    $D6D1   DRW      V6, VD, #1      ; Draw 1-byte sprite at V6, VD
$7EE    $CBD5   RND      VB, #D5         ; VB = random & D5
$7F0    $5C7B   UNKNOWN  $5C7B           ; Unknown 5xxx instruction
$7F2    $0394   SYS      $394            ; System call to 394
$7F4    $7340   ADD      V3, #40         ; Add 64 to V3
$7F6    $1F2C   JP       $F2C            ; Jump to F2C
$7F8    $D13B   DRW      V1, V3, #B      ; Draw 11-byte sprite at V1, V3
$7FA    $3787   SE       V7, #87         ; Skip if V7 == 135
$7FC    $3420   SE       V4, #20         ; Skip if V4 == 32
$7FE    $D2EC   DRW      V2, VE, #C      ; Draw 12-byte sprite at V2, VE
$800    $7731   ADD      V7, #31         ; Add 49 to V7
$802    $74D5   ADD      V4, #D5         ; Add 213 to V4
$804    $A3AC   LD       I, $3AC         ; Load 3AC into I
$806    $1BF7   JP       $BF7            ; Jump to BF7
$808    $4C82   SNE      VC, #82         ; Skip if VC != 130
$80A    $B780   JP       V0, $780        ; Jump to V0 + 780
$80C    $751E   ADD      V5, #1E         ; Add 30 to V5
$80E    $9010   SNE      V0, V1          ; Skip if V0 != V1
$810    $0720   SYS      $720            ; System call to 720
$812    $3B2B   SE       VB, #2B         ; Skip if VB == 43
$814    $745C   ADD      V4, #5C         ; Add 92 to V4
$816    $E89E   SKP      V8              ; Skip if key V8 pressed
$818    $052A   SYS      $52A            ; System call to 52A
$81A    $70FD   ADD      V0, #FD         ; Add 253 to V0
$81C    $5C5A   UNKNOWN  $5C5A           ; Unknown 5xxx instruction
$81E    $5B4F   UNKNOWN  $5B4F           ; Unknown 5xxx instruction
$820    $306C   SE       V0, #6C         ; Skip if V0 == 108
$822    $CA24   RND      VA, #24         ; VA = random & 24
$824    $163A   JP       $63A            ; Jump to 63A
$826    $0D33   SYS      $D33            ; System call to D33
$828    $1A68   JP       $A68            ; Jump to A68
$82A    $212C   CALL     $12C            ; Call subroutine at 12C
$82C    $2CB8   CALL     $CB8            ; Call subroutine at CB8
$82E    $80B8   UNKNOWN  80B8            ; Unknown 8xxx instruction
$830    $7284   ADD      V2, #84         ; Add 132 to V2
$832    $2AD7   CALL     $AD7            ; Call subroutine at AD7
$834    $BDF2   JP       V0, $DF2        ; Jump to V0 + DF2
$836    $A3D0   LD       I, $3D0         ; Load 3D0 into I
$838    $62F8   LD       V2, #F8         ; Load 248 into V2
$83A    $22C5   CALL     $2C5            ; Call subroutine at 2C5
$83C    $6EF8   LD       VE, #F8         ; Load 248 into VE
$83E    $E743   UNKNOWN  $E743           ; Unknown Exxx instruction
$840    $83C8   UNKNOWN  83C8            ; Unknown 8xxx instruction
$842    $CED2   RND      VE, #D2         ; VE = random & D2
$844    $34A3   SE       V4, #A3         ; Skip if V4 == 163
$846    $2960   CALL     $960            ; Call subroutine at 960
$848    $136A   JP       $36A            ; Jump to 36A
$84A    $93E5   UNKNOWN  $93E5           ; Unknown 9xxx instruction
$84C    $E15C   UNKNOWN  $E15C           ; Unknown Exxx instruction
$84E    $5D9B   UNKNOWN  $5D9B           ; Unknown 5xxx instruction
$850    $0C47   SYS      $C47            ; System call to C47
$852    $C753   RND      V7, #53         ; V7 = random & 53
$854    $63C8   LD       V3, #C8         ; Load 200 into V3
$856    $5379   UNKNOWN  $5379           ; Unknown 5xxx instruction
$858    $6019   LD       V0, #19         ; Load 25 into V0
$85A    $CCF7   RND      VC, #F7         ; VC = random & F7
$85C    $1FFD   JP       $FFD            ; Jump to FFD
$85E    $30D0   SE       V0, #D0         ; Skip if V0 == 208
$860    $D8E4   DRW      V8, VE, #4      ; Draw 4-byte sprite at V8, VE
$862    $7C78   ADD      VC, #78         ; Add 120 to VC
$864    $7A46   ADD      VA, #46         ; Add 70 to VA
$866    $6F4C   LD       VF, #4C         ; Load 76 into VF
$868    $394C   SE       V9, #4C         ; Skip if V9 == 76
$86A    $8A37   SUBN     VA, V3          ; VA = V3 - VA, VF = !borrow
$86C    $8F43   XOR      VF, V4          ; VF ^= V4
$86E    $A9AA   LD       I, $9AA         ; Load 9AA into I
$870    $882C   UNKNOWN  882C            ; Unknown 8xxx instruction
$872    $1228   JP       $228            ; Jump to 228
$874    $3DBF   SE       VD, #BF         ; Skip if VD == 191
$876    $1B8E   JP       $B8E            ; Jump to B8E
$878    $FE65   LD       VE, [I]         ; Load V0-VE from I
$87A    $6635   LD       V6, #35         ; Load 53 into V6
$87C    $193A   JP       $93A            ; Jump to 93A
$87E    $3B1A   SE       VB, #1A         ; Skip if VB == 26
$880    $91F6   UNKNOWN  $91F6           ; Unknown 9xxx instruction
$882    $F868   UNKNOWN  F868            ; Unknown Fxxx instruction
$884    $6F95   LD       VF, #95         ; Load 149 into VF
$886    $A152   LD       I, $152         ; Load 152 into I
$888    $79AB   ADD      V9, #AB         ; Add 171 to V9
$88A    $B846   JP       V0, $846        ; Jump to V0 + 846
$88C    $7B48   ADD      VB, #48         ; Add 72 to VB
$88E    $3B5E   SE       VB, #5E         ; Skip if VB == 94
$890    $E866   UNKNOWN  $E866           ; Unknown Exxx instruction
$892    $BFAA   JP       V0, $FAA        ; Jump to V0 + FAA
$894    $BD42   JP       V0, $D42        ; Jump to V0 + D42
$896    $144C   JP       $44C            ; Jump to 44C
$898    $9451   UNKNOWN  $9451           ; Unknown 9xxx instruction
$89A    $1CA0   JP       $CA0            ; Jump to CA0
$89C    $DC93   DRW      VC, V9, #3      ; Draw 3-byte sprite at VC, V9
$89E    $57F8   UNKNOWN  $57F8           ; Unknown 5xxx instruction
$8A0    $4B17   SNE      VB, #17         ; Skip if VB != 23
$8A2    $DE7A   DRW      VE, V7, #A      ; Draw 10-byte sprite at VE, V7
$8A4    $DEDE   DRW      VE, VD, #E      ; Draw 14-byte sprite at VE, VD
$8A6    $3867   SE       V8, #67         ; Skip if V8 == 103
$8A8    $6519   LD       V5, #19         ; Load 25 into V5
$8AA    $6055   LD       V0, #55         ; Load 85 into V0
$8AC    $7C42   ADD      VC, #42         ; Add 66 to VC
$8AE    $FB65   LD       VB, [I]         ; Load V0-VB from I
$8B0    $37EE   SE       V7, #EE         ; Skip if V7 == 238
$8B2    $720B   ADD      V2, #0B         ; Add 11 to V2
$8B4    $89F0   LD       V9, VF          ; V9 = VF
$8B6    $18AE   JP       $8AE            ; Jump to 8AE
$8B8    $3FD4   SE       VF, #D4         ; Skip if VF == 212
$8BA    $8805   SUB      V8, V0          ; V8 -= V0, VF = !borrow
$8BC    $444E   SNE      V4, #4E         ; Skip if V4 != 78
$8BE    $BB4B   JP       V0, $B4B        ; Jump to V0 + B4B
$8C0    $04EE   SYS      $4EE            ; System call to 4EE
$8C2    $63E5   LD       V3, #E5         ; Load 229 into V3
$8C4    $38B4   SE       V8, #B4         ; Skip if V8 == 180
$8C6    $1AC1   JP       $AC1            ; Jump to AC1
$8C8    $988B   UNKNOWN  $988B           ; Unknown 9xxx instruction
$8CA    $7D23   ADD      VD, #23         ; Add 35 to VD
$8CC    $D351   DRW      V3, V5, #1      ; Draw 1-byte sprite at V3, V5
$8CE    $2F0D   CALL     $F0D            ; Call subroutine at F0D
$8D0    $7748   ADD      V7, #48         ; Add 72 to V7
$8D2    $3669   SE       V6, #69         ; Skip if V6 == 105
$8D4    $ADDA   LD       I, $DDA         ; Load DDA into I
$8D6    $67F7   LD       V7, #F7         ; Load 247 into V7
$8D8    $C499   RND      V4, #99         ; V4 = random & 99
$8DA    $26D6   CALL     $6D6            ; Call subroutine at 6D6
$8DC    $AA3A   LD       I, $A3A         ; Load A3A into I
$8DE    $F701   UNKNOWN  F701            ; Unknown Fxxx instruction
$8E0    $99EB   UNKNOWN  $99EB           ; Unknown 9xxx instruction
$8E2    $A687   LD       I, $687         ; Load 687 into I
$8E4    $8262   AND      V2, V6          ; V2 &= V6
$8E6    $7E55   ADD      VE, #55         ; Add 85 to VE
$8E8    $38AF   SE       V8, #AF         ; Skip if V8 == 175
$8EA    $50E3   UNKNOWN  $50E3           ; Unknown 5xxx instruction
$8EC    $BEA8   JP       V0, $EA8        ; Jump to V0 + EA8
$8EE    $4F5C   SNE      VF, #5C         ; Skip if VF != 92
$8F0    $D55D   DRW      V5, V5, #D      ; Draw 13-byte sprite at V5, V5
$8F2    $5AD4   UNKNOWN  $5AD4           ; Unknown 5xxx instruction
$8F4    $F6BE   UNKNOWN  F6BE            ; Unknown Fxxx instruction
$8F6    $8F39   UNKNOWN  8F39            ; Unknown 8xxx instruction
$8F8    $A8E7   LD       I, $8E7         ; Load 8E7 into I
$8FA    $855C   UNKNOWN  855C            ; Unknown 8xxx instruction
$8FC    $D486   DRW      V4, V8, #6      ; Draw 6-byte sprite at V4, V8
$8FE    $E0C2   UNKNOWN  $E0C2           ; Unknown Exxx instruction
$900    $088E   SYS      $88E            ; System call to 88E
$902    $5E99   UNKNOWN  $5E99           ; Unknown 5xxx instruction
$904    $E806   UNKNOWN  $E806           ; Unknown Exxx instruction
$906    $BA1A   JP       V0, $A1A        ; Jump to V0 + A1A
$908    $A894   LD       I, $894         ; Load 894 into I
$90A    $17B3   JP       $7B3            ; Jump to 7B3
$90C    $155C   JP       $55C            ; Jump to 55C
$90E    $32DC   SE       V2, #DC         ; Skip if V2 == 220
$910    $9E49   UNKNOWN  $9E49           ; Unknown 9xxx instruction
$912    $F818   LD       ST, V8          ; Sound timer = V8
$914    $0AE4   SYS      $AE4            ; System call to AE4
$916    $452B   SNE      V5, #2B         ; Skip if V5 != 43
$918    $9625   UNKNOWN  $9625           ; Unknown 9xxx instruction
$91A    $31A5   SE       V1, #A5         ; Skip if V1 == 165
$91C    $62C2   LD       V2, #C2         ; Load 194 into V2
$91E    $F604   UNKNOWN  F604            ; Unknown Fxxx instruction
$920    $BF89   JP       V0, $F89        ; Jump to V0 + F89
$922    $92FB   UNKNOWN  $92FB           ; Unknown 9xxx instruction
$924    $C34B   RND      V3, #4B         ; V3 = random & 4B
$926    $5449   UNKNOWN  $5449           ; Unknown 5xxx instruction
$928    $D9EB   DRW      V9, VE, #B      ; Draw 11-byte sprite at V9, VE
$92A    $F0B8   UNKNOWN  F0B8            ; Unknown Fxxx instruction
$92C    $03E0   SYS      $3E0            ; System call to 3E0
$92E    $B1F4   JP       V0, $1F4        ; Jump to V0 + 1F4
$930    $5D97   UNKNOWN  $5D97           ; Unknown 5xxx instruction
$932    $79F1   ADD      V9, #F1         ; Add 241 to V9
$934    $942B   UNKNOWN  $942B           ; Unknown 9xxx instruction
$936    $438B   SNE      V3, #8B         ; Skip if V3 != 139
$938    $439D   SNE      V3, #9D         ; Skip if V3 != 157
$93A    $EE69   UNKNOWN  $EE69           ; Unknown Exxx instruction
$93C    $1208   JP       $208            ; Jump to 208
$93E    $284A   CALL     $84A            ; Call subroutine at 84A
$940    $6C61   LD       VC, #61         ; Load 97 into VC
$942    $34A0   SE       V4, #A0         ; Skip if V4 == 160
$944    $F4CB   UNKNOWN  F4CB            ; Unknown Fxxx instruction
$946    $4F4C   SNE      VF, #4C         ; Skip if VF != 76
$948    $3E4A   SE       VE, #4A         ; Skip if VE == 74
$94A    $2D1C   CALL     $D1C            ; Call subroutine at D1C
$94C    $7CEB   ADD      VC, #EB         ; Add 235 to VC
$94E    $9C9A   UNKNOWN  $9C9A           ; Unknown 9xxx instruction
$950    $D39B   DRW      V3, V9, #B      ; Draw 11-byte sprite at V3, V9
$952    $E1BF   UNKNOWN  $E1BF           ; Unknown Exxx instruction
$954    $8767   SUBN     V7, V6          ; V7 = V6 - V7, VF = !borrow
$956    $124F   JP       $24F            ; Jump to 24F
$958    $790A   ADD      V9, #0A         ; Add 10 to V9
$95A    $DD49   DRW      VD, V4, #9      ; Draw 9-byte sprite at VD, V4
$95C    $D5B3   DRW      V5, VB, #3      ; Draw 3-byte sprite at V5, VB
$95E    $750E   ADD      V5, #0E         ; Add 14 to V5
$960    $4BE6   SNE      VB, #E6         ; Skip if VB != 230
$962    $B6AF   JP       V0, $6AF        ; Jump to V0 + 6AF
$964    $1E5D   JP       $E5D            ; Jump to E5D
$966    $F53B   UNKNOWN  F53B            ; Unknown Fxxx instruction
$968    $E2E9   UNKNOWN  $E2E9           ; Unknown Exxx instruction
$96A    $05A5   SYS      $5A5            ; System call to 5A5
$96C    $F97A   UNKNOWN  F97A            ; Unknown Fxxx instruction
$96E    $EE98   UNKNOWN  $EE98           ; Unknown Exxx instruction
$970    $A69F   LD       I, $69F         ; Load 69F into I
$972    $9CF5   UNKNOWN  $9CF5           ; Unknown 9xxx instruction
$974    $2BDD   CALL     $BDD            ; Call subroutine at BDD
$976    $04EC   SYS      $4EC            ; System call to 4EC
$978    $909E   UNKNOWN  $909E           ; Unknown 9xxx instruction
$97A    $689B   LD       V8, #9B         ; Load 155 into V8
$97C    $6EEE   LD       VE, #EE         ; Load 238 into VE
$97E    $2B1B   CALL     $B1B            ; Call subroutine at B1B
$980    $462E   SNE      V6, #2E         ; Skip if V6 != 46
$982    $4F73   SNE      VF, #73         ; Skip if VF != 115
$984    $5AEB   UNKNOWN  $5AEB           ; Unknown 5xxx instruction
$986    $434F   SNE      V3, #4F         ; Skip if V3 != 79
$988    $A01E   LD       I, $01E         ; Load 01E into I
$98A    $C666   RND      V6, #66         ; V6 = random & 66
$98C    $22F8   CALL     $2F8            ; Call subroutine at 2F8
$98E    $527F   UNKNOWN  $527F           ; Unknown 5xxx instruction
$990    $2699   CALL     $699            ; Call subroutine at 699
$992    $11BB   JP       $1BB            ; Jump to 1BB
$994    $0D87   SYS      $D87            ; System call to D87
$996    $D161   DRW      V1, V6, #1      ; Draw 1-byte sprite at V1, V6
$998    $1407   JP       $407            ; Jump to 407
$99A    $2182   CALL     $182            ; Call subroutine at 182
$99C    $46D9   SNE      V6, #D9         ; Skip if V6 != 217
$99E    $191D   JP       $91D            ; Jump to 91D
$9A0    $604C   LD       V0, #4C         ; Load 76 into V0
$9A2    $EDE6   UNKNOWN  $EDE6           ; Unknown Exxx instruction
$9A4    $9560   SNE      V5, V6          ; Skip if V5 != V6
$9A6    $8CD4   ADD      VC, VD          ; VC += VD, VF = carry
$9A8    $9700   SNE      V7, V0          ; Skip if V7 != V0
$9AA    $ED2F   UNKNOWN  $ED2F           ; Unknown Exxx instruction
$9AC    $95FA   UNKNOWN  $95FA           ; Unknown 9xxx instruction
$9AE    $7383   ADD      V3, #83         ; Add 131 to V3
$9B0    $4113   SNE      V1, #13         ; Skip if V1 != 19
$9B2    $CD80   RND      VD, #80         ; VD = random & 80
$9B4    $31A9   SE       V1, #A9         ; Skip if V1 == 169
$9B6    $1E44   JP       $E44            ; Jump to E44
$9B8    $04E8   SYS      $4E8            ; System call to 4E8
$9BA    $1265   JP       $265            ; Jump to 265
$9BC    $3735   SE       V7, #35         ; Skip if V7 == 53
$9BE    $7935   ADD      V9, #35         ; Add 53 to V9
$9C0    $CFFC   RND      VF, #FC         ; VF = random & FC
$9C2    $0A2C   SYS      $A2C            ; System call to A2C
$9C4    $58D5   UNKNOWN  $58D5           ; Unknown 5xxx instruction
$9C6    $8DEB   UNKNOWN  8DEB            ; Unknown 8xxx instruction
$9C8    $172A   JP       $72A            ; Jump to 72A
$9CA    $7C6E   ADD      VC, #6E         ; Add 110 to VC
$9CC    $F840   UNKNOWN  F840            ; Unknown Fxxx instruction
$9CE    $A188   LD       I, $188         ; Load 188 into I
$9D0    $A4D4   LD       I, $4D4         ; Load 4D4 into I
$9D2    $9FC3   UNKNOWN  $9FC3           ; Unknown 9xxx instruction
$9D4    $0798   SYS      $798            ; System call to 798
$9D6    $083C   SYS      $83C            ; System call to 83C
$9D8    $D584   DRW      V5, V8, #4      ; Draw 4-byte sprite at V5, V8
$9DA    $34F6   SE       V4, #F6         ; Skip if V4 == 246
$9DC    $D0A8   DRW      V0, VA, #8      ; Draw 8-byte sprite at V0, VA
$9DE    $C573   RND      V5, #73         ; V5 = random & 73
$9E0    $0AFA   SYS      $AFA            ; System call to AFA
$9E2    $2A36   CALL     $A36            ; Call subroutine at A36
$9E4    $F8F6   UNKNOWN  F8F6            ; Unknown Fxxx instruction
$9E6    $3039   SE       V0, #39         ; Skip if V0 == 57
$9E8    $DF6F   DRW      VF, V6, #F      ; Draw 15-byte sprite at VF, V6
$9EA    $3D65   SE       VD, #65         ; Skip if VD == 101
$9EC    $2DDC   CALL     $DDC            ; Call subroutine at DDC
$9EE    $C2EE   RND      V2, #EE         ; V2 = random & EE
$9F0    $C6B2   RND      V6, #B2         ; V6 = random & B2
$9F2    $3F4C   SE       VF, #4C         ; Skip if VF == 76
$9F4    $BEBC   JP       V0, $EBC        ; Jump to V0 + EBC
$9F6    $9C11   UNKNOWN  $9C11           ; Unknown 9xxx instruction
$9F8    $C131   RND      V1, #31         ; V1 = random & 31
$9FA    $505C   UNKNOWN  $505C           ; Unknown 5xxx instruction
$9FC    $EF62   UNKNOWN  $EF62           ; Unknown Exxx instruction
$9FE    $B4E9   JP       V0, $4E9        ; Jump to V0 + 4E9
$A00    $2F33   CALL     $F33            ; Call subroutine at F33
$A02    $2606   CALL     $606            ; Call subroutine at 606
$A04    $7339   ADD      V3, #39         ; Add 57 to V3
$A06    $893C   UNKNOWN  893C            ; Unknown 8xxx instruction
$A08    $4F0C   SNE      VF, #0C         ; Skip if VF != 12
$A0A    $3D34   SE       VD, #34         ; Skip if VD == 52
$A0C    $B54A   JP       V0, $54A        ; Jump to V0 + 54A
$A0E    $9328   UNKNOWN  $9328           ; Unknown 9xxx instruction
$A10    $9BD5   UNKNOWN  $9BD5           ; Unknown 9xxx instruction
$A12    $5B36   UNKNOWN  $5B36           ; Unknown 5xxx instruction
$A14    $4B19   SNE      VB, #19         ; Skip if VB != 25
$A16    $51D4   UNKNOWN  $51D4           ; Unknown 5xxx instruction
$A18    $6B1D   LD       VB, #1D         ; Load 29 into VB
$A1A    $3674   SE       V6, #74         ; Skip if V6 == 116
$A1C    $04C0   SYS      $4C0            ; System call to 4C0
$A1E    $BA74   JP       V0, $A74        ; Jump to V0 + A74
$A20    $0128   SYS      $128            ; System call to 128
$A22    $8668   UNKNOWN  8668            ; Unknown 8xxx instruction
$A24    $FF54   UNKNOWN  FF54            ; Unknown Fxxx instruction
$A26    $31DA   SE       V1, #DA         ; Skip if V1 == 218
$A28    $CF4A   RND      VF, #4A         ; VF = random & 4A
$A2A    $69E0   LD       V9, #E0         ; Load 224 into V9
$A2C    $F28A   UNKNOWN  F28A            ; Unknown Fxxx instruction
$A2E    $0515   SYS      $515            ; System call to 515
$A30    $75E5   ADD      V5, #E5         ; Add 229 to V5
$A32    $BA15   JP       V0, $A15        ; Jump to V0 + A15
$A34    $272D   CALL     $72D            ; Call subroutine at 72D
$A36    $A317   LD       I, $317         ; Load 317 into I
$A38    $DD58   DRW      VD, V5, #8      ; Draw 8-byte sprite at VD, V5
$A3A    $1E4B   JP       $E4B            ; Jump to E4B
$A3C    $12B1   JP       $2B1            ; Jump to 2B1
$A3E    $EB5F   UNKNOWN  $EB5F           ; Unknown Exxx instruction
$A40    $6093   LD       V0, #93         ; Load 147 into V0
$A42    $ECEA   UNKNOWN  $ECEA           ; Unknown Exxx instruction
$A44    $F554   UNKNOWN  F554            ; Unknown Fxxx instruction
$A46    $577B   UNKNOWN  $577B           ; Unknown 5xxx instruction
$A48    $2A76   CALL     $A76            ; Call subroutine at A76
$A4A    $DFCC   DRW      VF, VC, #C      ; Draw 12-byte sprite at VF, VC
$A4C    $1087   JP       $087            ; Jump to 087
$A4E    $04E2   SYS      $4E2            ; System call to 4E2
$A50    $015A   SYS      $15A            ; System call to 15A
$A52    $73CE   ADD      V3, #CE         ; Add 206 to V3
$A54    $569C   UNKNOWN  $569C           ; Unknown 5xxx instruction
$A56    $BF22   JP       V0, $F22        ; Jump to V0 + F22
$A58    $3DC9   SE       VD, #C9         ; Skip if VD == 201
$A5A    $4697   SNE      V6, #97         ; Skip if V6 != 151
$A5C    $4D47   SNE      VD, #47         ; Skip if VD != 71
$A5E    $AAE2   LD       I, $AE2         ; Load AE2 into I
$A60    $AF47   LD       I, $F47         ; Load F47 into I
$A62    $64F7   LD       V4, #F7         ; Load 247 into V4
$A64    $80EB   UNKNOWN  80EB            ; Unknown 8xxx instruction
$A66    $A8C1   LD       I, $8C1         ; Load 8C1 into I
$A68    $40E5   SNE      V0, #E5         ; Skip if V0 != 229
$A6A    $D18F   DRW      V1, V8, #F      ; Draw 15-byte sprite at V1, V8
$A6C    $358E   SE       V5, #8E         ; Skip if V5 == 142
$A6E    $04C5   SYS      $4C5            ; System call to 4C5
$A70    $14EA   JP       $4EA            ; Jump to 4EA
$A72    $AB18   LD       I, $B18         ; Load B18 into I
$A74    $9A88   UNKNOWN  $9A88           ; Unknown 9xxx instruction
$A76    $1FC9   JP       $FC9            ; Jump to FC9
$A78    $878B   UNKNOWN  878B            ; Unknown 8xxx instruction
$A7A    $A8BB   LD       I, $8BB         ; Load 8BB into I
$A7C    $BB45   JP       V0, $B45        ; Jump to V0 + B45
$A7E    $18B3   JP       $8B3            ; Jump to 8B3
$A80    $A44C   LD       I, $44C         ; Load 44C into I
$A82    $CAF3   RND      VA, #F3         ; VA = random & F3
$A84    $5F30   SE       VF, V3          ; Skip if VF == V3
$A86    $5E3A   UNKNOWN  $5E3A           ; Unknown 5xxx instruction
$A88    $7255   ADD      V2, #55         ; Add 85 to V2
$A8A    $A1C2   LD       I, $1C2         ; Load 1C2 into I
$A8C    $F87C   UNKNOWN  F87C            ; Unknown Fxxx instruction
$A8E    $0641   SYS      $641            ; System call to 641
$A90    $CAAA   RND      VA, #AA         ; VA = random & AA
$A92    $E47D   UNKNOWN  $E47D           ; Unknown Exxx instruction
$A94    $F535   UNKNOWN  F535            ; Unknown Fxxx instruction
$A96    $1F5A   JP       $F5A            ; Jump to F5A
$A98    $0580   SYS      $580            ; System call to 580
$A9A    $1777   JP       $777            ; Jump to 777
$A9C    $B8F4   JP       V0, $8F4        ; Jump to V0 + 8F4
$A9E    $53A4   UNKNOWN  $53A4           ; Unknown 5xxx instruction
$AA0    $E0E7   UNKNOWN  $E0E7           ; Unknown Exxx instruction
$AA2    $BDE8   JP       V0, $DE8        ; Jump to V0 + DE8
$AA4    $FA02   UNKNOWN  FA02            ; Unknown Fxxx instruction
$AA6    $5599   UNKNOWN  $5599           ; Unknown 5xxx instruction
$AA8    $424D   SNE      V2, #4D         ; Skip if V2 != 77
$AAA    $B2AA   JP       V0, $2AA        ; Jump to V0 + 2AA
$AAC    $EDFC   UNKNOWN  $EDFC           ; Unknown Exxx instruction
$AAE    $C1A7   RND      V1, #A7         ; V1 = random & A7
$AB0    $B837   JP       V0, $837        ; Jump to V0 + 837
$AB2    $A7CF   LD       I, $7CF         ; Load 7CF into I
$AB4    $0873   SYS      $873            ; System call to 873
$AB6    $DA6B   DRW      VA, V6, #B      ; Draw 11-byte sprite at VA, V6
$AB8    $4684   SNE      V6, #84         ; Skip if V6 != 132
$ABA    $7EBE   ADD      VE, #BE         ; Add 190 to VE
$ABC    $5D2E   UNKNOWN  $5D2E           ; Unknown 5xxx instruction
$ABE    $6BD3   LD       VB, #D3         ; Load 211 into VB
$AC0    $A062   LD       I, $062         ; Load 062 into I
$AC2    $B051   JP       V0, $051        ; Jump to V0 + 051
$AC4    $1E9A   JP       $E9A            ; Jump to E9A
$AC6    $A728   LD       I, $728         ; Load 728 into I
$AC8    $62C0   LD       V2, #C0         ; Load 192 into V2
$ACA    $65C1   LD       V5, #C1         ; Load 193 into V5
$ACC    $98A3   UNKNOWN  $98A3           ; Unknown 9xxx instruction
$ACE    $6AE2   LD       VA, #E2         ; Load 226 into VA
$AD0    $4BF0   SNE      VB, #F0         ; Skip if VB != 240
$AD2    $C501   RND      V5, #01         ; V5 = random & 01
$AD4    $8682   AND      V6, V8          ; V6 &= V8
$AD6    $AACB   LD       I, $ACB         ; Load ACB into I
$AD8    $D8EA   DRW      V8, VE, #A      ; Draw 10-byte sprite at V8, VE
$ADA    $AE8D   LD       I, $E8D         ; Load E8D into I
$ADC    $D094   DRW      V0, V9, #4      ; Draw 4-byte sprite at V0, V9
$ADE    $556B   UNKNOWN  $556B           ; Unknown 5xxx instruction
$AE0    $FE5F   UNKNOWN  FE5F            ; Unknown Fxxx instruction
$AE2    $1409   JP       $409            ; Jump to 409
$AE4    $B0FB   JP       V0, $0FB        ; Jump to V0 + 0FB
$AE6    $E63A   UNKNOWN  $E63A           ; Unknown Exxx instruction
$AE8    $AEEE   LD       I, $EEE         ; Load EEE into I
$AEA    $1A84   JP       $A84            ; Jump to A84
$AEC    $199D   JP       $99D            ; Jump to 99D
$AEE    $006D   SYS      $06D            ; System call to 06D
$AF0    $6F74   LD       VF, #74         ; Load 116 into VF
$AF2    $0E27   SYS      $E27            ; System call to E27
$AF4    $808D   UNKNOWN  808D            ; Unknown 8xxx instruction
$AF6    $0DDD   SYS      $DDD            ; System call to DDD
$AF8    $2D3D   CALL     $D3D            ; Call subroutine at D3D
$AFA    $7EFE   ADD      VE, #FE         ; Add 254 to VE
$AFC    $4403   SNE      V4, #03         ; Skip if V4 != 3
$AFE    $1A24   JP       $A24            ; Jump to A24
$B00    $0EAE   SYS      $EAE            ; System call to EAE
$B02    $B1FB   JP       V0, $1FB        ; Jump to V0 + 1FB
$B04    $27C6   CALL     $7C6            ; Call subroutine at 7C6
$B06    $808C   UNKNOWN  808C            ; Unknown 8xxx instruction
$B08    $FEB9   UNKNOWN  FEB9            ; Unknown Fxxx instruction
$B0A    $D902   DRW      V9, V0, #2      ; Draw 2-byte sprite at V9, V0
$B0C    $9DF2   UNKNOWN  $9DF2           ; Unknown 9xxx instruction
$B0E    $5D84   UNKNOWN  $5D84           ; Unknown 5xxx instruction
$B10    $7469   ADD      V4, #69         ; Add 105 to V4
$B12    $251E   CALL     $51E            ; Call subroutine at 51E
$B14    $0F4C   SYS      $F4C            ; System call to F4C
$B16    $611C   LD       V1, #1C         ; Load 28 into V1
$B18    $CCE7   RND      VC, #E7         ; VC = random & E7
$B1A    $1148   JP       $148            ; Jump to 148
$B1C    $C2BE   RND      V2, #BE         ; V2 = random & BE
$B1E    $BB50   JP       V0, $B50        ; Jump to V0 + B50
$B20    $3308   SE       V3, #08         ; Skip if V3 == 8
$B22    $5B1E   UNKNOWN  $5B1E           ; Unknown 5xxx instruction
$B24    $4754   SNE      V7, #54         ; Skip if V7 != 84
$B26    $66F0   LD       V6, #F0         ; Load 240 into V6
$B28    $2E10   CALL     $E10            ; Call subroutine at E10
$B2A    $0394   SYS      $394            ; System call to 394
$B2C    $73C0   ADD      V3, #C0         ; Add 192 to V3
$B2E    $8A7D   UNKNOWN  8A7D            ; Unknown 8xxx instruction
$B30    $4F24   SNE      VF, #24         ; Skip if VF != 36
$B32    $4EDA   SNE      VE, #DA         ; Skip if VE != 218
$B34    $10D6   JP       $0D6            ; Jump to 0D6
$B36    $1F26   JP       $F26            ; Jump to F26
$B38    $B570   JP       V0, $570        ; Jump to V0 + 570
$B3A    $65CC   LD       V5, #CC         ; Load 204 into V5
$B3C    $78A7   ADD      V8, #A7         ; Add 167 to V8
$B3E    $3E12   SE       VE, #12         ; Skip if VE == 18
$B40    $33FD   SE       V3, #FD         ; Skip if V3 == 253
$B42    $6086   LD       V0, #86         ; Load 134 into V0
$B44    $B9B4   JP       V0, $9B4        ; Jump to V0 + 9B4
$B46    $B589   JP       V0, $589        ; Jump to V0 + 589
$B48    $130F   JP       $30F            ; Jump to 30F
$B4A    $F7E6   UNKNOWN  F7E6            ; Unknown Fxxx instruction
$B4C    $2E39   CALL     $E39            ; Call subroutine at E39
$B4E    $99B9   UNKNOWN  $99B9           ; Unknown 9xxx instruction
$B50    $9ACD   UNKNOWN  $9ACD           ; Unknown 9xxx instruction
$B52    $2CCC   CALL     $CCC            ; Call subroutine at CCC
$B54    $D361   DRW      V3, V6, #1      ; Draw 1-byte sprite at V3, V6
$B56    $D9C9   DRW      V9, VC, #9      ; Draw 9-byte sprite at V9, VC
$B58    $CFF5   RND      VF, #F5         ; VF = random & F5
$B5A    $477C   SNE      V7, #7C         ; Skip if V7 != 124
$B5C    $AECE   LD       I, $ECE         ; Load ECE into I
$B5E    $711E   ADD      V1, #1E         ; Add 30 to V1
$B60    $8156   SHR      V1              ; V1 >>= 1, VF = LSB
$B62    $701E   ADD      V0, #1E         ; Add 30 to V0
$B64    $9CB5   UNKNOWN  $9CB5           ; Unknown 9xxx instruction
$B66    $9CE7   UNKNOWN  $9CE7           ; Unknown 9xxx instruction
$B68    $4B52   SNE      VB, #52         ; Skip if VB != 82
$B6A    $60F1   LD       V0, #F1         ; Load 241 into V0
$B6C    $6FC0   LD       VF, #C0         ; Load 192 into VF
$B6E    $D80B   DRW      V8, V0, #B      ; Draw 11-byte sprite at V8, V0
$B70    $EA3C   UNKNOWN  $EA3C           ; Unknown Exxx instruction
$B72    $983E   UNKNOWN  $983E           ; Unknown 9xxx instruction
$B74    $42B8   SNE      V2, #B8         ; Skip if V2 != 184
$B76    $95D9   UNKNOWN  $95D9           ; Unknown 9xxx instruction
$B78    $1E50   JP       $E50            ; Jump to E50
$B7A    $1FB8   JP       $FB8            ; Jump to FB8
$B7C    $EC0C   UNKNOWN  $EC0C           ; Unknown Exxx instruction
$B7E    $A7E3   LD       I, $7E3         ; Load 7E3 into I
$B80    $07BC   SYS      $7BC            ; System call to 7BC
$B82    $B750   JP       V0, $750        ; Jump to V0 + 750
$B84    $A974   LD       I, $974         ; Load 974 into I
$B86    $C72F   RND      V7, #2F         ; V7 = random & 2F
$B88    $CCB9   RND      VC, #B9         ; VC = random & B9
$B8A    $CF8D   RND      VF, #8D         ; VF = random & 8D
$B8C    $5878   UNKNOWN  $5878           ; Unknown 5xxx instruction
$B8E    $83DF   UNKNOWN  83DF            ; Unknown 8xxx instruction
$B90    $4D0D   SNE      VD, #0D         ; Skip if VD != 13
$B92    $DFD4   DRW      VF, VD, #4      ; Draw 4-byte sprite at VF, VD
$B94    $13CA   JP       $3CA            ; Jump to 3CA
$B96    $FB44   UNKNOWN  FB44            ; Unknown Fxxx instruction
$B98    $62C7   LD       V2, #C7         ; Load 199 into V2
$B9A    $BE4A   JP       V0, $E4A        ; Jump to V0 + E4A
$B9C    $BB07   JP       V0, $B07        ; Jump to V0 + B07
$B9E    $B34F   JP       V0, $34F        ; Jump to V0 + 34F
$BA0    $A78F   LD       I, $78F         ; Load 78F into I
$BA2    $DC8F   DRW      VC, V8, #F      ; Draw 15-byte sprite at VC, V8
$BA4    $A88D   LD       I, $88D         ; Load 88D into I
$BA6    $0E6E   SYS      $E6E            ; System call to E6E
$BA8    $A8AE   LD       I, $8AE         ; Load 8AE into I
$BAA    $A1B5   LD       I, $1B5         ; Load 1B5 into I
$BAC    $5D1A   UNKNOWN  $5D1A           ; Unknown 5xxx instruction
$BAE    $5A82   UNKNOWN  $5A82           ; Unknown 5xxx instruction
$BB0    $2A53   CALL     $A53            ; Call subroutine at A53
$BB2    $996B   UNKNOWN  $996B           ; Unknown 9xxx instruction
$BB4    $3FB1   SE       VF, #B1         ; Skip if VF == 177
$BB6    $078F   SYS      $78F            ; System call to 78F
$BB8    $B1CC   JP       V0, $1CC        ; Jump to V0 + 1CC
$BBA    $4314   SNE      V3, #14         ; Skip if V3 != 20
$BBC    $CBCA   RND      VB, #CA         ; VB = random & CA
$BBE    $717C   ADD      V1, #7C         ; Add 124 to V1
$BC0    $D070   DRW      V0, V7, #0      ; Draw 0-byte sprite at V0, V7
$BC2    $9DB2   UNKNOWN  $9DB2           ; Unknown 9xxx instruction
$BC4    $B748   JP       V0, $748        ; Jump to V0 + 748
$BC6    $51DF   UNKNOWN  $51DF           ; Unknown 5xxx instruction
$BC8    $648B   LD       V4, #8B         ; Load 139 into V4
$BCA    $D679   DRW      V6, V7, #9      ; Draw 9-byte sprite at V6, V7
$BCC    $8385   SUB      V3, V8          ; V3 -= V8, VF = !borrow
$BCE    $DA2C   DRW      VA, V2, #C      ; Draw 12-byte sprite at VA, V2
$BD0    $1332   JP       $332            ; Jump to 332
$BD2    $6649   LD       V6, #49         ; Load 73 into V6
$BD4    $9BFB   UNKNOWN  $9BFB           ; Unknown 9xxx instruction
$BD6    $314F   SE       V1, #4F         ; Skip if V1 == 79
$BD8    $1E5D   JP       $E5D            ; Jump to E5D
$BDA    $985B   UNKNOWN  $985B           ; Unknown 9xxx instruction
$BDC    $22A6   CALL     $2A6            ; Call subroutine at 2A6
$BDE    $99BA   UNKNOWN  $99BA           ; Unknown 9xxx instruction
$BE0    $3FFD   SE       VF, #FD         ; Skip if VF == 253
$BE2    $6D60   LD       VD, #60         ; Load 96 into VD
$BE4    $A444   LD       I, $444         ; Load 444 into I
$BE6    $BB5B   JP       V0, $B5B        ; Jump to V0 + B5B
$BE8    $CD01   RND      VD, #01         ; VD = random & 01
$BEA    $4E80   SNE      VE, #80         ; Skip if VE != 128
$BEC    $0814   SYS      $814            ; System call to 814
$BEE    $5861   UNKNOWN  $5861           ; Unknown 5xxx instruction
$BF0    $FF47   UNKNOWN  FF47            ; Unknown Fxxx instruction
$BF2    $5E63   UNKNOWN  $5E63           ; Unknown 5xxx instruction
$BF4    $3C05   SE       VC, #05         ; Skip if VC == 5
$BF6    $3435   SE       V4, #35         ; Skip if V4 == 53
$BF8    $3EF8   SE       VE, #F8         ; Skip if VE == 248
$BFA    $38C5   SE       V8, #C5         ; Skip if V8 == 197
$BFC    $C68F   RND      V6, #8F         ; V6 = random & 8F
$BFE    $4360   SNE      V3, #60         ; Skip if V3 != 96
$C00    $AAF1   LD       I, $AF1         ; Load AF1 into I
$C02    $DD65   DRW      VD, V6, #5      ; Draw 5-byte sprite at VD, V6
$C04    $7057   ADD      V0, #57         ; Add 87 to V0
$C06    $E448   UNKNOWN  $E448           ; Unknown Exxx instruction
$C08    $E8C8   UNKNOWN  $E8C8           ; Unknown Exxx instruction
$C0A    $B5FA   JP       V0, $5FA        ; Jump to V0 + 5FA
$C0C    $3136   SE       V1, #36         ; Skip if V1 == 54
$C0E    $C1D0   RND      V1, #D0         ; V1 = random & D0
$C10    $B244   JP       V0, $244        ; Jump to V0 + 244
$C12    $B02A   JP       V0, $02A        ; Jump to V0 + 02A
$C14    $4B57   SNE      VB, #57         ; Skip if VB != 87
$C16    $15D3   JP       $5D3            ; Jump to 5D3
$C18    $4BBC   SNE      VB, #BC         ; Skip if VB != 188
$C1A    $3F42   SE       VF, #42         ; Skip if VF == 66
$C1C    $7D9F   ADD      VD, #9F         ; Add 159 to VD
$C1E    $CF35   RND      VF, #35         ; VF = random & 35
$C20    $D3CB   DRW      V3, VC, #B      ; Draw 11-byte sprite at V3, VC
$C22    $69FD   LD       V9, #FD         ; Load 253 into V9
$C24    $3B80   SE       VB, #80         ; Skip if VB == 128
$C26    $6E48   LD       VE, #48         ; Load 72 into VE
$C28    $90E3   UNKNOWN  $90E3           ; Unknown 9xxx instruction
$C2A    $4367   SNE      V3, #67         ; Skip if V3 != 103
$C2C    $639D   LD       V3, #9D         ; Load 157 into V3
$C2E    $051F   SYS      $51F            ; System call to 51F
$C30    $B97E   JP       V0, $97E        ; Jump to V0 + 97E
$C32    $9CB2   UNKNOWN  $9CB2           ; Unknown 9xxx instruction
$C34    $796B   ADD      V9, #6B         ; Add 107 to V9
$C36    $0A22   SYS      $A22            ; System call to A22
$C38    $71C7   ADD      V1, #C7         ; Add 199 to V1
$C3A    $325B   SE       V2, #5B         ; Skip if V2 == 91
$C3C    $8F8B   UNKNOWN  8F8B            ; Unknown 8xxx instruction
$C3E    $14CC   JP       $4CC            ; Jump to 4CC
$C40    $CE3E   RND      VE, #3E         ; VE = random & 3E
$C42    $0805   SYS      $805            ; System call to 805
$C44    $84E4   ADD      V4, VE          ; V4 += VE, VF = carry
$C46    $8569   UNKNOWN  8569            ; Unknown 8xxx instruction
$C48    $0912   SYS      $912            ; System call to 912
$C4A    $3CDE   SE       VC, #DE         ; Skip if VC == 222
$C4C    $CC31   RND      VC, #31         ; VC = random & 31
$C4E    $8E7C   UNKNOWN  8E7C            ; Unknown 8xxx instruction
$C50    $446C   SNE      V4, #6C         ; Skip if V4 != 108
$C52    $7D65   ADD      VD, #65         ; Add 101 to VD
$C54    $BDEC   JP       V0, $DEC        ; Jump to V0 + DEC
$C56    $4012   SNE      V0, #12         ; Skip if V0 != 18
$C58    $E8BA   UNKNOWN  $E8BA           ; Unknown Exxx instruction
$C5A    $8A04   ADD      VA, V0          ; VA += V0, VF = carry
$C5C    $015A   SYS      $15A            ; System call to 15A
$C5E    $5362   UNKNOWN  $5362           ; Unknown 5xxx instruction
$C60    $A909   LD       I, $909         ; Load 909 into I
$C62    $3846   SE       V8, #46         ; Skip if V8 == 70
$C64    $C4D1   RND      V4, #D1         ; V4 = random & D1
$C66    $3181   SE       V1, #81         ; Skip if V1 == 129
$C68    $6614   LD       V6, #14         ; Load 20 into V6
$C6A    $5E19   UNKNOWN  $5E19           ; Unknown 5xxx instruction
$C6C    $489C   SNE      V8, #9C         ; Skip if V8 != 156
$C6E    $E3DB   UNKNOWN  $E3DB           ; Unknown Exxx instruction
$C70    $3868   SE       V8, #68         ; Skip if V8 == 104
$C72    $6973   LD       V9, #73         ; Load 115 into V9
$C74    $FCA9   UNKNOWN  FCA9            ; Unknown Fxxx instruction
$C76    $7967   ADD      V9, #67         ; Add 103 to V9
$C78    $D5F1   DRW      V5, VF, #1      ; Draw 1-byte sprite at V5, VF
$C7A    $16C0   JP       $6C0            ; Jump to 6C0
$C7C    $94FB   UNKNOWN  $94FB           ; Unknown 9xxx instruction
$C7E    $381A   SE       V8, #1A         ; Skip if V8 == 26
$C80    $3B62   SE       VB, #62         ; Skip if VB == 98
$C82    $9C56   UNKNOWN  $9C56           ; Unknown 9xxx instruction
$C84    $D0DF   DRW      V0, VD, #F      ; Draw 15-byte sprite at V0, VD
$C86    $66F4   LD       V6, #F4         ; Load 244 into V6
$C88    $7975   ADD      V9, #75         ; Add 117 to V9
$C8A    $4378   SNE      V3, #78         ; Skip if V3 != 120
$C8C    $9D36   UNKNOWN  $9D36           ; Unknown 9xxx instruction
$C8E    $8C72   AND      VC, V7          ; VC &= V7
$C90    $48AD   SNE      V8, #AD         ; Skip if V8 != 173
$C92    $EA05   UNKNOWN  $EA05           ; Unknown Exxx instruction
$C94    $EC5A   UNKNOWN  $EC5A           ; Unknown Exxx instruction
$C96    $3722   SE       V7, #22         ; Skip if V7 == 34
$C98    $DC8D   DRW      VC, V8, #D      ; Draw 13-byte sprite at VC, V8
$C9A    $F4C9   UNKNOWN  F4C9            ; Unknown Fxxx instruction
$C9C    $32F2   SE       V2, #F2         ; Skip if V2 == 242
$C9E    $4263   SNE      V2, #63         ; Skip if V2 != 99
$CA0    $4AD8   SNE      VA, #D8         ; Skip if VA != 216
$CA2    $85C8   UNKNOWN  85C8            ; Unknown 8xxx instruction
$CA4    $D684   DRW      V6, V8, #4      ; Draw 4-byte sprite at V6, V8
$CA6    $6920   LD       V9, #20         ; Load 32 into V9
$CA8    $D1EC   DRW      V1, VE, #C      ; Draw 12-byte sprite at V1, VE
$CAA    $57C1   UNKNOWN  $57C1           ; Unknown 5xxx instruction
$CAC    $EFEF   UNKNOWN  $EFEF           ; Unknown Exxx instruction
$CAE    $0C43   SYS      $C43            ; System call to C43
$CB0    $4D3F   SNE      VD, #3F         ; Skip if VD != 63
$CB2    $AB73   LD       I, $B73         ; Load B73 into I
$CB4    $17ED   JP       $7ED            ; Jump to 7ED
$CB6    $222E   CALL     $22E            ; Call subroutine at 22E
$CB8    $2CFA   CALL     $CFA            ; Call subroutine at CFA
$CBA    $B807   JP       V0, $807        ; Jump to V0 + 807
$CBC    $B500   JP       V0, $500        ; Jump to V0 + 500
$CBE    $9568   UNKNOWN  $9568           ; Unknown 9xxx instruction
$CC0    $A85A   LD       I, $85A         ; Load 85A into I
$CC2    $0938   SYS      $938            ; System call to 938
$CC4    $72CA   ADD      V2, #CA         ; Add 202 to V2
$CC6    $378C   SE       V7, #8C         ; Skip if V7 == 140
$CC8    $2941   CALL     $941            ; Call subroutine at 941
$CCA    $02FA   SYS      $2FA            ; System call to 2FA
$CCC    $F01B   UNKNOWN  F01B            ; Unknown Fxxx instruction
$CCE    $2424   CALL     $424            ; Call subroutine at 424
$CD0    $BC59   JP       V0, $C59        ; Jump to V0 + C59
$CD2    $E80B   UNKNOWN  $E80B           ; Unknown Exxx instruction
$CD4    $D8D9   DRW      V8, VD, #9      ; Draw 9-byte sprite at V8, VD
$CD6    $F40E   UNKNOWN  F40E            ; Unknown Fxxx instruction
$CD8    $79C5   ADD      V9, #C5         ; Add 197 to V9
$CDA    $B84C   JP       V0, $84C        ; Jump to V0 + 84C
$CDC    $85FD   UNKNOWN  85FD            ; Unknown 8xxx instruction
$CDE    $0475   SYS      $475            ; System call to 475
$CE0    $368B   SE       V6, #8B         ; Skip if V6 == 139
$CE2    $F8A5   UNKNOWN  F8A5            ; Unknown Fxxx instruction
$CE4    $98FF   UNKNOWN  $98FF           ; Unknown 9xxx instruction
$CE6    $6223   LD       V2, #23         ; Load 35 into V2
$CE8    $ECFD   UNKNOWN  $ECFD           ; Unknown Exxx instruction
$CEA    $BFD2   JP       V0, $FD2        ; Jump to V0 + FD2
$CEC    $3E72   SE       VE, #72         ; Skip if VE == 114
$CEE    $F1A8   UNKNOWN  F1A8            ; Unknown Fxxx instruction
$CF0    $55DC   UNKNOWN  $55DC           ; Unknown 5xxx instruction
$CF2    $788D   ADD      V8, #8D         ; Add 141 to V8
$CF4    $B3CB   JP       V0, $3CB        ; Jump to V0 + 3CB
$CF6    $7122   ADD      V1, #22         ; Add 34 to V1
$CF8    $AC1C   LD       I, $C1C         ; Load C1C into I
$CFA    $4CAE   SNE      VC, #AE         ; Skip if VC != 174
$CFC    $DF02   DRW      VF, V0, #2      ; Draw 2-byte sprite at VF, V0
$CFE    $83B5   SUB      V3, VB          ; V3 -= VB, VF = !borrow
$D00    $2762   CALL     $762            ; Call subroutine at 762
$D02    $DB1D   DRW      VB, V1, #D      ; Draw 13-byte sprite at VB, V1
$D04    $8B0C   UNKNOWN  8B0C            ; Unknown 8xxx instruction
$D06    $3053   SE       V0, #53         ; Skip if V0 == 83
$D08    $F33A   UNKNOWN  F33A            ; Unknown Fxxx instruction
$D0A    $F153   UNKNOWN  F153            ; Unknown Fxxx instruction
$D0C    $0F46   SYS      $F46            ; System call to F46
$D0E    $1B2B   JP       $B2B            ; Jump to B2B
$D10    $9C31   UNKNOWN  $9C31           ; Unknown 9xxx instruction
$D12    $808F   UNKNOWN  808F            ; Unknown 8xxx instruction
$D14    $524A   UNKNOWN  $524A           ; Unknown 5xxx instruction
$D16    $65E1   LD       V5, #E1         ; Load 225 into V5
$D18    $2706   CALL     $706            ; Call subroutine at 706
$D1A    $929F   UNKNOWN  $929F           ; Unknown 9xxx instruction
$D1C    $683C   LD       V8, #3C         ; Load 60 into V8
$D1E    $328C   SE       V2, #8C         ; Skip if V2 == 140
$D20    $EA2C   UNKNOWN  $EA2C           ; Unknown Exxx instruction
$D22    $90D5   UNKNOWN  $90D5           ; Unknown 9xxx instruction
$D24    $6A46   LD       VA, #46         ; Load 70 into VA
$D26    $C512   RND      V5, #12         ; V5 = random & 12
$D28    $073D   SYS      $73D            ; System call to 73D
$D2A    $E6E9   UNKNOWN  $E6E9           ; Unknown Exxx instruction
$D2C    $5A5D   UNKNOWN  $5A5D           ; Unknown 5xxx instruction
$D2E    $8134   ADD      V1, V3          ; V1 += V3, VF = carry
$D30    $2AB6   CALL     $AB6            ; Call subroutine at AB6
$D32    $ED7E   UNKNOWN  $ED7E           ; Unknown Exxx instruction
$D34    $8430   LD       V4, V3          ; V4 = V3
$D36    $07EF   SYS      $7EF            ; System call to 7EF
$D38    $11C7   JP       $1C7            ; Jump to 1C7
$D3A    $96FC   UNKNOWN  $96FC           ; Unknown 9xxx instruction
$D3C    $0461   SYS      $461            ; System call to 461
$D3E    $E479   UNKNOWN  $E479           ; Unknown Exxx instruction
$D40    $C9A7   RND      V9, #A7         ; V9 = random & A7
$D42    $28F8   CALL     $8F8            ; Call subroutine at 8F8
$D44    $6BB4   LD       VB, #B4         ; Load 180 into VB
$D46    $2EA8   CALL     $EA8            ; Call subroutine at EA8
$D48    $2800   CALL     $800            ; Call subroutine at 800
$D4A    $FCB0   UNKNOWN  FCB0            ; Unknown Fxxx instruction
$D4C    $311F   SE       V1, #1F         ; Skip if V1 == 31
$D4E    $CB25   RND      VB, #25         ; VB = random & 25
$D50    $5361   UNKNOWN  $5361           ; Unknown 5xxx instruction
$D52    $A25F   LD       I, $25F         ; Load 25F into I
$D54    $42EB   SNE      V2, #EB         ; Skip if V2 != 235
$D56    $18F9   JP       $8F9            ; Jump to 8F9
$D58    $D7FD   DRW      V7, VF, #D      ; Draw 13-byte sprite at V7, VF
$D5A    $F9F4   UNKNOWN  F9F4            ; Unknown Fxxx instruction
$D5C    $53CB   UNKNOWN  $53CB           ; Unknown 5xxx instruction
$D5E    $9925   UNKNOWN  $9925           ; Unknown 9xxx instruction
$D60    $C715   RND      V7, #15         ; V7 = random & 15
$D62    $5EB2   UNKNOWN  $5EB2           ; Unknown 5xxx instruction
$D64    $9873   UNKNOWN  $9873           ; Unknown 9xxx instruction
$D66    $35AE   SE       V5, #AE         ; Skip if V5 == 174
$D68    $C6C4   RND      V6, #C4         ; V6 = random & C4
$D6A    $A9B7   LD       I, $9B7         ; Load 9B7 into I
$D6C    $1C3F   JP       $C3F            ; Jump to C3F
$D6E    $4C05   SNE      VC, #05         ; Skip if VC != 5
$D70    $D46F   DRW      V4, V6, #F      ; Draw 15-byte sprite at V4, V6
$D72    $AFC6   LD       I, $FC6         ; Load FC6 into I
$D74    $5D0A   UNKNOWN  $5D0A           ; Unknown 5xxx instruction
$D76    $7872   ADD      V8, #72         ; Add 114 to V8
$D78    $F3C0   UNKNOWN  F3C0            ; Unknown Fxxx instruction
$D7A    $3098   SE       V0, #98         ; Skip if V0 == 152
$D7C    $BF19   JP       V0, $F19        ; Jump to V0 + F19
$D7E    $EC38   UNKNOWN  $EC38           ; Unknown Exxx instruction
$D80    $F9C6   UNKNOWN  F9C6            ; Unknown Fxxx instruction
$D82    $2CA7   CALL     $CA7            ; Call subroutine at CA7
$D84    $3492   SE       V4, #92         ; Skip if V4 == 146
$D86    $6D48   LD       VD, #48         ; Load 72 into VD
$D88    $4833   SNE      V8, #33         ; Skip if V8 != 51
$D8A    $D743   DRW      V7, V4, #3      ; Draw 3-byte sprite at V7, V4
$D8C    $C245   RND      V2, #45         ; V2 = random & 45
$D8E    $F49E   UNKNOWN  F49E            ; Unknown Fxxx instruction
$D90    $6EBF   LD       VE, #BF         ; Load 191 into VE
$D92    $1213   JP       $213            ; Jump to 213
$D94    $61FF   LD       V1, #FF         ; Load 255 into V1
$D96    $30B0   SE       V0, #B0         ; Skip if V0 == 176
$D98    $CFC1   RND      VF, #C1         ; VF = random & C1
$D9A    $A8F5   LD       I, $8F5         ; Load 8F5 into I
$D9C    $3A9A   SE       VA, #9A         ; Skip if VA == 154
$D9E    $7096   ADD      V0, #96         ; Add 150 to V0
$DA0    $26FF   CALL     $6FF            ; Call subroutine at 6FF
$DA2    $CE20   RND      VE, #20         ; VE = random & 20
$DA4    $7D04   ADD      VD, #04         ; Add 4 to VD
$DA6    $C542   RND      V5, #42         ; V5 = random & 42
$DA8    $17FA   JP       $7FA            ; Jump to 7FA
$DAA    $FDAC   UNKNOWN  FDAC            ; Unknown Fxxx instruction
$DAC    $D852   DRW      V8, V5, #2      ; Draw 2-byte sprite at V8, V5
$DAE    $A4FE   LD       I, $4FE         ; Load 4FE into I
$DB0    $16A7   JP       $6A7            ; Jump to 6A7
$DB2    $D8AA   DRW      V8, VA, #A      ; Draw 10-byte sprite at V8, VA
$DB4    $0352   SYS      $352            ; System call to 352
$DB6    $D065   DRW      V0, V6, #5      ; Draw 5-byte sprite at V0, V6
$DB8    $F7BE   UNKNOWN  F7BE            ; Unknown Fxxx instruction
$DBA    $EC8F   UNKNOWN  $EC8F           ; Unknown Exxx instruction
$DBC    $AE6A   LD       I, $E6A         ; Load E6A into I
$DBE    $5F1A   UNKNOWN  $5F1A           ; Unknown 5xxx instruction
$DC0    $BC1F   JP       V0, $C1F        ; Jump to V0 + C1F
$DC2    $018E   SYS      $18E            ; System call to 18E
$DC4    $43EE   SNE      V3, #EE         ; Skip if V3 != 238
$DC6    $7888   ADD      V8, #88         ; Add 136 to V8
$DC8    $771B   ADD      V7, #1B         ; Add 27 to V7
$DCA    $BC7D   JP       V0, $C7D        ; Jump to V0 + C7D
$DCC    $935A   UNKNOWN  $935A           ; Unknown 9xxx instruction
$DCE    $68A7   LD       V8, #A7         ; Load 167 into V8
$DD0    $3FA4   SE       VF, #A4         ; Skip if VF == 164
$DD2    $03D4   SYS      $3D4            ; System call to 3D4
$DD4    $C5E3   RND      V5, #E3         ; V5 = random & E3
$DD6    $BAA6   JP       V0, $AA6        ; Jump to V0 + AA6
$DD8    $3043   SE       V0, #43         ; Skip if V0 == 67
$DDA    $EB5A   UNKNOWN  $EB5A           ; Unknown Exxx instruction
$DDC    $4024   SNE      V0, #24         ; Skip if V0 != 36
$DDE    $B715   JP       V0, $715        ; Jump to V0 + 715
$DE0    $3C21   SE       VC, #21         ; Skip if VC == 33
$DE2    $47E9   SNE      V7, #E9         ; Skip if V7 != 233
$DE4    $A3DF   LD       I, $3DF         ; Load 3DF into I
$DE6    $834F   UNKNOWN  834F            ; Unknown 8xxx instruction
$DE8    $9761   UNKNOWN  $9761           ; Unknown 9xxx instruction
$DEA    $DDA4   DRW      VD, VA, #4      ; Draw 4-byte sprite at VD, VA
$DEC    $1EC7   JP       $EC7            ; Jump to EC7
$DEE    $D8C5   DRW      V8, VC, #5      ; Draw 5-byte sprite at V8, VC
$DF0    $1F46   JP       $F46            ; Jump to F46
$DF2    $C3D4   RND      V3, #D4         ; V3 = random & D4
$DF4    $B54C   JP       V0, $54C        ; Jump to V0 + 54C
$DF6    $5543   UNKNOWN  $5543           ; Unknown 5xxx instruction
$DF8    $354A   SE       V5, #4A         ; Skip if V5 == 74
$DFA    $ADAF   LD       I, $DAF         ; Load DAF into I
$DFC    $2FD9   CALL     $FD9            ; Call subroutine at FD9
$DFE    $1176   JP       $176            ; Jump to 176
$E00    $E33B   UNKNOWN  $E33B           ; Unknown Exxx instruction
$E02    $D496   DRW      V4, V9, #6      ; Draw 6-byte sprite at V4, V9
$E04    $4D2D   SNE      VD, #2D         ; Skip if VD != 45
$E06    $4EE5   SNE      VE, #E5         ; Skip if VE != 229
$E08    $90FE   UNKNOWN  $90FE           ; Unknown 9xxx instruction
$E0A    $BD50   JP       V0, $D50        ; Jump to V0 + D50
$E0C    $A119   LD       I, $119         ; Load 119 into I
$E0E    $DD4B   DRW      VD, V4, #B      ; Draw 11-byte sprite at VD, V4
$E10    $92C3   UNKNOWN  $92C3           ; Unknown 9xxx instruction
$E12    $1DB8   JP       $DB8            ; Jump to DB8
$E14    $363F   SE       V6, #3F         ; Skip if V6 == 63
$E16    $0C13   SYS      $C13            ; System call to C13
$E18    $F6BD   UNKNOWN  F6BD            ; Unknown Fxxx instruction
$E1A    $547D   UNKNOWN  $547D           ; Unknown 5xxx instruction
$E1C    $573F   UNKNOWN  $573F           ; Unknown 5xxx instruction
$E1E    $CD5A   RND      VD, #5A         ; VD = random & 5A
$E20    $8D4E   SHL      VD              ; VD <<= 1, VF = MSB
$E22    $B3D2   JP       V0, $3D2        ; Jump to V0 + 3D2
$E24    $C4B8   RND      V4, #B8         ; V4 = random & B8
$E26    $A40C   LD       I, $40C         ; Load 40C into I
$E28    $B90F   JP       V0, $90F        ; Jump to V0 + 90F
$E2A    $1A6C   JP       $A6C            ; Jump to A6C
$E2C    $E08D   UNKNOWN  $E08D           ; Unknown Exxx instruction
$E2E    $3E8D   SE       VE, #8D         ; Skip if VE == 141
$E30    $DA9F   DRW      VA, V9, #F      ; Draw 15-byte sprite at VA, V9
$E32    $2079   CALL     $079            ; Call subroutine at 079
$E34    $9B1F   UNKNOWN  $9B1F           ; Unknown 9xxx instruction
$E36    $ADD4   LD       I, $DD4         ; Load DD4 into I
$E38    $9A7F   UNKNOWN  $9A7F           ; Unknown 9xxx instruction
$E3A    $4C21   SNE      VC, #21         ; Skip if VC != 33
$E3C    $C714   RND      V7, #14         ; V7 = random & 14
$E3E    $545D   UNKNOWN  $545D           ; Unknown 5xxx instruction
$E40    $ED06   UNKNOWN  $ED06           ; Unknown Exxx instruction
$E42    $1A08   JP       $A08            ; Jump to A08
$E44    $F536   UNKNOWN  F536            ; Unknown Fxxx instruction
$E46    $2234   CALL     $234            ; Call subroutine at 234
$E48    $F0AE   UNKNOWN  F0AE            ; Unknown Fxxx instruction
$E4A    $93CD   UNKNOWN  $93CD           ; Unknown 9xxx instruction
$E4C    $2320   CALL     $320            ; Call subroutine at 320
$E4E    $09D0   SYS      $9D0            ; System call to 9D0
$E50    $BE41   JP       V0, $E41        ; Jump to V0 + E41
$E52    $3859   SE       V8, #59         ; Skip if V8 == 89
$E54    $E4E3   UNKNOWN  $E4E3           ; Unknown Exxx instruction
$E56    $F61A   UNKNOWN  F61A            ; Unknown Fxxx instruction
$E58    $06A8   SYS      $6A8            ; System call to 6A8
$E5A    $B51F   JP       V0, $51F        ; Jump to V0 + 51F
$E5C    $CD2C   RND      VD, #2C         ; VD = random & 2C
$E5E    $783B   ADD      V8, #3B         ; Add 59 to V8
$E60    $F998   UNKNOWN  F998            ; Unknown Fxxx instruction
$E62    $EA65   UNKNOWN  $EA65           ; Unknown Exxx instruction
$E64    $0124   SYS      $124            ; System call to 124
$E66    $1F7F   JP       $F7F            ; Jump to F7F
$E68    $2677   CALL     $677            ; Call subroutine at 677
$E6A    $A3BE   LD       I, $3BE         ; Load 3BE into I
$E6C    $E812   UNKNOWN  $E812           ; Unknown Exxx instruction
$E6E    $B915   JP       V0, $915        ; Jump to V0 + 915
$E70    $63F1   LD       V3, #F1         ; Load 241 into V3
$E72    $9308   UNKNOWN  $9308           ; Unknown 9xxx instruction
$E74    $80E2   AND      V0, VE          ; V0 &= VE
$E76    $E03B   UNKNOWN  $E03B           ; Unknown Exxx instruction
$E78    $8425   SUB      V4, V2          ; V4 -= V2, VF = !borrow
$E7A    $1B90   JP       $B90            ; Jump to B90
$E7C    $A8B7   LD       I, $8B7         ; Load 8B7 into I
$E7E    $689A   LD       V8, #9A         ; Load 154 into V8
$E80    $3B8C   SE       VB, #8C         ; Skip if VB == 140
$E82    $4741   SNE      V7, #41         ; Skip if V7 != 65
$E84    $3D61   SE       VD, #61         ; Skip if VD == 97
$E86    $52AE   UNKNOWN  $52AE           ; Unknown 5xxx instruction
$E88    $BF83   JP       V0, $F83        ; Jump to V0 + F83
$E8A    $047D   SYS      $47D            ; System call to 47D
$E8C    $96D2   UNKNOWN  $96D2           ; Unknown 9xxx instruction
$E8E    $DAA3   DRW      VA, VA, #3      ; Draw 3-byte sprite at VA, VA
$E90    $35DE   SE       V5, #DE         ; Skip if V5 == 222
$E92    $4D8E   SNE      VD, #8E         ; Skip if VD != 142
$E94    $7665   ADD      V6, #65         ; Add 101 to V6
$E96    $8484   ADD      V4, V8          ; V4 += V8, VF = carry
$E98    $BB92   JP       V0, $B92        ; Jump to V0 + B92
$E9A    $849C   UNKNOWN  849C            ; Unknown 8xxx instruction
$E9C    $9718   UNKNOWN  $9718           ; Unknown 9xxx instruction
$E9E    $0A37   SYS      $A37            ; System call to A37
$EA0    $ED85   UNKNOWN  $ED85           ; Unknown Exxx instruction
$EA2    $B7D4   JP       V0, $7D4        ; Jump to V0 + 7D4
$EA4    $48ED   SNE      V8, #ED         ; Skip if V8 != 237
$EA6    $1950   JP       $950            ; Jump to 950
$EA8    $E382   UNKNOWN  $E382           ; Unknown Exxx instruction
$EAA    $69D3   LD       V9, #D3         ; Load 211 into V9
$EAC    $8CB4   ADD      VC, VB          ; VC += VB, VF = carry
$EAE    $A776   LD       I, $776         ; Load 776 into I
$EB0    $5E6E   UNKNOWN  $5E6E           ; Unknown 5xxx instruction
$EB2    $2E06   CALL     $E06            ; Call subroutine at E06
$EB4    $3783   SE       V7, #83         ; Skip if V7 == 131
$EB6    $9D9B   UNKNOWN  $9D9B           ; Unknown 9xxx instruction
$EB8    $3E90   SE       VE, #90         ; Skip if VE == 144
$EBA    $26BE   CALL     $6BE            ; Call subroutine at 6BE
$EBC    $155D   JP       $55D            ; Jump to 55D
$EBE    $B405   JP       V0, $405        ; Jump to V0 + 405
$EC0    $EBF1   UNKNOWN  $EBF1           ; Unknown Exxx instruction
$EC2    $FCB2   UNKNOWN  FCB2            ; Unknown Fxxx instruction
$EC4    $A7E0   LD       I, $7E0         ; Load 7E0 into I
$EC6    $7E67   ADD      VE, #67         ; Add 103 to VE
$EC8    $6F3A   LD       VF, #3A         ; Load 58 into VF
$ECA    $55B2   UNKNOWN  $55B2           ; Unknown 5xxx instruction
$ECC    $8C52   AND      VC, V5          ; VC &= V5
$ECE    $EC24   UNKNOWN  $EC24           ; Unknown Exxx instruction
$ED0    $4334   SNE      V3, #34         ; Skip if V3 != 52
$ED2    $B7E9   JP       V0, $7E9        ; Jump to V0 + 7E9
$ED4    $3885   SE       V8, #85         ; Skip if V8 == 133
$ED6    $E17D   UNKNOWN  $E17D           ; Unknown Exxx instruction
$ED8    $1691   JP       $691            ; Jump to 691
$EDA    $34ED   SE       V4, #ED         ; Skip if V4 == 237
$EDC    $61E5   LD       V1, #E5         ; Load 229 into V1
$EDE    $0F2A   SYS      $F2A            ; System call to F2A
$EE0    $15D8   JP       $5D8            ; Jump to 5D8
$EE2    $4B01   SNE      VB, #01         ; Skip if VB != 1
$EE4    $FD62   UNKNOWN  FD62            ; Unknown Fxxx instruction
$EE6    $2611   CALL     $611            ; Call subroutine at 611
$EE8    $B19A   JP       V0, $19A        ; Jump to V0 + 19A
$EEA    $D960   DRW      V9, V6, #0      ; Draw 0-byte sprite at V9, V6
$EEC    $0A42   SYS      $A42            ; System call to A42
$EEE    $3170   SE       V1, #70         ; Skip if V1 == 112
$EF0    $1465   JP       $465            ; Jump to 465
$EF2    $2918   CALL     $918            ; Call subroutine at 918
$EF4    $0E31   SYS      $E31            ; System call to E31
$EF6    $6BDE   LD       VB, #DE         ; Load 222 into VB
$EF8    $9EC7   UNKNOWN  $9EC7           ; Unknown 9xxx instruction
$EFA    $B7DB   JP       V0, $7DB        ; Jump to V0 + 7DB
$EFC    $F7D0   UNKNOWN  F7D0            ; Unknown Fxxx instruction
$EFE    $291F   CALL     $91F            ; Call subroutine at 91F
$F00    $98EA   UNKNOWN  $98EA           ; Unknown 9xxx instruction
$F02    $9D1B   UNKNOWN  $9D1B           ; Unknown 9xxx instruction
$F04    $FD4F   UNKNOWN  FD4F            ; Unknown Fxxx instruction
$F06    $E2DF   UNKNOWN  $E2DF           ; Unknown Exxx instruction
$F08    $8D76   SHR      VD              ; VD >>= 1, VF = LSB
$F0A    $064D   SYS      $64D            ; System call to 64D
$F0C    $0AC2   SYS      $AC2            ; System call to AC2
$F0E    $A9EC   LD       I, $9EC         ; Load 9EC into I
$F10    $18A5   JP       $8A5            ; Jump to 8A5
$F12    $870D   UNKNOWN  870D            ; Unknown 8xxx instruction
$F14    $F559   UNKNOWN  F559            ; Unknown Fxxx instruction
$F16    $86C9   UNKNOWN  86C9            ; Unknown 8xxx instruction
$F18    $CC20   RND      VC, #20         ; VC = random & 20
$F1A    $6BAA   LD       VB, #AA         ; Load 170 into VB
$F1C    $C960   RND      V9, #60         ; V9 = random & 60
$F1E    $B80F   JP       V0, $80F        ; Jump to V0 + 80F
$F20    $6DA5   LD       VD, #A5         ; Load 165 into VD
$F22    $DCDD   DRW      VC, VD, #D      ; Draw 13-byte sprite at VC, VD
$F24    $AF56   LD       I, $F56         ; Load F56 into I
$F26    $1014   JP       $014            ; Jump to 014
$F28    $C20F   RND      V2, #0F         ; V2 = random & 0F
$F2A    $1C12   JP       $C12            ; Jump to C12
$F2C    $ECED   UNKNOWN  $ECED           ; Unknown Exxx instruction
$F2E    $142D   JP       $42D            ; Jump to 42D
$F30    $AF8B   LD       I, $F8B         ; Load F8B into I
$F32    $FF17   UNKNOWN  FF17            ; Unknown Fxxx instruction
$F34    $D290   DRW      V2, V9, #0      ; Draw 0-byte sprite at V2, V9
$F36    $4339   SNE      V3, #39         ; Skip if V3 != 57
$F38    $A047   LD       I, $047         ; Load 047 into I
$F3A    $789E   ADD      V8, #9E         ; Add 158 to V8
$F3C    $4D51   SNE      VD, #51         ; Skip if VD != 81
$F3E    $B0D5   JP       V0, $0D5        ; Jump to V0 + 0D5
$F40    $2E4B   CALL     $E4B            ; Call subroutine at E4B
$F42    $471A   SNE      V7, #1A         ; Skip if V7 != 26
$F44    $F858   UNKNOWN  F858            ; Unknown Fxxx instruction
$F46    $5EB5   UNKNOWN  $5EB5           ; Unknown 5xxx instruction
$F48    $EAE2   UNKNOWN  $EAE2           ; Unknown Exxx instruction
$F4A    $D2E8   DRW      V2, VE, #8      ; Draw 8-byte sprite at V2, VE
$F4C    $9F25   UNKNOWN  $9F25           ; Unknown 9xxx instruction
$F4E    $76FF   ADD      V6, #FF         ; Add 255 to V6
$F50    $2082   CALL     $082            ; Call subroutine at 082
$F52    $EA16   UNKNOWN  $EA16           ; Unknown Exxx instruction
$F54    $C11E   RND      V1, #1E         ; V1 = random & 1E
$F56    $A762   LD       I, $762         ; Load 762 into I
$F58    $AF8D   LD       I, $F8D         ; Load F8D into I
$F5A    $0DCC   SYS      $DCC            ; System call to DCC
$F5C    $05D7   SYS      $5D7            ; System call to 5D7
$F5E    $638F   LD       V3, #8F         ; Load 143 into V3
$F60    $C20E   RND      V2, #0E         ; V2 = random & 0E
$F62    $E99A   UNKNOWN  $E99A           ; Unknown Exxx instruction
$F64    $91D0   SNE      V1, VD          ; Skip if V1 != VD
$F66    $1158   JP       $158            ; Jump to 158
$F68    $F10A   LD       V1, K           ; Wait for key press, store in V1
$F6A    $29B0   CALL     $9B0            ; Call subroutine at 9B0
$F6C    $7E82   ADD      VE, #82         ; Add 130 to VE
$F6E    $B6F7   JP       V0, $6F7        ; Jump to V0 + 6F7
$F70    $227A   CALL     $27A            ; Call subroutine at 27A
$F72    $14E3   JP       $4E3            ; Jump to 4E3
$F74    $6987   LD       V9, #87         ; Load 135 into V9
$F76    $A3BA   LD       I, $3BA         ; Load 3BA into I
$F78    $45D2   SNE      V5, #D2         ; Skip if V5 != 210
$F7A    $58C1   UNKNOWN  $58C1           ; Unknown 5xxx instruction
$F7C    $C320   RND      V3, #20         ; V3 = random & 20
$F7E    $3FFE   SE       VF, #FE         ; Skip if VF == 254
$F80    $A1F7   LD       I, $1F7         ; Load 1F7 into I
$F82    $A4CE   LD       I, $4CE         ; Load 4CE into I
$F84    $4781   SNE      V7, #81         ; Skip if V7 != 129
$F86    $37F8   SE       V7, #F8         ; Skip if V7 == 248
$F88    $D436   DRW      V4, V3, #6      ; Draw 6-byte sprite at V4, V3
$F8A    $D7F3   DRW      V7, VF, #3      ; Draw 3-byte sprite at V7, VF
$F8C    $0FF3   SYS      $FF3            ; System call to FF3
$F8E    $9B5E   UNKNOWN  $9B5E           ; Unknown 9xxx instruction
$F90    $BBD2   JP       V0, $BD2        ; Jump to V0 + BD2
$F92    $B3FE   JP       V0, $3FE        ; Jump to V0 + 3FE
$F94    $3923   SE       V9, #23         ; Skip if V9 == 35
$F96    $A823   LD       I, $823         ; Load 823 into I
$F98    $4016   SNE      V0, #16         ; Skip if V0 != 22
$F9A    $D279   DRW      V2, V7, #9      ; Draw 9-byte sprite at V2, V7
$F9C    $3B80   SE       VB, #80         ; Skip if VB == 128
$F9E    $F2DB   UNKNOWN  F2DB            ; Unknown Fxxx instruction
$FA0    $ABA9   LD       I, $BA9         ; Load BA9 into I
$FA2    $EF1B   UNKNOWN  $EF1B           ; Unknown Exxx instruction
$FA4    $A096   LD       I, $096         ; Load 096 into I
$FA6    $BE05   JP       V0, $E05        ; Jump to V0 + E05
$FA8    $B081   JP       V0, $081        ; Jump to V0 + 081
$FAA    $56B6   UNKNOWN  $56B6           ; Unknown 5xxx instruction
$FAC    $CB0D   RND      VB, #0D         ; VB = random & 0D
$FAE    $A8AF   LD       I, $8AF         ; Load 8AF into I
$FB0    $47C4   SNE      V7, #C4         ; Skip if V7 != 196
$FB2    $5381   UNKNOWN  $5381           ; Unknown 5xxx instruction
$FB4    $CBA3   RND      VB, #A3         ; VB = random & A3
$FB6    $443C   SNE      V4, #3C         ; Skip if V4 != 60
$FB8    $2523   CALL     $523            ; Call subroutine at 523
$FBA    $77B8   ADD      V7, #B8         ; Add 184 to V7
$FBC    $0A7E   SYS      $A7E            ; System call to A7E
$FBE    $A50F   LD       I, $50F         ; Load 50F into I
$FC0    $976B   UNKNOWN  $976B           ; Unknown 9xxx instruction
$FC2    $DCCA   DRW      VC, VC, #A      ; Draw 10-byte sprite at VC, VC
$FC4    $6DD9   LD       VD, #D9         ; Load 217 into VD
$FC6    $7811   ADD      V8, #11         ; Add 17 to V8
$FC8    $DA71   DRW      VA, V7, #1      ; Draw 1-byte sprite at VA, V7
$FCA    $3A25   SE       VA, #25         ; Skip if VA == 37
$FCC    $05D5   SYS      $5D5            ; System call to 5D5
$FCE    $9349   UNKNOWN  $9349           ; Unknown 9xxx instruction
$FD0    $97BC   UNKNOWN  $97BC           ; Unknown 9xxx instruction
$FD2    $2282   CALL     $282            ; Call subroutine at 282
$FD4    $AA44   LD       I, $A44         ; Load A44 into I
$FD6    $3C5B   SE       VC, #5B         ; Skip if VC == 91
$FD8    $819A   UNKNOWN  819A            ; Unknown 8xxx instruction
$FDA    $5E9F   UNKNOWN  $5E9F           ; Unknown 5xxx instruction
$FDC    $56CE   UNKNOWN  $56CE           ; Unknown 5xxx instruction
$FDE    $B0E2   JP       V0, $0E2        ; Jump to V0 + 0E2
$FE0    $8722   AND      V7, V2          ; V7 &= V2
$FE2    $073B   SYS      $73B            ; System call to 73B
$FE4    $F4F0   UNKNOWN  F4F0            ; Unknown Fxxx instruction
$FE6    $359E   SE       V5, #9E         ; Skip if V5 == 158
$FE8    $B4F5   JP       V0, $4F5        ; Jump to V0 + 4F5
$FEA    $7BA2   ADD      VB, #A2         ; Add 162 to VB
$FEC    $333F   SE       V3, #3F         ; Skip if V3 == 63
$FEE    $2A30   CALL     $A30            ; Call subroutine at A30
$FF0    $C679   RND      V6, #79         ; V6 = random & 79
$FF2    $EB0E   UNKNOWN  $EB0E           ; Unknown Exxx instruction
$FF4    $DF5D   DRW      VF, V5, #D      ; Draw 13-byte sprite at VF, V5
$FF6    $CA3C   RND      VA, #3C         ; VA = random & 3C
$FF8    $0E26   SYS      $E26            ; System call to E26
$FFA    $D8EF   DRW      V8, VE, #F      ; Draw 15-byte sprite at V8, VE
$FFC    $C148   RND      V1, #48         ; V1 = random & 48
$FFE    $14BE   JP       $4BE            ; Jump to 4BE

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 450 (25.1%)
  JP      : 250 (14.0%)
  LD      : 232 (12.9%)
  SE      : 123 ( 6.9%)
  RND     : 119 ( 6.6%)
  SYS     : 116 ( 6.5%)
  CALL    : 116 ( 6.5%)
  ADD     : 114 ( 6.4%)
  DRW     : 113 ( 6.3%)
  SNE     : 111 ( 6.2%)
  SUB     :  10 ( 0.6%)
  AND     :   9 ( 0.5%)
  SHL     :   6 ( 0.3%)
  SUBN    :   6 ( 0.3%)
  XOR     :   6 ( 0.3%)
  OR      :   5 ( 0.3%)
  SHR     :   5 ( 0.3%)
  SKP     :   1 ( 0.1%)

Memory Operations: 346 (19.3%)
Arithmetic Operations: 150 (8.4%)
