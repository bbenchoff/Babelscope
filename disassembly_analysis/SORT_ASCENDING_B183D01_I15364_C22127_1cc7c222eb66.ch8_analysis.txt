
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B183D01_I15364_C22127_1cc7c222eb66.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 183
Instance: 15364
Direction: ascending
Final Array: [40, 40, 40, 40, 40, 40, 40, 108]
Operations: R:0 W:7 C:823 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 102
Sort Array References:
  $23A: LD I, $2E0 ; Load 2E0 into I
  $256: LD I, $3E2 ; Load 3E2 into I
  $262: LD I, $B41 ; Load B41 into I
  $268: LD I, $B80 ; Load B80 into I
  $270: LD I, $9F8 ; Load 9F8 into I
  $27C: LD I, $0C3 ; Load 0C3 into I
  $318: LD I, $592 ; Load 592 into I
  $31A: LD I, $B78 ; Load B78 into I
  $320: LD I, $842 ; Load 842 into I
  $326: LD I, $896 ; Load 896 into I
  $334: LD I, $4A9 ; Load 4A9 into I
  $34E: LD I, $D83 ; Load D83 into I
  $364: LD I, $047 ; Load 047 into I
  $38E: LD I, $0EB ; Load 0EB into I
  $392: LD I, $7CA ; Load 7CA into I
  $3AA: LD I, $957 ; Load 957 into I
  $3BC: LD I, $C10 ; Load C10 into I
  $3CA: LD I, $867 ; Load 867 into I
  $3D8: LD I, $6B0 ; Load 6B0 into I
  $3E0: LD I, $B6F ; Load B6F into I
  $43E: LD I, $C37 ; Load C37 into I
  $45A: LD I, $C1A ; Load C1A into I
  $4B2: LD I, $302 ; Load 302 into I
  $4E6: LD I, $68D ; Load 68D into I
  $500: LD I, $5ED ; Load 5ED into I
  $514: LD I, $F6A ; Load F6A into I
  $59A: LD I, $8DB ; Load 8DB into I
  $5C8: LD I, $F97 ; Load F97 into I
  $5CA: LD I, $69D ; Load 69D into I
  $61A: LD I, $208 ; Load 208 into I
  $620: LD I, $676 ; Load 676 into I
  $64E: LD I, $8ED ; Load 8ED into I
  $662: LD I, $72C ; Load 72C into I
  $692: LD I, $27F ; Load 27F into I
  $6BC: LD I, $B97 ; Load B97 into I
  $6D6: LD I, $C56 ; Load C56 into I
  $6E6: LD I, $0AD ; Load 0AD into I
  $73A: LD I, $F97 ; Load F97 into I
  $766: LD I, $147 ; Load 147 into I
  $77C: LD I, $70A ; Load 70A into I
  $782: LD I, $253 ; Load 253 into I
  $784: LD I, $5C3 ; Load 5C3 into I
  $78C: LD I, $D5B ; Load D5B into I
  $7A2: LD I, $BF5 ; Load BF5 into I
  $820: LD I, $F2C ; Load F2C into I
  $828: LD [I], V4 ; Store V0-V4 at I
  $85C: LD I, $FF4 ; Load FF4 into I
  $8C0: LD I, $557 ; Load 557 into I
  $8C6: LD I, $48B ; Load 48B into I
  $8D6: LD I, $041 ; Load 041 into I
  $8DC: LD I, $529 ; Load 529 into I
  $904: LD I, $D8E ; Load D8E into I
  $988: LD I, $FD1 ; Load FD1 into I
  $9B4: LD [I], V0 ; Store V0-V0 at I
  $9D4: LD I, $043 ; Load 043 into I
  $A06: LD I, $5A7 ; Load 5A7 into I
  $A48: LD I, $B16 ; Load B16 into I
  $A5C: LD I, $886 ; Load 886 into I
  $A5E: LD I, $259 ; Load 259 into I
  $ABA: LD I, $664 ; Load 664 into I
  $AC4: LD I, $B02 ; Load B02 into I
  $B06: LD I, $233 ; Load 233 into I
  $B28: LD I, $57A ; Load 57A into I
  $B5A: LD I, $817 ; Load 817 into I
  $B66: LD I, $DCE ; Load DCE into I
  $B78: LD I, $DF7 ; Load DF7 into I
  $B82: LD I, $6E7 ; Load 6E7 into I
  $B94: LD I, $1E8 ; Load 1E8 into I
  $BC2: LD I, $581 ; Load 581 into I
  $BDE: LD I, $7D2 ; Load 7D2 into I
  $BE8: ADD I, VE ; I ADDRESS MANIPULATION
  $C04: LD I, $79A ; Load 79A into I
  $C14: LD I, $6CA ; Load 6CA into I
  $C26: LD I, $FFF ; Load FFF into I
  $C52: LD I, $5E9 ; Load 5E9 into I
  $C6E: LD I, $1FD ; Load 1FD into I
  $C80: LD I, $860 ; Load 860 into I
  $C92: LD I, $93D ; Load 93D into I
  $CCC: LD I, $B44 ; Load B44 into I
  $D4E: LD I, $F57 ; Load F57 into I
  $D66: LD I, $062 ; Load 062 into I
  $D68: LD I, $BA3 ; Load BA3 into I
  $D86: LD I, $4C7 ; Load 4C7 into I
  $DB0: LD I, $6BB ; Load 6BB into I
  $DE8: LD I, $D5C ; Load D5C into I
  $DF2: LD I, $696 ; Load 696 into I
  $E02: LD I, $A3A ; Load A3A into I
  $E24: LD I, $88B ; Load 88B into I
  $E2C: LD I, $DCE ; Load DCE into I
  $EA8: LD I, $2F3 ; Load 2F3 into I
  $ED6: LD I, $8BD ; Load 8BD into I
  $EEA: LD I, $ACD ; Load ACD into I
  $EEE: LD I, $545 ; Load 545 into I
  $EF2: LD I, $949 ; Load 949 into I
  $EFE: LD I, $E12 ; Load E12 into I
  $F08: LD I, $8C9 ; Load 8C9 into I
  $F16: LD I, $800 ; Load 800 into I
  $F8C: LD I, $E7F ; Load E7F into I
  $FB0: LD I, $B22 ; Load B22 into I
  $FBE: LD I, $F7D ; Load F7D into I
  $FDC: LD I, $06A ; Load 06A into I
  $FF8: LD I, $470 ; Load 470 into I

CONTROL FLOW ANALYSIS:
Jumps: 208
Calls: 194
Branches: 224
Loops: 123
Loop Structures:
  $33A -> $1B0 (backward jump)
  $39A -> $0C1 (backward jump)
  $3C2 -> $0B1 (backward jump)
  $424 -> $3C3 (backward jump)
  $47C -> $036 (backward jump)
  $4DE -> $194 (backward jump)
  $572 -> $519 (backward jump)
  $5AA -> $033 (backward jump)
  $602 -> $06B (backward jump)
  $624 -> $0EF (backward jump)
  $626 -> $415 (backward jump)
  $628 -> $2A6 (backward jump)
  $646 -> $620 (backward jump)
  $656 -> $5C8 (backward jump)
  $674 -> $166 (backward jump)
  $676 -> $052 (backward jump)
  $682 -> $388 (backward jump)
  $6B8 -> $0F3 (backward jump)
  $6CA -> $674 (backward jump)
  $6D2 -> $4EE (backward jump)
  $6DA -> $01E (backward jump)
  $6E2 -> $60A (backward jump)
  $6EA -> $183 (backward jump)
  $6F4 -> $1D3 (backward jump)
  $738 -> $604 (backward jump)
  $748 -> $0E5 (backward jump)
  $75E -> $56F (backward jump)
  $79C -> $594 (backward jump)
  $7B4 -> $37E (backward jump)
  $7E4 -> $248 (backward jump)
  $8FE -> $37E (backward jump)
  $90A -> $700 (backward jump)
  $918 -> $81E (backward jump)
  $920 -> $75A (backward jump)
  $92A -> $5A9 (backward jump)
  $942 -> $8B7 (backward jump)
  $98C -> $3DC (backward jump)
  $9AE -> $394 (backward jump)
  $9D0 -> $813 (backward jump)
  $9D2 -> $13A (backward jump)
  $9E0 -> $3C9 (backward jump)
  $9F0 -> $9B8 (backward jump)
  $A02 -> $832 (backward jump)
  $A1E -> $A1E (backward jump)
  $A3A -> $44B (backward jump)
  $A50 -> $125 (backward jump)
  $A52 -> $5AC (backward jump)
  $A74 -> $48A (backward jump)
  $A78 -> $572 (backward jump)
  $A7A -> $8A4 (backward jump)
  $A84 -> $39A (backward jump)
  $A8E -> $0B4 (backward jump)
  $A9A -> $69A (backward jump)
  $AB2 -> $2F0 (backward jump)
  $AB6 -> $1D1 (backward jump)
  $AC6 -> $646 (backward jump)
  $AD0 -> $342 (backward jump)
  $AE2 -> $3C5 (backward jump)
  $B1C -> $705 (backward jump)
  $B26 -> $52A (backward jump)
  $B2E -> $19E (backward jump)
  $B4A -> $184 (backward jump)
  $B7C -> $3C2 (backward jump)
  $B98 -> $8BF (backward jump)
  $B9A -> $606 (backward jump)
  $BC4 -> $65C (backward jump)
  $BCE -> $77D (backward jump)
  $BDA -> $159 (backward jump)
  $C08 -> $386 (backward jump)
  $C0E -> $8F8 (backward jump)
  $C22 -> $7C3 (backward jump)
  $C30 -> $2C2 (backward jump)
  $C54 -> $218 (backward jump)
  $C56 -> $079 (backward jump)
  $C58 -> $026 (backward jump)
  $CC2 -> $120 (backward jump)
  $CC8 -> $0E2 (backward jump)
  $CCA -> $63C (backward jump)
  $CD0 -> $BBB (backward jump)
  $CE8 -> $8E2 (backward jump)
  $CF2 -> $9C8 (backward jump)
  $CFE -> $3C8 (backward jump)
  $D0C -> $6E1 (backward jump)
  $D18 -> $35B (backward jump)
  $D1A -> $810 (backward jump)
  $D1E -> $3AE (backward jump)
  $D24 -> $39F (backward jump)
  $D28 -> $1D1 (backward jump)
  $D2E -> $4AC (backward jump)
  $D6A -> $84A (backward jump)
  $D6C -> $8E2 (backward jump)
  $D84 -> $3FA (backward jump)
  $D92 -> $B9C (backward jump)
  $DA2 -> $D2A (backward jump)
  $DA6 -> $0A9 (backward jump)
  $DAC -> $D36 (backward jump)
  $DDE -> $0B3 (backward jump)
  $DF4 -> $599 (backward jump)
  $E00 -> $88F (backward jump)
  $E22 -> $6A4 (backward jump)
  $E2E -> $372 (backward jump)
  $E3C -> $CC3 (backward jump)
  $E4C -> $29F (backward jump)
  $E5E -> $264 (backward jump)
  $E64 -> $86A (backward jump)
  $E68 -> $6BE (backward jump)
  $E7C -> $4C1 (backward jump)
  $E86 -> $7A3 (backward jump)
  $E90 -> $D1D (backward jump)
  $E94 -> $B94 (backward jump)
  $EC6 -> $EC2 (backward jump)
  $EC8 -> $B87 (backward jump)
  $EFA -> $83E (backward jump)
  $F4E -> $B97 (backward jump)
  $F56 -> $ACD (backward jump)
  $F74 -> $D10 (backward jump)
  $F7E -> $B61 (backward jump)
  $F92 -> $E88 (backward jump)
  $F98 -> $6E1 (backward jump)
  $FA6 -> $584 (backward jump)
  $FE4 -> $E92 (backward jump)
  $FE8 -> $C23 (backward jump)
  $FF2 -> $09B (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $EDC0   UNKNOWN  $EDC0           ; Unknown Exxx instruction
$202    $ECD7   UNKNOWN  $ECD7           ; Unknown Exxx instruction
$204    $7BA3   ADD      VB, #A3         ; Add 163 to VB
$206    $FAE0   UNKNOWN  FAE0            ; Unknown Fxxx instruction
$208    $1DB4   JP       $DB4            ; Jump to DB4
$20A    $CD1A   RND      VD, #1A         ; VD = random & 1A
$20C    $0274   SYS      $274            ; System call to 274
$20E    $E42E   UNKNOWN  $E42E           ; Unknown Exxx instruction
$210    $9559   UNKNOWN  $9559           ; Unknown 9xxx instruction
$212    $4972   SNE      V9, #72         ; Skip if V9 != 114
$214    $F040   UNKNOWN  F040            ; Unknown Fxxx instruction
$216    $2CD1   CALL     $CD1            ; Call subroutine at CD1
$218    $F387   UNKNOWN  F387            ; Unknown Fxxx instruction
$21A    $C1AD   RND      V1, #AD         ; V1 = random & AD
$21C    $185D   JP       $85D            ; Jump to 85D
$21E    $E996   UNKNOWN  $E996           ; Unknown Exxx instruction
$220    $509E   UNKNOWN  $509E           ; Unknown 5xxx instruction
$222    $7ED6   ADD      VE, #D6         ; Add 214 to VE
$224    $4374   SNE      V3, #74         ; Skip if V3 != 116
$226    $D719   DRW      V7, V1, #9      ; Draw 9-byte sprite at V7, V1
$228    $E693   UNKNOWN  $E693           ; Unknown Exxx instruction
$22A    $2AA0   CALL     $AA0            ; Call subroutine at AA0
$22C    $78D1   ADD      V8, #D1         ; Add 209 to V8
$22E    $934B   UNKNOWN  $934B           ; Unknown 9xxx instruction
$230    $CDD8   RND      VD, #D8         ; VD = random & D8
$232    $56BE   UNKNOWN  $56BE           ; Unknown 5xxx instruction
$234    $E77B   UNKNOWN  $E77B           ; Unknown Exxx instruction
$236    $33C1   SE       V3, #C1         ; Skip if V3 == 193
$238    $0F3B   SYS      $F3B            ; System call to F3B
$23A    $A2E0   LD       I, $2E0         ; Load 2E0 into I
$23C    $7A84   ADD      VA, #84         ; Add 132 to VA
$23E    $D7FA   DRW      V7, VF, #A      ; Draw 10-byte sprite at V7, VF
$240    $839C   UNKNOWN  839C            ; Unknown 8xxx instruction
$242    $00DD   SYS      $0DD            ; System call to 0DD
$244    $EFCA   UNKNOWN  $EFCA           ; Unknown Exxx instruction
$246    $DCFA   DRW      VC, VF, #A      ; Draw 10-byte sprite at VC, VF
$248    $4169   SNE      V1, #69         ; Skip if V1 != 105
$24A    $4F56   SNE      VF, #56         ; Skip if VF != 86
$24C    $F13E   UNKNOWN  F13E            ; Unknown Fxxx instruction
$24E    $153A   JP       $53A            ; Jump to 53A
$250    $CDF5   RND      VD, #F5         ; VD = random & F5
$252    $1B64   JP       $B64            ; Jump to B64
$254    $C800   RND      V8, #00         ; V8 = random & 00
$256    $A3E2   LD       I, $3E2         ; Load 3E2 into I
$258    $B82B   JP       V0, $82B        ; Jump to V0 + 82B
$25A    $F33F   UNKNOWN  F33F            ; Unknown Fxxx instruction
$25C    $3FB2   SE       VF, #B2         ; Skip if VF == 178
$25E    $0EE3   SYS      $EE3            ; System call to EE3
$260    $E5E1   UNKNOWN  $E5E1           ; Unknown Exxx instruction
$262    $AB41   LD       I, $B41         ; Load B41 into I
$264    $D5BF   DRW      V5, VB, #F      ; Draw 15-byte sprite at V5, VB
$266    $6962   LD       V9, #62         ; Load 98 into V9
$268    $AB80   LD       I, $B80         ; Load B80 into I
$26A    $1D5E   JP       $D5E            ; Jump to D5E
$26C    $EEE5   UNKNOWN  $EEE5           ; Unknown Exxx instruction
$26E    $0477   SYS      $477            ; System call to 477
$270    $A9F8   LD       I, $9F8         ; Load 9F8 into I
$272    $EB89   UNKNOWN  $EB89           ; Unknown Exxx instruction
$274    $BC38   JP       V0, $C38        ; Jump to V0 + C38
$276    $9C21   UNKNOWN  $9C21           ; Unknown 9xxx instruction
$278    $4E32   SNE      VE, #32         ; Skip if VE != 50
$27A    $6B9B   LD       VB, #9B         ; Load 155 into VB
$27C    $A0C3   LD       I, $0C3         ; Load 0C3 into I
$27E    $6B28   LD       VB, #28         ; Load 40 into VB
$280    $2828   CALL     $828            ; Call subroutine at 828
$282    $2828   CALL     $828            ; Call subroutine at 828
$284    $2828   CALL     $828            ; Call subroutine at 828
$286    $2828   CALL     $828            ; Call subroutine at 828
$288    $2828   CALL     $828            ; Call subroutine at 828
$28A    $2828   CALL     $828            ; Call subroutine at 828
$28C    $2828   CALL     $828            ; Call subroutine at 828
$28E    $2828   CALL     $828            ; Call subroutine at 828
$290    $2828   CALL     $828            ; Call subroutine at 828
$292    $2828   CALL     $828            ; Call subroutine at 828
$294    $2828   CALL     $828            ; Call subroutine at 828
$296    $2828   CALL     $828            ; Call subroutine at 828
$298    $2828   CALL     $828            ; Call subroutine at 828
$29A    $2828   CALL     $828            ; Call subroutine at 828
$29C    $2828   CALL     $828            ; Call subroutine at 828
$29E    $2828   CALL     $828            ; Call subroutine at 828
$2A0    $2828   CALL     $828            ; Call subroutine at 828
$2A2    $2828   CALL     $828            ; Call subroutine at 828
$2A4    $2828   CALL     $828            ; Call subroutine at 828
$2A6    $2828   CALL     $828            ; Call subroutine at 828
$2A8    $2828   CALL     $828            ; Call subroutine at 828
$2AA    $2828   CALL     $828            ; Call subroutine at 828
$2AC    $2828   CALL     $828            ; Call subroutine at 828
$2AE    $2828   CALL     $828            ; Call subroutine at 828
$2B0    $2828   CALL     $828            ; Call subroutine at 828
$2B2    $2828   CALL     $828            ; Call subroutine at 828
$2B4    $2828   CALL     $828            ; Call subroutine at 828
$2B6    $2828   CALL     $828            ; Call subroutine at 828
$2B8    $2828   CALL     $828            ; Call subroutine at 828
$2BA    $2828   CALL     $828            ; Call subroutine at 828
$2BC    $2828   CALL     $828            ; Call subroutine at 828
$2BE    $2828   CALL     $828            ; Call subroutine at 828
$2C0    $2828   CALL     $828            ; Call subroutine at 828
$2C2    $2828   CALL     $828            ; Call subroutine at 828
$2C4    $2828   CALL     $828            ; Call subroutine at 828
$2C6    $2828   CALL     $828            ; Call subroutine at 828
$2C8    $2828   CALL     $828            ; Call subroutine at 828
$2CA    $2828   CALL     $828            ; Call subroutine at 828
$2CC    $2828   CALL     $828            ; Call subroutine at 828
$2CE    $2828   CALL     $828            ; Call subroutine at 828
$2D0    $2828   CALL     $828            ; Call subroutine at 828
$2D2    $2828   CALL     $828            ; Call subroutine at 828
$2D4    $2828   CALL     $828            ; Call subroutine at 828
$2D6    $2828   CALL     $828            ; Call subroutine at 828
$2D8    $2828   CALL     $828            ; Call subroutine at 828
$2DA    $2828   CALL     $828            ; Call subroutine at 828
$2DC    $2828   CALL     $828            ; Call subroutine at 828
$2DE    $2828   CALL     $828            ; Call subroutine at 828
$2E0    $2828   CALL     $828            ; Call subroutine at 828
$2E2    $2828   CALL     $828            ; Call subroutine at 828
$2E4    $2828   CALL     $828            ; Call subroutine at 828
$2E6    $2828   CALL     $828            ; Call subroutine at 828
$2E8    $2828   CALL     $828            ; Call subroutine at 828
$2EA    $2828   CALL     $828            ; Call subroutine at 828
$2EC    $2828   CALL     $828            ; Call subroutine at 828
$2EE    $2828   CALL     $828            ; Call subroutine at 828
$2F0    $2828   CALL     $828            ; Call subroutine at 828
$2F2    $2828   CALL     $828            ; Call subroutine at 828
$2F4    $2828   CALL     $828            ; Call subroutine at 828
$2F6    $2828   CALL     $828            ; Call subroutine at 828
$2F8    $2828   CALL     $828            ; Call subroutine at 828
$2FA    $2828   CALL     $828            ; Call subroutine at 828
$2FC    $2828   CALL     $828            ; Call subroutine at 828
$2FE    $2828   CALL     $828            ; Call subroutine at 828
$300    $2828   CALL     $828            ; Call subroutine at 828
$302    $2828   CALL     $828            ; Call subroutine at 828
$304    $2828   CALL     $828            ; Call subroutine at 828
$306    $286C   CALL     $86C            ; Call subroutine at 86C
$308    $9A3C   UNKNOWN  $9A3C           ; Unknown 9xxx instruction
$30A    $80DD   UNKNOWN  80DD            ; Unknown 8xxx instruction
$30C    $C89E   RND      V8, #9E         ; V8 = random & 9E
$30E    $02B6   SYS      $2B6            ; System call to 2B6
$310    $59BD   UNKNOWN  $59BD           ; Unknown 5xxx instruction
$312    $B745   JP       V0, $745        ; Jump to V0 + 745
$314    $B63B   JP       V0, $63B        ; Jump to V0 + 63B
$316    $13A1   JP       $3A1            ; Jump to 3A1
$318    $A592   LD       I, $592         ; Load 592 into I
$31A    $AB78   LD       I, $B78         ; Load B78 into I
$31C    $2521   CALL     $521            ; Call subroutine at 521
$31E    $BE0F   JP       V0, $E0F        ; Jump to V0 + E0F
$320    $A842   LD       I, $842         ; Load 842 into I
$322    $8545   SUB      V5, V4          ; V5 -= V4, VF = !borrow
$324    $B979   JP       V0, $979        ; Jump to V0 + 979
$326    $A896   LD       I, $896         ; Load 896 into I
$328    $4A27   SNE      VA, #27         ; Skip if VA != 39
$32A    $4B7C   SNE      VB, #7C         ; Skip if VB != 124
$32C    $2738   CALL     $738            ; Call subroutine at 738
$32E    $B8B9   JP       V0, $8B9        ; Jump to V0 + 8B9
$330    $9101   UNKNOWN  $9101           ; Unknown 9xxx instruction
$332    $2063   CALL     $063            ; Call subroutine at 063
$334    $A4A9   LD       I, $4A9         ; Load 4A9 into I
$336    $C977   RND      V9, #77         ; V9 = random & 77
$338    $34FF   SE       V4, #FF         ; Skip if V4 == 255
$33A    $B1B0   JP       V0, $1B0        ; Jump to V0 + 1B0
$33C    $40D7   SNE      V0, #D7         ; Skip if V0 != 215
$33E    $5C43   UNKNOWN  $5C43           ; Unknown 5xxx instruction
$340    $C391   RND      V3, #91         ; V3 = random & 91
$342    $B8EF   JP       V0, $8EF        ; Jump to V0 + 8EF
$344    $647C   LD       V4, #7C         ; Load 124 into V4
$346    $7669   ADD      V6, #69         ; Add 105 to V6
$348    $37B7   SE       V7, #B7         ; Skip if V7 == 183
$34A    $7D46   ADD      VD, #46         ; Add 70 to VD
$34C    $CEE6   RND      VE, #E6         ; VE = random & E6
$34E    $AD83   LD       I, $D83         ; Load D83 into I
$350    $243A   CALL     $43A            ; Call subroutine at 43A
$352    $0C3B   SYS      $C3B            ; System call to C3B
$354    $9984   UNKNOWN  $9984           ; Unknown 9xxx instruction
$356    $69DA   LD       V9, #DA         ; Load 218 into V9
$358    $97DB   UNKNOWN  $97DB           ; Unknown 9xxx instruction
$35A    $69C3   LD       V9, #C3         ; Load 195 into V9
$35C    $C137   RND      V1, #37         ; V1 = random & 37
$35E    $9385   UNKNOWN  $9385           ; Unknown 9xxx instruction
$360    $BD29   JP       V0, $D29        ; Jump to V0 + D29
$362    $FB6A   UNKNOWN  FB6A            ; Unknown Fxxx instruction
$364    $A047   LD       I, $047         ; Load 047 into I
$366    $C3A7   RND      V3, #A7         ; V3 = random & A7
$368    $DAD0   DRW      VA, VD, #0      ; Draw 0-byte sprite at VA, VD
$36A    $93E1   UNKNOWN  $93E1           ; Unknown 9xxx instruction
$36C    $E67C   UNKNOWN  $E67C           ; Unknown Exxx instruction
$36E    $95D7   UNKNOWN  $95D7           ; Unknown 9xxx instruction
$370    $2DE0   CALL     $DE0            ; Call subroutine at DE0
$372    $C499   RND      V4, #99         ; V4 = random & 99
$374    $8DFE   SHL      VD              ; VD <<= 1, VF = MSB
$376    $F10A   LD       V1, K           ; Wait for key press, store in V1
$378    $C351   RND      V3, #51         ; V3 = random & 51
$37A    $B685   JP       V0, $685        ; Jump to V0 + 685
$37C    $2BC5   CALL     $BC5            ; Call subroutine at BC5
$37E    $409D   SNE      V0, #9D         ; Skip if V0 != 157
$380    $E7EF   UNKNOWN  $E7EF           ; Unknown Exxx instruction
$382    $59E1   UNKNOWN  $59E1           ; Unknown 5xxx instruction
$384    $FF9E   UNKNOWN  FF9E            ; Unknown Fxxx instruction
$386    $00B2   SYS      $0B2            ; System call to 0B2
$388    $F401   UNKNOWN  F401            ; Unknown Fxxx instruction
$38A    $B575   JP       V0, $575        ; Jump to V0 + 575
$38C    $B91A   JP       V0, $91A        ; Jump to V0 + 91A
$38E    $A0EB   LD       I, $0EB         ; Load 0EB into I
$390    $0A2A   SYS      $A2A            ; System call to A2A
$392    $A7CA   LD       I, $7CA         ; Load 7CA into I
$394    $6419   LD       V4, #19         ; Load 25 into V4
$396    $6FB6   LD       VF, #B6         ; Load 182 into VF
$398    $6580   LD       V5, #80         ; Load 128 into V5
$39A    $10C1   JP       $0C1            ; Jump to 0C1
$39C    $8274   ADD      V2, V7          ; V2 += V7, VF = carry
$39E    $8960   LD       V9, V6          ; V9 = V6
$3A0    $340A   SE       V4, #0A         ; Skip if V4 == 10
$3A2    $07A0   SYS      $7A0            ; System call to 7A0
$3A4    $F6DA   UNKNOWN  F6DA            ; Unknown Fxxx instruction
$3A6    $5959   UNKNOWN  $5959           ; Unknown 5xxx instruction
$3A8    $1C00   JP       $C00            ; Jump to C00
$3AA    $A957   LD       I, $957         ; Load 957 into I
$3AC    $0D92   SYS      $D92            ; System call to D92
$3AE    $1AEC   JP       $AEC            ; Jump to AEC
$3B0    $F6DA   UNKNOWN  F6DA            ; Unknown Fxxx instruction
$3B2    $4A30   SNE      VA, #30         ; Skip if VA != 48
$3B4    $3023   SE       V0, #23         ; Skip if V0 == 35
$3B6    $E219   UNKNOWN  $E219           ; Unknown Exxx instruction
$3B8    $1CEB   JP       $CEB            ; Jump to CEB
$3BA    $C3C0   RND      V3, #C0         ; V3 = random & C0
$3BC    $AC10   LD       I, $C10         ; Load C10 into I
$3BE    $6956   LD       V9, #56         ; Load 86 into V9
$3C0    $E69D   UNKNOWN  $E69D           ; Unknown Exxx instruction
$3C2    $B0B1   JP       V0, $0B1        ; Jump to V0 + 0B1
$3C4    $0D44   SYS      $D44            ; System call to D44
$3C6    $C8B0   RND      V8, #B0         ; V8 = random & B0
$3C8    $0E26   SYS      $E26            ; System call to E26
$3CA    $A867   LD       I, $867         ; Load 867 into I
$3CC    $06A6   SYS      $6A6            ; System call to 6A6
$3CE    $334D   SE       V3, #4D         ; Skip if V3 == 77
$3D0    $720B   ADD      V2, #0B         ; Add 11 to V2
$3D2    $07B7   SYS      $7B7            ; System call to 7B7
$3D4    $9DF4   UNKNOWN  $9DF4           ; Unknown 9xxx instruction
$3D6    $DEFA   DRW      VE, VF, #A      ; Draw 10-byte sprite at VE, VF
$3D8    $A6B0   LD       I, $6B0         ; Load 6B0 into I
$3DA    $2E8F   CALL     $E8F            ; Call subroutine at E8F
$3DC    $4FB8   SNE      VF, #B8         ; Skip if VF != 184
$3DE    $7FBB   ADD      VF, #BB         ; Add 187 to VF
$3E0    $AB6F   LD       I, $B6F         ; Load B6F into I
$3E2    $7D3D   ADD      VD, #3D         ; Add 61 to VD
$3E4    $642A   LD       V4, #2A         ; Load 42 into V4
$3E6    $80B6   SHR      V0              ; V0 >>= 1, VF = LSB
$3E8    $3BCB   SE       VB, #CB         ; Skip if VB == 203
$3EA    $2945   CALL     $945            ; Call subroutine at 945
$3EC    $E832   UNKNOWN  $E832           ; Unknown Exxx instruction
$3EE    $344D   SE       V4, #4D         ; Skip if V4 == 77
$3F0    $4FE9   SNE      VF, #E9         ; Skip if VF != 233
$3F2    $694E   LD       V9, #4E         ; Load 78 into V9
$3F4    $9D09   UNKNOWN  $9D09           ; Unknown 9xxx instruction
$3F6    $03E3   SYS      $3E3            ; System call to 3E3
$3F8    $2132   CALL     $132            ; Call subroutine at 132
$3FA    $22CB   CALL     $2CB            ; Call subroutine at 2CB
$3FC    $65B8   LD       V5, #B8         ; Load 184 into V5
$3FE    $9362   UNKNOWN  $9362           ; Unknown 9xxx instruction
$400    $62B4   LD       V2, #B4         ; Load 180 into V2
$402    $3499   SE       V4, #99         ; Skip if V4 == 153
$404    $582B   UNKNOWN  $582B           ; Unknown 5xxx instruction
$406    $07D8   SYS      $7D8            ; System call to 7D8
$408    $B6E1   JP       V0, $6E1        ; Jump to V0 + 6E1
$40A    $0221   SYS      $221            ; System call to 221
$40C    $3619   SE       V6, #19         ; Skip if V6 == 25
$40E    $DF4E   DRW      VF, V4, #E      ; Draw 14-byte sprite at VF, V4
$410    $D1D1   DRW      V1, VD, #1      ; Draw 1-byte sprite at V1, VD
$412    $E2AA   UNKNOWN  $E2AA           ; Unknown Exxx instruction
$414    $D7C6   DRW      V7, VC, #6      ; Draw 6-byte sprite at V7, VC
$416    $830D   UNKNOWN  830D            ; Unknown 8xxx instruction
$418    $E086   UNKNOWN  $E086           ; Unknown Exxx instruction
$41A    $43AA   SNE      V3, #AA         ; Skip if V3 != 170
$41C    $E72E   UNKNOWN  $E72E           ; Unknown Exxx instruction
$41E    $003D   SYS      $03D            ; System call to 03D
$420    $CA83   RND      VA, #83         ; VA = random & 83
$422    $0BA7   SYS      $BA7            ; System call to BA7
$424    $B3C3   JP       V0, $3C3        ; Jump to V0 + 3C3
$426    $4056   SNE      V0, #56         ; Skip if V0 != 86
$428    $8BD2   AND      VB, VD          ; VB &= VD
$42A    $EF73   UNKNOWN  $EF73           ; Unknown Exxx instruction
$42C    $89C3   XOR      V9, VC          ; V9 ^= VC
$42E    $849F   UNKNOWN  849F            ; Unknown 8xxx instruction
$430    $5C37   UNKNOWN  $5C37           ; Unknown 5xxx instruction
$432    $E9EC   UNKNOWN  $E9EC           ; Unknown Exxx instruction
$434    $1FC5   JP       $FC5            ; Jump to FC5
$436    $293F   CALL     $93F            ; Call subroutine at 93F
$438    $2CA4   CALL     $CA4            ; Call subroutine at CA4
$43A    $CEE7   RND      VE, #E7         ; VE = random & E7
$43C    $3AEE   SE       VA, #EE         ; Skip if VA == 238
$43E    $AC37   LD       I, $C37         ; Load C37 into I
$440    $06F7   SYS      $6F7            ; System call to 6F7
$442    $3C6C   SE       VC, #6C         ; Skip if VC == 108
$444    $DE58   DRW      VE, V5, #8      ; Draw 8-byte sprite at VE, V5
$446    $F8C1   UNKNOWN  F8C1            ; Unknown Fxxx instruction
$448    $7042   ADD      V0, #42         ; Add 66 to V0
$44A    $E92E   UNKNOWN  $E92E           ; Unknown Exxx instruction
$44C    $8D43   XOR      VD, V4          ; VD ^= V4
$44E    $D2C9   DRW      V2, VC, #9      ; Draw 9-byte sprite at V2, VC
$450    $147C   JP       $47C            ; Jump to 47C
$452    $32CE   SE       V2, #CE         ; Skip if V2 == 206
$454    $0236   SYS      $236            ; System call to 236
$456    $3282   SE       V2, #82         ; Skip if V2 == 130
$458    $C2D8   RND      V2, #D8         ; V2 = random & D8
$45A    $AC1A   LD       I, $C1A         ; Load C1A into I
$45C    $8190   LD       V1, V9          ; V1 = V9
$45E    $0A05   SYS      $A05            ; System call to A05
$460    $434A   SNE      V3, #4A         ; Skip if V3 != 74
$462    $B73D   JP       V0, $73D        ; Jump to V0 + 73D
$464    $75B2   ADD      V5, #B2         ; Add 178 to V5
$466    $5E5E   UNKNOWN  $5E5E           ; Unknown 5xxx instruction
$468    $D656   DRW      V6, V5, #6      ; Draw 6-byte sprite at V6, V5
$46A    $3324   SE       V3, #24         ; Skip if V3 == 36
$46C    $6C95   LD       VC, #95         ; Load 149 into VC
$46E    $3938   SE       V9, #38         ; Skip if V9 == 56
$470    $63FD   LD       V3, #FD         ; Load 253 into V3
$472    $EE2B   UNKNOWN  $EE2B           ; Unknown Exxx instruction
$474    $66A0   LD       V6, #A0         ; Load 160 into V6
$476    $CD41   RND      VD, #41         ; VD = random & 41
$478    $9EF7   UNKNOWN  $9EF7           ; Unknown 9xxx instruction
$47A    $CDAB   RND      VD, #AB         ; VD = random & AB
$47C    $1036   JP       $036            ; Jump to 036
$47E    $FE04   UNKNOWN  FE04            ; Unknown Fxxx instruction
$480    $23EF   CALL     $3EF            ; Call subroutine at 3EF
$482    $EB22   UNKNOWN  $EB22           ; Unknown Exxx instruction
$484    $7ABA   ADD      VA, #BA         ; Add 186 to VA
$486    $5DC0   SE       VD, VC          ; Skip if VD == VC
$488    $32C0   SE       V2, #C0         ; Skip if V2 == 192
$48A    $95EE   UNKNOWN  $95EE           ; Unknown 9xxx instruction
$48C    $BCA5   JP       V0, $CA5        ; Jump to V0 + CA5
$48E    $0E19   SYS      $E19            ; System call to E19
$490    $2EDF   CALL     $EDF            ; Call subroutine at EDF
$492    $EF8C   UNKNOWN  $EF8C           ; Unknown Exxx instruction
$494    $772A   ADD      V7, #2A         ; Add 42 to V7
$496    $3B68   SE       VB, #68         ; Skip if VB == 104
$498    $9F08   UNKNOWN  $9F08           ; Unknown 9xxx instruction
$49A    $462C   SNE      V6, #2C         ; Skip if V6 != 44
$49C    $D154   DRW      V1, V5, #4      ; Draw 4-byte sprite at V1, V5
$49E    $C791   RND      V7, #91         ; V7 = random & 91
$4A0    $0040   SYS      $040            ; System call to 040
$4A2    $739C   ADD      V3, #9C         ; Add 156 to V3
$4A4    $157B   JP       $57B            ; Jump to 57B
$4A6    $B8ED   JP       V0, $8ED        ; Jump to V0 + 8ED
$4A8    $17DA   JP       $7DA            ; Jump to 7DA
$4AA    $5F58   UNKNOWN  $5F58           ; Unknown 5xxx instruction
$4AC    $DB16   DRW      VB, V1, #6      ; Draw 6-byte sprite at VB, V1
$4AE    $9344   UNKNOWN  $9344           ; Unknown 9xxx instruction
$4B0    $3525   SE       V5, #25         ; Skip if V5 == 37
$4B2    $A302   LD       I, $302         ; Load 302 into I
$4B4    $957F   UNKNOWN  $957F           ; Unknown 9xxx instruction
$4B6    $FD20   UNKNOWN  FD20            ; Unknown Fxxx instruction
$4B8    $B99C   JP       V0, $99C        ; Jump to V0 + 99C
$4BA    $C23F   RND      V2, #3F         ; V2 = random & 3F
$4BC    $72A9   ADD      V2, #A9         ; Add 169 to V2
$4BE    $C149   RND      V1, #49         ; V1 = random & 49
$4C0    $5A63   UNKNOWN  $5A63           ; Unknown 5xxx instruction
$4C2    $581F   UNKNOWN  $581F           ; Unknown 5xxx instruction
$4C4    $3248   SE       V2, #48         ; Skip if V2 == 72
$4C6    $B55B   JP       V0, $55B        ; Jump to V0 + 55B
$4C8    $37B8   SE       V7, #B8         ; Skip if V7 == 184
$4CA    $2D7D   CALL     $D7D            ; Call subroutine at D7D
$4CC    $D065   DRW      V0, V6, #5      ; Draw 5-byte sprite at V0, V6
$4CE    $5B35   UNKNOWN  $5B35           ; Unknown 5xxx instruction
$4D0    $95F1   UNKNOWN  $95F1           ; Unknown 9xxx instruction
$4D2    $3A22   SE       VA, #22         ; Skip if VA == 34
$4D4    $95FE   UNKNOWN  $95FE           ; Unknown 9xxx instruction
$4D6    $23C8   CALL     $3C8            ; Call subroutine at 3C8
$4D8    $E2A8   UNKNOWN  $E2A8           ; Unknown Exxx instruction
$4DA    $F692   UNKNOWN  F692            ; Unknown Fxxx instruction
$4DC    $805B   UNKNOWN  805B            ; Unknown 8xxx instruction
$4DE    $1194   JP       $194            ; Jump to 194
$4E0    $008C   SYS      $08C            ; System call to 08C
$4E2    $8CEF   UNKNOWN  8CEF            ; Unknown 8xxx instruction
$4E4    $998F   UNKNOWN  $998F           ; Unknown 9xxx instruction
$4E6    $A68D   LD       I, $68D         ; Load 68D into I
$4E8    $50CE   UNKNOWN  $50CE           ; Unknown 5xxx instruction
$4EA    $56CD   UNKNOWN  $56CD           ; Unknown 5xxx instruction
$4EC    $1986   JP       $986            ; Jump to 986
$4EE    $1659   JP       $659            ; Jump to 659
$4F0    $7DB8   ADD      VD, #B8         ; Add 184 to VD
$4F2    $6652   LD       V6, #52         ; Load 82 into V6
$4F4    $1DA9   JP       $DA9            ; Jump to DA9
$4F6    $1870   JP       $870            ; Jump to 870
$4F8    $5A60   SE       VA, V6          ; Skip if VA == V6
$4FA    $F5D3   UNKNOWN  F5D3            ; Unknown Fxxx instruction
$4FC    $F0D3   UNKNOWN  F0D3            ; Unknown Fxxx instruction
$4FE    $26F8   CALL     $6F8            ; Call subroutine at 6F8
$500    $A5ED   LD       I, $5ED         ; Load 5ED into I
$502    $9ECC   UNKNOWN  $9ECC           ; Unknown 9xxx instruction
$504    $67A5   LD       V7, #A5         ; Load 165 into V7
$506    $F188   UNKNOWN  F188            ; Unknown Fxxx instruction
$508    $0637   SYS      $637            ; System call to 637
$50A    $E977   UNKNOWN  $E977           ; Unknown Exxx instruction
$50C    $FAF0   UNKNOWN  FAF0            ; Unknown Fxxx instruction
$50E    $9288   UNKNOWN  $9288           ; Unknown 9xxx instruction
$510    $F13E   UNKNOWN  F13E            ; Unknown Fxxx instruction
$512    $D0CF   DRW      V0, VC, #F      ; Draw 15-byte sprite at V0, VC
$514    $AF6A   LD       I, $F6A         ; Load F6A into I
$516    $888B   UNKNOWN  888B            ; Unknown 8xxx instruction
$518    $C206   RND      V2, #06         ; V2 = random & 06
$51A    $43FA   SNE      V3, #FA         ; Skip if V3 != 250
$51C    $0714   SYS      $714            ; System call to 714
$51E    $F897   UNKNOWN  F897            ; Unknown Fxxx instruction
$520    $3975   SE       V9, #75         ; Skip if V9 == 117
$522    $22D1   CALL     $2D1            ; Call subroutine at 2D1
$524    $752D   ADD      V5, #2D         ; Add 45 to V5
$526    $532B   UNKNOWN  $532B           ; Unknown 5xxx instruction
$528    $6272   LD       V2, #72         ; Load 114 into V2
$52A    $3101   SE       V1, #01         ; Skip if V1 == 1
$52C    $4122   SNE      V1, #22         ; Skip if V1 != 34
$52E    $36F4   SE       V6, #F4         ; Skip if V6 == 244
$530    $462D   SNE      V6, #2D         ; Skip if V6 != 45
$532    $5571   UNKNOWN  $5571           ; Unknown 5xxx instruction
$534    $50C9   UNKNOWN  $50C9           ; Unknown 5xxx instruction
$536    $D877   DRW      V8, V7, #7      ; Draw 7-byte sprite at V8, V7
$538    $E113   UNKNOWN  $E113           ; Unknown Exxx instruction
$53A    $236E   CALL     $36E            ; Call subroutine at 36E
$53C    $D23A   DRW      V2, V3, #A      ; Draw 10-byte sprite at V2, V3
$53E    $E041   UNKNOWN  $E041           ; Unknown Exxx instruction
$540    $888B   UNKNOWN  888B            ; Unknown 8xxx instruction
$542    $27EF   CALL     $7EF            ; Call subroutine at 7EF
$544    $E1FC   UNKNOWN  $E1FC           ; Unknown Exxx instruction
$546    $7D4D   ADD      VD, #4D         ; Add 77 to VD
$548    $2066   CALL     $066            ; Call subroutine at 066
$54A    $E7EE   UNKNOWN  $E7EE           ; Unknown Exxx instruction
$54C    $CC79   RND      VC, #79         ; VC = random & 79
$54E    $8378   UNKNOWN  8378            ; Unknown 8xxx instruction
$550    $570A   UNKNOWN  $570A           ; Unknown 5xxx instruction
$552    $7130   ADD      V1, #30         ; Add 48 to V1
$554    $5E9E   UNKNOWN  $5E9E           ; Unknown 5xxx instruction
$556    $34DF   SE       V4, #DF         ; Skip if V4 == 223
$558    $242F   CALL     $42F            ; Call subroutine at 42F
$55A    $F694   UNKNOWN  F694            ; Unknown Fxxx instruction
$55C    $279D   CALL     $79D            ; Call subroutine at 79D
$55E    $E741   UNKNOWN  $E741           ; Unknown Exxx instruction
$560    $501D   UNKNOWN  $501D           ; Unknown 5xxx instruction
$562    $83AB   UNKNOWN  83AB            ; Unknown 8xxx instruction
$564    $96AA   UNKNOWN  $96AA           ; Unknown 9xxx instruction
$566    $E4B1   UNKNOWN  $E4B1           ; Unknown Exxx instruction
$568    $8915   SUB      V9, V1          ; V9 -= V1, VF = !borrow
$56A    $5766   UNKNOWN  $5766           ; Unknown 5xxx instruction
$56C    $96C8   UNKNOWN  $96C8           ; Unknown 9xxx instruction
$56E    $1D5F   JP       $D5F            ; Jump to D5F
$570    $9E4F   UNKNOWN  $9E4F           ; Unknown 9xxx instruction
$572    $1519   JP       $519            ; Jump to 519
$574    $F807   LD       V8, DT          ; V8 = delay timer
$576    $4F39   SNE      VF, #39         ; Skip if VF != 57
$578    $FC21   UNKNOWN  FC21            ; Unknown Fxxx instruction
$57A    $0F84   SYS      $F84            ; System call to F84
$57C    $29D9   CALL     $9D9            ; Call subroutine at 9D9
$57E    $0699   SYS      $699            ; System call to 699
$580    $2E5A   CALL     $E5A            ; Call subroutine at E5A
$582    $EE65   UNKNOWN  $EE65           ; Unknown Exxx instruction
$584    $3293   SE       V2, #93         ; Skip if V2 == 147
$586    $1821   JP       $821            ; Jump to 821
$588    $D477   DRW      V4, V7, #7      ; Draw 7-byte sprite at V4, V7
$58A    $D60E   DRW      V6, V0, #E      ; Draw 14-byte sprite at V6, V0
$58C    $6FBC   LD       VF, #BC         ; Load 188 into VF
$58E    $5F5A   UNKNOWN  $5F5A           ; Unknown 5xxx instruction
$590    $E2B1   UNKNOWN  $E2B1           ; Unknown Exxx instruction
$592    $97B0   SNE      V7, VB          ; Skip if V7 != VB
$594    $87C8   UNKNOWN  87C8            ; Unknown 8xxx instruction
$596    $B778   JP       V0, $778        ; Jump to V0 + 778
$598    $30FD   SE       V0, #FD         ; Skip if V0 == 253
$59A    $A8DB   LD       I, $8DB         ; Load 8DB into I
$59C    $E00A   UNKNOWN  $E00A           ; Unknown Exxx instruction
$59E    $5CFF   UNKNOWN  $5CFF           ; Unknown 5xxx instruction
$5A0    $F1FC   UNKNOWN  F1FC            ; Unknown Fxxx instruction
$5A2    $8059   UNKNOWN  8059            ; Unknown 8xxx instruction
$5A4    $006C   SYS      $06C            ; System call to 06C
$5A6    $740A   ADD      V4, #0A         ; Add 10 to V4
$5A8    $5BC8   UNKNOWN  $5BC8           ; Unknown 5xxx instruction
$5AA    $1033   JP       $033            ; Jump to 033
$5AC    $BABA   JP       V0, $ABA        ; Jump to V0 + ABA
$5AE    $9A9F   UNKNOWN  $9A9F           ; Unknown 9xxx instruction
$5B0    $22CC   CALL     $2CC            ; Call subroutine at 2CC
$5B2    $975C   UNKNOWN  $975C           ; Unknown 9xxx instruction
$5B4    $7FD2   ADD      VF, #D2         ; Add 210 to VF
$5B6    $D2D8   DRW      V2, VD, #8      ; Draw 8-byte sprite at V2, VD
$5B8    $7951   ADD      V9, #51         ; Add 81 to V9
$5BA    $0358   SYS      $358            ; System call to 358
$5BC    $C350   RND      V3, #50         ; V3 = random & 50
$5BE    $BCDC   JP       V0, $CDC        ; Jump to V0 + CDC
$5C0    $37C8   SE       V7, #C8         ; Skip if V7 == 200
$5C2    $D801   DRW      V8, V0, #1      ; Draw 1-byte sprite at V8, V0
$5C4    $2E0E   CALL     $E0E            ; Call subroutine at E0E
$5C6    $4E13   SNE      VE, #13         ; Skip if VE != 19
$5C8    $AF97   LD       I, $F97         ; Load F97 into I
$5CA    $A69D   LD       I, $69D         ; Load 69D into I
$5CC    $EB0E   UNKNOWN  $EB0E           ; Unknown Exxx instruction
$5CE    $C88F   RND      V8, #8F         ; V8 = random & 8F
$5D0    $38C7   SE       V8, #C7         ; Skip if V8 == 199
$5D2    $3862   SE       V8, #62         ; Skip if V8 == 98
$5D4    $5BAB   UNKNOWN  $5BAB           ; Unknown 5xxx instruction
$5D6    $3C78   SE       VC, #78         ; Skip if VC == 120
$5D8    $E751   UNKNOWN  $E751           ; Unknown Exxx instruction
$5DA    $91D6   UNKNOWN  $91D6           ; Unknown 9xxx instruction
$5DC    $3CB0   SE       VC, #B0         ; Skip if VC == 176
$5DE    $E366   UNKNOWN  $E366           ; Unknown Exxx instruction
$5E0    $8DDB   UNKNOWN  8DDB            ; Unknown 8xxx instruction
$5E2    $FA9A   UNKNOWN  FA9A            ; Unknown Fxxx instruction
$5E4    $8AAA   UNKNOWN  8AAA            ; Unknown 8xxx instruction
$5E6    $3C91   SE       VC, #91         ; Skip if VC == 145
$5E8    $7FAC   ADD      VF, #AC         ; Add 172 to VF
$5EA    $0B39   SYS      $B39            ; System call to B39
$5EC    $0928   SYS      $928            ; System call to 928
$5EE    $5AD1   UNKNOWN  $5AD1           ; Unknown 5xxx instruction
$5F0    $9A5A   UNKNOWN  $9A5A           ; Unknown 9xxx instruction
$5F2    $5181   UNKNOWN  $5181           ; Unknown 5xxx instruction
$5F4    $E74E   UNKNOWN  $E74E           ; Unknown Exxx instruction
$5F6    $1862   JP       $862            ; Jump to 862
$5F8    $CD12   RND      VD, #12         ; VD = random & 12
$5FA    $2463   CALL     $463            ; Call subroutine at 463
$5FC    $5A76   UNKNOWN  $5A76           ; Unknown 5xxx instruction
$5FE    $7DB5   ADD      VD, #B5         ; Add 181 to VD
$600    $DD58   DRW      VD, V5, #8      ; Draw 8-byte sprite at VD, V5
$602    $106B   JP       $06B            ; Jump to 06B
$604    $E99D   UNKNOWN  $E99D           ; Unknown Exxx instruction
$606    $95FC   UNKNOWN  $95FC           ; Unknown 9xxx instruction
$608    $8A23   XOR      VA, V2          ; VA ^= V2
$60A    $B94B   JP       V0, $94B        ; Jump to V0 + 94B
$60C    $3BAC   SE       VB, #AC         ; Skip if VB == 172
$60E    $6C6F   LD       VC, #6F         ; Load 111 into VC
$610    $FCAF   UNKNOWN  FCAF            ; Unknown Fxxx instruction
$612    $9E38   UNKNOWN  $9E38           ; Unknown 9xxx instruction
$614    $607C   LD       V0, #7C         ; Load 124 into V0
$616    $9807   UNKNOWN  $9807           ; Unknown 9xxx instruction
$618    $BE9C   JP       V0, $E9C        ; Jump to V0 + E9C
$61A    $A208   LD       I, $208         ; Load 208 into I
$61C    $C123   RND      V1, #23         ; V1 = random & 23
$61E    $E87E   UNKNOWN  $E87E           ; Unknown Exxx instruction
$620    $A676   LD       I, $676         ; Load 676 into I
$622    $280D   CALL     $80D            ; Call subroutine at 80D
$624    $B0EF   JP       V0, $0EF        ; Jump to V0 + 0EF
$626    $B415   JP       V0, $415        ; Jump to V0 + 415
$628    $12A6   JP       $2A6            ; Jump to 2A6
$62A    $4819   SNE      V8, #19         ; Skip if V8 != 25
$62C    $7474   ADD      V4, #74         ; Add 116 to V4
$62E    $17C0   JP       $7C0            ; Jump to 7C0
$630    $36DE   SE       V6, #DE         ; Skip if V6 == 222
$632    $E863   UNKNOWN  $E863           ; Unknown Exxx instruction
$634    $3E06   SE       VE, #06         ; Skip if VE == 6
$636    $848F   UNKNOWN  848F            ; Unknown 8xxx instruction
$638    $08DC   SYS      $8DC            ; System call to 8DC
$63A    $8E7A   UNKNOWN  8E7A            ; Unknown 8xxx instruction
$63C    $F74D   UNKNOWN  F74D            ; Unknown Fxxx instruction
$63E    $D255   DRW      V2, V5, #5      ; Draw 5-byte sprite at V2, V5
$640    $0C4A   SYS      $C4A            ; System call to C4A
$642    $7FF3   ADD      VF, #F3         ; Add 243 to VF
$644    $F67C   UNKNOWN  F67C            ; Unknown Fxxx instruction
$646    $B620   JP       V0, $620        ; Jump to V0 + 620
$648    $27B6   CALL     $7B6            ; Call subroutine at 7B6
$64A    $70AC   ADD      V0, #AC         ; Add 172 to V0
$64C    $C144   RND      V1, #44         ; V1 = random & 44
$64E    $A8ED   LD       I, $8ED         ; Load 8ED into I
$650    $4E4E   SNE      VE, #4E         ; Skip if VE != 78
$652    $828E   SHL      V2              ; V2 <<= 1, VF = MSB
$654    $0FCD   SYS      $FCD            ; System call to FCD
$656    $15C8   JP       $5C8            ; Jump to 5C8
$658    $3EC1   SE       VE, #C1         ; Skip if VE == 193
$65A    $DDC0   DRW      VD, VC, #0      ; Draw 0-byte sprite at VD, VC
$65C    $5933   UNKNOWN  $5933           ; Unknown 5xxx instruction
$65E    $1809   JP       $809            ; Jump to 809
$660    $6006   LD       V0, #06         ; Load 6 into V0
$662    $A72C   LD       I, $72C         ; Load 72C into I
$664    $2974   CALL     $974            ; Call subroutine at 974
$666    $2657   CALL     $657            ; Call subroutine at 657
$668    $D2F8   DRW      V2, VF, #8      ; Draw 8-byte sprite at V2, VF
$66A    $765D   ADD      V6, #5D         ; Add 93 to V6
$66C    $44FE   SNE      V4, #FE         ; Skip if V4 != 254
$66E    $1AD5   JP       $AD5            ; Jump to AD5
$670    $C155   RND      V1, #55         ; V1 = random & 55
$672    $4E92   SNE      VE, #92         ; Skip if VE != 146
$674    $B166   JP       V0, $166        ; Jump to V0 + 166
$676    $1052   JP       $052            ; Jump to 052
$678    $31FF   SE       V1, #FF         ; Skip if V1 == 255
$67A    $2EC6   CALL     $EC6            ; Call subroutine at EC6
$67C    $2EBB   CALL     $EBB            ; Call subroutine at EBB
$67E    $0448   SYS      $448            ; System call to 448
$680    $339D   SE       V3, #9D         ; Skip if V3 == 157
$682    $B388   JP       V0, $388        ; Jump to V0 + 388
$684    $C6DA   RND      V6, #DA         ; V6 = random & DA
$686    $9F1C   UNKNOWN  $9F1C           ; Unknown 9xxx instruction
$688    $E4CC   UNKNOWN  $E4CC           ; Unknown Exxx instruction
$68A    $4E4A   SNE      VE, #4A         ; Skip if VE != 74
$68C    $DBE2   DRW      VB, VE, #2      ; Draw 2-byte sprite at VB, VE
$68E    $C401   RND      V4, #01         ; V4 = random & 01
$690    $2D33   CALL     $D33            ; Call subroutine at D33
$692    $A27F   LD       I, $27F         ; Load 27F into I
$694    $49C1   SNE      V9, #C1         ; Skip if V9 != 193
$696    $84E1   OR       V4, VE          ; V4 |= VE
$698    $C79A   RND      V7, #9A         ; V7 = random & 9A
$69A    $D5C2   DRW      V5, VC, #2      ; Draw 2-byte sprite at V5, VC
$69C    $0A25   SYS      $A25            ; System call to A25
$69E    $DA2D   DRW      VA, V2, #D      ; Draw 13-byte sprite at VA, V2
$6A0    $5A66   UNKNOWN  $5A66           ; Unknown 5xxx instruction
$6A2    $C36F   RND      V3, #6F         ; V3 = random & 6F
$6A4    $FB4E   UNKNOWN  FB4E            ; Unknown Fxxx instruction
$6A6    $E905   UNKNOWN  $E905           ; Unknown Exxx instruction
$6A8    $C038   RND      V0, #38         ; V0 = random & 38
$6AA    $865E   SHL      V6              ; V6 <<= 1, VF = MSB
$6AC    $2883   CALL     $883            ; Call subroutine at 883
$6AE    $2F69   CALL     $F69            ; Call subroutine at F69
$6B0    $D563   DRW      V5, V6, #3      ; Draw 3-byte sprite at V5, V6
$6B2    $629C   LD       V2, #9C         ; Load 156 into V2
$6B4    $7CFA   ADD      VC, #FA         ; Add 250 to VC
$6B6    $DAC2   DRW      VA, VC, #2      ; Draw 2-byte sprite at VA, VC
$6B8    $B0F3   JP       V0, $0F3        ; Jump to V0 + 0F3
$6BA    $97AC   UNKNOWN  $97AC           ; Unknown 9xxx instruction
$6BC    $AB97   LD       I, $B97         ; Load B97 into I
$6BE    $E62E   UNKNOWN  $E62E           ; Unknown Exxx instruction
$6C0    $0705   SYS      $705            ; System call to 705
$6C2    $539B   UNKNOWN  $539B           ; Unknown 5xxx instruction
$6C4    $DC2A   DRW      VC, V2, #A      ; Draw 10-byte sprite at VC, V2
$6C6    $031E   SYS      $31E            ; System call to 31E
$6C8    $709A   ADD      V0, #9A         ; Add 154 to V0
$6CA    $1674   JP       $674            ; Jump to 674
$6CC    $8517   SUBN     V5, V1          ; V5 = V1 - V5, VF = !borrow
$6CE    $53D2   UNKNOWN  $53D2           ; Unknown 5xxx instruction
$6D0    $9FC2   UNKNOWN  $9FC2           ; Unknown 9xxx instruction
$6D2    $B4EE   JP       V0, $4EE        ; Jump to V0 + 4EE
$6D4    $530C   UNKNOWN  $530C           ; Unknown 5xxx instruction
$6D6    $AC56   LD       I, $C56         ; Load C56 into I
$6D8    $3488   SE       V4, #88         ; Skip if V4 == 136
$6DA    $B01E   JP       V0, $01E        ; Jump to V0 + 01E
$6DC    $D8E0   DRW      V8, VE, #0      ; Draw 0-byte sprite at V8, VE
$6DE    $4C81   SNE      VC, #81         ; Skip if VC != 129
$6E0    $EE5F   UNKNOWN  $EE5F           ; Unknown Exxx instruction
$6E2    $160A   JP       $60A            ; Jump to 60A
$6E4    $3BED   SE       VB, #ED         ; Skip if VB == 237
$6E6    $A0AD   LD       I, $0AD         ; Load 0AD into I
$6E8    $0012   SYS      $012            ; System call to 012
$6EA    $B183   JP       V0, $183        ; Jump to V0 + 183
$6EC    $1C93   JP       $C93            ; Jump to C93
$6EE    $0882   SYS      $882            ; System call to 882
$6F0    $B72F   JP       V0, $72F        ; Jump to V0 + 72F
$6F2    $64CB   LD       V4, #CB         ; Load 203 into V4
$6F4    $11D3   JP       $1D3            ; Jump to 1D3
$6F6    $C90B   RND      V9, #0B         ; V9 = random & 0B
$6F8    $0641   SYS      $641            ; System call to 641
$6FA    $6492   LD       V4, #92         ; Load 146 into V4
$6FC    $8E5E   SHL      VE              ; VE <<= 1, VF = MSB
$6FE    $67B3   LD       V7, #B3         ; Load 179 into V7
$700    $4CF3   SNE      VC, #F3         ; Skip if VC != 243
$702    $8A95   SUB      VA, V9          ; VA -= V9, VF = !borrow
$704    $82BA   UNKNOWN  82BA            ; Unknown 8xxx instruction
$706    $E6C7   UNKNOWN  $E6C7           ; Unknown Exxx instruction
$708    $4C2F   SNE      VC, #2F         ; Skip if VC != 47
$70A    $BA83   JP       V0, $A83        ; Jump to V0 + A83
$70C    $BEA4   JP       V0, $EA4        ; Jump to V0 + EA4
$70E    $78C7   ADD      V8, #C7         ; Add 199 to V8
$710    $1CB7   JP       $CB7            ; Jump to CB7
$712    $CB16   RND      VB, #16         ; VB = random & 16
$714    $C498   RND      V4, #98         ; V4 = random & 98
$716    $6CC9   LD       VC, #C9         ; Load 201 into VC
$718    $CE03   RND      VE, #03         ; VE = random & 03
$71A    $283E   CALL     $83E            ; Call subroutine at 83E
$71C    $C24C   RND      V2, #4C         ; V2 = random & 4C
$71E    $84D2   AND      V4, VD          ; V4 &= VD
$720    $33E7   SE       V3, #E7         ; Skip if V3 == 231
$722    $BF89   JP       V0, $F89        ; Jump to V0 + F89
$724    $9BF0   SNE      VB, VF          ; Skip if VB != VF
$726    $E0C8   UNKNOWN  $E0C8           ; Unknown Exxx instruction
$728    $4390   SNE      V3, #90         ; Skip if V3 != 144
$72A    $D9FC   DRW      V9, VF, #C      ; Draw 12-byte sprite at V9, VF
$72C    $709F   ADD      V0, #9F         ; Add 159 to V0
$72E    $C5BF   RND      V5, #BF         ; V5 = random & BF
$730    $EA5E   UNKNOWN  $EA5E           ; Unknown Exxx instruction
$732    $948C   UNKNOWN  $948C           ; Unknown 9xxx instruction
$734    $EE56   UNKNOWN  $EE56           ; Unknown Exxx instruction
$736    $C724   RND      V7, #24         ; V7 = random & 24
$738    $B604   JP       V0, $604        ; Jump to V0 + 604
$73A    $AF97   LD       I, $F97         ; Load F97 into I
$73C    $E36B   UNKNOWN  $E36B           ; Unknown Exxx instruction
$73E    $3E73   SE       VE, #73         ; Skip if VE == 115
$740    $CD89   RND      VD, #89         ; VD = random & 89
$742    $5B3A   UNKNOWN  $5B3A           ; Unknown 5xxx instruction
$744    $781B   ADD      V8, #1B         ; Add 27 to V8
$746    $0FB1   SYS      $FB1            ; System call to FB1
$748    $B0E5   JP       V0, $0E5        ; Jump to V0 + 0E5
$74A    $C60E   RND      V6, #0E         ; V6 = random & 0E
$74C    $5DDE   UNKNOWN  $5DDE           ; Unknown 5xxx instruction
$74E    $7FE3   ADD      VF, #E3         ; Add 227 to VF
$750    $3010   SE       V0, #10         ; Skip if V0 == 16
$752    $CEE0   RND      VE, #E0         ; VE = random & E0
$754    $C0C1   RND      V0, #C1         ; V0 = random & C1
$756    $6A6F   LD       VA, #6F         ; Load 111 into VA
$758    $4907   SNE      V9, #07         ; Skip if V9 != 7
$75A    $DE24   DRW      VE, V2, #4      ; Draw 4-byte sprite at VE, V2
$75C    $FB80   UNKNOWN  FB80            ; Unknown Fxxx instruction
$75E    $B56F   JP       V0, $56F        ; Jump to V0 + 56F
$760    $3BE4   SE       VB, #E4         ; Skip if VB == 228
$762    $9A43   UNKNOWN  $9A43           ; Unknown 9xxx instruction
$764    $C6AA   RND      V6, #AA         ; V6 = random & AA
$766    $A147   LD       I, $147         ; Load 147 into I
$768    $ECDF   UNKNOWN  $ECDF           ; Unknown Exxx instruction
$76A    $0352   SYS      $352            ; System call to 352
$76C    $F91A   UNKNOWN  F91A            ; Unknown Fxxx instruction
$76E    $FD39   UNKNOWN  FD39            ; Unknown Fxxx instruction
$770    $3F5E   SE       VF, #5E         ; Skip if VF == 94
$772    $46AA   SNE      V6, #AA         ; Skip if V6 != 170
$774    $84C9   UNKNOWN  84C9            ; Unknown 8xxx instruction
$776    $E631   UNKNOWN  $E631           ; Unknown Exxx instruction
$778    $FBCF   UNKNOWN  FBCF            ; Unknown Fxxx instruction
$77A    $255C   CALL     $55C            ; Call subroutine at 55C
$77C    $A70A   LD       I, $70A         ; Load 70A into I
$77E    $0C5A   SYS      $C5A            ; System call to C5A
$780    $DA4D   DRW      VA, V4, #D      ; Draw 13-byte sprite at VA, V4
$782    $A253   LD       I, $253         ; Load 253 into I
$784    $A5C3   LD       I, $5C3         ; Load 5C3 into I
$786    $E67C   UNKNOWN  $E67C           ; Unknown Exxx instruction
$788    $FF06   UNKNOWN  FF06            ; Unknown Fxxx instruction
$78A    $3348   SE       V3, #48         ; Skip if V3 == 72
$78C    $AD5B   LD       I, $D5B         ; Load D5B into I
$78E    $1B10   JP       $B10            ; Jump to B10
$790    $2C0F   CALL     $C0F            ; Call subroutine at C0F
$792    $0234   SYS      $234            ; System call to 234
$794    $2343   CALL     $343            ; Call subroutine at 343
$796    $6423   LD       V4, #23         ; Load 35 into V4
$798    $E6A6   UNKNOWN  $E6A6           ; Unknown Exxx instruction
$79A    $420E   SNE      V2, #0E         ; Skip if V2 != 14
$79C    $1594   JP       $594            ; Jump to 594
$79E    $C95F   RND      V9, #5F         ; V9 = random & 5F
$7A0    $07A7   SYS      $7A7            ; System call to 7A7
$7A2    $ABF5   LD       I, $BF5         ; Load BF5 into I
$7A4    $054E   SYS      $54E            ; System call to 54E
$7A6    $66B7   LD       V6, #B7         ; Load 183 into V6
$7A8    $8833   XOR      V8, V3          ; V8 ^= V3
$7AA    $329F   SE       V2, #9F         ; Skip if V2 == 159
$7AC    $0B7D   SYS      $B7D            ; System call to B7D
$7AE    $5FE4   UNKNOWN  $5FE4           ; Unknown 5xxx instruction
$7B0    $8C34   ADD      VC, V3          ; VC += V3, VF = carry
$7B2    $BFC8   JP       V0, $FC8        ; Jump to V0 + FC8
$7B4    $137E   JP       $37E            ; Jump to 37E
$7B6    $E22B   UNKNOWN  $E22B           ; Unknown Exxx instruction
$7B8    $786A   ADD      V8, #6A         ; Add 106 to V8
$7BA    $522B   UNKNOWN  $522B           ; Unknown 5xxx instruction
$7BC    $8349   UNKNOWN  8349            ; Unknown 8xxx instruction
$7BE    $8ED8   UNKNOWN  8ED8            ; Unknown 8xxx instruction
$7C0    $D441   DRW      V4, V4, #1      ; Draw 1-byte sprite at V4, V4
$7C2    $65E1   LD       V5, #E1         ; Load 225 into V5
$7C4    $7962   ADD      V9, #62         ; Add 98 to V9
$7C6    $D3A3   DRW      V3, VA, #3      ; Draw 3-byte sprite at V3, VA
$7C8    $1FD6   JP       $FD6            ; Jump to FD6
$7CA    $5E99   UNKNOWN  $5E99           ; Unknown 5xxx instruction
$7CC    $3303   SE       V3, #03         ; Skip if V3 == 3
$7CE    $08C4   SYS      $8C4            ; System call to 8C4
$7D0    $EB11   UNKNOWN  $EB11           ; Unknown Exxx instruction
$7D2    $FEDB   UNKNOWN  FEDB            ; Unknown Fxxx instruction
$7D4    $8124   ADD      V1, V2          ; V1 += V2, VF = carry
$7D6    $D6ED   DRW      V6, VE, #D      ; Draw 13-byte sprite at V6, VE
$7D8    $EC65   UNKNOWN  $EC65           ; Unknown Exxx instruction
$7DA    $FB5A   UNKNOWN  FB5A            ; Unknown Fxxx instruction
$7DC    $DAD2   DRW      VA, VD, #2      ; Draw 2-byte sprite at VA, VD
$7DE    $4C38   SNE      VC, #38         ; Skip if VC != 56
$7E0    $DB99   DRW      VB, V9, #9      ; Draw 9-byte sprite at VB, V9
$7E2    $55F2   UNKNOWN  $55F2           ; Unknown 5xxx instruction
$7E4    $B248   JP       V0, $248        ; Jump to V0 + 248
$7E6    $DADE   DRW      VA, VD, #E      ; Draw 14-byte sprite at VA, VD
$7E8    $521B   UNKNOWN  $521B           ; Unknown 5xxx instruction
$7EA    $3330   SE       V3, #30         ; Skip if V3 == 48
$7EC    $074C   SYS      $74C            ; System call to 74C
$7EE    $0349   SYS      $349            ; System call to 349
$7F0    $0B2E   SYS      $B2E            ; System call to B2E
$7F2    $997A   UNKNOWN  $997A           ; Unknown 9xxx instruction
$7F4    $8498   UNKNOWN  8498            ; Unknown 8xxx instruction
$7F6    $5567   UNKNOWN  $5567           ; Unknown 5xxx instruction
$7F8    $71C1   ADD      V1, #C1         ; Add 193 to V1
$7FA    $D3CB   DRW      V3, VC, #B      ; Draw 11-byte sprite at V3, VC
$7FC    $D7F6   DRW      V7, VF, #6      ; Draw 6-byte sprite at V7, VF
$7FE    $48B5   SNE      V8, #B5         ; Skip if V8 != 181
$800    $404E   SNE      V0, #4E         ; Skip if V0 != 78
$802    $66AC   LD       V6, #AC         ; Load 172 into V6
$804    $D452   DRW      V4, V5, #2      ; Draw 2-byte sprite at V4, V5
$806    $21B6   CALL     $1B6            ; Call subroutine at 1B6
$808    $7BA6   ADD      VB, #A6         ; Add 166 to VB
$80A    $281E   CALL     $81E            ; Call subroutine at 81E
$80C    $DF7D   DRW      VF, V7, #D      ; Draw 13-byte sprite at VF, V7
$80E    $8257   SUBN     V2, V5          ; V2 = V5 - V2, VF = !borrow
$810    $78F2   ADD      V8, #F2         ; Add 242 to V8
$812    $642A   LD       V4, #2A         ; Load 42 into V4
$814    $D2A3   DRW      V2, VA, #3      ; Draw 3-byte sprite at V2, VA
$816    $9A74   UNKNOWN  $9A74           ; Unknown 9xxx instruction
$818    $5BC5   UNKNOWN  $5BC5           ; Unknown 5xxx instruction
$81A    $4414   SNE      V4, #14         ; Skip if V4 != 20
$81C    $6801   LD       V8, #01         ; Load 1 into V8
$81E    $1EF7   JP       $EF7            ; Jump to EF7
$820    $AF2C   LD       I, $F2C         ; Load F2C into I
$822    $0C4A   SYS      $C4A            ; System call to C4A
$824    $B980   JP       V0, $980        ; Jump to V0 + 980
$826    $C004   RND      V0, #04         ; V0 = random & 04
$828    $F455   LD       [I], V4         ; Store V0-V4 at I
$82A    $C6D3   RND      V6, #D3         ; V6 = random & D3
$82C    $FD1D   UNKNOWN  FD1D            ; Unknown Fxxx instruction
$82E    $C129   RND      V1, #29         ; V1 = random & 29
$830    $1ACB   JP       $ACB            ; Jump to ACB
$832    $9C59   UNKNOWN  $9C59           ; Unknown 9xxx instruction
$834    $4DE5   SNE      VD, #E5         ; Skip if VD != 229
$836    $CDBA   RND      VD, #BA         ; VD = random & BA
$838    $39EC   SE       V9, #EC         ; Skip if V9 == 236
$83A    $F49B   UNKNOWN  F49B            ; Unknown Fxxx instruction
$83C    $73B0   ADD      V3, #B0         ; Add 176 to V3
$83E    $7A29   ADD      VA, #29         ; Add 41 to VA
$840    $004B   SYS      $04B            ; System call to 04B
$842    $36C1   SE       V6, #C1         ; Skip if V6 == 193
$844    $8BA4   ADD      VB, VA          ; VB += VA, VF = carry
$846    $C975   RND      V9, #75         ; V9 = random & 75
$848    $1BC4   JP       $BC4            ; Jump to BC4
$84A    $C815   RND      V8, #15         ; V8 = random & 15
$84C    $4F40   SNE      VF, #40         ; Skip if VF != 64
$84E    $F483   UNKNOWN  F483            ; Unknown Fxxx instruction
$850    $4BB6   SNE      VB, #B6         ; Skip if VB != 182
$852    $E11A   UNKNOWN  $E11A           ; Unknown Exxx instruction
$854    $233A   CALL     $33A            ; Call subroutine at 33A
$856    $C5FA   RND      V5, #FA         ; V5 = random & FA
$858    $D99B   DRW      V9, V9, #B      ; Draw 11-byte sprite at V9, V9
$85A    $CFAF   RND      VF, #AF         ; VF = random & AF
$85C    $AFF4   LD       I, $FF4         ; Load FF4 into I
$85E    $9BA0   SNE      VB, VA          ; Skip if VB != VA
$860    $BC11   JP       V0, $C11        ; Jump to V0 + C11
$862    $0A34   SYS      $A34            ; System call to A34
$864    $3C69   SE       VC, #69         ; Skip if VC == 105
$866    $FCD9   UNKNOWN  FCD9            ; Unknown Fxxx instruction
$868    $294E   CALL     $94E            ; Call subroutine at 94E
$86A    $4144   SNE      V1, #44         ; Skip if V1 != 68
$86C    $6A9D   LD       VA, #9D         ; Load 157 into VA
$86E    $3BA4   SE       VB, #A4         ; Skip if VB == 164
$870    $01C6   SYS      $1C6            ; System call to 1C6
$872    $DC53   DRW      VC, V5, #3      ; Draw 3-byte sprite at VC, V5
$874    $97C1   UNKNOWN  $97C1           ; Unknown 9xxx instruction
$876    $4E17   SNE      VE, #17         ; Skip if VE != 23
$878    $E27F   UNKNOWN  $E27F           ; Unknown Exxx instruction
$87A    $341B   SE       V4, #1B         ; Skip if V4 == 27
$87C    $8ECF   UNKNOWN  8ECF            ; Unknown 8xxx instruction
$87E    $97DD   UNKNOWN  $97DD           ; Unknown 9xxx instruction
$880    $8F8F   UNKNOWN  8F8F            ; Unknown 8xxx instruction
$882    $33DA   SE       V3, #DA         ; Skip if V3 == 218
$884    $99DB   UNKNOWN  $99DB           ; Unknown 9xxx instruction
$886    $481A   SNE      V8, #1A         ; Skip if V8 != 26
$888    $4CDD   SNE      VC, #DD         ; Skip if VC != 221
$88A    $F7BE   UNKNOWN  F7BE            ; Unknown Fxxx instruction
$88C    $5A64   UNKNOWN  $5A64           ; Unknown 5xxx instruction
$88E    $0CF5   SYS      $CF5            ; System call to CF5
$890    $C187   RND      V1, #87         ; V1 = random & 87
$892    $4637   SNE      V6, #37         ; Skip if V6 != 55
$894    $9AE6   UNKNOWN  $9AE6           ; Unknown 9xxx instruction
$896    $D9A3   DRW      V9, VA, #3      ; Draw 3-byte sprite at V9, VA
$898    $6DBB   LD       VD, #BB         ; Load 187 into VD
$89A    $2154   CALL     $154            ; Call subroutine at 154
$89C    $0EF0   SYS      $EF0            ; System call to EF0
$89E    $BD87   JP       V0, $D87        ; Jump to V0 + D87
$8A0    $61E4   LD       V1, #E4         ; Load 228 into V1
$8A2    $3CAF   SE       VC, #AF         ; Skip if VC == 175
$8A4    $9AC7   UNKNOWN  $9AC7           ; Unknown 9xxx instruction
$8A6    $918E   UNKNOWN  $918E           ; Unknown 9xxx instruction
$8A8    $44A1   SNE      V4, #A1         ; Skip if V4 != 161
$8AA    $45BC   SNE      V5, #BC         ; Skip if V5 != 188
$8AC    $36FC   SE       V6, #FC         ; Skip if V6 == 252
$8AE    $CE02   RND      VE, #02         ; VE = random & 02
$8B0    $2B03   CALL     $B03            ; Call subroutine at B03
$8B2    $4062   SNE      V0, #62         ; Skip if V0 != 98
$8B4    $69D3   LD       V9, #D3         ; Load 211 into V9
$8B6    $069E   SYS      $69E            ; System call to 69E
$8B8    $3BAD   SE       VB, #AD         ; Skip if VB == 173
$8BA    $0ACC   SYS      $ACC            ; System call to ACC
$8BC    $2E97   CALL     $E97            ; Call subroutine at E97
$8BE    $854E   SHL      V5              ; V5 <<= 1, VF = MSB
$8C0    $A557   LD       I, $557         ; Load 557 into I
$8C2    $C9F5   RND      V9, #F5         ; V9 = random & F5
$8C4    $6F10   LD       VF, #10         ; Load 16 into VF
$8C6    $A48B   LD       I, $48B         ; Load 48B into I
$8C8    $C58B   RND      V5, #8B         ; V5 = random & 8B
$8CA    $9976   UNKNOWN  $9976           ; Unknown 9xxx instruction
$8CC    $0160   SYS      $160            ; System call to 160
$8CE    $D806   DRW      V8, V0, #6      ; Draw 6-byte sprite at V8, V0
$8D0    $0F5D   SYS      $F5D            ; System call to F5D
$8D2    $9224   UNKNOWN  $9224           ; Unknown 9xxx instruction
$8D4    $0AAA   SYS      $AAA            ; System call to AAA
$8D6    $A041   LD       I, $041         ; Load 041 into I
$8D8    $CA29   RND      VA, #29         ; VA = random & 29
$8DA    $00E5   SYS      $0E5            ; System call to 0E5
$8DC    $A529   LD       I, $529         ; Load 529 into I
$8DE    $C026   RND      V0, #26         ; V0 = random & 26
$8E0    $31C2   SE       V1, #C2         ; Skip if V1 == 194
$8E2    $9763   UNKNOWN  $9763           ; Unknown 9xxx instruction
$8E4    $63B1   LD       V3, #B1         ; Load 177 into V3
$8E6    $DD3C   DRW      VD, V3, #C      ; Draw 12-byte sprite at VD, V3
$8E8    $BA69   JP       V0, $A69        ; Jump to V0 + A69
$8EA    $E91D   UNKNOWN  $E91D           ; Unknown Exxx instruction
$8EC    $49CF   SNE      V9, #CF         ; Skip if V9 != 207
$8EE    $01E8   SYS      $1E8            ; System call to 1E8
$8F0    $3D14   SE       VD, #14         ; Skip if VD == 20
$8F2    $6C52   LD       VC, #52         ; Load 82 into VC
$8F4    $2F68   CALL     $F68            ; Call subroutine at F68
$8F6    $28E9   CALL     $8E9            ; Call subroutine at 8E9
$8F8    $43CB   SNE      V3, #CB         ; Skip if V3 != 203
$8FA    $2863   CALL     $863            ; Call subroutine at 863
$8FC    $8F05   SUB      VF, V0          ; VF -= V0, VF = !borrow
$8FE    $B37E   JP       V0, $37E        ; Jump to V0 + 37E
$900    $24DF   CALL     $4DF            ; Call subroutine at 4DF
$902    $45D9   SNE      V5, #D9         ; Skip if V5 != 217
$904    $AD8E   LD       I, $D8E         ; Load D8E into I
$906    $88AA   UNKNOWN  88AA            ; Unknown 8xxx instruction
$908    $30DE   SE       V0, #DE         ; Skip if V0 == 222
$90A    $B700   JP       V0, $700        ; Jump to V0 + 700
$90C    $D7CD   DRW      V7, VC, #D      ; Draw 13-byte sprite at V7, VC
$90E    $71F4   ADD      V1, #F4         ; Add 244 to V1
$910    $6424   LD       V4, #24         ; Load 36 into V4
$912    $3A45   SE       VA, #45         ; Skip if VA == 69
$914    $849C   UNKNOWN  849C            ; Unknown 8xxx instruction
$916    $1FA7   JP       $FA7            ; Jump to FA7
$918    $B81E   JP       V0, $81E        ; Jump to V0 + 81E
$91A    $2ABA   CALL     $ABA            ; Call subroutine at ABA
$91C    $09E3   SYS      $9E3            ; System call to 9E3
$91E    $6C19   LD       VC, #19         ; Load 25 into VC
$920    $175A   JP       $75A            ; Jump to 75A
$922    $08BD   SYS      $8BD            ; System call to 8BD
$924    $D414   DRW      V4, V1, #4      ; Draw 4-byte sprite at V4, V1
$926    $7339   ADD      V3, #39         ; Add 57 to V3
$928    $D578   DRW      V5, V7, #8      ; Draw 8-byte sprite at V5, V7
$92A    $B5A9   JP       V0, $5A9        ; Jump to V0 + 5A9
$92C    $E93A   UNKNOWN  $E93A           ; Unknown Exxx instruction
$92E    $9C3C   UNKNOWN  $9C3C           ; Unknown 9xxx instruction
$930    $2FC3   CALL     $FC3            ; Call subroutine at FC3
$932    $D519   DRW      V5, V1, #9      ; Draw 9-byte sprite at V5, V1
$934    $5B5A   UNKNOWN  $5B5A           ; Unknown 5xxx instruction
$936    $8F89   UNKNOWN  8F89            ; Unknown 8xxx instruction
$938    $CA6C   RND      VA, #6C         ; VA = random & 6C
$93A    $8121   OR       V1, V2          ; V1 |= V2
$93C    $6142   LD       V1, #42         ; Load 66 into V1
$93E    $5942   UNKNOWN  $5942           ; Unknown 5xxx instruction
$940    $2856   CALL     $856            ; Call subroutine at 856
$942    $18B7   JP       $8B7            ; Jump to 8B7
$944    $4DE5   SNE      VD, #E5         ; Skip if VD != 229
$946    $0467   SYS      $467            ; System call to 467
$948    $4FF9   SNE      VF, #F9         ; Skip if VF != 249
$94A    $7263   ADD      V2, #63         ; Add 99 to V2
$94C    $557D   UNKNOWN  $557D           ; Unknown 5xxx instruction
$94E    $F854   UNKNOWN  F854            ; Unknown Fxxx instruction
$950    $66A9   LD       V6, #A9         ; Load 169 into V6
$952    $3F21   SE       VF, #21         ; Skip if VF == 33
$954    $7BD8   ADD      VB, #D8         ; Add 216 to VB
$956    $2651   CALL     $651            ; Call subroutine at 651
$958    $9D61   UNKNOWN  $9D61           ; Unknown 9xxx instruction
$95A    $D547   DRW      V5, V4, #7      ; Draw 7-byte sprite at V5, V4
$95C    $BE82   JP       V0, $E82        ; Jump to V0 + E82
$95E    $73C1   ADD      V3, #C1         ; Add 193 to V3
$960    $F4E8   UNKNOWN  F4E8            ; Unknown Fxxx instruction
$962    $4D39   SNE      VD, #39         ; Skip if VD != 57
$964    $9A71   UNKNOWN  $9A71           ; Unknown 9xxx instruction
$966    $0128   SYS      $128            ; System call to 128
$968    $E27E   UNKNOWN  $E27E           ; Unknown Exxx instruction
$96A    $E963   UNKNOWN  $E963           ; Unknown Exxx instruction
$96C    $3353   SE       V3, #53         ; Skip if V3 == 83
$96E    $2D76   CALL     $D76            ; Call subroutine at D76
$970    $05C7   SYS      $5C7            ; System call to 5C7
$972    $31D4   SE       V1, #D4         ; Skip if V1 == 212
$974    $CF1B   RND      VF, #1B         ; VF = random & 1B
$976    $D562   DRW      V5, V6, #2      ; Draw 2-byte sprite at V5, V6
$978    $1A1D   JP       $A1D            ; Jump to A1D
$97A    $6BDB   LD       VB, #DB         ; Load 219 into VB
$97C    $81F7   SUBN     V1, VF          ; V1 = VF - V1, VF = !borrow
$97E    $3ED7   SE       VE, #D7         ; Skip if VE == 215
$980    $850F   UNKNOWN  850F            ; Unknown 8xxx instruction
$982    $F153   UNKNOWN  F153            ; Unknown Fxxx instruction
$984    $EB34   UNKNOWN  $EB34           ; Unknown Exxx instruction
$986    $5C23   UNKNOWN  $5C23           ; Unknown 5xxx instruction
$988    $AFD1   LD       I, $FD1         ; Load FD1 into I
$98A    $EC8F   UNKNOWN  $EC8F           ; Unknown Exxx instruction
$98C    $B3DC   JP       V0, $3DC        ; Jump to V0 + 3DC
$98E    $78A3   ADD      V8, #A3         ; Add 163 to V8
$990    $BEAD   JP       V0, $EAD        ; Jump to V0 + EAD
$992    $9B86   UNKNOWN  $9B86           ; Unknown 9xxx instruction
$994    $CA51   RND      VA, #51         ; VA = random & 51
$996    $9704   UNKNOWN  $9704           ; Unknown 9xxx instruction
$998    $097C   SYS      $97C            ; System call to 97C
$99A    $8E55   SUB      VE, V5          ; VE -= V5, VF = !borrow
$99C    $729F   ADD      V2, #9F         ; Add 159 to V2
$99E    $F20B   UNKNOWN  F20B            ; Unknown Fxxx instruction
$9A0    $9953   UNKNOWN  $9953           ; Unknown 9xxx instruction
$9A2    $DB5C   DRW      VB, V5, #C      ; Draw 12-byte sprite at VB, V5
$9A4    $93C8   UNKNOWN  $93C8           ; Unknown 9xxx instruction
$9A6    $4181   SNE      V1, #81         ; Skip if V1 != 129
$9A8    $0977   SYS      $977            ; System call to 977
$9AA    $6B97   LD       VB, #97         ; Load 151 into VB
$9AC    $9235   UNKNOWN  $9235           ; Unknown 9xxx instruction
$9AE    $B394   JP       V0, $394        ; Jump to V0 + 394
$9B0    $2EB6   CALL     $EB6            ; Call subroutine at EB6
$9B2    $DA3F   DRW      VA, V3, #F      ; Draw 15-byte sprite at VA, V3
$9B4    $F055   LD       [I], V0         ; Store V0-V0 at I
$9B6    $909D   UNKNOWN  $909D           ; Unknown 9xxx instruction
$9B8    $1A24   JP       $A24            ; Jump to A24
$9BA    $C8D4   RND      V8, #D4         ; V8 = random & D4
$9BC    $5A69   UNKNOWN  $5A69           ; Unknown 5xxx instruction
$9BE    $CBD6   RND      VB, #D6         ; VB = random & D6
$9C0    $64AF   LD       V4, #AF         ; Load 175 into V4
$9C2    $DBC1   DRW      VB, VC, #1      ; Draw 1-byte sprite at VB, VC
$9C4    $0194   SYS      $194            ; System call to 194
$9C6    $CDBB   RND      VD, #BB         ; VD = random & BB
$9C8    $9492   UNKNOWN  $9492           ; Unknown 9xxx instruction
$9CA    $1FF0   JP       $FF0            ; Jump to FF0
$9CC    $4260   SNE      V2, #60         ; Skip if V2 != 96
$9CE    $318A   SE       V1, #8A         ; Skip if V1 == 138
$9D0    $B813   JP       V0, $813        ; Jump to V0 + 813
$9D2    $113A   JP       $13A            ; Jump to 13A
$9D4    $A043   LD       I, $043         ; Load 043 into I
$9D6    $0CC7   SYS      $CC7            ; System call to CC7
$9D8    $C40A   RND      V4, #0A         ; V4 = random & 0A
$9DA    $FE27   UNKNOWN  FE27            ; Unknown Fxxx instruction
$9DC    $587C   UNKNOWN  $587C           ; Unknown 5xxx instruction
$9DE    $2DAC   CALL     $DAC            ; Call subroutine at DAC
$9E0    $B3C9   JP       V0, $3C9        ; Jump to V0 + 3C9
$9E2    $97B1   UNKNOWN  $97B1           ; Unknown 9xxx instruction
$9E4    $9C51   UNKNOWN  $9C51           ; Unknown 9xxx instruction
$9E6    $2AC5   CALL     $AC5            ; Call subroutine at AC5
$9E8    $82F0   LD       V2, VF          ; V2 = VF
$9EA    $2A10   CALL     $A10            ; Call subroutine at A10
$9EC    $9D65   UNKNOWN  $9D65           ; Unknown 9xxx instruction
$9EE    $2D61   CALL     $D61            ; Call subroutine at D61
$9F0    $19B8   JP       $9B8            ; Jump to 9B8
$9F2    $EB1B   UNKNOWN  $EB1B           ; Unknown Exxx instruction
$9F4    $CCF4   RND      VC, #F4         ; VC = random & F4
$9F6    $C998   RND      V9, #98         ; V9 = random & 98
$9F8    $24DC   CALL     $4DC            ; Call subroutine at 4DC
$9FA    $39CB   SE       V9, #CB         ; Skip if V9 == 203
$9FC    $5C9F   UNKNOWN  $5C9F           ; Unknown 5xxx instruction
$9FE    $4651   SNE      V6, #51         ; Skip if V6 != 81
$A00    $2A3B   CALL     $A3B            ; Call subroutine at A3B
$A02    $1832   JP       $832            ; Jump to 832
$A04    $5106   UNKNOWN  $5106           ; Unknown 5xxx instruction
$A06    $A5A7   LD       I, $5A7         ; Load 5A7 into I
$A08    $2212   CALL     $212            ; Call subroutine at 212
$A0A    $3BD9   SE       VB, #D9         ; Skip if VB == 217
$A0C    $98F2   UNKNOWN  $98F2           ; Unknown 9xxx instruction
$A0E    $2D28   CALL     $D28            ; Call subroutine at D28
$A10    $2969   CALL     $969            ; Call subroutine at 969
$A12    $50BE   UNKNOWN  $50BE           ; Unknown 5xxx instruction
$A14    $8616   SHR      V6              ; V6 >>= 1, VF = LSB
$A16    $2293   CALL     $293            ; Call subroutine at 293
$A18    $5113   UNKNOWN  $5113           ; Unknown 5xxx instruction
$A1A    $3190   SE       V1, #90         ; Skip if V1 == 144
$A1C    $FC96   UNKNOWN  FC96            ; Unknown Fxxx instruction
$A1E    $BA1E   JP       V0, $A1E        ; Jump to V0 + A1E
$A20    $3435   SE       V4, #35         ; Skip if V4 == 53
$A22    $4625   SNE      V6, #25         ; Skip if V6 != 37
$A24    $EBED   UNKNOWN  $EBED           ; Unknown Exxx instruction
$A26    $7C97   ADD      VC, #97         ; Add 151 to VC
$A28    $F5B9   UNKNOWN  F5B9            ; Unknown Fxxx instruction
$A2A    $F8D9   UNKNOWN  F8D9            ; Unknown Fxxx instruction
$A2C    $FCE9   UNKNOWN  FCE9            ; Unknown Fxxx instruction
$A2E    $8E6A   UNKNOWN  8E6A            ; Unknown 8xxx instruction
$A30    $4F0B   SNE      VF, #0B         ; Skip if VF != 11
$A32    $9B2F   UNKNOWN  $9B2F           ; Unknown 9xxx instruction
$A34    $E7FB   UNKNOWN  $E7FB           ; Unknown Exxx instruction
$A36    $422D   SNE      V2, #2D         ; Skip if V2 != 45
$A38    $34A1   SE       V4, #A1         ; Skip if V4 == 161
$A3A    $144B   JP       $44B            ; Jump to 44B
$A3C    $80F6   SHR      V0              ; V0 >>= 1, VF = LSB
$A3E    $C72C   RND      V7, #2C         ; V7 = random & 2C
$A40    $5CAC   UNKNOWN  $5CAC           ; Unknown 5xxx instruction
$A42    $FD23   UNKNOWN  FD23            ; Unknown Fxxx instruction
$A44    $2B36   CALL     $B36            ; Call subroutine at B36
$A46    $4E83   SNE      VE, #83         ; Skip if VE != 131
$A48    $AB16   LD       I, $B16         ; Load B16 into I
$A4A    $ED9C   UNKNOWN  $ED9C           ; Unknown Exxx instruction
$A4C    $4ACD   SNE      VA, #CD         ; Skip if VA != 205
$A4E    $07FF   SYS      $7FF            ; System call to 7FF
$A50    $B125   JP       V0, $125        ; Jump to V0 + 125
$A52    $B5AC   JP       V0, $5AC        ; Jump to V0 + 5AC
$A54    $3CF4   SE       VC, #F4         ; Skip if VC == 244
$A56    $E3B2   UNKNOWN  $E3B2           ; Unknown Exxx instruction
$A58    $2BF6   CALL     $BF6            ; Call subroutine at BF6
$A5A    $D8DD   DRW      V8, VD, #D      ; Draw 13-byte sprite at V8, VD
$A5C    $A886   LD       I, $886         ; Load 886 into I
$A5E    $A259   LD       I, $259         ; Load 259 into I
$A60    $CCBE   RND      VC, #BE         ; VC = random & BE
$A62    $7702   ADD      V7, #02         ; Add 2 to V7
$A64    $1B46   JP       $B46            ; Jump to B46
$A66    $1AAB   JP       $AAB            ; Jump to AAB
$A68    $72DA   ADD      V2, #DA         ; Add 218 to V2
$A6A    $79E0   ADD      V9, #E0         ; Add 224 to V9
$A6C    $92AC   UNKNOWN  $92AC           ; Unknown 9xxx instruction
$A6E    $6F92   LD       VF, #92         ; Load 146 into VF
$A70    $EBB7   UNKNOWN  $EBB7           ; Unknown Exxx instruction
$A72    $4F97   SNE      VF, #97         ; Skip if VF != 151
$A74    $148A   JP       $48A            ; Jump to 48A
$A76    $7D35   ADD      VD, #35         ; Add 53 to VD
$A78    $1572   JP       $572            ; Jump to 572
$A7A    $B8A4   JP       V0, $8A4        ; Jump to V0 + 8A4
$A7C    $E573   UNKNOWN  $E573           ; Unknown Exxx instruction
$A7E    $F12C   UNKNOWN  F12C            ; Unknown Fxxx instruction
$A80    $89C1   OR       V9, VC          ; V9 |= VC
$A82    $4D49   SNE      VD, #49         ; Skip if VD != 73
$A84    $B39A   JP       V0, $39A        ; Jump to V0 + 39A
$A86    $38F1   SE       V8, #F1         ; Skip if V8 == 241
$A88    $2B68   CALL     $B68            ; Call subroutine at B68
$A8A    $4A37   SNE      VA, #37         ; Skip if VA != 55
$A8C    $2EF2   CALL     $EF2            ; Call subroutine at EF2
$A8E    $10B4   JP       $0B4            ; Jump to 0B4
$A90    $D5D5   DRW      V5, VD, #5      ; Draw 5-byte sprite at V5, VD
$A92    $6F4C   LD       VF, #4C         ; Load 76 into VF
$A94    $57A5   UNKNOWN  $57A5           ; Unknown 5xxx instruction
$A96    $C574   RND      V5, #74         ; V5 = random & 74
$A98    $4C2A   SNE      VC, #2A         ; Skip if VC != 42
$A9A    $B69A   JP       V0, $69A        ; Jump to V0 + 69A
$A9C    $D079   DRW      V0, V7, #9      ; Draw 9-byte sprite at V0, V7
$A9E    $E400   UNKNOWN  $E400           ; Unknown Exxx instruction
$AA0    $0534   SYS      $534            ; System call to 534
$AA2    $8E4A   UNKNOWN  8E4A            ; Unknown 8xxx instruction
$AA4    $0D13   SYS      $D13            ; System call to D13
$AA6    $97DB   UNKNOWN  $97DB           ; Unknown 9xxx instruction
$AA8    $EAFC   UNKNOWN  $EAFC           ; Unknown Exxx instruction
$AAA    $0607   SYS      $607            ; System call to 607
$AAC    $1B85   JP       $B85            ; Jump to B85
$AAE    $7EF4   ADD      VE, #F4         ; Add 244 to VE
$AB0    $3B8C   SE       VB, #8C         ; Skip if VB == 140
$AB2    $12F0   JP       $2F0            ; Jump to 2F0
$AB4    $E1AC   UNKNOWN  $E1AC           ; Unknown Exxx instruction
$AB6    $11D1   JP       $1D1            ; Jump to 1D1
$AB8    $683A   LD       V8, #3A         ; Load 58 into V8
$ABA    $A664   LD       I, $664         ; Load 664 into I
$ABC    $06FE   SYS      $6FE            ; System call to 6FE
$ABE    $091D   SYS      $91D            ; System call to 91D
$AC0    $C235   RND      V2, #35         ; V2 = random & 35
$AC2    $6A26   LD       VA, #26         ; Load 38 into VA
$AC4    $AB02   LD       I, $B02         ; Load B02 into I
$AC6    $B646   JP       V0, $646        ; Jump to V0 + 646
$AC8    $BF9E   JP       V0, $F9E        ; Jump to V0 + F9E
$ACA    $88A5   SUB      V8, VA          ; V8 -= VA, VF = !borrow
$ACC    $ECB9   UNKNOWN  $ECB9           ; Unknown Exxx instruction
$ACE    $67A8   LD       V7, #A8         ; Load 168 into V7
$AD0    $B342   JP       V0, $342        ; Jump to V0 + 342
$AD2    $EE9F   UNKNOWN  $EE9F           ; Unknown Exxx instruction
$AD4    $97DE   UNKNOWN  $97DE           ; Unknown 9xxx instruction
$AD6    $E1E9   UNKNOWN  $E1E9           ; Unknown Exxx instruction
$AD8    $436A   SNE      V3, #6A         ; Skip if V3 != 106
$ADA    $CB40   RND      VB, #40         ; VB = random & 40
$ADC    $3134   SE       V1, #34         ; Skip if V1 == 52
$ADE    $E0BB   UNKNOWN  $E0BB           ; Unknown Exxx instruction
$AE0    $2798   CALL     $798            ; Call subroutine at 798
$AE2    $13C5   JP       $3C5            ; Jump to 3C5
$AE4    $7537   ADD      V5, #37         ; Add 55 to V5
$AE6    $1BA2   JP       $BA2            ; Jump to BA2
$AE8    $6DA3   LD       VD, #A3         ; Load 163 into VD
$AEA    $0EC0   SYS      $EC0            ; System call to EC0
$AEC    $0F4A   SYS      $F4A            ; System call to F4A
$AEE    $3BA6   SE       VB, #A6         ; Skip if VB == 166
$AF0    $1CE7   JP       $CE7            ; Jump to CE7
$AF2    $C825   RND      V8, #25         ; V8 = random & 25
$AF4    $2B88   CALL     $B88            ; Call subroutine at B88
$AF6    $EA07   UNKNOWN  $EA07           ; Unknown Exxx instruction
$AF8    $D5D8   DRW      V5, VD, #8      ; Draw 8-byte sprite at V5, VD
$AFA    $F426   UNKNOWN  F426            ; Unknown Fxxx instruction
$AFC    $F70A   LD       V7, K           ; Wait for key press, store in V7
$AFE    $73B0   ADD      V3, #B0         ; Add 176 to V3
$B00    $01A7   SYS      $1A7            ; System call to 1A7
$B02    $5E02   UNKNOWN  $5E02           ; Unknown 5xxx instruction
$B04    $1B2D   JP       $B2D            ; Jump to B2D
$B06    $A233   LD       I, $233         ; Load 233 into I
$B08    $1C70   JP       $C70            ; Jump to C70
$B0A    $DC4F   DRW      VC, V4, #F      ; Draw 15-byte sprite at VC, V4
$B0C    $FF50   UNKNOWN  FF50            ; Unknown Fxxx instruction
$B0E    $75BB   ADD      V5, #BB         ; Add 187 to V5
$B10    $D564   DRW      V5, V6, #4      ; Draw 4-byte sprite at V5, V6
$B12    $3E99   SE       VE, #99         ; Skip if VE == 153
$B14    $359A   SE       V5, #9A         ; Skip if V5 == 154
$B16    $86CE   SHL      V6              ; V6 <<= 1, VF = MSB
$B18    $D6E9   DRW      V6, VE, #9      ; Draw 9-byte sprite at V6, VE
$B1A    $6994   LD       V9, #94         ; Load 148 into V9
$B1C    $B705   JP       V0, $705        ; Jump to V0 + 705
$B1E    $BFB7   JP       V0, $FB7        ; Jump to V0 + FB7
$B20    $FF41   UNKNOWN  FF41            ; Unknown Fxxx instruction
$B22    $DC5E   DRW      VC, V5, #E      ; Draw 14-byte sprite at VC, V5
$B24    $635D   LD       V3, #5D         ; Load 93 into V3
$B26    $152A   JP       $52A            ; Jump to 52A
$B28    $A57A   LD       I, $57A         ; Load 57A into I
$B2A    $DE62   DRW      VE, V6, #2      ; Draw 2-byte sprite at VE, V6
$B2C    $DD31   DRW      VD, V3, #1      ; Draw 1-byte sprite at VD, V3
$B2E    $B19E   JP       V0, $19E        ; Jump to V0 + 19E
$B30    $DEF4   DRW      VE, VF, #4      ; Draw 4-byte sprite at VE, VF
$B32    $7861   ADD      V8, #61         ; Add 97 to V8
$B34    $71C8   ADD      V1, #C8         ; Add 200 to V1
$B36    $7BE9   ADD      VB, #E9         ; Add 233 to VB
$B38    $55AA   UNKNOWN  $55AA           ; Unknown 5xxx instruction
$B3A    $5BBB   UNKNOWN  $5BBB           ; Unknown 5xxx instruction
$B3C    $74C2   ADD      V4, #C2         ; Add 194 to V4
$B3E    $0D24   SYS      $D24            ; System call to D24
$B40    $9009   UNKNOWN  $9009           ; Unknown 9xxx instruction
$B42    $75D7   ADD      V5, #D7         ; Add 215 to V5
$B44    $E8FA   UNKNOWN  $E8FA           ; Unknown Exxx instruction
$B46    $2863   CALL     $863            ; Call subroutine at 863
$B48    $2264   CALL     $264            ; Call subroutine at 264
$B4A    $1184   JP       $184            ; Jump to 184
$B4C    $4B53   SNE      VB, #53         ; Skip if VB != 83
$B4E    $0FD1   SYS      $FD1            ; System call to FD1
$B50    $7CE7   ADD      VC, #E7         ; Add 231 to VC
$B52    $3E0A   SE       VE, #0A         ; Skip if VE == 10
$B54    $5933   UNKNOWN  $5933           ; Unknown 5xxx instruction
$B56    $DE6B   DRW      VE, V6, #B      ; Draw 11-byte sprite at VE, V6
$B58    $07FD   SYS      $7FD            ; System call to 7FD
$B5A    $A817   LD       I, $817         ; Load 817 into I
$B5C    $F5A8   UNKNOWN  F5A8            ; Unknown Fxxx instruction
$B5E    $6648   LD       V6, #48         ; Load 72 into V6
$B60    $294D   CALL     $94D            ; Call subroutine at 94D
$B62    $D9C3   DRW      V9, VC, #3      ; Draw 3-byte sprite at V9, VC
$B64    $F43B   UNKNOWN  F43B            ; Unknown Fxxx instruction
$B66    $ADCE   LD       I, $DCE         ; Load DCE into I
$B68    $CBA4   RND      VB, #A4         ; VB = random & A4
$B6A    $5856   UNKNOWN  $5856           ; Unknown 5xxx instruction
$B6C    $7368   ADD      V3, #68         ; Add 104 to V3
$B6E    $FADA   UNKNOWN  FADA            ; Unknown Fxxx instruction
$B70    $0C97   SYS      $C97            ; System call to C97
$B72    $315A   SE       V1, #5A         ; Skip if V1 == 90
$B74    $0228   SYS      $228            ; System call to 228
$B76    $38D2   SE       V8, #D2         ; Skip if V8 == 210
$B78    $ADF7   LD       I, $DF7         ; Load DF7 into I
$B7A    $2061   CALL     $061            ; Call subroutine at 061
$B7C    $13C2   JP       $3C2            ; Jump to 3C2
$B7E    $DA49   DRW      VA, V4, #9      ; Draw 9-byte sprite at VA, V4
$B80    $4A10   SNE      VA, #10         ; Skip if VA != 16
$B82    $A6E7   LD       I, $6E7         ; Load 6E7 into I
$B84    $DA1D   DRW      VA, V1, #D      ; Draw 13-byte sprite at VA, V1
$B86    $CA80   RND      VA, #80         ; VA = random & 80
$B88    $CBB7   RND      VB, #B7         ; VB = random & B7
$B8A    $9056   UNKNOWN  $9056           ; Unknown 9xxx instruction
$B8C    $7251   ADD      V2, #51         ; Add 81 to V2
$B8E    $E800   UNKNOWN  $E800           ; Unknown Exxx instruction
$B90    $BC03   JP       V0, $C03        ; Jump to V0 + C03
$B92    $F8FE   UNKNOWN  F8FE            ; Unknown Fxxx instruction
$B94    $A1E8   LD       I, $1E8         ; Load 1E8 into I
$B96    $C52A   RND      V5, #2A         ; V5 = random & 2A
$B98    $B8BF   JP       V0, $8BF        ; Jump to V0 + 8BF
$B9A    $1606   JP       $606            ; Jump to 606
$B9C    $D8A5   DRW      V8, VA, #5      ; Draw 5-byte sprite at V8, VA
$B9E    $42C6   SNE      V2, #C6         ; Skip if V2 != 198
$BA0    $E260   UNKNOWN  $E260           ; Unknown Exxx instruction
$BA2    $948F   UNKNOWN  $948F           ; Unknown 9xxx instruction
$BA4    $EC05   UNKNOWN  $EC05           ; Unknown Exxx instruction
$BA6    $5AE2   UNKNOWN  $5AE2           ; Unknown 5xxx instruction
$BA8    $BCDB   JP       V0, $CDB        ; Jump to V0 + CDB
$BAA    $BE66   JP       V0, $E66        ; Jump to V0 + E66
$BAC    $F2A9   UNKNOWN  F2A9            ; Unknown Fxxx instruction
$BAE    $7D53   ADD      VD, #53         ; Add 83 to VD
$BB0    $D741   DRW      V7, V4, #1      ; Draw 1-byte sprite at V7, V4
$BB2    $EAC1   UNKNOWN  $EAC1           ; Unknown Exxx instruction
$BB4    $F21B   UNKNOWN  F21B            ; Unknown Fxxx instruction
$BB6    $CF0D   RND      VF, #0D         ; VF = random & 0D
$BB8    $6AC1   LD       VA, #C1         ; Load 193 into VA
$BBA    $D219   DRW      V2, V1, #9      ; Draw 9-byte sprite at V2, V1
$BBC    $52E7   UNKNOWN  $52E7           ; Unknown 5xxx instruction
$BBE    $6A2C   LD       VA, #2C         ; Load 44 into VA
$BC0    $562E   UNKNOWN  $562E           ; Unknown 5xxx instruction
$BC2    $A581   LD       I, $581         ; Load 581 into I
$BC4    $B65C   JP       V0, $65C        ; Jump to V0 + 65C
$BC6    $2381   CALL     $381            ; Call subroutine at 381
$BC8    $459C   SNE      V5, #9C         ; Skip if V5 != 156
$BCA    $E5BB   UNKNOWN  $E5BB           ; Unknown Exxx instruction
$BCC    $2CCE   CALL     $CCE            ; Call subroutine at CCE
$BCE    $177D   JP       $77D            ; Jump to 77D
$BD0    $BF08   JP       V0, $F08        ; Jump to V0 + F08
$BD2    $9646   UNKNOWN  $9646           ; Unknown 9xxx instruction
$BD4    $088F   SYS      $88F            ; System call to 88F
$BD6    $DA97   DRW      VA, V9, #7      ; Draw 7-byte sprite at VA, V9
$BD8    $8F78   UNKNOWN  8F78            ; Unknown 8xxx instruction
$BDA    $1159   JP       $159            ; Jump to 159
$BDC    $07A2   SYS      $7A2            ; System call to 7A2
$BDE    $A7D2   LD       I, $7D2         ; Load 7D2 into I
$BE0    $28A8   CALL     $8A8            ; Call subroutine at 8A8
$BE2    $93CA   UNKNOWN  $93CA           ; Unknown 9xxx instruction
$BE4    $2B57   CALL     $B57            ; Call subroutine at B57
$BE6    $FC38   UNKNOWN  FC38            ; Unknown Fxxx instruction
$BE8    $FE1E   ADD      I, VE           ; I += VE
$BEA    $99C8   UNKNOWN  $99C8           ; Unknown 9xxx instruction
$BEC    $DB52   DRW      VB, V5, #2      ; Draw 2-byte sprite at VB, V5
$BEE    $EB0B   UNKNOWN  $EB0B           ; Unknown Exxx instruction
$BF0    $7785   ADD      V7, #85         ; Add 133 to V7
$BF2    $512D   UNKNOWN  $512D           ; Unknown 5xxx instruction
$BF4    $7BA4   ADD      VB, #A4         ; Add 164 to VB
$BF6    $3705   SE       V7, #05         ; Skip if V7 == 5
$BF8    $E7B1   UNKNOWN  $E7B1           ; Unknown Exxx instruction
$BFA    $D9EE   DRW      V9, VE, #E      ; Draw 14-byte sprite at V9, VE
$BFC    $8401   OR       V4, V0          ; V4 |= V0
$BFE    $020E   SYS      $20E            ; System call to 20E
$C00    $C27D   RND      V2, #7D         ; V2 = random & 7D
$C02    $31BE   SE       V1, #BE         ; Skip if V1 == 190
$C04    $A79A   LD       I, $79A         ; Load 79A into I
$C06    $01FD   SYS      $1FD            ; System call to 1FD
$C08    $B386   JP       V0, $386        ; Jump to V0 + 386
$C0A    $7D6A   ADD      VD, #6A         ; Add 106 to VD
$C0C    $F4A4   UNKNOWN  F4A4            ; Unknown Fxxx instruction
$C0E    $B8F8   JP       V0, $8F8        ; Jump to V0 + 8F8
$C10    $F91D   UNKNOWN  F91D            ; Unknown Fxxx instruction
$C12    $4036   SNE      V0, #36         ; Skip if V0 != 54
$C14    $A6CA   LD       I, $6CA         ; Load 6CA into I
$C16    $6A70   LD       VA, #70         ; Load 112 into VA
$C18    $FEA6   UNKNOWN  FEA6            ; Unknown Fxxx instruction
$C1A    $8D51   OR       VD, V5          ; VD |= V5
$C1C    $0D37   SYS      $D37            ; System call to D37
$C1E    $6A5C   LD       VA, #5C         ; Load 92 into VA
$C20    $EDEC   UNKNOWN  $EDEC           ; Unknown Exxx instruction
$C22    $B7C3   JP       V0, $7C3        ; Jump to V0 + 7C3
$C24    $97C3   UNKNOWN  $97C3           ; Unknown 9xxx instruction
$C26    $AFFF   LD       I, $FFF         ; Load FFF into I
$C28    $4BAF   SNE      VB, #AF         ; Skip if VB != 175
$C2A    $7FE7   ADD      VF, #E7         ; Add 231 to VF
$C2C    $25E5   CALL     $5E5            ; Call subroutine at 5E5
$C2E    $E46F   UNKNOWN  $E46F           ; Unknown Exxx instruction
$C30    $B2C2   JP       V0, $2C2        ; Jump to V0 + 2C2
$C32    $F2C9   UNKNOWN  F2C9            ; Unknown Fxxx instruction
$C34    $9579   UNKNOWN  $9579           ; Unknown 9xxx instruction
$C36    $7B4F   ADD      VB, #4F         ; Add 79 to VB
$C38    $87DA   UNKNOWN  87DA            ; Unknown 8xxx instruction
$C3A    $96D6   UNKNOWN  $96D6           ; Unknown 9xxx instruction
$C3C    $6589   LD       V5, #89         ; Load 137 into V5
$C3E    $C50D   RND      V5, #0D         ; V5 = random & 0D
$C40    $2E08   CALL     $E08            ; Call subroutine at E08
$C42    $7A10   ADD      VA, #10         ; Add 16 to VA
$C44    $9AA5   UNKNOWN  $9AA5           ; Unknown 9xxx instruction
$C46    $58A5   UNKNOWN  $58A5           ; Unknown 5xxx instruction
$C48    $965D   UNKNOWN  $965D           ; Unknown 9xxx instruction
$C4A    $DF30   DRW      VF, V3, #0      ; Draw 0-byte sprite at VF, V3
$C4C    $CBE7   RND      VB, #E7         ; VB = random & E7
$C4E    $E1D9   UNKNOWN  $E1D9           ; Unknown Exxx instruction
$C50    $9954   UNKNOWN  $9954           ; Unknown 9xxx instruction
$C52    $A5E9   LD       I, $5E9         ; Load 5E9 into I
$C54    $B218   JP       V0, $218        ; Jump to V0 + 218
$C56    $B079   JP       V0, $079        ; Jump to V0 + 079
$C58    $1026   JP       $026            ; Jump to 026
$C5A    $48FF   SNE      V8, #FF         ; Skip if V8 != 255
$C5C    $EECA   UNKNOWN  $EECA           ; Unknown Exxx instruction
$C5E    $367B   SE       V6, #7B         ; Skip if V6 == 123
$C60    $0FC4   SYS      $FC4            ; System call to FC4
$C62    $692D   LD       V9, #2D         ; Load 45 into V9
$C64    $4E21   SNE      VE, #21         ; Skip if VE != 33
$C66    $ECBB   UNKNOWN  $ECBB           ; Unknown Exxx instruction
$C68    $5A3B   UNKNOWN  $5A3B           ; Unknown 5xxx instruction
$C6A    $5EB7   UNKNOWN  $5EB7           ; Unknown 5xxx instruction
$C6C    $46DF   SNE      V6, #DF         ; Skip if V6 != 223
$C6E    $A1FD   LD       I, $1FD         ; Load 1FD into I
$C70    $FC1F   UNKNOWN  FC1F            ; Unknown Fxxx instruction
$C72    $8816   SHR      V8              ; V8 >>= 1, VF = LSB
$C74    $2809   CALL     $809            ; Call subroutine at 809
$C76    $0ECA   SYS      $ECA            ; System call to ECA
$C78    $63D8   LD       V3, #D8         ; Load 216 into V3
$C7A    $1F54   JP       $F54            ; Jump to F54
$C7C    $6A90   LD       VA, #90         ; Load 144 into VA
$C7E    $E6E4   UNKNOWN  $E6E4           ; Unknown Exxx instruction
$C80    $A860   LD       I, $860         ; Load 860 into I
$C82    $F605   UNKNOWN  F605            ; Unknown Fxxx instruction
$C84    $4C4C   SNE      VC, #4C         ; Skip if VC != 76
$C86    $C8B9   RND      V8, #B9         ; V8 = random & B9
$C88    $8823   XOR      V8, V2          ; V8 ^= V2
$C8A    $54BD   UNKNOWN  $54BD           ; Unknown 5xxx instruction
$C8C    $3FBE   SE       VF, #BE         ; Skip if VF == 190
$C8E    $520D   UNKNOWN  $520D           ; Unknown 5xxx instruction
$C90    $0B02   SYS      $B02            ; System call to B02
$C92    $A93D   LD       I, $93D         ; Load 93D into I
$C94    $60E7   LD       V0, #E7         ; Load 231 into V0
$C96    $2B1C   CALL     $B1C            ; Call subroutine at B1C
$C98    $920E   UNKNOWN  $920E           ; Unknown 9xxx instruction
$C9A    $F04A   UNKNOWN  F04A            ; Unknown Fxxx instruction
$C9C    $2824   CALL     $824            ; Call subroutine at 824
$C9E    $4CD5   SNE      VC, #D5         ; Skip if VC != 213
$CA0    $5CFF   UNKNOWN  $5CFF           ; Unknown 5xxx instruction
$CA2    $04EA   SYS      $4EA            ; System call to 4EA
$CA4    $41AB   SNE      V1, #AB         ; Skip if V1 != 171
$CA6    $EABC   UNKNOWN  $EABC           ; Unknown Exxx instruction
$CA8    $74F0   ADD      V4, #F0         ; Add 240 to V4
$CAA    $F034   UNKNOWN  F034            ; Unknown Fxxx instruction
$CAC    $279D   CALL     $79D            ; Call subroutine at 79D
$CAE    $57FF   UNKNOWN  $57FF           ; Unknown 5xxx instruction
$CB0    $02DA   SYS      $2DA            ; System call to 2DA
$CB2    $6E98   LD       VE, #98         ; Load 152 into VE
$CB4    $F0C0   UNKNOWN  F0C0            ; Unknown Fxxx instruction
$CB6    $E943   UNKNOWN  $E943           ; Unknown Exxx instruction
$CB8    $45D5   SNE      V5, #D5         ; Skip if V5 != 213
$CBA    $8161   OR       V1, V6          ; V1 |= V6
$CBC    $C26D   RND      V2, #6D         ; V2 = random & 6D
$CBE    $3E2B   SE       VE, #2B         ; Skip if VE == 43
$CC0    $4350   SNE      V3, #50         ; Skip if V3 != 80
$CC2    $1120   JP       $120            ; Jump to 120
$CC4    $F502   UNKNOWN  F502            ; Unknown Fxxx instruction
$CC6    $E024   UNKNOWN  $E024           ; Unknown Exxx instruction
$CC8    $10E2   JP       $0E2            ; Jump to 0E2
$CCA    $B63C   JP       V0, $63C        ; Jump to V0 + 63C
$CCC    $AB44   LD       I, $B44         ; Load B44 into I
$CCE    $628E   LD       V2, #8E         ; Load 142 into V2
$CD0    $BBBB   JP       V0, $BBB        ; Jump to V0 + BBB
$CD2    $E8DF   UNKNOWN  $E8DF           ; Unknown Exxx instruction
$CD4    $5844   UNKNOWN  $5844           ; Unknown 5xxx instruction
$CD6    $BE83   JP       V0, $E83        ; Jump to V0 + E83
$CD8    $57E7   UNKNOWN  $57E7           ; Unknown 5xxx instruction
$CDA    $EC82   UNKNOWN  $EC82           ; Unknown Exxx instruction
$CDC    $65B2   LD       V5, #B2         ; Load 178 into V5
$CDE    $936B   UNKNOWN  $936B           ; Unknown 9xxx instruction
$CE0    $0231   SYS      $231            ; System call to 231
$CE2    $853D   UNKNOWN  853D            ; Unknown 8xxx instruction
$CE4    $956B   UNKNOWN  $956B           ; Unknown 9xxx instruction
$CE6    $3F11   SE       VF, #11         ; Skip if VF == 17
$CE8    $18E2   JP       $8E2            ; Jump to 8E2
$CEA    $51F1   UNKNOWN  $51F1           ; Unknown 5xxx instruction
$CEC    $EFEA   UNKNOWN  $EFEA           ; Unknown Exxx instruction
$CEE    $9DDD   UNKNOWN  $9DDD           ; Unknown 9xxx instruction
$CF0    $3CF9   SE       VC, #F9         ; Skip if VC == 249
$CF2    $19C8   JP       $9C8            ; Jump to 9C8
$CF4    $6DE4   LD       VD, #E4         ; Load 228 into VD
$CF6    $5C97   UNKNOWN  $5C97           ; Unknown 5xxx instruction
$CF8    $C546   RND      V5, #46         ; V5 = random & 46
$CFA    $D8F0   DRW      V8, VF, #0      ; Draw 0-byte sprite at V8, VF
$CFC    $3986   SE       V9, #86         ; Skip if V9 == 134
$CFE    $13C8   JP       $3C8            ; Jump to 3C8
$D00    $71C1   ADD      V1, #C1         ; Add 193 to V1
$D02    $C147   RND      V1, #47         ; V1 = random & 47
$D04    $8C91   OR       VC, V9          ; VC |= V9
$D06    $7D95   ADD      VD, #95         ; Add 149 to VD
$D08    $233B   CALL     $33B            ; Call subroutine at 33B
$D0A    $EDA1   SKNP     VD              ; Skip if key VD not pressed
$D0C    $16E1   JP       $6E1            ; Jump to 6E1
$D0E    $D11B   DRW      V1, V1, #B      ; Draw 11-byte sprite at V1, V1
$D10    $D28E   DRW      V2, V8, #E      ; Draw 14-byte sprite at V2, V8
$D12    $FA22   UNKNOWN  FA22            ; Unknown Fxxx instruction
$D14    $9ED1   UNKNOWN  $9ED1           ; Unknown 9xxx instruction
$D16    $2E0A   CALL     $E0A            ; Call subroutine at E0A
$D18    $B35B   JP       V0, $35B        ; Jump to V0 + 35B
$D1A    $B810   JP       V0, $810        ; Jump to V0 + 810
$D1C    $8149   UNKNOWN  8149            ; Unknown 8xxx instruction
$D1E    $13AE   JP       $3AE            ; Jump to 3AE
$D20    $6D30   LD       VD, #30         ; Load 48 into VD
$D22    $5120   SE       V1, V2          ; Skip if V1 == V2
$D24    $B39F   JP       V0, $39F        ; Jump to V0 + 39F
$D26    $2C68   CALL     $C68            ; Call subroutine at C68
$D28    $11D1   JP       $1D1            ; Jump to 1D1
$D2A    $C4BF   RND      V4, #BF         ; V4 = random & BF
$D2C    $4AE8   SNE      VA, #E8         ; Skip if VA != 232
$D2E    $14AC   JP       $4AC            ; Jump to 4AC
$D30    $6711   LD       V7, #11         ; Load 17 into V7
$D32    $CC07   RND      VC, #07         ; VC = random & 07
$D34    $576C   UNKNOWN  $576C           ; Unknown 5xxx instruction
$D36    $28C1   CALL     $8C1            ; Call subroutine at 8C1
$D38    $9497   UNKNOWN  $9497           ; Unknown 9xxx instruction
$D3A    $5009   UNKNOWN  $5009           ; Unknown 5xxx instruction
$D3C    $30F2   SE       V0, #F2         ; Skip if V0 == 242
$D3E    $216A   CALL     $16A            ; Call subroutine at 16A
$D40    $06AC   SYS      $6AC            ; System call to 6AC
$D42    $518E   UNKNOWN  $518E           ; Unknown 5xxx instruction
$D44    $2F0D   CALL     $F0D            ; Call subroutine at F0D
$D46    $C649   RND      V6, #49         ; V6 = random & 49
$D48    $4F20   SNE      VF, #20         ; Skip if VF != 32
$D4A    $0788   SYS      $788            ; System call to 788
$D4C    $C4E8   RND      V4, #E8         ; V4 = random & E8
$D4E    $AF57   LD       I, $F57         ; Load F57 into I
$D50    $5F2F   UNKNOWN  $5F2F           ; Unknown 5xxx instruction
$D52    $DEFD   DRW      VE, VF, #D      ; Draw 13-byte sprite at VE, VF
$D54    $513B   UNKNOWN  $513B           ; Unknown 5xxx instruction
$D56    $4B34   SNE      VB, #34         ; Skip if VB != 52
$D58    $3D39   SE       VD, #39         ; Skip if VD == 57
$D5A    $28B0   CALL     $8B0            ; Call subroutine at 8B0
$D5C    $EE3A   UNKNOWN  $EE3A           ; Unknown Exxx instruction
$D5E    $2D15   CALL     $D15            ; Call subroutine at D15
$D60    $D4E5   DRW      V4, VE, #5      ; Draw 5-byte sprite at V4, VE
$D62    $EEFA   UNKNOWN  $EEFA           ; Unknown Exxx instruction
$D64    $0D47   SYS      $D47            ; System call to D47
$D66    $A062   LD       I, $062         ; Load 062 into I
$D68    $ABA3   LD       I, $BA3         ; Load BA3 into I
$D6A    $184A   JP       $84A            ; Jump to 84A
$D6C    $B8E2   JP       V0, $8E2        ; Jump to V0 + 8E2
$D6E    $0318   SYS      $318            ; System call to 318
$D70    $7A2E   ADD      VA, #2E         ; Add 46 to VA
$D72    $46A8   SNE      V6, #A8         ; Skip if V6 != 168
$D74    $8067   SUBN     V0, V6          ; V0 = V6 - V0, VF = !borrow
$D76    $D20C   DRW      V2, V0, #C      ; Draw 12-byte sprite at V2, V0
$D78    $DC96   DRW      VC, V9, #6      ; Draw 6-byte sprite at VC, V9
$D7A    $2B23   CALL     $B23            ; Call subroutine at B23
$D7C    $54E5   UNKNOWN  $54E5           ; Unknown 5xxx instruction
$D7E    $5ED6   UNKNOWN  $5ED6           ; Unknown 5xxx instruction
$D80    $7E02   ADD      VE, #02         ; Add 2 to VE
$D82    $2A20   CALL     $A20            ; Call subroutine at A20
$D84    $13FA   JP       $3FA            ; Jump to 3FA
$D86    $A4C7   LD       I, $4C7         ; Load 4C7 into I
$D88    $C2E3   RND      V2, #E3         ; V2 = random & E3
$D8A    $5754   UNKNOWN  $5754           ; Unknown 5xxx instruction
$D8C    $89B8   UNKNOWN  89B8            ; Unknown 8xxx instruction
$D8E    $C6CB   RND      V6, #CB         ; V6 = random & CB
$D90    $9240   SNE      V2, V4          ; Skip if V2 != V4
$D92    $1B9C   JP       $B9C            ; Jump to B9C
$D94    $5CF3   UNKNOWN  $5CF3           ; Unknown 5xxx instruction
$D96    $9AC7   UNKNOWN  $9AC7           ; Unknown 9xxx instruction
$D98    $61AA   LD       V1, #AA         ; Load 170 into V1
$D9A    $FD4D   UNKNOWN  FD4D            ; Unknown Fxxx instruction
$D9C    $80EC   UNKNOWN  80EC            ; Unknown 8xxx instruction
$D9E    $6F64   LD       VF, #64         ; Load 100 into VF
$DA0    $3E9A   SE       VE, #9A         ; Skip if VE == 154
$DA2    $1D2A   JP       $D2A            ; Jump to D2A
$DA4    $3D4B   SE       VD, #4B         ; Skip if VD == 75
$DA6    $10A9   JP       $0A9            ; Jump to 0A9
$DA8    $270C   CALL     $70C            ; Call subroutine at 70C
$DAA    $2887   CALL     $887            ; Call subroutine at 887
$DAC    $1D36   JP       $D36            ; Jump to D36
$DAE    $2CD5   CALL     $CD5            ; Call subroutine at CD5
$DB0    $A6BB   LD       I, $6BB         ; Load 6BB into I
$DB2    $85D6   SHR      V5              ; V5 >>= 1, VF = LSB
$DB4    $4B72   SNE      VB, #72         ; Skip if VB != 114
$DB6    $675E   LD       V7, #5E         ; Load 94 into V7
$DB8    $3702   SE       V7, #02         ; Skip if V7 == 2
$DBA    $C314   RND      V3, #14         ; V3 = random & 14
$DBC    $648D   LD       V4, #8D         ; Load 141 into V4
$DBE    $8CC1   OR       VC, VC          ; VC |= VC
$DC0    $61F3   LD       V1, #F3         ; Load 243 into V1
$DC2    $9632   UNKNOWN  $9632           ; Unknown 9xxx instruction
$DC4    $2EF0   CALL     $EF0            ; Call subroutine at EF0
$DC6    $D978   DRW      V9, V7, #8      ; Draw 8-byte sprite at V9, V7
$DC8    $04E4   SYS      $4E4            ; System call to 4E4
$DCA    $D867   DRW      V8, V6, #7      ; Draw 7-byte sprite at V8, V6
$DCC    $4AC9   SNE      VA, #C9         ; Skip if VA != 201
$DCE    $7F75   ADD      VF, #75         ; Add 117 to VF
$DD0    $2180   CALL     $180            ; Call subroutine at 180
$DD2    $9207   UNKNOWN  $9207           ; Unknown 9xxx instruction
$DD4    $E3A7   UNKNOWN  $E3A7           ; Unknown Exxx instruction
$DD6    $3A77   SE       VA, #77         ; Skip if VA == 119
$DD8    $7CD6   ADD      VC, #D6         ; Add 214 to VC
$DDA    $7465   ADD      V4, #65         ; Add 101 to V4
$DDC    $07F0   SYS      $7F0            ; System call to 7F0
$DDE    $10B3   JP       $0B3            ; Jump to 0B3
$DE0    $D844   DRW      V8, V4, #4      ; Draw 4-byte sprite at V8, V4
$DE2    $0785   SYS      $785            ; System call to 785
$DE4    $1F2E   JP       $F2E            ; Jump to F2E
$DE6    $253E   CALL     $53E            ; Call subroutine at 53E
$DE8    $AD5C   LD       I, $D5C         ; Load D5C into I
$DEA    $585C   UNKNOWN  $585C           ; Unknown 5xxx instruction
$DEC    $07D6   SYS      $7D6            ; System call to 7D6
$DEE    $FD5F   UNKNOWN  FD5F            ; Unknown Fxxx instruction
$DF0    $C891   RND      V8, #91         ; V8 = random & 91
$DF2    $A696   LD       I, $696         ; Load 696 into I
$DF4    $B599   JP       V0, $599        ; Jump to V0 + 599
$DF6    $CB4F   RND      VB, #4F         ; VB = random & 4F
$DF8    $0EBE   SYS      $EBE            ; System call to EBE
$DFA    $8EAE   SHL      VE              ; VE <<= 1, VF = MSB
$DFC    $C77B   RND      V7, #7B         ; V7 = random & 7B
$DFE    $76BB   ADD      V6, #BB         ; Add 187 to V6
$E00    $B88F   JP       V0, $88F        ; Jump to V0 + 88F
$E02    $AA3A   LD       I, $A3A         ; Load A3A into I
$E04    $8B2C   UNKNOWN  8B2C            ; Unknown 8xxx instruction
$E06    $DD29   DRW      VD, V2, #9      ; Draw 9-byte sprite at VD, V2
$E08    $64B2   LD       V4, #B2         ; Load 178 into V4
$E0A    $5362   UNKNOWN  $5362           ; Unknown 5xxx instruction
$E0C    $9150   SNE      V1, V5          ; Skip if V1 != V5
$E0E    $31FC   SE       V1, #FC         ; Skip if V1 == 252
$E10    $9DF8   UNKNOWN  $9DF8           ; Unknown 9xxx instruction
$E12    $E8C9   UNKNOWN  $E8C9           ; Unknown Exxx instruction
$E14    $5D82   UNKNOWN  $5D82           ; Unknown 5xxx instruction
$E16    $CEAB   RND      VE, #AB         ; VE = random & AB
$E18    $F706   UNKNOWN  F706            ; Unknown Fxxx instruction
$E1A    $3E41   SE       VE, #41         ; Skip if VE == 65
$E1C    $50AB   UNKNOWN  $50AB           ; Unknown 5xxx instruction
$E1E    $3758   SE       V7, #58         ; Skip if V7 == 88
$E20    $F956   UNKNOWN  F956            ; Unknown Fxxx instruction
$E22    $B6A4   JP       V0, $6A4        ; Jump to V0 + 6A4
$E24    $A88B   LD       I, $88B         ; Load 88B into I
$E26    $9036   UNKNOWN  $9036           ; Unknown 9xxx instruction
$E28    $6226   LD       V2, #26         ; Load 38 into V2
$E2A    $D188   DRW      V1, V8, #8      ; Draw 8-byte sprite at V1, V8
$E2C    $ADCE   LD       I, $DCE         ; Load DCE into I
$E2E    $1372   JP       $372            ; Jump to 372
$E30    $BE8F   JP       V0, $E8F        ; Jump to V0 + E8F
$E32    $0DA8   SYS      $DA8            ; System call to DA8
$E34    $EE16   UNKNOWN  $EE16           ; Unknown Exxx instruction
$E36    $97B8   UNKNOWN  $97B8           ; Unknown 9xxx instruction
$E38    $9AAB   UNKNOWN  $9AAB           ; Unknown 9xxx instruction
$E3A    $C09A   RND      V0, #9A         ; V0 = random & 9A
$E3C    $1CC3   JP       $CC3            ; Jump to CC3
$E3E    $E432   UNKNOWN  $E432           ; Unknown Exxx instruction
$E40    $0496   SYS      $496            ; System call to 496
$E42    $0ECA   SYS      $ECA            ; System call to ECA
$E44    $77DF   ADD      V7, #DF         ; Add 223 to V7
$E46    $8C9F   UNKNOWN  8C9F            ; Unknown 8xxx instruction
$E48    $3701   SE       V7, #01         ; Skip if V7 == 1
$E4A    $21AD   CALL     $1AD            ; Call subroutine at 1AD
$E4C    $B29F   JP       V0, $29F        ; Jump to V0 + 29F
$E4E    $CCDB   RND      VC, #DB         ; VC = random & DB
$E50    $CFBF   RND      VF, #BF         ; VF = random & BF
$E52    $0C28   SYS      $C28            ; System call to C28
$E54    $F58B   UNKNOWN  F58B            ; Unknown Fxxx instruction
$E56    $56A5   UNKNOWN  $56A5           ; Unknown 5xxx instruction
$E58    $32A8   SE       V2, #A8         ; Skip if V2 == 168
$E5A    $549E   UNKNOWN  $549E           ; Unknown 5xxx instruction
$E5C    $3D15   SE       VD, #15         ; Skip if VD == 21
$E5E    $B264   JP       V0, $264        ; Jump to V0 + 264
$E60    $452D   SNE      V5, #2D         ; Skip if V5 != 45
$E62    $29CB   CALL     $9CB            ; Call subroutine at 9CB
$E64    $B86A   JP       V0, $86A        ; Jump to V0 + 86A
$E66    $C3AF   RND      V3, #AF         ; V3 = random & AF
$E68    $B6BE   JP       V0, $6BE        ; Jump to V0 + 6BE
$E6A    $23B4   CALL     $3B4            ; Call subroutine at 3B4
$E6C    $7E1D   ADD      VE, #1D         ; Add 29 to VE
$E6E    $F30C   UNKNOWN  F30C            ; Unknown Fxxx instruction
$E70    $9117   UNKNOWN  $9117           ; Unknown 9xxx instruction
$E72    $3D3D   SE       VD, #3D         ; Skip if VD == 61
$E74    $7803   ADD      V8, #03         ; Add 3 to V8
$E76    $3923   SE       V9, #23         ; Skip if V9 == 35
$E78    $2CD6   CALL     $CD6            ; Call subroutine at CD6
$E7A    $5C72   UNKNOWN  $5C72           ; Unknown 5xxx instruction
$E7C    $14C1   JP       $4C1            ; Jump to 4C1
$E7E    $FBF4   UNKNOWN  FBF4            ; Unknown Fxxx instruction
$E80    $3986   SE       V9, #86         ; Skip if V9 == 134
$E82    $C7C0   RND      V7, #C0         ; V7 = random & C0
$E84    $9A88   UNKNOWN  $9A88           ; Unknown 9xxx instruction
$E86    $17A3   JP       $7A3            ; Jump to 7A3
$E88    $093C   SYS      $93C            ; System call to 93C
$E8A    $5B74   UNKNOWN  $5B74           ; Unknown 5xxx instruction
$E8C    $596B   UNKNOWN  $596B           ; Unknown 5xxx instruction
$E8E    $74F5   ADD      V4, #F5         ; Add 245 to V4
$E90    $BD1D   JP       V0, $D1D        ; Jump to V0 + D1D
$E92    $E8C1   UNKNOWN  $E8C1           ; Unknown Exxx instruction
$E94    $BB94   JP       V0, $B94        ; Jump to V0 + B94
$E96    $64D6   LD       V4, #D6         ; Load 214 into V4
$E98    $500D   UNKNOWN  $500D           ; Unknown 5xxx instruction
$E9A    $5ECE   UNKNOWN  $5ECE           ; Unknown 5xxx instruction
$E9C    $EB3A   UNKNOWN  $EB3A           ; Unknown Exxx instruction
$E9E    $7084   ADD      V0, #84         ; Add 132 to V0
$EA0    $6590   LD       V5, #90         ; Load 144 into V5
$EA2    $6FE2   LD       VF, #E2         ; Load 226 into VF
$EA4    $559D   UNKNOWN  $559D           ; Unknown 5xxx instruction
$EA6    $558C   UNKNOWN  $558C           ; Unknown 5xxx instruction
$EA8    $A2F3   LD       I, $2F3         ; Load 2F3 into I
$EAA    $5276   UNKNOWN  $5276           ; Unknown 5xxx instruction
$EAC    $73C2   ADD      V3, #C2         ; Add 194 to V3
$EAE    $F834   UNKNOWN  F834            ; Unknown Fxxx instruction
$EB0    $4C37   SNE      VC, #37         ; Skip if VC != 55
$EB2    $0EA8   SYS      $EA8            ; System call to EA8
$EB4    $CC7C   RND      VC, #7C         ; VC = random & 7C
$EB6    $C79B   RND      V7, #9B         ; V7 = random & 9B
$EB8    $F3F1   UNKNOWN  F3F1            ; Unknown Fxxx instruction
$EBA    $FEE2   UNKNOWN  FEE2            ; Unknown Fxxx instruction
$EBC    $41C4   SNE      V1, #C4         ; Skip if V1 != 196
$EBE    $7248   ADD      V2, #48         ; Add 72 to V2
$EC0    $C73E   RND      V7, #3E         ; V7 = random & 3E
$EC2    $5283   UNKNOWN  $5283           ; Unknown 5xxx instruction
$EC4    $C5A9   RND      V5, #A9         ; V5 = random & A9
$EC6    $BEC2   JP       V0, $EC2        ; Jump to V0 + EC2
$EC8    $BB87   JP       V0, $B87        ; Jump to V0 + B87
$ECA    $777F   ADD      V7, #7F         ; Add 127 to V7
$ECC    $675F   LD       V7, #5F         ; Load 95 into V7
$ECE    $4ECE   SNE      VE, #CE         ; Skip if VE != 206
$ED0    $2285   CALL     $285            ; Call subroutine at 285
$ED2    $E38A   UNKNOWN  $E38A           ; Unknown Exxx instruction
$ED4    $0827   SYS      $827            ; System call to 827
$ED6    $A8BD   LD       I, $8BD         ; Load 8BD into I
$ED8    $0B3F   SYS      $B3F            ; System call to B3F
$EDA    $9C52   UNKNOWN  $9C52           ; Unknown 9xxx instruction
$EDC    $6DA4   LD       VD, #A4         ; Load 164 into VD
$EDE    $8D20   LD       VD, V2          ; VD = V2
$EE0    $86FA   UNKNOWN  86FA            ; Unknown 8xxx instruction
$EE2    $E473   UNKNOWN  $E473           ; Unknown Exxx instruction
$EE4    $6652   LD       V6, #52         ; Load 82 into V6
$EE6    $5BA6   UNKNOWN  $5BA6           ; Unknown 5xxx instruction
$EE8    $3A51   SE       VA, #51         ; Skip if VA == 81
$EEA    $AACD   LD       I, $ACD         ; Load ACD into I
$EEC    $7AD9   ADD      VA, #D9         ; Add 217 to VA
$EEE    $A545   LD       I, $545         ; Load 545 into I
$EF0    $3E44   SE       VE, #44         ; Skip if VE == 68
$EF2    $A949   LD       I, $949         ; Load 949 into I
$EF4    $0DCD   SYS      $DCD            ; System call to DCD
$EF6    $0E59   SYS      $E59            ; System call to E59
$EF8    $F7A2   UNKNOWN  F7A2            ; Unknown Fxxx instruction
$EFA    $183E   JP       $83E            ; Jump to 83E
$EFC    $7F2B   ADD      VF, #2B         ; Add 43 to VF
$EFE    $AE12   LD       I, $E12         ; Load E12 into I
$F00    $2651   CALL     $651            ; Call subroutine at 651
$F02    $5199   UNKNOWN  $5199           ; Unknown 5xxx instruction
$F04    $2D89   CALL     $D89            ; Call subroutine at D89
$F06    $D1DA   DRW      V1, VD, #A      ; Draw 10-byte sprite at V1, VD
$F08    $A8C9   LD       I, $8C9         ; Load 8C9 into I
$F0A    $9ECC   UNKNOWN  $9ECC           ; Unknown 9xxx instruction
$F0C    $324A   SE       V2, #4A         ; Skip if V2 == 74
$F0E    $E943   UNKNOWN  $E943           ; Unknown Exxx instruction
$F10    $F837   UNKNOWN  F837            ; Unknown Fxxx instruction
$F12    $5A22   UNKNOWN  $5A22           ; Unknown 5xxx instruction
$F14    $8DD0   LD       VD, VD          ; VD = VD
$F16    $A800   LD       I, $800         ; Load 800 into I
$F18    $3985   SE       V9, #85         ; Skip if V9 == 133
$F1A    $411D   SNE      V1, #1D         ; Skip if V1 != 29
$F1C    $7F5C   ADD      VF, #5C         ; Add 92 to VF
$F1E    $01EE   SYS      $1EE            ; System call to 1EE
$F20    $2348   CALL     $348            ; Call subroutine at 348
$F22    $4D1A   SNE      VD, #1A         ; Skip if VD != 26
$F24    $7AFB   ADD      VA, #FB         ; Add 251 to VA
$F26    $D193   DRW      V1, V9, #3      ; Draw 3-byte sprite at V1, V9
$F28    $6805   LD       V8, #05         ; Load 5 into V8
$F2A    $E688   UNKNOWN  $E688           ; Unknown Exxx instruction
$F2C    $DADF   DRW      VA, VD, #F      ; Draw 15-byte sprite at VA, VD
$F2E    $4FA4   SNE      VF, #A4         ; Skip if VF != 164
$F30    $C75F   RND      V7, #5F         ; V7 = random & 5F
$F32    $4387   SNE      V3, #87         ; Skip if V3 != 135
$F34    $D0E8   DRW      V0, VE, #8      ; Draw 8-byte sprite at V0, VE
$F36    $75D5   ADD      V5, #D5         ; Add 213 to V5
$F38    $CEE9   RND      VE, #E9         ; VE = random & E9
$F3A    $493D   SNE      V9, #3D         ; Skip if V9 != 61
$F3C    $FB15   LD       DT, VB          ; Delay timer = VB
$F3E    $61A3   LD       V1, #A3         ; Load 163 into V1
$F40    $2AD9   CALL     $AD9            ; Call subroutine at AD9
$F42    $9309   UNKNOWN  $9309           ; Unknown 9xxx instruction
$F44    $281C   CALL     $81C            ; Call subroutine at 81C
$F46    $83C9   UNKNOWN  83C9            ; Unknown 8xxx instruction
$F48    $39A8   SE       V9, #A8         ; Skip if V9 == 168
$F4A    $57A1   UNKNOWN  $57A1           ; Unknown 5xxx instruction
$F4C    $7150   ADD      V1, #50         ; Add 80 to V1
$F4E    $BB97   JP       V0, $B97        ; Jump to V0 + B97
$F50    $D50B   DRW      V5, V0, #B      ; Draw 11-byte sprite at V5, V0
$F52    $65AB   LD       V5, #AB         ; Load 171 into V5
$F54    $0329   SYS      $329            ; System call to 329
$F56    $BACD   JP       V0, $ACD        ; Jump to V0 + ACD
$F58    $DC8F   DRW      VC, V8, #F      ; Draw 15-byte sprite at VC, V8
$F5A    $5321   UNKNOWN  $5321           ; Unknown 5xxx instruction
$F5C    $C583   RND      V5, #83         ; V5 = random & 83
$F5E    $D30B   DRW      V3, V0, #B      ; Draw 11-byte sprite at V3, V0
$F60    $5F46   UNKNOWN  $5F46           ; Unknown 5xxx instruction
$F62    $2415   CALL     $415            ; Call subroutine at 415
$F64    $3203   SE       V2, #03         ; Skip if V2 == 3
$F66    $6CF1   LD       VC, #F1         ; Load 241 into VC
$F68    $3D05   SE       VD, #05         ; Skip if VD == 5
$F6A    $28A6   CALL     $8A6            ; Call subroutine at 8A6
$F6C    $0FAB   SYS      $FAB            ; System call to FAB
$F6E    $CE4B   RND      VE, #4B         ; VE = random & 4B
$F70    $92E9   UNKNOWN  $92E9           ; Unknown 9xxx instruction
$F72    $7788   ADD      V7, #88         ; Add 136 to V7
$F74    $1D10   JP       $D10            ; Jump to D10
$F76    $4B67   SNE      VB, #67         ; Skip if VB != 103
$F78    $65FA   LD       V5, #FA         ; Load 250 into V5
$F7A    $82B8   UNKNOWN  82B8            ; Unknown 8xxx instruction
$F7C    $0987   SYS      $987            ; System call to 987
$F7E    $BB61   JP       V0, $B61        ; Jump to V0 + B61
$F80    $E593   UNKNOWN  $E593           ; Unknown Exxx instruction
$F82    $C400   RND      V4, #00         ; V4 = random & 00
$F84    $065A   SYS      $65A            ; System call to 65A
$F86    $8530   LD       V5, V3          ; V5 = V3
$F88    $DF50   DRW      VF, V5, #0      ; Draw 0-byte sprite at VF, V5
$F8A    $7DEF   ADD      VD, #EF         ; Add 239 to VD
$F8C    $AE7F   LD       I, $E7F         ; Load E7F into I
$F8E    $0726   SYS      $726            ; System call to 726
$F90    $CAD5   RND      VA, #D5         ; VA = random & D5
$F92    $1E88   JP       $E88            ; Jump to E88
$F94    $2BDC   CALL     $BDC            ; Call subroutine at BDC
$F96    $21F9   CALL     $1F9            ; Call subroutine at 1F9
$F98    $16E1   JP       $6E1            ; Jump to 6E1
$F9A    $0EB1   SYS      $EB1            ; System call to EB1
$F9C    $584A   UNKNOWN  $584A           ; Unknown 5xxx instruction
$F9E    $090F   SYS      $90F            ; System call to 90F
$FA0    $5EEC   UNKNOWN  $5EEC           ; Unknown 5xxx instruction
$FA2    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$FA4    $9937   UNKNOWN  $9937           ; Unknown 9xxx instruction
$FA6    $B584   JP       V0, $584        ; Jump to V0 + 584
$FA8    $EA4D   UNKNOWN  $EA4D           ; Unknown Exxx instruction
$FAA    $47D4   SNE      V7, #D4         ; Skip if V7 != 212
$FAC    $76E1   ADD      V6, #E1         ; Add 225 to V6
$FAE    $E35E   UNKNOWN  $E35E           ; Unknown Exxx instruction
$FB0    $AB22   LD       I, $B22         ; Load B22 into I
$FB2    $799D   ADD      V9, #9D         ; Add 157 to V9
$FB4    $52D1   UNKNOWN  $52D1           ; Unknown 5xxx instruction
$FB6    $9A1A   UNKNOWN  $9A1A           ; Unknown 9xxx instruction
$FB8    $FD94   UNKNOWN  FD94            ; Unknown Fxxx instruction
$FBA    $C581   RND      V5, #81         ; V5 = random & 81
$FBC    $D88F   DRW      V8, V8, #F      ; Draw 15-byte sprite at V8, V8
$FBE    $AF7D   LD       I, $F7D         ; Load F7D into I
$FC0    $ED94   UNKNOWN  $ED94           ; Unknown Exxx instruction
$FC2    $FD37   UNKNOWN  FD37            ; Unknown Fxxx instruction
$FC4    $26CB   CALL     $6CB            ; Call subroutine at 6CB
$FC6    $40EA   SNE      V0, #EA         ; Skip if V0 != 234
$FC8    $9A6C   UNKNOWN  $9A6C           ; Unknown 9xxx instruction
$FCA    $239C   CALL     $39C            ; Call subroutine at 39C
$FCC    $F487   UNKNOWN  F487            ; Unknown Fxxx instruction
$FCE    $5079   UNKNOWN  $5079           ; Unknown 5xxx instruction
$FD0    $81EE   SHL      V1              ; V1 <<= 1, VF = MSB
$FD2    $9D3F   UNKNOWN  $9D3F           ; Unknown 9xxx instruction
$FD4    $8AAC   UNKNOWN  8AAC            ; Unknown 8xxx instruction
$FD6    $2D43   CALL     $D43            ; Call subroutine at D43
$FD8    $8ED5   SUB      VE, VD          ; VE -= VD, VF = !borrow
$FDA    $EF87   UNKNOWN  $EF87           ; Unknown Exxx instruction
$FDC    $A06A   LD       I, $06A         ; Load 06A into I
$FDE    $2875   CALL     $875            ; Call subroutine at 875
$FE0    $734C   ADD      V3, #4C         ; Add 76 to V3
$FE2    $E482   UNKNOWN  $E482           ; Unknown Exxx instruction
$FE4    $BE92   JP       V0, $E92        ; Jump to V0 + E92
$FE6    $7687   ADD      V6, #87         ; Add 135 to V6
$FE8    $BC23   JP       V0, $C23        ; Jump to V0 + C23
$FEA    $D388   DRW      V3, V8, #8      ; Draw 8-byte sprite at V3, V8
$FEC    $25E4   CALL     $5E4            ; Call subroutine at 5E4
$FEE    $029D   SYS      $29D            ; System call to 29D
$FF0    $EFF8   UNKNOWN  $EFF8           ; Unknown Exxx instruction
$FF2    $B09B   JP       V0, $09B        ; Jump to V0 + 09B
$FF4    $DD43   DRW      VD, V4, #3      ; Draw 3-byte sprite at VD, V4
$FF6    $7ED7   ADD      VE, #D7         ; Add 215 to VE
$FF8    $A470   LD       I, $470         ; Load 470 into I
$FFA    $8EDB   UNKNOWN  8EDB            ; Unknown 8xxx instruction
$FFC    $9BAA   UNKNOWN  $9BAA           ; Unknown 9xxx instruction
$FFE    $2030   CALL     $030            ; Call subroutine at 030

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 464 (25.9%)
  JP      : 208 (11.6%)
  LD      : 203 (11.3%)
  CALL    : 194 (10.8%)
  SYS     : 130 ( 7.3%)
  SE      : 118 ( 6.6%)
  RND     : 117 ( 6.5%)
  ADD     : 107 ( 6.0%)
  DRW     : 106 ( 5.9%)
  SNE     : 105 ( 5.9%)
  SHL     :   8 ( 0.4%)
  OR      :   8 ( 0.4%)
  SUB     :   7 ( 0.4%)
  SHR     :   5 ( 0.3%)
  XOR     :   5 ( 0.3%)
  SUBN    :   4 ( 0.2%)
  AND     :   2 ( 0.1%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 310 (17.3%)
Arithmetic Operations: 133 (7.4%)
