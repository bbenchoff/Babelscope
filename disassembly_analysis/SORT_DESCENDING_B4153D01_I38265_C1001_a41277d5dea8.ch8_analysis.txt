
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B4153D01_I38265_C1001_a41277d5dea8.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 4153
Instance: 38265
Direction: descending
Final Array: [241, 164, 144, 123, 84, 74, 44, 16]
Operations: R:0 W:2 C:46 S:1

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 126
Sort Array References:
  $216: LD I, $D14 ; Load D14 into I
  $21A: LD I, $076 ; Load 076 into I
  $250: LD I, $5B0 ; Load 5B0 into I
  $270: LD I, $92F ; Load 92F into I
  $274: LD I, $3BE ; Load 3BE into I
  $28E: LD I, $462 ; Load 462 into I
  $2C2: LD I, $11D ; Load 11D into I
  $2C4: LD I, $7D6 ; Load 7D6 into I
  $2DA: LD I, $A53 ; Load A53 into I
  $2F4: LD I, $DF3 ; Load DF3 into I
  $2F6: LD I, $48E ; Load 48E into I
  $308: LD I, $42F ; Load 42F into I
  $316: LD I, $4DB ; Load 4DB into I
  $31A: LD I, $930 ; Load 930 into I
  $32E: LD I, $EDF ; Load EDF into I
  $36C: LD I, $64C ; Load 64C into I
  $3BE: LD I, $AD3 ; Load AD3 into I
  $3C8: LD I, $E70 ; Load E70 into I
  $3EA: LD I, $A98 ; Load A98 into I
  $414: LD I, $BD3 ; Load BD3 into I
  $456: LD I, $EA9 ; Load EA9 into I
  $458: LD I, $743 ; Load 743 into I
  $45A: LD I, $CE6 ; Load CE6 into I
  $4EE: LD I, $5A8 ; Load 5A8 into I
  $53E: LD I, $1DE ; Load 1DE into I
  $58E: LD I, $5F2 ; Load 5F2 into I
  $596: LD I, $079 ; Load 079 into I
  $5B0: LD I, $014 ; Load 014 into I
  $5BE: LD I, $B94 ; Load B94 into I
  $5CA: LD I, $E9D ; Load E9D into I
  $5E8: LD I, $503 ; Load 503 into I
  $620: LD I, $11A ; Load 11A into I
  $626: LD I, $004 ; Load 004 into I
  $632: LD I, $740 ; Load 740 into I
  $67A: LD I, $F43 ; Load F43 into I
  $686: LD I, $B32 ; Load B32 into I
  $68A: LD I, $93E ; Load 93E into I
  $6A4: LD I, $CDD ; Load CDD into I
  $6A6: LD I, $00C ; Load 00C into I
  $6BA: LD I, $2D3 ; Load 2D3 into I
  $6D2: LD I, $FF2 ; Load FF2 into I
  $6D8: LD I, $AE3 ; Load AE3 into I
  $708: LD I, $8F8 ; Load 8F8 into I
  $714: LD I, $06E ; Load 06E into I
  $716: LD I, $B03 ; Load B03 into I
  $736: LD I, $AD1 ; Load AD1 into I
  $75C: LD I, $D2F ; Load D2F into I
  $79A: LD I, $C63 ; Load C63 into I
  $7A6: LD I, $A3A ; Load A3A into I
  $7BA: LD I, $037 ; Load 037 into I
  $7CC: LD I, $FB0 ; Load FB0 into I
  $7EC: LD I, $2A4 ; Load 2A4 into I
  $82C: LD I, $C87 ; Load C87 into I
  $84A: LD V0, [I] ; Load V0-V0 from I
  $852: LD I, $C49 ; Load C49 into I
  $854: LD I, $34C ; Load 34C into I
  $85C: LD I, $D59 ; Load D59 into I
  $87E: LD I, $8FB ; Load 8FB into I
  $8B0: LD I, $E4D ; Load E4D into I
  $8B6: LD I, $0EA ; Load 0EA into I
  $8DC: LD I, $04E ; Load 04E into I
  $8E6: LD I, $32B ; Load 32B into I
  $8EA: LD V8, [I] ; Load V0-V8 from I
  $8F0: LD I, $AFD ; Load AFD into I
  $8FE: LD I, $50D ; Load 50D into I
  $958: LD I, $307 ; Load 307 into I
  $964: LD [I], V5 ; Store V0-V5 at I
  $9B0: LD I, $BD4 ; Load BD4 into I
  $9BE: LD I, $B44 ; Load B44 into I
  $9CE: LD I, $5D5 ; Load 5D5 into I
  $9E2: LD I, $79F ; Load 79F into I
  $9EA: LD I, $202 ; Load 202 into I
  $A16: LD I, $8DD ; Load 8DD into I
  $A58: LD I, $64A ; Load 64A into I
  $AB4: LD I, $93D ; Load 93D into I
  $AB8: LD I, $0CA ; Load 0CA into I
  $AC6: LD I, $D26 ; Load D26 into I
  $AD8: LD I, $113 ; Load 113 into I
  $AF2: LD I, $611 ; Load 611 into I
  $AFE: LD I, $D24 ; Load D24 into I
  $B00: LD I, $66D ; Load 66D into I
  $B1E: LD I, $074 ; Load 074 into I
  $B2C: LD I, $F20 ; Load F20 into I
  $B48: LD I, $DF0 ; Load DF0 into I
  $B4E: LD I, $154 ; Load 154 into I
  $B54: LD I, $DAC ; Load DAC into I
  $B6C: LD I, $285 ; Load 285 into I
  $BCE: LD I, $E6C ; Load E6C into I
  $BD8: LD I, $660 ; Load 660 into I
  $C1C: LD I, $348 ; Load 348 into I
  $C4A: LD I, $74E ; Load 74E into I
  $C66: LD I, $D08 ; Load D08 into I
  $C78: LD I, $986 ; Load 986 into I
  $C7E: LD I, $6EF ; Load 6EF into I
  $C8E: LD I, $69A ; Load 69A into I
  $CA2: LD I, $A64 ; Load A64 into I
  $CBA: LD I, $091 ; Load 091 into I
  $CE4: LD I, $BB3 ; Load BB3 into I
  $CFA: LD I, $4DD ; Load 4DD into I
  $CFE: LD I, $E2F ; Load E2F into I
  $D20: LD I, $338 ; Load 338 into I
  $D46: LD I, $457 ; Load 457 into I
  $D50: LD I, $5F4 ; Load 5F4 into I
  $D54: LD I, $CC4 ; Load CC4 into I
  $D78: LD I, $91E ; Load 91E into I
  $D88: LD I, $098 ; Load 098 into I
  $D8A: LD I, $3E8 ; Load 3E8 into I
  $DA6: LD I, $B4A ; Load B4A into I
  $DAC: LD I, $633 ; Load 633 into I
  $DBC: LD I, $D81 ; Load D81 into I
  $DDE: LD I, $F54 ; Load F54 into I
  $E3A: LD I, $BB1 ; Load BB1 into I
  $E6A: LD I, $3D9 ; Load 3D9 into I
  $E70: LD I, $A56 ; Load A56 into I
  $ED2: LD I, $4A0 ; Load 4A0 into I
  $EDE: LD I, $18F ; Load 18F into I
  $F04: LD I, $0F2 ; Load 0F2 into I
  $F08: LD I, $136 ; Load 136 into I
  $F0C: LD I, $53D ; Load 53D into I
  $F1A: LD I, $EC2 ; Load EC2 into I
  $F3A: LD I, $D1C ; Load D1C into I
  $F50: LD I, $936 ; Load 936 into I
  $F6A: LD I, $BDE ; Load BDE into I
  $F7E: LD VC, [I] ; Load V0-VC from I
  $FC6: LD I, $728 ; Load 728 into I
  $FFE: LD I, $023 ; Load 023 into I

CONTROL FLOW ANALYSIS:
Jumps: 239
Calls: 110
Branches: 226
Loops: 120
Loop Structures:
  $202 -> $124 (backward jump)
  $208 -> $1F8 (backward jump)
  $314 -> $113 (backward jump)
  $350 -> $21F (backward jump)
  $38A -> $30D (backward jump)
  $3BA -> $374 (backward jump)
  $3CA -> $0AF (backward jump)
  $3E8 -> $2B3 (backward jump)
  $430 -> $04F (backward jump)
  $452 -> $3D3 (backward jump)
  $4B6 -> $40E (backward jump)
  $4CE -> $070 (backward jump)
  $4E2 -> $34B (backward jump)
  $518 -> $1BC (backward jump)
  $51E -> $009 (backward jump)
  $52C -> $49E (backward jump)
  $540 -> $35F (backward jump)
  $54E -> $45E (backward jump)
  $55A -> $1EF (backward jump)
  $566 -> $219 (backward jump)
  $594 -> $43A (backward jump)
  $5A0 -> $554 (backward jump)
  $5C0 -> $11A (backward jump)
  $5C2 -> $314 (backward jump)
  $5EA -> $17D (backward jump)
  $60A -> $1A7 (backward jump)
  $622 -> $23E (backward jump)
  $658 -> $0FB (backward jump)
  $690 -> $44C (backward jump)
  $6CA -> $0C2 (backward jump)
  $6DA -> $2D2 (backward jump)
  $6E6 -> $3C2 (backward jump)
  $6EE -> $390 (backward jump)
  $732 -> $574 (backward jump)
  $76C -> $0E8 (backward jump)
  $7AE -> $78E (backward jump)
  $7C4 -> $1F1 (backward jump)
  $7D8 -> $1DB (backward jump)
  $822 -> $6A8 (backward jump)
  $880 -> $252 (backward jump)
  $8A8 -> $12B (backward jump)
  $8D8 -> $56D (backward jump)
  $92A -> $0EC (backward jump)
  $93A -> $0BD (backward jump)
  $978 -> $05D (backward jump)
  $9B4 -> $025 (backward jump)
  $9F0 -> $187 (backward jump)
  $A06 -> $8DE (backward jump)
  $A0C -> $481 (backward jump)
  $A12 -> $7A0 (backward jump)
  $A14 -> $8AB (backward jump)
  $A26 -> $098 (backward jump)
  $A30 -> $77C (backward jump)
  $A32 -> $863 (backward jump)
  $A56 -> $1B2 (backward jump)
  $A9A -> $427 (backward jump)
  $AA0 -> $916 (backward jump)
  $AC4 -> $89B (backward jump)
  $AE2 -> $341 (backward jump)
  $AF6 -> $A55 (backward jump)
  $AFA -> $94D (backward jump)
  $B20 -> $160 (backward jump)
  $B3A -> $577 (backward jump)
  $B46 -> $193 (backward jump)
  $B62 -> $13A (backward jump)
  $B7A -> $114 (backward jump)
  $BA0 -> $367 (backward jump)
  $BA2 -> $439 (backward jump)
  $BBC -> $7C9 (backward jump)
  $BC0 -> $919 (backward jump)
  $BCA -> $778 (backward jump)
  $BD4 -> $878 (backward jump)
  $BDA -> $730 (backward jump)
  $BE0 -> $079 (backward jump)
  $C2A -> $25C (backward jump)
  $C46 -> $8D3 (backward jump)
  $C5A -> $01C (backward jump)
  $C9E -> $646 (backward jump)
  $CA8 -> $3DF (backward jump)
  $CB0 -> $7C2 (backward jump)
  $CB6 -> $093 (backward jump)
  $CD6 -> $7A2 (backward jump)
  $CD8 -> $7D5 (backward jump)
  $D0C -> $0C9 (backward jump)
  $D10 -> $7C2 (backward jump)
  $D1A -> $8D0 (backward jump)
  $D7A -> $501 (backward jump)
  $D96 -> $107 (backward jump)
  $D9E -> $0A8 (backward jump)
  $DAE -> $3A7 (backward jump)
  $DB2 -> $9C7 (backward jump)
  $DCC -> $0A4 (backward jump)
  $DD6 -> $0F9 (backward jump)
  $DF0 -> $2D6 (backward jump)
  $E26 -> $5A6 (backward jump)
  $E38 -> $E0F (backward jump)
  $E44 -> $946 (backward jump)
  $E4E -> $63D (backward jump)
  $E54 -> $DD4 (backward jump)
  $E76 -> $712 (backward jump)
  $E7C -> $CA0 (backward jump)
  $E8E -> $BAC (backward jump)
  $EA2 -> $9B2 (backward jump)
  $EBA -> $E68 (backward jump)
  $EF0 -> $876 (backward jump)
  $F2C -> $872 (backward jump)
  $F30 -> $B10 (backward jump)
  $F38 -> $8C5 (backward jump)
  $F46 -> $4EE (backward jump)
  $F4C -> $4D9 (backward jump)
  $F56 -> $D25 (backward jump)
  $F68 -> $ABB (backward jump)
  $F98 -> $0C9 (backward jump)
  $FC4 -> $E4D (backward jump)
  $FD2 -> $288 (backward jump)
  $FDA -> $286 (backward jump)
  $FDE -> $5B3 (backward jump)
  $FE6 -> $B41 (backward jump)
  $FEE -> $886 (backward jump)
  $FF6 -> $597 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $4DC4   SNE      VD, #C4         ; Skip if VD != 196
$202    $B124   JP       V0, $124        ; Jump to V0 + 124
$204    $BCE6   JP       V0, $CE6        ; Jump to V0 + CE6
$206    $5F4D   UNKNOWN  $5F4D           ; Unknown 5xxx instruction
$208    $11F8   JP       $1F8            ; Jump to 1F8
$20A    $3396   SE       V3, #96         ; Skip if V3 == 150
$20C    $1A22   JP       $A22            ; Jump to A22
$20E    $6F83   LD       VF, #83         ; Load 131 into VF
$210    $936D   UNKNOWN  $936D           ; Unknown 9xxx instruction
$212    $413D   SNE      V1, #3D         ; Skip if V1 != 61
$214    $6EE1   LD       VE, #E1         ; Load 225 into VE
$216    $AD14   LD       I, $D14         ; Load D14 into I
$218    $E0EE   UNKNOWN  $E0EE           ; Unknown Exxx instruction
$21A    $A076   LD       I, $076         ; Load 076 into I
$21C    $2EE5   CALL     $EE5            ; Call subroutine at EE5
$21E    $57AC   UNKNOWN  $57AC           ; Unknown 5xxx instruction
$220    $FAC9   UNKNOWN  FAC9            ; Unknown Fxxx instruction
$222    $1C0A   JP       $C0A            ; Jump to C0A
$224    $5229   UNKNOWN  $5229           ; Unknown 5xxx instruction
$226    $5357   UNKNOWN  $5357           ; Unknown 5xxx instruction
$228    $CDCB   RND      VD, #CB         ; VD = random & CB
$22A    $8777   SUBN     V7, V7          ; V7 = V7 - V7, VF = !borrow
$22C    $0C16   SYS      $C16            ; System call to C16
$22E    $3EB7   SE       VE, #B7         ; Skip if VE == 183
$230    $E413   UNKNOWN  $E413           ; Unknown Exxx instruction
$232    $2581   CALL     $581            ; Call subroutine at 581
$234    $268D   CALL     $68D            ; Call subroutine at 68D
$236    $C53F   RND      V5, #3F         ; V5 = random & 3F
$238    $E641   UNKNOWN  $E641           ; Unknown Exxx instruction
$23A    $6912   LD       V9, #12         ; Load 18 into V9
$23C    $E13A   UNKNOWN  $E13A           ; Unknown Exxx instruction
$23E    $E4B4   UNKNOWN  $E4B4           ; Unknown Exxx instruction
$240    $E212   UNKNOWN  $E212           ; Unknown Exxx instruction
$242    $18FA   JP       $8FA            ; Jump to 8FA
$244    $561C   UNKNOWN  $561C           ; Unknown 5xxx instruction
$246    $215B   CALL     $15B            ; Call subroutine at 15B
$248    $986A   UNKNOWN  $986A           ; Unknown 9xxx instruction
$24A    $5FA0   SE       VF, VA          ; Skip if VF == VA
$24C    $89D6   SHR      V9              ; V9 >>= 1, VF = LSB
$24E    $54B7   UNKNOWN  $54B7           ; Unknown 5xxx instruction
$250    $A5B0   LD       I, $5B0         ; Load 5B0 into I
$252    $F40A   LD       V4, K           ; Wait for key press, store in V4
$254    $154F   JP       $54F            ; Jump to 54F
$256    $3DAD   SE       VD, #AD         ; Skip if VD == 173
$258    $BC7C   JP       V0, $C7C        ; Jump to V0 + C7C
$25A    $4479   SNE      V4, #79         ; Skip if V4 != 121
$25C    $FD86   UNKNOWN  FD86            ; Unknown Fxxx instruction
$25E    $34D0   SE       V4, #D0         ; Skip if V4 == 208
$260    $1803   JP       $803            ; Jump to 803
$262    $986A   UNKNOWN  $986A           ; Unknown 9xxx instruction
$264    $84DF   UNKNOWN  84DF            ; Unknown 8xxx instruction
$266    $95F2   UNKNOWN  $95F2           ; Unknown 9xxx instruction
$268    $0FB8   SYS      $FB8            ; System call to FB8
$26A    $0A01   SYS      $A01            ; System call to A01
$26C    $1CE6   JP       $CE6            ; Jump to CE6
$26E    $49F9   SNE      V9, #F9         ; Skip if V9 != 249
$270    $A92F   LD       I, $92F         ; Load 92F into I
$272    $C14F   RND      V1, #4F         ; V1 = random & 4F
$274    $A3BE   LD       I, $3BE         ; Load 3BE into I
$276    $BBDF   JP       V0, $BDF        ; Jump to V0 + BDF
$278    $7E33   ADD      VE, #33         ; Add 51 to VE
$27A    $C6F6   RND      V6, #F6         ; V6 = random & F6
$27C    $0994   SYS      $994            ; System call to 994
$27E    $4F9C   SNE      VF, #9C         ; Skip if VF != 156
$280    $6776   LD       V7, #76         ; Load 118 into V7
$282    $37AB   SE       V7, #AB         ; Skip if V7 == 171
$284    $61CD   LD       V1, #CD         ; Load 205 into V1
$286    $FAF1   UNKNOWN  FAF1            ; Unknown Fxxx instruction
$288    $893B   UNKNOWN  893B            ; Unknown 8xxx instruction
$28A    $5CBA   UNKNOWN  $5CBA           ; Unknown 5xxx instruction
$28C    $CF13   RND      VF, #13         ; VF = random & 13
$28E    $A462   LD       I, $462         ; Load 462 into I
$290    $4752   SNE      V7, #52         ; Skip if V7 != 82
$292    $094C   SYS      $94C            ; System call to 94C
$294    $72E5   ADD      V2, #E5         ; Add 229 to V2
$296    $6027   LD       V0, #27         ; Load 39 into V0
$298    $005A   SYS      $05A            ; System call to 05A
$29A    $05E7   SYS      $5E7            ; System call to 5E7
$29C    $B304   JP       V0, $304        ; Jump to V0 + 304
$29E    $3392   SE       V3, #92         ; Skip if V3 == 146
$2A0    $5500   SE       V5, V0          ; Skip if V5 == V0
$2A2    $28A4   CALL     $8A4            ; Call subroutine at 8A4
$2A4    $C0F3   RND      V0, #F3         ; V0 = random & F3
$2A6    $61C5   LD       V1, #C5         ; Load 197 into V1
$2A8    $EF6C   UNKNOWN  $EF6C           ; Unknown Exxx instruction
$2AA    $5E1A   UNKNOWN  $5E1A           ; Unknown 5xxx instruction
$2AC    $90E3   UNKNOWN  $90E3           ; Unknown 9xxx instruction
$2AE    $7B83   ADD      VB, #83         ; Add 131 to VB
$2B0    $211D   CALL     $11D            ; Call subroutine at 11D
$2B2    $9E58   UNKNOWN  $9E58           ; Unknown 9xxx instruction
$2B4    $9E99   UNKNOWN  $9E99           ; Unknown 9xxx instruction
$2B6    $9E7B   UNKNOWN  $9E7B           ; Unknown 9xxx instruction
$2B8    $F89B   UNKNOWN  F89B            ; Unknown Fxxx instruction
$2BA    $4FB0   SNE      VF, #B0         ; Skip if VF != 176
$2BC    $431E   SNE      V3, #1E         ; Skip if V3 != 30
$2BE    $743C   ADD      V4, #3C         ; Add 60 to V4
$2C0    $9BCC   UNKNOWN  $9BCC           ; Unknown 9xxx instruction
$2C2    $A11D   LD       I, $11D         ; Load 11D into I
$2C4    $A7D6   LD       I, $7D6         ; Load 7D6 into I
$2C6    $810F   UNKNOWN  810F            ; Unknown 8xxx instruction
$2C8    $5475   UNKNOWN  $5475           ; Unknown 5xxx instruction
$2CA    $3440   SE       V4, #40         ; Skip if V4 == 64
$2CC    $F9AB   UNKNOWN  F9AB            ; Unknown Fxxx instruction
$2CE    $CBC5   RND      VB, #C5         ; VB = random & C5
$2D0    $B3B3   JP       V0, $3B3        ; Jump to V0 + 3B3
$2D2    $5398   UNKNOWN  $5398           ; Unknown 5xxx instruction
$2D4    $F743   UNKNOWN  F743            ; Unknown Fxxx instruction
$2D6    $4D39   SNE      VD, #39         ; Skip if VD != 57
$2D8    $6619   LD       V6, #19         ; Load 25 into V6
$2DA    $AA53   LD       I, $A53         ; Load A53 into I
$2DC    $BBBA   JP       V0, $BBA        ; Jump to V0 + BBA
$2DE    $F775   UNKNOWN  F775            ; Unknown Fxxx instruction
$2E0    $049F   SYS      $49F            ; System call to 49F
$2E2    $5A57   UNKNOWN  $5A57           ; Unknown 5xxx instruction
$2E4    $180F   JP       $80F            ; Jump to 80F
$2E6    $61DC   LD       V1, #DC         ; Load 220 into V1
$2E8    $B412   JP       V0, $412        ; Jump to V0 + 412
$2EA    $CA8D   RND      VA, #8D         ; VA = random & 8D
$2EC    $EAD1   UNKNOWN  $EAD1           ; Unknown Exxx instruction
$2EE    $94C9   UNKNOWN  $94C9           ; Unknown 9xxx instruction
$2F0    $C76C   RND      V7, #6C         ; V7 = random & 6C
$2F2    $218D   CALL     $18D            ; Call subroutine at 18D
$2F4    $ADF3   LD       I, $DF3         ; Load DF3 into I
$2F6    $A48E   LD       I, $48E         ; Load 48E into I
$2F8    $062E   SYS      $62E            ; System call to 62E
$2FA    $7702   ADD      V7, #02         ; Add 2 to V7
$2FC    $6DDE   LD       VD, #DE         ; Load 222 into VD
$2FE    $0681   SYS      $681            ; System call to 681
$300    $F1A4   UNKNOWN  F1A4            ; Unknown Fxxx instruction
$302    $907B   UNKNOWN  $907B           ; Unknown 9xxx instruction
$304    $544A   UNKNOWN  $544A           ; Unknown 5xxx instruction
$306    $2C10   CALL     $C10            ; Call subroutine at C10
$308    $A42F   LD       I, $42F         ; Load 42F into I
$30A    $6D1A   LD       VD, #1A         ; Load 26 into VD
$30C    $06A5   SYS      $6A5            ; System call to 6A5
$30E    $16B5   JP       $6B5            ; Jump to 6B5
$310    $BDD0   JP       V0, $DD0        ; Jump to V0 + DD0
$312    $2C81   CALL     $C81            ; Call subroutine at C81
$314    $B113   JP       V0, $113        ; Jump to V0 + 113
$316    $A4DB   LD       I, $4DB         ; Load 4DB into I
$318    $E741   UNKNOWN  $E741           ; Unknown Exxx instruction
$31A    $A930   LD       I, $930         ; Load 930 into I
$31C    $D9FD   DRW      V9, VF, #D      ; Draw 13-byte sprite at V9, VF
$31E    $9C2B   UNKNOWN  $9C2B           ; Unknown 9xxx instruction
$320    $3007   SE       V0, #07         ; Skip if V0 == 7
$322    $4138   SNE      V1, #38         ; Skip if V1 != 56
$324    $B594   JP       V0, $594        ; Jump to V0 + 594
$326    $6AB2   LD       VA, #B2         ; Load 178 into VA
$328    $8C88   UNKNOWN  8C88            ; Unknown 8xxx instruction
$32A    $81B6   SHR      V1              ; V1 >>= 1, VF = LSB
$32C    $4308   SNE      V3, #08         ; Skip if V3 != 8
$32E    $AEDF   LD       I, $EDF         ; Load EDF into I
$330    $5649   UNKNOWN  $5649           ; Unknown 5xxx instruction
$332    $3F94   SE       VF, #94         ; Skip if VF == 148
$334    $20B0   CALL     $0B0            ; Call subroutine at 0B0
$336    $8F36   SHR      VF              ; VF >>= 1, VF = LSB
$338    $F97A   UNKNOWN  F97A            ; Unknown Fxxx instruction
$33A    $1734   JP       $734            ; Jump to 734
$33C    $DF23   DRW      VF, V2, #3      ; Draw 3-byte sprite at VF, V2
$33E    $90E9   UNKNOWN  $90E9           ; Unknown 9xxx instruction
$340    $8960   LD       V9, V6          ; V9 = V6
$342    $B3EF   JP       V0, $3EF        ; Jump to V0 + 3EF
$344    $F62C   UNKNOWN  F62C            ; Unknown Fxxx instruction
$346    $975B   UNKNOWN  $975B           ; Unknown 9xxx instruction
$348    $BBDA   JP       V0, $BDA        ; Jump to V0 + BDA
$34A    $0CCC   SYS      $CCC            ; System call to CCC
$34C    $7803   ADD      V8, #03         ; Add 3 to V8
$34E    $D26C   DRW      V2, V6, #C      ; Draw 12-byte sprite at V2, V6
$350    $B21F   JP       V0, $21F        ; Jump to V0 + 21F
$352    $F4EF   UNKNOWN  F4EF            ; Unknown Fxxx instruction
$354    $DC38   DRW      VC, V3, #8      ; Draw 8-byte sprite at VC, V3
$356    $288E   CALL     $88E            ; Call subroutine at 88E
$358    $284F   CALL     $84F            ; Call subroutine at 84F
$35A    $0DCA   SYS      $DCA            ; System call to DCA
$35C    $D8E6   DRW      V8, VE, #6      ; Draw 6-byte sprite at V8, VE
$35E    $830E   SHL      V3              ; V3 <<= 1, VF = MSB
$360    $6465   LD       V4, #65         ; Load 101 into V4
$362    $0FD5   SYS      $FD5            ; System call to FD5
$364    $B765   JP       V0, $765        ; Jump to V0 + 765
$366    $38B0   SE       V8, #B0         ; Skip if V8 == 176
$368    $21BB   CALL     $1BB            ; Call subroutine at 1BB
$36A    $FD3E   UNKNOWN  FD3E            ; Unknown Fxxx instruction
$36C    $A64C   LD       I, $64C         ; Load 64C into I
$36E    $52F2   UNKNOWN  $52F2           ; Unknown 5xxx instruction
$370    $435A   SNE      V3, #5A         ; Skip if V3 != 90
$372    $0423   SYS      $423            ; System call to 423
$374    $7E05   ADD      VE, #05         ; Add 5 to VE
$376    $2058   CALL     $058            ; Call subroutine at 058
$378    $0781   SYS      $781            ; System call to 781
$37A    $D573   DRW      V5, V7, #3      ; Draw 3-byte sprite at V5, V7
$37C    $7874   ADD      V8, #74         ; Add 116 to V8
$37E    $7CEF   ADD      VC, #EF         ; Add 239 to VC
$380    $F2B9   UNKNOWN  F2B9            ; Unknown Fxxx instruction
$382    $B95F   JP       V0, $95F        ; Jump to V0 + 95F
$384    $E09C   UNKNOWN  $E09C           ; Unknown Exxx instruction
$386    $6457   LD       V4, #57         ; Load 87 into V4
$388    $8EB4   ADD      VE, VB          ; VE += VB, VF = carry
$38A    $B30D   JP       V0, $30D        ; Jump to V0 + 30D
$38C    $61F4   LD       V1, #F4         ; Load 244 into V1
$38E    $F00F   UNKNOWN  F00F            ; Unknown Fxxx instruction
$390    $B7B4   JP       V0, $7B4        ; Jump to V0 + 7B4
$392    $0244   SYS      $244            ; System call to 244
$394    $5790   SE       V7, V9          ; Skip if V7 == V9
$396    $6122   LD       V1, #22         ; Load 34 into V1
$398    $47EA   SNE      V7, #EA         ; Skip if V7 != 234
$39A    $54C9   UNKNOWN  $54C9           ; Unknown 5xxx instruction
$39C    $66CE   LD       V6, #CE         ; Load 206 into V6
$39E    $83D3   XOR      V3, VD          ; V3 ^= VD
$3A0    $17DD   JP       $7DD            ; Jump to 7DD
$3A2    $96D0   SNE      V6, VD          ; Skip if V6 != VD
$3A4    $EC88   UNKNOWN  $EC88           ; Unknown Exxx instruction
$3A6    $CBE2   RND      VB, #E2         ; VB = random & E2
$3A8    $DB42   DRW      VB, V4, #2      ; Draw 2-byte sprite at VB, V4
$3AA    $7BDA   ADD      VB, #DA         ; Add 218 to VB
$3AC    $6A21   LD       VA, #21         ; Load 33 into VA
$3AE    $3E46   SE       VE, #46         ; Skip if VE == 70
$3B0    $BDA5   JP       V0, $DA5        ; Jump to V0 + DA5
$3B2    $D5DA   DRW      V5, VD, #A      ; Draw 10-byte sprite at V5, VD
$3B4    $BD6C   JP       V0, $D6C        ; Jump to V0 + D6C
$3B6    $D25A   DRW      V2, V5, #A      ; Draw 10-byte sprite at V2, V5
$3B8    $D3D2   DRW      V3, VD, #2      ; Draw 2-byte sprite at V3, VD
$3BA    $B374   JP       V0, $374        ; Jump to V0 + 374
$3BC    $CE84   RND      VE, #84         ; VE = random & 84
$3BE    $AAD3   LD       I, $AD3         ; Load AD3 into I
$3C0    $BDE5   JP       V0, $DE5        ; Jump to V0 + DE5
$3C2    $2BB3   CALL     $BB3            ; Call subroutine at BB3
$3C4    $DA0E   DRW      VA, V0, #E      ; Draw 14-byte sprite at VA, V0
$3C6    $4180   SNE      V1, #80         ; Skip if V1 != 128
$3C8    $AE70   LD       I, $E70         ; Load E70 into I
$3CA    $B0AF   JP       V0, $0AF        ; Jump to V0 + 0AF
$3CC    $0F38   SYS      $F38            ; System call to F38
$3CE    $6CC7   LD       VC, #C7         ; Load 199 into VC
$3D0    $019F   SYS      $19F            ; System call to 19F
$3D2    $4209   SNE      V2, #09         ; Skip if V2 != 9
$3D4    $5830   SE       V8, V3          ; Skip if V8 == V3
$3D6    $7CD7   ADD      VC, #D7         ; Add 215 to VC
$3D8    $BA72   JP       V0, $A72        ; Jump to V0 + A72
$3DA    $FC59   UNKNOWN  FC59            ; Unknown Fxxx instruction
$3DC    $B677   JP       V0, $677        ; Jump to V0 + 677
$3DE    $3EF6   SE       VE, #F6         ; Skip if VE == 246
$3E0    $C8EB   RND      V8, #EB         ; V8 = random & EB
$3E2    $085A   SYS      $85A            ; System call to 85A
$3E4    $40A7   SNE      V0, #A7         ; Skip if V0 != 167
$3E6    $0B7A   SYS      $B7A            ; System call to B7A
$3E8    $12B3   JP       $2B3            ; Jump to 2B3
$3EA    $AA98   LD       I, $A98         ; Load A98 into I
$3EC    $F0E5   UNKNOWN  F0E5            ; Unknown Fxxx instruction
$3EE    $8742   AND      V7, V4          ; V7 &= V4
$3F0    $3A92   SE       VA, #92         ; Skip if VA == 146
$3F2    $1730   JP       $730            ; Jump to 730
$3F4    $93CF   UNKNOWN  $93CF           ; Unknown 9xxx instruction
$3F6    $C903   RND      V9, #03         ; V9 = random & 03
$3F8    $74BA   ADD      V4, #BA         ; Add 186 to V4
$3FA    $965A   UNKNOWN  $965A           ; Unknown 9xxx instruction
$3FC    $0F81   SYS      $F81            ; System call to F81
$3FE    $F64F   UNKNOWN  F64F            ; Unknown Fxxx instruction
$400    $4406   SNE      V4, #06         ; Skip if V4 != 6
$402    $B5E4   JP       V0, $5E4        ; Jump to V0 + 5E4
$404    $BAE2   JP       V0, $AE2        ; Jump to V0 + AE2
$406    $5018   UNKNOWN  $5018           ; Unknown 5xxx instruction
$408    $7C85   ADD      VC, #85         ; Add 133 to VC
$40A    $19E7   JP       $9E7            ; Jump to 9E7
$40C    $34D3   SE       V4, #D3         ; Skip if V4 == 211
$40E    $EFBA   UNKNOWN  $EFBA           ; Unknown Exxx instruction
$410    $CE22   RND      VE, #22         ; VE = random & 22
$412    $40BA   SNE      V0, #BA         ; Skip if V0 != 186
$414    $ABD3   LD       I, $BD3         ; Load BD3 into I
$416    $3672   SE       V6, #72         ; Skip if V6 == 114
$418    $8668   UNKNOWN  8668            ; Unknown 8xxx instruction
$41A    $CC44   RND      VC, #44         ; VC = random & 44
$41C    $9D64   UNKNOWN  $9D64           ; Unknown 9xxx instruction
$41E    $9D7F   UNKNOWN  $9D7F           ; Unknown 9xxx instruction
$420    $27F7   CALL     $7F7            ; Call subroutine at 7F7
$422    $B8AC   JP       V0, $8AC        ; Jump to V0 + 8AC
$424    $9E9E   UNKNOWN  $9E9E           ; Unknown 9xxx instruction
$426    $EF89   UNKNOWN  $EF89           ; Unknown Exxx instruction
$428    $23DC   CALL     $3DC            ; Call subroutine at 3DC
$42A    $57A0   SE       V7, VA          ; Skip if V7 == VA
$42C    $B708   JP       V0, $708        ; Jump to V0 + 708
$42E    $04EC   SYS      $4EC            ; System call to 4EC
$430    $104F   JP       $04F            ; Jump to 04F
$432    $4484   SNE      V4, #84         ; Skip if V4 != 132
$434    $3EEF   SE       VE, #EF         ; Skip if VE == 239
$436    $B7D4   JP       V0, $7D4        ; Jump to V0 + 7D4
$438    $1565   JP       $565            ; Jump to 565
$43A    $CC28   RND      VC, #28         ; VC = random & 28
$43C    $B8FC   JP       V0, $8FC        ; Jump to V0 + 8FC
$43E    $E7A6   UNKNOWN  $E7A6           ; Unknown Exxx instruction
$440    $221D   CALL     $21D            ; Call subroutine at 21D
$442    $1907   JP       $907            ; Jump to 907
$444    $C84C   RND      V8, #4C         ; V8 = random & 4C
$446    $E7FD   UNKNOWN  $E7FD           ; Unknown Exxx instruction
$448    $BF6C   JP       V0, $F6C        ; Jump to V0 + F6C
$44A    $7182   ADD      V1, #82         ; Add 130 to V1
$44C    $66D0   LD       V6, #D0         ; Load 208 into V6
$44E    $BB53   JP       V0, $B53        ; Jump to V0 + B53
$450    $9376   UNKNOWN  $9376           ; Unknown 9xxx instruction
$452    $B3D3   JP       V0, $3D3        ; Jump to V0 + 3D3
$454    $292A   CALL     $92A            ; Call subroutine at 92A
$456    $AEA9   LD       I, $EA9         ; Load EA9 into I
$458    $A743   LD       I, $743         ; Load 743 into I
$45A    $ACE6   LD       I, $CE6         ; Load CE6 into I
$45C    $F55E   UNKNOWN  F55E            ; Unknown Fxxx instruction
$45E    $5D26   UNKNOWN  $5D26           ; Unknown 5xxx instruction
$460    $252B   CALL     $52B            ; Call subroutine at 52B
$462    $FF0A   LD       VF, K           ; Wait for key press, store in VF
$464    $0D5C   SYS      $D5C            ; System call to D5C
$466    $1ED1   JP       $ED1            ; Jump to ED1
$468    $BACC   JP       V0, $ACC        ; Jump to V0 + ACC
$46A    $DBD0   DRW      VB, VD, #0      ; Draw 0-byte sprite at VB, VD
$46C    $888E   SHL      V8              ; V8 <<= 1, VF = MSB
$46E    $60FB   LD       V0, #FB         ; Load 251 into V0
$470    $26F1   CALL     $6F1            ; Call subroutine at 6F1
$472    $EE3B   UNKNOWN  $EE3B           ; Unknown Exxx instruction
$474    $CBBA   RND      VB, #BA         ; VB = random & BA
$476    $15A1   JP       $5A1            ; Jump to 5A1
$478    $C60A   RND      V6, #0A         ; V6 = random & 0A
$47A    $F9A9   UNKNOWN  F9A9            ; Unknown Fxxx instruction
$47C    $CAC3   RND      VA, #C3         ; VA = random & C3
$47E    $59A7   UNKNOWN  $59A7           ; Unknown 5xxx instruction
$480    $5C57   UNKNOWN  $5C57           ; Unknown 5xxx instruction
$482    $9D89   UNKNOWN  $9D89           ; Unknown 9xxx instruction
$484    $E266   UNKNOWN  $E266           ; Unknown Exxx instruction
$486    $C93F   RND      V9, #3F         ; V9 = random & 3F
$488    $BE07   JP       V0, $E07        ; Jump to V0 + E07
$48A    $C4BC   RND      V4, #BC         ; V4 = random & BC
$48C    $FD60   UNKNOWN  FD60            ; Unknown Fxxx instruction
$48E    $862B   UNKNOWN  862B            ; Unknown 8xxx instruction
$490    $214F   CALL     $14F            ; Call subroutine at 14F
$492    $211F   CALL     $11F            ; Call subroutine at 11F
$494    $8BB8   UNKNOWN  8BB8            ; Unknown 8xxx instruction
$496    $8336   SHR      V3              ; V3 >>= 1, VF = LSB
$498    $5C0E   UNKNOWN  $5C0E           ; Unknown 5xxx instruction
$49A    $ECF4   UNKNOWN  $ECF4           ; Unknown Exxx instruction
$49C    $BFBA   JP       V0, $FBA        ; Jump to V0 + FBA
$49E    $323B   SE       V2, #3B         ; Skip if V2 == 59
$4A0    $652A   LD       V5, #2A         ; Load 42 into V5
$4A2    $3837   SE       V8, #37         ; Skip if V8 == 55
$4A4    $6D38   LD       VD, #38         ; Load 56 into VD
$4A6    $67D6   LD       V7, #D6         ; Load 214 into V7
$4A8    $2F73   CALL     $F73            ; Call subroutine at F73
$4AA    $1AF8   JP       $AF8            ; Jump to AF8
$4AC    $9F5F   UNKNOWN  $9F5F           ; Unknown 9xxx instruction
$4AE    $372B   SE       V7, #2B         ; Skip if V7 == 43
$4B0    $DA85   DRW      VA, V8, #5      ; Draw 5-byte sprite at VA, V8
$4B2    $7448   ADD      V4, #48         ; Add 72 to V4
$4B4    $70E7   ADD      V0, #E7         ; Add 231 to V0
$4B6    $140E   JP       $40E            ; Jump to 40E
$4B8    $DAC4   DRW      VA, VC, #4      ; Draw 4-byte sprite at VA, VC
$4BA    $3045   SE       V0, #45         ; Skip if V0 == 69
$4BC    $F195   UNKNOWN  F195            ; Unknown Fxxx instruction
$4BE    $304E   SE       V0, #4E         ; Skip if V0 == 78
$4C0    $8CB1   OR       VC, VB          ; VC |= VB
$4C2    $49E5   SNE      V9, #E5         ; Skip if V9 != 229
$4C4    $20EB   CALL     $0EB            ; Call subroutine at 0EB
$4C6    $15F1   JP       $5F1            ; Jump to 5F1
$4C8    $FFFA   UNKNOWN  FFFA            ; Unknown Fxxx instruction
$4CA    $C777   RND      V7, #77         ; V7 = random & 77
$4CC    $8490   LD       V4, V9          ; V4 = V9
$4CE    $B070   JP       V0, $070        ; Jump to V0 + 070
$4D0    $F078   UNKNOWN  F078            ; Unknown Fxxx instruction
$4D2    $BDE6   JP       V0, $DE6        ; Jump to V0 + DE6
$4D4    $3134   SE       V1, #34         ; Skip if V1 == 52
$4D6    $7AB5   ADD      VA, #B5         ; Add 181 to VA
$4D8    $922F   UNKNOWN  $922F           ; Unknown 9xxx instruction
$4DA    $9713   UNKNOWN  $9713           ; Unknown 9xxx instruction
$4DC    $739C   ADD      V3, #9C         ; Add 156 to V3
$4DE    $6C15   LD       VC, #15         ; Load 21 into VC
$4E0    $C2BC   RND      V2, #BC         ; V2 = random & BC
$4E2    $134B   JP       $34B            ; Jump to 34B
$4E4    $6C09   LD       VC, #09         ; Load 9 into VC
$4E6    $1D6D   JP       $D6D            ; Jump to D6D
$4E8    $F47C   UNKNOWN  F47C            ; Unknown Fxxx instruction
$4EA    $8105   SUB      V1, V0          ; V1 -= V0, VF = !borrow
$4EC    $7541   ADD      V5, #41         ; Add 65 to V5
$4EE    $A5A8   LD       I, $5A8         ; Load 5A8 into I
$4F0    $5B48   UNKNOWN  $5B48           ; Unknown 5xxx instruction
$4F2    $45ED   SNE      V5, #ED         ; Skip if V5 != 237
$4F4    $464C   SNE      V6, #4C         ; Skip if V6 != 76
$4F6    $46A5   SNE      V6, #A5         ; Skip if V6 != 165
$4F8    $9EC4   UNKNOWN  $9EC4           ; Unknown 9xxx instruction
$4FA    $D8B6   DRW      V8, VB, #6      ; Draw 6-byte sprite at V8, VB
$4FC    $2EAE   CALL     $EAE            ; Call subroutine at EAE
$4FE    $CFFE   RND      VF, #FE         ; VF = random & FE
$500    $8335   SUB      V3, V3          ; V3 -= V3, VF = !borrow
$502    $F3DB   UNKNOWN  F3DB            ; Unknown Fxxx instruction
$504    $345F   SE       V4, #5F         ; Skip if V4 == 95
$506    $4E02   SNE      VE, #02         ; Skip if VE != 2
$508    $D2EC   DRW      V2, VE, #C      ; Draw 12-byte sprite at V2, VE
$50A    $ED36   UNKNOWN  $ED36           ; Unknown Exxx instruction
$50C    $718F   ADD      V1, #8F         ; Add 143 to V1
$50E    $2375   CALL     $375            ; Call subroutine at 375
$510    $2C99   CALL     $C99            ; Call subroutine at C99
$512    $165E   JP       $65E            ; Jump to 65E
$514    $7C7C   ADD      VC, #7C         ; Add 124 to VC
$516    $BB13   JP       V0, $B13        ; Jump to V0 + B13
$518    $B1BC   JP       V0, $1BC        ; Jump to V0 + 1BC
$51A    $759F   ADD      V5, #9F         ; Add 159 to V5
$51C    $C181   RND      V1, #81         ; V1 = random & 81
$51E    $1009   JP       $009            ; Jump to 009
$520    $62DF   LD       V2, #DF         ; Load 223 into V2
$522    $E6AE   UNKNOWN  $E6AE           ; Unknown Exxx instruction
$524    $23C5   CALL     $3C5            ; Call subroutine at 3C5
$526    $BCE5   JP       V0, $CE5        ; Jump to V0 + CE5
$528    $70CD   ADD      V0, #CD         ; Add 205 to V0
$52A    $E072   UNKNOWN  $E072           ; Unknown Exxx instruction
$52C    $B49E   JP       V0, $49E        ; Jump to V0 + 49E
$52E    $E22A   UNKNOWN  $E22A           ; Unknown Exxx instruction
$530    $4EC1   SNE      VE, #C1         ; Skip if VE != 193
$532    $FB8C   UNKNOWN  FB8C            ; Unknown Fxxx instruction
$534    $6906   LD       V9, #06         ; Load 6 into V9
$536    $FA64   UNKNOWN  FA64            ; Unknown Fxxx instruction
$538    $33F0   SE       V3, #F0         ; Skip if V3 == 240
$53A    $2296   CALL     $296            ; Call subroutine at 296
$53C    $F0F1   UNKNOWN  F0F1            ; Unknown Fxxx instruction
$53E    $A1DE   LD       I, $1DE         ; Load 1DE into I
$540    $B35F   JP       V0, $35F        ; Jump to V0 + 35F
$542    $C912   RND      V9, #12         ; V9 = random & 12
$544    $08D0   SYS      $8D0            ; System call to 8D0
$546    $53B7   UNKNOWN  $53B7           ; Unknown 5xxx instruction
$548    $47E7   SNE      V7, #E7         ; Skip if V7 != 231
$54A    $1558   JP       $558            ; Jump to 558
$54C    $98C5   UNKNOWN  $98C5           ; Unknown 9xxx instruction
$54E    $B45E   JP       V0, $45E        ; Jump to V0 + 45E
$550    $F958   UNKNOWN  F958            ; Unknown Fxxx instruction
$552    $E1B4   UNKNOWN  $E1B4           ; Unknown Exxx instruction
$554    $2658   CALL     $658            ; Call subroutine at 658
$556    $DD50   DRW      VD, V5, #0      ; Draw 0-byte sprite at VD, V5
$558    $8991   OR       V9, V9          ; V9 |= V9
$55A    $B1EF   JP       V0, $1EF        ; Jump to V0 + 1EF
$55C    $4BE9   SNE      VB, #E9         ; Skip if VB != 233
$55E    $D8E7   DRW      V8, VE, #7      ; Draw 7-byte sprite at V8, VE
$560    $177D   JP       $77D            ; Jump to 77D
$562    $C9DD   RND      V9, #DD         ; V9 = random & DD
$564    $E93D   UNKNOWN  $E93D           ; Unknown Exxx instruction
$566    $B219   JP       V0, $219        ; Jump to V0 + 219
$568    $1B2D   JP       $B2D            ; Jump to B2D
$56A    $32DC   SE       V2, #DC         ; Skip if V2 == 220
$56C    $0056   SYS      $056            ; System call to 056
$56E    $5DE4   UNKNOWN  $5DE4           ; Unknown 5xxx instruction
$570    $E937   UNKNOWN  $E937           ; Unknown Exxx instruction
$572    $092D   SYS      $92D            ; System call to 92D
$574    $6DC0   LD       VD, #C0         ; Load 192 into VD
$576    $FA1F   UNKNOWN  FA1F            ; Unknown Fxxx instruction
$578    $9E6E   UNKNOWN  $9E6E           ; Unknown 9xxx instruction
$57A    $CDA7   RND      VD, #A7         ; VD = random & A7
$57C    $C24B   RND      V2, #4B         ; V2 = random & 4B
$57E    $B8D4   JP       V0, $8D4        ; Jump to V0 + 8D4
$580    $533B   UNKNOWN  $533B           ; Unknown 5xxx instruction
$582    $D01B   DRW      V0, V1, #B      ; Draw 11-byte sprite at V0, V1
$584    $27FC   CALL     $7FC            ; Call subroutine at 7FC
$586    $BC7D   JP       V0, $C7D        ; Jump to V0 + C7D
$588    $BE75   JP       V0, $E75        ; Jump to V0 + E75
$58A    $1877   JP       $877            ; Jump to 877
$58C    $9E8E   UNKNOWN  $9E8E           ; Unknown 9xxx instruction
$58E    $A5F2   LD       I, $5F2         ; Load 5F2 into I
$590    $39B4   SE       V9, #B4         ; Skip if V9 == 180
$592    $56AF   UNKNOWN  $56AF           ; Unknown 5xxx instruction
$594    $143A   JP       $43A            ; Jump to 43A
$596    $A079   LD       I, $079         ; Load 079 into I
$598    $4D65   SNE      VD, #65         ; Skip if VD != 101
$59A    $D5F8   DRW      V5, VF, #8      ; Draw 8-byte sprite at V5, VF
$59C    $91F4   UNKNOWN  $91F4           ; Unknown 9xxx instruction
$59E    $4203   SNE      V2, #03         ; Skip if V2 != 3
$5A0    $B554   JP       V0, $554        ; Jump to V0 + 554
$5A2    $DB46   DRW      VB, V4, #6      ; Draw 6-byte sprite at VB, V4
$5A4    $C8A3   RND      V8, #A3         ; V8 = random & A3
$5A6    $84EC   UNKNOWN  84EC            ; Unknown 8xxx instruction
$5A8    $1CC0   JP       $CC0            ; Jump to CC0
$5AA    $42A0   SNE      V2, #A0         ; Skip if V2 != 160
$5AC    $55CE   UNKNOWN  $55CE           ; Unknown 5xxx instruction
$5AE    $586C   UNKNOWN  $586C           ; Unknown 5xxx instruction
$5B0    $A014   LD       I, $014         ; Load 014 into I
$5B2    $B95A   JP       V0, $95A        ; Jump to V0 + 95A
$5B4    $5F31   UNKNOWN  $5F31           ; Unknown 5xxx instruction
$5B6    $9323   UNKNOWN  $9323           ; Unknown 9xxx instruction
$5B8    $8117   SUBN     V1, V1          ; V1 = V1 - V1, VF = !borrow
$5BA    $72AE   ADD      V2, #AE         ; Add 174 to V2
$5BC    $F60E   UNKNOWN  F60E            ; Unknown Fxxx instruction
$5BE    $AB94   LD       I, $B94         ; Load B94 into I
$5C0    $111A   JP       $11A            ; Jump to 11A
$5C2    $1314   JP       $314            ; Jump to 314
$5C4    $785D   ADD      V8, #5D         ; Add 93 to V8
$5C6    $8B75   SUB      VB, V7          ; VB -= V7, VF = !borrow
$5C8    $CC6E   RND      VC, #6E         ; VC = random & 6E
$5CA    $AE9D   LD       I, $E9D         ; Load E9D into I
$5CC    $7BDA   ADD      VB, #DA         ; Add 218 to VB
$5CE    $6493   LD       V4, #93         ; Load 147 into V4
$5D0    $67C1   LD       V7, #C1         ; Load 193 into V7
$5D2    $8D9C   UNKNOWN  8D9C            ; Unknown 8xxx instruction
$5D4    $2DC3   CALL     $DC3            ; Call subroutine at DC3
$5D6    $01B6   SYS      $1B6            ; System call to 1B6
$5D8    $CB62   RND      VB, #62         ; VB = random & 62
$5DA    $1AEA   JP       $AEA            ; Jump to AEA
$5DC    $629D   LD       V2, #9D         ; Load 157 into V2
$5DE    $8C13   XOR      VC, V1          ; VC ^= V1
$5E0    $EF5B   UNKNOWN  $EF5B           ; Unknown Exxx instruction
$5E2    $F3A6   UNKNOWN  F3A6            ; Unknown Fxxx instruction
$5E4    $D12A   DRW      V1, V2, #A      ; Draw 10-byte sprite at V1, V2
$5E6    $09FA   SYS      $9FA            ; System call to 9FA
$5E8    $A503   LD       I, $503         ; Load 503 into I
$5EA    $B17D   JP       V0, $17D        ; Jump to V0 + 17D
$5EC    $F219   UNKNOWN  F219            ; Unknown Fxxx instruction
$5EE    $3B65   SE       VB, #65         ; Skip if VB == 101
$5F0    $6A0E   LD       VA, #0E         ; Load 14 into VA
$5F2    $5E16   UNKNOWN  $5E16           ; Unknown 5xxx instruction
$5F4    $90A1   UNKNOWN  $90A1           ; Unknown 9xxx instruction
$5F6    $D4DC   DRW      V4, VD, #C      ; Draw 12-byte sprite at V4, VD
$5F8    $1B7D   JP       $B7D            ; Jump to B7D
$5FA    $F3FD   UNKNOWN  F3FD            ; Unknown Fxxx instruction
$5FC    $2CCD   CALL     $CCD            ; Call subroutine at CCD
$5FE    $C144   RND      V1, #44         ; V1 = random & 44
$600    $1B82   JP       $B82            ; Jump to B82
$602    $EDB5   UNKNOWN  $EDB5           ; Unknown Exxx instruction
$604    $59DC   UNKNOWN  $59DC           ; Unknown 5xxx instruction
$606    $93EC   UNKNOWN  $93EC           ; Unknown 9xxx instruction
$608    $DB2E   DRW      VB, V2, #E      ; Draw 14-byte sprite at VB, V2
$60A    $B1A7   JP       V0, $1A7        ; Jump to V0 + 1A7
$60C    $5A23   UNKNOWN  $5A23           ; Unknown 5xxx instruction
$60E    $7A74   ADD      VA, #74         ; Add 116 to VA
$610    $F15C   UNKNOWN  F15C            ; Unknown Fxxx instruction
$612    $D7BC   DRW      V7, VB, #C      ; Draw 12-byte sprite at V7, VB
$614    $DFCB   DRW      VF, VC, #B      ; Draw 11-byte sprite at VF, VC
$616    $D835   DRW      V8, V3, #5      ; Draw 5-byte sprite at V8, V3
$618    $E4EF   UNKNOWN  $E4EF           ; Unknown Exxx instruction
$61A    $F090   UNKNOWN  F090            ; Unknown Fxxx instruction
$61C    $5215   UNKNOWN  $5215           ; Unknown 5xxx instruction
$61E    $6C39   LD       VC, #39         ; Load 57 into VC
$620    $A11A   LD       I, $11A         ; Load 11A into I
$622    $123E   JP       $23E            ; Jump to 23E
$624    $FF5E   UNKNOWN  FF5E            ; Unknown Fxxx instruction
$626    $A004   LD       I, $004         ; Load 004 into I
$628    $8694   ADD      V6, V9          ; V6 += V9, VF = carry
$62A    $EACC   UNKNOWN  $EACC           ; Unknown Exxx instruction
$62C    $5BE9   UNKNOWN  $5BE9           ; Unknown 5xxx instruction
$62E    $CD2B   RND      VD, #2B         ; VD = random & 2B
$630    $91A4   UNKNOWN  $91A4           ; Unknown 9xxx instruction
$632    $A740   LD       I, $740         ; Load 740 into I
$634    $FE33   LD       B, VE           ; Store BCD of VE at I, I+1, I+2
$636    $D1DD   DRW      V1, VD, #D      ; Draw 13-byte sprite at V1, VD
$638    $06C3   SYS      $6C3            ; System call to 6C3
$63A    $37C0   SE       V7, #C0         ; Skip if V7 == 192
$63C    $E156   UNKNOWN  $E156           ; Unknown Exxx instruction
$63E    $4755   SNE      V7, #55         ; Skip if V7 != 85
$640    $F07E   UNKNOWN  F07E            ; Unknown Fxxx instruction
$642    $0EBE   SYS      $EBE            ; System call to EBE
$644    $26E9   CALL     $6E9            ; Call subroutine at 6E9
$646    $E920   UNKNOWN  $E920           ; Unknown Exxx instruction
$648    $C8BE   RND      V8, #BE         ; V8 = random & BE
$64A    $CE9A   RND      VE, #9A         ; VE = random & 9A
$64C    $C500   RND      V5, #00         ; V5 = random & 00
$64E    $2746   CALL     $746            ; Call subroutine at 746
$650    $4822   SNE      V8, #22         ; Skip if V8 != 34
$652    $29F4   CALL     $9F4            ; Call subroutine at 9F4
$654    $E8B5   UNKNOWN  $E8B5           ; Unknown Exxx instruction
$656    $49D7   SNE      V9, #D7         ; Skip if V9 != 215
$658    $10FB   JP       $0FB            ; Jump to 0FB
$65A    $60C6   LD       V0, #C6         ; Load 198 into V0
$65C    $2970   CALL     $970            ; Call subroutine at 970
$65E    $C7DA   RND      V7, #DA         ; V7 = random & DA
$660    $7050   ADD      V0, #50         ; Add 80 to V0
$662    $4453   SNE      V4, #53         ; Skip if V4 != 83
$664    $BF91   JP       V0, $F91        ; Jump to V0 + F91
$666    $4B29   SNE      VB, #29         ; Skip if VB != 41
$668    $9321   UNKNOWN  $9321           ; Unknown 9xxx instruction
$66A    $E1B4   UNKNOWN  $E1B4           ; Unknown Exxx instruction
$66C    $9B41   UNKNOWN  $9B41           ; Unknown 9xxx instruction
$66E    $586E   UNKNOWN  $586E           ; Unknown 5xxx instruction
$670    $8C4B   UNKNOWN  8C4B            ; Unknown 8xxx instruction
$672    $3BD8   SE       VB, #D8         ; Skip if VB == 216
$674    $ECE3   UNKNOWN  $ECE3           ; Unknown Exxx instruction
$676    $4C26   SNE      VC, #26         ; Skip if VC != 38
$678    $1A26   JP       $A26            ; Jump to A26
$67A    $AF43   LD       I, $F43         ; Load F43 into I
$67C    $25E3   CALL     $5E3            ; Call subroutine at 5E3
$67E    $58B7   UNKNOWN  $58B7           ; Unknown 5xxx instruction
$680    $39BE   SE       V9, #BE         ; Skip if V9 == 190
$682    $696A   LD       V9, #6A         ; Load 106 into V9
$684    $BF45   JP       V0, $F45        ; Jump to V0 + F45
$686    $AB32   LD       I, $B32         ; Load B32 into I
$688    $DDA5   DRW      VD, VA, #5      ; Draw 5-byte sprite at VD, VA
$68A    $A93E   LD       I, $93E         ; Load 93E into I
$68C    $0384   SYS      $384            ; System call to 384
$68E    $1B87   JP       $B87            ; Jump to B87
$690    $B44C   JP       V0, $44C        ; Jump to V0 + 44C
$692    $C902   RND      V9, #02         ; V9 = random & 02
$694    $D486   DRW      V4, V8, #6      ; Draw 6-byte sprite at V4, V8
$696    $BD09   JP       V0, $D09        ; Jump to V0 + D09
$698    $EA4C   UNKNOWN  $EA4C           ; Unknown Exxx instruction
$69A    $D558   DRW      V5, V5, #8      ; Draw 8-byte sprite at V5, V5
$69C    $9883   UNKNOWN  $9883           ; Unknown 9xxx instruction
$69E    $F9D9   UNKNOWN  F9D9            ; Unknown Fxxx instruction
$6A0    $2AA3   CALL     $AA3            ; Call subroutine at AA3
$6A2    $1A3B   JP       $A3B            ; Jump to A3B
$6A4    $ACDD   LD       I, $CDD         ; Load CDD into I
$6A6    $A00C   LD       I, $00C         ; Load 00C into I
$6A8    $2063   CALL     $063            ; Call subroutine at 063
$6AA    $6D4C   LD       VD, #4C         ; Load 76 into VD
$6AC    $D3EB   DRW      V3, VE, #B      ; Draw 11-byte sprite at V3, VE
$6AE    $F338   UNKNOWN  F338            ; Unknown Fxxx instruction
$6B0    $8B76   SHR      VB              ; VB >>= 1, VF = LSB
$6B2    $1A4A   JP       $A4A            ; Jump to A4A
$6B4    $6D97   LD       VD, #97         ; Load 151 into VD
$6B6    $6195   LD       V1, #95         ; Load 149 into V1
$6B8    $882F   UNKNOWN  882F            ; Unknown 8xxx instruction
$6BA    $A2D3   LD       I, $2D3         ; Load 2D3 into I
$6BC    $C7A4   RND      V7, #A4         ; V7 = random & A4
$6BE    $8D15   SUB      VD, V1          ; VD -= V1, VF = !borrow
$6C0    $FA2D   UNKNOWN  FA2D            ; Unknown Fxxx instruction
$6C2    $F7DE   UNKNOWN  F7DE            ; Unknown Fxxx instruction
$6C4    $C2F0   RND      V2, #F0         ; V2 = random & F0
$6C6    $BECE   JP       V0, $ECE        ; Jump to V0 + ECE
$6C8    $E398   UNKNOWN  $E398           ; Unknown Exxx instruction
$6CA    $B0C2   JP       V0, $0C2        ; Jump to V0 + 0C2
$6CC    $09D5   SYS      $9D5            ; System call to 9D5
$6CE    $451A   SNE      V5, #1A         ; Skip if V5 != 26
$6D0    $28BF   CALL     $8BF            ; Call subroutine at 8BF
$6D2    $AFF2   LD       I, $FF2         ; Load FF2 into I
$6D4    $36E5   SE       V6, #E5         ; Skip if V6 == 229
$6D6    $2732   CALL     $732            ; Call subroutine at 732
$6D8    $AAE3   LD       I, $AE3         ; Load AE3 into I
$6DA    $12D2   JP       $2D2            ; Jump to 2D2
$6DC    $5D71   UNKNOWN  $5D71           ; Unknown 5xxx instruction
$6DE    $EBE1   UNKNOWN  $EBE1           ; Unknown Exxx instruction
$6E0    $DB36   DRW      VB, V3, #6      ; Draw 6-byte sprite at VB, V3
$6E2    $7597   ADD      V5, #97         ; Add 151 to V5
$6E4    $7EE2   ADD      VE, #E2         ; Add 226 to VE
$6E6    $13C2   JP       $3C2            ; Jump to 3C2
$6E8    $77A8   ADD      V7, #A8         ; Add 168 to V7
$6EA    $BE4E   JP       V0, $E4E        ; Jump to V0 + E4E
$6EC    $7A64   ADD      VA, #64         ; Add 100 to VA
$6EE    $B390   JP       V0, $390        ; Jump to V0 + 390
$6F0    $C43B   RND      V4, #3B         ; V4 = random & 3B
$6F2    $EAA3   UNKNOWN  $EAA3           ; Unknown Exxx instruction
$6F4    $B7A7   JP       V0, $7A7        ; Jump to V0 + 7A7
$6F6    $BD43   JP       V0, $D43        ; Jump to V0 + D43
$6F8    $09A4   SYS      $9A4            ; System call to 9A4
$6FA    $0775   SYS      $775            ; System call to 775
$6FC    $9F76   UNKNOWN  $9F76           ; Unknown 9xxx instruction
$6FE    $9643   UNKNOWN  $9643           ; Unknown 9xxx instruction
$700    $90F3   UNKNOWN  $90F3           ; Unknown 9xxx instruction
$702    $7086   ADD      V0, #86         ; Add 134 to V0
$704    $BD27   JP       V0, $D27        ; Jump to V0 + D27
$706    $58DD   UNKNOWN  $58DD           ; Unknown 5xxx instruction
$708    $A8F8   LD       I, $8F8         ; Load 8F8 into I
$70A    $CFB6   RND      VF, #B6         ; VF = random & B6
$70C    $5D66   UNKNOWN  $5D66           ; Unknown 5xxx instruction
$70E    $3F80   SE       VF, #80         ; Skip if VF == 128
$710    $FEDF   UNKNOWN  FEDF            ; Unknown Fxxx instruction
$712    $7AEA   ADD      VA, #EA         ; Add 234 to VA
$714    $A06E   LD       I, $06E         ; Load 06E into I
$716    $AB03   LD       I, $B03         ; Load B03 into I
$718    $B88B   JP       V0, $88B        ; Jump to V0 + 88B
$71A    $0126   SYS      $126            ; System call to 126
$71C    $CA4E   RND      VA, #4E         ; VA = random & 4E
$71E    $905A   UNKNOWN  $905A           ; Unknown 9xxx instruction
$720    $F1C8   UNKNOWN  F1C8            ; Unknown Fxxx instruction
$722    $70DC   ADD      V0, #DC         ; Add 220 to V0
$724    $696C   LD       V9, #6C         ; Load 108 into V9
$726    $0A6D   SYS      $A6D            ; System call to A6D
$728    $663E   LD       V6, #3E         ; Load 62 into V6
$72A    $255E   CALL     $55E            ; Call subroutine at 55E
$72C    $206F   CALL     $06F            ; Call subroutine at 06F
$72E    $D3C9   DRW      V3, VC, #9      ; Draw 9-byte sprite at V3, VC
$730    $0ACF   SYS      $ACF            ; System call to ACF
$732    $1574   JP       $574            ; Jump to 574
$734    $89CE   SHL      V9              ; V9 <<= 1, VF = MSB
$736    $AAD1   LD       I, $AD1         ; Load AD1 into I
$738    $616A   LD       V1, #6A         ; Load 106 into V1
$73A    $1F63   JP       $F63            ; Jump to F63
$73C    $DC98   DRW      VC, V9, #8      ; Draw 8-byte sprite at VC, V9
$73E    $4C91   SNE      VC, #91         ; Skip if VC != 145
$740    $3688   SE       V6, #88         ; Skip if V6 == 136
$742    $6095   LD       V0, #95         ; Load 149 into V0
$744    $E262   UNKNOWN  $E262           ; Unknown Exxx instruction
$746    $9CB8   UNKNOWN  $9CB8           ; Unknown 9xxx instruction
$748    $6830   LD       V8, #30         ; Load 48 into V8
$74A    $521B   UNKNOWN  $521B           ; Unknown 5xxx instruction
$74C    $F66B   UNKNOWN  F66B            ; Unknown Fxxx instruction
$74E    $419B   SNE      V1, #9B         ; Skip if V1 != 155
$750    $CEE0   RND      VE, #E0         ; VE = random & E0
$752    $50D6   UNKNOWN  $50D6           ; Unknown 5xxx instruction
$754    $FA5C   UNKNOWN  FA5C            ; Unknown Fxxx instruction
$756    $BA18   JP       V0, $A18        ; Jump to V0 + A18
$758    $9E8C   UNKNOWN  $9E8C           ; Unknown 9xxx instruction
$75A    $5AC3   UNKNOWN  $5AC3           ; Unknown 5xxx instruction
$75C    $AD2F   LD       I, $D2F         ; Load D2F into I
$75E    $5254   UNKNOWN  $5254           ; Unknown 5xxx instruction
$760    $8EC8   UNKNOWN  8EC8            ; Unknown 8xxx instruction
$762    $B9B9   JP       V0, $9B9        ; Jump to V0 + 9B9
$764    $9F6B   UNKNOWN  $9F6B           ; Unknown 9xxx instruction
$766    $0BC3   SYS      $BC3            ; System call to BC3
$768    $E762   UNKNOWN  $E762           ; Unknown Exxx instruction
$76A    $4E92   SNE      VE, #92         ; Skip if VE != 146
$76C    $B0E8   JP       V0, $0E8        ; Jump to V0 + 0E8
$76E    $E453   UNKNOWN  $E453           ; Unknown Exxx instruction
$770    $53D4   UNKNOWN  $53D4           ; Unknown 5xxx instruction
$772    $E687   UNKNOWN  $E687           ; Unknown Exxx instruction
$774    $6073   LD       V0, #73         ; Load 115 into V0
$776    $40EA   SNE      V0, #EA         ; Skip if V0 != 234
$778    $ED6D   UNKNOWN  $ED6D           ; Unknown Exxx instruction
$77A    $2E30   CALL     $E30            ; Call subroutine at E30
$77C    $F6DC   UNKNOWN  F6DC            ; Unknown Fxxx instruction
$77E    $FA92   UNKNOWN  FA92            ; Unknown Fxxx instruction
$780    $493D   SNE      V9, #3D         ; Skip if V9 != 61
$782    $9909   UNKNOWN  $9909           ; Unknown 9xxx instruction
$784    $4831   SNE      V8, #31         ; Skip if V8 != 49
$786    $C244   RND      V2, #44         ; V2 = random & 44
$788    $D99D   DRW      V9, V9, #D      ; Draw 13-byte sprite at V9, V9
$78A    $BA8B   JP       V0, $A8B        ; Jump to V0 + A8B
$78C    $312F   SE       V1, #2F         ; Skip if V1 == 47
$78E    $0883   SYS      $883            ; System call to 883
$790    $1DBB   JP       $DBB            ; Jump to DBB
$792    $761E   ADD      V6, #1E         ; Add 30 to V6
$794    $8432   AND      V4, V3          ; V4 &= V3
$796    $90BF   UNKNOWN  $90BF           ; Unknown 9xxx instruction
$798    $EEC7   UNKNOWN  $EEC7           ; Unknown Exxx instruction
$79A    $AC63   LD       I, $C63         ; Load C63 into I
$79C    $ED91   UNKNOWN  $ED91           ; Unknown Exxx instruction
$79E    $6957   LD       V9, #57         ; Load 87 into V9
$7A0    $1BA5   JP       $BA5            ; Jump to BA5
$7A2    $77C4   ADD      V7, #C4         ; Add 196 to V7
$7A4    $EA04   UNKNOWN  $EA04           ; Unknown Exxx instruction
$7A6    $AA3A   LD       I, $A3A         ; Load A3A into I
$7A8    $D724   DRW      V7, V2, #4      ; Draw 4-byte sprite at V7, V2
$7AA    $9B9A   UNKNOWN  $9B9A           ; Unknown 9xxx instruction
$7AC    $0C6B   SYS      $C6B            ; System call to C6B
$7AE    $B78E   JP       V0, $78E        ; Jump to V0 + 78E
$7B0    $D131   DRW      V1, V3, #1      ; Draw 1-byte sprite at V1, V3
$7B2    $56D4   UNKNOWN  $56D4           ; Unknown 5xxx instruction
$7B4    $4303   SNE      V3, #03         ; Skip if V3 != 3
$7B6    $E800   UNKNOWN  $E800           ; Unknown Exxx instruction
$7B8    $48BC   SNE      V8, #BC         ; Skip if V8 != 188
$7BA    $A037   LD       I, $037         ; Load 037 into I
$7BC    $6181   LD       V1, #81         ; Load 129 into V1
$7BE    $226E   CALL     $26E            ; Call subroutine at 26E
$7C0    $73E8   ADD      V3, #E8         ; Add 232 to V3
$7C2    $8791   OR       V7, V9          ; V7 |= V9
$7C4    $B1F1   JP       V0, $1F1        ; Jump to V0 + 1F1
$7C6    $E07E   UNKNOWN  $E07E           ; Unknown Exxx instruction
$7C8    $0AE9   SYS      $AE9            ; System call to AE9
$7CA    $7264   ADD      V2, #64         ; Add 100 to V2
$7CC    $AFB0   LD       I, $FB0         ; Load FB0 into I
$7CE    $F336   UNKNOWN  F336            ; Unknown Fxxx instruction
$7D0    $99DC   UNKNOWN  $99DC           ; Unknown 9xxx instruction
$7D2    $249F   CALL     $49F            ; Call subroutine at 49F
$7D4    $51A1   UNKNOWN  $51A1           ; Unknown 5xxx instruction
$7D6    $7F07   ADD      VF, #07         ; Add 7 to VF
$7D8    $B1DB   JP       V0, $1DB        ; Jump to V0 + 1DB
$7DA    $EE42   UNKNOWN  $EE42           ; Unknown Exxx instruction
$7DC    $6711   LD       V7, #11         ; Load 17 into V7
$7DE    $321B   SE       V2, #1B         ; Skip if V2 == 27
$7E0    $C764   RND      V7, #64         ; V7 = random & 64
$7E2    $4BEF   SNE      VB, #EF         ; Skip if VB != 239
$7E4    $3500   SE       V5, #00         ; Skip if V5 == 0
$7E6    $186A   JP       $86A            ; Jump to 86A
$7E8    $4040   SNE      V0, #40         ; Skip if V0 != 64
$7EA    $BB96   JP       V0, $B96        ; Jump to V0 + B96
$7EC    $A2A4   LD       I, $2A4         ; Load 2A4 into I
$7EE    $FEDC   UNKNOWN  FEDC            ; Unknown Fxxx instruction
$7F0    $D4EC   DRW      V4, VE, #C      ; Draw 12-byte sprite at V4, VE
$7F2    $4ADB   SNE      VA, #DB         ; Skip if VA != 219
$7F4    $932E   UNKNOWN  $932E           ; Unknown 9xxx instruction
$7F6    $EB2F   UNKNOWN  $EB2F           ; Unknown Exxx instruction
$7F8    $2EFA   CALL     $EFA            ; Call subroutine at EFA
$7FA    $993E   UNKNOWN  $993E           ; Unknown 9xxx instruction
$7FC    $C540   RND      V5, #40         ; V5 = random & 40
$7FE    $F2DC   UNKNOWN  F2DC            ; Unknown Fxxx instruction
$800    $7F15   ADD      VF, #15         ; Add 21 to VF
$802    $FC36   UNKNOWN  FC36            ; Unknown Fxxx instruction
$804    $7774   ADD      V7, #74         ; Add 116 to V7
$806    $9BD6   UNKNOWN  $9BD6           ; Unknown 9xxx instruction
$808    $4A6F   SNE      VA, #6F         ; Skip if VA != 111
$80A    $2603   CALL     $603            ; Call subroutine at 603
$80C    $B939   JP       V0, $939        ; Jump to V0 + 939
$80E    $E396   UNKNOWN  $E396           ; Unknown Exxx instruction
$810    $3B02   SE       VB, #02         ; Skip if VB == 2
$812    $3A1A   SE       VA, #1A         ; Skip if VA == 26
$814    $7BD4   ADD      VB, #D4         ; Add 212 to VB
$816    $532F   UNKNOWN  $532F           ; Unknown 5xxx instruction
$818    $D934   DRW      V9, V3, #4      ; Draw 4-byte sprite at V9, V3
$81A    $9D6F   UNKNOWN  $9D6F           ; Unknown 9xxx instruction
$81C    $E53F   UNKNOWN  $E53F           ; Unknown Exxx instruction
$81E    $336B   SE       V3, #6B         ; Skip if V3 == 107
$820    $5064   UNKNOWN  $5064           ; Unknown 5xxx instruction
$822    $16A8   JP       $6A8            ; Jump to 6A8
$824    $5165   UNKNOWN  $5165           ; Unknown 5xxx instruction
$826    $91DC   UNKNOWN  $91DC           ; Unknown 9xxx instruction
$828    $1AA4   JP       $AA4            ; Jump to AA4
$82A    $08AF   SYS      $8AF            ; System call to 8AF
$82C    $AC87   LD       I, $C87         ; Load C87 into I
$82E    $8B35   SUB      VB, V3          ; VB -= V3, VF = !borrow
$830    $CF3D   RND      VF, #3D         ; VF = random & 3D
$832    $3264   SE       V2, #64         ; Skip if V2 == 100
$834    $86BB   UNKNOWN  86BB            ; Unknown 8xxx instruction
$836    $6926   LD       V9, #26         ; Load 38 into V9
$838    $2FB5   CALL     $FB5            ; Call subroutine at FB5
$83A    $1BE5   JP       $BE5            ; Jump to BE5
$83C    $54FB   UNKNOWN  $54FB           ; Unknown 5xxx instruction
$83E    $0809   SYS      $809            ; System call to 809
$840    $C941   RND      V9, #41         ; V9 = random & 41
$842    $E8E2   UNKNOWN  $E8E2           ; Unknown Exxx instruction
$844    $5AC8   UNKNOWN  $5AC8           ; Unknown 5xxx instruction
$846    $5FF8   UNKNOWN  $5FF8           ; Unknown 5xxx instruction
$848    $6BBA   LD       VB, #BA         ; Load 186 into VB
$84A    $F065   LD       V0, [I]         ; Load V0-V0 from I
$84C    $3EAD   SE       VE, #AD         ; Skip if VE == 173
$84E    $0F9C   SYS      $F9C            ; System call to F9C
$850    $6634   LD       V6, #34         ; Load 52 into V6
$852    $AC49   LD       I, $C49         ; Load C49 into I
$854    $A34C   LD       I, $34C         ; Load 34C into I
$856    $5B19   UNKNOWN  $5B19           ; Unknown 5xxx instruction
$858    $61FB   LD       V1, #FB         ; Load 251 into V1
$85A    $28CF   CALL     $8CF            ; Call subroutine at 8CF
$85C    $AD59   LD       I, $D59         ; Load D59 into I
$85E    $B94F   JP       V0, $94F        ; Jump to V0 + 94F
$860    $053C   SYS      $53C            ; System call to 53C
$862    $7A05   ADD      VA, #05         ; Add 5 to VA
$864    $8B5A   UNKNOWN  8B5A            ; Unknown 8xxx instruction
$866    $8E89   UNKNOWN  8E89            ; Unknown 8xxx instruction
$868    $7A38   ADD      VA, #38         ; Add 56 to VA
$86A    $925D   UNKNOWN  $925D           ; Unknown 9xxx instruction
$86C    $3AA9   SE       VA, #A9         ; Skip if VA == 169
$86E    $6AEE   LD       VA, #EE         ; Load 238 into VA
$870    $ED88   UNKNOWN  $ED88           ; Unknown Exxx instruction
$872    $EAC8   UNKNOWN  $EAC8           ; Unknown Exxx instruction
$874    $F612   UNKNOWN  F612            ; Unknown Fxxx instruction
$876    $670F   LD       V7, #0F         ; Load 15 into V7
$878    $6484   LD       V4, #84         ; Load 132 into V4
$87A    $9B02   UNKNOWN  $9B02           ; Unknown 9xxx instruction
$87C    $66C4   LD       V6, #C4         ; Load 196 into V6
$87E    $A8FB   LD       I, $8FB         ; Load 8FB into I
$880    $B252   JP       V0, $252        ; Jump to V0 + 252
$882    $E56C   UNKNOWN  $E56C           ; Unknown Exxx instruction
$884    $9884   UNKNOWN  $9884           ; Unknown 9xxx instruction
$886    $768D   ADD      V6, #8D         ; Add 141 to V6
$888    $DACD   DRW      VA, VC, #D      ; Draw 13-byte sprite at VA, VC
$88A    $39A6   SE       V9, #A6         ; Skip if V9 == 166
$88C    $9E16   UNKNOWN  $9E16           ; Unknown 9xxx instruction
$88E    $9A9F   UNKNOWN  $9A9F           ; Unknown 9xxx instruction
$890    $73A3   ADD      V3, #A3         ; Add 163 to V3
$892    $608D   LD       V0, #8D         ; Load 141 into V0
$894    $DD63   DRW      VD, V6, #3      ; Draw 3-byte sprite at VD, V6
$896    $8422   AND      V4, V2          ; V4 &= V2
$898    $448F   SNE      V4, #8F         ; Skip if V4 != 143
$89A    $BA62   JP       V0, $A62        ; Jump to V0 + A62
$89C    $6FDC   LD       VF, #DC         ; Load 220 into VF
$89E    $6AED   LD       VA, #ED         ; Load 237 into VA
$8A0    $D0FF   DRW      V0, VF, #F      ; Draw 15-byte sprite at V0, VF
$8A2    $9EB6   UNKNOWN  $9EB6           ; Unknown 9xxx instruction
$8A4    $0024   SYS      $024            ; System call to 024
$8A6    $C796   RND      V7, #96         ; V7 = random & 96
$8A8    $B12B   JP       V0, $12B        ; Jump to V0 + 12B
$8AA    $89E9   UNKNOWN  89E9            ; Unknown 8xxx instruction
$8AC    $1CF8   JP       $CF8            ; Jump to CF8
$8AE    $086C   SYS      $86C            ; System call to 86C
$8B0    $AE4D   LD       I, $E4D         ; Load E4D into I
$8B2    $DC87   DRW      VC, V8, #7      ; Draw 7-byte sprite at VC, V8
$8B4    $DB7A   DRW      VB, V7, #A      ; Draw 10-byte sprite at VB, V7
$8B6    $A0EA   LD       I, $0EA         ; Load 0EA into I
$8B8    $66A6   LD       V6, #A6         ; Load 166 into V6
$8BA    $8114   ADD      V1, V1          ; V1 += V1, VF = carry
$8BC    $9425   UNKNOWN  $9425           ; Unknown 9xxx instruction
$8BE    $3DAF   SE       VD, #AF         ; Skip if VD == 175
$8C0    $DDB6   DRW      VD, VB, #6      ; Draw 6-byte sprite at VD, VB
$8C2    $1A92   JP       $A92            ; Jump to A92
$8C4    $727C   ADD      V2, #7C         ; Add 124 to V2
$8C6    $C723   RND      V7, #23         ; V7 = random & 23
$8C8    $4A0E   SNE      VA, #0E         ; Skip if VA != 14
$8CA    $0C5A   SYS      $C5A            ; System call to C5A
$8CC    $5BDB   UNKNOWN  $5BDB           ; Unknown 5xxx instruction
$8CE    $9CB6   UNKNOWN  $9CB6           ; Unknown 9xxx instruction
$8D0    $6BB1   LD       VB, #B1         ; Load 177 into VB
$8D2    $BF55   JP       V0, $F55        ; Jump to V0 + F55
$8D4    $3CE7   SE       VC, #E7         ; Skip if VC == 231
$8D6    $9AED   UNKNOWN  $9AED           ; Unknown 9xxx instruction
$8D8    $156D   JP       $56D            ; Jump to 56D
$8DA    $F0EB   UNKNOWN  F0EB            ; Unknown Fxxx instruction
$8DC    $A04E   LD       I, $04E         ; Load 04E into I
$8DE    $D752   DRW      V7, V5, #2      ; Draw 2-byte sprite at V7, V5
$8E0    $CC54   RND      VC, #54         ; VC = random & 54
$8E2    $32F9   SE       V2, #F9         ; Skip if V2 == 249
$8E4    $5227   UNKNOWN  $5227           ; Unknown 5xxx instruction
$8E6    $A32B   LD       I, $32B         ; Load 32B into I
$8E8    $0B3B   SYS      $B3B            ; System call to B3B
$8EA    $F865   LD       V8, [I]         ; Load V0-V8 from I
$8EC    $F1E5   UNKNOWN  F1E5            ; Unknown Fxxx instruction
$8EE    $C1A9   RND      V1, #A9         ; V1 = random & A9
$8F0    $AAFD   LD       I, $AFD         ; Load AFD into I
$8F2    $6915   LD       V9, #15         ; Load 21 into V9
$8F4    $7953   ADD      V9, #53         ; Add 83 to V9
$8F6    $EEEA   UNKNOWN  $EEEA           ; Unknown Exxx instruction
$8F8    $370B   SE       V7, #0B         ; Skip if V7 == 11
$8FA    $F953   UNKNOWN  F953            ; Unknown Fxxx instruction
$8FC    $7C25   ADD      VC, #25         ; Add 37 to VC
$8FE    $A50D   LD       I, $50D         ; Load 50D into I
$900    $D6CB   DRW      V6, VC, #B      ; Draw 11-byte sprite at V6, VC
$902    $1CA5   JP       $CA5            ; Jump to CA5
$904    $D4D8   DRW      V4, VD, #8      ; Draw 8-byte sprite at V4, VD
$906    $84AC   UNKNOWN  84AC            ; Unknown 8xxx instruction
$908    $1F3F   JP       $F3F            ; Jump to F3F
$90A    $7488   ADD      V4, #88         ; Add 136 to V4
$90C    $04B4   SYS      $4B4            ; System call to 4B4
$90E    $1EDD   JP       $EDD            ; Jump to EDD
$910    $0D7D   SYS      $D7D            ; System call to D7D
$912    $8996   SHR      V9              ; V9 >>= 1, VF = LSB
$914    $D768   DRW      V7, V6, #8      ; Draw 8-byte sprite at V7, V6
$916    $3595   SE       V5, #95         ; Skip if V5 == 149
$918    $0038   SYS      $038            ; System call to 038
$91A    $9F60   SNE      VF, V6          ; Skip if VF != V6
$91C    $54B2   UNKNOWN  $54B2           ; Unknown 5xxx instruction
$91E    $7CE6   ADD      VC, #E6         ; Add 230 to VC
$920    $1A80   JP       $A80            ; Jump to A80
$922    $E8F9   UNKNOWN  $E8F9           ; Unknown Exxx instruction
$924    $1EE1   JP       $EE1            ; Jump to EE1
$926    $69B5   LD       V9, #B5         ; Load 181 into V9
$928    $74D1   ADD      V4, #D1         ; Add 209 to V4
$92A    $10EC   JP       $0EC            ; Jump to 0EC
$92C    $9A29   UNKNOWN  $9A29           ; Unknown 9xxx instruction
$92E    $0A68   SYS      $A68            ; System call to A68
$930    $38D0   SE       V8, #D0         ; Skip if V8 == 208
$932    $3F78   SE       VF, #78         ; Skip if VF == 120
$934    $2D39   CALL     $D39            ; Call subroutine at D39
$936    $7074   ADD      V0, #74         ; Add 116 to V0
$938    $1DD8   JP       $DD8            ; Jump to DD8
$93A    $10BD   JP       $0BD            ; Jump to 0BD
$93C    $2AB4   CALL     $AB4            ; Call subroutine at AB4
$93E    $C0E6   RND      V0, #E6         ; V0 = random & E6
$940    $76D9   ADD      V6, #D9         ; Add 217 to V6
$942    $061C   SYS      $61C            ; System call to 61C
$944    $2C27   CALL     $C27            ; Call subroutine at C27
$946    $80E6   SHR      V0              ; V0 >>= 1, VF = LSB
$948    $8469   UNKNOWN  8469            ; Unknown 8xxx instruction
$94A    $322B   SE       V2, #2B         ; Skip if V2 == 43
$94C    $678F   LD       V7, #8F         ; Load 143 into V7
$94E    $E8C4   UNKNOWN  $E8C4           ; Unknown Exxx instruction
$950    $6A93   LD       VA, #93         ; Load 147 into VA
$952    $53FB   UNKNOWN  $53FB           ; Unknown 5xxx instruction
$954    $907A   UNKNOWN  $907A           ; Unknown 9xxx instruction
$956    $69E0   LD       V9, #E0         ; Load 224 into V9
$958    $A307   LD       I, $307         ; Load 307 into I
$95A    $8752   AND      V7, V5          ; V7 &= V5
$95C    $816C   UNKNOWN  816C            ; Unknown 8xxx instruction
$95E    $33F4   SE       V3, #F4         ; Skip if V3 == 244
$960    $4440   SNE      V4, #40         ; Skip if V4 != 64
$962    $EB09   UNKNOWN  $EB09           ; Unknown Exxx instruction
$964    $F555   LD       [I], V5         ; Store V0-V5 at I
$966    $4522   SNE      V5, #22         ; Skip if V5 != 34
$968    $7713   ADD      V7, #13         ; Add 19 to V7
$96A    $FA9B   UNKNOWN  FA9B            ; Unknown Fxxx instruction
$96C    $69D6   LD       V9, #D6         ; Load 214 into V9
$96E    $2C19   CALL     $C19            ; Call subroutine at C19
$970    $8C5A   UNKNOWN  8C5A            ; Unknown 8xxx instruction
$972    $F6A2   UNKNOWN  F6A2            ; Unknown Fxxx instruction
$974    $19BF   JP       $9BF            ; Jump to 9BF
$976    $D1E1   DRW      V1, VE, #1      ; Draw 1-byte sprite at V1, VE
$978    $B05D   JP       V0, $05D        ; Jump to V0 + 05D
$97A    $D0FB   DRW      V0, VF, #B      ; Draw 11-byte sprite at V0, VF
$97C    $D39F   DRW      V3, V9, #F      ; Draw 15-byte sprite at V3, V9
$97E    $438E   SNE      V3, #8E         ; Skip if V3 != 142
$980    $51D1   UNKNOWN  $51D1           ; Unknown 5xxx instruction
$982    $3F39   SE       VF, #39         ; Skip if VF == 57
$984    $9108   UNKNOWN  $9108           ; Unknown 9xxx instruction
$986    $BDA3   JP       V0, $DA3        ; Jump to V0 + DA3
$988    $24BA   CALL     $4BA            ; Call subroutine at 4BA
$98A    $5A28   UNKNOWN  $5A28           ; Unknown 5xxx instruction
$98C    $6A18   LD       VA, #18         ; Load 24 into VA
$98E    $7600   ADD      V6, #00         ; Add 0 to V6
$990    $E0D1   UNKNOWN  $E0D1           ; Unknown Exxx instruction
$992    $4E7E   SNE      VE, #7E         ; Skip if VE != 126
$994    $081C   SYS      $81C            ; System call to 81C
$996    $C129   RND      V1, #29         ; V1 = random & 29
$998    $0138   SYS      $138            ; System call to 138
$99A    $9F57   UNKNOWN  $9F57           ; Unknown 9xxx instruction
$99C    $5791   UNKNOWN  $5791           ; Unknown 5xxx instruction
$99E    $9708   UNKNOWN  $9708           ; Unknown 9xxx instruction
$9A0    $6E3D   LD       VE, #3D         ; Load 61 into VE
$9A2    $D148   DRW      V1, V4, #8      ; Draw 8-byte sprite at V1, V4
$9A4    $38E5   SE       V8, #E5         ; Skip if V8 == 229
$9A6    $05EC   SYS      $5EC            ; System call to 5EC
$9A8    $D885   DRW      V8, V8, #5      ; Draw 5-byte sprite at V8, V8
$9AA    $4ABE   SNE      VA, #BE         ; Skip if VA != 190
$9AC    $31BD   SE       V1, #BD         ; Skip if V1 == 189
$9AE    $611A   LD       V1, #1A         ; Load 26 into V1
$9B0    $ABD4   LD       I, $BD4         ; Load BD4 into I
$9B2    $6A45   LD       VA, #45         ; Load 69 into VA
$9B4    $B025   JP       V0, $025        ; Jump to V0 + 025
$9B6    $F4AC   UNKNOWN  F4AC            ; Unknown Fxxx instruction
$9B8    $50F2   UNKNOWN  $50F2           ; Unknown 5xxx instruction
$9BA    $0D8F   SYS      $D8F            ; System call to D8F
$9BC    $4001   SNE      V0, #01         ; Skip if V0 != 1
$9BE    $AB44   LD       I, $B44         ; Load B44 into I
$9C0    $F1AE   UNKNOWN  F1AE            ; Unknown Fxxx instruction
$9C2    $DEC1   DRW      VE, VC, #1      ; Draw 1-byte sprite at VE, VC
$9C4    $F7A9   UNKNOWN  F7A9            ; Unknown Fxxx instruction
$9C6    $BE05   JP       V0, $E05        ; Jump to V0 + E05
$9C8    $38B6   SE       V8, #B6         ; Skip if V8 == 182
$9CA    $7D28   ADD      VD, #28         ; Add 40 to VD
$9CC    $49CF   SNE      V9, #CF         ; Skip if V9 != 207
$9CE    $A5D5   LD       I, $5D5         ; Load 5D5 into I
$9D0    $EB2A   UNKNOWN  $EB2A           ; Unknown Exxx instruction
$9D2    $61B2   LD       V1, #B2         ; Load 178 into V1
$9D4    $1B72   JP       $B72            ; Jump to B72
$9D6    $3DC1   SE       VD, #C1         ; Skip if VD == 193
$9D8    $6D1F   LD       VD, #1F         ; Load 31 into VD
$9DA    $7DB9   ADD      VD, #B9         ; Add 185 to VD
$9DC    $08A5   SYS      $8A5            ; System call to 8A5
$9DE    $D2DA   DRW      V2, VD, #A      ; Draw 10-byte sprite at V2, VD
$9E0    $6458   LD       V4, #58         ; Load 88 into V4
$9E2    $A79F   LD       I, $79F         ; Load 79F into I
$9E4    $57A8   UNKNOWN  $57A8           ; Unknown 5xxx instruction
$9E6    $73CC   ADD      V3, #CC         ; Add 204 to V3
$9E8    $FE86   UNKNOWN  FE86            ; Unknown Fxxx instruction
$9EA    $A202   LD       I, $202         ; Load 202 into I
$9EC    $0686   SYS      $686            ; System call to 686
$9EE    $3C19   SE       VC, #19         ; Skip if VC == 25
$9F0    $B187   JP       V0, $187        ; Jump to V0 + 187
$9F2    $6A48   LD       VA, #48         ; Load 72 into VA
$9F4    $4BAB   SNE      VB, #AB         ; Skip if VB != 171
$9F6    $542B   UNKNOWN  $542B           ; Unknown 5xxx instruction
$9F8    $DB0B   DRW      VB, V0, #B      ; Draw 11-byte sprite at VB, V0
$9FA    $F175   UNKNOWN  F175            ; Unknown Fxxx instruction
$9FC    $F623   UNKNOWN  F623            ; Unknown Fxxx instruction
$9FE    $EA69   UNKNOWN  $EA69           ; Unknown Exxx instruction
$A00    $6181   LD       V1, #81         ; Load 129 into V1
$A02    $2055   CALL     $055            ; Call subroutine at 055
$A04    $F69F   UNKNOWN  F69F            ; Unknown Fxxx instruction
$A06    $18DE   JP       $8DE            ; Jump to 8DE
$A08    $1C5D   JP       $C5D            ; Jump to C5D
$A0A    $0C97   SYS      $C97            ; System call to C97
$A0C    $1481   JP       $481            ; Jump to 481
$A0E    $7A7B   ADD      VA, #7B         ; Add 123 to VA
$A10    $07CD   SYS      $7CD            ; System call to 7CD
$A12    $B7A0   JP       V0, $7A0        ; Jump to V0 + 7A0
$A14    $18AB   JP       $8AB            ; Jump to 8AB
$A16    $A8DD   LD       I, $8DD         ; Load 8DD into I
$A18    $9581   UNKNOWN  $9581           ; Unknown 9xxx instruction
$A1A    $619F   LD       V1, #9F         ; Load 159 into V1
$A1C    $6E22   LD       VE, #22         ; Load 34 into VE
$A1E    $9E3D   UNKNOWN  $9E3D           ; Unknown 9xxx instruction
$A20    $9962   UNKNOWN  $9962           ; Unknown 9xxx instruction
$A22    $25C0   CALL     $5C0            ; Call subroutine at 5C0
$A24    $7406   ADD      V4, #06         ; Add 6 to V4
$A26    $1098   JP       $098            ; Jump to 098
$A28    $2874   CALL     $874            ; Call subroutine at 874
$A2A    $2BF6   CALL     $BF6            ; Call subroutine at BF6
$A2C    $034E   SYS      $34E            ; System call to 34E
$A2E    $4F54   SNE      VF, #54         ; Skip if VF != 84
$A30    $B77C   JP       V0, $77C        ; Jump to V0 + 77C
$A32    $B863   JP       V0, $863        ; Jump to V0 + 863
$A34    $F28E   UNKNOWN  F28E            ; Unknown Fxxx instruction
$A36    $2523   CALL     $523            ; Call subroutine at 523
$A38    $69F0   LD       V9, #F0         ; Load 240 into V9
$A3A    $015B   SYS      $15B            ; System call to 15B
$A3C    $4D7B   SNE      VD, #7B         ; Skip if VD != 123
$A3E    $8152   AND      V1, V5          ; V1 &= V5
$A40    $65CD   LD       V5, #CD         ; Load 205 into V5
$A42    $35EF   SE       V5, #EF         ; Skip if V5 == 239
$A44    $3180   SE       V1, #80         ; Skip if V1 == 128
$A46    $43E9   SNE      V3, #E9         ; Skip if V3 != 233
$A48    $F7B7   UNKNOWN  F7B7            ; Unknown Fxxx instruction
$A4A    $F195   UNKNOWN  F195            ; Unknown Fxxx instruction
$A4C    $F3DC   UNKNOWN  F3DC            ; Unknown Fxxx instruction
$A4E    $D959   DRW      V9, V5, #9      ; Draw 9-byte sprite at V9, V5
$A50    $7A95   ADD      VA, #95         ; Add 149 to VA
$A52    $91C5   UNKNOWN  $91C5           ; Unknown 9xxx instruction
$A54    $7358   ADD      V3, #58         ; Add 88 to V3
$A56    $B1B2   JP       V0, $1B2        ; Jump to V0 + 1B2
$A58    $A64A   LD       I, $64A         ; Load 64A into I
$A5A    $4487   SNE      V4, #87         ; Skip if V4 != 135
$A5C    $5426   UNKNOWN  $5426           ; Unknown 5xxx instruction
$A5E    $3FC5   SE       VF, #C5         ; Skip if VF == 197
$A60    $0D90   SYS      $D90            ; System call to D90
$A62    $7187   ADD      V1, #87         ; Add 135 to V1
$A64    $E1DC   UNKNOWN  $E1DC           ; Unknown Exxx instruction
$A66    $E918   UNKNOWN  $E918           ; Unknown Exxx instruction
$A68    $53D9   UNKNOWN  $53D9           ; Unknown 5xxx instruction
$A6A    $50CC   UNKNOWN  $50CC           ; Unknown 5xxx instruction
$A6C    $9113   UNKNOWN  $9113           ; Unknown 9xxx instruction
$A6E    $E12D   UNKNOWN  $E12D           ; Unknown Exxx instruction
$A70    $30AD   SE       V0, #AD         ; Skip if V0 == 173
$A72    $C3F4   RND      V3, #F4         ; V3 = random & F4
$A74    $28B0   CALL     $8B0            ; Call subroutine at 8B0
$A76    $0B60   SYS      $B60            ; System call to B60
$A78    $332D   SE       V3, #2D         ; Skip if V3 == 45
$A7A    $C78C   RND      V7, #8C         ; V7 = random & 8C
$A7C    $90CE   UNKNOWN  $90CE           ; Unknown 9xxx instruction
$A7E    $DDE3   DRW      VD, VE, #3      ; Draw 3-byte sprite at VD, VE
$A80    $8416   SHR      V4              ; V4 >>= 1, VF = LSB
$A82    $98DC   UNKNOWN  $98DC           ; Unknown 9xxx instruction
$A84    $D935   DRW      V9, V3, #5      ; Draw 5-byte sprite at V9, V3
$A86    $97C1   UNKNOWN  $97C1           ; Unknown 9xxx instruction
$A88    $F979   UNKNOWN  F979            ; Unknown Fxxx instruction
$A8A    $72F5   ADD      V2, #F5         ; Add 245 to V2
$A8C    $E653   UNKNOWN  $E653           ; Unknown Exxx instruction
$A8E    $859A   UNKNOWN  859A            ; Unknown 8xxx instruction
$A90    $E01E   UNKNOWN  $E01E           ; Unknown Exxx instruction
$A92    $8838   UNKNOWN  8838            ; Unknown 8xxx instruction
$A94    $2DB0   CALL     $DB0            ; Call subroutine at DB0
$A96    $1DEC   JP       $DEC            ; Jump to DEC
$A98    $86B8   UNKNOWN  86B8            ; Unknown 8xxx instruction
$A9A    $B427   JP       V0, $427        ; Jump to V0 + 427
$A9C    $D464   DRW      V4, V6, #4      ; Draw 4-byte sprite at V4, V6
$A9E    $D926   DRW      V9, V2, #6      ; Draw 6-byte sprite at V9, V2
$AA0    $1916   JP       $916            ; Jump to 916
$AA2    $4187   SNE      V1, #87         ; Skip if V1 != 135
$AA4    $4CB3   SNE      VC, #B3         ; Skip if VC != 179
$AA6    $79E5   ADD      V9, #E5         ; Add 229 to V9
$AA8    $DF27   DRW      VF, V2, #7      ; Draw 7-byte sprite at VF, V2
$AAA    $F7C0   UNKNOWN  F7C0            ; Unknown Fxxx instruction
$AAC    $2953   CALL     $953            ; Call subroutine at 953
$AAE    $3555   SE       V5, #55         ; Skip if V5 == 85
$AB0    $2C1C   CALL     $C1C            ; Call subroutine at C1C
$AB2    $DF9B   DRW      VF, V9, #B      ; Draw 11-byte sprite at VF, V9
$AB4    $A93D   LD       I, $93D         ; Load 93D into I
$AB6    $236C   CALL     $36C            ; Call subroutine at 36C
$AB8    $A0CA   LD       I, $0CA         ; Load 0CA into I
$ABA    $EF7C   UNKNOWN  $EF7C           ; Unknown Exxx instruction
$ABC    $E941   UNKNOWN  $E941           ; Unknown Exxx instruction
$ABE    $20A4   CALL     $0A4            ; Call subroutine at 0A4
$AC0    $E7CD   UNKNOWN  $E7CD           ; Unknown Exxx instruction
$AC2    $7B46   ADD      VB, #46         ; Add 70 to VB
$AC4    $B89B   JP       V0, $89B        ; Jump to V0 + 89B
$AC6    $AD26   LD       I, $D26         ; Load D26 into I
$AC8    $43DB   SNE      V3, #DB         ; Skip if V3 != 219
$ACA    $7B8A   ADD      VB, #8A         ; Add 138 to VB
$ACC    $4485   SNE      V4, #85         ; Skip if V4 != 133
$ACE    $82C3   XOR      V2, VC          ; V2 ^= VC
$AD0    $BAE0   JP       V0, $AE0        ; Jump to V0 + AE0
$AD2    $5FE0   SE       VF, VE          ; Skip if VF == VE
$AD4    $68A6   LD       V8, #A6         ; Load 166 into V8
$AD6    $1B68   JP       $B68            ; Jump to B68
$AD8    $A113   LD       I, $113         ; Load 113 into I
$ADA    $9A4A   UNKNOWN  $9A4A           ; Unknown 9xxx instruction
$ADC    $D94D   DRW      V9, V4, #D      ; Draw 13-byte sprite at V9, V4
$ADE    $5C9A   UNKNOWN  $5C9A           ; Unknown 5xxx instruction
$AE0    $46C4   SNE      V6, #C4         ; Skip if V6 != 196
$AE2    $1341   JP       $341            ; Jump to 341
$AE4    $2D68   CALL     $D68            ; Call subroutine at D68
$AE6    $5FF8   UNKNOWN  $5FF8           ; Unknown 5xxx instruction
$AE8    $6F80   LD       VF, #80         ; Load 128 into VF
$AEA    $1DAD   JP       $DAD            ; Jump to DAD
$AEC    $7C4C   ADD      VC, #4C         ; Add 76 to VC
$AEE    $5539   UNKNOWN  $5539           ; Unknown 5xxx instruction
$AF0    $8F77   SUBN     VF, V7          ; VF = V7 - VF, VF = !borrow
$AF2    $A611   LD       I, $611         ; Load 611 into I
$AF4    $CE9B   RND      VE, #9B         ; VE = random & 9B
$AF6    $BA55   JP       V0, $A55        ; Jump to V0 + A55
$AF8    $0CEB   SYS      $CEB            ; System call to CEB
$AFA    $B94D   JP       V0, $94D        ; Jump to V0 + 94D
$AFC    $70A2   ADD      V0, #A2         ; Add 162 to V0
$AFE    $AD24   LD       I, $D24         ; Load D24 into I
$B00    $A66D   LD       I, $66D         ; Load 66D into I
$B02    $FB83   UNKNOWN  FB83            ; Unknown Fxxx instruction
$B04    $6321   LD       V3, #21         ; Load 33 into V3
$B06    $63BE   LD       V3, #BE         ; Load 190 into V3
$B08    $EDA7   UNKNOWN  $EDA7           ; Unknown Exxx instruction
$B0A    $D82E   DRW      V8, V2, #E      ; Draw 14-byte sprite at V8, V2
$B0C    $C252   RND      V2, #52         ; V2 = random & 52
$B0E    $F47F   UNKNOWN  F47F            ; Unknown Fxxx instruction
$B10    $8D78   UNKNOWN  8D78            ; Unknown 8xxx instruction
$B12    $7602   ADD      V6, #02         ; Add 2 to V6
$B14    $7DF2   ADD      VD, #F2         ; Add 242 to VD
$B16    $427C   SNE      V2, #7C         ; Skip if V2 != 124
$B18    $C83D   RND      V8, #3D         ; V8 = random & 3D
$B1A    $C14E   RND      V1, #4E         ; V1 = random & 4E
$B1C    $1D94   JP       $D94            ; Jump to D94
$B1E    $A074   LD       I, $074         ; Load 074 into I
$B20    $B160   JP       V0, $160        ; Jump to V0 + 160
$B22    $6BBD   LD       VB, #BD         ; Load 189 into VB
$B24    $C048   RND      V0, #48         ; V0 = random & 48
$B26    $91AD   UNKNOWN  $91AD           ; Unknown 9xxx instruction
$B28    $9B76   UNKNOWN  $9B76           ; Unknown 9xxx instruction
$B2A    $0472   SYS      $472            ; System call to 472
$B2C    $AF20   LD       I, $F20         ; Load F20 into I
$B2E    $E7D0   UNKNOWN  $E7D0           ; Unknown Exxx instruction
$B30    $F879   UNKNOWN  F879            ; Unknown Fxxx instruction
$B32    $EA4E   UNKNOWN  $EA4E           ; Unknown Exxx instruction
$B34    $E6CC   UNKNOWN  $E6CC           ; Unknown Exxx instruction
$B36    $DBF1   DRW      VB, VF, #1      ; Draw 1-byte sprite at VB, VF
$B38    $43BD   SNE      V3, #BD         ; Skip if V3 != 189
$B3A    $B577   JP       V0, $577        ; Jump to V0 + 577
$B3C    $9007   UNKNOWN  $9007           ; Unknown 9xxx instruction
$B3E    $FF19   UNKNOWN  FF19            ; Unknown Fxxx instruction
$B40    $C029   RND      V0, #29         ; V0 = random & 29
$B42    $FE07   LD       VE, DT          ; VE = delay timer
$B44    $453E   SNE      V5, #3E         ; Skip if V5 != 62
$B46    $B193   JP       V0, $193        ; Jump to V0 + 193
$B48    $ADF0   LD       I, $DF0         ; Load DF0 into I
$B4A    $9DDC   UNKNOWN  $9DDC           ; Unknown 9xxx instruction
$B4C    $3F12   SE       VF, #12         ; Skip if VF == 18
$B4E    $A154   LD       I, $154         ; Load 154 into I
$B50    $5B0B   UNKNOWN  $5B0B           ; Unknown 5xxx instruction
$B52    $96E2   UNKNOWN  $96E2           ; Unknown 9xxx instruction
$B54    $ADAC   LD       I, $DAC         ; Load DAC into I
$B56    $4EE5   SNE      VE, #E5         ; Skip if VE != 229
$B58    $FD04   UNKNOWN  FD04            ; Unknown Fxxx instruction
$B5A    $54C6   UNKNOWN  $54C6           ; Unknown 5xxx instruction
$B5C    $96CA   UNKNOWN  $96CA           ; Unknown 9xxx instruction
$B5E    $3D52   SE       VD, #52         ; Skip if VD == 82
$B60    $6779   LD       V7, #79         ; Load 121 into V7
$B62    $B13A   JP       V0, $13A        ; Jump to V0 + 13A
$B64    $9E73   UNKNOWN  $9E73           ; Unknown 9xxx instruction
$B66    $826C   UNKNOWN  826C            ; Unknown 8xxx instruction
$B68    $6177   LD       V1, #77         ; Load 119 into V1
$B6A    $7445   ADD      V4, #45         ; Add 69 to V4
$B6C    $A285   LD       I, $285         ; Load 285 into I
$B6E    $6138   LD       V1, #38         ; Load 56 into V1
$B70    $3389   SE       V3, #89         ; Skip if V3 == 137
$B72    $F9A6   UNKNOWN  F9A6            ; Unknown Fxxx instruction
$B74    $1CB0   JP       $CB0            ; Jump to CB0
$B76    $C93E   RND      V9, #3E         ; V9 = random & 3E
$B78    $85E8   UNKNOWN  85E8            ; Unknown 8xxx instruction
$B7A    $B114   JP       V0, $114        ; Jump to V0 + 114
$B7C    $47C3   SNE      V7, #C3         ; Skip if V7 != 195
$B7E    $DDB2   DRW      VD, VB, #2      ; Draw 2-byte sprite at VD, VB
$B80    $0ECC   SYS      $ECC            ; System call to ECC
$B82    $9297   UNKNOWN  $9297           ; Unknown 9xxx instruction
$B84    $EC81   UNKNOWN  $EC81           ; Unknown Exxx instruction
$B86    $2070   CALL     $070            ; Call subroutine at 070
$B88    $0DD4   SYS      $DD4            ; System call to DD4
$B8A    $4FDB   SNE      VF, #DB         ; Skip if VF != 219
$B8C    $6816   LD       V8, #16         ; Load 22 into V8
$B8E    $5C1F   UNKNOWN  $5C1F           ; Unknown 5xxx instruction
$B90    $EF65   UNKNOWN  $EF65           ; Unknown Exxx instruction
$B92    $294B   CALL     $94B            ; Call subroutine at 94B
$B94    $C1F5   RND      V1, #F5         ; V1 = random & F5
$B96    $2D97   CALL     $D97            ; Call subroutine at D97
$B98    $40FD   SNE      V0, #FD         ; Skip if V0 != 253
$B9A    $D085   DRW      V0, V8, #5      ; Draw 5-byte sprite at V0, V8
$B9C    $FEAD   UNKNOWN  FEAD            ; Unknown Fxxx instruction
$B9E    $69E1   LD       V9, #E1         ; Load 225 into V9
$BA0    $1367   JP       $367            ; Jump to 367
$BA2    $1439   JP       $439            ; Jump to 439
$BA4    $2A7F   CALL     $A7F            ; Call subroutine at A7F
$BA6    $FECB   UNKNOWN  FECB            ; Unknown Fxxx instruction
$BA8    $F5A8   UNKNOWN  F5A8            ; Unknown Fxxx instruction
$BAA    $F430   UNKNOWN  F430            ; Unknown Fxxx instruction
$BAC    $F46E   UNKNOWN  F46E            ; Unknown Fxxx instruction
$BAE    $7857   ADD      V8, #57         ; Add 87 to V8
$BB0    $2880   CALL     $880            ; Call subroutine at 880
$BB2    $25ED   CALL     $5ED            ; Call subroutine at 5ED
$BB4    $8E1B   UNKNOWN  8E1B            ; Unknown 8xxx instruction
$BB6    $BD1D   JP       V0, $D1D        ; Jump to V0 + D1D
$BB8    $DD41   DRW      VD, V4, #1      ; Draw 1-byte sprite at VD, V4
$BBA    $6BE3   LD       VB, #E3         ; Load 227 into VB
$BBC    $17C9   JP       $7C9            ; Jump to 7C9
$BBE    $FB82   UNKNOWN  FB82            ; Unknown Fxxx instruction
$BC0    $1919   JP       $919            ; Jump to 919
$BC2    $BDD3   JP       V0, $DD3        ; Jump to V0 + DD3
$BC4    $6B92   LD       VB, #92         ; Load 146 into VB
$BC6    $390F   SE       V9, #0F         ; Skip if V9 == 15
$BC8    $7002   ADD      V0, #02         ; Add 2 to V0
$BCA    $1778   JP       $778            ; Jump to 778
$BCC    $D9A8   DRW      V9, VA, #8      ; Draw 8-byte sprite at V9, VA
$BCE    $AE6C   LD       I, $E6C         ; Load E6C into I
$BD0    $D6A0   DRW      V6, VA, #0      ; Draw 0-byte sprite at V6, VA
$BD2    $6CAD   LD       VC, #AD         ; Load 173 into VC
$BD4    $B878   JP       V0, $878        ; Jump to V0 + 878
$BD6    $9C84   UNKNOWN  $9C84           ; Unknown 9xxx instruction
$BD8    $A660   LD       I, $660         ; Load 660 into I
$BDA    $1730   JP       $730            ; Jump to 730
$BDC    $7D9D   ADD      VD, #9D         ; Add 157 to VD
$BDE    $2759   CALL     $759            ; Call subroutine at 759
$BE0    $B079   JP       V0, $079        ; Jump to V0 + 079
$BE2    $7D8F   ADD      VD, #8F         ; Add 143 to VD
$BE4    $F198   UNKNOWN  F198            ; Unknown Fxxx instruction
$BE6    $7118   ADD      V1, #18         ; Add 24 to V1
$BE8    $8424   ADD      V4, V2          ; V4 += V2, VF = carry
$BEA    $D5FF   DRW      V5, VF, #F      ; Draw 15-byte sprite at V5, VF
$BEC    $D1AE   DRW      V1, VA, #E      ; Draw 14-byte sprite at V1, VA
$BEE    $9D51   UNKNOWN  $9D51           ; Unknown 9xxx instruction
$BF0    $6E24   LD       VE, #24         ; Load 36 into VE
$BF2    $9FB3   UNKNOWN  $9FB3           ; Unknown 9xxx instruction
$BF4    $28B4   CALL     $8B4            ; Call subroutine at 8B4
$BF6    $E5CD   UNKNOWN  $E5CD           ; Unknown Exxx instruction
$BF8    $8DB9   UNKNOWN  8DB9            ; Unknown 8xxx instruction
$BFA    $4B02   SNE      VB, #02         ; Skip if VB != 2
$BFC    $0EFB   SYS      $EFB            ; System call to EFB
$BFE    $62F9   LD       V2, #F9         ; Load 249 into V2
$C00    $814E   SHL      V1              ; V1 <<= 1, VF = MSB
$C02    $6CC0   LD       VC, #C0         ; Load 192 into VC
$C04    $DA94   DRW      VA, V9, #4      ; Draw 4-byte sprite at VA, V9
$C06    $F659   UNKNOWN  F659            ; Unknown Fxxx instruction
$C08    $2453   CALL     $453            ; Call subroutine at 453
$C0A    $2C41   CALL     $C41            ; Call subroutine at C41
$C0C    $F621   UNKNOWN  F621            ; Unknown Fxxx instruction
$C0E    $DA51   DRW      VA, V5, #1      ; Draw 1-byte sprite at VA, V5
$C10    $95EB   UNKNOWN  $95EB           ; Unknown 9xxx instruction
$C12    $F0FF   UNKNOWN  F0FF            ; Unknown Fxxx instruction
$C14    $92FD   UNKNOWN  $92FD           ; Unknown 9xxx instruction
$C16    $C111   RND      V1, #11         ; V1 = random & 11
$C18    $5FC7   UNKNOWN  $5FC7           ; Unknown 5xxx instruction
$C1A    $5D87   UNKNOWN  $5D87           ; Unknown 5xxx instruction
$C1C    $A348   LD       I, $348         ; Load 348 into I
$C1E    $0F7D   SYS      $F7D            ; System call to F7D
$C20    $D347   DRW      V3, V4, #7      ; Draw 7-byte sprite at V3, V4
$C22    $CF56   RND      VF, #56         ; VF = random & 56
$C24    $BD51   JP       V0, $D51        ; Jump to V0 + D51
$C26    $25BE   CALL     $5BE            ; Call subroutine at 5BE
$C28    $EEC0   UNKNOWN  $EEC0           ; Unknown Exxx instruction
$C2A    $125C   JP       $25C            ; Jump to 25C
$C2C    $9E73   UNKNOWN  $9E73           ; Unknown 9xxx instruction
$C2E    $3D01   SE       VD, #01         ; Skip if VD == 1
$C30    $0EAF   SYS      $EAF            ; System call to EAF
$C32    $7E61   ADD      VE, #61         ; Add 97 to VE
$C34    $CD24   RND      VD, #24         ; VD = random & 24
$C36    $D92A   DRW      V9, V2, #A      ; Draw 10-byte sprite at V9, V2
$C38    $54BF   UNKNOWN  $54BF           ; Unknown 5xxx instruction
$C3A    $451D   SNE      V5, #1D         ; Skip if V5 != 29
$C3C    $D08B   DRW      V0, V8, #B      ; Draw 11-byte sprite at V0, V8
$C3E    $FF20   UNKNOWN  FF20            ; Unknown Fxxx instruction
$C40    $E0CC   UNKNOWN  $E0CC           ; Unknown Exxx instruction
$C42    $E5A7   UNKNOWN  $E5A7           ; Unknown Exxx instruction
$C44    $3B35   SE       VB, #35         ; Skip if VB == 53
$C46    $18D3   JP       $8D3            ; Jump to 8D3
$C48    $976B   UNKNOWN  $976B           ; Unknown 9xxx instruction
$C4A    $A74E   LD       I, $74E         ; Load 74E into I
$C4C    $297A   CALL     $97A            ; Call subroutine at 97A
$C4E    $35CC   SE       V5, #CC         ; Skip if V5 == 204
$C50    $D748   DRW      V7, V4, #8      ; Draw 8-byte sprite at V7, V4
$C52    $92FD   UNKNOWN  $92FD           ; Unknown 9xxx instruction
$C54    $76B8   ADD      V6, #B8         ; Add 184 to V6
$C56    $9A3D   UNKNOWN  $9A3D           ; Unknown 9xxx instruction
$C58    $427A   SNE      V2, #7A         ; Skip if V2 != 122
$C5A    $B01C   JP       V0, $01C        ; Jump to V0 + 01C
$C5C    $74A1   ADD      V4, #A1         ; Add 161 to V4
$C5E    $7640   ADD      V6, #40         ; Add 64 to V6
$C60    $670F   LD       V7, #0F         ; Load 15 into V7
$C62    $4C2D   SNE      VC, #2D         ; Skip if VC != 45
$C64    $9D78   UNKNOWN  $9D78           ; Unknown 9xxx instruction
$C66    $AD08   LD       I, $D08         ; Load D08 into I
$C68    $DE63   DRW      VE, V6, #3      ; Draw 3-byte sprite at VE, V6
$C6A    $9A1E   UNKNOWN  $9A1E           ; Unknown 9xxx instruction
$C6C    $827E   SHL      V2              ; V2 <<= 1, VF = MSB
$C6E    $8320   LD       V3, V2          ; V3 = V2
$C70    $FBF2   UNKNOWN  FBF2            ; Unknown Fxxx instruction
$C72    $427F   SNE      V2, #7F         ; Skip if V2 != 127
$C74    $6D3D   LD       VD, #3D         ; Load 61 into VD
$C76    $CE9B   RND      VE, #9B         ; VE = random & 9B
$C78    $A986   LD       I, $986         ; Load 986 into I
$C7A    $7B12   ADD      VB, #12         ; Add 18 to VB
$C7C    $FEB9   UNKNOWN  FEB9            ; Unknown Fxxx instruction
$C7E    $A6EF   LD       I, $6EF         ; Load 6EF into I
$C80    $97E0   SNE      V7, VE          ; Skip if V7 != VE
$C82    $23CF   CALL     $3CF            ; Call subroutine at 3CF
$C84    $5947   UNKNOWN  $5947           ; Unknown 5xxx instruction
$C86    $F13B   UNKNOWN  F13B            ; Unknown Fxxx instruction
$C88    $7534   ADD      V5, #34         ; Add 52 to V5
$C8A    $4683   SNE      V6, #83         ; Skip if V6 != 131
$C8C    $561F   UNKNOWN  $561F           ; Unknown 5xxx instruction
$C8E    $A69A   LD       I, $69A         ; Load 69A into I
$C90    $3C2F   SE       VC, #2F         ; Skip if VC == 47
$C92    $DD9A   DRW      VD, V9, #A      ; Draw 10-byte sprite at VD, V9
$C94    $59D2   UNKNOWN  $59D2           ; Unknown 5xxx instruction
$C96    $30BF   SE       V0, #BF         ; Skip if V0 == 191
$C98    $06FC   SYS      $6FC            ; System call to 6FC
$C9A    $6FB2   LD       VF, #B2         ; Load 178 into VF
$C9C    $95B0   SNE      V5, VB          ; Skip if V5 != VB
$C9E    $1646   JP       $646            ; Jump to 646
$CA0    $0042   SYS      $042            ; System call to 042
$CA2    $AA64   LD       I, $A64         ; Load A64 into I
$CA4    $8E11   OR       VE, V1          ; VE |= V1
$CA6    $423E   SNE      V2, #3E         ; Skip if V2 != 62
$CA8    $13DF   JP       $3DF            ; Jump to 3DF
$CAA    $3E7A   SE       VE, #7A         ; Skip if VE == 122
$CAC    $4E2B   SNE      VE, #2B         ; Skip if VE != 43
$CAE    $D05D   DRW      V0, V5, #D      ; Draw 13-byte sprite at V0, V5
$CB0    $17C2   JP       $7C2            ; Jump to 7C2
$CB2    $70E3   ADD      V0, #E3         ; Add 227 to V0
$CB4    $3179   SE       V1, #79         ; Skip if V1 == 121
$CB6    $1093   JP       $093            ; Jump to 093
$CB8    $E1AC   UNKNOWN  $E1AC           ; Unknown Exxx instruction
$CBA    $A091   LD       I, $091         ; Load 091 into I
$CBC    $F34D   UNKNOWN  F34D            ; Unknown Fxxx instruction
$CBE    $C259   RND      V2, #59         ; V2 = random & 59
$CC0    $D41F   DRW      V4, V1, #F      ; Draw 15-byte sprite at V4, V1
$CC2    $29E3   CALL     $9E3            ; Call subroutine at 9E3
$CC4    $E21B   UNKNOWN  $E21B           ; Unknown Exxx instruction
$CC6    $E7D3   UNKNOWN  $E7D3           ; Unknown Exxx instruction
$CC8    $F8B7   UNKNOWN  F8B7            ; Unknown Fxxx instruction
$CCA    $55BF   UNKNOWN  $55BF           ; Unknown 5xxx instruction
$CCC    $D2A6   DRW      V2, VA, #6      ; Draw 6-byte sprite at V2, VA
$CCE    $0F66   SYS      $F66            ; System call to F66
$CD0    $69AF   LD       V9, #AF         ; Load 175 into V9
$CD2    $508C   UNKNOWN  $508C           ; Unknown 5xxx instruction
$CD4    $5870   SE       V8, V7          ; Skip if V8 == V7
$CD6    $17A2   JP       $7A2            ; Jump to 7A2
$CD8    $17D5   JP       $7D5            ; Jump to 7D5
$CDA    $2FBE   CALL     $FBE            ; Call subroutine at FBE
$CDC    $26D6   CALL     $6D6            ; Call subroutine at 6D6
$CDE    $D5F8   DRW      V5, VF, #8      ; Draw 8-byte sprite at V5, VF
$CE0    $D037   DRW      V0, V3, #7      ; Draw 7-byte sprite at V0, V3
$CE2    $02C0   SYS      $2C0            ; System call to 2C0
$CE4    $ABB3   LD       I, $BB3         ; Load BB3 into I
$CE6    $EF65   UNKNOWN  $EF65           ; Unknown Exxx instruction
$CE8    $6954   LD       V9, #54         ; Load 84 into V9
$CEA    $6681   LD       V6, #81         ; Load 129 into V6
$CEC    $6CAE   LD       VC, #AE         ; Load 174 into VC
$CEE    $095B   SYS      $95B            ; System call to 95B
$CF0    $6C4A   LD       VC, #4A         ; Load 74 into VC
$CF2    $234F   CALL     $34F            ; Call subroutine at 34F
$CF4    $7D92   ADD      VD, #92         ; Add 146 to VD
$CF6    $DCC0   DRW      VC, VC, #0      ; Draw 0-byte sprite at VC, VC
$CF8    $91A5   UNKNOWN  $91A5           ; Unknown 9xxx instruction
$CFA    $A4DD   LD       I, $4DD         ; Load 4DD into I
$CFC    $5669   UNKNOWN  $5669           ; Unknown 5xxx instruction
$CFE    $AE2F   LD       I, $E2F         ; Load E2F into I
$D00    $ED3D   UNKNOWN  $ED3D           ; Unknown Exxx instruction
$D02    $F41F   UNKNOWN  F41F            ; Unknown Fxxx instruction
$D04    $D541   DRW      V5, V4, #1      ; Draw 1-byte sprite at V5, V4
$D06    $6947   LD       V9, #47         ; Load 71 into V9
$D08    $2722   CALL     $722            ; Call subroutine at 722
$D0A    $5666   UNKNOWN  $5666           ; Unknown 5xxx instruction
$D0C    $10C9   JP       $0C9            ; Jump to 0C9
$D0E    $4E17   SNE      VE, #17         ; Skip if VE != 23
$D10    $17C2   JP       $7C2            ; Jump to 7C2
$D12    $D795   DRW      V7, V9, #5      ; Draw 5-byte sprite at V7, V9
$D14    $83BE   SHL      V3              ; V3 <<= 1, VF = MSB
$D16    $6FC0   LD       VF, #C0         ; Load 192 into VF
$D18    $9758   UNKNOWN  $9758           ; Unknown 9xxx instruction
$D1A    $18D0   JP       $8D0            ; Jump to 8D0
$D1C    $8446   SHR      V4              ; V4 >>= 1, VF = LSB
$D1E    $348B   SE       V4, #8B         ; Skip if V4 == 139
$D20    $A338   LD       I, $338         ; Load 338 into I
$D22    $FD03   UNKNOWN  FD03            ; Unknown Fxxx instruction
$D24    $271C   CALL     $71C            ; Call subroutine at 71C
$D26    $5BE0   SE       VB, VE          ; Skip if VB == VE
$D28    $FD7B   UNKNOWN  FD7B            ; Unknown Fxxx instruction
$D2A    $4540   SNE      V5, #40         ; Skip if V5 != 64
$D2C    $751E   ADD      V5, #1E         ; Add 30 to V5
$D2E    $E160   UNKNOWN  $E160           ; Unknown Exxx instruction
$D30    $5C52   UNKNOWN  $5C52           ; Unknown 5xxx instruction
$D32    $4E23   SNE      VE, #23         ; Skip if VE != 35
$D34    $7866   ADD      V8, #66         ; Add 102 to V8
$D36    $8CA8   UNKNOWN  8CA8            ; Unknown 8xxx instruction
$D38    $0E79   SYS      $E79            ; System call to E79
$D3A    $6705   LD       V7, #05         ; Load 5 into V7
$D3C    $DF5C   DRW      VF, V5, #C      ; Draw 12-byte sprite at VF, V5
$D3E    $0185   SYS      $185            ; System call to 185
$D40    $DDD8   DRW      VD, VD, #8      ; Draw 8-byte sprite at VD, VD
$D42    $65B8   LD       V5, #B8         ; Load 184 into V5
$D44    $9FA8   UNKNOWN  $9FA8           ; Unknown 9xxx instruction
$D46    $A457   LD       I, $457         ; Load 457 into I
$D48    $9E9A   UNKNOWN  $9E9A           ; Unknown 9xxx instruction
$D4A    $D877   DRW      V8, V7, #7      ; Draw 7-byte sprite at V8, V7
$D4C    $8136   SHR      V1              ; V1 >>= 1, VF = LSB
$D4E    $9F1A   UNKNOWN  $9F1A           ; Unknown 9xxx instruction
$D50    $A5F4   LD       I, $5F4         ; Load 5F4 into I
$D52    $4CD7   SNE      VC, #D7         ; Skip if VC != 215
$D54    $ACC4   LD       I, $CC4         ; Load CC4 into I
$D56    $5728   UNKNOWN  $5728           ; Unknown 5xxx instruction
$D58    $C226   RND      V2, #26         ; V2 = random & 26
$D5A    $7401   ADD      V4, #01         ; Add 1 to V4
$D5C    $4252   SNE      V2, #52         ; Skip if V2 != 82
$D5E    $0E70   SYS      $E70            ; System call to E70
$D60    $61E1   LD       V1, #E1         ; Load 225 into V1
$D62    $66C0   LD       V6, #C0         ; Load 192 into V6
$D64    $CFBB   RND      VF, #BB         ; VF = random & BB
$D66    $3B9C   SE       VB, #9C         ; Skip if VB == 156
$D68    $6C3E   LD       VC, #3E         ; Load 62 into VC
$D6A    $2A8E   CALL     $A8E            ; Call subroutine at A8E
$D6C    $F06C   UNKNOWN  F06C            ; Unknown Fxxx instruction
$D6E    $79E7   ADD      V9, #E7         ; Add 231 to V9
$D70    $69CA   LD       V9, #CA         ; Load 202 into V9
$D72    $2D45   CALL     $D45            ; Call subroutine at D45
$D74    $7A75   ADD      VA, #75         ; Add 117 to VA
$D76    $48A6   SNE      V8, #A6         ; Skip if V8 != 166
$D78    $A91E   LD       I, $91E         ; Load 91E into I
$D7A    $1501   JP       $501            ; Jump to 501
$D7C    $DB78   DRW      VB, V7, #8      ; Draw 8-byte sprite at VB, V7
$D7E    $7F29   ADD      VF, #29         ; Add 41 to VF
$D80    $705B   ADD      V0, #5B         ; Add 91 to V0
$D82    $D745   DRW      V7, V4, #5      ; Draw 5-byte sprite at V7, V4
$D84    $2648   CALL     $648            ; Call subroutine at 648
$D86    $3C74   SE       VC, #74         ; Skip if VC == 116
$D88    $A098   LD       I, $098         ; Load 098 into I
$D8A    $A3E8   LD       I, $3E8         ; Load 3E8 into I
$D8C    $826E   SHL      V2              ; V2 <<= 1, VF = MSB
$D8E    $3972   SE       V9, #72         ; Skip if V9 == 114
$D90    $D6D0   DRW      V6, VD, #0      ; Draw 0-byte sprite at V6, VD
$D92    $5599   UNKNOWN  $5599           ; Unknown 5xxx instruction
$D94    $2CC1   CALL     $CC1            ; Call subroutine at CC1
$D96    $1107   JP       $107            ; Jump to 107
$D98    $1E35   JP       $E35            ; Jump to E35
$D9A    $9C94   UNKNOWN  $9C94           ; Unknown 9xxx instruction
$D9C    $334B   SE       V3, #4B         ; Skip if V3 == 75
$D9E    $B0A8   JP       V0, $0A8        ; Jump to V0 + 0A8
$DA0    $F7D7   UNKNOWN  F7D7            ; Unknown Fxxx instruction
$DA2    $EDA6   UNKNOWN  $EDA6           ; Unknown Exxx instruction
$DA4    $5CD9   UNKNOWN  $5CD9           ; Unknown 5xxx instruction
$DA6    $AB4A   LD       I, $B4A         ; Load B4A into I
$DA8    $5225   UNKNOWN  $5225           ; Unknown 5xxx instruction
$DAA    $FA39   UNKNOWN  FA39            ; Unknown Fxxx instruction
$DAC    $A633   LD       I, $633         ; Load 633 into I
$DAE    $B3A7   JP       V0, $3A7        ; Jump to V0 + 3A7
$DB0    $78A8   ADD      V8, #A8         ; Add 168 to V8
$DB2    $19C7   JP       $9C7            ; Jump to 9C7
$DB4    $3B15   SE       VB, #15         ; Skip if VB == 21
$DB6    $FE78   UNKNOWN  FE78            ; Unknown Fxxx instruction
$DB8    $E350   UNKNOWN  $E350           ; Unknown Exxx instruction
$DBA    $C963   RND      V9, #63         ; V9 = random & 63
$DBC    $AD81   LD       I, $D81         ; Load D81 into I
$DBE    $4134   SNE      V1, #34         ; Skip if V1 != 52
$DC0    $2678   CALL     $678            ; Call subroutine at 678
$DC2    $8977   SUBN     V9, V7          ; V9 = V7 - V9, VF = !borrow
$DC4    $2450   CALL     $450            ; Call subroutine at 450
$DC6    $FBC8   UNKNOWN  FBC8            ; Unknown Fxxx instruction
$DC8    $D27E   DRW      V2, V7, #E      ; Draw 14-byte sprite at V2, V7
$DCA    $8F3E   SHL      VF              ; VF <<= 1, VF = MSB
$DCC    $B0A4   JP       V0, $0A4        ; Jump to V0 + 0A4
$DCE    $E673   UNKNOWN  $E673           ; Unknown Exxx instruction
$DD0    $FB0B   UNKNOWN  FB0B            ; Unknown Fxxx instruction
$DD2    $0DE7   SYS      $DE7            ; System call to DE7
$DD4    $6801   LD       V8, #01         ; Load 1 into V8
$DD6    $B0F9   JP       V0, $0F9        ; Jump to V0 + 0F9
$DD8    $C95B   RND      V9, #5B         ; V9 = random & 5B
$DDA    $4370   SNE      V3, #70         ; Skip if V3 != 112
$DDC    $29EE   CALL     $9EE            ; Call subroutine at 9EE
$DDE    $AF54   LD       I, $F54         ; Load F54 into I
$DE0    $013B   SYS      $13B            ; System call to 13B
$DE2    $7B7E   ADD      VB, #7E         ; Add 126 to VB
$DE4    $DF40   DRW      VF, V4, #0      ; Draw 0-byte sprite at VF, V4
$DE6    $4C1A   SNE      VC, #1A         ; Skip if VC != 26
$DE8    $624F   LD       V2, #4F         ; Load 79 into V2
$DEA    $8812   AND      V8, V1          ; V8 &= V1
$DEC    $2E44   CALL     $E44            ; Call subroutine at E44
$DEE    $4187   SNE      V1, #87         ; Skip if V1 != 135
$DF0    $12D6   JP       $2D6            ; Jump to 2D6
$DF2    $2BCF   CALL     $BCF            ; Call subroutine at BCF
$DF4    $E4A1   SKNP     V4              ; Skip if key V4 not pressed
$DF6    $540E   UNKNOWN  $540E           ; Unknown 5xxx instruction
$DF8    $7EFA   ADD      VE, #FA         ; Add 250 to VE
$DFA    $C39B   RND      V3, #9B         ; V3 = random & 9B
$DFC    $C97B   RND      V9, #7B         ; V9 = random & 7B
$DFE    $6E64   LD       VE, #64         ; Load 100 into VE
$E00    $07E9   SYS      $7E9            ; System call to 7E9
$E02    $3C0F   SE       VC, #0F         ; Skip if VC == 15
$E04    $8E0D   UNKNOWN  8E0D            ; Unknown 8xxx instruction
$E06    $79F2   ADD      V9, #F2         ; Add 242 to V9
$E08    $5100   SE       V1, V0          ; Skip if V1 == V0
$E0A    $C552   RND      V5, #52         ; V5 = random & 52
$E0C    $07F8   SYS      $7F8            ; System call to 7F8
$E0E    $E5ED   UNKNOWN  $E5ED           ; Unknown Exxx instruction
$E10    $5D2E   UNKNOWN  $5D2E           ; Unknown 5xxx instruction
$E12    $0F83   SYS      $F83            ; System call to F83
$E14    $5133   UNKNOWN  $5133           ; Unknown 5xxx instruction
$E16    $D7E0   DRW      V7, VE, #0      ; Draw 0-byte sprite at V7, VE
$E18    $6FA8   LD       VF, #A8         ; Load 168 into VF
$E1A    $3726   SE       V7, #26         ; Skip if V7 == 38
$E1C    $05BF   SYS      $5BF            ; System call to 5BF
$E1E    $827B   UNKNOWN  827B            ; Unknown 8xxx instruction
$E20    $2991   CALL     $991            ; Call subroutine at 991
$E22    $F2E1   UNKNOWN  F2E1            ; Unknown Fxxx instruction
$E24    $C181   RND      V1, #81         ; V1 = random & 81
$E26    $B5A6   JP       V0, $5A6        ; Jump to V0 + 5A6
$E28    $70CA   ADD      V0, #CA         ; Add 202 to V0
$E2A    $8242   AND      V2, V4          ; V2 &= V4
$E2C    $DD48   DRW      VD, V4, #8      ; Draw 8-byte sprite at VD, V4
$E2E    $E163   UNKNOWN  $E163           ; Unknown Exxx instruction
$E30    $CD1A   RND      VD, #1A         ; VD = random & 1A
$E32    $0477   SYS      $477            ; System call to 477
$E34    $07AB   SYS      $7AB            ; System call to 7AB
$E36    $FA50   UNKNOWN  FA50            ; Unknown Fxxx instruction
$E38    $1E0F   JP       $E0F            ; Jump to E0F
$E3A    $ABB1   LD       I, $BB1         ; Load BB1 into I
$E3C    $0873   SYS      $873            ; System call to 873
$E3E    $4501   SNE      V5, #01         ; Skip if V5 != 1
$E40    $F122   UNKNOWN  F122            ; Unknown Fxxx instruction
$E42    $F0F5   UNKNOWN  F0F5            ; Unknown Fxxx instruction
$E44    $1946   JP       $946            ; Jump to 946
$E46    $E1B8   UNKNOWN  $E1B8           ; Unknown Exxx instruction
$E48    $8BD0   LD       VB, VD          ; VB = VD
$E4A    $2237   CALL     $237            ; Call subroutine at 237
$E4C    $7EB2   ADD      VE, #B2         ; Add 178 to VE
$E4E    $B63D   JP       V0, $63D        ; Jump to V0 + 63D
$E50    $78C5   ADD      V8, #C5         ; Add 197 to V8
$E52    $E53E   UNKNOWN  $E53E           ; Unknown Exxx instruction
$E54    $BDD4   JP       V0, $DD4        ; Jump to V0 + DD4
$E56    $BF51   JP       V0, $F51        ; Jump to V0 + F51
$E58    $9486   UNKNOWN  $9486           ; Unknown 9xxx instruction
$E5A    $3CA2   SE       VC, #A2         ; Skip if VC == 162
$E5C    $8973   XOR      V9, V7          ; V9 ^= V7
$E5E    $96BF   UNKNOWN  $96BF           ; Unknown 9xxx instruction
$E60    $48EE   SNE      V8, #EE         ; Skip if V8 != 238
$E62    $5766   UNKNOWN  $5766           ; Unknown 5xxx instruction
$E64    $3FC3   SE       VF, #C3         ; Skip if VF == 195
$E66    $2F4F   CALL     $F4F            ; Call subroutine at F4F
$E68    $6458   LD       V4, #58         ; Load 88 into V4
$E6A    $A3D9   LD       I, $3D9         ; Load 3D9 into I
$E6C    $3504   SE       V5, #04         ; Skip if V5 == 4
$E6E    $E1C7   UNKNOWN  $E1C7           ; Unknown Exxx instruction
$E70    $AA56   LD       I, $A56         ; Load A56 into I
$E72    $FC38   UNKNOWN  FC38            ; Unknown Fxxx instruction
$E74    $E86B   UNKNOWN  $E86B           ; Unknown Exxx instruction
$E76    $B712   JP       V0, $712        ; Jump to V0 + 712
$E78    $56A1   UNKNOWN  $56A1           ; Unknown 5xxx instruction
$E7A    $F8E9   UNKNOWN  F8E9            ; Unknown Fxxx instruction
$E7C    $1CA0   JP       $CA0            ; Jump to CA0
$E7E    $894E   SHL      V9              ; V9 <<= 1, VF = MSB
$E80    $D418   DRW      V4, V1, #8      ; Draw 8-byte sprite at V4, V1
$E82    $90B9   UNKNOWN  $90B9           ; Unknown 9xxx instruction
$E84    $34A3   SE       V4, #A3         ; Skip if V4 == 163
$E86    $833C   UNKNOWN  833C            ; Unknown 8xxx instruction
$E88    $FAC4   UNKNOWN  FAC4            ; Unknown Fxxx instruction
$E8A    $872E   SHL      V7              ; V7 <<= 1, VF = MSB
$E8C    $541E   UNKNOWN  $541E           ; Unknown 5xxx instruction
$E8E    $1BAC   JP       $BAC            ; Jump to BAC
$E90    $D7A0   DRW      V7, VA, #0      ; Draw 0-byte sprite at V7, VA
$E92    $03E1   SYS      $3E1            ; System call to 3E1
$E94    $31DF   SE       V1, #DF         ; Skip if V1 == 223
$E96    $029A   SYS      $29A            ; System call to 29A
$E98    $E02E   UNKNOWN  $E02E           ; Unknown Exxx instruction
$E9A    $63B2   LD       V3, #B2         ; Load 178 into V3
$E9C    $615D   LD       V1, #5D         ; Load 93 into V1
$E9E    $95E5   UNKNOWN  $95E5           ; Unknown 9xxx instruction
$EA0    $5A44   UNKNOWN  $5A44           ; Unknown 5xxx instruction
$EA2    $B9B2   JP       V0, $9B2        ; Jump to V0 + 9B2
$EA4    $908A   UNKNOWN  $908A           ; Unknown 9xxx instruction
$EA6    $8596   SHR      V5              ; V5 >>= 1, VF = LSB
$EA8    $2428   CALL     $428            ; Call subroutine at 428
$EAA    $73B7   ADD      V3, #B7         ; Add 183 to V3
$EAC    $5569   UNKNOWN  $5569           ; Unknown 5xxx instruction
$EAE    $2E9E   CALL     $E9E            ; Call subroutine at E9E
$EB0    $539E   UNKNOWN  $539E           ; Unknown 5xxx instruction
$EB2    $355F   SE       V5, #5F         ; Skip if V5 == 95
$EB4    $1EE8   JP       $EE8            ; Jump to EE8
$EB6    $C629   RND      V6, #29         ; V6 = random & 29
$EB8    $C7DE   RND      V7, #DE         ; V7 = random & DE
$EBA    $BE68   JP       V0, $E68        ; Jump to V0 + E68
$EBC    $5181   UNKNOWN  $5181           ; Unknown 5xxx instruction
$EBE    $7934   ADD      V9, #34         ; Add 52 to V9
$EC0    $9000   SNE      V0, V0          ; Skip if V0 != V0
$EC2    $F7C3   UNKNOWN  F7C3            ; Unknown Fxxx instruction
$EC4    $5674   UNKNOWN  $5674           ; Unknown 5xxx instruction
$EC6    $4A0C   SNE      VA, #0C         ; Skip if VA != 12
$EC8    $9432   UNKNOWN  $9432           ; Unknown 9xxx instruction
$ECA    $C605   RND      V6, #05         ; V6 = random & 05
$ECC    $7E4C   ADD      VE, #4C         ; Add 76 to VE
$ECE    $F2F1   UNKNOWN  F2F1            ; Unknown Fxxx instruction
$ED0    $9735   UNKNOWN  $9735           ; Unknown 9xxx instruction
$ED2    $A4A0   LD       I, $4A0         ; Load 4A0 into I
$ED4    $73CB   ADD      V3, #CB         ; Add 203 to V3
$ED6    $6623   LD       V6, #23         ; Load 35 into V6
$ED8    $06B2   SYS      $6B2            ; System call to 6B2
$EDA    $ED10   UNKNOWN  $ED10           ; Unknown Exxx instruction
$EDC    $D3B3   DRW      V3, VB, #3      ; Draw 3-byte sprite at V3, VB
$EDE    $A18F   LD       I, $18F         ; Load 18F into I
$EE0    $C61D   RND      V6, #1D         ; V6 = random & 1D
$EE2    $76A4   ADD      V6, #A4         ; Add 164 to V6
$EE4    $82B0   LD       V2, VB          ; V2 = VB
$EE6    $7289   ADD      V2, #89         ; Add 137 to V2
$EE8    $0E66   SYS      $E66            ; System call to E66
$EEA    $428B   SNE      V2, #8B         ; Skip if V2 != 139
$EEC    $72A1   ADD      V2, #A1         ; Add 161 to V2
$EEE    $066D   SYS      $66D            ; System call to 66D
$EF0    $B876   JP       V0, $876        ; Jump to V0 + 876
$EF2    $7B93   ADD      VB, #93         ; Add 147 to VB
$EF4    $478D   SNE      V7, #8D         ; Skip if V7 != 141
$EF6    $1F01   JP       $F01            ; Jump to F01
$EF8    $50FC   UNKNOWN  $50FC           ; Unknown 5xxx instruction
$EFA    $FFD9   UNKNOWN  FFD9            ; Unknown Fxxx instruction
$EFC    $D41B   DRW      V4, V1, #B      ; Draw 11-byte sprite at V4, V1
$EFE    $C9D0   RND      V9, #D0         ; V9 = random & D0
$F00    $7E2F   ADD      VE, #2F         ; Add 47 to VE
$F02    $67FE   LD       V7, #FE         ; Load 254 into V7
$F04    $A0F2   LD       I, $0F2         ; Load 0F2 into I
$F06    $8885   SUB      V8, V8          ; V8 -= V8, VF = !borrow
$F08    $A136   LD       I, $136         ; Load 136 into I
$F0A    $1FC7   JP       $FC7            ; Jump to FC7
$F0C    $A53D   LD       I, $53D         ; Load 53D into I
$F0E    $38D2   SE       V8, #D2         ; Skip if V8 == 210
$F10    $9D68   UNKNOWN  $9D68           ; Unknown 9xxx instruction
$F12    $4E97   SNE      VE, #97         ; Skip if VE != 151
$F14    $5C8D   UNKNOWN  $5C8D           ; Unknown 5xxx instruction
$F16    $C605   RND      V6, #05         ; V6 = random & 05
$F18    $95C0   SNE      V5, VC          ; Skip if V5 != VC
$F1A    $AEC2   LD       I, $EC2         ; Load EC2 into I
$F1C    $2D6F   CALL     $D6F            ; Call subroutine at D6F
$F1E    $7E8C   ADD      VE, #8C         ; Add 140 to VE
$F20    $21AD   CALL     $1AD            ; Call subroutine at 1AD
$F22    $FFC2   UNKNOWN  FFC2            ; Unknown Fxxx instruction
$F24    $C73B   RND      V7, #3B         ; V7 = random & 3B
$F26    $5762   UNKNOWN  $5762           ; Unknown 5xxx instruction
$F28    $8305   SUB      V3, V0          ; V3 -= V0, VF = !borrow
$F2A    $67BD   LD       V7, #BD         ; Load 189 into V7
$F2C    $1872   JP       $872            ; Jump to 872
$F2E    $DBA0   DRW      VB, VA, #0      ; Draw 0-byte sprite at VB, VA
$F30    $1B10   JP       $B10            ; Jump to B10
$F32    $4864   SNE      V8, #64         ; Skip if V8 != 100
$F34    $8C2D   UNKNOWN  8C2D            ; Unknown 8xxx instruction
$F36    $46E1   SNE      V6, #E1         ; Skip if V6 != 225
$F38    $B8C5   JP       V0, $8C5        ; Jump to V0 + 8C5
$F3A    $AD1C   LD       I, $D1C         ; Load D1C into I
$F3C    $C1B0   RND      V1, #B0         ; V1 = random & B0
$F3E    $82AC   UNKNOWN  82AC            ; Unknown 8xxx instruction
$F40    $94D4   UNKNOWN  $94D4           ; Unknown 9xxx instruction
$F42    $433F   SNE      V3, #3F         ; Skip if V3 != 63
$F44    $3CEC   SE       VC, #EC         ; Skip if VC == 236
$F46    $14EE   JP       $4EE            ; Jump to 4EE
$F48    $E569   UNKNOWN  $E569           ; Unknown Exxx instruction
$F4A    $7116   ADD      V1, #16         ; Add 22 to V1
$F4C    $14D9   JP       $4D9            ; Jump to 4D9
$F4E    $6E74   LD       VE, #74         ; Load 116 into VE
$F50    $A936   LD       I, $936         ; Load 936 into I
$F52    $D4C8   DRW      V4, VC, #8      ; Draw 8-byte sprite at V4, VC
$F54    $F67E   UNKNOWN  F67E            ; Unknown Fxxx instruction
$F56    $BD25   JP       V0, $D25        ; Jump to V0 + D25
$F58    $6AE3   LD       VA, #E3         ; Load 227 into VA
$F5A    $899F   UNKNOWN  899F            ; Unknown 8xxx instruction
$F5C    $5075   UNKNOWN  $5075           ; Unknown 5xxx instruction
$F5E    $D607   DRW      V6, V0, #7      ; Draw 7-byte sprite at V6, V0
$F60    $512E   UNKNOWN  $512E           ; Unknown 5xxx instruction
$F62    $4351   SNE      V3, #51         ; Skip if V3 != 81
$F64    $328F   SE       V2, #8F         ; Skip if V2 == 143
$F66    $4FA6   SNE      VF, #A6         ; Skip if VF != 166
$F68    $1ABB   JP       $ABB            ; Jump to ABB
$F6A    $ABDE   LD       I, $BDE         ; Load BDE into I
$F6C    $E754   UNKNOWN  $E754           ; Unknown Exxx instruction
$F6E    $2FA3   CALL     $FA3            ; Call subroutine at FA3
$F70    $32A1   SE       V2, #A1         ; Skip if V2 == 161
$F72    $098B   SYS      $98B            ; System call to 98B
$F74    $8933   XOR      V9, V3          ; V9 ^= V3
$F76    $E4C0   UNKNOWN  $E4C0           ; Unknown Exxx instruction
$F78    $6E72   LD       VE, #72         ; Load 114 into VE
$F7A    $09ED   SYS      $9ED            ; System call to 9ED
$F7C    $7549   ADD      V5, #49         ; Add 73 to V5
$F7E    $FC65   LD       VC, [I]         ; Load V0-VC from I
$F80    $D130   DRW      V1, V3, #0      ; Draw 0-byte sprite at V1, V3
$F82    $DB6B   DRW      VB, V6, #B      ; Draw 11-byte sprite at VB, V6
$F84    $5726   UNKNOWN  $5726           ; Unknown 5xxx instruction
$F86    $372F   SE       V7, #2F         ; Skip if V7 == 47
$F88    $0B3C   SYS      $B3C            ; System call to B3C
$F8A    $9853   UNKNOWN  $9853           ; Unknown 9xxx instruction
$F8C    $2D3F   CALL     $D3F            ; Call subroutine at D3F
$F8E    $EBEA   UNKNOWN  $EBEA           ; Unknown Exxx instruction
$F90    $CEC1   RND      VE, #C1         ; VE = random & C1
$F92    $3B49   SE       VB, #49         ; Skip if VB == 73
$F94    $7962   ADD      V9, #62         ; Add 98 to V9
$F96    $78C5   ADD      V8, #C5         ; Add 197 to V8
$F98    $10C9   JP       $0C9            ; Jump to 0C9
$F9A    $702E   ADD      V0, #2E         ; Add 46 to V0
$F9C    $9DB4   UNKNOWN  $9DB4           ; Unknown 9xxx instruction
$F9E    $0B19   SYS      $B19            ; System call to B19
$FA0    $9EB4   UNKNOWN  $9EB4           ; Unknown 9xxx instruction
$FA2    $C029   RND      V0, #29         ; V0 = random & 29
$FA4    $5EC6   UNKNOWN  $5EC6           ; Unknown 5xxx instruction
$FA6    $2B95   CALL     $B95            ; Call subroutine at B95
$FA8    $336D   SE       V3, #6D         ; Skip if V3 == 109
$FAA    $56E1   UNKNOWN  $56E1           ; Unknown 5xxx instruction
$FAC    $5ADF   UNKNOWN  $5ADF           ; Unknown 5xxx instruction
$FAE    $2437   CALL     $437            ; Call subroutine at 437
$FB0    $3A0C   SE       VA, #0C         ; Skip if VA == 12
$FB2    $2347   CALL     $347            ; Call subroutine at 347
$FB4    $5C04   UNKNOWN  $5C04           ; Unknown 5xxx instruction
$FB6    $38C3   SE       V8, #C3         ; Skip if V8 == 195
$FB8    $6D79   LD       VD, #79         ; Load 121 into VD
$FBA    $8F4B   UNKNOWN  8F4B            ; Unknown 8xxx instruction
$FBC    $6438   LD       V4, #38         ; Load 56 into V4
$FBE    $F979   UNKNOWN  F979            ; Unknown Fxxx instruction
$FC0    $4AB2   SNE      VA, #B2         ; Skip if VA != 178
$FC2    $D53C   DRW      V5, V3, #C      ; Draw 12-byte sprite at V5, V3
$FC4    $1E4D   JP       $E4D            ; Jump to E4D
$FC6    $A728   LD       I, $728         ; Load 728 into I
$FC8    $205C   CALL     $05C            ; Call subroutine at 05C
$FCA    $40EC   SNE      V0, #EC         ; Skip if V0 != 236
$FCC    $6186   LD       V1, #86         ; Load 134 into V1
$FCE    $F546   UNKNOWN  F546            ; Unknown Fxxx instruction
$FD0    $4B36   SNE      VB, #36         ; Skip if VB != 54
$FD2    $B288   JP       V0, $288        ; Jump to V0 + 288
$FD4    $418B   SNE      V1, #8B         ; Skip if V1 != 139
$FD6    $98C3   UNKNOWN  $98C3           ; Unknown 9xxx instruction
$FD8    $4DEB   SNE      VD, #EB         ; Skip if VD != 235
$FDA    $1286   JP       $286            ; Jump to 286
$FDC    $7DA4   ADD      VD, #A4         ; Add 164 to VD
$FDE    $B5B3   JP       V0, $5B3        ; Jump to V0 + 5B3
$FE0    $F849   UNKNOWN  F849            ; Unknown Fxxx instruction
$FE2    $5C4A   UNKNOWN  $5C4A           ; Unknown 5xxx instruction
$FE4    $DD3D   DRW      VD, V3, #D      ; Draw 13-byte sprite at VD, V3
$FE6    $1B41   JP       $B41            ; Jump to B41
$FE8    $44CF   SNE      V4, #CF         ; Skip if V4 != 207
$FEA    $37B6   SE       V7, #B6         ; Skip if V7 == 182
$FEC    $799D   ADD      V9, #9D         ; Add 157 to V9
$FEE    $B886   JP       V0, $886        ; Jump to V0 + 886
$FF0    $E7E4   UNKNOWN  $E7E4           ; Unknown Exxx instruction
$FF2    $0437   SYS      $437            ; System call to 437
$FF4    $6863   LD       V8, #63         ; Load 99 into V8
$FF6    $B597   JP       V0, $597        ; Jump to V0 + 597
$FF8    $4A41   SNE      VA, #41         ; Skip if VA != 65
$FFA    $C561   RND      V5, #61         ; V5 = random & 61
$FFC    $8C3C   UNKNOWN  8C3C            ; Unknown 8xxx instruction
$FFE    $A023   LD       I, $023         ; Load 023 into I

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 478 (26.7%)
  LD      : 264 (14.7%)
  JP      : 239 (13.3%)
  ADD     : 122 ( 6.8%)
  SNE     : 117 ( 6.5%)
  DRW     : 112 ( 6.2%)
  CALL    : 110 ( 6.1%)
  SE      : 108 ( 6.0%)
  SYS     : 101 ( 5.6%)
  RND     :  92 ( 5.1%)
  SHR     :  11 ( 0.6%)
  SHL     :  10 ( 0.6%)
  AND     :   7 ( 0.4%)
  SUB     :   7 ( 0.4%)
  XOR     :   5 ( 0.3%)
  SUBN    :   4 ( 0.2%)
  OR      :   4 ( 0.2%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 386 (21.5%)
Arithmetic Operations: 149 (8.3%)
