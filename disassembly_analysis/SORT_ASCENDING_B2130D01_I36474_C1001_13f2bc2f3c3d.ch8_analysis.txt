
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B2130D01_I36474_C1001_13f2bc2f3c3d.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 2130
Instance: 36474
Direction: ascending
Final Array: [45, 61, 64, 114, 135, 179, 206, 242]
Operations: R:8 W:0 C:14 S:2

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 126
Sort Array References:
  $210: LD I, $9EA ; Load 9EA into I
  $212: LD I, $233 ; Load 233 into I
  $232: LD I, $DEE ; Load DEE into I
  $24A: LD I, $C79 ; Load C79 into I
  $258: LD I, $ED1 ; Load ED1 into I
  $28E: LD I, $00A ; Load 00A into I
  $290: LD I, $3B7 ; Load 3B7 into I
  $2A2: LD I, $EF0 ; Load EF0 into I
  $2C2: LD I, $5D2 ; Load 5D2 into I
  $334: LD I, $CFB ; Load CFB into I
  $366: LD I, $EB6 ; Load EB6 into I
  $3A4: LD I, $DF8 ; Load DF8 into I
  $3DE: LD I, $A9B ; Load A9B into I
  $3F6: LD I, $9BD ; Load 9BD into I
  $43C: LD I, $4CA ; Load 4CA into I
  $446: LD I, $A87 ; Load A87 into I
  $49A: LD I, $27E ; Load 27E into I
  $4B6: LD I, $18B ; Load 18B into I
  $4DE: LD I, $2F3 ; Load 2F3 into I
  $4E6: LD I, $63F ; Load 63F into I
  $506: LD I, $340 ; Load 340 into I
  $520: LD I, $93C ; Load 93C into I
  $534: LD I, $AAD ; Load AAD into I
  $548: LD I, $CBA ; Load CBA into I
  $588: LD I, $F57 ; Load F57 into I
  $58C: LD I, $CB8 ; Load CB8 into I
  $590: LD I, $54E ; Load 54E into I
  $592: LD I, $F8B ; Load F8B into I
  $5C0: LD I, $761 ; Load 761 into I
  $5D4: LD I, $28F ; Load 28F into I
  $5FA: LD I, $AC1 ; Load AC1 into I
  $5FC: LD I, $B00 ; Load B00 into I
  $5FE: LD I, $95D ; Load 95D into I
  $636: LD I, $0BE ; Load 0BE into I
  $638: LD I, $517 ; Load 517 into I
  $63A: LD I, $8FB ; Load 8FB into I
  $65C: LD I, $DE2 ; Load DE2 into I
  $67A: LD I, $534 ; Load 534 into I
  $68A: LD I, $E9C ; Load E9C into I
  $692: LD I, $A6E ; Load A6E into I
  $6A6: LD I, $31A ; Load 31A into I
  $6C4: LD I, $28F ; Load 28F into I
  $6C6: LD I, $288 ; Load 288 into I
  $6C8: LD I, $FBE ; Load FBE into I
  $6F6: LD I, $FAB ; Load FAB into I
  $718: LD I, $764 ; Load 764 into I
  $738: LD I, $81C ; Load 81C into I
  $744: LD I, $F87 ; Load F87 into I
  $76C: LD I, $E82 ; Load E82 into I
  $778: LD I, $305 ; Load 305 into I
  $794: LD I, $E85 ; Load E85 into I
  $7C2: LD I, $CA0 ; Load CA0 into I
  $7C4: LD I, $1D3 ; Load 1D3 into I
  $7C8: LD I, $910 ; Load 910 into I
  $7E6: LD I, $8AA ; Load 8AA into I
  $806: LD I, $F2C ; Load F2C into I
  $810: LD I, $CA2 ; Load CA2 into I
  $856: LD I, $B7E ; Load B7E into I
  $88A: LD I, $551 ; Load 551 into I
  $890: LD I, $60D ; Load 60D into I
  $892: LD I, $3B1 ; Load 3B1 into I
  $8B8: LD I, $B12 ; Load B12 into I
  $8CE: LD I, $0E7 ; Load 0E7 into I
  $8F8: LD I, $624 ; Load 624 into I
  $900: LD I, $A7E ; Load A7E into I
  $914: LD I, $7B1 ; Load 7B1 into I
  $952: LD I, $192 ; Load 192 into I
  $97A: LD I, $648 ; Load 648 into I
  $980: LD I, $CCB ; Load CCB into I
  $9B0: LD I, $B4D ; Load B4D into I
  $9F8: LD I, $58B ; Load 58B into I
  $A02: LD I, $73E ; Load 73E into I
  $A08: LD I, $C46 ; Load C46 into I
  $A12: LD I, $EDF ; Load EDF into I
  $A42: LD I, $18E ; Load 18E into I
  $A62: LD I, $9D0 ; Load 9D0 into I
  $A68: LD I, $38E ; Load 38E into I
  $A6A: LD I, $3C0 ; Load 3C0 into I
  $A84: LD I, $A4A ; Load A4A into I
  $AE4: LD I, $AF9 ; Load AF9 into I
  $AE8: LD I, $9E3 ; Load 9E3 into I
  $B04: LD I, $C79 ; Load C79 into I
  $B0A: LD I, $C6C ; Load C6C into I
  $B1E: LD I, $1CB ; Load 1CB into I
  $B36: LD I, $0AF ; Load 0AF into I
  $B38: LD I, $2B1 ; Load 2B1 into I
  $B62: LD I, $C8C ; Load C8C into I
  $B84: LD I, $303 ; Load 303 into I
  $B86: LD I, $985 ; Load 985 into I
  $BAA: LD V0, [I] ; Load V0-V0 from I
  $BDE: LD I, $A54 ; Load A54 into I
  $C2E: LD I, $65A ; Load 65A into I
  $C36: LD I, $AA9 ; Load AA9 into I
  $C40: LD I, $F21 ; Load F21 into I
  $C4C: LD I, $F18 ; Load F18 into I
  $C94: LD I, $9C4 ; Load 9C4 into I
  $CD4: LD I, $193 ; Load 193 into I
  $D0C: LD I, $E24 ; Load E24 into I
  $D2E: LD I, $661 ; Load 661 into I
  $D76: LD I, $EB6 ; Load EB6 into I
  $D9A: LD VE, [I] ; Load V0-VE from I
  $DA4: LD I, $5DF ; Load 5DF into I
  $DB6: LD I, $63D ; Load 63D into I
  $DC4: LD I, $81E ; Load 81E into I
  $DC8: LD I, $EE6 ; Load EE6 into I
  $DD0: LD I, $023 ; Load 023 into I
  $DD8: LD I, $209 ; Load 209 into I
  $DDA: LD I, $062 ; Load 062 into I
  $E02: LD I, $D6D ; Load D6D into I
  $E24: LD I, $314 ; Load 314 into I
  $E32: LD I, $5E3 ; Load 5E3 into I
  $E56: LD I, $D41 ; Load D41 into I
  $E5C: LD I, $64D ; Load 64D into I
  $E6C: LD I, $00A ; Load 00A into I
  $E88: LD I, $52D ; Load 52D into I
  $EA2: LD I, $7B0 ; Load 7B0 into I
  $EBC: LD I, $2FE ; Load 2FE into I
  $F10: LD I, $CE6 ; Load CE6 into I
  $F30: LD I, $D63 ; Load D63 into I
  $F72: LD I, $823 ; Load 823 into I
  $F76: LD I, $5A3 ; Load 5A3 into I
  $F7C: LD I, $10B ; Load 10B into I
  $F9C: LD I, $668 ; Load 668 into I
  $FAE: LD I, $4A8 ; Load 4A8 into I
  $FBE: LD I, $6FB ; Load 6FB into I
  $FFA: LD I, $C41 ; Load C41 into I

CONTROL FLOW ANALYSIS:
Jumps: 220
Calls: 129
Branches: 233
Loops: 122
Loop Structures:
  $220 -> $079 (backward jump)
  $224 -> $1D4 (backward jump)
  $2E0 -> $0EA (backward jump)
  $2E2 -> $29E (backward jump)
  $2EA -> $119 (backward jump)
  $2EC -> $1E8 (backward jump)
  $2EE -> $0BD (backward jump)
  $31C -> $042 (backward jump)
  $364 -> $0DD (backward jump)
  $3AC -> $08B (backward jump)
  $3BA -> $215 (backward jump)
  $422 -> $070 (backward jump)
  $4D2 -> $3B2 (backward jump)
  $522 -> $200 (backward jump)
  $532 -> $45D (backward jump)
  $576 -> $3BD (backward jump)
  $58E -> $35D (backward jump)
  $5B0 -> $0C9 (backward jump)
  $5E4 -> $034 (backward jump)
  $654 -> $27A (backward jump)
  $670 -> $045 (backward jump)
  $672 -> $45A (backward jump)
  $678 -> $678 (backward jump)
  $682 -> $240 (backward jump)
  $6E0 -> $5AB (backward jump)
  $6E6 -> $4F8 (backward jump)
  $71E -> $390 (backward jump)
  $780 -> $262 (backward jump)
  $78C -> $169 (backward jump)
  $796 -> $2B5 (backward jump)
  $798 -> $578 (backward jump)
  $7BE -> $7A6 (backward jump)
  $7C6 -> $699 (backward jump)
  $7D4 -> $698 (backward jump)
  $82C -> $3FC (backward jump)
  $83C -> $265 (backward jump)
  $860 -> $529 (backward jump)
  $87C -> $0AB (backward jump)
  $880 -> $732 (backward jump)
  $8C2 -> $68B (backward jump)
  $8C4 -> $405 (backward jump)
  $8CC -> $3AA (backward jump)
  $8FA -> $568 (backward jump)
  $932 -> $085 (backward jump)
  $96C -> $0F4 (backward jump)
  $970 -> $7C5 (backward jump)
  $97C -> $1D6 (backward jump)
  $99A -> $66A (backward jump)
  $9C6 -> $254 (backward jump)
  $9EC -> $922 (backward jump)
  $A5A -> $690 (backward jump)
  $A66 -> $6C7 (backward jump)
  $A70 -> $08B (backward jump)
  $A98 -> $05E (backward jump)
  $AB4 -> $50D (backward jump)
  $AE0 -> $44D (backward jump)
  $B0E -> $2F8 (backward jump)
  $B2A -> $62E (backward jump)
  $B3C -> $0D8 (backward jump)
  $B46 -> $6BB (backward jump)
  $B56 -> $AD7 (backward jump)
  $B58 -> $81E (backward jump)
  $B66 -> $580 (backward jump)
  $B70 -> $4D2 (backward jump)
  $B94 -> $760 (backward jump)
  $BAE -> $99E (backward jump)
  $BD6 -> $393 (backward jump)
  $C28 -> $1B8 (backward jump)
  $C30 -> $660 (backward jump)
  $C4E -> $476 (backward jump)
  $C56 -> $750 (backward jump)
  $C6C -> $9AC (backward jump)
  $C9E -> $B13 (backward jump)
  $CAA -> $786 (backward jump)
  $CC0 -> $A52 (backward jump)
  $CC6 -> $959 (backward jump)
  $CF0 -> $992 (backward jump)
  $CF4 -> $A15 (backward jump)
  $D06 -> $291 (backward jump)
  $D0A -> $4C5 (backward jump)
  $D38 -> $ACA (backward jump)
  $D44 -> $7B6 (backward jump)
  $D58 -> $C3F (backward jump)
  $D5E -> $C63 (backward jump)
  $D9C -> $0D1 (backward jump)
  $DAA -> $BEA (backward jump)
  $DC0 -> $349 (backward jump)
  $DFC -> $3BB (backward jump)
  $E0E -> $692 (backward jump)
  $E16 -> $8C8 (backward jump)
  $E2C -> $7C4 (backward jump)
  $E34 -> $DA3 (backward jump)
  $E38 -> $27B (backward jump)
  $E4E -> $AA9 (backward jump)
  $E5E -> $66E (backward jump)
  $E64 -> $E06 (backward jump)
  $E7A -> $DA0 (backward jump)
  $E7C -> $3F1 (backward jump)
  $EC6 -> $D82 (backward jump)
  $ED0 -> $969 (backward jump)
  $ED2 -> $857 (backward jump)
  $ED4 -> $47E (backward jump)
  $EE0 -> $AD1 (backward jump)
  $EE2 -> $B20 (backward jump)
  $F1E -> $8A4 (backward jump)
  $F2A -> $C0A (backward jump)
  $F46 -> $474 (backward jump)
  $F56 -> $23C (backward jump)
  $F66 -> $5B3 (backward jump)
  $F70 -> $55E (backward jump)
  $F74 -> $5E5 (backward jump)
  $F80 -> $801 (backward jump)
  $F92 -> $215 (backward jump)
  $F94 -> $E3D (backward jump)
  $F98 -> $22B (backward jump)
  $FC4 -> $2FA (backward jump)
  $FCA -> $CA5 (backward jump)
  $FCC -> $FB6 (backward jump)
  $FE8 -> $C66 (backward jump)
  $FEA -> $C7D (backward jump)
  $FF0 -> $492 (backward jump)
  $FF6 -> $1D0 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $666A   LD       V6, #6A         ; Load 106 into V6
$202    $B898   JP       V0, $898        ; Jump to V0 + 898
$204    $E68A   UNKNOWN  $E68A           ; Unknown Exxx instruction
$206    $0E01   SYS      $E01            ; System call to E01
$208    $0369   SYS      $369            ; System call to 369
$20A    $63D8   LD       V3, #D8         ; Load 216 into V3
$20C    $E1CB   UNKNOWN  $E1CB           ; Unknown Exxx instruction
$20E    $2828   CALL     $828            ; Call subroutine at 828
$210    $A9EA   LD       I, $9EA         ; Load 9EA into I
$212    $A233   LD       I, $233         ; Load 233 into I
$214    $DC44   DRW      VC, V4, #4      ; Draw 4-byte sprite at VC, V4
$216    $E431   UNKNOWN  $E431           ; Unknown Exxx instruction
$218    $D73F   DRW      V7, V3, #F      ; Draw 15-byte sprite at V7, V3
$21A    $FCE0   UNKNOWN  FCE0            ; Unknown Fxxx instruction
$21C    $6A6E   LD       VA, #6E         ; Load 110 into VA
$21E    $2B8E   CALL     $B8E            ; Call subroutine at B8E
$220    $1079   JP       $079            ; Jump to 079
$222    $C89D   RND      V8, #9D         ; V8 = random & 9D
$224    $11D4   JP       $1D4            ; Jump to 1D4
$226    $8DB9   UNKNOWN  8DB9            ; Unknown 8xxx instruction
$228    $9831   UNKNOWN  $9831           ; Unknown 9xxx instruction
$22A    $643A   LD       V4, #3A         ; Load 58 into V4
$22C    $E2FC   UNKNOWN  $E2FC           ; Unknown Exxx instruction
$22E    $0D22   SYS      $D22            ; System call to D22
$230    $848A   UNKNOWN  848A            ; Unknown 8xxx instruction
$232    $ADEE   LD       I, $DEE         ; Load DEE into I
$234    $E5EF   UNKNOWN  $E5EF           ; Unknown Exxx instruction
$236    $5A3D   UNKNOWN  $5A3D           ; Unknown 5xxx instruction
$238    $59C0   SE       V9, VC          ; Skip if V9 == VC
$23A    $7CC5   ADD      VC, #C5         ; Add 197 to VC
$23C    $6BEC   LD       VB, #EC         ; Load 236 into VB
$23E    $49A6   SNE      V9, #A6         ; Skip if V9 != 166
$240    $8ECB   UNKNOWN  8ECB            ; Unknown 8xxx instruction
$242    $351D   SE       V5, #1D         ; Skip if V5 == 29
$244    $7659   ADD      V6, #59         ; Add 89 to V6
$246    $013E   SYS      $13E            ; System call to 13E
$248    $9EC5   UNKNOWN  $9EC5           ; Unknown 9xxx instruction
$24A    $AC79   LD       I, $C79         ; Load C79 into I
$24C    $0ED9   SYS      $ED9            ; System call to ED9
$24E    $8F65   SUB      VF, V6          ; VF -= V6, VF = !borrow
$250    $72BC   ADD      V2, #BC         ; Add 188 to V2
$252    $B701   JP       V0, $701        ; Jump to V0 + 701
$254    $D76B   DRW      V7, V6, #B      ; Draw 11-byte sprite at V7, V6
$256    $889B   UNKNOWN  889B            ; Unknown 8xxx instruction
$258    $AED1   LD       I, $ED1         ; Load ED1 into I
$25A    $0A23   SYS      $A23            ; System call to A23
$25C    $2045   CALL     $045            ; Call subroutine at 045
$25E    $98D5   UNKNOWN  $98D5           ; Unknown 9xxx instruction
$260    $E8FA   UNKNOWN  $E8FA           ; Unknown Exxx instruction
$262    $E216   UNKNOWN  $E216           ; Unknown Exxx instruction
$264    $8E3B   UNKNOWN  8E3B            ; Unknown 8xxx instruction
$266    $32D9   SE       V2, #D9         ; Skip if V2 == 217
$268    $3AFD   SE       VA, #FD         ; Skip if VA == 253
$26A    $4551   SNE      V5, #51         ; Skip if V5 != 81
$26C    $D697   DRW      V6, V9, #7      ; Draw 7-byte sprite at V6, V9
$26E    $F913   UNKNOWN  F913            ; Unknown Fxxx instruction
$270    $0FB0   SYS      $FB0            ; System call to FB0
$272    $8FD7   SUBN     VF, VD          ; VF = VD - VF, VF = !borrow
$274    $7DC5   ADD      VD, #C5         ; Add 197 to VD
$276    $3985   SE       V9, #85         ; Skip if V9 == 133
$278    $81B7   SUBN     V1, VB          ; V1 = VB - V1, VF = !borrow
$27A    $E65E   UNKNOWN  $E65E           ; Unknown Exxx instruction
$27C    $E59E   SKP      V5              ; Skip if key V5 pressed
$27E    $B31D   JP       V0, $31D        ; Jump to V0 + 31D
$280    $9A45   UNKNOWN  $9A45           ; Unknown 9xxx instruction
$282    $BD69   JP       V0, $D69        ; Jump to V0 + D69
$284    $F196   UNKNOWN  F196            ; Unknown Fxxx instruction
$286    $6991   LD       V9, #91         ; Load 145 into V9
$288    $41E9   SNE      V1, #E9         ; Skip if V1 != 233
$28A    $E3B7   UNKNOWN  $E3B7           ; Unknown Exxx instruction
$28C    $4D88   SNE      VD, #88         ; Skip if VD != 136
$28E    $A00A   LD       I, $00A         ; Load 00A into I
$290    $A3B7   LD       I, $3B7         ; Load 3B7 into I
$292    $1533   JP       $533            ; Jump to 533
$294    $9BCE   UNKNOWN  $9BCE           ; Unknown 9xxx instruction
$296    $7DEB   ADD      VD, #EB         ; Add 235 to VD
$298    $F6CE   UNKNOWN  F6CE            ; Unknown Fxxx instruction
$29A    $3174   SE       V1, #74         ; Skip if V1 == 116
$29C    $2806   CALL     $806            ; Call subroutine at 806
$29E    $5A33   UNKNOWN  $5A33           ; Unknown 5xxx instruction
$2A0    $9725   UNKNOWN  $9725           ; Unknown 9xxx instruction
$2A2    $AEF0   LD       I, $EF0         ; Load EF0 into I
$2A4    $7878   ADD      V8, #78         ; Add 120 to V8
$2A6    $19EE   JP       $9EE            ; Jump to 9EE
$2A8    $949A   UNKNOWN  $949A           ; Unknown 9xxx instruction
$2AA    $1464   JP       $464            ; Jump to 464
$2AC    $44A2   SNE      V4, #A2         ; Skip if V4 != 162
$2AE    $748B   ADD      V4, #8B         ; Add 139 to V4
$2B0    $7354   ADD      V3, #54         ; Add 84 to V3
$2B2    $1C76   JP       $C76            ; Jump to C76
$2B4    $466A   SNE      V6, #6A         ; Skip if V6 != 106
$2B6    $91B0   SNE      V1, VB          ; Skip if V1 != VB
$2B8    $2B9C   CALL     $B9C            ; Call subroutine at B9C
$2BA    $EEA0   UNKNOWN  $EEA0           ; Unknown Exxx instruction
$2BC    $C0D9   RND      V0, #D9         ; V0 = random & D9
$2BE    $6EA0   LD       VE, #A0         ; Load 160 into VE
$2C0    $932D   UNKNOWN  $932D           ; Unknown 9xxx instruction
$2C2    $A5D2   LD       I, $5D2         ; Load 5D2 into I
$2C4    $B3CB   JP       V0, $3CB        ; Jump to V0 + 3CB
$2C6    $4D0F   SNE      VD, #0F         ; Skip if VD != 15
$2C8    $54EF   UNKNOWN  $54EF           ; Unknown 5xxx instruction
$2CA    $B533   JP       V0, $533        ; Jump to V0 + 533
$2CC    $3F45   SE       VF, #45         ; Skip if VF == 69
$2CE    $8152   AND      V1, V5          ; V1 &= V5
$2D0    $6C36   LD       VC, #36         ; Load 54 into VC
$2D2    $69E5   LD       V9, #E5         ; Load 229 into V9
$2D4    $777E   ADD      V7, #7E         ; Add 126 to V7
$2D6    $03E0   SYS      $3E0            ; System call to 3E0
$2D8    $4172   SNE      V1, #72         ; Skip if V1 != 114
$2DA    $D9C5   DRW      V9, VC, #5      ; Draw 5-byte sprite at V9, VC
$2DC    $5C79   UNKNOWN  $5C79           ; Unknown 5xxx instruction
$2DE    $E7A3   UNKNOWN  $E7A3           ; Unknown Exxx instruction
$2E0    $B0EA   JP       V0, $0EA        ; Jump to V0 + 0EA
$2E2    $129E   JP       $29E            ; Jump to 29E
$2E4    $7749   ADD      V7, #49         ; Add 73 to V7
$2E6    $D5DD   DRW      V5, VD, #D      ; Draw 13-byte sprite at V5, VD
$2E8    $EE91   UNKNOWN  $EE91           ; Unknown Exxx instruction
$2EA    $1119   JP       $119            ; Jump to 119
$2EC    $11E8   JP       $1E8            ; Jump to 1E8
$2EE    $B0BD   JP       V0, $0BD        ; Jump to V0 + 0BD
$2F0    $45A2   SNE      V5, #A2         ; Skip if V5 != 162
$2F2    $2DA3   CALL     $DA3            ; Call subroutine at DA3
$2F4    $BB43   JP       V0, $B43        ; Jump to V0 + B43
$2F6    $941D   UNKNOWN  $941D           ; Unknown 9xxx instruction
$2F8    $3B6C   SE       VB, #6C         ; Skip if VB == 108
$2FA    $041D   SYS      $41D            ; System call to 41D
$2FC    $F788   UNKNOWN  F788            ; Unknown Fxxx instruction
$2FE    $0439   SYS      $439            ; System call to 439
$300    $2D3D   CALL     $D3D            ; Call subroutine at D3D
$302    $4072   SNE      V0, #72         ; Skip if V0 != 114
$304    $87B3   XOR      V7, VB          ; V7 ^= VB
$306    $CEF2   RND      VE, #F2         ; VE = random & F2
$308    $7E68   ADD      VE, #68         ; Add 104 to VE
$30A    $2596   CALL     $596            ; Call subroutine at 596
$30C    $D035   DRW      V0, V3, #5      ; Draw 5-byte sprite at V0, V3
$30E    $EF33   UNKNOWN  $EF33           ; Unknown Exxx instruction
$310    $CBC2   RND      VB, #C2         ; VB = random & C2
$312    $C059   RND      V0, #59         ; V0 = random & 59
$314    $1912   JP       $912            ; Jump to 912
$316    $8FA3   XOR      VF, VA          ; VF ^= VA
$318    $DC84   DRW      VC, V8, #4      ; Draw 4-byte sprite at VC, V8
$31A    $C004   RND      V0, #04         ; V0 = random & 04
$31C    $B042   JP       V0, $042        ; Jump to V0 + 042
$31E    $99DE   UNKNOWN  $99DE           ; Unknown 9xxx instruction
$320    $F97F   UNKNOWN  F97F            ; Unknown Fxxx instruction
$322    $F946   UNKNOWN  F946            ; Unknown Fxxx instruction
$324    $D391   DRW      V3, V9, #1      ; Draw 1-byte sprite at V3, V9
$326    $8D6D   UNKNOWN  8D6D            ; Unknown 8xxx instruction
$328    $ECCF   UNKNOWN  $ECCF           ; Unknown Exxx instruction
$32A    $9561   UNKNOWN  $9561           ; Unknown 9xxx instruction
$32C    $6CE4   LD       VC, #E4         ; Load 228 into VC
$32E    $F7B1   UNKNOWN  F7B1            ; Unknown Fxxx instruction
$330    $9442   UNKNOWN  $9442           ; Unknown 9xxx instruction
$332    $F1D3   UNKNOWN  F1D3            ; Unknown Fxxx instruction
$334    $ACFB   LD       I, $CFB         ; Load CFB into I
$336    $7D62   ADD      VD, #62         ; Add 98 to VD
$338    $797B   ADD      V9, #7B         ; Add 123 to V9
$33A    $CEAA   RND      VE, #AA         ; VE = random & AA
$33C    $3AC6   SE       VA, #C6         ; Skip if VA == 198
$33E    $87B4   ADD      V7, VB          ; V7 += VB, VF = carry
$340    $8651   OR       V6, V5          ; V6 |= V5
$342    $84C9   UNKNOWN  84C9            ; Unknown 8xxx instruction
$344    $2F85   CALL     $F85            ; Call subroutine at F85
$346    $4BA6   SNE      VB, #A6         ; Skip if VB != 166
$348    $F814   UNKNOWN  F814            ; Unknown Fxxx instruction
$34A    $18BD   JP       $8BD            ; Jump to 8BD
$34C    $C8B3   RND      V8, #B3         ; V8 = random & B3
$34E    $9A6F   UNKNOWN  $9A6F           ; Unknown 9xxx instruction
$350    $DD7A   DRW      VD, V7, #A      ; Draw 10-byte sprite at VD, V7
$352    $CD73   RND      VD, #73         ; VD = random & 73
$354    $0B4C   SYS      $B4C            ; System call to B4C
$356    $81FA   UNKNOWN  81FA            ; Unknown 8xxx instruction
$358    $7660   ADD      V6, #60         ; Add 96 to V6
$35A    $6079   LD       V0, #79         ; Load 121 into V0
$35C    $FC07   LD       VC, DT          ; VC = delay timer
$35E    $279D   CALL     $79D            ; Call subroutine at 79D
$360    $8E8D   UNKNOWN  8E8D            ; Unknown 8xxx instruction
$362    $9345   UNKNOWN  $9345           ; Unknown 9xxx instruction
$364    $B0DD   JP       V0, $0DD        ; Jump to V0 + 0DD
$366    $AEB6   LD       I, $EB6         ; Load EB6 into I
$368    $F644   UNKNOWN  F644            ; Unknown Fxxx instruction
$36A    $5B0D   UNKNOWN  $5B0D           ; Unknown 5xxx instruction
$36C    $C30A   RND      V3, #0A         ; V3 = random & 0A
$36E    $390F   SE       V9, #0F         ; Skip if V9 == 15
$370    $7D19   ADD      VD, #19         ; Add 25 to VD
$372    $7578   ADD      V5, #78         ; Add 120 to V5
$374    $1B15   JP       $B15            ; Jump to B15
$376    $BA95   JP       V0, $A95        ; Jump to V0 + A95
$378    $E402   UNKNOWN  $E402           ; Unknown Exxx instruction
$37A    $924C   UNKNOWN  $924C           ; Unknown 9xxx instruction
$37C    $2D12   CALL     $D12            ; Call subroutine at D12
$37E    $4CCD   SNE      VC, #CD         ; Skip if VC != 205
$380    $148D   JP       $48D            ; Jump to 48D
$382    $3A3A   SE       VA, #3A         ; Skip if VA == 58
$384    $282C   CALL     $82C            ; Call subroutine at 82C
$386    $7A79   ADD      VA, #79         ; Add 121 to VA
$388    $0C5A   SYS      $C5A            ; System call to C5A
$38A    $4148   SNE      V1, #48         ; Skip if V1 != 72
$38C    $943E   UNKNOWN  $943E           ; Unknown 9xxx instruction
$38E    $9677   UNKNOWN  $9677           ; Unknown 9xxx instruction
$390    $7C24   ADD      VC, #24         ; Add 36 to VC
$392    $6A53   LD       VA, #53         ; Load 83 into VA
$394    $9EA9   UNKNOWN  $9EA9           ; Unknown 9xxx instruction
$396    $F6ED   UNKNOWN  F6ED            ; Unknown Fxxx instruction
$398    $E5C0   UNKNOWN  $E5C0           ; Unknown Exxx instruction
$39A    $7913   ADD      V9, #13         ; Add 19 to V9
$39C    $0FFE   SYS      $FFE            ; System call to FFE
$39E    $D3A6   DRW      V3, VA, #6      ; Draw 6-byte sprite at V3, VA
$3A0    $B606   JP       V0, $606        ; Jump to V0 + 606
$3A2    $CCBB   RND      VC, #BB         ; VC = random & BB
$3A4    $ADF8   LD       I, $DF8         ; Load DF8 into I
$3A6    $F4C8   UNKNOWN  F4C8            ; Unknown Fxxx instruction
$3A8    $1875   JP       $875            ; Jump to 875
$3AA    $3846   SE       V8, #46         ; Skip if V8 == 70
$3AC    $B08B   JP       V0, $08B        ; Jump to V0 + 08B
$3AE    $2A4F   CALL     $A4F            ; Call subroutine at A4F
$3B0    $499D   SNE      V9, #9D         ; Skip if V9 != 157
$3B2    $BD24   JP       V0, $D24        ; Jump to V0 + D24
$3B4    $7E9F   ADD      VE, #9F         ; Add 159 to VE
$3B6    $2058   CALL     $058            ; Call subroutine at 058
$3B8    $3090   SE       V0, #90         ; Skip if V0 == 144
$3BA    $1215   JP       $215            ; Jump to 215
$3BC    $EBDC   UNKNOWN  $EBDC           ; Unknown Exxx instruction
$3BE    $33BC   SE       V3, #BC         ; Skip if V3 == 188
$3C0    $F8CD   UNKNOWN  F8CD            ; Unknown Fxxx instruction
$3C2    $1D80   JP       $D80            ; Jump to D80
$3C4    $2975   CALL     $975            ; Call subroutine at 975
$3C6    $F3C7   UNKNOWN  F3C7            ; Unknown Fxxx instruction
$3C8    $F324   UNKNOWN  F324            ; Unknown Fxxx instruction
$3CA    $0F0D   SYS      $F0D            ; System call to F0D
$3CC    $C94B   RND      V9, #4B         ; V9 = random & 4B
$3CE    $BE6B   JP       V0, $E6B        ; Jump to V0 + E6B
$3D0    $CBC8   RND      VB, #C8         ; VB = random & C8
$3D2    $2955   CALL     $955            ; Call subroutine at 955
$3D4    $B9CF   JP       V0, $9CF        ; Jump to V0 + 9CF
$3D6    $941F   UNKNOWN  $941F           ; Unknown 9xxx instruction
$3D8    $875E   SHL      V7              ; V7 <<= 1, VF = MSB
$3DA    $B4C2   JP       V0, $4C2        ; Jump to V0 + 4C2
$3DC    $B84F   JP       V0, $84F        ; Jump to V0 + 84F
$3DE    $AA9B   LD       I, $A9B         ; Load A9B into I
$3E0    $F475   UNKNOWN  F475            ; Unknown Fxxx instruction
$3E2    $69FD   LD       V9, #FD         ; Load 253 into V9
$3E4    $FA19   UNKNOWN  FA19            ; Unknown Fxxx instruction
$3E6    $5A42   UNKNOWN  $5A42           ; Unknown 5xxx instruction
$3E8    $8AE2   AND      VA, VE          ; VA &= VE
$3EA    $5B03   UNKNOWN  $5B03           ; Unknown 5xxx instruction
$3EC    $5802   UNKNOWN  $5802           ; Unknown 5xxx instruction
$3EE    $241D   CALL     $41D            ; Call subroutine at 41D
$3F0    $D2BB   DRW      V2, VB, #B      ; Draw 11-byte sprite at V2, VB
$3F2    $6E6D   LD       VE, #6D         ; Load 109 into VE
$3F4    $CA6D   RND      VA, #6D         ; VA = random & 6D
$3F6    $A9BD   LD       I, $9BD         ; Load 9BD into I
$3F8    $D5FE   DRW      V5, VF, #E      ; Draw 14-byte sprite at V5, VF
$3FA    $9F5F   UNKNOWN  $9F5F           ; Unknown 9xxx instruction
$3FC    $D10C   DRW      V1, V0, #C      ; Draw 12-byte sprite at V1, V0
$3FE    $9C50   SNE      VC, V5          ; Skip if VC != V5
$400    $5595   UNKNOWN  $5595           ; Unknown 5xxx instruction
$402    $2D2C   CALL     $D2C            ; Call subroutine at D2C
$404    $CE8F   RND      VE, #8F         ; VE = random & 8F
$406    $22EF   CALL     $2EF            ; Call subroutine at 2EF
$408    $5DDE   UNKNOWN  $5DDE           ; Unknown 5xxx instruction
$40A    $4EC4   SNE      VE, #C4         ; Skip if VE != 196
$40C    $6C01   LD       VC, #01         ; Load 1 into VC
$40E    $1693   JP       $693            ; Jump to 693
$410    $E832   UNKNOWN  $E832           ; Unknown Exxx instruction
$412    $23FA   CALL     $3FA            ; Call subroutine at 3FA
$414    $315D   SE       V1, #5D         ; Skip if V1 == 93
$416    $B491   JP       V0, $491        ; Jump to V0 + 491
$418    $39D1   SE       V9, #D1         ; Skip if V9 == 209
$41A    $BD19   JP       V0, $D19        ; Jump to V0 + D19
$41C    $3822   SE       V8, #22         ; Skip if V8 == 34
$41E    $CBD5   RND      VB, #D5         ; VB = random & D5
$420    $87F9   UNKNOWN  87F9            ; Unknown 8xxx instruction
$422    $1070   JP       $070            ; Jump to 070
$424    $7A10   ADD      VA, #10         ; Add 16 to VA
$426    $C5F4   RND      V5, #F4         ; V5 = random & F4
$428    $BCAF   JP       V0, $CAF        ; Jump to V0 + CAF
$42A    $5769   UNKNOWN  $5769           ; Unknown 5xxx instruction
$42C    $790A   ADD      V9, #0A         ; Add 10 to V9
$42E    $B6D5   JP       V0, $6D5        ; Jump to V0 + 6D5
$430    $8A2B   UNKNOWN  8A2B            ; Unknown 8xxx instruction
$432    $186F   JP       $86F            ; Jump to 86F
$434    $83A1   OR       V3, VA          ; V3 |= VA
$436    $4BEA   SNE      VB, #EA         ; Skip if VB != 234
$438    $4BAA   SNE      VB, #AA         ; Skip if VB != 170
$43A    $72E0   ADD      V2, #E0         ; Add 224 to V2
$43C    $A4CA   LD       I, $4CA         ; Load 4CA into I
$43E    $21A4   CALL     $1A4            ; Call subroutine at 1A4
$440    $E796   UNKNOWN  $E796           ; Unknown Exxx instruction
$442    $074D   SYS      $74D            ; System call to 74D
$444    $3A12   SE       VA, #12         ; Skip if VA == 18
$446    $AA87   LD       I, $A87         ; Load A87 into I
$448    $C307   RND      V3, #07         ; V3 = random & 07
$44A    $27D6   CALL     $7D6            ; Call subroutine at 7D6
$44C    $9F6E   UNKNOWN  $9F6E           ; Unknown 9xxx instruction
$44E    $431C   SNE      V3, #1C         ; Skip if V3 != 28
$450    $19D2   JP       $9D2            ; Jump to 9D2
$452    $E169   UNKNOWN  $E169           ; Unknown Exxx instruction
$454    $3DD6   SE       VD, #D6         ; Skip if VD == 214
$456    $8261   OR       V2, V6          ; V2 |= V6
$458    $8F8C   UNKNOWN  8F8C            ; Unknown 8xxx instruction
$45A    $1AAE   JP       $AAE            ; Jump to AAE
$45C    $CDBC   RND      VD, #BC         ; VD = random & BC
$45E    $EADB   UNKNOWN  $EADB           ; Unknown Exxx instruction
$460    $89FA   UNKNOWN  89FA            ; Unknown 8xxx instruction
$462    $FDF8   UNKNOWN  FDF8            ; Unknown Fxxx instruction
$464    $F7E5   UNKNOWN  F7E5            ; Unknown Fxxx instruction
$466    $1736   JP       $736            ; Jump to 736
$468    $6E57   LD       VE, #57         ; Load 87 into VE
$46A    $349F   SE       V4, #9F         ; Skip if V4 == 159
$46C    $912E   UNKNOWN  $912E           ; Unknown 9xxx instruction
$46E    $6012   LD       V0, #12         ; Load 18 into V0
$470    $2AFF   CALL     $AFF            ; Call subroutine at AFF
$472    $877C   UNKNOWN  877C            ; Unknown 8xxx instruction
$474    $6884   LD       V8, #84         ; Load 132 into V8
$476    $56D9   UNKNOWN  $56D9           ; Unknown 5xxx instruction
$478    $FEAC   UNKNOWN  FEAC            ; Unknown Fxxx instruction
$47A    $1616   JP       $616            ; Jump to 616
$47C    $F773   UNKNOWN  F773            ; Unknown Fxxx instruction
$47E    $800D   UNKNOWN  800D            ; Unknown 8xxx instruction
$480    $84AC   UNKNOWN  84AC            ; Unknown 8xxx instruction
$482    $1C7A   JP       $C7A            ; Jump to C7A
$484    $06D8   SYS      $6D8            ; System call to 6D8
$486    $9E9F   UNKNOWN  $9E9F           ; Unknown 9xxx instruction
$488    $780B   ADD      V8, #0B         ; Add 11 to V8
$48A    $8B40   LD       VB, V4          ; VB = V4
$48C    $E1D9   UNKNOWN  $E1D9           ; Unknown Exxx instruction
$48E    $D226   DRW      V2, V2, #6      ; Draw 6-byte sprite at V2, V2
$490    $2DEB   CALL     $DEB            ; Call subroutine at DEB
$492    $2F5A   CALL     $F5A            ; Call subroutine at F5A
$494    $2B03   CALL     $B03            ; Call subroutine at B03
$496    $83A1   OR       V3, VA          ; V3 |= VA
$498    $3B04   SE       VB, #04         ; Skip if VB == 4
$49A    $A27E   LD       I, $27E         ; Load 27E into I
$49C    $EC7B   UNKNOWN  $EC7B           ; Unknown Exxx instruction
$49E    $5313   UNKNOWN  $5313           ; Unknown 5xxx instruction
$4A0    $BBC4   JP       V0, $BC4        ; Jump to V0 + BC4
$4A2    $73F2   ADD      V3, #F2         ; Add 242 to V3
$4A4    $C4EA   RND      V4, #EA         ; V4 = random & EA
$4A6    $D1AB   DRW      V1, VA, #B      ; Draw 11-byte sprite at V1, VA
$4A8    $343B   SE       V4, #3B         ; Skip if V4 == 59
$4AA    $7FBB   ADD      VF, #BB         ; Add 187 to VF
$4AC    $9EE5   UNKNOWN  $9EE5           ; Unknown 9xxx instruction
$4AE    $4930   SNE      V9, #30         ; Skip if V9 != 48
$4B0    $CAFC   RND      VA, #FC         ; VA = random & FC
$4B2    $816E   SHL      V1              ; V1 <<= 1, VF = MSB
$4B4    $C464   RND      V4, #64         ; V4 = random & 64
$4B6    $A18B   LD       I, $18B         ; Load 18B into I
$4B8    $292D   CALL     $92D            ; Call subroutine at 92D
$4BA    $E43F   UNKNOWN  $E43F           ; Unknown Exxx instruction
$4BC    $F634   UNKNOWN  F634            ; Unknown Fxxx instruction
$4BE    $3584   SE       V5, #84         ; Skip if V5 == 132
$4C0    $E655   UNKNOWN  $E655           ; Unknown Exxx instruction
$4C2    $CD79   RND      VD, #79         ; VD = random & 79
$4C4    $58F9   UNKNOWN  $58F9           ; Unknown 5xxx instruction
$4C6    $B888   JP       V0, $888        ; Jump to V0 + 888
$4C8    $C309   RND      V3, #09         ; V3 = random & 09
$4CA    $BEA2   JP       V0, $EA2        ; Jump to V0 + EA2
$4CC    $2B3A   CALL     $B3A            ; Call subroutine at B3A
$4CE    $049C   SYS      $49C            ; System call to 49C
$4D0    $8635   SUB      V6, V3          ; V6 -= V3, VF = !borrow
$4D2    $13B2   JP       $3B2            ; Jump to 3B2
$4D4    $0D3C   SYS      $D3C            ; System call to D3C
$4D6    $4A8D   SNE      VA, #8D         ; Skip if VA != 141
$4D8    $2952   CALL     $952            ; Call subroutine at 952
$4DA    $C727   RND      V7, #27         ; V7 = random & 27
$4DC    $5D3C   UNKNOWN  $5D3C           ; Unknown 5xxx instruction
$4DE    $A2F3   LD       I, $2F3         ; Load 2F3 into I
$4E0    $8F7A   UNKNOWN  8F7A            ; Unknown 8xxx instruction
$4E2    $1E4A   JP       $E4A            ; Jump to E4A
$4E4    $9F80   SNE      VF, V8          ; Skip if VF != V8
$4E6    $A63F   LD       I, $63F         ; Load 63F into I
$4E8    $3E8F   SE       VE, #8F         ; Skip if VE == 143
$4EA    $56FC   UNKNOWN  $56FC           ; Unknown 5xxx instruction
$4EC    $BC06   JP       V0, $C06        ; Jump to V0 + C06
$4EE    $E985   UNKNOWN  $E985           ; Unknown Exxx instruction
$4F0    $2DA2   CALL     $DA2            ; Call subroutine at DA2
$4F2    $30A4   SE       V0, #A4         ; Skip if V0 == 164
$4F4    $73E1   ADD      V3, #E1         ; Add 225 to V3
$4F6    $7282   ADD      V2, #82         ; Add 130 to V2
$4F8    $4C90   SNE      VC, #90         ; Skip if VC != 144
$4FA    $CE36   RND      VE, #36         ; VE = random & 36
$4FC    $6995   LD       V9, #95         ; Load 149 into V9
$4FE    $9E4E   UNKNOWN  $9E4E           ; Unknown 9xxx instruction
$500    $7AF8   ADD      VA, #F8         ; Add 248 to VA
$502    $4B16   SNE      VB, #16         ; Skip if VB != 22
$504    $2A0F   CALL     $A0F            ; Call subroutine at A0F
$506    $A340   LD       I, $340         ; Load 340 into I
$508    $6ED8   LD       VE, #D8         ; Load 216 into VE
$50A    $6803   LD       V8, #03         ; Load 3 into V8
$50C    $0F84   SYS      $F84            ; System call to F84
$50E    $2EE4   CALL     $EE4            ; Call subroutine at EE4
$510    $3FCA   SE       VF, #CA         ; Skip if VF == 202
$512    $8982   AND      V9, V8          ; V9 &= V8
$514    $6ABD   LD       VA, #BD         ; Load 189 into VA
$516    $F426   UNKNOWN  F426            ; Unknown Fxxx instruction
$518    $3690   SE       V6, #90         ; Skip if V6 == 144
$51A    $5C9D   UNKNOWN  $5C9D           ; Unknown 5xxx instruction
$51C    $806E   SHL      V0              ; V0 <<= 1, VF = MSB
$51E    $6080   LD       V0, #80         ; Load 128 into V0
$520    $A93C   LD       I, $93C         ; Load 93C into I
$522    $1200   JP       $200            ; Jump to 200
$524    $97C4   UNKNOWN  $97C4           ; Unknown 9xxx instruction
$526    $237B   CALL     $37B            ; Call subroutine at 37B
$528    $3102   SE       V1, #02         ; Skip if V1 == 2
$52A    $70E1   ADD      V0, #E1         ; Add 225 to V0
$52C    $FC53   UNKNOWN  FC53            ; Unknown Fxxx instruction
$52E    $D7DA   DRW      V7, VD, #A      ; Draw 10-byte sprite at V7, VD
$530    $4394   SNE      V3, #94         ; Skip if V3 != 148
$532    $145D   JP       $45D            ; Jump to 45D
$534    $AAAD   LD       I, $AAD         ; Load AAD into I
$536    $45EB   SNE      V5, #EB         ; Skip if V5 != 235
$538    $384C   SE       V8, #4C         ; Skip if V8 == 76
$53A    $60A4   LD       V0, #A4         ; Load 164 into V0
$53C    $92A6   UNKNOWN  $92A6           ; Unknown 9xxx instruction
$53E    $7C23   ADD      VC, #23         ; Add 35 to VC
$540    $9998   UNKNOWN  $9998           ; Unknown 9xxx instruction
$542    $D16E   DRW      V1, V6, #E      ; Draw 14-byte sprite at V1, V6
$544    $C56B   RND      V5, #6B         ; V5 = random & 6B
$546    $7DA2   ADD      VD, #A2         ; Add 162 to VD
$548    $ACBA   LD       I, $CBA         ; Load CBA into I
$54A    $EAF1   UNKNOWN  $EAF1           ; Unknown Exxx instruction
$54C    $BA3A   JP       V0, $A3A        ; Jump to V0 + A3A
$54E    $9575   UNKNOWN  $9575           ; Unknown 9xxx instruction
$550    $3456   SE       V4, #56         ; Skip if V4 == 86
$552    $0966   SYS      $966            ; System call to 966
$554    $6DF3   LD       VD, #F3         ; Load 243 into VD
$556    $B95E   JP       V0, $95E        ; Jump to V0 + 95E
$558    $B767   JP       V0, $767        ; Jump to V0 + 767
$55A    $C616   RND      V6, #16         ; V6 = random & 16
$55C    $6562   LD       V5, #62         ; Load 98 into V5
$55E    $8DB7   SUBN     VD, VB          ; VD = VB - VD, VF = !borrow
$560    $BCD3   JP       V0, $CD3        ; Jump to V0 + CD3
$562    $63F1   LD       V3, #F1         ; Load 241 into V3
$564    $4754   SNE      V7, #54         ; Skip if V7 != 84
$566    $0335   SYS      $335            ; System call to 335
$568    $C6D2   RND      V6, #D2         ; V6 = random & D2
$56A    $1F5F   JP       $F5F            ; Jump to F5F
$56C    $5269   UNKNOWN  $5269           ; Unknown 5xxx instruction
$56E    $3F81   SE       VF, #81         ; Skip if VF == 129
$570    $DFDE   DRW      VF, VD, #E      ; Draw 14-byte sprite at VF, VD
$572    $F14D   UNKNOWN  F14D            ; Unknown Fxxx instruction
$574    $9CB4   UNKNOWN  $9CB4           ; Unknown 9xxx instruction
$576    $B3BD   JP       V0, $3BD        ; Jump to V0 + 3BD
$578    $8E6B   UNKNOWN  8E6B            ; Unknown 8xxx instruction
$57A    $82A6   SHR      V2              ; V2 >>= 1, VF = LSB
$57C    $25DF   CALL     $5DF            ; Call subroutine at 5DF
$57E    $87C5   SUB      V7, VC          ; V7 -= VC, VF = !borrow
$580    $0508   SYS      $508            ; System call to 508
$582    $BABE   JP       V0, $ABE        ; Jump to V0 + ABE
$584    $2DEA   CALL     $DEA            ; Call subroutine at DEA
$586    $2BB5   CALL     $BB5            ; Call subroutine at BB5
$588    $AF57   LD       I, $F57         ; Load F57 into I
$58A    $72FD   ADD      V2, #FD         ; Add 253 to V2
$58C    $ACB8   LD       I, $CB8         ; Load CB8 into I
$58E    $135D   JP       $35D            ; Jump to 35D
$590    $A54E   LD       I, $54E         ; Load 54E into I
$592    $AF8B   LD       I, $F8B         ; Load F8B into I
$594    $66FC   LD       V6, #FC         ; Load 252 into V6
$596    $8719   UNKNOWN  8719            ; Unknown 8xxx instruction
$598    $27E2   CALL     $7E2            ; Call subroutine at 7E2
$59A    $FD51   UNKNOWN  FD51            ; Unknown Fxxx instruction
$59C    $927A   UNKNOWN  $927A           ; Unknown 9xxx instruction
$59E    $C034   RND      V0, #34         ; V0 = random & 34
$5A0    $8B22   AND      VB, V2          ; VB &= V2
$5A2    $627B   LD       V2, #7B         ; Load 123 into V2
$5A4    $9AA9   UNKNOWN  $9AA9           ; Unknown 9xxx instruction
$5A6    $8B53   XOR      VB, V5          ; VB ^= V5
$5A8    $6812   LD       V8, #12         ; Load 18 into V8
$5AA    $6A97   LD       VA, #97         ; Load 151 into VA
$5AC    $599A   UNKNOWN  $599A           ; Unknown 5xxx instruction
$5AE    $51FB   UNKNOWN  $51FB           ; Unknown 5xxx instruction
$5B0    $10C9   JP       $0C9            ; Jump to 0C9
$5B2    $9EAF   UNKNOWN  $9EAF           ; Unknown 9xxx instruction
$5B4    $4D88   SNE      VD, #88         ; Skip if VD != 136
$5B6    $4B13   SNE      VB, #13         ; Skip if VB != 19
$5B8    $0E69   SYS      $E69            ; System call to E69
$5BA    $7D80   ADD      VD, #80         ; Add 128 to VD
$5BC    $776D   ADD      V7, #6D         ; Add 109 to V7
$5BE    $4FB3   SNE      VF, #B3         ; Skip if VF != 179
$5C0    $A761   LD       I, $761         ; Load 761 into I
$5C2    $89D5   SUB      V9, VD          ; V9 -= VD, VF = !borrow
$5C4    $9A2D   UNKNOWN  $9A2D           ; Unknown 9xxx instruction
$5C6    $7976   ADD      V9, #76         ; Add 118 to V9
$5C8    $B854   JP       V0, $854        ; Jump to V0 + 854
$5CA    $E71C   UNKNOWN  $E71C           ; Unknown Exxx instruction
$5CC    $D738   DRW      V7, V3, #8      ; Draw 8-byte sprite at V7, V3
$5CE    $96AE   UNKNOWN  $96AE           ; Unknown 9xxx instruction
$5D0    $6438   LD       V4, #38         ; Load 56 into V4
$5D2    $1D2E   JP       $D2E            ; Jump to D2E
$5D4    $A28F   LD       I, $28F         ; Load 28F into I
$5D6    $DC9A   DRW      VC, V9, #A      ; Draw 10-byte sprite at VC, V9
$5D8    $BCCF   JP       V0, $CCF        ; Jump to V0 + CCF
$5DA    $3180   SE       V1, #80         ; Skip if V1 == 128
$5DC    $E538   UNKNOWN  $E538           ; Unknown Exxx instruction
$5DE    $6D88   LD       VD, #88         ; Load 136 into VD
$5E0    $2BB2   CALL     $BB2            ; Call subroutine at BB2
$5E2    $FF19   UNKNOWN  FF19            ; Unknown Fxxx instruction
$5E4    $B034   JP       V0, $034        ; Jump to V0 + 034
$5E6    $DF3E   DRW      VF, V3, #E      ; Draw 14-byte sprite at VF, V3
$5E8    $7C6B   ADD      VC, #6B         ; Add 107 to VC
$5EA    $EB46   UNKNOWN  $EB46           ; Unknown Exxx instruction
$5EC    $05BF   SYS      $5BF            ; System call to 5BF
$5EE    $F51A   UNKNOWN  F51A            ; Unknown Fxxx instruction
$5F0    $94EC   UNKNOWN  $94EC           ; Unknown 9xxx instruction
$5F2    $4CED   SNE      VC, #ED         ; Skip if VC != 237
$5F4    $839C   UNKNOWN  839C            ; Unknown 8xxx instruction
$5F6    $E97D   UNKNOWN  $E97D           ; Unknown Exxx instruction
$5F8    $4832   SNE      V8, #32         ; Skip if V8 != 50
$5FA    $AAC1   LD       I, $AC1         ; Load AC1 into I
$5FC    $AB00   LD       I, $B00         ; Load B00 into I
$5FE    $A95D   LD       I, $95D         ; Load 95D into I
$600    $2CCD   CALL     $CCD            ; Call subroutine at CCD
$602    $5B5E   UNKNOWN  $5B5E           ; Unknown 5xxx instruction
$604    $4B5B   SNE      VB, #5B         ; Skip if VB != 91
$606    $33C8   SE       V3, #C8         ; Skip if V3 == 200
$608    $48E6   SNE      V8, #E6         ; Skip if V8 != 230
$60A    $D55F   DRW      V5, V5, #F      ; Draw 15-byte sprite at V5, V5
$60C    $6E68   LD       VE, #68         ; Load 104 into VE
$60E    $1E66   JP       $E66            ; Jump to E66
$610    $79F9   ADD      V9, #F9         ; Add 249 to V9
$612    $65A0   LD       V5, #A0         ; Load 160 into V5
$614    $61D1   LD       V1, #D1         ; Load 209 into V1
$616    $4F60   SNE      VF, #60         ; Skip if VF != 96
$618    $F99F   UNKNOWN  F99F            ; Unknown Fxxx instruction
$61A    $2645   CALL     $645            ; Call subroutine at 645
$61C    $7136   ADD      V1, #36         ; Add 54 to V1
$61E    $208A   CALL     $08A            ; Call subroutine at 08A
$620    $47D3   SNE      V7, #D3         ; Skip if V7 != 211
$622    $2B2B   CALL     $B2B            ; Call subroutine at B2B
$624    $2479   CALL     $479            ; Call subroutine at 479
$626    $4DA4   SNE      VD, #A4         ; Skip if VD != 164
$628    $5841   UNKNOWN  $5841           ; Unknown 5xxx instruction
$62A    $08AC   SYS      $8AC            ; System call to 8AC
$62C    $2BB7   CALL     $BB7            ; Call subroutine at BB7
$62E    $D37D   DRW      V3, V7, #D      ; Draw 13-byte sprite at V3, V7
$630    $EDE4   UNKNOWN  $EDE4           ; Unknown Exxx instruction
$632    $7186   ADD      V1, #86         ; Add 134 to V1
$634    $CA53   RND      VA, #53         ; VA = random & 53
$636    $A0BE   LD       I, $0BE         ; Load 0BE into I
$638    $A517   LD       I, $517         ; Load 517 into I
$63A    $A8FB   LD       I, $8FB         ; Load 8FB into I
$63C    $5E59   UNKNOWN  $5E59           ; Unknown 5xxx instruction
$63E    $0812   SYS      $812            ; System call to 812
$640    $266E   CALL     $66E            ; Call subroutine at 66E
$642    $1710   JP       $710            ; Jump to 710
$644    $6582   LD       V5, #82         ; Load 130 into V5
$646    $19EF   JP       $9EF            ; Jump to 9EF
$648    $5760   SE       V7, V6          ; Skip if V7 == V6
$64A    $9FC6   UNKNOWN  $9FC6           ; Unknown 9xxx instruction
$64C    $E31F   UNKNOWN  $E31F           ; Unknown Exxx instruction
$64E    $2D9B   CALL     $D9B            ; Call subroutine at D9B
$650    $300D   SE       V0, #0D         ; Skip if V0 == 13
$652    $1924   JP       $924            ; Jump to 924
$654    $B27A   JP       V0, $27A        ; Jump to V0 + 27A
$656    $8588   UNKNOWN  8588            ; Unknown 8xxx instruction
$658    $B973   JP       V0, $973        ; Jump to V0 + 973
$65A    $D1D9   DRW      V1, VD, #9      ; Draw 9-byte sprite at V1, VD
$65C    $ADE2   LD       I, $DE2         ; Load DE2 into I
$65E    $8B61   OR       VB, V6          ; VB |= V6
$660    $43DB   SNE      V3, #DB         ; Skip if V3 != 219
$662    $00E0   CLS                      ; Clear display
$664    $C86E   RND      V8, #6E         ; V8 = random & 6E
$666    $2119   CALL     $119            ; Call subroutine at 119
$668    $DB39   DRW      VB, V3, #9      ; Draw 9-byte sprite at VB, V3
$66A    $CBEF   RND      VB, #EF         ; VB = random & EF
$66C    $99AA   UNKNOWN  $99AA           ; Unknown 9xxx instruction
$66E    $3A65   SE       VA, #65         ; Skip if VA == 101
$670    $1045   JP       $045            ; Jump to 045
$672    $B45A   JP       V0, $45A        ; Jump to V0 + 45A
$674    $3F0D   SE       VF, #0D         ; Skip if VF == 13
$676    $BF72   JP       V0, $F72        ; Jump to V0 + F72
$678    $B678   JP       V0, $678        ; Jump to V0 + 678
$67A    $A534   LD       I, $534         ; Load 534 into I
$67C    $EA17   UNKNOWN  $EA17           ; Unknown Exxx instruction
$67E    $822A   UNKNOWN  822A            ; Unknown 8xxx instruction
$680    $CAF2   RND      VA, #F2         ; VA = random & F2
$682    $1240   JP       $240            ; Jump to 240
$684    $E080   UNKNOWN  $E080           ; Unknown Exxx instruction
$686    $3AD4   SE       VA, #D4         ; Skip if VA == 212
$688    $56F2   UNKNOWN  $56F2           ; Unknown 5xxx instruction
$68A    $AE9C   LD       I, $E9C         ; Load E9C into I
$68C    $FC54   UNKNOWN  FC54            ; Unknown Fxxx instruction
$68E    $7762   ADD      V7, #62         ; Add 98 to V7
$690    $7CF8   ADD      VC, #F8         ; Add 248 to VC
$692    $AA6E   LD       I, $A6E         ; Load A6E into I
$694    $DDC5   DRW      VD, VC, #5      ; Draw 5-byte sprite at VD, VC
$696    $C651   RND      V6, #51         ; V6 = random & 51
$698    $44A0   SNE      V4, #A0         ; Skip if V4 != 160
$69A    $9C58   UNKNOWN  $9C58           ; Unknown 9xxx instruction
$69C    $3835   SE       V8, #35         ; Skip if V8 == 53
$69E    $FC16   UNKNOWN  FC16            ; Unknown Fxxx instruction
$6A0    $1D7B   JP       $D7B            ; Jump to D7B
$6A2    $49D1   SNE      V9, #D1         ; Skip if V9 != 209
$6A4    $9D45   UNKNOWN  $9D45           ; Unknown 9xxx instruction
$6A6    $A31A   LD       I, $31A         ; Load 31A into I
$6A8    $4820   SNE      V8, #20         ; Skip if V8 != 32
$6AA    $953F   UNKNOWN  $953F           ; Unknown 9xxx instruction
$6AC    $78B8   ADD      V8, #B8         ; Add 184 to V8
$6AE    $2B6D   CALL     $B6D            ; Call subroutine at B6D
$6B0    $B7F7   JP       V0, $7F7        ; Jump to V0 + 7F7
$6B2    $371C   SE       V7, #1C         ; Skip if V7 == 28
$6B4    $66F4   LD       V6, #F4         ; Load 244 into V6
$6B6    $7448   ADD      V4, #48         ; Add 72 to V4
$6B8    $F956   UNKNOWN  F956            ; Unknown Fxxx instruction
$6BA    $8CF0   LD       VC, VF          ; VC = VF
$6BC    $EC74   UNKNOWN  $EC74           ; Unknown Exxx instruction
$6BE    $2998   CALL     $998            ; Call subroutine at 998
$6C0    $2B73   CALL     $B73            ; Call subroutine at B73
$6C2    $F5FE   UNKNOWN  F5FE            ; Unknown Fxxx instruction
$6C4    $A28F   LD       I, $28F         ; Load 28F into I
$6C6    $A288   LD       I, $288         ; Load 288 into I
$6C8    $AFBE   LD       I, $FBE         ; Load FBE into I
$6CA    $805C   UNKNOWN  805C            ; Unknown 8xxx instruction
$6CC    $C529   RND      V5, #29         ; V5 = random & 29
$6CE    $2691   CALL     $691            ; Call subroutine at 691
$6D0    $CDA9   RND      VD, #A9         ; VD = random & A9
$6D2    $D6A5   DRW      V6, VA, #5      ; Draw 5-byte sprite at V6, VA
$6D4    $79E5   ADD      V9, #E5         ; Add 229 to V9
$6D6    $2451   CALL     $451            ; Call subroutine at 451
$6D8    $9C2B   UNKNOWN  $9C2B           ; Unknown 9xxx instruction
$6DA    $0D0D   SYS      $D0D            ; System call to D0D
$6DC    $3A3A   SE       VA, #3A         ; Skip if VA == 58
$6DE    $C57B   RND      V5, #7B         ; V5 = random & 7B
$6E0    $15AB   JP       $5AB            ; Jump to 5AB
$6E2    $2E2E   CALL     $E2E            ; Call subroutine at E2E
$6E4    $FCF3   UNKNOWN  FCF3            ; Unknown Fxxx instruction
$6E6    $14F8   JP       $4F8            ; Jump to 4F8
$6E8    $5893   UNKNOWN  $5893           ; Unknown 5xxx instruction
$6EA    $C1C5   RND      V1, #C5         ; V1 = random & C5
$6EC    $E6DD   UNKNOWN  $E6DD           ; Unknown Exxx instruction
$6EE    $75FE   ADD      V5, #FE         ; Add 254 to V5
$6F0    $F362   UNKNOWN  F362            ; Unknown Fxxx instruction
$6F2    $3288   SE       V2, #88         ; Skip if V2 == 136
$6F4    $EA91   UNKNOWN  $EA91           ; Unknown Exxx instruction
$6F6    $AFAB   LD       I, $FAB         ; Load FAB into I
$6F8    $1873   JP       $873            ; Jump to 873
$6FA    $4347   SNE      V3, #47         ; Skip if V3 != 71
$6FC    $014A   SYS      $14A            ; System call to 14A
$6FE    $F142   UNKNOWN  F142            ; Unknown Fxxx instruction
$700    $E2E4   UNKNOWN  $E2E4           ; Unknown Exxx instruction
$702    $EEBC   UNKNOWN  $EEBC           ; Unknown Exxx instruction
$704    $FA40   UNKNOWN  FA40            ; Unknown Fxxx instruction
$706    $2A9C   CALL     $A9C            ; Call subroutine at A9C
$708    $9CDF   UNKNOWN  $9CDF           ; Unknown 9xxx instruction
$70A    $2FB4   CALL     $FB4            ; Call subroutine at FB4
$70C    $1F08   JP       $F08            ; Jump to F08
$70E    $88CA   UNKNOWN  88CA            ; Unknown 8xxx instruction
$710    $C161   RND      V1, #61         ; V1 = random & 61
$712    $9720   SNE      V7, V2          ; Skip if V7 != V2
$714    $0B4A   SYS      $B4A            ; System call to B4A
$716    $8707   SUBN     V7, V0          ; V7 = V0 - V7, VF = !borrow
$718    $A764   LD       I, $764         ; Load 764 into I
$71A    $5C87   UNKNOWN  $5C87           ; Unknown 5xxx instruction
$71C    $BDAC   JP       V0, $DAC        ; Jump to V0 + DAC
$71E    $1390   JP       $390            ; Jump to 390
$720    $7233   ADD      V2, #33         ; Add 51 to V2
$722    $7116   ADD      V1, #16         ; Add 22 to V1
$724    $21F8   CALL     $1F8            ; Call subroutine at 1F8
$726    $F31D   UNKNOWN  F31D            ; Unknown Fxxx instruction
$728    $536E   UNKNOWN  $536E           ; Unknown 5xxx instruction
$72A    $8C34   ADD      VC, V3          ; VC += V3, VF = carry
$72C    $815C   UNKNOWN  815C            ; Unknown 8xxx instruction
$72E    $6986   LD       V9, #86         ; Load 134 into V9
$730    $0AB6   SYS      $AB6            ; System call to AB6
$732    $514C   UNKNOWN  $514C           ; Unknown 5xxx instruction
$734    $EF97   UNKNOWN  $EF97           ; Unknown Exxx instruction
$736    $F353   UNKNOWN  F353            ; Unknown Fxxx instruction
$738    $A81C   LD       I, $81C         ; Load 81C into I
$73A    $5E48   UNKNOWN  $5E48           ; Unknown 5xxx instruction
$73C    $C78C   RND      V7, #8C         ; V7 = random & 8C
$73E    $682F   LD       V8, #2F         ; Load 47 into V8
$740    $CFEB   RND      VF, #EB         ; VF = random & EB
$742    $C402   RND      V4, #02         ; V4 = random & 02
$744    $AF87   LD       I, $F87         ; Load F87 into I
$746    $D946   DRW      V9, V4, #6      ; Draw 6-byte sprite at V9, V4
$748    $DFA7   DRW      VF, VA, #7      ; Draw 7-byte sprite at VF, VA
$74A    $3830   SE       V8, #30         ; Skip if V8 == 48
$74C    $3DF5   SE       VD, #F5         ; Skip if VD == 245
$74E    $9B9D   UNKNOWN  $9B9D           ; Unknown 9xxx instruction
$750    $C14D   RND      V1, #4D         ; V1 = random & 4D
$752    $40C8   SNE      V0, #C8         ; Skip if V0 != 200
$754    $7B04   ADD      VB, #04         ; Add 4 to VB
$756    $4E1A   SNE      VE, #1A         ; Skip if VE != 26
$758    $3D1F   SE       VD, #1F         ; Skip if VD == 31
$75A    $0278   SYS      $278            ; System call to 278
$75C    $3CF1   SE       VC, #F1         ; Skip if VC == 241
$75E    $22F8   CALL     $2F8            ; Call subroutine at 2F8
$760    $9515   UNKNOWN  $9515           ; Unknown 9xxx instruction
$762    $F796   UNKNOWN  F796            ; Unknown Fxxx instruction
$764    $E3C3   UNKNOWN  $E3C3           ; Unknown Exxx instruction
$766    $1932   JP       $932            ; Jump to 932
$768    $18FF   JP       $8FF            ; Jump to 8FF
$76A    $EB94   UNKNOWN  $EB94           ; Unknown Exxx instruction
$76C    $AE82   LD       I, $E82         ; Load E82 into I
$76E    $0835   SYS      $835            ; System call to 835
$770    $59CD   UNKNOWN  $59CD           ; Unknown 5xxx instruction
$772    $5033   UNKNOWN  $5033           ; Unknown 5xxx instruction
$774    $CDA7   RND      VD, #A7         ; VD = random & A7
$776    $9A0E   UNKNOWN  $9A0E           ; Unknown 9xxx instruction
$778    $A305   LD       I, $305         ; Load 305 into I
$77A    $E1D3   UNKNOWN  $E1D3           ; Unknown Exxx instruction
$77C    $D07E   DRW      V0, V7, #E      ; Draw 14-byte sprite at V0, V7
$77E    $20BA   CALL     $0BA            ; Call subroutine at 0BA
$780    $B262   JP       V0, $262        ; Jump to V0 + 262
$782    $0D6D   SYS      $D6D            ; System call to D6D
$784    $2C76   CALL     $C76            ; Call subroutine at C76
$786    $6FBD   LD       VF, #BD         ; Load 189 into VF
$788    $CB6A   RND      VB, #6A         ; VB = random & 6A
$78A    $945A   UNKNOWN  $945A           ; Unknown 9xxx instruction
$78C    $B169   JP       V0, $169        ; Jump to V0 + 169
$78E    $BE6C   JP       V0, $E6C        ; Jump to V0 + E6C
$790    $5A65   UNKNOWN  $5A65           ; Unknown 5xxx instruction
$792    $CF39   RND      VF, #39         ; VF = random & 39
$794    $AE85   LD       I, $E85         ; Load E85 into I
$796    $B2B5   JP       V0, $2B5        ; Jump to V0 + 2B5
$798    $1578   JP       $578            ; Jump to 578
$79A    $0D98   SYS      $D98            ; System call to D98
$79C    $7EFB   ADD      VE, #FB         ; Add 251 to VE
$79E    $3A71   SE       VA, #71         ; Skip if VA == 113
$7A0    $725F   ADD      V2, #5F         ; Add 95 to V2
$7A2    $315F   SE       V1, #5F         ; Skip if V1 == 95
$7A4    $4B94   SNE      VB, #94         ; Skip if VB != 148
$7A6    $8DE3   XOR      VD, VE          ; VD ^= VE
$7A8    $DF24   DRW      VF, V2, #4      ; Draw 4-byte sprite at VF, V2
$7AA    $F5B3   UNKNOWN  F5B3            ; Unknown Fxxx instruction
$7AC    $46C9   SNE      V6, #C9         ; Skip if V6 != 201
$7AE    $F196   UNKNOWN  F196            ; Unknown Fxxx instruction
$7B0    $98D5   UNKNOWN  $98D5           ; Unknown 9xxx instruction
$7B2    $0CEB   SYS      $CEB            ; System call to CEB
$7B4    $6E43   LD       VE, #43         ; Load 67 into VE
$7B6    $8D99   UNKNOWN  8D99            ; Unknown 8xxx instruction
$7B8    $7050   ADD      V0, #50         ; Add 80 to V0
$7BA    $0FC5   SYS      $FC5            ; System call to FC5
$7BC    $BD67   JP       V0, $D67        ; Jump to V0 + D67
$7BE    $17A6   JP       $7A6            ; Jump to 7A6
$7C0    $47AD   SNE      V7, #AD         ; Skip if V7 != 173
$7C2    $ACA0   LD       I, $CA0         ; Load CA0 into I
$7C4    $A1D3   LD       I, $1D3         ; Load 1D3 into I
$7C6    $B699   JP       V0, $699        ; Jump to V0 + 699
$7C8    $A910   LD       I, $910         ; Load 910 into I
$7CA    $E00A   UNKNOWN  $E00A           ; Unknown Exxx instruction
$7CC    $041B   SYS      $41B            ; System call to 41B
$7CE    $4C9E   SNE      VC, #9E         ; Skip if VC != 158
$7D0    $4300   SNE      V3, #00         ; Skip if V3 != 0
$7D2    $7FC9   ADD      VF, #C9         ; Add 201 to VF
$7D4    $B698   JP       V0, $698        ; Jump to V0 + 698
$7D6    $FF5B   UNKNOWN  FF5B            ; Unknown Fxxx instruction
$7D8    $BA3D   JP       V0, $A3D        ; Jump to V0 + A3D
$7DA    $56D8   UNKNOWN  $56D8           ; Unknown 5xxx instruction
$7DC    $528A   UNKNOWN  $528A           ; Unknown 5xxx instruction
$7DE    $2EAF   CALL     $EAF            ; Call subroutine at EAF
$7E0    $733D   ADD      V3, #3D         ; Add 61 to V3
$7E2    $3ECE   SE       VE, #CE         ; Skip if VE == 206
$7E4    $332A   SE       V3, #2A         ; Skip if V3 == 42
$7E6    $A8AA   LD       I, $8AA         ; Load 8AA into I
$7E8    $5EBF   UNKNOWN  $5EBF           ; Unknown 5xxx instruction
$7EA    $424A   SNE      V2, #4A         ; Skip if V2 != 74
$7EC    $D022   DRW      V0, V2, #2      ; Draw 2-byte sprite at V0, V2
$7EE    $C447   RND      V4, #47         ; V4 = random & 47
$7F0    $E874   UNKNOWN  $E874           ; Unknown Exxx instruction
$7F2    $7AF8   ADD      VA, #F8         ; Add 248 to VA
$7F4    $0EE8   SYS      $EE8            ; System call to EE8
$7F6    $66F9   LD       V6, #F9         ; Load 249 into V6
$7F8    $87C4   ADD      V7, VC          ; V7 += VC, VF = carry
$7FA    $E552   UNKNOWN  $E552           ; Unknown Exxx instruction
$7FC    $61E1   LD       V1, #E1         ; Load 225 into V1
$7FE    $C698   RND      V6, #98         ; V6 = random & 98
$800    $8692   AND      V6, V9          ; V6 &= V9
$802    $9C50   SNE      VC, V5          ; Skip if VC != V5
$804    $CE42   RND      VE, #42         ; VE = random & 42
$806    $AF2C   LD       I, $F2C         ; Load F2C into I
$808    $4E2C   SNE      VE, #2C         ; Skip if VE != 44
$80A    $90EF   UNKNOWN  $90EF           ; Unknown 9xxx instruction
$80C    $C2AC   RND      V2, #AC         ; V2 = random & AC
$80E    $28F4   CALL     $8F4            ; Call subroutine at 8F4
$810    $ACA2   LD       I, $CA2         ; Load CA2 into I
$812    $DE3D   DRW      VE, V3, #D      ; Draw 13-byte sprite at VE, V3
$814    $4F5F   SNE      VF, #5F         ; Skip if VF != 95
$816    $02BB   SYS      $2BB            ; System call to 2BB
$818    $E846   UNKNOWN  $E846           ; Unknown Exxx instruction
$81A    $0D71   SYS      $D71            ; System call to D71
$81C    $BAB2   JP       V0, $AB2        ; Jump to V0 + AB2
$81E    $8C56   SHR      VC              ; VC >>= 1, VF = LSB
$820    $EE1C   UNKNOWN  $EE1C           ; Unknown Exxx instruction
$822    $BAC2   JP       V0, $AC2        ; Jump to V0 + AC2
$824    $8A83   XOR      VA, V8          ; VA ^= V8
$826    $F157   UNKNOWN  F157            ; Unknown Fxxx instruction
$828    $F84A   UNKNOWN  F84A            ; Unknown Fxxx instruction
$82A    $C12A   RND      V1, #2A         ; V1 = random & 2A
$82C    $B3FC   JP       V0, $3FC        ; Jump to V0 + 3FC
$82E    $7C18   ADD      VC, #18         ; Add 24 to VC
$830    $57F7   UNKNOWN  $57F7           ; Unknown 5xxx instruction
$832    $3020   SE       V0, #20         ; Skip if V0 == 32
$834    $06B7   SYS      $6B7            ; System call to 6B7
$836    $EF29   UNKNOWN  $EF29           ; Unknown Exxx instruction
$838    $279E   CALL     $79E            ; Call subroutine at 79E
$83A    $6C6D   LD       VC, #6D         ; Load 109 into VC
$83C    $B265   JP       V0, $265        ; Jump to V0 + 265
$83E    $497B   SNE      V9, #7B         ; Skip if V9 != 123
$840    $F043   UNKNOWN  F043            ; Unknown Fxxx instruction
$842    $1FE8   JP       $FE8            ; Jump to FE8
$844    $34A3   SE       V4, #A3         ; Skip if V4 == 163
$846    $F79C   UNKNOWN  F79C            ; Unknown Fxxx instruction
$848    $C9D9   RND      V9, #D9         ; V9 = random & D9
$84A    $4709   SNE      V7, #09         ; Skip if V7 != 9
$84C    $3F5E   SE       VF, #5E         ; Skip if VF == 94
$84E    $76B4   ADD      V6, #B4         ; Add 180 to V6
$850    $F588   UNKNOWN  F588            ; Unknown Fxxx instruction
$852    $6128   LD       V1, #28         ; Load 40 into V1
$854    $BD88   JP       V0, $D88        ; Jump to V0 + D88
$856    $AB7E   LD       I, $B7E         ; Load B7E into I
$858    $403A   SNE      V0, #3A         ; Skip if V0 != 58
$85A    $2C5A   CALL     $C5A            ; Call subroutine at C5A
$85C    $BE99   JP       V0, $E99        ; Jump to V0 + E99
$85E    $2096   CALL     $096            ; Call subroutine at 096
$860    $1529   JP       $529            ; Jump to 529
$862    $919B   UNKNOWN  $919B           ; Unknown 9xxx instruction
$864    $3321   SE       V3, #21         ; Skip if V3 == 33
$866    $62CF   LD       V2, #CF         ; Load 207 into V2
$868    $19AE   JP       $9AE            ; Jump to 9AE
$86A    $59D9   UNKNOWN  $59D9           ; Unknown 5xxx instruction
$86C    $2226   CALL     $226            ; Call subroutine at 226
$86E    $6EC8   LD       VE, #C8         ; Load 200 into VE
$870    $9C72   UNKNOWN  $9C72           ; Unknown 9xxx instruction
$872    $0206   SYS      $206            ; System call to 206
$874    $CC83   RND      VC, #83         ; VC = random & 83
$876    $CC0B   RND      VC, #0B         ; VC = random & 0B
$878    $4500   SNE      V5, #00         ; Skip if V5 != 0
$87A    $98C9   UNKNOWN  $98C9           ; Unknown 9xxx instruction
$87C    $10AB   JP       $0AB            ; Jump to 0AB
$87E    $1AA4   JP       $AA4            ; Jump to AA4
$880    $B732   JP       V0, $732        ; Jump to V0 + 732
$882    $3E7A   SE       VE, #7A         ; Skip if VE == 122
$884    $8633   XOR      V6, V3          ; V6 ^= V3
$886    $D71A   DRW      V7, V1, #A      ; Draw 10-byte sprite at V7, V1
$888    $DB8C   DRW      VB, V8, #C      ; Draw 12-byte sprite at VB, V8
$88A    $A551   LD       I, $551         ; Load 551 into I
$88C    $FFC5   UNKNOWN  FFC5            ; Unknown Fxxx instruction
$88E    $E4BF   UNKNOWN  $E4BF           ; Unknown Exxx instruction
$890    $A60D   LD       I, $60D         ; Load 60D into I
$892    $A3B1   LD       I, $3B1         ; Load 3B1 into I
$894    $D8CC   DRW      V8, VC, #C      ; Draw 12-byte sprite at V8, VC
$896    $0232   SYS      $232            ; System call to 232
$898    $E515   UNKNOWN  $E515           ; Unknown Exxx instruction
$89A    $33B8   SE       V3, #B8         ; Skip if V3 == 184
$89C    $0566   SYS      $566            ; System call to 566
$89E    $5416   UNKNOWN  $5416           ; Unknown 5xxx instruction
$8A0    $5466   UNKNOWN  $5466           ; Unknown 5xxx instruction
$8A2    $2E2B   CALL     $E2B            ; Call subroutine at E2B
$8A4    $ED3F   UNKNOWN  $ED3F           ; Unknown Exxx instruction
$8A6    $C74F   RND      V7, #4F         ; V7 = random & 4F
$8A8    $8F1D   UNKNOWN  8F1D            ; Unknown 8xxx instruction
$8AA    $53CE   UNKNOWN  $53CE           ; Unknown 5xxx instruction
$8AC    $E803   UNKNOWN  $E803           ; Unknown Exxx instruction
$8AE    $5DBB   UNKNOWN  $5DBB           ; Unknown 5xxx instruction
$8B0    $79F7   ADD      V9, #F7         ; Add 247 to V9
$8B2    $FF3D   UNKNOWN  FF3D            ; Unknown Fxxx instruction
$8B4    $3E83   SE       VE, #83         ; Skip if VE == 131
$8B6    $E437   UNKNOWN  $E437           ; Unknown Exxx instruction
$8B8    $AB12   LD       I, $B12         ; Load B12 into I
$8BA    $8E70   LD       VE, V7          ; VE = V7
$8BC    $92AC   UNKNOWN  $92AC           ; Unknown 9xxx instruction
$8BE    $431B   SNE      V3, #1B         ; Skip if V3 != 27
$8C0    $D080   DRW      V0, V8, #0      ; Draw 0-byte sprite at V0, V8
$8C2    $168B   JP       $68B            ; Jump to 68B
$8C4    $1405   JP       $405            ; Jump to 405
$8C6    $C8BA   RND      V8, #BA         ; V8 = random & BA
$8C8    $52A4   UNKNOWN  $52A4           ; Unknown 5xxx instruction
$8CA    $EAE0   UNKNOWN  $EAE0           ; Unknown Exxx instruction
$8CC    $B3AA   JP       V0, $3AA        ; Jump to V0 + 3AA
$8CE    $A0E7   LD       I, $0E7         ; Load 0E7 into I
$8D0    $3327   SE       V3, #27         ; Skip if V3 == 39
$8D2    $F209   UNKNOWN  F209            ; Unknown Fxxx instruction
$8D4    $7106   ADD      V1, #06         ; Add 6 to V1
$8D6    $8A6C   UNKNOWN  8A6C            ; Unknown 8xxx instruction
$8D8    $D08B   DRW      V0, V8, #B      ; Draw 11-byte sprite at V0, V8
$8DA    $34CE   SE       V4, #CE         ; Skip if V4 == 206
$8DC    $30A0   SE       V0, #A0         ; Skip if V0 == 160
$8DE    $D1E4   DRW      V1, VE, #4      ; Draw 4-byte sprite at V1, VE
$8E0    $509C   UNKNOWN  $509C           ; Unknown 5xxx instruction
$8E2    $1F26   JP       $F26            ; Jump to F26
$8E4    $4FF4   SNE      VF, #F4         ; Skip if VF != 244
$8E6    $5B7F   UNKNOWN  $5B7F           ; Unknown 5xxx instruction
$8E8    $080A   SYS      $80A            ; System call to 80A
$8EA    $CDD1   RND      VD, #D1         ; VD = random & D1
$8EC    $3B5F   SE       VB, #5F         ; Skip if VB == 95
$8EE    $E385   UNKNOWN  $E385           ; Unknown Exxx instruction
$8F0    $530B   UNKNOWN  $530B           ; Unknown 5xxx instruction
$8F2    $547F   UNKNOWN  $547F           ; Unknown 5xxx instruction
$8F4    $0504   SYS      $504            ; System call to 504
$8F6    $89AA   UNKNOWN  89AA            ; Unknown 8xxx instruction
$8F8    $A624   LD       I, $624         ; Load 624 into I
$8FA    $1568   JP       $568            ; Jump to 568
$8FC    $304A   SE       V0, #4A         ; Skip if V0 == 74
$8FE    $EAA3   UNKNOWN  $EAA3           ; Unknown Exxx instruction
$900    $AA7E   LD       I, $A7E         ; Load A7E into I
$902    $0425   SYS      $425            ; System call to 425
$904    $4F4A   SNE      VF, #4A         ; Skip if VF != 74
$906    $DB09   DRW      VB, V0, #9      ; Draw 9-byte sprite at VB, V0
$908    $5234   UNKNOWN  $5234           ; Unknown 5xxx instruction
$90A    $0510   SYS      $510            ; System call to 510
$90C    $28B4   CALL     $8B4            ; Call subroutine at 8B4
$90E    $6C94   LD       VC, #94         ; Load 148 into VC
$910    $8C4B   UNKNOWN  8C4B            ; Unknown 8xxx instruction
$912    $1EAE   JP       $EAE            ; Jump to EAE
$914    $A7B1   LD       I, $7B1         ; Load 7B1 into I
$916    $850B   UNKNOWN  850B            ; Unknown 8xxx instruction
$918    $983E   UNKNOWN  $983E           ; Unknown 9xxx instruction
$91A    $37AD   SE       V7, #AD         ; Skip if V7 == 173
$91C    $3D12   SE       VD, #12         ; Skip if VD == 18
$91E    $D3E4   DRW      V3, VE, #4      ; Draw 4-byte sprite at V3, VE
$920    $E4B1   UNKNOWN  $E4B1           ; Unknown Exxx instruction
$922    $D5E2   DRW      V5, VE, #2      ; Draw 2-byte sprite at V5, VE
$924    $076D   SYS      $76D            ; System call to 76D
$926    $6F78   LD       VF, #78         ; Load 120 into VF
$928    $DACE   DRW      VA, VC, #E      ; Draw 14-byte sprite at VA, VC
$92A    $1A01   JP       $A01            ; Jump to A01
$92C    $5898   UNKNOWN  $5898           ; Unknown 5xxx instruction
$92E    $70D1   ADD      V0, #D1         ; Add 209 to V0
$930    $6AA1   LD       VA, #A1         ; Load 161 into VA
$932    $B085   JP       V0, $085        ; Jump to V0 + 085
$934    $E0DB   UNKNOWN  $E0DB           ; Unknown Exxx instruction
$936    $3175   SE       V1, #75         ; Skip if V1 == 117
$938    $0216   SYS      $216            ; System call to 216
$93A    $CADB   RND      VA, #DB         ; VA = random & DB
$93C    $8159   UNKNOWN  8159            ; Unknown 8xxx instruction
$93E    $3BD7   SE       VB, #D7         ; Skip if VB == 215
$940    $0C5A   SYS      $C5A            ; System call to C5A
$942    $2052   CALL     $052            ; Call subroutine at 052
$944    $03DC   SYS      $3DC            ; System call to 3DC
$946    $4318   SNE      V3, #18         ; Skip if V3 != 24
$948    $3FB1   SE       VF, #B1         ; Skip if VF == 177
$94A    $978D   UNKNOWN  $978D           ; Unknown 9xxx instruction
$94C    $902F   UNKNOWN  $902F           ; Unknown 9xxx instruction
$94E    $C44A   RND      V4, #4A         ; V4 = random & 4A
$950    $2484   CALL     $484            ; Call subroutine at 484
$952    $A192   LD       I, $192         ; Load 192 into I
$954    $22F5   CALL     $2F5            ; Call subroutine at 2F5
$956    $C449   RND      V4, #49         ; V4 = random & 49
$958    $21C6   CALL     $1C6            ; Call subroutine at 1C6
$95A    $7C8E   ADD      VC, #8E         ; Add 142 to VC
$95C    $3C4A   SE       VC, #4A         ; Skip if VC == 74
$95E    $6151   LD       V1, #51         ; Load 81 into V1
$960    $C327   RND      V3, #27         ; V3 = random & 27
$962    $D2D7   DRW      V2, VD, #7      ; Draw 7-byte sprite at V2, VD
$964    $3BCA   SE       VB, #CA         ; Skip if VB == 202
$966    $9095   UNKNOWN  $9095           ; Unknown 9xxx instruction
$968    $B9D3   JP       V0, $9D3        ; Jump to V0 + 9D3
$96A    $C84F   RND      V8, #4F         ; V8 = random & 4F
$96C    $10F4   JP       $0F4            ; Jump to 0F4
$96E    $8BCA   UNKNOWN  8BCA            ; Unknown 8xxx instruction
$970    $B7C5   JP       V0, $7C5        ; Jump to V0 + 7C5
$972    $E08D   UNKNOWN  $E08D           ; Unknown Exxx instruction
$974    $DA81   DRW      VA, V8, #1      ; Draw 1-byte sprite at VA, V8
$976    $35BD   SE       V5, #BD         ; Skip if V5 == 189
$978    $D97B   DRW      V9, V7, #B      ; Draw 11-byte sprite at V9, V7
$97A    $A648   LD       I, $648         ; Load 648 into I
$97C    $B1D6   JP       V0, $1D6        ; Jump to V0 + 1D6
$97E    $8B95   SUB      VB, V9          ; VB -= V9, VF = !borrow
$980    $ACCB   LD       I, $CCB         ; Load CCB into I
$982    $8C73   XOR      VC, V7          ; VC ^= V7
$984    $E8A1   SKNP     V8              ; Skip if key V8 not pressed
$986    $95F4   UNKNOWN  $95F4           ; Unknown 9xxx instruction
$988    $8C78   UNKNOWN  8C78            ; Unknown 8xxx instruction
$98A    $C17B   RND      V1, #7B         ; V1 = random & 7B
$98C    $765A   ADD      V6, #5A         ; Add 90 to V6
$98E    $2D10   CALL     $D10            ; Call subroutine at D10
$990    $93AD   UNKNOWN  $93AD           ; Unknown 9xxx instruction
$992    $E477   UNKNOWN  $E477           ; Unknown Exxx instruction
$994    $0DC2   SYS      $DC2            ; System call to DC2
$996    $D065   DRW      V0, V6, #5      ; Draw 5-byte sprite at V0, V6
$998    $7C47   ADD      VC, #47         ; Add 71 to VC
$99A    $B66A   JP       V0, $66A        ; Jump to V0 + 66A
$99C    $6E89   LD       VE, #89         ; Load 137 into VE
$99E    $8E62   AND      VE, V6          ; VE &= V6
$9A0    $4FDD   SNE      VF, #DD         ; Skip if VF != 221
$9A2    $6FBF   LD       VF, #BF         ; Load 191 into VF
$9A4    $D4DA   DRW      V4, VD, #A      ; Draw 10-byte sprite at V4, VD
$9A6    $3EE4   SE       VE, #E4         ; Skip if VE == 228
$9A8    $DDE8   DRW      VD, VE, #8      ; Draw 8-byte sprite at VD, VE
$9AA    $27A6   CALL     $7A6            ; Call subroutine at 7A6
$9AC    $EB39   UNKNOWN  $EB39           ; Unknown Exxx instruction
$9AE    $3441   SE       V4, #41         ; Skip if V4 == 65
$9B0    $AB4D   LD       I, $B4D         ; Load B4D into I
$9B2    $E592   UNKNOWN  $E592           ; Unknown Exxx instruction
$9B4    $5A6F   UNKNOWN  $5A6F           ; Unknown 5xxx instruction
$9B6    $2711   CALL     $711            ; Call subroutine at 711
$9B8    $7515   ADD      V5, #15         ; Add 21 to V5
$9BA    $5831   UNKNOWN  $5831           ; Unknown 5xxx instruction
$9BC    $7290   ADD      V2, #90         ; Add 144 to V2
$9BE    $BC13   JP       V0, $C13        ; Jump to V0 + C13
$9C0    $0F5F   SYS      $F5F            ; System call to F5F
$9C2    $08C1   SYS      $8C1            ; System call to 8C1
$9C4    $EC3F   UNKNOWN  $EC3F           ; Unknown Exxx instruction
$9C6    $B254   JP       V0, $254        ; Jump to V0 + 254
$9C8    $C65F   RND      V6, #5F         ; V6 = random & 5F
$9CA    $41E3   SNE      V1, #E3         ; Skip if V1 != 227
$9CC    $CB7D   RND      VB, #7D         ; VB = random & 7D
$9CE    $8142   AND      V1, V4          ; V1 &= V4
$9D0    $9A5D   UNKNOWN  $9A5D           ; Unknown 9xxx instruction
$9D2    $6055   LD       V0, #55         ; Load 85 into V0
$9D4    $F31C   UNKNOWN  F31C            ; Unknown Fxxx instruction
$9D6    $CE6C   RND      VE, #6C         ; VE = random & 6C
$9D8    $1C44   JP       $C44            ; Jump to C44
$9DA    $992A   UNKNOWN  $992A           ; Unknown 9xxx instruction
$9DC    $57A9   UNKNOWN  $57A9           ; Unknown 5xxx instruction
$9DE    $ECF0   UNKNOWN  $ECF0           ; Unknown Exxx instruction
$9E0    $6DA8   LD       VD, #A8         ; Load 168 into VD
$9E2    $FF9B   UNKNOWN  FF9B            ; Unknown Fxxx instruction
$9E4    $8FDA   UNKNOWN  8FDA            ; Unknown 8xxx instruction
$9E6    $EF0F   UNKNOWN  $EF0F           ; Unknown Exxx instruction
$9E8    $D105   DRW      V1, V0, #5      ; Draw 5-byte sprite at V1, V0
$9EA    $5B9A   UNKNOWN  $5B9A           ; Unknown 5xxx instruction
$9EC    $1922   JP       $922            ; Jump to 922
$9EE    $6B4C   LD       VB, #4C         ; Load 76 into VB
$9F0    $02EE   SYS      $2EE            ; System call to 2EE
$9F2    $3EF2   SE       VE, #F2         ; Skip if VE == 242
$9F4    $6934   LD       V9, #34         ; Load 52 into V9
$9F6    $5C25   UNKNOWN  $5C25           ; Unknown 5xxx instruction
$9F8    $A58B   LD       I, $58B         ; Load 58B into I
$9FA    $84F9   UNKNOWN  84F9            ; Unknown 8xxx instruction
$9FC    $DFCA   DRW      VF, VC, #A      ; Draw 10-byte sprite at VF, VC
$9FE    $3707   SE       V7, #07         ; Skip if V7 == 7
$A00    $F525   UNKNOWN  F525            ; Unknown Fxxx instruction
$A02    $A73E   LD       I, $73E         ; Load 73E into I
$A04    $5ACF   UNKNOWN  $5ACF           ; Unknown 5xxx instruction
$A06    $DDAF   DRW      VD, VA, #F      ; Draw 15-byte sprite at VD, VA
$A08    $AC46   LD       I, $C46         ; Load C46 into I
$A0A    $52ED   UNKNOWN  $52ED           ; Unknown 5xxx instruction
$A0C    $6AC9   LD       VA, #C9         ; Load 201 into VA
$A0E    $98B7   UNKNOWN  $98B7           ; Unknown 9xxx instruction
$A10    $3020   SE       V0, #20         ; Skip if V0 == 32
$A12    $AEDF   LD       I, $EDF         ; Load EDF into I
$A14    $E115   UNKNOWN  $E115           ; Unknown Exxx instruction
$A16    $6663   LD       V6, #63         ; Load 99 into V6
$A18    $241D   CALL     $41D            ; Call subroutine at 41D
$A1A    $61EB   LD       V1, #EB         ; Load 235 into V1
$A1C    $1C8F   JP       $C8F            ; Jump to C8F
$A1E    $2CA7   CALL     $CA7            ; Call subroutine at CA7
$A20    $270B   CALL     $70B            ; Call subroutine at 70B
$A22    $CB3C   RND      VB, #3C         ; VB = random & 3C
$A24    $CF94   RND      VF, #94         ; VF = random & 94
$A26    $814A   UNKNOWN  814A            ; Unknown 8xxx instruction
$A28    $4BAB   SNE      VB, #AB         ; Skip if VB != 171
$A2A    $CAC6   RND      VA, #C6         ; VA = random & C6
$A2C    $9875   UNKNOWN  $9875           ; Unknown 9xxx instruction
$A2E    $5F8D   UNKNOWN  $5F8D           ; Unknown 5xxx instruction
$A30    $FF66   UNKNOWN  FF66            ; Unknown Fxxx instruction
$A32    $0C0C   SYS      $C0C            ; System call to C0C
$A34    $0758   SYS      $758            ; System call to 758
$A36    $CD5F   RND      VD, #5F         ; VD = random & 5F
$A38    $83C3   XOR      V3, VC          ; V3 ^= VC
$A3A    $29CF   CALL     $9CF            ; Call subroutine at 9CF
$A3C    $D311   DRW      V3, V1, #1      ; Draw 1-byte sprite at V3, V1
$A3E    $4076   SNE      V0, #76         ; Skip if V0 != 118
$A40    $67D6   LD       V7, #D6         ; Load 214 into V7
$A42    $A18E   LD       I, $18E         ; Load 18E into I
$A44    $5334   UNKNOWN  $5334           ; Unknown 5xxx instruction
$A46    $40AF   SNE      V0, #AF         ; Skip if V0 != 175
$A48    $1B77   JP       $B77            ; Jump to B77
$A4A    $F098   UNKNOWN  F098            ; Unknown Fxxx instruction
$A4C    $7C3F   ADD      VC, #3F         ; Add 63 to VC
$A4E    $758B   ADD      V5, #8B         ; Add 139 to V5
$A50    $4410   SNE      V4, #10         ; Skip if V4 != 16
$A52    $1DAD   JP       $DAD            ; Jump to DAD
$A54    $4895   SNE      V8, #95         ; Skip if V8 != 149
$A56    $7857   ADD      V8, #57         ; Add 87 to V8
$A58    $EF99   UNKNOWN  $EF99           ; Unknown Exxx instruction
$A5A    $B690   JP       V0, $690        ; Jump to V0 + 690
$A5C    $310C   SE       V1, #0C         ; Skip if V1 == 12
$A5E    $E212   UNKNOWN  $E212           ; Unknown Exxx instruction
$A60    $32F1   SE       V2, #F1         ; Skip if V2 == 241
$A62    $A9D0   LD       I, $9D0         ; Load 9D0 into I
$A64    $F4EC   UNKNOWN  F4EC            ; Unknown Fxxx instruction
$A66    $B6C7   JP       V0, $6C7        ; Jump to V0 + 6C7
$A68    $A38E   LD       I, $38E         ; Load 38E into I
$A6A    $A3C0   LD       I, $3C0         ; Load 3C0 into I
$A6C    $7309   ADD      V3, #09         ; Add 9 to V3
$A6E    $004A   SYS      $04A            ; System call to 04A
$A70    $108B   JP       $08B            ; Jump to 08B
$A72    $EDF8   UNKNOWN  $EDF8           ; Unknown Exxx instruction
$A74    $C8E9   RND      V8, #E9         ; V8 = random & E9
$A76    $0B66   SYS      $B66            ; System call to B66
$A78    $BAA3   JP       V0, $AA3        ; Jump to V0 + AA3
$A7A    $0799   SYS      $799            ; System call to 799
$A7C    $7BF7   ADD      VB, #F7         ; Add 247 to VB
$A7E    $395C   SE       V9, #5C         ; Skip if V9 == 92
$A80    $09BC   SYS      $9BC            ; System call to 9BC
$A82    $CC5A   RND      VC, #5A         ; VC = random & 5A
$A84    $AA4A   LD       I, $A4A         ; Load A4A into I
$A86    $9D29   UNKNOWN  $9D29           ; Unknown 9xxx instruction
$A88    $0B1D   SYS      $B1D            ; System call to B1D
$A8A    $6BFE   LD       VB, #FE         ; Load 254 into VB
$A8C    $95CE   UNKNOWN  $95CE           ; Unknown 9xxx instruction
$A8E    $FAA2   UNKNOWN  FAA2            ; Unknown Fxxx instruction
$A90    $24B4   CALL     $4B4            ; Call subroutine at 4B4
$A92    $64E5   LD       V4, #E5         ; Load 229 into V4
$A94    $37AC   SE       V7, #AC         ; Skip if V7 == 172
$A96    $8134   ADD      V1, V3          ; V1 += V3, VF = carry
$A98    $105E   JP       $05E            ; Jump to 05E
$A9A    $C90D   RND      V9, #0D         ; V9 = random & 0D
$A9C    $0BC0   SYS      $BC0            ; System call to BC0
$A9E    $059D   SYS      $59D            ; System call to 59D
$AA0    $9248   UNKNOWN  $9248           ; Unknown 9xxx instruction
$AA2    $713F   ADD      V1, #3F         ; Add 63 to V1
$AA4    $5CA7   UNKNOWN  $5CA7           ; Unknown 5xxx instruction
$AA6    $BB94   JP       V0, $B94        ; Jump to V0 + B94
$AA8    $BD31   JP       V0, $D31        ; Jump to V0 + D31
$AAA    $6574   LD       V5, #74         ; Load 116 into V5
$AAC    $0848   SYS      $848            ; System call to 848
$AAE    $8BA1   OR       VB, VA          ; VB |= VA
$AB0    $CCF5   RND      VC, #F5         ; VC = random & F5
$AB2    $281D   CALL     $81D            ; Call subroutine at 81D
$AB4    $B50D   JP       V0, $50D        ; Jump to V0 + 50D
$AB6    $F37A   UNKNOWN  F37A            ; Unknown Fxxx instruction
$AB8    $4FA6   SNE      VF, #A6         ; Skip if VF != 166
$ABA    $3DBB   SE       VD, #BB         ; Skip if VD == 187
$ABC    $BB85   JP       V0, $B85        ; Jump to V0 + B85
$ABE    $3A59   SE       VA, #59         ; Skip if VA == 89
$AC0    $FB4C   UNKNOWN  FB4C            ; Unknown Fxxx instruction
$AC2    $83EF   UNKNOWN  83EF            ; Unknown 8xxx instruction
$AC4    $8C22   AND      VC, V2          ; VC &= V2
$AC6    $4B57   SNE      VB, #57         ; Skip if VB != 87
$AC8    $8C7C   UNKNOWN  8C7C            ; Unknown 8xxx instruction
$ACA    $3FFA   SE       VF, #FA         ; Skip if VF == 250
$ACC    $E0E1   UNKNOWN  $E0E1           ; Unknown Exxx instruction
$ACE    $1D82   JP       $D82            ; Jump to D82
$AD0    $516F   UNKNOWN  $516F           ; Unknown 5xxx instruction
$AD2    $E02B   UNKNOWN  $E02B           ; Unknown Exxx instruction
$AD4    $5115   UNKNOWN  $5115           ; Unknown 5xxx instruction
$AD6    $4A56   SNE      VA, #56         ; Skip if VA != 86
$AD8    $F35E   UNKNOWN  F35E            ; Unknown Fxxx instruction
$ADA    $9626   UNKNOWN  $9626           ; Unknown 9xxx instruction
$ADC    $2BD2   CALL     $BD2            ; Call subroutine at BD2
$ADE    $C0E5   RND      V0, #E5         ; V0 = random & E5
$AE0    $B44D   JP       V0, $44D        ; Jump to V0 + 44D
$AE2    $D7FD   DRW      V7, VF, #D      ; Draw 13-byte sprite at V7, VF
$AE4    $AAF9   LD       I, $AF9         ; Load AF9 into I
$AE6    $9893   UNKNOWN  $9893           ; Unknown 9xxx instruction
$AE8    $A9E3   LD       I, $9E3         ; Load 9E3 into I
$AEA    $D4D1   DRW      V4, VD, #1      ; Draw 1-byte sprite at V4, VD
$AEC    $888F   UNKNOWN  888F            ; Unknown 8xxx instruction
$AEE    $C420   RND      V4, #20         ; V4 = random & 20
$AF0    $0A18   SYS      $A18            ; System call to A18
$AF2    $930A   UNKNOWN  $930A           ; Unknown 9xxx instruction
$AF4    $2FB3   CALL     $FB3            ; Call subroutine at FB3
$AF6    $F2F1   UNKNOWN  F2F1            ; Unknown Fxxx instruction
$AF8    $012C   SYS      $12C            ; System call to 12C
$AFA    $5AC0   SE       VA, VC          ; Skip if VA == VC
$AFC    $E5CB   UNKNOWN  $E5CB           ; Unknown Exxx instruction
$AFE    $7064   ADD      V0, #64         ; Add 100 to V0
$B00    $8595   SUB      V5, V9          ; V5 -= V9, VF = !borrow
$B02    $4EF1   SNE      VE, #F1         ; Skip if VE != 241
$B04    $AC79   LD       I, $C79         ; Load C79 into I
$B06    $54FE   UNKNOWN  $54FE           ; Unknown 5xxx instruction
$B08    $F8BB   UNKNOWN  F8BB            ; Unknown Fxxx instruction
$B0A    $AC6C   LD       I, $C6C         ; Load C6C into I
$B0C    $EDAB   UNKNOWN  $EDAB           ; Unknown Exxx instruction
$B0E    $B2F8   JP       V0, $2F8        ; Jump to V0 + 2F8
$B10    $243B   CALL     $43B            ; Call subroutine at 43B
$B12    $7CBE   ADD      VC, #BE         ; Add 190 to VC
$B14    $9F51   UNKNOWN  $9F51           ; Unknown 9xxx instruction
$B16    $F5FD   UNKNOWN  F5FD            ; Unknown Fxxx instruction
$B18    $FC28   UNKNOWN  FC28            ; Unknown Fxxx instruction
$B1A    $959B   UNKNOWN  $959B           ; Unknown 9xxx instruction
$B1C    $1E23   JP       $E23            ; Jump to E23
$B1E    $A1CB   LD       I, $1CB         ; Load 1CB into I
$B20    $EF0C   UNKNOWN  $EF0C           ; Unknown Exxx instruction
$B22    $61C6   LD       V1, #C6         ; Load 198 into V1
$B24    $9BB9   UNKNOWN  $9BB9           ; Unknown 9xxx instruction
$B26    $BEA5   JP       V0, $EA5        ; Jump to V0 + EA5
$B28    $D139   DRW      V1, V3, #9      ; Draw 9-byte sprite at V1, V3
$B2A    $B62E   JP       V0, $62E        ; Jump to V0 + 62E
$B2C    $6E83   LD       VE, #83         ; Load 131 into VE
$B2E    $C0AE   RND      V0, #AE         ; V0 = random & AE
$B30    $3951   SE       V9, #51         ; Skip if V9 == 81
$B32    $9482   UNKNOWN  $9482           ; Unknown 9xxx instruction
$B34    $78C5   ADD      V8, #C5         ; Add 197 to V8
$B36    $A0AF   LD       I, $0AF         ; Load 0AF into I
$B38    $A2B1   LD       I, $2B1         ; Load 2B1 into I
$B3A    $5DC8   UNKNOWN  $5DC8           ; Unknown 5xxx instruction
$B3C    $10D8   JP       $0D8            ; Jump to 0D8
$B3E    $877A   UNKNOWN  877A            ; Unknown 8xxx instruction
$B40    $4EE4   SNE      VE, #E4         ; Skip if VE != 228
$B42    $5F3E   UNKNOWN  $5F3E           ; Unknown 5xxx instruction
$B44    $83AE   SHL      V3              ; V3 <<= 1, VF = MSB
$B46    $16BB   JP       $6BB            ; Jump to 6BB
$B48    $0CD9   SYS      $CD9            ; System call to CD9
$B4A    $C261   RND      V2, #61         ; V2 = random & 61
$B4C    $4811   SNE      V8, #11         ; Skip if V8 != 17
$B4E    $F6C5   UNKNOWN  F6C5            ; Unknown Fxxx instruction
$B50    $CD1B   RND      VD, #1B         ; VD = random & 1B
$B52    $85AE   SHL      V5              ; V5 <<= 1, VF = MSB
$B54    $D775   DRW      V7, V7, #5      ; Draw 5-byte sprite at V7, V7
$B56    $BAD7   JP       V0, $AD7        ; Jump to V0 + AD7
$B58    $B81E   JP       V0, $81E        ; Jump to V0 + 81E
$B5A    $F159   UNKNOWN  F159            ; Unknown Fxxx instruction
$B5C    $2B7A   CALL     $B7A            ; Call subroutine at B7A
$B5E    $BCEB   JP       V0, $CEB        ; Jump to V0 + CEB
$B60    $C220   RND      V2, #20         ; V2 = random & 20
$B62    $AC8C   LD       I, $C8C         ; Load C8C into I
$B64    $084C   SYS      $84C            ; System call to 84C
$B66    $1580   JP       $580            ; Jump to 580
$B68    $3C47   SE       VC, #47         ; Skip if VC == 71
$B6A    $DE53   DRW      VE, V5, #3      ; Draw 3-byte sprite at VE, V5
$B6C    $8BE8   UNKNOWN  8BE8            ; Unknown 8xxx instruction
$B6E    $E5BC   UNKNOWN  $E5BC           ; Unknown Exxx instruction
$B70    $14D2   JP       $4D2            ; Jump to 4D2
$B72    $6DDF   LD       VD, #DF         ; Load 223 into VD
$B74    $3F83   SE       VF, #83         ; Skip if VF == 131
$B76    $9D22   UNKNOWN  $9D22           ; Unknown 9xxx instruction
$B78    $43FD   SNE      V3, #FD         ; Skip if V3 != 253
$B7A    $DBA1   DRW      VB, VA, #1      ; Draw 1-byte sprite at VB, VA
$B7C    $BBC0   JP       V0, $BC0        ; Jump to V0 + BC0
$B7E    $6381   LD       V3, #81         ; Load 129 into V3
$B80    $295D   CALL     $95D            ; Call subroutine at 95D
$B82    $2572   CALL     $572            ; Call subroutine at 572
$B84    $A303   LD       I, $303         ; Load 303 into I
$B86    $A985   LD       I, $985         ; Load 985 into I
$B88    $55DA   UNKNOWN  $55DA           ; Unknown 5xxx instruction
$B8A    $292C   CALL     $92C            ; Call subroutine at 92C
$B8C    $D947   DRW      V9, V4, #7      ; Draw 7-byte sprite at V9, V4
$B8E    $FF3F   UNKNOWN  FF3F            ; Unknown Fxxx instruction
$B90    $3CFF   SE       VC, #FF         ; Skip if VC == 255
$B92    $8703   XOR      V7, V0          ; V7 ^= V0
$B94    $B760   JP       V0, $760        ; Jump to V0 + 760
$B96    $BEC4   JP       V0, $EC4        ; Jump to V0 + EC4
$B98    $28A1   CALL     $8A1            ; Call subroutine at 8A1
$B9A    $3FAF   SE       VF, #AF         ; Skip if VF == 175
$B9C    $7173   ADD      V1, #73         ; Add 115 to V1
$B9E    $0FE5   SYS      $FE5            ; System call to FE5
$BA0    $7329   ADD      V3, #29         ; Add 41 to V3
$BA2    $E17B   UNKNOWN  $E17B           ; Unknown Exxx instruction
$BA4    $D3AA   DRW      V3, VA, #A      ; Draw 10-byte sprite at V3, VA
$BA6    $8AEF   UNKNOWN  8AEF            ; Unknown 8xxx instruction
$BA8    $1E32   JP       $E32            ; Jump to E32
$BAA    $F065   LD       V0, [I]         ; Load V0-V0 from I
$BAC    $979D   UNKNOWN  $979D           ; Unknown 9xxx instruction
$BAE    $199E   JP       $99E            ; Jump to 99E
$BB0    $7BD2   ADD      VB, #D2         ; Add 210 to VB
$BB2    $5360   SE       V3, V6          ; Skip if V3 == V6
$BB4    $EA92   UNKNOWN  $EA92           ; Unknown Exxx instruction
$BB6    $DBFA   DRW      VB, VF, #A      ; Draw 10-byte sprite at VB, VF
$BB8    $21D3   CALL     $1D3            ; Call subroutine at 1D3
$BBA    $7CAE   ADD      VC, #AE         ; Add 174 to VC
$BBC    $6C45   LD       VC, #45         ; Load 69 into VC
$BBE    $7359   ADD      V3, #59         ; Add 89 to V3
$BC0    $4108   SNE      V1, #08         ; Skip if V1 != 8
$BC2    $54D3   UNKNOWN  $54D3           ; Unknown 5xxx instruction
$BC4    $88D9   UNKNOWN  88D9            ; Unknown 8xxx instruction
$BC6    $0C7B   SYS      $C7B            ; System call to C7B
$BC8    $6ACC   LD       VA, #CC         ; Load 204 into VA
$BCA    $652E   LD       V5, #2E         ; Load 46 into V5
$BCC    $967C   UNKNOWN  $967C           ; Unknown 9xxx instruction
$BCE    $906F   UNKNOWN  $906F           ; Unknown 9xxx instruction
$BD0    $878D   UNKNOWN  878D            ; Unknown 8xxx instruction
$BD2    $F6BD   UNKNOWN  F6BD            ; Unknown Fxxx instruction
$BD4    $8541   OR       V5, V4          ; V5 |= V4
$BD6    $B393   JP       V0, $393        ; Jump to V0 + 393
$BD8    $87A8   UNKNOWN  87A8            ; Unknown 8xxx instruction
$BDA    $8EB9   UNKNOWN  8EB9            ; Unknown 8xxx instruction
$BDC    $9A42   UNKNOWN  $9A42           ; Unknown 9xxx instruction
$BDE    $AA54   LD       I, $A54         ; Load A54 into I
$BE0    $F9D3   UNKNOWN  F9D3            ; Unknown Fxxx instruction
$BE2    $5FD9   UNKNOWN  $5FD9           ; Unknown 5xxx instruction
$BE4    $F4DA   UNKNOWN  F4DA            ; Unknown Fxxx instruction
$BE6    $2546   CALL     $546            ; Call subroutine at 546
$BE8    $019E   SYS      $19E            ; System call to 19E
$BEA    $08C4   SYS      $8C4            ; System call to 8C4
$BEC    $9376   UNKNOWN  $9376           ; Unknown 9xxx instruction
$BEE    $FE2B   UNKNOWN  FE2B            ; Unknown Fxxx instruction
$BF0    $7C73   ADD      VC, #73         ; Add 115 to VC
$BF2    $7056   ADD      V0, #56         ; Add 86 to V0
$BF4    $4559   SNE      V5, #59         ; Skip if V5 != 89
$BF6    $97A8   UNKNOWN  $97A8           ; Unknown 9xxx instruction
$BF8    $9751   UNKNOWN  $9751           ; Unknown 9xxx instruction
$BFA    $6A99   LD       VA, #99         ; Load 153 into VA
$BFC    $3861   SE       V8, #61         ; Skip if V8 == 97
$BFE    $0A17   SYS      $A17            ; System call to A17
$C00    $9A71   UNKNOWN  $9A71           ; Unknown 9xxx instruction
$C02    $98D0   SNE      V8, VD          ; Skip if V8 != VD
$C04    $7EA3   ADD      VE, #A3         ; Add 163 to VE
$C06    $E3EE   UNKNOWN  $E3EE           ; Unknown Exxx instruction
$C08    $27E2   CALL     $7E2            ; Call subroutine at 7E2
$C0A    $BF3D   JP       V0, $F3D        ; Jump to V0 + F3D
$C0C    $76E2   ADD      V6, #E2         ; Add 226 to V6
$C0E    $4DFE   SNE      VD, #FE         ; Skip if VD != 254
$C10    $8632   AND      V6, V3          ; V6 &= V3
$C12    $1F98   JP       $F98            ; Jump to F98
$C14    $88CD   UNKNOWN  88CD            ; Unknown 8xxx instruction
$C16    $25B5   CALL     $5B5            ; Call subroutine at 5B5
$C18    $D90A   DRW      V9, V0, #A      ; Draw 10-byte sprite at V9, V0
$C1A    $408F   SNE      V0, #8F         ; Skip if V0 != 143
$C1C    $F2F0   UNKNOWN  F2F0            ; Unknown Fxxx instruction
$C1E    $252B   CALL     $52B            ; Call subroutine at 52B
$C20    $1C63   JP       $C63            ; Jump to C63
$C22    $EA20   UNKNOWN  $EA20           ; Unknown Exxx instruction
$C24    $FEED   UNKNOWN  FEED            ; Unknown Fxxx instruction
$C26    $796B   ADD      V9, #6B         ; Add 107 to V9
$C28    $B1B8   JP       V0, $1B8        ; Jump to V0 + 1B8
$C2A    $E1E3   UNKNOWN  $E1E3           ; Unknown Exxx instruction
$C2C    $EDA9   UNKNOWN  $EDA9           ; Unknown Exxx instruction
$C2E    $A65A   LD       I, $65A         ; Load 65A into I
$C30    $1660   JP       $660            ; Jump to 660
$C32    $4D11   SNE      VD, #11         ; Skip if VD != 17
$C34    $EEE8   UNKNOWN  $EEE8           ; Unknown Exxx instruction
$C36    $AAA9   LD       I, $AA9         ; Load AA9 into I
$C38    $9D28   UNKNOWN  $9D28           ; Unknown 9xxx instruction
$C3A    $D5B4   DRW      V5, VB, #4      ; Draw 4-byte sprite at V5, VB
$C3C    $0934   SYS      $934            ; System call to 934
$C3E    $8BE9   UNKNOWN  8BE9            ; Unknown 8xxx instruction
$C40    $AF21   LD       I, $F21         ; Load F21 into I
$C42    $673F   LD       V7, #3F         ; Load 63 into V7
$C44    $3B06   SE       VB, #06         ; Skip if VB == 6
$C46    $E8DF   UNKNOWN  $E8DF           ; Unknown Exxx instruction
$C48    $E4BF   UNKNOWN  $E4BF           ; Unknown Exxx instruction
$C4A    $5826   UNKNOWN  $5826           ; Unknown 5xxx instruction
$C4C    $AF18   LD       I, $F18         ; Load F18 into I
$C4E    $B476   JP       V0, $476        ; Jump to V0 + 476
$C50    $C9FA   RND      V9, #FA         ; V9 = random & FA
$C52    $527E   UNKNOWN  $527E           ; Unknown 5xxx instruction
$C54    $D95F   DRW      V9, V5, #F      ; Draw 15-byte sprite at V9, V5
$C56    $B750   JP       V0, $750        ; Jump to V0 + 750
$C58    $0198   SYS      $198            ; System call to 198
$C5A    $5AEB   UNKNOWN  $5AEB           ; Unknown 5xxx instruction
$C5C    $E71E   UNKNOWN  $E71E           ; Unknown Exxx instruction
$C5E    $5DBA   UNKNOWN  $5DBA           ; Unknown 5xxx instruction
$C60    $FDB1   UNKNOWN  FDB1            ; Unknown Fxxx instruction
$C62    $D684   DRW      V6, V8, #4      ; Draw 4-byte sprite at V6, V8
$C64    $4B55   SNE      VB, #55         ; Skip if VB != 85
$C66    $878A   UNKNOWN  878A            ; Unknown 8xxx instruction
$C68    $9548   UNKNOWN  $9548           ; Unknown 9xxx instruction
$C6A    $D495   DRW      V4, V9, #5      ; Draw 5-byte sprite at V4, V9
$C6C    $B9AC   JP       V0, $9AC        ; Jump to V0 + 9AC
$C6E    $7CD0   ADD      VC, #D0         ; Add 208 to VC
$C70    $CC65   RND      VC, #65         ; VC = random & 65
$C72    $8FB2   AND      VF, VB          ; VF &= VB
$C74    $5C9E   UNKNOWN  $5C9E           ; Unknown 5xxx instruction
$C76    $FCC1   UNKNOWN  FCC1            ; Unknown Fxxx instruction
$C78    $89D2   AND      V9, VD          ; V9 &= VD
$C7A    $41DC   SNE      V1, #DC         ; Skip if V1 != 220
$C7C    $5D1E   UNKNOWN  $5D1E           ; Unknown 5xxx instruction
$C7E    $9E16   UNKNOWN  $9E16           ; Unknown 9xxx instruction
$C80    $8E21   OR       VE, V2          ; VE |= V2
$C82    $7F85   ADD      VF, #85         ; Add 133 to VF
$C84    $02D4   SYS      $2D4            ; System call to 2D4
$C86    $8D9D   UNKNOWN  8D9D            ; Unknown 8xxx instruction
$C88    $5DC7   UNKNOWN  $5DC7           ; Unknown 5xxx instruction
$C8A    $CE91   RND      VE, #91         ; VE = random & 91
$C8C    $83C3   XOR      V3, VC          ; V3 ^= VC
$C8E    $6C9A   LD       VC, #9A         ; Load 154 into VC
$C90    $6DD8   LD       VD, #D8         ; Load 216 into VD
$C92    $9A38   UNKNOWN  $9A38           ; Unknown 9xxx instruction
$C94    $A9C4   LD       I, $9C4         ; Load 9C4 into I
$C96    $2021   CALL     $021            ; Call subroutine at 021
$C98    $9C1D   UNKNOWN  $9C1D           ; Unknown 9xxx instruction
$C9A    $EC27   UNKNOWN  $EC27           ; Unknown Exxx instruction
$C9C    $3978   SE       V9, #78         ; Skip if V9 == 120
$C9E    $BB13   JP       V0, $B13        ; Jump to V0 + B13
$CA0    $9FE8   UNKNOWN  $9FE8           ; Unknown 9xxx instruction
$CA2    $9F35   UNKNOWN  $9F35           ; Unknown 9xxx instruction
$CA4    $062E   SYS      $62E            ; System call to 62E
$CA6    $CCA9   RND      VC, #A9         ; VC = random & A9
$CA8    $08FA   SYS      $8FA            ; System call to 8FA
$CAA    $B786   JP       V0, $786        ; Jump to V0 + 786
$CAC    $923E   UNKNOWN  $923E           ; Unknown 9xxx instruction
$CAE    $6E3A   LD       VE, #3A         ; Load 58 into VE
$CB0    $0C39   SYS      $C39            ; System call to C39
$CB2    $871C   UNKNOWN  871C            ; Unknown 8xxx instruction
$CB4    $59C8   UNKNOWN  $59C8           ; Unknown 5xxx instruction
$CB6    $3A6E   SE       VA, #6E         ; Skip if VA == 110
$CB8    $6C13   LD       VC, #13         ; Load 19 into VC
$CBA    $59C5   UNKNOWN  $59C5           ; Unknown 5xxx instruction
$CBC    $0BD0   SYS      $BD0            ; System call to BD0
$CBE    $0797   SYS      $797            ; System call to 797
$CC0    $BA52   JP       V0, $A52        ; Jump to V0 + A52
$CC2    $E62C   UNKNOWN  $E62C           ; Unknown Exxx instruction
$CC4    $3079   SE       V0, #79         ; Skip if V0 == 121
$CC6    $1959   JP       $959            ; Jump to 959
$CC8    $D0AD   DRW      V0, VA, #D      ; Draw 13-byte sprite at V0, VA
$CCA    $299A   CALL     $99A            ; Call subroutine at 99A
$CCC    $DA31   DRW      VA, V3, #1      ; Draw 1-byte sprite at VA, V3
$CCE    $5929   UNKNOWN  $5929           ; Unknown 5xxx instruction
$CD0    $9954   UNKNOWN  $9954           ; Unknown 9xxx instruction
$CD2    $79D7   ADD      V9, #D7         ; Add 215 to V9
$CD4    $A193   LD       I, $193         ; Load 193 into I
$CD6    $7DF4   ADD      VD, #F4         ; Add 244 to VD
$CD8    $FBBF   UNKNOWN  FBBF            ; Unknown Fxxx instruction
$CDA    $3C18   SE       VC, #18         ; Skip if VC == 24
$CDC    $5147   UNKNOWN  $5147           ; Unknown 5xxx instruction
$CDE    $7B85   ADD      VB, #85         ; Add 133 to VB
$CE0    $6EC9   LD       VE, #C9         ; Load 201 into VE
$CE2    $F457   UNKNOWN  F457            ; Unknown Fxxx instruction
$CE4    $8376   SHR      V3              ; V3 >>= 1, VF = LSB
$CE6    $323C   SE       V2, #3C         ; Skip if V2 == 60
$CE8    $F625   UNKNOWN  F625            ; Unknown Fxxx instruction
$CEA    $44F2   SNE      V4, #F2         ; Skip if V4 != 242
$CEC    $C133   RND      V1, #33         ; V1 = random & 33
$CEE    $24E9   CALL     $4E9            ; Call subroutine at 4E9
$CF0    $B992   JP       V0, $992        ; Jump to V0 + 992
$CF2    $D3E6   DRW      V3, VE, #6      ; Draw 6-byte sprite at V3, VE
$CF4    $1A15   JP       $A15            ; Jump to A15
$CF6    $5E34   UNKNOWN  $5E34           ; Unknown 5xxx instruction
$CF8    $3238   SE       V2, #38         ; Skip if V2 == 56
$CFA    $F7CA   UNKNOWN  F7CA            ; Unknown Fxxx instruction
$CFC    $719E   ADD      V1, #9E         ; Add 158 to V1
$CFE    $6BC6   LD       VB, #C6         ; Load 198 into VB
$D00    $34F4   SE       V4, #F4         ; Skip if V4 == 244
$D02    $94ED   UNKNOWN  $94ED           ; Unknown 9xxx instruction
$D04    $EF61   UNKNOWN  $EF61           ; Unknown Exxx instruction
$D06    $1291   JP       $291            ; Jump to 291
$D08    $29AF   CALL     $9AF            ; Call subroutine at 9AF
$D0A    $B4C5   JP       V0, $4C5        ; Jump to V0 + 4C5
$D0C    $AE24   LD       I, $E24         ; Load E24 into I
$D0E    $F5F0   UNKNOWN  F5F0            ; Unknown Fxxx instruction
$D10    $3D89   SE       VD, #89         ; Skip if VD == 137
$D12    $E38C   UNKNOWN  $E38C           ; Unknown Exxx instruction
$D14    $F538   UNKNOWN  F538            ; Unknown Fxxx instruction
$D16    $4DC2   SNE      VD, #C2         ; Skip if VD != 194
$D18    $DDFD   DRW      VD, VF, #D      ; Draw 13-byte sprite at VD, VF
$D1A    $7314   ADD      V3, #14         ; Add 20 to V3
$D1C    $7FE5   ADD      VF, #E5         ; Add 229 to VF
$D1E    $4C14   SNE      VC, #14         ; Skip if VC != 20
$D20    $DC2D   DRW      VC, V2, #D      ; Draw 13-byte sprite at VC, V2
$D22    $454A   SNE      V5, #4A         ; Skip if V5 != 74
$D24    $3450   SE       V4, #50         ; Skip if V4 == 80
$D26    $FFC9   UNKNOWN  FFC9            ; Unknown Fxxx instruction
$D28    $6582   LD       V5, #82         ; Load 130 into V5
$D2A    $C92B   RND      V9, #2B         ; V9 = random & 2B
$D2C    $76E2   ADD      V6, #E2         ; Add 226 to V6
$D2E    $A661   LD       I, $661         ; Load 661 into I
$D30    $80B3   XOR      V0, VB          ; V0 ^= VB
$D32    $8ED7   SUBN     VE, VD          ; VE = VD - VE, VF = !borrow
$D34    $FE4C   UNKNOWN  FE4C            ; Unknown Fxxx instruction
$D36    $6BC1   LD       VB, #C1         ; Load 193 into VB
$D38    $1ACA   JP       $ACA            ; Jump to ACA
$D3A    $670C   LD       V7, #0C         ; Load 12 into V7
$D3C    $09E6   SYS      $9E6            ; System call to 9E6
$D3E    $E958   UNKNOWN  $E958           ; Unknown Exxx instruction
$D40    $734A   ADD      V3, #4A         ; Add 74 to V3
$D42    $892A   UNKNOWN  892A            ; Unknown 8xxx instruction
$D44    $17B6   JP       $7B6            ; Jump to 7B6
$D46    $3ED2   SE       VE, #D2         ; Skip if VE == 210
$D48    $7557   ADD      V5, #57         ; Add 87 to V5
$D4A    $EFF4   UNKNOWN  $EFF4           ; Unknown Exxx instruction
$D4C    $917C   UNKNOWN  $917C           ; Unknown 9xxx instruction
$D4E    $9708   UNKNOWN  $9708           ; Unknown 9xxx instruction
$D50    $9AB1   UNKNOWN  $9AB1           ; Unknown 9xxx instruction
$D52    $9338   UNKNOWN  $9338           ; Unknown 9xxx instruction
$D54    $244F   CALL     $44F            ; Call subroutine at 44F
$D56    $E5A8   UNKNOWN  $E5A8           ; Unknown Exxx instruction
$D58    $1C3F   JP       $C3F            ; Jump to C3F
$D5A    $6057   LD       V0, #57         ; Load 87 into V0
$D5C    $7453   ADD      V4, #53         ; Add 83 to V4
$D5E    $BC63   JP       V0, $C63        ; Jump to V0 + C63
$D60    $21B1   CALL     $1B1            ; Call subroutine at 1B1
$D62    $EFD7   UNKNOWN  $EFD7           ; Unknown Exxx instruction
$D64    $C874   RND      V8, #74         ; V8 = random & 74
$D66    $9B24   UNKNOWN  $9B24           ; Unknown 9xxx instruction
$D68    $E304   UNKNOWN  $E304           ; Unknown Exxx instruction
$D6A    $1E96   JP       $E96            ; Jump to E96
$D6C    $3C42   SE       VC, #42         ; Skip if VC == 66
$D6E    $DBBA   DRW      VB, VB, #A      ; Draw 10-byte sprite at VB, VB
$D70    $0193   SYS      $193            ; System call to 193
$D72    $6120   LD       V1, #20         ; Load 32 into V1
$D74    $E92C   UNKNOWN  $E92C           ; Unknown Exxx instruction
$D76    $AEB6   LD       I, $EB6         ; Load EB6 into I
$D78    $2E0D   CALL     $E0D            ; Call subroutine at E0D
$D7A    $D886   DRW      V8, V8, #6      ; Draw 6-byte sprite at V8, V8
$D7C    $3053   SE       V0, #53         ; Skip if V0 == 83
$D7E    $7832   ADD      V8, #32         ; Add 50 to V8
$D80    $D6DF   DRW      V6, VD, #F      ; Draw 15-byte sprite at V6, VD
$D82    $22BF   CALL     $2BF            ; Call subroutine at 2BF
$D84    $089B   SYS      $89B            ; System call to 89B
$D86    $EF74   UNKNOWN  $EF74           ; Unknown Exxx instruction
$D88    $2F21   CALL     $F21            ; Call subroutine at F21
$D8A    $E6BE   UNKNOWN  $E6BE           ; Unknown Exxx instruction
$D8C    $DB41   DRW      VB, V4, #1      ; Draw 1-byte sprite at VB, V4
$D8E    $25C4   CALL     $5C4            ; Call subroutine at 5C4
$D90    $2D67   CALL     $D67            ; Call subroutine at D67
$D92    $DB45   DRW      VB, V4, #5      ; Draw 5-byte sprite at VB, V4
$D94    $C438   RND      V4, #38         ; V4 = random & 38
$D96    $93D4   UNKNOWN  $93D4           ; Unknown 9xxx instruction
$D98    $2948   CALL     $948            ; Call subroutine at 948
$D9A    $FE65   LD       VE, [I]         ; Load V0-VE from I
$D9C    $10D1   JP       $0D1            ; Jump to 0D1
$D9E    $2067   CALL     $067            ; Call subroutine at 067
$DA0    $F429   LD       F, V4           ; I = sprite address for digit V4
$DA2    $2A92   CALL     $A92            ; Call subroutine at A92
$DA4    $A5DF   LD       I, $5DF         ; Load 5DF into I
$DA6    $214E   CALL     $14E            ; Call subroutine at 14E
$DA8    $3C85   SE       VC, #85         ; Skip if VC == 133
$DAA    $BBEA   JP       V0, $BEA        ; Jump to V0 + BEA
$DAC    $49CC   SNE      V9, #CC         ; Skip if V9 != 204
$DAE    $0EC6   SYS      $EC6            ; System call to EC6
$DB0    $66C4   LD       V6, #C4         ; Load 196 into V6
$DB2    $9F47   UNKNOWN  $9F47           ; Unknown 9xxx instruction
$DB4    $EBDE   UNKNOWN  $EBDE           ; Unknown Exxx instruction
$DB6    $A63D   LD       I, $63D         ; Load 63D into I
$DB8    $BE6A   JP       V0, $E6A        ; Jump to V0 + E6A
$DBA    $06C7   SYS      $6C7            ; System call to 6C7
$DBC    $7F49   ADD      VF, #49         ; Add 73 to VF
$DBE    $0EDB   SYS      $EDB            ; System call to EDB
$DC0    $B349   JP       V0, $349        ; Jump to V0 + 349
$DC2    $CAAD   RND      VA, #AD         ; VA = random & AD
$DC4    $A81E   LD       I, $81E         ; Load 81E into I
$DC6    $C72A   RND      V7, #2A         ; V7 = random & 2A
$DC8    $AEE6   LD       I, $EE6         ; Load EE6 into I
$DCA    $8E66   SHR      VE              ; VE >>= 1, VF = LSB
$DCC    $C900   RND      V9, #00         ; V9 = random & 00
$DCE    $5C25   UNKNOWN  $5C25           ; Unknown 5xxx instruction
$DD0    $A023   LD       I, $023         ; Load 023 into I
$DD2    $26C1   CALL     $6C1            ; Call subroutine at 6C1
$DD4    $9DE6   UNKNOWN  $9DE6           ; Unknown 9xxx instruction
$DD6    $DC1B   DRW      VC, V1, #B      ; Draw 11-byte sprite at VC, V1
$DD8    $A209   LD       I, $209         ; Load 209 into I
$DDA    $A062   LD       I, $062         ; Load 062 into I
$DDC    $E24D   UNKNOWN  $E24D           ; Unknown Exxx instruction
$DDE    $9ACD   UNKNOWN  $9ACD           ; Unknown 9xxx instruction
$DE0    $6136   LD       V1, #36         ; Load 54 into V1
$DE2    $D2BF   DRW      V2, VB, #F      ; Draw 15-byte sprite at V2, VB
$DE4    $9C44   UNKNOWN  $9C44           ; Unknown 9xxx instruction
$DE6    $4327   SNE      V3, #27         ; Skip if V3 != 39
$DE8    $8525   SUB      V5, V2          ; V5 -= V2, VF = !borrow
$DEA    $0D24   SYS      $D24            ; System call to D24
$DEC    $24A2   CALL     $4A2            ; Call subroutine at 4A2
$DEE    $D90A   DRW      V9, V0, #A      ; Draw 10-byte sprite at V9, V0
$DF0    $7787   ADD      V7, #87         ; Add 135 to V7
$DF2    $DBEF   DRW      VB, VE, #F      ; Draw 15-byte sprite at VB, VE
$DF4    $49B9   SNE      V9, #B9         ; Skip if V9 != 185
$DF6    $001C   SYS      $01C            ; System call to 01C
$DF8    $98DA   UNKNOWN  $98DA           ; Unknown 9xxx instruction
$DFA    $45BC   SNE      V5, #BC         ; Skip if V5 != 188
$DFC    $13BB   JP       $3BB            ; Jump to 3BB
$DFE    $87F2   AND      V7, VF          ; V7 &= VF
$E00    $6F60   LD       VF, #60         ; Load 96 into VF
$E02    $AD6D   LD       I, $D6D         ; Load D6D into I
$E04    $56A4   UNKNOWN  $56A4           ; Unknown 5xxx instruction
$E06    $8D59   UNKNOWN  8D59            ; Unknown 8xxx instruction
$E08    $50D3   UNKNOWN  $50D3           ; Unknown 5xxx instruction
$E0A    $6D2E   LD       VD, #2E         ; Load 46 into VD
$E0C    $988F   UNKNOWN  $988F           ; Unknown 9xxx instruction
$E0E    $1692   JP       $692            ; Jump to 692
$E10    $E116   UNKNOWN  $E116           ; Unknown Exxx instruction
$E12    $4A47   SNE      VA, #47         ; Skip if VA != 71
$E14    $28A6   CALL     $8A6            ; Call subroutine at 8A6
$E16    $18C8   JP       $8C8            ; Jump to 8C8
$E18    $FDC5   UNKNOWN  FDC5            ; Unknown Fxxx instruction
$E1A    $FB5C   UNKNOWN  FB5C            ; Unknown Fxxx instruction
$E1C    $9E27   UNKNOWN  $9E27           ; Unknown 9xxx instruction
$E1E    $F4E1   UNKNOWN  F4E1            ; Unknown Fxxx instruction
$E20    $9F57   UNKNOWN  $9F57           ; Unknown 9xxx instruction
$E22    $4691   SNE      V6, #91         ; Skip if V6 != 145
$E24    $A314   LD       I, $314         ; Load 314 into I
$E26    $D270   DRW      V2, V7, #0      ; Draw 0-byte sprite at V2, V7
$E28    $D76B   DRW      V7, V6, #B      ; Draw 11-byte sprite at V7, V6
$E2A    $F633   LD       B, V6           ; Store BCD of V6 at I, I+1, I+2
$E2C    $B7C4   JP       V0, $7C4        ; Jump to V0 + 7C4
$E2E    $0778   SYS      $778            ; System call to 778
$E30    $946D   UNKNOWN  $946D           ; Unknown 9xxx instruction
$E32    $A5E3   LD       I, $5E3         ; Load 5E3 into I
$E34    $1DA3   JP       $DA3            ; Jump to DA3
$E36    $394E   SE       V9, #4E         ; Skip if V9 == 78
$E38    $127B   JP       $27B            ; Jump to 27B
$E3A    $8F62   AND      VF, V6          ; VF &= V6
$E3C    $2C75   CALL     $C75            ; Call subroutine at C75
$E3E    $88DD   UNKNOWN  88DD            ; Unknown 8xxx instruction
$E40    $0E73   SYS      $E73            ; System call to E73
$E42    $6626   LD       V6, #26         ; Load 38 into V6
$E44    $FD4E   UNKNOWN  FD4E            ; Unknown Fxxx instruction
$E46    $7774   ADD      V7, #74         ; Add 116 to V7
$E48    $2B3E   CALL     $B3E            ; Call subroutine at B3E
$E4A    $3C2C   SE       VC, #2C         ; Skip if VC == 44
$E4C    $274F   CALL     $74F            ; Call subroutine at 74F
$E4E    $BAA9   JP       V0, $AA9        ; Jump to V0 + AA9
$E50    $EB62   UNKNOWN  $EB62           ; Unknown Exxx instruction
$E52    $F85A   UNKNOWN  F85A            ; Unknown Fxxx instruction
$E54    $6864   LD       V8, #64         ; Load 100 into V8
$E56    $AD41   LD       I, $D41         ; Load D41 into I
$E58    $5779   UNKNOWN  $5779           ; Unknown 5xxx instruction
$E5A    $7A86   ADD      VA, #86         ; Add 134 to VA
$E5C    $A64D   LD       I, $64D         ; Load 64D into I
$E5E    $166E   JP       $66E            ; Jump to 66E
$E60    $54FA   UNKNOWN  $54FA           ; Unknown 5xxx instruction
$E62    $F11B   UNKNOWN  F11B            ; Unknown Fxxx instruction
$E64    $1E06   JP       $E06            ; Jump to E06
$E66    $4C0D   SNE      VC, #0D         ; Skip if VC != 13
$E68    $64E7   LD       V4, #E7         ; Load 231 into V4
$E6A    $61FC   LD       V1, #FC         ; Load 252 into V1
$E6C    $A00A   LD       I, $00A         ; Load 00A into I
$E6E    $48B5   SNE      V8, #B5         ; Skip if V8 != 181
$E70    $4FC1   SNE      VF, #C1         ; Skip if VF != 193
$E72    $CA51   RND      VA, #51         ; VA = random & 51
$E74    $9F48   UNKNOWN  $9F48           ; Unknown 9xxx instruction
$E76    $4823   SNE      V8, #23         ; Skip if V8 != 35
$E78    $E290   UNKNOWN  $E290           ; Unknown Exxx instruction
$E7A    $BDA0   JP       V0, $DA0        ; Jump to V0 + DA0
$E7C    $B3F1   JP       V0, $3F1        ; Jump to V0 + 3F1
$E7E    $EA81   UNKNOWN  $EA81           ; Unknown Exxx instruction
$E80    $0112   SYS      $112            ; System call to 112
$E82    $D14F   DRW      V1, V4, #F      ; Draw 15-byte sprite at V1, V4
$E84    $F3A9   UNKNOWN  F3A9            ; Unknown Fxxx instruction
$E86    $315B   SE       V1, #5B         ; Skip if V1 == 91
$E88    $A52D   LD       I, $52D         ; Load 52D into I
$E8A    $3BD1   SE       VB, #D1         ; Skip if VB == 209
$E8C    $C5ED   RND      V5, #ED         ; V5 = random & ED
$E8E    $FB34   UNKNOWN  FB34            ; Unknown Fxxx instruction
$E90    $E976   UNKNOWN  $E976           ; Unknown Exxx instruction
$E92    $98BA   UNKNOWN  $98BA           ; Unknown 9xxx instruction
$E94    $5E5D   UNKNOWN  $5E5D           ; Unknown 5xxx instruction
$E96    $8947   SUBN     V9, V4          ; V9 = V4 - V9, VF = !borrow
$E98    $4D9E   SNE      VD, #9E         ; Skip if VD != 158
$E9A    $7950   ADD      V9, #50         ; Add 80 to V9
$E9C    $25FC   CALL     $5FC            ; Call subroutine at 5FC
$E9E    $4602   SNE      V6, #02         ; Skip if V6 != 2
$EA0    $52EF   UNKNOWN  $52EF           ; Unknown 5xxx instruction
$EA2    $A7B0   LD       I, $7B0         ; Load 7B0 into I
$EA4    $4E4A   SNE      VE, #4A         ; Skip if VE != 74
$EA6    $F197   UNKNOWN  F197            ; Unknown Fxxx instruction
$EA8    $8F2C   UNKNOWN  8F2C            ; Unknown 8xxx instruction
$EAA    $C3B6   RND      V3, #B6         ; V3 = random & B6
$EAC    $2550   CALL     $550            ; Call subroutine at 550
$EAE    $F37D   UNKNOWN  F37D            ; Unknown Fxxx instruction
$EB0    $E50A   UNKNOWN  $E50A           ; Unknown Exxx instruction
$EB2    $605F   LD       V0, #5F         ; Load 95 into V0
$EB4    $DC1E   DRW      VC, V1, #E      ; Draw 14-byte sprite at VC, V1
$EB6    $6F3D   LD       VF, #3D         ; Load 61 into VF
$EB8    $E811   UNKNOWN  $E811           ; Unknown Exxx instruction
$EBA    $89C7   SUBN     V9, VC          ; V9 = VC - V9, VF = !borrow
$EBC    $A2FE   LD       I, $2FE         ; Load 2FE into I
$EBE    $356E   SE       V5, #6E         ; Skip if V5 == 110
$EC0    $9C34   UNKNOWN  $9C34           ; Unknown 9xxx instruction
$EC2    $5B91   UNKNOWN  $5B91           ; Unknown 5xxx instruction
$EC4    $E8C4   UNKNOWN  $E8C4           ; Unknown Exxx instruction
$EC6    $BD82   JP       V0, $D82        ; Jump to V0 + D82
$EC8    $59B9   UNKNOWN  $59B9           ; Unknown 5xxx instruction
$ECA    $F620   UNKNOWN  F620            ; Unknown Fxxx instruction
$ECC    $9691   UNKNOWN  $9691           ; Unknown 9xxx instruction
$ECE    $61E8   LD       V1, #E8         ; Load 232 into V1
$ED0    $1969   JP       $969            ; Jump to 969
$ED2    $1857   JP       $857            ; Jump to 857
$ED4    $147E   JP       $47E            ; Jump to 47E
$ED6    $F167   UNKNOWN  F167            ; Unknown Fxxx instruction
$ED8    $45B5   SNE      V5, #B5         ; Skip if V5 != 181
$EDA    $2A91   CALL     $A91            ; Call subroutine at A91
$EDC    $7B12   ADD      VB, #12         ; Add 18 to VB
$EDE    $EB29   UNKNOWN  $EB29           ; Unknown Exxx instruction
$EE0    $1AD1   JP       $AD1            ; Jump to AD1
$EE2    $1B20   JP       $B20            ; Jump to B20
$EE4    $0CAC   SYS      $CAC            ; System call to CAC
$EE6    $EE9B   UNKNOWN  $EE9B           ; Unknown Exxx instruction
$EE8    $C2EF   RND      V2, #EF         ; V2 = random & EF
$EEA    $CF50   RND      VF, #50         ; VF = random & 50
$EEC    $7942   ADD      V9, #42         ; Add 66 to V9
$EEE    $06DB   SYS      $6DB            ; System call to 6DB
$EF0    $4C22   SNE      VC, #22         ; Skip if VC != 34
$EF2    $0932   SYS      $932            ; System call to 932
$EF4    $6C38   LD       VC, #38         ; Load 56 into VC
$EF6    $F1F0   UNKNOWN  F1F0            ; Unknown Fxxx instruction
$EF8    $652B   LD       V5, #2B         ; Load 43 into V5
$EFA    $721D   ADD      V2, #1D         ; Add 29 to V2
$EFC    $2BD8   CALL     $BD8            ; Call subroutine at BD8
$EFE    $4E12   SNE      VE, #12         ; Skip if VE != 18
$F00    $EC25   UNKNOWN  $EC25           ; Unknown Exxx instruction
$F02    $8444   ADD      V4, V4          ; V4 += V4, VF = carry
$F04    $4248   SNE      V2, #48         ; Skip if V2 != 72
$F06    $2BB3   CALL     $BB3            ; Call subroutine at BB3
$F08    $61B7   LD       V1, #B7         ; Load 183 into V1
$F0A    $913D   UNKNOWN  $913D           ; Unknown 9xxx instruction
$F0C    $7264   ADD      V2, #64         ; Add 100 to V2
$F0E    $59C3   UNKNOWN  $59C3           ; Unknown 5xxx instruction
$F10    $ACE6   LD       I, $CE6         ; Load CE6 into I
$F12    $C1BD   RND      V1, #BD         ; V1 = random & BD
$F14    $43D6   SNE      V3, #D6         ; Skip if V3 != 214
$F16    $E12F   UNKNOWN  $E12F           ; Unknown Exxx instruction
$F18    $8117   SUBN     V1, V1          ; V1 = V1 - V1, VF = !borrow
$F1A    $3AF2   SE       VA, #F2         ; Skip if VA == 242
$F1C    $729B   ADD      V2, #9B         ; Add 155 to V2
$F1E    $B8A4   JP       V0, $8A4        ; Jump to V0 + 8A4
$F20    $0D6B   SYS      $D6B            ; System call to D6B
$F22    $0762   SYS      $762            ; System call to 762
$F24    $9825   UNKNOWN  $9825           ; Unknown 9xxx instruction
$F26    $4F4F   SNE      VF, #4F         ; Skip if VF != 79
$F28    $BF51   JP       V0, $F51        ; Jump to V0 + F51
$F2A    $BC0A   JP       V0, $C0A        ; Jump to V0 + C0A
$F2C    $8F26   SHR      VF              ; VF >>= 1, VF = LSB
$F2E    $77ED   ADD      V7, #ED         ; Add 237 to V7
$F30    $AD63   LD       I, $D63         ; Load D63 into I
$F32    $046D   SYS      $46D            ; System call to 46D
$F34    $7236   ADD      V2, #36         ; Add 54 to V2
$F36    $E989   UNKNOWN  $E989           ; Unknown Exxx instruction
$F38    $3159   SE       V1, #59         ; Skip if V1 == 89
$F3A    $6531   LD       V5, #31         ; Load 49 into V5
$F3C    $8AA4   ADD      VA, VA          ; VA += VA, VF = carry
$F3E    $05B6   SYS      $5B6            ; System call to 5B6
$F40    $4917   SNE      V9, #17         ; Skip if V9 != 23
$F42    $99B9   UNKNOWN  $99B9           ; Unknown 9xxx instruction
$F44    $5CAF   UNKNOWN  $5CAF           ; Unknown 5xxx instruction
$F46    $B474   JP       V0, $474        ; Jump to V0 + 474
$F48    $619B   LD       V1, #9B         ; Load 155 into V1
$F4A    $5F31   UNKNOWN  $5F31           ; Unknown 5xxx instruction
$F4C    $C407   RND      V4, #07         ; V4 = random & 07
$F4E    $2B1F   CALL     $B1F            ; Call subroutine at B1F
$F50    $2AA8   CALL     $AA8            ; Call subroutine at AA8
$F52    $29FE   CALL     $9FE            ; Call subroutine at 9FE
$F54    $6E1C   LD       VE, #1C         ; Load 28 into VE
$F56    $123C   JP       $23C            ; Jump to 23C
$F58    $E81C   UNKNOWN  $E81C           ; Unknown Exxx instruction
$F5A    $C7DE   RND      V7, #DE         ; V7 = random & DE
$F5C    $910D   UNKNOWN  $910D           ; Unknown 9xxx instruction
$F5E    $46DF   SNE      V6, #DF         ; Skip if V6 != 223
$F60    $E250   UNKNOWN  $E250           ; Unknown Exxx instruction
$F62    $00A1   SYS      $0A1            ; System call to 0A1
$F64    $DB1A   DRW      VB, V1, #A      ; Draw 10-byte sprite at VB, V1
$F66    $B5B3   JP       V0, $5B3        ; Jump to V0 + 5B3
$F68    $42C6   SNE      V2, #C6         ; Skip if V2 != 198
$F6A    $FDEB   UNKNOWN  FDEB            ; Unknown Fxxx instruction
$F6C    $C857   RND      V8, #57         ; V8 = random & 57
$F6E    $4CD4   SNE      VC, #D4         ; Skip if VC != 212
$F70    $B55E   JP       V0, $55E        ; Jump to V0 + 55E
$F72    $A823   LD       I, $823         ; Load 823 into I
$F74    $B5E5   JP       V0, $5E5        ; Jump to V0 + 5E5
$F76    $A5A3   LD       I, $5A3         ; Load 5A3 into I
$F78    $68F8   LD       V8, #F8         ; Load 248 into V8
$F7A    $DC0F   DRW      VC, V0, #F      ; Draw 15-byte sprite at VC, V0
$F7C    $A10B   LD       I, $10B         ; Load 10B into I
$F7E    $2B99   CALL     $B99            ; Call subroutine at B99
$F80    $1801   JP       $801            ; Jump to 801
$F82    $DE8E   DRW      VE, V8, #E      ; Draw 14-byte sprite at VE, V8
$F84    $D1AF   DRW      V1, VA, #F      ; Draw 15-byte sprite at V1, VA
$F86    $2725   CALL     $725            ; Call subroutine at 725
$F88    $0CE4   SYS      $CE4            ; System call to CE4
$F8A    $C3D3   RND      V3, #D3         ; V3 = random & D3
$F8C    $5E02   UNKNOWN  $5E02           ; Unknown 5xxx instruction
$F8E    $50E4   UNKNOWN  $50E4           ; Unknown 5xxx instruction
$F90    $8422   AND      V4, V2          ; V4 &= V2
$F92    $B215   JP       V0, $215        ; Jump to V0 + 215
$F94    $BE3D   JP       V0, $E3D        ; Jump to V0 + E3D
$F96    $DDC1   DRW      VD, VC, #1      ; Draw 1-byte sprite at VD, VC
$F98    $122B   JP       $22B            ; Jump to 22B
$F9A    $4C3C   SNE      VC, #3C         ; Skip if VC != 60
$F9C    $A668   LD       I, $668         ; Load 668 into I
$F9E    $4481   SNE      V4, #81         ; Skip if V4 != 129
$FA0    $0233   SYS      $233            ; System call to 233
$FA2    $75CD   ADD      V5, #CD         ; Add 205 to V5
$FA4    $D354   DRW      V3, V5, #4      ; Draw 4-byte sprite at V3, V5
$FA6    $2076   CALL     $076            ; Call subroutine at 076
$FA8    $26C2   CALL     $6C2            ; Call subroutine at 6C2
$FAA    $3026   SE       V0, #26         ; Skip if V0 == 38
$FAC    $9F7B   UNKNOWN  $9F7B           ; Unknown 9xxx instruction
$FAE    $A4A8   LD       I, $4A8         ; Load 4A8 into I
$FB0    $F77E   UNKNOWN  F77E            ; Unknown Fxxx instruction
$FB2    $C0A4   RND      V0, #A4         ; V0 = random & A4
$FB4    $967A   UNKNOWN  $967A           ; Unknown 9xxx instruction
$FB6    $2AA2   CALL     $AA2            ; Call subroutine at AA2
$FB8    $4281   SNE      V2, #81         ; Skip if V2 != 129
$FBA    $681D   LD       V8, #1D         ; Load 29 into V8
$FBC    $95BC   UNKNOWN  $95BC           ; Unknown 9xxx instruction
$FBE    $A6FB   LD       I, $6FB         ; Load 6FB into I
$FC0    $C03F   RND      V0, #3F         ; V0 = random & 3F
$FC2    $742A   ADD      V4, #2A         ; Add 42 to V4
$FC4    $B2FA   JP       V0, $2FA        ; Jump to V0 + 2FA
$FC6    $9B3D   UNKNOWN  $9B3D           ; Unknown 9xxx instruction
$FC8    $EA2F   UNKNOWN  $EA2F           ; Unknown Exxx instruction
$FCA    $BCA5   JP       V0, $CA5        ; Jump to V0 + CA5
$FCC    $1FB6   JP       $FB6            ; Jump to FB6
$FCE    $3769   SE       V7, #69         ; Skip if V7 == 105
$FD0    $7BFA   ADD      VB, #FA         ; Add 250 to VB
$FD2    $CB38   RND      VB, #38         ; VB = random & 38
$FD4    $9E6C   UNKNOWN  $9E6C           ; Unknown 9xxx instruction
$FD6    $64CF   LD       V4, #CF         ; Load 207 into V4
$FD8    $9E14   UNKNOWN  $9E14           ; Unknown 9xxx instruction
$FDA    $5A44   UNKNOWN  $5A44           ; Unknown 5xxx instruction
$FDC    $7758   ADD      V7, #58         ; Add 88 to V7
$FDE    $7961   ADD      V9, #61         ; Add 97 to V9
$FE0    $0DBB   SYS      $DBB            ; System call to DBB
$FE2    $3E13   SE       VE, #13         ; Skip if VE == 19
$FE4    $C0C7   RND      V0, #C7         ; V0 = random & C7
$FE6    $29AE   CALL     $9AE            ; Call subroutine at 9AE
$FE8    $BC66   JP       V0, $C66        ; Jump to V0 + C66
$FEA    $1C7D   JP       $C7D            ; Jump to C7D
$FEC    $5118   UNKNOWN  $5118           ; Unknown 5xxx instruction
$FEE    $82B1   OR       V2, VB          ; V2 |= VB
$FF0    $1492   JP       $492            ; Jump to 492
$FF2    $3FBF   SE       VF, #BF         ; Skip if VF == 191
$FF4    $3875   SE       V8, #75         ; Skip if V8 == 117
$FF6    $11D0   JP       $1D0            ; Jump to 1D0
$FF8    $E8EF   UNKNOWN  $E8EF           ; Unknown Exxx instruction
$FFA    $AC41   LD       I, $C41         ; Load C41 into I
$FFC    $59E3   UNKNOWN  $59E3           ; Unknown 5xxx instruction
$FFE    $2252   CALL     $252            ; Call subroutine at 252

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 490 (27.3%)
  LD      : 237 (13.2%)
  JP      : 220 (12.3%)
  CALL    : 129 ( 7.2%)
  ADD     : 120 ( 6.7%)
  SE      : 116 ( 6.5%)
  SNE     : 115 ( 6.4%)
  RND     : 106 ( 5.9%)
  SYS     : 105 ( 5.9%)
  DRW     :  92 ( 5.1%)
  AND     :  14 ( 0.8%)
  XOR     :  11 ( 0.6%)
  OR      :   9 ( 0.5%)
  SUBN    :   8 ( 0.4%)
  SUB     :   7 ( 0.4%)
  SHL     :   5 ( 0.3%)
  SHR     :   5 ( 0.3%)
  SKP     :   1 ( 0.1%)
  CLS     :   1 ( 0.1%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 357 (19.9%)
Arithmetic Operations: 169 (9.4%)
