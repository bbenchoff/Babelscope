
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B020D01_I28426_C2846_c95fe7d902d7.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 20
Instance: 28426
Direction: ascending
Final Array: [0, 1, 6, 7, 136, 175, 187, 223]
Operations: R:0 W:1 C:88 S:9

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 113
Sort Array References:
  $21C: LD I, $25E ; Load 25E into I
  $224: LD I, $F57 ; Load F57 into I
  $25A: LD I, $A4F ; Load A4F into I
  $26C: LD I, $814 ; Load 814 into I
  $2AE: LD I, $459 ; Load 459 into I
  $2D4: LD I, $32F ; Load 32F into I
  $2D6: LD I, $CBD ; Load CBD into I
  $2EE: LD I, $BF2 ; Load BF2 into I
  $2F8: ADD I, VE ; I ADDRESS MANIPULATION
  $318: LD I, $9D7 ; Load 9D7 into I
  $324: LD I, $F1F ; Load F1F into I
  $32C: LD I, $5AA ; Load 5AA into I
  $37A: LD I, $9AB ; Load 9AB into I
  $384: LD I, $AFD ; Load AFD into I
  $3A6: LD I, $A07 ; Load A07 into I
  $3C8: LD I, $C34 ; Load C34 into I
  $3DC: LD I, $4EF ; Load 4EF into I
  $41A: LD I, $8A7 ; Load 8A7 into I
  $442: LD I, $B56 ; Load B56 into I
  $44A: LD I, $D93 ; Load D93 into I
  $48A: LD I, $4E3 ; Load 4E3 into I
  $4B2: LD I, $211 ; Load 211 into I
  $4D2: LD I, $41B ; Load 41B into I
  $4E6: LD I, $248 ; Load 248 into I
  $4FA: LD I, $C8F ; Load C8F into I
  $520: LD I, $F16 ; Load F16 into I
  $522: LD I, $185 ; Load 185 into I
  $540: LD I, $E7D ; Load E7D into I
  $558: LD I, $D88 ; Load D88 into I
  $588: LD I, $65A ; Load 65A into I
  $59E: LD I, $C15 ; Load C15 into I
  $5B8: LD I, $515 ; Load 515 into I
  $5CA: LD I, $F33 ; Load F33 into I
  $5EE: LD I, $897 ; Load 897 into I
  $5F0: LD I, $38A ; Load 38A into I
  $62E: LD I, $10E ; Load 10E into I
  $630: LD I, $A93 ; Load A93 into I
  $65C: LD I, $4C0 ; Load 4C0 into I
  $668: LD I, $107 ; Load 107 into I
  $6A6: LD I, $851 ; Load 851 into I
  $6A8: LD I, $C25 ; Load C25 into I
  $6FE: LD I, $F07 ; Load F07 into I
  $70A: LD I, $907 ; Load 907 into I
  $716: LD I, $E68 ; Load E68 into I
  $71A: LD I, $329 ; Load 329 into I
  $71C: LD I, $1B8 ; Load 1B8 into I
  $73E: LD I, $0CC ; Load 0CC into I
  $750: LD I, $DBE ; Load DBE into I
  $756: LD I, $8F0 ; Load 8F0 into I
  $77E: LD I, $FB4 ; Load FB4 into I
  $784: LD I, $05C ; Load 05C into I
  $7A6: LD I, $48A ; Load 48A into I
  $7E4: LD I, $92B ; Load 92B into I
  $7F8: LD I, $E1D ; Load E1D into I
  $804: LD I, $EF9 ; Load EF9 into I
  $822: LD I, $26C ; Load 26C into I
  $880: LD I, $E10 ; Load E10 into I
  $896: LD I, $BCC ; Load BCC into I
  $8AA: LD I, $46A ; Load 46A into I
  $8C6: LD I, $83F ; Load 83F into I
  $94E: LD I, $9D5 ; Load 9D5 into I
  $970: LD I, $149 ; Load 149 into I
  $998: LD I, $898 ; Load 898 into I
  $9A8: LD I, $C8B ; Load C8B into I
  $9BA: LD I, $A9F ; Load A9F into I
  $9C2: LD I, $C77 ; Load C77 into I
  $9C8: LD I, $EE1 ; Load EE1 into I
  $A2E: LD I, $307 ; Load 307 into I
  $A5E: LD I, $0AD ; Load 0AD into I
  $A7A: LD I, $579 ; Load 579 into I
  $A86: LD I, $A83 ; Load A83 into I
  $A8C: LD I, $C51 ; Load C51 into I
  $AB0: LD I, $D80 ; Load D80 into I
  $B2A: LD I, $07B ; Load 07B into I
  $B6C: LD I, $C2C ; Load C2C into I
  $B76: LD I, $673 ; Load 673 into I
  $B7A: LD I, $97C ; Load 97C into I
  $B7E: LD I, $240 ; Load 240 into I
  $B96: LD I, $824 ; Load 824 into I
  $BAC: LD I, $DF7 ; Load DF7 into I
  $BD6: LD I, $126 ; Load 126 into I
  $BEE: LD I, $2A5 ; Load 2A5 into I
  $BF8: LD I, $7CC ; Load 7CC into I
  $C04: LD I, $025 ; Load 025 into I
  $C2C: LD I, $46C ; Load 46C into I
  $C42: LD I, $453 ; Load 453 into I
  $C70: LD I, $076 ; Load 076 into I
  $CA2: LD I, $995 ; Load 995 into I
  $CFA: LD I, $8CB ; Load 8CB into I
  $D16: LD I, $92D ; Load 92D into I
  $D2C: LD I, $1A8 ; Load 1A8 into I
  $D30: LD I, $EAA ; Load EAA into I
  $D32: LD I, $C7E ; Load C7E into I
  $D3E: LD I, $E4F ; Load E4F into I
  $D44: LD I, $8D5 ; Load 8D5 into I
  $D4A: LD I, $FC6 ; Load FC6 into I
  $D58: LD I, $5F0 ; Load 5F0 into I
  $D68: LD I, $520 ; Load 520 into I
  $D72: LD I, $8F2 ; Load 8F2 into I
  $D8C: LD I, $271 ; Load 271 into I
  $D8E: LD I, $391 ; Load 391 into I
  $DA4: LD [I], V6 ; Store V0-V6 at I
  $DFE: LD I, $736 ; Load 736 into I
  $E00: LD I, $913 ; Load 913 into I
  $E0A: LD I, $873 ; Load 873 into I
  $E30: LD I, $28A ; Load 28A into I
  $E3A: LD I, $1EC ; Load 1EC into I
  $E48: LD I, $5BC ; Load 5BC into I
  $E6A: LD I, $553 ; Load 553 into I
  $E86: LD I, $0DA ; Load 0DA into I
  $F4E: LD I, $672 ; Load 672 into I
  $F74: LD I, $033 ; Load 033 into I
  $F90: LD I, $218 ; Load 218 into I

CONTROL FLOW ANALYSIS:
Jumps: 219
Calls: 120
Branches: 258
Loops: 118
Loop Structures:
  $2CA -> $029 (backward jump)
  $316 -> $257 (backward jump)
  $402 -> $246 (backward jump)
  $45E -> $3E8 (backward jump)
  $50C -> $427 (backward jump)
  $5A6 -> $0A1 (backward jump)
  $5AE -> $05B (backward jump)
  $5B6 -> $1A6 (backward jump)
  $5DA -> $3A9 (backward jump)
  $5DC -> $505 (backward jump)
  $5FE -> $378 (backward jump)
  $606 -> $470 (backward jump)
  $608 -> $27B (backward jump)
  $69E -> $2FC (backward jump)
  $6E8 -> $6E7 (backward jump)
  $6FA -> $686 (backward jump)
  $700 -> $5FD (backward jump)
  $71E -> $48F (backward jump)
  $72E -> $61C (backward jump)
  $78A -> $4B2 (backward jump)
  $7A0 -> $523 (backward jump)
  $7D2 -> $44A (backward jump)
  $80A -> $49F (backward jump)
  $80E -> $75A (backward jump)
  $814 -> $140 (backward jump)
  $850 -> $38A (backward jump)
  $856 -> $21D (backward jump)
  $85E -> $1E4 (backward jump)
  $862 -> $32B (backward jump)
  $868 -> $642 (backward jump)
  $86C -> $1C3 (backward jump)
  $8C0 -> $5BF (backward jump)
  $8CA -> $18F (backward jump)
  $926 -> $002 (backward jump)
  $92C -> $3AB (backward jump)
  $962 -> $3CF (backward jump)
  $978 -> $271 (backward jump)
  $9AC -> $345 (backward jump)
  $9CE -> $444 (backward jump)
  $9E6 -> $9D9 (backward jump)
  $9F6 -> $2A4 (backward jump)
  $9F8 -> $4DB (backward jump)
  $A16 -> $536 (backward jump)
  $A28 -> $5C6 (backward jump)
  $A56 -> $46D (backward jump)
  $A6C -> $670 (backward jump)
  $A74 -> $8DB (backward jump)
  $A7C -> $454 (backward jump)
  $AA6 -> $11A (backward jump)
  $AAE -> $2C3 (backward jump)
  $AE6 -> $667 (backward jump)
  $AFA -> $417 (backward jump)
  $B06 -> $094 (backward jump)
  $B1C -> $0AF (backward jump)
  $B36 -> $AE2 (backward jump)
  $B38 -> $317 (backward jump)
  $B46 -> $1FE (backward jump)
  $B52 -> $693 (backward jump)
  $B54 -> $782 (backward jump)
  $B88 -> $789 (backward jump)
  $BC0 -> $87C (backward jump)
  $BC4 -> $92F (backward jump)
  $BE0 -> $A35 (backward jump)
  $C18 -> $B63 (backward jump)
  $C1C -> $2C6 (backward jump)
  $C46 -> $B12 (backward jump)
  $C72 -> $2BC (backward jump)
  $CAA -> $08B (backward jump)
  $CB6 -> $1A3 (backward jump)
  $CD8 -> $2BA (backward jump)
  $CE4 -> $0FF (backward jump)
  $CF6 -> $7B6 (backward jump)
  $D18 -> $4B3 (backward jump)
  $D4E -> $610 (backward jump)
  $D52 -> $234 (backward jump)
  $D5A -> $BB7 (backward jump)
  $D88 -> $6B5 (backward jump)
  $D8A -> $708 (backward jump)
  $DA0 -> $A7D (backward jump)
  $DAE -> $208 (backward jump)
  $DC6 -> $1B0 (backward jump)
  $DDA -> $010 (backward jump)
  $DE0 -> $5E7 (backward jump)
  $DF4 -> $226 (backward jump)
  $DFC -> $1DC (backward jump)
  $E04 -> $76B (backward jump)
  $E12 -> $ACD (backward jump)
  $E38 -> $CD5 (backward jump)
  $E40 -> $87F (backward jump)
  $E42 -> $79E (backward jump)
  $E58 -> $378 (backward jump)
  $E66 -> $744 (backward jump)
  $E70 -> $61E (backward jump)
  $E74 -> $771 (backward jump)
  $E78 -> $84A (backward jump)
  $E7C -> $78A (backward jump)
  $E88 -> $82F (backward jump)
  $EB8 -> $C62 (backward jump)
  $EBC -> $D25 (backward jump)
  $EBE -> $7A6 (backward jump)
  $EC2 -> $5A9 (backward jump)
  $ED8 -> $647 (backward jump)
  $EE0 -> $BD4 (backward jump)
  $EF4 -> $73E (backward jump)
  $F00 -> $07B (backward jump)
  $F14 -> $BC0 (backward jump)
  $F34 -> $3AD (backward jump)
  $F3A -> $DAE (backward jump)
  $F48 -> $791 (backward jump)
  $F66 -> $F28 (backward jump)
  $F86 -> $398 (backward jump)
  $FA2 -> $5DF (backward jump)
  $FB0 -> $981 (backward jump)
  $FB4 -> $434 (backward jump)
  $FBC -> $B43 (backward jump)
  $FCC -> $809 (backward jump)
  $FDE -> $E2D (backward jump)
  $FEE -> $B26 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $FB81   UNKNOWN  FB81            ; Unknown Fxxx instruction
$202    $803B   UNKNOWN  803B            ; Unknown 8xxx instruction
$204    $3E68   SE       VE, #68         ; Skip if VE == 104
$206    $47BC   SNE      V7, #BC         ; Skip if V7 != 188
$208    $C80C   RND      V8, #0C         ; V8 = random & 0C
$20A    $9414   UNKNOWN  $9414           ; Unknown 9xxx instruction
$20C    $2AFB   CALL     $AFB            ; Call subroutine at AFB
$20E    $CAE4   RND      VA, #E4         ; VA = random & E4
$210    $4B37   SNE      VB, #37         ; Skip if VB != 55
$212    $E7EC   UNKNOWN  $E7EC           ; Unknown Exxx instruction
$214    $8595   SUB      V5, V9          ; V5 -= V9, VF = !borrow
$216    $399E   SE       V9, #9E         ; Skip if V9 == 158
$218    $DC83   DRW      VC, V8, #3      ; Draw 3-byte sprite at VC, V8
$21A    $2B58   CALL     $B58            ; Call subroutine at B58
$21C    $A25E   LD       I, $25E         ; Load 25E into I
$21E    $259C   CALL     $59C            ; Call subroutine at 59C
$220    $7EF0   ADD      VE, #F0         ; Add 240 to VE
$222    $E46B   UNKNOWN  $E46B           ; Unknown Exxx instruction
$224    $AF57   LD       I, $F57         ; Load F57 into I
$226    $9809   UNKNOWN  $9809           ; Unknown 9xxx instruction
$228    $8901   OR       V9, V0          ; V9 |= V0
$22A    $BD4C   JP       V0, $D4C        ; Jump to V0 + D4C
$22C    $0301   SYS      $301            ; System call to 301
$22E    $E5F1   UNKNOWN  $E5F1           ; Unknown Exxx instruction
$230    $7542   ADD      V5, #42         ; Add 66 to V5
$232    $8FF5   SUB      VF, VF          ; VF -= VF, VF = !borrow
$234    $EC2D   UNKNOWN  $EC2D           ; Unknown Exxx instruction
$236    $C77C   RND      V7, #7C         ; V7 = random & 7C
$238    $6BCC   LD       VB, #CC         ; Load 204 into VB
$23A    $B360   JP       V0, $360        ; Jump to V0 + 360
$23C    $1F15   JP       $F15            ; Jump to F15
$23E    $9B37   UNKNOWN  $9B37           ; Unknown 9xxx instruction
$240    $4FF0   SNE      VF, #F0         ; Skip if VF != 240
$242    $BE7A   JP       V0, $E7A        ; Jump to V0 + E7A
$244    $FF2C   UNKNOWN  FF2C            ; Unknown Fxxx instruction
$246    $4AF6   SNE      VA, #F6         ; Skip if VA != 246
$248    $80AA   UNKNOWN  80AA            ; Unknown 8xxx instruction
$24A    $6064   LD       V0, #64         ; Load 100 into V0
$24C    $075A   SYS      $75A            ; System call to 75A
$24E    $1817   JP       $817            ; Jump to 817
$250    $F591   UNKNOWN  F591            ; Unknown Fxxx instruction
$252    $00C1   SYS      $0C1            ; System call to 0C1
$254    $2A93   CALL     $A93            ; Call subroutine at A93
$256    $D765   DRW      V7, V6, #5      ; Draw 5-byte sprite at V7, V6
$258    $F925   UNKNOWN  F925            ; Unknown Fxxx instruction
$25A    $AA4F   LD       I, $A4F         ; Load A4F into I
$25C    $5F47   UNKNOWN  $5F47           ; Unknown 5xxx instruction
$25E    $D0B1   DRW      V0, VB, #1      ; Draw 1-byte sprite at V0, VB
$260    $1E7F   JP       $E7F            ; Jump to E7F
$262    $F442   UNKNOWN  F442            ; Unknown Fxxx instruction
$264    $68A3   LD       V8, #A3         ; Load 163 into V8
$266    $D4BC   DRW      V4, VB, #C      ; Draw 12-byte sprite at V4, VB
$268    $B536   JP       V0, $536        ; Jump to V0 + 536
$26A    $8CF4   ADD      VC, VF          ; VC += VF, VF = carry
$26C    $A814   LD       I, $814         ; Load 814 into I
$26E    $2485   CALL     $485            ; Call subroutine at 485
$270    $98B7   UNKNOWN  $98B7           ; Unknown 9xxx instruction
$272    $15FF   JP       $5FF            ; Jump to 5FF
$274    $D9C4   DRW      V9, VC, #4      ; Draw 4-byte sprite at V9, VC
$276    $9A4D   UNKNOWN  $9A4D           ; Unknown 9xxx instruction
$278    $2D4B   CALL     $D4B            ; Call subroutine at D4B
$27A    $6883   LD       V8, #83         ; Load 131 into V8
$27C    $8FA9   UNKNOWN  8FA9            ; Unknown 8xxx instruction
$27E    $D287   DRW      V2, V8, #7      ; Draw 7-byte sprite at V2, V8
$280    $DE66   DRW      VE, V6, #6      ; Draw 6-byte sprite at VE, V6
$282    $13FE   JP       $3FE            ; Jump to 3FE
$284    $0305   SYS      $305            ; System call to 305
$286    $9AC5   UNKNOWN  $9AC5           ; Unknown 9xxx instruction
$288    $493E   SNE      V9, #3E         ; Skip if V9 != 62
$28A    $EBCE   UNKNOWN  $EBCE           ; Unknown Exxx instruction
$28C    $621B   LD       V2, #1B         ; Load 27 into V2
$28E    $15B0   JP       $5B0            ; Jump to 5B0
$290    $9A1B   UNKNOWN  $9A1B           ; Unknown 9xxx instruction
$292    $71F8   ADD      V1, #F8         ; Add 248 to V1
$294    $5BF5   UNKNOWN  $5BF5           ; Unknown 5xxx instruction
$296    $803F   UNKNOWN  803F            ; Unknown 8xxx instruction
$298    $4706   SNE      V7, #06         ; Skip if V7 != 6
$29A    $6BA3   LD       VB, #A3         ; Load 163 into VB
$29C    $284D   CALL     $84D            ; Call subroutine at 84D
$29E    $66CF   LD       V6, #CF         ; Load 207 into V6
$2A0    $6EA8   LD       VE, #A8         ; Load 168 into VE
$2A2    $9E07   UNKNOWN  $9E07           ; Unknown 9xxx instruction
$2A4    $0A18   SYS      $A18            ; System call to A18
$2A6    $3095   SE       V0, #95         ; Skip if V0 == 149
$2A8    $287E   CALL     $87E            ; Call subroutine at 87E
$2AA    $FAC7   UNKNOWN  FAC7            ; Unknown Fxxx instruction
$2AC    $FF8A   UNKNOWN  FF8A            ; Unknown Fxxx instruction
$2AE    $A459   LD       I, $459         ; Load 459 into I
$2B0    $1A4D   JP       $A4D            ; Jump to A4D
$2B2    $D325   DRW      V3, V2, #5      ; Draw 5-byte sprite at V3, V2
$2B4    $8829   UNKNOWN  8829            ; Unknown 8xxx instruction
$2B6    $42A4   SNE      V2, #A4         ; Skip if V2 != 164
$2B8    $5E9E   UNKNOWN  $5E9E           ; Unknown 5xxx instruction
$2BA    $1A40   JP       $A40            ; Jump to A40
$2BC    $CF57   RND      VF, #57         ; VF = random & 57
$2BE    $79C1   ADD      V9, #C1         ; Add 193 to V9
$2C0    $77B3   ADD      V7, #B3         ; Add 179 to V7
$2C2    $FB91   UNKNOWN  FB91            ; Unknown Fxxx instruction
$2C4    $E5B5   UNKNOWN  $E5B5           ; Unknown Exxx instruction
$2C6    $59D5   UNKNOWN  $59D5           ; Unknown 5xxx instruction
$2C8    $BA74   JP       V0, $A74        ; Jump to V0 + A74
$2CA    $1029   JP       $029            ; Jump to 029
$2CC    $01DD   SYS      $1DD            ; System call to 1DD
$2CE    $E1CD   UNKNOWN  $E1CD           ; Unknown Exxx instruction
$2D0    $9E16   UNKNOWN  $9E16           ; Unknown 9xxx instruction
$2D2    $DFCA   DRW      VF, VC, #A      ; Draw 10-byte sprite at VF, VC
$2D4    $A32F   LD       I, $32F         ; Load 32F into I
$2D6    $ACBD   LD       I, $CBD         ; Load CBD into I
$2D8    $4B1B   SNE      VB, #1B         ; Skip if VB != 27
$2DA    $2EB5   CALL     $EB5            ; Call subroutine at EB5
$2DC    $3FCF   SE       VF, #CF         ; Skip if VF == 207
$2DE    $0D70   SYS      $D70            ; System call to D70
$2E0    $5AF6   UNKNOWN  $5AF6           ; Unknown 5xxx instruction
$2E2    $B76B   JP       V0, $76B        ; Jump to V0 + 76B
$2E4    $FF90   UNKNOWN  FF90            ; Unknown Fxxx instruction
$2E6    $2BE9   CALL     $BE9            ; Call subroutine at BE9
$2E8    $18C0   JP       $8C0            ; Jump to 8C0
$2EA    $9D5F   UNKNOWN  $9D5F           ; Unknown 9xxx instruction
$2EC    $2756   CALL     $756            ; Call subroutine at 756
$2EE    $ABF2   LD       I, $BF2         ; Load BF2 into I
$2F0    $1A96   JP       $A96            ; Jump to A96
$2F2    $9F77   UNKNOWN  $9F77           ; Unknown 9xxx instruction
$2F4    $2BBD   CALL     $BBD            ; Call subroutine at BBD
$2F6    $46FD   SNE      V6, #FD         ; Skip if V6 != 253
$2F8    $FE1E   ADD      I, VE           ; I += VE
$2FA    $FACC   UNKNOWN  FACC            ; Unknown Fxxx instruction
$2FC    $867E   SHL      V6              ; V6 <<= 1, VF = MSB
$2FE    $F3D4   UNKNOWN  F3D4            ; Unknown Fxxx instruction
$300    $0001   SYS      $001            ; System call to 001
$302    $0607   SYS      $607            ; System call to 607
$304    $88AF   UNKNOWN  88AF            ; Unknown 8xxx instruction
$306    $BBDF   JP       V0, $BDF        ; Jump to V0 + BDF
$308    $92BD   UNKNOWN  $92BD           ; Unknown 9xxx instruction
$30A    $B7C6   JP       V0, $7C6        ; Jump to V0 + 7C6
$30C    $CD4E   RND      VD, #4E         ; VD = random & 4E
$30E    $B950   JP       V0, $950        ; Jump to V0 + 950
$310    $744F   ADD      V4, #4F         ; Add 79 to V4
$312    $F2CB   UNKNOWN  F2CB            ; Unknown Fxxx instruction
$314    $6AFA   LD       VA, #FA         ; Load 250 into VA
$316    $B257   JP       V0, $257        ; Jump to V0 + 257
$318    $A9D7   LD       I, $9D7         ; Load 9D7 into I
$31A    $CFC4   RND      VF, #C4         ; VF = random & C4
$31C    $F060   UNKNOWN  F060            ; Unknown Fxxx instruction
$31E    $7D03   ADD      VD, #03         ; Add 3 to VD
$320    $B701   JP       V0, $701        ; Jump to V0 + 701
$322    $3C0C   SE       VC, #0C         ; Skip if VC == 12
$324    $AF1F   LD       I, $F1F         ; Load F1F into I
$326    $2C09   CALL     $C09            ; Call subroutine at C09
$328    $154B   JP       $54B            ; Jump to 54B
$32A    $2096   CALL     $096            ; Call subroutine at 096
$32C    $A5AA   LD       I, $5AA         ; Load 5AA into I
$32E    $9D2C   UNKNOWN  $9D2C           ; Unknown 9xxx instruction
$330    $4427   SNE      V4, #27         ; Skip if V4 != 39
$332    $7AE6   ADD      VA, #E6         ; Add 230 to VA
$334    $4E47   SNE      VE, #47         ; Skip if VE != 71
$336    $25A4   CALL     $5A4            ; Call subroutine at 5A4
$338    $7A55   ADD      VA, #55         ; Add 85 to VA
$33A    $3B63   SE       VB, #63         ; Skip if VB == 99
$33C    $202C   CALL     $02C            ; Call subroutine at 02C
$33E    $970B   UNKNOWN  $970B           ; Unknown 9xxx instruction
$340    $8BCC   UNKNOWN  8BCC            ; Unknown 8xxx instruction
$342    $73FC   ADD      V3, #FC         ; Add 252 to V3
$344    $4136   SNE      V1, #36         ; Skip if V1 != 54
$346    $4918   SNE      V9, #18         ; Skip if V9 != 24
$348    $2E59   CALL     $E59            ; Call subroutine at E59
$34A    $73AF   ADD      V3, #AF         ; Add 175 to V3
$34C    $0E7D   SYS      $E7D            ; System call to E7D
$34E    $762F   ADD      V6, #2F         ; Add 47 to V6
$350    $0D8E   SYS      $D8E            ; System call to D8E
$352    $D172   DRW      V1, V7, #2      ; Draw 2-byte sprite at V1, V7
$354    $B809   JP       V0, $809        ; Jump to V0 + 809
$356    $F284   UNKNOWN  F284            ; Unknown Fxxx instruction
$358    $8273   XOR      V2, V7          ; V2 ^= V7
$35A    $B820   JP       V0, $820        ; Jump to V0 + 820
$35C    $21EB   CALL     $1EB            ; Call subroutine at 1EB
$35E    $3564   SE       V5, #64         ; Skip if V5 == 100
$360    $09CA   SYS      $9CA            ; System call to 9CA
$362    $1D2F   JP       $D2F            ; Jump to D2F
$364    $2DF9   CALL     $DF9            ; Call subroutine at DF9
$366    $000C   SYS      $00C            ; System call to 00C
$368    $6CBF   LD       VC, #BF         ; Load 191 into VC
$36A    $8C73   XOR      VC, V7          ; VC ^= V7
$36C    $2EE9   CALL     $EE9            ; Call subroutine at EE9
$36E    $0C01   SYS      $C01            ; System call to C01
$370    $22E5   CALL     $2E5            ; Call subroutine at 2E5
$372    $2C19   CALL     $C19            ; Call subroutine at C19
$374    $6090   LD       V0, #90         ; Load 144 into V0
$376    $FFAC   UNKNOWN  FFAC            ; Unknown Fxxx instruction
$378    $1A6D   JP       $A6D            ; Jump to A6D
$37A    $A9AB   LD       I, $9AB         ; Load 9AB into I
$37C    $CD5B   RND      VD, #5B         ; VD = random & 5B
$37E    $FA6E   UNKNOWN  FA6E            ; Unknown Fxxx instruction
$380    $175B   JP       $75B            ; Jump to 75B
$382    $81C7   SUBN     V1, VC          ; V1 = VC - V1, VF = !borrow
$384    $AAFD   LD       I, $AFD         ; Load AFD into I
$386    $7C95   ADD      VC, #95         ; Add 149 to VC
$388    $22B5   CALL     $2B5            ; Call subroutine at 2B5
$38A    $CB12   RND      VB, #12         ; VB = random & 12
$38C    $4929   SNE      V9, #29         ; Skip if V9 != 41
$38E    $F8B0   UNKNOWN  F8B0            ; Unknown Fxxx instruction
$390    $88EA   UNKNOWN  88EA            ; Unknown 8xxx instruction
$392    $F067   UNKNOWN  F067            ; Unknown Fxxx instruction
$394    $E79A   UNKNOWN  $E79A           ; Unknown Exxx instruction
$396    $6104   LD       V1, #04         ; Load 4 into V1
$398    $7648   ADD      V6, #48         ; Add 72 to V6
$39A    $79BC   ADD      V9, #BC         ; Add 188 to V9
$39C    $4353   SNE      V3, #53         ; Skip if V3 != 83
$39E    $C40F   RND      V4, #0F         ; V4 = random & 0F
$3A0    $F86B   UNKNOWN  F86B            ; Unknown Fxxx instruction
$3A2    $4CB2   SNE      VC, #B2         ; Skip if VC != 178
$3A4    $0B84   SYS      $B84            ; System call to B84
$3A6    $AA07   LD       I, $A07         ; Load A07 into I
$3A8    $8C39   UNKNOWN  8C39            ; Unknown 8xxx instruction
$3AA    $7BED   ADD      VB, #ED         ; Add 237 to VB
$3AC    $F379   UNKNOWN  F379            ; Unknown Fxxx instruction
$3AE    $574A   UNKNOWN  $574A           ; Unknown 5xxx instruction
$3B0    $6E0A   LD       VE, #0A         ; Load 10 into VE
$3B2    $3C6A   SE       VC, #6A         ; Skip if VC == 106
$3B4    $19DE   JP       $9DE            ; Jump to 9DE
$3B6    $7110   ADD      V1, #10         ; Add 16 to V1
$3B8    $72D6   ADD      V2, #D6         ; Add 214 to V2
$3BA    $CFC8   RND      VF, #C8         ; VF = random & C8
$3BC    $7226   ADD      V2, #26         ; Add 38 to V2
$3BE    $5648   UNKNOWN  $5648           ; Unknown 5xxx instruction
$3C0    $39BE   SE       V9, #BE         ; Skip if V9 == 190
$3C2    $5AF6   UNKNOWN  $5AF6           ; Unknown 5xxx instruction
$3C4    $4C99   SNE      VC, #99         ; Skip if VC != 153
$3C6    $6031   LD       V0, #31         ; Load 49 into V0
$3C8    $AC34   LD       I, $C34         ; Load C34 into I
$3CA    $0342   SYS      $342            ; System call to 342
$3CC    $23F4   CALL     $3F4            ; Call subroutine at 3F4
$3CE    $BF77   JP       V0, $F77        ; Jump to V0 + F77
$3D0    $E0A9   UNKNOWN  $E0A9           ; Unknown Exxx instruction
$3D2    $9561   UNKNOWN  $9561           ; Unknown 9xxx instruction
$3D4    $EF25   UNKNOWN  $EF25           ; Unknown Exxx instruction
$3D6    $008C   SYS      $08C            ; System call to 08C
$3D8    $5C79   UNKNOWN  $5C79           ; Unknown 5xxx instruction
$3DA    $66C8   LD       V6, #C8         ; Load 200 into V6
$3DC    $A4EF   LD       I, $4EF         ; Load 4EF into I
$3DE    $CF14   RND      VF, #14         ; VF = random & 14
$3E0    $B7A6   JP       V0, $7A6        ; Jump to V0 + 7A6
$3E2    $59B6   UNKNOWN  $59B6           ; Unknown 5xxx instruction
$3E4    $00EE   RET                      ; Return from subroutine
$3E6    $BB94   JP       V0, $B94        ; Jump to V0 + B94
$3E8    $5382   UNKNOWN  $5382           ; Unknown 5xxx instruction
$3EA    $471F   SNE      V7, #1F         ; Skip if V7 != 31
$3EC    $010A   SYS      $10A            ; System call to 10A
$3EE    $0B58   SYS      $B58            ; System call to B58
$3F0    $F58B   UNKNOWN  F58B            ; Unknown Fxxx instruction
$3F2    $1474   JP       $474            ; Jump to 474
$3F4    $7006   ADD      V0, #06         ; Add 6 to V0
$3F6    $6AB4   LD       VA, #B4         ; Load 180 into VA
$3F8    $CB91   RND      VB, #91         ; VB = random & 91
$3FA    $33D8   SE       V3, #D8         ; Skip if V3 == 216
$3FC    $D22B   DRW      V2, V2, #B      ; Draw 11-byte sprite at V2, V2
$3FE    $51BD   UNKNOWN  $51BD           ; Unknown 5xxx instruction
$400    $4CFE   SNE      VC, #FE         ; Skip if VC != 254
$402    $1246   JP       $246            ; Jump to 246
$404    $74A3   ADD      V4, #A3         ; Add 163 to V4
$406    $CE1C   RND      VE, #1C         ; VE = random & 1C
$408    $6884   LD       V8, #84         ; Load 132 into V8
$40A    $9C36   UNKNOWN  $9C36           ; Unknown 9xxx instruction
$40C    $6F20   LD       VF, #20         ; Load 32 into VF
$40E    $D264   DRW      V2, V6, #4      ; Draw 4-byte sprite at V2, V6
$410    $9B5F   UNKNOWN  $9B5F           ; Unknown 9xxx instruction
$412    $D7CD   DRW      V7, VC, #D      ; Draw 13-byte sprite at V7, VC
$414    $8F06   SHR      VF              ; VF >>= 1, VF = LSB
$416    $3987   SE       V9, #87         ; Skip if V9 == 135
$418    $97BB   UNKNOWN  $97BB           ; Unknown 9xxx instruction
$41A    $A8A7   LD       I, $8A7         ; Load 8A7 into I
$41C    $50F3   UNKNOWN  $50F3           ; Unknown 5xxx instruction
$41E    $6F0E   LD       VF, #0E         ; Load 14 into VF
$420    $6C36   LD       VC, #36         ; Load 54 into VC
$422    $75FD   ADD      V5, #FD         ; Add 253 to V5
$424    $005B   SYS      $05B            ; System call to 05B
$426    $3476   SE       V4, #76         ; Skip if V4 == 118
$428    $DC43   DRW      VC, V4, #3      ; Draw 3-byte sprite at VC, V4
$42A    $CED9   RND      VE, #D9         ; VE = random & D9
$42C    $4788   SNE      V7, #88         ; Skip if V7 != 136
$42E    $C892   RND      V8, #92         ; V8 = random & 92
$430    $5FF3   UNKNOWN  $5FF3           ; Unknown 5xxx instruction
$432    $7CBB   ADD      VC, #BB         ; Add 187 to VC
$434    $95E2   UNKNOWN  $95E2           ; Unknown 9xxx instruction
$436    $B521   JP       V0, $521        ; Jump to V0 + 521
$438    $1D75   JP       $D75            ; Jump to D75
$43A    $D1B9   DRW      V1, VB, #9      ; Draw 9-byte sprite at V1, VB
$43C    $8F38   UNKNOWN  8F38            ; Unknown 8xxx instruction
$43E    $50AD   UNKNOWN  $50AD           ; Unknown 5xxx instruction
$440    $EE2E   UNKNOWN  $EE2E           ; Unknown Exxx instruction
$442    $AB56   LD       I, $B56         ; Load B56 into I
$444    $7EA6   ADD      VE, #A6         ; Add 166 to VE
$446    $E484   UNKNOWN  $E484           ; Unknown Exxx instruction
$448    $D258   DRW      V2, V5, #8      ; Draw 8-byte sprite at V2, V5
$44A    $AD93   LD       I, $D93         ; Load D93 into I
$44C    $7681   ADD      V6, #81         ; Add 129 to V6
$44E    $03A2   SYS      $3A2            ; System call to 3A2
$450    $60FA   LD       V0, #FA         ; Load 250 into V0
$452    $7E2B   ADD      VE, #2B         ; Add 43 to VE
$454    $7E5F   ADD      VE, #5F         ; Add 95 to VE
$456    $DE41   DRW      VE, V4, #1      ; Draw 1-byte sprite at VE, V4
$458    $58D1   UNKNOWN  $58D1           ; Unknown 5xxx instruction
$45A    $7F85   ADD      VF, #85         ; Add 133 to VF
$45C    $C978   RND      V9, #78         ; V9 = random & 78
$45E    $B3E8   JP       V0, $3E8        ; Jump to V0 + 3E8
$460    $D8D0   DRW      V8, VD, #0      ; Draw 0-byte sprite at V8, VD
$462    $6B64   LD       VB, #64         ; Load 100 into VB
$464    $ED0E   UNKNOWN  $ED0E           ; Unknown Exxx instruction
$466    $DEB7   DRW      VE, VB, #7      ; Draw 7-byte sprite at VE, VB
$468    $3795   SE       V7, #95         ; Skip if V7 == 149
$46A    $2601   CALL     $601            ; Call subroutine at 601
$46C    $1749   JP       $749            ; Jump to 749
$46E    $D988   DRW      V9, V8, #8      ; Draw 8-byte sprite at V9, V8
$470    $15D7   JP       $5D7            ; Jump to 5D7
$472    $F5C4   UNKNOWN  F5C4            ; Unknown Fxxx instruction
$474    $63A0   LD       V3, #A0         ; Load 160 into V3
$476    $DE54   DRW      VE, V5, #4      ; Draw 4-byte sprite at VE, V5
$478    $705C   ADD      V0, #5C         ; Add 92 to V0
$47A    $1B59   JP       $B59            ; Jump to B59
$47C    $E901   UNKNOWN  $E901           ; Unknown Exxx instruction
$47E    $367B   SE       V6, #7B         ; Skip if V6 == 123
$480    $1897   JP       $897            ; Jump to 897
$482    $3CA0   SE       VC, #A0         ; Skip if VC == 160
$484    $5ED8   UNKNOWN  $5ED8           ; Unknown 5xxx instruction
$486    $525B   UNKNOWN  $525B           ; Unknown 5xxx instruction
$488    $08C5   SYS      $8C5            ; System call to 8C5
$48A    $A4E3   LD       I, $4E3         ; Load 4E3 into I
$48C    $C959   RND      V9, #59         ; V9 = random & 59
$48E    $73EA   ADD      V3, #EA         ; Add 234 to V3
$490    $010C   SYS      $10C            ; System call to 10C
$492    $8FF9   UNKNOWN  8FF9            ; Unknown 8xxx instruction
$494    $479C   SNE      V7, #9C         ; Skip if V7 != 156
$496    $4C6C   SNE      VC, #6C         ; Skip if VC != 108
$498    $96B0   SNE      V6, VB          ; Skip if V6 != VB
$49A    $8F2A   UNKNOWN  8F2A            ; Unknown 8xxx instruction
$49C    $751F   ADD      V5, #1F         ; Add 31 to V5
$49E    $2FF5   CALL     $FF5            ; Call subroutine at FF5
$4A0    $D48C   DRW      V4, V8, #C      ; Draw 12-byte sprite at V4, V8
$4A2    $CA3B   RND      VA, #3B         ; VA = random & 3B
$4A4    $616A   LD       V1, #6A         ; Load 106 into V1
$4A6    $4AF6   SNE      VA, #F6         ; Skip if VA != 246
$4A8    $9255   UNKNOWN  $9255           ; Unknown 9xxx instruction
$4AA    $70E4   ADD      V0, #E4         ; Add 228 to V0
$4AC    $CB35   RND      VB, #35         ; VB = random & 35
$4AE    $17E4   JP       $7E4            ; Jump to 7E4
$4B0    $365A   SE       V6, #5A         ; Skip if V6 == 90
$4B2    $A211   LD       I, $211         ; Load 211 into I
$4B4    $FFCD   UNKNOWN  FFCD            ; Unknown Fxxx instruction
$4B6    $5E31   UNKNOWN  $5E31           ; Unknown 5xxx instruction
$4B8    $4863   SNE      V8, #63         ; Skip if V8 != 99
$4BA    $CFEF   RND      VF, #EF         ; VF = random & EF
$4BC    $17DB   JP       $7DB            ; Jump to 7DB
$4BE    $BC60   JP       V0, $C60        ; Jump to V0 + C60
$4C0    $DF0D   DRW      VF, V0, #D      ; Draw 13-byte sprite at VF, V0
$4C2    $5C63   UNKNOWN  $5C63           ; Unknown 5xxx instruction
$4C4    $4739   SNE      V7, #39         ; Skip if V7 != 57
$4C6    $4841   SNE      V8, #41         ; Skip if V8 != 65
$4C8    $78F7   ADD      V8, #F7         ; Add 247 to V8
$4CA    $6A71   LD       VA, #71         ; Load 113 into VA
$4CC    $C9EF   RND      V9, #EF         ; V9 = random & EF
$4CE    $3AC5   SE       VA, #C5         ; Skip if VA == 197
$4D0    $2BBB   CALL     $BBB            ; Call subroutine at BBB
$4D2    $A41B   LD       I, $41B         ; Load 41B into I
$4D4    $E2F6   UNKNOWN  $E2F6           ; Unknown Exxx instruction
$4D6    $2B8F   CALL     $B8F            ; Call subroutine at B8F
$4D8    $4A54   SNE      VA, #54         ; Skip if VA != 84
$4DA    $FFEE   UNKNOWN  FFEE            ; Unknown Fxxx instruction
$4DC    $73FD   ADD      V3, #FD         ; Add 253 to V3
$4DE    $1E36   JP       $E36            ; Jump to E36
$4E0    $B8F1   JP       V0, $8F1        ; Jump to V0 + 8F1
$4E2    $9E2B   UNKNOWN  $9E2B           ; Unknown 9xxx instruction
$4E4    $B56C   JP       V0, $56C        ; Jump to V0 + 56C
$4E6    $A248   LD       I, $248         ; Load 248 into I
$4E8    $E08B   UNKNOWN  $E08B           ; Unknown Exxx instruction
$4EA    $8F02   AND      VF, V0          ; VF &= V0
$4EC    $2539   CALL     $539            ; Call subroutine at 539
$4EE    $1C6B   JP       $C6B            ; Jump to C6B
$4F0    $EB79   UNKNOWN  $EB79           ; Unknown Exxx instruction
$4F2    $68A1   LD       V8, #A1         ; Load 161 into V8
$4F4    $5011   UNKNOWN  $5011           ; Unknown 5xxx instruction
$4F6    $0B0B   SYS      $B0B            ; System call to B0B
$4F8    $E2CC   UNKNOWN  $E2CC           ; Unknown Exxx instruction
$4FA    $AC8F   LD       I, $C8F         ; Load C8F into I
$4FC    $17BA   JP       $7BA            ; Jump to 7BA
$4FE    $D83D   DRW      V8, V3, #D      ; Draw 13-byte sprite at V8, V3
$500    $F5C3   UNKNOWN  F5C3            ; Unknown Fxxx instruction
$502    $3F99   SE       VF, #99         ; Skip if VF == 153
$504    $FCAB   UNKNOWN  FCAB            ; Unknown Fxxx instruction
$506    $78B4   ADD      V8, #B4         ; Add 180 to V8
$508    $6FCC   LD       VF, #CC         ; Load 204 into VF
$50A    $9C53   UNKNOWN  $9C53           ; Unknown 9xxx instruction
$50C    $B427   JP       V0, $427        ; Jump to V0 + 427
$50E    $E859   UNKNOWN  $E859           ; Unknown Exxx instruction
$510    $6823   LD       V8, #23         ; Load 35 into V8
$512    $2E70   CALL     $E70            ; Call subroutine at E70
$514    $F429   LD       F, V4           ; I = sprite address for digit V4
$516    $2D28   CALL     $D28            ; Call subroutine at D28
$518    $746D   ADD      V4, #6D         ; Add 109 to V4
$51A    $520B   UNKNOWN  $520B           ; Unknown 5xxx instruction
$51C    $EA6D   UNKNOWN  $EA6D           ; Unknown Exxx instruction
$51E    $5410   SE       V4, V1          ; Skip if V4 == V1
$520    $AF16   LD       I, $F16         ; Load F16 into I
$522    $A185   LD       I, $185         ; Load 185 into I
$524    $5245   UNKNOWN  $5245           ; Unknown 5xxx instruction
$526    $1E01   JP       $E01            ; Jump to E01
$528    $7783   ADD      V7, #83         ; Add 131 to V7
$52A    $173F   JP       $73F            ; Jump to 73F
$52C    $303B   SE       V0, #3B         ; Skip if V0 == 59
$52E    $4345   SNE      V3, #45         ; Skip if V3 != 69
$530    $2533   CALL     $533            ; Call subroutine at 533
$532    $88FA   UNKNOWN  88FA            ; Unknown 8xxx instruction
$534    $36D5   SE       V6, #D5         ; Skip if V6 == 213
$536    $C37B   RND      V3, #7B         ; V3 = random & 7B
$538    $6526   LD       V5, #26         ; Load 38 into V5
$53A    $5E74   UNKNOWN  $5E74           ; Unknown 5xxx instruction
$53C    $5761   UNKNOWN  $5761           ; Unknown 5xxx instruction
$53E    $482C   SNE      V8, #2C         ; Skip if V8 != 44
$540    $AE7D   LD       I, $E7D         ; Load E7D into I
$542    $42F7   SNE      V2, #F7         ; Skip if V2 != 247
$544    $7D87   ADD      VD, #87         ; Add 135 to VD
$546    $F35B   UNKNOWN  F35B            ; Unknown Fxxx instruction
$548    $1DE0   JP       $DE0            ; Jump to DE0
$54A    $7131   ADD      V1, #31         ; Add 49 to V1
$54C    $C6E2   RND      V6, #E2         ; V6 = random & E2
$54E    $4592   SNE      V5, #92         ; Skip if V5 != 146
$550    $ED51   UNKNOWN  $ED51           ; Unknown Exxx instruction
$552    $C325   RND      V3, #25         ; V3 = random & 25
$554    $00EB   SYS      $0EB            ; System call to 0EB
$556    $9FCD   UNKNOWN  $9FCD           ; Unknown 9xxx instruction
$558    $AD88   LD       I, $D88         ; Load D88 into I
$55A    $7910   ADD      V9, #10         ; Add 16 to V9
$55C    $6C13   LD       VC, #13         ; Load 19 into VC
$55E    $9F4C   UNKNOWN  $9F4C           ; Unknown 9xxx instruction
$560    $E0BC   UNKNOWN  $E0BC           ; Unknown Exxx instruction
$562    $749D   ADD      V4, #9D         ; Add 157 to V4
$564    $9A3D   UNKNOWN  $9A3D           ; Unknown 9xxx instruction
$566    $45F7   SNE      V5, #F7         ; Skip if V5 != 247
$568    $2327   CALL     $327            ; Call subroutine at 327
$56A    $210F   CALL     $10F            ; Call subroutine at 10F
$56C    $945F   UNKNOWN  $945F           ; Unknown 9xxx instruction
$56E    $5B83   UNKNOWN  $5B83           ; Unknown 5xxx instruction
$570    $3078   SE       V0, #78         ; Skip if V0 == 120
$572    $6AD1   LD       VA, #D1         ; Load 209 into VA
$574    $0456   SYS      $456            ; System call to 456
$576    $8824   ADD      V8, V2          ; V8 += V2, VF = carry
$578    $BB15   JP       V0, $B15        ; Jump to V0 + B15
$57A    $6EFB   LD       VE, #FB         ; Load 251 into VE
$57C    $67BF   LD       V7, #BF         ; Load 191 into V7
$57E    $B91D   JP       V0, $91D        ; Jump to V0 + 91D
$580    $E4F9   UNKNOWN  $E4F9           ; Unknown Exxx instruction
$582    $4D80   SNE      VD, #80         ; Skip if VD != 128
$584    $0F28   SYS      $F28            ; System call to F28
$586    $5EA7   UNKNOWN  $5EA7           ; Unknown 5xxx instruction
$588    $A65A   LD       I, $65A         ; Load 65A into I
$58A    $CBC1   RND      VB, #C1         ; VB = random & C1
$58C    $1E38   JP       $E38            ; Jump to E38
$58E    $2AD0   CALL     $AD0            ; Call subroutine at AD0
$590    $7B3B   ADD      VB, #3B         ; Add 59 to VB
$592    $88D2   AND      V8, VD          ; V8 &= VD
$594    $0638   SYS      $638            ; System call to 638
$596    $9FCB   UNKNOWN  $9FCB           ; Unknown 9xxx instruction
$598    $F964   UNKNOWN  F964            ; Unknown Fxxx instruction
$59A    $4C1E   SNE      VC, #1E         ; Skip if VC != 30
$59C    $EDFA   UNKNOWN  $EDFA           ; Unknown Exxx instruction
$59E    $AC15   LD       I, $C15         ; Load C15 into I
$5A0    $27C6   CALL     $7C6            ; Call subroutine at 7C6
$5A2    $C04D   RND      V0, #4D         ; V0 = random & 4D
$5A4    $7097   ADD      V0, #97         ; Add 151 to V0
$5A6    $10A1   JP       $0A1            ; Jump to 0A1
$5A8    $5E66   UNKNOWN  $5E66           ; Unknown 5xxx instruction
$5AA    $E1F9   UNKNOWN  $E1F9           ; Unknown Exxx instruction
$5AC    $5B79   UNKNOWN  $5B79           ; Unknown 5xxx instruction
$5AE    $B05B   JP       V0, $05B        ; Jump to V0 + 05B
$5B0    $B5DD   JP       V0, $5DD        ; Jump to V0 + 5DD
$5B2    $CA07   RND      VA, #07         ; VA = random & 07
$5B4    $C3A2   RND      V3, #A2         ; V3 = random & A2
$5B6    $11A6   JP       $1A6            ; Jump to 1A6
$5B8    $A515   LD       I, $515         ; Load 515 into I
$5BA    $2FAB   CALL     $FAB            ; Call subroutine at FAB
$5BC    $3FEB   SE       VF, #EB         ; Skip if VF == 235
$5BE    $24D6   CALL     $4D6            ; Call subroutine at 4D6
$5C0    $92D6   UNKNOWN  $92D6           ; Unknown 9xxx instruction
$5C2    $0DA1   SYS      $DA1            ; System call to DA1
$5C4    $262B   CALL     $62B            ; Call subroutine at 62B
$5C6    $771C   ADD      V7, #1C         ; Add 28 to V7
$5C8    $0719   SYS      $719            ; System call to 719
$5CA    $AF33   LD       I, $F33         ; Load F33 into I
$5CC    $FB2C   UNKNOWN  FB2C            ; Unknown Fxxx instruction
$5CE    $4A2F   SNE      VA, #2F         ; Skip if VA != 47
$5D0    $BB00   JP       V0, $B00        ; Jump to V0 + B00
$5D2    $3598   SE       V5, #98         ; Skip if V5 == 152
$5D4    $DEA9   DRW      VE, VA, #9      ; Draw 9-byte sprite at VE, VA
$5D6    $FE89   UNKNOWN  FE89            ; Unknown Fxxx instruction
$5D8    $88AB   UNKNOWN  88AB            ; Unknown 8xxx instruction
$5DA    $13A9   JP       $3A9            ; Jump to 3A9
$5DC    $1505   JP       $505            ; Jump to 505
$5DE    $430B   SNE      V3, #0B         ; Skip if V3 != 11
$5E0    $8714   ADD      V7, V1          ; V7 += V1, VF = carry
$5E2    $D23E   DRW      V2, V3, #E      ; Draw 14-byte sprite at V2, V3
$5E4    $DB66   DRW      VB, V6, #6      ; Draw 6-byte sprite at VB, V6
$5E6    $650A   LD       V5, #0A         ; Load 10 into V5
$5E8    $5138   UNKNOWN  $5138           ; Unknown 5xxx instruction
$5EA    $01F9   SYS      $1F9            ; System call to 1F9
$5EC    $D507   DRW      V5, V0, #7      ; Draw 7-byte sprite at V5, V0
$5EE    $A897   LD       I, $897         ; Load 897 into I
$5F0    $A38A   LD       I, $38A         ; Load 38A into I
$5F2    $45CA   SNE      V5, #CA         ; Skip if V5 != 202
$5F4    $7D18   ADD      VD, #18         ; Add 24 to VD
$5F6    $2EAD   CALL     $EAD            ; Call subroutine at EAD
$5F8    $6448   LD       V4, #48         ; Load 72 into V4
$5FA    $4E8E   SNE      VE, #8E         ; Skip if VE != 142
$5FC    $D10D   DRW      V1, V0, #D      ; Draw 13-byte sprite at V1, V0
$5FE    $B378   JP       V0, $378        ; Jump to V0 + 378
$600    $074A   SYS      $74A            ; System call to 74A
$602    $8C5D   UNKNOWN  8C5D            ; Unknown 8xxx instruction
$604    $4F00   SNE      VF, #00         ; Skip if VF != 0
$606    $1470   JP       $470            ; Jump to 470
$608    $127B   JP       $27B            ; Jump to 27B
$60A    $1DDD   JP       $DDD            ; Jump to DDD
$60C    $32A2   SE       V2, #A2         ; Skip if V2 == 162
$60E    $5ABF   UNKNOWN  $5ABF           ; Unknown 5xxx instruction
$610    $F930   UNKNOWN  F930            ; Unknown Fxxx instruction
$612    $BAFE   JP       V0, $AFE        ; Jump to V0 + AFE
$614    $2C12   CALL     $C12            ; Call subroutine at C12
$616    $3416   SE       V4, #16         ; Skip if V4 == 22
$618    $7779   ADD      V7, #79         ; Add 121 to V7
$61A    $68BC   LD       V8, #BC         ; Load 188 into V8
$61C    $3E6B   SE       VE, #6B         ; Skip if VE == 107
$61E    $5A79   UNKNOWN  $5A79           ; Unknown 5xxx instruction
$620    $EE00   UNKNOWN  $EE00           ; Unknown Exxx instruction
$622    $2B12   CALL     $B12            ; Call subroutine at B12
$624    $1A3E   JP       $A3E            ; Jump to A3E
$626    $0B5C   SYS      $B5C            ; System call to B5C
$628    $FAEE   UNKNOWN  FAEE            ; Unknown Fxxx instruction
$62A    $6E73   LD       VE, #73         ; Load 115 into VE
$62C    $DADE   DRW      VA, VD, #E      ; Draw 14-byte sprite at VA, VD
$62E    $A10E   LD       I, $10E         ; Load 10E into I
$630    $AA93   LD       I, $A93         ; Load A93 into I
$632    $906B   UNKNOWN  $906B           ; Unknown 9xxx instruction
$634    $508F   UNKNOWN  $508F           ; Unknown 5xxx instruction
$636    $9851   UNKNOWN  $9851           ; Unknown 9xxx instruction
$638    $9FE6   UNKNOWN  $9FE6           ; Unknown 9xxx instruction
$63A    $E531   UNKNOWN  $E531           ; Unknown Exxx instruction
$63C    $C622   RND      V6, #22         ; V6 = random & 22
$63E    $E4B4   UNKNOWN  $E4B4           ; Unknown Exxx instruction
$640    $FCFD   UNKNOWN  FCFD            ; Unknown Fxxx instruction
$642    $5AA5   UNKNOWN  $5AA5           ; Unknown 5xxx instruction
$644    $785A   ADD      V8, #5A         ; Add 90 to V8
$646    $29B5   CALL     $9B5            ; Call subroutine at 9B5
$648    $D8F1   DRW      V8, VF, #1      ; Draw 1-byte sprite at V8, VF
$64A    $522D   UNKNOWN  $522D           ; Unknown 5xxx instruction
$64C    $52F5   UNKNOWN  $52F5           ; Unknown 5xxx instruction
$64E    $E6E1   UNKNOWN  $E6E1           ; Unknown Exxx instruction
$650    $34CD   SE       V4, #CD         ; Skip if V4 == 205
$652    $CA8A   RND      VA, #8A         ; VA = random & 8A
$654    $5747   UNKNOWN  $5747           ; Unknown 5xxx instruction
$656    $E603   UNKNOWN  $E603           ; Unknown Exxx instruction
$658    $4A6A   SNE      VA, #6A         ; Skip if VA != 106
$65A    $BD29   JP       V0, $D29        ; Jump to V0 + D29
$65C    $A4C0   LD       I, $4C0         ; Load 4C0 into I
$65E    $9D91   UNKNOWN  $9D91           ; Unknown 9xxx instruction
$660    $E897   UNKNOWN  $E897           ; Unknown Exxx instruction
$662    $1EE0   JP       $EE0            ; Jump to EE0
$664    $2476   CALL     $476            ; Call subroutine at 476
$666    $23D0   CALL     $3D0            ; Call subroutine at 3D0
$668    $A107   LD       I, $107         ; Load 107 into I
$66A    $3164   SE       V1, #64         ; Skip if V1 == 100
$66C    $3755   SE       V7, #55         ; Skip if V7 == 85
$66E    $4603   SNE      V6, #03         ; Skip if V6 != 3
$670    $9500   SNE      V5, V0          ; Skip if V5 != V0
$672    $C72B   RND      V7, #2B         ; V7 = random & 2B
$674    $5FC2   UNKNOWN  $5FC2           ; Unknown 5xxx instruction
$676    $2BD1   CALL     $BD1            ; Call subroutine at BD1
$678    $3D98   SE       VD, #98         ; Skip if VD == 152
$67A    $581B   UNKNOWN  $581B           ; Unknown 5xxx instruction
$67C    $0151   SYS      $151            ; System call to 151
$67E    $8BDB   UNKNOWN  8BDB            ; Unknown 8xxx instruction
$680    $C186   RND      V1, #86         ; V1 = random & 86
$682    $6B6E   LD       VB, #6E         ; Load 110 into VB
$684    $3575   SE       V5, #75         ; Skip if V5 == 117
$686    $41DF   SNE      V1, #DF         ; Skip if V1 != 223
$688    $EEBB   UNKNOWN  $EEBB           ; Unknown Exxx instruction
$68A    $703A   ADD      V0, #3A         ; Add 58 to V0
$68C    $32C0   SE       V2, #C0         ; Skip if V2 == 192
$68E    $C39E   RND      V3, #9E         ; V3 = random & 9E
$690    $7F95   ADD      VF, #95         ; Add 149 to VF
$692    $2866   CALL     $866            ; Call subroutine at 866
$694    $BE94   JP       V0, $E94        ; Jump to V0 + E94
$696    $7CAE   ADD      VC, #AE         ; Add 174 to VC
$698    $0D90   SYS      $D90            ; System call to D90
$69A    $4378   SNE      V3, #78         ; Skip if V3 != 120
$69C    $08BE   SYS      $8BE            ; System call to 8BE
$69E    $B2FC   JP       V0, $2FC        ; Jump to V0 + 2FC
$6A0    $2E7A   CALL     $E7A            ; Call subroutine at E7A
$6A2    $37E7   SE       V7, #E7         ; Skip if V7 == 231
$6A4    $9FD1   UNKNOWN  $9FD1           ; Unknown 9xxx instruction
$6A6    $A851   LD       I, $851         ; Load 851 into I
$6A8    $AC25   LD       I, $C25         ; Load C25 into I
$6AA    $5229   UNKNOWN  $5229           ; Unknown 5xxx instruction
$6AC    $31EC   SE       V1, #EC         ; Skip if V1 == 236
$6AE    $61E1   LD       V1, #E1         ; Load 225 into V1
$6B0    $9F69   UNKNOWN  $9F69           ; Unknown 9xxx instruction
$6B2    $8DF2   AND      VD, VF          ; VD &= VF
$6B4    $9F4D   UNKNOWN  $9F4D           ; Unknown 9xxx instruction
$6B6    $47D5   SNE      V7, #D5         ; Skip if V7 != 213
$6B8    $0C4D   SYS      $C4D            ; System call to C4D
$6BA    $4739   SNE      V7, #39         ; Skip if V7 != 57
$6BC    $35A6   SE       V5, #A6         ; Skip if V5 == 166
$6BE    $3FF8   SE       VF, #F8         ; Skip if VF == 248
$6C0    $ECC1   UNKNOWN  $ECC1           ; Unknown Exxx instruction
$6C2    $62EC   LD       V2, #EC         ; Load 236 into V2
$6C4    $4F5D   SNE      VF, #5D         ; Skip if VF != 93
$6C6    $D83F   DRW      V8, V3, #F      ; Draw 15-byte sprite at V8, V3
$6C8    $0B5B   SYS      $B5B            ; System call to B5B
$6CA    $DAAE   DRW      VA, VA, #E      ; Draw 14-byte sprite at VA, VA
$6CC    $7D35   ADD      VD, #35         ; Add 53 to VD
$6CE    $31D9   SE       V1, #D9         ; Skip if V1 == 217
$6D0    $4A79   SNE      VA, #79         ; Skip if VA != 121
$6D2    $4099   SNE      V0, #99         ; Skip if V0 != 153
$6D4    $279C   CALL     $79C            ; Call subroutine at 79C
$6D6    $4B5A   SNE      VB, #5A         ; Skip if VB != 90
$6D8    $F74D   UNKNOWN  F74D            ; Unknown Fxxx instruction
$6DA    $C71F   RND      V7, #1F         ; V7 = random & 1F
$6DC    $4808   SNE      V8, #08         ; Skip if V8 != 8
$6DE    $60FC   LD       V0, #FC         ; Load 252 into V0
$6E0    $F675   UNKNOWN  F675            ; Unknown Fxxx instruction
$6E2    $34A3   SE       V4, #A3         ; Skip if V4 == 163
$6E4    $B9B6   JP       V0, $9B6        ; Jump to V0 + 9B6
$6E6    $BB64   JP       V0, $B64        ; Jump to V0 + B64
$6E8    $B6E7   JP       V0, $6E7        ; Jump to V0 + 6E7
$6EA    $EA11   UNKNOWN  $EA11           ; Unknown Exxx instruction
$6EC    $C6E4   RND      V6, #E4         ; V6 = random & E4
$6EE    $FB9A   UNKNOWN  FB9A            ; Unknown Fxxx instruction
$6F0    $DAAE   DRW      VA, VA, #E      ; Draw 14-byte sprite at VA, VA
$6F2    $44CC   SNE      V4, #CC         ; Skip if V4 != 204
$6F4    $8C52   AND      VC, V5          ; VC &= V5
$6F6    $7DB3   ADD      VD, #B3         ; Add 179 to VD
$6F8    $8FBD   UNKNOWN  8FBD            ; Unknown 8xxx instruction
$6FA    $1686   JP       $686            ; Jump to 686
$6FC    $D5A9   DRW      V5, VA, #9      ; Draw 9-byte sprite at V5, VA
$6FE    $AF07   LD       I, $F07         ; Load F07 into I
$700    $15FD   JP       $5FD            ; Jump to 5FD
$702    $0B92   SYS      $B92            ; System call to B92
$704    $573A   UNKNOWN  $573A           ; Unknown 5xxx instruction
$706    $DB4B   DRW      VB, V4, #B      ; Draw 11-byte sprite at VB, V4
$708    $CAAA   RND      VA, #AA         ; VA = random & AA
$70A    $A907   LD       I, $907         ; Load 907 into I
$70C    $4135   SNE      V1, #35         ; Skip if V1 != 53
$70E    $9C4B   UNKNOWN  $9C4B           ; Unknown 9xxx instruction
$710    $FE30   UNKNOWN  FE30            ; Unknown Fxxx instruction
$712    $9E9B   UNKNOWN  $9E9B           ; Unknown 9xxx instruction
$714    $5CCB   UNKNOWN  $5CCB           ; Unknown 5xxx instruction
$716    $AE68   LD       I, $E68         ; Load E68 into I
$718    $CF85   RND      VF, #85         ; VF = random & 85
$71A    $A329   LD       I, $329         ; Load 329 into I
$71C    $A1B8   LD       I, $1B8         ; Load 1B8 into I
$71E    $B48F   JP       V0, $48F        ; Jump to V0 + 48F
$720    $7112   ADD      V1, #12         ; Add 18 to V1
$722    $F6B9   UNKNOWN  F6B9            ; Unknown Fxxx instruction
$724    $6710   LD       V7, #10         ; Load 16 into V7
$726    $C11D   RND      V1, #1D         ; V1 = random & 1D
$728    $D696   DRW      V6, V9, #6      ; Draw 6-byte sprite at V6, V9
$72A    $E56D   UNKNOWN  $E56D           ; Unknown Exxx instruction
$72C    $1889   JP       $889            ; Jump to 889
$72E    $B61C   JP       V0, $61C        ; Jump to V0 + 61C
$730    $DD0F   DRW      VD, V0, #F      ; Draw 15-byte sprite at VD, V0
$732    $41F0   SNE      V1, #F0         ; Skip if V1 != 240
$734    $F9B4   UNKNOWN  F9B4            ; Unknown Fxxx instruction
$736    $319B   SE       V1, #9B         ; Skip if V1 == 155
$738    $432D   SNE      V3, #2D         ; Skip if V3 != 45
$73A    $237C   CALL     $37C            ; Call subroutine at 37C
$73C    $3A03   SE       VA, #03         ; Skip if VA == 3
$73E    $A0CC   LD       I, $0CC         ; Load 0CC into I
$740    $CC81   RND      VC, #81         ; VC = random & 81
$742    $9B60   SNE      VB, V6          ; Skip if VB != V6
$744    $093E   SYS      $93E            ; System call to 93E
$746    $654A   LD       V5, #4A         ; Load 74 into V5
$748    $D582   DRW      V5, V8, #2      ; Draw 2-byte sprite at V5, V8
$74A    $E0E0   UNKNOWN  $E0E0           ; Unknown Exxx instruction
$74C    $E658   UNKNOWN  $E658           ; Unknown Exxx instruction
$74E    $6697   LD       V6, #97         ; Load 151 into V6
$750    $ADBE   LD       I, $DBE         ; Load DBE into I
$752    $1E8E   JP       $E8E            ; Jump to E8E
$754    $D79D   DRW      V7, V9, #D      ; Draw 13-byte sprite at V7, V9
$756    $A8F0   LD       I, $8F0         ; Load 8F0 into I
$758    $9433   UNKNOWN  $9433           ; Unknown 9xxx instruction
$75A    $89B3   XOR      V9, VB          ; V9 ^= VB
$75C    $1E66   JP       $E66            ; Jump to E66
$75E    $7053   ADD      V0, #53         ; Add 83 to V0
$760    $0238   SYS      $238            ; System call to 238
$762    $9B8B   UNKNOWN  $9B8B           ; Unknown 9xxx instruction
$764    $6024   LD       V0, #24         ; Load 36 into V0
$766    $F4BD   UNKNOWN  F4BD            ; Unknown Fxxx instruction
$768    $8EE8   UNKNOWN  8EE8            ; Unknown 8xxx instruction
$76A    $754A   ADD      V5, #4A         ; Add 74 to V5
$76C    $3220   SE       V2, #20         ; Skip if V2 == 32
$76E    $EFB6   UNKNOWN  $EFB6           ; Unknown Exxx instruction
$770    $18C8   JP       $8C8            ; Jump to 8C8
$772    $702B   ADD      V0, #2B         ; Add 43 to V0
$774    $5686   UNKNOWN  $5686           ; Unknown 5xxx instruction
$776    $9EB7   UNKNOWN  $9EB7           ; Unknown 9xxx instruction
$778    $9555   UNKNOWN  $9555           ; Unknown 9xxx instruction
$77A    $3FC7   SE       VF, #C7         ; Skip if VF == 199
$77C    $97E8   UNKNOWN  $97E8           ; Unknown 9xxx instruction
$77E    $AFB4   LD       I, $FB4         ; Load FB4 into I
$780    $6430   LD       V4, #30         ; Load 48 into V4
$782    $B8EA   JP       V0, $8EA        ; Jump to V0 + 8EA
$784    $A05C   LD       I, $05C         ; Load 05C into I
$786    $3406   SE       V4, #06         ; Skip if V4 == 6
$788    $3908   SE       V9, #08         ; Skip if V9 == 8
$78A    $14B2   JP       $4B2            ; Jump to 4B2
$78C    $8440   LD       V4, V4          ; V4 = V4
$78E    $BF1A   JP       V0, $F1A        ; Jump to V0 + F1A
$790    $DFE1   DRW      VF, VE, #1      ; Draw 1-byte sprite at VF, VE
$792    $23C6   CALL     $3C6            ; Call subroutine at 3C6
$794    $95AB   UNKNOWN  $95AB           ; Unknown 9xxx instruction
$796    $40F6   SNE      V0, #F6         ; Skip if V0 != 246
$798    $C16B   RND      V1, #6B         ; V1 = random & 6B
$79A    $B886   JP       V0, $886        ; Jump to V0 + 886
$79C    $4C3D   SNE      VC, #3D         ; Skip if VC != 61
$79E    $92A8   UNKNOWN  $92A8           ; Unknown 9xxx instruction
$7A0    $B523   JP       V0, $523        ; Jump to V0 + 523
$7A2    $4CD7   SNE      VC, #D7         ; Skip if VC != 215
$7A4    $7E9B   ADD      VE, #9B         ; Add 155 to VE
$7A6    $A48A   LD       I, $48A         ; Load 48A into I
$7A8    $069D   SYS      $69D            ; System call to 69D
$7AA    $F65F   UNKNOWN  F65F            ; Unknown Fxxx instruction
$7AC    $47BE   SNE      V7, #BE         ; Skip if V7 != 190
$7AE    $D25C   DRW      V2, V5, #C      ; Draw 12-byte sprite at V2, V5
$7B0    $29B0   CALL     $9B0            ; Call subroutine at 9B0
$7B2    $6C81   LD       VC, #81         ; Load 129 into VC
$7B4    $7434   ADD      V4, #34         ; Add 52 to V4
$7B6    $DA2D   DRW      VA, V2, #D      ; Draw 13-byte sprite at VA, V2
$7B8    $4C8E   SNE      VC, #8E         ; Skip if VC != 142
$7BA    $F420   UNKNOWN  F420            ; Unknown Fxxx instruction
$7BC    $8EC7   SUBN     VE, VC          ; VE = VC - VE, VF = !borrow
$7BE    $955B   UNKNOWN  $955B           ; Unknown 9xxx instruction
$7C0    $7714   ADD      V7, #14         ; Add 20 to V7
$7C2    $4265   SNE      V2, #65         ; Skip if V2 != 101
$7C4    $B821   JP       V0, $821        ; Jump to V0 + 821
$7C6    $EC17   UNKNOWN  $EC17           ; Unknown Exxx instruction
$7C8    $BF46   JP       V0, $F46        ; Jump to V0 + F46
$7CA    $1CF2   JP       $CF2            ; Jump to CF2
$7CC    $CA4B   RND      VA, #4B         ; VA = random & 4B
$7CE    $FC9C   UNKNOWN  FC9C            ; Unknown Fxxx instruction
$7D0    $F63D   UNKNOWN  F63D            ; Unknown Fxxx instruction
$7D2    $144A   JP       $44A            ; Jump to 44A
$7D4    $9675   UNKNOWN  $9675           ; Unknown 9xxx instruction
$7D6    $966F   UNKNOWN  $966F           ; Unknown 9xxx instruction
$7D8    $0DA7   SYS      $DA7            ; System call to DA7
$7DA    $52F2   UNKNOWN  $52F2           ; Unknown 5xxx instruction
$7DC    $C933   RND      V9, #33         ; V9 = random & 33
$7DE    $412F   SNE      V1, #2F         ; Skip if V1 != 47
$7E0    $5269   UNKNOWN  $5269           ; Unknown 5xxx instruction
$7E2    $F675   UNKNOWN  F675            ; Unknown Fxxx instruction
$7E4    $A92B   LD       I, $92B         ; Load 92B into I
$7E6    $0054   SYS      $054            ; System call to 054
$7E8    $974C   UNKNOWN  $974C           ; Unknown 9xxx instruction
$7EA    $27CF   CALL     $7CF            ; Call subroutine at 7CF
$7EC    $8AA1   OR       VA, VA          ; VA |= VA
$7EE    $C68E   RND      V6, #8E         ; V6 = random & 8E
$7F0    $1B81   JP       $B81            ; Jump to B81
$7F2    $DB36   DRW      VB, V3, #6      ; Draw 6-byte sprite at VB, V3
$7F4    $2561   CALL     $561            ; Call subroutine at 561
$7F6    $78C3   ADD      V8, #C3         ; Add 195 to V8
$7F8    $AE1D   LD       I, $E1D         ; Load E1D into I
$7FA    $268E   CALL     $68E            ; Call subroutine at 68E
$7FC    $7204   ADD      V2, #04         ; Add 4 to V2
$7FE    $6153   LD       V1, #53         ; Load 83 into V1
$800    $21FD   CALL     $1FD            ; Call subroutine at 1FD
$802    $F87C   UNKNOWN  F87C            ; Unknown Fxxx instruction
$804    $AEF9   LD       I, $EF9         ; Load EF9 into I
$806    $BADC   JP       V0, $ADC        ; Jump to V0 + ADC
$808    $54D2   UNKNOWN  $54D2           ; Unknown 5xxx instruction
$80A    $B49F   JP       V0, $49F        ; Jump to V0 + 49F
$80C    $40B7   SNE      V0, #B7         ; Skip if V0 != 183
$80E    $B75A   JP       V0, $75A        ; Jump to V0 + 75A
$810    $EE1E   UNKNOWN  $EE1E           ; Unknown Exxx instruction
$812    $225E   CALL     $25E            ; Call subroutine at 25E
$814    $B140   JP       V0, $140        ; Jump to V0 + 140
$816    $587F   UNKNOWN  $587F           ; Unknown 5xxx instruction
$818    $2192   CALL     $192            ; Call subroutine at 192
$81A    $2F89   CALL     $F89            ; Call subroutine at F89
$81C    $EBCC   UNKNOWN  $EBCC           ; Unknown Exxx instruction
$81E    $DD50   DRW      VD, V5, #0      ; Draw 0-byte sprite at VD, V5
$820    $F27F   UNKNOWN  F27F            ; Unknown Fxxx instruction
$822    $A26C   LD       I, $26C         ; Load 26C into I
$824    $ED53   UNKNOWN  $ED53           ; Unknown Exxx instruction
$826    $045D   SYS      $45D            ; System call to 45D
$828    $4F18   SNE      VF, #18         ; Skip if VF != 24
$82A    $BB37   JP       V0, $B37        ; Jump to V0 + B37
$82C    $194E   JP       $94E            ; Jump to 94E
$82E    $418D   SNE      V1, #8D         ; Skip if V1 != 141
$830    $5246   UNKNOWN  $5246           ; Unknown 5xxx instruction
$832    $C1B6   RND      V1, #B6         ; V1 = random & B6
$834    $54E7   UNKNOWN  $54E7           ; Unknown 5xxx instruction
$836    $E95F   UNKNOWN  $E95F           ; Unknown Exxx instruction
$838    $91B1   UNKNOWN  $91B1           ; Unknown 9xxx instruction
$83A    $0DBF   SYS      $DBF            ; System call to DBF
$83C    $2E83   CALL     $E83            ; Call subroutine at E83
$83E    $C74C   RND      V7, #4C         ; V7 = random & 4C
$840    $EF6D   UNKNOWN  $EF6D           ; Unknown Exxx instruction
$842    $04E6   SYS      $4E6            ; System call to 4E6
$844    $0A94   SYS      $A94            ; System call to A94
$846    $6A25   LD       VA, #25         ; Load 37 into VA
$848    $2B5A   CALL     $B5A            ; Call subroutine at B5A
$84A    $F7E1   UNKNOWN  F7E1            ; Unknown Fxxx instruction
$84C    $8495   SUB      V4, V9          ; V4 -= V9, VF = !borrow
$84E    $2FCB   CALL     $FCB            ; Call subroutine at FCB
$850    $138A   JP       $38A            ; Jump to 38A
$852    $5CC4   UNKNOWN  $5CC4           ; Unknown 5xxx instruction
$854    $0AF9   SYS      $AF9            ; System call to AF9
$856    $121D   JP       $21D            ; Jump to 21D
$858    $6119   LD       V1, #19         ; Load 25 into V1
$85A    $E2FB   UNKNOWN  $E2FB           ; Unknown Exxx instruction
$85C    $9402   UNKNOWN  $9402           ; Unknown 9xxx instruction
$85E    $11E4   JP       $1E4            ; Jump to 1E4
$860    $664B   LD       V6, #4B         ; Load 75 into V6
$862    $B32B   JP       V0, $32B        ; Jump to V0 + 32B
$864    $E2A3   UNKNOWN  $E2A3           ; Unknown Exxx instruction
$866    $7DA4   ADD      VD, #A4         ; Add 164 to VD
$868    $B642   JP       V0, $642        ; Jump to V0 + 642
$86A    $819D   UNKNOWN  819D            ; Unknown 8xxx instruction
$86C    $B1C3   JP       V0, $1C3        ; Jump to V0 + 1C3
$86E    $D102   DRW      V1, V0, #2      ; Draw 2-byte sprite at V1, V0
$870    $4700   SNE      V7, #00         ; Skip if V7 != 0
$872    $FFB6   UNKNOWN  FFB6            ; Unknown Fxxx instruction
$874    $3E1D   SE       VE, #1D         ; Skip if VE == 29
$876    $4493   SNE      V4, #93         ; Skip if V4 != 147
$878    $C2C4   RND      V2, #C4         ; V2 = random & C4
$87A    $E89A   UNKNOWN  $E89A           ; Unknown Exxx instruction
$87C    $C7EF   RND      V7, #EF         ; V7 = random & EF
$87E    $CE1A   RND      VE, #1A         ; VE = random & 1A
$880    $AE10   LD       I, $E10         ; Load E10 into I
$882    $2798   CALL     $798            ; Call subroutine at 798
$884    $4160   SNE      V1, #60         ; Skip if V1 != 96
$886    $52E9   UNKNOWN  $52E9           ; Unknown 5xxx instruction
$888    $25E5   CALL     $5E5            ; Call subroutine at 5E5
$88A    $F0F7   UNKNOWN  F0F7            ; Unknown Fxxx instruction
$88C    $C117   RND      V1, #17         ; V1 = random & 17
$88E    $DFF9   DRW      VF, VF, #9      ; Draw 9-byte sprite at VF, VF
$890    $EE1B   UNKNOWN  $EE1B           ; Unknown Exxx instruction
$892    $BE71   JP       V0, $E71        ; Jump to V0 + E71
$894    $85B1   OR       V5, VB          ; V5 |= VB
$896    $ABCC   LD       I, $BCC         ; Load BCC into I
$898    $96F6   UNKNOWN  $96F6           ; Unknown 9xxx instruction
$89A    $DF48   DRW      VF, V4, #8      ; Draw 8-byte sprite at VF, V4
$89C    $F34D   UNKNOWN  F34D            ; Unknown Fxxx instruction
$89E    $F9AE   UNKNOWN  F9AE            ; Unknown Fxxx instruction
$8A0    $9C28   UNKNOWN  $9C28           ; Unknown 9xxx instruction
$8A2    $DA1C   DRW      VA, V1, #C      ; Draw 12-byte sprite at VA, V1
$8A4    $984E   UNKNOWN  $984E           ; Unknown 9xxx instruction
$8A6    $3FE4   SE       VF, #E4         ; Skip if VF == 228
$8A8    $4DB2   SNE      VD, #B2         ; Skip if VD != 178
$8AA    $A46A   LD       I, $46A         ; Load 46A into I
$8AC    $C1F6   RND      V1, #F6         ; V1 = random & F6
$8AE    $8C89   UNKNOWN  8C89            ; Unknown 8xxx instruction
$8B0    $ED8A   UNKNOWN  $ED8A           ; Unknown Exxx instruction
$8B2    $D4C0   DRW      V4, VC, #0      ; Draw 0-byte sprite at V4, VC
$8B4    $1945   JP       $945            ; Jump to 945
$8B6    $BA5F   JP       V0, $A5F        ; Jump to V0 + A5F
$8B8    $F4EF   UNKNOWN  F4EF            ; Unknown Fxxx instruction
$8BA    $5626   UNKNOWN  $5626           ; Unknown 5xxx instruction
$8BC    $4DA3   SNE      VD, #A3         ; Skip if VD != 163
$8BE    $22C7   CALL     $2C7            ; Call subroutine at 2C7
$8C0    $B5BF   JP       V0, $5BF        ; Jump to V0 + 5BF
$8C2    $8C42   AND      VC, V4          ; VC &= V4
$8C4    $04AF   SYS      $4AF            ; System call to 4AF
$8C6    $A83F   LD       I, $83F         ; Load 83F into I
$8C8    $EE15   UNKNOWN  $EE15           ; Unknown Exxx instruction
$8CA    $B18F   JP       V0, $18F        ; Jump to V0 + 18F
$8CC    $6C24   LD       VC, #24         ; Load 36 into VC
$8CE    $088C   SYS      $88C            ; System call to 88C
$8D0    $CCA3   RND      VC, #A3         ; VC = random & A3
$8D2    $3475   SE       V4, #75         ; Skip if V4 == 117
$8D4    $386F   SE       V8, #6F         ; Skip if V8 == 111
$8D6    $1C0C   JP       $C0C            ; Jump to C0C
$8D8    $29C9   CALL     $9C9            ; Call subroutine at 9C9
$8DA    $EF2E   UNKNOWN  $EF2E           ; Unknown Exxx instruction
$8DC    $994D   UNKNOWN  $994D           ; Unknown 9xxx instruction
$8DE    $38CE   SE       V8, #CE         ; Skip if V8 == 206
$8E0    $43B9   SNE      V3, #B9         ; Skip if V3 != 185
$8E2    $99D1   UNKNOWN  $99D1           ; Unknown 9xxx instruction
$8E4    $799E   ADD      V9, #9E         ; Add 158 to V9
$8E6    $4C73   SNE      VC, #73         ; Skip if VC != 115
$8E8    $7DD5   ADD      VD, #D5         ; Add 213 to VD
$8EA    $0D69   SYS      $D69            ; System call to D69
$8EC    $4FEB   SNE      VF, #EB         ; Skip if VF != 235
$8EE    $5E39   UNKNOWN  $5E39           ; Unknown 5xxx instruction
$8F0    $0E2A   SYS      $E2A            ; System call to E2A
$8F2    $5D75   UNKNOWN  $5D75           ; Unknown 5xxx instruction
$8F4    $C6ED   RND      V6, #ED         ; V6 = random & ED
$8F6    $4B4F   SNE      VB, #4F         ; Skip if VB != 79
$8F8    $CE1C   RND      VE, #1C         ; VE = random & 1C
$8FA    $20E0   CALL     $0E0            ; Call subroutine at 0E0
$8FC    $4076   SNE      V0, #76         ; Skip if V0 != 118
$8FE    $E327   UNKNOWN  $E327           ; Unknown Exxx instruction
$900    $3279   SE       V2, #79         ; Skip if V2 == 121
$902    $8D57   SUBN     VD, V5          ; VD = V5 - VD, VF = !borrow
$904    $C59C   RND      V5, #9C         ; V5 = random & 9C
$906    $41DF   SNE      V1, #DF         ; Skip if V1 != 223
$908    $38B1   SE       V8, #B1         ; Skip if V8 == 177
$90A    $77B7   ADD      V7, #B7         ; Add 183 to V7
$90C    $41AD   SNE      V1, #AD         ; Skip if V1 != 173
$90E    $6D2D   LD       VD, #2D         ; Load 45 into VD
$910    $5E8E   UNKNOWN  $5E8E           ; Unknown 5xxx instruction
$912    $95F2   UNKNOWN  $95F2           ; Unknown 9xxx instruction
$914    $F6B7   UNKNOWN  F6B7            ; Unknown Fxxx instruction
$916    $7403   ADD      V4, #03         ; Add 3 to V4
$918    $CDA3   RND      VD, #A3         ; VD = random & A3
$91A    $3570   SE       V5, #70         ; Skip if V5 == 112
$91C    $93F9   UNKNOWN  $93F9           ; Unknown 9xxx instruction
$91E    $F9A3   UNKNOWN  F9A3            ; Unknown Fxxx instruction
$920    $0132   SYS      $132            ; System call to 132
$922    $4A2C   SNE      VA, #2C         ; Skip if VA != 44
$924    $2CE7   CALL     $CE7            ; Call subroutine at CE7
$926    $1002   JP       $002            ; Jump to 002
$928    $C3EC   RND      V3, #EC         ; V3 = random & EC
$92A    $FB6B   UNKNOWN  FB6B            ; Unknown Fxxx instruction
$92C    $B3AB   JP       V0, $3AB        ; Jump to V0 + 3AB
$92E    $75F5   ADD      V5, #F5         ; Add 245 to V5
$930    $4703   SNE      V7, #03         ; Skip if V7 != 3
$932    $82C1   OR       V2, VC          ; V2 |= VC
$934    $391C   SE       V9, #1C         ; Skip if V9 == 28
$936    $8286   SHR      V2              ; V2 >>= 1, VF = LSB
$938    $C17F   RND      V1, #7F         ; V1 = random & 7F
$93A    $8A92   AND      VA, V9          ; VA &= V9
$93C    $082F   SYS      $82F            ; System call to 82F
$93E    $D1F5   DRW      V1, VF, #5      ; Draw 5-byte sprite at V1, VF
$940    $75CA   ADD      V5, #CA         ; Add 202 to V5
$942    $049E   SYS      $49E            ; System call to 49E
$944    $F348   UNKNOWN  F348            ; Unknown Fxxx instruction
$946    $1C1D   JP       $C1D            ; Jump to C1D
$948    $F3B4   UNKNOWN  F3B4            ; Unknown Fxxx instruction
$94A    $CAE0   RND      VA, #E0         ; VA = random & E0
$94C    $7CA7   ADD      VC, #A7         ; Add 167 to VC
$94E    $A9D5   LD       I, $9D5         ; Load 9D5 into I
$950    $7545   ADD      V5, #45         ; Add 69 to V5
$952    $72B0   ADD      V2, #B0         ; Add 176 to V2
$954    $9362   UNKNOWN  $9362           ; Unknown 9xxx instruction
$956    $0359   SYS      $359            ; System call to 359
$958    $2F09   CALL     $F09            ; Call subroutine at F09
$95A    $EC7B   UNKNOWN  $EC7B           ; Unknown Exxx instruction
$95C    $39A8   SE       V9, #A8         ; Skip if V9 == 168
$95E    $4CBA   SNE      VC, #BA         ; Skip if VC != 186
$960    $3173   SE       V1, #73         ; Skip if V1 == 115
$962    $13CF   JP       $3CF            ; Jump to 3CF
$964    $03F3   SYS      $3F3            ; System call to 3F3
$966    $F9D2   UNKNOWN  F9D2            ; Unknown Fxxx instruction
$968    $C14A   RND      V1, #4A         ; V1 = random & 4A
$96A    $806E   SHL      V0              ; V0 <<= 1, VF = MSB
$96C    $BE31   JP       V0, $E31        ; Jump to V0 + E31
$96E    $2201   CALL     $201            ; Call subroutine at 201
$970    $A149   LD       I, $149         ; Load 149 into I
$972    $5DD6   UNKNOWN  $5DD6           ; Unknown 5xxx instruction
$974    $7FE7   ADD      VF, #E7         ; Add 231 to VF
$976    $E30C   UNKNOWN  $E30C           ; Unknown Exxx instruction
$978    $B271   JP       V0, $271        ; Jump to V0 + 271
$97A    $E9F5   UNKNOWN  $E9F5           ; Unknown Exxx instruction
$97C    $7011   ADD      V0, #11         ; Add 17 to V0
$97E    $0AEB   SYS      $AEB            ; System call to AEB
$980    $0487   SYS      $487            ; System call to 487
$982    $588C   UNKNOWN  $588C           ; Unknown 5xxx instruction
$984    $91C5   UNKNOWN  $91C5           ; Unknown 9xxx instruction
$986    $7780   ADD      V7, #80         ; Add 128 to V7
$988    $D290   DRW      V2, V9, #0      ; Draw 0-byte sprite at V2, V9
$98A    $4383   SNE      V3, #83         ; Skip if V3 != 131
$98C    $6DB5   LD       VD, #B5         ; Load 181 into VD
$98E    $0930   SYS      $930            ; System call to 930
$990    $42C9   SNE      V2, #C9         ; Skip if V2 != 201
$992    $3596   SE       V5, #96         ; Skip if V5 == 150
$994    $C0A5   RND      V0, #A5         ; V0 = random & A5
$996    $4205   SNE      V2, #05         ; Skip if V2 != 5
$998    $A898   LD       I, $898         ; Load 898 into I
$99A    $7651   ADD      V6, #51         ; Add 81 to V6
$99C    $31AE   SE       V1, #AE         ; Skip if V1 == 174
$99E    $F19F   UNKNOWN  F19F            ; Unknown Fxxx instruction
$9A0    $2D7C   CALL     $D7C            ; Call subroutine at D7C
$9A2    $6453   LD       V4, #53         ; Load 83 into V4
$9A4    $387F   SE       V8, #7F         ; Skip if V8 == 127
$9A6    $4802   SNE      V8, #02         ; Skip if V8 != 2
$9A8    $AC8B   LD       I, $C8B         ; Load C8B into I
$9AA    $598C   UNKNOWN  $598C           ; Unknown 5xxx instruction
$9AC    $1345   JP       $345            ; Jump to 345
$9AE    $BDE4   JP       V0, $DE4        ; Jump to V0 + DE4
$9B0    $900B   UNKNOWN  $900B           ; Unknown 9xxx instruction
$9B2    $29FB   CALL     $9FB            ; Call subroutine at 9FB
$9B4    $C0FA   RND      V0, #FA         ; V0 = random & FA
$9B6    $52DE   UNKNOWN  $52DE           ; Unknown 5xxx instruction
$9B8    $E5F8   UNKNOWN  $E5F8           ; Unknown Exxx instruction
$9BA    $AA9F   LD       I, $A9F         ; Load A9F into I
$9BC    $55B0   SE       V5, VB          ; Skip if V5 == VB
$9BE    $01AB   SYS      $1AB            ; System call to 1AB
$9C0    $7743   ADD      V7, #43         ; Add 67 to V7
$9C2    $AC77   LD       I, $C77         ; Load C77 into I
$9C4    $D28E   DRW      V2, V8, #E      ; Draw 14-byte sprite at V2, V8
$9C6    $6981   LD       V9, #81         ; Load 129 into V9
$9C8    $AEE1   LD       I, $EE1         ; Load EE1 into I
$9CA    $D5C6   DRW      V5, VC, #6      ; Draw 6-byte sprite at V5, VC
$9CC    $2273   CALL     $273            ; Call subroutine at 273
$9CE    $1444   JP       $444            ; Jump to 444
$9D0    $7B5D   ADD      VB, #5D         ; Add 93 to VB
$9D2    $F2ED   UNKNOWN  F2ED            ; Unknown Fxxx instruction
$9D4    $9C37   UNKNOWN  $9C37           ; Unknown 9xxx instruction
$9D6    $7434   ADD      V4, #34         ; Add 52 to V4
$9D8    $83A7   SUBN     V3, VA          ; V3 = VA - V3, VF = !borrow
$9DA    $7D65   ADD      VD, #65         ; Add 101 to VD
$9DC    $FAD1   UNKNOWN  FAD1            ; Unknown Fxxx instruction
$9DE    $4D63   SNE      VD, #63         ; Skip if VD != 99
$9E0    $67BD   LD       V7, #BD         ; Load 189 into V7
$9E2    $9F80   SNE      VF, V8          ; Skip if VF != V8
$9E4    $601A   LD       V0, #1A         ; Load 26 into V0
$9E6    $19D9   JP       $9D9            ; Jump to 9D9
$9E8    $BC50   JP       V0, $C50        ; Jump to V0 + C50
$9EA    $4E98   SNE      VE, #98         ; Skip if VE != 152
$9EC    $0E59   SYS      $E59            ; System call to E59
$9EE    $FC0A   LD       VC, K           ; Wait for key press, store in VC
$9F0    $8678   UNKNOWN  8678            ; Unknown 8xxx instruction
$9F2    $C70C   RND      V7, #0C         ; V7 = random & 0C
$9F4    $3812   SE       V8, #12         ; Skip if V8 == 18
$9F6    $B2A4   JP       V0, $2A4        ; Jump to V0 + 2A4
$9F8    $B4DB   JP       V0, $4DB        ; Jump to V0 + 4DB
$9FA    $F3D9   UNKNOWN  F3D9            ; Unknown Fxxx instruction
$9FC    $9A09   UNKNOWN  $9A09           ; Unknown 9xxx instruction
$9FE    $4524   SNE      V5, #24         ; Skip if V5 != 36
$A00    $EA23   UNKNOWN  $EA23           ; Unknown Exxx instruction
$A02    $E37F   UNKNOWN  $E37F           ; Unknown Exxx instruction
$A04    $6440   LD       V4, #40         ; Load 64 into V4
$A06    $98E6   UNKNOWN  $98E6           ; Unknown 9xxx instruction
$A08    $FACD   UNKNOWN  FACD            ; Unknown Fxxx instruction
$A0A    $0F45   SYS      $F45            ; System call to F45
$A0C    $201E   CALL     $01E            ; Call subroutine at 01E
$A0E    $358B   SE       V5, #8B         ; Skip if V5 == 139
$A10    $4BCD   SNE      VB, #CD         ; Skip if VB != 205
$A12    $8822   AND      V8, V2          ; V8 &= V2
$A14    $688A   LD       V8, #8A         ; Load 138 into V8
$A16    $B536   JP       V0, $536        ; Jump to V0 + 536
$A18    $6134   LD       V1, #34         ; Load 52 into V1
$A1A    $1C4F   JP       $C4F            ; Jump to C4F
$A1C    $4A8C   SNE      VA, #8C         ; Skip if VA != 140
$A1E    $57E7   UNKNOWN  $57E7           ; Unknown 5xxx instruction
$A20    $CE16   RND      VE, #16         ; VE = random & 16
$A22    $E7A8   UNKNOWN  $E7A8           ; Unknown Exxx instruction
$A24    $D6A3   DRW      V6, VA, #3      ; Draw 3-byte sprite at V6, VA
$A26    $9F05   UNKNOWN  $9F05           ; Unknown 9xxx instruction
$A28    $B5C6   JP       V0, $5C6        ; Jump to V0 + 5C6
$A2A    $3C09   SE       VC, #09         ; Skip if VC == 9
$A2C    $24EF   CALL     $4EF            ; Call subroutine at 4EF
$A2E    $A307   LD       I, $307         ; Load 307 into I
$A30    $F0ED   UNKNOWN  F0ED            ; Unknown Fxxx instruction
$A32    $7568   ADD      V5, #68         ; Add 104 to V5
$A34    $5989   UNKNOWN  $5989           ; Unknown 5xxx instruction
$A36    $D789   DRW      V7, V8, #9      ; Draw 9-byte sprite at V7, V8
$A38    $4B45   SNE      VB, #45         ; Skip if VB != 69
$A3A    $C288   RND      V2, #88         ; V2 = random & 88
$A3C    $FFDC   UNKNOWN  FFDC            ; Unknown Fxxx instruction
$A3E    $1AF5   JP       $AF5            ; Jump to AF5
$A40    $D8DA   DRW      V8, VD, #A      ; Draw 10-byte sprite at V8, VD
$A42    $4A91   SNE      VA, #91         ; Skip if VA != 145
$A44    $7823   ADD      V8, #23         ; Add 35 to V8
$A46    $0753   SYS      $753            ; System call to 753
$A48    $6A23   LD       VA, #23         ; Load 35 into VA
$A4A    $53C8   UNKNOWN  $53C8           ; Unknown 5xxx instruction
$A4C    $54B1   UNKNOWN  $54B1           ; Unknown 5xxx instruction
$A4E    $DF86   DRW      VF, V8, #6      ; Draw 6-byte sprite at VF, V8
$A50    $E948   UNKNOWN  $E948           ; Unknown Exxx instruction
$A52    $6A16   LD       VA, #16         ; Load 22 into VA
$A54    $6581   LD       V5, #81         ; Load 129 into V5
$A56    $146D   JP       $46D            ; Jump to 46D
$A58    $FC93   UNKNOWN  FC93            ; Unknown Fxxx instruction
$A5A    $5551   UNKNOWN  $5551           ; Unknown 5xxx instruction
$A5C    $D965   DRW      V9, V6, #5      ; Draw 5-byte sprite at V9, V6
$A5E    $A0AD   LD       I, $0AD         ; Load 0AD into I
$A60    $BD7D   JP       V0, $D7D        ; Jump to V0 + D7D
$A62    $5D9F   UNKNOWN  $5D9F           ; Unknown 5xxx instruction
$A64    $EEDC   UNKNOWN  $EEDC           ; Unknown Exxx instruction
$A66    $92DA   UNKNOWN  $92DA           ; Unknown 9xxx instruction
$A68    $3319   SE       V3, #19         ; Skip if V3 == 25
$A6A    $96B8   UNKNOWN  $96B8           ; Unknown 9xxx instruction
$A6C    $B670   JP       V0, $670        ; Jump to V0 + 670
$A6E    $0EF0   SYS      $EF0            ; System call to EF0
$A70    $9437   UNKNOWN  $9437           ; Unknown 9xxx instruction
$A72    $EEE1   UNKNOWN  $EEE1           ; Unknown Exxx instruction
$A74    $18DB   JP       $8DB            ; Jump to 8DB
$A76    $EC5C   UNKNOWN  $EC5C           ; Unknown Exxx instruction
$A78    $8A20   LD       VA, V2          ; VA = V2
$A7A    $A579   LD       I, $579         ; Load 579 into I
$A7C    $1454   JP       $454            ; Jump to 454
$A7E    $9458   UNKNOWN  $9458           ; Unknown 9xxx instruction
$A80    $4C20   SNE      VC, #20         ; Skip if VC != 32
$A82    $2D71   CALL     $D71            ; Call subroutine at D71
$A84    $67C8   LD       V7, #C8         ; Load 200 into V7
$A86    $AA83   LD       I, $A83         ; Load A83 into I
$A88    $407E   SNE      V0, #7E         ; Skip if V0 != 126
$A8A    $3985   SE       V9, #85         ; Skip if V9 == 133
$A8C    $AC51   LD       I, $C51         ; Load C51 into I
$A8E    $0C04   SYS      $C04            ; System call to C04
$A90    $4136   SNE      V1, #36         ; Skip if V1 != 54
$A92    $661D   LD       V6, #1D         ; Load 29 into V6
$A94    $9982   UNKNOWN  $9982           ; Unknown 9xxx instruction
$A96    $D1DE   DRW      V1, VD, #E      ; Draw 14-byte sprite at V1, VD
$A98    $DDF1   DRW      VD, VF, #1      ; Draw 1-byte sprite at VD, VF
$A9A    $F8BE   UNKNOWN  F8BE            ; Unknown Fxxx instruction
$A9C    $7CA8   ADD      VC, #A8         ; Add 168 to VC
$A9E    $7188   ADD      V1, #88         ; Add 136 to V1
$AA0    $7DAA   ADD      VD, #AA         ; Add 170 to VD
$AA2    $DD25   DRW      VD, V2, #5      ; Draw 5-byte sprite at VD, V2
$AA4    $C486   RND      V4, #86         ; V4 = random & 86
$AA6    $B11A   JP       V0, $11A        ; Jump to V0 + 11A
$AA8    $EC4C   UNKNOWN  $EC4C           ; Unknown Exxx instruction
$AAA    $3045   SE       V0, #45         ; Skip if V0 == 69
$AAC    $9404   UNKNOWN  $9404           ; Unknown 9xxx instruction
$AAE    $12C3   JP       $2C3            ; Jump to 2C3
$AB0    $AD80   LD       I, $D80         ; Load D80 into I
$AB2    $D0EF   DRW      V0, VE, #F      ; Draw 15-byte sprite at V0, VE
$AB4    $C557   RND      V5, #57         ; V5 = random & 57
$AB6    $2DF6   CALL     $DF6            ; Call subroutine at DF6
$AB8    $C216   RND      V2, #16         ; V2 = random & 16
$ABA    $5F7A   UNKNOWN  $5F7A           ; Unknown 5xxx instruction
$ABC    $58D9   UNKNOWN  $58D9           ; Unknown 5xxx instruction
$ABE    $3F21   SE       VF, #21         ; Skip if VF == 33
$AC0    $6D47   LD       VD, #47         ; Load 71 into VD
$AC2    $8AFF   UNKNOWN  8AFF            ; Unknown 8xxx instruction
$AC4    $EEE1   UNKNOWN  $EEE1           ; Unknown Exxx instruction
$AC6    $3DA3   SE       VD, #A3         ; Skip if VD == 163
$AC8    $0002   SYS      $002            ; System call to 002
$ACA    $0469   SYS      $469            ; System call to 469
$ACC    $2CB7   CALL     $CB7            ; Call subroutine at CB7
$ACE    $2EAC   CALL     $EAC            ; Call subroutine at EAC
$AD0    $63F0   LD       V3, #F0         ; Load 240 into V3
$AD2    $ECF4   UNKNOWN  $ECF4           ; Unknown Exxx instruction
$AD4    $7D16   ADD      VD, #16         ; Add 22 to VD
$AD6    $66BE   LD       V6, #BE         ; Load 190 into V6
$AD8    $0955   SYS      $955            ; System call to 955
$ADA    $2D06   CALL     $D06            ; Call subroutine at D06
$ADC    $F6FD   UNKNOWN  F6FD            ; Unknown Fxxx instruction
$ADE    $2E07   CALL     $E07            ; Call subroutine at E07
$AE0    $F286   UNKNOWN  F286            ; Unknown Fxxx instruction
$AE2    $47D9   SNE      V7, #D9         ; Skip if V7 != 217
$AE4    $580E   UNKNOWN  $580E           ; Unknown 5xxx instruction
$AE6    $1667   JP       $667            ; Jump to 667
$AE8    $FCBA   UNKNOWN  FCBA            ; Unknown Fxxx instruction
$AEA    $9FE6   UNKNOWN  $9FE6           ; Unknown 9xxx instruction
$AEC    $C6E8   RND      V6, #E8         ; V6 = random & E8
$AEE    $EC1F   UNKNOWN  $EC1F           ; Unknown Exxx instruction
$AF0    $2340   CALL     $340            ; Call subroutine at 340
$AF2    $53CF   UNKNOWN  $53CF           ; Unknown 5xxx instruction
$AF4    $9E3B   UNKNOWN  $9E3B           ; Unknown 9xxx instruction
$AF6    $F4A6   UNKNOWN  F4A6            ; Unknown Fxxx instruction
$AF8    $F80B   UNKNOWN  F80B            ; Unknown Fxxx instruction
$AFA    $1417   JP       $417            ; Jump to 417
$AFC    $8CCF   UNKNOWN  8CCF            ; Unknown 8xxx instruction
$AFE    $8629   UNKNOWN  8629            ; Unknown 8xxx instruction
$B00    $8AB0   LD       VA, VB          ; VA = VB
$B02    $BEE7   JP       V0, $EE7        ; Jump to V0 + EE7
$B04    $2B96   CALL     $B96            ; Call subroutine at B96
$B06    $B094   JP       V0, $094        ; Jump to V0 + 094
$B08    $E30E   UNKNOWN  $E30E           ; Unknown Exxx instruction
$B0A    $5A0E   UNKNOWN  $5A0E           ; Unknown 5xxx instruction
$B0C    $2F1E   CALL     $F1E            ; Call subroutine at F1E
$B0E    $CBCB   RND      VB, #CB         ; VB = random & CB
$B10    $3363   SE       V3, #63         ; Skip if V3 == 99
$B12    $4797   SNE      V7, #97         ; Skip if V7 != 151
$B14    $583F   UNKNOWN  $583F           ; Unknown 5xxx instruction
$B16    $8479   UNKNOWN  8479            ; Unknown 8xxx instruction
$B18    $C8AC   RND      V8, #AC         ; V8 = random & AC
$B1A    $0902   SYS      $902            ; System call to 902
$B1C    $B0AF   JP       V0, $0AF        ; Jump to V0 + 0AF
$B1E    $C34A   RND      V3, #4A         ; V3 = random & 4A
$B20    $9C97   UNKNOWN  $9C97           ; Unknown 9xxx instruction
$B22    $4986   SNE      V9, #86         ; Skip if V9 != 134
$B24    $CFF3   RND      VF, #F3         ; VF = random & F3
$B26    $BF07   JP       V0, $F07        ; Jump to V0 + F07
$B28    $9EAD   UNKNOWN  $9EAD           ; Unknown 9xxx instruction
$B2A    $A07B   LD       I, $07B         ; Load 07B into I
$B2C    $D14E   DRW      V1, V4, #E      ; Draw 14-byte sprite at V1, V4
$B2E    $3602   SE       V6, #02         ; Skip if V6 == 2
$B30    $CDA7   RND      VD, #A7         ; VD = random & A7
$B32    $CAD6   RND      VA, #D6         ; VA = random & D6
$B34    $6280   LD       V2, #80         ; Load 128 into V2
$B36    $BAE2   JP       V0, $AE2        ; Jump to V0 + AE2
$B38    $B317   JP       V0, $317        ; Jump to V0 + 317
$B3A    $EFE7   UNKNOWN  $EFE7           ; Unknown Exxx instruction
$B3C    $75D1   ADD      V5, #D1         ; Add 209 to V5
$B3E    $38D6   SE       V8, #D6         ; Skip if V8 == 214
$B40    $E00D   UNKNOWN  $E00D           ; Unknown Exxx instruction
$B42    $06C2   SYS      $6C2            ; System call to 6C2
$B44    $4F54   SNE      VF, #54         ; Skip if VF != 84
$B46    $11FE   JP       $1FE            ; Jump to 1FE
$B48    $8367   SUBN     V3, V6          ; V3 = V6 - V3, VF = !borrow
$B4A    $5FBB   UNKNOWN  $5FBB           ; Unknown 5xxx instruction
$B4C    $7C69   ADD      VC, #69         ; Add 105 to VC
$B4E    $862F   UNKNOWN  862F            ; Unknown 8xxx instruction
$B50    $E860   UNKNOWN  $E860           ; Unknown Exxx instruction
$B52    $B693   JP       V0, $693        ; Jump to V0 + 693
$B54    $B782   JP       V0, $782        ; Jump to V0 + 782
$B56    $90D4   UNKNOWN  $90D4           ; Unknown 9xxx instruction
$B58    $DC2C   DRW      VC, V2, #C      ; Draw 12-byte sprite at VC, V2
$B5A    $69AA   LD       V9, #AA         ; Load 170 into V9
$B5C    $C89E   RND      V8, #9E         ; V8 = random & 9E
$B5E    $701F   ADD      V0, #1F         ; Add 31 to V0
$B60    $9E9C   UNKNOWN  $9E9C           ; Unknown 9xxx instruction
$B62    $95F0   SNE      V5, VF          ; Skip if V5 != VF
$B64    $7584   ADD      V5, #84         ; Add 132 to V5
$B66    $0064   SYS      $064            ; System call to 064
$B68    $E02E   UNKNOWN  $E02E           ; Unknown Exxx instruction
$B6A    $E537   UNKNOWN  $E537           ; Unknown Exxx instruction
$B6C    $AC2C   LD       I, $C2C         ; Load C2C into I
$B6E    $347E   SE       V4, #7E         ; Skip if V4 == 126
$B70    $35F1   SE       V5, #F1         ; Skip if V5 == 241
$B72    $33AF   SE       V3, #AF         ; Skip if V3 == 175
$B74    $748C   ADD      V4, #8C         ; Add 140 to V4
$B76    $A673   LD       I, $673         ; Load 673 into I
$B78    $3232   SE       V2, #32         ; Skip if V2 == 50
$B7A    $A97C   LD       I, $97C         ; Load 97C into I
$B7C    $7E38   ADD      VE, #38         ; Add 56 to VE
$B7E    $A240   LD       I, $240         ; Load 240 into I
$B80    $F247   UNKNOWN  F247            ; Unknown Fxxx instruction
$B82    $5BB1   UNKNOWN  $5BB1           ; Unknown 5xxx instruction
$B84    $CF31   RND      VF, #31         ; VF = random & 31
$B86    $E902   UNKNOWN  $E902           ; Unknown Exxx instruction
$B88    $B789   JP       V0, $789        ; Jump to V0 + 789
$B8A    $59EF   UNKNOWN  $59EF           ; Unknown 5xxx instruction
$B8C    $643D   LD       V4, #3D         ; Load 61 into V4
$B8E    $0F42   SYS      $F42            ; System call to F42
$B90    $77B2   ADD      V7, #B2         ; Add 178 to V7
$B92    $7324   ADD      V3, #24         ; Add 36 to V3
$B94    $3781   SE       V7, #81         ; Skip if V7 == 129
$B96    $A824   LD       I, $824         ; Load 824 into I
$B98    $D509   DRW      V5, V0, #9      ; Draw 9-byte sprite at V5, V0
$B9A    $CAC4   RND      VA, #C4         ; VA = random & C4
$B9C    $9C17   UNKNOWN  $9C17           ; Unknown 9xxx instruction
$B9E    $38BB   SE       V8, #BB         ; Skip if V8 == 187
$BA0    $C1D1   RND      V1, #D1         ; V1 = random & D1
$BA2    $3494   SE       V4, #94         ; Skip if V4 == 148
$BA4    $4805   SNE      V8, #05         ; Skip if V8 != 5
$BA6    $955C   UNKNOWN  $955C           ; Unknown 9xxx instruction
$BA8    $BDCB   JP       V0, $DCB        ; Jump to V0 + DCB
$BAA    $D8D0   DRW      V8, VD, #0      ; Draw 0-byte sprite at V8, VD
$BAC    $ADF7   LD       I, $DF7         ; Load DF7 into I
$BAE    $6C96   LD       VC, #96         ; Load 150 into VC
$BB0    $44D6   SNE      V4, #D6         ; Skip if V4 != 214
$BB2    $DBD2   DRW      VB, VD, #2      ; Draw 2-byte sprite at VB, VD
$BB4    $C488   RND      V4, #88         ; V4 = random & 88
$BB6    $7E91   ADD      VE, #91         ; Add 145 to VE
$BB8    $CF50   RND      VF, #50         ; VF = random & 50
$BBA    $F809   UNKNOWN  F809            ; Unknown Fxxx instruction
$BBC    $6272   LD       V2, #72         ; Load 114 into V2
$BBE    $DB6A   DRW      VB, V6, #A      ; Draw 10-byte sprite at VB, V6
$BC0    $187C   JP       $87C            ; Jump to 87C
$BC2    $F579   UNKNOWN  F579            ; Unknown Fxxx instruction
$BC4    $192F   JP       $92F            ; Jump to 92F
$BC6    $BF39   JP       V0, $F39        ; Jump to V0 + F39
$BC8    $F8D1   UNKNOWN  F8D1            ; Unknown Fxxx instruction
$BCA    $F150   UNKNOWN  F150            ; Unknown Fxxx instruction
$BCC    $6EDE   LD       VE, #DE         ; Load 222 into VE
$BCE    $C074   RND      V0, #74         ; V0 = random & 74
$BD0    $6456   LD       V4, #56         ; Load 86 into V4
$BD2    $0990   SYS      $990            ; System call to 990
$BD4    $F77B   UNKNOWN  F77B            ; Unknown Fxxx instruction
$BD6    $A126   LD       I, $126         ; Load 126 into I
$BD8    $0E4D   SYS      $E4D            ; System call to E4D
$BDA    $54F9   UNKNOWN  $54F9           ; Unknown 5xxx instruction
$BDC    $F9AE   UNKNOWN  F9AE            ; Unknown Fxxx instruction
$BDE    $E552   UNKNOWN  $E552           ; Unknown Exxx instruction
$BE0    $BA35   JP       V0, $A35        ; Jump to V0 + A35
$BE2    $9DE0   SNE      VD, VE          ; Skip if VD != VE
$BE4    $8724   ADD      V7, V2          ; V7 += V2, VF = carry
$BE6    $FCB0   UNKNOWN  FCB0            ; Unknown Fxxx instruction
$BE8    $886C   UNKNOWN  886C            ; Unknown 8xxx instruction
$BEA    $0DB6   SYS      $DB6            ; System call to DB6
$BEC    $3BEA   SE       VB, #EA         ; Skip if VB == 234
$BEE    $A2A5   LD       I, $2A5         ; Load 2A5 into I
$BF0    $1C82   JP       $C82            ; Jump to C82
$BF2    $3500   SE       V5, #00         ; Skip if V5 == 0
$BF4    $72A1   ADD      V2, #A1         ; Add 161 to V2
$BF6    $2EB0   CALL     $EB0            ; Call subroutine at EB0
$BF8    $A7CC   LD       I, $7CC         ; Load 7CC into I
$BFA    $DA16   DRW      VA, V1, #6      ; Draw 6-byte sprite at VA, V1
$BFC    $5207   UNKNOWN  $5207           ; Unknown 5xxx instruction
$BFE    $DB36   DRW      VB, V3, #6      ; Draw 6-byte sprite at VB, V3
$C00    $79E2   ADD      V9, #E2         ; Add 226 to V9
$C02    $4B49   SNE      VB, #49         ; Skip if VB != 73
$C04    $A025   LD       I, $025         ; Load 025 into I
$C06    $DFC1   DRW      VF, VC, #1      ; Draw 1-byte sprite at VF, VC
$C08    $E2FA   UNKNOWN  $E2FA           ; Unknown Exxx instruction
$C0A    $1D51   JP       $D51            ; Jump to D51
$C0C    $7A87   ADD      VA, #87         ; Add 135 to VA
$C0E    $65C3   LD       V5, #C3         ; Load 195 into V5
$C10    $7717   ADD      V7, #17         ; Add 23 to V7
$C12    $48EE   SNE      V8, #EE         ; Skip if V8 != 238
$C14    $22DF   CALL     $2DF            ; Call subroutine at 2DF
$C16    $E72E   UNKNOWN  $E72E           ; Unknown Exxx instruction
$C18    $1B63   JP       $B63            ; Jump to B63
$C1A    $FC20   UNKNOWN  FC20            ; Unknown Fxxx instruction
$C1C    $12C6   JP       $2C6            ; Jump to 2C6
$C1E    $6680   LD       V6, #80         ; Load 128 into V6
$C20    $6F29   LD       VF, #29         ; Load 41 into VF
$C22    $FAEF   UNKNOWN  FAEF            ; Unknown Fxxx instruction
$C24    $7F8D   ADD      VF, #8D         ; Add 141 to VF
$C26    $329E   SE       V2, #9E         ; Skip if V2 == 158
$C28    $38AD   SE       V8, #AD         ; Skip if V8 == 173
$C2A    $34B9   SE       V4, #B9         ; Skip if V4 == 185
$C2C    $A46C   LD       I, $46C         ; Load 46C into I
$C2E    $D500   DRW      V5, V0, #0      ; Draw 0-byte sprite at V5, V0
$C30    $48C8   SNE      V8, #C8         ; Skip if V8 != 200
$C32    $6526   LD       V5, #26         ; Load 38 into V5
$C34    $CC8B   RND      VC, #8B         ; VC = random & 8B
$C36    $7ECD   ADD      VE, #CD         ; Add 205 to VE
$C38    $D554   DRW      V5, V5, #4      ; Draw 4-byte sprite at V5, V5
$C3A    $65E9   LD       V5, #E9         ; Load 233 into V5
$C3C    $BCC7   JP       V0, $CC7        ; Jump to V0 + CC7
$C3E    $273F   CALL     $73F            ; Call subroutine at 73F
$C40    $3BDD   SE       VB, #DD         ; Skip if VB == 221
$C42    $A453   LD       I, $453         ; Load 453 into I
$C44    $4320   SNE      V3, #20         ; Skip if V3 != 32
$C46    $1B12   JP       $B12            ; Jump to B12
$C48    $92C0   SNE      V2, VC          ; Skip if V2 != VC
$C4A    $9A87   UNKNOWN  $9A87           ; Unknown 9xxx instruction
$C4C    $D1E8   DRW      V1, VE, #8      ; Draw 8-byte sprite at V1, VE
$C4E    $8522   AND      V5, V2          ; V5 &= V2
$C50    $8FEF   UNKNOWN  8FEF            ; Unknown 8xxx instruction
$C52    $3C27   SE       VC, #27         ; Skip if VC == 39
$C54    $3F92   SE       VF, #92         ; Skip if VF == 146
$C56    $7E1A   ADD      VE, #1A         ; Add 26 to VE
$C58    $8225   SUB      V2, V2          ; V2 -= V2, VF = !borrow
$C5A    $6B2F   LD       VB, #2F         ; Load 47 into VB
$C5C    $4808   SNE      V8, #08         ; Skip if V8 != 8
$C5E    $5004   UNKNOWN  $5004           ; Unknown 5xxx instruction
$C60    $8918   UNKNOWN  8918            ; Unknown 8xxx instruction
$C62    $8CDF   UNKNOWN  8CDF            ; Unknown 8xxx instruction
$C64    $9546   UNKNOWN  $9546           ; Unknown 9xxx instruction
$C66    $2A03   CALL     $A03            ; Call subroutine at A03
$C68    $9529   UNKNOWN  $9529           ; Unknown 9xxx instruction
$C6A    $C324   RND      V3, #24         ; V3 = random & 24
$C6C    $334D   SE       V3, #4D         ; Skip if V3 == 77
$C6E    $76F6   ADD      V6, #F6         ; Add 246 to V6
$C70    $A076   LD       I, $076         ; Load 076 into I
$C72    $B2BC   JP       V0, $2BC        ; Jump to V0 + 2BC
$C74    $6087   LD       V0, #87         ; Load 135 into V0
$C76    $3072   SE       V0, #72         ; Skip if V0 == 114
$C78    $7029   ADD      V0, #29         ; Add 41 to V0
$C7A    $0088   SYS      $088            ; System call to 088
$C7C    $7177   ADD      V1, #77         ; Add 119 to V1
$C7E    $E0E9   UNKNOWN  $E0E9           ; Unknown Exxx instruction
$C80    $30B8   SE       V0, #B8         ; Skip if V0 == 184
$C82    $87BD   UNKNOWN  87BD            ; Unknown 8xxx instruction
$C84    $53ED   UNKNOWN  $53ED           ; Unknown 5xxx instruction
$C86    $81F3   XOR      V1, VF          ; V1 ^= VF
$C88    $CD10   RND      VD, #10         ; VD = random & 10
$C8A    $4ACD   SNE      VA, #CD         ; Skip if VA != 205
$C8C    $4EC2   SNE      VE, #C2         ; Skip if VE != 194
$C8E    $900A   UNKNOWN  $900A           ; Unknown 9xxx instruction
$C90    $6C93   LD       VC, #93         ; Load 147 into VC
$C92    $D746   DRW      V7, V4, #6      ; Draw 6-byte sprite at V7, V4
$C94    $2E9E   CALL     $E9E            ; Call subroutine at E9E
$C96    $0F9F   SYS      $F9F            ; System call to F9F
$C98    $D207   DRW      V2, V0, #7      ; Draw 7-byte sprite at V2, V0
$C9A    $E1B4   UNKNOWN  $E1B4           ; Unknown Exxx instruction
$C9C    $8C2F   UNKNOWN  8C2F            ; Unknown 8xxx instruction
$C9E    $2250   CALL     $250            ; Call subroutine at 250
$CA0    $1D81   JP       $D81            ; Jump to D81
$CA2    $A995   LD       I, $995         ; Load 995 into I
$CA4    $E177   UNKNOWN  $E177           ; Unknown Exxx instruction
$CA6    $D9D8   DRW      V9, VD, #8      ; Draw 8-byte sprite at V9, VD
$CA8    $2A7D   CALL     $A7D            ; Call subroutine at A7D
$CAA    $108B   JP       $08B            ; Jump to 08B
$CAC    $8627   SUBN     V6, V2          ; V6 = V2 - V6, VF = !borrow
$CAE    $D088   DRW      V0, V8, #8      ; Draw 8-byte sprite at V0, V8
$CB0    $67E3   LD       V7, #E3         ; Load 227 into V7
$CB2    $FAE5   UNKNOWN  FAE5            ; Unknown Fxxx instruction
$CB4    $0F33   SYS      $F33            ; System call to F33
$CB6    $11A3   JP       $1A3            ; Jump to 1A3
$CB8    $5245   UNKNOWN  $5245           ; Unknown 5xxx instruction
$CBA    $C05A   RND      V0, #5A         ; V0 = random & 5A
$CBC    $5D7B   UNKNOWN  $5D7B           ; Unknown 5xxx instruction
$CBE    $E828   UNKNOWN  $E828           ; Unknown Exxx instruction
$CC0    $FE17   UNKNOWN  FE17            ; Unknown Fxxx instruction
$CC2    $9B5E   UNKNOWN  $9B5E           ; Unknown 9xxx instruction
$CC4    $76AE   ADD      V6, #AE         ; Add 174 to V6
$CC6    $23A7   CALL     $3A7            ; Call subroutine at 3A7
$CC8    $E6AC   UNKNOWN  $E6AC           ; Unknown Exxx instruction
$CCA    $47FE   SNE      V7, #FE         ; Skip if V7 != 254
$CCC    $2028   CALL     $028            ; Call subroutine at 028
$CCE    $757A   ADD      V5, #7A         ; Add 122 to V5
$CD0    $97E1   UNKNOWN  $97E1           ; Unknown 9xxx instruction
$CD2    $394D   SE       V9, #4D         ; Skip if V9 == 77
$CD4    $4418   SNE      V4, #18         ; Skip if V4 != 24
$CD6    $6249   LD       V2, #49         ; Load 73 into V2
$CD8    $12BA   JP       $2BA            ; Jump to 2BA
$CDA    $5233   UNKNOWN  $5233           ; Unknown 5xxx instruction
$CDC    $FB6B   UNKNOWN  FB6B            ; Unknown Fxxx instruction
$CDE    $7E6B   ADD      VE, #6B         ; Add 107 to VE
$CE0    $2E30   CALL     $E30            ; Call subroutine at E30
$CE2    $873E   SHL      V7              ; V7 <<= 1, VF = MSB
$CE4    $B0FF   JP       V0, $0FF        ; Jump to V0 + 0FF
$CE6    $57F8   UNKNOWN  $57F8           ; Unknown 5xxx instruction
$CE8    $729D   ADD      V2, #9D         ; Add 157 to V2
$CEA    $0772   SYS      $772            ; System call to 772
$CEC    $4954   SNE      V9, #54         ; Skip if V9 != 84
$CEE    $F0CF   UNKNOWN  F0CF            ; Unknown Fxxx instruction
$CF0    $E05B   UNKNOWN  $E05B           ; Unknown Exxx instruction
$CF2    $E9BB   UNKNOWN  $E9BB           ; Unknown Exxx instruction
$CF4    $2897   CALL     $897            ; Call subroutine at 897
$CF6    $17B6   JP       $7B6            ; Jump to 7B6
$CF8    $9B3B   UNKNOWN  $9B3B           ; Unknown 9xxx instruction
$CFA    $A8CB   LD       I, $8CB         ; Load 8CB into I
$CFC    $5944   UNKNOWN  $5944           ; Unknown 5xxx instruction
$CFE    $5FED   UNKNOWN  $5FED           ; Unknown 5xxx instruction
$D00    $E249   UNKNOWN  $E249           ; Unknown Exxx instruction
$D02    $FF5B   UNKNOWN  FF5B            ; Unknown Fxxx instruction
$D04    $E61E   UNKNOWN  $E61E           ; Unknown Exxx instruction
$D06    $BF4D   JP       V0, $F4D        ; Jump to V0 + F4D
$D08    $553D   UNKNOWN  $553D           ; Unknown 5xxx instruction
$D0A    $BD36   JP       V0, $D36        ; Jump to V0 + D36
$D0C    $638E   LD       V3, #8E         ; Load 142 into V3
$D0E    $F83E   UNKNOWN  F83E            ; Unknown Fxxx instruction
$D10    $87F6   SHR      V7              ; V7 >>= 1, VF = LSB
$D12    $CCF1   RND      VC, #F1         ; VC = random & F1
$D14    $244E   CALL     $44E            ; Call subroutine at 44E
$D16    $A92D   LD       I, $92D         ; Load 92D into I
$D18    $B4B3   JP       V0, $4B3        ; Jump to V0 + 4B3
$D1A    $3F59   SE       VF, #59         ; Skip if VF == 89
$D1C    $5EA6   UNKNOWN  $5EA6           ; Unknown 5xxx instruction
$D1E    $8726   SHR      V7              ; V7 >>= 1, VF = LSB
$D20    $50FC   UNKNOWN  $50FC           ; Unknown 5xxx instruction
$D22    $2AC2   CALL     $AC2            ; Call subroutine at AC2
$D24    $CA12   RND      VA, #12         ; VA = random & 12
$D26    $7115   ADD      V1, #15         ; Add 21 to V1
$D28    $D625   DRW      V6, V2, #5      ; Draw 5-byte sprite at V6, V2
$D2A    $5024   UNKNOWN  $5024           ; Unknown 5xxx instruction
$D2C    $A1A8   LD       I, $1A8         ; Load 1A8 into I
$D2E    $0C44   SYS      $C44            ; System call to C44
$D30    $AEAA   LD       I, $EAA         ; Load EAA into I
$D32    $AC7E   LD       I, $C7E         ; Load C7E into I
$D34    $2178   CALL     $178            ; Call subroutine at 178
$D36    $9D57   UNKNOWN  $9D57           ; Unknown 9xxx instruction
$D38    $81F2   AND      V1, VF          ; V1 &= VF
$D3A    $3461   SE       V4, #61         ; Skip if V4 == 97
$D3C    $778C   ADD      V7, #8C         ; Add 140 to V7
$D3E    $AE4F   LD       I, $E4F         ; Load E4F into I
$D40    $FAC3   UNKNOWN  FAC3            ; Unknown Fxxx instruction
$D42    $9B1A   UNKNOWN  $9B1A           ; Unknown 9xxx instruction
$D44    $A8D5   LD       I, $8D5         ; Load 8D5 into I
$D46    $1EF1   JP       $EF1            ; Jump to EF1
$D48    $95EB   UNKNOWN  $95EB           ; Unknown 9xxx instruction
$D4A    $AFC6   LD       I, $FC6         ; Load FC6 into I
$D4C    $FCF5   UNKNOWN  FCF5            ; Unknown Fxxx instruction
$D4E    $1610   JP       $610            ; Jump to 610
$D50    $74D7   ADD      V4, #D7         ; Add 215 to V4
$D52    $B234   JP       V0, $234        ; Jump to V0 + 234
$D54    $9465   UNKNOWN  $9465           ; Unknown 9xxx instruction
$D56    $5BD3   UNKNOWN  $5BD3           ; Unknown 5xxx instruction
$D58    $A5F0   LD       I, $5F0         ; Load 5F0 into I
$D5A    $BBB7   JP       V0, $BB7        ; Jump to V0 + BB7
$D5C    $067C   SYS      $67C            ; System call to 67C
$D5E    $BED0   JP       V0, $ED0        ; Jump to V0 + ED0
$D60    $D0E7   DRW      V0, VE, #7      ; Draw 7-byte sprite at V0, VE
$D62    $E6EA   UNKNOWN  $E6EA           ; Unknown Exxx instruction
$D64    $4F25   SNE      VF, #25         ; Skip if VF != 37
$D66    $1ECA   JP       $ECA            ; Jump to ECA
$D68    $A520   LD       I, $520         ; Load 520 into I
$D6A    $823E   SHL      V2              ; V2 <<= 1, VF = MSB
$D6C    $BF2F   JP       V0, $F2F        ; Jump to V0 + F2F
$D6E    $5020   SE       V0, V2          ; Skip if V0 == V2
$D70    $CE3C   RND      VE, #3C         ; VE = random & 3C
$D72    $A8F2   LD       I, $8F2         ; Load 8F2 into I
$D74    $731B   ADD      V3, #1B         ; Add 27 to V3
$D76    $7CBE   ADD      VC, #BE         ; Add 190 to VC
$D78    $CB2C   RND      VB, #2C         ; VB = random & 2C
$D7A    $0201   SYS      $201            ; System call to 201
$D7C    $C4EA   RND      V4, #EA         ; V4 = random & EA
$D7E    $7305   ADD      V3, #05         ; Add 5 to V3
$D80    $52EA   UNKNOWN  $52EA           ; Unknown 5xxx instruction
$D82    $3B94   SE       VB, #94         ; Skip if VB == 148
$D84    $F6FC   UNKNOWN  F6FC            ; Unknown Fxxx instruction
$D86    $94D3   UNKNOWN  $94D3           ; Unknown 9xxx instruction
$D88    $16B5   JP       $6B5            ; Jump to 6B5
$D8A    $B708   JP       V0, $708        ; Jump to V0 + 708
$D8C    $A271   LD       I, $271         ; Load 271 into I
$D8E    $A391   LD       I, $391         ; Load 391 into I
$D90    $4718   SNE      V7, #18         ; Skip if V7 != 24
$D92    $4552   SNE      V5, #52         ; Skip if V5 != 82
$D94    $3ADE   SE       VA, #DE         ; Skip if VA == 222
$D96    $84E1   OR       V4, VE          ; V4 |= VE
$D98    $50CE   UNKNOWN  $50CE           ; Unknown 5xxx instruction
$D9A    $6FFA   LD       VF, #FA         ; Load 250 into VF
$D9C    $C0A1   RND      V0, #A1         ; V0 = random & A1
$D9E    $8491   OR       V4, V9          ; V4 |= V9
$DA0    $BA7D   JP       V0, $A7D        ; Jump to V0 + A7D
$DA2    $E0C4   UNKNOWN  $E0C4           ; Unknown Exxx instruction
$DA4    $F655   LD       [I], V6         ; Store V0-V6 at I
$DA6    $5B78   UNKNOWN  $5B78           ; Unknown 5xxx instruction
$DA8    $41A6   SNE      V1, #A6         ; Skip if V1 != 166
$DAA    $4043   SNE      V0, #43         ; Skip if V0 != 67
$DAC    $24F5   CALL     $4F5            ; Call subroutine at 4F5
$DAE    $1208   JP       $208            ; Jump to 208
$DB0    $7475   ADD      V4, #75         ; Add 117 to V4
$DB2    $F0A2   UNKNOWN  F0A2            ; Unknown Fxxx instruction
$DB4    $8D96   SHR      VD              ; VD >>= 1, VF = LSB
$DB6    $C227   RND      V2, #27         ; V2 = random & 27
$DB8    $2441   CALL     $441            ; Call subroutine at 441
$DBA    $44E1   SNE      V4, #E1         ; Skip if V4 != 225
$DBC    $3ACA   SE       VA, #CA         ; Skip if VA == 202
$DBE    $5ACB   UNKNOWN  $5ACB           ; Unknown 5xxx instruction
$DC0    $8E4E   SHL      VE              ; VE <<= 1, VF = MSB
$DC2    $D26B   DRW      V2, V6, #B      ; Draw 11-byte sprite at V2, V6
$DC4    $2F50   CALL     $F50            ; Call subroutine at F50
$DC6    $11B0   JP       $1B0            ; Jump to 1B0
$DC8    $7BF2   ADD      VB, #F2         ; Add 242 to VB
$DCA    $91B2   UNKNOWN  $91B2           ; Unknown 9xxx instruction
$DCC    $245D   CALL     $45D            ; Call subroutine at 45D
$DCE    $4413   SNE      V4, #13         ; Skip if V4 != 19
$DD0    $7CB8   ADD      VC, #B8         ; Add 184 to VC
$DD2    $FE73   UNKNOWN  FE73            ; Unknown Fxxx instruction
$DD4    $3B9F   SE       VB, #9F         ; Skip if VB == 159
$DD6    $E504   UNKNOWN  $E504           ; Unknown Exxx instruction
$DD8    $8D29   UNKNOWN  8D29            ; Unknown 8xxx instruction
$DDA    $1010   JP       $010            ; Jump to 010
$DDC    $07AA   SYS      $7AA            ; System call to 7AA
$DDE    $F1EB   UNKNOWN  F1EB            ; Unknown Fxxx instruction
$DE0    $B5E7   JP       V0, $5E7        ; Jump to V0 + 5E7
$DE2    $439B   SNE      V3, #9B         ; Skip if V3 != 155
$DE4    $C9A6   RND      V9, #A6         ; V9 = random & A6
$DE6    $600C   LD       V0, #0C         ; Load 12 into V0
$DE8    $8256   SHR      V2              ; V2 >>= 1, VF = LSB
$DEA    $DDFF   DRW      VD, VF, #F      ; Draw 15-byte sprite at VD, VF
$DEC    $2352   CALL     $352            ; Call subroutine at 352
$DEE    $729E   ADD      V2, #9E         ; Add 158 to V2
$DF0    $05CB   SYS      $5CB            ; System call to 5CB
$DF2    $315C   SE       V1, #5C         ; Skip if V1 == 92
$DF4    $1226   JP       $226            ; Jump to 226
$DF6    $7D61   ADD      VD, #61         ; Add 97 to VD
$DF8    $2E42   CALL     $E42            ; Call subroutine at E42
$DFA    $91F4   UNKNOWN  $91F4           ; Unknown 9xxx instruction
$DFC    $11DC   JP       $1DC            ; Jump to 1DC
$DFE    $A736   LD       I, $736         ; Load 736 into I
$E00    $A913   LD       I, $913         ; Load 913 into I
$E02    $F81B   UNKNOWN  F81B            ; Unknown Fxxx instruction
$E04    $B76B   JP       V0, $76B        ; Jump to V0 + 76B
$E06    $EA2E   UNKNOWN  $EA2E           ; Unknown Exxx instruction
$E08    $30D1   SE       V0, #D1         ; Skip if V0 == 209
$E0A    $A873   LD       I, $873         ; Load 873 into I
$E0C    $2118   CALL     $118            ; Call subroutine at 118
$E0E    $5C44   UNKNOWN  $5C44           ; Unknown 5xxx instruction
$E10    $5DB0   SE       VD, VB          ; Skip if VD == VB
$E12    $1ACD   JP       $ACD            ; Jump to ACD
$E14    $80AF   UNKNOWN  80AF            ; Unknown 8xxx instruction
$E16    $D79A   DRW      V7, V9, #A      ; Draw 10-byte sprite at V7, V9
$E18    $9CD8   UNKNOWN  $9CD8           ; Unknown 9xxx instruction
$E1A    $0AC3   SYS      $AC3            ; System call to AC3
$E1C    $8D52   AND      VD, V5          ; VD &= V5
$E1E    $CF7D   RND      VF, #7D         ; VF = random & 7D
$E20    $890E   SHL      V9              ; V9 <<= 1, VF = MSB
$E22    $FF7E   UNKNOWN  FF7E            ; Unknown Fxxx instruction
$E24    $7DB0   ADD      VD, #B0         ; Add 176 to VD
$E26    $5514   UNKNOWN  $5514           ; Unknown 5xxx instruction
$E28    $E3EB   UNKNOWN  $E3EB           ; Unknown Exxx instruction
$E2A    $CF56   RND      VF, #56         ; VF = random & 56
$E2C    $C258   RND      V2, #58         ; V2 = random & 58
$E2E    $8148   UNKNOWN  8148            ; Unknown 8xxx instruction
$E30    $A28A   LD       I, $28A         ; Load 28A into I
$E32    $D5AA   DRW      V5, VA, #A      ; Draw 10-byte sprite at V5, VA
$E34    $E77A   UNKNOWN  $E77A           ; Unknown Exxx instruction
$E36    $9533   UNKNOWN  $9533           ; Unknown 9xxx instruction
$E38    $BCD5   JP       V0, $CD5        ; Jump to V0 + CD5
$E3A    $A1EC   LD       I, $1EC         ; Load 1EC into I
$E3C    $7030   ADD      V0, #30         ; Add 48 to V0
$E3E    $F2B0   UNKNOWN  F2B0            ; Unknown Fxxx instruction
$E40    $B87F   JP       V0, $87F        ; Jump to V0 + 87F
$E42    $179E   JP       $79E            ; Jump to 79E
$E44    $09F4   SYS      $9F4            ; System call to 9F4
$E46    $D959   DRW      V9, V5, #9      ; Draw 9-byte sprite at V9, V5
$E48    $A5BC   LD       I, $5BC         ; Load 5BC into I
$E4A    $8DCE   SHL      VD              ; VD <<= 1, VF = MSB
$E4C    $2E8C   CALL     $E8C            ; Call subroutine at E8C
$E4E    $9838   UNKNOWN  $9838           ; Unknown 9xxx instruction
$E50    $C300   RND      V3, #00         ; V3 = random & 00
$E52    $0EB6   SYS      $EB6            ; System call to EB6
$E54    $5D8A   UNKNOWN  $5D8A           ; Unknown 5xxx instruction
$E56    $5129   UNKNOWN  $5129           ; Unknown 5xxx instruction
$E58    $1378   JP       $378            ; Jump to 378
$E5A    $5694   UNKNOWN  $5694           ; Unknown 5xxx instruction
$E5C    $84A2   AND      V4, VA          ; V4 &= VA
$E5E    $97C8   UNKNOWN  $97C8           ; Unknown 9xxx instruction
$E60    $0DBB   SYS      $DBB            ; System call to DBB
$E62    $ED82   UNKNOWN  $ED82           ; Unknown Exxx instruction
$E64    $EB92   UNKNOWN  $EB92           ; Unknown Exxx instruction
$E66    $1744   JP       $744            ; Jump to 744
$E68    $E139   UNKNOWN  $E139           ; Unknown Exxx instruction
$E6A    $A553   LD       I, $553         ; Load 553 into I
$E6C    $3CBA   SE       VC, #BA         ; Skip if VC == 186
$E6E    $022C   SYS      $22C            ; System call to 22C
$E70    $161E   JP       $61E            ; Jump to 61E
$E72    $661F   LD       V6, #1F         ; Load 31 into V6
$E74    $B771   JP       V0, $771        ; Jump to V0 + 771
$E76    $FF0A   LD       VF, K           ; Wait for key press, store in VF
$E78    $B84A   JP       V0, $84A        ; Jump to V0 + 84A
$E7A    $3C05   SE       VC, #05         ; Skip if VC == 5
$E7C    $B78A   JP       V0, $78A        ; Jump to V0 + 78A
$E7E    $6B38   LD       VB, #38         ; Load 56 into VB
$E80    $0B79   SYS      $B79            ; System call to B79
$E82    $29E1   CALL     $9E1            ; Call subroutine at 9E1
$E84    $8251   OR       V2, V5          ; V2 |= V5
$E86    $A0DA   LD       I, $0DA         ; Load 0DA into I
$E88    $B82F   JP       V0, $82F        ; Jump to V0 + 82F
$E8A    $3C56   SE       VC, #56         ; Skip if VC == 86
$E8C    $95B5   UNKNOWN  $95B5           ; Unknown 9xxx instruction
$E8E    $90FF   UNKNOWN  $90FF           ; Unknown 9xxx instruction
$E90    $CC7D   RND      VC, #7D         ; VC = random & 7D
$E92    $4104   SNE      V1, #04         ; Skip if V1 != 4
$E94    $6D03   LD       VD, #03         ; Load 3 into VD
$E96    $204E   CALL     $04E            ; Call subroutine at 04E
$E98    $FF95   UNKNOWN  FF95            ; Unknown Fxxx instruction
$E9A    $2D15   CALL     $D15            ; Call subroutine at D15
$E9C    $772C   ADD      V7, #2C         ; Add 44 to V7
$E9E    $27A8   CALL     $7A8            ; Call subroutine at 7A8
$EA0    $F036   UNKNOWN  F036            ; Unknown Fxxx instruction
$EA2    $CD75   RND      VD, #75         ; VD = random & 75
$EA4    $D83B   DRW      V8, V3, #B      ; Draw 11-byte sprite at V8, V3
$EA6    $C883   RND      V8, #83         ; V8 = random & 83
$EA8    $0EFD   SYS      $EFD            ; System call to EFD
$EAA    $329E   SE       V2, #9E         ; Skip if V2 == 158
$EAC    $5AEE   UNKNOWN  $5AEE           ; Unknown 5xxx instruction
$EAE    $91B4   UNKNOWN  $91B4           ; Unknown 9xxx instruction
$EB0    $F760   UNKNOWN  F760            ; Unknown Fxxx instruction
$EB2    $7BAA   ADD      VB, #AA         ; Add 170 to VB
$EB4    $BF53   JP       V0, $F53        ; Jump to V0 + F53
$EB6    $4C8D   SNE      VC, #8D         ; Skip if VC != 141
$EB8    $BC62   JP       V0, $C62        ; Jump to V0 + C62
$EBA    $7C06   ADD      VC, #06         ; Add 6 to VC
$EBC    $BD25   JP       V0, $D25        ; Jump to V0 + D25
$EBE    $B7A6   JP       V0, $7A6        ; Jump to V0 + 7A6
$EC0    $CBF5   RND      VB, #F5         ; VB = random & F5
$EC2    $B5A9   JP       V0, $5A9        ; Jump to V0 + 5A9
$EC4    $3BBE   SE       VB, #BE         ; Skip if VB == 190
$EC6    $0AC1   SYS      $AC1            ; System call to AC1
$EC8    $F85B   UNKNOWN  F85B            ; Unknown Fxxx instruction
$ECA    $5ADC   UNKNOWN  $5ADC           ; Unknown 5xxx instruction
$ECC    $69E0   LD       V9, #E0         ; Load 224 into V9
$ECE    $E8F9   UNKNOWN  $E8F9           ; Unknown Exxx instruction
$ED0    $E891   UNKNOWN  $E891           ; Unknown Exxx instruction
$ED2    $0080   SYS      $080            ; System call to 080
$ED4    $8446   SHR      V4              ; V4 >>= 1, VF = LSB
$ED6    $DC7A   DRW      VC, V7, #A      ; Draw 10-byte sprite at VC, V7
$ED8    $1647   JP       $647            ; Jump to 647
$EDA    $CFEF   RND      VF, #EF         ; VF = random & EF
$EDC    $5CFB   UNKNOWN  $5CFB           ; Unknown 5xxx instruction
$EDE    $4A20   SNE      VA, #20         ; Skip if VA != 32
$EE0    $1BD4   JP       $BD4            ; Jump to BD4
$EE2    $674C   LD       V7, #4C         ; Load 76 into V7
$EE4    $48C0   SNE      V8, #C0         ; Skip if V8 != 192
$EE6    $7402   ADD      V4, #02         ; Add 2 to V4
$EE8    $8E9B   UNKNOWN  8E9B            ; Unknown 8xxx instruction
$EEA    $E887   UNKNOWN  $E887           ; Unknown Exxx instruction
$EEC    $3C6F   SE       VC, #6F         ; Skip if VC == 111
$EEE    $4D0B   SNE      VD, #0B         ; Skip if VD != 11
$EF0    $3DB5   SE       VD, #B5         ; Skip if VD == 181
$EF2    $EB3F   UNKNOWN  $EB3F           ; Unknown Exxx instruction
$EF4    $173E   JP       $73E            ; Jump to 73E
$EF6    $8925   SUB      V9, V2          ; V9 -= V2, VF = !borrow
$EF8    $38DE   SE       V8, #DE         ; Skip if V8 == 222
$EFA    $F1F9   UNKNOWN  F1F9            ; Unknown Fxxx instruction
$EFC    $0C3F   SYS      $C3F            ; System call to C3F
$EFE    $41D7   SNE      V1, #D7         ; Skip if V1 != 215
$F00    $B07B   JP       V0, $07B        ; Jump to V0 + 07B
$F02    $C977   RND      V9, #77         ; V9 = random & 77
$F04    $C1F7   RND      V1, #F7         ; V1 = random & F7
$F06    $0F5D   SYS      $F5D            ; System call to F5D
$F08    $9DFF   UNKNOWN  $9DFF           ; Unknown 9xxx instruction
$F0A    $99D6   UNKNOWN  $99D6           ; Unknown 9xxx instruction
$F0C    $28F4   CALL     $8F4            ; Call subroutine at 8F4
$F0E    $E873   UNKNOWN  $E873           ; Unknown Exxx instruction
$F10    $0DF0   SYS      $DF0            ; System call to DF0
$F12    $9719   UNKNOWN  $9719           ; Unknown 9xxx instruction
$F14    $1BC0   JP       $BC0            ; Jump to BC0
$F16    $65B4   LD       V5, #B4         ; Load 180 into V5
$F18    $6E6B   LD       VE, #6B         ; Load 107 into VE
$F1A    $E39C   UNKNOWN  $E39C           ; Unknown Exxx instruction
$F1C    $563D   UNKNOWN  $563D           ; Unknown 5xxx instruction
$F1E    $4AF9   SNE      VA, #F9         ; Skip if VA != 249
$F20    $E024   UNKNOWN  $E024           ; Unknown Exxx instruction
$F22    $8F41   OR       VF, V4          ; VF |= V4
$F24    $06FE   SYS      $6FE            ; System call to 6FE
$F26    $EB46   UNKNOWN  $EB46           ; Unknown Exxx instruction
$F28    $E4F0   UNKNOWN  $E4F0           ; Unknown Exxx instruction
$F2A    $477A   SNE      V7, #7A         ; Skip if V7 != 122
$F2C    $331C   SE       V3, #1C         ; Skip if V3 == 28
$F2E    $0124   SYS      $124            ; System call to 124
$F30    $CB4B   RND      VB, #4B         ; VB = random & 4B
$F32    $20E6   CALL     $0E6            ; Call subroutine at 0E6
$F34    $13AD   JP       $3AD            ; Jump to 3AD
$F36    $35DB   SE       V5, #DB         ; Skip if V5 == 219
$F38    $88BD   UNKNOWN  88BD            ; Unknown 8xxx instruction
$F3A    $BDAE   JP       V0, $DAE        ; Jump to V0 + DAE
$F3C    $E15C   UNKNOWN  $E15C           ; Unknown Exxx instruction
$F3E    $9581   UNKNOWN  $9581           ; Unknown 9xxx instruction
$F40    $C538   RND      V5, #38         ; V5 = random & 38
$F42    $E47E   UNKNOWN  $E47E           ; Unknown Exxx instruction
$F44    $613C   LD       V1, #3C         ; Load 60 into V1
$F46    $F290   UNKNOWN  F290            ; Unknown Fxxx instruction
$F48    $1791   JP       $791            ; Jump to 791
$F4A    $201B   CALL     $01B            ; Call subroutine at 01B
$F4C    $7528   ADD      V5, #28         ; Add 40 to V5
$F4E    $A672   LD       I, $672         ; Load 672 into I
$F50    $970E   UNKNOWN  $970E           ; Unknown 9xxx instruction
$F52    $E8F7   UNKNOWN  $E8F7           ; Unknown Exxx instruction
$F54    $7B80   ADD      VB, #80         ; Add 128 to VB
$F56    $2B01   CALL     $B01            ; Call subroutine at B01
$F58    $0600   SYS      $600            ; System call to 600
$F5A    $3612   SE       V6, #12         ; Skip if V6 == 18
$F5C    $3382   SE       V3, #82         ; Skip if V3 == 130
$F5E    $5FEB   UNKNOWN  $5FEB           ; Unknown 5xxx instruction
$F60    $C3AE   RND      V3, #AE         ; V3 = random & AE
$F62    $24D7   CALL     $4D7            ; Call subroutine at 4D7
$F64    $3553   SE       V5, #53         ; Skip if V5 == 83
$F66    $BF28   JP       V0, $F28        ; Jump to V0 + F28
$F68    $DAF6   DRW      VA, VF, #6      ; Draw 6-byte sprite at VA, VF
$F6A    $F9BF   UNKNOWN  F9BF            ; Unknown Fxxx instruction
$F6C    $891D   UNKNOWN  891D            ; Unknown 8xxx instruction
$F6E    $88E1   OR       V8, VE          ; V8 |= VE
$F70    $CABE   RND      VA, #BE         ; VA = random & BE
$F72    $279B   CALL     $79B            ; Call subroutine at 79B
$F74    $A033   LD       I, $033         ; Load 033 into I
$F76    $63D9   LD       V3, #D9         ; Load 217 into V3
$F78    $96E0   SNE      V6, VE          ; Skip if V6 != VE
$F7A    $F160   UNKNOWN  F160            ; Unknown Fxxx instruction
$F7C    $4501   SNE      V5, #01         ; Skip if V5 != 1
$F7E    $29E4   CALL     $9E4            ; Call subroutine at 9E4
$F80    $F8CC   UNKNOWN  F8CC            ; Unknown Fxxx instruction
$F82    $8AFD   UNKNOWN  8AFD            ; Unknown 8xxx instruction
$F84    $0A4E   SYS      $A4E            ; System call to A4E
$F86    $1398   JP       $398            ; Jump to 398
$F88    $F3DD   UNKNOWN  F3DD            ; Unknown Fxxx instruction
$F8A    $49C4   SNE      V9, #C4         ; Skip if V9 != 196
$F8C    $3DF8   SE       VD, #F8         ; Skip if VD == 248
$F8E    $76C1   ADD      V6, #C1         ; Add 193 to V6
$F90    $A218   LD       I, $218         ; Load 218 into I
$F92    $D698   DRW      V6, V9, #8      ; Draw 8-byte sprite at V6, V9
$F94    $8DA3   XOR      VD, VA          ; VD ^= VA
$F96    $96B3   UNKNOWN  $96B3           ; Unknown 9xxx instruction
$F98    $6982   LD       V9, #82         ; Load 130 into V9
$F9A    $3AE3   SE       VA, #E3         ; Skip if VA == 227
$F9C    $5BE9   UNKNOWN  $5BE9           ; Unknown 5xxx instruction
$F9E    $28A1   CALL     $8A1            ; Call subroutine at 8A1
$FA0    $5269   UNKNOWN  $5269           ; Unknown 5xxx instruction
$FA2    $15DF   JP       $5DF            ; Jump to 5DF
$FA4    $CB73   RND      VB, #73         ; VB = random & 73
$FA6    $C86A   RND      V8, #6A         ; V8 = random & 6A
$FA8    $32B5   SE       V2, #B5         ; Skip if V2 == 181
$FAA    $3FE9   SE       VF, #E9         ; Skip if VF == 233
$FAC    $D445   DRW      V4, V4, #5      ; Draw 5-byte sprite at V4, V4
$FAE    $E8FC   UNKNOWN  $E8FC           ; Unknown Exxx instruction
$FB0    $B981   JP       V0, $981        ; Jump to V0 + 981
$FB2    $E84B   UNKNOWN  $E84B           ; Unknown Exxx instruction
$FB4    $B434   JP       V0, $434        ; Jump to V0 + 434
$FB6    $4C40   SNE      VC, #40         ; Skip if VC != 64
$FB8    $8AAB   UNKNOWN  8AAB            ; Unknown 8xxx instruction
$FBA    $250A   CALL     $50A            ; Call subroutine at 50A
$FBC    $BB43   JP       V0, $B43        ; Jump to V0 + B43
$FBE    $F5C5   UNKNOWN  F5C5            ; Unknown Fxxx instruction
$FC0    $7582   ADD      V5, #82         ; Add 130 to V5
$FC2    $9E9C   UNKNOWN  $9E9C           ; Unknown 9xxx instruction
$FC4    $046F   SYS      $46F            ; System call to 46F
$FC6    $9624   UNKNOWN  $9624           ; Unknown 9xxx instruction
$FC8    $4108   SNE      V1, #08         ; Skip if V1 != 8
$FCA    $86CF   UNKNOWN  86CF            ; Unknown 8xxx instruction
$FCC    $B809   JP       V0, $809        ; Jump to V0 + 809
$FCE    $9FEB   UNKNOWN  $9FEB           ; Unknown 9xxx instruction
$FD0    $04E9   SYS      $4E9            ; System call to 4E9
$FD2    $F9E4   UNKNOWN  F9E4            ; Unknown Fxxx instruction
$FD4    $C7B6   RND      V7, #B6         ; V7 = random & B6
$FD6    $45DC   SNE      V5, #DC         ; Skip if V5 != 220
$FD8    $E82C   UNKNOWN  $E82C           ; Unknown Exxx instruction
$FDA    $E40B   UNKNOWN  $E40B           ; Unknown Exxx instruction
$FDC    $00C4   SYS      $0C4            ; System call to 0C4
$FDE    $1E2D   JP       $E2D            ; Jump to E2D
$FE0    $EB87   UNKNOWN  $EB87           ; Unknown Exxx instruction
$FE2    $C0A9   RND      V0, #A9         ; V0 = random & A9
$FE4    $FCD0   UNKNOWN  FCD0            ; Unknown Fxxx instruction
$FE6    $8C67   SUBN     VC, V6          ; VC = V6 - VC, VF = !borrow
$FE8    $4BFA   SNE      VB, #FA         ; Skip if VB != 250
$FEA    $939E   UNKNOWN  $939E           ; Unknown 9xxx instruction
$FEC    $3ADC   SE       VA, #DC         ; Skip if VA == 220
$FEE    $1B26   JP       $B26            ; Jump to B26
$FF0    $9443   UNKNOWN  $9443           ; Unknown 9xxx instruction
$FF2    $2937   CALL     $937            ; Call subroutine at 937
$FF4    $9208   UNKNOWN  $9208           ; Unknown 9xxx instruction
$FF6    $FED3   UNKNOWN  FED3            ; Unknown Fxxx instruction
$FF8    $8CB8   UNKNOWN  8CB8            ; Unknown 8xxx instruction
$FFA    $09A1   SYS      $9A1            ; System call to 9A1
$FFC    $4A65   SNE      VA, #65         ; Skip if VA != 101
$FFE    $50E1   UNKNOWN  $50E1           ; Unknown 5xxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 483 (27.0%)
  JP      : 219 (12.2%)
  LD      : 217 (12.1%)
  SNE     : 140 ( 7.8%)
  ADD     : 134 ( 7.5%)
  CALL    : 120 ( 6.7%)
  SE      : 118 ( 6.6%)
  RND     : 112 ( 6.2%)
  SYS     : 106 ( 5.9%)
  DRW     :  91 ( 5.1%)
  AND     :  11 ( 0.6%)
  OR      :   9 ( 0.5%)
  SHL     :   7 ( 0.4%)
  SUBN    :   7 ( 0.4%)
  SHR     :   7 ( 0.4%)
  SUB     :   5 ( 0.3%)
  XOR     :   5 ( 0.3%)
  RET     :   1 ( 0.1%)

Memory Operations: 351 (19.6%)
Arithmetic Operations: 171 (9.5%)
