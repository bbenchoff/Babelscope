
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B6903D01_I33634_C3001_4e2053b1f622.ch8
ROM Size: 3584 bytes
Instructions Found: 1780

DISCOVERY INFORMATION:
Batch: 6903
Instance: 33634
Direction: ascending
Final Array: [0, 0, 0, 0, 0, 0, 0, 215]
Operations: R:0 W:4 C:174 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 101
Sort Array References:
  $226: LD I, $CCD ; Load CCD into I
  $25C: LD I, $0EF ; Load 0EF into I
  $288: LD I, $2C7 ; Load 2C7 into I
  $2C2: LD I, $C28 ; Load C28 into I
  $2C8: LD I, $754 ; Load 754 into I
  $2F6: LD I, $D33 ; Load D33 into I
  $310: LD I, $7DC ; Load 7DC into I
  $358: LD I, $853 ; Load 853 into I
  $3BA: LD I, $116 ; Load 116 into I
  $3DC: LD I, $F8B ; Load F8B into I
  $40E: LD I, $2A2 ; Load 2A2 into I
  $434: LD I, $76F ; Load 76F into I
  $448: LD I, $ADB ; Load ADB into I
  $45A: LD I, $CCE ; Load CCE into I
  $482: LD I, $BBC ; Load BBC into I
  $484: LD I, $F3D ; Load F3D into I
  $49E: LD I, $B08 ; Load B08 into I
  $4B0: LD I, $BEB ; Load BEB into I
  $4D8: LD I, $C1A ; Load C1A into I
  $4EE: LD I, $E15 ; Load E15 into I
  $524: LD I, $965 ; Load 965 into I
  $54E: LD I, $59D ; Load 59D into I
  $55E: LD I, $46B ; Load 46B into I
  $5CE: LD I, $036 ; Load 036 into I
  $5FC: LD I, $D0D ; Load D0D into I
  $618: LD I, $ACB ; Load ACB into I
  $62A: LD I, $CB2 ; Load CB2 into I
  $640: LD I, $8E8 ; Load 8E8 into I
  $654: LD I, $71F ; Load 71F into I
  $67E: LD I, $FAE ; Load FAE into I
  $6A8: LD I, $572 ; Load 572 into I
  $6FE: LD I, $651 ; Load 651 into I
  $720: LD I, $36C ; Load 36C into I
  $754: LD I, $B8B ; Load B8B into I
  $758: LD I, $9D1 ; Load 9D1 into I
  $75C: LD I, $092 ; Load 092 into I
  $760: LD I, $C24 ; Load C24 into I
  $77A: LD I, $CF7 ; Load CF7 into I
  $784: LD I, $821 ; Load 821 into I
  $7A0: LD I, $02E ; Load 02E into I
  $7A4: LD I, $058 ; Load 058 into I
  $7A8: LD I, $4BF ; Load 4BF into I
  $7FA: LD I, $07E ; Load 07E into I
  $806: LD I, $C68 ; Load C68 into I
  $816: LD I, $303 ; Load 303 into I
  $832: LD I, $52A ; Load 52A into I
  $848: LD I, $8E6 ; Load 8E6 into I
  $868: LD I, $373 ; Load 373 into I
  $8BA: LD I, $3DF ; Load 3DF into I
  $8FC: LD I, $C10 ; Load C10 into I
  $8FE: LD I, $7F2 ; Load 7F2 into I
  $90A: LD I, $A9B ; Load A9B into I
  $920: LD I, $94A ; Load 94A into I
  $926: LD I, $7DB ; Load 7DB into I
  $928: LD I, $E4C ; Load E4C into I
  $92A: LD I, $C4D ; Load C4D into I
  $94E: LD I, $212 ; Load 212 into I
  $958: LD I, $669 ; Load 669 into I
  $960: LD I, $E11 ; Load E11 into I
  $976: LD I, $C75 ; Load C75 into I
  $986: LD I, $371 ; Load 371 into I
  $996: LD I, $0EF ; Load 0EF into I
  $9A4: LD I, $054 ; Load 054 into I
  $9BC: LD I, $96D ; Load 96D into I
  $9C6: LD I, $ED1 ; Load ED1 into I
  $9CA: LD I, $65D ; Load 65D into I
  $9F4: LD I, $D94 ; Load D94 into I
  $A1C: LD I, $AC6 ; Load AC6 into I
  $A58: LD I, $9CF ; Load 9CF into I
  $A6C: LD I, $A7C ; Load A7C into I
  $A8C: LD I, $CE0 ; Load CE0 into I
  $AC8: LD I, $2D0 ; Load 2D0 into I
  $B8A: LD I, $87B ; Load 87B into I
  $B8E: LD I, $AA4 ; Load AA4 into I
  $B9C: LD I, $9B2 ; Load 9B2 into I
  $BCC: LD I, $2E1 ; Load 2E1 into I
  $BF0: LD I, $278 ; Load 278 into I
  $BF8: LD I, $EAF ; Load EAF into I
  $C1A: LD I, $063 ; Load 063 into I
  $CC4: LD I, $A32 ; Load A32 into I
  $CCC: LD I, $0A2 ; Load 0A2 into I
  $CD0: LD I, $A71 ; Load A71 into I
  $CDA: LD I, $3F0 ; Load 3F0 into I
  $CDE: LD I, $666 ; Load 666 into I
  $D42: LD I, $CE1 ; Load CE1 into I
  $DA2: LD I, $A3B ; Load A3B into I
  $DAC: LD I, $FC6 ; Load FC6 into I
  $DE4: LD I, $705 ; Load 705 into I
  $E28: LD I, $448 ; Load 448 into I
  $E2A: LD I, $CF8 ; Load CF8 into I
  $E44: LD I, $309 ; Load 309 into I
  $E52: LD I, $1E2 ; Load 1E2 into I
  $EB4: LD I, $0B6 ; Load 0B6 into I
  $ED4: LD I, $054 ; Load 054 into I
  $F04: LD I, $97C ; Load 97C into I
  $F06: LD I, $5AF ; Load 5AF into I
  $F56: LD I, $D94 ; Load D94 into I
  $F60: LD I, $528 ; Load 528 into I
  $F92: LD I, $901 ; Load 901 into I
  $FC6: LD I, $D32 ; Load D32 into I
  $FEE: LD I, $BD1 ; Load BD1 into I

CONTROL FLOW ANALYSIS:
Jumps: 195
Calls: 121
Branches: 249
Loops: 108
Loop Structures:
  $20E -> $013 (backward jump)
  $33C -> $1A8 (backward jump)
  $39E -> $27F (backward jump)
  $420 -> $3F3 (backward jump)
  $424 -> $323 (backward jump)
  $456 -> $02D (backward jump)
  $4D4 -> $4A0 (backward jump)
  $508 -> $278 (backward jump)
  $55C -> $28F (backward jump)
  $56E -> $4E0 (backward jump)
  $5C8 -> $499 (backward jump)
  $5CA -> $3B8 (backward jump)
  $68A -> $595 (backward jump)
  $69E -> $4B4 (backward jump)
  $6CE -> $0CB (backward jump)
  $6F6 -> $345 (backward jump)
  $726 -> $657 (backward jump)
  $73E -> $2C4 (backward jump)
  $746 -> $551 (backward jump)
  $772 -> $209 (backward jump)
  $77C -> $66E (backward jump)
  $7D4 -> $47A (backward jump)
  $830 -> $76D (backward jump)
  $836 -> $2DE (backward jump)
  $854 -> $369 (backward jump)
  $8BC -> $207 (backward jump)
  $8C0 -> $5AE (backward jump)
  $8FA -> $8DB (backward jump)
  $93A -> $20E (backward jump)
  $944 -> $48C (backward jump)
  $956 -> $5B8 (backward jump)
  $95A -> $4A8 (backward jump)
  $96C -> $73A (backward jump)
  $980 -> $3AD (backward jump)
  $98C -> $6B5 (backward jump)
  $A1A -> $1F1 (backward jump)
  $A4A -> $A1E (backward jump)
  $A54 -> $313 (backward jump)
  $A7E -> $5CE (backward jump)
  $AA4 -> $003 (backward jump)
  $AA8 -> $3A5 (backward jump)
  $AAC -> $173 (backward jump)
  $ACE -> $984 (backward jump)
  $AD2 -> $A4E (backward jump)
  $AE8 -> $2B9 (backward jump)
  $AF6 -> $1FD (backward jump)
  $AFE -> $141 (backward jump)
  $B3C -> $6AF (backward jump)
  $B42 -> $02B (backward jump)
  $B44 -> $172 (backward jump)
  $B56 -> $1FE (backward jump)
  $B60 -> $B50 (backward jump)
  $B98 -> $655 (backward jump)
  $BB6 -> $1F8 (backward jump)
  $BBE -> $21A (backward jump)
  $BCA -> $025 (backward jump)
  $BFE -> $560 (backward jump)
  $C02 -> $294 (backward jump)
  $C24 -> $67C (backward jump)
  $C2E -> $C22 (backward jump)
  $C3A -> $74A (backward jump)
  $C72 -> $68E (backward jump)
  $C8C -> $359 (backward jump)
  $CA8 -> $3F1 (backward jump)
  $CBA -> $0BD (backward jump)
  $CBC -> $7B5 (backward jump)
  $CC0 -> $63D (backward jump)
  $CC6 -> $856 (backward jump)
  $CE2 -> $AB5 (backward jump)
  $CF8 -> $C0B (backward jump)
  $D16 -> $3D2 (backward jump)
  $D2E -> $785 (backward jump)
  $D4E -> $32A (backward jump)
  $D84 -> $B39 (backward jump)
  $D86 -> $4EE (backward jump)
  $D88 -> $586 (backward jump)
  $DC0 -> $665 (backward jump)
  $DCA -> $B1D (backward jump)
  $DF4 -> $455 (backward jump)
  $E18 -> $C74 (backward jump)
  $E3A -> $84F (backward jump)
  $E3C -> $61D (backward jump)
  $E60 -> $DED (backward jump)
  $E92 -> $1CC (backward jump)
  $E9C -> $095 (backward jump)
  $E9E -> $E81 (backward jump)
  $EAA -> $69A (backward jump)
  $EB8 -> $0BE (backward jump)
  $ECC -> $301 (backward jump)
  $F00 -> $520 (backward jump)
  $F0A -> $C66 (backward jump)
  $F0C -> $2F1 (backward jump)
  $F0E -> $58B (backward jump)
  $F34 -> $75D (backward jump)
  $F36 -> $22A (backward jump)
  $F38 -> $80A (backward jump)
  $F3C -> $EC2 (backward jump)
  $F52 -> $662 (backward jump)
  $F6C -> $E5B (backward jump)
  $F7C -> $722 (backward jump)
  $F80 -> $0CA (backward jump)
  $F8A -> $25E (backward jump)
  $F8E -> $D91 (backward jump)
  $F94 -> $E84 (backward jump)
  $FA6 -> $B8D (backward jump)
  $FB0 -> $ED9 (backward jump)
  $FBA -> $F7B (backward jump)
  $FC0 -> $602 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $36A8   SE       V6, #A8         ; Skip if V6 == 168
$202    $6816   LD       V8, #16         ; Load 22 into V8
$204    $30C5   SE       V0, #C5         ; Skip if V0 == 197
$206    $3AF3   SE       VA, #F3         ; Skip if VA == 243
$208    $37AF   SE       V7, #AF         ; Skip if V7 == 175
$20A    $F2AA   UNKNOWN  F2AA            ; Unknown Fxxx instruction
$20C    $861C   UNKNOWN  861C            ; Unknown 8xxx instruction
$20E    $B013   JP       V0, $013        ; Jump to V0 + 013
$210    $80FF   UNKNOWN  80FF            ; Unknown 8xxx instruction
$212    $BEDA   JP       V0, $EDA        ; Jump to V0 + EDA
$214    $4288   SNE      V2, #88         ; Skip if V2 != 136
$216    $430B   SNE      V3, #0B         ; Skip if V3 != 11
$218    $883D   UNKNOWN  883D            ; Unknown 8xxx instruction
$21A    $1D59   JP       $D59            ; Jump to D59
$21C    $DFD3   DRW      VF, VD, #3      ; Draw 3-byte sprite at VF, VD
$21E    $0F9D   SYS      $F9D            ; System call to F9D
$220    $3B47   SE       VB, #47         ; Skip if VB == 71
$222    $E33B   UNKNOWN  $E33B           ; Unknown Exxx instruction
$224    $918D   UNKNOWN  $918D           ; Unknown 9xxx instruction
$226    $ACCD   LD       I, $CCD         ; Load CCD into I
$228    $46C7   SNE      V6, #C7         ; Skip if V6 != 199
$22A    $8863   XOR      V8, V6          ; V8 ^= V6
$22C    $CD1D   RND      VD, #1D         ; VD = random & 1D
$22E    $F1A4   UNKNOWN  F1A4            ; Unknown Fxxx instruction
$230    $D89C   DRW      V8, V9, #C      ; Draw 12-byte sprite at V8, V9
$232    $B70F   JP       V0, $70F        ; Jump to V0 + 70F
$234    $28DD   CALL     $8DD            ; Call subroutine at 8DD
$236    $7724   ADD      V7, #24         ; Add 36 to V7
$238    $2800   CALL     $800            ; Call subroutine at 800
$23A    $13A4   JP       $3A4            ; Jump to 3A4
$23C    $C939   RND      V9, #39         ; V9 = random & 39
$23E    $3A60   SE       VA, #60         ; Skip if VA == 96
$240    $4509   SNE      V5, #09         ; Skip if V5 != 9
$242    $818E   SHL      V1              ; V1 <<= 1, VF = MSB
$244    $461C   SNE      V6, #1C         ; Skip if V6 != 28
$246    $8975   SUB      V9, V7          ; V9 -= V7, VF = !borrow
$248    $74D2   ADD      V4, #D2         ; Add 210 to V4
$24A    $3B36   SE       VB, #36         ; Skip if VB == 54
$24C    $60D6   LD       V0, #D6         ; Load 214 into V0
$24E    $E20A   UNKNOWN  $E20A           ; Unknown Exxx instruction
$250    $9E68   UNKNOWN  $9E68           ; Unknown 9xxx instruction
$252    $755D   ADD      V5, #5D         ; Add 93 to V5
$254    $524A   UNKNOWN  $524A           ; Unknown 5xxx instruction
$256    $620A   LD       V2, #0A         ; Load 10 into V2
$258    $23F1   CALL     $3F1            ; Call subroutine at 3F1
$25A    $1866   JP       $866            ; Jump to 866
$25C    $A0EF   LD       I, $0EF         ; Load 0EF into I
$25E    $6C5B   LD       VC, #5B         ; Load 91 into VC
$260    $8E0D   UNKNOWN  8E0D            ; Unknown 8xxx instruction
$262    $D6EA   DRW      V6, VE, #A      ; Draw 10-byte sprite at V6, VE
$264    $BD19   JP       V0, $D19        ; Jump to V0 + D19
$266    $CED7   RND      VE, #D7         ; VE = random & D7
$268    $37F8   SE       V7, #F8         ; Skip if V7 == 248
$26A    $8A8C   UNKNOWN  8A8C            ; Unknown 8xxx instruction
$26C    $D2FC   DRW      V2, VF, #C      ; Draw 12-byte sprite at V2, VF
$26E    $6BEC   LD       VB, #EC         ; Load 236 into VB
$270    $CE7F   RND      VE, #7F         ; VE = random & 7F
$272    $F64C   UNKNOWN  F64C            ; Unknown Fxxx instruction
$274    $4C10   SNE      VC, #10         ; Skip if VC != 16
$276    $0C09   SYS      $C09            ; System call to C09
$278    $3674   SE       V6, #74         ; Skip if V6 == 116
$27A    $7DB8   ADD      VD, #B8         ; Add 184 to VD
$27C    $2BA5   CALL     $BA5            ; Call subroutine at BA5
$27E    $E725   UNKNOWN  $E725           ; Unknown Exxx instruction
$280    $93E9   UNKNOWN  $93E9           ; Unknown 9xxx instruction
$282    $4124   SNE      V1, #24         ; Skip if V1 != 36
$284    $E9CE   UNKNOWN  $E9CE           ; Unknown Exxx instruction
$286    $EE97   UNKNOWN  $EE97           ; Unknown Exxx instruction
$288    $A2C7   LD       I, $2C7         ; Load 2C7 into I
$28A    $B566   JP       V0, $566        ; Jump to V0 + 566
$28C    $84F3   XOR      V4, VF          ; V4 ^= VF
$28E    $B763   JP       V0, $763        ; Jump to V0 + 763
$290    $5CA0   SE       VC, VA          ; Skip if VC == VA
$292    $F9A8   UNKNOWN  F9A8            ; Unknown Fxxx instruction
$294    $9FC6   UNKNOWN  $9FC6           ; Unknown 9xxx instruction
$296    $49DE   SNE      V9, #DE         ; Skip if V9 != 222
$298    $0E76   SYS      $E76            ; System call to E76
$29A    $2E4E   CALL     $E4E            ; Call subroutine at E4E
$29C    $0467   SYS      $467            ; System call to 467
$29E    $CDFC   RND      VD, #FC         ; VD = random & FC
$2A0    $F4D1   UNKNOWN  F4D1            ; Unknown Fxxx instruction
$2A2    $9666   UNKNOWN  $9666           ; Unknown 9xxx instruction
$2A4    $7E97   ADD      VE, #97         ; Add 151 to VE
$2A6    $5AE9   UNKNOWN  $5AE9           ; Unknown 5xxx instruction
$2A8    $6BF9   LD       VB, #F9         ; Load 249 into VB
$2AA    $2319   CALL     $319            ; Call subroutine at 319
$2AC    $8DCC   UNKNOWN  8DCC            ; Unknown 8xxx instruction
$2AE    $444C   SNE      V4, #4C         ; Skip if V4 != 76
$2B0    $2515   CALL     $515            ; Call subroutine at 515
$2B2    $25BA   CALL     $5BA            ; Call subroutine at 5BA
$2B4    $2158   CALL     $158            ; Call subroutine at 158
$2B6    $71BB   ADD      V1, #BB         ; Add 187 to V1
$2B8    $04D0   SYS      $4D0            ; System call to 4D0
$2BA    $338E   SE       V3, #8E         ; Skip if V3 == 142
$2BC    $636D   LD       V3, #6D         ; Load 109 into V3
$2BE    $85CD   UNKNOWN  85CD            ; Unknown 8xxx instruction
$2C0    $2B0F   CALL     $B0F            ; Call subroutine at B0F
$2C2    $AC28   LD       I, $C28         ; Load C28 into I
$2C4    $3361   SE       V3, #61         ; Skip if V3 == 97
$2C6    $C6A8   RND      V6, #A8         ; V6 = random & A8
$2C8    $A754   LD       I, $754         ; Load 754 into I
$2CA    $8BF8   UNKNOWN  8BF8            ; Unknown 8xxx instruction
$2CC    $7D21   ADD      VD, #21         ; Add 33 to VD
$2CE    $5E98   UNKNOWN  $5E98           ; Unknown 5xxx instruction
$2D0    $3EFC   SE       VE, #FC         ; Skip if VE == 252
$2D2    $1F6C   JP       $F6C            ; Jump to F6C
$2D4    $6C78   LD       VC, #78         ; Load 120 into VC
$2D6    $199F   JP       $99F            ; Jump to 99F
$2D8    $EC51   UNKNOWN  $EC51           ; Unknown Exxx instruction
$2DA    $8C41   OR       VC, V4          ; VC |= V4
$2DC    $72A1   ADD      V2, #A1         ; Add 161 to V2
$2DE    $9DFD   UNKNOWN  $9DFD           ; Unknown 9xxx instruction
$2E4    $C500   RND      V5, #00         ; V5 = random & 00
$2EE    $00F1   SYS      $0F1            ; System call to 0F1
$2F0    $9E0E   UNKNOWN  $9E0E           ; Unknown 9xxx instruction
$2F2    $1BAD   JP       $BAD            ; Jump to BAD
$2F4    $2B7F   CALL     $B7F            ; Call subroutine at B7F
$2F6    $AD33   LD       I, $D33         ; Load D33 into I
$2F8    $7068   ADD      V0, #68         ; Add 104 to V0
$2FA    $0062   SYS      $062            ; System call to 062
$2FC    $14DA   JP       $4DA            ; Jump to 4DA
$2FE    $321C   SE       V2, #1C         ; Skip if V2 == 28
$306    $00D7   SYS      $0D7            ; System call to 0D7
$308    $5B00   SE       VB, V0          ; Skip if VB == V0
$310    $A7DC   LD       I, $7DC         ; Load 7DC into I
$312    $370D   SE       V7, #0D         ; Skip if V7 == 13
$314    $7FAC   ADD      VF, #AC         ; Add 172 to VF
$316    $FE4A   UNKNOWN  FE4A            ; Unknown Fxxx instruction
$318    $F4FD   UNKNOWN  F4FD            ; Unknown Fxxx instruction
$31A    $C662   RND      V6, #62         ; V6 = random & 62
$31C    $9D57   UNKNOWN  $9D57           ; Unknown 9xxx instruction
$31E    $7DF9   ADD      VD, #F9         ; Add 249 to VD
$320    $FC07   LD       VC, DT          ; VC = delay timer
$322    $5682   UNKNOWN  $5682           ; Unknown 5xxx instruction
$324    $0CED   SYS      $CED            ; System call to CED
$326    $6527   LD       V5, #27         ; Load 39 into V5
$328    $097E   SYS      $97E            ; System call to 97E
$32A    $D2C6   DRW      V2, VC, #6      ; Draw 6-byte sprite at V2, VC
$32C    $E9FE   UNKNOWN  $E9FE           ; Unknown Exxx instruction
$32E    $BAF0   JP       V0, $AF0        ; Jump to V0 + AF0
$330    $5E85   UNKNOWN  $5E85           ; Unknown 5xxx instruction
$332    $67C0   LD       V7, #C0         ; Load 192 into V7
$334    $4932   SNE      V9, #32         ; Skip if V9 != 50
$336    $D526   DRW      V5, V2, #6      ; Draw 6-byte sprite at V5, V2
$338    $2019   CALL     $019            ; Call subroutine at 019
$33A    $23BE   CALL     $3BE            ; Call subroutine at 3BE
$33C    $11A8   JP       $1A8            ; Jump to 1A8
$33E    $5BA7   UNKNOWN  $5BA7           ; Unknown 5xxx instruction
$340    $FBD5   UNKNOWN  FBD5            ; Unknown Fxxx instruction
$342    $6BF3   LD       VB, #F3         ; Load 243 into VB
$344    $8B39   UNKNOWN  8B39            ; Unknown 8xxx instruction
$346    $5259   UNKNOWN  $5259           ; Unknown 5xxx instruction
$348    $D26A   DRW      V2, V6, #A      ; Draw 10-byte sprite at V2, V6
$34A    $389C   SE       V8, #9C         ; Skip if V8 == 156
$34C    $8D56   SHR      VD              ; VD >>= 1, VF = LSB
$34E    $B3D8   JP       V0, $3D8        ; Jump to V0 + 3D8
$350    $6352   LD       V3, #52         ; Load 82 into V3
$352    $41FF   SNE      V1, #FF         ; Skip if V1 != 255
$354    $3086   SE       V0, #86         ; Skip if V0 == 134
$356    $2C0E   CALL     $C0E            ; Call subroutine at C0E
$358    $A853   LD       I, $853         ; Load 853 into I
$35A    $F618   LD       ST, V6          ; Sound timer = V6
$35C    $68F0   LD       V8, #F0         ; Load 240 into V8
$35E    $3FD5   SE       VF, #D5         ; Skip if VF == 213
$360    $3972   SE       V9, #72         ; Skip if V9 == 114
$362    $348A   SE       V4, #8A         ; Skip if V4 == 138
$364    $65CA   LD       V5, #CA         ; Load 202 into V5
$366    $8943   XOR      V9, V4          ; V9 ^= V4
$368    $85A7   SUBN     V5, VA          ; V5 = VA - V5, VF = !borrow
$36A    $6396   LD       V3, #96         ; Load 150 into V3
$36C    $6F6C   LD       VF, #6C         ; Load 108 into VF
$36E    $8CBC   UNKNOWN  8CBC            ; Unknown 8xxx instruction
$370    $E8DF   UNKNOWN  $E8DF           ; Unknown Exxx instruction
$372    $0B0E   SYS      $B0E            ; System call to B0E
$374    $24E1   CALL     $4E1            ; Call subroutine at 4E1
$376    $4181   SNE      V1, #81         ; Skip if V1 != 129
$378    $DD36   DRW      VD, V3, #6      ; Draw 6-byte sprite at VD, V3
$37A    $9C50   SNE      VC, V5          ; Skip if VC != V5
$37C    $88E1   OR       V8, VE          ; V8 |= VE
$37E    $23B8   CALL     $3B8            ; Call subroutine at 3B8
$380    $6A36   LD       VA, #36         ; Load 54 into VA
$382    $313B   SE       V1, #3B         ; Skip if V1 == 59
$384    $E6F6   UNKNOWN  $E6F6           ; Unknown Exxx instruction
$386    $93A8   UNKNOWN  $93A8           ; Unknown 9xxx instruction
$388    $83A0   LD       V3, VA          ; V3 = VA
$38A    $58EA   UNKNOWN  $58EA           ; Unknown 5xxx instruction
$38C    $C25C   RND      V2, #5C         ; V2 = random & 5C
$38E    $C99F   RND      V9, #9F         ; V9 = random & 9F
$390    $DECB   DRW      VE, VC, #B      ; Draw 11-byte sprite at VE, VC
$392    $5943   UNKNOWN  $5943           ; Unknown 5xxx instruction
$394    $2A64   CALL     $A64            ; Call subroutine at A64
$396    $C99E   RND      V9, #9E         ; V9 = random & 9E
$398    $9ADA   UNKNOWN  $9ADA           ; Unknown 9xxx instruction
$39A    $E153   UNKNOWN  $E153           ; Unknown Exxx instruction
$39C    $B50C   JP       V0, $50C        ; Jump to V0 + 50C
$39E    $127F   JP       $27F            ; Jump to 27F
$3A0    $5AE3   UNKNOWN  $5AE3           ; Unknown 5xxx instruction
$3A2    $ECDC   UNKNOWN  $ECDC           ; Unknown Exxx instruction
$3A4    $585C   UNKNOWN  $585C           ; Unknown 5xxx instruction
$3A6    $BE98   JP       V0, $E98        ; Jump to V0 + E98
$3A8    $C5D6   RND      V5, #D6         ; V5 = random & D6
$3AA    $BDE2   JP       V0, $DE2        ; Jump to V0 + DE2
$3AC    $BFD5   JP       V0, $FD5        ; Jump to V0 + FD5
$3AE    $6E88   LD       VE, #88         ; Load 136 into VE
$3B0    $418D   SNE      V1, #8D         ; Skip if V1 != 141
$3B2    $3C59   SE       VC, #59         ; Skip if VC == 89
$3B4    $8D4E   SHL      VD              ; VD <<= 1, VF = MSB
$3B6    $3A87   SE       VA, #87         ; Skip if VA == 135
$3B8    $5992   UNKNOWN  $5992           ; Unknown 5xxx instruction
$3BA    $A116   LD       I, $116         ; Load 116 into I
$3BC    $FCA7   UNKNOWN  FCA7            ; Unknown Fxxx instruction
$3BE    $4BFC   SNE      VB, #FC         ; Skip if VB != 252
$3C0    $F4D0   UNKNOWN  F4D0            ; Unknown Fxxx instruction
$3C2    $570B   UNKNOWN  $570B           ; Unknown 5xxx instruction
$3C4    $2B61   CALL     $B61            ; Call subroutine at B61
$3C6    $6CAE   LD       VC, #AE         ; Load 174 into VC
$3C8    $D1AF   DRW      V1, VA, #F      ; Draw 15-byte sprite at V1, VA
$3CA    $BCE9   JP       V0, $CE9        ; Jump to V0 + CE9
$3CC    $365F   SE       V6, #5F         ; Skip if V6 == 95
$3CE    $58FD   UNKNOWN  $58FD           ; Unknown 5xxx instruction
$3D0    $4C18   SNE      VC, #18         ; Skip if VC != 24
$3D2    $38A1   SE       V8, #A1         ; Skip if V8 == 161
$3D4    $7575   ADD      V5, #75         ; Add 117 to V5
$3D6    $4899   SNE      V8, #99         ; Skip if V8 != 153
$3D8    $8F52   AND      VF, V5          ; VF &= V5
$3DA    $9AE1   UNKNOWN  $9AE1           ; Unknown 9xxx instruction
$3DC    $AF8B   LD       I, $F8B         ; Load F8B into I
$3DE    $98CB   UNKNOWN  $98CB           ; Unknown 9xxx instruction
$3E0    $ECAB   UNKNOWN  $ECAB           ; Unknown Exxx instruction
$3E2    $577D   UNKNOWN  $577D           ; Unknown 5xxx instruction
$3E4    $BEDA   JP       V0, $EDA        ; Jump to V0 + EDA
$3E6    $DA3E   DRW      VA, V3, #E      ; Draw 14-byte sprite at VA, V3
$3E8    $4AE2   SNE      VA, #E2         ; Skip if VA != 226
$3EA    $B845   JP       V0, $845        ; Jump to V0 + 845
$3EC    $D957   DRW      V9, V5, #7      ; Draw 7-byte sprite at V9, V5
$3EE    $B733   JP       V0, $733        ; Jump to V0 + 733
$3F0    $0B6B   SYS      $B6B            ; System call to B6B
$3F2    $EA5E   UNKNOWN  $EA5E           ; Unknown Exxx instruction
$3F4    $FFC4   UNKNOWN  FFC4            ; Unknown Fxxx instruction
$3F6    $44E3   SNE      V4, #E3         ; Skip if V4 != 227
$3F8    $38F4   SE       V8, #F4         ; Skip if V8 == 244
$3FA    $5B29   UNKNOWN  $5B29           ; Unknown 5xxx instruction
$3FC    $3758   SE       V7, #58         ; Skip if V7 == 88
$3FE    $B78E   JP       V0, $78E        ; Jump to V0 + 78E
$400    $3571   SE       V5, #71         ; Skip if V5 == 113
$402    $7E70   ADD      VE, #70         ; Add 112 to VE
$404    $5F1E   UNKNOWN  $5F1E           ; Unknown 5xxx instruction
$406    $EFFD   UNKNOWN  $EFFD           ; Unknown Exxx instruction
$408    $39EF   SE       V9, #EF         ; Skip if V9 == 239
$40A    $6633   LD       V6, #33         ; Load 51 into V6
$40C    $233D   CALL     $33D            ; Call subroutine at 33D
$40E    $A2A2   LD       I, $2A2         ; Load 2A2 into I
$410    $2296   CALL     $296            ; Call subroutine at 296
$412    $3546   SE       V5, #46         ; Skip if V5 == 70
$414    $F2FE   UNKNOWN  F2FE            ; Unknown Fxxx instruction
$416    $03E0   SYS      $3E0            ; System call to 3E0
$418    $587B   UNKNOWN  $587B           ; Unknown 5xxx instruction
$41A    $2B29   CALL     $B29            ; Call subroutine at B29
$41C    $19C7   JP       $9C7            ; Jump to 9C7
$41E    $4CD9   SNE      VC, #D9         ; Skip if VC != 217
$420    $B3F3   JP       V0, $3F3        ; Jump to V0 + 3F3
$422    $4447   SNE      V4, #47         ; Skip if V4 != 71
$424    $1323   JP       $323            ; Jump to 323
$426    $CA18   RND      VA, #18         ; VA = random & 18
$428    $5435   UNKNOWN  $5435           ; Unknown 5xxx instruction
$42A    $3903   SE       V9, #03         ; Skip if V9 == 3
$42C    $240F   CALL     $40F            ; Call subroutine at 40F
$42E    $CB69   RND      VB, #69         ; VB = random & 69
$430    $5C6D   UNKNOWN  $5C6D           ; Unknown 5xxx instruction
$432    $D54D   DRW      V5, V4, #D      ; Draw 13-byte sprite at V5, V4
$434    $A76F   LD       I, $76F         ; Load 76F into I
$436    $3A40   SE       VA, #40         ; Skip if VA == 64
$438    $164F   JP       $64F            ; Jump to 64F
$43A    $3AA6   SE       VA, #A6         ; Skip if VA == 166
$43C    $43BB   SNE      V3, #BB         ; Skip if V3 != 187
$43E    $3F64   SE       VF, #64         ; Skip if VF == 100
$440    $BD0E   JP       V0, $D0E        ; Jump to V0 + D0E
$442    $9F96   UNKNOWN  $9F96           ; Unknown 9xxx instruction
$444    $F2D5   UNKNOWN  F2D5            ; Unknown Fxxx instruction
$446    $0576   SYS      $576            ; System call to 576
$448    $AADB   LD       I, $ADB         ; Load ADB into I
$44A    $65A7   LD       V5, #A7         ; Load 167 into V5
$44C    $BCB2   JP       V0, $CB2        ; Jump to V0 + CB2
$44E    $C0E6   RND      V0, #E6         ; V0 = random & E6
$450    $DD55   DRW      VD, V5, #5      ; Draw 5-byte sprite at VD, V5
$452    $41A8   SNE      V1, #A8         ; Skip if V1 != 168
$454    $410C   SNE      V1, #0C         ; Skip if V1 != 12
$456    $102D   JP       $02D            ; Jump to 02D
$458    $91A6   UNKNOWN  $91A6           ; Unknown 9xxx instruction
$45A    $ACCE   LD       I, $CCE         ; Load CCE into I
$45C    $073F   SYS      $73F            ; System call to 73F
$45E    $D7DB   DRW      V7, VD, #B      ; Draw 11-byte sprite at V7, VD
$460    $85E3   XOR      V5, VE          ; V5 ^= VE
$462    $3EEA   SE       VE, #EA         ; Skip if VE == 234
$464    $BF2E   JP       V0, $F2E        ; Jump to V0 + F2E
$466    $41DC   SNE      V1, #DC         ; Skip if V1 != 220
$468    $55CC   UNKNOWN  $55CC           ; Unknown 5xxx instruction
$46A    $CF24   RND      VF, #24         ; VF = random & 24
$46C    $581E   UNKNOWN  $581E           ; Unknown 5xxx instruction
$46E    $CA40   RND      VA, #40         ; VA = random & 40
$470    $5871   UNKNOWN  $5871           ; Unknown 5xxx instruction
$472    $EA2E   UNKNOWN  $EA2E           ; Unknown Exxx instruction
$474    $89A5   SUB      V9, VA          ; V9 -= VA, VF = !borrow
$476    $E6BA   UNKNOWN  $E6BA           ; Unknown Exxx instruction
$478    $9BE8   UNKNOWN  $9BE8           ; Unknown 9xxx instruction
$47A    $E6AE   UNKNOWN  $E6AE           ; Unknown Exxx instruction
$47C    $D05E   DRW      V0, V5, #E      ; Draw 14-byte sprite at V0, V5
$47E    $7454   ADD      V4, #54         ; Add 84 to V4
$480    $691A   LD       V9, #1A         ; Load 26 into V9
$482    $ABBC   LD       I, $BBC         ; Load BBC into I
$484    $AF3D   LD       I, $F3D         ; Load F3D into I
$486    $C431   RND      V4, #31         ; V4 = random & 31
$488    $D092   DRW      V0, V9, #2      ; Draw 2-byte sprite at V0, V9
$48A    $0D16   SYS      $D16            ; System call to D16
$48C    $CA21   RND      VA, #21         ; VA = random & 21
$48E    $9898   UNKNOWN  $9898           ; Unknown 9xxx instruction
$490    $872B   UNKNOWN  872B            ; Unknown 8xxx instruction
$492    $2354   CALL     $354            ; Call subroutine at 354
$494    $36C1   SE       V6, #C1         ; Skip if V6 == 193
$496    $6A89   LD       VA, #89         ; Load 137 into VA
$498    $C544   RND      V5, #44         ; V5 = random & 44
$49A    $864E   SHL      V6              ; V6 <<= 1, VF = MSB
$49C    $4368   SNE      V3, #68         ; Skip if V3 != 104
$49E    $AB08   LD       I, $B08         ; Load B08 into I
$4A0    $8DEA   UNKNOWN  8DEA            ; Unknown 8xxx instruction
$4A2    $BA81   JP       V0, $A81        ; Jump to V0 + A81
$4A4    $ED02   UNKNOWN  $ED02           ; Unknown Exxx instruction
$4A6    $2BED   CALL     $BED            ; Call subroutine at BED
$4A8    $94D7   UNKNOWN  $94D7           ; Unknown 9xxx instruction
$4AA    $EA9F   UNKNOWN  $EA9F           ; Unknown Exxx instruction
$4AC    $70BF   ADD      V0, #BF         ; Add 191 to V0
$4AE    $72A7   ADD      V2, #A7         ; Add 167 to V2
$4B0    $ABEB   LD       I, $BEB         ; Load BEB into I
$4B2    $45D9   SNE      V5, #D9         ; Skip if V5 != 217
$4B4    $9763   UNKNOWN  $9763           ; Unknown 9xxx instruction
$4B6    $4321   SNE      V3, #21         ; Skip if V3 != 33
$4B8    $3BA4   SE       VB, #A4         ; Skip if VB == 164
$4BA    $E544   UNKNOWN  $E544           ; Unknown Exxx instruction
$4BC    $3440   SE       V4, #40         ; Skip if V4 == 64
$4BE    $67EB   LD       V7, #EB         ; Load 235 into V7
$4C0    $07C4   SYS      $7C4            ; System call to 7C4
$4C2    $224A   CALL     $24A            ; Call subroutine at 24A
$4C4    $8240   LD       V2, V4          ; V2 = V4
$4C6    $84D4   ADD      V4, VD          ; V4 += VD, VF = carry
$4C8    $2E18   CALL     $E18            ; Call subroutine at E18
$4CA    $BDCF   JP       V0, $DCF        ; Jump to V0 + DCF
$4CC    $7A38   ADD      VA, #38         ; Add 56 to VA
$4CE    $72FC   ADD      V2, #FC         ; Add 252 to V2
$4D0    $1E06   JP       $E06            ; Jump to E06
$4D2    $703D   ADD      V0, #3D         ; Add 61 to V0
$4D4    $14A0   JP       $4A0            ; Jump to 4A0
$4D6    $05AE   SYS      $5AE            ; System call to 5AE
$4D8    $AC1A   LD       I, $C1A         ; Load C1A into I
$4DA    $7C97   ADD      VC, #97         ; Add 151 to VC
$4DC    $FF38   UNKNOWN  FF38            ; Unknown Fxxx instruction
$4DE    $3701   SE       V7, #01         ; Skip if V7 == 1
$4E0    $F3EC   UNKNOWN  F3EC            ; Unknown Fxxx instruction
$4E2    $FC6E   UNKNOWN  FC6E            ; Unknown Fxxx instruction
$4E4    $7A0F   ADD      VA, #0F         ; Add 15 to VA
$4E6    $7C6E   ADD      VC, #6E         ; Add 110 to VC
$4E8    $03AB   SYS      $3AB            ; System call to 3AB
$4EA    $6243   LD       V2, #43         ; Load 67 into V2
$4EC    $4EA2   SNE      VE, #A2         ; Skip if VE != 162
$4EE    $AE15   LD       I, $E15         ; Load E15 into I
$4F0    $FA7E   UNKNOWN  FA7E            ; Unknown Fxxx instruction
$4F2    $61C1   LD       V1, #C1         ; Load 193 into V1
$4F4    $85A2   AND      V5, VA          ; V5 &= VA
$4F6    $563B   UNKNOWN  $563B           ; Unknown 5xxx instruction
$4F8    $F08A   UNKNOWN  F08A            ; Unknown Fxxx instruction
$4FA    $873A   UNKNOWN  873A            ; Unknown 8xxx instruction
$4FC    $80FC   UNKNOWN  80FC            ; Unknown 8xxx instruction
$4FE    $CDAE   RND      VD, #AE         ; VD = random & AE
$500    $51D8   UNKNOWN  $51D8           ; Unknown 5xxx instruction
$502    $0F99   SYS      $F99            ; System call to F99
$504    $F862   UNKNOWN  F862            ; Unknown Fxxx instruction
$506    $6BCB   LD       VB, #CB         ; Load 203 into VB
$508    $B278   JP       V0, $278        ; Jump to V0 + 278
$50A    $DF39   DRW      VF, V3, #9      ; Draw 9-byte sprite at VF, V3
$50C    $935C   UNKNOWN  $935C           ; Unknown 9xxx instruction
$50E    $8DBF   UNKNOWN  8DBF            ; Unknown 8xxx instruction
$510    $4C7C   SNE      VC, #7C         ; Skip if VC != 124
$512    $3FA0   SE       VF, #A0         ; Skip if VF == 160
$514    $96D7   UNKNOWN  $96D7           ; Unknown 9xxx instruction
$516    $02F4   SYS      $2F4            ; System call to 2F4
$518    $895E   SHL      V9              ; V9 <<= 1, VF = MSB
$51A    $FB6F   UNKNOWN  FB6F            ; Unknown Fxxx instruction
$51C    $2B5A   CALL     $B5A            ; Call subroutine at B5A
$51E    $BDD8   JP       V0, $DD8        ; Jump to V0 + DD8
$520    $33EA   SE       V3, #EA         ; Skip if V3 == 234
$522    $FA9D   UNKNOWN  FA9D            ; Unknown Fxxx instruction
$524    $A965   LD       I, $965         ; Load 965 into I
$526    $299B   CALL     $99B            ; Call subroutine at 99B
$528    $42E7   SNE      V2, #E7         ; Skip if V2 != 231
$52A    $02F1   SYS      $2F1            ; System call to 2F1
$52C    $3257   SE       V2, #57         ; Skip if V2 == 87
$52E    $E3F2   UNKNOWN  $E3F2           ; Unknown Exxx instruction
$530    $4455   SNE      V4, #55         ; Skip if V4 != 85
$532    $2DC5   CALL     $DC5            ; Call subroutine at DC5
$534    $C7EE   RND      V7, #EE         ; V7 = random & EE
$536    $2C1E   CALL     $C1E            ; Call subroutine at C1E
$538    $54BD   UNKNOWN  $54BD           ; Unknown 5xxx instruction
$53A    $F78F   UNKNOWN  F78F            ; Unknown Fxxx instruction
$53C    $6C37   LD       VC, #37         ; Load 55 into VC
$53E    $409B   SNE      V0, #9B         ; Skip if V0 != 155
$540    $44E2   SNE      V4, #E2         ; Skip if V4 != 226
$542    $4CB2   SNE      VC, #B2         ; Skip if VC != 178
$544    $8B2F   UNKNOWN  8B2F            ; Unknown 8xxx instruction
$546    $2EDB   CALL     $EDB            ; Call subroutine at EDB
$548    $935B   UNKNOWN  $935B           ; Unknown 9xxx instruction
$54A    $EB74   UNKNOWN  $EB74           ; Unknown Exxx instruction
$54C    $644B   LD       V4, #4B         ; Load 75 into V4
$54E    $A59D   LD       I, $59D         ; Load 59D into I
$550    $DBF3   DRW      VB, VF, #3      ; Draw 3-byte sprite at VB, VF
$552    $6A69   LD       VA, #69         ; Load 105 into VA
$554    $40F8   SNE      V0, #F8         ; Skip if V0 != 248
$556    $CE9B   RND      VE, #9B         ; VE = random & 9B
$558    $D32F   DRW      V3, V2, #F      ; Draw 15-byte sprite at V3, V2
$55A    $D1D4   DRW      V1, VD, #4      ; Draw 4-byte sprite at V1, VD
$55C    $B28F   JP       V0, $28F        ; Jump to V0 + 28F
$55E    $A46B   LD       I, $46B         ; Load 46B into I
$560    $0532   SYS      $532            ; System call to 532
$562    $4B06   SNE      VB, #06         ; Skip if VB != 6
$564    $B9B8   JP       V0, $9B8        ; Jump to V0 + 9B8
$566    $FFBB   UNKNOWN  FFBB            ; Unknown Fxxx instruction
$568    $D02A   DRW      V0, V2, #A      ; Draw 10-byte sprite at V0, V2
$56A    $054A   SYS      $54A            ; System call to 54A
$56C    $E67A   UNKNOWN  $E67A           ; Unknown Exxx instruction
$56E    $B4E0   JP       V0, $4E0        ; Jump to V0 + 4E0
$570    $0D6D   SYS      $D6D            ; System call to D6D
$572    $6230   LD       V2, #30         ; Load 48 into V2
$574    $C295   RND      V2, #95         ; V2 = random & 95
$576    $9DA4   UNKNOWN  $9DA4           ; Unknown 9xxx instruction
$578    $F80E   UNKNOWN  F80E            ; Unknown Fxxx instruction
$57A    $E819   UNKNOWN  $E819           ; Unknown Exxx instruction
$57C    $7298   ADD      V2, #98         ; Add 152 to V2
$57E    $4A2F   SNE      VA, #2F         ; Skip if VA != 47
$580    $D207   DRW      V2, V0, #7      ; Draw 7-byte sprite at V2, V0
$582    $F122   UNKNOWN  F122            ; Unknown Fxxx instruction
$584    $9FBF   UNKNOWN  $9FBF           ; Unknown 9xxx instruction
$586    $6E73   LD       VE, #73         ; Load 115 into VE
$588    $C837   RND      V8, #37         ; V8 = random & 37
$58A    $608B   LD       V0, #8B         ; Load 139 into V0
$58C    $5869   UNKNOWN  $5869           ; Unknown 5xxx instruction
$58E    $0585   SYS      $585            ; System call to 585
$590    $B8B6   JP       V0, $8B6        ; Jump to V0 + 8B6
$592    $4C26   SNE      VC, #26         ; Skip if VC != 38
$594    $8ED7   SUBN     VE, VD          ; VE = VD - VE, VF = !borrow
$596    $0BF7   SYS      $BF7            ; System call to BF7
$598    $9722   UNKNOWN  $9722           ; Unknown 9xxx instruction
$59A    $85AE   SHL      V5              ; V5 <<= 1, VF = MSB
$59C    $E2B5   UNKNOWN  $E2B5           ; Unknown Exxx instruction
$59E    $2F29   CALL     $F29            ; Call subroutine at F29
$5A0    $2DB0   CALL     $DB0            ; Call subroutine at DB0
$5A2    $71BB   ADD      V1, #BB         ; Add 187 to V1
$5A4    $ED87   UNKNOWN  $ED87           ; Unknown Exxx instruction
$5A6    $427A   SNE      V2, #7A         ; Skip if V2 != 122
$5A8    $1BAB   JP       $BAB            ; Jump to BAB
$5AA    $4FAA   SNE      VF, #AA         ; Skip if VF != 170
$5AC    $FDD9   UNKNOWN  FDD9            ; Unknown Fxxx instruction
$5AE    $FCA7   UNKNOWN  FCA7            ; Unknown Fxxx instruction
$5B0    $9E16   UNKNOWN  $9E16           ; Unknown 9xxx instruction
$5B2    $5602   UNKNOWN  $5602           ; Unknown 5xxx instruction
$5B4    $8C93   XOR      VC, V9          ; VC ^= V9
$5B6    $3BEF   SE       VB, #EF         ; Skip if VB == 239
$5B8    $DA17   DRW      VA, V1, #7      ; Draw 7-byte sprite at VA, V1
$5BA    $6D5B   LD       VD, #5B         ; Load 91 into VD
$5BC    $444F   SNE      V4, #4F         ; Skip if V4 != 79
$5BE    $9BAF   UNKNOWN  $9BAF           ; Unknown 9xxx instruction
$5C0    $62F0   LD       V2, #F0         ; Load 240 into V2
$5C2    $D494   DRW      V4, V9, #4      ; Draw 4-byte sprite at V4, V9
$5C4    $DD7F   DRW      VD, V7, #F      ; Draw 15-byte sprite at VD, V7
$5C6    $8B94   ADD      VB, V9          ; VB += V9, VF = carry
$5C8    $1499   JP       $499            ; Jump to 499
$5CA    $B3B8   JP       V0, $3B8        ; Jump to V0 + 3B8
$5CC    $EAA5   UNKNOWN  $EAA5           ; Unknown Exxx instruction
$5CE    $A036   LD       I, $036         ; Load 036 into I
$5D0    $E0AE   UNKNOWN  $E0AE           ; Unknown Exxx instruction
$5D2    $D7AB   DRW      V7, VA, #B      ; Draw 11-byte sprite at V7, VA
$5D4    $FA8A   UNKNOWN  FA8A            ; Unknown Fxxx instruction
$5D6    $688F   LD       V8, #8F         ; Load 143 into V8
$5D8    $1B47   JP       $B47            ; Jump to B47
$5DA    $255C   CALL     $55C            ; Call subroutine at 55C
$5DC    $72BA   ADD      V2, #BA         ; Add 186 to V2
$5DE    $ECE9   UNKNOWN  $ECE9           ; Unknown Exxx instruction
$5E0    $FB8C   UNKNOWN  FB8C            ; Unknown Fxxx instruction
$5E2    $6D5D   LD       VD, #5D         ; Load 93 into VD
$5E4    $77AB   ADD      V7, #AB         ; Add 171 to V7
$5E6    $4F67   SNE      VF, #67         ; Skip if VF != 103
$5E8    $BA66   JP       V0, $A66        ; Jump to V0 + A66
$5EA    $C770   RND      V7, #70         ; V7 = random & 70
$5EC    $5B53   UNKNOWN  $5B53           ; Unknown 5xxx instruction
$5EE    $97C6   UNKNOWN  $97C6           ; Unknown 9xxx instruction
$5F0    $84F4   ADD      V4, VF          ; V4 += VF, VF = carry
$5F2    $DADA   DRW      VA, VD, #A      ; Draw 10-byte sprite at VA, VD
$5F4    $F7AA   UNKNOWN  F7AA            ; Unknown Fxxx instruction
$5F6    $BEE6   JP       V0, $EE6        ; Jump to V0 + EE6
$5F8    $C26B   RND      V2, #6B         ; V2 = random & 6B
$5FA    $6312   LD       V3, #12         ; Load 18 into V3
$5FC    $AD0D   LD       I, $D0D         ; Load D0D into I
$5FE    $CBFB   RND      VB, #FB         ; VB = random & FB
$600    $6BBF   LD       VB, #BF         ; Load 191 into VB
$602    $FBA5   UNKNOWN  FBA5            ; Unknown Fxxx instruction
$604    $F1BE   UNKNOWN  F1BE            ; Unknown Fxxx instruction
$606    $4C7C   SNE      VC, #7C         ; Skip if VC != 124
$608    $0243   SYS      $243            ; System call to 243
$60A    $641D   LD       V4, #1D         ; Load 29 into V4
$60C    $E74C   UNKNOWN  $E74C           ; Unknown Exxx instruction
$60E    $57F2   UNKNOWN  $57F2           ; Unknown 5xxx instruction
$610    $9128   UNKNOWN  $9128           ; Unknown 9xxx instruction
$612    $26F8   CALL     $6F8            ; Call subroutine at 6F8
$614    $0F01   SYS      $F01            ; System call to F01
$616    $1B9C   JP       $B9C            ; Jump to B9C
$618    $AACB   LD       I, $ACB         ; Load ACB into I
$61A    $8C54   ADD      VC, V5          ; VC += V5, VF = carry
$61C    $7E77   ADD      VE, #77         ; Add 119 to VE
$61E    $DBAB   DRW      VB, VA, #B      ; Draw 11-byte sprite at VB, VA
$620    $C588   RND      V5, #88         ; V5 = random & 88
$622    $9A0B   UNKNOWN  $9A0B           ; Unknown 9xxx instruction
$624    $3091   SE       V0, #91         ; Skip if V0 == 145
$626    $BDE3   JP       V0, $DE3        ; Jump to V0 + DE3
$628    $429C   SNE      V2, #9C         ; Skip if V2 != 156
$62A    $ACB2   LD       I, $CB2         ; Load CB2 into I
$62C    $4B6A   SNE      VB, #6A         ; Skip if VB != 106
$62E    $97BF   UNKNOWN  $97BF           ; Unknown 9xxx instruction
$630    $5A68   UNKNOWN  $5A68           ; Unknown 5xxx instruction
$632    $2FB8   CALL     $FB8            ; Call subroutine at FB8
$634    $C986   RND      V9, #86         ; V9 = random & 86
$636    $97F5   UNKNOWN  $97F5           ; Unknown 9xxx instruction
$638    $28BC   CALL     $8BC            ; Call subroutine at 8BC
$63A    $181F   JP       $81F            ; Jump to 81F
$63C    $0CD4   SYS      $CD4            ; System call to CD4
$63E    $B852   JP       V0, $852        ; Jump to V0 + 852
$640    $A8E8   LD       I, $8E8         ; Load 8E8 into I
$642    $599B   UNKNOWN  $599B           ; Unknown 5xxx instruction
$644    $9B37   UNKNOWN  $9B37           ; Unknown 9xxx instruction
$646    $017A   SYS      $17A            ; System call to 17A
$648    $67AB   LD       V7, #AB         ; Load 171 into V7
$64A    $1DD7   JP       $DD7            ; Jump to DD7
$64C    $FFAE   UNKNOWN  FFAE            ; Unknown Fxxx instruction
$64E    $BE94   JP       V0, $E94        ; Jump to V0 + E94
$650    $243F   CALL     $43F            ; Call subroutine at 43F
$652    $B888   JP       V0, $888        ; Jump to V0 + 888
$654    $A71F   LD       I, $71F         ; Load 71F into I
$656    $3B3D   SE       VB, #3D         ; Skip if VB == 61
$658    $207E   CALL     $07E            ; Call subroutine at 07E
$65A    $370F   SE       V7, #0F         ; Skip if V7 == 15
$65C    $7118   ADD      V1, #18         ; Add 24 to V1
$65E    $78D3   ADD      V8, #D3         ; Add 211 to V8
$660    $F40E   UNKNOWN  F40E            ; Unknown Fxxx instruction
$662    $27C4   CALL     $7C4            ; Call subroutine at 7C4
$664    $C5EA   RND      V5, #EA         ; V5 = random & EA
$666    $C454   RND      V4, #54         ; V4 = random & 54
$668    $4BC4   SNE      VB, #C4         ; Skip if VB != 196
$66A    $3F03   SE       VF, #03         ; Skip if VF == 3
$66C    $F274   UNKNOWN  F274            ; Unknown Fxxx instruction
$66E    $013C   SYS      $13C            ; System call to 13C
$670    $5DBC   UNKNOWN  $5DBC           ; Unknown 5xxx instruction
$672    $32E6   SE       V2, #E6         ; Skip if V2 == 230
$674    $7902   ADD      V9, #02         ; Add 2 to V9
$676    $C48B   RND      V4, #8B         ; V4 = random & 8B
$678    $284B   CALL     $84B            ; Call subroutine at 84B
$67A    $3143   SE       V1, #43         ; Skip if V1 == 67
$67C    $6E39   LD       VE, #39         ; Load 57 into VE
$67E    $AFAE   LD       I, $FAE         ; Load FAE into I
$680    $32A2   SE       V2, #A2         ; Skip if V2 == 162
$682    $B6B2   JP       V0, $6B2        ; Jump to V0 + 6B2
$684    $C324   RND      V3, #24         ; V3 = random & 24
$686    $DF9F   DRW      VF, V9, #F      ; Draw 15-byte sprite at VF, V9
$688    $4724   SNE      V7, #24         ; Skip if V7 != 36
$68A    $1595   JP       $595            ; Jump to 595
$68C    $DD4E   DRW      VD, V4, #E      ; Draw 14-byte sprite at VD, V4
$68E    $7807   ADD      V8, #07         ; Add 7 to V8
$690    $0B31   SYS      $B31            ; System call to B31
$692    $D164   DRW      V1, V6, #4      ; Draw 4-byte sprite at V1, V6
$694    $181B   JP       $81B            ; Jump to 81B
$696    $6A8B   LD       VA, #8B         ; Load 139 into VA
$698    $5324   UNKNOWN  $5324           ; Unknown 5xxx instruction
$69A    $B8E8   JP       V0, $8E8        ; Jump to V0 + 8E8
$69C    $FB8B   UNKNOWN  FB8B            ; Unknown Fxxx instruction
$69E    $14B4   JP       $4B4            ; Jump to 4B4
$6A0    $E766   UNKNOWN  $E766           ; Unknown Exxx instruction
$6A2    $5501   UNKNOWN  $5501           ; Unknown 5xxx instruction
$6A4    $5378   UNKNOWN  $5378           ; Unknown 5xxx instruction
$6A6    $EE69   UNKNOWN  $EE69           ; Unknown Exxx instruction
$6A8    $A572   LD       I, $572         ; Load 572 into I
$6AA    $997C   UNKNOWN  $997C           ; Unknown 9xxx instruction
$6AC    $59F2   UNKNOWN  $59F2           ; Unknown 5xxx instruction
$6AE    $F905   UNKNOWN  F905            ; Unknown Fxxx instruction
$6B0    $F121   UNKNOWN  F121            ; Unknown Fxxx instruction
$6B2    $73DB   ADD      V3, #DB         ; Add 219 to V3
$6B4    $DCCE   DRW      VC, VC, #E      ; Draw 14-byte sprite at VC, VC
$6B6    $84F9   UNKNOWN  84F9            ; Unknown 8xxx instruction
$6B8    $7EF4   ADD      VE, #F4         ; Add 244 to VE
$6BA    $9D72   UNKNOWN  $9D72           ; Unknown 9xxx instruction
$6BC    $4135   SNE      V1, #35         ; Skip if V1 != 53
$6BE    $5164   UNKNOWN  $5164           ; Unknown 5xxx instruction
$6C0    $719B   ADD      V1, #9B         ; Add 155 to V1
$6C2    $EC40   UNKNOWN  $EC40           ; Unknown Exxx instruction
$6C4    $E1E8   UNKNOWN  $E1E8           ; Unknown Exxx instruction
$6C6    $E3E9   UNKNOWN  $E3E9           ; Unknown Exxx instruction
$6C8    $EF1A   UNKNOWN  $EF1A           ; Unknown Exxx instruction
$6CA    $3861   SE       V8, #61         ; Skip if V8 == 97
$6CC    $DCAD   DRW      VC, VA, #D      ; Draw 13-byte sprite at VC, VA
$6CE    $B0CB   JP       V0, $0CB        ; Jump to V0 + 0CB
$6D0    $5597   UNKNOWN  $5597           ; Unknown 5xxx instruction
$6D2    $5784   UNKNOWN  $5784           ; Unknown 5xxx instruction
$6D4    $8B14   ADD      VB, V1          ; VB += V1, VF = carry
$6D6    $0FC0   SYS      $FC0            ; System call to FC0
$6D8    $5C82   UNKNOWN  $5C82           ; Unknown 5xxx instruction
$6DA    $9138   UNKNOWN  $9138           ; Unknown 9xxx instruction
$6DC    $6F15   LD       VF, #15         ; Load 21 into VF
$6DE    $8937   SUBN     V9, V3          ; V9 = V3 - V9, VF = !borrow
$6E0    $4F6A   SNE      VF, #6A         ; Skip if VF != 106
$6E2    $F46E   UNKNOWN  F46E            ; Unknown Fxxx instruction
$6E4    $3EA9   SE       VE, #A9         ; Skip if VE == 169
$6E6    $0175   SYS      $175            ; System call to 175
$6E8    $8897   SUBN     V8, V9          ; V8 = V9 - V8, VF = !borrow
$6EA    $0DC7   SYS      $DC7            ; System call to DC7
$6EC    $573B   UNKNOWN  $573B           ; Unknown 5xxx instruction
$6EE    $2665   CALL     $665            ; Call subroutine at 665
$6F0    $E67A   UNKNOWN  $E67A           ; Unknown Exxx instruction
$6F2    $7207   ADD      V2, #07         ; Add 7 to V2
$6F4    $41D7   SNE      V1, #D7         ; Skip if V1 != 215
$6F6    $1345   JP       $345            ; Jump to 345
$6F8    $1A52   JP       $A52            ; Jump to A52
$6FA    $5553   UNKNOWN  $5553           ; Unknown 5xxx instruction
$6FC    $6320   LD       V3, #20         ; Load 32 into V3
$6FE    $A651   LD       I, $651         ; Load 651 into I
$700    $5E2E   UNKNOWN  $5E2E           ; Unknown 5xxx instruction
$702    $3FCF   SE       VF, #CF         ; Skip if VF == 207
$704    $621E   LD       V2, #1E         ; Load 30 into V2
$706    $96E2   UNKNOWN  $96E2           ; Unknown 9xxx instruction
$708    $1D07   JP       $D07            ; Jump to D07
$70A    $24E4   CALL     $4E4            ; Call subroutine at 4E4
$70C    $6436   LD       V4, #36         ; Load 54 into V4
$70E    $35D4   SE       V5, #D4         ; Skip if V5 == 212
$710    $01E5   SYS      $1E5            ; System call to 1E5
$712    $60F3   LD       V0, #F3         ; Load 243 into V0
$714    $FF3C   UNKNOWN  FF3C            ; Unknown Fxxx instruction
$716    $50A8   UNKNOWN  $50A8           ; Unknown 5xxx instruction
$718    $41B7   SNE      V1, #B7         ; Skip if V1 != 183
$71A    $3E8E   SE       VE, #8E         ; Skip if VE == 142
$71C    $C520   RND      V5, #20         ; V5 = random & 20
$71E    $E17B   UNKNOWN  $E17B           ; Unknown Exxx instruction
$720    $A36C   LD       I, $36C         ; Load 36C into I
$722    $EA3A   UNKNOWN  $EA3A           ; Unknown Exxx instruction
$724    $D52E   DRW      V5, V2, #E      ; Draw 14-byte sprite at V5, V2
$726    $1657   JP       $657            ; Jump to 657
$728    $3783   SE       V7, #83         ; Skip if V7 == 131
$72A    $BF25   JP       V0, $F25        ; Jump to V0 + F25
$72C    $F8E4   UNKNOWN  F8E4            ; Unknown Fxxx instruction
$72E    $EE46   UNKNOWN  $EE46           ; Unknown Exxx instruction
$730    $5EAB   UNKNOWN  $5EAB           ; Unknown 5xxx instruction
$732    $6F8A   LD       VF, #8A         ; Load 138 into VF
$734    $295B   CALL     $95B            ; Call subroutine at 95B
$736    $C3EA   RND      V3, #EA         ; V3 = random & EA
$738    $1F41   JP       $F41            ; Jump to F41
$73A    $C667   RND      V6, #67         ; V6 = random & 67
$73C    $E5AD   UNKNOWN  $E5AD           ; Unknown Exxx instruction
$73E    $12C4   JP       $2C4            ; Jump to 2C4
$740    $679B   LD       V7, #9B         ; Load 155 into V7
$742    $C069   RND      V0, #69         ; V0 = random & 69
$744    $3A6D   SE       VA, #6D         ; Skip if VA == 109
$746    $B551   JP       V0, $551        ; Jump to V0 + 551
$748    $734B   ADD      V3, #4B         ; Add 75 to V3
$74A    $D85C   DRW      V8, V5, #C      ; Draw 12-byte sprite at V8, V5
$74C    $1F2B   JP       $F2B            ; Jump to F2B
$74E    $33F6   SE       V3, #F6         ; Skip if V3 == 246
$750    $4042   SNE      V0, #42         ; Skip if V0 != 66
$752    $0AA5   SYS      $AA5            ; System call to AA5
$754    $AB8B   LD       I, $B8B         ; Load B8B into I
$756    $57FF   UNKNOWN  $57FF           ; Unknown 5xxx instruction
$758    $A9D1   LD       I, $9D1         ; Load 9D1 into I
$75A    $5425   UNKNOWN  $5425           ; Unknown 5xxx instruction
$75C    $A092   LD       I, $092         ; Load 092 into I
$75E    $559C   UNKNOWN  $559C           ; Unknown 5xxx instruction
$760    $AC24   LD       I, $C24         ; Load C24 into I
$762    $748F   ADD      V4, #8F         ; Add 143 to V4
$764    $F149   UNKNOWN  F149            ; Unknown Fxxx instruction
$766    $54CE   UNKNOWN  $54CE           ; Unknown 5xxx instruction
$768    $C3F7   RND      V3, #F7         ; V3 = random & F7
$76A    $CE41   RND      VE, #41         ; VE = random & 41
$76C    $318A   SE       V1, #8A         ; Skip if V1 == 138
$76E    $6859   LD       V8, #59         ; Load 89 into V8
$770    $9133   UNKNOWN  $9133           ; Unknown 9xxx instruction
$772    $B209   JP       V0, $209        ; Jump to V0 + 209
$774    $875F   UNKNOWN  875F            ; Unknown 8xxx instruction
$776    $0F0A   SYS      $F0A            ; System call to F0A
$778    $5A47   UNKNOWN  $5A47           ; Unknown 5xxx instruction
$77A    $ACF7   LD       I, $CF7         ; Load CF7 into I
$77C    $B66E   JP       V0, $66E        ; Jump to V0 + 66E
$77E    $629F   LD       V2, #9F         ; Load 159 into V2
$780    $8913   XOR      V9, V1          ; V9 ^= V1
$782    $5F6E   UNKNOWN  $5F6E           ; Unknown 5xxx instruction
$784    $A821   LD       I, $821         ; Load 821 into I
$786    $F9E3   UNKNOWN  F9E3            ; Unknown Fxxx instruction
$788    $8579   UNKNOWN  8579            ; Unknown 8xxx instruction
$78A    $74F9   ADD      V4, #F9         ; Add 249 to V4
$78C    $674E   LD       V7, #4E         ; Load 78 into V7
$78E    $EFEC   UNKNOWN  $EFEC           ; Unknown Exxx instruction
$790    $5337   UNKNOWN  $5337           ; Unknown 5xxx instruction
$792    $EDF9   UNKNOWN  $EDF9           ; Unknown Exxx instruction
$794    $B837   JP       V0, $837        ; Jump to V0 + 837
$796    $0F94   SYS      $F94            ; System call to F94
$798    $7820   ADD      V8, #20         ; Add 32 to V8
$79A    $DD2A   DRW      VD, V2, #A      ; Draw 10-byte sprite at VD, V2
$79C    $B8DC   JP       V0, $8DC        ; Jump to V0 + 8DC
$79E    $3AE3   SE       VA, #E3         ; Skip if VA == 227
$7A0    $A02E   LD       I, $02E         ; Load 02E into I
$7A2    $971C   UNKNOWN  $971C           ; Unknown 9xxx instruction
$7A4    $A058   LD       I, $058         ; Load 058 into I
$7A6    $96BD   UNKNOWN  $96BD           ; Unknown 9xxx instruction
$7A8    $A4BF   LD       I, $4BF         ; Load 4BF into I
$7AA    $8CC0   LD       VC, VC          ; VC = VC
$7AC    $D0A7   DRW      V0, VA, #7      ; Draw 7-byte sprite at V0, VA
$7AE    $0331   SYS      $331            ; System call to 331
$7B0    $51FE   UNKNOWN  $51FE           ; Unknown 5xxx instruction
$7B2    $9F20   SNE      VF, V2          ; Skip if VF != V2
$7B4    $0CA4   SYS      $CA4            ; System call to CA4
$7B6    $9A37   UNKNOWN  $9A37           ; Unknown 9xxx instruction
$7B8    $097B   SYS      $97B            ; System call to 97B
$7BA    $4CCB   SNE      VC, #CB         ; Skip if VC != 203
$7BC    $0511   SYS      $511            ; System call to 511
$7BE    $2699   CALL     $699            ; Call subroutine at 699
$7C0    $34AD   SE       V4, #AD         ; Skip if V4 == 173
$7C2    $64EC   LD       V4, #EC         ; Load 236 into V4
$7C4    $8B25   SUB      VB, V2          ; VB -= V2, VF = !borrow
$7C6    $CE85   RND      VE, #85         ; VE = random & 85
$7C8    $3DD7   SE       VD, #D7         ; Skip if VD == 215
$7CA    $F09D   UNKNOWN  F09D            ; Unknown Fxxx instruction
$7CC    $D419   DRW      V4, V1, #9      ; Draw 9-byte sprite at V4, V1
$7CE    $1897   JP       $897            ; Jump to 897
$7D0    $2FD9   CALL     $FD9            ; Call subroutine at FD9
$7D2    $02CB   SYS      $2CB            ; System call to 2CB
$7D4    $B47A   JP       V0, $47A        ; Jump to V0 + 47A
$7D6    $7544   ADD      V5, #44         ; Add 68 to V5
$7D8    $7911   ADD      V9, #11         ; Add 17 to V9
$7DA    $3623   SE       V6, #23         ; Skip if V6 == 35
$7DC    $C882   RND      V8, #82         ; V8 = random & 82
$7DE    $2FC4   CALL     $FC4            ; Call subroutine at FC4
$7E0    $E2BA   UNKNOWN  $E2BA           ; Unknown Exxx instruction
$7E2    $1C91   JP       $C91            ; Jump to C91
$7E4    $9C8B   UNKNOWN  $9C8B           ; Unknown 9xxx instruction
$7E6    $9507   UNKNOWN  $9507           ; Unknown 9xxx instruction
$7E8    $DA2B   DRW      VA, V2, #B      ; Draw 11-byte sprite at VA, V2
$7EA    $55EC   UNKNOWN  $55EC           ; Unknown 5xxx instruction
$7EC    $962A   UNKNOWN  $962A           ; Unknown 9xxx instruction
$7EE    $8141   OR       V1, V4          ; V1 |= V4
$7F0    $5654   UNKNOWN  $5654           ; Unknown 5xxx instruction
$7F2    $396A   SE       V9, #6A         ; Skip if V9 == 106
$7F4    $9A13   UNKNOWN  $9A13           ; Unknown 9xxx instruction
$7F6    $33CD   SE       V3, #CD         ; Skip if V3 == 205
$7F8    $40A2   SNE      V0, #A2         ; Skip if V0 != 162
$7FA    $A07E   LD       I, $07E         ; Load 07E into I
$7FC    $4D5F   SNE      VD, #5F         ; Skip if VD != 95
$7FE    $24C4   CALL     $4C4            ; Call subroutine at 4C4
$800    $E1CE   UNKNOWN  $E1CE           ; Unknown Exxx instruction
$802    $C404   RND      V4, #04         ; V4 = random & 04
$804    $D333   DRW      V3, V3, #3      ; Draw 3-byte sprite at V3, V3
$806    $AC68   LD       I, $C68         ; Load C68 into I
$808    $5A82   UNKNOWN  $5A82           ; Unknown 5xxx instruction
$80A    $DE78   DRW      VE, V7, #8      ; Draw 8-byte sprite at VE, V7
$80C    $3B69   SE       VB, #69         ; Skip if VB == 105
$80E    $3AFB   SE       VA, #FB         ; Skip if VA == 251
$810    $2B11   CALL     $B11            ; Call subroutine at B11
$812    $D9E9   DRW      V9, VE, #9      ; Draw 9-byte sprite at V9, VE
$814    $3D08   SE       VD, #08         ; Skip if VD == 8
$816    $A303   LD       I, $303         ; Load 303 into I
$818    $DE3A   DRW      VE, V3, #A      ; Draw 10-byte sprite at VE, V3
$81A    $E8D7   UNKNOWN  $E8D7           ; Unknown Exxx instruction
$81C    $7AF4   ADD      VA, #F4         ; Add 244 to VA
$81E    $CC6A   RND      VC, #6A         ; VC = random & 6A
$820    $8F5F   UNKNOWN  8F5F            ; Unknown 8xxx instruction
$822    $3056   SE       V0, #56         ; Skip if V0 == 86
$824    $E826   UNKNOWN  $E826           ; Unknown Exxx instruction
$826    $2E51   CALL     $E51            ; Call subroutine at E51
$828    $E026   UNKNOWN  $E026           ; Unknown Exxx instruction
$82A    $055E   SYS      $55E            ; System call to 55E
$82C    $008F   SYS      $08F            ; System call to 08F
$82E    $DDAD   DRW      VD, VA, #D      ; Draw 13-byte sprite at VD, VA
$830    $176D   JP       $76D            ; Jump to 76D
$832    $A52A   LD       I, $52A         ; Load 52A into I
$834    $83AF   UNKNOWN  83AF            ; Unknown 8xxx instruction
$836    $B2DE   JP       V0, $2DE        ; Jump to V0 + 2DE
$838    $6E41   LD       VE, #41         ; Load 65 into VE
$83A    $8CA5   SUB      VC, VA          ; VC -= VA, VF = !borrow
$83C    $E2D0   UNKNOWN  $E2D0           ; Unknown Exxx instruction
$83E    $D586   DRW      V5, V8, #6      ; Draw 6-byte sprite at V5, V8
$840    $066F   SYS      $66F            ; System call to 66F
$842    $38DB   SE       V8, #DB         ; Skip if V8 == 219
$844    $86CF   UNKNOWN  86CF            ; Unknown 8xxx instruction
$846    $5748   UNKNOWN  $5748           ; Unknown 5xxx instruction
$848    $A8E6   LD       I, $8E6         ; Load 8E6 into I
$84A    $8EF9   UNKNOWN  8EF9            ; Unknown 8xxx instruction
$84C    $4B24   SNE      VB, #24         ; Skip if VB != 36
$84E    $4EAF   SNE      VE, #AF         ; Skip if VE != 175
$850    $058D   SYS      $58D            ; System call to 58D
$852    $587B   UNKNOWN  $587B           ; Unknown 5xxx instruction
$854    $B369   JP       V0, $369        ; Jump to V0 + 369
$856    $F0E5   UNKNOWN  F0E5            ; Unknown Fxxx instruction
$858    $7C5C   ADD      VC, #5C         ; Add 92 to VC
$85A    $C437   RND      V4, #37         ; V4 = random & 37
$85C    $D354   DRW      V3, V5, #4      ; Draw 4-byte sprite at V3, V5
$85E    $9453   UNKNOWN  $9453           ; Unknown 9xxx instruction
$860    $61A2   LD       V1, #A2         ; Load 162 into V1
$862    $E036   UNKNOWN  $E036           ; Unknown Exxx instruction
$864    $9C39   UNKNOWN  $9C39           ; Unknown 9xxx instruction
$866    $8543   XOR      V5, V4          ; V5 ^= V4
$868    $A373   LD       I, $373         ; Load 373 into I
$86A    $CF65   RND      VF, #65         ; VF = random & 65
$86C    $2D84   CALL     $D84            ; Call subroutine at D84
$86E    $D7CD   DRW      V7, VC, #D      ; Draw 13-byte sprite at V7, VC
$870    $2DEB   CALL     $DEB            ; Call subroutine at DEB
$872    $847C   UNKNOWN  847C            ; Unknown 8xxx instruction
$874    $26FD   CALL     $6FD            ; Call subroutine at 6FD
$876    $1E44   JP       $E44            ; Jump to E44
$878    $E9B0   UNKNOWN  $E9B0           ; Unknown Exxx instruction
$87A    $275E   CALL     $75E            ; Call subroutine at 75E
$87C    $FC2D   UNKNOWN  FC2D            ; Unknown Fxxx instruction
$87E    $E188   UNKNOWN  $E188           ; Unknown Exxx instruction
$880    $882A   UNKNOWN  882A            ; Unknown 8xxx instruction
$882    $E732   UNKNOWN  $E732           ; Unknown Exxx instruction
$884    $7C4F   ADD      VC, #4F         ; Add 79 to VC
$886    $4966   SNE      V9, #66         ; Skip if V9 != 102
$888    $7225   ADD      V2, #25         ; Add 37 to V2
$88A    $ED29   UNKNOWN  $ED29           ; Unknown Exxx instruction
$88C    $B990   JP       V0, $990        ; Jump to V0 + 990
$88E    $2A23   CALL     $A23            ; Call subroutine at A23
$890    $8138   UNKNOWN  8138            ; Unknown 8xxx instruction
$892    $F4D6   UNKNOWN  F4D6            ; Unknown Fxxx instruction
$894    $4C4E   SNE      VC, #4E         ; Skip if VC != 78
$896    $04E5   SYS      $4E5            ; System call to 4E5
$898    $7074   ADD      V0, #74         ; Add 116 to V0
$89A    $FDF2   UNKNOWN  FDF2            ; Unknown Fxxx instruction
$89C    $3309   SE       V3, #09         ; Skip if V3 == 9
$89E    $58F6   UNKNOWN  $58F6           ; Unknown 5xxx instruction
$8A0    $224A   CALL     $24A            ; Call subroutine at 24A
$8A2    $9977   UNKNOWN  $9977           ; Unknown 9xxx instruction
$8A4    $2608   CALL     $608            ; Call subroutine at 608
$8A6    $09C0   SYS      $9C0            ; System call to 9C0
$8A8    $222F   CALL     $22F            ; Call subroutine at 22F
$8AA    $8B58   UNKNOWN  8B58            ; Unknown 8xxx instruction
$8AC    $4D51   SNE      VD, #51         ; Skip if VD != 81
$8AE    $2165   CALL     $165            ; Call subroutine at 165
$8B0    $42E9   SNE      V2, #E9         ; Skip if V2 != 233
$8B2    $0607   SYS      $607            ; System call to 607
$8B4    $5ADF   UNKNOWN  $5ADF           ; Unknown 5xxx instruction
$8B6    $29E7   CALL     $9E7            ; Call subroutine at 9E7
$8B8    $D37C   DRW      V3, V7, #C      ; Draw 12-byte sprite at V3, V7
$8BA    $A3DF   LD       I, $3DF         ; Load 3DF into I
$8BC    $1207   JP       $207            ; Jump to 207
$8BE    $5817   UNKNOWN  $5817           ; Unknown 5xxx instruction
$8C0    $B5AE   JP       V0, $5AE        ; Jump to V0 + 5AE
$8C2    $D1AA   DRW      V1, VA, #A      ; Draw 10-byte sprite at V1, VA
$8C4    $DEB8   DRW      VE, VB, #8      ; Draw 8-byte sprite at VE, VB
$8C6    $C4BD   RND      V4, #BD         ; V4 = random & BD
$8C8    $D677   DRW      V6, V7, #7      ; Draw 7-byte sprite at V6, V7
$8CA    $F80E   UNKNOWN  F80E            ; Unknown Fxxx instruction
$8CC    $CBB5   RND      VB, #B5         ; VB = random & B5
$8CE    $65A2   LD       V5, #A2         ; Load 162 into V5
$8D0    $80BE   SHL      V0              ; V0 <<= 1, VF = MSB
$8D2    $7B47   ADD      VB, #47         ; Add 71 to VB
$8D4    $023F   SYS      $23F            ; System call to 23F
$8D6    $03F0   SYS      $3F0            ; System call to 3F0
$8D8    $95FF   UNKNOWN  $95FF           ; Unknown 9xxx instruction
$8DA    $EF41   UNKNOWN  $EF41           ; Unknown Exxx instruction
$8DC    $4521   SNE      V5, #21         ; Skip if V5 != 33
$8DE    $8B7C   UNKNOWN  8B7C            ; Unknown 8xxx instruction
$8E0    $962C   UNKNOWN  $962C           ; Unknown 9xxx instruction
$8E2    $9EB4   UNKNOWN  $9EB4           ; Unknown 9xxx instruction
$8E4    $8C7B   UNKNOWN  8C7B            ; Unknown 8xxx instruction
$8E6    $6CC8   LD       VC, #C8         ; Load 200 into VC
$8E8    $DCD1   DRW      VC, VD, #1      ; Draw 1-byte sprite at VC, VD
$8EA    $0B67   SYS      $B67            ; System call to B67
$8EC    $9325   UNKNOWN  $9325           ; Unknown 9xxx instruction
$8EE    $46D6   SNE      V6, #D6         ; Skip if V6 != 214
$8F0    $924F   UNKNOWN  $924F           ; Unknown 9xxx instruction
$8F2    $3CBF   SE       VC, #BF         ; Skip if VC == 191
$8F4    $024E   SYS      $24E            ; System call to 24E
$8F6    $E918   UNKNOWN  $E918           ; Unknown Exxx instruction
$8F8    $872B   UNKNOWN  872B            ; Unknown 8xxx instruction
$8FA    $18DB   JP       $8DB            ; Jump to 8DB
$8FC    $AC10   LD       I, $C10         ; Load C10 into I
$8FE    $A7F2   LD       I, $7F2         ; Load 7F2 into I
$900    $EF2A   UNKNOWN  $EF2A           ; Unknown Exxx instruction
$902    $65FE   LD       V5, #FE         ; Load 254 into V5
$904    $7553   ADD      V5, #53         ; Add 83 to V5
$906    $48EA   SNE      V8, #EA         ; Skip if V8 != 234
$908    $92EB   UNKNOWN  $92EB           ; Unknown 9xxx instruction
$90A    $AA9B   LD       I, $A9B         ; Load A9B into I
$90C    $6A62   LD       VA, #62         ; Load 98 into VA
$90E    $5E46   UNKNOWN  $5E46           ; Unknown 5xxx instruction
$910    $7FE1   ADD      VF, #E1         ; Add 225 to VF
$912    $3E64   SE       VE, #64         ; Skip if VE == 100
$914    $D602   DRW      V6, V0, #2      ; Draw 2-byte sprite at V6, V0
$916    $1A44   JP       $A44            ; Jump to A44
$918    $81DB   UNKNOWN  81DB            ; Unknown 8xxx instruction
$91A    $F4C4   UNKNOWN  F4C4            ; Unknown Fxxx instruction
$91C    $2695   CALL     $695            ; Call subroutine at 695
$91E    $C2F8   RND      V2, #F8         ; V2 = random & F8
$920    $A94A   LD       I, $94A         ; Load 94A into I
$922    $FA0C   UNKNOWN  FA0C            ; Unknown Fxxx instruction
$924    $4812   SNE      V8, #12         ; Skip if V8 != 18
$926    $A7DB   LD       I, $7DB         ; Load 7DB into I
$928    $AE4C   LD       I, $E4C         ; Load E4C into I
$92A    $AC4D   LD       I, $C4D         ; Load C4D into I
$92C    $78C0   ADD      V8, #C0         ; Add 192 to V8
$92E    $C9F6   RND      V9, #F6         ; V9 = random & F6
$930    $2284   CALL     $284            ; Call subroutine at 284
$932    $D84A   DRW      V8, V4, #A      ; Draw 10-byte sprite at V8, V4
$934    $02E8   SYS      $2E8            ; System call to 2E8
$936    $019D   SYS      $19D            ; System call to 19D
$938    $464E   SNE      V6, #4E         ; Skip if V6 != 78
$93A    $120E   JP       $20E            ; Jump to 20E
$93C    $7B6D   ADD      VB, #6D         ; Add 109 to VB
$93E    $48D2   SNE      V8, #D2         ; Skip if V8 != 210
$940    $8B79   UNKNOWN  8B79            ; Unknown 8xxx instruction
$942    $0D63   SYS      $D63            ; System call to D63
$944    $B48C   JP       V0, $48C        ; Jump to V0 + 48C
$946    $7C1C   ADD      VC, #1C         ; Add 28 to VC
$948    $1CAC   JP       $CAC            ; Jump to CAC
$94A    $7413   ADD      V4, #13         ; Add 19 to V4
$94C    $C89A   RND      V8, #9A         ; V8 = random & 9A
$94E    $A212   LD       I, $212         ; Load 212 into I
$950    $CF39   RND      VF, #39         ; VF = random & 39
$952    $25DC   CALL     $5DC            ; Call subroutine at 5DC
$954    $F2C4   UNKNOWN  F2C4            ; Unknown Fxxx instruction
$956    $B5B8   JP       V0, $5B8        ; Jump to V0 + 5B8
$958    $A669   LD       I, $669         ; Load 669 into I
$95A    $B4A8   JP       V0, $4A8        ; Jump to V0 + 4A8
$95C    $5278   UNKNOWN  $5278           ; Unknown 5xxx instruction
$95E    $E799   UNKNOWN  $E799           ; Unknown Exxx instruction
$960    $AE11   LD       I, $E11         ; Load E11 into I
$962    $43D0   SNE      V3, #D0         ; Skip if V3 != 208
$964    $239E   CALL     $39E            ; Call subroutine at 39E
$966    $BA1E   JP       V0, $A1E        ; Jump to V0 + A1E
$968    $F13C   UNKNOWN  F13C            ; Unknown Fxxx instruction
$96A    $28AA   CALL     $8AA            ; Call subroutine at 8AA
$96C    $B73A   JP       V0, $73A        ; Jump to V0 + 73A
$96E    $E0CE   UNKNOWN  $E0CE           ; Unknown Exxx instruction
$970    $EB07   UNKNOWN  $EB07           ; Unknown Exxx instruction
$972    $EDE5   UNKNOWN  $EDE5           ; Unknown Exxx instruction
$974    $5A56   UNKNOWN  $5A56           ; Unknown 5xxx instruction
$976    $AC75   LD       I, $C75         ; Load C75 into I
$978    $FE3A   UNKNOWN  FE3A            ; Unknown Fxxx instruction
$97A    $4435   SNE      V4, #35         ; Skip if V4 != 53
$97C    $95D2   UNKNOWN  $95D2           ; Unknown 9xxx instruction
$97E    $7146   ADD      V1, #46         ; Add 70 to V1
$980    $13AD   JP       $3AD            ; Jump to 3AD
$982    $432B   SNE      V3, #2B         ; Skip if V3 != 43
$984    $088E   SYS      $88E            ; System call to 88E
$986    $A371   LD       I, $371         ; Load 371 into I
$988    $82AD   UNKNOWN  82AD            ; Unknown 8xxx instruction
$98A    $DDDD   DRW      VD, VD, #D      ; Draw 13-byte sprite at VD, VD
$98C    $B6B5   JP       V0, $6B5        ; Jump to V0 + 6B5
$98E    $9D5D   UNKNOWN  $9D5D           ; Unknown 9xxx instruction
$990    $5FD4   UNKNOWN  $5FD4           ; Unknown 5xxx instruction
$992    $4A5E   SNE      VA, #5E         ; Skip if VA != 94
$994    $8F6D   UNKNOWN  8F6D            ; Unknown 8xxx instruction
$996    $A0EF   LD       I, $0EF         ; Load 0EF into I
$998    $9750   SNE      V7, V5          ; Skip if V7 != V5
$99A    $D380   DRW      V3, V8, #0      ; Draw 0-byte sprite at V3, V8
$99C    $9D5A   UNKNOWN  $9D5A           ; Unknown 9xxx instruction
$99E    $218A   CALL     $18A            ; Call subroutine at 18A
$9A0    $344C   SE       V4, #4C         ; Skip if V4 == 76
$9A2    $BC84   JP       V0, $C84        ; Jump to V0 + C84
$9A4    $A054   LD       I, $054         ; Load 054 into I
$9A6    $6F11   LD       VF, #11         ; Load 17 into VF
$9A8    $1EC2   JP       $EC2            ; Jump to EC2
$9AA    $437E   SNE      V3, #7E         ; Skip if V3 != 126
$9AC    $F23A   UNKNOWN  F23A            ; Unknown Fxxx instruction
$9AE    $0D65   SYS      $D65            ; System call to D65
$9B0    $289B   CALL     $89B            ; Call subroutine at 89B
$9B2    $8669   UNKNOWN  8669            ; Unknown 8xxx instruction
$9B4    $6AFD   LD       VA, #FD         ; Load 253 into VA
$9B6    $5936   UNKNOWN  $5936           ; Unknown 5xxx instruction
$9B8    $9EC1   UNKNOWN  $9EC1           ; Unknown 9xxx instruction
$9BA    $3EFB   SE       VE, #FB         ; Skip if VE == 251
$9BC    $A96D   LD       I, $96D         ; Load 96D into I
$9BE    $D3C1   DRW      V3, VC, #1      ; Draw 1-byte sprite at V3, VC
$9C0    $4EDC   SNE      VE, #DC         ; Skip if VE != 220
$9C2    $316E   SE       V1, #6E         ; Skip if V1 == 110
$9C4    $99CE   UNKNOWN  $99CE           ; Unknown 9xxx instruction
$9C6    $AED1   LD       I, $ED1         ; Load ED1 into I
$9C8    $1FD8   JP       $FD8            ; Jump to FD8
$9CA    $A65D   LD       I, $65D         ; Load 65D into I
$9CC    $E8FF   UNKNOWN  $E8FF           ; Unknown Exxx instruction
$9CE    $FF69   UNKNOWN  FF69            ; Unknown Fxxx instruction
$9D0    $9AC1   UNKNOWN  $9AC1           ; Unknown 9xxx instruction
$9D2    $C241   RND      V2, #41         ; V2 = random & 41
$9D4    $3A9B   SE       VA, #9B         ; Skip if VA == 155
$9D6    $33A1   SE       V3, #A1         ; Skip if V3 == 161
$9D8    $CDEA   RND      VD, #EA         ; VD = random & EA
$9DA    $2865   CALL     $865            ; Call subroutine at 865
$9DC    $D0FE   DRW      V0, VF, #E      ; Draw 14-byte sprite at V0, VF
$9DE    $6E82   LD       VE, #82         ; Load 130 into VE
$9E0    $668C   LD       V6, #8C         ; Load 140 into V6
$9E2    $03B5   SYS      $3B5            ; System call to 3B5
$9E4    $5092   UNKNOWN  $5092           ; Unknown 5xxx instruction
$9E6    $C051   RND      V0, #51         ; V0 = random & 51
$9E8    $5723   UNKNOWN  $5723           ; Unknown 5xxx instruction
$9EA    $75AD   ADD      V5, #AD         ; Add 173 to V5
$9EC    $78E3   ADD      V8, #E3         ; Add 227 to V8
$9EE    $0602   SYS      $602            ; System call to 602
$9F0    $5951   UNKNOWN  $5951           ; Unknown 5xxx instruction
$9F2    $0763   SYS      $763            ; System call to 763
$9F4    $AD94   LD       I, $D94         ; Load D94 into I
$9F6    $EF52   UNKNOWN  $EF52           ; Unknown Exxx instruction
$9F8    $2706   CALL     $706            ; Call subroutine at 706
$9FA    $60C7   LD       V0, #C7         ; Load 199 into V0
$9FC    $BBB9   JP       V0, $BB9        ; Jump to V0 + BB9
$9FE    $604C   LD       V0, #4C         ; Load 76 into V0
$A00    $0677   SYS      $677            ; System call to 677
$A02    $2858   CALL     $858            ; Call subroutine at 858
$A04    $8DE3   XOR      VD, VE          ; VD ^= VE
$A06    $3397   SE       V3, #97         ; Skip if V3 == 151
$A08    $852D   UNKNOWN  852D            ; Unknown 8xxx instruction
$A0A    $95F2   UNKNOWN  $95F2           ; Unknown 9xxx instruction
$A0C    $648E   LD       V4, #8E         ; Load 142 into V4
$A0E    $875E   SHL      V7              ; V7 <<= 1, VF = MSB
$A10    $0AC7   SYS      $AC7            ; System call to AC7
$A12    $1C17   JP       $C17            ; Jump to C17
$A14    $7068   ADD      V0, #68         ; Add 104 to V0
$A16    $6905   LD       V9, #05         ; Load 5 into V9
$A18    $E182   UNKNOWN  $E182           ; Unknown Exxx instruction
$A1A    $B1F1   JP       V0, $1F1        ; Jump to V0 + 1F1
$A1C    $AAC6   LD       I, $AC6         ; Load AC6 into I
$A1E    $FF49   UNKNOWN  FF49            ; Unknown Fxxx instruction
$A20    $D47B   DRW      V4, V7, #B      ; Draw 11-byte sprite at V4, V7
$A22    $3EBD   SE       VE, #BD         ; Skip if VE == 189
$A24    $EE6D   UNKNOWN  $EE6D           ; Unknown Exxx instruction
$A26    $FE4F   UNKNOWN  FE4F            ; Unknown Fxxx instruction
$A28    $E021   UNKNOWN  $E021           ; Unknown Exxx instruction
$A2A    $6548   LD       V5, #48         ; Load 72 into V5
$A2C    $5D3F   UNKNOWN  $5D3F           ; Unknown 5xxx instruction
$A2E    $9328   UNKNOWN  $9328           ; Unknown 9xxx instruction
$A30    $0627   SYS      $627            ; System call to 627
$A32    $5F04   UNKNOWN  $5F04           ; Unknown 5xxx instruction
$A34    $F4F3   UNKNOWN  F4F3            ; Unknown Fxxx instruction
$A36    $3508   SE       V5, #08         ; Skip if V5 == 8
$A38    $5C95   UNKNOWN  $5C95           ; Unknown 5xxx instruction
$A3A    $CD8D   RND      VD, #8D         ; VD = random & 8D
$A3C    $CDDF   RND      VD, #DF         ; VD = random & DF
$A3E    $C837   RND      V8, #37         ; V8 = random & 37
$A40    $2A4D   CALL     $A4D            ; Call subroutine at A4D
$A42    $EA21   UNKNOWN  $EA21           ; Unknown Exxx instruction
$A44    $77BA   ADD      V7, #BA         ; Add 186 to V7
$A46    $E96F   UNKNOWN  $E96F           ; Unknown Exxx instruction
$A48    $D016   DRW      V0, V1, #6      ; Draw 6-byte sprite at V0, V1
$A4A    $BA1E   JP       V0, $A1E        ; Jump to V0 + A1E
$A4C    $2CDD   CALL     $CDD            ; Call subroutine at CDD
$A4E    $5892   UNKNOWN  $5892           ; Unknown 5xxx instruction
$A50    $F3F3   UNKNOWN  F3F3            ; Unknown Fxxx instruction
$A52    $7CA0   ADD      VC, #A0         ; Add 160 to VC
$A54    $1313   JP       $313            ; Jump to 313
$A56    $229D   CALL     $29D            ; Call subroutine at 29D
$A58    $A9CF   LD       I, $9CF         ; Load 9CF into I
$A5A    $343C   SE       V4, #3C         ; Skip if V4 == 60
$A5C    $D2A0   DRW      V2, VA, #0      ; Draw 0-byte sprite at V2, VA
$A5E    $9A4D   UNKNOWN  $9A4D           ; Unknown 9xxx instruction
$A60    $0A23   SYS      $A23            ; System call to A23
$A62    $0E12   SYS      $E12            ; System call to E12
$A64    $0294   SYS      $294            ; System call to 294
$A66    $7FBF   ADD      VF, #BF         ; Add 191 to VF
$A68    $1C8D   JP       $C8D            ; Jump to C8D
$A6A    $0D3B   SYS      $D3B            ; System call to D3B
$A6C    $AA7C   LD       I, $A7C         ; Load A7C into I
$A6E    $4ACF   SNE      VA, #CF         ; Skip if VA != 207
$A70    $F2BA   UNKNOWN  F2BA            ; Unknown Fxxx instruction
$A72    $BBA6   JP       V0, $BA6        ; Jump to V0 + BA6
$A74    $3DF0   SE       VD, #F0         ; Skip if VD == 240
$A76    $60FD   LD       V0, #FD         ; Load 253 into V0
$A78    $31A8   SE       V1, #A8         ; Skip if V1 == 168
$A7A    $8DA7   SUBN     VD, VA          ; VD = VA - VD, VF = !borrow
$A7C    $83C6   SHR      V3              ; V3 >>= 1, VF = LSB
$A7E    $15CE   JP       $5CE            ; Jump to 5CE
$A80    $2C53   CALL     $C53            ; Call subroutine at C53
$A82    $DC43   DRW      VC, V4, #3      ; Draw 3-byte sprite at VC, V4
$A84    $E4F3   UNKNOWN  $E4F3           ; Unknown Exxx instruction
$A86    $49A7   SNE      V9, #A7         ; Skip if V9 != 167
$A88    $DB24   DRW      VB, V2, #4      ; Draw 4-byte sprite at VB, V2
$A8A    $58B5   UNKNOWN  $58B5           ; Unknown 5xxx instruction
$A8C    $ACE0   LD       I, $CE0         ; Load CE0 into I
$A8E    $31E2   SE       V1, #E2         ; Skip if V1 == 226
$A90    $4363   SNE      V3, #63         ; Skip if V3 != 99
$A92    $947F   UNKNOWN  $947F           ; Unknown 9xxx instruction
$A94    $3D71   SE       VD, #71         ; Skip if VD == 113
$A96    $2B4D   CALL     $B4D            ; Call subroutine at B4D
$A98    $CDCB   RND      VD, #CB         ; VD = random & CB
$A9A    $6060   LD       V0, #60         ; Load 96 into V0
$A9C    $D14A   DRW      V1, V4, #A      ; Draw 10-byte sprite at V1, V4
$A9E    $BE40   JP       V0, $E40        ; Jump to V0 + E40
$AA0    $C745   RND      V7, #45         ; V7 = random & 45
$AA2    $FBAF   UNKNOWN  FBAF            ; Unknown Fxxx instruction
$AA4    $1003   JP       $003            ; Jump to 003
$AA6    $5982   UNKNOWN  $5982           ; Unknown 5xxx instruction
$AA8    $B3A5   JP       V0, $3A5        ; Jump to V0 + 3A5
$AAA    $4F5B   SNE      VF, #5B         ; Skip if VF != 91
$AAC    $1173   JP       $173            ; Jump to 173
$AAE    $3FA6   SE       VF, #A6         ; Skip if VF == 166
$AB0    $BEF4   JP       V0, $EF4        ; Jump to V0 + EF4
$AB2    $C0A1   RND      V0, #A1         ; V0 = random & A1
$AB4    $F098   UNKNOWN  F098            ; Unknown Fxxx instruction
$AB6    $FB6B   UNKNOWN  FB6B            ; Unknown Fxxx instruction
$AB8    $4258   SNE      V2, #58         ; Skip if V2 != 88
$ABA    $EECA   UNKNOWN  $EECA           ; Unknown Exxx instruction
$ABC    $7638   ADD      V6, #38         ; Add 56 to V6
$ABE    $0819   SYS      $819            ; System call to 819
$AC0    $60F2   LD       V0, #F2         ; Load 242 into V0
$AC2    $70AD   ADD      V0, #AD         ; Add 173 to V0
$AC4    $8917   SUBN     V9, V1          ; V9 = V1 - V9, VF = !borrow
$AC6    $521E   UNKNOWN  $521E           ; Unknown 5xxx instruction
$AC8    $A2D0   LD       I, $2D0         ; Load 2D0 into I
$ACA    $2CAE   CALL     $CAE            ; Call subroutine at CAE
$ACC    $5E99   UNKNOWN  $5E99           ; Unknown 5xxx instruction
$ACE    $1984   JP       $984            ; Jump to 984
$AD0    $095D   SYS      $95D            ; System call to 95D
$AD2    $1A4E   JP       $A4E            ; Jump to A4E
$AD4    $1BE1   JP       $BE1            ; Jump to BE1
$AD6    $2B2C   CALL     $B2C            ; Call subroutine at B2C
$AD8    $0389   SYS      $389            ; System call to 389
$ADA    $2A82   CALL     $A82            ; Call subroutine at A82
$ADC    $6245   LD       V2, #45         ; Load 69 into V2
$ADE    $87EA   UNKNOWN  87EA            ; Unknown 8xxx instruction
$AE0    $CB7F   RND      VB, #7F         ; VB = random & 7F
$AE2    $D268   DRW      V2, V6, #8      ; Draw 8-byte sprite at V2, V6
$AE4    $4AA1   SNE      VA, #A1         ; Skip if VA != 161
$AE6    $FDEB   UNKNOWN  FDEB            ; Unknown Fxxx instruction
$AE8    $12B9   JP       $2B9            ; Jump to 2B9
$AEA    $762F   ADD      V6, #2F         ; Add 47 to V6
$AEC    $75D9   ADD      V5, #D9         ; Add 217 to V5
$AEE    $9B2A   UNKNOWN  $9B2A           ; Unknown 9xxx instruction
$AF0    $EC39   UNKNOWN  $EC39           ; Unknown Exxx instruction
$AF2    $FAA6   UNKNOWN  FAA6            ; Unknown Fxxx instruction
$AF4    $BFF6   JP       V0, $FF6        ; Jump to V0 + FF6
$AF6    $11FD   JP       $1FD            ; Jump to 1FD
$AF8    $8D01   OR       VD, V0          ; VD |= V0
$AFA    $6DB5   LD       VD, #B5         ; Load 181 into VD
$AFC    $70AA   ADD      V0, #AA         ; Add 170 to V0
$AFE    $1141   JP       $141            ; Jump to 141
$B00    $2199   CALL     $199            ; Call subroutine at 199
$B02    $383F   SE       V8, #3F         ; Skip if V8 == 63
$B04    $F99F   UNKNOWN  F99F            ; Unknown Fxxx instruction
$B06    $78D9   ADD      V8, #D9         ; Add 217 to V8
$B08    $3322   SE       V3, #22         ; Skip if V3 == 34
$B0A    $1F57   JP       $F57            ; Jump to F57
$B0C    $0A61   SYS      $A61            ; System call to A61
$B0E    $2068   CALL     $068            ; Call subroutine at 068
$B10    $FBCB   UNKNOWN  FBCB            ; Unknown Fxxx instruction
$B12    $3566   SE       V5, #66         ; Skip if V5 == 102
$B14    $F359   UNKNOWN  F359            ; Unknown Fxxx instruction
$B16    $7184   ADD      V1, #84         ; Add 132 to V1
$B18    $1CDE   JP       $CDE            ; Jump to CDE
$B1A    $EA47   UNKNOWN  $EA47           ; Unknown Exxx instruction
$B1C    $D324   DRW      V3, V2, #4      ; Draw 4-byte sprite at V3, V2
$B1E    $6542   LD       V5, #42         ; Load 66 into V5
$B20    $5D32   UNKNOWN  $5D32           ; Unknown 5xxx instruction
$B22    $CD99   RND      VD, #99         ; VD = random & 99
$B24    $89FF   UNKNOWN  89FF            ; Unknown 8xxx instruction
$B26    $4F2D   SNE      VF, #2D         ; Skip if VF != 45
$B28    $F4AE   UNKNOWN  F4AE            ; Unknown Fxxx instruction
$B2A    $C79C   RND      V7, #9C         ; V7 = random & 9C
$B2C    $7852   ADD      V8, #52         ; Add 82 to V8
$B2E    $0A25   SYS      $A25            ; System call to A25
$B30    $644E   LD       V4, #4E         ; Load 78 into V4
$B32    $BC8A   JP       V0, $C8A        ; Jump to V0 + C8A
$B34    $F3AE   UNKNOWN  F3AE            ; Unknown Fxxx instruction
$B36    $5824   UNKNOWN  $5824           ; Unknown 5xxx instruction
$B38    $D920   DRW      V9, V2, #0      ; Draw 0-byte sprite at V9, V2
$B3A    $CCE2   RND      VC, #E2         ; VC = random & E2
$B3C    $B6AF   JP       V0, $6AF        ; Jump to V0 + 6AF
$B3E    $026B   SYS      $26B            ; System call to 26B
$B40    $6DDC   LD       VD, #DC         ; Load 220 into VD
$B42    $102B   JP       $02B            ; Jump to 02B
$B44    $1172   JP       $172            ; Jump to 172
$B46    $6E4F   LD       VE, #4F         ; Load 79 into VE
$B48    $4462   SNE      V4, #62         ; Skip if V4 != 98
$B4A    $7524   ADD      V5, #24         ; Add 36 to V5
$B4C    $1BC7   JP       $BC7            ; Jump to BC7
$B4E    $43B1   SNE      V3, #B1         ; Skip if V3 != 177
$B50    $CF3C   RND      VF, #3C         ; VF = random & 3C
$B52    $07FA   SYS      $7FA            ; System call to 7FA
$B54    $6AF0   LD       VA, #F0         ; Load 240 into VA
$B56    $11FE   JP       $1FE            ; Jump to 1FE
$B58    $7EDA   ADD      VE, #DA         ; Add 218 to VE
$B5A    $67E6   LD       V7, #E6         ; Load 230 into V7
$B5C    $D2F9   DRW      V2, VF, #9      ; Draw 9-byte sprite at V2, VF
$B5E    $9B0C   UNKNOWN  $9B0C           ; Unknown 9xxx instruction
$B60    $1B50   JP       $B50            ; Jump to B50
$B62    $30D1   SE       V0, #D1         ; Skip if V0 == 209
$B64    $912A   UNKNOWN  $912A           ; Unknown 9xxx instruction
$B66    $F605   UNKNOWN  F605            ; Unknown Fxxx instruction
$B68    $84B2   AND      V4, VB          ; V4 &= VB
$B6A    $E37E   UNKNOWN  $E37E           ; Unknown Exxx instruction
$B6C    $E3FC   UNKNOWN  $E3FC           ; Unknown Exxx instruction
$B6E    $1BDA   JP       $BDA            ; Jump to BDA
$B70    $1EF4   JP       $EF4            ; Jump to EF4
$B72    $95CC   UNKNOWN  $95CC           ; Unknown 9xxx instruction
$B74    $BE6E   JP       V0, $E6E        ; Jump to V0 + E6E
$B76    $8943   XOR      V9, V4          ; V9 ^= V4
$B78    $E6F6   UNKNOWN  $E6F6           ; Unknown Exxx instruction
$B7A    $09F4   SYS      $9F4            ; System call to 9F4
$B7C    $F429   LD       F, V4           ; I = sprite address for digit V4
$B7E    $ED10   UNKNOWN  $ED10           ; Unknown Exxx instruction
$B80    $83F0   LD       V3, VF          ; V3 = VF
$B82    $FECD   UNKNOWN  FECD            ; Unknown Fxxx instruction
$B84    $EE14   UNKNOWN  $EE14           ; Unknown Exxx instruction
$B86    $F31F   UNKNOWN  F31F            ; Unknown Fxxx instruction
$B88    $918C   UNKNOWN  $918C           ; Unknown 9xxx instruction
$B8A    $A87B   LD       I, $87B         ; Load 87B into I
$B8C    $EAB5   UNKNOWN  $EAB5           ; Unknown Exxx instruction
$B8E    $AAA4   LD       I, $AA4         ; Load AA4 into I
$B90    $4C43   SNE      VC, #43         ; Skip if VC != 67
$B92    $D71B   DRW      V7, V1, #B      ; Draw 11-byte sprite at V7, V1
$B94    $3FBD   SE       VF, #BD         ; Skip if VF == 189
$B96    $9561   UNKNOWN  $9561           ; Unknown 9xxx instruction
$B98    $1655   JP       $655            ; Jump to 655
$B9A    $5C9C   UNKNOWN  $5C9C           ; Unknown 5xxx instruction
$B9C    $A9B2   LD       I, $9B2         ; Load 9B2 into I
$B9E    $23EB   CALL     $3EB            ; Call subroutine at 3EB
$BA0    $CA7E   RND      VA, #7E         ; VA = random & 7E
$BA2    $E4C1   UNKNOWN  $E4C1           ; Unknown Exxx instruction
$BA4    $7DAE   ADD      VD, #AE         ; Add 174 to VD
$BA6    $EA89   UNKNOWN  $EA89           ; Unknown Exxx instruction
$BA8    $0E1C   SYS      $E1C            ; System call to E1C
$BAA    $52F5   UNKNOWN  $52F5           ; Unknown 5xxx instruction
$BAC    $5387   UNKNOWN  $5387           ; Unknown 5xxx instruction
$BAE    $564B   UNKNOWN  $564B           ; Unknown 5xxx instruction
$BB0    $2D72   CALL     $D72            ; Call subroutine at D72
$BB2    $9FEB   UNKNOWN  $9FEB           ; Unknown 9xxx instruction
$BB4    $5342   UNKNOWN  $5342           ; Unknown 5xxx instruction
$BB6    $11F8   JP       $1F8            ; Jump to 1F8
$BB8    $2DDA   CALL     $DDA            ; Call subroutine at DDA
$BBA    $5036   UNKNOWN  $5036           ; Unknown 5xxx instruction
$BBC    $5CDA   UNKNOWN  $5CDA           ; Unknown 5xxx instruction
$BBE    $B21A   JP       V0, $21A        ; Jump to V0 + 21A
$BC0    $FDEC   UNKNOWN  FDEC            ; Unknown Fxxx instruction
$BC2    $4454   SNE      V4, #54         ; Skip if V4 != 84
$BC4    $C45A   RND      V4, #5A         ; V4 = random & 5A
$BC6    $96FF   UNKNOWN  $96FF           ; Unknown 9xxx instruction
$BC8    $EF23   UNKNOWN  $EF23           ; Unknown Exxx instruction
$BCA    $1025   JP       $025            ; Jump to 025
$BCC    $A2E1   LD       I, $2E1         ; Load 2E1 into I
$BCE    $EC82   UNKNOWN  $EC82           ; Unknown Exxx instruction
$BD0    $6E8F   LD       VE, #8F         ; Load 143 into VE
$BD2    $50C0   SE       V0, VC          ; Skip if V0 == VC
$BD4    $2346   CALL     $346            ; Call subroutine at 346
$BD6    $D57E   DRW      V5, V7, #E      ; Draw 14-byte sprite at V5, V7
$BD8    $2B48   CALL     $B48            ; Call subroutine at B48
$BDA    $8A42   AND      VA, V4          ; VA &= V4
$BDC    $F1D5   UNKNOWN  F1D5            ; Unknown Fxxx instruction
$BDE    $60D7   LD       V0, #D7         ; Load 215 into V0
$BE0    $924F   UNKNOWN  $924F           ; Unknown 9xxx instruction
$BE2    $CC2B   RND      VC, #2B         ; VC = random & 2B
$BE4    $3A39   SE       VA, #39         ; Skip if VA == 57
$BE6    $0E79   SYS      $E79            ; System call to E79
$BE8    $3655   SE       V6, #55         ; Skip if V6 == 85
$BEA    $D7EB   DRW      V7, VE, #B      ; Draw 11-byte sprite at V7, VE
$BEC    $686C   LD       V8, #6C         ; Load 108 into V8
$BEE    $73DC   ADD      V3, #DC         ; Add 220 to V3
$BF0    $A278   LD       I, $278         ; Load 278 into I
$BF2    $5933   UNKNOWN  $5933           ; Unknown 5xxx instruction
$BF4    $CB2C   RND      VB, #2C         ; VB = random & 2C
$BF6    $762E   ADD      V6, #2E         ; Add 46 to V6
$BF8    $AEAF   LD       I, $EAF         ; Load EAF into I
$BFA    $8D5F   UNKNOWN  8D5F            ; Unknown 8xxx instruction
$BFC    $EF9B   UNKNOWN  $EF9B           ; Unknown Exxx instruction
$BFE    $1560   JP       $560            ; Jump to 560
$C00    $337E   SE       V3, #7E         ; Skip if V3 == 126
$C02    $1294   JP       $294            ; Jump to 294
$C04    $58DA   UNKNOWN  $58DA           ; Unknown 5xxx instruction
$C06    $D661   DRW      V6, V6, #1      ; Draw 1-byte sprite at V6, V6
$C08    $4074   SNE      V0, #74         ; Skip if V0 != 116
$C0A    $3A43   SE       VA, #43         ; Skip if VA == 67
$C0C    $8E5E   SHL      VE              ; VE <<= 1, VF = MSB
$C0E    $6843   LD       V8, #43         ; Load 67 into V8
$C10    $9D4B   UNKNOWN  $9D4B           ; Unknown 9xxx instruction
$C12    $78D2   ADD      V8, #D2         ; Add 210 to V8
$C14    $5DE6   UNKNOWN  $5DE6           ; Unknown 5xxx instruction
$C16    $5EB2   UNKNOWN  $5EB2           ; Unknown 5xxx instruction
$C18    $7017   ADD      V0, #17         ; Add 23 to V0
$C1A    $A063   LD       I, $063         ; Load 063 into I
$C1C    $EB7F   UNKNOWN  $EB7F           ; Unknown Exxx instruction
$C1E    $2294   CALL     $294            ; Call subroutine at 294
$C20    $21F5   CALL     $1F5            ; Call subroutine at 1F5
$C22    $39CC   SE       V9, #CC         ; Skip if V9 == 204
$C24    $B67C   JP       V0, $67C        ; Jump to V0 + 67C
$C26    $4827   SNE      V8, #27         ; Skip if V8 != 39
$C28    $D5DB   DRW      V5, VD, #B      ; Draw 11-byte sprite at V5, VD
$C2A    $0075   SYS      $075            ; System call to 075
$C2C    $F751   UNKNOWN  F751            ; Unknown Fxxx instruction
$C2E    $1C22   JP       $C22            ; Jump to C22
$C30    $2724   CALL     $724            ; Call subroutine at 724
$C32    $58A1   UNKNOWN  $58A1           ; Unknown 5xxx instruction
$C34    $4E35   SNE      VE, #35         ; Skip if VE != 53
$C36    $057C   SYS      $57C            ; System call to 57C
$C38    $6D07   LD       VD, #07         ; Load 7 into VD
$C3A    $B74A   JP       V0, $74A        ; Jump to V0 + 74A
$C3C    $0819   SYS      $819            ; System call to 819
$C3E    $C999   RND      V9, #99         ; V9 = random & 99
$C40    $9287   UNKNOWN  $9287           ; Unknown 9xxx instruction
$C42    $C264   RND      V2, #64         ; V2 = random & 64
$C44    $30F4   SE       V0, #F4         ; Skip if V0 == 244
$C46    $4E8C   SNE      VE, #8C         ; Skip if VE != 140
$C48    $F1AE   UNKNOWN  F1AE            ; Unknown Fxxx instruction
$C4A    $C26B   RND      V2, #6B         ; V2 = random & 6B
$C4C    $7CA5   ADD      VC, #A5         ; Add 165 to VC
$C4E    $0756   SYS      $756            ; System call to 756
$C50    $2CA9   CALL     $CA9            ; Call subroutine at CA9
$C52    $3982   SE       V9, #82         ; Skip if V9 == 130
$C54    $7C99   ADD      VC, #99         ; Add 153 to VC
$C56    $9485   UNKNOWN  $9485           ; Unknown 9xxx instruction
$C58    $D7A4   DRW      V7, VA, #4      ; Draw 4-byte sprite at V7, VA
$C5A    $89BE   SHL      V9              ; V9 <<= 1, VF = MSB
$C5C    $602A   LD       V0, #2A         ; Load 42 into V0
$C5E    $0CA7   SYS      $CA7            ; System call to CA7
$C60    $9B4A   UNKNOWN  $9B4A           ; Unknown 9xxx instruction
$C62    $04D3   SYS      $4D3            ; System call to 4D3
$C64    $9D60   SNE      VD, V6          ; Skip if VD != V6
$C66    $0A7D   SYS      $A7D            ; System call to A7D
$C68    $77FA   ADD      V7, #FA         ; Add 250 to V7
$C6A    $5C87   UNKNOWN  $5C87           ; Unknown 5xxx instruction
$C6C    $0781   SYS      $781            ; System call to 781
$C6E    $C413   RND      V4, #13         ; V4 = random & 13
$C70    $7D6D   ADD      VD, #6D         ; Add 109 to VD
$C72    $168E   JP       $68E            ; Jump to 68E
$C74    $E057   UNKNOWN  $E057           ; Unknown Exxx instruction
$C76    $2F60   CALL     $F60            ; Call subroutine at F60
$C78    $6515   LD       V5, #15         ; Load 21 into V5
$C7A    $706F   ADD      V0, #6F         ; Add 111 to V0
$C7C    $F04B   UNKNOWN  F04B            ; Unknown Fxxx instruction
$C7E    $26B7   CALL     $6B7            ; Call subroutine at 6B7
$C80    $0E52   SYS      $E52            ; System call to E52
$C82    $D6CF   DRW      V6, VC, #F      ; Draw 15-byte sprite at V6, VC
$C84    $F180   UNKNOWN  F180            ; Unknown Fxxx instruction
$C86    $9F19   UNKNOWN  $9F19           ; Unknown 9xxx instruction
$C88    $56DA   UNKNOWN  $56DA           ; Unknown 5xxx instruction
$C8A    $9656   UNKNOWN  $9656           ; Unknown 9xxx instruction
$C8C    $1359   JP       $359            ; Jump to 359
$C8E    $913F   UNKNOWN  $913F           ; Unknown 9xxx instruction
$C90    $E5AD   UNKNOWN  $E5AD           ; Unknown Exxx instruction
$C92    $22E6   CALL     $2E6            ; Call subroutine at 2E6
$C94    $C8F4   RND      V8, #F4         ; V8 = random & F4
$C96    $2485   CALL     $485            ; Call subroutine at 485
$C98    $0496   SYS      $496            ; System call to 496
$C9A    $D8F1   DRW      V8, VF, #1      ; Draw 1-byte sprite at V8, VF
$C9C    $EB10   UNKNOWN  $EB10           ; Unknown Exxx instruction
$C9E    $9F94   UNKNOWN  $9F94           ; Unknown 9xxx instruction
$CA0    $C915   RND      V9, #15         ; V9 = random & 15
$CA2    $8124   ADD      V1, V2          ; V1 += V2, VF = carry
$CA4    $C32C   RND      V3, #2C         ; V3 = random & 2C
$CA6    $1D68   JP       $D68            ; Jump to D68
$CA8    $B3F1   JP       V0, $3F1        ; Jump to V0 + 3F1
$CAA    $8176   SHR      V1              ; V1 >>= 1, VF = LSB
$CAC    $902A   UNKNOWN  $902A           ; Unknown 9xxx instruction
$CAE    $BFD0   JP       V0, $FD0        ; Jump to V0 + FD0
$CB0    $F88B   UNKNOWN  F88B            ; Unknown Fxxx instruction
$CB2    $D491   DRW      V4, V9, #1      ; Draw 1-byte sprite at V4, V9
$CB4    $8CFC   UNKNOWN  8CFC            ; Unknown 8xxx instruction
$CB6    $28C8   CALL     $8C8            ; Call subroutine at 8C8
$CB8    $085D   SYS      $85D            ; System call to 85D
$CBA    $B0BD   JP       V0, $0BD        ; Jump to V0 + 0BD
$CBC    $17B5   JP       $7B5            ; Jump to 7B5
$CBE    $F8F3   UNKNOWN  F8F3            ; Unknown Fxxx instruction
$CC0    $163D   JP       $63D            ; Jump to 63D
$CC2    $4466   SNE      V4, #66         ; Skip if V4 != 102
$CC4    $AA32   LD       I, $A32         ; Load A32 into I
$CC6    $1856   JP       $856            ; Jump to 856
$CC8    $7B13   ADD      VB, #13         ; Add 19 to VB
$CCA    $9D5D   UNKNOWN  $9D5D           ; Unknown 9xxx instruction
$CCC    $A0A2   LD       I, $0A2         ; Load 0A2 into I
$CCE    $82D3   XOR      V2, VD          ; V2 ^= VD
$CD0    $AA71   LD       I, $A71         ; Load A71 into I
$CD2    $567A   UNKNOWN  $567A           ; Unknown 5xxx instruction
$CD4    $7358   ADD      V3, #58         ; Add 88 to V3
$CD6    $2A32   CALL     $A32            ; Call subroutine at A32
$CD8    $CF08   RND      VF, #08         ; VF = random & 08
$CDA    $A3F0   LD       I, $3F0         ; Load 3F0 into I
$CDC    $0B27   SYS      $B27            ; System call to B27
$CDE    $A666   LD       I, $666         ; Load 666 into I
$CE0    $1F8A   JP       $F8A            ; Jump to F8A
$CE2    $1AB5   JP       $AB5            ; Jump to AB5
$CE4    $7DCD   ADD      VD, #CD         ; Add 205 to VD
$CE6    $D2CF   DRW      V2, VC, #F      ; Draw 15-byte sprite at V2, VC
$CE8    $6279   LD       V2, #79         ; Load 121 into V2
$CEA    $3E31   SE       VE, #31         ; Skip if VE == 49
$CEC    $8FBE   SHL      VF              ; VF <<= 1, VF = MSB
$CEE    $0536   SYS      $536            ; System call to 536
$CF0    $C901   RND      V9, #01         ; V9 = random & 01
$CF2    $2BBC   CALL     $BBC            ; Call subroutine at BBC
$CF4    $5CBB   UNKNOWN  $5CBB           ; Unknown 5xxx instruction
$CF6    $75CB   ADD      V5, #CB         ; Add 203 to V5
$CF8    $BC0B   JP       V0, $C0B        ; Jump to V0 + C0B
$CFA    $7561   ADD      V5, #61         ; Add 97 to V5
$CFC    $0BE1   SYS      $BE1            ; System call to BE1
$CFE    $CE50   RND      VE, #50         ; VE = random & 50
$D00    $97B9   UNKNOWN  $97B9           ; Unknown 9xxx instruction
$D02    $40CF   SNE      V0, #CF         ; Skip if V0 != 207
$D04    $9422   UNKNOWN  $9422           ; Unknown 9xxx instruction
$D06    $256E   CALL     $56E            ; Call subroutine at 56E
$D08    $0220   SYS      $220            ; System call to 220
$D0A    $8D21   OR       VD, V2          ; VD |= V2
$D0C    $CAEF   RND      VA, #EF         ; VA = random & EF
$D0E    $9801   UNKNOWN  $9801           ; Unknown 9xxx instruction
$D10    $EFFD   UNKNOWN  $EFFD           ; Unknown Exxx instruction
$D12    $6437   LD       V4, #37         ; Load 55 into V4
$D14    $898B   UNKNOWN  898B            ; Unknown 8xxx instruction
$D16    $13D2   JP       $3D2            ; Jump to 3D2
$D18    $8CC2   AND      VC, VC          ; VC &= VC
$D1A    $E2C4   UNKNOWN  $E2C4           ; Unknown Exxx instruction
$D1C    $F1EF   UNKNOWN  F1EF            ; Unknown Fxxx instruction
$D1E    $3EA5   SE       VE, #A5         ; Skip if VE == 165
$D20    $6225   LD       V2, #25         ; Load 37 into V2
$D22    $991A   UNKNOWN  $991A           ; Unknown 9xxx instruction
$D24    $568C   UNKNOWN  $568C           ; Unknown 5xxx instruction
$D26    $C06D   RND      V0, #6D         ; V0 = random & 6D
$D28    $77FB   ADD      V7, #FB         ; Add 251 to V7
$D2A    $3E03   SE       VE, #03         ; Skip if VE == 3
$D2C    $3B58   SE       VB, #58         ; Skip if VB == 88
$D2E    $1785   JP       $785            ; Jump to 785
$D30    $F722   UNKNOWN  F722            ; Unknown Fxxx instruction
$D32    $2E04   CALL     $E04            ; Call subroutine at E04
$D34    $BF23   JP       V0, $F23        ; Jump to V0 + F23
$D36    $2F57   CALL     $F57            ; Call subroutine at F57
$D38    $90C0   SNE      V0, VC          ; Skip if V0 != VC
$D3A    $7426   ADD      V4, #26         ; Add 38 to V4
$D3C    $4BDD   SNE      VB, #DD         ; Skip if VB != 221
$D3E    $F74C   UNKNOWN  F74C            ; Unknown Fxxx instruction
$D40    $5C58   UNKNOWN  $5C58           ; Unknown 5xxx instruction
$D42    $ACE1   LD       I, $CE1         ; Load CE1 into I
$D44    $9D71   UNKNOWN  $9D71           ; Unknown 9xxx instruction
$D46    $C317   RND      V3, #17         ; V3 = random & 17
$D48    $85FB   UNKNOWN  85FB            ; Unknown 8xxx instruction
$D4A    $76B0   ADD      V6, #B0         ; Add 176 to V6
$D4C    $64E4   LD       V4, #E4         ; Load 228 into V4
$D4E    $132A   JP       $32A            ; Jump to 32A
$D50    $7783   ADD      V7, #83         ; Add 131 to V7
$D52    $9F81   UNKNOWN  $9F81           ; Unknown 9xxx instruction
$D54    $24BA   CALL     $4BA            ; Call subroutine at 4BA
$D56    $381F   SE       V8, #1F         ; Skip if V8 == 31
$D58    $5544   UNKNOWN  $5544           ; Unknown 5xxx instruction
$D5A    $FC54   UNKNOWN  FC54            ; Unknown Fxxx instruction
$D5C    $D5F3   DRW      V5, VF, #3      ; Draw 3-byte sprite at V5, VF
$D5E    $5C18   UNKNOWN  $5C18           ; Unknown 5xxx instruction
$D60    $C75C   RND      V7, #5C         ; V7 = random & 5C
$D62    $9DCD   UNKNOWN  $9DCD           ; Unknown 9xxx instruction
$D64    $C47B   RND      V4, #7B         ; V4 = random & 7B
$D66    $C7AF   RND      V7, #AF         ; V7 = random & AF
$D68    $C9B0   RND      V9, #B0         ; V9 = random & B0
$D6A    $F86B   UNKNOWN  F86B            ; Unknown Fxxx instruction
$D6C    $2FE3   CALL     $FE3            ; Call subroutine at FE3
$D6E    $7E2A   ADD      VE, #2A         ; Add 42 to VE
$D70    $6EB6   LD       VE, #B6         ; Load 182 into VE
$D72    $95E5   UNKNOWN  $95E5           ; Unknown 9xxx instruction
$D74    $71CA   ADD      V1, #CA         ; Add 202 to V1
$D76    $95D8   UNKNOWN  $95D8           ; Unknown 9xxx instruction
$D78    $5866   UNKNOWN  $5866           ; Unknown 5xxx instruction
$D7A    $35EE   SE       V5, #EE         ; Skip if V5 == 238
$D7C    $D093   DRW      V0, V9, #3      ; Draw 3-byte sprite at V0, V9
$D7E    $02BE   SYS      $2BE            ; System call to 2BE
$D80    $4F90   SNE      VF, #90         ; Skip if VF != 144
$D82    $4200   SNE      V2, #00         ; Skip if V2 != 0
$D84    $BB39   JP       V0, $B39        ; Jump to V0 + B39
$D86    $B4EE   JP       V0, $4EE        ; Jump to V0 + 4EE
$D88    $B586   JP       V0, $586        ; Jump to V0 + 586
$D8A    $D050   DRW      V0, V5, #0      ; Draw 0-byte sprite at V0, V5
$D8C    $354E   SE       V5, #4E         ; Skip if V5 == 78
$D8E    $FA28   UNKNOWN  FA28            ; Unknown Fxxx instruction
$D90    $63F6   LD       V3, #F6         ; Load 246 into V3
$D92    $C0ED   RND      V0, #ED         ; V0 = random & ED
$D94    $50B2   UNKNOWN  $50B2           ; Unknown 5xxx instruction
$D96    $3B8B   SE       VB, #8B         ; Skip if VB == 139
$D98    $8BB4   ADD      VB, VB          ; VB += VB, VF = carry
$D9A    $6320   LD       V3, #20         ; Load 32 into V3
$D9C    $C7D3   RND      V7, #D3         ; V7 = random & D3
$D9E    $EA45   UNKNOWN  $EA45           ; Unknown Exxx instruction
$DA0    $3642   SE       V6, #42         ; Skip if V6 == 66
$DA2    $AA3B   LD       I, $A3B         ; Load A3B into I
$DA4    $F992   UNKNOWN  F992            ; Unknown Fxxx instruction
$DA6    $2FBB   CALL     $FBB            ; Call subroutine at FBB
$DA8    $3DD7   SE       VD, #D7         ; Skip if VD == 215
$DAA    $036B   SYS      $36B            ; System call to 36B
$DAC    $AFC6   LD       I, $FC6         ; Load FC6 into I
$DAE    $2FC3   CALL     $FC3            ; Call subroutine at FC3
$DB0    $06C8   SYS      $6C8            ; System call to 6C8
$DB2    $DC40   DRW      VC, V4, #0      ; Draw 0-byte sprite at VC, V4
$DB4    $D08D   DRW      V0, V8, #D      ; Draw 13-byte sprite at V0, V8
$DB6    $6474   LD       V4, #74         ; Load 116 into V4
$DB8    $7C5F   ADD      VC, #5F         ; Add 95 to VC
$DBA    $DE07   DRW      VE, V0, #7      ; Draw 7-byte sprite at VE, V0
$DBC    $6777   LD       V7, #77         ; Load 119 into V7
$DBE    $5888   UNKNOWN  $5888           ; Unknown 5xxx instruction
$DC0    $1665   JP       $665            ; Jump to 665
$DC2    $32B3   SE       V2, #B3         ; Skip if V2 == 179
$DC4    $F800   UNKNOWN  F800            ; Unknown Fxxx instruction
$DC6    $6B73   LD       VB, #73         ; Load 115 into VB
$DC8    $3DEC   SE       VD, #EC         ; Skip if VD == 236
$DCA    $BB1D   JP       V0, $B1D        ; Jump to V0 + B1D
$DCC    $EDFA   UNKNOWN  $EDFA           ; Unknown Exxx instruction
$DCE    $69B6   LD       V9, #B6         ; Load 182 into V9
$DD0    $768A   ADD      V6, #8A         ; Add 138 to V6
$DD2    $CB78   RND      VB, #78         ; VB = random & 78
$DD4    $E365   UNKNOWN  $E365           ; Unknown Exxx instruction
$DD6    $C890   RND      V8, #90         ; V8 = random & 90
$DD8    $2F6B   CALL     $F6B            ; Call subroutine at F6B
$DDA    $2038   CALL     $038            ; Call subroutine at 038
$DDC    $FA30   UNKNOWN  FA30            ; Unknown Fxxx instruction
$DDE    $ECEF   UNKNOWN  $ECEF           ; Unknown Exxx instruction
$DE0    $514F   UNKNOWN  $514F           ; Unknown 5xxx instruction
$DE2    $0A38   SYS      $A38            ; System call to A38
$DE4    $A705   LD       I, $705         ; Load 705 into I
$DE6    $29B9   CALL     $9B9            ; Call subroutine at 9B9
$DE8    $ED87   UNKNOWN  $ED87           ; Unknown Exxx instruction
$DEA    $89C2   AND      V9, VC          ; V9 &= VC
$DEC    $1EDC   JP       $EDC            ; Jump to EDC
$DEE    $7935   ADD      V9, #35         ; Add 53 to V9
$DF0    $8373   XOR      V3, V7          ; V3 ^= V7
$DF2    $F30E   UNKNOWN  F30E            ; Unknown Fxxx instruction
$DF4    $B455   JP       V0, $455        ; Jump to V0 + 455
$DF6    $DBCC   DRW      VB, VC, #C      ; Draw 12-byte sprite at VB, VC
$DF8    $70C2   ADD      V0, #C2         ; Add 194 to V0
$DFA    $4111   SNE      V1, #11         ; Skip if V1 != 17
$DFC    $78BD   ADD      V8, #BD         ; Add 189 to V8
$DFE    $034F   SYS      $34F            ; System call to 34F
$E00    $5769   UNKNOWN  $5769           ; Unknown 5xxx instruction
$E02    $E179   UNKNOWN  $E179           ; Unknown Exxx instruction
$E04    $3B41   SE       VB, #41         ; Skip if VB == 65
$E06    $0DD0   SYS      $DD0            ; System call to DD0
$E08    $5A60   SE       VA, V6          ; Skip if VA == V6
$E0A    $97BD   UNKNOWN  $97BD           ; Unknown 9xxx instruction
$E0C    $9CF1   UNKNOWN  $9CF1           ; Unknown 9xxx instruction
$E0E    $FC74   UNKNOWN  FC74            ; Unknown Fxxx instruction
$E10    $2692   CALL     $692            ; Call subroutine at 692
$E12    $4D9B   SNE      VD, #9B         ; Skip if VD != 155
$E14    $4632   SNE      V6, #32         ; Skip if V6 != 50
$E16    $C7BB   RND      V7, #BB         ; V7 = random & BB
$E18    $1C74   JP       $C74            ; Jump to C74
$E1A    $97BF   UNKNOWN  $97BF           ; Unknown 9xxx instruction
$E1C    $5398   UNKNOWN  $5398           ; Unknown 5xxx instruction
$E1E    $69C2   LD       V9, #C2         ; Load 194 into V9
$E20    $21F2   CALL     $1F2            ; Call subroutine at 1F2
$E22    $F8DA   UNKNOWN  F8DA            ; Unknown Fxxx instruction
$E24    $DB5B   DRW      VB, V5, #B      ; Draw 11-byte sprite at VB, V5
$E26    $6D2D   LD       VD, #2D         ; Load 45 into VD
$E28    $A448   LD       I, $448         ; Load 448 into I
$E2A    $ACF8   LD       I, $CF8         ; Load CF8 into I
$E2C    $988B   UNKNOWN  $988B           ; Unknown 9xxx instruction
$E2E    $FE75   UNKNOWN  FE75            ; Unknown Fxxx instruction
$E30    $51B0   SE       V1, VB          ; Skip if V1 == VB
$E32    $6AFB   LD       VA, #FB         ; Load 251 into VA
$E34    $2A3F   CALL     $A3F            ; Call subroutine at A3F
$E36    $40B5   SNE      V0, #B5         ; Skip if V0 != 181
$E38    $91B3   UNKNOWN  $91B3           ; Unknown 9xxx instruction
$E3A    $184F   JP       $84F            ; Jump to 84F
$E3C    $B61D   JP       V0, $61D        ; Jump to V0 + 61D
$E3E    $9CAA   UNKNOWN  $9CAA           ; Unknown 9xxx instruction
$E40    $D7E7   DRW      V7, VE, #7      ; Draw 7-byte sprite at V7, VE
$E42    $6F7D   LD       VF, #7D         ; Load 125 into VF
$E44    $A309   LD       I, $309         ; Load 309 into I
$E46    $6B7C   LD       VB, #7C         ; Load 124 into VB
$E48    $FBC0   UNKNOWN  FBC0            ; Unknown Fxxx instruction
$E4A    $2E4F   CALL     $E4F            ; Call subroutine at E4F
$E4C    $2A2B   CALL     $A2B            ; Call subroutine at A2B
$E4E    $3848   SE       V8, #48         ; Skip if V8 == 72
$E50    $276B   CALL     $76B            ; Call subroutine at 76B
$E52    $A1E2   LD       I, $1E2         ; Load 1E2 into I
$E54    $8BD5   SUB      VB, VD          ; VB -= VD, VF = !borrow
$E56    $C73E   RND      V7, #3E         ; V7 = random & 3E
$E58    $435F   SNE      V3, #5F         ; Skip if V3 != 95
$E5A    $6B32   LD       VB, #32         ; Load 50 into VB
$E5C    $E7BA   UNKNOWN  $E7BA           ; Unknown Exxx instruction
$E5E    $C19C   RND      V1, #9C         ; V1 = random & 9C
$E60    $1DED   JP       $DED            ; Jump to DED
$E62    $21CF   CALL     $1CF            ; Call subroutine at 1CF
$E64    $FD26   UNKNOWN  FD26            ; Unknown Fxxx instruction
$E66    $241E   CALL     $41E            ; Call subroutine at 41E
$E68    $75A7   ADD      V5, #A7         ; Add 167 to V5
$E6A    $2820   CALL     $820            ; Call subroutine at 820
$E6C    $0519   SYS      $519            ; System call to 519
$E6E    $779F   ADD      V7, #9F         ; Add 159 to V7
$E70    $9EC3   UNKNOWN  $9EC3           ; Unknown 9xxx instruction
$E72    $4A29   SNE      VA, #29         ; Skip if VA != 41
$E74    $0867   SYS      $867            ; System call to 867
$E76    $0620   SYS      $620            ; System call to 620
$E78    $BEDB   JP       V0, $EDB        ; Jump to V0 + EDB
$E7A    $EC02   UNKNOWN  $EC02           ; Unknown Exxx instruction
$E7C    $F042   UNKNOWN  F042            ; Unknown Fxxx instruction
$E7E    $338E   SE       V3, #8E         ; Skip if V3 == 142
$E80    $6E01   LD       VE, #01         ; Load 1 into VE
$E82    $4B74   SNE      VB, #74         ; Skip if VB != 116
$E84    $4724   SNE      V7, #24         ; Skip if V7 != 36
$E86    $FF78   UNKNOWN  FF78            ; Unknown Fxxx instruction
$E88    $0C57   SYS      $C57            ; System call to C57
$E8A    $9CFF   UNKNOWN  $9CFF           ; Unknown 9xxx instruction
$E8C    $7344   ADD      V3, #44         ; Add 68 to V3
$E8E    $E24B   UNKNOWN  $E24B           ; Unknown Exxx instruction
$E90    $83A3   XOR      V3, VA          ; V3 ^= VA
$E92    $11CC   JP       $1CC            ; Jump to 1CC
$E94    $370F   SE       V7, #0F         ; Skip if V7 == 15
$E96    $056B   SYS      $56B            ; System call to 56B
$E98    $E9E5   UNKNOWN  $E9E5           ; Unknown Exxx instruction
$E9A    $7047   ADD      V0, #47         ; Add 71 to V0
$E9C    $B095   JP       V0, $095        ; Jump to V0 + 095
$E9E    $BE81   JP       V0, $E81        ; Jump to V0 + E81
$EA0    $061A   SYS      $61A            ; System call to 61A
$EA2    $FA68   UNKNOWN  FA68            ; Unknown Fxxx instruction
$EA4    $CE59   RND      VE, #59         ; VE = random & 59
$EA6    $6473   LD       V4, #73         ; Load 115 into V4
$EA8    $788D   ADD      V8, #8D         ; Add 141 to V8
$EAA    $169A   JP       $69A            ; Jump to 69A
$EAC    $03C0   SYS      $3C0            ; System call to 3C0
$EAE    $4C22   SNE      VC, #22         ; Skip if VC != 34
$EB0    $5B00   SE       VB, V0          ; Skip if VB == V0
$EB2    $1FB5   JP       $FB5            ; Jump to FB5
$EB4    $A0B6   LD       I, $0B6         ; Load 0B6 into I
$EB6    $6EAA   LD       VE, #AA         ; Load 170 into VE
$EB8    $B0BE   JP       V0, $0BE        ; Jump to V0 + 0BE
$EBA    $C426   RND      V4, #26         ; V4 = random & 26
$EBC    $9A63   UNKNOWN  $9A63           ; Unknown 9xxx instruction
$EBE    $E90A   UNKNOWN  $E90A           ; Unknown Exxx instruction
$EC0    $70D0   ADD      V0, #D0         ; Add 208 to V0
$EC2    $37EB   SE       V7, #EB         ; Skip if V7 == 235
$EC4    $78B1   ADD      V8, #B1         ; Add 177 to V8
$EC6    $89FF   UNKNOWN  89FF            ; Unknown 8xxx instruction
$EC8    $65D0   LD       V5, #D0         ; Load 208 into V5
$ECA    $3F66   SE       VF, #66         ; Skip if VF == 102
$ECC    $B301   JP       V0, $301        ; Jump to V0 + 301
$ECE    $94E3   UNKNOWN  $94E3           ; Unknown 9xxx instruction
$ED0    $26A5   CALL     $6A5            ; Call subroutine at 6A5
$ED2    $DB83   DRW      VB, V8, #3      ; Draw 3-byte sprite at VB, V8
$ED4    $A054   LD       I, $054         ; Load 054 into I
$ED6    $FE16   UNKNOWN  FE16            ; Unknown Fxxx instruction
$ED8    $0A8C   SYS      $A8C            ; System call to A8C
$EDA    $8E2C   UNKNOWN  8E2C            ; Unknown 8xxx instruction
$EDC    $355D   SE       V5, #5D         ; Skip if V5 == 93
$EDE    $DAAE   DRW      VA, VA, #E      ; Draw 14-byte sprite at VA, VA
$EE0    $4D22   SNE      VD, #22         ; Skip if VD != 34
$EE2    $3F30   SE       VF, #30         ; Skip if VF == 48
$EE4    $74BC   ADD      V4, #BC         ; Add 188 to V4
$EE6    $4BFB   SNE      VB, #FB         ; Skip if VB != 251
$EE8    $70D5   ADD      V0, #D5         ; Add 213 to V0
$EEA    $3CDF   SE       VC, #DF         ; Skip if VC == 223
$EEC    $54CF   UNKNOWN  $54CF           ; Unknown 5xxx instruction
$EEE    $933A   UNKNOWN  $933A           ; Unknown 9xxx instruction
$EF0    $55B0   SE       V5, VB          ; Skip if V5 == VB
$EF2    $7467   ADD      V4, #67         ; Add 103 to V4
$EF4    $0107   SYS      $107            ; System call to 107
$EF6    $6F8F   LD       VF, #8F         ; Load 143 into VF
$EF8    $EEAA   UNKNOWN  $EEAA           ; Unknown Exxx instruction
$EFA    $E7A0   UNKNOWN  $E7A0           ; Unknown Exxx instruction
$EFC    $F6D9   UNKNOWN  F6D9            ; Unknown Fxxx instruction
$EFE    $4714   SNE      V7, #14         ; Skip if V7 != 20
$F00    $1520   JP       $520            ; Jump to 520
$F02    $8B98   UNKNOWN  8B98            ; Unknown 8xxx instruction
$F04    $A97C   LD       I, $97C         ; Load 97C into I
$F06    $A5AF   LD       I, $5AF         ; Load 5AF into I
$F08    $836A   UNKNOWN  836A            ; Unknown 8xxx instruction
$F0A    $1C66   JP       $C66            ; Jump to C66
$F0C    $B2F1   JP       V0, $2F1        ; Jump to V0 + 2F1
$F0E    $158B   JP       $58B            ; Jump to 58B
$F10    $ED0C   UNKNOWN  $ED0C           ; Unknown Exxx instruction
$F12    $4557   SNE      V5, #57         ; Skip if V5 != 87
$F14    $F1BE   UNKNOWN  F1BE            ; Unknown Fxxx instruction
$F16    $D4F2   DRW      V4, VF, #2      ; Draw 2-byte sprite at V4, VF
$F18    $F0C3   UNKNOWN  F0C3            ; Unknown Fxxx instruction
$F1A    $5DBD   UNKNOWN  $5DBD           ; Unknown 5xxx instruction
$F1C    $F9A2   UNKNOWN  F9A2            ; Unknown Fxxx instruction
$F1E    $0BEA   SYS      $BEA            ; System call to BEA
$F20    $E86B   UNKNOWN  $E86B           ; Unknown Exxx instruction
$F22    $FE28   UNKNOWN  FE28            ; Unknown Fxxx instruction
$F24    $647A   LD       V4, #7A         ; Load 122 into V4
$F26    $9EE7   UNKNOWN  $9EE7           ; Unknown 9xxx instruction
$F28    $0452   SYS      $452            ; System call to 452
$F2A    $F4B6   UNKNOWN  F4B6            ; Unknown Fxxx instruction
$F2C    $48E2   SNE      V8, #E2         ; Skip if V8 != 226
$F2E    $9908   UNKNOWN  $9908           ; Unknown 9xxx instruction
$F30    $E577   UNKNOWN  $E577           ; Unknown Exxx instruction
$F32    $CBB4   RND      VB, #B4         ; VB = random & B4
$F34    $175D   JP       $75D            ; Jump to 75D
$F36    $B22A   JP       V0, $22A        ; Jump to V0 + 22A
$F38    $180A   JP       $80A            ; Jump to 80A
$F3A    $DA4C   DRW      VA, V4, #C      ; Draw 12-byte sprite at VA, V4
$F3C    $1EC2   JP       $EC2            ; Jump to EC2
$F3E    $C5B7   RND      V5, #B7         ; V5 = random & B7
$F40    $9F6C   UNKNOWN  $9F6C           ; Unknown 9xxx instruction
$F42    $629E   LD       V2, #9E         ; Load 158 into V2
$F44    $9D76   UNKNOWN  $9D76           ; Unknown 9xxx instruction
$F46    $31E3   SE       V1, #E3         ; Skip if V1 == 227
$F48    $F30C   UNKNOWN  F30C            ; Unknown Fxxx instruction
$F4A    $791A   ADD      V9, #1A         ; Add 26 to V9
$F4C    $6F24   LD       VF, #24         ; Load 36 into VF
$F4E    $5E83   UNKNOWN  $5E83           ; Unknown 5xxx instruction
$F50    $01DB   SYS      $1DB            ; System call to 1DB
$F52    $B662   JP       V0, $662        ; Jump to V0 + 662
$F54    $F597   UNKNOWN  F597            ; Unknown Fxxx instruction
$F56    $AD94   LD       I, $D94         ; Load D94 into I
$F58    $35CA   SE       V5, #CA         ; Skip if V5 == 202
$F5A    $3734   SE       V7, #34         ; Skip if V7 == 52
$F5C    $4E41   SNE      VE, #41         ; Skip if VE != 65
$F5E    $ECD6   UNKNOWN  $ECD6           ; Unknown Exxx instruction
$F60    $A528   LD       I, $528         ; Load 528 into I
$F62    $DE52   DRW      VE, V5, #2      ; Draw 2-byte sprite at VE, V5
$F64    $D7F5   DRW      V7, VF, #5      ; Draw 5-byte sprite at V7, VF
$F66    $8772   AND      V7, V7          ; V7 &= V7
$F68    $D059   DRW      V0, V5, #9      ; Draw 9-byte sprite at V0, V5
$F6A    $0F95   SYS      $F95            ; System call to F95
$F6C    $1E5B   JP       $E5B            ; Jump to E5B
$F6E    $F66C   UNKNOWN  F66C            ; Unknown Fxxx instruction
$F70    $FA57   UNKNOWN  FA57            ; Unknown Fxxx instruction
$F72    $D1E4   DRW      V1, VE, #4      ; Draw 4-byte sprite at V1, VE
$F74    $69D5   LD       V9, #D5         ; Load 213 into V9
$F76    $9CEE   UNKNOWN  $9CEE           ; Unknown 9xxx instruction
$F78    $4774   SNE      V7, #74         ; Skip if V7 != 116
$F7A    $8898   UNKNOWN  8898            ; Unknown 8xxx instruction
$F7C    $1722   JP       $722            ; Jump to 722
$F7E    $E000   UNKNOWN  $E000           ; Unknown Exxx instruction
$F80    $10CA   JP       $0CA            ; Jump to 0CA
$F82    $9C66   UNKNOWN  $9C66           ; Unknown 9xxx instruction
$F84    $0C16   SYS      $C16            ; System call to C16
$F86    $CBE5   RND      VB, #E5         ; VB = random & E5
$F88    $3B26   SE       VB, #26         ; Skip if VB == 38
$F8A    $125E   JP       $25E            ; Jump to 25E
$F8C    $2CA7   CALL     $CA7            ; Call subroutine at CA7
$F8E    $BD91   JP       V0, $D91        ; Jump to V0 + D91
$F90    $27D6   CALL     $7D6            ; Call subroutine at 7D6
$F92    $A901   LD       I, $901         ; Load 901 into I
$F94    $BE84   JP       V0, $E84        ; Jump to V0 + E84
$F96    $3CB0   SE       VC, #B0         ; Skip if VC == 176
$F98    $E9D0   UNKNOWN  $E9D0           ; Unknown Exxx instruction
$F9A    $2AB0   CALL     $AB0            ; Call subroutine at AB0
$F9C    $F352   UNKNOWN  F352            ; Unknown Fxxx instruction
$F9E    $85F5   SUB      V5, VF          ; V5 -= VF, VF = !borrow
$FA0    $703E   ADD      V0, #3E         ; Add 62 to V0
$FA2    $FAB7   UNKNOWN  FAB7            ; Unknown Fxxx instruction
$FA4    $F9BA   UNKNOWN  F9BA            ; Unknown Fxxx instruction
$FA6    $BB8D   JP       V0, $B8D        ; Jump to V0 + B8D
$FA8    $4BAA   SNE      VB, #AA         ; Skip if VB != 170
$FAA    $978C   UNKNOWN  $978C           ; Unknown 9xxx instruction
$FAC    $4346   SNE      V3, #46         ; Skip if V3 != 70
$FAE    $5629   UNKNOWN  $5629           ; Unknown 5xxx instruction
$FB0    $BED9   JP       V0, $ED9        ; Jump to V0 + ED9
$FB2    $D19C   DRW      V1, V9, #C      ; Draw 12-byte sprite at V1, V9
$FB4    $0D4E   SYS      $D4E            ; System call to D4E
$FB6    $C65F   RND      V6, #5F         ; V6 = random & 5F
$FB8    $DBFD   DRW      VB, VF, #D      ; Draw 13-byte sprite at VB, VF
$FBA    $1F7B   JP       $F7B            ; Jump to F7B
$FBC    $DE51   DRW      VE, V5, #1      ; Draw 1-byte sprite at VE, V5
$FBE    $38FC   SE       V8, #FC         ; Skip if V8 == 252
$FC0    $1602   JP       $602            ; Jump to 602
$FC2    $9B23   UNKNOWN  $9B23           ; Unknown 9xxx instruction
$FC4    $C56D   RND      V5, #6D         ; V5 = random & 6D
$FC6    $AD32   LD       I, $D32         ; Load D32 into I
$FC8    $E571   UNKNOWN  $E571           ; Unknown Exxx instruction
$FCA    $527E   UNKNOWN  $527E           ; Unknown 5xxx instruction
$FCC    $00E8   SYS      $0E8            ; System call to 0E8
$FCE    $DDF5   DRW      VD, VF, #5      ; Draw 5-byte sprite at VD, VF
$FD0    $0C8B   SYS      $C8B            ; System call to C8B
$FD2    $263E   CALL     $63E            ; Call subroutine at 63E
$FD4    $CC14   RND      VC, #14         ; VC = random & 14
$FD6    $9B10   SNE      VB, V1          ; Skip if VB != V1
$FD8    $8E16   SHR      VE              ; VE >>= 1, VF = LSB
$FDA    $8A83   XOR      VA, V8          ; VA ^= V8
$FDC    $EF8A   UNKNOWN  $EF8A           ; Unknown Exxx instruction
$FDE    $726C   ADD      V2, #6C         ; Add 108 to V2
$FE0    $ECD9   UNKNOWN  $ECD9           ; Unknown Exxx instruction
$FE2    $7DB7   ADD      VD, #B7         ; Add 183 to VD
$FE4    $6B9E   LD       VB, #9E         ; Load 158 into VB
$FE6    $8688   UNKNOWN  8688            ; Unknown 8xxx instruction
$FE8    $7092   ADD      V0, #92         ; Add 146 to V0
$FEA    $E15F   UNKNOWN  $E15F           ; Unknown Exxx instruction
$FEC    $D30C   DRW      V3, V0, #C      ; Draw 12-byte sprite at V3, V0
$FEE    $ABD1   LD       I, $BD1         ; Load BD1 into I
$FF0    $FB6F   UNKNOWN  FB6F            ; Unknown Fxxx instruction
$FF2    $8134   ADD      V1, V3          ; V1 += V3, VF = carry
$FF4    $5434   UNKNOWN  $5434           ; Unknown 5xxx instruction
$FF6    $249A   CALL     $49A            ; Call subroutine at 49A
$FF8    $EBB9   UNKNOWN  $EBB9           ; Unknown Exxx instruction
$FFA    $027C   SYS      $27C            ; System call to 27C
$FFC    $5467   UNKNOWN  $5467           ; Unknown 5xxx instruction
$FFE    $CA06   RND      VA, #06         ; VA = random & 06

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 499 (28.0%)
  LD      : 222 (12.5%)
  JP      : 195 (11.0%)
  SE      : 132 ( 7.4%)
  CALL    : 121 ( 6.8%)
  SYS     : 120 ( 6.7%)
  ADD     : 119 ( 6.7%)
  SNE     : 117 ( 6.6%)
  RND     : 103 ( 5.8%)
  DRW     : 101 ( 5.7%)
  XOR     :  13 ( 0.7%)
  SHL     :  10 ( 0.6%)
  AND     :   7 ( 0.4%)
  SUB     :   6 ( 0.3%)
  SUBN    :   6 ( 0.3%)
  OR      :   5 ( 0.3%)
  SHR     :   4 ( 0.2%)

Memory Operations: 341 (19.2%)
Arithmetic Operations: 156 (8.8%)
