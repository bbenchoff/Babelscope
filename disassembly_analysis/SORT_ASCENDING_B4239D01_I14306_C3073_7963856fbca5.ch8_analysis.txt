
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B4239D01_I14306_C3073_7963856fbca5.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 4239
Instance: 14306
Direction: ascending
Final Array: [0, 1, 2, 25, 45, 61, 188, 225]
Operations: R:0 W:4 C:121 S:16

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 125
Sort Array References:
  $218: LD I, $CF2 ; Load CF2 into I
  $22E: LD I, $8C2 ; Load 8C2 into I
  $296: LD I, $1D5 ; Load 1D5 into I
  $2C8: LD I, $5F4 ; Load 5F4 into I
  $2CE: LD I, $410 ; Load 410 into I
  $2E6: LD I, $351 ; Load 351 into I
  $318: LD I, $4D4 ; Load 4D4 into I
  $334: LD I, $C93 ; Load C93 into I
  $34C: LD I, $C1A ; Load C1A into I
  $362: LD I, $6FE ; Load 6FE into I
  $370: LD I, $95B ; Load 95B into I
  $392: LD I, $06A ; Load 06A into I
  $3C2: LD I, $932 ; Load 932 into I
  $410: LD I, $435 ; Load 435 into I
  $440: LD I, $480 ; Load 480 into I
  $45E: LD I, $9F3 ; Load 9F3 into I
  $49A: LD I, $256 ; Load 256 into I
  $4B2: LD I, $C2B ; Load C2B into I
  $4C0: LD I, $3B2 ; Load 3B2 into I
  $4C2: LD I, $5AB ; Load 5AB into I
  $4C4: LD I, $9BC ; Load 9BC into I
  $4D6: LD I, $3EA ; Load 3EA into I
  $4FA: LD I, $2B4 ; Load 2B4 into I
  $524: LD I, $114 ; Load 114 into I
  $536: LD I, $F42 ; Load F42 into I
  $544: LD I, $48B ; Load 48B into I
  $54E: LD I, $590 ; Load 590 into I
  $560: LD I, $61E ; Load 61E into I
  $568: LD I, $DCD ; Load DCD into I
  $596: LD I, $603 ; Load 603 into I
  $59C: LD I, $DC6 ; Load DC6 into I
  $5BA: LD I, $AB1 ; Load AB1 into I
  $5CA: LD I, $6F1 ; Load 6F1 into I
  $608: LD I, $15F ; Load 15F into I
  $61E: LD I, $A55 ; Load A55 into I
  $624: LD I, $959 ; Load 959 into I
  $63C: LD I, $595 ; Load 595 into I
  $644: LD I, $DC8 ; Load DC8 into I
  $64A: LD I, $B83 ; Load B83 into I
  $660: LD I, $FCB ; Load FCB into I
  $6A6: LD I, $417 ; Load 417 into I
  $6A8: LD I, $EFF ; Load EFF into I
  $6AA: LD I, $A35 ; Load A35 into I
  $6CC: LD I, $9C8 ; Load 9C8 into I
  $6DC: LD I, $80C ; Load 80C into I
  $6E6: LD I, $35F ; Load 35F into I
  $6E8: LD I, $26C ; Load 26C into I
  $6EA: LD I, $FBA ; Load FBA into I
  $6F4: LD I, $A61 ; Load A61 into I
  $720: LD I, $B52 ; Load B52 into I
  $72E: LD I, $0B4 ; Load 0B4 into I
  $744: LD I, $4B5 ; Load 4B5 into I
  $75A: LD I, $A8C ; Load A8C into I
  $76E: LD I, $DC0 ; Load DC0 into I
  $782: LD I, $830 ; Load 830 into I
  $790: LD I, $CF4 ; Load CF4 into I
  $7A2: LD I, $D76 ; Load D76 into I
  $7AA: LD I, $130 ; Load 130 into I
  $7AC: LD I, $4E4 ; Load 4E4 into I
  $7AE: LD I, $E8E ; Load E8E into I
  $7BA: LD I, $5B8 ; Load 5B8 into I
  $7CA: LD I, $AD9 ; Load AD9 into I
  $7FE: LD I, $CDD ; Load CDD into I
  $802: LD I, $68D ; Load 68D into I
  $864: LD I, $96A ; Load 96A into I
  $88E: LD I, $A14 ; Load A14 into I
  $8AC: LD I, $261 ; Load 261 into I
  $8B4: LD I, $CC1 ; Load CC1 into I
  $906: LD I, $17F ; Load 17F into I
  $92A: LD I, $62E ; Load 62E into I
  $9A4: LD I, $EA0 ; Load EA0 into I
  $9CE: LD I, $350 ; Load 350 into I
  $9EE: LD I, $8A2 ; Load 8A2 into I
  $9F0: LD I, $5CE ; Load 5CE into I
  $A0A: LD I, $15E ; Load 15E into I
  $A2E: LD I, $BFA ; Load BFA into I
  $A9A: LD I, $373 ; Load 373 into I
  $AB6: LD I, $84A ; Load 84A into I
  $AEC: LD I, $1C4 ; Load 1C4 into I
  $B22: LD I, $5B1 ; Load 5B1 into I
  $B2A: LD I, $ECC ; Load ECC into I
  $B3A: LD I, $CE7 ; Load CE7 into I
  $B4C: LD I, $7E4 ; Load 7E4 into I
  $B50: LD I, $0D4 ; Load 0D4 into I
  $B70: LD I, $FFA ; Load FFA into I
  $B80: LD I, $27D ; Load 27D into I
  $B9C: LD I, $5D6 ; Load 5D6 into I
  $BD6: LD VF, [I] ; Load V0-VF from I
  $BE2: LD I, $9C8 ; Load 9C8 into I
  $C10: LD I, $603 ; Load 603 into I
  $C2C: LD I, $65D ; Load 65D into I
  $C2E: LD I, $0B1 ; Load 0B1 into I
  $C3E: LD I, $4B7 ; Load 4B7 into I
  $C78: LD I, $8FB ; Load 8FB into I
  $C80: LD I, $642 ; Load 642 into I
  $C82: LD I, $10F ; Load 10F into I
  $CB4: LD I, $485 ; Load 485 into I
  $CC0: LD I, $AC0 ; Load AC0 into I
  $CD8: LD I, $DFE ; Load DFE into I
  $CDA: LD I, $722 ; Load 722 into I
  $CFA: LD I, $CE4 ; Load CE4 into I
  $CFC: ADD I, VE ; I ADDRESS MANIPULATION
  $D10: LD I, $5C4 ; Load 5C4 into I
  $D1C: LD I, $70E ; Load 70E into I
  $D30: LD I, $111 ; Load 111 into I
  $D74: LD I, $BF8 ; Load BF8 into I
  $DAE: LD I, $FB1 ; Load FB1 into I
  $DBC: LD I, $D9E ; Load D9E into I
  $DD2: LD I, $476 ; Load 476 into I
  $DF8: LD I, $0A5 ; Load 0A5 into I
  $E0A: ADD I, V7 ; I ADDRESS MANIPULATION
  $E1C: LD I, $728 ; Load 728 into I
  $E86: LD I, $E29 ; Load E29 into I
  $E8C: LD I, $133 ; Load 133 into I
  $EB4: LD I, $CBD ; Load CBD into I
  $EF4: LD I, $7D4 ; Load 7D4 into I
  $EFE: LD I, $464 ; Load 464 into I
  $F36: LD I, $74B ; Load 74B into I
  $F50: LD I, $CB9 ; Load CB9 into I
  $F52: LD I, $9F2 ; Load 9F2 into I
  $F76: LD I, $F66 ; Load F66 into I
  $F82: LD I, $A4F ; Load A4F into I
  $FBA: LD I, $091 ; Load 091 into I
  $FCE: LD I, $AB4 ; Load AB4 into I
  $FF4: LD I, $A4B ; Load A4B into I

CONTROL FLOW ANALYSIS:
Jumps: 231
Calls: 111
Branches: 248
Loops: 122
Loop Structures:
  $23A -> $007 (backward jump)
  $2BA -> $195 (backward jump)
  $2BE -> $192 (backward jump)
  $36A -> $167 (backward jump)
  $3F4 -> $03D (backward jump)
  $40E -> $29A (backward jump)
  $428 -> $057 (backward jump)
  $438 -> $022 (backward jump)
  $4A2 -> $2B9 (backward jump)
  $4CA -> $215 (backward jump)
  $576 -> $2F2 (backward jump)
  $5D6 -> $0ED (backward jump)
  $5EA -> $4C6 (backward jump)
  $610 -> $58F (backward jump)
  $614 -> $06C (backward jump)
  $65A -> $253 (backward jump)
  $65E -> $5F8 (backward jump)
  $668 -> $576 (backward jump)
  $676 -> $592 (backward jump)
  $686 -> $1D8 (backward jump)
  $68E -> $162 (backward jump)
  $696 -> $051 (backward jump)
  $6C2 -> $214 (backward jump)
  $6CA -> $5D9 (backward jump)
  $6D4 -> $38D (backward jump)
  $6FE -> $6E6 (backward jump)
  $732 -> $6E8 (backward jump)
  $764 -> $453 (backward jump)
  $766 -> $45B (backward jump)
  $778 -> $4C9 (backward jump)
  $7C2 -> $735 (backward jump)
  $7CE -> $401 (backward jump)
  $800 -> $11D (backward jump)
  $832 -> $4C0 (backward jump)
  $86E -> $175 (backward jump)
  $872 -> $7BF (backward jump)
  $88C -> $5A8 (backward jump)
  $894 -> $3FF (backward jump)
  $8B0 -> $7AF (backward jump)
  $8B8 -> $3FA (backward jump)
  $8C2 -> $031 (backward jump)
  $8D6 -> $33F (backward jump)
  $8E6 -> $7D7 (backward jump)
  $92C -> $6F2 (backward jump)
  $92E -> $80B (backward jump)
  $966 -> $3CC (backward jump)
  $96C -> $6FB (backward jump)
  $9C8 -> $2BC (backward jump)
  $9EC -> $24D (backward jump)
  $A1A -> $187 (backward jump)
  $A38 -> $044 (backward jump)
  $A44 -> $53A (backward jump)
  $A64 -> $387 (backward jump)
  $A72 -> $771 (backward jump)
  $A76 -> $1F8 (backward jump)
  $A88 -> $90F (backward jump)
  $A8E -> $1EF (backward jump)
  $A9C -> $429 (backward jump)
  $A9E -> $2BE (backward jump)
  $ADC -> $3DD (backward jump)
  $B16 -> $9B2 (backward jump)
  $B1A -> $359 (backward jump)
  $B1E -> $358 (backward jump)
  $B5C -> $079 (backward jump)
  $B5E -> $845 (backward jump)
  $B72 -> $7AA (backward jump)
  $BA0 -> $0B1 (backward jump)
  $BAE -> $648 (backward jump)
  $BD2 -> $B2D (backward jump)
  $BE0 -> $953 (backward jump)
  $BE8 -> $631 (backward jump)
  $BF2 -> $64A (backward jump)
  $BF4 -> $765 (backward jump)
  $BFA -> $6C2 (backward jump)
  $BFC -> $90C (backward jump)
  $C08 -> $138 (backward jump)
  $C34 -> $BB1 (backward jump)
  $C40 -> $113 (backward jump)
  $C4A -> $3D0 (backward jump)
  $C5A -> $A56 (backward jump)
  $C68 -> $1E4 (backward jump)
  $C6E -> $63E (backward jump)
  $C8C -> $40B (backward jump)
  $CA0 -> $7B2 (backward jump)
  $CAA -> $0C6 (backward jump)
  $CBE -> $3DC (backward jump)
  $CF4 -> $3EA (backward jump)
  $CFE -> $04D (backward jump)
  $D08 -> $B7D (backward jump)
  $D0E -> $4D6 (backward jump)
  $D34 -> $2DA (backward jump)
  $D44 -> $6E0 (backward jump)
  $D6A -> $4C1 (backward jump)
  $D72 -> $670 (backward jump)
  $D78 -> $9BF (backward jump)
  $D8A -> $6EF (backward jump)
  $D8E -> $194 (backward jump)
  $DB2 -> $717 (backward jump)
  $DDA -> $66C (backward jump)
  $E10 -> $820 (backward jump)
  $E1E -> $354 (backward jump)
  $E20 -> $88E (backward jump)
  $E52 -> $C4A (backward jump)
  $E5E -> $2AE (backward jump)
  $E74 -> $5EE (backward jump)
  $E94 -> $5A8 (backward jump)
  $EE8 -> $D01 (backward jump)
  $EEA -> $0D1 (backward jump)
  $EF8 -> $B94 (backward jump)
  $F18 -> $388 (backward jump)
  $F1C -> $26A (backward jump)
  $F28 -> $C39 (backward jump)
  $F5A -> $84E (backward jump)
  $F6C -> $574 (backward jump)
  $F74 -> $37D (backward jump)
  $F80 -> $BBB (backward jump)
  $F8A -> $7C3 (backward jump)
  $F98 -> $751 (backward jump)
  $F9E -> $C08 (backward jump)
  $FC0 -> $352 (backward jump)
  $FDA -> $D72 (backward jump)
  $FEC -> $654 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $1495   JP       $495            ; Jump to 495
$202    $E637   UNKNOWN  $E637           ; Unknown Exxx instruction
$204    $969E   UNKNOWN  $969E           ; Unknown 9xxx instruction
$206    $31BF   SE       V1, #BF         ; Skip if V1 == 191
$208    $B362   JP       V0, $362        ; Jump to V0 + 362
$20A    $E20B   UNKNOWN  $E20B           ; Unknown Exxx instruction
$20C    $E291   UNKNOWN  $E291           ; Unknown Exxx instruction
$20E    $24C1   CALL     $4C1            ; Call subroutine at 4C1
$210    $759D   ADD      V5, #9D         ; Add 157 to V5
$212    $488D   SNE      V8, #8D         ; Skip if V8 != 141
$214    $31C5   SE       V1, #C5         ; Skip if V1 == 197
$216    $330D   SE       V3, #0D         ; Skip if V3 == 13
$218    $ACF2   LD       I, $CF2         ; Load CF2 into I
$21A    $E136   UNKNOWN  $E136           ; Unknown Exxx instruction
$21C    $B562   JP       V0, $562        ; Jump to V0 + 562
$21E    $C183   RND      V1, #83         ; V1 = random & 83
$220    $E083   UNKNOWN  $E083           ; Unknown Exxx instruction
$222    $915B   UNKNOWN  $915B           ; Unknown 9xxx instruction
$224    $1F0A   JP       $F0A            ; Jump to F0A
$226    $8784   ADD      V7, V8          ; V7 += V8, VF = carry
$228    $7DDF   ADD      VD, #DF         ; Add 223 to VD
$22A    $538D   UNKNOWN  $538D           ; Unknown 5xxx instruction
$22C    $DC81   DRW      VC, V8, #1      ; Draw 1-byte sprite at VC, V8
$22E    $A8C2   LD       I, $8C2         ; Load 8C2 into I
$230    $2655   CALL     $655            ; Call subroutine at 655
$232    $BD21   JP       V0, $D21        ; Jump to V0 + D21
$234    $0FF1   SYS      $FF1            ; System call to FF1
$236    $B687   JP       V0, $687        ; Jump to V0 + 687
$238    $739B   ADD      V3, #9B         ; Add 155 to V3
$23A    $B007   JP       V0, $007        ; Jump to V0 + 007
$23C    $B701   JP       V0, $701        ; Jump to V0 + 701
$23E    $7EF1   ADD      VE, #F1         ; Add 241 to VE
$240    $2EB9   CALL     $EB9            ; Call subroutine at EB9
$242    $B920   JP       V0, $920        ; Jump to V0 + 920
$244    $9D5E   UNKNOWN  $9D5E           ; Unknown 9xxx instruction
$246    $12EB   JP       $2EB            ; Jump to 2EB
$248    $F98F   UNKNOWN  F98F            ; Unknown Fxxx instruction
$24A    $E383   UNKNOWN  $E383           ; Unknown Exxx instruction
$24C    $9147   UNKNOWN  $9147           ; Unknown 9xxx instruction
$24E    $523B   UNKNOWN  $523B           ; Unknown 5xxx instruction
$250    $6ECF   LD       VE, #CF         ; Load 207 into VE
$252    $7C48   ADD      VC, #48         ; Add 72 to VC
$254    $F54A   UNKNOWN  F54A            ; Unknown Fxxx instruction
$256    $6E50   LD       VE, #50         ; Load 80 into VE
$258    $F492   UNKNOWN  F492            ; Unknown Fxxx instruction
$25A    $0385   SYS      $385            ; System call to 385
$25C    $CF2F   RND      VF, #2F         ; VF = random & 2F
$25E    $79CF   ADD      V9, #CF         ; Add 207 to V9
$260    $211B   CALL     $11B            ; Call subroutine at 11B
$262    $0142   SYS      $142            ; System call to 142
$264    $5F8E   UNKNOWN  $5F8E           ; Unknown 5xxx instruction
$266    $CF29   RND      VF, #29         ; VF = random & 29
$268    $B785   JP       V0, $785        ; Jump to V0 + 785
$26A    $93C4   UNKNOWN  $93C4           ; Unknown 9xxx instruction
$26C    $BBAC   JP       V0, $BAC        ; Jump to V0 + BAC
$26E    $17DB   JP       $7DB            ; Jump to 7DB
$270    $FB58   UNKNOWN  FB58            ; Unknown Fxxx instruction
$272    $535A   UNKNOWN  $535A           ; Unknown 5xxx instruction
$274    $C23D   RND      V2, #3D         ; V2 = random & 3D
$276    $5CEE   UNKNOWN  $5CEE           ; Unknown 5xxx instruction
$278    $34AF   SE       V4, #AF         ; Skip if V4 == 175
$27A    $B475   JP       V0, $475        ; Jump to V0 + 475
$27C    $F12C   UNKNOWN  F12C            ; Unknown Fxxx instruction
$27E    $BF48   JP       V0, $F48        ; Jump to V0 + F48
$280    $CFC0   RND      VF, #C0         ; VF = random & C0
$282    $5E35   UNKNOWN  $5E35           ; Unknown 5xxx instruction
$284    $0EE6   SYS      $EE6            ; System call to EE6
$286    $F697   UNKNOWN  F697            ; Unknown Fxxx instruction
$288    $6C2B   LD       VC, #2B         ; Load 43 into VC
$28A    $2010   CALL     $010            ; Call subroutine at 010
$28C    $2AA4   CALL     $AA4            ; Call subroutine at AA4
$28E    $19FD   JP       $9FD            ; Jump to 9FD
$290    $1B6B   JP       $B6B            ; Jump to B6B
$292    $2584   CALL     $584            ; Call subroutine at 584
$294    $7EDB   ADD      VE, #DB         ; Add 219 to VE
$296    $A1D5   LD       I, $1D5         ; Load 1D5 into I
$298    $0A11   SYS      $A11            ; System call to A11
$29A    $852D   UNKNOWN  852D            ; Unknown 8xxx instruction
$29C    $B4A8   JP       V0, $4A8        ; Jump to V0 + 4A8
$29E    $4D3C   SNE      VD, #3C         ; Skip if VD != 60
$2A0    $1AB2   JP       $AB2            ; Jump to AB2
$2A2    $68D5   LD       V8, #D5         ; Load 213 into V8
$2A4    $578A   UNKNOWN  $578A           ; Unknown 5xxx instruction
$2A6    $7374   ADD      V3, #74         ; Add 116 to V3
$2A8    $4F3D   SNE      VF, #3D         ; Skip if VF != 61
$2AA    $978F   UNKNOWN  $978F           ; Unknown 9xxx instruction
$2AC    $6A4E   LD       VA, #4E         ; Load 78 into VA
$2AE    $1942   JP       $942            ; Jump to 942
$2B0    $53F7   UNKNOWN  $53F7           ; Unknown 5xxx instruction
$2B2    $099C   SYS      $99C            ; System call to 99C
$2B4    $C386   RND      V3, #86         ; V3 = random & 86
$2B6    $35D9   SE       V5, #D9         ; Skip if V5 == 217
$2B8    $5A52   UNKNOWN  $5A52           ; Unknown 5xxx instruction
$2BA    $B195   JP       V0, $195        ; Jump to V0 + 195
$2BC    $0FAA   SYS      $FAA            ; System call to FAA
$2BE    $1192   JP       $192            ; Jump to 192
$2C0    $341B   SE       V4, #1B         ; Skip if V4 == 27
$2C2    $9DEC   UNKNOWN  $9DEC           ; Unknown 9xxx instruction
$2C4    $1612   JP       $612            ; Jump to 612
$2C6    $EDC6   UNKNOWN  $EDC6           ; Unknown Exxx instruction
$2C8    $A5F4   LD       I, $5F4         ; Load 5F4 into I
$2CA    $E4FD   UNKNOWN  $E4FD           ; Unknown Exxx instruction
$2CC    $DB22   DRW      VB, V2, #2      ; Draw 2-byte sprite at VB, V2
$2CE    $A410   LD       I, $410         ; Load 410 into I
$2D0    $16CB   JP       $6CB            ; Jump to 6CB
$2D2    $22E8   CALL     $2E8            ; Call subroutine at 2E8
$2D4    $8D83   XOR      VD, V8          ; VD ^= V8
$2D6    $3D38   SE       VD, #38         ; Skip if VD == 56
$2D8    $21C9   CALL     $1C9            ; Call subroutine at 1C9
$2DA    $EB55   UNKNOWN  $EB55           ; Unknown Exxx instruction
$2DC    $5AAD   UNKNOWN  $5AAD           ; Unknown 5xxx instruction
$2DE    $3E9E   SE       VE, #9E         ; Skip if VE == 158
$2E0    $F9CC   UNKNOWN  F9CC            ; Unknown Fxxx instruction
$2E2    $B520   JP       V0, $520        ; Jump to V0 + 520
$2E4    $3085   SE       V0, #85         ; Skip if V0 == 133
$2E6    $A351   LD       I, $351         ; Load 351 into I
$2E8    $CC56   RND      VC, #56         ; VC = random & 56
$2EA    $D54C   DRW      V5, V4, #C      ; Draw 12-byte sprite at V5, V4
$2EC    $1A80   JP       $A80            ; Jump to A80
$2EE    $C2E6   RND      V2, #E6         ; V2 = random & E6
$2F0    $CD08   RND      VD, #08         ; VD = random & 08
$2F2    $7B72   ADD      VB, #72         ; Add 114 to VB
$2F4    $7B68   ADD      VB, #68         ; Add 104 to VB
$2F6    $02D3   SYS      $2D3            ; System call to 2D3
$2F8    $887B   UNKNOWN  887B            ; Unknown 8xxx instruction
$2FA    $04A4   SYS      $4A4            ; System call to 4A4
$2FC    $FC84   UNKNOWN  FC84            ; Unknown Fxxx instruction
$2FE    $FCE5   UNKNOWN  FCE5            ; Unknown Fxxx instruction
$300    $0001   SYS      $001            ; System call to 001
$302    $0219   SYS      $219            ; System call to 219
$304    $2D3D   CALL     $D3D            ; Call subroutine at D3D
$306    $BCE1   JP       V0, $CE1        ; Jump to V0 + CE1
$308    $C93B   RND      V9, #3B         ; V9 = random & 3B
$30A    $F102   UNKNOWN  F102            ; Unknown Fxxx instruction
$30C    $271E   CALL     $71E            ; Call subroutine at 71E
$30E    $1507   JP       $507            ; Jump to 507
$310    $C0B9   RND      V0, #B9         ; V0 = random & B9
$312    $2B28   CALL     $B28            ; Call subroutine at B28
$314    $3E5C   SE       VE, #5C         ; Skip if VE == 92
$316    $BE90   JP       V0, $E90        ; Jump to V0 + E90
$318    $A4D4   LD       I, $4D4         ; Load 4D4 into I
$31A    $419F   SNE      V1, #9F         ; Skip if V1 != 159
$31C    $7742   ADD      V7, #42         ; Add 66 to V7
$31E    $B486   JP       V0, $486        ; Jump to V0 + 486
$320    $1C78   JP       $C78            ; Jump to C78
$322    $DBDE   DRW      VB, VD, #E      ; Draw 14-byte sprite at VB, VD
$324    $DE61   DRW      VE, V6, #1      ; Draw 1-byte sprite at VE, V6
$326    $287E   CALL     $87E            ; Call subroutine at 87E
$328    $74F9   ADD      V4, #F9         ; Add 249 to V4
$32A    $FFB1   UNKNOWN  FFB1            ; Unknown Fxxx instruction
$32C    $05C8   SYS      $5C8            ; System call to 5C8
$32E    $4D55   SNE      VD, #55         ; Skip if VD != 85
$330    $5B39   UNKNOWN  $5B39           ; Unknown 5xxx instruction
$332    $E380   UNKNOWN  $E380           ; Unknown Exxx instruction
$334    $AC93   LD       I, $C93         ; Load C93 into I
$336    $E730   UNKNOWN  $E730           ; Unknown Exxx instruction
$338    $862D   UNKNOWN  862D            ; Unknown 8xxx instruction
$33A    $BA79   JP       V0, $A79        ; Jump to V0 + A79
$33C    $4D54   SNE      VD, #54         ; Skip if VD != 84
$33E    $91B2   UNKNOWN  $91B2           ; Unknown 9xxx instruction
$340    $4137   SNE      V1, #37         ; Skip if V1 != 55
$342    $5C9D   UNKNOWN  $5C9D           ; Unknown 5xxx instruction
$344    $C8B8   RND      V8, #B8         ; V8 = random & B8
$346    $3507   SE       V5, #07         ; Skip if V5 == 7
$348    $589E   UNKNOWN  $589E           ; Unknown 5xxx instruction
$34A    $8E6E   SHL      VE              ; VE <<= 1, VF = MSB
$34C    $AC1A   LD       I, $C1A         ; Load C1A into I
$34E    $ED34   UNKNOWN  $ED34           ; Unknown Exxx instruction
$350    $88DA   UNKNOWN  88DA            ; Unknown 8xxx instruction
$352    $360E   SE       V6, #0E         ; Skip if V6 == 14
$354    $33C4   SE       V3, #C4         ; Skip if V3 == 196
$356    $BCDE   JP       V0, $CDE        ; Jump to V0 + CDE
$358    $D831   DRW      V8, V3, #1      ; Draw 1-byte sprite at V8, V3
$35A    $2B63   CALL     $B63            ; Call subroutine at B63
$35C    $9B88   UNKNOWN  $9B88           ; Unknown 9xxx instruction
$35E    $3101   SE       V1, #01         ; Skip if V1 == 1
$360    $F62E   UNKNOWN  F62E            ; Unknown Fxxx instruction
$362    $A6FE   LD       I, $6FE         ; Load 6FE into I
$364    $9E2D   UNKNOWN  $9E2D           ; Unknown 9xxx instruction
$366    $776F   ADD      V7, #6F         ; Add 111 to V7
$368    $3F20   SE       VF, #20         ; Skip if VF == 32
$36A    $B167   JP       V0, $167        ; Jump to V0 + 167
$36C    $99BB   UNKNOWN  $99BB           ; Unknown 9xxx instruction
$36E    $D569   DRW      V5, V6, #9      ; Draw 9-byte sprite at V5, V6
$370    $A95B   LD       I, $95B         ; Load 95B into I
$372    $E41A   UNKNOWN  $E41A           ; Unknown Exxx instruction
$374    $C54F   RND      V5, #4F         ; V5 = random & 4F
$376    $80B2   AND      V0, VB          ; V0 &= VB
$378    $691B   LD       V9, #1B         ; Load 27 into V9
$37A    $B397   JP       V0, $397        ; Jump to V0 + 397
$37C    $00EB   SYS      $0EB            ; System call to 0EB
$37E    $9EA9   UNKNOWN  $9EA9           ; Unknown 9xxx instruction
$380    $52C6   UNKNOWN  $52C6           ; Unknown 5xxx instruction
$382    $34A6   SE       V4, #A6         ; Skip if V4 == 166
$384    $1612   JP       $612            ; Jump to 612
$386    $4953   SNE      V9, #53         ; Skip if V9 != 83
$388    $70A9   ADD      V0, #A9         ; Add 169 to V0
$38A    $9E7A   UNKNOWN  $9E7A           ; Unknown 9xxx instruction
$38C    $822B   UNKNOWN  822B            ; Unknown 8xxx instruction
$38E    $FC3C   UNKNOWN  FC3C            ; Unknown Fxxx instruction
$390    $5970   SE       V9, V7          ; Skip if V9 == V7
$392    $A06A   LD       I, $06A         ; Load 06A into I
$394    $2377   CALL     $377            ; Call subroutine at 377
$396    $2B53   CALL     $B53            ; Call subroutine at B53
$398    $D874   DRW      V8, V7, #4      ; Draw 4-byte sprite at V8, V7
$39A    $6490   LD       V4, #90         ; Load 144 into V4
$39C    $C5AC   RND      V5, #AC         ; V5 = random & AC
$39E    $8053   XOR      V0, V5          ; V0 ^= V5
$3A0    $2039   CALL     $039            ; Call subroutine at 039
$3A2    $9DF2   UNKNOWN  $9DF2           ; Unknown 9xxx instruction
$3A4    $4743   SNE      V7, #43         ; Skip if V7 != 67
$3A6    $85BF   UNKNOWN  85BF            ; Unknown 8xxx instruction
$3A8    $D499   DRW      V4, V9, #9      ; Draw 9-byte sprite at V4, V9
$3AA    $7D9D   ADD      VD, #9D         ; Add 157 to VD
$3AC    $3F6E   SE       VF, #6E         ; Skip if VF == 110
$3AE    $4F44   SNE      VF, #44         ; Skip if VF != 68
$3B0    $803D   UNKNOWN  803D            ; Unknown 8xxx instruction
$3B2    $D03C   DRW      V0, V3, #C      ; Draw 12-byte sprite at V0, V3
$3B4    $91EC   UNKNOWN  $91EC           ; Unknown 9xxx instruction
$3B6    $5204   UNKNOWN  $5204           ; Unknown 5xxx instruction
$3B8    $FD1F   UNKNOWN  FD1F            ; Unknown Fxxx instruction
$3BA    $18F9   JP       $8F9            ; Jump to 8F9
$3BC    $850D   UNKNOWN  850D            ; Unknown 8xxx instruction
$3BE    $B5C0   JP       V0, $5C0        ; Jump to V0 + 5C0
$3C0    $2EC6   CALL     $EC6            ; Call subroutine at EC6
$3C2    $A932   LD       I, $932         ; Load 932 into I
$3C4    $F840   UNKNOWN  F840            ; Unknown Fxxx instruction
$3C6    $FF19   UNKNOWN  FF19            ; Unknown Fxxx instruction
$3C8    $90CF   UNKNOWN  $90CF           ; Unknown 9xxx instruction
$3CA    $6E8F   LD       VE, #8F         ; Load 143 into VE
$3CC    $4EB9   SNE      VE, #B9         ; Skip if VE != 185
$3CE    $E30B   UNKNOWN  $E30B           ; Unknown Exxx instruction
$3D0    $B732   JP       V0, $732        ; Jump to V0 + 732
$3D2    $CD37   RND      VD, #37         ; VD = random & 37
$3D4    $5797   UNKNOWN  $5797           ; Unknown 5xxx instruction
$3D6    $6D71   LD       VD, #71         ; Load 113 into VD
$3D8    $07AD   SYS      $7AD            ; System call to 7AD
$3DA    $2C92   CALL     $C92            ; Call subroutine at C92
$3DC    $1B76   JP       $B76            ; Jump to B76
$3DE    $550B   UNKNOWN  $550B           ; Unknown 5xxx instruction
$3E0    $28AE   CALL     $8AE            ; Call subroutine at 8AE
$3E2    $2B1C   CALL     $B1C            ; Call subroutine at B1C
$3E4    $2129   CALL     $129            ; Call subroutine at 129
$3E6    $6A77   LD       VA, #77         ; Load 119 into VA
$3E8    $B848   JP       V0, $848        ; Jump to V0 + 848
$3EA    $B5F1   JP       V0, $5F1        ; Jump to V0 + 5F1
$3EC    $F8D0   UNKNOWN  F8D0            ; Unknown Fxxx instruction
$3EE    $B8A2   JP       V0, $8A2        ; Jump to V0 + 8A2
$3F0    $5F68   UNKNOWN  $5F68           ; Unknown 5xxx instruction
$3F2    $9684   UNKNOWN  $9684           ; Unknown 9xxx instruction
$3F4    $103D   JP       $03D            ; Jump to 03D
$3F6    $01A3   SYS      $1A3            ; System call to 1A3
$3F8    $4E93   SNE      VE, #93         ; Skip if VE != 147
$3FA    $2071   CALL     $071            ; Call subroutine at 071
$3FC    $E3E8   UNKNOWN  $E3E8           ; Unknown Exxx instruction
$3FE    $C129   RND      V1, #29         ; V1 = random & 29
$400    $C41F   RND      V4, #1F         ; V4 = random & 1F
$402    $B6FD   JP       V0, $6FD        ; Jump to V0 + 6FD
$404    $D5A6   DRW      V5, VA, #6      ; Draw 6-byte sprite at V5, VA
$406    $41EE   SNE      V1, #EE         ; Skip if V1 != 238
$408    $BFD1   JP       V0, $FD1        ; Jump to V0 + FD1
$40A    $0529   SYS      $529            ; System call to 529
$40C    $9B93   UNKNOWN  $9B93           ; Unknown 9xxx instruction
$40E    $B29A   JP       V0, $29A        ; Jump to V0 + 29A
$410    $A435   LD       I, $435         ; Load 435 into I
$412    $0A23   SYS      $A23            ; System call to A23
$414    $C09C   RND      V0, #9C         ; V0 = random & 9C
$416    $CC29   RND      VC, #29         ; VC = random & 29
$418    $28D2   CALL     $8D2            ; Call subroutine at 8D2
$41A    $E666   UNKNOWN  $E666           ; Unknown Exxx instruction
$41C    $3436   SE       V4, #36         ; Skip if V4 == 54
$41E    $55DE   UNKNOWN  $55DE           ; Unknown 5xxx instruction
$420    $83AF   UNKNOWN  83AF            ; Unknown 8xxx instruction
$422    $8A7D   UNKNOWN  8A7D            ; Unknown 8xxx instruction
$424    $3A99   SE       VA, #99         ; Skip if VA == 153
$426    $4CC4   SNE      VC, #C4         ; Skip if VC != 196
$428    $B057   JP       V0, $057        ; Jump to V0 + 057
$42A    $3A76   SE       VA, #76         ; Skip if VA == 118
$42C    $FBE5   UNKNOWN  FBE5            ; Unknown Fxxx instruction
$42E    $2FFE   CALL     $FFE            ; Call subroutine at FFE
$430    $865D   UNKNOWN  865D            ; Unknown 8xxx instruction
$432    $D92F   DRW      V9, V2, #F      ; Draw 15-byte sprite at V9, V2
$434    $3097   SE       V0, #97         ; Skip if V0 == 151
$436    $5124   UNKNOWN  $5124           ; Unknown 5xxx instruction
$438    $B022   JP       V0, $022        ; Jump to V0 + 022
$43A    $EE77   UNKNOWN  $EE77           ; Unknown Exxx instruction
$43C    $F3F2   UNKNOWN  F3F2            ; Unknown Fxxx instruction
$43E    $EE9D   UNKNOWN  $EE9D           ; Unknown Exxx instruction
$440    $A480   LD       I, $480         ; Load 480 into I
$442    $2B4F   CALL     $B4F            ; Call subroutine at B4F
$444    $08E4   SYS      $8E4            ; System call to 8E4
$446    $3F8D   SE       VF, #8D         ; Skip if VF == 141
$448    $1C3A   JP       $C3A            ; Jump to C3A
$44A    $09DC   SYS      $9DC            ; System call to 9DC
$44C    $3780   SE       V7, #80         ; Skip if V7 == 128
$44E    $376A   SE       V7, #6A         ; Skip if V7 == 106
$450    $71A9   ADD      V1, #A9         ; Add 169 to V1
$452    $B4F8   JP       V0, $4F8        ; Jump to V0 + 4F8
$454    $E06B   UNKNOWN  $E06B           ; Unknown Exxx instruction
$456    $83E6   SHR      V3              ; V3 >>= 1, VF = LSB
$458    $49D6   SNE      V9, #D6         ; Skip if V9 != 214
$45A    $0C24   SYS      $C24            ; System call to C24
$45C    $DB93   DRW      VB, V9, #3      ; Draw 3-byte sprite at VB, V9
$45E    $A9F3   LD       I, $9F3         ; Load 9F3 into I
$460    $09C4   SYS      $9C4            ; System call to 9C4
$462    $2437   CALL     $437            ; Call subroutine at 437
$464    $FE2D   UNKNOWN  FE2D            ; Unknown Fxxx instruction
$466    $5F18   UNKNOWN  $5F18           ; Unknown 5xxx instruction
$468    $90D1   UNKNOWN  $90D1           ; Unknown 9xxx instruction
$46A    $5AE6   UNKNOWN  $5AE6           ; Unknown 5xxx instruction
$46C    $80B5   SUB      V0, VB          ; V0 -= VB, VF = !borrow
$46E    $6BA2   LD       VB, #A2         ; Load 162 into VB
$470    $93F6   UNKNOWN  $93F6           ; Unknown 9xxx instruction
$472    $4D4D   SNE      VD, #4D         ; Skip if VD != 77
$474    $2B80   CALL     $B80            ; Call subroutine at B80
$476    $1720   JP       $720            ; Jump to 720
$478    $D8CF   DRW      V8, VC, #F      ; Draw 15-byte sprite at V8, VC
$47A    $6A1B   LD       VA, #1B         ; Load 27 into VA
$47C    $5221   UNKNOWN  $5221           ; Unknown 5xxx instruction
$47E    $46C0   SNE      V6, #C0         ; Skip if V6 != 192
$480    $F1C7   UNKNOWN  F1C7            ; Unknown Fxxx instruction
$482    $6EAE   LD       VE, #AE         ; Load 174 into VE
$484    $1F49   JP       $F49            ; Jump to F49
$486    $C3CC   RND      V3, #CC         ; V3 = random & CC
$488    $6DEE   LD       VD, #EE         ; Load 238 into VD
$48A    $3DEB   SE       VD, #EB         ; Skip if VD == 235
$48C    $52F6   UNKNOWN  $52F6           ; Unknown 5xxx instruction
$48E    $87D0   LD       V7, VD          ; V7 = VD
$490    $B5B7   JP       V0, $5B7        ; Jump to V0 + 5B7
$492    $854B   UNKNOWN  854B            ; Unknown 8xxx instruction
$494    $4EF1   SNE      VE, #F1         ; Skip if VE != 241
$496    $BA21   JP       V0, $A21        ; Jump to V0 + A21
$498    $51DE   UNKNOWN  $51DE           ; Unknown 5xxx instruction
$49A    $A256   LD       I, $256         ; Load 256 into I
$49C    $C652   RND      V6, #52         ; V6 = random & 52
$49E    $0B6F   SYS      $B6F            ; System call to B6F
$4A0    $2BEB   CALL     $BEB            ; Call subroutine at BEB
$4A2    $12B9   JP       $2B9            ; Jump to 2B9
$4A4    $335F   SE       V3, #5F         ; Skip if V3 == 95
$4A6    $01DE   SYS      $1DE            ; System call to 1DE
$4A8    $9125   UNKNOWN  $9125           ; Unknown 9xxx instruction
$4AA    $E18D   UNKNOWN  $E18D           ; Unknown Exxx instruction
$4AC    $02CD   SYS      $2CD            ; System call to 2CD
$4AE    $28FC   CALL     $8FC            ; Call subroutine at 8FC
$4B0    $75E2   ADD      V5, #E2         ; Add 226 to V5
$4B2    $AC2B   LD       I, $C2B         ; Load C2B into I
$4B4    $57DF   UNKNOWN  $57DF           ; Unknown 5xxx instruction
$4B6    $6DFA   LD       VD, #FA         ; Load 250 into VD
$4B8    $88C4   ADD      V8, VC          ; V8 += VC, VF = carry
$4BA    $99B7   UNKNOWN  $99B7           ; Unknown 9xxx instruction
$4BC    $3A2E   SE       VA, #2E         ; Skip if VA == 46
$4BE    $392F   SE       V9, #2F         ; Skip if V9 == 47
$4C0    $A3B2   LD       I, $3B2         ; Load 3B2 into I
$4C2    $A5AB   LD       I, $5AB         ; Load 5AB into I
$4C4    $A9BC   LD       I, $9BC         ; Load 9BC into I
$4C6    $C8CD   RND      V8, #CD         ; V8 = random & CD
$4C8    $1E57   JP       $E57            ; Jump to E57
$4CA    $B215   JP       V0, $215        ; Jump to V0 + 215
$4CC    $EB12   UNKNOWN  $EB12           ; Unknown Exxx instruction
$4CE    $78DF   ADD      V8, #DF         ; Add 223 to V8
$4D0    $4B16   SNE      VB, #16         ; Skip if VB != 22
$4D2    $8962   AND      V9, V6          ; V9 &= V6
$4D4    $FD8C   UNKNOWN  FD8C            ; Unknown Fxxx instruction
$4D6    $A3EA   LD       I, $3EA         ; Load 3EA into I
$4D8    $5FA9   UNKNOWN  $5FA9           ; Unknown 5xxx instruction
$4DA    $7D8E   ADD      VD, #8E         ; Add 142 to VD
$4DC    $8ADB   UNKNOWN  8ADB            ; Unknown 8xxx instruction
$4DE    $F7E9   UNKNOWN  F7E9            ; Unknown Fxxx instruction
$4E0    $8AD4   ADD      VA, VD          ; VA += VD, VF = carry
$4E2    $350C   SE       V5, #0C         ; Skip if V5 == 12
$4E4    $9CD6   UNKNOWN  $9CD6           ; Unknown 9xxx instruction
$4E6    $92CD   UNKNOWN  $92CD           ; Unknown 9xxx instruction
$4E8    $99D0   SNE      V9, VD          ; Skip if V9 != VD
$4EA    $480A   SNE      V8, #0A         ; Skip if V8 != 10
$4EC    $80F8   UNKNOWN  80F8            ; Unknown 8xxx instruction
$4EE    $0083   SYS      $083            ; System call to 083
$4F0    $9C80   SNE      VC, V8          ; Skip if VC != V8
$4F2    $2799   CALL     $799            ; Call subroutine at 799
$4F4    $20A2   CALL     $0A2            ; Call subroutine at 0A2
$4F6    $E1C2   UNKNOWN  $E1C2           ; Unknown Exxx instruction
$4F8    $5125   UNKNOWN  $5125           ; Unknown 5xxx instruction
$4FA    $A2B4   LD       I, $2B4         ; Load 2B4 into I
$4FC    $7877   ADD      V8, #77         ; Add 119 to V8
$4FE    $5B10   SE       VB, V1          ; Skip if VB == V1
$500    $548A   UNKNOWN  $548A           ; Unknown 5xxx instruction
$502    $3C22   SE       VC, #22         ; Skip if VC == 34
$504    $6DF0   LD       VD, #F0         ; Load 240 into VD
$506    $6621   LD       V6, #21         ; Load 33 into V6
$508    $2F3D   CALL     $F3D            ; Call subroutine at F3D
$50A    $F3A6   UNKNOWN  F3A6            ; Unknown Fxxx instruction
$50C    $55F3   UNKNOWN  $55F3           ; Unknown 5xxx instruction
$50E    $60D9   LD       V0, #D9         ; Load 217 into V0
$510    $25DB   CALL     $5DB            ; Call subroutine at 5DB
$512    $3142   SE       V1, #42         ; Skip if V1 == 66
$514    $CE1A   RND      VE, #1A         ; VE = random & 1A
$516    $196C   JP       $96C            ; Jump to 96C
$518    $60E2   LD       V0, #E2         ; Load 226 into V0
$51A    $0216   SYS      $216            ; System call to 216
$51C    $D657   DRW      V6, V5, #7      ; Draw 7-byte sprite at V6, V5
$51E    $9D79   UNKNOWN  $9D79           ; Unknown 9xxx instruction
$520    $3FF1   SE       VF, #F1         ; Skip if VF == 241
$522    $F89B   UNKNOWN  F89B            ; Unknown Fxxx instruction
$524    $A114   LD       I, $114         ; Load 114 into I
$526    $3178   SE       V1, #78         ; Skip if V1 == 120
$528    $84E4   ADD      V4, VE          ; V4 += VE, VF = carry
$52A    $951B   UNKNOWN  $951B           ; Unknown 9xxx instruction
$52C    $7517   ADD      V5, #17         ; Add 23 to V5
$52E    $5F2C   UNKNOWN  $5F2C           ; Unknown 5xxx instruction
$530    $E327   UNKNOWN  $E327           ; Unknown Exxx instruction
$532    $01EF   SYS      $1EF            ; System call to 1EF
$534    $C066   RND      V0, #66         ; V0 = random & 66
$536    $AF42   LD       I, $F42         ; Load F42 into I
$538    $BA7C   JP       V0, $A7C        ; Jump to V0 + A7C
$53A    $1BE7   JP       $BE7            ; Jump to BE7
$53C    $B67A   JP       V0, $67A        ; Jump to V0 + 67A
$53E    $3F8D   SE       VF, #8D         ; Skip if VF == 141
$540    $6CFD   LD       VC, #FD         ; Load 253 into VC
$542    $C2BF   RND      V2, #BF         ; V2 = random & BF
$544    $A48B   LD       I, $48B         ; Load 48B into I
$546    $5E60   SE       VE, V6          ; Skip if VE == V6
$548    $C49A   RND      V4, #9A         ; V4 = random & 9A
$54A    $E80B   UNKNOWN  $E80B           ; Unknown Exxx instruction
$54C    $9178   UNKNOWN  $9178           ; Unknown 9xxx instruction
$54E    $A590   LD       I, $590         ; Load 590 into I
$550    $367F   SE       V6, #7F         ; Skip if V6 == 127
$552    $71B9   ADD      V1, #B9         ; Add 185 to V1
$554    $FFF1   UNKNOWN  FFF1            ; Unknown Fxxx instruction
$556    $00AF   SYS      $0AF            ; System call to 0AF
$558    $B5A0   JP       V0, $5A0        ; Jump to V0 + 5A0
$55A    $640E   LD       V4, #0E         ; Load 14 into V4
$55C    $5EDA   UNKNOWN  $5EDA           ; Unknown 5xxx instruction
$55E    $B563   JP       V0, $563        ; Jump to V0 + 563
$560    $A61E   LD       I, $61E         ; Load 61E into I
$562    $3876   SE       V8, #76         ; Skip if V8 == 118
$564    $4D1A   SNE      VD, #1A         ; Skip if VD != 26
$566    $E2E1   UNKNOWN  $E2E1           ; Unknown Exxx instruction
$568    $ADCD   LD       I, $DCD         ; Load DCD into I
$56A    $BB31   JP       V0, $B31        ; Jump to V0 + B31
$56C    $981D   UNKNOWN  $981D           ; Unknown 9xxx instruction
$56E    $CED1   RND      VE, #D1         ; VE = random & D1
$570    $CA2A   RND      VA, #2A         ; VA = random & 2A
$572    $8DC7   SUBN     VD, VC          ; VD = VC - VD, VF = !borrow
$574    $C4E0   RND      V4, #E0         ; V4 = random & E0
$576    $12F2   JP       $2F2            ; Jump to 2F2
$578    $3540   SE       V5, #40         ; Skip if V5 == 64
$57A    $5E01   UNKNOWN  $5E01           ; Unknown 5xxx instruction
$57C    $FCC8   UNKNOWN  FCC8            ; Unknown Fxxx instruction
$57E    $5237   UNKNOWN  $5237           ; Unknown 5xxx instruction
$580    $286D   CALL     $86D            ; Call subroutine at 86D
$582    $5AA3   UNKNOWN  $5AA3           ; Unknown 5xxx instruction
$584    $2F0F   CALL     $F0F            ; Call subroutine at F0F
$586    $8CAC   UNKNOWN  8CAC            ; Unknown 8xxx instruction
$588    $DCD1   DRW      VC, VD, #1      ; Draw 1-byte sprite at VC, VD
$58A    $3F13   SE       VF, #13         ; Skip if VF == 19
$58C    $7BB5   ADD      VB, #B5         ; Add 181 to VB
$58E    $033F   SYS      $33F            ; System call to 33F
$590    $D124   DRW      V1, V2, #4      ; Draw 4-byte sprite at V1, V2
$592    $C6C4   RND      V6, #C4         ; V6 = random & C4
$594    $0CEB   SYS      $CEB            ; System call to CEB
$596    $A603   LD       I, $603         ; Load 603 into I
$598    $2FDD   CALL     $FDD            ; Call subroutine at FDD
$59A    $6718   LD       V7, #18         ; Load 24 into V7
$59C    $ADC6   LD       I, $DC6         ; Load DC6 into I
$59E    $C2EA   RND      V2, #EA         ; V2 = random & EA
$5A0    $1FB2   JP       $FB2            ; Jump to FB2
$5A2    $3A90   SE       VA, #90         ; Skip if VA == 144
$5A4    $07D6   SYS      $7D6            ; System call to 7D6
$5A6    $57DE   UNKNOWN  $57DE           ; Unknown 5xxx instruction
$5A8    $D80B   DRW      V8, V0, #B      ; Draw 11-byte sprite at V8, V0
$5AA    $CF14   RND      VF, #14         ; VF = random & 14
$5AC    $45A0   SNE      V5, #A0         ; Skip if V5 != 160
$5AE    $97F8   UNKNOWN  $97F8           ; Unknown 9xxx instruction
$5B0    $92D4   UNKNOWN  $92D4           ; Unknown 9xxx instruction
$5B2    $4281   SNE      V2, #81         ; Skip if V2 != 129
$5B4    $C9FB   RND      V9, #FB         ; V9 = random & FB
$5B6    $C323   RND      V3, #23         ; V3 = random & 23
$5B8    $C38C   RND      V3, #8C         ; V3 = random & 8C
$5BA    $AAB1   LD       I, $AB1         ; Load AB1 into I
$5BC    $7E93   ADD      VE, #93         ; Add 147 to VE
$5BE    $BD50   JP       V0, $D50        ; Jump to V0 + D50
$5C0    $DA3A   DRW      VA, V3, #A      ; Draw 10-byte sprite at VA, V3
$5C2    $D00C   DRW      V0, V0, #C      ; Draw 12-byte sprite at V0, V0
$5C4    $0565   SYS      $565            ; System call to 565
$5C6    $5D6D   UNKNOWN  $5D6D           ; Unknown 5xxx instruction
$5C8    $BD54   JP       V0, $D54        ; Jump to V0 + D54
$5CA    $A6F1   LD       I, $6F1         ; Load 6F1 into I
$5CC    $959A   UNKNOWN  $959A           ; Unknown 9xxx instruction
$5CE    $68D2   LD       V8, #D2         ; Load 210 into V8
$5D0    $4954   SNE      V9, #54         ; Skip if V9 != 84
$5D2    $9E3F   UNKNOWN  $9E3F           ; Unknown 9xxx instruction
$5D4    $4B74   SNE      VB, #74         ; Skip if VB != 116
$5D6    $10ED   JP       $0ED            ; Jump to 0ED
$5D8    $F662   UNKNOWN  F662            ; Unknown Fxxx instruction
$5DA    $2DE3   CALL     $DE3            ; Call subroutine at DE3
$5DC    $648E   LD       V4, #8E         ; Load 142 into V4
$5DE    $8A7F   UNKNOWN  8A7F            ; Unknown 8xxx instruction
$5E0    $3D1B   SE       VD, #1B         ; Skip if VD == 27
$5E2    $DBF1   DRW      VB, VF, #1      ; Draw 1-byte sprite at VB, VF
$5E4    $2CCD   CALL     $CCD            ; Call subroutine at CCD
$5E6    $7241   ADD      V2, #41         ; Add 65 to V2
$5E8    $F354   UNKNOWN  F354            ; Unknown Fxxx instruction
$5EA    $B4C6   JP       V0, $4C6        ; Jump to V0 + 4C6
$5EC    $8CFD   UNKNOWN  8CFD            ; Unknown 8xxx instruction
$5EE    $18D5   JP       $8D5            ; Jump to 8D5
$5F0    $2C8E   CALL     $C8E            ; Call subroutine at C8E
$5F2    $3945   SE       V9, #45         ; Skip if V9 == 69
$5F4    $48FB   SNE      V8, #FB         ; Skip if V8 != 251
$5F6    $857E   SHL      V5              ; V5 <<= 1, VF = MSB
$5F8    $D908   DRW      V9, V0, #8      ; Draw 8-byte sprite at V9, V0
$5FA    $7EA9   ADD      VE, #A9         ; Add 169 to VE
$5FC    $5DE6   UNKNOWN  $5DE6           ; Unknown 5xxx instruction
$5FE    $8DD2   AND      VD, VD          ; VD &= VD
$600    $FC6F   UNKNOWN  FC6F            ; Unknown Fxxx instruction
$602    $E817   UNKNOWN  $E817           ; Unknown Exxx instruction
$604    $3A94   SE       VA, #94         ; Skip if VA == 148
$606    $3E65   SE       VE, #65         ; Skip if VE == 101
$608    $A15F   LD       I, $15F         ; Load 15F into I
$60A    $26CA   CALL     $6CA            ; Call subroutine at 6CA
$60C    $BB91   JP       V0, $B91        ; Jump to V0 + B91
$60E    $6227   LD       V2, #27         ; Load 39 into V2
$610    $158F   JP       $58F            ; Jump to 58F
$612    $ED79   UNKNOWN  $ED79           ; Unknown Exxx instruction
$614    $106C   JP       $06C            ; Jump to 06C
$616    $493C   SNE      V9, #3C         ; Skip if V9 != 60
$618    $5810   SE       V8, V1          ; Skip if V8 == V1
$61A    $FB0B   UNKNOWN  FB0B            ; Unknown Fxxx instruction
$61C    $D769   DRW      V7, V6, #9      ; Draw 9-byte sprite at V7, V6
$61E    $AA55   LD       I, $A55         ; Load A55 into I
$620    $6A13   LD       VA, #13         ; Load 19 into VA
$622    $6C99   LD       VC, #99         ; Load 153 into VC
$624    $A959   LD       I, $959         ; Load 959 into I
$626    $34EC   SE       V4, #EC         ; Skip if V4 == 236
$628    $B8F1   JP       V0, $8F1        ; Jump to V0 + 8F1
$62A    $7CD5   ADD      VC, #D5         ; Add 213 to VC
$62C    $EA7C   UNKNOWN  $EA7C           ; Unknown Exxx instruction
$62E    $B6B7   JP       V0, $6B7        ; Jump to V0 + 6B7
$630    $FF92   UNKNOWN  FF92            ; Unknown Fxxx instruction
$632    $9115   UNKNOWN  $9115           ; Unknown 9xxx instruction
$634    $24CA   CALL     $4CA            ; Call subroutine at 4CA
$636    $FC03   UNKNOWN  FC03            ; Unknown Fxxx instruction
$638    $E2F1   UNKNOWN  $E2F1           ; Unknown Exxx instruction
$63A    $7F87   ADD      VF, #87         ; Add 135 to VF
$63C    $A595   LD       I, $595         ; Load 595 into I
$63E    $18D5   JP       $8D5            ; Jump to 8D5
$640    $36AE   SE       V6, #AE         ; Skip if V6 == 174
$642    $9384   UNKNOWN  $9384           ; Unknown 9xxx instruction
$644    $ADC8   LD       I, $DC8         ; Load DC8 into I
$646    $929E   UNKNOWN  $929E           ; Unknown 9xxx instruction
$648    $D7AA   DRW      V7, VA, #A      ; Draw 10-byte sprite at V7, VA
$64A    $AB83   LD       I, $B83         ; Load B83 into I
$64C    $7F4E   ADD      VF, #4E         ; Add 78 to VF
$64E    $BC5B   JP       V0, $C5B        ; Jump to V0 + C5B
$650    $340D   SE       V4, #0D         ; Skip if V4 == 13
$652    $7C97   ADD      VC, #97         ; Add 151 to VC
$654    $5FE0   SE       VF, VE          ; Skip if VF == VE
$656    $35DE   SE       V5, #DE         ; Skip if V5 == 222
$658    $7F84   ADD      VF, #84         ; Add 132 to VF
$65A    $1253   JP       $253            ; Jump to 253
$65C    $77FB   ADD      V7, #FB         ; Add 251 to V7
$65E    $B5F8   JP       V0, $5F8        ; Jump to V0 + 5F8
$660    $AFCB   LD       I, $FCB         ; Load FCB into I
$662    $728C   ADD      V2, #8C         ; Add 140 to V2
$664    $FD08   UNKNOWN  FD08            ; Unknown Fxxx instruction
$666    $F303   UNKNOWN  F303            ; Unknown Fxxx instruction
$668    $1576   JP       $576            ; Jump to 576
$66A    $9E8E   UNKNOWN  $9E8E           ; Unknown 9xxx instruction
$66C    $CF02   RND      VF, #02         ; VF = random & 02
$66E    $1A98   JP       $A98            ; Jump to A98
$670    $FEFB   UNKNOWN  FEFB            ; Unknown Fxxx instruction
$672    $3175   SE       V1, #75         ; Skip if V1 == 117
$674    $FA3D   UNKNOWN  FA3D            ; Unknown Fxxx instruction
$676    $B592   JP       V0, $592        ; Jump to V0 + 592
$678    $D4B3   DRW      V4, VB, #3      ; Draw 3-byte sprite at V4, VB
$67A    $4445   SNE      V4, #45         ; Skip if V4 != 69
$67C    $59C4   UNKNOWN  $59C4           ; Unknown 5xxx instruction
$67E    $4D37   SNE      VD, #37         ; Skip if VD != 55
$680    $0765   SYS      $765            ; System call to 765
$682    $ECB8   UNKNOWN  $ECB8           ; Unknown Exxx instruction
$684    $F4F8   UNKNOWN  F4F8            ; Unknown Fxxx instruction
$686    $B1D8   JP       V0, $1D8        ; Jump to V0 + 1D8
$688    $CB70   RND      VB, #70         ; VB = random & 70
$68A    $8E91   OR       VE, V9          ; VE |= V9
$68C    $0B00   SYS      $B00            ; System call to B00
$68E    $1162   JP       $162            ; Jump to 162
$690    $C8C8   RND      V8, #C8         ; V8 = random & C8
$692    $CEBB   RND      VE, #BB         ; VE = random & BB
$694    $F9CD   UNKNOWN  F9CD            ; Unknown Fxxx instruction
$696    $1051   JP       $051            ; Jump to 051
$698    $2C02   CALL     $C02            ; Call subroutine at C02
$69A    $55BC   UNKNOWN  $55BC           ; Unknown 5xxx instruction
$69C    $6D5F   LD       VD, #5F         ; Load 95 into VD
$69E    $B80F   JP       V0, $80F        ; Jump to V0 + 80F
$6A0    $0A8F   SYS      $A8F            ; System call to A8F
$6A2    $0E51   SYS      $E51            ; System call to E51
$6A4    $BEB4   JP       V0, $EB4        ; Jump to V0 + EB4
$6A6    $A417   LD       I, $417         ; Load 417 into I
$6A8    $AEFF   LD       I, $EFF         ; Load EFF into I
$6AA    $AA35   LD       I, $A35         ; Load A35 into I
$6AC    $EBD9   UNKNOWN  $EBD9           ; Unknown Exxx instruction
$6AE    $45C9   SNE      V5, #C9         ; Skip if V5 != 201
$6B0    $C85F   RND      V8, #5F         ; V8 = random & 5F
$6B2    $C2C5   RND      V2, #C5         ; V2 = random & C5
$6B4    $1A30   JP       $A30            ; Jump to A30
$6B6    $91A5   UNKNOWN  $91A5           ; Unknown 9xxx instruction
$6B8    $65F1   LD       V5, #F1         ; Load 241 into V5
$6BA    $464D   SNE      V6, #4D         ; Skip if V6 != 77
$6BC    $FFF4   UNKNOWN  FFF4            ; Unknown Fxxx instruction
$6BE    $0FA8   SYS      $FA8            ; System call to FA8
$6C0    $EF6F   UNKNOWN  $EF6F           ; Unknown Exxx instruction
$6C2    $B214   JP       V0, $214        ; Jump to V0 + 214
$6C4    $9D49   UNKNOWN  $9D49           ; Unknown 9xxx instruction
$6C6    $9AE9   UNKNOWN  $9AE9           ; Unknown 9xxx instruction
$6C8    $8216   SHR      V2              ; V2 >>= 1, VF = LSB
$6CA    $B5D9   JP       V0, $5D9        ; Jump to V0 + 5D9
$6CC    $A9C8   LD       I, $9C8         ; Load 9C8 into I
$6CE    $BDE3   JP       V0, $DE3        ; Jump to V0 + DE3
$6D0    $67D6   LD       V7, #D6         ; Load 214 into V7
$6D2    $D07D   DRW      V0, V7, #D      ; Draw 13-byte sprite at V0, V7
$6D4    $138D   JP       $38D            ; Jump to 38D
$6D6    $999F   UNKNOWN  $999F           ; Unknown 9xxx instruction
$6D8    $F891   UNKNOWN  F891            ; Unknown Fxxx instruction
$6DA    $1AFA   JP       $AFA            ; Jump to AFA
$6DC    $A80C   LD       I, $80C         ; Load 80C into I
$6DE    $5662   UNKNOWN  $5662           ; Unknown 5xxx instruction
$6E0    $EAA2   UNKNOWN  $EAA2           ; Unknown Exxx instruction
$6E2    $26B7   CALL     $6B7            ; Call subroutine at 6B7
$6E4    $1DF0   JP       $DF0            ; Jump to DF0
$6E6    $A35F   LD       I, $35F         ; Load 35F into I
$6E8    $A26C   LD       I, $26C         ; Load 26C into I
$6EA    $AFBA   LD       I, $FBA         ; Load FBA into I
$6EC    $00B2   SYS      $0B2            ; System call to 0B2
$6EE    $6F8B   LD       VF, #8B         ; Load 139 into VF
$6F0    $5E50   SE       VE, V5          ; Skip if VE == V5
$6F2    $7A4E   ADD      VA, #4E         ; Add 78 to VA
$6F4    $AA61   LD       I, $A61         ; Load A61 into I
$6F6    $1B5C   JP       $B5C            ; Jump to B5C
$6F8    $4641   SNE      V6, #41         ; Skip if V6 != 65
$6FA    $59EE   UNKNOWN  $59EE           ; Unknown 5xxx instruction
$6FC    $643E   LD       V4, #3E         ; Load 62 into V4
$6FE    $16E6   JP       $6E6            ; Jump to 6E6
$700    $8B3E   SHL      VB              ; VB <<= 1, VF = MSB
$702    $744D   ADD      V4, #4D         ; Add 77 to V4
$704    $8991   OR       V9, V9          ; V9 |= V9
$706    $3B18   SE       VB, #18         ; Skip if VB == 24
$708    $17C1   JP       $7C1            ; Jump to 7C1
$70A    $5EFB   UNKNOWN  $5EFB           ; Unknown 5xxx instruction
$70C    $6FBB   LD       VF, #BB         ; Load 187 into VF
$70E    $51D7   UNKNOWN  $51D7           ; Unknown 5xxx instruction
$710    $3654   SE       V6, #54         ; Skip if V6 == 84
$712    $2D4F   CALL     $D4F            ; Call subroutine at D4F
$714    $086C   SYS      $86C            ; System call to 86C
$716    $ECC3   UNKNOWN  $ECC3           ; Unknown Exxx instruction
$718    $3E44   SE       VE, #44         ; Skip if VE == 68
$71A    $5993   UNKNOWN  $5993           ; Unknown 5xxx instruction
$71C    $0136   SYS      $136            ; System call to 136
$71E    $9AAA   UNKNOWN  $9AAA           ; Unknown 9xxx instruction
$720    $AB52   LD       I, $B52         ; Load B52 into I
$722    $EE6C   UNKNOWN  $EE6C           ; Unknown Exxx instruction
$724    $734A   ADD      V3, #4A         ; Add 74 to V3
$726    $4415   SNE      V4, #15         ; Skip if V4 != 21
$728    $C13D   RND      V1, #3D         ; V1 = random & 3D
$72A    $0D2A   SYS      $D2A            ; System call to D2A
$72C    $4A59   SNE      VA, #59         ; Skip if VA != 89
$72E    $A0B4   LD       I, $0B4         ; Load 0B4 into I
$730    $836A   UNKNOWN  836A            ; Unknown 8xxx instruction
$732    $16E8   JP       $6E8            ; Jump to 6E8
$734    $3A4C   SE       VA, #4C         ; Skip if VA == 76
$736    $38E2   SE       V8, #E2         ; Skip if V8 == 226
$738    $D0B5   DRW      V0, VB, #5      ; Draw 5-byte sprite at V0, VB
$73A    $0956   SYS      $956            ; System call to 956
$73C    $5520   SE       V5, V2          ; Skip if V5 == V2
$73E    $BBBD   JP       V0, $BBD        ; Jump to V0 + BBD
$740    $7451   ADD      V4, #51         ; Add 81 to V4
$742    $4DE8   SNE      VD, #E8         ; Skip if VD != 232
$744    $A4B5   LD       I, $4B5         ; Load 4B5 into I
$746    $7336   ADD      V3, #36         ; Add 54 to V3
$748    $488C   SNE      V8, #8C         ; Skip if V8 != 140
$74A    $92C1   UNKNOWN  $92C1           ; Unknown 9xxx instruction
$74C    $19E0   JP       $9E0            ; Jump to 9E0
$74E    $83FD   UNKNOWN  83FD            ; Unknown 8xxx instruction
$750    $3063   SE       V0, #63         ; Skip if V0 == 99
$752    $EF0A   UNKNOWN  $EF0A           ; Unknown Exxx instruction
$754    $FB26   UNKNOWN  FB26            ; Unknown Fxxx instruction
$756    $BCB6   JP       V0, $CB6        ; Jump to V0 + CB6
$758    $E370   UNKNOWN  $E370           ; Unknown Exxx instruction
$75A    $AA8C   LD       I, $A8C         ; Load A8C into I
$75C    $B97E   JP       V0, $97E        ; Jump to V0 + 97E
$75E    $0C3B   SYS      $C3B            ; System call to C3B
$760    $087F   SYS      $87F            ; System call to 87F
$762    $D10A   DRW      V1, V0, #A      ; Draw 10-byte sprite at V1, V0
$764    $B453   JP       V0, $453        ; Jump to V0 + 453
$766    $B45B   JP       V0, $45B        ; Jump to V0 + 45B
$768    $0B04   SYS      $B04            ; System call to B04
$76A    $43DA   SNE      V3, #DA         ; Skip if V3 != 218
$76C    $C9EC   RND      V9, #EC         ; V9 = random & EC
$76E    $ADC0   LD       I, $DC0         ; Load DC0 into I
$770    $DBC4   DRW      VB, VC, #4      ; Draw 4-byte sprite at VB, VC
$772    $75C7   ADD      V5, #C7         ; Add 199 to V5
$774    $CEC7   RND      VE, #C7         ; VE = random & C7
$776    $F94E   UNKNOWN  F94E            ; Unknown Fxxx instruction
$778    $B4C9   JP       V0, $4C9        ; Jump to V0 + 4C9
$77A    $3DBA   SE       VD, #BA         ; Skip if VD == 186
$77C    $45AD   SNE      V5, #AD         ; Skip if V5 != 173
$77E    $7A1A   ADD      VA, #1A         ; Add 26 to VA
$780    $7BF7   ADD      VB, #F7         ; Add 247 to VB
$782    $A830   LD       I, $830         ; Load 830 into I
$784    $EE2E   UNKNOWN  $EE2E           ; Unknown Exxx instruction
$786    $1BC0   JP       $BC0            ; Jump to BC0
$788    $6173   LD       V1, #73         ; Load 115 into V1
$78A    $76A4   ADD      V6, #A4         ; Add 164 to V6
$78C    $8CAF   UNKNOWN  8CAF            ; Unknown 8xxx instruction
$78E    $6CF3   LD       VC, #F3         ; Load 243 into VC
$790    $ACF4   LD       I, $CF4         ; Load CF4 into I
$792    $61C0   LD       V1, #C0         ; Load 192 into V1
$794    $306A   SE       V0, #6A         ; Skip if V0 == 106
$796    $C555   RND      V5, #55         ; V5 = random & 55
$798    $90D7   UNKNOWN  $90D7           ; Unknown 9xxx instruction
$79A    $95BA   UNKNOWN  $95BA           ; Unknown 9xxx instruction
$79C    $3059   SE       V0, #59         ; Skip if V0 == 89
$79E    $0DAD   SYS      $DAD            ; System call to DAD
$7A0    $7BEE   ADD      VB, #EE         ; Add 238 to VB
$7A2    $AD76   LD       I, $D76         ; Load D76 into I
$7A4    $D61E   DRW      V6, V1, #E      ; Draw 14-byte sprite at V6, V1
$7A6    $0471   SYS      $471            ; System call to 471
$7A8    $047A   SYS      $47A            ; System call to 47A
$7AA    $A130   LD       I, $130         ; Load 130 into I
$7AC    $A4E4   LD       I, $4E4         ; Load 4E4 into I
$7AE    $AE8E   LD       I, $E8E         ; Load E8E into I
$7B0    $3C81   SE       VC, #81         ; Skip if VC == 129
$7B2    $6301   LD       V3, #01         ; Load 1 into V3
$7B4    $6658   LD       V6, #58         ; Load 88 into V6
$7B6    $D72F   DRW      V7, V2, #F      ; Draw 15-byte sprite at V7, V2
$7B8    $60DD   LD       V0, #DD         ; Load 221 into V0
$7BA    $A5B8   LD       I, $5B8         ; Load 5B8 into I
$7BC    $7712   ADD      V7, #12         ; Add 18 to V7
$7BE    $F9F4   UNKNOWN  F9F4            ; Unknown Fxxx instruction
$7C0    $3349   SE       V3, #49         ; Skip if V3 == 73
$7C2    $1735   JP       $735            ; Jump to 735
$7C4    $2C0B   CALL     $C0B            ; Call subroutine at C0B
$7C6    $7E94   ADD      VE, #94         ; Add 148 to VE
$7C8    $2C8C   CALL     $C8C            ; Call subroutine at C8C
$7CA    $AAD9   LD       I, $AD9         ; Load AD9 into I
$7CC    $C585   RND      V5, #85         ; V5 = random & 85
$7CE    $B401   JP       V0, $401        ; Jump to V0 + 401
$7D0    $9183   UNKNOWN  $9183           ; Unknown 9xxx instruction
$7D2    $E121   UNKNOWN  $E121           ; Unknown Exxx instruction
$7D4    $890D   UNKNOWN  890D            ; Unknown 8xxx instruction
$7D6    $5217   UNKNOWN  $5217           ; Unknown 5xxx instruction
$7D8    $63B5   LD       V3, #B5         ; Load 181 into V3
$7DA    $CB52   RND      VB, #52         ; VB = random & 52
$7DC    $EE18   UNKNOWN  $EE18           ; Unknown Exxx instruction
$7DE    $3D72   SE       VD, #72         ; Skip if VD == 114
$7E0    $004A   SYS      $04A            ; System call to 04A
$7E2    $099F   SYS      $99F            ; System call to 99F
$7E4    $3AC9   SE       VA, #C9         ; Skip if VA == 201
$7E6    $99FD   UNKNOWN  $99FD           ; Unknown 9xxx instruction
$7E8    $E2E6   UNKNOWN  $E2E6           ; Unknown Exxx instruction
$7EA    $22A0   CALL     $2A0            ; Call subroutine at 2A0
$7EC    $4D34   SNE      VD, #34         ; Skip if VD != 52
$7EE    $26A0   CALL     $6A0            ; Call subroutine at 6A0
$7F0    $0EC0   SYS      $EC0            ; System call to EC0
$7F2    $410D   SNE      V1, #0D         ; Skip if V1 != 13
$7F4    $FC56   UNKNOWN  FC56            ; Unknown Fxxx instruction
$7F6    $23A9   CALL     $3A9            ; Call subroutine at 3A9
$7F8    $9C2F   UNKNOWN  $9C2F           ; Unknown 9xxx instruction
$7FA    $5143   UNKNOWN  $5143           ; Unknown 5xxx instruction
$7FC    $463C   SNE      V6, #3C         ; Skip if V6 != 60
$7FE    $ACDD   LD       I, $CDD         ; Load CDD into I
$800    $111D   JP       $11D            ; Jump to 11D
$802    $A68D   LD       I, $68D         ; Load 68D into I
$804    $FF25   UNKNOWN  FF25            ; Unknown Fxxx instruction
$806    $3725   SE       V7, #25         ; Skip if V7 == 37
$808    $050E   SYS      $50E            ; System call to 50E
$80A    $DFAF   DRW      VF, VA, #F      ; Draw 15-byte sprite at VF, VA
$80C    $466C   SNE      V6, #6C         ; Skip if V6 != 108
$80E    $87C5   SUB      V7, VC          ; V7 -= VC, VF = !borrow
$810    $1982   JP       $982            ; Jump to 982
$812    $49E9   SNE      V9, #E9         ; Skip if V9 != 233
$814    $0E62   SYS      $E62            ; System call to E62
$816    $B8ED   JP       V0, $8ED        ; Jump to V0 + 8ED
$818    $C237   RND      V2, #37         ; V2 = random & 37
$81A    $EF05   UNKNOWN  $EF05           ; Unknown Exxx instruction
$81C    $5566   UNKNOWN  $5566           ; Unknown 5xxx instruction
$81E    $6D15   LD       VD, #15         ; Load 21 into VD
$820    $5A4F   UNKNOWN  $5A4F           ; Unknown 5xxx instruction
$822    $8578   UNKNOWN  8578            ; Unknown 8xxx instruction
$824    $02E0   SYS      $2E0            ; System call to 2E0
$826    $3EDC   SE       VE, #DC         ; Skip if VE == 220
$828    $21AC   CALL     $1AC            ; Call subroutine at 1AC
$82A    $1A6D   JP       $A6D            ; Jump to A6D
$82C    $2446   CALL     $446            ; Call subroutine at 446
$82E    $435B   SNE      V3, #5B         ; Skip if V3 != 91
$830    $CC1B   RND      VC, #1B         ; VC = random & 1B
$832    $14C0   JP       $4C0            ; Jump to 4C0
$834    $61BD   LD       V1, #BD         ; Load 189 into V1
$836    $FFD3   UNKNOWN  FFD3            ; Unknown Fxxx instruction
$838    $F3DD   UNKNOWN  F3DD            ; Unknown Fxxx instruction
$83A    $7425   ADD      V4, #25         ; Add 37 to V4
$83C    $2640   CALL     $640            ; Call subroutine at 640
$83E    $8727   SUBN     V7, V2          ; V7 = V2 - V7, VF = !borrow
$840    $4E1D   SNE      VE, #1D         ; Skip if VE != 29
$842    $FA01   UNKNOWN  FA01            ; Unknown Fxxx instruction
$844    $1CE7   JP       $CE7            ; Jump to CE7
$846    $E103   UNKNOWN  $E103           ; Unknown Exxx instruction
$848    $184F   JP       $84F            ; Jump to 84F
$84A    $D848   DRW      V8, V4, #8      ; Draw 8-byte sprite at V8, V4
$84C    $CEC2   RND      VE, #C2         ; VE = random & C2
$84E    $33F5   SE       V3, #F5         ; Skip if V3 == 245
$850    $E835   UNKNOWN  $E835           ; Unknown Exxx instruction
$852    $630E   LD       V3, #0E         ; Load 14 into V3
$854    $541D   UNKNOWN  $541D           ; Unknown 5xxx instruction
$856    $1CCD   JP       $CCD            ; Jump to CCD
$858    $C0DC   RND      V0, #DC         ; V0 = random & DC
$85A    $FD94   UNKNOWN  FD94            ; Unknown Fxxx instruction
$85C    $E776   UNKNOWN  $E776           ; Unknown Exxx instruction
$85E    $CC64   RND      VC, #64         ; VC = random & 64
$860    $93F4   UNKNOWN  $93F4           ; Unknown 9xxx instruction
$862    $3D54   SE       VD, #54         ; Skip if VD == 84
$864    $A96A   LD       I, $96A         ; Load 96A into I
$866    $756A   ADD      V5, #6A         ; Add 106 to V5
$868    $4DD3   SNE      VD, #D3         ; Skip if VD != 211
$86A    $727E   ADD      V2, #7E         ; Add 126 to V2
$86C    $F2DE   UNKNOWN  F2DE            ; Unknown Fxxx instruction
$86E    $1175   JP       $175            ; Jump to 175
$870    $5B48   UNKNOWN  $5B48           ; Unknown 5xxx instruction
$872    $B7BF   JP       V0, $7BF        ; Jump to V0 + 7BF
$874    $92D8   UNKNOWN  $92D8           ; Unknown 9xxx instruction
$876    $5DCE   UNKNOWN  $5DCE           ; Unknown 5xxx instruction
$878    $50A3   UNKNOWN  $50A3           ; Unknown 5xxx instruction
$87A    $0BEF   SYS      $BEF            ; System call to BEF
$87C    $567A   UNKNOWN  $567A           ; Unknown 5xxx instruction
$87E    $075F   SYS      $75F            ; System call to 75F
$880    $6AC6   LD       VA, #C6         ; Load 198 into VA
$882    $C479   RND      V4, #79         ; V4 = random & 79
$884    $9341   UNKNOWN  $9341           ; Unknown 9xxx instruction
$886    $BF3F   JP       V0, $F3F        ; Jump to V0 + F3F
$888    $820B   UNKNOWN  820B            ; Unknown 8xxx instruction
$88A    $7715   ADD      V7, #15         ; Add 21 to V7
$88C    $15A8   JP       $5A8            ; Jump to 5A8
$88E    $AA14   LD       I, $A14         ; Load A14 into I
$890    $FCF7   UNKNOWN  FCF7            ; Unknown Fxxx instruction
$892    $D25F   DRW      V2, V5, #F      ; Draw 15-byte sprite at V2, V5
$894    $13FF   JP       $3FF            ; Jump to 3FF
$896    $DF04   DRW      VF, V0, #4      ; Draw 4-byte sprite at VF, V0
$898    $028A   SYS      $28A            ; System call to 28A
$89A    $6C4A   LD       VC, #4A         ; Load 74 into VC
$89C    $3FA2   SE       VF, #A2         ; Skip if VF == 162
$89E    $8340   LD       V3, V4          ; V3 = V4
$8A0    $5ABF   UNKNOWN  $5ABF           ; Unknown 5xxx instruction
$8A2    $4338   SNE      V3, #38         ; Skip if V3 != 56
$8A4    $7EF8   ADD      VE, #F8         ; Add 248 to VE
$8A6    $D702   DRW      V7, V0, #2      ; Draw 2-byte sprite at V7, V0
$8A8    $2568   CALL     $568            ; Call subroutine at 568
$8AA    $6F4E   LD       VF, #4E         ; Load 78 into VF
$8AC    $A261   LD       I, $261         ; Load 261 into I
$8AE    $79AD   ADD      V9, #AD         ; Add 173 to V9
$8B0    $17AF   JP       $7AF            ; Jump to 7AF
$8B2    $01AF   SYS      $1AF            ; System call to 1AF
$8B4    $ACC1   LD       I, $CC1         ; Load CC1 into I
$8B6    $C865   RND      V8, #65         ; V8 = random & 65
$8B8    $13FA   JP       $3FA            ; Jump to 3FA
$8BA    $3590   SE       V5, #90         ; Skip if V5 == 144
$8BC    $19F8   JP       $9F8            ; Jump to 9F8
$8BE    $4520   SNE      V5, #20         ; Skip if V5 != 32
$8C0    $19A1   JP       $9A1            ; Jump to 9A1
$8C2    $B031   JP       V0, $031        ; Jump to V0 + 031
$8C4    $4501   SNE      V5, #01         ; Skip if V5 != 1
$8C6    $DE1A   DRW      VE, V1, #A      ; Draw 10-byte sprite at VE, V1
$8C8    $549A   UNKNOWN  $549A           ; Unknown 5xxx instruction
$8CA    $EDC5   UNKNOWN  $EDC5           ; Unknown Exxx instruction
$8CC    $3C0F   SE       VC, #0F         ; Skip if VC == 15
$8CE    $74E5   ADD      V4, #E5         ; Add 229 to V4
$8D0    $218E   CALL     $18E            ; Call subroutine at 18E
$8D2    $42FA   SNE      V2, #FA         ; Skip if V2 != 250
$8D4    $FE8F   UNKNOWN  FE8F            ; Unknown Fxxx instruction
$8D6    $B33F   JP       V0, $33F        ; Jump to V0 + 33F
$8D8    $60C8   LD       V0, #C8         ; Load 200 into V0
$8DA    $457C   SNE      V5, #7C         ; Skip if V5 != 124
$8DC    $D583   DRW      V5, V8, #3      ; Draw 3-byte sprite at V5, V8
$8DE    $D606   DRW      V6, V0, #6      ; Draw 6-byte sprite at V6, V0
$8E0    $CC6D   RND      VC, #6D         ; VC = random & 6D
$8E2    $CEDA   RND      VE, #DA         ; VE = random & DA
$8E4    $3BCD   SE       VB, #CD         ; Skip if VB == 205
$8E6    $17D7   JP       $7D7            ; Jump to 7D7
$8E8    $7BF9   ADD      VB, #F9         ; Add 249 to VB
$8EA    $E3B3   UNKNOWN  $E3B3           ; Unknown Exxx instruction
$8EC    $FF26   UNKNOWN  FF26            ; Unknown Fxxx instruction
$8EE    $49BA   SNE      V9, #BA         ; Skip if V9 != 186
$8F0    $1E4A   JP       $E4A            ; Jump to E4A
$8F2    $7B73   ADD      VB, #73         ; Add 115 to VB
$8F4    $C198   RND      V1, #98         ; V1 = random & 98
$8F6    $2A52   CALL     $A52            ; Call subroutine at A52
$8F8    $FCDC   UNKNOWN  FCDC            ; Unknown Fxxx instruction
$8FA    $36FB   SE       V6, #FB         ; Skip if V6 == 251
$8FC    $58E9   UNKNOWN  $58E9           ; Unknown 5xxx instruction
$8FE    $943D   UNKNOWN  $943D           ; Unknown 9xxx instruction
$900    $BAF8   JP       V0, $AF8        ; Jump to V0 + AF8
$902    $44F9   SNE      V4, #F9         ; Skip if V4 != 249
$904    $26C9   CALL     $6C9            ; Call subroutine at 6C9
$906    $A17F   LD       I, $17F         ; Load 17F into I
$908    $0FB3   SYS      $FB3            ; System call to FB3
$90A    $FFB8   UNKNOWN  FFB8            ; Unknown Fxxx instruction
$90C    $4332   SNE      V3, #32         ; Skip if V3 != 50
$90E    $2B0D   CALL     $B0D            ; Call subroutine at B0D
$910    $FB45   UNKNOWN  FB45            ; Unknown Fxxx instruction
$912    $BB90   JP       V0, $B90        ; Jump to V0 + B90
$914    $F052   UNKNOWN  F052            ; Unknown Fxxx instruction
$916    $2251   CALL     $251            ; Call subroutine at 251
$918    $5BDB   UNKNOWN  $5BDB           ; Unknown 5xxx instruction
$91A    $FD31   UNKNOWN  FD31            ; Unknown Fxxx instruction
$91C    $05A1   SYS      $5A1            ; System call to 5A1
$91E    $EC98   UNKNOWN  $EC98           ; Unknown Exxx instruction
$920    $4A7A   SNE      VA, #7A         ; Skip if VA != 122
$922    $98C0   SNE      V8, VC          ; Skip if V8 != VC
$924    $86B9   UNKNOWN  86B9            ; Unknown 8xxx instruction
$926    $3735   SE       V7, #35         ; Skip if V7 == 53
$928    $2713   CALL     $713            ; Call subroutine at 713
$92A    $A62E   LD       I, $62E         ; Load 62E into I
$92C    $16F2   JP       $6F2            ; Jump to 6F2
$92E    $180B   JP       $80B            ; Jump to 80B
$930    $736D   ADD      V3, #6D         ; Add 109 to V3
$932    $8C7A   UNKNOWN  8C7A            ; Unknown 8xxx instruction
$934    $5DDA   UNKNOWN  $5DDA           ; Unknown 5xxx instruction
$936    $4245   SNE      V2, #45         ; Skip if V2 != 69
$938    $0A48   SYS      $A48            ; System call to A48
$93A    $8A5F   UNKNOWN  8A5F            ; Unknown 8xxx instruction
$93C    $7E4C   ADD      VE, #4C         ; Add 76 to VE
$93E    $E36F   UNKNOWN  $E36F           ; Unknown Exxx instruction
$940    $D2B7   DRW      V2, VB, #7      ; Draw 7-byte sprite at V2, VB
$942    $CAC7   RND      VA, #C7         ; VA = random & C7
$944    $7949   ADD      V9, #49         ; Add 73 to V9
$946    $27FC   CALL     $7FC            ; Call subroutine at 7FC
$948    $412B   SNE      V1, #2B         ; Skip if V1 != 43
$94A    $542E   UNKNOWN  $542E           ; Unknown 5xxx instruction
$94C    $9EB0   SNE      VE, VB          ; Skip if VE != VB
$94E    $5BF1   UNKNOWN  $5BF1           ; Unknown 5xxx instruction
$950    $EC89   UNKNOWN  $EC89           ; Unknown Exxx instruction
$952    $472D   SNE      V7, #2D         ; Skip if V7 != 45
$954    $510D   UNKNOWN  $510D           ; Unknown 5xxx instruction
$956    $2C5C   CALL     $C5C            ; Call subroutine at C5C
$958    $F875   UNKNOWN  F875            ; Unknown Fxxx instruction
$95A    $36F8   SE       V6, #F8         ; Skip if V6 == 248
$95C    $F899   UNKNOWN  F899            ; Unknown Fxxx instruction
$95E    $FCC4   UNKNOWN  FCC4            ; Unknown Fxxx instruction
$960    $D104   DRW      V1, V0, #4      ; Draw 4-byte sprite at V1, V0
$962    $ED16   UNKNOWN  $ED16           ; Unknown Exxx instruction
$964    $F2AA   UNKNOWN  F2AA            ; Unknown Fxxx instruction
$966    $B3CC   JP       V0, $3CC        ; Jump to V0 + 3CC
$968    $CA84   RND      VA, #84         ; VA = random & 84
$96A    $41B9   SNE      V1, #B9         ; Skip if V1 != 185
$96C    $16FB   JP       $6FB            ; Jump to 6FB
$96E    $3DB3   SE       VD, #B3         ; Skip if VD == 179
$970    $41B9   SNE      V1, #B9         ; Skip if V1 != 185
$972    $F7B5   UNKNOWN  F7B5            ; Unknown Fxxx instruction
$974    $D131   DRW      V1, V3, #1      ; Draw 1-byte sprite at V1, V3
$976    $EAB6   UNKNOWN  $EAB6           ; Unknown Exxx instruction
$978    $592C   UNKNOWN  $592C           ; Unknown 5xxx instruction
$97A    $BF6F   JP       V0, $F6F        ; Jump to V0 + F6F
$97C    $FD71   UNKNOWN  FD71            ; Unknown Fxxx instruction
$97E    $C870   RND      V8, #70         ; V8 = random & 70
$980    $DFF9   DRW      VF, VF, #9      ; Draw 9-byte sprite at VF, VF
$982    $2167   CALL     $167            ; Call subroutine at 167
$984    $0FF3   SYS      $FF3            ; System call to FF3
$986    $64D9   LD       V4, #D9         ; Load 217 into V4
$988    $6063   LD       V0, #63         ; Load 99 into V0
$98A    $9D08   UNKNOWN  $9D08           ; Unknown 9xxx instruction
$98C    $C83E   RND      V8, #3E         ; V8 = random & 3E
$98E    $3A5C   SE       VA, #5C         ; Skip if VA == 92
$990    $6054   LD       V0, #54         ; Load 84 into V0
$992    $5470   SE       V4, V7          ; Skip if V4 == V7
$994    $FCDD   UNKNOWN  FCDD            ; Unknown Fxxx instruction
$996    $3376   SE       V3, #76         ; Skip if V3 == 118
$998    $F938   UNKNOWN  F938            ; Unknown Fxxx instruction
$99A    $047F   SYS      $47F            ; System call to 47F
$99C    $F463   UNKNOWN  F463            ; Unknown Fxxx instruction
$99E    $8494   ADD      V4, V9          ; V4 += V9, VF = carry
$9A0    $7505   ADD      V5, #05         ; Add 5 to V5
$9A2    $8A47   SUBN     VA, V4          ; VA = V4 - VA, VF = !borrow
$9A4    $AEA0   LD       I, $EA0         ; Load EA0 into I
$9A6    $FA32   UNKNOWN  FA32            ; Unknown Fxxx instruction
$9A8    $34E6   SE       V4, #E6         ; Skip if V4 == 230
$9AA    $904C   UNKNOWN  $904C           ; Unknown 9xxx instruction
$9AC    $DDDF   DRW      VD, VD, #F      ; Draw 15-byte sprite at VD, VD
$9AE    $76EE   ADD      V6, #EE         ; Add 238 to V6
$9B0    $410D   SNE      V1, #0D         ; Skip if V1 != 13
$9B2    $C109   RND      V1, #09         ; V1 = random & 09
$9B4    $41D8   SNE      V1, #D8         ; Skip if V1 != 216
$9B6    $8758   UNKNOWN  8758            ; Unknown 8xxx instruction
$9B8    $F7D5   UNKNOWN  F7D5            ; Unknown Fxxx instruction
$9BA    $7158   ADD      V1, #58         ; Add 88 to V1
$9BC    $0EC5   SYS      $EC5            ; System call to EC5
$9BE    $3627   SE       V6, #27         ; Skip if V6 == 39
$9C0    $9563   UNKNOWN  $9563           ; Unknown 9xxx instruction
$9C2    $61FA   LD       V1, #FA         ; Load 250 into V1
$9C4    $9D67   UNKNOWN  $9D67           ; Unknown 9xxx instruction
$9C6    $8CCC   UNKNOWN  8CCC            ; Unknown 8xxx instruction
$9C8    $B2BC   JP       V0, $2BC        ; Jump to V0 + 2BC
$9CA    $395F   SE       V9, #5F         ; Skip if V9 == 95
$9CC    $6FDF   LD       VF, #DF         ; Load 223 into VF
$9CE    $A350   LD       I, $350         ; Load 350 into I
$9D0    $C15C   RND      V1, #5C         ; V1 = random & 5C
$9D2    $D7C2   DRW      V7, VC, #2      ; Draw 2-byte sprite at V7, VC
$9D4    $938E   UNKNOWN  $938E           ; Unknown 9xxx instruction
$9D6    $6538   LD       V5, #38         ; Load 56 into V5
$9D8    $D22A   DRW      V2, V2, #A      ; Draw 10-byte sprite at V2, V2
$9DA    $0AD7   SYS      $AD7            ; System call to AD7
$9DC    $3AF9   SE       VA, #F9         ; Skip if VA == 249
$9DE    $D197   DRW      V1, V9, #7      ; Draw 7-byte sprite at V1, V9
$9E0    $7C96   ADD      VC, #96         ; Add 150 to VC
$9E2    $3FF1   SE       VF, #F1         ; Skip if VF == 241
$9E4    $8B86   SHR      VB              ; VB >>= 1, VF = LSB
$9E6    $65FB   LD       V5, #FB         ; Load 251 into V5
$9E8    $D889   DRW      V8, V8, #9      ; Draw 9-byte sprite at V8, V8
$9EA    $7CDA   ADD      VC, #DA         ; Add 218 to VC
$9EC    $B24D   JP       V0, $24D        ; Jump to V0 + 24D
$9EE    $A8A2   LD       I, $8A2         ; Load 8A2 into I
$9F0    $A5CE   LD       I, $5CE         ; Load 5CE into I
$9F2    $F4F7   UNKNOWN  F4F7            ; Unknown Fxxx instruction
$9F4    $6455   LD       V4, #55         ; Load 85 into V4
$9F6    $D4E1   DRW      V4, VE, #1      ; Draw 1-byte sprite at V4, VE
$9F8    $787A   ADD      V8, #7A         ; Add 122 to V8
$9FA    $6209   LD       V2, #09         ; Load 9 into V2
$9FC    $EE18   UNKNOWN  $EE18           ; Unknown Exxx instruction
$9FE    $5FF0   SE       VF, VF          ; Skip if VF == VF
$A00    $681A   LD       V8, #1A         ; Load 26 into V8
$A02    $D14B   DRW      V1, V4, #B      ; Draw 11-byte sprite at V1, V4
$A04    $6F8D   LD       VF, #8D         ; Load 141 into VF
$A06    $1CFB   JP       $CFB            ; Jump to CFB
$A08    $9295   UNKNOWN  $9295           ; Unknown 9xxx instruction
$A0A    $A15E   LD       I, $15E         ; Load 15E into I
$A0C    $2CEA   CALL     $CEA            ; Call subroutine at CEA
$A0E    $592E   UNKNOWN  $592E           ; Unknown 5xxx instruction
$A10    $5DEE   UNKNOWN  $5DEE           ; Unknown 5xxx instruction
$A12    $4D16   SNE      VD, #16         ; Skip if VD != 22
$A14    $0AB4   SYS      $AB4            ; System call to AB4
$A16    $3595   SE       V5, #95         ; Skip if V5 == 149
$A18    $E634   UNKNOWN  $E634           ; Unknown Exxx instruction
$A1A    $B187   JP       V0, $187        ; Jump to V0 + 187
$A1C    $F2E8   UNKNOWN  F2E8            ; Unknown Fxxx instruction
$A1E    $E6A6   UNKNOWN  $E6A6           ; Unknown Exxx instruction
$A20    $8AD0   LD       VA, VD          ; VA = VD
$A22    $7C41   ADD      VC, #41         ; Add 65 to VC
$A24    $26F8   CALL     $6F8            ; Call subroutine at 6F8
$A26    $BE37   JP       V0, $E37        ; Jump to V0 + E37
$A28    $2A62   CALL     $A62            ; Call subroutine at A62
$A2A    $0D23   SYS      $D23            ; System call to D23
$A2C    $DFF6   DRW      VF, VF, #6      ; Draw 6-byte sprite at VF, VF
$A2E    $ABFA   LD       I, $BFA         ; Load BFA into I
$A30    $DF58   DRW      VF, V5, #8      ; Draw 8-byte sprite at VF, V5
$A32    $4366   SNE      V3, #66         ; Skip if V3 != 102
$A34    $239C   CALL     $39C            ; Call subroutine at 39C
$A36    $0F2B   SYS      $F2B            ; System call to F2B
$A38    $B044   JP       V0, $044        ; Jump to V0 + 044
$A3A    $9E68   UNKNOWN  $9E68           ; Unknown 9xxx instruction
$A3C    $DEE3   DRW      VE, VE, #3      ; Draw 3-byte sprite at VE, VE
$A3E    $DE31   DRW      VE, V3, #1      ; Draw 1-byte sprite at VE, V3
$A40    $EE9D   UNKNOWN  $EE9D           ; Unknown Exxx instruction
$A42    $088F   SYS      $88F            ; System call to 88F
$A44    $153A   JP       $53A            ; Jump to 53A
$A46    $66AA   LD       V6, #AA         ; Load 170 into V6
$A48    $4257   SNE      V2, #57         ; Skip if V2 != 87
$A4A    $498C   SNE      V9, #8C         ; Skip if V9 != 140
$A4C    $FD75   UNKNOWN  FD75            ; Unknown Fxxx instruction
$A4E    $6970   LD       V9, #70         ; Load 112 into V9
$A50    $9037   UNKNOWN  $9037           ; Unknown 9xxx instruction
$A52    $C8C9   RND      V8, #C9         ; V8 = random & C9
$A54    $FF38   UNKNOWN  FF38            ; Unknown Fxxx instruction
$A56    $E5F1   UNKNOWN  $E5F1           ; Unknown Exxx instruction
$A58    $30E1   SE       V0, #E1         ; Skip if V0 == 225
$A5A    $3B74   SE       VB, #74         ; Skip if VB == 116
$A5C    $D43E   DRW      V4, V3, #E      ; Draw 14-byte sprite at V4, V3
$A5E    $914D   UNKNOWN  $914D           ; Unknown 9xxx instruction
$A60    $7E15   ADD      VE, #15         ; Add 21 to VE
$A62    $38AD   SE       V8, #AD         ; Skip if V8 == 173
$A64    $B387   JP       V0, $387        ; Jump to V0 + 387
$A66    $D613   DRW      V6, V1, #3      ; Draw 3-byte sprite at V6, V1
$A68    $9CC2   UNKNOWN  $9CC2           ; Unknown 9xxx instruction
$A6A    $544F   UNKNOWN  $544F           ; Unknown 5xxx instruction
$A6C    $9749   UNKNOWN  $9749           ; Unknown 9xxx instruction
$A6E    $2ECD   CALL     $ECD            ; Call subroutine at ECD
$A70    $D222   DRW      V2, V2, #2      ; Draw 2-byte sprite at V2, V2
$A72    $1771   JP       $771            ; Jump to 771
$A74    $D3E4   DRW      V3, VE, #4      ; Draw 4-byte sprite at V3, VE
$A76    $B1F8   JP       V0, $1F8        ; Jump to V0 + 1F8
$A78    $D9D8   DRW      V9, VD, #8      ; Draw 8-byte sprite at V9, VD
$A7A    $78F4   ADD      V8, #F4         ; Add 244 to V8
$A7C    $4563   SNE      V5, #63         ; Skip if V5 != 99
$A7E    $CF1C   RND      VF, #1C         ; VF = random & 1C
$A80    $CA69   RND      VA, #69         ; VA = random & 69
$A82    $1B44   JP       $B44            ; Jump to B44
$A84    $5AB7   UNKNOWN  $5AB7           ; Unknown 5xxx instruction
$A86    $9AE1   UNKNOWN  $9AE1           ; Unknown 9xxx instruction
$A88    $B90F   JP       V0, $90F        ; Jump to V0 + 90F
$A8A    $9E12   UNKNOWN  $9E12           ; Unknown 9xxx instruction
$A8C    $77AD   ADD      V7, #AD         ; Add 173 to V7
$A8E    $B1EF   JP       V0, $1EF        ; Jump to V0 + 1EF
$A90    $EC4B   UNKNOWN  $EC4B           ; Unknown Exxx instruction
$A92    $7575   ADD      V5, #75         ; Add 117 to V5
$A94    $CDD7   RND      VD, #D7         ; VD = random & D7
$A96    $FE67   UNKNOWN  FE67            ; Unknown Fxxx instruction
$A98    $60DC   LD       V0, #DC         ; Load 220 into V0
$A9A    $A373   LD       I, $373         ; Load 373 into I
$A9C    $B429   JP       V0, $429        ; Jump to V0 + 429
$A9E    $12BE   JP       $2BE            ; Jump to 2BE
$AA0    $8B2B   UNKNOWN  8B2B            ; Unknown 8xxx instruction
$AA2    $8384   ADD      V3, V8          ; V3 += V8, VF = carry
$AA4    $815C   UNKNOWN  815C            ; Unknown 8xxx instruction
$AA6    $488F   SNE      V8, #8F         ; Skip if V8 != 143
$AA8    $79F1   ADD      V9, #F1         ; Add 241 to V9
$AAA    $CF6D   RND      VF, #6D         ; VF = random & 6D
$AAC    $74BD   ADD      V4, #BD         ; Add 189 to V4
$AAE    $D3F1   DRW      V3, VF, #1      ; Draw 1-byte sprite at V3, VF
$AB0    $824B   UNKNOWN  824B            ; Unknown 8xxx instruction
$AB2    $2143   CALL     $143            ; Call subroutine at 143
$AB4    $ECF1   UNKNOWN  $ECF1           ; Unknown Exxx instruction
$AB6    $A84A   LD       I, $84A         ; Load 84A into I
$AB8    $0B9C   SYS      $B9C            ; System call to B9C
$ABA    $26BF   CALL     $6BF            ; Call subroutine at 6BF
$ABC    $20C1   CALL     $0C1            ; Call subroutine at 0C1
$ABE    $6D27   LD       VD, #27         ; Load 39 into VD
$AC0    $868B   UNKNOWN  868B            ; Unknown 8xxx instruction
$AC2    $304B   SE       V0, #4B         ; Skip if V0 == 75
$AC4    $1F69   JP       $F69            ; Jump to F69
$AC6    $007E   SYS      $07E            ; System call to 07E
$AC8    $4222   SNE      V2, #22         ; Skip if V2 != 34
$ACA    $596F   UNKNOWN  $596F           ; Unknown 5xxx instruction
$ACC    $9E8F   UNKNOWN  $9E8F           ; Unknown 9xxx instruction
$ACE    $C8DC   RND      V8, #DC         ; V8 = random & DC
$AD0    $9310   SNE      V3, V1          ; Skip if V3 != V1
$AD2    $843C   UNKNOWN  843C            ; Unknown 8xxx instruction
$AD4    $7B61   ADD      VB, #61         ; Add 97 to VB
$AD6    $F3B4   UNKNOWN  F3B4            ; Unknown Fxxx instruction
$AD8    $21B0   CALL     $1B0            ; Call subroutine at 1B0
$ADA    $EF85   UNKNOWN  $EF85           ; Unknown Exxx instruction
$ADC    $B3DD   JP       V0, $3DD        ; Jump to V0 + 3DD
$ADE    $CF8D   RND      VF, #8D         ; VF = random & 8D
$AE0    $E75C   UNKNOWN  $E75C           ; Unknown Exxx instruction
$AE2    $8130   LD       V1, V3          ; V1 = V3
$AE4    $4039   SNE      V0, #39         ; Skip if V0 != 57
$AE6    $5990   SE       V9, V9          ; Skip if V9 == V9
$AE8    $EDA4   UNKNOWN  $EDA4           ; Unknown Exxx instruction
$AEA    $2059   CALL     $059            ; Call subroutine at 059
$AEC    $A1C4   LD       I, $1C4         ; Load 1C4 into I
$AEE    $9853   UNKNOWN  $9853           ; Unknown 9xxx instruction
$AF0    $87B6   SHR      V7              ; V7 >>= 1, VF = LSB
$AF2    $BDC6   JP       V0, $DC6        ; Jump to V0 + DC6
$AF4    $2757   CALL     $757            ; Call subroutine at 757
$AF6    $8C41   OR       VC, V4          ; VC |= V4
$AF8    $D44F   DRW      V4, V4, #F      ; Draw 15-byte sprite at V4, V4
$AFA    $4E4C   SNE      VE, #4C         ; Skip if VE != 76
$AFC    $2ED4   CALL     $ED4            ; Call subroutine at ED4
$AFE    $2B5E   CALL     $B5E            ; Call subroutine at B5E
$B00    $9927   UNKNOWN  $9927           ; Unknown 9xxx instruction
$B02    $2ECB   CALL     $ECB            ; Call subroutine at ECB
$B04    $85A8   UNKNOWN  85A8            ; Unknown 8xxx instruction
$B06    $FCCE   UNKNOWN  FCCE            ; Unknown Fxxx instruction
$B08    $F38E   UNKNOWN  F38E            ; Unknown Fxxx instruction
$B0A    $8F33   XOR      VF, V3          ; VF ^= V3
$B0C    $C669   RND      V6, #69         ; V6 = random & 69
$B0E    $D103   DRW      V1, V0, #3      ; Draw 3-byte sprite at V1, V0
$B10    $8FCC   UNKNOWN  8FCC            ; Unknown 8xxx instruction
$B12    $3817   SE       V8, #17         ; Skip if V8 == 23
$B14    $C83A   RND      V8, #3A         ; V8 = random & 3A
$B16    $B9B2   JP       V0, $9B2        ; Jump to V0 + 9B2
$B18    $0BEA   SYS      $BEA            ; System call to BEA
$B1A    $B359   JP       V0, $359        ; Jump to V0 + 359
$B1C    $E649   UNKNOWN  $E649           ; Unknown Exxx instruction
$B1E    $1358   JP       $358            ; Jump to 358
$B20    $0128   SYS      $128            ; System call to 128
$B22    $A5B1   LD       I, $5B1         ; Load 5B1 into I
$B24    $D102   DRW      V1, V0, #2      ; Draw 2-byte sprite at V1, V0
$B26    $84A6   SHR      V4              ; V4 >>= 1, VF = LSB
$B28    $82D5   SUB      V2, VD          ; V2 -= VD, VF = !borrow
$B2A    $AECC   LD       I, $ECC         ; Load ECC into I
$B2C    $1D4C   JP       $D4C            ; Jump to D4C
$B2E    $BB53   JP       V0, $B53        ; Jump to V0 + B53
$B30    $35D3   SE       V5, #D3         ; Skip if V5 == 211
$B32    $7C36   ADD      VC, #36         ; Add 54 to VC
$B34    $E1E5   UNKNOWN  $E1E5           ; Unknown Exxx instruction
$B36    $2BBA   CALL     $BBA            ; Call subroutine at BBA
$B38    $86B3   XOR      V6, VB          ; V6 ^= VB
$B3A    $ACE7   LD       I, $CE7         ; Load CE7 into I
$B3C    $8A85   SUB      VA, V8          ; VA -= V8, VF = !borrow
$B3E    $8F8C   UNKNOWN  8F8C            ; Unknown 8xxx instruction
$B40    $2EEF   CALL     $EEF            ; Call subroutine at EEF
$B42    $ED60   UNKNOWN  $ED60           ; Unknown Exxx instruction
$B44    $1EC5   JP       $EC5            ; Jump to EC5
$B46    $4CBF   SNE      VC, #BF         ; Skip if VC != 191
$B48    $3DE7   SE       VD, #E7         ; Skip if VD == 231
$B4A    $5A76   UNKNOWN  $5A76           ; Unknown 5xxx instruction
$B4C    $A7E4   LD       I, $7E4         ; Load 7E4 into I
$B4E    $3415   SE       V4, #15         ; Skip if V4 == 21
$B50    $A0D4   LD       I, $0D4         ; Load 0D4 into I
$B52    $7337   ADD      V3, #37         ; Add 55 to V3
$B54    $C6C2   RND      V6, #C2         ; V6 = random & C2
$B56    $8E04   ADD      VE, V0          ; VE += V0, VF = carry
$B58    $610D   LD       V1, #0D         ; Load 13 into V1
$B5A    $4060   SNE      V0, #60         ; Skip if V0 != 96
$B5C    $B079   JP       V0, $079        ; Jump to V0 + 079
$B5E    $B845   JP       V0, $845        ; Jump to V0 + 845
$B60    $0392   SYS      $392            ; System call to 392
$B62    $06FC   SYS      $6FC            ; System call to 6FC
$B64    $6440   LD       V4, #40         ; Load 64 into V4
$B66    $3916   SE       V9, #16         ; Skip if V9 == 22
$B68    $6427   LD       V4, #27         ; Load 39 into V4
$B6A    $1CE3   JP       $CE3            ; Jump to CE3
$B6C    $5340   SE       V3, V4          ; Skip if V3 == V4
$B6E    $0F43   SYS      $F43            ; System call to F43
$B70    $AFFA   LD       I, $FFA         ; Load FFA into I
$B72    $B7AA   JP       V0, $7AA        ; Jump to V0 + 7AA
$B74    $21F7   CALL     $1F7            ; Call subroutine at 1F7
$B76    $9ABC   UNKNOWN  $9ABC           ; Unknown 9xxx instruction
$B78    $81E4   ADD      V1, VE          ; V1 += VE, VF = carry
$B7A    $86B8   UNKNOWN  86B8            ; Unknown 8xxx instruction
$B7C    $28DB   CALL     $8DB            ; Call subroutine at 8DB
$B7E    $400D   SNE      V0, #0D         ; Skip if V0 != 13
$B80    $A27D   LD       I, $27D         ; Load 27D into I
$B82    $94EF   UNKNOWN  $94EF           ; Unknown 9xxx instruction
$B84    $054D   SYS      $54D            ; System call to 54D
$B86    $7296   ADD      V2, #96         ; Add 150 to V2
$B88    $D061   DRW      V0, V6, #1      ; Draw 1-byte sprite at V0, V6
$B8A    $C7C2   RND      V7, #C2         ; V7 = random & C2
$B8C    $1E48   JP       $E48            ; Jump to E48
$B8E    $2358   CALL     $358            ; Call subroutine at 358
$B90    $FBE1   UNKNOWN  FBE1            ; Unknown Fxxx instruction
$B92    $70EA   ADD      V0, #EA         ; Add 234 to V0
$B94    $692D   LD       V9, #2D         ; Load 45 into V9
$B96    $C952   RND      V9, #52         ; V9 = random & 52
$B98    $6AA2   LD       VA, #A2         ; Load 162 into VA
$B9A    $FBE4   UNKNOWN  FBE4            ; Unknown Fxxx instruction
$B9C    $A5D6   LD       I, $5D6         ; Load 5D6 into I
$B9E    $3571   SE       V5, #71         ; Skip if V5 == 113
$BA0    $B0B1   JP       V0, $0B1        ; Jump to V0 + 0B1
$BA2    $8A52   AND      VA, V5          ; VA &= V5
$BA4    $3624   SE       V6, #24         ; Skip if V6 == 36
$BA6    $0BE4   SYS      $BE4            ; System call to BE4
$BA8    $D34A   DRW      V3, V4, #A      ; Draw 10-byte sprite at V3, V4
$BAA    $9BA1   UNKNOWN  $9BA1           ; Unknown 9xxx instruction
$BAC    $7BB9   ADD      VB, #B9         ; Add 185 to VB
$BAE    $1648   JP       $648            ; Jump to 648
$BB0    $4815   SNE      V8, #15         ; Skip if V8 != 21
$BB2    $F1C2   UNKNOWN  F1C2            ; Unknown Fxxx instruction
$BB4    $9E9A   UNKNOWN  $9E9A           ; Unknown 9xxx instruction
$BB6    $4C0C   SNE      VC, #0C         ; Skip if VC != 12
$BB8    $D2B0   DRW      V2, VB, #0      ; Draw 0-byte sprite at V2, VB
$BBA    $20D4   CALL     $0D4            ; Call subroutine at 0D4
$BBC    $0854   SYS      $854            ; System call to 854
$BBE    $8A40   LD       VA, V4          ; VA = V4
$BC0    $0A58   SYS      $A58            ; System call to A58
$BC2    $6034   LD       V0, #34         ; Load 52 into V0
$BC4    $FDAB   UNKNOWN  FDAB            ; Unknown Fxxx instruction
$BC6    $95E0   SNE      V5, VE          ; Skip if V5 != VE
$BC8    $C2B4   RND      V2, #B4         ; V2 = random & B4
$BCA    $FFC0   UNKNOWN  FFC0            ; Unknown Fxxx instruction
$BCC    $1EED   JP       $EED            ; Jump to EED
$BCE    $5C02   UNKNOWN  $5C02           ; Unknown 5xxx instruction
$BD0    $33C9   SE       V3, #C9         ; Skip if V3 == 201
$BD2    $BB2D   JP       V0, $B2D        ; Jump to V0 + B2D
$BD4    $CDFC   RND      VD, #FC         ; VD = random & FC
$BD6    $FF65   LD       VF, [I]         ; Load V0-VF from I
$BD8    $42CB   SNE      V2, #CB         ; Skip if V2 != 203
$BDA    $DDEE   DRW      VD, VE, #E      ; Draw 14-byte sprite at VD, VE
$BDC    $5C1A   UNKNOWN  $5C1A           ; Unknown 5xxx instruction
$BDE    $E824   UNKNOWN  $E824           ; Unknown Exxx instruction
$BE0    $1953   JP       $953            ; Jump to 953
$BE2    $A9C8   LD       I, $9C8         ; Load 9C8 into I
$BE4    $D7AE   DRW      V7, VA, #E      ; Draw 14-byte sprite at V7, VA
$BE6    $0A9D   SYS      $A9D            ; System call to A9D
$BE8    $B631   JP       V0, $631        ; Jump to V0 + 631
$BEA    $C4BF   RND      V4, #BF         ; V4 = random & BF
$BEC    $2458   CALL     $458            ; Call subroutine at 458
$BEE    $F6F7   UNKNOWN  F6F7            ; Unknown Fxxx instruction
$BF0    $4B0B   SNE      VB, #0B         ; Skip if VB != 11
$BF2    $164A   JP       $64A            ; Jump to 64A
$BF4    $B765   JP       V0, $765        ; Jump to V0 + 765
$BF6    $593F   UNKNOWN  $593F           ; Unknown 5xxx instruction
$BF8    $7814   ADD      V8, #14         ; Add 20 to V8
$BFA    $16C2   JP       $6C2            ; Jump to 6C2
$BFC    $B90C   JP       V0, $90C        ; Jump to V0 + 90C
$BFE    $5103   UNKNOWN  $5103           ; Unknown 5xxx instruction
$C00    $9CD3   UNKNOWN  $9CD3           ; Unknown 9xxx instruction
$C02    $C2EC   RND      V2, #EC         ; V2 = random & EC
$C04    $CACC   RND      VA, #CC         ; VA = random & CC
$C06    $E3D0   UNKNOWN  $E3D0           ; Unknown Exxx instruction
$C08    $1138   JP       $138            ; Jump to 138
$C0A    $DF5F   DRW      VF, V5, #F      ; Draw 15-byte sprite at VF, V5
$C0C    $EF79   UNKNOWN  $EF79           ; Unknown Exxx instruction
$C0E    $CCC0   RND      VC, #C0         ; VC = random & C0
$C10    $A603   LD       I, $603         ; Load 603 into I
$C12    $BE6A   JP       V0, $E6A        ; Jump to V0 + E6A
$C14    $FF9C   UNKNOWN  FF9C            ; Unknown Fxxx instruction
$C16    $7A77   ADD      VA, #77         ; Add 119 to VA
$C18    $91EC   UNKNOWN  $91EC           ; Unknown 9xxx instruction
$C1A    $6467   LD       V4, #67         ; Load 103 into V4
$C1C    $9DE7   UNKNOWN  $9DE7           ; Unknown 9xxx instruction
$C1E    $3FC4   SE       VF, #C4         ; Skip if VF == 196
$C20    $2866   CALL     $866            ; Call subroutine at 866
$C22    $6A66   LD       VA, #66         ; Load 102 into VA
$C24    $6DAF   LD       VD, #AF         ; Load 175 into VD
$C26    $CDB5   RND      VD, #B5         ; VD = random & B5
$C28    $4689   SNE      V6, #89         ; Skip if V6 != 137
$C2A    $8C45   SUB      VC, V4          ; VC -= V4, VF = !borrow
$C2C    $A65D   LD       I, $65D         ; Load 65D into I
$C2E    $A0B1   LD       I, $0B1         ; Load 0B1 into I
$C30    $5E06   UNKNOWN  $5E06           ; Unknown 5xxx instruction
$C32    $83B5   SUB      V3, VB          ; V3 -= VB, VF = !borrow
$C34    $BBB1   JP       V0, $BB1        ; Jump to V0 + BB1
$C36    $8C33   XOR      VC, V3          ; VC ^= V3
$C38    $66DB   LD       V6, #DB         ; Load 219 into V6
$C3A    $08D5   SYS      $8D5            ; System call to 8D5
$C3C    $6432   LD       V4, #32         ; Load 50 into V4
$C3E    $A4B7   LD       I, $4B7         ; Load 4B7 into I
$C40    $B113   JP       V0, $113        ; Jump to V0 + 113
$C42    $8146   SHR      V1              ; V1 >>= 1, VF = LSB
$C44    $D472   DRW      V4, V7, #2      ; Draw 2-byte sprite at V4, V7
$C46    $E460   UNKNOWN  $E460           ; Unknown Exxx instruction
$C48    $6359   LD       V3, #59         ; Load 89 into V3
$C4A    $B3D0   JP       V0, $3D0        ; Jump to V0 + 3D0
$C4C    $C175   RND      V1, #75         ; V1 = random & 75
$C4E    $50D4   UNKNOWN  $50D4           ; Unknown 5xxx instruction
$C50    $7F10   ADD      VF, #10         ; Add 16 to VF
$C52    $C6EA   RND      V6, #EA         ; V6 = random & EA
$C54    $F053   UNKNOWN  F053            ; Unknown Fxxx instruction
$C56    $8CF1   OR       VC, VF          ; VC |= VF
$C58    $CA64   RND      VA, #64         ; VA = random & 64
$C5A    $BA56   JP       V0, $A56        ; Jump to V0 + A56
$C5C    $EF03   UNKNOWN  $EF03           ; Unknown Exxx instruction
$C5E    $5AEF   UNKNOWN  $5AEF           ; Unknown 5xxx instruction
$C60    $34C2   SE       V4, #C2         ; Skip if V4 == 194
$C62    $08A4   SYS      $8A4            ; System call to 8A4
$C64    $0F27   SYS      $F27            ; System call to F27
$C66    $04EB   SYS      $4EB            ; System call to 4EB
$C68    $11E4   JP       $1E4            ; Jump to 1E4
$C6A    $723E   ADD      V2, #3E         ; Add 62 to V2
$C6C    $64E8   LD       V4, #E8         ; Load 232 into V4
$C6E    $B63E   JP       V0, $63E        ; Jump to V0 + 63E
$C70    $4CF6   SNE      VC, #F6         ; Skip if VC != 246
$C72    $6F2E   LD       VF, #2E         ; Load 46 into VF
$C74    $D251   DRW      V2, V5, #1      ; Draw 1-byte sprite at V2, V5
$C76    $3D1F   SE       VD, #1F         ; Skip if VD == 31
$C78    $A8FB   LD       I, $8FB         ; Load 8FB into I
$C7A    $07DC   SYS      $7DC            ; System call to 7DC
$C7C    $73F4   ADD      V3, #F4         ; Add 244 to V3
$C7E    $3C7E   SE       VC, #7E         ; Skip if VC == 126
$C80    $A642   LD       I, $642         ; Load 642 into I
$C82    $A10F   LD       I, $10F         ; Load 10F into I
$C84    $719E   ADD      V1, #9E         ; Add 158 to V1
$C86    $7D42   ADD      VD, #42         ; Add 66 to VD
$C88    $3837   SE       V8, #37         ; Skip if V8 == 55
$C8A    $4C3B   SNE      VC, #3B         ; Skip if VC != 59
$C8C    $140B   JP       $40B            ; Jump to 40B
$C8E    $ED1B   UNKNOWN  $ED1B           ; Unknown Exxx instruction
$C90    $5242   UNKNOWN  $5242           ; Unknown 5xxx instruction
$C92    $0CD6   SYS      $CD6            ; System call to CD6
$C94    $8FD3   XOR      VF, VD          ; VF ^= VD
$C96    $DC97   DRW      VC, V9, #7      ; Draw 7-byte sprite at VC, V9
$C98    $7C6E   ADD      VC, #6E         ; Add 110 to VC
$C9A    $CAB6   RND      VA, #B6         ; VA = random & B6
$C9C    $3867   SE       V8, #67         ; Skip if V8 == 103
$C9E    $2BEB   CALL     $BEB            ; Call subroutine at BEB
$CA0    $B7B2   JP       V0, $7B2        ; Jump to V0 + 7B2
$CA2    $6C2C   LD       VC, #2C         ; Load 44 into VC
$CA4    $53DB   UNKNOWN  $53DB           ; Unknown 5xxx instruction
$CA6    $724F   ADD      V2, #4F         ; Add 79 to V2
$CA8    $417F   SNE      V1, #7F         ; Skip if V1 != 127
$CAA    $B0C6   JP       V0, $0C6        ; Jump to V0 + 0C6
$CAC    $F518   LD       ST, V5          ; Sound timer = V5
$CAE    $58B4   UNKNOWN  $58B4           ; Unknown 5xxx instruction
$CB0    $41B8   SNE      V1, #B8         ; Skip if V1 != 184
$CB2    $0278   SYS      $278            ; System call to 278
$CB4    $A485   LD       I, $485         ; Load 485 into I
$CB6    $D27C   DRW      V2, V7, #C      ; Draw 12-byte sprite at V2, V7
$CB8    $7B6B   ADD      VB, #6B         ; Add 107 to VB
$CBA    $DD0E   DRW      VD, V0, #E      ; Draw 14-byte sprite at VD, V0
$CBC    $0BE4   SYS      $BE4            ; System call to BE4
$CBE    $13DC   JP       $3DC            ; Jump to 3DC
$CC0    $AAC0   LD       I, $AC0         ; Load AC0 into I
$CC2    $278C   CALL     $78C            ; Call subroutine at 78C
$CC4    $0E76   SYS      $E76            ; System call to E76
$CC6    $3495   SE       V4, #95         ; Skip if V4 == 149
$CC8    $337D   SE       V3, #7D         ; Skip if V3 == 125
$CCA    $6D94   LD       VD, #94         ; Load 148 into VD
$CCC    $E80A   UNKNOWN  $E80A           ; Unknown Exxx instruction
$CCE    $0042   SYS      $042            ; System call to 042
$CD0    $83C4   ADD      V3, VC          ; V3 += VC, VF = carry
$CD2    $7928   ADD      V9, #28         ; Add 40 to V9
$CD4    $E880   UNKNOWN  $E880           ; Unknown Exxx instruction
$CD6    $3772   SE       V7, #72         ; Skip if V7 == 114
$CD8    $ADFE   LD       I, $DFE         ; Load DFE into I
$CDA    $A722   LD       I, $722         ; Load 722 into I
$CDC    $547E   UNKNOWN  $547E           ; Unknown 5xxx instruction
$CDE    $4B41   SNE      VB, #41         ; Skip if VB != 65
$CE0    $BEC4   JP       V0, $EC4        ; Jump to V0 + EC4
$CE2    $32D7   SE       V2, #D7         ; Skip if V2 == 215
$CE4    $FC2E   UNKNOWN  FC2E            ; Unknown Fxxx instruction
$CE6    $EE0C   UNKNOWN  $EE0C           ; Unknown Exxx instruction
$CE8    $E7AC   UNKNOWN  $E7AC           ; Unknown Exxx instruction
$CEA    $0752   SYS      $752            ; System call to 752
$CEC    $3AAB   SE       VA, #AB         ; Skip if VA == 171
$CEE    $0029   SYS      $029            ; System call to 029
$CF0    $3140   SE       V1, #40         ; Skip if V1 == 64
$CF2    $041F   SYS      $41F            ; System call to 41F
$CF4    $B3EA   JP       V0, $3EA        ; Jump to V0 + 3EA
$CF6    $649B   LD       V4, #9B         ; Load 155 into V4
$CF8    $2BC0   CALL     $BC0            ; Call subroutine at BC0
$CFA    $ACE4   LD       I, $CE4         ; Load CE4 into I
$CFC    $FE1E   ADD      I, VE           ; I += VE
$CFE    $B04D   JP       V0, $04D        ; Jump to V0 + 04D
$D00    $53B5   UNKNOWN  $53B5           ; Unknown 5xxx instruction
$D02    $8EE4   ADD      VE, VE          ; VE += VE, VF = carry
$D04    $2D21   CALL     $D21            ; Call subroutine at D21
$D06    $8DA6   SHR      VD              ; VD >>= 1, VF = LSB
$D08    $BB7D   JP       V0, $B7D        ; Jump to V0 + B7D
$D0A    $3D7A   SE       VD, #7A         ; Skip if VD == 122
$D0C    $DA3F   DRW      VA, V3, #F      ; Draw 15-byte sprite at VA, V3
$D0E    $B4D6   JP       V0, $4D6        ; Jump to V0 + 4D6
$D10    $A5C4   LD       I, $5C4         ; Load 5C4 into I
$D12    $CE48   RND      VE, #48         ; VE = random & 48
$D14    $E99D   UNKNOWN  $E99D           ; Unknown Exxx instruction
$D16    $D0C7   DRW      V0, VC, #7      ; Draw 7-byte sprite at V0, VC
$D18    $FD49   UNKNOWN  FD49            ; Unknown Fxxx instruction
$D1A    $F351   UNKNOWN  F351            ; Unknown Fxxx instruction
$D1C    $A70E   LD       I, $70E         ; Load 70E into I
$D1E    $316F   SE       V1, #6F         ; Skip if V1 == 111
$D20    $2411   CALL     $411            ; Call subroutine at 411
$D22    $4CED   SNE      VC, #ED         ; Skip if VC != 237
$D24    $52E7   UNKNOWN  $52E7           ; Unknown 5xxx instruction
$D26    $2A4F   CALL     $A4F            ; Call subroutine at A4F
$D28    $D3A6   DRW      V3, VA, #6      ; Draw 6-byte sprite at V3, VA
$D2A    $F299   UNKNOWN  F299            ; Unknown Fxxx instruction
$D2C    $335C   SE       V3, #5C         ; Skip if V3 == 92
$D2E    $DF5D   DRW      VF, V5, #D      ; Draw 13-byte sprite at VF, V5
$D30    $A111   LD       I, $111         ; Load 111 into I
$D32    $BFD7   JP       V0, $FD7        ; Jump to V0 + FD7
$D34    $B2DA   JP       V0, $2DA        ; Jump to V0 + 2DA
$D36    $03F6   SYS      $3F6            ; System call to 3F6
$D38    $E506   UNKNOWN  $E506           ; Unknown Exxx instruction
$D3A    $CD2F   RND      VD, #2F         ; VD = random & 2F
$D3C    $4BDA   SNE      VB, #DA         ; Skip if VB != 218
$D3E    $599D   UNKNOWN  $599D           ; Unknown 5xxx instruction
$D40    $592B   UNKNOWN  $592B           ; Unknown 5xxx instruction
$D42    $48AC   SNE      V8, #AC         ; Skip if V8 != 172
$D44    $16E0   JP       $6E0            ; Jump to 6E0
$D46    $7F77   ADD      VF, #77         ; Add 119 to VF
$D48    $051B   SYS      $51B            ; System call to 51B
$D4A    $8770   LD       V7, V7          ; V7 = V7
$D4C    $3AA2   SE       VA, #A2         ; Skip if VA == 162
$D4E    $7318   ADD      V3, #18         ; Add 24 to V3
$D50    $EB1B   UNKNOWN  $EB1B           ; Unknown Exxx instruction
$D52    $8DB6   SHR      VD              ; VD >>= 1, VF = LSB
$D54    $EC97   UNKNOWN  $EC97           ; Unknown Exxx instruction
$D56    $7F96   ADD      VF, #96         ; Add 150 to VF
$D58    $5182   UNKNOWN  $5182           ; Unknown 5xxx instruction
$D5A    $3956   SE       V9, #56         ; Skip if V9 == 86
$D5C    $C7B0   RND      V7, #B0         ; V7 = random & B0
$D5E    $E906   UNKNOWN  $E906           ; Unknown Exxx instruction
$D60    $7150   ADD      V1, #50         ; Add 80 to V1
$D62    $DC9B   DRW      VC, V9, #B      ; Draw 11-byte sprite at VC, V9
$D64    $E7B2   UNKNOWN  $E7B2           ; Unknown Exxx instruction
$D66    $EA02   UNKNOWN  $EA02           ; Unknown Exxx instruction
$D68    $2152   CALL     $152            ; Call subroutine at 152
$D6A    $B4C1   JP       V0, $4C1        ; Jump to V0 + 4C1
$D6C    $9CDD   UNKNOWN  $9CDD           ; Unknown 9xxx instruction
$D6E    $BF70   JP       V0, $F70        ; Jump to V0 + F70
$D70    $9F72   UNKNOWN  $9F72           ; Unknown 9xxx instruction
$D72    $B670   JP       V0, $670        ; Jump to V0 + 670
$D74    $ABF8   LD       I, $BF8         ; Load BF8 into I
$D76    $0CA1   SYS      $CA1            ; System call to CA1
$D78    $B9BF   JP       V0, $9BF        ; Jump to V0 + 9BF
$D7A    $E790   UNKNOWN  $E790           ; Unknown Exxx instruction
$D7C    $313B   SE       V1, #3B         ; Skip if V1 == 59
$D7E    $FE24   UNKNOWN  FE24            ; Unknown Fxxx instruction
$D80    $720F   ADD      V2, #0F         ; Add 15 to V2
$D82    $89E0   LD       V9, VE          ; V9 = VE
$D84    $FBF5   UNKNOWN  FBF5            ; Unknown Fxxx instruction
$D86    $D357   DRW      V3, V5, #7      ; Draw 7-byte sprite at V3, V5
$D88    $0F0A   SYS      $F0A            ; System call to F0A
$D8A    $B6EF   JP       V0, $6EF        ; Jump to V0 + 6EF
$D8C    $9EC1   UNKNOWN  $9EC1           ; Unknown 9xxx instruction
$D8E    $B194   JP       V0, $194        ; Jump to V0 + 194
$D90    $74F2   ADD      V4, #F2         ; Add 242 to V4
$D92    $C3F4   RND      V3, #F4         ; V3 = random & F4
$D94    $BE03   JP       V0, $E03        ; Jump to V0 + E03
$D96    $413D   SNE      V1, #3D         ; Skip if V1 != 61
$D98    $82D9   UNKNOWN  82D9            ; Unknown 8xxx instruction
$D9A    $D16C   DRW      V1, V6, #C      ; Draw 12-byte sprite at V1, V6
$D9C    $3A14   SE       VA, #14         ; Skip if VA == 20
$D9E    $FDE5   UNKNOWN  FDE5            ; Unknown Fxxx instruction
$DA0    $8491   OR       V4, V9          ; V4 |= V9
$DA2    $23E3   CALL     $3E3            ; Call subroutine at 3E3
$DA4    $7AC5   ADD      VA, #C5         ; Add 197 to VA
$DA6    $3DDA   SE       VD, #DA         ; Skip if VD == 218
$DA8    $42C6   SNE      V2, #C6         ; Skip if V2 != 198
$DAA    $5608   UNKNOWN  $5608           ; Unknown 5xxx instruction
$DAC    $535C   UNKNOWN  $535C           ; Unknown 5xxx instruction
$DAE    $AFB1   LD       I, $FB1         ; Load FB1 into I
$DB0    $E029   UNKNOWN  $E029           ; Unknown Exxx instruction
$DB2    $B717   JP       V0, $717        ; Jump to V0 + 717
$DB4    $8EEB   UNKNOWN  8EEB            ; Unknown 8xxx instruction
$DB6    $8B10   LD       VB, V1          ; VB = V1
$DB8    $8D14   ADD      VD, V1          ; VD += V1, VF = carry
$DBA    $F253   UNKNOWN  F253            ; Unknown Fxxx instruction
$DBC    $AD9E   LD       I, $D9E         ; Load D9E into I
$DBE    $8566   SHR      V5              ; V5 >>= 1, VF = LSB
$DC0    $4DB9   SNE      VD, #B9         ; Skip if VD != 185
$DC2    $9A0C   UNKNOWN  $9A0C           ; Unknown 9xxx instruction
$DC4    $F5C4   UNKNOWN  F5C4            ; Unknown Fxxx instruction
$DC6    $F29D   UNKNOWN  F29D            ; Unknown Fxxx instruction
$DC8    $605D   LD       V0, #5D         ; Load 93 into V0
$DCA    $7078   ADD      V0, #78         ; Add 120 to V0
$DCC    $6BAF   LD       VB, #AF         ; Load 175 into VB
$DCE    $658F   LD       V5, #8F         ; Load 143 into V5
$DD0    $FDEA   UNKNOWN  FDEA            ; Unknown Fxxx instruction
$DD2    $A476   LD       I, $476         ; Load 476 into I
$DD4    $F4B7   UNKNOWN  F4B7            ; Unknown Fxxx instruction
$DD6    $991A   UNKNOWN  $991A           ; Unknown 9xxx instruction
$DD8    $DFB6   DRW      VF, VB, #6      ; Draw 6-byte sprite at VF, VB
$DDA    $166C   JP       $66C            ; Jump to 66C
$DDC    $E8D6   UNKNOWN  $E8D6           ; Unknown Exxx instruction
$DDE    $2B9B   CALL     $B9B            ; Call subroutine at B9B
$DE0    $C329   RND      V3, #29         ; V3 = random & 29
$DE2    $8704   ADD      V7, V0          ; V7 += V0, VF = carry
$DE4    $5489   UNKNOWN  $5489           ; Unknown 5xxx instruction
$DE6    $0F54   SYS      $F54            ; System call to F54
$DE8    $FC35   UNKNOWN  FC35            ; Unknown Fxxx instruction
$DEA    $9B0F   UNKNOWN  $9B0F           ; Unknown 9xxx instruction
$DEC    $6CC9   LD       VC, #C9         ; Load 201 into VC
$DEE    $942A   UNKNOWN  $942A           ; Unknown 9xxx instruction
$DF0    $CA2A   RND      VA, #2A         ; VA = random & 2A
$DF2    $473B   SNE      V7, #3B         ; Skip if V7 != 59
$DF4    $0234   SYS      $234            ; System call to 234
$DF6    $DB6B   DRW      VB, V6, #B      ; Draw 11-byte sprite at VB, V6
$DF8    $A0A5   LD       I, $0A5         ; Load 0A5 into I
$DFA    $6F4F   LD       VF, #4F         ; Load 79 into VF
$DFC    $36DB   SE       V6, #DB         ; Skip if V6 == 219
$DFE    $EC6A   UNKNOWN  $EC6A           ; Unknown Exxx instruction
$E00    $2AE1   CALL     $AE1            ; Call subroutine at AE1
$E02    $CDD8   RND      VD, #D8         ; VD = random & D8
$E04    $71AD   ADD      V1, #AD         ; Add 173 to V1
$E06    $30CD   SE       V0, #CD         ; Skip if V0 == 205
$E08    $D885   DRW      V8, V8, #5      ; Draw 5-byte sprite at V8, V8
$E0A    $F71E   ADD      I, V7           ; I += V7
$E0C    $DFD2   DRW      VF, VD, #2      ; Draw 2-byte sprite at VF, VD
$E0E    $2021   CALL     $021            ; Call subroutine at 021
$E10    $1820   JP       $820            ; Jump to 820
$E12    $21EA   CALL     $1EA            ; Call subroutine at 1EA
$E14    $8AD5   SUB      VA, VD          ; VA -= VD, VF = !borrow
$E16    $0728   SYS      $728            ; System call to 728
$E18    $DE58   DRW      VE, V5, #8      ; Draw 8-byte sprite at VE, V5
$E1A    $9B17   UNKNOWN  $9B17           ; Unknown 9xxx instruction
$E1C    $A728   LD       I, $728         ; Load 728 into I
$E1E    $1354   JP       $354            ; Jump to 354
$E20    $B88E   JP       V0, $88E        ; Jump to V0 + 88E
$E22    $3C1D   SE       VC, #1D         ; Skip if VC == 29
$E24    $8134   ADD      V1, V3          ; V1 += V3, VF = carry
$E26    $41F8   SNE      V1, #F8         ; Skip if V1 != 248
$E28    $6405   LD       V4, #05         ; Load 5 into V4
$E2A    $8B68   UNKNOWN  8B68            ; Unknown 8xxx instruction
$E2C    $690B   LD       V9, #0B         ; Load 11 into V9
$E2E    $F672   UNKNOWN  F672            ; Unknown Fxxx instruction
$E30    $0B50   SYS      $B50            ; System call to B50
$E32    $81F8   UNKNOWN  81F8            ; Unknown 8xxx instruction
$E34    $727A   ADD      V2, #7A         ; Add 122 to V2
$E36    $4974   SNE      V9, #74         ; Skip if V9 != 116
$E38    $0BAB   SYS      $BAB            ; System call to BAB
$E3A    $97F9   UNKNOWN  $97F9           ; Unknown 9xxx instruction
$E3C    $5528   UNKNOWN  $5528           ; Unknown 5xxx instruction
$E3E    $EEA7   UNKNOWN  $EEA7           ; Unknown Exxx instruction
$E40    $F7B6   UNKNOWN  F7B6            ; Unknown Fxxx instruction
$E42    $CFCA   RND      VF, #CA         ; VF = random & CA
$E44    $4349   SNE      V3, #49         ; Skip if V3 != 73
$E46    $41B9   SNE      V1, #B9         ; Skip if V1 != 185
$E48    $9C63   UNKNOWN  $9C63           ; Unknown 9xxx instruction
$E4A    $625C   LD       V2, #5C         ; Load 92 into V2
$E4C    $2250   CALL     $250            ; Call subroutine at 250
$E4E    $5AD1   UNKNOWN  $5AD1           ; Unknown 5xxx instruction
$E50    $99AA   UNKNOWN  $99AA           ; Unknown 9xxx instruction
$E52    $1C4A   JP       $C4A            ; Jump to C4A
$E54    $E3CA   UNKNOWN  $E3CA           ; Unknown Exxx instruction
$E56    $9A54   UNKNOWN  $9A54           ; Unknown 9xxx instruction
$E58    $8750   LD       V7, V5          ; V7 = V5
$E5A    $0C32   SYS      $C32            ; System call to C32
$E5C    $D812   DRW      V8, V1, #2      ; Draw 2-byte sprite at V8, V1
$E5E    $B2AE   JP       V0, $2AE        ; Jump to V0 + 2AE
$E60    $09B9   SYS      $9B9            ; System call to 9B9
$E62    $D1D1   DRW      V1, VD, #1      ; Draw 1-byte sprite at V1, VD
$E64    $FC0D   UNKNOWN  FC0D            ; Unknown Fxxx instruction
$E66    $35B8   SE       V5, #B8         ; Skip if V5 == 184
$E68    $7D52   ADD      VD, #52         ; Add 82 to VD
$E6A    $1EEA   JP       $EEA            ; Jump to EEA
$E6C    $7862   ADD      V8, #62         ; Add 98 to V8
$E6E    $FE66   UNKNOWN  FE66            ; Unknown Fxxx instruction
$E70    $C53B   RND      V5, #3B         ; V5 = random & 3B
$E72    $FE7B   UNKNOWN  FE7B            ; Unknown Fxxx instruction
$E74    $B5EE   JP       V0, $5EE        ; Jump to V0 + 5EE
$E76    $D13B   DRW      V1, V3, #B      ; Draw 11-byte sprite at V1, V3
$E78    $5BDD   UNKNOWN  $5BDD           ; Unknown 5xxx instruction
$E7A    $C3F2   RND      V3, #F2         ; V3 = random & F2
$E7C    $62BE   LD       V2, #BE         ; Load 190 into V2
$E7E    $3DBD   SE       VD, #BD         ; Skip if VD == 189
$E80    $4219   SNE      V2, #19         ; Skip if V2 != 25
$E82    $87DA   UNKNOWN  87DA            ; Unknown 8xxx instruction
$E84    $D8F1   DRW      V8, VF, #1      ; Draw 1-byte sprite at V8, VF
$E86    $AE29   LD       I, $E29         ; Load E29 into I
$E88    $51ED   UNKNOWN  $51ED           ; Unknown 5xxx instruction
$E8A    $6B54   LD       VB, #54         ; Load 84 into VB
$E8C    $A133   LD       I, $133         ; Load 133 into I
$E8E    $F1BE   UNKNOWN  F1BE            ; Unknown Fxxx instruction
$E90    $8962   AND      V9, V6          ; V9 &= V6
$E92    $DD50   DRW      VD, V5, #0      ; Draw 0-byte sprite at VD, V5
$E94    $15A8   JP       $5A8            ; Jump to 5A8
$E96    $FE98   UNKNOWN  FE98            ; Unknown Fxxx instruction
$E98    $770D   ADD      V7, #0D         ; Add 13 to V7
$E9A    $063E   SYS      $63E            ; System call to 63E
$E9C    $27FF   CALL     $7FF            ; Call subroutine at 7FF
$E9E    $9EAF   UNKNOWN  $9EAF           ; Unknown 9xxx instruction
$EA0    $612F   LD       V1, #2F         ; Load 47 into V1
$EA2    $31E7   SE       V1, #E7         ; Skip if V1 == 231
$EA4    $773B   ADD      V7, #3B         ; Add 59 to V7
$EA6    $90D7   UNKNOWN  $90D7           ; Unknown 9xxx instruction
$EA8    $9AC8   UNKNOWN  $9AC8           ; Unknown 9xxx instruction
$EAA    $5D4C   UNKNOWN  $5D4C           ; Unknown 5xxx instruction
$EAC    $EE4E   UNKNOWN  $EE4E           ; Unknown Exxx instruction
$EAE    $892E   SHL      V9              ; V9 <<= 1, VF = MSB
$EB0    $78BE   ADD      V8, #BE         ; Add 190 to V8
$EB2    $6F07   LD       VF, #07         ; Load 7 into VF
$EB4    $ACBD   LD       I, $CBD         ; Load CBD into I
$EB6    $7EC3   ADD      VE, #C3         ; Add 195 to VE
$EB8    $7B8D   ADD      VB, #8D         ; Add 141 to VB
$EBA    $DB0C   DRW      VB, V0, #C      ; Draw 12-byte sprite at VB, V0
$EBC    $7B97   ADD      VB, #97         ; Add 151 to VB
$EBE    $5A54   UNKNOWN  $5A54           ; Unknown 5xxx instruction
$EC0    $BF6C   JP       V0, $F6C        ; Jump to V0 + F6C
$EC2    $E415   UNKNOWN  $E415           ; Unknown Exxx instruction
$EC4    $3B0C   SE       VB, #0C         ; Skip if VB == 12
$EC6    $3B1A   SE       VB, #1A         ; Skip if VB == 26
$EC8    $D877   DRW      V8, V7, #7      ; Draw 7-byte sprite at V8, V7
$ECA    $F979   UNKNOWN  F979            ; Unknown Fxxx instruction
$ECC    $F7C7   UNKNOWN  F7C7            ; Unknown Fxxx instruction
$ECE    $E643   UNKNOWN  $E643           ; Unknown Exxx instruction
$ED0    $0E32   SYS      $E32            ; System call to E32
$ED2    $7984   ADD      V9, #84         ; Add 132 to V9
$ED4    $83E6   SHR      V3              ; V3 >>= 1, VF = LSB
$ED6    $9CFA   UNKNOWN  $9CFA           ; Unknown 9xxx instruction
$ED8    $7D1C   ADD      VD, #1C         ; Add 28 to VD
$EDA    $F2F4   UNKNOWN  F2F4            ; Unknown Fxxx instruction
$EDC    $7D5C   ADD      VD, #5C         ; Add 92 to VD
$EDE    $5987   UNKNOWN  $5987           ; Unknown 5xxx instruction
$EE0    $9558   UNKNOWN  $9558           ; Unknown 9xxx instruction
$EE2    $E423   UNKNOWN  $E423           ; Unknown Exxx instruction
$EE4    $67B5   LD       V7, #B5         ; Load 181 into V7
$EE6    $5C47   UNKNOWN  $5C47           ; Unknown 5xxx instruction
$EE8    $1D01   JP       $D01            ; Jump to D01
$EEA    $10D1   JP       $0D1            ; Jump to 0D1
$EEC    $CDFA   RND      VD, #FA         ; VD = random & FA
$EEE    $01E2   SYS      $1E2            ; System call to 1E2
$EF0    $02B4   SYS      $2B4            ; System call to 2B4
$EF2    $689C   LD       V8, #9C         ; Load 156 into V8
$EF4    $A7D4   LD       I, $7D4         ; Load 7D4 into I
$EF6    $9E0F   UNKNOWN  $9E0F           ; Unknown 9xxx instruction
$EF8    $1B94   JP       $B94            ; Jump to B94
$EFA    $3971   SE       V9, #71         ; Skip if V9 == 113
$EFC    $DF9B   DRW      VF, V9, #B      ; Draw 11-byte sprite at VF, V9
$EFE    $A464   LD       I, $464         ; Load 464 into I
$F00    $23B2   CALL     $3B2            ; Call subroutine at 3B2
$F02    $DB00   DRW      VB, V0, #0      ; Draw 0-byte sprite at VB, V0
$F04    $72A8   ADD      V2, #A8         ; Add 168 to V2
$F06    $544C   UNKNOWN  $544C           ; Unknown 5xxx instruction
$F08    $FC25   UNKNOWN  FC25            ; Unknown Fxxx instruction
$F0A    $0B86   SYS      $B86            ; System call to B86
$F0C    $531F   UNKNOWN  $531F           ; Unknown 5xxx instruction
$F0E    $6E98   LD       VE, #98         ; Load 152 into VE
$F10    $6D95   LD       VD, #95         ; Load 149 into VD
$F12    $88C1   OR       V8, VC          ; V8 |= VC
$F14    $2499   CALL     $499            ; Call subroutine at 499
$F16    $E95D   UNKNOWN  $E95D           ; Unknown Exxx instruction
$F18    $B388   JP       V0, $388        ; Jump to V0 + 388
$F1A    $5503   UNKNOWN  $5503           ; Unknown 5xxx instruction
$F1C    $126A   JP       $26A            ; Jump to 26A
$F1E    $81D4   ADD      V1, VD          ; V1 += VD, VF = carry
$F20    $5287   UNKNOWN  $5287           ; Unknown 5xxx instruction
$F22    $06C6   SYS      $6C6            ; System call to 6C6
$F24    $27B5   CALL     $7B5            ; Call subroutine at 7B5
$F26    $7A22   ADD      VA, #22         ; Add 34 to VA
$F28    $BC39   JP       V0, $C39        ; Jump to V0 + C39
$F2A    $455A   SNE      V5, #5A         ; Skip if V5 != 90
$F2C    $5083   UNKNOWN  $5083           ; Unknown 5xxx instruction
$F2E    $F24D   UNKNOWN  F24D            ; Unknown Fxxx instruction
$F30    $F61A   UNKNOWN  F61A            ; Unknown Fxxx instruction
$F32    $D9AD   DRW      V9, VA, #D      ; Draw 13-byte sprite at V9, VA
$F34    $81AB   UNKNOWN  81AB            ; Unknown 8xxx instruction
$F36    $A74B   LD       I, $74B         ; Load 74B into I
$F38    $3B07   SE       VB, #07         ; Skip if VB == 7
$F3A    $6ADE   LD       VA, #DE         ; Load 222 into VA
$F3C    $F0FA   UNKNOWN  F0FA            ; Unknown Fxxx instruction
$F3E    $049C   SYS      $49C            ; System call to 49C
$F40    $2396   CALL     $396            ; Call subroutine at 396
$F42    $44C4   SNE      V4, #C4         ; Skip if V4 != 196
$F44    $3DEC   SE       VD, #EC         ; Skip if VD == 236
$F46    $7C8A   ADD      VC, #8A         ; Add 138 to VC
$F48    $40E0   SNE      V0, #E0         ; Skip if V0 != 224
$F4A    $7E37   ADD      VE, #37         ; Add 55 to VE
$F4C    $0CBE   SYS      $CBE            ; System call to CBE
$F4E    $D854   DRW      V8, V5, #4      ; Draw 4-byte sprite at V8, V5
$F50    $ACB9   LD       I, $CB9         ; Load CB9 into I
$F52    $A9F2   LD       I, $9F2         ; Load 9F2 into I
$F54    $5F3B   UNKNOWN  $5F3B           ; Unknown 5xxx instruction
$F56    $C75E   RND      V7, #5E         ; V7 = random & 5E
$F58    $6E5C   LD       VE, #5C         ; Load 92 into VE
$F5A    $B84E   JP       V0, $84E        ; Jump to V0 + 84E
$F5C    $4995   SNE      V9, #95         ; Skip if V9 != 149
$F5E    $F8E9   UNKNOWN  F8E9            ; Unknown Fxxx instruction
$F60    $E086   UNKNOWN  $E086           ; Unknown Exxx instruction
$F62    $58D3   UNKNOWN  $58D3           ; Unknown 5xxx instruction
$F64    $05AE   SYS      $5AE            ; System call to 5AE
$F66    $CADB   RND      VA, #DB         ; VA = random & DB
$F68    $38D9   SE       V8, #D9         ; Skip if V8 == 217
$F6A    $9869   UNKNOWN  $9869           ; Unknown 9xxx instruction
$F6C    $B574   JP       V0, $574        ; Jump to V0 + 574
$F6E    $C817   RND      V8, #17         ; V8 = random & 17
$F70    $DE82   DRW      VE, V8, #2      ; Draw 2-byte sprite at VE, V8
$F72    $4401   SNE      V4, #01         ; Skip if V4 != 1
$F74    $137D   JP       $37D            ; Jump to 37D
$F76    $AF66   LD       I, $F66         ; Load F66 into I
$F78    $0A23   SYS      $A23            ; System call to A23
$F7A    $C6F0   RND      V6, #F0         ; V6 = random & F0
$F7C    $0C7B   SYS      $C7B            ; System call to C7B
$F7E    $99D1   UNKNOWN  $99D1           ; Unknown 9xxx instruction
$F80    $1BBB   JP       $BBB            ; Jump to BBB
$F82    $AA4F   LD       I, $A4F         ; Load A4F into I
$F84    $0A7C   SYS      $A7C            ; System call to A7C
$F86    $F76A   UNKNOWN  F76A            ; Unknown Fxxx instruction
$F88    $028A   SYS      $28A            ; System call to 28A
$F8A    $B7C3   JP       V0, $7C3        ; Jump to V0 + 7C3
$F8C    $3CC2   SE       VC, #C2         ; Skip if VC == 194
$F8E    $97C5   UNKNOWN  $97C5           ; Unknown 9xxx instruction
$F90    $5F14   UNKNOWN  $5F14           ; Unknown 5xxx instruction
$F92    $5E8F   UNKNOWN  $5E8F           ; Unknown 5xxx instruction
$F94    $F06C   UNKNOWN  F06C            ; Unknown Fxxx instruction
$F96    $F3A3   UNKNOWN  F3A3            ; Unknown Fxxx instruction
$F98    $1751   JP       $751            ; Jump to 751
$F9A    $0733   SYS      $733            ; System call to 733
$F9C    $28F2   CALL     $8F2            ; Call subroutine at 8F2
$F9E    $1C08   JP       $C08            ; Jump to C08
$FA0    $093F   SYS      $93F            ; System call to 93F
$FA2    $F0B1   UNKNOWN  F0B1            ; Unknown Fxxx instruction
$FA4    $56FC   UNKNOWN  $56FC           ; Unknown 5xxx instruction
$FA6    $D519   DRW      V5, V1, #9      ; Draw 9-byte sprite at V5, V1
$FA8    $FA42   UNKNOWN  FA42            ; Unknown Fxxx instruction
$FAA    $6937   LD       V9, #37         ; Load 55 into V9
$FAC    $2850   CALL     $850            ; Call subroutine at 850
$FAE    $2D14   CALL     $D14            ; Call subroutine at D14
$FB0    $C91C   RND      V9, #1C         ; V9 = random & 1C
$FB2    $965C   UNKNOWN  $965C           ; Unknown 9xxx instruction
$FB4    $9327   UNKNOWN  $9327           ; Unknown 9xxx instruction
$FB6    $C49C   RND      V4, #9C         ; V4 = random & 9C
$FB8    $E16C   UNKNOWN  $E16C           ; Unknown Exxx instruction
$FBA    $A091   LD       I, $091         ; Load 091 into I
$FBC    $FA42   UNKNOWN  FA42            ; Unknown Fxxx instruction
$FBE    $6618   LD       V6, #18         ; Load 24 into V6
$FC0    $1352   JP       $352            ; Jump to 352
$FC2    $71E9   ADD      V1, #E9         ; Add 233 to V1
$FC4    $797C   ADD      V9, #7C         ; Add 124 to V9
$FC6    $C28F   RND      V2, #8F         ; V2 = random & 8F
$FC8    $21AE   CALL     $1AE            ; Call subroutine at 1AE
$FCA    $4503   SNE      V5, #03         ; Skip if V5 != 3
$FCC    $2E88   CALL     $E88            ; Call subroutine at E88
$FCE    $AAB4   LD       I, $AB4         ; Load AB4 into I
$FD0    $0DBB   SYS      $DBB            ; System call to DBB
$FD2    $3811   SE       V8, #11         ; Skip if V8 == 17
$FD4    $4421   SNE      V4, #21         ; Skip if V4 != 33
$FD6    $438D   SNE      V3, #8D         ; Skip if V3 != 141
$FD8    $8156   SHR      V1              ; V1 >>= 1, VF = LSB
$FDA    $1D72   JP       $D72            ; Jump to D72
$FDC    $289B   CALL     $89B            ; Call subroutine at 89B
$FDE    $5E3E   UNKNOWN  $5E3E           ; Unknown 5xxx instruction
$FE0    $FA08   UNKNOWN  FA08            ; Unknown Fxxx instruction
$FE2    $EC0D   UNKNOWN  $EC0D           ; Unknown Exxx instruction
$FE4    $88B1   OR       V8, VB          ; V8 |= VB
$FE6    $2E54   CALL     $E54            ; Call subroutine at E54
$FE8    $867E   SHL      V6              ; V6 <<= 1, VF = MSB
$FEA    $F10A   LD       V1, K           ; Wait for key press, store in V1
$FEC    $1654   JP       $654            ; Jump to 654
$FEE    $D8DD   DRW      V8, VD, #D      ; Draw 13-byte sprite at V8, VD
$FF0    $662F   LD       V6, #2F         ; Load 47 into V6
$FF2    $6B54   LD       VB, #54         ; Load 84 into VB
$FF4    $AA4B   LD       I, $A4B         ; Load A4B into I
$FF6    $C444   RND      V4, #44         ; V4 = random & 44
$FF8    $F6B9   UNKNOWN  F6B9            ; Unknown Fxxx instruction
$FFA    $28BD   CALL     $8BD            ; Call subroutine at 8BD
$FFC    $91E2   UNKNOWN  $91E2           ; Unknown 9xxx instruction
$FFE    $5711   UNKNOWN  $5711           ; Unknown 5xxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 467 (26.1%)
  LD      : 235 (13.1%)
  JP      : 231 (12.9%)
  SE      : 138 ( 7.7%)
  ADD     : 130 ( 7.3%)
  SYS     : 121 ( 6.8%)
  CALL    : 111 ( 6.2%)
  SNE     : 110 ( 6.1%)
  RND     : 105 ( 5.9%)
  DRW     : 100 ( 5.6%)
  SHR     :  11 ( 0.6%)
  SUB     :   7 ( 0.4%)
  OR      :   7 ( 0.4%)
  XOR     :   6 ( 0.3%)
  SHL     :   5 ( 0.3%)
  AND     :   5 ( 0.3%)
  SUBN    :   3 ( 0.2%)

Memory Operations: 365 (20.4%)
Arithmetic Operations: 158 (8.8%)
