
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_ASCENDING_B2779D01_I00801_C1001_9990af5c168b.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 2779
Instance: 801
Direction: ascending
Final Array: [32, 32, 32, 32, 32, 32, 115, 134]
Operations: R:0 W:6 C:63 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 114
Sort Array References:
  $20A: LD I, $390 ; Load 390 into I
  $268: LD I, $503 ; Load 503 into I
  $27E: LD I, $88C ; Load 88C into I
  $288: LD I, $10A ; Load 10A into I
  $28E: LD I, $6E9 ; Load 6E9 into I
  $2BE: LD I, $6E6 ; Load 6E6 into I
  $2CA: LD I, $630 ; Load 630 into I
  $2D2: LD I, $3EC ; Load 3EC into I
  $2E2: LD I, $DD4 ; Load DD4 into I
  $30E: LD I, $605 ; Load 605 into I
  $35A: LD I, $7DC ; Load 7DC into I
  $35C: LD I, $3A0 ; Load 3A0 into I
  $366: LD I, $E24 ; Load E24 into I
  $370: LD I, $7C9 ; Load 7C9 into I
  $3E2: LD I, $731 ; Load 731 into I
  $3F8: LD I, $81A ; Load 81A into I
  $402: LD I, $4C7 ; Load 4C7 into I
  $436: LD I, $60F ; Load 60F into I
  $43C: LD I, $133 ; Load 133 into I
  $4A6: LD I, $ED4 ; Load ED4 into I
  $4C6: LD I, $461 ; Load 461 into I
  $4E0: LD I, $F39 ; Load F39 into I
  $4EA: LD I, $1B4 ; Load 1B4 into I
  $4EE: LD I, $5A8 ; Load 5A8 into I
  $500: LD I, $26A ; Load 26A into I
  $504: LD I, $820 ; Load 820 into I
  $510: LD I, $61D ; Load 61D into I
  $550: LD I, $DC7 ; Load DC7 into I
  $57A: LD I, $104 ; Load 104 into I
  $5CE: LD I, $748 ; Load 748 into I
  $5E6: LD I, $166 ; Load 166 into I
  $634: LD I, $82A ; Load 82A into I
  $638: LD I, $0AD ; Load 0AD into I
  $642: LD I, $FA8 ; Load FA8 into I
  $648: LD I, $03C ; Load 03C into I
  $650: LD I, $A24 ; Load A24 into I
  $6B0: LD I, $73E ; Load 73E into I
  $6B8: LD I, $9B0 ; Load 9B0 into I
  $6CC: LD I, $479 ; Load 479 into I
  $6CE: LD I, $75E ; Load 75E into I
  $6D8: LD I, $F52 ; Load F52 into I
  $706: LD I, $EE3 ; Load EE3 into I
  $710: LD I, $94E ; Load 94E into I
  $728: LD I, $E70 ; Load E70 into I
  $748: LD I, $598 ; Load 598 into I
  $750: LD I, $41A ; Load 41A into I
  $766: LD I, $94F ; Load 94F into I
  $76C: LD I, $091 ; Load 091 into I
  $77A: LD I, $400 ; Load 400 into I
  $77E: LD I, $554 ; Load 554 into I
  $78A: LD I, $1EA ; Load 1EA into I
  $7CA: LD I, $66B ; Load 66B into I
  $7D6: LD I, $1AE ; Load 1AE into I
  $820: LD I, $5F2 ; Load 5F2 into I
  $842: LD I, $B9C ; Load B9C into I
  $84A: LD I, $8C4 ; Load 8C4 into I
  $862: LD I, $5EE ; Load 5EE into I
  $88E: LD I, $5A3 ; Load 5A3 into I
  $89A: LD I, $7D5 ; Load 7D5 into I
  $8AA: LD I, $488 ; Load 488 into I
  $8C4: LD I, $156 ; Load 156 into I
  $908: LD I, $131 ; Load 131 into I
  $922: LD I, $F6B ; Load F6B into I
  $98A: LD I, $72D ; Load 72D into I
  $99C: LD I, $78D ; Load 78D into I
  $9B0: LD I, $E47 ; Load E47 into I
  $9C8: LD I, $9DD ; Load 9DD into I
  $A6C: LD I, $4B4 ; Load 4B4 into I
  $AD8: LD I, $1CC ; Load 1CC into I
  $AE6: LD I, $890 ; Load 890 into I
  $B58: LD I, $3A0 ; Load 3A0 into I
  $B7A: LD I, $36F ; Load 36F into I
  $BBA: LD I, $C98 ; Load C98 into I
  $BD6: LD I, $D1E ; Load D1E into I
  $C06: LD I, $3D3 ; Load 3D3 into I
  $C10: LD I, $914 ; Load 914 into I
  $C2A: LD I, $22B ; Load 22B into I
  $C32: LD I, $52A ; Load 52A into I
  $C58: LD I, $001 ; Load 001 into I
  $C68: LD I, $B70 ; Load B70 into I
  $C6A: LD I, $1D4 ; Load 1D4 into I
  $C7A: LD I, $3E4 ; Load 3E4 into I
  $CB2: LD I, $C6E ; Load C6E into I
  $CEA: LD I, $037 ; Load 037 into I
  $CF2: LD I, $B9A ; Load B9A into I
  $D08: LD I, $7CE ; Load 7CE into I
  $D58: LD I, $875 ; Load 875 into I
  $D84: LD I, $B8F ; Load B8F into I
  $DA6: LD I, $D3A ; Load D3A into I
  $DAE: LD I, $DF3 ; Load DF3 into I
  $DD0: LD I, $66B ; Load 66B into I
  $E34: LD I, $1AE ; Load 1AE into I
  $E3A: LD I, $ED2 ; Load ED2 into I
  $E48: LD I, $18B ; Load 18B into I
  $E64: LD I, $381 ; Load 381 into I
  $E6A: LD I, $D83 ; Load D83 into I
  $E86: LD I, $0AC ; Load 0AC into I
  $EA6: LD I, $DF5 ; Load DF5 into I
  $ECA: LD I, $8F0 ; Load 8F0 into I
  $ED8: LD I, $450 ; Load 450 into I
  $EDA: LD I, $F09 ; Load F09 into I
  $EE2: LD I, $443 ; Load 443 into I
  $EFC: LD I, $716 ; Load 716 into I
  $F06: LD I, $3D3 ; Load 3D3 into I
  $F18: LD I, $AEB ; Load AEB into I
  $F30: LD I, $11F ; Load 11F into I
  $F46: LD I, $B87 ; Load B87 into I
  $F68: LD I, $F36 ; Load F36 into I
  $F86: LD I, $B6E ; Load B6E into I
  $F88: LD I, $C4B ; Load C4B into I
  $FA2: LD I, $B31 ; Load B31 into I
  $FAA: LD I, $4A0 ; Load 4A0 into I
  $FC4: LD I, $B87 ; Load B87 into I
  $FF4: LD I, $244 ; Load 244 into I

CONTROL FLOW ANALYSIS:
Jumps: 203
Calls: 129
Branches: 245
Loops: 119
Loop Structures:
  $204 -> $101 (backward jump)
  $23E -> $00A (backward jump)
  $2E8 -> $181 (backward jump)
  $3D2 -> $2D0 (backward jump)
  $3E6 -> $03E (backward jump)
  $3FA -> $25A (backward jump)
  $48C -> $136 (backward jump)
  $49C -> $25D (backward jump)
  $4F8 -> $0CF (backward jump)
  $52E -> $115 (backward jump)
  $534 -> $09F (backward jump)
  $548 -> $038 (backward jump)
  $590 -> $278 (backward jump)
  $5A2 -> $116 (backward jump)
  $5A4 -> $18B (backward jump)
  $622 -> $12F (backward jump)
  $662 -> $5BC (backward jump)
  $668 -> $2CE (backward jump)
  $66C -> $285 (backward jump)
  $670 -> $047 (backward jump)
  $698 -> $2F1 (backward jump)
  $6F4 -> $022 (backward jump)
  $724 -> $2BA (backward jump)
  $72A -> $333 (backward jump)
  $756 -> $6AF (backward jump)
  $772 -> $118 (backward jump)
  $796 -> $654 (backward jump)
  $7B8 -> $68F (backward jump)
  $7CE -> $141 (backward jump)
  $7D2 -> $750 (backward jump)
  $7D8 -> $14D (backward jump)
  $7DC -> $68D (backward jump)
  $7E2 -> $4DF (backward jump)
  $7FA -> $706 (backward jump)
  $80A -> $2A7 (backward jump)
  $834 -> $662 (backward jump)
  $848 -> $828 (backward jump)
  $868 -> $7D8 (backward jump)
  $8AE -> $19D (backward jump)
  $8C0 -> $45C (backward jump)
  $8C2 -> $429 (backward jump)
  $8D0 -> $46E (backward jump)
  $8DA -> $16C (backward jump)
  $902 -> $5A4 (backward jump)
  $93A -> $34E (backward jump)
  $970 -> $944 (backward jump)
  $9F4 -> $1E5 (backward jump)
  $9F8 -> $0D8 (backward jump)
  $A34 -> $377 (backward jump)
  $A54 -> $658 (backward jump)
  $A58 -> $9A2 (backward jump)
  $A5A -> $873 (backward jump)
  $A60 -> $977 (backward jump)
  $A9E -> $1D2 (backward jump)
  $AAE -> $3E1 (backward jump)
  $AEC -> $30B (backward jump)
  $B0E -> $393 (backward jump)
  $B1A -> $AB6 (backward jump)
  $B36 -> $602 (backward jump)
  $B38 -> $702 (backward jump)
  $B44 -> $694 (backward jump)
  $B62 -> $7F4 (backward jump)
  $B7C -> $36A (backward jump)
  $B94 -> $0DB (backward jump)
  $B9C -> $972 (backward jump)
  $BBC -> $404 (backward jump)
  $BC8 -> $483 (backward jump)
  $BE8 -> $2D0 (backward jump)
  $BEE -> $B81 (backward jump)
  $BF8 -> $69A (backward jump)
  $C04 -> $BEC (backward jump)
  $C28 -> $5B9 (backward jump)
  $C5C -> $4C7 (backward jump)
  $C74 -> $BE2 (backward jump)
  $C80 -> $A95 (backward jump)
  $C92 -> $111 (backward jump)
  $CBA -> $297 (backward jump)
  $CD0 -> $9BF (backward jump)
  $CF0 -> $32C (backward jump)
  $CFA -> $B65 (backward jump)
  $D02 -> $3CE (backward jump)
  $D06 -> $9E3 (backward jump)
  $D28 -> $BAC (backward jump)
  $D32 -> $848 (backward jump)
  $D34 -> $2B3 (backward jump)
  $D44 -> $803 (backward jump)
  $D60 -> $0A4 (backward jump)
  $D6C -> $73C (backward jump)
  $D6E -> $9E3 (backward jump)
  $DC6 -> $349 (backward jump)
  $DC8 -> $C14 (backward jump)
  $DDC -> $C6C (backward jump)
  $DEA -> $004 (backward jump)
  $DF6 -> $9F5 (backward jump)
  $DFC -> $CBC (backward jump)
  $E0A -> $B3C (backward jump)
  $E1A -> $C8F (backward jump)
  $E2E -> $89D (backward jump)
  $E4A -> $D56 (backward jump)
  $E56 -> $7C6 (backward jump)
  $E80 -> $493 (backward jump)
  $E90 -> $DBE (backward jump)
  $EBE -> $47D (backward jump)
  $EE4 -> $A7A (backward jump)
  $EF0 -> $EDC (backward jump)
  $EF2 -> $3BA (backward jump)
  $F02 -> $68D (backward jump)
  $F3E -> $116 (backward jump)
  $F44 -> $7EE (backward jump)
  $F5E -> $2A2 (backward jump)
  $F78 -> $199 (backward jump)
  $F9A -> $760 (backward jump)
  $FA6 -> $192 (backward jump)
  $FAC -> $331 (backward jump)
  $FAE -> $059 (backward jump)
  $FB6 -> $4FD (backward jump)
  $FBC -> $0E2 (backward jump)
  $FDE -> $F80 (backward jump)
  $FEC -> $191 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $933F   UNKNOWN  $933F           ; Unknown 9xxx instruction
$202    $FF72   UNKNOWN  FF72            ; Unknown Fxxx instruction
$204    $B101   JP       V0, $101        ; Jump to V0 + 101
$206    $3DCC   SE       VD, #CC         ; Skip if VD == 204
$208    $18C9   JP       $8C9            ; Jump to 8C9
$20A    $A390   LD       I, $390         ; Load 390 into I
$20C    $E28F   UNKNOWN  $E28F           ; Unknown Exxx instruction
$20E    $7C16   ADD      VC, #16         ; Add 22 to VC
$210    $2531   CALL     $531            ; Call subroutine at 531
$212    $FBFF   UNKNOWN  FBFF            ; Unknown Fxxx instruction
$214    $5672   UNKNOWN  $5672           ; Unknown 5xxx instruction
$216    $F6D2   UNKNOWN  F6D2            ; Unknown Fxxx instruction
$218    $BB40   JP       V0, $B40        ; Jump to V0 + B40
$21A    $D915   DRW      V9, V1, #5      ; Draw 5-byte sprite at V9, V1
$21C    $2DCA   CALL     $DCA            ; Call subroutine at DCA
$21E    $DDC2   DRW      VD, VC, #2      ; Draw 2-byte sprite at VD, VC
$220    $284A   CALL     $84A            ; Call subroutine at 84A
$222    $6842   LD       V8, #42         ; Load 66 into V8
$224    $5747   UNKNOWN  $5747           ; Unknown 5xxx instruction
$226    $7182   ADD      V1, #82         ; Add 130 to V1
$228    $7CD2   ADD      VC, #D2         ; Add 210 to VC
$22A    $9DB1   UNKNOWN  $9DB1           ; Unknown 9xxx instruction
$22C    $8835   SUB      V8, V3          ; V8 -= V3, VF = !borrow
$22E    $0C13   SYS      $C13            ; System call to C13
$230    $4E43   SNE      VE, #43         ; Skip if VE != 67
$232    $C21E   RND      V2, #1E         ; V2 = random & 1E
$234    $69B9   LD       V9, #B9         ; Load 185 into V9
$236    $8DEF   UNKNOWN  8DEF            ; Unknown 8xxx instruction
$238    $2B62   CALL     $B62            ; Call subroutine at B62
$23A    $B492   JP       V0, $492        ; Jump to V0 + 492
$23C    $4E2D   SNE      VE, #2D         ; Skip if VE != 45
$23E    $100A   JP       $00A            ; Jump to 00A
$240    $C505   RND      V5, #05         ; V5 = random & 05
$242    $9A82   UNKNOWN  $9A82           ; Unknown 9xxx instruction
$244    $511B   UNKNOWN  $511B           ; Unknown 5xxx instruction
$246    $1D20   JP       $D20            ; Jump to D20
$248    $974F   UNKNOWN  $974F           ; Unknown 9xxx instruction
$24A    $EEB5   UNKNOWN  $EEB5           ; Unknown Exxx instruction
$24C    $2AE4   CALL     $AE4            ; Call subroutine at AE4
$24E    $614C   LD       V1, #4C         ; Load 76 into V1
$250    $7698   ADD      V6, #98         ; Add 152 to V6
$252    $C2C1   RND      V2, #C1         ; V2 = random & C1
$254    $F353   UNKNOWN  F353            ; Unknown Fxxx instruction
$256    $CB63   RND      VB, #63         ; VB = random & 63
$258    $3C78   SE       VC, #78         ; Skip if VC == 120
$25A    $C031   RND      V0, #31         ; V0 = random & 31
$25C    $6D83   LD       VD, #83         ; Load 131 into VD
$25E    $77FC   ADD      V7, #FC         ; Add 252 to V7
$260    $4593   SNE      V5, #93         ; Skip if V5 != 147
$262    $E402   UNKNOWN  $E402           ; Unknown Exxx instruction
$264    $451E   SNE      V5, #1E         ; Skip if V5 != 30
$266    $D7AD   DRW      V7, VA, #D      ; Draw 13-byte sprite at V7, VA
$268    $A503   LD       I, $503         ; Load 503 into I
$26A    $C58E   RND      V5, #8E         ; V5 = random & 8E
$26C    $28AA   CALL     $8AA            ; Call subroutine at 8AA
$26E    $FB2F   UNKNOWN  FB2F            ; Unknown Fxxx instruction
$270    $37D0   SE       V7, #D0         ; Skip if V7 == 208
$272    $7B6B   ADD      VB, #6B         ; Add 107 to VB
$274    $E143   UNKNOWN  $E143           ; Unknown Exxx instruction
$276    $D9EE   DRW      V9, VE, #E      ; Draw 14-byte sprite at V9, VE
$278    $E17E   UNKNOWN  $E17E           ; Unknown Exxx instruction
$27A    $5A07   UNKNOWN  $5A07           ; Unknown 5xxx instruction
$27C    $7775   ADD      V7, #75         ; Add 117 to V7
$27E    $A88C   LD       I, $88C         ; Load 88C into I
$280    $E766   UNKNOWN  $E766           ; Unknown Exxx instruction
$282    $4683   SNE      V6, #83         ; Skip if V6 != 131
$284    $2953   CALL     $953            ; Call subroutine at 953
$286    $2432   CALL     $432            ; Call subroutine at 432
$288    $A10A   LD       I, $10A         ; Load 10A into I
$28A    $E6D7   UNKNOWN  $E6D7           ; Unknown Exxx instruction
$28C    $CBF7   RND      VB, #F7         ; VB = random & F7
$28E    $A6E9   LD       I, $6E9         ; Load 6E9 into I
$290    $4C9B   SNE      VC, #9B         ; Skip if VC != 155
$292    $825C   UNKNOWN  825C            ; Unknown 8xxx instruction
$294    $40E9   SNE      V0, #E9         ; Skip if V0 != 233
$296    $8901   OR       V9, V0          ; V9 |= V0
$298    $D9DD   DRW      V9, VD, #D      ; Draw 13-byte sprite at V9, VD
$29A    $0255   SYS      $255            ; System call to 255
$29C    $5809   UNKNOWN  $5809           ; Unknown 5xxx instruction
$29E    $D2AA   DRW      V2, VA, #A      ; Draw 10-byte sprite at V2, VA
$2A0    $8022   AND      V0, V2          ; V0 &= V2
$2A2    $5C63   UNKNOWN  $5C63           ; Unknown 5xxx instruction
$2A4    $23FD   CALL     $3FD            ; Call subroutine at 3FD
$2A6    $1942   JP       $942            ; Jump to 942
$2A8    $1438   JP       $438            ; Jump to 438
$2AA    $CA7D   RND      VA, #7D         ; VA = random & 7D
$2AC    $D9B6   DRW      V9, VB, #6      ; Draw 6-byte sprite at V9, VB
$2AE    $477D   SNE      V7, #7D         ; Skip if V7 != 125
$2B0    $90DA   UNKNOWN  $90DA           ; Unknown 9xxx instruction
$2B2    $D57F   DRW      V5, V7, #F      ; Draw 15-byte sprite at V5, V7
$2B4    $8D40   LD       VD, V4          ; VD = V4
$2B6    $7A52   ADD      VA, #52         ; Add 82 to VA
$2B8    $3160   SE       V1, #60         ; Skip if V1 == 96
$2BA    $DFDD   DRW      VF, VD, #D      ; Draw 13-byte sprite at VF, VD
$2BC    $0853   SYS      $853            ; System call to 853
$2BE    $A6E6   LD       I, $6E6         ; Load 6E6 into I
$2C0    $8BA6   SHR      VB              ; VB >>= 1, VF = LSB
$2C2    $BF09   JP       V0, $F09        ; Jump to V0 + F09
$2C4    $01DB   SYS      $1DB            ; System call to 1DB
$2C6    $3622   SE       V6, #22         ; Skip if V6 == 34
$2C8    $7F05   ADD      VF, #05         ; Add 5 to VF
$2CA    $A630   LD       I, $630         ; Load 630 into I
$2CC    $7F1E   ADD      VF, #1E         ; Add 30 to VF
$2CE    $53E7   UNKNOWN  $53E7           ; Unknown 5xxx instruction
$2D0    $4421   SNE      V4, #21         ; Skip if V4 != 33
$2D2    $A3EC   LD       I, $3EC         ; Load 3EC into I
$2D4    $2F55   CALL     $F55            ; Call subroutine at F55
$2D6    $9F9A   UNKNOWN  $9F9A           ; Unknown 9xxx instruction
$2D8    $352F   SE       V5, #2F         ; Skip if V5 == 47
$2DA    $37DC   SE       V7, #DC         ; Skip if V7 == 220
$2DC    $52E9   UNKNOWN  $52E9           ; Unknown 5xxx instruction
$2DE    $52AF   UNKNOWN  $52AF           ; Unknown 5xxx instruction
$2E0    $520A   UNKNOWN  $520A           ; Unknown 5xxx instruction
$2E2    $ADD4   LD       I, $DD4         ; Load DD4 into I
$2E4    $02A9   SYS      $2A9            ; System call to 2A9
$2E6    $F72C   UNKNOWN  F72C            ; Unknown Fxxx instruction
$2E8    $B181   JP       V0, $181        ; Jump to V0 + 181
$2EA    $36AB   SE       V6, #AB         ; Skip if V6 == 171
$2EC    $014B   SYS      $14B            ; System call to 14B
$2EE    $C818   RND      V8, #18         ; V8 = random & 18
$2F0    $D120   DRW      V1, V2, #0      ; Draw 0-byte sprite at V1, V2
$2F2    $2020   CALL     $020            ; Call subroutine at 020
$2F4    $2020   CALL     $020            ; Call subroutine at 020
$2F6    $2020   CALL     $020            ; Call subroutine at 020
$2F8    $2020   CALL     $020            ; Call subroutine at 020
$2FA    $2020   CALL     $020            ; Call subroutine at 020
$2FC    $2020   CALL     $020            ; Call subroutine at 020
$2FE    $2020   CALL     $020            ; Call subroutine at 020
$300    $2020   CALL     $020            ; Call subroutine at 020
$302    $2020   CALL     $020            ; Call subroutine at 020
$304    $2020   CALL     $020            ; Call subroutine at 020
$306    $7386   ADD      V3, #86         ; Add 134 to V3
$308    $C7D6   RND      V7, #D6         ; V7 = random & D6
$30A    $BCAF   JP       V0, $CAF        ; Jump to V0 + CAF
$30C    $040B   SYS      $40B            ; System call to 40B
$30E    $A605   LD       I, $605         ; Load 605 into I
$310    $5400   SE       V4, V0          ; Skip if V4 == V0
$312    $9BDE   UNKNOWN  $9BDE           ; Unknown 9xxx instruction
$314    $34BE   SE       V4, #BE         ; Skip if V4 == 190
$316    $3500   SE       V5, #00         ; Skip if V5 == 0
$318    $2FFB   CALL     $FFB            ; Call subroutine at FFB
$31A    $EC49   UNKNOWN  $EC49           ; Unknown Exxx instruction
$31C    $E823   UNKNOWN  $E823           ; Unknown Exxx instruction
$31E    $08B6   SYS      $8B6            ; System call to 8B6
$320    $1611   JP       $611            ; Jump to 611
$322    $8ABD   UNKNOWN  8ABD            ; Unknown 8xxx instruction
$324    $FFCB   UNKNOWN  FFCB            ; Unknown Fxxx instruction
$326    $B91F   JP       V0, $91F        ; Jump to V0 + 91F
$328    $538E   UNKNOWN  $538E           ; Unknown 5xxx instruction
$32A    $5CE5   UNKNOWN  $5CE5           ; Unknown 5xxx instruction
$32C    $4BB6   SNE      VB, #B6         ; Skip if VB != 182
$32E    $3461   SE       V4, #61         ; Skip if V4 == 97
$330    $3697   SE       V6, #97         ; Skip if V6 == 151
$332    $3FBD   SE       VF, #BD         ; Skip if VF == 189
$334    $D7A1   DRW      V7, VA, #1      ; Draw 1-byte sprite at V7, VA
$336    $4C5D   SNE      VC, #5D         ; Skip if VC != 93
$338    $1E7C   JP       $E7C            ; Jump to E7C
$33A    $9C02   UNKNOWN  $9C02           ; Unknown 9xxx instruction
$33C    $1E3E   JP       $E3E            ; Jump to E3E
$33E    $6113   LD       V1, #13         ; Load 19 into V1
$340    $DD0E   DRW      VD, V0, #E      ; Draw 14-byte sprite at VD, V0
$342    $6D86   LD       VD, #86         ; Load 134 into VD
$344    $CF0E   RND      VF, #0E         ; VF = random & 0E
$346    $438C   SNE      V3, #8C         ; Skip if V3 != 140
$348    $C7F3   RND      V7, #F3         ; V7 = random & F3
$34A    $C000   RND      V0, #00         ; V0 = random & 00
$34C    $EF47   UNKNOWN  $EF47           ; Unknown Exxx instruction
$34E    $711D   ADD      V1, #1D         ; Add 29 to V1
$350    $F138   UNKNOWN  F138            ; Unknown Fxxx instruction
$352    $9EB5   UNKNOWN  $9EB5           ; Unknown 9xxx instruction
$354    $23DB   CALL     $3DB            ; Call subroutine at 3DB
$356    $B45D   JP       V0, $45D        ; Jump to V0 + 45D
$358    $83CF   UNKNOWN  83CF            ; Unknown 8xxx instruction
$35A    $A7DC   LD       I, $7DC         ; Load 7DC into I
$35C    $A3A0   LD       I, $3A0         ; Load 3A0 into I
$35E    $B995   JP       V0, $995        ; Jump to V0 + 995
$360    $BF13   JP       V0, $F13        ; Jump to V0 + F13
$362    $F231   UNKNOWN  F231            ; Unknown Fxxx instruction
$364    $72CF   ADD      V2, #CF         ; Add 207 to V2
$366    $AE24   LD       I, $E24         ; Load E24 into I
$368    $467E   SNE      V6, #7E         ; Skip if V6 != 126
$36A    $9423   UNKNOWN  $9423           ; Unknown 9xxx instruction
$36C    $09BB   SYS      $9BB            ; System call to 9BB
$36E    $E52D   UNKNOWN  $E52D           ; Unknown Exxx instruction
$370    $A7C9   LD       I, $7C9         ; Load 7C9 into I
$372    $6DEE   LD       VD, #EE         ; Load 238 into VD
$374    $13D0   JP       $3D0            ; Jump to 3D0
$376    $4BC9   SNE      VB, #C9         ; Skip if VB != 201
$378    $EB96   UNKNOWN  $EB96           ; Unknown Exxx instruction
$37A    $E143   UNKNOWN  $E143           ; Unknown Exxx instruction
$37C    $B5C0   JP       V0, $5C0        ; Jump to V0 + 5C0
$37E    $01E7   SYS      $1E7            ; System call to 1E7
$380    $F129   LD       F, V1           ; I = sprite address for digit V1
$382    $7673   ADD      V6, #73         ; Add 115 to V6
$384    $2483   CALL     $483            ; Call subroutine at 483
$386    $35F8   SE       V5, #F8         ; Skip if V5 == 248
$388    $CFB3   RND      VF, #B3         ; VF = random & B3
$38A    $F96B   UNKNOWN  F96B            ; Unknown Fxxx instruction
$38C    $DE9F   DRW      VE, V9, #F      ; Draw 15-byte sprite at VE, V9
$38E    $F877   UNKNOWN  F877            ; Unknown Fxxx instruction
$390    $FB67   UNKNOWN  FB67            ; Unknown Fxxx instruction
$392    $D226   DRW      V2, V2, #6      ; Draw 6-byte sprite at V2, V2
$394    $2313   CALL     $313            ; Call subroutine at 313
$396    $EB1C   UNKNOWN  $EB1C           ; Unknown Exxx instruction
$398    $351B   SE       V5, #1B         ; Skip if V5 == 27
$39A    $5825   UNKNOWN  $5825           ; Unknown 5xxx instruction
$39C    $745D   ADD      V4, #5D         ; Add 93 to V4
$39E    $86DB   UNKNOWN  86DB            ; Unknown 8xxx instruction
$3A0    $4BD7   SNE      VB, #D7         ; Skip if VB != 215
$3A2    $7A3E   ADD      VA, #3E         ; Add 62 to VA
$3A4    $8D6D   UNKNOWN  8D6D            ; Unknown 8xxx instruction
$3A6    $1A41   JP       $A41            ; Jump to A41
$3A8    $5234   UNKNOWN  $5234           ; Unknown 5xxx instruction
$3AA    $B68C   JP       V0, $68C        ; Jump to V0 + 68C
$3AC    $D568   DRW      V5, V6, #8      ; Draw 8-byte sprite at V5, V6
$3AE    $3B47   SE       VB, #47         ; Skip if VB == 71
$3B0    $C1AB   RND      V1, #AB         ; V1 = random & AB
$3B2    $B9E5   JP       V0, $9E5        ; Jump to V0 + 9E5
$3B4    $1BE7   JP       $BE7            ; Jump to BE7
$3B6    $C47F   RND      V4, #7F         ; V4 = random & 7F
$3B8    $9311   UNKNOWN  $9311           ; Unknown 9xxx instruction
$3BA    $ECDC   UNKNOWN  $ECDC           ; Unknown Exxx instruction
$3BC    $955C   UNKNOWN  $955C           ; Unknown 9xxx instruction
$3BE    $C8A5   RND      V8, #A5         ; V8 = random & A5
$3C0    $D1CD   DRW      V1, VC, #D      ; Draw 13-byte sprite at V1, VC
$3C2    $D9D5   DRW      V9, VD, #5      ; Draw 5-byte sprite at V9, VD
$3C4    $8D04   ADD      VD, V0          ; VD += V0, VF = carry
$3C6    $5444   UNKNOWN  $5444           ; Unknown 5xxx instruction
$3C8    $63D9   LD       V3, #D9         ; Load 217 into V3
$3CA    $B9DA   JP       V0, $9DA        ; Jump to V0 + 9DA
$3CC    $59DD   UNKNOWN  $59DD           ; Unknown 5xxx instruction
$3CE    $0B2B   SYS      $B2B            ; System call to B2B
$3D0    $F253   UNKNOWN  F253            ; Unknown Fxxx instruction
$3D2    $B2D0   JP       V0, $2D0        ; Jump to V0 + 2D0
$3D4    $3B46   SE       VB, #46         ; Skip if VB == 70
$3D6    $9830   SNE      V8, V3          ; Skip if V8 != V3
$3D8    $C6E6   RND      V6, #E6         ; V6 = random & E6
$3DA    $4535   SNE      V5, #35         ; Skip if V5 != 53
$3DC    $FAF1   UNKNOWN  FAF1            ; Unknown Fxxx instruction
$3DE    $2842   CALL     $842            ; Call subroutine at 842
$3E0    $14B1   JP       $4B1            ; Jump to 4B1
$3E2    $A731   LD       I, $731         ; Load 731 into I
$3E4    $BCBC   JP       V0, $CBC        ; Jump to V0 + CBC
$3E6    $103E   JP       $03E            ; Jump to 03E
$3E8    $B7FB   JP       V0, $7FB        ; Jump to V0 + 7FB
$3EA    $54F0   SE       V4, VF          ; Skip if V4 == VF
$3EC    $39E3   SE       V9, #E3         ; Skip if V9 == 227
$3EE    $1EF3   JP       $EF3            ; Jump to EF3
$3F0    $6A7D   LD       VA, #7D         ; Load 125 into VA
$3F2    $8392   AND      V3, V9          ; V3 &= V9
$3F4    $3BD2   SE       VB, #D2         ; Skip if VB == 210
$3F6    $7338   ADD      V3, #38         ; Add 56 to V3
$3F8    $A81A   LD       I, $81A         ; Load 81A into I
$3FA    $125A   JP       $25A            ; Jump to 25A
$3FC    $BA62   JP       V0, $A62        ; Jump to V0 + A62
$3FE    $D60D   DRW      V6, V0, #D      ; Draw 13-byte sprite at V6, V0
$400    $FC50   UNKNOWN  FC50            ; Unknown Fxxx instruction
$402    $A4C7   LD       I, $4C7         ; Load 4C7 into I
$404    $947D   UNKNOWN  $947D           ; Unknown 9xxx instruction
$406    $9D51   UNKNOWN  $9D51           ; Unknown 9xxx instruction
$408    $DF2B   DRW      VF, V2, #B      ; Draw 11-byte sprite at VF, V2
$40A    $561A   UNKNOWN  $561A           ; Unknown 5xxx instruction
$40C    $6F1D   LD       VF, #1D         ; Load 29 into VF
$40E    $4680   SNE      V6, #80         ; Skip if V6 != 128
$410    $C1A6   RND      V1, #A6         ; V1 = random & A6
$412    $8C3B   UNKNOWN  8C3B            ; Unknown 8xxx instruction
$414    $D426   DRW      V4, V2, #6      ; Draw 6-byte sprite at V4, V2
$416    $7FAD   ADD      VF, #AD         ; Add 173 to VF
$418    $3236   SE       V2, #36         ; Skip if V2 == 54
$41A    $62BD   LD       V2, #BD         ; Load 189 into V2
$41C    $F6BA   UNKNOWN  F6BA            ; Unknown Fxxx instruction
$41E    $C6D0   RND      V6, #D0         ; V6 = random & D0
$420    $6B38   LD       VB, #38         ; Load 56 into VB
$422    $8B2E   SHL      VB              ; VB <<= 1, VF = MSB
$424    $DF9A   DRW      VF, V9, #A      ; Draw 10-byte sprite at VF, V9
$426    $F284   UNKNOWN  F284            ; Unknown Fxxx instruction
$428    $BA93   JP       V0, $A93        ; Jump to V0 + A93
$42A    $0AAE   SYS      $AAE            ; System call to AAE
$42C    $88D0   LD       V8, VD          ; V8 = VD
$42E    $8F7D   UNKNOWN  8F7D            ; Unknown 8xxx instruction
$430    $DDEB   DRW      VD, VE, #B      ; Draw 11-byte sprite at VD, VE
$432    $923A   UNKNOWN  $923A           ; Unknown 9xxx instruction
$434    $7342   ADD      V3, #42         ; Add 66 to V3
$436    $A60F   LD       I, $60F         ; Load 60F into I
$438    $C195   RND      V1, #95         ; V1 = random & 95
$43A    $4FD9   SNE      VF, #D9         ; Skip if VF != 217
$43C    $A133   LD       I, $133         ; Load 133 into I
$43E    $70FA   ADD      V0, #FA         ; Add 250 to V0
$440    $91F9   UNKNOWN  $91F9           ; Unknown 9xxx instruction
$442    $47CE   SNE      V7, #CE         ; Skip if V7 != 206
$444    $D208   DRW      V2, V0, #8      ; Draw 8-byte sprite at V2, V0
$446    $FB56   UNKNOWN  FB56            ; Unknown Fxxx instruction
$448    $976B   UNKNOWN  $976B           ; Unknown 9xxx instruction
$44A    $FF8B   UNKNOWN  FF8B            ; Unknown Fxxx instruction
$44C    $F82A   UNKNOWN  F82A            ; Unknown Fxxx instruction
$44E    $C195   RND      V1, #95         ; V1 = random & 95
$450    $08BC   SYS      $8BC            ; System call to 8BC
$452    $1488   JP       $488            ; Jump to 488
$454    $20C2   CALL     $0C2            ; Call subroutine at 0C2
$456    $DA3B   DRW      VA, V3, #B      ; Draw 11-byte sprite at VA, V3
$458    $E795   UNKNOWN  $E795           ; Unknown Exxx instruction
$45A    $51DC   UNKNOWN  $51DC           ; Unknown 5xxx instruction
$45C    $2F6D   CALL     $F6D            ; Call subroutine at F6D
$45E    $0453   SYS      $453            ; System call to 453
$460    $9B64   UNKNOWN  $9B64           ; Unknown 9xxx instruction
$462    $6461   LD       V4, #61         ; Load 97 into V4
$464    $BDBB   JP       V0, $DBB        ; Jump to V0 + DBB
$466    $6BEE   LD       VB, #EE         ; Load 238 into VB
$468    $9354   UNKNOWN  $9354           ; Unknown 9xxx instruction
$46A    $6C1A   LD       VC, #1A         ; Load 26 into VC
$46C    $6306   LD       V3, #06         ; Load 6 into V3
$46E    $DFF8   DRW      VF, VF, #8      ; Draw 8-byte sprite at VF, VF
$470    $F8B8   UNKNOWN  F8B8            ; Unknown Fxxx instruction
$472    $0C98   SYS      $C98            ; System call to C98
$474    $6185   LD       V1, #85         ; Load 133 into V1
$476    $0EF8   SYS      $EF8            ; System call to EF8
$478    $9745   UNKNOWN  $9745           ; Unknown 9xxx instruction
$47A    $F9F2   UNKNOWN  F9F2            ; Unknown Fxxx instruction
$47C    $FC35   UNKNOWN  FC35            ; Unknown Fxxx instruction
$47E    $41C7   SNE      V1, #C7         ; Skip if V1 != 199
$480    $30E3   SE       V0, #E3         ; Skip if V0 == 227
$482    $3378   SE       V3, #78         ; Skip if V3 == 120
$484    $9456   UNKNOWN  $9456           ; Unknown 9xxx instruction
$486    $1FBA   JP       $FBA            ; Jump to FBA
$488    $F230   UNKNOWN  F230            ; Unknown Fxxx instruction
$48A    $E04B   UNKNOWN  $E04B           ; Unknown Exxx instruction
$48C    $1136   JP       $136            ; Jump to 136
$48E    $3919   SE       V9, #19         ; Skip if V9 == 25
$490    $964B   UNKNOWN  $964B           ; Unknown 9xxx instruction
$492    $D53B   DRW      V5, V3, #B      ; Draw 11-byte sprite at V5, V3
$494    $0C2B   SYS      $C2B            ; System call to C2B
$496    $399A   SE       V9, #9A         ; Skip if V9 == 154
$498    $7930   ADD      V9, #30         ; Add 48 to V9
$49A    $3EA4   SE       VE, #A4         ; Skip if VE == 164
$49C    $B25D   JP       V0, $25D        ; Jump to V0 + 25D
$49E    $36C6   SE       V6, #C6         ; Skip if V6 == 198
$4A0    $5719   UNKNOWN  $5719           ; Unknown 5xxx instruction
$4A2    $E259   UNKNOWN  $E259           ; Unknown Exxx instruction
$4A4    $8900   LD       V9, V0          ; V9 = V0
$4A6    $AED4   LD       I, $ED4         ; Load ED4 into I
$4A8    $2194   CALL     $194            ; Call subroutine at 194
$4AA    $2726   CALL     $726            ; Call subroutine at 726
$4AC    $716F   ADD      V1, #6F         ; Add 111 to V1
$4AE    $BE7A   JP       V0, $E7A        ; Jump to V0 + E7A
$4B0    $7D1E   ADD      VD, #1E         ; Add 30 to VD
$4B2    $D545   DRW      V5, V4, #5      ; Draw 5-byte sprite at V5, V4
$4B4    $4AE1   SNE      VA, #E1         ; Skip if VA != 225
$4B6    $D309   DRW      V3, V0, #9      ; Draw 9-byte sprite at V3, V0
$4B8    $31BB   SE       V1, #BB         ; Skip if V1 == 187
$4BA    $3E38   SE       VE, #38         ; Skip if VE == 56
$4BC    $59F9   UNKNOWN  $59F9           ; Unknown 5xxx instruction
$4BE    $3EA0   SE       VE, #A0         ; Skip if VE == 160
$4C0    $D175   DRW      V1, V7, #5      ; Draw 5-byte sprite at V1, V7
$4C2    $9C8A   UNKNOWN  $9C8A           ; Unknown 9xxx instruction
$4C4    $1CCB   JP       $CCB            ; Jump to CCB
$4C6    $A461   LD       I, $461         ; Load 461 into I
$4C8    $77F4   ADD      V7, #F4         ; Add 244 to V7
$4CA    $58B7   UNKNOWN  $58B7           ; Unknown 5xxx instruction
$4CC    $BE27   JP       V0, $E27        ; Jump to V0 + E27
$4CE    $17B8   JP       $7B8            ; Jump to 7B8
$4D0    $EA72   UNKNOWN  $EA72           ; Unknown Exxx instruction
$4D2    $3927   SE       V9, #27         ; Skip if V9 == 39
$4D4    $F88E   UNKNOWN  F88E            ; Unknown Fxxx instruction
$4D6    $94CB   UNKNOWN  $94CB           ; Unknown 9xxx instruction
$4D8    $9785   UNKNOWN  $9785           ; Unknown 9xxx instruction
$4DA    $3E71   SE       VE, #71         ; Skip if VE == 113
$4DC    $824B   UNKNOWN  824B            ; Unknown 8xxx instruction
$4DE    $4FCF   SNE      VF, #CF         ; Skip if VF != 207
$4E0    $AF39   LD       I, $F39         ; Load F39 into I
$4E2    $D3C9   DRW      V3, VC, #9      ; Draw 9-byte sprite at V3, VC
$4E4    $2688   CALL     $688            ; Call subroutine at 688
$4E6    $B758   JP       V0, $758        ; Jump to V0 + 758
$4E8    $6EF3   LD       VE, #F3         ; Load 243 into VE
$4EA    $A1B4   LD       I, $1B4         ; Load 1B4 into I
$4EC    $D6EE   DRW      V6, VE, #E      ; Draw 14-byte sprite at V6, VE
$4EE    $A5A8   LD       I, $5A8         ; Load 5A8 into I
$4F0    $5EA0   SE       VE, VA          ; Skip if VE == VA
$4F2    $7FD2   ADD      VF, #D2         ; Add 210 to VF
$4F4    $0078   SYS      $078            ; System call to 078
$4F6    $9CCC   UNKNOWN  $9CCC           ; Unknown 9xxx instruction
$4F8    $B0CF   JP       V0, $0CF        ; Jump to V0 + 0CF
$4FA    $0588   SYS      $588            ; System call to 588
$4FC    $693B   LD       V9, #3B         ; Load 59 into V9
$4FE    $4142   SNE      V1, #42         ; Skip if V1 != 66
$500    $A26A   LD       I, $26A         ; Load 26A into I
$502    $2A52   CALL     $A52            ; Call subroutine at A52
$504    $A820   LD       I, $820         ; Load 820 into I
$506    $D614   DRW      V6, V1, #4      ; Draw 4-byte sprite at V6, V1
$508    $C002   RND      V0, #02         ; V0 = random & 02
$50A    $5DCB   UNKNOWN  $5DCB           ; Unknown 5xxx instruction
$50C    $6E97   LD       VE, #97         ; Load 151 into VE
$50E    $F076   UNKNOWN  F076            ; Unknown Fxxx instruction
$510    $A61D   LD       I, $61D         ; Load 61D into I
$512    $CDE6   RND      VD, #E6         ; VD = random & E6
$514    $9EE9   UNKNOWN  $9EE9           ; Unknown 9xxx instruction
$516    $4CE3   SNE      VC, #E3         ; Skip if VC != 227
$518    $063F   SYS      $63F            ; System call to 63F
$51A    $6384   LD       V3, #84         ; Load 132 into V3
$51C    $5D24   UNKNOWN  $5D24           ; Unknown 5xxx instruction
$51E    $531C   UNKNOWN  $531C           ; Unknown 5xxx instruction
$520    $1B5B   JP       $B5B            ; Jump to B5B
$522    $5D64   UNKNOWN  $5D64           ; Unknown 5xxx instruction
$524    $ECB4   UNKNOWN  $ECB4           ; Unknown Exxx instruction
$526    $B678   JP       V0, $678        ; Jump to V0 + 678
$528    $2C48   CALL     $C48            ; Call subroutine at C48
$52A    $6FD0   LD       VF, #D0         ; Load 208 into VF
$52C    $C58D   RND      V5, #8D         ; V5 = random & 8D
$52E    $B115   JP       V0, $115        ; Jump to V0 + 115
$530    $71DF   ADD      V1, #DF         ; Add 223 to V1
$532    $E2CE   UNKNOWN  $E2CE           ; Unknown Exxx instruction
$534    $109F   JP       $09F            ; Jump to 09F
$536    $C094   RND      V0, #94         ; V0 = random & 94
$538    $8B9A   UNKNOWN  8B9A            ; Unknown 8xxx instruction
$53A    $32A5   SE       V2, #A5         ; Skip if V2 == 165
$53C    $C538   RND      V5, #38         ; V5 = random & 38
$53E    $53EE   UNKNOWN  $53EE           ; Unknown 5xxx instruction
$540    $1C08   JP       $C08            ; Jump to C08
$542    $D239   DRW      V2, V3, #9      ; Draw 9-byte sprite at V2, V3
$544    $C085   RND      V0, #85         ; V0 = random & 85
$546    $81F7   SUBN     V1, VF          ; V1 = VF - V1, VF = !borrow
$548    $1038   JP       $038            ; Jump to 038
$54A    $EC65   UNKNOWN  $EC65           ; Unknown Exxx instruction
$54C    $FAA0   UNKNOWN  FAA0            ; Unknown Fxxx instruction
$54E    $28B4   CALL     $8B4            ; Call subroutine at 8B4
$550    $ADC7   LD       I, $DC7         ; Load DC7 into I
$552    $BA33   JP       V0, $A33        ; Jump to V0 + A33
$554    $0E00   SYS      $E00            ; System call to E00
$556    $F93B   UNKNOWN  F93B            ; Unknown Fxxx instruction
$558    $2328   CALL     $328            ; Call subroutine at 328
$55A    $E57A   UNKNOWN  $E57A           ; Unknown Exxx instruction
$55C    $B835   JP       V0, $835        ; Jump to V0 + 835
$55E    $63AA   LD       V3, #AA         ; Load 170 into V3
$560    $7321   ADD      V3, #21         ; Add 33 to V3
$562    $0107   SYS      $107            ; System call to 107
$564    $00B2   SYS      $0B2            ; System call to 0B2
$566    $5E0E   UNKNOWN  $5E0E           ; Unknown 5xxx instruction
$568    $8966   SHR      V9              ; V9 >>= 1, VF = LSB
$56A    $4AF8   SNE      VA, #F8         ; Skip if VA != 248
$56C    $69FB   LD       V9, #FB         ; Load 251 into V9
$56E    $31FD   SE       V1, #FD         ; Skip if V1 == 253
$570    $C4AF   RND      V4, #AF         ; V4 = random & AF
$572    $5656   UNKNOWN  $5656           ; Unknown 5xxx instruction
$574    $96C4   UNKNOWN  $96C4           ; Unknown 9xxx instruction
$576    $0B7A   SYS      $B7A            ; System call to B7A
$578    $2A44   CALL     $A44            ; Call subroutine at A44
$57A    $A104   LD       I, $104         ; Load 104 into I
$57C    $E973   UNKNOWN  $E973           ; Unknown Exxx instruction
$57E    $EFFD   UNKNOWN  $EFFD           ; Unknown Exxx instruction
$580    $53A1   UNKNOWN  $53A1           ; Unknown 5xxx instruction
$582    $58E7   UNKNOWN  $58E7           ; Unknown 5xxx instruction
$584    $7AE5   ADD      VA, #E5         ; Add 229 to VA
$586    $E1C6   UNKNOWN  $E1C6           ; Unknown Exxx instruction
$588    $3165   SE       V1, #65         ; Skip if V1 == 101
$58A    $1D70   JP       $D70            ; Jump to D70
$58C    $B796   JP       V0, $796        ; Jump to V0 + 796
$58E    $F660   UNKNOWN  F660            ; Unknown Fxxx instruction
$590    $B278   JP       V0, $278        ; Jump to V0 + 278
$592    $1FC5   JP       $FC5            ; Jump to FC5
$594    $5777   UNKNOWN  $5777           ; Unknown 5xxx instruction
$596    $FD0B   UNKNOWN  FD0B            ; Unknown Fxxx instruction
$598    $4B08   SNE      VB, #08         ; Skip if VB != 8
$59A    $CABD   RND      VA, #BD         ; VA = random & BD
$59C    $5645   UNKNOWN  $5645           ; Unknown 5xxx instruction
$59E    $FD78   UNKNOWN  FD78            ; Unknown Fxxx instruction
$5A0    $5E8B   UNKNOWN  $5E8B           ; Unknown 5xxx instruction
$5A2    $B116   JP       V0, $116        ; Jump to V0 + 116
$5A4    $118B   JP       $18B            ; Jump to 18B
$5A6    $2AAC   CALL     $AAC            ; Call subroutine at AAC
$5A8    $DB3C   DRW      VB, V3, #C      ; Draw 12-byte sprite at VB, V3
$5AA    $2B24   CALL     $B24            ; Call subroutine at B24
$5AC    $B618   JP       V0, $618        ; Jump to V0 + 618
$5AE    $99CF   UNKNOWN  $99CF           ; Unknown 9xxx instruction
$5B0    $2761   CALL     $761            ; Call subroutine at 761
$5B2    $78F2   ADD      V8, #F2         ; Add 242 to V8
$5B4    $2BBB   CALL     $BBB            ; Call subroutine at BBB
$5B6    $BE67   JP       V0, $E67        ; Jump to V0 + E67
$5B8    $B988   JP       V0, $988        ; Jump to V0 + 988
$5BA    $0E8B   SYS      $E8B            ; System call to E8B
$5BC    $CBD4   RND      VB, #D4         ; VB = random & D4
$5BE    $7D6D   ADD      VD, #6D         ; Add 109 to VD
$5C0    $6043   LD       V0, #43         ; Load 67 into V0
$5C2    $FD31   UNKNOWN  FD31            ; Unknown Fxxx instruction
$5C4    $054A   SYS      $54A            ; System call to 54A
$5C6    $64BA   LD       V4, #BA         ; Load 186 into V4
$5C8    $EAFB   UNKNOWN  $EAFB           ; Unknown Exxx instruction
$5CA    $E146   UNKNOWN  $E146           ; Unknown Exxx instruction
$5CC    $F315   LD       DT, V3          ; Delay timer = V3
$5CE    $A748   LD       I, $748         ; Load 748 into I
$5D0    $04CB   SYS      $4CB            ; System call to 4CB
$5D2    $63DB   LD       V3, #DB         ; Load 219 into V3
$5D4    $486B   SNE      V8, #6B         ; Skip if V8 != 107
$5D6    $F9F9   UNKNOWN  F9F9            ; Unknown Fxxx instruction
$5D8    $5C98   UNKNOWN  $5C98           ; Unknown 5xxx instruction
$5DA    $67CC   LD       V7, #CC         ; Load 204 into V7
$5DC    $C5AA   RND      V5, #AA         ; V5 = random & AA
$5DE    $8EEC   UNKNOWN  8EEC            ; Unknown 8xxx instruction
$5E0    $5D76   UNKNOWN  $5D76           ; Unknown 5xxx instruction
$5E2    $3852   SE       V8, #52         ; Skip if V8 == 82
$5E4    $0DD5   SYS      $DD5            ; System call to DD5
$5E6    $A166   LD       I, $166         ; Load 166 into I
$5E8    $47D4   SNE      V7, #D4         ; Skip if V7 != 212
$5EA    $9F4E   UNKNOWN  $9F4E           ; Unknown 9xxx instruction
$5EC    $5EFE   UNKNOWN  $5EFE           ; Unknown 5xxx instruction
$5EE    $3556   SE       V5, #56         ; Skip if V5 == 86
$5F0    $4210   SNE      V2, #10         ; Skip if V2 != 16
$5F2    $9BFF   UNKNOWN  $9BFF           ; Unknown 9xxx instruction
$5F4    $FC46   UNKNOWN  FC46            ; Unknown Fxxx instruction
$5F6    $5CE7   UNKNOWN  $5CE7           ; Unknown 5xxx instruction
$5F8    $B86D   JP       V0, $86D        ; Jump to V0 + 86D
$5FA    $C853   RND      V8, #53         ; V8 = random & 53
$5FC    $8A5E   SHL      VA              ; VA <<= 1, VF = MSB
$5FE    $948C   UNKNOWN  $948C           ; Unknown 9xxx instruction
$600    $96ED   UNKNOWN  $96ED           ; Unknown 9xxx instruction
$602    $4B2D   SNE      VB, #2D         ; Skip if VB != 45
$604    $24AF   CALL     $4AF            ; Call subroutine at 4AF
$606    $8702   AND      V7, V0          ; V7 &= V0
$608    $6B61   LD       VB, #61         ; Load 97 into VB
$60A    $3221   SE       V2, #21         ; Skip if V2 == 33
$60C    $D670   DRW      V6, V7, #0      ; Draw 0-byte sprite at V6, V7
$60E    $6136   LD       V1, #36         ; Load 54 into V1
$610    $96A0   SNE      V6, VA          ; Skip if V6 != VA
$612    $C13D   RND      V1, #3D         ; V1 = random & 3D
$614    $DFB2   DRW      VF, VB, #2      ; Draw 2-byte sprite at VF, VB
$616    $8252   AND      V2, V5          ; V2 &= V5
$618    $7961   ADD      V9, #61         ; Add 97 to V9
$61A    $F0B0   UNKNOWN  F0B0            ; Unknown Fxxx instruction
$61C    $F949   UNKNOWN  F949            ; Unknown Fxxx instruction
$61E    $F053   UNKNOWN  F053            ; Unknown Fxxx instruction
$620    $8CA4   ADD      VC, VA          ; VC += VA, VF = carry
$622    $B12F   JP       V0, $12F        ; Jump to V0 + 12F
$624    $7CAF   ADD      VC, #AF         ; Add 175 to VC
$626    $6695   LD       V6, #95         ; Load 149 into V6
$628    $6C69   LD       VC, #69         ; Load 105 into VC
$62A    $5FE8   UNKNOWN  $5FE8           ; Unknown 5xxx instruction
$62C    $F589   UNKNOWN  F589            ; Unknown Fxxx instruction
$62E    $5404   UNKNOWN  $5404           ; Unknown 5xxx instruction
$630    $C924   RND      V9, #24         ; V9 = random & 24
$632    $69E3   LD       V9, #E3         ; Load 227 into V9
$634    $A82A   LD       I, $82A         ; Load 82A into I
$636    $7EEC   ADD      VE, #EC         ; Add 236 to VE
$638    $A0AD   LD       I, $0AD         ; Load 0AD into I
$63A    $D5C1   DRW      V5, VC, #1      ; Draw 1-byte sprite at V5, VC
$63C    $55EF   UNKNOWN  $55EF           ; Unknown 5xxx instruction
$63E    $24EF   CALL     $4EF            ; Call subroutine at 4EF
$640    $32D9   SE       V2, #D9         ; Skip if V2 == 217
$642    $AFA8   LD       I, $FA8         ; Load FA8 into I
$644    $B899   JP       V0, $899        ; Jump to V0 + 899
$646    $1F04   JP       $F04            ; Jump to F04
$648    $A03C   LD       I, $03C         ; Load 03C into I
$64A    $CF49   RND      VF, #49         ; VF = random & 49
$64C    $C24D   RND      V2, #4D         ; V2 = random & 4D
$64E    $0A38   SYS      $A38            ; System call to A38
$650    $AA24   LD       I, $A24         ; Load A24 into I
$652    $CD3B   RND      VD, #3B         ; VD = random & 3B
$654    $286D   CALL     $86D            ; Call subroutine at 86D
$656    $F3E2   UNKNOWN  F3E2            ; Unknown Fxxx instruction
$658    $E248   UNKNOWN  $E248           ; Unknown Exxx instruction
$65A    $6C4D   LD       VC, #4D         ; Load 77 into VC
$65C    $9099   UNKNOWN  $9099           ; Unknown 9xxx instruction
$65E    $4F8F   SNE      VF, #8F         ; Skip if VF != 143
$660    $4A1F   SNE      VA, #1F         ; Skip if VA != 31
$662    $15BC   JP       $5BC            ; Jump to 5BC
$664    $1DFF   JP       $DFF            ; Jump to DFF
$666    $F060   UNKNOWN  F060            ; Unknown Fxxx instruction
$668    $B2CE   JP       V0, $2CE        ; Jump to V0 + 2CE
$66A    $4D64   SNE      VD, #64         ; Skip if VD != 100
$66C    $B285   JP       V0, $285        ; Jump to V0 + 285
$66E    $0753   SYS      $753            ; System call to 753
$670    $B047   JP       V0, $047        ; Jump to V0 + 047
$672    $0192   SYS      $192            ; System call to 192
$674    $0F27   SYS      $F27            ; System call to F27
$676    $D755   DRW      V7, V5, #5      ; Draw 5-byte sprite at V7, V5
$678    $9360   SNE      V3, V6          ; Skip if V3 != V6
$67A    $8682   AND      V6, V8          ; V6 &= V8
$67C    $81C7   SUBN     V1, VC          ; V1 = VC - V1, VF = !borrow
$67E    $877E   SHL      V7              ; V7 <<= 1, VF = MSB
$680    $0A09   SYS      $A09            ; System call to A09
$682    $048B   SYS      $48B            ; System call to 48B
$684    $C06E   RND      V0, #6E         ; V0 = random & 6E
$686    $DA12   DRW      VA, V1, #2      ; Draw 2-byte sprite at VA, V1
$688    $B7A4   JP       V0, $7A4        ; Jump to V0 + 7A4
$68A    $D317   DRW      V3, V1, #7      ; Draw 7-byte sprite at V3, V1
$68C    $2F99   CALL     $F99            ; Call subroutine at F99
$68E    $26B0   CALL     $6B0            ; Call subroutine at 6B0
$690    $F476   UNKNOWN  F476            ; Unknown Fxxx instruction
$692    $F5D6   UNKNOWN  F5D6            ; Unknown Fxxx instruction
$694    $0804   SYS      $804            ; System call to 804
$696    $0EA8   SYS      $EA8            ; System call to EA8
$698    $B2F1   JP       V0, $2F1        ; Jump to V0 + 2F1
$69A    $4AE3   SNE      VA, #E3         ; Skip if VA != 227
$69C    $6E5B   LD       VE, #5B         ; Load 91 into VE
$69E    $F28F   UNKNOWN  F28F            ; Unknown Fxxx instruction
$6A0    $FE94   UNKNOWN  FE94            ; Unknown Fxxx instruction
$6A2    $3DDB   SE       VD, #DB         ; Skip if VD == 219
$6A4    $22F3   CALL     $2F3            ; Call subroutine at 2F3
$6A6    $DDAC   DRW      VD, VA, #C      ; Draw 12-byte sprite at VD, VA
$6A8    $21A8   CALL     $1A8            ; Call subroutine at 1A8
$6AA    $1DA6   JP       $DA6            ; Jump to DA6
$6AC    $DBB0   DRW      VB, VB, #0      ; Draw 0-byte sprite at VB, VB
$6AE    $8B65   SUB      VB, V6          ; VB -= V6, VF = !borrow
$6B0    $A73E   LD       I, $73E         ; Load 73E into I
$6B2    $80D6   SHR      V0              ; V0 >>= 1, VF = LSB
$6B4    $439D   SNE      V3, #9D         ; Skip if V3 != 157
$6B6    $46EB   SNE      V6, #EB         ; Skip if V6 != 235
$6B8    $A9B0   LD       I, $9B0         ; Load 9B0 into I
$6BA    $4350   SNE      V3, #50         ; Skip if V3 != 80
$6BC    $F8BA   UNKNOWN  F8BA            ; Unknown Fxxx instruction
$6BE    $F5B2   UNKNOWN  F5B2            ; Unknown Fxxx instruction
$6C0    $9941   UNKNOWN  $9941           ; Unknown 9xxx instruction
$6C2    $727E   ADD      V2, #7E         ; Add 126 to V2
$6C4    $8316   SHR      V3              ; V3 >>= 1, VF = LSB
$6C6    $19FD   JP       $9FD            ; Jump to 9FD
$6C8    $BAB8   JP       V0, $AB8        ; Jump to V0 + AB8
$6CA    $C705   RND      V7, #05         ; V7 = random & 05
$6CC    $A479   LD       I, $479         ; Load 479 into I
$6CE    $A75E   LD       I, $75E         ; Load 75E into I
$6D0    $9A3E   UNKNOWN  $9A3E           ; Unknown 9xxx instruction
$6D2    $6231   LD       V2, #31         ; Load 49 into V2
$6D4    $8AC6   SHR      VA              ; VA >>= 1, VF = LSB
$6D6    $6A71   LD       VA, #71         ; Load 113 into VA
$6D8    $AF52   LD       I, $F52         ; Load F52 into I
$6DA    $C3CB   RND      V3, #CB         ; V3 = random & CB
$6DC    $520D   UNKNOWN  $520D           ; Unknown 5xxx instruction
$6DE    $C073   RND      V0, #73         ; V0 = random & 73
$6E0    $227E   CALL     $27E            ; Call subroutine at 27E
$6E2    $C26B   RND      V2, #6B         ; V2 = random & 6B
$6E4    $1AD3   JP       $AD3            ; Jump to AD3
$6E6    $FD5B   UNKNOWN  FD5B            ; Unknown Fxxx instruction
$6E8    $648D   LD       V4, #8D         ; Load 141 into V4
$6EA    $8B20   LD       VB, V2          ; VB = V2
$6EC    $3568   SE       V5, #68         ; Skip if V5 == 104
$6EE    $51C7   UNKNOWN  $51C7           ; Unknown 5xxx instruction
$6F0    $2C3D   CALL     $C3D            ; Call subroutine at C3D
$6F2    $4080   SNE      V0, #80         ; Skip if V0 != 128
$6F4    $1022   JP       $022            ; Jump to 022
$6F6    $5B09   UNKNOWN  $5B09           ; Unknown 5xxx instruction
$6F8    $8613   XOR      V6, V1          ; V6 ^= V1
$6FA    $4F2C   SNE      VF, #2C         ; Skip if VF != 44
$6FC    $3176   SE       V1, #76         ; Skip if V1 == 118
$6FE    $3EC6   SE       VE, #C6         ; Skip if VE == 198
$700    $9D28   UNKNOWN  $9D28           ; Unknown 9xxx instruction
$702    $582F   UNKNOWN  $582F           ; Unknown 5xxx instruction
$704    $8728   UNKNOWN  8728            ; Unknown 8xxx instruction
$706    $AEE3   LD       I, $EE3         ; Load EE3 into I
$708    $0A4F   SYS      $A4F            ; System call to A4F
$70A    $33C1   SE       V3, #C1         ; Skip if V3 == 193
$70C    $8E98   UNKNOWN  8E98            ; Unknown 8xxx instruction
$70E    $83C8   UNKNOWN  83C8            ; Unknown 8xxx instruction
$710    $A94E   LD       I, $94E         ; Load 94E into I
$712    $422D   SNE      V2, #2D         ; Skip if V2 != 45
$714    $6C2A   LD       VC, #2A         ; Load 42 into VC
$716    $4F73   SNE      VF, #73         ; Skip if VF != 115
$718    $C965   RND      V9, #65         ; V9 = random & 65
$71A    $4F7E   SNE      VF, #7E         ; Skip if VF != 126
$71C    $4656   SNE      V6, #56         ; Skip if V6 != 86
$71E    $4B12   SNE      VB, #12         ; Skip if VB != 18
$720    $74E9   ADD      V4, #E9         ; Add 233 to V4
$722    $7481   ADD      V4, #81         ; Add 129 to V4
$724    $B2BA   JP       V0, $2BA        ; Jump to V0 + 2BA
$726    $3835   SE       V8, #35         ; Skip if V8 == 53
$728    $AE70   LD       I, $E70         ; Load E70 into I
$72A    $B333   JP       V0, $333        ; Jump to V0 + 333
$72C    $CE18   RND      VE, #18         ; VE = random & 18
$72E    $29FF   CALL     $9FF            ; Call subroutine at 9FF
$730    $ED0D   UNKNOWN  $ED0D           ; Unknown Exxx instruction
$732    $9AD3   UNKNOWN  $9AD3           ; Unknown 9xxx instruction
$734    $BE88   JP       V0, $E88        ; Jump to V0 + E88
$736    $BD23   JP       V0, $D23        ; Jump to V0 + D23
$738    $87C3   XOR      V7, VC          ; V7 ^= VC
$73A    $7C00   ADD      VC, #00         ; Add 0 to VC
$73C    $E592   UNKNOWN  $E592           ; Unknown Exxx instruction
$73E    $7FBD   ADD      VF, #BD         ; Add 189 to VF
$740    $F4EE   UNKNOWN  F4EE            ; Unknown Fxxx instruction
$742    $05F0   SYS      $5F0            ; System call to 5F0
$744    $2EEB   CALL     $EEB            ; Call subroutine at EEB
$746    $6CB1   LD       VC, #B1         ; Load 177 into VC
$748    $A598   LD       I, $598         ; Load 598 into I
$74A    $F6AA   UNKNOWN  F6AA            ; Unknown Fxxx instruction
$74C    $4B99   SNE      VB, #99         ; Skip if VB != 153
$74E    $5A0F   UNKNOWN  $5A0F           ; Unknown 5xxx instruction
$750    $A41A   LD       I, $41A         ; Load 41A into I
$752    $9B8C   UNKNOWN  $9B8C           ; Unknown 9xxx instruction
$754    $2179   CALL     $179            ; Call subroutine at 179
$756    $B6AF   JP       V0, $6AF        ; Jump to V0 + 6AF
$758    $74DC   ADD      V4, #DC         ; Add 220 to V4
$75A    $D7FD   DRW      V7, VF, #D      ; Draw 13-byte sprite at V7, VF
$75C    $DE78   DRW      VE, V7, #8      ; Draw 8-byte sprite at VE, V7
$75E    $C050   RND      V0, #50         ; V0 = random & 50
$760    $91D3   UNKNOWN  $91D3           ; Unknown 9xxx instruction
$762    $6EAB   LD       VE, #AB         ; Load 171 into VE
$764    $D4BA   DRW      V4, VB, #A      ; Draw 10-byte sprite at V4, VB
$766    $A94F   LD       I, $94F         ; Load 94F into I
$768    $FB01   UNKNOWN  FB01            ; Unknown Fxxx instruction
$76A    $DE64   DRW      VE, V6, #4      ; Draw 4-byte sprite at VE, V6
$76C    $A091   LD       I, $091         ; Load 091 into I
$76E    $B913   JP       V0, $913        ; Jump to V0 + 913
$770    $F7AF   UNKNOWN  F7AF            ; Unknown Fxxx instruction
$772    $1118   JP       $118            ; Jump to 118
$774    $2BC4   CALL     $BC4            ; Call subroutine at BC4
$776    $8621   OR       V6, V2          ; V6 |= V2
$778    $BEBA   JP       V0, $EBA        ; Jump to V0 + EBA
$77A    $A400   LD       I, $400         ; Load 400 into I
$77C    $2088   CALL     $088            ; Call subroutine at 088
$77E    $A554   LD       I, $554         ; Load 554 into I
$780    $E753   UNKNOWN  $E753           ; Unknown Exxx instruction
$782    $D906   DRW      V9, V0, #6      ; Draw 6-byte sprite at V9, V0
$784    $0451   SYS      $451            ; System call to 451
$786    $DC80   DRW      VC, V8, #0      ; Draw 0-byte sprite at VC, V8
$788    $E782   UNKNOWN  $E782           ; Unknown Exxx instruction
$78A    $A1EA   LD       I, $1EA         ; Load 1EA into I
$78C    $2F48   CALL     $F48            ; Call subroutine at F48
$78E    $6704   LD       V7, #04         ; Load 4 into V7
$790    $5D7F   UNKNOWN  $5D7F           ; Unknown 5xxx instruction
$792    $2B8A   CALL     $B8A            ; Call subroutine at B8A
$794    $FC26   UNKNOWN  FC26            ; Unknown Fxxx instruction
$796    $B654   JP       V0, $654        ; Jump to V0 + 654
$798    $8454   ADD      V4, V5          ; V4 += V5, VF = carry
$79A    $0B7B   SYS      $B7B            ; System call to B7B
$79C    $7003   ADD      V0, #03         ; Add 3 to V0
$79E    $1C41   JP       $C41            ; Jump to C41
$7A0    $928C   UNKNOWN  $928C           ; Unknown 9xxx instruction
$7A2    $4989   SNE      V9, #89         ; Skip if V9 != 137
$7A4    $8C16   SHR      VC              ; VC >>= 1, VF = LSB
$7A6    $9FDD   UNKNOWN  $9FDD           ; Unknown 9xxx instruction
$7A8    $9845   UNKNOWN  $9845           ; Unknown 9xxx instruction
$7AA    $0236   SYS      $236            ; System call to 236
$7AC    $27FF   CALL     $7FF            ; Call subroutine at 7FF
$7AE    $6FAA   LD       VF, #AA         ; Load 170 into VF
$7B0    $8020   LD       V0, V2          ; V0 = V2
$7B2    $D00A   DRW      V0, V0, #A      ; Draw 10-byte sprite at V0, V0
$7B4    $24AF   CALL     $4AF            ; Call subroutine at 4AF
$7B6    $C097   RND      V0, #97         ; V0 = random & 97
$7B8    $B68F   JP       V0, $68F        ; Jump to V0 + 68F
$7BA    $37B9   SE       V7, #B9         ; Skip if V7 == 185
$7BC    $06D1   SYS      $6D1            ; System call to 6D1
$7BE    $FFA5   UNKNOWN  FFA5            ; Unknown Fxxx instruction
$7C0    $894B   UNKNOWN  894B            ; Unknown 8xxx instruction
$7C2    $94B1   UNKNOWN  $94B1           ; Unknown 9xxx instruction
$7C4    $7A68   ADD      VA, #68         ; Add 104 to VA
$7C6    $615E   LD       V1, #5E         ; Load 94 into V1
$7C8    $0E86   SYS      $E86            ; System call to E86
$7CA    $A66B   LD       I, $66B         ; Load 66B into I
$7CC    $CFBF   RND      VF, #BF         ; VF = random & BF
$7CE    $1141   JP       $141            ; Jump to 141
$7D0    $2F77   CALL     $F77            ; Call subroutine at F77
$7D2    $1750   JP       $750            ; Jump to 750
$7D4    $59D0   SE       V9, VD          ; Skip if V9 == VD
$7D6    $A1AE   LD       I, $1AE         ; Load 1AE into I
$7D8    $B14D   JP       V0, $14D        ; Jump to V0 + 14D
$7DA    $CEF8   RND      VE, #F8         ; VE = random & F8
$7DC    $168D   JP       $68D            ; Jump to 68D
$7DE    $5D9A   UNKNOWN  $5D9A           ; Unknown 5xxx instruction
$7E0    $ED9A   UNKNOWN  $ED9A           ; Unknown Exxx instruction
$7E2    $14DF   JP       $4DF            ; Jump to 4DF
$7E4    $4417   SNE      V4, #17         ; Skip if V4 != 23
$7E6    $539D   UNKNOWN  $539D           ; Unknown 5xxx instruction
$7E8    $732E   ADD      V3, #2E         ; Add 46 to V3
$7EA    $9DBA   UNKNOWN  $9DBA           ; Unknown 9xxx instruction
$7EC    $78E8   ADD      V8, #E8         ; Add 232 to V8
$7EE    $E1F5   UNKNOWN  $E1F5           ; Unknown Exxx instruction
$7F0    $1EEE   JP       $EEE            ; Jump to EEE
$7F2    $503F   UNKNOWN  $503F           ; Unknown 5xxx instruction
$7F4    $1BD0   JP       $BD0            ; Jump to BD0
$7F6    $7891   ADD      V8, #91         ; Add 145 to V8
$7F8    $3445   SE       V4, #45         ; Skip if V4 == 69
$7FA    $B706   JP       V0, $706        ; Jump to V0 + 706
$7FC    $D07F   DRW      V0, V7, #F      ; Draw 15-byte sprite at V0, V7
$7FE    $0BDC   SYS      $BDC            ; System call to BDC
$800    $DD7B   DRW      VD, V7, #B      ; Draw 11-byte sprite at VD, V7
$802    $4851   SNE      V8, #51         ; Skip if V8 != 81
$804    $23AE   CALL     $3AE            ; Call subroutine at 3AE
$806    $57BA   UNKNOWN  $57BA           ; Unknown 5xxx instruction
$808    $5554   UNKNOWN  $5554           ; Unknown 5xxx instruction
$80A    $12A7   JP       $2A7            ; Jump to 2A7
$80C    $FA82   UNKNOWN  FA82            ; Unknown Fxxx instruction
$80E    $6EC7   LD       VE, #C7         ; Load 199 into VE
$810    $457E   SNE      V5, #7E         ; Skip if V5 != 126
$812    $5F6D   UNKNOWN  $5F6D           ; Unknown 5xxx instruction
$814    $30DF   SE       V0, #DF         ; Skip if V0 == 223
$816    $5B83   UNKNOWN  $5B83           ; Unknown 5xxx instruction
$818    $4703   SNE      V7, #03         ; Skip if V7 != 3
$81A    $9FD4   UNKNOWN  $9FD4           ; Unknown 9xxx instruction
$81C    $0E91   SYS      $E91            ; System call to E91
$81E    $70F0   ADD      V0, #F0         ; Add 240 to V0
$820    $A5F2   LD       I, $5F2         ; Load 5F2 into I
$822    $801F   UNKNOWN  801F            ; Unknown 8xxx instruction
$824    $9742   UNKNOWN  $9742           ; Unknown 9xxx instruction
$826    $FD6D   UNKNOWN  FD6D            ; Unknown Fxxx instruction
$828    $5175   UNKNOWN  $5175           ; Unknown 5xxx instruction
$82A    $9145   UNKNOWN  $9145           ; Unknown 9xxx instruction
$82C    $C5BF   RND      V5, #BF         ; V5 = random & BF
$82E    $C2DB   RND      V2, #DB         ; V2 = random & DB
$830    $21D1   CALL     $1D1            ; Call subroutine at 1D1
$832    $3FA6   SE       VF, #A6         ; Skip if VF == 166
$834    $1662   JP       $662            ; Jump to 662
$836    $BB80   JP       V0, $B80        ; Jump to V0 + B80
$838    $F3C8   UNKNOWN  F3C8            ; Unknown Fxxx instruction
$83A    $C0B1   RND      V0, #B1         ; V0 = random & B1
$83C    $5208   UNKNOWN  $5208           ; Unknown 5xxx instruction
$83E    $3D2B   SE       VD, #2B         ; Skip if VD == 43
$840    $0C82   SYS      $C82            ; System call to C82
$842    $AB9C   LD       I, $B9C         ; Load B9C into I
$844    $02D3   SYS      $2D3            ; System call to 2D3
$846    $212A   CALL     $12A            ; Call subroutine at 12A
$848    $B828   JP       V0, $828        ; Jump to V0 + 828
$84A    $A8C4   LD       I, $8C4         ; Load 8C4 into I
$84C    $FE18   LD       ST, VE          ; Sound timer = VE
$84E    $8194   ADD      V1, V9          ; V1 += V9, VF = carry
$850    $1C73   JP       $C73            ; Jump to C73
$852    $59C2   UNKNOWN  $59C2           ; Unknown 5xxx instruction
$854    $C0CF   RND      V0, #CF         ; V0 = random & CF
$856    $CDFE   RND      VD, #FE         ; VD = random & FE
$858    $04EF   SYS      $4EF            ; System call to 4EF
$85A    $EEA4   UNKNOWN  $EEA4           ; Unknown Exxx instruction
$85C    $6933   LD       V9, #33         ; Load 51 into V9
$85E    $55E9   UNKNOWN  $55E9           ; Unknown 5xxx instruction
$860    $3B16   SE       VB, #16         ; Skip if VB == 22
$862    $A5EE   LD       I, $5EE         ; Load 5EE into I
$864    $FF8B   UNKNOWN  FF8B            ; Unknown Fxxx instruction
$866    $FB88   UNKNOWN  FB88            ; Unknown Fxxx instruction
$868    $17D8   JP       $7D8            ; Jump to 7D8
$86A    $34F8   SE       V4, #F8         ; Skip if V4 == 248
$86C    $76AF   ADD      V6, #AF         ; Add 175 to V6
$86E    $EC9C   UNKNOWN  $EC9C           ; Unknown Exxx instruction
$870    $24FC   CALL     $4FC            ; Call subroutine at 4FC
$872    $9E79   UNKNOWN  $9E79           ; Unknown 9xxx instruction
$874    $8833   XOR      V8, V3          ; V8 ^= V3
$876    $C75B   RND      V7, #5B         ; V7 = random & 5B
$878    $0AFF   SYS      $AFF            ; System call to AFF
$87A    $0628   SYS      $628            ; System call to 628
$87C    $97BC   UNKNOWN  $97BC           ; Unknown 9xxx instruction
$87E    $82AD   UNKNOWN  82AD            ; Unknown 8xxx instruction
$880    $3331   SE       V3, #31         ; Skip if V3 == 49
$882    $3332   SE       V3, #32         ; Skip if V3 == 50
$884    $78F2   ADD      V8, #F2         ; Add 242 to V8
$886    $0F05   SYS      $F05            ; System call to F05
$888    $9C14   UNKNOWN  $9C14           ; Unknown 9xxx instruction
$88A    $B959   JP       V0, $959        ; Jump to V0 + 959
$88C    $758E   ADD      V5, #8E         ; Add 142 to V5
$88E    $A5A3   LD       I, $5A3         ; Load 5A3 into I
$890    $88E7   SUBN     V8, VE          ; V8 = VE - V8, VF = !borrow
$892    $BEB4   JP       V0, $EB4        ; Jump to V0 + EB4
$894    $7890   ADD      V8, #90         ; Add 144 to V8
$896    $F8A0   UNKNOWN  F8A0            ; Unknown Fxxx instruction
$898    $1919   JP       $919            ; Jump to 919
$89A    $A7D5   LD       I, $7D5         ; Load 7D5 into I
$89C    $2C18   CALL     $C18            ; Call subroutine at C18
$89E    $2C50   CALL     $C50            ; Call subroutine at C50
$8A0    $7266   ADD      V2, #66         ; Add 102 to V2
$8A2    $0CC7   SYS      $CC7            ; System call to CC7
$8A4    $32A7   SE       V2, #A7         ; Skip if V2 == 167
$8A6    $D101   DRW      V1, V0, #1      ; Draw 1-byte sprite at V1, V0
$8A8    $8CAB   UNKNOWN  8CAB            ; Unknown 8xxx instruction
$8AA    $A488   LD       I, $488         ; Load 488 into I
$8AC    $0B4B   SYS      $B4B            ; System call to B4B
$8AE    $B19D   JP       V0, $19D        ; Jump to V0 + 19D
$8B0    $C120   RND      V1, #20         ; V1 = random & 20
$8B2    $FDF4   UNKNOWN  FDF4            ; Unknown Fxxx instruction
$8B4    $3DA8   SE       VD, #A8         ; Skip if VD == 168
$8B6    $9BC2   UNKNOWN  $9BC2           ; Unknown 9xxx instruction
$8B8    $364C   SE       V6, #4C         ; Skip if V6 == 76
$8BA    $CEE7   RND      VE, #E7         ; VE = random & E7
$8BC    $6928   LD       V9, #28         ; Load 40 into V9
$8BE    $CD97   RND      VD, #97         ; VD = random & 97
$8C0    $B45C   JP       V0, $45C        ; Jump to V0 + 45C
$8C2    $1429   JP       $429            ; Jump to 429
$8C4    $A156   LD       I, $156         ; Load 156 into I
$8C6    $BBD8   JP       V0, $BD8        ; Jump to V0 + BD8
$8C8    $8F95   SUB      VF, V9          ; VF -= V9, VF = !borrow
$8CA    $0841   SYS      $841            ; System call to 841
$8CC    $1DE0   JP       $DE0            ; Jump to DE0
$8CE    $5469   UNKNOWN  $5469           ; Unknown 5xxx instruction
$8D0    $146E   JP       $46E            ; Jump to 46E
$8D2    $6FE2   LD       VF, #E2         ; Load 226 into VF
$8D4    $E77A   UNKNOWN  $E77A           ; Unknown Exxx instruction
$8D6    $E993   UNKNOWN  $E993           ; Unknown Exxx instruction
$8D8    $02B6   SYS      $2B6            ; System call to 2B6
$8DA    $116C   JP       $16C            ; Jump to 16C
$8DC    $6114   LD       V1, #14         ; Load 20 into V1
$8DE    $2BEB   CALL     $BEB            ; Call subroutine at BEB
$8E0    $EC85   UNKNOWN  $EC85           ; Unknown Exxx instruction
$8E2    $835A   UNKNOWN  835A            ; Unknown 8xxx instruction
$8E4    $3E87   SE       VE, #87         ; Skip if VE == 135
$8E6    $F775   UNKNOWN  F775            ; Unknown Fxxx instruction
$8E8    $8E05   SUB      VE, V0          ; VE -= V0, VF = !borrow
$8EA    $CE62   RND      VE, #62         ; VE = random & 62
$8EC    $DAB7   DRW      VA, VB, #7      ; Draw 7-byte sprite at VA, VB
$8EE    $D442   DRW      V4, V4, #2      ; Draw 2-byte sprite at V4, V4
$8F0    $00C2   SYS      $0C2            ; System call to 0C2
$8F2    $2091   CALL     $091            ; Call subroutine at 091
$8F4    $FCCD   UNKNOWN  FCCD            ; Unknown Fxxx instruction
$8F6    $07DC   SYS      $7DC            ; System call to 7DC
$8F8    $D07F   DRW      V0, V7, #F      ; Draw 15-byte sprite at V0, V7
$8FA    $7212   ADD      V2, #12         ; Add 18 to V2
$8FC    $7CEB   ADD      VC, #EB         ; Add 235 to VC
$8FE    $C627   RND      V6, #27         ; V6 = random & 27
$900    $3E41   SE       VE, #41         ; Skip if VE == 65
$902    $B5A4   JP       V0, $5A4        ; Jump to V0 + 5A4
$904    $1B4C   JP       $B4C            ; Jump to B4C
$906    $5014   UNKNOWN  $5014           ; Unknown 5xxx instruction
$908    $A131   LD       I, $131         ; Load 131 into I
$90A    $DFDE   DRW      VF, VD, #E      ; Draw 14-byte sprite at VF, VD
$90C    $DF64   DRW      VF, V6, #4      ; Draw 4-byte sprite at VF, V6
$90E    $2261   CALL     $261            ; Call subroutine at 261
$910    $52BB   UNKNOWN  $52BB           ; Unknown 5xxx instruction
$912    $9D8B   UNKNOWN  $9D8B           ; Unknown 9xxx instruction
$914    $7616   ADD      V6, #16         ; Add 22 to V6
$916    $3348   SE       V3, #48         ; Skip if V3 == 72
$918    $27EA   CALL     $7EA            ; Call subroutine at 7EA
$91A    $7D9A   ADD      VD, #9A         ; Add 154 to VD
$91C    $6F90   LD       VF, #90         ; Load 144 into VF
$91E    $6237   LD       V2, #37         ; Load 55 into V2
$920    $3CE2   SE       VC, #E2         ; Skip if VC == 226
$922    $AF6B   LD       I, $F6B         ; Load F6B into I
$924    $290D   CALL     $90D            ; Call subroutine at 90D
$926    $DEF8   DRW      VE, VF, #8      ; Draw 8-byte sprite at VE, VF
$928    $27DB   CALL     $7DB            ; Call subroutine at 7DB
$92A    $4416   SNE      V4, #16         ; Skip if V4 != 22
$92C    $93A3   UNKNOWN  $93A3           ; Unknown 9xxx instruction
$92E    $7158   ADD      V1, #58         ; Add 88 to V1
$930    $E233   UNKNOWN  $E233           ; Unknown Exxx instruction
$932    $54DB   UNKNOWN  $54DB           ; Unknown 5xxx instruction
$934    $31D2   SE       V1, #D2         ; Skip if V1 == 210
$936    $5ADC   UNKNOWN  $5ADC           ; Unknown 5xxx instruction
$938    $9DE5   UNKNOWN  $9DE5           ; Unknown 9xxx instruction
$93A    $B34E   JP       V0, $34E        ; Jump to V0 + 34E
$93C    $04FB   SYS      $4FB            ; System call to 4FB
$93E    $7D3D   ADD      VD, #3D         ; Add 61 to VD
$940    $D963   DRW      V9, V6, #3      ; Draw 3-byte sprite at V9, V6
$942    $0570   SYS      $570            ; System call to 570
$944    $C6A9   RND      V6, #A9         ; V6 = random & A9
$946    $5603   UNKNOWN  $5603           ; Unknown 5xxx instruction
$948    $37E5   SE       V7, #E5         ; Skip if V7 == 229
$94A    $69EA   LD       V9, #EA         ; Load 234 into V9
$94C    $7863   ADD      V8, #63         ; Add 99 to V8
$94E    $07FD   SYS      $7FD            ; System call to 7FD
$950    $72A8   ADD      V2, #A8         ; Add 168 to V2
$952    $2603   CALL     $603            ; Call subroutine at 603
$954    $2358   CALL     $358            ; Call subroutine at 358
$956    $9F9A   UNKNOWN  $9F9A           ; Unknown 9xxx instruction
$958    $49D7   SNE      V9, #D7         ; Skip if V9 != 215
$95A    $ED3A   UNKNOWN  $ED3A           ; Unknown Exxx instruction
$95C    $8C1D   UNKNOWN  8C1D            ; Unknown 8xxx instruction
$95E    $40E6   SNE      V0, #E6         ; Skip if V0 != 230
$960    $762B   ADD      V6, #2B         ; Add 43 to V6
$962    $6C1F   LD       VC, #1F         ; Load 31 into VC
$964    $6121   LD       V1, #21         ; Load 33 into V1
$966    $C983   RND      V9, #83         ; V9 = random & 83
$968    $EFE6   UNKNOWN  $EFE6           ; Unknown Exxx instruction
$96A    $F499   UNKNOWN  F499            ; Unknown Fxxx instruction
$96C    $08CD   SYS      $8CD            ; System call to 8CD
$96E    $737A   ADD      V3, #7A         ; Add 122 to V3
$970    $B944   JP       V0, $944        ; Jump to V0 + 944
$972    $DCBF   DRW      VC, VB, #F      ; Draw 15-byte sprite at VC, VB
$974    $E338   UNKNOWN  $E338           ; Unknown Exxx instruction
$976    $9983   UNKNOWN  $9983           ; Unknown 9xxx instruction
$978    $D9F8   DRW      V9, VF, #8      ; Draw 8-byte sprite at V9, VF
$97A    $8006   SHR      V0              ; V0 >>= 1, VF = LSB
$97C    $C7C7   RND      V7, #C7         ; V7 = random & C7
$97E    $211C   CALL     $11C            ; Call subroutine at 11C
$980    $C42A   RND      V4, #2A         ; V4 = random & 2A
$982    $5A7F   UNKNOWN  $5A7F           ; Unknown 5xxx instruction
$984    $EBBF   UNKNOWN  $EBBF           ; Unknown Exxx instruction
$986    $51CA   UNKNOWN  $51CA           ; Unknown 5xxx instruction
$988    $2E71   CALL     $E71            ; Call subroutine at E71
$98A    $A72D   LD       I, $72D         ; Load 72D into I
$98C    $CDD7   RND      VD, #D7         ; VD = random & D7
$98E    $E94F   UNKNOWN  $E94F           ; Unknown Exxx instruction
$990    $9707   UNKNOWN  $9707           ; Unknown 9xxx instruction
$992    $95BD   UNKNOWN  $95BD           ; Unknown 9xxx instruction
$994    $4F45   SNE      VF, #45         ; Skip if VF != 69
$996    $4A6C   SNE      VA, #6C         ; Skip if VA != 108
$998    $792D   ADD      V9, #2D         ; Add 45 to V9
$99A    $E6A2   UNKNOWN  $E6A2           ; Unknown Exxx instruction
$99C    $A78D   LD       I, $78D         ; Load 78D into I
$99E    $55C7   UNKNOWN  $55C7           ; Unknown 5xxx instruction
$9A0    $2F2D   CALL     $F2D            ; Call subroutine at F2D
$9A2    $2BFE   CALL     $BFE            ; Call subroutine at BFE
$9A4    $81E3   XOR      V1, VE          ; V1 ^= VE
$9A6    $8B74   ADD      VB, V7          ; VB += V7, VF = carry
$9A8    $93F2   UNKNOWN  $93F2           ; Unknown 9xxx instruction
$9AA    $4D55   SNE      VD, #55         ; Skip if VD != 85
$9AC    $2905   CALL     $905            ; Call subroutine at 905
$9AE    $886E   SHL      V8              ; V8 <<= 1, VF = MSB
$9B0    $AE47   LD       I, $E47         ; Load E47 into I
$9B2    $EB5B   UNKNOWN  $EB5B           ; Unknown Exxx instruction
$9B4    $3B0A   SE       VB, #0A         ; Skip if VB == 10
$9B6    $7C50   ADD      VC, #50         ; Add 80 to VC
$9B8    $2314   CALL     $314            ; Call subroutine at 314
$9BA    $9268   UNKNOWN  $9268           ; Unknown 9xxx instruction
$9BC    $4F6E   SNE      VF, #6E         ; Skip if VF != 110
$9BE    $DA6D   DRW      VA, V6, #D      ; Draw 13-byte sprite at VA, V6
$9C0    $3552   SE       V5, #52         ; Skip if V5 == 82
$9C2    $372B   SE       V7, #2B         ; Skip if V7 == 43
$9C4    $E5EE   UNKNOWN  $E5EE           ; Unknown Exxx instruction
$9C6    $E567   UNKNOWN  $E567           ; Unknown Exxx instruction
$9C8    $A9DD   LD       I, $9DD         ; Load 9DD into I
$9CA    $D12B   DRW      V1, V2, #B      ; Draw 11-byte sprite at V1, V2
$9CC    $2BE4   CALL     $BE4            ; Call subroutine at BE4
$9CE    $42A5   SNE      V2, #A5         ; Skip if V2 != 165
$9D0    $D120   DRW      V1, V2, #0      ; Draw 0-byte sprite at V1, V2
$9D2    $2B7D   CALL     $B7D            ; Call subroutine at B7D
$9D4    $DED0   DRW      VE, VD, #0      ; Draw 0-byte sprite at VE, VD
$9D6    $5C6F   UNKNOWN  $5C6F           ; Unknown 5xxx instruction
$9D8    $2A79   CALL     $A79            ; Call subroutine at A79
$9DA    $50B9   UNKNOWN  $50B9           ; Unknown 5xxx instruction
$9DC    $57EA   UNKNOWN  $57EA           ; Unknown 5xxx instruction
$9DE    $CF1C   RND      VF, #1C         ; VF = random & 1C
$9E0    $794F   ADD      V9, #4F         ; Add 79 to V9
$9E2    $00EF   SYS      $0EF            ; System call to 0EF
$9E4    $E06A   UNKNOWN  $E06A           ; Unknown Exxx instruction
$9E6    $25A8   CALL     $5A8            ; Call subroutine at 5A8
$9E8    $98B2   UNKNOWN  $98B2           ; Unknown 9xxx instruction
$9EA    $E064   UNKNOWN  $E064           ; Unknown Exxx instruction
$9EC    $98A0   SNE      V8, VA          ; Skip if V8 != VA
$9EE    $2926   CALL     $926            ; Call subroutine at 926
$9F0    $EAB8   UNKNOWN  $EAB8           ; Unknown Exxx instruction
$9F2    $C9C9   RND      V9, #C9         ; V9 = random & C9
$9F4    $11E5   JP       $1E5            ; Jump to 1E5
$9F6    $F920   UNKNOWN  F920            ; Unknown Fxxx instruction
$9F8    $B0D8   JP       V0, $0D8        ; Jump to V0 + 0D8
$9FA    $5057   UNKNOWN  $5057           ; Unknown 5xxx instruction
$9FC    $6ED3   LD       VE, #D3         ; Load 211 into VE
$9FE    $EE8D   UNKNOWN  $EE8D           ; Unknown Exxx instruction
$A00    $D9BD   DRW      V9, VB, #D      ; Draw 13-byte sprite at V9, VB
$A02    $60FA   LD       V0, #FA         ; Load 250 into V0
$A04    $D71C   DRW      V7, V1, #C      ; Draw 12-byte sprite at V7, V1
$A06    $714A   ADD      V1, #4A         ; Add 74 to V1
$A08    $CA1F   RND      VA, #1F         ; VA = random & 1F
$A0A    $3DEC   SE       VD, #EC         ; Skip if VD == 236
$A0C    $D404   DRW      V4, V0, #4      ; Draw 4-byte sprite at V4, V0
$A0E    $707E   ADD      V0, #7E         ; Add 126 to V0
$A10    $27A9   CALL     $7A9            ; Call subroutine at 7A9
$A12    $55FE   UNKNOWN  $55FE           ; Unknown 5xxx instruction
$A14    $59D5   UNKNOWN  $59D5           ; Unknown 5xxx instruction
$A16    $CB99   RND      VB, #99         ; VB = random & 99
$A18    $E85C   UNKNOWN  $E85C           ; Unknown Exxx instruction
$A1A    $043A   SYS      $43A            ; System call to 43A
$A1C    $61D5   LD       V1, #D5         ; Load 213 into V1
$A1E    $2C5A   CALL     $C5A            ; Call subroutine at C5A
$A20    $E0BF   UNKNOWN  $E0BF           ; Unknown Exxx instruction
$A22    $FE33   LD       B, VE           ; Store BCD of VE at I, I+1, I+2
$A24    $31EF   SE       V1, #EF         ; Skip if V1 == 239
$A26    $FD69   UNKNOWN  FD69            ; Unknown Fxxx instruction
$A28    $255B   CALL     $55B            ; Call subroutine at 55B
$A2A    $6707   LD       V7, #07         ; Load 7 into V7
$A2C    $6239   LD       V2, #39         ; Load 57 into V2
$A2E    $30BB   SE       V0, #BB         ; Skip if V0 == 187
$A30    $6B1E   LD       VB, #1E         ; Load 30 into VB
$A32    $5E76   UNKNOWN  $5E76           ; Unknown 5xxx instruction
$A34    $B377   JP       V0, $377        ; Jump to V0 + 377
$A36    $BBB0   JP       V0, $BB0        ; Jump to V0 + BB0
$A38    $F7EE   UNKNOWN  F7EE            ; Unknown Fxxx instruction
$A3A    $6B19   LD       VB, #19         ; Load 25 into VB
$A3C    $9052   UNKNOWN  $9052           ; Unknown 9xxx instruction
$A3E    $57D9   UNKNOWN  $57D9           ; Unknown 5xxx instruction
$A40    $8F3C   UNKNOWN  8F3C            ; Unknown 8xxx instruction
$A42    $4FE3   SNE      VF, #E3         ; Skip if VF != 227
$A44    $405D   SNE      V0, #5D         ; Skip if V0 != 93
$A46    $54E0   SE       V4, VE          ; Skip if V4 == VE
$A48    $36A2   SE       V6, #A2         ; Skip if V6 == 162
$A4A    $90F2   UNKNOWN  $90F2           ; Unknown 9xxx instruction
$A4C    $EE89   UNKNOWN  $EE89           ; Unknown Exxx instruction
$A4E    $3C89   SE       VC, #89         ; Skip if VC == 137
$A50    $4A75   SNE      VA, #75         ; Skip if VA != 117
$A52    $00E4   SYS      $0E4            ; System call to 0E4
$A54    $B658   JP       V0, $658        ; Jump to V0 + 658
$A56    $53F8   UNKNOWN  $53F8           ; Unknown 5xxx instruction
$A58    $19A2   JP       $9A2            ; Jump to 9A2
$A5A    $B873   JP       V0, $873        ; Jump to V0 + 873
$A5C    $8DDB   UNKNOWN  8DDB            ; Unknown 8xxx instruction
$A5E    $2E01   CALL     $E01            ; Call subroutine at E01
$A60    $1977   JP       $977            ; Jump to 977
$A62    $70B0   ADD      V0, #B0         ; Add 176 to V0
$A64    $41A3   SNE      V1, #A3         ; Skip if V1 != 163
$A66    $4926   SNE      V9, #26         ; Skip if V9 != 38
$A68    $E4EA   UNKNOWN  $E4EA           ; Unknown Exxx instruction
$A6A    $4A16   SNE      VA, #16         ; Skip if VA != 22
$A6C    $A4B4   LD       I, $4B4         ; Load 4B4 into I
$A6E    $7EFA   ADD      VE, #FA         ; Add 250 to VE
$A70    $C18A   RND      V1, #8A         ; V1 = random & 8A
$A72    $F66E   UNKNOWN  F66E            ; Unknown Fxxx instruction
$A74    $40D4   SNE      V0, #D4         ; Skip if V0 != 212
$A76    $6B0F   LD       VB, #0F         ; Load 15 into VB
$A78    $4694   SNE      V6, #94         ; Skip if V6 != 148
$A7A    $F2C0   UNKNOWN  F2C0            ; Unknown Fxxx instruction
$A7C    $6E8F   LD       VE, #8F         ; Load 143 into VE
$A7E    $342C   SE       V4, #2C         ; Skip if V4 == 44
$A80    $2B2B   CALL     $B2B            ; Call subroutine at B2B
$A82    $7BE3   ADD      VB, #E3         ; Add 227 to VB
$A84    $1BA7   JP       $BA7            ; Jump to BA7
$A86    $241D   CALL     $41D            ; Call subroutine at 41D
$A88    $8ADE   SHL      VA              ; VA <<= 1, VF = MSB
$A8A    $75CC   ADD      V5, #CC         ; Add 204 to V5
$A8C    $257C   CALL     $57C            ; Call subroutine at 57C
$A8E    $E98F   UNKNOWN  $E98F           ; Unknown Exxx instruction
$A90    $D874   DRW      V8, V7, #4      ; Draw 4-byte sprite at V8, V7
$A92    $D5B1   DRW      V5, VB, #1      ; Draw 1-byte sprite at V5, VB
$A94    $267A   CALL     $67A            ; Call subroutine at 67A
$A96    $D243   DRW      V2, V4, #3      ; Draw 3-byte sprite at V2, V4
$A98    $4D00   SNE      VD, #00         ; Skip if VD != 0
$A9A    $8A8C   UNKNOWN  8A8C            ; Unknown 8xxx instruction
$A9C    $9E66   UNKNOWN  $9E66           ; Unknown 9xxx instruction
$A9E    $B1D2   JP       V0, $1D2        ; Jump to V0 + 1D2
$AA0    $66A4   LD       V6, #A4         ; Load 164 into V6
$AA2    $D45D   DRW      V4, V5, #D      ; Draw 13-byte sprite at V4, V5
$AA4    $F09A   UNKNOWN  F09A            ; Unknown Fxxx instruction
$AA6    $D178   DRW      V1, V7, #8      ; Draw 8-byte sprite at V1, V7
$AA8    $57C0   SE       V7, VC          ; Skip if V7 == VC
$AAA    $92CE   UNKNOWN  $92CE           ; Unknown 9xxx instruction
$AAC    $E8B7   UNKNOWN  $E8B7           ; Unknown Exxx instruction
$AAE    $13E1   JP       $3E1            ; Jump to 3E1
$AB0    $0206   SYS      $206            ; System call to 206
$AB2    $C28B   RND      V2, #8B         ; V2 = random & 8B
$AB4    $DC5B   DRW      VC, V5, #B      ; Draw 11-byte sprite at VC, V5
$AB6    $914A   UNKNOWN  $914A           ; Unknown 9xxx instruction
$AB8    $E3AC   UNKNOWN  $E3AC           ; Unknown Exxx instruction
$ABA    $97FF   UNKNOWN  $97FF           ; Unknown 9xxx instruction
$ABC    $620F   LD       V2, #0F         ; Load 15 into V2
$ABE    $414E   SNE      V1, #4E         ; Skip if V1 != 78
$AC0    $92DC   UNKNOWN  $92DC           ; Unknown 9xxx instruction
$AC2    $E1BC   UNKNOWN  $E1BC           ; Unknown Exxx instruction
$AC4    $76B6   ADD      V6, #B6         ; Add 182 to V6
$AC6    $6ADE   LD       VA, #DE         ; Load 222 into VA
$AC8    $F01D   UNKNOWN  F01D            ; Unknown Fxxx instruction
$ACA    $BCBD   JP       V0, $CBD        ; Jump to V0 + CBD
$ACC    $D422   DRW      V4, V2, #2      ; Draw 2-byte sprite at V4, V2
$ACE    $D872   DRW      V8, V7, #2      ; Draw 2-byte sprite at V8, V7
$AD0    $3C72   SE       VC, #72         ; Skip if VC == 114
$AD2    $26C9   CALL     $6C9            ; Call subroutine at 6C9
$AD4    $223D   CALL     $23D            ; Call subroutine at 23D
$AD6    $EEA1   SKNP     VE              ; Skip if key VE not pressed
$AD8    $A1CC   LD       I, $1CC         ; Load 1CC into I
$ADA    $6DB7   LD       VD, #B7         ; Load 183 into VD
$ADC    $28B7   CALL     $8B7            ; Call subroutine at 8B7
$ADE    $CC60   RND      VC, #60         ; VC = random & 60
$AE0    $F336   UNKNOWN  F336            ; Unknown Fxxx instruction
$AE2    $3C0D   SE       VC, #0D         ; Skip if VC == 13
$AE4    $5F13   UNKNOWN  $5F13           ; Unknown 5xxx instruction
$AE6    $A890   LD       I, $890         ; Load 890 into I
$AE8    $273D   CALL     $73D            ; Call subroutine at 73D
$AEA    $88C1   OR       V8, VC          ; V8 |= VC
$AEC    $130B   JP       $30B            ; Jump to 30B
$AEE    $7AB9   ADD      VA, #B9         ; Add 185 to VA
$AF0    $EA9B   UNKNOWN  $EA9B           ; Unknown Exxx instruction
$AF2    $8962   AND      V9, V6          ; V9 &= V6
$AF4    $6239   LD       V2, #39         ; Load 57 into V2
$AF6    $62EB   LD       V2, #EB         ; Load 235 into V2
$AF8    $FC32   UNKNOWN  FC32            ; Unknown Fxxx instruction
$AFA    $C941   RND      V9, #41         ; V9 = random & 41
$AFC    $D2CE   DRW      V2, VC, #E      ; Draw 14-byte sprite at V2, VC
$AFE    $2BEA   CALL     $BEA            ; Call subroutine at BEA
$B00    $0FF9   SYS      $FF9            ; System call to FF9
$B02    $D601   DRW      V6, V0, #1      ; Draw 1-byte sprite at V6, V0
$B04    $FA3F   UNKNOWN  FA3F            ; Unknown Fxxx instruction
$B06    $BC84   JP       V0, $C84        ; Jump to V0 + C84
$B08    $0926   SYS      $926            ; System call to 926
$B0A    $47FD   SNE      V7, #FD         ; Skip if V7 != 253
$B0C    $0ACD   SYS      $ACD            ; System call to ACD
$B0E    $B393   JP       V0, $393        ; Jump to V0 + 393
$B10    $69DD   LD       V9, #DD         ; Load 221 into V9
$B12    $31B6   SE       V1, #B6         ; Skip if V1 == 182
$B14    $3897   SE       V8, #97         ; Skip if V8 == 151
$B16    $FA3A   UNKNOWN  FA3A            ; Unknown Fxxx instruction
$B18    $E50B   UNKNOWN  $E50B           ; Unknown Exxx instruction
$B1A    $BAB6   JP       V0, $AB6        ; Jump to V0 + AB6
$B1C    $9158   UNKNOWN  $9158           ; Unknown 9xxx instruction
$B1E    $0C4C   SYS      $C4C            ; System call to C4C
$B20    $0915   SYS      $915            ; System call to 915
$B22    $3DAE   SE       VD, #AE         ; Skip if VD == 174
$B24    $BE61   JP       V0, $E61        ; Jump to V0 + E61
$B26    $7A1E   ADD      VA, #1E         ; Add 30 to VA
$B28    $732D   ADD      V3, #2D         ; Add 45 to V3
$B2A    $3926   SE       V9, #26         ; Skip if V9 == 38
$B2C    $DE7C   DRW      VE, V7, #C      ; Draw 12-byte sprite at VE, V7
$B2E    $675F   LD       V7, #5F         ; Load 95 into V7
$B30    $74F1   ADD      V4, #F1         ; Add 241 to V4
$B32    $F244   UNKNOWN  F244            ; Unknown Fxxx instruction
$B34    $461F   SNE      V6, #1F         ; Skip if V6 != 31
$B36    $1602   JP       $602            ; Jump to 602
$B38    $1702   JP       $702            ; Jump to 702
$B3A    $6BD5   LD       VB, #D5         ; Load 213 into VB
$B3C    $2DD4   CALL     $DD4            ; Call subroutine at DD4
$B3E    $8567   SUBN     V5, V6          ; V5 = V6 - V5, VF = !borrow
$B40    $8FAB   UNKNOWN  8FAB            ; Unknown 8xxx instruction
$B42    $7340   ADD      V3, #40         ; Add 64 to V3
$B44    $1694   JP       $694            ; Jump to 694
$B46    $2611   CALL     $611            ; Call subroutine at 611
$B48    $0147   SYS      $147            ; System call to 147
$B4A    $510A   UNKNOWN  $510A           ; Unknown 5xxx instruction
$B4C    $96F5   UNKNOWN  $96F5           ; Unknown 9xxx instruction
$B4E    $94EC   UNKNOWN  $94EC           ; Unknown 9xxx instruction
$B50    $83F0   LD       V3, VF          ; V3 = VF
$B52    $FA54   UNKNOWN  FA54            ; Unknown Fxxx instruction
$B54    $90D3   UNKNOWN  $90D3           ; Unknown 9xxx instruction
$B56    $3C51   SE       VC, #51         ; Skip if VC == 81
$B58    $A3A0   LD       I, $3A0         ; Load 3A0 into I
$B5A    $C79B   RND      V7, #9B         ; V7 = random & 9B
$B5C    $BE6E   JP       V0, $E6E        ; Jump to V0 + E6E
$B5E    $E33C   UNKNOWN  $E33C           ; Unknown Exxx instruction
$B60    $0A30   SYS      $A30            ; System call to A30
$B62    $B7F4   JP       V0, $7F4        ; Jump to V0 + 7F4
$B64    $304A   SE       V0, #4A         ; Skip if V0 == 74
$B66    $0D91   SYS      $D91            ; System call to D91
$B68    $819F   UNKNOWN  819F            ; Unknown 8xxx instruction
$B6A    $5886   UNKNOWN  $5886           ; Unknown 5xxx instruction
$B6C    $E19B   UNKNOWN  $E19B           ; Unknown Exxx instruction
$B6E    $CA11   RND      VA, #11         ; VA = random & 11
$B70    $DF1C   DRW      VF, V1, #C      ; Draw 12-byte sprite at VF, V1
$B72    $F248   UNKNOWN  F248            ; Unknown Fxxx instruction
$B74    $1F65   JP       $F65            ; Jump to F65
$B76    $C055   RND      V0, #55         ; V0 = random & 55
$B78    $8FE7   SUBN     VF, VE          ; VF = VE - VF, VF = !borrow
$B7A    $A36F   LD       I, $36F         ; Load 36F into I
$B7C    $B36A   JP       V0, $36A        ; Jump to V0 + 36A
$B7E    $EF52   UNKNOWN  $EF52           ; Unknown Exxx instruction
$B80    $07F0   SYS      $7F0            ; System call to 7F0
$B82    $6D83   LD       VD, #83         ; Load 131 into VD
$B84    $891E   SHL      V9              ; V9 <<= 1, VF = MSB
$B86    $54C6   UNKNOWN  $54C6           ; Unknown 5xxx instruction
$B88    $85B6   SHR      V5              ; V5 >>= 1, VF = LSB
$B8A    $6CE7   LD       VC, #E7         ; Load 231 into VC
$B8C    $E872   UNKNOWN  $E872           ; Unknown Exxx instruction
$B8E    $86E8   UNKNOWN  86E8            ; Unknown 8xxx instruction
$B90    $8DC2   AND      VD, VC          ; VD &= VC
$B92    $4CA9   SNE      VC, #A9         ; Skip if VC != 169
$B94    $B0DB   JP       V0, $0DB        ; Jump to V0 + 0DB
$B96    $2078   CALL     $078            ; Call subroutine at 078
$B98    $6F8D   LD       VF, #8D         ; Load 141 into VF
$B9A    $FBD4   UNKNOWN  FBD4            ; Unknown Fxxx instruction
$B9C    $1972   JP       $972            ; Jump to 972
$B9E    $5BE0   SE       VB, VE          ; Skip if VB == VE
$BA0    $D6B4   DRW      V6, VB, #4      ; Draw 4-byte sprite at V6, VB
$BA2    $7276   ADD      V2, #76         ; Add 118 to V2
$BA4    $790C   ADD      V9, #0C         ; Add 12 to V9
$BA6    $95ED   UNKNOWN  $95ED           ; Unknown 9xxx instruction
$BA8    $656C   LD       V5, #6C         ; Load 108 into V5
$BAA    $9AF9   UNKNOWN  $9AF9           ; Unknown 9xxx instruction
$BAC    $DE4C   DRW      VE, V4, #C      ; Draw 12-byte sprite at VE, V4
$BAE    $7DEC   ADD      VD, #EC         ; Add 236 to VD
$BB0    $5339   UNKNOWN  $5339           ; Unknown 5xxx instruction
$BB2    $6F5A   LD       VF, #5A         ; Load 90 into VF
$BB4    $38E1   SE       V8, #E1         ; Skip if V8 == 225
$BB6    $7002   ADD      V0, #02         ; Add 2 to V0
$BB8    $6E1E   LD       VE, #1E         ; Load 30 into VE
$BBA    $AC98   LD       I, $C98         ; Load C98 into I
$BBC    $1404   JP       $404            ; Jump to 404
$BBE    $C13A   RND      V1, #3A         ; V1 = random & 3A
$BC0    $5DEE   UNKNOWN  $5DEE           ; Unknown 5xxx instruction
$BC2    $87F7   SUBN     V7, VF          ; V7 = VF - V7, VF = !borrow
$BC4    $9C2D   UNKNOWN  $9C2D           ; Unknown 9xxx instruction
$BC6    $2D83   CALL     $D83            ; Call subroutine at D83
$BC8    $B483   JP       V0, $483        ; Jump to V0 + 483
$BCA    $6E74   LD       VE, #74         ; Load 116 into VE
$BCC    $0D5A   SYS      $D5A            ; System call to D5A
$BCE    $66BB   LD       V6, #BB         ; Load 187 into V6
$BD0    $ED44   UNKNOWN  $ED44           ; Unknown Exxx instruction
$BD2    $24D4   CALL     $4D4            ; Call subroutine at 4D4
$BD4    $C286   RND      V2, #86         ; V2 = random & 86
$BD6    $AD1E   LD       I, $D1E         ; Load D1E into I
$BD8    $35EA   SE       V5, #EA         ; Skip if V5 == 234
$BDA    $2B74   CALL     $B74            ; Call subroutine at B74
$BDC    $BE95   JP       V0, $E95        ; Jump to V0 + E95
$BDE    $F7DF   UNKNOWN  F7DF            ; Unknown Fxxx instruction
$BE0    $6285   LD       V2, #85         ; Load 133 into V2
$BE2    $F2EE   UNKNOWN  F2EE            ; Unknown Fxxx instruction
$BE4    $07ED   SYS      $7ED            ; System call to 7ED
$BE6    $5813   UNKNOWN  $5813           ; Unknown 5xxx instruction
$BE8    $12D0   JP       $2D0            ; Jump to 2D0
$BEA    $700A   ADD      V0, #0A         ; Add 10 to V0
$BEC    $D265   DRW      V2, V6, #5      ; Draw 5-byte sprite at V2, V6
$BEE    $BB81   JP       V0, $B81        ; Jump to V0 + B81
$BF0    $2652   CALL     $652            ; Call subroutine at 652
$BF2    $26DD   CALL     $6DD            ; Call subroutine at 6DD
$BF4    $4221   SNE      V2, #21         ; Skip if V2 != 33
$BF6    $9F64   UNKNOWN  $9F64           ; Unknown 9xxx instruction
$BF8    $B69A   JP       V0, $69A        ; Jump to V0 + 69A
$BFA    $0AC1   SYS      $AC1            ; System call to AC1
$BFC    $9402   UNKNOWN  $9402           ; Unknown 9xxx instruction
$BFE    $6538   LD       V5, #38         ; Load 56 into V5
$C00    $6050   LD       V0, #50         ; Load 80 into V0
$C02    $751E   ADD      V5, #1E         ; Add 30 to V5
$C04    $BBEC   JP       V0, $BEC        ; Jump to V0 + BEC
$C06    $A3D3   LD       I, $3D3         ; Load 3D3 into I
$C08    $8368   UNKNOWN  8368            ; Unknown 8xxx instruction
$C0A    $58DB   UNKNOWN  $58DB           ; Unknown 5xxx instruction
$C0C    $7C03   ADD      VC, #03         ; Add 3 to VC
$C0E    $3385   SE       V3, #85         ; Skip if V3 == 133
$C10    $A914   LD       I, $914         ; Load 914 into I
$C12    $FE0D   UNKNOWN  FE0D            ; Unknown Fxxx instruction
$C14    $DF7C   DRW      VF, V7, #C      ; Draw 12-byte sprite at VF, V7
$C16    $58E8   UNKNOWN  $58E8           ; Unknown 5xxx instruction
$C18    $0032   SYS      $032            ; System call to 032
$C1A    $09A6   SYS      $9A6            ; System call to 9A6
$C1C    $3C5A   SE       VC, #5A         ; Skip if VC == 90
$C1E    $8687   SUBN     V6, V8          ; V6 = V8 - V6, VF = !borrow
$C20    $FCBA   UNKNOWN  FCBA            ; Unknown Fxxx instruction
$C22    $C088   RND      V0, #88         ; V0 = random & 88
$C24    $D070   DRW      V0, V7, #0      ; Draw 0-byte sprite at V0, V7
$C26    $492A   SNE      V9, #2A         ; Skip if V9 != 42
$C28    $15B9   JP       $5B9            ; Jump to 5B9
$C2A    $A22B   LD       I, $22B         ; Load 22B into I
$C2C    $C57F   RND      V5, #7F         ; V5 = random & 7F
$C2E    $F4D5   UNKNOWN  F4D5            ; Unknown Fxxx instruction
$C30    $E011   UNKNOWN  $E011           ; Unknown Exxx instruction
$C32    $A52A   LD       I, $52A         ; Load 52A into I
$C34    $EF3E   UNKNOWN  $EF3E           ; Unknown Exxx instruction
$C36    $8B5D   UNKNOWN  8B5D            ; Unknown 8xxx instruction
$C38    $E3FD   UNKNOWN  $E3FD           ; Unknown Exxx instruction
$C3A    $447E   SNE      V4, #7E         ; Skip if V4 != 126
$C3C    $89A9   UNKNOWN  89A9            ; Unknown 8xxx instruction
$C3E    $5CDE   UNKNOWN  $5CDE           ; Unknown 5xxx instruction
$C40    $453C   SNE      V5, #3C         ; Skip if V5 != 60
$C42    $F649   UNKNOWN  F649            ; Unknown Fxxx instruction
$C44    $361C   SE       V6, #1C         ; Skip if V6 == 28
$C46    $3AFC   SE       VA, #FC         ; Skip if VA == 252
$C48    $9E4C   UNKNOWN  $9E4C           ; Unknown 9xxx instruction
$C4A    $468B   SNE      V6, #8B         ; Skip if V6 != 139
$C4C    $8A0A   UNKNOWN  8A0A            ; Unknown 8xxx instruction
$C4E    $6213   LD       V2, #13         ; Load 19 into V2
$C50    $FC22   UNKNOWN  FC22            ; Unknown Fxxx instruction
$C52    $FE3A   UNKNOWN  FE3A            ; Unknown Fxxx instruction
$C54    $4BD7   SNE      VB, #D7         ; Skip if VB != 215
$C56    $3758   SE       V7, #58         ; Skip if V7 == 88
$C58    $A001   LD       I, $001         ; Load 001 into I
$C5A    $00AE   SYS      $0AE            ; System call to 0AE
$C5C    $14C7   JP       $4C7            ; Jump to 4C7
$C5E    $E795   UNKNOWN  $E795           ; Unknown Exxx instruction
$C60    $F878   UNKNOWN  F878            ; Unknown Fxxx instruction
$C62    $EF8F   UNKNOWN  $EF8F           ; Unknown Exxx instruction
$C64    $7620   ADD      V6, #20         ; Add 32 to V6
$C66    $31F3   SE       V1, #F3         ; Skip if V1 == 243
$C68    $AB70   LD       I, $B70         ; Load B70 into I
$C6A    $A1D4   LD       I, $1D4         ; Load 1D4 into I
$C6C    $C599   RND      V5, #99         ; V5 = random & 99
$C6E    $6B5B   LD       VB, #5B         ; Load 91 into VB
$C70    $2508   CALL     $508            ; Call subroutine at 508
$C72    $D4F9   DRW      V4, VF, #9      ; Draw 9-byte sprite at V4, VF
$C74    $1BE2   JP       $BE2            ; Jump to BE2
$C76    $EB22   UNKNOWN  $EB22           ; Unknown Exxx instruction
$C78    $0D34   SYS      $D34            ; System call to D34
$C7A    $A3E4   LD       I, $3E4         ; Load 3E4 into I
$C7C    $51E4   UNKNOWN  $51E4           ; Unknown 5xxx instruction
$C7E    $C5A5   RND      V5, #A5         ; V5 = random & A5
$C80    $1A95   JP       $A95            ; Jump to A95
$C82    $4B00   SNE      VB, #00         ; Skip if VB != 0
$C84    $BC9E   JP       V0, $C9E        ; Jump to V0 + C9E
$C86    $38E7   SE       V8, #E7         ; Skip if V8 == 231
$C88    $3EE2   SE       VE, #E2         ; Skip if VE == 226
$C8A    $95B6   UNKNOWN  $95B6           ; Unknown 9xxx instruction
$C8C    $5C68   UNKNOWN  $5C68           ; Unknown 5xxx instruction
$C8E    $70CD   ADD      V0, #CD         ; Add 205 to V0
$C90    $E76B   UNKNOWN  $E76B           ; Unknown Exxx instruction
$C92    $1111   JP       $111            ; Jump to 111
$C94    $4CB3   SNE      VC, #B3         ; Skip if VC != 179
$C96    $40C6   SNE      V0, #C6         ; Skip if V0 != 198
$C98    $4AC4   SNE      VA, #C4         ; Skip if VA != 196
$C9A    $806B   UNKNOWN  806B            ; Unknown 8xxx instruction
$C9C    $943F   UNKNOWN  $943F           ; Unknown 9xxx instruction
$C9E    $DA57   DRW      VA, V5, #7      ; Draw 7-byte sprite at VA, V5
$CA0    $580F   UNKNOWN  $580F           ; Unknown 5xxx instruction
$CA2    $2E69   CALL     $E69            ; Call subroutine at E69
$CA4    $F21A   UNKNOWN  F21A            ; Unknown Fxxx instruction
$CA6    $9D11   UNKNOWN  $9D11           ; Unknown 9xxx instruction
$CA8    $5CEA   UNKNOWN  $5CEA           ; Unknown 5xxx instruction
$CAA    $6634   LD       V6, #34         ; Load 52 into V6
$CAC    $63D0   LD       V3, #D0         ; Load 208 into V3
$CAE    $0352   SYS      $352            ; System call to 352
$CB0    $8B70   LD       VB, V7          ; VB = V7
$CB2    $AC6E   LD       I, $C6E         ; Load C6E into I
$CB4    $7AA1   ADD      VA, #A1         ; Add 161 to VA
$CB6    $8251   OR       V2, V5          ; V2 |= V5
$CB8    $FC59   UNKNOWN  FC59            ; Unknown Fxxx instruction
$CBA    $1297   JP       $297            ; Jump to 297
$CBC    $E78B   UNKNOWN  $E78B           ; Unknown Exxx instruction
$CBE    $6D67   LD       VD, #67         ; Load 103 into VD
$CC0    $D95F   DRW      V9, V5, #F      ; Draw 15-byte sprite at V9, V5
$CC2    $9DC2   UNKNOWN  $9DC2           ; Unknown 9xxx instruction
$CC4    $9A84   UNKNOWN  $9A84           ; Unknown 9xxx instruction
$CC6    $823B   UNKNOWN  823B            ; Unknown 8xxx instruction
$CC8    $FD0E   UNKNOWN  FD0E            ; Unknown Fxxx instruction
$CCA    $9144   UNKNOWN  $9144           ; Unknown 9xxx instruction
$CCC    $802C   UNKNOWN  802C            ; Unknown 8xxx instruction
$CCE    $3788   SE       V7, #88         ; Skip if V7 == 136
$CD0    $B9BF   JP       V0, $9BF        ; Jump to V0 + 9BF
$CD2    $570A   UNKNOWN  $570A           ; Unknown 5xxx instruction
$CD4    $75FF   ADD      V5, #FF         ; Add 255 to V5
$CD6    $3972   SE       V9, #72         ; Skip if V9 == 114
$CD8    $8E78   UNKNOWN  8E78            ; Unknown 8xxx instruction
$CDA    $801E   SHL      V0              ; V0 <<= 1, VF = MSB
$CDC    $37FC   SE       V7, #FC         ; Skip if V7 == 252
$CDE    $9C63   UNKNOWN  $9C63           ; Unknown 9xxx instruction
$CE0    $6CE7   LD       VC, #E7         ; Load 231 into VC
$CE2    $3507   SE       V5, #07         ; Skip if V5 == 7
$CE4    $F394   UNKNOWN  F394            ; Unknown Fxxx instruction
$CE6    $0366   SYS      $366            ; System call to 366
$CE8    $FA53   UNKNOWN  FA53            ; Unknown Fxxx instruction
$CEA    $A037   LD       I, $037         ; Load 037 into I
$CEC    $9D3E   UNKNOWN  $9D3E           ; Unknown 9xxx instruction
$CEE    $7C95   ADD      VC, #95         ; Add 149 to VC
$CF0    $B32C   JP       V0, $32C        ; Jump to V0 + 32C
$CF2    $AB9A   LD       I, $B9A         ; Load B9A into I
$CF4    $2F1E   CALL     $F1E            ; Call subroutine at F1E
$CF6    $EA16   UNKNOWN  $EA16           ; Unknown Exxx instruction
$CF8    $252D   CALL     $52D            ; Call subroutine at 52D
$CFA    $BB65   JP       V0, $B65        ; Jump to V0 + B65
$CFC    $0ED0   SYS      $ED0            ; System call to ED0
$CFE    $CBD2   RND      VB, #D2         ; VB = random & D2
$D00    $3F02   SE       VF, #02         ; Skip if VF == 2
$D02    $B3CE   JP       V0, $3CE        ; Jump to V0 + 3CE
$D04    $7F17   ADD      VF, #17         ; Add 23 to VF
$D06    $19E3   JP       $9E3            ; Jump to 9E3
$D08    $A7CE   LD       I, $7CE         ; Load 7CE into I
$D0A    $ECFA   UNKNOWN  $ECFA           ; Unknown Exxx instruction
$D0C    $D51F   DRW      V5, V1, #F      ; Draw 15-byte sprite at V5, V1
$D0E    $03CA   SYS      $3CA            ; System call to 3CA
$D10    $7EC1   ADD      VE, #C1         ; Add 193 to VE
$D12    $23B2   CALL     $3B2            ; Call subroutine at 3B2
$D14    $3165   SE       V1, #65         ; Skip if V1 == 101
$D16    $4669   SNE      V6, #69         ; Skip if V6 != 105
$D18    $4BB9   SNE      VB, #B9         ; Skip if VB != 185
$D1A    $0B7F   SYS      $B7F            ; System call to B7F
$D1C    $3D7F   SE       VD, #7F         ; Skip if VD == 127
$D1E    $008C   SYS      $08C            ; System call to 08C
$D20    $E129   UNKNOWN  $E129           ; Unknown Exxx instruction
$D22    $DE7C   DRW      VE, V7, #C      ; Draw 12-byte sprite at VE, V7
$D24    $FCD9   UNKNOWN  FCD9            ; Unknown Fxxx instruction
$D26    $8E19   UNKNOWN  8E19            ; Unknown 8xxx instruction
$D28    $BBAC   JP       V0, $BAC        ; Jump to V0 + BAC
$D2A    $1FD0   JP       $FD0            ; Jump to FD0
$D2C    $F9A5   UNKNOWN  F9A5            ; Unknown Fxxx instruction
$D2E    $94C1   UNKNOWN  $94C1           ; Unknown 9xxx instruction
$D30    $D7C3   DRW      V7, VC, #3      ; Draw 3-byte sprite at V7, VC
$D32    $1848   JP       $848            ; Jump to 848
$D34    $12B3   JP       $2B3            ; Jump to 2B3
$D36    $3C46   SE       VC, #46         ; Skip if VC == 70
$D38    $88FE   SHL      V8              ; V8 <<= 1, VF = MSB
$D3A    $4A1E   SNE      VA, #1E         ; Skip if VA != 30
$D3C    $8F09   UNKNOWN  8F09            ; Unknown 8xxx instruction
$D3E    $41EF   SNE      V1, #EF         ; Skip if V1 != 239
$D40    $6ECE   LD       VE, #CE         ; Load 206 into VE
$D42    $4414   SNE      V4, #14         ; Skip if V4 != 20
$D44    $B803   JP       V0, $803        ; Jump to V0 + 803
$D46    $8CB2   AND      VC, VB          ; VC &= VB
$D48    $85E8   UNKNOWN  85E8            ; Unknown 8xxx instruction
$D4A    $F731   UNKNOWN  F731            ; Unknown Fxxx instruction
$D4C    $6EDE   LD       VE, #DE         ; Load 222 into VE
$D4E    $CA52   RND      VA, #52         ; VA = random & 52
$D50    $D30B   DRW      V3, V0, #B      ; Draw 11-byte sprite at V3, V0
$D52    $F02D   UNKNOWN  F02D            ; Unknown Fxxx instruction
$D54    $00BD   SYS      $0BD            ; System call to 0BD
$D56    $0D79   SYS      $D79            ; System call to D79
$D58    $A875   LD       I, $875         ; Load 875 into I
$D5A    $9456   UNKNOWN  $9456           ; Unknown 9xxx instruction
$D5C    $75BF   ADD      V5, #BF         ; Add 191 to V5
$D5E    $4D2E   SNE      VD, #2E         ; Skip if VD != 46
$D60    $B0A4   JP       V0, $0A4        ; Jump to V0 + 0A4
$D62    $054D   SYS      $54D            ; System call to 54D
$D64    $8EAF   UNKNOWN  8EAF            ; Unknown 8xxx instruction
$D66    $E9F3   UNKNOWN  $E9F3           ; Unknown Exxx instruction
$D68    $F461   UNKNOWN  F461            ; Unknown Fxxx instruction
$D6A    $45DB   SNE      V5, #DB         ; Skip if V5 != 219
$D6C    $173C   JP       $73C            ; Jump to 73C
$D6E    $B9E3   JP       V0, $9E3        ; Jump to V0 + 9E3
$D70    $EC4A   UNKNOWN  $EC4A           ; Unknown Exxx instruction
$D72    $83E5   SUB      V3, VE          ; V3 -= VE, VF = !borrow
$D74    $4715   SNE      V7, #15         ; Skip if V7 != 21
$D76    $7956   ADD      V9, #56         ; Add 86 to V9
$D78    $CB69   RND      VB, #69         ; VB = random & 69
$D7A    $23F8   CALL     $3F8            ; Call subroutine at 3F8
$D7C    $598C   UNKNOWN  $598C           ; Unknown 5xxx instruction
$D7E    $E63F   UNKNOWN  $E63F           ; Unknown Exxx instruction
$D80    $BF1A   JP       V0, $F1A        ; Jump to V0 + F1A
$D82    $5768   UNKNOWN  $5768           ; Unknown 5xxx instruction
$D84    $AB8F   LD       I, $B8F         ; Load B8F into I
$D86    $00DD   SYS      $0DD            ; System call to 0DD
$D88    $FB3D   UNKNOWN  FB3D            ; Unknown Fxxx instruction
$D8A    $3B04   SE       VB, #04         ; Skip if VB == 4
$D8C    $BDCD   JP       V0, $DCD        ; Jump to V0 + DCD
$D8E    $068A   SYS      $68A            ; System call to 68A
$D90    $F4D6   UNKNOWN  F4D6            ; Unknown Fxxx instruction
$D92    $E28F   UNKNOWN  $E28F           ; Unknown Exxx instruction
$D94    $3D7D   SE       VD, #7D         ; Skip if VD == 125
$D96    $5404   UNKNOWN  $5404           ; Unknown 5xxx instruction
$D98    $D549   DRW      V5, V4, #9      ; Draw 9-byte sprite at V5, V4
$D9A    $0D2D   SYS      $D2D            ; System call to D2D
$D9C    $E8B8   UNKNOWN  $E8B8           ; Unknown Exxx instruction
$D9E    $1F41   JP       $F41            ; Jump to F41
$DA0    $C49C   RND      V4, #9C         ; V4 = random & 9C
$DA2    $6512   LD       V5, #12         ; Load 18 into V5
$DA4    $38C8   SE       V8, #C8         ; Skip if V8 == 200
$DA6    $AD3A   LD       I, $D3A         ; Load D3A into I
$DA8    $3879   SE       V8, #79         ; Skip if V8 == 121
$DAA    $7808   ADD      V8, #08         ; Add 8 to V8
$DAC    $EDD8   UNKNOWN  $EDD8           ; Unknown Exxx instruction
$DAE    $ADF3   LD       I, $DF3         ; Load DF3 into I
$DB0    $CA0F   RND      VA, #0F         ; VA = random & 0F
$DB2    $0C02   SYS      $C02            ; System call to C02
$DB4    $9DF0   SNE      VD, VF          ; Skip if VD != VF
$DB6    $5E18   UNKNOWN  $5E18           ; Unknown 5xxx instruction
$DB8    $3FC3   SE       VF, #C3         ; Skip if VF == 195
$DBA    $8582   AND      V5, V8          ; V5 &= V8
$DBC    $CCA2   RND      VC, #A2         ; VC = random & A2
$DBE    $8934   ADD      V9, V3          ; V9 += V3, VF = carry
$DC0    $EF69   UNKNOWN  $EF69           ; Unknown Exxx instruction
$DC2    $3AD7   SE       VA, #D7         ; Skip if VA == 215
$DC4    $D64B   DRW      V6, V4, #B      ; Draw 11-byte sprite at V6, V4
$DC6    $B349   JP       V0, $349        ; Jump to V0 + 349
$DC8    $BC14   JP       V0, $C14        ; Jump to V0 + C14
$DCA    $EE89   UNKNOWN  $EE89           ; Unknown Exxx instruction
$DCC    $C0F4   RND      V0, #F4         ; V0 = random & F4
$DCE    $7A94   ADD      VA, #94         ; Add 148 to VA
$DD0    $A66B   LD       I, $66B         ; Load 66B into I
$DD2    $E56E   UNKNOWN  $E56E           ; Unknown Exxx instruction
$DD4    $7CA8   ADD      VC, #A8         ; Add 168 to VC
$DD6    $E123   UNKNOWN  $E123           ; Unknown Exxx instruction
$DD8    $9378   UNKNOWN  $9378           ; Unknown 9xxx instruction
$DDA    $DBF9   DRW      VB, VF, #9      ; Draw 9-byte sprite at VB, VF
$DDC    $BC6C   JP       V0, $C6C        ; Jump to V0 + C6C
$DDE    $613B   LD       V1, #3B         ; Load 59 into V1
$DE0    $361D   SE       V6, #1D         ; Skip if V6 == 29
$DE2    $2B2B   CALL     $B2B            ; Call subroutine at B2B
$DE4    $6763   LD       V7, #63         ; Load 99 into V7
$DE6    $080A   SYS      $80A            ; System call to 80A
$DE8    $5DBF   UNKNOWN  $5DBF           ; Unknown 5xxx instruction
$DEA    $1004   JP       $004            ; Jump to 004
$DEC    $8403   XOR      V4, V0          ; V4 ^= V0
$DEE    $CD98   RND      VD, #98         ; VD = random & 98
$DF0    $7E14   ADD      VE, #14         ; Add 20 to VE
$DF2    $F9F2   UNKNOWN  F9F2            ; Unknown Fxxx instruction
$DF4    $53E5   UNKNOWN  $53E5           ; Unknown 5xxx instruction
$DF6    $19F5   JP       $9F5            ; Jump to 9F5
$DF8    $F43D   UNKNOWN  F43D            ; Unknown Fxxx instruction
$DFA    $0161   SYS      $161            ; System call to 161
$DFC    $BCBC   JP       V0, $CBC        ; Jump to V0 + CBC
$DFE    $77C6   ADD      V7, #C6         ; Add 198 to V7
$E00    $7D51   ADD      VD, #51         ; Add 81 to VD
$E02    $0EB8   SYS      $EB8            ; System call to EB8
$E04    $2EDB   CALL     $EDB            ; Call subroutine at EDB
$E06    $5E0E   UNKNOWN  $5E0E           ; Unknown 5xxx instruction
$E08    $5543   UNKNOWN  $5543           ; Unknown 5xxx instruction
$E0A    $1B3C   JP       $B3C            ; Jump to B3C
$E0C    $2DFF   CALL     $DFF            ; Call subroutine at DFF
$E0E    $3912   SE       V9, #12         ; Skip if V9 == 18
$E10    $8D33   XOR      VD, V3          ; VD ^= V3
$E12    $E384   UNKNOWN  $E384           ; Unknown Exxx instruction
$E14    $6363   LD       V3, #63         ; Load 99 into V3
$E16    $6564   LD       V5, #64         ; Load 100 into V5
$E18    $76AD   ADD      V6, #AD         ; Add 173 to V6
$E1A    $1C8F   JP       $C8F            ; Jump to C8F
$E1C    $340C   SE       V4, #0C         ; Skip if V4 == 12
$E1E    $7DD2   ADD      VD, #D2         ; Add 210 to VD
$E20    $2E92   CALL     $E92            ; Call subroutine at E92
$E22    $4EDF   SNE      VE, #DF         ; Skip if VE != 223
$E24    $2D25   CALL     $D25            ; Call subroutine at D25
$E26    $8C52   AND      VC, V5          ; VC &= V5
$E28    $EB03   UNKNOWN  $EB03           ; Unknown Exxx instruction
$E2A    $8432   AND      V4, V3          ; V4 &= V3
$E2C    $FF77   UNKNOWN  FF77            ; Unknown Fxxx instruction
$E2E    $B89D   JP       V0, $89D        ; Jump to V0 + 89D
$E30    $3443   SE       V4, #43         ; Skip if V4 == 67
$E32    $84C1   OR       V4, VC          ; V4 |= VC
$E34    $A1AE   LD       I, $1AE         ; Load 1AE into I
$E36    $5A24   UNKNOWN  $5A24           ; Unknown 5xxx instruction
$E38    $23D0   CALL     $3D0            ; Call subroutine at 3D0
$E3A    $AED2   LD       I, $ED2         ; Load ED2 into I
$E3C    $4DB5   SNE      VD, #B5         ; Skip if VD != 181
$E3E    $8ED5   SUB      VE, VD          ; VE -= VD, VF = !borrow
$E40    $24C8   CALL     $4C8            ; Call subroutine at 4C8
$E42    $783E   ADD      V8, #3E         ; Add 62 to V8
$E44    $C9A7   RND      V9, #A7         ; V9 = random & A7
$E46    $C37D   RND      V3, #7D         ; V3 = random & 7D
$E48    $A18B   LD       I, $18B         ; Load 18B into I
$E4A    $BD56   JP       V0, $D56        ; Jump to V0 + D56
$E4C    $D010   DRW      V0, V1, #0      ; Draw 0-byte sprite at V0, V1
$E4E    $0ED0   SYS      $ED0            ; System call to ED0
$E50    $820E   SHL      V2              ; V2 <<= 1, VF = MSB
$E52    $44D8   SNE      V4, #D8         ; Skip if V4 != 216
$E54    $0FA5   SYS      $FA5            ; System call to FA5
$E56    $B7C6   JP       V0, $7C6        ; Jump to V0 + 7C6
$E58    $58A0   SE       V8, VA          ; Skip if V8 == VA
$E5A    $33AD   SE       V3, #AD         ; Skip if V3 == 173
$E5C    $9995   UNKNOWN  $9995           ; Unknown 9xxx instruction
$E5E    $3207   SE       V2, #07         ; Skip if V2 == 7
$E60    $6223   LD       V2, #23         ; Load 35 into V2
$E62    $D167   DRW      V1, V6, #7      ; Draw 7-byte sprite at V1, V6
$E64    $A381   LD       I, $381         ; Load 381 into I
$E66    $E9B9   UNKNOWN  $E9B9           ; Unknown Exxx instruction
$E68    $5924   UNKNOWN  $5924           ; Unknown 5xxx instruction
$E6A    $AD83   LD       I, $D83         ; Load D83 into I
$E6C    $93EE   UNKNOWN  $93EE           ; Unknown 9xxx instruction
$E6E    $D5D7   DRW      V5, VD, #7      ; Draw 7-byte sprite at V5, VD
$E70    $DAC7   DRW      VA, VC, #7      ; Draw 7-byte sprite at VA, VC
$E72    $0603   SYS      $603            ; System call to 603
$E74    $5E07   UNKNOWN  $5E07           ; Unknown 5xxx instruction
$E76    $2581   CALL     $581            ; Call subroutine at 581
$E78    $30CB   SE       V0, #CB         ; Skip if V0 == 203
$E7A    $65E8   LD       V5, #E8         ; Load 232 into V5
$E7C    $2687   CALL     $687            ; Call subroutine at 687
$E7E    $0B0D   SYS      $B0D            ; System call to B0D
$E80    $B493   JP       V0, $493        ; Jump to V0 + 493
$E82    $F0E1   UNKNOWN  F0E1            ; Unknown Fxxx instruction
$E84    $67E3   LD       V7, #E3         ; Load 227 into V7
$E86    $A0AC   LD       I, $0AC         ; Load 0AC into I
$E88    $FA4D   UNKNOWN  FA4D            ; Unknown Fxxx instruction
$E8A    $93F7   UNKNOWN  $93F7           ; Unknown 9xxx instruction
$E8C    $8A68   UNKNOWN  8A68            ; Unknown 8xxx instruction
$E8E    $E804   UNKNOWN  $E804           ; Unknown Exxx instruction
$E90    $BDBE   JP       V0, $DBE        ; Jump to V0 + DBE
$E92    $DD34   DRW      VD, V3, #4      ; Draw 4-byte sprite at VD, V3
$E94    $7E44   ADD      VE, #44         ; Add 68 to VE
$E96    $4BD8   SNE      VB, #D8         ; Skip if VB != 216
$E98    $9C5B   UNKNOWN  $9C5B           ; Unknown 9xxx instruction
$E9A    $86F0   LD       V6, VF          ; V6 = VF
$E9C    $3849   SE       V8, #49         ; Skip if V8 == 73
$E9E    $740D   ADD      V4, #0D         ; Add 13 to V4
$EA0    $5F19   UNKNOWN  $5F19           ; Unknown 5xxx instruction
$EA2    $84E8   UNKNOWN  84E8            ; Unknown 8xxx instruction
$EA4    $30FA   SE       V0, #FA         ; Skip if V0 == 250
$EA6    $ADF5   LD       I, $DF5         ; Load DF5 into I
$EA8    $0D41   SYS      $D41            ; System call to D41
$EAA    $D47D   DRW      V4, V7, #D      ; Draw 13-byte sprite at V4, V7
$EAC    $603D   LD       V0, #3D         ; Load 61 into V0
$EAE    $E574   UNKNOWN  $E574           ; Unknown Exxx instruction
$EB0    $0FE5   SYS      $FE5            ; System call to FE5
$EB2    $68CF   LD       V8, #CF         ; Load 207 into V8
$EB4    $EB44   UNKNOWN  $EB44           ; Unknown Exxx instruction
$EB6    $4A2D   SNE      VA, #2D         ; Skip if VA != 45
$EB8    $6CBE   LD       VC, #BE         ; Load 190 into VC
$EBA    $E1ED   UNKNOWN  $E1ED           ; Unknown Exxx instruction
$EBC    $315C   SE       V1, #5C         ; Skip if V1 == 92
$EBE    $147D   JP       $47D            ; Jump to 47D
$EC0    $776C   ADD      V7, #6C         ; Add 108 to V7
$EC2    $617A   LD       V1, #7A         ; Load 122 into V1
$EC4    $018F   SYS      $18F            ; System call to 18F
$EC6    $056E   SYS      $56E            ; System call to 56E
$EC8    $00D9   SYS      $0D9            ; System call to 0D9
$ECA    $A8F0   LD       I, $8F0         ; Load 8F0 into I
$ECC    $5534   UNKNOWN  $5534           ; Unknown 5xxx instruction
$ECE    $3EC1   SE       VE, #C1         ; Skip if VE == 193
$ED0    $91B3   UNKNOWN  $91B3           ; Unknown 9xxx instruction
$ED2    $59C0   SE       V9, VC          ; Skip if V9 == VC
$ED4    $CCB3   RND      VC, #B3         ; VC = random & B3
$ED6    $CFE1   RND      VF, #E1         ; VF = random & E1
$ED8    $A450   LD       I, $450         ; Load 450 into I
$EDA    $AF09   LD       I, $F09         ; Load F09 into I
$EDC    $C509   RND      V5, #09         ; V5 = random & 09
$EDE    $5CE5   UNKNOWN  $5CE5           ; Unknown 5xxx instruction
$EE0    $D10D   DRW      V1, V0, #D      ; Draw 13-byte sprite at V1, V0
$EE2    $A443   LD       I, $443         ; Load 443 into I
$EE4    $BA7A   JP       V0, $A7A        ; Jump to V0 + A7A
$EE6    $79CA   ADD      V9, #CA         ; Add 202 to V9
$EE8    $7175   ADD      V1, #75         ; Add 117 to V1
$EEA    $7F1E   ADD      VF, #1E         ; Add 30 to VF
$EEC    $8FBC   UNKNOWN  8FBC            ; Unknown 8xxx instruction
$EEE    $FF45   UNKNOWN  FF45            ; Unknown Fxxx instruction
$EF0    $1EDC   JP       $EDC            ; Jump to EDC
$EF2    $13BA   JP       $3BA            ; Jump to 3BA
$EF4    $3FA4   SE       VF, #A4         ; Skip if VF == 164
$EF6    $CAFA   RND      VA, #FA         ; VA = random & FA
$EF8    $56DC   UNKNOWN  $56DC           ; Unknown 5xxx instruction
$EFA    $D5E8   DRW      V5, VE, #8      ; Draw 8-byte sprite at V5, VE
$EFC    $A716   LD       I, $716         ; Load 716 into I
$EFE    $45E3   SNE      V5, #E3         ; Skip if V5 != 227
$F00    $3CDC   SE       VC, #DC         ; Skip if VC == 220
$F02    $168D   JP       $68D            ; Jump to 68D
$F04    $6A29   LD       VA, #29         ; Load 41 into VA
$F06    $A3D3   LD       I, $3D3         ; Load 3D3 into I
$F08    $8540   LD       V5, V4          ; V5 = V4
$F0A    $5536   UNKNOWN  $5536           ; Unknown 5xxx instruction
$F0C    $5CA4   UNKNOWN  $5CA4           ; Unknown 5xxx instruction
$F0E    $4A90   SNE      VA, #90         ; Skip if VA != 144
$F10    $FD62   UNKNOWN  FD62            ; Unknown Fxxx instruction
$F12    $4576   SNE      V5, #76         ; Skip if V5 != 118
$F14    $693D   LD       V9, #3D         ; Load 61 into V9
$F16    $D3B5   DRW      V3, VB, #5      ; Draw 5-byte sprite at V3, VB
$F18    $AAEB   LD       I, $AEB         ; Load AEB into I
$F1A    $47C0   SNE      V7, #C0         ; Skip if V7 != 192
$F1C    $383A   SE       V8, #3A         ; Skip if V8 == 58
$F1E    $3DA0   SE       VD, #A0         ; Skip if VD == 160
$F20    $2C75   CALL     $C75            ; Call subroutine at C75
$F22    $28E4   CALL     $8E4            ; Call subroutine at 8E4
$F24    $2401   CALL     $401            ; Call subroutine at 401
$F26    $5890   SE       V8, V9          ; Skip if V8 == V9
$F28    $8ADC   UNKNOWN  8ADC            ; Unknown 8xxx instruction
$F2A    $3506   SE       V5, #06         ; Skip if V5 == 6
$F2C    $8950   LD       V9, V5          ; V9 = V5
$F2E    $DB29   DRW      VB, V2, #9      ; Draw 9-byte sprite at VB, V2
$F30    $A11F   LD       I, $11F         ; Load 11F into I
$F32    $DB36   DRW      VB, V3, #6      ; Draw 6-byte sprite at VB, V3
$F34    $5BD5   UNKNOWN  $5BD5           ; Unknown 5xxx instruction
$F36    $56C0   SE       V6, VC          ; Skip if V6 == VC
$F38    $3402   SE       V4, #02         ; Skip if V4 == 2
$F3A    $9CD4   UNKNOWN  $9CD4           ; Unknown 9xxx instruction
$F3C    $0C92   SYS      $C92            ; System call to C92
$F3E    $1116   JP       $116            ; Jump to 116
$F40    $9F69   UNKNOWN  $9F69           ; Unknown 9xxx instruction
$F42    $DDB7   DRW      VD, VB, #7      ; Draw 7-byte sprite at VD, VB
$F44    $B7EE   JP       V0, $7EE        ; Jump to V0 + 7EE
$F46    $AB87   LD       I, $B87         ; Load B87 into I
$F48    $E10E   UNKNOWN  $E10E           ; Unknown Exxx instruction
$F4A    $691A   LD       V9, #1A         ; Load 26 into V9
$F4C    $E7E6   UNKNOWN  $E7E6           ; Unknown Exxx instruction
$F4E    $8408   UNKNOWN  8408            ; Unknown 8xxx instruction
$F50    $F718   LD       ST, V7          ; Sound timer = V7
$F52    $EF45   UNKNOWN  $EF45           ; Unknown Exxx instruction
$F54    $FC2A   UNKNOWN  FC2A            ; Unknown Fxxx instruction
$F56    $4892   SNE      V8, #92         ; Skip if V8 != 146
$F58    $FB25   UNKNOWN  FB25            ; Unknown Fxxx instruction
$F5A    $D559   DRW      V5, V5, #9      ; Draw 9-byte sprite at V5, V5
$F5C    $0872   SYS      $872            ; System call to 872
$F5E    $12A2   JP       $2A2            ; Jump to 2A2
$F60    $FF8E   UNKNOWN  FF8E            ; Unknown Fxxx instruction
$F62    $E420   UNKNOWN  $E420           ; Unknown Exxx instruction
$F64    $E07F   UNKNOWN  $E07F           ; Unknown Exxx instruction
$F66    $995D   UNKNOWN  $995D           ; Unknown 9xxx instruction
$F68    $AF36   LD       I, $F36         ; Load F36 into I
$F6A    $E9F4   UNKNOWN  $E9F4           ; Unknown Exxx instruction
$F6C    $63ED   LD       V3, #ED         ; Load 237 into V3
$F6E    $E3B5   UNKNOWN  $E3B5           ; Unknown Exxx instruction
$F70    $CF31   RND      VF, #31         ; VF = random & 31
$F72    $7D3D   ADD      VD, #3D         ; Add 61 to VD
$F74    $596F   UNKNOWN  $596F           ; Unknown 5xxx instruction
$F76    $280D   CALL     $80D            ; Call subroutine at 80D
$F78    $1199   JP       $199            ; Jump to 199
$F7A    $D991   DRW      V9, V9, #1      ; Draw 1-byte sprite at V9, V9
$F7C    $E14A   UNKNOWN  $E14A           ; Unknown Exxx instruction
$F7E    $8CB2   AND      VC, VB          ; VC &= VB
$F80    $9CB2   UNKNOWN  $9CB2           ; Unknown 9xxx instruction
$F82    $7A6B   ADD      VA, #6B         ; Add 107 to VA
$F84    $7D67   ADD      VD, #67         ; Add 103 to VD
$F86    $AB6E   LD       I, $B6E         ; Load B6E into I
$F88    $AC4B   LD       I, $C4B         ; Load C4B into I
$F8A    $4A34   SNE      VA, #34         ; Skip if VA != 52
$F8C    $FEC6   UNKNOWN  FEC6            ; Unknown Fxxx instruction
$F8E    $0109   SYS      $109            ; System call to 109
$F90    $27F7   CALL     $7F7            ; Call subroutine at 7F7
$F92    $C2D6   RND      V2, #D6         ; V2 = random & D6
$F94    $CBBE   RND      VB, #BE         ; VB = random & BE
$F96    $657A   LD       V5, #7A         ; Load 122 into V5
$F98    $FB7F   UNKNOWN  FB7F            ; Unknown Fxxx instruction
$F9A    $B760   JP       V0, $760        ; Jump to V0 + 760
$F9C    $FA2D   UNKNOWN  FA2D            ; Unknown Fxxx instruction
$F9E    $6E84   LD       VE, #84         ; Load 132 into VE
$FA0    $EB57   UNKNOWN  $EB57           ; Unknown Exxx instruction
$FA2    $AB31   LD       I, $B31         ; Load B31 into I
$FA4    $C51B   RND      V5, #1B         ; V5 = random & 1B
$FA6    $B192   JP       V0, $192        ; Jump to V0 + 192
$FA8    $25E6   CALL     $5E6            ; Call subroutine at 5E6
$FAA    $A4A0   LD       I, $4A0         ; Load 4A0 into I
$FAC    $1331   JP       $331            ; Jump to 331
$FAE    $B059   JP       V0, $059        ; Jump to V0 + 059
$FB0    $2449   CALL     $449            ; Call subroutine at 449
$FB2    $2D02   CALL     $D02            ; Call subroutine at D02
$FB4    $C226   RND      V2, #26         ; V2 = random & 26
$FB6    $14FD   JP       $4FD            ; Jump to 4FD
$FB8    $38A4   SE       V8, #A4         ; Skip if V8 == 164
$FBA    $744D   ADD      V4, #4D         ; Add 77 to V4
$FBC    $10E2   JP       $0E2            ; Jump to 0E2
$FBE    $76A8   ADD      V6, #A8         ; Add 168 to V6
$FC0    $3D70   SE       VD, #70         ; Skip if VD == 112
$FC2    $DFED   DRW      VF, VE, #D      ; Draw 13-byte sprite at VF, VE
$FC4    $AB87   LD       I, $B87         ; Load B87 into I
$FC6    $44E7   SNE      V4, #E7         ; Skip if V4 != 231
$FC8    $5627   UNKNOWN  $5627           ; Unknown 5xxx instruction
$FCA    $840E   SHL      V4              ; V4 <<= 1, VF = MSB
$FCC    $D5D5   DRW      V5, VD, #5      ; Draw 5-byte sprite at V5, VD
$FCE    $4A6D   SNE      VA, #6D         ; Skip if VA != 109
$FD0    $67C4   LD       V7, #C4         ; Load 196 into V7
$FD2    $FDD2   UNKNOWN  FDD2            ; Unknown Fxxx instruction
$FD4    $D5D8   DRW      V5, VD, #8      ; Draw 8-byte sprite at V5, VD
$FD6    $7D5B   ADD      VD, #5B         ; Add 91 to VD
$FD8    $4B5A   SNE      VB, #5A         ; Skip if VB != 90
$FDA    $44FF   SNE      V4, #FF         ; Skip if V4 != 255
$FDC    $6FFD   LD       VF, #FD         ; Load 253 into VF
$FDE    $BF80   JP       V0, $F80        ; Jump to V0 + F80
$FE0    $2167   CALL     $167            ; Call subroutine at 167
$FE2    $9316   UNKNOWN  $9316           ; Unknown 9xxx instruction
$FE4    $64E3   LD       V4, #E3         ; Load 227 into V4
$FE6    $02E0   SYS      $2E0            ; System call to 2E0
$FE8    $FCAD   UNKNOWN  FCAD            ; Unknown Fxxx instruction
$FEA    $6D35   LD       VD, #35         ; Load 53 into VD
$FEC    $1191   JP       $191            ; Jump to 191
$FEE    $3888   SE       V8, #88         ; Skip if V8 == 136
$FF0    $5781   UNKNOWN  $5781           ; Unknown 5xxx instruction
$FF2    $0CCC   SYS      $CCC            ; System call to CCC
$FF4    $A244   LD       I, $244         ; Load 244 into I
$FF6    $EA38   UNKNOWN  $EA38           ; Unknown Exxx instruction
$FF8    $C6E2   RND      V6, #E2         ; V6 = random & E2
$FFA    $CD8C   RND      VD, #8C         ; VD = random & 8C
$FFC    $3FEF   SE       VF, #EF         ; Skip if VF == 239
$FFE    $2491   CALL     $491            ; Call subroutine at 491

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 475 (26.5%)
  LD      : 242 (13.5%)
  JP      : 203 (11.3%)
  SE      : 135 ( 7.5%)
  CALL    : 129 ( 7.2%)
  ADD     : 118 ( 6.6%)
  DRW     : 112 ( 6.2%)
  SYS     : 111 ( 6.2%)
  SNE     : 109 ( 6.1%)
  RND     : 103 ( 5.7%)
  AND     :  12 ( 0.7%)
  SHL     :  10 ( 0.6%)
  SHR     :   8 ( 0.4%)
  SUBN    :   7 ( 0.4%)
  SUB     :   6 ( 0.3%)
  XOR     :   6 ( 0.3%)
  OR      :   5 ( 0.3%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 360 (20.1%)
Arithmetic Operations: 154 (8.6%)
