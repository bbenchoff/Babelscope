
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B954D01_I12989_C9112_f777fcf4be96.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 954
Instance: 12989
Direction: descending
Final Array: [231, 200, 169, 138, 107, 76, 45, 14]
Operations: R:0 W:8 C:22 S:5

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 122
Sort Array References:
  $202: LD I, $98A ; Load 98A into I
  $23C: LD I, $384 ; Load 384 into I
  $244: LD I, $B8C ; Load B8C into I
  $27E: LD I, $586 ; Load 586 into I
  $286: LD I, $D8E ; Load D8E into I
  $2C0: LD I, $788 ; Load 788 into I
  $2C8: LD I, $F90 ; Load F90 into I
  $2FA: LD I, $182 ; Load 182 into I
  $302: LD I, $98A ; Load 98A into I
  $398: LD I, $C31 ; Load C31 into I
  $3A8: LD I, $471 ; Load 471 into I
  $408: LD I, $02F ; Load 02F into I
  $412: LD I, $9B7 ; Load 9B7 into I
  $418: LD I, $C08 ; Load C08 into I
  $41C: LD I, $051 ; Load 051 into I
  $426: LD I, $F92 ; Load F92 into I
  $430: LD I, $C7F ; Load C7F into I
  $43A: LD I, $D1E ; Load D1E into I
  $442: LD I, $4A2 ; Load 4A2 into I
  $450: LD I, $C8C ; Load C8C into I
  $47C: LD I, $3F9 ; Load 3F9 into I
  $4B8: LD I, $830 ; Load 830 into I
  $4C8: LD I, $584 ; Load 584 into I
  $4CE: LD I, $BE9 ; Load BE9 into I
  $4DA: LD I, $A76 ; Load A76 into I
  $4FC: LD I, $2C1 ; Load 2C1 into I
  $50C: LD I, $19C ; Load 19C into I
  $534: LD I, $07F ; Load 07F into I
  $580: LD I, $DDA ; Load DDA into I
  $58A: LD I, $2E9 ; Load 2E9 into I
  $620: LD I, $941 ; Load 941 into I
  $640: LD I, $739 ; Load 739 into I
  $654: LD I, $465 ; Load 465 into I
  $65E: LD I, $410 ; Load 410 into I
  $66E: LD I, $C1B ; Load C1B into I
  $68C: LD I, $595 ; Load 595 into I
  $694: LD I, $194 ; Load 194 into I
  $69A: LD I, $601 ; Load 601 into I
  $6D4: LD I, $869 ; Load 869 into I
  $700: LD I, $07B ; Load 07B into I
  $710: LD I, $9D5 ; Load 9D5 into I
  $728: LD I, $C90 ; Load C90 into I
  $742: LD I, $092 ; Load 092 into I
  $750: LD I, $40A ; Load 40A into I
  $756: LD I, $20F ; Load 20F into I
  $762: LD I, $FAB ; Load FAB into I
  $764: LD I, $E51 ; Load E51 into I
  $786: LD I, $C24 ; Load C24 into I
  $7A6: LD I, $439 ; Load 439 into I
  $7C2: LD I, $AEC ; Load AEC into I
  $7CA: LD I, $C3F ; Load C3F into I
  $7CC: LD I, $5DB ; Load 5DB into I
  $836: LD I, $72F ; Load 72F into I
  $8F8: LD I, $F17 ; Load F17 into I
  $8FE: LD I, $85E ; Load 85E into I
  $92A: LD I, $696 ; Load 696 into I
  $938: LD I, $5AA ; Load 5AA into I
  $944: LD I, $B7A ; Load B7A into I
  $99E: LD I, $979 ; Load 979 into I
  $9AC: LD [I], V0 ; Store V0-V0 at I
  $9BA: LD I, $E0F ; Load E0F into I
  $9CA: LD I, $B8D ; Load B8D into I
  $A06: LD I, $30E ; Load 30E into I
  $A0A: LD I, $F6C ; Load F6C into I
  $A16: LD I, $E15 ; Load E15 into I
  $A52: LD I, $F4B ; Load F4B into I
  $A76: LD I, $225 ; Load 225 into I
  $A84: LD I, $B0C ; Load B0C into I
  $A8E: LD I, $305 ; Load 305 into I
  $A9C: LD I, $ACD ; Load ACD into I
  $AE2: LD I, $FF7 ; Load FF7 into I
  $AF4: LD I, $F5D ; Load F5D into I
  $B08: LD I, $F17 ; Load F17 into I
  $B28: LD I, $E47 ; Load E47 into I
  $B5A: LD I, $EBE ; Load EBE into I
  $B5C: LD I, $072 ; Load 072 into I
  $B60: LD I, $F36 ; Load F36 into I
  $B90: LD I, $95F ; Load 95F into I
  $B9A: LD I, $AA2 ; Load AA2 into I
  $BA8: LD I, $9CB ; Load 9CB into I
  $BBC: LD I, $BF7 ; Load BF7 into I
  $BC2: LD I, $81F ; Load 81F into I
  $BC4: LD I, $719 ; Load 719 into I
  $BC6: LD I, $F44 ; Load F44 into I
  $BD8: LD I, $BC5 ; Load BC5 into I
  $BF6: LD I, $408 ; Load 408 into I
  $C06: LD I, $F6A ; Load F6A into I
  $C0E: LD I, $2AF ; Load 2AF into I
  $C3C: LD I, $4E2 ; Load 4E2 into I
  $C44: LD I, $7F4 ; Load 7F4 into I
  $C5A: LD I, $56E ; Load 56E into I
  $CB0: LD I, $424 ; Load 424 into I
  $CBC: LD I, $1F7 ; Load 1F7 into I
  $CE0: LD I, $34F ; Load 34F into I
  $CEA: LD I, $C07 ; Load C07 into I
  $D10: LD I, $860 ; Load 860 into I
  $D1C: LD I, $51A ; Load 51A into I
  $D28: LD I, $0B7 ; Load 0B7 into I
  $D38: LD I, $148 ; Load 148 into I
  $D40: LD I, $D44 ; Load D44 into I
  $D58: LD I, $243 ; Load 243 into I
  $D7C: LD I, $603 ; Load 603 into I
  $D84: LD I, $147 ; Load 147 into I
  $D8A: LD I, $655 ; Load 655 into I
  $DE2: LD I, $5DC ; Load 5DC into I
  $DE4: LD I, $82E ; Load 82E into I
  $DEE: LD I, $76D ; Load 76D into I
  $E2A: LD I, $A21 ; Load A21 into I
  $E2E: LD I, $E4F ; Load E4F into I
  $E5A: LD I, $727 ; Load 727 into I
  $E60: LD I, $3E9 ; Load 3E9 into I
  $E6A: LD I, $C73 ; Load C73 into I
  $EA0: LD I, $DA9 ; Load DA9 into I
  $EA2: LD I, $26B ; Load 26B into I
  $EA6: LD I, $61D ; Load 61D into I
  $EC8: LD I, $B8C ; Load B8C into I
  $F74: LD I, $01E ; Load 01E into I
  $F92: LD I, $097 ; Load 097 into I
  $F9E: LD I, $D02 ; Load D02 into I
  $FC0: LD I, $25A ; Load 25A into I
  $FEA: LD I, $82D ; Load 82D into I
  $FF6: LD I, $99B ; Load 99B into I

CONTROL FLOW ANALYSIS:
Jumps: 213
Calls: 123
Branches: 254
Loops: 120
Loop Structures:
  $20A -> $192 (backward jump)
  $26A -> $1F2 (backward jump)
  $30A -> $192 (backward jump)
  $32C -> $0F3 (backward jump)
  $36C -> $0C7 (backward jump)
  $3AE -> $25C (backward jump)
  $43E -> $087 (backward jump)
  $444 -> $199 (backward jump)
  $4BC -> $179 (backward jump)
  $4F2 -> $160 (backward jump)
  $510 -> $062 (backward jump)
  $556 -> $255 (backward jump)
  $56E -> $517 (backward jump)
  $5D8 -> $51B (backward jump)
  $63C -> $371 (backward jump)
  $64A -> $3C4 (backward jump)
  $676 -> $111 (backward jump)
  $682 -> $424 (backward jump)
  $6C2 -> $052 (backward jump)
  $6D6 -> $65E (backward jump)
  $788 -> $046 (backward jump)
  $7E4 -> $5A4 (backward jump)
  $7E8 -> $592 (backward jump)
  $7EA -> $5DD (backward jump)
  $80A -> $50B (backward jump)
  $81A -> $4A6 (backward jump)
  $82A -> $726 (backward jump)
  $838 -> $596 (backward jump)
  $848 -> $527 (backward jump)
  $84C -> $02B (backward jump)
  $84E -> $6E8 (backward jump)
  $85C -> $4B8 (backward jump)
  $872 -> $6EA (backward jump)
  $8FA -> $0FD (backward jump)
  $940 -> $524 (backward jump)
  $94A -> $6BC (backward jump)
  $954 -> $0AD (backward jump)
  $98A -> $546 (backward jump)
  $98C -> $8D1 (backward jump)
  $9B8 -> $8CD (backward jump)
  $9BC -> $3FF (backward jump)
  $9BE -> $25A (backward jump)
  $9D2 -> $37F (backward jump)
  $9EE -> $5E6 (backward jump)
  $9F6 -> $1CA (backward jump)
  $9FC -> $51D (backward jump)
  $A54 -> $A1D (backward jump)
  $A66 -> $0AE (backward jump)
  $A68 -> $1B4 (backward jump)
  $A6E -> $899 (backward jump)
  $A70 -> $480 (backward jump)
  $A80 -> $883 (backward jump)
  $A92 -> $629 (backward jump)
  $A98 -> $4A6 (backward jump)
  $AB4 -> $9C5 (backward jump)
  $ABA -> $3B8 (backward jump)
  $AC6 -> $836 (backward jump)
  $ACC -> $060 (backward jump)
  $ADC -> $629 (backward jump)
  $AE6 -> $48C (backward jump)
  $AFA -> $48D (backward jump)
  $B0E -> $384 (backward jump)
  $B30 -> $0A7 (backward jump)
  $B3A -> $320 (backward jump)
  $B3E -> $286 (backward jump)
  $B44 -> $6ED (backward jump)
  $B4E -> $746 (backward jump)
  $B74 -> $A5C (backward jump)
  $B76 -> $62D (backward jump)
  $B7E -> $693 (backward jump)
  $C02 -> $06E (backward jump)
  $C28 -> $6E2 (backward jump)
  $C5E -> $B29 (backward jump)
  $C62 -> $4FC (backward jump)
  $C6A -> $05B (backward jump)
  $C6E -> $8F5 (backward jump)
  $C72 -> $1A1 (backward jump)
  $C7C -> $140 (backward jump)
  $C8E -> $AA9 (backward jump)
  $CCA -> $AB5 (backward jump)
  $CE2 -> $09C (backward jump)
  $CF6 -> $9F3 (backward jump)
  $D46 -> $37D (backward jump)
  $D5C -> $1AC (backward jump)
  $D9E -> $7A1 (backward jump)
  $DA6 -> $2BB (backward jump)
  $DB6 -> $C92 (backward jump)
  $DBE -> $96A (backward jump)
  $DD4 -> $751 (backward jump)
  $DF8 -> $CA9 (backward jump)
  $E08 -> $93A (backward jump)
  $E12 -> $CE6 (backward jump)
  $E18 -> $E0D (backward jump)
  $E1A -> $97A (backward jump)
  $E28 -> $111 (backward jump)
  $E32 -> $87C (backward jump)
  $E3A -> $976 (backward jump)
  $E44 -> $C33 (backward jump)
  $E50 -> $387 (backward jump)
  $E70 -> $D77 (backward jump)
  $E78 -> $CFF (backward jump)
  $E86 -> $AC6 (backward jump)
  $E96 -> $3A6 (backward jump)
  $E98 -> $52D (backward jump)
  $E9C -> $C71 (backward jump)
  $E9E -> $B0D (backward jump)
  $EE4 -> $D42 (backward jump)
  $EEE -> $BB1 (backward jump)
  $F18 -> $99A (backward jump)
  $F26 -> $DDD (backward jump)
  $F34 -> $805 (backward jump)
  $F7A -> $063 (backward jump)
  $F96 -> $A3F (backward jump)
  $F9C -> $5FF (backward jump)
  $FAC -> $980 (backward jump)
  $FC2 -> $D7A (backward jump)
  $FCE -> $5BC (backward jump)
  $FD8 -> $F23 (backward jump)
  $FF0 -> $C37 (backward jump)
  $FF8 -> $978 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $E7C8   UNKNOWN  $E7C8           ; Unknown Exxx instruction
$202    $A98A   LD       I, $98A         ; Load 98A into I
$204    $6B4C   LD       VB, #4C         ; Load 76 into VB
$206    $2D0E   CALL     $D0E            ; Call subroutine at D0E
$208    $EFD0   UNKNOWN  $EFD0           ; Unknown Exxx instruction
$20A    $B192   JP       V0, $192        ; Jump to V0 + 192
$20C    $7354   ADD      V3, #54         ; Add 84 to V3
$20E    $3516   SE       V5, #16         ; Skip if V5 == 22
$210    $F7D8   UNKNOWN  F7D8            ; Unknown Fxxx instruction
$212    $B99A   JP       V0, $99A        ; Jump to V0 + 99A
$214    $7B5C   ADD      VB, #5C         ; Add 92 to VB
$216    $3D1E   SE       VD, #1E         ; Skip if VD == 30
$218    $FFE0   UNKNOWN  FFE0            ; Unknown Fxxx instruction
$21A    $C1A2   RND      V1, #A2         ; V1 = random & A2
$21C    $8364   ADD      V3, V6          ; V3 += V6, VF = carry
$21E    $4526   SNE      V5, #26         ; Skip if V5 != 38
$220    $07E8   SYS      $7E8            ; System call to 7E8
$222    $C9AA   RND      V9, #AA         ; V9 = random & AA
$224    $8B6C   UNKNOWN  8B6C            ; Unknown 8xxx instruction
$226    $4D2E   SNE      VD, #2E         ; Skip if VD != 46
$228    $0FF0   SYS      $FF0            ; System call to FF0
$22A    $D1B2   DRW      V1, VB, #2      ; Draw 2-byte sprite at V1, VB
$22C    $9374   UNKNOWN  $9374           ; Unknown 9xxx instruction
$22E    $5536   UNKNOWN  $5536           ; Unknown 5xxx instruction
$230    $17F8   JP       $7F8            ; Jump to 7F8
$232    $D9BA   DRW      V9, VB, #A      ; Draw 10-byte sprite at V9, VB
$234    $9B7C   UNKNOWN  $9B7C           ; Unknown 9xxx instruction
$236    $5D3E   UNKNOWN  $5D3E           ; Unknown 5xxx instruction
$238    $1F00   JP       $F00            ; Jump to F00
$23A    $E1C2   UNKNOWN  $E1C2           ; Unknown Exxx instruction
$23C    $A384   LD       I, $384         ; Load 384 into I
$23E    $6546   LD       V5, #46         ; Load 70 into V5
$240    $2708   CALL     $708            ; Call subroutine at 708
$242    $E9CA   UNKNOWN  $E9CA           ; Unknown Exxx instruction
$244    $AB8C   LD       I, $B8C         ; Load B8C into I
$246    $6D4E   LD       VD, #4E         ; Load 78 into VD
$248    $2F10   CALL     $F10            ; Call subroutine at F10
$24A    $F1D2   UNKNOWN  F1D2            ; Unknown Fxxx instruction
$24C    $B394   JP       V0, $394        ; Jump to V0 + 394
$24E    $7556   ADD      V5, #56         ; Add 86 to V5
$250    $3718   SE       V7, #18         ; Skip if V7 == 24
$252    $F9DA   UNKNOWN  F9DA            ; Unknown Fxxx instruction
$254    $BB9C   JP       V0, $B9C        ; Jump to V0 + B9C
$256    $7D5E   ADD      VD, #5E         ; Add 94 to VD
$258    $3F20   SE       VF, #20         ; Skip if VF == 32
$25A    $01E2   SYS      $1E2            ; System call to 1E2
$25C    $C3A4   RND      V3, #A4         ; V3 = random & A4
$25E    $8566   SHR      V5              ; V5 >>= 1, VF = LSB
$260    $4728   SNE      V7, #28         ; Skip if V7 != 40
$262    $09EA   SYS      $9EA            ; System call to 9EA
$264    $CBAC   RND      VB, #AC         ; VB = random & AC
$266    $8D6E   SHL      VD              ; VD <<= 1, VF = MSB
$268    $4F30   SNE      VF, #30         ; Skip if VF != 48
$26A    $11F2   JP       $1F2            ; Jump to 1F2
$26C    $D3B4   DRW      V3, VB, #4      ; Draw 4-byte sprite at V3, VB
$26E    $9576   UNKNOWN  $9576           ; Unknown 9xxx instruction
$270    $5738   UNKNOWN  $5738           ; Unknown 5xxx instruction
$272    $19FA   JP       $9FA            ; Jump to 9FA
$274    $DBBC   DRW      VB, VB, #C      ; Draw 12-byte sprite at VB, VB
$276    $9D7E   UNKNOWN  $9D7E           ; Unknown 9xxx instruction
$278    $5F40   SE       VF, V4          ; Skip if VF == V4
$27A    $2102   CALL     $102            ; Call subroutine at 102
$27C    $E3C4   UNKNOWN  $E3C4           ; Unknown Exxx instruction
$27E    $A586   LD       I, $586         ; Load 586 into I
$280    $6748   LD       V7, #48         ; Load 72 into V7
$282    $290A   CALL     $90A            ; Call subroutine at 90A
$284    $EBCC   UNKNOWN  $EBCC           ; Unknown Exxx instruction
$286    $AD8E   LD       I, $D8E         ; Load D8E into I
$288    $6F50   LD       VF, #50         ; Load 80 into VF
$28A    $3112   SE       V1, #12         ; Skip if V1 == 18
$28C    $F3D4   UNKNOWN  F3D4            ; Unknown Fxxx instruction
$28E    $B596   JP       V0, $596        ; Jump to V0 + 596
$290    $7758   ADD      V7, #58         ; Add 88 to V7
$292    $391A   SE       V9, #1A         ; Skip if V9 == 26
$294    $FBDC   UNKNOWN  FBDC            ; Unknown Fxxx instruction
$296    $BD9E   JP       V0, $D9E        ; Jump to V0 + D9E
$298    $7F60   ADD      VF, #60         ; Add 96 to VF
$29A    $4122   SNE      V1, #22         ; Skip if V1 != 34
$29C    $03E4   SYS      $3E4            ; System call to 3E4
$29E    $C5A6   RND      V5, #A6         ; V5 = random & A6
$2A0    $8768   UNKNOWN  8768            ; Unknown 8xxx instruction
$2A2    $492A   SNE      V9, #2A         ; Skip if V9 != 42
$2A4    $0BEC   SYS      $BEC            ; System call to BEC
$2A6    $CDAE   RND      VD, #AE         ; VD = random & AE
$2A8    $8F70   LD       VF, V7          ; VF = V7
$2AA    $5132   UNKNOWN  $5132           ; Unknown 5xxx instruction
$2AC    $13F4   JP       $3F4            ; Jump to 3F4
$2AE    $D5B6   DRW      V5, VB, #6      ; Draw 6-byte sprite at V5, VB
$2B0    $9778   UNKNOWN  $9778           ; Unknown 9xxx instruction
$2B2    $593A   UNKNOWN  $593A           ; Unknown 5xxx instruction
$2B4    $1BFC   JP       $BFC            ; Jump to BFC
$2B6    $DDBE   DRW      VD, VB, #E      ; Draw 14-byte sprite at VD, VB
$2B8    $9F80   SNE      VF, V8          ; Skip if VF != V8
$2BA    $6142   LD       V1, #42         ; Load 66 into V1
$2BC    $2304   CALL     $304            ; Call subroutine at 304
$2BE    $E5C6   UNKNOWN  $E5C6           ; Unknown Exxx instruction
$2C0    $A788   LD       I, $788         ; Load 788 into I
$2C2    $694A   LD       V9, #4A         ; Load 74 into V9
$2C4    $2B0C   CALL     $B0C            ; Call subroutine at B0C
$2C6    $EDCE   UNKNOWN  $EDCE           ; Unknown Exxx instruction
$2C8    $AF90   LD       I, $F90         ; Load F90 into I
$2CA    $7152   ADD      V1, #52         ; Add 82 to V1
$2CC    $3314   SE       V3, #14         ; Skip if V3 == 20
$2CE    $F5D6   UNKNOWN  F5D6            ; Unknown Fxxx instruction
$2D0    $B798   JP       V0, $798        ; Jump to V0 + 798
$2D2    $795A   ADD      V9, #5A         ; Add 90 to V9
$2D4    $3B1C   SE       VB, #1C         ; Skip if VB == 28
$2D6    $FDDE   UNKNOWN  FDDE            ; Unknown Fxxx instruction
$2D8    $BFA0   JP       V0, $FA0        ; Jump to V0 + FA0
$2DA    $8162   AND      V1, V6          ; V1 &= V6
$2DC    $4324   SNE      V3, #24         ; Skip if V3 != 36
$2DE    $05E6   SYS      $5E6            ; System call to 5E6
$2E0    $C7A8   RND      V7, #A8         ; V7 = random & A8
$2E2    $896A   UNKNOWN  896A            ; Unknown 8xxx instruction
$2E4    $4B2C   SNE      VB, #2C         ; Skip if VB != 44
$2E6    $0DEE   SYS      $DEE            ; System call to DEE
$2E8    $CFB0   RND      VF, #B0         ; VF = random & B0
$2EA    $9172   UNKNOWN  $9172           ; Unknown 9xxx instruction
$2EC    $5334   UNKNOWN  $5334           ; Unknown 5xxx instruction
$2EE    $15F6   JP       $5F6            ; Jump to 5F6
$2F0    $D7B8   DRW      V7, VB, #8      ; Draw 8-byte sprite at V7, VB
$2F2    $997A   UNKNOWN  $997A           ; Unknown 9xxx instruction
$2F4    $5B3C   UNKNOWN  $5B3C           ; Unknown 5xxx instruction
$2F6    $1DFE   JP       $DFE            ; Jump to DFE
$2F8    $DFC0   DRW      VF, VC, #0      ; Draw 0-byte sprite at VF, VC
$2FA    $A182   LD       I, $182         ; Load 182 into I
$2FC    $6344   LD       V3, #44         ; Load 68 into V3
$2FE    $2506   CALL     $506            ; Call subroutine at 506
$300    $E7C8   UNKNOWN  $E7C8           ; Unknown Exxx instruction
$302    $A98A   LD       I, $98A         ; Load 98A into I
$304    $6B4C   LD       VB, #4C         ; Load 76 into VB
$306    $2D0E   CALL     $D0E            ; Call subroutine at D0E
$308    $EFD0   UNKNOWN  $EFD0           ; Unknown Exxx instruction
$30A    $B192   JP       V0, $192        ; Jump to V0 + 192
$30C    $7354   ADD      V3, #54         ; Add 84 to V3
$30E    $3516   SE       V5, #16         ; Skip if V5 == 22
$310    $F7D8   UNKNOWN  F7D8            ; Unknown Fxxx instruction
$312    $B99A   JP       V0, $99A        ; Jump to V0 + 99A
$314    $7B5C   ADD      VB, #5C         ; Add 92 to VB
$316    $3D1E   SE       VD, #1E         ; Skip if VD == 30
$318    $FFE0   UNKNOWN  FFE0            ; Unknown Fxxx instruction
$31A    $C1A2   RND      V1, #A2         ; V1 = random & A2
$31C    $8364   ADD      V3, V6          ; V3 += V6, VF = carry
$31E    $4526   SNE      V5, #26         ; Skip if V5 != 38
$320    $07E8   SYS      $7E8            ; System call to 7E8
$322    $C9AA   RND      V9, #AA         ; V9 = random & AA
$324    $CD14   RND      VD, #14         ; VD = random & 14
$326    $96A1   UNKNOWN  $96A1           ; Unknown 9xxx instruction
$328    $E633   UNKNOWN  $E633           ; Unknown Exxx instruction
$32A    $706D   ADD      V0, #6D         ; Add 109 to V0
$32C    $B0F3   JP       V0, $0F3        ; Jump to V0 + 0F3
$32E    $2186   CALL     $186            ; Call subroutine at 186
$330    $639F   LD       V3, #9F         ; Load 159 into V3
$332    $92DE   UNKNOWN  $92DE           ; Unknown 9xxx instruction
$334    $FE22   UNKNOWN  FE22            ; Unknown Fxxx instruction
$336    $F835   UNKNOWN  F835            ; Unknown Fxxx instruction
$338    $7AF4   ADD      VA, #F4         ; Add 244 to VA
$33A    $FDA6   UNKNOWN  FDA6            ; Unknown Fxxx instruction
$33C    $D217   DRW      V2, V1, #7      ; Draw 7-byte sprite at V2, V1
$33E    $867E   SHL      V6              ; V6 <<= 1, VF = MSB
$340    $C31E   RND      V3, #1E         ; V3 = random & 1E
$342    $3331   SE       V3, #31         ; Skip if V3 == 49
$344    $E6A9   UNKNOWN  $E6A9           ; Unknown Exxx instruction
$346    $972F   UNKNOWN  $972F           ; Unknown 9xxx instruction
$348    $022D   SYS      $22D            ; System call to 22D
$34A    $C15A   RND      V1, #5A         ; V1 = random & 5A
$34C    $5DD3   UNKNOWN  $5DD3           ; Unknown 5xxx instruction
$34E    $FA00   UNKNOWN  FA00            ; Unknown Fxxx instruction
$350    $74D5   ADD      V4, #D5         ; Add 213 to V4
$352    $DAC4   DRW      VA, VC, #4      ; Draw 4-byte sprite at VA, VC
$354    $6BDD   LD       VB, #DD         ; Load 221 into VB
$356    $0DFA   SYS      $DFA            ; System call to DFA
$358    $C101   RND      V1, #01         ; V1 = random & 01
$35A    $4965   SNE      V9, #65         ; Skip if V9 != 101
$35C    $2114   CALL     $114            ; Call subroutine at 114
$35E    $7FB0   ADD      VF, #B0         ; Add 176 to VF
$360    $064E   SYS      $64E            ; System call to 64E
$362    $7999   ADD      V9, #99         ; Add 153 to V9
$364    $07F6   SYS      $7F6            ; System call to 7F6
$366    $728B   ADD      V2, #8B         ; Add 139 to V2
$368    $FA27   UNKNOWN  FA27            ; Unknown Fxxx instruction
$36A    $98D3   UNKNOWN  $98D3           ; Unknown 9xxx instruction
$36C    $B0C7   JP       V0, $0C7        ; Jump to V0 + 0C7
$36E    $952A   UNKNOWN  $952A           ; Unknown 9xxx instruction
$370    $59DE   UNKNOWN  $59DE           ; Unknown 5xxx instruction
$372    $7054   ADD      V0, #54         ; Add 84 to V0
$374    $01A7   SYS      $1A7            ; System call to 1A7
$376    $8089   UNKNOWN  8089            ; Unknown 8xxx instruction
$378    $6AB0   LD       VA, #B0         ; Load 176 into VA
$37A    $C95E   RND      V9, #5E         ; V9 = random & 5E
$37C    $6A86   LD       VA, #86         ; Load 134 into VA
$37E    $2A3B   CALL     $A3B            ; Call subroutine at A3B
$380    $47A6   SNE      V7, #A6         ; Skip if V7 != 166
$382    $977E   UNKNOWN  $977E           ; Unknown 9xxx instruction
$384    $2703   CALL     $703            ; Call subroutine at 703
$386    $77B5   ADD      V7, #B5         ; Add 181 to V7
$388    $45FA   SNE      V5, #FA         ; Skip if V5 != 250
$38A    $8091   OR       V0, V9          ; V0 |= V9
$38C    $D2EF   DRW      V2, VE, #F      ; Draw 15-byte sprite at V2, VE
$38E    $7967   ADD      V9, #67         ; Add 103 to V9
$390    $3E13   SE       VE, #13         ; Skip if VE == 19
$392    $06DD   SYS      $6DD            ; System call to 6DD
$394    $B86F   JP       V0, $86F        ; Jump to V0 + 86F
$396    $35B3   SE       V5, #B3         ; Skip if V5 == 179
$398    $AC31   LD       I, $C31         ; Load C31 into I
$39A    $2AAD   CALL     $AAD            ; Call subroutine at AAD
$39C    $368C   SE       V6, #8C         ; Skip if V6 == 140
$39E    $488F   SNE      V8, #8F         ; Skip if V8 != 143
$3A0    $BE14   JP       V0, $E14        ; Jump to V0 + E14
$3A2    $0ABC   SYS      $ABC            ; System call to ABC
$3A4    $D671   DRW      V6, V7, #1      ; Draw 1-byte sprite at V6, V7
$3A6    $5F78   UNKNOWN  $5F78           ; Unknown 5xxx instruction
$3A8    $A471   LD       I, $471         ; Load 471 into I
$3AA    $BD27   JP       V0, $D27        ; Jump to V0 + D27
$3AC    $E6A2   UNKNOWN  $E6A2           ; Unknown Exxx instruction
$3AE    $B25C   JP       V0, $25C        ; Jump to V0 + 25C
$3B0    $1B74   JP       $B74            ; Jump to B74
$3B2    $3047   SE       V0, #47         ; Skip if V0 == 71
$3B4    $91B3   UNKNOWN  $91B3           ; Unknown 9xxx instruction
$3B6    $2963   CALL     $963            ; Call subroutine at 963
$3B8    $BF2B   JP       V0, $F2B        ; Jump to V0 + F2B
$3BA    $3C3E   SE       VC, #3E         ; Skip if VC == 62
$3BC    $D7D9   DRW      V7, VD, #9      ; Draw 9-byte sprite at V7, VD
$3BE    $F22E   UNKNOWN  F22E            ; Unknown Fxxx instruction
$3C0    $4E68   SNE      VE, #68         ; Skip if VE != 104
$3C2    $5C0A   UNKNOWN  $5C0A           ; Unknown 5xxx instruction
$3C4    $4DC1   SNE      VD, #C1         ; Skip if VD != 193
$3C6    $2CD6   CALL     $CD6            ; Call subroutine at CD6
$3C8    $70E1   ADD      V0, #E1         ; Add 225 to V0
$3CA    $0C85   SYS      $C85            ; System call to C85
$3CC    $2BE3   CALL     $BE3            ; Call subroutine at BE3
$3CE    $DA5F   DRW      VA, V5, #F      ; Draw 15-byte sprite at VA, V5
$3D0    $0C40   SYS      $C40            ; System call to C40
$3D2    $BAF5   JP       V0, $AF5        ; Jump to V0 + AF5
$3D4    $22FF   CALL     $2FF            ; Call subroutine at 2FF
$3D6    $3B83   SE       VB, #83         ; Skip if VB == 131
$3D8    $7CA8   ADD      VC, #A8         ; Add 168 to VC
$3DA    $0EFA   SYS      $EFA            ; System call to EFA
$3DC    $7FEC   ADD      VF, #EC         ; Add 236 to VF
$3DE    $8649   UNKNOWN  8649            ; Unknown 8xxx instruction
$3E0    $0A6E   SYS      $A6E            ; System call to A6E
$3E2    $1A19   JP       $A19            ; Jump to A19
$3E4    $DA4D   DRW      VA, V4, #D      ; Draw 13-byte sprite at VA, V4
$3E6    $41D7   SNE      V1, #D7         ; Skip if V1 != 215
$3E8    $250D   CALL     $50D            ; Call subroutine at 50D
$3EA    $FD58   UNKNOWN  FD58            ; Unknown Fxxx instruction
$3EC    $7D86   ADD      VD, #86         ; Add 134 to VD
$3EE    $64B9   LD       V4, #B9         ; Load 185 into V4
$3F0    $F6F9   UNKNOWN  F6F9            ; Unknown Fxxx instruction
$3F2    $1EF4   JP       $EF4            ; Jump to EF4
$3F4    $F9B4   UNKNOWN  F9B4            ; Unknown Fxxx instruction
$3F6    $3F58   SE       VF, #58         ; Skip if VF == 88
$3F8    $6110   LD       V1, #10         ; Load 16 into V1
$3FA    $3C0E   SE       VC, #0E         ; Skip if VC == 14
$3FC    $E486   UNKNOWN  $E486           ; Unknown Exxx instruction
$3FE    $17C7   JP       $7C7            ; Jump to 7C7
$400    $76EB   ADD      V6, #EB         ; Add 235 to V6
$402    $5D7B   UNKNOWN  $5D7B           ; Unknown 5xxx instruction
$404    $F361   UNKNOWN  F361            ; Unknown Fxxx instruction
$406    $F234   UNKNOWN  F234            ; Unknown Fxxx instruction
$408    $A02F   LD       I, $02F         ; Load 02F into I
$40A    $97DC   UNKNOWN  $97DC           ; Unknown 9xxx instruction
$40C    $1EC0   JP       $EC0            ; Jump to EC0
$40E    $6157   LD       V1, #57         ; Load 87 into V1
$410    $5ABE   UNKNOWN  $5ABE           ; Unknown 5xxx instruction
$412    $A9B7   LD       I, $9B7         ; Load 9B7 into I
$414    $90EF   UNKNOWN  $90EF           ; Unknown 9xxx instruction
$416    $2EBC   CALL     $EBC            ; Call subroutine at EBC
$418    $AC08   LD       I, $C08         ; Load C08 into I
$41A    $271B   CALL     $71B            ; Call subroutine at 71B
$41C    $A051   LD       I, $051         ; Load 051 into I
$41E    $15D9   JP       $5D9            ; Jump to 5D9
$420    $6424   LD       V4, #24         ; Load 36 into V4
$422    $0C34   SYS      $C34            ; System call to C34
$424    $7165   ADD      V1, #65         ; Add 101 to V1
$426    $AF92   LD       I, $F92         ; Load F92 into I
$428    $6636   LD       V6, #36         ; Load 54 into V6
$42A    $3DB2   SE       VD, #B2         ; Skip if VD == 178
$42C    $79BB   ADD      V9, #BB         ; Add 187 to V9
$42E    $6397   LD       V3, #97         ; Load 151 into V3
$430    $AC7F   LD       I, $C7F         ; Load C7F into I
$432    $9478   UNKNOWN  $9478           ; Unknown 9xxx instruction
$434    $2687   CALL     $687            ; Call subroutine at 687
$436    $590A   UNKNOWN  $590A           ; Unknown 5xxx instruction
$438    $7B2D   ADD      VB, #2D         ; Add 45 to VB
$43A    $AD1E   LD       I, $D1E         ; Load D1E into I
$43C    $B94D   JP       V0, $94D        ; Jump to V0 + 94D
$43E    $1087   JP       $087            ; Jump to 087
$440    $36E7   SE       V6, #E7         ; Skip if V6 == 231
$442    $A4A2   LD       I, $4A2         ; Load 4A2 into I
$444    $B199   JP       V0, $199        ; Jump to V0 + 199
$446    $E8DC   UNKNOWN  $E8DC           ; Unknown Exxx instruction
$448    $293B   CALL     $93B            ; Call subroutine at 93B
$44A    $98A0   SNE      V8, VA          ; Skip if V8 != VA
$44C    $38F0   SE       V8, #F0         ; Skip if V8 == 240
$44E    $7E57   ADD      VE, #57         ; Add 87 to VE
$450    $AC8C   LD       I, $C8C         ; Load C8C into I
$452    $4F83   SNE      VF, #83         ; Skip if VF != 131
$454    $CA42   RND      VA, #42         ; VA = random & 42
$456    $8986   SHR      V9              ; V9 >>= 1, VF = LSB
$458    $01FD   SYS      $1FD            ; System call to 1FD
$45A    $CD80   RND      VD, #80         ; VD = random & 80
$45C    $56E6   UNKNOWN  $56E6           ; Unknown 5xxx instruction
$45E    $157E   JP       $57E            ; Jump to 57E
$460    $757B   ADD      V5, #7B         ; Add 123 to V5
$462    $FFA9   UNKNOWN  FFA9            ; Unknown Fxxx instruction
$464    $9897   UNKNOWN  $9897           ; Unknown 9xxx instruction
$466    $0063   SYS      $063            ; System call to 063
$468    $7810   ADD      V8, #10         ; Add 16 to V8
$46A    $5D96   UNKNOWN  $5D96           ; Unknown 5xxx instruction
$46C    $DB3C   DRW      VB, V3, #C      ; Draw 12-byte sprite at VB, V3
$46E    $19A5   JP       $9A5            ; Jump to 9A5
$470    $FA74   UNKNOWN  FA74            ; Unknown Fxxx instruction
$472    $306C   SE       V0, #6C         ; Skip if V0 == 108
$474    $F737   UNKNOWN  F737            ; Unknown Fxxx instruction
$476    $EAF9   UNKNOWN  $EAF9           ; Unknown Exxx instruction
$478    $9BAA   UNKNOWN  $9BAA           ; Unknown 9xxx instruction
$47A    $8805   SUB      V8, V0          ; V8 -= V0, VF = !borrow
$47C    $A3F9   LD       I, $3F9         ; Load 3F9 into I
$47E    $E052   UNKNOWN  $E052           ; Unknown Exxx instruction
$480    $CBAD   RND      VB, #AD         ; VB = random & AD
$482    $D0B9   DRW      V0, VB, #9      ; Draw 9-byte sprite at V0, VB
$484    $5973   UNKNOWN  $5973           ; Unknown 5xxx instruction
$486    $2BA3   CALL     $BA3            ; Call subroutine at BA3
$488    $EA2B   UNKNOWN  $EA2B           ; Unknown Exxx instruction
$48A    $1905   JP       $905            ; Jump to 905
$48C    $9440   SNE      V4, V4          ; Skip if V4 != V4
$48E    $2695   CALL     $695            ; Call subroutine at 695
$490    $DA9C   DRW      VA, V9, #C      ; Draw 12-byte sprite at VA, V9
$492    $4B8F   SNE      VB, #8F         ; Skip if VB != 143
$494    $BE26   JP       V0, $E26        ; Jump to V0 + E26
$496    $B6DE   JP       V0, $6DE        ; Jump to V0 + 6DE
$498    $2CC1   CALL     $CC1            ; Call subroutine at CC1
$49A    $7857   ADD      V8, #57         ; Add 87 to V8
$49C    $48C7   SNE      V8, #C7         ; Skip if V8 != 199
$49E    $2A93   CALL     $A93            ; Call subroutine at A93
$4A0    $2A8A   CALL     $A8A            ; Call subroutine at A8A
$4A2    $7080   ADD      V0, #80         ; Add 128 to V0
$4A4    $F23B   UNKNOWN  F23B            ; Unknown Fxxx instruction
$4A6    $E0C0   UNKNOWN  $E0C0           ; Unknown Exxx instruction
$4A8    $3B60   SE       VB, #60         ; Skip if VB == 96
$4AA    $F34B   UNKNOWN  F34B            ; Unknown Fxxx instruction
$4AC    $C427   RND      V4, #27         ; V4 = random & 27
$4AE    $529D   UNKNOWN  $529D           ; Unknown 5xxx instruction
$4B0    $F590   UNKNOWN  F590            ; Unknown Fxxx instruction
$4B2    $46DD   SNE      V6, #DD         ; Skip if V6 != 221
$4B4    $04CE   SYS      $4CE            ; System call to 4CE
$4B6    $4FE4   SNE      VF, #E4         ; Skip if VF != 228
$4B8    $A830   LD       I, $830         ; Load 830 into I
$4BA    $61C9   LD       V1, #C9         ; Load 201 into V1
$4BC    $1179   JP       $179            ; Jump to 179
$4BE    $009B   SYS      $09B            ; System call to 09B
$4C0    $26B5   CALL     $6B5            ; Call subroutine at 6B5
$4C2    $7EE5   ADD      VE, #E5         ; Add 229 to VE
$4C4    $5E2B   UNKNOWN  $5E2B           ; Unknown 5xxx instruction
$4C6    $B6CE   JP       V0, $6CE        ; Jump to V0 + 6CE
$4C8    $A584   LD       I, $584         ; Load 584 into I
$4CA    $1F8E   JP       $F8E            ; Jump to F8E
$4CC    $91F2   UNKNOWN  $91F2           ; Unknown 9xxx instruction
$4CE    $ABE9   LD       I, $BE9         ; Load BE9 into I
$4D0    $1B86   JP       $B86            ; Jump to B86
$4D2    $E97B   UNKNOWN  $E97B           ; Unknown Exxx instruction
$4D4    $8EAA   UNKNOWN  8EAA            ; Unknown 8xxx instruction
$4D6    $650D   LD       V5, #0D         ; Load 13 into V5
$4D8    $DD70   DRW      VD, V7, #0      ; Draw 0-byte sprite at VD, V7
$4DA    $AA76   LD       I, $A76         ; Load A76 into I
$4DC    $91F7   UNKNOWN  $91F7           ; Unknown 9xxx instruction
$4DE    $9B37   UNKNOWN  $9B37           ; Unknown 9xxx instruction
$4E0    $8374   ADD      V3, V7          ; V3 += V7, VF = carry
$4E2    $E8C3   UNKNOWN  $E8C3           ; Unknown Exxx instruction
$4E4    $D6AE   DRW      V6, VA, #E      ; Draw 14-byte sprite at V6, VA
$4E6    $81EE   SHL      V1              ; V1 <<= 1, VF = MSB
$4E8    $2115   CALL     $115            ; Call subroutine at 115
$4EA    $7A42   ADD      VA, #42         ; Add 66 to VA
$4EC    $3249   SE       V2, #49         ; Skip if V2 == 73
$4EE    $456E   SNE      V5, #6E         ; Skip if V5 != 110
$4F0    $63EA   LD       V3, #EA         ; Load 234 into V3
$4F2    $B160   JP       V0, $160        ; Jump to V0 + 160
$4F4    $E530   UNKNOWN  $E530           ; Unknown Exxx instruction
$4F6    $30A8   SE       V0, #A8         ; Skip if V0 == 168
$4F8    $C2C2   RND      V2, #C2         ; V2 = random & C2
$4FA    $BBA7   JP       V0, $BA7        ; Jump to V0 + BA7
$4FC    $A2C1   LD       I, $2C1         ; Load 2C1 into I
$4FE    $6A2D   LD       VA, #2D         ; Load 45 into VA
$500    $96CA   UNKNOWN  $96CA           ; Unknown 9xxx instruction
$502    $91D1   UNKNOWN  $91D1           ; Unknown 9xxx instruction
$504    $7216   ADD      V2, #16         ; Add 22 to V2
$506    $DFCD   DRW      VF, VC, #D      ; Draw 13-byte sprite at VF, VC
$508    $693B   LD       V9, #3B         ; Load 59 into V9
$50A    $7CD2   ADD      VC, #D2         ; Add 210 to VC
$50C    $A19C   LD       I, $19C         ; Load 19C into I
$50E    $E056   UNKNOWN  $E056           ; Unknown Exxx instruction
$510    $B062   JP       V0, $062        ; Jump to V0 + 062
$512    $7C26   ADD      VC, #26         ; Add 38 to VC
$514    $506C   UNKNOWN  $506C           ; Unknown 5xxx instruction
$516    $F8E9   UNKNOWN  F8E9            ; Unknown Fxxx instruction
$518    $7826   ADD      V8, #26         ; Add 38 to V8
$51A    $E98D   UNKNOWN  $E98D           ; Unknown Exxx instruction
$51C    $3CDB   SE       VC, #DB         ; Skip if VC == 219
$51E    $7320   ADD      V3, #20         ; Add 32 to V3
$520    $2213   CALL     $213            ; Call subroutine at 213
$522    $0E96   SYS      $E96            ; System call to E96
$524    $5468   UNKNOWN  $5468           ; Unknown 5xxx instruction
$526    $1D15   JP       $D15            ; Jump to D15
$528    $FCBC   UNKNOWN  FCBC            ; Unknown Fxxx instruction
$52A    $8362   AND      V3, V6          ; V3 &= V6
$52C    $E35F   UNKNOWN  $E35F           ; Unknown Exxx instruction
$52E    $B639   JP       V0, $639        ; Jump to V0 + 639
$530    $E730   UNKNOWN  $E730           ; Unknown Exxx instruction
$532    $4311   SNE      V3, #11         ; Skip if V3 != 17
$534    $A07F   LD       I, $07F         ; Load 07F into I
$536    $7751   ADD      V7, #51         ; Add 81 to V7
$538    $1812   JP       $812            ; Jump to 812
$53A    $47DF   SNE      V7, #DF         ; Skip if V7 != 223
$53C    $2CC3   CALL     $CC3            ; Call subroutine at CC3
$53E    $B967   JP       V0, $967        ; Jump to V0 + 967
$540    $EA09   UNKNOWN  $EA09           ; Unknown Exxx instruction
$542    $9AC6   UNKNOWN  $9AC6           ; Unknown 9xxx instruction
$544    $C723   RND      V7, #23         ; V7 = random & 23
$546    $D89B   DRW      V8, V9, #B      ; Draw 11-byte sprite at V8, V9
$548    $B9EC   JP       V0, $9EC        ; Jump to V0 + 9EC
$54A    $BB45   JP       V0, $B45        ; Jump to V0 + B45
$54C    $81DE   SHL      V1              ; V1 <<= 1, VF = MSB
$54E    $54D2   UNKNOWN  $54D2           ; Unknown 5xxx instruction
$550    $6878   LD       V8, #78         ; Load 120 into V8
$552    $E899   UNKNOWN  $E899           ; Unknown Exxx instruction
$554    $2200   CALL     $200            ; Call subroutine at 200
$556    $B255   JP       V0, $255        ; Jump to V0 + 255
$558    $B5E0   JP       V0, $5E0        ; Jump to V0 + 5E0
$55A    $264D   CALL     $64D            ; Call subroutine at 64D
$55C    $7CA4   ADD      VC, #A4         ; Add 164 to VC
$55E    $5BE3   UNKNOWN  $5BE3           ; Unknown 5xxx instruction
$560    $1561   JP       $561            ; Jump to 561
$562    $5365   UNKNOWN  $5365           ; Unknown 5xxx instruction
$564    $7D14   ADD      VD, #14         ; Add 20 to VD
$566    $96A3   UNKNOWN  $96A3           ; Unknown 9xxx instruction
$568    $8004   ADD      V0, V0          ; V0 += V0, VF = carry
$56A    $6E24   LD       VE, #24         ; Load 36 into VE
$56C    $6ABF   LD       VA, #BF         ; Load 191 into VA
$56E    $1517   JP       $517            ; Jump to 517
$570    $C00D   RND      V0, #0D         ; V0 = random & 0D
$572    $F21B   UNKNOWN  F21B            ; Unknown Fxxx instruction
$574    $4183   SNE      V1, #83         ; Skip if V1 != 131
$576    $75AD   ADD      V5, #AD         ; Add 173 to V5
$578    $4F79   SNE      VF, #79         ; Skip if VF != 121
$57A    $37BC   SE       V7, #BC         ; Skip if V7 == 188
$57C    $DE09   DRW      VE, V0, #9      ; Draw 9-byte sprite at VE, V0
$57E    $BA6D   JP       V0, $A6D        ; Jump to V0 + A6D
$580    $ADDA   LD       I, $DDA         ; Load DDA into I
$582    $9803   UNKNOWN  $9803           ; Unknown 9xxx instruction
$584    $FC10   UNKNOWN  FC10            ; Unknown Fxxx instruction
$586    $4998   SNE      V9, #98         ; Skip if V9 != 152
$588    $7149   ADD      V1, #49         ; Add 73 to V1
$58A    $A2E9   LD       I, $2E9         ; Load 2E9 into I
$58C    $DC80   DRW      VC, V8, #0      ; Draw 0-byte sprite at VC, V8
$58E    $1B5F   JP       $B5F            ; Jump to B5F
$590    $7935   ADD      V9, #35         ; Add 53 to V9
$592    $619D   LD       V1, #9D         ; Load 157 into V1
$594    $DE08   DRW      VE, V0, #8      ; Draw 8-byte sprite at VE, V0
$596    $2DF0   CALL     $DF0            ; Call subroutine at DF0
$598    $DFA2   DRW      VF, VA, #2      ; Draw 2-byte sprite at VF, VA
$59A    $54A8   UNKNOWN  $54A8           ; Unknown 5xxx instruction
$59C    $2D19   CALL     $D19            ; Call subroutine at D19
$59E    $923A   UNKNOWN  $923A           ; Unknown 9xxx instruction
$5A0    $0B2A   SYS      $B2A            ; System call to B2A
$5A2    $CA48   RND      VA, #48         ; VA = random & 48
$5A4    $B641   JP       V0, $641        ; Jump to V0 + 641
$5A6    $F14C   UNKNOWN  F14C            ; Unknown Fxxx instruction
$5A8    $BC08   JP       V0, $C08        ; Jump to V0 + C08
$5AA    $02AC   SYS      $2AC            ; System call to 2AC
$5AC    $6C32   LD       VC, #32         ; Load 50 into VC
$5AE    $00AA   SYS      $0AA            ; System call to 0AA
$5B0    $F385   UNKNOWN  F385            ; Unknown Fxxx instruction
$5B2    $0642   SYS      $642            ; System call to 642
$5B4    $D09D   DRW      V0, V9, #D      ; Draw 13-byte sprite at V0, V9
$5B6    $9B25   UNKNOWN  $9B25           ; Unknown 9xxx instruction
$5B8    $5771   UNKNOWN  $5771           ; Unknown 5xxx instruction
$5BA    $FBE7   UNKNOWN  FBE7            ; Unknown Fxxx instruction
$5BC    $7555   ADD      V5, #55         ; Add 85 to V5
$5BE    $69DF   LD       V9, #DF         ; Load 223 into V9
$5C0    $C9F7   RND      V9, #F7         ; V9 = random & F7
$5C2    $5857   UNKNOWN  $5857           ; Unknown 5xxx instruction
$5C4    $C5E0   RND      V5, #E0         ; V5 = random & E0
$5C6    $BBF4   JP       V0, $BF4        ; Jump to V0 + BF4
$5C8    $19BB   JP       $9BB            ; Jump to 9BB
$5CA    $646C   LD       V4, #6C         ; Load 108 into V4
$5CC    $F930   UNKNOWN  F930            ; Unknown Fxxx instruction
$5CE    $1868   JP       $868            ; Jump to 868
$5D0    $F26F   UNKNOWN  F26F            ; Unknown Fxxx instruction
$5D2    $2942   CALL     $942            ; Call subroutine at 942
$5D4    $9FBE   UNKNOWN  $9FBE           ; Unknown 9xxx instruction
$5D6    $D372   DRW      V3, V7, #2      ; Draw 2-byte sprite at V3, V7
$5D8    $B51B   JP       V0, $51B        ; Jump to V0 + 51B
$5DA    $4DC8   SNE      VD, #C8         ; Skip if VD != 200
$5DC    $DAEF   DRW      VA, VE, #F      ; Draw 15-byte sprite at VA, VE
$5DE    $D3A5   DRW      V3, VA, #5      ; Draw 5-byte sprite at V3, VA
$5E0    $CC38   RND      VC, #38         ; VC = random & 38
$5E2    $3C1E   SE       VC, #1E         ; Skip if VC == 30
$5E4    $E356   UNKNOWN  $E356           ; Unknown Exxx instruction
$5E6    $5EF7   UNKNOWN  $5EF7           ; Unknown 5xxx instruction
$5E8    $C9E4   RND      V9, #E4         ; V9 = random & E4
$5EA    $6371   LD       V3, #71         ; Load 113 into V3
$5EC    $FB31   UNKNOWN  FB31            ; Unknown Fxxx instruction
$5EE    $267F   CALL     $67F            ; Call subroutine at 67F
$5F0    $279D   CALL     $79D            ; Call subroutine at 79D
$5F2    $4A0C   SNE      VA, #0C         ; Skip if VA != 12
$5F4    $D2FA   DRW      V2, VF, #A      ; Draw 10-byte sprite at V2, VF
$5F6    $B74F   JP       V0, $74F        ; Jump to V0 + 74F
$5F8    $207F   CALL     $07F            ; Call subroutine at 07F
$5FA    $4006   SNE      V0, #06         ; Skip if V0 != 6
$5FC    $52C0   SE       V2, VC          ; Skip if V2 == VC
$5FE    $8AF5   SUB      VA, VF          ; VA -= VF, VF = !borrow
$600    $57CA   UNKNOWN  $57CA           ; Unknown 5xxx instruction
$602    $D810   DRW      V8, V1, #0      ; Draw 0-byte sprite at V8, V1
$604    $9E33   UNKNOWN  $9E33           ; Unknown 9xxx instruction
$606    $D8AA   DRW      V8, VA, #A      ; Draw 10-byte sprite at V8, VA
$608    $F6F8   UNKNOWN  F6F8            ; Unknown Fxxx instruction
$60A    $F3DC   UNKNOWN  F3DC            ; Unknown Fxxx instruction
$60C    $408C   SNE      V0, #8C         ; Skip if V0 != 140
$60E    $FE80   UNKNOWN  FE80            ; Unknown Fxxx instruction
$610    $425C   SNE      V2, #5C         ; Skip if V2 != 92
$612    $0451   SYS      $451            ; System call to 451
$614    $9B5A   UNKNOWN  $9B5A           ; Unknown 9xxx instruction
$616    $8C90   LD       VC, V9          ; VC = V9
$618    $976E   UNKNOWN  $976E           ; Unknown 9xxx instruction
$61A    $DEBC   DRW      VE, VB, #C      ; Draw 12-byte sprite at VE, VB
$61C    $1EF3   JP       $EF3            ; Jump to EF3
$61E    $6648   LD       V6, #48         ; Load 72 into V6
$620    $A941   LD       I, $941         ; Load 941 into I
$622    $1CFA   JP       $CFA            ; Jump to CFA
$624    $96E3   UNKNOWN  $96E3           ; Unknown 9xxx instruction
$626    $04AB   SYS      $4AB            ; System call to 4AB
$628    $2980   CALL     $980            ; Call subroutine at 980
$62A    $523B   UNKNOWN  $523B           ; Unknown 5xxx instruction
$62C    $CE2D   RND      VE, #2D         ; VE = random & 2D
$62E    $3941   SE       V9, #41         ; Skip if V9 == 65
$630    $C176   RND      V1, #76         ; V1 = random & 76
$632    $5B8B   UNKNOWN  $5B8B           ; Unknown 5xxx instruction
$634    $CFA4   RND      VF, #A4         ; VF = random & A4
$636    $D5E1   DRW      V5, VE, #1      ; Draw 1-byte sprite at V5, VE
$638    $7BA0   ADD      VB, #A0         ; Add 160 to VB
$63A    $48F1   SNE      V8, #F1         ; Skip if V8 != 241
$63C    $B371   JP       V0, $371        ; Jump to V0 + 371
$63E    $47F8   SNE      V7, #F8         ; Skip if V7 != 248
$640    $A739   LD       I, $739         ; Load 739 into I
$642    $EE8D   UNKNOWN  $EE8D           ; Unknown Exxx instruction
$644    $0188   SYS      $188            ; System call to 188
$646    $C386   RND      V3, #86         ; V3 = random & 86
$648    $C650   RND      V6, #50         ; V6 = random & 50
$64A    $B3C4   JP       V0, $3C4        ; Jump to V0 + 3C4
$64C    $C1ED   RND      V1, #ED         ; V1 = random & ED
$64E    $0C14   SYS      $C14            ; System call to C14
$650    $2D9A   CALL     $D9A            ; Call subroutine at D9A
$652    $CA55   RND      VA, #55         ; VA = random & 55
$654    $A465   LD       I, $465         ; Load 465 into I
$656    $028D   SYS      $28D            ; System call to 28D
$658    $F7BE   UNKNOWN  F7BE            ; Unknown Fxxx instruction
$65A    $475F   SNE      V7, #5F         ; Skip if V7 != 95
$65C    $4E39   SNE      VE, #39         ; Skip if VE != 57
$65E    $A410   LD       I, $410         ; Load 410 into I
$660    $2007   CALL     $007            ; Call subroutine at 007
$662    $DE30   DRW      VE, V3, #0      ; Draw 0-byte sprite at VE, V3
$664    $0B09   SYS      $B09            ; System call to B09
$666    $69F7   LD       V9, #F7         ; Load 247 into V9
$668    $5ECE   UNKNOWN  $5ECE           ; Unknown 5xxx instruction
$66A    $BC6B   JP       V0, $C6B        ; Jump to V0 + C6B
$66C    $DD15   DRW      VD, V1, #5      ; Draw 5-byte sprite at VD, V1
$66E    $AC1B   LD       I, $C1B         ; Load C1B into I
$670    $E302   UNKNOWN  $E302           ; Unknown Exxx instruction
$672    $D431   DRW      V4, V3, #1      ; Draw 1-byte sprite at V4, V3
$674    $7DAB   ADD      VD, #AB         ; Add 171 to VD
$676    $1111   JP       $111            ; Jump to 111
$678    $0666   SYS      $666            ; System call to 666
$67A    $5F88   UNKNOWN  $5F88           ; Unknown 5xxx instruction
$67C    $2D41   CALL     $D41            ; Call subroutine at D41
$67E    $9465   UNKNOWN  $9465           ; Unknown 9xxx instruction
$680    $6EF5   LD       VE, #F5         ; Load 245 into VE
$682    $B424   JP       V0, $424        ; Jump to V0 + 424
$684    $9717   UNKNOWN  $9717           ; Unknown 9xxx instruction
$686    $4DB7   SNE      VD, #B7         ; Skip if VD != 183
$688    $73D4   ADD      V3, #D4         ; Add 212 to V3
$68A    $99CF   UNKNOWN  $99CF           ; Unknown 9xxx instruction
$68C    $A595   LD       I, $595         ; Load 595 into I
$68E    $FB3A   UNKNOWN  FB3A            ; Unknown Fxxx instruction
$690    $9635   UNKNOWN  $9635           ; Unknown 9xxx instruction
$692    $D1A2   DRW      V1, VA, #2      ; Draw 2-byte sprite at V1, VA
$694    $A194   LD       I, $194         ; Load 194 into I
$696    $FDB2   UNKNOWN  FDB2            ; Unknown Fxxx instruction
$698    $CA23   RND      VA, #23         ; VA = random & 23
$69A    $A601   LD       I, $601         ; Load 601 into I
$69C    $CD11   RND      VD, #11         ; VD = random & 11
$69E    $6840   LD       V8, #40         ; Load 64 into V8
$6A0    $41BF   SNE      V1, #BF         ; Skip if V1 != 191
$6A2    $ED39   UNKNOWN  $ED39           ; Unknown Exxx instruction
$6A4    $5A91   UNKNOWN  $5A91           ; Unknown 5xxx instruction
$6A6    $D128   DRW      V1, V2, #8      ; Draw 8-byte sprite at V1, V2
$6A8    $7534   ADD      V5, #34         ; Add 52 to V5
$6AA    $7FB3   ADD      VF, #B3         ; Add 179 to VF
$6AC    $D072   DRW      V0, V7, #2      ; Draw 2-byte sprite at V0, V7
$6AE    $E969   UNKNOWN  $E969           ; Unknown Exxx instruction
$6B0    $C964   RND      V9, #64         ; V9 = random & 64
$6B2    $3FDE   SE       VF, #DE         ; Skip if VF == 222
$6B4    $5FC3   UNKNOWN  $5FC3           ; Unknown 5xxx instruction
$6B6    $8760   LD       V7, V6          ; V7 = V6
$6B8    $4F0F   SNE      VF, #0F         ; Skip if VF != 15
$6BA    $9FD7   UNKNOWN  $9FD7           ; Unknown 9xxx instruction
$6BC    $F6B6   UNKNOWN  F6B6            ; Unknown Fxxx instruction
$6BE    $5897   UNKNOWN  $5897           ; Unknown 5xxx instruction
$6C0    $FAEC   UNKNOWN  FAEC            ; Unknown Fxxx instruction
$6C2    $B052   JP       V0, $052        ; Jump to V0 + 052
$6C4    $63B0   LD       V3, #B0         ; Load 176 into V3
$6C6    $D3C9   DRW      V3, VC, #9      ; Draw 9-byte sprite at V3, VC
$6C8    $D00A   DRW      V0, V0, #A      ; Draw 10-byte sprite at V0, V0
$6CA    $E1FB   UNKNOWN  $E1FB           ; Unknown Exxx instruction
$6CC    $4C0A   SNE      VC, #0A         ; Skip if VC != 10
$6CE    $E24D   UNKNOWN  $E24D           ; Unknown Exxx instruction
$6D0    $45C7   SNE      V5, #C7         ; Skip if V5 != 199
$6D2    $F570   UNKNOWN  F570            ; Unknown Fxxx instruction
$6D4    $A869   LD       I, $869         ; Load 869 into I
$6D6    $B65E   JP       V0, $65E        ; Jump to V0 + 65E
$6D8    $E13A   UNKNOWN  $E13A           ; Unknown Exxx instruction
$6DA    $C5E8   RND      V5, #E8         ; V5 = random & E8
$6DC    $05D2   SYS      $5D2            ; System call to 5D2
$6DE    $DD7A   DRW      VD, V7, #A      ; Draw 10-byte sprite at VD, V7
$6E0    $0908   SYS      $908            ; System call to 908
$6E2    $4ADF   SNE      VA, #DF         ; Skip if VA != 223
$6E4    $561C   UNKNOWN  $561C           ; Unknown 5xxx instruction
$6E6    $0964   SYS      $964            ; System call to 964
$6E8    $8841   OR       V8, V4          ; V8 |= V4
$6EA    $5009   UNKNOWN  $5009           ; Unknown 5xxx instruction
$6EC    $E7F0   UNKNOWN  $E7F0           ; Unknown Exxx instruction
$6EE    $4DAF   SNE      VD, #AF         ; Skip if VD != 175
$6F0    $9F7E   UNKNOWN  $9F7E           ; Unknown 9xxx instruction
$6F2    $09D3   SYS      $9D3            ; System call to 9D3
$6F4    $4624   SNE      V6, #24         ; Skip if V6 != 36
$6F6    $CA07   RND      VA, #07         ; VA = random & 07
$6F8    $0CF3   SYS      $CF3            ; System call to CF3
$6FA    $50C4   UNKNOWN  $50C4           ; Unknown 5xxx instruction
$6FC    $1C2B   JP       $C2B            ; Jump to C2B
$6FE    $FD50   UNKNOWN  FD50            ; Unknown Fxxx instruction
$700    $A07B   LD       I, $07B         ; Load 07B into I
$702    $7908   ADD      V9, #08         ; Add 8 to V9
$704    $EB2E   UNKNOWN  $EB2E           ; Unknown Exxx instruction
$706    $3143   SE       V1, #43         ; Skip if V1 == 67
$708    $804E   SHL      V0              ; V0 <<= 1, VF = MSB
$70A    $171C   JP       $71C            ; Jump to 71C
$70C    $2C59   CALL     $C59            ; Call subroutine at C59
$70E    $2597   CALL     $597            ; Call subroutine at 597
$710    $A9D5   LD       I, $9D5         ; Load 9D5 into I
$712    $E09F   UNKNOWN  $E09F           ; Unknown Exxx instruction
$714    $5A9D   UNKNOWN  $5A9D           ; Unknown 5xxx instruction
$716    $F2B1   UNKNOWN  F2B1            ; Unknown Fxxx instruction
$718    $6E4F   LD       VE, #4F         ; Load 79 into VE
$71A    $680A   LD       V8, #0A         ; Load 10 into V8
$71C    $CB35   RND      VB, #35         ; VB = random & 35
$71E    $4C77   SNE      VC, #77         ; Skip if VC != 119
$720    $9EEA   UNKNOWN  $9EEA           ; Unknown 9xxx instruction
$722    $F191   UNKNOWN  F191            ; Unknown Fxxx instruction
$724    $DDF9   DRW      VD, VF, #9      ; Draw 9-byte sprite at VD, VF
$726    $3294   SE       V2, #94         ; Skip if V2 == 148
$728    $AC90   LD       I, $C90         ; Load C90 into I
$72A    $C55A   RND      V5, #5A         ; V5 = random & 5A
$72C    $5399   UNKNOWN  $5399           ; Unknown 5xxx instruction
$72E    $DA96   DRW      VA, V9, #6      ; Draw 6-byte sprite at VA, V9
$730    $5913   UNKNOWN  $5913           ; Unknown 5xxx instruction
$732    $8EDD   UNKNOWN  8EDD            ; Unknown 8xxx instruction
$734    $9FDC   UNKNOWN  $9FDC           ; Unknown 9xxx instruction
$736    $5F29   UNKNOWN  $5F29           ; Unknown 5xxx instruction
$738    $73E2   ADD      V3, #E2         ; Add 226 to V3
$73A    $D9E0   DRW      V9, VE, #0      ; Draw 0-byte sprite at V9, VE
$73C    $C9F3   RND      V9, #F3         ; V9 = random & F3
$73E    $BEA9   JP       V0, $EA9        ; Jump to V0 + EA9
$740    $DDF3   DRW      VD, VF, #3      ; Draw 3-byte sprite at VD, VF
$742    $A092   LD       I, $092         ; Load 092 into I
$744    $31E8   SE       V1, #E8         ; Skip if V1 == 232
$746    $48E1   SNE      V8, #E1         ; Skip if V8 != 225
$748    $8CD3   XOR      VC, VD          ; VC ^= VD
$74A    $6072   LD       V0, #72         ; Load 114 into V0
$74C    $7F9C   ADD      VF, #9C         ; Add 156 to VF
$74E    $D004   DRW      V0, V0, #4      ; Draw 4-byte sprite at V0, V0
$750    $A40A   LD       I, $40A         ; Load 40A into I
$752    $7C59   ADD      VC, #59         ; Add 89 to VC
$754    $8A3C   UNKNOWN  8A3C            ; Unknown 8xxx instruction
$756    $A20F   LD       I, $20F         ; Load 20F into I
$758    $7C4B   ADD      VC, #4B         ; Add 75 to VC
$75A    $4C2F   SNE      VC, #2F         ; Skip if VC != 47
$75C    $3893   SE       V8, #93         ; Skip if V8 == 147
$75E    $E704   UNKNOWN  $E704           ; Unknown Exxx instruction
$760    $C8B1   RND      V8, #B1         ; V8 = random & B1
$762    $AFAB   LD       I, $FAB         ; Load FAB into I
$764    $AE51   LD       I, $E51         ; Load E51 into I
$766    $EA45   UNKNOWN  $EA45           ; Unknown Exxx instruction
$768    $8CDE   SHL      VC              ; VC <<= 1, VF = MSB
$76A    $3C12   SE       VC, #12         ; Skip if VC == 18
$76C    $2100   CALL     $100            ; Call subroutine at 100
$76E    $506D   UNKNOWN  $506D           ; Unknown 5xxx instruction
$770    $D158   DRW      V1, V5, #8      ; Draw 8-byte sprite at V1, V5
$772    $93B1   UNKNOWN  $93B1           ; Unknown 9xxx instruction
$774    $C3E3   RND      V3, #E3         ; V3 = random & E3
$776    $CD1C   RND      VD, #1C         ; VD = random & 1C
$778    $584E   UNKNOWN  $584E           ; Unknown 5xxx instruction
$77A    $E790   UNKNOWN  $E790           ; Unknown Exxx instruction
$77C    $FE97   UNKNOWN  FE97            ; Unknown Fxxx instruction
$77E    $63D0   LD       V3, #D0         ; Load 208 into V3
$780    $40AC   SNE      V0, #AC         ; Skip if V0 != 172
$782    $4114   SNE      V1, #14         ; Skip if V1 != 20
$784    $2ECF   CALL     $ECF            ; Call subroutine at ECF
$786    $AC24   LD       I, $C24         ; Load C24 into I
$788    $B046   JP       V0, $046        ; Jump to V0 + 046
$78A    $04B4   SYS      $4B4            ; System call to 4B4
$78C    $2436   CALL     $436            ; Call subroutine at 436
$78E    $2660   CALL     $660            ; Call subroutine at 660
$790    $E333   UNKNOWN  $E333           ; Unknown Exxx instruction
$792    $BC5E   JP       V0, $C5E        ; Jump to V0 + C5E
$794    $2595   CALL     $595            ; Call subroutine at 595
$796    $D76C   DRW      V7, V6, #C      ; Draw 12-byte sprite at V7, V6
$798    $1AA1   JP       $AA1            ; Jump to AA1
$79A    $57CE   UNKNOWN  $57CE           ; Unknown 5xxx instruction
$79C    $F306   UNKNOWN  F306            ; Unknown Fxxx instruction
$79E    $4819   SNE      V8, #19         ; Skip if V8 != 25
$7A0    $6EA7   LD       VE, #A7         ; Load 167 into VE
$7A2    $2FAF   CALL     $FAF            ; Call subroutine at FAF
$7A4    $767B   ADD      V6, #7B         ; Add 123 to V6
$7A6    $A439   LD       I, $439         ; Load 439 into I
$7A8    $66A8   LD       V6, #A8         ; Load 168 into V6
$7AA    $E78F   UNKNOWN  $E78F           ; Unknown Exxx instruction
$7AC    $43BE   SNE      V3, #BE         ; Skip if V3 != 190
$7AE    $3799   SE       V7, #99         ; Skip if V7 == 153
$7B0    $86D9   UNKNOWN  86D9            ; Unknown 8xxx instruction
$7B2    $0F4E   SYS      $F4E            ; System call to F4E
$7B4    $BF54   JP       V0, $F54        ; Jump to V0 + F54
$7B6    $23CE   CALL     $3CE            ; Call subroutine at 3CE
$7B8    $29EE   CALL     $9EE            ; Call subroutine at 9EE
$7BA    $3BF7   SE       VB, #F7         ; Skip if VB == 247
$7BC    $30D4   SE       V0, #D4         ; Skip if V0 == 212
$7BE    $E449   UNKNOWN  $E449           ; Unknown Exxx instruction
$7C0    $7A37   ADD      VA, #37         ; Add 55 to VA
$7C2    $AAEC   LD       I, $AEC         ; Load AEC into I
$7C4    $480B   SNE      V8, #0B         ; Skip if V8 != 11
$7C6    $89A3   XOR      V9, VA          ; V9 ^= VA
$7C8    $9709   UNKNOWN  $9709           ; Unknown 9xxx instruction
$7CA    $AC3F   LD       I, $C3F         ; Load C3F into I
$7CC    $A5DB   LD       I, $5DB         ; Load 5DB into I
$7CE    $686D   LD       V8, #6D         ; Load 109 into V8
$7D0    $28B1   CALL     $8B1            ; Call subroutine at 8B1
$7D2    $1C73   JP       $C73            ; Jump to C73
$7D4    $36AA   SE       V6, #AA         ; Skip if V6 == 170
$7D6    $BEDE   JP       V0, $EDE        ; Jump to V0 + EDE
$7D8    $74CD   ADD      V4, #CD         ; Add 205 to V4
$7DA    $9E0C   UNKNOWN  $9E0C           ; Unknown 9xxx instruction
$7DC    $FFE5   UNKNOWN  FFE5            ; Unknown Fxxx instruction
$7DE    $FAD0   UNKNOWN  FAD0            ; Unknown Fxxx instruction
$7E0    $2EB8   CALL     $EB8            ; Call subroutine at EB8
$7E2    $3487   SE       V4, #87         ; Skip if V4 == 135
$7E4    $15A4   JP       $5A4            ; Jump to 5A4
$7E6    $367E   SE       V6, #7E         ; Skip if V6 == 126
$7E8    $B592   JP       V0, $592        ; Jump to V0 + 592
$7EA    $B5DD   JP       V0, $5DD        ; Jump to V0 + 5DD
$7EC    $C217   RND      V2, #17         ; V2 = random & 17
$7EE    $5F2E   UNKNOWN  $5F2E           ; Unknown 5xxx instruction
$7F0    $F207   LD       V2, DT          ; V2 = delay timer
$7F2    $C839   RND      V8, #39         ; V8 = random & 39
$7F4    $802F   UNKNOWN  802F            ; Unknown 8xxx instruction
$7F6    $D418   DRW      V4, V1, #8      ; Draw 8-byte sprite at V4, V1
$7F8    $5A47   UNKNOWN  $5A47           ; Unknown 5xxx instruction
$7FA    $CAFC   RND      VA, #FC         ; VA = random & FC
$7FC    $95CF   UNKNOWN  $95CF           ; Unknown 9xxx instruction
$7FE    $FD95   UNKNOWN  FD95            ; Unknown Fxxx instruction
$800    $EBBA   UNKNOWN  $EBBA           ; Unknown Exxx instruction
$802    $95BA   UNKNOWN  $95BA           ; Unknown 9xxx instruction
$804    $53AE   UNKNOWN  $53AE           ; Unknown 5xxx instruction
$806    $4367   SNE      V3, #67         ; Skip if V3 != 103
$808    $BFB7   JP       V0, $FB7        ; Jump to V0 + FB7
$80A    $B50B   JP       V0, $50B        ; Jump to V0 + 50B
$80C    $D297   DRW      V2, V9, #7      ; Draw 7-byte sprite at V2, V9
$80E    $882F   UNKNOWN  882F            ; Unknown 8xxx instruction
$810    $22F9   CALL     $2F9            ; Call subroutine at 2F9
$812    $3D36   SE       VD, #36         ; Skip if VD == 54
$814    $DE14   DRW      VE, V1, #4      ; Draw 4-byte sprite at VE, V1
$816    $74E2   ADD      V4, #E2         ; Add 226 to V4
$818    $9396   UNKNOWN  $9396           ; Unknown 9xxx instruction
$81A    $14A6   JP       $4A6            ; Jump to 4A6
$81C    $2184   CALL     $184            ; Call subroutine at 184
$81E    $0351   SYS      $351            ; System call to 351
$820    $CBB3   RND      VB, #B3         ; VB = random & B3
$822    $9E86   UNKNOWN  $9E86           ; Unknown 9xxx instruction
$824    $4DFC   SNE      VD, #FC         ; Skip if VD != 252
$826    $4E57   SNE      VE, #57         ; Skip if VE != 87
$828    $FF39   UNKNOWN  FF39            ; Unknown Fxxx instruction
$82A    $B726   JP       V0, $726        ; Jump to V0 + 726
$82C    $5D09   UNKNOWN  $5D09           ; Unknown 5xxx instruction
$82E    $6D01   LD       VD, #01         ; Load 1 into VD
$830    $C6A7   RND      V6, #A7         ; V6 = random & A7
$832    $5C29   UNKNOWN  $5C29           ; Unknown 5xxx instruction
$834    $8B30   LD       VB, V3          ; VB = V3
$836    $A72F   LD       I, $72F         ; Load 72F into I
$838    $B596   JP       V0, $596        ; Jump to V0 + 596
$83A    $6247   LD       V2, #47         ; Load 71 into V2
$83C    $9C70   SNE      VC, V7          ; Skip if VC != V7
$83E    $BD32   JP       V0, $D32        ; Jump to V0 + D32
$840    $77AA   ADD      V7, #AA         ; Add 170 to V7
$842    $467D   SNE      V6, #7D         ; Skip if V6 != 125
$844    $903D   UNKNOWN  $903D           ; Unknown 9xxx instruction
$846    $3B3F   SE       VB, #3F         ; Skip if VB == 63
$848    $B527   JP       V0, $527        ; Jump to V0 + 527
$84A    $4307   SNE      V3, #07         ; Skip if V3 != 7
$84C    $B02B   JP       V0, $02B        ; Jump to V0 + 02B
$84E    $16E8   JP       $6E8            ; Jump to 6E8
$850    $64DF   LD       V4, #DF         ; Load 223 into V4
$852    $D4FF   DRW      V4, VF, #F      ; Draw 15-byte sprite at V4, VF
$854    $FCDE   UNKNOWN  FCDE            ; Unknown Fxxx instruction
$856    $670B   LD       V7, #0B         ; Load 11 into V7
$858    $8CEF   UNKNOWN  8CEF            ; Unknown 8xxx instruction
$85A    $7732   ADD      V7, #32         ; Add 50 to V7
$85C    $14B8   JP       $4B8            ; Jump to 4B8
$85E    $2DB0   CALL     $DB0            ; Call subroutine at DB0
$860    $4B16   SNE      VB, #16         ; Skip if VB != 22
$862    $87A3   XOR      V7, VA          ; V7 ^= VA
$864    $FF20   UNKNOWN  FF20            ; Unknown Fxxx instruction
$866    $25C4   CALL     $5C4            ; Call subroutine at 5C4
$868    $9575   UNKNOWN  $9575           ; Unknown 9xxx instruction
$86A    $5210   SE       V2, V1          ; Skip if V2 == V1
$86C    $2509   CALL     $509            ; Call subroutine at 509
$86E    $FA5C   UNKNOWN  FA5C            ; Unknown Fxxx instruction
$870    $BBE7   JP       V0, $BE7        ; Jump to V0 + BE7
$872    $B6EA   JP       V0, $6EA        ; Jump to V0 + 6EA
$874    $32DE   SE       V2, #DE         ; Skip if V2 == 222
$876    $5924   UNKNOWN  $5924           ; Unknown 5xxx instruction
$878    $CCD8   RND      VC, #D8         ; VC = random & D8
$87A    $9040   SNE      V0, V4          ; Skip if V0 != V4
$87C    $D6CE   DRW      V6, VC, #E      ; Draw 14-byte sprite at V6, VC
$87E    $0506   SYS      $506            ; System call to 506
$880    $9B98   UNKNOWN  $9B98           ; Unknown 9xxx instruction
$882    $8163   XOR      V1, V6          ; V1 ^= V6
$884    $5424   UNKNOWN  $5424           ; Unknown 5xxx instruction
$886    $9465   UNKNOWN  $9465           ; Unknown 9xxx instruction
$888    $F3DC   UNKNOWN  F3DC            ; Unknown Fxxx instruction
$88A    $26FE   CALL     $6FE            ; Call subroutine at 6FE
$88C    $0D56   SYS      $D56            ; System call to D56
$88E    $3063   SE       V0, #63         ; Skip if V0 == 99
$890    $191F   JP       $91F            ; Jump to 91F
$892    $7677   ADD      V6, #77         ; Add 119 to V6
$894    $3EF8   SE       VE, #F8         ; Skip if VE == 248
$896    $42AF   SNE      V2, #AF         ; Skip if V2 != 175
$898    $2EB3   CALL     $EB3            ; Call subroutine at EB3
$89A    $9BAA   UNKNOWN  $9BAA           ; Unknown 9xxx instruction
$89C    $863E   SHL      V6              ; V6 <<= 1, VF = MSB
$89E    $C3DC   RND      V3, #DC         ; V3 = random & DC
$8A0    $57AF   UNKNOWN  $57AF           ; Unknown 5xxx instruction
$8A2    $B975   JP       V0, $975        ; Jump to V0 + 975
$8A4    $66E8   LD       V6, #E8         ; Load 232 into V6
$8A6    $9C9A   UNKNOWN  $9C9A           ; Unknown 9xxx instruction
$8A8    $8B86   SHR      VB              ; VB >>= 1, VF = LSB
$8AA    $2E79   CALL     $E79            ; Call subroutine at E79
$8AC    $4C7E   SNE      VC, #7E         ; Skip if VC != 126
$8AE    $1A1D   JP       $A1D            ; Jump to A1D
$8B0    $4193   SNE      V1, #93         ; Skip if V1 != 147
$8B2    $7C61   ADD      VC, #61         ; Add 97 to VC
$8B4    $1E56   JP       $E56            ; Jump to E56
$8B6    $D0D6   DRW      V0, VD, #6      ; Draw 6-byte sprite at V0, VD
$8B8    $8A1A   UNKNOWN  8A1A            ; Unknown 8xxx instruction
$8BA    $48BD   SNE      V8, #BD         ; Skip if V8 != 189
$8BC    $F69D   UNKNOWN  F69D            ; Unknown Fxxx instruction
$8BE    $5788   UNKNOWN  $5788           ; Unknown 5xxx instruction
$8C0    $4E7E   SNE      VE, #7E         ; Skip if VE != 126
$8C2    $34DD   SE       V4, #DD         ; Skip if V4 == 221
$8C4    $2A5B   CALL     $A5B            ; Call subroutine at A5B
$8C6    $26B1   CALL     $6B1            ; Call subroutine at 6B1
$8C8    $0414   SYS      $414            ; System call to 414
$8CA    $F501   UNKNOWN  F501            ; Unknown Fxxx instruction
$8CC    $6884   LD       V8, #84         ; Load 132 into V8
$8CE    $2FA6   CALL     $FA6            ; Call subroutine at FA6
$8D0    $089E   SYS      $89E            ; System call to 89E
$8D2    $CC36   RND      VC, #36         ; VC = random & 36
$8D4    $8F41   OR       VF, V4          ; VF |= V4
$8D6    $2702   CALL     $702            ; Call subroutine at 702
$8D8    $1DDE   JP       $DDE            ; Jump to DDE
$8DA    $4C08   SNE      VC, #08         ; Skip if VC != 8
$8DC    $9446   UNKNOWN  $9446           ; Unknown 9xxx instruction
$8DE    $D505   DRW      V5, V0, #5      ; Draw 5-byte sprite at V5, V0
$8E0    $75A6   ADD      V5, #A6         ; Add 166 to V5
$8E2    $4B54   SNE      VB, #54         ; Skip if VB != 84
$8E4    $7308   ADD      V3, #08         ; Add 8 to V3
$8E6    $6BC3   LD       VB, #C3         ; Load 195 into VB
$8E8    $7FD4   ADD      VF, #D4         ; Add 212 to VF
$8EA    $305E   SE       V0, #5E         ; Skip if V0 == 94
$8EC    $58A6   UNKNOWN  $58A6           ; Unknown 5xxx instruction
$8EE    $1FC4   JP       $FC4            ; Jump to FC4
$8F0    $7B3E   ADD      VB, #3E         ; Add 62 to VB
$8F2    $672B   LD       V7, #2B         ; Load 43 into V7
$8F4    $0012   SYS      $012            ; System call to 012
$8F6    $BDB8   JP       V0, $DB8        ; Jump to V0 + DB8
$8F8    $AF17   LD       I, $F17         ; Load F17 into I
$8FA    $B0FD   JP       V0, $0FD        ; Jump to V0 + 0FD
$8FC    $E8AA   UNKNOWN  $E8AA           ; Unknown Exxx instruction
$8FE    $A85E   LD       I, $85E         ; Load 85E into I
$900    $409F   SNE      V0, #9F         ; Skip if V0 != 159
$902    $8196   SHR      V1              ; V1 >>= 1, VF = LSB
$904    $D365   DRW      V3, V6, #5      ; Draw 5-byte sprite at V3, V6
$906    $3090   SE       V0, #90         ; Skip if V0 == 144
$908    $C696   RND      V6, #96         ; V6 = random & 96
$90A    $9387   UNKNOWN  $9387           ; Unknown 9xxx instruction
$90C    $DAF1   DRW      VA, VF, #1      ; Draw 1-byte sprite at VA, VF
$90E    $DCAA   DRW      VC, VA, #A      ; Draw 10-byte sprite at VC, VA
$910    $3A79   SE       VA, #79         ; Skip if VA == 121
$912    $56A2   UNKNOWN  $56A2           ; Unknown 5xxx instruction
$914    $912A   UNKNOWN  $912A           ; Unknown 9xxx instruction
$916    $307F   SE       V0, #7F         ; Skip if V0 == 127
$918    $092F   SYS      $92F            ; System call to 92F
$91A    $0B89   SYS      $B89            ; System call to B89
$91C    $2B43   CALL     $B43            ; Call subroutine at B43
$91E    $F7D2   UNKNOWN  F7D2            ; Unknown Fxxx instruction
$920    $E9F6   UNKNOWN  $E9F6           ; Unknown Exxx instruction
$922    $31B7   SE       V1, #B7         ; Skip if V1 == 183
$924    $810D   UNKNOWN  810D            ; Unknown 8xxx instruction
$926    $27FA   CALL     $7FA            ; Call subroutine at 7FA
$928    $6EFF   LD       VE, #FF         ; Load 255 into VE
$92A    $A696   LD       I, $696         ; Load 696 into I
$92C    $8771   OR       V7, V7          ; V7 |= V7
$92E    $6EF0   LD       VE, #F0         ; Load 240 into VE
$930    $329A   SE       V2, #9A         ; Skip if V2 == 154
$932    $7C88   ADD      VC, #88         ; Add 136 to VC
$934    $5593   UNKNOWN  $5593           ; Unknown 5xxx instruction
$936    $3225   SE       V2, #25         ; Skip if V2 == 37
$938    $A5AA   LD       I, $5AA         ; Load 5AA into I
$93A    $F182   UNKNOWN  F182            ; Unknown Fxxx instruction
$93C    $55F7   UNKNOWN  $55F7           ; Unknown 5xxx instruction
$93E    $4F86   SNE      VF, #86         ; Skip if VF != 134
$940    $1524   JP       $524            ; Jump to 524
$942    $C814   RND      V8, #14         ; V8 = random & 14
$944    $AB7A   LD       I, $B7A         ; Load B7A into I
$946    $348F   SE       V4, #8F         ; Skip if V4 == 143
$948    $4C25   SNE      VC, #25         ; Skip if VC != 37
$94A    $16BC   JP       $6BC            ; Jump to 6BC
$94C    $FB29   LD       F, VB           ; I = sprite address for digit VB
$94E    $0FC8   SYS      $FC8            ; System call to FC8
$950    $733B   ADD      V3, #3B         ; Add 59 to V3
$952    $B99F   JP       V0, $99F        ; Jump to V0 + 99F
$954    $10AD   JP       $0AD            ; Jump to 0AD
$956    $8E50   LD       VE, V5          ; VE = V5
$958    $FF66   UNKNOWN  FF66            ; Unknown Fxxx instruction
$95A    $5E37   UNKNOWN  $5E37           ; Unknown 5xxx instruction
$95C    $4217   SNE      V2, #17         ; Skip if V2 != 23
$95E    $470A   SNE      V7, #0A         ; Skip if V7 != 10
$960    $206F   CALL     $06F            ; Call subroutine at 06F
$962    $0E1C   SYS      $E1C            ; System call to E1C
$964    $4035   SNE      V0, #35         ; Skip if V0 != 53
$966    $6933   LD       V9, #33         ; Load 51 into V9
$968    $796E   ADD      V9, #6E         ; Add 110 to V9
$96A    $75D4   ADD      V5, #D4         ; Add 212 to V5
$96C    $C5DA   RND      V5, #DA         ; V5 = random & DA
$96E    $9E3D   UNKNOWN  $9E3D           ; Unknown 9xxx instruction
$970    $F19B   UNKNOWN  F19B            ; Unknown Fxxx instruction
$972    $FE14   UNKNOWN  FE14            ; Unknown Fxxx instruction
$974    $778A   ADD      V7, #8A         ; Add 138 to V7
$976    $3E6C   SE       VE, #6C         ; Skip if VE == 108
$978    $2542   CALL     $542            ; Call subroutine at 542
$97A    $22F4   CALL     $2F4            ; Call subroutine at 2F4
$97C    $0429   SYS      $429            ; System call to 429
$97E    $EBEC   UNKNOWN  $EBEC           ; Unknown Exxx instruction
$980    $D0CB   DRW      V0, VC, #B      ; Draw 11-byte sprite at V0, VC
$982    $292F   CALL     $92F            ; Call subroutine at 92F
$984    $C102   RND      V1, #02         ; V1 = random & 02
$986    $7465   ADD      V4, #65         ; Add 101 to V4
$988    $E87A   UNKNOWN  $E87A           ; Unknown Exxx instruction
$98A    $B546   JP       V0, $546        ; Jump to V0 + 546
$98C    $18D1   JP       $8D1            ; Jump to 8D1
$98E    $3C1B   SE       VC, #1B         ; Skip if VC == 27
$990    $700C   ADD      V0, #0C         ; Add 12 to V0
$992    $368D   SE       V6, #8D         ; Skip if V6 == 141
$994    $BDE0   JP       V0, $DE0        ; Jump to V0 + DE0
$996    $BFE7   JP       V0, $FE7        ; Jump to V0 + FE7
$998    $9422   UNKNOWN  $9422           ; Unknown 9xxx instruction
$99A    $FC45   UNKNOWN  FC45            ; Unknown Fxxx instruction
$99C    $4D79   SNE      VD, #79         ; Skip if VD != 121
$99E    $A979   LD       I, $979         ; Load 979 into I
$9A0    $0181   SYS      $181            ; System call to 181
$9A2    $96F1   UNKNOWN  $96F1           ; Unknown 9xxx instruction
$9A4    $7B8B   ADD      VB, #8B         ; Add 139 to VB
$9A6    $EA3B   UNKNOWN  $EA3B           ; Unknown Exxx instruction
$9A8    $E70E   UNKNOWN  $E70E           ; Unknown Exxx instruction
$9AA    $7A54   ADD      VA, #54         ; Add 84 to VA
$9AC    $F055   LD       [I], V0         ; Store V0-V0 at I
$9AE    $EDCA   UNKNOWN  $EDCA           ; Unknown Exxx instruction
$9B0    $2764   CALL     $764            ; Call subroutine at 764
$9B2    $70E1   ADD      V0, #E1         ; Add 225 to V0
$9B4    $EE2B   UNKNOWN  $EE2B           ; Unknown Exxx instruction
$9B6    $8343   XOR      V3, V4          ; V3 ^= V4
$9B8    $B8CD   JP       V0, $8CD        ; Jump to V0 + 8CD
$9BA    $AE0F   LD       I, $E0F         ; Load E0F into I
$9BC    $B3FF   JP       V0, $3FF        ; Jump to V0 + 3FF
$9BE    $B25A   JP       V0, $25A        ; Jump to V0 + 25A
$9C0    $0A6A   SYS      $A6A            ; System call to A6A
$9C2    $69BE   LD       V9, #BE         ; Load 190 into V9
$9C4    $6067   LD       V0, #67         ; Load 103 into V0
$9C6    $7BAA   ADD      VB, #AA         ; Add 170 to VB
$9C8    $D229   DRW      V2, V2, #9      ; Draw 9-byte sprite at V2, V2
$9CA    $AB8D   LD       I, $B8D         ; Load B8D into I
$9CC    $9246   UNKNOWN  $9246           ; Unknown 9xxx instruction
$9CE    $9C0E   UNKNOWN  $9C0E           ; Unknown 9xxx instruction
$9D0    $E6F8   UNKNOWN  $E6F8           ; Unknown Exxx instruction
$9D2    $137F   JP       $37F            ; Jump to 37F
$9D4    $531F   UNKNOWN  $531F           ; Unknown 5xxx instruction
$9D6    $E57A   UNKNOWN  $E57A           ; Unknown Exxx instruction
$9D8    $7F82   ADD      VF, #82         ; Add 130 to VF
$9DA    $0238   SYS      $238            ; System call to 238
$9DC    $F795   UNKNOWN  F795            ; Unknown Fxxx instruction
$9DE    $9EB4   UNKNOWN  $9EB4           ; Unknown 9xxx instruction
$9E0    $2F30   CALL     $F30            ; Call subroutine at F30
$9E2    $F4E8   UNKNOWN  F4E8            ; Unknown Fxxx instruction
$9E4    $3F69   SE       VF, #69         ; Skip if VF == 105
$9E6    $C78E   RND      V7, #8E         ; V7 = random & 8E
$9E8    $8107   SUBN     V1, V0          ; V1 = V0 - V1, VF = !borrow
$9EA    $497A   SNE      V9, #7A         ; Skip if V9 != 122
$9EC    $9C18   UNKNOWN  $9C18           ; Unknown 9xxx instruction
$9EE    $15E6   JP       $5E6            ; Jump to 5E6
$9F0    $5B88   UNKNOWN  $5B88           ; Unknown 5xxx instruction
$9F2    $4740   SNE      V7, #40         ; Skip if V7 != 64
$9F4    $FA35   UNKNOWN  FA35            ; Unknown Fxxx instruction
$9F6    $11CA   JP       $1CA            ; Jump to 1CA
$9F8    $61AA   LD       V1, #AA         ; Load 170 into V1
$9FA    $5B25   UNKNOWN  $5B25           ; Unknown 5xxx instruction
$9FC    $B51D   JP       V0, $51D        ; Jump to V0 + 51D
$9FE    $F1B2   UNKNOWN  F1B2            ; Unknown Fxxx instruction
$A00    $00E3   SYS      $0E3            ; System call to 0E3
$A02    $1A74   JP       $A74            ; Jump to A74
$A04    $825C   UNKNOWN  825C            ; Unknown 8xxx instruction
$A06    $A30E   LD       I, $30E         ; Load 30E into I
$A08    $D4E8   DRW      V4, VE, #8      ; Draw 8-byte sprite at V4, VE
$A0A    $AF6C   LD       I, $F6C         ; Load F6C into I
$A0C    $079E   SYS      $79E            ; System call to 79E
$A0E    $39A5   SE       V9, #A5         ; Skip if V9 == 165
$A10    $DC47   DRW      VC, V4, #7      ; Draw 7-byte sprite at VC, V4
$A12    $D2ED   DRW      V2, VE, #D      ; Draw 13-byte sprite at V2, VE
$A14    $D0FF   DRW      V0, VF, #F      ; Draw 15-byte sprite at V0, VF
$A16    $AE15   LD       I, $E15         ; Load E15 into I
$A18    $4FCF   SNE      VF, #CF         ; Skip if VF != 207
$A1A    $4F26   SNE      VF, #26         ; Skip if VF != 38
$A1C    $7171   ADD      V1, #71         ; Add 113 to V1
$A1E    $61BD   LD       V1, #BD         ; Load 189 into V1
$A20    $C8E5   RND      V8, #E5         ; V8 = random & E5
$A22    $F4D5   UNKNOWN  F4D5            ; Unknown Fxxx instruction
$A24    $82F0   LD       V2, VF          ; V2 = VF
$A26    $2BF1   CALL     $BF1            ; Call subroutine at BF1
$A28    $E789   UNKNOWN  $E789           ; Unknown Exxx instruction
$A2A    $228C   CALL     $28C            ; Call subroutine at 28C
$A2C    $D4DB   DRW      V4, VD, #B      ; Draw 11-byte sprite at V4, VD
$A2E    $1F42   JP       $F42            ; Jump to F42
$A30    $3144   SE       V1, #44         ; Skip if V1 == 68
$A32    $055D   SYS      $55D            ; System call to 55D
$A34    $BBB6   JP       V0, $BB6        ; Jump to V0 + BB6
$A36    $72A6   ADD      V2, #A6         ; Add 166 to V2
$A38    $F5DA   UNKNOWN  F5DA            ; Unknown Fxxx instruction
$A3A    $617B   LD       V1, #7B         ; Load 123 into V1
$A3C    $4740   SNE      V7, #40         ; Skip if V7 != 64
$A3E    $613D   LD       V1, #3D         ; Load 61 into V1
$A40    $ED7F   UNKNOWN  $ED7F           ; Unknown Exxx instruction
$A42    $203E   CALL     $03E            ; Call subroutine at 03E
$A44    $378D   SE       V7, #8D         ; Skip if V7 == 141
$A46    $6F9A   LD       VF, #9A         ; Load 154 into VF
$A48    $9D5A   UNKNOWN  $9D5A           ; Unknown 9xxx instruction
$A4A    $9172   UNKNOWN  $9172           ; Unknown 9xxx instruction
$A4C    $0F92   SYS      $F92            ; System call to F92
$A4E    $C85B   RND      V8, #5B         ; V8 = random & 5B
$A50    $99EA   UNKNOWN  $99EA           ; Unknown 9xxx instruction
$A52    $AF4B   LD       I, $F4B         ; Load F4B into I
$A54    $1A1D   JP       $A1D            ; Jump to A1D
$A56    $56F6   UNKNOWN  $56F6           ; Unknown 5xxx instruction
$A58    $591D   UNKNOWN  $591D           ; Unknown 5xxx instruction
$A5A    $63C4   LD       V3, #C4         ; Load 196 into V3
$A5C    $F951   UNKNOWN  F951            ; Unknown Fxxx instruction
$A5E    $F19F   UNKNOWN  F19F            ; Unknown Fxxx instruction
$A60    $7733   ADD      V7, #33         ; Add 51 to V7
$A62    $5EA1   UNKNOWN  $5EA1           ; Unknown 5xxx instruction
$A64    $9D28   UNKNOWN  $9D28           ; Unknown 9xxx instruction
$A66    $B0AE   JP       V0, $0AE        ; Jump to V0 + 0AE
$A68    $11B4   JP       $1B4            ; Jump to 1B4
$A6A    $6A46   LD       VA, #46         ; Load 70 into VA
$A6C    $DCE2   DRW      VC, VE, #2      ; Draw 2-byte sprite at VC, VE
$A6E    $1899   JP       $899            ; Jump to 899
$A70    $B480   JP       V0, $480        ; Jump to V0 + 480
$A72    $C1E9   RND      V1, #E9         ; V1 = random & E9
$A74    $BD17   JP       V0, $D17        ; Jump to V0 + D17
$A76    $A225   LD       I, $225         ; Load 225 into I
$A78    $8381   OR       V3, V8          ; V3 |= V8
$A7A    $8202   AND      V2, V0          ; V2 &= V0
$A7C    $58AE   UNKNOWN  $58AE           ; Unknown 5xxx instruction
$A7E    $8D94   ADD      VD, V9          ; VD += V9, VF = carry
$A80    $1883   JP       $883            ; Jump to 883
$A82    $6F39   LD       VF, #39         ; Load 57 into VF
$A84    $AB0C   LD       I, $B0C         ; Load B0C into I
$A86    $F9A6   UNKNOWN  F9A6            ; Unknown Fxxx instruction
$A88    $60C4   LD       V0, #C4         ; Load 196 into V0
$A8A    $E102   UNKNOWN  $E102           ; Unknown Exxx instruction
$A8C    $DBDE   DRW      VB, VD, #E      ; Draw 14-byte sprite at VB, VD
$A8E    $A305   LD       I, $305         ; Load 305 into I
$A90    $7DEB   ADD      VD, #EB         ; Add 235 to VD
$A92    $1629   JP       $629            ; Jump to 629
$A94    $54AF   UNKNOWN  $54AF           ; Unknown 5xxx instruction
$A96    $D78A   DRW      V7, V8, #A      ; Draw 10-byte sprite at V7, V8
$A98    $14A6   JP       $4A6            ; Jump to 4A6
$A9A    $86AF   UNKNOWN  86AF            ; Unknown 8xxx instruction
$A9C    $AACD   LD       I, $ACD         ; Load ACD into I
$A9E    $24C9   CALL     $4C9            ; Call subroutine at 4C9
$AA0    $472F   SNE      V7, #2F         ; Skip if V7 != 47
$AA2    $7635   ADD      V6, #35         ; Add 53 to V6
$AA4    $033E   SYS      $33E            ; System call to 33E
$AA6    $1AD4   JP       $AD4            ; Jump to AD4
$AA8    $2638   CALL     $638            ; Call subroutine at 638
$AAA    $9F18   UNKNOWN  $9F18           ; Unknown 9xxx instruction
$AAC    $FCF3   UNKNOWN  FCF3            ; Unknown Fxxx instruction
$AAE    $730E   ADD      V3, #0E         ; Add 14 to V3
$AB0    $E8BB   UNKNOWN  $E8BB           ; Unknown Exxx instruction
$AB2    $3E14   SE       VE, #14         ; Skip if VE == 20
$AB4    $19C5   JP       $9C5            ; Jump to 9C5
$AB6    $6609   LD       V6, #09         ; Load 9 into V6
$AB8    $007A   SYS      $07A            ; System call to 07A
$ABA    $13B8   JP       $3B8            ; Jump to 3B8
$ABC    $4333   SNE      V3, #33         ; Skip if V3 != 51
$ABE    $6540   LD       V5, #40         ; Load 64 into V5
$AC0    $003D   SYS      $03D            ; System call to 03D
$AC2    $2049   CALL     $049            ; Call subroutine at 049
$AC4    $990E   UNKNOWN  $990E           ; Unknown 9xxx instruction
$AC6    $B836   JP       V0, $836        ; Jump to V0 + 836
$AC8    $D7F0   DRW      V7, VF, #0      ; Draw 0-byte sprite at V7, VF
$ACA    $E0E6   UNKNOWN  $E0E6           ; Unknown Exxx instruction
$ACC    $1060   JP       $060            ; Jump to 060
$ACE    $5765   UNKNOWN  $5765           ; Unknown 5xxx instruction
$AD0    $0F90   SYS      $F90            ; System call to F90
$AD2    $C284   RND      V2, #84         ; V2 = random & 84
$AD4    $4343   SNE      V3, #43         ; Skip if V3 != 67
$AD6    $4E04   SNE      VE, #04         ; Skip if VE != 4
$AD8    $D357   DRW      V3, V5, #7      ; Draw 7-byte sprite at V3, V5
$ADA    $F535   UNKNOWN  F535            ; Unknown Fxxx instruction
$ADC    $1629   JP       $629            ; Jump to 629
$ADE    $FC99   UNKNOWN  FC99            ; Unknown Fxxx instruction
$AE0    $9D18   UNKNOWN  $9D18           ; Unknown 9xxx instruction
$AE2    $AFF7   LD       I, $FF7         ; Load FF7 into I
$AE4    $4381   SNE      V3, #81         ; Skip if V3 != 129
$AE6    $148C   JP       $48C            ; Jump to 48C
$AE8    $ECE7   UNKNOWN  $ECE7           ; Unknown Exxx instruction
$AEA    $4D68   SNE      VD, #68         ; Skip if VD != 104
$AEC    $7DF6   ADD      VD, #F6         ; Add 246 to VD
$AEE    $554E   UNKNOWN  $554E           ; Unknown 5xxx instruction
$AF0    $D610   DRW      V6, V1, #0      ; Draw 0-byte sprite at V6, V1
$AF2    $0062   SYS      $062            ; System call to 062
$AF4    $AF5D   LD       I, $F5D         ; Load F5D into I
$AF6    $3AB6   SE       VA, #B6         ; Skip if VA == 182
$AF8    $36EB   SE       V6, #EB         ; Skip if V6 == 235
$AFA    $B48D   JP       V0, $48D        ; Jump to V0 + 48D
$AFC    $624D   LD       V2, #4D         ; Load 77 into V2
$AFE    $31FF   SE       V1, #FF         ; Skip if V1 == 255
$B00    $DB71   DRW      VB, V7, #1      ; Draw 1-byte sprite at VB, V7
$B02    $05ED   SYS      $5ED            ; System call to 5ED
$B04    $77D1   ADD      V7, #D1         ; Add 209 to V7
$B06    $2155   CALL     $155            ; Call subroutine at 155
$B08    $AF17   LD       I, $F17         ; Load F17 into I
$B0A    $1E63   JP       $E63            ; Jump to E63
$B0C    $4799   SNE      V7, #99         ; Skip if V7 != 153
$B0E    $1384   JP       $384            ; Jump to 384
$B10    $9EF0   SNE      VE, VF          ; Skip if VE != VF
$B12    $5E31   UNKNOWN  $5E31           ; Unknown 5xxx instruction
$B14    $E33E   UNKNOWN  $E33E           ; Unknown Exxx instruction
$B16    $E8A1   SKNP     V8              ; Skip if key V8 not pressed
$B18    $2718   CALL     $718            ; Call subroutine at 718
$B1A    $411D   SNE      V1, #1D         ; Skip if V1 != 29
$B1C    $DAE2   DRW      VA, VE, #2      ; Draw 2-byte sprite at VA, VE
$B1E    $2DA4   CALL     $DA4            ; Call subroutine at DA4
$B20    $6A23   LD       VA, #23         ; Load 35 into VA
$B22    $6A0D   LD       VA, #0D         ; Load 13 into VA
$B24    $3B07   SE       VB, #07         ; Skip if VB == 7
$B26    $C1F3   RND      V1, #F3         ; V1 = random & F3
$B28    $AE47   LD       I, $E47         ; Load E47 into I
$B2A    $C530   RND      V5, #30         ; V5 = random & 30
$B2C    $307B   SE       V0, #7B         ; Skip if V0 == 123
$B2E    $6725   LD       V7, #25         ; Load 37 into V7
$B30    $B0A7   JP       V0, $0A7        ; Jump to V0 + 0A7
$B32    $2895   CALL     $895            ; Call subroutine at 895
$B34    $C04D   RND      V0, #4D         ; V0 = random & 4D
$B36    $25E8   CALL     $5E8            ; Call subroutine at 5E8
$B38    $2C67   CALL     $C67            ; Call subroutine at C67
$B3A    $B320   JP       V0, $320        ; Jump to V0 + 320
$B3C    $F319   UNKNOWN  F319            ; Unknown Fxxx instruction
$B3E    $B286   JP       V0, $286        ; Jump to V0 + 286
$B40    $C751   RND      V7, #51         ; V7 = random & 51
$B42    $7FD6   ADD      VF, #D6         ; Add 214 to VF
$B44    $16ED   JP       $6ED            ; Jump to 6ED
$B46    $365A   SE       V6, #5A         ; Skip if V6 == 90
$B48    $97B0   SNE      V7, VB          ; Skip if V7 != VB
$B4A    $2149   CALL     $149            ; Call subroutine at 149
$B4C    $3A73   SE       VA, #73         ; Skip if VA == 115
$B4E    $B746   JP       V0, $746        ; Jump to V0 + 746
$B50    $43DF   SNE      V3, #DF         ; Skip if V3 != 223
$B52    $BDFD   JP       V0, $DFD        ; Jump to V0 + DFD
$B54    $D9BF   DRW      V9, VB, #F      ; Draw 15-byte sprite at V9, VB
$B56    $0ED5   SYS      $ED5            ; System call to ED5
$B58    $69A5   LD       V9, #A5         ; Load 165 into V9
$B5A    $AEBE   LD       I, $EBE         ; Load EBE into I
$B5C    $A072   LD       I, $072         ; Load 072 into I
$B5E    $551B   UNKNOWN  $551B           ; Unknown 5xxx instruction
$B60    $AF36   LD       I, $F36         ; Load F36 into I
$B62    $7626   ADD      V6, #26         ; Add 38 to V6
$B64    $611C   LD       V1, #1C         ; Load 28 into V1
$B66    $9AB6   UNKNOWN  $9AB6           ; Unknown 9xxx instruction
$B68    $D6D2   DRW      V6, VD, #2      ; Draw 2-byte sprite at V6, VD
$B6A    $343A   SE       V4, #3A         ; Skip if V4 == 58
$B6C    $03DB   SYS      $3DB            ; System call to 3DB
$B6E    $7DB6   ADD      VD, #B6         ; Add 182 to VD
$B70    $9FEA   UNKNOWN  $9FEA           ; Unknown 9xxx instruction
$B72    $D8FB   DRW      V8, VF, #B      ; Draw 11-byte sprite at V8, VF
$B74    $1A5C   JP       $A5C            ; Jump to A5C
$B76    $162D   JP       $62D            ; Jump to 62D
$B78    $8EF7   SUBN     VE, VF          ; VE = VF - VE, VF = !borrow
$B7A    $4168   SNE      V1, #68         ; Skip if V1 != 104
$B7C    $4EA9   SNE      VE, #A9         ; Skip if VE != 169
$B7E    $B693   JP       V0, $693        ; Jump to V0 + 693
$B80    $7EA6   ADD      VE, #A6         ; Add 166 to VE
$B82    $3DD2   SE       VD, #D2         ; Skip if VD == 210
$B84    $5435   UNKNOWN  $5435           ; Unknown 5xxx instruction
$B86    $EEFA   UNKNOWN  $EEFA           ; Unknown Exxx instruction
$B88    $7090   ADD      V0, #90         ; Add 144 to V0
$B8A    $E04A   UNKNOWN  $E04A           ; Unknown Exxx instruction
$B8C    $044E   SYS      $44E            ; System call to 44E
$B8E    $7A95   ADD      VA, #95         ; Add 149 to VA
$B90    $A95F   LD       I, $95F         ; Load 95F into I
$B92    $DB08   DRW      VB, V0, #8      ; Draw 8-byte sprite at VB, V0
$B94    $9D3B   UNKNOWN  $9D3B           ; Unknown 9xxx instruction
$B96    $D663   DRW      V6, V6, #3      ; Draw 3-byte sprite at V6, V6
$B98    $901E   UNKNOWN  $901E           ; Unknown 9xxx instruction
$B9A    $AAA2   LD       I, $AA2         ; Load AA2 into I
$B9C    $5AE9   UNKNOWN  $5AE9           ; Unknown 5xxx instruction
$B9E    $3C91   SE       VC, #91         ; Skip if VC == 145
$BA0    $35D3   SE       V5, #D3         ; Skip if V5 == 211
$BA2    $9791   UNKNOWN  $9791           ; Unknown 9xxx instruction
$BA4    $990F   UNKNOWN  $990F           ; Unknown 9xxx instruction
$BA6    $4AD5   SNE      VA, #D5         ; Skip if VA != 213
$BA8    $A9CB   LD       I, $9CB         ; Load 9CB into I
$BAA    $2A77   CALL     $A77            ; Call subroutine at A77
$BAC    $C59B   RND      V5, #9B         ; V5 = random & 9B
$BAE    $E445   UNKNOWN  $E445           ; Unknown Exxx instruction
$BB0    $6529   LD       V5, #29         ; Load 41 into V5
$BB2    $BDB7   JP       V0, $DB7        ; Jump to V0 + DB7
$BB4    $D514   DRW      V5, V1, #4      ; Draw 4-byte sprite at V5, V1
$BB6    $417A   SNE      V1, #7A         ; Skip if V1 != 122
$BB8    $DE73   DRW      VE, V7, #3      ; Draw 3-byte sprite at VE, V7
$BBA    $6B61   LD       VB, #61         ; Load 97 into VB
$BBC    $ABF7   LD       I, $BF7         ; Load BF7 into I
$BBE    $8C04   ADD      VC, V0          ; VC += V0, VF = carry
$BC0    $7F6C   ADD      VF, #6C         ; Add 108 to VF
$BC2    $A81F   LD       I, $81F         ; Load 81F into I
$BC4    $A719   LD       I, $719         ; Load 719 into I
$BC6    $AF44   LD       I, $F44         ; Load F44 into I
$BC8    $4823   SNE      V8, #23         ; Skip if V8 != 35
$BCA    $8D4E   SHL      VD              ; VD <<= 1, VF = MSB
$BCC    $7A93   ADD      VA, #93         ; Add 147 to VA
$BCE    $DB1B   DRW      VB, V1, #B      ; Draw 11-byte sprite at VB, V1
$BD0    $7987   ADD      V9, #87         ; Add 135 to V9
$BD2    $3490   SE       V4, #90         ; Skip if V4 == 144
$BD4    $BE6B   JP       V0, $E6B        ; Jump to V0 + E6B
$BD6    $8362   AND      V3, V6          ; V3 &= V6
$BD8    $ABC5   LD       I, $BC5         ; Load BC5 into I
$BDA    $03F9   SYS      $3F9            ; System call to 3F9
$BDC    $E56E   UNKNOWN  $E56E           ; Unknown Exxx instruction
$BDE    $0A30   SYS      $A30            ; System call to A30
$BE0    $5D33   UNKNOWN  $5D33           ; Unknown 5xxx instruction
$BE2    $36B6   SE       V6, #B6         ; Skip if V6 == 182
$BE4    $4C52   SNE      VC, #52         ; Skip if VC != 82
$BE6    $3EE4   SE       VE, #E4         ; Skip if VE == 228
$BE8    $2893   CALL     $893            ; Call subroutine at 893
$BEA    $5F18   UNKNOWN  $5F18           ; Unknown 5xxx instruction
$BEC    $1CB5   JP       $CB5            ; Jump to CB5
$BEE    $F5AC   UNKNOWN  F5AC            ; Unknown Fxxx instruction
$BF0    $F84B   UNKNOWN  F84B            ; Unknown Fxxx instruction
$BF2    $C16F   RND      V1, #6F         ; V1 = random & 6F
$BF4    $317C   SE       V1, #7C         ; Skip if V1 == 124
$BF6    $A408   LD       I, $408         ; Load 408 into I
$BF8    $6C9A   LD       VC, #9A         ; Load 154 into VC
$BFA    $48EC   SNE      V8, #EC         ; Skip if V8 != 236
$BFC    $CD27   RND      VD, #27         ; VD = random & 27
$BFE    $7E0D   ADD      VE, #0D         ; Add 13 to VE
$C00    $EFDD   UNKNOWN  $EFDD           ; Unknown Exxx instruction
$C02    $B06E   JP       V0, $06E        ; Jump to V0 + 06E
$C04    $EF70   UNKNOWN  $EF70           ; Unknown Exxx instruction
$C06    $AF6A   LD       I, $F6A         ; Load F6A into I
$C08    $C5B7   RND      V5, #B7         ; V5 = random & B7
$C0A    $3668   SE       V6, #68         ; Skip if V6 == 104
$C0C    $8859   UNKNOWN  8859            ; Unknown 8xxx instruction
$C0E    $A2AF   LD       I, $2AF         ; Load 2AF into I
$C10    $FE56   UNKNOWN  FE56            ; Unknown Fxxx instruction
$C12    $64B2   LD       V4, #B2         ; Load 178 into V4
$C14    $2C1A   CALL     $C1A            ; Call subroutine at C1A
$C16    $2BB4   CALL     $BB4            ; Call subroutine at BB4
$C18    $353F   SE       V5, #3F         ; Skip if V5 == 63
$C1A    $71CC   ADD      V1, #CC         ; Add 204 to V1
$C1C    $EA21   UNKNOWN  $EA21           ; Unknown Exxx instruction
$C1E    $6B9C   LD       VB, #9C         ; Load 156 into VB
$C20    $3230   SE       V2, #30         ; Skip if V2 == 48
$C22    $F6EE   UNKNOWN  F6EE            ; Unknown Fxxx instruction
$C24    $EACD   UNKNOWN  $EACD           ; Unknown Exxx instruction
$C26    $F167   UNKNOWN  F167            ; Unknown Fxxx instruction
$C28    $B6E2   JP       V0, $6E2        ; Jump to V0 + 6E2
$C2A    $DDE9   DRW      VD, VE, #9      ; Draw 9-byte sprite at VD, VE
$C2C    $62CF   LD       V2, #CF         ; Load 207 into V2
$C2E    $57E0   SE       V7, VE          ; Skip if V7 == VE
$C30    $7D19   ADD      VD, #19         ; Add 25 to VD
$C32    $F1DB   UNKNOWN  F1DB            ; Unknown Fxxx instruction
$C34    $2D33   CALL     $D33            ; Call subroutine at D33
$C36    $6A62   LD       VA, #62         ; Load 98 into VA
$C38    $8E97   SUBN     VE, V9          ; VE = V9 - VE, VF = !borrow
$C3A    $7931   ADD      V9, #31         ; Add 49 to V9
$C3C    $A4E2   LD       I, $4E2         ; Load 4E2 into I
$C3E    $9FAD   UNKNOWN  $9FAD           ; Unknown 9xxx instruction
$C40    $3226   SE       V2, #26         ; Skip if V2 == 38
$C42    $F549   UNKNOWN  F549            ; Unknown Fxxx instruction
$C44    $A7F4   LD       I, $7F4         ; Load 7F4 into I
$C46    $E52B   UNKNOWN  $E52B           ; Unknown Exxx instruction
$C48    $C63F   RND      V6, #3F         ; V6 = random & 3F
$C4A    $ED1A   UNKNOWN  $ED1A           ; Unknown Exxx instruction
$C4C    $5321   UNKNOWN  $5321           ; Unknown 5xxx instruction
$C4E    $5DD5   UNKNOWN  $5DD5           ; Unknown 5xxx instruction
$C50    $ECD1   UNKNOWN  $ECD1           ; Unknown Exxx instruction
$C52    $E046   UNKNOWN  $E046           ; Unknown Exxx instruction
$C54    $8D97   SUBN     VD, V9          ; VD = V9 - VD, VF = !borrow
$C56    $96D6   UNKNOWN  $96D6           ; Unknown 9xxx instruction
$C58    $EC98   UNKNOWN  $EC98           ; Unknown Exxx instruction
$C5A    $A56E   LD       I, $56E         ; Load 56E into I
$C5C    $C994   RND      V9, #94         ; V9 = random & 94
$C5E    $BB29   JP       V0, $B29        ; Jump to V0 + B29
$C60    $5FFB   UNKNOWN  $5FFB           ; Unknown 5xxx instruction
$C62    $14FC   JP       $4FC            ; Jump to 4FC
$C64    $ED05   UNKNOWN  $ED05           ; Unknown Exxx instruction
$C66    $2EA8   CALL     $EA8            ; Call subroutine at EA8
$C68    $4328   SNE      V3, #28         ; Skip if V3 != 40
$C6A    $B05B   JP       V0, $05B        ; Jump to V0 + 05B
$C6C    $930C   UNKNOWN  $930C           ; Unknown 9xxx instruction
$C6E    $18F5   JP       $8F5            ; Jump to 8F5
$C70    $C63A   RND      V6, #3A         ; V6 = random & 3A
$C72    $B1A1   JP       V0, $1A1        ; Jump to V0 + 1A1
$C74    $C10B   RND      V1, #0B         ; V1 = random & 0B
$C76    $38EA   SE       V8, #EA         ; Skip if V8 == 234
$C78    $D716   DRW      V7, V1, #6      ; Draw 6-byte sprite at V7, V1
$C7A    $06FF   SYS      $6FF            ; System call to 6FF
$C7C    $1140   JP       $140            ; Jump to 140
$C7E    $9724   UNKNOWN  $9724           ; Unknown 9xxx instruction
$C80    $4BFE   SNE      VB, #FE         ; Skip if VB != 254
$C82    $79AE   ADD      V9, #AE         ; Add 174 to V9
$C84    $896F   UNKNOWN  896F            ; Unknown 8xxx instruction
$C86    $54ED   UNKNOWN  $54ED           ; Unknown 5xxx instruction
$C88    $45EE   SNE      V5, #EE         ; Skip if V5 != 238
$C8A    $1F24   JP       $F24            ; Jump to F24
$C8C    $22AE   CALL     $2AE            ; Call subroutine at 2AE
$C8E    $BAA9   JP       V0, $AA9        ; Jump to V0 + AA9
$C90    $235E   CALL     $35E            ; Call subroutine at 35E
$C92    $00EF   SYS      $0EF            ; System call to 0EF
$C94    $C17F   RND      V1, #7F         ; V1 = random & 7F
$C96    $0A96   SYS      $A96            ; System call to A96
$C98    $983E   UNKNOWN  $983E           ; Unknown 9xxx instruction
$C9A    $D4DA   DRW      V4, VD, #A      ; Draw 10-byte sprite at V4, VD
$C9C    $EBAC   UNKNOWN  $EBAC           ; Unknown Exxx instruction
$C9E    $3B13   SE       VB, #13         ; Skip if VB == 19
$CA0    $4DAF   SNE      VD, #AF         ; Skip if VD != 175
$CA2    $3070   SE       V0, #70         ; Skip if V0 == 112
$CA4    $6DA1   LD       VD, #A1         ; Load 161 into VD
$CA6    $F72A   UNKNOWN  F72A            ; Unknown Fxxx instruction
$CA8    $2E93   CALL     $E93            ; Call subroutine at E93
$CAA    $3280   SE       V2, #80         ; Skip if V2 == 128
$CAC    $D98F   DRW      V9, V8, #F      ; Draw 15-byte sprite at V9, V8
$CAE    $EF3E   UNKNOWN  $EF3E           ; Unknown Exxx instruction
$CB0    $A424   LD       I, $424         ; Load 424 into I
$CB2    $0279   SYS      $279            ; System call to 279
$CB4    $C648   RND      V6, #48         ; V6 = random & 48
$CB6    $FBCC   UNKNOWN  FBCC            ; Unknown Fxxx instruction
$CB8    $7758   ADD      V7, #58         ; Add 88 to V7
$CBA    $8AB6   SHR      VA              ; VA >>= 1, VF = LSB
$CBC    $A1F7   LD       I, $1F7         ; Load 1F7 into I
$CBE    $6D43   LD       VD, #43         ; Load 67 into VD
$CC0    $FB9A   UNKNOWN  FB9A            ; Unknown Fxxx instruction
$CC2    $21E8   CALL     $1E8            ; Call subroutine at 1E8
$CC4    $FEA3   UNKNOWN  FEA3            ; Unknown Fxxx instruction
$CC6    $ED78   UNKNOWN  $ED78           ; Unknown Exxx instruction
$CC8    $3AB8   SE       VA, #B8         ; Skip if VA == 184
$CCA    $BAB5   JP       V0, $AB5        ; Jump to V0 + AB5
$CCC    $6EFD   LD       VE, #FD         ; Load 253 into VE
$CCE    $CDCB   RND      VD, #CB         ; VD = random & CB
$CD0    $3E6B   SE       VE, #6B         ; Skip if VE == 107
$CD2    $E50E   UNKNOWN  $E50E           ; Unknown Exxx instruction
$CD4    $6C29   LD       VC, #29         ; Load 41 into VC
$CD6    $228E   CALL     $28E            ; Call subroutine at 28E
$CD8    $3FEA   SE       VF, #EA         ; Skip if VF == 234
$CDA    $092E   SYS      $92E            ; System call to 92E
$CDC    $F3E3   UNKNOWN  F3E3            ; Unknown Fxxx instruction
$CDE    $4144   SNE      V1, #44         ; Skip if V1 != 68
$CE0    $A34F   LD       I, $34F         ; Load 34F into I
$CE2    $109C   JP       $09C            ; Jump to 09C
$CE4    $D036   DRW      V0, V3, #6      ; Draw 6-byte sprite at V0, V3
$CE6    $0363   SYS      $363            ; System call to 363
$CE8    $7416   ADD      V4, #16         ; Add 22 to V4
$CEA    $AC07   LD       I, $C07         ; Load C07 into I
$CEC    $F69F   UNKNOWN  F69F            ; Unknown Fxxx instruction
$CEE    $9463   UNKNOWN  $9463           ; Unknown 9xxx instruction
$CF0    $03CA   SYS      $3CA            ; System call to 3CA
$CF2    $8907   SUBN     V9, V0          ; V9 = V0 - V9, VF = !borrow
$CF4    $410B   SNE      V1, #0B         ; Skip if V1 != 11
$CF6    $19F3   JP       $9F3            ; Jump to 9F3
$CF8    $D461   DRW      V4, V6, #1      ; Draw 1-byte sprite at V4, V6
$CFA    $D8CD   DRW      V8, VC, #D      ; Draw 13-byte sprite at V8, VC
$CFC    $DD39   DRW      VD, V3, #9      ; Draw 9-byte sprite at VD, V3
$CFE    $3B86   SE       VB, #86         ; Skip if VB == 134
$D00    $76A8   ADD      V6, #A8         ; Add 168 to V6
$D02    $C0A9   RND      V0, #A9         ; V0 = random & A9
$D04    $3280   SE       V2, #80         ; Skip if V2 == 128
$D06    $C810   RND      V8, #10         ; V8 = random & 10
$D08    $939A   UNKNOWN  $939A           ; Unknown 9xxx instruction
$D0A    $8E39   UNKNOWN  8E39            ; Unknown 8xxx instruction
$D0C    $853B   UNKNOWN  853B            ; Unknown 8xxx instruction
$D0E    $D38F   DRW      V3, V8, #F      ; Draw 15-byte sprite at V3, V8
$D10    $A860   LD       I, $860         ; Load 860 into I
$D12    $2740   CALL     $740            ; Call subroutine at 740
$D14    $68A2   LD       V8, #A2         ; Load 162 into V8
$D16    $6CF2   LD       VC, #F2         ; Load 242 into VC
$D18    $1E7B   JP       $E7B            ; Jump to E7B
$D1A    $F671   UNKNOWN  F671            ; Unknown Fxxx instruction
$D1C    $A51A   LD       I, $51A         ; Load 51A into I
$D1E    $C027   RND      V0, #27         ; V0 = random & 27
$D20    $8546   SHR      V5              ; V5 >>= 1, VF = LSB
$D22    $5F3D   UNKNOWN  $5F3D           ; Unknown 5xxx instruction
$D24    $C9A5   RND      V9, #A5         ; V9 = random & A5
$D26    $6425   LD       V4, #25         ; Load 37 into V4
$D28    $A0B7   LD       I, $0B7         ; Load 0B7 into I
$D2A    $4E09   SNE      VE, #09         ; Skip if VE != 9
$D2C    $85F1   OR       V5, VF          ; V5 |= VF
$D2E    $7539   ADD      V5, #39         ; Add 57 to V5
$D30    $D45A   DRW      V4, V5, #A      ; Draw 10-byte sprite at V4, V5
$D32    $878B   UNKNOWN  878B            ; Unknown 8xxx instruction
$D34    $E822   UNKNOWN  $E822           ; Unknown Exxx instruction
$D36    $0A71   SYS      $A71            ; System call to A71
$D38    $A148   LD       I, $148         ; Load 148 into I
$D3A    $47AF   SNE      V7, #AF         ; Skip if V7 != 175
$D3C    $DF98   DRW      VF, V9, #8      ; Draw 8-byte sprite at VF, V9
$D3E    $64AB   LD       V4, #AB         ; Load 171 into V4
$D40    $AD44   LD       I, $D44         ; Load D44 into I
$D42    $F994   UNKNOWN  F994            ; Unknown Fxxx instruction
$D44    $9998   UNKNOWN  $9998           ; Unknown 9xxx instruction
$D46    $B37D   JP       V0, $37D        ; Jump to V0 + 37D
$D48    $F66A   UNKNOWN  F66A            ; Unknown Fxxx instruction
$D4A    $0E29   SYS      $E29            ; System call to E29
$D4C    $DEAA   DRW      VE, VA, #A      ; Draw 10-byte sprite at VE, VA
$D4E    $4423   SNE      V4, #23         ; Skip if V4 != 35
$D50    $7870   ADD      V8, #70         ; Add 112 to V8
$D52    $EC39   UNKNOWN  $EC39           ; Unknown Exxx instruction
$D54    $FDE8   UNKNOWN  FDE8            ; Unknown Fxxx instruction
$D56    $F834   UNKNOWN  F834            ; Unknown Fxxx instruction
$D58    $A243   LD       I, $243         ; Load 243 into I
$D5A    $6D76   LD       VD, #76         ; Load 118 into VD
$D5C    $B1AC   JP       V0, $1AC        ; Jump to V0 + 1AC
$D5E    $5693   UNKNOWN  $5693           ; Unknown 5xxx instruction
$D60    $2FDC   CALL     $FDC            ; Call subroutine at FDC
$D62    $D02A   DRW      V0, V2, #A      ; Draw 10-byte sprite at V0, V2
$D64    $9522   UNKNOWN  $9522           ; Unknown 9xxx instruction
$D66    $4881   SNE      V8, #81         ; Skip if V8 != 129
$D68    $6B9D   LD       VB, #9D         ; Load 157 into VB
$D6A    $74A1   ADD      V4, #A1         ; Add 161 to V4
$D6C    $EDB2   UNKNOWN  $EDB2           ; Unknown Exxx instruction
$D6E    $4551   SNE      V5, #51         ; Skip if V5 != 81
$D70    $C092   RND      V0, #92         ; V0 = random & 92
$D72    $CB78   RND      VB, #78         ; VB = random & 78
$D74    $F03B   UNKNOWN  F03B            ; Unknown Fxxx instruction
$D76    $D720   DRW      V7, V2, #0      ; Draw 0-byte sprite at V7, V2
$D78    $CB82   RND      VB, #82         ; VB = random & 82
$D7A    $41DB   SNE      V1, #DB         ; Skip if V1 != 219
$D7C    $A603   LD       I, $603         ; Load 603 into I
$D7E    $0CAD   SYS      $CAD            ; System call to CAD
$D80    $79D8   ADD      V9, #D8         ; Add 216 to V9
$D82    $BD88   JP       V0, $D88        ; Jump to V0 + D88
$D84    $A147   LD       I, $147         ; Load 147 into I
$D86    $83E9   UNKNOWN  83E9            ; Unknown 8xxx instruction
$D88    $7AAC   ADD      VA, #AC         ; Add 172 to VA
$D8A    $A655   LD       I, $655         ; Load 655 into I
$D8C    $543D   UNKNOWN  $543D           ; Unknown 5xxx instruction
$D8E    $DD6A   DRW      VD, V6, #A      ; Draw 10-byte sprite at VD, V6
$D90    $C930   RND      V9, #30         ; V9 = random & 30
$D92    $370F   SE       V7, #0F         ; Skip if V7 == 15
$D94    $4FD8   SNE      VF, #D8         ; Skip if VF != 216
$D96    $EE6E   UNKNOWN  $EE6E           ; Unknown Exxx instruction
$D98    $6FEC   LD       VF, #EC         ; Load 236 into VF
$D9A    $D8BA   DRW      V8, VB, #A      ; Draw 10-byte sprite at V8, VB
$D9C    $9B61   UNKNOWN  $9B61           ; Unknown 9xxx instruction
$D9E    $17A1   JP       $7A1            ; Jump to 7A1
$DA0    $9A8F   UNKNOWN  $9A8F           ; Unknown 9xxx instruction
$DA2    $6A97   LD       VA, #97         ; Load 151 into VA
$DA4    $62C4   LD       V2, #C4         ; Load 196 into V2
$DA6    $B2BB   JP       V0, $2BB        ; Jump to V0 + 2BB
$DA8    $263D   CALL     $63D            ; Call subroutine at 63D
$DAA    $8E5D   UNKNOWN  8E5D            ; Unknown 8xxx instruction
$DAC    $1DCB   JP       $DCB            ; Jump to DCB
$DAE    $8DAC   UNKNOWN  8DAC            ; Unknown 8xxx instruction
$DB0    $9B09   UNKNOWN  $9B09           ; Unknown 9xxx instruction
$DB2    $213F   CALL     $13F            ; Call subroutine at 13F
$DB4    $3DE9   SE       VD, #E9         ; Skip if VD == 233
$DB6    $BC92   JP       V0, $C92        ; Jump to V0 + C92
$DB8    $43C7   SNE      V3, #C7         ; Skip if V3 != 199
$DBA    $65B8   LD       V5, #B8         ; Load 184 into V5
$DBC    $3C2D   SE       VC, #2D         ; Skip if VC == 45
$DBE    $B96A   JP       V0, $96A        ; Jump to V0 + 96A
$DC0    $3E12   SE       VE, #12         ; Skip if VE == 18
$DC2    $4745   SNE      V7, #45         ; Skip if V7 != 69
$DC4    $2DEE   CALL     $DEE            ; Call subroutine at DEE
$DC6    $0E79   SYS      $E79            ; System call to E79
$DC8    $E5B5   UNKNOWN  $E5B5           ; Unknown Exxx instruction
$DCA    $2894   CALL     $894            ; Call subroutine at 894
$DCC    $49D4   SNE      V9, #D4         ; Skip if V9 != 212
$DCE    $07CC   SYS      $7CC            ; System call to 7CC
$DD0    $0097   SYS      $097            ; System call to 097
$DD2    $1F93   JP       $F93            ; Jump to F93
$DD4    $B751   JP       V0, $751        ; Jump to V0 + 751
$DD6    $845E   SHL      V4              ; V4 <<= 1, VF = MSB
$DD8    $8210   LD       V2, V1          ; V2 = V1
$DDA    $C0C6   RND      V0, #C6         ; V0 = random & C6
$DDC    $8D84   ADD      VD, V8          ; VD += V8, VF = carry
$DDE    $0EBD   SYS      $EBD            ; System call to EBD
$DE0    $6CD8   LD       VC, #D8         ; Load 216 into VC
$DE2    $A5DC   LD       I, $5DC         ; Load 5DC into I
$DE4    $A82E   LD       I, $82E         ; Load 82E into I
$DE6    $71A4   ADD      V1, #A4         ; Add 164 to V1
$DE8    $85F1   OR       V5, VF          ; V5 |= VF
$DEA    $5B7A   UNKNOWN  $5B7A           ; Unknown 5xxx instruction
$DEC    $35A4   SE       V5, #A4         ; Skip if V5 == 164
$DEE    $A76D   LD       I, $76D         ; Load 76D into I
$DF0    $5B39   UNKNOWN  $5B39           ; Unknown 5xxx instruction
$DF2    $7504   ADD      V5, #04         ; Add 4 to V5
$DF4    $3143   SE       V1, #43         ; Skip if V1 == 67
$DF6    $909C   UNKNOWN  $909C           ; Unknown 9xxx instruction
$DF8    $BCA9   JP       V0, $CA9        ; Jump to V0 + CA9
$DFA    $9969   UNKNOWN  $9969           ; Unknown 9xxx instruction
$DFC    $40E3   SNE      V0, #E3         ; Skip if V0 != 227
$DFE    $D7E2   DRW      V7, VE, #2      ; Draw 2-byte sprite at V7, VE
$E00    $24A8   CALL     $4A8            ; Call subroutine at 4A8
$E02    $D20C   DRW      V2, V0, #C      ; Draw 12-byte sprite at V2, V0
$E04    $882B   UNKNOWN  882B            ; Unknown 8xxx instruction
$E06    $3A35   SE       VA, #35         ; Skip if VA == 53
$E08    $193A   JP       $93A            ; Jump to 93A
$E0A    $C9FF   RND      V9, #FF         ; V9 = random & FF
$E0C    $3B39   SE       VB, #39         ; Skip if VB == 57
$E0E    $375A   SE       V7, #5A         ; Skip if V7 == 90
$E10    $6E07   LD       VE, #07         ; Load 7 into VE
$E12    $1CE6   JP       $CE6            ; Jump to CE6
$E14    $86E1   OR       V6, VE          ; V6 |= VE
$E16    $0692   SYS      $692            ; System call to 692
$E18    $BE0D   JP       V0, $E0D        ; Jump to V0 + E0D
$E1A    $B97A   JP       V0, $97A        ; Jump to V0 + 97A
$E1C    $70BB   ADD      V0, #BB         ; Add 187 to V0
$E1E    $8187   SUBN     V1, V8          ; V1 = V8 - V1, VF = !borrow
$E20    $57B8   UNKNOWN  $57B8           ; Unknown 5xxx instruction
$E22    $9B06   UNKNOWN  $9B06           ; Unknown 9xxx instruction
$E24    $59CD   UNKNOWN  $59CD           ; Unknown 5xxx instruction
$E26    $F807   LD       V8, DT          ; V8 = delay timer
$E28    $1111   JP       $111            ; Jump to 111
$E2A    $AA21   LD       I, $A21         ; Load A21 into I
$E2C    $7BEE   ADD      VB, #EE         ; Add 238 to VB
$E2E    $AE4F   LD       I, $E4F         ; Load E4F into I
$E30    $8B5C   UNKNOWN  8B5C            ; Unknown 8xxx instruction
$E32    $B87C   JP       V0, $87C        ; Jump to V0 + 87C
$E34    $D1A4   DRW      V1, VA, #4      ; Draw 4-byte sprite at V1, VA
$E36    $0C97   SYS      $C97            ; System call to C97
$E38    $913C   UNKNOWN  $913C           ; Unknown 9xxx instruction
$E3A    $1976   JP       $976            ; Jump to 976
$E3C    $6966   LD       V9, #66         ; Load 102 into V9
$E3E    $4A91   SNE      VA, #91         ; Skip if VA != 145
$E40    $D934   DRW      V9, V3, #4      ; Draw 4-byte sprite at V9, V3
$E42    $626E   LD       V2, #6E         ; Load 110 into V2
$E44    $BC33   JP       V0, $C33        ; Jump to V0 + C33
$E46    $C756   RND      V7, #56         ; V7 = random & 56
$E48    $CF23   RND      VF, #23         ; VF = random & 23
$E4A    $6497   LD       V4, #97         ; Load 151 into V4
$E4C    $FE30   UNKNOWN  FE30            ; Unknown Fxxx instruction
$E4E    $C80A   RND      V8, #0A         ; V8 = random & 0A
$E50    $1387   JP       $387            ; Jump to 387
$E52    $3503   SE       V5, #03         ; Skip if V5 == 3
$E54    $0054   SYS      $054            ; System call to 054
$E56    $7F18   ADD      VF, #18         ; Add 24 to VF
$E58    $5F57   UNKNOWN  $5F57           ; Unknown 5xxx instruction
$E5A    $A727   LD       I, $727         ; Load 727 into I
$E5C    $CD28   RND      VD, #28         ; VD = random & 28
$E5E    $D803   DRW      V8, V0, #3      ; Draw 3-byte sprite at V8, V0
$E60    $A3E9   LD       I, $3E9         ; Load 3E9 into I
$E62    $99FC   UNKNOWN  $99FC           ; Unknown 9xxx instruction
$E64    $C921   RND      V9, #21         ; V9 = random & 21
$E66    $DA29   DRW      VA, V2, #9      ; Draw 9-byte sprite at VA, V2
$E68    $3CAA   SE       VC, #AA         ; Skip if VC == 170
$E6A    $AC73   LD       I, $C73         ; Load C73 into I
$E6C    $0ADD   SYS      $ADD            ; System call to ADD
$E6E    $45EC   SNE      V5, #EC         ; Skip if V5 != 236
$E70    $BD77   JP       V0, $D77        ; Jump to V0 + D77
$E72    $7E9D   ADD      VE, #9D         ; Add 157 to VE
$E74    $4C9B   SNE      VC, #9B         ; Skip if VC != 155
$E76    $F9A0   UNKNOWN  F9A0            ; Unknown Fxxx instruction
$E78    $1CFF   JP       $CFF            ; Jump to CFF
$E7A    $76A6   ADD      V6, #A6         ; Add 166 to V6
$E7C    $092D   SYS      $92D            ; System call to 92D
$E7E    $CAA1   RND      VA, #A1         ; VA = random & A1
$E80    $508D   UNKNOWN  $508D           ; Unknown 5xxx instruction
$E82    $374D   SE       V7, #4D         ; Skip if V7 == 77
$E84    $E2DF   UNKNOWN  $E2DF           ; Unknown Exxx instruction
$E86    $BAC6   JP       V0, $AC6        ; Jump to V0 + AC6
$E88    $2179   CALL     $179            ; Call subroutine at 179
$E8A    $E7C3   UNKNOWN  $E7C3           ; Unknown Exxx instruction
$E8C    $5A13   UNKNOWN  $5A13           ; Unknown 5xxx instruction
$E8E    $5D8E   UNKNOWN  $5D8E           ; Unknown 5xxx instruction
$E90    $8093   XOR      V0, V9          ; V0 ^= V9
$E92    $FEAD   UNKNOWN  FEAD            ; Unknown Fxxx instruction
$E94    $D1DA   DRW      V1, VD, #A      ; Draw 10-byte sprite at V1, VD
$E96    $B3A6   JP       V0, $3A6        ; Jump to V0 + 3A6
$E98    $B52D   JP       V0, $52D        ; Jump to V0 + 52D
$E9A    $C86A   RND      V8, #6A         ; V8 = random & 6A
$E9C    $1C71   JP       $C71            ; Jump to C71
$E9E    $1B0D   JP       $B0D            ; Jump to B0D
$EA0    $ADA9   LD       I, $DA9         ; Load DA9 into I
$EA2    $A26B   LD       I, $26B         ; Load 26B into I
$EA4    $64D1   LD       V4, #D1         ; Load 209 into V4
$EA6    $A61D   LD       I, $61D         ; Load 61D into I
$EA8    $D838   DRW      V8, V3, #8      ; Draw 8-byte sprite at V8, V3
$EAA    $2E11   CALL     $E11            ; Call subroutine at E11
$EAC    $8781   OR       V7, V8          ; V7 |= V8
$EAE    $3108   SE       V1, #08         ; Skip if V1 == 8
$EB0    $C565   RND      V5, #65         ; V5 = random & 65
$EB2    $7317   ADD      V3, #17         ; Add 23 to V3
$EB4    $21FA   CALL     $1FA            ; Call subroutine at 1FA
$EB6    $804C   UNKNOWN  804C            ; Unknown 8xxx instruction
$EB8    $76C8   ADD      V6, #C8         ; Add 200 to V6
$EBA    $EB03   UNKNOWN  $EB03           ; Unknown Exxx instruction
$EBC    $8DCC   UNKNOWN  8DCC            ; Unknown 8xxx instruction
$EBE    $240B   CALL     $40B            ; Call subroutine at 40B
$EC0    $7C0E   ADD      VC, #0E         ; Add 14 to VC
$EC2    $590C   UNKNOWN  $590C           ; Unknown 5xxx instruction
$EC4    $E3DE   UNKNOWN  $E3DE           ; Unknown Exxx instruction
$EC6    $3D2E   SE       VD, #2E         ; Skip if VD == 46
$EC8    $AB8C   LD       I, $B8C         ; Load B8C into I
$ECA    $0BCE   SYS      $BCE            ; System call to BCE
$ECC    $8BEC   UNKNOWN  8BEC            ; Unknown 8xxx instruction
$ECE    $3144   SE       V1, #44         ; Skip if V1 == 68
$ED0    $9CE7   UNKNOWN  $9CE7           ; Unknown 9xxx instruction
$ED2    $383E   SE       V8, #3E         ; Skip if V8 == 62
$ED4    $78E5   ADD      V8, #E5         ; Add 229 to V8
$ED6    $59C2   UNKNOWN  $59C2           ; Unknown 5xxx instruction
$ED8    $4A4A   SNE      VA, #4A         ; Skip if VA != 74
$EDA    $7052   ADD      V0, #52         ; Add 82 to V0
$EDC    $23EC   CALL     $3EC            ; Call subroutine at 3EC
$EDE    $F3B8   UNKNOWN  F3B8            ; Unknown Fxxx instruction
$EE0    $0ADC   SYS      $ADC            ; System call to ADC
$EE2    $E3DC   UNKNOWN  $E3DC           ; Unknown Exxx instruction
$EE4    $BD42   JP       V0, $D42        ; Jump to V0 + D42
$EE6    $C918   RND      V9, #18         ; V9 = random & 18
$EE8    $9B49   UNKNOWN  $9B49           ; Unknown 9xxx instruction
$EEA    $FEEC   UNKNOWN  FEEC            ; Unknown Fxxx instruction
$EEC    $064B   SYS      $64B            ; System call to 64B
$EEE    $BBB1   JP       V0, $BB1        ; Jump to V0 + BB1
$EF0    $21BD   CALL     $1BD            ; Call subroutine at 1BD
$EF2    $56F4   UNKNOWN  $56F4           ; Unknown 5xxx instruction
$EF4    $7D4B   ADD      VD, #4B         ; Add 75 to VD
$EF6    $21DB   CALL     $1DB            ; Call subroutine at 1DB
$EF8    $69BD   LD       V9, #BD         ; Load 189 into V9
$EFA    $E5E3   UNKNOWN  $E5E3           ; Unknown Exxx instruction
$EFC    $D073   DRW      V0, V7, #3      ; Draw 3-byte sprite at V0, V7
$EFE    $89EA   UNKNOWN  89EA            ; Unknown 8xxx instruction
$F00    $9782   UNKNOWN  $9782           ; Unknown 9xxx instruction
$F02    $D375   DRW      V3, V7, #5      ; Draw 5-byte sprite at V3, V7
$F04    $CE4A   RND      VE, #4A         ; VE = random & 4A
$F06    $4F8B   SNE      VF, #8B         ; Skip if VF != 139
$F08    $E17C   UNKNOWN  $E17C           ; Unknown Exxx instruction
$F0A    $488F   SNE      V8, #8F         ; Skip if V8 != 143
$F0C    $022C   SYS      $22C            ; System call to 22C
$F0E    $0944   SYS      $944            ; System call to 944
$F10    $CB39   RND      VB, #39         ; VB = random & 39
$F12    $C5FF   RND      V5, #FF         ; V5 = random & FF
$F14    $0481   SYS      $481            ; System call to 481
$F16    $63E8   LD       V3, #E8         ; Load 232 into V3
$F18    $199A   JP       $99A            ; Jump to 99A
$F1A    $D9A8   DRW      V9, VA, #8      ; Draw 8-byte sprite at V9, VA
$F1C    $D952   DRW      V9, V5, #2      ; Draw 2-byte sprite at V9, V5
$F1E    $2B7C   CALL     $B7C            ; Call subroutine at B7C
$F20    $D2DD   DRW      V2, VD, #D      ; Draw 13-byte sprite at V2, VD
$F22    $1F23   JP       $F23            ; Jump to F23
$F24    $7225   ADD      V2, #25         ; Add 37 to V2
$F26    $1DDD   JP       $DDD            ; Jump to DDD
$F28    $4B40   SNE      VB, #40         ; Skip if VB != 64
$F2A    $92C4   UNKNOWN  $92C4           ; Unknown 9xxx instruction
$F2C    $7716   ADD      V7, #16         ; Add 22 to V7
$F2E    $4ED4   SNE      VE, #D4         ; Skip if VE != 212
$F30    $93F4   UNKNOWN  $93F4           ; Unknown 9xxx instruction
$F32    $94D5   UNKNOWN  $94D5           ; Unknown 9xxx instruction
$F34    $1805   JP       $805            ; Jump to 805
$F36    $CCAC   RND      VC, #AC         ; VC = random & AC
$F38    $D70F   DRW      V7, V0, #F      ; Draw 15-byte sprite at V7, V0
$F3A    $8E88   UNKNOWN  8E88            ; Unknown 8xxx instruction
$F3C    $E69F   UNKNOWN  $E69F           ; Unknown Exxx instruction
$F3E    $9E14   UNKNOWN  $9E14           ; Unknown 9xxx instruction
$F40    $8C18   UNKNOWN  8C18            ; Unknown 8xxx instruction
$F42    $CA59   RND      VA, #59         ; VA = random & 59
$F44    $4AD2   SNE      VA, #D2         ; Skip if VA != 210
$F46    $8FAE   SHL      VF              ; VF <<= 1, VF = MSB
$F48    $CBAA   RND      VB, #AA         ; VB = random & AA
$F4A    $BFE5   JP       V0, $FE5        ; Jump to V0 + FE5
$F4C    $444E   SNE      V4, #4E         ; Skip if V4 != 78
$F4E    $8AAD   UNKNOWN  8AAD            ; Unknown 8xxx instruction
$F50    $7F59   ADD      VF, #59         ; Add 89 to VF
$F52    $3A0C   SE       VA, #0C         ; Skip if VA == 12
$F54    $766D   ADD      V6, #6D         ; Add 109 to V6
$F56    $4EA0   SNE      VE, #A0         ; Skip if VE != 160
$F58    $7CD4   ADD      VC, #D4         ; Add 212 to VC
$F5A    $8A8D   UNKNOWN  8A8D            ; Unknown 8xxx instruction
$F5C    $36E4   SE       V6, #E4         ; Skip if V6 == 228
$F5E    $7EAF   ADD      VE, #AF         ; Add 175 to VE
$F60    $522C   UNKNOWN  $522C           ; Unknown 5xxx instruction
$F62    $9A83   UNKNOWN  $9A83           ; Unknown 9xxx instruction
$F64    $8A3F   UNKNOWN  8A3F            ; Unknown 8xxx instruction
$F66    $449B   SNE      V4, #9B         ; Skip if V4 != 155
$F68    $9437   UNKNOWN  $9437           ; Unknown 9xxx instruction
$F6A    $FDD0   UNKNOWN  FDD0            ; Unknown Fxxx instruction
$F6C    $E143   UNKNOWN  $E143           ; Unknown Exxx instruction
$F6E    $20CB   CALL     $0CB            ; Call subroutine at 0CB
$F70    $0394   SYS      $394            ; System call to 394
$F72    $7221   ADD      V2, #21         ; Add 33 to V2
$F74    $A01E   LD       I, $01E         ; Load 01E into I
$F76    $5804   UNKNOWN  $5804           ; Unknown 5xxx instruction
$F78    $7D7E   ADD      VD, #7E         ; Add 126 to VD
$F7A    $B063   JP       V0, $063        ; Jump to V0 + 063
$F7C    $6BCA   LD       VB, #CA         ; Load 202 into VB
$F7E    $EB8B   UNKNOWN  $EB8B           ; Unknown Exxx instruction
$F80    $3BFD   SE       VB, #FD         ; Skip if VB == 253
$F82    $F32C   UNKNOWN  F32C            ; Unknown Fxxx instruction
$F84    $73A5   ADD      V3, #A5         ; Add 165 to V3
$F86    $3A6A   SE       VA, #6A         ; Skip if VA == 106
$F88    $2419   CALL     $419            ; Call subroutine at 419
$F8A    $641D   LD       V4, #1D         ; Load 29 into V4
$F8C    $4860   SNE      V8, #60         ; Skip if V8 != 96
$F8E    $6008   LD       V0, #08         ; Load 8 into V0
$F90    $3641   SE       V6, #41         ; Skip if V6 == 65
$F92    $A097   LD       I, $097         ; Load 097 into I
$F94    $7FE4   ADD      VF, #E4         ; Add 228 to VF
$F96    $BA3F   JP       V0, $A3F        ; Jump to V0 + A3F
$F98    $9A10   SNE      VA, V1          ; Skip if VA != V1
$F9A    $3070   SE       V0, #70         ; Skip if V0 == 112
$F9C    $B5FF   JP       V0, $5FF        ; Jump to V0 + 5FF
$F9E    $AD02   LD       I, $D02         ; Load D02 into I
$FA0    $9228   UNKNOWN  $9228           ; Unknown 9xxx instruction
$FA2    $6278   LD       V2, #78         ; Load 120 into V2
$FA4    $E8E3   UNKNOWN  $E8E3           ; Unknown Exxx instruction
$FA6    $0354   SYS      $354            ; System call to 354
$FA8    $2F34   CALL     $F34            ; Call subroutine at F34
$FAA    $789E   ADD      V8, #9E         ; Add 158 to V8
$FAC    $1980   JP       $980            ; Jump to 980
$FAE    $372A   SE       V7, #2A         ; Skip if V7 == 42
$FB0    $0069   SYS      $069            ; System call to 069
$FB2    $DE35   DRW      VE, V3, #5      ; Draw 5-byte sprite at VE, V3
$FB4    $054F   SYS      $54F            ; System call to 54F
$FB6    $E2BC   UNKNOWN  $E2BC           ; Unknown Exxx instruction
$FB8    $21B4   CALL     $1B4            ; Call subroutine at 1B4
$FBA    $035A   SYS      $35A            ; System call to 35A
$FBC    $4FC6   SNE      VF, #C6         ; Skip if VF != 198
$FBE    $54FC   UNKNOWN  $54FC           ; Unknown 5xxx instruction
$FC0    $A25A   LD       I, $25A         ; Load 25A into I
$FC2    $1D7A   JP       $D7A            ; Jump to D7A
$FC4    $D72D   DRW      V7, V2, #D      ; Draw 13-byte sprite at V7, V2
$FC6    $7033   ADD      V0, #33         ; Add 51 to V0
$FC8    $21A6   CALL     $1A6            ; Call subroutine at 1A6
$FCA    $976E   UNKNOWN  $976E           ; Unknown 9xxx instruction
$FCC    $FC7E   UNKNOWN  FC7E            ; Unknown Fxxx instruction
$FCE    $15BC   JP       $5BC            ; Jump to 5BC
$FD0    $8295   SUB      V2, V9          ; V2 -= V9, VF = !borrow
$FD2    $2983   CALL     $983            ; Call subroutine at 983
$FD4    $6444   LD       V4, #44         ; Load 68 into V4
$FD6    $FF26   UNKNOWN  FF26            ; Unknown Fxxx instruction
$FD8    $1F23   JP       $F23            ; Jump to F23
$FDA    $89E0   LD       V9, VE          ; V9 = VE
$FDC    $DC1E   DRW      VC, V1, #E      ; Draw 14-byte sprite at VC, V1
$FDE    $9228   UNKNOWN  $9228           ; Unknown 9xxx instruction
$FE0    $0059   SYS      $059            ; System call to 059
$FE2    $EBFA   UNKNOWN  $EBFA           ; Unknown Exxx instruction
$FE4    $87A4   ADD      V7, VA          ; V7 += VA, VF = carry
$FE6    $00EA   SYS      $0EA            ; System call to 0EA
$FE8    $00F5   SYS      $0F5            ; System call to 0F5
$FEA    $A82D   LD       I, $82D         ; Load 82D into I
$FEC    $6823   LD       V8, #23         ; Load 35 into V8
$FEE    $3FD9   SE       VF, #D9         ; Skip if VF == 217
$FF0    $BC37   JP       V0, $C37        ; Jump to V0 + C37
$FF2    $22F9   CALL     $2F9            ; Call subroutine at 2F9
$FF4    $40EA   SNE      V0, #EA         ; Skip if V0 != 234
$FF6    $A99B   LD       I, $99B         ; Load 99B into I
$FF8    $1978   JP       $978            ; Jump to 978
$FFA    $C963   RND      V9, #63         ; V9 = random & 63
$FFC    $608C   LD       V0, #8C         ; Load 140 into V0
$FFE    $2E16   CALL     $E16            ; Call subroutine at E16

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 446 (24.9%)
  LD      : 243 (13.6%)
  JP      : 213 (11.9%)
  ADD     : 143 ( 8.0%)
  SNE     : 133 ( 7.4%)
  CALL    : 123 ( 6.9%)
  SE      : 120 ( 6.7%)
  DRW     : 117 ( 6.5%)
  SYS     : 106 ( 5.9%)
  RND     : 103 ( 5.7%)
  SHL     :  10 ( 0.6%)
  OR      :   9 ( 0.5%)
  SHR     :   6 ( 0.3%)
  XOR     :   6 ( 0.3%)
  SUBN    :   6 ( 0.3%)
  AND     :   4 ( 0.2%)
  SUB     :   3 ( 0.2%)
  SKNP    :   1 ( 0.1%)

Memory Operations: 386 (21.5%)
Arithmetic Operations: 171 (9.5%)
