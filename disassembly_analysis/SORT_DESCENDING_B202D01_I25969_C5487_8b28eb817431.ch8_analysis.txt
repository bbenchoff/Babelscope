
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B202D01_I25969_C5487_8b28eb817431.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 202
Instance: 25969
Direction: descending
Final Array: [97, 97, 97, 97, 97, 97, 97, 7]
Operations: R:0 W:7 C:70 S:0

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 112
Sort Array References:
  $216: LD [I], V0 ; Store V0-V0 at I
  $25E: LD I, $361 ; Load 361 into I
  $26C: LD I, $481 ; Load 481 into I
  $276: LD I, $1B3 ; Load 1B3 into I
  $2B6: LD I, $73D ; Load 73D into I
  $2BC: LD I, $766 ; Load 766 into I
  $38C: LD I, $A45 ; Load A45 into I
  $398: LD I, $CAD ; Load CAD into I
  $3A0: LD I, $7BB ; Load 7BB into I
  $3AC: LD I, $B20 ; Load B20 into I
  $3CE: LD I, $88F ; Load 88F into I
  $406: LD I, $CE8 ; Load CE8 into I
  $418: LD I, $BC3 ; Load BC3 into I
  $4A8: LD I, $275 ; Load 275 into I
  $4CC: LD I, $A76 ; Load A76 into I
  $4CE: LD I, $612 ; Load 612 into I
  $4F0: LD I, $A27 ; Load A27 into I
  $51C: LD I, $05C ; Load 05C into I
  $528: LD I, $3BF ; Load 3BF into I
  $530: LD I, $4AB ; Load 4AB into I
  $556: LD I, $BA5 ; Load BA5 into I
  $55A: LD I, $224 ; Load 224 into I
  $584: LD I, $FCE ; Load FCE into I
  $59E: LD I, $017 ; Load 017 into I
  $5D0: LD I, $7E6 ; Load 7E6 into I
  $5E0: LD I, $AB9 ; Load AB9 into I
  $614: LD I, $8E5 ; Load 8E5 into I
  $652: LD I, $F09 ; Load F09 into I
  $688: LD I, $EC7 ; Load EC7 into I
  $6D0: LD I, $C62 ; Load C62 into I
  $6E0: LD I, $D63 ; Load D63 into I
  $6EE: LD I, $8EC ; Load 8EC into I
  $710: LD I, $517 ; Load 517 into I
  $71E: LD I, $FB3 ; Load FB3 into I
  $730: LD I, $F7A ; Load F7A into I
  $766: LD I, $B19 ; Load B19 into I
  $784: LD I, $BA0 ; Load BA0 into I
  $7CC: LD I, $387 ; Load 387 into I
  $7D8: LD I, $135 ; Load 135 into I
  $81A: LD I, $4B1 ; Load 4B1 into I
  $82E: LD I, $4CC ; Load 4CC into I
  $85A: LD I, $730 ; Load 730 into I
  $860: LD I, $52A ; Load 52A into I
  $874: LD I, $BFD ; Load BFD into I
  $882: LD I, $C40 ; Load C40 into I
  $898: LD I, $EA0 ; Load EA0 into I
  $89C: LD I, $912 ; Load 912 into I
  $8A2: LD I, $AEF ; Load AEF into I
  $8B4: LD I, $832 ; Load 832 into I
  $8CA: LD I, $FBC ; Load FBC into I
  $934: LD I, $ADC ; Load ADC into I
  $96E: LD I, $E6A ; Load E6A into I
  $99E: LD I, $337 ; Load 337 into I
  $9B8: LD I, $1CF ; Load 1CF into I
  $9C8: LD I, $8C9 ; Load 8C9 into I
  $9DC: LD I, $91C ; Load 91C into I
  $A10: LD I, $801 ; Load 801 into I
  $A14: LD I, $04B ; Load 04B into I
  $A1A: LD I, $521 ; Load 521 into I
  $A4E: LD I, $4EA ; Load 4EA into I
  $A64: LD I, $A5E ; Load A5E into I
  $A6C: LD I, $FD7 ; Load FD7 into I
  $A86: LD I, $848 ; Load 848 into I
  $A88: LD I, $143 ; Load 143 into I
  $AA0: LD I, $2FB ; Load 2FB into I
  $AB0: LD I, $7B0 ; Load 7B0 into I
  $ACE: LD I, $1F6 ; Load 1F6 into I
  $AE4: LD I, $175 ; Load 175 into I
  $B06: LD I, $6C5 ; Load 6C5 into I
  $B2E: LD I, $A5A ; Load A5A into I
  $B40: LD I, $F34 ; Load F34 into I
  $B42: LD I, $EBB ; Load EBB into I
  $B4E: LD I, $9E6 ; Load 9E6 into I
  $B68: LD I, $2A6 ; Load 2A6 into I
  $B7E: LD I, $B91 ; Load B91 into I
  $B90: LD I, $800 ; Load 800 into I
  $B9E: LD I, $CEA ; Load CEA into I
  $BC8: LD I, $641 ; Load 641 into I
  $BEE: LD I, $ABA ; Load ABA into I
  $BFA: LD I, $832 ; Load 832 into I
  $C02: LD I, $BA0 ; Load BA0 into I
  $C2A: LD I, $13E ; Load 13E into I
  $C34: LD I, $14F ; Load 14F into I
  $C38: LD I, $56D ; Load 56D into I
  $C58: LD I, $588 ; Load 588 into I
  $CC6: LD I, $DFF ; Load DFF into I
  $CD2: LD I, $EE5 ; Load EE5 into I
  $CE0: LD I, $D60 ; Load D60 into I
  $D12: LD I, $795 ; Load 795 into I
  $D48: LD I, $B1A ; Load B1A into I
  $D4A: LD I, $2ED ; Load 2ED into I
  $D5A: LD I, $A1F ; Load A1F into I
  $D60: LD I, $B3A ; Load B3A into I
  $D62: LD I, $59F ; Load 59F into I
  $DE8: ADD I, VC ; I ADDRESS MANIPULATION
  $DF8: LD I, $792 ; Load 792 into I
  $E10: LD I, $8B9 ; Load 8B9 into I
  $E1A: LD I, $6BE ; Load 6BE into I
  $E4E: LD I, $F39 ; Load F39 into I
  $E6E: LD I, $734 ; Load 734 into I
  $E78: LD I, $340 ; Load 340 into I
  $E7A: LD I, $83D ; Load 83D into I
  $ED8: LD I, $6B8 ; Load 6B8 into I
  $F24: LD I, $01E ; Load 01E into I
  $F3C: LD I, $EB0 ; Load EB0 into I
  $F6C: LD I, $226 ; Load 226 into I
  $F9E: LD I, $533 ; Load 533 into I
  $FA2: LD I, $217 ; Load 217 into I
  $FAC: LD I, $5EC ; Load 5EC into I
  $FD0: LD I, $1D7 ; Load 1D7 into I
  $FE6: LD I, $0E7 ; Load 0E7 into I
  $FF4: LD I, $755 ; Load 755 into I

CONTROL FLOW ANALYSIS:
Jumps: 229
Calls: 98
Branches: 226
Loops: 123
Loop Structures:
  $21A -> $17C (backward jump)
  $248 -> $1A4 (backward jump)
  $3B8 -> $299 (backward jump)
  $44A -> $2F9 (backward jump)
  $476 -> $330 (backward jump)
  $50E -> $37E (backward jump)
  $55E -> $364 (backward jump)
  $5AA -> $2FF (backward jump)
  $5C0 -> $273 (backward jump)
  $5DA -> $50F (backward jump)
  $5F8 -> $1F0 (backward jump)
  $60A -> $1E7 (backward jump)
  $616 -> $444 (backward jump)
  $646 -> $371 (backward jump)
  $67E -> $007 (backward jump)
  $6AE -> $514 (backward jump)
  $6B4 -> $28D (backward jump)
  $6CE -> $25C (backward jump)
  $6DA -> $18A (backward jump)
  $712 -> $223 (backward jump)
  $714 -> $616 (backward jump)
  $72C -> $69A (backward jump)
  $74A -> $62E (backward jump)
  $74E -> $0E9 (backward jump)
  $764 -> $6BA (backward jump)
  $78A -> $1A4 (backward jump)
  $822 -> $7C5 (backward jump)
  $844 -> $733 (backward jump)
  $876 -> $785 (backward jump)
  $89A -> $4DD (backward jump)
  $8BE -> $5CA (backward jump)
  $8D4 -> $4C7 (backward jump)
  $938 -> $932 (backward jump)
  $942 -> $93D (backward jump)
  $99C -> $259 (backward jump)
  $9E6 -> $199 (backward jump)
  $9FE -> $7C6 (backward jump)
  $A00 -> $9BF (backward jump)
  $A26 -> $8A6 (backward jump)
  $A36 -> $4F9 (backward jump)
  $A48 -> $57A (backward jump)
  $A5E -> $90C (backward jump)
  $A68 -> $5A5 (backward jump)
  $A8E -> $2BF (backward jump)
  $AB2 -> $011 (backward jump)
  $AB4 -> $2C6 (backward jump)
  $AD4 -> $19A (backward jump)
  $AE0 -> $06E (backward jump)
  $AF0 -> $399 (backward jump)
  $AF8 -> $67B (backward jump)
  $B12 -> $817 (backward jump)
  $B22 -> $06D (backward jump)
  $B64 -> $89E (backward jump)
  $B96 -> $0B4 (backward jump)
  $B98 -> $0A9 (backward jump)
  $BAE -> $9E8 (backward jump)
  $BB0 -> $5B7 (backward jump)
  $BBE -> $667 (backward jump)
  $BCA -> $72D (backward jump)
  $BF4 -> $20C (backward jump)
  $C18 -> $559 (backward jump)
  $C22 -> $35A (backward jump)
  $C30 -> $8B1 (backward jump)
  $C74 -> $3E2 (backward jump)
  $C80 -> $8F5 (backward jump)
  $C82 -> $63D (backward jump)
  $C8A -> $7A7 (backward jump)
  $C8E -> $BED (backward jump)
  $CA8 -> $B0B (backward jump)
  $CC2 -> $4C5 (backward jump)
  $D04 -> $A0C (backward jump)
  $D0A -> $04C (backward jump)
  $D0C -> $B59 (backward jump)
  $D24 -> $C85 (backward jump)
  $D3C -> $419 (backward jump)
  $D50 -> $432 (backward jump)
  $D56 -> $142 (backward jump)
  $D64 -> $727 (backward jump)
  $D9E -> $B9A (backward jump)
  $DA2 -> $C46 (backward jump)
  $DAA -> $C04 (backward jump)
  $DB0 -> $935 (backward jump)
  $DB2 -> $B1F (backward jump)
  $DD0 -> $86B (backward jump)
  $DE6 -> $0EC (backward jump)
  $E02 -> $B2F (backward jump)
  $E16 -> $D61 (backward jump)
  $E32 -> $D88 (backward jump)
  $E3A -> $234 (backward jump)
  $E3C -> $532 (backward jump)
  $E3E -> $AB1 (backward jump)
  $E44 -> $329 (backward jump)
  $E4A -> $821 (backward jump)
  $E50 -> $0EF (backward jump)
  $E58 -> $495 (backward jump)
  $E5E -> $503 (backward jump)
  $E8C -> $593 (backward jump)
  $E8E -> $847 (backward jump)
  $E90 -> $C19 (backward jump)
  $EAE -> $930 (backward jump)
  $EC6 -> $DB3 (backward jump)
  $ED2 -> $DD4 (backward jump)
  $ED6 -> $5CF (backward jump)
  $EF0 -> $33E (backward jump)
  $EF4 -> $C35 (backward jump)
  $EFA -> $C9C (backward jump)
  $F08 -> $621 (backward jump)
  $F0E -> $790 (backward jump)
  $F32 -> $E21 (backward jump)
  $F3E -> $25B (backward jump)
  $F46 -> $D12 (backward jump)
  $F4A -> $C0F (backward jump)
  $F68 -> $2C6 (backward jump)
  $F6A -> $CB5 (backward jump)
  $F86 -> $F49 (backward jump)
  $FB2 -> $FB2 (backward jump)
  $FD4 -> $097 (backward jump)
  $FDA -> $FB7 (backward jump)
  $FDC -> $6F6 (backward jump)
  $FEA -> $AC4 (backward jump)
  $FF0 -> $6B7 (backward jump)
  $FF2 -> $1B9 (backward jump)
  $FFA -> $CEC (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $2625   CALL     $625            ; Call subroutine at 625
$202    $F66F   UNKNOWN  F66F            ; Unknown Fxxx instruction
$204    $4DFB   SNE      VD, #FB         ; Skip if VD != 251
$206    $805F   UNKNOWN  805F            ; Unknown 8xxx instruction
$208    $E3AC   UNKNOWN  $E3AC           ; Unknown Exxx instruction
$20A    $9CB7   UNKNOWN  $9CB7           ; Unknown 9xxx instruction
$20C    $860B   UNKNOWN  860B            ; Unknown 8xxx instruction
$20E    $225C   CALL     $25C            ; Call subroutine at 25C
$210    $9A01   UNKNOWN  $9A01           ; Unknown 9xxx instruction
$212    $FC15   LD       DT, VC          ; Delay timer = VC
$214    $900D   UNKNOWN  $900D           ; Unknown 9xxx instruction
$216    $F055   LD       [I], V0         ; Store V0-V0 at I
$218    $D8E2   DRW      V8, VE, #2      ; Draw 2-byte sprite at V8, VE
$21A    $117C   JP       $17C            ; Jump to 17C
$21C    $7EC5   ADD      VE, #C5         ; Add 197 to VE
$21E    $47CB   SNE      V7, #CB         ; Skip if V7 != 203
$220    $1DAF   JP       $DAF            ; Jump to DAF
$222    $DA41   DRW      VA, V4, #1      ; Draw 1-byte sprite at VA, V4
$224    $705F   ADD      V0, #5F         ; Add 95 to V0
$226    $0723   SYS      $723            ; System call to 723
$228    $2ED8   CALL     $ED8            ; Call subroutine at ED8
$22A    $4F4D   SNE      VF, #4D         ; Skip if VF != 77
$22C    $39B2   SE       V9, #B2         ; Skip if V9 == 178
$22E    $86C1   OR       V6, VC          ; V6 |= VC
$230    $9B74   UNKNOWN  $9B74           ; Unknown 9xxx instruction
$232    $FE3C   UNKNOWN  FE3C            ; Unknown Fxxx instruction
$234    $127B   JP       $27B            ; Jump to 27B
$236    $8BA3   XOR      VB, VA          ; VB ^= VA
$238    $044D   SYS      $44D            ; System call to 44D
$23A    $41E2   SNE      V1, #E2         ; Skip if V1 != 226
$23C    $F458   UNKNOWN  F458            ; Unknown Fxxx instruction
$23E    $008C   SYS      $08C            ; System call to 08C
$240    $0607   SYS      $607            ; System call to 607
$242    $C0F8   RND      V0, #F8         ; V0 = random & F8
$244    $BE7E   JP       V0, $E7E        ; Jump to V0 + E7E
$246    $4679   SNE      V6, #79         ; Skip if V6 != 121
$248    $11A4   JP       $1A4            ; Jump to 1A4
$24A    $3B08   SE       VB, #08         ; Skip if VB == 8
$24C    $7F57   ADD      VF, #57         ; Add 87 to VF
$24E    $6D03   LD       VD, #03         ; Load 3 into VD
$250    $87CA   UNKNOWN  87CA            ; Unknown 8xxx instruction
$252    $87C8   UNKNOWN  87C8            ; Unknown 8xxx instruction
$254    $FC56   UNKNOWN  FC56            ; Unknown Fxxx instruction
$256    $6CF2   LD       VC, #F2         ; Load 242 into VC
$258    $BD08   JP       V0, $D08        ; Jump to V0 + D08
$25A    $7F73   ADD      VF, #73         ; Add 115 to VF
$25C    $5C91   UNKNOWN  $5C91           ; Unknown 5xxx instruction
$25E    $A361   LD       I, $361         ; Load 361 into I
$260    $4258   SNE      V2, #58         ; Skip if V2 != 88
$262    $DC61   DRW      VC, V6, #1      ; Draw 1-byte sprite at VC, V6
$264    $7B8A   ADD      VB, #8A         ; Add 138 to VB
$266    $4EA4   SNE      VE, #A4         ; Skip if VE != 164
$268    $E89F   UNKNOWN  $E89F           ; Unknown Exxx instruction
$26A    $B42E   JP       V0, $42E        ; Jump to V0 + 42E
$26C    $A481   LD       I, $481         ; Load 481 into I
$26E    $13E4   JP       $3E4            ; Jump to 3E4
$270    $9BA1   UNKNOWN  $9BA1           ; Unknown 9xxx instruction
$272    $F511   UNKNOWN  F511            ; Unknown Fxxx instruction
$274    $C04A   RND      V0, #4A         ; V0 = random & 4A
$276    $A1B3   LD       I, $1B3         ; Load 1B3 into I
$278    $6554   LD       V5, #54         ; Load 84 into V5
$27A    $5BD1   UNKNOWN  $5BD1           ; Unknown 5xxx instruction
$27C    $3D19   SE       VD, #19         ; Skip if VD == 25
$27E    $9738   UNKNOWN  $9738           ; Unknown 9xxx instruction
$280    $C2F3   RND      V2, #F3         ; V2 = random & F3
$282    $FEBE   UNKNOWN  FEBE            ; Unknown Fxxx instruction
$284    $4E1E   SNE      VE, #1E         ; Skip if VE != 30
$286    $D180   DRW      V1, V8, #0      ; Draw 0-byte sprite at V1, V8
$288    $5284   UNKNOWN  $5284           ; Unknown 5xxx instruction
$28A    $0FF6   SYS      $FF6            ; System call to FF6
$28C    $B5AA   JP       V0, $5AA        ; Jump to V0 + 5AA
$28E    $5330   SE       V3, V3          ; Skip if V3 == V3
$290    $20AF   CALL     $0AF            ; Call subroutine at 0AF
$292    $F100   UNKNOWN  F100            ; Unknown Fxxx instruction
$294    $1915   JP       $915            ; Jump to 915
$296    $C685   RND      V6, #85         ; V6 = random & 85
$298    $EFEA   UNKNOWN  $EFEA           ; Unknown Exxx instruction
$29A    $6B98   LD       VB, #98         ; Load 152 into VB
$29C    $2CDD   CALL     $CDD            ; Call subroutine at CDD
$29E    $F89F   UNKNOWN  F89F            ; Unknown Fxxx instruction
$2A0    $00D1   SYS      $0D1            ; System call to 0D1
$2A2    $18AD   JP       $8AD            ; Jump to 8AD
$2A4    $D0D6   DRW      V0, VD, #6      ; Draw 6-byte sprite at V0, VD
$2A6    $DA68   DRW      VA, V6, #8      ; Draw 8-byte sprite at VA, V6
$2A8    $F216   UNKNOWN  F216            ; Unknown Fxxx instruction
$2AA    $6EB1   LD       VE, #B1         ; Load 177 into VE
$2AC    $6EAE   LD       VE, #AE         ; Load 174 into VE
$2AE    $C611   RND      V6, #11         ; V6 = random & 11
$2B0    $D224   DRW      V2, V2, #4      ; Draw 4-byte sprite at V2, V2
$2B2    $CD31   RND      VD, #31         ; VD = random & 31
$2B4    $3479   SE       V4, #79         ; Skip if V4 == 121
$2B6    $A73D   LD       I, $73D         ; Load 73D into I
$2B8    $B81C   JP       V0, $81C        ; Jump to V0 + 81C
$2BA    $B688   JP       V0, $688        ; Jump to V0 + 688
$2BC    $A766   LD       I, $766         ; Load 766 into I
$2BE    $7460   ADD      V4, #60         ; Add 96 to V4
$2C0    $7C61   ADD      VC, #61         ; Add 97 to VC
$2C2    $6161   LD       V1, #61         ; Load 97 into V1
$2C4    $6161   LD       V1, #61         ; Load 97 into V1
$2C6    $6161   LD       V1, #61         ; Load 97 into V1
$2C8    $6161   LD       V1, #61         ; Load 97 into V1
$2CA    $6161   LD       V1, #61         ; Load 97 into V1
$2CC    $6161   LD       V1, #61         ; Load 97 into V1
$2CE    $6161   LD       V1, #61         ; Load 97 into V1
$2D0    $6161   LD       V1, #61         ; Load 97 into V1
$2D2    $6161   LD       V1, #61         ; Load 97 into V1
$2D4    $6161   LD       V1, #61         ; Load 97 into V1
$2D6    $6161   LD       V1, #61         ; Load 97 into V1
$2D8    $6161   LD       V1, #61         ; Load 97 into V1
$2DA    $6161   LD       V1, #61         ; Load 97 into V1
$2DC    $6161   LD       V1, #61         ; Load 97 into V1
$2DE    $6161   LD       V1, #61         ; Load 97 into V1
$2E0    $6161   LD       V1, #61         ; Load 97 into V1
$2E2    $6161   LD       V1, #61         ; Load 97 into V1
$2E4    $6161   LD       V1, #61         ; Load 97 into V1
$2E6    $6161   LD       V1, #61         ; Load 97 into V1
$2E8    $6161   LD       V1, #61         ; Load 97 into V1
$2EA    $6161   LD       V1, #61         ; Load 97 into V1
$2EC    $6161   LD       V1, #61         ; Load 97 into V1
$2EE    $6161   LD       V1, #61         ; Load 97 into V1
$2F0    $6161   LD       V1, #61         ; Load 97 into V1
$2F2    $6161   LD       V1, #61         ; Load 97 into V1
$2F4    $6161   LD       V1, #61         ; Load 97 into V1
$2F6    $6161   LD       V1, #61         ; Load 97 into V1
$2F8    $6161   LD       V1, #61         ; Load 97 into V1
$2FA    $6161   LD       V1, #61         ; Load 97 into V1
$2FC    $6161   LD       V1, #61         ; Load 97 into V1
$2FE    $6161   LD       V1, #61         ; Load 97 into V1
$300    $6161   LD       V1, #61         ; Load 97 into V1
$302    $6161   LD       V1, #61         ; Load 97 into V1
$304    $6161   LD       V1, #61         ; Load 97 into V1
$306    $6107   LD       V1, #07         ; Load 7 into V1
$308    $73A9   ADD      V3, #A9         ; Add 169 to V3
$30A    $59E8   UNKNOWN  $59E8           ; Unknown 5xxx instruction
$30C    $19C0   JP       $9C0            ; Jump to 9C0
$30E    $92F0   SNE      V2, VF          ; Skip if V2 != VF
$310    $D72D   DRW      V7, V2, #D      ; Draw 13-byte sprite at V7, V2
$312    $DA2B   DRW      VA, V2, #B      ; Draw 11-byte sprite at VA, V2
$314    $BA42   JP       V0, $A42        ; Jump to V0 + A42
$316    $5052   UNKNOWN  $5052           ; Unknown 5xxx instruction
$318    $8901   OR       V9, V0          ; V9 |= V0
$31A    $F5F0   UNKNOWN  F5F0            ; Unknown Fxxx instruction
$31C    $6896   LD       V8, #96         ; Load 150 into V8
$31E    $5E3F   UNKNOWN  $5E3F           ; Unknown 5xxx instruction
$320    $60E6   LD       V0, #E6         ; Load 230 into V0
$322    $D750   DRW      V7, V5, #0      ; Draw 0-byte sprite at V7, V5
$324    $BE41   JP       V0, $E41        ; Jump to V0 + E41
$326    $0C23   SYS      $C23            ; System call to C23
$328    $1CC7   JP       $CC7            ; Jump to CC7
$32A    $2160   CALL     $160            ; Call subroutine at 160
$32C    $B8AE   JP       V0, $8AE        ; Jump to V0 + 8AE
$32E    $9BCB   UNKNOWN  $9BCB           ; Unknown 9xxx instruction
$330    $3B7F   SE       VB, #7F         ; Skip if VB == 127
$332    $DBD9   DRW      VB, VD, #9      ; Draw 9-byte sprite at VB, VD
$334    $B6CA   JP       V0, $6CA        ; Jump to V0 + 6CA
$336    $13BC   JP       $3BC            ; Jump to 3BC
$338    $7B9A   ADD      VB, #9A         ; Add 154 to VB
$33A    $BD6D   JP       V0, $D6D        ; Jump to V0 + D6D
$33C    $5CA1   UNKNOWN  $5CA1           ; Unknown 5xxx instruction
$33E    $544A   UNKNOWN  $544A           ; Unknown 5xxx instruction
$340    $DBB1   DRW      VB, VB, #1      ; Draw 1-byte sprite at VB, VB
$342    $5A97   UNKNOWN  $5A97           ; Unknown 5xxx instruction
$344    $9430   SNE      V4, V3          ; Skip if V4 != V3
$346    $0338   SYS      $338            ; System call to 338
$348    $5C6F   UNKNOWN  $5C6F           ; Unknown 5xxx instruction
$34A    $986E   UNKNOWN  $986E           ; Unknown 9xxx instruction
$34C    $896D   UNKNOWN  896D            ; Unknown 8xxx instruction
$34E    $8236   SHR      V2              ; V2 >>= 1, VF = LSB
$350    $3462   SE       V4, #62         ; Skip if V4 == 98
$352    $B6A5   JP       V0, $6A5        ; Jump to V0 + 6A5
$354    $F97E   UNKNOWN  F97E            ; Unknown Fxxx instruction
$356    $62C3   LD       V2, #C3         ; Load 195 into V2
$358    $4FEF   SNE      VF, #EF         ; Skip if VF != 239
$35A    $5004   UNKNOWN  $5004           ; Unknown 5xxx instruction
$35C    $274B   CALL     $74B            ; Call subroutine at 74B
$35E    $52B7   UNKNOWN  $52B7           ; Unknown 5xxx instruction
$360    $0628   SYS      $628            ; System call to 628
$362    $43FC   SNE      V3, #FC         ; Skip if V3 != 252
$364    $F4E1   UNKNOWN  F4E1            ; Unknown Fxxx instruction
$366    $D739   DRW      V7, V3, #9      ; Draw 9-byte sprite at V7, V3
$368    $BBC9   JP       V0, $BC9        ; Jump to V0 + BC9
$36A    $F825   UNKNOWN  F825            ; Unknown Fxxx instruction
$36C    $B557   JP       V0, $557        ; Jump to V0 + 557
$36E    $6852   LD       V8, #52         ; Load 82 into V8
$370    $68B4   LD       V8, #B4         ; Load 180 into V8
$372    $3749   SE       V7, #49         ; Skip if V7 == 73
$374    $3FEE   SE       VF, #EE         ; Skip if VF == 238
$376    $1CA3   JP       $CA3            ; Jump to CA3
$378    $4600   SNE      V6, #00         ; Skip if V6 != 0
$37A    $3843   SE       V8, #43         ; Skip if V8 == 67
$37C    $79EF   ADD      V9, #EF         ; Add 239 to V9
$37E    $EA19   UNKNOWN  $EA19           ; Unknown Exxx instruction
$380    $E72C   UNKNOWN  $E72C           ; Unknown Exxx instruction
$382    $36D4   SE       V6, #D4         ; Skip if V6 == 212
$384    $DBF3   DRW      VB, VF, #3      ; Draw 3-byte sprite at VB, VF
$386    $0BDC   SYS      $BDC            ; System call to BDC
$388    $C429   RND      V4, #29         ; V4 = random & 29
$38A    $45CF   SNE      V5, #CF         ; Skip if V5 != 207
$38C    $AA45   LD       I, $A45         ; Load A45 into I
$38E    $6A91   LD       VA, #91         ; Load 145 into VA
$390    $EAF9   UNKNOWN  $EAF9           ; Unknown Exxx instruction
$392    $090F   SYS      $90F            ; System call to 90F
$394    $57BB   UNKNOWN  $57BB           ; Unknown 5xxx instruction
$396    $F930   UNKNOWN  F930            ; Unknown Fxxx instruction
$398    $ACAD   LD       I, $CAD         ; Load CAD into I
$39A    $BC73   JP       V0, $C73        ; Jump to V0 + C73
$39C    $76E4   ADD      V6, #E4         ; Add 228 to V6
$39E    $B3C2   JP       V0, $3C2        ; Jump to V0 + 3C2
$3A0    $A7BB   LD       I, $7BB         ; Load 7BB into I
$3A2    $30FA   SE       V0, #FA         ; Skip if V0 == 250
$3A4    $7555   ADD      V5, #55         ; Add 85 to V5
$3A6    $CCE4   RND      VC, #E4         ; VC = random & E4
$3A8    $9789   UNKNOWN  $9789           ; Unknown 9xxx instruction
$3AA    $CF0D   RND      VF, #0D         ; VF = random & 0D
$3AC    $AB20   LD       I, $B20         ; Load B20 into I
$3AE    $C8E4   RND      V8, #E4         ; V8 = random & E4
$3B0    $034E   SYS      $34E            ; System call to 34E
$3B2    $49EF   SNE      V9, #EF         ; Skip if V9 != 239
$3B4    $7E7A   ADD      VE, #7A         ; Add 122 to VE
$3B6    $09A7   SYS      $9A7            ; System call to 9A7
$3B8    $B299   JP       V0, $299        ; Jump to V0 + 299
$3BA    $D549   DRW      V5, V4, #9      ; Draw 9-byte sprite at V5, V4
$3BC    $04DA   SYS      $4DA            ; System call to 4DA
$3BE    $4604   SNE      V6, #04         ; Skip if V6 != 4
$3C0    $DC2A   DRW      VC, V2, #A      ; Draw 10-byte sprite at VC, V2
$3C2    $0DDD   SYS      $DDD            ; System call to DDD
$3C4    $CFF7   RND      VF, #F7         ; VF = random & F7
$3C6    $D7DD   DRW      V7, VD, #D      ; Draw 13-byte sprite at V7, VD
$3C8    $6ADC   LD       VA, #DC         ; Load 220 into VA
$3CA    $31CA   SE       V1, #CA         ; Skip if V1 == 202
$3CC    $CD4F   RND      VD, #4F         ; VD = random & 4F
$3CE    $A88F   LD       I, $88F         ; Load 88F into I
$3D0    $F9AE   UNKNOWN  F9AE            ; Unknown Fxxx instruction
$3D2    $426C   SNE      V2, #6C         ; Skip if V2 != 108
$3D4    $5E52   UNKNOWN  $5E52           ; Unknown 5xxx instruction
$3D6    $7E84   ADD      VE, #84         ; Add 132 to VE
$3D8    $778A   ADD      V7, #8A         ; Add 138 to V7
$3DA    $94DB   UNKNOWN  $94DB           ; Unknown 9xxx instruction
$3DC    $504F   UNKNOWN  $504F           ; Unknown 5xxx instruction
$3DE    $8018   UNKNOWN  8018            ; Unknown 8xxx instruction
$3E0    $3B82   SE       VB, #82         ; Skip if VB == 130
$3E2    $42E2   SNE      V2, #E2         ; Skip if V2 != 226
$3E4    $8912   AND      V9, V1          ; V9 &= V1
$3E6    $CCBA   RND      VC, #BA         ; VC = random & BA
$3E8    $16E8   JP       $6E8            ; Jump to 6E8
$3EA    $E2EF   UNKNOWN  $E2EF           ; Unknown Exxx instruction
$3EC    $F35A   UNKNOWN  F35A            ; Unknown Fxxx instruction
$3EE    $0B62   SYS      $B62            ; System call to B62
$3F0    $1D0D   JP       $D0D            ; Jump to D0D
$3F2    $48B8   SNE      V8, #B8         ; Skip if V8 != 184
$3F4    $6333   LD       V3, #33         ; Load 51 into V3
$3F6    $969F   UNKNOWN  $969F           ; Unknown 9xxx instruction
$3F8    $5D37   UNKNOWN  $5D37           ; Unknown 5xxx instruction
$3FA    $F9E9   UNKNOWN  F9E9            ; Unknown Fxxx instruction
$3FC    $C023   RND      V0, #23         ; V0 = random & 23
$3FE    $CF4A   RND      VF, #4A         ; VF = random & 4A
$400    $7413   ADD      V4, #13         ; Add 19 to V4
$402    $269B   CALL     $69B            ; Call subroutine at 69B
$404    $673C   LD       V7, #3C         ; Load 60 into V7
$406    $ACE8   LD       I, $CE8         ; Load CE8 into I
$408    $F218   LD       ST, V2          ; Sound timer = V2
$40A    $9498   UNKNOWN  $9498           ; Unknown 9xxx instruction
$40C    $98EF   UNKNOWN  $98EF           ; Unknown 9xxx instruction
$40E    $2D41   CALL     $D41            ; Call subroutine at D41
$410    $4BB5   SNE      VB, #B5         ; Skip if VB != 181
$412    $83B8   UNKNOWN  83B8            ; Unknown 8xxx instruction
$414    $79E0   ADD      V9, #E0         ; Add 224 to V9
$416    $304A   SE       V0, #4A         ; Skip if V0 == 74
$418    $ABC3   LD       I, $BC3         ; Load BC3 into I
$41A    $C0AF   RND      V0, #AF         ; V0 = random & AF
$41C    $2364   CALL     $364            ; Call subroutine at 364
$41E    $5880   SE       V8, V8          ; Skip if V8 == V8
$420    $34C9   SE       V4, #C9         ; Skip if V4 == 201
$422    $7882   ADD      V8, #82         ; Add 130 to V8
$424    $98FD   UNKNOWN  $98FD           ; Unknown 9xxx instruction
$426    $063B   SYS      $63B            ; System call to 63B
$428    $F040   UNKNOWN  F040            ; Unknown Fxxx instruction
$42A    $1852   JP       $852            ; Jump to 852
$42C    $0B62   SYS      $B62            ; System call to B62
$42E    $3491   SE       V4, #91         ; Skip if V4 == 145
$430    $C4E2   RND      V4, #E2         ; V4 = random & E2
$432    $1BE9   JP       $BE9            ; Jump to BE9
$434    $B7FA   JP       V0, $7FA        ; Jump to V0 + 7FA
$436    $E351   UNKNOWN  $E351           ; Unknown Exxx instruction
$438    $74B7   ADD      V4, #B7         ; Add 183 to V4
$43A    $7FE5   ADD      VF, #E5         ; Add 229 to VF
$43C    $7A28   ADD      VA, #28         ; Add 40 to VA
$43E    $232C   CALL     $32C            ; Call subroutine at 32C
$440    $DBE9   DRW      VB, VE, #9      ; Draw 9-byte sprite at VB, VE
$442    $54B6   UNKNOWN  $54B6           ; Unknown 5xxx instruction
$444    $FAAF   UNKNOWN  FAAF            ; Unknown Fxxx instruction
$446    $9785   UNKNOWN  $9785           ; Unknown 9xxx instruction
$448    $E7F6   UNKNOWN  $E7F6           ; Unknown Exxx instruction
$44A    $B2F9   JP       V0, $2F9        ; Jump to V0 + 2F9
$44C    $8A72   AND      VA, V7          ; VA &= V7
$44E    $968D   UNKNOWN  $968D           ; Unknown 9xxx instruction
$450    $728C   ADD      V2, #8C         ; Add 140 to V2
$452    $D204   DRW      V2, V0, #4      ; Draw 4-byte sprite at V2, V0
$454    $C82C   RND      V8, #2C         ; V8 = random & 2C
$456    $376F   SE       V7, #6F         ; Skip if V7 == 111
$458    $CB25   RND      VB, #25         ; VB = random & 25
$45A    $5954   UNKNOWN  $5954           ; Unknown 5xxx instruction
$45C    $2F08   CALL     $F08            ; Call subroutine at F08
$45E    $7B81   ADD      VB, #81         ; Add 129 to VB
$460    $EF28   UNKNOWN  $EF28           ; Unknown Exxx instruction
$462    $E8A2   UNKNOWN  $E8A2           ; Unknown Exxx instruction
$464    $0C67   SYS      $C67            ; System call to C67
$466    $2493   CALL     $493            ; Call subroutine at 493
$468    $6632   LD       V6, #32         ; Load 50 into V6
$46A    $FF93   UNKNOWN  FF93            ; Unknown Fxxx instruction
$46C    $9AAE   UNKNOWN  $9AAE           ; Unknown 9xxx instruction
$46E    $D2E2   DRW      V2, VE, #2      ; Draw 2-byte sprite at V2, VE
$470    $4EC0   SNE      VE, #C0         ; Skip if VE != 192
$472    $688C   LD       V8, #8C         ; Load 140 into V8
$474    $3D88   SE       VD, #88         ; Skip if VD == 136
$476    $B330   JP       V0, $330        ; Jump to V0 + 330
$478    $2740   CALL     $740            ; Call subroutine at 740
$47A    $C815   RND      V8, #15         ; V8 = random & 15
$47C    $52DC   UNKNOWN  $52DC           ; Unknown 5xxx instruction
$47E    $1F1E   JP       $F1E            ; Jump to F1E
$480    $CABA   RND      VA, #BA         ; VA = random & BA
$482    $FCB7   UNKNOWN  FCB7            ; Unknown Fxxx instruction
$484    $7FA0   ADD      VF, #A0         ; Add 160 to VF
$486    $EFDE   UNKNOWN  $EFDE           ; Unknown Exxx instruction
$488    $E8DC   UNKNOWN  $E8DC           ; Unknown Exxx instruction
$48A    $D36B   DRW      V3, V6, #B      ; Draw 11-byte sprite at V3, V6
$48C    $2997   CALL     $997            ; Call subroutine at 997
$48E    $BC0C   JP       V0, $C0C        ; Jump to V0 + C0C
$490    $58CC   UNKNOWN  $58CC           ; Unknown 5xxx instruction
$492    $0E17   SYS      $E17            ; System call to E17
$494    $DB00   DRW      VB, V0, #0      ; Draw 0-byte sprite at VB, V0
$496    $76F8   ADD      V6, #F8         ; Add 248 to V6
$498    $DC53   DRW      VC, V5, #3      ; Draw 3-byte sprite at VC, V5
$49A    $59DC   UNKNOWN  $59DC           ; Unknown 5xxx instruction
$49C    $E79B   UNKNOWN  $E79B           ; Unknown Exxx instruction
$49E    $1516   JP       $516            ; Jump to 516
$4A0    $728C   ADD      V2, #8C         ; Add 140 to V2
$4A2    $9E57   UNKNOWN  $9E57           ; Unknown 9xxx instruction
$4A4    $C51F   RND      V5, #1F         ; V5 = random & 1F
$4A6    $2926   CALL     $926            ; Call subroutine at 926
$4A8    $A275   LD       I, $275         ; Load 275 into I
$4AA    $92B8   UNKNOWN  $92B8           ; Unknown 9xxx instruction
$4AC    $1B11   JP       $B11            ; Jump to B11
$4AE    $1AB3   JP       $AB3            ; Jump to AB3
$4B0    $ECEE   UNKNOWN  $ECEE           ; Unknown Exxx instruction
$4B2    $2725   CALL     $725            ; Call subroutine at 725
$4B4    $80A7   SUBN     V0, VA          ; V0 = VA - V0, VF = !borrow
$4B6    $E577   UNKNOWN  $E577           ; Unknown Exxx instruction
$4B8    $8322   AND      V3, V2          ; V3 &= V2
$4BA    $51B7   UNKNOWN  $51B7           ; Unknown 5xxx instruction
$4BC    $F010   UNKNOWN  F010            ; Unknown Fxxx instruction
$4BE    $98D7   UNKNOWN  $98D7           ; Unknown 9xxx instruction
$4C0    $9CB9   UNKNOWN  $9CB9           ; Unknown 9xxx instruction
$4C2    $C625   RND      V6, #25         ; V6 = random & 25
$4C4    $DB9C   DRW      VB, V9, #C      ; Draw 12-byte sprite at VB, V9
$4C6    $6806   LD       V8, #06         ; Load 6 into V8
$4C8    $00FF   SYS      $0FF            ; System call to 0FF
$4CA    $D769   DRW      V7, V6, #9      ; Draw 9-byte sprite at V7, V6
$4CC    $AA76   LD       I, $A76         ; Load A76 into I
$4CE    $A612   LD       I, $612         ; Load 612 into I
$4D0    $592A   UNKNOWN  $592A           ; Unknown 5xxx instruction
$4D2    $B85B   JP       V0, $85B        ; Jump to V0 + 85B
$4D4    $733F   ADD      V3, #3F         ; Add 63 to V3
$4D6    $34AD   SE       V4, #AD         ; Skip if V4 == 173
$4D8    $4CD8   SNE      VC, #D8         ; Skip if VC != 216
$4DA    $5B29   UNKNOWN  $5B29           ; Unknown 5xxx instruction
$4DC    $77CB   ADD      V7, #CB         ; Add 203 to V7
$4DE    $DBA7   DRW      VB, VA, #7      ; Draw 7-byte sprite at VB, VA
$4E0    $BE84   JP       V0, $E84        ; Jump to V0 + E84
$4E2    $D265   DRW      V2, V6, #5      ; Draw 5-byte sprite at V2, V6
$4E4    $BB46   JP       V0, $B46        ; Jump to V0 + B46
$4E6    $2046   CALL     $046            ; Call subroutine at 046
$4E8    $3288   SE       V2, #88         ; Skip if V2 == 136
$4EA    $EEF2   UNKNOWN  $EEF2           ; Unknown Exxx instruction
$4EC    $615E   LD       V1, #5E         ; Load 94 into V1
$4EE    $F5C9   UNKNOWN  F5C9            ; Unknown Fxxx instruction
$4F0    $AA27   LD       I, $A27         ; Load A27 into I
$4F2    $2671   CALL     $671            ; Call subroutine at 671
$4F4    $1622   JP       $622            ; Jump to 622
$4F6    $0381   SYS      $381            ; System call to 381
$4F8    $3EE5   SE       VE, #E5         ; Skip if VE == 229
$4FA    $BCEF   JP       V0, $CEF        ; Jump to V0 + CEF
$4FC    $1BFE   JP       $BFE            ; Jump to BFE
$4FE    $20FF   CALL     $0FF            ; Call subroutine at 0FF
$500    $D449   DRW      V4, V4, #9      ; Draw 9-byte sprite at V4, V4
$502    $DEBC   DRW      VE, VB, #C      ; Draw 12-byte sprite at VE, VB
$504    $29D8   CALL     $9D8            ; Call subroutine at 9D8
$506    $E335   UNKNOWN  $E335           ; Unknown Exxx instruction
$508    $F040   UNKNOWN  F040            ; Unknown Fxxx instruction
$50A    $D931   DRW      V9, V3, #1      ; Draw 1-byte sprite at V9, V3
$50C    $FF39   UNKNOWN  FF39            ; Unknown Fxxx instruction
$50E    $B37E   JP       V0, $37E        ; Jump to V0 + 37E
$510    $79C4   ADD      V9, #C4         ; Add 196 to V9
$512    $5CDD   UNKNOWN  $5CDD           ; Unknown 5xxx instruction
$514    $EDAE   UNKNOWN  $EDAE           ; Unknown Exxx instruction
$516    $408F   SNE      V0, #8F         ; Skip if V0 != 143
$518    $7082   ADD      V0, #82         ; Add 130 to V0
$51A    $2734   CALL     $734            ; Call subroutine at 734
$51C    $A05C   LD       I, $05C         ; Load 05C into I
$51E    $D5A4   DRW      V5, VA, #4      ; Draw 4-byte sprite at V5, VA
$520    $EE6A   UNKNOWN  $EE6A           ; Unknown Exxx instruction
$522    $5530   SE       V5, V3          ; Skip if V5 == V3
$524    $7AFE   ADD      VA, #FE         ; Add 254 to VA
$526    $1E48   JP       $E48            ; Jump to E48
$528    $A3BF   LD       I, $3BF         ; Load 3BF into I
$52A    $2EBE   CALL     $EBE            ; Call subroutine at EBE
$52C    $9B21   UNKNOWN  $9B21           ; Unknown 9xxx instruction
$52E    $1DD5   JP       $DD5            ; Jump to DD5
$530    $A4AB   LD       I, $4AB         ; Load 4AB into I
$532    $8DB8   UNKNOWN  8DB8            ; Unknown 8xxx instruction
$534    $34E3   SE       V4, #E3         ; Skip if V4 == 227
$536    $2446   CALL     $446            ; Call subroutine at 446
$538    $4404   SNE      V4, #04         ; Skip if V4 != 4
$53A    $FD8E   UNKNOWN  FD8E            ; Unknown Fxxx instruction
$53C    $BAFD   JP       V0, $AFD        ; Jump to V0 + AFD
$53E    $65AB   LD       V5, #AB         ; Load 171 into V5
$540    $2112   CALL     $112            ; Call subroutine at 112
$542    $273F   CALL     $73F            ; Call subroutine at 73F
$544    $23F9   CALL     $3F9            ; Call subroutine at 3F9
$546    $70F6   ADD      V0, #F6         ; Add 246 to V0
$548    $158C   JP       $58C            ; Jump to 58C
$54A    $38F0   SE       V8, #F0         ; Skip if V8 == 240
$54C    $8E9B   UNKNOWN  8E9B            ; Unknown 8xxx instruction
$54E    $0C06   SYS      $C06            ; System call to C06
$550    $E4AB   UNKNOWN  $E4AB           ; Unknown Exxx instruction
$552    $BC45   JP       V0, $C45        ; Jump to V0 + C45
$554    $495D   SNE      V9, #5D         ; Skip if V9 != 93
$556    $ABA5   LD       I, $BA5         ; Load BA5 into I
$558    $656D   LD       V5, #6D         ; Load 109 into V5
$55A    $A224   LD       I, $224         ; Load 224 into I
$55C    $4E71   SNE      VE, #71         ; Skip if VE != 113
$55E    $B364   JP       V0, $364        ; Jump to V0 + 364
$560    $573F   UNKNOWN  $573F           ; Unknown 5xxx instruction
$562    $1B57   JP       $B57            ; Jump to B57
$564    $DD4D   DRW      VD, V4, #D      ; Draw 13-byte sprite at VD, V4
$566    $696C   LD       V9, #6C         ; Load 108 into V9
$568    $097C   SYS      $97C            ; System call to 97C
$56A    $2C1C   CALL     $C1C            ; Call subroutine at C1C
$56C    $788D   ADD      V8, #8D         ; Add 141 to V8
$56E    $92F8   UNKNOWN  $92F8           ; Unknown 9xxx instruction
$570    $587C   UNKNOWN  $587C           ; Unknown 5xxx instruction
$572    $4610   SNE      V6, #10         ; Skip if V6 != 16
$574    $6693   LD       V6, #93         ; Load 147 into V6
$576    $BDFD   JP       V0, $DFD        ; Jump to V0 + DFD
$578    $57C7   UNKNOWN  $57C7           ; Unknown 5xxx instruction
$57A    $889E   SHL      V8              ; V8 <<= 1, VF = MSB
$57C    $D2F0   DRW      V2, VF, #0      ; Draw 0-byte sprite at V2, VF
$57E    $1778   JP       $778            ; Jump to 778
$580    $38B6   SE       V8, #B6         ; Skip if V8 == 182
$582    $3D21   SE       VD, #21         ; Skip if VD == 33
$584    $AFCE   LD       I, $FCE         ; Load FCE into I
$586    $6D3A   LD       VD, #3A         ; Load 58 into VD
$588    $0B27   SYS      $B27            ; System call to B27
$58A    $8A9E   SHL      VA              ; VA <<= 1, VF = MSB
$58C    $30FD   SE       V0, #FD         ; Skip if V0 == 253
$58E    $7B71   ADD      VB, #71         ; Add 113 to VB
$590    $7483   ADD      V4, #83         ; Add 131 to V4
$592    $F0AE   UNKNOWN  F0AE            ; Unknown Fxxx instruction
$594    $235C   CALL     $35C            ; Call subroutine at 35C
$596    $71E0   ADD      V1, #E0         ; Add 224 to V1
$598    $6DB9   LD       VD, #B9         ; Load 185 into VD
$59A    $8897   SUBN     V8, V9          ; V8 = V9 - V8, VF = !borrow
$59C    $318F   SE       V1, #8F         ; Skip if V1 == 143
$59E    $A017   LD       I, $017         ; Load 017 into I
$5A0    $476F   SNE      V7, #6F         ; Skip if V7 != 111
$5A2    $3A1F   SE       VA, #1F         ; Skip if VA == 31
$5A4    $4B7B   SNE      VB, #7B         ; Skip if VB != 123
$5A6    $73BF   ADD      V3, #BF         ; Add 191 to V3
$5A8    $30A3   SE       V0, #A3         ; Skip if V0 == 163
$5AA    $B2FF   JP       V0, $2FF        ; Jump to V0 + 2FF
$5AC    $2B71   CALL     $B71            ; Call subroutine at B71
$5AE    $724B   ADD      V2, #4B         ; Add 75 to V2
$5B0    $30E0   SE       V0, #E0         ; Skip if V0 == 224
$5B2    $C92E   RND      V9, #2E         ; V9 = random & 2E
$5B4    $D6D1   DRW      V6, VD, #1      ; Draw 1-byte sprite at V6, VD
$5B6    $C90D   RND      V9, #0D         ; V9 = random & 0D
$5B8    $3152   SE       V1, #52         ; Skip if V1 == 82
$5BA    $796F   ADD      V9, #6F         ; Add 111 to V9
$5BC    $68ED   LD       V8, #ED         ; Load 237 into V8
$5BE    $F728   UNKNOWN  F728            ; Unknown Fxxx instruction
$5C0    $B273   JP       V0, $273        ; Jump to V0 + 273
$5C2    $7DFE   ADD      VD, #FE         ; Add 254 to VD
$5C4    $73D8   ADD      V3, #D8         ; Add 216 to V3
$5C6    $9CF7   UNKNOWN  $9CF7           ; Unknown 9xxx instruction
$5C8    $8E6D   UNKNOWN  8E6D            ; Unknown 8xxx instruction
$5CA    $4E5A   SNE      VE, #5A         ; Skip if VE != 90
$5CC    $D42B   DRW      V4, V2, #B      ; Draw 11-byte sprite at V4, V2
$5CE    $BD8B   JP       V0, $D8B        ; Jump to V0 + D8B
$5D0    $A7E6   LD       I, $7E6         ; Load 7E6 into I
$5D2    $92A6   UNKNOWN  $92A6           ; Unknown 9xxx instruction
$5D4    $DBF8   DRW      VB, VF, #8      ; Draw 8-byte sprite at VB, VF
$5D6    $B890   JP       V0, $890        ; Jump to V0 + 890
$5D8    $E0D3   UNKNOWN  $E0D3           ; Unknown Exxx instruction
$5DA    $B50F   JP       V0, $50F        ; Jump to V0 + 50F
$5DC    $B9FF   JP       V0, $9FF        ; Jump to V0 + 9FF
$5DE    $9385   UNKNOWN  $9385           ; Unknown 9xxx instruction
$5E0    $AAB9   LD       I, $AB9         ; Load AB9 into I
$5E2    $7813   ADD      V8, #13         ; Add 19 to V8
$5E4    $4337   SNE      V3, #37         ; Skip if V3 != 55
$5E6    $C2B9   RND      V2, #B9         ; V2 = random & B9
$5E8    $9C63   UNKNOWN  $9C63           ; Unknown 9xxx instruction
$5EA    $DB0E   DRW      VB, V0, #E      ; Draw 14-byte sprite at VB, V0
$5EC    $846C   UNKNOWN  846C            ; Unknown 8xxx instruction
$5EE    $8247   SUBN     V2, V4          ; V2 = V4 - V2, VF = !borrow
$5F0    $1DF3   JP       $DF3            ; Jump to DF3
$5F2    $BD85   JP       V0, $D85        ; Jump to V0 + D85
$5F4    $9700   SNE      V7, V0          ; Skip if V7 != V0
$5F6    $EE48   UNKNOWN  $EE48           ; Unknown Exxx instruction
$5F8    $11F0   JP       $1F0            ; Jump to 1F0
$5FA    $7A8B   ADD      VA, #8B         ; Add 139 to VA
$5FC    $059C   SYS      $59C            ; System call to 59C
$5FE    $DAA7   DRW      VA, VA, #7      ; Draw 7-byte sprite at VA, VA
$600    $7C95   ADD      VC, #95         ; Add 149 to VC
$602    $6CA1   LD       VC, #A1         ; Load 161 into VC
$604    $EF13   UNKNOWN  $EF13           ; Unknown Exxx instruction
$606    $6C4E   LD       VC, #4E         ; Load 78 into VC
$608    $6E08   LD       VE, #08         ; Load 8 into VE
$60A    $B1E7   JP       V0, $1E7        ; Jump to V0 + 1E7
$60C    $7409   ADD      V4, #09         ; Add 9 to V4
$60E    $4F63   SNE      VF, #63         ; Skip if VF != 99
$610    $7F5E   ADD      VF, #5E         ; Add 94 to VF
$612    $C448   RND      V4, #48         ; V4 = random & 48
$614    $A8E5   LD       I, $8E5         ; Load 8E5 into I
$616    $B444   JP       V0, $444        ; Jump to V0 + 444
$618    $590D   UNKNOWN  $590D           ; Unknown 5xxx instruction
$61A    $6F5A   LD       VF, #5A         ; Load 90 into VF
$61C    $94D6   UNKNOWN  $94D6           ; Unknown 9xxx instruction
$61E    $4D60   SNE      VD, #60         ; Skip if VD != 96
$620    $3E80   SE       VE, #80         ; Skip if VE == 128
$622    $5196   UNKNOWN  $5196           ; Unknown 5xxx instruction
$624    $3D1A   SE       VD, #1A         ; Skip if VD == 26
$626    $BF40   JP       V0, $F40        ; Jump to V0 + F40
$628    $91FD   UNKNOWN  $91FD           ; Unknown 9xxx instruction
$62A    $630B   LD       V3, #0B         ; Load 11 into V3
$62C    $3ACE   SE       VA, #CE         ; Skip if VA == 206
$62E    $D13C   DRW      V1, V3, #C      ; Draw 12-byte sprite at V1, V3
$630    $8664   ADD      V6, V6          ; V6 += V6, VF = carry
$632    $CE87   RND      VE, #87         ; VE = random & 87
$634    $7144   ADD      V1, #44         ; Add 68 to V1
$636    $D6D8   DRW      V6, VD, #8      ; Draw 8-byte sprite at V6, VD
$638    $8081   OR       V0, V8          ; V0 |= V8
$63A    $80B8   UNKNOWN  80B8            ; Unknown 8xxx instruction
$63C    $208E   CALL     $08E            ; Call subroutine at 08E
$63E    $9A93   UNKNOWN  $9A93           ; Unknown 9xxx instruction
$640    $09B2   SYS      $9B2            ; System call to 9B2
$642    $95B9   UNKNOWN  $95B9           ; Unknown 9xxx instruction
$644    $0BD2   SYS      $BD2            ; System call to BD2
$646    $B371   JP       V0, $371        ; Jump to V0 + 371
$648    $E688   UNKNOWN  $E688           ; Unknown Exxx instruction
$64A    $C486   RND      V4, #86         ; V4 = random & 86
$64C    $0646   SYS      $646            ; System call to 646
$64E    $4A5C   SNE      VA, #5C         ; Skip if VA != 92
$650    $8B70   LD       VB, V7          ; VB = V7
$652    $AF09   LD       I, $F09         ; Load F09 into I
$654    $922A   UNKNOWN  $922A           ; Unknown 9xxx instruction
$656    $9F7B   UNKNOWN  $9F7B           ; Unknown 9xxx instruction
$658    $7D65   ADD      VD, #65         ; Add 101 to VD
$65A    $D448   DRW      V4, V4, #8      ; Draw 8-byte sprite at V4, V4
$65C    $B902   JP       V0, $902        ; Jump to V0 + 902
$65E    $6073   LD       V0, #73         ; Load 115 into V0
$660    $0FFD   SYS      $FFD            ; System call to FFD
$662    $27A9   CALL     $7A9            ; Call subroutine at 7A9
$664    $22FE   CALL     $2FE            ; Call subroutine at 2FE
$666    $6A34   LD       VA, #34         ; Load 52 into VA
$668    $915B   UNKNOWN  $915B           ; Unknown 9xxx instruction
$66A    $C54D   RND      V5, #4D         ; V5 = random & 4D
$66C    $7453   ADD      V4, #53         ; Add 83 to V4
$66E    $97EE   UNKNOWN  $97EE           ; Unknown 9xxx instruction
$670    $EF1F   UNKNOWN  $EF1F           ; Unknown Exxx instruction
$672    $736C   ADD      V3, #6C         ; Add 108 to V3
$674    $FCB3   UNKNOWN  FCB3            ; Unknown Fxxx instruction
$676    $8C30   LD       VC, V3          ; VC = V3
$678    $E8E2   UNKNOWN  $E8E2           ; Unknown Exxx instruction
$67A    $2D4C   CALL     $D4C            ; Call subroutine at D4C
$67C    $D428   DRW      V4, V2, #8      ; Draw 8-byte sprite at V4, V2
$67E    $1007   JP       $007            ; Jump to 007
$680    $5BB9   UNKNOWN  $5BB9           ; Unknown 5xxx instruction
$682    $0A15   SYS      $A15            ; System call to A15
$684    $5995   UNKNOWN  $5995           ; Unknown 5xxx instruction
$686    $80FF   UNKNOWN  80FF            ; Unknown 8xxx instruction
$688    $AEC7   LD       I, $EC7         ; Load EC7 into I
$68A    $DF95   DRW      VF, V9, #5      ; Draw 5-byte sprite at VF, V9
$68C    $F98D   UNKNOWN  F98D            ; Unknown Fxxx instruction
$68E    $0365   SYS      $365            ; System call to 365
$690    $5D47   UNKNOWN  $5D47           ; Unknown 5xxx instruction
$692    $D862   DRW      V8, V6, #2      ; Draw 2-byte sprite at V8, V6
$694    $536F   UNKNOWN  $536F           ; Unknown 5xxx instruction
$696    $F9F1   UNKNOWN  F9F1            ; Unknown Fxxx instruction
$698    $FE48   UNKNOWN  FE48            ; Unknown Fxxx instruction
$69A    $35F8   SE       V5, #F8         ; Skip if V5 == 248
$69C    $5D5C   UNKNOWN  $5D5C           ; Unknown 5xxx instruction
$69E    $65B7   LD       V5, #B7         ; Load 183 into V5
$6A0    $8B51   OR       VB, V5          ; VB |= V5
$6A2    $5678   UNKNOWN  $5678           ; Unknown 5xxx instruction
$6A4    $BEFB   JP       V0, $EFB        ; Jump to V0 + EFB
$6A6    $1A7E   JP       $A7E            ; Jump to A7E
$6A8    $F3C8   UNKNOWN  F3C8            ; Unknown Fxxx instruction
$6AA    $38F7   SE       V8, #F7         ; Skip if V8 == 247
$6AC    $5ADE   UNKNOWN  $5ADE           ; Unknown 5xxx instruction
$6AE    $B514   JP       V0, $514        ; Jump to V0 + 514
$6B0    $BC41   JP       V0, $C41        ; Jump to V0 + C41
$6B2    $D995   DRW      V9, V9, #5      ; Draw 5-byte sprite at V9, V9
$6B4    $128D   JP       $28D            ; Jump to 28D
$6B6    $18DE   JP       $8DE            ; Jump to 8DE
$6B8    $44E4   SNE      V4, #E4         ; Skip if V4 != 228
$6BA    $C34C   RND      V3, #4C         ; V3 = random & 4C
$6BC    $22D9   CALL     $2D9            ; Call subroutine at 2D9
$6BE    $3036   SE       V0, #36         ; Skip if V0 == 54
$6C0    $0782   SYS      $782            ; System call to 782
$6C2    $8CD5   SUB      VC, VD          ; VC -= VD, VF = !borrow
$6C4    $D33F   DRW      V3, V3, #F      ; Draw 15-byte sprite at V3, V3
$6C6    $9492   UNKNOWN  $9492           ; Unknown 9xxx instruction
$6C8    $54C0   SE       V4, VC          ; Skip if V4 == VC
$6CA    $7B11   ADD      VB, #11         ; Add 17 to VB
$6CC    $E876   UNKNOWN  $E876           ; Unknown Exxx instruction
$6CE    $125C   JP       $25C            ; Jump to 25C
$6D0    $AC62   LD       I, $C62         ; Load C62 into I
$6D2    $9353   UNKNOWN  $9353           ; Unknown 9xxx instruction
$6D4    $24E2   CALL     $4E2            ; Call subroutine at 4E2
$6D6    $72D1   ADD      V2, #D1         ; Add 209 to V2
$6D8    $1783   JP       $783            ; Jump to 783
$6DA    $B18A   JP       V0, $18A        ; Jump to V0 + 18A
$6DC    $31BF   SE       V1, #BF         ; Skip if V1 == 191
$6DE    $F0B3   UNKNOWN  F0B3            ; Unknown Fxxx instruction
$6E0    $AD63   LD       I, $D63         ; Load D63 into I
$6E2    $E976   UNKNOWN  $E976           ; Unknown Exxx instruction
$6E4    $5328   UNKNOWN  $5328           ; Unknown 5xxx instruction
$6E6    $2FDB   CALL     $FDB            ; Call subroutine at FDB
$6E8    $721C   ADD      V2, #1C         ; Add 28 to V2
$6EA    $7490   ADD      V4, #90         ; Add 144 to V4
$6EC    $DE21   DRW      VE, V2, #1      ; Draw 1-byte sprite at VE, V2
$6EE    $A8EC   LD       I, $8EC         ; Load 8EC into I
$6F0    $86A8   UNKNOWN  86A8            ; Unknown 8xxx instruction
$6F2    $D882   DRW      V8, V8, #2      ; Draw 2-byte sprite at V8, V8
$6F4    $321D   SE       V2, #1D         ; Skip if V2 == 29
$6F6    $CCAA   RND      VC, #AA         ; VC = random & AA
$6F8    $9859   UNKNOWN  $9859           ; Unknown 9xxx instruction
$6FA    $4CBA   SNE      VC, #BA         ; Skip if VC != 186
$6FC    $9057   UNKNOWN  $9057           ; Unknown 9xxx instruction
$6FE    $645D   LD       V4, #5D         ; Load 93 into V4
$700    $498F   SNE      V9, #8F         ; Skip if V9 != 143
$702    $57AC   UNKNOWN  $57AC           ; Unknown 5xxx instruction
$704    $33EF   SE       V3, #EF         ; Skip if V3 == 239
$706    $DD88   DRW      VD, V8, #8      ; Draw 8-byte sprite at VD, V8
$708    $7F47   ADD      VF, #47         ; Add 71 to VF
$70A    $CA4A   RND      VA, #4A         ; VA = random & 4A
$70C    $243D   CALL     $43D            ; Call subroutine at 43D
$70E    $C7D6   RND      V7, #D6         ; V7 = random & D6
$710    $A517   LD       I, $517         ; Load 517 into I
$712    $B223   JP       V0, $223        ; Jump to V0 + 223
$714    $B616   JP       V0, $616        ; Jump to V0 + 616
$716    $730E   ADD      V3, #0E         ; Add 14 to V3
$718    $7FAA   ADD      VF, #AA         ; Add 170 to VF
$71A    $C30D   RND      V3, #0D         ; V3 = random & 0D
$71C    $2842   CALL     $842            ; Call subroutine at 842
$71E    $AFB3   LD       I, $FB3         ; Load FB3 into I
$720    $F6AC   UNKNOWN  F6AC            ; Unknown Fxxx instruction
$722    $7C0B   ADD      VC, #0B         ; Add 11 to VC
$724    $2F5A   CALL     $F5A            ; Call subroutine at F5A
$726    $1CCD   JP       $CCD            ; Jump to CCD
$728    $E88E   UNKNOWN  $E88E           ; Unknown Exxx instruction
$72A    $D521   DRW      V5, V2, #1      ; Draw 1-byte sprite at V5, V2
$72C    $169A   JP       $69A            ; Jump to 69A
$72E    $0296   SYS      $296            ; System call to 296
$730    $AF7A   LD       I, $F7A         ; Load F7A into I
$732    $D299   DRW      V2, V9, #9      ; Draw 9-byte sprite at V2, V9
$734    $FB17   UNKNOWN  FB17            ; Unknown Fxxx instruction
$736    $0F72   SYS      $F72            ; System call to F72
$738    $3BB1   SE       VB, #B1         ; Skip if VB == 177
$73A    $D813   DRW      V8, V1, #3      ; Draw 3-byte sprite at V8, V1
$73C    $912D   UNKNOWN  $912D           ; Unknown 9xxx instruction
$73E    $EA39   UNKNOWN  $EA39           ; Unknown Exxx instruction
$740    $C695   RND      V6, #95         ; V6 = random & 95
$742    $E14D   UNKNOWN  $E14D           ; Unknown Exxx instruction
$744    $617B   LD       V1, #7B         ; Load 123 into V1
$746    $3A59   SE       VA, #59         ; Skip if VA == 89
$748    $905D   UNKNOWN  $905D           ; Unknown 9xxx instruction
$74A    $162E   JP       $62E            ; Jump to 62E
$74C    $D710   DRW      V7, V1, #0      ; Draw 0-byte sprite at V7, V1
$74E    $10E9   JP       $0E9            ; Jump to 0E9
$750    $7D4F   ADD      VD, #4F         ; Add 79 to VD
$752    $2EFC   CALL     $EFC            ; Call subroutine at EFC
$754    $6EAF   LD       VE, #AF         ; Load 175 into VE
$756    $24EC   CALL     $4EC            ; Call subroutine at 4EC
$758    $F141   UNKNOWN  F141            ; Unknown Fxxx instruction
$75A    $6305   LD       V3, #05         ; Load 5 into V3
$75C    $BFDE   JP       V0, $FDE        ; Jump to V0 + FDE
$75E    $59CB   UNKNOWN  $59CB           ; Unknown 5xxx instruction
$760    $9CFF   UNKNOWN  $9CFF           ; Unknown 9xxx instruction
$762    $8010   LD       V0, V1          ; V0 = V1
$764    $16BA   JP       $6BA            ; Jump to 6BA
$766    $AB19   LD       I, $B19         ; Load B19 into I
$768    $3295   SE       V2, #95         ; Skip if V2 == 149
$76A    $CA3C   RND      VA, #3C         ; VA = random & 3C
$76C    $9B0D   UNKNOWN  $9B0D           ; Unknown 9xxx instruction
$76E    $C9EA   RND      V9, #EA         ; V9 = random & EA
$770    $572C   UNKNOWN  $572C           ; Unknown 5xxx instruction
$772    $45FD   SNE      V5, #FD         ; Skip if V5 != 253
$774    $4648   SNE      V6, #48         ; Skip if V6 != 72
$776    $327F   SE       V2, #7F         ; Skip if V2 == 127
$778    $4812   SNE      V8, #12         ; Skip if V8 != 18
$77A    $5835   UNKNOWN  $5835           ; Unknown 5xxx instruction
$77C    $BCAA   JP       V0, $CAA        ; Jump to V0 + CAA
$77E    $F416   UNKNOWN  F416            ; Unknown Fxxx instruction
$780    $94F0   SNE      V4, VF          ; Skip if V4 != VF
$782    $C46E   RND      V4, #6E         ; V4 = random & 6E
$784    $ABA0   LD       I, $BA0         ; Load BA0 into I
$786    $D32C   DRW      V3, V2, #C      ; Draw 12-byte sprite at V3, V2
$788    $395B   SE       V9, #5B         ; Skip if V9 == 91
$78A    $11A4   JP       $1A4            ; Jump to 1A4
$78C    $F46F   UNKNOWN  F46F            ; Unknown Fxxx instruction
$78E    $C7C3   RND      V7, #C3         ; V7 = random & C3
$790    $015D   SYS      $15D            ; System call to 15D
$792    $8219   UNKNOWN  8219            ; Unknown 8xxx instruction
$794    $BB3D   JP       V0, $B3D        ; Jump to V0 + B3D
$796    $2775   CALL     $775            ; Call subroutine at 775
$798    $5F63   UNKNOWN  $5F63           ; Unknown 5xxx instruction
$79A    $C21A   RND      V2, #1A         ; V2 = random & 1A
$79C    $8ECF   UNKNOWN  8ECF            ; Unknown 8xxx instruction
$79E    $F007   LD       V0, DT          ; V0 = delay timer
$7A0    $F5F1   UNKNOWN  F5F1            ; Unknown Fxxx instruction
$7A2    $CF2C   RND      VF, #2C         ; VF = random & 2C
$7A4    $E571   UNKNOWN  $E571           ; Unknown Exxx instruction
$7A6    $E564   UNKNOWN  $E564           ; Unknown Exxx instruction
$7A8    $C14D   RND      V1, #4D         ; V1 = random & 4D
$7AA    $2DD6   CALL     $DD6            ; Call subroutine at DD6
$7AC    $9C1B   UNKNOWN  $9C1B           ; Unknown 9xxx instruction
$7AE    $4402   SNE      V4, #02         ; Skip if V4 != 2
$7B0    $7260   ADD      V2, #60         ; Add 96 to V2
$7B2    $4549   SNE      V5, #49         ; Skip if V5 != 73
$7B4    $3A30   SE       VA, #30         ; Skip if VA == 48
$7B6    $D82A   DRW      V8, V2, #A      ; Draw 10-byte sprite at V8, V2
$7B8    $19FC   JP       $9FC            ; Jump to 9FC
$7BA    $1CE0   JP       $CE0            ; Jump to CE0
$7BC    $5BA2   UNKNOWN  $5BA2           ; Unknown 5xxx instruction
$7BE    $3FF6   SE       VF, #F6         ; Skip if VF == 246
$7C0    $E8AA   UNKNOWN  $E8AA           ; Unknown Exxx instruction
$7C2    $0350   SYS      $350            ; System call to 350
$7C4    $080B   SYS      $80B            ; System call to 80B
$7C6    $C465   RND      V4, #65         ; V4 = random & 65
$7C8    $07BD   SYS      $7BD            ; System call to 7BD
$7CA    $4C65   SNE      VC, #65         ; Skip if VC != 101
$7CC    $A387   LD       I, $387         ; Load 387 into I
$7CE    $4CD3   SNE      VC, #D3         ; Skip if VC != 211
$7D0    $9AF5   UNKNOWN  $9AF5           ; Unknown 9xxx instruction
$7D2    $EDC9   UNKNOWN  $EDC9           ; Unknown Exxx instruction
$7D4    $D44F   DRW      V4, V4, #F      ; Draw 15-byte sprite at V4, V4
$7D6    $07E8   SYS      $7E8            ; System call to 7E8
$7D8    $A135   LD       I, $135         ; Load 135 into I
$7DA    $0711   SYS      $711            ; System call to 711
$7DC    $5C31   UNKNOWN  $5C31           ; Unknown 5xxx instruction
$7DE    $4928   SNE      V9, #28         ; Skip if V9 != 40
$7E0    $7DE2   ADD      VD, #E2         ; Add 226 to VD
$7E2    $8147   SUBN     V1, V4          ; V1 = V4 - V1, VF = !borrow
$7E4    $E6BA   UNKNOWN  $E6BA           ; Unknown Exxx instruction
$7E6    $737F   ADD      V3, #7F         ; Add 127 to V3
$7E8    $9F0E   UNKNOWN  $9F0E           ; Unknown 9xxx instruction
$7EA    $C5EE   RND      V5, #EE         ; V5 = random & EE
$7EC    $06BD   SYS      $6BD            ; System call to 6BD
$7EE    $DB58   DRW      VB, V5, #8      ; Draw 8-byte sprite at VB, V5
$7F0    $7812   ADD      V8, #12         ; Add 18 to V8
$7F2    $63DA   LD       V3, #DA         ; Load 218 into V3
$7F4    $37BD   SE       V7, #BD         ; Skip if V7 == 189
$7F6    $4C64   SNE      VC, #64         ; Skip if VC != 100
$7F8    $8C78   UNKNOWN  8C78            ; Unknown 8xxx instruction
$7FA    $8864   ADD      V8, V6          ; V8 += V6, VF = carry
$7FC    $0388   SYS      $388            ; System call to 388
$7FE    $61FD   LD       V1, #FD         ; Load 253 into V1
$800    $87D0   LD       V7, VD          ; V7 = VD
$802    $D239   DRW      V2, V3, #9      ; Draw 9-byte sprite at V2, V3
$804    $48C9   SNE      V8, #C9         ; Skip if V8 != 201
$806    $9FD7   UNKNOWN  $9FD7           ; Unknown 9xxx instruction
$808    $E451   UNKNOWN  $E451           ; Unknown Exxx instruction
$80A    $F5A4   UNKNOWN  F5A4            ; Unknown Fxxx instruction
$80C    $F05F   UNKNOWN  F05F            ; Unknown Fxxx instruction
$80E    $3F72   SE       VF, #72         ; Skip if VF == 114
$810    $5556   UNKNOWN  $5556           ; Unknown 5xxx instruction
$812    $D70B   DRW      V7, V0, #B      ; Draw 11-byte sprite at V7, V0
$814    $7EE5   ADD      VE, #E5         ; Add 229 to VE
$816    $F574   UNKNOWN  F574            ; Unknown Fxxx instruction
$818    $F577   UNKNOWN  F577            ; Unknown Fxxx instruction
$81A    $A4B1   LD       I, $4B1         ; Load 4B1 into I
$81C    $98E3   UNKNOWN  $98E3           ; Unknown 9xxx instruction
$81E    $BBD5   JP       V0, $BD5        ; Jump to V0 + BD5
$820    $62F1   LD       V2, #F1         ; Load 241 into V2
$822    $B7C5   JP       V0, $7C5        ; Jump to V0 + 7C5
$824    $BE72   JP       V0, $E72        ; Jump to V0 + E72
$826    $96A7   UNKNOWN  $96A7           ; Unknown 9xxx instruction
$828    $4172   SNE      V1, #72         ; Skip if V1 != 114
$82A    $64B3   LD       V4, #B3         ; Load 179 into V4
$82C    $94C0   SNE      V4, VC          ; Skip if V4 != VC
$82E    $A4CC   LD       I, $4CC         ; Load 4CC into I
$830    $7BE8   ADD      VB, #E8         ; Add 232 to VB
$832    $2989   CALL     $989            ; Call subroutine at 989
$834    $5F3A   UNKNOWN  $5F3A           ; Unknown 5xxx instruction
$836    $3457   SE       V4, #57         ; Skip if V4 == 87
$838    $5AF8   UNKNOWN  $5AF8           ; Unknown 5xxx instruction
$83A    $3C02   SE       VC, #02         ; Skip if VC == 2
$83C    $C928   RND      V9, #28         ; V9 = random & 28
$83E    $B919   JP       V0, $919        ; Jump to V0 + 919
$840    $CF9C   RND      VF, #9C         ; VF = random & 9C
$842    $4246   SNE      V2, #46         ; Skip if V2 != 70
$844    $1733   JP       $733            ; Jump to 733
$846    $0471   SYS      $471            ; System call to 471
$848    $03CA   SYS      $3CA            ; System call to 3CA
$84A    $75DC   ADD      V5, #DC         ; Add 220 to V5
$84C    $F632   UNKNOWN  F632            ; Unknown Fxxx instruction
$84E    $08B4   SYS      $8B4            ; System call to 8B4
$850    $C624   RND      V6, #24         ; V6 = random & 24
$852    $60B7   LD       V0, #B7         ; Load 183 into V0
$854    $F97A   UNKNOWN  F97A            ; Unknown Fxxx instruction
$856    $C20E   RND      V2, #0E         ; V2 = random & 0E
$858    $EB6A   UNKNOWN  $EB6A           ; Unknown Exxx instruction
$85A    $A730   LD       I, $730         ; Load 730 into I
$85C    $EA5A   UNKNOWN  $EA5A           ; Unknown Exxx instruction
$85E    $BD86   JP       V0, $D86        ; Jump to V0 + D86
$860    $A52A   LD       I, $52A         ; Load 52A into I
$862    $40C3   SNE      V0, #C3         ; Skip if V0 != 195
$864    $49F7   SNE      V9, #F7         ; Skip if V9 != 247
$866    $729A   ADD      V2, #9A         ; Add 154 to V2
$868    $0DB4   SYS      $DB4            ; System call to DB4
$86A    $29C7   CALL     $9C7            ; Call subroutine at 9C7
$86C    $F898   UNKNOWN  F898            ; Unknown Fxxx instruction
$86E    $0189   SYS      $189            ; System call to 189
$870    $DC9A   DRW      VC, V9, #A      ; Draw 10-byte sprite at VC, V9
$872    $81B0   LD       V1, VB          ; V1 = VB
$874    $ABFD   LD       I, $BFD         ; Load BFD into I
$876    $B785   JP       V0, $785        ; Jump to V0 + 785
$878    $784D   ADD      V8, #4D         ; Add 77 to V8
$87A    $8EC9   UNKNOWN  8EC9            ; Unknown 8xxx instruction
$87C    $440C   SNE      V4, #0C         ; Skip if V4 != 12
$87E    $494E   SNE      V9, #4E         ; Skip if V9 != 78
$880    $745F   ADD      V4, #5F         ; Add 95 to V4
$882    $AC40   LD       I, $C40         ; Load C40 into I
$884    $4728   SNE      V7, #28         ; Skip if V7 != 40
$886    $4B5C   SNE      VB, #5C         ; Skip if VB != 92
$888    $D07E   DRW      V0, V7, #E      ; Draw 14-byte sprite at V0, V7
$88A    $3283   SE       V2, #83         ; Skip if V2 == 131
$88C    $5DED   UNKNOWN  $5DED           ; Unknown 5xxx instruction
$88E    $461C   SNE      V6, #1C         ; Skip if V6 != 28
$890    $07DE   SYS      $7DE            ; System call to 7DE
$892    $444F   SNE      V4, #4F         ; Skip if V4 != 79
$894    $E903   UNKNOWN  $E903           ; Unknown Exxx instruction
$896    $1B13   JP       $B13            ; Jump to B13
$898    $AEA0   LD       I, $EA0         ; Load EA0 into I
$89A    $B4DD   JP       V0, $4DD        ; Jump to V0 + 4DD
$89C    $A912   LD       I, $912         ; Load 912 into I
$89E    $946C   UNKNOWN  $946C           ; Unknown 9xxx instruction
$8A0    $FEC5   UNKNOWN  FEC5            ; Unknown Fxxx instruction
$8A2    $AAEF   LD       I, $AEF         ; Load AEF into I
$8A4    $C923   RND      V9, #23         ; V9 = random & 23
$8A6    $BECE   JP       V0, $ECE        ; Jump to V0 + ECE
$8A8    $9752   UNKNOWN  $9752           ; Unknown 9xxx instruction
$8AA    $D7FA   DRW      V7, VF, #A      ; Draw 10-byte sprite at V7, VF
$8AC    $4DD7   SNE      VD, #D7         ; Skip if VD != 215
$8AE    $9D99   UNKNOWN  $9D99           ; Unknown 9xxx instruction
$8B0    $581B   UNKNOWN  $581B           ; Unknown 5xxx instruction
$8B2    $F65B   UNKNOWN  F65B            ; Unknown Fxxx instruction
$8B4    $A832   LD       I, $832         ; Load 832 into I
$8B6    $5E52   UNKNOWN  $5E52           ; Unknown 5xxx instruction
$8B8    $8076   SHR      V0              ; V0 >>= 1, VF = LSB
$8BA    $5DB9   UNKNOWN  $5DB9           ; Unknown 5xxx instruction
$8BC    $68A8   LD       V8, #A8         ; Load 168 into V8
$8BE    $15CA   JP       $5CA            ; Jump to 5CA
$8C0    $044C   SYS      $44C            ; System call to 44C
$8C2    $BC88   JP       V0, $C88        ; Jump to V0 + C88
$8C4    $9CB2   UNKNOWN  $9CB2           ; Unknown 9xxx instruction
$8C6    $7373   ADD      V3, #73         ; Add 115 to V3
$8C8    $9E4A   UNKNOWN  $9E4A           ; Unknown 9xxx instruction
$8CA    $AFBC   LD       I, $FBC         ; Load FBC into I
$8CC    $EAA5   UNKNOWN  $EAA5           ; Unknown Exxx instruction
$8CE    $7ABD   ADD      VA, #BD         ; Add 189 to VA
$8D0    $E5FC   UNKNOWN  $E5FC           ; Unknown Exxx instruction
$8D2    $1D21   JP       $D21            ; Jump to D21
$8D4    $14C7   JP       $4C7            ; Jump to 4C7
$8D6    $95BD   UNKNOWN  $95BD           ; Unknown 9xxx instruction
$8D8    $6BB8   LD       VB, #B8         ; Load 184 into VB
$8DA    $254F   CALL     $54F            ; Call subroutine at 54F
$8DC    $D5D3   DRW      V5, VD, #3      ; Draw 3-byte sprite at V5, VD
$8DE    $40CD   SNE      V0, #CD         ; Skip if V0 != 205
$8E0    $7DE4   ADD      VD, #E4         ; Add 228 to VD
$8E2    $1F9B   JP       $F9B            ; Jump to F9B
$8E4    $37C4   SE       V7, #C4         ; Skip if V7 == 196
$8E6    $6611   LD       V6, #11         ; Load 17 into V6
$8E8    $8812   AND      V8, V1          ; V8 &= V1
$8EA    $39BE   SE       V9, #BE         ; Skip if V9 == 190
$8EC    $4B7B   SNE      VB, #7B         ; Skip if VB != 123
$8EE    $20DD   CALL     $0DD            ; Call subroutine at 0DD
$8F0    $61E1   LD       V1, #E1         ; Load 225 into V1
$8F2    $EACD   UNKNOWN  $EACD           ; Unknown Exxx instruction
$8F4    $76FC   ADD      V6, #FC         ; Add 252 to V6
$8F6    $8CE2   AND      VC, VE          ; VC &= VE
$8F8    $4D21   SNE      VD, #21         ; Skip if VD != 33
$8FA    $C575   RND      V5, #75         ; V5 = random & 75
$8FC    $736D   ADD      V3, #6D         ; Add 109 to V3
$8FE    $5091   UNKNOWN  $5091           ; Unknown 5xxx instruction
$900    $969E   UNKNOWN  $969E           ; Unknown 9xxx instruction
$902    $5E45   UNKNOWN  $5E45           ; Unknown 5xxx instruction
$904    $8038   UNKNOWN  8038            ; Unknown 8xxx instruction
$906    $C968   RND      V9, #68         ; V9 = random & 68
$908    $4DE4   SNE      VD, #E4         ; Skip if VD != 228
$90A    $55CA   UNKNOWN  $55CA           ; Unknown 5xxx instruction
$90C    $EA76   UNKNOWN  $EA76           ; Unknown Exxx instruction
$90E    $BBEE   JP       V0, $BEE        ; Jump to V0 + BEE
$910    $BDC0   JP       V0, $DC0        ; Jump to V0 + DC0
$912    $5EAD   UNKNOWN  $5EAD           ; Unknown 5xxx instruction
$914    $7F70   ADD      VF, #70         ; Add 112 to VF
$916    $0C15   SYS      $C15            ; System call to C15
$918    $60FF   LD       V0, #FF         ; Load 255 into V0
$91A    $BFBA   JP       V0, $FBA        ; Jump to V0 + FBA
$91C    $C30B   RND      V3, #0B         ; V3 = random & 0B
$91E    $006D   SYS      $06D            ; System call to 06D
$920    $BE73   JP       V0, $E73        ; Jump to V0 + E73
$922    $3DA1   SE       VD, #A1         ; Skip if VD == 161
$924    $2FAF   CALL     $FAF            ; Call subroutine at FAF
$926    $4722   SNE      V7, #22         ; Skip if V7 != 34
$928    $0E43   SYS      $E43            ; System call to E43
$92A    $BA58   JP       V0, $A58        ; Jump to V0 + A58
$92C    $1C9A   JP       $C9A            ; Jump to C9A
$92E    $63AF   LD       V3, #AF         ; Load 175 into V3
$930    $FF00   UNKNOWN  FF00            ; Unknown Fxxx instruction
$932    $D164   DRW      V1, V6, #4      ; Draw 4-byte sprite at V1, V6
$934    $AADC   LD       I, $ADC         ; Load ADC into I
$936    $4AC2   SNE      VA, #C2         ; Skip if VA != 194
$938    $B932   JP       V0, $932        ; Jump to V0 + 932
$93A    $7B61   ADD      VB, #61         ; Add 97 to VB
$93C    $0CFF   SYS      $CFF            ; System call to CFF
$93E    $DCEE   DRW      VC, VE, #E      ; Draw 14-byte sprite at VC, VE
$940    $BA84   JP       V0, $A84        ; Jump to V0 + A84
$942    $B93D   JP       V0, $93D        ; Jump to V0 + 93D
$944    $819E   SHL      V1              ; V1 <<= 1, VF = MSB
$946    $BB61   JP       V0, $B61        ; Jump to V0 + B61
$948    $E1BC   UNKNOWN  $E1BC           ; Unknown Exxx instruction
$94A    $3CB7   SE       VC, #B7         ; Skip if VC == 183
$94C    $3FB6   SE       VF, #B6         ; Skip if VF == 182
$94E    $354C   SE       V5, #4C         ; Skip if V5 == 76
$950    $D47B   DRW      V4, V7, #B      ; Draw 11-byte sprite at V4, V7
$952    $2432   CALL     $432            ; Call subroutine at 432
$954    $C3D1   RND      V3, #D1         ; V3 = random & D1
$956    $7AE0   ADD      VA, #E0         ; Add 224 to VA
$958    $4125   SNE      V1, #25         ; Skip if V1 != 37
$95A    $C4EE   RND      V4, #EE         ; V4 = random & EE
$95C    $CBAF   RND      VB, #AF         ; VB = random & AF
$95E    $C271   RND      V2, #71         ; V2 = random & 71
$960    $9696   UNKNOWN  $9696           ; Unknown 9xxx instruction
$962    $8125   SUB      V1, V2          ; V1 -= V2, VF = !borrow
$964    $1E8E   JP       $E8E            ; Jump to E8E
$966    $825D   UNKNOWN  825D            ; Unknown 8xxx instruction
$968    $9772   UNKNOWN  $9772           ; Unknown 9xxx instruction
$96A    $7952   ADD      V9, #52         ; Add 82 to V9
$96C    $C555   RND      V5, #55         ; V5 = random & 55
$96E    $AE6A   LD       I, $E6A         ; Load E6A into I
$970    $6F68   LD       VF, #68         ; Load 104 into VF
$972    $57A6   UNKNOWN  $57A6           ; Unknown 5xxx instruction
$974    $D547   DRW      V5, V4, #7      ; Draw 7-byte sprite at V5, V4
$976    $F898   UNKNOWN  F898            ; Unknown Fxxx instruction
$978    $59F5   UNKNOWN  $59F5           ; Unknown 5xxx instruction
$97A    $093C   SYS      $93C            ; System call to 93C
$97C    $892E   SHL      V9              ; V9 <<= 1, VF = MSB
$97E    $3945   SE       V9, #45         ; Skip if V9 == 69
$980    $E325   UNKNOWN  $E325           ; Unknown Exxx instruction
$982    $C34F   RND      V3, #4F         ; V3 = random & 4F
$984    $19CD   JP       $9CD            ; Jump to 9CD
$986    $0C62   SYS      $C62            ; System call to C62
$988    $BD04   JP       V0, $D04        ; Jump to V0 + D04
$98A    $D234   DRW      V2, V3, #4      ; Draw 4-byte sprite at V2, V3
$98C    $F1CD   UNKNOWN  F1CD            ; Unknown Fxxx instruction
$98E    $812B   UNKNOWN  812B            ; Unknown 8xxx instruction
$990    $08A0   SYS      $8A0            ; System call to 8A0
$992    $E0BE   UNKNOWN  $E0BE           ; Unknown Exxx instruction
$994    $739B   ADD      V3, #9B         ; Add 155 to V3
$996    $5F70   SE       VF, V7          ; Skip if VF == V7
$998    $EB88   UNKNOWN  $EB88           ; Unknown Exxx instruction
$99A    $3B0C   SE       VB, #0C         ; Skip if VB == 12
$99C    $B259   JP       V0, $259        ; Jump to V0 + 259
$99E    $A337   LD       I, $337         ; Load 337 into I
$9A0    $0F55   SYS      $F55            ; System call to F55
$9A2    $EC7C   UNKNOWN  $EC7C           ; Unknown Exxx instruction
$9A4    $FDCE   UNKNOWN  FDCE            ; Unknown Fxxx instruction
$9A6    $5B1F   UNKNOWN  $5B1F           ; Unknown 5xxx instruction
$9A8    $6560   LD       V5, #60         ; Load 96 into V5
$9AA    $6D5A   LD       VD, #5A         ; Load 90 into VD
$9AC    $25EF   CALL     $5EF            ; Call subroutine at 5EF
$9AE    $1F04   JP       $F04            ; Jump to F04
$9B0    $5ED4   UNKNOWN  $5ED4           ; Unknown 5xxx instruction
$9B2    $5DB4   UNKNOWN  $5DB4           ; Unknown 5xxx instruction
$9B4    $C512   RND      V5, #12         ; V5 = random & 12
$9B6    $77E1   ADD      V7, #E1         ; Add 225 to V7
$9B8    $A1CF   LD       I, $1CF         ; Load 1CF into I
$9BA    $7276   ADD      V2, #76         ; Add 118 to V2
$9BC    $EFEB   UNKNOWN  $EFEB           ; Unknown Exxx instruction
$9BE    $6FDE   LD       VF, #DE         ; Load 222 into VF
$9C0    $ED48   UNKNOWN  $ED48           ; Unknown Exxx instruction
$9C2    $0AF7   SYS      $AF7            ; System call to AF7
$9C4    $058F   SYS      $58F            ; System call to 58F
$9C6    $49F3   SNE      V9, #F3         ; Skip if V9 != 243
$9C8    $A8C9   LD       I, $8C9         ; Load 8C9 into I
$9CA    $39BF   SE       V9, #BF         ; Skip if V9 == 191
$9CC    $773B   ADD      V7, #3B         ; Add 59 to V7
$9CE    $227B   CALL     $27B            ; Call subroutine at 27B
$9D0    $4FEF   SNE      VF, #EF         ; Skip if VF != 239
$9D2    $C10B   RND      V1, #0B         ; V1 = random & 0B
$9D4    $5FAD   UNKNOWN  $5FAD           ; Unknown 5xxx instruction
$9D6    $2356   CALL     $356            ; Call subroutine at 356
$9D8    $264E   CALL     $64E            ; Call subroutine at 64E
$9DA    $8C37   SUBN     VC, V3          ; VC = V3 - VC, VF = !borrow
$9DC    $A91C   LD       I, $91C         ; Load 91C into I
$9DE    $0A46   SYS      $A46            ; System call to A46
$9E0    $9969   UNKNOWN  $9969           ; Unknown 9xxx instruction
$9E2    $915A   UNKNOWN  $915A           ; Unknown 9xxx instruction
$9E4    $ED22   UNKNOWN  $ED22           ; Unknown Exxx instruction
$9E6    $1199   JP       $199            ; Jump to 199
$9E8    $F6B4   UNKNOWN  F6B4            ; Unknown Fxxx instruction
$9EA    $FA12   UNKNOWN  FA12            ; Unknown Fxxx instruction
$9EC    $D172   DRW      V1, V7, #2      ; Draw 2-byte sprite at V1, V7
$9EE    $39DD   SE       V9, #DD         ; Skip if V9 == 221
$9F0    $8596   SHR      V5              ; V5 >>= 1, VF = LSB
$9F2    $98EA   UNKNOWN  $98EA           ; Unknown 9xxx instruction
$9F4    $95BA   UNKNOWN  $95BA           ; Unknown 9xxx instruction
$9F6    $5C9D   UNKNOWN  $5C9D           ; Unknown 5xxx instruction
$9F8    $6DB5   LD       VD, #B5         ; Load 181 into VD
$9FA    $0A01   SYS      $A01            ; System call to A01
$9FC    $F92A   UNKNOWN  F92A            ; Unknown Fxxx instruction
$9FE    $B7C6   JP       V0, $7C6        ; Jump to V0 + 7C6
$A00    $19BF   JP       $9BF            ; Jump to 9BF
$A02    $FF17   UNKNOWN  FF17            ; Unknown Fxxx instruction
$A04    $8A8E   SHL      VA              ; VA <<= 1, VF = MSB
$A06    $F7D9   UNKNOWN  F7D9            ; Unknown Fxxx instruction
$A08    $1C7A   JP       $C7A            ; Jump to C7A
$A0A    $C9B8   RND      V9, #B8         ; V9 = random & B8
$A0C    $6F2C   LD       VF, #2C         ; Load 44 into VF
$A0E    $C440   RND      V4, #40         ; V4 = random & 40
$A10    $A801   LD       I, $801         ; Load 801 into I
$A12    $E7F7   UNKNOWN  $E7F7           ; Unknown Exxx instruction
$A14    $A04B   LD       I, $04B         ; Load 04B into I
$A16    $3BDB   SE       VB, #DB         ; Skip if VB == 219
$A18    $F061   UNKNOWN  F061            ; Unknown Fxxx instruction
$A1A    $A521   LD       I, $521         ; Load 521 into I
$A1C    $D3CA   DRW      V3, VC, #A      ; Draw 10-byte sprite at V3, VC
$A1E    $F113   UNKNOWN  F113            ; Unknown Fxxx instruction
$A20    $83F3   XOR      V3, VF          ; V3 ^= VF
$A22    $D855   DRW      V8, V5, #5      ; Draw 5-byte sprite at V8, V5
$A24    $6E2F   LD       VE, #2F         ; Load 47 into VE
$A26    $B8A6   JP       V0, $8A6        ; Jump to V0 + 8A6
$A28    $0636   SYS      $636            ; System call to 636
$A2A    $7BC1   ADD      VB, #C1         ; Add 193 to VB
$A2C    $0DC4   SYS      $DC4            ; System call to DC4
$A2E    $7ED0   ADD      VE, #D0         ; Add 208 to VE
$A30    $3767   SE       V7, #67         ; Skip if V7 == 103
$A32    $6AC7   LD       VA, #C7         ; Load 199 into VA
$A34    $C2DD   RND      V2, #DD         ; V2 = random & DD
$A36    $14F9   JP       $4F9            ; Jump to 4F9
$A38    $58E8   UNKNOWN  $58E8           ; Unknown 5xxx instruction
$A3A    $7637   ADD      V6, #37         ; Add 55 to V6
$A3C    $EB61   UNKNOWN  $EB61           ; Unknown Exxx instruction
$A3E    $DCED   DRW      VC, VE, #D      ; Draw 13-byte sprite at VC, VE
$A40    $1B64   JP       $B64            ; Jump to B64
$A42    $98C4   UNKNOWN  $98C4           ; Unknown 9xxx instruction
$A44    $7519   ADD      V5, #19         ; Add 25 to V5
$A46    $7423   ADD      V4, #23         ; Add 35 to V4
$A48    $B57A   JP       V0, $57A        ; Jump to V0 + 57A
$A4A    $6197   LD       V1, #97         ; Load 151 into V1
$A4C    $6C05   LD       VC, #05         ; Load 5 into VC
$A4E    $A4EA   LD       I, $4EA         ; Load 4EA into I
$A50    $DF79   DRW      VF, V7, #9      ; Draw 9-byte sprite at VF, V7
$A52    $D220   DRW      V2, V2, #0      ; Draw 0-byte sprite at V2, V2
$A54    $6ADC   LD       VA, #DC         ; Load 220 into VA
$A56    $5FD5   UNKNOWN  $5FD5           ; Unknown 5xxx instruction
$A58    $F04B   UNKNOWN  F04B            ; Unknown Fxxx instruction
$A5A    $9780   SNE      V7, V8          ; Skip if V7 != V8
$A5C    $4758   SNE      V7, #58         ; Skip if V7 != 88
$A5E    $190C   JP       $90C            ; Jump to 90C
$A60    $9FC7   UNKNOWN  $9FC7           ; Unknown 9xxx instruction
$A62    $C286   RND      V2, #86         ; V2 = random & 86
$A64    $AA5E   LD       I, $A5E         ; Load A5E into I
$A66    $CA82   RND      VA, #82         ; VA = random & 82
$A68    $B5A5   JP       V0, $5A5        ; Jump to V0 + 5A5
$A6A    $DEB5   DRW      VE, VB, #5      ; Draw 5-byte sprite at VE, VB
$A6C    $AFD7   LD       I, $FD7         ; Load FD7 into I
$A6E    $CC50   RND      VC, #50         ; VC = random & 50
$A70    $D6E5   DRW      V6, VE, #5      ; Draw 5-byte sprite at V6, VE
$A72    $6778   LD       V7, #78         ; Load 120 into V7
$A74    $768C   ADD      V6, #8C         ; Add 140 to V6
$A76    $CF35   RND      VF, #35         ; VF = random & 35
$A78    $648C   LD       V4, #8C         ; Load 140 into V4
$A7A    $5872   UNKNOWN  $5872           ; Unknown 5xxx instruction
$A7C    $91D5   UNKNOWN  $91D5           ; Unknown 9xxx instruction
$A7E    $681E   LD       V8, #1E         ; Load 30 into V8
$A80    $FEE6   UNKNOWN  FEE6            ; Unknown Fxxx instruction
$A82    $D141   DRW      V1, V4, #1      ; Draw 1-byte sprite at V1, V4
$A84    $8EC9   UNKNOWN  8EC9            ; Unknown 8xxx instruction
$A86    $A848   LD       I, $848         ; Load 848 into I
$A88    $A143   LD       I, $143         ; Load 143 into I
$A8A    $417F   SNE      V1, #7F         ; Skip if V1 != 127
$A8C    $7A51   ADD      VA, #51         ; Add 81 to VA
$A8E    $B2BF   JP       V0, $2BF        ; Jump to V0 + 2BF
$A90    $3480   SE       V4, #80         ; Skip if V4 == 128
$A92    $D9B9   DRW      V9, VB, #9      ; Draw 9-byte sprite at V9, VB
$A94    $78D8   ADD      V8, #D8         ; Add 216 to V8
$A96    $F4BA   UNKNOWN  F4BA            ; Unknown Fxxx instruction
$A98    $5D1B   UNKNOWN  $5D1B           ; Unknown 5xxx instruction
$A9A    $6852   LD       V8, #52         ; Load 82 into V8
$A9C    $1CF4   JP       $CF4            ; Jump to CF4
$A9E    $DF58   DRW      VF, V5, #8      ; Draw 8-byte sprite at VF, V5
$AA0    $A2FB   LD       I, $2FB         ; Load 2FB into I
$AA2    $D3FA   DRW      V3, VF, #A      ; Draw 10-byte sprite at V3, VF
$AA4    $D53F   DRW      V5, V3, #F      ; Draw 15-byte sprite at V5, V3
$AA6    $2BBF   CALL     $BBF            ; Call subroutine at BBF
$AA8    $0BDE   SYS      $BDE            ; System call to BDE
$AAA    $5376   UNKNOWN  $5376           ; Unknown 5xxx instruction
$AAC    $C6A2   RND      V6, #A2         ; V6 = random & A2
$AAE    $0246   SYS      $246            ; System call to 246
$AB0    $A7B0   LD       I, $7B0         ; Load 7B0 into I
$AB2    $B011   JP       V0, $011        ; Jump to V0 + 011
$AB4    $B2C6   JP       V0, $2C6        ; Jump to V0 + 2C6
$AB6    $95B0   SNE      V5, VB          ; Skip if V5 != VB
$AB8    $71B8   ADD      V1, #B8         ; Add 184 to V1
$ABA    $3962   SE       V9, #62         ; Skip if V9 == 98
$ABC    $83F1   OR       V3, VF          ; V3 |= VF
$ABE    $DB81   DRW      VB, V8, #1      ; Draw 1-byte sprite at VB, V8
$AC0    $41A3   SNE      V1, #A3         ; Skip if V1 != 163
$AC2    $BF82   JP       V0, $F82        ; Jump to V0 + F82
$AC4    $9477   UNKNOWN  $9477           ; Unknown 9xxx instruction
$AC6    $CE88   RND      VE, #88         ; VE = random & 88
$AC8    $E69E   SKP      V6              ; Skip if key V6 pressed
$ACA    $F906   UNKNOWN  F906            ; Unknown Fxxx instruction
$ACC    $D8F9   DRW      V8, VF, #9      ; Draw 9-byte sprite at V8, VF
$ACE    $A1F6   LD       I, $1F6         ; Load 1F6 into I
$AD0    $8A0E   SHL      VA              ; VA <<= 1, VF = MSB
$AD2    $9CF7   UNKNOWN  $9CF7           ; Unknown 9xxx instruction
$AD4    $B19A   JP       V0, $19A        ; Jump to V0 + 19A
$AD6    $844D   UNKNOWN  844D            ; Unknown 8xxx instruction
$AD8    $700F   ADD      V0, #0F         ; Add 15 to V0
$ADA    $3620   SE       V6, #20         ; Skip if V6 == 32
$ADC    $4DB4   SNE      VD, #B4         ; Skip if VD != 180
$ADE    $CD30   RND      VD, #30         ; VD = random & 30
$AE0    $B06E   JP       V0, $06E        ; Jump to V0 + 06E
$AE2    $02DD   SYS      $2DD            ; System call to 2DD
$AE4    $A175   LD       I, $175         ; Load 175 into I
$AE6    $8FFB   UNKNOWN  8FFB            ; Unknown 8xxx instruction
$AE8    $6A2F   LD       VA, #2F         ; Load 47 into VA
$AEA    $904B   UNKNOWN  $904B           ; Unknown 9xxx instruction
$AEC    $8810   LD       V8, V1          ; V8 = V1
$AEE    $D29E   DRW      V2, V9, #E      ; Draw 14-byte sprite at V2, V9
$AF0    $B399   JP       V0, $399        ; Jump to V0 + 399
$AF2    $96BE   UNKNOWN  $96BE           ; Unknown 9xxx instruction
$AF4    $6CF2   LD       VC, #F2         ; Load 242 into VC
$AF6    $0A71   SYS      $A71            ; System call to A71
$AF8    $167B   JP       $67B            ; Jump to 67B
$AFA    $2997   CALL     $997            ; Call subroutine at 997
$AFC    $3BFF   SE       VB, #FF         ; Skip if VB == 255
$AFE    $F75A   UNKNOWN  F75A            ; Unknown Fxxx instruction
$B00    $7738   ADD      V7, #38         ; Add 56 to V7
$B02    $9EDF   UNKNOWN  $9EDF           ; Unknown 9xxx instruction
$B04    $5BE1   UNKNOWN  $5BE1           ; Unknown 5xxx instruction
$B06    $A6C5   LD       I, $6C5         ; Load 6C5 into I
$B08    $6105   LD       V1, #05         ; Load 5 into V1
$B0A    $FD4D   UNKNOWN  FD4D            ; Unknown Fxxx instruction
$B0C    $D4AB   DRW      V4, VA, #B      ; Draw 11-byte sprite at V4, VA
$B0E    $FC0C   UNKNOWN  FC0C            ; Unknown Fxxx instruction
$B10    $7EE4   ADD      VE, #E4         ; Add 228 to VE
$B12    $1817   JP       $817            ; Jump to 817
$B14    $BB1A   JP       V0, $B1A        ; Jump to V0 + B1A
$B16    $9B7A   UNKNOWN  $9B7A           ; Unknown 9xxx instruction
$B18    $38A5   SE       V8, #A5         ; Skip if V8 == 165
$B1A    $DBD8   DRW      VB, VD, #8      ; Draw 8-byte sprite at VB, VD
$B1C    $D131   DRW      V1, V3, #1      ; Draw 1-byte sprite at V1, V3
$B1E    $F200   UNKNOWN  F200            ; Unknown Fxxx instruction
$B20    $0613   SYS      $613            ; System call to 613
$B22    $106D   JP       $06D            ; Jump to 06D
$B24    $36BA   SE       V6, #BA         ; Skip if V6 == 186
$B26    $92D6   UNKNOWN  $92D6           ; Unknown 9xxx instruction
$B28    $0770   SYS      $770            ; System call to 770
$B2A    $445C   SNE      V4, #5C         ; Skip if V4 != 92
$B2C    $78A4   ADD      V8, #A4         ; Add 164 to V8
$B2E    $AA5A   LD       I, $A5A         ; Load A5A into I
$B30    $E786   UNKNOWN  $E786           ; Unknown Exxx instruction
$B32    $9A34   UNKNOWN  $9A34           ; Unknown 9xxx instruction
$B34    $C55D   RND      V5, #5D         ; V5 = random & 5D
$B36    $948D   UNKNOWN  $948D           ; Unknown 9xxx instruction
$B38    $520C   UNKNOWN  $520C           ; Unknown 5xxx instruction
$B3A    $FEEB   UNKNOWN  FEEB            ; Unknown Fxxx instruction
$B3C    $9CFA   UNKNOWN  $9CFA           ; Unknown 9xxx instruction
$B3E    $9478   UNKNOWN  $9478           ; Unknown 9xxx instruction
$B40    $AF34   LD       I, $F34         ; Load F34 into I
$B42    $AEBB   LD       I, $EBB         ; Load EBB into I
$B44    $8C44   ADD      VC, V4          ; VC += V4, VF = carry
$B46    $2B63   CALL     $B63            ; Call subroutine at B63
$B48    $5116   UNKNOWN  $5116           ; Unknown 5xxx instruction
$B4A    $6799   LD       V7, #99         ; Load 153 into V7
$B4C    $FC15   LD       DT, VC          ; Delay timer = VC
$B4E    $A9E6   LD       I, $9E6         ; Load 9E6 into I
$B50    $2D68   CALL     $D68            ; Call subroutine at D68
$B52    $E516   UNKNOWN  $E516           ; Unknown Exxx instruction
$B54    $03AF   SYS      $3AF            ; System call to 3AF
$B56    $BBDD   JP       V0, $BDD        ; Jump to V0 + BDD
$B58    $C986   RND      V9, #86         ; V9 = random & 86
$B5A    $FE2F   UNKNOWN  FE2F            ; Unknown Fxxx instruction
$B5C    $219A   CALL     $19A            ; Call subroutine at 19A
$B5E    $772C   ADD      V7, #2C         ; Add 44 to V7
$B60    $2C2D   CALL     $C2D            ; Call subroutine at C2D
$B62    $592B   UNKNOWN  $592B           ; Unknown 5xxx instruction
$B64    $B89E   JP       V0, $89E        ; Jump to V0 + 89E
$B66    $4320   SNE      V3, #20         ; Skip if V3 != 32
$B68    $A2A6   LD       I, $2A6         ; Load 2A6 into I
$B6A    $BB9D   JP       V0, $B9D        ; Jump to V0 + B9D
$B6C    $C24C   RND      V2, #4C         ; V2 = random & 4C
$B6E    $5189   UNKNOWN  $5189           ; Unknown 5xxx instruction
$B70    $C72A   RND      V7, #2A         ; V7 = random & 2A
$B72    $E150   UNKNOWN  $E150           ; Unknown Exxx instruction
$B74    $9A8B   UNKNOWN  $9A8B           ; Unknown 9xxx instruction
$B76    $5DE5   UNKNOWN  $5DE5           ; Unknown 5xxx instruction
$B78    $CCAB   RND      VC, #AB         ; VC = random & AB
$B7A    $0B4B   SYS      $B4B            ; System call to B4B
$B7C    $C7F3   RND      V7, #F3         ; V7 = random & F3
$B7E    $AB91   LD       I, $B91         ; Load B91 into I
$B80    $9C77   UNKNOWN  $9C77           ; Unknown 9xxx instruction
$B82    $D697   DRW      V6, V9, #7      ; Draw 7-byte sprite at V6, V9
$B84    $E35D   UNKNOWN  $E35D           ; Unknown Exxx instruction
$B86    $6FEA   LD       VF, #EA         ; Load 234 into VF
$B88    $4820   SNE      V8, #20         ; Skip if V8 != 32
$B8A    $6EB6   LD       VE, #B6         ; Load 182 into VE
$B8C    $DD86   DRW      VD, V8, #6      ; Draw 6-byte sprite at VD, V8
$B8E    $0F4E   SYS      $F4E            ; System call to F4E
$B90    $A800   LD       I, $800         ; Load 800 into I
$B92    $E01C   UNKNOWN  $E01C           ; Unknown Exxx instruction
$B94    $539A   UNKNOWN  $539A           ; Unknown 5xxx instruction
$B96    $B0B4   JP       V0, $0B4        ; Jump to V0 + 0B4
$B98    $B0A9   JP       V0, $0A9        ; Jump to V0 + 0A9
$B9A    $F2AB   UNKNOWN  F2AB            ; Unknown Fxxx instruction
$B9C    $8FAA   UNKNOWN  8FAA            ; Unknown 8xxx instruction
$B9E    $ACEA   LD       I, $CEA         ; Load CEA into I
$BA0    $9A0B   UNKNOWN  $9A0B           ; Unknown 9xxx instruction
$BA2    $0D04   SYS      $D04            ; System call to D04
$BA4    $BCB3   JP       V0, $CB3        ; Jump to V0 + CB3
$BA6    $E01D   UNKNOWN  $E01D           ; Unknown Exxx instruction
$BA8    $77DC   ADD      V7, #DC         ; Add 220 to V7
$BAA    $BEEE   JP       V0, $EEE        ; Jump to V0 + EEE
$BAC    $399C   SE       V9, #9C         ; Skip if V9 == 156
$BAE    $B9E8   JP       V0, $9E8        ; Jump to V0 + 9E8
$BB0    $B5B7   JP       V0, $5B7        ; Jump to V0 + 5B7
$BB2    $D098   DRW      V0, V9, #8      ; Draw 8-byte sprite at V0, V9
$BB4    $604D   LD       V0, #4D         ; Load 77 into V0
$BB6    $890D   UNKNOWN  890D            ; Unknown 8xxx instruction
$BB8    $2925   CALL     $925            ; Call subroutine at 925
$BBA    $DDE5   DRW      VD, VE, #5      ; Draw 5-byte sprite at VD, VE
$BBC    $926C   UNKNOWN  $926C           ; Unknown 9xxx instruction
$BBE    $1667   JP       $667            ; Jump to 667
$BC0    $6335   LD       V3, #35         ; Load 53 into V3
$BC2    $547A   UNKNOWN  $547A           ; Unknown 5xxx instruction
$BC4    $07DA   SYS      $7DA            ; System call to 7DA
$BC6    $78EB   ADD      V8, #EB         ; Add 235 to V8
$BC8    $A641   LD       I, $641         ; Load 641 into I
$BCA    $172D   JP       $72D            ; Jump to 72D
$BCC    $F493   UNKNOWN  F493            ; Unknown Fxxx instruction
$BCE    $896E   SHL      V9              ; V9 <<= 1, VF = MSB
$BD0    $30DA   SE       V0, #DA         ; Skip if V0 == 218
$BD2    $BD8B   JP       V0, $D8B        ; Jump to V0 + D8B
$BD4    $2C2C   CALL     $C2C            ; Call subroutine at C2C
$BD6    $76F9   ADD      V6, #F9         ; Add 249 to V6
$BD8    $32EC   SE       V2, #EC         ; Skip if V2 == 236
$BDA    $5956   UNKNOWN  $5956           ; Unknown 5xxx instruction
$BDC    $648E   LD       V4, #8E         ; Load 142 into V4
$BDE    $6E7B   LD       VE, #7B         ; Load 123 into VE
$BE0    $5665   UNKNOWN  $5665           ; Unknown 5xxx instruction
$BE2    $817F   UNKNOWN  817F            ; Unknown 8xxx instruction
$BE4    $924E   UNKNOWN  $924E           ; Unknown 9xxx instruction
$BE6    $4CBA   SNE      VC, #BA         ; Skip if VC != 186
$BE8    $9EAE   UNKNOWN  $9EAE           ; Unknown 9xxx instruction
$BEA    $0481   SYS      $481            ; System call to 481
$BEC    $2960   CALL     $960            ; Call subroutine at 960
$BEE    $AABA   LD       I, $ABA         ; Load ABA into I
$BF0    $4DB1   SNE      VD, #B1         ; Skip if VD != 177
$BF2    $29EA   CALL     $9EA            ; Call subroutine at 9EA
$BF4    $120C   JP       $20C            ; Jump to 20C
$BF6    $E50D   UNKNOWN  $E50D           ; Unknown Exxx instruction
$BF8    $E1E7   UNKNOWN  $E1E7           ; Unknown Exxx instruction
$BFA    $A832   LD       I, $832         ; Load 832 into I
$BFC    $D67D   DRW      V6, V7, #D      ; Draw 13-byte sprite at V6, V7
$BFE    $7A55   ADD      VA, #55         ; Add 85 to VA
$C00    $9ED2   UNKNOWN  $9ED2           ; Unknown 9xxx instruction
$C02    $ABA0   LD       I, $BA0         ; Load BA0 into I
$C04    $715D   ADD      V1, #5D         ; Add 93 to V1
$C06    $DB5E   DRW      VB, V5, #E      ; Draw 14-byte sprite at VB, V5
$C08    $62B6   LD       V2, #B6         ; Load 182 into V2
$C0A    $5F19   UNKNOWN  $5F19           ; Unknown 5xxx instruction
$C0C    $626A   LD       V2, #6A         ; Load 106 into V2
$C0E    $059D   SYS      $59D            ; System call to 59D
$C10    $68CF   LD       V8, #CF         ; Load 207 into V8
$C12    $EAA1   SKNP     VA              ; Skip if key VA not pressed
$C14    $5C8E   UNKNOWN  $5C8E           ; Unknown 5xxx instruction
$C16    $D56D   DRW      V5, V6, #D      ; Draw 13-byte sprite at V5, V6
$C18    $B559   JP       V0, $559        ; Jump to V0 + 559
$C1A    $6E71   LD       VE, #71         ; Load 113 into VE
$C1C    $F724   UNKNOWN  F724            ; Unknown Fxxx instruction
$C1E    $D9DC   DRW      V9, VD, #C      ; Draw 12-byte sprite at V9, VD
$C20    $E0F6   UNKNOWN  $E0F6           ; Unknown Exxx instruction
$C22    $135A   JP       $35A            ; Jump to 35A
$C24    $9686   UNKNOWN  $9686           ; Unknown 9xxx instruction
$C26    $C2CF   RND      V2, #CF         ; V2 = random & CF
$C28    $D48A   DRW      V4, V8, #A      ; Draw 10-byte sprite at V4, V8
$C2A    $A13E   LD       I, $13E         ; Load 13E into I
$C2C    $C30D   RND      V3, #0D         ; V3 = random & 0D
$C2E    $1CEC   JP       $CEC            ; Jump to CEC
$C30    $B8B1   JP       V0, $8B1        ; Jump to V0 + 8B1
$C32    $5115   UNKNOWN  $5115           ; Unknown 5xxx instruction
$C34    $A14F   LD       I, $14F         ; Load 14F into I
$C36    $05EF   SYS      $5EF            ; System call to 5EF
$C38    $A56D   LD       I, $56D         ; Load 56D into I
$C3A    $2344   CALL     $344            ; Call subroutine at 344
$C3C    $20B0   CALL     $0B0            ; Call subroutine at 0B0
$C3E    $FB61   UNKNOWN  FB61            ; Unknown Fxxx instruction
$C40    $4FDD   SNE      VF, #DD         ; Skip if VF != 221
$C42    $7290   ADD      V2, #90         ; Add 144 to V2
$C44    $3E37   SE       VE, #37         ; Skip if VE == 55
$C46    $ECB4   UNKNOWN  $ECB4           ; Unknown Exxx instruction
$C48    $92F0   SNE      V2, VF          ; Skip if V2 != VF
$C4A    $5332   UNKNOWN  $5332           ; Unknown 5xxx instruction
$C4C    $D00F   DRW      V0, V0, #F      ; Draw 15-byte sprite at V0, V0
$C4E    $0C2C   SYS      $C2C            ; System call to C2C
$C50    $84F1   OR       V4, VF          ; V4 |= VF
$C52    $295F   CALL     $95F            ; Call subroutine at 95F
$C54    $C834   RND      V8, #34         ; V8 = random & 34
$C56    $C551   RND      V5, #51         ; V5 = random & 51
$C58    $A588   LD       I, $588         ; Load 588 into I
$C5A    $CE53   RND      VE, #53         ; VE = random & 53
$C5C    $45EF   SNE      V5, #EF         ; Skip if V5 != 239
$C5E    $9C17   UNKNOWN  $9C17           ; Unknown 9xxx instruction
$C60    $3819   SE       V8, #19         ; Skip if V8 == 25
$C62    $CB71   RND      VB, #71         ; VB = random & 71
$C64    $896E   SHL      V9              ; V9 <<= 1, VF = MSB
$C66    $9776   UNKNOWN  $9776           ; Unknown 9xxx instruction
$C68    $C0B4   RND      V0, #B4         ; V0 = random & B4
$C6A    $62D7   LD       V2, #D7         ; Load 215 into V2
$C6C    $F9DC   UNKNOWN  F9DC            ; Unknown Fxxx instruction
$C6E    $3054   SE       V0, #54         ; Skip if V0 == 84
$C70    $7A7C   ADD      VA, #7C         ; Add 124 to VA
$C72    $35F4   SE       V5, #F4         ; Skip if V5 == 244
$C74    $B3E2   JP       V0, $3E2        ; Jump to V0 + 3E2
$C76    $50F8   UNKNOWN  $50F8           ; Unknown 5xxx instruction
$C78    $F931   UNKNOWN  F931            ; Unknown Fxxx instruction
$C7A    $E03F   UNKNOWN  $E03F           ; Unknown Exxx instruction
$C7C    $528B   UNKNOWN  $528B           ; Unknown 5xxx instruction
$C7E    $2D72   CALL     $D72            ; Call subroutine at D72
$C80    $18F5   JP       $8F5            ; Jump to 8F5
$C82    $163D   JP       $63D            ; Jump to 63D
$C84    $DAC9   DRW      VA, VC, #9      ; Draw 9-byte sprite at VA, VC
$C86    $D523   DRW      V5, V2, #3      ; Draw 3-byte sprite at V5, V2
$C88    $2ACB   CALL     $ACB            ; Call subroutine at ACB
$C8A    $B7A7   JP       V0, $7A7        ; Jump to V0 + 7A7
$C8C    $8599   UNKNOWN  8599            ; Unknown 8xxx instruction
$C8E    $1BED   JP       $BED            ; Jump to BED
$C90    $CF2F   RND      VF, #2F         ; VF = random & 2F
$C92    $7A64   ADD      VA, #64         ; Add 100 to VA
$C94    $CCE9   RND      VC, #E9         ; VC = random & E9
$C96    $714E   ADD      V1, #4E         ; Add 78 to V1
$C98    $F96C   UNKNOWN  F96C            ; Unknown Fxxx instruction
$C9A    $D798   DRW      V7, V9, #8      ; Draw 8-byte sprite at V7, V9
$C9C    $E0BE   UNKNOWN  $E0BE           ; Unknown Exxx instruction
$C9E    $EA05   UNKNOWN  $EA05           ; Unknown Exxx instruction
$CA0    $FB2F   UNKNOWN  FB2F            ; Unknown Fxxx instruction
$CA2    $CE0F   RND      VE, #0F         ; VE = random & 0F
$CA4    $3EB0   SE       VE, #B0         ; Skip if VE == 176
$CA6    $D028   DRW      V0, V2, #8      ; Draw 8-byte sprite at V0, V2
$CA8    $BB0B   JP       V0, $B0B        ; Jump to V0 + B0B
$CAA    $21BE   CALL     $1BE            ; Call subroutine at 1BE
$CAC    $CF58   RND      VF, #58         ; VF = random & 58
$CAE    $60D8   LD       V0, #D8         ; Load 216 into V0
$CB0    $F830   UNKNOWN  F830            ; Unknown Fxxx instruction
$CB2    $4414   SNE      V4, #14         ; Skip if V4 != 20
$CB4    $480F   SNE      V8, #0F         ; Skip if V8 != 15
$CB6    $2322   CALL     $322            ; Call subroutine at 322
$CB8    $BFA9   JP       V0, $FA9        ; Jump to V0 + FA9
$CBA    $74DA   ADD      V4, #DA         ; Add 218 to V4
$CBC    $C823   RND      V8, #23         ; V8 = random & 23
$CBE    $7DE9   ADD      VD, #E9         ; Add 233 to VD
$CC0    $28D4   CALL     $8D4            ; Call subroutine at 8D4
$CC2    $B4C5   JP       V0, $4C5        ; Jump to V0 + 4C5
$CC4    $3AB1   SE       VA, #B1         ; Skip if VA == 177
$CC6    $ADFF   LD       I, $DFF         ; Load DFF into I
$CC8    $4BD4   SNE      VB, #D4         ; Skip if VB != 212
$CCA    $5967   UNKNOWN  $5967           ; Unknown 5xxx instruction
$CCC    $359B   SE       V5, #9B         ; Skip if V5 == 155
$CCE    $D0F9   DRW      V0, VF, #9      ; Draw 9-byte sprite at V0, VF
$CD0    $297B   CALL     $97B            ; Call subroutine at 97B
$CD2    $AEE5   LD       I, $EE5         ; Load EE5 into I
$CD4    $4EF0   SNE      VE, #F0         ; Skip if VE != 240
$CD6    $80A5   SUB      V0, VA          ; V0 -= VA, VF = !borrow
$CD8    $382D   SE       V8, #2D         ; Skip if V8 == 45
$CDA    $F3F9   UNKNOWN  F3F9            ; Unknown Fxxx instruction
$CDC    $C9ED   RND      V9, #ED         ; V9 = random & ED
$CDE    $E12C   UNKNOWN  $E12C           ; Unknown Exxx instruction
$CE0    $AD60   LD       I, $D60         ; Load D60 into I
$CE2    $C46A   RND      V4, #6A         ; V4 = random & 6A
$CE4    $5B24   UNKNOWN  $5B24           ; Unknown 5xxx instruction
$CE6    $39BC   SE       V9, #BC         ; Skip if V9 == 188
$CE8    $96F6   UNKNOWN  $96F6           ; Unknown 9xxx instruction
$CEA    $4A78   SNE      VA, #78         ; Skip if VA != 120
$CEC    $FF90   UNKNOWN  FF90            ; Unknown Fxxx instruction
$CEE    $F9B3   UNKNOWN  F9B3            ; Unknown Fxxx instruction
$CF0    $66C4   LD       V6, #C4         ; Load 196 into V6
$CF2    $F4E6   UNKNOWN  F4E6            ; Unknown Fxxx instruction
$CF4    $5BCB   UNKNOWN  $5BCB           ; Unknown 5xxx instruction
$CF6    $4699   SNE      V6, #99         ; Skip if V6 != 153
$CF8    $C039   RND      V0, #39         ; V0 = random & 39
$CFA    $F90A   LD       V9, K           ; Wait for key press, store in V9
$CFC    $C28F   RND      V2, #8F         ; V2 = random & 8F
$CFE    $256C   CALL     $56C            ; Call subroutine at 56C
$D00    $1D3F   JP       $D3F            ; Jump to D3F
$D02    $3A6B   SE       VA, #6B         ; Skip if VA == 107
$D04    $BA0C   JP       V0, $A0C        ; Jump to V0 + A0C
$D06    $658B   LD       V5, #8B         ; Load 139 into V5
$D08    $1ECA   JP       $ECA            ; Jump to ECA
$D0A    $B04C   JP       V0, $04C        ; Jump to V0 + 04C
$D0C    $1B59   JP       $B59            ; Jump to B59
$D0E    $3E85   SE       VE, #85         ; Skip if VE == 133
$D10    $4D98   SNE      VD, #98         ; Skip if VD != 152
$D12    $A795   LD       I, $795         ; Load 795 into I
$D14    $2166   CALL     $166            ; Call subroutine at 166
$D16    $E0A7   UNKNOWN  $E0A7           ; Unknown Exxx instruction
$D18    $9E26   UNKNOWN  $9E26           ; Unknown 9xxx instruction
$D1A    $9E2E   UNKNOWN  $9E2E           ; Unknown 9xxx instruction
$D1C    $858C   UNKNOWN  858C            ; Unknown 8xxx instruction
$D1E    $D0D0   DRW      V0, VD, #0      ; Draw 0-byte sprite at V0, VD
$D20    $085C   SYS      $85C            ; System call to 85C
$D22    $C5CA   RND      V5, #CA         ; V5 = random & CA
$D24    $BC85   JP       V0, $C85        ; Jump to V0 + C85
$D26    $6A41   LD       VA, #41         ; Load 65 into VA
$D28    $9B92   UNKNOWN  $9B92           ; Unknown 9xxx instruction
$D2A    $FE60   UNKNOWN  FE60            ; Unknown Fxxx instruction
$D2C    $33BB   SE       V3, #BB         ; Skip if V3 == 187
$D2E    $C0A7   RND      V0, #A7         ; V0 = random & A7
$D30    $60BB   LD       V0, #BB         ; Load 187 into V0
$D32    $9C0E   UNKNOWN  $9C0E           ; Unknown 9xxx instruction
$D34    $DDC7   DRW      VD, VC, #7      ; Draw 7-byte sprite at VD, VC
$D36    $E5AC   UNKNOWN  $E5AC           ; Unknown Exxx instruction
$D38    $8C7C   UNKNOWN  8C7C            ; Unknown 8xxx instruction
$D3A    $3954   SE       V9, #54         ; Skip if V9 == 84
$D3C    $B419   JP       V0, $419        ; Jump to V0 + 419
$D3E    $0CAA   SYS      $CAA            ; System call to CAA
$D40    $C279   RND      V2, #79         ; V2 = random & 79
$D42    $C91B   RND      V9, #1B         ; V9 = random & 1B
$D44    $3B1F   SE       VB, #1F         ; Skip if VB == 31
$D46    $6ACD   LD       VA, #CD         ; Load 205 into VA
$D48    $AB1A   LD       I, $B1A         ; Load B1A into I
$D4A    $A2ED   LD       I, $2ED         ; Load 2ED into I
$D4C    $F584   UNKNOWN  F584            ; Unknown Fxxx instruction
$D4E    $EAC0   UNKNOWN  $EAC0           ; Unknown Exxx instruction
$D50    $1432   JP       $432            ; Jump to 432
$D52    $35A2   SE       V5, #A2         ; Skip if V5 == 162
$D54    $5FD4   UNKNOWN  $5FD4           ; Unknown 5xxx instruction
$D56    $B142   JP       V0, $142        ; Jump to V0 + 142
$D58    $981E   UNKNOWN  $981E           ; Unknown 9xxx instruction
$D5A    $AA1F   LD       I, $A1F         ; Load A1F into I
$D5C    $653B   LD       V5, #3B         ; Load 59 into V5
$D5E    $640D   LD       V4, #0D         ; Load 13 into V4
$D60    $AB3A   LD       I, $B3A         ; Load B3A into I
$D62    $A59F   LD       I, $59F         ; Load 59F into I
$D64    $B727   JP       V0, $727        ; Jump to V0 + 727
$D66    $EA6F   UNKNOWN  $EA6F           ; Unknown Exxx instruction
$D68    $36EC   SE       V6, #EC         ; Skip if V6 == 236
$D6A    $D3E6   DRW      V3, VE, #6      ; Draw 6-byte sprite at V3, VE
$D6C    $6A90   LD       VA, #90         ; Load 144 into VA
$D6E    $63E4   LD       V3, #E4         ; Load 228 into V3
$D70    $00B2   SYS      $0B2            ; System call to 0B2
$D72    $D0B0   DRW      V0, VB, #0      ; Draw 0-byte sprite at V0, VB
$D74    $0E93   SYS      $E93            ; System call to E93
$D76    $2A33   CALL     $A33            ; Call subroutine at A33
$D78    $4CBC   SNE      VC, #BC         ; Skip if VC != 188
$D7A    $2CC0   CALL     $CC0            ; Call subroutine at CC0
$D7C    $F8EA   UNKNOWN  F8EA            ; Unknown Fxxx instruction
$D7E    $70E2   ADD      V0, #E2         ; Add 226 to V0
$D80    $3A95   SE       VA, #95         ; Skip if VA == 149
$D82    $FCF5   UNKNOWN  FCF5            ; Unknown Fxxx instruction
$D84    $F726   UNKNOWN  F726            ; Unknown Fxxx instruction
$D86    $BFA3   JP       V0, $FA3        ; Jump to V0 + FA3
$D88    $20D4   CALL     $0D4            ; Call subroutine at 0D4
$D8A    $4BE0   SNE      VB, #E0         ; Skip if VB != 224
$D8C    $CBD7   RND      VB, #D7         ; VB = random & D7
$D8E    $8A51   OR       VA, V5          ; VA |= V5
$D90    $898F   UNKNOWN  898F            ; Unknown 8xxx instruction
$D92    $58E5   UNKNOWN  $58E5           ; Unknown 5xxx instruction
$D94    $89AA   UNKNOWN  89AA            ; Unknown 8xxx instruction
$D96    $5860   SE       V8, V6          ; Skip if V8 == V6
$D98    $EFD6   UNKNOWN  $EFD6           ; Unknown Exxx instruction
$D9A    $6E47   LD       VE, #47         ; Load 71 into VE
$D9C    $7A81   ADD      VA, #81         ; Add 129 to VA
$D9E    $BB9A   JP       V0, $B9A        ; Jump to V0 + B9A
$DA0    $2574   CALL     $574            ; Call subroutine at 574
$DA2    $BC46   JP       V0, $C46        ; Jump to V0 + C46
$DA4    $E206   UNKNOWN  $E206           ; Unknown Exxx instruction
$DA6    $9C3A   UNKNOWN  $9C3A           ; Unknown 9xxx instruction
$DA8    $E5B0   UNKNOWN  $E5B0           ; Unknown Exxx instruction
$DAA    $BC04   JP       V0, $C04        ; Jump to V0 + C04
$DAC    $C92B   RND      V9, #2B         ; V9 = random & 2B
$DAE    $9860   SNE      V8, V6          ; Skip if V8 != V6
$DB0    $B935   JP       V0, $935        ; Jump to V0 + 935
$DB2    $1B1F   JP       $B1F            ; Jump to B1F
$DB4    $08C3   SYS      $8C3            ; System call to 8C3
$DB6    $CB41   RND      VB, #41         ; VB = random & 41
$DB8    $FB84   UNKNOWN  FB84            ; Unknown Fxxx instruction
$DBA    $D475   DRW      V4, V7, #5      ; Draw 5-byte sprite at V4, V7
$DBC    $60DA   LD       V0, #DA         ; Load 218 into V0
$DBE    $D751   DRW      V7, V5, #1      ; Draw 1-byte sprite at V7, V5
$DC0    $26A6   CALL     $6A6            ; Call subroutine at 6A6
$DC2    $DD91   DRW      VD, V9, #1      ; Draw 1-byte sprite at VD, V9
$DC4    $9FD3   UNKNOWN  $9FD3           ; Unknown 9xxx instruction
$DC6    $364A   SE       V6, #4A         ; Skip if V6 == 74
$DC8    $F9C1   UNKNOWN  F9C1            ; Unknown Fxxx instruction
$DCA    $E4B9   UNKNOWN  $E4B9           ; Unknown Exxx instruction
$DCC    $6B49   LD       VB, #49         ; Load 73 into VB
$DCE    $8040   LD       V0, V4          ; V0 = V4
$DD0    $186B   JP       $86B            ; Jump to 86B
$DD2    $6313   LD       V3, #13         ; Load 19 into V3
$DD4    $4146   SNE      V1, #46         ; Skip if V1 != 70
$DD6    $E8B3   UNKNOWN  $E8B3           ; Unknown Exxx instruction
$DD8    $4229   SNE      V2, #29         ; Skip if V2 != 41
$DDA    $2825   CALL     $825            ; Call subroutine at 825
$DDC    $EBA1   SKNP     VB              ; Skip if key VB not pressed
$DDE    $58CD   UNKNOWN  $58CD           ; Unknown 5xxx instruction
$DE0    $5252   UNKNOWN  $5252           ; Unknown 5xxx instruction
$DE2    $309B   SE       V0, #9B         ; Skip if V0 == 155
$DE4    $7771   ADD      V7, #71         ; Add 113 to V7
$DE6    $B0EC   JP       V0, $0EC        ; Jump to V0 + 0EC
$DE8    $FC1E   ADD      I, VC           ; I += VC
$DEA    $0ADB   SYS      $ADB            ; System call to ADB
$DEC    $EC97   UNKNOWN  $EC97           ; Unknown Exxx instruction
$DEE    $8218   UNKNOWN  8218            ; Unknown 8xxx instruction
$DF0    $244E   CALL     $44E            ; Call subroutine at 44E
$DF2    $64E8   LD       V4, #E8         ; Load 232 into V4
$DF4    $998D   UNKNOWN  $998D           ; Unknown 9xxx instruction
$DF6    $ED14   UNKNOWN  $ED14           ; Unknown Exxx instruction
$DF8    $A792   LD       I, $792         ; Load 792 into I
$DFA    $327B   SE       V2, #7B         ; Skip if V2 == 123
$DFC    $61CB   LD       V1, #CB         ; Load 203 into V1
$DFE    $4D74   SNE      VD, #74         ; Skip if VD != 116
$E00    $8241   OR       V2, V4          ; V2 |= V4
$E02    $BB2F   JP       V0, $B2F        ; Jump to V0 + B2F
$E04    $C0D9   RND      V0, #D9         ; V0 = random & D9
$E06    $ECB7   UNKNOWN  $ECB7           ; Unknown Exxx instruction
$E08    $F238   UNKNOWN  F238            ; Unknown Fxxx instruction
$E0A    $D44F   DRW      V4, V4, #F      ; Draw 15-byte sprite at V4, V4
$E0C    $C19B   RND      V1, #9B         ; V1 = random & 9B
$E0E    $5997   UNKNOWN  $5997           ; Unknown 5xxx instruction
$E10    $A8B9   LD       I, $8B9         ; Load 8B9 into I
$E12    $FCD9   UNKNOWN  FCD9            ; Unknown Fxxx instruction
$E14    $D476   DRW      V4, V7, #6      ; Draw 6-byte sprite at V4, V7
$E16    $BD61   JP       V0, $D61        ; Jump to V0 + D61
$E18    $71BB   ADD      V1, #BB         ; Add 187 to V1
$E1A    $A6BE   LD       I, $6BE         ; Load 6BE into I
$E1C    $58F4   UNKNOWN  $58F4           ; Unknown 5xxx instruction
$E1E    $241C   CALL     $41C            ; Call subroutine at 41C
$E20    $79AC   ADD      V9, #AC         ; Add 172 to V9
$E22    $03B5   SYS      $3B5            ; System call to 3B5
$E24    $F87B   UNKNOWN  F87B            ; Unknown Fxxx instruction
$E26    $E984   UNKNOWN  $E984           ; Unknown Exxx instruction
$E28    $2DA2   CALL     $DA2            ; Call subroutine at DA2
$E2A    $95A5   UNKNOWN  $95A5           ; Unknown 9xxx instruction
$E2C    $0FBB   SYS      $FBB            ; System call to FBB
$E2E    $91AD   UNKNOWN  $91AD           ; Unknown 9xxx instruction
$E30    $7CE8   ADD      VC, #E8         ; Add 232 to VC
$E32    $1D88   JP       $D88            ; Jump to D88
$E34    $9541   UNKNOWN  $9541           ; Unknown 9xxx instruction
$E36    $89CC   UNKNOWN  89CC            ; Unknown 8xxx instruction
$E38    $5961   UNKNOWN  $5961           ; Unknown 5xxx instruction
$E3A    $1234   JP       $234            ; Jump to 234
$E3C    $1532   JP       $532            ; Jump to 532
$E3E    $BAB1   JP       V0, $AB1        ; Jump to V0 + AB1
$E40    $D37C   DRW      V3, V7, #C      ; Draw 12-byte sprite at V3, V7
$E42    $560B   UNKNOWN  $560B           ; Unknown 5xxx instruction
$E44    $B329   JP       V0, $329        ; Jump to V0 + 329
$E46    $F945   UNKNOWN  F945            ; Unknown Fxxx instruction
$E48    $04BE   SYS      $4BE            ; System call to 4BE
$E4A    $B821   JP       V0, $821        ; Jump to V0 + 821
$E4C    $CC76   RND      VC, #76         ; VC = random & 76
$E4E    $AF39   LD       I, $F39         ; Load F39 into I
$E50    $10EF   JP       $0EF            ; Jump to 0EF
$E52    $567F   UNKNOWN  $567F           ; Unknown 5xxx instruction
$E54    $1FD2   JP       $FD2            ; Jump to FD2
$E56    $5F51   UNKNOWN  $5F51           ; Unknown 5xxx instruction
$E58    $1495   JP       $495            ; Jump to 495
$E5A    $EAFF   UNKNOWN  $EAFF           ; Unknown Exxx instruction
$E5C    $57D1   UNKNOWN  $57D1           ; Unknown 5xxx instruction
$E5E    $1503   JP       $503            ; Jump to 503
$E60    $7120   ADD      V1, #20         ; Add 32 to V1
$E62    $F023   UNKNOWN  F023            ; Unknown Fxxx instruction
$E64    $DE59   DRW      VE, V5, #9      ; Draw 9-byte sprite at VE, V5
$E66    $9A61   UNKNOWN  $9A61           ; Unknown 9xxx instruction
$E68    $442C   SNE      V4, #2C         ; Skip if V4 != 44
$E6A    $9E5C   UNKNOWN  $9E5C           ; Unknown 9xxx instruction
$E6C    $5545   UNKNOWN  $5545           ; Unknown 5xxx instruction
$E6E    $A734   LD       I, $734         ; Load 734 into I
$E70    $C095   RND      V0, #95         ; V0 = random & 95
$E72    $3984   SE       V9, #84         ; Skip if V9 == 132
$E74    $2086   CALL     $086            ; Call subroutine at 086
$E76    $37BF   SE       V7, #BF         ; Skip if V7 == 191
$E78    $A340   LD       I, $340         ; Load 340 into I
$E7A    $A83D   LD       I, $83D         ; Load 83D into I
$E7C    $4C92   SNE      VC, #92         ; Skip if VC != 146
$E7E    $D695   DRW      V6, V9, #5      ; Draw 5-byte sprite at V6, V9
$E80    $DEA3   DRW      VE, VA, #3      ; Draw 3-byte sprite at VE, VA
$E82    $4A14   SNE      VA, #14         ; Skip if VA != 20
$E84    $5664   UNKNOWN  $5664           ; Unknown 5xxx instruction
$E86    $FE86   UNKNOWN  FE86            ; Unknown Fxxx instruction
$E88    $7297   ADD      V2, #97         ; Add 151 to V2
$E8A    $9EBE   UNKNOWN  $9EBE           ; Unknown 9xxx instruction
$E8C    $B593   JP       V0, $593        ; Jump to V0 + 593
$E8E    $B847   JP       V0, $847        ; Jump to V0 + 847
$E90    $1C19   JP       $C19            ; Jump to C19
$E92    $FDBE   UNKNOWN  FDBE            ; Unknown Fxxx instruction
$E94    $0E7B   SYS      $E7B            ; System call to E7B
$E96    $7337   ADD      V3, #37         ; Add 55 to V3
$E98    $EA1B   UNKNOWN  $EA1B           ; Unknown Exxx instruction
$E9A    $E5D4   UNKNOWN  $E5D4           ; Unknown Exxx instruction
$E9C    $284F   CALL     $84F            ; Call subroutine at 84F
$E9E    $71EA   ADD      V1, #EA         ; Add 234 to V1
$EA0    $4728   SNE      V7, #28         ; Skip if V7 != 40
$EA2    $EEB7   UNKNOWN  $EEB7           ; Unknown Exxx instruction
$EA4    $9ACB   UNKNOWN  $9ACB           ; Unknown 9xxx instruction
$EA6    $ED26   UNKNOWN  $ED26           ; Unknown Exxx instruction
$EA8    $C8FB   RND      V8, #FB         ; V8 = random & FB
$EAA    $87B9   UNKNOWN  87B9            ; Unknown 8xxx instruction
$EAC    $8DD9   UNKNOWN  8DD9            ; Unknown 8xxx instruction
$EAE    $1930   JP       $930            ; Jump to 930
$EB0    $3364   SE       V3, #64         ; Skip if V3 == 100
$EB2    $F336   UNKNOWN  F336            ; Unknown Fxxx instruction
$EB4    $E6E6   UNKNOWN  $E6E6           ; Unknown Exxx instruction
$EB6    $C328   RND      V3, #28         ; V3 = random & 28
$EB8    $6C22   LD       VC, #22         ; Load 34 into VC
$EBA    $6FC4   LD       VF, #C4         ; Load 196 into VF
$EBC    $C945   RND      V9, #45         ; V9 = random & 45
$EBE    $EFBB   UNKNOWN  $EFBB           ; Unknown Exxx instruction
$EC0    $282E   CALL     $82E            ; Call subroutine at 82E
$EC2    $CD5C   RND      VD, #5C         ; VD = random & 5C
$EC4    $32A7   SE       V2, #A7         ; Skip if V2 == 167
$EC6    $BDB3   JP       V0, $DB3        ; Jump to V0 + DB3
$EC8    $D45E   DRW      V4, V5, #E      ; Draw 14-byte sprite at V4, V5
$ECA    $BF7D   JP       V0, $F7D        ; Jump to V0 + F7D
$ECC    $222B   CALL     $22B            ; Call subroutine at 22B
$ECE    $2291   CALL     $291            ; Call subroutine at 291
$ED0    $D732   DRW      V7, V3, #2      ; Draw 2-byte sprite at V7, V3
$ED2    $1DD4   JP       $DD4            ; Jump to DD4
$ED4    $54A7   UNKNOWN  $54A7           ; Unknown 5xxx instruction
$ED6    $B5CF   JP       V0, $5CF        ; Jump to V0 + 5CF
$ED8    $A6B8   LD       I, $6B8         ; Load 6B8 into I
$EDA    $243B   CALL     $43B            ; Call subroutine at 43B
$EDC    $8A14   ADD      VA, V1          ; VA += V1, VF = carry
$EDE    $0619   SYS      $619            ; System call to 619
$EE0    $E84A   UNKNOWN  $E84A           ; Unknown Exxx instruction
$EE2    $5F7C   UNKNOWN  $5F7C           ; Unknown 5xxx instruction
$EE4    $712D   ADD      V1, #2D         ; Add 45 to V1
$EE6    $F2BD   UNKNOWN  F2BD            ; Unknown Fxxx instruction
$EE8    $C656   RND      V6, #56         ; V6 = random & 56
$EEA    $F7D2   UNKNOWN  F7D2            ; Unknown Fxxx instruction
$EEC    $9F50   SNE      VF, V5          ; Skip if VF != V5
$EEE    $06B3   SYS      $6B3            ; System call to 6B3
$EF0    $B33E   JP       V0, $33E        ; Jump to V0 + 33E
$EF2    $CFD0   RND      VF, #D0         ; VF = random & D0
$EF4    $BC35   JP       V0, $C35        ; Jump to V0 + C35
$EF6    $F3C2   UNKNOWN  F3C2            ; Unknown Fxxx instruction
$EF8    $F171   UNKNOWN  F171            ; Unknown Fxxx instruction
$EFA    $1C9C   JP       $C9C            ; Jump to C9C
$EFC    $29B4   CALL     $9B4            ; Call subroutine at 9B4
$EFE    $5ACC   UNKNOWN  $5ACC           ; Unknown 5xxx instruction
$F00    $D384   DRW      V3, V8, #4      ; Draw 4-byte sprite at V3, V8
$F02    $F6EE   UNKNOWN  F6EE            ; Unknown Fxxx instruction
$F04    $40AD   SNE      V0, #AD         ; Skip if V0 != 173
$F06    $8D6C   UNKNOWN  8D6C            ; Unknown 8xxx instruction
$F08    $B621   JP       V0, $621        ; Jump to V0 + 621
$F0A    $60E0   LD       V0, #E0         ; Load 224 into V0
$F0C    $C884   RND      V8, #84         ; V8 = random & 84
$F0E    $1790   JP       $790            ; Jump to 790
$F10    $846A   UNKNOWN  846A            ; Unknown 8xxx instruction
$F12    $84A4   ADD      V4, VA          ; V4 += VA, VF = carry
$F14    $D059   DRW      V0, V5, #9      ; Draw 9-byte sprite at V0, V5
$F16    $C38A   RND      V3, #8A         ; V3 = random & 8A
$F18    $EF7D   UNKNOWN  $EF7D           ; Unknown Exxx instruction
$F1A    $D78C   DRW      V7, V8, #C      ; Draw 12-byte sprite at V7, V8
$F1C    $4946   SNE      V9, #46         ; Skip if V9 != 70
$F1E    $7879   ADD      V8, #79         ; Add 121 to V8
$F20    $3141   SE       V1, #41         ; Skip if V1 == 65
$F22    $39AF   SE       V9, #AF         ; Skip if V9 == 175
$F24    $A01E   LD       I, $01E         ; Load 01E into I
$F26    $E147   UNKNOWN  $E147           ; Unknown Exxx instruction
$F28    $0BCC   SYS      $BCC            ; System call to BCC
$F2A    $4A6E   SNE      VA, #6E         ; Skip if VA != 110
$F2C    $5C21   UNKNOWN  $5C21           ; Unknown 5xxx instruction
$F2E    $9919   UNKNOWN  $9919           ; Unknown 9xxx instruction
$F30    $7780   ADD      V7, #80         ; Add 128 to V7
$F32    $BE21   JP       V0, $E21        ; Jump to V0 + E21
$F34    $022F   SYS      $22F            ; System call to 22F
$F36    $C982   RND      V9, #82         ; V9 = random & 82
$F38    $3A57   SE       VA, #57         ; Skip if VA == 87
$F3A    $7AC4   ADD      VA, #C4         ; Add 196 to VA
$F3C    $AEB0   LD       I, $EB0         ; Load EB0 into I
$F3E    $125B   JP       $25B            ; Jump to 25B
$F40    $F062   UNKNOWN  F062            ; Unknown Fxxx instruction
$F42    $0C83   SYS      $C83            ; System call to C83
$F44    $1F66   JP       $F66            ; Jump to F66
$F46    $BD12   JP       V0, $D12        ; Jump to V0 + D12
$F48    $440C   SNE      V4, #0C         ; Skip if V4 != 12
$F4A    $BC0F   JP       V0, $C0F        ; Jump to V0 + C0F
$F4C    $EC6E   UNKNOWN  $EC6E           ; Unknown Exxx instruction
$F4E    $5545   UNKNOWN  $5545           ; Unknown 5xxx instruction
$F50    $54DC   UNKNOWN  $54DC           ; Unknown 5xxx instruction
$F52    $516B   UNKNOWN  $516B           ; Unknown 5xxx instruction
$F54    $3E9D   SE       VE, #9D         ; Skip if VE == 157
$F56    $019B   SYS      $19B            ; System call to 19B
$F58    $8AA0   LD       VA, VA          ; VA = VA
$F5A    $5E44   UNKNOWN  $5E44           ; Unknown 5xxx instruction
$F5C    $CFB5   RND      VF, #B5         ; VF = random & B5
$F5E    $2AA5   CALL     $AA5            ; Call subroutine at AA5
$F60    $507C   UNKNOWN  $507C           ; Unknown 5xxx instruction
$F62    $9765   UNKNOWN  $9765           ; Unknown 9xxx instruction
$F64    $5139   UNKNOWN  $5139           ; Unknown 5xxx instruction
$F66    $C149   RND      V1, #49         ; V1 = random & 49
$F68    $12C6   JP       $2C6            ; Jump to 2C6
$F6A    $BCB5   JP       V0, $CB5        ; Jump to V0 + CB5
$F6C    $A226   LD       I, $226         ; Load 226 into I
$F6E    $5E1C   UNKNOWN  $5E1C           ; Unknown 5xxx instruction
$F70    $460B   SNE      V6, #0B         ; Skip if V6 != 11
$F72    $9B69   UNKNOWN  $9B69           ; Unknown 9xxx instruction
$F74    $4010   SNE      V0, #10         ; Skip if V0 != 16
$F76    $7CD8   ADD      VC, #D8         ; Add 216 to VC
$F78    $53AE   UNKNOWN  $53AE           ; Unknown 5xxx instruction
$F7A    $FFAF   UNKNOWN  FFAF            ; Unknown Fxxx instruction
$F7C    $0776   SYS      $776            ; System call to 776
$F7E    $99AC   UNKNOWN  $99AC           ; Unknown 9xxx instruction
$F80    $2338   CALL     $338            ; Call subroutine at 338
$F82    $6F40   LD       VF, #40         ; Load 64 into VF
$F84    $D8B6   DRW      V8, VB, #6      ; Draw 6-byte sprite at V8, VB
$F86    $BF49   JP       V0, $F49        ; Jump to V0 + F49
$F88    $E3C3   UNKNOWN  $E3C3           ; Unknown Exxx instruction
$F8A    $C016   RND      V0, #16         ; V0 = random & 16
$F8C    $59A5   UNKNOWN  $59A5           ; Unknown 5xxx instruction
$F8E    $5C7F   UNKNOWN  $5C7F           ; Unknown 5xxx instruction
$F90    $D0DC   DRW      V0, VD, #C      ; Draw 12-byte sprite at V0, VD
$F92    $5CBA   UNKNOWN  $5CBA           ; Unknown 5xxx instruction
$F94    $F5FC   UNKNOWN  F5FC            ; Unknown Fxxx instruction
$F96    $96B8   UNKNOWN  $96B8           ; Unknown 9xxx instruction
$F98    $E2C8   UNKNOWN  $E2C8           ; Unknown Exxx instruction
$F9A    $260E   CALL     $60E            ; Call subroutine at 60E
$F9C    $FEE3   UNKNOWN  FEE3            ; Unknown Fxxx instruction
$F9E    $A533   LD       I, $533         ; Load 533 into I
$FA0    $4B69   SNE      VB, #69         ; Skip if VB != 105
$FA2    $A217   LD       I, $217         ; Load 217 into I
$FA4    $F97E   UNKNOWN  F97E            ; Unknown Fxxx instruction
$FA6    $9674   UNKNOWN  $9674           ; Unknown 9xxx instruction
$FA8    $4A13   SNE      VA, #13         ; Skip if VA != 19
$FAA    $FBAA   UNKNOWN  FBAA            ; Unknown Fxxx instruction
$FAC    $A5EC   LD       I, $5EC         ; Load 5EC into I
$FAE    $6ADB   LD       VA, #DB         ; Load 219 into VA
$FB0    $4F8D   SNE      VF, #8D         ; Skip if VF != 141
$FB2    $1FB2   JP       $FB2            ; Jump to FB2
$FB4    $515B   UNKNOWN  $515B           ; Unknown 5xxx instruction
$FB6    $2BC9   CALL     $BC9            ; Call subroutine at BC9
$FB8    $643E   LD       V4, #3E         ; Load 62 into V4
$FBA    $4BE1   SNE      VB, #E1         ; Skip if VB != 225
$FBC    $418B   SNE      V1, #8B         ; Skip if V1 != 139
$FBE    $9468   UNKNOWN  $9468           ; Unknown 9xxx instruction
$FC0    $21AF   CALL     $1AF            ; Call subroutine at 1AF
$FC2    $2D00   CALL     $D00            ; Call subroutine at D00
$FC4    $80F7   SUBN     V0, VF          ; V0 = VF - V0, VF = !borrow
$FC6    $9748   UNKNOWN  $9748           ; Unknown 9xxx instruction
$FC8    $5E03   UNKNOWN  $5E03           ; Unknown 5xxx instruction
$FCA    $EBD5   UNKNOWN  $EBD5           ; Unknown Exxx instruction
$FCC    $0F9A   SYS      $F9A            ; System call to F9A
$FCE    $7158   ADD      V1, #58         ; Add 88 to V1
$FD0    $A1D7   LD       I, $1D7         ; Load 1D7 into I
$FD2    $C5EE   RND      V5, #EE         ; V5 = random & EE
$FD4    $B097   JP       V0, $097        ; Jump to V0 + 097
$FD6    $5762   UNKNOWN  $5762           ; Unknown 5xxx instruction
$FD8    $3401   SE       V4, #01         ; Skip if V4 == 1
$FDA    $1FB7   JP       $FB7            ; Jump to FB7
$FDC    $B6F6   JP       V0, $6F6        ; Jump to V0 + 6F6
$FDE    $DE4D   DRW      VE, V4, #D      ; Draw 13-byte sprite at VE, V4
$FE0    $EE74   UNKNOWN  $EE74           ; Unknown Exxx instruction
$FE2    $F16F   UNKNOWN  F16F            ; Unknown Fxxx instruction
$FE4    $8752   AND      V7, V5          ; V7 &= V5
$FE6    $A0E7   LD       I, $0E7         ; Load 0E7 into I
$FE8    $4C96   SNE      VC, #96         ; Skip if VC != 150
$FEA    $BAC4   JP       V0, $AC4        ; Jump to V0 + AC4
$FEC    $DA15   DRW      VA, V1, #5      ; Draw 5-byte sprite at VA, V1
$FEE    $6037   LD       V0, #37         ; Load 55 into V0
$FF0    $16B7   JP       $6B7            ; Jump to 6B7
$FF2    $11B9   JP       $1B9            ; Jump to 1B9
$FF4    $A755   LD       I, $755         ; Load 755 into I
$FF6    $4494   SNE      V4, #94         ; Skip if V4 != 148
$FF8    $2EBF   CALL     $EBF            ; Call subroutine at EBF
$FFA    $BCEC   JP       V0, $CEC        ; Jump to V0 + CEC
$FFC    $8611   OR       V6, V1          ; V6 |= V1
$FFE    $E06F   UNKNOWN  $E06F           ; Unknown Exxx instruction

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 474 (26.5%)
  LD      : 261 (14.6%)
  JP      : 229 (12.8%)
  ADD     : 129 ( 7.2%)
  DRW     : 124 ( 6.9%)
  RND     : 117 ( 6.5%)
  SNE     : 115 ( 6.4%)
  SE      : 108 ( 6.0%)
  CALL    :  98 ( 5.5%)
  SYS     :  97 ( 5.4%)
  OR      :   9 ( 0.5%)
  SHL     :   8 ( 0.4%)
  AND     :   6 ( 0.3%)
  SUBN    :   6 ( 0.3%)
  SHR     :   3 ( 0.2%)
  SUB     :   3 ( 0.2%)
  XOR     :   2 ( 0.1%)
  SKNP    :   2 ( 0.1%)
  SKP     :   1 ( 0.1%)

Memory Operations: 390 (21.8%)
Arithmetic Operations: 155 (8.6%)
