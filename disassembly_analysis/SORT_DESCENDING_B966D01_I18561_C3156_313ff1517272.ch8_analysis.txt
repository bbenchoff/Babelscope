
CHIP-8 ROM DISASSEMBLY ANALYSIS
============================================================
ROM File: output/sorting/session_20250622_230319/roms/SORT_DESCENDING_B966D01_I18561_C3156_313ff1517272.ch8
ROM Size: 3584 bytes
Instructions Found: 1792

DISCOVERY INFORMATION:
Batch: 966
Instance: 18561
Direction: descending
Final Array: [200, 193, 105, 105, 65, 54, 27, 6]
Operations: R:1 W:0 C:73 S:13

SORT ARRAY ANALYSIS (0x300-0x307):
References Found: 137
Sort Array References:
  $214: LD I, $1E6 ; Load 1E6 into I
  $216: LD I, $F33 ; Load F33 into I
  $218: LD I, $EF8 ; Load EF8 into I
  $226: LD I, $9E1 ; Load 9E1 into I
  $232: LD I, $43A ; Load 43A into I
  $24C: LD I, $27B ; Load 27B into I
  $254: LD I, $CD8 ; Load CD8 into I
  $25A: LD I, $FA2 ; Load FA2 into I
  $25E: LD I, $524 ; Load 524 into I
  $28A: LD I, $279 ; Load 279 into I
  $28E: LD I, $F69 ; Load F69 into I
  $29E: LD I, $337 ; Load 337 into I
  $2D0: LD I, $50B ; Load 50B into I
  $2E0: LD I, $71F ; Load 71F into I
  $2F4: LD I, $D52 ; Load D52 into I
  $2FC: LD I, $662 ; Load 662 into I
  $310: LD I, $9E9 ; Load 9E9 into I
  $314: LD I, $B6F ; Load B6F into I
  $32A: LD I, $8DF ; Load 8DF into I
  $348: LD I, $900 ; Load 900 into I
  $35A: LD I, $0F5 ; Load 0F5 into I
  $378: LD I, $CAF ; Load CAF into I
  $37E: LD I, $174 ; Load 174 into I
  $384: LD I, $4C2 ; Load 4C2 into I
  $3D4: LD I, $755 ; Load 755 into I
  $40C: LD I, $DFB ; Load DFB into I
  $41A: LD I, $655 ; Load 655 into I
  $420: LD I, $E8C ; Load E8C into I
  $462: LD I, $E00 ; Load E00 into I
  $476: LD I, $DA0 ; Load DA0 into I
  $484: LD I, $EB2 ; Load EB2 into I
  $494: LD I, $679 ; Load 679 into I
  $4AA: LD I, $0BB ; Load 0BB into I
  $50A: LD I, $252 ; Load 252 into I
  $53E: LD I, $40B ; Load 40B into I
  $550: LD I, $131 ; Load 131 into I
  $552: LD I, $67D ; Load 67D into I
  $560: LD I, $763 ; Load 763 into I
  $57E: LD I, $95E ; Load 95E into I
  $598: LD I, $BBB ; Load BBB into I
  $59A: LD I, $C0F ; Load C0F into I
  $5AC: LD I, $A9F ; Load A9F into I
  $5B2: LD I, $AA5 ; Load AA5 into I
  $5CE: LD I, $A7A ; Load A7A into I
  $5D2: LD I, $4B5 ; Load 4B5 into I
  $5F6: LD I, $40E ; Load 40E into I
  $622: LD I, $DFA ; Load DFA into I
  $63A: LD I, $FF6 ; Load FF6 into I
  $642: LD I, $BAC ; Load BAC into I
  $64E: LD I, $0A2 ; Load 0A2 into I
  $656: LD I, $CEC ; Load CEC into I
  $658: LD I, $436 ; Load 436 into I
  $65C: LD I, $095 ; Load 095 into I
  $682: LD I, $B38 ; Load B38 into I
  $690: LD I, $1E0 ; Load 1E0 into I
  $6B6: LD I, $2EA ; Load 2EA into I
  $6BC: LD I, $22F ; Load 22F into I
  $6D8: LD I, $19C ; Load 19C into I
  $6EC: LD I, $6E8 ; Load 6E8 into I
  $6EE: LD I, $6D2 ; Load 6D2 into I
  $6F0: LD I, $72B ; Load 72B into I
  $71E: LD I, $F7B ; Load F7B into I
  $784: LD I, $9CD ; Load 9CD into I
  $786: LD I, $E78 ; Load E78 into I
  $78E: LD I, $3F9 ; Load 3F9 into I
  $79C: LD I, $F2F ; Load F2F into I
  $7A0: LD I, $152 ; Load 152 into I
  $800: LD I, $CE1 ; Load CE1 into I
  $802: LD I, $2A6 ; Load 2A6 into I
  $804: LD I, $72B ; Load 72B into I
  $80C: LD I, $195 ; Load 195 into I
  $82E: LD I, $D0B ; Load D0B into I
  $830: LD I, $AC1 ; Load AC1 into I
  $836: LD I, $351 ; Load 351 into I
  $838: LD I, $485 ; Load 485 into I
  $83E: LD I, $51F ; Load 51F into I
  $84A: LD I, $630 ; Load 630 into I
  $860: LD I, $05A ; Load 05A into I
  $864: LD I, $64A ; Load 64A into I
  $87E: LD I, $DF0 ; Load DF0 into I
  $888: LD I, $6A6 ; Load 6A6 into I
  $88C: LD I, $7A6 ; Load 7A6 into I
  $8DC: LD I, $BB8 ; Load BB8 into I
  $91E: LD I, $991 ; Load 991 into I
  $93A: LD I, $339 ; Load 339 into I
  $974: LD I, $051 ; Load 051 into I
  $980: LD I, $9A4 ; Load 9A4 into I
  $998: LD I, $0D4 ; Load 0D4 into I
  $9AC: LD I, $B44 ; Load B44 into I
  $9C2: LD I, $413 ; Load 413 into I
  $9D4: LD I, $1CC ; Load 1CC into I
  $9FC: LD I, $5A8 ; Load 5A8 into I
  $A44: LD I, $2F6 ; Load 2F6 into I
  $A5E: LD I, $379 ; Load 379 into I
  $AB2: LD I, $980 ; Load 980 into I
  $ACA: LD I, $921 ; Load 921 into I
  $B06: LD I, $51B ; Load 51B into I
  $B0A: LD I, $C10 ; Load C10 into I
  $B0C: LD I, $5C1 ; Load 5C1 into I
  $B18: LD I, $795 ; Load 795 into I
  $B20: LD I, $2F9 ; Load 2F9 into I
  $B22: LD I, $6E8 ; Load 6E8 into I
  $B2A: LD I, $EC9 ; Load EC9 into I
  $B3A: LD I, $DB9 ; Load DB9 into I
  $B56: LD I, $9CA ; Load 9CA into I
  $B7C: LD I, $BA8 ; Load BA8 into I
  $BD2: LD I, $4E4 ; Load 4E4 into I
  $BDE: LD I, $DD7 ; Load DD7 into I
  $BE4: LD I, $088 ; Load 088 into I
  $C1E: LD I, $722 ; Load 722 into I
  $C20: LD I, $3B7 ; Load 3B7 into I
  $C34: LD I, $806 ; Load 806 into I
  $C40: LD I, $284 ; Load 284 into I
  $C50: LD I, $A1E ; Load A1E into I
  $C78: LD I, $D61 ; Load D61 into I
  $C8E: LD I, $3EC ; Load 3EC into I
  $D04: LD I, $7DF ; Load 7DF into I
  $D16: LD I, $12C ; Load 12C into I
  $D38: LD I, $A2A ; Load A2A into I
  $D42: LD I, $4A3 ; Load 4A3 into I
  $D54: LD I, $265 ; Load 265 into I
  $D98: LD I, $F7F ; Load F7F into I
  $DB2: LD I, $311 ; Load 311 into I
  $DBC: LD I, $73A ; Load 73A into I
  $DE0: LD I, $5E9 ; Load 5E9 into I
  $E24: LD I, $94D ; Load 94D into I
  $E40: LD I, $195 ; Load 195 into I
  $EA2: LD I, $245 ; Load 245 into I
  $EC4: LD I, $589 ; Load 589 into I
  $EDC: LD I, $D3B ; Load D3B into I
  $EE4: LD I, $0DC ; Load 0DC into I
  $EE6: LD I, $35F ; Load 35F into I
  $F38: LD I, $786 ; Load 786 into I
  $FA0: LD I, $AAD ; Load AAD into I
  $FAA: LD I, $1E1 ; Load 1E1 into I
  $FE2: LD I, $FA4 ; Load FA4 into I
  $FEA: LD I, $5D9 ; Load 5D9 into I

CONTROL FLOW ANALYSIS:
Jumps: 219
Calls: 105
Branches: 243
Loops: 127
Loop Structures:
  $2A0 -> $18B (backward jump)
  $2B2 -> $0E9 (backward jump)
  $2EA -> $18B (backward jump)
  $374 -> $0D9 (backward jump)
  $40A -> $0B9 (backward jump)
  $456 -> $27C (backward jump)
  $49E -> $3D9 (backward jump)
  $4E8 -> $31C (backward jump)
  $51E -> $208 (backward jump)
  $580 -> $232 (backward jump)
  $592 -> $095 (backward jump)
  $59E -> $143 (backward jump)
  $5BE -> $20F (backward jump)
  $5CC -> $4E6 (backward jump)
  $606 -> $1E8 (backward jump)
  $6A6 -> $31D (backward jump)
  $6CA -> $030 (backward jump)
  $718 -> $195 (backward jump)
  $730 -> $2DD (backward jump)
  $75A -> $168 (backward jump)
  $75C -> $61B (backward jump)
  $764 -> $5D8 (backward jump)
  $77E -> $1D3 (backward jump)
  $7BC -> $61C (backward jump)
  $7CC -> $385 (backward jump)
  $7DA -> $2B5 (backward jump)
  $7E6 -> $47D (backward jump)
  $7EC -> $08E (backward jump)
  $806 -> $345 (backward jump)
  $80E -> $417 (backward jump)
  $810 -> $3F2 (backward jump)
  $83C -> $5EF (backward jump)
  $878 -> $77D (backward jump)
  $886 -> $544 (backward jump)
  $896 -> $526 (backward jump)
  $8A8 -> $434 (backward jump)
  $8AC -> $814 (backward jump)
  $8F4 -> $3E8 (backward jump)
  $8FC -> $64F (backward jump)
  $908 -> $292 (backward jump)
  $916 -> $01A (backward jump)
  $922 -> $1EE (backward jump)
  $928 -> $73C (backward jump)
  $95A -> $077 (backward jump)
  $97A -> $44E (backward jump)
  $9C0 -> $3CA (backward jump)
  $9E4 -> $683 (backward jump)
  $A06 -> $1E3 (backward jump)
  $A08 -> $0E7 (backward jump)
  $A0C -> $68D (backward jump)
  $A0E -> $16F (backward jump)
  $A36 -> $636 (backward jump)
  $A88 -> $003 (backward jump)
  $A98 -> $0BF (backward jump)
  $AA8 -> $558 (backward jump)
  $AD8 -> $30F (backward jump)
  $AF6 -> $249 (backward jump)
  $B16 -> $1DE (backward jump)
  $B48 -> $3BC (backward jump)
  $B5C -> $850 (backward jump)
  $B8E -> $233 (backward jump)
  $B90 -> $6F2 (backward jump)
  $BA4 -> $7F3 (backward jump)
  $BA8 -> $59C (backward jump)
  $BCA -> $11E (backward jump)
  $BCE -> $215 (backward jump)
  $BE0 -> $72B (backward jump)
  $BEA -> $71A (backward jump)
  $C2C -> $438 (backward jump)
  $C38 -> $2CB (backward jump)
  $C4C -> $03F (backward jump)
  $C5A -> $085 (backward jump)
  $C5C -> $018 (backward jump)
  $C92 -> $994 (backward jump)
  $D1E -> $356 (backward jump)
  $D80 -> $280 (backward jump)
  $DA8 -> $7B1 (backward jump)
  $DAA -> $6AF (backward jump)
  $DB6 -> $11D (backward jump)
  $DC2 -> $3DD (backward jump)
  $DD4 -> $CCC (backward jump)
  $DE8 -> $70C (backward jump)
  $DEA -> $34B (backward jump)
  $DEC -> $771 (backward jump)
  $DF8 -> $0D6 (backward jump)
  $E1C -> $1A5 (backward jump)
  $E22 -> $67B (backward jump)
  $E26 -> $98E (backward jump)
  $E2A -> $92A (backward jump)
  $E32 -> $E0F (backward jump)
  $E34 -> $E09 (backward jump)
  $E38 -> $6F3 (backward jump)
  $E3A -> $CBC (backward jump)
  $E44 -> $A08 (backward jump)
  $E4A -> $70B (backward jump)
  $E58 -> $7C2 (backward jump)
  $E5E -> $021 (backward jump)
  $E6C -> $3D0 (backward jump)
  $E76 -> $623 (backward jump)
  $E7E -> $E1A (backward jump)
  $E82 -> $0FF (backward jump)
  $E86 -> $B11 (backward jump)
  $E9C -> $4BF (backward jump)
  $EC0 -> $104 (backward jump)
  $EDE -> $E55 (backward jump)
  $F08 -> $A99 (backward jump)
  $F0A -> $698 (backward jump)
  $F10 -> $7E6 (backward jump)
  $F14 -> $811 (backward jump)
  $F1C -> $67D (backward jump)
  $F22 -> $3D0 (backward jump)
  $F30 -> $640 (backward jump)
  $F50 -> $258 (backward jump)
  $F54 -> $39B (backward jump)
  $F56 -> $02C (backward jump)
  $F5E -> $A56 (backward jump)
  $F68 -> $AA6 (backward jump)
  $F76 -> $BE3 (backward jump)
  $F82 -> $885 (backward jump)
  $F8C -> $923 (backward jump)
  $FA2 -> $380 (backward jump)
  $FAE -> $90B (backward jump)
  $FC6 -> $A63 (backward jump)
  $FCC -> $870 (backward jump)
  $FCE -> $41A (backward jump)
  $FD8 -> $1A2 (backward jump)
  $FE8 -> $574 (backward jump)

COMPLETE DISASSEMBLY:
========================================
Address  Opcode  Mnemonic Operands           Description
============================================================
$200    $CFBB   RND      VF, #BB         ; VF = random & BB
$202    $CB0D   RND      VB, #0D         ; VB = random & 0D
$204    $0718   SYS      $718            ; System call to 718
$206    $EC97   UNKNOWN  $EC97           ; Unknown Exxx instruction
$208    $C3C3   RND      V3, #C3         ; V3 = random & C3
$20A    $F0D8   UNKNOWN  F0D8            ; Unknown Fxxx instruction
$20C    $03A4   SYS      $3A4            ; System call to 3A4
$20E    $7BAB   ADD      VB, #AB         ; Add 171 to VB
$210    $7905   ADD      V9, #05         ; Add 5 to V9
$212    $377F   SE       V7, #7F         ; Skip if V7 == 127
$214    $A1E6   LD       I, $1E6         ; Load 1E6 into I
$216    $AF33   LD       I, $F33         ; Load F33 into I
$218    $AEF8   LD       I, $EF8         ; Load EF8 into I
$21A    $2550   CALL     $550            ; Call subroutine at 550
$21C    $C298   RND      V2, #98         ; V2 = random & 98
$21E    $1B91   JP       $B91            ; Jump to B91
$220    $354C   SE       V5, #4C         ; Skip if V5 == 76
$222    $13D1   JP       $3D1            ; Jump to 3D1
$224    $4EE7   SNE      VE, #E7         ; Skip if VE != 231
$226    $A9E1   LD       I, $9E1         ; Load 9E1 into I
$228    $D35E   DRW      V3, V5, #E      ; Draw 14-byte sprite at V3, V5
$22A    $2757   CALL     $757            ; Call subroutine at 757
$22C    $32FB   SE       V2, #FB         ; Skip if V2 == 251
$22E    $0AFA   SYS      $AFA            ; System call to AFA
$230    $2C9A   CALL     $C9A            ; Call subroutine at C9A
$232    $A43A   LD       I, $43A         ; Load 43A into I
$234    $1432   JP       $432            ; Jump to 432
$236    $64AF   LD       V4, #AF         ; Load 175 into V4
$238    $D9D7   DRW      V9, VD, #7      ; Draw 7-byte sprite at V9, VD
$23A    $9EEE   UNKNOWN  $9EEE           ; Unknown 9xxx instruction
$23C    $86D2   AND      V6, VD          ; V6 &= VD
$23E    $5119   UNKNOWN  $5119           ; Unknown 5xxx instruction
$240    $1D01   JP       $D01            ; Jump to D01
$242    $6B38   LD       VB, #38         ; Load 56 into VB
$244    $FCA2   UNKNOWN  FCA2            ; Unknown Fxxx instruction
$246    $08BA   SYS      $8BA            ; System call to 8BA
$248    $095F   SYS      $95F            ; System call to 95F
$24A    $5A23   UNKNOWN  $5A23           ; Unknown 5xxx instruction
$24C    $A27B   LD       I, $27B         ; Load 27B into I
$24E    $D0CD   DRW      V0, VC, #D      ; Draw 13-byte sprite at V0, VC
$250    $55D4   UNKNOWN  $55D4           ; Unknown 5xxx instruction
$252    $53E0   SE       V3, VE          ; Skip if V3 == VE
$254    $ACD8   LD       I, $CD8         ; Load CD8 into I
$256    $194C   JP       $94C            ; Jump to 94C
$258    $744A   ADD      V4, #4A         ; Add 74 to V4
$25A    $AFA2   LD       I, $FA2         ; Load FA2 into I
$25C    $911E   UNKNOWN  $911E           ; Unknown 9xxx instruction
$25E    $A524   LD       I, $524         ; Load 524 into I
$260    $3EB8   SE       VE, #B8         ; Skip if VE == 184
$262    $0AE2   SYS      $AE2            ; System call to AE2
$264    $7832   ADD      V8, #32         ; Add 50 to V8
$266    $9425   UNKNOWN  $9425           ; Unknown 9xxx instruction
$268    $2EC7   CALL     $EC7            ; Call subroutine at EC7
$26A    $3E1F   SE       VE, #1F         ; Skip if VE == 31
$26C    $80F9   UNKNOWN  80F9            ; Unknown 8xxx instruction
$26E    $6921   LD       V9, #21         ; Load 33 into V9
$270    $5764   UNKNOWN  $5764           ; Unknown 5xxx instruction
$272    $4E00   SNE      VE, #00         ; Skip if VE != 0
$274    $ECD6   UNKNOWN  $ECD6           ; Unknown Exxx instruction
$276    $5ABF   UNKNOWN  $5ABF           ; Unknown 5xxx instruction
$278    $0657   SYS      $657            ; System call to 657
$27A    $D150   DRW      V1, V5, #0      ; Draw 0-byte sprite at V1, V5
$27C    $27B3   CALL     $7B3            ; Call subroutine at 7B3
$27E    $DA64   DRW      VA, V6, #4      ; Draw 4-byte sprite at VA, V6
$280    $5D3F   UNKNOWN  $5D3F           ; Unknown 5xxx instruction
$282    $3092   SE       V0, #92         ; Skip if V0 == 146
$284    $EF51   UNKNOWN  $EF51           ; Unknown Exxx instruction
$286    $47EE   SNE      V7, #EE         ; Skip if V7 != 238
$288    $937D   UNKNOWN  $937D           ; Unknown 9xxx instruction
$28A    $A279   LD       I, $279         ; Load 279 into I
$28C    $53C7   UNKNOWN  $53C7           ; Unknown 5xxx instruction
$28E    $AF69   LD       I, $F69         ; Load F69 into I
$290    $B997   JP       V0, $997        ; Jump to V0 + 997
$292    $F93A   UNKNOWN  F93A            ; Unknown Fxxx instruction
$294    $13A9   JP       $3A9            ; Jump to 3A9
$296    $736C   ADD      V3, #6C         ; Add 108 to V3
$298    $2B6F   CALL     $B6F            ; Call subroutine at B6F
$29A    $143C   JP       $43C            ; Jump to 43C
$29C    $25C5   CALL     $5C5            ; Call subroutine at 5C5
$29E    $A337   LD       I, $337         ; Load 337 into I
$2A0    $118B   JP       $18B            ; Jump to 18B
$2A2    $2C88   CALL     $C88            ; Call subroutine at C88
$2A4    $1F31   JP       $F31            ; Jump to F31
$2A6    $3976   SE       V9, #76         ; Skip if V9 == 118
$2A8    $F159   UNKNOWN  F159            ; Unknown Fxxx instruction
$2AA    $204D   CALL     $04D            ; Call subroutine at 04D
$2AC    $778E   ADD      V7, #8E         ; Add 142 to V7
$2AE    $087C   SYS      $87C            ; System call to 87C
$2B0    $3AA3   SE       VA, #A3         ; Skip if VA == 163
$2B2    $10E9   JP       $0E9            ; Jump to 0E9
$2B4    $1DCF   JP       $DCF            ; Jump to DCF
$2B6    $0C62   SYS      $C62            ; System call to C62
$2B8    $7304   ADD      V3, #04         ; Add 4 to V3
$2BA    $D94B   DRW      V9, V4, #B      ; Draw 11-byte sprite at V9, V4
$2BC    $DFEE   DRW      VF, VE, #E      ; Draw 14-byte sprite at VF, VE
$2BE    $42FB   SNE      V2, #FB         ; Skip if V2 != 251
$2C0    $87E3   XOR      V7, VE          ; V7 ^= VE
$2C2    $2E9B   CALL     $E9B            ; Call subroutine at E9B
$2C4    $2B67   CALL     $B67            ; Call subroutine at B67
$2C6    $5840   SE       V8, V4          ; Skip if V8 == V4
$2C8    $3044   SE       V0, #44         ; Skip if V0 == 68
$2CA    $D30F   DRW      V3, V0, #F      ; Draw 15-byte sprite at V3, V0
$2CC    $FA21   UNKNOWN  FA21            ; Unknown Fxxx instruction
$2CE    $EE14   UNKNOWN  $EE14           ; Unknown Exxx instruction
$2D0    $A50B   LD       I, $50B         ; Load 50B into I
$2D2    $01FB   SYS      $1FB            ; System call to 1FB
$2D4    $23FC   CALL     $3FC            ; Call subroutine at 3FC
$2D6    $57F7   UNKNOWN  $57F7           ; Unknown 5xxx instruction
$2D8    $82CF   UNKNOWN  82CF            ; Unknown 8xxx instruction
$2DA    $98D6   UNKNOWN  $98D6           ; Unknown 9xxx instruction
$2DC    $FF48   UNKNOWN  FF48            ; Unknown Fxxx instruction
$2DE    $D880   DRW      V8, V8, #0      ; Draw 0-byte sprite at V8, V8
$2E0    $A71F   LD       I, $71F         ; Load 71F into I
$2E2    $480C   SNE      V8, #0C         ; Skip if V8 != 12
$2E4    $D2F7   DRW      V2, VF, #7      ; Draw 7-byte sprite at V2, VF
$2E6    $8737   SUBN     V7, V3          ; V7 = V3 - V7, VF = !borrow
$2E8    $FC0C   UNKNOWN  FC0C            ; Unknown Fxxx instruction
$2EA    $B18B   JP       V0, $18B        ; Jump to V0 + 18B
$2EC    $E8AE   UNKNOWN  $E8AE           ; Unknown Exxx instruction
$2EE    $C6EB   RND      V6, #EB         ; V6 = random & EB
$2F0    $748F   ADD      V4, #8F         ; Add 143 to V4
$2F2    $63C8   LD       V3, #C8         ; Load 200 into V3
$2F4    $AD52   LD       I, $D52         ; Load D52 into I
$2F6    $48AB   SNE      V8, #AB         ; Skip if V8 != 171
$2F8    $DF8F   DRW      VF, V8, #F      ; Draw 15-byte sprite at VF, V8
$2FA    $0C73   SYS      $C73            ; System call to C73
$2FC    $A662   LD       I, $662         ; Load 662 into I
$2FE    $013E   SYS      $13E            ; System call to 13E
$300    $C8C1   RND      V8, #C1         ; V8 = random & C1
$302    $6969   LD       V9, #69         ; Load 105 into V9
$304    $4136   SNE      V1, #36         ; Skip if V1 != 54
$306    $1B06   JP       $B06            ; Jump to B06
$308    $200C   CALL     $00C            ; Call subroutine at 00C
$30A    $E750   UNKNOWN  $E750           ; Unknown Exxx instruction
$30C    $7B5A   ADD      VB, #5A         ; Add 90 to VB
$30E    $73F1   ADD      V3, #F1         ; Add 241 to V3
$310    $A9E9   LD       I, $9E9         ; Load 9E9 into I
$312    $4FE9   SNE      VF, #E9         ; Skip if VF != 233
$314    $AB6F   LD       I, $B6F         ; Load B6F into I
$316    $358E   SE       V5, #8E         ; Skip if V5 == 142
$318    $DD86   DRW      VD, V8, #6      ; Draw 6-byte sprite at VD, V8
$31A    $C552   RND      V5, #52         ; V5 = random & 52
$31C    $49E1   SNE      V9, #E1         ; Skip if V9 != 225
$31E    $5D49   UNKNOWN  $5D49           ; Unknown 5xxx instruction
$320    $4158   SNE      V1, #58         ; Skip if V1 != 88
$322    $CB48   RND      VB, #48         ; VB = random & 48
$324    $EB79   UNKNOWN  $EB79           ; Unknown Exxx instruction
$326    $9412   UNKNOWN  $9412           ; Unknown 9xxx instruction
$328    $4A1F   SNE      VA, #1F         ; Skip if VA != 31
$32A    $A8DF   LD       I, $8DF         ; Load 8DF into I
$32C    $BAB7   JP       V0, $AB7        ; Jump to V0 + AB7
$32E    $D9D7   DRW      V9, VD, #7      ; Draw 7-byte sprite at V9, VD
$330    $D6A6   DRW      V6, VA, #6      ; Draw 6-byte sprite at V6, VA
$332    $BC59   JP       V0, $C59        ; Jump to V0 + C59
$334    $F637   UNKNOWN  F637            ; Unknown Fxxx instruction
$336    $8E23   XOR      VE, V2          ; VE ^= V2
$338    $8548   UNKNOWN  8548            ; Unknown 8xxx instruction
$33A    $D762   DRW      V7, V6, #2      ; Draw 2-byte sprite at V7, V6
$33C    $7AD1   ADD      VA, #D1         ; Add 209 to VA
$33E    $0F32   SYS      $F32            ; System call to F32
$340    $7BF2   ADD      VB, #F2         ; Add 242 to VB
$342    $89E2   AND      V9, VE          ; V9 &= VE
$344    $BAAB   JP       V0, $AAB        ; Jump to V0 + AAB
$346    $FD67   UNKNOWN  FD67            ; Unknown Fxxx instruction
$348    $A900   LD       I, $900         ; Load 900 into I
$34A    $1D63   JP       $D63            ; Jump to D63
$34C    $1934   JP       $934            ; Jump to 934
$34E    $C2AC   RND      V2, #AC         ; V2 = random & AC
$350    $1542   JP       $542            ; Jump to 542
$352    $F2C9   UNKNOWN  F2C9            ; Unknown Fxxx instruction
$354    $7509   ADD      V5, #09         ; Add 9 to V5
$356    $559D   UNKNOWN  $559D           ; Unknown 5xxx instruction
$358    $E0A2   UNKNOWN  $E0A2           ; Unknown Exxx instruction
$35A    $A0F5   LD       I, $0F5         ; Load 0F5 into I
$35C    $2155   CALL     $155            ; Call subroutine at 155
$35E    $BAE7   JP       V0, $AE7        ; Jump to V0 + AE7
$360    $C661   RND      V6, #61         ; V6 = random & 61
$362    $FAF9   UNKNOWN  FAF9            ; Unknown Fxxx instruction
$364    $1375   JP       $375            ; Jump to 375
$366    $8056   SHR      V0              ; V0 >>= 1, VF = LSB
$368    $557F   UNKNOWN  $557F           ; Unknown 5xxx instruction
$36A    $994D   UNKNOWN  $994D           ; Unknown 9xxx instruction
$36C    $774D   ADD      V7, #4D         ; Add 77 to V7
$36E    $CEFF   RND      VE, #FF         ; VE = random & FF
$370    $D575   DRW      V5, V7, #5      ; Draw 5-byte sprite at V5, V7
$372    $8E78   UNKNOWN  8E78            ; Unknown 8xxx instruction
$374    $B0D9   JP       V0, $0D9        ; Jump to V0 + 0D9
$376    $9B79   UNKNOWN  $9B79           ; Unknown 9xxx instruction
$378    $ACAF   LD       I, $CAF         ; Load CAF into I
$37A    $8D88   UNKNOWN  8D88            ; Unknown 8xxx instruction
$37C    $C9B4   RND      V9, #B4         ; V9 = random & B4
$37E    $A174   LD       I, $174         ; Load 174 into I
$380    $99C3   UNKNOWN  $99C3           ; Unknown 9xxx instruction
$382    $0C88   SYS      $C88            ; System call to C88
$384    $A4C2   LD       I, $4C2         ; Load 4C2 into I
$386    $5C7F   UNKNOWN  $5C7F           ; Unknown 5xxx instruction
$388    $3C46   SE       VC, #46         ; Skip if VC == 70
$38A    $E12A   UNKNOWN  $E12A           ; Unknown Exxx instruction
$38C    $BB17   JP       V0, $B17        ; Jump to V0 + B17
$38E    $33E3   SE       V3, #E3         ; Skip if V3 == 227
$390    $D8AB   DRW      V8, VA, #B      ; Draw 11-byte sprite at V8, VA
$392    $D090   DRW      V0, V9, #0      ; Draw 0-byte sprite at V0, V9
$394    $7C9F   ADD      VC, #9F         ; Add 159 to VC
$396    $6D14   LD       VD, #14         ; Load 20 into VD
$398    $4971   SNE      V9, #71         ; Skip if V9 != 113
$39A    $668D   LD       V6, #8D         ; Load 141 into V6
$39C    $E6EF   UNKNOWN  $E6EF           ; Unknown Exxx instruction
$39E    $6406   LD       V4, #06         ; Load 6 into V4
$3A0    $36DF   SE       V6, #DF         ; Skip if V6 == 223
$3A2    $1983   JP       $983            ; Jump to 983
$3A4    $DD30   DRW      VD, V3, #0      ; Draw 0-byte sprite at VD, V3
$3A6    $9F97   UNKNOWN  $9F97           ; Unknown 9xxx instruction
$3A8    $6B4A   LD       VB, #4A         ; Load 74 into VB
$3AA    $ECCC   UNKNOWN  $ECCC           ; Unknown Exxx instruction
$3AC    $4189   SNE      V1, #89         ; Skip if V1 != 137
$3AE    $758A   ADD      V5, #8A         ; Add 138 to V5
$3B0    $C318   RND      V3, #18         ; V3 = random & 18
$3B2    $D64B   DRW      V6, V4, #B      ; Draw 11-byte sprite at V6, V4
$3B4    $2FAD   CALL     $FAD            ; Call subroutine at FAD
$3B6    $63D1   LD       V3, #D1         ; Load 209 into V3
$3B8    $37E1   SE       V7, #E1         ; Skip if V7 == 225
$3BA    $C1A7   RND      V1, #A7         ; V1 = random & A7
$3BC    $9BC7   UNKNOWN  $9BC7           ; Unknown 9xxx instruction
$3BE    $0221   SYS      $221            ; System call to 221
$3C0    $1C10   JP       $C10            ; Jump to C10
$3C2    $7ECB   ADD      VE, #CB         ; Add 203 to VE
$3C4    $41DA   SNE      V1, #DA         ; Skip if V1 != 218
$3C6    $E296   UNKNOWN  $E296           ; Unknown Exxx instruction
$3C8    $D18C   DRW      V1, V8, #C      ; Draw 12-byte sprite at V1, V8
$3CA    $6A10   LD       VA, #10         ; Load 16 into VA
$3CC    $F15C   UNKNOWN  F15C            ; Unknown Fxxx instruction
$3CE    $35E7   SE       V5, #E7         ; Skip if V5 == 231
$3D0    $7935   ADD      V9, #35         ; Add 53 to V9
$3D2    $D42C   DRW      V4, V2, #C      ; Draw 12-byte sprite at V4, V2
$3D4    $A755   LD       I, $755         ; Load 755 into I
$3D6    $FE92   UNKNOWN  FE92            ; Unknown Fxxx instruction
$3D8    $7F5F   ADD      VF, #5F         ; Add 95 to VF
$3DA    $B515   JP       V0, $515        ; Jump to V0 + 515
$3DC    $58AA   UNKNOWN  $58AA           ; Unknown 5xxx instruction
$3DE    $43AC   SNE      V3, #AC         ; Skip if V3 != 172
$3E0    $F330   UNKNOWN  F330            ; Unknown Fxxx instruction
$3E2    $9CE0   SNE      VC, VE          ; Skip if VC != VE
$3E4    $6972   LD       V9, #72         ; Load 114 into V9
$3E6    $53FB   UNKNOWN  $53FB           ; Unknown 5xxx instruction
$3E8    $2902   CALL     $902            ; Call subroutine at 902
$3EA    $41A2   SNE      V1, #A2         ; Skip if V1 != 162
$3EC    $EF26   UNKNOWN  $EF26           ; Unknown Exxx instruction
$3EE    $BA5C   JP       V0, $A5C        ; Jump to V0 + A5C
$3F0    $B49F   JP       V0, $49F        ; Jump to V0 + 49F
$3F2    $E480   UNKNOWN  $E480           ; Unknown Exxx instruction
$3F4    $05DA   SYS      $5DA            ; System call to 5DA
$3F6    $23DE   CALL     $3DE            ; Call subroutine at 3DE
$3F8    $B6A0   JP       V0, $6A0        ; Jump to V0 + 6A0
$3FA    $2A2F   CALL     $A2F            ; Call subroutine at A2F
$3FC    $487F   SNE      V8, #7F         ; Skip if V8 != 127
$3FE    $B50F   JP       V0, $50F        ; Jump to V0 + 50F
$400    $8D38   UNKNOWN  8D38            ; Unknown 8xxx instruction
$402    $22C7   CALL     $2C7            ; Call subroutine at 2C7
$404    $46DE   SNE      V6, #DE         ; Skip if V6 != 222
$406    $EE3F   UNKNOWN  $EE3F           ; Unknown Exxx instruction
$408    $43F6   SNE      V3, #F6         ; Skip if V3 != 246
$40A    $10B9   JP       $0B9            ; Jump to 0B9
$40C    $ADFB   LD       I, $DFB         ; Load DFB into I
$40E    $D939   DRW      V9, V3, #9      ; Draw 9-byte sprite at V9, V3
$410    $60C8   LD       V0, #C8         ; Load 200 into V0
$412    $CA5F   RND      VA, #5F         ; VA = random & 5F
$414    $E40A   UNKNOWN  $E40A           ; Unknown Exxx instruction
$416    $FF49   UNKNOWN  FF49            ; Unknown Fxxx instruction
$418    $6022   LD       V0, #22         ; Load 34 into V0
$41A    $A655   LD       I, $655         ; Load 655 into I
$41C    $6BBA   LD       VB, #BA         ; Load 186 into VB
$41E    $CBC6   RND      VB, #C6         ; VB = random & C6
$420    $AE8C   LD       I, $E8C         ; Load E8C into I
$422    $0E80   SYS      $E80            ; System call to E80
$424    $F55B   UNKNOWN  F55B            ; Unknown Fxxx instruction
$426    $D86A   DRW      V8, V6, #A      ; Draw 10-byte sprite at V8, V6
$428    $9D40   SNE      VD, V4          ; Skip if VD != V4
$42A    $0FD1   SYS      $FD1            ; System call to FD1
$42C    $EF96   UNKNOWN  $EF96           ; Unknown Exxx instruction
$42E    $BCAD   JP       V0, $CAD        ; Jump to V0 + CAD
$430    $E44E   UNKNOWN  $E44E           ; Unknown Exxx instruction
$432    $6D31   LD       VD, #31         ; Load 49 into VD
$434    $E408   UNKNOWN  $E408           ; Unknown Exxx instruction
$436    $3456   SE       V4, #56         ; Skip if V4 == 86
$438    $FCC1   UNKNOWN  FCC1            ; Unknown Fxxx instruction
$43A    $DF54   DRW      VF, V5, #4      ; Draw 4-byte sprite at VF, V5
$43C    $1777   JP       $777            ; Jump to 777
$43E    $E952   UNKNOWN  $E952           ; Unknown Exxx instruction
$440    $B855   JP       V0, $855        ; Jump to V0 + 855
$442    $85C3   XOR      V5, VC          ; V5 ^= VC
$444    $29E0   CALL     $9E0            ; Call subroutine at 9E0
$446    $42F2   SNE      V2, #F2         ; Skip if V2 != 242
$448    $EE98   UNKNOWN  $EE98           ; Unknown Exxx instruction
$44A    $7C73   ADD      VC, #73         ; Add 115 to VC
$44C    $5A3B   UNKNOWN  $5A3B           ; Unknown 5xxx instruction
$44E    $FE4C   UNKNOWN  FE4C            ; Unknown Fxxx instruction
$450    $84B6   SHR      V4              ; V4 >>= 1, VF = LSB
$452    $97F3   UNKNOWN  $97F3           ; Unknown 9xxx instruction
$454    $07CD   SYS      $7CD            ; System call to 7CD
$456    $B27C   JP       V0, $27C        ; Jump to V0 + 27C
$458    $45A4   SNE      V5, #A4         ; Skip if V5 != 164
$45A    $ED4D   UNKNOWN  $ED4D           ; Unknown Exxx instruction
$45C    $50B5   UNKNOWN  $50B5           ; Unknown 5xxx instruction
$45E    $6424   LD       V4, #24         ; Load 36 into V4
$460    $EC9D   UNKNOWN  $EC9D           ; Unknown Exxx instruction
$462    $AE00   LD       I, $E00         ; Load E00 into I
$464    $E11F   UNKNOWN  $E11F           ; Unknown Exxx instruction
$466    $6E64   LD       VE, #64         ; Load 100 into VE
$468    $82F7   SUBN     V2, VF          ; V2 = VF - V2, VF = !borrow
$46A    $841B   UNKNOWN  841B            ; Unknown 8xxx instruction
$46C    $4E16   SNE      VE, #16         ; Skip if VE != 22
$46E    $B8B9   JP       V0, $8B9        ; Jump to V0 + 8B9
$470    $07AB   SYS      $7AB            ; System call to 7AB
$472    $35FD   SE       V5, #FD         ; Skip if V5 == 253
$474    $73F3   ADD      V3, #F3         ; Add 243 to V3
$476    $ADA0   LD       I, $DA0         ; Load DA0 into I
$478    $8BA1   OR       VB, VA          ; VB |= VA
$47A    $C3AF   RND      V3, #AF         ; V3 = random & AF
$47C    $47B6   SNE      V7, #B6         ; Skip if V7 != 182
$47E    $7F27   ADD      VF, #27         ; Add 39 to VF
$480    $4139   SNE      V1, #39         ; Skip if V1 != 57
$482    $4001   SNE      V0, #01         ; Skip if V0 != 1
$484    $AEB2   LD       I, $EB2         ; Load EB2 into I
$486    $20D5   CALL     $0D5            ; Call subroutine at 0D5
$488    $262D   CALL     $62D            ; Call subroutine at 62D
$48A    $5574   UNKNOWN  $5574           ; Unknown 5xxx instruction
$48C    $937F   UNKNOWN  $937F           ; Unknown 9xxx instruction
$48E    $E697   UNKNOWN  $E697           ; Unknown Exxx instruction
$490    $0BF1   SYS      $BF1            ; System call to BF1
$492    $7B59   ADD      VB, #59         ; Add 89 to VB
$494    $A679   LD       I, $679         ; Load 679 into I
$496    $8E1C   UNKNOWN  8E1C            ; Unknown 8xxx instruction
$498    $CCAD   RND      VC, #AD         ; VC = random & AD
$49A    $1733   JP       $733            ; Jump to 733
$49C    $68E6   LD       V8, #E6         ; Load 230 into V8
$49E    $B3D9   JP       V0, $3D9        ; Jump to V0 + 3D9
$4A0    $2758   CALL     $758            ; Call subroutine at 758
$4A2    $030A   SYS      $30A            ; System call to 30A
$4A4    $F46C   UNKNOWN  F46C            ; Unknown Fxxx instruction
$4A6    $90DF   UNKNOWN  $90DF           ; Unknown 9xxx instruction
$4A8    $82A2   AND      V2, VA          ; V2 &= VA
$4AA    $A0BB   LD       I, $0BB         ; Load 0BB into I
$4AC    $EB2A   UNKNOWN  $EB2A           ; Unknown Exxx instruction
$4AE    $FCFB   UNKNOWN  FCFB            ; Unknown Fxxx instruction
$4B0    $C80E   RND      V8, #0E         ; V8 = random & 0E
$4B2    $E9F2   UNKNOWN  $E9F2           ; Unknown Exxx instruction
$4B4    $7200   ADD      V2, #00         ; Add 0 to V2
$4B6    $8E8A   UNKNOWN  8E8A            ; Unknown 8xxx instruction
$4B8    $62C0   LD       V2, #C0         ; Load 192 into V2
$4BA    $EA95   UNKNOWN  $EA95           ; Unknown Exxx instruction
$4BC    $BD3B   JP       V0, $D3B        ; Jump to V0 + D3B
$4BE    $06ED   SYS      $6ED            ; System call to 6ED
$4C0    $8A24   ADD      VA, V2          ; VA += V2, VF = carry
$4C2    $5B11   UNKNOWN  $5B11           ; Unknown 5xxx instruction
$4C4    $51F1   UNKNOWN  $51F1           ; Unknown 5xxx instruction
$4C6    $43F2   SNE      V3, #F2         ; Skip if V3 != 242
$4C8    $6D84   LD       VD, #84         ; Load 132 into VD
$4CA    $7BA3   ADD      VB, #A3         ; Add 163 to VB
$4CC    $023F   SYS      $23F            ; System call to 23F
$4CE    $6247   LD       V2, #47         ; Load 71 into V2
$4D0    $DBCD   DRW      VB, VC, #D      ; Draw 13-byte sprite at VB, VC
$4D2    $BCF0   JP       V0, $CF0        ; Jump to V0 + CF0
$4D4    $65E2   LD       V5, #E2         ; Load 226 into V5
$4D6    $F003   UNKNOWN  F003            ; Unknown Fxxx instruction
$4D8    $6D2D   LD       VD, #2D         ; Load 45 into VD
$4DA    $7C5E   ADD      VC, #5E         ; Add 94 to VC
$4DC    $0BCF   SYS      $BCF            ; System call to BCF
$4DE    $55DF   UNKNOWN  $55DF           ; Unknown 5xxx instruction
$4E0    $5060   SE       V0, V6          ; Skip if V0 == V6
$4E2    $3651   SE       V6, #51         ; Skip if V6 == 81
$4E4    $5210   SE       V2, V1          ; Skip if V2 == V1
$4E6    $E43F   UNKNOWN  $E43F           ; Unknown Exxx instruction
$4E8    $B31C   JP       V0, $31C        ; Jump to V0 + 31C
$4EA    $015F   SYS      $15F            ; System call to 15F
$4EC    $9D33   UNKNOWN  $9D33           ; Unknown 9xxx instruction
$4EE    $E0B6   UNKNOWN  $E0B6           ; Unknown Exxx instruction
$4F0    $2ED4   CALL     $ED4            ; Call subroutine at ED4
$4F2    $CCA6   RND      VC, #A6         ; VC = random & A6
$4F4    $8565   SUB      V5, V6          ; V5 -= V6, VF = !borrow
$4F6    $C9D0   RND      V9, #D0         ; V9 = random & D0
$4F8    $F50F   UNKNOWN  F50F            ; Unknown Fxxx instruction
$4FA    $2441   CALL     $441            ; Call subroutine at 441
$4FC    $8B2E   SHL      VB              ; VB <<= 1, VF = MSB
$4FE    $1CCC   JP       $CCC            ; Jump to CCC
$500    $7559   ADD      V5, #59         ; Add 89 to V5
$502    $03FC   SYS      $3FC            ; System call to 3FC
$504    $BF60   JP       V0, $F60        ; Jump to V0 + F60
$506    $B8CD   JP       V0, $8CD        ; Jump to V0 + 8CD
$508    $73E6   ADD      V3, #E6         ; Add 230 to V3
$50A    $A252   LD       I, $252         ; Load 252 into I
$50C    $DC04   DRW      VC, V0, #4      ; Draw 4-byte sprite at VC, V0
$50E    $8EBA   UNKNOWN  8EBA            ; Unknown 8xxx instruction
$510    $F402   UNKNOWN  F402            ; Unknown Fxxx instruction
$512    $93AA   UNKNOWN  $93AA           ; Unknown 9xxx instruction
$514    $4A2B   SNE      VA, #2B         ; Skip if VA != 43
$516    $F5A2   UNKNOWN  F5A2            ; Unknown Fxxx instruction
$518    $CCC1   RND      VC, #C1         ; VC = random & C1
$51A    $9FF6   UNKNOWN  $9FF6           ; Unknown 9xxx instruction
$51C    $5752   UNKNOWN  $5752           ; Unknown 5xxx instruction
$51E    $B208   JP       V0, $208        ; Jump to V0 + 208
$520    $3CBA   SE       VC, #BA         ; Skip if VC == 186
$522    $094F   SYS      $94F            ; System call to 94F
$524    $CCB6   RND      VC, #B6         ; VC = random & B6
$526    $4B14   SNE      VB, #14         ; Skip if VB != 20
$528    $79EE   ADD      V9, #EE         ; Add 238 to V9
$52A    $D03A   DRW      V0, V3, #A      ; Draw 10-byte sprite at V0, V3
$52C    $6C3F   LD       VC, #3F         ; Load 63 into VC
$52E    $8595   SUB      V5, V9          ; V5 -= V9, VF = !borrow
$530    $42EE   SNE      V2, #EE         ; Skip if V2 != 238
$532    $667D   LD       V6, #7D         ; Load 125 into V6
$534    $5983   UNKNOWN  $5983           ; Unknown 5xxx instruction
$536    $56CE   UNKNOWN  $56CE           ; Unknown 5xxx instruction
$538    $BA0C   JP       V0, $A0C        ; Jump to V0 + A0C
$53A    $5331   UNKNOWN  $5331           ; Unknown 5xxx instruction
$53C    $E261   UNKNOWN  $E261           ; Unknown Exxx instruction
$53E    $A40B   LD       I, $40B         ; Load 40B into I
$540    $BDD6   JP       V0, $DD6        ; Jump to V0 + DD6
$542    $8B49   UNKNOWN  8B49            ; Unknown 8xxx instruction
$544    $C038   RND      V0, #38         ; V0 = random & 38
$546    $379D   SE       V7, #9D         ; Skip if V7 == 157
$548    $6B2A   LD       VB, #2A         ; Load 42 into VB
$54A    $60B7   LD       V0, #B7         ; Load 183 into V0
$54C    $65E8   LD       V5, #E8         ; Load 232 into V5
$54E    $C89C   RND      V8, #9C         ; V8 = random & 9C
$550    $A131   LD       I, $131         ; Load 131 into I
$552    $A67D   LD       I, $67D         ; Load 67D into I
$554    $F12F   UNKNOWN  F12F            ; Unknown Fxxx instruction
$556    $E4FB   UNKNOWN  $E4FB           ; Unknown Exxx instruction
$558    $BC0A   JP       V0, $C0A        ; Jump to V0 + C0A
$55A    $E373   UNKNOWN  $E373           ; Unknown Exxx instruction
$55C    $7BA5   ADD      VB, #A5         ; Add 165 to VB
$55E    $C9FA   RND      V9, #FA         ; V9 = random & FA
$560    $A763   LD       I, $763         ; Load 763 into I
$562    $2802   CALL     $802            ; Call subroutine at 802
$564    $008E   SYS      $08E            ; System call to 08E
$566    $8FF4   ADD      VF, VF          ; VF += VF, VF = carry
$568    $6D90   LD       VD, #90         ; Load 144 into VD
$56A    $BE44   JP       V0, $E44        ; Jump to V0 + E44
$56C    $8329   UNKNOWN  8329            ; Unknown 8xxx instruction
$56E    $283F   CALL     $83F            ; Call subroutine at 83F
$570    $98C9   UNKNOWN  $98C9           ; Unknown 9xxx instruction
$572    $B687   JP       V0, $687        ; Jump to V0 + 687
$574    $7149   ADD      V1, #49         ; Add 73 to V1
$576    $D6C0   DRW      V6, VC, #0      ; Draw 0-byte sprite at V6, VC
$578    $5D54   UNKNOWN  $5D54           ; Unknown 5xxx instruction
$57A    $D031   DRW      V0, V3, #1      ; Draw 1-byte sprite at V0, V3
$57C    $3BEC   SE       VB, #EC         ; Skip if VB == 236
$57E    $A95E   LD       I, $95E         ; Load 95E into I
$580    $B232   JP       V0, $232        ; Jump to V0 + 232
$582    $0FC0   SYS      $FC0            ; System call to FC0
$584    $0E0A   SYS      $E0A            ; System call to E0A
$586    $3968   SE       V9, #68         ; Skip if V9 == 104
$588    $B993   JP       V0, $993        ; Jump to V0 + 993
$58A    $E53E   UNKNOWN  $E53E           ; Unknown Exxx instruction
$58C    $829F   UNKNOWN  829F            ; Unknown 8xxx instruction
$58E    $BBF4   JP       V0, $BF4        ; Jump to V0 + BF4
$590    $CD1B   RND      VD, #1B         ; VD = random & 1B
$592    $1095   JP       $095            ; Jump to 095
$594    $9078   UNKNOWN  $9078           ; Unknown 9xxx instruction
$596    $588D   UNKNOWN  $588D           ; Unknown 5xxx instruction
$598    $ABBB   LD       I, $BBB         ; Load BBB into I
$59A    $AC0F   LD       I, $C0F         ; Load C0F into I
$59C    $25E6   CALL     $5E6            ; Call subroutine at 5E6
$59E    $B143   JP       V0, $143        ; Jump to V0 + 143
$5A0    $5BCB   UNKNOWN  $5BCB           ; Unknown 5xxx instruction
$5A2    $D62E   DRW      V6, V2, #E      ; Draw 14-byte sprite at V6, V2
$5A4    $44DB   SNE      V4, #DB         ; Skip if V4 != 219
$5A6    $F72C   UNKNOWN  F72C            ; Unknown Fxxx instruction
$5A8    $9191   UNKNOWN  $9191           ; Unknown 9xxx instruction
$5AA    $F677   UNKNOWN  F677            ; Unknown Fxxx instruction
$5AC    $AA9F   LD       I, $A9F         ; Load A9F into I
$5AE    $ED17   UNKNOWN  $ED17           ; Unknown Exxx instruction
$5B0    $D3F4   DRW      V3, VF, #4      ; Draw 4-byte sprite at V3, VF
$5B2    $AAA5   LD       I, $AA5         ; Load AA5 into I
$5B4    $B87F   JP       V0, $87F        ; Jump to V0 + 87F
$5B6    $0006   SYS      $006            ; System call to 006
$5B8    $383D   SE       V8, #3D         ; Skip if V8 == 61
$5BA    $D872   DRW      V8, V7, #2      ; Draw 2-byte sprite at V8, V7
$5BC    $EE67   UNKNOWN  $EE67           ; Unknown Exxx instruction
$5BE    $120F   JP       $20F            ; Jump to 20F
$5C0    $EC2F   UNKNOWN  $EC2F           ; Unknown Exxx instruction
$5C2    $369B   SE       V6, #9B         ; Skip if V6 == 155
$5C4    $8F6D   UNKNOWN  8F6D            ; Unknown 8xxx instruction
$5C6    $EBA0   UNKNOWN  $EBA0           ; Unknown Exxx instruction
$5C8    $3F06   SE       VF, #06         ; Skip if VF == 6
$5CA    $C0A0   RND      V0, #A0         ; V0 = random & A0
$5CC    $14E6   JP       $4E6            ; Jump to 4E6
$5CE    $AA7A   LD       I, $A7A         ; Load A7A into I
$5D0    $872B   UNKNOWN  872B            ; Unknown 8xxx instruction
$5D2    $A4B5   LD       I, $4B5         ; Load 4B5 into I
$5D4    $E18F   UNKNOWN  $E18F           ; Unknown Exxx instruction
$5D6    $59BB   UNKNOWN  $59BB           ; Unknown 5xxx instruction
$5D8    $55F4   UNKNOWN  $55F4           ; Unknown 5xxx instruction
$5DA    $81DF   UNKNOWN  81DF            ; Unknown 8xxx instruction
$5DC    $EF95   UNKNOWN  $EF95           ; Unknown Exxx instruction
$5DE    $8FBA   UNKNOWN  8FBA            ; Unknown 8xxx instruction
$5E0    $F7CA   UNKNOWN  F7CA            ; Unknown Fxxx instruction
$5E2    $0E3C   SYS      $E3C            ; System call to E3C
$5E4    $7F70   ADD      VF, #70         ; Add 112 to VF
$5E6    $069C   SYS      $69C            ; System call to 69C
$5E8    $D6EF   DRW      V6, VE, #F      ; Draw 15-byte sprite at V6, VE
$5EA    $897C   UNKNOWN  897C            ; Unknown 8xxx instruction
$5EC    $00D3   SYS      $0D3            ; System call to 0D3
$5EE    $074A   SYS      $74A            ; System call to 74A
$5F0    $5B99   UNKNOWN  $5B99           ; Unknown 5xxx instruction
$5F2    $4514   SNE      V5, #14         ; Skip if V5 != 20
$5F4    $C5E1   RND      V5, #E1         ; V5 = random & E1
$5F6    $A40E   LD       I, $40E         ; Load 40E into I
$5F8    $1AAF   JP       $AAF            ; Jump to AAF
$5FA    $D738   DRW      V7, V3, #8      ; Draw 8-byte sprite at V7, V3
$5FC    $6B22   LD       VB, #22         ; Load 34 into VB
$5FE    $F076   UNKNOWN  F076            ; Unknown Fxxx instruction
$600    $04D1   SYS      $4D1            ; System call to 4D1
$602    $28EF   CALL     $8EF            ; Call subroutine at 8EF
$604    $5678   UNKNOWN  $5678           ; Unknown 5xxx instruction
$606    $B1E8   JP       V0, $1E8        ; Jump to V0 + 1E8
$608    $9843   UNKNOWN  $9843           ; Unknown 9xxx instruction
$60A    $FFED   UNKNOWN  FFED            ; Unknown Fxxx instruction
$60C    $2BA2   CALL     $BA2            ; Call subroutine at BA2
$60E    $0B37   SYS      $B37            ; System call to B37
$610    $DFAC   DRW      VF, VA, #C      ; Draw 12-byte sprite at VF, VA
$612    $02A0   SYS      $2A0            ; System call to 2A0
$614    $620D   LD       V2, #0D         ; Load 13 into V2
$616    $41E5   SNE      V1, #E5         ; Skip if V1 != 229
$618    $B95E   JP       V0, $95E        ; Jump to V0 + 95E
$61A    $E0BD   UNKNOWN  $E0BD           ; Unknown Exxx instruction
$61C    $20A8   CALL     $0A8            ; Call subroutine at 0A8
$61E    $031F   SYS      $31F            ; System call to 31F
$620    $D7B4   DRW      V7, VB, #4      ; Draw 4-byte sprite at V7, VB
$622    $ADFA   LD       I, $DFA         ; Load DFA into I
$624    $8E7C   UNKNOWN  8E7C            ; Unknown 8xxx instruction
$626    $09E9   SYS      $9E9            ; System call to 9E9
$628    $B730   JP       V0, $730        ; Jump to V0 + 730
$62A    $E3B2   UNKNOWN  $E3B2           ; Unknown Exxx instruction
$62C    $57AD   UNKNOWN  $57AD           ; Unknown 5xxx instruction
$62E    $BCA5   JP       V0, $CA5        ; Jump to V0 + CA5
$630    $31B0   SE       V1, #B0         ; Skip if V1 == 176
$632    $0E9A   SYS      $E9A            ; System call to E9A
$634    $D439   DRW      V4, V3, #9      ; Draw 9-byte sprite at V4, V3
$636    $E891   UNKNOWN  $E891           ; Unknown Exxx instruction
$638    $BD9A   JP       V0, $D9A        ; Jump to V0 + D9A
$63A    $AFF6   LD       I, $FF6         ; Load FF6 into I
$63C    $177D   JP       $77D            ; Jump to 77D
$63E    $5E13   UNKNOWN  $5E13           ; Unknown 5xxx instruction
$640    $1972   JP       $972            ; Jump to 972
$642    $ABAC   LD       I, $BAC         ; Load BAC into I
$644    $FA29   LD       F, VA           ; I = sprite address for digit VA
$646    $59C3   UNKNOWN  $59C3           ; Unknown 5xxx instruction
$648    $C7BF   RND      V7, #BF         ; V7 = random & BF
$64A    $93C5   UNKNOWN  $93C5           ; Unknown 9xxx instruction
$64C    $95A8   UNKNOWN  $95A8           ; Unknown 9xxx instruction
$64E    $A0A2   LD       I, $0A2         ; Load 0A2 into I
$650    $6F6F   LD       VF, #6F         ; Load 111 into VF
$652    $C788   RND      V7, #88         ; V7 = random & 88
$654    $644F   LD       V4, #4F         ; Load 79 into V4
$656    $ACEC   LD       I, $CEC         ; Load CEC into I
$658    $A436   LD       I, $436         ; Load 436 into I
$65A    $57B6   UNKNOWN  $57B6           ; Unknown 5xxx instruction
$65C    $A095   LD       I, $095         ; Load 095 into I
$65E    $73F9   ADD      V3, #F9         ; Add 249 to V3
$660    $80E5   SUB      V0, VE          ; V0 -= VE, VF = !borrow
$662    $3707   SE       V7, #07         ; Skip if V7 == 7
$664    $BE30   JP       V0, $E30        ; Jump to V0 + E30
$666    $4570   SNE      V5, #70         ; Skip if V5 != 112
$668    $513C   UNKNOWN  $513C           ; Unknown 5xxx instruction
$66A    $FE44   UNKNOWN  FE44            ; Unknown Fxxx instruction
$66C    $0C32   SYS      $C32            ; System call to C32
$66E    $6A36   LD       VA, #36         ; Load 54 into VA
$670    $58DB   UNKNOWN  $58DB           ; Unknown 5xxx instruction
$672    $8B52   AND      VB, V5          ; VB &= V5
$674    $8A0D   UNKNOWN  8A0D            ; Unknown 8xxx instruction
$676    $CBDA   RND      VB, #DA         ; VB = random & DA
$678    $BA88   JP       V0, $A88        ; Jump to V0 + A88
$67A    $7223   ADD      V2, #23         ; Add 35 to V2
$67C    $E4C2   UNKNOWN  $E4C2           ; Unknown Exxx instruction
$67E    $DF8A   DRW      VF, V8, #A      ; Draw 10-byte sprite at VF, V8
$680    $6EE3   LD       VE, #E3         ; Load 227 into VE
$682    $AB38   LD       I, $B38         ; Load B38 into I
$684    $8560   LD       V5, V6          ; V5 = V6
$686    $49E4   SNE      V9, #E4         ; Skip if V9 != 228
$688    $C231   RND      V2, #31         ; V2 = random & 31
$68A    $95C3   UNKNOWN  $95C3           ; Unknown 9xxx instruction
$68C    $7CFA   ADD      VC, #FA         ; Add 250 to VC
$68E    $CF22   RND      VF, #22         ; VF = random & 22
$690    $A1E0   LD       I, $1E0         ; Load 1E0 into I
$692    $7B27   ADD      VB, #27         ; Add 39 to VB
$694    $318B   SE       V1, #8B         ; Skip if V1 == 139
$696    $EAA8   UNKNOWN  $EAA8           ; Unknown Exxx instruction
$698    $8FD2   AND      VF, VD          ; VF &= VD
$69A    $BBEA   JP       V0, $BEA        ; Jump to V0 + BEA
$69C    $67A9   LD       V7, #A9         ; Load 169 into V7
$69E    $0984   SYS      $984            ; System call to 984
$6A0    $6E0C   LD       VE, #0C         ; Load 12 into VE
$6A2    $36F5   SE       V6, #F5         ; Skip if V6 == 245
$6A4    $8DE5   SUB      VD, VE          ; VD -= VE, VF = !borrow
$6A6    $B31D   JP       V0, $31D        ; Jump to V0 + 31D
$6A8    $CCB9   RND      VC, #B9         ; VC = random & B9
$6AA    $3503   SE       V5, #03         ; Skip if V5 == 3
$6AC    $16FB   JP       $6FB            ; Jump to 6FB
$6AE    $FADE   UNKNOWN  FADE            ; Unknown Fxxx instruction
$6B0    $3556   SE       V5, #56         ; Skip if V5 == 86
$6B2    $38AF   SE       V8, #AF         ; Skip if V8 == 175
$6B4    $EC37   UNKNOWN  $EC37           ; Unknown Exxx instruction
$6B6    $A2EA   LD       I, $2EA         ; Load 2EA into I
$6B8    $83A9   UNKNOWN  83A9            ; Unknown 8xxx instruction
$6BA    $3FB9   SE       VF, #B9         ; Skip if VF == 185
$6BC    $A22F   LD       I, $22F         ; Load 22F into I
$6BE    $2AFE   CALL     $AFE            ; Call subroutine at AFE
$6C0    $3BA0   SE       VB, #A0         ; Skip if VB == 160
$6C2    $009B   SYS      $09B            ; System call to 09B
$6C4    $778B   ADD      V7, #8B         ; Add 139 to V7
$6C6    $BA4F   JP       V0, $A4F        ; Jump to V0 + A4F
$6C8    $544F   UNKNOWN  $544F           ; Unknown 5xxx instruction
$6CA    $1030   JP       $030            ; Jump to 030
$6CC    $7700   ADD      V7, #00         ; Add 0 to V7
$6CE    $1A4D   JP       $A4D            ; Jump to A4D
$6D0    $EC1D   UNKNOWN  $EC1D           ; Unknown Exxx instruction
$6D2    $4C40   SNE      VC, #40         ; Skip if VC != 64
$6D4    $449B   SNE      V4, #9B         ; Skip if V4 != 155
$6D6    $4BCD   SNE      VB, #CD         ; Skip if VB != 205
$6D8    $A19C   LD       I, $19C         ; Load 19C into I
$6DA    $D1AE   DRW      V1, VA, #E      ; Draw 14-byte sprite at V1, VA
$6DC    $7680   ADD      V6, #80         ; Add 128 to V6
$6DE    $4834   SNE      V8, #34         ; Skip if V8 != 52
$6E0    $89E0   LD       V9, VE          ; V9 = VE
$6E2    $FED5   UNKNOWN  FED5            ; Unknown Fxxx instruction
$6E4    $DFF8   DRW      VF, VF, #8      ; Draw 8-byte sprite at VF, VF
$6E6    $C75C   RND      V7, #5C         ; V7 = random & 5C
$6E8    $4F2E   SNE      VF, #2E         ; Skip if VF != 46
$6EA    $CDFC   RND      VD, #FC         ; VD = random & FC
$6EC    $A6E8   LD       I, $6E8         ; Load 6E8 into I
$6EE    $A6D2   LD       I, $6D2         ; Load 6D2 into I
$6F0    $A72B   LD       I, $72B         ; Load 72B into I
$6F2    $46BA   SNE      V6, #BA         ; Skip if V6 != 186
$6F4    $2D6E   CALL     $D6E            ; Call subroutine at D6E
$6F6    $3695   SE       V6, #95         ; Skip if V6 == 149
$6F8    $8D58   UNKNOWN  8D58            ; Unknown 8xxx instruction
$6FA    $2E5D   CALL     $E5D            ; Call subroutine at E5D
$6FC    $0699   SYS      $699            ; System call to 699
$6FE    $FF4A   UNKNOWN  FF4A            ; Unknown Fxxx instruction
$700    $960B   UNKNOWN  $960B           ; Unknown 9xxx instruction
$702    $059C   SYS      $59C            ; System call to 59C
$704    $86A4   ADD      V6, VA          ; V6 += VA, VF = carry
$706    $1E4D   JP       $E4D            ; Jump to E4D
$708    $35F1   SE       V5, #F1         ; Skip if V5 == 241
$70A    $FFE5   UNKNOWN  FFE5            ; Unknown Fxxx instruction
$70C    $3763   SE       V7, #63         ; Skip if V7 == 99
$70E    $9D97   UNKNOWN  $9D97           ; Unknown 9xxx instruction
$710    $F352   UNKNOWN  F352            ; Unknown Fxxx instruction
$712    $19E1   JP       $9E1            ; Jump to 9E1
$714    $6C4F   LD       VC, #4F         ; Load 79 into VC
$716    $3629   SE       V6, #29         ; Skip if V6 == 41
$718    $B195   JP       V0, $195        ; Jump to V0 + 195
$71A    $991E   UNKNOWN  $991E           ; Unknown 9xxx instruction
$71C    $355C   SE       V5, #5C         ; Skip if V5 == 92
$71E    $AF7B   LD       I, $F7B         ; Load F7B into I
$720    $F2B3   UNKNOWN  F2B3            ; Unknown Fxxx instruction
$722    $E3DD   UNKNOWN  $E3DD           ; Unknown Exxx instruction
$724    $95CC   UNKNOWN  $95CC           ; Unknown 9xxx instruction
$726    $DE02   DRW      VE, V0, #2      ; Draw 2-byte sprite at VE, V0
$728    $25BF   CALL     $5BF            ; Call subroutine at 5BF
$72A    $83FD   UNKNOWN  83FD            ; Unknown 8xxx instruction
$72C    $1E8A   JP       $E8A            ; Jump to E8A
$72E    $9484   UNKNOWN  $9484           ; Unknown 9xxx instruction
$730    $B2DD   JP       V0, $2DD        ; Jump to V0 + 2DD
$732    $C3FC   RND      V3, #FC         ; V3 = random & FC
$734    $FD60   UNKNOWN  FD60            ; Unknown Fxxx instruction
$736    $7D34   ADD      VD, #34         ; Add 52 to VD
$738    $D37A   DRW      V3, V7, #A      ; Draw 10-byte sprite at V3, V7
$73A    $EB77   UNKNOWN  $EB77           ; Unknown Exxx instruction
$73C    $BF29   JP       V0, $F29        ; Jump to V0 + F29
$73E    $20CB   CALL     $0CB            ; Call subroutine at 0CB
$740    $5B28   UNKNOWN  $5B28           ; Unknown 5xxx instruction
$742    $D047   DRW      V0, V4, #7      ; Draw 7-byte sprite at V0, V4
$744    $3A41   SE       VA, #41         ; Skip if VA == 65
$746    $B81A   JP       V0, $81A        ; Jump to V0 + 81A
$748    $210F   CALL     $10F            ; Call subroutine at 10F
$74A    $0FFC   SYS      $FFC            ; System call to FFC
$74C    $C374   RND      V3, #74         ; V3 = random & 74
$74E    $9EE9   UNKNOWN  $9EE9           ; Unknown 9xxx instruction
$750    $58B1   UNKNOWN  $58B1           ; Unknown 5xxx instruction
$752    $7ABA   ADD      VA, #BA         ; Add 186 to VA
$754    $DA92   DRW      VA, V9, #2      ; Draw 2-byte sprite at VA, V9
$756    $40BA   SNE      V0, #BA         ; Skip if V0 != 186
$758    $E60C   UNKNOWN  $E60C           ; Unknown Exxx instruction
$75A    $B168   JP       V0, $168        ; Jump to V0 + 168
$75C    $161B   JP       $61B            ; Jump to 61B
$75E    $0CFA   SYS      $CFA            ; System call to CFA
$760    $33A1   SE       V3, #A1         ; Skip if V3 == 161
$762    $2F0E   CALL     $F0E            ; Call subroutine at F0E
$764    $B5D8   JP       V0, $5D8        ; Jump to V0 + 5D8
$766    $52F8   UNKNOWN  $52F8           ; Unknown 5xxx instruction
$768    $0127   SYS      $127            ; System call to 127
$76A    $28E3   CALL     $8E3            ; Call subroutine at 8E3
$76C    $7299   ADD      V2, #99         ; Add 153 to V2
$76E    $4588   SNE      V5, #88         ; Skip if V5 != 136
$770    $C811   RND      V8, #11         ; V8 = random & 11
$772    $EB84   UNKNOWN  $EB84           ; Unknown Exxx instruction
$774    $2CEF   CALL     $CEF            ; Call subroutine at CEF
$776    $4B36   SNE      VB, #36         ; Skip if VB != 54
$778    $53FB   UNKNOWN  $53FB           ; Unknown 5xxx instruction
$77A    $5A87   UNKNOWN  $5A87           ; Unknown 5xxx instruction
$77C    $6E86   LD       VE, #86         ; Load 134 into VE
$77E    $B1D3   JP       V0, $1D3        ; Jump to V0 + 1D3
$780    $35DC   SE       V5, #DC         ; Skip if V5 == 220
$782    $5BE8   UNKNOWN  $5BE8           ; Unknown 5xxx instruction
$784    $A9CD   LD       I, $9CD         ; Load 9CD into I
$786    $AE78   LD       I, $E78         ; Load E78 into I
$788    $5468   UNKNOWN  $5468           ; Unknown 5xxx instruction
$78A    $6E9A   LD       VE, #9A         ; Load 154 into VE
$78C    $30C8   SE       V0, #C8         ; Skip if V0 == 200
$78E    $A3F9   LD       I, $3F9         ; Load 3F9 into I
$790    $C954   RND      V9, #54         ; V9 = random & 54
$792    $8621   OR       V6, V2          ; V6 |= V2
$794    $6BA7   LD       VB, #A7         ; Load 167 into VB
$796    $3282   SE       V2, #82         ; Skip if V2 == 130
$798    $EBB5   UNKNOWN  $EBB5           ; Unknown Exxx instruction
$79A    $2D3D   CALL     $D3D            ; Call subroutine at D3D
$79C    $AF2F   LD       I, $F2F         ; Load F2F into I
$79E    $7B90   ADD      VB, #90         ; Add 144 to VB
$7A0    $A152   LD       I, $152         ; Load 152 into I
$7A2    $E022   UNKNOWN  $E022           ; Unknown Exxx instruction
$7A4    $DEE7   DRW      VE, VE, #7      ; Draw 7-byte sprite at VE, VE
$7A6    $2A09   CALL     $A09            ; Call subroutine at A09
$7A8    $BFD8   JP       V0, $FD8        ; Jump to V0 + FD8
$7AA    $43C8   SNE      V3, #C8         ; Skip if V3 != 200
$7AC    $6221   LD       V2, #21         ; Load 33 into V2
$7AE    $323C   SE       V2, #3C         ; Skip if V2 == 60
$7B0    $E5F7   UNKNOWN  $E5F7           ; Unknown Exxx instruction
$7B2    $303C   SE       V0, #3C         ; Skip if V0 == 60
$7B4    $5234   UNKNOWN  $5234           ; Unknown 5xxx instruction
$7B6    $8895   SUB      V8, V9          ; V8 -= V9, VF = !borrow
$7B8    $E675   UNKNOWN  $E675           ; Unknown Exxx instruction
$7BA    $9797   UNKNOWN  $9797           ; Unknown 9xxx instruction
$7BC    $161C   JP       $61C            ; Jump to 61C
$7BE    $6DE2   LD       VD, #E2         ; Load 226 into VD
$7C0    $3127   SE       V1, #27         ; Skip if V1 == 39
$7C2    $6787   LD       V7, #87         ; Load 135 into V7
$7C4    $9FE5   UNKNOWN  $9FE5           ; Unknown 9xxx instruction
$7C6    $5C1D   UNKNOWN  $5C1D           ; Unknown 5xxx instruction
$7C8    $32AC   SE       V2, #AC         ; Skip if V2 == 172
$7CA    $6355   LD       V3, #55         ; Load 85 into V3
$7CC    $B385   JP       V0, $385        ; Jump to V0 + 385
$7CE    $29B4   CALL     $9B4            ; Call subroutine at 9B4
$7D0    $6741   LD       V7, #41         ; Load 65 into V7
$7D2    $870A   UNKNOWN  870A            ; Unknown 8xxx instruction
$7D4    $E687   UNKNOWN  $E687           ; Unknown Exxx instruction
$7D6    $4C69   SNE      VC, #69         ; Skip if VC != 105
$7D8    $41C8   SNE      V1, #C8         ; Skip if V1 != 200
$7DA    $B2B5   JP       V0, $2B5        ; Jump to V0 + 2B5
$7DC    $8F6B   UNKNOWN  8F6B            ; Unknown 8xxx instruction
$7DE    $26DE   CALL     $6DE            ; Call subroutine at 6DE
$7E0    $00FA   SYS      $0FA            ; System call to 0FA
$7E2    $83C6   SHR      V3              ; V3 >>= 1, VF = LSB
$7E4    $914A   UNKNOWN  $914A           ; Unknown 9xxx instruction
$7E6    $B47D   JP       V0, $47D        ; Jump to V0 + 47D
$7E8    $FDCD   UNKNOWN  FDCD            ; Unknown Fxxx instruction
$7EA    $352D   SE       V5, #2D         ; Skip if V5 == 45
$7EC    $108E   JP       $08E            ; Jump to 08E
$7EE    $066E   SYS      $66E            ; System call to 66E
$7F0    $5CEE   UNKNOWN  $5CEE           ; Unknown 5xxx instruction
$7F2    $6C11   LD       VC, #11         ; Load 17 into VC
$7F4    $857A   UNKNOWN  857A            ; Unknown 8xxx instruction
$7F6    $7520   ADD      V5, #20         ; Add 32 to V5
$7F8    $40AF   SNE      V0, #AF         ; Skip if V0 != 175
$7FA    $2DF7   CALL     $DF7            ; Call subroutine at DF7
$7FC    $3EB8   SE       VE, #B8         ; Skip if VE == 184
$7FE    $F907   LD       V9, DT          ; V9 = delay timer
$800    $ACE1   LD       I, $CE1         ; Load CE1 into I
$802    $A2A6   LD       I, $2A6         ; Load 2A6 into I
$804    $A72B   LD       I, $72B         ; Load 72B into I
$806    $B345   JP       V0, $345        ; Jump to V0 + 345
$808    $C7C0   RND      V7, #C0         ; V7 = random & C0
$80A    $03C6   SYS      $3C6            ; System call to 3C6
$80C    $A195   LD       I, $195         ; Load 195 into I
$80E    $B417   JP       V0, $417        ; Jump to V0 + 417
$810    $B3F2   JP       V0, $3F2        ; Jump to V0 + 3F2
$812    $895A   UNKNOWN  895A            ; Unknown 8xxx instruction
$814    $8AF6   SHR      VA              ; VA >>= 1, VF = LSB
$816    $2888   CALL     $888            ; Call subroutine at 888
$818    $48A1   SNE      V8, #A1         ; Skip if V8 != 161
$81A    $2250   CALL     $250            ; Call subroutine at 250
$81C    $21C8   CALL     $1C8            ; Call subroutine at 1C8
$81E    $91FD   UNKNOWN  $91FD           ; Unknown 9xxx instruction
$820    $BBA2   JP       V0, $BA2        ; Jump to V0 + BA2
$822    $CC42   RND      VC, #42         ; VC = random & 42
$824    $D047   DRW      V0, V4, #7      ; Draw 7-byte sprite at V0, V4
$826    $F97A   UNKNOWN  F97A            ; Unknown Fxxx instruction
$828    $685A   LD       V8, #5A         ; Load 90 into V8
$82A    $2619   CALL     $619            ; Call subroutine at 619
$82C    $C53D   RND      V5, #3D         ; V5 = random & 3D
$82E    $AD0B   LD       I, $D0B         ; Load D0B into I
$830    $AAC1   LD       I, $AC1         ; Load AC1 into I
$832    $9B0B   UNKNOWN  $9B0B           ; Unknown 9xxx instruction
$834    $00D3   SYS      $0D3            ; System call to 0D3
$836    $A351   LD       I, $351         ; Load 351 into I
$838    $A485   LD       I, $485         ; Load 485 into I
$83A    $C3C7   RND      V3, #C7         ; V3 = random & C7
$83C    $15EF   JP       $5EF            ; Jump to 5EF
$83E    $A51F   LD       I, $51F         ; Load 51F into I
$840    $6FCF   LD       VF, #CF         ; Load 207 into VF
$842    $EA7E   UNKNOWN  $EA7E           ; Unknown Exxx instruction
$844    $28A8   CALL     $8A8            ; Call subroutine at 8A8
$846    $293A   CALL     $93A            ; Call subroutine at 93A
$848    $82C9   UNKNOWN  82C9            ; Unknown 8xxx instruction
$84A    $A630   LD       I, $630         ; Load 630 into I
$84C    $DA72   DRW      VA, V7, #2      ; Draw 2-byte sprite at VA, V7
$84E    $4994   SNE      V9, #94         ; Skip if V9 != 148
$850    $CA1E   RND      VA, #1E         ; VA = random & 1E
$852    $5F32   UNKNOWN  $5F32           ; Unknown 5xxx instruction
$854    $73AA   ADD      V3, #AA         ; Add 170 to V3
$856    $5E15   UNKNOWN  $5E15           ; Unknown 5xxx instruction
$858    $01B6   SYS      $1B6            ; System call to 1B6
$85A    $2BA1   CALL     $BA1            ; Call subroutine at BA1
$85C    $C6C5   RND      V6, #C5         ; V6 = random & C5
$85E    $65E6   LD       V5, #E6         ; Load 230 into V5
$860    $A05A   LD       I, $05A         ; Load 05A into I
$862    $5B15   UNKNOWN  $5B15           ; Unknown 5xxx instruction
$864    $A64A   LD       I, $64A         ; Load 64A into I
$866    $9D5C   UNKNOWN  $9D5C           ; Unknown 9xxx instruction
$868    $61EB   LD       V1, #EB         ; Load 235 into V1
$86A    $439E   SNE      V3, #9E         ; Skip if V3 != 158
$86C    $EC11   UNKNOWN  $EC11           ; Unknown Exxx instruction
$86E    $8B8E   SHL      VB              ; VB <<= 1, VF = MSB
$870    $CB73   RND      VB, #73         ; VB = random & 73
$872    $3491   SE       V4, #91         ; Skip if V4 == 145
$874    $9ACE   UNKNOWN  $9ACE           ; Unknown 9xxx instruction
$876    $5B87   UNKNOWN  $5B87           ; Unknown 5xxx instruction
$878    $177D   JP       $77D            ; Jump to 77D
$87A    $4EEA   SNE      VE, #EA         ; Skip if VE != 234
$87C    $0790   SYS      $790            ; System call to 790
$87E    $ADF0   LD       I, $DF0         ; Load DF0 into I
$880    $6913   LD       V9, #13         ; Load 19 into V9
$882    $8D9D   UNKNOWN  8D9D            ; Unknown 8xxx instruction
$884    $9045   UNKNOWN  $9045           ; Unknown 9xxx instruction
$886    $B544   JP       V0, $544        ; Jump to V0 + 544
$888    $A6A6   LD       I, $6A6         ; Load 6A6 into I
$88A    $E6B9   UNKNOWN  $E6B9           ; Unknown Exxx instruction
$88C    $A7A6   LD       I, $7A6         ; Load 7A6 into I
$88E    $6AC5   LD       VA, #C5         ; Load 197 into VA
$890    $2F9F   CALL     $F9F            ; Call subroutine at F9F
$892    $6C00   LD       VC, #00         ; Load 0 into VC
$894    $BAB2   JP       V0, $AB2        ; Jump to V0 + AB2
$896    $1526   JP       $526            ; Jump to 526
$898    $1BFA   JP       $BFA            ; Jump to BFA
$89A    $9D8A   UNKNOWN  $9D8A           ; Unknown 9xxx instruction
$89C    $CB4F   RND      VB, #4F         ; VB = random & 4F
$89E    $217F   CALL     $17F            ; Call subroutine at 17F
$8A0    $29E9   CALL     $9E9            ; Call subroutine at 9E9
$8A2    $3413   SE       V4, #13         ; Skip if V4 == 19
$8A4    $CA99   RND      VA, #99         ; VA = random & 99
$8A6    $6114   LD       V1, #14         ; Load 20 into V1
$8A8    $B434   JP       V0, $434        ; Jump to V0 + 434
$8AA    $BF21   JP       V0, $F21        ; Jump to V0 + F21
$8AC    $1814   JP       $814            ; Jump to 814
$8AE    $C5DD   RND      V5, #DD         ; V5 = random & DD
$8B0    $8F95   SUB      VF, V9          ; VF -= V9, VF = !borrow
$8B2    $2831   CALL     $831            ; Call subroutine at 831
$8B4    $6169   LD       V1, #69         ; Load 105 into V1
$8B6    $7E15   ADD      VE, #15         ; Add 21 to VE
$8B8    $C3ED   RND      V3, #ED         ; V3 = random & ED
$8BA    $E478   UNKNOWN  $E478           ; Unknown Exxx instruction
$8BC    $319B   SE       V1, #9B         ; Skip if V1 == 155
$8BE    $5A1A   UNKNOWN  $5A1A           ; Unknown 5xxx instruction
$8C0    $EE26   UNKNOWN  $EE26           ; Unknown Exxx instruction
$8C2    $23B7   CALL     $3B7            ; Call subroutine at 3B7
$8C4    $6755   LD       V7, #55         ; Load 85 into V7
$8C6    $4455   SNE      V4, #55         ; Skip if V4 != 85
$8C8    $6E8F   LD       VE, #8F         ; Load 143 into VE
$8CA    $6F93   LD       VF, #93         ; Load 147 into VF
$8CC    $49AF   SNE      V9, #AF         ; Skip if V9 != 175
$8CE    $0849   SYS      $849            ; System call to 849
$8D0    $0ACB   SYS      $ACB            ; System call to ACB
$8D2    $E984   UNKNOWN  $E984           ; Unknown Exxx instruction
$8D4    $FC75   UNKNOWN  FC75            ; Unknown Fxxx instruction
$8D6    $76E5   ADD      V6, #E5         ; Add 229 to V6
$8D8    $7963   ADD      V9, #63         ; Add 99 to V9
$8DA    $745D   ADD      V4, #5D         ; Add 93 to V4
$8DC    $ABB8   LD       I, $BB8         ; Load BB8 into I
$8DE    $DBBC   DRW      VB, VB, #C      ; Draw 12-byte sprite at VB, VB
$8E0    $25A1   CALL     $5A1            ; Call subroutine at 5A1
$8E2    $5967   UNKNOWN  $5967           ; Unknown 5xxx instruction
$8E4    $57D3   UNKNOWN  $57D3           ; Unknown 5xxx instruction
$8E6    $6D06   LD       VD, #06         ; Load 6 into VD
$8E8    $0388   SYS      $388            ; System call to 388
$8EA    $9A3A   UNKNOWN  $9A3A           ; Unknown 9xxx instruction
$8EC    $BFBE   JP       V0, $FBE        ; Jump to V0 + FBE
$8EE    $5FAF   UNKNOWN  $5FAF           ; Unknown 5xxx instruction
$8F0    $54C0   SE       V4, VC          ; Skip if V4 == VC
$8F2    $FAFF   UNKNOWN  FAFF            ; Unknown Fxxx instruction
$8F4    $B3E8   JP       V0, $3E8        ; Jump to V0 + 3E8
$8F6    $4878   SNE      V8, #78         ; Skip if V8 != 120
$8F8    $EEA7   UNKNOWN  $EEA7           ; Unknown Exxx instruction
$8FA    $4DD1   SNE      VD, #D1         ; Skip if VD != 209
$8FC    $164F   JP       $64F            ; Jump to 64F
$8FE    $91D9   UNKNOWN  $91D9           ; Unknown 9xxx instruction
$900    $5F4A   UNKNOWN  $5F4A           ; Unknown 5xxx instruction
$902    $947A   UNKNOWN  $947A           ; Unknown 9xxx instruction
$904    $5D6E   UNKNOWN  $5D6E           ; Unknown 5xxx instruction
$906    $247E   CALL     $47E            ; Call subroutine at 47E
$908    $B292   JP       V0, $292        ; Jump to V0 + 292
$90A    $7F89   ADD      VF, #89         ; Add 137 to VF
$90C    $9470   SNE      V4, V7          ; Skip if V4 != V7
$90E    $CDCC   RND      VD, #CC         ; VD = random & CC
$910    $6358   LD       V3, #58         ; Load 88 into V3
$912    $3697   SE       V6, #97         ; Skip if V6 == 151
$914    $7386   ADD      V3, #86         ; Add 134 to V3
$916    $B01A   JP       V0, $01A        ; Jump to V0 + 01A
$918    $4CBA   SNE      VC, #BA         ; Skip if VC != 186
$91A    $2438   CALL     $438            ; Call subroutine at 438
$91C    $C8D3   RND      V8, #D3         ; V8 = random & D3
$91E    $A991   LD       I, $991         ; Load 991 into I
$920    $C6BC   RND      V6, #BC         ; V6 = random & BC
$922    $11EE   JP       $1EE            ; Jump to 1EE
$924    $32CE   SE       V2, #CE         ; Skip if V2 == 206
$926    $D40D   DRW      V4, V0, #D      ; Draw 13-byte sprite at V4, V0
$928    $B73C   JP       V0, $73C        ; Jump to V0 + 73C
$92A    $3073   SE       V0, #73         ; Skip if V0 == 115
$92C    $545D   UNKNOWN  $545D           ; Unknown 5xxx instruction
$92E    $344D   SE       V4, #4D         ; Skip if V4 == 77
$930    $3BE2   SE       VB, #E2         ; Skip if VB == 226
$932    $FC5C   UNKNOWN  FC5C            ; Unknown Fxxx instruction
$934    $2512   CALL     $512            ; Call subroutine at 512
$936    $901C   UNKNOWN  $901C           ; Unknown 9xxx instruction
$938    $FDEA   UNKNOWN  FDEA            ; Unknown Fxxx instruction
$93A    $A339   LD       I, $339         ; Load 339 into I
$93C    $47C8   SNE      V7, #C8         ; Skip if V7 != 200
$93E    $6592   LD       V5, #92         ; Load 146 into V5
$940    $E882   UNKNOWN  $E882           ; Unknown Exxx instruction
$942    $F3DE   UNKNOWN  F3DE            ; Unknown Fxxx instruction
$944    $5C41   UNKNOWN  $5C41           ; Unknown 5xxx instruction
$946    $3373   SE       V3, #73         ; Skip if V3 == 115
$948    $0664   SYS      $664            ; System call to 664
$94A    $28B7   CALL     $8B7            ; Call subroutine at 8B7
$94C    $F4F5   UNKNOWN  F4F5            ; Unknown Fxxx instruction
$94E    $495C   SNE      V9, #5C         ; Skip if V9 != 92
$950    $BB0F   JP       V0, $B0F        ; Jump to V0 + B0F
$952    $C05B   RND      V0, #5B         ; V0 = random & 5B
$954    $9D5F   UNKNOWN  $9D5F           ; Unknown 9xxx instruction
$956    $EAF7   UNKNOWN  $EAF7           ; Unknown Exxx instruction
$958    $996E   UNKNOWN  $996E           ; Unknown 9xxx instruction
$95A    $B077   JP       V0, $077        ; Jump to V0 + 077
$95C    $2546   CALL     $546            ; Call subroutine at 546
$95E    $6C87   LD       VC, #87         ; Load 135 into VC
$960    $E51F   UNKNOWN  $E51F           ; Unknown Exxx instruction
$962    $79B6   ADD      V9, #B6         ; Add 182 to V9
$964    $9F81   UNKNOWN  $9F81           ; Unknown 9xxx instruction
$966    $62FA   LD       V2, #FA         ; Load 250 into V2
$968    $DD2C   DRW      VD, V2, #C      ; Draw 12-byte sprite at VD, V2
$96A    $0F3B   SYS      $F3B            ; System call to F3B
$96C    $8F14   ADD      VF, V1          ; VF += V1, VF = carry
$96E    $5B95   UNKNOWN  $5B95           ; Unknown 5xxx instruction
$970    $8532   AND      V5, V3          ; V5 &= V3
$972    $9189   UNKNOWN  $9189           ; Unknown 9xxx instruction
$974    $A051   LD       I, $051         ; Load 051 into I
$976    $8735   SUB      V7, V3          ; V7 -= V3, VF = !borrow
$978    $9B86   UNKNOWN  $9B86           ; Unknown 9xxx instruction
$97A    $144E   JP       $44E            ; Jump to 44E
$97C    $37A2   SE       V7, #A2         ; Skip if V7 == 162
$97E    $5463   UNKNOWN  $5463           ; Unknown 5xxx instruction
$980    $A9A4   LD       I, $9A4         ; Load 9A4 into I
$982    $9976   UNKNOWN  $9976           ; Unknown 9xxx instruction
$984    $5C0B   UNKNOWN  $5C0B           ; Unknown 5xxx instruction
$986    $003B   SYS      $03B            ; System call to 03B
$988    $886E   SHL      V8              ; V8 <<= 1, VF = MSB
$98A    $05FA   SYS      $5FA            ; System call to 5FA
$98C    $77CF   ADD      V7, #CF         ; Add 207 to V7
$98E    $7CC0   ADD      VC, #C0         ; Add 192 to VC
$990    $8348   UNKNOWN  8348            ; Unknown 8xxx instruction
$992    $7A2C   ADD      VA, #2C         ; Add 44 to VA
$994    $87CE   SHL      V7              ; V7 <<= 1, VF = MSB
$996    $C2C0   RND      V2, #C0         ; V2 = random & C0
$998    $A0D4   LD       I, $0D4         ; Load 0D4 into I
$99A    $099D   SYS      $99D            ; System call to 99D
$99C    $E8A0   UNKNOWN  $E8A0           ; Unknown Exxx instruction
$99E    $951F   UNKNOWN  $951F           ; Unknown 9xxx instruction
$9A0    $409A   SNE      V0, #9A         ; Skip if V0 != 154
$9A2    $8C65   SUB      VC, V6          ; VC -= V6, VF = !borrow
$9A4    $3B0C   SE       VB, #0C         ; Skip if VB == 12
$9A6    $FF04   UNKNOWN  FF04            ; Unknown Fxxx instruction
$9A8    $7C0E   ADD      VC, #0E         ; Add 14 to VC
$9AA    $E8FE   UNKNOWN  $E8FE           ; Unknown Exxx instruction
$9AC    $AB44   LD       I, $B44         ; Load B44 into I
$9AE    $8E82   AND      VE, V8          ; VE &= V8
$9B0    $C57E   RND      V5, #7E         ; V5 = random & 7E
$9B2    $6BFC   LD       VB, #FC         ; Load 252 into VB
$9B4    $034B   SYS      $34B            ; System call to 34B
$9B6    $8D61   OR       VD, V6          ; VD |= V6
$9B8    $6B88   LD       VB, #88         ; Load 136 into VB
$9BA    $1EBF   JP       $EBF            ; Jump to EBF
$9BC    $5BDD   UNKNOWN  $5BDD           ; Unknown 5xxx instruction
$9BE    $2BE9   CALL     $BE9            ; Call subroutine at BE9
$9C0    $13CA   JP       $3CA            ; Jump to 3CA
$9C2    $A413   LD       I, $413         ; Load 413 into I
$9C4    $C252   RND      V2, #52         ; V2 = random & 52
$9C6    $30A6   SE       V0, #A6         ; Skip if V0 == 166
$9C8    $F5B6   UNKNOWN  F5B6            ; Unknown Fxxx instruction
$9CA    $75B2   ADD      V5, #B2         ; Add 178 to V5
$9CC    $2782   CALL     $782            ; Call subroutine at 782
$9CE    $0EE2   SYS      $EE2            ; System call to EE2
$9D0    $D264   DRW      V2, V6, #4      ; Draw 4-byte sprite at V2, V6
$9D2    $974E   UNKNOWN  $974E           ; Unknown 9xxx instruction
$9D4    $A1CC   LD       I, $1CC         ; Load 1CC into I
$9D6    $4420   SNE      V4, #20         ; Skip if V4 != 32
$9D8    $FC66   UNKNOWN  FC66            ; Unknown Fxxx instruction
$9DA    $7A76   ADD      VA, #76         ; Add 118 to VA
$9DC    $0964   SYS      $964            ; System call to 964
$9DE    $4639   SNE      V6, #39         ; Skip if V6 != 57
$9E0    $EA07   UNKNOWN  $EA07           ; Unknown Exxx instruction
$9E2    $0C5D   SYS      $C5D            ; System call to C5D
$9E4    $1683   JP       $683            ; Jump to 683
$9E6    $3CF4   SE       VC, #F4         ; Skip if VC == 244
$9E8    $1D80   JP       $D80            ; Jump to D80
$9EA    $0A3A   SYS      $A3A            ; System call to A3A
$9EC    $F32A   UNKNOWN  F32A            ; Unknown Fxxx instruction
$9EE    $6868   LD       V8, #68         ; Load 104 into V8
$9F0    $97F8   UNKNOWN  $97F8           ; Unknown 9xxx instruction
$9F2    $00CE   SYS      $0CE            ; System call to 0CE
$9F4    $9355   UNKNOWN  $9355           ; Unknown 9xxx instruction
$9F6    $9ADE   UNKNOWN  $9ADE           ; Unknown 9xxx instruction
$9F8    $644C   LD       V4, #4C         ; Load 76 into V4
$9FA    $4B6C   SNE      VB, #6C         ; Skip if VB != 108
$9FC    $A5A8   LD       I, $5A8         ; Load 5A8 into I
$9FE    $C720   RND      V7, #20         ; V7 = random & 20
$A00    $02D1   SYS      $2D1            ; System call to 2D1
$A02    $9BFC   UNKNOWN  $9BFC           ; Unknown 9xxx instruction
$A04    $95ED   UNKNOWN  $95ED           ; Unknown 9xxx instruction
$A06    $11E3   JP       $1E3            ; Jump to 1E3
$A08    $10E7   JP       $0E7            ; Jump to 0E7
$A0A    $3127   SE       V1, #27         ; Skip if V1 == 39
$A0C    $B68D   JP       V0, $68D        ; Jump to V0 + 68D
$A0E    $116F   JP       $16F            ; Jump to 16F
$A10    $FC84   UNKNOWN  FC84            ; Unknown Fxxx instruction
$A12    $277B   CALL     $77B            ; Call subroutine at 77B
$A14    $2E87   CALL     $E87            ; Call subroutine at E87
$A16    $477C   SNE      V7, #7C         ; Skip if V7 != 124
$A18    $C490   RND      V4, #90         ; V4 = random & 90
$A1A    $4A09   SNE      VA, #09         ; Skip if VA != 9
$A1C    $4482   SNE      V4, #82         ; Skip if V4 != 130
$A1E    $1D48   JP       $D48            ; Jump to D48
$A20    $F021   UNKNOWN  F021            ; Unknown Fxxx instruction
$A22    $6ACE   LD       VA, #CE         ; Load 206 into VA
$A24    $FC36   UNKNOWN  FC36            ; Unknown Fxxx instruction
$A26    $8D62   AND      VD, V6          ; VD &= V6
$A28    $22E1   CALL     $2E1            ; Call subroutine at 2E1
$A2A    $1E02   JP       $E02            ; Jump to E02
$A2C    $F112   UNKNOWN  F112            ; Unknown Fxxx instruction
$A2E    $EFE6   UNKNOWN  $EFE6           ; Unknown Exxx instruction
$A30    $1DE5   JP       $DE5            ; Jump to DE5
$A32    $E33D   UNKNOWN  $E33D           ; Unknown Exxx instruction
$A34    $CA12   RND      VA, #12         ; VA = random & 12
$A36    $B636   JP       V0, $636        ; Jump to V0 + 636
$A38    $67A8   LD       V7, #A8         ; Load 168 into V7
$A3A    $F31D   UNKNOWN  F31D            ; Unknown Fxxx instruction
$A3C    $7C1E   ADD      VC, #1E         ; Add 30 to VC
$A3E    $3AC1   SE       VA, #C1         ; Skip if VA == 193
$A40    $38B2   SE       V8, #B2         ; Skip if V8 == 178
$A42    $53A8   UNKNOWN  $53A8           ; Unknown 5xxx instruction
$A44    $A2F6   LD       I, $2F6         ; Load 2F6 into I
$A46    $DE60   DRW      VE, V6, #0      ; Draw 0-byte sprite at VE, V6
$A48    $7164   ADD      V1, #64         ; Add 100 to V1
$A4A    $6233   LD       V2, #33         ; Load 51 into V2
$A4C    $EDC0   UNKNOWN  $EDC0           ; Unknown Exxx instruction
$A4E    $0DBE   SYS      $DBE            ; System call to DBE
$A50    $62D1   LD       V2, #D1         ; Load 209 into V2
$A52    $8268   UNKNOWN  8268            ; Unknown 8xxx instruction
$A54    $EE5E   UNKNOWN  $EE5E           ; Unknown Exxx instruction
$A56    $C953   RND      V9, #53         ; V9 = random & 53
$A58    $4155   SNE      V1, #55         ; Skip if V1 != 85
$A5A    $3F25   SE       VF, #25         ; Skip if VF == 37
$A5C    $8516   SHR      V5              ; V5 >>= 1, VF = LSB
$A5E    $A379   LD       I, $379         ; Load 379 into I
$A60    $0C35   SYS      $C35            ; System call to C35
$A62    $393F   SE       V9, #3F         ; Skip if V9 == 63
$A64    $470D   SNE      V7, #0D         ; Skip if V7 != 13
$A66    $8AF9   UNKNOWN  8AF9            ; Unknown 8xxx instruction
$A68    $5B37   UNKNOWN  $5B37           ; Unknown 5xxx instruction
$A6A    $94C7   UNKNOWN  $94C7           ; Unknown 9xxx instruction
$A6C    $57F9   UNKNOWN  $57F9           ; Unknown 5xxx instruction
$A6E    $05D4   SYS      $5D4            ; System call to 5D4
$A70    $4E6B   SNE      VE, #6B         ; Skip if VE != 107
$A72    $4E99   SNE      VE, #99         ; Skip if VE != 153
$A74    $DF32   DRW      VF, V3, #2      ; Draw 2-byte sprite at VF, V3
$A76    $0250   SYS      $250            ; System call to 250
$A78    $2E71   CALL     $E71            ; Call subroutine at E71
$A7A    $9C38   UNKNOWN  $9C38           ; Unknown 9xxx instruction
$A7C    $4103   SNE      V1, #03         ; Skip if V1 != 3
$A7E    $3A2F   SE       VA, #2F         ; Skip if VA == 47
$A80    $86D7   SUBN     V6, VD          ; V6 = VD - V6, VF = !borrow
$A82    $034C   SYS      $34C            ; System call to 34C
$A84    $D614   DRW      V6, V1, #4      ; Draw 4-byte sprite at V6, V1
$A86    $53D5   UNKNOWN  $53D5           ; Unknown 5xxx instruction
$A88    $B003   JP       V0, $003        ; Jump to V0 + 003
$A8A    $31E5   SE       V1, #E5         ; Skip if V1 == 229
$A8C    $231F   CALL     $31F            ; Call subroutine at 31F
$A8E    $8F34   ADD      VF, V3          ; VF += V3, VF = carry
$A90    $D82A   DRW      V8, V2, #A      ; Draw 10-byte sprite at V8, V2
$A92    $69FB   LD       V9, #FB         ; Load 251 into V9
$A94    $D8BA   DRW      V8, VB, #A      ; Draw 10-byte sprite at V8, VB
$A96    $85F8   UNKNOWN  85F8            ; Unknown 8xxx instruction
$A98    $B0BF   JP       V0, $0BF        ; Jump to V0 + 0BF
$A9A    $FB3F   UNKNOWN  FB3F            ; Unknown Fxxx instruction
$A9C    $34C1   SE       V4, #C1         ; Skip if V4 == 193
$A9E    $3005   SE       V0, #05         ; Skip if V0 == 5
$AA0    $FCD4   UNKNOWN  FCD4            ; Unknown Fxxx instruction
$AA2    $70AA   ADD      V0, #AA         ; Add 170 to V0
$AA4    $BB41   JP       V0, $B41        ; Jump to V0 + B41
$AA6    $1E2E   JP       $E2E            ; Jump to E2E
$AA8    $1558   JP       $558            ; Jump to 558
$AAA    $E300   UNKNOWN  $E300           ; Unknown Exxx instruction
$AAC    $8CEE   SHL      VC              ; VC <<= 1, VF = MSB
$AAE    $42A0   SNE      V2, #A0         ; Skip if V2 != 160
$AB0    $095D   SYS      $95D            ; System call to 95D
$AB2    $A980   LD       I, $980         ; Load 980 into I
$AB4    $6524   LD       V5, #24         ; Load 36 into V5
$AB6    $F0A1   UNKNOWN  F0A1            ; Unknown Fxxx instruction
$AB8    $4756   SNE      V7, #56         ; Skip if V7 != 86
$ABA    $7756   ADD      V7, #56         ; Add 86 to V7
$ABC    $DE25   DRW      VE, V2, #5      ; Draw 5-byte sprite at VE, V2
$ABE    $EFC6   UNKNOWN  $EFC6           ; Unknown Exxx instruction
$AC0    $DED4   DRW      VE, VD, #4      ; Draw 4-byte sprite at VE, VD
$AC2    $C95A   RND      V9, #5A         ; V9 = random & 5A
$AC4    $EFA5   UNKNOWN  $EFA5           ; Unknown Exxx instruction
$AC6    $24C7   CALL     $4C7            ; Call subroutine at 4C7
$AC8    $DA0C   DRW      VA, V0, #C      ; Draw 12-byte sprite at VA, V0
$ACA    $A921   LD       I, $921         ; Load 921 into I
$ACC    $5EF3   UNKNOWN  $5EF3           ; Unknown 5xxx instruction
$ACE    $C7E2   RND      V7, #E2         ; V7 = random & E2
$AD0    $5A59   UNKNOWN  $5A59           ; Unknown 5xxx instruction
$AD2    $54C6   UNKNOWN  $54C6           ; Unknown 5xxx instruction
$AD4    $37CF   SE       V7, #CF         ; Skip if V7 == 207
$AD6    $D952   DRW      V9, V5, #2      ; Draw 2-byte sprite at V9, V5
$AD8    $B30F   JP       V0, $30F        ; Jump to V0 + 30F
$ADA    $584E   UNKNOWN  $584E           ; Unknown 5xxx instruction
$ADC    $004D   SYS      $04D            ; System call to 04D
$ADE    $CA39   RND      VA, #39         ; VA = random & 39
$AE0    $E87C   UNKNOWN  $E87C           ; Unknown Exxx instruction
$AE2    $9F26   UNKNOWN  $9F26           ; Unknown 9xxx instruction
$AE4    $456B   SNE      V5, #6B         ; Skip if V5 != 107
$AE6    $23FA   CALL     $3FA            ; Call subroutine at 3FA
$AE8    $FB9D   UNKNOWN  FB9D            ; Unknown Fxxx instruction
$AEA    $D359   DRW      V3, V5, #9      ; Draw 9-byte sprite at V3, V5
$AEC    $311C   SE       V1, #1C         ; Skip if V1 == 28
$AEE    $1DC2   JP       $DC2            ; Jump to DC2
$AF0    $D17A   DRW      V1, V7, #A      ; Draw 10-byte sprite at V1, V7
$AF2    $5D0D   UNKNOWN  $5D0D           ; Unknown 5xxx instruction
$AF4    $7318   ADD      V3, #18         ; Add 24 to V3
$AF6    $1249   JP       $249            ; Jump to 249
$AF8    $3124   SE       V1, #24         ; Skip if V1 == 36
$AFA    $39BC   SE       V9, #BC         ; Skip if V9 == 188
$AFC    $BEF7   JP       V0, $EF7        ; Jump to V0 + EF7
$AFE    $4854   SNE      V8, #54         ; Skip if V8 != 84
$B00    $2BFA   CALL     $BFA            ; Call subroutine at BFA
$B02    $F56A   UNKNOWN  F56A            ; Unknown Fxxx instruction
$B04    $F9DA   UNKNOWN  F9DA            ; Unknown Fxxx instruction
$B06    $A51B   LD       I, $51B         ; Load 51B into I
$B08    $0480   SYS      $480            ; System call to 480
$B0A    $AC10   LD       I, $C10         ; Load C10 into I
$B0C    $A5C1   LD       I, $5C1         ; Load 5C1 into I
$B0E    $77CA   ADD      V7, #CA         ; Add 202 to V7
$B10    $D8FA   DRW      V8, VF, #A      ; Draw 10-byte sprite at V8, VF
$B12    $0411   SYS      $411            ; System call to 411
$B14    $70AC   ADD      V0, #AC         ; Add 172 to V0
$B16    $B1DE   JP       V0, $1DE        ; Jump to V0 + 1DE
$B18    $A795   LD       I, $795         ; Load 795 into I
$B1A    $CC1B   RND      VC, #1B         ; VC = random & 1B
$B1C    $EF81   UNKNOWN  $EF81           ; Unknown Exxx instruction
$B1E    $22BA   CALL     $2BA            ; Call subroutine at 2BA
$B20    $A2F9   LD       I, $2F9         ; Load 2F9 into I
$B22    $A6E8   LD       I, $6E8         ; Load 6E8 into I
$B24    $5413   UNKNOWN  $5413           ; Unknown 5xxx instruction
$B26    $E067   UNKNOWN  $E067           ; Unknown Exxx instruction
$B28    $C0A2   RND      V0, #A2         ; V0 = random & A2
$B2A    $AEC9   LD       I, $EC9         ; Load EC9 into I
$B2C    $6CDF   LD       VC, #DF         ; Load 223 into VC
$B2E    $45E6   SNE      V5, #E6         ; Skip if V5 != 230
$B30    $D48F   DRW      V4, V8, #F      ; Draw 15-byte sprite at V4, V8
$B32    $3083   SE       V0, #83         ; Skip if V0 == 131
$B34    $E62E   UNKNOWN  $E62E           ; Unknown Exxx instruction
$B36    $1F6E   JP       $F6E            ; Jump to F6E
$B38    $346E   SE       V4, #6E         ; Skip if V4 == 110
$B3A    $ADB9   LD       I, $DB9         ; Load DB9 into I
$B3C    $DAF5   DRW      VA, VF, #5      ; Draw 5-byte sprite at VA, VF
$B3E    $E2A8   UNKNOWN  $E2A8           ; Unknown Exxx instruction
$B40    $FEC2   UNKNOWN  FEC2            ; Unknown Fxxx instruction
$B42    $911A   UNKNOWN  $911A           ; Unknown 9xxx instruction
$B44    $E851   UNKNOWN  $E851           ; Unknown Exxx instruction
$B46    $91CC   UNKNOWN  $91CC           ; Unknown 9xxx instruction
$B48    $B3BC   JP       V0, $3BC        ; Jump to V0 + 3BC
$B4A    $6FF4   LD       VF, #F4         ; Load 244 into VF
$B4C    $7F2D   ADD      VF, #2D         ; Add 45 to VF
$B4E    $8FC5   SUB      VF, VC          ; VF -= VC, VF = !borrow
$B50    $8544   ADD      V5, V4          ; V5 += V4, VF = carry
$B52    $BEAC   JP       V0, $EAC        ; Jump to V0 + EAC
$B54    $4727   SNE      V7, #27         ; Skip if V7 != 39
$B56    $A9CA   LD       I, $9CA         ; Load 9CA into I
$B58    $997E   UNKNOWN  $997E           ; Unknown 9xxx instruction
$B5A    $8798   UNKNOWN  8798            ; Unknown 8xxx instruction
$B5C    $B850   JP       V0, $850        ; Jump to V0 + 850
$B5E    $F92C   UNKNOWN  F92C            ; Unknown Fxxx instruction
$B60    $BD47   JP       V0, $D47        ; Jump to V0 + D47
$B62    $F9ED   UNKNOWN  F9ED            ; Unknown Fxxx instruction
$B64    $2C88   CALL     $C88            ; Call subroutine at C88
$B66    $F649   UNKNOWN  F649            ; Unknown Fxxx instruction
$B68    $BFB6   JP       V0, $FB6        ; Jump to V0 + FB6
$B6A    $400E   SNE      V0, #0E         ; Skip if V0 != 14
$B6C    $9B6E   UNKNOWN  $9B6E           ; Unknown 9xxx instruction
$B6E    $E819   UNKNOWN  $E819           ; Unknown Exxx instruction
$B70    $E164   UNKNOWN  $E164           ; Unknown Exxx instruction
$B72    $70E6   ADD      V0, #E6         ; Add 230 to V0
$B74    $531C   UNKNOWN  $531C           ; Unknown 5xxx instruction
$B76    $F460   UNKNOWN  F460            ; Unknown Fxxx instruction
$B78    $C1F0   RND      V1, #F0         ; V1 = random & F0
$B7A    $45A0   SNE      V5, #A0         ; Skip if V5 != 160
$B7C    $ABA8   LD       I, $BA8         ; Load BA8 into I
$B7E    $DA4B   DRW      VA, V4, #B      ; Draw 11-byte sprite at VA, V4
$B80    $3DBD   SE       VD, #BD         ; Skip if VD == 189
$B82    $9379   UNKNOWN  $9379           ; Unknown 9xxx instruction
$B84    $2EA2   CALL     $EA2            ; Call subroutine at EA2
$B86    $C29B   RND      V2, #9B         ; V2 = random & 9B
$B88    $9A32   UNKNOWN  $9A32           ; Unknown 9xxx instruction
$B8A    $456F   SNE      V5, #6F         ; Skip if V5 != 111
$B8C    $4075   SNE      V0, #75         ; Skip if V0 != 117
$B8E    $B233   JP       V0, $233        ; Jump to V0 + 233
$B90    $16F2   JP       $6F2            ; Jump to 6F2
$B92    $2DFE   CALL     $DFE            ; Call subroutine at DFE
$B94    $87A8   UNKNOWN  87A8            ; Unknown 8xxx instruction
$B96    $CB27   RND      VB, #27         ; VB = random & 27
$B98    $90DC   UNKNOWN  $90DC           ; Unknown 9xxx instruction
$B9A    $91AB   UNKNOWN  $91AB           ; Unknown 9xxx instruction
$B9C    $5E29   UNKNOWN  $5E29           ; Unknown 5xxx instruction
$B9E    $2D7F   CALL     $D7F            ; Call subroutine at D7F
$BA0    $6B4F   LD       VB, #4F         ; Load 79 into VB
$BA2    $C399   RND      V3, #99         ; V3 = random & 99
$BA4    $B7F3   JP       V0, $7F3        ; Jump to V0 + 7F3
$BA6    $8AEF   UNKNOWN  8AEF            ; Unknown 8xxx instruction
$BA8    $159C   JP       $59C            ; Jump to 59C
$BAA    $C9A4   RND      V9, #A4         ; V9 = random & A4
$BAC    $D8CA   DRW      V8, VC, #A      ; Draw 10-byte sprite at V8, VC
$BAE    $7692   ADD      V6, #92         ; Add 146 to V6
$BB0    $43FC   SNE      V3, #FC         ; Skip if V3 != 252
$BB2    $0B23   SYS      $B23            ; System call to B23
$BB4    $73B6   ADD      V3, #B6         ; Add 182 to V3
$BB6    $331E   SE       V3, #1E         ; Skip if V3 == 30
$BB8    $92C8   UNKNOWN  $92C8           ; Unknown 9xxx instruction
$BBA    $6E65   LD       VE, #65         ; Load 101 into VE
$BBC    $2668   CALL     $668            ; Call subroutine at 668
$BBE    $2645   CALL     $645            ; Call subroutine at 645
$BC0    $7808   ADD      V8, #08         ; Add 8 to V8
$BC2    $8930   LD       V9, V3          ; V9 = V3
$BC4    $22E9   CALL     $2E9            ; Call subroutine at 2E9
$BC6    $E94A   UNKNOWN  $E94A           ; Unknown Exxx instruction
$BC8    $6CDD   LD       VC, #DD         ; Load 221 into VC
$BCA    $111E   JP       $11E            ; Jump to 11E
$BCC    $F2E8   UNKNOWN  F2E8            ; Unknown Fxxx instruction
$BCE    $B215   JP       V0, $215        ; Jump to V0 + 215
$BD0    $1D00   JP       $D00            ; Jump to D00
$BD2    $A4E4   LD       I, $4E4         ; Load 4E4 into I
$BD4    $CD64   RND      VD, #64         ; VD = random & 64
$BD6    $F9D4   UNKNOWN  F9D4            ; Unknown Fxxx instruction
$BD8    $73F3   ADD      V3, #F3         ; Add 243 to V3
$BDA    $E7E4   UNKNOWN  $E7E4           ; Unknown Exxx instruction
$BDC    $D993   DRW      V9, V9, #3      ; Draw 3-byte sprite at V9, V9
$BDE    $ADD7   LD       I, $DD7         ; Load DD7 into I
$BE0    $B72B   JP       V0, $72B        ; Jump to V0 + 72B
$BE2    $EFAA   UNKNOWN  $EFAA           ; Unknown Exxx instruction
$BE4    $A088   LD       I, $088         ; Load 088 into I
$BE6    $E731   UNKNOWN  $E731           ; Unknown Exxx instruction
$BE8    $8ADD   UNKNOWN  8ADD            ; Unknown 8xxx instruction
$BEA    $171A   JP       $71A            ; Jump to 71A
$BEC    $0F2C   SYS      $F2C            ; System call to F2C
$BEE    $0A7A   SYS      $A7A            ; System call to A7A
$BF0    $919C   UNKNOWN  $919C           ; Unknown 9xxx instruction
$BF2    $0464   SYS      $464            ; System call to 464
$BF4    $C375   RND      V3, #75         ; V3 = random & 75
$BF6    $295F   CALL     $95F            ; Call subroutine at 95F
$BF8    $46D5   SNE      V6, #D5         ; Skip if V6 != 213
$BFA    $4FAF   SNE      VF, #AF         ; Skip if VF != 175
$BFC    $8730   LD       V7, V3          ; V7 = V3
$BFE    $7C56   ADD      VC, #56         ; Add 86 to VC
$C00    $C1A7   RND      V1, #A7         ; V1 = random & A7
$C02    $8626   SHR      V6              ; V6 >>= 1, VF = LSB
$C04    $2F89   CALL     $F89            ; Call subroutine at F89
$C06    $D97B   DRW      V9, V7, #B      ; Draw 11-byte sprite at V9, V7
$C08    $EA54   UNKNOWN  $EA54           ; Unknown Exxx instruction
$C0A    $616C   LD       V1, #6C         ; Load 108 into V1
$C0C    $4E6F   SNE      VE, #6F         ; Skip if VE != 111
$C0E    $F75C   UNKNOWN  F75C            ; Unknown Fxxx instruction
$C10    $062B   SYS      $62B            ; System call to 62B
$C12    $DB91   DRW      VB, V9, #1      ; Draw 1-byte sprite at VB, V9
$C14    $2CF2   CALL     $CF2            ; Call subroutine at CF2
$C16    $D37F   DRW      V3, V7, #F      ; Draw 15-byte sprite at V3, V7
$C18    $44F9   SNE      V4, #F9         ; Skip if V4 != 249
$C1A    $73BF   ADD      V3, #BF         ; Add 191 to V3
$C1C    $CFA1   RND      VF, #A1         ; VF = random & A1
$C1E    $A722   LD       I, $722         ; Load 722 into I
$C20    $A3B7   LD       I, $3B7         ; Load 3B7 into I
$C22    $2A86   CALL     $A86            ; Call subroutine at A86
$C24    $5B28   UNKNOWN  $5B28           ; Unknown 5xxx instruction
$C26    $2CDC   CALL     $CDC            ; Call subroutine at CDC
$C28    $27FD   CALL     $7FD            ; Call subroutine at 7FD
$C2A    $CB10   RND      VB, #10         ; VB = random & 10
$C2C    $1438   JP       $438            ; Jump to 438
$C2E    $630D   LD       V3, #0D         ; Load 13 into V3
$C30    $DCF6   DRW      VC, VF, #6      ; Draw 6-byte sprite at VC, VF
$C32    $C18F   RND      V1, #8F         ; V1 = random & 8F
$C34    $A806   LD       I, $806         ; Load 806 into I
$C36    $591F   UNKNOWN  $591F           ; Unknown 5xxx instruction
$C38    $B2CB   JP       V0, $2CB        ; Jump to V0 + 2CB
$C3A    $6CAE   LD       VC, #AE         ; Load 174 into VC
$C3C    $D1AC   DRW      V1, VA, #C      ; Draw 12-byte sprite at V1, VA
$C3E    $D5D4   DRW      V5, VD, #4      ; Draw 4-byte sprite at V5, VD
$C40    $A284   LD       I, $284         ; Load 284 into I
$C42    $9B8A   UNKNOWN  $9B8A           ; Unknown 9xxx instruction
$C44    $99B9   UNKNOWN  $99B9           ; Unknown 9xxx instruction
$C46    $CE96   RND      VE, #96         ; VE = random & 96
$C48    $F2B1   UNKNOWN  F2B1            ; Unknown Fxxx instruction
$C4A    $863D   UNKNOWN  863D            ; Unknown 8xxx instruction
$C4C    $103F   JP       $03F            ; Jump to 03F
$C4E    $F964   UNKNOWN  F964            ; Unknown Fxxx instruction
$C50    $AA1E   LD       I, $A1E         ; Load A1E into I
$C52    $80D5   SUB      V0, VD          ; V0 -= VD, VF = !borrow
$C54    $C5AE   RND      V5, #AE         ; V5 = random & AE
$C56    $44B3   SNE      V4, #B3         ; Skip if V4 != 179
$C58    $5D73   UNKNOWN  $5D73           ; Unknown 5xxx instruction
$C5A    $1085   JP       $085            ; Jump to 085
$C5C    $1018   JP       $018            ; Jump to 018
$C5E    $F2DA   UNKNOWN  F2DA            ; Unknown Fxxx instruction
$C60    $8184   ADD      V1, V8          ; V1 += V8, VF = carry
$C62    $4053   SNE      V0, #53         ; Skip if V0 != 83
$C64    $CB91   RND      VB, #91         ; VB = random & 91
$C66    $9B36   UNKNOWN  $9B36           ; Unknown 9xxx instruction
$C68    $6900   LD       V9, #00         ; Load 0 into V9
$C6A    $3A5E   SE       VA, #5E         ; Skip if VA == 94
$C6C    $9075   UNKNOWN  $9075           ; Unknown 9xxx instruction
$C6E    $7A67   ADD      VA, #67         ; Add 103 to VA
$C70    $5280   SE       V2, V8          ; Skip if V2 == V8
$C72    $8E7A   UNKNOWN  8E7A            ; Unknown 8xxx instruction
$C74    $9898   UNKNOWN  $9898           ; Unknown 9xxx instruction
$C76    $2A6F   CALL     $A6F            ; Call subroutine at A6F
$C78    $AD61   LD       I, $D61         ; Load D61 into I
$C7A    $D0C3   DRW      V0, VC, #3      ; Draw 3-byte sprite at V0, VC
$C7C    $3BBC   SE       VB, #BC         ; Skip if VB == 188
$C7E    $8297   SUBN     V2, V9          ; V2 = V9 - V2, VF = !borrow
$C80    $9267   UNKNOWN  $9267           ; Unknown 9xxx instruction
$C82    $C19F   RND      V1, #9F         ; V1 = random & 9F
$C84    $0A46   SYS      $A46            ; System call to A46
$C86    $1DAA   JP       $DAA            ; Jump to DAA
$C88    $2B2E   CALL     $B2E            ; Call subroutine at B2E
$C8A    $7AAA   ADD      VA, #AA         ; Add 170 to VA
$C8C    $FC40   UNKNOWN  FC40            ; Unknown Fxxx instruction
$C8E    $A3EC   LD       I, $3EC         ; Load 3EC into I
$C90    $7A6A   ADD      VA, #6A         ; Add 106 to VA
$C92    $1994   JP       $994            ; Jump to 994
$C94    $3D73   SE       VD, #73         ; Skip if VD == 115
$C96    $C56B   RND      V5, #6B         ; V5 = random & 6B
$C98    $9946   UNKNOWN  $9946           ; Unknown 9xxx instruction
$C9A    $50F6   UNKNOWN  $50F6           ; Unknown 5xxx instruction
$C9C    $1D39   JP       $D39            ; Jump to D39
$C9E    $7EE8   ADD      VE, #E8         ; Add 232 to VE
$CA0    $FDAB   UNKNOWN  FDAB            ; Unknown Fxxx instruction
$CA2    $4A15   SNE      VA, #15         ; Skip if VA != 21
$CA4    $2D58   CALL     $D58            ; Call subroutine at D58
$CA6    $CDC4   RND      VD, #C4         ; VD = random & C4
$CA8    $E36B   UNKNOWN  $E36B           ; Unknown Exxx instruction
$CAA    $C497   RND      V4, #97         ; V4 = random & 97
$CAC    $E2A9   UNKNOWN  $E2A9           ; Unknown Exxx instruction
$CAE    $77C2   ADD      V7, #C2         ; Add 194 to V7
$CB0    $8373   XOR      V3, V7          ; V3 ^= V7
$CB2    $DBF7   DRW      VB, VF, #7      ; Draw 7-byte sprite at VB, VF
$CB4    $6DC3   LD       VD, #C3         ; Load 195 into VD
$CB6    $F4A4   UNKNOWN  F4A4            ; Unknown Fxxx instruction
$CB8    $FD07   LD       VD, DT          ; VD = delay timer
$CBA    $92C2   UNKNOWN  $92C2           ; Unknown 9xxx instruction
$CBC    $C992   RND      V9, #92         ; V9 = random & 92
$CBE    $D7E0   DRW      V7, VE, #0      ; Draw 0-byte sprite at V7, VE
$CC0    $8FF1   OR       VF, VF          ; VF |= VF
$CC2    $E2BE   UNKNOWN  $E2BE           ; Unknown Exxx instruction
$CC4    $22AB   CALL     $2AB            ; Call subroutine at 2AB
$CC6    $385E   SE       V8, #5E         ; Skip if V8 == 94
$CC8    $30D5   SE       V0, #D5         ; Skip if V0 == 213
$CCA    $2ED0   CALL     $ED0            ; Call subroutine at ED0
$CCC    $5BE4   UNKNOWN  $5BE4           ; Unknown 5xxx instruction
$CCE    $6430   LD       V4, #30         ; Load 48 into V4
$CD0    $E78D   UNKNOWN  $E78D           ; Unknown Exxx instruction
$CD2    $962D   UNKNOWN  $962D           ; Unknown 9xxx instruction
$CD4    $C050   RND      V0, #50         ; V0 = random & 50
$CD6    $85DF   UNKNOWN  85DF            ; Unknown 8xxx instruction
$CD8    $CA48   RND      VA, #48         ; VA = random & 48
$CDA    $0930   SYS      $930            ; System call to 930
$CDC    $727B   ADD      V2, #7B         ; Add 123 to V2
$CDE    $FC76   UNKNOWN  FC76            ; Unknown Fxxx instruction
$CE0    $63BF   LD       V3, #BF         ; Load 191 into V3
$CE2    $618E   LD       V1, #8E         ; Load 142 into V1
$CE4    $F634   UNKNOWN  F634            ; Unknown Fxxx instruction
$CE6    $EEF6   UNKNOWN  $EEF6           ; Unknown Exxx instruction
$CE8    $1DF7   JP       $DF7            ; Jump to DF7
$CEA    $626D   LD       V2, #6D         ; Load 109 into V2
$CEC    $8ADB   UNKNOWN  8ADB            ; Unknown 8xxx instruction
$CEE    $3BC4   SE       VB, #C4         ; Skip if VB == 196
$CF0    $EE29   UNKNOWN  $EE29           ; Unknown Exxx instruction
$CF2    $342A   SE       V4, #2A         ; Skip if V4 == 42
$CF4    $9D5B   UNKNOWN  $9D5B           ; Unknown 9xxx instruction
$CF6    $5FC4   UNKNOWN  $5FC4           ; Unknown 5xxx instruction
$CF8    $66AE   LD       V6, #AE         ; Load 174 into V6
$CFA    $E155   UNKNOWN  $E155           ; Unknown Exxx instruction
$CFC    $49CE   SNE      V9, #CE         ; Skip if V9 != 206
$CFE    $5E76   UNKNOWN  $5E76           ; Unknown 5xxx instruction
$D00    $F936   UNKNOWN  F936            ; Unknown Fxxx instruction
$D02    $E588   UNKNOWN  $E588           ; Unknown Exxx instruction
$D04    $A7DF   LD       I, $7DF         ; Load 7DF into I
$D06    $3613   SE       V6, #13         ; Skip if V6 == 19
$D08    $4DF9   SNE      VD, #F9         ; Skip if VD != 249
$D0A    $678B   LD       V7, #8B         ; Load 139 into V7
$D0C    $1E1E   JP       $E1E            ; Jump to E1E
$D0E    $694E   LD       V9, #4E         ; Load 78 into V9
$D10    $75E8   ADD      V5, #E8         ; Add 232 to V5
$D12    $396D   SE       V9, #6D         ; Skip if V9 == 109
$D14    $0788   SYS      $788            ; System call to 788
$D16    $A12C   LD       I, $12C         ; Load 12C into I
$D18    $24F7   CALL     $4F7            ; Call subroutine at 4F7
$D1A    $5583   UNKNOWN  $5583           ; Unknown 5xxx instruction
$D1C    $0DC1   SYS      $DC1            ; System call to DC1
$D1E    $1356   JP       $356            ; Jump to 356
$D20    $009A   SYS      $09A            ; System call to 09A
$D22    $85CC   UNKNOWN  85CC            ; Unknown 8xxx instruction
$D24    $D5B9   DRW      V5, VB, #9      ; Draw 9-byte sprite at V5, VB
$D26    $02EC   SYS      $2EC            ; System call to 2EC
$D28    $3769   SE       V7, #69         ; Skip if V7 == 105
$D2A    $5C0B   UNKNOWN  $5C0B           ; Unknown 5xxx instruction
$D2C    $EF75   UNKNOWN  $EF75           ; Unknown Exxx instruction
$D2E    $7E38   ADD      VE, #38         ; Add 56 to VE
$D30    $67D6   LD       V7, #D6         ; Load 214 into V7
$D32    $5A23   UNKNOWN  $5A23           ; Unknown 5xxx instruction
$D34    $3221   SE       V2, #21         ; Skip if V2 == 33
$D36    $394E   SE       V9, #4E         ; Skip if V9 == 78
$D38    $AA2A   LD       I, $A2A         ; Load A2A into I
$D3A    $F4C4   UNKNOWN  F4C4            ; Unknown Fxxx instruction
$D3C    $76DA   ADD      V6, #DA         ; Add 218 to V6
$D3E    $8E0F   UNKNOWN  8E0F            ; Unknown 8xxx instruction
$D40    $64D9   LD       V4, #D9         ; Load 217 into V4
$D42    $A4A3   LD       I, $4A3         ; Load 4A3 into I
$D44    $61A4   LD       V1, #A4         ; Load 164 into V1
$D46    $4C5A   SNE      VC, #5A         ; Skip if VC != 90
$D48    $5D05   UNKNOWN  $5D05           ; Unknown 5xxx instruction
$D4A    $1E72   JP       $E72            ; Jump to E72
$D4C    $8982   AND      V9, V8          ; V9 &= V8
$D4E    $CF17   RND      VF, #17         ; VF = random & 17
$D50    $9CBA   UNKNOWN  $9CBA           ; Unknown 9xxx instruction
$D52    $6284   LD       V2, #84         ; Load 132 into V2
$D54    $A265   LD       I, $265         ; Load 265 into I
$D56    $70AB   ADD      V0, #AB         ; Add 171 to V0
$D58    $8EE4   ADD      VE, VE          ; VE += VE, VF = carry
$D5A    $D313   DRW      V3, V1, #3      ; Draw 3-byte sprite at V3, V1
$D5C    $C994   RND      V9, #94         ; V9 = random & 94
$D5E    $CA41   RND      VA, #41         ; VA = random & 41
$D60    $F257   UNKNOWN  F257            ; Unknown Fxxx instruction
$D62    $EB68   UNKNOWN  $EB68           ; Unknown Exxx instruction
$D64    $4CD6   SNE      VC, #D6         ; Skip if VC != 214
$D66    $0A5A   SYS      $A5A            ; System call to A5A
$D68    $F297   UNKNOWN  F297            ; Unknown Fxxx instruction
$D6A    $6409   LD       V4, #09         ; Load 9 into V4
$D6C    $71B0   ADD      V1, #B0         ; Add 176 to V1
$D6E    $35DC   SE       V5, #DC         ; Skip if V5 == 220
$D70    $C3BF   RND      V3, #BF         ; V3 = random & BF
$D72    $FCD4   UNKNOWN  FCD4            ; Unknown Fxxx instruction
$D74    $E113   UNKNOWN  $E113           ; Unknown Exxx instruction
$D76    $D74A   DRW      V7, V4, #A      ; Draw 10-byte sprite at V7, V4
$D78    $BF90   JP       V0, $F90        ; Jump to V0 + F90
$D7A    $FCAA   UNKNOWN  FCAA            ; Unknown Fxxx instruction
$D7C    $4A2E   SNE      VA, #2E         ; Skip if VA != 46
$D7E    $7D28   ADD      VD, #28         ; Add 40 to VD
$D80    $B280   JP       V0, $280        ; Jump to V0 + 280
$D82    $7500   ADD      V5, #00         ; Add 0 to V5
$D84    $4A96   SNE      VA, #96         ; Skip if VA != 150
$D86    $30FA   SE       V0, #FA         ; Skip if V0 == 250
$D88    $D119   DRW      V1, V1, #9      ; Draw 9-byte sprite at V1, V1
$D8A    $F57E   UNKNOWN  F57E            ; Unknown Fxxx instruction
$D8C    $606D   LD       V0, #6D         ; Load 109 into V0
$D8E    $6227   LD       V2, #27         ; Load 39 into V2
$D90    $79C9   ADD      V9, #C9         ; Add 201 to V9
$D92    $071F   SYS      $71F            ; System call to 71F
$D94    $ECB5   UNKNOWN  $ECB5           ; Unknown Exxx instruction
$D96    $4FDC   SNE      VF, #DC         ; Skip if VF != 220
$D98    $AF7F   LD       I, $F7F         ; Load F7F into I
$D9A    $3709   SE       V7, #09         ; Skip if V7 == 9
$D9C    $9064   UNKNOWN  $9064           ; Unknown 9xxx instruction
$D9E    $9215   UNKNOWN  $9215           ; Unknown 9xxx instruction
$DA0    $C8FA   RND      V8, #FA         ; V8 = random & FA
$DA2    $82A1   OR       V2, VA          ; V2 |= VA
$DA4    $DB78   DRW      VB, V7, #8      ; Draw 8-byte sprite at VB, V7
$DA6    $316B   SE       V1, #6B         ; Skip if V1 == 107
$DA8    $17B1   JP       $7B1            ; Jump to 7B1
$DAA    $B6AF   JP       V0, $6AF        ; Jump to V0 + 6AF
$DAC    $9AD4   UNKNOWN  $9AD4           ; Unknown 9xxx instruction
$DAE    $C5FF   RND      V5, #FF         ; V5 = random & FF
$DB0    $96AA   UNKNOWN  $96AA           ; Unknown 9xxx instruction
$DB2    $A311   LD       I, $311         ; Load 311 into I
$DB4    $6D0F   LD       VD, #0F         ; Load 15 into VD
$DB6    $111D   JP       $11D            ; Jump to 11D
$DB8    $0BCA   SYS      $BCA            ; System call to BCA
$DBA    $7AA9   ADD      VA, #A9         ; Add 169 to VA
$DBC    $A73A   LD       I, $73A         ; Load 73A into I
$DBE    $4495   SNE      V4, #95         ; Skip if V4 != 149
$DC0    $7266   ADD      V2, #66         ; Add 102 to V2
$DC2    $B3DD   JP       V0, $3DD        ; Jump to V0 + 3DD
$DC4    $5A9A   UNKNOWN  $5A9A           ; Unknown 5xxx instruction
$DC6    $442C   SNE      V4, #2C         ; Skip if V4 != 44
$DC8    $0EAE   SYS      $EAE            ; System call to EAE
$DCA    $8207   SUBN     V2, V0          ; V2 = V0 - V2, VF = !borrow
$DCC    $4689   SNE      V6, #89         ; Skip if V6 != 137
$DCE    $2218   CALL     $218            ; Call subroutine at 218
$DD0    $CAA0   RND      VA, #A0         ; VA = random & A0
$DD2    $0539   SYS      $539            ; System call to 539
$DD4    $1CCC   JP       $CCC            ; Jump to CCC
$DD6    $9886   UNKNOWN  $9886           ; Unknown 9xxx instruction
$DD8    $EEE8   UNKNOWN  $EEE8           ; Unknown Exxx instruction
$DDA    $49BE   SNE      V9, #BE         ; Skip if V9 != 190
$DDC    $05B4   SYS      $5B4            ; System call to 5B4
$DDE    $8606   SHR      V6              ; V6 >>= 1, VF = LSB
$DE0    $A5E9   LD       I, $5E9         ; Load 5E9 into I
$DE2    $8988   UNKNOWN  8988            ; Unknown 8xxx instruction
$DE4    $00B3   SYS      $0B3            ; System call to 0B3
$DE6    $F9B2   UNKNOWN  F9B2            ; Unknown Fxxx instruction
$DE8    $B70C   JP       V0, $70C        ; Jump to V0 + 70C
$DEA    $B34B   JP       V0, $34B        ; Jump to V0 + 34B
$DEC    $B771   JP       V0, $771        ; Jump to V0 + 771
$DEE    $EBDE   UNKNOWN  $EBDE           ; Unknown Exxx instruction
$DF0    $08C2   SYS      $8C2            ; System call to 8C2
$DF2    $F28A   UNKNOWN  F28A            ; Unknown Fxxx instruction
$DF4    $65A1   LD       V5, #A1         ; Load 161 into V5
$DF6    $FEDB   UNKNOWN  FEDB            ; Unknown Fxxx instruction
$DF8    $B0D6   JP       V0, $0D6        ; Jump to V0 + 0D6
$DFA    $30F7   SE       V0, #F7         ; Skip if V0 == 247
$DFC    $D6B5   DRW      V6, VB, #5      ; Draw 5-byte sprite at V6, VB
$DFE    $7879   ADD      V8, #79         ; Add 121 to V8
$E00    $C4D4   RND      V4, #D4         ; V4 = random & D4
$E02    $2AB3   CALL     $AB3            ; Call subroutine at AB3
$E04    $877D   UNKNOWN  877D            ; Unknown 8xxx instruction
$E06    $9E51   UNKNOWN  $9E51           ; Unknown 9xxx instruction
$E08    $017C   SYS      $17C            ; System call to 17C
$E0A    $7803   ADD      V8, #03         ; Add 3 to V8
$E0C    $519F   UNKNOWN  $519F           ; Unknown 5xxx instruction
$E0E    $4D75   SNE      VD, #75         ; Skip if VD != 117
$E10    $1FC1   JP       $FC1            ; Jump to FC1
$E12    $84CC   UNKNOWN  84CC            ; Unknown 8xxx instruction
$E14    $C55C   RND      V5, #5C         ; V5 = random & 5C
$E16    $400B   SNE      V0, #0B         ; Skip if V0 != 11
$E18    $59B2   UNKNOWN  $59B2           ; Unknown 5xxx instruction
$E1A    $2E48   CALL     $E48            ; Call subroutine at E48
$E1C    $B1A5   JP       V0, $1A5        ; Jump to V0 + 1A5
$E1E    $5597   UNKNOWN  $5597           ; Unknown 5xxx instruction
$E20    $9BE0   SNE      VB, VE          ; Skip if VB != VE
$E22    $167B   JP       $67B            ; Jump to 67B
$E24    $A94D   LD       I, $94D         ; Load 94D into I
$E26    $198E   JP       $98E            ; Jump to 98E
$E28    $8FA7   SUBN     VF, VA          ; VF = VA - VF, VF = !borrow
$E2A    $B92A   JP       V0, $92A        ; Jump to V0 + 92A
$E2C    $FDF0   UNKNOWN  FDF0            ; Unknown Fxxx instruction
$E2E    $5B7A   UNKNOWN  $5B7A           ; Unknown 5xxx instruction
$E30    $D533   DRW      V5, V3, #3      ; Draw 3-byte sprite at V5, V3
$E32    $1E0F   JP       $E0F            ; Jump to E0F
$E34    $1E09   JP       $E09            ; Jump to E09
$E36    $8E88   UNKNOWN  8E88            ; Unknown 8xxx instruction
$E38    $B6F3   JP       V0, $6F3        ; Jump to V0 + 6F3
$E3A    $1CBC   JP       $CBC            ; Jump to CBC
$E3C    $5A01   UNKNOWN  $5A01           ; Unknown 5xxx instruction
$E3E    $C6F1   RND      V6, #F1         ; V6 = random & F1
$E40    $A195   LD       I, $195         ; Load 195 into I
$E42    $53BE   UNKNOWN  $53BE           ; Unknown 5xxx instruction
$E44    $BA08   JP       V0, $A08        ; Jump to V0 + A08
$E46    $CF98   RND      VF, #98         ; VF = random & 98
$E48    $5351   UNKNOWN  $5351           ; Unknown 5xxx instruction
$E4A    $170B   JP       $70B            ; Jump to 70B
$E4C    $F4BA   UNKNOWN  F4BA            ; Unknown Fxxx instruction
$E4E    $93D7   UNKNOWN  $93D7           ; Unknown 9xxx instruction
$E50    $FCD8   UNKNOWN  FCD8            ; Unknown Fxxx instruction
$E52    $C10F   RND      V1, #0F         ; V1 = random & 0F
$E54    $76FD   ADD      V6, #FD         ; Add 253 to V6
$E56    $2AE4   CALL     $AE4            ; Call subroutine at AE4
$E58    $B7C2   JP       V0, $7C2        ; Jump to V0 + 7C2
$E5A    $F626   UNKNOWN  F626            ; Unknown Fxxx instruction
$E5C    $4340   SNE      V3, #40         ; Skip if V3 != 64
$E5E    $B021   JP       V0, $021        ; Jump to V0 + 021
$E60    $0C42   SYS      $C42            ; System call to C42
$E62    $3471   SE       V4, #71         ; Skip if V4 == 113
$E64    $2C87   CALL     $C87            ; Call subroutine at C87
$E66    $262F   CALL     $62F            ; Call subroutine at 62F
$E68    $BE6E   JP       V0, $E6E        ; Jump to V0 + E6E
$E6A    $0FF0   SYS      $FF0            ; System call to FF0
$E6C    $B3D0   JP       V0, $3D0        ; Jump to V0 + 3D0
$E6E    $399A   SE       V9, #9A         ; Skip if V9 == 154
$E70    $23C1   CALL     $3C1            ; Call subroutine at 3C1
$E72    $6178   LD       V1, #78         ; Load 120 into V1
$E74    $C1BD   RND      V1, #BD         ; V1 = random & BD
$E76    $1623   JP       $623            ; Jump to 623
$E78    $0FA9   SYS      $FA9            ; System call to FA9
$E7A    $37D2   SE       V7, #D2         ; Skip if V7 == 210
$E7C    $E4B4   UNKNOWN  $E4B4           ; Unknown Exxx instruction
$E7E    $1E1A   JP       $E1A            ; Jump to E1A
$E80    $3683   SE       V6, #83         ; Skip if V6 == 131
$E82    $10FF   JP       $0FF            ; Jump to 0FF
$E84    $2DE2   CALL     $DE2            ; Call subroutine at DE2
$E86    $BB11   JP       V0, $B11        ; Jump to V0 + B11
$E88    $EF5F   UNKNOWN  $EF5F           ; Unknown Exxx instruction
$E8A    $9DC0   SNE      VD, VC          ; Skip if VD != VC
$E8C    $EB18   UNKNOWN  $EB18           ; Unknown Exxx instruction
$E8E    $7E95   ADD      VE, #95         ; Add 149 to VE
$E90    $4D80   SNE      VD, #80         ; Skip if VD != 128
$E92    $4557   SNE      V5, #57         ; Skip if V5 != 87
$E94    $9746   UNKNOWN  $9746           ; Unknown 9xxx instruction
$E96    $95D9   UNKNOWN  $95D9           ; Unknown 9xxx instruction
$E98    $DE67   DRW      VE, V6, #7      ; Draw 7-byte sprite at VE, V6
$E9A    $5B7B   UNKNOWN  $5B7B           ; Unknown 5xxx instruction
$E9C    $14BF   JP       $4BF            ; Jump to 4BF
$E9E    $DB55   DRW      VB, V5, #5      ; Draw 5-byte sprite at VB, V5
$EA0    $D84C   DRW      V8, V4, #C      ; Draw 12-byte sprite at V8, V4
$EA2    $A245   LD       I, $245         ; Load 245 into I
$EA4    $90BA   UNKNOWN  $90BA           ; Unknown 9xxx instruction
$EA6    $65B6   LD       V5, #B6         ; Load 182 into V5
$EA8    $C598   RND      V5, #98         ; V5 = random & 98
$EAA    $4167   SNE      V1, #67         ; Skip if V1 != 103
$EAC    $5768   UNKNOWN  $5768           ; Unknown 5xxx instruction
$EAE    $D609   DRW      V6, V0, #9      ; Draw 9-byte sprite at V6, V0
$EB0    $75D0   ADD      V5, #D0         ; Add 208 to V5
$EB2    $00CA   SYS      $0CA            ; System call to 0CA
$EB4    $E9BD   UNKNOWN  $E9BD           ; Unknown Exxx instruction
$EB6    $F677   UNKNOWN  F677            ; Unknown Fxxx instruction
$EB8    $37C4   SE       V7, #C4         ; Skip if V7 == 196
$EBA    $471D   SNE      V7, #1D         ; Skip if V7 != 29
$EBC    $6F86   LD       VF, #86         ; Load 134 into VF
$EBE    $CD83   RND      VD, #83         ; VD = random & 83
$EC0    $B104   JP       V0, $104        ; Jump to V0 + 104
$EC2    $E45E   UNKNOWN  $E45E           ; Unknown Exxx instruction
$EC4    $A589   LD       I, $589         ; Load 589 into I
$EC6    $C0A5   RND      V0, #A5         ; V0 = random & A5
$EC8    $30B1   SE       V0, #B1         ; Skip if V0 == 177
$ECA    $6304   LD       V3, #04         ; Load 4 into V3
$ECC    $5BD2   UNKNOWN  $5BD2           ; Unknown 5xxx instruction
$ECE    $7BCF   ADD      VB, #CF         ; Add 207 to VB
$ED0    $519D   UNKNOWN  $519D           ; Unknown 5xxx instruction
$ED2    $6123   LD       V1, #23         ; Load 35 into V1
$ED4    $8DD7   SUBN     VD, VD          ; VD = VD - VD, VF = !borrow
$ED6    $6126   LD       V1, #26         ; Load 38 into V1
$ED8    $76F4   ADD      V6, #F4         ; Add 244 to V6
$EDA    $7DF7   ADD      VD, #F7         ; Add 247 to VD
$EDC    $AD3B   LD       I, $D3B         ; Load D3B into I
$EDE    $BE55   JP       V0, $E55        ; Jump to V0 + E55
$EE0    $56A2   UNKNOWN  $56A2           ; Unknown 5xxx instruction
$EE2    $56AA   UNKNOWN  $56AA           ; Unknown 5xxx instruction
$EE4    $A0DC   LD       I, $0DC         ; Load 0DC into I
$EE6    $A35F   LD       I, $35F         ; Load 35F into I
$EE8    $3FBF   SE       VF, #BF         ; Skip if VF == 191
$EEA    $F87E   UNKNOWN  F87E            ; Unknown Fxxx instruction
$EEC    $94D3   UNKNOWN  $94D3           ; Unknown 9xxx instruction
$EEE    $7C37   ADD      VC, #37         ; Add 55 to VC
$EF0    $450E   SNE      V5, #0E         ; Skip if V5 != 14
$EF2    $44BE   SNE      V4, #BE         ; Skip if V4 != 190
$EF4    $0A2B   SYS      $A2B            ; System call to A2B
$EF6    $95D0   SNE      V5, VD          ; Skip if V5 != VD
$EF8    $53E6   UNKNOWN  $53E6           ; Unknown 5xxx instruction
$EFA    $ECB8   UNKNOWN  $ECB8           ; Unknown Exxx instruction
$EFC    $82D0   LD       V2, VD          ; V2 = VD
$EFE    $6163   LD       V1, #63         ; Load 99 into V1
$F00    $3600   SE       V6, #00         ; Skip if V6 == 0
$F02    $C98F   RND      V9, #8F         ; V9 = random & 8F
$F04    $FB0D   UNKNOWN  FB0D            ; Unknown Fxxx instruction
$F06    $C621   RND      V6, #21         ; V6 = random & 21
$F08    $BA99   JP       V0, $A99        ; Jump to V0 + A99
$F0A    $1698   JP       $698            ; Jump to 698
$F0C    $E094   UNKNOWN  $E094           ; Unknown Exxx instruction
$F0E    $82F9   UNKNOWN  82F9            ; Unknown 8xxx instruction
$F10    $17E6   JP       $7E6            ; Jump to 7E6
$F12    $E32C   UNKNOWN  $E32C           ; Unknown Exxx instruction
$F14    $B811   JP       V0, $811        ; Jump to V0 + 811
$F16    $C454   RND      V4, #54         ; V4 = random & 54
$F18    $9D24   UNKNOWN  $9D24           ; Unknown 9xxx instruction
$F1A    $88F9   UNKNOWN  88F9            ; Unknown 8xxx instruction
$F1C    $167D   JP       $67D            ; Jump to 67D
$F1E    $7BEB   ADD      VB, #EB         ; Add 235 to VB
$F20    $EFAD   UNKNOWN  $EFAD           ; Unknown Exxx instruction
$F22    $B3D0   JP       V0, $3D0        ; Jump to V0 + 3D0
$F24    $7E15   ADD      VE, #15         ; Add 21 to VE
$F26    $4F4A   SNE      VF, #4A         ; Skip if VF != 74
$F28    $5233   UNKNOWN  $5233           ; Unknown 5xxx instruction
$F2A    $43A4   SNE      V3, #A4         ; Skip if V3 != 164
$F2C    $8C14   ADD      VC, V1          ; VC += V1, VF = carry
$F2E    $637E   LD       V3, #7E         ; Load 126 into V3
$F30    $1640   JP       $640            ; Jump to 640
$F32    $C69B   RND      V6, #9B         ; V6 = random & 9B
$F34    $5FBE   UNKNOWN  $5FBE           ; Unknown 5xxx instruction
$F36    $9010   SNE      V0, V1          ; Skip if V0 != V1
$F38    $A786   LD       I, $786         ; Load 786 into I
$F3A    $95B2   UNKNOWN  $95B2           ; Unknown 9xxx instruction
$F3C    $324A   SE       V2, #4A         ; Skip if V2 == 74
$F3E    $0A8A   SYS      $A8A            ; System call to A8A
$F40    $710D   ADD      V1, #0D         ; Add 13 to V1
$F42    $7065   ADD      V0, #65         ; Add 101 to V0
$F44    $FF06   UNKNOWN  FF06            ; Unknown Fxxx instruction
$F46    $C9DC   RND      V9, #DC         ; V9 = random & DC
$F48    $5489   UNKNOWN  $5489           ; Unknown 5xxx instruction
$F4A    $6C5F   LD       VC, #5F         ; Load 95 into VC
$F4C    $D04C   DRW      V0, V4, #C      ; Draw 12-byte sprite at V0, V4
$F4E    $DFEB   DRW      VF, VE, #B      ; Draw 11-byte sprite at VF, VE
$F50    $1258   JP       $258            ; Jump to 258
$F52    $67E3   LD       V7, #E3         ; Load 227 into V7
$F54    $B39B   JP       V0, $39B        ; Jump to V0 + 39B
$F56    $B02C   JP       V0, $02C        ; Jump to V0 + 02C
$F58    $3E8D   SE       VE, #8D         ; Skip if VE == 141
$F5A    $8A6C   UNKNOWN  8A6C            ; Unknown 8xxx instruction
$F5C    $CF02   RND      VF, #02         ; VF = random & 02
$F5E    $BA56   JP       V0, $A56        ; Jump to V0 + A56
$F60    $67DA   LD       V7, #DA         ; Load 218 into V7
$F62    $C9C3   RND      V9, #C3         ; V9 = random & C3
$F64    $4D09   SNE      VD, #09         ; Skip if VD != 9
$F66    $491A   SNE      V9, #1A         ; Skip if V9 != 26
$F68    $1AA6   JP       $AA6            ; Jump to AA6
$F6A    $06A5   SYS      $6A5            ; System call to 6A5
$F6C    $48B5   SNE      V8, #B5         ; Skip if V8 != 181
$F6E    $705B   ADD      V0, #5B         ; Add 91 to V0
$F70    $3D51   SE       VD, #51         ; Skip if VD == 81
$F72    $CE8A   RND      VE, #8A         ; VE = random & 8A
$F74    $7980   ADD      V9, #80         ; Add 128 to V9
$F76    $1BE3   JP       $BE3            ; Jump to BE3
$F78    $C0E6   RND      V0, #E6         ; V0 = random & E6
$F7A    $34B1   SE       V4, #B1         ; Skip if V4 == 177
$F7C    $5515   UNKNOWN  $5515           ; Unknown 5xxx instruction
$F7E    $8512   AND      V5, V1          ; V5 &= V1
$F80    $4BF8   SNE      VB, #F8         ; Skip if VB != 248
$F82    $B885   JP       V0, $885        ; Jump to V0 + 885
$F84    $72DA   ADD      V2, #DA         ; Add 218 to V2
$F86    $7961   ADD      V9, #61         ; Add 97 to V9
$F88    $04BA   SYS      $4BA            ; System call to 4BA
$F8A    $EF9E   SKP      VF              ; Skip if key VF pressed
$F8C    $B923   JP       V0, $923        ; Jump to V0 + 923
$F8E    $6F6A   LD       VF, #6A         ; Load 106 into VF
$F90    $3086   SE       V0, #86         ; Skip if V0 == 134
$F92    $75D7   ADD      V5, #D7         ; Add 215 to V5
$F94    $21DC   CALL     $1DC            ; Call subroutine at 1DC
$F96    $4229   SNE      V2, #29         ; Skip if V2 != 41
$F98    $0A10   SYS      $A10            ; System call to A10
$F9A    $D5AF   DRW      V5, VA, #F      ; Draw 15-byte sprite at V5, VA
$F9C    $0C65   SYS      $C65            ; System call to C65
$F9E    $95F7   UNKNOWN  $95F7           ; Unknown 9xxx instruction
$FA0    $AAAD   LD       I, $AAD         ; Load AAD into I
$FA2    $1380   JP       $380            ; Jump to 380
$FA4    $7E4F   ADD      VE, #4F         ; Add 79 to VE
$FA6    $D0BF   DRW      V0, VB, #F      ; Draw 15-byte sprite at V0, VB
$FA8    $29F0   CALL     $9F0            ; Call subroutine at 9F0
$FAA    $A1E1   LD       I, $1E1         ; Load 1E1 into I
$FAC    $2B8F   CALL     $B8F            ; Call subroutine at B8F
$FAE    $B90B   JP       V0, $90B        ; Jump to V0 + 90B
$FB0    $7D13   ADD      VD, #13         ; Add 19 to VD
$FB2    $FB0B   UNKNOWN  FB0B            ; Unknown Fxxx instruction
$FB4    $9634   UNKNOWN  $9634           ; Unknown 9xxx instruction
$FB6    $D296   DRW      V2, V9, #6      ; Draw 6-byte sprite at V2, V9
$FB8    $608B   LD       V0, #8B         ; Load 139 into V0
$FBA    $9828   UNKNOWN  $9828           ; Unknown 9xxx instruction
$FBC    $0C90   SYS      $C90            ; System call to C90
$FBE    $F980   UNKNOWN  F980            ; Unknown Fxxx instruction
$FC0    $D615   DRW      V6, V1, #5      ; Draw 5-byte sprite at V6, V1
$FC2    $2C1C   CALL     $C1C            ; Call subroutine at C1C
$FC4    $694B   LD       V9, #4B         ; Load 75 into V9
$FC6    $1A63   JP       $A63            ; Jump to A63
$FC8    $96C1   UNKNOWN  $96C1           ; Unknown 9xxx instruction
$FCA    $8A4C   UNKNOWN  8A4C            ; Unknown 8xxx instruction
$FCC    $B870   JP       V0, $870        ; Jump to V0 + 870
$FCE    $141A   JP       $41A            ; Jump to 41A
$FD0    $D4C9   DRW      V4, VC, #9      ; Draw 9-byte sprite at V4, VC
$FD2    $3E99   SE       VE, #99         ; Skip if VE == 153
$FD4    $FEE0   UNKNOWN  FEE0            ; Unknown Fxxx instruction
$FD6    $0A5A   SYS      $A5A            ; System call to A5A
$FD8    $B1A2   JP       V0, $1A2        ; Jump to V0 + 1A2
$FDA    $691F   LD       V9, #1F         ; Load 31 into V9
$FDC    $C1A6   RND      V1, #A6         ; V1 = random & A6
$FDE    $072D   SYS      $72D            ; System call to 72D
$FE0    $6B35   LD       VB, #35         ; Load 53 into VB
$FE2    $AFA4   LD       I, $FA4         ; Load FA4 into I
$FE4    $8F5C   UNKNOWN  8F5C            ; Unknown 8xxx instruction
$FE6    $422F   SNE      V2, #2F         ; Skip if V2 != 47
$FE8    $B574   JP       V0, $574        ; Jump to V0 + 574
$FEA    $A5D9   LD       I, $5D9         ; Load 5D9 into I
$FEC    $3D34   SE       VD, #34         ; Skip if VD == 52
$FEE    $0163   SYS      $163            ; System call to 163
$FF0    $01BD   SYS      $1BD            ; System call to 1BD
$FF2    $D361   DRW      V3, V6, #1      ; Draw 1-byte sprite at V3, V6
$FF4    $C384   RND      V3, #84         ; V3 = random & 84
$FF6    $0860   SYS      $860            ; System call to 860
$FF8    $851A   UNKNOWN  851A            ; Unknown 8xxx instruction
$FFA    $5188   UNKNOWN  $5188           ; Unknown 5xxx instruction
$FFC    $FC82   UNKNOWN  FC82            ; Unknown Fxxx instruction
$FFE    $9D70   SNE      VD, V7          ; Skip if VD != V7

ALGORITHMIC ANALYSIS:
==============================
Instruction Distribution:
  UNKNOWN : 468 (26.1%)
  LD      : 262 (14.6%)
  JP      : 219 (12.2%)
  SNE     : 124 ( 6.9%)
  ADD     : 118 ( 6.6%)
  SE      : 118 ( 6.6%)
  RND     : 116 ( 6.5%)
  SYS     : 116 ( 6.5%)
  CALL    : 105 ( 5.9%)
  DRW     :  97 ( 5.4%)
  AND     :  10 ( 0.6%)
  SUB     :  10 ( 0.6%)
  SUBN    :   7 ( 0.4%)
  SHR     :   7 ( 0.4%)
  OR      :   5 ( 0.3%)
  SHL     :   5 ( 0.3%)
  XOR     :   4 ( 0.2%)
  SKP     :   1 ( 0.1%)

Memory Operations: 380 (21.2%)
Arithmetic Operations: 154 (8.6%)
